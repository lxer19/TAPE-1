URL: http://voronoi.sbp.ri.cmu.edu/~choset/papers/howiethesis.ps.gz
Refering-URL: http://voronoi.sbp.ri.cmu.edu/~choset/papers.html
Root-URL: 
Title: Sensor Based Motion Planning: The Hierarchical Generalized Voronoi Graph  
Degree: Thesis by Howie Choset In Partial Fulfillment of the Requirements for the Degree of Doctor of Philosophy  
Date: 1996 (Defended March 5, 1996)  
Address: Pasadena, California  
Affiliation: California Institute of Technology  
Abstract-found: 0
Intro-found: 1
Reference: <institution> 197 Bibliography </institution>
Reference: [1] <author> R. Abraham, J.E. Marsden, and T. Ratiu. </author> <title> Manifolds, Tensor Analysis, and Applications. </title> <publisher> Springer-Verlag, </publisher> <address> New York, 2 edition, </address> <year> 1988. </year>
Reference-contexts: A point c is within line of sight of x if there exists a straight line segment which connects x and c without penetrating any obstacle. That is, c is within line of sight of x if for all t 2 <ref> [0; 1] </ref>, (x (1 t) + ct) lies in F S. <p> We now show that the GVG is truly one-dimensional. This is done by iteratively invoking the pre-image theorem. Recall that for two manifolds M and N of dimension m and n, respectively, the pre-image theorem (also known as the submersion theorem) <ref> [1] </ref> is: 45 locations. <p> Proof: The strategy of this proof is to show that a path between any two arbitrary points in the free space can be deformed into a path on the generalized Voronoi complex, V 2 . Recall X is a connected set. Let c : <ref> [0; 1] </ref> ! X be a continuous mapping representing a continuous path between c (0) = q s 2 X and c (1) = q g 2 X. Note, q s and q g are called the "start" and "goal" locations of a path, respectively. <p> Now, all that needs to be shown is that _q s and _q g are connected in the generalized Voronoi complex. Recall, c : <ref> [0; 1] </ref> ! X is a continuous path between q s and q g where c (0) = q s and c (1) = q g . For each t 2 [0; 1] assign the index of the generalized Voronoi cell for which c (t) 2 X belongs. <p> Recall, c : <ref> [0; 1] </ref> ! X is a continuous path between q s and q g where c (0) = q s and c (1) = q g . For each t 2 [0; 1] assign the index of the generalized Voronoi cell for which c (t) 2 X belongs. In other words, let f c : [0; 1] ! fj 1 ; : : : ; j k g fj 1 ; : : : ; j n g. <p> For each t 2 <ref> [0; 1] </ref> assign the index of the generalized Voronoi cell for which c (t) 2 X belongs. In other words, let f c : [0; 1] ! fj 1 ; : : : ; j k g fj 1 ; : : : ; j n g. Note, the image is a subset of all of the cells because the path typically does not pass through all the cells.
Reference: [2] <author> F. Aurenhammer. </author> <title> Voronoi Diagrams | A Survey of a Fundamental Geometric Structure. </title> <journal> ACM Computing Surveys, </journal> <volume> 23 </volume> <pages> 345-405, </pages> <year> 1991. </year>
Reference-contexts: The GVD is the locus of points equidistant to two or more obstacles which are convex sets in the plane. (The Voronoi diagram (VD) is the set of points equidistant to two or more isolated points (sometimes termed sites) in the plane. See Aurenhammer <ref> [2] </ref> for survey on Voronoi diagrams.) The GVD was first used for motion planning in [40]. Active research in applying the GVD to motion planning began with O'Dunlaing and Yap [34], who considered motion planning for a disk in the plane.
Reference: [3] <author> D. Avis and B.K. Bhattacharya. </author> <title> Algorithms for Computing d-dimensional Voronoi Diagrams and Their Duals. </title> <booktitle> Advances in Computing Research, </booktitle> <volume> 1 </volume> <pages> 159-180, </pages> <year> 1983. </year>
Reference-contexts: In [36], an incremental approach to create a Voronoi diagram-like structure, which is limited to the case of a plane, was introduced. Prior work (e.g., Avis and Bhattacharya <ref> [3] </ref>) describes the Voronoi graph, an extension of the Voronoi diagram extended into higher dimensions. The Voronoi graph is the locus of points in m dimensions equidistant to m point sites. <p> In m dimensions, a regular m-equidistant face is an RVG edge and it is equidistant to m closest point objects. Such a structure has been previously termed a Voronoi graph edge <ref> [3] </ref>, but here, we will label it a regular Voronoi edge to better distinguish it from a generalized Voronoi edge. Let x be a point on a k-equidistant face, and let fc i g denote the set of closest points of the k closest obstacles, fC i g, to x.
Reference: [4] <author> J. Borenstein and J. Koren. </author> <title> Real-time Onstacle Avoidance for Fast Mobile Robots in Cluttered Environments. </title> <booktitle> In IEEE Conference of Robotics and Automation, </booktitle> <pages> pages 572-577, </pages> <address> Cincinnati, Ohio, </address> <month> May </month> <year> 1990. </year>
Reference-contexts: Since there are strong experimental results indicating the utility of these approaches (such as [22]), some of these algorithms may provide a future basis for provably correct sensor based planners. Another type of heuristic approach involves the discretization of a planar world into pixels (Borenstein and Koren <ref> [4] </ref>). In this approach, each pixel is assigned a value indicating the likelihood that it overlaps an obstacle.
Reference: [5] <author> R.A. Brooks. </author> <title> A Robust Layered Control System for a Mobile Robot. </title> <journal> IEEE Journal on Robotics and Automation, </journal> <volume> RA-2, </volume> <month> March </month> <year> 1986. </year>
Reference-contexts: Typically, these heuristic algorithms are limited to two-dimensional environments, where the geometry and topology of the problem is simple. One class of heuristic algorithms is a behavioral based approach in which the robot is armed with a simple set of behaviors such as following a wall <ref> [5] </ref>. A hierarchy of cooperating behaviors forms more complicated behaviors such as exploration. An extension of this type of approach is called sequencing [20, 21, 22].
Reference: [6] <author> J.F. Canny. </author> <title> The Complexity of Robot Motion Planning. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1988. </year>
Reference-contexts: Using a roadmap (Canny, <ref> [6] </ref>; Latombe, [28]), the planner can construct a path between any two points in a connected component of the robot's free space by first finding a collision free path onto the roadmap (accessibility), traversing the roadmap to the vicinity of the goal (connectivity), and then constructing a collision free path from <p> A major contribution of this work is the development of analogous methods that are applicable to these higher dimensional work spaces. Silhouette Method. A drawback of the generalized Voronoi diagram is that 8 it is limited to planar motion planning problems. Canny <ref> [6] </ref> introduced a roadmap approach that is applicable to work space and configuration spaces whose dimension is greater than two. A hyperplane, termed a slice, is swept through the work space or a parameterization of configuration space, populated with obstacles. Typically, the slice is perpendicular to a coordinate axis.
Reference: [7] <author> J.F. Canny and B. Donald. </author> <title> Simplified Voronoi Diagrams. </title> <journal> Discrete Comput. Geometry, </journal> <pages> pages 219-236, </pages> <year> 1988. </year>
Reference-contexts: Though the GVG introduced in this work appears to be new, a disconnected GVG-like structure for SE (3) is described in <ref> [7] </ref>. The GVG, described in Chapter 2, can be thought of as the natural extension of the GVD into higher dimensions. However, unlike the GVD, the GVG is in general not a roadmap because it is not necessarily connected in dimensions greater than two.
Reference: [8] <author> J.F. Canny and M.C. Lin. </author> <title> An Opportunistic Global Path Planner. </title> <booktitle> In Proc. IEEE Int. Conf. on Robotics and Automation, </booktitle> <pages> pages 1554-1559, </pages> <address> Cincinnati, Ohio, </address> <year> 1990. </year>
Reference-contexts: At these points, the algorithm is recursively invoked on the slice that passes through the critical points. The recursion terminates when the slice is one-dimensional. The union of the silhouette curves is a connected roadmap. The Opportunistic Path Planner (OPP) of Canny and Lin <ref> [8] </ref>, [9] is an example of a silhouette method in which local maxima of a continuous and differentiable potential function, restricted to a slice, are traced out as a slice sweeps through the work space or a parameterization of configuration space.
Reference: [9] <author> J.F. Canny and M.C. Lin. </author> <title> An Opportunistic Global Path Planner. </title> <journal> Algorith-mica, </journal> <volume> 10 </volume> <pages> 102-120, </pages> <year> 1993. </year> <month> 198 </month>
Reference-contexts: At these points, the algorithm is recursively invoked on the slice that passes through the critical points. The recursion terminates when the slice is one-dimensional. The union of the silhouette curves is a connected roadmap. The Opportunistic Path Planner (OPP) of Canny and Lin [8], <ref> [9] </ref> is an example of a silhouette method in which local maxima of a continuous and differentiable potential function, restricted to a slice, are traced out as a slice sweeps through the work space or a parameterization of configuration space. <p> One approach to sensor based motion planning is to adapt the structure of a provably correct classical motion planning scheme to a sensor based implementation. Roadmaps are one of the complete classical planning methods. An example of a complete roadmap scheme is Canny and Lin's Opportunistic Path Planner (OPP) <ref> [9] </ref>. Rimon adapted this motion planning scheme for sensor based use [38]. To our knowledge, this is the first sensor based motion planning scheme for workspaces whose dimension is greater than two. However, connectivity of the roadmap in [38] cannot be guaranteed without active perception. <p> However, the incremental construction techniques, described in this section, are numerically well posed, and these techniques can be adapted to other sensor based planning methods such as the Opportunistic Path Planner (described in <ref> [9, 38] </ref>). Some sensor based planners do not possess a complete incremental construction strategy. For example, Canny and Lin's OPP [9] constructs part of its roadmap (the freeways) for a multi-dimensional workspace using local information, and is therefore partially incremental. <p> Some sensor based planners do not possess a complete incremental construction strategy. For example, Canny and Lin's OPP <ref> [9] </ref> constructs part of its roadmap (the freeways) for a multi-dimensional workspace using local information, and is therefore partially incremental. <p> That is, the robot would move a small distance along a given direction|either a fixed direction, or perhaps the tangent direction to the current edge. Gradient ascent would then be used to move back onto the local edge. The OPP <ref> [9] </ref> method and its sensor based adaptation [38] use this strategy with a fixed stepping direction. However, gradient ascent can be a computationally expensive procedure because of its slow convergence. Also, the constant step direction leads to undesirable roadmap artifacts [15]. <p> Currently, the linking procedures (described in the next section) are under development. See Figure 4.15 for final results of GVG tracing. 4.7 Incremental Construction of the OPP The incremental construction techniques described in this chapter can be readily extended to other roadmap algorithms such as Canny and Lin's OPP <ref> [9, 38] </ref>. Recall that our approach to edge construction borrows some basic ideas and techniques from numerical continuation methods [24]. Continuation methods are used to trace the roots of the expression G (y; ) = 0 as the parameter is varied.
Reference: [10] <author> B. Chazelle. </author> <title> Convex partition of polyhedra: A lower bound and worst-case optimal algorithm. </title> <journal> SIAM Journal on Computing, </journal> <volume> 13(3) </volume> <pages> 488-507, </pages> <year> 1984. </year>
Reference-contexts: One undesirable feature of this approach is that the freeways and location of interesting critical points are dependent upon sweep direction. In Section 4.7.1, it is shown that the freeway curves are a subset of the HGVG. 10 Cell Decomposition In cellular decomposition (Chazelle, <ref> [10] </ref>; Latombe, [28]), robot's free space is decomposed into regions called cells. There are two types of cellular decomposition methods: exact and approximate. Exact cellular decomposition decomposes the free space into cells whose union is the free space.
Reference: [11] <author> G.S. Chirikjian. </author> <title> Theory and Applications of Hyper-Redundant Robotic Manipulators. </title> <type> PhD thesis, </type> <institution> California Institute of Technology, Pasadena, </institution> <address> CA, </address> <year> 1992. </year>
Reference-contexts: The HGVG is just a first step towards this goal, but provides a rigorous basis for future work research directions, described below. 6.2.1 Sensor Based Motion Planning for Set Robots The original problem that motivated this work was sensor based planning for highly articulator robots such as robot snakes <ref> [11, 12, 14, 13, 37] </ref>. Such robots can be represented as a point in a multi-dimensional configuration space.
Reference: [12] <author> G.S. Chirikjian and J.W. Burdick. </author> <title> A Modal Approach to Hyper-Redundant Manipulator Kinematics. </title> <journal> IEEE Trans. on Robotics and Automation, </journal> <month> June </month> <year> 1994. </year>
Reference-contexts: The HGVG is just a first step towards this goal, but provides a rigorous basis for future work research directions, described below. 6.2.1 Sensor Based Motion Planning for Set Robots The original problem that motivated this work was sensor based planning for highly articulator robots such as robot snakes <ref> [11, 12, 14, 13, 37] </ref>. Such robots can be represented as a point in a multi-dimensional configuration space.
Reference: [13] <author> G.S. Chirikjian and J.W. Burdick. </author> <title> Kinematically Optimal Hyper-Redundant Manipulator Configurations. </title> <journal> IEEE Trans. on Automation and Robotics, </journal> <month> De-cember </month> <year> 1995. </year>
Reference-contexts: The HGVG is just a first step towards this goal, but provides a rigorous basis for future work research directions, described below. 6.2.1 Sensor Based Motion Planning for Set Robots The original problem that motivated this work was sensor based planning for highly articulator robots such as robot snakes <ref> [11, 12, 14, 13, 37] </ref>. Such robots can be represented as a point in a multi-dimensional configuration space.
Reference: [14] <author> G.S. Chirikjian and J.W. Burdick. </author> <title> The Kinematics of Hyper-Redundant Robotic Locomotion. </title> <journal> IEEE Trans. on Automation and Robotics, </journal> <month> December </month> <year> 1995. </year> <note> Submitted. </note>
Reference-contexts: The HGVG is just a first step towards this goal, but provides a rigorous basis for future work research directions, described below. 6.2.1 Sensor Based Motion Planning for Set Robots The original problem that motivated this work was sensor based planning for highly articulator robots such as robot snakes <ref> [11, 12, 14, 13, 37] </ref>. Such robots can be represented as a point in a multi-dimensional configuration space.
Reference: [15] <author> H. Choset and J.W. Burdick. </author> <title> Sensor Based Planning and Nonsmooth Analysis. </title> <booktitle> In Proc. IEEE Int. Conf. on Robotics and Automation, </booktitle> <pages> pages 3034-3041, </pages> <address> San Diego, CA, </address> <year> 1994. </year>
Reference-contexts: The OPP [9] method and its sensor based adaptation [38] use this strategy with a fixed stepping direction. However, gradient ascent can be a computationally expensive procedure because of its slow convergence. Also, the constant step direction leads to undesirable roadmap artifacts <ref> [15] </ref>. Our approach borrows some basic ideas and techniques from numerical continuation methods [24]. Continuation methods are used to trace the roots of the expression G 1 (y; ) = 0 as the parameter is varied. The incremental construction of a GVG edge can be implemented as follows. <p> It is obtained by gradient ascent of the multi-object distance function, D (Section 2.3.5). Recall from Section B.3 and <ref> [15] </ref>, using nonsmooth analysis it can be shown that the generalized gradient of D (x) is @D (x) = Cofrd i (x) : i 2 I (x)g; (4.14) where Co is the convex hull operation, and I (x) is the set of indices such that 8i 2 I (x), each C
Reference: [16] <author> H. Choset and J.W. Burdick. </author> <title> Sensor Based Planning, Part I: The Generalized Voronoi Graph. </title> <booktitle> In Proc. IEEE Int. Conf. on Robotics and Automation, </booktitle> <address> Nagoya, Japan, </address> <year> 1995. </year>
Reference-contexts: Thus, r (d i 1 d j 1 ) = ff (r (d i 2 d j 2 )) + fi (r (d i 3 d j 3 )); t ) r (d i 2 d j 2 ) + fi Since by Equidistant Surface Transversality Assumption <ref> [16] </ref>, for all w 2 T x S i 1 j 1 : t t we conclude that r (d i 2 d j 2 ) = fi ff r (d i 3 d j 3 ) . However, this contradicts one of the three inequalities in Equation 4.8.
Reference: [17] <author> H. Choset and J.W. Burdick. </author> <title> Sensor Based Planning, Part II: Incremental Construction of the Generalized Voronoi Graph. </title> <booktitle> In Proc. IEEE Int. Conf. on Robotics and Automation, </booktitle> <address> Nagoya, Japan, </address> <year> 1995. </year>
Reference-contexts: Sensors provide the distance to the nearest 153 point from the sensor, without knowing from which obstacle the nearest point came. Therefore, the incremental construction of the GVG described in Chapter 4 and in <ref> [17] </ref> has to be adapted for sensor based implementation on actual robots.
Reference: [18] <author> H. Choset and J.W. Burdick. </author> <title> Sensor Based Planning for a Planar Rod Robot. </title> <booktitle> In Proc. IEEE Int. Conf. on Robotics and Automation, </booktitle> <address> Minneapolis, MN, </address> <year> 1996. </year>
Reference-contexts: solid line) to an obstacle is the distance (dotted line) between the nearest point on the rod to the obstacle and the nearest point on the obstacle to the rod. roadmap is termed the rod hierarchical generalized Voronoi graph (rod-HGVG), the planar version of which has already been defined in <ref> [18] </ref>. The rod-HGVG is defined in terms of the rod single object distance function which is the shortest distance between a rod R at configuration q and a convex obstacle C i . See Figure 6.2.
Reference: [19] <author> F. H. Clarke. </author> <title> Optimization and Nonsmooth Analysis. </title> <institution> Society of Industrial and Applied Mathematics, </institution> <address> Philadelphia, PA, </address> <year> 1990. </year> <month> 199 </month>
Reference-contexts: In Clarke <ref> [19] </ref> it is shown that the gradient of d i (x) is rd i (x) = kx c 0 k 21 The gradient is a unit vector pointing away from the nearest point. where c 0 is the point closest to x in C i . <p> Of particular interest is the subset of S ij termed the two-equidistant surjective surface, SS ij = clfx 2 S ij : rd i (x) 6= rd j (x)g: (2.8) Note that In the interior of the free space, the single object distance function is smooth <ref> [19] </ref> because we are assuming our obstacles are convex. <p> Lemma 2.14 A two-equidistant surjective surface, SS ij , is a co-dimension manifold. SS 2 is the union of co-dimension one manifolds. Proof: First, note that the function (d i d j ) : Wn (C i S C j ) ! R is smooth <ref> [19] </ref> because C i and C j are convex. Recall that the two-equidistant surjective surface SS ij is a subset of S ij such that rd i (x) 6= rd j (x), for all x 2 SS ij . <p> However, one can build a calculus for such nonsmooth functions from a less restrictive class of assumptions than smoothness: Lipschitzness, regularity, and convexity. We review here some essential results from nonsmooth analysis and develop a few useful results. A more comprehensive treatment of nonsmooth analysis can be found in <ref> [19] </ref>. Throughout this 177 section, assume that X is a finite dimensional vector space.
Reference: [20] <author> E. Gat. ALFA: </author> <title> A Language for Programming Reactive Robotic Control Systems. </title> <booktitle> In Proc. IEEE Int. Conf. on Robotics and Automation, </booktitle> <pages> pages 1116-1121, </pages> <address> Sacramento, CA, </address> <month> April </month> <year> 1991. </year>
Reference-contexts: A hierarchy of cooperating behaviors forms more complicated behaviors such as exploration. An extension of this type of approach is called sequencing <ref> [20, 21, 22] </ref>. Since there are strong experimental results indicating the utility of these approaches (such as [22]), some of these algorithms may provide a future basis for provably correct sensor based planners.
Reference: [21] <author> E. Gat. </author> <title> Integrating Reaction and Planning in Heterogenous Asynchronous Architecture for Controlling Real World Mobile Robots. </title> <booktitle> In Proceedings of the Tenth National Conference on Artificial Intelligence, </booktitle> <year> 1992. </year>
Reference-contexts: A hierarchy of cooperating behaviors forms more complicated behaviors such as exploration. An extension of this type of approach is called sequencing <ref> [20, 21, 22] </ref>. Since there are strong experimental results indicating the utility of these approaches (such as [22]), some of these algorithms may provide a future basis for provably correct sensor based planners.
Reference: [22] <author> E. Gat and G. Dorais. </author> <title> Robot Navigation by Conditional Sequencing. </title> <booktitle> In Proc. IEEE Int. Conf. on Robotics and Automation, </booktitle> <pages> pages 1293-1299, </pages> <address> San Diego, CA, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: A hierarchy of cooperating behaviors forms more complicated behaviors such as exploration. An extension of this type of approach is called sequencing <ref> [20, 21, 22] </ref>. Since there are strong experimental results indicating the utility of these approaches (such as [22]), some of these algorithms may provide a future basis for provably correct sensor based planners. <p> A hierarchy of cooperating behaviors forms more complicated behaviors such as exploration. An extension of this type of approach is called sequencing [20, 21, 22]. Since there are strong experimental results indicating the utility of these approaches (such as <ref> [22] </ref>), some of these algorithms may provide a future basis for provably correct sensor based planners. Another type of heuristic approach involves the discretization of a planar world into pixels (Borenstein and Koren [4]). <p> The next step is to demonstrate the validity of these approaches on an actual mobile robot. 151 Chapter 5 Implementation and Experiments 5.1 The Robot The robot used in our experiments is a "B12 Mobile Robot Base" (B12) produced by Real World Interface, Inc. 1 (also described in <ref> [22] </ref>). The robot's base has three synchronously driven wheels which remain parallel at all times. The robot contains an on-board Motorola 68000 computer that directly controls the motion of the B12.
Reference: [23] <author> A. J. Golman and A. W. Tucker. </author> <title> Linear Inequalities and Related Systems, chapter Polyhedral Convex Cones. </title> <publisher> Princeton University Press, Princeton, </publisher> <year> 1956. </year>
Reference-contexts: See <ref> [33, 23] </ref> for proof.
Reference: [24] <author> H.B. Keller. </author> <title> Lectures on Numerical Methods in Bifurcation Problems. </title> <institution> Tata Institute of Fundamental Research, Bombay, India, </institution> <year> 1987. </year>
Reference-contexts: However, gradient ascent can be a computationally expensive procedure because of its slow convergence. Also, the constant step direction leads to undesirable roadmap artifacts [15]. Our approach borrows some basic ideas and techniques from numerical continuation methods <ref> [24] </ref>. Continuation methods are used to trace the roots of the expression G 1 (y; ) = 0 as the parameter is varied. The incremental construction of a GVG edge can be implemented as follows. Let x be a point on the GVG. <p> By numerically tracing the roots of this function, we can locally construct an edge. While there are a number of curve tracing techniques <ref> [24] </ref>, we use an adaptation of a common predictor-corrector scheme, as illustrated in Figure 4.1. Assume that the robot is located at a point x on the GVG. The robot takes a "small" step, , in the z 1 -direction (i.e., the tangent to the local GVG edge). <p> The procedure to trace a path on a k-equidistant face, using constrained gradient ascent of the multi-object distance function, borrows some basic ideas and techniques from numerical continuation methods <ref> [24] </ref>, in a fashion similar to the approach described in Section 4.1. Here, the roots of the expression G A (y; ) = 0 as the "parameter" is varied describes a path on a k-equidistant face. <p> Recall that our approach to edge construction borrows some basic ideas and techniques from numerical continuation methods <ref> [24] </ref>. Continuation methods are used to trace the roots of the expression G (y; ) = 0 as the parameter is varied.
Reference: [25] <author> O. Khatib. </author> <title> Real-time obstacle avoidance for manipulators and mobile robots. </title> <journal> International Journal of Robotics Research, </journal> <volume> 5 </volume> <pages> 90-98, 1896. </pages>
Reference-contexts: Three classes of complete classical motion planning schemes have been developed: potential field approaches, roadmap methods, and cellular decomposition (Latombe, [28]). Potential Fields In the potential field approach (Khatib, <ref> [25] </ref>; Latombe, [28]), the robot is modeled as a particle acting under the influence of a potential function U : R m ! R that encodes information about the environment such as the goal and obstacle location.
Reference: [26] <author> V. Klee. </author> <title> On the Complexity of D-dimensional Voronoi Diagrams. </title> <journal> Arch. Math., </journal> <volume> 34 </volume> <pages> 75-80, </pages> <year> 1980. </year>
Reference-contexts: The number of m combinations of m + 1 elements is m + 1 ( m+1 This result has been previously determined for the special case where each object is a point site <ref> [26] </ref>. 49 2.3.4 The Multi-object Distance Function is Smooth on a k-Equidistant Face The multi-object distance function is nominally not smooth. However, when constrained to a k-equidistant surjective surface (and thus a k-equidistant face), the multi-object distance function is indeed smooth.
Reference: [27] <author> D. Kortenkamp and T. Weymouth. </author> <title> Topological mapping for mobile robots using a combination of sonar and vision sensing. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence (AAAI-94), </booktitle> <month> July </month> <year> 1994. </year>
Reference-contexts: However, this method requires landmarks in constructing its map and is limited to the planar case. Another example of robotic exploration with realistic sensor assumptions can be found in Kortenkamp and Weymouth <ref> [27] </ref>. In this work, a map called a "topological map" of the world is formed. However, the algorithm in [27] assumes that the environment is populated with rectangular obstacles that meet at nearly ninety degree angles. Its application is therefore highly restricted. <p> Another example of robotic exploration with realistic sensor assumptions can be found in Kortenkamp and Weymouth <ref> [27] </ref>. In this work, a map called a "topological map" of the world is formed. However, the algorithm in [27] assumes that the environment is populated with rectangular obstacles that meet at nearly ninety degree angles. Its application is therefore highly restricted. One approach to sensor based motion planning is to adapt the structure of a provably correct classical motion planning scheme to a sensor based implementation.
Reference: [28] <author> J.C. Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1991. </year>
Reference-contexts: Three classes of complete classical motion planning schemes have been developed: potential field approaches, roadmap methods, and cellular decomposition (Latombe, <ref> [28] </ref>). Potential Fields In the potential field approach (Khatib, [25]; Latombe, [28]), the robot is modeled as a particle acting under the influence of a potential function U : R m ! R that encodes information about the environment such as the goal and obstacle location. <p> Three classes of complete classical motion planning schemes have been developed: potential field approaches, roadmap methods, and cellular decomposition (Latombe, <ref> [28] </ref>). Potential Fields In the potential field approach (Khatib, [25]; Latombe, [28]), the robot is modeled as a particle acting under the influence of a potential function U : R m ! R that encodes information about the environment such as the goal and obstacle location. <p> Using a roadmap (Canny, [6]; Latombe, <ref> [28] </ref>), the planner can construct a path between any two points in a connected component of the robot's free space by first finding a collision free path onto the roadmap (accessibility), traversing the roadmap to the vicinity of the goal (connectivity), and then constructing a collision free path from a point <p> Three primary types of roadmaps have been developed: visibility graph, retraction, and silhouette. Visibility Graph. The nodes of the visibility graph (Latombe, <ref> [28] </ref>; Lozano-Perez and Wesley, [30]) include the start location, the goal location, and all the vertices of the obstacles (or configuration space obstacles). The edges of the visibility graph are straight line segments that connect two nodes without penetrating the interior of the obstacles (or configuration space obstacles). <p> One undesirable feature of this approach is that the freeways and location of interesting critical points are dependent upon sweep direction. In Section 4.7.1, it is shown that the freeway curves are a subset of the HGVG. 10 Cell Decomposition In cellular decomposition (Chazelle, [10]; Latombe, <ref> [28] </ref>), robot's free space is decomposed into regions called cells. There are two types of cellular decomposition methods: exact and approximate. Exact cellular decomposition decomposes the free space into cells whose union is the free space.
Reference: [29] <author> M.C. Lin and J.F. Canny. </author> <title> Efficient algorithms for incremental distance computation. </title> <booktitle> In Proc. IEEE Int. Conf. on Robotics and Automation, </booktitle> <year> 1991. </year>
Reference-contexts: The core of the planar simulator is the distance function which measures distance between a point and a convex polygon. The distance function used in the simulator is a modified version of Lin and Canny's closest feature algorithm described in <ref> [29] </ref>. Lin and Canny define a Voronoi region for each feature on the polygon. If a point is in the Voronoi region of a particular feature, then the distance to the polygon is the distance to the feature, which is either a point or a line segment.
Reference: [30] <author> T. Lozano-Perez and M.A. Wesley. </author> <title> An algorithm for planning collision-free paths among polyhedral obstacles. </title> <journal> Communications of the ACM, </journal> <volume> 22(10) </volume> <pages> 560-570, </pages> <year> 1979. </year> <month> 200 </month>
Reference-contexts: Three primary types of roadmaps have been developed: visibility graph, retraction, and silhouette. Visibility Graph. The nodes of the visibility graph (Latombe, [28]; Lozano-Perez and Wesley, <ref> [30] </ref>) include the start location, the goal location, and all the vertices of the obstacles (or configuration space obstacles). The edges of the visibility graph are straight line segments that connect two nodes without penetrating the interior of the obstacles (or configuration space obstacles).
Reference: [31] <author> V. Lumelsky and A. Stepanov. </author> <title> Path Planning Strategies for Point Mobile Automaton Moving Amidst Unknown Obstacles of Arbitrary Shape. </title> <journal> Algorithmica, </journal> <volume> 2 </volume> <pages> 403-430, </pages> <year> 1987. </year>
Reference-contexts: There are many non-heuristic algorithms for which provably correct solutions exist in the plane (see [35] for an overview). For example, Lumelsky's "bug" algorithm <ref> [31] </ref> is one of the first provably correct sensor based schemes to work in the plane. In this method, the robot travels along a straight line segment that connects the start and goal. If the robot encounters an obstacle, it turns left and begins to 14 circumnavigate the obstacle.
Reference: [32] <author> J.E. Marsden. </author> <title> Elementary Classical Analysis. </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <address> New York, </address> <year> 1974. </year>
Reference-contexts: A.1 Useful Topology Definitions and Relationships The following is a list of basic topology definitions and results which are useful to this work. Although the following definitions are standard to point set topology, we used the definitions from Marsden's book entitled Elementary Classical Analysis <ref> [32] </ref>. A.1.1 Topology Notation and Definitions Definition A.1 (*-Neighborhood) ([32], p. 32) An *-neighborhood about a point x 2 R m is the set fy 2 R m : kx yk &lt; *g. Definition A.2 (Open Sets) ([32], p. 33) A set A R m is said to be open if
Reference: [33] <author> V-D. Nguyen. </author> <title> Constructing force-closure grasps. </title> <journal> IJRR, </journal> <volume> 7(3) </volume> <pages> 3-16, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: See <ref> [33, 23] </ref> for proof.
Reference: [34] <author> C. O'Dunlaing and C.K. Yap. </author> <title> A "Retraction" Method for Planning the Motion of a Disc. </title> <journal> Algorithmica, </journal> <volume> 6 </volume> <pages> 104-111, </pages> <year> 1985. </year>
Reference-contexts: The thick dotted line represents the shortest path between the start and goal. Retraction. A retraction ( O'Dunlaing and Yap, <ref> [34] </ref>) is a continuous mapping of the free space F S onto a one-dimensional subset of F S. The image of the retraction is the roadmap. A popular retraction in motion planning is termed the Voronoi diagram. <p> See Aurenhammer [2] for survey on Voronoi diagrams.) The GVD was first used for motion planning in [40]. Active research in applying the GVD to motion planning began with O'Dunlaing and Yap <ref> [34] </ref>, who considered motion planning for a disk in the plane. However, the method in [34] requires full knowledge of the world's geometry prior to the planning event, and its retract methodology may not extend to non-planar problems. <p> See Aurenhammer [2] for survey on Voronoi diagrams.) The GVD was first used for motion planning in [40]. Active research in applying the GVD to motion planning began with O'Dunlaing and Yap <ref> [34] </ref>, who considered motion planning for a disk in the plane. However, the method in [34] requires full knowledge of the world's geometry prior to the planning event, and its retract methodology may not extend to non-planar problems. In [36], an incremental approach to create a Voronoi diagram-like structure, which is limited to the case of a plane, was introduced. <p> The backbone of the HGVG is the generalized Voronoi graph (GVG) which is a natural extension of the generalized Voronoi diagram <ref> [34] </ref> into higher dimensions. Whereas the generalized Voronoi diagram is 17 always one less dimension than the space in which it is defined, the GVG is always one-dimensional. The GVG, however, is not guaranteed to be connected, and is thus not directly applicable to motion planning. <p> By definition of the two-equidistant face (Definition 2.5), F ij F i . Furthermore, by Proposition 2.11, F ij @F i . Therefore, the generalized Voronoi region F i has a non-empty sub-boundary. In fact, _ @F i = S O'Dunlaing and Yap <ref> [34] </ref> define a continuous function, Im (x), which maps points from the generalized Voronoi region onto the generalized Voronoi diagram.
Reference: [35] <author> N.S.V. Rao, S. Kareti, W. Shi, and S.S. Iyenagar. </author> <title> Robot Navigation in Unknown Terrains: Introductory Survey of Non-Heuristic Algorithms. </title> <institution> Oak Ridge National Laboratory Technical Report, ORNL/TM-12410:1-58, </institution> <month> July </month> <year> 1993. </year>
Reference-contexts: Sensor based planning has received increased attention lately, as it is requirement for realistic deployment of autonomous robots in unstructured environments. For a review of many sensor-based planning techniques, see Rao et al. <ref> [35] </ref>. Most current sensor based planning methods are heuristic algorithms which work very well under a variety of conditions, but there are no proofs of correctness that guarantee a path can be found. Moreover, there do not exist well established thresholds for when heuristic algorithms fail. <p> This method lends itself very nicely to implementation with real sensors, but discretizing the world may require a large amount of computer memory and may lead to an inaccurate representation of the world. There are many non-heuristic algorithms for which provably correct solutions exist in the plane (see <ref> [35] </ref> for an overview). For example, Lumelsky's "bug" algorithm [31] is one of the first provably correct sensor based schemes to work in the plane. In this method, the robot travels along a straight line segment that connects the start and goal. <p> Otherwise, the algorithm terminates, indicating that the robot cannot reach the goal. Although the bug algorithm may seem simple, its contribution is that it provides a path to the goal or determines that it is impossible to ever reach the goal. However, this algorithm (like many described in <ref> [35] </ref>) requires knowledge of the goal's location during the planning process. Furthermore, this algorithm simply returns a path from the start to the goal. <p> Although the proof of connectivity of the L 3 HGVG is limited to the three-dimensional case, the incremental construction techniques described in this chapter are general. Although there do exist other sensor based schemes (see <ref> [35] </ref> for a review of planar sensor based planning), very little analysis of the numerical properties of these schemes has been done.
Reference: [36] <author> N.S.V. Rao, N. Stolzfus, and S.S. Iyengar. </author> <title> A Retraction Method for Learned Navigation in Unknown Terrains for a Circular Robot. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 7 </volume> <pages> 699-707, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: However, the method in [34] requires full knowledge of the world's geometry prior to the planning event, and its retract methodology may not extend to non-planar problems. In <ref> [36] </ref>, an incremental approach to create a Voronoi diagram-like structure, which is limited to the case of a plane, was introduced. Prior work (e.g., Avis and Bhattacharya [3]) describes the Voronoi graph, an extension of the Voronoi diagram extended into higher dimensions.
Reference: [37] <author> D. Reznik and V. Lumelsky. </author> <title> Motion Planning with Uncertainty for Highly Redundant Kinematic Structures I. `Free Snake' Motion. </title> <booktitle> In IEEE/RSJ International Conference on Intelligent Robots and Systems, </booktitle> <address> Raleigh, N.C., </address> <year> 1992. </year>
Reference-contexts: The HGVG is just a first step towards this goal, but provides a rigorous basis for future work research directions, described below. 6.2.1 Sensor Based Motion Planning for Set Robots The original problem that motivated this work was sensor based planning for highly articulator robots such as robot snakes <ref> [11, 12, 14, 13, 37] </ref>. Such robots can be represented as a point in a multi-dimensional configuration space.
Reference: [38] <author> E. Rimon and J.F. Canny. </author> <title> Construction of C-space Roadmaps Using Local Sensory Data | What Should the Sensors Look For? In Proc. </title> <booktitle> IEEE Int. Conf. on Robotics and Automation, </booktitle> <pages> pages 117-124, </pages> <address> San Diego, CA, </address> <year> 1994. </year>
Reference-contexts: Roadmaps are one of the complete classical planning methods. An example of a complete roadmap scheme is Canny and Lin's Opportunistic Path Planner (OPP) [9]. Rimon adapted this motion planning scheme for sensor based use <ref> [38] </ref>. To our knowledge, this is the first sensor based motion planning scheme for workspaces whose dimension is greater than two. However, connectivity of the roadmap in [38] cannot be guaranteed without active perception. Furthermore, from a practical 15 point of view, there are two limitations to Rimon's method. <p> Rimon adapted this motion planning scheme for sensor based use <ref> [38] </ref>. To our knowledge, this is the first sensor based motion planning scheme for workspaces whose dimension is greater than two. However, connectivity of the roadmap in [38] cannot be guaranteed without active perception. Furthermore, from a practical 15 point of view, there are two limitations to Rimon's method. First, to construct the roadmap, the robot posseses an interesting critical point sensor and a minimum passage sensor, both of whose implementations are not well described. <p> point on the GVG. (Note that when @D is a set, the vector with the smallest norm in @D is chosen as the gradient [41].) ffi 2.3.6 Departibility Departibility is the property of a roadmap that any point in the free space is accessible from some point in the roadmap <ref> [38] </ref>. In the case where full knowledge of the world's geometry is available, departability is simply accessibility, but in reverse. <p> However, the incremental construction techniques, described in this section, are numerically well posed, and these techniques can be adapted to other sensor based planning methods such as the Opportunistic Path Planner (described in <ref> [9, 38] </ref>). Some sensor based planners do not possess a complete incremental construction strategy. For example, Canny and Lin's OPP [9] constructs part of its roadmap (the freeways) for a multi-dimensional workspace using local information, and is therefore partially incremental. <p> However, the construction of "bridge curves," which guarantee the roadmap's connectivity, requires the identification of "interesting critical 115 points." Complete prior knowledge of the world's geometry is needed to identify the critical points. This is a major limitation of their algorithm for sensor based implementation. Rimon and Canny <ref> [38] </ref> suggested a way to "sensorize" the OPP algorithm. They introduce the notion of a "critical point sensor," and a "minimum clearance" sensor, though the implementation of such sensors is not well detailed. Furthermore, they do not provide a detailed method to construct the freeway segments from sensor data. <p> That is, the robot would move a small distance along a given direction|either a fixed direction, or perhaps the tangent direction to the current edge. Gradient ascent would then be used to move back onto the local edge. The OPP [9] method and its sensor based adaptation <ref> [38] </ref> use this strategy with a fixed stepping direction. However, gradient ascent can be a computationally expensive procedure because of its slow convergence. Also, the constant step direction leads to undesirable roadmap artifacts [15]. Our approach borrows some basic ideas and techniques from numerical continuation methods [24]. <p> Currently, the linking procedures (described in the next section) are under development. See Figure 4.15 for final results of GVG tracing. 4.7 Incremental Construction of the OPP The incremental construction techniques described in this chapter can be readily extended to other roadmap algorithms such as Canny and Lin's OPP <ref> [9, 38] </ref>. Recall that our approach to edge construction borrows some basic ideas and techniques from numerical continuation methods [24]. Continuation methods are used to trace the roots of the expression G (y; ) = 0 as the parameter is varied.
Reference: [39] <author> E. Rimon and D. E. Koditschek. </author> <title> Exact Robot Navigation Using Artificial Potential Functions. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 8(5) </volume> <pages> 501-518, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: There are methods for dealing with this problem, but either they are restrictive or require too much information about the environment (Rimon and Koditschek, <ref> [39] </ref>).
Reference: [40] <author> P.F. Rowat. </author> <title> "Representing the Spatial Experience and Solving Spatial Problems in a Simulated Robot Environment". </title> <type> In PhD. Thesis, </type> <institution> University of British Columbia, </institution> <year> 1979. </year> <month> 201 </month>
Reference-contexts: Although named for the Russian mathematician, Georgii Feodosevich Voronoi who lived from 1868 until 1908, the Voronoi diagram was first studied by DesCartes in 1644. The Voronoi diagram was first applied to robotics in Rowat's work on computer vision <ref> [40] </ref>. In this and other works, the sites were sets, instead of points. In such cases, in keeping with the Voronoi diagram literature, we term this structure the generalized Voronoi diagram in order to distinguish it from the original definition of the Voronoi diagram. <p> See Aurenhammer [2] for survey on Voronoi diagrams.) The GVD was first used for motion planning in <ref> [40] </ref>. Active research in applying the GVD to motion planning began with O'Dunlaing and Yap [34], who considered motion planning for a disk in the plane.
Reference: [41] <author> S. Scheimberg and P.R. Oliveira. </author> <title> Descent algorithm for a class of convex nondif-ferentiable functions. </title> <journal> Journal of Optimization Theory and Applications, </journal> <volume> 72 </volume> <pages> 269-297, </pages> <month> February </month> <year> 1992. </year>
Reference-contexts: Lemma A.22 [Goldman and Tucker] It requires a minimum of (m + 1) vectors to positively span R m . The results of Scheimber and Olivera <ref> [41] </ref> state that the second derivative of D, termed a generalized hesian, is always positive or contains only positive values. In a sense, the graph of the function D is always "concave up." Therefore, the generalized gradient of D only vanishes at a local minima. <p> distance function will bring the robot to a local maxima of D, which is a point equidistant to m + 1 obstacles and thereby is a point on the GVG. (Note that when @D is a set, the vector with the smallest norm in @D is chosen as the gradient <ref> [41] </ref>.) ffi 2.3.6 Departibility Departibility is the property of a roadmap that any point in the free space is accessible from some point in the roadmap [38]. In the case where full knowledge of the world's geometry is available, departability is simply accessibility, but in reverse.
Reference: [42] <editor> J.T. Schwartz and C.K. Yap, editors. </editor> <booktitle> Advances in Robotics: Algorithmic and Geometric Apsects of Robotics, </booktitle> <volume> volume 1. </volume> <publisher> Lawrence Erlbaum Associates, </publisher> <address> New Jersey, </address> <year> 1987. </year>
Reference-contexts: If each k-dimensional cell is homeomorphic to a k-dimensional disk, then the one-dimensional cells of such a decomposition form a deformation retract or retract-like structure of W <ref> [42] </ref>. One of the appealing properties of a retract-like structure is its connectivity. In the example shown in Figure 2.26, the three-dimensional generalized Voronoi regions are homeomorphic to a three-dimensional disk, but the two-dimensional faces are not homeomorphic to a two-dimensional disk.
Reference: [43] <author> C.J. Taylor and D.J. Kriegman. </author> <title> Vision-Basied Motion Planning and Exploration Algorithms for Mobile Robots. </title> <booktitle> In Proc. of Workshop on the Algorithmic Foundations of Robotics, </booktitle> <address> San Francisco, CA, </address> <month> February </month> <year> 1994. </year>
Reference-contexts: Furthermore, this algorithm simply returns a path from the start to the goal. The resulting path does not reflect the topology of the free space (the region of the environment not occupied by obstacles) and thus, it cannot be used to guide future robot excursions. Taylor and Kriegman's method <ref> [43] </ref> has a provably correct solution, uses realistic sensor assumptions, and need not require prior knowledge of the goal's location.
References-found: 44

