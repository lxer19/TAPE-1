URL: http://www.cs.berkeley.edu/~mct/papers/GIT-CC-94-46.ps.Z
Refering-URL: http://www.cs.berkeley.edu/~mct/index.html
Root-URL: 
Title: Generation and Analysis of Random Graphs to Model Internetworks  
Author: Megan Thomas Ellen W. Zegura 
Address: Atlanta, Georgia 30332-0280  
Affiliation: College of Computing Georgia Institute of Technology  
Date: August 1994  
Pubnum: GIT-CC-94/46  
Abstract: Graph models are commonly used in studying solutions to internetworking problems. This paper considers several random graph models that have been used to model internetworks, and considers ways to characterize the properties of these graphs. By matching the characteristics of the random graphs to the characteristics of real internetworks, more accurate modeling can be achieved. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Mostafa H. Ammar, Shun Yan Cheung, and Catarina M. Scoglio. </author> <title> Routing multipoint connections using virtual paths in an atm network. </title> <booktitle> In Proceedings of IEEE INFOCOM '93, </booktitle> <year> 1993. </year>
Reference-contexts: were copies of real internetworks [12, 22], one simulated a five node WAN [4], one used two real computers to be the entire internetwork [7], one used a LAN to simulate a WAN [13], and ten, about half of the papers, used random graphs without specifying how they were generated <ref> [1, 2, 3, 6, 8, 10, 14, 15, 16, 17] </ref>. Only five used clearly specified random graphs [5, 9, 18, 20, 21]. The results of any simulation depend upon the model on which the simulation is carried out.
Reference: [2] <author> Baruch Awerbuch. </author> <title> Shortest paths and loop-free routing in dynamic networks (extended abstract). </title> <booktitle> In Proceedings of SIGCOMM '90, </booktitle> <year> 1990. </year>
Reference-contexts: were copies of real internetworks [12, 22], one simulated a five node WAN [4], one used two real computers to be the entire internetwork [7], one used a LAN to simulate a WAN [13], and ten, about half of the papers, used random graphs without specifying how they were generated <ref> [1, 2, 3, 6, 8, 10, 14, 15, 16, 17] </ref>. Only five used clearly specified random graphs [5, 9, 18, 20, 21]. The results of any simulation depend upon the model on which the simulation is carried out.
Reference: [3] <author> Baruch Awerbuch and David Peleg. </author> <title> Concurrent online tracking of mobile users. </title> <booktitle> In Proceedings of SIGCOMM '91, </booktitle> <year> 1991. </year>
Reference-contexts: were copies of real internetworks [12, 22], one simulated a five node WAN [4], one used two real computers to be the entire internetwork [7], one used a LAN to simulate a WAN [13], and ten, about half of the papers, used random graphs without specifying how they were generated <ref> [1, 2, 3, 6, 8, 10, 14, 15, 16, 17] </ref>. Only five used clearly specified random graphs [5, 9, 18, 20, 21]. The results of any simulation depend upon the model on which the simulation is carried out.
Reference: [4] <author> Saewoong Bahk and Magda El Zarki. </author> <title> Dynamic multi-path routing and how it compares with other dynamic routing algorithms for high speed wide area networks. </title> <booktitle> In Proceedings of SIGCOMM '92, </booktitle> <year> 1992. </year>
Reference-contexts: at the events in one router; they simulated or implemented their algorithms; and they included information about the simulation or implementation environment), one used the Internet [10], two used regular graphs [12, 19], two used graphs that were copies of real internetworks [12, 22], one simulated a five node WAN <ref> [4] </ref>, one used two real computers to be the entire internetwork [7], one used a LAN to simulate a WAN [13], and ten, about half of the papers, used random graphs without specifying how they were generated [1, 2, 3, 6, 8, 10, 14, 15, 16, 17].
Reference: [5] <author> Ken Calvert, Ramesh Madhavan, and Ellen Zegura. </author> <title> A comparison of two practical multi-cast routing schemes. </title> <type> Technical Report GIT-CC-94-25, </type> <institution> Georgia Institute of Technology, </institution> <year> 1994. </year>
Reference-contexts: Only five used clearly specified random graphs <ref> [5, 9, 18, 20, 21] </ref>. The results of any simulation depend upon the model on which the simulation is carried out. <p> Each model is a variation on the basic random graph generation process that distributes vertices in the plane then adds edges between pairs of vertices based on some probability function. 3.1 Two-Level Graphs Calvert et al. propose a two phase method to generate random graphs with a hierarchical structure <ref> [5] </ref>. In the first phase, nodes are randomly placed in the x-y coordinate plane. Let d be the Euclidean distance between vertices p and q. Let R be the radius of constant probability of adding an edge. <p> Let R be the radius of constant probability of adding an edge. Let ff be a number between zero and one, used to control the edge probability. The probability P of the edge being added between p and q is given by <ref> [5] </ref>: P = ff if d R p p Because the graph generated may not be connected, the generation program iterates until the resulting graph is connected. After the initial graph has been completed the program enters the second phase. <p> The edges incident to the top level nodes are connected sequentially to the nodes in the subgraph with the lowest degree greater than one. In this way, the replacement process preserves leaves. The model allows an arbitrary number of levels, but Calvert et al. <ref> [5] </ref> restricted consideration to two levels. Figure 1 contains a sample Two-Level graph with 100 nodes. The hierarchical nature of its two level structure is quite evident. 3.2 Waxman Graphs Waxman [20] proposed a random graph model that has become something of a de facto standard. <p> seed for the random number generator. 5 An Illustration of Graph Use The main reason this work on analyzing the characteristics of graphs and the differences in characteristics between different types of graphs was done was as part of a larger project studying the properties of different multicast routing algorithms <ref> [5] </ref>. Figures 11 and 12 depict the ratios of bandwidth and delay between two different routing schemes for two different types of graph, spanning multicast groups of varying sizes.
Reference: [6] <author> Samuel T. Chanson and Jinsong Zhu. </author> <title> A unified approach to protocol test sequence generation. </title> <booktitle> In Proceedings of IEEE INFOCOM '93, </booktitle> <year> 1993. </year>
Reference-contexts: were copies of real internetworks [12, 22], one simulated a five node WAN [4], one used two real computers to be the entire internetwork [7], one used a LAN to simulate a WAN [13], and ten, about half of the papers, used random graphs without specifying how they were generated <ref> [1, 2, 3, 6, 8, 10, 14, 15, 16, 17] </ref>. Only five used clearly specified random graphs [5, 9, 18, 20, 21]. The results of any simulation depend upon the model on which the simulation is carried out.
Reference: [7] <author> Ron Cocchi, Deborah Estrin, Scott Shenker, and Lixia Zhang. </author> <title> A study of priority pricing in multiple service class networks. </title> <booktitle> In Proceedings of SIGCOMM '91, </booktitle> <year> 1991. </year>
Reference-contexts: algorithms; and they included information about the simulation or implementation environment), one used the Internet [10], two used regular graphs [12, 19], two used graphs that were copies of real internetworks [12, 22], one simulated a five node WAN [4], one used two real computers to be the entire internetwork <ref> [7] </ref>, one used a LAN to simulate a WAN [13], and ten, about half of the papers, used random graphs without specifying how they were generated [1, 2, 3, 6, 8, 10, 14, 15, 16, 17]. Only five used clearly specified random graphs [5, 9, 18, 20, 21].
Reference: [8] <author> Reuven Cohen and Yoram Ofek. </author> <title> Label swapping routing with self-termination. </title> <booktitle> In Proceedings of IEEE INFOCOM '93, </booktitle> <year> 1993. </year>
Reference-contexts: were copies of real internetworks [12, 22], one simulated a five node WAN [4], one used two real computers to be the entire internetwork [7], one used a LAN to simulate a WAN [13], and ten, about half of the papers, used random graphs without specifying how they were generated <ref> [1, 2, 3, 6, 8, 10, 14, 15, 16, 17] </ref>. Only five used clearly specified random graphs [5, 9, 18, 20, 21]. The results of any simulation depend upon the model on which the simulation is carried out.
Reference: [9] <author> Matthew Doar and Ian Leslie. </author> <booktitle> How bad is naive multicast routing? In Proceedings of IEEE INFOCOM '93, </booktitle> <pages> pages 82-89, </pages> <year> 1993. </year>
Reference-contexts: Only five used clearly specified random graphs <ref> [5, 9, 18, 20, 21] </ref>. The results of any simulation depend upon the model on which the simulation is carried out. <p> and the Two-Level graphs have nearly the same number of edges (approximately 230), but the Two-Level edges are clearly concentrated within the subgraphs while the Waxman edges span the entire graph freely. 3.3 DoarLeslie Graphs Doar and Leslie proposed a modified version of the Waxman 1 random graph generation scheme <ref> [9] </ref>.
Reference: [10] <author> Sally Floyd and Van Jacobsen. </author> <title> The synchronization of periodic routing messages. </title> <booktitle> In Proceedings of SIGCOMM '93, </booktitle> <year> 1993. </year>
Reference-contexts: Out of the papers that fit our criteria (i.e. they looked at large networks, not just at the events in one router; they simulated or implemented their algorithms; and they included information about the simulation or implementation environment), one used the Internet <ref> [10] </ref>, two used regular graphs [12, 19], two used graphs that were copies of real internetworks [12, 22], one simulated a five node WAN [4], one used two real computers to be the entire internetwork [7], one used a LAN to simulate a WAN [13], and ten, about half of the <p> were copies of real internetworks [12, 22], one simulated a five node WAN [4], one used two real computers to be the entire internetwork [7], one used a LAN to simulate a WAN [13], and ten, about half of the papers, used random graphs without specifying how they were generated <ref> [1, 2, 3, 6, 8, 10, 14, 15, 16, 17] </ref>. Only five used clearly specified random graphs [5, 9, 18, 20, 21]. The results of any simulation depend upon the model on which the simulation is carried out.
Reference: [11] <author> L. Kou, G. Markowsky, and L. Berman. </author> <title> A fast algorith for steiner trees. </title> <journal> Acta Informatica, </journal> <volume> 15 </volume> <pages> 141-145, </pages> <year> 1981. </year>
Reference-contexts: One routing scheme finds its routing trees through the use of the Steiner tree approximation algorithm proposed by Kou, Markowsky, and Berman <ref> [11] </ref>. The other scheme picks one of the nodes to be the root of a shortest path tree. The bandwidths and delays generated by the two routing schemes are calculated for randomly chosen multicast groups of size ranging from five to 50. Group size is on the x-axis.
Reference: [12] <author> Ming-Jeng Lee and James R. Yee. </author> <title> A design algorithm for reconfigurable atm networks. </title> <booktitle> In Proceedings of IEEE INFOCOM '93, </booktitle> <year> 1993. </year> <month> 15 </month>
Reference-contexts: Out of the papers that fit our criteria (i.e. they looked at large networks, not just at the events in one router; they simulated or implemented their algorithms; and they included information about the simulation or implementation environment), one used the Internet [10], two used regular graphs <ref> [12, 19] </ref>, two used graphs that were copies of real internetworks [12, 22], one simulated a five node WAN [4], one used two real computers to be the entire internetwork [7], one used a LAN to simulate a WAN [13], and ten, about half of the papers, used random graphs without <p> (i.e. they looked at large networks, not just at the events in one router; they simulated or implemented their algorithms; and they included information about the simulation or implementation environment), one used the Internet [10], two used regular graphs [12, 19], two used graphs that were copies of real internetworks <ref> [12, 22] </ref>, one simulated a five node WAN [4], one used two real computers to be the entire internetwork [7], one used a LAN to simulate a WAN [13], and ten, about half of the papers, used random graphs without specifying how they were generated [1, 2, 3, 6, 8, 10,
Reference: [13] <author> Barbara Liskov, Liuba, Shrira, and John Wronclawski. </author> <title> Efficient at-most-once messages based on synchronized clocks. </title> <booktitle> In Proceedings of SIGCOMM '90, </booktitle> <year> 1990. </year>
Reference-contexts: implementation environment), one used the Internet [10], two used regular graphs [12, 19], two used graphs that were copies of real internetworks [12, 22], one simulated a five node WAN [4], one used two real computers to be the entire internetwork [7], one used a LAN to simulate a WAN <ref> [13] </ref>, and ten, about half of the papers, used random graphs without specifying how they were generated [1, 2, 3, 6, 8, 10, 14, 15, 16, 17]. Only five used clearly specified random graphs [5, 9, 18, 20, 21].
Reference: [14] <author> Richard G. Ogier and Vlad Rutenberg. </author> <title> Robust routing for minimum worst-case expected delay in unreliable networks. </title> <booktitle> In Proceedings of IEEE INFOCOM '93, </booktitle> <year> 1993. </year>
Reference-contexts: were copies of real internetworks [12, 22], one simulated a five node WAN [4], one used two real computers to be the entire internetwork [7], one used a LAN to simulate a WAN [13], and ten, about half of the papers, used random graphs without specifying how they were generated <ref> [1, 2, 3, 6, 8, 10, 14, 15, 16, 17] </ref>. Only five used clearly specified random graphs [5, 9, 18, 20, 21]. The results of any simulation depend upon the model on which the simulation is carried out.
Reference: [15] <author> Kihong Park. </author> <title> Warp control: A dynamically stable congestion protocol and its analysis. </title> <booktitle> In Proceedings of SIGCOMM '93, </booktitle> <year> 1993. </year>
Reference-contexts: were copies of real internetworks [12, 22], one simulated a five node WAN [4], one used two real computers to be the entire internetwork [7], one used a LAN to simulate a WAN [13], and ten, about half of the papers, used random graphs without specifying how they were generated <ref> [1, 2, 3, 6, 8, 10, 14, 15, 16, 17] </ref>. Only five used clearly specified random graphs [5, 9, 18, 20, 21]. The results of any simulation depend upon the model on which the simulation is carried out.
Reference: [16] <author> Deepinder Sidhu, Tayang Fu, Shukri Abdallah, Raj Nair, and Rob Coltun. </author> <title> Open shortest path first routing protocol simulation. </title> <booktitle> In Proceedings of SIGCOMM '93, </booktitle> <year> 1993. </year>
Reference-contexts: were copies of real internetworks [12, 22], one simulated a five node WAN [4], one used two real computers to be the entire internetwork [7], one used a LAN to simulate a WAN [13], and ten, about half of the papers, used random graphs without specifying how they were generated <ref> [1, 2, 3, 6, 8, 10, 14, 15, 16, 17] </ref>. Only five used clearly specified random graphs [5, 9, 18, 20, 21]. The results of any simulation depend upon the model on which the simulation is carried out.
Reference: [17] <author> Deepinder Sidhu, Raj Nair, and Shukri Abdallah. </author> <title> Finding disjoint paths in networks. </title> <booktitle> In Proceedings of SIGCOMM '91, </booktitle> <year> 1991. </year>
Reference-contexts: were copies of real internetworks [12, 22], one simulated a five node WAN [4], one used two real computers to be the entire internetwork [7], one used a LAN to simulate a WAN [13], and ten, about half of the papers, used random graphs without specifying how they were generated <ref> [1, 2, 3, 6, 8, 10, 14, 15, 16, 17] </ref>. Only five used clearly specified random graphs [5, 9, 18, 20, 21]. The results of any simulation depend upon the model on which the simulation is carried out.
Reference: [18] <author> Dinesh C. Verma and P.M. Gopal. </author> <title> Routing reserved bandwidth multi-point connections. </title> <booktitle> In Proceedings of SIGCOMM '93, </booktitle> <year> 1993. </year>
Reference-contexts: Only five used clearly specified random graphs <ref> [5, 9, 18, 20, 21] </ref>. The results of any simulation depend upon the model on which the simulation is carried out.
Reference: [19] <author> Zheng Wang and Jon Crowcroft. </author> <title> Shortest path first with emergency exits. </title> <booktitle> In Proceedings of SIGCOMM '90, </booktitle> <year> 1990. </year>
Reference-contexts: Out of the papers that fit our criteria (i.e. they looked at large networks, not just at the events in one router; they simulated or implemented their algorithms; and they included information about the simulation or implementation environment), one used the Internet [10], two used regular graphs <ref> [12, 19] </ref>, two used graphs that were copies of real internetworks [12, 22], one simulated a five node WAN [4], one used two real computers to be the entire internetwork [7], one used a LAN to simulate a WAN [13], and ten, about half of the papers, used random graphs without
Reference: [20] <author> Bernard M. Waxman. </author> <title> Routing of multipoint connections. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 6(9) </volume> <pages> 1617-1622, </pages> <month> December </month> <year> 1988. </year>
Reference-contexts: Only five used clearly specified random graphs <ref> [5, 9, 18, 20, 21] </ref>. The results of any simulation depend upon the model on which the simulation is carried out. <p> The model allows an arbitrary number of levels, but Calvert et al. [5] restricted consideration to two levels. Figure 1 contains a sample Two-Level graph with 100 nodes. The hierarchical nature of its two level structure is quite evident. 3.2 Waxman Graphs Waxman <ref> [20] </ref> proposed a random graph model that has become something of a de facto standard. After distributing N nodes in the x-y coordinate plane, each pair of nodes p and 2 3 q is considered. Let d be the Euclidean distance between p and q.
Reference: [21] <author> L. Wei and D. Estrin. </author> <title> The trade-offs of multicast trees and algorithms. </title> <note> In To appear in Proceedings of ICCCN '94, </note> <year> 1994. </year>
Reference-contexts: Only five used clearly specified random graphs <ref> [5, 9, 18, 20, 21] </ref>. The results of any simulation depend upon the model on which the simulation is carried out. <p> degree, Doar and Leslie added a scaling factor to Waxman's edge probability equation. (Note that Wei and Estrin further refined this model, suggested that coupling fi values above one (which Waxman's original idea did not allow) with very small ff values produced graphs that "appeared to be of practical significance" <ref> [21] </ref>.) After distributing N nodes randomly over an x-y coordiate grid, this method goes through every pair of nodes and calculates the Euclidean distance between the nodes.
Reference: [22] <author> William T. Zaumen and J.J. Garcia-Luna Aceves. </author> <title> Dynamics of distributed shortest-path routing algorithms. </title> <booktitle> In Proceedings of SIGCOMM '91, </booktitle> <year> 1991. </year> <month> 16 </month>
Reference-contexts: (i.e. they looked at large networks, not just at the events in one router; they simulated or implemented their algorithms; and they included information about the simulation or implementation environment), one used the Internet [10], two used regular graphs [12, 19], two used graphs that were copies of real internetworks <ref> [12, 22] </ref>, one simulated a five node WAN [4], one used two real computers to be the entire internetwork [7], one used a LAN to simulate a WAN [13], and ten, about half of the papers, used random graphs without specifying how they were generated [1, 2, 3, 6, 8, 10,
References-found: 22

