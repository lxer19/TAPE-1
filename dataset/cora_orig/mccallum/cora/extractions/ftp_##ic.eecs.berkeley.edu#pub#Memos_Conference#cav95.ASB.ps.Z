URL: ftp://ic.eecs.berkeley.edu/pub/Memos_Conference/cav95.ASB.ps.Z
Refering-URL: http://www-cad.eecs.berkeley.edu/~vigyan/publications/index.html
Root-URL: http://www.cs.berkeley.edu
Email: Email: fadnan,vigyan,felice,brayton,albertog@cs.berkeley.edu  
Title: It Usually Works: The Temporal Logic of Stochastic Systems  
Author: Adnan Aziz Vigyan Singhal Felice Balarin Robert K. Brayton Alberto L. Sangiovanni-Vincentelli 
Address: Berkeley, CA 94720, USA  
Affiliation: Department of Electrical Engineering and Computer Sciences University of California,  
Abstract: In this paper the branching time logic pCTL fl is defined. pCTL fl expresses quantitative bounds on the probabilities of correct behavior; it can be interpreted over discrete Markov processes. A bisim-ulation relation is defined on finite Markov processes, and shown to be sound and complete with respect to pCTL fl . We extend the universe of models to generalized Markov processes in order to support notions of refinement, abstraction, and parametrization. Model checking pCTL fl over generalized Markov processes is shown to be elementary by a reduction to RCF. We conclude by describing practical and theoretical avenues for further work.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> R. Alur, C. Courcoubetis, and D. Dill. </author> <title> Model Checking for Probabilistic Real Time Systems. </title> <booktitle> In Proc. of the Colloquium on Automata, Languages, and Programming, </booktitle> <pages> pages 115-126, </pages> <year> 1991. </year>
Reference-contexts: In such paradigms, it is proved that verification can be reduced to performing conventional temporal logic analysis on a model with fairness constraints that eliminate events of measure zero; the actual probabilities of events is immaterial. Examples of such approaches are given in <ref> [13, 16, 20, 1] </ref>. [16] introduces the notion of ff-fairness; this construct embodies the fact that if a given state is visited infinitely often, then with probability one each state which the given state can make a transition to with non-zero probability is visited infinitely often. [20] follows an approach in <p> Again, verifying such systems reduces to conventional PLTL checking on a Kripke structure with appropriate fairness constraints, which can be done by automata theoretic techniques. <ref> [1] </ref> verifies timed stochastic systems; again in this approach randomness is modelled by fairness. Verification is performed on a fair timed automaton; the proof of correctness is non trivial due to the density of the underlying model of time. <p> A Markov process (MP) is a 4-tuple (AP; S; T; L) where AP is a finite set of atomic propositions, S is a countable set of states, T : S fi S ! <ref> [0; 1] </ref> is the transition probability matrix satisfying the condition (8s 2 S) s 0 2S T (s; s 0 ) = 1, and L : S ! 2 AP is a labeling function. Define = 2 AP to be the alphabet of the FMP. <p> The transition probability matrix T yields the probability measure s 0 : C s 0 ! <ref> [0; 1] </ref>; by the measure extension theorem [19], s 0 : C s 0 ! [0; 1] is well defined. <p> The transition probability matrix T yields the probability measure s 0 : C s 0 ! <ref> [0; 1] </ref>; by the measure extension theorem [19], s 0 : C s 0 ! [0; 1] is well defined. Given a set fi of sequences over the alphabet 2 AP , we will abuse notation and refer to the probability of fi when we mean the probability of the set of all state sequences starting at s 0 which give words in fi. <p> uniquely identify the SCC DAG of compatible Markov processes, there is a formula s (x 11 ; : : : ; x nn ) in the language of Real Closed Fields (RCF) which defines the set of "satisfying assignments" i.e. the set of all T : S fi S ! <ref> [0; 1] </ref> such that whenever T is compatible with the constraints of G then s; (S; AP; L; T ) j= . s is derived inductively from the subformulae of .
Reference: 2. <author> A. Aziz, V. Singhal, F. Balarin, R. K. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> It Usually Works: The Temporal Logic of Stochastic Systems. </title> <address> http://www-cad.eecs.berkeley.edu:80/~adnan/cav95.1. </address>
Reference-contexts: on all formulae are probabilistically bisimilar i.e. (8 2 pCTL fl ) s j= $ t j= ) E prob (s; t) The proof of this lemma proceeds in the spirit of [6]: inductively build up pCTL fl formula eventually characterizing states upto E prob equivalence; details are given in <ref> [2] </ref>. It should be noted that the states can in fact be characterized in pCTL; this is surprising given that bisimulation under fairness can not be characterized by CTL [3], and that probabilistic transitions are in some loose sense "fair" transitions.
Reference: 3. <author> A. Aziz, V. Singhal, F. Balarin, R. K. Brayton, and A. L. Sangiovanni-Vincentelli. </author> <title> Equivalences for Fair Kripke Structures. </title> <booktitle> In International Colloquium on Automata, Languages and Programming. </booktitle> <publisher> Springer Verlag, </publisher> <month> July </month> <year> 1994. </year>
Reference-contexts: It should be noted that the states can in fact be characterized in pCTL; this is surprising given that bisimulation under fairness can not be characterized by CTL <ref> [3] </ref>, and that probabilistic transitions are in some loose sense "fair" transitions.
Reference: 4. <author> R. I. Bahar, E. A. Frohm, C. M. Gaona, G. D. Hachtel, E. Macii, A. Pardo, and F. Somenzi. </author> <title> Algebraic Decision Diagrams and their Applications . In Proc. </title> <booktitle> Intl. Conf. on Computer-Aided Design, </booktitle> <pages> pages 188-192, </pages> <year> 1993. </year>
Reference-contexts: BDD based symbolic techniques have been successful as a heuristic for coping with state explosion; analogs of the BDD such as the ADD of <ref> [4] </ref>, may similarly prove successful in dealing with composed Markov processes. The advent of efficient packages for finding roots of multi-variate polynomial systems [11] and fragments of RCF [17] is evidence that model checking general Markov processes may be feasible.
Reference: 5. <author> M. Ben-Or, D. Kozen, and J. Reif. </author> <title> The Complexity of Elementary Algebra and Geometry. </title> <booktitle> In Proc. ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 457-464, </pages> <year> 1984. </year>
Reference-contexts: Using characterizations of discrete Markov processes developed in [15] and results on the decidability of real closed fields <ref> [5] </ref> we derive an elementary decision procedure for model checking pCTL fl over generalized discrete Markov processes. There is a body of past work on applying formal methods to stochastic systems. An early approach is [14] which computes the expected time for a probabilistic program to terminate. <p> A detailed analysis, exploiting the elementary nature of RCF <ref> [5] </ref>, shows that the procedure is in fact elementary. The existence of efficient procedures for existential fragments of RCF can be invoked to get better bounds. Definition 10.
Reference: 6. <author> M. C. Browne, E. M. Clarke, and O. Grumberg. </author> <title> Characterizing Kripke Structures in Temporal Logic. </title> <type> Technical Report CMU-CS-87-104, </type> <institution> Department of Computer Science, Carnegie Mellon University, </institution> <year> 1987. </year>
Reference-contexts: States which agree in their truth values on all formulae are probabilistically bisimilar i.e. (8 2 pCTL fl ) s j= $ t j= ) E prob (s; t) The proof of this lemma proceeds in the spirit of <ref> [6] </ref>: inductively build up pCTL fl formula eventually characterizing states upto E prob equivalence; details are given in [2].
Reference: 7. <author> R. Cleavland, S. A. Smolka, and A. Zwarico. </author> <title> Testing Preorders for Probabilistic Processes. </title> <booktitle> In Proc. of the Colloquium on Automata, Languages, and Programming, </booktitle> <pages> pages 708-719, </pages> <year> 1992. </year>
Reference-contexts: Definitions of probabilistic simulation/bisimulation exist in the CCS/CSP community eg <ref> [7] </ref>, which are essentially the same as ours. However, the relationship between probabilistic bisimulation and the expressiveness of probabilistic temporal logic has not been explored in the past. 2 Definitions 2.1 Finite Markov Processes Definition 1. <p> It should be noted that pCTL can be model checked in polynomial time. 4 Bisimulation for finite Markov processes Developing a notion of bisimulation is integral to the analysis of state based dynamical systems. Notions of probabilistic bisimulation exists in CCS/CSP literature <ref> [7] </ref>. In this section we develop a notion of bisimulation for Markov processes and show that it is sound with respect to pCTL fl , and furthermore, that pCTL fl is expressive with respect to the bisimulation.
Reference: 8. <author> C. Courcoubetis and M. Yannakakis. </author> <title> Verifying Temporal Properties of Finite State Probabilistic Programs. </title> <booktitle> In Proc. IEEE Symposium on the Foundations of Computer Science, </booktitle> <pages> pages 338-345, </pages> <year> 1988. </year>
Reference-contexts: Formulations of quantitative approaches to probabilistic verification also exist. [12] describes an extension of CTL, referred to as PCTL, capable of expressing numerical bounds on the probability of specified properties; it is essentially identical to the logic pCTL defined in x 3. <ref> [8] </ref> describes an algorithm for determining the measure of a set of paths in a discrete Markov process satisfying a PLTL [10] formula; this immediately provides a procedure for model checking the logic pCTL fl , defined in x 3. <p> Model checking of CTL fl over finite Markov processes is decidable in PSPACE. This result follows immediately from the results of <ref> [8] </ref> where a PSPACE procedure is given for computing the probability that a given discrete Markov process satisfies a specification in linear logic, specifically PLTL [10].
Reference: 9. <author> C. Courcoubetis and M. Yannakakis. </author> <title> Automatic Verification of Finite State Programs. </title> <booktitle> In Proc. of the Colloquium on Automata, Languages, and Programming, </booktitle> <pages> pages 326-347, </pages> <year> 1990. </year>
Reference-contexts: There is a body of past work on applying formal methods to stochastic systems. An early approach is [14] which computes the expected time for a probabilistic program to terminate. Programs are modeled as Markov chains; the techniques are standard in Markov chain theory. <ref> [9] </ref> describes an approach to the control of finite state Markov processes subject to !-regular specifications. Criterion for optimality are developed; finding an optimal control strategy reduces to solving a linear program.
Reference: 10. <author> E. A. Emerson. </author> <title> Temporal and Modal Logic. </title> <editor> In J. van Leeuwen, editor, </editor> <title> Formal Models and Semantics, </title> <booktitle> volume B of Handbook of Theoretical Computer Science, </booktitle> <pages> pages 996-1072. </pages> <publisher> Elsevier Science, </publisher> <year> 1990. </year>
Reference-contexts: 1 Introduction The study of formal methods to specify and prove properties of finite state systems has been the subject of intense research. Various methodologies have been proposed; some of the most fruitful, in both theory and practise, have been based on temporal logic <ref> [10] </ref>. Properties are expressed using formulae which are built out of operators on the computation paths. The goal of this paper is to take verification techniques developed for temporal logic, and apply them to stochastic systems, i.e. systems in which there is a certain probability associated with events. <p> We define pCTL fl , a probabilistic variant of Computational Tree Logic <ref> [10] </ref>. The logic expresses quantitative stochastic properties of systems, which are themselves modelled as discrete Markov processes; furthermore, it exhibits an elementary model checking procedure. Discrete Markov processes exhibit a natural notion of bisimulation; this is shown to be sound and complete with respect to pCTL fl . <p> of CTL, referred to as PCTL, capable of expressing numerical bounds on the probability of specified properties; it is essentially identical to the logic pCTL defined in x 3. [8] describes an algorithm for determining the measure of a set of paths in a discrete Markov process satisfying a PLTL <ref> [10] </ref> formula; this immediately provides a procedure for model checking the logic pCTL fl , defined in x 3. Definitions of probabilistic simulation/bisimulation exist in the CCS/CSP community eg [7], which are essentially the same as ours. <p> Model checking of CTL fl over finite Markov processes is decidable in PSPACE. This result follows immediately from the results of [8] where a PSPACE procedure is given for computing the probability that a given discrete Markov process satisfies a specification in linear logic, specifically PLTL <ref> [10] </ref>. The procedure is based on obtaining a deterministic !-automaton accepting the language of the linear specification, and composing it with the Markov process the measure of the set of accepting states of this composed structure can then be obtained by using accumulation techniques [18].
Reference: 11. <author> Ioannis Emiris. </author> <title> Sparse Elimination and Applications in Kinematics. </title> <type> PhD thesis, </type> <institution> University of California at Berkeley, Berkeley, </institution> <address> CA, </address> <month> December </month> <year> 1994. </year>
Reference-contexts: BDD based symbolic techniques have been successful as a heuristic for coping with state explosion; analogs of the BDD such as the ADD of [4], may similarly prove successful in dealing with composed Markov processes. The advent of efficient packages for finding roots of multi-variate polynomial systems <ref> [11] </ref> and fragments of RCF [17] is evidence that model checking general Markov processes may be feasible.
Reference: 12. <author> H. Hansson and B. Jonsson. </author> <title> A Logic for Reasoning about Time and Reliability. </title> <journal> Formal Aspects of Computing, </journal> <volume> 6 </volume> <pages> 512-535, </pages> <year> 1994. </year>
Reference-contexts: Verification is performed on a fair timed automaton; the proof of correctness is non trivial due to the density of the underlying model of time. Formulations of quantitative approaches to probabilistic verification also exist. <ref> [12] </ref> describes an extension of CTL, referred to as PCTL, capable of expressing numerical bounds on the probability of specified properties; it is essentially identical to the logic pCTL defined in x 3. [8] describes an algorithm for determining the measure of a set of paths in a discrete Markov process
Reference: 13. <author> S. Hart and M. Shamir. </author> <title> Probabilistic Temporal Logics for Finite and Bounded Models. </title> <booktitle> In Proc. ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 1-13, </pages> <year> 1984. </year>
Reference-contexts: In such paradigms, it is proved that verification can be reduced to performing conventional temporal logic analysis on a model with fairness constraints that eliminate events of measure zero; the actual probabilities of events is immaterial. Examples of such approaches are given in <ref> [13, 16, 20, 1] </ref>. [16] introduces the notion of ff-fairness; this construct embodies the fact that if a given state is visited infinitely often, then with probability one each state which the given state can make a transition to with non-zero probability is visited infinitely often. [20] follows an approach in
Reference: 14. <author> S. Hart, M. Sharir, and A. Pneuli. </author> <title> Verification of Probabilistic Programs. </title> <journal> SIAM Journal of Computation, </journal> <volume> 13 </volume> <pages> 292-314, </pages> <year> 1984. </year>
Reference-contexts: There is a body of past work on applying formal methods to stochastic systems. An early approach is <ref> [14] </ref> which computes the expected time for a probabilistic program to terminate. Programs are modeled as Markov chains; the techniques are standard in Markov chain theory. [9] describes an approach to the control of finite state Markov processes subject to !-regular specifications.
Reference: 15. <author> A. Paz. </author> <title> Introduction to Probabilistic Automata . Academic-Press, </title> <year> 1971. </year>
Reference-contexts: We also extend the universe of models to include generalized discrete Markov processes which can be used for modelling systems where the transition probabilities are not completely specified; these systems allow notions of abstraction and refinement. Using characterizations of discrete Markov processes developed in <ref> [15] </ref> and results on the decidability of real closed fields [5] we derive an elementary decision procedure for model checking pCTL fl over generalized discrete Markov processes. There is a body of past work on applying formal methods to stochastic systems. <p> The key observation is that if two n state Markov processes with designated initial states agree on their probability measures of all rational events of length less than 2n + 1, then in fact their measures are identical. The proof of this fact is nontrivial; see <ref> [15] </ref>. This observation will allow us to reduce deciding tr to deciding validity in RCF. Let G 1 be a GMP such that all Markov processes compatible with G 1 have identical SCC DAGs. Similarly, let G 2 be a GMP with a unique SCC DAG.
Reference: 16. <author> A. Pnueli and L. Zuck. </author> <title> Probabilistic verification. </title> <journal> Information and Computation, </journal> <volume> 103(1) </volume> <pages> 1-29, </pages> <year> 1993. </year>
Reference-contexts: In such paradigms, it is proved that verification can be reduced to performing conventional temporal logic analysis on a model with fairness constraints that eliminate events of measure zero; the actual probabilities of events is immaterial. Examples of such approaches are given in <ref> [13, 16, 20, 1] </ref>. [16] introduces the notion of ff-fairness; this construct embodies the fact that if a given state is visited infinitely often, then with probability one each state which the given state can make a transition to with non-zero probability is visited infinitely often. [20] follows an approach in <p> In such paradigms, it is proved that verification can be reduced to performing conventional temporal logic analysis on a model with fairness constraints that eliminate events of measure zero; the actual probabilities of events is immaterial. Examples of such approaches are given in [13, 16, 20, 1]. <ref> [16] </ref> introduces the notion of ff-fairness; this construct embodies the fact that if a given state is visited infinitely often, then with probability one each state which the given state can make a transition to with non-zero probability is visited infinitely often. [20] follows an approach in which non-deterministic behavior is
Reference: 17. <author> Ashutosh Rege. </author> <title> Efficient Decision Procedures for Fragments of R.C.F (in preparation). </title> <type> PhD thesis, </type> <institution> University of California at Berkeley, Berkeley, </institution> <address> CA, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: The advent of efficient packages for finding roots of multi-variate polynomial systems [11] and fragments of RCF <ref> [17] </ref> is evidence that model checking general Markov processes may be feasible.
Reference: 18. <author> D. Revuz. </author> <title> Markov Chains. </title> <publisher> North-Holland, </publisher> <year> 1975. </year>
Reference-contexts: The procedure is based on obtaining a deterministic !-automaton accepting the language of the linear specification, and composing it with the Markov process the measure of the set of accepting states of this composed structure can then be obtained by using accumulation techniques <ref> [18] </ref>. It should be noted that pCTL can be model checked in polynomial time. 4 Bisimulation for finite Markov processes Developing a notion of bisimulation is integral to the analysis of state based dynamical systems. Notions of probabilistic bisimulation exists in CCS/CSP literature [7].
Reference: 19. <author> H. L. Royden. </author> <title> Real Analysis . Macmillan Publishing , 1889. </title>
Reference-contexts: The transition probability matrix T yields the probability measure s 0 : C s 0 ! [0; 1]; by the measure extension theorem <ref> [19] </ref>, s 0 : C s 0 ! [0; 1] is well defined.
Reference: 20. <author> M. Y. Vardi and P. L. Wolper. </author> <title> An Automata-Theoretic Approach to Program Verification. </title> <booktitle> In Proc. IEEE Symposium on Logic in Computer Science, </booktitle> <pages> pages 332-334, </pages> <year> 1986. </year> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: In such paradigms, it is proved that verification can be reduced to performing conventional temporal logic analysis on a model with fairness constraints that eliminate events of measure zero; the actual probabilities of events is immaterial. Examples of such approaches are given in <ref> [13, 16, 20, 1] </ref>. [16] introduces the notion of ff-fairness; this construct embodies the fact that if a given state is visited infinitely often, then with probability one each state which the given state can make a transition to with non-zero probability is visited infinitely often. [20] follows an approach in <p> approaches are given in [13, 16, 20, 1]. [16] introduces the notion of ff-fairness; this construct embodies the fact that if a given state is visited infinitely often, then with probability one each state which the given state can make a transition to with non-zero probability is visited infinitely often. <ref> [20] </ref> follows an approach in which non-deterministic behavior is differentiated from stochastic behavior.
References-found: 20

