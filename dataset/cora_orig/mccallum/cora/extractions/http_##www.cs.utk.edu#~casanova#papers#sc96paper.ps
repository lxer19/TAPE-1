URL: http://www.cs.utk.edu/~casanova/papers/sc96paper.ps
Refering-URL: http://www.cs.washington.edu/homes/tom/590AT.html
Root-URL: 
Title: NetSolve: A Network Server for Solving Computational Science Problems  
Author: Henri Casanova Jack Dongarra 
Keyword: Networking, Heterogeneity, Load Balancing, Client-Server, Fault Tolerance, Numerical Computing, Virtual Library.  
Address: 104, Ayres Hall. KNOXVILLE, TN 37996-1301.  104, Ayres Hall. KNOXVILLE, TN 37996-1301.  
Affiliation: University of Tennessee UTK, Dept. of Computer Science  University of Tennessee, Oak Ridge National Laboratory UTK, Dept. of Computer Science  
Email: casanova@cs.utk.edu  dongarra@cs.utk.edu  
Web: http://www.cs.utk.edu/~casanova  http://www.netlib.org/utk/people/JackDongarra.html  
Date: November 12, 1996  
Abstract: This paper presents a new system, called NetSolve, that allows users to access computational resources, such as hardware and software, distributed across the network. The development of NetSolve was motivated by the need for an easy-to-use, efficient mechanism for using computational resources remotely. Ease of use is obtained as a result of different interfaces, some of which require no programming effort from the user. Good performance is ensured by a load-balancing policy that enables NetSolve to use the computational resources available as efficiently as possible. NetSolve offers the ability to look for computational resources on a network, choose the best one available, solve a problem (with retry for fault-tolerance), and return the answer to the user. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Inc The Math Works. </author> <title> MATLAB Reference Guide. </title> <year> 1992. </year>
Reference-contexts: Other libraries demand considerable programming effort from the user, who may not have the time to learn the required programming techniques. While a limited number of tools have been developed to alleviate these difficulties, such tools themselves are usually available only on a limited number of computer systems. MATLAB <ref> [1] </ref> is an example of such a tool. These considerations motivated the establishment of the NetSolve project. NetSolve is a client-server application designed to solve computational science problems over a network.
Reference: [2] <institution> Ninf : Network based Information Library for Globally High Performance Computing. </institution> <note> Proc. of Parallel Object-Oriented Methods and Applications (POOMA), </note> <institution> Santa Fe, </institution> <year> 1996. </year>
Reference-contexts: Moreover, NetSolve uses a load-balancing strategy to improve the use of the computational resources available. Some other systems are currently being developed to achieve somewhat similar goals. Among them we can mention the Network based Information Library for high performance computing (Ninf) <ref> [2] </ref> project which is very comparable to NetSolve in its way of operation, and the Remote Computation System (RCS) [3] which is a remote procedure call facility to provide uniform access to a variety of supercomputers.
Reference: [3] <author> W. Gander P. Arbenz and M. Oettli. </author> <title> The remote computational system. </title> <booktitle> Lecture Note in Computer Science, High-Performance Computation and Network, </booktitle> <volume> 1067 </volume> <pages> 662-667, </pages> <year> 1996. </year>
Reference-contexts: Some other systems are currently being developed to achieve somewhat similar goals. Among them we can mention the Network based Information Library for high performance computing (Ninf) [2] project which is very comparable to NetSolve in its way of operation, and the Remote Computation System (RCS) <ref> [3] </ref> which is a remote procedure call facility to provide uniform access to a variety of supercomputers. This paper introduces the NetSolve system, its architecture and the concepts on which it is based.
Reference: [4] <author> Sun Microsystems, Inc. XDR: </author> <title> External Data Representation Standard. </title> <type> RFC 1014, </type> <institution> Sun Microsystems, Inc., </institution> <month> June </month> <year> 1987. </year>
Reference-contexts: The fact that a process is limited to a certain number of simultaneous TCP/IP connections was not a problem (given the NetSolve specification.) To ensure the correct operation in an heterogeneous environment, NetSolve uses the XDR protocol <ref> [4] </ref> between hosts with incompatible data formats. Actually, this is the default protocol before two hosts agree that they use the same data format.
Reference: [5] <author> D. Kincaid C. Lawson, R. Hanson and F. Krogh. </author> <title> Basic linear algebra subprograms for fortran usage. </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> 5 </volume> <pages> 308-325, </pages> <year> 1979. </year>
Reference-contexts: This feature allows the NetSolve administrator not only to choose the best platform on which to install NetSolve, but also to select the best packages available on the chosen platform. The current implementation of NetSolve at the University of Tennessee uses the BLAS <ref> [5] </ref>, [6], [7], LAPACK [8], ItPack [9], FitPack [10] and LINPACK [11]. These packages are available on a large number of platforms and are freely distributed.
Reference: [6] <author> S. Hammarling J. Dongarra, J. Du Croz and R. Hanson. </author> <title> An extended set of fortran basic linear algebra subprograms. </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> 14(1) </volume> <pages> 1-32, </pages> <year> 1988. </year>
Reference-contexts: This feature allows the NetSolve administrator not only to choose the best platform on which to install NetSolve, but also to select the best packages available on the chosen platform. The current implementation of NetSolve at the University of Tennessee uses the BLAS [5], <ref> [6] </ref>, [7], LAPACK [8], ItPack [9], FitPack [10] and LINPACK [11]. These packages are available on a large number of platforms and are freely distributed.
Reference: [7] <author> I. Duff J. Dongarra, J. Du Croz and S. Hammarling. </author> <title> A set of level 3 basic linear algebra subprograms. </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> 16(1) </volume> <pages> 1-17, </pages> <year> 1990. </year>
Reference-contexts: This feature allows the NetSolve administrator not only to choose the best platform on which to install NetSolve, but also to select the best packages available on the chosen platform. The current implementation of NetSolve at the University of Tennessee uses the BLAS [5], [6], <ref> [7] </ref>, LAPACK [8], ItPack [9], FitPack [10] and LINPACK [11]. These packages are available on a large number of platforms and are freely distributed.
Reference: [8] <author> E. Anderson, Z. Bai, C. Bischof, J. Demmel, J. Dongarra, J. Du Croz, A. Greenbaum, S. Hammarling, A. McKen-ney, S. Ostrouchov, and D. Sorensen. </author> <title> LAPACK Users' Guide. </title> <publisher> SIAM Philadelphia, </publisher> <address> Pennsylvania, 2 edition, </address> <year> 1995. </year>
Reference-contexts: This feature allows the NetSolve administrator not only to choose the best platform on which to install NetSolve, but also to select the best packages available on the chosen platform. The current implementation of NetSolve at the University of Tennessee uses the BLAS [5], [6], [7], LAPACK <ref> [8] </ref>, ItPack [9], FitPack [10] and LINPACK [11]. These packages are available on a large number of platforms and are freely distributed.
Reference: [9] <author> David M. Young David R. Kincaid, John R. Respess and Roger G. Grimes. </author> <title> Itpack 2c: A fortran package for solving large sparse linear systems by adaptive accelerated iterative methods. </title> <type> Technical report, </type> <institution> University of Texas at Austin, Boeing Computer Services Company, </institution> <year> 1996. </year>
Reference-contexts: This feature allows the NetSolve administrator not only to choose the best platform on which to install NetSolve, but also to select the best packages available on the chosen platform. The current implementation of NetSolve at the University of Tennessee uses the BLAS [5], [6], [7], LAPACK [8], ItPack <ref> [9] </ref>, FitPack [10] and LINPACK [11]. These packages are available on a large number of platforms and are freely distributed.
Reference: [10] <author> A. Cline. </author> <title> Scalar- and planar-valued curve fitting using splines under te nsion. </title> <journal> Communications of the ACM, </journal> <volume> 17 </volume> <pages> 218-220, </pages> <year> 1974. </year>
Reference-contexts: The current implementation of NetSolve at the University of Tennessee uses the BLAS [5], [6], [7], LAPACK [8], ItPack [9], FitPack <ref> [10] </ref> and LINPACK [11]. These packages are available on a large number of platforms and are freely distributed.
Reference: [11] <author> C. B. Moler J. J. Dongarra, J. R. Bunch and G. W. Stewart. </author> <title> LINPACK Users' Guide. </title> <publisher> SIAM Press, </publisher> <year> 1979. </year>
Reference-contexts: The current implementation of NetSolve at the University of Tennessee uses the BLAS [5], [6], [7], LAPACK [8], ItPack [9], FitPack [10] and LINPACK <ref> [11] </ref>. These packages are available on a large number of platforms and are freely distributed.
Reference: [12] <author> J. Dongarra and D. Walker. </author> <title> Software libraries for linear algebra computations on high performance computers. </title> <journal> SIAM Review, </journal> <volume> 37(2) </volume> <pages> 151-180, </pages> <year> 1995. </year> <month> 16 </month>
Reference-contexts: The current implementation of NetSolve at the University of Tennessee uses the BLAS [5], [6], [7], LAPACK [8], ItPack [9], FitPack [10] and LINPACK [11]. These packages are available on a large number of platforms and are freely distributed. The use of ScaLAPACK <ref> [12] </ref> on massively parallel processors would be a way to use the power of high-performance parallel machines via NetSolve. 4 Client Interfaces One of the main goals of NetSolve are to provide the user with a large number of interfaces and to keep them as simple as possible.
References-found: 12

