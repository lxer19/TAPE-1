URL: http://daedalus.cs.berkeley.edu/publications/services-WINET.ps.gz
Refering-URL: http://www.cs.berkeley.edu/~jasonh/shadow/original-proposal.html
Root-URL: 
Email: fhodes,randyg@cs.berkeley.edu  
Title: Composable Ad hoc Location-based Services for Heterogeneous Mobile Clients problem: 1) allowing device mobility, 2)
Author: Todd D. Hodes, Randy H. Katz 
Note: Four capabilities are needed for a comprehensive solution to this  
Date: May 5, 1998  
Address: Berkeley  
Affiliation: Computer Science Division University of California,  
Abstract: This paper introduces a comprehensive architecture that supports adapting a client device's functionality to new services it discovers as it moves into a new environment. Users wish to invoke services such as controlling the lights, printing locally, gaining access to application-specific proxies, or reconfiguring the location of DNS servers from their mobile devices. But a priori standardization of interfaces and methods for service invocation is infeasible. Thus, the challenge is to develop a new service architecture that supports heterogeneity in client devices and controlled objects while making minimal assumptions about standard interfaces and control protocols. We motivate the need for these capabilities by using an example scenario to derive the design requirements for our mobile services architecture. We then present a prototype implementation of elements of the architecture and some example services using it, including controls to audio/visual equipment, extensible mapping, server au-toconfiguration, location tracking, and local printer access. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> AMIR, E., MCCANNE, S., AND KATZ, R. </author> <title> Receiver-driven Bandwidth Allocation for Lightweight Sessions. </title> <booktitle> Proc. ACM Multimedia '97 (November 1997). </booktitle>
Reference-contexts: A failure to keep accurate time can break some security systems, notably Kerberos. Spawning a local RTP gateway/transcoder for unlayered data in MBone sessions may be necessary if movement has changed the bottleneck link to sources or to facilitate local management of inter-session bandwidth sharing <ref> [1] </ref>. Autoconfiguration also adds a level of fault tolerance. If a network link goes down, SIP beacons coming across the failed link will stop.
Reference: [2] <author> AMIR, E., MCCANNE, S., AND KATZ, R. </author> <title> An Active Service Framework and its Application to Real-time Multimedia Transcoding. </title> <booktitle> Proc. ACM SIGCOMM '98 (August 1998). </booktitle>
Reference-contexts: Our current implementation simply allows for callbacks to be set that track VALUE entries in the SIP databases. A more complete and detailed solution to this problem applied to media gateways in described in <ref> [2] </ref>. 4.3 Location Tracking Location tracking has been addressed in other systems [39, 21], and can be implemented by allowing queries against foreign agent registrations or routing table entries (as appropriate).
Reference: [3] <author> AMIR, E., MCCANNE, S., AND ZHANG, H. </author> <title> An Application-level Video Gateway. </title> <booktitle> Proc. ACM Multimedia '95 (November 1995), </booktitle> <pages> 511-522. </pages>
Reference-contexts: Examples include web proxies that perform on-demand dynamic transcod-ing [15], WWW data caches, real-time media transcoders <ref> [3] </ref>, and multicast-to-unicast gateways for multicast-unaware client devices (i.e., most PDAs). Additionally, though, proxy/gateway/server autoconfiguration is important in a mobile environment for more than just efficiency. <p> Using such an approach requires that devices be manually adapted to new environments. Our conception of a proxy server is based on the model expressed explicitly in the Berkeley Client/Proxy/Server model [15] and implicitly in other work <ref> [8, 3] </ref> that places application-level or network-level entities near, but not at, the endpoints of communications. This is another way of thinking about Active Networks [47], driven by end-to-end design principles [36]: push agents to as close to the endpoints as possible, but no further.
Reference: [4] <author> ANDERSON, T., PATTERSON, D., CULLER, D., </author> <title> AND THE NOW TEAM. A Case for Networks of Workstations: NOW. </title> <note> IEEE Micro (February 1995). </note>
Reference-contexts: This concept of 12 leveraging the well-connected, computationally powerful side of the wireless link (via proxies or agents) pervades mobility research. It is also driven by the growing availability of workstation farms <ref> [4] </ref> designed to provide compute resources for just such applications. 7 Continuing Work and Future Direc tions Our continuing work involves iterating over the design, refining the implementation, and investigating various other approaches. 7.4 Wide-area issues The current implementation has been tested only in a local area environment; work is continuing
Reference: [5] <author> AZIZ, A., AND DIFFIE, W. </author> <title> Privacy and Authentication for Wireless Local Area Networks. </title> <booktitle> In IEEE Personal Communications (First Quarter 1994), IEEE, </booktitle> <pages> pp. 25-31. </pages>
Reference-contexts: We are still trying to quantitatively determine which data, if any, is best dedicated to these bits for optimizing reasonable client-driven workloads. 3.6 Scoped Access Control Making services available to visitors brings up a host of general security issues, including those specific to the wireless domain <ref> [9, 16, 5] </ref>.
Reference: [6] <author> BAKRE, A., AND BADRINATH, B. </author> <title> Reworking the RPC Paradigm for Mobile Clients. </title> <booktitle> Mobile Networks and Applications 1, </booktitle> <month> 4 (January </month> <year> 1997), </year> <pages> 371-86. </pages>
Reference-contexts: It also requires a mechanism for securely delegating operations [27]. 7.7 Queued RPC Queued RPC mechanisms <ref> [23, 6] </ref> support disconnection and link variability by incorporating application-managed messaging state. Queued RPC and asynchronous notification support is not incorporated into our system, but should be.
Reference: [7] <author> BALAKRISHNAN, H., PADMANABHAN, V., SESHAN, S., AND KATZ, R. </author> <title> A Comparison of Mechanisms for Improving TCP Performance over Wireless Links. </title> <journal> IEEE/ACM Transactions on Networking (December 1997). </journal>
Reference-contexts: This ubiquitous computing environment is characterized by a number of challenges, each illustrating the need for adaptation. One challenge is the continuously available but varying network connectivity <ref> [7] </ref>, characterized by high handoff rates exacerbated by the demands of spectrum reuse. Another is the variability in client devices: impoverished devices need to push computation into the local infrastructure to allow for application-specific adaptation [15].
Reference: [8] <author> BALAKRISHNAN, H., SESHAN, S., AMIR, E., AND KATZ, R. </author> <title> Improving TCP/IP Performance over Wireless Networks. </title> <booktitle> In Proc. 1st ACM Conf. on Mobile Computing and Networking (San Franscisco, </booktitle> <address> California, </address> <month> November </month> <year> 1995), </year> <pages> pp. 2-11. </pages>
Reference-contexts: Using such an approach requires that devices be manually adapted to new environments. Our conception of a proxy server is based on the model expressed explicitly in the Berkeley Client/Proxy/Server model [15] and implicitly in other work <ref> [8, 3] </ref> that places application-level or network-level entities near, but not at, the endpoints of communications. This is another way of thinking about Active Networks [47], driven by end-to-end design principles [36]: push agents to as close to the endpoints as possible, but no further.
Reference: [9] <author> BROWN, D. </author> <title> Techniques for Privacy and Authentication in Personal Communications Systems. </title> <journal> In IEEE Personal Communications (August 1995), IEEE, </journal> <pages> pp. 6-10. </pages>
Reference-contexts: We are still trying to quantitatively determine which data, if any, is best dedicated to these bits for optimizing reasonable client-driven workloads. 3.6 Scoped Access Control Making services available to visitors brings up a host of general security issues, including those specific to the wireless domain <ref> [9, 16, 5] </ref>.
Reference: [10] <author> BUKOWSKI, R., AND DOWNS, L. </author> <title> User's Guide to the 608-7 Computer Control System, </title> <month> December </month> <year> 1993. </year> <title> UC Berkeley CS260 class project. </title>
Reference-contexts: The DEC workstation talks to the AMX via a RS-232 serial connection, which allows the workstation to act as the control interface. In 1993, Bukowski and Downs designed a library for accessing the AMX from a workstation for use in a similar room <ref> [10] </ref>. They also produced a client/server package utilizing the library.
Reference: [11] <author> CLARK, D. </author> <title> The Design Philosophy of the DARPA Internet Protocols. </title> <booktitle> Proceedings of SIGCOMM '88 (Aug. </booktitle> <year> 1988), </year> <pages> 195-206. </pages>
Reference-contexts: Fortunately, though objects can be addressed globally, repository queries may be assumed to show locality, and eventual consistency semantics are acceptable. This allows for the use of a soft-state update approach such as an announce/listen protocol <ref> [11] </ref>. Thus, these announcements and queries can be scoped and this scoping can provide the basis for hierarchy.
Reference: [12] <author> CLARK, D., AND TENNENHOUSE, D. </author> <title> Architectural Considerations for a New Generation of Protocols. </title> <booktitle> Proceedings of ACM SIGCOMM '90 (September 1990), </booktitle> <pages> 201-208. </pages>
Reference-contexts: The utility of beacon payload augmentation is highly dependent on the direction of the beaconing, traffic patterns, and application mix. An argument against augmenting beacons at all is that orthogonal applications shouldn't mix their data units that may have been properly sized by the application (c.f., application-level framing <ref> [12] </ref> or joint source-channel coding [31]). We choose to augment our beacons with bootstrap information, a ticket for scoping of services, and a dynamically configurable application-specific payload. The encoding is shown in Figure 5.
Reference: [13] <author> DAVIS, C., VIXIE, P., GOODWIN, T., AND DICKINSON, I. </author> <title> A Means for Expressing Location Information in the Domain Name System. RFC, </title> <month> Jan </month> <year> 1996. </year> <month> RFC-1876. </month>
Reference-contexts: This technique can be extended for use with an absolute-positioning-based notation for physical geography, as in the proposed LOC DNS record type <ref> [13] </ref> extended to objects without IP addresses. In a system with absolute positioning, neighbor pointers are unnecessary; the relative-positioning-based approach, though, is more robust to precision errors and usable when no reference absolute positions are available. <p> For example, the only hints of geographic information are out-of-band channels, heuristically through the IP interface domain name (whitehouse.gov in Washington, DC), IP address-to-city registration mappings available through the WHOIS service, or possibly the experimental DNS LOC record type <ref> [13] </ref>. Work has been done to allow clients to recreate these topological relationships for a small class of services using limited support from the network [18]. We'd like to overload our hierarchical service infrastructure this functionality directly.
Reference: [14] <institution> Extensible Markup Language Home Page. </institution> <note> http://www.w3c.org/xml, 1998. </note>
Reference-contexts: IR may be a preferable transmission media for tightly controlled localization. 2 The ISL, though called a `language,' can be implemented atop another high-level language syntax or document format, such as in Java or as an XML schema <ref> [14] </ref>. As concrete examples, we would like to allow an application to buffer DNS queries (calls to one object method) through a local cache (calls to another object), while instantiating the new functionality through the original UI.
Reference: [15] <author> FOX, A., BREWER, E., GRIBBLE, S., AND AMIR, E. </author> <title> Adapting to Network and Client Variability via On-Demand Dynamic Transcoding. </title> <booktitle> ASPLOS (1996). </booktitle>
Reference-contexts: One challenge is the continuously available but varying network connectivity [7], characterized by high handoff rates exacerbated by the demands of spectrum reuse. Another is the variability in client devices: impoverished devices need to push computation into the local infrastructure to allow for application-specific adaptation <ref> [15] </ref>. A third characteristic is the variability in available services as the environment changes around the client. It is this third feature that has been least addressed by previous research. <p> Examples include web proxies that perform on-demand dynamic transcod-ing <ref> [15] </ref>, WWW data caches, real-time media transcoders [3], and multicast-to-unicast gateways for multicast-unaware client devices (i.e., most PDAs). Additionally, though, proxy/gateway/server autoconfiguration is important in a mobile environment for more than just efficiency. <p> Using such an approach requires that devices be manually adapted to new environments. Our conception of a proxy server is based on the model expressed explicitly in the Berkeley Client/Proxy/Server model <ref> [15] </ref> and implicitly in other work [8, 3] that places application-level or network-level entities near, but not at, the endpoints of communications.
Reference: [16] <author> FOX, A., AND GRIBBLE, S. D. </author> <title> Security on the Move: Indirect Authentication using Kerberos. </title> <booktitle> Proceedings of the 2nd ACM International Conference on Mobile Computing and Networking (1996), </booktitle> <pages> 10-12. </pages>
Reference-contexts: We are still trying to quantitatively determine which data, if any, is best dedicated to these bits for optimizing reasonable client-driven workloads. 3.6 Scoped Access Control Making services available to visitors brings up a host of general security issues, including those specific to the wireless domain <ref> [9, 16, 5] </ref>.
Reference: [17] <author> GOLDBERG, I., WAGNER, D., THOMAS, R., AND BREWER, E. </author> <title> A Secure Environment for Untrusted Helper Applications: Confining the Wily Hacker. </title> <booktitle> Proc. of the 6th USENIX Security Symposium (1996). </booktitle>
Reference-contexts: Because in most cases we are only transferring interface code rather than fully general mobile code, it is probable that a sandboxed environment (such as with Java applets, Safe-Tcl, or Janus <ref> [17] </ref>) can be used without constraining the service's functionality. This is another benefit of the proxy-based access model: it segments the security domain, thereby screening more of the system internals from the user.
Reference: [18] <author> GUYTON, J. D., AND SCHWARTZ, M. F. </author> <title> Experiences with a Survey Tool for Discovering Network Time Protocol Servers. </title> <booktitle> Proc. of the USENIX Summer Conference (June 1994), </booktitle> <pages> 257-265. </pages>
Reference-contexts: Work has been done to allow clients to recreate these topological relationships for a small class of services using limited support from the network <ref> [18] </ref>. We'd like to overload our hierarchical service infrastructure this functionality directly. To do so, each service interaction server maintains pointers to others in the hierarchy and to peers. The pointers are then links in a geographic chain similar to the more familiar concept chains used in the WWW.
Reference: [19] <author> HANDLEY, M. </author> <title> SAP: Session Announcement Protocol, draft-ietf-mmusic-sap-00.ps. </title> <type> IETF, </type> <year> 1996. </year>
Reference-contexts: Overlay networking [45] has demonstrated the feasibility of seamless hand-off between interfaces to different Internet service providers and the reality of ubiquitous connectivity. The developing Service Location Protocol [49], the Domain Name Service [33], and the Session Announcement Protocol <ref> [19] </ref> address some concerns in resource discovery and management; DNS and the Session Description Protocol [20] address naming. Such efforts have been instrumental in motivating this work and in driving its design. The rest of this paper is structured as follows. <p> DNS is a widely-deployed distributed name service. SDP is a container protocol for associating a single name with a collection of application-specific multimedia transports and their (most often multicast) channels. SDP messages are delivered via the Session Announcement Protocol (SAP) <ref> [19] </ref>, an announce/listen protocol that uses scoped constant-bandwidth allocations. Alternatives for the implementation of object naming include extending DNS with new record types, extending SDP/SAP with new application types and finer scoping, hybridizing the two, or developing a separate hierarchy to match this need rather than overloading DNS and/or SDP/SAP.
Reference: [20] <author> HANDLEY, M., AND JACOBSON, V. SDP: </author> <title> Session Description Protocol, draft-ietf-mmusic-sdp-03.ps. </title> <type> IETF, </type> <year> 1997. </year>
Reference-contexts: The developing Service Location Protocol [49], the Domain Name Service [33], and the Session Announcement Protocol [19] address some concerns in resource discovery and management; DNS and the Session Description Protocol <ref> [20] </ref> address naming. Such efforts have been instrumental in motivating this work and in driving its design. The rest of this paper is structured as follows. In Section 2, we discuss the problems of service provision and provide a framework for describing a service architecture's core functionality. <p> Existing methods for naming include using the Domain Name Service (DNS) [33] for objects with unicast IP addresses or the Session Description Protocol (SDP) <ref> [20] </ref> for lightweight sessions. DNS is a widely-deployed distributed name service. SDP is a container protocol for associating a single name with a collection of application-specific multimedia transports and their (most often multicast) channels.
Reference: [21] <author> HARTER, A., AND HOPPER, A. </author> <title> A Distributed Location System for the Active Office. </title> <journal> IEEE Network Magazine 8, </journal> <month> 1 (January </month> <year> 1994). </year>
Reference-contexts: Client beaconing is used in both the Active Badge <ref> [21] </ref> and PARCTAB systems [37], while server beaconing was used in Columbia Mobile IP [22]. IETF Mobile IP [35] utilizes both periodic advertisements and periodic solicitations. One might expect that the different policies optimize for different applications' operating modes. <p> Our current implementation simply allows for callbacks to be set that track VALUE entries in the SIP databases. A more complete and detailed solution to this problem applied to media gateways in described in [2]. 4.3 Location Tracking Location tracking has been addressed in other systems <ref> [39, 21] </ref>, and can be implemented by allowing queries against foreign agent registrations or routing table entries (as appropriate). These systems suffer from the limitation that client devices must be turned off or not carried to ensure users are not vulnerable to continuous detection (e.g., while in a restroom). <p> Our mechanism for dynamically updating the current SIP location could be adapted as a scope discovery mechanism and coexist with other such mechanisms in the proposal (i.e. having a SCOPE DHCP option). The seminal PARCTAB [37] and Active Badge <ref> [21] </ref> systems, along with related work by Schilit [38, 39, 40], were among the first to attack the issues of client applications and network support for mobility in tandem. We borrow much from this work, including the focus on mapping, event notification, and support for impoverished devices.
Reference: [22] <author> IOANNIDIS, J., DUCHAMP, D., AND MAGUIRE, G. </author> <title> IP-Based Protocols for Mobile Internetworking. </title> <booktitle> In ACM SIGCOMM Symposium on Communications, Architecture, and Protocols (1991), </booktitle> <pages> pp. 235-245. </pages>
Reference-contexts: Client beaconing is used in both the Active Badge [21] and PARCTAB systems [37], while server beaconing was used in Columbia Mobile IP <ref> [22] </ref>. IETF Mobile IP [35] utilizes both periodic advertisements and periodic solicitations. One might expect that the different policies optimize for different applications' operating modes. This is indeed the case: there are trade-offs in such a decision, as it varies allowances for privacy, anonymity, particular protocols' performance, and scalability.
Reference: [23] <author> JOSEPH, A., DELESPINASSE, A., TAUBER, J., GIFFORD, D., AND KAASHOEK, M. F. </author> <title> Rover: A Toolkit for Mobile Information Access. </title> <booktitle> Proceedingsof the Fifteenth Symposium on Operating System Principles (December 1995). </booktitle>
Reference-contexts: Though we have focused on access for wireless mobile clients, facets of our approach are applicable to wired networking. Examples include automatic reconfiguration of server location (for fault tolerance) and scoping of access to services through limited broadcast of tickets. 6 Related Work The Rover <ref> [23] </ref> and Wit [51] systems also recognized the need to split applications into a lightweight front-end and more heavyweight proxy at the last hop wireless link. <p> It also requires a mechanism for securely delegating operations [27]. 7.7 Queued RPC Queued RPC mechanisms <ref> [23, 6] </ref> support disconnection and link variability by incorporating application-managed messaging state. Queued RPC and asynchronous notification support is not incorporated into our system, but should be.
Reference: [24] <author> KAASHOEK, F., PICKNEY, T., AND TAUBER, J. </author> <title> Dynamic Documents. </title> <booktitle> Workshop on Mobile Computing Systems and Applications (December 1994). </booktitle>
Reference-contexts: The Mobisaic [50] and Dynamic Documents <ref> [24] </ref> projects support a HTML-based structure for varying, location-dependent interfaces. Our scheme generalizes these approaches by incorporating resource discovery and aggregating/subsetting different interface elements. The Georgia Tech CyberGuide project [29] focuses on proto-typing applications augmented with various positioning systems, potentially without communications at all.
Reference: [25] <author> KATZ, R. H. </author> <title> Wireless Overlay Networks. </title> <booktitle> In Proceedings 1996 SPIE Conference on Multimedia and Networking (San Jose, </booktitle> <address> California, </address> <month> January </month> <year> 1996). </year>
Reference-contexts: The client moves from a wide-area network to a local-area network, and between points in the local-area. Basic mobile routing support is an underlying assumption of our architecture. This functionality is available through Mobile IP [35] or similar handoff infrastructure, and can be augmented with network overlays <ref> [25] </ref> and local mul-ticast [41]. Mobile IP supplies IP-level transparency to changes in location, overlay networking augments this functionality with a policy layer for managing connectivity to multiple available network interfaces (multi-homing), while local multicast provides seamless, low-latency hand-off.
Reference: [26] <author> KATZ, R. H., BREWER, E. A., AMIR, E., BALAKRISHNAN, H., FOX, A., GRIBBLE, S., HODES, T., JIANG, D., NGUYEN, G. T., PADMANABHAN, V., AND STEMM, M. </author> <title> The Bay Area Research Wireless Access Network (BARWAN). </title> <booktitle> In Proceedings of the Spring COMPCON Conference (1996). </booktitle>
Reference-contexts: The testbed for our experiments <ref> [26] </ref> includes Intel-based laptop computers with access to a multi-tier overlay network including room-sized diffuse infrared cells (IBM IR), floor-sized wireless LAN cells (AT&T WaveLAN), and a wide-area RF packet radio network (Metricom Richocet).
Reference: [27] <author> KOTTMAN, D. A., WITTMANN, R., AND POSUR, M. </author> <title> Delegating Remote Operation Execution in a Mobile Computing Environment. </title> <booktitle> Mobile Networks and Applications 1, </booktitle> <month> 4 (January </month> <year> 1997), </year> <pages> 387-98. </pages>
Reference-contexts: It also requires a mechanism for securely delegating operations <ref> [27] </ref>. 7.7 Queued RPC Queued RPC mechanisms [23, 6] support disconnection and link variability by incorporating application-managed messaging state. Queued RPC and asynchronous notification support is not incorporated into our system, but should be.
Reference: [28] <author> LIU, G., AND MAGUIRE JR., G. </author> <title> A Class of Mobile Prediction Algorithms for Wireless Mobile Computign and Communications. </title> <booktitle> Mobile Networks and Applications 1, </booktitle> <month> 2 (October </month> <year> 1996), </year> <pages> 113-122. </pages>
Reference-contexts: of any beacons with a new SIP, services with the active bit set (and available in the new location) have their new ISL files prefetched automatically, thereby reducing their invocation latency. (Additionally, the INDEX meta-service is always prefetched in our current implementation.) Delays can be further minimized through mobility prediction <ref> [28] </ref>, allowing prefetching in response to assumptions about user mobility patterns.
Reference: [29] <author> LONG, S., KOOPER, R., ABOWD, G., AND ATKENSON, C. </author> <title> Rapid Prototyping of Mobile Context-Aware Applications: The Cy-berGuide Case Study. </title> <booktitle> Proc. 2nd ACM Conf. on Mobile Computing and Networking (November 1996), </booktitle> <pages> 97-107. </pages>
Reference-contexts: The Mobisaic [50] and Dynamic Documents [24] projects support a HTML-based structure for varying, location-dependent interfaces. Our scheme generalizes these approaches by incorporating resource discovery and aggregating/subsetting different interface elements. The Georgia Tech CyberGuide project <ref> [29] </ref> focuses on proto-typing applications augmented with various positioning systems, potentially without communications at all. Using such an approach requires that devices be manually adapted to new environments.
Reference: [30] <author> MACINTYRE, B., AND FEINER, S. </author> <title> Future Multimedia User Interfaces. </title> <journal> Multimedia Systems Journal 4, </journal> <month> 5 (October </month> <year> 1996), </year> <pages> 250-268. </pages>
Reference-contexts: Example uses of this approach include fine-grain object tracking, directionality sensing, and event triggers keyed to particular circumstances <ref> [30] </ref>. For example, a camera can be used to detect the opening of a door or window. In this case, it is the camera that exports the control interface.
Reference: [31] <author> MCCANNE, S., JACOBSON, V., AND VETTERLI, M. </author> <title> Receiver-driven Layered Multicast. </title> <booktitle> ACM SIGCOMM '96 (August 1996), </booktitle> <pages> 117-130. </pages>
Reference-contexts: An argument against augmenting beacons at all is that orthogonal applications shouldn't mix their data units that may have been properly sized by the application (c.f., application-level framing [12] or joint source-channel coding <ref> [31] </ref>). We choose to augment our beacons with bootstrap information, a ticket for scoping of services, and a dynamically configurable application-specific payload. The encoding is shown in Figure 5.
Reference: [32] <author> MILLS, D. L. </author> <title> Internet Time Synchronization: the Network Time Protocol. </title> <journal> IEEE Trans. on Communications 39, </journal> <volume> 10 (1992), </volume> <pages> 1482-1493. </pages>
Reference-contexts: to discrete multiples of the base beacon-ing rate (where the base beaconing rate is that rate determined to be sufficient to detect handoff within some acceptable latency.) Possible uses for such piggybacked beacon data include: * merging of other periodic broadcasts to amortize header and MAC overhead (e.g., NTP beacons <ref> [32] </ref>, Mobile IP foreign agent advertisements); * pricing information useful to the host to determine whether to register; * any form of commonly accessed time-variant data; * a list of some or all of the available services in the cell; * tickets for providing scoped access control (discussed in Section 3.6).
Reference: [33] <author> MOCKAPETRIS, P. V., AND DUNLAP, K. </author> <title> Development of the Domain Name System. </title> <note> ACM SIGCOMM '88 (August 1988). </note>
Reference-contexts: Overlay networking [45] has demonstrated the feasibility of seamless hand-off between interfaces to different Internet service providers and the reality of ubiquitous connectivity. The developing Service Location Protocol [49], the Domain Name Service <ref> [33] </ref>, and the Session Announcement Protocol [19] address some concerns in resource discovery and management; DNS and the Session Description Protocol [20] address naming. Such efforts have been instrumental in motivating this work and in driving its design. The rest of this paper is structured as follows. <p> Existing methods for naming include using the Domain Name Service (DNS) <ref> [33] </ref> for objects with unicast IP addresses or the Session Description Protocol (SDP) [20] for lightweight sessions. DNS is a widely-deployed distributed name service. SDP is a container protocol for associating a single name with a collection of application-specific multimedia transports and their (most often multicast) channels.
Reference: [34] <institution> Object Management Group Home Page. </institution> <note> http://www.omg.org/, 1998. </note>
Reference-contexts: Automatic UI layout heuristics can also be used on an ISL file directly. 3.7.2 Interface Specification The conventional notion of an Interface Definition Language (IDL) (e.g., the CORBA IDL <ref> [34] </ref>) is to specify method names, parameters, parameter data types, and parameter-passing conventions for remote object invocation. The basic function of a Model-based User Interface [46] is to specify interfaces as structured widget hierarchies along with sets of constraints.
Reference: [35] <author> PERKINS, C. </author> <title> IP Mobility Support. RFC, </title> <month> Oct </month> <year> 1996. RFC-2002. </year>
Reference-contexts: The physical components of the testbed in one of the seminar rooms (our first prototype, 405 Soda Hall) are illustrated in Figure 1. Our infrastructure builds on and extends the substantial work in mobility support provided by the networking research community. The Mobile-IP working group of the IETF <ref> [35] </ref>, among others, has made great strides in the routing aspects of the problem. Overlay networking [45] has demonstrated the feasibility of seamless hand-off between interfaces to different Internet service providers and the reality of ubiquitous connectivity. <p> The client moves from a wide-area network to a local-area network, and between points in the local-area. Basic mobile routing support is an underlying assumption of our architecture. This functionality is available through Mobile IP <ref> [35] </ref> or similar handoff infrastructure, and can be augmented with network overlays [25] and local mul-ticast [41]. <p> Client beaconing is used in both the Active Badge [21] and PARCTAB systems [37], while server beaconing was used in Columbia Mobile IP [22]. IETF Mobile IP <ref> [35] </ref> utilizes both periodic advertisements and periodic solicitations. One might expect that the different policies optimize for different applications' operating modes. This is indeed the case: there are trade-offs in such a decision, as it varies allowances for privacy, anonymity, particular protocols' performance, and scalability.
Reference: [36] <author> SALTZER, J., REED, D., AND CLARK, D. </author> <title> End-to-end Arguments in System Design. </title> <journal> ACM Transactions on Computer Systems 2, </journal> <volume> 4 (1984), </volume> <pages> 195-206. </pages>
Reference-contexts: This is another way of thinking about Active Networks [47], driven by end-to-end design principles <ref> [36] </ref>: push agents to as close to the endpoints as possible, but no further. This concept of 12 leveraging the well-connected, computationally powerful side of the wireless link (via proxies or agents) pervades mobility research.
Reference: [37] <author> SCHILIT, B. N., ADAMS, N., GOLD, R., TSO, M., AND WANT, R. </author> <booktitle> The PARCTAB mobile computing system. In Proceedings Fourth Workshop on Workstation Operating Systems (WWOS-IV) (October 1993), IEEE, </booktitle> <pages> pp. 34-39. </pages>
Reference-contexts: Client beaconing is used in both the Active Badge [21] and PARCTAB systems <ref> [37] </ref>, while server beaconing was used in Columbia Mobile IP [22]. IETF Mobile IP [35] utilizes both periodic advertisements and periodic solicitations. One might expect that the different policies optimize for different applications' operating modes. <p> Our mechanism for dynamically updating the current SIP location could be adapted as a scope discovery mechanism and coexist with other such mechanisms in the proposal (i.e. having a SCOPE DHCP option). The seminal PARCTAB <ref> [37] </ref> and Active Badge [21] systems, along with related work by Schilit [38, 39, 40], were among the first to attack the issues of client applications and network support for mobility in tandem.
Reference: [38] <author> SCHILIT, B. N., ADAMS, N. I., AND WANT, R. </author> <booktitle> Context-Aware Computing Applications. In Proceedings of the Workshop on Mobile Computing Systems and Applications (December 1994), IEEE Computer Society, </booktitle> <pages> pp. 85-90. 15 </pages>
Reference-contexts: Our mechanism for dynamically updating the current SIP location could be adapted as a scope discovery mechanism and coexist with other such mechanisms in the proposal (i.e. having a SCOPE DHCP option). The seminal PARCTAB [37] and Active Badge [21] systems, along with related work by Schilit <ref> [38, 39, 40] </ref>, were among the first to attack the issues of client applications and network support for mobility in tandem. We borrow much from this work, including the focus on mapping, event notification, and support for impoverished devices. There are some key differences.
Reference: [39] <author> SCHILIT, B. N., AND THEIMER, M. M. </author> <title> Disseminating Active Map Information to Mobile Hosts. </title> <booktitle> In IEEE Network (Sept/Oct 1994), IEEE, </booktitle> <pages> pp. 22-32. </pages>
Reference-contexts: Our current implementation simply allows for callbacks to be set that track VALUE entries in the SIP databases. A more complete and detailed solution to this problem applied to media gateways in described in [2]. 4.3 Location Tracking Location tracking has been addressed in other systems <ref> [39, 21] </ref>, and can be implemented by allowing queries against foreign agent registrations or routing table entries (as appropriate). These systems suffer from the limitation that client devices must be turned off or not carried to ensure users are not vulnerable to continuous detection (e.g., while in a restroom). <p> Our mechanism for dynamically updating the current SIP location could be adapted as a scope discovery mechanism and coexist with other such mechanisms in the proposal (i.e. having a SCOPE DHCP option). The seminal PARCTAB [37] and Active Badge [21] systems, along with related work by Schilit <ref> [38, 39, 40] </ref>, were among the first to attack the issues of client applications and network support for mobility in tandem. We borrow much from this work, including the focus on mapping, event notification, and support for impoverished devices. There are some key differences.
Reference: [40] <author> SCHILIT, W. </author> <title> System Architecture for Context-Aware Mobile Computing. </title> <type> PhD thesis, </type> <institution> Columbia University, </institution> <year> 1995. </year>
Reference-contexts: Our mechanism for dynamically updating the current SIP location could be adapted as a scope discovery mechanism and coexist with other such mechanisms in the proposal (i.e. having a SCOPE DHCP option). The seminal PARCTAB [37] and Active Badge [21] systems, along with related work by Schilit <ref> [38, 39, 40] </ref>, were among the first to attack the issues of client applications and network support for mobility in tandem. We borrow much from this work, including the focus on mapping, event notification, and support for impoverished devices. There are some key differences.
Reference: [41] <author> SESHAN, S., BALAKRISHNAN, H., AND KATZ, R. H. </author> <title> Handoffs in Cellular Wireless Networks: The Daedalus Implementation and Experience. </title> <journal> Kluwer Journal on Wireless Personal Communications (Jan. </journal> <year> 1997). </year>
Reference-contexts: Basic mobile routing support is an underlying assumption of our architecture. This functionality is available through Mobile IP [35] or similar handoff infrastructure, and can be augmented with network overlays [25] and local mul-ticast <ref> [41] </ref>. Mobile IP supplies IP-level transparency to changes in location, overlay networking augments this functionality with a policy layer for managing connectivity to multiple available network interfaces (multi-homing), while local multicast provides seamless, low-latency hand-off.
Reference: [42] <author> SMITH, B., EOLAS TECHNOLOGIES, INC., </author> <title> COMPUTERIZED PROCESSES UNLIMITED, </title> <publisher> INC., </publisher> <editor> AND ROSEMAN, M. DpTcl.tcl, </editor> <year> 1996. </year> <title> Obtained as alpha code. </title>
Reference-contexts: In 1993, Bukowski and Downs designed a library for accessing the AMX from a workstation for use in a similar room [10]. They also produced a client/server package utilizing the library. We 10 leverage their work, along with a new version of Tcl-DP <ref> [42] </ref> as the RPC interface, and extend it for use in our environment. 4.6.1 Design and Architecture The application, like others in our architecture, is built using the principle of application partitioning [51].
Reference: [43] <author> SPREITZER, M., AND THEIMER, M. </author> <title> Providing location information in a ubiquitous computing environment. </title> <booktitle> Proceedings of the Fourteenth ACM Symposium on Operating Systems Principles (December 1993). </booktitle>
Reference-contexts: Additional effort can be expended to mitigate this limitation, such as by having queries sent to a group of cells rather than a single cell <ref> [43] </ref>, but a complete solution ensuring security must avoid a traffic analysis attack even when the infrastructure is trusted. In our system, devices may be carried continuously while still allowing for detection avoidance.
Reference: [44] <author> STEMM, M., GAUTHIER, P., HARADA, D., AND KATZ, R. H. </author> <title> Reducing Power Consumption of Network Interfaces in HandHeld Devices. </title> <booktitle> The Third Workshop on Mobile Multimedia Communications (May 1996). </booktitle>
Reference-contexts: There are a number of metrics for considering qualitative tradeoffs between the two decisions: * Power: Less power is consumed at the mobile by periodically listening than by periodically transmitting, but this difference can be mitigated by hardware/MAC design <ref> [44] </ref>. * Detection: When base stations (BSs) beacon, mobiles need not transmit to detect when all contact is lost. When clients beacon, BSs need not transmit to detect user mobility. * Multiples: With BS beaconing, detection of multiple beacons can be used to assist handoff.
Reference: [45] <author> STEMM, M., AND KATZ, R. H. </author> <title> Vertical Handoffs in Wireless Overlay Networks. </title> <journal> ACM Mobile Networking (MONET), </journal> <note> Special Issue on Mobile Networking in the Internet (Fall 1997). To appear. </note>
Reference-contexts: Our infrastructure builds on and extends the substantial work in mobility support provided by the networking research community. The Mobile-IP working group of the IETF [35], among others, has made great strides in the routing aspects of the problem. Overlay networking <ref> [45] </ref> has demonstrated the feasibility of seamless hand-off between interfaces to different Internet service providers and the reality of ubiquitous connectivity. <p> Autoconfiguration also adds a level of fault tolerance. If a network link goes down, SIP beacons coming across the failed link will stop. The client can wait for other beacons to be obtained (c.f., in an overlay network with vertical handoff <ref> [45] </ref>), and reconfiguration to the new servers will happen transparently. Our current implementation simply allows for callbacks to be set that track VALUE entries in the SIP databases.
Reference: [46] <author> SUKAVIRIYA, P., FOLEY, J., AND GRIFFITH, T. </author> <title> A Second Generation User Interface Design Environment: The Model and The Runtime Architecture. </title> <booktitle> Proceedings of Human Factors in Computing Systems '93 (April 1993), </booktitle> <pages> 375-382. </pages>
Reference-contexts: The basic function of a Model-based User Interface <ref> [46] </ref> is to specify interfaces as structured widget hierarchies along with sets of constraints. The actual interface is derived from the model at run time or through a compilation step. This allows interfaces to be amenable to arbitrary adding and deleting of elements.
Reference: [47] <author> TENNENHOUSE, D., SMITH, J., SINCOSKIE, W., WETHERALL, D., AND MINDEN, G. </author> <title> A Survey of Active Network Research. </title> <journal> IEEE Communications Magazine (January 1997), </journal> <pages> 80-86. </pages>
Reference-contexts: Our conception of a proxy server is based on the model expressed explicitly in the Berkeley Client/Proxy/Server model [15] and implicitly in other work [8, 3] that places application-level or network-level entities near, but not at, the endpoints of communications. This is another way of thinking about Active Networks <ref> [47] </ref>, driven by end-to-end design principles [36]: push agents to as close to the endpoints as possible, but no further. This concept of 12 leveraging the well-connected, computationally powerful side of the wireless link (via proxies or agents) pervades mobility research.
Reference: [48] <institution> Universal Remote Console Communication Protocol. </institution> <note> http://trace.wisc.edu/world/urcc, 1997. </note>
Reference-contexts: An example of an expression a very similar need but in a different domain is the Universal Remote Console Communication Protocol <ref> [48] </ref>. This work allows different interfaces to be made available to disabled users by requiring applications to expose their UI as a well-defined interface.
Reference: [49] <author> VEIZADES, J., GUTTMAN, E., PERKINS, C., AND KAPLAN, S. </author> <title> Service Location Protocol Internet Draft #17, draft-ieft-svrloc-protocol-17.txt. </title> <type> IETF, </type> <year> 1997. </year>
Reference-contexts: The Mobile-IP working group of the IETF [35], among others, has made great strides in the routing aspects of the problem. Overlay networking [45] has demonstrated the feasibility of seamless hand-off between interfaces to different Internet service providers and the reality of ubiquitous connectivity. The developing Service Location Protocol <ref> [49] </ref>, the Domain Name Service [33], and the Session Announcement Protocol [19] address some concerns in resource discovery and management; DNS and the Session Description Protocol [20] address naming. Such efforts have been instrumental in motivating this work and in driving its design. <p> This allows a single message to, in effect, advertise a collection of objects, and provides advertisement hierarchy (possibly, but not necessarily, aligned to the naming hierarchy like DNS) with scaling sub-linear in the number of advertised objects. The Service Location Protocol <ref> [49] </ref>, a resource discovery protocol under development by the IETF Service Location working group, is one proposal for implementing a local-area version of such a service. In SLP, query processing is performed at directory agents and/or in a distributed manner via multicast. <p> Rover allows the pieces that comprise the partitioned whole to migrate between these two points, but the implemented prototype applications generally only exploit this for moving application data units such as mail messages, news articles, web pages, or calendar entries. The Service Location Protocol (SLP) <ref> [49] </ref> is an example resource discovery and service registration mechanism that can also function as a fine-grained name service. Open issues include its lack of an explicit scope hierarchy and peering equivalent to our use of pointers in a service database.
Reference: [50] <author> VOELKER, G., AND BERSHAD, B. Mobisaic: </author> <title> An Information System for a Mobile Wireless Computing Environment. </title> <booktitle> Workshop on Mobile Computing Systems and Applications (December 1994). </booktitle>
Reference-contexts: It has the advantage that applications need not change at all, but suffers from the limitations that 1) it doesn't support transformations of the interface to formats more suitable to particular client devices, and 2) it does not expose a layer of indirection underneath widget invocations. The Mobisaic <ref> [50] </ref> and Dynamic Documents [24] projects support a HTML-based structure for varying, location-dependent interfaces. Our scheme generalizes these approaches by incorporating resource discovery and aggregating/subsetting different interface elements. The Georgia Tech CyberGuide project [29] focuses on proto-typing applications augmented with various positioning systems, potentially without communications at all.
Reference: [51] <author> WATSON, T. </author> <title> Application Design for Wireless Computing. </title> <booktitle> In Workshop on Mobile Computing Systems and Applications (Dec. 1994), </booktitle> <publisher> IEEE Computer Society. </publisher>
Reference-contexts: We 10 leverage their work, along with a new version of Tcl-DP [42] as the RPC interface, and extend it for use in our environment. 4.6.1 Design and Architecture The application, like others in our architecture, is built using the principle of application partitioning <ref> [51] </ref>. Due to the potential lightweight nature of clients, the server is required to bear the brunt of the effort to support fault tolerance, access control, and other such duties. <p> Though we have focused on access for wireless mobile clients, facets of our approach are applicable to wired networking. Examples include automatic reconfiguration of server location (for fault tolerance) and scoping of access to services through limited broadcast of tickets. 6 Related Work The Rover [23] and Wit <ref> [51] </ref> systems also recognized the need to split applications into a lightweight front-end and more heavyweight proxy at the last hop wireless link.
Reference: [52] <author> WEISER, M. </author> <title> Some Computer Science Issues in Ubiquitous Computing. </title> <booktitle> Communication of the ACM 36, </booktitle> <month> 7 (July </month> <year> 1993). </year>
Reference-contexts: 1 Introduction Researchers have predicted that wireless access coupled with user mobility will soon be the norm rather than the exception, allowing users to roam in a wide variety of geographically distributed environments with seamless connectivity <ref> [52] </ref>. This ubiquitous computing environment is characterized by a number of challenges, each illustrating the need for adaptation. One challenge is the continuously available but varying network connectivity [7], characterized by high handoff rates exacerbated by the demands of spectrum reuse.
Reference: [53] <author> WOOD, K. R., RICHARDSON, T., BENNETT, F., HARTER, A., AND HOPPER, A. </author> <title> Global Teleporting with Java: Toward Ubiquitous Personalized Computing. </title> <booktitle> IEEE Computer 30, 2 (1997), </booktitle> <pages> 53-59. </pages>
Reference-contexts: We use server beaconing rather than client beaconing, and allow the beacons to bootstrap resource location, define scope, assist fault detection, and provide for some location management. A transportable X display <ref> [53] </ref> is a variation on interface code mobility; it moves users' existing interfaces as they move, not unknown applications' interfaces or interface descriptions.
References-found: 53

