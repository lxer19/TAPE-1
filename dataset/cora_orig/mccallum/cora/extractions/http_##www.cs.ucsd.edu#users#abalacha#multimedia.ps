URL: http://www.cs.ucsd.edu/users/abalacha/multimedia.ps
Refering-URL: http://www.cs.ucsd.edu/users/abalacha/courses.html
Root-URL: http://www.cs.ucsd.edu
Email: -(anandb,kamlesh,lking)@cs.ucsd.edu, esirko@cs.ucr.edu, pnorby@msn.com  
Title: File System Support for Multimedia: A Survey  
Author: Anand Balachandran, Kamlesh Talreja, Eric Sirko, Dennis Jakobsen, and Luke King 
Abstract: CSE221 Operating Systems (Project Report) 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. James Gemmell, Harrick M. Vin, Dilip D. Kandlur, P. Venkat Rangan and Lawrence A. Rowe, </author> <title> Multimedia Storage Servers: A Tutorial, </title> <booktitle> IEEE Computer, </booktitle> <pages> pp 40-49, </pages> <month> May </month> <year> 1995. </year>
Reference: [2] <author> P. Venkat Rangan and H.M.Vin. </author> <booktitle> Designing File Systems for Digital Video and Audio , In Proceedings of the 13 th Symposium on Operating Systems Principles (SOSP91), </booktitle> <address> Pacific Grove, CA pp. 81-94, </address> <month> October </month> <year> 1991. </year> <title> File System Support for Multimedia: A Survey 10 </title>
Reference-contexts: At a still higher level, a sequence of continuously recorded video or audio quanta could be grouped together in a strand. Strands of video and audio could be further tied together in an abstraction called the rope, which preserves semantic synchronization information between component strands <ref> [2] </ref>. The choice of storage abstraction becomes important when clients wish to attach semantic importance to the retrieval process. For instance, a multimedia author who wants to edit the audio portion of a multimedia object in isolation from other strands would benefit from strand level access.
Reference: [3] <author> P. Venkat Rangan, Srinivas Ramanathan, Harrick M. Vin, and Thomas Kaeppner, </author> <title> Techniques for Multimedia Synchronization in Network File Systems, </title> <journal> Computer Communications Journal, </journal> <month> March, </month> <year> 1993. </year>
Reference-contexts: For instance, a multimedia author who wants to edit the audio portion of a multimedia object in isolation from other strands would benefit from strand level access. Moreover, the strand/rope abstraction enables file systems to preserve temporal relationships between multiple audio and video streams <ref> [3] </ref>. The client interface determines how the client sees the multimedia data on the file system. Two major kinds of APIs are possible : filesystem oriented and stream-oriented.
Reference: [4] <author> Patterson, D. Gibson, G. and Katz, R., </author> <title> A Case for Redundant Array of Inexpensive Disks (RAID), </title> <booktitle> In Proceedings of the ACM SIGMOD Conference, </booktitle> <pages> pp. 109-116, </pages> <year> 1988. </year>
Reference-contexts: The alternative of maintaining different copies of the file on multiple disks involves considerable storage cost. Innovations in disk technology like RAID (Redundant Array of Inexpensive Disks) have motivated an effective solution to this problem <ref> [4] </ref>. Data striping under RAID stripes the file across each disk in the array. Physical sector 1 of each disk is accessed in parallel as a large logical sector 1, similarly for sector 2, and so on (see Figure 2).
Reference: [5] <author> P.J.Shenoy and H.M.Vin. </author> <title> Efficient Striping Techniques for Multimedia File Servers . In Proceedings of NOSSDAV97, </title> <address> St. Louis, MO, </address> <pages> pp. 25-36, </pages> <month> May </month> <year> 1997. </year>
Reference-contexts: Striping policies can be defined to use all or a subset of disks in the array to hold the blocks of a file. A Striping policy that stripes across all disks in the array is suitable for textual data, but can yield suboptimal performance for continuous media <ref> [5] </ref>. 2.4. Disk scheduling The disk scheduler is arguably the most important component of a multimedia file system.
Reference: [6] <author> Ralf Steinmetz, </author> <title> Multimedia File Systems Survey: approaches for continuous media disk scheduling, </title> <journal> Computer Communications Journal, </journal> <volume> Vol. 18, No. 3, </volume> <pages> pp. 133-144, </pages> <month> March </month> <year> 1995. </year>
Reference-contexts: With EDF, the multimedia block with the earliest deadline is scheduled for retrieval. Pure EDF, like round robin, can lead to excessive seek times, and hence poor resource utilization, so it is often combined with other techniques. One such hybrid algorithm is SCAN-EDF <ref> [6] </ref>. This method services requests with the earliest deadline first; just like EDF, however, when several requests have the same deadline, SCAN is used to service these requests. All schedulers output the retrieved blocks into system buffers, from which they are consumed by the streams playback. 2.5.
Reference: [7] <author> Prashant J. Shenoy, Pawan Goyal, Sriram S. Rao and Harrick M. Vin. Symphony: </author> <booktitle> An Integrated Multimedia File System , In Proceedings of SPIE/ACM Conference on Multimedia Computing and Networking (MMCN'98), </booktitle> <address> San Jose, CA, </address> <note> 1998 (to appear). </note>
Reference-contexts: Caching can still be profitable for large-scale systems with many clients, due to the potential for concurrent requests for the same multimedia object in such systems. 3. Symphony The Symphony file system has been developed at the Distributed Multimedia Computing Laboratory at the University of Texas, Austin <ref> [7] </ref>. A prototype of Symphony has been implemented on a server running Solaris 2.5.1. The clientserver environment consists of a cluster of Sparc-20 and Sparc-5 workstations interconnected by a 155 Mb/s ATM switch. 3.1. Client interface Symphony supports access to multimedia data both in terms of logical units and bytes.
Reference: [8] <author> Kienzle, M. G., Berbec, R. R., Bozman, G. P., Eilert, C. K., Eshel, M., and Mansell, R., </author> <title> Multimedia File Serving with the OS/390 LAN Server, </title> <journal> IBM System Journal, </journal> <volume> Vol . 36, No. 3, reprint order No. </volume> <month> G321-5649. </month>
Reference-contexts: The service time of a disk with parity-based reconstruction enabled is twice that with parity-reconstruction disabled. 4. OS/390 LAN Server The OS/390 LAN Server (OLS) has been developed at IBM Corp. <ref> [8] </ref> and has been widely deployed to support large-scale networked multimedia applications, particularly in an educational environment. It is the only commercial system in our survey. OLS is a file server for PCs and workstations with enhanced support for multimedia serving.
Reference: [9] <author> Lougher, P. and Shepherd, D., </author> <title> The Design of a Storage Server for Continuous Media, </title> <journal> The Computer Journal, </journal> <volume> Vol. 36, No. 1,pp. </volume> <pages> 32-42, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: Although, this is not a precise performance metric, it does give an idea about OLS scalability. 5. Continuous Media Storage Server The Continuous Media Storage Server (CMSS), designed at Lancaster University, forms part of an infrastructure comprising a heterogeneous network of highspeed workstations and PCs <ref> [9] </ref>. In the design of CMSS, conventional workstations are augmented with Multimedia Network Interfaces (MNIs), special hardware devices that provide the highspeed I/O bandwidth required of multimedia.
Reference: [10] <author> M. Rosenblum and J. Ousterhout, </author> <title> The Design and Implementation of a LogStructured File System, </title> <booktitle> In Proceedings of the 13 th Symposium on Operating Systems Principles (SOSP 91), </booktitle> <address> Pacific Grove, CA pp. 1-5, </address> <month> October </month> <year> 1991. </year>
Reference-contexts: The rationale for log structuring is that the temporal relationships between data that was recorded (and hence, stored) is likely to be preserved during playback. The log structure simplifies the management, storage, retrieval, and deletion of CM data blocks <ref> [10] </ref>. CM files are structured using large blocks of data-type-dependent size (averaging 64 KB). The block sizes are a multiple of the logical-unit size of the data type. The directory-disk layout consists of a table of statically allocated inode entries for each media file.
Reference: [11] <author> T. N. Niranjan, Tzi-cker Chiueh and Gerhard A. Schloss, </author> <title> Implementation and Evaluation of a Multimedia File System, </title> <booktitle> In Proceedings of the IEEE International Conference on Multimedia Computing and Systems, Ottawa, </booktitle> <pages> pp. 269-276, </pages> <month> June </month> <year> 1997. </year>
Reference: [12] <author> Niranjan, T. N. </author> <title> File System Support for Multimedia Applications, </title> <type> PhD thesis, </type> <institution> SUNY at Stony Brook, </institution> <month> December </month> <year> 1996. </year>
Reference: [13] <author> W. Niblack et al., </author> <title> The QBIC project: Querying Images by Content using Color, Texture and Shape, </title> <booktitle> Proc. Storage and Retrieval for Image and Video Databases, </booktitle> <volume> Vol. 1, 908, </volume> <booktitle> SPIE, Bellingham, Wash., </booktitle> <pages> pp. 173-187, </pages> <year> 1993. </year>
Reference-contexts: Information to be queried such as the name and type of objects, their description such as color, texture, shape, motion, and semantic activity could also be extracted during insertion into the file system <ref> [13] </ref>. In addition, such a file system will support advanced read-write applications such as editing of multimedia data types [14] by manipulating pointers to portions of the multimedia stream. Similarly, support for random access, fast-forwarding, fastbackward, play/pause and other VCR functions needs to be incorporated.
Reference: [14] <author> Kamlesh Talreja, P. Venkat Rangan. </author> <title> Editing Techniques for MPEG Multiplexed Streams. </title> <booktitle> In Proceedings of the IEEE International Conference on Multimedia Computing and Systems, Ottawa, </booktitle> <pages> pp. 278-285, </pages> <month> June </month> <year> 1997. </year>
Reference-contexts: In addition, such a file system will support advanced read-write applications such as editing of multimedia data types <ref> [14] </ref> by manipulating pointers to portions of the multimedia stream. Similarly, support for random access, fast-forwarding, fastbackward, play/pause and other VCR functions needs to be incorporated.
Reference: [15] <institution> ISO/IEC 13818 - MPEG2 standards. </institution>
Reference-contexts: Similarly, support for random access, fast-forwarding, fastbackward, play/pause and other VCR functions needs to be incorporated. File systems can also take advantage of the multi-resolution nature of video compression schemes such as MPEG <ref> [15] </ref> to deliver variable quality of video (i.e. dropping of video frames or degradation of video resolution) when there is congestion in a network [16]. At the same time, the file system should support retrieval of Variable Bit Rate (VBR) MPEG streams.
Reference: [16] <author> Brian D. Noble et. al. </author> <title> Agile Application-Aware Adaptation for Mobility. </title> <booktitle> To appear in the Proceedings of the 16 th Symposium on Operation System Principles (SOSP 97), </booktitle> <month> October </month> <year> 1997. </year>
Reference-contexts: File systems can also take advantage of the multi-resolution nature of video compression schemes such as MPEG [15] to deliver variable quality of video (i.e. dropping of video frames or degradation of video resolution) when there is congestion in a network <ref> [16] </ref>. At the same time, the file system should support retrieval of Variable Bit Rate (VBR) MPEG streams.
References-found: 16

