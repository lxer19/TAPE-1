URL: http://www.cs.cmu.edu/~colohan/Thesis.ps.gz
Refering-URL: http://www.cs.cmu.edu/~colohan/quarks.html
Root-URL: 
Title: Distributed Shared Memory on the x86 Based Linux PC  
Author: Christopher Brian Colohan 
Degree: A thesis submitted in partial fulfillment of the requirements for the degree Bachelor of Applied Science  
Date: April, 1997  
Affiliation: Department of Electrical and Computer Engineering University of Toronto  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> D. Khandekar. </author> <title> Quarks: Portable Distributed Shared Memory on Unix. Included in Quarks distribution, </title> <publisher> ftp://jaguar.cs.utah.edu/pub/dsm. </publisher>
Reference-contexts: In order to provide the illusion of shared memory between computers, mechanisms are needed to detect memory accesses, communicate between computers, synchronize 1 The description of Quarks presented here owes much to the description in <ref> [1] </ref>. 5 CHAPTER 2. DESIGN AND IMPLEMENTATION 6 programs between computers, and keep shared memory coherent between computers. Memory accesses are detected using the memory management features of the processor. Communication between the processes is done using UDP/IP and sockets.
Reference: [2] <author> P. Keleher, A. L. Cox, S. Dwarkadas, W. Zwaenepoel. TreadMarks: </author> <title> Distributed Shared Memory on Standard Workstations and Operating Systems. </title> <booktitle> Proceedings of the 1994 Winter USENIX conference, </booktitle> <pages> pp. 115-131, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: Studies CHAPTER 2. DESIGN AND IMPLEMENTATION 14 have shown that lazy release consistency is slightly faster than release consistency due to the smaller number of diffs created and transmitted <ref> [2] </ref>. 2.5 Prefetching One source of slowdown for the DSM system is when a processor is stuck waiting for a copy of a page that is on another processor.
Reference: [3] <author> C. Chan and T. C. Mowry. </author> <title> Tolerating Latency in Software Distributed Shared Memory Systems Through Non-Binding Prefetching. </title> <type> Draft paper. </type>
Reference-contexts: Prefetching was added to Quarks when it was ported to Linux to allow for experimentation with this relatively untested technique. Prefetching is the topic of ongoing research in workstation based DSM systems. <ref> [3] </ref> CHAPTER 2. DESIGN AND IMPLEMENTATION 16 2.6 Threads In order to simplify the design of the library and to improve performance, the library is multithreaded. Quarks for workstations is based upon the CThreads threading library, but this is not available for Linux.
Reference: [4] <author> S. C. Woo, M. Ohara, E. Torrie, J. P. Singh and A. Gupta. </author> <title> The SPLASH-2 Programs: Characterization and Methodological Considerations. </title> <booktitle> Proceedings of the Twenty-first International Symposium on Computer Architecture, </booktitle> <month> June </month> <year> 1995. </year>
Reference-contexts: So this shows that Quarks has potential. In order to get a more realistic view of what can be done, a larger network of workstations should be tried, with some more challenging problems such as those in the SPLASH parallel benchmarks from Stanford <ref> [4] </ref>. So it has been shown that Quarks has the means to provide better performance than the single-processing PCs it replaces. It also has mechanisms to give detailed information about where it spends its time. With this combination, Quarks should be useful for solving many large scale computationally intensive problems.
Reference: [5] <author> L. Iftode, J. P. Singh and K. Li. </author> <title> Understanding Application Performance on Shared Virtual Memory Systems. </title> <booktitle> Proceedings of the International Symposium on Computer Architecture, </booktitle> <month> May </month> <year> 1996. </year> <note> 30 Bibliography </note>
Reference: [6] <author> C. Amza, A. L. Cox, S. Dwarkadas, P. Keleher, H. Lu, R. Rajamony, W. Yu and W. Zwaenepoel. TreadMarks: </author> <title> Shared Memory Computing on Networks of Workstations. </title> <journal> IEEE Computer, </journal> <volume> Vol. 29, No. 2, </volume> <pages> pp. 18-28, </pages> <month> February </month> <year> 1996. </year>
Reference: [7] <author> J. B. Carter, A. L. Cox, S. Dwarkadas, E. N. Elnozahy, D. B. Johnson, P. Keleher, S. Rodrigues, W. Yu and W. Zwaenepoel. </author> <title> Network Multicomputing Using Recoverable Distributed Shared Memory. </title> <booktitle> Proceedings of CompCon '93, </booktitle> <pages> pp. 515-523, </pages> <month> February </month> <year> 1993. </year>
Reference: [8] <author> S. Dwarkadas, A. L. Cox and W. Zwaenepoel. </author> <title> An Integrated Compile-Time/RunTime Software Distributed Shared Memory System. </title> <booktitle> Proceedings of the Seventh Symposium on Architectural Support for Programming Languages and Operating Systems, </booktitle> <month> October </month> <year> 1996. </year>
Reference: [9] <author> V. C. Hamacher, Z. G. Vranesic and S. G. </author> <title> Zaky. Computer Organization, Third Edition. </title> <publisher> McGraw-Hill, </publisher> <year> 1990. </year>
Reference: [10] <author> L. Lamport. </author> <title> How to Make a Multiprocessor Computer That Correctly Executes Multiprocess Programs. </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. c-28 no. 9, </volume> <month> September </month> <year> 1979. </year>
Reference: [11] <author> B. Nichols, D. Buttlar and J. P. Farrell. </author> <title> Pthreads Programming. </title> <publisher> O'Reilly & Associates Inc., </publisher> <year> 1996. </year>
Reference: [12] <author> A. Silberschatz and P. B. Galvin. </author> <title> Operating System Concepts. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year> <note> 31 BIBLIOGRAPHY 32 </note>
Reference: [13] <author> M. Stumm and S. Zhou. </author> <title> Algorithms Implementing Distributed Shared Memory. </title> <booktitle> IEEE Computer, </booktitle> <pages> pp. 54-64, </pages> <month> May </month> <year> 1990. </year> <title> BIBLIOGRAPHY 33 References </title>
References-found: 13

