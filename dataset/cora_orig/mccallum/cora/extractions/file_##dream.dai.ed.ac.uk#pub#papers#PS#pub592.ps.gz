URL: file://dream.dai.ed.ac.uk/pub/papers/PS/pub592.ps.gz
Refering-URL: http://www.dai.ed.ac.uk:80/staff/personal_pages/bundy/drafts/proof-plans-faq.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: The Use of Planning Critics in Mechanizing Inductive Proofs  
Author: Andrew Ireland 
Address: 80 South Bridge EH1 1HN  
Affiliation: Department of Artificial Intelligence University of Edinburgh  
Abstract: Proof plans provide a technique for guiding the search for a proof in the context of tactical style reasoning. We propose an extension to this technique in which failure may be exploited in the search for a proof. This extension is based upon the concept of planning critics. In particular we illustrate how proof critics may be used to patch proof plans in the domain of inductive proofs.
Abstract-found: 1
Intro-found: 1
Reference: [Boyer & Moore 88] <author> R.S. Boyer and J.S. Moore. </author> <title> A Computational Logic Handbook. </title> <publisher> Academic Press, </publisher> <year> 1988. </year> <booktitle> Perspectives in Computing, </booktitle> <volume> Vol 23. </volume>
Reference-contexts: The research reported in this paper was supported by SERC grant GR/F/71799. The Use of Planning Critics in Mechanizing Inductive Proofs 2 clam [van Harmelen 89] and applied very successfully to the domain of inductive proofs [Bundy et al 91]. However, experience in automated inductive theorem proving <ref> [Boyer & Moore 88] </ref> has shown that failed proof attempts often hold the key to discovering a complete proof. Currently clam provides no mechanism for interpreting failure or even partial success in the search for a proof.
Reference: [Bundy 88] <author> A. Bundy. </author> <title> The use of explicit plans to guide inductive proofs. </title> <editor> In R. Lusk and R. Overbeek, editors, </editor> <booktitle> 9th Conference on Automated Deduction, </booktitle> <pages> pages 111-120. </pages> <publisher> Springer-Verlag, </publisher> <year> 1988. </year> <note> Longer version available from Edinburgh as DAI Research Paper No. 349. </note>
Reference-contexts: 1 Introduction Proof plans <ref> [Bundy 88] </ref> guide the search for a proof in the context of tactical style reasoning [Gordon et al 79]. A proof plan contains a tactic together with a proof rationale. <p> Proof critics complement the original concept of proof plans: While a proof plan characterizes a family of proofs a proof critic captures the patchable exceptions to the basic proof plan. The goal of patchability was emphasized in the original proof plans proposal <ref> [Bundy 88] </ref>. We believe that once implemented the proposal presented here will realize this goal. Acknowledgements I would like to thank Alan Bundy for his encouragement in the development of my ideas. I am grateful to Jane Hesketh for her ideas on generalization upon which I have drawn.
Reference: [Bundy et al 89] <author> A. Bundy, F. van Harmelen, J. Hesketh, A. Smaill, and A. Stevens. </author> <title> A rational reconstruction and extension of recursion analysis. </title> <editor> In N.S. Sridharan, editor, </editor> <booktitle> Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 359-365. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1989. </year> <note> Also available from Edinburgh as DAI Research Paper 419. </note>
Reference-contexts: The use of critics is extended is x5 where the need for global analysis is demonstrated. 2 A proof plan for inductive proofs The overall proof plan for induction is composed of a hierarchy of subplans. Based upon a process called recursion analysis <ref> [Bundy et al 89] </ref>, the preconditions of the induction plan determine the most promising form of induction. The planning of the resulting proof obligations are carried out by the base case and step case subplans. We concentrate here on the proof plan for the step case proofs.
Reference: [Bundy et al 90a] <author> A. Bundy, A. Smaill, and J. Hesketh. </author> <title> Turning eureka steps into calculations in automatic program synthesis. In S.L.H. The Use of Planning Critics in Mechanizing Inductive Proofs 15 Clarke, editor, </title> <booktitle> Proceedings of UK IT 90, </booktitle> <pages> pages 221-6, </pages> <year> 1990. </year> <note> Also available from Edinburgh as DAI Research Paper 448. </note>
Reference-contexts: These are particular instances of a general phenomenon which has given rise to a least commitment strategy called middle-out reasoning <ref> [Bundy et al 90a] </ref>. In essence, this strategy involves the use of meta variables (potentially higher-order) in speculating missing term structure. Such speculation terms get instantiated at a later point in the proof The Use of Planning Critics in Mechanizing Inductive Proofs 7 planning process.
Reference: [Bundy et al 90b] <author> A. Bundy, F. van Harmelen, A. Smaill, and A. Ireland. </author> <title> Extensions to the rippling-out tactic for guiding inductive proofs. In M.E. </title> <editor> Stickel, editor, </editor> <booktitle> 10th International Conference on Automated Deduction, </booktitle> <pages> pages 132-146. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year> <note> Lecture Notes in Artificial Intelligence No. 449. Also available from Edinburgh as DAI Research Paper 459. </note>
Reference-contexts: We concentrate here on the proof plan for the step case proofs. The step case plan decomposes into ripple and fertilize. The ripple plan has been identified as the central component of the induction plan and is described in detail in <ref> [Bundy et al 90b] </ref>. In essence, the ripple plan guides the rewriting of the induction conclusion so that it may be rewritten using the induction hypothesis. The fertilize plan controls the use of induction hypotheses.
Reference: [Bundy et al 91] <author> A. Bundy, F. van Harmelen, J. Hesketh, and A. Smaill. </author> <title> Experiments with proof plans for induction. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 7 </volume> <pages> 303-324, </pages> <year> 1991. </year> <note> Earlier version available from Edinburgh as DAI Research Paper No 413. </note>
Reference-contexts: The research reported in this paper was supported by SERC grant GR/F/71799. The Use of Planning Critics in Mechanizing Inductive Proofs 2 clam [van Harmelen 89] and applied very successfully to the domain of inductive proofs <ref> [Bundy et al 91] </ref>. However, experience in automated inductive theorem proving [Boyer & Moore 88] has shown that failed proof attempts often hold the key to discovering a complete proof. Currently clam provides no mechanism for interpreting failure or even partial success in the search for a proof.
Reference: [Dijkstra 76] <author> E. Dijkstra. </author> <title> A Discipline of Programming. </title> <publisher> Prentice-Hall, </publisher> <year> 1976. </year>
Reference-contexts: This gives a new goal of the form: 8inputs: spec (inputs; F (inputs)) The application of the induction plan to this goal will incrementally build up the required definition of F . Here we consider the synthesis of a partitioning function based upon Dijkstra's Dutch national flag problem <ref> [Dijkstra 76] </ref>. Informally we require a program to partition a list of red and blue objects into a pair of lists containing the component colours.
Reference: [Gordon et al 79] <author> M.J. Gordon, A.J. Milner, </author> <title> and C.P. Wadsworth. Edinburgh LCF A mechanised logic of computation, </title> <booktitle> volume 78 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer Verlag, </publisher> <year> 1979. </year>
Reference-contexts: 1 Introduction Proof plans [Bundy 88] guide the search for a proof in the context of tactical style reasoning <ref> [Gordon et al 79] </ref>. A proof plan contains a tactic together with a proof rationale. The tactic component specifies the low-level structure of a proof in terms of the object-level logic inference rules and is used to control the theorem prover.
Reference: [Hesketh 91] <author> J.T. Hesketh. </author> <title> Using Middle-Out Reasoning to Guide Inductive Theorem Proving. </title> <type> Unpublished PhD thesis, </type> <institution> University of Edinburgh, </institution> <year> 1991. </year>
Reference-contexts: In essence, this strategy involves the use of meta variables (potentially higher-order) in speculating missing term structure. Such speculation terms get instantiated at a later point in the proof The Use of Planning Critics in Mechanizing Inductive Proofs 7 planning process. Jane Hesketh in her thesis <ref> [Hesketh 91] </ref> developed the technique of middle-out reasoning in the context of generalizations such as the one outlined above.
Reference: [Martin-Lof 79] <author> Per Martin-Lof. </author> <title> Constructive mathematics and computer programming. </title> <booktitle> In 6th International Congress for Logic, Methodology and Philosophy of Science, </booktitle> <pages> pages 153-175, </pages> <address> Hanover, </address> <month> August </month> <year> 1979. </year> <title> Published by North Holland, </title> <address> Amsterdam. </address> <year> 1982. </year>
Reference-contexts: We illustrate the idea by examining the proof of a synthesis theorem. A synthesis theorem may be expressed by the schema: 8inputs: 9output: spec (inputs; output) (9) If we use a constructive logic <ref> [Martin-Lof 79] </ref> to prove a theorem of this form then the associated proof will yield a function, prog, which satisfies the logical relation spec (inputs; prog (inputs)). Proving synthesis theorems introduces the problem of calculating the value of existential witnesses.
Reference: [Sacerdoti 77] <author> E.D. Sacerdoti. </author> <title> A Structure for Plans and Behaviour. </title> <booktitle> Artificial Intelligence Series. </booktitle> <publisher> North Holland, </publisher> <year> 1977. </year> <note> Also as SRI AI Technical note number 109, </note> <month> August </month> <year> 1975. </year>
Reference-contexts: A critic is a small program which analyses plan structures. Critics are "constructive" in the sense that as well as identifying problems in the plan structure they also take corrective action. The notion of constructive critics was first introduced in the noah system <ref> [Sacerdoti 77] </ref> and has had lasting effect on the classical AI planning paradigm [Wilkins 88]. While a method specifies precisely the conditions under which a tactic is applicable our proposed proof critics may be used to capture patchable exceptions to a tactic.
Reference: [van Harmelen 89] <author> F. van Harmelen. </author> <title> The CLAM proof planner, user manual and programmer manual: </title> <note> version 1.4. Technical Paper TP-4, DAI, </note> <year> 1989. </year>
Reference-contexts: The research reported in this paper was supported by SERC grant GR/F/71799. The Use of Planning Critics in Mechanizing Inductive Proofs 2 clam <ref> [van Harmelen 89] </ref> and applied very successfully to the domain of inductive proofs [Bundy et al 91]. However, experience in automated inductive theorem proving [Boyer & Moore 88] has shown that failed proof attempts often hold the key to discovering a complete proof.
Reference: [Wilkins 88] <author> D.E. Wilkins. </author> <title> Practical Planning: Extending the Classical AI Planning Paradigm. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1988. </year>
Reference-contexts: Critics are "constructive" in the sense that as well as identifying problems in the plan structure they also take corrective action. The notion of constructive critics was first introduced in the noah system [Sacerdoti 77] and has had lasting effect on the classical AI planning paradigm <ref> [Wilkins 88] </ref>. While a method specifies precisely the conditions under which a tactic is applicable our proposed proof critics may be used to capture patchable exceptions to a tactic. The schema for critics is given in figure 4.
References-found: 13

