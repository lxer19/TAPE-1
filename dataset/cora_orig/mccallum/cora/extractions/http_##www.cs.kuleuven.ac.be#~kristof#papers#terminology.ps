URL: http://www.cs.kuleuven.ac.be/~kristof/papers/terminology.ps
Refering-URL: http://www.cs.kuleuven.ac.be/~kristof/publications.html
Root-URL: 
Email: email: fkristof, marcd, dannydg@cs.kuleuven.ac.be  
Title: A Strong Correspondence between Description Logics and Open Logic Programming  
Author: Kristof Van Belleghem, Marc Denecker, Danny De Schreye 
Address: Celestijnenlaan 200A, B-3001 Heverlee, Belgium.  
Affiliation: Department of Computer Science, K.U.Leuven,  
Abstract: This paper formally investigates the relationship between Open Logic Programming (OLP) and Description Logics (DL). A description logic is designed to represent two different forms of knowledge. A T-Box represents definitional knowledge, i.e. definitions for a set of concepts. An A-Box represents assertional knowledge about specific domain objects. OLP is a declarative, terminological interpretation of the formalism of Abductive Logic Programming. In this interpretation, an abductive logic program is considered to consist of a T-Box providing definitions for non-abducible predicates and an A-Box providing assertional knowledge in the form of first order logic axioms. We define a provably correct mapping of DL theories to open logic programs, and identify sublanguages of OLP corresponding to several description logics. We also show strong correspondences between derivations produced by a typical DL algorithm and an abductive resolution procedure. The correspondences clarify long-questioned relationships between Logic Programming and Description Logics. To the LP community they may offer the possibility to import efficient reasoning techniques used in description logics. More importantly, the correspondences indicate the value of OLP as a suitable and highly expressive knowledge representation language, as opposed to both standard LP and first order logic. As current description logics are all subsets of OLP, the latter may also indicate directions for enhancing the expressivity of the former. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F. Baader and U. Sattler. </author> <title> Number restrictions on complex roles in description logics : a preliminary report. </title> <booktitle> In Proceedings of the 5th International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 328-339. </pages> <publisher> Morgan Kaufman, </publisher> <year> 1996. </year>
Reference: [2] <author> R. J. Brachman, R. Fikes, and H. Levesque. </author> <title> Krypton: Integrating Terminology and Assertion. </title> <booktitle> In Proc. of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 31-35. </pages> <publisher> William Kaufman, </publisher> <year> 1983. </year>
Reference: [3] <author> R. J. Brachman and H. Levesque. </author> <title> Competence in Knowledge Representation. </title> <booktitle> In Proc. of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 189-192, </pages> <year> 1982. </year>
Reference: [4] <author> M. Buchheit, F. Donini, W. Nutt, and A. Schaerf. </author> <title> A refined architecture for terminological systems: Terminology = schema + views. </title> <booktitle> In Proc. of the 12th National Conference on Artificial Intelligence, </booktitle> <year> 1995. </year>
Reference: [5] <author> D. Calvanese. </author> <title> Finite model reasoning in description logics. </title> <booktitle> In Proceedings of the 5th International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 292-303, </pages> <year> 1996. </year>
Reference: [6] <author> K. Clark. </author> <title> Negation as failure. </title> <editor> In H. Gallaire and J. Minker, editors, </editor> <booktitle> Logic and databases, </booktitle> <pages> pages 293-322. </pages> <publisher> Plenum Press, </publisher> <year> 1978. </year>
Reference: [7] <author> L. Console, D. Theseider Dupre, and P. Torasso. </author> <title> On the relationship between abduction and deduction. </title> <journal> Journal of Logic and Computation, </journal> <volume> 1(5) </volume> <pages> 661-690, </pages> <year> 1991. </year>
Reference: [8] <author> G. De Giacomo and M. </author> <title> Lenzerini. </title> <booktitle> Tbox and abox reasoning in exressive description logics. In Proceedings of the 5th International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pages 316-327, </pages> <year> 1996. </year>
Reference: [9] <author> M. Denecker and D. De Schreye. </author> <title> SLDNFA; an abductive procedure for normal abductive programs. </title> <editor> In K. Apt, editor, </editor> <booktitle> Proceedings of the International Joint Conference and Symposium on Logic Programming, </booktitle> <address> Washington, </address> <year> 1992. </year>
Reference-contexts: In practice we start with the equivalent goal C (sk), where sk is a skolem constant. For a detailed description of SLDNFA we refer the reader to <ref> [9] </ref>. We only give a short overview of the part relevant to our discussion. The procedure maintains three sets: P G of positive goals (goals which need to succeed), N G of negative goals (which need to fail), and of abduced atoms.
Reference: [10] <author> M. Denecker and D. De Schreye. </author> <title> Justification semantics: a unifying framework for the semantics of logic programs. </title> <booktitle> In Proc. of the Logic Programming and Nonmonotonic Reasoning Workshop, </booktitle> <pages> pages 365-379, </pages> <year> 1993. </year>
Reference: [11] <author> M. Denecker and D. De Schreye. </author> <title> Representing incomplete knowledge in ab-ductive logic programming. </title> <journal> Journal of Logic and Computation, </journal> <volume> 5(5) </volume> <pages> 553-578, </pages> <year> 1995. </year>
Reference: [12] <author> M. Denecker, K. Van Belleghem, G. Duchatelet, F. Piessens, and D. De Schr-eye. </author> <title> A realistic experiment in knowledge representation in open event calculus: Protocol specification. </title> <booktitle> In Proceedings of the Joint International Conference and Symposium on Logic Programming, </booktitle> <pages> pages 170-184, </pages> <year> 1996. </year>
Reference: [13] <author> F. Donini, B. Hollunder, M. Lenzerini, D. Nardi, A. M. Spaccamela, and W. Nutt. </author> <title> The complexity of existential quantification in concept languages. </title> <journal> Artificial Intelligence, </journal> <volume> 53 </volume> <pages> 309-327, </pages> <year> 1991. </year>
Reference: [14] <author> B. </author> <title> Hollunder. Hybrid inferences in kl-one-based knowledge representation systems. </title> <booktitle> In German National Conference on Artificial Intelligence, </booktitle> <year> 1990. </year>
Reference: [15] <author> B. Hollunder, W. Nutt, and M. Schmidt-Schauss. </author> <title> Subsumption algorithms for concept description languages. </title> <booktitle> In Proceedings of the 9th European Conference on Artificial Intelligence, </booktitle> <address> Stockholm, </address> <year> 1990, 1990. </year>
Reference-contexts: Typically abductive procedures based on resolution are used to reason on open logic programs, where DLs use special tableaux style algorithms. Here we describe the correspondence between the abductive procedure SLD-NFA ([9]) and the procedure for consistency checking of ALCN theories described in <ref> [15] </ref>. This algorithm does not consider the presence of a (non-empty) A-Box, but it can be extended rather easily to deal with one. <p> The propagation rules and the algorithm depend on which description logic is used. We briefly describe the algorithm for ALCN as it is presented in <ref> [15] </ref>. First we define the following concepts: assume S is a constraint system, R is a role, and x a variable occurring in S.
Reference: [16] <author> A. Kakas and P. Mancarella. </author> <title> Generalised stable models: a semantics for abduction. </title> <booktitle> In Proc. of the European Conference on Artificial Intelligence, </booktitle> <year> 1990. </year>
Reference: [17] <author> A. Kakas and M.Michael. </author> <title> Integrating Abductive and Constraint Logic Programming. </title> <booktitle> In Proceedings of the Twelfth International Conference on Logic Programming, ICLP-95, </booktitle> <pages> pages 399-417. </pages> <publisher> MIT press, </publisher> <year> 1995. </year>
Reference-contexts: Another interesting result would be the extension of the OLP language with a representation of number restrictions and an efficient way of handling them. In fact an obvious way to achieve this is by incorporating CLP techniques in Open/Abductive Logic Programming, as in <ref> [17] </ref>. On the other hand, more expressive sublanguages of OLP might be used as the basis of new description logics for which complexity results are determined and efficient algorithms developed. The correspondence to DLs also suggests that OLP is a highly expressive knowledge representation language.
Reference: [18] <author> A. C. Kakas, R. Kowalski, and F. Toni. </author> <title> Abductive Logic Programming. </title> <journal> Journal of Logic and Computation, </journal> <volume> 2(6) </volume> <pages> 719-770, </pages> <year> 1993. </year>
Reference: [19] <author> J. Lloyd. </author> <title> Foundations of Logic Programming. </title> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference: [20] <author> J. Lloyd and R. Topor. </author> <title> Making prolog more expressive. </title> <journal> Journal of logic programming, </journal> <volume> 1(3) </volume> <pages> 225-240, </pages> <year> 1984. </year>
Reference: [21] <author> K. Van Belleghem, M. Denecker, and D. De Schreye. </author> <title> Representing continuous change in the abductive event calculus. </title> <booktitle> Proc. of the International Conference on Logic Programming, </booktitle> <year> 1994, </year> <pages> pages 225-240, </pages> <year> 1994. </year>
References-found: 21

