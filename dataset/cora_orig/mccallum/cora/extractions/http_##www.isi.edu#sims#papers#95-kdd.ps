URL: http://www.isi.edu/sims/papers/95-kdd.ps
Refering-URL: http://www.isi.edu/~knoblock/
Root-URL: 
Title: 17 Using Inductive Learning To Generate Rules for Semantic Query Optimization  
Author: Chun-Nan Hsu and Craig A. Knoblock 
Date: 1995  
Note: To appear in Advances of Knowledge Discovery and Data Mining, AAAI Press,  17.1 Introduction  
Affiliation: Information Sciences Institute and Department of Computer Science University of Southern California  
Abstract: Semantic query optimization can dramatically speed up database query answering by knowledge intensive reformulation. But the problem of how to learn the required semantic rules has not been previously solved. This chapter presents a learning approach to solving this problem. In our approach, the learning is triggered by user queries. Then the system uses an inductive learning algorithm to generate semantic rules. This inductive learning algorithm can automatically select useful join paths and attributes to construct rules from a database with many relations. The learned semantic rules are effective for optimization because they will match query patterns and reflect data regularities. Experimental results show that this approach learns sufficient rules for optimization that produces a substantial cost reduction. This chapter presents an approach to learning semantic knowledge for semantic query optimization (SQO). SQO optimizes a query by using semantic rules, such as all Maltese seaports have railroad access, to reformulate a query into a less expensive but equivalent query. For example, suppose we have a query to find all Maltese seaports with railroad access and 2,000,000 f t 3 of storage space. From the rule given above, we can reformulate the query so that there is no need to check the railroad access of seaports, which may save some execution time. Many SQO algorithms have been developed (Hammer and Zdonik 1980; King 1981; Shekhar et al. 1988; Shenoy and Ozsoyoglu 1989). Average savings from 20 to 40 percent using hand-coded knowledge are reported in the literature. 
Abstract-found: 1
Intro-found: 0
Reference: <author> Agrawal, R., Imielinski, T., and Swami, A. </author> <year> 1993. </year> <title> Mining Association Rules between Sets of Items in Large Databases. </title> <booktitle> In Proceedings of ACM SIGMOD, </booktitle> <address> Washington, D.C., </address> <pages> 207-216. </pages>
Reference: <author> Arens, Y., Chee, C. Y., Hsu, C.-N., and Knoblock, C. A. </author> <year> 1993. </year> <title> Retrieving and Integrat ing Data from Multiple Information Sources. </title> <journal> International Journal on Intelligent and Cooperative Information Systems 2(2) </journal> <pages> 127-159. </pages>
Reference: <author> Cormen, T. H., Leiserson, C. E., and Rivest, R. L. </author> <year> 1989. </year> <title> Introduction To Algorithms. </title> <publisher> Cambridge, Massachusetts:The MIT Press/McGraw-Hill Book Co. </publisher>
Reference: <author> Hammer, M. and Zdonik, S. B. </author> <year> 1980. </year> <title> Knowledge-based Query Processing. </title> <booktitle> In Proceed ings of the Sixth VLDB Conference, </booktitle> <address> Washington, D.C., </address> <pages> 137-146. </pages>
Reference: <author> Haussler, D. </author> <year> 1988. </year> <title> Quantifying Inductive Bias: AI Learning Algorithms and Valiant's Learning Framework. </title> <booktitle> Artificial Intelligence 36 </booktitle> <pages> 177-221. </pages>
Reference: <author> Hsu, C.-N. and Knoblock, C. A. </author> <year> 1994. </year> <title> Rule Induction for Semantic Query Optimizer. </title> <booktitle> In Machine Learning, Proceedings of the 11th International Conference, </booktitle> <pages> 112-120. </pages> <address> San Mateo, California: </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: This way, the system can autonomously maintain a set of Using Inductive Learning To Generate Rules for Semantic Query Optimization 217 effective and consistent rules for optimization. We are currently developing an estimation approach to implement this idea. Acknowledgements This chapter is extended from <ref> (Hsu and Knoblock 1994) </ref>. We wish to thank the SIMS project members: Yigal Arens, Wei-Min Shen, Chin Y. Chee and Jose-Luis Ambite for their help on this work.
Reference: <author> Hsu, C.-N. and Knoblock, C. A. </author> <year> 1993a. </year> <title> Learning Database Abstractions for Query Reformulation. </title> <booktitle> In Proceedings of KDD-93, AAAI-93 Workshop on Knowledge Discovery in Databases, </booktitle> <address> Washington, D.C., </address> <pages> 276-290. </pages>
Reference-contexts: The idea is that a complex query can be decomposed into conjunctive subqueries. The system can then apply SQO to optimize each subquery and propagate constraints among them for global optimization. We have developed such an SQO algorithm to optimize heterogeneous multidatabase query plans <ref> (Hsu and Knoblock 1993a) </ref>. Rules learned for optimizing conjunctive queries can be used for optimizing complex queries. In this chapter, we will focus on the problem of learning and SQO for conjunctive queries. The queries considered here are conjunctive Datalog queries, which corresponds to the select-from-where subset of SQL. <p> In our framework, however, the algorithm is also required to induce a low-cost description, that is, a low-cost alternative query that can be evaluated by the DBMS efficiently. Previously, we have developed an inductive learning algorithm that learns low-cost queries from single-table databases <ref> (Hsu and Knoblock 1993a) </ref>. Section 17.4 describes in detail a more advanced algorithm that learns conjunctive Datalog queries from relational databases. This algorithm can be extended to databases with more advanced data models, such as object-oriented and deductive databases. The operationalization component derives semantic rules from two equivalent queries.
Reference: <author> Hsu, C.-N. and Knoblock, C. A. </author> <year> 1993b. </year> <title> Reformulating Query Plans for Multidatabase Systems. </title> <booktitle> In Proceedings of the Second International Conference on Information and Knowledge Management, </booktitle> <address> Washington, D.C., 423-432. </address> <note> 218 Hsu & Knoblock Jarke, </note> <author> M. and Koch, J. </author> <year> 1984. </year> <title> Query Optimization in Database Systems. </title> <journal> ACM Com puter Surveys, </journal> <volume> 16 </volume> <pages> 111-152. </pages>
Reference-contexts: Range facts are still necessary for reformulating these queries because the system uses them in the rule matching for numerically typed attributes. <ref> (Hsu and Knoblock 1993b) </ref> describes in detail the usage and acquisition of range facts. The performance statistics on those queries are shown in Table 17.4. There are 11 out of 26 testing queries in this set.
Reference: <author> King, J. J. </author> <year> 1981. </year> <title> Query Optimization by Semantic Reasoning. </title> <type> Ph.D. thesis, </type> <institution> Department of Computer Science, Stanford University. </institution>
Reference-contexts: R2: geoloc ( ,?glc cd,"Malta", , ) ) seaport ( ,?glc cd, , , , ). R3: seaport ( ,?glc cd,?storage, , , ) ^ geoloc ( ,?glc cd,"Malta", , ) ) ?storage &gt; 2000000. Schema of a geographic database and semantic Rules Although the basic SQO approach <ref> (King 1981) </ref> applies only to conjunctive queries, it can be extended to optimize complex queries with disjunctions, group-by or aggregate operators. The idea is that a complex query can be decomposed into conjunctive subqueries.
Reference: <author> Knoblock, C. A., Arens, Y., and Hsu, C.-N. </author> <year> 1994. </year> <title> Cooperating Agents for Information Retrieval. </title> <booktitle> In Proceedings of the Second International Conference on Intelligent and Cooperative Information Systems, </booktitle> <address> Toronto, Ontario, Canada. </address>
Reference-contexts: This way, the system can autonomously maintain a set of Using Inductive Learning To Generate Rules for Semantic Query Optimization 217 effective and consistent rules for optimization. We are currently developing an estimation approach to implement this idea. Acknowledgements This chapter is extended from <ref> (Hsu and Knoblock 1994) </ref>. We wish to thank the SIMS project members: Yigal Arens, Wei-Min Shen, Chin Y. Chee and Jose-Luis Ambite for their help on this work.
Reference: <author> Lavrac, N. and Dzeroski, S. </author> <year> 1994. </year> <title> Inductive Logic Programming: Techniques and Ap plications. </title> <publisher> Ellis Horwood. </publisher>
Reference: <author> Mannila, H., Toivonen, H., and Verkamo, A. I. </author> <year> 1994. </year> <title> Efficient Algorithms for Dis covering Association Rules. </title> <booktitle> In Proceedings of KDD-94, AAAI-94 Workshop on Knowledge Discovery in Databases. </booktitle> <address> Seattle, Washington, </address> <pages> 181-192. </pages>
Reference: <author> Muggleton, S. and Feng, C. </author> <year> 1990. </year> <title> Efficient Induction of Logic Programs. </title> <booktitle> In Proceedings of the First Conference on Algorithmic Learning Theory. </booktitle> <address> Tokyo, Japan. </address>
Reference: <author> Quinlan, J. R. </author> <year> 1990. </year> <title> Learning Logical Definitions from Relations. </title> <booktitle> Machine Learning 5 </booktitle> <pages> 239-266. </pages>
Reference-contexts: Our inductive learning approach uses a top-down algorithm similar to FOIL <ref> (Quinlan 1990) </ref> to build an alternative query. The differences between our approach and FOIL are that they learn descriptions in a different language. FOIL learns Horn-clause definitions where each clause covers a subset of positive instances but no negative instances.
Reference: <author> Shavlik, J. and Dietterich, T. A., eds. </author> <year> 1990. </year> <booktitle> Readings in Machine Learning. </booktitle> <address> San Mateo, California: </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Given a set of data instances classified as positive or negative, the problem of inducing a description that covers all 206 Hsu & Knoblock A simplified learning scenario positive data instances but no negatives is known as supervised inductive learning in machine learning <ref> (Shavlik and Dietterich 1990) </ref>. Since a query is a description of the data to be retrieved, inductive learning algorithms that learn descriptions expressed in the query language can be used in our framework. Most supervised inductive learning algorithms are designed for accurate classification of unseen data instances.
Reference: <author> Shekhar, S., Hamidzadeh, B., Kohli, A., and Coyle, M. </author> <year> 1993. </year> <title> Learning Transforma tion Rules for Semantic Query Optimization: A Data-Driven Approach. </title> <journal> IEEE Transactions on Knowledge and Data Engineering 5(6) </journal> <pages> 950-964. </pages>
Reference: <author> Shekhar, S., Srivastava, J., and Dutta, S. </author> <year> 1988. </year> <title> A Formal Model of Trade-off Between Optimization and Execution Costs in Semantic Query Optimization. </title> <booktitle> In Proceedings of the 14th VLDB Conference. </booktitle> <address> Los Angeles, California. </address>
Reference: <author> Shenoy, S. T. and Ozsoyoglu, Z. M. </author> <year> 1989. </year> <title> Design and Implementation of a Semantic Query Optimizer. </title> <journal> IEEE Trans. Knowledge and Data Engineering I(3):344-361. </journal>
Reference: <author> Siegel, M. D. </author> <year> 1988. </year> <title> Automatic Rule Derivation for Semantic Query Optimizer. </title> <editor> In Ker schberg, L., editor, </editor> <booktitle> Proceedings of the Second International Conference on Expert Database Systems, </booktitle> <pages> 371-385. </pages> <institution> Fairfax, VA.:George Mason Foundation. </institution>
Reference: <author> Ullman, J. D. </author> <year> 1988. </year> <title> Principles of Database and Knowledge-base Systems, </title> <booktitle> volume I,II. </booktitle> <address> Palo Alto, </address> <publisher> California:Computer Science Press. </publisher>
Reference-contexts: To estimate the actual cost of a constraint is very expensive. We therefore use an approximation here. The evaluation cost of individual constraints can be estimated using standard query size estimation techniques <ref> (Ullman 1988) </ref>. A set of simple estimates is shown in Table 17.1. For an internal disjunction on a non-indexed attribute of a relation D, a query evaluator has to scan the entire relation to find all satisfying instances. Thus, its evaluation cost is proportional to jDj, the size of D.
Reference: <author> Yu, C. T. and Sun, W. </author> <year> 1989. </year> <title> Automatic Knowledge Acquisition and Maintenance for Semantic Query Optimizer. </title> <journal> IEEE Trans. Knowledge and Data Engineering I(3):362-375. </journal>
References-found: 21

