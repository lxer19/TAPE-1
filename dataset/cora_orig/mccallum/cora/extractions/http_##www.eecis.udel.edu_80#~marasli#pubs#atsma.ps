URL: http://www.eecis.udel.edu:80/~marasli/pubs/atsma.ps
Refering-URL: http://www.eecis.udel.edu:80/~marasli/pubs.html
Root-URL: http://www.cis.udel.edu
Email: Email: fmarasli,amer,pconradg@cis.udel.edu  
Phone: Phone: (302) 831-1944 Fax: (302) 831-8458  
Title: Metrics For Quantifying Partially Ordered Transport Services  
Author: Rahmi Marasli Paul D. Amer Phillip T. Conrad 
Keyword: transport protocol, partially ordered service, multimedia, correlation, simulation, qual ity of service  
Address: 19716 USA  
Affiliation: Computer and Information Science Department University of Delaware, Newark, DE  
Abstract: Partially ordered transport service offers a middle ground between ordered service and unordered service. For applications requiring only partial order rather than total order, partially ordered service provides performance improvements in terms of delay and buffer utilization. Intuitively, one expects a partially ordered service to provide relatively greater performance improvement when the partial order specified by the service user is more "flexible" (i.e., has fewer order constraints) and smaller performance improvement when the partial order is less "flexible" (i.e., has more order constraints). In this paper, we investigate this notion formally by proposing metrics for the "flexibility" of partial orders, and determining through an OPNET simulation how well these metrics correlate with expected performance. Two metrics are investigated: m(P O), and density. Results show that for fixed system conditions (e.g., fixed buffer size, network loss rate, and round-trip delay,) m(P O) and density correlate highly with the performance statistics investigated. However, since density is significantly easier to calculate, our conclusion is that density is the best way to rank partial orders as to their ability to provide performance improvements using partially ordered service. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Paul D. Amer, C. Chassot, Thomas J. Connolly, Phillip T. Conrad, and M. Diaz. </author> <title> Partial order transport service for multimedia and other applications. </title> <journal> IEEE/ACM Trans on Networking, </journal> <volume> 2(5), </volume> <pages> 440-456, </pages> <month> Oct </month> <year> 1994. </year>
Reference-contexts: To achieve better tradeoffs between order and other quality-of-service (QoS) parameters (e.g., delay), and to satisfy the minimal order requirements of applications, partially ordered transport service has been proposed <ref> [1, 5, 7] </ref>. Partially ordered service fills the gap between ordered and unordered service by allowing applications to specify the delivery order of objects in the form of a partial order. <p> The authors are designing a new transport-layer protocol, called Partial Order Connection (POC), that provides partially ordered and partially reliable service to its users <ref> [1, 5, 7] </ref>. POC enhances an unreliable and unordered network service just enough to allow applications to specify controlled levels of loss and reordering in the delivery of the objects. Thus, both the order and the reliability requirements of the applications are generalized in POC. <p> Therefore, we investigate two metrics of a partial order's flexibility and the correlation between these metrics and the performance observed in the corresponding partially ordered service. The two metrics considered are m (P O) and density. Reference <ref> [1] </ref> proposes m (P O), a metric based on number of linear extensions of a partial order, as a complexity measure of different partially ordered services. Density [9] is another metric that measures the flexibility of a partial order. <p> The metrics m (P O) and density are formally defined in Section 3. Section 4 explains the experimental design for the simulation study and presents the results. 2 Why Use a Partially Ordered Service? References <ref> [1, 7] </ref> introduce the development and motivation for a partially ordered protocol/service including several examples. A summary of this material is provided here. Essentially, a partially ordered service can be employed and is motivated whenever a total order on the delivery of objects is not mandatory. <p> Partially reliable transport service provides a middle ground between these two in which the loss tolerance of each object can be specified individually. References <ref> [1, 5, 6, 7] </ref> consider partial order and partial reliability in juxtaposition, while [10] and this paper focus solely on partial order. 4 ments of the objects that make up a temporal multimedia document. <p> Clearly, for N objects, e (complete order) = 1 and e (no order) = N ! It is argued in <ref> [1] </ref> that e (P O) appropriately quantifies a desired partially ordered service in communication networks. Intuitively this metric correlates to the level of effort and resources a protocol would have to use to provide a particular partial order service. <p> One of the main problems with e (P O) is that it gets large very fast with increasing number of objects in P O. To avoid such large numbers, m (P O) is defined in <ref> [1] </ref> as a normalized logarithmic scale of e (P O). m (P O) is a normalized partial order metric in the interval [0; 1] where 0 represents an ordered service, values from 0 to 1 represent increasingly more flexible partially ordered service, and 1 represents unordered service: m (P O) = <p> To avoid such large numbers, m (P O) is defined in [1] as a normalized logarithmic scale of e (P O). m (P O) is a normalized partial order metric in the interval <ref> [0; 1] </ref> where 0 represents an ordered service, values from 0 to 1 represent increasingly more flexible partially ordered service, and 1 represents unordered service: m (P O) = log N ! Using a metric based on e (P O) presents some difficulties since computing e (P O) for an arbitrary <p> D is the total number of restrictions in P O, or the number of edges in the transitively closed precedence graph. The maximum value for D is N (N 1)=2, therefore the density, d, is defined by the ratio d = 2D=[N (N 1)] and ranges over the interval <ref> [0; 1] </ref>. Density correlates intuitively with the flexibility of a partial order; a chain has a value of 1, while an antichain has a value of 0.
Reference: [2] <author> Nate Baxter, Herman Chien, Andy Loreen, Kathryn Marshall, and Steven Baraniuk. </author> <title> OPNET Manual. MIL 3, </title> <publisher> Inc, </publisher> <year> 1993. </year>
Reference-contexts: Engineering Tools) is a comprehensive engineering system capable of simulating large communication networks with detailed protocol modeling and performance analysis <ref> [2] </ref>. The simulation model was verified by * detailed code-inspection and debugging, * comparing the results against those of the analytic model (whenever possible), and * designing a set of 22 experiments, stating their expected results, running the experiments, and verifying the results as expected [12].
Reference: [3] <author> G. Brightwell and P. Winkler. </author> <title> Counting Linear Extensions. </title> <booktitle> Order, </booktitle> <volume> 8, </volume> <pages> 225-242, </pages> <year> 1991. </year>
Reference-contexts: and 1 represents unordered service: m (P O) = log N ! Using a metric based on e (P O) presents some difficulties since computing e (P O) for an arbitrary partial order is #P Complete, and it is therefore highly unlikely that any polynomial algorithm exists for this computation <ref> [3, 4] </ref>. 5 3.2 A metric based on precedence constraints: density The density of a P O is defined as follows [9].
Reference: [4] <author> G. Brightwell and P. Winkler. </author> <title> Counting Linear Extensions is #P-Complete. </title> <booktitle> In Proceeedings of the 23rd ACM Symposium on the Theory of Computing, </booktitle> <pages> 175-181, </pages> <year> 1991. </year>
Reference-contexts: and 1 represents unordered service: m (P O) = log N ! Using a metric based on e (P O) presents some difficulties since computing e (P O) for an arbitrary partial order is #P Complete, and it is therefore highly unlikely that any polynomial algorithm exists for this computation <ref> [3, 4] </ref>. 5 3.2 A metric based on precedence constraints: density The density of a P O is defined as follows [9].
Reference: [5] <author> Thomas J. Connolly, Paul D. Amer, and Phillip T. Conrad. RFC-1693, </author> <title> An Extension to TCP: Partial Order Service. </title>
Reference-contexts: To achieve better tradeoffs between order and other quality-of-service (QoS) parameters (e.g., delay), and to satisfy the minimal order requirements of applications, partially ordered transport service has been proposed <ref> [1, 5, 7] </ref>. Partially ordered service fills the gap between ordered and unordered service by allowing applications to specify the delivery order of objects in the form of a partial order. <p> The authors are designing a new transport-layer protocol, called Partial Order Connection (POC), that provides partially ordered and partially reliable service to its users <ref> [1, 5, 7] </ref>. POC enhances an unreliable and unordered network service just enough to allow applications to specify controlled levels of loss and reordering in the delivery of the objects. Thus, both the order and the reliability requirements of the applications are generalized in POC. <p> Partially reliable transport service provides a middle ground between these two in which the loss tolerance of each object can be specified individually. References <ref> [1, 5, 6, 7] </ref> consider partial order and partial reliability in juxtaposition, while [10] and this paper focus solely on partial order. 4 ments of the objects that make up a temporal multimedia document.
Reference: [6] <author> Phillip T. Conrad, Edward Golden, Paul. D. Amer, and Rahmi Marasli. </author> <title> A Multimedia Document Retrieval System Using Partially-Ordered/Partially-Reliable Transport Service. </title> <booktitle> In Multimedia Computing and Networking 1996 (MMCN96; sponsored by SPIE/IS&T), </booktitle> <address> San Jose, CA, USA, </address> <month> Jan </month> <year> 1996. </year>
Reference-contexts: Figures 2.B and 2.C demonstrate two (of many) window configurations that call for a partial order delivery service. In these cases, two and six linear extensions, respectively, are permitted at the destination. 2.2 Using Partially Ordered Service for Remote Document Retrieval Reference <ref> [6] </ref> describes a prototype system for the retrieval and display of multimedia documents from a remote server using Partial Order Connection version 2 (POCv2), a partially ordered and partially reliable 1 transport protocol providing coarse-grained synchronization support. <p> Partially reliable transport service provides a middle ground between these two in which the loss tolerance of each object can be specified individually. References <ref> [1, 5, 6, 7] </ref> consider partial order and partial reliability in juxtaposition, while [10] and this paper focus solely on partial order. 4 ments of the objects that make up a temporal multimedia document.
Reference: [7] <author> M. Diaz, A. Lozes, C. Chassot, and P. Amer. </author> <title> Partial order connections: a new concept for high speed and multimedia services and protocols. </title> <journal> Annals of Telecommunications, </journal> <pages> 49(5-6), 270-281, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: To achieve better tradeoffs between order and other quality-of-service (QoS) parameters (e.g., delay), and to satisfy the minimal order requirements of applications, partially ordered transport service has been proposed <ref> [1, 5, 7] </ref>. Partially ordered service fills the gap between ordered and unordered service by allowing applications to specify the delivery order of objects in the form of a partial order. <p> The authors are designing a new transport-layer protocol, called Partial Order Connection (POC), that provides partially ordered and partially reliable service to its users <ref> [1, 5, 7] </ref>. POC enhances an unreliable and unordered network service just enough to allow applications to specify controlled levels of loss and reordering in the delivery of the objects. Thus, both the order and the reliability requirements of the applications are generalized in POC. <p> The metrics m (P O) and density are formally defined in Section 3. Section 4 explains the experimental design for the simulation study and presents the results. 2 Why Use a Partially Ordered Service? References <ref> [1, 7] </ref> introduce the development and motivation for a partially ordered protocol/service including several examples. A summary of this material is provided here. Essentially, a partially ordered service can be employed and is motivated whenever a total order on the delivery of objects is not mandatory. <p> Partially reliable transport service provides a middle ground between these two in which the loss tolerance of each object can be specified individually. References <ref> [1, 5, 6, 7] </ref> consider partial order and partial reliability in juxtaposition, while [10] and this paper focus solely on partial order. 4 ments of the objects that make up a temporal multimedia document.
Reference: [8] <author> B. A. Davey and H. A. Priestley. </author> <title> Introduction to Lattices and Order. </title> <publisher> Cambridge University Press, </publisher> <year> 1990. </year>
Reference-contexts: OPNET (OPtimize Network 2 "" is the linear sum or concatenation operator for P Os defined <ref> [8] </ref> as x y in P Q if and only if x; y*P and x y in P , or x; y*Q and x y in Q, or x*P and y*Q.
Reference: [9] <author> William V. Gehrlein. </author> <title> On Methods for Generating Random Partial Orders. </title> <journal> Operations Research Letters, </journal> <volume> 5(6), </volume> <pages> 285-291, </pages> <month> December </month> <year> 1986. </year>
Reference-contexts: The two metrics considered are m (P O) and density. Reference [1] proposes m (P O), a metric based on number of linear extensions of a partial order, as a complexity measure of different partially ordered services. Density <ref> [9] </ref> is another metric that measures the flexibility of a partial order. This paper studies by way of simulation the correlation of these two metrics to four important transport layer performance statistics: throughput, average end-to-end packet delay, standard deviation of end-to-end packet delay, and average buffer utilization. <p> some difficulties since computing e (P O) for an arbitrary partial order is #P Complete, and it is therefore highly unlikely that any polynomial algorithm exists for this computation [3, 4]. 5 3.2 A metric based on precedence constraints: density The density of a P O is defined as follows <ref> [9] </ref>. <p> The first four classes are motivated by multimedia applications. Random partial orders are not suggested by any real application; we use them solely for mathematical investigation. The random P Os are generated by methods discussed in <ref> [9] </ref>. 1. Chain-Singleton P Os: These partial orders contain one chain and a set of singletons (see C = c 1 :: c m and S = s 1 jj::jjs l are the chain and the singleton components, respectively.
Reference: [10] <author> Rahmi Marasli, Paul D. Amer, and Phillip T. Conrad. </author> <title> Partial Order Transport Service: An Analytic Model. </title> <note> (Submitted for publication). </note>
Reference-contexts: Analytic study has formally confirmed the intuitive results that, in general, * a partially reliable service provides lower delay and higher throughput than a reliable ser vice [11], and * a partially ordered service provides lower delay than an ordered service while consuming less buffer space <ref> [10] </ref>. A question arises as to what units should be used to label the axes. If we represent unreliable service by 0 and reliable service by 1, we could say that the reliability axis is labeled with the probability of delivering a packet. <p> Partially reliable transport service provides a middle ground between these two in which the loss tolerance of each object can be specified individually. References [1, 5, 6, 7] consider partial order and partial reliability in juxtaposition, while <ref> [10] </ref> and this paper focus solely on partial order. 4 ments of the objects that make up a temporal multimedia document. The application serving these documents can extract these requirements from such a specification and communicate them to the transport layer, which then provides the necessary QoS and synchronization support.
Reference: [11] <author> Rahmi Marasli, Paul D. Amer, and Phillip T. Conrad. </author> <title> Retransmission-Based Partially Reliable Transport Service: An Analytic Model. </title> <booktitle> In IEEE INFOCOM'96, </booktitle> <address> San Fransisco, CA, </address> <month> March </month> <year> 1996. </year> <note> IEEE. </note>
Reference-contexts: POC, on the other hand, provides a range of services covering the entire plane. Analytic study has formally confirmed the intuitive results that, in general, * a partially reliable service provides lower delay and higher throughput than a reliable ser vice <ref> [11] </ref>, and * a partially ordered service provides lower delay than an ordered service while consuming less buffer space [10]. A question arises as to what units should be used to label the axes.
Reference: [12] <author> Rahmi Marasli. </author> <title> Partially Ordered and Partially Reliable Transport Protocols: Performance Analysis. </title> <type> PhD thesis, </type> <institution> University of Delaware, </institution> <note> (In progress). </note>
Reference-contexts: The simulation model was verified by * detailed code-inspection and debugging, * comparing the results against those of the analytic model (whenever possible), and * designing a set of 22 experiments, stating their expected results, running the experiments, and verifying the results as expected <ref> [12] </ref>. In the simulation model's verification phase, results for , R Buff , and T end were generally within 1% of the analytic model results when each experiment was repeated three times with 30; 000 objects [12]. <p> experiments, stating their expected results, running the experiments, and verifying the results as expected <ref> [12] </ref>. In the simulation model's verification phase, results for , R Buff , and T end were generally within 1% of the analytic model results when each experiment was repeated three times with 30; 000 objects [12]. For the current study, each simulation experiment is repeated five times with 30; 000 objects, hence the results reported in this paper are expected also to be within 1% of the actual values.
Reference: [13] <author> Sheldon Ross. </author> <title> A First Course in Probability, Fourth Edition. </title> <publisher> Macmillian College Publishing, </publisher> <year> 1994. </year>
Reference-contexts: But first, we introduce the definition of correlation and performance statistics, and the partial orders used in experiments. 4.1 Definition of Correlation The correlation coefficient between two variables X and Y , denoted by (X; Y ), is defined <ref> [13] </ref>, as long as V ar (X) fl V ar (Y ) is nonzero, by: (X; Y ) = p (2) where Cov (X; Y ) = E [XY ] E [X]E [Y ] is the covariance between X and Y .
Reference: [14] <author> R. Stanley. </author> <title> Enumerative Combinatorics: </title> <booktitle> Volume 1. Wardsworth + Brooks/Cole Advanced Books & Software, </booktitle> <year> 1986. </year>
Reference-contexts: From a purely theoretical point of view, the number of linear extensions of P O, denoted e (P O), is thought as the best single number which measures the complexity of P O <ref> [14] </ref>. Clearly, for N objects, e (complete order) = 1 and e (no order) = N ! It is argued in [1] that e (P O) appropriately quantifies a desired partially ordered service in communication networks.
References-found: 14

