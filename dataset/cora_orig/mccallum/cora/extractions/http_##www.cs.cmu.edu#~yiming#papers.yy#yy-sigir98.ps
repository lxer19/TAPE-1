URL: http://www.cs.cmu.edu/~yiming/papers.yy/yy-sigir98.ps
Refering-URL: http://www.cs.cmu.edu/~yiming/publications.html
Root-URL: 
Title: A Study on Retrospective and On-Line Event Detection  
Author: Yiming Yang, Tom Pierce, Jaime Carbonell 
Web: www.cs.cmu.edu/~yiming/  
Address: Pittsburgh, PA 15213-3702, USA  
Affiliation: School of Computer Science Carnegie Mellon University  
Abstract: This paper investigates the use and extension of text retrieval and clustering techniques for event detection. The task is to automatically detect novel events from a temporally-ordered stream of news stories, either retrospectively or as the stories arrive. We applied hierarchical and non-hierarchical document clustering algorithms to a corpus of 15,836 stories, focusing on the exploitation of both content and temporal information. We found the resulting cluster hierarchies highly informative for retrospective detection of previously unidentified events, effectively supporting both query-free and query-driven retrieval. We also found that temporal distribution patterns of document clusters provide useful information for improvement in both retrospective detection and on-line detection of novel events. In an evaluation using manually labelled events to judge the system-detected events, we obtained a result of 82% in the F 1 measure for retrospective detection, and a F 1 value of 42% for on-line detection. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Jamie Callan. </author> <title> Document filtering with inference networks. </title> <booktitle> In Proceedings of the 19th Annual ACM/SIGIR conference, </booktitle> <pages> pages 262-269, </pages> <year> 1996. </year>
Reference-contexts: Incrementally update the document vocabulary and recompute IDF each time a new document is processed. An empirical analysis shows that an incremental IDF approach can be effective in document retrieval after a sufficient number of "past" docu ments have been processed <ref> [1] </ref>. We chose to combine both approaches, starting with IDF statistics of a retrospective corpus, and updating the IDF with each incoming document.
Reference: [2] <author> J.G. Carbonell, J. Goldstein, and Y. Geng. </author> <title> Automated query-relevant summarization and diversity-based reranking. </title> <booktitle> In Proceedings of the IJCAI-97 workshop on AI in Digital Libraries, </booktitle> <address> Nagoya, Japan, </address> <year> 1997. </year>
Reference-contexts: The key terms provide content information, and the story counts imply significance, as measured by media attention. If further detail is desired, the sub-clusters can be examined via query-driven retrieval, browsing individual documents or synthetic summaries across documents <ref> [2] </ref>. The utility of such computer assistance is evident even though some clusters may be imperfect and the current user interface is rudimentary. This paper reports our work in event detection, a new research topic initiated by the Topic Detection and Tracking (TDT) project 1 .
Reference: [3] <author> D.R. Cutting, D.R. Karger, J.O. Pedersen, and J.W. Tukey. Scatter/gather: </author> <title> a cluster-based approach to browsing large document collections. </title> <booktitle> In 15th Ann Int ACM SIGIR Conference on Research and Development in Information Retrieval (SIGIR'92), </booktitle> <year> 1992. </year>
Reference-contexts: We compare the results of the approaches of these two groups with the results of our approaches in the evaluation section. Other related work in the IR literature includes: * the Scatter/Gather cluster-based approach to cor pus navigation <ref> [3, 4] </ref>; * the studies on clustering algorithms and their applications in the context of query-driven retrieval [7, 6, 9, 8]. Our detection methods are inspired by the Scatter and Gather paper [3], including the choice of the basic group-average clustering (GAC) algorithm. <p> Other related work in the IR literature includes: * the Scatter/Gather cluster-based approach to cor pus navigation [3, 4]; * the studies on clustering algorithms and their applications in the context of query-driven retrieval [7, 6, 9, 8]. Our detection methods are inspired by the Scatter and Gather paper <ref> [3] </ref>, including the choice of the basic group-average clustering (GAC) algorithm. However clustering algorithms per se are not the major focus of this study, nor are the applications or evaluations in a query-driven retrieval paradigm. Instead, the primary contributions of this paper are applications of clustering techniques for event detection. <p> Straightforward GAC algorithms typically have a complexity in time and space quadratic to the number of input documents <ref> [3] </ref>, which is less economical or tractable for large applications than simpler methods, such as single-link clustering. Cutting et al. presented an iterative bottom-up algorithm aiming for a compromise between cluster quality and computational efficiency [3]. <p> typically have a complexity in time and space quadratic to the number of input documents <ref> [3] </ref>, which is less economical or tractable for large applications than simpler methods, such as single-link clustering. Cutting et al. presented an iterative bottom-up algorithm aiming for a compromise between cluster quality and computational efficiency [3]. In each iteration, it divides the current set of active clusters/documents into buckets, and does local clustering within each bucket. The process repeats and generates clusters at higher and higher levels, until a pre-determined number of top-level clusters are obtained.
Reference: [4] <author> T. Feder and D. Greene. </author> <title> Optimal algorithms for approximate clustering. </title> <booktitle> In Poceedings of the 20th Annual ACM Symposium on the Theory of Computing (STOC), </booktitle> <pages> pages 434-444, </pages> <year> 1988. </year>
Reference-contexts: We compare the results of the approaches of these two groups with the results of our approaches in the evaluation section. Other related work in the IR literature includes: * the Scatter/Gather cluster-based approach to cor pus navigation <ref> [3, 4] </ref>; * the studies on clustering algorithms and their applications in the context of query-driven retrieval [7, 6, 9, 8]. Our detection methods are inspired by the Scatter and Gather paper [3], including the choice of the basic group-average clustering (GAC) algorithm.
Reference: [5] <author> G. Salton. </author> <title> Automatic Text Processing: The Transformation, Analysis, and Retrieval of Information by Computer. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Pennsylvania, </address> <year> 1989. </year>
Reference-contexts: INCR is designed for sequential processing, and is used for both retrospective detection and on-line detection. 3.1 Cluster representation We share a common representation for documents and clusters in our detection and tracking algorithms. We employ the conventional vector space model <ref> [5] </ref> which uses the bag-of-terms representation. A document (story) is represented using a vector of weighted terms (words or phrases). The normalized vector sum of documents in a cluster is used to represent the cluster, and called the prototype or centroid of the cluster.
Reference: [6] <author> R.H. Tohompson and B.W. Croft. </author> <title> Support for browsing in an intelligent text retrieval system. </title> <journal> In International Journal of Man-Machine Studies, </journal> <pages> pages 30(6)639-668, </pages> <year> 1989. </year>
Reference-contexts: Other related work in the IR literature includes: * the Scatter/Gather cluster-based approach to cor pus navigation [3, 4]; * the studies on clustering algorithms and their applications in the context of query-driven retrieval <ref> [7, 6, 9, 8] </ref>. Our detection methods are inspired by the Scatter and Gather paper [3], including the choice of the basic group-average clustering (GAC) algorithm. However clustering algorithms per se are not the major focus of this study, nor are the applications or evaluations in a query-driven retrieval paradigm.
Reference: [7] <editor> C.J. van Rijsbergen. </editor> <booktitle> Information Retrieval. </booktitle> <address> Butter-worths, London, </address> <year> 1979. </year>
Reference-contexts: Other related work in the IR literature includes: * the Scatter/Gather cluster-based approach to cor pus navigation [3, 4]; * the studies on clustering algorithms and their applications in the context of query-driven retrieval <ref> [7, 6, 9, 8] </ref>. Our detection methods are inspired by the Scatter and Gather paper [3], including the choice of the basic group-average clustering (GAC) algorithm. However clustering algorithms per se are not the major focus of this study, nor are the applications or evaluations in a query-driven retrieval paradigm. <p> t where N is the total number of training documents, and n t is the number of training documents which contain term t. 3.2 GAC-based hierarchical clustering Basic GAC algorithm Group Average Clustering (GAC) is an agglomerative algorithm which maximizes the average similarity between document pairs in the resulting clusters <ref> [7, 9] </ref>. Straightforward GAC algorithms typically have a complexity in time and space quadratic to the number of input documents [3], which is less economical or tractable for large applications than simpler methods, such as single-link clustering. <p> Similarly, we investigated time windowing in INCR clustering for retrospective detection. In the experiments with other parameters fixed, using a window of 2000 documents (covering about 1.5 months of time) improved the performance score from 0.64 to 0.70 in the F 1 measure <ref> [7] </ref> (defined in the evaluation section). Detection thresholding We use two user-specified thresholds to control the detection decisions by the incremental algorithm: the clustering threshold (t c ), and the novelty threshold (t n ).
Reference: [8] <author> Ellen M. Voorhees. </author> <title> Implementing allgomerative hierarchic clustering algorithms for use in document retrieval. </title> <booktitle> In Information Processing & Management, volume 22:6, </booktitle> <pages> pages 465-476, </pages> <year> 1986. </year>
Reference-contexts: Other related work in the IR literature includes: * the Scatter/Gather cluster-based approach to cor pus navigation [3, 4]; * the studies on clustering algorithms and their applications in the context of query-driven retrieval <ref> [7, 6, 9, 8] </ref>. Our detection methods are inspired by the Scatter and Gather paper [3], including the choice of the basic group-average clustering (GAC) algorithm. However clustering algorithms per se are not the major focus of this study, nor are the applications or evaluations in a query-driven retrieval paradigm.
Reference: [9] <author> R. Willett. </author> <title> Recent trends in hierarchic document clustering: a critical review. </title> <booktitle> Information Processing and Management., </booktitle> <volume> 25(5) </volume> <pages> 577-597, </pages> <year> 1988. </year>
Reference-contexts: Other related work in the IR literature includes: * the Scatter/Gather cluster-based approach to cor pus navigation [3, 4]; * the studies on clustering algorithms and their applications in the context of query-driven retrieval <ref> [7, 6, 9, 8] </ref>. Our detection methods are inspired by the Scatter and Gather paper [3], including the choice of the basic group-average clustering (GAC) algorithm. However clustering algorithms per se are not the major focus of this study, nor are the applications or evaluations in a query-driven retrieval paradigm. <p> t where N is the total number of training documents, and n t is the number of training documents which contain term t. 3.2 GAC-based hierarchical clustering Basic GAC algorithm Group Average Clustering (GAC) is an agglomerative algorithm which maximizes the average similarity between document pairs in the resulting clusters <ref> [7, 9] </ref>. Straightforward GAC algorithms typically have a complexity in time and space quadratic to the number of input documents [3], which is less economical or tractable for large applications than simpler methods, such as single-link clustering.
Reference: [10] <author> Y. Yang, J.G. Carbonell, J. Allan, and J. Yamron. </author> <title> Topic detection and tracking: Detection-task. In Proceedings of the Workshop of Topic Detection and Tracking, </title> <year> 1997. </year>
Reference-contexts: UMass focuses on the detection of "disaster" events by monitoring sudden changes in term frequencies in news streams, and using the stories that contain disaster-related terms to construct cluster centroids. Dragon adapts unigram (and later bigram) language models to document/cluster representation, and uses k-means clustering algorithms for document grouping <ref> [10] </ref>. We compare the results of the approaches of these two groups with the results of our approaches in the evaluation section. <p> Table 7 shows the improved results that are obtained when potentially-overlapping clusters are permitted. The CMU results correspond to the modified GAC method described earlier. The (available) results by UMass and Dragon are also included for comparison, according to their reports at the TDT workshop <ref> [10] </ref>. Table 6. Retrospective detection results partition required CMU UMass Dragon (INCR) (no-dupl) (multi-pass) Recall (%) 62 34 61 Precision (%) 82 53 69 Miss (%) 38 66 39 False Alarm (%) .04 .09 .08 micro-avg F 1 .71 .42 .65 macro-avg F 1 .79 .60 .75 Table 7.
References-found: 10

