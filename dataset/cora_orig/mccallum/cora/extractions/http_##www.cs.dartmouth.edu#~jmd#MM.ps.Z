URL: http://www.cs.dartmouth.edu/~jmd/MM.ps.Z
Refering-URL: http://www.cs.dartmouth.edu/~jmd/decs/DECSpage.html
Root-URL: http://www.cs.dartmouth.edu
Email: jmd@cs.princeton.edu  
Title: Higher Bandwidth X  
Author: John Danskin 
Address: Princeton NJ, 08544  
Affiliation: Princeton University Computer Science Department  
Abstract: Network bandwidth has always been a key issue for multimedia protocols. Many potential users of networked multimedia protocols will continue to have low bandwidth network connections for some time: copper wire ISDN, infra-red, cellular modems, etc.. Compression provides potential relief for users of slow networks by increasing effective bandwidth. Higher Bandwidth X (HBX) introduces a new technique, based on arithmetic coding and statistical modeling, for compressing structured data. Applied to the X networked graphics protocol, this technique yields 6.3:1 compression across a representative set of traces, performing twice as well as the popular LZW-based Xremote compression protocol. HBX's coding techniques are generally applicable to the graphics and imaging subset of multimedia protocols. Future work will determine whether HBX's coding techniques can be applied to audio and video streams as well. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Arden, Michelle J. and James Gosling, </author> <title> "The NeWS book: an introduction to the Networked extensible Window System," </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1989 </year>
Reference-contexts: These mechanisms will continue to include compression. 3 Strategies for Managing Bandwidth Networked graphics has a relatively long history, and bandwidth has been a recurring issue. Two major techniques for managing bandwidth have emerged: * Explicit support: The best example of this technique is the Networked extensible Window System <ref> [1] </ref> (NeWS) in which applications can load postscript programs into the server. Application writers can reduce their communication requirements to a minimum by breaking their applications at the appropriate point and redefining the network protocol to minimize bandwidth requirements.

Reference: [3] <author> Cornelius, David, "Xremote: </author> <title> a serial line protocol for X" 6th Annual X Technical Conference, </title> <address> Boston, MA, </address> <year> 1992 </year>
Reference-contexts: This technique yields 6.3:1 compression across a representative suite fl Funded by an AT&T PhD fellowship and a grant from Apple Computer y Now at Dartmouth College jmd@cs.dartmouth.edu of traces, while the popular LZW-based Xremote compression protocol <ref> [3] </ref> only achieves 2.3:1 compression on the same set of traces. Graphics protocols such as X present a different compression challenge from audio and video streams for several reasons: * X must be compressed losslessly. <p> Traffic between the pseudo server and the pseudo client is multiplexed and compressed. 6 Xremote Xremote is the name of a system and a protocol developed by NCD for compressing the X protocol for transmission across a low bandwidth network. The Xremote protocol is described by Cornelius <ref> [3] </ref>. Danskin and Hanrahan implemented an Xremote simulator from NCD's spec and measured its compression performance across a suite of representative traces [5]. Neither clients nor server need be aware of Xremote.
Reference: [4] <author> Danskin, John and Pat Hanrahan, </author> <title> "Profiling the X Protocol,"1994 SigMetrics conference on measurement and modeling of computer systems. </title> <note> Full paper in Tech nical Report CS-TR-442-94, </note> <institution> Department of Computer Science, Princeton University, Princeton, NJ, </institution> <month> January </month> <year> 1994. </year>
Reference-contexts: For good compression, all of these must be compressed effectively. * X packets are small and include mixed types: Most X packets are less than 100 bytes long <ref> [4] </ref>. An effective compression protocol cannot waste bits shifting gears between compression techniques. In the rest of the paper, Section 2 discusses the outlook for software network compression. Section 3 surveys strategies for managing bandwidth in networked graphics protocols. Section 4 is a short introduction to the X protocol. <p> This means that X sessions are not repeatable in the way that standard computer benchmarks are repeatable. In order to assess the performance of X compression protocols in a way that permits fair comparisons, it is necessary to gather traces. A previous paper <ref> [4] </ref> discussed tracing techniques and the choice of traces, introduced a taxonomy of X messages, and characterized X applications and quantified their network bandwidth requirements. The set of traces used to generate the results presented here is shown in Table 1. <p> XTee and the traces are described in <ref> [4] </ref>. xfig emacs xterm X clients Network pseudo server Serial connection pseudo client Display Mouse Keyboard X server ghostscript Xremote or HBX thinks the pseudo client is the clients. <p> Default model: 0 order context. Fields effectively using this model include: window-ids, graphics-context-ids, and length fields. There are many X messages. Specifying predictive models for each field in each message would be a dreary task. Fortunately, most X traffic is generated by just a few messages <ref> [4] </ref>. This means that we can reap most of the benefits of optimizing all of the messages by optimizing just a few important ones. By default, HBX assigns a 0 order context model to each field in each message.
Reference: [5] <author> Danskin, John and Pat Hanrahan, </author> <title> "Compression Per formance of the Xremote Protocol," 1994 Data Com pression Conference. </title> <note> Full paper in Technical Re port CS-TR-441-94, </note> <institution> Department of Computer Science, Princeton University, Princeton, NJ, </institution> <month> January </month> <year> 1994. </year>
Reference-contexts: The Xremote protocol is described by Cornelius [3]. Danskin and Hanrahan implemented an Xremote simulator from NCD's spec and measured its compression performance across a suite of representative traces <ref> [5] </ref>. Neither clients nor server need be aware of Xremote. As shown in Figure 2, clients connect to Xremote's pseudo server as if it were the X server, and Xremote's pseudo client connects to the X server as if it were the clients.
Reference: [6] <author> Danskin, John, </author> <title> "Compressing graphics protocols for networks, or higher bandwidth X," </title> <type> PhD Thesis, </type> <institution> De partment of Computer Science, Princeton University, Princeton, NJ. </institution> <note> (In preparation) </note>
Reference-contexts: In the future I hope to release HBX as freeware, continue to increase compression performance and speed, and investigate the application of HBX to lossless compression of audio and video streams. A more complete discussion of HBX is available in <ref> [6] </ref>. 11 Acknowledgements Pat Hanrahan advised me throughout this project, Andrew Appel pushed me from 4.5:1 compression overall to 6.3:1 overall, and the reviewers found some errors and suggested the section on speed.
Reference: [7] <author> Gettys, James, Philip L. Karlton, and Scott Mcgregor, </author> <title> "The X Window System, </title> <note> Version 11," Software Practice and Experience vol. 20(S2), S2/35-S2/67, </note> <month> October </month> <year> 1991 </year>
Reference-contexts: 1 Introduction Multimedia network protocols need to support many different datatypes: audio, video, images, text and geometry. Graphics network protocols such as The X Window System version 11 (X) <ref> [13, 14, 7] </ref>, also support images, text and geometry, a critical subset of any multimedia system. Many existing networks are too slow to run standard interactive X sessions. These include telephone connections (normal and ISDN), wireless networks, and cellular connections.
Reference: [8] <author> Guazzo, M., </author> <title> "A general minimum redundancy source coding algorithm," </title> <journal> IEEE Trans. Information Theory, </journal> <volume> IT-26 (1), </volume> <pages> 15-25, </pages> <month> January </month> <year> 1980. </year>
Reference-contexts: Generating powerful predictive models is still hard. The lower bound on message size ( P n to Shannon [15], while an efficient technique for achieving this lower bound using arithmetic coding was discovered by 3 independent groups around 1977 <ref> [12, 8, 11] </ref>. For background on the history, theory, and implementation of arithmetic coding see Bell, Cleary and Witten [2]. As an introduction to the predictive models used by HBX, here are some examples from text compression.
Reference: [9] <author> Moffatt, A., </author> <title> "A note on the PPM data compression al gorithm," </title> <type> Research Report 88/7, </type> <institution> Department of Computer Science, University of Melbourne, Parkville, Vic toria, Australia. </institution>
Reference-contexts: X is a graphics protocol, supporting text, geometry and images. Other types of data are also important, such as window-ids, timestamps, and sequence numbers. Here are the predictive models used by HBX for each of these datatypes: Text model: 3rd order context. (This is Moffatt's PPMC' <ref> [9, 2] </ref>) Geometric model: 3rd order context on (X, Y) coordinates.
Reference: [10] <author> Patterson, David, A., and John L. Hennessy, </author> <title> "Com puter organization & design: </title> <publisher> The hardware/software interface" Morgan Kaufmann Publishers, </publisher> <address> San Mateo California, </address> <year> 1994. </year>
Reference-contexts: However, this point increases linearly with CPU performance, and CPU performance is increasing by 54% per year <ref> [10] </ref>.
Reference: [11] <author> Rissanen, J. J., and G. G. Langdon, </author> <title> "Arithmetic cod ing," </title> <journal> IBM J. Research and Development, </journal> <volume> 23(2), 149 162, </volume> <month> March </month> <year> 1979. </year>
Reference-contexts: Generating powerful predictive models is still hard. The lower bound on message size ( P n to Shannon [15], while an efficient technique for achieving this lower bound using arithmetic coding was discovered by 3 independent groups around 1977 <ref> [12, 8, 11] </ref>. For background on the history, theory, and implementation of arithmetic coding see Bell, Cleary and Witten [2]. As an introduction to the predictive models used by HBX, here are some examples from text compression.
Reference: [12] <author> Rubin, F., </author> <title> "Arithmetic stream coding using fixed preci sion registers," </title> <journal> IEEE Trans. Information Theory, </journal> <volume> IT-25 (6), </volume> <pages> 672-675, </pages> <month> November </month> <year> 1979. </year>
Reference-contexts: Generating powerful predictive models is still hard. The lower bound on message size ( P n to Shannon [15], while an efficient technique for achieving this lower bound using arithmetic coding was discovered by 3 independent groups around 1977 <ref> [12, 8, 11] </ref>. For background on the history, theory, and implementation of arithmetic coding see Bell, Cleary and Witten [2]. As an introduction to the predictive models used by HBX, here are some examples from text compression.
Reference: [13] <author> Scheifler Robert W., </author> <title> "The X Window System Proto col," </title> <institution> M.I.T. Laboratory for Computer Science. </institution> <year> 1988. </year>
Reference-contexts: 1 Introduction Multimedia network protocols need to support many different datatypes: audio, video, images, text and geometry. Graphics network protocols such as The X Window System version 11 (X) <ref> [13, 14, 7] </ref>, also support images, text and geometry, a critical subset of any multimedia system. Many existing networks are too slow to run standard interactive X sessions. These include telephone connections (normal and ISDN), wireless networks, and cellular connections.
Reference: [14] <author> Scheifler, Robert W. and Jim Gettys, </author> <title> "The X Window System," </title> <journal> Transactions on Graphics 5(2), </journal> <pages> 79-109, </pages> <month> April </month> <year> 1986, </year> <note> and Software Practice and Experience vol. 20(S2), S2/5-S2/34, </note> <month> October </month> <year> 1991 </year>
Reference-contexts: 1 Introduction Multimedia network protocols need to support many different datatypes: audio, video, images, text and geometry. Graphics network protocols such as The X Window System version 11 (X) <ref> [13, 14, 7] </ref>, also support images, text and geometry, a critical subset of any multimedia system. Many existing networks are too slow to run standard interactive X sessions. These include telephone connections (normal and ISDN), wireless networks, and cellular connections.
Reference: [15] <author> Shannon, C. E., </author> <title> "A mathematical theory of commu nication," </title> <journal> Bell System Technical Journal, </journal> <volume> 27, </volume> <pages> 398-403, </pages> <month> July </month> <year> 1948 </year>
Reference-contexts: Generating powerful predictive models is still hard. The lower bound on message size ( P n to Shannon <ref> [15] </ref>, while an efficient technique for achieving this lower bound using arithmetic coding was discovered by 3 independent groups around 1977 [12, 8, 11]. For background on the history, theory, and implementation of arithmetic coding see Bell, Cleary and Witten [2].
References-found: 14

