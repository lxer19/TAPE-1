URL: http://ftp.eecs.umich.edu/people/zheng/multiconf.ps
Refering-URL: http://ftp.eecs.umich.edu/people/zheng/
Root-URL: http://www.eecs.umich.edu
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> M. Liebhold and E. M. Hoffert, </author> <title> "Toward an open enviroment for digital video," </title> <journal> Communication of ACM, </journal> <volume> vol. 34, no. 4, </volume> <pages> pp. 104 - 112, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: 1 Introduction With dramatic increases in link bandwidth and node processing power at inexpensive costs, real-time transmission of digital motion video over computer networks has now become a reality. Extensive work has been reported on the development of video processor, multimedia workstations, and network support for this new application <ref> [1, 2, 3, 4, 5] </ref>. Traditionally, video signals are transmitted over dedicated circuits only, e.g., CATV. <p> In this way, continuous media communication like digital voice and video transmissions can be readily accommodated. However, the problem with the use of fixed-bandwidth circuits is the inefficient use of link bandwidth <ref> [1] </ref>. The bit-rate of digital video signals, after compressed, is highly time-varying, with the peak rate several times higher than the average rate. <p> By statistically multiplexing packets on transmission links, packet switching (e.g., ATM) is believed to be able to support variable bit-rate transmissions and make more efficient use of link bandwidth <ref> [1] </ref>. However, due to the contention delays at intermediate nodes, packet-switched transmission does not guarantee the timely delivery of packets. This causes a serious problem in transmitting real-time motion video where each video frame is required to be delivered in a timely manner. <p> The lengths of real-time channels are uniformly distributed in <ref> [1; H] </ref>. allows users to set up circuits with bandwidth of multiples of 8 Kbits/s up to 98.034 Mbits/s in a single-ring network. <p> We assume that each host node wants to set up a video channel to a destination node which is h links away, where h is a random integer variable uniformly distributed over <ref> [1; H] </ref>, and 1 H 19 is an integer parameter (H cannot be larger than 19 in a 20-node ring). For each H, we use Algorithm 2.1 to establish real-time channels for each node.
Reference: [2] <author> E. A. Fox, </author> <title> "Advances in interactive digital multimedia systems," </title> <booktitle> Computer, </booktitle> <pages> pp. 9 - 21, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: 1 Introduction With dramatic increases in link bandwidth and node processing power at inexpensive costs, real-time transmission of digital motion video over computer networks has now become a reality. Extensive work has been reported on the development of video processor, multimedia workstations, and network support for this new application <ref> [1, 2, 3, 4, 5] </ref>. Traditionally, video signals are transmitted over dedicated circuits only, e.g., CATV.
Reference: [3] <author> B. I. Szabo and G. K. Wallace, </author> <title> "Design considerations for JPEG video and synchronized audio in a Unix workstation enviroment," </title> <booktitle> in proceedings of summer 1991 Usenix Conference, </booktitle> <pages> pp. 353 - 368, </pages> <year> 1991. </year>
Reference-contexts: 1 Introduction With dramatic increases in link bandwidth and node processing power at inexpensive costs, real-time transmission of digital motion video over computer networks has now become a reality. Extensive work has been reported on the development of video processor, multimedia workstations, and network support for this new application <ref> [1, 2, 3, 4, 5] </ref>. Traditionally, video signals are transmitted over dedicated circuits only, e.g., CATV.
Reference: [4] <author> T. D. C. Little and A. Ghafoor, </author> <title> "Network considerations for distributed multimedia object composition and communication," </title> <journal> IEEE network magazine, pp. </journal> <volume> 32 - 49, </volume> <month> November </month> <year> 1990. </year>
Reference-contexts: 1 Introduction With dramatic increases in link bandwidth and node processing power at inexpensive costs, real-time transmission of digital motion video over computer networks has now become a reality. Extensive work has been reported on the development of video processor, multimedia workstations, and network support for this new application <ref> [1, 2, 3, 4, 5] </ref>. Traditionally, video signals are transmitted over dedicated circuits only, e.g., CATV.
Reference: [5] <author> M.-S. Chen, Z.-Y. Shae, D. D. Kandlur, T. P. Barzrilai, and H. M. Vin, </author> <title> "A multimedia desktop collaboration system," </title> <type> Research Report, </type> <institution> IBM Research Division, T. J. Watson Research Center, </institution> <year> 1992. </year>
Reference-contexts: 1 Introduction With dramatic increases in link bandwidth and node processing power at inexpensive costs, real-time transmission of digital motion video over computer networks has now become a reality. Extensive work has been reported on the development of video processor, multimedia workstations, and network support for this new application <ref> [1, 2, 3, 4, 5] </ref>. Traditionally, video signals are transmitted over dedicated circuits only, e.g., CATV.
Reference: [6] <author> F. E. Ross, </author> <title> "An overview of FDDI: The fiber distributed data interface," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 7, no. 7, </volume> <pages> pp. 1043 - 1051, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: To remedy this inflexibility, a hybrid transmission protocol, called FDDI-II, has been proposed to add time-division circuit switching to the existing packet-switched FDDI networks <ref> [6, 7] </ref>. In an FDDI-II network, users can set up circuits with bandwidth of multiples of 64 Kbits/s up to 98.304 Mbits/s. In this way, continuous media communication like digital voice and video transmissions can be readily accommodated.
Reference: [7] <author> M. Teener and R. Gvozdanovic, </author> <title> "FDDI-II operation and architectures," </title> <booktitle> in proceedings of the 14th conference on local computer networks, </booktitle> <pages> pp. 49-61, </pages> <year> 1989. </year>
Reference-contexts: To remedy this inflexibility, a hybrid transmission protocol, called FDDI-II, has been proposed to add time-division circuit switching to the existing packet-switched FDDI networks <ref> [6, 7] </ref>. In an FDDI-II network, users can set up circuits with bandwidth of multiples of 64 Kbits/s up to 98.304 Mbits/s. In this way, continuous media communication like digital voice and video transmissions can be readily accommodated.
Reference: [8] <author> D. Ferrari and D. C. Verma, </author> <title> "A scheme for real-time channel establishment in wide-area networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-8, no. 3, </volume> <pages> pp. 368-379, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: This causes a serious problem in transmitting real-time motion video where each video frame is required to be delivered in a timely manner. A new communication protocol, called real-time channels, was recently proposed by Ferrari and Verma <ref> [8] </ref> which has the advantages of both circuit-switched and packet-switched transmissions. The real-time channel protocol uses two techniques to ensure the ef ficient use of link bandwidth and the timely delivery of messages. 1. Packet switching with deadline scheduling. <p> The key problem with channel establishment is to verify whether or not the user requested end-to-end delay bound can be satisfied under the current network load condition. Results on this can be found in <ref> [8, 11, 9] </ref> and we will in Section 2 enhance these for motion video transmissions. It is also very important to efficiently implement the deadline scheduling of packet transmissions, especially in high-speed networks. <p> The modified protocol is composed of two parts: channel establishment/removal and message transmissions. Channel establishment/removal: Channel establishment can be done in a centralized [11] or decentralized manner <ref> [8] </ref>. We discuss a centralized version here which is easier to manage and implement than the decentralized one.
Reference: [9] <author> Q. Zheng and K. G. Shin, </author> <title> "On the ability of establishing real-time channels in point-to-point packet-switched networks," </title> <journal> IEEE Transactions on Communication (in press), </journal> <year> 1992. </year>
Reference-contexts: This is called protection <ref> [9] </ref> or firewall s [10] between channels which is very important to prevent some malicious channels from affecting the regular op eration of other channels. 2. Channel admission control. The real-time channel protocol requires the source node to establish a channel before sending any real-time message. <p> The key problem with channel establishment is to verify whether or not the user requested end-to-end delay bound can be satisfied under the current network load condition. Results on this can be found in <ref> [8, 11, 9] </ref> and we will in Section 2 enhance these for motion video transmissions. It is also very important to efficiently implement the deadline scheduling of packet transmissions, especially in high-speed networks. <p> Thus, the message has to be split into several packets which are then transmitted separately. In this paper, we first generalize the real-time channel establishment procedure discussed in <ref> [9, 11] </ref> to accommodate large messages. Then, we present simulation results to show the advantages of real-time channels over both circuit and packet switching in transmitting real-time video signals. This paper is organized as follows. <p> Section 3 presents the simulation results showing the advantages of real-time channels. The paper concludes with Section 4. 2 Real-time Channels 2.1 Real-time channel protocol To accommodate large messages, we need to modify the real-time channel protocol described in <ref> [9, 11] </ref>. The modified protocol is composed of two parts: channel establishment/removal and message transmissions. Channel establishment/removal: Channel establishment can be done in a centralized [11] or decentralized manner [8]. We discuss a centralized version here which is easier to manage and implement than the decentralized one. <p> To establish a real-time channel, the requesting node must first determine three channel parameters, (T; M; D), where T is the minimum message inter-generation time, M is the maximum message size, and D is the requested end-to-end message delay bound. As discussed in <ref> [9] </ref>, the three-parameter model is a natural way to describe the traffic characteristics for most real-time communication applications. <p> At an intermediate node, say node i with the outgoing link ` i , a packet arrived at time t is processed as follows. Step 1': Calculate the clock skew between node i 1 and node i: t s = t t t . As discussed in <ref> [9] </ref>, the end-to-end propagation delay can be pre-subtracted from the user requested end-to-end delay bound. So t s also removes the link propagation delay. We ignore the time-stamping time (since hardware can be used for this). <p> Similar to <ref> [9] </ref>, we first consider the message delay over a single link. <p> Then, similar to the Theorem 2 of <ref> [9] </ref>, it is easy to prove that one only needs to check the inequality of Theorem 2.1 for a finite set S = [ n i=1 fd i + nT i : n = 0; 1; ; b (t max d i )=T i cg. <p> Then, similar to Theorem 3 of <ref> [9] </ref>, the worst-case message link delay can be calculated as stated in the next theorem. Theorem 2.2 (Worst-Case Link Delay) . <p> The proof of Theorem 2.2 is similar to that of Theorem 3 in <ref> [9] </ref> and thus omitted. Now we calculate the end-to-end message delays from link delays. The end-to-end message delivery delay is defined as the time period between the generation of the message at the source node and the arrival of the last bit of the message at the destination node.
Reference: [10] <author> L. Zhang, </author> <title> "Virtual Clock: A new traffic control algorithm for packet-switched networks," </title> <journal> ACM Trans. Computer Systems, </journal> <volume> vol. 9, no. 2, </volume> <pages> pp. 101-124, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: This is called protection [9] or firewall s <ref> [10] </ref> between channels which is very important to prevent some malicious channels from affecting the regular op eration of other channels. 2. Channel admission control. The real-time channel protocol requires the source node to establish a channel before sending any real-time message.
Reference: [11] <author> D. D. Kandlur, K. G. Shin, and D. Ferrari, </author> <title> "Real-time communication in multi-hop networks," </title> <booktitle> in Proc. 11th Int. Conf. on Distributed Computer Systems, </booktitle> <pages> pp. 300-307. </pages> <publisher> IEEE, </publisher> <month> May </month> <year> 1991. </year>
Reference-contexts: The key problem with channel establishment is to verify whether or not the user requested end-to-end delay bound can be satisfied under the current network load condition. Results on this can be found in <ref> [8, 11, 9] </ref> and we will in Section 2 enhance these for motion video transmissions. It is also very important to efficiently implement the deadline scheduling of packet transmissions, especially in high-speed networks. <p> Thus, the message has to be split into several packets which are then transmitted separately. In this paper, we first generalize the real-time channel establishment procedure discussed in <ref> [9, 11] </ref> to accommodate large messages. Then, we present simulation results to show the advantages of real-time channels over both circuit and packet switching in transmitting real-time video signals. This paper is organized as follows. <p> Section 3 presents the simulation results showing the advantages of real-time channels. The paper concludes with Section 4. 2 Real-time Channels 2.1 Real-time channel protocol To accommodate large messages, we need to modify the real-time channel protocol described in <ref> [9, 11] </ref>. The modified protocol is composed of two parts: channel establishment/removal and message transmissions. Channel establishment/removal: Channel establishment can be done in a centralized [11] or decentralized manner [8]. We discuss a centralized version here which is easier to manage and implement than the decentralized one. <p> The modified protocol is composed of two parts: channel establishment/removal and message transmissions. Channel establishment/removal: Channel establishment can be done in a centralized <ref> [11] </ref> or decentralized manner [8]. We discuss a centralized version here which is easier to manage and implement than the decentralized one.
Reference: [12] <author> Q. Zheng and K. G. Shin, </author> <title> "Real-time communication in local area ring networks," </title> <booktitle> to appear in Proc. 17th Conference on Local Computer Networks, </booktitle> <year> 1992. </year>
Reference-contexts: The worst-case scheduling time, i.e., the time needed to insert and delete a packet into the priority queue, must be smaller than a packet's transmission time; otherwise, all the advantages of using the deadline scheduling policy will be lost. The readers are referred to <ref> [12, 13] </ref> for an example hardware implementation of a deadline scheduler. One special problem arises when one wants to send video signals over real-time channels. A video frame usually consists of several tens to hundreds Kbits, which are too large to fit in a single packet in most packet-switched networks. <p> Otherwise, update m a := maxfm a M; 0g and t p := maxft c ; t p + T g (message packetization is done). The packets forwarded to an outgoing link are scheduled according to their deadlines. The readers are referred to <ref> [12, 13] </ref> for an example implementation t s d i-1 t l node i-1 time node i time (M-P)/R i-1 time at node i. of this scheduling process. <p> When the sender completes the transmission of a packet, it fetches and transmits the next packet at the head of the priority queue. See <ref> [12] </ref> for a detailed account of the node architecture. The same simulator is used for packet switching with one change: packets from sbuffer are queued at the tail of the priority queue.
Reference: [13] <author> A. Indiresan and Q. Zheng, </author> <title> "Design and evaluation of a fast deadline scheduling switch for mul-ticomputers," </title> <note> RTCL working document, Decem-ber 1991. </note>
Reference-contexts: The worst-case scheduling time, i.e., the time needed to insert and delete a packet into the priority queue, must be smaller than a packet's transmission time; otherwise, all the advantages of using the deadline scheduling policy will be lost. The readers are referred to <ref> [12, 13] </ref> for an example hardware implementation of a deadline scheduler. One special problem arises when one wants to send video signals over real-time channels. A video frame usually consists of several tens to hundreds Kbits, which are too large to fit in a single packet in most packet-switched networks. <p> Otherwise, update m a := maxfm a M; 0g and t p := maxft c ; t p + T g (message packetization is done). The packets forwarded to an outgoing link are scheduled according to their deadlines. The readers are referred to <ref> [12, 13] </ref> for an example implementation t s d i-1 t l node i-1 time node i time (M-P)/R i-1 time at node i. of this scheduling process.
Reference: [14] <author> Q. Zheng and K. G. Shin, </author> <title> "Fault-tolerant real-time communication in distributed computing systems," </title> <booktitle> in Proc. 22nd Annual International Symposium on Fault-tolerant Computing, </booktitle> <year> 1992. </year>
Reference-contexts: After receiving a channel-establishment request, the NM first selects a route from the source to the destination over which the real-time channel is to be established. As discussed in <ref> [14] </ref>, the minimum hop routing is usually preferred since it is easier to guarantee an end-to-end delay bound over a shorter route than a longer one.
Reference: [15] <author> G. K. Wallace, </author> <title> "The JPEG still picture compression standard," </title> <journal> Communication of ACM, </journal> <volume> vol. 34, no. 4, </volume> <pages> pp. 30 - 43, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: The video data used here are obtained from a sequence of CNN headline news, stored on a laser disk. The size of each frame is 512 fi 512 black and white pixels. The number of bits in each frame, after compressed with JPEG <ref> [15] </ref>, is plotted in Fig. 2. At a 30 frames/second transmission rate, the video sequence needs an average 10.5 Mbits/s, and a peak 15.3 Mbits/s transmission bandwidth. The frame-transmission delays using a fixed bandwidth circuit are easy to calculate.
References-found: 15

