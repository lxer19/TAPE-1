URL: ftp://ftp.cs.caltech.edu/tr/cs-tr-97-03.ps.Z
Refering-URL: ftp://ftp.cs.caltech.edu/tr/INDEX.html
Root-URL: http://www.cs.caltech.edu
Email: ravir,cindy,barr@gg.caltech.edu  
Title: Dynamic Splines with Constraints for Animation based on the Euler-Lagrange differential equa tions for splines
Author: Ravi Ramamoorthi, Cindy Ball, Alan H. Barr 
Note: Development of new subdivision techniques  
Affiliation: California Institute of Technology  
Abstract: In this paper, we present a method for fast interpolation between animation keyframes that allows for automatic computer-generated "improvement" of the motion. Our technique is closely related to conventional animation techniques, and can be used easily in conjunction with them for fast improvements of "rough" animations or for interpolation to allow sparser keyframing. We apply our technique to construction of splines in quaternion space where we show 100-fold speed-ups over previous methods. We also discuss our experiences with animation of an articulated human-like figure. Features of the method include: 
Abstract-found: 1
Intro-found: 1
Reference: [barr et al 92] <author> A. H. Barr, B. Currin, S. Gabriel and J. F. Hughes, </author> <title> "Smooth interpolation of orientations with angular velocity constraints using quaternions", Computer Graphics SIGGRAPH '92 Proceedings [barzel & barr 88] "A Modeling System based on Dynamic Constraints," </title> <booktitle> Siggraph 1988. </booktitle>
Reference-contexts: Examples of these include space-time constraint methods, as in [witkin & kass 88], [cohen 92], [liu et al 94], inverse dynamics as in [barzel & barr], dynamic nurbs, such as [terzopoulos & qin 94], and interpolation in nonEuclidean spaces, as in [gabriel & kajiya 85], <ref> [barr et al 92] </ref>. <p> We do not need to wait until full convergence. * The method calculates function representations of non-Euclidean interpolation paths as in <ref> [barr et al 92] </ref>, but almost 100 times faster. * Soft auxiliary constraints (which in contrast to hard constraints need not be exactly satisfied but are more in the nature of strong hints to the optimizer) are used to substantially reduce unphysical motion like a foot going through the floor, knees <p> This compares favorably to the time of 4 minutes reported by [Barr et al 1992] on an identical architecture. The deviations of the quaternions from unit magnitude was less than 0.2% at all times. Analogous to <ref> [barr et al 92] </ref>, there are two soft constraints: the quaternion is kept close to unit magnitude, and the covariant acceleration magnitude is minimized. f () = fif 1 () + f 2 () (9) where f 1 () = (1 q q) 2 and f 2 () = (q 00 <p> This corrects the problems with discrete methods like [Witkin 88] and <ref> [Barr et al 92] </ref>. In those approaches, interpolation to create a continuous representation must be done after minimization of the objective and the fact that interpolation itself alters the objective is not taken into account.
Reference: [bartels et al 87] <author> R. Bartels, J. Beatty, and B. Barsky. </author> <title> An Introduction to Splines for use in Computer Graphics and Geometric Modeling. </title> <publisher> Morgan Kaufmann, </publisher> <address> Los Angeles, </address> <year> 1987. </year>
Reference-contexts: 1 Introduction Many investigators have examined the problem of creating animations from user-supplied keyframes. Spline-based techniques as in <ref> [bartels et al 87] </ref> have been used with much success.
Reference: [cohen 92] <author> Michael F. Cohen, </author> <title> "Interactive space-time control for animation," </title> <booktitle> Computer Graphics (SIGGRAPH '92 Proceedings) [farin 92] . G. </booktitle> <address> Farin, </address> <note> From Conics to Nurbs, IEEE CG&A, </note> <year> 1992. </year>
Reference-contexts: Examples of these include space-time constraint methods, as in [witkin & kass 88], <ref> [cohen 92] </ref>, [liu et al 94], inverse dynamics as in [barzel & barr], dynamic nurbs, such as [terzopoulos & qin 94], and interpolation in nonEuclidean spaces, as in [gabriel & kajiya 85], [barr et al 92]. <p> Animation techniques that combine physics and constraints usually use constrained optimization to pass through the keyframes. can use simpler numerical optimization methods, such as simple minimization. While our approach is similar to the spacetime constraints paradigm ([witkin & kass 88], <ref> [cohen 92] </ref>, [liu et al 94]), in that we seek to minimize an objective function, our approach is more closely allied to traditional keyframing and our primary application is to interpolation of keyframes. <p> Further, the Euler-Lagrange equations provide a good metric for adaptive refinement (or adaptive subdivision) of the solution which can be much more rapid and effective than addition of variable points globally. 4 COMPARISON TO PREVI OUS METHODS USE OF SPLINES The use of splines for optimization was introduced by <ref> [Cohen 92] </ref> where optimization was done over spline coefficients. This corrects the problems with discrete methods like [Witkin 88] and [Barr et al 92]. <p> More sophisticated basis functions like wavelets [Liu et al 94] have also been proposed. VARIABLE POINTS While our use of splines is not completely new, we do not optimize over spline coefficients as in <ref> [Cohen 92] </ref>, but over the value of variables describing the state of the animation at intermediate or variable points. Our method has the following advantages: * For the end user, the value of coefficients is not always an intuitive way of thinking about the optimization. <p> By contrast, we use variables more intuitive under several circumstances | actual animation states. Further, changes in their values correspond to clear changes in the animation path. * Hard equality constraints in the minimizer are not needed in our approach to enforce the desired values at key frames. In <ref> [cohen 92] </ref>, the key frame constraints are treated as similar to other constraints with the same complicated nu merical methods used to enforce them. USE OF UNCONSTRAINED MINIMIZATION We have shown that constrained optimization methods are not necessary. This has been done by the following devices: 1. <p> By contrast, our approach uses fewer variables and ensures that the constraints are always satisfied exactly (within double precision error). There is a further important disadvantage of constrained methods like [Welch & Witkin 92] or <ref> [Cohen 92] </ref>. Constraints may be violated by large amounts in the search for a minimum even if the final constraint violation is small or zero on convergence.
Reference: [gabriel & kajiya 85] <author> S. Gabriel and J. Kajiya, </author> <title> "Spline interpolation in curved space." </title> <booktitle> In state of the art in Image Synthesis, Siggraph 1985. </booktitle>
Reference-contexts: Examples of these include space-time constraint methods, as in [witkin & kass 88], [cohen 92], [liu et al 94], inverse dynamics as in [barzel & barr], dynamic nurbs, such as [terzopoulos & qin 94], and interpolation in nonEuclidean spaces, as in <ref> [gabriel & kajiya 85] </ref>, [barr et al 92].
Reference: [goldstein 1950] <author> H. Goldstein, </author> <title> Classical Mechanics, </title> <publisher> Addison Wesley, </publisher> <year> 1950. </year>
Reference: [hamilton 1853] <author> W.R. Hamilton. </author> <title> Lectures on Quaternions. Hodges and Smith, </title> <journal> Dublin, </journal> <volume> 1853. </volume>
Reference: [Liu et al 94] <author> Zicheng Liu, Steven J. Gortler, Michael F. Cohen, </author> <title> Optimized Computer-Generated Motions for Animation. Hierarchical Spacetime Control Siggraph Proceedings '94 </title>
Reference-contexts: Examples of these include space-time constraint methods, as in [witkin & kass 88], [cohen 92], <ref> [liu et al 94] </ref>, inverse dynamics as in [barzel & barr], dynamic nurbs, such as [terzopoulos & qin 94], and interpolation in nonEuclidean spaces, as in [gabriel & kajiya 85], [barr et al 92]. <p> Animation techniques that combine physics and constraints usually use constrained optimization to pass through the keyframes. can use simpler numerical optimization methods, such as simple minimization. While our approach is similar to the spacetime constraints paradigm ([witkin & kass 88], [cohen 92], <ref> [liu et al 94] </ref>), in that we seek to minimize an objective function, our approach is more closely allied to traditional keyframing and our primary application is to interpolation of keyframes. <p> Thus, a much larger number of variable points is needed to get the same accuracy as a continuous approach. This is one of the reasons for the speed up of our 8 method when applied to creation of quaternion spline paths. More sophisticated basis functions like wavelets <ref> [Liu et al 94] </ref> have also been proposed. VARIABLE POINTS While our use of splines is not completely new, we do not optimize over spline coefficients as in [Cohen 92], but over the value of variables describing the state of the animation at intermediate or variable points.
Reference: [nag 92] <institution> Numerical Algorithms Group Ltd. NAG fortran library document, </institution> <year> 1988.] </year>
Reference: [shoemake 85] <author> K.Shoemake. </author> <title> "Animating rotation with quaternion curves" Computer Graphics 1985. </title>
Reference: [terzopoulos & Qin 94] <author> D. Terzopoulos, H. Qin, </author> <title> "Dynamics Nurbs with Geometric Constraints for Interactive Sculpting" Transactions on Graphics v13 1994 Apr. </title>
Reference-contexts: Examples of these include space-time constraint methods, as in [witkin & kass 88], [cohen 92], [liu et al 94], inverse dynamics as in [barzel & barr], dynamic nurbs, such as <ref> [terzopoulos & qin 94] </ref>, and interpolation in nonEuclidean spaces, as in [gabriel & kajiya 85], [barr et al 92]. <p> There has been much work in related areas of research. For example, physics-based or optimization techniques have been used for modeling of curves and surfaces ([welch & witkin 92], <ref> [terzopoulos & qin 94] </ref>). We present several new techniques such as error metrics and subdivision methods based on the Euler-Lagrange differential equations, use of optimization over variable intermediate 3 frames instead of B-spline coefficients, and use of unconstrained minimization.
Reference: [witkin & kass 88] <author> Andrew Witkin and Michael Kass, </author> <title> "Spacetime Constraints", </title> <booktitle> Computer Graphics (SIGGRAPH '88 Proceedings) </booktitle>
Reference-contexts: Examples of these include space-time constraint methods, as in <ref> [witkin & kass 88] </ref>, [cohen 92], [liu et al 94], inverse dynamics as in [barzel & barr], dynamic nurbs, such as [terzopoulos & qin 94], and interpolation in nonEuclidean spaces, as in [gabriel & kajiya 85], [barr et al 92].
Reference: [welch & witkin 92] <author> William Welch and Andrew Witkin, </author> <title> "Variational Surface Modeling", </title> <booktitle> Computer Graphics (SIGGRAPH '92 Proceedings) </booktitle>
Reference-contexts: By including soft-constraints in our objective, we have shown that constrained optimization is not always needed. We believe our methods to show certain improvements over previous methods. For instance, <ref> [Welch & Witkin 92] </ref> used Lagrange multipliers or penalty functions to enforce linear constraints. Our keyframe constraints are indeed linear in the coefficients of the spline basis. However, the method in [Welch & Witkin 92] either increases the number of variables as more variables must be used for La-grange multipliers or <p> We believe our methods to show certain improvements over previous methods. For instance, <ref> [Welch & Witkin 92] </ref> used Lagrange multipliers or penalty functions to enforce linear constraints. Our keyframe constraints are indeed linear in the coefficients of the spline basis. However, the method in [Welch & Witkin 92] either increases the number of variables as more variables must be used for La-grange multipliers or allows for (possibly large) constraint violations through the use of a penalty function. <p> By contrast, our approach uses fewer variables and ensures that the constraints are always satisfied exactly (within double precision error). There is a further important disadvantage of constrained methods like <ref> [Welch & Witkin 92] </ref> or [Cohen 92]. Constraints may be violated by large amounts in the search for a minimum even if the final constraint violation is small or zero on convergence. <p> Our method forces the keyframe constraints to be met throughout the optimization process. USE OF SOFT CONSTRAINTS We have used soft rather than hard constraints (which must be met on convergence) for the following reasons: 1. In <ref> [Welch & Witkin 92] </ref>, there is a discussion of how a finite basis cannot satisfy the constraints completely. The authors of that paper used a least squares fit. However, their func-tionals were of a quadratic form, while we seek to minimize highly nonlinear nonquadratic objectives.
Reference: [zwillinger 89] <author> D. </author> <title> Zwillinger. Handbook of Differential Equations. </title> <publisher> Academic Press, </publisher> <address> San Diego, </address> <year> 1989. </year>
Reference-contexts: Euler-Lagrange equations. For an optimization problem stated in terms of extremizing an integral as in equation 1, it is possible to derive an alternative formulation in terms of differential equations. These differential equations are known as the Euler-Lagrange equations. See <ref> [Zwillinger 89] </ref>, for instance, for details. Appendix B gives the terms of the canonical Euler-Lagrange equation. After minimization is completed, the velocity at each fixed or variable point is known. Thus, we now have enough data to apply the Euler-Lagrange formulation to each segment.
Reference: [Liu & Cohen 95] <author> Zicheng Liu and Michael F. Co-hen. </author> <title> "Keyframe Motion Optimization By Relaxing Speed and Timing", </title> <booktitle> 6th Eurographics Workshop on Animation and Simulation. </booktitle>
Reference-contexts: While our approach is similar to the spacetime constraints paradigm ([witkin & kass 88], [cohen 92], [liu et al 94]), in that we seek to minimize an objective function, our approach is more closely allied to traditional keyframing and our primary application is to interpolation of keyframes. Unlike <ref> [Liu & Cohen 95] </ref>, we fix the keyframes both spatially and temporally as is more common in conventional animation techniques (except that we allow partial keyframes that fix only some degrees of freedom). In addition, we improve on the method presented in [Liu & Cohen 95] in that we optimize the <p> Unlike <ref> [Liu & Cohen 95] </ref>, we fix the keyframes both spatially and temporally as is more common in conventional animation techniques (except that we allow partial keyframes that fix only some degrees of freedom). In addition, we improve on the method presented in [Liu & Cohen 95] in that we optimize the intermediate path between keyframes instead of using a simple spline or hermite approximation. In our approach, specification of generalized co-ordinate velocities is not necessary since our optimization procedure requires only the position of keyframes.
References-found: 14

