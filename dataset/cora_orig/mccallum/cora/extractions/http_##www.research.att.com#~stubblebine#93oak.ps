URL: http://www.research.att.com/~stubblebine/93oak.ps
Refering-URL: http://www.research.att.com/~stubblebine/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Date: 41-53.  
Note: In Proc. 1993 IEEE Symposium on Research in Security and Privacy, IEEE Computer Society Press, Oakland, California, May 1993, pp.  
Abstract: We present a design method for message integrity protection. We illustrate the use of the method by designing large classes of message types whose integrity is provably preserved and by applying the method to the symmetric key option of the Privacy-enhanced Electronic Mail protocol to help discover and eliminate an integrity vulnerability. 
Abstract-found: 1
Intro-found: 1
Reference: [ANSI82] <author> ANSI X9.9-1982, </author> <title> American National Standard for Financial Institution Message Authentication , April 13, </title> <year> 1982. </year>
Reference-contexts: In applying the method to Privacy Enhanced Electronic Mail (PEM) [Linn89], not only properties of the redundancy function are determined, but also a potential vulnerability is indicated. This potential vulnerability surfaced when it was realized that the actual mechanism chosen in PEM, DES k 10 MAC <ref> [ANSI82] </ref>, was never intended to satisfy the properties that were determined from the application of the method. Further investigation led to the discovery of the attack scenario confirming the vulnerability. We now present the application of the method, whereas the attack scenario can be found in [SG93a].
Reference: [Linn89] <author> J. Linn, </author> <title> Privacy Enhancement for Internet Electronic Mail: Part I - Message Encipherment and Authentication Procedures, </title> <institution> Internet Working Group, RFC-1113, </institution> <month> August </month> <year> 1989. </year>
Reference-contexts: Applying the Method to Correct a Protocol Vulnerability We demonstrate how to apply the method to determine what properties of the redundancy function can be used to satisfy an integrity protection objective. In applying the method to Privacy Enhanced Electronic Mail (PEM) <ref> [Linn89] </ref>, not only properties of the redundancy function are determined, but also a potential vulnerability is indicated.
Reference: [OSF91] <author> Open Software Foundation, </author> <title> OSF, Distributed Computing Environment (DCE), Remote Procedure Call Mechanisms, Code Snapshot 3, Release 1.0, </title> <address> March 17, </address> <year> 1991. </year>
Reference-contexts: The threshold specified by the protocol integrity policy can be different for each message type since messages sent by a principal can have different levels of integrity protection (e.g., weak and strong integrity in DCE <ref> [OSF91] </ref>). Attackers are assumed to have physical access to the communication media. Thus, the message integrity condition can be rewritten to capture the notion that an attacker can create a recognizable message representation.
Reference: [SG92] <author> S.G. Stubblebine and V.D. </author> <title> Gligor,On Message Integrity in Cryptographic Protocols, </title> <booktitle> Proc. IEEE 1992 Research in Security and Privacy, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <address> Oakland, California, </address> <month> May </month> <year> 1992. </year> <note> Also extended version in University of Maryland, Technical Report CS-TR-2843, </note> <month> February </month> <year> 1992. </year>
Reference-contexts: 1. INTRODUCTION The integrity of messages in cryptographic protocols has been one of the longstanding assumptions made by most protocol analysis and design methods. Recently, Stubblebine and Gligor <ref> [SG92, 93a] </ref> showed that a significant number of cryptographic protocols used in practice contain subtle flaws that can expose communications to integrity attacks by active intruders. <p> DEFINITIONS AND MESSAGE INTEGRITY CONDITION The analysis of message integrity in cryptographic protocols requires the specification of the behavior of both the communicating principals and the attacker and the message structure and representation <ref> [SG92, 93b] </ref>. These principals, and the attacker, communicate by constructing and sending, and by receiving and recognizing, messages (i.e., protocol data units). <p> The redundancy functions are generally intended to capture the membership (M), order (O), and cardinality (C) of the blocks within a message. For this reason, these functions are generically called the MOC functions <ref> [SG92] </ref>. <p> These constraints differ with the type of message because different types of ENC ()/DEC () and MOC () functions are used for different types of messages and because these functions are used in different ways for different types of messages <ref> [SG92, SG93a] </ref>. Identifying the attribute constraints is necessary in message design because it provides the prima facie evidence that the attacker is prevented from successfully creating a recognizable bogus message. Identifying the attribute constraints placed by a protocol requires that the attributes of all message types be examined. <p> With CBC encryption, this makes both the first and subsequent plaintext blocks random. This property is important when For example, the ENC () function may XOR a random a server uses the same key on behalf of multiple clients <ref> [SG92] </ref>. Property Assumptions Protecting Against Choosing a Domain Representation to Match a Range Respresentation Both Unconstrained SA1 Constraints on Domain Attributes Unconstrained Secret-Domain Constrained Decrypted-Domain Constrained Constraints on Decrypted-Range Attributes MA3 and EA Both Unconstrained Constrained N/A (vulnerable) Constraints on Table 1. <p> However, if the decrypted-domain attribute is constrained (perhaps by encryption or by non-cryptographic constraints of protocol semantics that help preserve attribute membership <ref> [SG92] </ref>) such that the attacker can not create a domain representation that is legitimate, then the addition of properties such as MA3 and EA in entry 5 of Table 1 could prevent the attacker from verifying a domain representation that matches a range representation.
Reference: [SG93a] <author> S.G. Stubblebine and V.D. </author> <title> Gligor,Protecting the Integrity of Privacy-Enhanced Electronic Mail with DES-Based Authentication Codes, </title> <booktitle> PSRG Workshop on Network and Distributed System Security, </booktitle> <address> San Diego, California, </address> <month> February 11-12, </month> <year> 1993. </year>
Reference-contexts: Scope of the Method: The design method concerns the integrity protection of protocols as opposed to the design of individual message structures in isolation. This is important since messages of one type, although fully protected, can affect the integrity of other types <ref> [SG93a] </ref>. The designer can use the method to determine the properties and parameters of the ENC ()/DEC () and MOC () functions that satisfy the integrity policy. <p> These constraints differ with the type of message because different types of ENC ()/DEC () and MOC () functions are used for different types of messages and because these functions are used in different ways for different types of messages <ref> [SG92, SG93a] </ref>. Identifying the attribute constraints is necessary in message design because it provides the prima facie evidence that the attacker is prevented from successfully creating a recognizable bogus message. Identifying the attribute constraints placed by a protocol requires that the attributes of all message types be examined. <p> Further investigation led to the discovery of the attack scenario confirming the vulnerability. We now present the application of the method, whereas the attack scenario can be found in <ref> [SG93a] </ref>. PEM provides confidentiality, authentication, and message integrity services for electronic mail transfer. This version is vulnerable since known pairs from a message of type T2 , in type T1, Figure 3. <p> The design of DES-MAC was intended to require a secret key (i.e., constraints on the domain like that required in property MA1). Choices of actual redundancy functions and alternate message structures to correct this problem are given in <ref> [SG93a] </ref>. 7. CONCLUSIONS We presented a design method based on a formal model of integrity protection. The use of the method was illustrated by the design of a large class of message types whose integrity is provably preserved in face of active intruder attacks.
Reference: [SG93b] <author> S.G. Stubblebine and V.D. </author> <title> Gligor,A Model and Protocol Design Method for Integrity Protection, </title> <institution> University of Southern California, Information Sciences Institute, Research Report, RR-93-306, </institution> <year> 1993. </year>
Reference-contexts: To date, formal characterizations of message integrity for cryptographic protocols have not been available and, consequently, protocol design for integrity protection has been performed mostly on an ad-hoc basis. We present a design method for integrity protection in cryptographic protocols that is based on a formal model <ref> [SG93b] </ref>. The method is independent of the specific encryption system (e.g., symmetric or asymmetric cryptosystem) and checksum/digest functions used. <p> Communication errors are modeled by attacker actions. 3 clauses by S1 and S2, where the condition is if S1 and S2 then the Message Integrity Condition is satisfied. The sufficiency of the above condition for message integrity is demonstrated in <ref> [SG93b] </ref>. <p> The method does not attempt to capture information gained by actions of the principals other than sending and receiving messages (e.g., key leakage by untrusted principals through covert channels). 3. DESIGN METHOD The design method is based on a state-transition model <ref> [SG93b] </ref>. <p> and EA given SA1 also apply due to high-watermark properties. (4) Lifetime Assumptions By choosing the lifetime to be no greater than bounds d k , d d , and d r , we ensure that the specified message types and functions satisfy conditions S1 and S2 (shown formally in <ref> [SG93b] </ref>). The message integrity design must constrain the time period during which the attacker may analytically verify the recognition of bogus messages of that type.
References-found: 6

