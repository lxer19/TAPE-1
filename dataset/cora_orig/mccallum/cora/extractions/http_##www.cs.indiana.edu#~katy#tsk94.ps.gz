URL: http://www.cs.indiana.edu/~katy/tsk94.ps.gz
Refering-URL: http://www.cs.indiana.edu/~katy/katy_pap.html
Root-URL: http://www.cs.indiana.edu
Email: @cognition.iig.uni-freiburg.de  katy@informatik.th-leipzig.de  
Phone: 2  
Title: Task-Oriented Knowledge Acquisition and Reasoning for Design Support Systems  
Author: Dietmar Janetzko Katy Borner Oliver Jaschke and Gerhard Strube dietmar j oliver j strube P. O. 
Address: 79098 Freiburg, FRG  Box 66 04251 Leipzig, FRG  
Affiliation: 1 University of Freiburg Institute of Computer Science and Social Research  HTWK Leipzig Department of Informatics  
Abstract: We present a framework for task-driven knowledge acquisition in the development of design support systems. Different types of knowledge that enter the knowledge base of a design support system are defined and illustrated both from a formal and from a knowledge acquisition vantage point. Special emphasis is placed on the task-structure, which is used to guide both acquisition and application of knowledge. Starting with knowledge for planning steps in design and augmenting this with problem-solving knowledge that supports design, a formal integrated model of knowledge for design is constructed. Based on the notion of knowledge acquisition as an incremental process we give an account of possibilities for problem solving depending on the knowledge that is at the disposal of the system. Finally, we depict how different kinds of knowledge interact in a design support system. ? This research was supported by the German Ministry for Research and Technology (BMFT) within the joint project FABEL under contract no. 413-4001-01IW104. Project partners in FABEL are German National Research Center of Computer Science (GMD), Sankt Augustin, BSR Consulting GmbH, Munchen, Technical University of Dresden, HTWK Leipzig, University of Freiburg, and University of Karlsruhe. 
Abstract-found: 1
Intro-found: 1
Reference: [Aam90] <author> A. </author> <title> Aamodt. A computational model of knowledge-intensive problem-solving and learning. </title> <address> EKAW-90, Amsterdam, </address> <year> 1990. </year>
Reference: [And83] <author> J. R. Anderson. </author> <title> The architecture of cognition. </title> <address> Cambridge, MA: </address> <publisher> Harvard University Press, </publisher> <year> 1983. </year>
Reference: [Bor94a] <author> K. Borner. </author> <title> Structural similarity as guidance in case-based design. </title> <booktitle> In First European Workshop on Case-Based Reasoning (EWCBR-93), </booktitle> <publisher> LNAI, page in press. Springer Verlag, </publisher> <year> 1994. </year>
Reference: [Bor94b] <author> K. Borner. </author> <title> Towards formalizations in case-based reasoning for synthesis. </title> <booktitle> In accepted for the AAAI-94 Workshop on Case-Based Reasoning, </booktitle> <publisher> page in press, </publisher> <year> 1994. </year>
Reference-contexts: For any other specific common structure g of G p there exists a modification r s.t. r (M SCS p ) = g. Modifications are formalized by inverse substitutions, i.e., mappings from constants into variables. A detailed description can be found in (cf. <ref> [Bor94b] </ref>). Reasoning. These kinds of knowledge representation enable two-stage similarity assessment [GF91] and reasoning. We are able to combine computationally cheap, fast preselection by surface similarity assessment and the computationally expensive process of structural similarity assessment.
Reference: [BR90] <author> M. I. Bauer and B. Reiser. </author> <title> Incremental envisioning: The flexible use of multiple representations in complex problem solving. </title> <booktitle> In Proceedings of the 12th Conference of the Cognitive Science Society, </booktitle> <pages> pages 317-324, </pages> <year> 1990. </year>
Reference-contexts: Recently, this idea has attracted considerably attention both in cognitive science and in artificial intelligence under the heading of change of representation and problem solving as modelling (e.g. <ref> [BR90, Ind92, VdV93] </ref>). For example, preferring a causal view of the functioning of a car implies an assumption that this causal view leads to an adequate approximation of the functioning of the car, which allows for further problem solving, e.g., diagnosis. (cf. [VdV93]).
Reference: [BWvS + 87] <author> J. Breuker, B. Wielinga, M. van Someren, R. de Hoog, G. Schreiber, P. de Greef, B. Bredeweg, J Wielemaker, and P. Billaut. </author> <title> Model-driven knowledge acquisition: Interpretation models. </title> <type> Technical Report Esprit Projet 1098, </type> <institution> Deliverable task AI, Amsterdam, University of Amsterdam, Social Sciene Informatics, </institution> <year> 1987. </year>
Reference-contexts: Sometimes tasks are identified with goals or problem types [CJS92] or with a goal and a method how to achieve that goal <ref> [BWvS + 87] </ref>. Finally, tasks may be represented by an unstructured set, or by a task-structure, which organizes tasks and subtasks. Task structures may or may be not specified with respect to methods used to realize tasks or interactions between tasks.
Reference: [Cha83] <author> B. Chandrasekaran. </author> <title> Towards a taxonomy of problem solving types. </title> <journal> AI Magazine, </journal> <volume> 4 </volume> <pages> 9-17, </pages> <year> 1983. </year> <month> 29 </month>
Reference-contexts: Second, the notion of a task may have a general flavor with generic, i.e., reusable tasks reappearing allegedly across different domains <ref> [Cha83] </ref>, or they may be very domain specific.
Reference: [CJS92] <author> B. Chandrasekaran, T. R. Johnson, and J. W. Smith. </author> <title> Task-structure anal-ysis for modeling domain knowledge and problem solving for knowledge system construction. Paper presented on a Workshop on Problem-Solving Methods, </title> <publisher> Stanford, </publisher> <month> July 9-11, </month> <year> 1992. </year>
Reference-contexts: Third, tasks may be described on different levels of specification, i.e., by referring to the input and output of tasks [Goe89], the goal to be accomplished in tasks, or the method, strategy, or inference structure taken to realize the task. Sometimes tasks are identified with goals or problem types <ref> [CJS92] </ref> or with a goal and a method how to achieve that goal [BWvS + 87]. Finally, tasks may be represented by an unstructured set, or by a task-structure, which organizes tasks and subtasks.
Reference: [DK92] <author> E. A. Domeshek and J. L. Kolodner. </author> <title> A case-based design aid for architecture. </title> <booktitle> In Proc. Second International Conference on Artificial Intelligence in Design, </booktitle> <pages> pages 497-516. </pages> <publisher> Kluwer Academic Publishers, </publisher> <month> June </month> <year> 1992. </year>
Reference-contexts: Cases may, on the other side, be derived by using a task decomposition. The task decomposition, in turn, rests upon an analysis of the problems that occur in the domain [DPvC + 87]. Concerning the grainsize, in an application domain like architecture complete buildings have been taken as cases <ref> [Goe89, DK92, Hin92] </ref>. Again, a method like a task- decomposition may be employed to accomplish units which are better suited for problem solving.
Reference: [DPvC + 87] <author> C. G. Drury, B. Paramore, H. P. van Cott, S. M. Grey, and E. N. Corlett. </author> <title> Task analysis. </title> <editor> In Salvendy G., editor, </editor> <booktitle> Handbook of human factors, </booktitle> <pages> pages 370-401. </pages> <publisher> John Wiley & Sons, </publisher> <year> 1987. </year>
Reference-contexts: In a word, no particular method is applied. Cases may, on the other side, be derived by using a task decomposition. The task decomposition, in turn, rests upon an analysis of the problems that occur in the domain <ref> [DPvC + 87] </ref>. Concerning the grainsize, in an application domain like architecture complete buildings have been taken as cases [Goe89, DK92, Hin92]. Again, a method like a task- decomposition may be employed to accomplish units which are better suited for problem solving.
Reference: [Gen84] <author> M. R. Genesereth. </author> <title> The use of design descriptions in automated diagnosis. </title> <journal> Artificial Intelligence, </journal> <volume> 24 </volume> <pages> 411-436, </pages> <year> 1984. </year>
Reference-contexts: Fig. 8). 15 3.4 Integrated Models of Knowledge The most elaborated kind of knowledge to be acquired is knowledge encapsulated into domain models. Models may be distinguished according to the aspects they preserve. There is the widespread distinction between structural and behavioral models <ref> [Gen84] </ref>. An integrated circuit, for example, may be represented by focusing on the structure or on the functional behavior. The structural model encompasses the physical components and their interrelations. The behavioral model captures the stimuli and responses and their interrelations.
Reference: [GF91] <author> D. Gentner and K. D. Forbus. MAC/FAC: </author> <title> A model of similarity-based retrieval. </title> <booktitle> In Proceedings of the Cognitive Science Conference, </booktitle> <pages> pages 504-509, </pages> <year> 1991. </year>
Reference-contexts: Modifications are formalized by inverse substitutions, i.e., mappings from constants into variables. A detailed description can be found in (cf. [Bor94b]). Reasoning. These kinds of knowledge representation enable two-stage similarity assessment <ref> [GF91] </ref> and reasoning. We are able to combine computationally cheap, fast preselection by surface similarity assessment and the computationally expensive process of structural similarity assessment.
Reference: [Goe89] <author> A. K. Goel. </author> <title> Integration of case-based reasoning and model-based reasoning for adaptive design problem solving. </title> <type> PhD thesis, </type> <institution> Ohio State University, </institution> <year> 1989. </year>
Reference-contexts: Cases may, on the other side, be derived by using a task decomposition. The task decomposition, in turn, rests upon an analysis of the problems that occur in the domain [DPvC + 87]. Concerning the grainsize, in an application domain like architecture complete buildings have been taken as cases <ref> [Goe89, DK92, Hin92] </ref>. Again, a method like a task- decomposition may be employed to accomplish units which are better suited for problem solving. <p> Third, tasks may be described on different levels of specification, i.e., by referring to the input and output of tasks <ref> [Goe89] </ref>, the goal to be accomplished in tasks, or the method, strategy, or inference structure taken to realize the task. Sometimes tasks are identified with goals or problem types [CJS92] or with a goal and a method how to achieve that goal [BWvS + 87].
Reference: [GS88] <author> P. Goumain and J. Sharit. </author> <title> Human-computer interaction in architectural design. </title> <booktitle> In Handbook of human-computer interaction, </booktitle> <pages> pages 709-727. </pages> <publisher> Else-vier Science Publishers B.V. (North-Holland, </publisher> <year> 1988. </year>
Reference: [HF93] <author> K. Hua and B. Faltings. </author> <title> Exploring case-based building design CADRE. </title> <journal> AI EDAM, </journal> <volume> 7(2) </volume> <pages> 135-143, </pages> <year> 1993. </year>
Reference: [Hin92] <author> Th. R. Hinrichs. </author> <title> Problem solving in open worlds: A case study in design. </title> <publisher> Lawrence Erlbaum Associates, </publisher> <year> 1992. </year>
Reference-contexts: Cases may, on the other side, be derived by using a task decomposition. The task decomposition, in turn, rests upon an analysis of the problems that occur in the domain [DPvC + 87]. Concerning the grainsize, in an application domain like architecture complete buildings have been taken as cases <ref> [Goe89, DK92, Hin92] </ref>. Again, a method like a task- decomposition may be employed to accomplish units which are better suited for problem solving.
Reference: [Hol84] <author> K. J. Holyoak. </author> <title> Mental models in problem solving. </title> <editor> In J. R. Anderson and S. M. Kosslyn, editors, </editor> <booktitle> Tutorials in learning and memory, </booktitle> <pages> pages 193-218. </pages> <address> San Francisco: </address> <publisher> Freeman, </publisher> <year> 1984. </year>
Reference: [Hov93] <author> L. Hovestadt. </author> <title> A4 digital building extensive computer support for the design, </title> <booktitle> construction, and management of buildings. In CAAD Futures '93, Proceedings of the Fifth International Conference on Computer-Aided Architectural Design Futures, </booktitle> <pages> pages 405-422, </pages> <address> Pittsburgh, June 1993. </address> <publisher> North-Holland, Amsterdam. </publisher>
Reference-contexts: A considerable part of problem solving is figuring out dynamically which part of a situation or a case may be assigned to the role of the problem. To represent cases in an attribute-based way we use the A4-model of organizing data in a multidimensional dataspace <ref> [Hov93] </ref>. Each object is represented by its spatial dimensions (i.e., x, dx, y, dy, z, dz) and further attributes like the time, at which the object was created, aspect, (e.g., return-air, supply-air, electricity, construction) and morphology, (e.g., development, connection) etc.
Reference: [Ind92] <author> B. Indurkhya. </author> <title> Cognition and metaphor. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Dordrecht, Netherlands, </address> <year> 1992. </year>
Reference-contexts: Recently, this idea has attracted considerably attention both in cognitive science and in artificial intelligence under the heading of change of representation and problem solving as modelling (e.g. <ref> [BR90, Ind92, VdV93] </ref>). For example, preferring a causal view of the functioning of a car implies an assumption that this causal view leads to an adequate approximation of the functioning of the car, which allows for further problem solving, e.g., diagnosis. (cf. [VdV93]).
Reference: [JB93] <author> D. Janetzko and K. Borner. </author> <note> Tasks-methods-knowledge interdependencies in CBR-systems. FABEL-Report 09, </note> <institution> Gesellschaft fur Mathematik und Datenverarbeitung mbH (GMD), </institution> <year> 1993. </year> <month> 30 </month>
Reference-contexts: For example, rules are specified as procedural knowledge used to accomplish transitions between tasks. Thus, the choice of a particular grainsize for tasks influences the kind of rules that are candidates for knowledge acquisition <ref> [JB93] </ref>. 4.2 Incremental Knowledge Acquisition In what follows, we address the notion of knowledge acquisition as an incremental process.
Reference: [JBCH93] <author> D. Janetzko, K. Borner, C.-H. Coulon, and L. Hovestadt. </author> <title> Toward a task--oriented methodology in knowledge acquisition and system design in CBR. </title> <editor> In M.M. Richter, S. Wess, K.-D. Althoff, and F. Maurer, editors, </editor> <booktitle> First European Workshop on Case-Based Reasoning (EWCBR-93), Posters and Presentations, </booktitle> <volume> volume 2, </volume> <pages> pages 360-365, </pages> <month> 1-5 November </month> <year> 1993. </year>
Reference: [JJ94] <author> O. Jaschke and D. Janetzko. </author> <title> On verification in design. </title> <booktitle> In submitted to the First European Conference on Cognitive Science in Industry, </booktitle> <year> 1994. </year>
Reference-contexts: is attained, i.e., the network for supply air in a certain part of a building is actually realized. 13 3.3.1 Formalization In general, there are certain requirements for accomplishing a task t, i.e., relations between a realization of t, denoted by t fl , and realizations of some other tasks <ref> [JJ94] </ref>. Let t 1 ; . . . ; t n be the tasks relevant for the verification, and let t fl 1 ; . . . ; t fl n denote some realization of them. <p> Thus, we can define the structure of descrip tive interrelations by the pair (T; (P T i ) I ) In the domain of building design the following predicates proved to be very useful <ref> [JJ94] </ref>: (i) Let t 2 P D denote that the objects realizing t are disjoint (ii) Let (t 1 ; t) 2 P C denote that the realization of t 1 covers the realization of task t (iii) Let (t 1 ; t) 2 P N denote that the objects realizing <p> They state what a task looks like that is embedded into a network of other tasks and that is realized well according to the judgement of an expert. Predicates (P T i ) I are the foundation of checking design solutions in our system <ref> [JJ94] </ref>. Given a particular stage in design problem solving descriptive interrelations (P T i ) I between tasks may be employed for tracking errors in design. Due to the interrelations between tasks an error in a given task spreads out and affects other tasks, too. <p> Parts of this work have already been implemented along the rationale presented <ref> [JJ94] </ref>. As an outlook on future work we investigated and exemplified interactions of different kinds of knowledge by generating and using variants of inference structures of the system to be built. In sum, task-oriented knowledge acquisition has turned out to be a viable approach.
Reference: [JS91] <author> D. Janetzko and G. Strube. </author> <title> Case-based reasoning and model-based knowledge acquisition. </title> <journal> In Contemporary knowledge engineering and cognition, </journal> <pages> pages 99-114. </pages> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1991. </year>
Reference-contexts: Such a system comprises both cases and rules for tackling a task. As a consequence, there has to be a device to control whether cases, rules, or both may be applied. Different selection criteria have been set up to cope with this problem <ref> [JS91] </ref>. Which of these is chosen depends very much on the objective of using cases or rules (cf. Fig. 11). While there are many possible approaches to this problem there is, however, no selection criterion that can be applied successfully across all possible applications.
Reference: [Kol93] <author> J. L. Kolodner. </author> <title> Case-based reasoning. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference-contexts: introductions into Cbr may be found in <ref> [RS89, Kol93] </ref>. Until now, Cbr has mainly been applied to analytic tasks. Here properties or symptoms and corresponding concepts or diagnoses are quite ready at hand. The former are represented by the problem, the latter constitutes the solution of a case. <p> Cases may be represented in an attribute-based or in a structural way. The first representation scheme provides the object attribute values with respect to a given finite number of attributes as usual in Cbr (cf. <ref> [RS89, Kol93] </ref>). The structural representation gives the relations between objects of cases. While the former permits fast preselection of candidate cases out of large case-bases, the latter is suitable to guide adaptation. 3.2.1 Formalization Knowledge representation. All these considerations lead to the following definitions of cases and similarity relations.
Reference: [KS91] <author> A. E. Karl and J. Smith. </author> <title> Toward a general theory of expertise: Prospects and limits. </title> <publisher> Cambridge: Cambridge University Press, </publisher> <year> 1991. </year>
Reference: [NC91] <author> D. Navin Chandra. </author> <title> Exploration and innovation in design: Towards a computational model. </title> <publisher> Springer, </publisher> <year> 1991. </year>
Reference: [New82] <author> A. Newell. </author> <title> The knowledge level. </title> <journal> Artificial Intelligence, </journal> <volume> 18 </volume> <pages> 87-127, </pages> <year> 1982. </year>
Reference: [NS72] <author> A. L. Newell and H. A. Simon. </author> <title> Human problem solving. </title> <address> Englewood Cliffs, NJ: </address> <publisher> Prentice-Hall, </publisher> <year> 1972. </year>
Reference: [RS89] <author> Ch. K. Riesbeck and R. C. Schank. </author> <title> Inside Case-Based Reasoning. </title> <publisher> Lawrence Erlbaum Associates, </publisher> <address> Hillsdale, </address> <year> 1989. </year>
Reference-contexts: introductions into Cbr may be found in <ref> [RS89, Kol93] </ref>. Until now, Cbr has mainly been applied to analytic tasks. Here properties or symptoms and corresponding concepts or diagnoses are quite ready at hand. The former are represented by the problem, the latter constitutes the solution of a case. <p> Cases may be represented in an attribute-based or in a structural way. The first representation scheme provides the object attribute values with respect to a given finite number of attributes as usual in Cbr (cf. <ref> [RS89, Kol93] </ref>). The structural representation gives the relations between objects of cases. While the former permits fast preselection of candidate cases out of large case-bases, the latter is suitable to guide adaptation. 3.2.1 Formalization Knowledge representation. All these considerations lead to the following definitions of cases and similarity relations.
Reference: [SJKss] <author> Gerhard Strube, Dietmar Janetzko, and Markus Knauff. </author> <title> Cooperative construction of expert knowledge: The case of knowledge engineering. In Interactive Minds. </title> <publisher> Cambridge: Cambridge University Press, in press. </publisher>
Reference: [Ste83] <author> L. Steels. </author> <title> Components of expertise. </title> <journal> AI Magazine, </journal> <volume> 11 </volume> <pages> 28-49, </pages> <year> 1983. </year>
Reference-contexts: Enlarging a set of task to a full-blown task-structure is accomplished in incremental knowledge acquisition. There are various approaches to identifying and elicitating tasks. For instance, orientating at a physical decomposition, analysing requirements, using a particular problem solving method the application of which enforces a particular task decomposition <ref> [Ste83] </ref> or adopting task decomposition schemes traditionally used in the domain are alternative heuristics used to identify tasks. Various heuristics to task decomposition may or may not yield the same task-structure.
Reference: [Ste93] <author> L. Steels. </author> <title> The componential framework and its use in reusability. </title> <editor> In J.-M. David, J.-P. Krivine, and R. Simmons, editors, </editor> <booktitle> Second Generation Expert Systems, </booktitle> <pages> pages 273-298. </pages> <publisher> Springer, </publisher> <year> 1993. </year>
Reference-contexts: Third, interrelations between knowledge configuration and knowledge application [WVdVSA93] in problem solving given a particular state in knowledge acquisition are outlined and discussed. 4.1 Task-driven Knowledge Acquisition Broadly speaking, a task is an objective or goal relating to thing or states to be attained. <ref> [Ste93] </ref>. Issues start to get tricky once this concept is used in a more specific sense. In general, there are various usages of the notion of a task.
Reference: [Str92] <author> Gerhard Strube. </author> <title> The role of cognitive science in knowledge engineering. </title> <journal> In Contemporary knowledge engineering and cognition, </journal> <pages> pages 161-174. </pages> <address> Berlin: </address> <booktitle> Springer (Lecture Notes in AI, </booktitle> <volume> 622), </volume> <year> 1992. </year>
Reference: [Van89] <author> K. VanLehn. </author> <title> Problem solving and cognitive skill acquisition. </title> <editor> In M. I. Pos-ner, editor, </editor> <booktitle> Foundations of Cognitive Science, </booktitle> <pages> pages 527-579. </pages> <address> Cambridge MA: </address> <publisher> MIT Press, </publisher> <year> 1989. </year>
Reference: [VdV93] <author> W. Van de Velde. </author> <title> Issues in knowledge level modelling. </title> <editor> In J.-M. David, J.- P. Krivine, and R. Simmons, editors, </editor> <booktitle> Second Generation Expert Systems, </booktitle> <pages> pages 211-231. </pages> <publisher> Springer, </publisher> <year> 1993. </year> <month> 31 </month>
Reference-contexts: Recently, this idea has attracted considerably attention both in cognitive science and in artificial intelligence under the heading of change of representation and problem solving as modelling (e.g. <ref> [BR90, Ind92, VdV93] </ref>). For example, preferring a causal view of the functioning of a car implies an assumption that this causal view leads to an adequate approximation of the functioning of the car, which allows for further problem solving, e.g., diagnosis. (cf. [VdV93]). <p> For example, preferring a causal view of the functioning of a car implies an assumption that this causal view leads to an adequate approximation of the functioning of the car, which allows for further problem solving, e.g., diagnosis. (cf. <ref> [VdV93] </ref>). Hence, the type of aspects described by a model has to allow for fulfilling the function, which the model is intended to support. The model we develop in knowledge acquisition is a structural model of a real-world phenomenon like a building.
Reference: [Vo94] <author> A. Vo. </author> <title> Similarity concepts and retrieval methods. </title> <type> FABEL-Report 13, </type> <institution> Gesellschaft fur Mathematik und Datenverarbeitung mbH, Forschungs-bereich Kunstliche Intelligenz, </institution> <year> 1994. </year>
Reference: [WVdVSA93] <author> B. Wielinga, W. Van de Velde, G. Schreiber, and H. Akkermans. </author> <title> Towards a unification of knowledge modelling approaches. </title> <editor> In J.-M. David, J.-P. Kriv-ine, and R. Simmons, editors, </editor> <booktitle> Second Generation Expert Systems, </booktitle> <pages> pages 299-335. </pages> <publisher> Springer, </publisher> <year> 1993. </year>
Reference-contexts: First, the focus is on the starting point of task-driven knowledge acquisition, i.e., the concept of a task. Second, the notion of knowledge acquisition as an incremental process is addressed. Third, interrelations between knowledge configuration and knowledge application <ref> [WVdVSA93] </ref> in problem solving given a particular state in knowledge acquisition are outlined and discussed. 4.1 Task-driven Knowledge Acquisition Broadly speaking, a task is an objective or goal relating to thing or states to be attained. [Ste93].
Reference: [WVL + 92] <author> J. Walther, A. Vo, M. Linster, Th. Hemmann, H. Vo, and W. Karbach. MoMo. </author> <type> Technical report, </type> <institution> Gesellschaft fur Mathematik und Datenverar-beitung (GMD), </institution> <year> 1992. </year> <month> 32 </month>
Reference-contexts: An instance of design of supply nets is taken to exemplify the interactions between tasks, cases, and rules. This example is meant to show how full support of a design support system looks like. 5.1 Interactions and System Design We use MoMo <ref> [WVL + 92] </ref> a language designed to specify and operationalize KADS conceptual models. In MoMo, the control flow is defined on the system layer using system-tasks. The data flow is specified on the inference layer in terms of places, actions, and types.
References-found: 38

