URL: ftp://ftp.cs.unc.edu/pub/users/sc/COMP122-F96/hw8.PS.Z
Refering-URL: http://www.cs.unc.edu/~sc/teaching/COMP122-F1996/homework.html
Root-URL: http://www.cs.unc.edu
Title: COMP 122: Algorithms and Analysis Problem Set 2. Trees with union-by-rank. 3. Trees with path
Note: Handed out:  Due back:  Practice problems P-1 Exercise 22.3-1 (page 450). P-2 Exercise 22.4-3 (page 458). P-3 Exercise 31.2-3 (page 744). P-4 Problem 4-4 (page  Problems to hand in  
Date: Fall 1996  24 Oct 1996  31 Oct 1996  73).  
Pubnum: 8  
Abstract: P-5 The Tower of Hanoi problem is stated as follows. We are given three pegs, with a tower of n disks stacked in decreasing size on one peg. The objective is to transfer the entire tower to another peg, moving only one disk at a time and never moving a large disk onto a smaller one. How many moves are necessary and sufficient to perform the task? Give an algorithm that performs exactly this number of moves. H-1 You are to compare the efficiencies of five implementations of the disjoint set data structure. Your program may be written in Java or C++. We supply you with a class/interface definition and a test program, as described below. You must implement the following variants of disjoint sets, named DSet1 through DSet5. The test program finds connected components of a graph using the algorithm on page 441 of CLR. Do not modify the test program except as mentioned below! At the end of the program, it calls the PrintStats() routine of the DSet class. Your implementation of this routine should print out the number of each kind of operation and the total cost, measured as follows: a Make-Set or Union operation costs one unit each, while a Find operation costs as much as the length of the find path. You should run the test program for several values of input parameters, and then present the data you obtain in some way that clearly shows the growth rate of the cost function. If you choose to plot the data, do not use 3-D plotting. 
Abstract-found: 1
Intro-found: 1
References-found: 0

