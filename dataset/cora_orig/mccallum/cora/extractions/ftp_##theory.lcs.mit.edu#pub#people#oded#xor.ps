URL: ftp://theory.lcs.mit.edu/pub/people/oded/xor.ps
Refering-URL: http://theory.lcs.mit.edu/~oded/complexity.html
Root-URL: 
Title: Three XOR-Lemmas An Exposition  
Author: Oded Goldreich 
Date: July 1991 revised November 27, 1995  
Note: First version  
Address: Rehovot, Israel  
Affiliation: Department of Computer Science and Applied Mathematics Weizmann Institute of Science,  
Abstract-found: 0
Intro-found: 0
Reference: [1] <author> W. Alexi, B. Chor, O. Goldreich and C.P. Schnorr, </author> <title> "RSA and Rabin Functions: Certain Parts Are As Hard As the Whole", </title> <booktitle> FOCS (1984) and SIAM Journ. on Computing, </booktitle> <volume> Vol. 17, </volume> <year> 1988, </year> <pages> pp. 194-209. </pages>
Reference-contexts: The new proof, due to Charlie Rackoff, has two main advantages over the original one: it is simpler to explain and it provides better security (i.e., a more efficient reduction of inverting f to predicting the inner-product). The new proof was inspired by the proof in <ref> [1] </ref>. 3.1 Introduction The following text has been reproduced from [8]. One-way functions are fundamental to many aspects of theory of computation. Loosely speaking, one-way are those functions which are easy to evaluate but hard to invert.
Reference: [2] <author> N. Alon, O. Goldreich, J. Hastad and R. Peralta, </author> <title> "Simple Construction of Almost k-wise Indepedent Random Variables", Random Structures and Algorithms, </title> <journal> Vol. </journal> <volume> 3, No. 3, </volume> <year> 1992. </year>
Reference-contexts: Several researchers have noticed that the factor in the bound can be improved to p 2 n . We provide a four line proof of this fact. We also explain the reason for the popularity of the worse bound. The proof presented here has appeared as an appendix in <ref> [2] </ref>. 1.1 Introduction Let be a an arbitrary probability distribution over f0; 1g n and let denote the uniform distribution over f0; 1g n (i.e., (x) = 2 n for every x 2 f0; 1g n ). Let x = x 1 x n and N = 2 n .
Reference: [3] <author> Babai, L., N. Nisan, and M. Szegedy, </author> <title> "Multiparty protocols and logspace-hard pseudorandom sequences", </title> <booktitle> 21st STOC, </booktitle> <year> 1989, </year> <pages> pp. 1-11. </pages>
Reference-contexts: An alternative construction is immediate from the techniques presented by Nisan in [13] (hint: use a constant number of hash functions). A third alternative construction was suggested by Noam Nisan (private communication) based on the ideas in <ref> [3] </ref>. The tests (or predictors) we consider are non-uniform bounded-space machines with one-way access to the input (i.e., the string they consider). Hence, these machines can be represented by finite automata. <p> Claim 1: Let A be an automaton with q states, and x; y be uniformly and independently selected in f0; 1g n . Then Pr x;y (A (x; y) = b (x; y)) &lt; 2 r 2 n proof (adapted from <ref> [3] </ref>): By Lindsey Lemma (see [6] , p. 88), j x2X;y2Y jXj jY j 1 j 2 n Consider a partition of the set of all possible x's according to the state in which the automaton is after reading x (i.e. the first half of its input), resulting in sets X
Reference: [4] <author> Blum, M., and Micali, S., </author> <title> "How to Generate Cryptographically Strong Sequences of Pseudo-Random Bits", </title> <booktitle> FOCS (1982); SIAM Journ. on Computing, </booktitle> <volume> Vol. 13, </volume> <year> 1984, </year> <pages> pp. 850-864. </pages>
Reference: [5] <author> B. Chor, J. Friedmann, O. Goldreich, J. Hastad, S. Rudich and R. Smolansky, </author> <title> "The Bit Extraction Problem or t-Resilient Functions", </title> <booktitle> Proc. of the 26th IEEE Symp. on Foundation Of Computer Science (FOCS), </booktitle> <year> 1985, </year> <pages> pp. 396-407. </pages>
Reference-contexts: Vazirani [16] 1 , states that stat () N maxbias (). The proof is based on viewing distributions as elements in an N -dimensional 1 The special case where the maxbias is zero appears in Chor et. al. <ref> [5] </ref> 3 vector space and observing that the two measures considered by the lemma are merely two norms taken with respect to two different orthogonal bases. Hence, the XOR-Lemma follows from a (more general and quite straightforward) technical lemma which relates norms taken with respect to different orthonormal bases.
Reference: [6] <author> Erdos, P., and J. Spenser, </author> <title> Probabilistic Methods in Combinatorics, </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1974. </year>
Reference-contexts: Claim 1: Let A be an automaton with q states, and x; y be uniformly and independently selected in f0; 1g n . Then Pr x;y (A (x; y) = b (x; y)) &lt; 2 r 2 n proof (adapted from [3]): By Lindsey Lemma (see <ref> [6] </ref> , p. 88), j x2X;y2Y jXj jY j 1 j 2 n Consider a partition of the set of all possible x's according to the state in which the automaton is after reading x (i.e. the first half of its input), resulting in sets X 1 ; X 2 ;
Reference: [7] <author> Goldreich, O., S. Goldwasser, and S. Micali, </author> <title> "How to Construct Random Functions", </title> <journal> Journ. of ACM, </journal> <volume> Vol. 33, No. 4, </volume> <year> 1986, </year> <pages> pp. 792-807. </pages>
Reference-contexts: We say that g 1 has expansion factor c 1 and security constant e 1 . 2.3.2 Construction for any expansion constant To achieve greater expansion we apply the generator again on small blocks of its output. This idea is taken from <ref> [7] </ref>, but its usage in our context is restricted since in lower level the generator will be applied to shorter strings (and not to strings of the same length as done in [7]). <p> This idea is taken from <ref> [7] </ref>, but its usage in our context is restricted since in lower level the generator will be applied to shorter strings (and not to strings of the same length as done in [7]). The fact that in lower levels the generator is applied to shorter strings plays a key role in the proof that the resulting generator is indeed pseudorandom with respect to appropriate space-bounded machines.
Reference: [8] <author> Goldreich O., and L.A. Levin, </author> <title> "Hard-core Predicates for any One-Way Function", </title> <booktitle> 21th STOC, </booktitle> <pages> pp. 25-32, </pages> <year> 1989. </year>
Reference-contexts: A different proof has appeared in Goldreich and Levin <ref> [8] </ref>. The interesting direction is, of course, the assertion that if there exists a test of the first type with a non-negligible distinguishing gap then there exists a test of the second type with a non-negligible advantage 2 . This assertion is hereafter referred to as the computational xor-lemma. <p> This assertion is hereafter referred to as the computational xor-lemma. The purpose of this chapter is to present a clear proof of the computational xor-lemma and to point out its applicability to other resource bounded machines. Our presentation follows the proof presented in <ref> [8] </ref>, where all obvious details are omitted. Hence, the only advantage of our presentation is in its redundancy. 2.1.1 The Computational XOR-Proposition To prove the computational xor-lemma, we present a particular algorithm, denoted G, which (given f (r)) tries to predict a specified xor of the bits of g (r). <p> Remarks * As motivation to the Computational XOR-Lemma, we point out that it has been used in numerous works (e.g., Vazirani and Vazirani [18], Goldreich and Levin <ref> [8] </ref>). Another application of the Computational XOR-Lemma is presented in Section 3. In a typical application, the pseudorandomness of a short string is proven by showing that every xor of its bits is unpredictable (and using the Computational XOR-Lemma to argue that this suffices). <p> A machine predicting this exclusive-or can be transformed into a machine predicting the inner product <ref> [8] </ref>. * Using the computational XOR-Lemma to argue that the bits resulting from the various inner-products are indistinguishable from random by space bounded machines. <p> Then, there exists an automaton A with q 2 2m states satisfying Pr x;y (A (x; y) = b (x; y)) p where the probability is taken over all random choices of x; y 2 f0; 1g n . proof (adapted from <ref> [8] </ref>): Following is a construction of a randomized automaton A (randomization can be eliminated via non-uniformity). On input x; y, the predictor A produces a random string r 2 f0; 1g 2jyj satisfying y i = P j2S r i+j1 mod 2, for every i n. <p> More precisely, it has been proved that if f cannot be efficiently inverted then given f (x) and r it is infeasible to predict the inner-product mod 2 of x and r better than obvious. We present an alternative proof to the original proof as appeared in <ref> [8] </ref>. The new proof, due to Charlie Rackoff, has two main advantages over the original one: it is simpler to explain and it provides better security (i.e., a more efficient reduction of inverting f to predicting the inner-product). <p> The new proof was inspired by the proof in [1]. 3.1 Introduction The following text has been reproduced from <ref> [8] </ref>. One-way functions are fundamental to many aspects of theory of computation. Loosely speaking, one-way are those functions which are easy to evaluate but hard to invert.
Reference: [9] <author> Goldwasser, S., and S. Micali, </author> <title> "Probabilistic Encryption", </title> <journal> STOC (1982); JCSS, </journal> <volume> Vol. 28, No. 2, </volume> <year> 1984, </year> <pages> pp. 270-299. </pages>
Reference: [10] <author> B.S. Kaliski, Jr., </author> <title> "Elliptic Curves and Cryptography: A Pseudorandom Bit Generator and Other Tools", </title> <type> Ph.D. Thesis, LCS, </type> <institution> MIT, </institution> <year> 1988. </year>
Reference: [11] <author> L.A. Levin, </author> <title> "One-Way Function and Pseudorandom Generators", </title> <journal> Combinatorica, </journal> <volume> Vol. 7, No. 4, </volume> <year> 1987, </year> <pages> pp. 357-363. </pages> <note> A preliminary version in STOC-85. </note>
Reference: [12] <author> J. Naor and M. Naor, </author> <title> "Small-bias Probability Spaces: Efficient Constructions and Applications", </title> <booktitle> 22nd STOC, </booktitle> <year> 1990, </year> <pages> pp. 213-223. </pages>
Reference-contexts: It seems that the previously inferior bound was due to a less careful way of using the same underlying ideas. As motivation to the XOR-Lemma, we point out that it has been used in numerous works (e.g., Vazirani [16], Naor and Naor <ref> [12] </ref>).
Reference: [13] <author> N. Nisan, </author> <title> "Pseudorandom Generators for Space-Bounded Computations", </title> <booktitle> 22nd STOC, </booktitle> <year> 1990, </year> <pages> pp. 204-212. </pages>
Reference-contexts: Namely, the generator on input a random string of length n outputs a pseudorandom string of length cn withstanding tests of space en (e &gt; 0 is a constant depending on the constant c &gt; 1). An alternative construction is immediate from the techniques presented by Nisan in <ref> [13] </ref> (hint: use a constant number of hash functions). A third alternative construction was suggested by Noam Nisan (private communication) based on the ideas in [3]. The tests (or predictors) we consider are non-uniform bounded-space machines with one-way access to the input (i.e., the string they consider).
Reference: [14] <author> M.O. Rabin, </author> <title> "Digitalized Signatures and Public Key Functions as Intractable as Fac--toring", </title> <address> MIT/LCS/TR-212, </address> <year> 1979. </year>
Reference: [15] <author> R. Rivest, A. Shamir, and L. Adleman, </author> <title> "A Method for Obtaining Digital Signatures and Public Key Cryptosystems", </title> <journal> Comm. ACM, </journal> <volume> Vol. 21, </volume> <month> Feb. </month> <year> 1978, </year> <pages> pp 120-126 </pages>
Reference: [16] <author> U.V. Vazirani, </author> <title> "Randomness, Adversaries and Computation", </title> <type> Ph.D. Thesis, </type> <institution> EECS, UC Berkeley, </institution> <year> 1986. </year>
Reference-contexts: Vazirani <ref> [16] </ref> 1 , states that stat () N maxbias (). <p> It turns out that stat () p N maxbias (). It seems that the previously inferior bound was due to a less careful way of using the same underlying ideas. As motivation to the XOR-Lemma, we point out that it has been used in numerous works (e.g., Vazirani <ref> [16] </ref>, Naor and Naor [12]).
Reference: [17] <author> U.V. Vazirani, </author> <title> "Efficiency Considerations in Using Semi-random Sources", </title> <booktitle> Proc. 19th ACM Symp. on Theory of Computing, </booktitle> <year> 1987, </year> <pages> pp. 160-168. </pages>
Reference: [18] <author> U.V. Vazirani, and V.V. Vazirani, </author> <title> "Efficient and Secure Pseudo-Random Number Generation", </title> <booktitle> Proc. 25th IEEE Symp. on Foundation of Computer Science, </booktitle> <year> 1984, </year> <pages> pp. 458-463. </pages>
Reference-contexts: Hence, tests of the second type try to predict the xor of bits in g (r) which are in specified bit locations. Vazirani and Vazirani <ref> [18] </ref> proved that if the tests are restricted to run in probabilistic polynomial-time and the length of g (r) is logarithmic in the length of f (r) then the two types of tests are equivalent in the following sense: (for every polynomial-time computable functions f and g) there exists a test <p> Remarks * As motivation to the Computational XOR-Lemma, we point out that it has been used in numerous works (e.g., Vazirani and Vazirani <ref> [18] </ref>, Goldreich and Levin [8]). Another application of the Computational XOR-Lemma is presented in Section 3. In a typical application, the pseudorandomness of a short string is proven by showing that every xor of its bits is unpredictable (and using the Computational XOR-Lemma to argue that this suffices).
Reference: [19] <author> Yao, </author> <title> A.C., "Theory and Applications of Trapdoor Functions", </title> <booktitle> Proc. of the 23rd IEEE Symp. on Foundation of Computer Science, </booktitle> <year> 1982, </year> <pages> pp. 80-91. 23 </pages>
References-found: 19

