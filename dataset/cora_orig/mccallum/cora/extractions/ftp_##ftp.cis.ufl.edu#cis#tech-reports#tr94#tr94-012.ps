URL: ftp://ftp.cis.ufl.edu/cis/tech-reports/tr94/tr94-012.ps
Refering-URL: http://www.cis.ufl.edu/tech-reports/tech-reports/tr94-abstracts.html
Root-URL: http://www.cis.ufl.edu
Title: A Fast Algorithm To Test Planar Topological Routability  
Author: Andrew Lim Sartaj Sahni Venkat Thanvantri 
Keyword: and Phrases single layer topological routing  
Address: Park Drive, Singapore 0511, Republic of Singapore.  Gainesville, FL 32611, U.S.A.  Gainesville, FL 32611, U.S.A.  
Affiliation: Information Technology Institute, National Computer Board, 71 Science  Department of Computer and Information Sciences, University of Florida,  Department of Computer and Information Sciences, University of Florida,  
Note: This research was supported in part by the National Science Foundation under the grant MIP 91-03379  
Date: 94-012  
Pubnum: Technical Report  
Abstract: We develop a simple linear time algorithm to determine if a collection of two pin nets can be routed, topologically, in a plane (i.e. single layer). Experiments indicate that this algorithm is faster than the linear time algorithm of Marek-Sadowska and Tarng[1]. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Marek-Sadowska and T. Tarng, </author> <title> "Single-Layer Routing for VLSI: Analysis and Algorithms," </title> <journal> IEEE transactions on Computer-Aided Design, </journal> <volume> vol. CAD-2, no. 4, </volume> <year> 1983. </year>
Reference-contexts: In Figure 1 (a), the broken lines indicate wire paths. The routing instance (RI) of TPR problem for RIs in which all modules lie on the boundary of the routing region (or more precisely all pins are on the boundary of the region) was studied in <ref> [1, 2, 8] </ref>. A simple linear time algorithm for this version of the TPR problem was developed in these papers For the case in which none of the modules are on the boundary, Pinter [8] has suggested using the linear time planarity testing algorithm of Hopcroft and Tarjan [12]. <p> His algorithm is quite complex. Marek-Sadowska and Tarng <ref> [1] </ref> have considered the TPR problem and several variants which include flippable modules and multiterminal nets. They develop a linear time algorithm for TPR which is based on module merging. <p> In this paper, we develop 1 t t t t t t t t t t (b) Augmented RI eedd c b f ggaa B (a) RI 2 4 4 2 another linear time algorithm for the general TPR problem that is almost as simple as the one of <ref> [1, 2, 8] </ref> for the restricted TPR problem. <p> Experimental results indicate that our algorithm is considerably faster than the TPR algorithm of <ref> [1] </ref> particularly if the routing instance is not planar routable. 2 Preliminaries To simplify matters, we shall assume that TPR RIs that have modules on the boundary (Figure 2 (a)) have been augmented by a set of nets that are required to be routed on the boundary and that this routing <p> We now keep a status for a module as well as for a pin. A module's status reflects whether or not it is in stack A and a pin's status reflects whether or not it is in stack B. The algorithm of <ref> [1] </ref> is a two step algorithm: 12 Step 1:Merge modules together to obtain an equivalent routing problem in which all pins are on the periphery of a routing region. Step 2:Determine the feasibility of the equivalent problem using a single stack scheme. <p> Each module was represented as a singly linked circular list of pins. With this representation, modules can be merged efficiently. By contrast, for the algorithm of Figure 8, modules were represented using doubly linked circular lists. 5 Experimental Results We implemented our algorithm and that of <ref> [1] </ref> in C and obtained execution times using both circuits that are routable and those that are not. The routable circuits used are highly structured ones as shown in Figures 13 and 14 as well as randomly generated ones. <p> The times are in milliseconds and the programs were run on a SUN 4 workstation. on tree-like circuits, the algorithm of <ref> [1] </ref> took 65% more time than ours, on average; on six-way circuits, it took approximately 40% more time; and on random circuits, it took approximately 37% more time. Our algorithm has a distinct advantage over that of [1] when working with nonroutable circuits. The algorithm of [1] must complete its step <p> were run on a SUN 4 workstation. on tree-like circuits, the algorithm of <ref> [1] </ref> took 65% more time than ours, on average; on six-way circuits, it took approximately 40% more time; and on random circuits, it took approximately 37% more time. Our algorithm has a distinct advantage over that of [1] when working with nonroutable circuits. The algorithm of [1] must complete its step 1 before it can detect infeasibility, whereas our algorithm can detect infeasibility at any stage. Hence, it is possible for our algorithm to take much less time than that of [1] when working on such circuits. <p> circuits, the algorithm of <ref> [1] </ref> took 65% more time than ours, on average; on six-way circuits, it took approximately 40% more time; and on random circuits, it took approximately 37% more time. Our algorithm has a distinct advantage over that of [1] when working with nonroutable circuits. The algorithm of [1] must complete its step 1 before it can detect infeasibility, whereas our algorithm can detect infeasibility at any stage. Hence, it is possible for our algorithm to take much less time than that of [1] when working on such circuits. <p> a distinct advantage over that of <ref> [1] </ref> when working with nonroutable circuits. The algorithm of [1] must complete its step 1 before it can detect infeasibility, whereas our algorithm can detect infeasibility at any stage. Hence, it is possible for our algorithm to take much less time than that of [1] when working on such circuits. The results from three test circuits is given in Table 4. The algorithm of [1] took approximately 3 to 5 times as much time as did ours. 6 Conclusion We have developed a relatively simple and fast linear time algorithm to test the planar topological <p> Hence, it is possible for our algorithm to take much less time than that of <ref> [1] </ref> when working on such circuits. The results from three test circuits is given in Table 4. The algorithm of [1] took approximately 3 to 5 times as much time as did ours. 6 Conclusion We have developed a relatively simple and fast linear time algorithm to test the planar topological routability of a collection of two pin nets. The algorithm is faster than the linear time algorithm of [1]. 15 <p> of <ref> [1] </ref> took approximately 3 to 5 times as much time as did ours. 6 Conclusion We have developed a relatively simple and fast linear time algorithm to test the planar topological routability of a collection of two pin nets. The algorithm is faster than the linear time algorithm of [1]. 15
Reference: [2] <author> C. Hsu, </author> <title> "General River Routing Algorithm," </title> <booktitle> in ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 578-583, </pages> <year> 1983. </year>
Reference-contexts: 1 Introduction The problem of routing two pin nets on a single layer has been studied previous by several researchers. The river routing and switch box routing problems are special cases of this. Efficient algorithms for these can be found in <ref> [2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. In this paper, we are concerned with the problem of routing (topologically) a collection of two pin nets in a single layer or plane. We refer to this problem as the TPR problem. <p> In Figure 1 (a), the broken lines indicate wire paths. The routing instance (RI) of TPR problem for RIs in which all modules lie on the boundary of the routing region (or more precisely all pins are on the boundary of the region) was studied in <ref> [1, 2, 8] </ref>. A simple linear time algorithm for this version of the TPR problem was developed in these papers For the case in which none of the modules are on the boundary, Pinter [8] has suggested using the linear time planarity testing algorithm of Hopcroft and Tarjan [12]. <p> In this paper, we develop 1 t t t t t t t t t t (b) Augmented RI eedd c b f ggaa B (a) RI 2 4 4 2 another linear time algorithm for the general TPR problem that is almost as simple as the one of <ref> [1, 2, 8] </ref> for the restricted TPR problem.
Reference: [3] <author> C. Leiserson and R. Pinter, </author> <title> "Optimal placement for river routing," </title> <journal> SIAM Journal on Computing, </journal> <volume> no. 12, </volume> <pages> pp. 447-462, </pages> <year> 1983. </year>
Reference-contexts: 1 Introduction The problem of routing two pin nets on a single layer has been studied previous by several researchers. The river routing and switch box routing problems are special cases of this. Efficient algorithms for these can be found in <ref> [2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. In this paper, we are concerned with the problem of routing (topologically) a collection of two pin nets in a single layer or plane. We refer to this problem as the TPR problem.
Reference: [4] <author> A. Lim, S. Cheng, and S. Sahni, </author> <title> "Optimal Joining of Compacted Cells," </title> <journal> IEEE Transactions on Computer, </journal> <note> accepted in 1991. Extended abstract in 1992 Brown/MIT Advanced Research in VLSI and Parallel Systems. </note>
Reference-contexts: 1 Introduction The problem of routing two pin nets on a single layer has been studied previous by several researchers. The river routing and switch box routing problems are special cases of this. Efficient algorithms for these can be found in <ref> [2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. In this paper, we are concerned with the problem of routing (topologically) a collection of two pin nets in a single layer or plane. We refer to this problem as the TPR problem.
Reference: [5] <author> A. Mirzaian, </author> <title> "River Routing in VLSI," </title> <journal> Journal of Computer and System Sciences, </journal> <volume> no. 34, </volume> <pages> pp. 43-54, </pages> <year> 1987. </year>
Reference-contexts: 1 Introduction The problem of routing two pin nets on a single layer has been studied previous by several researchers. The river routing and switch box routing problems are special cases of this. Efficient algorithms for these can be found in <ref> [2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. In this paper, we are concerned with the problem of routing (topologically) a collection of two pin nets in a single layer or plane. We refer to this problem as the TPR problem.
Reference: [6] <author> A. Mirzaian, </author> <title> "A Minimum Separation Algorithm for River Routing with Bounded Number of Jogs," </title> <booktitle> in International Conference in Computer-Aided Design, </booktitle> <pages> pp. 10-13, </pages> <year> 1989. </year>
Reference-contexts: 1 Introduction The problem of routing two pin nets on a single layer has been studied previous by several researchers. The river routing and switch box routing problems are special cases of this. Efficient algorithms for these can be found in <ref> [2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. In this paper, we are concerned with the problem of routing (topologically) a collection of two pin nets in a single layer or plane. We refer to this problem as the TPR problem.
Reference: [7] <author> R. Pinter, </author> <title> "On routing two point nets across a channel," </title> <booktitle> in ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 899-902, </pages> <year> 1982. </year>
Reference-contexts: 1 Introduction The problem of routing two pin nets on a single layer has been studied previous by several researchers. The river routing and switch box routing problems are special cases of this. Efficient algorithms for these can be found in <ref> [2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. In this paper, we are concerned with the problem of routing (topologically) a collection of two pin nets in a single layer or plane. We refer to this problem as the TPR problem.
Reference: [8] <author> R. Pinter, "River-Routing: </author> <title> Methodology and Analysis," </title> <booktitle> in Third Caltech Conference on VLSI, </booktitle> <month> March </month> <year> 1983. </year>
Reference-contexts: 1 Introduction The problem of routing two pin nets on a single layer has been studied previous by several researchers. The river routing and switch box routing problems are special cases of this. Efficient algorithms for these can be found in <ref> [2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. In this paper, we are concerned with the problem of routing (topologically) a collection of two pin nets in a single layer or plane. We refer to this problem as the TPR problem. <p> In Figure 1 (a), the broken lines indicate wire paths. The routing instance (RI) of TPR problem for RIs in which all modules lie on the boundary of the routing region (or more precisely all pins are on the boundary of the region) was studied in <ref> [1, 2, 8] </ref>. A simple linear time algorithm for this version of the TPR problem was developed in these papers For the case in which none of the modules are on the boundary, Pinter [8] has suggested using the linear time planarity testing algorithm of Hopcroft and Tarjan [12]. <p> A simple linear time algorithm for this version of the TPR problem was developed in these papers For the case in which none of the modules are on the boundary, Pinter <ref> [8] </ref> has suggested using the linear time planarity testing algorithm of Hopcroft and Tarjan [12]. His algorithm is quite complex. Marek-Sadowska and Tarng [1] have considered the TPR problem and several variants which include flippable modules and multiterminal nets. <p> In this paper, we develop 1 t t t t t t t t t t (b) Augmented RI eedd c b f ggaa B (a) RI 2 4 4 2 another linear time algorithm for the general TPR problem that is almost as simple as the one of <ref> [1, 2, 8] </ref> for the restricted TPR problem.
Reference: [9] <author> A. Siegel and D. Dolev, </author> <title> "The separation for general single layer wiring barriers," </title> <booktitle> in VLSI Systems and Computations, </booktitle> <pages> pp. 143-152, </pages> <year> 1981. </year>
Reference-contexts: 1 Introduction The problem of routing two pin nets on a single layer has been studied previous by several researchers. The river routing and switch box routing problems are special cases of this. Efficient algorithms for these can be found in <ref> [2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. In this paper, we are concerned with the problem of routing (topologically) a collection of two pin nets in a single layer or plane. We refer to this problem as the TPR problem.
Reference: [10] <author> T. Tuan and S. Hakimi, </author> <title> "River Routing with Small Number of Jogs," </title> <journal> SIAM J. Discrete Math., </journal> <volume> vol. 3, no. 4, </volume> <pages> pp. 585-597, </pages> <year> 1990. </year>
Reference-contexts: 1 Introduction The problem of routing two pin nets on a single layer has been studied previous by several researchers. The river routing and switch box routing problems are special cases of this. Efficient algorithms for these can be found in <ref> [2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. In this paper, we are concerned with the problem of routing (topologically) a collection of two pin nets in a single layer or plane. We refer to this problem as the TPR problem.
Reference: [11] <author> T. Tuan and K. Teo, </author> <title> "On River Routing with Minimum Number of Jogs," </title> <journal> IEEE transactions on Computer-Aided Design, </journal> <volume> vol. 10, no. 2, </volume> <pages> pp. 270-273, </pages> <year> 1991. </year>
Reference-contexts: 1 Introduction The problem of routing two pin nets on a single layer has been studied previous by several researchers. The river routing and switch box routing problems are special cases of this. Efficient algorithms for these can be found in <ref> [2, 3, 4, 5, 6, 7, 8, 9, 10, 11] </ref>. In this paper, we are concerned with the problem of routing (topologically) a collection of two pin nets in a single layer or plane. We refer to this problem as the TPR problem.
Reference: [12] <author> John Hopcroft and Robert Tarjan, </author> <title> "Efficient Planarity Testing," </title> <journal> J. ACM, </journal> <volume> vol. 21, no. 4, </volume> <pages> pp. 549-568, </pages> <year> 1974. </year>
Reference-contexts: A simple linear time algorithm for this version of the TPR problem was developed in these papers For the case in which none of the modules are on the boundary, Pinter [8] has suggested using the linear time planarity testing algorithm of Hopcroft and Tarjan <ref> [12] </ref>. His algorithm is quite complex. Marek-Sadowska and Tarng [1] have considered the TPR problem and several variants which include flippable modules and multiterminal nets. They develop a linear time algorithm for TPR which is based on module merging.
References-found: 12

