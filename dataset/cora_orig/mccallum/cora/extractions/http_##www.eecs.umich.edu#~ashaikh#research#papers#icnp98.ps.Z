URL: http://www.eecs.umich.edu/~ashaikh/research/papers/icnp98.ps.Z
Refering-URL: http://www.eecs.umich.edu/~ashaikh/research/
Root-URL: http://www.cs.umich.edu
Email: fashaikh,kgshing@eecs.umich.edu jrex@research.att.com  
Title: Evaluating the Overheads of Source-Directed Quality-of-Service Routing  
Author: Anees Shaikh Jennifer Rexford Kang G. Shin 
Address: Ann Arbor, MI 48109-2122 Florham Park, NJ 07932-0971  
Affiliation: Department of Electrical Engineering Network Mathematics Research and Computer Science Networking and Distributed Systems University of Michigan AT&T Labs Research  
Abstract: Quality-of-service (QoS) routing satisfies application performance requirements and optimizes network resource usage but effective path-selection schemes require the distribution of link-state information, which can impose a significant burden on the bandwidth and processing resources in the network. We investigate the fundamental trade-off between network overheads and the quality of routing decisions in the context of the source-directed link-state routing protocols proposed for future IP and ATM networks. Through extensive simulation experiments with several representative network topologies and traffic patterns, we uncover the effects of stale link-state information, random fluctuations in traffic load, and variations of the link-cost metric on the routing and signalling overheads. The paper concludes by summarizing our key results as a list of guidelines for designing efficient quality-of-service routing policies in large backbone networks. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. Ahmadi, J. S. Chen, and R. Guerin. </author> <title> Dynamic rout ing and call control in high-speed integrated networks. </title> <editor> In A. Jensen and V. B. Iversen, editors, </editor> <title> Teletraffic and Data traffic in a Period of Change: </title> <booktitle> Proc. of the International Teletraffic Congress, volume 14 of Studies in Telecommu nication, </booktitle> <pages> pages 397403. </pages> <publisher> North-Holland, </publisher> <editor> Copenhagen, Den mark, </editor> <month> June </month> <year> 1991. </year>
Reference-contexts: Although networks can employ a wide variety of QoS routing strategies, previous comparative studies have demonstrated that algorithms with a strong preference for minimum-hop routes almost always outperform algorithms that do not consider path length <ref> [1, 9, 10, 18, 19, 23] </ref>. For example, selecting the widest shortest path (i.e., the minimum-hop route with the maximum value of min i f1 u i g) increases the likelihood of successfully routing the new connection.
Reference: [2] <author> L. Breslau, D. Estrin, and L. Zhang. </author> <title> A simulation study of adaptive source routing in integrated services networks. </title> <type> Technical Report 93-551, </type> <institution> Computer Science Department, University of Southern California, </institution> <year> 1993. </year>
Reference-contexts: To characterize the effects of stale in-formation, comparisons of different QoS-routing algorithms have included simulation experiments that vary the link-state update period <ref> [2, 17, 18] </ref>, while other work considers a combination of periodic and triggered updates [21]. However, these studies have not included a detailed evaluation of how the update policies interact with the traffic parameters and the richness of the underlying network topology. <p> In this paper, we investigate these performance issues through a systematic study of the scaling characteristics of QoS routing in large backbone networks. In contrast to recent simulation studies that compare different routing algorithms under specific network configurations <ref> [2, 9, 10, 14, 1719, 21, 23, 24] </ref>, we focus on understanding how routing performance and implementation overheads grow as a function of the network topology, traffic patterns, and link-state update policies. <p> To extend beyond the periodic link-state update policies evaluated in previous performance studies <ref> [2, 1719] </ref>, we consider a three-parameter model that applies to the routing protocols in PNNI and the proposed QoS extensions to OSPF.
Reference: [3] <author> B. V. Cherkassky, A. V. Goldberg, and T. Radzik. </author> <title> Shortest path algorithms: Theory and experimental evaluation. </title> <journal> Math ematical Programming, </journal> <volume> 73(2):129174, </volume> <month> May </month> <year> 1996. </year>
Reference-contexts: The Di-jkstra shortest-path calculation has O (L log N ) complexity when implemented with a binary heap. Although advanced data structures can reduce the average and worst-case complexity <ref> [3] </ref>, the shortest-path computation still incurs significant overhead in large networks. Extracting the route introduces complexity in propor tion to the path length. 2.2 Link-Cost Metrics The routing algorithm uses link cost metrics fc i g to distinguish between paths of the same length.
Reference: [4] <author> K. C. Claffy, H.-W. Braun, and G. C. Polyzos. </author> <title> A parameter izable methodology for Internet traffic flow profiling. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 13(8):1481 1494, </volume> <month> October </month> <year> 1995. </year>
Reference-contexts: With some logical separation of resources for short-lived and long-lived traffic, the network could tune the link-state update policies to the arrival rates and holding times of the long-lived connections. With appropriate mechanisms to identify or detect long-lived traffic, such as flow detection schemes for grouping related packets <ref> [4] </ref>, the network can assign this subset of the traffic to QoS routes and achieve good routing performance with a lower link-state update rate. 3.2 Triggered Link-State Updates Although periodic updates introduce a predictable overhead for exchanging link-state information, triggered updates can offer more accurate link-state information for the same average
Reference: [5] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> MIT Press (McGraw-Hill), </publisher> <address> Cambridge, MA (New York), </address> <year> 1990. </year>
Reference-contexts: In an N -node network with L links, pruning has O (L) computational complexity and produces a sparser graph consisting entirely of feasible links. Then, the switch can employ the Dijkstra shortest-path tree algorithm <ref> [5] </ref> to compute a the shortest path with the smallest total cost [25]. The Di-jkstra shortest-path calculation has O (L log N ) complexity when implemented with a binary heap.
Reference: [6] <author> E. Crawley, R. Nair, B. Rajagopalan, and H. Sandick. </author> <title> A framework for QoS-based routing in the Internet. Internet RFC (RFC 2386), </title> <month> August </month> <year> 1998. </year>
Reference-contexts: Complementing these lower-level mechanisms, routing and signalling protocols control network dynamics by directing traffic at the flow or connection level. QoS routing selects a path for each flow or connection to satisfy diverse performance requirements and optimize resource usage <ref> [6, 16, 28] </ref>. However, to support high throughput and low delay in establishing connections in large networks, the path-selection scheme should not consume excessive bandwidth, memory, and processing resources. In this paper, we investigate the trade-off between these resource requirements and the quality of the routing decisions.
Reference: [7] <author> A. Feldmann, J. Rexford, and R. Caceres. </author> <title> Reducing over head in flow-switched networks: An empirical study of web traffic. </title> <booktitle> In Proceedings of IEEE INFOCOM, </booktitle> <month> April </month> <year> 1998. </year>
Reference-contexts: The network can segregate the traffic in short- and long-lived flows by partitioning link bandwidth for the two classes, and detecting long-lived flows at the edge of the network <ref> [7] </ref>. Triggered link-state updates: Triggered link-state updates do not significantly affect the overall blocking probability, though coarse-grain triggers do increase the amount of blocking that stems from more expensive set-up failures.
Reference: [8] <author> S. Floyd and V. Jacobson. </author> <title> Synchronization of periodic routing messages. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 2(2):122136, </volume> <month> April </month> <year> 1994. </year>
Reference-contexts: The random graph is generated using Waxman's model [27]; nodes in the regular topology have identical connectivity. update messages for different links, each link introduces a small random component to the generation of successive updates <ref> [8] </ref>. In addition to the refresh period, the model generates updates upon detection of a significant change i in the available capacity since the last update message, where i = ju 0 1u 0 .
Reference: [9] <author> R. Gawlick, C. Kalmanek, and K. Ramakrishnan. </author> <title> Online routing for virtual private networks. </title> <institution> Computer Communica tions, 19(3):235244, </institution> <month> March </month> <year> 1996. </year>
Reference-contexts: In this paper, we investigate these performance issues through a systematic study of the scaling characteristics of QoS routing in large backbone networks. In contrast to recent simulation studies that compare different routing algorithms under specific network configurations <ref> [2, 9, 10, 14, 1719, 21, 23, 24] </ref>, we focus on understanding how routing performance and implementation overheads grow as a function of the network topology, traffic patterns, and link-state update policies. <p> Although networks can employ a wide variety of QoS routing strategies, previous comparative studies have demonstrated that algorithms with a strong preference for minimum-hop routes almost always outperform algorithms that do not consider path length <ref> [1, 9, 10, 18, 19, 23] </ref>. For example, selecting the widest shortest path (i.e., the minimum-hop route with the maximum value of min i f1 u i g) increases the likelihood of successfully routing the new connection.
Reference: [10] <author> R. Gawlick, A. Kamath, S. Plotkin, and K. Ramakrishnan. </author> <title> Routing and admission control in general topology networks. </title> <type> Technical Report CS-TR-95-1548, </type> <institution> Stanford University, </institution> <month> May </month> <year> 1995. </year>
Reference-contexts: In this paper, we investigate these performance issues through a systematic study of the scaling characteristics of QoS routing in large backbone networks. In contrast to recent simulation studies that compare different routing algorithms under specific network configurations <ref> [2, 9, 10, 14, 1719, 21, 23, 24] </ref>, we focus on understanding how routing performance and implementation overheads grow as a function of the network topology, traffic patterns, and link-state update policies. <p> Although networks can employ a wide variety of QoS routing strategies, previous comparative studies have demonstrated that algorithms with a strong preference for minimum-hop routes almost always outperform algorithms that do not consider path length <ref> [1, 9, 10, 18, 19, 23] </ref>. For example, selecting the widest shortest path (i.e., the minimum-hop route with the maximum value of min i f1 u i g) increases the likelihood of successfully routing the new connection. <p> Biasing toward shortest-path routes is particularly attractive in a large, distributed network, since path length is a relatively stable metric, compared with dynamic measurements of link delay or loss rate <ref> [10] </ref>.
Reference: [11] <author> R. Guerin, S. Kamat, A. Orda, T. Przygienda, and D. Williams. </author> <title> QoS routing mechanisms and OSPF exten sions. Internet Draft (draft-guerin-qos-routing-ospf-03.txt), </title> <booktitle> work in progress, </booktitle> <month> March </month> <year> 1998. </year>
Reference-contexts: Similarly, proposed QoS extensions to the OSPF protocol include an explicit routing mechanism for source-directed IP routing <ref> [11, 30] </ref>. During periods of transient overload, link failure, or general congestion, these schemes are able to find QoS paths for more flows. <p> Finally, new routing algorithms have been proposed that reduce computation and memory overheads by basing path selection on a small set of discrete bandwidth levels <ref> [11, 17] </ref>; these algorithms attempt to balance the trade-off between accuracy and computational complexity. The performance and implementation trade-offs for QoS routing depend on the interaction between a large and complex set of parameters.
Reference: [12] <author> R. Guerin and A. Orda. </author> <title> QoS-based routing in networks with inaccurate information. </title> <booktitle> In Proceedings of IEEE INFOCOM, </booktitle> <month> April </month> <year> 1997. </year>
Reference-contexts: Several recent studies consider the effects of stale or coarse-grained information on the performance of QoS routing algorithms. For example, analytical models have been developed to evaluate routing in hierarchical networks where a switch has limited information about the aggregate resources available in other peer groups or areas <ref> [12] </ref>. To characterize the effects of stale in-formation, comparisons of different QoS-routing algorithms have included simulation experiments that vary the link-state update period [2, 17, 18], while other work considers a combination of periodic and triggered updates [21].
Reference: [13] <author> R. Guerin, A. Orda, and D. Williams. </author> <title> QoS routing mech anisms and OSPF extensions. </title> <booktitle> In Proceedings of IEEE GLOBECOM, </booktitle> <month> November </month> <year> 1997. </year>
Reference-contexts: To address staleness more directly, the pruning policy could more conservative or more liberal in removing links to balance the trade-off between minimal and nonminimal routes <ref> [13] </ref>. Route flapping: Although QoS routing performs well for small link-state update periods (significantly outperforming static routing [25]), the blocking probability rises relatively quickly before gradually plateauing for large update periods.
Reference: [14] <author> A. Iwata, R. Izmailov, H. Suzuki, and B. Sengupta. </author> <title> PNNI routing algorithms for multimedia ATM internet. NEC Re serach & Development, </title> <type> 38(1), </type> <month> January </month> <year> 1997. </year>
Reference-contexts: In this paper, we investigate these performance issues through a systematic study of the scaling characteristics of QoS routing in large backbone networks. In contrast to recent simulation studies that compare different routing algorithms under specific network configurations <ref> [2, 9, 10, 14, 1719, 21, 23, 24] </ref>, we focus on understanding how routing performance and implementation overheads grow as a function of the network topology, traffic patterns, and link-state update policies.
Reference: [15] <author> A. Khanna and J. Zinky. </author> <title> The revised ARPANET routing metric. </title> <booktitle> In Proceedings of ACM SIGCOMM, </booktitle> <pages> pages 4556, </pages> <address> Austin, TX, </address> <year> 1989. </year>
Reference-contexts: Under large update periods, relative to the arrival rates and holding times, the links can experience dramatic fluctuations in link state between successive update messages. Such link-state flapping has been observed in packet routing networks <ref> [15] </ref>, where path selection can vary on a packet-by-packet basis; the same phenomenon occurs here since the link-state update period is large relative to the connection arrival rates and holding times.
Reference: [16] <author> W. C. Lee, M. G. Hluchyj, and P. A. Humblet. </author> <title> Routing sub ject to quality of service constraints in integrated commu nication networks. </title> <journal> IEEE Network Magazine, </journal> <pages> pages 4655, </pages> <month> July/August </month> <year> 1995. </year>
Reference-contexts: Complementing these lower-level mechanisms, routing and signalling protocols control network dynamics by directing traffic at the flow or connection level. QoS routing selects a path for each flow or connection to satisfy diverse performance requirements and optimize resource usage <ref> [6, 16, 28] </ref>. However, to support high throughput and low delay in establishing connections in large networks, the path-selection scheme should not consume excessive bandwidth, memory, and processing resources. In this paper, we investigate the trade-off between these resource requirements and the quality of the routing decisions.
Reference: [17] <author> Q. Ma and P. Steenkiste. </author> <title> On path selection for traffic with bandwidth guarantees. </title> <booktitle> In Proceedings of IEEE Interna tional Conference on Network Protocols, </booktitle> <address> Atlanta, GA, Oc tober 1997. </address>
Reference-contexts: To characterize the effects of stale in-formation, comparisons of different QoS-routing algorithms have included simulation experiments that vary the link-state update period <ref> [2, 17, 18] </ref>, while other work considers a combination of periodic and triggered updates [21]. However, these studies have not included a detailed evaluation of how the update policies interact with the traffic parameters and the richness of the underlying network topology. <p> Finally, new routing algorithms have been proposed that reduce computation and memory overheads by basing path selection on a small set of discrete bandwidth levels <ref> [11, 17] </ref>; these algorithms attempt to balance the trade-off between accuracy and computational complexity. The performance and implementation trade-offs for QoS routing depend on the interaction between a large and complex set of parameters. <p> In addition to studying a representative well-known core topology (an early representation of the MCI backbone that has appeared in other routing studies <ref> [17, 18] </ref>), we also evaluate both random graphs and regular topologies in order to vary important parameters like size, diameter, and node degree in a controlled fashion.
Reference: [18] <author> Q. Ma and P. Steenkiste. </author> <title> Quality-of-service routing for traffic with performance guarantees. </title> <booktitle> In Proc. IFIP International Workshop on Quality of Service, </booktitle> <pages> pages 115126, </pages> <address> Columbia University, New York, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: To characterize the effects of stale in-formation, comparisons of different QoS-routing algorithms have included simulation experiments that vary the link-state update period <ref> [2, 17, 18] </ref>, while other work considers a combination of periodic and triggered updates [21]. However, these studies have not included a detailed evaluation of how the update policies interact with the traffic parameters and the richness of the underlying network topology. <p> Although networks can employ a wide variety of QoS routing strategies, previous comparative studies have demonstrated that algorithms with a strong preference for minimum-hop routes almost always outperform algorithms that do not consider path length <ref> [1, 9, 10, 18, 19, 23] </ref>. For example, selecting the widest shortest path (i.e., the minimum-hop route with the maximum value of min i f1 u i g) increases the likelihood of successfully routing the new connection. <p> In addition to studying a representative well-known core topology (an early representation of the MCI backbone that has appeared in other routing studies <ref> [17, 18] </ref>), we also evaluate both random graphs and regular topologies in order to vary important parameters like size, diameter, and node degree in a controlled fashion.
Reference: [19] <author> I. Matta and A. U. Shankar. </author> <title> Dynamic routing of real-time virtual circuits. </title> <booktitle> In Proceedings of IEEE International Con ference on Network Protocols, </booktitle> <pages> pages 132139, </pages> <address> Columbus, OH, </address> <year> 1996. </year>
Reference-contexts: Although networks can employ a wide variety of QoS routing strategies, previous comparative studies have demonstrated that algorithms with a strong preference for minimum-hop routes almost always outperform algorithms that do not consider path length <ref> [1, 9, 10, 18, 19, 23] </ref>. For example, selecting the widest shortest path (i.e., the minimum-hop route with the maximum value of min i f1 u i g) increases the likelihood of successfully routing the new connection.
Reference: [20] <author> V. Paxson and S. Floyd. </author> <title> Why we don't know how to simulate the Internet. </title> <booktitle> In Proc. of the Winter Simulation Conference, </booktitle> <address> Atlanta, GA, </address> <month> December </month> <year> 1997. </year>
Reference-contexts: The constantly changing and decentralized nature of current networks (in particular, the Internet) results in a poor understanding of these characteristics and makes it difficult to define any typical configuration <ref> [20] </ref>. Adding to the challenge are observations that conclusions about algorithm or protocol performance may in fact vary dramatically with the underlying network model. <p> We model connection holding times using a Pareto distribution (shape parameter a, scale parameter fi, and CDF F X (x) = 1 (fi=x) a ) with a = 2:5 to capture the heavy-tailed nature of connection durations <ref> [20] </ref> while still producing a distribution with finite variance making it possible to gain sufficient confidence on the simulation results. For comparison we also conducted experiments with exponentially distributed holding times. We denote the mean holding time as `.
Reference: [21] <author> M. Peyravian and R. Onvural. </author> <title> Algorithm for efficient gen eration of link-state updates in ATM networks. Computer Networks and ISDN Systems, </title> <address> 29(2):237247, </address> <month> January </month> <year> 1997. </year>
Reference-contexts: To characterize the effects of stale in-formation, comparisons of different QoS-routing algorithms have included simulation experiments that vary the link-state update period [2, 17, 18], while other work considers a combination of periodic and triggered updates <ref> [21] </ref>. However, these studies have not included a detailed evaluation of how the update policies interact with the traffic parameters and the richness of the underlying network topology. <p> In this paper, we investigate these performance issues through a systematic study of the scaling characteristics of QoS routing in large backbone networks. In contrast to recent simulation studies that compare different routing algorithms under specific network configurations <ref> [2, 9, 10, 14, 1719, 21, 23, 24] </ref>, we focus on understanding how routing performance and implementation overheads grow as a function of the network topology, traffic patterns, and link-state update policies.
Reference: [22] <author> PNNI Specification Working Group. </author> <title> Private Network Network Interface Specification Version 1.0. ATM Forum, </title> <month> March </month> <year> 1996. </year>
Reference-contexts: We focus on link-state routing algorithms where the source switch or router selects a path based on the connection traffic parameters and the available resources in the network. For example, the ATM Fo rum's PNNI standard <ref> [22] </ref> defines a routing protocol for distributing topology and load information throughout the network, and a signalling protocol for processing and forwarding connection-establishment requests from the source. Similarly, proposed QoS extensions to the OSPF protocol include an explicit routing mechanism for source-directed IP routing [11, 30].
Reference: [23] <author> C. Pornavalai, G. Chakraborty, and N. Shiratori. </author> <title> QoS based routing in integrated services packet networks. </title> <booktitle> In Proceed ings of IEEE International Conference on Network Proto cols, </booktitle> <address> Atlanta, GA, </address> <month> October </month> <year> 1997. </year>
Reference-contexts: In this paper, we investigate these performance issues through a systematic study of the scaling characteristics of QoS routing in large backbone networks. In contrast to recent simulation studies that compare different routing algorithms under specific network configurations <ref> [2, 9, 10, 14, 1719, 21, 23, 24] </ref>, we focus on understanding how routing performance and implementation overheads grow as a function of the network topology, traffic patterns, and link-state update policies. <p> Although networks can employ a wide variety of QoS routing strategies, previous comparative studies have demonstrated that algorithms with a strong preference for minimum-hop routes almost always outperform algorithms that do not consider path length <ref> [1, 9, 10, 18, 19, 23] </ref>. For example, selecting the widest shortest path (i.e., the minimum-hop route with the maximum value of min i f1 u i g) increases the likelihood of successfully routing the new connection.
Reference: [24] <author> S. Rampal and D. Reeves. </author> <title> Routing and admission control algorithms for multimedia data. </title> <journal> Computer Communications, </journal> <month> October </month> <year> 1995. </year>
Reference-contexts: In this paper, we investigate these performance issues through a systematic study of the scaling characteristics of QoS routing in large backbone networks. In contrast to recent simulation studies that compare different routing algorithms under specific network configurations <ref> [2, 9, 10, 14, 1719, 21, 23, 24] </ref>, we focus on understanding how routing performance and implementation overheads grow as a function of the network topology, traffic patterns, and link-state update policies.
Reference: [25] <author> A. Shaikh, J. Rexford, and K. G. Shin. </author> <title> Dynamics of quality-of-service routing with inaccurate link-state informa tion. </title> <type> Technical Report CSE-TR-350-97, </type> <institution> Computer Science and Engineering, University of Michigan, </institution> <month> November </month> <year> 1997. </year>
Reference-contexts: In an N -node network with L links, pruning has O (L) computational complexity and produces a sparser graph consisting entirely of feasible links. Then, the switch can employ the Dijkstra shortest-path tree algorithm [5] to compute a the shortest path with the smallest total cost <ref> [25] </ref>. The Di-jkstra shortest-path calculation has O (L log N ) complexity when implemented with a binary heap. Although advanced data structures can reduce the average and worst-case complexity [3], the shortest-path computation still incurs significant overhead in large networks. <p> Most of our graphs show results for the MCI and random topologies, though we use a set of regular graphs with different degrees of connectiv ity to evaluate the effects of having multiple shortest-path routes between pairs of nodes <ref> [25] </ref>. We further assume that the topology remains fixed throughout each simulation experiment; that is, we do not model the effects of link failures. Each node generates connection requests according to a Poisson process with rate , with uniform random selection of destination nodes. <p> For comparison, the graph shows results with and without pruning of (seemingly) infeasible links. We vary the update periods from almost continuous updates to very long periods of 200 times (graphs show up to 80 times) the average connection interarrival time (further details on simulation setup are available in <ref> [25] </ref>). Due to their higher resource requirements, the high-bandwidth connections experience a larger blocking probability than the low-bandwidth connections across the range of link-state update rates. <p> To address staleness more directly, the pruning policy could more conservative or more liberal in removing links to balance the trade-off between minimal and nonminimal routes [13]. Route flapping: Although QoS routing performs well for small link-state update periods (significantly outperforming static routing <ref> [25] </ref>), the blocking probability rises relatively quickly before gradually plateauing for large update periods. In Figure 1 (a), even an update period of five time units (five times the average connection interarrival time) shows significant performance degradation. <p> This is especially true when links do not report their new state at the same time, due to skews in the update periods at different switches. In other experiments, we compared connection blocking probability to several alternative measures of blocking <ref> [25] </ref>. The hop-count blocking probability is defined as the ratio of the hop-count of blocked connections to the hop-count of all connections; bandwidth blocking is defined analogously relative to requested bandwidth. Compared to conventional connection blocking, these metrics grow more quickly in the presence of stale information. <p> For example, other experiments show that longer holding times allow the use of larger link-state update periods to achieve the same blocking probability <ref> [25] </ref>. Also, in comparing the trends to an identical experiment with exponentially distributed holding times, we found that the Pareto distribution produces a significantly more rapid rise in blocking probability over the same range of update periods (nearly twice as fast for some mean holding times). <p> Additional experiments with the well-connected regular topology show the same trend <ref> [25] </ref>. Blocking insensitivity to update trigger: To understand this phenomenon, consider the two possible effects of stale link-state information on the path-selection process when pruning is enabled. <p> However, in a loosely-connected networks, an incorrect pruning decision can cause the source to erroneously consider nonmin-imal routes. For example, the random topology has higher blocking rates with smaller trigger values when trying to route high-bandwidth connections <ref> [25] </ref>. Unlike the other two topologies, the random graph typically does not have multiple equal-length paths between a pair of nodes. As a result, pruning an infeasible link along the shortest path results in the selection of a nonminimal route. <p> These experiments showed a sharp drop in the blocking probability due to the transition from static routing (ff = 0) to QoS routing (ff &gt; 0), followed by an increase in blocking probability for larger values of ff <ref> [25] </ref>. When ff is too large, the link-cost function concentrates most of the cost information in a very small, high-load region.
Reference: [26] <author> A. Shaikh, J. Rexford, and K. G. Shin. </author> <title> Efficient precomputa tion of quality-of-service routes. </title> <booktitle> In Proceedings of Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <month> July </month> <year> 1998. </year>
Reference-contexts: In addition, coarse-grain link costs have the benefit of increasing the number of equal-cost routes, which improves the effectiveness of alternate routing. We exploit these characteristics in our recent work on precomputation of QoS routes <ref> [26] </ref>. Exponent alpha: Under fine-grain link costs (large C), routing performance is not very sensitive to the exponent ff; an exponent of 1 or 2 performs well, and larger values do not appear to increase route flapping, even under very stale information.
Reference: [27] <author> B. M. Waxman. </author> <title> Routing of multipoint connections. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 6(9):1617 1622, </volume> <month> December </month> <year> 1988. </year>
Reference-contexts: To prevent synchronization of Topology N L Deg. Diam. h Random graph 100 492 4.92 6 3.03 MCI backbone 19 64 3.37 4 2.34 Regular topology 125 750 6 6 3.63 Table 1. The random graph is generated using Waxman's model <ref> [27] </ref>; nodes in the regular topology have identical connectivity. update messages for different links, each link introduces a small random component to the generation of successive updates [8].
Reference: [28] <author> Z. Whang and J. Crowcroft. </author> <title> Quality-of-service routing for supporting multimedia applications. </title> <journal> IEEE Journal on Se lected Areas in Communications, </journal> <note> 14(7):12281234, Septem ber 1996. </note>
Reference-contexts: Complementing these lower-level mechanisms, routing and signalling protocols control network dynamics by directing traffic at the flow or connection level. QoS routing selects a path for each flow or connection to satisfy diverse performance requirements and optimize resource usage <ref> [6, 16, 28] </ref>. However, to support high throughput and low delay in establishing connections in large networks, the path-selection scheme should not consume excessive bandwidth, memory, and processing resources. In this paper, we investigate the trade-off between these resource requirements and the quality of the routing decisions.
Reference: [29] <author> E. W. Zegura, K. L. Calvert, and S. Bhattacharjee. </author> <title> How to model an internetwork. </title> <booktitle> In Proceedings of IEEE INFOCOM, </booktitle> <pages> pages 594602, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: For example, random graphs can result in unrealistically long paths between certain pairs of nodes, well-known topologies may show effects that are unique to particular configurations, and regular graphs may hide important effects of heterogeneity and non-uniformity <ref> [29] </ref>. Consequently, our simulation experiments consider a range of network topologies (see Table 1), and we comment on similarities and differences between the trends in each configuration. As our study focuses on backbone networks, we consider topologies with relatively high connectivity, an increasingly common feature of emerging core backbone networks [29], <p> <ref> [29] </ref>. Consequently, our simulation experiments consider a range of network topologies (see Table 1), and we comment on similarities and differences between the trends in each configuration. As our study focuses on backbone networks, we consider topologies with relatively high connectivity, an increasingly common feature of emerging core backbone networks [29], that support a dense traffic matrix (with significant traffic between most pairs of core nodes) and are resilient to link failures.
Reference: [30] <author> Z. Zhang, C. Sanchez, B. Salkewicz, and E. S. Crawley. </author> <title> Quality of service extensions to OSPF or quality of service path first routing (QOSPF). Internet Draft (draft-zhang-qos ospf-01.txt), </title> <booktitle> work in progress, </booktitle> <month> September </month> <year> 1997. </year>
Reference-contexts: Similarly, proposed QoS extensions to the OSPF protocol include an explicit routing mechanism for source-directed IP routing <ref> [11, 30] </ref>. During periods of transient overload, link failure, or general congestion, these schemes are able to find QoS paths for more flows.
References-found: 30

