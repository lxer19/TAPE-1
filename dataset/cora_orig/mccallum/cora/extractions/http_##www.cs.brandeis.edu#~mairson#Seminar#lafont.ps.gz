URL: http://www.cs.brandeis.edu/~mairson/Seminar/lafont.ps.gz
Refering-URL: http://www.cs.brandeis.edu/~mairson/PL-oldtalks.html
Root-URL: http://www.cs.brandeis.edu
Title: From Proof-Nets to Interaction Nets  
Author: Yves Lafont 
Date: September 9, 1996  
Affiliation: CNRS Institut de Mathematiques de Luminy  
Abstract-found: 0
Intro-found: 1
Reference: [Abr93] <author> S. Abramsky. </author> <title> Computational interpretations of Linear Logic. </title> <booktitle> Theoretical Computer Science 111 3-57. </booktitle> <year> 1993. </year>
Reference-contexts: There is a similar situation in functional 3 This is not obvious at all, since for instance, the system for additive connectives is not confluent! 16 programming, where nobody wants to see actual values of functional type. In other words, external reduction is a kind of lazy reduction (see <ref> [Abr93] </ref>). Note that external reduction is confluent in the strong sense of lemma 1. From the viewpoint of cut-elimination, this fragment is much more expressive than the multiplicative one.
Reference: [Baw86] <author> A. Bawden. </author> <title> Connection Graphs. </title> <booktitle> Proceedings of ACM Conference on Lisp and Functional Programming, </booktitle> <pages> 258-265. </pages> <year> 1986. </year>
Reference-contexts: It is not the case of other models such as cellular automata, where a global synchronization is needed. It is also interesting to notice that our interaction nets are an instance of the connection graphs, which were designed as an assembly language for parallel machines (see <ref> [Baw86] </ref>). Moreover, the sequential models of computation, such as Turing machines, can be revisited in the light of this new paradigm which abolishes the traditional distinction between processor and memory, or between functions and data (see [Laf94]).
Reference: [Dan90] <author> V. </author> <month> Danos. </month> <institution> La Logique Lineaire appliquee a l'etude de divers processus de normalisation (principalement du -calcul). These de doctorat, Universite de Paris 7. </institution> <year> 1990. </year>
Reference-contexts: Now, replacing a subtree by a tree in a tree yields a tree. Q.e.d. The theorem follows from lemmas 4, 5 and the following argument, which was first pointed out in <ref> [Dan90] </ref>: Lemma 6 If a non-degenerate net satisfies the Danos-Regnier criterion and is irreducible by the rules of figure 4, then is a parsing box. Proof: Since is irreducible by times, it contains no times cell. <p> This system terminates in the case of proof-nets (see [Gir87]). Furthermore, there are a lot of conflicts between the various kinds of rules, but the property of confluence holds, even in the untyped case (see <ref> [Dan90] </ref> or [Reg92]). 3 External reduction suffices if we content ourselves with a weak notion of normal form. <p> It transforms an intuitionistic proof of ` A into a linear proof of ` ?; A with the following interpretation of the implication: A ) B = ?A ? - B: This translation extends to untyped -terms (see <ref> [Dan90] </ref> or [Reg92]) so that fi-reduction is interpreted in terms of reduction of well-formed nets 4 .
Reference: [DR89] <author> V. Danos & L. Regnier. </author> <title> The structure of multiplicatives. </title> <booktitle> Archive for Mathematical Logic 28, </booktitle> <pages> 181-203. </pages> <year> 1989. </year>
Reference-contexts: Theorem 1 A net is well-formed if and only if every switching defines a connected acyclic graph. 1 In fact, it also happens that a typed net contains no vicious circle of length n &gt; 0, but it may contain closed wires. 8 This is the Danos-Regnier criterion introduced in <ref> [DR89] </ref>. In the case of a typed net, we get the sequentialization theorem of [Gir87]. The proof of theorem 1 will be the object of the next section, but we can already make some comments.
Reference: [FR90] <author> A. Fleury & C. Retore. </author> <title> The Mix rule. </title> <institution> Prebublication de l'equipe de logique 11, Universite de Paris 7, </institution> <note> to appear in Mathematical Structures in Computer Science. </note> <year> 1990. </year>
Reference-contexts: For instance, A B implies A - B and 1 is equivalent to ? (see <ref> [FR90] </ref> for a more elaborate system). On the other side, the proof-boxes of [Gir87] introduce a kind of synchronization which is not justified from a purely computational viewpoint.
Reference: [Gal91] <author> J. Gallier. </author> <title> Constructive Logics. Part II: Linear Logic and Proof Nets. </title> <note> Digital PRL research report 9. </note> <year> 1991. </year>
Reference-contexts: To check if a net is well-formed, there is of course a naive exponential algorithm which tries all possibilities, but Danos and Regnier noticed that this can be done in quadratic time (see also <ref> [Gal91] </ref>). In order to show this, we introduce the parsing box : * This is a special kind of cell with a variable number of non-distinguished ports.
Reference: [GAL92a] <author> G. Gonthier, M. Abadi & J.-J. Levy. </author> <title> The geometry of optimal lambda reduction. </title> <booktitle> Proceedings of 19th ACM Symposium on Principles of Programming Languages (POPL 92). </booktitle> <year> 1992. </year>
Reference-contexts: Of course, 5 This case was not considered in [Laf90]. 6 In [GAL92b], another encoding of exponential boxes is proposed, which is inspired by the geometry of interaction and the optimal reduction of lambda-calculus (see <ref> [GAL92a] </ref>). 18 the two agents must interact simultaneously, but no synchronization is needed between interactions. It is not the case of other models such as cellular automata, where a global synchronization is needed.
Reference: [GAL92b] <author> G. Gonthier, M. Abadi & J.-J. Levy. </author> <title> Linear Logic without boxes. </title> <booktitle> Proceedings of 7th Annual Symposium on Logic in Computer Science (LICS 92). </booktitle> <year> 1992. </year>
Reference-contexts: Our interaction nets provide a simple model of parallel computation. A cell is an agent which is activated only when its principal port is connected to the principal port of another agent. Of course, 5 This case was not considered in [Laf90]. 6 In <ref> [GAL92b] </ref>, another encoding of exponential boxes is proposed, which is inspired by the geometry of interaction and the optimal reduction of lambda-calculus (see [GAL92a]). 18 the two agents must interact simultaneously, but no synchronization is needed between interactions.
Reference: [Gir87] <author> J.Y. Girard. </author> <title> Linear logic. </title> <booktitle> Theoretical Computer Science 50, </booktitle> <pages> 1-102. </pages> <year> 1987. </year>
Reference-contexts: This question does not have a simple answer in general, but it leads to the notion of proof-net, which is one of the main novelties of linear logic. This has been already explained in <ref> [Gir87] </ref> and [GLT89]. The notion of interaction net introduced in [Laf90] comes from an attempt to implement the reduction of these proof-nets. It happens to be a simple model of parallel computation, and so it can be presented independently of linear logic, as in [Laf94]. <p> reduction: ` A B; B ? A? ` A; A ? ` B; B ? ` A B; B ? A? This means that, if a sequent is provable, it has a cut-free proof with only atomic axioms. 3 Proof-nets Since our notion differs slightly from the original one in <ref> [Gir87] </ref>, we shall give precise definitions. First, we introduce a times cell and a par cell : - Both have three ports: a principal one below and two auxiliary ones above. The two auxiliary ports are distinguished: There is a left one and a right one. <p> As a corollary, the number of steps for reducing a net to its normal form is independent of the reduction path. Note that our notion of net avoids the critical pairs of <ref> [Gir87] </ref> because we have no explicit cell for axiom and cut. To be honest, there is a little problem with our definition. <p> In the case of a typed net, we get the sequentialization theorem of <ref> [Gir87] </ref>. The proof of theorem 1 will be the object of the next section, but we can already make some comments. First, notice that if a net satisfies the criterion, then it contains no vicious circle: This is a direct consequence of the acyclicity condition. <p> For instance, A B implies A - B and 1 is equivalent to ? (see [FR90] for a more elaborate system). On the other side, the proof-boxes of <ref> [Gir87] </ref> introduce a kind of synchronization which is not justified from a purely computational viewpoint. Maybe, a better understanding of linear logic is needed to settle this question. 8 Exponentials We have seen that the process of cut-elimination in the sequent calculus for multiplicative linear logic can be completely localized. <p> Three kinds of reductions are needed: * external reductions (when two cells or boxes are connected through their principal ports): : : : z n z 1 d ! z n z 1 2 For that reason, there is a box for weakening in <ref> [Gir87] </ref>. 15 c c : : : z 1 z n : : : x y : : : w w : : : Intuitively, a dereliction opens a box, a contraction duplicates it and a weakening erases it. * commutative reductions (when an auxiliary port of a box is connected <p> Of course, we must not forget the multiplicative reduction, which is of the external kind. This system terminates in the case of proof-nets (see <ref> [Gir87] </ref>). Furthermore, there are a lot of conflicts between the various kinds of rules, but the property of confluence holds, even in the untyped case (see [Dan90] or [Reg92]). 3 External reduction suffices if we content ourselves with a weak notion of normal form. <p> Note that external reduction is confluent in the strong sense of lemma 1. From the viewpoint of cut-elimination, this fragment is much more expressive than the multiplicative one. There is indeed a translation of the implicative fragment of intuitionistic logic into the multiplicative exponential fragment of linear logic (see <ref> [Gir87] </ref>).
Reference: [GLT89] <author> J.Y. Girard, Y. Lafont & P. Taylor. </author> <title> Proofs and Types. </title> <booktitle> Cambridge Tracts in Theoretical Computer Science 7, </booktitle> <publisher> Cambridge University Press. </publisher> <year> 1989. </year>
Reference-contexts: This question does not have a simple answer in general, but it leads to the notion of proof-net, which is one of the main novelties of linear logic. This has been already explained in [Gir87] and <ref> [GLT89] </ref>. The notion of interaction net introduced in [Laf90] comes from an attempt to implement the reduction of these proof-nets. It happens to be a simple model of parallel computation, and so it can be presented independently of linear logic, as in [Laf94].
Reference: [Laf90] <author> Y. Lafont. </author> <title> Interaction Nets. </title> <booktitle> Proceedings of 17th ACM Symposium on Principles of Programming Languages (POPL 90) 95-108. </booktitle> <year> 1990. </year>
Reference-contexts: This question does not have a simple answer in general, but it leads to the notion of proof-net, which is one of the main novelties of linear logic. This has been already explained in [Gir87] and [GLT89]. The notion of interaction net introduced in <ref> [Laf90] </ref> comes from an attempt to implement the reduction of these proof-nets. It happens to be a simple model of parallel computation, and so it can be presented independently of linear logic, as in [Laf94]. <p> Our interaction nets provide a simple model of parallel computation. A cell is an agent which is activated only when its principal port is connected to the principal port of another agent. Of course, 5 This case was not considered in <ref> [Laf90] </ref>. 6 In [GAL92b], another encoding of exponential boxes is proposed, which is inspired by the geometry of interaction and the optimal reduction of lambda-calculus (see [GAL92a]). 18 the two agents must interact simultaneously, but no synchronization is needed between interactions. <p> In fact, this notion of weakly well-formed net, corresponds to the variant of linear logic considered in section 7. It is equivalent to the notion of semi-simple net of <ref> [Laf90] </ref>. 10 Conclusion The notion of exponential proof-net is not completely convincing because of its hybrid character. The exponential box is indeed a direct translation of the promotion rule of sequent calculus, which is essentially nonlocal. There are two ways to cope with this problem.
Reference: [Laf94] <author> Y. Lafont. </author> <title> The Paradigm of Interaction. </title> <note> In preparation. </note>
Reference-contexts: The notion of interaction net introduced in [Laf90] comes from an attempt to implement the reduction of these proof-nets. It happens to be a simple model of parallel computation, and so it can be presented independently of linear logic, as in <ref> [Laf94] </ref>. However, we think that it is also useful to relate the exact origin of interaction nets, especially for readers with some knowledge in linear logic. <p> Moreover, the sequential models of computation, such as Turing machines, can be revisited in the light of this new paradigm which abolishes the traditional distinction between processor and memory, or between functions and data (see <ref> [Laf94] </ref>). Now, we could forget the logical origin of these interaction nets, but it happens that the notions introduced for proof-theoretical purposes have great computational import. <p> It consists in replacing the deduction rules of linear logic by interaction rules, in such a way that the concrete character of the computation is preserved, even if its logical status becomes less obvious. In fact, it is not necessary to consider arbitrary systems: In <ref> [Laf94] </ref>, we prove that any interaction system can be translated into a very simple one with only three symbols that we call interaction combinators. This means that any computation can be decomposed into elementary steps using a very small number of interaction rules.
Reference: [LW94] <author> P. Lincoln & T. Winkler. </author> <title> Constant-Only Multiplicative Linear Logic is NP-Complete. </title> <note> To appear in Theoretical Computer Science. </note> <year> 1994. </year>
Reference-contexts: In <ref> [LW94] </ref>, it is shown indeed that the multiplicative fragment of linear logic with units but without proper atoms is NP-complete.
Reference: [Mac94] <author> I. Mackie. </author> <title> The Geometry of Implementation (an investigation into using the Geometry of Interaction for language implementation). </title> <type> Thesis, </type> <institution> Imperial College, London. </institution> <note> In preparation. </note>
Reference-contexts: In fact, it is possible to replace this infinite system by a finite one at the expense of some encoding (see <ref> [Mac94] </ref>). 6 Here is a completely different kind of example: + s 0 0 " s ffi s s fi fi " 0 0 0 ffi It is a program for unary arithmetic, based on the classical definitions of addition and multiplication: s x + y = s (x + y);
Reference: [Reg92] <author> L. </author> <type> Regnier. </type> <institution> Lambda-calcul et reseaux. These de doctorat, Universite de Paris 7. </institution> <year> 1992. </year> <month> 20 </month>
Reference-contexts: This system terminates in the case of proof-nets (see [Gir87]). Furthermore, there are a lot of conflicts between the various kinds of rules, but the property of confluence holds, even in the untyped case (see [Dan90] or <ref> [Reg92] </ref>). 3 External reduction suffices if we content ourselves with a weak notion of normal form. <p> It transforms an intuitionistic proof of ` A into a linear proof of ` ?; A with the following interpretation of the implication: A ) B = ?A ? - B: This translation extends to untyped -terms (see [Dan90] or <ref> [Reg92] </ref>) so that fi-reduction is interpreted in terms of reduction of well-formed nets 4 .
References-found: 15

