URL: http://www.eecs.umich.edu/~chaudhry/papers/dksme.ps
Refering-URL: http://www.eecs.umich.edu/~chaudhry/publications.html
Root-URL: http://www.eecs.umich.edu
Email: email: -chaudhry, moyne, rundenst-@eecs.umich.edu  
Title: Utilizing Fuzzy Data and Rules for Discrete Control of Semiconductor Manufacturing Processes  
Author: Nauman Chaudhry, James Moyne, and Elke A. Rundensteiner 
Keyword: Manufacturing database, fuzzy information, contradictory information, decision making, database design, supervisory control.  
Address: Ann Arbor, MI 48109-2122  
Affiliation: Department of Electrical Engineering and Computer Science University of Michigan,  
Abstract: Semiconductor wafer fabrication is a very complex manufacturing process. Many semiconductor processes are not very well understood. The control of semiconductor manufacturing processes is, thus, an active research area. Even though various algorithms have been developed for process control and optimization, the scope of application of these algorithms is not very well-characterized due to the complexity of the semiconductor manufacturing processes. However, information about the applicability of these algorithms can be gathered from various sources and can be roughly expressed in terms of rules of various types that relate the applicability of different algorithms to process conditions. We have applied fuzzy set theory to develop a multi-algorithm control system which can exploit this knowledge from multiple sources to make better control decisions. We have also developed generic decision making techniques capable of utilizing relatively contradictory information from heterogeneous sources. This system utilizes a database to store fuzzy rules that relate the suitability of use of different control algorithms to the process conditions. To design and implement this fuzzy rule-base we utilize FERM (Fuzzy Entity-Relationship Methodology), a design methodology for fuzzy relational databases, to develop a generic data model for fuzzy rules. Although the resulting system is targeted for control of a semiconductor manufacturing process, the proposed techniques are generic and can be applied to other manufacturing and control applications to model and integrate control rules from heterogeneous sources. 
Abstract-found: 1
Intro-found: 1
Reference: [Bal87] <author> J. Baldwin, </author> <title> Evidential Support Logic Programming, </title> <booktitle> Fuzzy Sets and Systems 24 (1987), </booktitle> <pages> 1-26. </pages>
Reference-contexts: Some examples of expert systems using a high-level language include FLISP [Sos90] in which the language LISP is extended to allow representation and manipulation of fuzzy data; FuzzyCLIPS [FCL94] which is written in C; and FRIL <ref> [Bal87] </ref>, which is based on Prolog and extensions to logic programming. In [BuT89] a fuzzy expert system FLOPS is described, in which the notion of Upper and Lower confidence values for fuzzy rules is utilized. We have adapted this technique into our R2R system.
Reference: [Bal94] <author> J. Baldwin, </author> <title> FRIL: A Support Logic Programming System, in AI and Computer Power: The Impact on Statistics, </title> <editor> ed. D. Hand, </editor> <publisher> Chapman and Hall, </publisher> <year> 1994. </year>
Reference-contexts: Decision making for such a rule base, however, is not discussed in [BuT89], and hence we have proposed a method for such decision making in the present paper. <ref> [Bal94] </ref> discusses methods for combining evidence from rules in a rule base, where the grade of the rule is expressed as a probability interval (called the support pair), as opposed to a single grade as used in this paper.
Reference: [BuP82] <author> B. Buckles and F. Petry, </author> <title> A Fuzzy Representation for Relational Databases, </title> <booktitle> Fuzzy Sets and Systems 7 (1982), </booktitle> <pages> 213-226. </pages>
Reference-contexts: introduction to fuzzy RDBs <ref> [BuP82] </ref>, [Uma82], [PrT84],[RaM88]. 2.1 Fuzzy Sets Let U be a classical set of objects, called the universe of discourse, and let u denote an element of U.
Reference: [BuT89] <author> J. Buckley and D. Tucker, </author> <title> Second Generation Fuzzy Expert System, </title> <booktitle> Fuzzy Sets and Systems 31 (1989), </booktitle> <pages> 271-284. </pages>
Reference-contexts: If error &lt; 1 s, then Ultramax, a = 0.6. Rule 3. If error = low, then NOT LinearApp, a = 0.6. Now Rule 3s consequent is in conict with Rule 1s consequent. In this system we utilize the concepts used in the fuzzy expert system described in <ref> [BuT89] </ref> to handle contradictory information. A particular action may appear as a consequent in more than one rule. It may appear negated in some rules and non-negated in others. <p> Some examples of expert systems using a high-level language include FLISP [Sos90] in which the language LISP is extended to allow representation and manipulation of fuzzy data; FuzzyCLIPS [FCL94] which is written in C; and FRIL [Bal87], which is based on Prolog and extensions to logic programming. In <ref> [BuT89] </ref> a fuzzy expert system FLOPS is described, in which the notion of Upper and Lower confidence values for fuzzy rules is utilized. We have adapted this technique into our R2R system. <p> This particular representation with two confidences allows decision making based on, not only the evidence for a particular control algorithm, but also the evidence against that particular control algorithm. Decision making for such a rule base, however, is not discussed in <ref> [BuT89] </ref>, and hence we have proposed a method for such decision making in the present paper. [Bal94] discusses methods for combining evidence from rules in a rule base, where the grade of the rule is expressed as a probability interval (called the support pair), as opposed to a single grade as
Reference: [Che76] <author> P. Chen, </author> <title> The Entity-Relationship Model - Toward a Unified View of Data, </title> <journal> ACM TODS 1, </journal> <month> 1 (March </month> <year> 1976), </year> <pages> 9-36. </pages>
Reference-contexts: contains the description of the database design and implementation of the Fuzzy R2R Controller. 5.1 Fuzzy Entity-Relationship Methodology (FERM) In this sub-section we first review an ER design methodology for developing crisp RDBs and then describe our extensions to this methodology. 5.1.1 Traditional ER Model The Entity-Relationship (ER) data model, <ref> [Che76] </ref>, is one of the most popular paradigms for conceptual data modeling during the database design process and has been used as a basis for defining design methodologies for RDBs. The design methodology of [TYF86] outlines three steps for implementing RDBs from an ER schema.
Reference: [CMR94a] <author> N. Chaudhry, J. Moyne and E. Rundensteiner, </author> <title> A Design Methodology for Databases with Uncertain Data, </title> <booktitle> Proceedings of the Seventh International Working Conference on Scientific and Statistical Database Management, </booktitle> <month> September </month> <year> 1994, </year> <pages> 32-41. 20 </pages>
Reference-contexts: For this reason, concurrency control, querying mechanisms and other functionalities offered by the underlying database management system make such a system a more suitable platform compared to the use of an expert system shell. We now describe the design and implementation of the Controller database. As reported in <ref> [CMR94a] </ref>, we have developed FERM, an extended Fuzzy ER design Methodology to handle the modeling of imprecise data during the design phase of a database. Since we now propose to also manage rules in our R2R database, we must extend our fuzzy ER model to capture fuzzy rules. <p> An outline of some of the extensions carried out, by other researchers, to relational data theory are given in Appendix A. We have given a detailed description of the extensions carried out to the ER methodology in <ref> [CMR94a] </ref>, [CMR94b]. In this section, we only describe the DBFuzzi-fier construct, since we utilize the DBFuzzifier construct to incorporate knowledge from heterogeneous sources in our rule-base. DBFuzzifier: The Fuzzy R2R Controller is designed to allow adding rules from different sources.
Reference: [CMR94b] <author> N. Chaudhry, J. Moyne and E. Rundensteiner, </author> <title> Designing Databases with Fuzzy Data and Rules for Application to Discrete Control, </title> <institution> Electrical Engineering & Computer Science Dept., Computer Science and Engineering Division, University of Michigan, Ann Arbor, </institution> <type> Tech. Rep. </type> <institution> CSE-TR-224-94, </institution> <month> November </month> <year> 1994. </year>
Reference-contexts: The result is a methodology for capturing both fuzzy as well as rule data at the conceptual level. This methodology is general and here we outline its application to the design of the Fuzzy R2R Controller database. For more details the reader is referred to <ref> [CMR94b] </ref>. In Section 5.1 we give a brief outline of FERM. The application of FERM to model fuzzy rules is described in Section 5.2. <p> An outline of some of the extensions carried out, by other researchers, to relational data theory are given in Appendix A. We have given a detailed description of the extensions carried out to the ER methodology in [CMR94a], <ref> [CMR94b] </ref>. In this section, we only describe the DBFuzzi-fier construct, since we utilize the DBFuzzifier construct to incorporate knowledge from heterogeneous sources in our rule-base. DBFuzzifier: The Fuzzy R2R Controller is designed to allow adding rules from different sources. Precise rules may exist side by side with rules of thumb.
Reference: [CTM93] <author> N. Chaudhry, R. Telfeyan, B. Moore, H. Etemad and J. </author> <title> Moyne, A Run-to-Run Control Framework for VLSI Manufacturing, </title> <booktitle> Techcon 93 Conference Proceedings, </booktitle> <month> September </month> <year> 1993, </year> <pages> 31-33. </pages>
Reference-contexts: Run-to-Run (R2R) process control, which is a form of sequential (discrete) control that utilizes data from the last process run or a series of previous runs to derive a better model for the next run, is the most mature of these levels <ref> [CTM93] </ref>. One of the tasks of the R2R process controller is to invoke various control algorithms to tweak the process parameters, so as to better achieve the process targets. After each run of the process, the run data is given as input to the R2R controller.
Reference: [FCL94] <author> FuzzyCLIPS Version 6.02, </author> <title> Users Guide, </title> <institution> Knowledge Systems Laboratory, Institute for Information Technology, National Research Council Canada. </institution>
Reference-contexts: Fuzzy rule systems previously have been implemented primarily as expert systems, rather than using a database system. Some examples of expert systems using a high-level language include FLISP [Sos90] in which the language LISP is extended to allow representation and manipulation of fuzzy data; FuzzyCLIPS <ref> [FCL94] </ref> which is written in C; and FRIL [Bal87], which is based on Prolog and extensions to logic programming. In [BuT89] a fuzzy expert system FLOPS is described, in which the notion of Upper and Lower confidence values for fuzzy rules is utilized.
Reference: [Lee90] <author> C. Lee, </author> <title> Fuzzy Logic in Control Systems: </title> <journal> Fuzzy Logic Controller-Part 1, IEEE Transactions on Systems, Man, and Cybernetics 20, </journal> <volume> 2 (March/April 1990), </volume> <pages> 404-418. </pages>
Reference-contexts: Note that, unlike crisp sets, the fuzzy sets modeling the natural language terms like low, medium etc. will not have sharp boundaries and hence theses sets represent a more natural model of these terms. We adapt the fuzzification operator defined in <ref> [Lee90] </ref> for this purpose. This operator has the effect of transforming crisp data into fuzzy data and is defined by: x = fuzzifier (x o ) where x o is a crisp input value from a process; x is a fuzzy set. <p> In particular, to our knowledge, fuzzy databases have not been previously utilized for control of semiconductor manufacturing, even though fuzzy theory has been used for control applications <ref> [Lee90] </ref>. Researchers have applied Statistical Process Control (SPC) techniques to choose between different modes of a particular algorithm [SHI95]. However, the resulting systems are static; they only choose between the different modes and have no provisions for extension to choose between an arbitrary number of different algorithms.
Reference: [MCT95] <author> J. Moyne, N. Chaudhry, R. Telfeyan, </author> <title> Adaptive Extensions to a Multi-Branch Run-to-Run Controller for Plasma Etching Journal of Vacuum Science and Technology, </title> <month> May/June </month> <year> 1995. </year>
Reference-contexts: A description of how the Fuzzy R2R Controller fits in an overall control framework is given in <ref> [MCT95] </ref>; here we focus on the implementation of the Controller database. Step 1. Constructing an extended fuzzy ER data model: The ER model of the complete R2R system must capture the representation of both the rules and the data/facts to which these rules will match.
Reference: [MEE93] <author> J. Moyne, H. Etemad and M. Elta, </author> <title> A Run-to-Run Control Framework for VLSI Manufacturing, </title> <booktitle> SPIE Conference on Microelectronic Processes, Sensors, and Controls, </booktitle> <month> (Sep. </month> <year> 1993), </year> <pages> 379-390. </pages>
Reference-contexts: The scope of application of these algorithms is not very well-defined. However, there does not appear to exist any single algorithm that may be used throughout the entire range of R2R control and optimization, <ref> [MEE93] </ref>. Fortunately, the ranges of applicability of these algorithms can be roughly expressed in terms of the process being near or far from its optimum. It is important to exploit this knowledge - even if vague - to aid in the selection of control algorithms.
Reference: [Moy91] <author> J. </author> <title> Moyne, Generic Cell Controlling Method and Apparatus for Computer Integrated Manufacturing System, United States Patent, </title> <journal> Patent Number 5,469,361, </journal> <note> (Filed, August 1991; Issued, </note> <month> November </month> <year> 1995). </year>
Reference-contexts: portability of the implementation, since porting from one semiconductor process to another requires only the rules in the database to be changed. 6 Related Work The use of databases as a framework for implementing R2R control is a relatively new approach towards developing generic and exible solutions for semiconductor manufacturing <ref> [Moy91] </ref>. In particular, to our knowledge, fuzzy databases have not been previously utilized for control of semiconductor manufacturing, even though fuzzy theory has been used for control applications [Lee90]. Researchers have applied Statistical Process Control (SPC) techniques to choose between different modes of a particular algorithm [SHI95].
Reference: [PrT84] <author> H. Prade and C. Testemale, </author> <title> Generalizing Database Relational Algebra for the Treatment of Incomplete or Uncertain Information and Vague Queries, </title> <booktitle> Information Sciences 34 (1984), </booktitle> <pages> 115-143. </pages>
Reference: [RaM88] <author> K. Raju and A. Majumdar, </author> <title> Fuzzy Functional Dependencies and Lossless Join Decomposition of Fuzzy Relational Database Systems, </title> <journal> ACM TODS 13, </journal> <month> 2 (June </month> <year> 1988), </year> <pages> 129-166. </pages>
Reference-contexts: A tuple in such a relation has the form: . Relational operators have been extended for operating on fuzzy relations and the concept of functional dependencies has been extended to fuzzy functional dependencies <ref> [RaM88] </ref>. A brief discussion appears in Appendix A. 3 Run-to-Run Control of Semiconductor Manufacturing A multi-level control framework is being developed at the University of Michigan to provide control of semiconductor fabrication processes. The different control levels in this framework are run-to-run control, process control and equipment environment control.
Reference: [RuB92] <author> E. Rundensteiner and L. Bic, </author> <title> Evaluating Aggregates in Possibilistic Relational Databases, </title> <journal> Data and Knowledge Engineering Journal 7, </journal> <year> 1992, </year> <month> 239--267. </month>
Reference-contexts: Possibility Distribution: A possibility distribution for a variable A defined on the domain of discourse U can be defined by a fuzzy subset F of U in the following way <ref> [RuB92] </ref>: The degree of possibility that the given variable A takes u as value is equal to the membership value of u in F. Formally, the membership function m F is identical to the possibility distribution function , i.e., . <p> First, we present the fuzzy relation construct that expresses the imprecision in the degree of membership of a tuple in a relation, and then the possibilistic relation construct that expresses the imprecision in a data value <ref> [RuB92] </ref>. Fuzzy Relation: Let U be the Cartesian product of n universes of discourse U 1 , U 2 , ..., U n .
Reference: [SHI95] <author> E. Sachs, A. Hu and A. Ingolfsson, </author> <title> Run by Run Process Control: Combining SPC and Feedback Control, </title> <journal> IEEE Transactions on Semiconductor Manufacturing 8, </journal> <month> 1 (February </month> <year> 1995), </year> <pages> 26-43. </pages>
Reference-contexts: 2 ,( ) t j P j A 1 ( ) P j A 2 ( ) P j A n ( ), ,( , )= 5 In recent years, various algorithms have been developed for R2R optimization and control, e.g., Ultramax 1 , and a linear approximation-based control algorithm <ref> [SHI95] </ref>. The scope of application of these algorithms is not very well-defined. However, there does not appear to exist any single algorithm that may be used throughout the entire range of R2R control and optimization, [MEE93]. <p> In particular, to our knowledge, fuzzy databases have not been previously utilized for control of semiconductor manufacturing, even though fuzzy theory has been used for control applications [Lee90]. Researchers have applied Statistical Process Control (SPC) techniques to choose between different modes of a particular algorithm <ref> [SHI95] </ref>. However, the resulting systems are static; they only choose between the different modes and have no provisions for extension to choose between an arbitrary number of different algorithms. No general framework has been previously developed for incorporating different types of rules which decide among an arbitrary number of algorithms.
Reference: [Sin94] <author> P. Singer, Chemical-Mechanical Polishing: </author> <title> A New Focus on Consumables, </title> <booktitle> Semiconductor International, </booktitle> <month> Feb. </month> <year> 1994, </year> <pages> 48-52. </pages>
Reference-contexts: The implementation resides on a Sun SPARC workstation using an Oracle database. One of the processes currently being controlled is a Chemical-mechanical Polishing (CMP) process which is becoming increasingly popular to planarize VLSI manufacturing wafers containing devices with geometries of 0.35 mm or less <ref> [Sin94] </ref>. The techniques presented in this paper have been applied to develop a Fuzzy R2R Controller for application to controlling a CMP process. Results indicate that the implementation is indeed capable of utilizing multiple optimization and control algorithms in complementary fashion, switching between these algorithms as the process conditions change.
Reference: [Sos90] <author> Z. Sosnowski, </author> <title> FLISP - A Language for Processing Fuzzy Data, Fuzzy Sets and Systems, </title> <booktitle> 37 (1990), </booktitle> <pages> 23-32. </pages>
Reference-contexts: To our knowledge no work has been carried out for ER design of fuzzy rules. Fuzzy rule systems previously have been implemented primarily as expert systems, rather than using a database system. Some examples of expert systems using a high-level language include FLISP <ref> [Sos90] </ref> in which the language LISP is extended to allow representation and manipulation of fuzzy data; FuzzyCLIPS [FCL94] which is written in C; and FRIL [Bal87], which is based on Prolog and extensions to logic programming.
Reference: [Spa92] <author> C. Spanos, </author> <title> Statistical Process Control in Semiconductor Manufacturing, </title> <booktitle> Proceedings of the IEEE, </booktitle> <month> June </month> <year> 1992. </year>
Reference-contexts: These rules will most likely be expressed in terms of natural language with many vague and imprecise terms. In addition there may be generic Statistical Process Control (SPC) rules <ref> [Spa92] </ref>, and other mathematical rules formulated from an analysis of the available control algorithms, that provide a general indication of the suitability of an algorithm to the optimization/control of the current process run.
Reference: [TYF86] <author> T. Teorey, D. Yang and J. Fry, </author> <title> A Logical Design Methodology for Relational Databases Using the Extended Entity-Relationship Model, </title> <journal> ACM Computing Surveys 18, </journal> <month> 2 (June </month> <year> 1986) </year> <month> 197-222. </month>
Reference-contexts: The design methodology of <ref> [TYF86] </ref> outlines three steps for implementing RDBs from an ER schema. The steps may be given as: FIGURE 3. Strategy for action selection for the best conclusion. 11 Step 1. ER modeling of the application requirements: The data requirements are analyzed and modeled using an ER diagram.
Reference: [Uma82] <author> M. Umano, Freedom-0: </author> <title> A Fuzzy DB System, in Fuzzy Information and Decision Processes, </title> <editor> editors. M. Gupta and E. Sanchez, </editor> <publisher> North-Holland, </publisher> <year> 1982. </year>
Reference-contexts: introduction to fuzzy RDBs [BuP82], <ref> [Uma82] </ref>, [PrT84],[RaM88]. 2.1 Fuzzy Sets Let U be a classical set of objects, called the universe of discourse, and let u denote an element of U.
Reference: [WiC96] <author> J. Widom and S. Ceri (editors), </author> <title> Active Database Systems: Triggers and Rules for Advanced Database Processing, </title> <publisher> Morgan Kaufmann, </publisher> <year> 1996. </year> <month> 21 </month>
Reference-contexts: Issues such as indexing or partial matching of predicates to provide better support for rule processing also need to be studied. It would also be interesting to look at the pros and cons of building such a system using active database technology <ref> [WiC96] </ref>. Acknowledgment This research was sponsored by the Semiconductor Research Corporation, the Center for Display Technology & Manufacturing, University of Michigan, and Compugenesis, Inc. The authors would like to thank Matthew Jones, Roland Telfeyan, Hossein Etemad, John Taylor and Arnon Hurwitz for their support.
Reference: [Zad65] <author> L. Zadeh, </author> <title> Fuzzy Sets, </title> <booktitle> Information and Control 8 (1965), </booktitle> <pages> 338-353. </pages>
Reference: [ZvC86] <author> A. Zvieli and P. Chen, </author> <title> ER modeling and fuzzy databases, </title> <booktitle> in Proceedings of the 2nd International Conference on Data Engineering (1986), </booktitle> <pages> 320-327. </pages>
Reference-contexts: Little work has been done in either extending higher-level conceptual data models or database design methodologies to incorporate fuzziness. The only effort that we are aware of, in the area of fuzzy ER modeling, is by Zvieli and Chen <ref> [ZvC86] </ref>. In [ZvC86] fuzziness is considered at three levels. The first level models fuzziness of an object (entity or relationship) relating to its presence in the model. The second level relates to modeling the fuzziness of occurrence of specific entity instances or relationships in the corresponding entity/relationship set. <p> Little work has been done in either extending higher-level conceptual data models or database design methodologies to incorporate fuzziness. The only effort that we are aware of, in the area of fuzzy ER modeling, is by Zvieli and Chen <ref> [ZvC86] </ref>. In [ZvC86] fuzziness is considered at three levels. The first level models fuzziness of an object (entity or relationship) relating to its presence in the model. The second level relates to modeling the fuzziness of occurrence of specific entity instances or relationships in the corresponding entity/relationship set. <p> The second level relates to modeling the fuzziness of occurrence of specific entity instances or relationships in the corresponding entity/relationship set. In the third level attributes 18 of a specific entity/relationship may be fuzzy. Levels two and three are expressed in the ER model of <ref> [ZvC86] </ref> by attaching the letter f with the fuzzy entity/relationship/attribute. To our knowledge no work has been carried out for ER design of fuzzy rules. Fuzzy rule systems previously have been implemented primarily as expert systems, rather than using a database system.
References-found: 25

