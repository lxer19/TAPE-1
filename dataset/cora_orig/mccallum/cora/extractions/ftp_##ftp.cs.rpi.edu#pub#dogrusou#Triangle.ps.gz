URL: ftp://ftp.cs.rpi.edu/pub/dogrusou/Triangle.ps.gz
Refering-URL: http://www.ing.unlp.edu.ar/cetad/mos/Hamilton.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Phone: 2  
Title: Triangle Graphs  
Author: Messaoud Benantar Ugur Dogrusoz Joseph E. Flaherty and Mukkai S. Krishnamoorthy 
Date: April 10, 1995  
Address: MS 105, Neighborhood Road, Kingston, NY 12401  Troy, NY 12180  
Affiliation: 1 Large Scale Computing Division, IBM Corporation,  Department of Computer Science, Rensselaer Polytechnic Institute,  
Abstract: We introduce a new class of planar graphs called triangle graphs. First, we present a formal way of constructing and characterizing triangle graphs, and then show that they characterize the adjacencies of arbitrary triangulations and they are three-colorable for a certain subclass of triangulations. Subsequently, we discuss an application of triangle graphs to the parallel finite element solution of elliptic partial differential equations on triangulated domains.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Farhat and F. Roux, </author> <title> "An Unconventional Domain Decomposition Method for Efficient Parallel Solution of Large-Scale Finite Element Systems," </title> <journal> SIAM J. Sci. Stat. Comput., </journal> <volume> Vol. 13, </volume> <pages> pp. 379-396, </pages> <year> 1992. </year>
Reference: [2] <author> S. Hutchinson, E. Hensel and S. Castillo, </author> <title> "The Finite Element Solution of Elliptical Systems on a Data Parallel Computer," </title> <journal> Int. J. Num. Meth. Engng., </journal> <volume> Vol. 32, </volume> <pages> pp. 347-362, </pages> <year> 1991. </year>
Reference: [3] <author> G. Yagawa, N. Soneda and S. Yoshimura, </author> <title> "A Large Scale Finite Element Analysis Using Domain Decomposition Method on a Parallel Computer," </title> <journal> Computers and Structures, </journal> <volume> Vol. 38, </volume> <pages> pp. 615-625, </pages> <year> 1991. </year> <title> 11 the Dirichlet Problem (1,2). </title> <type> 12 </type>
Reference: [4] <author> S. Succi and M. Benassi, </author> <title> "A Four-Color Parallel Algorithm for the Solution of a Two-Dimensional Advection-Diffusion Equation with the Finite Element Method," </title> <journal> J. Sci. Comput., </journal> <volume> Vol. 4, </volume> <pages> pp. 61-70, </pages> <year> 1989. </year>
Reference: [5] <author> M. Benantar, </author> <title> Parallel and Adaptive Algorithms for Elliptic Partial Differential Systems, </title> <type> Ph.D. Dissertation, </type> <institution> Department of Computer Science, Rensselaer Polytechnic Institute, Troy, </institution> <year> 1992. </year>
Reference: [6] <author> M. Benantar, J. E. Flaherty and M. S. Krishnamoorthy, </author> <title> "Coloring Procedures for Finite Element Computation on Shared-Memory Parallel Computers," AMD-Vol. 157, Adaptive, Multilevel, and Hierarchical Computational Strategies, </title> <editor> A. K. Noor Ed., </editor> <booktitle> ASME, </booktitle> <address> New York, </address> <pages> pp. 435-449, </pages> <year> 1992. </year>
Reference-contexts: SSOR iterations are performed in parallel by sweeping the edges corresponding to each color [5,6]. Process synchronization is only needed at the end of each queue of colors; thus, any load imbalance is extremely minor. The minimal (three) colors ensure a fine granularity that improves with increasing polynomial degree <ref> [6] </ref>.
Reference: [7] <author> P. L. Baehmann, S. L. Wittchen, M. S. Shephard, K. R. Grice and M. A. Yerry, </author> <title> "Robust Geometrically Based, Automatic Two-Dimensional Mesh Generation," </title> <journal> Int. J. Num. Meths. Engng., </journal> <volume> Vol. 24, </volume> <pages> pp. 1043-1078, </pages> <year> 1987. </year>
Reference-contexts: Air Force Office of Scientific Research, Air Force Systems Command, USAF, under Grant Number AFOSR F49620-93-1-0218, and by the U.S. Army Research Office under Grant Number DAAL-03-91-G-0215. 1 the domain's boundary <ref> [7] </ref>. This process leads to a quadtree dissection of the domain with nodes of the tree representing square regions called quadrants. Quadrants at terminal tree nodes may be further divided or distorted to produce the triangular, quadrilateral or mixed mesh.
Reference: [8] <author> F. Harary, </author> <title> Graph Theory, </title> <publisher> Addison Wesley, </publisher> <address> Reading, </address> <year> 1969. </year>
Reference-contexts: Remark: This notion of edge adjacency differs from its normal definition for line graphs <ref> [8] </ref>. Theorem 2: The edge adjacency graph of an arbitrary triangular grid is a triangle graph. Proof: We use induction on the number of the triangular elements of the grid. A single triangular finite element maps onto a single element of its triangle graph representation.
Reference: [9] <author> T. Nishizeki and N. Chiba, </author> <title> Planar Graphs: Theory and Algorithms, </title> <publisher> Elsevier Science Publishers B. V., North-Holland, </publisher> <year> 1988. </year>
Reference: [10] <author> H. Whitney, </author> <title> "Planar Graphs," </title> <journal> Fund. Math. </journal> <volume> ,Vol. 20, </volume> <pages> pp. 73-84, </pages> <year> 1933. </year>
Reference: [11] <author> M. Benantar, R. Biswas, </author> <title> J.E. Flaherty and M.S. Shephard, "Parallel Computation with Adaptive Methods for Elliptic and Hyperbolic Systems," </title> <journal> Comput. Meths. Appl. Mech. Engrg., </journal> <volume> Vol. 82, </volume> <pages> pp. 73-93, </pages> <year> 1990. </year>
Reference-contexts: Quadrants at terminal tree nodes may be further divided or distorted to produce the triangular, quadrilateral or mixed mesh. This procedure extends to three-dimensional domains using an octree decomposition of the domain [14]. Benantar et al. <ref> [11] </ref> developed a "coloring" procedure that separated contiguous terminal quadrants in order to process quadrants having the same color in parallel without conflict on shared-memory computers. Algorithms using a maximum of six and eight colors were described with the six-color procedure providing superior performance [11] due to the finer data granularity. <p> Benantar et al. <ref> [11] </ref> developed a "coloring" procedure that separated contiguous terminal quadrants in order to process quadrants having the same color in parallel without conflict on shared-memory computers. Algorithms using a maximum of six and eight colors were described with the six-color procedure providing superior performance [11] due to the finer data granularity. When used with finite element computations, data associated with all elements in a quadrant was generated and assembled into the global algebraic system, which was solved in parallel by colors using a preconditioned conjugate gradient method [11]. <p> with the six-color procedure providing superior performance <ref> [11] </ref> due to the finer data granularity. When used with finite element computations, data associated with all elements in a quadrant was generated and assembled into the global algebraic system, which was solved in parallel by colors using a preconditioned conjugate gradient method [11]. Performance of the six-color procedure, as measured by parallel speed-up, was good when piecewise linear finite element approximations were used [11]; however, performance degraded with increasing polynomial degree. <p> associated with all elements in a quadrant was generated and assembled into the global algebraic system, which was solved in parallel by colors using a preconditioned conjugate gradient method <ref> [11] </ref>. Performance of the six-color procedure, as measured by parallel speed-up, was good when piecewise linear finite element approximations were used [11]; however, performance degraded with increasing polynomial degree. A finite element approximation typically converges to the exact solution of the partial differential system as either the number of elements or the degree of the polynomial tends to infinity. <p> Using this algorithm, independent sets of triangular element edges may be processed in parallel with a minimum number of colors; thus, the procedure has the finest data granularity. An example (cf. Section 4) indicates the superior performance of the edge-coloring procedure relative to quadrant coloring <ref> [11] </ref>. We close with some concluding remarks (cf. Section 5). 2. Triangle Graphs We introduce some basic material relevant to triangle graphs. <p> The resulting linear algebraic system is solved using a preconditioned conjugate gradient method with a symmetric successive over relaxation (SSOR) preconditioning <ref> [11] </ref>. SSOR iterations are performed in parallel by sweeping the edges corresponding to each color [5,6]. Process synchronization is only needed at the end of each queue of colors; thus, any load imbalance is extremely minor.
Reference: [12] <author> E. B. Becker, G. F. Carey, and J. T. Oden, </author> <title> Finite Elements: An Introduction, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, </address> <year> 1981. </year>
Reference: [13] <author> B. Szabo and I. Babuska, </author> <title> Finite Element Analysis, </title> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1991. </year>
Reference: [14] <author> M. S. Shephard and M. K. Georges, </author> <title> "Automatic Three-Dimensional Mesh Gen-erationby the Finite Octree Technique," </title> <journal> Int. J. Num. Meth. Engng., </journal> <volume> Vol. 32, </volume> <pages> pp. 709-739, </pages> <year> 1991. </year>
Reference-contexts: Quadrants at terminal tree nodes may be further divided or distorted to produce the triangular, quadrilateral or mixed mesh. This procedure extends to three-dimensional domains using an octree decomposition of the domain <ref> [14] </ref>. Benantar et al. [11] developed a "coloring" procedure that separated contiguous terminal quadrants in order to process quadrants having the same color in parallel without conflict on shared-memory computers.
Reference: [15] <author> S. Adjerid, J. E. Flaherty, P. K. Moore, and Y. J. Wang, </author> <title> "High-Order Adaptive Methods for Parabolic Systems," </title> <journal> Physica D, </journal> <volume> Vol. 60, </volume> <pages> pp. 94-111, </pages> <year> 1992. </year>
Reference-contexts: A finite element approximation typically converges to the exact solution of the partial differential system as either the number of elements or the degree of the polynomial tends to infinity. Recent experience suggests that the latter approach is the more efficient <ref> [15] </ref> and that techniques that simultaneously refine elements of the mesh while increasing the degree of the polynomials often have exponential convergence rates, even with singular solutions [16].
Reference: [16] <author> E. Rank and I. Babuska, </author> <title> "An Expert System for the Optimal Mesh Design in the hp-Version of the Finite Element Method," </title> <journal> Int. J. Num. Meth. Engng., </journal> <volume> Vol. 24, </volume> <pages> pp. 2087-2106, </pages> <year> 1987. </year>
Reference-contexts: Recent experience suggests that the latter approach is the more efficient [15] and that techniques that simultaneously refine elements of the mesh while increasing the degree of the polynomials often have exponential convergence rates, even with singular solutions <ref> [16] </ref>. In summary, as the degree of the piecewise polynomial approximation increases, (i) serial efficiency increases, (ii) parallel performance of quadrant-coloring procedures decrease and (iii) the number of edge and face nodes increases; hence, it is natural to consider algorithms that separate contiguous element edges or faces by color.
Reference: [17] <author> R. Biswas and R. Strawn, </author> <title> "A New Procedure for Dynamic Adaption of Three-Dimensional Unstructured Grids, Paper AIAA-93-0672, </title> <booktitle> 31th Aerosciences Meeting and Exhibit, </booktitle> <address> Reno, </address> <year> 1993. </year> <month> 13 </month>
Reference-contexts: However, an alternate possibility would separate contiguous edges of tetrahedral finite elements. Graphs based on the latest approach would have a more complex structure than the former, but recent results indicate computational advantages of three-dimensional edge-based procedures <ref> [17] </ref>.
References-found: 17

