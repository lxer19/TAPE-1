URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1996/1996-41.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: fhansb,jan,rbtan,sedthilkg@cs.ruu.nl  
Phone: 2  
Title: On Interval Routing Schemes and Treewidth  
Author: Hans L. Bodlaender Jan van Leeuwen Richard Tan ; and Dimitrios M. Thilikos 
Address: P.O. Box 80.089 3508 TB Utrecht, the Netherlands  73018, USA  
Affiliation: 1 Department of Computer Science, Utrecht University,  Department of Computer Science, University of Sciences and Arts of Oklahoma Chickasha, Oklahoma  
Abstract: In this paper, we investigate which processor networks allow k-label Interval Routing Schemes, under the assumption that costs of edges may vary. We show that for each fixed k 1, the class of graphs allowing such routing schemes is closed under minor-taking in the domain of connected graphs, and hence has a linear time recognition algorithm. This result connects the theory of compact routing with the theory of graph minors and treewidth. We show that every graph that does not contain K 2;r as a minor has treewidth at most 2r 2. In case the graph is planar, this bound can be lowered to r + 2. As a consequence, graphs that allow k-label Interval Routing Schemes under dynamic cost edges have treewidth at most 4k, and treewidth at most 2k + 3 if they are planar. Similar results are shown for other types of Interval Routing Schemes. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Arnborg, J. Lagergren, and D. Seese. </author> <title> Easy problems for tree-decomposable graphs. </title> <journal> J. Algorithms, </journal> <volume> 12 </volume> <pages> 308-340, </pages> <year> 1991. </year>
Reference-contexts: for every fixed integer k and graph H, there exists a linear time algorithm, such that when given a graph G = (V; E) with a tree-decomposition of treewidth at most k, decides whether H is a minor of G, using standard methods for graphs with bounded treewidth (see e.g. <ref> [1] </ref>.) As such tree-decompositions can be found in linear time [5], when existing, the following result holds: Theorem 4 Let G be a class of graphs that is closed under taking of minors, and that does not contain all planar graphs. <p> ; a k+1 ; b 1 ; : : : ; b k+1 , the existence of T fulfilling the given properties can be formulated in Monadic Second Order Logic, and hence be decided (with an algorithm that can be constructed) in linear time for graphs of bounded treewidth (see <ref> [1, 10, 12] </ref>). As we must make in total less than jEj n 2k+1 k = O (n 2k+2 ) checks, the time bound follows.
Reference: [2] <editor> E. M. Bakker, J. van Leeuwen, and R. B. Tan. </editor> <booktitle> Work in progress. </booktitle>
Reference-contexts: Actually, they considered a variant of interval routing, called strict interval routing. For these, they gave a precise characterisation of the graphs with dynamic cost links which allow optimum strict interval routing schemes: these are exactly the outerplanar graphs. Bakker, van Leeuwen and Tan <ref> [2] </ref> obtained a similar result for general interval routing: a graph with dynamic cost links has an optimum interval routing scheme, if and only if it is outerplanar or K 4 . Another restriction of interval routing was introduced by Bakker, van Leeuwen, and Tan in [3]: linear interval routing. <p> As 1-SIRS equals the class of connected outerplanar graphs [15], and outerplanar graphs have treewidth at most 2, every graph in 1-SIRS has treewidth at most 2. Similarly, the charac-terisations of 1-LIRS in [3] and of 1-SIRS in <ref> [2] </ref> show that every graph in 1-LIRS has treewidth (and even pathwidth) at most 2, and every graph in 1-IRS has treewidth at most 3, and has treewidth at most 2 if it is not equal to K 4 . The results also have consequences for random graphs.
Reference: [3] <author> E. M. Bakker, J. van Leeuwen, and R. B. Tan. </author> <title> Linear interval routing schemes. </title> <journal> Algorithms Review, </journal> <volume> 2 </volume> <pages> 45-61, </pages> <year> 1991. </year>
Reference-contexts: Another restriction of interval routing was introduced by Bakker, van Leeuwen, and Tan in <ref> [3] </ref>: linear interval routing. It has also been applied in concrete networks. Here, also a precise characterisation exists of the graphs which allow optimum linear interval routing schemes with dynamic cost links. <p> In the same way, we define classes k-LIRS, k-SIRS, k-SLIRS. See [19] for an overview of several results on these classes. We have the following relationships. Theorem 6 (i) (Frederickson, Janardan [15]) k-IRS (k + 1)-IRS. (ii) (Bakker, van Leeuwen, Tan <ref> [3] </ref>) k-LIRS (k + 1)-LIRS. (iii) (Bakker, van Leeuwen, Tan [3]) k-IRS (k + 1)-LIRS. (iv) k-SIRS k-IRS (k + 1)-SIRS. (v) k-SLIRS k-LIRS k-IRS. 3 Closedness under minor taking In this section we prove that for each fixed integer k 1, each of the classes k-IRS, k-LIRS, k-SIRS and k-SLIRS <p> See [19] for an overview of several results on these classes. We have the following relationships. Theorem 6 (i) (Frederickson, Janardan [15]) k-IRS (k + 1)-IRS. (ii) (Bakker, van Leeuwen, Tan <ref> [3] </ref>) k-LIRS (k + 1)-LIRS. (iii) (Bakker, van Leeuwen, Tan [3]) k-IRS (k + 1)-LIRS. (iv) k-SIRS k-IRS (k + 1)-SIRS. (v) k-SLIRS k-LIRS k-IRS. 3 Closedness under minor taking In this section we prove that for each fixed integer k 1, each of the classes k-IRS, k-LIRS, k-SIRS and k-SLIRS is closed under taking of minors in the domain of <p> As 1-SIRS equals the class of connected outerplanar graphs [15], and outerplanar graphs have treewidth at most 2, every graph in 1-SIRS has treewidth at most 2. Similarly, the charac-terisations of 1-LIRS in <ref> [3] </ref> and of 1-SIRS in [2] show that every graph in 1-LIRS has treewidth (and even pathwidth) at most 2, and every graph in 1-IRS has treewidth at most 3, and has treewidth at most 2 if it is not equal to K 4 .
Reference: [4] <author> D. Bienstock, N. Robertson, P. D. Seymour, and R. Thomas. </author> <title> Quickly excluding a forest. </title> <journal> J. Comb. Theory Series B, </journal> <volume> 52 </volume> <pages> 274-283, </pages> <year> 1991. </year>
Reference-contexts: Similar results for other specific graphs can be found in <ref> [4] </ref> (trees), [14] (cycles and subgraphs of cycles), [7] (disjoint copies of K 3 ), and [6] (graphs that are minor of a circus graph and (2fik)- grid). The result of this main lemma can be seen as an additional result, fitting into this framework.
Reference: [5] <author> H. L. Bodlaender. </author> <title> A linear time algorithm for finding tree-decompositions of small treewidth. </title> <booktitle> In Proceedings of the 25th Annual Symposium on Theory of Computing, </booktitle> <pages> pages 226-234, </pages> <address> New York, </address> <year> 1993. </year> <note> ACM Press. To appear in: SIAM J. Comput., </note> <year> 1996. </year>
Reference-contexts: a linear time algorithm, such that when given a graph G = (V; E) with a tree-decomposition of treewidth at most k, decides whether H is a minor of G, using standard methods for graphs with bounded treewidth (see e.g. [1].) As such tree-decompositions can be found in linear time <ref> [5] </ref>, when existing, the following result holds: Theorem 4 Let G be a class of graphs that is closed under taking of minors, and that does not contain all planar graphs. Then there exists a linear time algorithm that tests whether a given graph G belongs to G. <p> Then there exists a linear time algorithm that tests whether a given graph G belongs to G. Proof: (This proof is basically taken from [13], but we now use the algorithm of <ref> [5] </ref> for finding tree-decomposition of small treewidth.) Suppose G is a planar graph that does not belong to G. First test whether the treewidth of input graph G is at most c H . If not, we can safely conclude that G 62 G. <p> First test whether the treewidth of input graph G is at most c H . If not, we can safely conclude that G 62 G. Otherwise, find a tree-decomposition of G of treewidth at most c H with the algorithm of <ref> [5] </ref>, and use this tree-decomposition to test whether a graph in ob (G) is a minor of G. ut Theorem 5 Let G be a class of graphs that is closed under taking of minors in the domain H, G H. <p> Proof: We consider the algorithm for checking existence of an optimal k-SIRS. First, we use the algorithm from <ref> [5] </ref> to check in linear time whether the treewidth of G is at most 4k, and if so, to build a tree-decomposition of G of treewidth at most 4k. <p> to construct linear time algorithms that test whether a given graph belongs to k-IRS or one of its variants, for a fixed k? In several other cases, a non-constructive proof of a linear or small degree polynomial time bound was only the first step towards a fully constructive solution (e.g., <ref> [5] </ref>). Will our Corollary 10 also be such a first step? But even if we know that a graph belongs to k-IRS (or a related class), we do not have a corresponding node labelling.
Reference: [6] <author> H. L. Bodlaender. </author> <title> On linear time minor tests with depth first search. </title> <journal> J. Algorithms, </journal> <volume> 14 </volume> <pages> 1-23, </pages> <year> 1993. </year>
Reference-contexts: Similar results for other specific graphs can be found in [4] (trees), [14] (cycles and subgraphs of cycles), [7] (disjoint copies of K 3 ), and <ref> [6] </ref> (graphs that are minor of a circus graph and (2fik)- grid). The result of this main lemma can be seen as an additional result, fitting into this framework. <p> Also, we define CL (D r ) = fCL (R) : R 2 Dg. Let V 3 = fv 3 m g. Lemma 17 (See <ref> [6] </ref>.) For any graph G = (V; E), either K 1;r is a minor of G or treewidth (G) r 1. Proof: W.l.o.g., suppose that G is connected. Take an arbitrary depth first search tree T of G.
Reference: [7] <author> H. L. Bodlaender. </author> <title> On disjoint cycles. </title> <journal> Int. J. Found. Computer Science, </journal> <volume> 5(1) </volume> <pages> 59-68, </pages> <year> 1994. </year>
Reference-contexts: Similar results for other specific graphs can be found in [4] (trees), [14] (cycles and subgraphs of cycles), <ref> [7] </ref> (disjoint copies of K 3 ), and [6] (graphs that are minor of a circus graph and (2fik)- grid). The result of this main lemma can be seen as an additional result, fitting into this framework.
Reference: [8] <author> H. L. Bodlaender and R. H. Mohring. </author> <title> The pathwidth and treewidth of cographs. </title> <journal> SIAM J. Disc. Meth., </journal> <volume> 6 </volume> <pages> 181-188, </pages> <year> 1993. </year>
Reference-contexts: with all its descendants, and then remove all vertices not in X v .) For all v, if jY v j r 1 then (fX v j v 2 V g; T ) is a tree-decomposition of G of treewidth at most r 1. ut 13 Lemma 18 (See e.g., <ref> [8] </ref>.) Let (fX i ; i 2 Ig; T ) be a tree-decomposition of graph G = (V; E). For any clique K of G, there exists an i 2 I with V (K) X i .
Reference: [9] <author> B. Bollobas. </author> <title> Random Graphs. </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1985. </year> <month> 33 </month>
Reference-contexts: The results also have consequences for random graphs. We mention some results, obtained by Kloks [17]. Let G n;m denote a random graph with n vertices and m edges. For a precise meaning of the term `almost every' we refer to [17] or <ref> [9] </ref>. Theorem 23 (Kloks [17]) (i) Let ffi &gt; 1:18.
Reference: [10] <author> R. B. Borie, R. G. Parker, and C. A. Tovey. </author> <title> Automatic generation of linear--time algorithms from predicate calculus descriptions of problems on recursively constructed graph families. </title> <journal> Algorithmica, </journal> <volume> 7 </volume> <pages> 555-581, </pages> <year> 1992. </year>
Reference-contexts: ; a k+1 ; b 1 ; : : : ; b k+1 , the existence of T fulfilling the given properties can be formulated in Monadic Second Order Logic, and hence be decided (with an algorithm that can be constructed) in linear time for graphs of bounded treewidth (see <ref> [1, 10, 12] </ref>). As we must make in total less than jEj n 2k+1 k = O (n 2k+2 ) checks, the time bound follows.
Reference: [11] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Mass., USA, </address> <year> 1989. </year>
Reference-contexts: (b k+1 ) or nb (a k+1 ). (It is easy to see that this can be done: in general, pick vertices whose number is between d j and c j+1 .) Let T be the shortest paths tree containing shortest paths from v to all other vertices. (See e.g. <ref> [11] </ref>, Chapter 25.) The paths in T from v to a vertex a i , 1 i k + 1 must use the edge fv; wg, while the paths in T from v to a vertex b i do not use this edge. ut Similar results can be shown for k-IRS,
Reference: [12] <author> B. Courcelle. </author> <title> The monadic second-order logic of graphs I: Recognizable sets of finite graphs. </title> <journal> Information and Computation, </journal> <volume> 85 </volume> <pages> 12-75, </pages> <year> 1990. </year>
Reference-contexts: ; a k+1 ; b 1 ; : : : ; b k+1 , the existence of T fulfilling the given properties can be formulated in Monadic Second Order Logic, and hence be decided (with an algorithm that can be constructed) in linear time for graphs of bounded treewidth (see <ref> [1, 10, 12] </ref>). As we must make in total less than jEj n 2k+1 k = O (n 2k+2 ) checks, the time bound follows.
Reference: [13] <author> M. R. Fellows and M. A. Langston. </author> <title> Nonconstructive tools for proving polynomial-time decidability. </title> <journal> J. ACM, </journal> <volume> 35 </volume> <pages> 727-739, </pages> <year> 1988. </year>
Reference-contexts: Fellows and Langston <ref> [13] </ref> derived the following consequence and variant of this result. Theorem 2 Let G be a class of graphs, closed under taking of minors in the domain H, with G H. <p> Then there exists a linear time algorithm that tests whether a given graph G belongs to G. Proof: (This proof is basically taken from <ref> [13] </ref>, but we now use the algorithm of [5] for finding tree-decomposition of small treewidth.) Suppose G is a planar graph that does not belong to G. First test whether the treewidth of input graph G is at most c H . <p> Suppose there is at least one planar graph that belongs to H but not to G. Then there exists a linear time algorithm that tests whether a given graph G 2 H belongs to G. Proof: (We again use an only slightly modified variant of a proof from <ref> [13] </ref>.) Suppose H is a planar graph with H 2 H, H 62 G. If G 2 G, then G does not contain H as a minor, hence has treewidth at most c H . So, again we can first test whether the treewidth of G is at most k.
Reference: [14] <author> M. R. Fellows and M. A. Langston. </author> <title> On search, decision and the efficiency of polynomial-time algorithms. </title> <journal> J. Comp. Syst. Sc., </journal> <volume> 49 </volume> <pages> 769-779, </pages> <year> 1994. </year>
Reference-contexts: Similar results for other specific graphs can be found in [4] (trees), <ref> [14] </ref> (cycles and subgraphs of cycles), [7] (disjoint copies of K 3 ), and [6] (graphs that are minor of a circus graph and (2fik)- grid). The result of this main lemma can be seen as an additional result, fitting into this framework.
Reference: [15] <author> G. N. Frederickson and R. Janardan. </author> <title> Designing networks with compact routing tables. </title> <journal> Algorithmica, </journal> <volume> 3 </volume> <pages> 171-190, </pages> <year> 1988. </year>
Reference-contexts: Several well-known classes of networks allow interval routing schemes that are optimal, in the sense that messages always follow the shortest path to their destination. The method was applied in the C104 Router Chip, used in the INMOS T9000 Transputer design [16]. Frederickson and Janardan <ref> [15] </ref> considered interval routing in the setting of dynamic cost links (i.e., in the case that the cost of edges is variable). Actually, they considered a variant of interval routing, called strict interval routing. <p> In the same way, we define classes k-LIRS, k-SIRS, k-SLIRS. See [19] for an overview of several results on these classes. We have the following relationships. Theorem 6 (i) (Frederickson, Janardan <ref> [15] </ref>) k-IRS (k + 1)-IRS. (ii) (Bakker, van Leeuwen, Tan [3]) k-LIRS (k + 1)-LIRS. (iii) (Bakker, van Leeuwen, Tan [3]) k-IRS (k + 1)-LIRS. (iv) k-SIRS k-IRS (k + 1)-SIRS. (v) k-SLIRS k-LIRS k-IRS. 3 Closedness under minor taking In this section we prove that for each fixed integer k <p> Finally, observe that p 0 is a shortest path from x to y in G with costs c 0 , hence also with costs c. (ii) (iii) (iv) Similar. ut Theorem 9 (i) (Frederickson, Janardan <ref> [15] </ref>) K 2;2k+1 62 k-SIRS. (ii) K 2;2k+1 62 k-IRS. Proof: (i) is shown in [15]. <p> Finally, observe that p 0 is a shortest path from x to y in G with costs c 0 , hence also with costs c. (ii) (iii) (iv) Similar. ut Theorem 9 (i) (Frederickson, Janardan <ref> [15] </ref>) K 2;2k+1 62 k-SIRS. (ii) K 2;2k+1 62 k-IRS. Proof: (i) is shown in [15]. The proof of (ii) is very similar. ut It follows now from Theorem 2 that for each fixed k 1, the classes k-IRS, k-LIRS, k-SIRS, and k-SLIRS have a finite characterisation in terms of obstruction sets. <p> As 1-SIRS equals the class of connected outerplanar graphs <ref> [15] </ref>, and outerplanar graphs have treewidth at most 2, every graph in 1-SIRS has treewidth at most 2.
Reference: [16] <author> Inmos. </author> <title> The T9000 Transputer Products Overview Manual, </title> <year> 1991. </year>
Reference-contexts: Several well-known classes of networks allow interval routing schemes that are optimal, in the sense that messages always follow the shortest path to their destination. The method was applied in the C104 Router Chip, used in the INMOS T9000 Transputer design <ref> [16] </ref>. Frederickson and Janardan [15] considered interval routing in the setting of dynamic cost links (i.e., in the case that the cost of edges is variable). Actually, they considered a variant of interval routing, called strict interval routing.
Reference: [17] <author> T. Kloks. </author> <title> Treewidth. Computations and Approximations. </title> <booktitle> Lecture Notes in Computer Science. </booktitle> <publisher> Springer Verlag, </publisher> <year> 1994. </year>
Reference-contexts: There are several well known equivalent characterisations of the notion of treewidth; for instance, a graph has treewidth at most k, if and only if it is a partial k-tree, or a subgraph of a chordal graph with maximum clique size at most k + 1 (see <ref> [17] </ref>). <p> These results can be seen as partial characterisations of graphs which allow k-label interval routing schemes (with dynamic edge costs). The result also indicates a limitation of the interval routing method: as `most graphs have large treewidth' (see e.g. <ref> [17] </ref>, chapter 5), the set of graphs in k-IRS only covers a small part of all graphs (or even of all sparse graphs, see [17]). 17 Interestingly, the proof of Theorem 14 can be made constructive, and can be used to build an algorithm, that either outputs that input graph G <p> The result also indicates a limitation of the interval routing method: as `most graphs have large treewidth' (see e.g. <ref> [17] </ref>, chapter 5), the set of graphs in k-IRS only covers a small part of all graphs (or even of all sparse graphs, see [17]). 17 Interestingly, the proof of Theorem 14 can be made constructive, and can be used to build an algorithm, that either outputs that input graph G has K 2;r as a minor, or that outputs a tree-decomposition of G of treewidth at most 2r 2, and that uses O (rn) <p> The results also have consequences for random graphs. We mention some results, obtained by Kloks <ref> [17] </ref>. Let G n;m denote a random graph with n vertices and m edges. For a precise meaning of the term `almost every' we refer to [17] or [9]. Theorem 23 (Kloks [17]) (i) Let ffi &gt; 1:18. <p> The results also have consequences for random graphs. We mention some results, obtained by Kloks <ref> [17] </ref>. Let G n;m denote a random graph with n vertices and m edges. For a precise meaning of the term `almost every' we refer to [17] or [9]. Theorem 23 (Kloks [17]) (i) Let ffi &gt; 1:18. <p> The results also have consequences for random graphs. We mention some results, obtained by Kloks <ref> [17] </ref>. Let G n;m denote a random graph with n vertices and m edges. For a precise meaning of the term `almost every' we refer to [17] or [9]. Theorem 23 (Kloks [17]) (i) Let ffi &gt; 1:18. Then almost every graph G n;m with m ffin has treewidth fi (n). (ii) For all ffi &gt; 1 and 0 &lt; * &lt; (ffi 1)=(ffi + 1), almost every graph G n;m with m ffin has treewidth at least n * .
Reference: [18] <author> J. van Leeuwen and R. B. Tan. </author> <title> Computer networks with compact routing tables. </title> <editor> In G. Rozenberg and A. Salomaa, editors, </editor> <booktitle> The Book of L, </booktitle> <pages> pages 298-307. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1986. </year>
Reference-contexts: One such method is the interval routing method, together with its generalisation k-label interval routing and variants of these. An overview of these and other compact routing methods can be found in [19]. Interval routing was introduced by Santoro and Khatib [24] and van Leeuwen and Tan <ref> [18] </ref>. Several well-known classes of networks allow interval routing schemes that are optimal, in the sense that messages always follow the shortest path to their destination. The method was applied in the C104 Router Chip, used in the INMOS T9000 Transputer design [16].
Reference: [19] <author> J. van Leeuwen and R. B. Tan. </author> <title> Compact routing methods: A survey. </title> <type> Technical Report UU-CS-1995-05, </type> <institution> Department of Computer Science, Utrecht University, Utrecht, </institution> <year> 1995. </year>
Reference-contexts: Several different routing methods have been proposed that do not have this disadvantage. One such method is the interval routing method, together with its generalisation k-label interval routing and variants of these. An overview of these and other compact routing methods can be found in <ref> [19] </ref>. Interval routing was introduced by Santoro and Khatib [24] and van Leeuwen and Tan [18]. Several well-known classes of networks allow interval routing schemes that are optimal, in the sense that messages always follow the shortest path to their destination. <p> The class of graphs k-IRS is defined as the set of all graphs G that have an optimum k-IRS with dynamic cost links. In the same way, we define classes k-LIRS, k-SIRS, k-SLIRS. See <ref> [19] </ref> for an overview of several results on these classes. We have the following relationships. <p> How much time does it cost to construct such a node labelling? And, given a node labelling, how much time does it cost to verify that it has a k-label IRS (or variant) for every edge cost assignment? More related open problems are mentioned e.g. in <ref> [19] </ref>.
Reference: [20] <author> N. Robertson and P. D. Seymour. </author> <title> Graph minors | a survey. </title> <editor> In I. Anderson, editor, </editor> <booktitle> Surveys in Combinatorics, </booktitle> <pages> pages 153-171. </pages> <publisher> Cambridge Univ. Press, </publisher> <year> 1985. </year>
Reference-contexts: In a long series of papers, Robertson and Seymour proved their famous graph minor theorem (formerly `Wagner's conjecture'): Theorem 1 (See <ref> [20] </ref>.) For every class of graphs G, that is closed under taking of minors, there exists a finite set of graphs, called the obstruction set of G, ob (G), such that for all graphs H, H 2 G, if and only if there is no graph G in the obstruction set
Reference: [21] <author> N. Robertson and P. D. Seymour. </author> <title> Graph minors. II. Algorithmic aspects of tree-width. </title> <journal> J. Algorithms, </journal> <volume> 7 </volume> <pages> 309-322, </pages> <year> 1986. </year>
Reference-contexts: As a main lemma, we show that every graph either contains K 2;r as a minor, or has treewidth at most 2r 2. This can be seen as a special case of a result of Robertson and Seymour <ref> [21] </ref>: every planar graph H = (V (H); E (H)) has an associated constant c H , such that any graph G either contains H as a minor or has 2 treewidth at most c H . <p> Given a graph G we denote as V (G) and E (G) the set of its vertices and edges respectively. The number of vertices of a graph G = (V; E) will be denoted by n = jV (G)j. The notion of treewidth was introduced by Robertson and Seymour <ref> [21] </ref>. Definition.
Reference: [22] <author> N. Robertson and P. D. Seymour. </author> <title> Graph minors. XIII. The disjoint paths problem. </title> <journal> J. Comb. Theory Series B, </journal> <volume> 63 </volume> <pages> 65-110, </pages> <year> 1995. </year>
Reference-contexts: It should be noted that the proofs of these results are (inherently) nonconstructive. As for every fixed graph H, there exists an O (n 3 ) time algorithm that tests whether H is a minor of a given graph G with n vertices <ref> [22] </ref>, it follows that every minor-closed class of graphs has a cubic recognition algorithm, and every minor-closed class of graphs in a domain H has a cubic algorithm that tests whether graphs from H belong to G.
Reference: [23] <author> N. Robertson, P. D. Seymour, and R. Thomas. </author> <title> Quickly excluding a planar graph. </title> <journal> J. Comb. Theory Series B, </journal> <volume> 62 </volume> <pages> 323-348, </pages> <year> 1994. </year>
Reference-contexts: The best general bound for c H known is 20 2 (2jV (H)j+4jE (H)j) 5 <ref> [23] </ref>. Our result gives a much better bound in the case of graphs of the form K 2;r . <p> The constant factor in the original result of Robertson and Seymour was `astronomically large'. In a later paper, Robertson et al. <ref> [23] </ref> improved this result, and obtained a constant factor of 20 2 (2jV (H)j+4jE (H)j) 5 . Still, in most, if not all, practical cases, this constant factor is much too large, and makes the algorithm practically infeasible.
Reference: [24] <author> N. Santoro and R. Khatib. </author> <title> Labelling and implicit routing in networks. </title> <journal> Computer Journal, </journal> <volume> 28 </volume> <pages> 5-8, </pages> <year> 1985. </year> <month> 34 </month>
Reference-contexts: One such method is the interval routing method, together with its generalisation k-label interval routing and variants of these. An overview of these and other compact routing methods can be found in [19]. Interval routing was introduced by Santoro and Khatib <ref> [24] </ref> and van Leeuwen and Tan [18]. Several well-known classes of networks allow interval routing schemes that are optimal, in the sense that messages always follow the shortest path to their destination. The method was applied in the C104 Router Chip, used in the INMOS T9000 Transputer design [16].
References-found: 24

