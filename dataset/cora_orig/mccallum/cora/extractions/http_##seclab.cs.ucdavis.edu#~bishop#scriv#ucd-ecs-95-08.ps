URL: http://seclab.cs.ucdavis.edu/~bishop/scriv/ucd-ecs-95-08.ps
Refering-URL: http://seclab.cs.ucdavis.edu/~bishop/scriv/index.html
Root-URL: http://www.cs.ucdavis.edu
Title: Race Conditions, Files, and Security Flaws; or the Tortoise and the Hare Redux  
Author: Matt Bishop 
Note: This document was created with FrameMaker 4.0.4  
Date: September 1995  
Pubnum: CSE-95-8  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> R. P. Abbott, J. S. Chin, J. E. Donnelley, W. L. Konigsford, S. Tokubo, and D. A. Webb, </author> <title> Security Analysis and Enhancements of Computer Operating Systems, </title> <type> NBSIR 761041, </type> <institution> Institute for Computer Sciences and Technology, National Bureau of Standards (Apr. </institution> <year> 1976). </year>
Reference-contexts: A sample library for writing to files is discussed and presented in [4]. Note this procedure eliminates the need for any acces system call. Conclusion Race conditions are not unique to the UNIX operating system; indeed, the Program Analysis study [3] and the RISOS study <ref> [1] </ref> both identified them as extant in a large number of operating systems and programs. The classic form of this condition has been named the time-of-check to time-of-use aw (TOCTTOU aw) and was first identified in 1974. This august lineage suggests that race condition aws will continue to plague systems.
Reference: [2] <author> M. J. Bach, </author> <booktitle> The Design of the UNIX Operating System , Prentice-Hall, </booktitle> <address> Englewood CLiffs, NJ (1986). </address>
Reference-contexts: The second is by descriptor ; in this mode, the object is determined when the descriptor is assigned and from then until deallocation, the descriptor refers to that object. In other words, the binding is both early and permanent. (See <ref> [2] </ref>, [6] for a detailed discussion of how the operating system handles names and descriptors.) In both the passwd binmail race conditions, all references to the files involved are made through names. By altering the meaning of the (fixed) names between references, the attacker 1.
Reference: [3] <author> Bisbey, R. II and Hollingsworth, D., </author> <title> Protection Analysis Project Final Report, </title> <institution> ISI/RR-78-13, DTIC AD A056816, USC/Information Sciences Institute (May, </institution> <year> 1978). </year>
Reference-contexts: A sample library for writing to files is discussed and presented in [4]. Note this procedure eliminates the need for any acces system call. Conclusion Race conditions are not unique to the UNIX operating system; indeed, the Program Analysis study <ref> [3] </ref> and the RISOS study [1] both identified them as extant in a large number of operating systems and programs. The classic form of this condition has been named the time-of-check to time-of-use aw (TOCTTOU aw) and was first identified in 1974.
Reference: [4] <author> M. Bishop, </author> <title> How to Write a Setuid Program, </title> <type> Technical Report 85.6, </type> <institution> Research Institute for Advanced Computer Science, Moffett Field, </institution> <address> CA (May 1985). </address>
Reference-contexts: This way, the race dcondition still exists, but because it occurs only when no extra privileges are involved, it is quite harmless. A sample library for writing to files is discussed and presented in <ref> [4] </ref>. Note this procedure eliminates the need for any acces system call. Conclusion Race conditions are not unique to the UNIX operating system; indeed, the Program Analysis study [3] and the RISOS study [1] both identified them as extant in a large number of operating systems and programs.
Reference: [5] <author> M. Bishop and M. Dilger, </author> <title> Checking for Race Conditions in File Accesses, </title> <booktitle> submitted to the Third ACM Conference on Computer and Communication Security. </booktitle>
Reference-contexts: For example, any access call followed by an open with the same object name is a potential race condition. We emphasize potential. Whether or not the race condition can occur depends on environment <ref> [5] </ref>. One fix for the binmail hole on many UNIX systems is to set the sticky bit on the mail spool directory, and then ensure each user always has a mailbox (empty if need be).
Reference: [6] <author> S. J. Lefer, M. K. McKusick, M. J. Karels, and J. S. Quarterman, </author> <title> The Design and Implementation of the 4.3BSD UNIX Operating System , Addison-Wesley Publishing Company, </title> <address> Reading, MA (1989). </address> <note> [7] 8LGM, [8lgm]-Advisory-7.UNIX.passwd.11-May-1994, available from fileserv@bag-puss.demon.co.uk (May 1994) [8] 8LGM, [8lgm]-Advisory-5.UNIX.mail.24-Jan-1992, available from fileserv@bag-puss.demon.co.uk (Jan 1992) </note>
Reference-contexts: The second is by descriptor ; in this mode, the object is determined when the descriptor is assigned and from then until deallocation, the descriptor refers to that object. In other words, the binding is both early and permanent. (See [2], <ref> [6] </ref> for a detailed discussion of how the operating system handles names and descriptors.) In both the passwd binmail race conditions, all references to the files involved are made through names. By altering the meaning of the (fixed) names between references, the attacker 1.
References-found: 6

