URL: ftp://theory.lcs.mit.edu/pub/people/shaih/know-def.ps.gz
Refering-URL: http://theory.lcs.mit.edu/~shaih/mypapers.html
Root-URL: 
Title: A Stronger Notion of Proofs of Knowledge  
Author: Shai Halevi Silvio Micali 
Date: November 12, 1996  
Address: 545 Technology Square Cambridge, MA 02139, USA  
Affiliation: MIT LCS  
Abstract: Proofs of knowledge are central to cryptographic protocols, and many definitions for such proofs have been proposed. In this work we put forward a new definition, strictly stronger than previous ones, and argue that it captures better the intuition of what proofs of knowledge should be. We show that our definition implies some new and desirable properties.
Abstract-found: 1
Intro-found: 1
Reference: [BG92] <author> O. Goldreich and M. Bellare, </author> <title> On Defining Proofs of Knowledge. </title> <booktitle> In Advances in Cryptology: CRYPTO '92,, Lecture Notes in Computer Science, </booktitle> <volume> volume 740, </volume> <publisher> Springer-Verlag, </publisher> <year> 1992. </year> <pages> Pages 390-420 </pages>
Reference-contexts: The first attempts at a formal definition [FS90, FFS87, TW87] did not address several possible scenarios 1 These weaknesses were observed and corrected in a more recent work of Bellare and Goldreich <ref> [BG92] </ref>. However, as we argue below, even the later definition falls short of capturing the intuitive meaning of a proof of knowledge, and suffers from some undesirable side-effects. It is thus our goal in this paper to provide a stronger and meaningful notion of a proof of knowledge. <p> For the purpose of this extended abstract, we exemplify this for the notion of Bellare and Goldreich. To avoid confusion we refer to their notion as a liberal proof of knowledge. Casting their definition in our syntax we get Definition 3: <ref> [BG92] </ref>: An interactive Turing-machine V is a knowledge-verifier for a binary relation R with error " if it satisfies the following 7 Completeness There exists an interactive Turing machine P (the legitimate prover) such that for all (x; y) 2 R, Pr [outfP (x; y) $ V (x)g = Y ES]
Reference: [FFS87] <author> U. Feige and A. Fiat and A. Shamir. </author> <title> Zero-knowledge proofs of identity. </title> <journal> In Journal of Cryptology, </journal> <volume> 1(2), </volume> <year> 1988. </year> <pages> Pages 77-94 </pages>
Reference-contexts: The first attempts at a formal definition <ref> [FS90, FFS87, TW87] </ref> did not address several possible scenarios 1 These weaknesses were observed and corrected in a more recent work of Bellare and Goldreich [BG92].
Reference: [FMR84] <author> M.J. Fischer, S. Micali and C. Rackoff, </author> <title> A Secure Protocol for Oblivious Transfer (Extended Abstract) In Journal of Cryptology, </title> <type> 9(3), </type> <year> 1996. </year> <note> Pages 191-195 (first presented in Eurocrypt '84). </note>
Reference-contexts: The intuitive notion of a proof of knowledge first appeared in the conference version of Goldwasser, Micali and Rackoff's paper [GMR85] (as a side remark on their notion of a zero-knowledge proof), as well as in a paper of Fisher, Micali, and Rackoff <ref> [FMR84] </ref>, but was not formally defined in either of these papers. The first attempts at a formal definition [FS90, FFS87, TW87] did not address several possible scenarios 1 These weaknesses were observed and corrected in a more recent work of Bellare and Goldreich [BG92]. <p> This is a protocol of Goldwasser, Micali, and Rackoff [GMR85] where a Prover convinces (in zero knowledge) a verifier that it knows a square root (mod n) of a give square (mod n). Essentially the same protocol appears in <ref> [FMR84] </ref>. THE GOLDWASSER-MICALI-RACKOFF PROTOCOL. Casting the Goldwasser-Micali-Rackoff protocol in our syntax, we have a binary relation R = f (hn; xi; y) : x; y 2 Z fl n and x y 2 mod ng.
Reference: [FS90] <author> U. Feige and A. Shamir. </author> <title> Witness indistinguishable and witness hiding protocols. </title> <booktitle> In Proc. of the 22nd Annual ACM Symposium on Theory of Computing, </booktitle> <year> 1990. </year> <pages> Pages 416-426 </pages>
Reference-contexts: The first attempts at a formal definition <ref> [FS90, FFS87, TW87] </ref> did not address several possible scenarios 1 These weaknesses were observed and corrected in a more recent work of Bellare and Goldreich [BG92].
Reference: [GGM86] <author> O. Goldreich, S. Goldwasser and S. Micali. </author> <title> How to Construct Random Functions. </title> <journal> In Journal of the ACM, </journal> <volume> Vol. 33, no. 4, </volume> <year> 1986, </year> <pages> pp. 792-807 </pages>
Reference-contexts: We add to the protocol a first round in which the verifier sends an jnj-bit random string u to the prover. The prover then picks another jnj-bit random string v and uses a pseudo-random function (in the sense of <ref> [GGM86] </ref>) to compute r = f v (u). The whole protocol is as follows: Prover P (n; x; y) transcript Verifier V (n; x) 1. u Pick a random jnj-bit string u. 2. Pick a random jnj-bit string v.
Reference: [GMR85] <author> S. Goldwasser, S. Micali and C. Rackoff. </author> <title> The knowledge complexity of interactive proof systems. </title> <journal> In SIAM Journal on Computing, </journal> <volume> 18(1), </volume> <year> 1989. </year> <note> Pages 186-208 (Preliminary version appeared in Proc. of the 17th Annual ACM Symposium on Theory of Computing, </note> <year> 1985. </year> <pages> Pages 291-304) </pages>
Reference-contexts: Clearly, one such way would be exhibiting the secret in question, However, the notion becomes interesting (and hard to formalize properly!) when the secret is not directly revealed. The intuitive notion of a proof of knowledge first appeared in the conference version of Goldwasser, Micali and Rackoff's paper <ref> [GMR85] </ref> (as a side remark on their notion of a zero-knowledge proof), as well as in a paper of Fisher, Micali, and Rackoff [FMR84], but was not formally defined in either of these papers. <p> To illustrate this point, we show that famous protocols from the literature are examples of our new, stronger notion. In particular, in Section 4 we show 3 that the quadratic residuosity protocol of <ref> [GMR85] </ref> is one such example. It thus appears that prior works have claimed and proved less about their protocols than was both possible and desirable. 1.2 Organization The rest of the paper is organized as follows: In Section 2 we introduce a few notations. <p> Also, for simplicity, all definitions of this extended abstract are presented assuming that both the prover and the verifier are Turing machines. 2.1 Interactive Turing Machines. We rely on the intuitive notion of interactive Turing-machines as machines which can send messages to one another. The reader is referred to <ref> [GMR85] </ref> for a more formal definition. A pair of interactive Turing machine (M 1 ; M 2 ) defines a protocol in the usual way. Four aspects of a protocol are of particular interest to us: transcript, view, output, and running-time. TRANSCRIPT. <p> In fact, we believe that most (if not all) of the proof of knowledge discussed in the literature actually satisfy our stronger requirements. To prove our point, we chose discuss the first (zero-knowledge) proof of knowledge. This is a protocol of Goldwasser, Micali, and Rackoff <ref> [GMR85] </ref> where a Prover convinces (in zero knowledge) a verifier that it knows a square root (mod n) of a give square (mod n). Essentially the same protocol appears in [FMR84]. THE GOLDWASSER-MICALI-RACKOFF PROTOCOL. <p> The reason is that if we replace f with a truly-random function, then generating many views of P (n; x; y) $ V (n; x) is equivalent to running many independent executions of the Goldwasser-Micali-Rackoff protocol. Since this protocol is proved in <ref> [GMR85] </ref> to be zero-knowledge, it cannot help the knowledge extractor to compute a square root of x mod n.
Reference: [TW87] <author> M. Tompa and H. Woll. </author> <title> Random self-reducibility and zero knowledge interactive proofs of possession of information. </title> <note> In Technical report CS92-244, </note> <institution> Univ. of California at San-Diego, </institution> <year> 1992. </year> <note> (Preliminary version appeared in 28th Annual Symposium on Foundations of Computer Science, IEEE, </note> <year> 1987. </year> <pages> Pages 472-482) 11 </pages>
Reference-contexts: The first attempts at a formal definition <ref> [FS90, FFS87, TW87] </ref> did not address several possible scenarios 1 These weaknesses were observed and corrected in a more recent work of Bellare and Goldreich [BG92].
References-found: 7

