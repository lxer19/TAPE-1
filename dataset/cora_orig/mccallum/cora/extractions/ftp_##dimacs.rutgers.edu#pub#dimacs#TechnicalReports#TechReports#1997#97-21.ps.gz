URL: ftp://dimacs.rutgers.edu/pub/dimacs/TechnicalReports/TechReports/1997/97-21.ps.gz
Refering-URL: http://dimacs.rutgers.edu/TechnicalReports/1997.html
Root-URL: http://www.cs.rutgers.edu
Email: e-mail: alexei@lisitsa.botik.ru  e-mail: sazonov@logic.botik.ru  
Title: Bounded Hyperset Theory and Web-like Data Bases 1  
Author: by Alexei Lisitsa ; Vladimir Sazonov ; 
Address: Russia.  152140, Russia.  
Affiliation: 152140,  Systems Institute of Russian Acad. of Sci., Pereslavl-Zalessky,  
Date: 1997  
Note: June  3 Supported by RBRF (project 96-01-01717) and by INTAS (project 93-0972). 4 Permanent Member: Program  5 Supported by RBRF (project 96-01-01717), by INTAS (project 93-0972) and Swedish Royal Academy of Sciences. DIMACS is a partnership of Rutgers University, Princeton University, AT&T Labs, Bellcore, and Bell Labs. DIMACS is an NSF Science and Technology Center, funded under contract STC-91-19999; and also receives support from the New Jersey Commission on Science and Technology.  
Abstract: DIMACS Technical Report 97-21 1 This paper is accompanying to DIMACS TR-97-05. To be presented in "Kurt Godel Colloquium", Vienna, 25-29 August, 1997, and in the Workshop "Logic and Algorithms|One Year Later", DIMACS, Rutgers University, 23-25 July, 1997 2 Permanent Member: Program Systems Institute of Russian Acad. of Sci., Pereslavl-Zalessky, 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Abiteboul, S., Vianu, V.: </author> <title> Queries and computation on the Web. Database Theory| ICDT'97, </title> <booktitle> 6th International Conference, Delphi, </booktitle> <address> Greece, </address> <month> January </month> <year> 1997, </year> <booktitle> Proceedings. Lecture Notes in Computer Science 1186 Springer (1995) 262-275 </booktitle>
Reference-contexts: Here we reintroduce in a natural way non-well-founded version of BST and [31, 33] starting from motivations in WWW or WDB, rather than in abstract sets. We consider WDB as a (finitely branching) graph with labelled edges in a way analogous to <ref> [1, 22, 25] </ref>, however, with an essential difference based on the above mentioned approach to consider graph vertices as (denoting) antifounded sets, called also hypersets [4] 1 . To this end, the well-known notion of graph bisimulation due to D. Park (cf. [23]) is used crucially. <p> For finitely branching graphs with infinite number of vertices we have only semidecid-ability of 6 g (wrt the "oracle" g). By considering graphs up to bisimulation (in contrast to, say, <ref> [1] </ref> devoted to infinite finitely branching graphs as WWW instances), this is the main technical reason why we need some additional efforts for developing corresponding approach for this infinite case (i.e. for the case of HFA 1 ; corresponding paper is in progress.) So, we concentrate here mainly on the finite <p> A very important property of -definable queries consists in their genericity (or abstractness), up to bisimulation. We define this notion following [30] where it was applied directly to HF-sets rather than to representing (finite acyclic) graphs. Cf. also <ref> [1] </ref> where the notion of genericity is considered only for boolean queries and without any connection to bisimulation, unlike this paper and [30]. A query Q (u) is called generic (up to bisimulation) if it preserves (i) bisimulation, (ii) labels and also (iii) isomorphism, up to bisimulation, of its inputs. <p> Some Comparisons. Of course, it is not strictly necessary to support set-theoretic (based on bisimulation) level of abstraction if paying attention to the precise syntax of addresses; cf. <ref> [1, 22, 25] </ref>. E.g. in [1] a general Turing machine model of browsing and searching is discussed where genericity of the underlying finitely-branching graph is understood in terms of the ordinary isomorphism of graphs, what corresponds to understanding addresses of the Web pages essentially more literally, than here. <p> Some Comparisons. Of course, it is not strictly necessary to support set-theoretic (based on bisimulation) level of abstraction if paying attention to the precise syntax of addresses; cf. [1, 22, 25]. E.g. in <ref> [1] </ref> a general Turing machine model of browsing and searching is discussed where genericity of the underlying finitely-branching graph is understood in terms of the ordinary isomorphism of graphs, what corresponds to understanding addresses of the Web pages essentially more literally, than here.
Reference: [2] <author> Aczel, P.: </author> <title> Non-well-founded sets. </title> <booktitle> CSLI Lecture Notes No. </booktitle> <volume> 14, </volume> <year> 1988 </year>
Reference-contexts: It was used representation of hereditarily-finite well-founded sets (of sets of sets, etc.) by vertices of finite graphs (possibly labelled [30] and acyclic, except [31, 20]). Another source is P. Aczel's non-well-founded set theory <ref> [2, 4, 9, 24, 31] </ref> which allows considering "cyclic" sets and data represented by cyclic graphs. Here we reintroduce in a natural way non-well-founded version of BST and [31, 33] starting from motivations in WWW or WDB, rather than in abstract sets. <p> WDB via Hypersets Now, the key point of the present approach to WWW or WDB is in defining denotational semantics [[v]] g for any vertex v of a graph g in terms of visible part of a page [[p]] considered above. (Such a semantics [[-]] was also called decoration in <ref> [2] </ref> for the case of arbitrary graphs g; cf. also [4, 9, 31]. For well-founded g it is just A. Mostowski's collapsing [3] which we used in [27]-[30], [33]; cf. also [6]). <p> However, in non-well-founded case, such as in the graph gr K , there is a problem. We need sets like = fg: This leads us to rather unusual non-well-founded or even antifounded or hyper set theory where some sets may serve as their own members, etc. <ref> [2, 4] </ref>. We confine ourselves to a subuniverse HCA L (for some supply of labels L) of this set theory containing only hereditarily-countable (or finite) hypersets. <p> Also sets from the subuniverses HF HFA and HC HCA correspond to the vertices of finitely and, respectively, countably branching well-founded graphs. It can be proved in the line of <ref> [2] </ref> Theorem 1 There exists the unique, up to isomorphism, universe HCA satisfying Anti-Foundation Axiom, and analogously also for HFA 1 and HFA.
Reference: [3] <author> Barwise, J.: </author> <title> Admissible sets and structures. </title> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1975 </year>
Reference-contexts: For well-founded g it is just A. Mostowski's collapsing <ref> [3] </ref> which we used in [27]-[30], [33]; cf. also [6]).
Reference: [4] <author> Barwise, J., Moss, L.: </author> <title> Vicious Circles: on the mathematics of circular phenomena, </title> <booktitle> CSLI Lecture Notes, </booktitle> <year> 1996 </year>
Reference-contexts: It was used representation of hereditarily-finite well-founded sets (of sets of sets, etc.) by vertices of finite graphs (possibly labelled [30] and acyclic, except [31, 20]). Another source is P. Aczel's non-well-founded set theory <ref> [2, 4, 9, 24, 31] </ref> which allows considering "cyclic" sets and data represented by cyclic graphs. Here we reintroduce in a natural way non-well-founded version of BST and [31, 33] starting from motivations in WWW or WDB, rather than in abstract sets. <p> We consider WDB as a (finitely branching) graph with labelled edges in a way analogous to [1, 22, 25], however, with an essential difference based on the above mentioned approach to consider graph vertices as (denoting) antifounded sets, called also hypersets <ref> [4] </ref> 1 . To this end, the well-known notion of graph bisimulation due to D. Park (cf. [23]) is used crucially. <p> Sect. 5) On the other hand, this paper aims to give a natural interpretation of abstract hypersets and , as a corresponding query language, in more realistic terms of WWW and WDB and to demonstrate both to theoreticians and to more practically oriented researchers possible applied value of hypersets. (Cf. <ref> [4] </ref> for other applications of hypersets to Computer Science and Philosophy.) This also dictates some "intermediate" form of presentation of the material. Properly speaking, it is given not a final set-theoretic description of the Web as it is, but rather some concise approach relating the corresponding ideas. <p> a server to a browser, irrespective of the server's geographic location." (From the Netscape Handbook.) - 2 - 2 Web-like Data Bases We define a (state or instance of) World-Wide Web or a Web-like Data Base (WDB) as a labelled graph (abbreviated LG; it is also called labelled transition system <ref> [4] </ref>). See a motivation below. Formally, LG is a map g : jgj ! P (L fi jgj) with jgj a set of vertices, L = L g a set of labels or attributes (from some given large class of labels L) and P (jgj) the powerset. <p> approach to WWW or WDB is in defining denotational semantics [[v]] g for any vertex v of a graph g in terms of visible part of a page [[p]] considered above. (Such a semantics [[-]] was also called decoration in [2] for the case of arbitrary graphs g; cf. also <ref> [4, 9, 31] </ref>. For well-founded g it is just A. Mostowski's collapsing [3] which we used in [27]-[30], [33]; cf. also [6]). <p> However, in non-well-founded case, such as in the graph gr K , there is a problem. We need sets like = fg: This leads us to rather unusual non-well-founded or even antifounded or hyper set theory where some sets may serve as their own members, etc. <ref> [2, 4] </ref>. We confine ourselves to a subuniverse HCA L (for some supply of labels L) of this set theory containing only hereditarily-countable (or finite) hypersets. <p> 09 lz:(l : z 2 z 1 ; l 1 : z 1 2 : : : 2 z n ; l n : z n 2 x)g (3) 3 There are used also alternative denotations HF 0 for HF, HF 1=2 for HFA and HF 1 for HFA 1 <ref> [4] </ref> (actually, in the case of pure sets which do not involve labels). Also, in [30] HFA denoted well-founded universe with `A' staying for `attributes' which are called labels here.
Reference: [5] <author> Buneman, P., Davidson, S., Hillebrand, G., Suciu, D.: </author> <title> A query Language and Optimization Techniques for Unstructured Data. </title> <booktitle> Proc. of SIGMOD, </booktitle> <address> San Diego, </address> <year> 1996 </year>
Reference-contexts: To this end, the well-known notion of graph bisimulation due to D. Park (cf. [23]) is used crucially. In this respect our approach is closer to that of <ref> [18, 5] </ref> also based on bisimulation of graphs representing possibly cyclic "unstructured" databases. (Cf. more comments in Sect. 5) On the other hand, this paper aims to give a natural interpretation of abstract hypersets and , as a corresponding query language, in more realistic terms of WWW and WDB and to <p> Kosky [18] and P. Buneman, et al <ref> [5] </ref>. - 12 - The main informal difference of our approach with [18, 5] is the set-theoretical point of view based on the observation that the graphs and operations over them considered up to bisimulation are essentially (non-well-founded) sets of sets of sets, etc., and well-known set-theoretical operations, respectively. <p> Kosky [18] and P. Buneman, et al [5]. - 12 - The main informal difference of our approach with <ref> [18, 5] </ref> is the set-theoretical point of view based on the observation that the graphs and operations over them considered up to bisimulation are essentially (non-well-founded) sets of sets of sets, etc., and well-known set-theoretical operations, respectively. <p> Also note, that query languages UnQL and UnCAL discussed in <ref> [5] </ref> and formulated in terms of graphs may be essentially (up to some unclear places in syntax and semantics) embedded in (if it is considered as a language of graph transformers). However, the decoration operation D of is not definable there and also in SRI [18].
Reference: [6] <author> Dahlhaus, E.: </author> <title> Is SETL a suitable language for parallel programming?|a theoretical approach. </title> <booktitle> Proc. of CSL'87, Lecture Notes in Computer Science 329 (1987) 56-63 </booktitle>
Reference-contexts: For well-founded g it is just A. Mostowski's collapsing [3] which we used in [27]-[30], [33]; cf. also <ref> [6] </ref>). <p> The origins of -language go back to the well-known notion of 0 -formulas of A. Levy and to so called basic = rudimentary set-theoretic operations of R.O. Gandy [10] and R.B. Jensen [17]. Note also somewhat related theoretical approach to SETL in <ref> [6, 7] </ref> and set-theoretic programming language STARSET [11]. The latter, in comparison with SETL and , does not use deeply nested sets. So called semantic or -programming [12] is based mainly on considering unbounded, unlike , positive existential quantification. <p> Also for the case of "small" finite WDB all the definable queries are, in a sense, "feasibly" computable. However, the latter note should not be overestimated. So, bisimulation/non-bisimulation is practically rather expensive procedure, however being PTIME computable. (It is PTIME-complete problem even for acyclic graphs <ref> [6] </ref>.) On the other hand, it can be evaluated permanently, by some program, so that we could use partial results of its work, when needed.
Reference: [7] <author> Dahlhaus, E., Makowsky, J.: </author> <title> The Choice of programming Primitives in SETL-like Languages. </title> <booktitle> Proc. of ESOP'86, Lecture Notes in Computer Science 213 (1986) 160-172 </booktitle>
Reference-contexts: The origins of -language go back to the well-known notion of 0 -formulas of A. Levy and to so called basic = rudimentary set-theoretic operations of R.O. Gandy [10] and R.B. Jensen [17]. Note also somewhat related theoretical approach to SETL in <ref> [6, 7] </ref> and set-theoretic programming language STARSET [11]. The latter, in comparison with SETL and , does not use deeply nested sets. So called semantic or -programming [12] is based mainly on considering unbounded, unlike , positive existential quantification.
Reference: [8] <author> Dawar A., Lindell S., Weinstein, S.: </author> <title> Infinitary Logic and Inductive Definability over Finite Structures. </title> <journal> Information and Computation, </journal> <volume> 119, No. </volume> <month> 2 </month> <year> (1995) </year> <month> 160-175 - 14 </month> - 
Reference-contexts: Then we can define iteratively as in [20] (by appropriate reconstructing a formula from [30] with using an idea from <ref> [8] </ref>) strict linear preorders k on g (which are decidable uniformly on k with respect to the oracle g): x 0 y * ) false; x k+1 y * ) x k y _ 8w 2 x [ y (u k w ! 9p 2 x9q 2 y (p k w
Reference: [9] <author> Fernando, T.: </author> <title> A Primitive recursive set theory and AFA: on the logical complexity of the largest bisimulation. </title> <type> Report CS-R9213 ISSN 0169-118XCWI P.O.Box 4079, </type> <address> 1009 AB Amsterdam, Netherlands </address>
Reference-contexts: It was used representation of hereditarily-finite well-founded sets (of sets of sets, etc.) by vertices of finite graphs (possibly labelled [30] and acyclic, except [31, 20]). Another source is P. Aczel's non-well-founded set theory <ref> [2, 4, 9, 24, 31] </ref> which allows considering "cyclic" sets and data represented by cyclic graphs. Here we reintroduce in a natural way non-well-founded version of BST and [31, 33] starting from motivations in WWW or WDB, rather than in abstract sets. <p> approach to WWW or WDB is in defining denotational semantics [[v]] g for any vertex v of a graph g in terms of visible part of a page [[p]] considered above. (Such a semantics [[-]] was also called decoration in [2] for the case of arbitrary graphs g; cf. also <ref> [4, 9, 31] </ref>. For well-founded g it is just A. Mostowski's collapsing [3] which we used in [27]-[30], [33]; cf. also [6]).
Reference: [10] <author> Gandy, R.O.: </author> <title> Set-theoretic functions for elementary syntax. </title> <booktitle> Proc. Symp. in Pure Math. </booktitle> <volume> Vol. 13, </volume> <booktitle> Part II (1974) 103-126 </booktitle>
Reference-contexts: The origins of -language go back to the well-known notion of 0 -formulas of A. Levy and to so called basic = rudimentary set-theoretic operations of R.O. Gandy <ref> [10] </ref> and R.B. Jensen [17]. Note also somewhat related theoretical approach to SETL in [6, 7] and set-theoretic programming language STARSET [11]. The latter, in comparison with SETL and , does not use deeply nested sets.
Reference: [11] <author> Gilula, </author> <title> M.M.: The Set Model For Database and Information Systems. </title> <publisher> Addison Wesley, </publisher> <year> 1994 </year>
Reference-contexts: The origins of -language go back to the well-known notion of 0 -formulas of A. Levy and to so called basic = rudimentary set-theoretic operations of R.O. Gandy [10] and R.B. Jensen [17]. Note also somewhat related theoretical approach to SETL in [6, 7] and set-theoretic programming language STARSET <ref> [11] </ref>. The latter, in comparison with SETL and , does not use deeply nested sets. So called semantic or -programming [12] is based mainly on considering unbounded, unlike , positive existential quantification.
Reference: [12] <author> Goncharov, S.S., Ershov, Ju.L., Sviridenko, D.I.: </author> <title> Semantic programming, </title> <editor> Kugler H.J., ed. </editor> <publisher> Information Processing'86 , Elsevier, </publisher> <address> North Holland (1986) 1093-1100 </address>
Reference-contexts: Gandy [10] and R.B. Jensen [17]. Note also somewhat related theoretical approach to SETL in [6, 7] and set-theoretic programming language STARSET [11]. The latter, in comparison with SETL and , does not use deeply nested sets. So called semantic or -programming <ref> [12] </ref> is based mainly on considering unbounded, unlike , positive existential quantification. Some label-free version of this -language for pure universe HFA was considered in [27], as well as labelled one for the well-founded case in [30].
Reference: [13] <author> Gurevich, Y.: </author> <title> Algebras of feasible functions. </title> <booktitle> Proc. 24th IEEE Conf. on Foundations of Computer Science (1983) 210-214 </booktitle>
Reference-contexts: Both versions are equivalent over finite structures [14]. Definability in over HFA was reduced in [31] to definability of graph transformers in FO+LFP. It is well-known that such kind of recursion in linearly ordered finite domains, like a finite segment of natural numbers, is equivalent to PTIME-computability <ref> [26, 16, 21, 34, 13] </ref>.
Reference: [14] <author> Gurevich, Y., Shelah, S. </author> : <title> Fixed-point extensions of first-order logic. </title> <note> Annals of Pure and Applied Logic 32 (1986) 265-280 </note>
Reference-contexts: Note, that this union is actually "locally finite" due to (x; y; P ) , (x; y; P jj nn TC (fx; yg)) where x; y are all free set variables of (which has no complex terms!). This construct is actually equivalent in HFA (essentially as in <ref> [14] </ref>) to its inflationary version [inflationary P:(P (x) , (P (x) _ (x; P ))]( t) with no requirement of positivity on P in . <p> Remember that FO+LFP (or IFP) is First-Order Logic + the corresponding logical analogue of the-least (respectively, inflationary ) fixed point construct of . Both versions are equivalent over finite structures <ref> [14] </ref>. Definability in over HFA was reduced in [31] to definability of graph transformers in FO+LFP. It is well-known that such kind of recursion in linearly ordered finite domains, like a finite segment of natural numbers, is equivalent to PTIME-computability [26, 16, 21, 34, 13].
Reference: [15] <author> Cf. </author> <note> http://www.intranetjournal.com/. </note>
Reference-contexts: I.e. it must consist of hy-perlinked pages distributed among the computers participating either in global network like Internet or in some local, isolated from the outside world specific network based essentially on the same principles, except globality, and called also Intranet <ref> [15] </ref>. This approach is based on a work on Bounded Set Theory (BST) and on its -language [27]-[33], [19, 20] considered as a query language for data bases with complex or nested data.
Reference: [16] <author> Immerman, N.: </author> <title> Relational queries computable in polynomial time. </title> <booktitle> Proc. 14th. ACM Symp. on Theory of Computing (1982) 147-152; cf. also Information and Control 68 (1986), </booktitle> <pages> 86-104 </pages>
Reference-contexts: Both versions are equivalent over finite structures [14]. Definability in over HFA was reduced in [31] to definability of graph transformers in FO+LFP. It is well-known that such kind of recursion in linearly ordered finite domains, like a finite segment of natural numbers, is equivalent to PTIME-computability <ref> [26, 16, 21, 34, 13] </ref>.
Reference: [17] <author> Jensen, R.B.: </author> <title> The fine structure of the constructible hierarchy. </title> <journal> Ann. Math. </journal> <note> Logic 4 (1972) 229-308 </note>
Reference-contexts: The origins of -language go back to the well-known notion of 0 -formulas of A. Levy and to so called basic = rudimentary set-theoretic operations of R.O. Gandy [10] and R.B. Jensen <ref> [17] </ref>. Note also somewhat related theoretical approach to SETL in [6, 7] and set-theoretic programming language STARSET [11]. The latter, in comparison with SETL and , does not use deeply nested sets. So called semantic or -programming [12] is based mainly on considering unbounded, unlike , positive existential quantification.
Reference: [18] <author> Kosky, A. </author> : <title> Observational properties of databases with object identity. </title> <type> Technical Report MS-CIS-95-20. </type> <institution> Dept. of Computer and Information Science, University of Pennsylvania (1995) </institution>
Reference-contexts: To this end, the well-known notion of graph bisimulation due to D. Park (cf. [23]) is used crucially. In this respect our approach is closer to that of <ref> [18, 5] </ref> also based on bisimulation of graphs representing possibly cyclic "unstructured" databases. (Cf. more comments in Sect. 5) On the other hand, this paper aims to give a natural interpretation of abstract hypersets and , as a corresponding query language, in more realistic terms of WWW and WDB and to <p> Kosky <ref> [18] </ref> and P. <p> Kosky [18] and P. Buneman, et al [5]. - 12 - The main informal difference of our approach with <ref> [18, 5] </ref> is the set-theoretical point of view based on the observation that the graphs and operations over them considered up to bisimulation are essentially (non-well-founded) sets of sets of sets, etc., and well-known set-theoretical operations, respectively. <p> However, the decoration operation D of is not definable there and also in SRI <ref> [18] </ref>.
Reference: [19] <author> Lisitsa, A.P., Sazonov, V.Yu.: </author> <title> -languages for sets and LOGSPACE-computable graph transformers, </title> <note> Theoretical Computer Science 175 (1997) 183-222 </note>
Reference-contexts: This approach is based on a work on Bounded Set Theory (BST) and on its -language [27]-[33], <ref> [19, 20] </ref> considered as a query language for data bases with complex or nested data. The notion of PTIME and LOGSPACE computability of set-theoretic operations was defined there in terms of graph transformers. <p> Bisimulation and corresponding approach to querying for the graphs representing data has been discussed in * [27]-[30],[33]: the acyclic case, via decoration restricted to collapsing, including a more general approach to encoding of HF-sets and to PTIME-computability over HF; cf. especially labelled case [30], * <ref> [32, 19] </ref>: approaching to LOGSPACE-computability over HF, * [31, 33]: cyclic label-free case on a more abstract theoretical level than here, including some proof theoretic considerations on BST, AFA, and a Logic of Inductive Definitions, * and also in the papers of A. Kosky [18] and P.
Reference: [20] <author> Lisitsa, A.P., Sazonov, V.Yu.: </author> <title> On linear ordering of strongly extensional finitely branching graphs and non-well-founded sets. </title> <type> DIMACS TR 97-05. </type> <institution> Rutgers University, </institution> <note> February 1997 (http://dimacs.rutgers.edu/TechnicalReports/1997.html; a shorter version of this paper to appear in Proc. of LFCS'97, Springer LNCS) </note>
Reference-contexts: This approach is based on a work on Bounded Set Theory (BST) and on its -language [27]-[33], <ref> [19, 20] </ref> considered as a query language for data bases with complex or nested data. The notion of PTIME and LOGSPACE computability of set-theoretic operations was defined there in terms of graph transformers. <p> The notion of PTIME and LOGSPACE computability of set-theoretic operations was defined there in terms of graph transformers. It was used representation of hereditarily-finite well-founded sets (of sets of sets, etc.) by vertices of finite graphs (possibly labelled [30] and acyclic, except <ref> [31, 20] </ref>). Another source is P. Aczel's non-well-founded set theory [2, 4, 9, 24, 31] which allows considering "cyclic" sets and data represented by cyclic graphs. <p> The proofs for a pure (label-free) version of are given in <ref> [20] </ref> on the base of [31]. 1 We will see that the abstract notion of hyperset occasionally and happily correlates also with that of HyperText: "Web documents are created by authors using a language called HTML (HyperText Markup Language) that offers short codes (also called tags) to designate graphical elements and <p> Theorem 3 below). 6 Linear Ordering of HFA and PTIME Computabil ity Let, for a while, a finitely branching graph g (say, = HFA or HFA 1 ) contain no labels. Then we can define iteratively as in <ref> [20] </ref> (by appropriate reconstructing a formula from [30] with using an idea from [8]) strict linear preorders k on g (which are decidable uniformly on k with respect to the oracle g): x 0 y * ) false; x k+1 y * ) x k y _ 8w 2 x [ <p> Definability in over HFA was reduced in [31] to definability of graph transformers in FO+LFP. It is well-known that such kind of recursion in linearly ordered finite domains, like a finite segment of natural numbers, is equivalent to PTIME-computability [26, 16, 21, 34, 13]. Therefore, Theorem 2 (cf. also <ref> [20] </ref>) implies - 13 - Theorem 3 (a) Definability in FO + IFP (i.e. recursion) over finite strongly extensional labelled graphs with predefined linear order only on the labels is equivalent to PTIME computability over these graphs. (b) Assuming a linear order L on labels, -definable operations over HFA L =
Reference: [21] <author> Livchak, </author> <title> A.B.: Languages of polynomial queries. </title> <editor> In: Raschet i optimizacija teplotehni-cheskih ob'ektov s pomosh'ju EVM, </editor> <booktitle> Sverdlovsk (1982) 41 (in Russian) </booktitle>
Reference-contexts: Both versions are equivalent over finite structures [14]. Definability in over HFA was reduced in [31] to definability of graph transformers in FO+LFP. It is well-known that such kind of recursion in linearly ordered finite domains, like a finite segment of natural numbers, is equivalent to PTIME-computability <ref> [26, 16, 21, 34, 13] </ref>.
Reference: [22] <author> Mendelzon, A. O., Mihaila, G.A., Milo, T. </author> : <title> Querying the World Wide Web. </title> <type> Draft, </type> <note> available by ftp: milo@math.tau.ac.il (1996) - 15 </note> - 
Reference-contexts: Here we reintroduce in a natural way non-well-founded version of BST and [31, 33] starting from motivations in WWW or WDB, rather than in abstract sets. We consider WDB as a (finitely branching) graph with labelled edges in a way analogous to <ref> [1, 22, 25] </ref>, however, with an essential difference based on the above mentioned approach to consider graph vertices as (denoting) antifounded sets, called also hypersets [4] 1 . To this end, the well-known notion of graph bisimulation due to D. Park (cf. [23]) is used crucially. <p> Some Comparisons. Of course, it is not strictly necessary to support set-theoretic (based on bisimulation) level of abstraction if paying attention to the precise syntax of addresses; cf. <ref> [1, 22, 25] </ref>. E.g. in [1] a general Turing machine model of browsing and searching is discussed where genericity of the underlying finitely-branching graph is understood in terms of the ordinary isomorphism of graphs, what corresponds to understanding addresses of the Web pages essentially more literally, than here.
Reference: [23] <author> Milner, R. </author> : <title> Operational and algebraic semantics of concurrent processes. </title> <booktitle> In: Handbook of Theoretical Computer Science, </booktitle> <editor> Ed. J. van Leeuwen, </editor> <publisher> Elsevier Science Publishers, B.V. </publisher> <year> (1990) </year> <month> 1201-1242 </month>
Reference-contexts: To this end, the well-known notion of graph bisimulation due to D. Park (cf. <ref> [23] </ref>) is used crucially.
Reference: [24] <author> Mislove, M., Moss, L., Oles, F.: </author> <title> Non-Well-Founded Sets Modeled as Ideal Fixed Points. </title> <booktitle> Information and Computation, </booktitle> <month> 93 </month> <year> (1991) </year> <month> 16-54 </month>
Reference-contexts: It was used representation of hereditarily-finite well-founded sets (of sets of sets, etc.) by vertices of finite graphs (possibly labelled [30] and acyclic, except [31, 20]). Another source is P. Aczel's non-well-founded set theory <ref> [2, 4, 9, 24, 31] </ref> which allows considering "cyclic" sets and data represented by cyclic graphs. Here we reintroduce in a natural way non-well-founded version of BST and [31, 33] starting from motivations in WWW or WDB, rather than in abstract sets.
Reference: [25] <author> Quass, Y., Rajaraman, A., Sagiv, Y., Ullman, J., Widom, J.: </author> <title> Querying semistructured heterogeneous information. </title> <type> Technical Report, </type> <institution> Stanford University, </institution> <month> December </month> <year> 1995. </year> <note> Available by anonymous ftp from db.stanford.edu. </note>
Reference-contexts: Here we reintroduce in a natural way non-well-founded version of BST and [31, 33] starting from motivations in WWW or WDB, rather than in abstract sets. We consider WDB as a (finitely branching) graph with labelled edges in a way analogous to <ref> [1, 22, 25] </ref>, however, with an essential difference based on the above mentioned approach to consider graph vertices as (denoting) antifounded sets, called also hypersets [4] 1 . To this end, the well-known notion of graph bisimulation due to D. Park (cf. [23]) is used crucially. <p> Some Comparisons. Of course, it is not strictly necessary to support set-theoretic (based on bisimulation) level of abstraction if paying attention to the precise syntax of addresses; cf. <ref> [1, 22, 25] </ref>. E.g. in [1] a general Turing machine model of browsing and searching is discussed where genericity of the underlying finitely-branching graph is understood in terms of the ordinary isomorphism of graphs, what corresponds to understanding addresses of the Web pages essentially more literally, than here.
Reference: [26] <author> Sazonov, V.Yu.: </author> <title> Polynomial computability and recursivity in finite domains. </title> <journal> Elektron-ische Informationsverarbeitung und Kybernetik 16, </journal> <volume> No. </volume> <month> 7 </month> <year> (1980) </year> <month> 319-323 </month>
Reference-contexts: Both versions are equivalent over finite structures [14]. Definability in over HFA was reduced in [31] to definability of graph transformers in FO+LFP. It is well-known that such kind of recursion in linearly ordered finite domains, like a finite segment of natural numbers, is equivalent to PTIME-computability <ref> [26, 16, 21, 34, 13] </ref>.
Reference: [27] <author> Sazonov, V.Yu.: </author> <title> Bounded set theory and polynomial computability. </title> <booktitle> Proc. of All Union Conf. on Applied Logic, Novosibirsk (1985) 188-191 (In Russian). </booktitle>
Reference-contexts: The latter, in comparison with SETL and , does not use deeply nested sets. So called semantic or -programming [12] is based mainly on considering unbounded, unlike , positive existential quantification. Some label-free version of this -language for pure universe HFA was considered in <ref> [27] </ref>, as well as labelled one for the well-founded case in [30]. <p> Some label-free version of this -language for pure universe HFA was considered in [27], as well as labelled one for the well-founded case in [30]. Natural axioms describing the meaning of -definable operations and predicates are presented in <ref> [27, 28, 33] </ref> and [31, 33] for pure well-founded and, respectively, non-well-founded case, as well as corresponding proof-theoretic considerations, so that we actually have a Bounded Set Theory with Anti-Foundation Axiom, BSTA.
Reference: [28] <author> Sazonov, V.Yu.: </author> <title> Bounded set theory, polynomial computability and -programming. Application aspects of mathematical logic. </title> <note> Computing systems 122 (1987) 110-132 (In Russian). Cf. also a short English version of this paper in: Lect. Not. Comput. Sci. 278, Springer (1987) 391-397 </note>
Reference-contexts: Some label-free version of this -language for pure universe HFA was considered in [27], as well as labelled one for the well-founded case in [30]. Natural axioms describing the meaning of -definable operations and predicates are presented in <ref> [27, 28, 33] </ref> and [31, 33] for pure well-founded and, respectively, non-well-founded case, as well as corresponding proof-theoretic considerations, so that we actually have a Bounded Set Theory with Anti-Foundation Axiom, BSTA.
Reference: [29] <author> Sazonov, V.Yu.: </author> <title> Bounded set theory and inductive definability. </title> <journal> Abstracts of Logic Colloquium'90. </journal> <note> JSL 56 Nu.3 (1991) 1141-1142 </note>
Reference: [30] <author> Sazonov, V.Yu.: </author> <title> Hereditarily-finite sets, data bases and polynomial-time computability. </title> <booktitle> Theoretical Computer Science, </booktitle> <month> 119 </month> <year> (1993) </year> <month> 187-214. </month>
Reference-contexts: The notion of PTIME and LOGSPACE computability of set-theoretic operations was defined there in terms of graph transformers. It was used representation of hereditarily-finite well-founded sets (of sets of sets, etc.) by vertices of finite graphs (possibly labelled <ref> [30] </ref> and acyclic, except [31, 20]). Another source is P. Aczel's non-well-founded set theory [2, 4, 9, 24, 31] which allows considering "cyclic" sets and data represented by cyclic graphs. <p> If all gu i are (quasi)tuples then gv is considered as (quasi)relation (a possibly heterogeneous set of (quasi)tuples). We see that the ordinary relational approach to Databases is easily absorbed by this WDB approach, and the same for the case of nested relations and complex objects (cf. also <ref> [30] </ref>) even having cyclic structure. The World-Wide Web seems so widely known that there is no strong reason to present any illustrating examples. Rather, WWW is serving as a nice illustration and possible application of Hyper Set Theory whose "bounded" version we describe below. <p> Also, in <ref> [30] </ref> HFA denoted well-founded universe with `A' staying for `attributes' which are called labels here. In this paper `A' means `Anti-Foundation Axiom' or `Aczel'. - 5 - is finite, HFA 1 consists also of hereditarily-finite sets, however, their transitive closure may be infinite (just countable). <p> Given arbitrary binary relation on labels T L 2 , consider corresponding largest, relativized to T , bisimulation relation (now denoted as :: T ; cf. <ref> [30] </ref>) g;s ( g;s 8m : y * s v9l : x * g u (lT m&x :: T y); (Alternatively, we could consider, as in [30], that only the first conjunct is present in these formulas. <p> binary relation on labels T L 2 , consider corresponding largest, relativized to T , bisimulation relation (now denoted as :: T ; cf. <ref> [30] </ref>) g;s ( g;s 8m : y * s v9l : x * g u (lT m&x :: T y); (Alternatively, we could consider, as in [30], that only the first conjunct is present in these formulas. <p> Any ff 2 HFA may serve as a type. However, for T a map, a type ff is usually simpler than x, and it properly reflects the "nested" structure of x. Cf. also <ref> [30] </ref> for corresponding tabular representations of (well-founded) HF-sets according to their types. This makes the present approach related with (nested) relational databases. Note, that now both sets and their types may be circular. Isomorphism of WDBs up to Bisimulation. <p> So called semantic or -programming [12] is based mainly on considering unbounded, unlike , positive existential quantification. Some label-free version of this -language for pure universe HFA was considered in [27], as well as labelled one for the well-founded case in <ref> [30] </ref>. Natural axioms describing the meaning of -definable operations and predicates are presented in [27, 28, 33] and [31, 33] for pure well-founded and, respectively, non-well-founded case, as well as corresponding proof-theoretic considerations, so that we actually have a Bounded Set Theory with Anti-Foundation Axiom, BSTA. <p> A very important property of -definable queries consists in their genericity (or abstractness), up to bisimulation. We define this notion following <ref> [30] </ref> where it was applied directly to HF-sets rather than to representing (finite acyclic) graphs. Cf. also [1] where the notion of genericity is considered only for boolean queries and without any connection to bisimulation, unlike this paper and [30]. <p> We define this notion following <ref> [30] </ref> where it was applied directly to HF-sets rather than to representing (finite acyclic) graphs. Cf. also [1] where the notion of genericity is considered only for boolean queries and without any connection to bisimulation, unlike this paper and [30]. A query Q (u) is called generic (up to bisimulation) if it preserves (i) bisimulation, (ii) labels and also (iii) isomorphism, up to bisimulation, of its inputs. <p> Moreover, considering properly the computability notion of a query as a graph transformer Q : hg; vi 7! hg 0 ; v 0 i = Q (g; v) satisfying (10) (reasonably defined by using encoding of abstract labelled graphs; cf. also <ref> [30] </ref>) leads inevitably to genericity of Q. Some Comparisons. Of course, it is not strictly necessary to support set-theoretic (based on bisimulation) level of abstraction if paying attention to the precise syntax of addresses; cf. [1, 22, 25]. <p> Bisimulation and corresponding approach to querying for the graphs representing data has been discussed in * [27]-<ref> [30] </ref>,[33]: the acyclic case, via decoration restricted to collapsing, including a more general approach to encoding of HF-sets and to PTIME-computability over HF; cf. especially labelled case [30], * [32, 19]: approaching to LOGSPACE-computability over HF, * [31, 33]: cyclic label-free case on a more abstract theoretical level than here, including some proof theoretic considerations on BST, AFA, and a Logic of Inductive Definitions, * and also in the papers of A. Kosky [18] and P. <p> Theorem 3 below). 6 Linear Ordering of HFA and PTIME Computabil ity Let, for a while, a finitely branching graph g (say, = HFA or HFA 1 ) contain no labels. Then we can define iteratively as in [20] (by appropriate reconstructing a formula from <ref> [30] </ref> with using an idea from [8]) strict linear preorders k on g (which are decidable uniformly on k with respect to the oracle g): x 0 y * ) false; x k+1 y * ) x k y _ 8w 2 x [ y (u k w ! 9p 2
Reference: [31] <author> Sazonov, V.Yu.: </author> <title> A bounded set theory with anti-foundation axiom and inductive defin-ability. </title> <booktitle> Computer Science Logic, 8th Workshop, </booktitle> <address> CSL'94 Kazimierz, Poland, </address> <month> September </month> <year> 1994, </year> <note> Selected Papers. Lecture Notes in Computer Science 933 Springer (1995) 527-541 </note>
Reference-contexts: The notion of PTIME and LOGSPACE computability of set-theoretic operations was defined there in terms of graph transformers. It was used representation of hereditarily-finite well-founded sets (of sets of sets, etc.) by vertices of finite graphs (possibly labelled [30] and acyclic, except <ref> [31, 20] </ref>). Another source is P. Aczel's non-well-founded set theory [2, 4, 9, 24, 31] which allows considering "cyclic" sets and data represented by cyclic graphs. <p> It was used representation of hereditarily-finite well-founded sets (of sets of sets, etc.) by vertices of finite graphs (possibly labelled [30] and acyclic, except [31, 20]). Another source is P. Aczel's non-well-founded set theory <ref> [2, 4, 9, 24, 31] </ref> which allows considering "cyclic" sets and data represented by cyclic graphs. Here we reintroduce in a natural way non-well-founded version of BST and [31, 33] starting from motivations in WWW or WDB, rather than in abstract sets. <p> Another source is P. Aczel's non-well-founded set theory [2, 4, 9, 24, 31] which allows considering "cyclic" sets and data represented by cyclic graphs. Here we reintroduce in a natural way non-well-founded version of BST and <ref> [31, 33] </ref> starting from motivations in WWW or WDB, rather than in abstract sets. <p> The proofs for a pure (label-free) version of are given in [20] on the base of <ref> [31] </ref>. 1 We will see that the abstract notion of hyperset occasionally and happily correlates also with that of HyperText: "Web documents are created by authors using a language called HTML (HyperText Markup Language) that offers short codes (also called tags) to designate graphical elements and links. <p> approach to WWW or WDB is in defining denotational semantics [[v]] g for any vertex v of a graph g in terms of visible part of a page [[p]] considered above. (Such a semantics [[-]] was also called decoration in [2] for the case of arbitrary graphs g; cf. also <ref> [4, 9, 31] </ref>. For well-founded g it is just A. Mostowski's collapsing [3] which we used in [27]-[30], [33]; cf. also [6]). <p> Some label-free version of this -language for pure universe HFA was considered in [27], as well as labelled one for the well-founded case in [30]. Natural axioms describing the meaning of -definable operations and predicates are presented in [27, 28, 33] and <ref> [31, 33] </ref> for pure well-founded and, respectively, non-well-founded case, as well as corresponding proof-theoretic considerations, so that we actually have a Bounded Set Theory with Anti-Foundation Axiom, BSTA. <p> In particular, this is the case for arbitrary -definable queries/updates Q (v) to WDB g where now set variables v range over addresses (i.e. graph vertices) rather than over corresponding HFA-sets (cf. also <ref> [31] </ref>). Here are examples. 1. <p> Important Properties of -Definable Queries. It can be shown by induction on the definition of -language that (in terms of its operational semantics in WDB terms sketched above) all -definable queries preserve bisimulation relation u g v between (addresses of ) pages (cf. <ref> [31] </ref> for more details). <p> approach to querying for the graphs representing data has been discussed in * [27]-[30],[33]: the acyclic case, via decoration restricted to collapsing, including a more general approach to encoding of HF-sets and to PTIME-computability over HF; cf. especially labelled case [30], * [32, 19]: approaching to LOGSPACE-computability over HF, * <ref> [31, 33] </ref>: cyclic label-free case on a more abstract theoretical level than here, including some proof theoretic considerations on BST, AFA, and a Logic of Inductive Definitions, * and also in the papers of A. Kosky [18] and P. <p> Remember that FO+LFP (or IFP) is First-Order Logic + the corresponding logical analogue of the-least (respectively, inflationary ) fixed point construct of . Both versions are equivalent over finite structures [14]. Definability in over HFA was reduced in <ref> [31] </ref> to definability of graph transformers in FO+LFP. It is well-known that such kind of recursion in linearly ordered finite domains, like a finite segment of natural numbers, is equivalent to PTIME-computability [26, 16, 21, 34, 13].
Reference: [32] <author> Sazonov, V.Yu., Lisitsa, </author> <title> A.P.: -languages for sets and sub-PTIME graph transformers. Database Theory - ICDT'95, </title> <booktitle> 5th International Conference, </booktitle> <address> Prague, Czech Republic, </address> <month> January </month> <year> 1995, </year> <booktitle> Proceedings. Lecture Notes in Computer Science 893 Springer (1995) 125-138 </booktitle>
Reference-contexts: Bisimulation and corresponding approach to querying for the graphs representing data has been discussed in * [27]-[30],[33]: the acyclic case, via decoration restricted to collapsing, including a more general approach to encoding of HF-sets and to PTIME-computability over HF; cf. especially labelled case [30], * <ref> [32, 19] </ref>: approaching to LOGSPACE-computability over HF, * [31, 33]: cyclic label-free case on a more abstract theoretical level than here, including some proof theoretic considerations on BST, AFA, and a Logic of Inductive Definitions, * and also in the papers of A. Kosky [18] and P.
Reference: [33] <editor> Sazonov, V.Yu.: </editor> <booktitle> On Bounded Set Theory (10th International Congress on Logic, Methodology and Philosophy of Sciences, </booktitle> <address> Florence, </address> <year> 1995), </year> <editor> M.L.Dalla Chiara et al. (eds.), </editor> <title> Logic and Scientific Methods, </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1997, </year> <pages> 85-103 </pages>
Reference-contexts: Another source is P. Aczel's non-well-founded set theory [2, 4, 9, 24, 31] which allows considering "cyclic" sets and data represented by cyclic graphs. Here we reintroduce in a natural way non-well-founded version of BST and <ref> [31, 33] </ref> starting from motivations in WWW or WDB, rather than in abstract sets. <p> For well-founded g it is just A. Mostowski's collapsing [3] which we used in [27]-[30], <ref> [33] </ref>; cf. also [6]). <p> Some label-free version of this -language for pure universe HFA was considered in [27], as well as labelled one for the well-founded case in [30]. Natural axioms describing the meaning of -definable operations and predicates are presented in <ref> [27, 28, 33] </ref> and [31, 33] for pure well-founded and, respectively, non-well-founded case, as well as corresponding proof-theoretic considerations, so that we actually have a Bounded Set Theory with Anti-Foundation Axiom, BSTA. <p> Some label-free version of this -language for pure universe HFA was considered in [27], as well as labelled one for the well-founded case in [30]. Natural axioms describing the meaning of -definable operations and predicates are presented in [27, 28, 33] and <ref> [31, 33] </ref> for pure well-founded and, respectively, non-well-founded case, as well as corresponding proof-theoretic considerations, so that we actually have a Bounded Set Theory with Anti-Foundation Axiom, BSTA. <p> approach to querying for the graphs representing data has been discussed in * [27]-[30],[33]: the acyclic case, via decoration restricted to collapsing, including a more general approach to encoding of HF-sets and to PTIME-computability over HF; cf. especially labelled case [30], * [32, 19]: approaching to LOGSPACE-computability over HF, * <ref> [31, 33] </ref>: cyclic label-free case on a more abstract theoretical level than here, including some proof theoretic considerations on BST, AFA, and a Logic of Inductive Definitions, * and also in the papers of A. Kosky [18] and P.
Reference: [34] <author> Vardi, M.: </author> <title> Complexity of relational query languages. </title> <booktitle> Proceedings of 14th Symposium on Theory of Computation (1982) 137-146 </booktitle>
Reference-contexts: Both versions are equivalent over finite structures [14]. Definability in over HFA was reduced in [31] to definability of graph transformers in FO+LFP. It is well-known that such kind of recursion in linearly ordered finite domains, like a finite segment of natural numbers, is equivalent to PTIME-computability <ref> [26, 16, 21, 34, 13] </ref>.
References-found: 34

