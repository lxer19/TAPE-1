URL: http://www.cs.cornell.edu/Info/People/kreitz/PS-files/98-MELL.ps
Refering-URL: http://www.cs.cornell.edu/Info/People/kreitz/Abstracts/98-MELL.html
Root-URL: 
Email: mantel@dfki.de  kreitz@cs.cornell.edu  
Phone: 2  
Title: A Matrix Characterization for MELL  
Author: Heiko Mantel Christoph Kreitz 
Address: Stuhlsatzenhausweg 3, 66123 Saarbrucken, Germany  Cornell-University, Ithaca, NY 14853-7501  
Affiliation: 1 German Research Center for Artificial Intelligence (DFKI)  Department of Computer Science  
Abstract: We present a matrix characterization of logical validity in the multiplicative fragment of linear logic with exponentials. In the process we elaborate a methodology for proving matrix characterizations correct and complete. Our characterization provides a foundation for a matrix-based proof search procedure for MELL as well as for a procedure which translates the machine-found proofs back into the usual sequent calculus.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> J.-M. Andreoli. </author> <title> Logic programming with focussing proofs in linear logic. </title> <journal> Journal of Logic and Computation, </journal> <volume> 2(3) </volume> <pages> 297-347, </pages> <year> 1993. </year>
Reference-contexts: The complexity of the multiplicative exponential fragment (MELL) is still unknown. Proof search in linear logic is difficult to automate. Girard's sequent calculus [12], although covering all of linear logic, contains too many redundancies to be useful for efficient proof search. Attempts to remove permutabilities from sequent proofs <ref> [1, 10] </ref> and to add proof strategies [21] have provided significant improvements but some redundancies remain because of the use of sequent calculi. Proof nets [7], on the other hand, can handle only a fragment of the logic. <p> In [15] we have developed a matrix characterization for MLL and shown how to extend the uniform proof search procedure accordingly. Our characterization uses Andreoli's focusing principle <ref> [1] </ref> as one of its major design steps and does not appear to share the limitations of the previous approaches. In this paper we present a matrix characterization for the full multiplicative exponential fragment including the constants 1 and ?. <p> Unless the principal formula has type -, this choice determines which rule can be applied. If a fi-rule is applied the context of the sequent must be partitioned onto the premises (context splitting). Several solutions have been proposed in order to optimize these choices <ref> [1, 10, 21, 6, 13] </ref>. Additional difficulties arise from the rules axiom , t , and . The rules axiom and t require an empty context which expresses that all formulas must be used up in a proof. <p> Dyadic sequent calculus 0 2 for ME LL in uniform notation 3 N-adic Sequent Calculi for ME LL In this section we define two intermediate sequent calculi which are closely related to Andreoli's dyadic calculus 2 and triadic calculus 3 <ref> [1] </ref> but differ in the way structural rules are handled. While Andreoli uses a lazy strategy for both contraction and weakening, our calculi 0 2 and 0 3 , which are not intended for proof search, use an eager strategy for contraction. <p> Then there is a multiplicity 2 such that the dyadic sequent S 2 = succ 1 (-c ) : can be derived in 0 2 . Theorem 1 can be proven by induction over the structure of P 1 , similarly to the completeness proof of 2 in <ref> [1] </ref>. Eager handling of contraction does not violate completeness since applications of contraction can be permuted downwards in a proof [10]. 1 Wallen defines multiplicities for modal and intuitionistic logics based on occurrences within a formula tree [22]. <p> For linear logic, the permutabilities and non-permutabilities of sequent rules have been investigated in <ref> [1, 10] </ref>. Andreoli's focusing principle [1] allows to fix the order of permutable rules without losing completeness. A distinctive feature of this principle is that the reduction ordering is determined for layers of formulas rather than for individual formulas. <p> For linear logic, the permutabilities and non-permutabilities of sequent rules have been investigated in [1, 10]. Andreoli's focusing principle <ref> [1] </ref> allows to fix the order of permutable rules without losing completeness. A distinctive feature of this principle is that the reduction ordering is determined for layers of formulas rather than for individual formulas. <p> Depending on the structure of the formula this enforces a sequence of rules to be applied next. Since selection of these rules is deterministic, the permutabilities of rule applications are removed from the search space. This focusing principle is due to Andreoli <ref> [1] </ref>. The matrix characterization developed in this article exploits the focusing principle. However, it yields a representation with even less redundancies than a calculus like 0 3 can. Theorem 3 Completeness. Let P 2 be a 0 2 -proof for S 2 = fi : with multiplicity 2 . <p> Rules for inserting special positions into basic position trees Theorem 3 can be proven similarly to the completeness proof for the dyadic calculus in <ref> [1] </ref>. Like there inversion lemmas are needed. Theorem 4 Correctness. Let P 3 be a 0 3 -proof for S 3 = fi : * L (or fi : + F ) with multiplicity 3 .
Reference: 2. <author> P. B. Andrews. </author> <title> Theorem-Proving via General Matings. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 28 (2), </volume> <pages> 193-214, </pages> <year> 1981. </year>
Reference-contexts: Proof nets [7], on the other hand, can handle only a fragment of the logic. Matrix characterizations of logical validity, originally developed as foundation of the connection method for classical logic <ref> [2, 3, 5] </ref>, avoid many kinds of redundancies contained in sequent calculi and yield a very compact representation of the search space. They have successfully been extended to intuitionistic and modal logics [22] and serve as a basis for a uniform proof method for classical and non-classical logics [20].
Reference: 3. <author> W. Bibel. </author> <title> On matrices with connections. </title> <journal> Journal of the ACM, </journal> <pages> 28(633-645), </pages> <year> 1981. </year>
Reference-contexts: Proof nets [7], on the other hand, can handle only a fragment of the logic. Matrix characterizations of logical validity, originally developed as foundation of the connection method for classical logic <ref> [2, 3, 5] </ref>, avoid many kinds of redundancies contained in sequent calculi and yield a very compact representation of the search space. They have successfully been extended to intuitionistic and modal logics [22] and serve as a basis for a uniform proof method for classical and non-classical logics [20].
Reference: 4. <author> W. Bibel. </author> <title> A deductive solution for plan generation. </title> <journal> New Generation Computing, </journal> <volume> 4 </volume> <pages> 115-132, </pages> <year> 1986. </year>
Reference-contexts: They have successfully been extended to intuitionistic and modal logics [22] and serve as a basis for a uniform proof method for classical and non-classical logics [20]. Resource management similar to multiplicative linear logic is already addressed by the linear connection method <ref> [4] </ref>. Fronhofer [8] gives a matrix characterization of MLL which can also capture some aspects of weakening and contraction but does not appear to generalize any further. In [15] we have developed a matrix characterization for MLL and shown how to extend the uniform proof search procedure accordingly.
Reference: 5. <author> W. Bibel. </author> <title> Automated Theorem Proving. </title> <publisher> Vieweg Verlag, </publisher> <year> 1987. </year>
Reference-contexts: Proof nets [7], on the other hand, can handle only a fragment of the logic. Matrix characterizations of logical validity, originally developed as foundation of the connection method for classical logic <ref> [2, 3, 5] </ref>, avoid many kinds of redundancies contained in sequent calculi and yield a very compact representation of the search space. They have successfully been extended to intuitionistic and modal logics [22] and serve as a basis for a uniform proof method for classical and non-classical logics [20]. <p> In the following we will always assume M to be a matrix, C and W to be a set of connections and a weakening map for M, and to be a prefix substitution. Complementarity. Matrix characterizations for classical <ref> [5] </ref> and non-classical [22] logics are based on a notion of complementarity . Essentially this means that every path through a matrix must contain a unifiable connection. These requirements also hold for linear logic but have to be extended by a few additional properties.
Reference: 6. <author> I. Cervesato, J.S. Hodas, F. Pfenning. </author> <title> Efficient resource management for linear logic proof search. </title> <booktitle> In Extensions of Logic Programming, </booktitle> <pages> LNAI , pages 67-81. </pages> <publisher> Springer Verlag, </publisher> <year> 1996. </year>
Reference-contexts: Unless the principal formula has type -, this choice determines which rule can be applied. If a fi-rule is applied the context of the sequent must be partitioned onto the premises (context splitting). Several solutions have been proposed in order to optimize these choices <ref> [1, 10, 21, 6, 13] </ref>. Additional difficulties arise from the rules axiom , t , and . The rules axiom and t require an empty context which expresses that all formulas must be used up in a proof.
Reference: 7. <author> V. Danos & L. Regnier. </author> <title> The structure of the multiplicatives. </title> <journal> Archive for Mathematical Logic, </journal> <volume> 28 </volume> <pages> 181-203, </pages> <year> 1989. </year>
Reference-contexts: Attempts to remove permutabilities from sequent proofs [1, 10] and to add proof strategies [21] have provided significant improvements but some redundancies remain because of the use of sequent calculi. Proof nets <ref> [7] </ref>, on the other hand, can handle only a fragment of the logic.
Reference: 8. <author> B. Fronhofer. </author> <title> The action-as-implication paradigm. </title> <publisher> CS Press, </publisher> <year> 1996. </year>
Reference-contexts: They have successfully been extended to intuitionistic and modal logics [22] and serve as a basis for a uniform proof method for classical and non-classical logics [20]. Resource management similar to multiplicative linear logic is already addressed by the linear connection method [4]. Fronhofer <ref> [8] </ref> gives a matrix characterization of MLL which can also capture some aspects of weakening and contraction but does not appear to generalize any further. In [15] we have developed a matrix characterization for MLL and shown how to extend the uniform proof search procedure accordingly. <p> The cardinality property expresses that the number of branches in a sequent proof is adequate. It substitutes the minimality property in <ref> [8] </ref> which appears to be infeasible for proof search in the multiplicative fragment and would require even more complicated tests for MELL. The cardinality card (M) of M is the number of fi-type positions in Pos (M). <p> Consequently F is valid in MELL. 6 Conclusion We have presented a matrix characterization of logical validity for the multiplicative exponential fragment of linear logic (MELL). It extends our characterization for MLL [15] by the exponentials ? and ! and the multiplicative constants which, as pointed out in <ref> [8] </ref>, is by no means trivial and goes beyond all existing matrix characterizations for fragments of linear logic. In the process, we have also outlined a methodology for proving the matrix characterization correct and complete. <p> Different types of special positions and the novel concept of a weakening map had to be introduced in order to deal with the aspects of resource management in linear logic. Fronhofer has developed matrix characterizations for various variations of the mul-tiplicative fragment <ref> [8] </ref>. Compared to his work for linear logic our characterization captures additionally the multiplicative constants and the controlled application of weakening and contraction. In fact, we are very confident in that our methodology will extend to further fragments of linear logic as well as to other logics.
Reference: 9. <author> D. </author> <title> Galmiche. Connection methods in linear logic fragments and proof nets. Technical report, </title> <booktitle> CADE-13 workshop on proof search in type-theoretic languages, </booktitle> <year> 1996. </year>
Reference: 10. <author> D. Galmiche & G. Perrier. </author> <title> On proof normalization in linear logic. </title> <journal> Theoretical Computer Science, </journal> <volume> 135 </volume> <pages> 67-110, </pages> <year> 1994. </year>
Reference-contexts: The complexity of the multiplicative exponential fragment (MELL) is still unknown. Proof search in linear logic is difficult to automate. Girard's sequent calculus [12], although covering all of linear logic, contains too many redundancies to be useful for efficient proof search. Attempts to remove permutabilities from sequent proofs <ref> [1, 10] </ref> and to add proof strategies [21] have provided significant improvements but some redundancies remain because of the use of sequent calculi. Proof nets [7], on the other hand, can handle only a fragment of the logic. <p> Unless the principal formula has type -, this choice determines which rule can be applied. If a fi-rule is applied the context of the sequent must be partitioned onto the premises (context splitting). Several solutions have been proposed in order to optimize these choices <ref> [1, 10, 21, 6, 13] </ref>. Additional difficulties arise from the rules axiom , t , and . The rules axiom and t require an empty context which expresses that all formulas must be used up in a proof. <p> Theorem 1 can be proven by induction over the structure of P 1 , similarly to the completeness proof of 2 in [1]. Eager handling of contraction does not violate completeness since applications of contraction can be permuted downwards in a proof <ref> [10] </ref>. 1 Wallen defines multiplicities for modal and intuitionistic logics based on occurrences within a formula tree [22]. <p> For linear logic, the permutabilities and non-permutabilities of sequent rules have been investigated in <ref> [1, 10] </ref>. Andreoli's focusing principle [1] allows to fix the order of permutable rules without losing completeness. A distinctive feature of this principle is that the reduction ordering is determined for layers of formulas rather than for individual formulas.
Reference: 11. <author> V. Gehlot and C. Gunter. </author> <title> Normal process representatives. </title> <booktitle> Sixth Annual Symposium on Logic in Computer Science, </booktitle> <pages> pages 200-207, </pages> <year> 1991. </year>
Reference-contexts: 1 Introduction Linear logic [12] has become known as a very expressive formalism for reasoning about action and change. During its rather rapid development linear logic has found applications in logic programming [14, 19], modeling concurrent computation <ref> [11] </ref>, planning [18], and many others. The expressiveness of linear logic, however, results in a high complexity. Propositional linear logic is undecidable and even the multiplicative fragment (MLL) is already N P-complete [16]. The complexity of the multiplicative exponential fragment (MELL) is still unknown.
Reference: 12. <author> J.-Y. Girard. </author> <title> Linear logic. </title> <journal> Theoretical Computer Science, </journal> <volume> 50 </volume> <pages> 1-102, </pages> <year> 1987. </year>
Reference-contexts: 1 Introduction Linear logic <ref> [12] </ref> has become known as a very expressive formalism for reasoning about action and change. During its rather rapid development linear logic has found applications in logic programming [14, 19], modeling concurrent computation [11], planning [18], and many others. The expressiveness of linear logic, however, results in a high complexity. <p> Propositional linear logic is undecidable and even the multiplicative fragment (MLL) is already N P-complete [16]. The complexity of the multiplicative exponential fragment (MELL) is still unknown. Proof search in linear logic is difficult to automate. Girard's sequent calculus <ref> [12] </ref>, although covering all of linear logic, contains too many redundancies to be useful for efficient proof search. Attempts to remove permutabilities from sequent proofs [1, 10] and to add proof strategies [21] have provided significant improvements but some redundancies remain because of the use of sequent calculi. <p> Each newly introduced calculus adds one more compactification principle to the previous one and can be proven correct and complete with respect to it. We expect that this methodology will generalize to further fragments of linear logic. We first create a compact representation 0 1 of Girard's sequent calculus <ref> [12] </ref> by adopting Smullyan's tableaux notation to MELL (Section 2). <p> Finally, in Section 5, we arrive at the matrix characterization, the most compact of all calculi, which will become the foundation for efficient proof search procedures based on the connection method. 2 Multiplicative Exponential Linear Logic Linear logic <ref> [12] </ref> treats formulas like resources which disappear after their use unless they are explicitly marked as reusable. Technically, linear logic can be seen as the outcome of removing the structural rules for contraction and weakening from the classical sequent calculus and re-introducing them in a controlled manner. <p> A principal formula is a formula which occurs in the conclusion but not in any premise. Formulas which occur in a premise but not in the conclusion are called active. All other formulas compose the context. 0 1 can be shown correct and complete wrt. Girard`s original sequent calculus <ref> [12] </ref> by a straightforward induction over the structure of proofs. In analytic proof search one starts with the sequent to be proven and reduces it by application of rules until the axiom -rule or the t -rule can be applied. There are several choice points within this process.
Reference: 13. <author> J. Harland and D. Pym. </author> <title> Resource-Distribution via Boolean Constraints. </title> <booktitle> 14 th Conference on Automated Deduction, </booktitle> <volume> LNCS 1249, </volume> <pages> pp. 222-236. </pages> <publisher> Springer Verlag, </publisher> <year> 1997. </year>
Reference-contexts: Unless the principal formula has type -, this choice determines which rule can be applied. If a fi-rule is applied the context of the sequent must be partitioned onto the premises (context splitting). Several solutions have been proposed in order to optimize these choices <ref> [1, 10, 21, 6, 13] </ref>. Additional difficulties arise from the rules axiom , t , and . The rules axiom and t require an empty context which expresses that all formulas must be used up in a proof.
Reference: 14. <author> J.S. Hodas & D. Miller. </author> <title> Logic programming in a fragment of linear logic. </title> <journal> Journal of Information and Computation, </journal> <volume> 110(2) </volume> <pages> 327-365, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction Linear logic [12] has become known as a very expressive formalism for reasoning about action and change. During its rather rapid development linear logic has found applications in logic programming <ref> [14, 19] </ref>, modeling concurrent computation [11], planning [18], and many others. The expressiveness of linear logic, however, results in a high complexity. Propositional linear logic is undecidable and even the multiplicative fragment (MLL) is already N P-complete [16]. The complexity of the multiplicative exponential fragment (MELL) is still unknown.
Reference: 15. <editor> C. Kreitz, H. Mantel, J. Otten, S. Schmitt. </editor> <booktitle> Connection-Based Proof Construction in Linear Logic. 14 th Conference on Automated Deduction, </booktitle> <volume> LNCS 1249, </volume> <pages> pp. 207-221. </pages> <publisher> Springer Verlag, </publisher> <year> 1997. </year>
Reference-contexts: Resource management similar to multiplicative linear logic is already addressed by the linear connection method [4]. Fronhofer [8] gives a matrix characterization of MLL which can also capture some aspects of weakening and contraction but does not appear to generalize any further. In <ref> [15] </ref> we have developed a matrix characterization for MLL and shown how to extend the uniform proof search procedure accordingly. Our characterization uses Andreoli's focusing principle [1] as one of its major design steps and does not appear to share the limitations of the previous approaches. <p> It yields a compactified representation of the search space which can be exploited by proof search methods in the same way as for other logics [20]. The method has been extended uniformly to multiplicative linear logic, as shown in <ref> [15] </ref>. Along the same lines an extension to MELL is possible. Theorem 14 Characterization Theorem. A formula F is valid in MELL if and only if for some multiplicity the corresponding matrix M is complementary. Proof. <p> Consequently F is valid in MELL. 6 Conclusion We have presented a matrix characterization of logical validity for the multiplicative exponential fragment of linear logic (MELL). It extends our characterization for MLL <ref> [15] </ref> by the exponentials ? and ! and the multiplicative constants which, as pointed out in [8], is by no means trivial and goes beyond all existing matrix characterizations for fragments of linear logic. <p> Matrix characterizations are known to be a foundation for efficient proof search procedures for classical, modal and intuitionistic logics [20] and MLL <ref> [15] </ref>. We are very confident these procedures can now be extended to MELL and further fragments of linear logic, as soon as our methodology has led us to a matrix characterization for these fragments. <p> In the future we plan to extend the characterization to quantifiers and possibly to the additive fragment as well. We will also adapt the proof search and transformation procedures for MLL <ref> [15] </ref> to MELL and all other logics for which we will construct a characterization. The development of matrix systems as a general theory of matrix characterizations appears to be possible.
Reference: 16. <author> P. Lincoln and T. Winkler. </author> <title> Constant-only multiplicative linear logic is NP-complete. </title> <journal> Theoretical Computer Science, </journal> <volume> 135 </volume> <pages> 155-169, </pages> <year> 1994. </year>
Reference-contexts: The expressiveness of linear logic, however, results in a high complexity. Propositional linear logic is undecidable and even the multiplicative fragment (MLL) is already N P-complete <ref> [16] </ref>. The complexity of the multiplicative exponential fragment (MELL) is still unknown. Proof search in linear logic is difficult to automate. Girard's sequent calculus [12], although covering all of linear logic, contains too many redundancies to be useful for efficient proof search.
Reference: 17. <author> H. Mantel. </author> <title> Developing a Matrix Characterization for MELL Technical Report, </title> <institution> DFKI Saarbrucken, </institution> <month> December </month> <year> 1997. </year>
Reference-contexts: In the induction step we perform a complete case analysis of the structure of M. The difficult case where E must be applied is shown with the help of lemma 10. The remaining proof is tedious but straightforward. Details can be found in <ref> [17] </ref>. Completeness. For a given proof P of a matrix M we construct a set ConSet (P) of connections, a weakening map WeakMap (P), and a reduction ordering red (P). The latter will eventually lead to a prefix substitution P which makes M complementary. <p> The individual proofs are quite lengthy because induction over P and case analysis is necessary. Details can be found in the author's report <ref> [17] </ref>. The Characterization. The characterization theorem proven in this section is the foundation for matrix based proof search methods. It yields a compactified representation of the search space which can be exploited by proof search methods in the same way as for other logics [20].
Reference: 18. <author> M. Masseron, C. Tollu, J. Vauzeilles. </author> <title> Generating plans in linear logic. </title> <booktitle> In Foundations of Software Technology and Theoretical Computer Science, </booktitle> <publisher> LNCS, Springer Verlag,1991. </publisher>
Reference-contexts: 1 Introduction Linear logic [12] has become known as a very expressive formalism for reasoning about action and change. During its rather rapid development linear logic has found applications in logic programming [14, 19], modeling concurrent computation [11], planning <ref> [18] </ref>, and many others. The expressiveness of linear logic, however, results in a high complexity. Propositional linear logic is undecidable and even the multiplicative fragment (MLL) is already N P-complete [16]. The complexity of the multiplicative exponential fragment (MELL) is still unknown.
Reference: 19. <author> D. Miller. FORUM: </author> <title> A Multiple-Conclusion Specification Logic. </title> <journal> Theoretical Computer Science, </journal> <volume> 165(1) </volume> <pages> 201-232, </pages> <year> 1996. </year>
Reference-contexts: 1 Introduction Linear logic [12] has become known as a very expressive formalism for reasoning about action and change. During its rather rapid development linear logic has found applications in logic programming <ref> [14, 19] </ref>, modeling concurrent computation [11], planning [18], and many others. The expressiveness of linear logic, however, results in a high complexity. Propositional linear logic is undecidable and even the multiplicative fragment (MLL) is already N P-complete [16]. The complexity of the multiplicative exponential fragment (MELL) is still unknown. <p> The rule requires that all formulas in the context are of type -. Though the connectives of linear logic make proof search more difficult they also give rise to new possibilities. Some applications for linear logic programming are illustrated in <ref> [19] </ref>. Example 1.
Reference: 20. <author> J. Otten & C. </author> <title> Kreitz. A Uniform Proof Procedure for Classical and Non-classical Logics. </title> <booktitle> KI-96: Advances in Artificial Intelligence, LNAI 1137, </booktitle> <pages> pp. 307-319. </pages> <publisher> Springer Verlag, </publisher> <year> 1996. </year>
Reference-contexts: They have successfully been extended to intuitionistic and modal logics [22] and serve as a basis for a uniform proof method for classical and non-classical logics <ref> [20] </ref>. Resource management similar to multiplicative linear logic is already addressed by the linear connection method [4]. Fronhofer [8] gives a matrix characterization of MLL which can also capture some aspects of weakening and contraction but does not appear to generalize any further. <p> The Characterization. The characterization theorem proven in this section is the foundation for matrix based proof search methods. It yields a compactified representation of the search space which can be exploited by proof search methods in the same way as for other logics <ref> [20] </ref>. The method has been extended uniformly to multiplicative linear logic, as shown in [15]. Along the same lines an extension to MELL is possible. Theorem 14 Characterization Theorem. A formula F is valid in MELL if and only if for some multiplicity the corresponding matrix M is complementary. Proof. <p> Matrix characterizations are known to be a foundation for efficient proof search procedures for classical, modal and intuitionistic logics <ref> [20] </ref> and MLL [15]. We are very confident these procedures can now be extended to MELL and further fragments of linear logic, as soon as our methodology has led us to a matrix characterization for these fragments.
Reference: 21. <author> T. Tammet. </author> <title> Proof strategies in linear logic. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 12 </volume> <pages> 273-304, </pages> <year> 1994. </year>
Reference-contexts: Proof search in linear logic is difficult to automate. Girard's sequent calculus [12], although covering all of linear logic, contains too many redundancies to be useful for efficient proof search. Attempts to remove permutabilities from sequent proofs [1, 10] and to add proof strategies <ref> [21] </ref> have provided significant improvements but some redundancies remain because of the use of sequent calculi. Proof nets [7], on the other hand, can handle only a fragment of the logic. <p> Unless the principal formula has type -, this choice determines which rule can be applied. If a fi-rule is applied the context of the sequent must be partitioned onto the premises (context splitting). Several solutions have been proposed in order to optimize these choices <ref> [1, 10, 21, 6, 13] </ref>. Additional difficulties arise from the rules axiom , t , and . The rules axiom and t require an empty context which expresses that all formulas must be used up in a proof.
Reference: 22. <author> L. Wallen. </author> <title> Automated deduction in nonclassical logic. </title> <publisher> MIT Press, </publisher> <year> 1990. </year> <title> This article was processed using the L A T E X macro package with LLNCS style </title>
Reference-contexts: Matrix characterizations of logical validity, originally developed as foundation of the connection method for classical logic [2, 3, 5], avoid many kinds of redundancies contained in sequent calculi and yield a very compact representation of the search space. They have successfully been extended to intuitionistic and modal logics <ref> [22] </ref> and serve as a basis for a uniform proof method for classical and non-classical logics [20]. Resource management similar to multiplicative linear logic is already addressed by the linear connection method [4]. <p> While Andreoli uses a lazy strategy for both contraction and weakening, our calculi 0 2 and 0 3 , which are not intended for proof search, use an eager strategy for contraction. Eager contraction corresponds to the concept of multiplicities in matrix characterizations <ref> [22] </ref>. <p> Eager handling of contraction does not violate completeness since applications of contraction can be permuted downwards in a proof [10]. 1 Wallen defines multiplicities for modal and intuitionistic logics based on occurrences within a formula tree <ref> [22] </ref>. <p> In order to reason about the logical validity as such rather than to search for one specific proof, the non-classical aspects of sequent proofs must be expressed in a compact way. Wallen <ref> [22] </ref> uses prefixes of special positions for modal logics and intuitionistic logic. We adapt this approach to MELL and propose position calculi as an intermediate step in the development of matrix characterizations. <p> In the following we will always assume M to be a matrix, C and W to be a set of connections and a weakening map for M, and to be a prefix substitution. Complementarity. Matrix characterizations for classical [5] and non-classical <ref> [22] </ref> logics are based on a notion of complementarity . Essentially this means that every path through a matrix must contain a unifiable connection. These requirements also hold for linear logic but have to be extended by a few additional properties. We shall specify all these requirements now. <p> If applied to modal or intuitionistic logics, our methodology would lead to the same characterization as given by Wallen <ref> [22] </ref>. In order to capture a resource sensitive logic, however, we had to refine his work. The notion of multiplicities has been based on positions rather than on basic positions.
References-found: 22

