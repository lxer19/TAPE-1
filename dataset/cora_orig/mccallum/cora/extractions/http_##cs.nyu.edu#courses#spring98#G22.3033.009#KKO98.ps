URL: http://cs.nyu.edu/courses/spring98/G22.3033.009/KKO98.ps
Refering-URL: http://cs.nyu.edu/courses/spring98/G22.3033.009/index.html
Root-URL: http://www.cs.nyu.edu
Email: karaul@cs.nyu.edu; +1-212-998-3493  
Title: WebSeAl: Web Server Allocation  
Author: Mehmet Karaul Yannis A. Korilis Ariel Orda 
Note: Research partially supported by DARPA, NSF, and Intel. Contact author: Mehmet Karaul,  
Date: October 8, 1997  
Address: New York University  New York University. 251 Mercer Street, New York, NY 10012-1185, U.S.A.;  
Affiliation: Dept. of Computer Science  Bell Labs, Lucent Technologies  Dept. of Electrical Eng. Technion  Department of Computer Science,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> D. Andresen, T. Yang, V. Holmedahl, and O.H. Ibarra. Sweb: </author> <title> Towards a scalable world wide web server on multicomputers. </title> <booktitle> In IPPS: 10th International Parallel Processing Symposium. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1996. </year>
Reference-contexts: Section 3 discusses WebSeAl's architecture and describes how clients strive minimize delays. Section 4 shows how load balancing can achieved by introducing cost functions. Experiment results showing WebSeAl's performance are presented in Section 5 and Section 6 provides some concluding remarks. 2 Related Work The HTTP redirect <ref> [1] </ref> approach uses the HTTP return code URL Redirection [2] to perform load balancing. A busy server returns the address of another server instead of the actual response, asking the client to resubmit its request to that server. This results in additional network traffic and increased latency.
Reference: [2] <author> T. Berners-Lee, R. Fielding, and H. Nielsen. </author> <title> RFC 1945: Hypertext transfer protocol | HTTP/ 1.0, </title> <month> May </month> <year> 1996. </year>
Reference-contexts: Section 4 shows how load balancing can achieved by introducing cost functions. Experiment results showing WebSeAl's performance are presented in Section 5 and Section 6 provides some concluding remarks. 2 Related Work The HTTP redirect [1] approach uses the HTTP return code URL Redirection <ref> [2] </ref> to perform load balancing. A busy server returns the address of another server instead of the actual response, asking the client to resubmit its request to that server. This results in additional network traffic and increased latency. <p> Upon receipt of a request, each server agent inspects this timestamp and includes the addresses in the response only if more up-to-date address information is available. This is very similar in nature to the If-modified-since header <ref> [2] </ref>, which is used to avoid retrieving cached files which have not been modified until a certain date. HTTP allows application specific header fields and requires that all intermediaries such as proxies or gateways conforming to HTTP ignore these and forward them unchanged.
Reference: [3] <author> T. Brisco. </author> <title> RFC 1794: DNS support for load balancing, </title> <month> April </month> <year> 1995. </year> <month> 23 </month>
Reference-contexts: This results in additional network traffic and increased latency. Every request is initially addressed to the publicly known server which creates a single point of failure and the potential for a bottleneck due to servicing redirects. Domain Name Server (DNS) based approaches <ref> [3, 10, 5] </ref> perform load balancing at the name resolution level. The name server at the server side is modified to respond to translation requests with the IP numbers of different host in a Round-Robin fashion. This results in partitioning client requests among the replicated hosts.
Reference: [4] <author> Kimberly C. Claffy, Hans-Werner Braun, and George C. Polyzos. </author> <title> Tracking long-term growth of the NSFNET. </title> <journal> Communications of the ACM, </journal> <volume> 37(8) </volume> <pages> 34-45, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: which are: * Weighted Average: When calculating the performance estimate of a replica, more recent data should influence the overall performance more than older data and the estimates should be updated more frequently. * Time-of-Day: Network conditions and server usage vary with the time-of-day or the day of the week <ref> [4, 9] </ref>, and this information can be considered in the routing strategy. WebSeAl allows different clients to use different routing strategies. We plan to experiment with various strategies and to investigate how each one and various combinations perform in different settings.
Reference: [5] <author> IBM Corporation. </author> <title> Interactive Network Dispatcher User's Guide. </title> <note> 1997, http://www.ics.raleigh.ibm.com/netdispatch/ND2MST.HTM. </note>
Reference-contexts: This results in additional network traffic and increased latency. Every request is initially addressed to the publicly known server which creates a single point of failure and the potential for a bottleneck due to servicing redirects. Domain Name Server (DNS) based approaches <ref> [3, 10, 5] </ref> perform load balancing at the name resolution level. The name server at the server side is modified to respond to translation requests with the IP numbers of different host in a Round-Robin fashion. This results in partitioning client requests among the replicated hosts. <p> This results in partitioning client requests among the replicated hosts. The main disadvantage of this approach is that intermediate name servers and clients cache name-to-IP mappings which can result in significant load imbalance. Server side approaches <ref> [7, 5] </ref> use a server side routing module which redirects all incoming requests to a set of clustered hosts based on load characteristics. This is achieved at the IP layer|the routing module modifies all IP packets before forwarding them to individual hosts.
Reference: [6] <author> Om P. Damani, P. Emerald Chung, Yennun Huang, Chandra Kintala, and Yi-Min Wang. One-IP: </author> <title> Techniques for hosting a service on a cluster of machines. </title> <booktitle> In Sixth International World Wide Web Conference, </booktitle> <address> April 7-11, 1997. Santa Clara, CA, </address> <year> 1997. </year>
Reference-contexts: This is achieved at the IP layer|the routing module modifies all IP packets before forwarding them to individual hosts. An alternate server side solution which avoids modifying IP packets is presented in <ref> [6] </ref>. These approaches have the drawback that the routing module represents a single point of failure, and that it can become a bottleneck since all requests pass through it.
Reference: [7] <author> D. Dias, W. Kish, R. Mukherjee, and R. Tewari. </author> <title> A scalable and highly available server. </title> <booktitle> In IEEE, editor, Digest of Papers. COMPCON `96. Technologies for the Information Superhighway. Forty-First IEEE Computer Society International Conference: </booktitle> <pages> February 25-28, </pages> <address> 1996 Santa Clara, California, </address> <pages> pages 68-74. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1996. </year>
Reference-contexts: This results in partitioning client requests among the replicated hosts. The main disadvantage of this approach is that intermediate name servers and clients cache name-to-IP mappings which can result in significant load imbalance. Server side approaches <ref> [7, 5] </ref> use a server side routing module which redirects all incoming requests to a set of clustered hosts based on load characteristics. This is achieved at the IP layer|the routing module modifies all IP packets before forwarding them to individual hosts.
Reference: [8] <author> John H. Howard, Michael L. Kazar, Sherri G. Menees, David A. Nichols, M. Satyanarayanan, Robert N. Sidebotham, and Michael J. West. </author> <title> Scale and performance in a distributed file system. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 6(1) </volume> <pages> 51-81, </pages> <month> February </month> <year> 1988. </year>
Reference-contexts: We assume that the service content is replicated and that each server knows about the IP numbers of all individual servers comprising the distributed service. This might be achieved through mirroring or with a distributed file system <ref> [8, 18] </ref>. Except for the bootstrapping phase, all replicas are treated equally, and as long as any one replica is responsive clients will be able to access the service. In WebSeAl, clients are responsible for routing individual requests to different servers comprising a distributed web site.
Reference: [9] <institution> Matrix Information and Directory Services Inc. MIDS Internet Weather Report. </institution> <note> http://www3.mids.org/weather/. </note>
Reference-contexts: which are: * Weighted Average: When calculating the performance estimate of a replica, more recent data should influence the overall performance more than older data and the estimates should be updated more frequently. * Time-of-Day: Network conditions and server usage vary with the time-of-day or the day of the week <ref> [4, 9] </ref>, and this information can be considered in the routing strategy. WebSeAl allows different clients to use different routing strategies. We plan to experiment with various strategies and to investigate how each one and various combinations perform in different settings.
Reference: [10] <author> Eric Dean Katz, Michelle Butler, and Robert McGrath. </author> <title> A scalable http server: The ncsa prototype. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 27(2) </volume> <pages> 155-164, </pages> <year> 1994. </year>
Reference-contexts: This results in additional network traffic and increased latency. Every request is initially addressed to the publicly known server which creates a single point of failure and the potential for a bottleneck due to servicing redirects. Domain Name Server (DNS) based approaches <ref> [3, 10, 5] </ref> perform load balancing at the name resolution level. The name server at the server side is modified to respond to translation requests with the IP numbers of different host in a Round-Robin fashion. This results in partitioning client requests among the replicated hosts.
Reference: [11] <author> Yannis A. Korilis, Aurel A. Lazar, and Ariel Orda. </author> <title> Architecting Noncooperative Networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 13(7) </volume> <pages> 1241-1251, </pages> <month> September </month> <year> 1995. </year> <month> 24 </month>
Reference-contexts: The interaction among the various distributed controllers (client agents in WebSeAl) can be modeled as a game, and Game Theory provides the systematic framework to study and analyze the behavior of such systems|for an overview of game theoretic aspects in 15 computer networking see <ref> [11] </ref> and references therein. The operating points of the system are the Nash equilibria of the underlying control game. Noncooperative equilibria are inherently inefficient: while each controller strives to optimize its individual performance, the overall behavior of the system is, generically, suboptimal.
Reference: [12] <author> Yannis A. Korilis, Theodora A. Varvarigou, and Sudhir R. Ahuja. </author> <title> Pricing Mechanisms for Dis--tributed Resource Management. </title> <type> Technical Memorandum BL0112570-120396-TM3, </type> <institution> Bell Laboratories, Lucent Technologies, </institution> <month> December </month> <year> 1996. </year>
Reference-contexts: For external client agents accessing the web site, this behavior can be enforced by actual usage-based service charges (for commercial web sites), or by means of limited electronic budget allocated to each client|an architecture developed according to these ideas is proposed in <ref> [12] </ref>. When client agents are sensitive to service costs, the service provider can control not only the load distribution over the available servers, but also the total offered load itself. To support pricing functionalities in WebSeAl, each distributed web site is equipped with a pricing manager module.
Reference: [13] <author> Yannis A. Korilis, Theodora A. Varvarigou, and Sudhir R. Ahuja. </author> <title> Optimal Pricing Strategies in Noncooperative Networks. </title> <booktitle> In Proceedings of the 5th International Conference on Telecommunication Systems: Modeling and Analysis, </booktitle> <pages> pages 110-123, </pages> <address> Nashville, TN, </address> <month> March </month> <year> 1997. </year>
Reference-contexts: The methodology is motivated by recent analytical studies in the area of networking which have shown that a network/service provider can enforce any desired operating point by means of appropriate pricing strategies <ref> [13, 14] </ref>. The key idea in WebSeAl's pricing mechanism is that there is a service cost associated with obtaining service from each server in the pool. Client agents are now making their routing decisions based not only on performance statistics, but also on service cost information for each server.
Reference: [14] <author> Yannis A. Korilis, Theodora A. Varvarigou, and Sudhir R. Ahuja. </author> <title> Pricing Noncooperative Networks, </title> <month> June </month> <year> 1997. </year> <note> Submitted to the IEEE/ACM Transactions on Networking. Available at http://www.multimedia.bell-labs.com/people/yannisk/price.html. [15] http://www.ncsa.uiuc.edu/. [16] http://www.netscape.com/. [17] http://www.netscape.com/download/client download.html. </note>
Reference-contexts: The methodology is motivated by recent analytical studies in the area of networking which have shown that a network/service provider can enforce any desired operating point by means of appropriate pricing strategies <ref> [13, 14] </ref>. The key idea in WebSeAl's pricing mechanism is that there is a service cost associated with obtaining service from each server in the pool. Client agents are now making their routing decisions based not only on performance statistics, but also on service cost information for each server. <p> The pricing strategies in the current version of WebSeAl are based on the analytical results of <ref> [14] </ref>. That study considers a system of general network resources accessed by a number of noncooperative clients. Each resource is characterized by its "capacity," that is, the maximum load that can be accommodated by the resource. <p> One way to determine these factors would be to map the parameters of the model considered in <ref> [14] </ref> to the characteristics of WebSeAl and apply the corresponding analytical results, expecting to achieve a good approximation of the desired operating point. Instead, we chose to use an adaptive algorithm, also proposed in [14], that does not depend on the details of the underlying analytical model. <p> way to determine these factors would be to map the parameters of the model considered in <ref> [14] </ref> to the characteristics of WebSeAl and apply the corresponding analytical results, expecting to achieve a good approximation of the desired operating point. Instead, we chose to use an adaptive algorithm, also proposed in [14], that does not depend on the details of the underlying analytical model. The algorithm updates the discount factors iteratively, based on the "distance" of the current operating point from the desired one. <p> Similarly, if the server receives more load than the desired one, its discount factor is increased. Under a set of general assumptions, guaranteeing that the client population as a total reacts "rationally" to price changes, this iterative scheme was shown in <ref> [14] </ref> to drive the system to the desired operating point. In the current implementation of WebSeAl, server load is expressed in requests per unit of time. Considering HTTP requests, we expect that each client generates a large number of requests each of small to moderate size.
Reference: [18] <author> Alex Siegal, Kenneth Birman, and Keith Marzullo. Deceit: </author> <title> A flexible distributed file system. </title> <booktitle> In Proc. 1990 Summer USENIX Conf., </booktitle> <address> Anaheim, </address> <month> June 11-15 </month> <year> 1990. </year> <note> [19] http://www.top100.com/. [20] http://www.tucows.com/. </note>
Reference-contexts: We assume that the service content is replicated and that each server knows about the IP numbers of all individual servers comprising the distributed service. This might be achieved through mirroring or with a distributed file system <ref> [8, 18] </ref>. Except for the bootstrapping phase, all replicas are treated equally, and as long as any one replica is responsive clients will be able to access the service. In WebSeAl, clients are responsible for routing individual requests to different servers comprising a distributed web site.
Reference: [21] <author> Chad Yoshikawa, Brent Chun, Paul Eastham, Amin Vahdat, Thomas Anderson, and David Culler. </author> <title> Using smart clients to build scalable services. </title> <booktitle> In USENIX, editor, 1997 Annual Technical Conference, </booktitle> <month> January 6-10, </month> <year> 1997. </year> <title> Anaheim, </title> <publisher> CA, </publisher> <pages> pages 105-117, </pages> <address> Berkeley, CA, USA, </address> <month> January </month> <year> 1997. </year> <booktitle> USENIX. </booktitle> <pages> 25 </pages>
Reference-contexts: Also, server side approaches work well only for clustered servers. 6 Perhaps most closely related to WebSeAl is the work presented in <ref> [21] </ref>. It uses a modified web browser to perform routing decisions at the client side. The browser downloads an applet which the service provider needs to implement to realize service specific routing.
References-found: 16

