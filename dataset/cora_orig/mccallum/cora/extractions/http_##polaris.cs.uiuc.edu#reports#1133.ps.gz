URL: http://polaris.cs.uiuc.edu/reports/1133.ps.gz
Refering-URL: http://polaris.cs.uiuc.edu/tech_reports.html
Root-URL: http://www.cs.uiuc.edu
Title: Run-Time Management of Lisp Parallelism and the Hierarchical Task Graph Program Representation  
Author: Mario Furnari Constan tine D. Polychronop oulos Cen ter for Sup ercomputing Researc h and Developmen t 
Date: May 29, 1991 revised July 24, 1991  
Address: Via Toiano, 6 80072 Arco Felice (Na) Italy  Street Urbana, IL 61801-2932  
Affiliation: Istituto di Cib ernetica  Univ ersit of Illinois 305 Talb ot -104 South Wrigh t  
Abstract: This pap er suggests how to extend the Hier ar chical Task Graph program representation, and its execution model to address the Lisp code parallelization problems. The advantages of this approac h lies in the fact of on avoiding to annotate Lisp programs, and in accoun ting for run-time scheduling policies all into a unifled envi-ronmen t. We start by reviewing the problem of run-time parallelism managemen t, flrst in the imp erativ e languages setting, and next in Lisp setting. Before describing the Hier ar chical Task Graph (HTG ) program represen tation [? ], we review the basic notions of control and data dep endence analysis. Finally we describ e how to modify the HTG and its execution model to tak e into accoun t for the Lazy Task Creation model [? ], and the Sponsor Model for exploiting speculativ e computations in Lisp [? ].
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> V. Aho, R. Sethi, J.D. </author> <title> Ullman Compilers: </title> <booktitle> Principles, Techniques, and Tools Addi-son Wesley, </booktitle> <address> Reading, Mass. U.S.A., </address> <year> (1986) </year>
Reference: [2] <author> J. Ferran te, K.J. Ottenstein, </author> <title> J.D.W arren The Program Dep endence Graph and Its Use in Optimization ACM-TOPLAS , 9, </title> <booktitle> (1987), </booktitle> <pages> pp. 319-343 </pages>
Reference: [3] <author> Gabriel R. P., and McCarth y J., </author> <booktitle> Queue-based MultiPro cessing LISP Confer ence Record of the 1984 ACM Symposium on LISP and Functional Pr ogramming , pages 25 - 43. </booktitle>
Reference: [4] <author> Goldman R. and Gabriel R. P.,QLISP: </author> <title> Exp erience and New Directions Symposium on Par al lel Pr ogramming: Experienc e with Applications, </title> <booktitle> Language and Systems. ACM, </booktitle> <pages> pages. 111-123, </pages> <month> July </month> <year> 1988 </year>
Reference: [5] <author> Goldman R. and Gabriel R. P., </author> <title> QLISP: </title> <booktitle> P arallel Pro cessing in Lisp IEEE Softwar e 6, </booktitle> <pages> pages. 5159, </pages> <year> (1989) </year>
Reference: [6] <author> Gra y S. L. </author> <title> Using Future to Exploit P arallelism in Lisp M.S. </title> <type> Thesis, </type> <institution> Dept. Electric al Engine ering and Computer Scienc e, M.I.T. </institution> <year> 1986 </year>
Reference: [7] <author> M. Girk ar, </author> <title> C.D. P olychronop oulos The HTG: An Intermediate Represen tation for Programs Based on Control and Data Dep endences CSRD TR1046, </title> <institution> University of Illinois at Urbana-Champ aign, Illinois, U.S.A. </institution> , <year> 1990 </year>
Reference: [8] <author> M. Girk ar, </author> <title> C.D. P olychronop oulos Automatic Detection and Generation of Unstructured P arallelism in Ordinary Programs to app ear in IEEE Transaction on Par al lel & Distribute d Pr ocessing , and CSRD TR, </title> <institution> University of Illinois at Urbana-Champ aign, Illinois, U.S.A. </institution> , <year> 1990 </year>
Reference: [9] <author> Halstead R.H. Jr., </author> <title> Implemen tation of Multilisp: </title> <booktitle> LISP on a multipro cessor Conference Record of the 1984 ACM Symposium on LISP and Functional Pr ogramming , pages. </booktitle> <volume> 9 - 17. </volume> <pages> 18 </pages>
Reference: [10] <author> R.H. </author> <title> Halstead Multilisp: a language for concurren t symbolic computations ACM TOPLAS , vol 7, </title> <note> (1985) pp 501-538 </note>
Reference: [11] <author> C.T. Haynes, D.P . Friedman, M. </author> <title> Wand Obtaining Coroutines with contin uation Computer Languages , 11, </title> <booktitle> (1986), </booktitle> <pages> pp. 143-153 </pages>
Reference: [12] <institution> W.L. Harrison Compiling Lisp for Evaluation on a Tigh tly Coupled Multipro cessor CSRD TR-565 University of Illinois at Urbana-Champ aign, Illinois, U.S.A. </institution> , <year> 1986 </year>
Reference: [13] <author> W.L. </author> <title> Harrison The interpro cedural Analysis and Automatic P arallelization of Scheme Programs Int. </title> <journal> Journal of Lisp and Symbolic Computation , 2, </journal> <year> (1989), </year> <pages> pp. 179-396 </pages>
Reference: [14] <author> Harrison W.L., P adua D. A. </author> <title> PARCEL: Pro ject for the Automatic Restructuring and Concurren t Evaluation of LISP TR. </title> <type> 653, </type> <institution> Dept. Computer Scienc e, University of Illinois , 1987 </institution>
Reference: [15] <editor> D. </editor> <publisher> Kuck The Structur e of Computers & Computations John Wiley & Sons, </publisher> <address> Boston, Ma, </address> <year> 1978 </year>
Reference: [16] <author> M. Katz P araT ran: </author> <title> A Transparen t, Transaction-Based Run time Mechanism for P ar-allel Execution of Scheme Master Thesis, </title> <institution> Dept. Electric al Engine ering and Computer Scienc e, M.I.T. , 198B </institution>
Reference: [17] <author> Larus J.R, </author> <title> Hilflnger P.N., Restructuring LISP Programs for concurren t executions Symposium on Par al lel Pr ogramming: Experienc e with Applications, </title> <booktitle> Language and Systems. ACM, </booktitle> <pages> pages. 100 - 110, </pages> <year> 1988 </year>
Reference: [18] <author> J.L. </author> <title> Larus Compiling Lisp Programs for P arallel Execution Int. </title> <journal> Journal of Lisp and Symbolic Computation , 4, </journal> <year> (1991), </year> <pages> pp. 29-99 </pages>
Reference: [19] <author> E. Mohr, D.A. Kranz, </author> <title> R.H. Halstead Lazy Task Creation: A Technique for Increasing the Gran ularit y of P arallel Programs ACM Lisp Conf. </title> <booktitle> On Lisp and Functional Languages, Nice (1990), </booktitle> <pages> pp. 185-197 </pages>
Reference: [20] <author> R.B. </author> <title> Osb orne Speculativ e Computation in Multilisp: </title> <booktitle> An Overview ACM Lisp Conf. On Lisp and Functional Languages, Nice (1990), </booktitle> <pages> pp. 198-208 </pages>
Reference: [21] <author> J.D. P ehoushek, J.S. </author> <title> Weening Low-cost pro cess Creation and Dynamic P artiotion in QLISP , I Par al lel Lisp: Languages and Systems Y.Ito, R.H. </title> <editor> Halstead ed, </editor> <publisher> Springer Verlag, </publisher> <address> Berlin, </address> <year> 1990, </year> <pages> pp 182-199 </pages>
Reference: [22] <institution> C.D. P olychronop oulos Autosc heduling: Control and Data Flow Come Together CSRD TR-1058 University of Illinois at Urbana-Champ aign, Illinois, U.S.A. </institution> , <year> 1990 </year>
Reference: [23] <author> O. </author> <title> Shivers Control Flow Analysis in Scheme SIGPLAN Conf on Language Design and Implementation, </title> <address> Atlanta, Georgia, </address> <year> (1988), </year> <pages> pp 164-174 19 </pages>
References-found: 23

