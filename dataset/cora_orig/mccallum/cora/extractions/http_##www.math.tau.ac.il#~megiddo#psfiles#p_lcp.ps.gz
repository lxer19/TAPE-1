URL: http://www.math.tau.ac.il/~megiddo/psfiles/p_lcp.ps.gz
Refering-URL: http://www.math.tau.ac.il/~megiddo/pub.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: A Note on the Complexity of P -Matrix LCP and Computing an Equilibrium  
Author: Nimrod Megiddo 
Date: May 1988)  
Note: (A draft;  
Abstract: It is proved that if it is NP-hard to solve the linear complementarity problemwith P -matrix or to compute a Nash-equilibrium point in a 2-player game, then NP = coNP.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. S. Johnson, C. H. Papadimitriou and M. Yannakakis, </author> <title> "How easy is local search?", </title> <journal> J. Comp. Sci. Sys., </journal> <note> to appear. </note>
Reference-contexts: 1. Introduction In this note we are concerned with two problems which are not known to be in the polynomial time class P, but whose NP-hardness implies NP = coNP. A similar property is shared by the members of the class of polynomial-time local search (PLS) recently introduced in <ref> [ 1 ] </ref> . The problems we consider here are not known even to be in PLS. <p> Now, consider the following: Problem 2.1. [PLCP ] Given a P -matrix M and a vector q, solve the problem LCP (M ; q). Remark 2.2. From the viewpoint of traditional complexity theory, Problem PLCP has a non-standard form in the sense that its input space is restricted. In <ref> [ 1 ] </ref> , the set of instances of a PLS problem is assumed to be a polynomial-time recognizable subset of f0; 1g fl (the set of all finite 0; 1-strings). Here, an algorithm for PLCP works under the guarantee that M is a P -matrix. <p> The oracle is not assumed to recognize in polynomial time that the input is valid. In view of Remark 2.2, it is legitimate to ask whether the problem P-LCP is NP-hard. It is conjectured in <ref> [ 1 ] </ref> that the class PLS is easier than NP since (see Lemma 4 of Section 2 in [ 1 ] ) if any PLS problem is NP-hard then NP = coNP. <p> In view of Remark 2.2, it is legitimate to ask whether the problem P-LCP is NP-hard. It is conjectured in <ref> [ 1 ] </ref> that the class PLS is easier than NP since (see Lemma 4 of Section 2 in [ 1 ] ) if any PLS problem is NP-hard then NP = coNP. In [ 2 ] an attempt is made to rely on this lemma and show that if PLCP is NP-hard then NP = coNP.
Reference: [2] <author> D. Solow, R. Stone and C. A. Tovey, </author> <title> "Solving LCP on P-matrices is probably not NP-hard", unpublished note, </title> <month> November </month> <year> 1987. </year>
Reference-contexts: A similar property is shared by the members of the class of polynomial-time local search (PLS) recently introduced in [ 1 ] . The problems we consider here are not known even to be in PLS. As pointed out in <ref> [ 2 ] </ref> the class PLS seems to shed some light on the complexity of a special case of the linear complementarity problem (LCP) which is the following problem: Problem 1.1. [LCP (M ; q)] Given a rational matrix M 2 R nfin and a rational vector q 2 R n <p> The purpose of this note is to prove a result of the type stated in <ref> [ 2 ] </ref> , not only for the LCP with a P -matrix (i.e., a matrix M with positive prinicipal minors), but in a more general setting which includes the problem of computing an equilibrium point in an n-person game. <p> It is conjectured in [ 1 ] that the class PLS is easier than NP since (see Lemma 4 of Section 2 in [ 1 ] ) if any PLS problem is NP-hard then NP = coNP. In <ref> [ 2 ] </ref> an attempt is made to rely on this lemma and show that if PLCP is NP-hard then NP = coNP. <p> However, it is not known whether P -matrices can be recognized in polynomial-time, which is a prerequisite for showing that PLCP is in PLS. (Obviously, the problem of recognizing a P -matrix is in the class coNP.) If this were true, then (as argued in <ref> [ 2 ] </ref> ) membership in PLS could be proved from the monotonicity of the homotopy parameter in Lemke's algorithm when the latter is applied to a P -matrix. The proof in [ 2 ] involves Lemke's method, *-perturbations and other details which seem necessary for proving membership in PLS. <p> of recognizing a P -matrix is in the class coNP.) If this were true, then (as argued in <ref> [ 2 ] </ref> ) membership in PLS could be proved from the monotonicity of the homotopy parameter in Lemke's algorithm when the latter is applied to a P -matrix. The proof in [ 2 ] involves Lemke's method, *-perturbations and other details which seem necessary for proving membership in PLS. It turns out that we can prove that NP-hardness of PLCP implies NP = coNP without establishing that PLCP is in PLS. <p> We prove a claim which is stronger than the one in <ref> [ 2 ] </ref> : 2 Proposition 2.4. If PLCP fl is NP-hard then NP = coNP. Proof: First note that problem PLCP fl has a polynomial-time nondeterministic algorithm A.
Reference: [3] <author> C. A. Tovey, </author> <type> personal communication, </type> <month> March </month> <year> 1988. </year> <month> 4 </month>
Reference-contexts: The latter does not seem to be in PLS even though it can be solved by some extensions of Lemke's method. The LCP with a P -matrix is not known to be in PLS <ref> [ 3 ] </ref> since it is not known whether a P -matrix can be recognized in polynomial time. In this note we are concerned only with rational inputs, so the assumption of rationality is henceforth omitted.
References-found: 3

