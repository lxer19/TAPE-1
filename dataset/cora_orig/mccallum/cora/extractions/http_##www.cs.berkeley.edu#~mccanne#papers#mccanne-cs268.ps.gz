URL: http://www.cs.berkeley.edu/~mccanne/papers/mccanne-cs268.ps.gz
Refering-URL: http://http.cs.berkeley.edu/~suchi/research/srm/
Root-URL: 
Email: mccanne@cs.berkeley.edu  
Title: A Distributed Whiteboard for Network Conferencing  
Author: Steven McCanne 
Date: May 25, 1992  
Address: Berkeley, CA 94720  
Affiliation: Computer Science Division Electrical Engineering and Computer Science University of California  
Pubnum: CS 268 Term Project  
Abstract: Advances in network technology and research in real-time packet-switched networks have prompted the emergence of internet conferencing. While audio and video conferencing tools are readily available, shared workspaces and drawing tools have been slower to emerge. We present a design for a network conferencing whiteboard that differs in notable respects from other shared workspace prototypes. We describe its transport layer, based on IP multicasting and application level framing, and its object oriented imaging model, based on persistent PostScript graphics operations. We then propose a user interface, and finally, describe a C++ implementation based on the InterViews structured graphics library. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> ADOBE SYSTEMS INCORPORATED. </author> <title> PostScript Language Reference Manual, second ed. </title> <publisher> Addison-Wesley, </publisher> <month> Dec. </month> <year> 1990. </year>
Reference-contexts: For ease of portability, the graphics operations must be device independent. Since computer environments are inherently heterogeneous, the whiteboard will only be successful if it can function across a range of hardware configurations. The de facto standard in device independent page description is the PostScript language <ref> [1] </ref>, which we adopted as the representation model for DrawingOps. Indeed, almost all modern typesetting or graphics systems are capable of generating PostScript output. Thus, the whiteboard will immediately leverage off a vast array of existing tools. <p> In other words, the PostScript rendering is carried out with respect to an agreed upon code preamble. The predefined commands can be short-circuited directly to the display, while arbitrary PostScript is processed via a fully general interpreter. Finally, a standard binary encoding format <ref> [1] </ref> may be used to compress the commands and eliminate lexical analysis. 3.5 The Rendering Method While we have defined a method for rendering the individual graphics streams from each site, we have not described how they can be combined into a single composite display.
Reference: [2] <author> CASNER, S., LYNN, J., PARK, P., SCHRODER, K., AND TOPOLCIC, C. </author> <title> Experimental Internet Stream Protocol, </title> <type> version 2 (ST-II). </type> <institution> ARPANET Working Group Requests for Comment, DDN Network Information Center, SRI International, </institution> <address> Menlo Park, CA, </address> <month> Oct. </month> <year> 1990. </year> <month> RFC-1190. </month>
Reference-contexts: Researchers worldwide will be able to collaborate without ever leaving their respective workplaces. Because of its interactive nature, networked CSCW demands real time delay and bandwidth guarantees of the un derlying networks. Accordingly, research is underway to develop protocols that can manage the network resources and provide performance guarantees <ref> [9, 3, 2] </ref>. At the same time, collaborative applications are being developed to exploit the new resources. While audio and video applications are becoming widely available, another essential component of collaborative work, the network equivalent of a conference room whiteboard, has been slower to evolve.
Reference: [3] <author> CLARK, D. D., AND JACOBSON, V. </author> <title> Resource control in data-gram networks. </title> <booktitle> DARPA PI Meeting Viewgraphs, </booktitle> <month> Mar. </month> <year> 1991. </year>
Reference-contexts: Researchers worldwide will be able to collaborate without ever leaving their respective workplaces. Because of its interactive nature, networked CSCW demands real time delay and bandwidth guarantees of the un derlying networks. Accordingly, research is underway to develop protocols that can manage the network resources and provide performance guarantees <ref> [9, 3, 2] </ref>. At the same time, collaborative applications are being developed to exploit the new resources. While audio and video applications are becoming widely available, another essential component of collaborative work, the network equivalent of a conference room whiteboard, has been slower to evolve.
Reference: [4] <author> CLARK, D. D., AND TENNENHOUSE, D. L. </author> <title> Architectural considerations for a new generation of protocols. </title> <booktitle> In Proceedings of SIGCOMM '90 (Philadelphia, </booktitle> <address> PA, </address> <month> Sept. </month> <year> 1990), </year> <note> ACM. </note>
Reference-contexts: On the other hand, the whiteboard cannot tolerate packet loss, while communication delays, to a certain extent, can be tolerated. Thus, transport level policy decisions, at least for real-time applications, should be deferred to the application. 2.4.1 Application Level Framing Indeed, Clark <ref> [4] </ref> argues that applications themselves should manage lost and misordered data. This approach is critical to the success of real-time, interactive applications, which must make progress in the presence of missing data. In the case of the whiteboard, most packets are idempotent and can be processed independently.
Reference: [5] <author> COHEN, D. </author> <title> On packet speech communication. </title> <booktitle> In Proceedings of the Fifth International Conference on Computer Communications (Atlanta, </booktitle> <address> Georgia, Oct. 1980), </address> <publisher> IEEE, </publisher> <pages> pp. 271-274. </pages>
Reference-contexts: 1 Introduction In the early days of the Internet, experiments with packet voice proved that computer networks could be used for integrated services <ref> [5] </ref>. However, the technological limitations of the time made such use impractical. This is now changing. Dramatic advances in network bandwidth and computational resources have paved the way for a new generation of distributed applications.
Reference: [6] <author> DANZIG, P. B. </author> <title> Optimally Selecting the Parameters of Adaptive Backoff Algorithms for Computer Networks and Multiprocessors. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <month> Dec. </month> <year> 1989. </year>
Reference-contexts: Ideally, the site closest to the requester should answer. For these reasons, we have adopted a multicast repair scheme. 2.4.3 Ack Implosion The repair scheme mentioned here has a problem. Repair requests can pile up on top of each other, causing large network transients which errari90Danzig <ref> [6, Sec. 6.1.1] </ref> calls implo 3 This figure illustrates the two repair modes for reliable delivery of packets. The diagrams represent two sessions with two hosts, A and B. Time proceeds down the page. &lt; s; n &gt; represents n drawing operations beginning at sequence number s.
Reference: [7] <author> DEERING, S. </author> <title> Host Extensions for IP Multicasting. ARPANET Working Group Requests for Comment, DDN Network Information Center, </title> <booktitle> SRI International, </booktitle> <address> Menlo Park, CA, </address> <month> Aug. </month> <year> 1989. </year> <month> RFC-1112. </month>
Reference-contexts: Because of network idiosyncra-cies, Host C may receive the response before the request. These problems turn out to be present in the whiteboard and we will address solutions in subsequent sections. 2.3 IP Multicasting The whiteboard's communication model is built upon the Internet Protocol (IP) Multicast network layer <ref> [7] </ref>. The Unix operating system provides access to this layer via the user datagram protocol (UDP). The standard socket interface [13] provides mechanisms for sending and receiving UDP packets. Thus, an application accesses a multicast channel by creating a datagram socket and binding it to a multicast address. <p> IP Multicasting has several attractive characteristics. First of all, IP is ubiquitous. The TCP/IP protocol suite dominates the current Internet and many believe this domination will continue even as networks scale to gigabit rates [12]. Second, the multicast extensions outlined in RFC 1112 <ref> [7] </ref> are readily available on a variety of systems. Even in heterogeneous environments, where multicasts are not supported at every gateway, IP multicasts can still be delivered using a technique called tunneling. A tunnel allows multi-cast routers to send packets across unicast networks using IP source routes. <p> Finally, because group membership is encoded in the mul-ticast address, session management is simplified. An IP mul-ticast address and UDP port number is the only information necessary to define a conference session. Groups are maintained transparently by the network, via the Internet Group Management Protocol (Appendix I of <ref> [7] </ref>).
Reference: [8] <author> FERRARI, D. </author> <title> Distributed delay jitter control in packet-switching networks. </title> <type> Tech. Rep. </type> <institution> TR-90-056, International Computer Science Institute, Berkeley, </institution> <address> CA, </address> <month> Oct. </month> <year> 1990. </year>
Reference-contexts: Clocks can be synchronized via some protocol external to the application, NTP for example [15]. Since host clocks will be synchronized, temporal ordering can be recreated at any receiver. Furthermore, since network dynamics can introduce substantial variations in delay jitter <ref> [8] </ref>, timestamps allow the receiver to reconstruct the sender timing relationships.
Reference: [9] <author> FERRARI, D., AND VERMA, D. </author> <title> A scheme for real-time communication services in wide-area networks. </title> <journal> IEEE Journal on Selected Areas in Communications 8, </journal> <month> 3 (Apr. </month> <year> 1990), </year> <pages> 368-379. </pages>
Reference-contexts: Researchers worldwide will be able to collaborate without ever leaving their respective workplaces. Because of its interactive nature, networked CSCW demands real time delay and bandwidth guarantees of the un derlying networks. Accordingly, research is underway to develop protocols that can manage the network resources and provide performance guarantees <ref> [9, 3, 2] </ref>. At the same time, collaborative applications are being developed to exploit the new resources. While audio and video applications are becoming widely available, another essential component of collaborative work, the network equivalent of a conference room whiteboard, has been slower to evolve.
Reference: [10] <author> ISHII, H., AND MIYAKE, N. </author> <title> Toward an open shared workspace: Computer and video fusion approach of Team-workstation. </title> <journal> Communications of the ACM 34, </journal> <month> 12 (Dec. </month> <year> 1991), </year> <pages> 37-50. </pages>
Reference-contexts: Initially, we chose what we thought was a very simple approach. Since each host is autonomous, we can create a composite by merely stacking the layers in some agreed upon order. This layering model approach is similar to the tack taken by the Teamworkstation project designers <ref> [10] </ref>. An initial problem was devising a protocol for reaching a consistent global stacking arrangement. While we finally devised a scheme that seemed to work well, a new problem became apparent. The layering model is not a close match of reality.
Reference: [11] <author> JACOBSON, V. </author> <title> Private communication, </title> <month> May </month> <year> 1992. </year>
Reference-contexts: Instead, it will quickly learn them, since each site periodically 6 transmits an announcement packet. The transport repair mechanisms will establish consistency between the global state and the new member's local state. Work is currently underway to develop a general session management system <ref> [11] </ref>. The assignment of Internet addresses to sessions should be dynamic, requiring some network agent to distribute addresses for temporary sessions.
Reference: [12] <author> JACOBSON, V., BRADEN, R., AND ZHANG, L. </author> <title> TCP Extension for High-Speed Paths. ARPANET Working Group Requests for Comment, DDN Network Information Center, </title> <booktitle> SRI International, </booktitle> <address> Menlo Park, CA, </address> <month> Oct. </month> <year> 1990. </year> <month> RFC-1185. </month>
Reference-contexts: IP Multicasting has several attractive characteristics. First of all, IP is ubiquitous. The TCP/IP protocol suite dominates the current Internet and many believe this domination will continue even as networks scale to gigabit rates <ref> [12] </ref>. Second, the multicast extensions outlined in RFC 1112 [7] are readily available on a variety of systems. Even in heterogeneous environments, where multicasts are not supported at every gateway, IP multicasts can still be delivered using a technique called tunneling.
Reference: [13] <author> LEFFLER, S. J., MCKUSICK, M. K., KARELS, M. J., AND QUARTERMAN, J. S. </author> <title> The Deisgn and Implementation of the 4.3BSD UNIX Operating System. </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: The Unix operating system provides access to this layer via the user datagram protocol (UDP). The standard socket interface <ref> [13] </ref> provides mechanisms for sending and receiving UDP packets. Thus, an application accesses a multicast channel by creating a datagram socket and binding it to a multicast address. IP Multicasting has several attractive characteristics. First of all, IP is ubiquitous.
Reference: [14] <author> LINTON, M., CALDER, P. R., AND VLISSIDES, J. M. InterViews: </author> <title> A C++ graphical interface toolkit. </title> <type> Tech. Rep. </type> <institution> CSL-TR-88-358, Stanford University, </institution> <address> Palo Alto, CA, </address> <month> July </month> <year> 1988. </year> <month> 11 </month>
Reference-contexts: Much of the design has been completed, but more work is needed. The current implementation consists of about 6000 lines of C++ code. It is based on the outdated Graphic library from InterViews-2.6 <ref> [14] </ref>, Mark Linton's object oriented graphics system. We had hoped to just extend the existing InterViews graphical editor, idraw, with our networking ideas.
Reference: [15] <author> MILLS, D. L. </author> <title> Network Time Protocol (version 2) specifica-tion and implementation. ARPANET Working Group Requests for Comment, DDN Network Information Center, </title> <booktitle> SRI International, </booktitle> <address> Menlo Park, CA, </address> <month> Sept. </month> <year> 1989. </year> <month> RFC-1119. </month>
Reference-contexts: However, if the hosts can synchronize their clocks, then delay times can be computed very simply by timestamping each packet. Clocks can be synchronized via some protocol external to the application, NTP for example <ref> [15] </ref>. Since host clocks will be synchronized, temporal ordering can be recreated at any receiver. Furthermore, since network dynamics can introduce substantial variations in delay jitter [8], timestamps allow the receiver to reconstruct the sender timing relationships.
Reference: [16] <author> MOCKAPETRIS, P. </author> <title> Domain names implementation and specification. ARPANET Working Group Requests for Comment, DDN Network Information Center, </title> <booktitle> SRI International, </booktitle> <address> Menlo Park, CA, </address> <month> Nov. </month> <year> 1987. </year> <month> RFC-1035. </month>
Reference-contexts: Regularly scheduled sessions could be assigned permanent 5 [17] discusses the implications of delay jitter-controlled channels and argues that isochronous applications require only strict delay bounds. 6 every few seconds 5 addresses, maintained in the domain name system <ref> [16] </ref>. In ad-dition, methods for announcing conferences and notifying the target audience need to be developed. 3 The Imaging Model We foresee two dominant usage modes of the whiteboard. In both cases, we assume the existence of some other form of interaction, for instance, audio and video.
Reference: [17] <author> PARTRIDGE, C. </author> <title> Isochronous Applications Do Not Require Jitter-Controlled Networks. ARPANET Working Group Requests for Comment, DDN Network Information Center, </title> <booktitle> SRI International, </booktitle> <address> Menlo Park, CA, </address> <month> Sept. </month> <year> 1991. </year> <month> RFC-1257. </month>
Reference-contexts: Work is currently underway to develop a general session management system [11]. The assignment of Internet addresses to sessions should be dynamic, requiring some network agent to distribute addresses for temporary sessions. Regularly scheduled sessions could be assigned permanent 5 <ref> [17] </ref> discusses the implications of delay jitter-controlled channels and argues that isochronous applications require only strict delay bounds. 6 every few seconds 5 addresses, maintained in the domain name system [16].
Reference: [18] <author> RUBINE, D. </author> <title> Integrating gesture recognition and direct manipulation. </title> <booktitle> In Proceedings of the 1991 Summer USENIX Technical Conference (Nashville, </booktitle> <address> TN, </address> <month> June </month> <year> 1991), </year> <pages> pp. 281-298. </pages>
Reference-contexts: But mouse based drawing is clumsy and inefficient for whiteboard interaction. Instead, we look to pen based computing as a more viable means of graphical expression. Here, the natural mode of pointing will not be an animated pointing device, but will instead be annotations and graphical gestures <ref> [18] </ref>. 3.4 DrawingOps All DrawingOps are timestamped and assigned sequence numbers, relative to the sender. Timestamps allow the receiver to play out the graphics stream with the same time structure of its sender.
Reference: [19] <author> YAVATKAR, R. </author> <title> Issues of coordination and temporal synchronization in multimedia communication. </title> <booktitle> In Proceedings of the Fourth IEEE ComSoc International Workshop on Multimedia Communications (Monterey, </booktitle> <address> CA, </address> <month> Apr. </month> <year> 1992). </year> <month> 12 </month>
Reference-contexts: But many of the advantages of the centralized approach become the disadvantages of the replicated approach. Because the application is replicated, inconsistencies can arise between sites. If the application cannot tolerate inconsistencies, either a priori or heuristically, a higher level protocol must be devised to guarantee consistency. Yavatkar <ref> [19] </ref> describes such a scheme using token passing. A related problem is synchronization. Because multicast channels (usually) make no guarantees on packet ordering, messages can be received out of order. Even worse, causal relationships can be violated. Figure 1 illustrates this phenomenon. <p> If two or more sites simultaneously initiate a new page, the conference must choose only one, in a distributed, consistent manner. More generally, we must establish a means of floor control. Yavatkar describes several token-based concurrency approaches in <ref> [19] </ref>. Two of his approaches, called brain storming and chalkboard interaction, are applicable to the whiteboard. Brain storming is analogous to the office meeting scenario. In this case, all participants may interact at any time. Similarly, chalkboard interaction is analogous to the electronic talk.
References-found: 19

