URL: http://www.cs.indiana.edu/~katy/aaai95.ps.gz
Refering-URL: http://www.cs.indiana.edu/~katy/katy_pap.html
Root-URL: http://www.cs.indiana.edu
Email: e-mail: katy@cognition.iig.uni-freiburg.de  
Phone: phone: +49 761 203 4937 fax: +49 761 203 4938  
Title: Conceptual Analogy  
Author: Katy Borner 
Address: 79098 Freiburg, Germany  
Affiliation: University of Freiburg, Centre for Cognitive Science Institute for Computer Science and Social Research  
Abstract: Conceptual analogy (CA) is an approach, that integrates conceptualization based on prior experiences, i.e. case memory organization, and analogical reasoning (Borner and Janetzko 1995, Borner and Wode 1995). It was prototypically implemented and tested to support the design process in building engineering (Borner 1994a). This paper reviews the development of CA. It provides the basic assumptions and surveys the psychological results which influenced the development of CA. It argues for the combination and integration of different proposals to memory organization, case-based reasoning and analogical reasoning to reduce the complexity of design support. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Borner, K. </author> <year> (1994a). </year> <title> Structural similarity as guidance in case-based design, </title> <booktitle> in Wess, Althoff and Richter (1994), </booktitle> <pages> pp. 197-208. </pages>
Reference: <author> Borner, K. </author> <year> (1994b). </year> <title> Towards formalizations in case-based reasoning for synthesis, </title> <editor> in D. W. Aha (ed.), </editor> <booktitle> AAAI-94 Workshop on Case-Based Reasoning, </booktitle> <pages> pp. 177-181. </pages>
Reference-contexts: Weights on modifications induce some ordering of the application of c rules. Similarity is defined by identity or subsump-tion of the modified problem situation and the prototype (see also <ref> (Borner 1994b) </ref>).
Reference: <author> Borner, K. and Janetzko, D. </author> <year> (1995). </year> <title> System architecture for computer-aided building engineering, </title> <booktitle> 6th International Conference on Computing in Civil and Building Engineering, </booktitle> <address> Berlin, Germany. </address>
Reference: <author> Borner, K. and Wode, H. </author> <year> (1995). </year> <title> Conceptual analogy: Integrating and automating memory organization and analogical reasoning, </title> <booktitle> submitted to the International Conference on Case-based Reasoning, </booktitle> <address> Sesimbra, Portugal. </address>
Reference: <author> Brooks, R. A. and Stein, L. A. </author> <year> (1993). </year> <title> Building brains for bodies, </title> <journal> A.I. </journal> <volume> Memo No. </volume> <pages> 1439. </pages>
Reference-contexts: They constitute the basis for analogical inferences and their evaluation. Grounding CA conforms with the idea that is be impossible to foresee and handcode all the memory structures (i.e. cases, similarity relations, and adaptation knowledge) that might be needed to handle different design tasks <ref> (Brooks and Stein 1993) </ref>. Consequently, the computation of memory structures is based on the exchange of attribute-value representations of concrete experiences and the tasks of the system.
Reference: <author> Carbonell, J. G. and Veloso, M. </author> <year> (1988). </year> <title> Integrating derivational analogy into a general problem solving architecture, </title> <booktitle> DARPA Workshop on Case-Based Reasoning, </booktitle> <publisher> Morgan Kaufmann Publishers, </publisher> <pages> pp. 104-124. </pages>
Reference: <author> Domeshek, E. A. and Kolodner, J. L. </author> <year> (1992). </year> <title> A case-based design aid for architecture, </title> <booktitle> Proc. Second International Conference on Artificial Intelligence in Design, </booktitle> <publisher> Kluwer Academic Publishers, </publisher> <pages> pp. 497-516. </pages>
Reference: <author> Gero, J. S. </author> <year> (1990). </year> <title> Design prototypes: A knowledge representation schema for design, </title> <journal> AI Magazine 11(4): </journal> <pages> 26-36. </pages>
Reference-contexts: As we will see, this allows for automatical acquisition of memory structures as well as for their efficient exploitation during analogical reasoning. Construction Algebraic case representations (e.g. terms without variables) are the basis to inductively determine the prototype and corresponding modifications of every case class. As proposed by <ref> (Gero 1990) </ref>, the prototype represents common features by constants or functions. Distinctive features are represented by variables. The c rules and the a rules define the replacement of sub-terms by variables and variable instantiations, respectively.
Reference: <author> Goel, A. K. </author> <year> (1989). </year> <title> Integration of case-based reasoning and model-based reasoning for adaptive design problem solving, </title> <type> PhD thesis, </type> <institution> Ohio State University. </institution>
Reference: <author> Haller, F. </author> <year> (1985). </year> <institution> ARMILLA ein Installationsmodell: Instrumentarium zur Planung von Leitungssyste-men in hochinstallierten Gebauden, IFIB, University of Karlsruhe. </institution>
Reference-contexts: This method provides a standardized catalogue of parts, a standard planning grid, and a huge amount of examples of how to use it in design <ref> (Haller 1985, Hovestadt 1993b) </ref>. The corresponding data representation scheme A4 (Hovestadt 1993a) represents every designed object by its placement and extension in three dimensions together with its type (e.g. room, door, furniture, lamp, etc.).
Reference: <author> Hovestadt, L. </author> <year> (1993a). </year> <title> A4 digital building extensive computer support for the design, </title> <booktitle> construction, and management of buildings, CAAD Futures '93, Proceedings of the Fifth International Conference on Computer-Aided Architectural Design Futures, </booktitle> <publisher> North-Holland, </publisher> <pages> pp. 405-422. </pages>
Reference-contexts: This method provides a standardized catalogue of parts, a standard planning grid, and a huge amount of examples of how to use it in design (Haller 1985, Hovestadt 1993b). The corresponding data representation scheme A4 <ref> (Hovestadt 1993a) </ref> represents every designed object by its placement and extension in three dimensions together with its type (e.g. room, door, furniture, lamp, etc.).
Reference: <author> Hovestadt, L. </author> <year> (1993b). </year> <title> A4 - digitales Bauen: Ein Mod-ell fur die weitgehende Computerunterstutzung von Entwurf, Konstruktion und Betrieb von Gebauden, </title> <type> PhD thesis, </type> <institution> IFIB, University of Karl-sruhe. </institution>
Reference: <author> Hua, K. and Faltings, B. </author> <year> (1993). </year> <title> Exploring case-based building design CADRE, </title> <booktitle> AI EDAM 7(2): </booktitle> <pages> 135-144. </pages>
Reference: <author> Janetzko, D., Borner, K., Jaschke, O. and Strube, G. </author> <year> (1994). </year> <title> Task-oriented knowledge acquisition and reasoning for design support systems, </title> <editor> in R. Bis-dorff (ed.), </editor> <booktitle> First European Conference on Cognitive Science in Industry, </booktitle> <pages> pp. 153-184. </pages>
Reference-contexts: Thus we do not retrieve and match one source but classify a new problem (target) into the appropriate memory structure. Conceptualization Memory organization proceeds via task-oriented grouping, re-representation, and generalization over classes of similar cases. Aiming at a task-oriented user support of design tasks <ref> (Janetzko, Borner, Jaschke and Strube 1994) </ref>, cases are no longer given by sets of attribute values and corresponding concepts.
Reference: <author> Kolodner, J. L. </author> <year> (1993). </year> <title> Case-based reasoning, </title> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Mateo, CA. </address>
Reference-contexts: Due to its complexity, there is hardly any operational information available on how to support design steps. Architects frequently use prior CAD layouts to inspire and guide their work. This points to case-based reasoning (Cbr) <ref> (Kolodner 1993) </ref> as the predominant problem solving method. A typical subtask occurring in building engineering is the design of interconnections between supply accesses and main accesses. Representing outlets by small squares and the main access by a square of larger size, Fig. 1 (left) depicts a simple access pattern.
Reference: <author> Muggleton, S. </author> <year> (1992). </year> <title> Inductive logic programming, </title> <publisher> Academic Press. </publisher>
Reference-contexts: . sented by a prototype corresponds directly to the range of variable instantiation provided by the corresponding modifications. 5 In CA the salience of attribute values is covered by weights for specific variable instantiations. 6 The definition of a prototype is similar to the definition of least general antiunifier (au) <ref> (Muggleton 1992) </ref>, or most specific generalization (msg) of a set of terms (Plotkin 1970).
Reference: <author> O'Hara, S. E. and Indurkhya, B. </author> <year> (1994). </year> <title> Incorporating (re)-interpretation in case-based reasoning, </title> <editor> in Wess et al. </editor> <year> (1994), </year> <pages> pp. 246-260. </pages>
Reference: <author> Pearce, M., Goel, A. K., Kolodner, J. L., Zimring, C., Sentosa, L. and Billington, R. </author> <year> (1992). </year> <title> Case-based design support: A case study in architectural design, </title> <journal> IEEE Expert pp. </journal> <pages> 14-20. </pages>
Reference-contexts: Second, adaptation of prior layouts mainly corresponds to adding, eliminating or substituting objects and their relations. Because of the variety and the possible combinations of these modifications, adaptation knowledge is hard to acquire. Third, graphical user interaction has been identified as a desirable feature of design support systems <ref> (Pearce, Goel, Kolodner, Zimring, Sentosa and Billington 1992) </ref>. However, graphical interfaces restrict the input and output of Cbd systems to CAD layouts.
Reference: <author> Plotkin, G. D. </author> <year> (1970). </year> <title> A note on inductive generalization, </title> <editor> in B. Meltzer and D. Michie (eds), </editor> <booktitle> Machine Intelligence 5, </booktitle> <publisher> American Elsevier, </publisher> <pages> pp. 153-163. </pages>
Reference-contexts: instantiation provided by the corresponding modifications. 5 In CA the salience of attribute values is covered by weights for specific variable instantiations. 6 The definition of a prototype is similar to the definition of least general antiunifier (au) (Muggleton 1992), or most specific generalization (msg) of a set of terms <ref> (Plotkin 1970) </ref>. The only difference is, that no variable used for generalization will appear more than once within a prototype, whereas the au and msg will have the same variable at different places, if the generalized subterms at these places were equal.
Reference: <author> Ram, A. </author> <year> (1993). </year> <title> Creative conceptual change, </title> <editor> in W. Kintsch (ed.), </editor> <booktitle> Fifteenth Annual Conference of the Cognitive Science Society, </booktitle> <publisher> Lawrence Erlbaum, </publisher> <pages> pp. 17-26. </pages> <institution> University of Colorado-Boulder, </institution> <note> June 18 to 21. </note>
Reference-contexts: Following <ref> (Ram 1993) </ref>, CA uses two processes for the bottom-up conceptualization. First, the incremental construction of memory structures from input data. Second, the extrapolation, i.e. extension or adaptation of existing memory structures in response to novel and unfamiliar situations.
Reference: <author> Rosch, E. </author> <year> (1975). </year> <title> Cognitive reference points, </title> <booktitle> Cognitive Psychology 7: </booktitle> <pages> 531-547. </pages>
Reference-contexts: Memory Structure Memory structures in CA represent each case class by a prototype and the set of weighted modifications which lead to the prototype when applied to the instances. Corresponding to psychological work, the term prototype refers either to a best instance of a case class <ref> (Rosch 1975) </ref>, or to an abstract description of a CC that is more appropriate to some members than it is to others (Smith, Osherson, Rips and Keane 1988). The former holds if background knowledge (e.g. geometrical transformations) is available, which reduces every case into one unique instance of the CC.
Reference: <author> Smith, E. E., Osherson, D. N., Rips, L. J. and Keane, M. </author> <year> (1988). </year> <title> Combining prototypes: A selective modification model, </title> <booktitle> Cognitive Science 12: </booktitle> <pages> 485-527. </pages>
Reference-contexts: Corresponding to psychological work, the term prototype refers either to a best instance of a case class (Rosch 1975), or to an abstract description of a CC that is more appropriate to some members than it is to others <ref> (Smith, Osherson, Rips and Keane 1988) </ref>. The former holds if background knowledge (e.g. geometrical transformations) is available, which reduces every case into one unique instance of the CC. The latter is used if generalization or abstraction is applied to derive the common structure, i.e. prototype of a case class.
Reference: <editor> Wess, S., Althoff, K.-D. and Richter, M. M. (eds) (1994). </editor> <booktitle> Topics in Case-Based Reasoning Selected Papers from the First European Workshop on Case-Based Reasoning (EWCBR-93), Vol. 837 of Lecture Notes in Artificial Intelligence, </booktitle> <publisher> Springer. </publisher> .
References-found: 23

