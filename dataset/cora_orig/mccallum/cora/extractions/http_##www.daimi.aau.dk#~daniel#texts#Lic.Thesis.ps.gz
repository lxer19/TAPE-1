URL: http://www.daimi.aau.dk/~daniel/texts/Lic.Thesis.ps.gz
Refering-URL: http://www.daimi.aau.dk/~daniel/texts/
Root-URL: http://www.daimi.aau.dk
Title: Ramsey's Theorem in Type Theory  
Author: Daniel Fridlender 
Note: Contents  
Date: October 6, 1993  
Abstract: We present formalizations of constructive proofs of the Intuitionistic Ram-sey Theorem and Higman's Lemma in Martin-Lof's Type Theory. We analyze the computational content of these proofs and we compare it with programs extracted out from some classical proofs. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Lennart Augustsson, Thierry Coquand and Bengt Nordstrom. </author> <title> A short description of Another Logical Framework. </title> <booktitle> Proceedings of the workshop on types for proofs and programs, Antibes, </booktitle> <year> 1990. </year>
Reference-contexts: Finally, appendix A shows the equivalence between IRT and the formulation of the Intuitionistic Ramsey Theorem given in [13]. It justifies the unprovability of IRT in Type Theory. 2 The proofs All the proofs presented in subsections 2.1 and 2.2 have been formalized in ALF (see <ref> [1, 6] </ref>) which is an implementation of Martin-Lof's Type Theory (see [10]). The ALF system itself is the appropriate tool to read the completely formal proofs.
Reference: [2] <author> Thierry Coquand. </author> <title> A semantics of evidence for classical arithmetic. </title> <booktitle> Proceedings of the workshop on types for proofs and programs, </booktitle> <address> Edinburgh, </address> <year> 1991. </year>
Reference-contexts: Its second subsection gives another program for a classical proof which was obtained by Stefano Berardi by game interpretation (we refer to <ref> [2] </ref> for a description of game interpretation). Finally, appendix A shows the equivalence between IRT and the formulation of the Intuitionistic Ramsey Theorem given in [13].
Reference: [3] <author> Thierry Coquand. </author> <title> Pattern-matching with dependent types. </title> <booktitle> Proceedings of the workshop on types for proofs and programs, </booktitle> <address> Bastad, </address> <year> 1992. </year>
Reference-contexts: Observe that no list can be good and bad at the same time, and if A is decidable, any list is either good or bad. In the formalizations we make extensive use of the pattern matching feature of ALF (see <ref> [3] </ref>) not only to get more readable expressions but also because it avoids introducing universes which would otherwise be necessary. In [3] it is required that for a constant f of arity n defined by pattern matching, it must exist i such that 0 i &lt; n and for all equations <p> In the formalizations we make extensive use of the pattern matching feature of ALF (see <ref> [3] </ref>) not only to get more readable expressions but also because it avoids introducing universes which would otherwise be necessary. In [3] it is required that for a constant f of arity n defined by pattern matching, it must exist i such that 0 i &lt; n and for all equations f (u 0 ; : : : ; u n1 ) = e in the definition of f and all recursive <p> Instead of comparing arguments in only one position (i), we need them to be compared lexicographically in several (two) positions 4 . This possibility is mentioned in <ref> [3] </ref>. 2.1 An inductive formulation of almost-fullness (AF ID ) This subsection describes a formalization of the proof of Higman's Lemma presented in [11]. <p> In both methods, the termination is guaranteed by the fact that proofs are well-founded. At each step, the proof we are inspecting decreases (becomes structurally smaller in the sense given in <ref> [3] </ref>). Notice that the method provided by a proof that A is AF ID (for decidable A ) behaves very much like the linear search. It should be noticed that if A is decidable, a proof that A is AF I can also yield the linear search.
Reference: [4] <author> Michael Dummett. </author> <title> Elements of Intuitionism. </title> <publisher> Oxford University Press, </publisher> <year> 1977. </year>
Reference-contexts: s and P over A fl the following holds. 8l : A fl :8a : A:L s (l) ) L s (l a) 8l : A fl :L s (l) ) P (l) P ([ ]) The principle of bar induction was first introduced by Brouwer and is explained in <ref> [4] </ref>. <p> An intuitionistic explanation of this principle can be found in <ref> [4] </ref>, as well as a classical justification of a more general principle, namely, the one of bar induction on (not necessarily monotone) bars, which is obtained by dropping the first premiss in the given principle of bar induction on monotone bars. <p> The intuitionistic rejection to Markov's principle is further explained in <ref> [4] </ref> where an intuitionistic model for which Markov's principle is not valid is presented.
Reference: [5] <author> Monique Lejeune-Jalabert. Effectivite de calculs polynomiaux. D.E.A. </author> <type> Thesis, </type> <institution> Inst. Fourier, Univ. Grenoble I, </institution> <year> 1985. </year>
Reference-contexts: Instantiating (43) in f (m) we get that f (m) 6= f (m) which is contradictory. This means that (42) does not hold and therefore that (41) does. 2 31 5 Further work The original aim was to formalize in ALF a program to construct Grobner bases given in <ref> [5] </ref>, the termination proof of which turned out to be the proof that the component-wise relation on tuples of natural numbers is almost full. We now have formalized proofs that it is almost full but nothing has yet been done towards the formalization of polynomials.
Reference: [6] <author> Lena Magnusson. </author> <title> The new Implementation of ALF. </title> <booktitle> Proceedings of the workshop on types for proofs and programs, </booktitle> <address> Bastad, </address> <year> 1992. </year> <month> 34 </month>
Reference-contexts: Finally, appendix A shows the equivalence between IRT and the formulation of the Intuitionistic Ramsey Theorem given in [13]. It justifies the unprovability of IRT in Type Theory. 2 The proofs All the proofs presented in subsections 2.1 and 2.2 have been formalized in ALF (see <ref> [1, 6] </ref>) which is an implementation of Martin-Lof's Type Theory (see [10]). The ALF system itself is the appropriate tool to read the completely formal proofs.
Reference: [7] <author> Per Martin-Lof. </author> <title> Notes on Constructive Mathematics. </title> <publisher> Almqvist & Wiksell, </publisher> <address> Stock--holm, </address> <year> 1968. </year>
Reference-contexts: A different way of dealing with statements like (1) is presented in <ref> [7] </ref>, in which the following inductive definition is used. L s (l) L s bars l (a : A)L s bars l a L s bars l A statement like (1) is said to hold if L s bars [ ], i.e., [7] adopts L s bars [ ] as the <p> dealing with statements like (1) is presented in <ref> [7] </ref>, in which the following inductive definition is used. L s (l) L s bars l (a : A)L s bars l a L s bars l A statement like (1) is said to hold if L s bars [ ], i.e., [7] adopts L s bars [ ] as the precise meaning of (1). This definition is justified by the equivalence between (1) and L s bars [ ] in the presence of bar induction. <p> We use an inductive formulation of the notion of being a bar which is proposed in <ref> [7] </ref>.
Reference: [8] <author> Chetan R. Murthy and James R. Russell. </author> <title> A constructive Proof of Higman's Lemma. </title> <booktitle> Fifth annual IEEE symposium on Logic in Computer Science, </booktitle> <year> 1990. </year> <pages> Pages 257-267. </pages>
Reference-contexts: A more general solution to this might be given by using the notion of accessibility to prove that in each step the state of the program is reduced with respect to a well-founded relation. Such a way was adopted for instance in <ref> [8] </ref>. Stefano Berardi has extracted from a classical proof by game interpretation the program presented in subsection 4.2. We conjectured that the classical proof presented in subsection 4.1 has as computational content the program presented in subsection 3.2.
Reference: [9] <author> Bengt Nordstrom. </author> <title> Terminating General Recursion. Programming Methodology Group's report 46. </title> <month> June, </month> <year> 1988. </year>
Reference-contexts: This amounts to say that the relation o A fl is well-founded on the subset bad (A s ; A ). 6 To formalize the notion of well-founded relation on a subset we take the notion of accessibility given in <ref> [9] </ref>. The one presented there is useful to express the idea of being a well-founded relation on a set. We reformulate it to express that property on a subset. We define accessibility for any relation o A on a subset A s of A.
Reference: [10] <author> Bengt Nordstrom, Kent Petersson and Jan M. Smith. </author> <title> Programming in Martin-Lof 's Type Theory. An Introduction. </title> <publisher> Oxford University Press, </publisher> <year> 1990. </year>
Reference-contexts: It justifies the unprovability of IRT in Type Theory. 2 The proofs All the proofs presented in subsections 2.1 and 2.2 have been formalized in ALF (see [1, 6]) which is an implementation of Martin-Lof's Type Theory (see <ref> [10] </ref>). The ALF system itself is the appropriate tool to read the completely formal proofs. In the presentation of the proofs we write t 0 ; : : : ; t n : T for t 0 ; : : : ; t n are objects of type T .
Reference: [11] <author> Fred Richman and Gabriel Stolzenberg. </author> <title> Well Quasi-Ordered Sets. </title> <booktitle> Advances in Mathematics, 1993. </booktitle> <volume> Vol 97, </volume> <pages> pages 145-153. </pages>
Reference-contexts: This possibility is mentioned in [3]. 2.1 An inductive formulation of almost-fullness (AF ID ) This subsection describes a formalization of the proof of Higman's Lemma presented in <ref> [11] </ref>. A difference between that proof and the one presented here is that we use almost full relations instead of well-quasi-orderings, which are just transitive almost 4 The equation: merge (a.as) (b.bs) = if a &lt; b then a.merge as (b.bs) else b.merge (a.as) bs, illustrates this. <p> No argument decreases in both recursive calls, but in the first recursive call the first argument decreases and in the second, while the first argument remains the same the second argument decreases. 5 full relations. However transitivity does not play any essential role in the proof in <ref> [11] </ref>. The notion of well-quasi-ordering is defined in a negated way. Instead of affirming that any infinite sequence has a good initial segment, it negates the existence of infinite sequences such that all their initial segments are bad. <p> The subset is denoted by bad (A s ; A ) and defined by [ ] 2 bad (A s ; A ) l a 2 bad (A s ; A ) As we already mentioned, almost-fullness will be defined here similarly to the definition of well-quasi-ordering in <ref> [11] </ref> which is expressed in a negated way. It forbids the existence of infinite sequences such that all their initial segments are bad.
Reference: [12] <author> Bjorn von Sydow. </author> <title> From ALF to LML. </title> <booktitle> Proceedings of El Wintermote. Programming Methodology Group's report 73. </booktitle> <month> June, </month> <year> 1993. </year>
Reference-contexts: Both programs are written in LML. 8 In deriving this programs from the proof that the component-wise relation on pairs of natural numbers is almost full two tools were helpful: a translator from ALF proofs to LML programs (see <ref> [12] </ref>) and the LML tracer. 23 The first one, given in subsection 3.1, is intended to have the same structure as the proof. This is stressed by explaining the correspondence between functions in the program and lemmas in the proof.
Reference: [13] <author> Win Veldman and Marc Bezem. </author> <title> Ramsey's theorem and the pigeonhole principle in intuitionistic mathematics. </title> <institution> Department of Philosophy, University of Utrecht. Logic Group. Prepint Series, </institution> <note> No. 72, January 1992. 35 </note>
Reference-contexts: Any almost full relation has to be reflexive (applying the definition to the sequence a; : : : ; a; : : : we get a A a) but may not be transitive. The name almost full is taken from <ref> [13] </ref> where it stands for a similar notion (see appendix A). 2 The Intuitionistic Ramsey Theorem takes his name from [13], where it stands for an intu-itionistically provable reformulation of Ramsey's Theorem. Appendix A shows the intuitionistic equivalence between the version presented here and the one in [13] 3 A precise <p> The name almost full is taken from <ref> [13] </ref> where it stands for a similar notion (see appendix A). 2 The Intuitionistic Ramsey Theorem takes his name from [13], where it stands for an intu-itionistically provable reformulation of Ramsey's Theorem. Appendix A shows the intuitionistic equivalence between the version presented here and the one in [13] 3 A precise definition of the relation fl is given on page 18. 2 A goal is to formalize constructive proofs of the <p> is taken from <ref> [13] </ref> where it stands for a similar notion (see appendix A). 2 The Intuitionistic Ramsey Theorem takes his name from [13], where it stands for an intu-itionistically provable reformulation of Ramsey's Theorem. Appendix A shows the intuitionistic equivalence between the version presented here and the one in [13] 3 A precise definition of the relation fl is given on page 18. 2 A goal is to formalize constructive proofs of the Intuitionistic Ramsey Theorem and Higman's Lemma in Martin-Lof's Type Theory. However, we cannot hope to prove IRT in Type Theory, since [13] presents a recursive counter-example to <p> here and the one in <ref> [13] </ref> 3 A precise definition of the relation fl is given on page 18. 2 A goal is to formalize constructive proofs of the Intuitionistic Ramsey Theorem and Higman's Lemma in Martin-Lof's Type Theory. However, we cannot hope to prove IRT in Type Theory, since [13] presents a recursive counter-example to a property which is proved equivalent to IRT in Type Theory (see appendix A). The problem comes from the use of universal quantification over infinite sequences in the definition of almost-fullness. <p> The problem comes from the use of universal quantification over infinite sequences in the definition of almost-fullness. This kind of quantification is in general not easy to handle in constructive mathematics. The way <ref> [13] </ref> deals with it is by appealing to the principle of bar induction on monotone bars, which states that for predicates L s and P over A fl the following holds. 8l : A fl :8a : A:L s (l) ) L s (l a) 8l : A fl :L s <p> It shows that AF I and AF are equivalent in the presence of the principle of bar induction on monotone bars. This implies that IRT and IRT I are equivalent modulo bar induction on monotone bars. As a consequence of the recursive counter-example in <ref> [13] </ref>, IRT and IRT I are not equivalent in Type Theory. Subsection 2.3 shows also similar properties for the other inductive definition of almost-fullness, namely AF ID . Section 3 analyses the proofs in section 2 from the point of view of their computational content. <p> Its second subsection gives another program for a classical proof which was obtained by Stefano Berardi by game interpretation (we refer to [2] for a description of game interpretation). Finally, appendix A shows the equivalence between IRT and the formulation of the Intuitionistic Ramsey Theorem given in <ref> [13] </ref>. It justifies the unprovability of IRT in Type Theory. 2 The proofs All the proofs presented in subsections 2.1 and 2.2 have been formalized in ALF (see [1, 6]) which is an implementation of Martin-Lof's Type Theory (see [10]). <p> A goal is either to give a proof avoiding the requirement of decidability or to show that such a requirement is needed. A Equivalence between IRT and IRT 2 This appendix shows the equivalence between IRT and IRT 2 , the formulation of the Intuitionistic Ramsey Theorem given in <ref> [13] </ref>. We denote by AF 2 the notion of almost-fullness given in [13]. There, the set of strictly increasing functions from N to N is denoted by S. <p> A Equivalence between IRT and IRT 2 This appendix shows the equivalence between IRT and IRT 2 , the formulation of the Intuitionistic Ramsey Theorem given in <ref> [13] </ref>. We denote by AF 2 the notion of almost-fullness given in [13]. There, the set of strictly increasing functions from N to N is denoted by S. A relation R on N is defined to be AF 2 if and only if 8ff : S:9i; j : N :i &lt; j ^ R (ff (i); ff (j)). <p> In fact the proof of the equivalence between IRT and IRT 2 given in this appendix can be formalized in Type Theory. Because of this, as a consequence of the recursive counter-example to IRT 2 given in <ref> [13] </ref> we cannot hope to prove IRT in Type Theory. We destinate the symbol for its usual meaning as a relation on N and denote arbitrary relations by R or T .
References-found: 13

