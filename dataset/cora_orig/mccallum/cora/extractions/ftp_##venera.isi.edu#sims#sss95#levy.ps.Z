URL: ftp://venera.isi.edu/sims/sss95/levy.ps.Z
Refering-URL: 
Root-URL: 
Email: levy@research.att.com knoblock@isi.edu  
Title: Exploiting Run-Time Information for Efficient Processing of Queries  
Author: Craig A. Knoblock Alon Y. Levy 
Address: 600 Mountain Ave., Room 2C-406 4676 Admiralty Way Murray Hill, NJ 07974 Marina del Rey, CA 90292  
Affiliation: Information Sciences Institute and AI Principles Research Dept. Department of Computer Science AT&T Bell Laboratories University of Southern California  
Abstract: Information agents answer user queries using a large number of diverse information sources. The key issue in their perfomance is finding the set of information sources relevant to a query. Previous work has considered determining relevance soley based on compile-time analysis of the query. We argue that at compile-time, it is often not possible to significantly prune the set of sources relevant to a query, and that run-time information is needed. We make the following contributions. First, we identify the different types of information that can be obtained at run-time, and how they can be used to prune information sources. Second, we describe an algorithm which naturally extends query planning algorithms to exploit run-time information. Third, we describe the discrimination matrix, which is a data structure that identifies the information that can be used to help discriminate between different possible sources. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Arens, Y.; Chee, C. Y.; Hsu, C.-N.; and Knoblock, C. A. </author> <year> 1993. </year> <title> Retrieving and integrating data from multiple information sources. </title> <journal> International Journal on Intelligent and Cooperative Information Systems 2(2) </journal> <pages> 127-158. </pages>
Reference: <author> Brachman, R., and Schmolze, J. </author> <year> 1985. </year> <title> An overview of the KL-ONE knowledge representation system. </title> <booktitle> Cognitive Science 9(2) </booktitle> <pages> 171-216. </pages>
Reference-contexts: We assume the domain model is represented in KL-ONE type language <ref> (Brachman & Schmolze 1985) </ref>. Such a language contains unary relations (called concepts) which represent classes of objects in the domain and binary relations (roles) which describe relationships between objects. Concepts and roles can be either primitive or complex.
Reference: <author> Chakravarthy, U. S.; Grant, J.; and Minker, J. </author> <year> 1990. </year> <title> Logic-based approach to semantic query optimization. </title> <journal> ACM Transactions on Database Systems 15(2) </journal> <pages> 162-207. </pages>
Reference: <author> Etzioni, O., and Weld, D. S. </author> <year> 1994. </year> <title> A softbot-based interface to the internet. </title> <journal> Communications of the ACM 37(7). </journal>
Reference-contexts: In our work, we do not assume that the constraints can be inferred directly, rather we developed an approach to gathering additional information at run time that is likely to further constrain a query. The recent work on Softbots for Unix by Etzioni et al. <ref> (Etzioni & Weld 1994) </ref> exploits the use of additional information gathering actions to determine where to locate information. The information gathering actions are in the context of a software agent that can manipulate the environment as well as gather information.
Reference: <author> Finger, J. J. </author> <year> 1987. </year> <title> Exploiting Constraints in Design Synthesis. </title> <type> Ph.D. Dissertation, </type> <institution> Department of Computer Science, Stanford University. </institution>
Reference-contexts: Furthermore, a key aspect in our cost model, which has no parallel in standard SQO, is the ability to determine that the number of information sources accessed is reduced. Another related idea appears in the work by Finger <ref> (Finger 1987) </ref> on the use of supersumption to further constrain a design to find solutions faster. The idea is to add constraints to the design by inferring a set of ramifications from the partial design.
Reference: <author> Greiner, R. </author> <year> 1991. </year> <title> Finding optimal derivation strategies in a redundant knowledge base. </title> <booktitle> Artificial Intelligence 50(1) </booktitle> <pages> 95-116. </pages>
Reference: <author> Hsu, C.-N., and Knoblock, C. A. </author> <year> 1994. </year> <title> Rule induction for semantic query optimization. </title> <booktitle> In Proceedings of the Eleventh International Conference on Machine Learning. </booktitle>
Reference-contexts: To answer queries efficiently, an information agent must be able to determine precisely which information sources are relevant to a given query, and to retrieve as little as possible data from the relevant sources. Previous work on information agents (e.g.,SIMS <ref> (Knoblock, Arens, & Hsu 1994) </ref>, the Information Manifold (Kirk, Levy, & Srivastava 1995)) have focussed on determining relevant sources by using information available at compile time (i.e.,the query and the descriptions of information sources).
Reference: <author> Jarke, M., and Koch, J. </author> <year> 1984. </year> <title> Query optimization in database systems. </title> <journal> ACM Computing Surveys 16(2) </journal> <pages> 111-152. </pages>
Reference: <author> King, J. J. </author> <year> 1981. </year> <title> Query Optimization by Semantic Reasoning. </title> <type> Ph.D. Dissertation, </type> <institution> Stanford University, Department of Computer Science. </institution>
Reference: <author> Kirk, T.; Levy, A. Y.; Sagiv Y.; and Srivastava, D. </author> <year> 1995. </year> <title> The information manifold. </title> <booktitle> In In Working Notes of the AAAI Spring Symposium on Information Gathering in Distributed Heterogeneous Environments. </booktitle>
Reference-contexts: To answer queries efficiently, an information agent must be able to determine precisely which information sources are relevant to a given query, and to retrieve as little as possible data from the relevant sources. Previous work on information agents (e.g.,SIMS (Knoblock, Arens, & Hsu 1994), the Information Manifold <ref> (Kirk, Levy, & Srivastava 1995) </ref>) have focussed on determining relevant sources by using information available at compile time (i.e.,the query and the descriptions of information sources). However, as the following example shows, it is not always possible to significantly prune the set of information sources based solely on compile-time information. <p> Such generalized sideways information passing is the basis of the query processor of the Information Manifold system <ref> (Kirk, Levy, & Sri-vastava 1995) </ref>. Second, finding an individual in a specific information source can also be used to prune the sources considered for the same subgoal in the query.
Reference: <author> Knoblock, C.; Arens, Y.; and Hsu, C.-N. </author> <year> 1994. </year> <title> Cooperating agents for information retrieval. </title> <booktitle> In Proceedings of the Second International Conference on Cooperative Information Systems. </booktitle>
Reference-contexts: To answer queries efficiently, an information agent must be able to determine precisely which information sources are relevant to a given query, and to retrieve as little as possible data from the relevant sources. Previous work on information agents (e.g.,SIMS <ref> (Knoblock, Arens, & Hsu 1994) </ref>, the Information Manifold (Kirk, Levy, & Srivastava 1995)) have focussed on determining relevant sources by using information available at compile time (i.e.,the query and the descriptions of information sources).
Reference: <author> Levy, A. Y., and Sagiv, Y. </author> <year> 1995. </year> <title> Semantic query optimization in datalog programs. </title> <booktitle> In Proceedings of the ACM Symposium on Principles of Database Systems, </booktitle> <address> San Jose, CA. </address>
Reference-contexts: To answer queries efficiently, an information agent must be able to determine precisely which information sources are relevant to a given query, and to retrieve as little as possible data from the relevant sources. Previous work on information agents (e.g.,SIMS (Knoblock, Arens, & Hsu 1994), the Information Manifold <ref> (Kirk, Levy, & Srivastava 1995) </ref>) have focussed on determining relevant sources by using information available at compile time (i.e.,the query and the descriptions of information sources). However, as the following example shows, it is not always possible to significantly prune the set of information sources based solely on compile-time information. <p> Such generalized sideways information passing is the basis of the query processor of the Information Manifold system <ref> (Kirk, Levy, & Sri-vastava 1995) </ref>. Second, finding an individual in a specific information source can also be used to prune the sources considered for the same subgoal in the query.
Reference: <author> Levy, A. Y.; Sagiv, Y.; and Srivastava, D. </author> <year> 1994. </year> <title> Towards efficient information gathering agents. </title> <booktitle> In Working Notes of the AAAI Spring Symposium on Software Agents, Stan-ford, California, </booktitle> <pages> 64-70. </pages>
Reference: <author> Ullman, J. D. </author> <year> 1989. </year> <title> Principles of Database and Knowledge-Base Systems, </title> <booktitle> volume 2. </booktitle> <address> Rockville, Maryland: </address> <publisher> Computer Science Press. </publisher>
Reference-contexts: One method that may also be useful in our context is sideways information passing <ref> (Ullman 1989) </ref>, i.e., using the values obtained by solving one subgoal to restrict the search for the a subsequent subgoal. However, this will not always suffice. For example, suppose the first subgoal yields the binding RonBrachman.
References-found: 14

