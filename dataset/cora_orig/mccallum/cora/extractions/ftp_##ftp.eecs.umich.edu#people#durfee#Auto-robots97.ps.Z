URL: ftp://ftp.eecs.umich.edu/people/durfee/Auto-robots97.ps.Z
Refering-URL: http://ai.eecs.umich.edu/people/durfee/vita.html
Root-URL: http://www.cs.umich.edu
Email: -durfee pkenny kckluge-@umich.edu  
Title: Integrated Premission Planning and Execution for Unmanned Ground Vehicles  
Author: Edmund H. Durfee Patrick G. Kenny Karl C. Kluge 
Address: Ann Arbor, MI 48109  
Affiliation: EECS Department University of Michigan  
Abstract: Fielding robots in complex applications can stress the human operators responsible for supervising them, particularly because the operators might understand the applications but not the details of the robots. Our answer to this problem has been to insert agent technology between the operator and the robotic platforms. In this paper, we motivate the challenges in defining, developing, and deploying the agent technology that provides the glue in the application of tasking unmanned ground vehicles in a military setting. We describe how a particular suite of architectural components serves equally well to support the interactions between the operator, planning agents, and robotic agents, and how our approach allows autonomy during planning and execution of a mission to be allocated among the human and artificial agents. Our implementation and demonstrations (in real robots and simulations) of our multi-agent system shows significant promise for the integration of unmanned vehicles in military applications. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Balch, T., and Arkin, R. C. </author> <year> 1995. </year> <title> Motor Schema-based Formation Control for Multiagent Robot Teams. </title> <booktitle> In Proceedings of the First International Conference on Multi-Agent Systems , pages 10-16. </booktitle>
Reference-contexts: As it elaborates the mission, the planner can call on more specialized tools to formulate portions of the robotic plan. These include tools for route planning (Stentz, 1995), for planning RSTA observation points (Cook et al, to appear; Kluge et al, 1994), and for planning formations <ref> (Balch and Arkin, 1995) </ref>. The premission planner incorporates the information returned by these tools into its representation of the sequence of plan steps. The final sequence of plan steps formulated by the premission planner can entirely dictate the control actions that the UGVs will invoke throughout the mission.
Reference: <author> Calder, R.B., Smith, J.E., Courtemanche, A.J., Mar, J.M.F, and Ceranowicz, A.Z. </author> <year> 1993. </year> <title> ModSAF Behavior Simulation and Control. </title> <booktitle> In Proceedings of the Third Conference on Computer-Generated Forces and Behavioral Representation, </booktitle> <pages> pages 347-356. </pages> <address> Orlando, FL. </address>
Reference-contexts: To approximate such a situation, we adopted the use of the ModSAF simulation system <ref> (Calder et al, 1993) </ref> as a powerful, widely-used simulator for military purposes. The ModSAF simulator provides a rich environment to test and evaluate our system. The simulator allows for one to create vehicles from over 200 different platforms ranging from aircraft to land-based vehicles.
Reference: <author> Cook, D., Gmytrasiewicz, P. J.; and Holder, L. </author> <title> Decision-Theoretic Cooperative Sensor Planning. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 18(10) </volume> <pages> 1013-1023, </pages> <month> October </month> <year> 1996. </year>
Reference: <author> Durfee, E. H., Huber, M. J., Kurnow, M., and Lee, J., </author> <year> 1997. </year> <title> TAIPE: Tactical Assistants for Interaction Planning and Execution. </title> <booktitle> In Proceedings of Autonomous Agents 97. </booktitle>
Reference-contexts: At the level of multivehicle control, our approach is similar to these others; we have also demonstrated, however, that the reactive plan execution capabilities can be concurrently employed for operator interaction to provide mixed-initiative definitions of plans and constraints. These capabilities have found other uses beyond UGVs <ref> (Durfee et al, 1997) </ref>. A related lesson is on the importance of acquiring and propagating intent. Because vehicles might only intermittently be in touch with each other, it is critical that each know enough about the collective goals to forge ahead alone. <p> Moreover, these technologies apply to the decentralized and semi-autonomous control of many other kinds of systems, and ideas from this work have been applied in other domains including automated ship systems <ref> (Durfee et al, 1997) </ref>. At a more fundamental level, an open question is the degree to which authority and responsibility should be shared between the operator, the operators interface agent process (at the OWS), and the agent processes onboard the vehicles. In part, the answer to this question is sociological.
Reference: <author> Georgeff, M. P. and Lansky, A. L. </author> <year> 1986. </year> <title> Procedural Knowledge. </title> <booktitle> In Proceedings of the IEEE 74(10) </booktitle> <pages> 1383-1398. </pages>
Reference-contexts: We have realized these goals by adapting procedural reasoning techniques <ref> (Georgeff & Lansky, 1986) </ref>, embodied in the University of Michigan Procedural Reasoning System (UMPRS), to the planning and control of activities within, and across, UGVs and the operator (Lee et al, 1994). <p> The premission planning capability supports the operator by assisting, and sometimes automating, the translation and elaboration of military objectives into robotic actions. At the heart of premission planning is the UMPRS agent architecture, a C++ implementation of many of SRIs procedural reasoning concepts <ref> (Georgeff & Lansky, 1986) </ref>, tailored specifically to support the development of agent technologies for operator assistance and autonomous execution. UMPRS supports specification of a missions operation order in terms of a sequence of military procedures, each performed within the context of a larger set of objectives and constraints.
Reference: <author> Gowdy, J., and Thorpe, C., </author> <year> 1990. </year> <title> Annotated Maps for Autonomous Land Vehicles. </title> <booktitle> Proceedings of the 1990 IEEE Conference on Systems, Man, and Cybernetics , pages 282-288, </booktitle> <month> November </month> <year> 1990. </year>
Reference-contexts: They also demonstrated the advantage of the procedural planning approach in providing for reactions to events in the environment that are not tied to prespecified locations, in contrast to map-based approaches like the Annotated Map formalism <ref> (Gowdy and Thorpe, 1990) </ref>. Plan Recognition for Coordinating Indoor Robots To study the viability of using information assimilation techniques to support the coordinated execution of robotic plans, we implemented our belief-network-based plan recognition techniques as part of the sensing process of an indoor robot.
Reference: <author> Huber, M. J. </author> <year> 1996. </year> <title> Plan-Based Plan Recognition Models for the Effective Coordination of Agents Through Observation. </title> <type> PhD Dissertation, </type> <institution> Univ. of Michigan. </institution>
Reference: <author> Huber, M. J., Durfee, E. H., and Wellman, M. P. </author> <year> 1994. </year> <title> The Automated Mapping of Plans for Plan Recognition. </title> <booktitle> In Proceedings of the 1994 Conference on Uncertainty in Artificial Intelligence, </booktitle> <pages> pages 344-351. </pages>
Reference-contexts: However, in cases where messages fail to materialize, or where vehicles should maintain radio silence, the vehicles can use observations made with their sensors to draw inferences about the status of other vehicles (including enemy vehicles) <ref> (Huber et al, 1994) </ref>. Runtime Replanning Treating individual vehicles and the user interface process at the OWS each as agents provides considerable flexibility not only to premission planning and flexible execution, but also to how vehicles should respond to deviations between expected and actual circumstances during plan execution. <p> Though we have not gone into the details of the process, our system provides agents with the ability to transform a library of executable plans into a belief-network representation that is especially wellsuited to plan recognition <ref> (Huber, Durfee, and Wellman, 1994) </ref>. Finally, having recognized (or received through communication) the plans that others are pursuing, coordinated execution requires an analysis of the possible outcomes of joint actions, and the establishment of commitments to prevent conflicts.
Reference: <author> Huber, M. J. and Durfee, E. H. </author> <year> 1995. </year> <title> Deciding When to Commit to Action During Observation-based Coordination. </title> <booktitle> In Proceedings of the First International Conference on Multi-Agent Systems, </booktitle> <pages> pages 163-170. </pages>
Reference-contexts: In our simulation experiments, we identified characteristics of the plan-recognition problem that impact decisions as to how long the observer should wait (how sure it should be) before acting upon Detection its projection of where the observed agent is headed <ref> (Huber & Durfee, 1995) </ref>. However, realizing these mechanisms in real indoor robots introduced further observational uncertainties that at times would undermine the inferences.
Reference: <author> Ingrand, F. F., Georgeff, M. P., and Rao, A. S. </author> <year> 1992. </year> <title> An Architecture for Real-Time Reasoning and System Control. </title> <journal> IEEE Expert, </journal> <volume> 7(6) </volume> <pages> 34-44. </pages>
Reference-contexts: A first lesson that we have learned is that knowledge-based plan execution systems, such as UMPRS, can provide a powerful, tailorable substrate for operator interaction. Systems such as PRS and Soar have already demonstrated ability to control systems in problems including malfunction diagnosis and handling <ref> (Ingrand, Georgeff, and Rao, 1992) </ref>, aircraft sequencing (Rao and Georgeff, 1995) and air combat (Rao et al, 1992).
Reference: <author> Kluge, K., and Thorpe, C. </author> <year> 1995. </year> <title> The YARF System for Vision-Based Road Following. </title> <booktitle> Mathematical and Computer Modeling 22(4-7):213-233, </booktitle> <month> August-October </month> <year> 1995. </year>
Reference-contexts: In what follows, we summarize our observations. Reactive Execution in an Outdoor Mobile Robot We have used UMPRS as a controlling agent process for an outdoor electric utility vehicle (Lee et al, 1994). The vehicle navigation system included the YARF road follower <ref> (Kluge and Thorpe, 1995) </ref> to allow the vehicle to navigate along roads and sidewalks. It was also equipped with the ability to detect a simple class of landmarks (orange traffic cones), and to drive the vehicle off-road to a specified landmark in the environment.
Reference: <author> Lee, J. </author> <year> 1996. </year> <title> An Explicit Semantics for Coordinated Multiagent Plan Execution. </title> <type> PhD Dissertation, </type> <institution> Univ. of Michigan. </institution>
Reference-contexts: An alternative is to allow the vehicles to exchange explicit information about their revised plans, and to search for a minimal set of commitments that assure conflict-free execution <ref> (Lee, 1996) </ref>. Implementation and Evaluation The component technologies to build the interacting agents that bridge the gap between the operator interface and the robotic vehicles, as outlined above, have been implemented and selectively deployed. <p> Centralized runtime replanning is another. A hybrid method that we have developed for this project has been to allow runtime examination of agents adopted reactive plans to establish minimally limiting short-term constraints on reactions <ref> (Lee, 1996) </ref>. Conclusions An agent-based approach to bridging the gap between operators and robotic vehicles provides significant advantages by embedding knowledge and initiative within a semi-automated mission planning and execution system.
Reference: <author> Lee, J., Huber, M. J., Durfee, E. H., and Kenny, P. G. </author> <year> 1994. </year> <title> UM-PRS: An Implementation of the Procedural Reasoning System for Multirobot Applications. </title> <booktitle> In AIAA/NASA Conference on Intelligent Robots in Field, Factory, Service, and Space. </booktitle>
Reference-contexts: We have realized these goals by adapting procedural reasoning techniques (Georgeff & Lansky, 1986), embodied in the University of Michigan Procedural Reasoning System (UMPRS), to the planning and control of activities within, and across, UGVs and the operator <ref> (Lee et al, 1994) </ref>. UMPRS controls a UGV based on its sensed situation and on the directives and objectives handed down from the operators interface agent. UMPRS also controls the OWS by retrieving mission plans and taking actions to prompt the operator for refinements to objectives and mission parameters. <p> In what follows, we summarize our observations. Reactive Execution in an Outdoor Mobile Robot We have used UMPRS as a controlling agent process for an outdoor electric utility vehicle <ref> (Lee et al, 1994) </ref>. The vehicle navigation system included the YARF road follower (Kluge and Thorpe, 1995) to allow the vehicle to navigate along roads and sidewalks. <p> In part, the answer to this question is sociological. However, there are technological factors in modeling the impact of different divisions of autonomy on mission accomplishment time and success rate, and in the degree to which a better representation of the reactive plans <ref> (Lee & Durfee, 1994) </ref> can allow the division of autonomy to be divided dynamically, that provide exciting opportunities for future research.
Reference: <author> Lee, J., and Durfee, E. H. </author> <year> 1994. </year> <title> Structured Circuit Semantics for Reactive Plan Execution Systems. </title> <booktitle> In Proceedings of the 1994 National Conference on Artificial Intelligence (AAAI-94), </booktitle> <pages> pages 1232-1237. </pages>
Reference-contexts: We have realized these goals by adapting procedural reasoning techniques (Georgeff & Lansky, 1986), embodied in the University of Michigan Procedural Reasoning System (UMPRS), to the planning and control of activities within, and across, UGVs and the operator <ref> (Lee et al, 1994) </ref>. UMPRS controls a UGV based on its sensed situation and on the directives and objectives handed down from the operators interface agent. UMPRS also controls the OWS by retrieving mission plans and taking actions to prompt the operator for refinements to objectives and mission parameters. <p> In what follows, we summarize our observations. Reactive Execution in an Outdoor Mobile Robot We have used UMPRS as a controlling agent process for an outdoor electric utility vehicle <ref> (Lee et al, 1994) </ref>. The vehicle navigation system included the YARF road follower (Kluge and Thorpe, 1995) to allow the vehicle to navigate along roads and sidewalks. <p> In part, the answer to this question is sociological. However, there are technological factors in modeling the impact of different divisions of autonomy on mission accomplishment time and success rate, and in the degree to which a better representation of the reactive plans <ref> (Lee & Durfee, 1994) </ref> can allow the division of autonomy to be divided dynamically, that provide exciting opportunities for future research.
Reference: <author> Kluge, K., Weymouth, T.; and Smith, R. </author> <year> 1994. </year> <title> Information Assimilation Research at the University of Michigan for the ARPA Unmanned Ground Vehicle Project. </title> <booktitle> In Proceedings of SPIE Sensor Fusion VII. </booktitle>
Reference-contexts: The context in which a vehicle operates includes its awareness of the external environment, the internal status, and the activities of other vehicles. Information from all of these sources must be assimilated to classify the current operating conditions <ref> (Kluge et al, 1994) </ref>. In our architecture, this assimilation is done through fusion processes that act on information stored in the Information Assimilation DataBase (IADB).
Reference: <author> Rao, A. S. and Georgeff, M. P., </author> <year> 1995. </year> <title> BDI Agents: From Theory to Practice. </title> <booktitle> In Proceedings of the First International Conference on MultiAgent Systems, </booktitle> <pages> pages 312-319. </pages>
Reference-contexts: Systems such as PRS and Soar have already demonstrated ability to control systems in problems including malfunction diagnosis and handling (Ingrand, Georgeff, and Rao, 1992), aircraft sequencing <ref> (Rao and Georgeff, 1995) </ref> and air combat (Rao et al, 1992). At the level of multivehicle control, our approach is similar to these others; we have also demonstrated, however, that the reactive plan execution capabilities can be concurrently employed for operator interaction to provide mixed-initiative definitions of plans and constraints.
Reference: <author> Rao, A. S., Moreley, M., Selvestrel, M., and Murray, G. </author> <year> 1992. </year> <title> Representation, Selection, and Execution of Team Tactics in Air Combat Modelling. </title> <booktitle> In Proceedings of the Fifth Australian Joint Conf. on Artificial Intelligence, </booktitle> <pages> pages 185-190. </pages>
Reference-contexts: A first lesson that we have learned is that knowledge-based plan execution systems, such as UMPRS, can provide a powerful, tailorable substrate for operator interaction. Systems such as PRS and Soar have already demonstrated ability to control systems in problems including malfunction diagnosis and handling <ref> (Ingrand, Georgeff, and Rao, 1992) </ref>, aircraft sequencing (Rao and Georgeff, 1995) and air combat (Rao et al, 1992). <p> Systems such as PRS and Soar have already demonstrated ability to control systems in problems including malfunction diagnosis and handling (Ingrand, Georgeff, and Rao, 1992), aircraft sequencing (Rao and Georgeff, 1995) and air combat <ref> (Rao et al, 1992) </ref>. At the level of multivehicle control, our approach is similar to these others; we have also demonstrated, however, that the reactive plan execution capabilities can be concurrently employed for operator interaction to provide mixed-initiative definitions of plans and constraints.
Reference: <author> Shoham, Y. and Tennenholtz, M. </author> <year> 1994. </year> <title> On Social Laws for Artificial Agent Societies: Offline design. </title> <journal> Artificial Intelligence 72(1-2):231-252. </journal>
Reference-contexts: To avoid this, it is important that the range of replanning choices available to the vehicles be limited enough to avoid conflict, without being so limited as to unnecessarily constrain the vehicles. General constraints, such as socalled social laws can serve this purpose <ref> (Shoham and Tennenholz, 1994) </ref>, but often impose constraints for situations that might be impossible given the plans already adopted by the vehicles.
Reference: <author> Stentz, Anthony. </author> <year> 1990. </year> <title> The CODGER System for Mobile Robot Navigation. In Vision and Navigation: </title> <note> The Carnegie Mellon Navlab. </note> <editor> C. E. Thorpe (ed.), </editor> <publisher> Kluwer Academic Publishers. </publisher>
Reference-contexts: In our architecture, this assimilation is done through fusion processes that act on information stored in the Information Assimilation DataBase (IADB). The IADB uses a CODGER-like blackboard (as developed for autonomous land vehicles at CMU <ref> (Stentz, 1990) </ref>) to store the information about the world used by the UGV agent process. The information is collected from UGV sensors (e.g. camera), from internal monitors (e.g. fuel gauge), and from communications systems (e.g. radio), and combined into symbolic assessments of the situation (e.g. enemy-nearby? is true).
Reference: <author> Stentz, Anthony. </author> <year> 1995. </year> <title> Optimal and efficient path planning for unknown and dynamic environments. </title> <journal> International Journal of Robotics and Automation 10(3) </journal> <pages> 89-100. </pages>
Reference-contexts: As it elaborates the mission, the planner can call on more specialized tools to formulate portions of the robotic plan. These include tools for route planning <ref> (Stentz, 1995) </ref>, for planning RSTA observation points (Cook et al, to appear; Kluge et al, 1994), and for planning formations (Balch and Arkin, 1995). The premission planner incorporates the information returned by these tools into its representation of the sequence of plan steps.
Reference: <author> Tambe, M., </author> <year> 1995. </year> <title> Recursive Agent and Agent-Group Tracking in a Real-time, Dynamic Environment. </title> <booktitle> In Proceedings of the First International Conference on MultiAgent Systems, </booktitle> <pages> pages 368-375. </pages>
Reference: <author> Tambe, M., Johnson, W. L., Jones, R. M., Koss, F., Laird, J. E., Rosenbloo, P. S., and Schwamb, K., </author> <year> 1995. </year> <title> Intelligent Agents for Interactive Simulation Environments, </title> <journal> AI Magazine, </journal> <volume> 16(1) </volume> <pages> 15-39, </pages> <month> Spring </month> <year> 1995. </year>
References-found: 22

