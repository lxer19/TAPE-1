URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/arup/pub/www/papers/hotos95.ps
Refering-URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/arup/pub/www/resume.html
Root-URL: 
Email: mdev@watson.ibm.com arup@cs.cmu.edu c1kish@watson.ibm.com  
Title: Meta-Scripts as a Mechanism for Complex Web Services  
Author: Murthy Devarakonda Arup Mukherjee Bill Kish 
Address: Yorktown Hts, NY Pittsburgh, PA Yorktown Hts, NY  
Affiliation: IBM T. J. Watson Research Carnegie Mellon University IBM T. J. Watson Research  
Abstract: The World-Wide Web is the `killer application' of the mid-1990's, and as a result it serves as the market place for various services. This position paper discusses the problem of creating complex Web services from simpler ones, under client control. For example, one might want an annotated forecast of a company's stock price from three simple services, viz., stock price data, forecasting, and annotation. We propose meta-scripts as a solution. A client accesses a meta-script, which contains procedures for accessing and composing simpler services. Meta-identifiers are used in the meta-script instead of static links. Developments in type-consistency mechanisms and various enabling services of the Web help in realization of the meta-script based approach. This model of service composition separates control from data manipulation, and gives this control to a client. As clients are empowered with the selection and coordination of service providers, this can lead to a free market for services. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Berners-Lee, R. Cailliau, J-F Groff, and B. Pollermann. </author> <title> Word-Wide Web: The Information Universe. </title> <journal> Electronic Networking: Research, Applications, and Policy, </journal> <volume> 1(2), </volume> <month> Spring </month> <year> 1992. </year>
Reference-contexts: 1 Introduction The World-Wide Web <ref> [1] </ref> is a rapidly emerging paradigm for accessing information on the Internet. The basic method of access in the Web is through specification of a Universal Resource Locator (URL) [2]. A Web client determines how to present the accessed information based on the MIME type [3] of the retrieved document.
Reference: [2] <author> T. Berners-Lee, L. Masinter, and M. McCahill. </author> <title> Uniform Resource Locator. </title> <type> Technical report, </type> <institution> Internet Engineering Task Force, </institution> <type> Draft RFC, </type> <year> 1994. </year>
Reference-contexts: 1 Introduction The World-Wide Web [1] is a rapidly emerging paradigm for accessing information on the Internet. The basic method of access in the Web is through specification of a Universal Resource Locator (URL) <ref> [2] </ref>. A Web client determines how to present the accessed information based on the MIME type [3] of the retrieved document. The MIME type is usually supplied by the information server, or deduced from the filename extension (e.g., ".html") of the URL.
Reference: [3] <institution> MIME (Multipuprpose Internet Mail Extensions). Internet RFC 1521. </institution>
Reference-contexts: 1 Introduction The World-Wide Web [1] is a rapidly emerging paradigm for accessing information on the Internet. The basic method of access in the Web is through specification of a Universal Resource Locator (URL) [2]. A Web client determines how to present the accessed information based on the MIME type <ref> [3] </ref> of the retrieved document. The MIME type is usually supplied by the information server, or deduced from the filename extension (e.g., ".html") of the URL.
Reference: [4] <author> T. Berners-Lee, R. T. Fielding, and H. Frystyk Nielsen. </author> <title> Specification of the HTTP 1.0 Standard. </title> <note> Available on the Web at http: //www.w3.org/hypertext/WWW/Protocols/ HTTP/HTTP2.html. </note>
Reference-contexts: A Web client determines how to present the accessed information based on the MIME type [3] of the retrieved document. The MIME type is usually supplied by the information server, or deduced from the filename extension (e.g., ".html") of the URL. For example, most HTML <ref> [4] </ref> documents have the MIME type text/html, and a Web client will usually choose to format and display such documents itself. A postscript file with a MIME type of application/postscript might, on the other hand, be turned over to an application such as GNU's ghostscript for previewing. <p> Although this problem is not specific to meta-script oriented services, the need to ensure type-consistency limits the extent to which a meta-script can be independent of the underlying services it employs. The HTTP 1.0 standard <ref> [4] </ref> provides a coarse-grained solution to the type-consistency problem. A client may send Accept and Accept-Encoding headers, when making a request of a server, to indicate the data types it can accept as output.
Reference: [5] <author> J. H. Howard, M. L. Kazar, S. G. Menees, D. A. Nichols, M. Satyanarayanan, R. N. Sidebotham, and M. J. West. </author> <title> Scale and Performance in a Distributed File System. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 6(1), </volume> <month> February </month> <year> 1988. </year>
Reference-contexts: Even more significantly, a large amount of data now passes from client to the server (such as the raw data for the stock price in the above example). The second problem can be addressed using a wide-area file system such as the AFS <ref> [5] </ref>, and by passing around an AFS path name instead of actual data. Even if a wide-area file system is not used, a URL can be used instead of passing the data around.
Reference: [6] <author> A. Mukherjee and D. P. Siewiorek. </author> <title> Mobility: A Medium for Computation, Communication, and Control. </title> <booktitle> In Proc. 1994 Workshop on Mobile Computing Systems and Applications, </booktitle> <month> Dec </month> <year> 1994. </year>
Reference-contexts: Earlier, Mukherjee and Siewiorek <ref> [6] </ref> proposed a broad applica tion taxonomy based on the communication, data ma-nipulation, and control characteristics of applications. Their analysis suggests that, in the context of a mobile environment, services may benefit in several ways from appropriate separation of data manipulation and control processing. <p> Their analysis suggests that, in the context of a mobile environment, services may benefit in several ways from appropriate separation of data manipulation and control processing. The meta-script mechanism advocates one such separation, corresponding to the "user agent" scenario of <ref> [6] </ref>. Individual services manipulate the data under the control of a client-side meta-script, resulting in a more flexible service architecture. The meta-script model might also be regarded as a client-centric approach to service composition, mod-elled after the client-centric arbitration protocols of the Calypso distributed token manager [7].
Reference: [7] <author> A. Mohindra and M. Devarakonda. </author> <title> Distributed Token Management in Calypso File System. </title> <booktitle> In Proc. of IEEE Symp. on Parallel and Distributed Processing, </booktitle> <month> Oct </month> <year> 1994. </year>
Reference-contexts: Individual services manipulate the data under the control of a client-side meta-script, resulting in a more flexible service architecture. The meta-script model might also be regarded as a client-centric approach to service composition, mod-elled after the client-centric arbitration protocols of the Calypso distributed token manager <ref> [7] </ref>. Tokens are used in some distributed file systems to convey the authorization to access data and thus to support cache consistency. Most such systems employ a server-centric protocol, wherein the file server is responsible for revoking outstanding tokens [8].
Reference: [8] <author> M. L. Kazar and others. </author> <title> DEcorum File System Architectural Overview. </title> <booktitle> In Proc. of Summer USENIX Conference, </booktitle> <month> June </month> <year> 1990. </year>
Reference-contexts: Tokens are used in some distributed file systems to convey the authorization to access data and thus to support cache consistency. Most such systems employ a server-centric protocol, wherein the file server is responsible for revoking outstanding tokens <ref> [8] </ref>. However, in the client-centric approach, each requesting client is responsible for revoking outstanding tokens after obtaining the list of token holders from the server. In a position paper, Black and Walpole [9] propose the HTTP daemon as an object-oriented, next generation operating system.
Reference: [9] <author> A. P. Black and J. Walpole. </author> <title> Objects to the Rescue! or httpd: the next generation operating system. </title> <booktitle> In Proc. 6th ACM SIGOPS European Workshop, </booktitle> <month> Sep </month> <year> 1994. </year>
Reference-contexts: Most such systems employ a server-centric protocol, wherein the file server is responsible for revoking outstanding tokens [8]. However, in the client-centric approach, each requesting client is responsible for revoking outstanding tokens after obtaining the list of token holders from the server. In a position paper, Black and Walpole <ref> [9] </ref> propose the HTTP daemon as an object-oriented, next generation operating system. They point out that the present Web architecture lacks general purpose mechanisms for dynamic concatenation of `services' and extensibility, which are the hallmarks of an object-oriented system.
Reference: [10] <author> John K. Ousterhout. </author> <title> Tcl and the Tk Toolkit. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: However, in future, it may become feasible to implement meta scripts as a subset of the capabilities of a general scripting language that has been designed to be practical and safe. Current scripting languages, such as tcl/tk <ref> [10] </ref> offer much promise, but must first be restricted to their "safe" subsets, a goal that is the focus of efforts such as safe-tcl [11]. 4 Data Type Consistency When two or more simple services are combined, whether by means of a meta-script, or by the conventional approach, the services must
Reference: [11] <author> Nathaniel S. Borenstein. </author> <title> E-mail With a Mind of Its Own: The Safe-Tcl Language for Enabled Mail. </title> <booktitle> In IFIP 6.5 International Working Conference on Upper Layer Protocols, Architectures and Applications ULPAA'94, </booktitle> <year> 1994. </year>
Reference-contexts: Current scripting languages, such as tcl/tk [10] offer much promise, but must first be restricted to their "safe" subsets, a goal that is the focus of efforts such as safe-tcl <ref> [11] </ref>. 4 Data Type Consistency When two or more simple services are combined, whether by means of a meta-script, or by the conventional approach, the services must be type-consistent with each other, i.e. every service that is a producer of data must emit a format that is acceptable as input to
Reference: [12] <author> John Ockerbloom. </author> <title> Introducing Structured Data Types into Internet-Scale Informations Systems. </title> <type> Ph.D. Thesis Proposal, </type> <institution> Carnegie Mel-lon University, </institution> <note> Available on the Web at http: //www.cs.cmu.edu:8001/afs/cs.cmu.edu/user/ spok/www/proposal.html, </note> <month> May </month> <year> 1993. </year>
Reference-contexts: little or no support for the recognition of distinct types that are equivalent. (Two distinct types are equivalent if a sequence of convertors exists to convert one type to the other and vice versa.) A more flexible solution to this problem lies in the currently ongoing development of type oracles <ref> [12] </ref> and similar services for the Web. Type oracles present a distributed, extensible lattice of types that can be used to describe data. Clients can create types with a granularity as fine as they need.
Reference: [13] <institution> The Secure HyperText Transfer Protocol. </institution> <note> Internet Draft, Available on the Web at http: //www.eit.com/projects/s-http/shttp.txt. </note>
Reference-contexts: Currently, work is in progress to address the need for privacy and authen-tication, both at the HTTP level <ref> [13] </ref> and below it [14]. Type oracles, as described above, can help ensure that data is available in a format that the client can understand. Uniform Resource Names [15] are being considered to permit documents to change their physical location without affecting existing links.
Reference: [14] <author> Netscape. </author> <title> Internet Data Security: An Overview of Implementation and Plans from Netscape Communications Corporation. </title> <note> Available on the Web at http://home.mcom.com/info/security-overview.html. </note>
Reference-contexts: Currently, work is in progress to address the need for privacy and authen-tication, both at the HTTP level [13] and below it <ref> [14] </ref>. Type oracles, as described above, can help ensure that data is available in a format that the client can understand. Uniform Resource Names [15] are being considered to permit documents to change their physical location without affecting existing links.
Reference: [15] <author> Tim Berners-Lee. </author> <note> WWW Names and Addresses, URIs, URLs, URNs. Specification available on the Web at http://www.w3.org/hypertext/ WWW/Addressing/Addressing.html, 1994. </note>
Reference-contexts: Currently, work is in progress to address the need for privacy and authen-tication, both at the HTTP level [13] and below it [14]. Type oracles, as described above, can help ensure that data is available in a format that the client can understand. Uniform Resource Names <ref> [15] </ref> are being considered to permit documents to change their physical location without affecting existing links. Other services that may prove valuable include Auto Fill Forms, Common Gateway Interface (CGI) for Clients, and Standard Search Interfaces.
Reference: [16] <author> Tim Berners-Lee, Ed. </author> <title> Notes from the Development Priorities BOF. </title> <note> Proc. of World-Wide Web Conference, Available on the Web at http: //www.w3.org/hypertext/WWW/WorkingNotes /WWW94/DevPriBOF.html, May 1994. </note>
Reference-contexts: This would be valuable as more services become reserved for Registered Users Only. CGI for Clients: A Common Gateway Interface for clients has been proposed <ref> [16] </ref>. This may be a smarter way to achieve auto fill forms and more. A secure and authenticated method for authorized servers to execute scripts on a client machine would permit the server to find out about the user's preferences and capabilities of the client machine.
References-found: 16

