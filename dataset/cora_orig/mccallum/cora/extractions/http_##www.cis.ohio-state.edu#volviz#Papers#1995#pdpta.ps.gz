URL: http://www.cis.ohio-state.edu/volviz/Papers/1995/pdpta.ps.gz
Refering-URL: http://www.cis.ohio-state.edu/volviz/papers_subject.html
Root-URL: 
Email: -law, yagel-@cis.ohio-state.edu  
Title: CellFlow: A Parallel Rendering Scheme for Distributed Memory Architectures  
Author: Asish Law and Roni Yagel 
Address: Columbus, Ohio 43210  
Affiliation: Department of Computer and Information Science The Ohio State University  
Abstract: CellFlow is an animation system that exploits frame coherency to implement a look- ahead scheme of object dataow. The implementation of this scheme uses the communication features of modern scalable multicomputers to achieve good speedup by means of latency hiding. We demonstrate the performance of our approach in the field of volume rendering by implementing incremental rotation of the volumetric object about its center. The main advantages of the algorithm are: its simplicity, its optimal embedding in popular network topologies, and minimal, congestion-free communication among processors. Results are shown for implementation on the Cray T3D, a distributed memory 3D torus architecture. Computation and communication load balancing issues among processors are also addressed. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Challinger. </author> <title> Parallel Volume Rendering on a Shared-Memory Multiprocessor, </title> <institution> Department of Computer and Information Science, University of California at Santa Cruz technical report # UCSC-CRL-91-23 (revised March 1992). </institution>
Reference: [2] <author> B. Corrie, P. Mackerras. </author> <title> Parallel Volume Rendering and Data Coherence, </title> <booktitle> Proceedings of Parallel Rendering Symposium, </booktitle> <month> October </month> <year> 1993, </year> <pages> pp. 23-26. </pages>
Reference: [3] <author> D. Cohen, S. Fleishman. </author> <title> An Incremental Alignment Algorithm for Parallel Volume Rendering, </title> <booktitle> Proceedings of Eurographics 95, </booktitle> <address> Maastricht, The Netherlands, </address> <note> September 1995 (to be published). </note>
Reference: [4] <author> T. W. Crockett, T. Orloff. </author> <title> A MIMD Rendering Algorithm for Distributed Memory Architectures, </title> <booktitle> Proceedings of Parallel Rendering Symposium, </booktitle> <month> October </month> <year> 1993, </year> <pages> pp. 35-42. </pages>
Reference: [5] <author> R. A. Drebin, L. Carpenter, P. Hanrahan. </author> <title> Volume Rendering, </title> <journal> Computer Graphics, </journal> <volume> Vol. 22, No. 4, </volume> <month> August </month> <year> 1988, </year> <pages> pp. 65-74. </pages>
Reference: [6] <author> T. T. Elvins. </author> <title> Volume Rendering on a Distributed Memory Parallel Computer, </title> <booktitle> Proceedings of Visualization92, </booktitle> <address> Boston MA, </address> <month> October </month> <year> 1992, </year> <pages> pp. 93-98. </pages>
Reference: [7] <author> M. Fruhauf. </author> <title> Volume Rendering on a Multiprocessor Architecture with Shared Memory: A Concurrent Volume Rendering Algorithm, </title> <booktitle> Proceedings of Second Eurographics Workshop on Visualization in Scientific Computing, </booktitle> <year> 1992. </year>
Reference: [8] <author> A. Law, R. Yagel, D. N. Jayasimha. VoxelFlow: </author> <title> A Parallel Volume Rendering Method for Scientific Visualiza <br>- tion, </title> <booktitle> Proceedings of ISCA International Conference, </booktitle> <address> Indianapolis, March 15-17, </address> <year> 1995. </year> <pages> pp. 260-264. </pages>
Reference-contexts: The two wedge shaped grey areas in Figure 3 correspond to the padding in the CellFlow scheme. This ow of voxel data between adjacent processors gave our earlier method its name: VoxelFlow <ref> [8] </ref>. As the rotation angle increases, the size of the black area decreases, that is, most of the data has to be brought in (communicated) from other processors. If the angle of rotation is very large some of the information that is needed might reside more than one processor away.
Reference: [9] <author> M. Levoy. </author> <title> Display of Surfaces from Volume Data, </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> Vol. 8, No. 5, </volume> <month> May </month> <year> 1988, </year> <pages> pp. 29-37. </pages>
Reference: [10] <author> P. Schroder, J. B. Salem. </author> <title> Fast Rotation of Volume Data on Data Parallel Architecture, </title> <booktitle> Proceedings of Visualiza <br>- tion91, </booktitle> <address> San Diego, CA, </address> <pages> pp. 50-57. </pages>
Reference: [11] <author> L. Westover. Splatting: </author> <title> A Parallel, Feed-Forward Volume Rendering Algorithm, </title> <type> Ph.D Thesis, </type> <institution> Department of Computer Science, University of North Carolina at Chapel Hill, </institution> <month> July </month> <year> 1991. </year>
Reference: [12] <author> T. K. Wu, M. L. Brady. </author> <title> Parallel Approximate Computation of Projections for Animated Volume Rendered Dis <br>- plays, </title> <booktitle> Proceedings of Parallel Rendering Symposium, </booktitle> <month> October </month> <year> 1993, </year> <pages> pp. 61-66. </pages>
References-found: 12

