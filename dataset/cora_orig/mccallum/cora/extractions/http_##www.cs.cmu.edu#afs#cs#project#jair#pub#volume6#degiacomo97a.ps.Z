URL: http://www.cs.cmu.edu/afs/cs/project/jair/pub/volume6/degiacomo97a.ps.Z
Refering-URL: http://www.cs.washington.edu/research/jair/abstracts/degiacomo97a.html
Root-URL: 
Email: degiacomo@dis.uniroma1.it  lenzerini@dis.uniroma1.it  
Title: A Uniform Framework for Concept Definitions in Description Logics  
Author: Giuseppe De Giacomo Maurizio Lenzerini 
Address: Via Salaria 113, 00198 Roma, Italy  Via Salaria 113, 00198 Roma, Italy  
Affiliation: Universita di Roma "La Sapienza"  Universita di Roma "La Sapienza"  
Note: Journal of Artificial Intelligence Research 6 (1997) 87-110 Submitted 7/96; published 3/97  
Abstract: Most modern formalisms used in Databases and Artificial Intelligence for describing an application domain are based on the notions of class (or concept) and relationship among classes. One interesting feature of such formalisms is the possibility of defining a class, i.e., providing a set of properties that precisely characterize the instances of the class. Many recent articles point out that there are several ways of assigning a meaning to a class definition containing some sort of recursion. In this paper, we argue that, instead of choosing a single style of semantics, we achieve better results by adopting a formalism that allows for different semantics to coexist. We demonstrate the feasibility of our argument, by presenting a knowledge representation formalism, the description logic ALCQ, with the above characteristics. In addition to the constructs for conjunction, disjunction, negation, quantifiers, and qualified number restrictions, ALCQ includes special fixpoint constructs to express (suitably interpreted) recursive definitions. These constructs enable the usual frame-based descriptions to be combined with definitions of recursive data structures such as directed acyclic graphs, lists, streams, etc. We establish several properties of ALCQ, including the decidability and the computational complexity of reasoning, by formulating a correspondence with a particular modal logic of programs called the modal mu-calculus.
Abstract-found: 1
Intro-found: 1
Reference: <author> Baader, F. </author> <year> (1990). </year> <title> Terminological cycles in KL-ONE-based knowledge representation languages. </title> <booktitle> In Proc. of the 8th Nat. Conf. on Artificial Intelligence (AAAI-90), </booktitle> <pages> pp. </pages> <address> 621-626 Boston, Ma. </address>
Reference: <author> Baader, F. </author> <year> (1991). </year> <title> Augmenting concept languages by transitive closure of roles: An alternative to terminological cycles. </title> <booktitle> In Proc. of the 12th Int. Joint Conf. on Artificial Intelligence (IJCAI-91) Sydney, </booktitle> <address> Australia. </address>
Reference: <author> Beeri, C. </author> <year> (1990). </year> <title> A formal approach to object-oriented databases. </title> <journal> Data and Knowledge Engineering, </journal> <volume> 5, </volume> <pages> 353-382. </pages>
Reference: <author> Beneventano, D., & Bergamaschi, S. </author> <year> (1992). </year> <title> Subsumption for complex object data models. </title> <booktitle> In Proc. of the 4th Int. Conf. on Database Theory (ICDT-92), No. 646 in Lecture Notes in Computer Science, </booktitle> <pages> pp. 357-375. </pages> <publisher> Springer-Verlag. </publisher>
Reference: <author> Bergamaschi, S., & Sartori, C. </author> <year> (1992). </year> <title> On taxonomic reasoning in conceptual design. </title> <journal> ACM Transaction on Database Systems, </journal> <volume> 17 (3), </volume> <pages> 385-422. </pages>
Reference: <author> Borgida, A. </author> <year> (1992). </year> <title> From type systems to knowledge representation: Natural semantics specifications for description logics. </title> <journal> Journal of Intelligent and Cooperative Information Systems, </journal> <volume> 1 (1), </volume> <pages> 93-126. </pages>
Reference: <author> Calvanese, D., De Giacomo, G., & Lenzerini, M. </author> <year> (1995). </year> <title> Structured objects: modeling and reasoning. </title> <booktitle> In Proc. of the 4th Int. Conf. on Deductive and Object-Oriented Databases (DOOD-95), Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag. </publisher>
Reference-contexts: It suffice to resort to the following equivalences: 9R 1 ffi R 2 :C = 9R 1 :9R 2 :C 9R fl :C = X:(C t 9R:X) Note that 8R fl :C = -X:(C u 8R:X). In <ref> (Calvanese, De Giacomo, & Lenzerini, 1995) </ref> a further implicit form of fixpoint has been advocated, the so called well-founded role construct wf (R). By explicit fixpoints, wf (R) is expressed simply as X:(8R:X).
Reference: <author> Cleaveland, R. </author> <year> (1990). </year> <title> Tableaux-based model checking in the propositional mu-calculus. </title> <journal> Acta Informatica, </journal> <volume> 27, </volume> <pages> 725-747. </pages>
Reference: <author> Dam, M. </author> <year> (1992). </year> <title> CTL* and ECTL* as fragments of the modal mu-calculus. </title> <booktitle> In Proceeding of the Col. on Trees and Algebra in Programming, No. 581 in Lecture Notes in Computer Science, </booktitle> <pages> pp. 145-164. </pages> <publisher> Springer-Verlag. </publisher> <editor> de Bakker, J. </editor> <year> (1980). </year> <title> Mathematical Theory of Program Correctness. Prentice-Hall. 108 Concept Definitions in Description Logics De Giacomo, </title> <editor> G. </editor> <year> (1993). </year> <title> Reconciling different semantics for concept definition (extended abstract). </title> <booktitle> In Proc. of the 1st COMPULOG Net Meeting on Knowledge Representation and Reasoning Systems (CNKRR-93). </booktitle>
Reference: <author> De Giacomo, G. </author> <year> (1995). </year> <title> Decidability of Class-Based Knowledge Representation Formalisms. </title> <type> Ph.D. thesis, </type> <institution> Dipartimento di Informatica e Sistemistica, Universita di Roma "La Sapienza". </institution>
Reference-contexts: It suffice to resort to the following equivalences: 9R 1 ffi R 2 :C = 9R 1 :9R 2 :C 9R fl :C = X:(C t 9R:X) Note that 8R fl :C = -X:(C u 8R:X). In <ref> (Calvanese, De Giacomo, & Lenzerini, 1995) </ref> a further implicit form of fixpoint has been advocated, the so called well-founded role construct wf (R). By explicit fixpoints, wf (R) is expressed simply as X:(8R:X).
Reference: <author> De Giacomo, G., & Lenzerini, M. </author> <year> (1994a). </year> <title> Boosting the correspondence between description logics and propositional dynamic logics. </title> <booktitle> In Proc. of the 12th Nat. Conf. on Artificial Intelligence (AAAI-94), </booktitle> <pages> pp. 205-212. </pages> <publisher> AAAI-Press/the MIT-Press. </publisher>
Reference: <author> De Giacomo, G., & Lenzerini, M. </author> <year> (1994b). </year> <title> Concept language with number restrictions and fixpoints, and its relationship with mu-calculus. </title> <booktitle> In Proc. of the 11th Eur. Conf. on Artificial Intelligence (ECAI-94), </booktitle> <pages> pp. 411-415. </pages> <publisher> John Wiley and Sons. </publisher>
Reference-contexts: Hence by Theorem 8 and Theorem 5 the thesis follows. 2 6. Discussion and Conclusion The work presented in this paper stems out from (De Giacomo, 1993), where the basic ideas of introducing explicit fixpoint was first presented, and <ref> (De Giacomo & Lenzerini, 1994b) </ref>, where such idea was further elaborated and ALCQ was first introduced. One of the main contributions of this work has been to devise a tight correspondence between description logics with fixpoints and modal mu-calculus.
Reference: <author> De Giacomo, G., & Lenzerini, M. </author> <year> (1995). </year> <title> What's in an aggregate: foundation for description logics with tuples and set. </title> <booktitle> In Proc. of the 14th Int. Conf. on Artificial Intelligence (IJCAI-95). </booktitle>
Reference-contexts: It suffice to resort to the following equivalences: 9R 1 ffi R 2 :C = 9R 1 :9R 2 :C 9R fl :C = X:(C t 9R:X) Note that 8R fl :C = -X:(C u 8R:X). In <ref> (Calvanese, De Giacomo, & Lenzerini, 1995) </ref> a further implicit form of fixpoint has been advocated, the so called well-founded role construct wf (R). By explicit fixpoints, wf (R) is expressed simply as X:(8R:X).
Reference: <author> Emerson, E. A., & Jutla, C. S. </author> <year> (1988). </year> <title> The complexity of tree automata and logics of programs. </title> <booktitle> In Proc. of the 20th An. Symp. on the Foundations of Computer Science (FOCS-88), </booktitle> <pages> pp. 328-337. </pages>
Reference-contexts: Theorem 7 Satisfiability of ALC concepts, satisfiability of ALC TBoxes, and logical implication in ALC TBoxes are EXPTIME-complete problems. 103 De Giacomo & Lenzerini Proof The satisfiability problem for modal mu-calculus is EXPTIME-complete <ref> (Emerson & Jutla, 1988) </ref>, hence by Theorem 6 and by Theorem 5 the thesis follows. 2 5.2 Reasoning in ALCQ Next we exhibit a mapping from ALCQ concepts to formulae of variant of modal mu-calculus, called deterministic modal mu-calculus, which has the same syntax as the modal mu-calculus, but is interpreted
Reference: <author> Fattorosi-Barnaba, M., & De Caro, F. </author> <year> (1985). </year> <title> Graded modalities I. </title> <journal> Studia Logica, </journal> <volume> 44, </volume> <pages> 197-221. </pages>
Reference: <author> Fine, K. </author> <year> (1972). </year> <title> In so many possible worlds. </title> <journal> Notre Dame Journal of Formal Logic, </journal> <volume> 13 (4), </volume> <pages> 516-520. </pages>
Reference: <author> Kozen, D. </author> <year> (1983). </year> <title> Results on the propositional mu-calculus. </title> <journal> Theoretical Computer Science, </journal> <volume> 27, </volume> <pages> 333-355. </pages>
Reference: <author> Kozen, D., & Parikh, R. </author> <year> (1983). </year> <title> A decision procedure for the propositional mu-calculus. </title> <booktitle> In Proc. of the 2nd Work. on Logic of Programs, No. 164 in Lecture Notes in Computer Science, </booktitle> <pages> pp. 313-325. </pages> <publisher> Springer-Verlag. </publisher>
Reference: <author> Larsen, K. J. </author> <year> (1990). </year> <title> Proof systems for satisfiability in Hennessy-Milner logic with recursion. </title> <journal> Theoretical Computer Science, </journal> <volume> 72, </volume> <pages> 265-288. </pages>
Reference: <author> Nebel, B. </author> <year> (1990). </year> <title> Reasoning and Revision in Hybrid Representation Systems. No. </title> <booktitle> 422 in Lecture Notes in Artificial Intelligence. </booktitle> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Description logics describe the domain of interest in terms of concepts, which represent classes of individuals, and roles, which are binary relations used to specify properties or attributes of individuals as well as links with other individuals <ref> (Nebel, 1990) </ref>. Starting from atomic concepts, denoted simply by a name, more complex concepts are built by using a suitable set of constructs. For example, the expression parent u male u 8child:male denotes the concept of father (male parent) whose children are all male. <p> Finally, in Section 6, we draw the conclusions and discuss some open problems. 2. Preliminaries In this section, we briefly present the basic notions regarding both description logics, and fixpoints. The interested reader is referred to <ref> (Nebel, 1990) </ref> and (de Bakker, 1980) for a more complete introduction to the subjects. 2.1 Description Logics Description logics allow one to represent a domain of interest in terms of concepts and roles. Concepts model classes of individuals, while roles model relationships between classes.
Reference: <author> Nebel, B. </author> <year> (1991). </year> <title> Terminological cycles: Semantics and computational properties. </title> <editor> In Sowa, J. F. (Ed.), </editor> <booktitle> Principles of Semantic Networks, </booktitle> <pages> pp. 331-361. </pages> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos. </address>
Reference-contexts: differently, by choosing, a priori and once and for all, which solutions, or equivalently which fixpoints, are to be assigned to the defining concept of a recursive definition 4 . 3.1 Different Semantics for Recursive Definitions In the literature on description logics, three semantics for recursive definitions have been proposed <ref> (see Nebel, 1991) </ref>: * Descriptive Semantics * Least Fixpoint Semantics * Greatest Fixpoint Semantics and which of these semantics is the "right" one is a long standing matter of debate.
Reference: <author> Parikh, R. </author> <year> (1981). </year> <title> Propositional dynamic logic of programs: A survey. </title> <booktitle> In Proc. of the 1st Work. on Logic of Programs, No. 125 in Lecture Notes in Computer Science, </booktitle> <pages> pp. 102-144. </pages> <publisher> Springer-Verlag. </publisher> <address> 109 De Giacomo & Lenzerini Park, D. </address> <year> (1976). </year> <title> Finiteness is mu-ineffable. </title> <journal> Theoretical Computer Science, </journal> <volume> 3, </volume> <pages> 173-181. </pages>
Reference-contexts: Let us ignore for a moment the qualified number restriction constructs. Formulae of ALCQ without qualified number restrictions are, in fact, formulae of the modal mu-calculus, as shown in the previous section. By using a well-known technique developed for propositional dynamic logic <ref> (Parikh, 1981) </ref>, (nondeterministic) modal mu-calculus formulae can be reduced to deterministic modal mu-calculus formulae (Streett & Emerson, 1984), as shown below. We use the following notations for usual operations on binary relations: ffi for chaining, fl for reflexive transitive closure, + for transitive closure, and for converse.
Reference: <author> Safra, S. </author> <year> (1988). </year> <title> On the complexity of !-automata. </title> <booktitle> In Proc. of the 20th An. Symp. on the Foundations of Computer Science (FOCS-88), </booktitle> <pages> pp. 319-327. </pages>
Reference: <author> Schild, K. </author> <year> (1991). </year> <title> A correspondence theory for terminological logics: Preliminary report. </title> <booktitle> In Proc. of the 12th Int. Joint Conf. on Artificial Intelligence (IJCAI-91), </booktitle> <pages> pp. </pages> <address> 466-471 Sydney, Australia. </address>
Reference: <author> Schild, K. </author> <year> (1994). </year> <title> Terminological cycles and the propositional -calculus. </title> <editor> In Doyle, J., Sandewall, E., & Torasso, P. (Eds.), </editor> <booktitle> Proc. of the 4th Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR-94), </booktitle> <pages> pp. </pages> <address> 509-520 Bonn. </address> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos. </address>
Reference-contexts: By explicit fixpoints, wf (R) is expressed simply as X:(8R:X). Our proposal of allowing for fixpoint constructs explicitly in the formalism is shared by the study independently carried out by Schild in <ref> (Schild, 1994) </ref> 14 . The main goal of that work is to study both the expressive power and the computational complexity of subsumption and satisfiability for TBoxes expressed in ALC (no fixpoint constructs), that allow for mutually recursive definitions. <p> It is well known that mutual fixpoints can be re-expressed by means of nested ones (see, for example, Park, 1976; de Bakker, 1980). As a consequence of this observation it follows that the logic introduced in this paper, is more expressive than the one analyzed in <ref> (Schild, 1994) </ref> since, on the one hand, it allows nesting of fixpoints without any restriction, on the other hand it makes it possible to state sophisticated forms of cardinality constraints on role fillers by means of qualified number restrictions. The present work can be extended along several directions. <p> This class can be used in several ways in the TBox. For example, it can be instantiated by binding the formal parameter to actual parameters, thus getting, say, dag of [student], dag of [person], etc., which are concepts inheriting the properties of dag of [Z]. 14. In <ref> (Schild, 1994) </ref> number restrictions are not considered. 15.
Reference: <author> Schmidt-Schau, M., & Smolka, G. </author> <year> (1991). </year> <title> Attributive concept descriptions with complements. </title> <journal> Artificial Intelligence, </journal> <volume> 48 (1), </volume> <pages> 1-26. </pages>
Reference: <author> Stirling, C. </author> <year> (1992). </year> <title> Modal and temporal logic. </title> <editor> In Abramsky, S., Gabbay, D. M., & Maibaum, T. S. E. (Eds.), </editor> <booktitle> Handbook of Logic in Computer Science, </booktitle> <pages> pp. 477-563. </pages> <publisher> Clarendon Press, Oxford. </publisher>
Reference: <author> Streett, R. S., & Emerson, E. A. </author> <year> (1984). </year> <title> The propositional mu-calculus is elementary. </title> <booktitle> In Proc. of the 6th Int. Col. on Automata, Languages and Programming, No. 172 in Lecture Notes in Computer Science, </booktitle> <pages> pp. 465-472. </pages> <publisher> Springer-Verlag. </publisher>
Reference-contexts: to formulae of variant of modal mu-calculus, called deterministic modal mu-calculus, which has the same syntax as the modal mu-calculus, but is interpreted over deterministic Kripke structures, that is Kripke structures M = (S; fR i j i 2 Lg; V) in which the relations R i are partial functions <ref> (Streett & Emerson, 1984) </ref>. Let us ignore for a moment the qualified number restriction constructs. Formulae of ALCQ without qualified number restrictions are, in fact, formulae of the modal mu-calculus, as shown in the previous section. <p> Formulae of ALCQ without qualified number restrictions are, in fact, formulae of the modal mu-calculus, as shown in the previous section. By using a well-known technique developed for propositional dynamic logic (Parikh, 1981), (nondeterministic) modal mu-calculus formulae can be reduced to deterministic modal mu-calculus formulae <ref> (Streett & Emerson, 1984) </ref>, as shown below. We use the following notations for usual operations on binary relations: ffi for chaining, fl for reflexive transitive closure, + for transitive closure, and for converse.
Reference: <author> Streett, R. S., & Emerson, E. A. </author> <year> (1989). </year> <title> An automata theoretic decision procedure for the propositional mu-calculus. </title> <journal> Information and Control, </journal> <volume> 81, </volume> <pages> 249-264. </pages>
Reference-contexts: The only if direction is as follows. We recall that both nondeterministic and deterministic modal mu-calculus have the tree model property <ref> (Streett & Emerson, 1989, 1984) </ref>: if a formula has a model it has a tree model, i.e., a model having the form of a tree 11 . So without loss of generality we can restrict our attention to tree models only.
Reference: <author> Tarski, A. </author> <year> (1955). </year> <title> A lattice-theoretical fixpoint theorem and its applications. </title> <journal> Pacific Journal of Mathematics, </journal> <volume> 5, </volume> <pages> 285-309. </pages>
Reference-contexts: Among the various solutions, the smallest and the greatest solutions (with respect to set-inclusion) have a prominent position, if they exist. A fundamental result due to Tarski <ref> (Tarski, 1955) </ref> guarantees the existence and the uniqueness of both such solutions in case f is monotonic wrt set-inclusion (), where f is monotonic wrt whenever E 1 E 2 implies f (E 1 ) f (E 2 ). <p> Inductive case. We assume that the thesis holds for concepts C with k nested fixpoint constructs, and we prove it for concepts X:C with k + 1. We recall that, by the Tarski-Knaster Theorem on fixpoints <ref> (Tarski, 1955) </ref>, t 2 (X:C) I iff there exists an ordinal ff such that t 2 ( ff X:C) I , where ( ff X:C) I is defined by transfinite induction as: * ( 0 X:C) I * ( ff+1 X:C) I [X=( ff X:C) I ] = ff&lt; ( ff
Reference: <author> Van der Hoek, W. </author> <year> (1992). </year> <title> On the semantics of graded modalities. </title> <journal> Journal of Applied Non-Classical Logics, </journal> <volume> 2 (1), </volume> <pages> 81-123. </pages>
Reference: <author> Van der Hoek, W., & de Rijke, M. </author> <year> (1995). </year> <title> Counting objects. </title> <journal> Journal of Logic and Computation, </journal> <volume> 5 (3), </volume> <pages> 325-345. </pages>
Reference-contexts: It suffice to resort to the following equivalences: 9R 1 ffi R 2 :C = 9R 1 :9R 2 :C 9R fl :C = X:(C t 9R:X) Note that 8R fl :C = -X:(C u 8R:X). In <ref> (Calvanese, De Giacomo, & Lenzerini, 1995) </ref> a further implicit form of fixpoint has been advocated, the so called well-founded role construct wf (R). By explicit fixpoints, wf (R) is expressed simply as X:(8R:X).
Reference: <author> Vardi, M. Y., & Wolper, P. </author> <year> (1984). </year> <title> Automata theoretic techniques for modal logics of programs. </title> <booktitle> In Proc. of the 16th An. Symp. on the Foundations of Computer Science (FOCS-84), </booktitle> <pages> pp. 446-456. </pages>
Reference-contexts: To this end, a description logic is defined that corresponds to a variant of the modal mu-calculus in which mutual fixpoints are allowed but some restrictions on nested fixpoints are enforced <ref> (Vardi & Wolper, 1984) </ref>. It is well known that mutual fixpoints can be re-expressed by means of nested ones (see, for example, Park, 1976; de Bakker, 1980).
Reference: <author> Winsket, G. </author> <year> (1989). </year> <title> A note on model checking the modal --calculus. </title> <booktitle> In Proc. of the 11th Int. Col. on Automata, Languages and Programming, No. 372 in Lecture Notes in Computer Science, </booktitle> <pages> pp. 761-772. </pages> <publisher> Springer-Verlag. </publisher> <pages> 110 </pages>
References-found: 34

