URL: http://www.cs.ucsb.edu/conferences/java98/papers/dots.ps
Refering-URL: http://www.cs.ucsb.edu/conferences/java98/program.html
Root-URL: http://www.cs.ucsb.edu
Email: hirano@etl.go.jp  Yoshiji.YASU@kek.jp  hiro@noa.sipeb.aoyama.ac.jp  
Phone: yyHORB  
Title: Performance Evaluation of Popular Distributed Object Technologies for Java  
Author: Satoshi Hiranoy Yoshiji Yasuyy Hirotaka Igarashiyyy 
Address: Organization(KEK)  
Web: http://ring.etl.go.jp/openlab/horb/  
Affiliation: yHORB Open and Electrotechnical Laboratory  Open and High Energy Accelerator Research  yyyHORB Open and Aoyama Gakuin University  
Abstract: System development using Java and distributed object technology (DOT) is becoming common, and can become the standard way of doing network computing in the near future. The performance of DOTs is crucial in high-performance network computing systems. In this paper, the performance of popular DOTs for Java is evaluated in a common environment employing the fastest available PCs and 100Mbps Ethernet. We evaluate HORB, Java RMI, Voyager, two commercial CORBA IIOP implementations, and Distributed COM. For comparison a Java socket version and a C socket version are also evaluated. In order to represent the characteristics of the DOT, the performance of primitive object operations including remote object creation, remote method call, transferring arrays of objects and transferring large numerical data is measured and evaluated. No DOT won all benchmarks, but HORB showed very good performance for most benchmarks.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Gosling, j., Joy, B. Steele, G., </author> <title> The Java language specification, </title> <publisher> Addison-Wesley, </publisher> <year> 1996 </year>
Reference-contexts: 1 Introduction Since the release of the network portable object-oriented language Java <ref> [1] </ref> by Sun in 1995, development of distributed object technologies (DOTs) for Java has been very active in academia and industry, and has resulted in the release of several DOT packages that are already being widely used today.
Reference: [2] <author> HIRANO, S.: HORB: </author> <title> a distributed object oriented language for worldwide programming, WOOC'96, 1996 (In Japanese) </title>
Reference-contexts: These DOTs include HORB <ref> [2, 3, 4, 5] </ref> (the first publicly-available Java DOT) by one of this paper's authors, HIRANO Satoshi of Electrotechnical Laboratory (ETL) in 1995, some implementations of IIOP (Internet Inter-ORB Protocol)[6] of OMG CORBA, an implementation of Distributed COM [7] on Windows by Microsoft, Java RMI (Remote Method Invocation) API [8] by <p> of objects and transferring large numerical data. 2 Overview of distributed object technologies This section presents an overview of the popular DOTs which are evaluated in this paper. 2.1 HORB HORB is a lightweight pure-Java ORB (Object Request Broker) that aims to seamlessly extend Java as a distributed object-oriented language <ref> [2, 3, 4, 5] </ref>. class Server - Video play (String title) -...- - List 1: Remote object of HORB Server_Proxy s = new Server_Proxy ("horb://www.horb.org/"); video = s.play ("Apollo 13"); List 2: Remote object creation and remote method call The process of 1) creating a remote object of the Server class
Reference: [3] <author> HIRANO, S.: </author> <title> Constructing a portable ORB for distributed execution of Java, </title> <note> SwoPP'96 IPSJ Technical Report 96-OS-73, pp55-60, 1996 (In Japanese) </note>
Reference-contexts: These DOTs include HORB <ref> [2, 3, 4, 5] </ref> (the first publicly-available Java DOT) by one of this paper's authors, HIRANO Satoshi of Electrotechnical Laboratory (ETL) in 1995, some implementations of IIOP (Internet Inter-ORB Protocol)[6] of OMG CORBA, an implementation of Distributed COM [7] on Windows by Microsoft, Java RMI (Remote Method Invocation) API [8] by <p> of objects and transferring large numerical data. 2 Overview of distributed object technologies This section presents an overview of the popular DOTs which are evaluated in this paper. 2.1 HORB HORB is a lightweight pure-Java ORB (Object Request Broker) that aims to seamlessly extend Java as a distributed object-oriented language <ref> [2, 3, 4, 5] </ref>. class Server - Video play (String title) -...- - List 1: Remote object of HORB Server_Proxy s = new Server_Proxy ("horb://www.horb.org/"); video = s.play ("Apollo 13"); List 2: Remote object creation and remote method call The process of 1) creating a remote object of the Server class
Reference: [4] <author> HIRANO, S., HORB: </author> <title> Distributed Execution of Java Programs, Worldwide Computing and Its Applications, </title> <booktitle> Springer Lecture Notes in Computer Science 1274 pp.29-42, </booktitle> <year> 1997 </year>
Reference-contexts: These DOTs include HORB <ref> [2, 3, 4, 5] </ref> (the first publicly-available Java DOT) by one of this paper's authors, HIRANO Satoshi of Electrotechnical Laboratory (ETL) in 1995, some implementations of IIOP (Internet Inter-ORB Protocol)[6] of OMG CORBA, an implementation of Distributed COM [7] on Windows by Microsoft, Java RMI (Remote Method Invocation) API [8] by <p> We evaluated the DOTs in an environment that includes the fastest available PCs and 100Mbps Ethernet. We believe that such environments may become common for high-performance network computing in the next few years. The papers <ref> [4, 5] </ref> also evaluated some DOTs, but did not include Microsoft's DCOM and ObjectSpace's Voyager. Here, we include DCOM because it is the industry's other leading ORB and the foundation for Microsoft's Internet and component strategy. We also include Voyager, because it is currently one of the most popular ORBs. <p> of objects and transferring large numerical data. 2 Overview of distributed object technologies This section presents an overview of the popular DOTs which are evaluated in this paper. 2.1 HORB HORB is a lightweight pure-Java ORB (Object Request Broker) that aims to seamlessly extend Java as a distributed object-oriented language <ref> [2, 3, 4, 5] </ref>. class Server - Video play (String title) -...- - List 1: Remote object of HORB Server_Proxy s = new Server_Proxy ("horb://www.horb.org/"); video = s.play ("Apollo 13"); List 2: Remote object creation and remote method call The process of 1) creating a remote object of the Server class
Reference: [5] <author> HIRANO, S., </author> <title> Preliminary Performance Evaluation of a Distributed Java, HORB, Object Based Parallel and Distributed Computing, </title> <year> 1997. </year>
Reference-contexts: These DOTs include HORB <ref> [2, 3, 4, 5] </ref> (the first publicly-available Java DOT) by one of this paper's authors, HIRANO Satoshi of Electrotechnical Laboratory (ETL) in 1995, some implementations of IIOP (Internet Inter-ORB Protocol)[6] of OMG CORBA, an implementation of Distributed COM [7] on Windows by Microsoft, Java RMI (Remote Method Invocation) API [8] by <p> We evaluated the DOTs in an environment that includes the fastest available PCs and 100Mbps Ethernet. We believe that such environments may become common for high-performance network computing in the next few years. The papers <ref> [4, 5] </ref> also evaluated some DOTs, but did not include Microsoft's DCOM and ObjectSpace's Voyager. Here, we include DCOM because it is the industry's other leading ORB and the foundation for Microsoft's Internet and component strategy. We also include Voyager, because it is currently one of the most popular ORBs. <p> of objects and transferring large numerical data. 2 Overview of distributed object technologies This section presents an overview of the popular DOTs which are evaluated in this paper. 2.1 HORB HORB is a lightweight pure-Java ORB (Object Request Broker) that aims to seamlessly extend Java as a distributed object-oriented language <ref> [2, 3, 4, 5] </ref>. class Server - Video play (String title) -...- - List 1: Remote object of HORB Server_Proxy s = new Server_Proxy ("horb://www.horb.org/"); video = s.play ("Apollo 13"); List 2: Remote object creation and remote method call The process of 1) creating a remote object of the Server class <p> This figure shows that HORB was the fastest. When HORB transfers an object, a serializer object (external serializer) that serializes the object to a stream form is created and used. Although the external serializer has a drawback, i.e., it cannot transfer private variables, it is highly optimized <ref> [5] </ref> as follows: 1. To reduce the cost of creating the serializer object, a serializer cache is introduced. When objects of the same class are continuously transferred, the same serializer object is used rather than creating a new serializer object each time. 2.
Reference: [6] <author> Object Management Group, </author> <title> The Common Object Request Broker: </title> <booktitle> Architecture and Specification 2.1, </booktitle> <year> 1997 </year>
Reference-contexts: Java program can also connect to existing CORBA servers. The architecture of Voyager uses the reflection mechanisms of JDK 1.1 to remove the need for skeletons (server side stubs). This, however, may affect performance. 2.4 CORBA CORBA <ref> [6] </ref> is a standard distributed object architecture specified by Object Management Group (OMG). Unlike the above ORBs, CORBA is not dependent of language or machine type. Remote object definitions are coded in the OMG IDL language.
Reference: [7] <author> Brown, N., Kindel, C., </author> <title> Distributed Component Object Model Protocol - DCOM/1.0, </title> <type> Internet Draft, </type> <year> 1996 </year>
Reference-contexts: These DOTs include HORB [2, 3, 4, 5] (the first publicly-available Java DOT) by one of this paper's authors, HIRANO Satoshi of Electrotechnical Laboratory (ETL) in 1995, some implementations of IIOP (Internet Inter-ORB Protocol)[6] of OMG CORBA, an implementation of Distributed COM <ref> [7] </ref> on Windows by Microsoft, Java RMI (Remote Method Invocation) API [8] by Sun in 1996, and the first agent ORB named Voyager [15] by ObjectSpace.
Reference: [8] <author> Sun Microsystems, </author> <title> Remote Method Invocation Specification, </title> <year> 1997 </year>
Reference-contexts: HORB [2, 3, 4, 5] (the first publicly-available Java DOT) by one of this paper's authors, HIRANO Satoshi of Electrotechnical Laboratory (ETL) in 1995, some implementations of IIOP (Internet Inter-ORB Protocol)[6] of OMG CORBA, an implementation of Distributed COM [7] on Windows by Microsoft, Java RMI (Remote Method Invocation) API <ref> [8] </ref> by Sun in 1996, and the first agent ORB named Voyager [15] by ObjectSpace. Because they make programming dramatically easier, system development using Java DOTs is becoming common, and can become the standard way of doing network computing in the near future.
Reference: [9] <author> Duan, N., </author> <title> Distributed Database Access in a Corporate Environment Using Java, </title> <booktitle> 5th Int. WWW Conference, </booktitle> <year> 1996 </year>
Reference-contexts: Because they make programming dramatically easier, system development using Java DOTs is becoming common, and can become the standard way of doing network computing in the near future. HORB, for example, has already been widely used in a variety of areas such as 3-tier business systems <ref> [9] </ref>, mobile agent systems [10], distributed virtual reality [11], and so on. Currently, the authors of this paper are interested in using DOT for data acquisition in High Energy Physics experiments [12].
Reference: [10] <author> Yamanaka, A., Nakajima, S., Tomono, M., Tonouchi, T., </author> <title> A HORB-Based Network Management System, </title> <address> ICODP'97, </address> <year> 1997 </year>
Reference-contexts: HORB, for example, has already been widely used in a variety of areas such as 3-tier business systems [9], mobile agent systems <ref> [10] </ref>, distributed virtual reality [11], and so on. Currently, the authors of this paper are interested in using DOT for data acquisition in High Energy Physics experiments [12].
Reference: [11] <author> Hagiwara, Y., Watanabe, S., Maki, Y., </author> <title> Distributed scene simulation using VRML and Java, </title> <booktitle> 22th Civil Engineering System Symposium, pp.167-170, 1997 (In Japanese) </booktitle>
Reference-contexts: HORB, for example, has already been widely used in a variety of areas such as 3-tier business systems [9], mobile agent systems [10], distributed virtual reality <ref> [11] </ref>, and so on. Currently, the authors of this paper are interested in using DOT for data acquisition in High Energy Physics experiments [12].
Reference: [12] <author> Y.Yasu, H.Fujii, E.Inoue, H.Kodama, </author> <title> Y.Sakamoto : Prototype Performance of Distributed DAQ using HORB based on Java., Real Time 97, </title> <booktitle> the 10th IEEE Real Time Conference 97, </booktitle> <address> BEAUNE, FRANCE, </address> <month> 22-26 September </month> <year> 1997 </year>
Reference-contexts: HORB, for example, has already been widely used in a variety of areas such as 3-tier business systems [9], mobile agent systems [10], distributed virtual reality [11], and so on. Currently, the authors of this paper are interested in using DOT for data acquisition in High Energy Physics experiments <ref> [12] </ref>.
Reference: [13] <author> Gamma, E., Helm, R., Johnson, R., Vlissides, J., </author> <title> Design Patterns, </title> <publisher> Addison-Wesley, </publisher> <year> 1995 </year>
Reference: [14] <author> Shapiro, M., </author> <title> Structure and Encapsulation in distributed Systems: The Proxy Principle, </title> <address> ICDCS, pp.198-205, </address> <year> 1986. </year>
Reference-contexts: For the realization of distributed objects, HORB uses the Proxy object method <ref> [14] </ref> (Fig. 1). Client objects access local Proxy objects in place of remote objects. A Proxy object provides equivalent method of a remote object to a client by using the remote object through ORB, which processes communication. Proxies and Skeletons are generated by the HORBC compiler.
Reference: [15] <author> ObjectSpace, </author> <title> VOYAGER Core Technology User Guide, </title> <year> 1997 </year>
Reference-contexts: of this paper's authors, HIRANO Satoshi of Electrotechnical Laboratory (ETL) in 1995, some implementations of IIOP (Internet Inter-ORB Protocol)[6] of OMG CORBA, an implementation of Distributed COM [7] on Windows by Microsoft, Java RMI (Remote Method Invocation) API [8] by Sun in 1996, and the first agent ORB named Voyager <ref> [15] </ref> by ObjectSpace. Because they make programming dramatically easier, system development using Java DOTs is becoming common, and can become the standard way of doing network computing in the near future. <p> In RMI, remote object definitions have to be coded as Java interfaces instead of IDL code. Implementing remote objects requires extending or implementing the Remote interface, the UnicastRemoteObject class, and the Serializable interface. Sun has announced that RMI would support CORBA in the future. 2.3 Voyager Voyager <ref> [15] </ref>, by ObjectSpace, is a very popular agent ORB for Java. It provides mobile agents, persistence, group communications, network class loading, directory service, etc, as well as a Java ORB. Group communication is supported by the Space architecture, which allows programmers to build distributed "rooms" in which objects reside.
Reference: [16] <author> Mary Kirtland, </author> <title> Object-Oriented Software Development Made Simple with COM+ Runtime Services, </title> <journal> Microsoft Systems Journal, Vol.12, </journal> <volume> No.11, </volume> <year> 1997 </year>
Reference-contexts: Remote objects are defined in Microsoft ODL (Object Definition Language). The MIDL compiler and the JactiveX command generates Java stub files from the ODL definition. Like CORBA, there is an impedance mismatch between object models. Microsoft announced COM+ so that users could use remote objects without writing ODL <ref> [16] </ref>. 3 Performance evaluation The performance of each distributed object technology described in the previous section is shown in this section. We are developing a suite of microbenchmarks for distributed objects 1 .
References-found: 16

