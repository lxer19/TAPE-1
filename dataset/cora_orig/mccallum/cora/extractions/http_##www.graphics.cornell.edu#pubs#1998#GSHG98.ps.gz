URL: http://www.graphics.cornell.edu/pubs/1998/GSHG98.ps.gz
Refering-URL: http://www.graphics.cornell.edu/pubs/1998/GSHG98.html
Root-URL: 
Title: The Irradiance Volume  
Author: Gene Greger Peter Shirley Philip M. Hubbard Donald P. Greenberg 
Address: 580 Rhodes Hall  Ithaca, NY 14853  
Affiliation: Program of Computer Graphics  Cornell University  
Abstract: This paper presents a volumetric representation for the global illumination within a space based on the radiometric quantity irradiance. We call this representation the irradiance volume. Although irradiance is traditionally computed only for surfaces, we extend its definition to all points and directions in space. The irradiance volume supports the reconstruction of believable approximations to the illumination in situations that overwhelm traditional global illumination algorithms. A theoretical basis for the irradiance volume is discussed and the methods and issues involved with building the volume are described. The irradiance volume method shows good performance in several practical situations. keywords: computer graphics, global illumination, realistic image synthesis, light field
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Cuttle. </author> <title> Lighting patterns and the flow of light. </title> <journal> Lighting Research and Technology, </journal> <volume> 18(6), </volume> <year> 1971. </year>
Reference-contexts: Louis, MO 63130-4899; http://www.cs.wustl.edu/~pmh/. 1 approximate the irradiance at locations within the environment. The irradiance volume is similar in spirit to the illumination solid of Cuttle <ref> [1] </ref>, although he uses photometric rather than radiometric quantities. By considering light transport through space instead of between surfaces, our method yields high performance in several important situations for which traditional global-illumination algorithms are too slow.
Reference: [2] <author> Gregory J. Ward, Francis M. Rubinstein, and Robert D. </author> <title> Clear. A ray tracing solution for diffuse interreflection. </title> <editor> In John Dill, editor, </editor> <booktitle> Computer Graphics (SIGGRAPH '88 Proceedings), </booktitle> <volume> volume 22, </volume> <pages> pages 85-92, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: The ambient term is really a global constant approximation to irradiance due to indirect lighting. The irradiance volume can provide a local approximation to indirect irradiance that is potentially much more visually compelling than the traditional ambient term. Our approach has many similarities to the irradiance caching of Ward <ref> [2] </ref>. However, irradiance caching at surfaces only works for smooth static surfaces, while our method caches irradiances within a volume and is intended for environments where surface locations can be dynamic, or for environments with very rapid surface irregularities such as displacement mapped surfaces.
Reference: [3] <author> James Arvo. </author> <title> Analytic Methods for Simulated Light Transport. </title> <type> PhD thesis, </type> <institution> Yale University, </institution> <month> December </month> <year> 1995. </year> <note> This text is available from http://csvax.cs.caltech.edu/ arvo/papers.html. </note>
Reference-contexts: Note that the radiances are shown with arrows pointing in the direction from which the light comes; although this convention seems somewhat backwards, it will prove convenient when dealing with irradiance. The radiance in all directions at x makes a directional function called the radiance distribution function <ref> [3] </ref>, which is shown as a radial plot in Figure 1 (c). This figure emphasizes the well-known fact that the radiance distribution function is not necessarily continuous, even in very simple environments. <p> The radiance of a surface is determined entirely by its reflective properties and the radiance incident upon it. The incident radiance defined on the hemisphere of incoming directions is called the field-radiance function <ref> [3] </ref>. The field radiance for a point on a very small surface is shown as a radial function in Figure 2 (a). Because the surface is very small, the radiance in the room is not significantly different from the empty room of Figure 1. <p> However, we gain confidence by the fact that researchers have had great success interpolating irradiance on surfaces even though discontinuities exist at some surface locations. In practice, irradiance on surfaces is almost continuous except at transition zones between umbra and penumbra, and transition zones between penumbra and unshadowed regions <ref> [3] </ref>. Since the relatively smooth regions between these visibility events are large in practice, approximating the spatial variation of irradiance using interpolation is practical for most surface locations, as has been shown in many working radiosity systems. <p> Once the radiance is sampled, the irradiance is computed using the method described in Section 3.2.3. Querying the irradiance from the volume remains the same. 5.2 Illuminating Non-Diffuse Objects The irradiance volume can be extended to simulate non-diffuse effects by storing higher order moments than irradiance <ref> [3] </ref>.
Reference: [4] <author> Daniel Lischinski, Filippo Tampieri, and Donald P. Greenberg. </author> <title> Combining hierarchical radiosity and discontinuity meshing. </title> <booktitle> In Computer Graphics Proceedings, Annual Conference Series, </booktitle> <year> 1993, </year> <pages> pages 199-208, </pages> <year> 1993. </year>
Reference-contexts: Since the relatively smooth regions between these visibility events are large in practice, approximating the spatial variation of irradiance using interpolation is practical for most surface locations, as has been shown in many working radiosity systems. The same facts are true in the volume, as shown by Lischinski <ref> [4] </ref> who computed discontinuity regions in space and projected them onto surfaces. Thus, we can store the approximation to H (x; !) as point samples, and use interpolation methods to approximate the irradiance at locations between those samples.
Reference: [5] <author> Shenchang Eric Chen. </author> <title> Quicktime VR an image-based approach to virtual environment navigation. </title> <booktitle> In Computer Graphics (SIGGRAPH '95 Proceedings), Computer Graphics Proceedings, Annual Conference Series, </booktitle> <pages> pages 29-38, </pages> <month> July </month> <year> 1995. </year> <booktitle> ACM Siggraph '95 Conference Proceedings. </booktitle>
Reference-contexts: An irradiance volume can also be built in environments which do not contain explicit geometry, such as ones used by picture-based methods <ref> [5] </ref>. The type of source environment does not matter, provided that radiance can be freely point-sampled. In deciding which points and directions are sampled, and how to build these samples into a data structure, we gain some inspiration from previous work on building radiometric data structures. <p> Currently, picture-based methods are only used to render static environments. However, Chen <ref> [5] </ref> notes that interactive rendered objects can be composited onto a reconstructed view using layering, alpha-blending, or z-buffer 12 techniques. As these methods become more popular, picture-based applications containing non-static objects will likely increase in number.
Reference: [6] <author> Christopher Patmore. </author> <title> Illumination of dense foliage models. </title> <editor> In Michael F. Cohen, Claude Puech, and Francois Sillion, editors, </editor> <booktitle> Fourth Eurographics Workshop on Rendering, </booktitle> <pages> pages 63-72. Eurographics, </pages> <month> June </month> <year> 1993. </year> <title> held in Paris, </title> <address> France, </address> <month> 14-16 June </month> <year> 1993. </year>
Reference-contexts: The type of source environment does not matter, provided that radiance can be freely point-sampled. In deciding which points and directions are sampled, and how to build these samples into a data structure, we gain some inspiration from previous work on building radiometric data structures. Patmore <ref> [6] </ref> and Greene [7] utilized regular grids to represent their radiometric volumes.
Reference: [7] <author> Ned Greene. </author> <title> Efficient approximation of skylight using depth projections. </title> <booktitle> Photorealistic Volume Modeling and Rendering Techniques, </booktitle> <year> 1993. </year> <note> ACM Siggraph '91 Course Notes 27. </note>
Reference-contexts: The type of source environment does not matter, provided that radiance can be freely point-sampled. In deciding which points and directions are sampled, and how to build these samples into a data structure, we gain some inspiration from previous work on building radiometric data structures. Patmore [6] and Greene <ref> [7] </ref> utilized regular grids to represent their radiometric volumes.
Reference: [8] <author> Peter Shirley and Kenneth Chiu. </author> <title> Notes on adaptive quadrature on the hemisphere. </title> <type> Technical Re port 411, </type> <institution> Department of Computer Science, Indiana University, </institution> <month> July </month> <year> 1994. </year> <note> This text is available from http://www.cs.utah.edu/ shirley/papers.html. </note>
Reference-contexts: In addition to covering S 2 as uniformly as possible, we would like the regions surrounding the sample points to have equal area in order to simplify the computation of the irradiance distribution function later on. Shirley et al. <ref> [8] </ref> provide a method of mapping a unit square to a hemisphere while preserving the relative area of regions on the square. By using this procedure, we are afforded the mathematical convenience of being able to uniformly subdivide to a given resolution on a square.
Reference: [9] <author> Thomas A. Funkhouser and Carlo H. Sequin. </author> <title> Adaptive display algorithm for interactive frame rates during visualization of complex virtual environments. </title> <journal> Computer Graphics, </journal> <pages> pages 247-254, </pages> <month> August </month> <year> 1993. </year> <booktitle> ACM Siggraph '93 Conference Proceedings. </booktitle>
Reference-contexts: In addition, the volume supports 6 levels of detail (LOD's) for dynamic objects. While the user is moving an object, the system can draw the lower resolution LOD, and then draw the higher resolution LOD when stationary. The addition of a scheduling algorithm <ref> [9] </ref>, could enable truly time-critical rendering. Interacting with the Application In a semi-dynamic application implementation of the kind presented here, three main computational procedures account for the large majority of time needed to compute a display frame.
Reference: [10] <author> Holly Rushmeier, Charles Patterson, and Aravindan Veerasamy. </author> <title> Geometric simplification for indirect illumination calculations. </title> <booktitle> In Proceedings of Graphics Interface '93, </booktitle> <pages> pages 227-236, </pages> <address> Toronto, Ontario, Canada, </address> <month> May </month> <year> 1993. </year> <booktitle> Canadian Information Processing Society. </booktitle>
Reference-contexts: Several high-end graphic systems, such as a Silicon Graphics RealityEngine system, support direct illumination in hardware and can compute shadows at real-time rates. 4.2 Rendering Objects with High Complexity Rushmeier et al. <ref> [10] </ref> discuss the use of geometric simplification to accelerate global-illumination renderings of complex environments. In their method, clusters of surfaces are replaced with optically similar boxes before performing the global-illumination calculation. After the global-illumination solution is obtained, it is used in rendering the original geometry.
Reference: [11] <author> Robert L. Cook, Loren Carpenter, and Edwin Catmull. </author> <title> The reyes image rendering archtecture. </title> <journal> Com puter Graphics, </journal> <volume> 21(4) </volume> <pages> 95-102, </pages> <month> July </month> <year> 1987. </year> <booktitle> ACM Siggraph '87 Conference Proceedings. </booktitle> <pages> 20 </pages>
Reference-contexts: Figure 14 shows a view of of the wall. Rendering Procedural Models Many rendering algorithms produce complex procedural models while executing. The best known example is the software developed by Pixar <ref> [11] </ref>. In Pixar's software, geometric primitives are processed independently without reference to others, allowing the rendering of large scenes containing numerous highly-detailed complex objects. During rendering, each surface is composed with optional surface maps 11 , and diced into "micropolygons" which are then shaded and scan-converted.
References-found: 11

