URL: http://www.cs.utah.edu/projects/alpha1/papers/thompson97a.ps.Z
Refering-URL: http://www.cs.utah.edu/~dejohnso/a1/projects/minimum_distance/minimum_distance.html
Root-URL: 
Title: Direct Haptic Rendering Of Sculptured Models  
Author: Thomas V Thompson II David E Johnson Elaine Cohen 
Keyword: CR Descriptors: H.1.2 [Models and Principles] User/Machine Systems; C.3 [Special-Purpose and Application-Based Systems] Real-Time Systems; I.3.7 [Computer Graphics] Three-Dimensional Graphics and Realism; I.6.4 [Simulation and Modeling] Types of Simulation Distributed; F.2.2 [Analysis of Algorithms and Problem Complexity] Nonnumerical Algorithms and Problems; J.6 [Computer-Aided Engineering]. Additional Keywords: haptic, force feedback, NURBS evaluation, virtual environment, closest point calculation, distributed simulation.  
Date: April 27-30, 1997.  
Address: Providence, RI,  
Affiliation: Graphics,  Department of Computer Science University of Utah  
Note: Proceedings Symposium on Interactive 3D  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Adachi, Y., Kumano, T., and Ogino, K., </author> <title> "Intermediate Representation For Stiff Virtual Objects," </title> <booktitle> in Proc. Virtual Reality Annual Intl. Symp., </booktitle> <address> Research Triangle Park, NC, </address> <pages> pp. 203-210, </pages> <month> March 11-15, </month> <year> 1995. </year>
Reference-contexts: This fast update rate limits the complexity of algorithms that can be used to find the closest point on the surface. In order to maintain fast force servo rates, current haptic rendering systems tend to use simple intermediate surface representations instead of sculptured surfaces in their force calculations. Adachi <ref> [1] </ref> and Mark [14] advocate the use of a sequence of relatively slowly changing planar approximations as an intermediate representation, since the closest point can be quickly computed with planes. However, planar representations are fundamentally limited when trying to approximate surfaces with high curvature [14]. <p> In haptic systems, this model has been applied to decouple the simulation and haptic processes <ref> [1, 14] </ref>. This decoupling allows the haptic loop to run on a real-time system, while the more computationally intensive simulation loop can run on a standard workstation. In our system (Figure 2), the simulation process runs on an SGI workstation and is used for visual display and global computations.
Reference: [2] <author> Baraff, David, </author> <title> "Curved Surfaces And Coherence For Non-penetrating Rigid Body Simulation," </title> <booktitle> in Proc. SIG-GRAPH 90, Dalls, </booktitle> <pages> pp. 19-28, </pages> <address> Auguest 6-10, </address> <year> 1990. </year>
Reference-contexts: Barnhill developed a parametric marching algorithm [3] for closest point tracking that minimizes error to a first order surface approx imation. Snyder [22] uses Newton iteration to improve an approximation to the closest point on a surface during collision detection, as does Baraff <ref> [2] </ref>. 3 System Overview A useful computation model to come out of virtual environment research is decoupling the simulation and interactive processes. In haptic systems, this model has been applied to decouple the simulation and haptic processes [1, 14].
Reference: [3] <author> Barnhill, R.E., and Kersey, </author> <title> S.N., "A Marching Method For Parametric Surface/Surface Intersection," </title> <booktitle> in Computer Aided Geometric Design 7 (1990), </booktitle> <pages> pp. 257-280. </pages>
Reference-contexts: The CAD community has developed methods of tracking points on surfaces during intersection operations [11]. Many of these methods find the Euclidean closest point directly, requiring surface-plane intersections to be computed. These methods are too slow for haptic environments. Barnhill developed a parametric marching algorithm <ref> [3] </ref> for closest point tracking that minimizes error to a first order surface approx imation.
Reference: [4] <author> Cohen, E., Lyche, T., and Riesenfeld, R., </author> <title> "Discrete B-Splines And Subdivision Techniques In Computer Aided Geometric Design And Computer Graphics," </title> <journal> Computer Graphics and Image Processing, </journal> <volume> Vol 14, Number 2, </volume> <month> October </month> <year> 1980. </year>
Reference-contexts: The intermediate representation chosen is a mesh of points and associated normals calculated by refinement techniques <ref> [4, 20] </ref>. The haptic loop determines arm penetration depth by projecting the arm location onto the closest mesh point's normal. The point normal is used to determine the direction of the restoring force.
Reference: [5] <author> Cohen, E., and Schumaker, L., </author> <title> "Rates Of Convergence Of Control Polygons," </title> <booktitle> in Computer Aided Geometric Design 2 (1985), </booktitle> <pages> pp. 229-235. </pages>
Reference-contexts: The end-effector point is projected onto the control mesh of the NURBS surface resulting in a point Q. Each vertex of the control mesh has an associated (u,v) parametric value that is called the "node" <ref> [5] </ref>. An approximate (u,v) for Q is determined by interpolating between node values using the barycentric coordinates of Q.
Reference: [6] <author> Colgate, J.E., and Brown, J.M., </author> <title> "Factors Affecting The Z-Width Of A Haptic Display," </title> <booktitle> in Proc. IEEE 1994 International Conference on Robotics & Automation, </booktitle> <pages> pp. 3205-10, </pages> <address> San Diego, CA, </address> <year> 1995. </year>
Reference-contexts: The counterforce needed to prevent penetration into a virtual surface is called the restoring force, and is calculated using a wall model. Wall models often have a restoring force proportional <ref> [6] </ref> to the penetration depth and in the direction of the surface normal (Figure 1). The Proceedings Symposium on Interactive 3D Graphics, Providence, RI, April 27-30, 1997. wall model used in our experiments is a nonlinear damping model developed by Marhefka and Orin [13].
Reference: [7] <author> Durlach, N.I., and Mavor, </author> <title> A.S. Editors, Virtual Reality Scientific And Technological Challenges, </title> <address> Washington, D.C., </address> <publisher> National Academy Press, </publisher> <year> 1995. </year>
Reference-contexts: Even under these extreme (and unlikely to be encountered) conditions, the algorithm performed reasonably well. This graceful degradation shows the algorithm has time-critical qualities <ref> [7] </ref>, a useful property in real-time systems. In more typical cases, with small penetration and small step sizes, the penetration error was below our numerical precision and the difference in surface normals was in the hundredths of a degree (Table 2).
Reference: [8] <author> Elber, G., </author> <title> Free Form Surface Analysis Using A Hybrid Of Symbolic And Numeric Computation, </title> <type> Ph.D. Thesis, </type> <institution> University of Utah, Computer Science Department, De-cember, </institution> <year> 1992. </year>
Reference-contexts: The direct parametric tracing method was compared to a hybrid symbolic/numeric solver <ref> [8] </ref> for global closest point on surface. The tracing path was generated by creating a non-isoparametric offset curve from the surface and evaluating the curve at fixed parametric steps.
Reference: [9] <author> Hollerbach, J.M., Cohen, E.C., Thompson, W.B., Freier, R., Johnson, D., Nahvi, A., Nelson, D., Thomp-son II, </author> <title> T.V., and Jacobsen, S.C., "Haptic Interfacing For Virtual Manipulation Of Mechanical CAD Designs," </title> <note> Submitted for publication. </note>
Reference-contexts: The haptic process runs on Motorola 68040 microprocessors un der the VxWorks real-time kernel and is used for haptic display and local computations. The two sides communicate over Ethernet using TCP/IP and UDP packets <ref> [9] </ref>. In haptic research, this system setup may vary in the type of workstation on the simulation side and with PC's often substituted on the haptic side. These systems share several characteristics.
Reference: [10] <author> Hollerbach, J.M., Cohen, E.C., Thompson, W.B., and Jacobsen, </author> <title> S.C., "Rapid Virtual Prototyping Of Mechanical Assemblies," </title> <booktitle> NSF Design and Manufacturing Grantees Conference, </booktitle> <address> Albuquerque, </address> <month> Jan. </month> <pages> 3-5, </pages> <year> 1996. </year>
Reference-contexts: In conjunction with visual feedback, haptic rendering can facilitate understanding of complex models and add a sense of realism to interactive systems <ref> [10] </ref>. In CAD/CAM design, parametric surfaces have become the surface representation of choice.
Reference: [11] <author> Hoschek, Josef and Lasser, Dieter, </author> <title> Fundamentals of Computer Aided Geometric Design, Wellesley, Mas-sachusetts, A K Peters, </title> <booktitle> 1993. 8 Proceedings Symposium on Interactive 3D Graphics, </booktitle> <address> Providence, RI, </address> <month> April 27-30, </month> <year> 1997. </year>
Reference-contexts: However, the system may involve high degree polynomials, making the solution difficult. The CAD community has developed methods of tracking points on surfaces during intersection operations <ref> [11] </ref>. Many of these methods find the Euclidean closest point directly, requiring surface-plane intersections to be computed. These methods are too slow for haptic environments. Barnhill developed a parametric marching algorithm [3] for closest point tracking that minimizes error to a first order surface approx imation.
Reference: [12] <author> Jacobsen, S.C., Smith, F.M., Iversen, E.K., and Back-man, D.K., </author> <title> "High Performance, High Dexterity, Force Reflective Teleoperator," </title> <booktitle> in Proc. 38th Conf. Remote Systems Technology, </booktitle> <address> Washington, D.C., </address> <pages> pp. 180-185, </pages> <month> November, </month> <year> 1990. </year>
Reference-contexts: These algorithms are tested on a complete system that integrates Alpha 1, a research modeling package [18, 19], with a Sarcos Dextrous Arm Master <ref> [12] </ref>. We compare the results of these algorithms with an intermediate representation and demonstrate results of testing the algorithms against theoretically optimal methods. 2 Background Haptic rendering systems generate forces that are applied to a person's hand or arm to create a sense of contact with a virtual model.
Reference: [13] <author> Marhefka, D.W., and Orin, D.E., </author> <title> "Simulation Of Contact Using A Nonlinear Damping Model," </title> <booktitle> in Proc. International Conference on Robotics and Animation, </booktitle> <address> Minneapolis, </address> <publisher> Minnesota, </publisher> <pages> pp. 1662-1668, </pages> <month> April </month> <year> 1996. </year>
Reference-contexts: The Proceedings Symposium on Interactive 3D Graphics, Providence, RI, April 27-30, 1997. wall model used in our experiments is a nonlinear damping model developed by Marhefka and Orin <ref> [13] </ref>. The wall model is defined as F v = k p x n + k v x n x 0 where x is the penetration depth, x 0 is the velocity of the end-effector, k p is the spring coefficient, and k v is the damping coefficient.
Reference: [14] <author> Mark, W.R., Randolph, S.C., Finch, M., Van Verth, J.M., and Taylor III, </author> <title> R.M., "Adding Force Feedback To Graphics Systems: Issues And Solutions," </title> <booktitle> in Proc. SIGGRAPH 96, </booktitle> <address> New Orleans, </address> <pages> pp. 447-452, </pages> <month> August. </month> <pages> 4-9, </pages> <year> 1996. </year>
Reference-contexts: In order to maintain fast force servo rates, current haptic rendering systems tend to use simple intermediate surface representations instead of sculptured surfaces in their force calculations. Adachi [1] and Mark <ref> [14] </ref> advocate the use of a sequence of relatively slowly changing planar approximations as an intermediate representation, since the closest point can be quickly computed with planes. However, planar representations are fundamentally limited when trying to approximate surfaces with high curvature [14]. <p> Adachi [1] and Mark <ref> [14] </ref> advocate the use of a sequence of relatively slowly changing planar approximations as an intermediate representation, since the closest point can be quickly computed with planes. However, planar representations are fundamentally limited when trying to approximate surfaces with high curvature [14]. In addition, the intermediate planar approximations are sampled in a time-dependent fashion, not by position, so that the surface "felt" by a user is not necessarily repeatable during multiple tracings. We directly track the closest point on the parametric surface. <p> In haptic systems, this model has been applied to decouple the simulation and haptic processes <ref> [1, 14] </ref>. This decoupling allows the haptic loop to run on a real-time system, while the more computationally intensive simulation loop can run on a standard workstation. In our system (Figure 2), the simulation process runs on an SGI workstation and is used for visual display and global computations. <p> The parametric surfaces being rendered have compact representations, allowing for haptic rendering of complex environments. In addition, some of the complications of using an intermediate representation, such as the force discontinuity artifacts mentioned in <ref> [14] </ref>, do not appear in direct haptic rendering. 8 Future Work Our goal is to create a haptic environment where complex models can be manipulated intuitively. In support of this goal, we need to add several capabilities to this system: * Trimmed surfaces are common in realistic models.
Reference: [15] <author> Minsky, M., Ouh-Young, M., Steele, M., Brooks, F.P. Jr., Behensky, M., </author> <title> "Feeling And Seeing: Issues In Force Display," </title> <booktitle> in Proc. Symposium on Interactive 3D Graphics, Snowbird, Utah, </booktitle> <pages> pp. 235-243, </pages> <year> 1990. </year>
Reference-contexts: The penetration depth is calculated by projecting the end-effector onto the surface normal, with positive penetration defined as into the surface. In order to maintain the stiffness of the virtual surface, the force servo loop must calculate the closest point and response forces at several hundred Hz <ref> [15] </ref>. This fast update rate limits the complexity of algorithms that can be used to find the closest point on the surface. In order to maintain fast force servo rates, current haptic rendering systems tend to use simple intermediate surface representations instead of sculptured surfaces in their force calculations.
Reference: [16] <author> Mortenson, Micheal, </author> <title> Geometric Modeling, </title> <address> New York, </address> <publisher> John Wiley & Sons, </publisher> <year> 1985. </year>
Reference-contexts: We directly track the closest point on the parametric surface. Finding the closest point on a surface S to a point E is a fundamental query for a surface representation. A common approach <ref> [16] </ref> is to solve for the roots of (S E) fi (S fi S ) = 0: (1) The roots of Eq. 1 can be found through iterative Newton methods [17], with various means of guaranteeing a globally correct solution.
Reference: [17] <author> Plass, Michael and Stone, Maureen, </author> <title> "Curve-Fitting With Piecewise Parametric Cubics," </title> <booktitle> in Proc. </booktitle> <address> SIG-GRAPH 83, Detroit, </address> <pages> pp. 229-236, </pages> <month> July </month> <year> 25-29,1983. </year>
Reference-contexts: A common approach [16] is to solve for the roots of (S E) fi (S fi S ) = 0: (1) The roots of Eq. 1 can be found through iterative Newton methods <ref> [17] </ref>, with various means of guaranteeing a globally correct solution. However, the system may involve high degree polynomials, making the solution difficult. The CAD community has developed methods of tracking points on surfaces during intersection operations [11].
Reference: [18] <author> Riesenfeld, R., </author> <title> "Modeling With Nurbs Curves And Surfaces," in Fundamental Developments of Computer Aided Geometric Design, </title> <editor> L. Piegl (ed.), </editor> <publisher> Academic Press. </publisher>
Reference-contexts: In order to support direct haptic rendering, we have developed and tested algorithms for surface proximity testing, fast updates to local closest point on a surface, and smooth transitions between surface patches. These algorithms are tested on a complete system that integrates Alpha 1, a research modeling package <ref> [18, 19] </ref>, with a Sarcos Dextrous Arm Master [12].
Reference: [19] <author> Riesenfeld, R., </author> <title> "Design Tools For Shaping Spline Models," in Mathematical Methods in Computer Aided Geometric Design, (Edited by T. </title> <editor> Lyche and L. Schumaker), </editor> <publisher> Academic Press, </publisher> <year> 1989 </year>
Reference-contexts: In order to support direct haptic rendering, we have developed and tested algorithms for surface proximity testing, fast updates to local closest point on a surface, and smooth transitions between surface patches. These algorithms are tested on a complete system that integrates Alpha 1, a research modeling package <ref> [18, 19] </ref>, with a Sarcos Dextrous Arm Master [12].
Reference: [20] <author> Riesenfeld, R., Cohen, E., Fish, R., Thomas, S., Cobb, E., Barsky, B., Schweitzer, D., and Lane, J., </author> <title> "Using The Oslo Algorithm As A Basis For Cad/Cam Geometric Modelling," </title> <booktitle> in Proc. National Computer Graphics Association, </booktitle> <year> 1981. </year>
Reference-contexts: The intermediate representation chosen is a mesh of points and associated normals calculated by refinement techniques <ref> [4, 20] </ref>. The haptic loop determines arm penetration depth by projecting the arm location onto the closest mesh point's normal. The point normal is used to determine the direction of the restoring force.
Reference: [21] <author> Salisbury, J., Brock, D., Massie, T., Swarup, N., and Zilles, C., </author> <title> "Haptic Rendering: Programming Touch Interaction With Virtual Objects," </title> <booktitle> in Proc. Symposium on Interactive 3D Graphics, </booktitle> <address> Monterey, CA, </address> <pages> pp. 123-130, </pages> <year> 1995. </year>
Reference-contexts: These properties are all useful in complex, realistic virtual environments [22]. Current haptic systems tend to use polygonal representations to calculate appropriate haptic responses <ref> [21] </ref>, making correct conversion from parametric CAD models a non-trivial task. We introduce direct haptic rendering of sculptured models.
Reference: [22] <author> Snyder, John, </author> <title> "An Interactive Tool For Placing Curved Surfaces Without Interpenetration," </title> <booktitle> in Proc. </booktitle> <address> SIG-GRAPH 95, Los Angeles, </address> <pages> pp. 209-218, </pages> <month> August. </month> <pages> 6-11, </pages> <year> 1995. </year>
Reference-contexts: These properties are all useful in complex, realistic virtual environments <ref> [22] </ref>. Current haptic systems tend to use polygonal representations to calculate appropriate haptic responses [21], making correct conversion from parametric CAD models a non-trivial task. We introduce direct haptic rendering of sculptured models. <p> Many of these methods find the Euclidean closest point directly, requiring surface-plane intersections to be computed. These methods are too slow for haptic environments. Barnhill developed a parametric marching algorithm [3] for closest point tracking that minimizes error to a first order surface approx imation. Snyder <ref> [22] </ref> uses Newton iteration to improve an approximation to the closest point on a surface during collision detection, as does Baraff [2]. 3 System Overview A useful computation model to come out of virtual environment research is decoupling the simulation and interactive processes. <p> The distance from E to a bounding box is a trivial computation. The majority of the surfaces in the environment are too distant to warrant a better distance approximation. For the remaining surfaces, we use a method <ref> [22] </ref> we refer to as "nodal mapping" to find a first order approximation to the closest point on the surface (Figure 4). The end-effector point is projected onto the control mesh of the NURBS surface resulting in a point Q.
Reference: [23] <author> Zilles, C.B., and Salisbury, J.K., </author> <title> "A Constraint-Based God-Object Method For Haptic Display," </title> <booktitle> in Proc. IEE/RSJ International Conference on Intelligent Robots and Systems, Human Robot Interaction, and Cooperative Robots, </booktitle> <volume> Vol 3, </volume> <pages> pp. 146-151, </pages> <year> 1995. </year>
Reference-contexts: This is to allow for efficient surface transitioning calculations and is covered in more detail in Section 4.4. Once a surface has become current it remains current until a transition either off the model or onto an adjacent surface occurs. <ref> [23] </ref> states several problems with methods that do not exhibit this characteristic. Among these problems are pushing through a model, force discontinuities, and inability to generate sufficient restoring forces due to lack of penetration depth. All three of these problems are illustrated in Figure 6. <p> This means that a patchwork of dissimilar-sized surfaces can be used instead of surfaces that would have to share an entire edge. No intermediate iteration is necessary such as in <ref> [23] </ref> to solve special cases. However, there are pathological cases in which the algorithm will not return the best result. One such case would be a model that contains surfaces smaller that the distance the end-effector can travel in a single cycle.
References-found: 23

