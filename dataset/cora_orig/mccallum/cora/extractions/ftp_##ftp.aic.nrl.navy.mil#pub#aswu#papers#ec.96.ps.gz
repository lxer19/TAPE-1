URL: ftp://ftp.aic.nrl.navy.mil/pub/aswu/papers/ec.96.ps.gz
Refering-URL: http://www.aic.nrl.navy.mil/~aswu/papers.html
Root-URL: 
Title: A comparison of the fixed and floating building block representation in the genetic algorithm  
Author: Annie S. Wu Robert K. Lindsay 
Keyword: genetic algorithm, non-coding segment, intron, building block hypothesis, Royal Road function, symbolic regression.  
Note: To appear in Evolutionary Computation  Current  
Address: Ann Arbor, MI 48109-2110  Ann Arbor, MI 48109-0720  
Affiliation: Artificial Intelligence Laboratory University of Michigan  Mental Health Research Institute University of Michigan  
Email: aswu@eecs.umich.edu  lindsay@umich.edu  email: aswu@aic.nrl.navy.mil  
Date: December 13, 1996  4:2.  
Abstract: This article compares the traditional, fixed problem representation style of a genetic algorithm (GA) with a new floating representation in which the building blocks of a problem are not fixed at specific locations on the individuals of the population. In addition, the effects of non-coding segments on both of these representations is studied. Non-coding segments are a computational model of non-coding DNA and floating building blocks mimic the location independence of genes. The fact that these structures are prevalent in natural genetic systems suggests that they may provide some advantages to the evolutionary process. Our results show that there is a significant difference in how GAs solve a problem in the fixed and floating representations. GAs are able to maintain a more diverse population with the floating representation. The combination of non-coding segments and floating building blocks appears to encourage a GA to take advantage of its parallel search and recombination abilities. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Aho, A. V. and M. J. </author> <month> Corasick </month> <year> (1975). </year> <title> Efficient string matching: an aid to bibliographic search. </title> <booktitle> Communications of the ACM 18 (6), </booktitle> <pages> 333-340. </pages>
Reference: <author> Bell, G. I. and T. G. Marr (Eds.) </author> <year> (1988). </year> <title> Computers and DNA. </title> <publisher> Addison-Wesley. </publisher>
Reference-contexts: Introns are only found in eukaryotic genomes and make up a large portion of the DNA in eukaryotic genomes. Eukaryotic organisms include all multicellular organisms and some single celled organisms. In humans, for example, approximately 30% of the human genome is made up of introns <ref> (Bell and Marr 1988) </ref>. Only about 3% consists of coding DNA and the rest of the genome consists of other non-coding DNA, repetitive sequences, and regulatory regions.
Reference: <author> Blake, C. C. F. </author> <year> (1978, </year> <month> May). </month> <note> Do genes-in-pieces imply proteins-in-pieces? Nature 273, 267. 26 Curtis, </note> <author> H. </author> <year> (1983). </year> <title> Biology. </title> <address> New York: </address> <publisher> Worth Publishers. </publisher>
Reference-contexts: The unusual placement of introns, interrupting the coding regions of genes, and the fact that extra energy is needed to maintain and process these structures that have no apparent function, have made introns an important topic of study since their discovery in the 1970's. The exon theory of genes <ref> (Blake 1978) </ref> suggested that exons are the building blocks of proteins, and genes are created from combinations of these building blocks.
Reference: <author> Forrest, S. and M. </author> <title> Mitchell (1993). Relative building-block fitness and the building-block hypothesis. </title> <editor> In D. Whitley (Ed.), </editor> <booktitle> Proceedings of the Foundations of Genetic Algorithms Workshop, </booktitle> <address> San Mateo, CA, </address> <pages> pp. 109-126. </pages> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: The RR functions used in these experiments were derived from the RR functions from (Mitchell, Forrest, and Holland 1992) and <ref> (Forrest and Mitchell 1993) </ref>. Table 1 shows an example of an RR function. The optimum individual of this function is an individual consisting of all ones. Each schema, b i , represents all individuals that contain building block i. <p> As a fixed representation run begins, a few of the basic building blocks quickly fill up the entire population. In the process, many other existing building blocks are completely lost from the population presumably due to the hitchhiking effect <ref> (Forrest and Mitchell 1993) </ref>. As a fixed representation run progresses, each time a new building block is discovered, the GA attempts to fill up the entire population with this new building block before continuing the search for other building blocks.
Reference: <author> Gilbert, W. </author> <year> (1978, </year> <month> February). </month> <title> Why genes in pieces? Nature 271, </title> <type> 501. </type>
Reference: <author> Gilbert, W. </author> <year> (1985, </year> <month> May). </month> <title> Genes-in-pieces revisited. </title> <booktitle> Science 228, </booktitle> <pages> 823-824. </pages>
Reference-contexts: There are specific examples of the same exon existing in different genes where the same structure or function is required by two different proteins <ref> (Gilbert 1985) </ref>. Thus, the theory is that the intron-exon structure of eukaryotic genes encourages the formation of new genes from structural and functional subunits of existing genes.
Reference: <author> Gilbert, W. </author> <year> (1987). </year> <title> The exon theory of genes. </title> <booktitle> Cold Spring Harbor Symposia on Quantitative Biology 52, </booktitle> <pages> 901-905. </pages>
Reference-contexts: Statistically, "...introns represent hot spots for recombination: by their mere presence and length they increase the rate of recombination, and hence the shu*ing of exons, by factors of the order of 10 6 or 10 8 <ref> (Gilbert 1987, pg. 901) </ref>." Evidence suggests that exons may correspond to both structural and functional subunits of proteins (Blake 1978; Go 1981; Hartl 1991). There are specific examples of the same exon existing in different genes where the same structure or function is required by two different proteins (Gilbert 1985).
Reference: <author> Gilbert, W. </author> <year> (1991). </year> <title> Gene structure and evolutionary theory. </title> <editor> In L. Warren and H. Koprowski (Eds.), </editor> <title> New perspectives on evolution, </title> <address> New York, </address> <pages> pp. 155-163. </pages> <month> Wiley-Liss. </month>
Reference: <author> Go, M. </author> <year> (1981, </year> <month> May). </month> <title> Correlation of DNA exonic regions with protein structural units in haemoglobin. </title> <booktitle> Nature 291, </booktitle> <pages> 90-92. </pages>
Reference: <author> Goldberg, D. E., B. Korb, and K. </author> <title> Deb (1989). Messy genetic algorithms: Motivation, analysis, and first results. </title> <booktitle> Complex Systems 3, </booktitle> <pages> 493-530. </pages>
Reference-contexts: Results from Nordin, Francone, and Banzhaf (1995) suggest that non-coding material, both naturally occurring and explicitly defined, may protect the code blocks of a GP system from the destructive effects of crossover. Goldberg's messy GA (mGA) <ref> (Goldberg, Korb, and Deb 1989) </ref> investigated the concept of location independent bits instead of location independent building blocks. In the mGA, individuals are strings of ordered pairs. The first element of a pair is the name of the bit; the second is the value.
Reference: <author> Hartl, D. L. </author> <year> (1991). </year> <title> New perspectives on the molecular evolution of genes and genomes. </title> <editor> In L. Warren and H. Koprowski (Eds.), </editor> <title> New perspectives on evolution, </title> <address> New York, </address> <pages> pp. 123-137. </pages> <month> Wiley-Liss. </month>
Reference: <author> Haynes, T. </author> <year> (1996). </year> <title> Duplication of coding segments in genetic programming. </title> <booktitle> In Proceedings of the 13th National Conference on Artificial Intelligence, </booktitle> <address> Cambridge, MA, </address> <pages> pp. 344-349. </pages> <publisher> MIT Press. </publisher>
Reference: <author> Jones, T. </author> <year> (1994). </year> <title> A description of holland's royal road function. </title> <booktitle> Evolutionary Computation 2 (4), </booktitle> <pages> 409-415. </pages>
Reference: <author> Levenick, J. R. </author> <year> (1991). </year> <title> Inserting introns improves genetic algorithm success rate: Taking a cue from biology. </title> <booktitle> In Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> pp. 123-127. </pages>
Reference: <author> Lewin, B. </author> <year> (1994). </year> <title> Genes 5. </title> <publisher> John Wiley & Sons. </publisher>
Reference-contexts: A second way of coding for multiple products involves overlapping genes (Curtis 1983, pg. 304). The genetic code is stored in codons which are three base pairs long. A reading frame is one of the three possible ways of reading a nucleotide sequence as a series of triplets <ref> (Lewin 1994) </ref>. For example, the sequence: ACGACGACGACGACGACGACG can be read in three possible reading frames: ACG ACG ACG ACG ACG ACG ... GAC GAC GAC GAC GAC GAC ... As a result, two completely unrelated genes can overlap or one gene can be contained within another.
Reference: <author> Mitchell, M., S. Forrest, and J. H. </author> <title> Holland (1992). The royal road for genetic algorithms: Fitness landscapes and GA performance. </title> <editor> In F. J. Varela and P. Bourgine (Eds.), </editor> <booktitle> Toward a Practice of Autonomous Systems: Proceedings of the First European Conference on Artificial Life, </booktitle> <address> Cambridge, MA. </address> <publisher> MIT Press. </publisher>
Reference-contexts: The RR functions used in these experiments were derived from the RR functions from <ref> (Mitchell, Forrest, and Holland 1992) </ref> and (Forrest and Mitchell 1993). Table 1 shows an example of an RR function. The optimum individual of this function is an individual consisting of all ones. Each schema, b i , represents all individuals that contain building block i.
Reference: <author> Nei, M. </author> <year> (1987). </year> <title> Molecular Evolutionary Genetics. </title> <publisher> Columbia University Press. </publisher>
Reference: <author> Nordin, P., F. Francone, and W. </author> <title> Banzhaf (1995). Explicitly defined introns and destructive crossover in genetic programming. </title> <editor> In P. Angeline and K. Kinnear (Eds.), </editor> <booktitle> Advances in Genetic Programming II, </booktitle> <pages> pp. 111-134. </pages> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Wu, A. S. and R. K. </author> <title> Lindsay (1995). Empirical studies of the genetic algorithm with non-coding segments. </title> <booktitle> Evolutionary Computation 3 (2), </booktitle> <pages> 121-147. </pages>
Reference-contexts: The specific functions tested in this study were 8x8.RR2, 8x8.FRR2, 16x8.RR2, and 16x8.FRR2. A detailed description of our GA program can be found in <ref> (Wu and Lindsay 1995) </ref>.
Reference: <author> Wu, A. S. and R. K. </author> <title> Lindsay (1996). A survey of intron research in genetics. </title> <booktitle> In Proceedings of the 4th International Conference on Parallel Problem Solving from Nature. </booktitle> <pages> 27 </pages>
Reference-contexts: This section describes relevant biological structures and discusses 2 some of the parallels between the biological and computational systems. An understanding of the basic concepts of genetics is assumed. For a brief review of basic genetics, the reader is referred to <ref> (Wu and Lindsay 1996, Section 2) </ref>. 2.1 Non-coding DNA The non-coding segments used in these GA experiments are modeled after non-coding DNA from biological systems. Earlier GA papers (Levenick 1991; Forrest and Mitchell 1993) have used the term "intron" to refer to both the biological and computational structures.
References-found: 20

