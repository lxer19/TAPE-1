URL: http://www.iro.umontreal.ca/~scriptum/FascianoINLG96.ps.gz
Refering-URL: http://www.iro.umontreal.ca/~scriptum/PublicationsMembres.html
Root-URL: http://www.iro.umontreal.ca
Email: &lt;fasciano@IRO.UMontreal.CA&gt;  &lt;lapalme@IRO.UMontreal.CA&gt;  
Title: PostGraphe: a system for the generation of statistical graphics and text  
Author: Massimo Fasciano Guy Lapalme 
Date: April 21, 1996  
Address: Montreal, CP 6128, Succ Centre-Ville Montreal Quebec Canada, H3C 3J7  
Affiliation: Departement d'informatique et de recherche operationnelle Universite de  
Abstract: Graphics and text have to be well integrated in order to achieve their full potential. A picture shows but a text describes. In a statistical report, graphics show the data that is analyzed in the text. This paper describes a system, called PostGraphe, which generates a report integrating graphics and text from a single set of writer's intentions. The system is given the data in tabular form as might be found in a spreadsheet; also input is a declaration of the types of values in the columns of the table. The user chooses the intentions to be conveyed in the graphics (e.g. compare two variables, show the evolution of a set of variables ...) and the system generates a report in L A T E X with the appropriate PostScript graphic files. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Andre, W. Finkler, W. Graf, T. Rist, A. Schauder, and W. Wahlster. WIP: </author> <title> the automatic synthesis of multimodal presentations. </title> <editor> In M. Maybury, editor, </editor> <title> Intelligent Multimedia Interfaces. </title> <publisher> AIII Press, </publisher> <address> Cam--bridge, MA, </address> <year> 1993. </year>
Reference-contexts: Other related works include Mittal et al.'s extension [14] to the sage system [15] which uses text to explain the structure of graphs and charts unlike our system, which uses it to present and explain the data itself and wip <ref> [1] </ref>, a well-known multimedia generator which has the same goals as our system, but works on a different type of data (structured representations vs tables of numbers). wip is more concerned with content and media selection according to the user's goals, whereas with PostGraphe, the content is almost directly determined by
Reference: [2] <institution> Jacques Bertin. Semiology of Graphics. The University of Wisconsin Press, </institution> <year> 1983. </year> <note> Translated by William J. Berg. </note>
Reference-contexts: As might be expected, the types of variables give a lot of information about the structure of the elements of the report <ref> [2, 12, 13] </ref>. For example, although a continuous variable is better represented by a line graph, the nature of a discrete variable will become more apparent using a column graph. Graphics-only systems can get away with a simple type-system as presented in [12, 13]. <p> However, if the intention of the writer is to illustrate the enormous difference between company D and the others, the graph is very efficient as it is. Our research extends the work of Bertin <ref> [2] </ref> and MacKinlay [12, 13] on the types and organization of variables, the work of Zelazny on messages and goals [20] and integrates it with other theories on the use of tables [19, 9] and graphs [5, 6, 8, 16, 17, 18]. 3 A report generator: the Post Graphe system Our <p> The properties are organised as a multiple inheritance graph divided into a number of sub-graphs, each corresponding to a specific feature [10]. The most important sub-graphs describe the following features: organization (nominal, ordinal, quantitative, : : : ) <ref> [2, 12, 13] </ref>, domain (enumeration, range, : : : ), temporal (month, year, : : : ), format (integer, real, : : : ), mesurements (distance, duration, : : : ), and specific objects (countries, : : : ).
Reference: [3] <author> Jacques Bojin and Marcel Dunand. </author> <title> Documents et exposes efficaces: messages, structure du raisonnement, illustrations graphiques. </title> <publisher> Editions d'Organisation, </publisher> <address> Paris, </address> <year> 1982. </year>
Reference-contexts: The difference can be seen in the organization of the graphs and in the wording of the text. In figure 1, the evolution is emphasized by using the horizontal axis for the years <ref> [20, 3] </ref>. This is the accepted way of presenting temporal data. The years are sorted in ascending order, also to give the impression of evolution. The associated text describes the overall evolution and points out an interesting irregularity.
Reference: [4] <author> S. M. Casner. </author> <title> A Task-analytic Approach to the Automated Design of Graphic Presentations. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 10(2) </volume> <pages> 111-151, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: Some research has focused on these problems separately, such as MacKinlay's APT system [12, 13] which focuses mainly on type-based graph generation, Zelazny's work on graphs and messages [20], and Casner's study of tasks/goals <ref> [4] </ref>. Good design rules also have to be considered when choosing and generating tables [19, 9] and graphs [6, 8, 16, 17, 18, 5], as these have a direct influence on the reader's perception of a report.
Reference: [5] <author> W. S. Cleveland and R. McGill. </author> <title> Graphical Perception: Theory, Experimentation, and Application to the Developments of Graphical Methods. </title> <journal> Journal of the American Statistical Association, </journal> <volume> 79(387) </volume> <pages> 531-554, </pages> <month> September </month> <year> 1984. </year>
Reference-contexts: Our research extends the work of Bertin [2] and MacKinlay [12, 13] on the types and organization of variables, the work of Zelazny on messages and goals [20] and integrates it with other theories on the use of tables [19, 9] and graphs <ref> [5, 6, 8, 16, 17, 18] </ref>. 3 A report generator: the Post Graphe system Our prototype, the PostGraphe system is a compromise between keeping the implementation simple and obtaining satisfactory results. <p> Good design rules also have to be considered when choosing and generating tables [19, 9] and graphs <ref> [6, 8, 16, 17, 18, 5] </ref>, as these have a direct influence on the reader's perception of a report. Thus, one has to consider the writer's goals, the data itself and the reader's interpretation.
Reference: [6] <author> H. M. Culbertson and R. D. </author> <title> Powers. A study of graph comprehension difficulties. </title> <journal> AV Comm. Review, </journal> <volume> 2(7) </volume> <pages> 97-100, </pages> <year> 1959. </year>
Reference-contexts: Our research extends the work of Bertin [2] and MacKinlay [12, 13] on the types and organization of variables, the work of Zelazny on messages and goals [20] and integrates it with other theories on the use of tables [19, 9] and graphs <ref> [5, 6, 8, 16, 17, 18] </ref>. 3 A report generator: the Post Graphe system Our prototype, the PostGraphe system is a compromise between keeping the implementation simple and obtaining satisfactory results. <p> Good design rules also have to be considered when choosing and generating tables [19, 9] and graphs <ref> [6, 8, 16, 17, 18, 5] </ref>, as these have a direct influence on the reader's perception of a report. Thus, one has to consider the writer's goals, the data itself and the reader's interpretation.
Reference: [7] <author> C. J. Date. </author> <title> An Introduction to Database Systems, volume I. </title> <publisher> Addison-Wesley, </publisher> <address> 4 edition, </address> <year> 1988. </year>
Reference-contexts: If a unit cannot be found using single inheritance, the name of the type is used as a unit. This process is described in more detail in [10]. 3.2 Relational keys Relational keys are similar to the notion of the same name in relational databases <ref> [7] </ref> and help determine which variables depend on which others. They are also used for ordering variables in some graphics so that the more important ones (usually the keys) are given the more visible positions.
Reference: [8] <author> G. DeSanctis and S. L. Jarvenpaa. </author> <title> An investigation of the "tables versus graphs" controversy in a learning environment. </title> <editor> In L. Gal-legos, R. Welke, and J. Wetherbe, editors, </editor> <booktitle> Proceedings of the 6 th international conference on information systems, </booktitle> <pages> pages 134-144, </pages> <month> December </month> <year> 1985. </year>
Reference-contexts: Our research extends the work of Bertin [2] and MacKinlay [12, 13] on the types and organization of variables, the work of Zelazny on messages and goals [20] and integrates it with other theories on the use of tables [19, 9] and graphs <ref> [5, 6, 8, 16, 17, 18] </ref>. 3 A report generator: the Post Graphe system Our prototype, the PostGraphe system is a compromise between keeping the implementation simple and obtaining satisfactory results. <p> Good design rules also have to be considered when choosing and generating tables [19, 9] and graphs <ref> [6, 8, 16, 17, 18, 5] </ref>, as these have a direct influence on the reader's perception of a report. Thus, one has to consider the writer's goals, the data itself and the reader's interpretation.
Reference: [9] <author> A.S.C. </author> <title> Ehrenberg. </title> <journal> Rudiments of Numer-acy. Journal of the Royal Statistical Society, </journal> <volume> 140(Part </volume> 3):277-297, 1977. 
Reference-contexts: Second, the years are treated as a nominal variable instead of an ordinal one, and thus sorted according to the profit values. This reordering has two positive effects: it further destroys the impression of evolution by making the years nonsequential and it allows a better comparison of the profits <ref> [9] </ref>. The text is also different from the one in figure 1: instead of describing how the profits evolved, it merely points out the best and the worst years for profits. This difference in perspective is important for a writer, especially when trying to convey more subjective messages [10]. <p> Our research extends the work of Bertin [2] and MacKinlay [12, 13] on the types and organization of variables, the work of Zelazny on messages and goals [20] and integrates it with other theories on the use of tables <ref> [19, 9] </ref> and graphs [5, 6, 8, 16, 17, 18]. 3 A report generator: the Post Graphe system Our prototype, the PostGraphe system is a compromise between keeping the implementation simple and obtaining satisfactory results. <p> Some research has focused on these problems separately, such as MacKinlay's APT system [12, 13] which focuses mainly on type-based graph generation, Zelazny's work on graphs and messages [20], and Casner's study of tasks/goals [4]. Good design rules also have to be considered when choosing and generating tables <ref> [19, 9] </ref> and graphs [6, 8, 16, 17, 18, 5], as these have a direct influence on the reader's perception of a report. Thus, one has to consider the writer's goals, the data itself and the reader's interpretation.
Reference: [10] <institution> Massimo Fasciano. Generation integree de textes et de graphiques statistiques. </institution> <type> PhD thesis, </type> <institution> Universite de Montreal, </institution> <year> 1996. </year>
Reference-contexts: The text is also different from the one in figure 1: instead of describing how the profits evolved, it merely points out the best and the worst years for profits. This difference in perspective is important for a writer, especially when trying to convey more subjective messages <ref> [10] </ref>. If the communicative goals aren't well identified, it is very easy to convey the wrong impression to the reader. This problem is often complicated by the fact that a single graph or text can convey many messages at once, some more direct than others. <p> These annotations indicate the types of the variables, how to determine the relational keys for the data and a series of predicates describing the writer's intentions. The justification for these annotations and their Prolog syntax are presented in detail in <ref> [10] </ref>. See figure 6 for an example of their use. 3.1 Types The type system's role is to associate to every variable of the input a set of properties and a unit. <p> The properties are organised as a multiple inheritance graph divided into a number of sub-graphs, each corresponding to a specific feature <ref> [10] </ref>. <p> A unit can be associated with every type (e.g. percentage 7! %). If a unit cannot be found using single inheritance, the name of the type is used as a unit. This process is described in more detail in <ref> [10] </ref>. 3.2 Relational keys Relational keys are similar to the notion of the same name in relational databases [7] and help determine which variables depend on which others. <p> Some of these intentions are further divided into more specific subtypes. The study of intentions is a major topic of our research. More details about the organization of our goal system can be found in <ref> [10] </ref>. PostGraphe uses the same planning mechanism to generate text and graphics. The planner uses the types and values of the data as well as the relational keys but it is mainly goal-driven. It builds on the ideas of Mackinlay [12, 13] but extends them in important ways.
Reference: [11] <author> M. Gagnon and G. Lapalme. </author> <title> From conceptual time to linguistic time. </title> <journal> Computational Linguistics, </journal> <volume> 22(1) </volume> <pages> 91-127, </pages> <month> January </month> <year> 1996. </year>
Reference-contexts: For example, knowing that "May" and "July" are months allows a generator to produce temporal expressions such as "two months later" <ref> [11] </ref>. To further refine the selection process, we have to take into account not only the types, but also the specific values of the data samples. The num ber of values sometimes has a lot of influence on the choice of an expression schema. <p> As for the text realization tool, we chose to adapt a systemic-based text generator called PreTexte <ref> [11] </ref>. This system was well-suited to our needs for two reasons: first, it was developed in Prolog, making it easy to integrate into Post-Graphe. Second, it specializes in the generation of temporal expressions. <p> If a candidate is rejected, the next one on the sorted list is tried. The surface text generation is handled by a modified version of PreTexte <ref> [11] </ref>. Finally, a post-optimization phase eliminates redundancies which can occur because the heuristics sometimes miss a compatible grouping of intentions. An important aspect of PostGraphe is that it uses no high-level reasoning on intentions.
Reference: [12] <author> Jock D. Mackinlay. </author> <title> Automatic Design of Graphical Presentations. </title> <type> PhD thesis, </type> <institution> Computer Science Department, Stanford University, </institution> <year> 1986. </year>
Reference-contexts: As might be expected, the types of variables give a lot of information about the structure of the elements of the report <ref> [2, 12, 13] </ref>. For example, although a continuous variable is better represented by a line graph, the nature of a discrete variable will become more apparent using a column graph. Graphics-only systems can get away with a simple type-system as presented in [12, 13]. <p> For example, although a continuous variable is better represented by a line graph, the nature of a discrete variable will become more apparent using a column graph. Graphics-only systems can get away with a simple type-system as presented in <ref> [12, 13] </ref>. This type system classifies the visual and organizational properties of data variables using such categories as nominal , ordinal , and quantitative. <p> These factors influence the structure and contents of a statistical report and have to be looked at simultaneously in order to be effective. Many systems based on APT <ref> [12, 13] </ref> use types to determine structure, but specific values are often overlooked and the simultaneous use of types and goals is rare. To further illustrate the importance of simultaneous application of these factors, let's look at figure 5 again. <p> However, if the intention of the writer is to illustrate the enormous difference between company D and the others, the graph is very efficient as it is. Our research extends the work of Bertin [2] and MacKinlay <ref> [12, 13] </ref> on the types and organization of variables, the work of Zelazny on messages and goals [20] and integrates it with other theories on the use of tables [19, 9] and graphs [5, 6, 8, 16, 17, 18]. 3 A report generator: the Post Graphe system Our prototype, the PostGraphe <p> The properties are organised as a multiple inheritance graph divided into a number of sub-graphs, each corresponding to a specific feature [10]. The most important sub-graphs describe the following features: organization (nominal, ordinal, quantitative, : : : ) <ref> [2, 12, 13] </ref>, domain (enumeration, range, : : : ), temporal (month, year, : : : ), format (integer, real, : : : ), mesurements (distance, duration, : : : ), and specific objects (countries, : : : ). <p> PostGraphe uses the same planning mechanism to generate text and graphics. The planner uses the types and values of the data as well as the relational keys but it is mainly goal-driven. It builds on the ideas of Mackinlay <ref> [12, 13] </ref> but extends them in important ways. MacKinlay's algorithm, as used in APT, takes as input a set of typed variables and determines the most efficient graphical encoding (position, length, color, : : : ) for each of them. <p> The compatibility of intentions is determined using simple heuristics. Then we check if each group is feasible and determine the best schema to express it. This step is based on a lookup table, much like MacKinlay's algorithm <ref> [12, 13] </ref> which uses an association between the type of a variable and the most efficient graphical methods to express it. Our table is goal-oriented instead of type-oriented: it associates each possible user goal with the schemas that can express it. <p> As we have shown in this paper, all of these factors must be taken into account simultaneously in order to produce an efficient report. Some research has focused on these problems separately, such as MacKinlay's APT system <ref> [12, 13] </ref> which focuses mainly on type-based graph generation, Zelazny's work on graphs and messages [20], and Casner's study of tasks/goals [4].
Reference: [13] <author> Jock D. Mackinlay. </author> <title> Automating the Design of Graphical Presentations of Relational Information. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 5(2) </volume> <pages> 110-141, </pages> <month> April </month> <year> 1986. </year>
Reference-contexts: As might be expected, the types of variables give a lot of information about the structure of the elements of the report <ref> [2, 12, 13] </ref>. For example, although a continuous variable is better represented by a line graph, the nature of a discrete variable will become more apparent using a column graph. Graphics-only systems can get away with a simple type-system as presented in [12, 13]. <p> For example, although a continuous variable is better represented by a line graph, the nature of a discrete variable will become more apparent using a column graph. Graphics-only systems can get away with a simple type-system as presented in <ref> [12, 13] </ref>. This type system classifies the visual and organizational properties of data variables using such categories as nominal , ordinal , and quantitative. <p> These factors influence the structure and contents of a statistical report and have to be looked at simultaneously in order to be effective. Many systems based on APT <ref> [12, 13] </ref> use types to determine structure, but specific values are often overlooked and the simultaneous use of types and goals is rare. To further illustrate the importance of simultaneous application of these factors, let's look at figure 5 again. <p> However, if the intention of the writer is to illustrate the enormous difference between company D and the others, the graph is very efficient as it is. Our research extends the work of Bertin [2] and MacKinlay <ref> [12, 13] </ref> on the types and organization of variables, the work of Zelazny on messages and goals [20] and integrates it with other theories on the use of tables [19, 9] and graphs [5, 6, 8, 16, 17, 18]. 3 A report generator: the Post Graphe system Our prototype, the PostGraphe <p> The properties are organised as a multiple inheritance graph divided into a number of sub-graphs, each corresponding to a specific feature [10]. The most important sub-graphs describe the following features: organization (nominal, ordinal, quantitative, : : : ) <ref> [2, 12, 13] </ref>, domain (enumeration, range, : : : ), temporal (month, year, : : : ), format (integer, real, : : : ), mesurements (distance, duration, : : : ), and specific objects (countries, : : : ). <p> PostGraphe uses the same planning mechanism to generate text and graphics. The planner uses the types and values of the data as well as the relational keys but it is mainly goal-driven. It builds on the ideas of Mackinlay <ref> [12, 13] </ref> but extends them in important ways. MacKinlay's algorithm, as used in APT, takes as input a set of typed variables and determines the most efficient graphical encoding (position, length, color, : : : ) for each of them. <p> The compatibility of intentions is determined using simple heuristics. Then we check if each group is feasible and determine the best schema to express it. This step is based on a lookup table, much like MacKinlay's algorithm <ref> [12, 13] </ref> which uses an association between the type of a variable and the most efficient graphical methods to express it. Our table is goal-oriented instead of type-oriented: it associates each possible user goal with the schemas that can express it. <p> As we have shown in this paper, all of these factors must be taken into account simultaneously in order to produce an efficient report. Some research has focused on these problems separately, such as MacKinlay's APT system <ref> [12, 13] </ref> which focuses mainly on type-based graph generation, Zelazny's work on graphs and messages [20], and Casner's study of tasks/goals [4].
Reference: [14] <author> V. Mittal, S. Roth, J. Moore, J. Mattis, and G. Carenini. </author> <title> Generating Explanatory Captions for Information Graphics. </title> <booktitle> In Proceedings of the 14 th International Joint conference on Artificial Intelligence (IJCAI-95), </booktitle> <volume> volume 2, </volume> <pages> pages 1276-1283, </pages> <address> Montreal, Canada, </address> <month> August </month> <year> 1995. </year>
Reference-contexts: Thus, one has to consider the writer's goals, the data itself and the reader's interpretation. Other related works include Mittal et al.'s extension <ref> [14] </ref> to the sage system [15] which uses text to explain the structure of graphs and charts unlike our system, which uses it to present and explain the data itself and wip [1], a well-known multimedia generator which has the same goals as our system, but works on a different type
Reference: [15] <author> Steven F. Roth, Joe Mattis, and Xavier Mes-nard. </author> <title> Graphics and natural language as components of automatic explanation. </title> <editor> In Joseph W. Sullivan and Sherman W. Tyler, editors, </editor> <title> Intelligent User Interfaces, Frontier Series, chapter 10. </title> <publisher> ACM Press, </publisher> <year> 1991. </year>
Reference-contexts: Thus, one has to consider the writer's goals, the data itself and the reader's interpretation. Other related works include Mittal et al.'s extension [14] to the sage system <ref> [15] </ref> which uses text to explain the structure of graphs and charts unlike our system, which uses it to present and explain the data itself and wip [1], a well-known multimedia generator which has the same goals as our system, but works on a different type of data (structured representations vs
Reference: [16] <author> Howard. Schutz. </author> <title> An Evaluation of Formats for Graphic Trend Displays | Experiment II. </title> <booktitle> Human Factors, </booktitle> <volume> 3 </volume> <pages> 99-107, </pages> <year> 1961. </year>
Reference-contexts: Our research extends the work of Bertin [2] and MacKinlay [12, 13] on the types and organization of variables, the work of Zelazny on messages and goals [20] and integrates it with other theories on the use of tables [19, 9] and graphs <ref> [5, 6, 8, 16, 17, 18] </ref>. 3 A report generator: the Post Graphe system Our prototype, the PostGraphe system is a compromise between keeping the implementation simple and obtaining satisfactory results. <p> Good design rules also have to be considered when choosing and generating tables [19, 9] and graphs <ref> [6, 8, 16, 17, 18, 5] </ref>, as these have a direct influence on the reader's perception of a report. Thus, one has to consider the writer's goals, the data itself and the reader's interpretation.
Reference: [17] <author> Edward R. Tufte. </author> <title> The Visual Display of Quantitative Information. </title> <publisher> Graphics Press, </publisher> <year> 1983. </year>
Reference-contexts: Our research extends the work of Bertin [2] and MacKinlay [12, 13] on the types and organization of variables, the work of Zelazny on messages and goals [20] and integrates it with other theories on the use of tables [19, 9] and graphs <ref> [5, 6, 8, 16, 17, 18] </ref>. 3 A report generator: the Post Graphe system Our prototype, the PostGraphe system is a compromise between keeping the implementation simple and obtaining satisfactory results. <p> Good design rules also have to be considered when choosing and generating tables [19, 9] and graphs <ref> [6, 8, 16, 17, 18, 5] </ref>, as these have a direct influence on the reader's perception of a report. Thus, one has to consider the writer's goals, the data itself and the reader's interpretation.
Reference: [18] <author> Edward R. Tufte. </author> <title> Envisioning Information. </title> <publisher> Graphics Press, </publisher> <year> 1990. </year>
Reference-contexts: Our research extends the work of Bertin [2] and MacKinlay [12, 13] on the types and organization of variables, the work of Zelazny on messages and goals [20] and integrates it with other theories on the use of tables [19, 9] and graphs <ref> [5, 6, 8, 16, 17, 18] </ref>. 3 A report generator: the Post Graphe system Our prototype, the PostGraphe system is a compromise between keeping the implementation simple and obtaining satisfactory results. <p> Good design rules also have to be considered when choosing and generating tables [19, 9] and graphs <ref> [6, 8, 16, 17, 18, 5] </ref>, as these have a direct influence on the reader's perception of a report. Thus, one has to consider the writer's goals, the data itself and the reader's interpretation.
Reference: [19] <author> P. Wright. </author> <title> The comprehension of tabulated information: some similarities between reading prose and reading tables. </title> <journal> NSPI Journal, XIX, </journal> <volume> 8 </volume> <pages> 25-29, </pages> <year> 1980. </year>
Reference-contexts: Our research extends the work of Bertin [2] and MacKinlay [12, 13] on the types and organization of variables, the work of Zelazny on messages and goals [20] and integrates it with other theories on the use of tables <ref> [19, 9] </ref> and graphs [5, 6, 8, 16, 17, 18]. 3 A report generator: the Post Graphe system Our prototype, the PostGraphe system is a compromise between keeping the implementation simple and obtaining satisfactory results. <p> Some research has focused on these problems separately, such as MacKinlay's APT system [12, 13] which focuses mainly on type-based graph generation, Zelazny's work on graphs and messages [20], and Casner's study of tasks/goals [4]. Good design rules also have to be considered when choosing and generating tables <ref> [19, 9] </ref> and graphs [6, 8, 16, 17, 18, 5], as these have a direct influence on the reader's perception of a report. Thus, one has to consider the writer's goals, the data itself and the reader's interpretation.
Reference: [20] <author> Gene Zelazny. </author> <title> Dites-le avec des graphiques. </title> <publisher> Inter Editions, </publisher> <year> 1989. </year>
Reference-contexts: The difference can be seen in the organization of the graphs and in the wording of the text. In figure 1, the evolution is emphasized by using the horizontal axis for the years <ref> [20, 3] </ref>. This is the accepted way of presenting temporal data. The years are sorted in ascending order, also to give the impression of evolution. The associated text describes the overall evolution and points out an interesting irregularity. <p> On the other hand, the writer's intention for figure 2 is totally different. In order to show a comparison, a few structural changes have to be made. First of all, the years are presented on the vertical axis, thus eliminating the impression of evolution <ref> [20] </ref>. This change is important to the perception of the graph because it makes its message clearer by eliminating a false inference. Second, the years are treated as a nominal variable instead of an ordinal one, and thus sorted according to the profit values. <p> Our research extends the work of Bertin [2] and MacKinlay [12, 13] on the types and organization of variables, the work of Zelazny on messages and goals <ref> [20] </ref> and integrates it with other theories on the use of tables [19, 9] and graphs [5, 6, 8, 16, 17, 18]. 3 A report generator: the Post Graphe system Our prototype, the PostGraphe system is a compromise between keeping the implementation simple and obtaining satisfactory results. <p> Some research has focused on these problems separately, such as MacKinlay's APT system [12, 13] which focuses mainly on type-based graph generation, Zelazny's work on graphs and messages <ref> [20] </ref>, and Casner's study of tasks/goals [4]. Good design rules also have to be considered when choosing and generating tables [19, 9] and graphs [6, 8, 16, 17, 18, 5], as these have a direct influence on the reader's perception of a report.
References-found: 20

