URL: http://www.cs.purdue.edu/homes/zamboni/docs/resume/pubs/synkill.ps
Refering-URL: http://www.cs.purdue.edu/homes/zamboni/docs/resume/
Root-URL: http://www.cs.purdue.edu
Email: fschuba,krsul,kuhn,spaf,sundaram,zambonig@cs.purdue.edu  
Title: Analysis of a Denial of Service Attack on TCP  
Author: Christoph L. Schuba, Ivan V. Krsul, Markus G. Kuhn, Eugene H. Spafford, Aurobindo Sundaram, Diego Zamboni 
Address: West Lafayette, IN 47907-1398  
Affiliation: COAST Laboratory Department of Computer Sciences Purdue University 1398 Department of Computer Sciences  
Abstract: This paper analyzes a network-based denial of service attack for IP (Internet Protocol) based networks. It is popularly called SYN flooding. It works by an attacker sending many TCP (Transmission Control Protocol) connection requests with spoofed source addresses to a victim's machine. Each request causes the targeted host to instantiate data structures out of a limited pool of resources. Once the target host's resources are exhausted, no more incoming TCP connections can be established, thus denying further legitimate access. The paper contributes a detailed analysis of the SYN flooding attack and a discussion of existing and proposed countermeasures. Furthermore, we introduce a new solution approach, explain its design, and evaluate its performance. Our approach offers protection against SYN flooding for all hosts connected to the same local area network, independent of their operating system or networking stack implementation. It is highly portable, configurable, extensible, and requires neither special hardware, nor modifications in routers or protected end systems. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Cisco Systems Inc. </author> <title> Defining Strategies to Protect Against TCP SYN Denial of Service Attacks, </title> <month> September </month> <year> 1996. </year>
Reference-contexts: One vendor recommends upgrading systems to a minimum of 128 MB RAM to allow them to cope with attacks. 4.1.2 Router Configuration Improvements The measures proposed in the first reactions to the recent attacks [4], as well as several other sources <ref> [1, 9] </ref>, attempt to make it difficult for packets with spoofed source addresses to traverse routers. The solutions proposed can be summarized as follows: 1. Configure external interfaces on routers to block packets that have source addresses from the internal network. 2.
Reference: [2] <author> D. E. Comer. </author> <title> Internetworking with TCP/IP. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, third edition, </address> <year> 1995. </year>
Reference-contexts: Sections 7 and 8 outline future work issues and present conclusions. 2. Background We will provide a brief description of the features of the TCP/IP protocol suite that facilitate this attack. For further details see <ref> [2, 16, 17] </ref>. 2.1. Internet Protocol The Internet Protocol (IP) is the standard network layer protocol of the Internet that provides an unreliable, connection-less, best-effort packet delivery service. IP defines the basic unit of data transfer used throughout an IP network, called a datagram.
Reference: [3] <institution> Computer Emergency Response Team (CERT), Carnegie Mellon University, Pittsburgh, PA. IP Spoofing Attacks and Hijacked Terminal Connections, </institution> <month> Jan. </month> <year> 1995. </year> <month> CA-95:01. </month>
Reference-contexts: The destination host needs to allocate large data structures in response to any SYN packet, without any guarantee of its authenticity. The three-way handshake requires the sequence number y to match between the second and third message to protect against accidentally reopened old connections and unauthorized access (see <ref> [3] </ref>). The destination therefore needs to either store its ISS y between sending the second message and receiving the third message, or be able to regenerate y at the time the third message of the three-way handshake is received. <p> That would make successful SYN flooding for an attacker as hard as sequence number prediction attacks. Fur thermore, this approach would facilitate the detection of other classes of network based attacks (see e.g., <ref> [3] </ref>). 7.2. Multiple-network Monitoring Currently, synkill is implemented to monitor a single network interface. It may be desirable to allow the tool to monitor several network interfaces simultaneously, thus allowing the sharing of the acquired address classification database. 7.3.
Reference: [4] <institution> Computer Emergency Response Team (CERT), Carnegie Mellon University, Pittsburgh, PA. TCP SYN Flooding and IP Spoofing Attacks, </institution> <month> Sept. </month> <year> 1996. </year> <month> CA-96:21. </month>
Reference-contexts: 1. Introduction Since September 1996, several dozen sites on the Internet have been subjected to a denial of service attack, popularly called SYN Flooding <ref> [4, 5, 20] </ref>. The attack exploits weaknesses in the TCP/IP (Transmission Control Protocol/Internet Protocol) protocol suite. This cannot be corrected without significant modifications to its protocols. These denial of service attacks can be launched with little effort. Presently, it is difficult to trace an attack back to its originator. <p> Increasing the backlog leads to a potential increase in resource usage. One vendor recommends upgrading systems to a minimum of 128 MB RAM to allow them to cope with attacks. 4.1.2 Router Configuration Improvements The measures proposed in the first reactions to the recent attacks <ref> [4] </ref>, as well as several other sources [1, 9], attempt to make it difficult for packets with spoofed source addresses to traverse routers. The solutions proposed can be summarized as follows: 1. Configure external interfaces on routers to block packets that have source addresses from the internal network. 2.
Reference: [5] <author> E. Corcoran. </author> <title> Hackers strike at N.Y. Internet Access Company. The Washington Post, </title> <journal> Sep. </journal> <volume> 12, </volume> <year> 1996. </year> <title> [6] daemon9, route, and infinity. Project neptune. </title> <journal> Phrack Magazine, </journal> <volume> 7(48), </volume> <year> 1996. </year>
Reference-contexts: 1. Introduction Since September 1996, several dozen sites on the Internet have been subjected to a denial of service attack, popularly called SYN Flooding <ref> [4, 5, 20] </ref>. The attack exploits weaknesses in the TCP/IP (Transmission Control Protocol/Internet Protocol) protocol suite. This cannot be corrected without significant modifications to its protocols. These denial of service attacks can be launched with little effort. Presently, it is difficult to trace an attack back to its originator.
Reference: [7] <author> D. E. Eastlake, S. D. Crocker, and J. I. Schiller. </author> <title> RFC-1750 Randomness Recommendations for Security. </title> <institution> Network Working Group, </institution> <month> Dec. </month> <year> 1994. </year>
Reference-contexts: The obvious response of the attacker will be to vary the delay between successive SYN packets. Similarly, the random numbers used in many published exploitation routines are generated by cryptographically weak standard library routines. They do not follow good cryptographic practices as described in <ref> [7, 10, 13] </ref>. We could implement a number of algorithms that automatically detect and predict pseudo random number sequences generated by simple common generators and use predicted pseudorandom IP addresses to identify malicious packets quickly.
Reference: [8] <editor> J. Fairlane. Flood warning. </editor> <volume> 2600, 13(2) </volume> <pages> 6-11, </pages> <month> Summer </month> <year> 1996. </year>
Reference-contexts: We classify three possible modes of source address allocation: The attacker can be using a single address, a short list of addresses, or no list at all 2 . Single address: The attack scripts published in the hacker magazines Phrack [6] and 2600 <ref> [8] </ref> take as a parameter a single spoofed address that is used as the source address of all SYN packets. In the absence of any defense, this mode of attack is as effective as the other three modes described.
Reference: [9] <author> P. Ferguson. </author> <title> Network ingress filtering. Internet draft, Cisco Systems, </title> <publisher> Inc., </publisher> <month> September </month> <year> 1996. </year>
Reference-contexts: One vendor recommends upgrading systems to a minimum of 128 MB RAM to allow them to cope with attacks. 4.1.2 Router Configuration Improvements The measures proposed in the first reactions to the recent attacks [4], as well as several other sources <ref> [1, 9] </ref>, attempt to make it difficult for packets with spoofed source addresses to traverse routers. The solutions proposed can be summarized as follows: 1. Configure external interfaces on routers to block packets that have source addresses from the internal network. 2. <p> Infrastructure Improvements Router configurations can be improved if the address spaces reachable over their various interfaces are disjoint and well-defined <ref> [9] </ref>. This is the case for routers that attach an organization or a local ISP to a backbone network. The address prefixes separate the inside and the outside. An example where this scheme is deployed is the international telephone system.
Reference: [10] <author> S. Garfinkel and G. Spafford. </author> <title> Practical UNIX & Internet Security. </title> <publisher> O'Reilley & Associates, Inc. </publisher> <address> Sebastopol, CA., </address> <note> second edition, </note> <year> 1996. </year>
Reference-contexts: The obvious response of the attacker will be to vary the delay between successive SYN packets. Similarly, the random numbers used in many published exploitation routines are generated by cryptographically weak standard library routines. They do not follow good cryptographic practices as described in <ref> [7, 10, 13] </ref>. We could implement a number of algorithms that automatically detect and predict pseudo random number sequences generated by simple common generators and use predicted pseudorandom IP addresses to identify malicious packets quickly.
Reference: [11] <author> M. Graff. </author> <title> Sun Security Bulletin 00136. </title> <address> Mountain View, CA, </address> <month> Oct. </month> <year> 1996. </year>
Reference-contexts: These measures have been suggested by different sources <ref> [11] </ref>, and can be summarized as: 1. Reduce the timeout period from the default to a short time, e.g., 10 seconds. This helps in pruning half open connections from the TCP queue. 2. Significantly increase the length of the backlog queue from the default (see Table 1).
Reference: [12] <institution> Internet Security Systems. </institution> <note> RealSecure User's Guide and Reference Manual, 1996. Available at http://iss.net/RealSecure. </note>
Reference-contexts: On typical multiple access local area networks such a tool can only be reactive in character, because it has no capability of blocking any offensive traffic as a firewall does. At the time of this writing, we know of one publicly available tool <ref> [12] </ref> that is claimed to perform active monitoring (other than our tool called synkill). According to user-definable parameters, the program monitors the local network for SYN packets that are not acknowledged after a certain period of time, and frees the allocated resources by sending matching RST packets.
Reference: [13] <author> D. E. Knuth. </author> <booktitle> The Art of Computer Programming, </booktitle> <volume> Volume 2. </volume> <publisher> Addison-Wesley Publishing Company, Inc., </publisher> <address> second edition, </address> <year> 1981. </year>
Reference-contexts: The obvious response of the attacker will be to vary the delay between successive SYN packets. Similarly, the random numbers used in many published exploitation routines are generated by cryptographically weak standard library routines. They do not follow good cryptographic practices as described in <ref> [7, 10, 13] </ref>. We could implement a number of algorithms that automatically detect and predict pseudo random number sequences generated by simple common generators and use predicted pseudorandom IP addresses to identify malicious packets quickly.
Reference: [14] <author> L. S. </author> <title> Laboratories. </title> <institution> Livermore Software Labs. Announces Defense agains SYN Flooding Attacks, </institution> <month> October </month> <year> 1996. </year>
Reference-contexts: Firewall Approach As many sites connected to the Internet are already somewhat protected by firewalls, it makes sense to try to use firewalls to protect against SYN flooding. Several firewall vendors have already made products available to increase protection against the attacks <ref> [14, 15] </ref>, and some other solutions have been proposed.
Reference: [15] <author> C. P. S. T. Ltd. </author> <title> TCP SYN Flooding Attack and the FireWall-1 SYNDefender, </title> <month> October </month> <year> 1996. </year>
Reference-contexts: Firewall Approach As many sites connected to the Internet are already somewhat protected by firewalls, it makes sense to try to use firewalls to protect against SYN flooding. Several firewall vendors have already made products available to increase protection against the attacks <ref> [14, 15] </ref>, and some other solutions have been proposed.
Reference: [16] <author> J. Postel. </author> <title> RFC-791 Internet Protocol. </title> <institution> Information Science Institute, University of Southern California, </institution> <address> CA, </address> <month> Sept. </month> <year> 1981. </year>
Reference-contexts: Sections 7 and 8 outline future work issues and present conclusions. 2. Background We will provide a brief description of the features of the TCP/IP protocol suite that facilitate this attack. For further details see <ref> [2, 16, 17] </ref>. 2.1. Internet Protocol The Internet Protocol (IP) is the standard network layer protocol of the Internet that provides an unreliable, connection-less, best-effort packet delivery service. IP defines the basic unit of data transfer used throughout an IP network, called a datagram.
Reference: [17] <author> J. Postel, </author> <title> editor. RFC-793 Transmission Datagram Protocol. </title> <institution> Information Sciences Institute, USC, </institution> <address> CA, </address> <month> Sept. </month> <year> 1981. </year>
Reference-contexts: Sections 7 and 8 outline future work issues and present conclusions. 2. Background We will provide a brief description of the features of the TCP/IP protocol suite that facilitate this attack. For further details see <ref> [2, 16, 17] </ref>. 2.1. Internet Protocol The Internet Protocol (IP) is the standard network layer protocol of the Internet that provides an unreliable, connection-less, best-effort packet delivery service. IP defines the basic unit of data transfer used throughout an IP network, called a datagram.
Reference: [18] <author> Y. Rekhter, B. Moskowitz, D. Karrenberg, and G. de Groot. </author> <title> RFC-1597 Address Allocation for Private Internets. </title> <institution> Network Working Group, </institution> <month> Mar. </month> <year> 1994. </year>
Reference-contexts: * process administrative input (asynchronously) * handle expiry events (asynchronously) * handle staleness events (asynchronously) * send RST for all impossible addresses (e.g., net 0.0.0.0 or 127.0.0.0) * send ACK to complete observed SYN+ACK connec tions * send RST for all evil addresses (e.g., nets 10.0.0.0, 172.16.0.0, and 192.168.0.0; see <ref> [18] </ref>) sending ACK packets. ACK packet to complete the connection. After expiry has passed, synkill generates a RST. 5.1.3 State Machine After the preprocessing steps are taken, synkill operates as a state machine (see Figure 12).
Reference: [19] <author> R. W. Stevens and G. R. Wright. </author> <title> TCP/IP Illustrated, </title> <booktitle> Volume 2, The Implementation. </booktitle> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1995. </year>
Reference-contexts: S i acknowledges D's packet in the final message of the three-way handshake: ACK y+1 . 2.2.2 TCP Data Structures For any TCP connection, under BSD style network code, there are three memory structures that need to be allocated by both endpoints (See <ref> [19] </ref>). The socket structure (socket) holds information related to the local end of the communication link: protocol used, state information, addressing information, connection queues, buffers and flags.
Reference: [20] <author> B. Ziegler. </author> <title> Savvy Hacker Tangles Web For Net Host. </title> <journal> The Wall Street Journal, Sep. </journal> <volume> 12, </volume> <year> 1996. </year>
Reference-contexts: 1. Introduction Since September 1996, several dozen sites on the Internet have been subjected to a denial of service attack, popularly called SYN Flooding <ref> [4, 5, 20] </ref>. The attack exploits weaknesses in the TCP/IP (Transmission Control Protocol/Internet Protocol) protocol suite. This cannot be corrected without significant modifications to its protocols. These denial of service attacks can be launched with little effort. Presently, it is difficult to trace an attack back to its originator.
References-found: 19

