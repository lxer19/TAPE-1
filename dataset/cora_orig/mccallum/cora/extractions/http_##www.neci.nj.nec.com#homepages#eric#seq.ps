URL: http://www.neci.nj.nec.com/homepages/eric/seq.ps
Refering-URL: http://www.neci.nj.nec.com/homepages/eric/
Root-URL: 
Title: DNA Sequences Useful for Computation  
Author: Eric B. Baum 
Address: 4 Independence Way Princeton, NJ 08540  
Affiliation: NEC Research Institute  
Abstract: Recent proposals for DNA based computing [1], [2], [3] encode Boolean vector component values with sequences of DNA. It has previously been assumed that sufficient length random subsequences could be used to encode component values. However use of such subsequences will inadvertently result in long complementary subsequences. Complementary subsequences of sufficient length would stick to each other and cause mistakes or delays in computation. We suggest some constraints on DNA subsequences to be used in encodings, and describe maximal sets of subsequences satisfying these constraints. A seminal paper of Adleman[1] recently sparked growing interest in the use of DNA and the methods of molecular biology to do computation. Adleman's approach required the encoding of computer science problems into DNA sequences, and relied heavily on "extraction" of sequences containing a particular subsequence by use of a complementary subsequence. Subsequently Lipton[2] proposed an approach for using DNA to solve Satisfiability and other problems in the computational class NP. Lipton proposed a particular encoding of Boolean vectors and relied on similar extraction operations using complementary subsequences. Baum proposed to use a similar encoding, and some variants, for Content Addressable memories[3]. Several other proposed computer algorithms rely on similar encodings and methods[4],[5]. For each of these proposals, a set of DNA subsequences must be chosen. Practical considerations will force these subsequences to satisfy certain requirements. Lipton and Adleman suggested using random subsequences. However, practical requirements impose constraints that can not be met by random sequences, and it is not a priori obvious that they can be satisfied at all. This paper describes such constraints and proposes sets of subsequences which satisfy them. For concreteness we briefly review the encoding of Lipton[2]. One wishes to encode the Boolean vectors f0; 1g n , where n is about 60. For each i = 1; :::; n, one chooses two subsequences of DNA X i and Y i , corresponding respectively to a 0 or a 1 in the ith component. A vector in f0; 1g n is then encoded by the concatenation of the appropriate subsequences, perhaps spaced by a fixed subsequence, or a subsequence corresponding to the number of the component 1 . This evidently requires 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Adleman, L. M., </author> <title> "Molecular computation of solutions to combinatorial problems", </title> <note> Science Vol 266 pp 1021-1024 (1994). </note>
Reference-contexts: 1 Given a directed graph, Adleman <ref> [1] </ref> described a procedure for constructing an associated set of DNA molecules by mixing in subsequences corresponding to all nodes in his graph, and subsequences corresponding to all edges, which served to splint the node sequences together. <p> Achieving low k values is a difficult constraint. If suitable subsequences can not be found, the entire enterprise of DNA based computing along the lines discussed to date is potentially in jeopardy. Previous authors (e.g. <ref> [1] </ref>, [2]) had noted that by using sufficiently long random sequences of bases as component subsequences X i , the base itself would not appear. However if complementary subsequences of a finite length k + 1 may stick, it is no help that the whole sequence is not present.
Reference: [2] <author> Lipton, R. </author> <title> J.,"Speeding up computations via molecular biology", </title> <booktitle> Science Vol 268, </booktitle> <month> pp542-544 </month> <year> (1995). </year>
Reference-contexts: 1 Given a directed graph, Adleman [1] described a procedure for constructing an associated set of DNA molecules by mixing in subsequences corresponding to all nodes in his graph, and subsequences corresponding to all edges, which served to splint the node sequences together. Lipton <ref> [2] </ref> views the encoding of Boolean vectors as a version of Adleman's directed graph construction for a certain fixed graph. In this view, each spacer subsequence must be distinct, or Lipton's graph would collapse, with all those nodes of degree four assigned the identical sequence being identified. <p> Achieving low k values is a difficult constraint. If suitable subsequences can not be found, the entire enterprise of DNA based computing along the lines discussed to date is potentially in jeopardy. Previous authors (e.g. [1], <ref> [2] </ref>) had noted that by using sufficiently long random sequences of bases as component subsequences X i , the base itself would not appear. However if complementary subsequences of a finite length k + 1 may stick, it is no help that the whole sequence is not present.
Reference: [3] <author> Baum, E. B., </author> <title> "Building an associative memory vastly larger than the brain", </title> <note> Science Vol 268,pp583-585 (1995). </note>
Reference: [4] <author> Boneh, D., C. Dunworth, R. Lipton, J. Sgall, </author> <title> "On the computational power of DNA", </title> <type> preprint, </type> <note> available at http://www.CS.Princeton.EDU/ dabo/biocomp.html. 5 </note>
Reference: [5] <author> Boneh, D., C. Dunworth, R. Lipton, </author> <title> "Breaking DES using a molecular computer" preprint, </title> <note> available at http://www.CS.Princeton.EDU/ dabo/biocomp.html. 6 </note>
References-found: 5

