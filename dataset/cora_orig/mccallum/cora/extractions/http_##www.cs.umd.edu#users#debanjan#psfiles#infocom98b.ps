URL: http://www.cs.umd.edu/users/debanjan/psfiles/infocom98b.ps
Refering-URL: http://www.cs.umd.edu/users/debanjan/pages/onepage.html
Root-URL: 
Email: fbasturk,rengel,haas,kandlur,vperis,debanjang@watson.ibm.com  
Phone: Phone: (914) 784-6625 Fax: (914) 784-6205  
Title: Using Network Layer Anycast for Load Distribution in the Internet  
Author: E. Basturk R. Engel R. Haas D. Kandlur V. Peris D. Saha 
Keyword: anycast, load distribution, Internet, routing, world-wide web  
Address: Yorktown Heights, NY 10598  
Affiliation: zIBM T.J. Watson Research Center  
Abstract: In the Internet, when a unicast IP address is shared by many hosts, it is known as an anycast address. In contrast to multicast, a packet destined to an anycast address is forwarded to any one member of the anycast group. In this paper, we investigate how the IP anycast service can be exploited by hosts connected to the Internet without significantly impacting the routing and protocol processing infrastructure already in place. In particular, we study how routers running RIP and OSPF manage routes and forward packets to anycast destinations. We propose possible enhancements to routing and forwarding to fully exploit the potential of the anycast service. We also discuss changes required in the host protocol stack which would enable applications to transparently use the anycast service. More specifically, we propose a scheme that limits the required changes to the IP layer processing and describe its implementation in the AIX TCP/IP stack. Finally we consider an application example where anycast communication is used to distribute load among a set of mirror web sites. Using traces from the IBM Olympic web site we compare several different load distribution schemes, both in terms of number of connections served as well as number of bytes transferred. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Atkinson. </author> <title> RFC 1825: Security architecture for the Internet Protocol, </title> <month> August </month> <year> 1995. </year>
Reference-contexts: Currently, the issue of security in the Internet is being widely discussed in the scientific community and there are several standardization efforts in place at the IETF. End-to-End security can be provided both at the IP layer <ref> [1] </ref> as well as the transport layer [13]. In conjunction with any of these security mechanisms source routed packets provide the same level of security as regular IP packets. Another potential problem with source routing is the overhead of processing IP options at the intermediate routers.
Reference: [2] <author> H. Balakrishnan, M. Stemm, S. Seshan, and R. H. Katz. </author> <title> Analyzing stability in wide-area network performance. </title> <booktitle> In SIGMETRICS'97, </booktitle> <address> Seattle, </address> <month> June </month> <year> 1997. </year>
Reference-contexts: Anycast addresses can be used to efficiently distribute load across the different links in the network. We outline some simple policies that can be implemented in routers to effectively provide load distribution among different servers. With the help of traces gathered from the IBM Olympic Web site <ref> [2] </ref>, we demonstrate how these simple policies fare in the case of distributing a large number of web accesses across a few web servers. Traditionally, the IP service is only limited to delivering datagrams to end-hosts without considering how the applications use them. <p> Note that in all the three cases, the router need not maintain any connection state. We use the tcpdump traces collected from the Official 1996 Olympic Web Server <ref> [2] </ref> as the traffic profile for this experiment. Traces were collected for approximately 2 weeks in 20-minute segments. The entire trace consists of approximately 60 million HTTP requests, from about 725,000 clients.
Reference: [3] <author> S. Bellovin. </author> <title> Security problems in the TCP/IP protocol suite. </title> <journal> Computer Communication Review, </journal> <month> April </month> <year> 1989. </year>
Reference-contexts: However, source routing is not the only way to divert packets to a malicious host; the propagation of incorrect routing information or the use of ICMP redirect messages are examples of other possible attacks <ref> [3] </ref>. In fact it is well understood that reliance on the source address in a packet for any form of authentication can be extremely dangerous [3]. <p> divert packets to a malicious host; the propagation of incorrect routing information or the use of ICMP redirect messages are examples of other possible attacks <ref> [3] </ref>. In fact it is well understood that reliance on the source address in a packet for any form of authentication can be extremely dangerous [3]. Currently, the issue of security in the Internet is being widely discussed in the scientific community and there are several standardization efforts in place at the IETF. End-to-End security can be provided both at the IP layer [1] as well as the transport layer [13].
Reference: [4] <author> S. Bhattacharjee, M. H. Ammar, E. W. Zegura, V. Shah, and Z. Fei. Application-layer anycasting. </author> <booktitle> In Proceedings of the IEEE INFOCOM '97, </booktitle> <year> 1997. </year>
Reference-contexts: The Distributed Director [8] as well as the proposed Host Proximity Service (HOPS) [14] direct the client to the "closest" server, where distance is measured with respect to some metric based on network topology. Along the same lines <ref> [4] </ref> proposes an application layer anycast service to support replicated services. Both Distributed Director and HOPS servers interact with the routing protocols to pre-compute a measure of the distance of the client from each of the candidate servers. <p> A Domain Name Server (DNS) can resolve the same name to different IP addresses for the purpose of load distribution. Round Robin DNS and application layer anycasting <ref> [4] </ref> are examples of this scheme. The problem with these schemes is that intermediate name servers cache the resolved name-to-IP address mapping. If these mappings are cached for a long time, fine grain load distribution becomes difficult.
Reference: [5] <author> K. Birman and T. Joseph. </author> <title> Reliable communication in the presence of failures. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 5 </volume> <pages> 47-76, </pages> <month> February </month> <year> 1987. </year>
Reference: [6] <author> T. Brisco. </author> <title> RFC 1794: DNS support for load balancing, </title> <month> April </month> <year> 1995. </year>
Reference-contexts: Naming mechanisms such as the Domain Name System (DNS) [23] provide mappings from host 1 names to their IP addresses. DNS can been used to map virtual host names (service names) to a set of IP addresses that correspond to the servers providing the replicated service <ref> [6] </ref>. Take the case of a client making a Web access with a single name that is associated with a set of HTTP servers. When the client sends a name resolution query the DNS server maps the name to any one HTTP server.
Reference: [7] <author> B. Chinoy. </author> <title> Dynamics of internet routing information. </title> <booktitle> In Proceedings of SIGCOMM'93, </booktitle> <pages> pages 45-52, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: This could result in a disruption of all the flows that share a multipath route. Typically, route changes do not occur very frequently in the Internet and so this disruption can be assumed to be fairly minimal, especially for short-lived connections <ref> [27, 7] </ref> In Section 5 we examine the load-balancing performance of each of these schemes with the help of a trace-based simulation, with traces collected from the 1996 Olympic Web server. 3.3 Link-layer address resolution mechanisms In this section we focus on how layer 2 mechanisms like IPv6 Neighbor Discovery [25]
Reference: [8] <institution> Cisco distributed director. </institution> <note> White Paper, 1996. Cisco Systems. </note>
Reference-contexts: This will distribute the client requests to the different HTTP servers and share the load among the servers. Rather than a simple Round Robin scheme the resolution process may also be guided by network and server load. The Distributed Director <ref> [8] </ref> as well as the proposed Host Proximity Service (HOPS) [14] direct the client to the "closest" server, where distance is measured with respect to some metric based on network topology. Along the same lines [4] proposes an application layer anycast service to support replicated services. <p> The Host Proximity 16 Service (HOPS) and Distributed Director alleviate a part of this problem by participating in routing protocols and by using other mechanisms to monitor server and network loads <ref> [8, 14] </ref>. However, for fine grain load balancing, they require the clients to consult the HOPS server (or the distributed director), each time a new connection is initiated. This essentially adds an extra round trip time to the HOPS server to the connection setup time.
Reference: [9] <author> P. Danzig, D. Delucia, and K. Obracza. </author> <title> An analysis of wide-area name server traffic. </title> <booktitle> In Proceedings of ACM SIGCOMM'92, </booktitle> <address> Baltimore, MD, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: While these approaches have some attractive features, they disable the caching mechanism of DNS and therefore are likely to increase the DNS query load. Past studies have shown that DNS related traffic is not insignificant <ref> [9] </ref>. Moreover, in order to provide appropriate responses for distributed replicas, the name server has to obtain fairly accurate network topology information. An alternative approach to supporting replicated services is with the use of anycast addresses.
Reference: [10] <author> P. Danzig, D. Delucia, and K. Obracza. </author> <title> Massively replicating services in wide-area internetworks. </title> <type> Technical report, </type> <institution> University of Southern California, </institution> <year> 1994. </year>
Reference: [11] <author> S. Deering and R. Hinden. </author> <title> RFC 1883: Internet protocol, version 6 (IPv6) specification, </title> <month> January </month> <year> 1996. </year>
Reference-contexts: They define IP anycasting as: "a service which provides a stateless best effort delivery of an anycast datagram to at least one host, and preferrably only one host, which serves the anycast address". Anycasting is also defined in IP version 6 (IPv6) albeit with some minor differences <ref> [11] </ref>. In the following we clarify some of the issues that are part of the anycast service definition, namely: (1) identification of an anycast datagram, (2) forwarding of an anycast datagram, and (3) advertisement of anycast servers. <p> It is recommended that the router picks any one of these possible next hops to forward this datagram. Since it is possible for unicast IP packets to be duplicated, it is possible for an anycast datagram to be delivered to multiple hosts. However, the specifications <ref> [11, 26] </ref> make it clear that the intended behavior is for anycast datagrams to be delivered to a single host. Clearly, members of an anycast group have to indicate to the routers that they wish to receive anycast datagrams for a specific address. <p> To improve performance some routers treat packets with options with a lower priority than packets without options. This problem however has been corrected in IPv6 <ref> [11] </ref>. IPv6 defines a specific extension header for source routing. An intermediate router is not required to look at this extension header unless the destination address in the packet matches one of its interfaces. The solution proposed in Section 4 inserts a source route that only includes the end host.
Reference: [12] <author> D. Dias, W. Kish, R. Muhkerjee, and R. Tewari. </author> <title> A scalable and highly available web server. </title> <booktitle> In Proceedings of the IEEE Computer Conference (COMPCON), </booktitle> <address> Santa Clara, </address> <month> March </month> <year> 1996. </year> <month> 20 </month>
Reference-contexts: This method requires the router to keep track of the active flows that are passing through it. On the other hand, packet-based forwarding does not require any state to be maintained at the router; the router simply forwards each packet independently. The Connection Router approach described in <ref> [12] </ref> is a good example of a flow-based forwarding scheme. A Connection Router maintains a list of all the active flows, typically TCP connections, that are passing through it. <p> It maintains a view of the load on each server in order to forward new connections to the most appropriate server. One can combine a DNS based scheme with connection routing <ref> [12] </ref> front-ends in order to get the best of both approaches. However, this does not solve the problem of locating the closest server for the requesting client.
Reference: [13] <author> T. Dierks, P. L. Karlton, A. O. Freier, and C. Kocher. </author> <title> The TLS protocol, </title> <note> version 1.0. draft-ietf-tls-protocol-03.txt, </note> <month> May </month> <year> 1997. </year> <title> Work in progress. </title>
Reference-contexts: Currently, the issue of security in the Internet is being widely discussed in the scientific community and there are several standardization efforts in place at the IETF. End-to-End security can be provided both at the IP layer [1] as well as the transport layer <ref> [13] </ref>. In conjunction with any of these security mechanisms source routed packets provide the same level of security as regular IP packets. Another potential problem with source routing is the overhead of processing IP options at the intermediate routers.
Reference: [14] <author> P. Francis. </author> <title> A call for an internet-wide host proximity service (hops). </title> <note> URL: http://www.ingrid.org/hops/wp.html, 1996. </note>
Reference-contexts: Rather than a simple Round Robin scheme the resolution process may also be guided by network and server load. The Distributed Director [8] as well as the proposed Host Proximity Service (HOPS) <ref> [14] </ref> direct the client to the "closest" server, where distance is measured with respect to some metric based on network topology. Along the same lines [4] proposes an application layer anycast service to support replicated services. <p> The Host Proximity 16 Service (HOPS) and Distributed Director alleviate a part of this problem by participating in routing protocols and by using other mechanisms to monitor server and network loads <ref> [8, 14] </ref>. However, for fine grain load balancing, they require the clients to consult the HOPS server (or the distributed director), each time a new connection is initiated. This essentially adds an extra round trip time to the HOPS server to the connection setup time.
Reference: [15] <author> R. Guerin, S. Kamat, A. Orda, T. Przygienda, and D. Williams. </author> <title> QoS routing mechanisms and OSPF extensions. </title> <address> draft-guerin-qos-routing-ospf-01.txt, </address> <month> March </month> <year> 1997. </year> <title> Work in progress. </title>
Reference-contexts: The basic idea is to pin the end-host to which the first packet of the flow has been sent. This is very similar to route pinning in the context of QoS routing <ref> [15] </ref>. The pinning is done by inserting a loose source route option in all subsequent packets from the same flow. We have implemented these modifications in the TCP/IP protocol stack of AIX 4.2. In this paper we explore some techniques for providing anycast services in the Internet.
Reference: [16] <author> J. Guyton and M. Schwartz. </author> <title> Locating nearby copies of replicated internet servers. </title> <booktitle> In Proceedings of ACM SIGCOMM'95, </booktitle> <pages> pages 288-298, </pages> <year> 1995. </year>
Reference: [17] <author> C. Hedrick. </author> <title> RFC 1058: Routing Information Protocol, </title> <month> June </month> <year> 1988. </year>
Reference-contexts: Since the notion of anycasting presumes that there are possibly multiple end hosts with the same anycast address, we need to consider how this might affect the existing routing protocols. In this context, we examine two common routing protocols, RIP (Routing Information Protocol) <ref> [17, 22] </ref> and OSPF (Open Shortest Path First) [24] and discuss how they can be used to propagate the information about routes to several different end hosts that are sharing an anycast address.
Reference: [18] <author> C. Hedrick. </author> <title> An introduction to IGRP. </title> <type> Cisco Technical Report #1, </type> <month> August </month> <year> 1991. </year>
Reference-contexts: One can enhance the structure of the metric used by RIP (hop-count) to include bandwidth, delay, channel occupancy and reliability. This is done by a more sophisticated distance-vector routing protocol called IGRP (Inter-Gateway Routing Protocol <ref> [18] </ref>). IGRP allows packets to be forwarded among multiple equal-cost paths. Two paths are considered equal-cost if their composite metric is equal, where composite metric is defined as a combination of the various components of the metric.
Reference: [19] <author> C. Huitema. </author> <title> Routing in the Internet. </title> <publisher> Prentice-Hall, </publisher> <year> 1995. </year>
Reference: [20] <author> J. L. R. Ford and D. R. Fulkerson. </author> <title> Flows in Networks. </title> <publisher> Princeton University Press, </publisher> <address> Princeton, NJ, </address> <year> 1962. </year>
Reference-contexts: We examine this in the context of RIP and OSPF as they are representative of two distinct families of routing protocols namely distance-vector and link-state protocols. Distance-vector routing algorithms are based on a distributed shortest path computation as described by Ford-Fulkerson <ref> [20] </ref>. The basic idea is that each router advertises all the IP destinations (or subnets) that it can reach with an associated cost, to all its neighbors.
Reference: [21] <author> M. Leech, M. Ganis, Y. Lee, R. Kuris, D. Koblas, and L. Jones. </author> <note> RFC 1928: SOCKS protocol version 5, </note> <month> April </month> <year> 1996. </year>
Reference-contexts: In order to increase service availability and provide load distribution, it is now common practice to replicate servers that are providing these services. Examples include WWW "mirror" sites, multiple SOCKS servers <ref> [21] </ref> and proxy servers. These replicated services can be classified into (1) local replicas, and (2) distributed replicas. Local replicas, such as those provided on a cluster of workstations, may be contained within a single subnetwork. On the other hand, distributed replicas could be geographically dispersed across the Internet.
Reference: [22] <author> G. Malkin. </author> <note> RFC 1388: RIP version 2 carrying additional information, </note> <month> January </month> <year> 1993. </year>
Reference-contexts: Since the notion of anycasting presumes that there are possibly multiple end hosts with the same anycast address, we need to consider how this might affect the existing routing protocols. In this context, we examine two common routing protocols, RIP (Routing Information Protocol) <ref> [17, 22] </ref> and OSPF (Open Shortest Path First) [24] and discuss how they can be used to propagate the information about routes to several different end hosts that are sharing an anycast address.
Reference: [23] <author> P. Mockapetris. </author> <title> RFC 1035: Domain names | implementation and specification, </title> <month> November </month> <year> 1987. </year>
Reference-contexts: In the Internet it is fairly typical for a server to be identified by a name as opposed to a network address. Naming mechanisms such as the Domain Name System (DNS) <ref> [23] </ref> provide mappings from host 1 names to their IP addresses. DNS can been used to map virtual host names (service names) to a set of IP addresses that correspond to the servers providing the replicated service [6].
Reference: [24] <author> J. Moy. </author> <note> RFC 1583: OSPF version 2, </note> <month> March </month> <year> 1994. </year>
Reference-contexts: In this context, we examine two common routing protocols, RIP (Routing Information Protocol) [17, 22] and OSPF (Open Shortest Path First) <ref> [24] </ref> and discuss how they can be used to propagate the information about routes to several different end hosts that are sharing an anycast address. We use the term multipath route to denote the fact that a router has multiple routes to the same destination.
Reference: [25] <author> T. Narten, E. Nordmark, and W. Simpson. </author> <note> RFC 1970: Neighbor discovery for IP Version 6 (IPv6), </note> <month> August </month> <year> 1996. </year>
Reference-contexts: We outline a solution for both the IPv4 Address Resolution Protocol (ARP) [28], and the IPv6 Neighbor Discovery Protocol (IPv6 ND) <ref> [25] </ref>. 3.1 Routing Requirements Since anycast addresses are no different from unicast addresses it is commonly believed that anycasting does not require any changes to the routing protocols. But having multiple hosts with the same IP (anycast) address may be a problem for the routing protocols. <p> [27, 7] In Section 5 we examine the load-balancing performance of each of these schemes with the help of a trace-based simulation, with traces collected from the 1996 Olympic Web server. 3.3 Link-layer address resolution mechanisms In this section we focus on how layer 2 mechanisms like IPv6 Neighbor Discovery <ref> [25] </ref> or IPv4 ARP [28] can be used to reach anycast destinations. This is especially useful when multiple anycast servers with the same anycast address are connected to a shared medium like Ethernet, as shown in Figure 2.
Reference: [26] <author> C. Partridge, T. Mendez, and W. Milliken. </author> <type> RFC 1546: </type> <institution> Host anycasting service, </institution> <month> November </month> <year> 1993. </year>
Reference-contexts: We conclude in Section 6 with a brief discussion. 2 Anycast Communication in the Internet The notion of anycasting in the Internet was first introduced by an RFC produced by the Internet Research Task Force <ref> [26] </ref>. The authors of [26] motivated the need for an anycast address by giving examples of clients trying to locate a server that is closest to them. <p> We conclude in Section 6 with a brief discussion. 2 Anycast Communication in the Internet The notion of anycasting in the Internet was first introduced by an RFC produced by the Internet Research Task Force <ref> [26] </ref>. The authors of [26] motivated the need for an anycast address by giving examples of clients trying to locate a server that is closest to them. <p> In both IPv4 and IPv6 an anycast datagram is no different from a regular IP datagram. The destination address field in the datagram corresponds to an anycast address. In <ref> [26] </ref> the authors suggest carving out the IP address space for a separate class of anycast addresses. They contend that this will reduce the risk of applications mistakenly failing to recognize anycast addresses. <p> It is recommended that the router picks any one of these possible next hops to forward this datagram. Since it is possible for unicast IP packets to be duplicated, it is possible for an anycast datagram to be delivered to multiple hosts. However, the specifications <ref> [11, 26] </ref> make it clear that the intended behavior is for anycast datagrams to be delivered to a single host. Clearly, members of an anycast group have to indicate to the routers that they wish to receive anycast datagrams for a specific address. <p> In the case of anycast servers, the desired behavior is of course to switch promptly from one server to another when the former goes down. The only way to achieve this is to use small timers <ref> [26] </ref>. We see that IPv4 ARP and IPv6 ND differ only in how promptly they can discover that a destination has become unreachable. ND uses a dedicated mechanism sending probe messages for that purpose, whereas ARP simply uses timers. <p> In this section we discuss modifications to protocol processing at the host for this purpose. In <ref> [26] </ref> Partridge et al. suggest a modification to TCP that would allow all packets belonging to a TCP connection to be delivered to the same host even when the destination address is an anycast address.
Reference: [27] <author> V. Paxson. </author> <title> Measurements and Analysis of End-to-End Internet Dynamics. </title> <type> PhD thesis, </type> <institution> Computer Science Division, University of California, Berkeley, </institution> <month> April </month> <year> 1997. </year>
Reference-contexts: This could result in a disruption of all the flows that share a multipath route. Typically, route changes do not occur very frequently in the Internet and so this disruption can be assumed to be fairly minimal, especially for short-lived connections <ref> [27, 7] </ref> In Section 5 we examine the load-balancing performance of each of these schemes with the help of a trace-based simulation, with traces collected from the 1996 Olympic Web server. 3.3 Link-layer address resolution mechanisms In this section we focus on how layer 2 mechanisms like IPv6 Neighbor Discovery [25]
Reference: [28] <author> D. Plummer. </author> <title> RFC 826: Ethernet Address Resolution Protocol: Or converting network protocol addresses to 48.bit ethernet address for transmission on Ethernet hardware, </title> <month> November </month> <year> 1982. </year>
Reference-contexts: In this case, it is the link-layer address resolution mechanism that has to recognize the presence of different anycast servers and consistently distribute anycast datagrams to each of them. We outline a solution for both the IPv4 Address Resolution Protocol (ARP) <ref> [28] </ref>, and the IPv6 Neighbor Discovery Protocol (IPv6 ND) [25]. 3.1 Routing Requirements Since anycast addresses are no different from unicast addresses it is commonly believed that anycasting does not require any changes to the routing protocols. <p> 5 we examine the load-balancing performance of each of these schemes with the help of a trace-based simulation, with traces collected from the 1996 Olympic Web server. 3.3 Link-layer address resolution mechanisms In this section we focus on how layer 2 mechanisms like IPv6 Neighbor Discovery [25] or IPv4 ARP <ref> [28] </ref> can be used to reach anycast destinations. This is especially useful when multiple anycast servers with the same anycast address are connected to a shared medium like Ethernet, as shown in Figure 2.
Reference: [29] <author> M. Shand and M. Thomas. </author> <title> Multi-homed host support in IPv6. </title> <type> Internet Draft, </type> <month> June </month> <year> 1997. </year>
Reference-contexts: In a client/server model, both client (initiator) and server (recipient) must be changed, which is not desirable in an infrastructure such as the world-wide web, where the number of clients is much larger than the number of servers. Another approach suggested in <ref> [29] </ref>, in the context of multi-homing can also be adapted to bind an anycast address to a unicast address.
Reference: [30] <author> J. Veizades, E. Guttman, C. Perkins, and S. Kaplan. </author> <title> RFC 2165: Service Location Protocol, </title> <month> June </month> <year> 1997. </year>
References-found: 30

