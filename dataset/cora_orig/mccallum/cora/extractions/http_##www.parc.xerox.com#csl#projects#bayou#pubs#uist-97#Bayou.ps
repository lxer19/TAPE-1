URL: http://www.parc.xerox.com/csl/projects/bayou/pubs/uist-97/Bayou.ps
Refering-URL: http://www.parc.xerox.com/csl/projects/bayou/
Root-URL: http://www.parc.xerox.com
Email: theimer-@parc.xerox.com  
Title: Designing and Implementing Asynchronous Collaborative Applications with Bayou Asynchronous systems, however, present a number of
Author: W. Keith Edwards, Elizabeth D. Mynatt, Karin Petersen, Mike J. Spreitzer, Douglas B. Terry, Marvin M. Theimer -kedwards, mynatt, petersen, spreitzer, terry, 
Keyword: computer-supported cooperative work, asynchronous interaction, distributed systems, Bayou.  
Note: own advantageusers can work when and where they please, without being constrained by the schedules or locations of others. This style of work, and the settings  Bayou is  
Address: 3333 Coyote Hill Road Palo Alto, CA 94304  
Affiliation: Xerox Palo Alto Research Center  
Abstract: This paper explores design issues for collaborative systems in general, and asynchronous systems in particular. We examine the reasons that users opt for asynchronous interaction, and the implications of those choices for designers of collaborative infrastructure and applications. We also present a system, called Bayou, designed to support data sharing by groups of individuals working together. In the following section, we discuss some of the characteristics of asynchronous work, and the properties of asynchronous work that make it desirable for many forms of collaboration. Next, we examine the impact of these characteristics on infrastructure and application designof necessity, any system for supporting asynchronous work must be informed by the properties of such work. ABSTRACT Asynchronous collaboration is characterized by the degree of independence collaborators have from one another. In particular, collaborators working asynchronously typically have little need for frequent and fine-grained coordination with one another, and typically do not need to be notified immediately of changes made by others to any shared artifacts they are working with. We present an infrastructure, called Bayou, designed to support the construction of asynchronous collaborative applications. Bayou provides a replicated, weakly-consistent, data storage engine to application writers. The system supports a number of mechanisms for leveraging application semantics; using these mechanisms, applications can implement complex conflict detection and resolution policies, and choose the level of consistency and stability they will see in their databases. We present a number of applications we have built or are building using the Bayou system, and examine how these take advantage of the Bayou architecture. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Baecker, R.M., Nastos, D., Posner, I.R., Mawby, K.L., </author> <title> The User-centered Iterative Design of Collaborative Writing Software. </title> <booktitle> Proceedings of the Conference on Human Factors in Computing Systems. </booktitle> <address> Amsterdam, The Netherlands: </address> <publisher> ACM. </publisher> <year> 1993. </year> <pages> pp. 399-405. </pages>
Reference-contexts: Applications in which the users share that thing at different times are called asynchronous. Synchronous applications, typified by such systems as ShrEdit [15][18] and SASSE <ref> [1] </ref>, are highly-interactive, real-time systems in which a group of possibly distributed users interact together to achieve some result. Much of the recent research into collaboration, with the exception of electronic mail [7] and occasionally group editing studies [17] has focused on new tools and techniques to support synchronous collaboration.
Reference: [2] <author> Bly, S.A., Harrison, S.R., and Irwin, S., </author> <title> Media Spaces: Bringing People Together in a Video, Audio, and Computing Environment. </title> <journal> Communications of the ACM, </journal> <volume> Vol. 36, No. </volume> <month> 1 (January </month> <year> 1993), </year> <pages> pp. 28-47. </pages>
Reference: [3] <author> Conklin, J., and Begeman, </author> <title> M.L. gIBIS: A Hypertext Tool for Exploratory Policy Discussion. </title> <booktitle> Proceedings of the Conference on Computer-Supported Cooperative Work (CSCW), </booktitle> <address> Portland, OR: </address> <publisher> ACM, </publisher> <year> 1988, </year> <pages> pp. 140-152. </pages>
Reference: [4] <author> Demers, A., Greene, D., Hauser, C., Irish, W., Larson, J. Shenker, S., Sturgis, H., Swinehart, D., and Terry, D. </author> <title> Epidemic Algorithms for Replicated Database Maintenance, </title> <booktitle> Proceedings of the Sixth Symposium on Principles of Distributed Computing, </booktitle> <address> Vancouver, BC, Canada, </address> <month> August </month> <year> 1987, </year> <pages> pp. 1-12. </pages>
Reference-contexts: Anti-entropy Policies. Anti-entropy is the pair-wise process by which the servers of two replicas bring each others databases up to date. During the anti-entropy process two servers exchange the sets of writes known to one server but not the other <ref> [4] </ref>. For a more detailed description of the reconciliation protocol and its performance, refer to [20]. Although not fully implemented yet, the Bayou model supports client-supplied anti-entropy policies.
Reference: [5] <author> Dourish, P., and Bly, S., </author> <title> Supporting Awareness in a Distributed Workgroup. </title> <booktitle> Proceedings of the ACM Conference on Human Factors in Computing Systems (CHI92), </booktitle> <address> Monterey, CA: </address> <publisher> ACM, </publisher> <pages> pp. 541-547. </pages>
Reference: [6] <editor> Edwards, W.K., and Mynatt, E.D., Timewarp: </editor> <title> Techniques for Autonomous Collaboration. </title> <booktitle> Proceedings of the ACM Conference on Human Factors in Computing Systems (CHI97), </booktitle> <address> Atlanta, GA: </address> <publisher> ACM, </publisher> <pages> pp. 218-225. </pages>
Reference-contexts: The same strategy could be used to trigger self-modifying data such as a word processor that automatically corrects spelling mistakes. Timewarp The Timewarp system is not an application, but rather another toolkit for building collaborative applications <ref> [6] </ref>. It is a higher level toolkit than Bayou, in the sense that it provides more functionality specifically designed to support collaboration. Timewarp provides mechanisms for awareness, coordination, multi-user access to data, and versioning.
Reference: [7] <author> Eveland, J.D., and Bikson, </author> <title> T.K., Work Group Structures and Computer Support: A Field Experiment. </title> <booktitle> Proceedings, ACM Conference on Computer-Supported Cooperative Work, </booktitle> <address> Portland, OR: </address> <publisher> ACM, </publisher> <year> 1988. </year>
Reference-contexts: Synchronous applications, typified by such systems as ShrEdit [15][18] and SASSE [1], are highly-interactive, real-time systems in which a group of possibly distributed users interact together to achieve some result. Much of the recent research into collaboration, with the exception of electronic mail <ref> [7] </ref> and occasionally group editing studies [17] has focused on new tools and techniques to support synchronous collaboration. Copyright 1997, Association for Computing Machinery. Published in Proceedings of Tenth ACM Symposium on User Interface Software and Technology (UIST97), Banff, Alberta, Canada. October 14-17, 1997. Then, we describe the Bayou infrastructure.
Reference: [8] <author> Galegher, J., and Kraut, R.E., </author> <title> Computer-Mediated Communication for Intellectual Teamwork: A Field Experiment in Group Writing. </title> <booktitle> In Proceedings of the ACM Conference on Computer-Supported Cooperative Work, </booktitle> <address> Los Angeles, CA: </address> <publisher> ACM, </publisher> <year> 1990, </year> <pages> pp. 65-78. </pages>
Reference: [9] <author> Golding, R., Long, D., and Wilkes, J. </author> <title> The RefDBMS Distributed Bibliographic Database System. </title> <booktitle> Proceedings of Winter USENIX Conference, </booktitle> <address> San Francisco, CA, </address> <month> January </month> <year> 1994, </year> <pages> pp. 47-62. </pages>
Reference-contexts: Collaborative Bibliographic Database BibDB is a multi-user shared bibliographic database that allows users to add and modify entries, and automatically generates citation keys that are used to refer to those entries. The system is conceptually similar to, but simpler than, bibliographic database systems like RefDBMS <ref> [9] </ref>. BibDB is perhaps an asynchronous application in its purest form: users of the system never see other users of the application. BibDB provides no awareness of others, even when several people are using the application at the same time.
Reference: [10] <author> Greenberg, S., and Marwood, D., </author> <title> Real Time Group-ware as a Distributed System: Concurrency Control and its Effect on the Interface. </title> <booktitle> Proceedings of the ACM Conference on Computer Supported Cooperative Work, </booktitle> <address> Chapel Hill, NC: </address> <publisher> ACM, </publisher> <month> Oct. </month> <pages> 22-26, </pages> <year> 1994. </year> <pages> pp. 207-217. </pages>
Reference: [11] <author> Grief, I., and Sarin, S. </author> <title> Data Sharing in Group Work, Computer-Supported Cooperative Work: A Book of Readings, </title> <editor> Irene Grief, ed. </editor> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann, </publisher> <year> 1988, </year> <pages> pp. 477-508. </pages>
Reference: [12] <author> Heidemann, J.S., Page, T.W, Guy, R.G., and Popek, G.J. </author> <title> Primarily Disconnected Operation: Experiences with Ficus, </title> <booktitle> Proceedings of Second Workshop on the Management of Replicated Data, </booktitle> <address> Monterey, CA, </address> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: Each write carries enough information so that a Bayou server can apply the writes it has received in the correct order without coordinating with any other server. Bayous Mechanisms for Application Semantics One feature that distinguishes Bayou from previous replicated storage systems including Ficus <ref> [12] </ref>, Coda [14][21], and Lotus Notes [13] is that applications can impose their own semantics on the operations executed at a replica. To this end, Bayou reads and writes are not the simple operations supported by most databases. <p> Mergeprocs support application-defined conflict resolution, meaning that conflicts are essentially handled through application code, even though that code is executed by the Bayou infrastructure itself. We shall see some examples of mergeprocs in our discussion of applications. Bayous use of mergeprocs differs from systems like Coda [14][21] and Ficus <ref> [12] </ref>, which also support application supplied conflict resolution, in that Bayou allows different resolution procedures to be associated with each individual write. Thus, Bayou provides applications with more fine-grained control over conflict handling.
Reference: [13] <author> Kalwell, L. Jr., Beckhardt, S., Halvorsen, T., Ozzie, R., and Greif, I., </author> <title> Replicated Document Management in a Group Communication System. </title> <booktitle> Proceedings of the ACM Conference on Computer-Supported Cooperative Work, </booktitle> <address> Portland, Oregon, </address> <month> September </month> <year> 1988. </year>
Reference-contexts: Such strongly-consistent schemes ensure that applications always see a consistent picture of the data. However, they do not support weakly-connected applications, and do not scale to the global applications envisioned by Bayou. Much like Lotus Notes <ref> [13] </ref>, Bayou applications are free to read and update replicas at will, without locking. Bayou guarantees that the distributed storage system will move toward eventual consistency by imposing a global order on write operations and by providing propagation guarantees. <p> Bayous Mechanisms for Application Semantics One feature that distinguishes Bayou from previous replicated storage systems including Ficus [12], Coda [14][21], and Lotus Notes <ref> [13] </ref> is that applications can impose their own semantics on the operations executed at a replica. To this end, Bayou reads and writes are not the simple operations supported by most databases.
Reference: [14] <author> Kistler, J.J., and Satyanarayanan. </author> <title> Disconnected Operation in the Coda File System. </title> <journal> ACM Transactions on Computer Systems 10(1) </journal> <pages> 3-25, </pages> <month> February </month> <year> 1992. </year>
Reference: [15] <author> McGuffin, Lola, and Olson, Gary, ShrEdit: </author> <title> A Shared Electronic Workspace, </title> <type> CSMIL Technical Report, </type> <institution> Cognitive Science and Machine Intelligence Laboratory, University of Michigan, </institution> <year> 1992. </year>
Reference: [16] <author> Metricom Inc. </author> <note> http://www.metricom.com. </note>
Reference-contexts: Such a system would most probably operate as a replication layer on top of an existing relational database management system. We are also experimenting with wireless connectivity for servers and clients running on a laptop using the Metricom <ref> [16] </ref> wide-area radio network and point-to-point infra-red connections between laptops. ACKNOWLEDGEMENTS The design and development of Bayou have been a multi-year effort involving a number of people. Alan Demers, Carl Hauser and Brent Welch were invaluable participants in earlier stages of the Bayou design process.
Reference: [17] <author> Neuwirth, C. M., Kaufer, D. S., Chandhok, R., and Mor-ris, J. </author> <booktitle> Issues in the Design of Computer Support for Co-authoring and Commenting. Proceedings of the Conference on Computer-Supported Cooperative Work, </booktitle> <address> Los Angeles, CA: </address> <publisher> ACM, </publisher> <year> 1990, </year> <pages> pp. 183-195. </pages>
Reference-contexts: Synchronous applications, typified by such systems as ShrEdit [15][18] and SASSE [1], are highly-interactive, real-time systems in which a group of possibly distributed users interact together to achieve some result. Much of the recent research into collaboration, with the exception of electronic mail [7] and occasionally group editing studies <ref> [17] </ref> has focused on new tools and techniques to support synchronous collaboration. Copyright 1997, Association for Computing Machinery. Published in Proceedings of Tenth ACM Symposium on User Interface Software and Technology (UIST97), Banff, Alberta, Canada. October 14-17, 1997. Then, we describe the Bayou infrastructure. <p> For example, collaborative paper writingat least in the non-computer mediated case typically involves fairly infrequent coordination. Authors work largely independently, syncing up only when necessary to integrate results, or to reaffirm goals or plans <ref> [17] </ref>. Further, asynchronous tasks that center around some shared artifact do not typically require that all participants immediately know about changes to that artifact.
Reference: [18] <author> Olson, J., Olson, G. Storrsten, M., and Carter, M., </author> <title> How a Group Editor Changes the Character of A Design Meeting as Well as its Outcome. </title> <booktitle> Proceedings of the Conference on Computer-Supported Cooperative Work, </booktitle> <address> Toronto, Ontario: </address> <publisher> ACM, </publisher> <year> 1992, </year> <pages> pp. 91-98. </pages>
Reference: [19] <author> Ousterhout, J., </author> <title> Tcl: An Embeddable Command Language. </title> <booktitle> Proceedings of the USENIX Conference, </booktitle> <month> Winter </month> <year> 1990. </year>
Reference-contexts: The query language used in read operations and dependency checks is a subset of SQL. The mergeproc language is based on the Tool Command Language, TCL <ref> [19] </ref>, augmented by SQL. FUTURE RESEARCH We expect that further exploration of the design of applications that transition between synchronous and asynchronous modes of operation will raise interesting questions, from both the interface and infrastructure perspectives.
Reference: [20] <author> Petersen, K., Spreitzer, M.J., Terry, </author> <title> D.B., Theimer, M.M., Demers, A.J. Flexible Update Propagation for Weakly Consistent Replication. </title> <booktitle> Proceedings of the Sixteenth ACM Symposium on Operating System Principles (SOSP), </booktitle> <address> Saint-Malo, Franco, </address> <month> October </month> <year> 1997. </year>
Reference-contexts: During the anti-entropy process two servers exchange the sets of writes known to one server but not the other [4]. For a more detailed description of the reconciliation protocol and its performance, refer to <ref> [20] </ref>. Although not fully implemented yet, the Bayou model supports client-supplied anti-entropy policies.
Reference: [21] <author> Satyanarayanan, M., Kistler, J.J., Kumar, P., Okasaki, M.E., Siegel, E.H., and Steere, </author> <title> D.C., Coda: A Highly-Available File System for a Distributed Workstation Environment. </title> <journal> IEEE Transactions on Computers 39(4): </journal> <pages> 447-459, </pages> <month> April </month> <year> 1990. </year>
Reference: [22] <author> Terry, D.B., Theimer, M.,M., Petersen, K., Demers, A.J., Spreitzer, M.J., Hauser, C.H. </author> <title> Managing Update Conicts in Bayou, a Weakly Connected Replicated Storage System. </title> <booktitle> Proceedings Fifteenth ACM Symposium on Operating Systems Principles (SOSP), </booktitle> <address> Cooper Mountain, Colorado, </address> <month> December </month> <year> 1995, </year> <pages> pp. 172-183. </pages>
Reference-contexts: In the following section we describe a system called Bayou that satisfies these requirements for supporting asynchronous collaboration. BAYOU OVERVIEW Bayou is a replicated, weakly consistent storage system designed to support collaborative applications in distributed computing environments with varying network connectivity <ref> [22] </ref>. A typical example of such an environment is a system with mobile hosts that may disconnect over periods of time, connect only through low-bandwidth radio networks, or connect occasionally with expensive cellular modems.
Reference: [23] <author> Terry, D.B., Demers, A.J., Petersen, K., Spreitzer, M.J., Theimer, M.M., and Welch, B. </author> <title> Session Guarantees for Weakly Consistent Replicated Data. </title> <booktitle> Proceedings of the International Conference on Parallel and Distributed Information Systems (PDIS), </booktitle> <address> Austin, Texas, </address> <month> September </month> <year> 1994, </year> <pages> pp. 140-149. </pages>
Reference-contexts: In other words, a write is only incorporated into a replicas database copy if the copy includes all previous writes from that session, and the write is ordered after these previous writes. Session guarantees are described in more detail in <ref> [23] </ref>, and are not intended to ensure atomicity or serializability. Instead, users of collaborative applications use session guarantees to maintain a self-consistent view of the database, even though they may read from and write to various, potentially inconsistent, replicas over time. Stable vs. Tentative Data.
References-found: 23

