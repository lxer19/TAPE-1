URL: ftp://softlib.rice.edu/pub/CRPC-TRs/reports/CRPC-TR96707-S.ps.gz
Refering-URL: http://www.crpc.rice.edu/CRPC/softlib/TRs_online.html
Root-URL: 
Title: THE NETWORK-ENABLED OPTIMIZATION SYSTEM (NEOS) SERVER  
Phone: 60439  
Author: Joseph Czyzyk, Michael P. Mesnier, and Jorge J. More 
Note: Revised Version  
Date: October 1996  (March 1997)  
Address: 9700 South Cass Avenue Argonne, Illinois  Preprint MCS-P615-1096  
Affiliation: ARGONNE NATIONAL LABORATORY  Mathematics and Computer Science Division  
Abstract: This work was supported by the Mathematical, Information, and Computational Sciences Division subprogram of the Office of Computational and Technology Research, U.S. Department of Energy, under Contract W-31-109-Eng-38, by a grant of Northwestern University to the Optimization Technology Center, and by the National Science Foundation, through the Center for Research on Parallel Computation, under Cooperative Agreement No. CCR-9120008. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Arbenz, W. Gander, and M. Oettl, </author> <title> The remote computation system, in High-Performance Computing and Networking, </title> <editor> H. Liddell, A. Colbrook, B. Hertzberger, and P. Sloot, eds., </editor> <volume> no. </volume> <booktitle> 1067 in Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1996, </year> <pages> pp. 820-825. </pages>
Reference-contexts: The beta version of the Server was released in May 1995; the Server was 3 made available for general use in September 1995. Projects with similar aims to NEOS are in the planning stages. The NetSolve [5] and RCS <ref> [1] </ref> projects, for example, are intended to allow users to build an application by calling libraries with remote procedure calls. The current interfaces of NetSolve and RCS deal only with linear algebra problems. Moreover, neither NetSolve nor RCS is currently available for general use.
Reference: [2] <author> D. Bertsekas and P. Tseng, RELAX-IV: </author> <title> A faster version of the RELAX code for solving minimum cost flow problems, </title> <type> Technical Report, </type> <institution> Massachusetts Institute of Technology, Cambridge, Massachusetts, </institution> <year> 1994. </year> <note> Also available by ftp from lids.mit.edu in /pub/bertsekas/RELAX/RELAX4.PS. </note>
Reference-contexts: Solvers in other areas of the NEOS Server use formats that have been adopted in these areas. Thus, solvers for (linear) minimum-cost network flow problems (for example, RELAX-IV <ref> [2] </ref>) accept input in the DIMACS format. 12 Acknowledgments The design of the NEOS Server was developed in consultation with members of the Optimization Technology Center, in particular, Jorge Nocedal, Steve Wright, Richard Marynowski, Jon Owen, Emmett Tomai, and Andrew Crane.
Reference: [3] <author> C. Bischof, A. Carle, P. Khademi, and A. Mauer, </author> <title> The ADIFOR 2.0 system for the automatic differentiation of Fortran 77 programs, </title> <type> Preprint MCS-P381-1194, </type> <institution> Ar-gonne National Laboratory, Argonne, Illinois, </institution> <year> 1994. </year> <note> Also available as CRPC-TR94491, Center for Research on Parallel Computation, </note> <institution> Rice University. </institution>
Reference-contexts: The user is given a solution vector, along with run-time statistics. Most of the computation is done in the background, hidden from the user. Derivatives (gradients, Jacobian and Hessian matrices) of nonlinear problems and the sparsity patterns are determined by ADIFOR/SparsLinc <ref> [3] </ref> for Fortran codes and by ADOL-C [9] for C codes. Execution of the codes takes place on workstations provided by the software administrators.
Reference: [4] <author> A. Bouaricha and J. J. Mor e, </author> <title> Impact of partial separability on large-scale optimization, </title> <journal> Comp. Optim. Appl., </journal> <volume> 7 (1997), </volume> <pages> pp. 27-40. </pages>
Reference-contexts: Both L-BFGS-B and LANCELOT follow this requirement, which allows <ref> [4] </ref> the efficient generation of gradients with automatic differentiation techniques. The range of formats used to specify problems for linear solvers is strongly dependent on the area. Instead of Fortran or C codes, these solvers accept the input as a data file.
Reference: [5] <author> H. Casanova and J. Dongarra, NetSolve: </author> <title> A network server for solving computational science problems, </title> <type> Technical Report CS-95-313, </type> <institution> University of Tennessee, Knoxville, Tennessee, </institution> <year> 1995. </year>
Reference-contexts: The beta version of the Server was released in May 1995; the Server was 3 made available for general use in September 1995. Projects with similar aims to NEOS are in the planning stages. The NetSolve <ref> [5] </ref> and RCS [1] projects, for example, are intended to allow users to build an application by calling libraries with remote procedure calls. The current interfaces of NetSolve and RCS deal only with linear algebra problems. Moreover, neither NetSolve nor RCS is currently available for general use.
Reference: [6] <author> A. R. Conn, N. I. M. Gould, and P. L. Toint, LANCELOT, </author> <title> Springer Series in Computational Mathematics, </title> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: The nonlinear solvers accept Fortran input, but most of the solvers also accept C input. For example, the L-BFGS-B solver [13] for bound constrained optimization problems accepts input in terms of either Fortran or C code. On the other hand, the LANCELOT <ref> [6] </ref> solver for general constrained optimization problems accepts the problem specification in terms of Fortran subroutines or in the SIF format.
Reference: [7] <author> J. Czyzyk, S. Mehrotra, and S. J. Wright, </author> <title> PCx user guide, </title> <type> Technical Memorandum ANL/MCS-TM-217, </type> <institution> Argonne National Laboratory, Argonne, Illinois, </institution> <year> 1996. </year> <note> Also available as ftp://ftp.mcs.anl.gov/pub/neos/PCx/PCx-user.ps. </note>
Reference-contexts: The range of formats used to specify problems for linear solvers is strongly dependent on the area. Instead of Fortran or C codes, these solvers accept the input as a data file. The linear programming solvers (for example, PCx <ref> [7] </ref>) accept the problem specification in the MPS format, although other formats are clearly possible.
Reference: [8] <author> M. C. Ferris, M. P. Mesnier, and J. J. Mor e, </author> <title> The NEOS Server for complementarity problems: PATH, </title> <type> Technical Report 96-08, </type> <institution> University of Wisconsin, Madison, 13 Wisconsin, </institution> <year> 1996. </year> <note> Also available as MCS-P616-1096, </note> <institution> Mathematics and Computer Sci--ence Division, Argonne National Laboratory. </institution>
Reference-contexts: At present these workstations reside at Argonne Na--tional Laboratory, Northwestern University, and the University of Wisconsin. The NEOS solver <ref> [8] </ref> for complementarity problems at Wisconsin is of special interest since, in addition to the scheduling facilities already provided by the Server, the Condor [10] scheduling system provides site-specific scheduling on clusters of workstations.
Reference: [9] <author> A. Griewank, D. Juedes, and J. Utke, ADOL-C: </author> <title> A package for the automatic differentiation of algorithms written in C/C++, </title> <journal> ACM Trans. Math. Software, </journal> <volume> 22 (1996), </volume> <pages> pp. 131-167. </pages>
Reference-contexts: The user is given a solution vector, along with run-time statistics. Most of the computation is done in the background, hidden from the user. Derivatives (gradients, Jacobian and Hessian matrices) of nonlinear problems and the sparsity patterns are determined by ADIFOR/SparsLinc [3] for Fortran codes and by ADOL-C <ref> [9] </ref> for C codes. Execution of the codes takes place on workstations provided by the software administrators. A variety of machines, even a massively parallel processor, could be used to solve the problem; the only restriction is that the workstation must 2 run UNIX with support for TCP/IP.
Reference: [10] <author> M. J. Litzkow, M. Livny, and M. W. </author> <title> Mutka, Condor A hunter of idle workstations, </title> <booktitle> in Proceedings of the 8th International Conference on Distributed Computing Systems, </booktitle> <address> Washington, District of Columbia, 1988, </address> <publisher> IEEE Computer Society Press, </publisher> <pages> pp. 108-111. </pages>
Reference-contexts: At present these workstations reside at Argonne Na--tional Laboratory, Northwestern University, and the University of Wisconsin. The NEOS solver [8] for complementarity problems at Wisconsin is of special interest since, in addition to the scheduling facilities already provided by the Server, the Condor <ref> [10] </ref> scheduling system provides site-specific scheduling on clusters of workstations. We have concentrated on the nonlinearly constrained optimization problem (1.1), but the NEOS Server is able to solve a wide range of optimization problems.
Reference: [11] <author> J. K. Ousterhout, </author> <title> Tcl and the Tk Toolkit, </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: Like the Web interface, the Submission Tool provides appropriate entries for the users' data. Unlike the Web interface, the Submission Tool allows the uploading of files from the user's local file space to the NEOS Server. The NEOS Submission Tool is a TCl/Tk <ref> [11] </ref> application. Users can obtain more information and download the submission tool from the URL http://www.mcs.anl.gov/home/otc/Server/neos/subtool.html Although the Submission Tool is written with TCl/Tk, users need only have Perl [12] installed. subroutines. Browse buttons are available to ease the specification of the various files.
Reference: [12] <author> L. Wall, T. Christiansen, and R. L. Schwartz, </author> <title> Programming Perl, </title> <publisher> O'Reilly & Associates, Inc., </publisher> <editor> second ed., </editor> <year> 1996. </year>
Reference-contexts: The NEOS Submission Tool is a TCl/Tk [11] application. Users can obtain more information and download the submission tool from the URL http://www.mcs.anl.gov/home/otc/Server/neos/subtool.html Although the Submission Tool is written with TCl/Tk, users need only have Perl <ref> [12] </ref> installed. subroutines. Browse buttons are available to ease the specification of the various files.
Reference: [13] <author> C. Zhu, R. H. Byrd, P. Lu, and J. Nocedal, L-BFGS-B: </author> <title> Fortran subroutines for large-scale bound constrained optimization, </title> <type> Technical Report, </type> <institution> Northwestern University, </institution> <year> 1994. </year>
Reference-contexts: The main issue that needs to be addressed is the input format for the specification of the problem. The nonlinear solvers accept Fortran input, but most of the solvers also accept C input. For example, the L-BFGS-B solver <ref> [13] </ref> for bound constrained optimization problems accepts input in terms of either Fortran or C code. On the other hand, the LANCELOT [6] solver for general constrained optimization problems accepts the problem specification in terms of Fortran subroutines or in the SIF format.
References-found: 13

