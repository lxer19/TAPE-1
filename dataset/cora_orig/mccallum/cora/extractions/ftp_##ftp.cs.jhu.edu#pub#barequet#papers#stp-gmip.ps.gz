URL: ftp://ftp.cs.jhu.edu/pub/barequet/papers/stp-gmip.ps.gz
Refering-URL: http://www.cs.jhu.edu/~barequet/papers.html
Root-URL: http://www.cs.jhu.edu
Title: Optimizing a Strip Separating Two Polygons  
Author: Gill Barequet Barbara Wolfers 
Keyword: Key Words: plane sweep; branching surfaces; polyhedra; surface reconstruc tion.  
Abstract: We consider the problem of finding a strip separating between two polygons, whose intersection with a third (convex) polygon is of maximum area. We present an optimal linear-time algorithm for computing the optimum strip. When the third polygon is not convex, the running time of the algorithm is quadratic in the size of the input. The application in mind is the piecewise-linear surface interpolation in simple branching cases, where the sought volume branches from one contour in one slice into two contours in the other slice. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C.L. Bajaj, E.J. Coyle, and K.-N. Lin, </author> <title> Arbitrary topology shape reconstruction from planar cross sections, Graphical Models and Image Processing, </title> <type> 15 58, </type> <year> 1996, </year> <pages> 524-543. </pages>
Reference-contexts: The input to the reconstruction problem usually consists of a pair of parallel planar slices, each consisting of a collection of simple noncrossing polygons. The goal is a polyhedral solid model whose cross-sections along the given planes coincide with the input slices. Only a few methods <ref> [1, 2, 4] </ref> handle the general case without limiting the number of contours, their geometries, or their containment hierarchies. Many of the earlier works studied the simplest 1-to-1 case, where each slice contains only one contour.
Reference: [2] <author> G. Barequet and M. Sharir, </author> <title> Piecewise-linear interpolation between polygonal slices, </title> <booktitle> Computer Vision and Image Understanding. </booktitle> <volume> 63, </volume> <year> 1996, </year> <pages> 251-272. </pages>
Reference-contexts: The input to the reconstruction problem usually consists of a pair of parallel planar slices, each consisting of a collection of simple noncrossing polygons. The goal is a polyhedral solid model whose cross-sections along the given planes coincide with the input slices. Only a few methods <ref> [1, 2, 4] </ref> handle the general case without limiting the number of contours, their geometries, or their containment hierarchies. Many of the earlier works studied the simplest 1-to-1 case, where each slice contains only one contour.
Reference: [3] <author> S. Batnitzky, H.I. Price, P.N. Cook, L.T. Cook, and S.J. Dwyer III, </author> <title> Three-dimensional computer reconstruction from surface contours for head CT examinations, </title> <journal> J. of Computer Assisted Tomography. </journal> <volume> 5, </volume> <year> 1981, </year> <pages> 60-67. </pages>
Reference-contexts: Many of the earlier works studied the simplest 1-to-1 case, where each slice contains only one contour. These works either sought a global optimization of some objective function [10, 15, 20, 22, 24, 25] or used a local tiling-advancing rule <ref> [3, 7, 9, 11, 13, 14] </ref>. Several works handled the more involved 1-to-2 branching case. This case is usually solved by merging the two contours in one slice into one contour by adding a "bridge" between them and by applying a 1-to-1 algorithm [7, 9, 17, 20].
Reference: [4] <author> J.D. Boissonnat, </author> <title> Shape reconstruction from planar cross sections, Computer Vision, </title> <journal> Graphics and Image Processing. </journal> <volume> 44, </volume> <year> 1988, </year> <pages> 1-29. </pages>
Reference-contexts: The input to the reconstruction problem usually consists of a pair of parallel planar slices, each consisting of a collection of simple noncrossing polygons. The goal is a polyhedral solid model whose cross-sections along the given planes coincide with the input slices. Only a few methods <ref> [1, 2, 4] </ref> handle the general case without limiting the number of contours, their geometries, or their containment hierarchies. Many of the earlier works studied the simplest 1-to-1 case, where each slice contains only one contour.
Reference: [5] <author> J.D. Boissonnat and B. Geiger, </author> <title> Three dimensional reconstruction of complex shapes based on the Delaunay triangulation, in Proceedings, Biomedical Image Processing and Biomedical Visualization (R.S. Acharya and D.B. </title> <booktitle> Goldof, Eds.), </booktitle> <pages> pp. 964-975, </pages> <address> 1905, </address> <publisher> SPIE Press, Bellingham, </publisher> <address> WA, </address> <year> 1993. </year>
Reference-contexts: Other works propose to split the single contour into two parts and to interpolate separately between each part and the corresponding contour in the other slice. Boissonnat and Geiger <ref> [5] </ref> used the external Voronoi diagram in one slice for splitting contours in the other slice in branching cases. Choi and Park [6] formed a "partitioning chain" for splitting a contour in one slice, based on a skeleton of the region between the two contours of the other slice.
Reference: [6] <author> Y.-K. Choi and K.H. Park, </author> <title> A heuristic triangulation algorithm for multiple planar contours using an extended double branching procedure, </title> <journal> The Visual Computer. </journal> <volume> 10, </volume> <year> 1994, </year> <pages> 372-387. </pages>
Reference-contexts: Boissonnat and Geiger [5] used the external Voronoi diagram in one slice for splitting contours in the other slice in branching cases. Choi and Park <ref> [6] </ref> formed a "partitioning chain" for splitting a contour in one slice, based on a skeleton of the region between the two contours of the other slice.
Reference: [7] <author> H.N. Christiansen and T.W. </author> <title> Sederberg, Conversion of complex contour line definitions into polygonal element mosaics, </title> <journal> Computer Graphics. </journal> <volume> 13, </volume> <year> 1978, </year> <pages> 187-192. </pages>
Reference-contexts: Many of the earlier works studied the simplest 1-to-1 case, where each slice contains only one contour. These works either sought a global optimization of some objective function [10, 15, 20, 22, 24, 25] or used a local tiling-advancing rule <ref> [3, 7, 9, 11, 13, 14] </ref>. Several works handled the more involved 1-to-2 branching case. This case is usually solved by merging the two contours in one slice into one contour by adding a "bridge" between them and by applying a 1-to-1 algorithm [7, 9, 17, 20]. <p> Several works handled the more involved 1-to-2 branching case. This case is usually solved by merging the two contours in one slice into one contour by adding a "bridge" between them and by applying a 1-to-1 algorithm <ref> [7, 9, 17, 20] </ref>. The major caveat in this approach is that the bridge in one slice may be inconsistent with the geometry in the other slice.
Reference: [8] <author> H. Edelsbrunner, </author> <title> Computing the extreme distances between two convex polygons, </title> <journal> J. of Algorithms. </journal> <volume> 6, </volume> <year> 1985, </year> <pages> 213-224. </pages>
Reference-contexts: In these cases we suggest to use the strip between P and Q of maximum width. First, one can use the algorithm described in <ref> [8] </ref> to find the closest pair of vertices p 2 P and q 2 Q which lie on their convex hulls. The strip S + of maximum width between P and Q is the strip supported by p and q and orthogonal to pq.
Reference: [9] <author> A.B. Ekoule, F.C. Peyrin, and C.L. Odet, </author> <title> A triangulation algorithm from arbitrary shaped multiple planar contours, </title> <journal> ACM Trans. on Graphics. </journal> <volume> 10, </volume> <year> 1991, </year> <pages> 182-199. </pages>
Reference-contexts: Many of the earlier works studied the simplest 1-to-1 case, where each slice contains only one contour. These works either sought a global optimization of some objective function [10, 15, 20, 22, 24, 25] or used a local tiling-advancing rule <ref> [3, 7, 9, 11, 13, 14] </ref>. Several works handled the more involved 1-to-2 branching case. This case is usually solved by merging the two contours in one slice into one contour by adding a "bridge" between them and by applying a 1-to-1 algorithm [7, 9, 17, 20]. <p> Several works handled the more involved 1-to-2 branching case. This case is usually solved by merging the two contours in one slice into one contour by adding a "bridge" between them and by applying a 1-to-1 algorithm <ref> [7, 9, 17, 20] </ref>. The major caveat in this approach is that the bridge in one slice may be inconsistent with the geometry in the other slice.
Reference: [10] <author> H. Fuchs, Z.M. Kedem, and S.P. Uselton, </author> <title> Optimal surface reconstruction from planar contours, </title> <journal> Comm. of the ACM. </journal> <volume> 20, </volume> <year> 1977, </year> <pages> 693-702. </pages>
Reference-contexts: Many of the earlier works studied the simplest 1-to-1 case, where each slice contains only one contour. These works either sought a global optimization of some objective function <ref> [10, 15, 20, 22, 24, 25] </ref> or used a local tiling-advancing rule [3, 7, 9, 11, 13, 14]. Several works handled the more involved 1-to-2 branching case.
Reference: [11] <author> S. Ganapathy and T.G. Dennehy, </author> <title> A new general triangulation method for planar contours, </title> <journal> ACM Trans. on Computer Graphics. </journal> <volume> 16, </volume> <year> 1982, </year> <pages> 69-75. </pages>
Reference-contexts: Many of the earlier works studied the simplest 1-to-1 case, where each slice contains only one contour. These works either sought a global optimization of some objective function [10, 15, 20, 22, 24, 25] or used a local tiling-advancing rule <ref> [3, 7, 9, 11, 13, 14] </ref>. Several works handled the more involved 1-to-2 branching case. This case is usually solved by merging the two contours in one slice into one contour by adding a "bridge" between them and by applying a 1-to-1 algorithm [7, 9, 17, 20].
Reference: [12] <author> C. Gitlin, J. O'Rourke, and V. Subramanian, </author> <title> On reconstructing polyhedra from parallel slices, </title> <journal> Int. J. of Computational Geometry and Applications. </journal> <volume> 6, </volume> <year> 1996, </year> <pages> 103-122. </pages>
Reference-contexts: In such cases we may use CH (R) instead of R. Finally, we note that in none of the cases discussed in this work (except when interpolating between convex polygons), the existence of a non-self-intersecting interpolation is guaranteed <ref> [12] </ref>. 14 P R "Correct" splitter Computed splitter 9 Conclusion We have proposed in this paper an algorithm for finding a strip between two polygons that maximizes the area of intersection with a third convex polygon.
Reference: [13] <author> N. Kehtarnavaz and R.J.P. De Figueiredo, </author> <title> A framework for surface reconstruction from 3D contours, Computer Vision, </title> <journal> Graphics and Image Processing. </journal> <volume> 42, </volume> <year> 1988, </year> <pages> 32-47. 16 </pages>
Reference-contexts: Many of the earlier works studied the simplest 1-to-1 case, where each slice contains only one contour. These works either sought a global optimization of some objective function [10, 15, 20, 22, 24, 25] or used a local tiling-advancing rule <ref> [3, 7, 9, 11, 13, 14] </ref>. Several works handled the more involved 1-to-2 branching case. This case is usually solved by merging the two contours in one slice into one contour by adding a "bridge" between them and by applying a 1-to-1 algorithm [7, 9, 17, 20].
Reference: [14] <author> N. Kehtarnavaz, L.R. Simar, and R.J.P. De Figueiredo, </author> <title> A syntac-tic/semantic technique for surface reconstruction from cross-sectional contours, Computer Vision, </title> <journal> Graphics and Image Processing. </journal> <volume> 42, </volume> <year> 1988, </year> <pages> 399-409. </pages>
Reference-contexts: Many of the earlier works studied the simplest 1-to-1 case, where each slice contains only one contour. These works either sought a global optimization of some objective function [10, 15, 20, 22, 24, 25] or used a local tiling-advancing rule <ref> [3, 7, 9, 11, 13, 14] </ref>. Several works handled the more involved 1-to-2 branching case. This case is usually solved by merging the two contours in one slice into one contour by adding a "bridge" between them and by applying a 1-to-1 algorithm [7, 9, 17, 20].
Reference: [15] <author> E. Keppel, </author> <title> Approximating complex surfaces by triangulation of contour lines, </title> <journal> IBM J. of Research and Development. </journal> <volume> 19, </volume> <year> 1975, </year> <pages> 2-11. </pages>
Reference-contexts: Many of the earlier works studied the simplest 1-to-1 case, where each slice contains only one contour. These works either sought a global optimization of some objective function <ref> [10, 15, 20, 22, 24, 25] </ref> or used a local tiling-advancing rule [3, 7, 9, 11, 13, 14]. Several works handled the more involved 1-to-2 branching case.
Reference: [16] <author> A. Melkman, </author> <title> On-line construction of the convex hull of a simple polyline, </title> <journal> Information Processing Letters. </journal> <volume> 25, </volume> <year> 1987, </year> <pages> 11-12. </pages>
Reference-contexts: First we compute the convex hulls of the polygons P and Q. This step requires O (n) time (see, e.g., <ref> [16] </ref>). Then we initialize the algorithm by computing and merging six event lists.
Reference: [17] <author> D. Meyers, S. Skinner, and K. Sloan, </author> <title> Surfaces from contours, </title> <journal> ACM Trans. on Graphics. </journal> <volume> 11, </volume> <year> 1992, </year> <pages> 228-258. </pages>
Reference-contexts: Several works handled the more involved 1-to-2 branching case. This case is usually solved by merging the two contours in one slice into one contour by adding a "bridge" between them and by applying a 1-to-1 algorithm <ref> [7, 9, 17, 20] </ref>. The major caveat in this approach is that the bridge in one slice may be inconsistent with the geometry in the other slice.
Reference: [18] <author> H. M uller and A. Klingert, </author> <title> Surface interpolation from cross sections, in Focus on Scientific Visualization (H. </title> <editor> Hagen, H. Muller, and G.M. Nielson, </editor> <booktitle> Eds.), </booktitle> <pages> pp. 139-189, </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1993. </year>
Reference-contexts: Such a partition of the single 2 P Q (a) Input data (top view) (b) Interpolated surface (isometric view) contour in one slice considers to some extent the geometry of the contours in the other slice. The interested reader is referred to the comprehensive reviews <ref> [18, 19, 21] </ref>. We propose a solution for Problem 1 as a tool for handling the 1-to-2 branching case, in which one convex contour R in one slice is interpolated with two contours P; Q in the other slice.
Reference: [19] <author> L.L. Schumaker, </author> <title> Reconstructing 3D objects from cross-sections, in Computation of Curves and Surfaces (W. </title> <editor> Dahmen, M. Gasca, </editor> <booktitle> and C.A. Micchelli, Eds.), </booktitle> <pages> pp. 275-309, </pages> <publisher> Kluwer Academic, </publisher> <address> Dodrecht/Norwell, MA, </address> <year> 1989. </year>
Reference-contexts: Such a partition of the single 2 P Q (a) Input data (top view) (b) Interpolated surface (isometric view) contour in one slice considers to some extent the geometry of the contours in the other slice. The interested reader is referred to the comprehensive reviews <ref> [18, 19, 21] </ref>. We propose a solution for Problem 1 as a tool for handling the 1-to-2 branching case, in which one convex contour R in one slice is interpolated with two contours P; Q in the other slice.
Reference: [20] <author> M. Shantz, </author> <title> Surface definition for branching contour-defined objects, </title> <journal> Computer Graphics. </journal> <volume> 15, </volume> <year> 1981, </year> <pages> 242-270. </pages>
Reference-contexts: Many of the earlier works studied the simplest 1-to-1 case, where each slice contains only one contour. These works either sought a global optimization of some objective function <ref> [10, 15, 20, 22, 24, 25] </ref> or used a local tiling-advancing rule [3, 7, 9, 11, 13, 14]. Several works handled the more involved 1-to-2 branching case. <p> Several works handled the more involved 1-to-2 branching case. This case is usually solved by merging the two contours in one slice into one contour by adding a "bridge" between them and by applying a 1-to-1 algorithm <ref> [7, 9, 17, 20] </ref>. The major caveat in this approach is that the bridge in one slice may be inconsistent with the geometry in the other slice.
Reference: [21] <author> K.R. Sloan and J. Painter, </author> <title> From contours to surfaces: Testbed and initial results, </title> <booktitle> in Proceedings, </booktitle> <address> CHI+GI, </address> <year> 1987, </year> <pages> pp. 115-120. </pages>
Reference-contexts: Such a partition of the single 2 P Q (a) Input data (top view) (b) Interpolated surface (isometric view) contour in one slice considers to some extent the geometry of the contours in the other slice. The interested reader is referred to the comprehensive reviews <ref> [18, 19, 21] </ref>. We propose a solution for Problem 1 as a tool for handling the 1-to-2 branching case, in which one convex contour R in one slice is interpolated with two contours P; Q in the other slice.
Reference: [22] <author> K.R. Sloan and J. Painter, </author> <title> Pessimal guesses may be optimal: A counterintuitive search result, </title> <journal> IEEE Trans. on Pattern Analysis and Machine Intelligence. </journal> <volume> 10, </volume> <year> 1988, </year> <pages> 949-955. </pages>
Reference-contexts: Many of the earlier works studied the simplest 1-to-1 case, where each slice contains only one contour. These works either sought a global optimization of some objective function <ref> [10, 15, 20, 22, 24, 25] </ref> or used a local tiling-advancing rule [3, 7, 9, 11, 13, 14]. Several works handled the more involved 1-to-2 branching case.
Reference: [23] <author> G.T. Toussaint, </author> <title> Solving geometric problems with the rotating calipers, </title> <booktitle> in Proceedings, IEEE MELECON, </booktitle> <year> 1983, </year> <pages> pp. 1-4. </pages>
Reference-contexts: Note that not only do P and Q not intersect but their convex hulls are also disjoint. The third polygon R may intersect P and/or Q. We present an optimal linear-time algorithm for solving Problem 1. The algorithm uses a "rotating-calipers"-like procedure <ref> [23] </ref>: it rotates the separating strip (supporting P and Q), maintains the area of the intersection of the strip and R, and identifies the slope in which the area of the intersection assumes its maximum. fl Center for Geometric Computing, Dept. of Computer Science, Johns Hopkins University, Balti-more, MD 21218, USA.
Reference: [24] <author> Y.F. Wang and J.K. Aggarwal, </author> <title> Surface reconstruction and representation of 3D scenes, </title> <journal> Pattern Recognition. </journal> <volume> 19, </volume> <year> 1986, </year> <pages> 197-207. </pages>
Reference-contexts: Many of the earlier works studied the simplest 1-to-1 case, where each slice contains only one contour. These works either sought a global optimization of some objective function <ref> [10, 15, 20, 22, 24, 25] </ref> or used a local tiling-advancing rule [3, 7, 9, 11, 13, 14]. Several works handled the more involved 1-to-2 branching case.
Reference: [25] <author> E. Welzl and B. Wolfers, </author> <title> Surface reconstruction between simple polygons via angle criteria, </title> <journal> J. of Symbolic Computation. </journal> <volume> 17, </volume> <year> 1994, </year> <pages> 351-369. 17 </pages>
Reference-contexts: Many of the earlier works studied the simplest 1-to-1 case, where each slice contains only one contour. These works either sought a global optimization of some objective function <ref> [10, 15, 20, 22, 24, 25] </ref> or used a local tiling-advancing rule [3, 7, 9, 11, 13, 14]. Several works handled the more involved 1-to-2 branching case.
References-found: 25

