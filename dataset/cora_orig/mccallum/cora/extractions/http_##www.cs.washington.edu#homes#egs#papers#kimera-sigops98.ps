URL: http://www.cs.washington.edu/homes/egs/papers/kimera-sigops98.ps
Refering-URL: http://www.cs.washington.edu/homes/egs/
Root-URL: http://www.cs.washington.edu
Email: -egs,rgrimm,bershad,artjg,mcdirmid-@cs.washington.edu  
Title: Distributed Virtual Machines: A System Architecture for Network Computing  
Author: Emin Gn Sirer, Robert Grimm, Brian N. Bershad, Arthur J. Gregory, Sean McDirmid 
Date: February 26, 1998  
Address: Seattle, WA 98195-2350  
Affiliation: Dept. of Computer Science Engineering University of Washington  
Web: http://kimera.cs.washington.edu  
Abstract: Modern virtual machines, such as Java and Inferno, are emerging as network computing platforms. While todays virtual machines provide higher-level abstractions and more sophisticated services than their predecessors, and while they have migrated from dedicated mainframes to heterogeneous networked computers, their architecture has essentially remained intact. State of the art virtual machines are still monolithic, that is, all system components reside on the same host and are replicated among all clients in an organization. This crude replication of services among clients creates problems of security, manageability, performance and scalability. We propose a distributed architecture for virtual machines based on distributed service components. In our proposed system, services that control security, resource management, and code optimization are factored out of clients and reside in enterprise-wide network servers. The services produce self-certifying, self-regulating, self-optimizing programs via binary rewriting. We are currently building a Java virtual machine based on this architecture. We argue that distributed virtual machine architectures enable higher integrity, manageability, performance and scalability than monolithic virtual machines where all components reside on all clients. 
Abstract-found: 1
Intro-found: 1
Reference: [Accetta et al. 89] <author> Accetta, M. J., Baron, R. V., Bolosky, W., Golub, D. B., Rashid R. F., Tevanian, A. and Young, M. W. </author> <title> Mach: A New Kernel Foundation for Unix Development. </title> <booktitle> USENIX 1989. </booktitle>
Reference-contexts: This was the lesson learned in the 1980s as the systems community struggled to decompose monolithic operating systems into microkernel-based operating system servers <ref> [Accetta et al. 89] </ref>. Similarly, distributing functionality via remote service invocations, though simple because it retains existing service interfaces and implementations, poses problems of connectivity and latency.
Reference: [Adl-Tabatabai et al. 96] <author> Adl-Tabatabai, A., Langdale, G., Lucco, S. and Wahbe, R. </author> <title> Efficient and Language Independent Mobile Programs." </title> <booktitle> PLDI, </booktitle> <month> May, </month> <year> 1996, </year> <pages> p. 127-136. </pages>
Reference-contexts: 1. Introduction Virtual machines have evolved significantly in the last two decades to emerge as the prevailing network computing platform. Modern virtual machines <ref> [Lindholm&Yellin96, Inferno, Adl-Tabatabai et al. 96] </ref> offer much more sophisticated services compared to their predecessors [IBMVM86]. Todays virtual machines (VMs) provide safety guarantees, dynamic extensibility, on-the-fly compilation, configurable security policies, and resource management facilities. Research trends indicate that these services will only grow in time [Wallach et al.97,Myers&Liskov97, Grimm&Bershad97].
Reference: [RFC1157] <author> Case, J., Fedor, M., Schoffstall, M. and J. Davin, </author> <title> "Simple Network Management Protocol", </title> <type> RFC 1157, </type> <month> May </month> <year> 1990. </year>
Reference-contexts: There are no transparent and comprehensive techniques for timely distribution of security upgrades, capturing audit trails, and pruning a network of rogue applications. To make matters worse, current system administration tools (e.g. rdist), push technologies (e.g. Marimba) and Internet protocols <ref> [RFC1157] </ref> do not support transparent management of virtual machines. Performance and Scalability: Virtual machine services, such as just-in-time compilation and verification, have substantial processing and memory requirements that can reduce overall application performance.
Reference: [Cheswick&Bellovin94] <author> Cheswick, W. R. and Bellovin, S. </author> <title> Firewalls and Internet Security: Repelling the Wily Hacker. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: The situation is analogous to the days before firewalls, when every networked host in an organization had to be protected against all bad packets that it might receive. The emergence of firewalls <ref> [Cheswick&Bellovin94] </ref> proved that it was simpler and more secure to concentrate functionality in a single packet-filter than to secure every host in an organization. The virtual machine situation today is identical, except that the services are considerably more complex than packet filtering.
Reference: [Dean et al. 97] <author> Dean, D., Felten, E. W., Wallach, D. S. and Belfanz, D. </author> <title> Java Security: Web Browers and Beyond. In Internet Beseiged: </title> <editor> Countering Cyberspace Scofflaws, D. E. Denning and P. J. Denning, eds. </editor> <publisher> ACM Press, </publisher> <month> October </month> <year> 1997. </year>
Reference: [Grimm&Bershad97] <author> Grimm, R. and Bershad, B. </author> <title> Providing Policy-Neutral and Transparent Access Control in Extensible Systems. </title> <type> Technical Report UW-CSE-98-02-02, </type> <month> February </month> <year> 1998. </year>
Reference-contexts: Modern virtual machines [Lindholm&Yellin96, Inferno, Adl-Tabatabai et al. 96] offer much more sophisticated services compared to their predecessors [IBMVM86]. Todays virtual machines (VMs) provide safety guarantees, dynamic extensibility, on-the-fly compilation, configurable security policies, and resource management facilities. Research trends indicate that these services will only grow in time <ref> [Wallach et al.97,Myers&Liskov97, Grimm&Bershad97] </ref>. Further, modern virtual machines are deployed in organizations with hundreds or thousands of hosts, in contrast with early systems that were typically confined to a few dedicated mainframes per enterprise.
Reference: [IBMVM86] <author> IBM Corporation. </author> <title> Virtual Machine/System Product Application Development Guide, Release 5. </title> <address> Endicott, New York, </address> <year> 1986. </year>
Reference-contexts: 1. Introduction Virtual machines have evolved significantly in the last two decades to emerge as the prevailing network computing platform. Modern virtual machines [Lindholm&Yellin96, Inferno, Adl-Tabatabai et al. 96] offer much more sophisticated services compared to their predecessors <ref> [IBMVM86] </ref>. Todays virtual machines (VMs) provide safety guarantees, dynamic extensibility, on-the-fly compilation, configurable security policies, and resource management facilities. Research trends indicate that these services will only grow in time [Wallach et al.97,Myers&Liskov97, Grimm&Bershad97].
Reference: [Inferno] <institution> Lucent Technologies. </institution> <note> Inferno. http://inferno.bell-labs.com/inferno/ </note>
Reference-contexts: 1. Introduction Virtual machines have evolved significantly in the last two decades to emerge as the prevailing network computing platform. Modern virtual machines <ref> [Lindholm&Yellin96, Inferno, Adl-Tabatabai et al. 96] </ref> offer much more sophisticated services compared to their predecessors [IBMVM86]. Todays virtual machines (VMs) provide safety guarantees, dynamic extensibility, on-the-fly compilation, configurable security policies, and resource management facilities. Research trends indicate that these services will only grow in time [Wallach et al.97,Myers&Liskov97, Grimm&Bershad97].
Reference: [Kimera] <author> Sirer, E. G., Gregory, A. J., McDirmid, S. and Bershad, B. </author> <title> The Kimera Project. </title> <address> http://kimera.cs.washington .edu/flaws/ </address>
Reference: [Lindholm&Yellin96] <author> Lindholm, T. and Yellin, F. </author> <title> The Java Virtual Machine Specification. </title> <publisher> Addison-Wesley, </publisher> <year> 1996. </year>
Reference-contexts: 1. Introduction Virtual machines have evolved significantly in the last two decades to emerge as the prevailing network computing platform. Modern virtual machines <ref> [Lindholm&Yellin96, Inferno, Adl-Tabatabai et al. 96] </ref> offer much more sophisticated services compared to their predecessors [IBMVM86]. Todays virtual machines (VMs) provide safety guarantees, dynamic extensibility, on-the-fly compilation, configurable security policies, and resource management facilities. Research trends indicate that these services will only grow in time [Wallach et al.97,Myers&Liskov97, Grimm&Bershad97].
Reference: [Myers&Liskov97] <author> Myers, A. C. and Liskov, B. </author> <title> A Decentralized Model for Information Flow Control. </title> <booktitle> Proceedings of the Symposium on Operating System Principles, </booktitle> <year> 1997. </year>
Reference: [Tanenbaum et al. 90] <author> Tanenbaum, A.S., Renesse, R. van, Staveren, H. van., Sharp, G.J., Mullender, S.J., Jansen, A.J., and Rossum, G. van: </author> <title> "Experiences with the Amoeba Distributed Operating System," </title> <journal> Commun. ACM, </journal> <volume> vol. 33, </volume> <pages> pp. 46-63, </pages> <month> Dec. </month> <year> 1990 </year>
Reference-contexts: This approach retains existing intercomponent interfaces, and does not affect the service implementation. While this distribution technique has been used very successfully in systems built from scratch <ref> [Walker et al.83, Tanenbaum et al. 90] </ref>, it has some drawbacks when applied to todays existing infrastructure and modes of interaction. First, distribution based on remote service invocations requires full network connectivity, since the network services have to be contacted to perform critical system services such as resource usage authorization.
Reference: [Wallach et al.97] <author> D. S. Wallach, D. Balfanz, D. Dean and E. W. Felten. </author> <title> Extensible Security Architectures for Java. </title> <booktitle> SOSP 1997. </booktitle>
Reference: [Walker et al.83] <author> Walker, B., Popek, G., English, R., Kline, C. and Thiel, G. </author> <title> The LOCUS Distributed Operating System. </title> <booktitle> Proceedings of the 1983 SOSP, 1983, p. </booktitle> <pages> 49-69. </pages>
Reference-contexts: This approach retains existing intercomponent interfaces, and does not affect the service implementation. While this distribution technique has been used very successfully in systems built from scratch <ref> [Walker et al.83, Tanenbaum et al. 90] </ref>, it has some drawbacks when applied to todays existing infrastructure and modes of interaction. First, distribution based on remote service invocations requires full network connectivity, since the network services have to be contacted to perform critical system services such as resource usage authorization.
References-found: 14

