URL: http://www.ai.univie.ac.at/ijcai_aim_ws/morales.ps.Z
Refering-URL: http://www.ai.univie.ac.at/ijcai_aim_ws/program.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Learning Musical Rules  
Author: Eduardo Morales M. Roberto Morales M. 
Address: Campus Morelos Apto. Postal C-99 Cuernavaca, Morelos 62050 Mexico  la Presa 152, Guanajuato, Mexico  
Affiliation: ITESM  Laboratorio de Informatica Musical Universidad de Guanajuato Centro de Investigaciones en Matematicas Paseo de  
Abstract: Traditional musical analysis attempts to understand and explain the choices made by a composer in a particular piece. History in composition and analysis have shown that composers using the same patterns in structure and harmony get different results depending on the way these patterns are resolved. In particular, musical analysis can be described by a sequence of states and transitions between states representing the personal criteria that each composer follows when solving a musical structure. A system that could be trained with the preference criteria, used by a composer, for transitions between states, could be used to analyze his/her work and provide suggestions for his/her compositions. A first-order learning system, called Pal, is used to learn transition criteria for counterpoint analysis, in the form of Horn clauses from pairs of musical states (given as sets of notes) and general purpose musical knowledge. It is shown how the rules learned by Pal can be used for musical analysis and generation. Conclusions and future research directions are given.
Abstract-found: 1
Intro-found: 1
Reference: [ Buntine, 1988 ] <author> W. Buntine. </author> <title> Generalized subsumption and its applications to induction and redundancy. </title> <journal> Artificial intelligence, </journal> <volume> 36(2) </volume> <pages> 149-176, </pages> <year> 1988. </year>
Reference-contexts: That is, generalizations which are less general, in terms of fi-subsumption, than any other generalization. More recently, Buntine [ 1988 ] defined a model-theoretic characterization of fi-subsumption, called generalized subsumption for Horn clauses (see <ref> [ Buntine, 1988 ] </ref> for more details). Buntine also suggested a method for constructing rlgg s using Plotkin's lgg algorithm between clauses.
Reference: [ Courtot, 1992 ] <author> F. Courtot. </author> <title> Logical representation and induction for computer assisted composition. </title> <editor> In K. Ebcioglu M. Balabam and O. Laske, editors, </editor> <title> Understanding Music with AI: </title> <booktitle> perspectives on music composition, </booktitle> <pages> pages 157-181. </pages> <publisher> AAAI Press/MIT Press, </publisher> <address> Menlo Park, CA, </address> <year> 1992. </year>
Reference: [ de Raedt and Bruynooghe, 1988 ] <author> L. de Raedt and M. Bruynooghe. </author> <title> On interactive concept-learning and assimilation. </title> <editor> In D. Sleeman and J. Richmond, editors, </editor> <booktitle> Proceedings of the Third European Working Session on Learning, </booktitle> <pages> pages 167-176, </pages> <address> London, 1988. </address> <publisher> Pitman. </publisher>
Reference-contexts: involves the deduction of all ground atoms logically implied by the theory. (See [ Niblett, 1988 ] for a more thorough discussion on generalization.) However, practical implementations of rlgg exist for theories without variables (as in Golem [ Mug-gleton and Feng, 1990 ] ), without function symbols (as in Clint <ref> [ de Raedt and Bruynooghe, 1988 ] </ref> ), and when only a finite number of facts are deducible from the theory, either by limiting the depth of the resolution steps taken to derive facts and/or by constraining the background knowledge, as in Pal.
Reference: [ Mann, 1971 ] <author> A. Mann. </author> <title> Study of Counterpoint from Johann Joseph FUX's Gradus ad parnassum. </title> <publisher> W.W.Norton & Company, </publisher> <year> 1971. </year>
Reference-contexts: Our goal is to induce musical criteria rules that can be used them for musical analysis and generation. As a first step, we looked at counterpoint analysis, which is well understood and defined with a finite set of known rules <ref> [ Mann, 1971 ] </ref> . Counterpoint rules can be expressed in a compact and understandable way using first-order logic. In general, musical rules express relations between notes. <p> Section 4 shows the main results and finally conclusions and future work are given in section 5. 2 Musical background The concept of musical counterpoint emerge in the 14th century and evolve up to Gradus ad Parnassum by Jo-hann Joseph Fux published in 1725 <ref> [ Mann, 1971 ] </ref> . This is the first book which synthesize in form of rules the art of polyphony considered to be correct by that time. Those rules can be considered as the culmination of musical analysis from the 14th. until 18th. century.
Reference: [ Morales-Manzanares, 1992 ] <author> R. Morales-Manzanares. </author> <title> Non deterministic automatons controlled by rule for composition. </title> <booktitle> In Proceedings of the International Computer Music Conference, </booktitle> <pages> pages 400-401, </pages> <address> CA, 1992. </address> <publisher> ICMC Association. </publisher>
Reference-contexts: This knowledge could be used for analysis and provide suggestions for musical compositions. Within our future work, we envision learning more complicated rules by incorporating a richer musical background knowledge. In particular, we are trying to couple Pal into ESCAMOL <ref> [ Morales-Manzanares, 1992 ] </ref> . Escamol is an algorithmic tool for composition which uses non-deterministic automatons controlled by rules. Its current version, incorporates generative grammar rules and can generate music in real time updating its database during preformance via MIDI inputs.
Reference: [ Morales, 1991 ] <author> E. Morales. </author> <title> Learning features by experimentation in chess. </title> <editor> In Y. Kodratoff, editor, </editor> <booktitle> Proceedings of the European Working Session on Learning, </booktitle> <pages> pages 494-551, </pages> <address> Berlin, 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Counterpoint rules can be expressed in a compact and understandable way using first-order logic. In general, musical rules express relations between notes. In order to learn such rules we used Pal <ref> [ Morales, 1991; 1992b ] </ref> an Inductive Logic Programming (ILP) system [ Muggleton, 1992 ] capable of learning a subset of Horn clauses from examples and background knowledge expressed as logic programs. <p> For instance, in chess the components refer to pieces, and examples are descriptions of the place of each piece in a chess board <ref> [ Morales, 1991; 1992b ] </ref> . In qualitative models, the components are state variables and the examples are given as values and trends of such variables in a particular qualitative state [ Morales, 1992a ] .
Reference: [ Morales, 1992a ] <author> E. Morales. </author> <title> First order induction of patterns in Chess. </title> <type> PhD thesis, </type> <institution> The Turing Institute - University of Strathclyde, </institution> <year> 1992. </year>
Reference-contexts: In qualitative models, the components are state variables and the examples are given as values and trends of such variables in a particular qualitative state <ref> [ Morales, 1992a ] </ref> . In the case of music, a musical score can be completely described by a the tone and height of each note involved, its time interval and the voice where it belongs. <p> The lgg between compatible literals is guided by the associated labels to produce a smaller number of literals as lggs are produced only between compatible literals with common labels. (A simple matching procedure is used for this purpose.) See <ref> [ Morales, 1992a ] </ref> for more details. 4 Experiments and results The following musical knowledge was provided to Pal: * interval (Note1, Note2, Interval ): describes the in terval between two notes of the same voice * det inter (Note1, Note2, Interval ): describes the in terval between two notes from
Reference: [ Morales, 1992b ] <author> E. Morales. </author> <title> Learning chess patterns. </title> <editor> In S. Muggleton, editor, </editor> <booktitle> Inductive Logic Programming, </booktitle> <pages> pages 517-537. </pages> <publisher> Academic Press, </publisher> <address> Boston, </address> <year> 1992. </year>
Reference: [ Muggleton and Buntine, 1988 ] <author> S. Muggle-ton and W. Buntine. </author> <title> Machine invention of first-order predicates by inverting resolution. </title> <editor> In J. Laird, editor, </editor> <booktitle> Proceedings of the Fifth International Conference on Machine Learning, </booktitle> <pages> pages 339-352, </pages> <address> San Mateo, CA, 1988. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: [ Muggleton and Feng, 1990 ] <author> S. Muggleton and C. Feng. </author> <title> Efficient Induction of Logic Programs. </title> <editor> In S. Arikaxa, S. Goto, S. Ohsuya, and T. Yokomari, editors, </editor> <booktitle> Proceedings of the Conference of Algorithmic Learning Theory, </booktitle> <pages> pages 368-381, </pages> <address> Tokyo, Japan, 1990. </address> <publisher> Ohmsha. </publisher>
Reference: [ Muggleton, 1992 ] <author> S. Muggleton. </author> <title> Inductive Logic Programming. </title> <publisher> Academic Press, </publisher> <address> Boston, </address> <year> 1992. </year>
Reference-contexts: Counterpoint rules can be expressed in a compact and understandable way using first-order logic. In general, musical rules express relations between notes. In order to learn such rules we used Pal [ Morales, 1991; 1992b ] an Inductive Logic Programming (ILP) system <ref> [ Muggleton, 1992 ] </ref> capable of learning a subset of Horn clauses from examples and background knowledge expressed as logic programs. <p> First we give a short description of Pal. Inductive Logic Programming (ILP) is a fast growing research area which combines Logic Programming and Machine Learning <ref> [ Muggleton, 1992 ] </ref> .
Reference: [ Niblett, 1988 ] <author> T. Niblett. </author> <title> A study of generalisation in logic programs. </title> <editor> In D. Sleeman and J. Richmond, editors, </editor> <booktitle> Proceedings of the Third European Working Session on Learning, </booktitle> <pages> pages 131-138, </pages> <address> London, 1988. </address> <publisher> Pitman. </publisher>
Reference-contexts: A direct implementation of it is impractical for all but the simplest cases, as it essentially involves the deduction of all ground atoms logically implied by the theory. (See <ref> [ Niblett, 1988 ] </ref> for a more thorough discussion on generalization.) However, practical implementations of rlgg exist for theories without variables (as in Golem [ Mug-gleton and Feng, 1990 ] ), without function symbols (as in Clint [ de Raedt and Bruynooghe, 1988 ] ), and when only a finite number
Reference: [ Plotkin, 1969 ] <author> G. D. Plotkin. </author> <title> A note on inductive generalization. </title> <editor> In B. Meltzer and D. Michie, editors, </editor> <booktitle> Machine intelligence 5, </booktitle> <pages> pages 153-163. </pages> <publisher> Edinburgh University Press, Edinburgh, </publisher> <year> 1969. </year>
Reference: [ Plotkin, 1971a ] <author> G. D. Plotkin. </author> <title> A further note of inductive generalization. </title> <editor> In B. Meltzer and D. Michie, editors, </editor> <booktitle> Machine intelligence 6, </booktitle> <pages> pages 101-124. </pages> <publisher> Edin-burgh University Press, Edinburgh, </publisher> <year> 1971. </year>
Reference: [ Plotkin, 1971b ] <author> G. D. Plotkin. </author> <title> Automatic methods of inductive inference. </title> <type> PhD thesis, </type> <institution> Edinburgh, </institution> <year> 1971. </year>
Reference: [ Widmer, 1992 ] <author> G. </author> <title> Widmer. The importance of basic musical knowledge for effective learning. </title> <editor> In K. Ebcioglu M. Balabam and O. Laske, editors, </editor> <title> Understanding Music with AI: </title> <booktitle> perspectives on music composition, </booktitle> <pages> pages 491-507. </pages> <publisher> AAAI Press/MIT Press, </publisher> <address> Menlo Park, CA, </address> <year> 1992. </year>
Reference-contexts: For example, given the cantus firmus below, we can generate the required counterpoint notes: ?- analysis (Notes,[d4,f4,e4,d4,g4,a4,g4,f4,e4,d4],[r1,r3,...]). Notes = [d3,d3,a3,f3,e3,d3,f3,c4,d4,cs4,d4]. 5 Related work Widmer describes an Explanation-based learning (EBL) algorithm enhanced with determinations (statements about dependencies between attributes) and heuristic rules to guide the learning process <ref> [ Widmer, 1992 ] </ref> . When an explanation cannot be produced directly using an existing concept (i.e., using EBL) the determinations and heuristics rules are used to produced explanations in terms of other known concepts.
References-found: 16

