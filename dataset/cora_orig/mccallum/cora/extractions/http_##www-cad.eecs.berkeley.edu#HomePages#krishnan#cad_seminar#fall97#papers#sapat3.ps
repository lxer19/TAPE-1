URL: http://www-cad.eecs.berkeley.edu/HomePages/krishnan/cad_seminar/fall97/papers/sapat3.ps
Refering-URL: http://www-cad.eecs.berkeley.edu/HomePages/krishnan/cad_seminar/fall97/abstract/sapatnekar.html
Root-URL: http://www.cs.berkeley.edu
Email: naresh@iastate.edu, sachin@iastate.edu  
Title: A Practical Algorithm for Retiming Level-Clocked Circuits  
Author: Naresh Maheshwari Sachin S. Sapatnekar 
Address: Ames, IA 50011.  
Affiliation: Department of Electrical and Computer Engineering Iowa State University,  
Abstract: A new approach for fast retiming of level-clocked circuits is presented here. The method relies on the relation between clock skew and retiming, and computes the optimal skew solution to translate it to a retiming. Since clock skew optimization operates on the latches (rather than the gates as in conventional retiming), it is much faster because of a smaller problem size; the translationto the retiming solution is computationally cheap. The minimum period retiming for each of the ISCAS89 circuits was obtained within minutes by this algorithm. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. B. Deokar and S. S. Sapatnekar. </author> <title> A graph-theoretic approach to clock skew optimization. </title> <booktitle> In Proceedings of the IEEE International Symposium on Circuits and Systems, </booktitle> <pages> pages 1.407-1.410, </pages> <year> 1994. </year>
Reference-contexts: For a given circuit and clocking scheme, E p (i);p (j) depends only on the period T . Therefore, for a constant value of T , the constraint matrix reduces to a system of difference constraints. The above linear program is similar to that in <ref> [1] </ref>, and can similarly be solved with a binary search on T , applying efficient graph-theoretic methods at each value of T to check for feasibility. 6 Phase B: Clock skew minimization 6.1 Introduction In Phase B, the magnitudes of the clock skew component of GDT's obtained from Phase A are <p> The results for unit gate delays were as expected, and the optimal skew period could be achieved after retiming for each circuit (unlike in the edge-triggered case <ref> [1] </ref>). We will not specifically show those results here; instead, in Tables 1 and 2, we show results for the case where the gate delays were chosen randomly. In this case, it will be seen that the optimal skew period is not always achievable.
Reference: [2] <author> R. B. Deokar and S. S. Sapatnekar. </author> <title> A fresh look at retiming via clock skew optimization. </title> <booktitle> In Proceedings of the ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 310-315, </pages> <year> 1995. </year>
Reference-contexts: Much work has been done in retiming circuits with edge-triggered flip-flops (FF's), and fast algorithm like <ref> [9, 2] </ref> are now available. However the current methods for the much harder problem of retiming circuits with level-triggered latches like [4, 6, 7] do not report results on large circuits and may be unable to handle them due to the large computational complexity. <p> Hence there is a need for fast automation tools to handle retiming of level-clocked circuits. This work is motivated by such a need. This approach is based on the relation between clock skew optimization [3] and retiming. This relation was utilized in <ref> [2] </ref> for fast retiming of circuits with edge-triggered FF's. <p> magnitude skew, S i : S i = &lt; X i if X i 0 X i + T i if T i &gt; X i 4 Equivalence between skew and retiming A formal presentation of the equivalence between clock skew and retiming for edge triggered FF's is presented in <ref> [2] </ref>. We suggest a similar relation between retiming and skew for level-clocked circuits. An FF can be conceptualized as a level sensitive latch with a very small active interval. <p> Since X i = S i + D i T , this gives us S i = X i . Hence, for Phase A we can think of X i for latches as skews for FF's and thus get the optimal clock period in a manner similar to <ref> [2] </ref>, with the difference that instead of the clock period, we use the phase shift operator, E i;j .
Reference: [3] <author> J. P. Fishburn. </author> <title> Clock skew optimization. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 39(7) </volume> <pages> 945-951, </pages> <month> July </month> <year> 1990. </year>
Reference-contexts: Level-clocked circuits have a potential to run at a faster clock than edge-triggered circuits. Hence there is a need for fast automation tools to handle retiming of level-clocked circuits. This work is motivated by such a need. This approach is based on the relation between clock skew optimization <ref> [3] </ref> and retiming. This relation was utilized in [2] for fast retiming of circuits with edge-triggered FF's.
Reference: [4] <author> A. Ishii, C. E. Leiserson, and M. C. Papaefthymiou. </author> <title> Optimizing two-phase, </title> <booktitle> level-clocked circuitry. In Advanced Research in VLSI and Parallel Systems: Proceedings of the 1992 Brown/MIT Conference, </booktitle> <pages> pages 246-264, </pages> <year> 1992. </year>
Reference-contexts: Much work has been done in retiming circuits with edge-triggered flip-flops (FF's), and fast algorithm like [9, 2] are now available. However the current methods for the much harder problem of retiming circuits with level-triggered latches like <ref> [4, 6, 7] </ref> do not report results on large circuits and may be unable to handle them due to the large computational complexity. Level-clocked circuits have a potential to run at a faster clock than edge-triggered circuits. <p> In this paper, we consider k-phase level-clocked circuits with no overlaps or underlaps. We expect that it would not be difficult to generalize this algorithm to handle overlaps or underlaps exist <ref> [4] </ref>. The circuits are assumed to be well-formed [6].
Reference: [5] <author> C. E. Leiserson and J. B. Saxe. </author> <title> Retiming synchronous circuitry. </title> <journal> Algorithmica, </journal> <volume> 6 </volume> <pages> 5-35, </pages> <year> 1991. </year>
Reference-contexts: 1 Introduction Timing optimization plays a vital role in the synthesis of VLSI circuits. One method that is of great interest to the design and CAD community is the procedure of retiming <ref> [5] </ref>, which takes an unoptimized circuit and relocates the memory elements (such as latches, flip-flops or registers) to achieve a specified or the minimum clock period. Much work has been done in retiming circuits with edge-triggered flip-flops (FF's), and fast algorithm like [9, 2] are now available.
Reference: [6] <author> B. Lockyear and C. Ebeling. </author> <title> Optimal retiming of level-clocked circuits using symmetric clock schedules. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <pages> pages 1097-1109, </pages> <month> Sept. </month> <year> 1994. </year>
Reference-contexts: Much work has been done in retiming circuits with edge-triggered flip-flops (FF's), and fast algorithm like [9, 2] are now available. However the current methods for the much harder problem of retiming circuits with level-triggered latches like <ref> [4, 6, 7] </ref> do not report results on large circuits and may be unable to handle them due to the large computational complexity. Level-clocked circuits have a potential to run at a faster clock than edge-triggered circuits. <p> In this paper, we consider k-phase level-clocked circuits with no overlaps or underlaps. We expect that it would not be difficult to generalize this algorithm to handle overlaps or underlaps exist [4]. The circuits are assumed to be well-formed <ref> [6] </ref>. <p> d ij L i;j A j A i D i which can be rewritten as (S i + D i ) + d ij E p (i);p (j) (S j + D j ) (5) 2 We do not consider short path constraints here, and rely on Theorem 1 in <ref> [6] </ref>, which assures us that in our final retimed circuit with zero skew, there will be no short path violations. <p> However due to limited space only a representative set of the results is presented. We present results for a one-phase and a symmetric two-phase clocking scheme <ref> [6] </ref> (with a 50% duty cycle). The one-phase circuits were obtained from the ISCAS89 circuits (which contain edge-triggered FF's only) by replacing each FF by a level sensitive latch. As in [7] the two-phase circuits were obtained by replacing each FF by a pair of latches.
Reference: [7] <author> M. C. Papaefthymiou and K. H. Randall. TIM: </author> <title> A timing package for two-phase, </title> <booktitle> level-clocked circuitry. In Proceedings of the ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 497-502, </pages> <year> 1993. </year>
Reference-contexts: Much work has been done in retiming circuits with edge-triggered flip-flops (FF's), and fast algorithm like [9, 2] are now available. However the current methods for the much harder problem of retiming circuits with level-triggered latches like <ref> [4, 6, 7] </ref> do not report results on large circuits and may be unable to handle them due to the large computational complexity. Level-clocked circuits have a potential to run at a faster clock than edge-triggered circuits. <p> We present results for a one-phase and a symmetric two-phase clocking scheme [6] (with a 50% duty cycle). The one-phase circuits were obtained from the ISCAS89 circuits (which contain edge-triggered FF's only) by replacing each FF by a level sensitive latch. As in <ref> [7] </ref> the two-phase circuits were obtained by replacing each FF by a pair of latches. For simplicity the delays, setup time and hold times of latches where taken to be zero, although nonzero values can easily be handled.
Reference: [8] <author> K. A. Sakallah, T. N. Mudge, and O. A. Olukotun. </author> <title> Analysis and design of latch-controlled synchronous digital circuits. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 11(3) </volume> <pages> 322-333, </pages> <month> Mar. </month> <year> 1992. </year>
Reference-contexts: experimental results in Section 8 and conclude the paper in Section 9.While we have attempted to present a complete description of the algorithm, some details have been omitted due to lack of space. 2 Clock model In this work, we have adopted the clock model of Sakallah, Mudge and Olukotun <ref> [8] </ref>, and we describe it here for completeness. A k-phase clock is a set of k periodic signals, = f 1 : : : k g where i is referred to as phase i of the clock .
Reference: [9] <author> N. Shenoy and R. Rudell. </author> <title> Efficient implementation of retim-ing. </title> <booktitle> In Proceedings of the IEEE/ACM International Conference on Computer-Aided Design, </booktitle> <pages> pages 226-233, </pages> <year> 1994. </year>
Reference-contexts: Much work has been done in retiming circuits with edge-triggered flip-flops (FF's), and fast algorithm like <ref> [9, 2] </ref> are now available. However the current methods for the much harder problem of retiming circuits with level-triggered latches like [4, 6, 7] do not report results on large circuits and may be unable to handle them due to the large computational complexity.
References-found: 9

