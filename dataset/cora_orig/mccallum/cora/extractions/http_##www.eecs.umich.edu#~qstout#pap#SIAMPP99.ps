URL: http://www.eecs.umich.edu/~qstout/pap/SIAMPP99.ps
Refering-URL: http://www.eecs.umich.edu/~qstout/papers.html
Root-URL: http://www.eecs.umich.edu
Title: Load Balancing 2-Phased Geometrically Based Problems  
Author: Andrew A. Poe Quentin F. Stout 
Note: In Proc. 9 th SIAM Conf. on Parallel Processing (1999), to appear.  
Abstract: A k-weighted graph is a directed graph where each vertex has k associated weights. Partitioning such a graph so that each weight is roughly evenly divided into each piece is useful for balancing a parallel task with k distinct components. Such a goal arises in crash simulation, in which there there are 2 components. We present a 2-weighted graph partitioning algorithm, based on the Ham Sandwich Theorem, for graphs embedded in 2-space. We demonstrate that this algorithm runs in linear expected time and yields a good partition in practice.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. J. Benson and J. O. Hallquist, </author> <title> A single surface contact algorithm for the postbuckling analysis of shell structures, </title> <institution> Report to the University of California at San Diego, </institution> <address> CA, </address> <year> 1987 </year>
Reference-contexts: If so, the algorithm applies a recoil force to those elements in contact in an attempt to rectify the physical impossibility of two objects occupying the same space at the same time. This is called the contact phase. (These phases are detailed in <ref> [1] </ref>.) We encountered this example when we were working under a grant from the Ford Motor Company. The impact analysis algorithms we coded were simulations of automobile collisions. The load balancing algorithm we initially used for this analysis was designed to balance the force calculation phase of the program.
Reference: [2] <author> G. Karypis and V. Kumar, </author> <title> METIS unstructured graph partitioning and sparse matrix ordering system version 2.0, Instruction manual </title>
Reference-contexts: The combined nodes are separated again in reverse order, making local corrections to the partition when necessary. Metis 2.0 was the version used; however, as described below, Metis 4.0 is now available and is a more sophisticated version. <ref> [2] </ref> 5.5 Dual Weight Greedy Bisection This is a modified version of Metis using Karen Tomko's dual weight partition strategy which generalized Metis to partition graphs with two-vertex weights. [6] Tomko called her algorithm Dual Weight Greedy Bisection.
Reference: [3] <author> G. Karypis and V. Kumar, </author> <title> Multilevel algorithms for multi-constraint graph partitioning, </title> <type> Technical Report #98-019, </type> <institution> University of Minnesota, Department of Computer Science/Army HPC Research Center </institution>
Reference-contexts: This gives us a new benchmark with which to compare our work. Metis 4.0 uses methods that are based on principles similar to the ones on which Tomko's Dual Weight Greedy Bisection is based, but appear to be more sophisticated <ref> [3] </ref>. At the time of this writing, we have not yet compared our code extensively against Metis 4.0; however, we plan to do this in the immediate future. We are also continuing to improve and refine our code.
Reference: [4] <author> J. Matousek, </author> <title> Ham-sandwich cut in the plane, section of unpublished textbook </title>
Reference-contexts: n points to be partitioned into p sets, the algorithm will run in O (n log p) expected time. 4 4 The BHS Algorithm 4.1 Introduction The Biweighted Ham Sandwich (BHS) algorithm we implemented for the purpose of 2-weighted balancing was based upon a randomized ham sandwich algorithm by Matousek <ref> [4] </ref> that runs in linear time on average on the number of points in the discrete sets. Matousek's original algorithm had several defects which we corrected in BHS, the most serious of which were its requirement that the two point sets be disjoint and its inability to handle weighted points.
Reference: [5] <author> J. V. Peters, </author> <title> The ham sandwich theorem and some related results, </title> <journal> The Rocky Mountain Journal of Mathematics, </journal> <volume> 11 (1981), </volume> <pages> pp. 473-482 </pages>
Reference-contexts: so that the sum of the associated weights of each (P p i " R j ) is at most half of the sum of the associated weights of P i , where P p i is the set of associated points of the elements of P i . 2 <ref> [5] </ref> Historically, this theorem generally refers to manifolds rather than to discrete point sets. <p> In 3-space, any three solid objects can be split in half with a single planar cut. These three objects might be two slices of bread and a slice of ham. The name of this theorem derives from this example. <ref> [5] </ref> The Ham Sandwich Theorem shows immediate application for the k-weighted balancing problem. If we take k to be 2, and the vertices of our graph have explicit coordinates in the Cartesian plane, we can consider the vertices to be two sets of discrete weighted points.
Reference: [6] <author> K. A. Tomko, </author> <title> Domain decomposition, irregular applications, and parallel computers, </title> <type> Ph.D. thesis, </type> <institution> The University of Michigan (1995) </institution>
Reference-contexts: We were able to modify the algorithm to consider edge cuts as well. Prior to applying BHS to the graph, the graph was contracted via a coarsening strategy suggested in Karen Tomko's Ph.D. thesis <ref> [6] </ref>: A vertex is chosen randomly from the graph and is paired with the adjacent vertex (i.e. a vertex sharing an edge with the chosen vertex) that minimizes the absolute difference between the sums over both vertices of the two weights. <p> This continues until the number of vertices falls below a fixed coarsening constant. At this point, BHS is applied to the smaller graph. The graph is then refined by undoing the previous contractions and applying the following local correction strategy, also from <ref> [6] </ref>. With this strategy, boundary vertices are relocated to the other piece if doing so will decrease the weight of the severed edges and if the relative difference of the vertex weights of the partitions would not rise above a user-specified partitioning constant should such a move be made. <p> Metis 2.0 was the version used; however, as described below, Metis 4.0 is now available and is a more sophisticated version. [2] 5.5 Dual Weight Greedy Bisection This is a modified version of Metis using Karen Tomko's dual weight partition strategy which generalized Metis to partition graphs with two-vertex weights. <ref> [6] </ref> Tomko called her algorithm Dual Weight Greedy Bisection. The basic algorithm chooses a vertex at random from the graph and makes it the starting point for a subset of the graph called subdomain 0.
References-found: 6

