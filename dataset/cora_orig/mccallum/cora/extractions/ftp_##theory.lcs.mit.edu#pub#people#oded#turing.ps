URL: ftp://theory.lcs.mit.edu/pub/people/oded/turing.ps
Refering-URL: http://theory.lcs.mit.edu/~oded/complexity.html
Root-URL: 
Title: Randomness, Interactive Proofs and Zero-Knowledge (a survey)  
Author: Oded Goldreich 
Note: Appears in The Universal Turing Machine: A Half-Century Survey, R. Herken ed., Kammerer/Unverzagt Verlag and Oxford University Press, 1987.  
Address: Israel  
Affiliation: Computer Science Dept. Technion, Haifa,  
Abstract: Recent approaches to the notions of randomness and proofs are surveyed. The new notions differ from the traditional ones in being subjective to the capabilities of the observer rather than reecting "ideal" entities. The new notion of randomness regards probability distributions as equal if they cannot be told apart by efcioent procedures. This notion is constructive and is suited for many applications. The new notion of a proof allows the introduction of the notion of zero-knowledge proofs: convincing arguments which yield nothing but the validity of the assertion. The new approaches to randomness and proofs are based on basic concepts and results from the theory of resource-bounded computation. In order to make the survey as accessible as possible, we have presented elements of the theory of resource bounded computation (but only to the extent required for the description of the new approaches). This survey is not intended to provide an account of the more traditional approaches to randomness (e.g. Kolmogorov Complexity) and proofs (i.e. traditional logic systems). Whenever these approaches are described it is only in order to confront them with the new approaches. 
Abstract-found: 1
Intro-found: 1
Reference: [ACGS] <author> Alexi, W., B. Chor, O. Goldreich and C.P. Schnorr, </author> <title> "RSA and Rabin Functions: Certain Parts Are As Hard As the Whole", </title> <booktitle> Proc. 25th IEEE Symp. on Foundation of Computer Science, </booktitle> <year> 1984, </year> <pages> pp. 449-457, </pages> <note> (to appear in SIAM J. Computing). </note>
Reference-contexts: A ner analysis, which uses a weaker (necessary and sufcient) condition, of Theorems 3 and 4 appears in [L]. Predicates which are hard-core of the particular number theoretic functions mentioned in section 2.4, appear in [BM] and <ref> [ACGS] </ref>. Denition 7 (pseudorandom functions) and Theorem 5 (pseudorandom generators imply pseudorandom function generators) appear in [GGM]. Further developments appear in [LR]. Two different denitions of interactive proofs appear in [GMR] and [B], respectively. In section 4, we have used the denition of [GMR].
Reference: [B] <author> Babai, L., </author> <title> "Trading Group Theory for Randomness", </title> <booktitle> Proc. 17th ACM Symp. on Theory of Computing, </booktitle> <year> 1985, </year> <pages> pp. 421-429. </pages>
Reference-contexts: Denition 7 (pseudorandom functions) and Theorem 5 (pseudorandom generators imply pseudorandom function generators) appear in [GGM]. Further developments appear in [LR]. Two different denitions of interactive proofs appear in [GMR] and <ref> [B] </ref>, respectively. In section 4, we have used the denition of [GMR]. The denition in [B] (Arthur Merlin games) is a special case of it. The denitions were proven to be equivalent in [GS]. The interactive proof for Graph Non-Isomorphism originates from [GMW1]. <p> Denition 7 (pseudorandom functions) and Theorem 5 (pseudorandom generators imply pseudorandom function generators) appear in [GGM]. Further developments appear in [LR]. Two different denitions of interactive proofs appear in [GMR] and <ref> [B] </ref>, respectively. In section 4, we have used the denition of [GMR]. The denition in [B] (Arthur Merlin games) is a special case of it. The denitions were proven to be equivalent in [GS]. The interactive proof for Graph Non-Isomorphism originates from [GMW1].
Reference: [BM] <author> Blum, M., and Micali, S., </author> <title> "How to Generate Cryptographically Strong Sequences of Pseudo-Random Bits", </title> <journal> SIAM Jour. on Computing, </journal> <volume> Vol. 13, </volume> <year> 1984, </year> <pages> pp. 850-864. </pages>
Reference-contexts: Denition 1 (one-way functions), however, is a weaker form and is due to [Y1]. A special case of Denition 2 (indistinguishability) rst appeared in [GM], the general case is from [Y1]. Denitions 3 and 4 (pseudorandomness) are due to [Y1], while Denition 5 (unpredictability) appears in <ref> [BM] </ref>. Theorem 2 (equivalence of Def's 3 and 5) is implicit in [Y1]. Denition 6 (hard-core predicate), Construction 1 (pseudorandom generator based on a hard-core predicate) and Lemma 1 appear in [BM]. <p> Denitions 3 and 4 (pseudorandomness) are due to [Y1], while Denition 5 (unpredictability) appears in <ref> [BM] </ref>. Theorem 2 (equivalence of Def's 3 and 5) is implicit in [Y1]. Denition 6 (hard-core predicate), Construction 1 (pseudorandom generator based on a hard-core predicate) and Lemma 1 appear in [BM]. Theorem 3 (existence of hard-core predicates assuming one-way 1-1 functions) is implicit in [Y1], where a sketch of the proof of Theorem 4 (pseudorandom generator based on one-way 1-1 functions) appears. <p> A ner analysis, which uses a weaker (necessary and sufcient) condition, of Theorems 3 and 4 appears in [L]. Predicates which are hard-core of the particular number theoretic functions mentioned in section 2.4, appear in <ref> [BM] </ref> and [ACGS]. Denition 7 (pseudorandom functions) and Theorem 5 (pseudorandom generators imply pseudorandom function generators) appear in [GGM]. Further developments appear in [LR]. Two different denitions of interactive proofs appear in [GMR] and [B], respectively. In section 4, we have used the denition of [GMR].
Reference: [DH] <author> Dife, W., and M. E. Hellman, </author> <title> "New Directions in Cryptography", </title> <journal> IEEE transactions on Info. Theory, IT-22 (Nov. </journal> <year> 1976), </year> <pages> pp. 644-654 </pages>
Reference-contexts: Finally, thanks to Dassi. - 25 - BIBLIOGRAPHIC NOTES For background on Computational Complexity consult an appropriate textbook such as [HU, ch. 12-13] and [GJ]. The notion of one-way functions was rst suggested in <ref> [DH] </ref>, and the most famous candidate is due to [RSA]. A 1-1 function which is one-way, unless factoring is easy appears in [R]. Denition 1 (one-way functions), however, is a weaker form and is due to [Y1].
Reference: [GJ] <author> Garey, </author> <title> M.R., and D.S. Johnson, Computers and Intractability: A Guide to the Theory of NP-Completeness, W.H. </title> <publisher> Freeman and Company, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: Thanks to Hugo Krawczyk for carefully reading an earlier version of the manuscript, pointing out some errors, and suggesting several improvements. Finally, thanks to Dassi. - 25 - BIBLIOGRAPHIC NOTES For background on Computational Complexity consult an appropriate textbook such as [HU, ch. 12-13] and <ref> [GJ] </ref>. The notion of one-way functions was rst suggested in [DH], and the most famous candidate is due to [RSA]. A 1-1 function which is one-way, unless factoring is easy appears in [R]. Denition 1 (one-way functions), however, is a weaker form and is due to [Y1].
Reference: [GGM] <author> Goldreich, O., S. Goldwasser, and S. Micali, </author> <title> "How to Construct Random Functions", </title> <journal> Jour. of ACM, </journal> <volume> Vol. 33, No. 4, </volume> <year> 1986, </year> <pages> pp. 792-807. </pages>
Reference-contexts: Predicates which are hard-core of the particular number theoretic functions mentioned in section 2.4, appear in [BM] and [ACGS]. Denition 7 (pseudorandom functions) and Theorem 5 (pseudorandom generators imply pseudorandom function generators) appear in <ref> [GGM] </ref>. Further developments appear in [LR]. Two different denitions of interactive proofs appear in [GMR] and [B], respectively. In section 4, we have used the denition of [GMR]. The denition in [B] (Arthur Merlin games) is a special case of it. The denitions were proven to be equivalent in [GS].
Reference: [GMW1] <author> Goldreich, O., S. Micali, and A. Wigderson, </author> <title> "Proofs that Yield Nothing But their Validity and a Methodology of Cryptographic Protocol Design", </title> <booktitle> Proc. of 27th Symp. on Foundation of Computer Science, </booktitle> <year> 1986, </year> <pages> pp. 174-187. </pages>
Reference-contexts: In section 4, we have used the denition of [GMR]. The denition in [B] (Arthur Merlin games) is a special case of it. The denitions were proven to be equivalent in [GS]. The interactive proof for Graph Non-Isomorphism originates from <ref> [GMW1] </ref>. The denition of a zero-knowledge proof originates from [GMR], which contains also a more general denition of the "amount of knowledge contained in a proof". The zero-knowledge proof for Graph Isomor-phism as well as Theorem 6 (all NP languages have zero-knowledge proofs) appears in [GMW1]. (For a denition of secure <p> for Graph Non-Isomorphism originates from <ref> [GMW1] </ref>. The denition of a zero-knowledge proof originates from [GMR], which contains also a more general denition of the "amount of knowledge contained in a proof". The zero-knowledge proof for Graph Isomor-phism as well as Theorem 6 (all NP languages have zero-knowledge proofs) appears in [GMW1]. (For a denition of secure encryption functions see [GM].) The applications mentioned in section 5.4 appear in [GMW1, GMW2]. Further developments appear in [Y2] and [GMW2]. - 26 - <p> The zero-knowledge proof for Graph Isomor-phism as well as Theorem 6 (all NP languages have zero-knowledge proofs) appears in [GMW1]. (For a denition of secure encryption functions see [GM].) The applications mentioned in section 5.4 appear in <ref> [GMW1, GMW2] </ref>. Further developments appear in [Y2] and [GMW2]. - 26 -
Reference: [GMW2] <author> Goldreich, O., S. Micali, and A. Wigderson, </author> <title> "How to Play any Mental Game or A Completeness Theorem for Protocols with Honest Majority", </title> <booktitle> Proc. 19th ACM Symp. on Theory of Computing, </booktitle> <year> 1987, </year> <pages> pp. 218-229. </pages>
Reference-contexts: The zero-knowledge proof for Graph Isomor-phism as well as Theorem 6 (all NP languages have zero-knowledge proofs) appears in [GMW1]. (For a denition of secure encryption functions see [GM].) The applications mentioned in section 5.4 appear in <ref> [GMW1, GMW2] </ref>. Further developments appear in [Y2] and [GMW2]. - 26 - <p> The zero-knowledge proof for Graph Isomor-phism as well as Theorem 6 (all NP languages have zero-knowledge proofs) appears in [GMW1]. (For a denition of secure encryption functions see [GM].) The applications mentioned in section 5.4 appear in [GMW1, GMW2]. Further developments appear in [Y2] and <ref> [GMW2] </ref>. - 26 -
Reference: [GM] <author> Goldwasser, S., and S. Micali, </author> <title> "Probabilistic Encryption", </title> <journal> JCSS, </journal> <volume> Vol. 28, No. 2, </volume> <year> 1984, </year> <pages> pp. 270-299. </pages>
Reference-contexts: In presenting a zero-knowledge proof for L 0 , we use any secure encryption scheme (in the sense of Goldwasser and Micali <ref> [GM] </ref>). The existence of such schemes is guaranteed by our assumption that one-way 1-1 functions exist. - 21 - As the basis for the construction (i.e. the language L 0 ), we use the set of 3-colourability graphs. <p> A 1-1 function which is one-way, unless factoring is easy appears in [R]. Denition 1 (one-way functions), however, is a weaker form and is due to [Y1]. A special case of Denition 2 (indistinguishability) rst appeared in <ref> [GM] </ref>, the general case is from [Y1]. Denitions 3 and 4 (pseudorandomness) are due to [Y1], while Denition 5 (unpredictability) appears in [BM]. Theorem 2 (equivalence of Def's 3 and 5) is implicit in [Y1]. <p> The zero-knowledge proof for Graph Isomor-phism as well as Theorem 6 (all NP languages have zero-knowledge proofs) appears in [GMW1]. (For a denition of secure encryption functions see <ref> [GM] </ref>.) The applications mentioned in section 5.4 appear in [GMW1, GMW2]. Further developments appear in [Y2] and [GMW2]. - 26 -
Reference: [GMR] <author> Goldwasser, S., S. Micali, and C. Rackoff, </author> <title> "Knowledge Complexity of Interactive Proofs", </title> <booktitle> Proc. 17th ACM Symp. on Theory of Computing, </booktitle> <year> 1985, </year> <pages> pp. 291-304, </pages> <note> (to appear in SIAM J. Computing). </note>
Reference-contexts: Predicates which are hard-core of the particular number theoretic functions mentioned in section 2.4, appear in [BM] and [ACGS]. Denition 7 (pseudorandom functions) and Theorem 5 (pseudorandom generators imply pseudorandom function generators) appear in [GGM]. Further developments appear in [LR]. Two different denitions of interactive proofs appear in <ref> [GMR] </ref> and [B], respectively. In section 4, we have used the denition of [GMR]. The denition in [B] (Arthur Merlin games) is a special case of it. The denitions were proven to be equivalent in [GS]. The interactive proof for Graph Non-Isomorphism originates from [GMW1]. <p> Denition 7 (pseudorandom functions) and Theorem 5 (pseudorandom generators imply pseudorandom function generators) appear in [GGM]. Further developments appear in [LR]. Two different denitions of interactive proofs appear in <ref> [GMR] </ref> and [B], respectively. In section 4, we have used the denition of [GMR]. The denition in [B] (Arthur Merlin games) is a special case of it. The denitions were proven to be equivalent in [GS]. The interactive proof for Graph Non-Isomorphism originates from [GMW1]. The denition of a zero-knowledge proof originates from [GMR], which contains also a more general denition of the "amount <p> In section 4, we have used the denition of <ref> [GMR] </ref>. The denition in [B] (Arthur Merlin games) is a special case of it. The denitions were proven to be equivalent in [GS]. The interactive proof for Graph Non-Isomorphism originates from [GMW1]. The denition of a zero-knowledge proof originates from [GMR], which contains also a more general denition of the "amount of knowledge contained in a proof".
Reference: [GS] <author> Goldwasser, S., and M. Sipser, </author> <title> "Arthur Merlin Games versus Interactive Proof Systems", </title> <booktitle> Proc. 18th ACM Symp. on Theory of Computing, </booktitle> <year> 1986, </year> <pages> pp. 59-68. </pages>
Reference-contexts: Further developments appear in [LR]. Two different denitions of interactive proofs appear in [GMR] and [B], respectively. In section 4, we have used the denition of [GMR]. The denition in [B] (Arthur Merlin games) is a special case of it. The denitions were proven to be equivalent in <ref> [GS] </ref>. The interactive proof for Graph Non-Isomorphism originates from [GMW1]. The denition of a zero-knowledge proof originates from [GMR], which contains also a more general denition of the "amount of knowledge contained in a proof".
Reference: [HU] <author> Hopcroft, J.E., and J.D. Ullman, </author> <title> Introduction to Automata Theory, Languages, and Computation, </title> <publisher> Addison-Wesley Publishing Co., </publisher> <year> 1979. </year>
Reference-contexts: Thanks to Hugo Krawczyk for carefully reading an earlier version of the manuscript, pointing out some errors, and suggesting several improvements. Finally, thanks to Dassi. - 25 - BIBLIOGRAPHIC NOTES For background on Computational Complexity consult an appropriate textbook such as <ref> [HU, ch. 12-13] </ref> and [GJ]. The notion of one-way functions was rst suggested in [DH], and the most famous candidate is due to [RSA]. A 1-1 function which is one-way, unless factoring is easy appears in [R].
Reference: [L] <author> Levin, L.A. </author> <title> "One-Way Function and Pseudorandom Generators", </title> <booktitle> Proc. 17th ACM Symp. on Theory of Computing, </booktitle> <year> 1985, </year> <pages> pp. 363-365. </pages>
Reference-contexts: Theorem 3 (existence of hard-core predicates assuming one-way 1-1 functions) is implicit in [Y1], where a sketch of the proof of Theorem 4 (pseudorandom generator based on one-way 1-1 functions) appears. A ner analysis, which uses a weaker (necessary and sufcient) condition, of Theorems 3 and 4 appears in <ref> [L] </ref>. Predicates which are hard-core of the particular number theoretic functions mentioned in section 2.4, appear in [BM] and [ACGS]. Denition 7 (pseudorandom functions) and Theorem 5 (pseudorandom generators imply pseudorandom function generators) appear in [GGM]. Further developments appear in [LR].
Reference: [LR] <author> Luby, M., and C. Rackoff, </author> <title> "Pseudo Random Permutation Generators and DES", </title> <booktitle> Proc. 18th ACM Symp. on Theory of Computing, </booktitle> <year> 1986, </year> <pages> pp. 356-363. </pages>
Reference-contexts: Predicates which are hard-core of the particular number theoretic functions mentioned in section 2.4, appear in [BM] and [ACGS]. Denition 7 (pseudorandom functions) and Theorem 5 (pseudorandom generators imply pseudorandom function generators) appear in [GGM]. Further developments appear in <ref> [LR] </ref>. Two different denitions of interactive proofs appear in [GMR] and [B], respectively. In section 4, we have used the denition of [GMR]. The denition in [B] (Arthur Merlin games) is a special case of it. The denitions were proven to be equivalent in [GS].
Reference: [R] <author> Rabin, M.O. </author> <title> "Digitalized Signatures and Public Key Functions as Intractable as Factoring", </title> <address> MIT/LCS/TR-212, </address> <year> 1979. </year>
Reference-contexts: The notion of one-way functions was rst suggested in [DH], and the most famous candidate is due to [RSA]. A 1-1 function which is one-way, unless factoring is easy appears in <ref> [R] </ref>. Denition 1 (one-way functions), however, is a weaker form and is due to [Y1]. A special case of Denition 2 (indistinguishability) rst appeared in [GM], the general case is from [Y1]. Denitions 3 and 4 (pseudorandomness) are due to [Y1], while Denition 5 (unpredictability) appears in [BM].
Reference: [RSA] <author> Rivest, R., A. Shamir, and L. Adleman, </author> <title> "A Method for Obtaining Digital Signatures and Public Key Cryp-tosystems", </title> <journal> Comm. ACM, </journal> <volume> Vol. 21, </volume> <month> Feb. </month> <year> 1978, </year> <pages> pp. 120-126 </pages>
Reference-contexts: Finally, thanks to Dassi. - 25 - BIBLIOGRAPHIC NOTES For background on Computational Complexity consult an appropriate textbook such as [HU, ch. 12-13] and [GJ]. The notion of one-way functions was rst suggested in [DH], and the most famous candidate is due to <ref> [RSA] </ref>. A 1-1 function which is one-way, unless factoring is easy appears in [R]. Denition 1 (one-way functions), however, is a weaker form and is due to [Y1]. A special case of Denition 2 (indistinguishability) rst appeared in [GM], the general case is from [Y1].
Reference: [Y1] <author> Yao, </author> <title> A.C., "Theory and Applications of Trapdoor Functions", </title> <booktitle> Proc. of the 23rd IEEE Symp. on Foundation of Computer Science, </booktitle> <year> 1982, </year> <pages> pp. 80-91. </pages>
Reference-contexts: The notion of one-way functions was rst suggested in [DH], and the most famous candidate is due to [RSA]. A 1-1 function which is one-way, unless factoring is easy appears in [R]. Denition 1 (one-way functions), however, is a weaker form and is due to <ref> [Y1] </ref>. A special case of Denition 2 (indistinguishability) rst appeared in [GM], the general case is from [Y1]. Denitions 3 and 4 (pseudorandomness) are due to [Y1], while Denition 5 (unpredictability) appears in [BM]. Theorem 2 (equivalence of Def's 3 and 5) is implicit in [Y1]. <p> A 1-1 function which is one-way, unless factoring is easy appears in [R]. Denition 1 (one-way functions), however, is a weaker form and is due to <ref> [Y1] </ref>. A special case of Denition 2 (indistinguishability) rst appeared in [GM], the general case is from [Y1]. Denitions 3 and 4 (pseudorandomness) are due to [Y1], while Denition 5 (unpredictability) appears in [BM]. Theorem 2 (equivalence of Def's 3 and 5) is implicit in [Y1]. Denition 6 (hard-core predicate), Construction 1 (pseudorandom generator based on a hard-core predicate) and Lemma 1 appear in [BM]. <p> Denition 1 (one-way functions), however, is a weaker form and is due to <ref> [Y1] </ref>. A special case of Denition 2 (indistinguishability) rst appeared in [GM], the general case is from [Y1]. Denitions 3 and 4 (pseudorandomness) are due to [Y1], while Denition 5 (unpredictability) appears in [BM]. Theorem 2 (equivalence of Def's 3 and 5) is implicit in [Y1]. Denition 6 (hard-core predicate), Construction 1 (pseudorandom generator based on a hard-core predicate) and Lemma 1 appear in [BM]. <p> form and is due to <ref> [Y1] </ref>. A special case of Denition 2 (indistinguishability) rst appeared in [GM], the general case is from [Y1]. Denitions 3 and 4 (pseudorandomness) are due to [Y1], while Denition 5 (unpredictability) appears in [BM]. Theorem 2 (equivalence of Def's 3 and 5) is implicit in [Y1]. Denition 6 (hard-core predicate), Construction 1 (pseudorandom generator based on a hard-core predicate) and Lemma 1 appear in [BM]. Theorem 3 (existence of hard-core predicates assuming one-way 1-1 functions) is implicit in [Y1], where a sketch of the proof of Theorem 4 (pseudorandom generator based on one-way 1-1 functions) appears. <p> Theorem 2 (equivalence of Def's 3 and 5) is implicit in <ref> [Y1] </ref>. Denition 6 (hard-core predicate), Construction 1 (pseudorandom generator based on a hard-core predicate) and Lemma 1 appear in [BM]. Theorem 3 (existence of hard-core predicates assuming one-way 1-1 functions) is implicit in [Y1], where a sketch of the proof of Theorem 4 (pseudorandom generator based on one-way 1-1 functions) appears. A ner analysis, which uses a weaker (necessary and sufcient) condition, of Theorems 3 and 4 appears in [L].
Reference: [Y2] <author> Yao, </author> <title> A.C., "How to Generate and Exchange Secrets", </title> <booktitle> Proc. of the 27th IEEE Symp. on Foundation of Computer Science, </booktitle> <year> 1986, </year> <pages> pp. 162-167. </pages>
Reference-contexts: The zero-knowledge proof for Graph Isomor-phism as well as Theorem 6 (all NP languages have zero-knowledge proofs) appears in [GMW1]. (For a denition of secure encryption functions see [GM].) The applications mentioned in section 5.4 appear in [GMW1, GMW2]. Further developments appear in <ref> [Y2] </ref> and [GMW2]. - 26 -
References-found: 18

