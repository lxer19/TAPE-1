URL: file://ftp.cis.ohio-state.edu/pub/communication/techreports/tr47-94-trip-multicast.ps.Z
Refering-URL: http://www.cis.ohio-state.edu/~panda/wormhole_pub.html
Root-URL: 
Title: A Trip-based Multicasting Model in Wormhole-routed Networks with Virtual Channels  
Author: Yu-Chee Tseng, Dhabaleswar K. Panda, and Ten-Hwang Lai 
Abstract: Technical Report OSU-CISRC-8/94-TR47 A preliminary version of this paper was presented in International Parallel Processing Symposium (IPPS '93). Manuscript is under review for IEEE Transactions on Parallel and Distributed Systems. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> MPI: </author> <title> A message-passing interface standard. In Message Passing Interface Forum, </title> <month> March </month> <year> 1994. </year>
Reference-contexts: Multicast represents the most complex communication pattern. Numerous applications, such as parallel search algorithms, graph algorithms, and barrier synchronization, can benefit from multicast services [21]. Multi-casting is also necessary to support cache-coherency in distributed-shared-memory systems [20]. Multicasting/broadcasting has been defined in the MPI (Message Passing Interface) standard <ref> [1] </ref> as an instrumental operation in implementing collective communication operations (barrier synchronization, allgather, and global reduction) in distributed-memory systems.
Reference: [2] <author> H. Abu-Amara. </author> <title> A fast topology maintainance algorithm for high-bandwidth networks. </title> <journal> IEEE/ACM Trans. on Networks, </journal> <volume> 1(3) </volume> <pages> 386-394, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: For load balance, let's choose fg; hg to be reached by an f-worm, and fb; cg by a b-worm. Thus, S f = [ f (d; g); f (d; h)] = [10; 11] and S b = [ b (d; c); b (d; b)] = <ref> [3; 2] </ref>. The f-worm will start from ^ d 4 and the b-worm from ^ d 8 . The real paths traversed by the f- and b-worms will dynamically depend on the traffic in the system. <p> If the network topology may change (e.g., because nodes fail or rejoin after being fixed), we can reconfigure our model by finding another trip and updating the labeling function in each node. Reconfiguration needs to collect global topology information. Such algorithms do exist <ref> [2, 6] </ref>. As the network remaining connected is the minimum requirement to perform multicast, our algorithm has the maximum (static) fault-tolerant capability. It is also to be noted that a special case of our model is the Hamiltonian path model [21, 22], where the network is Hamiltonian.
Reference: [3] <author> D. P. Bertsekas, C. Ozveren, G. D. Stamoulis, P. Tseng, and J. N. Tsitsiklis. </author> <title> Optimal communication algorithms for hypercubes. </title> <journal> J. of Parallel and Distrib. Comput., </journal> <volume> 11 </volume> <pages> 263-275, </pages> <year> 1991. </year>
Reference-contexts: Packet and circuit switching have been used in the first- and second-generation parallel computers and much work about routing can be found in the literature <ref> [3, 4, 16, 17, 29] </ref>. However, the more recent parallel computers (such as Intel Touchstone DELTA, Intel Paragon, MIT J-machine, Caltech MOSAIC, and Cray T3D) have adopted wormhole routing, which is known to be quite insensitive to routing distance if the network is contention-free. <p> For load balance, let's choose fg; hg to be reached by an f-worm, and fb; cg by a b-worm. Thus, S f = [ f (d; g); f (d; h)] = [10; 11] and S b = [ b (d; c); b (d; b)] = <ref> [3; 2] </ref>. The f-worm will start from ^ d 4 and the b-worm from ^ d 8 . The real paths traversed by the f- and b-worms will dynamically depend on the traffic in the system.
Reference: [4] <author> G. I. Chen and T. H. Lai. </author> <title> Constructing parallel paths between two subcubes. </title> <journal> IEEE Trans. on Comput., </journal> <volume> 41(1) </volume> <pages> 118-123, </pages> <month> Jan. </month> <year> 1992. </year>
Reference-contexts: Packet and circuit switching have been used in the first- and second-generation parallel computers and much work about routing can be found in the literature <ref> [3, 4, 16, 17, 29] </ref>. However, the more recent parallel computers (such as Intel Touchstone DELTA, Intel Paragon, MIT J-machine, Caltech MOSAIC, and Cray T3D) have adopted wormhole routing, which is known to be quite insensitive to routing distance if the network is contention-free.
Reference: [5] <author> A. A. Chien and J. H. Kim. </author> <title> Planar-adaptive routing: Low-cost adaptive networks for multiprocessors. </title> <booktitle> In Int'l Symp. on Computer Architecture, </booktitle> <pages> pages 268-277, </pages> <year> 1992. </year>
Reference-contexts: Background of wormhole routing can be found in [9] and that of virtual channels in [10]. Using virtual channels is common in the literature and has been proved to have the following merits: to avoid deadlock <ref> [5, 10, 23] </ref>, to increase physical channel utilization [8], and to exploit routing adaptivity [11, 14, 23]. A survey of various routing algorithms can be found in [26]. The rest of this paper is organized as follows: The trip-based model and its fundamental properties are investigated in Section 2. <p> However, given any network, it might be difficult to find such a trip (if not impossible). Below we show how to solve this problem using virtual channels. Using virtual channels is a common technique to separate the resource dependency and thus avoid possible deadlock <ref> [5, 10, 23] </ref>. Conceptually, a physical channel is separated into multiple virtual channels which share the physical channel in time-multiplexing or demand-multiplexing manner. Messages are propagated in the network by grabbing one virtual channel after another.
Reference: [6] <author> I. Cidon, I. Gopal, and S. Kutten. </author> <title> New models and algorithms for future networks. </title> <booktitle> In Symp. on Principle of Distributed Computing, </booktitle> <pages> pages 75-89, </pages> <year> 1988. </year>
Reference-contexts: If the network topology may change (e.g., because nodes fail or rejoin after being fixed), we can reconfigure our model by finding another trip and updating the labeling function in each node. Reconfiguration needs to collect global topology information. Such algorithms do exist <ref> [2, 6] </ref>. As the network remaining connected is the minimum requirement to perform multicast, our algorithm has the maximum (static) fault-tolerant capability. It is also to be noted that a special case of our model is the Hamiltonian path model [21, 22], where the network is Hamiltonian.
Reference: [7] <author> Cray Research, Inc. </author> <title> Cray T3D System Architecture Overview, </title> <year> 1993. </year>
Reference-contexts: It is to be noted that such scheme involves routing table to be stored at the router interface. It has been shown in the current Cray T3D system <ref> [7] </ref> that such routing table approach leads to flexibility in providing easy system reconfigurability and fault-tolerance. B) Communication Overhead: The message initiation is dominated by the sorting operations and has complexity O (jDj log jDj), where D is the destination set.
Reference: [8] <author> W. J. Dally. </author> <title> Virtual-channel flow control. </title> <journal> IEEE Trans. on Paral. and Distrib. Sys., </journal> <volume> 3(2) </volume> <pages> 194-205, </pages> <month> March </month> <year> 1992. </year> <month> 22 </month>
Reference-contexts: Background of wormhole routing can be found in [9] and that of virtual channels in [10]. Using virtual channels is common in the literature and has been proved to have the following merits: to avoid deadlock [5, 10, 23], to increase physical channel utilization <ref> [8] </ref>, and to exploit routing adaptivity [11, 14, 23]. A survey of various routing algorithms can be found in [26]. The rest of this paper is organized as follows: The trip-based model and its fundamental properties are investigated in Section 2. A multicast algorithm is presented in Section 3.
Reference: [9] <author> W. J. Dally and C. L. Seitz. </author> <title> The torus routing chip. </title> <journal> J. of Parallel and Distrib. Comput., </journal> <volume> 1(3) </volume> <pages> 187-196, </pages> <year> 1986. </year>
Reference-contexts: It is shown that the trip length can be very limited ( 2 n ) and it is verified by simulations that with such a construction, the performance degradation in the cube is almost negligible in the presence of faults. Background of wormhole routing can be found in <ref> [9] </ref> and that of virtual channels in [10]. Using virtual channels is common in the literature and has been proved to have the following merits: to avoid deadlock [5, 10, 23], to increase physical channel utilization [8], and to exploit routing adaptivity [11, 14, 23].
Reference: [10] <author> W. J. Dally and C. L. Seitz. </author> <title> Deadlock-free message routing in multiprocessor interconnection networks. </title> <journal> IEEE Trans. on Comput., </journal> <volume> C-36:547-553, </volume> <month> May </month> <year> 1987. </year>
Reference-contexts: Thus the new model eliminates the limitation associated with the solutions proposed in [12, 21, 22]. The underlying concept used in this model is a node sequence called trip. The resource-dependency relation is established based on this sequence and the possibility of cyclic dependency <ref> [10] </ref> and thus deadlock is avoided. The model is supported by adding a certain number of virtual channels to each physical channel and this number gets derived depending on the trip. <p> Background of wormhole routing can be found in [9] and that of virtual channels in <ref> [10] </ref>. Using virtual channels is common in the literature and has been proved to have the following merits: to avoid deadlock [5, 10, 23], to increase physical channel utilization [8], and to exploit routing adaptivity [11, 14, 23]. A survey of various routing algorithms can be found in [26]. <p> Background of wormhole routing can be found in [9] and that of virtual channels in [10]. Using virtual channels is common in the literature and has been proved to have the following merits: to avoid deadlock <ref> [5, 10, 23] </ref>, to increase physical channel utilization [8], and to exploit routing adaptivity [11, 14, 23]. A survey of various routing algorithms can be found in [26]. The rest of this paper is organized as follows: The trip-based model and its fundamental properties are investigated in Section 2. <p> With the introduction of short-cuts, the possibility of deadlock may be higher. The deadlock problem can be reasoned by deriving the channel dependency relation <ref> [10] </ref> in a 5 wormhole-routed network resulted from worms proceeding in a pipelined manner. If a message in channel c can be propagated to channel c 0 , there is a resource dependency from c to c 0 , denoted as c 7! c 0 . <p> However, given any network, it might be difficult to find such a trip (if not impossible). Below we show how to solve this problem using virtual channels. Using virtual channels is a common technique to separate the resource dependency and thus avoid possible deadlock <ref> [5, 10, 23] </ref>. Conceptually, a physical channel is separated into multiple virtual channels which share the physical channel in time-multiplexing or demand-multiplexing manner. Messages are propagated in the network by grabbing one virtual channel after another. <p> A dependency c 7! c 0 is thus established when a message is sent from one virtual channel c to another c 0 . Similarly, a routing algorithm is deadlock-free if the dependency is acyclic. More details about virtual channels can be found in <ref> [10, 26] </ref>. Let ff be any trip. Consider associating a virtual channel with each edge h^x; ^yi in G f and G b (note that any two edges may not necessarily be associated with distinct virtual channels). <p> For load balance, let's choose fg; hg to be reached by an f-worm, and fb; cg by a b-worm. Thus, S f = [ f (d; g); f (d; h)] = <ref> [10; 11] </ref> and S b = [ b (d; c); b (d; b)] = [3; 2]. The f-worm will start from ^ d 4 and the b-worm from ^ d 8 . The real paths traversed by the f- and b-worms will dynamically depend on the traffic in the system.
Reference: [11] <author> J. T. Draper and J. Ghosh. </author> <title> Multipath e-cube algorithm (MECA) for adaptive wormhole routing and broadcasting in k-ary n-cubes. </title> <booktitle> In Int'l Parallel Processing Symp., </booktitle> <pages> pages 407-410, </pages> <year> 1992. </year>
Reference-contexts: Using virtual channels is common in the literature and has been proved to have the following merits: to avoid deadlock [5, 10, 23], to increase physical channel utilization [8], and to exploit routing adaptivity <ref> [11, 14, 23] </ref>. A survey of various routing algorithms can be found in [26]. The rest of this paper is organized as follows: The trip-based model and its fundamental properties are investigated in Section 2. A multicast algorithm is presented in Section 3. <p> For load balance, let's choose fg; hg to be reached by an f-worm, and fb; cg by a b-worm. Thus, S f = [ f (d; g); f (d; h)] = <ref> [10; 11] </ref> and S b = [ b (d; c); b (d; b)] = [3; 2]. The f-worm will start from ^ d 4 and the b-worm from ^ d 8 . The real paths traversed by the f- and b-worms will dynamically depend on the traffic in the system.
Reference: [12] <author> J. Duato. </author> <title> A new theory of deadlock-free adaptive multicast routing in wormhole networks. </title> <booktitle> In Symp. on Parallel and Distributed Processing, </booktitle> <pages> pages 64-71, </pages> <year> 1993. </year>
Reference-contexts: This scheme is based on finding a Hamiltonian path in the network which is used to establish the dependency relation between resources (e.g., buffers and channels). This allows multiple-source multicasts to be performed in a system without deadlock. Duato <ref> [12] </ref> further studies the use of virtual channels in this scheme in a 2-D mesh to exploit more adaptivity. The limitation of these results is that the network must be Hamiltonian. For irregular networks or networks with faults, the existence of a Hamiltonian path is not guaranteed. <p> In this paper, we generalize the path-based solutions and propose a new trip-based model to support multiple multicasts. This model can be applied to any network of arbitrary topology as long as it remains connected. Thus the new model eliminates the limitation associated with the solutions proposed in <ref> [12, 21, 22] </ref>. The underlying concept used in this model is a node sequence called trip. The resource-dependency relation is established based on this sequence and the possibility of cyclic dependency [10] and thus deadlock is avoided.
Reference: [13] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <publisher> Freeman, </publisher> <year> 1979. </year>
Reference-contexts: Fault tolerance is an important issue in massively parallel processing. Although most popular networks are Hamiltonian, a single fault may destroy their Hamiltonian property. Hence the above solution can not be adopted to systems with faults. Furthermore, finding a Hamiltonian path in any given graph is NP-complete <ref> [13] </ref>. In this paper, we generalize the path-based solutions and propose a new trip-based model to support multiple multicasts. This model can be applied to any network of arbitrary topology as long as it remains connected. <p> The above trip length is no more than two times the minimum, jV j. Note that finding a trip of a minimum length in any graph is no easier than deciding whether the graph is Hamiltonian, which is NP-complete <ref> [13] </ref>. Corollary 1 Let T be any spanning tree of G, and pchhx; yi any edge in G.
Reference: [14] <author> C. J. Glass and L. M. Ni. </author> <title> The turn model for adaptive routing. </title> <booktitle> In Int'l Symp. on Computer Architecture, </booktitle> <pages> pages 278-287, </pages> <year> 1992. </year>
Reference-contexts: Using virtual channels is common in the literature and has been proved to have the following merits: to avoid deadlock [5, 10, 23], to increase physical channel utilization [8], and to exploit routing adaptivity <ref> [11, 14, 23] </ref>. A survey of various routing algorithms can be found in [26]. The rest of this paper is organized as follows: The trip-based model and its fundamental properties are investigated in Section 2. A multicast algorithm is presented in Section 3.
Reference: [15] <author> C.-T. Ho and M.-Y. Kao. </author> <title> Optimal broadcast on hypercubes with wormhole and ecube routings. </title> <booktitle> In Int'l Conf. on Parallel and Distributed Systems, </booktitle> <pages> pages 694-697, </pages> <year> 1993. </year>
Reference-contexts: Solutions for multicasting can be classified into 3 categories: unicast-based, tree-based and path-based. The unicast-based solutions make use of 1-to-1 communication and add additional software to support multicast. Examples include [25] (for one-port architectures) and <ref> [15, 24] </ref> (for all-port architectures). Disadvantages of this approach include necessary involvement in message propagation by intermediate nodes and required latency to start-up messages (which is typically in the order of 1.0 to 20.0 microseconds in current generation system) in each intermediate node.
Reference: [16] <author> J. M. Jaffe. </author> <title> Distributed multi-destination routing: the constraints of local information. </title> <journal> SIAM J. Comput., </journal> <volume> 14(4) </volume> <pages> 875-888, </pages> <month> Nov. </month> <year> 1985. </year>
Reference-contexts: Packet and circuit switching have been used in the first- and second-generation parallel computers and much work about routing can be found in the literature <ref> [3, 4, 16, 17, 29] </ref>. However, the more recent parallel computers (such as Intel Touchstone DELTA, Intel Paragon, MIT J-machine, Caltech MOSAIC, and Cray T3D) have adopted wormhole routing, which is known to be quite insensitive to routing distance if the network is contention-free.
Reference: [17] <author> S. L. Johnsson and C. T. Ho. </author> <title> Optimal broadcasting and personalized communication in hypercubes. </title> <journal> IEEE Trans. on Comput., </journal> <volume> 38(9) </volume> <pages> 1249-68, </pages> <month> Sep. </month> <year> 1989. </year>
Reference-contexts: Packet and circuit switching have been used in the first- and second-generation parallel computers and much work about routing can be found in the literature <ref> [3, 4, 16, 17, 29] </ref>. However, the more recent parallel computers (such as Intel Touchstone DELTA, Intel Paragon, MIT J-machine, Caltech MOSAIC, and Cray T3D) have adopted wormhole routing, which is known to be quite insensitive to routing distance if the network is contention-free.
Reference: [18] <author> Y. </author> <title> Lan. Multicast in faulty hypercubes. </title> <booktitle> In Int'l Conf. on Parallel Processing, </booktitle> <pages> pages I-58-61, </pages> <year> 1992. </year>
Reference-contexts: The tree-based solutions rely on finding a spanning tree rooted at the source node. A multicast message is then propagated along the tree (e.g., multicast in hypercubes [19, 28], faulty hypercubes <ref> [18] </ref>, and meshes [21]). Such solutions are adequate for packet-switched networks, but incur long latency in wormhole-routed networks [22]. More seriously, as shown in [22], such approach leads to deadlock if multiple-source multicasts are to be performed in a system simultaneously.
Reference: [19] <author> Y. Lan, A.-H. Esfahanian, and L. M. Ni. </author> <title> Multicast in hypercube multiprocessors. </title> <journal> J. of Parallel and Distrib. Comput., </journal> <volume> 8 </volume> <pages> 30-41, </pages> <year> 1990. </year>
Reference-contexts: The tree-based solutions rely on finding a spanning tree rooted at the source node. A multicast message is then propagated along the tree (e.g., multicast in hypercubes <ref> [19, 28] </ref>, faulty hypercubes [18], and meshes [21]). Such solutions are adequate for packet-switched networks, but incur long latency in wormhole-routed networks [22]. More seriously, as shown in [22], such approach leads to deadlock if multiple-source multicasts are to be performed in a system simultaneously.
Reference: [20] <author> D. Lenoski et al. </author> <title> The Directory-Based Cache Coherence Protocol for the DASH Multiprocessor. </title> <booktitle> In Proceedings of the 17th Annual Symposium on Computer Architecture, </booktitle> <pages> pages 148-159, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: Multicast represents the most complex communication pattern. Numerous applications, such as parallel search algorithms, graph algorithms, and barrier synchronization, can benefit from multicast services [21]. Multi-casting is also necessary to support cache-coherency in distributed-shared-memory systems <ref> [20] </ref>. Multicasting/broadcasting has been defined in the MPI (Message Passing Interface) standard [1] as an instrumental operation in implementing collective communication operations (barrier synchronization, allgather, and global reduction) in distributed-memory systems.
Reference: [21] <author> X. Lin, P. K. McKinley, and L. M. Ni. </author> <title> Performance evaluation of multicast wormhole routing in 2D-mesh multicomputers. </title> <booktitle> In Int'l Conf. on Parallel Processing, </booktitle> <pages> pages I-435-442, </pages> <year> 1991. </year>
Reference-contexts: In this paper, we study the multiple multicast problem in wormhole-routed networks, where each source wants to send a message to some destination nodes. Multicast represents the most complex communication pattern. Numerous applications, such as parallel search algorithms, graph algorithms, and barrier synchronization, can benefit from multicast services <ref> [21] </ref>. Multi-casting is also necessary to support cache-coherency in distributed-shared-memory systems [20]. Multicasting/broadcasting has been defined in the MPI (Message Passing Interface) standard [1] as an instrumental operation in implementing collective communication operations (barrier synchronization, allgather, and global reduction) in distributed-memory systems. <p> The tree-based solutions rely on finding a spanning tree rooted at the source node. A multicast message is then propagated along the tree (e.g., multicast in hypercubes [19, 28], faulty hypercubes [18], and meshes <ref> [21] </ref>). Such solutions are adequate for packet-switched networks, but incur long latency in wormhole-routed networks [22]. More seriously, as shown in [22], such approach leads to deadlock if multiple-source multicasts are to be performed in a system simultaneously. <p> More seriously, as shown in [22], such approach leads to deadlock if multiple-source multicasts are to be performed in a system simultaneously. To prevent these problems, an elegant path-based model has been proposed by Lin et al. 1 <ref> [21, 22] </ref> for wormhole-routed networks. This scheme is based on finding a Hamiltonian path in the network which is used to establish the dependency relation between resources (e.g., buffers and channels). This allows multiple-source multicasts to be performed in a system without deadlock. <p> In this paper, we generalize the path-based solutions and propose a new trip-based model to support multiple multicasts. This model can be applied to any network of arbitrary topology as long as it remains connected. Thus the new model eliminates the limitation associated with the solutions proposed in <ref> [12, 21, 22] </ref>. The underlying concept used in this model is a node sequence called trip. The resource-dependency relation is established based on this sequence and the possibility of cyclic dependency [10] and thus deadlock is avoided. <p> The model is supported by adding a certain number of virtual channels to each physical channel and this number gets derived depending on the trip. It is shown that the path-based solutions in <ref> [21, 22] </ref> are a special case of ours when the trip is a Hamiltonian path. In this case, our model requires only one virtual channel per physical channel (i.e., no need the support of virtual channels). <p> If a linear search is used, it will need O (d) time. As the current architectures tend to adopt low- or even constant-degree networks, the routing decision overhead could be very low. This overhead is similar to that in <ref> [21, 22] </ref>. Considering the architecture to support our model, we suggest that the more complex message initiation algorithm be implemented by software at the source node, while the simpler routing decision logic (which contains a small table and a search procedure) get implemented by hardware inside the routers. <p> This is true for Backward Propagation () too. So the message should be organized such that S f /S b is followed by m to exploit the pipelined transmission feature of wormhole routing. Similar suggestion has been made by the Hamiltonian path-based scheme <ref> [21, 22] </ref>, C) Significance of the Model: As a skirt-based trip always exists in any connected graph, our model can be used in any network that supports 2 virtual channels per physical channel. <p> Such algorithms do exist [2, 6]. As the network remaining connected is the minimum requirement to perform multicast, our algorithm has the maximum (static) fault-tolerant capability. It is also to be noted that a special case of our model is the Hamiltonian path model <ref> [21, 22] </ref>, where the network is Hamiltonian. In such a case, there is no requirement of virtual channels as discussed in Section 2.4. <p> With only 2 virtual channels per physical channel, our skirt-based-trip result is much more powerful and can be applied to network with arbitrary topology as long as the network remains connected due to fault. Hence, our result is a significant improvement over the solutions proposed in <ref> [21, 22] </ref>. 17 4 Fault-Tolerant Multicast in Hypercubes In this section, we apply our proposed model to faulty hypercubes. For an n-dimensional hypercube, or n-cube, we show how to perform trip-based multicast with at most n 1 faulty nodes.
Reference: [22] <author> X. Lin and L. M. Ni. </author> <title> Deadlock-free multicast wormhole routing in multicomputer networks. </title> <booktitle> In Int'l Symp. on Computer Architecture, </booktitle> <pages> pages 116-124, </pages> <year> 1991. </year> <note> (to appear in IEEE Trans. on Paral. and Dist. Sys.). </note>
Reference-contexts: The tree-based solutions rely on finding a spanning tree rooted at the source node. A multicast message is then propagated along the tree (e.g., multicast in hypercubes [19, 28], faulty hypercubes [18], and meshes [21]). Such solutions are adequate for packet-switched networks, but incur long latency in wormhole-routed networks <ref> [22] </ref>. More seriously, as shown in [22], such approach leads to deadlock if multiple-source multicasts are to be performed in a system simultaneously. To prevent these problems, an elegant path-based model has been proposed by Lin et al. 1 [21, 22] for wormhole-routed networks. <p> A multicast message is then propagated along the tree (e.g., multicast in hypercubes [19, 28], faulty hypercubes [18], and meshes [21]). Such solutions are adequate for packet-switched networks, but incur long latency in wormhole-routed networks <ref> [22] </ref>. More seriously, as shown in [22], such approach leads to deadlock if multiple-source multicasts are to be performed in a system simultaneously. To prevent these problems, an elegant path-based model has been proposed by Lin et al. 1 [21, 22] for wormhole-routed networks. <p> More seriously, as shown in [22], such approach leads to deadlock if multiple-source multicasts are to be performed in a system simultaneously. To prevent these problems, an elegant path-based model has been proposed by Lin et al. 1 <ref> [21, 22] </ref> for wormhole-routed networks. This scheme is based on finding a Hamiltonian path in the network which is used to establish the dependency relation between resources (e.g., buffers and channels). This allows multiple-source multicasts to be performed in a system without deadlock. <p> In this paper, we generalize the path-based solutions and propose a new trip-based model to support multiple multicasts. This model can be applied to any network of arbitrary topology as long as it remains connected. Thus the new model eliminates the limitation associated with the solutions proposed in <ref> [12, 21, 22] </ref>. The underlying concept used in this model is a node sequence called trip. The resource-dependency relation is established based on this sequence and the possibility of cyclic dependency [10] and thus deadlock is avoided. <p> The model is supported by adding a certain number of virtual channels to each physical channel and this number gets derived depending on the trip. It is shown that the path-based solutions in <ref> [21, 22] </ref> are a special case of ours when the trip is a Hamiltonian path. In this case, our model requires only one virtual channel per physical channel (i.e., no need the support of virtual channels). <p> If a linear search is used, it will need O (d) time. As the current architectures tend to adopt low- or even constant-degree networks, the routing decision overhead could be very low. This overhead is similar to that in <ref> [21, 22] </ref>. Considering the architecture to support our model, we suggest that the more complex message initiation algorithm be implemented by software at the source node, while the simpler routing decision logic (which contains a small table and a search procedure) get implemented by hardware inside the routers. <p> This is true for Backward Propagation () too. So the message should be organized such that S f /S b is followed by m to exploit the pipelined transmission feature of wormhole routing. Similar suggestion has been made by the Hamiltonian path-based scheme <ref> [21, 22] </ref>, C) Significance of the Model: As a skirt-based trip always exists in any connected graph, our model can be used in any network that supports 2 virtual channels per physical channel. <p> Such algorithms do exist [2, 6]. As the network remaining connected is the minimum requirement to perform multicast, our algorithm has the maximum (static) fault-tolerant capability. It is also to be noted that a special case of our model is the Hamiltonian path model <ref> [21, 22] </ref>, where the network is Hamiltonian. In such a case, there is no requirement of virtual channels as discussed in Section 2.4. <p> With only 2 virtual channels per physical channel, our skirt-based-trip result is much more powerful and can be applied to network with arbitrary topology as long as the network remains connected due to fault. Hence, our result is a significant improvement over the solutions proposed in <ref> [21, 22] </ref>. 17 4 Fault-Tolerant Multicast in Hypercubes In this section, we apply our proposed model to faulty hypercubes. For an n-dimensional hypercube, or n-cube, we show how to perform trip-based multicast with at most n 1 faulty nodes.
Reference: [23] <author> D. H. Linder and J. C. Harden. </author> <title> An adaptive and fault tolerant wormhole routing strategy for k-ary n-cubes. </title> <journal> IEEE Trans. on Comput., </journal> <volume> 40(1) </volume> <pages> 2-12, </pages> <month> Jan. </month> <year> 1991. </year> <month> 23 </month>
Reference-contexts: Background of wormhole routing can be found in [9] and that of virtual channels in [10]. Using virtual channels is common in the literature and has been proved to have the following merits: to avoid deadlock <ref> [5, 10, 23] </ref>, to increase physical channel utilization [8], and to exploit routing adaptivity [11, 14, 23]. A survey of various routing algorithms can be found in [26]. The rest of this paper is organized as follows: The trip-based model and its fundamental properties are investigated in Section 2. <p> Using virtual channels is common in the literature and has been proved to have the following merits: to avoid deadlock [5, 10, 23], to increase physical channel utilization [8], and to exploit routing adaptivity <ref> [11, 14, 23] </ref>. A survey of various routing algorithms can be found in [26]. The rest of this paper is organized as follows: The trip-based model and its fundamental properties are investigated in Section 2. A multicast algorithm is presented in Section 3. <p> However, given any network, it might be difficult to find such a trip (if not impossible). Below we show how to solve this problem using virtual channels. Using virtual channels is a common technique to separate the resource dependency and thus avoid possible deadlock <ref> [5, 10, 23] </ref>. Conceptually, a physical channel is separated into multiple virtual channels which share the physical channel in time-multiplexing or demand-multiplexing manner. Messages are propagated in the network by grabbing one virtual channel after another.
Reference: [24] <author> P. K. McKinley and C. Trefftz. </author> <title> Efficient broadcast in all-port wormhole-routed hypercubes. </title> <booktitle> In Int'l Conf. on Parallel Processing, </booktitle> <pages> pages II-288-291, </pages> <year> 1993. </year>
Reference-contexts: Solutions for multicasting can be classified into 3 categories: unicast-based, tree-based and path-based. The unicast-based solutions make use of 1-to-1 communication and add additional software to support multicast. Examples include [25] (for one-port architectures) and <ref> [15, 24] </ref> (for all-port architectures). Disadvantages of this approach include necessary involvement in message propagation by intermediate nodes and required latency to start-up messages (which is typically in the order of 1.0 to 20.0 microseconds in current generation system) in each intermediate node.
Reference: [25] <author> P. K. McKinley, H. Xu, A.-H. Esfahanian, and L. M. Ni. </author> <title> Unicast-based multicast communication in wormhole-routed networks. </title> <booktitle> In Int'l Conf. on Parallel Processing, </booktitle> <pages> pages II-10-19, </pages> <year> 1992. </year>
Reference-contexts: Solutions for multicasting can be classified into 3 categories: unicast-based, tree-based and path-based. The unicast-based solutions make use of 1-to-1 communication and add additional software to support multicast. Examples include <ref> [25] </ref> (for one-port architectures) and [15, 24] (for all-port architectures). Disadvantages of this approach include necessary involvement in message propagation by intermediate nodes and required latency to start-up messages (which is typically in the order of 1.0 to 20.0 microseconds in current generation system) in each intermediate node.
Reference: [26] <author> L. M. Ni and P. K. McKinley. </author> <title> A survey of wormhole routing techniques in directed networks. </title> <journal> IEEE Computer, </journal> <volume> 26 </volume> <pages> 62-76, </pages> <month> Feb. </month> <year> 1993. </year>
Reference-contexts: Using virtual channels is common in the literature and has been proved to have the following merits: to avoid deadlock [5, 10, 23], to increase physical channel utilization [8], and to exploit routing adaptivity [11, 14, 23]. A survey of various routing algorithms can be found in <ref> [26] </ref>. The rest of this paper is organized as follows: The trip-based model and its fundamental properties are investigated in Section 2. A multicast algorithm is presented in Section 3. Section 4 shows how to apply our model to faulty hypercubes and presents our simulation results. <p> A dependency c 7! c 0 is thus established when a message is sent from one virtual channel c to another c 0 . Similarly, a routing algorithm is deadlock-free if the dependency is acyclic. More details about virtual channels can be found in <ref> [10, 26] </ref>. Let ff be any trip. Consider associating a virtual channel with each edge h^x; ^yi in G f and G b (note that any two edges may not necessarily be associated with distinct virtual channels).
Reference: [27] <author> H. Schwetman. </author> <title> CSIM users' guide. </title> <type> Technical Report Tech. </type> <institution> Rpt.: ACT-126-90, MCC. </institution>
Reference-contexts: B) Multiple Multicast Latency: Next we investigated the performance of multiple mul-ticast by modeling hypercubes with 2 virtual channels per physical channel. We used a CSIM-based <ref> [27] </ref> flit-level simulator with demand multiplexing of virtual channels. Virtual channels were arranged according to VC f and VC b allocation discussed in Section 2.4. However, for fairness, if VC f did not require a f-channel then both virtual channels were used by VC b as b-channels, and vice versa.
Reference: [28] <author> J.-P. Sheu and M.-Y. Su. </author> <title> A multicast algorithm for hypercube multiprocessors. </title> <booktitle> In Int'l Conf. on Parallel Processing, </booktitle> <pages> pages III-18-22, </pages> <year> 1992. </year>
Reference-contexts: The tree-based solutions rely on finding a spanning tree rooted at the source node. A multicast message is then propagated along the tree (e.g., multicast in hypercubes <ref> [19, 28] </ref>, faulty hypercubes [18], and meshes [21]). Such solutions are adequate for packet-switched networks, but incur long latency in wormhole-routed networks [22]. More seriously, as shown in [22], such approach leads to deadlock if multiple-source multicasts are to be performed in a system simultaneously.
Reference: [29] <author> G. D. Stamoulis and J. N. Tsitsiklis. </author> <title> Efficient routing schemes for multiple broadcasts in hypercubes. </title> <journal> IEEE Trans. on Paral. and Distrib. Sys., </journal> <volume> 4(7) </volume> <pages> 725-739, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: Packet and circuit switching have been used in the first- and second-generation parallel computers and much work about routing can be found in the literature <ref> [3, 4, 16, 17, 29] </ref>. However, the more recent parallel computers (such as Intel Touchstone DELTA, Intel Paragon, MIT J-machine, Caltech MOSAIC, and Cray T3D) have adopted wormhole routing, which is known to be quite insensitive to routing distance if the network is contention-free.
Reference: [30] <author> Y.-C. Tseng and T.-H. Lai. </author> <title> Ring embedding in an injured hypercube. </title> <booktitle> In Int'l Conf. on Parallel Processing, </booktitle> <pages> pages III-149-152, </pages> <year> 1993. </year> <month> 24 </month>
Reference-contexts: We make use of a graph-embedding result developed previously by us in <ref> [30] </ref>, which shows that in an n-cube with f n 1 faults, 18 there exists a subgraph of the cube such that i) the subgraph is a 3-D mesh of size 2 fi 2 fi 2 n2 , ii) each 2 fi 2 mesh in the first 2 dimensions (of the <p> The caterpillar will be of (2 n f h) long with h f branches. For instance, the solid lines in Fig. 9 form a caterpillar with 4 branches. The reader can refer to <ref> [30] </ref> for details.
References-found: 30

