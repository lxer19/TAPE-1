URL: http://charm.cs.uiuc.edu/version2/papers/CharmDIMACS93.ps
Refering-URL: http://charm.cs.uiuc.edu/version2/papers/CharmDIMACS93.html
Root-URL: http://www.cs.uiuc.edu
Email: email: fkale,sinha,gursoyg@cs.uiuc.edu  
Title: A portable software support system for irregular computations (extended abstract)  
Author: Laxmikant V. Kale, Amitabh B. Sinha, Attila Gursoy 
Address: Urbana, IL 61801.  
Affiliation: Department of Computer Science, University of Illinois,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> L. V. Kale. </author> <title> The Chare Kernel Parallel Programming System. </title> <booktitle> In International Conference on Parallel Processing, </booktitle> <month> August </month> <year> 1990. </year>
Reference-contexts: Messages represent just one mode of information sharing. Charm provides six information sharing modes, each of which may be implemented differently and efficiently on different machines. These include abstractions such as read-only variables, accumulators, distributed tables, and monotonic variables <ref> [1, 2] </ref>. Charm also provides a sophisticated module system that facilitates reuse, and large-scale programming for parallel software. From the point of this paper, the following properties of Charm are important: 2 1.
Reference: [2] <author> L. V. Kale et. al. </author> <title> The Chare Kernel Programming Language Manual (Internal Report). </title>
Reference-contexts: Messages represent just one mode of information sharing. Charm provides six information sharing modes, each of which may be implemented differently and efficiently on different machines. These include abstractions such as read-only variables, accumulators, distributed tables, and monotonic variables <ref> [1, 2] </ref>. Charm also provides a sophisticated module system that facilitates reuse, and large-scale programming for parallel software. From the point of this paper, the following properties of Charm are important: 2 1.
Reference: [3] <author> Edward W. Reingold, Jurg Nievergelt, and Narsingh Deo. </author> <title> Combinatorial Algorithms: Theory and Practice. </title> <publisher> Prentice-Hall, Inc., </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1977. </year> <month> 4 </month>
Reference-contexts: The modularity features supported in Charm permit flexible reuse of parallel software. Sepa rately compiled library modules can be put together in a varying of combinations and contexts. 3 Application: Traveling Salesman Problem The Traveling Salesman Problem (TSP) <ref> [3] </ref> is a typical example of an optimization problem solved using branch&bound techniques. In this problem a salesman must visit n cities, returning to the starting point, and is required to minimize the total cost of the trip.
Reference: [4] <author> J. D. C. Little, K. G. Murty, D. W. Sweeney, and C. Karel. </author> <title> An algorithm for the traveling salesman problem. </title> <journal> Operations Research, </journal> <volume> 11 </volume> <pages> 972-989, </pages> <year> 1963. </year> <month> 5 </month>
Reference-contexts: Every pair of cities i and j has a cost C ij associated with them (if i = j, then C ij is assumed to be of infinite cost). We have implemented the branch&bound scheme proposed by Little, et. al. <ref> [4] </ref>. In Little's approach one starts with an initial partial solution, a cost function (C) and an infinite upper bound. A partial solution comprises a set of edges (pairs of cities) that have been included in the circuit, and a set of edges that have been excluded from the circuit.
References-found: 4

