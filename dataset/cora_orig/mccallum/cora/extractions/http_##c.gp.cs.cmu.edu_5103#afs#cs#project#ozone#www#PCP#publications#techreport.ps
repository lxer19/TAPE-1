URL: http://c.gp.cs.cmu.edu:5103/afs/cs/project/ozone/www/PCP/publications/techreport.ps
Refering-URL: http://c.gp.cs.cmu.edu:5103/afs/cs/project/ozone/www/PCP/publications/multi-pcp.html
Root-URL: http://www.cs.cmu.edu
Title: Applying Constraint Satisfaction Techniques to Job Shop Scheduling  
Author: Cheng-Chung Cheng and Stephen F. Smith 
Date: January 1995  
Note: c fl1995  1 This research has been sponsored in part by the National Aeronautics and Space Administration, under contract NCC 2-531, by the Advanced Research Projects Agency under contract F30602-90-C-0119 and the CMU Robotics Institute.  
Address: Pittsburgh, PA 15213  
Affiliation: The Robotics Institute Carnegie Mellon University  Carnegie Mellon University  
Pubnum: CMU-RI-TR-95-03  
Abstract-found: 0
Intro-found: 1
Reference: <author> Aarts, R. J. and Smith, S. F. </author> <year> (1994). </year> <title> A high performance scheduler for an automated chemistry workstation. </title> <booktitle> In Proceedings of 1994 European Conference on Artificial Intelligence, </booktitle> <address> Amsterdam. </address>
Reference: <author> Adams, J., Balas, E., and Zawack, D. </author> <year> (1988). </year> <title> The shifting bottleneck procedure for job shop scheduling. </title> <booktitle> Management Science, </booktitle> <address> 34(3):391 - 401. </address>
Reference: <author> Allen, J. F. </author> <year> (1983). </year> <title> Maintaining knowledge about temporal intervals. </title> <journal> Communications of the ACM, </journal> <volume> 11(26) </volume> <pages> 832-843. </pages>
Reference-contexts: Three types of basic qualitative constraints are allowed: 1. interval to interval constraints The GTCN definition of (Meiri, 1991) includes Allen's 13 basic temporal relations <ref> (Allen, 1983) </ref>: before, after, meets, met-by, overlaps, overlapped-by, during, contains, starts, started-by, finishes, finished-by, and equal.
Reference: <author> Applegate, D. and Cook, W. </author> <year> (1991). </year> <title> A computational study of the job-shop scheduling problem. </title> <journal> ORSA Journal of Computing, </journal> <note> 3(2):149 - 156. 29 Armstrong, </note> <author> R., Lei, L., and Gu, S. </author> <year> (1994). </year> <title> A bounding scheme for deriving the minimal cycle time of a single-transporter n-stage process with time-window constraints. </title> <journal> European Journal of Operational Research, </journal> <volume> 78 </volume> <pages> 130-140. </pages>
Reference-contexts: Results for SB1 were obtained on a Sun SPARC 10 workstation using an implementation kindly provided to us by Applegate and Cook (for detail please see <ref> (Applegate and Cook, 1991) </ref>). Results for SB3 and SB4 were taken from (Balas et al., 1993), with the reported Sun SPARC 330 computation times translated to reflect expected performance on a SPARC 10.
Reference: <author> Ashour, S. </author> <year> (1967). </year> <title> A decomposition approach for the machine scheduling problem. </title> <journal> International Journal of Production Research, </journal> <volume> 6 </volume> <pages> 109-122. </pages>
Reference-contexts: To provide a more computationally competitive alternative to Yih's algorithm, a simple problem decomposition method, conceived initially by <ref> (Ashour, 1967) </ref> and extensively studied in (Hirabayashi et al., 1994), is introduced. Under this scheme, a solution is generated by: 1. Partitioning the total set of n jobs into bn=bc subproblems with b jobs, 2. Solving each subproblem independently with Multi-PCP to obtain bn=bc partial schedules, and 3.
Reference: <author> Balas, E. </author> <year> (1969). </year> <title> Machine sequencing via disjunctive graphs: An implicit enumerated algorithm. </title> <journal> Operations Research, </journal> <volume> 17 </volume> <pages> 941-957. </pages>
Reference-contexts: The PCP scheduling framework (Smith and Cheng, 1993; Cheng and Smith, 1994) and other recent work in CSP scheduling (Aarts and Smith, 1994; Boddy and Goldman, 1994; Harvey, 1994; Muscettola, 1993) alternatively start from a problem representation akin to a disjunctive graph formulation <ref> (Balas, 1969) </ref>. The problem is instead assumed to be one of establishing sequencing constraints between those operations contending for the same resource.
Reference: <author> Balas, E., Lenstra, J. K., and Vazacopoulos, A. </author> <year> (1993). </year> <title> The one machine problem with delayed precedence constraints and its use in job shop scheduling. </title> <type> Technical report, </type> <institution> Graduate School of Industrial Administration, Carnegie Mellon University, #MSRR-589(R). </institution>
Reference-contexts: Results for SB1 were obtained on a Sun SPARC 10 workstation using an implementation kindly provided to us by Applegate and Cook (for detail please see (Applegate and Cook, 1991)). Results for SB3 and SB4 were taken from <ref> (Balas et al., 1993) </ref>, with the reported Sun SPARC 330 computation times translated to reflect expected performance on a SPARC 10.
Reference: <author> Barker, J. and McMahon, G. B. </author> <year> (1985). </year> <title> Scheduling the general job-shop. </title> <journal> Management Science, </journal> <volume> 31(5) </volume> <pages> 594-598. </pages>
Reference: <author> Bell, C. E. </author> <year> (1989). </year> <title> Maintaining project networks in automated artificial intelligence planning. </title> <booktitle> Management Science, </booktitle> <address> 35(10):1192 - 1214. </address>
Reference-contexts: For convenience, we additionally include the relations before-or-meets and after-or-met-by, which represent the union of relation pairs (before, meets) and (after, met-by) respectively <ref> (Bell, 1989) </ref>. 2. point to point constraints The relations identified in (Vilain and Kautz, 1986), denoted by the set f&lt;; =; &gt;g, are allowable here. 3. point to interval or interval to point constraints In this case, the 10 relations defined in (Ladkin and Maddux, 1989) are specifiable, including before, starts,
Reference: <author> Boddy, M. S. and Goldman, R. P. </author> <month> (October, </month> <year> 1994). </year> <title> Empirical results on scheduling and dynamic backtracking. </title> <booktitle> In Proceedings of the 3rd International Symposium on Artificial Intelligence, Robotics and Automation for Space, </booktitle> <address> Pasadena, CA. </address>
Reference: <author> Brucker, P., Jurisch, B., and Sievers, B. </author> <year> (1992). </year> <title> A branch and bound algorithm for the job-shop scheduling problem. </title> <type> Technical report, </type> <institution> Osnabrucker Schriften zur Mathematik, Universitat Osnabruck. </institution>
Reference-contexts: This line of work has shown steady progress. The notorious 10-job, 10-machine problem originally posed by (Fisher and Thompson, 1963) was finally optimally solved by implicit enumeration in 1989 (Carlier and Pinson, 1989), and a more efficient branch and bound solution to this problem was subsequently reported in <ref> (Brucker et al., 1992) </ref>. Yet, this improved solution procedure was not able to solve larger 20-job, 10-machine problems (running for over 3 days on a Sun 4/20 workstation).
Reference: <author> Carlier, J. and Pinson, E. </author> <year> (1989). </year> <title> An algorithm for solving the job-shop problem. </title> <journal> Management Science, </journal> <volume> 35(2) </volume> <pages> 164-176. </pages>
Reference-contexts: This line of work has shown steady progress. The notorious 10-job, 10-machine problem originally posed by (Fisher and Thompson, 1963) was finally optimally solved by implicit enumeration in 1989 <ref> (Carlier and Pinson, 1989) </ref>, and a more efficient branch and bound solution to this problem was subsequently reported in (Brucker et al., 1992). Yet, this improved solution procedure was not able to solve larger 20-job, 10-machine problems (running for over 3 days on a Sun 4/20 workstation).
Reference: <author> Charlton, J. M. and Death, C. C. </author> <year> (1970). </year> <title> A generalized machine-scheduling algorithm. </title> <journal> Operational Research Quarterly, </journal> <volume> 21:127 - 134. </volume>
Reference: <author> Cheng, C. and Smith, S. F. </author> <year> (1994). </year> <title> Generating feasible schedules under complex metric constraints. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence, </booktitle> <address> Seattle, Washington. </address>
Reference-contexts: These conditions are applied to detect and post any "forced" sequencing constraints at each step of the search, and to detect inconsistent solution states. In <ref> (Cheng and Smith, 1994) </ref>, these dominance conditions are generalized to account for the wider range of constraints that are specifiable in a GTCN. Suppose Ordering ij is a currently unassigned variable in the meta-CSP network, and consider the d-graph associated with the current partial solution.
Reference: <author> Coffman, E. G., Garey, M. R., and Johnson, D. S. </author> <year> (1978). </year> <title> An application of bin-packing to multiprocessor scheduling. </title> <journal> SIAM J. Comput., </journal> <volume> 7 </volume> <pages> 1-17. </pages>
Reference-contexts: In this section, we focus specifically on the problem of makespan minimization and propose one possible approach to incorporating these techniques. Our approach is motivated by the concept of problem duality exploited in the MUL-TIFIT algorithm <ref> (Coffman et al., 1978) </ref> in the context of multiprocessor scheduling. Suppose that we are given an instance of a makespan problem, denoted by M (I) where 10 I represents the problem data associated with this problem instance.
Reference: <author> Dechter, R., Meiri, I., and Pearl, J. </author> <year> (1991). </year> <title> Temporal constraint networks. </title> <journal> Artificial Intelligence, </journal> <volume> 49 </volume> <pages> 61-95. </pages>
Reference-contexts: Since any basic qualitative constraint can be translated into at most four metric constraints (Kautz and Ladkin, 1991) (e.g., O i before-or-meets O j translates to et i st j ), any labeling of T defines a Simple Temporal Problem (STP) network a metric network containing only single interval constraints <ref> (Dechter et al., 1991) </ref>. T will be consistent if and only if there exists a labeling whose associated STP is consistent. For any STP network, we can define a directed edge-weighted graph of time points, G d , called a distance graph. <p> The minimal network of the STP can be specified by a complete directed graph, called the d-graph, where each edge, i ! j, is labeled by the shortest path length, sp ij , from point i to point j in G d <ref> (Dechter et al., 1991) </ref>.
Reference: <author> Della Croce, F., Tadei, R., and Volta, G. </author> <year> (1992). </year> <title> A genetic algorithm for the job shop problem. </title> <type> Technical report, D.A.I. </type> <institution> Politecnico di Torino, Italy. </institution> <note> 30 Dell'Amico, </note> <author> M. and Trubian, M. </author> <year> (1991). </year> <title> Applying tabu-search to the job shop schedul-ing problem. </title> <type> Technical report, </type> <institution> Politecnico di Milano, Italy. </institution>
Reference-contexts: Other work has explored the use of various local search techniques as a basis for approximate solution, including simulated annealing (Matsuo et al., 1988; van Laarhoven et al., 1992), tabu search (Dell'Amico and Trubian, 1991; Taillard, 1993), genetic algorithms <ref> (Della Croce et al., 1992) </ref>, and general neighborhood search (Storer et al., 1992). This work has also produced strong approximate results on previously studied benchmarks; it has also investigated and provided benchmark results for significantly larger makespan problems (Taillard, 1993).
Reference: <author> Erschler, J., Roubellat, F., and Vernhes, J. P. </author> <year> (1976). </year> <title> Finding some essential characteristics of the feasible solutions for a scheduling problem. </title> <journal> Operations Research, </journal> <volume> 24 </volume> <pages> 772-782. </pages>
Reference-contexts: If sp ji &lt; 0 and sp ij &lt; 0, then the partial solution is inconsistent. Case 4. If sp ji 0 and sp ij 0, then either ordering relation is still possible. We note that the "slack-based" dominance conditions of <ref> (Erschler et al., 1976) </ref> represent a special case of the above conditions; under classical job shop scheduling assumptions (i.e., fixed processing times, simple job precedence constraints) slack (O i O j ) = sp ij . However, many practical scheduling problems require satisfaction of more complex temporal constraints. <p> There is one further pragmatic consideration. Given the more complex structure of the constraint graph required to model the hoist scheduling problem, it is not possible to validly exploit the special-case, "slack-based" computations of <ref> (Erschler et al., 1976) </ref> (see Section 2.2) as a surrogate for shortest-path length calculations within PCP (as it is, for example, in the case of canonical job shop problem formulations). 3 This significantly raises the computational overhead of constraint propagation; preliminary experiments with smaller, 50 job, 5 tank problems were found
Reference: <author> Erschler, J., Roubellat, F., and Vernhes, J. P. </author> <year> (1980). </year> <title> Characterizing the set of feasible sequences for n jobs to be carried out on a single machine. </title> <journal> European Journal of Operational Research, </journal> <volume> 4 </volume> <pages> 189-194. </pages>
Reference: <author> Fisher, H. and Thompson, G. L. </author> <year> (1963). </year> <title> Probabilistic learning combinations of local job-shop scheduling rules. In Industrial Scheduling. </title> <editor> J. F. Muth, G. L. Thompson (eds), </editor> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ. </address>
Reference-contexts: This line of work has shown steady progress. The notorious 10-job, 10-machine problem originally posed by <ref> (Fisher and Thompson, 1963) </ref> was finally optimally solved by implicit enumeration in 1989 (Carlier and Pinson, 1989), and a more efficient branch and bound solution to this problem was subsequently reported in (Brucker et al., 1992). <p> The first problem set, referred to below as the "small" problem set, consists of 39 job shop problems with sizes varying from 6-job by 6-machine to 15-job by 15-machine. The first three problems, Mt06, Mt10, and Mt20, are the long standing problems of <ref> (Fisher and Thompson, 1963) </ref>. The remainder are taken from the 40 problems originally created by (Lawrence, 1984); of these 40 problems, we include only the 36 problems for which optimal solutions have been obtained.
Reference: <author> Florian, M., Trepant, P., and McMahon, G. B. </author> <year> (1971). </year> <title> An implicit enumeration algorithm for the machine sequencing problem. </title> <institution> Management Science, 17(12):B-782-B-792. </institution>
Reference: <author> Garey, M. R. and Johnson, D. S. </author> <year> (1979). </year> <title> Computers and Intractability, a Guide to the Theory of NP-Completeness. W.H. </title> <publisher> Freeman Company. </publisher>
Reference-contexts: The objective is to determine a schedule for production that satisfies all temporal and resource capacity constraints. The job shop deadline problem is known to be NP-Complete <ref> (Garey and Johnson, 1979) </ref>. There are different ways to formulate this problem as a CSP. Most frequently, it has been formulated as a problem of finding a consistent set of start times for each operation of each job.
Reference: <author> Gaschnig, J. </author> <year> (1979). </year> <title> Performance measurement and analysis of certain search algorithms. </title> <type> Technical report, </type> <institution> Carnegie Mellon University. </institution>
Reference-contexts: Specific CSP algorithms vary in the type and level of consistency enforcement that is employed (Mackworth, 1977; Haralick and Elliott, 1980), in the mechanisms incorporated for recovering from inconsistent search states (e.g., backjumping <ref> (Gaschnig, 1979) </ref>, dependency-directed backtracking (Stallman and Sussman, 1977), dynamic backtracking (Ginsberg, 1994)), and in the heuristics utilized for variable and value ordering. CSP scheduling research has generally emphasized development of more specialized algorithmic components, which take advantage of the structure of this particular class of problems.
Reference: <author> Ginsberg, M. L. </author> <year> (1994). </year> <title> Dynamic backtracking. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 1 </volume> <pages> 25-46. </pages>
Reference-contexts: Specific CSP algorithms vary in the type and level of consistency enforcement that is employed (Mackworth, 1977; Haralick and Elliott, 1980), in the mechanisms incorporated for recovering from inconsistent search states (e.g., backjumping (Gaschnig, 1979), dependency-directed backtracking (Stallman and Sussman, 1977), dynamic backtracking <ref> (Ginsberg, 1994) </ref>), and in the heuristics utilized for variable and value ordering. CSP scheduling research has generally emphasized development of more specialized algorithmic components, which take advantage of the structure of this particular class of problems. Much of this work has focused on variations of the job shop deadline problem.
Reference: <author> Haralick, R. M. and Elliott, G. L. </author> <year> (1980). </year> <title> Consistency in networks of relations. </title> <journal> Artificial Intelligence, </journal> <volume> 14 </volume> <pages> 263-313. </pages>
Reference: <author> Harvey, W. D. </author> <year> (1994). </year> <title> Search and jobshop scheduling. </title> <type> Technical report, </type> <institution> Computer Science Department, Standford University, and Computational Intelligence Research Laboratory, University of Oregon, </institution> <type> CIRL TR 94-1. </type>
Reference: <author> Hefetz, H. and Adiri, I. </author> <year> (1982). </year> <title> An efficient optimal algorithm for the two machine unit-time jobshop schedule-length problem. </title> <journal> Mathematics of Operations Research, </journal> <volume> 7 </volume> <pages> 354-360. </pages>
Reference-contexts: Job shop makespan minimization is a challenging problem. Though efficient, polynomial time solutions have been found for selected, restrictive versions of the problem, (e.g., two jobs, two machines (Jackson, 1956); two machines and unit processing times <ref> (Hefetz and Adiri, 1982) </ref>), it is well known that general problem formulations are strongly NP-hard.
Reference: <author> Hirabayashi, N., Nagasawa, H., and Nishiyama, N. </author> <year> (1994). </year> <title> A decomposition scheduling method for operating flexible manufacturing systems. </title> <journal> International Journal of Production Research, </journal> <volume> 32(1) </volume> <pages> 161-178. </pages>
Reference-contexts: To provide a more computationally competitive alternative to Yih's algorithm, a simple problem decomposition method, conceived initially by (Ashour, 1967) and extensively studied in <ref> (Hirabayashi et al., 1994) </ref>, is introduced. Under this scheme, a solution is generated by: 1. Partitioning the total set of n jobs into bn=bc subproblems with b jobs, 2. Solving each subproblem independently with Multi-PCP to obtain bn=bc partial schedules, and 3.
Reference: <author> Jackson, J. R. </author> <year> (1956). </year> <title> An extension of johnson's results on job lot scheduling. </title> <journal> Navel Research Logistics Quarterly, </journal> <volume> 3 </volume> <pages> 201-203. </pages> <note> 31 Kautz, </note> <author> H. and Ladkin, P. B. </author> <year> (1991). </year> <title> Integrating metric and qualitative temporal rea-soning. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence, </booktitle> <address> Anaheim, CA., </address> <pages> pages 241-246. </pages>
Reference-contexts: Job shop makespan minimization is a challenging problem. Though efficient, polynomial time solutions have been found for selected, restrictive versions of the problem, (e.g., two jobs, two machines <ref> (Jackson, 1956) </ref>; two machines and unit processing times (Hefetz and Adiri, 1982)), it is well known that general problem formulations are strongly NP-hard.
Reference: <author> Ladkin, P. B. and Maddux, R. D. </author> <year> (1989). </year> <title> On binary constraint networks. </title> <type> Technical report, </type> <institution> Kestrel Institute, </institution> <address> Palo Alto, CA. </address>
Reference-contexts: relation pairs (before, meets) and (after, met-by) respectively (Bell, 1989). 2. point to point constraints The relations identified in (Vilain and Kautz, 1986), denoted by the set f&lt;; =; &gt;g, are allowable here. 3. point to interval or interval to point constraints In this case, the 10 relations defined in <ref> (Ladkin and Maddux, 1989) </ref> are specifiable, including before, starts, during, finishes, after, and their inverses. A metric constraint C is represented by a set of intervals fI 1 ; :::; I k g = f [a 1 ; b 1 ]; :::; [a k ; b k ]g.
Reference: <author> Lageweg, B., Lenstra, J. K., and Kan, A. H. G. R. </author> <year> (1977). </year> <title> Job-shop scheduling by implicit enumeration. </title> <booktitle> Management Science, </booktitle> <address> 24(4):441 - 450. </address>
Reference: <author> Lawler, E. L., Lenstra, J. K., Kan, A. H. G. R., and Shmoys, D. B. </author> <year> (1989). </year> <title> Sequencing and scheduling: Algorithms and complexity. </title> <type> Technical report, </type> <institution> Report Centre Mathematics and Computer Science, </institution> <address> Amsterdam. </address>
Reference-contexts: Yet, this improved solution procedure was not able to solve larger 20-job, 10-machine problems (running for over 3 days on a Sun 4/20 workstation). As observed by <ref> (Lawler et al., 1989) </ref>, the applicability of implicit enumeration schemes is limited to relatively small problems, and their performance is quite sensitive to particular problem instances and initial upper bound values. Other research has investigated heuristic approaches.
Reference: <author> Lawrence, S. </author> <year> (1984). </year> <title> Resource constraint project scheduling: An experimental investigation of heuristic scheduling techniques. </title> <type> Technical report, </type> <institution> Graduate School of Industrial Administration, Carnegie-Mellon University. </institution>
Reference-contexts: The first three problems, Mt06, Mt10, and Mt20, are the long standing problems of (Fisher and Thompson, 1963). The remainder are taken from the 40 problems originally created by <ref> (Lawrence, 1984) </ref>; of these 40 problems, we include only the 36 problems for which optimal solutions have been obtained. The second set of benchmark problems, which we designate as the "large" problem set, are the problems more recently defined by (Taillard, 1993).
Reference: <author> Lei, L. and Wang, T. J. </author> <year> (1991). </year> <title> The minimum common-cycle algorithm for cyclic scheduling of two hoists with time window constraints. </title> <journal> Management Science, </journal> <volume> 37(12) </volume> <pages> 1629-1639. </pages>
Reference: <author> Lieberman, R. W. and Turksen, I. B. </author> <year> (1981). </year> <title> Crane scheduling problems. </title> <journal> AIIE Transactions, </journal> <volume> 13(4) </volume> <pages> 304-311. </pages>
Reference: <author> Mackworth, A. K. </author> <year> (1977). </year> <title> Consistency in networks of relations. </title> <journal> Artificial Intelligence, </journal> <volume> 8(1) </volume> <pages> 99-118. </pages>
Reference: <author> Matsuo, H., Suh, C. J., and Sullivan, R. S. </author> <year> (1988). </year> <title> A controlled search simulated annealing method for the general job shop scheduling problem. </title> <type> Technical report, </type> <institution> WP03-04-88, Department of Management, Graduate School of Business, University of Texas, Austin. </institution>
Reference: <author> Meiri, I. </author> <year> (1991). </year> <title> Combining qualitative and quantitative constraints in temporal reasoning. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence, </booktitle> <address> Anaheim, CA., </address> <pages> pages 260-267. </pages>
Reference-contexts: temporal slack are 5 shown to yield very competitive problem solving performance to currently dominant contention-based approaches (Sadeh, 1991; Muscettola, 1993) at a small fraction of the computational cost. 2.1 Problem Representation The PCP scheduling model can be formalized more precisely as a type of general temporal constraint network (GTCN) <ref> (Meiri, 1991) </ref>. In brief, a GTCN T consists of a set of variables fX 1 ; :::; X n g with continuous domains, and a set of unary or binary constraints. <p> Three types of basic qualitative constraints are allowed: 1. interval to interval constraints The GTCN definition of <ref> (Meiri, 1991) </ref> includes Allen's 13 basic temporal relations (Allen, 1983): before, after, meets, met-by, overlaps, overlapped-by, during, contains, starts, started-by, finishes, finished-by, and equal. <p> A network is consistent if there exists at least one solution. Figure 2 depicts the constraint graph for a simple 2 job, 2 machine deadline scheduling problem. An enumerative scheme for solving a GTCN is given in <ref> (Meiri, 1991) </ref>. Let a labeling of a general temporal constraint network, T , be a selection of a single disjunct (relation or interval) from each constraint specified in T .
Reference: <author> Minton, S., Johnston, M. D., Philips, A. B., and Laird, P. </author> <year> (1992). </year> <title> Minimizing conflicts: A heuristic repair method for constraint satisfaction and scheduling problems. </title> <journal> Artificial Intelligence, </journal> <volume> 58 </volume> <pages> 161-205. </pages>
Reference: <author> Muscettola, N. </author> <year> (1993). </year> <title> Scheduling by iterative partition of bottleneck conflicts. </title> <booktitle> In Proceedings of the Ninth IEEE Conference on Artificial Intelligence Applications, </booktitle> <address> Orlando, FL. </address>
Reference-contexts: However, such "repair" techniques have been shown to perform rather poorly in comparison to constructive approaches <ref> (Muscettola, 1993) </ref>. The PCP scheduling framework (Smith and Cheng, 1993; Cheng and Smith, 1994) and other recent work in CSP scheduling (Aarts and Smith, 1994; Boddy and Goldman, 1994; Harvey, 1994; Muscettola, 1993) alternatively start from a problem representation akin to a disjunctive graph formulation (Balas, 1969).
Reference: <author> Nowicki, E. and Smutnicki, C. </author> <year> (1994). </year> <title> A fast taboo search algorithm for the job shop problem. </title> <type> Technical report, </type> <institution> Technical University of Wroclaw, Institute of Engineering Cybernetics, ul. Janiszewskiego 11/17, 50-372 Wroclaw, Poland. </institution> <note> 32 Panwalker, </note> <editor> S. S. and Iskander, W. </editor> <year> (1977). </year> <title> A survey of scheduling rules. </title> <journal> Operations Research, </journal> <volume> 25:45 - 61. </volume>
Reference-contexts: Though this computational advantage is lowered by the more efficient tabu procedure recently reported in <ref> (Nowicki and Smutnicki, 1994) </ref>, Multi-PCP would nonetheless seem to offer leverage as a solution seeding mechanism to such iterative search procedures. 5 More Complicated Problem Formulations The above study relates the performance of Multi-PCP to state-of-the-art makespan minimization procedures; perhaps somewhat surprising, it shows that Multi-PCP's use of a CSP scheduling
Reference: <author> Phillips, L. W. and Unger, P. S. </author> <year> (1976). </year> <title> Mathematical programming solution of a hoist scheduling problem. </title> <journal> AIIE Transactions, </journal> <volume> 8(2) </volume> <pages> 219-225. </pages>
Reference: <author> Sadeh, N. </author> <year> (1991). </year> <title> Look-ahead techniques for micro-opportunistic job shop scheduling. </title> <type> Technical report, </type> <institution> CMU-CS-91-102, School of Computer Science, Carnegie Mellon University. </institution>
Reference-contexts: concentrated on techniques for exploiting resource capacity analysis as a means for restricting and directing search. "Look-ahead" heuristics for variable and value ordering, based on repeated computation of expected resource demand over time and identification of bottleneck intervals, have been shown to yield significant performance improvements over general CSP heuristics <ref> (Sadeh, 1991) </ref>. Various contention analysis techniques have also been used to enhance consistency checking and early search space pruning capabilities (Sadeh, 1991), and to improve backtracking performance (Xiong et al., 1992). <p> and value ordering, based on repeated computation of expected resource demand over time and identification of bottleneck intervals, have been shown to yield significant performance improvements over general CSP heuristics <ref> (Sadeh, 1991) </ref>. Various contention analysis techniques have also been used to enhance consistency checking and early search space pruning capabilities (Sadeh, 1991), and to improve backtracking performance (Xiong et al., 1992).
Reference: <author> Schrage, L. </author> <year> (1970). </year> <title> Solving resource-constrained network problems by implicit enumeration - nonpreemptive case. </title> <journal> Operations Research, </journal> <volume> 18:263 - 278. </volume>
Reference: <author> Shapiro, G. W. and Nuttle, H. L. W. </author> <year> (1988). </year> <title> Hoist scheduling for a pcb electroplating facility. </title> <journal> IIE Transactions, </journal> <volume> 20(2) </volume> <pages> 157-167. </pages>
Reference: <author> Smith, S. F. and Cheng, C. </author> <year> (1993). </year> <title> Slack-based heuristics for constraint satisfaction scheduling. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <address> Washington, DC., </address> <pages> pages 139 - 144. </pages>
Reference-contexts: In this paper, we propose a new heuristic procedure for solving job shop makespan minimization problems. Our approach is somewhat unconventional. We start from a base procedure called PCP (Precedence Constraint Posting) <ref> (Smith and Cheng, 1993) </ref>, previously developed for efficient heuristic solution of job shop deadline scheduling problems. We reformulate the makespan problem as one of solving a series of different but related common deadline problems, and define an extended procedure, Multi-PCP, which employs PCP as a subproblem solver. <p> Finally, formulation as an ordering problem provides a more convenient search space in which to operate. The basic insight underlying PCP is that the search benefits provided by look-ahead analysis of resource contention over time can be obtained through much simpler, local analysis of sequencing flexibility. In <ref> (Smith and Cheng, 1993) </ref>, a configuration of variable and value ordering heuristics based on measures of temporal slack are 5 shown to yield very competitive problem solving performance to currently dominant contention-based approaches (Sadeh, 1991; Muscettola, 1993) at a small fraction of the computational cost. 2.1 Problem Representation The PCP scheduling <p> The effectiveness of this partial solution procedure, which we will refer to as "Simple PCP" below, was demonstrated in <ref> (Smith and Cheng, 1993) </ref> on a set of previously published CSP scheduling benchmark problems. We also define a second variant, referred to below as "Simple PCP with Relaxation" which extends Simple PCP in the following manner.
Reference: <author> Stallman, R. M. and Sussman, G. J. </author> <year> (1977). </year> <title> Forward reasoning and dependency-directed backtracking in a system for computer-aided circuit analysis. </title> <journal> Artificial Intelligence, </journal> <volume> 9(2) </volume> <pages> 135-196. </pages>
Reference-contexts: Specific CSP algorithms vary in the type and level of consistency enforcement that is employed (Mackworth, 1977; Haralick and Elliott, 1980), in the mechanisms incorporated for recovering from inconsistent search states (e.g., backjumping (Gaschnig, 1979), dependency-directed backtracking <ref> (Stallman and Sussman, 1977) </ref>, dynamic backtracking (Ginsberg, 1994)), and in the heuristics utilized for variable and value ordering. CSP scheduling research has generally emphasized development of more specialized algorithmic components, which take advantage of the structure of this particular class of problems.
Reference: <author> Storer, R. H., Wu, S. D., and Vaccari, R. </author> <year> (1992). </year> <title> New search spaces for sequencing problems with application to job shop scheduling. </title> <booktitle> Management Science, </booktitle> <address> 38(10):1495 - 1509. </address>
Reference-contexts: Other work has explored the use of various local search techniques as a basis for approximate solution, including simulated annealing (Matsuo et al., 1988; van Laarhoven et al., 1992), tabu search (Dell'Amico and Trubian, 1991; Taillard, 1993), genetic algorithms (Della Croce et al., 1992), and general neighborhood search <ref> (Storer et al., 1992) </ref>. This work has also produced strong approximate results on previously studied benchmarks; it has also investigated and provided benchmark results for significantly larger makespan problems (Taillard, 1993). In this paper, we propose a new heuristic procedure for solving job shop makespan minimization problems.
Reference: <author> Taillard, E. </author> <year> (1989). </year> <title> Parallel taboo search technique for the jobshop scheduling problem. </title> <type> Technical report, </type> <institution> ORWP 89/11, Department de Mathematiques, Ecole Polytech-nique Federale De Lausanne, Lausanne, Switzerland. </institution>
Reference-contexts: Given the additional (but incomplete) computational details provided in <ref> (Taillard, 1989) </ref> on incremental solution progress and accounting for computing hardware differences, it would appear that Multi-PCP consistently obtains its solution in less time than it takes Taillard's procedure to obtain a solution of comparable quality (particularly on problems with low job-to-machine ratios).
Reference: <author> Taillard, E. </author> <year> (1993). </year> <title> Benchmarks for basic scheduling problems. </title> <journal> European Journal of Operational Research, </journal> <note> 64:278 - 285. </note> <author> van Laarhoven, P. J. M., Aarts, E. H. L., and Lenstra, J. K. </author> <year> (1992). </year> <title> Job shop scheduling by simulated annealing. </title> <journal> Operations Research, </journal> <volume> 40(1):113 - 125. </volume>
Reference-contexts: This work has also produced strong approximate results on previously studied benchmarks; it has also investigated and provided benchmark results for significantly larger makespan problems <ref> (Taillard, 1993) </ref>. In this paper, we propose a new heuristic procedure for solving job shop makespan minimization problems. Our approach is somewhat unconventional. We start from a base procedure called PCP (Precedence Constraint Posting) (Smith and Cheng, 1993), previously developed for efficient heuristic solution of job shop deadline scheduling problems. <p> The second set of benchmark problems, which we designate as the "large" problem set, are the problems more recently defined by <ref> (Taillard, 1993) </ref>. This set consists of 80 larger job shop problems with sizes ranging from 15-job by 15-machine to 100-job by 20-machine. For each problem in this set, Taillard reported the "best solution" obtained with a tabu search procedure that was run for extended time intervals. <p> All procedures considered were implemented in C. For the large problem set, we alternatively compute the % deviation from the best tabu search solution produced by <ref> (Taillard, 1993) </ref> as the performance criterion. Cost/performance comparison across these problems is restricted to Multi-PCP and SB1, since results have not been reported for SB3 and SB4 on this problem set.
Reference: <author> Vilain, M. and Kautz, H. </author> <year> (1986). </year> <title> Constraint propagation algorithms for temporal reasoning. </title> <booktitle> In Proceedings of the Fourth National Conference on Artificial Intelligence, </booktitle> <address> Philadelphia, PA., </address> <pages> pages 377-382. </pages>
Reference-contexts: For convenience, we additionally include the relations before-or-meets and after-or-met-by, which represent the union of relation pairs (before, meets) and (after, met-by) respectively (Bell, 1989). 2. point to point constraints The relations identified in <ref> (Vilain and Kautz, 1986) </ref>, denoted by the set f&lt;; =; &gt;g, are allowable here. 3. point to interval or interval to point constraints In this case, the 10 relations defined in (Ladkin and Maddux, 1989) are specifiable, including before, starts, during, finishes, after, and their inverses.
Reference: <author> Xiong, Y., Sadeh, N., and Sycara, K. </author> <year> (1992). </year> <title> Intelligent backtracking techniques for job shop scheduling. </title> <booktitle> In Proceedings of the Third International Conference on Principle of Knowledge Representation, </booktitle> <address> Cambridge, MA. </address>
Reference-contexts: Various contention analysis techniques have also been used to enhance consistency checking and early search space pruning capabilities (Sadeh, 1991), and to improve backtracking performance <ref> (Xiong et al., 1992) </ref>. Other work has investigated the use of "iterative repair" search procedures (in contrast to the basic constructive search framework of Figure 1), which start with an infeasible initial solution and attempt to incrementally eliminate conflicts (Minton et al., 1992; Zweben et al., 1990).
Reference: <author> Yih, Y. </author> <year> (1994). </year> <title> An algorithm for hoist scheduling problems. </title> <journal> International Journal of Productions Research, </journal> <volume> 32(3) </volume> <pages> 501-516. </pages> <note> 33 Yih, </note> <author> Y., Liang, T., and Moskowitz, H. </author> <year> (1993). </year> <title> Robot scheduling in a circuit board production line: A hybrid or/ann approach. </title> <journal> IIE Transactions, </journal> 25(2):26-33. 
Reference-contexts: To demonstrate the more general applicability of Multi-PCP, we also consider its application to a more idiosyncratic makespan minimization problem: the multi-product, hoist scheduling problem previously studied in <ref> (Yih, 1994) </ref>. This problem is complicated by the need to enforce bounded interval constraints on both operation processing times and the allowable delay time between consecutive job steps, while additionally accounting for the time required to position the hoist for any material transfer. <p> In all other problems, there was no early termination of the search. 18 demonstrate this generality below by applying the Multi-PCP procedure to another, less-structured makespan minimization problem: the multi-product version of the hoist scheduling problem studied in <ref> (Yih, 1994) </ref>. 5.1 The Hoist Scheduling Problem The hoist scheduling problem finds its origin in printed circuit board (PCB) electroplating facilities. <p> In (Yih and Thesen, 1991; Yih et al., 1993), a hoist scheduling problem involving a multi-product facility is considered, but without permitting variance in job routings (i.e. no tank skipping). To our best knowledge, only <ref> (Yih, 1994) </ref> has reported procedures for solving the general hoist scheduling problem defined above. 19 5.2 Representation as a Constraint Graph The GTCN formalism introduced in Section 2.1 requires only slight extension to model the hoist scheduling problem. <p> To illustrate, Figure 6 shows a simple example problem (taken from <ref> (Yih, 1994) </ref>) involving 2 jobs to be processed in a 3 tank system. Each operation is displayed below the tank that is required, and gives its minimum and maximum processing times. <p> We follow the same general experimental design of <ref> (Yih, 1994) </ref>, and similarly consider hoist scheduling in a PCB electroplating facility with 5 chemical tanks. All problems defined consisted of 100 jobs, each with randomly generated routings and tank processing time 22 constraints, and all assumed to be simultaneously available. <p> To calibrate results, problems were also solved using the hoist scheduling procedure previously developed by Yih <ref> (Yih, 1994) </ref>. Both procedures were implemented in C and run on a Sun SPARC 10 workstation. Before describing the experiments in more detail and presenting results, we briefly summarize Yih's approach and the hoist scheduling implementation of Multi-PCP. 5.4.1 Yih's Approach In (Yih, 1994), two heuristic procedures for hoist scheduling are <p> the hoist scheduling procedure previously developed by Yih <ref> (Yih, 1994) </ref>. Both procedures were implemented in C and run on a Sun SPARC 10 workstation. Before describing the experiments in more detail and presenting results, we briefly summarize Yih's approach and the hoist scheduling implementation of Multi-PCP. 5.4.1 Yih's Approach In (Yih, 1994), two heuristic procedures for hoist scheduling are proposed and evaluated. First, to provide a baseline for comparison, a simple "basic algorithm" is specified. <p> If the conflict is eliminated by this action, then the forward feasibility check is resumed. If not, the job start time is delayed as before. Experimental results reported in <ref> (Yih, 1994) </ref> indicated that this enhanced algorithm produced schedules with distinguishably lower makespan than those generated by the basic algorithm across a variety of system configurations. <p> Thus, the 10 problem sets reflect fl ratios of 5, 10, 15, 20, 25, 30, 35, 40, 45, and 50. To characterize results, we take the same approach as in <ref> (Yih, 1994) </ref>; we use the "basic algorithm" to provide a benchmark solution and compute the improvement rate provided by both Multi-PCP and Yih94.
Reference: <author> Yih, Y. and Thesen, A. </author> <year> (1991). </year> <title> Semi-markov decision models for real-time scheduling. </title> <journal> International Journal of Productions Research, </journal> <volume> 29(11) </volume> <pages> 2331-2346. </pages>
Reference: <author> Zweben, M., Deale, M., and Gargan, R. </author> <year> (1990). </year> <title> Anytime rescheduling. In Proceedings of DARPA Workshop on Innovative Approaches to Planning, Scheduling and Control, </title> <publisher> Morgan Kaufmann Pub. </publisher> <pages> 34 </pages>
References-found: 55

