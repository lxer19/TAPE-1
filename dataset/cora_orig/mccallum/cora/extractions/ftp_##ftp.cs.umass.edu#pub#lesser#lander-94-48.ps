URL: ftp://ftp.cs.umass.edu/pub/lesser/lander-94-48.ps
Refering-URL: http://dis.cs.umass.edu/~lander/home.html
Root-URL: 
Title: Sharing Meta-Information to Guide Cooperative Search among Heterogeneous Reusable Agents  
Abstract: Susan E. Lander and Victor R. Lesser CMPSCI Technical Report 94-48 June 1994 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M.R. Adler, A.B. Davis, R. Weihmayer, and R.W. Worrest. </author> <title> Conflict-resolution strategies for non-hierarchical distributed agents. </title> <editor> In L. Gasser and M.N. Huhns, editors, </editor> <booktitle> Distributed Artificial Intelligence, Volume 2, Research Notes in Artificial Intelligence, </booktitle> <pages> pages 139-161. </pages> <publisher> Pitman, </publisher> <address> London, </address> <year> 1989. </year>
Reference-contexts: However, it requires that intelligent conflict-resolution capabilities be applied to select which constraints to relax when conflicts do occur. Although we do not address specific techniques for conflict management in this article, it is an important and encompassing problem. Work describing computational 10 conflict-management techniques includes <ref> [1, 12, 15, 21, 22, 26, 27] </ref>. 3.1 Information Shared in the STEAM System The information shared in these experiments was limited to simple boundary constraints of the form fconstraint-form, flexibilityg.
Reference: [2] <editor> A. Barr and E.A. Feigenbaum. </editor> <booktitle> The Handbook of Artificial Intelligence, </booktitle> <volume> Volume 1. </volume> <publisher> William Kaufmann, Inc., </publisher> <year> 1981. </year>
Reference-contexts: the Artificial Intelligence literature as comprising three components: a state space describing the current state of the search, a set of operators used to manipulate the state space, and a control strategy used for deciding what to do next, specifically, deciding what operator to apply and where to apply it <ref> [2] </ref>. When all operators reside in a single program or logical entity and have access to a central store of knowledge and databases, the search is centralized.
Reference: [3] <author> S.E. Conry, K. Kuwabara, V.R. Lesser, and R.A. Meyer. </author> <title> Multistage negotiation for distributed satisfaction. </title> <journal> IEEE Transactions on Systems, Man and Cybernetics, </journal> <volume> 21(6) </volume> <pages> 1462-1477, </pages> <month> November/December </month> <year> 1991. </year>
Reference-contexts: In their work on multistage negotiation, Conry et. al. have developed a formalism that generates solution-dependent constraints for a set of subplans through iterative agent interactions. These constraints focus the system and enable it to determine that no solution exists when no non-conflicting constraint set can be found <ref> [3] </ref>. However, solution-dependent constraint generation and manipulation techniques are not useful in the STEAM domain because of the size of the solution spaces at each of the agents. Determination: An agent must decide what information to transmit.
Reference: [4] <author> P.S. de Souza and S. Talukdar. </author> <title> Asynchronous organizations for multi-algorithm problems. </title> <booktitle> In Proceedings of the ACM Symposium on Applied Computing, </booktitle> <address> Indianapolis, Indiana, </address> <month> February </month> <year> 1993. </year>
Reference-contexts: In this situation, sharing information is not restricted by selfish or adversarial motives of agents as in some multiagent domains [25, 27]. Another example of a globally cooperative multiagent system is given by de Souza and Talukdar in <ref> [4] </ref>, which describes the Asynchronous Team (A-Team) approach to solving a class of problems where multiple partially satisfactory algorithms exist but no completely satisfactory algorithm is known (such as the Traveling Salesman Problem).
Reference: [5] <author> E. Ephrati and J.S. Rosenschein. </author> <title> The Clarke Tax as a consensus mechanism among automated agents. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence, </booktitle> <pages> pages 173-184, </pages> <address> Anaheim, California, </address> <month> July </month> <year> 1991. </year>
Reference-contexts: If an agent intentionally misstates its boundaries, whether its motives are benevolent or malicious, issues of deception arise. Deception in multiagent environments is an important and ongoing area of research <ref> [5, 10, 28] </ref> that must be addressed in the larger scope of multiagent systems in general; however, in the STEAM system, agents are assumed 12 to never lie.
Reference: [6] <author> L.D. Erman, F. Hayes-Roth, V.R. Lesser, and D.R. Reddy. </author> <title> The Hearsay-II speech-understanding system: Integrating knowledge to resolve uncertainty. </title> <journal> Computing Surveys, </journal> <volume> 12(2) </volume> <pages> 213-253, </pages> <month> June </month> <year> 1980. </year>
Reference-contexts: If problem solving stagnated at that level, rating thresholds were relaxed at the word level in order to provide more breadth in the word-sequence search space <ref> [6] </ref>. Given this brief introduction to constraint relaxation, we now return to our discussion of how information sharing and assimilation affects global solution quality in a globally cooperative system.
Reference: [7] <author> T. Finin, R. Fritzson, D. McKay, and R. McEntire. </author> <title> KQML: A language and protocol for knowledge and information exchange. </title> <type> Technical report, </type> <institution> Universitiy of Maryland, Baltimore, MD, </institution> <year> 1994. </year> <month> 25 </month>
Reference-contexts: As noted by Neches et. al. [18], software reuse in any form is difficult and is impeded by the lack of tools available to foster information sharing. Concurrent investigations of languages, ontologies, and protocols for agent interaction such as KQML <ref> [7] </ref> complement our research but focus on the development of enabling technologies for information sharing rather than on the effect of shared meta-information on problem solving.
Reference: [8] <author> M.S. Fox. </author> <title> Constraint-Directed Search: A Case Study of Job Shop Scheduling. </title> <booktitle> Research Notes in Artificial Intelligence. </booktitle> <publisher> Pitman Publishing, </publisher> <address> London, </address> <year> 1987. </year>
Reference-contexts: In addition to the constraint-form clause of a constraint, the boundary constraints used by the STEAM agents include a flexibility attribute, loosely based on the notion of utility suggested by Fox <ref> [8] </ref>. flexibility is represented as an integer from 0 to 4. A flexibility of 0 specifies a hard (nonrelaxable) constraint that must be met by any feasible solution. A flexibility of 4 implies that solutions satisfying the constraint are of high quality.
Reference: [9] <author> M.S. Fox, B. Allen, and G. Strohm. </author> <title> Job-shop scheduling: an investigation in constraint-directed reasoning. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 155-158, </pages> <address> Pittsburgh, Pennsylvania, </address> <month> August </month> <year> 1982. </year>
Reference-contexts: In these types of problems, composite solutions must lie within the intersection of the local parameter spaces under the set of hard constraints, but not necessarily under all soft constraints. The order in which constraints are relaxed can strongly affect system performance and solution quality <ref> [9, 17, 19] </ref>. A discussion of these issues is beyond the scope of this article, however, in [13], we present the algorithms used by STEAM agents to determine which constraints to relax in conflict situations and in situations where problem-solving progress has stalled.
Reference: [10] <author> P.J. Gmytrasiewicz and E.H. Durfee. </author> <title> Toward a theory of honesty and trust among communicating autonomous agents. Group Decision and Negotiation, </title> <booktitle> 2(3) </booktitle> <pages> 237-258, </pages> <year> 1993. </year>
Reference-contexts: If an agent intentionally misstates its boundaries, whether its motives are benevolent or malicious, issues of deception arise. Deception in multiagent environments is an important and ongoing area of research <ref> [5, 10, 28] </ref> that must be addressed in the larger scope of multiagent systems in general; however, in the STEAM system, agents are assumed 12 to never lie.
Reference: [11] <author> T. Khedro and M.R. Genesereth. </author> <title> Progressive negotiation for resolving conflicts among distributed heterogeneous cooperating agents. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence, </booktitle> <address> Seattle, Washington, </address> <month> July/August </month> <year> 1994. </year>
Reference-contexts: Implicit meta-information cannot normally be shared since it is an integral part of an agent's expertise and cannot be easily extricated. 3 Unshareable information strongly affects properties of the agent sets in which it is embedded. For example, in <ref> [11] </ref>, Khedro and Genesereth present a distributed-search model in which agents provably converge on a globally satisfactory solution if one exists. However, the property of convergence can only be guaranteed if all constraining information can be explicitly exchanged.
Reference: [12] <author> M. Klein. </author> <title> Supporting conflict resolution in cooperative design systems. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 21(6) </volume> <pages> 1379-1390, </pages> <month> November/December </month> <year> 1991. </year>
Reference-contexts: However, it requires that intelligent conflict-resolution capabilities be applied to select which constraints to relax when conflicts do occur. Although we do not address specific techniques for conflict management in this article, it is an important and encompassing problem. Work describing computational 10 conflict-management techniques includes <ref> [1, 12, 15, 21, 22, 26, 27] </ref>. 3.1 Information Shared in the STEAM System The information shared in these experiments was limited to simple boundary constraints of the form fconstraint-form, flexibilityg.
Reference: [13] <author> S.E. Lander. </author> <title> Distributed Search and Conflict Management Among Reusable Heterogeneous Agents. </title> <type> PhD thesis, </type> <institution> University of Massachusetts, Amherst, Massachusetts, </institution> <month> May </month> <year> 1994. </year>
Reference-contexts: As a trivial example of an implicit constraint , consider the following 2 Spaces may also be shared by some subset of agents, but not the entire agent set <ref> [13] </ref>. <p> The order in which constraints are relaxed can strongly affect system performance and solution quality [9, 17, 19]. A discussion of these issues is beyond the scope of this article, however, in <ref> [13] </ref>, we present the algorithms used by STEAM agents to determine which constraints to relax in conflict situations and in situations where problem-solving progress has stalled. In this section, we have defined the local, composite, and locally perceived composite solution spaces of a system of heterogeneous reusable agents. <p> The problem specifications were generated by randomly choosing a feasible value for each of the steam condenser attributes, frequired capacity, maximum platform deflection, platform side lengthg, for each specification. The complete set of input problem specifications and observed data from the experiments are tabulated in <ref> [13] </ref>. <p> Therefore, it is important to note that when boundary constraints are used as the primary mechanism for information sharing, it is possible to either predict (through agent analysis) or learn which agents have the best global perspective. This is the basis of work that has been done by Lander <ref> [13] </ref> on making effective assignments of roles to agents within an agent set. It also provides the foundation for ongoing work in building reusable-agent sets that can automatically adjust role assignments for effective problem solving without requiring knowledge-based analysis of agent characteristics [20]. <p> However, it is usually the case that there is a relationship between constraint satisfaction and solution quality and, in the STEAM domain, this is a reasonable assumption. There are three primary types of constraint relaxation used in STEAM: unilateral, responsive, and automatic <ref> [13] </ref>. Unilateral relaxation occurs at an agent in direct response to a problem specification|the agent will relax local soft constraints in order to meet requirements imposed by the specification. Unilateral relaxation is not dependent on information 17 sharing and will not be further discussed. <p> These different categories are explained in more detail in <ref> [13] </ref>. In the timing studies reported here, we investigated the use of problem-dependent constraints. In other words, we measure the time it takes to construct boundary constraints that are dependent on a particular problem specification. <p> The observed costs for each of these categories over the 100 problem specifications are summarized in Figure 9 (the complete set of data is tabulated in <ref> [13] </ref>). The approximate average time spent in constraint generation per problem is 7.3 seconds, constraint transmission is .4 seconds, translation is .5 seconds and local management is 4.2 seconds, for an average total time for information assimilation of approximately 12.4 seconds per run (out of 121.98 seconds average runtime).
Reference: [14] <author> S.E. Lander and V.R. Lesser. </author> <title> Customizing distributed search among agents with heterogeneous knowledge. </title> <booktitle> In Proceedings of the First International Conference on Information and Knowledge Management, </booktitle> <pages> pages 335-344, </pages> <address> Baltimore, Maryland, </address> <month> November </month> <year> 1992. </year>
Reference-contexts: The control strategy used for a solving a particular problem should be tailored to the problem but must be chosen from the set of strategies known to the agents in the system. The selection of operators and control strategies for distributed search are addressed elsewhere in <ref> [14, 15] </ref>. 1.3 The STEAM Application System Throughout the article, we will augment the presentation of concepts with examples from a seven-agent system, STEAM, that performs parametric design of steam condensers. Figure 1 shows the general form of a steam condenser.
Reference: [15] <author> S.E. Lander and V.R. Lesser. </author> <title> Understanding the role of negotiation in distributed search among heterogeneous agents. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 438-444, </pages> <address> Chambery, France, </address> <month> August/September </month> <year> 1993. </year>
Reference-contexts: The control strategy used for a solving a particular problem should be tailored to the problem but must be chosen from the set of strategies known to the agents in the system. The selection of operators and control strategies for distributed search are addressed elsewhere in <ref> [14, 15] </ref>. 1.3 The STEAM Application System Throughout the article, we will augment the presentation of concepts with examples from a seven-agent system, STEAM, that performs parametric design of steam condensers. Figure 1 shows the general form of a steam condenser. <p> However, it requires that intelligent conflict-resolution capabilities be applied to select which constraints to relax when conflicts do occur. Although we do not address specific techniques for conflict management in this article, it is an important and encompassing problem. Work describing computational 10 conflict-management techniques includes <ref> [1, 12, 15, 21, 22, 26, 27] </ref>. 3.1 Information Shared in the STEAM System The information shared in these experiments was limited to simple boundary constraints of the form fconstraint-form, flexibilityg.
Reference: [16] <author> V.R. Lesser. </author> <title> An overview of DAI: Viewing distributed AI as distributed search. </title> <journal> Journal of the Japanese Society for Artificial Intelligence, </journal> <volume> 5(4) </volume> <pages> 392-400, </pages> <month> July </month> <year> 1990. </year>
Reference-contexts: When all operators reside in a single program or logical entity and have access to a central store of knowledge and databases, the search is centralized. In this article, we are concerned with the problem of distributed search as described in <ref> [16] </ref>: A distributed search involves partitioning the state space and its associated operators and control regime so that multiple processing elements can simultaneously perform local searches on different parts of the state space; the (intermediate) results of the local searches are shared in some form so that the desired answer is
Reference: [17] <author> T. Moehlman, V. Lesser, and B. Buteau. </author> <title> Decentralized negotiation: An approach to the distributed planning problem. Group Decision and Negotiation, </title> <booktitle> 1(2) </booktitle> <pages> 161-192, </pages> <year> 1992. </year>
Reference-contexts: In these types of problems, composite solutions must lie within the intersection of the local parameter spaces under the set of hard constraints, but not necessarily under all soft constraints. The order in which constraints are relaxed can strongly affect system performance and solution quality <ref> [9, 17, 19] </ref>. A discussion of these issues is beyond the scope of this article, however, in [13], we present the algorithms used by STEAM agents to determine which constraints to relax in conflict situations and in situations where problem-solving progress has stalled.
Reference: [18] <author> R. Neches, R. Fikes, T. Finin, T. Gruber, R. Patil, T. Senator, and W.R. Swartout. </author> <title> Enabling technology for knowledge sharing. </title> <journal> AI Magazine, </journal> <volume> 12(3) </volume> <pages> 36-56, </pages> <month> Fall </month> <year> 1991. </year>
Reference-contexts: They must be able to communicate information about the state of problem solving, to coordinate actions, and to resolve conflicts stemming from inconsistent or incomplete knowledge and evaluation criteria. As noted by Neches et. al. <ref> [18] </ref>, software reuse in any form is difficult and is impeded by the lack of tools available to foster information sharing.
Reference: [19] <author> Y. Nishibe, K. Kuwabara, and T. Ishida. </author> <title> Effects of heuristics in distributed constraint satisfaction: Towards satisficing algorithms. </title> <booktitle> In Workshop on Distributed Artificial Intelligence, </booktitle> <pages> pages 285-302, </pages> <address> Michigan, </address> <month> February </month> <year> 1992. </year>
Reference-contexts: In these types of problems, composite solutions must lie within the intersection of the local parameter spaces under the set of hard constraints, but not necessarily under all soft constraints. The order in which constraints are relaxed can strongly affect system performance and solution quality <ref> [9, 17, 19] </ref>. A discussion of these issues is beyond the scope of this article, however, in [13], we present the algorithms used by STEAM agents to determine which constraints to relax in conflict situations and in situations where problem-solving progress has stalled.
Reference: [20] <author> M.V.N. Prasad and V.R. Lesser. </author> <title> Learning decision-analytic control in a heterogeneous multi-agent system. </title> <type> Technical report, </type> <institution> University of Massachusetts, </institution> <address> Amherst, MA, </address> <year> 1994. </year> <note> (In preparation.). 26 </note>
Reference-contexts: It also provides the foundation for ongoing work in building reusable-agent sets that can automatically adjust role assignments for effective problem solving without requiring knowledge-based analysis of agent characteristics <ref> [20] </ref>. Returning to our discussion of how boundary constraints represent shareable perspectives of agents' solution spaces, notice that in some situations an agent may choose its boundary constraints such that some local solutions are excluded from the shared information.
Reference: [21] <author> A. Sathi and M.S. Fox. </author> <title> Constraint-directed negotiation of resource reallocations. </title> <editor> In Les Gasser and Michael Huhns, editors, </editor> <booktitle> Distributed Artificial Intelligence, </booktitle> <volume> Volume 2, chapter 8, </volume> <pages> pages 163-193. </pages> <publisher> Pitman Publishing, </publisher> <address> London, </address> <year> 1989. </year>
Reference-contexts: However, it requires that intelligent conflict-resolution capabilities be applied to select which constraints to relax when conflicts do occur. Although we do not address specific techniques for conflict management in this article, it is an important and encompassing problem. Work describing computational 10 conflict-management techniques includes <ref> [1, 12, 15, 21, 22, 26, 27] </ref>. 3.1 Information Shared in the STEAM System The information shared in these experiments was limited to simple boundary constraints of the form fconstraint-form, flexibilityg.
Reference: [22] <author> S. Sen and E.H. Durfee. </author> <title> A formal study of distributed meeting scheduling: Preliminary results. </title> <booktitle> In Proceedings of the Conference on Organizational Computing Systems, </booktitle> <pages> pages 55-68, </pages> <address> Atlanta, Georgia, </address> <month> November </month> <year> 1991. </year>
Reference-contexts: This will be referred to as meta-information. 1 To illustrate the use of meta-information, consider a generic example of meeting scheduling. (Sen and Durfee investigate the effectiveness of various forms of shared information in a meeting scheduling domain in <ref> [22] </ref>). Assume two agents, A and B, are seeking a mutually acceptable meeting time. A simple result-sharing approach would be for A to examine its local schedule and propose a time based on its constraints: "How about Monday at 3:00?" B responds with "No good. <p> However, it requires that intelligent conflict-resolution capabilities be applied to select which constraints to relax when conflicts do occur. Although we do not address specific techniques for conflict management in this article, it is an important and encompassing problem. Work describing computational 10 conflict-management techniques includes <ref> [1, 12, 15, 21, 22, 26, 27] </ref>. 3.1 Information Shared in the STEAM System The information shared in these experiments was limited to simple boundary constraints of the form fconstraint-form, flexibilityg.
Reference: [23] <author> H.A. Simon. </author> <booktitle> The Sciences of the Artificial. </booktitle> <publisher> The M.I.T. Press, </publisher> <year> 1969. </year>
Reference-contexts: Therefore, recorded times varied slightly across identical runs. 15 lation runtimes are, on average, 8.06% lower than the non-assimilation runtimes. However, direct comparison of the runtimes of assimilation and non-assimilation trials is somewhat misleading. STEAM is a satisficing system <ref> [23] </ref>: there is no way to determine if an optimal solution has been achieved, and it is difficult to decide when to stop looking for a better solution. In any satisficing system, some policy must be generated that defines under what conditions the system will terminate processing.
Reference: [24] <author> R.G. Smith and R. Davis. </author> <title> Frameworks for cooperation in distributed problem solving. </title> <editor> In Alan H. Bond and Les Gasser, editors, </editor> <booktitle> Readings in Distributed Artificial Intelligence. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1988. </year>
Reference-contexts: show that reusable agents involved in distributed search can improve their joint performance by sharing meta-information with other agents, assimilating shared information from other agents, and using this information to refine their local views of the global solution space. 1.1 Shared Meta-Information Multiagent systems generally assume some form of result-sharing <ref> [24] </ref>, i.e., the sharing of partial solutions to facilitate global coherence. In our experiments, result-sharing is an integral part of problem solving|agents are able to examine, evaluate, and extend others' proposed partial solutions.
Reference: [25] <author> K. Sycara. </author> <title> Resolving Adversarial Conflicts: An Approach Integrating Case-Based and Analytic Methods. </title> <type> PhD thesis, </type> <institution> Georgia Institute of Technology, Atlanta, Georgia, </institution> <month> June </month> <year> 1987. </year> <note> Also published as Technical Report GIT-ICS-87/26. </note>
Reference-contexts: The overriding goal of the system is to maximize the global, rather than local, payoff for solutions. In this situation, sharing information is not restricted by selfish or adversarial motives of agents as in some multiagent domains <ref> [25, 27] </ref>.
Reference: [26] <author> K. Sycara. </author> <title> Resolving goal conflicts via negotiation. </title> <booktitle> In Proceedings of the Seventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 245-250, </pages> <address> Saint Paul, Minnesota, </address> <month> August </month> <year> 1988. </year>
Reference-contexts: However, it requires that intelligent conflict-resolution capabilities be applied to select which constraints to relax when conflicts do occur. Although we do not address specific techniques for conflict management in this article, it is an important and encompassing problem. Work describing computational 10 conflict-management techniques includes <ref> [1, 12, 15, 21, 22, 26, 27] </ref>. 3.1 Information Shared in the STEAM System The information shared in these experiments was limited to simple boundary constraints of the form fconstraint-form, flexibilityg.
Reference: [27] <author> G. Zlotkin and J.S. Rosenschein. </author> <title> Cooperation and conflict resolution via negotiation among autonomous agents in noncooperative domains. </title> <journal> IEEE Transactions on Systems, Man and Cybernetics, </journal> <volume> 21(6) </volume> <pages> 1317-1324, </pages> <month> November/December </month> <year> 1991. </year>
Reference-contexts: The overriding goal of the system is to maximize the global, rather than local, payoff for solutions. In this situation, sharing information is not restricted by selfish or adversarial motives of agents as in some multiagent domains <ref> [25, 27] </ref>. <p> However, it requires that intelligent conflict-resolution capabilities be applied to select which constraints to relax when conflicts do occur. Although we do not address specific techniques for conflict management in this article, it is an important and encompassing problem. Work describing computational 10 conflict-management techniques includes <ref> [1, 12, 15, 21, 22, 26, 27] </ref>. 3.1 Information Shared in the STEAM System The information shared in these experiments was limited to simple boundary constraints of the form fconstraint-form, flexibilityg.
Reference: [28] <author> G. Zlotkin and J.S. Rosenschein. </author> <title> A domain theory for task oriented negotiation. </title> <booktitle> In Proceedings of the Thirteenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 416-422, </pages> <address> Chambery, France, </address> <month> August </month> <year> 1993. </year> <month> 27 </month>
Reference-contexts: If an agent intentionally misstates its boundaries, whether its motives are benevolent or malicious, issues of deception arise. Deception in multiagent environments is an important and ongoing area of research <ref> [5, 10, 28] </ref> that must be addressed in the larger scope of multiagent systems in general; however, in the STEAM system, agents are assumed 12 to never lie.
References-found: 28

