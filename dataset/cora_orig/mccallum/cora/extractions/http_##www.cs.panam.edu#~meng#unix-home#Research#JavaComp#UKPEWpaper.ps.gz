URL: http://www.cs.panam.edu/~meng/unix-home/Research/JavaComp/UKPEWpaper.ps.gz
Refering-URL: http://www.cs.panam.edu/~meng/unix-home/Research/JavaComp/
Root-URL: http://www.cs.panam.edu
Title: Using Java for Discrete Event Simulation  
Author: R. McNab and F.W. Howell 
Date: September 30, 1996  
Abstract: A discrete event simulation library has been written in the Java language, based on the SIM++ library for C++. This allows live simulations to be incorporated into web pages and run remotely. This paper presents a performance comparison with the equivalent C++ simulator and discusses advantages and disadvantages of Java as a simulation language. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F.W. Howell. Hase++: </author> <title> a discrete event simulation library for C++. </title> <note> Available from http://www.dcs.ed.ac.uk/home/fwh/hase++/hase++.html, Feb 1996. </note>
Reference-contexts: Email: frmcn,fwhg@dcs.ed.ac.uk part of the HASE project [4, 3] for several years. To allow running simulations on architectures not supported by Jade (such as Linux and the Cray T3D), the library was reimplemented using C++ and standard threading libraries, to produce a new library called HASE++ <ref> [1] </ref>. HASE++ was used as the basis for the Java simulator [2]. The most attractive part of the HASE environment is the support of animated models of simulations.
Reference: [2] <author> R. McNab. SimJava: </author> <title> a discrete event simulation library for Java. </title> <note> Available from http://www.dcs.ed.ac.uk/home/rmcn/simjava, July 1996. </note>
Reference-contexts: To allow running simulations on architectures not supported by Jade (such as Linux and the Cray T3D), the library was reimplemented using C++ and standard threading libraries, to produce a new library called HASE++ [1]. HASE++ was used as the basis for the Java simulator <ref> [2] </ref>. The most attractive part of the HASE environment is the support of animated models of simulations.
Reference: [3] <author> F.W. Howell and R.N. </author> <title> Ibbett. </title> <booktitle> STATE-OF-THE ART IN PERFORMANCE MODELING AND SIMULATION Modeling and Simulation of Advanced Computer Systems: Techniques, Tools and Tutorials, edited by Kallol Bagchi, chapter 1:Hierarchical Architecture Simulation Environment, </booktitle> <pages> pages 1-18. </pages> <publisher> Gordon and Breach, </publisher> <year> 1996. </year>
Reference-contexts: SIM++, a discrete event simulation library for C++ written by Jade Simulations Inc [5] has been used for computer architecture simulations as fl Department of Computer Science, The University of Edinburgh, James Clerk Maxwell Building, Mayfield Road, Edinburgh, EH9 3JZ. Email: frmcn,fwhg@dcs.ed.ac.uk part of the HASE project <ref> [4, 3] </ref> for several years. To allow running simulations on architectures not supported by Jade (such as Linux and the Cray T3D), the library was reimplemented using C++ and standard threading libraries, to produce a new library called HASE++ [1].
Reference: [4] <author> R.N. Ibbett, P.E. Heywood, and F.W. Howell. Hase: </author> <title> A flexible toolset for computer architects. </title> <journal> The Computer Journal, </journal> <volume> 38(10) </volume> <pages> 755-764, </pages> <year> 1995. </year>
Reference-contexts: SIM++, a discrete event simulation library for C++ written by Jade Simulations Inc [5] has been used for computer architecture simulations as fl Department of Computer Science, The University of Edinburgh, James Clerk Maxwell Building, Mayfield Road, Edinburgh, EH9 3JZ. Email: frmcn,fwhg@dcs.ed.ac.uk part of the HASE project <ref> [4, 3] </ref> for several years. To allow running simulations on architectures not supported by Jade (such as Linux and the Cray T3D), the library was reimplemented using C++ and standard threading libraries, to produce a new library called HASE++ [1].
Reference: [5] <institution> Jade Simulations International Corp., Calgary, Canada. SIM++ User Manual, </institution> <year> 1992. </year>
Reference-contexts: Thus the main disadvantage of using Java is expected to be longer simulation run times compared with a native C++ compiler. This penalty is quantified in section 6. SIM++, a discrete event simulation library for C++ written by Jade Simulations Inc <ref> [5] </ref> has been used for computer architecture simulations as fl Department of Computer Science, The University of Edinburgh, James Clerk Maxwell Building, Mayfield Road, Edinburgh, EH9 3JZ. Email: frmcn,fwhg@dcs.ed.ac.uk part of the HASE project [4, 3] for several years.
Reference: [6] <author> R. McNab. </author> <title> SimJava package documentation, </title> <note> Available from http://www.dcs.ed.ac.uk/home/rmcn/hase/doc/Package-hase.html, July 1996 </note>
Reference-contexts: It parses a Java program, and automatically generates an html document describing the public interface to the classes and their methods. Extra information may be included by using specially formatted comments in the program source. The tool was used to produce the technical documentation <ref> [6] </ref> of the SimJava library. An extract is shown in figure 1. 3.5 I/O Java supports the I/O required in a simulation for reading data files and generating trace files using a set of streams classes similar to C++.
References-found: 6

