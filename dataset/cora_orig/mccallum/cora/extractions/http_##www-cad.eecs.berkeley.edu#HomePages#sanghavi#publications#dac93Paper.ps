URL: http://www-cad.eecs.berkeley.edu/HomePages/sanghavi/publications/dac93Paper.ps
Refering-URL: http://www-cad.eecs.berkeley.edu/HomePages/sanghavi/publications/publications.html
Root-URL: http://www.cs.berkeley.edu
Title: Espresso-Signature: A New Exact Minimizer for Logic Functions  
Author: Patrick McGeer Jagesh Sanghavi Robert Brayton Alberto Sangiovanni Vincentelli 
Address: Berkeley, Berkeley, CA 94720  
Affiliation: University of California at  
Abstract: We present a new algorithm for exact two-level logic optimization which radically improves the Quine-McCluskey (QM) procedure. The new algorithm derives the covering problem directly and implicitly without generating the set of all prime implicants. It then generates only those prime implicants involved in the covering problem. We represent a set of primes by the cube of their intersection. Therefore, the unique set of sets of primes which forms the covering problem can be implicitly represented by a set of cubes which forms a minimum canonical cover. We obtain the minimum canonical cover starting from any initial cover and then derive the covering problem. The method is effective; it improves on the runtime and memory usage of Espresso-Exact by average factors of 1.78 and 1.19 respectively on the 114 of 134 benchmark examples that could be completed by Espresso-Exact. Of the remaining 20 hard problems, we solve 14 exactly. For 3 of the remaining 6 the covering problem is derived but it could not be solved exactly. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Brayton, G. Hachtel, C. McMullen, and A. Sangiovanni-Vincentelli. </author> <title> Logic Minimization Algorithms for VLSI Synthesis. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1984. </year>
Reference-contexts: In the following discussion we assume that b is a reduced cube obtained by adding literals to the original signature cube c. The problems of explicitly computing (b) and verifying equality of the c and (b) can both be solved using the blocking function <ref> [1] </ref>. <p> The pruning technique corresponds to reducing the maximum possible number of minterms that need to be visited for a given signature cube c. The first technique is to "shrink" the signature cube c. We employ the Reduce operation of the Espresso-II <ref> [1] </ref> on the signature cube c. It should be noted that signature cube d corresponding to the reduced cube of the cube c (d = (Reduce (c))) may be smaller than c. The essentiality test is then for the signature cube d. The following theorem justifies this action.
Reference: [2] <author> O. Coudert and J.-C. Madre. </author> <title> A new implicit graph-based prime and essential prime computation technique. </title> <editor> In T. Sasao, editor, </editor> <title> Logic Synthesis and Optimization. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1992. </year>
Reference-contexts: Out of the 20 hard examples, Espresso-Exact fails on 17 due to too many primes and the other three due to failure to solve the covering problem exactly. Indeed, Coudert and Madre <ref> [2] </ref> report that some have more than a trillion primes. Despite this, the Essential Signature Set (number of primes of the reduced covering problem) for many of these is small. We have solved 14 out of 17 problems exactly. <p> Further, we have found the minimum canonical cover for ex1010, test2, test3 but the covering problem remains to be solved exactly. The results are reported in figure 5. In the table given in figure 5, we report the name, number of primes <ref> [2] </ref>, number of essential primes, number of essential signature cubes (number of sets or rows of the final covering problem), number of primes in some essential signature set (number of columns of the final covering problem), the size of the minimum solution where known and the computation time on a DECstation
Reference: [3] <author> E. J. McCluskey. </author> <title> Minimization of boolean functions. </title> <journal> Bell System Technical Journal, </journal> <year> 1956. </year>
Reference-contexts: The seminal contribution from Quine [5] and McCluskey <ref> [3] </ref> resulted in the exact minimization procedure which forms the basis of all modern exact two-level minimization algorithms. The three basic steps of Quine-McCluskey (QM) procedure are: 1. Generate all the maximal terms ("primes") of F . 2.
Reference: [4] <author> L. Nguyen, M. Perkowski, and N. Goldstein. </author> <title> Palmini fast boolean minimizer for personal computers. </title> <booktitle> In The Proceedings of Design Automation Conference, </booktitle> <pages> pages 615-621, </pages> <month> July </month> <year> 1987. </year>
Reference-contexts: In our example, the essential sets of primes are the sets fp 1 ; p 2 g; fp 1 ; p 4 ; p 5 g; fp 3 g. We will demonstrate that the set of such essential sets of primes is P min . In <ref> [4] </ref>, the concept of minimal implicants was introduced as any cube obtained by intersecting all the primes which cover a given minterm. In addition, the subset of these which are maximal was called the set of nonredundant minimal implicants (NMI).
Reference: [5] <author> W. Quine. </author> <title> The problem of simplifying truth functions. </title> <journal> American Mathematical Monthly, </journal> <year> 1952. </year>
Reference-contexts: The seminal contribution from Quine <ref> [5] </ref> and McCluskey [3] resulted in the exact minimization procedure which forms the basis of all modern exact two-level minimization algorithms. The three basic steps of Quine-McCluskey (QM) procedure are: 1. Generate all the maximal terms ("primes") of F . 2.
Reference: [6] <author> R.Brayton, P. McGeer, J. Sanghavi, and A. Sangiovanni-Vincentelli. </author> <title> A new exact minimizer for two-level logic synthesis. </title> <editor> In T. Sasao, editor, </editor> <title> Logic Synthesis and Optimization. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1992. </year>
Reference-contexts: The set of essential signature cubes is the minimum canonical cover which represents the covering table implicitly. The details of the theory and proofs can be found in <ref> [6] </ref>. The formal discussion of these concepts is the subject of the remainder of this section. We begin with the following definitions. Definition 2.1 Let P = fp 1 :::p n g be any set of primes, c F + D. Let 1.
Reference: [7] <author> R. L. Rudell. </author> <title> Logic Synthesis for VLSI Design. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering and Computer Science, University of California at Berkeley, </institution> <year> 1989. </year>
Reference-contexts: Most research concentrated on improving each step, not on revising the basic procedure. Rudell combined and improved the procedures for prime generation and set covering formulation with improved techniques to solve the set-covering problem in the program Espresso-exact <ref> [8, 7] </ref>. Espresso-exact was able to find a minimum solution for 114 out of 134 circuits of an extensive suite of benchmark examples. Rudell's experimental work demonstrates that the bottleneck is the generation of all the primes. <p> The average memory requirement for Espresso-Exact is 1279Kbytes and for Espresso-Signature is 1070Kbytes. We also report results on 20 hard examples in the Espresso benchmark suite <ref> [7] </ref> and 3 additional hard examples (ex1010,test2,test3) in the extended suite. Out of the 20 hard examples, Espresso-Exact fails on 17 due to too many primes and the other three due to failure to solve the covering problem exactly.
Reference: [8] <author> R. L. Rudell and A. L. Sangiovanni-Vincentelli. </author> <title> Multiple-valued minimization for PLA optimization. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 6(5) </volume> <pages> 727-750, </pages> <month> September </month> <year> 1987. </year>
Reference-contexts: Most research concentrated on improving each step, not on revising the basic procedure. Rudell combined and improved the procedures for prime generation and set covering formulation with improved techniques to solve the set-covering problem in the program Espresso-exact <ref> [8, 7] </ref>. Espresso-exact was able to find a minimum solution for 114 out of 134 circuits of an extensive suite of benchmark examples. Rudell's experimental work demonstrates that the bottleneck is the generation of all the primes.
References-found: 8

