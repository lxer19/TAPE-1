URL: ftp://theory.cs.uni-bonn.de/pub/reports/cs-reports/1985-1989/8530-cs.ps.gz
Refering-URL: http://cs.uni-bonn.de/info5/publications/CS-1985-1989-en.html
Root-URL: http://cs.uni-bonn.de
Title: Boolean Circuit Complexity of Algebraic Interpolation Problems  
Author: Marek Karpinski 
Address: Berkeley, California  
Affiliation: Dept. of Computer Science University of Bonn and International Computer Science Institute  
Abstract: We present here some recent results on fast parallel interpolation of multivariate polynomials over finite fields. Some applications towards the general conversion algorithms for boolean functions are also formulated. 
Abstract-found: 1
Intro-found: 1
Reference: [AL 86] <author> Adleman, L.M., Lenstra, H.K., </author> <title> Finding Irreducible Polynomials over Finite Fields, </title> <booktitle> Proc. 18 th ACM STOC (1986), </booktitle> <pages> pp. 350-355. </pages>
Reference: [B 81] <author> Ben-Or, M., </author> <title> Probabilistic Algorithms in Finite Fields, </title> <booktitle> Proc. 22 th IEEE FOCS (1981), </booktitle> <pages> pp. 394-398. </pages>
Reference: [BT 88] <author> Ben-Or, M., Tiwari, P., </author> <title> A Deterministic Algorithm for Sparse Mul-tivariate Polynomial Interpolation, </title> <booktitle> Proc. 20 th ACM STOC (1988), </booktitle> <pages> pp. 301-309. </pages>
Reference-contexts: Computer Science, by the DFG Grant KA 673/2-1, and by the SERC Grant GR-E 68297 1 general problem arises in a number of applications, e.g., in design of efficient al-gorithms in algebra, coding theory and combinatorial optimization (cf. [Ga 83], [Ga 84], [Ka 85], [KT 88], [MS 72], [GK 87], <ref> [BT 88] </ref>, [GKS 88]). <p> The interest in the parallel (boolean circuit) complexity of this problem has arisen recently in connection with the design of fast parallel algorithms for the perfect matching problem [GK 87]. [GK 87] gave the first deterministic algorithm for sparse interpolation of determinants over fields of characteristic 0, and <ref> [BT 88] </ref> extended it to the case of arbitrary sparse polynomials over fields of characteristic 0. Following [GK 87], and [GKS 88] we shall use uniform boolean circuits in our analysis. Given a (fixed) finite field GF [q]. <p> Further Research The research on parallel complexity of multivariate polynomial interpolation was spurred by its application towards the parallel matching algorithms (cf. [GK 87]), and resulted already in several applications in problems like sparse factorization and polynomial GCD (cf. [KT 88], <ref> [BT 88] </ref>). The good bit-complexity algorithms require however computations over finite fields rather than ZZ. In this connection an important problem arises to improve on the number of processors of the algorithms of Theorem 3, and 4. 8
Reference: [Be 70] <author> Berlekamp, </author> <title> E.R., Factoring Polynomials over Large Finite Fields, </title> <journal> Math. Comp. </journal> <volume> 24 (1970), </volume> <pages> pp. 713-753. </pages>
Reference-contexts: Step 2: Construct the field GF [q s ] and a primitive element ! in GF [q s ] with the help of Berlekamp Algorithm <ref> [Be 70] </ref>. Step 3: Let N = dq s 1e 4nq . Use the sieve of Erastosthenes to find a prime p with 2N &lt; p 4N .
Reference: [C] <institution> Cauchy, A.L., Exercises d'Analyse et de Phys. Math., </institution> <note> Vol 2, Paris, Bachelier (1841), pp.151-159. </note>
Reference: [CDGK 88] <author> Clausen, M., Dress, A., Grabmeier, J., Karpinski, M., </author> <title> On Zero-Testing and Interpolation of k-Sparse Multivariate Polynomials over Finite Fields, </title> <note> Research Report No.8522-CS, University of Bonn (1988); to appear in Theoretical Computer Science (1989). </note>
Reference-contexts: Step 1: For all n-bit vectors v 2 f0; 1g n , having at most blog 2 tc zeros com pute the values ff v = f (v). Step 2: Output Yes iff 8v [ ff v = 0 ]. The correctness of the above algorithm was proven in <ref> [CDGK 88] </ref>. We do not know whether the result generalizes for the arbitrary finite field GF [q] . We note that we deal here not only with interpolation of polynomials but arbitrary functions in their RSE-representation ([We 87]).
Reference: [Co 85] <author> Cook, S.A., </author> <title> A Taxonomy of Problems with Fast Parallel Algorithms, </title> <booktitle> Information and Control 64 (1985), </booktitle> <pages> pp. </pages> <month> 2-22. </month> <title> [Ga 83] von zur Gathen, J., Factoring Sparse Multivariate Polynomials, </title> <booktitle> Proc. 24 th IEEE FOCS (1983), </booktitle> <pages> pp. </pages> <month> 172-179. </month> <title> [Ga 84] von zur Gathen, J., Parallel Algorithm for Algebraic Problems, </title> <journal> SIAM J. Comput., </journal> <volume> 13 (1984), </volume> <pages> 808-824. </pages>
Reference-contexts: Given this, we must determine an extension GF [q s ] of GF [q], s as small as possible, and an efficient (deterministic boolean NC-algorithm, cf. <ref> [Co 85] </ref>, [KR 88]) interpolation algorithm working over GF [q s ] to determine all coefficients of f in GF [q]. <p> Following [GK 87], and [GKS 88] we shall use uniform boolean circuits in our analysis. Given a (fixed) finite field GF [q]. We say that the black box Interpolation Problem (over a finite field extension GF [q s ]) is in NC k (cf. <ref> [Co 85] </ref>, [KR 88]), if there exists a class of uniform (ntq) O (1) -size and O (log k (ntq))-depth boolean circuits with oracle nodes S (returning values of a black box over the field extension GF [q s ]) computing for an arbitrary n-variate polynomial f 2 GF [q][x 1 <p> The reader is referred to [LN 83], [MS 72] for the basic algorithms for finite fields, and to <ref> [Co 85] </ref>, [KR 88] for the basic models of parallel computation. 1.
Reference: [GK 87] <author> Grigoriev, D.Y., Karpinski, M., </author> <title> The Matching Problem for Bipartite Graphs with Polynomially Bounded Permanents is in NC, </title> <booktitle> Proc. 28 th IEEE FOCS (1987), </booktitle> <address> Los Angeles, </address> <year> 1987, </year> <pages> pp. 166-172. 9 </pages>
Reference-contexts: Research in Computer Science, by the DFG Grant KA 673/2-1, and by the SERC Grant GR-E 68297 1 general problem arises in a number of applications, e.g., in design of efficient al-gorithms in algebra, coding theory and combinatorial optimization (cf. [Ga 83], [Ga 84], [Ka 85], [KT 88], [MS 72], <ref> [GK 87] </ref>, [BT 88], [GKS 88]). The interest in the parallel (boolean circuit) complexity of this problem has arisen recently in connection with the design of fast parallel algorithms for the perfect matching problem [GK 87]. [GK 87] gave the first deterministic algorithm for sparse interpolation of determinants over fields of <p> coding theory and combinatorial optimization (cf. [Ga 83], [Ga 84], [Ka 85], [KT 88], [MS 72], <ref> [GK 87] </ref>, [BT 88], [GKS 88]). The interest in the parallel (boolean circuit) complexity of this problem has arisen recently in connection with the design of fast parallel algorithms for the perfect matching problem [GK 87]. [GK 87] gave the first deterministic algorithm for sparse interpolation of determinants over fields of characteristic 0, and [BT 88] extended it to the case of arbitrary sparse polynomials over fields of characteristic 0. Following [GK 87], and [GKS 88] we shall use uniform boolean circuits in our analysis. <p> and combinatorial optimization (cf. [Ga 83], [Ga 84], [Ka 85], [KT 88], [MS 72], <ref> [GK 87] </ref>, [BT 88], [GKS 88]). The interest in the parallel (boolean circuit) complexity of this problem has arisen recently in connection with the design of fast parallel algorithms for the perfect matching problem [GK 87]. [GK 87] gave the first deterministic algorithm for sparse interpolation of determinants over fields of characteristic 0, and [BT 88] extended it to the case of arbitrary sparse polynomials over fields of characteristic 0. Following [GK 87], and [GKS 88] we shall use uniform boolean circuits in our analysis. <p> connection with the design of fast parallel algorithms for the perfect matching problem <ref> [GK 87] </ref>. [GK 87] gave the first deterministic algorithm for sparse interpolation of determinants over fields of characteristic 0, and [BT 88] extended it to the case of arbitrary sparse polynomials over fields of characteristic 0. Following [GK 87], and [GKS 88] we shall use uniform boolean circuits in our analysis. Given a (fixed) finite field GF [q]. <p> We develop here a new general method involving Cauchy ([C]) matrices to break zero-identity problem in Step 1, and combine it with the new parallel enumeration method based on <ref> [GK 87] </ref> to solve Step 2. <p> SPARSE -SAT is in NC 2 . The algorithm uses O (log 2 (nt)) parallel boolean time and O (n 2 t 3 ) processors. 4. Further Research The research on parallel complexity of multivariate polynomial interpolation was spurred by its application towards the parallel matching algorithms (cf. <ref> [GK 87] </ref>), and resulted already in several applications in problems like sparse factorization and polynomial GCD (cf. [KT 88], [BT 88]). The good bit-complexity algorithms require however computations over finite fields rather than ZZ.
Reference: [GKS 88] <author> Grigoriev, D.Y., Karpinski, M., Singer, M.F., </author> <title> Fast Parallel Algo--rithms for Sparse Multivariate Polynomial Interpolation over Finite Fields, </title> <note> Research Report No.8523-CS, University of Bonn (1988); submitted to SIAM J. Comput., </note> <year> 1988. </year>
Reference-contexts: by the DFG Grant KA 673/2-1, and by the SERC Grant GR-E 68297 1 general problem arises in a number of applications, e.g., in design of efficient al-gorithms in algebra, coding theory and combinatorial optimization (cf. [Ga 83], [Ga 84], [Ka 85], [KT 88], [MS 72], [GK 87], [BT 88], <ref> [GKS 88] </ref>). <p> Following [GK 87], and <ref> [GKS 88] </ref> we shall use uniform boolean circuits in our analysis. Given a (fixed) finite field GF [q]. <p> For the fixed field GF [q] , the algorithm works in O (log 3 (nt)) parallel boolean time and O (n 2 t 6 log 2 (nt)) processors. The algorithm discovered in <ref> [GKS 88] </ref> involves two major computational steps: (1) breaking the zero identity problem of polynomials over a slight field extension GF [q d2log q (nt)+3e ], and (2) inductive enumeration of all partial solutions for terms and coefficient vectors over GF [q] by means of recursion using (1). <p> Step 7: Output Yes (f j 0) iff 80 l &lt; t; 0 i N [ ff l i = 0 ]. 6 The correctness proof of this algorithm is given in <ref> [GKS 88] </ref>.
Reference: [Ka 85] <author> Kaltofen, E., </author> <title> Computing with Polynomials Given by Straight-Line Programs I, Greatest Common Divisors, </title> <booktitle> Proc. 17 th ACM STOC (1985), </booktitle> <pages> pp. 131-142. </pages>
Reference-contexts: in part by Leibniz Center for Research in Computer Science, by the DFG Grant KA 673/2-1, and by the SERC Grant GR-E 68297 1 general problem arises in a number of applications, e.g., in design of efficient al-gorithms in algebra, coding theory and combinatorial optimization (cf. [Ga 83], [Ga 84], <ref> [Ka 85] </ref>, [KT 88], [MS 72], [GK 87], [BT 88], [GKS 88]).
Reference: [KT 88] <author> Kaltofen, E., Trager, B., </author> <title> Computing with Polynomials Given by Black Boxes for their Evaluations: Greatest Common Divisor, Factorization, </title> <booktitle> Seperation of Numerators and Denominators, Proc. 29 th IEEE FOCS (1988), </booktitle> <pages> pp. 296-305. </pages>
Reference-contexts: by Leibniz Center for Research in Computer Science, by the DFG Grant KA 673/2-1, and by the SERC Grant GR-E 68297 1 general problem arises in a number of applications, e.g., in design of efficient al-gorithms in algebra, coding theory and combinatorial optimization (cf. [Ga 83], [Ga 84], [Ka 85], <ref> [KT 88] </ref>, [MS 72], [GK 87], [BT 88], [GKS 88]). <p> Further Research The research on parallel complexity of multivariate polynomial interpolation was spurred by its application towards the parallel matching algorithms (cf. [GK 87]), and resulted already in several applications in problems like sparse factorization and polynomial GCD (cf. <ref> [KT 88] </ref>, [BT 88]). The good bit-complexity algorithms require however computations over finite fields rather than ZZ. In this connection an important problem arises to improve on the number of processors of the algorithms of Theorem 3, and 4. 8
Reference: [KR 88] <author> Karp, R.M., Remachandran,V., </author> <title> A Survey of Parallel Algorithms for Shared-Memory Machines, </title> <note> Research Report No.UCB/CSD 88/407, </note> <institution> University of California, </institution> <note> Berkeley (1988); to appear in Handbook of Theoretical Computer Science, North Holland (1989). </note>
Reference-contexts: Given this, we must determine an extension GF [q s ] of GF [q], s as small as possible, and an efficient (deterministic boolean NC-algorithm, cf. [Co 85], <ref> [KR 88] </ref>) interpolation algorithm working over GF [q s ] to determine all coefficients of f in GF [q]. <p> Following [GK 87], and [GKS 88] we shall use uniform boolean circuits in our analysis. Given a (fixed) finite field GF [q]. We say that the black box Interpolation Problem (over a finite field extension GF [q s ]) is in NC k (cf. [Co 85], <ref> [KR 88] </ref>), if there exists a class of uniform (ntq) O (1) -size and O (log k (ntq))-depth boolean circuits with oracle nodes S (returning values of a black box over the field extension GF [q s ]) computing for an arbitrary n-variate polynomial f 2 GF [q][x 1 ; : <p> The reader is referred to [LN 83], [MS 72] for the basic algorithms for finite fields, and to [Co 85], <ref> [KR 88] </ref> for the basic models of parallel computation. 1.
Reference: [LN 83] <author> Lidl, H., Niederreiter, H., </author> <title> Finite Fields, Encyclopedia of Mathematics and its Applications, </title> <publisher> Vol.10, Cambridge University Press (1983). </publisher>
Reference-contexts: The reader is referred to <ref> [LN 83] </ref>, [MS 72] for the basic algorithms for finite fields, and to [Co 85], [KR 88] for the basic models of parallel computation. 1.
Reference: [MS 72] <author> MacWilliams, F.J., Sloane, N.J.A., </author> <title> The Theory of Error Correcting Codes, </title> <publisher> North Holland (1972). </publisher>
Reference-contexts: Center for Research in Computer Science, by the DFG Grant KA 673/2-1, and by the SERC Grant GR-E 68297 1 general problem arises in a number of applications, e.g., in design of efficient al-gorithms in algebra, coding theory and combinatorial optimization (cf. [Ga 83], [Ga 84], [Ka 85], [KT 88], <ref> [MS 72] </ref>, [GK 87], [BT 88], [GKS 88]). <p> The reader is referred to [LN 83], <ref> [MS 72] </ref> for the basic algorithms for finite fields, and to [Co 85], [KR 88] for the basic models of parallel computation. 1. <p> Lemma. (cf., e.g. <ref> [MS 72] </ref>). Let C be a Cauchy matrix, then the determinant Det (C) = 1i&lt;jN (x j x i )(y j y i ) 1i;jN (x i + y j ) For any of its minors 6= 0 a similar formula holds. Therefore any minor of any size is nonsingular.
Reference: [We 87] <author> Wegener, I., </author> <title> The Complexity of Boolean Functions, </title> <booktitle> Teubner (1987). </booktitle> <pages> 10 </pages>
Reference-contexts: The size of the vector S is referred to as the size (RSE (f )) of f in its RSE-representation (cf. <ref> [We 87] </ref>) (and is in our framework exactly its sparsity over GF [2][x 1 ; : : : ; x n ]).
References-found: 15

