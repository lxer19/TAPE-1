URL: http://www.cs.dartmouth.edu/~gdavis/papers/ieee.ps.gz
Refering-URL: http://www.cs.dartmouth.edu/~gdavis/
Root-URL: http://www.cs.dartmouth.edu
Title: A Wavelet-Based Analysis of Fractal Image Compression  
Author: Geoffrey M. Davis, Member, IEEE 
Keyword: fractal image compression, wavelets, self-quantization of subtrees, self-similarity, fractional Brownian motion  
Note: TO APPEAR IN IEEE TRANSACTIONS ON IMAGE PROCESSING, 1997. 100  
Abstract: Why does fractal image compression work? What is the implicit image model underlying fractal block coding? How can we characterize the types of images for which fractal block coders will work well? These are the central issues we address. We introduce a new wavelet-based framework for analyzing block-based fractal compression schemes. Within this framework we are able to draw upon insights from the well-established transform coder paradigm in order to address the issue of why fractal block coders work. We show that fractal block coders of the form introduced by Jacquin[1] are a Haar wavelet subtree quantization scheme. We examine a generalization of this scheme to smooth wavelets with additional vanishing moments. The performance of our generalized coder is comparable to the best results in the literature for a Jacquin-style coding scheme. Our wavelet framework gives new insight into the convergence properties of fractal block coders, and leads us to develop an unconditionally convergent scheme with a fast decoding algorithm. Our experiments with this new algorithm indicate that fractal coders derive much of their effectiveness from their ability to efficiently represent wavelet zerotrees. Finally, our framework reveals some of the fundamental limitations of current fractal compression schemes. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Arnaud Jacquin, </author> <title> "Image coding based on a fractal theory of iterated contractive image transformations", </title> <journal> IEEE Trans. Image Proc., </journal> <volume> vol. 1, no. 1, </volume> <pages> pp. 18-30, </pages> <month> Jan. </month> <year> 1992. </year>
Reference-contexts: The domain blocks from which the codebook is constructed are drawn from the domain pool, the set fB D K;L Ij (K; L) 2 Dg. A variety of domain pools are used in the literature. A commonly used pool <ref> [1] </ref> is the set of all unit translates of 2 D fi 2 D blocks, D = f (m; n)j0 m; n &lt; 2 N 2 D g. <p> Although we typically try to minimize the l 2 error between I and I fp , bounding jjGjj 2 &lt; 1 is quite difficult [23]. We can bound jjGjj 1 &lt; 1 by constraining the gains jg j &lt; 1 <ref> [1] </ref>. Although this ensures that the decoding process will converge, numerical experiments have found the collage bound to be too pessimistic by orders of magnitude [24]. Moreover, it fails to predict the convergence of block coding schemes when some gains jg j &gt; 1.
Reference: [2] <author> Michael F. Barnsley and Arnaud Jacquin, </author> <title> "Application of recurrent iterated function systems to images", </title> <booktitle> Proc. SPIE, </booktitle> <volume> vol. 1001, </volume> <pages> pp. 122-131, </pages> <year> 1988. </year>
Reference-contexts: When we use these overlapping domain pools we no longer are guaranteed decoder convergence in a finite number iterations since our basis is biorthogonal. This adds additional complexity to the decoding process since convergence requires additional iterations. In our experiments we restricted the SQS gain factors to <ref> [2; 2] </ref>. Although these limits are too large to guarantee convergence, we saw no evidence of convergence problems with the larger pools. The use of larger domain pool allows more accurate quantization of subtrees. The cost of storing the quantization parameters increases, though, so there is a tradeoff.
Reference: [3] <author> A. Jacquin, </author> <title> "Fractal image coding based on a theory of iterated contractive image transformations", </title> <booktitle> in Proc. SPIE Visual Comm. and Image Proc., </booktitle> <year> 1990, </year> <pages> pp. 227-239. </pages>
Reference: [4] <author> M. F. Barnsley and S. Demko, </author> <title> "Iterated function systems and the global construction of fractals", </title> <journal> Proc. Royal Society of Lon-don, </journal> <volume> vol. A399, </volume> <pages> pp. 243-275, </pages> <year> 1985. </year>
Reference: [5] <author> F. Davoine, E. Bertin, and J-M. Chassery, </author> <title> "From rigidity to adaptive tesselations for fractal image compression: comparative studies", </title> <booktitle> in IEEE IMDSP, </booktitle> <month> Sept. </month> <year> 1993. </year>
Reference: [6] <author> Yuval Fisher and Spencer Menlove, </author> <title> "Fractal encoding with HV partitions", in Fractal Compression: Theory and Application to Digital Images, </title> <editor> Yuval Fisher, Ed. </editor> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1994. </year>
Reference-contexts: The rightmost image has been compressed at 65.6:1 (PSNR = 29.9 dB) using a smooth wavelet basis. Blocking artifacts have been completely eliminated. angular range blocks using rectangular domain blocks <ref> [6] </ref>. The use of rectangular blocks introduces an additional degree of freedom in the construction of the domain pool and gives increased flexibility to the partitioning of the image. This strategy uses an enormous domain pool. The reconstructed images in [6] show the coding to be of high quality and in <p> been completely eliminated. angular range blocks using rectangular domain blocks <ref> [6] </ref>. The use of rectangular blocks introduces an additional degree of freedom in the construction of the domain pool and gives increased flexibility to the partitioning of the image. This strategy uses an enormous domain pool. The reconstructed images in [6] show the coding to be of high quality and in fact, the authors claim that their algorithm gives the best results of any fractal block coder in the literature (we note that these results have been since superseded by hybrid transform-based coders such as those of [12] and [13]).
Reference: [7] <author> Yuval Fisher, </author> <title> "Fractal image compression with quadtrees", in Fractal Compression: Theory and Application to Digital Images, </title> <editor> Yuval Fisher, Ed. </editor> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1994. </year>
Reference-contexts: Finally, some of the improvement is also attributable to SQS's ability to use a greater range of gain factors due to its unconditional convergence. Fisher notes that the performance of quadtree coders is significantly improved by enlarging the domain pool <ref> [7] </ref>. The third line from the bottom of Figure 4, 'Fractal HV Tree', was produced by a fractal block encoding of rect TO APPEAR IN IEEE TRANSACTIONS ON IMAGE PROCESSING, 1997. 109 Fig. 5. <p> We see that self-quantization of subtrees yields a modest improvement over the baseline transform coder at high bit rates. Our results below indicate that this improvement is due largely to the ability of self-quantization to efficiently represent smooth regions. C. Larger Domain Pools Experiments in <ref> [7] </ref> show the performance of fractal block coders improves when larger domain pools are used.
Reference: [8] <author> E. W. Jacobs, Y. Fisher, and R. D. Boss, </author> <title> "Image compression: a study of the iterated transform method", </title> <booktitle> Signal Processing, </booktitle> <volume> vol. 29, no. 3, </volume> <pages> pp. 251-263, </pages> <month> Dec. </month> <year> 1992. </year>
Reference: [9] <author> Dietmar Saupe, </author> <title> "Accelerating fractal image compression by multi-dimensional nearest neighbor search", </title> <booktitle> in Proc. Data Compression Conference, Snowbird, Utah, </booktitle> <editor> James A. Storer and Martin Cohn, Eds. </editor> <publisher> IEEE Computer Society, </publisher> <month> Mar. </month> <year> 1995, </year> <pages> pp. 222-231. </pages>
Reference: [10] <author> B. Hurtgen and T. </author> <title> Hain, "On the convergence of fractal transforms", </title> <booktitle> in Proc. ICASSP, 1994, </booktitle> <volume> vol. 5, </volume> <pages> pp. 561-564. </pages>
Reference: [11] <author> John Kominek, </author> <title> "Convergence of fractal encoded images", </title> <booktitle> in Proc. Data Compression Conference, Snowbird, Utah, </booktitle> <editor> James A. Storer and Martin Cohn, Eds. </editor> <publisher> IEEE Computer Society, </publisher> <month> Mar. </month> <year> 1995, </year> <pages> pp. 242-251. </pages>
Reference: [12] <author> Kai Uwe Barthel, Jorg Schuttermeyer, Thomas Voye, and Peter Noll, </author> <title> "A new image coding technique unifying fractal and transform coding", </title> <booktitle> in IEEE ICIP, </booktitle> <address> Austin, Texas, </address> <month> Nov. </month> <year> 1994. </year>
Reference-contexts: reconstructed images in [6] show the coding to be of high quality and in fact, the authors claim that their algorithm gives the best results of any fractal block coder in the literature (we note that these results have been since superseded by hybrid transform-based coders such as those of <ref> [12] </ref> and [13]). The computational requirements for this scheme are quite large due to the size of the domain pool and the increased freedom in partitioning the image. Image encoding times were as high as 46 CPU-hours on a Silicon Graphics Personal IRIS 4D/35.
Reference: [13] <author> Roberto Rinaldo and Giancarlo Calvagno, </author> <title> "Image coding by block prediction of multiresolution subimages", </title> <journal> IEEE Transactions on Image Processing, </journal> <volume> vol. 4, no. 7, </volume> <pages> pp. 909-920, </pages> <month> July </month> <year> 1995. </year>
Reference-contexts: in [6] show the coding to be of high quality and in fact, the authors claim that their algorithm gives the best results of any fractal block coder in the literature (we note that these results have been since superseded by hybrid transform-based coders such as those of [12] and <ref> [13] </ref>). The computational requirements for this scheme are quite large due to the size of the domain pool and the increased freedom in partitioning the image. Image encoding times were as high as 46 CPU-hours on a Silicon Graphics Personal IRIS 4D/35. <p> The zerotree/wavelet coder of Xiong et al. [35] obtains PSNR's of over 1 dB better than those reported here through the use of oriented zerotrees. The Rinaldo-Calvagno <ref> [13] </ref> coder treats coefficients with different orientations separately, so it too obtains some advantage over our zerotree structure.
Reference: [14] <author> Alex Pentland and Bradley Horowitz, </author> <title> "A practical approach to fractal-based image compression", </title> <booktitle> in Proc. Data Compression Conference, Snowbird, Utah, </booktitle> <editor> James A. Storer and Martin Cohn, Eds. </editor> <publisher> IEEE Computer Society, </publisher> <month> Mar. </month> <year> 1991, </year> <pages> pp. 176-185. </pages>
Reference: [15] <author> Geoffrey M. Davis, </author> <title> "Self-quantization of wavelet subtrees: a wavelet-based theory of fractal image compression", </title> <booktitle> in Proc. Data Compression Conference, Snowbird, Utah, </booktitle> <editor> James A. Storer and Martin Cohn, Eds. </editor> <publisher> IEEE Computer Society, </publisher> <month> Mar. </month> <year> 1995, </year> <pages> pp. 232-241. </pages>
Reference-contexts: B. A Wavelet Analog of Fractal Block Coding We now describe a wavelet-based analog of fractal block coding introduced in <ref> [15] </ref>. Fractal block coders approximate a set of 2 R fi 2 R range blocks using a set of 2 D fi 2 D domain blocks.
Reference: [16] <author> H. Krupnik, D. Malah, and E. Karnin, </author> <title> "Fractal representation of images via the discrete wavelet transform", </title> <booktitle> in IEEE 18th Conv. of EE in Israel, </booktitle> <address> Tel-Aviv, </address> <month> Mar. </month> <year> 1995. </year>
Reference: [17] <author> Axel van de Walle, </author> <title> "Merging fractal image compression and wavelet transform methods", in Fractal Image Coding and Analysis: a NATO ASI Series Book, </title> <editor> Yuval Fisher, Ed. </editor> <publisher> Springer Ver-lag, </publisher> <address> New York, </address> <year> 1996. </year>
Reference: [18] <author> Yuval Fisher, </author> <title> Fractal Compression: Theory and Application to Digital Images, </title> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1994. </year>
Reference-contexts: Images compressed at roughly 64:1 by the various methods are shown in Figure 5 to illustrate the artifacts they generate. The bottommost line in Figure 4, 'Fractal Quadtree', was produced by the quadtree block coder listed in the appendix of <ref> [18] </ref>. The command line used to generate the data was "enc -t XX -m 3 -M 7 -w 512 -d 1 -D 0 -f lena.raw lena.tXX", where XX ranged from 1 to 20. These param Fig. 4. <p> The leftmost 512 fi 512 Lena image has been compressed at 60.6:1 (PSNR = 24.9 dB) using a disjoint domain pool and the quadtree coder from <ref> [18] </ref>. The center image has been compressed at 68.2:1 (PSNR = 28.0 dB) using our self-quantization of subtrees (SQS) scheme with the Haar basis.
Reference: [19] <author> Arnaud Jacquin, </author> <title> "Fractal image coding: a review", </title> <journal> Proc. IEEE, </journal> <volume> vol. 81, no. 10, </volume> <pages> pp. 1451-1465, </pages> <month> Oct. </month> <year> 1993. </year>
Reference: [20] <author> J. Shapiro, </author> <title> "Embedded image coding using zerotrees of wavelet coefficients", </title> <journal> IEEE Transactions on Signal Processing, </journal> <volume> vol. 41, no. 12, </volume> <pages> pp. 3445-3462, </pages> <month> Dec. </month> <year> 1993. </year>
Reference-contexts: The shift in bits from the inefficient DC quantization to the more efficient block quantization results in improved performance. Our SQS coder encodes both subtrees and coarse-scale coefficients efficiently, so increasing the domain pool does not yield a similar improvement. D. Zerotrees Recent wavelet-based image coders <ref> [20] </ref> [35] have shown that zerotrees, wavelet subtrees whose coefficients are all nearly zero, are a common feature of natural images. The use of zerotrees allows coders to take advantage of the localization of image energy in space.
Reference: [21] <author> A. Gersho and R. M. Gray, </author> <title> Vector Quantization and Signal Compression, </title> <publisher> Kluwer Academic, </publisher> <address> Boston, </address> <year> 1992. </year>
Reference-contexts: A second operator is the symmetry operator L k , 1 k 8, which maps a square block to one of the 8 isometries obtained from compositions of reflections and 90 degree rotations. Range block approximation is similar to shape-gain vector quantization <ref> [21] </ref>. Range blocks are quantized to a linear combination of an element from the codebook and a constant block.
Reference: [22] <author> Geoffrey M. Davis, </author> <title> "Self-Quantization of Wavelet Subtrees", </title> <booktitle> in Proc. SPIE Wavelet Applications in Signal and Image Proc. III, San Diego, </booktitle> <editor> Andrew F. Laine and Michael A. Unser, Eds., </editor> <month> July </month> <year> 1995, </year> <journal> vol. </journal> <volume> 2569, </volume> <pages> pp. 294-307. </pages>
Reference-contexts: These additional effects of quantization errors have proven difficult to estimate, so in practice g; h; , and P are chosen to minimize the l 2 approximation error in 1. This tactic gives good results in practice; we discuss the propagation of errors further in <ref> [22] </ref>. C. Decoding Fractal Coded Images The approximations for the range blocks (1) determine a constraint on the image I of the form I GI + H.
Reference: [23] <author> Lars M. Lundheim, </author> <title> "A discrete framework for fractal signal modeling", in Fractal Compression: Theory and Application to Digital Images, </title> <editor> Yuval Fisher, Ed. </editor> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1994. </year>
Reference-contexts: The collage theorem bound is more useful as a motivator than as a practical numerical bound. Although we typically try to minimize the l 2 error between I and I fp , bounding jjGjj 2 &lt; 1 is quite difficult <ref> [23] </ref>. We can bound jjGjj 1 &lt; 1 by constraining the gains jg j &lt; 1 [1]. Although this ensures that the decoding process will converge, numerical experiments have found the collage bound to be too pessimistic by orders of magnitude [24].
Reference: [24] <author> Yuval Fisher, Bill Jacobs, and Roger Boss, </author> <title> "Fractal image compression using iterated transforms", in Image and Text Compression, </title> <editor> J. Storer, </editor> <publisher> Ed., </publisher> <pages> pp. 35-61. </pages> <publisher> Kluwer Academic, </publisher> <year> 1992. </year>
Reference-contexts: We can bound jjGjj 1 &lt; 1 by constraining the gains jg j &lt; 1 [1]. Although this ensures that the decoding process will converge, numerical experiments have found the collage bound to be too pessimistic by orders of magnitude <ref> [24] </ref>. Moreover, it fails to predict the convergence of block coding schemes when some gains jg j &gt; 1. In section IV we discuss schemes with convergence properties that are independent of the g . III. A Wavelet Framework A.
Reference: [25] <author> Martin Vetterli and Jelena Kovacevic, </author> <title> Wavelets and Subband Coding, </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1995. </year>
Reference-contexts: Figure 2 illustrates the action of a symmetry operator on a subtree. Note that the Haar basis is the only orthogonal basis we consider here, since it is the only compactly supported symmetrical wavelet basis <ref> [25] </ref>. When we generalize to non-Haar bases, we must use biorthogonal bases to obtain both symmetry and compact support.
Reference: [26] <author> M. Antonini, M. Barlaud, and P. Mathieu, </author> <title> "Image Coding Using Wavelet Transform", </title> <journal> IEEE Trans. Image Proc., </journal> <volume> vol. 1, no. 2, </volume> <pages> pp. 205-220, </pages> <month> Apr. </month> <year> 1992. </year>
Reference-contexts: Upper bounds for these g 's can be obtained numerically for various domain pools. Table II below lists upper bounds for g that will ensure that jjG jj 1 &lt; 1 for the 7/9 tap spline variant basis of <ref> [26] </ref>. We assume a 512 fi 512 image with a domain pool consisting of all unit translates of blocks of size 2 D fi 2 D or smaller. <p> Our fractional Brownian motion texture model predicts that a basis with more vanishing moments than the Haar will perform better as an approximate K-L basis for the texture data and therefore will provide better encodings. The line 'Spline SQS' was generated using the 7-9 tap biorthogonal filter set from <ref> [26] </ref>. The domain pool was the same as for the Haar SQS scheme and the quadtree block coder. As can be seen in image quality over the Haar SQS scheme. <p> Fig. 6. Self-quantization of subtrees (SQS) coder performance for the 512 fi 512 Lena image using the disjoint domain pool, the half-overlapping domain pool, and the quarter-overlapping domain pool. The spline variant basis of <ref> [26] </ref> was used in all cases. It uses the same scalar quantizers and the same Lagrange multiplier bit allocation algorithm as SQS. We see that self-quantization of subtrees yields a modest improvement over the baseline transform coder at high bit rates. <p> Fig. 7. Baseline wavelet coder performance vs. self-quantization of subtrees (SQS) with the disjoint domain pool for the 512 fi 512 Lena image. PSNR's are shown for both unmodified and zerotree-enhanced versions of these coders. The spline variant basis of <ref> [26] </ref> was used in all cases. Fig. 8. The white squares in above images correspond to the self-quantized subtrees used in compressing the 512 fi 512 mandrill image.
Reference: [27] <author> G. E. ien, Z. Baharav, S. Lepsty, and E. Karnin, </author> <title> "A new improved collage theorem with applications to multiresolution fractal image coding", </title> <booktitle> in Proc. ICASSP, </booktitle> <year> 1994. </year>
Reference-contexts: Hence the map G W will still be scale-extending. For the Haar basis this half-overlapping domain pool corresponds to the set of domain blocks which share boundaries with range blocks of the next finer scale. This particular restricted domain pool has been studied for standard fractal block coders in <ref> [27] </ref> and [28]. The above theorem generalizes the results of [27] and [28] and shows clearly why these results hold. Our convergence proof yields a fast algorithm for decoding SQS-coded images. For the disjoint domain pool each fine-scale wavelet coefficient depends on only one other coefficient. <p> This particular restricted domain pool has been studied for standard fractal block coders in <ref> [27] </ref> and [28]. The above theorem generalizes the results of [27] and [28] and shows clearly why these results hold. Our convergence proof yields a fast algorithm for decoding SQS-coded images. For the disjoint domain pool each fine-scale wavelet coefficient depends on only one other coefficient.
Reference: [28] <author> Z. Baharav, D. Malah, and E. Karnin, </author> <title> "Hierarchical interpretation of fractal image coding and its application to fast decoding", </title> <booktitle> in Proc. Digital Signal Processing Conference, </booktitle> <address> Cyprus, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: For the Haar basis this half-overlapping domain pool corresponds to the set of domain blocks which share boundaries with range blocks of the next finer scale. This particular restricted domain pool has been studied for standard fractal block coders in [27] and <ref> [28] </ref>. The above theorem generalizes the results of [27] and [28] and shows clearly why these results hold. Our convergence proof yields a fast algorithm for decoding SQS-coded images. For the disjoint domain pool each fine-scale wavelet coefficient depends on only one other coefficient. <p> This particular restricted domain pool has been studied for standard fractal block coders in [27] and <ref> [28] </ref>. The above theorem generalizes the results of [27] and [28] and shows clearly why these results hold. Our convergence proof yields a fast algorithm for decoding SQS-coded images. For the disjoint domain pool each fine-scale wavelet coefficient depends on only one other coefficient.
Reference: [29] <author> Alex Pentland, </author> <title> "Fractal-based description of natural scenes", </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> vol. 6, </volume> <pages> pp. 661-673, </pages> <year> 1984. </year>
Reference-contexts: We model textures as fractional Brownian motion (fBm) processes as proposed by Pentland <ref> [29] </ref>. The fractional Brownian motion texture model captures an essential feature of natural images, the fact that their power spectra decay according to a power law. Fractional Brownian motion processes have spectral decay rates ranging from f 1 to f 3 , where f is frequency.
Reference: [30] <author> David J. </author> <title> Field, "Scale-invariance and self-similar 'wavelet' transforms: an analysis of natural scenes and mammalian visual systems", in Wavelets, Fractals, and Fourier Transforms, </title> <editor> M. Farge, J. C. R. Hunt, and J. C. Vassilicos, Eds. </editor> <publisher> Oxford University Press, Oxford, </publisher> <year> 1993. </year>
Reference-contexts: Fractional Brownian motion processes have spectral decay rates ranging from f 1 to f 3 , where f is frequency. Here f 2 corresponds to ordinary Brownian motion. Measurements of spectral decay in natural images show decay rates between f 2 and f 3 . Field <ref> [30] </ref> hypothesizes that image contrast is invariant across scale, which implies that image luminance power spectra decay like f 2 . His measurements of the spectra of natural images show an overall decay rate of roughly f 2:2 .
Reference: [31] <author> Patrick Flandrin, </author> <title> "Wavelet analysis and synthesis of fractional Brownian motion", </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> vol. 38, no. 2, </volume> <pages> pp. 910-917, </pages> <month> Mar. </month> <year> 1992. </year>
Reference-contexts: His measurements of the spectra of natural images show an overall decay rate of roughly f 2:2 . Although Fractional Brownian motion processes are not deterministically self-similar, they are statistically self-similar, i.e. the statistics of scaled subsets are identical to the statistics of the original set. Flandrin <ref> [31] </ref> has shown that the wavelet transform coefficients of a fractional Brownian motion process are stationary sequences with a self-similar covariance structure. This means that the code book constructed from domain subtrees will possess the same second order statistics as the set of range subtrees. <p> When the decay is O (f fi ) for 2 &lt; fi &lt; 3, the autocorrelation function for a coefficient lag of n decays as jnj fi3 for n large <ref> [31] </ref>. Tewfik and Kim [32] have shown that for such fBm's, transforms using bases with larger numbers of vanishing moments yield much better approximations to the K-L trans TO APPEAR IN IEEE TRANSACTIONS ON IMAGE PROCESSING, 1997. 108 form.
Reference: [32] <author> A. H. Tewfik and M. Kim, </author> <title> "Correlation structure of the discrete wavelet coefficients of fractional Brownian motion", </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> vol. 38, no. 2, </volume> <pages> pp. 904-909, </pages> <month> Mar. </month> <year> 1992. </year>
Reference-contexts: When the decay is O (f fi ) for 2 &lt; fi &lt; 3, the autocorrelation function for a coefficient lag of n decays as jnj fi3 for n large [31]. Tewfik and Kim <ref> [32] </ref> have shown that for such fBm's, transforms using bases with larger numbers of vanishing moments yield much better approximations to the K-L trans TO APPEAR IN IEEE TRANSACTIONS ON IMAGE PROCESSING, 1997. 108 form. Our texture model therefore motivates the use of bases with additional vanishing moments.
Reference: [33] <author> Allen Gersho, </author> <title> "Asymptotically optimal block quantization", </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> vol. IT-25, no. 4, </volume> <pages> pp. 373-380, </pages> <month> July </month> <year> 1979. </year>
Reference-contexts: The process of matching random subtrees is comparable to quantizing a random vector x with a density function p (x) using a quantizer with bins distributed according to the same density p (x). For high resolution entropy constrained quantization, the optimal distribution of quantizer bins is very nearly uniform <ref> [33] </ref> [34]. As we have seen from our texture model, the distribution of code vectors used by fractal coders is far from the near-optimal uniform distribution. Codewords for our fractal block scheme will be unnecessarily densely distributed in high probability regions and too sparsely distributed in low probability regions.
Reference: [34] <author> Paul L. Zador, </author> <title> "Asymptotic quantization error of continuous signals and the quantization dimension", </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> vol. IT-28, no. 2, </volume> <pages> pp. 139-149, </pages> <month> Mar. </month> <year> 1982. </year>
Reference-contexts: For high resolution entropy constrained quantization, the optimal distribution of quantizer bins is very nearly uniform [33] <ref> [34] </ref>. As we have seen from our texture model, the distribution of code vectors used by fractal coders is far from the near-optimal uniform distribution. Codewords for our fractal block scheme will be unnecessarily densely distributed in high probability regions and too sparsely distributed in low probability regions.
Reference: [35] <author> Zixiang Xiong, Kannan Ramchandran, and Michael T. Orchard, </author> <title> "Space-frequency quantization for wavelet image coding", </title> <type> preprint, </type> <year> 1995. </year>
Reference-contexts: We find a tight clustering of codewords around the all-zero subtree, which leads to an inefficient codebook. V. Results A. Implementation Our self-quantization of subtrees scheme possesses a structure similar to that of the space-frequency coder described in <ref> [35] </ref>. We have two basic methods for quantizing data: we have a set of coarse-scale wavelet coefficients that we quantize using a set of scalar quantizers, and we have a set of range subtrees that we self-quantize using codewords generated from domain subtrees. <p> The problem is finding the most effective partition of the data. We employ an algorithm that optimizes the allocation of bits between a set of scalar quantizers and a set of subtree quantizers following <ref> [35] </ref>. The source code for our implementation and scripts for generating the figures are available from the web site http://www.cs.dartmouth.edu/~gdavis/fractal/fractal.html. The implementation is based on the public domain Wavelet Image Compression Construction Kit, available from http://www.cs.dartmouth.edu/~gdavis/wavelet/wavelet.html. B. SQS vs. <p> The shift in bits from the inefficient DC quantization to the more efficient block quantization results in improved performance. Our SQS coder encodes both subtrees and coarse-scale coefficients efficiently, so increasing the domain pool does not yield a similar improvement. D. Zerotrees Recent wavelet-based image coders [20] <ref> [35] </ref> have shown that zerotrees, wavelet subtrees whose coefficients are all nearly zero, are a common feature of natural images. The use of zerotrees allows coders to take advantage of the localization of image energy in space. Zerotrees are trivially self-similar, so they can be encoded relatively cheaply via self-quantization. <p> We test this hypothesis by examining the results of incorporating a separate inexpensive zerotree codeword into our codebook. We implement this zerotree quantization in a manner similar to <ref> [35] </ref> by adding a low-cost codeword for an all-zero range block to our SQS codebook. Although zerotree quantization of subtrees is less accurate in general than self-quantization, zerotrees are much cheaper to code. <p> In adherence to the Jacquin-style block coder framework, we have limited our attention to subtrees containing components from all three subband orientations at each scale. The zerotree/wavelet coder of Xiong et al. <ref> [35] </ref> obtains PSNR's of over 1 dB better than those reported here through the use of oriented zerotrees. The Rinaldo-Calvagno [13] coder treats coefficients with different orientations separately, so it too obtains some advantage over our zerotree structure.
Reference: [36] <author> Mohammad Gharavi-Alkhansari and Thomas Huang, </author> <title> "Generalized image coding using fractal-based methods", </title> <booktitle> in Proc. ICIP, </booktitle> <year> 1994, </year> <pages> pp. 440-443. </pages>
Reference-contexts: Code-words are too densely clustered around the very common all-zero subtree and too sparsely distributed elsewhere. This dense clustering of near-zerotrees increases codeword cost but contributes very little to image fidelity. Some authors have addressed the problem of codebook inefficiencies by augmenting fractal codebooks <ref> [36] </ref>. While this codebook supplementation adds codewords in the sparse regions, it does not address the problem of overly dense clustering of code words around zero.
Reference: [37] <author> Julien Signes, </author> <title> "Geometrical interpretation of IFS based image coding", in Fractal Image Coding and Analysis: a NATO ASI Series Book, </title> <editor> Yuval Fisher, Ed. </editor> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1996. </year>
Reference-contexts: This redundancy is costly, since when using self-quantization we pay a substantial number of bits to differentiate between these essentially identical zero code words. Relatively little attention has been paid to this problem of redundancy. A codebook pruning strategy of Signes <ref> [37] </ref> is a promising first attempt. An alternative strategy would be to adaptively eliminate from the domain pool any sub-trees that are subsets of larger subtrees that have been quantized to zero.
References-found: 37

