URL: http://www.cs.utah.edu/~shirley/pubs/gi90.ps.Z
Refering-URL: http://www.cs.utah.edu/~shirley/papers.html
Root-URL: 
Title: A Ray Tracing Method for Illumination Calculation in Diffuse-Specular Scenes  
Author: Peter Shirley 
Keyword: Bump Mapping, Illumination, Radiosity, Radiance, Ray Tracing, Realism, Stratified Sampling, Texture Mapping.  
Address: 1304 West Springfield Avenue Urbana, Illinois 61801 USA  
Affiliation: Department of Computer Science University of Illinois  
Abstract: Several ways of improving the realism of the results of traditional ray tracing are presented. The essential physical quantities of spectral radiant power and spectral radiance and their use in lighting calculations are discussed. Global illumination terms are derived by employing illumination ray tracing for calculation of quickly changing indirect lighting components, and ra-diosity ray tracing for slowly changing indirect lighting components. Direct lighting is calculated during the viewing phase allowing the use of bump maps. Finally, a method is introduced that reduces the total number of shadow rays to no more than the total number of viewing rays for a given picture. 
Abstract-found: 1
Intro-found: 1
Reference: [Arv85] <author> James Arvo. </author> <title> Backward ray tracing. </title> <booktitle> Developments in Ray Tracing, </booktitle> <pages> pages 259-263, </pages> <year> 1985. </year> <note> ACM Siggraph '85 Course Notes. </note>
Reference-contexts: This shortcoming can be dealt with by tracing illumination rays from the light source and storing ray hits on diffuse objects in illumination tables <ref> [Arv85] </ref>. The soft light missing from the ray tracing calculations can be estimated by radiosity. Since this radiosity solution is used for only soft lighting, a very coarse environment partitioning can be used. <p> This type of lighting is calculated using Arvo's method of simulating light paths by sending illumina tion rays from the light source <ref> [Arv85] </ref>. In Arvo's method, each light source emits some large number of rays. Each ray represents a fraction of the outgoing energy that will be transported to other surfaces. Arvo accomplishes this by defining a standard texture map on each diffuse surface.
Reference: [BFP83] <author> William E. Brackett, Wayne L. Fink, and William Pierpoint. </author> <title> Interior point-by-point calculations in obstructed spaces. </title> <journal> Journal of the Illumination Engineering Society, </journal> <pages> pages 14-25, </pages> <month> October </month> <year> 1983. </year>
Reference-contexts: Rays can be sent between all pairs 4 The partitioning of the disk is required for lens effects of distributed ray tracing. The partitioning of the disk on the right is preferred because the zones have better locality. This is the central idea of designing partioning schemes. of surfaces <ref> [BFP83, NN85, WEH89] </ref>, or can be sent in a cosine distribution from each surface toward all un-obscured surfaces [MBG86, Mal88, SP89]. The second technique has the advantage of allowing indirect transport of specular surfaces, so it is the method of choice for scenes containing mirrors.
Reference: [Bli78] <author> James Blinn. </author> <title> Simulation of wrinkled surfaces. </title> <journal> Computer Graphics, </journal> <volume> 12(3) </volume> <pages> 286-292, </pages> <month> August </month> <year> 1978. </year> <booktitle> ACM Siggraph '78 Conference Proceedings. </booktitle>
Reference-contexts: Fewer shadow rays than viewing rays were required for this picture because there is no direct lighting on the ceiling, so none of the viewing rays hitting the ceiling generated shadow rays. has been added to the walls to simulate the depressions in the mortar between the blocks <ref> [Bli78] </ref>. This figure illustrates both the strengths and weaknesses of bump mapping; the back wall looks fairly good, while the left wall is close enough to reveal the painted-on quality of the bump map.
Reference: [CCWG88] <author> Michael F. Cohen, Shenchang Eric Chen, John R. Wallace, and Donald P. Green-berg. </author> <title> A progressive refinement approach to fast radiosity image generation. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 75-84, </pages> <month> August </month> <year> 1988. </year> <booktitle> ACM Siggraph '88 Conference Proceedings. </booktitle>
Reference-contexts: The second technique has the advantage of allowing indirect transport of specular surfaces, so it is the method of choice for scenes containing mirrors. Recently, progressive refinement techniques have been used to implicitly solve the linear equations of radiance <ref> [CCWG88, SP89] </ref>. This approach avoids the O (n 2 ) storage requirement of explicit techniques. The progressive refinement method can be thought of as straightforward transport simulation.
Reference: [CG85] <author> Michael F. Cohen and Donald P. Green-berg. </author> <title> The hemi-cube: a radiosity solution for complex environments. </title> <journal> Computer Graphics, </journal> <volume> 19(3) </volume> <pages> 31-40, </pages> <month> July </month> <year> 1985. </year> <booktitle> ACM Siggraph '85 Conference Proceedings. </booktitle>
Reference-contexts: This is done by shooting from each light source in turn and then setting i to zero. Finally, the patch radiances must be transported to patch vertices as described in <ref> [CG85] </ref>. 3.3 Viewing and Direct Lighting Direct lighting is calculated in the final, viewing, stage. The viewing rays operate as in a standard distributed ray tracer [Coo86], except that the radiosity and illumination map values are substituted for the conventional ambient term.
Reference: [CGIB86] <author> Micheal F. Cohen, Donald P. Greenberg, David S. Immel, and Philip J. Brock. </author> <title> An efficient radioisty approach for realistic image synthesis. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 6(2) </volume> <pages> 26-35, </pages> <year> 1986. </year>
Reference-contexts: This paper extends the idea of the separate calculation of direct and indirect lighting to the calculation of hard and soft lighting, where hard lighting contains detail and soft lighting changes slowly. This is similar to the idea of patch and element substructuring of Radiosity <ref> [CGIB86] </ref>, but also allows fine detail caused by hard indirect lighting such as the lighting that produces caustics. This is achieved with a three pass method that synthesizes conventional ray tracing, illumination ray tracing, and radiosity. <p> The detail producing lighting components are calculated using viewing and illumination rays. The lower frequency diffuse lighting is calculated by a radios-ity method. This separation follows the spirit of sub-structuring in conventional radiosity <ref> [CGIB86] </ref>. Direct lighting calculations allow the use of bump maps and are minimized by limiting the total number of shadow rays. The conversion of a standard ray tracer to follow this algorithm is fairly easy.
Reference: [Coo86] <author> Robert L. Cook. </author> <title> Stochastic sampling in computer graphics. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 5(1) </volume> <pages> 51-72, </pages> <month> January </month> <year> 1986. </year>
Reference-contexts: Since the edges of specular objects should not be ignored by illumination rays, illumination rays are generated in zones where feeler rays hit specular objects, as well in adjacent zones (Figure 1). Stratified sampling <ref> [Coo86] </ref> is used to choose both feeler and illumination ray directions. The light sources are assumed to be diffuse and the hemisphere of directions is partitioned into zones in a diffuse distribution. This partitioning is achieved by mapping a partitioned unit square to the hemisphere [WRC88]. <p> Finally, the patch radiances must be transported to patch vertices as described in [CG85]. 3.3 Viewing and Direct Lighting Direct lighting is calculated in the final, viewing, stage. The viewing rays operate as in a standard distributed ray tracer <ref> [Coo86] </ref>, except that the radiosity and illumination map values are substituted for the conventional ambient term. The only change made in this algorithm is in the treatment of shadow rays, described in the remainder of this section. <p> The average of the samples will be four times the ten light contributions divided by the twenty samples, or four light contributions, as expected. The random values used to generate the shadow rays are stratified using uncorrelated jittering as described by Cook <ref> [Coo86] </ref>. 4 Results The algorithm of Section 3 was implemented in C++ on an Encore Multimax. The primitives used are polygonal meshes. Each mesh made of a diffuse material has an associated illumination map with user set resolution.
Reference: [CPC84] <author> Robert L. Cook, Thomas Porter, and Loren Carpenter. </author> <title> Distributed ray tracing. </title> <journal> Computer Graphics, </journal> <volume> 18(4) </volume> <pages> 165-174, </pages> <month> July </month> <year> 1984. </year> <booktitle> ACM Siggraph '84 Conference Proceedings. </booktitle>
Reference-contexts: The illumination rays can generate fine patterns such as those inside the metal ring shown in Figure 3. If there are imperfect mirrors (such as brushed steel) in the scene, illumination rays should be reflected probabilistically. This is similar to the reflection of viewing rays in distributed ray tracing <ref> [CPC84] </ref>, and produces noise in the illumination maps which can only be reduced by sending more illumination rays. Figure 4 shows four plates of variable smoothness and the reflection they cast on a diffuse surface. The same number of rays are shot at each plate. <p> This means each viewing ray that eventually reaches a diffuse surface should generate approximately one shadow ray. In traditional distributed ray tracing, shadow rays are sent to random points on each light source <ref> [CPC84] </ref>. Instead one ray can be sent to a random point chosen from all the light source surfaces. First a target selection probability is assigned to each source. This probability is proportional to the energy coming from the light source to the intersection point as calculated by Equation 2.
Reference: [GTG84] <author> Cindy M. Goral, Kenneth E. Torrance, and Donald P. Greenberg. </author> <title> Modeling the interaction of light between diffuse surfaces. </title> <journal> Computer Graphics, </journal> <volume> 18(4) </volume> <pages> 213-222, </pages> <month> July </month> <year> 1984. </year> <booktitle> ACM Siggraph '84 Conference Proceedings. </booktitle>
Reference-contexts: The first approach is based on ray tracing (point sampling) techniques made popular by Turner Whit-ted's landmark 1980 paper [Whi80]. The second approach, radiosity methods, is based on zonal techniques borrowed from the heat transfer literature <ref> [GTG84] </ref>. The results produced by both techniques suffer from discretization errors; ray tracing uses discrete sample points, and zonal methods partition the environment into finite patches. Recent work has combined ray tracing and zonal techniques [WCG87, SP89].
Reference: [HG86] <author> Eric A. Haines and Donald P. Greenberg. </author> <title> The light buffer: A ray tracer shadow testing accelerator. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 6(9) </volume> <pages> 6-16, </pages> <year> 1986. </year>
Reference-contexts: This is computationally expensive if the number of light sources is large. The shadow ray intersection test is unusual in that it does not matter which object is hit by the ray. This observation led to the use of the light-buffer, which optimized shadow testing for point light sources <ref> [HG86] </ref>. Another way to optimize shadow testing is to reduce the total number of shadow rays as suggested by Kajiya [Kaj86]. This second method is employed in this paper because it preserves the ability to produce soft shadows, and keeps the algorithm simple.
Reference: [Kaj86] <author> James T. Kajiya. </author> <title> The rendering equation. </title> <journal> Computer Graphics, </journal> <volume> 20(4) </volume> <pages> 143-150, </pages> <month> August </month> <year> 1986. </year> <booktitle> ACM Siggraph '86 Conference Proceedings. </booktitle>
Reference-contexts: This observation led to the use of the light-buffer, which optimized shadow testing for point light sources [HG86]. Another way to optimize shadow testing is to reduce the total number of shadow rays as suggested by Kajiya <ref> [Kaj86] </ref>. This second method is employed in this paper because it preserves the ability to produce soft shadows, and keeps the algorithm simple. In a realistic ray tracer many viewing rays are sent through each pixel, so a less accurate direct lighting estimate for each viewing ray is acceptable.
Reference: [Mal88] <author> Thomas J. V. Malley. </author> <title> A shading method for computer generated images. </title> <type> Master's thesis, </type> <institution> University of Utah, </institution> <month> June </month> <year> 1988. </year>
Reference-contexts: The partitioning of the disk on the right is preferred because the zones have better locality. This is the central idea of designing partioning schemes. of surfaces [BFP83, NN85, WEH89], or can be sent in a cosine distribution from each surface toward all un-obscured surfaces <ref> [MBG86, Mal88, SP89] </ref>. The second technique has the advantage of allowing indirect transport of specular surfaces, so it is the method of choice for scenes containing mirrors. Recently, progressive refinement techniques have been used to implicitly solve the linear equations of radiance [CCWG88, SP89].
Reference: [MBG86] <author> Gregory M. Maxwell, Michael J. Bailey, and Victor W. Goldschmidt. </author> <title> Calculation of the radiation configuration factor using ray casting. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 18(7) </volume> <pages> 371-379, </pages> <month> September </month> <year> 1986. </year>
Reference-contexts: The partitioning of the disk on the right is preferred because the zones have better locality. This is the central idea of designing partioning schemes. of surfaces [BFP83, NN85, WEH89], or can be sent in a cosine distribution from each surface toward all un-obscured surfaces <ref> [MBG86, Mal88, SP89] </ref>. The second technique has the advantage of allowing indirect transport of specular surfaces, so it is the method of choice for scenes containing mirrors. Recently, progressive refinement techniques have been used to implicitly solve the linear equations of radiance [CCWG88, SP89].
Reference: [NN85] <author> Tomoyuki Nishita and Eihachiro Nakamae. </author> <title> Continuous tone representation of three-dimensional objects taking account of shadows and interreflection. </title> <journal> Computer Graphics, </journal> <volume> 19(3) </volume> <pages> 23-30, </pages> <month> July </month> <year> 1985. </year> <booktitle> ACM Siggraph '85 Conference Proceedings. </booktitle>
Reference-contexts: Rays can be sent between all pairs 4 The partitioning of the disk is required for lens effects of distributed ray tracing. The partitioning of the disk on the right is preferred because the zones have better locality. This is the central idea of designing partioning schemes. of surfaces <ref> [BFP83, NN85, WEH89] </ref>, or can be sent in a cosine distribution from each surface toward all un-obscured surfaces [MBG86, Mal88, SP89]. The second technique has the advantage of allowing indirect transport of specular surfaces, so it is the method of choice for scenes containing mirrors.
Reference: [RT87] <author> Holly E. Rushmeier and Kenneth E. Tor-rance. </author> <title> The zonal method for calculating light intensities in the presence of a participating medium. </title> <journal> Computer Graphics, </journal> <volume> 21(4) </volume> <pages> 293-302, </pages> <month> July </month> <year> 1987. </year> <booktitle> ACM Siggraph '87 Conference Proceedings. </booktitle>
Reference-contexts: The resolution of the illumination maps and size of ra-diosity patches has an effect on image run time and quality. These parameters are not selected automatically, so some experience is needed to use the algorithm. Possible extensions to the algorithm include the addition of an isotropically scattering medium <ref> [RT87] </ref>. The medium could be broken into elements and treated in the radiosity step.
Reference: [Rus88] <author> Holly E. Rushmeier. </author> <title> Realistic Image Synthesis for Scenes with Radiatively Participating Media. </title> <type> PhD thesis, </type> <institution> Cornell University, </institution> <month> May </month> <year> 1988. </year>
Reference-contexts: Both Rushmeier and Ward et al. have separated direct and indirect lighting to avoid high levels of discretization associated with pure zonal methods <ref> [Rus88, WRC88] </ref>. This paper extends the idea of the separate calculation of direct and indirect lighting to the calculation of hard and soft lighting, where hard lighting contains detail and soft lighting changes slowly.
Reference: [SP89] <author> Francois Sillion and Claude Puech. </author> <title> A general two-pass method integrating specular and diffuse reflection. </title> <journal> Computer Graphics, </journal> <volume> 23(3) </volume> <pages> 335-344, </pages> <month> July </month> <year> 1989. </year> <booktitle> ACM Siggraph '89 Conference Proceedings. </booktitle>
Reference-contexts: The results produced by both techniques suffer from discretization errors; ray tracing uses discrete sample points, and zonal methods partition the environment into finite patches. Recent work has combined ray tracing and zonal techniques <ref> [WCG87, SP89] </ref>. This combination allows the zonal methods to be used where they perform best, and ray tracing to be used to handle mirrors, where the zonal methods break down. <p> The partitioning of the disk on the right is preferred because the zones have better locality. This is the central idea of designing partioning schemes. of surfaces [BFP83, NN85, WEH89], or can be sent in a cosine distribution from each surface toward all un-obscured surfaces <ref> [MBG86, Mal88, SP89] </ref>. The second technique has the advantage of allowing indirect transport of specular surfaces, so it is the method of choice for scenes containing mirrors. Recently, progressive refinement techniques have been used to implicitly solve the linear equations of radiance [CCWG88, SP89]. <p> The second technique has the advantage of allowing indirect transport of specular surfaces, so it is the method of choice for scenes containing mirrors. Recently, progressive refinement techniques have been used to implicitly solve the linear equations of radiance <ref> [CCWG88, SP89] </ref>. This approach avoids the O (n 2 ) storage requirement of explicit techniques. The progressive refinement method can be thought of as straightforward transport simulation.
Reference: [Tho86] <author> Spencer W. Thomas. </author> <title> Dispersive refraction in ray tracing. </title> <journal> Visual Computer, </journal> <volume> 2 </volume> <pages> 3-8, </pages> <year> 1986. </year>
Reference-contexts: Possible extensions to the algorithm include the addition of an isotropically scattering medium [RT87]. The medium could be broken into elements and treated in the radiosity step. Dispersion could also be added as done by Thomas <ref> [Tho86] </ref>. 6 Acknowledgements Thanks to Bill Kubitz (advisor for this project), Holly Rushmeier, Jean Buckley, Allan Tuchman, Greg Rogers, Kelvin Sung, and Bill Brown for helpful comments on the paper. Thanks also to the reviewers for their frank and detailed suggestions.
Reference: [WCG87] <author> John R. Wallace, Michael F. Cohen, and Donald P. Greenberg. </author> <title> A two-pass solution to the rendering equation: a synthesis of ray tracing and radiosity methods. </title> <journal> Computer Graphics, </journal> <volume> 21(4) </volume> <pages> 311-320, </pages> <month> July </month> <year> 1987. </year> <booktitle> ACM Siggraph '87 Conference Proceedings. </booktitle>
Reference-contexts: The results produced by both techniques suffer from discretization errors; ray tracing uses discrete sample points, and zonal methods partition the environment into finite patches. Recent work has combined ray tracing and zonal techniques <ref> [WCG87, SP89] </ref>. This combination allows the zonal methods to be used where they perform best, and ray tracing to be used to handle mirrors, where the zonal methods break down.
Reference: [WEH89] <author> John R. Wallace, Kells A. Elmquist, and Eric A. Haines. </author> <title> A ray tracing algorithm for sphere and circle. tion rays. progressive radiosity. </title> <journal> Computer Graphics, </journal> <volume> 23(3) </volume> <pages> 335-344, </pages> <month> July </month> <year> 1989. </year> <booktitle> ACM Siggraph '89 Conference Proceedings. </booktitle>
Reference-contexts: Rays can be sent between all pairs 4 The partitioning of the disk is required for lens effects of distributed ray tracing. The partitioning of the disk on the right is preferred because the zones have better locality. This is the central idea of designing partioning schemes. of surfaces <ref> [BFP83, NN85, WEH89] </ref>, or can be sent in a cosine distribution from each surface toward all un-obscured surfaces [MBG86, Mal88, SP89]. The second technique has the advantage of allowing indirect transport of specular surfaces, so it is the method of choice for scenes containing mirrors.
Reference: [Whi80] <author> Turner Whitted. </author> <title> An improved illumination model for shaded display. </title> <journal> Communications of the ACM, </journal> <volume> 23(6) </volume> <pages> 343-349, </pages> <month> June </month> <year> 1980. </year>
Reference-contexts: 1 Introduction The quest for accurate lighting models in computer graphics has taken two very different approaches in the 1980s. The first approach is based on ray tracing (point sampling) techniques made popular by Turner Whit-ted's landmark 1980 paper <ref> [Whi80] </ref>. The second approach, radiosity methods, is based on zonal techniques borrowed from the heat transfer literature [GTG84]. The results produced by both techniques suffer from discretization errors; ray tracing uses discrete sample points, and zonal methods partition the environment into finite patches.
Reference: [WRC88] <author> Gregory J. Ward, Francis M. Rubinstein, and Robert D. </author> <title> Clear. A ray tracing solution for diffuse interreflection. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 85-92, </pages> <month> August </month> <year> 1988. </year> <booktitle> ACM Siggraph '88 Conference Proceedings. </booktitle> <month> roughness. </month> <title> shadow ray is sent for each viewing ray. Sixteen viewing rayys are shot for each pixel. calculation of direct lighting allows directional shading on the bump maps. </title>
Reference-contexts: Both Rushmeier and Ward et al. have separated direct and indirect lighting to avoid high levels of discretization associated with pure zonal methods <ref> [Rus88, WRC88] </ref>. This paper extends the idea of the separate calculation of direct and indirect lighting to the calculation of hard and soft lighting, where hard lighting contains detail and soft lighting changes slowly. <p> Stratified sampling [Coo86] is used to choose both feeler and illumination ray directions. The light sources are assumed to be diffuse and the hemisphere of directions is partitioned into zones in a diffuse distribution. This partitioning is achieved by mapping a partitioned unit square to the hemisphere <ref> [WRC88] </ref>. The top of Figure 2 shows an initial partition into 36 zones, and a further subdivision of three of these zones. This illustrates the initial partitioning for feeler rays, and a finer partitioning for the actual illumination rays.
References-found: 22

