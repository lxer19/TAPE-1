URL: ftp://ftp.csd.abdn.ac.uk/pub/apreece/ECAI96/Ligeza.ps
Refering-URL: http://www.csd.abdn.ac.uk/~apreece/ECAI96/workshop.html
Root-URL: 
Title: Logical Support for Design of Rule-Based Systems. Reliability and Quality Issues  
Author: Antoni Lige za 
Abstract: In this paper selected logical foundations for design of reliable and efficient rule-based systems are investigated. The problems of logical analysis of theoretical properties of rule-based systems are considered. It is proposed to replace the verification of selected properties by assuring quality and reliability during the design stage of rule-based systems. Three basic properties, i.e. completeness, determinism and minimal number of rules are investigated and some ideas towards practical solutions are put forward. The formal base for this investigation is a logical analysis based on a single inference rule, i.e. backward dual resolution in generalized form. The design process itself is based on application of the presented reasoning rule, and a device for structuring the design process in the form of a special semantic tree ( -tree). The important characteristics, i.e. completeness, determinism and minimal number of rules of AI systems in context of reliability, safety and efficiency are discussed and are shown to cover several other issues. Theoretical results concerning the methodology of designing rule-based system assuring satisfaction of the above properties are given, and concluding remarks are enclosed. The proposed logical and methodological bases seem to be most suitable for rule-based control systems, i.e. one-step forward chaining ones. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E.P. Andert, </author> <title> Integrated knowledge-basedsystem design and validation for solving problems in uncertain environments, </title> <journal> Int. J. of Man-Machine Studies, </journal> <volume> 36, </volume> <pages> 357-373, </pages> <year> (1992). </year>
Reference-contexts: Several theoretical properties of rule-based systems seem to be worth investigating so as to provide a deeper theoretical insight into the understanding of their capacities and assure their satisfactory performance, i.e. reliability and quality <ref> [1, 7, 17, 18, 21, 23] </ref>. Problems listed below become still more important in case of rule-based methodology applied to on-line, real-time control of dynamic systems (i.e. intelligent control, 1 LAAS du CNRS, 7 Av. du Colonel Roche, 31077 Toulouse Cedex, France, e mail: ligeza@laas.laas.fr. <p> In practice, approaches to solving problems like the ones above refer to verification, validation and testing of knowledge bases, and despite their importance, they are rather reluctantly approached in current AI research. Some exceptions are papers <ref> [1, 2, 4, 17, 18, 21, 23, 24, 25, 26] </ref>. An interesting solution is used in the KHEOPS system [6]; its main idea consists in compiling the set of rules into a decision-tree like structure. <p> In literature <ref> [1, 18, 23] </ref> there are two basic approaches to completeness verification. The most popular one consists in exhaustive enumeration of possible input data and systematic inspection of a given set of rules versus a table containing all possible parameters and conditions combinations. <p> The most popular one consists in exhaustive enumeration of possible input data and systematic inspection of a given set of rules versus a table containing all possible parameters and conditions combinations. This kind of approach can be called an exhaustive completeness check <ref> [1] </ref>. Some examples of this approach are presented in [18, 23]. The other approach consists in a run-time validation of the expert system with use of selected set of test cases [24]. Selected test problems should also provide an exhaustive list of possible cases. <p> The other approach consists in a run-time validation of the expert system with use of selected set of test cases [24]. Selected test problems should also provide an exhaustive list of possible cases. Some other approaches of this kind are also discussed in <ref> [1] </ref>. In [10, 13, 14] a more general, first-order logic based approach is presented. The approach does not require exhaustive enumeration and testing of possible cases; instead, a proof-like procedure based on backward dual resolution is put forward. <p> A graphical interpretation of determinism would consists on observing empty intersection of the sets of states described by precondition formulae for any two different rules. Two specific cases of nondeterministic rules are usually of special interest <ref> [1, 18, 23] </ref>, i.e. redundant (identical) and subsumed ones. Obviously, both of the cases are eliminated if indeterminism is dealt with. Subsumed rules can be discovered with direct use of bd-resolution. <p> Obviously, both of the cases are eliminated if indeterminism is dealt with. Subsumed rules can be discovered with direct use of bd-resolution. Note that having solved the problem of determinism, two other following problems, i.e. the one of conflict and inconsistency <ref> [1, 23] </ref> are also solved. This is so since no two rules can be applied at a time; thus no rules with conflicting conclusions/actions exist.
Reference: [2] <editor> J. Cardenosa, and P. Meseguer. (Eds.), </editor> <booktitle> Proceedings of EUROVAV'93 European Symposium on the Validation and Verification of Knowledge Based Systems, </booktitle> <institution> University of the Balearic Islands, Palma de Majorca, </institution> <year> (1993). </year>
Reference-contexts: In practice, approaches to solving problems like the ones above refer to verification, validation and testing of knowledge bases, and despite their importance, they are rather reluctantly approached in current AI research. Some exceptions are papers <ref> [1, 2, 4, 17, 18, 21, 23, 24, 25, 26] </ref>. An interesting solution is used in the KHEOPS system [6]; its main idea consists in compiling the set of rules into a decision-tree like structure.
Reference: [3] <author> C.-L. Chang and R.C.T. Lee, </author> <title> Symbolic Logic and Mechanical Theorem Proving. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1973. </year>
Reference-contexts: Of course, this procedure can be turn to several-level ones as well. 4 LOGICAL FOUNDATIONS The basic knowledge representation language used for presentation of the ideas concerning design of complete rule-based systems is assumed to be classical first-order predicate calculus, as presented e.g. in <ref> [3, 5] </ref>.
Reference: [4] <author> B.J. Cragun and H.J. Steudel, </author> <title> A decision-table-based processor for checking completeness and consistency in rule-based expert systems, </title> <journal> Int. J.of Man-Machine Studies, </journal> <volume> 26, </volume> <pages> 633-648, </pages> <year> (1987). </year>
Reference-contexts: In practice, approaches to solving problems like the ones above refer to verification, validation and testing of knowledge bases, and despite their importance, they are rather reluctantly approached in current AI research. Some exceptions are papers <ref> [1, 2, 4, 17, 18, 21, 23, 24, 25, 26] </ref>. An interesting solution is used in the KHEOPS system [6]; its main idea consists in compiling the set of rules into a decision-tree like structure.
Reference: [5] <editor> M.R. Genesereth, and N. J. Nilsson: </editor> <booktitle> Logical foundations of artificial intelligence, </booktitle> <publisher> M.Kaufmann Publ. Inc., </publisher> <address> Los Altos, California, </address> <year> (1987). </year>
Reference-contexts: Of course, this procedure can be turn to several-level ones as well. 4 LOGICAL FOUNDATIONS The basic knowledge representation language used for presentation of the ideas concerning design of complete rule-based systems is assumed to be classical first-order predicate calculus, as presented e.g. in <ref> [3, 5] </ref>.
Reference: [6] <institution> J.-P. Gouyon, KHEOPS Users's Guide. Report of Laboratoire d'Automatique et d'Analyse des Systemes, No. </institution> <address> 92503, Toulouse, France, </address> <year> (1994). </year>
Reference-contexts: Some exceptions are papers [1, 2, 4, 17, 18, 21, 23, 24, 25, 26]. An interesting solution is used in the KHEOPS system <ref> [6] </ref>; its main idea consists in compiling the set of rules into a decision-tree like structure.
Reference: [7] <editor> T.J. Laffey et al, </editor> <booktitle> Real-time knowledge-based systems, AI Magazine, Spring, </booktitle> <pages> 27-45, </pages> <year> (1988). </year>
Reference-contexts: Several theoretical properties of rule-based systems seem to be worth investigating so as to provide a deeper theoretical insight into the understanding of their capacities and assure their satisfactory performance, i.e. reliability and quality <ref> [1, 7, 17, 18, 21, 23] </ref>. Problems listed below become still more important in case of rule-based methodology applied to on-line, real-time control of dynamic systems (i.e. intelligent control, 1 LAAS du CNRS, 7 Av. du Colonel Roche, 31077 Toulouse Cedex, France, e mail: ligeza@laas.laas.fr. <p> On leave from: Institute of Automatics AGH, al. Mickiewicza 30, 30-059 Krakw, Poland; e-mail: ali@ia.agh.edu.pl knowledge-based control) <ref> [7, 24] </ref>, especially if safety issues are to be taken into account.
Reference: [8] <author> A. Lige ` za, </author> <title> Logical foundations for knowledge-based control systems. Knowledge representation, reasoning and theoretical properties. </title> <journal> Scientific Bulletins of AGH, </journal> <volume> No. 1529, Automatics 63, </volume> <pages> 144 pp., </pages> <note> Cracow, (1993). (A former version also as: </note> <institution> Report of Labora-toire d'Automatique et d'Analyse des Systemes, No. </institution> <address> 92269, Toulouse, France, </address> <year> (1992)). </year>
Reference-contexts: Selected problems in the context of rough sets approach are discussed in [20]. A logical approach based on backward dual resolution and applicable in case of predicate logic is presented in <ref> [8] </ref> and further papers including [9, 10, 11, 13, 14]. In [10, 11] and more thoroughly in [13, 14] we have investigated and developed a logical support for verification of selected theoretical properties of rule-based systems, including completeness and determinism. <p> The construction of the tree and its properties are based on the idea of a sound and complete rule of logical reasoning backward dual resolution (or bd-resolution, for short) <ref> [8, 9, 10, 11, 13] </ref>. The organization of this paper is as follows. First the principle requirements of interest to be satisfied by rule-based control systems are put forward. Then a simple example of a possible design process with use of the idea of -tree is presented. <p> A formula representing state is a (theoretical) construction describing all the facts true in a specific physical state represented <ref> [8, 14] </ref>. Many further details are given in [9, 13, 14] and in [10]. For the sake of considering an engineering" approach, we shall consider some assumed set of intended interpretations to be denoted with I. This, in fact, means an incomplete specification of interpretation. <p> In other words, the formulae defining preconditions of the rules cover the predefined set of possible input cases; this case is also referred to as -completeness. For a more detailed discussion and other definitions of completeness see also <ref> [8, 10, 14] </ref>. Note that in both of the above situations the check can be done with use of backward dual resolution. <p> It is shown that a single inference rule - i.e. bd-resolution can constitute a tool for synthesis of complete and deterministic systems, and for rule reduction. Further problems such as redundancy, subsumption, conflict and inconsistency can be dealt with as well within the proposed framework <ref> [8, 16, 11] </ref>. The -tree provides a basic tool for design of reliable rule-based control systems in the sense of satisfaction of certain criteria; however, obviously it is not necessary to design completely deterministic systems.
Reference: [9] <author> A. Lige ` za, </author> <title> Backward dual resolution. Direct proving of generalization, A chapter in: </title> <editor> H. Jaakkola et al (Eds.) </editor> <booktitle> Information Modelling and Knowledge Bases V: Principles and formal techniques, </booktitle> <publisher> IOS Press, Amsterdam, </publisher> <pages> 336-349, </pages> <year> (1994). </year>
Reference-contexts: Selected problems in the context of rough sets approach are discussed in [20]. A logical approach based on backward dual resolution and applicable in case of predicate logic is presented in [8] and further papers including <ref> [9, 10, 11, 13, 14] </ref>. In [10, 11] and more thoroughly in [13, 14] we have investigated and developed a logical support for verification of selected theoretical properties of rule-based systems, including completeness and determinism. <p> The construction of the tree and its properties are based on the idea of a sound and complete rule of logical reasoning backward dual resolution (or bd-resolution, for short) <ref> [8, 9, 10, 11, 13] </ref>. The organization of this paper is as follows. First the principle requirements of interest to be satisfied by rule-based control systems are put forward. Then a simple example of a possible design process with use of the idea of -tree is presented. <p> In case of other (extended) languages, the notion of logical entailment under assumed interpretations (j= I ) can be replaced by the idea of generalization <ref> [9, 13] </ref>; for intuition, a more general formula (or any other symbolic expression) describes a bigger set of states of the considered dynamic system. <p> A formula representing state is a (theoretical) construction describing all the facts true in a specific physical state represented [8, 14]. Many further details are given in <ref> [9, 13, 14] </ref> and in [10]. For the sake of considering an engineering" approach, we shall consider some assumed set of intended interpretations to be denoted with I. This, in fact, means an incomplete specification of interpretation. <p> The particular forms of bd-resolution inference rule are given in <ref> [9, 10] </ref>. Below we restate a version of generalized bd-resolution for further use (for simplicity we omit the discussion of using substitutions; this can also be covered by appropriate use of variable assignment). <p> Theorem 1 (Soundness of generalized bd-resolution) Let Y be a bd-resolvent defined by (1). Then Y j= I Y 1 _ Y 2 _ : : : _ Y j . The idea of proof is analogous to the case of classical resolution; for details see also <ref> [9, 10] </ref>. The bd-resolution method presented in this work is analogous (dual) to resolution method. However, instead of checking unsatisfi-ability of a set of clauses we rather try to prove validity of a given formula in disjunctive normal form.
Reference: [10] <author> A. Lige ` za, </author> <title> A note on backward dual resolution and its application to proving completeness of rule-based systems, </title> <editor> In: R.Bajcsy ed., </editor> <booktitle> Proceedings of the 13-th IJCAI, </booktitle> <address> Chambery, France. </address> <publisher> Morgan Kaufmann Publ. Inc., Vol.1, </publisher> <pages> 132-137, </pages> <year> (1993). </year>
Reference-contexts: Selected problems in the context of rough sets approach are discussed in [20]. A logical approach based on backward dual resolution and applicable in case of predicate logic is presented in [8] and further papers including <ref> [9, 10, 11, 13, 14] </ref>. In [10, 11] and more thoroughly in [13, 14] we have investigated and developed a logical support for verification of selected theoretical properties of rule-based systems, including completeness and determinism. <p> Selected problems in the context of rough sets approach are discussed in [20]. A logical approach based on backward dual resolution and applicable in case of predicate logic is presented in [8] and further papers including [9, 10, 11, 13, 14]. In <ref> [10, 11] </ref> and more thoroughly in [13, 14] we have investigated and developed a logical support for verification of selected theoretical properties of rule-based systems, including completeness and determinism. A recent work [16] attempts at summarizing those results and covering some further problems, including rule-base reduction. <p> The construction of the tree and its properties are based on the idea of a sound and complete rule of logical reasoning backward dual resolution (or bd-resolution, for short) <ref> [8, 9, 10, 11, 13] </ref>. The organization of this paper is as follows. First the principle requirements of interest to be satisfied by rule-based control systems are put forward. Then a simple example of a possible design process with use of the idea of -tree is presented. <p> A formula representing state is a (theoretical) construction describing all the facts true in a specific physical state represented [8, 14]. Many further details are given in [9, 13, 14] and in <ref> [10] </ref>. For the sake of considering an engineering" approach, we shall consider some assumed set of intended interpretations to be denoted with I. This, in fact, means an incomplete specification of interpretation. <p> The particular forms of bd-resolution inference rule are given in <ref> [9, 10] </ref>. Below we restate a version of generalized bd-resolution for further use (for simplicity we omit the discussion of using substitutions; this can also be covered by appropriate use of variable assignment). <p> Theorem 1 (Soundness of generalized bd-resolution) Let Y be a bd-resolvent defined by (1). Then Y j= I Y 1 _ Y 2 _ : : : _ Y j . The idea of proof is analogous to the case of classical resolution; for details see also <ref> [9, 10] </ref>. The bd-resolution method presented in this work is analogous (dual) to resolution method. However, instead of checking unsatisfi-ability of a set of clauses we rather try to prove validity of a given formula in disjunctive normal form. <p> The other approach consists in a run-time validation of the expert system with use of selected set of test cases [24]. Selected test problems should also provide an exhaustive list of possible cases. Some other approaches of this kind are also discussed in [1]. In <ref> [10, 13, 14] </ref> a more general, first-order logic based approach is presented. The approach does not require exhaustive enumeration and testing of possible cases; instead, a proof-like procedure based on backward dual resolution is put forward. <p> In other words, the formulae defining preconditions of the rules cover the predefined set of possible input cases; this case is also referred to as -completeness. For a more detailed discussion and other definitions of completeness see also <ref> [8, 10, 14] </ref>. Note that in both of the above situations the check can be done with use of backward dual resolution.
Reference: [11] <author> A. Lige ` za, </author> <title> A note on logical analysis of rule-based control systems, </title> <booktitle> Proceedings of the 1993 IEEE International Symposium on Intelligent Control, </booktitle> <address> Chicago, USA, 439-444, </address> <year> 1993. </year>
Reference-contexts: Selected problems in the context of rough sets approach are discussed in [20]. A logical approach based on backward dual resolution and applicable in case of predicate logic is presented in [8] and further papers including <ref> [9, 10, 11, 13, 14] </ref>. In [10, 11] and more thoroughly in [13, 14] we have investigated and developed a logical support for verification of selected theoretical properties of rule-based systems, including completeness and determinism. <p> Selected problems in the context of rough sets approach are discussed in [20]. A logical approach based on backward dual resolution and applicable in case of predicate logic is presented in [8] and further papers including [9, 10, 11, 13, 14]. In <ref> [10, 11] </ref> and more thoroughly in [13, 14] we have investigated and developed a logical support for verification of selected theoretical properties of rule-based systems, including completeness and determinism. A recent work [16] attempts at summarizing those results and covering some further problems, including rule-base reduction. <p> The construction of the tree and its properties are based on the idea of a sound and complete rule of logical reasoning backward dual resolution (or bd-resolution, for short) <ref> [8, 9, 10, 11, 13] </ref>. The organization of this paper is as follows. First the principle requirements of interest to be satisfied by rule-based control systems are put forward. Then a simple example of a possible design process with use of the idea of -tree is presented. <p> It is shown that a single inference rule - i.e. bd-resolution can constitute a tool for synthesis of complete and deterministic systems, and for rule reduction. Further problems such as redundancy, subsumption, conflict and inconsistency can be dealt with as well within the proposed framework <ref> [8, 16, 11] </ref>. The -tree provides a basic tool for design of reliable rule-based control systems in the sense of satisfaction of certain criteria; however, obviously it is not necessary to design completely deterministic systems.
Reference: [12] <author> A. Lige ` za, </author> <title> An approach to logical support for design of complete rule-based control systems, </title> <journal> Report of the Institute of Automatics AGH, </journal> <volume> No. 39, </volume> <pages> Cracow, </pages> <note> (1994) (available via e-mail on request). </note>
Reference-contexts: Moreover, a local minimization (for reduction of the number of rules) is supported by the approach proposed here in a straightforward way. An initial approach concerning design of complete rule-based control systems was first presented in <ref> [12, 15] </ref>; this approach, constituting the basis for the presented ideas, is developed here to cover some further issues, especially further possibilities of reducing the design process, assuring determinism and reduction of the rules. <p> The proof is by induction with respect to the tree size <ref> [12] </ref>.
Reference: [13] <author> A. Lige ` za, </author> <title> Logical foundations for knowledge-based control systems. Part I: Language and reasoning, </title> <journal> Archives of Control Sciences, </journal> <volume> 3, </volume> <pages> 3-4, 289-315, </pages> <year> (1994). </year>
Reference-contexts: Selected problems in the context of rough sets approach are discussed in [20]. A logical approach based on backward dual resolution and applicable in case of predicate logic is presented in [8] and further papers including <ref> [9, 10, 11, 13, 14] </ref>. In [10, 11] and more thoroughly in [13, 14] we have investigated and developed a logical support for verification of selected theoretical properties of rule-based systems, including completeness and determinism. <p> Selected problems in the context of rough sets approach are discussed in [20]. A logical approach based on backward dual resolution and applicable in case of predicate logic is presented in [8] and further papers including [9, 10, 11, 13, 14]. In [10, 11] and more thoroughly in <ref> [13, 14] </ref> we have investigated and developed a logical support for verification of selected theoretical properties of rule-based systems, including completeness and determinism. A recent work [16] attempts at summarizing those results and covering some further problems, including rule-base reduction. <p> The construction of the tree and its properties are based on the idea of a sound and complete rule of logical reasoning backward dual resolution (or bd-resolution, for short) <ref> [8, 9, 10, 11, 13] </ref>. The organization of this paper is as follows. First the principle requirements of interest to be satisfied by rule-based control systems are put forward. Then a simple example of a possible design process with use of the idea of -tree is presented. <p> In case of other (extended) languages, the notion of logical entailment under assumed interpretations (j= I ) can be replaced by the idea of generalization <ref> [9, 13] </ref>; for intuition, a more general formula (or any other symbolic expression) describes a bigger set of states of the considered dynamic system. <p> A formula representing state is a (theoretical) construction describing all the facts true in a specific physical state represented [8, 14]. Many further details are given in <ref> [9, 13, 14] </ref> and in [10]. For the sake of considering an engineering" approach, we shall consider some assumed set of intended interpretations to be denoted with I. This, in fact, means an incomplete specification of interpretation. <p> The other approach consists in a run-time validation of the expert system with use of selected set of test cases [24]. Selected test problems should also provide an exhaustive list of possible cases. Some other approaches of this kind are also discussed in [1]. In <ref> [10, 13, 14] </ref> a more general, first-order logic based approach is presented. The approach does not require exhaustive enumeration and testing of possible cases; instead, a proof-like procedure based on backward dual resolution is put forward.
Reference: [14] <author> A. Lige ` za, </author> <title> Logical foundations for knowledge-based control systems. Part II: Representation of states, transformations and analysis of theoretical properties, </title> <journal> Archives of Control Sciences, </journal> <volume> 4, </volume> <pages> 1-2, 27-63, </pages> <year> (1995). </year>
Reference-contexts: Selected problems in the context of rough sets approach are discussed in [20]. A logical approach based on backward dual resolution and applicable in case of predicate logic is presented in [8] and further papers including <ref> [9, 10, 11, 13, 14] </ref>. In [10, 11] and more thoroughly in [13, 14] we have investigated and developed a logical support for verification of selected theoretical properties of rule-based systems, including completeness and determinism. <p> Selected problems in the context of rough sets approach are discussed in [20]. A logical approach based on backward dual resolution and applicable in case of predicate logic is presented in [8] and further papers including [9, 10, 11, 13, 14]. In [10, 11] and more thoroughly in <ref> [13, 14] </ref> we have investigated and developed a logical support for verification of selected theoretical properties of rule-based systems, including completeness and determinism. A recent work [16] attempts at summarizing those results and covering some further problems, including rule-base reduction. <p> A formula representing state is a (theoretical) construction describing all the facts true in a specific physical state represented <ref> [8, 14] </ref>. Many further details are given in [9, 13, 14] and in [10]. For the sake of considering an engineering" approach, we shall consider some assumed set of intended interpretations to be denoted with I. This, in fact, means an incomplete specification of interpretation. <p> A formula representing state is a (theoretical) construction describing all the facts true in a specific physical state represented [8, 14]. Many further details are given in <ref> [9, 13, 14] </ref> and in [10]. For the sake of considering an engineering" approach, we shall consider some assumed set of intended interpretations to be denoted with I. This, in fact, means an incomplete specification of interpretation. <p> The other approach consists in a run-time validation of the expert system with use of selected set of test cases [24]. Selected test problems should also provide an exhaustive list of possible cases. Some other approaches of this kind are also discussed in [1]. In <ref> [10, 13, 14] </ref> a more general, first-order logic based approach is presented. The approach does not require exhaustive enumeration and testing of possible cases; instead, a proof-like procedure based on backward dual resolution is put forward. <p> In other words, the formulae defining preconditions of the rules cover the predefined set of possible input cases; this case is also referred to as -completeness. For a more detailed discussion and other definitions of completeness see also <ref> [8, 10, 14] </ref>. Note that in both of the above situations the check can be done with use of backward dual resolution.
Reference: [15] <author> A. Lige ` za, </author> <title> Towards design of complete rule-based control systems, </title> <booktitle> Preprints of IFAC/IMACS International Workshop on Artificial Intelligence in Real-Time Control, Bled (Slovenia), </booktitle> <pages> 189-194, </pages> <year> (1995). </year>
Reference-contexts: Moreover, a local minimization (for reduction of the number of rules) is supported by the approach proposed here in a straightforward way. An initial approach concerning design of complete rule-based control systems was first presented in <ref> [12, 15] </ref>; this approach, constituting the basis for the presented ideas, is developed here to cover some further issues, especially further possibilities of reducing the design process, assuring determinism and reduction of the rules. <p> Thus no exhaustive enumeration of potential input cases is necessary. Another advantage of the use of the proposed approach is that -trees enable hierarchical synthesis of rules the formulae assigned to paths in one tree may define the root context for lower level, more detailed design <ref> [15] </ref>. Moreover, parallel design for several contexts with use of separate -trees is possible; the trees can be further joint as subtrees of a mother -tree. ACKNOWLEDGEMENTS The author's stay in LAAS du CNRS was supported by a MENESRIP-DAEIF scholarschip No.: 174755 K through CIES.
Reference: [16] <author> A. Lige ` za, P. Fuster Parra, </author> <title> Towards Logical Analysis of Rule-Based Systems. Quality and Reliability Verification. </title> <booktitle> In: Proceedings of Eu-ropeann Meeting on Cybernetic and Systems Research, Vienna. World Scientifi Singapoore, </booktitle> <year> (1996). </year>
Reference-contexts: In [10, 11] and more thoroughly in [13, 14] we have investigated and developed a logical support for verification of selected theoretical properties of rule-based systems, including completeness and determinism. A recent work <ref> [16] </ref> attempts at summarizing those results and covering some further problems, including rule-base reduction. Without going into details, the idea of the proposed approach consisted in logical analysis of the precondition formulae of the rules to see if they "cover" any possible state and if they are mutually exclusive. <p> It is shown that a single inference rule - i.e. bd-resolution can constitute a tool for synthesis of complete and deterministic systems, and for rule reduction. Further problems such as redundancy, subsumption, conflict and inconsistency can be dealt with as well within the proposed framework <ref> [8, 16, 11] </ref>. The -tree provides a basic tool for design of reliable rule-based control systems in the sense of satisfaction of certain criteria; however, obviously it is not necessary to design completely deterministic systems.
Reference: [17] <author> D.L. Nazareth, </author> <title> Issues in the verification of knowledge in rule-based systems, </title> <journal> Int. J. Man-Machine Studies, </journal> <volume> 30, </volume> <pages> 255-271, </pages> <year> 1989). </year>
Reference-contexts: Several theoretical properties of rule-based systems seem to be worth investigating so as to provide a deeper theoretical insight into the understanding of their capacities and assure their satisfactory performance, i.e. reliability and quality <ref> [1, 7, 17, 18, 21, 23] </ref>. Problems listed below become still more important in case of rule-based methodology applied to on-line, real-time control of dynamic systems (i.e. intelligent control, 1 LAAS du CNRS, 7 Av. du Colonel Roche, 31077 Toulouse Cedex, France, e mail: ligeza@laas.laas.fr. <p> In practice, approaches to solving problems like the ones above refer to verification, validation and testing of knowledge bases, and despite their importance, they are rather reluctantly approached in current AI research. Some exceptions are papers <ref> [1, 2, 4, 17, 18, 21, 23, 24, 25, 26] </ref>. An interesting solution is used in the KHEOPS system [6]; its main idea consists in compiling the set of rules into a decision-tree like structure.
Reference: [18] <author> T.A. Nguyen, et al, </author> <title> Checking an expert systems knowledge base for consistency and completeness, </title> <booktitle> In Proceedings of the 9-th IJCAI, </booktitle> <address> Los Angeles, California. </address> <publisher> M. Kaufmann Publ. Inc., </publisher> <address> Los Altos, CA, 375-378, </address> <year> (1985). </year>
Reference-contexts: Several theoretical properties of rule-based systems seem to be worth investigating so as to provide a deeper theoretical insight into the understanding of their capacities and assure their satisfactory performance, i.e. reliability and quality <ref> [1, 7, 17, 18, 21, 23] </ref>. Problems listed below become still more important in case of rule-based methodology applied to on-line, real-time control of dynamic systems (i.e. intelligent control, 1 LAAS du CNRS, 7 Av. du Colonel Roche, 31077 Toulouse Cedex, France, e mail: ligeza@laas.laas.fr. <p> In practice, approaches to solving problems like the ones above refer to verification, validation and testing of knowledge bases, and despite their importance, they are rather reluctantly approached in current AI research. Some exceptions are papers <ref> [1, 2, 4, 17, 18, 21, 23, 24, 25, 26] </ref>. An interesting solution is used in the KHEOPS system [6]; its main idea consists in compiling the set of rules into a decision-tree like structure. <p> In literature <ref> [1, 18, 23] </ref> there are two basic approaches to completeness verification. The most popular one consists in exhaustive enumeration of possible input data and systematic inspection of a given set of rules versus a table containing all possible parameters and conditions combinations. <p> This kind of approach can be called an exhaustive completeness check [1]. Some examples of this approach are presented in <ref> [18, 23] </ref>. The other approach consists in a run-time validation of the expert system with use of selected set of test cases [24]. Selected test problems should also provide an exhaustive list of possible cases. Some other approaches of this kind are also discussed in [1]. <p> A graphical interpretation of determinism would consists on observing empty intersection of the sets of states described by precondition formulae for any two different rules. Two specific cases of nondeterministic rules are usually of special interest <ref> [1, 18, 23] </ref>, i.e. redundant (identical) and subsumed ones. Obviously, both of the cases are eliminated if indeterminism is dealt with. Subsumed rules can be discovered with direct use of bd-resolution.
Reference: [19] <author> R. O'Keefe, O. Balci and E. P. Smith, </author> <title> Validating expert system perfor mance. </title> <booktitle> IEEE Expert, Winter, </booktitle> <pages> 81-89, </pages> <year> (1987). </year>
Reference: [20] <author> Z. Pawlak, </author> <title> Rough Sets. Theoretical Aspects of Reasoning about Data, </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Dordrecht, Boston, London, </address> <year> (1991). </year>
Reference-contexts: Selected problems in the context of rough sets approach are discussed in <ref> [20] </ref>. A logical approach based on backward dual resolution and applicable in case of predicate logic is presented in [8] and further papers including [9, 10, 11, 13, 14].
Reference: [21] <author> W.A. Perkins, </author> <title> et a,: Knowledge base verification, </title> <editor> A chapter in G. Guida and C. Tasso eds., </editor> <title> |em Topics in expert system design, </title> <publisher> Elsevier Science Publishers B.V. (North-Holland), </publisher> <address> Amsterdam, 353-376,(1989). </address>
Reference-contexts: Several theoretical properties of rule-based systems seem to be worth investigating so as to provide a deeper theoretical insight into the understanding of their capacities and assure their satisfactory performance, i.e. reliability and quality <ref> [1, 7, 17, 18, 21, 23] </ref>. Problems listed below become still more important in case of rule-based methodology applied to on-line, real-time control of dynamic systems (i.e. intelligent control, 1 LAAS du CNRS, 7 Av. du Colonel Roche, 31077 Toulouse Cedex, France, e mail: ligeza@laas.laas.fr. <p> In practice, approaches to solving problems like the ones above refer to verification, validation and testing of knowledge bases, and despite their importance, they are rather reluctantly approached in current AI research. Some exceptions are papers <ref> [1, 2, 4, 17, 18, 21, 23, 24, 25, 26] </ref>. An interesting solution is used in the KHEOPS system [6]; its main idea consists in compiling the set of rules into a decision-tree like structure.
Reference: [22] <author> A.J. Sinton, </author> <title> A Safety Analysis of the Airbus A320 Braking System Design, A M.Sc. </title> <type> Thesis, </type> <institution> Department of Computing and Mathematics, University of Stirling, </institution> <year> (1994). </year>
Reference-contexts: The methods, however, are mostly applicable to rules constructed with use of propositional logic (i.e. the zero-order 2 Caused in our rough and subjective interpretation by lack of completeness of the control algorithm; in fact the detailed analysis is more complex <ref> [22] </ref>. logic) or slightly extended languages (e.g. attribute-value languages). Selected problems in the context of rough sets approach are discussed in [20]. A logical approach based on backward dual resolution and applicable in case of predicate logic is presented in [8] and further papers including [9, 10, 11, 13, 14].
Reference: [23] <author> M. Suwa, A. C. Scott, and E. H. Shortliffe, </author> <title> Completeness and con sistency in rule-based expert system, </title> <editor> In B. G. Buchanan and E.H. Shortliffe eds., </editor> <title> |em Rule-based expert systems, </title> <publisher> Addison-Wesley, Lon-don, </publisher> <pages> 159-170, </pages> <year> (1985). </year>
Reference-contexts: Several theoretical properties of rule-based systems seem to be worth investigating so as to provide a deeper theoretical insight into the understanding of their capacities and assure their satisfactory performance, i.e. reliability and quality <ref> [1, 7, 17, 18, 21, 23] </ref>. Problems listed below become still more important in case of rule-based methodology applied to on-line, real-time control of dynamic systems (i.e. intelligent control, 1 LAAS du CNRS, 7 Av. du Colonel Roche, 31077 Toulouse Cedex, France, e mail: ligeza@laas.laas.fr. <p> In practice, approaches to solving problems like the ones above refer to verification, validation and testing of knowledge bases, and despite their importance, they are rather reluctantly approached in current AI research. Some exceptions are papers <ref> [1, 2, 4, 17, 18, 21, 23, 24, 25, 26] </ref>. An interesting solution is used in the KHEOPS system [6]; its main idea consists in compiling the set of rules into a decision-tree like structure. <p> In literature <ref> [1, 18, 23] </ref> there are two basic approaches to completeness verification. The most popular one consists in exhaustive enumeration of possible input data and systematic inspection of a given set of rules versus a table containing all possible parameters and conditions combinations. <p> This kind of approach can be called an exhaustive completeness check [1]. Some examples of this approach are presented in <ref> [18, 23] </ref>. The other approach consists in a run-time validation of the expert system with use of selected set of test cases [24]. Selected test problems should also provide an exhaustive list of possible cases. Some other approaches of this kind are also discussed in [1]. <p> A graphical interpretation of determinism would consists on observing empty intersection of the sets of states described by precondition formulae for any two different rules. Two specific cases of nondeterministic rules are usually of special interest <ref> [1, 18, 23] </ref>, i.e. redundant (identical) and subsumed ones. Obviously, both of the cases are eliminated if indeterminism is dealt with. Subsumed rules can be discovered with direct use of bd-resolution. <p> Obviously, both of the cases are eliminated if indeterminism is dealt with. Subsumed rules can be discovered with direct use of bd-resolution. Note that having solved the problem of determinism, two other following problems, i.e. the one of conflict and inconsistency <ref> [1, 23] </ref> are also solved. This is so since no two rules can be applied at a time; thus no rules with conflicting conclusions/actions exist.
Reference: [24] <author> J. Tepandi, </author> <title> Verification, testing, and validation of rule-based expert systems, </title> <booktitle> In Proceedings of the 11-th IFAC World Congress, Tallin, </booktitle> <pages> 162-167, </pages> <year> (1990). </year>
Reference-contexts: On leave from: Institute of Automatics AGH, al. Mickiewicza 30, 30-059 Krakw, Poland; e-mail: ali@ia.agh.edu.pl knowledge-based control) <ref> [7, 24] </ref>, especially if safety issues are to be taken into account. <p> In practice, approaches to solving problems like the ones above refer to verification, validation and testing of knowledge bases, and despite their importance, they are rather reluctantly approached in current AI research. Some exceptions are papers <ref> [1, 2, 4, 17, 18, 21, 23, 24, 25, 26] </ref>. An interesting solution is used in the KHEOPS system [6]; its main idea consists in compiling the set of rules into a decision-tree like structure. <p> This kind of approach can be called an exhaustive completeness check [1]. Some examples of this approach are presented in [18, 23]. The other approach consists in a run-time validation of the expert system with use of selected set of test cases <ref> [24] </ref>. Selected test problems should also provide an exhaustive list of possible cases. Some other approaches of this kind are also discussed in [1]. In [10, 13, 14] a more general, first-order logic based approach is presented.
Reference: [25] <author> J. Treur, and M. Willems: </author> <title> A logical foundations for Verification, </title> <editor> In: A. Cohn (Ed.) </editor> <booktitle> Proceedings of the 11-th ECAI'94, </booktitle> <publisher> John Wiley& Sons, Amsterdam, </publisher> <pages> 745-749, </pages> <year> (1994). </year>
Reference-contexts: In practice, approaches to solving problems like the ones above refer to verification, validation and testing of knowledge bases, and despite their importance, they are rather reluctantly approached in current AI research. Some exceptions are papers <ref> [1, 2, 4, 17, 18, 21, 23, 24, 25, 26] </ref>. An interesting solution is used in the KHEOPS system [6]; its main idea consists in compiling the set of rules into a decision-tree like structure.
Reference: [26] <institution> Validation of Knowledge-Based Systems. IJCAI'93 Workshop Notes W23, </institution> <address> Chambery, </address> <year> (1993). </year>
Reference-contexts: In practice, approaches to solving problems like the ones above refer to verification, validation and testing of knowledge bases, and despite their importance, they are rather reluctantly approached in current AI research. Some exceptions are papers <ref> [1, 2, 4, 17, 18, 21, 23, 24, 25, 26] </ref>. An interesting solution is used in the KHEOPS system [6]; its main idea consists in compiling the set of rules into a decision-tree like structure.
References-found: 26

