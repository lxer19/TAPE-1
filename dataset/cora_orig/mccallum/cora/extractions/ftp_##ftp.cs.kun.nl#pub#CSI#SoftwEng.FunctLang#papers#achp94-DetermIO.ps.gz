URL: ftp://ftp.cs.kun.nl/pub/CSI/SoftwEng.FunctLang/papers/achp94-DetermIO.ps.gz
Refering-URL: http://www.cs.kun.nl/~clean/Clean.Papers.html
Root-URL: 
Email: (e-mail: peter88@cs.kun.nl, rinus@cs.kun.nl)  
Title: A Framework for Deterministically Interleaved Interactive Programs in the Functional Programming Language Clean  
Author: PETER ACHTEN AND RINUS PLASMEIJER 
Address: Toernooiveld 1, 6525ED, Nijmegen, the Netherlands  
Affiliation: Computing Science Institute, University of Nijmegen,  
Abstract: In this paper we present a functional interleaved Event I/O system . This system is a generalization of the Event I/O system as incorporated into the lazy, purely functional pro gramming language Clean. The Inter leaved Event I/O system offers features that are more commonly found outside the functional scene. These fea tures are dy - namic pro cess creation, and two well-known forms of inter-process communica tion: asyn chronous message passing , and data sharing . Both forms of communication are polymorphic and type-safe. As we are working in a functional lan guage, messages can contain higher-order functions and arbitrarily complex algebraic types. Communication by data sharing is a restricted form of com munication by global data structures. Nevertheless, the new system is still completely functional because the generalization is done within the pure func tional framework. The In terleaved Event I/O system has been implemented and will become part of the new release of Clean. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Achten, P.M., van Groningen J.H.G., and Plasmeijer, M.J. </author> <year> 1993. </year> <title> High Level Specifi ca tion of I/O in Func tional Languages. </title> <editor> In Launchbury,J., Sansom,P. eds., </editor> <booktitle> Pro ceed-ings Glasgow Workshop on Functional Pro gramming, </booktitle> <address> Ayr,Scotland, </address> <month> 6-8 June </month> <year> 1992. </year> <booktitle> Workshop Notes in Com - puter Science. Springer-Verlag,Berlin,1993, </booktitle> <pages> pp 1-17. </pages>
Reference: <author> Achten, P.M. and Plasmeijer, M.J. </author> <year> 1994. </year> <title> The Ins and Outs of Clean I/O. </title> <note> To appear in the Journal of Func tional Programming. </note>
Reference: <author> Barendregt, H.P., Eekelen van, M.C.J.D., Glauwert, J.R.W., Kennaway, J.R., Plasmeijer, M.J., and Sleep, </author> <title> M.R. 1987. Term Graph Rewriting. </title> <editor> In Bakker, J.W. de, Nijman, A.J., and Treleaven, P.C. eds. </editor> <booktitle> Proceedings of Parallel Archi tectures and Languages Europe, Eind - hoven, The Nether lands, </booktitle> <publisher> LNCS 259, Vol.II. Springer-Verlag, Berlin, </publisher> <pages> pp. 141-158. </pages>
Reference-contexts: Conclusions are drawn in section 6, and section 7 concludes with current and future work. 2 The Clean Event I/O system Clean (Brus et al, 1987; Ncker et al, 1991; Plasmeijer and van Eekelen, 1993) is a lazy func tional programming language based on Term Graph Rewriting <ref> (Barendregt et al, 1987) </ref>. The programs in this paper are written in Clean 1.0 (Plasmeijer and van Eekelen, 1994, in prepara tion). Most of the lan - guage constructs used in Clean 1.0 are customary in other functional lan guages such as Miranda 1 and Haskell.
Reference: <author> Barendsen, E. and Smetsers, J.E.W. </author> <year> 1993. </year> <title> Con ven tional and Uniqueness Typ ing in Graph Rewrite Systems. In Shyamasundar, R.K. </title> <editor> ed. </editor> <booktitle> Proceedings of the Thir teenth Conference on the Foundations of Software Technology and Theo retical Com puter Science, </booktitle> <address> 1517 De cember 1993, Bombay, India. </address> <publisher> LNCS 761 . Springer-Verlag, Berlin, </publisher> <pages> pp. 41-51. </pages>
Reference: <author> Brus, T., Eekelen, M.C.J.D. van, Leer, M.O. van, Plasmeijer, M.J., and Barendregt, </author> <title> H.P. 1987. Clean: A Lan guage for Functional Graph Rewriting. </title> <editor> In Kahn. G. ed. </editor> <booktitle> Proceedings of the Third International Conference on Functional Programming Lan guages and Computer Ar chi tecture , Portland, </booktitle> <address> Oregon, USA, </address> <publisher> LNCS 2 7 4 , Springer-Verlag, </publisher> <pages> pp. 364-384. </pages>
Reference: <author> Carlsson, M. and Hallgren, Th. </author> <year> 1993. </year> <title> FUDGETS - A Graphi - cal User Inter face in a Lazy Functional Language. </title> <booktitle> In Proc. of Conference on Functional Pro gram ming Lan - guages and Computer Architecture. </booktitle> <address> Copenhagen, Denmark, 9-11 June 1993. </address> <publisher> ACM Press, </publisher> <pages> pp. 321-330. </pages>
Reference: <author> Dwelly, A. </author> <year> 1989. </year> <title> Functions and Dynamic User In terfaces. </title> <booktitle> In Proceedings of Fourth International Conference on Functional Programming Lan guages and Computer Architectures, </booktitle> <institution> Imperial College, </institution> <address> London, Septem ber 11-13, </address> <year> 1989, </year> <pages> pp. 371-381. </pages>
Reference: <author> Groningen, J.H.G. van, Ncker, E.G.J.M.H., and Smetsers, J.E.W. </author> <year> 1991. </year> <title> Efficient Heap Management in the Con - crete ABC Machine. </title> <editor> In Glaser, Hartel eds, </editor> <booktitle> Pro ceedings of Third International Workshop on Im plementa tion of Functional Lan guages on Parallel Architectures. </booktitle> <institution> Uni - versity of Southampton, UK. Technical Re port Series CSTR 91-07. </institution>
Reference: <author> Henderson, P. </author> <year> 1982. </year> <title> Purely Functional Operating Systems. </title>
Reference: <editor> In Darlington, J., Henderson, P., Turner, D.A. eds., </editor> <booktitle> Functional programming and its applica tions, </booktitle> <publisher> Cam - bridge University Press, </publisher> <pages> pp. 177-192. </pages>
Reference: <author> Ncker, E.G.J.M.H., Smetsers, J.E.W., Eekelen, M.C.J.D. van, and Plasmeijer, M.J. </author> <year> 1991. </year> <title> Con current Clean. </title> <editor> In Aarts, E.H.L., Leeuwen, J. van, Rem, M., eds, </editor> <booktitle> Proceed - ings of Parallel Ar chi tectures and Lan guages Europe, </booktitle> <month> June, </month> <title> Eindhoven, </title> <journal> The Nether lands. </journal> <volume> LNCS 5 0 6 , Springer-Verlag,pp. </volume> <pages> 202-219. </pages>
Reference: <author> Noble, R., Runciman, C. </author> <year> 1994. </year> <title> Functional Lan guages and Graphical User Interfaces - a review and a case study. </title> <institution> Department of Computer Sci ence, University of York, </institution> <address> England. </address> <month> February 3, </month> <year> 1994. </year>
Reference: <author> Peyton Jones, S.L. and Wadler, Ph. </author> <year> 1993. </year> <title> Imperative Func - tional Pro gramming. </title> <booktitle> In Proceedings of the Twentieth Annual ACM SIGACT SIGPLAN Sympo sium on Principles of Programming Languages, </booktitle> <address> Charleston, South Car - olina, </address> <month> January 10-13, </month> <year> 1993, </year> <pages> pp. 71-84. </pages>
Reference: <author> Plasmeijer, M.J. and van Eekelen, M.C.J.D. </author> <year> 1993. </year> <title> Functional Program ming and Parallel Graph Rewriting . Addison-Wesley Publishing Com pany 1993. </title>
Reference: <author> Plasmeijer, M.J. and van Eekelen, M.C.J.D. </author> <year> 1994. </year> <title> Clean 1.0 Reference Manual. </title> <type> Tech nical Report, </type> <institution> in prepara - tion. University of Nijmegen, The Netherlands. </institution>
Reference-contexts: The programs in this paper are written in Clean 1.0 <ref> (Plasmeijer and van Eekelen, 1994, in prepara tion) </ref>. Most of the lan - guage constructs used in Clean 1.0 are customary in other functional lan guages such as Miranda 1 and Haskell. Where appropriate, the text in cludes remarks on peculiari ties of Clean 1.0.
Reference: <author> Smetsers, J.E.W., Ncker, E.G.M.H, Groningen, J.H.G. van, and Plasmeijer, M.J. </author> <year> 1991. </year> <title> Generat ing Efficient Code for Lazy Functional Lan guages. </title> <editor> In Hughes, J. ed, </editor> <booktitle> Proceedings of Fifth International Conference on Functional Program ming Languages and Computer Ar - chitecture Cambridge, </booktitle> <address> MA, USA, </address> <publisher> LNCS 523 , Springer - Verlag pp. </publisher> <pages> 592-617. </pages>
Reference: <author> Smetsers, J.E.W., Barendsen, E., Eekelen, M.C.J.D. van, and Plasmeijer, M.J. </author> <year> 1993. </year> <title> Guaran teeing Safe Destruc - tive Updates through a Type System with Uniqueness Informa tion for Graphs. </title> <booktitle> In Proceed ings Workshop Graph Trans formations in Computer Science , Schloss Dagstuhl, </booktitle> <month> January 4-8, </month> <year> 1993. </year> <booktitle> Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin. </address>
Reference: <author> Stoye, W.R. </author> <year> 1984. </year> <title> A new scheme for writing func tional operating systems. </title> <type> Technical Report 56 , Com puter Laboratory, </type> <institution> Cambridge University, </institution> <year> 1984. </year>
Reference: <author> Thompson, S. </author> <year> 1990. </year> <title> Interactive Functional Programs. A Method and a Formal Semantics. </title> <editor> In Turner, D.A. ed., </editor> <booktitle> Research topics in Functional Programming , Addison-Wesley Publishing Company, </booktitle> <pages> pp. 249-285. </pages>
Reference: <author> Turner, D.A. </author> <year> 1990. </year> <title> An Approach to Functional Operating Systems. </title> <editor> In Turner, D.A. ed., </editor> <booktitle> Research topics in Func - tional Programming , Addison-Wesley Pub lishing Com pany, </booktitle> <pages> pp. 199-217. </pages>
References-found: 20

