URL: http://www.cs.berkeley.edu/~zhendong/cs271/lp.ps
Refering-URL: http://http.cs.berkeley.edu/~zhendong/cs271/cs271.html
Root-URL: http://www.cs.berkeley.edu
Title: Randomized Algorithms for Linear Programming  
Author: Ashwin Nayak Zhendong Su 
Date: May 10, 1996  
Abstract-found: 0
Intro-found: 1
Reference: [Cla88] <author> K. L. Clarkson. </author> <title> A Las Vegas algorithm for linear programming when the dimension is small. </title> <booktitle> In Proc. 29th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 452-456, </pages> <month> October </month> <year> 1988. </year>
Reference-contexts: This bound has been improved to O (3 d 2 n) by Clarkson and Dyer independently in 1986. The first randomized solution to this problem was given by Dyer and Frieze who obtained a variant of Megiddo's algorithm with expected running time O (d 3d n). Clarkson <ref> [Cla88] </ref> improved this bound to O (d 2 n) + (log (n=d 2 )) log (d+2) O (d d=2+O (1) ) in 1988. In 1991, Seidel [Sei91] gave a very simple randomized incremental algorithm with expected running time of O (d!n).
Reference: [Cla95] <author> K. L. Clarkson. </author> <title> Las Vegas algorithms for linear and integer programming when the dimension is small. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 42(2) </volume> <pages> 488-499, </pages> <month> March </month> <year> 1995. </year>
Reference-contexts: So, the goal is to minimize the variable x 1 . 4. The optimum is unique. 5. Each vertex of the feasible region is determined by exactly d constraints. 2 2 Clarkson's Algorithm: Random Sampling helps In this section, we discuss three LP algorithms due to Clarkson <ref> [Cla95] </ref>. One is a recursive algorithm. Another one is an iterative algorithm. The third one is a mixed algorithm: it is a modified version of the recursive algorithm using the iterative algorithm for the recursive calls. 2.1 The recursive algorithm The technique used in the recursive algorithm is random sampling.
Reference: [Gol95] <author> M. Goldwasser. </author> <title> A survey of linear programming in randomized subexponential time. </title> <journal> SIGACT News, </journal> <volume> 26(no.2):96-104, </volume> <year> 1995. </year>
Reference: [GZ94] <author> B. Gartner and G. Ziegler. </author> <title> Randomized simplex algorithms on klee-minty cubes. </title> <booktitle> In Proceedings of the 35th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 502-510, </pages> <year> 1994. </year>
Reference-contexts: The current best bound O (d 2 n + e O ( p d log d) log n) is obtained by using one of the subexponential algorithms as a subroutine to Clarkson's algorithm. Gartner et al <ref> [GZ94] </ref> have shown that on a restricted class of LP problems, some common randomized algorithms including Kalai's take polynomial time. In this paper, we study the general randomized algorithms mentioned above.
Reference: [Kal92] <author> G. Kalai. </author> <title> A subexponential randomized simplex algorithm. </title> <booktitle> In Proceedings of the 24th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 475-482, </pages> <year> 1992. </year>
Reference-contexts: In 1991, Seidel [Sei91] gave a very simple randomized incremental algorithm with expected running time of O (d!n). Sharir and Welzl [SW92], motivated by Seidel's algorithm, devised another randomized algorithm and showed that its expected running time is O (n2 d ). The first breakthrough came when Kalai <ref> [Kal92] </ref> found a randomized simplex algorithm and proved the first subex-ponential bound for linear programming. Following the result of Kalai, Matousek, Sharir, and Welzl [MSW92] were able to prove that the original Sharir-Welzl algorithm has a subex-ponential bound. <p> After Kalai discovered a subexponential randomized simplex algorithm for LP, the recurrence was examined again, and was shown to have the subexponential bound given above. We turn to Kalai's algorithm next. 5 Kalai's Algorithm: A randomized simplex method Kalai <ref> [Kal92] </ref> discovered a randomized simplex algorithm for linear programming, which was the first to be proven to have subexponential bound running time. Kalai's algorithm is a variant of the standard simplex algorithm.
Reference: [MR95] <author> R. Motawani and R. Raghavan. </author> <title> Randomized Algorithms. </title> <publisher> Cambridge University Press, </publisher> <year> 1995. </year>
Reference: [MSW92] <author> J. Matousek, M. Sharir, and E. Welzl. </author> <title> A subexponential bound for linear programming. </title> <booktitle> In Proceedings of the 8th Annual ACM Symposium on Computational Geometry, </booktitle> <pages> pages 1-8, </pages> <year> 1992. </year> <month> 15 </month>
Reference-contexts: The first breakthrough came when Kalai [Kal92] found a randomized simplex algorithm and proved the first subex-ponential bound for linear programming. Following the result of Kalai, Matousek, Sharir, and Welzl <ref> [MSW92] </ref> were able to prove that the original Sharir-Welzl algorithm has a subex-ponential bound. The current best bound O (d 2 n + e O ( p d log d) log n) is obtained by using one of the subexponential algorithms as a subroutine to Clarkson's algorithm.
Reference: [Sei91] <author> R. Seidel. </author> <title> Small-dimensional linear programming and convex hulls made easy. </title> <journal> Discrete Computational Geometry, </journal> <volume> 6 </volume> <pages> 423-434, </pages> <year> 1991. </year>
Reference-contexts: Clarkson [Cla88] improved this bound to O (d 2 n) + (log (n=d 2 )) log (d+2) O (d d=2+O (1) ) in 1988. In 1991, Seidel <ref> [Sei91] </ref> gave a very simple randomized incremental algorithm with expected running time of O (d!n). Sharir and Welzl [SW92], motivated by Seidel's algorithm, devised another randomized algorithm and showed that its expected running time is O (n2 d ).
Reference: [SW92] <author> M. Sharir and E. Welzl. </author> <title> A combinatorial bound for linear programming and related problems. </title> <booktitle> In Proceedings of the 9th Symposium on Theoretical Aspects of Computer Science, </booktitle> <pages> pages 569-579, </pages> <year> 1992. </year> <month> 16 </month>
Reference-contexts: Clarkson [Cla88] improved this bound to O (d 2 n) + (log (n=d 2 )) log (d+2) O (d d=2+O (1) ) in 1988. In 1991, Seidel [Sei91] gave a very simple randomized incremental algorithm with expected running time of O (d!n). Sharir and Welzl <ref> [SW92] </ref>, motivated by Seidel's algorithm, devised another randomized algorithm and showed that its expected running time is O (n2 d ). The first breakthrough came when Kalai [Kal92] found a randomized simplex algorithm and proved the first subex-ponential bound for linear programming.
References-found: 9

