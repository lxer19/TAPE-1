URL: ftp://ftp.cis.ufl.edu/cis/tech-reports/tr92/tr92-039.ps
Refering-URL: http://www.cis.ufl.edu/tech-reports/tech-reports/tr92-abstracts.html
Root-URL: http://www.cis.ufl.edu
Title: A Multimodel Approach to Reasoning and Simulation  
Author: Paul A. Fishwick N. Hari Narayanan Jon Sticklen Andrea Bonarini 
Keyword: Multimodeling,Visuo-Spatial Reasoning,Abstraction Levels,Qualitative System,Functional Modeling.  
Date: 1993 1  
Note: IEEE TRANSACTIONS ON SYSTEMS, MAN AND CYBERNETICS, VOL. XX, NO. Y, MONTH  
Abstract: Models that are constructed within the bounds of a single paradigm are not sufficient for modeling all aspects of complex systems. Therefore, even though reasoning and simulation systems that utilize a single modeling paradigm are the current norm, we explore a multimodel approach in this paper. A multimodel approach is defined as one in which more than one model | each derived from a different perspective, and utilizing correspondingly distinct reasoning and simulation strategies | are employed. By describing four models which illustrate the use of different modeling techniques, we show how a multimodel approach can enrich the modeling environment and make it correspond better with real world information. Our models come from many sources | Systems and Simulation Theory for the modeling of natural phenomena and artificial devices, and Artificial Intelligence and Cognitive Science for the modeling of human intuition and expertise in reasoning. Generalizing from these four models, we suggest that modeling complex systems may best be approached from an integrated architectural viewpoint which combines multiple modeling paradigms. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> P. A. Fishwick, J. W. Rozenblit, and B. P. Zeigler, eds., </editor> <booktitle> Second Annual AI, Simulation and Planning in High Autonomy Systems Conference. </booktitle> <address> Los Alamitos, CA: </address> <publisher> IEEE Computer Society Press, </publisher> <year> 1991. </year>
Reference-contexts: The seeds of this collaboration among the four authors (whose backgrounds span Systems and Simulation Theory, AI, and Cognitive Science) were sown at the AI, Simulation and Planning in High Autonomy Systems conference held in April 1991 at Cocoa Beach, Florida <ref> [1] </ref>. There it became clear that both reasoning and simulation approaches were going to be necessary for addressing the challenges that complex systems pose. This motivated the preparation of a collaborative paper on multimodel reasoning and simulation. 2 III.
Reference: [2] <author> P. A. Fishwick and B. P. Zeigler, </author> <title> "A Multimodel Methodology for Qualitative Model Engineering," </title> <journal> ACM Transactions on Modeling and Computer Simulation, </journal> <volume> vol. 2, no. 1, </volume> <pages> pp. 52 - 81, </pages> <year> 1992. </year>
Reference-contexts: However, if the water temperature reaches 100 then the water starts boiling." We present a method that permits this kind of multi-level reasoning. Fishwick and Zeigler <ref> [2] </ref> have recently discussed a method 3 The study described in this section is an extension of material drawn from two sources [36], [2]. 4 Our concept of multimodel, as in the title of this paper, includes multiple independent models as well as models containing submodels in a hierarchy. <p> However, if the water temperature reaches 100 then the water starts boiling." We present a method that permits this kind of multi-level reasoning. Fishwick and Zeigler <ref> [2] </ref> have recently discussed a method 3 The study described in this section is an extension of material drawn from two sources [36], [2]. 4 Our concept of multimodel, as in the title of this paper, includes multiple independent models as well as models containing submodels in a hierarchy. It is a more general notion than Oren's multimodel. 10 IEEE TRANSACTIONS ON SYSTEMS, MAN AND CYBERNETICS, VOL. XX, NO. <p> Different modeling methods include these components in different ways. For instance, an FSA focuses on state-to-state transitions with input being labeled on each arc. A dataflow model, on the other hand, focuses on the transfer function between input and output. Homogeneous model refinement <ref> [2] </ref>, [3] is the process of refining models of the same type. For instance, we might represent the boiling water system using a hierarchy of finite state automata (see Fig. 13).
Reference: [3] <author> P. A. Fishwick, </author> <title> "An Integrated Approach to System Modelling using a Synthesis of Artificial Intelligence, </title> <booktitle> Software Engineering and Simulation Methodologies," ACM Transactions on Modeling and Computer Simulation, </booktitle> <volume> vol. 2, no. 4, </volume> <pages> pp. 307 - 330, </pages> <year> 1992. </year>
Reference-contexts: Different modeling methods include these components in different ways. For instance, an FSA focuses on state-to-state transitions with input being labeled on each arc. A dataflow model, on the other hand, focuses on the transfer function between input and output. Homogeneous model refinement [2], <ref> [3] </ref> is the process of refining models of the same type. For instance, we might represent the boiling water system using a hierarchy of finite state automata (see Fig. 13).
Reference: [4] <author> P. A. Fishwick and R. B. Modjeski, eds., </author> <title> Knowledge Based Simulation: Methodology and Application. </title> <publisher> Springer Verlag, </publisher> <year> 1991. </year>
Reference: [5] <author> P. A. Fishwick and P. A. Luker, eds., </author> <title> Qualitative Simulation Modeling and Analysis. </title> <publisher> Springer Verlag, </publisher> <year> 1991. </year>
Reference: [6] <author> L. E. Widman, K. A. Loparo, and N. R. Nielsen, </author> <booktitle> Artificial Intelligence, Simulation and Modeling. </booktitle> <publisher> John Wiley, </publisher> <year> 1989. </year>
Reference: [7] <author> M. S. Elzas, T. I. Oren, and B. P. Zeigler, </author> <title> Modelling and Simulation Methodology: Knowledge Systems' Paradigms. </title> <publisher> North Holland, </publisher> <year> 1989. </year>
Reference: [8] <author> B. P. Zeigler, </author> <title> Object Oriented Simulation with Hierarchical, Modular Models: Intelligent Agents and Endomorphic Systems. </title> <publisher> Academic Press, </publisher> <year> 1990. </year>
Reference-contexts: Other groups in the AI community have also addressed the use of multiple models to support multi-level reasoning architectures [24], [41], [42]. Cellier [43] developed an approach to combined continuous/discrete event models implemented in a GASP language extension. Prae-hofer [44] extended the Discrete Event System Specification (DEVS) <ref> [8] </ref> to provide a formalism and a simulation environment for specifying combined continuous/discrete event models. In this section, we build on these developments by providing a methodology and formalism for developing multi-level, cooperative models of physical systems of the type studied in qualitative physics.
Reference: [9] <author> D. S. Weld and J. de Kleer, eds., </author> <title> Readings in Qualitative Reasoning about Physical Systems. </title> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann, </publisher> <year> 1990. </year>
Reference: [10] <author> B. Kuipers, </author> <title> "Qualitative simulation," </title> <journal> Artificial Intelligence, </journal> <volume> vol. 29, </volume> <pages> pp. 289-338, </pages> <year> 1986. </year>
Reference: [11] <author> B. Faltings, </author> <title> "A symbolic approach to qualitative kinematics," </title> <journal> Artificial Intelligence, </journal> <volume> vol. 56, </volume> <pages> pp. 139-170, </pages> <year> 1992. </year>
Reference-contexts: Many devices contain mechanisms with spatial behaviors. Not surprisingly, the problem of reasoning about spatial behaviors of mechanisms has received much attention in AI <ref> [11] </ref>, [12], [13].
Reference: [12] <author> A. Gelsey, </author> <title> "The use of intelligently controlled simulation to predict a machine's long-term behavior," </title> <booktitle> in Proceedings of the Ninth National Conference on Artificial Intelligence, </booktitle> <address> (Menlo Park, CA), </address> <pages> pp. 880-887, </pages> <publisher> AAAI press, </publisher> <year> 1991. </year>
Reference-contexts: Many devices contain mechanisms with spatial behaviors. Not surprisingly, the problem of reasoning about spatial behaviors of mechanisms has received much attention in AI [11], <ref> [12] </ref>, [13].
Reference: [13] <author> L. Joskowicz and E. P. Sacks, </author> <title> "Computational kinematics," </title> <journal> Artificial Intelligence, </journal> <volume> vol. 51, </volume> <pages> pp. 381-416, </pages> <year> 1991. </year>
Reference-contexts: Many devices contain mechanisms with spatial behaviors. Not surprisingly, the problem of reasoning about spatial behaviors of mechanisms has received much attention in AI [11], [12], <ref> [13] </ref>.
Reference: [14] <author> N. H. Narayanan, </author> <title> Imagery, Diagrams and Reasoning. </title> <type> PhD thesis, </type> <institution> The Ohio State University, Columbus, OH, </institution> <year> 1992. </year>
Reference-contexts: Nevertheless, a qualitative characterization as above can be very useful in guiding more detailed analyses of devices. Therefore, a model of visuo-spatial reasoning is presented in the following two sections. A. Problem Solving Strategy A cognitive strategy for solving visuo-spatial reasoning problems <ref> [14] </ref> involves the following activities. Information extraction: the diagram serves as a spatially organized representation of information, and information is spatially indexed and retrieved from it during problem solving. <p> In other words, instead of presenting a particular model, we describe desirable characteristics of such a model along with suggestions derived from a specific model that was recently developed [15], <ref> [14] </ref>. A VSRM needs to represent three types of knowledge. First, there is spatial knowledge explicit in the diagram of objects being reasoned about. Second, there is conceptual knowledge about objects and their parts; information that is relevant to reasoning, but which is not available from the diagram. <p> Furthermore, units of predictive knowledge should be specified at an abstract enough level that these have broad coverage. What constitutes predictive knowledge depends on the domain for which a VSRM is being developed. For a 2-dimensional blocks world domain <ref> [14] </ref>, representational units called "visual cases" have been used to encode predictive knowledge. Fig. 3 shows a sample visual case. <p> A visual case has five parts: the prototypical object configuration (POC) that the case represents, a description (ED), visual conditions (VC) verifiable from the diagrammatic representation, non-visual conditions (NVC) verifiable from conceptual knowledge, and predicted event or events (P). [Figure 3 about here.] The model in <ref> [14] </ref> contains about seventy such cases cover ing translation, rotation, sliding and tilting of objects. Based on the aforementioned problem solving strategy, a four-stage reasoning process can be designed for a VSRM: analysis of diagrammatic representation, visualization of motions, detection of deliberative states, and prediction of spatial interaction effects. <p> The configuration that the diagrammatic representation depicts at this point is called a deliberative state. Which types of object interactions are counted as denoting a deliberative state depends on the domain and class of problems for which a VSRM is being developed. The model in <ref> [14] </ref> considers the following types of interactions as denoting a deliberative state: a collision between objects, the removal of a previously existing inter-object contact, and a change in the nature of an inter-object contact. When detected, these interactions will trigger a transfer of control to the deliberative phase.
Reference: [15] <author> N. H. Narayanan and B. Chandrasekaran, </author> <title> "Reasoning visually about spatial interactions," </title> <booktitle> in Proceedings of the Twelfth International Joint Conference on Artificial Intelligence, </booktitle> <address> (Mountain View, CA), </address> <pages> pp. 360-365, </pages> <publisher> Morgan Kaufmann Publishers, </publisher> <year> 1991. </year>
Reference-contexts: In other words, instead of presenting a particular model, we describe desirable characteristics of such a model along with suggestions derived from a specific model that was recently developed <ref> [15] </ref>, [14]. A VSRM needs to represent three types of knowledge. First, there is spatial knowledge explicit in the diagram of objects being reasoned about. Second, there is conceptual knowledge about objects and their parts; information that is relevant to reasoning, but which is not available from the diagram.
Reference: [16] <author> J. I. Glasgow and D. Papadias, </author> <title> "Computational imagery," </title> <journal> Cognitive Science, </journal> <volume> vol. 16, </volume> <pages> pp. 355-394, </pages> <year> 1992. </year>
Reference-contexts: Each cell can contain one or more symbols representing the part of the diagram which the cell covers. Such arrays, called occupancy arrays, have recently been proposed as representations useful for computational imagery <ref> [16] </ref>. Computer analogues of visual operations that humans employ to achieve spatially-indexed access, such as scanning and boundary following, can easily be implemented on such arrays. An occupancy array facilitates visualization as well, since array procedures to simulate the effects of object motions can also be designed easily.
Reference: [17] <author> N. H. Narayanan and B. Chandrasekaran, </author> <title> "Integration of qualitative and quantitative methods in visual reasoning," </title> <booktitle> in Proceedings of the Second Conference on AI, Simulation, and Planning in High Autonomy Systems, </booktitle> <address> (Los Alamitos, CA), </address> <pages> pp. 272-278, </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1991. </year>
Reference-contexts: This control loop repeats until the evolution of the object configuration ceases or no more object interactions are predicted. C. Summary Visuo-spatial reasoning is a qualitative approach to diagrammatically representable spatial reasoning problems. It also provides a framework for integrating quantitative methods <ref> [17] </ref>. Quantitative information can be represented in a VSRM as part of conceptual information and quantitative methods can be invoked during the deliberative phase of reasoning.
Reference: [18] <author> V. Sembugamoorthy and B. Chandrasekaran, </author> <title> "Functional Representation of Devices and Compilation of Diagnostic Problem-Solving Systems," in Experience, Memory, </title> <editor> and Learning (J. Kolodner and C. Reisbeck, eds.), </editor> <publisher> Laurence Erlbaum Associates, </publisher> <year> 1986. </year>
Reference-contexts: The roots of FM lie in research by Sembugamoorthy and Chandrasekaran which set the initial representational concepts for the functional point of view <ref> [18] </ref>. Sticklen and Chandrasekaran applied and extended the initial work to include a simulation component to support diagnostic problem solving in a medical domain [19].
Reference: [19] <author> J. Sticklen, B. Chandrasekaran, and W. Bond, </author> <title> "Distributed Causal Reasoning," </title> <journal> Knowledge Acquisition, </journal> <volume> vol. 1, </volume> <pages> pp. 139-162, </pages> <year> 1989. </year>
Reference-contexts: The roots of FM lie in research by Sembugamoorthy and Chandrasekaran which set the initial representational concepts for the functional point of view [18]. Sticklen and Chandrasekaran applied and extended the initial work to include a simulation component to support diagnostic problem solving in a medical domain <ref> [19] </ref>. Goel has used a simulation viewpoint to attack problems of design problem solving [20]; Punch has likewise used an FM simulation point of view as a basis for the integration of Generic Tasks [21]. <p> Space here precludes a detailed discussion of our consequence finding engine, but it is fully described in <ref> [19] </ref>. In synopsis, the reasoning algorithm first finds the highest level function in the device which is applicable for the stated boundary conditions of the problem.
Reference: [20] <author> A. Goel and B. Chandrasekaran, </author> <title> "Functional Representation of Designs and Redesign Problem Solving," </title> <booktitle> in Proceedings of IJCAI-89, </booktitle> <year> 1989. </year>
Reference-contexts: Sticklen and Chandrasekaran applied and extended the initial work to include a simulation component to support diagnostic problem solving in a medical domain [19]. Goel has used a simulation viewpoint to attack problems of design problem solving <ref> [20] </ref>; Punch has likewise used an FM simulation point of view as a basis for the integration of Generic Tasks [21]. Allemang has recently reported an application of the methodology of functional representation to model computer programs [22].
Reference: [21] <author> W. Punch, K. Keller, and J. Sticklen, </author> <title> "Domain-Specific Software Architectures and their use in Developing Complex AI Systems," </title> <booktitle> in Proceedings of IEEE Workshop on AI Applications, </booktitle> <address> (Miami), </address> <year> 1991. </year>
Reference-contexts: Goel has used a simulation viewpoint to attack problems of design problem solving [20]; Punch has likewise used an FM simulation point of view as a basis for the integration of Generic Tasks <ref> [21] </ref>. Allemang has recently reported an application of the methodology of functional representation to model computer programs [22]. Finally, Keuneke recently completed a research project in which she demonstrated that the functional representation is a valuable framework for the extraction of explanations of diagnostic conclusions [23].
Reference: [22] <author> D. Allemang, </author> <title> Understanding Programs as Devices. </title> <type> PhD thesis, </type> <institution> The Ohio State University, </institution> <year> 1990. </year>
Reference-contexts: Allemang has recently reported an application of the methodology of functional representation to model computer programs <ref> [22] </ref>. Finally, Keuneke recently completed a research project in which she demonstrated that the functional representation is a valuable framework for the extraction of explanations of diagnostic conclusions [23].
Reference: [23] <author> A. Keunke, </author> <title> Machine Understanding of Devices: Causal Explanation of Diagnostic Conclusions. </title> <type> PhD thesis, </type> <institution> The Ohio State University, </institution> <year> 1989. </year>
Reference-contexts: Allemang has recently reported an application of the methodology of functional representation to model computer programs [22]. Finally, Keuneke recently completed a research project in which she demonstrated that the functional representation is a valuable framework for the extraction of explanations of diagnostic conclusions <ref> [23] </ref>. Overall, the functional viewpoint centers on enumerating the proper primitives which can be used to organize causal device understanding, and on working out algorithms for utilizing the representation. Similarly motivated research has recently been reported by Chittaro et al in Italy [24], and by Franke at UT-Austin [25].
Reference: [24] <author> L. Chittaro, C. Constantini, G. Guida, C. Tasso, and E. Top-pano, </author> <title> "Diagnosis Based on Cooperation of Multiple Knowledge Sources," </title> <booktitle> in Proceedings of the Model Based Diagnosis International Workshop, </booktitle> <year> 1989. </year>
Reference-contexts: Overall, the functional viewpoint centers on enumerating the proper primitives which can be used to organize causal device understanding, and on working out algorithms for utilizing the representation. Similarly motivated research has recently been reported by Chittaro et al in Italy <ref> [24] </ref>, and by Franke at UT-Austin [25]. In this section, we characterize a recent extension of the FM methodology to encompass quantitative relationships between state variables of a modeled device. This extension will be described via our test bed example, the automotive cruise control device. <p> Oren [40] has developed the definition of multimodel 4 to formalize models containing several submodels, only one of which is put into effect at any time. Other groups in the AI community have also addressed the use of multiple models to support multi-level reasoning architectures <ref> [24] </ref>, [41], [42]. Cellier [43] developed an approach to combined continuous/discrete event models implemented in a GASP language extension. Prae-hofer [44] extended the Discrete Event System Specification (DEVS) [8] to provide a formalism and a simulation environment for specifying combined continuous/discrete event models.
Reference: [25] <author> D. Franke, </author> <title> "Representing and Acquiring Teleological Descriptions," </title> <booktitle> in Proceedings of the 1989 Workshop on Model Based Reasoning (IJCAI 89), </booktitle> <address> (Detroit), </address> <year> 1989. </year>
Reference-contexts: Overall, the functional viewpoint centers on enumerating the proper primitives which can be used to organize causal device understanding, and on working out algorithms for utilizing the representation. Similarly motivated research has recently been reported by Chittaro et al in Italy [24], and by Franke at UT-Austin <ref> [25] </ref>. In this section, we characterize a recent extension of the FM methodology to encompass quantitative relationships between state variables of a modeled device. This extension will be described via our test bed example, the automotive cruise control device.
Reference: [26] <author> J. Sticklen, A. Kamel, and W. E. Bond, </author> <title> "Integrating Quantitative and Qualitative Computations in a Functional Framework," </title> <journal> Engineering Applications of Artificial Intelligence, </journal> <volume> vol. 4, no. 1, </volume> <pages> pp. 1-10, </pages> <year> 1991. </year>
Reference-contexts: This extension will be described via our test bed example, the automotive cruise control device. In research carried out in this test bed |and fully described in <ref> [26] </ref>| we have found that the functional viewpoint can be characterized as providing a framework for organizing a series of quantitative calculations. B. The Automatic Cruise Control System The automatic cruise control (ACC) system is a hybrid system that automatically controls the cruising speed of the vehicle.
Reference: [27] <author> J. deKleer and J. S. Brown, </author> <title> "A Qualitative Physics Based on Confluences," </title> <journal> Artificial Intelligence, </journal> <volume> vol. 24, </volume> <pages> pp. 7-83, </pages> <year> 1984. </year>
Reference-contexts: The tasks of compiled level problem solving is to relate associational knowledge directly to desired conclusions. For example, compiled level classification for medical diagnosis relates observations of patient states (signs and symptoms) to diagnostic categories. On the other hand, naive physics <ref> [27] </ref>, [28], [29] addresses the task of deriving the large scale behavior of a device from the behaviors and connections of small scale devices. For example, in the medical area, Kuipers has developed a QSIM-based approach for modeling part of kidney function from known small scale behavior.
Reference: [28] <author> K. Forbus, </author> <title> "Qualitative Process Theory," </title> <journal> Artificial Intelligence, </journal> <volume> vol. 24, </volume> <pages> pp. 85-168, </pages> <year> 1984. </year>
Reference-contexts: The tasks of compiled level problem solving is to relate associational knowledge directly to desired conclusions. For example, compiled level classification for medical diagnosis relates observations of patient states (signs and symptoms) to diagnostic categories. On the other hand, naive physics [27], <ref> [28] </ref>, [29] addresses the task of deriving the large scale behavior of a device from the behaviors and connections of small scale devices. For example, in the medical area, Kuipers has developed a QSIM-based approach for modeling part of kidney function from known small scale behavior.
Reference: [29] <author> B. Kuipers, </author> <title> "Commonsense Reasoning about Causality: Deriving Behavior from Structure," </title> <journal> Artificial Intelligence, </journal> <volume> vol. 24, </volume> <pages> pp. 169-203, </pages> <year> 1984. </year>
Reference-contexts: The tasks of compiled level problem solving is to relate associational knowledge directly to desired conclusions. For example, compiled level classification for medical diagnosis relates observations of patient states (signs and symptoms) to diagnostic categories. On the other hand, naive physics [27], [28], <ref> [29] </ref> addresses the task of deriving the large scale behavior of a device from the behaviors and connections of small scale devices. For example, in the medical area, Kuipers has developed a QSIM-based approach for modeling part of kidney function from known small scale behavior.
Reference: [30] <author> R. Davis, </author> <title> "Model Based Trouble Shooting," </title> <booktitle> in Exploring Artificial Intelligence (H. </booktitle> <editor> Shrobe, ed.), </editor> <publisher> Morgan Kaufmann, </publisher> <year> 1987. </year>
Reference-contexts: Along one dimension, we must select the level at which we want to represent our model. As Davis <ref> [30] </ref> points out, no model is complete. The Functional Representation deals straightforwardly with this fact by including the ability to point to "world knowledge" as the reason for a given state variable transition (in a behavior).
Reference: [31] <author> D. Bobrow, ed., </author> <title> Qualitative Reasoning on Physical Systems. </title> <address> Cambridge, MA: </address> <publisher> MIT Press, </publisher> <year> 1985. </year>
Reference-contexts: Usually, only specifically trained people can interpret the results of numerical simulations. Moreover, if the aspects of the system to be modeled are complex, both the development of models and the simulation run time are expensive in time and money. To mitigate these problems, qualitative simulation <ref> [31] </ref> has been proposed as an alternative way of describing the behavior of a system. Qualitative variables may take a value which belongs to a limited set of mutually exclusive, rank-ordered symbols. The dynamics of variables is constrained by relationships.
Reference: [32] <author> F. E. Cellier and N. Roddier, </author> <title> "Qualitative State Spaces: a Formalization of the Naive Physics Approach to Knowledge-Based Reasoning," </title> <booktitle> in Second Annual AI, Simulation and Planning in High Autonomy Systems Conference (P. </booktitle> <editor> Fishwick, B. </editor> <title> Zeigler, </title> <journal> 14 IEEE TRANSACTIONS ON SYSTEMS, MAN AND CYBERNETICS, </journal> <volume> VOL. XX, NO. </volume> <editor> Y, MONTH 1993 and J. Rozenblit, eds.), </editor> <publisher> (Los Alamitos, </publisher> <address> CA), </address> <publisher> IEEE Computer Society Press, </publisher> <year> 1991. </year>
Reference-contexts: variables or to find numeric values for parameters and initial states; * the user is interested in a whole class of experiments, instead of just the one produced by a numerical model; * the generalization of raw data at a higher level of abstraction makes the decision-making process eas ier <ref> [32] </ref>. In many engineering applications, a numerical description of the behavior of the system is not needed: considerations about general trends can be successfully used to complete the given task.
Reference: [33] <author> A. Bonarini and V. Maniezzo, </author> <title> "Integrating Qualitative and Quantitative Modeling," </title> <journal> International Journal of Expert Systems: Research and Applications, </journal> <volume> vol. 4, no. 1, </volume> <pages> pp. 51 - 70, </pages> <year> 1991. </year>
Reference-contexts: Here, we present a method to integrate these two modeling paradigms, enabling a reuse of existing numerical models. The method has been implemented in QQSIM <ref> [33] </ref>, a system running in Common Lisp and CLOS. B. Basic assumptions We assume that the system to be modeled can be partitioned in two parts: one described qualitatively and the other one numerically.
Reference: [34] <author> B. Kuipers and D. Berleant, </author> <title> "Using Incomplete Quantitative Knowledge in Qualitative Reasoning," </title> <booktitle> in Sixth National Conference on Artificial Intelligence, </booktitle> <address> (San Mateo, CA), </address> <publisher> Morgan Kauf-mann, </publisher> <year> 1988. </year>
Reference-contexts: Each pair &lt; value; trend &gt; is associated to a landmark (or to an interval between landmarks) where it holds. Landmarks are represented by labels and form an ordered set. As in Q3 <ref> [34] </ref> [35], landmarks can be associated to actual numerical values. Constraints among variables state algebraic (ADD, MINUS, MULT), derivative (DERIV), and qualitative (M + ) relationships. The simulation generates states that the system may reach.
Reference: [35] <author> D. Berleant and B. Kuipers, </author> <title> "Combined Qualitative and Numerical Simulation with Q3," in Qualitative Physics '90, </title> <booktitle> (IDSIA, Lugano, </booktitle> <address> Switzerland), </address> <year> 1990. </year>
Reference-contexts: Each pair &lt; value; trend &gt; is associated to a landmark (or to an interval between landmarks) where it holds. Landmarks are represented by labels and form an ordered set. As in Q3 [34] <ref> [35] </ref>, landmarks can be associated to actual numerical values. Constraints among variables state algebraic (ADD, MINUS, MULT), derivative (DERIV), and qualitative (M + ) relationships. The simulation generates states that the system may reach.
Reference: [36] <author> P. A. Fishwick, </author> <title> "Heterogeneous Decomposition and Coupling for Combined Modeling," </title> <booktitle> in 1991 Winter Simulation Conference, </booktitle> <address> (Phoenix, AZ.), </address> <pages> pp. 1120 - 1128, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: However, if the water temperature reaches 100 then the water starts boiling." We present a method that permits this kind of multi-level reasoning. Fishwick and Zeigler [2] have recently discussed a method 3 The study described in this section is an extension of material drawn from two sources <ref> [36] </ref>, [2]. 4 Our concept of multimodel, as in the title of this paper, includes multiple independent models as well as models containing submodels in a hierarchy. It is a more general notion than Oren's multimodel. 10 IEEE TRANSACTIONS ON SYSTEMS, MAN AND CYBERNETICS, VOL. XX, NO.
Reference: [37] <author> P. A. Fishwick, </author> <title> Hierarchical Reasoning: Simulating Complex Processes over Multiple Levels of Abstraction. </title> <type> PhD thesis, </type> <institution> University of Pennsylvania, </institution> <year> 1986. </year>
Reference-contexts: Therefore, it is possible to have an interval-valued time measure for the unshared variables. This is also a significant enhancement with respect to the standard QSIM approach. VI. Multimodel Integration 3 (MI) A. Overview Simulation methodology has developed concepts to model complex systems over multiple levels of abstraction <ref> [37] </ref>, [38], [39]. Oren [40] has developed the definition of multimodel 4 to formalize models containing several submodels, only one of which is put into effect at any time.
Reference: [38] <author> P. A. Fishwick, </author> <title> "The Role of Process Abstraction in Simulation," </title> <journal> IEEE Transactions on Systems, Man and Cybernetics, </journal> <volume> vol. 18, </volume> <pages> pp. 18 - 39, </pages> <month> January/February </month> <year> 1988. </year>
Reference-contexts: Therefore, it is possible to have an interval-valued time measure for the unshared variables. This is also a significant enhancement with respect to the standard QSIM approach. VI. Multimodel Integration 3 (MI) A. Overview Simulation methodology has developed concepts to model complex systems over multiple levels of abstraction [37], <ref> [38] </ref>, [39]. Oren [40] has developed the definition of multimodel 4 to formalize models containing several submodels, only one of which is put into effect at any time. Other groups in the AI community have also addressed the use of multiple models to support multi-level reasoning architectures [24], [41], [42].
Reference: [39] <author> P. A. Fishwick, </author> <title> "Abstraction Level Traversal in Hierarchical Modeling," in Modelling and Simulation Methodology: Knowledge Systems Paradigms (B. </title> <editor> P. Zeigler, M. Elzas, and T. Oren, eds.), pp. </editor> <volume> 393 - 429, </volume> <publisher> Elsevier North Holland, </publisher> <year> 1989. </year>
Reference-contexts: This is also a significant enhancement with respect to the standard QSIM approach. VI. Multimodel Integration 3 (MI) A. Overview Simulation methodology has developed concepts to model complex systems over multiple levels of abstraction [37], [38], <ref> [39] </ref>. Oren [40] has developed the definition of multimodel 4 to formalize models containing several submodels, only one of which is put into effect at any time. Other groups in the AI community have also addressed the use of multiple models to support multi-level reasoning architectures [24], [41], [42].
Reference: [40] <author> T. I. Oren, </author> <title> "Dynamic Templates and Semantic Rules for Simulation Advisors and Certifiers," in Knowledge Based Simulation: Methodology and Application, </title> <journal> pp. </journal> <volume> 53 - 76, </volume> <publisher> Springer Verlag, </publisher> <year> 1991. </year>
Reference-contexts: This is also a significant enhancement with respect to the standard QSIM approach. VI. Multimodel Integration 3 (MI) A. Overview Simulation methodology has developed concepts to model complex systems over multiple levels of abstraction [37], [38], [39]. Oren <ref> [40] </ref> has developed the definition of multimodel 4 to formalize models containing several submodels, only one of which is put into effect at any time. Other groups in the AI community have also addressed the use of multiple models to support multi-level reasoning architectures [24], [41], [42].
Reference: [41] <author> K. D. Forbus and B. Falkenhainer, </author> <title> "Self-Explanatory Simulations: An Integration of Qualitative and Quantitative Knowledge," </title> <booktitle> in AAAI, </booktitle> <pages> pp. 380 - 387, </pages> <year> 1990. </year>
Reference-contexts: Oren [40] has developed the definition of multimodel 4 to formalize models containing several submodels, only one of which is put into effect at any time. Other groups in the AI community have also addressed the use of multiple models to support multi-level reasoning architectures [24], <ref> [41] </ref>, [42]. Cellier [43] developed an approach to combined continuous/discrete event models implemented in a GASP language extension. Prae-hofer [44] extended the Discrete Event System Specification (DEVS) [8] to provide a formalism and a simulation environment for specifying combined continuous/discrete event models.
Reference: [42] <author> S. Addanki, R. Cremonini, and J. S. Penberthy, </author> <title> "Reasoning about Assumptions in Graphs of Models," </title> <booktitle> in Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <pages> pp. 1432 - 1438, IJCAI, </pages> <month> August </month> <year> 1989. </year>
Reference-contexts: Oren [40] has developed the definition of multimodel 4 to formalize models containing several submodels, only one of which is put into effect at any time. Other groups in the AI community have also addressed the use of multiple models to support multi-level reasoning architectures [24], [41], <ref> [42] </ref>. Cellier [43] developed an approach to combined continuous/discrete event models implemented in a GASP language extension. Prae-hofer [44] extended the Discrete Event System Specification (DEVS) [8] to provide a formalism and a simulation environment for specifying combined continuous/discrete event models.
Reference: [43] <author> F. E. </author> <title> Cellier, Combined Continuous System Simulation by Use of Digital Computers: Techniques and Tools. </title> <type> PhD thesis, </type> <institution> Swiss Federal Institute of Technology, </institution> <address> Zurich, </address> <year> 1979. </year>
Reference-contexts: Oren [40] has developed the definition of multimodel 4 to formalize models containing several submodels, only one of which is put into effect at any time. Other groups in the AI community have also addressed the use of multiple models to support multi-level reasoning architectures [24], [41], [42]. Cellier <ref> [43] </ref> developed an approach to combined continuous/discrete event models implemented in a GASP language extension. Prae-hofer [44] extended the Discrete Event System Specification (DEVS) [8] to provide a formalism and a simulation environment for specifying combined continuous/discrete event models. <p> For instance, a combined discrete event/continuous model has two distinct model types: a discrete event model and a continuous model. These two models are coupled with discrete events <ref> [43] </ref>, [44]. C. Multimodels Consider a pot of boiling water on a stovetop electric heating element. Initially, the pot is filled to some predetermined level with water. A small amount of detergent is added to simulate the foaming activity that occurs naturally when boiling certain foods.
Reference: [44] <author> H. Praehofer, </author> <title> "Systems Theoretic Formalisms for Combined Discrete Continuous System Simulation," </title> <journal> International Journal of General Systems, </journal> <volume> vol. 19, no. 3, </volume> <pages> pp. 219-240, </pages> <year> 1991. </year>
Reference-contexts: Other groups in the AI community have also addressed the use of multiple models to support multi-level reasoning architectures [24], [41], [42]. Cellier [43] developed an approach to combined continuous/discrete event models implemented in a GASP language extension. Prae-hofer <ref> [44] </ref> extended the Discrete Event System Specification (DEVS) [8] to provide a formalism and a simulation environment for specifying combined continuous/discrete event models. <p> For instance, a combined discrete event/continuous model has two distinct model types: a discrete event model and a continuous model. These two models are coupled with discrete events [43], <ref> [44] </ref>. C. Multimodels Consider a pot of boiling water on a stovetop electric heating element. Initially, the pot is filled to some predetermined level with water. A small amount of detergent is added to simulate the foaming activity that occurs naturally when boiling certain foods.
Reference: [45] <author> T. I. Oren, </author> <title> "Simulation Model Symbolic Processing: Taxonomy," </title> <booktitle> in Systems and Control Encyclopedia, </booktitle> <pages> pp. 4377 - 4381, </pages> <publisher> Pergammon Press, </publisher> <year> 1987. </year>
Reference-contexts: A Discrete Time model has a discrete time space with equal time intervals (the state space may be either discrete or continuous). A Continuous model has continuous time and space. Table I displays these combinations with example model formalisms for each. What about continuous events? In the simulation literature <ref> [45] </ref>, [46], one finds reference only to discrete events. Continuous events might be defined in terms of the start and end of an arbitrary numerical integration interval. However, this concept is not adequate since it depends on a simulation process, and is not an intrinsic characteristic of the model.
Reference: [46] <author> T. I. Oren, </author> <title> "Simulation: Taxonomy," </title> <booktitle> in Systems and Control Encyclopedia, </booktitle> <pages> pp. 4411 - 4414, </pages> <publisher> Pergammon Press, </publisher> <year> 1987. </year>
Reference-contexts: A Continuous model has continuous time and space. Table I displays these combinations with example model formalisms for each. What about continuous events? In the simulation literature [45], <ref> [46] </ref>, one finds reference only to discrete events. Continuous events might be defined in terms of the start and end of an arbitrary numerical integration interval. However, this concept is not adequate since it depends on a simulation process, and is not an intrinsic characteristic of the model.
Reference: [47] <author> L. Padulo and M. A. Arbib, </author> <title> Systems Theory: A Unified State Space Approach to Continuous and Discrete Systems. </title> <address> Philadel-phia, PA: </address> <publisher> W. B. Saunders, </publisher> <year> 1974. </year>
Reference-contexts: Dynamic models all have the following components: (1) state/event space, (2) time space, (3) parameter space, (4) input/output space and (5) the type of relations or functions used to link the first four spaces together. This categorization is in accordance with the basic concept of system <ref> [47] </ref>. The components of a geometric model are the representational structure (struc) it uses and operations (oper) provided on this structure. By cross-correlating the four approaches with their dynamic and geometric facets, we can obtain a grasp of how the four methods are situated with respect to one another.

References-found: 47

