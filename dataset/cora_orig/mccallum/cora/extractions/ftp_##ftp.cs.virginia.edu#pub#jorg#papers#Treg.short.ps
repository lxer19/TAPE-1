URL: ftp://ftp.cs.virginia.edu/pub/jorg/papers/Treg.short.ps
Refering-URL: http://www.cs.virginia.edu/~gwtts/mng/papers/
Root-URL: http://www.cs.virginia.edu
Email: fjorg,act9mg@cs.virginia.edu  
Title: A Protocol for Relative Quality-of-Service in  
Author: TCP/IP-based Internetworks Jorg Liebeherr Alan Tai 
Address: Charlottesville, VA 22903  
Affiliation: Department of Computer Science University of Virginia  
Abstract: A new protocol is presented that controls the quality-of-service of simplex end-to-end packet streams in a TCP/IP based internetwork. The protocol, called TReg for Transport Regulation, limits the use of network resources by a rate control mechanism implemented at the traffic sources. The set of flows is partitioned into different traffic classes based on the application type, e.g., video traffic, audio traffic, or bulk data. The rate control mechanisms at the traffic sources adapt to the current traffic load such that flows within the same traffic class obtain the same quality-of-service (Relative Quality-of-Service). Measurements of a prototype implementation in a network of workstations demonstrate the effectiveness of the TReg protocol. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Bertsekas and R. Gallagher. </author> <title> Data Networks, 2nd Ed. </title> <publisher> Prentice Hall, </publisher> <year> 1992. </year>
Reference-contexts: Relative QoS does not provide admission control functions, hence, the number of flows in the network may grow arbitrarily large. As a consequence, the QoS of a flow can also degrade arbitrarily. Theoretical concepts for relative QoS have been studied before <ref> [1, 5, 6, 7] </ref>. For example, in the schemes investigated in [5, 6], all flows whose throughput is limited by the same network resource have identical throughput constraints. Obviously, the performance guarantees with relative QoS are weaker than those obtainable with absolute QoS. <p> Flows are assumed to be partitioned into flow classes. Intra-class fairness enforces that flows from the same class that consume identical resource types have identical throughput constraints (max-min fairness <ref> [1] </ref>). Inter-class fairness controls the resource consumption of entire flow classes by enforcing throughput bounds on the total traffic from all flows of a class.
Reference: [2] <author> D. D. Clark, S. Shenker, and L. Zhang. </author> <title> Supporting Real-Time Applications in an Integrated Services Packet Network: Architecture and Mechanisms. </title> <booktitle> In Proc. Sigcomm '92, </booktitle> <pages> pages 14-26, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: Network architectures that provide absolute QoS include the Tenet Protocol Suite [4], RSVP [9], and the ISPN architecture in <ref> [2] </ref>. Note that a transition of ubiquitous TCP/IP-based networks to absolute QoS requires fundamental changes to the communication software of hosts and routers.
Reference: [3] <editor> S. J. Le*er et. al. </editor> <title> Networking implementation notes-4.3bsd edition. </title> <type> Technical report, </type> <institution> Department of Computer Science, University of California, Berkeley, </institution> <year> 1986. </year>
Reference-contexts: Since TReg uses the standard TCP and UDP protocols for data transfer and control, it can be installed onto any network that uses the TCP/IP protocol suite. The application programming interface of TReg is almost identical to the widely used BSD Socket <ref> [3] </ref> interface. Thus, any application program that uses BSD sockets for communication can be easily converted to TReg with minimal changes to the source code. Finally, the implementation of TReg does not require any changes to the kernel of the hosts' operating systems.
Reference: [4] <author> D. Ferrari, A. Banerjea, and H. Zhang. </author> <title> Network Support for Multimedia A Discussion of the Tenet Approach. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 26(10) </volume> <pages> 1167-1180, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: Absolute QoS requires the network to reserve resources for each flow, as well as use admission control functions to determine whether the network has sufficient resources to support the QoS of a new flow. Network architectures that provide absolute QoS include the Tenet Protocol Suite <ref> [4] </ref>, RSVP [9], and the ISPN architecture in [2]. Note that a transition of ubiquitous TCP/IP-based networks to absolute QoS requires fundamental changes to the communication software of hosts and routers.
Reference: [5] <author> J. M. Jaffe. </author> <title> Bottleneck Flow Control. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 29(7) </volume> <pages> 954-962, </pages> <month> July </month> <year> 1981. </year>
Reference-contexts: Relative QoS does not provide admission control functions, hence, the number of flows in the network may grow arbitrarily large. As a consequence, the QoS of a flow can also degrade arbitrarily. Theoretical concepts for relative QoS have been studied before <ref> [1, 5, 6, 7] </ref>. For example, in the schemes investigated in [5, 6], all flows whose throughput is limited by the same network resource have identical throughput constraints. Obviously, the performance guarantees with relative QoS are weaker than those obtainable with absolute QoS. <p> As a consequence, the QoS of a flow can also degrade arbitrarily. Theoretical concepts for relative QoS have been studied before [1, 5, 6, 7]. For example, in the schemes investigated in <ref> [5, 6] </ref>, all flows whose throughput is limited by the same network resource have identical throughput constraints. Obviously, the performance guarantees with relative QoS are weaker than those obtainable with absolute QoS.
Reference: [6] <author> J. Liebeherr, I.F. Akyildiz, and D. Sarkar. </author> <title> Bandwidth Regulation of Real-Time Traffic Classes in Internet-works. </title> <type> Technical Report CS-94-24, </type> <institution> University of Vir-ginia, Department of Computer Science, </institution> <month> June </month> <year> 1994. </year>
Reference-contexts: Relative QoS does not provide admission control functions, hence, the number of flows in the network may grow arbitrarily large. As a consequence, the QoS of a flow can also degrade arbitrarily. Theoretical concepts for relative QoS have been studied before <ref> [1, 5, 6, 7] </ref>. For example, in the schemes investigated in [5, 6], all flows whose throughput is limited by the same network resource have identical throughput constraints. Obviously, the performance guarantees with relative QoS are weaker than those obtainable with absolute QoS. <p> As a consequence, the QoS of a flow can also degrade arbitrarily. Theoretical concepts for relative QoS have been studied before [1, 5, 6, 7]. For example, in the schemes investigated in <ref> [5, 6] </ref>, all flows whose throughput is limited by the same network resource have identical throughput constraints. Obviously, the performance guarantees with relative QoS are weaker than those obtainable with absolute QoS. <p> There is one TReg daemon at each host and TReg daemons at different hosts communicate with each other to determine the maximum rate of each source. In a previous study <ref> [6] </ref> it was shown that these mechanisms are sufficient to effectively support relative QoS in a general packet-switched network. Within this scope, TReg is designed with the following goals in mind: Transparent Operation: Network applications whose flows are rate-controlled by TReg need not be aware of TReg's rate control mechanisms. <p> enhancement to the widely used TCP/IP protocol suite and the BSD Socket programming interface, existing network applications can be ported to TReg without significant changes to the applications themselves, Currently, TReg provides a notion of relative QoS that is based on the concepts of (intra-class fairness) and inter-class fairness from <ref> [6] </ref>. Flows are assumed to be partitioned into flow classes. Intra-class fairness enforces that flows from the same class that consume identical resource types have identical throughput constraints (max-min fairness [1]). <p> Periodically, a resource monitor calculates the maximum rate at which flows from each class can send data to the resource (resource share). The details of the calculations which are based on expressions derived in <ref> [6] </ref> are not given here. The flow managers collect the resource shares from the resource monitors and translate them into maximum transmission rates for each flow, called flow shares. The flow shares are sent to the TReg stubs of the sending applications to adjust the credit mechanism of the rate-controllers.
Reference: [7] <author> M. Steenstrup. </author> <title> Fair Share for Resource Allocation. </title> <type> Technical report, </type> <institution> BBN Systems and Technologies, ftp://clynn.bbn.com/pub/docs/FairShare.draft9312.ps, </institution> <month> December </month> <year> 1992. </year>
Reference-contexts: Relative QoS does not provide admission control functions, hence, the number of flows in the network may grow arbitrarily large. As a consequence, the QoS of a flow can also degrade arbitrarily. Theoretical concepts for relative QoS have been studied before <ref> [1, 5, 6, 7] </ref>. For example, in the schemes investigated in [5, 6], all flows whose throughput is limited by the same network resource have identical throughput constraints. Obviously, the performance guarantees with relative QoS are weaker than those obtainable with absolute QoS.
Reference: [8] <author> J. S. Turner. </author> <title> New Directions in Communications (or Which Way to the Information Age?). </title> <journal> IEEE Communications Magazine, </journal> <volume> 25(8) </volume> <pages> 8-15, </pages> <month> October </month> <year> 1986. </year>
Reference-contexts: The rate-controller at a flow source is a variation of the leaky bucket <ref> [8] </ref> that restricts the maximum traffic rate of a flow source. In our implementation, credits are added to the leaky bucket only up to a maximum number of credits. A packet is transmitted only if sufficient credits are available, and each packet transmission reduces the number of credits.
Reference: [9] <author> L. Zhang, S. E. Deering, D. Estrin, and S. Shenker. RSVP: </author> <title> A New Resource ReSerVation Protocol. </title> <journal> IEEE Network, </journal> <volume> 7(5) </volume> <pages> 8-18, </pages> <month> September </month> <year> 1993. </year> <month> 4 </month>
Reference-contexts: Absolute QoS requires the network to reserve resources for each flow, as well as use admission control functions to determine whether the network has sufficient resources to support the QoS of a new flow. Network architectures that provide absolute QoS include the Tenet Protocol Suite [4], RSVP <ref> [9] </ref>, and the ISPN architecture in [2]. Note that a transition of ubiquitous TCP/IP-based networks to absolute QoS requires fundamental changes to the communication software of hosts and routers.
References-found: 9

