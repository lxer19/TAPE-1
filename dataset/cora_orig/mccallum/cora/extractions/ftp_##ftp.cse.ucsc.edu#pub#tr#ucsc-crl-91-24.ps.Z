URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-91-24.ps.Z
Refering-URL: ftp://ftp.cse.ucsc.edu/pub/tr/README.html
Root-URL: http://www.cse.ucsc.edu
Title: Carafe: An Inductive Fault Analysis Tool For CMOS VLSI Circuits  
Author: Alvin Lun-Knep Jee F. Joel Ferguson Kevin Karplus Tracy Larrabee Dean 
Degree: A thesis submitted in partial satisfaction of the requirements for the degree of Master of Science in Computer Engineering by  The thesis of Alvin Lun-Knep Jee is approved:  
Date: June 1991  
Affiliation: University of California Santa Cruz  of Graduate Studies and Research  
Abstract-found: 0
Intro-found: 1
Reference: [ABF90] <author> Miron Abramovici, Melvin A. Breuer, and Arthur D. Friedman. </author> <title> Digital Systems Testing and Testable Design. </title> <publisher> Computer Science Press, </publisher> <year> 1990. </year>
Reference-contexts: When testing new ICs, it may be that there are more than 7 one fault present, but in most cases, multiple faults can be detected by using the tests that were generated to detect single faults <ref> [ABF90] </ref>. The first fault model we will consider the single-stuck-at fault model. 2.3.1 Stuck-at Fault Model The most popular logical fault model is the single-stuck-at (SSA) fault model. The SSA fault model deals with a circuit at the logic gate level.
Reference: [Ack88] <author> John M. Acken. </author> <title> Deriving Accurate Fault Models. </title> <type> PhD thesis, </type> <institution> Stanford University, </institution> <year> 1988. </year>
Reference-contexts: Bridge Fault Voting Model This bridge fault model deals not with logic gates, but with the transistors that make up the logic gate <ref> [Ack88] </ref>. This model was created because in CMOS technologies, knowing the 9 logic values on the output of the bridged gates is sometimes not enough to determine the resulting logic value.
Reference: [BBB + 87] <author> R.E. Bryant, D. Beatty, K. Brace, K. Cho, and T. She*er. COSMOS: </author> <title> A compiled simulator for MOS circuits. </title> <booktitle> In Proceedings of Design Automation Conference, </booktitle> <pages> pages 9-16. </pages> <publisher> ACM and IEEE, </publisher> <year> 1987. </year>
Reference-contexts: With these extra transistors, each fault may be simulated to determine the effect of the fault on the circuit as a whole. Carafe automatically generates scripts for fault simulation that can be used directly with the switch-level simulator COSMOS <ref> [BBB + 87] </ref>. 2 For each fault found by Carafe, the relative likelihood of occurrence is calculated and reported. This likelihood is made relative to all of the other faults that were found in the circuit and indicates the relative importance of detecting the fault.
Reference: [BF85] <author> F. Brglez and H. Fujiwara. </author> <title> A neutral netlist of 10 combinational benchmark circuits and a target translator in FORTRAN. </title> <booktitle> In Proceedings of the IEEE International Symposium on Circuits and Systems, </booktitle> <year> 1985. </year>
Reference-contexts: The equation of the final sensitive area for a specific circuit fault is given in Equation 3.6. F inalSA = X r2Defect radii X SA i (radius [r])DD (layers i ; r) (3:6) 24 4. Results Carafe was used to analyze the set of standard ISCAS'85 benchmark circuits <ref> [BF85] </ref> implemented using a CMOS standard cells by the Mircoelectronics Center of North Carolina. Since the MCNC implementations of the benchmark circuits were in a hierarchical, standard cell form, they were flattened into one level of hierarchy before extracting the faults.
Reference: [Fer87] <author> F. Joel Ferguson. </author> <title> Inductive Fault Analysis of VLSI Circuits. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon University, Department of Electrical and Computer Engineering, </institution> <month> October </month> <year> 1987. </year>
Reference-contexts: The problem is that the traditional method does not consider the actual faults that can occur. In order to generate effective tests, we must first determine the faults that can occur. Inductive fault analysis (IFA) <ref> [Fer87] </ref> was developed to do just that. IFA uses the layout of a circuit along with certain defect parameters to determine exactly what alterations occur to the circuit as a result of defects.
Reference: [FS88] <author> F. Joel Ferguson and John P. Shen. </author> <title> A CMOS fault extractor for inductive fault analysis. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 7(11) </volume> <pages> 1181-1194, </pages> <month> November </month> <year> 1988. </year>
Reference-contexts: When the SSA model was developed, the primary fabrication technology was TTL. In TTL logic, many defects do indeed manifest themselves as a logical stuck fault. Unfortunately, many of the defects that can occur in current CMOS processes are not manifested as logical stuck-at faults <ref> [FS88] </ref>. 2.3.2 Bridge Fault Models In bipolar logic, break faults tend to cause signal wires to be stuck at a specific logic value. Bridge faults do not have that effect and may not show up as stuck-at faults. <p> Since traditional fault models do not take defects into account at all, it is unlikely that tests generated from those fault models will consistently detect enough defects to ensure adequate quality levels <ref> [FS88] </ref>. The last two bridge fault models presented 11 in the previous section dealt with defects directly, but in order for those models to be feasible, the list of possible defects for the IC must be known.
Reference: [GCV80] <author> J. Galiay, Y. Crouzet, and M. Vergniault. </author> <title> Physical versus logical fault models in mos lsi circuits: Impact on their testability. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-29(6):283-287, </volume> <month> June </month> <year> 1980. </year>
Reference: [Jee90] <author> Alvin Jee. </author> <title> Carafe user's manual. </title> <type> Technical Report UCSC-CRL-90-61, </type> <institution> University of California at Santa Cruz, </institution> <year> 1990. </year>
Reference-contexts: This was done so that the extraction of the circuit's transistors would not involve computationally expensive geometric operations. A quick check of the tile's contents can reveal the locations of the transistors. For more information refer to the Carafe User's Manual <ref> [Jee90] </ref>. 3.6.2 Circuit Extraction The circuit extraction done by Carafe is similar to the circuit extraction done by Magic [SO86]. The extractor groups the tiles into electrical nodes by a recursive algorithm.
Reference: [MB88] <author> E.J. McCluskey and F. Buelow. </author> <title> IC quality and test transparency. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <pages> pages 295-301. </pages> <publisher> IEEE, </publisher> <year> 1988. </year>
Reference-contexts: This may or may not be true depending on the effectiveness each stage of the test. Defective ICs that have passed one stage of the test are not guaranteed to be detected by the next stage. Documentation of faulty ICs passing all stages was presented by Williams and McCluskey <ref> [WB81, MB88] </ref>. 2.2 Definitions Since some of the terms used in this thesis have been used inconsistently in the literature, they will be defined here. Defects: anomalies that occur during the fabrication of the IC.
Reference: [OHM + 84] <author> John K. Ousterhout, Gordon T. Hamachi, Robert N. Mayo, Walter S. Scott, and George S. Taylor. </author> <title> Magic: A VLSI layout system. </title> <booktitle> In Proceedings of the Design Automation Conference, </booktitle> <pages> pages 152-159, </pages> <year> 1984. </year>
Reference-contexts: Carafe can read electronic representations of circuit layout in either the Calma GDS format or the Berkeley Magic format. 20 The internal representation of a layout is kept in a data structure similar to the data structure of the Berkeley Magic CAD tool <ref> [OHM + 84] </ref>. The layouts are represented in a series of planes which contain corner-stitched tiles representing the regions of material used in the fabrication process. The structure of the tiles allows efficient area searches and enumerations, which are used frequently in the circuit and fault extraction algorithms.
Reference: [SMF85] <author> J.P. Shen, W. Maly, and F.J. Ferguson. </author> <title> Inductive fault analysis of MOS integrated circuits. </title> <journal> IEEE Design and Test of Computers, </journal> <volume> 2(6) </volume> <pages> 13-26, </pages> <month> December </month> <year> 1985. </year>
Reference: [SO86] <author> Walter S. Scott and John K. Ousterhout. </author> <title> Magic's circuit extractor. </title> <booktitle> IEEE Design and Test, </booktitle> <pages> pages 24-34, </pages> <month> February </month> <year> 1986. </year>
Reference-contexts: A quick check of the tile's contents can reveal the locations of the transistors. For more information refer to the Carafe User's Manual [Jee90]. 3.6.2 Circuit Extraction The circuit extraction done by Carafe is similar to the circuit extraction done by Magic <ref> [SO86] </ref>. The extractor groups the tiles into electrical nodes by a recursive algorithm. Two touching tiles are considered to be in the same electrical node if they are the same type or they are specified to be electrically connected in the technology file.
Reference: [WB81] <author> Thomas W. Williams and N. C. Brown. </author> <title> Defect level as a function of fault coverage. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-30(12):987-988, </volume> <month> December </month> <year> 1981. </year>
Reference-contexts: This may or may not be true depending on the effectiveness each stage of the test. Defective ICs that have passed one stage of the test are not guaranteed to be detected by the next stage. Documentation of faulty ICs passing all stages was presented by Williams and McCluskey <ref> [WB81, MB88] </ref>. 2.2 Definitions Since some of the terms used in this thesis have been used inconsistently in the literature, they will be defined here. Defects: anomalies that occur during the fabrication of the IC.
References-found: 13

