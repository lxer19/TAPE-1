URL: http://www.cs.wisc.edu/~vernon/cs747/97/papers/mm.97sigm.ps
Refering-URL: http://www.cs.wisc.edu/~vernon/cs747/cs747.html
Root-URL: 
Email: tsiolis@cs.wisc.edu  vernon@cs.wisc.edu  
Title: Group-Guaranteed Channel Capacity in Multimedia Storage Servers  
Author: Athanassios K. Tsiolis Mary K. Vernon 
Address: 1210 West Dayton Street Madison, WI 53706, U.S.A.  
Affiliation: Computer Sciences Department University of Wisconsin-Madison  
Abstract: One of the open questions in the design of multimedia storage servers is in what order to serve incoming requests. Given the capability provided by the disk layout and scheduling algorithms to serve multiple streams simultaneously, improved request scheduling algorithms can reduce customer waiting times. This results in better service and/or lower customer loss. In this paper we define a new class of request scheduling algorithms, called Group-Guaranteed Server Capacity (GGSC), that preassign server channel capacity to groups of objects. We also define a particular formal method for computing the assigned capacities to achieve a given performance objective. We observe that the FCFS policy can provide the precise time of service to incoming customer requests. Under this assumption, we compare the performance of one of the new GGSC algorithms, GGSC W -FCFS, against FCFS and against two other recently proposed scheduling algorithms: Maximum Factored Queue length (MFQ), and the FCFS-n algorithm that preassigns capacity only to each of the n most popular objects. The algorithms are compared for both competitive market and captured audience environments. Key findings of the algorithm comparisons are that: (1) FCFS-n has no advantage over FCFS if FCFS gives time of service guarantees to arriving customers, (2) FCFS and GGSC W -FCFS are superior to MFQ for both competitive and captive audience environments, (3) for competitive servers that are configured for customer loss less than 10%, FCFS is superior to all other algorithms examined in this paper, and (4) for captive audience environments that have objects with variable playback length, GGSC W -FCFS is the most promising of the policies considered in this paper. The conclusions for FCFS-n and MFQ differ from previous work because we focus on competitive environments with customer loss under 10%, we assume FCFS can provide time of service guarantees to all arriving customers, and we consider the distribution of customer waiting time as well as the average waiting time. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> AGGARWAL, C. C., WOLF, J. L., AND YU, P. S. </author> <title> On optimal batching policies for video-on-demand storage servers. </title> <booktitle> In Proceeding of the IEEE International Conference on Multimedia Computing and Systems (Hiroshima, </booktitle> <address> Japan, </address> <month> June </month> <year> 1996). </year>
Reference-contexts: Given the capability provided by the disk layout and scheduling to serve multiple streams simultaneously, improved request scheduling can reduce customer waiting times. This in turn results in better service and/or lower customer loss. Several previous papers have investigated request scheduling policies for multimedia servers <ref> [11, 15, 7, 5, 2, 1] </ref>. One difficulty in evaluating the algorithms is that the characteristics of multimedia server requests are currently unknown. Only a few prototype systems are in existence. Workloads on these systems have not been reported and may not be representative of future workloads anyway. <p> More importantly, a recent paper by Aggarwal, Wolf, and Yu <ref> [1] </ref> shows that an algorithm called Maximum Factored Queue length (MFQ) minimizes average wait at full capacity, and also has lower customer loss than FCFS for particular points in the system design space. <p> simulation), and section 6 provides the conclusions and future directions for this work. 2 Request Scheduling Algorithms Below we review the first-come first-served (FCFS) algorithm, a related family of scheduling algorithms known as FCFS-n which were proposed in [11], and the maximum factored queue length first (MFQ) policy described in <ref> [1] </ref>. We then define a new family of scheduling algorithms, Group Guaranteed Server Capacity (GGSC). These algorithms will be compared in this paper. <p> Another previously proposed algorithm, maximum queue length first (MQL), is not considered in this paper since previous work has shown that MQL has some undesirable performance characteristics [11], and MFQ is more intelligently aggressive in scheduling the more popular objects for playback <ref> [1] </ref>. In defining each algorithm, we will use the term channel to denote the set of resources needed to deliver a multimedia stream. As discussed in section 1, we assume that multiple channels can operate simultaneously. <p> influenced customer behavior [11]. 2.2 Maximum Factored Queue Length (MFQ) The objective of MFQ is to optimally batch customer requests by scheduling the object with the maximum factored queue length, where the factored queue length is a weighted queue length designed to minimize overall mean waiting time for customer requests <ref> [1] </ref>. This factored queue length is derived as follows for a system in which all objects have the same playback length, L. <p> The factored queue length for MFQ is derived by solving the following optimization problem: Minimize M m=1 such that M m=1 and T m &gt; 0: As explained in <ref> [1] </ref>, the optimal solution occurs when: T 1 f 1 = T 2 f 2 = : : : = T M f M : (1) The average batch size for object m, B m , is equal to f m lT m if customers never defect before receiving service. <p> In this case, the object to be scheduled when a channel becomes available is the one with the maximum: q m DT m . We call this policy MFQ-instant-f. Note that <ref> [1] </ref> states that the above derivation holds for systems with unequal object lengths, where L above denotes the average playback length. Thus, they claim, the same factored queue lengths will minimize mean wait for unequal length objects. However, this is incorrect. <p> Unless otherwise specified, the experiments use the Zipf (0) distribution of object selection frequencies. The simulators for FCFS and FCFS-n were validated by generating the curves in [11] and the MFQ simulator was validated by generating some of the results in <ref> [1] </ref>. Confidence intervals were generated by the method of batch means after discarding the ini (competitive environment; tolerance: 5 or model B) tial transient. For the results given below, 95% confidence intervals were within 5% of the reported values. <p> Tolerance model A: In model A, customer tolerance follows the Normal (5, 1.67) distribution (see figure 4). This model was used in <ref> [1] </ref>; thus, in addition to its intuitive appeal, it enables comparison of our results with previous results. 7 (tolerance model A) (tolerance model A; 2200 channels, FCFS loss = 1%) the number of channels in the system. For configurations with customer loss above 10%, MFQ has lower loss than FCFS. <p> For configurations with customer loss above 10%, MFQ has lower loss than FCFS. This agrees with previous results in <ref> [1] </ref>. However, as discussed above, competitive systems will likely be configured for customer loss less than 10%. For such systems, FCFS has lower customer loss than MFQ, except for extremely low loss high-end configurations where the two algorithms have nearly equal cost. <p> Note that this conclusion differs from prior work <ref> [1] </ref> primarily because we focus on systems with target loss under 10%. <p> We consider the average and distribution of customer waiting time as a function of system cost (number of channels) and as a function of object popularity. This range of metrics provides a more complete comparison of MFQ and FCFS than in prior work <ref> [1] </ref>. Section 5.2.1 considers the simple case where all objects have equal playback length; section 5.2.2 considers the perhaps more realistic case where objects have different playback lengths.
Reference: [2] <author> ALMEROTH, K., DAN, A., SITARAM, D., AND TETZLAFF, W. </author> <title> Long-term channel allocation strategies for video applications. </title> <type> Tech. Rep. </type> <institution> GIT-CC-95-45, RC 20249, Georgia Tech, IBM Research Report, </institution> <address> Yorktown Heights, NY, </address> <year> 1995. </year>
Reference-contexts: Given the capability provided by the disk layout and scheduling to serve multiple streams simultaneously, improved request scheduling can reduce customer waiting times. This in turn results in better service and/or lower customer loss. Several previous papers have investigated request scheduling policies for multimedia servers <ref> [11, 15, 7, 5, 2, 1] </ref>. One difficulty in evaluating the algorithms is that the characteristics of multimedia server requests are currently unknown. Only a few prototype systems are in existence. Workloads on these systems have not been reported and may not be representative of future workloads anyway.
Reference: [3] <author> BERSON, S., GOLUBCHIK, L., AND MUNTZ, R. R. </author> <title> Fault tolerant design of multimedia servers. </title> <booktitle> In Proceedings of the 1995 ACM SIGMOD International Conference on Management of Data (San Jose, </booktitle> <address> CA, USA, </address> <month> May </month> <year> 1995), </year> <pages> pp. 364375. </pages>
Reference-contexts: Vendors are seeking solutions. Careful performance evaluations of the design options can contribute to the effort. Several papers in the literature address the challenging issues of data layout, disk scheduling <ref> [4, 14, 13, 9, 3, 6] </ref> and buffer management [8, 17, 16, 10]. Intelligent data layout and disk scheduling, such as the staggered striping algorithm proposed by Berson et. al. [4], increases the number of multimedia streams that can be delivered simultaneously from a given disk or collection of disks.
Reference: [4] <author> BERSON, S., MUNTZ, R., GHANDEHARIZADEH, S., AND JU, X. </author> <title> Staggered striping in multimedia information systems. </title> <booktitle> In Proceedings of the 1994 ACM SIGMOD International Conference on Management of Data (Minneapolis, </booktitle> <address> Minnesota, USA, </address> <month> May </month> <year> 1994), </year> <pages> pp. 7990. 12 </pages>
Reference-contexts: Vendors are seeking solutions. Careful performance evaluations of the design options can contribute to the effort. Several papers in the literature address the challenging issues of data layout, disk scheduling <ref> [4, 14, 13, 9, 3, 6] </ref> and buffer management [8, 17, 16, 10]. Intelligent data layout and disk scheduling, such as the staggered striping algorithm proposed by Berson et. al. [4], increases the number of multimedia streams that can be delivered simultaneously from a given disk or collection of disks. <p> Several papers in the literature address the challenging issues of data layout, disk scheduling [4, 14, 13, 9, 3, 6] and buffer management [8, 17, 16, 10]. Intelligent data layout and disk scheduling, such as the staggered striping algorithm proposed by Berson et. al. <ref> [4] </ref>, increases the number of multimedia streams that can be delivered simultaneously from a given disk or collection of disks. Sophisticated buffer management algorithms, such as the one proposed by Dan and Sitaram in [8], can further increase effective disk bandwidth by serving some streams from available primary memory.
Reference: [5] <author> DAN, A., DIAS, D. M., MUKHERJEE, R., SITARAM, D., AND TEWARI, R. </author> <title> Buffering and caching in large-scale video servers. </title> <booktitle> In Proceedings of IEEE CompCon (San Francisco, </booktitle> <month> March </month> <year> 1995), </year> <pages> pp. 217224. </pages>
Reference-contexts: Given the capability provided by the disk layout and scheduling to serve multiple streams simultaneously, improved request scheduling can reduce customer waiting times. This in turn results in better service and/or lower customer loss. Several previous papers have investigated request scheduling policies for multimedia servers <ref> [11, 15, 7, 5, 2, 1] </ref>. One difficulty in evaluating the algorithms is that the characteristics of multimedia server requests are currently unknown. Only a few prototype systems are in existence. Workloads on these systems have not been reported and may not be representative of future workloads anyway.
Reference: [6] <author> DAN, A., KIENZLE, M., AND SITARAM, D. </author> <title> A dynamic policy of segment replication for load-balancing in video-on-demand servers. </title> <journal> ACM/Springer-Verlang Multimedia Systems Journal 3, </journal> <month> 3 </month> <year> (1995). </year>
Reference-contexts: Vendors are seeking solutions. Careful performance evaluations of the design options can contribute to the effort. Several papers in the literature address the challenging issues of data layout, disk scheduling <ref> [4, 14, 13, 9, 3, 6] </ref> and buffer management [8, 17, 16, 10]. Intelligent data layout and disk scheduling, such as the staggered striping algorithm proposed by Berson et. al. [4], increases the number of multimedia streams that can be delivered simultaneously from a given disk or collection of disks.
Reference: [7] <author> DAN, A., SHAHABUDDIN, P., SITARAM, D., AND TOWSLEY, D. </author> <title> Channel allocation under batching and VCR control in movie-on-demand servers. </title> <journal> Journal of Parallel and Distributed Computing 30, </journal> <month> 2 (November </month> <year> 1995), </year> <month> 168179. </month>
Reference-contexts: Given the capability provided by the disk layout and scheduling to serve multiple streams simultaneously, improved request scheduling can reduce customer waiting times. This in turn results in better service and/or lower customer loss. Several previous papers have investigated request scheduling policies for multimedia servers <ref> [11, 15, 7, 5, 2, 1] </ref>. One difficulty in evaluating the algorithms is that the characteristics of multimedia server requests are currently unknown. Only a few prototype systems are in existence. Workloads on these systems have not been reported and may not be representative of future workloads anyway. <p> Dan et. al. have shown that extra contingency channels can be used effectively to handle pausing and fast-forwarding by clients who are viewing a multicast object <ref> [7] </ref>. The algorithms evaluated in this paper deal only with scheduling the primary channels and assume that multiple requests for an object can be scheduled on a single channel.
Reference: [8] <author> DAN, A., AND SITARAM, D. </author> <title> Buffer management policy for an on-demand video server. </title> <type> Tech. Rep. </type> <institution> RC 19347, IBM T.J. Watson Research Center, </institution> <address> Yorktown Heights, NY 10598, </address> <year> 1993. </year>
Reference-contexts: Vendors are seeking solutions. Careful performance evaluations of the design options can contribute to the effort. Several papers in the literature address the challenging issues of data layout, disk scheduling [4, 14, 13, 9, 3, 6] and buffer management <ref> [8, 17, 16, 10] </ref>. Intelligent data layout and disk scheduling, such as the staggered striping algorithm proposed by Berson et. al. [4], increases the number of multimedia streams that can be delivered simultaneously from a given disk or collection of disks. <p> Sophisticated buffer management algorithms, such as the one proposed by Dan and Sitaram in <ref> [8] </ref>, can further increase effective disk bandwidth by serving some streams from available primary memory. Assuming that customer request arrivals are bursty, and thus there are (short) periods during which demand exceeds server capacity, another challenging resource management issue for multimedia servers is in what order to serve incoming requests.
Reference: [9] <author> DAN, A., AND SITARAM, D. </author> <title> An online video placement policy based on bandwidth to space ratio (BSR). </title> <booktitle> In Proceedings of the 1995 ACM SIGMOD International Conference on Management of Data (San Jose, </booktitle> <address> CA, USA, </address> <month> May </month> <year> 1995), </year> <pages> pp. 376 385. </pages>
Reference-contexts: Vendors are seeking solutions. Careful performance evaluations of the design options can contribute to the effort. Several papers in the literature address the challenging issues of data layout, disk scheduling <ref> [4, 14, 13, 9, 3, 6] </ref> and buffer management [8, 17, 16, 10]. Intelligent data layout and disk scheduling, such as the staggered striping algorithm proposed by Berson et. al. [4], increases the number of multimedia streams that can be delivered simultaneously from a given disk or collection of disks.
Reference: [10] <author> DAN, A., AND SITARAM, D. </author> <title> A generalized interval caching policy for mixed interactive and long video workloads. Multimedia Computing and Networking (January 1996). </title> <institution> IBM Research Report RC 20206. </institution>
Reference-contexts: Vendors are seeking solutions. Careful performance evaluations of the design options can contribute to the effort. Several papers in the literature address the challenging issues of data layout, disk scheduling [4, 14, 13, 9, 3, 6] and buffer management <ref> [8, 17, 16, 10] </ref>. Intelligent data layout and disk scheduling, such as the staggered striping algorithm proposed by Berson et. al. [4], increases the number of multimedia streams that can be delivered simultaneously from a given disk or collection of disks.
Reference: [11] <author> DAN, A., SITARAM, D., AND SHAHABUDDIN, P. </author> <title> Scheduling policies for an on-demand video server with batching. </title> <booktitle> In ACM Multimedia '94 (San Francisco, </booktitle> <address> CA, USA, </address> <month> October </month> <year> 1994). </year>
Reference-contexts: Given the capability provided by the disk layout and scheduling to serve multiple streams simultaneously, improved request scheduling can reduce customer waiting times. This in turn results in better service and/or lower customer loss. Several previous papers have investigated request scheduling policies for multimedia servers <ref> [11, 15, 7, 5, 2, 1] </ref>. One difficulty in evaluating the algorithms is that the characteristics of multimedia server requests are currently unknown. Only a few prototype systems are in existence. Workloads on these systems have not been reported and may not be representative of future workloads anyway. <p> incoming re quests, Dan, Sitaram, and Shahabuddin have shown that reserving some of the available channels to guarantee good service to the n most popular objects (FCFS-n) can lead to significant gains in performance in the case that time of service guarantees can influence customers to wait longer for service <ref> [11] </ref>. More importantly, a recent paper by Aggarwal, Wolf, and Yu [1] shows that an algorithm called Maximum Factored Queue length (MFQ) minimizes average wait at full capacity, and also has lower customer loss than FCFS for particular points in the system design space. <p> Section 5 contains the results of the policy comparisons (using simulation), and section 6 provides the conclusions and future directions for this work. 2 Request Scheduling Algorithms Below we review the first-come first-served (FCFS) algorithm, a related family of scheduling algorithms known as FCFS-n which were proposed in <ref> [11] </ref>, and the maximum factored queue length first (MFQ) policy described in [1]. We then define a new family of scheduling algorithms, Group Guaranteed Server Capacity (GGSC). These algorithms will be compared in this paper. <p> We then define a new family of scheduling algorithms, Group Guaranteed Server Capacity (GGSC). These algorithms will be compared in this paper. Another previously proposed algorithm, maximum queue length first (MQL), is not considered in this paper since previous work has shown that MQL has some undesirable performance characteristics <ref> [11] </ref>, and MFQ is more intelligently aggressive in scheduling the more popular objects for playback [1]. In defining each algorithm, we will use the term channel to denote the set of resources needed to deliver a multimedia stream. <p> The observation that FCFS can provide time of service guarantees to all customers was not taken into account in previous comparisons of the FCFS and FCFS-n algorithms; those comparisons showed FCFS-n to be superior primarily in cases where its time of service guarantees influenced customer behavior <ref> [11] </ref>. 2.2 Maximum Factored Queue Length (MFQ) The objective of MFQ is to optimally batch customer requests by scheduling the object with the maximum factored queue length, where the factored queue length is a weighted queue length designed to minimize overall mean waiting time for customer requests [1]. <p> To gain an understanding of relative request scheduling policy performance we model only the objects that have selection frequencies above a given (small) selection frequency threshold. Previous work <ref> [11] </ref> has shown that measurements of a large video movie outlet [12] yielded selection frequencies that were closely fit by the discrete Zipf (0.271) distribution illustrated in figure 3. In this distribution 100 objects have selection frequencies above 0:0035. <p> Unless otherwise specified, the experiments use the Zipf (0) distribution of object selection frequencies. The simulators for FCFS and FCFS-n were validated by generating the curves in <ref> [11] </ref> and the MFQ simulator was validated by generating some of the results in [1]. Confidence intervals were generated by the method of batch means after discarding the ini (competitive environment; tolerance: 5 or model B) tial transient. <p> Note that in this tolerance model, which was used in <ref> [11] </ref>, time of service guarantees that are under 5 minutes have a great impact on a customer's willingness to wait. <p> Note that customer loss under 10% is highly desirable in a competitive server designed to capture a reasonable fraction of a given market. These results and the conclusions regarding the viability of FCFS-n differ from previous work <ref> [11] </ref> primarily because we have simulated a FCFS policy that provides time of service guarantees to all customers, rather than only providing guarantees to customers that request objects with preassigned server capacity. <p> In model C, all customers wait for at least 5 minutes; their tolerance above 5 minutes follows the exponential distribution with a mean of 5 additional minutes. These models were used in <ref> [11] </ref>. Figures 11 (a) and 12 (a) show the system cost versus customer loss for tolerance models B and C, respectively. For model B, FCFS and GGSC W -FCFS have similar cost that can be up to 15% higher than MFQ, for target loss between 10% and 0.5%.
Reference: [12] <institution> Electronic Engineering Times (March 15 1993), </institution> <month> 72. </month>
Reference-contexts: To gain an understanding of relative request scheduling policy performance we model only the objects that have selection frequencies above a given (small) selection frequency threshold. Previous work [11] has shown that measurements of a large video movie outlet <ref> [12] </ref> yielded selection frequencies that were closely fit by the discrete Zipf (0.271) distribution illustrated in figure 3. In this distribution 100 objects have selection frequencies above 0:0035.
Reference: [13] <author> FREEDMAN, C. S., AND DEWITT, D. J. </author> <title> The SPIFFI scalable video-on-demand system. </title> <booktitle> In Proceedings of the 1995 ACM SIGMOD International Conference on Management of Data (San Jose, </booktitle> <address> CA USA, </address> <month> May </month> <year> 1995), </year> <pages> pp. 352363. </pages>
Reference-contexts: Vendors are seeking solutions. Careful performance evaluations of the design options can contribute to the effort. Several papers in the literature address the challenging issues of data layout, disk scheduling <ref> [4, 14, 13, 9, 3, 6] </ref> and buffer management [8, 17, 16, 10]. Intelligent data layout and disk scheduling, such as the staggered striping algorithm proposed by Berson et. al. [4], increases the number of multimedia streams that can be delivered simultaneously from a given disk or collection of disks.
Reference: [14] <author> GHANDEHARIZADEH, S., KIM, S. H., AND SHAHABI, C. </author> <title> On configuring a single disk continuous media server. </title> <booktitle> In Proceedings of the 1995 ACM SIGMETRICS Conference on Measurement and Modeling of Computer Systems (Ottawa, </booktitle> <address> On-tario, Canada, </address> <month> May </month> <year> 1995), </year> <pages> pp. 3746. </pages>
Reference-contexts: Vendors are seeking solutions. Careful performance evaluations of the design options can contribute to the effort. Several papers in the literature address the challenging issues of data layout, disk scheduling <ref> [4, 14, 13, 9, 3, 6] </ref> and buffer management [8, 17, 16, 10]. Intelligent data layout and disk scheduling, such as the staggered striping algorithm proposed by Berson et. al. [4], increases the number of multimedia streams that can be delivered simultaneously from a given disk or collection of disks.
Reference: [15] <author> GOLUBCHIK, L., LUI, J. C., AND MUNTZ, R. </author> <title> Reducing I/O demand in video-on-demand storage servers. </title> <booktitle> In Proceedings of the 1995 ACM SIGMETRICS Conference on Measurement and Modeling of Computer Systems (Ottawa, </booktitle> <address> Ontario, Canada, </address> <month> May </month> <year> 1995), </year> <pages> pp. 2536. </pages>
Reference-contexts: Given the capability provided by the disk layout and scheduling to serve multiple streams simultaneously, improved request scheduling can reduce customer waiting times. This in turn results in better service and/or lower customer loss. Several previous papers have investigated request scheduling policies for multimedia servers <ref> [11, 15, 7, 5, 2, 1] </ref>. One difficulty in evaluating the algorithms is that the characteristics of multimedia server requests are currently unknown. Only a few prototype systems are in existence. Workloads on these systems have not been reported and may not be representative of future workloads anyway.
Reference: [16] <author> KAMATH, M., RAMAMRITHAM, K., AND TOWSLEY, D. </author> <title> Management for continuous media sharing in multimedia database systems. </title> <type> Tech. Rep. </type> <institution> UM-CS-1993-081, Department of Computer Science, University of Massachusetts at Amherst, </institution> <address> Amherst, MA 01003, </address> <month> March </month> <year> 1994. </year>
Reference-contexts: Vendors are seeking solutions. Careful performance evaluations of the design options can contribute to the effort. Several papers in the literature address the challenging issues of data layout, disk scheduling [4, 14, 13, 9, 3, 6] and buffer management <ref> [8, 17, 16, 10] </ref>. Intelligent data layout and disk scheduling, such as the staggered striping algorithm proposed by Berson et. al. [4], increases the number of multimedia streams that can be delivered simultaneously from a given disk or collection of disks.
Reference: [17] <author> NG, R., AND YANG, J. </author> <title> Maximizing buffer and disk utilization for news on-demand. </title> <booktitle> In Proceedings of VLDB (1994). </booktitle>
Reference-contexts: Vendors are seeking solutions. Careful performance evaluations of the design options can contribute to the effort. Several papers in the literature address the challenging issues of data layout, disk scheduling [4, 14, 13, 9, 3, 6] and buffer management <ref> [8, 17, 16, 10] </ref>. Intelligent data layout and disk scheduling, such as the staggered striping algorithm proposed by Berson et. al. [4], increases the number of multimedia streams that can be delivered simultaneously from a given disk or collection of disks.
Reference: [18] <author> PERRY, T. S. </author> <title> The trials and travails of interactive TV. </title> <journal> IEEE Spectrum (April 1996), </journal> <volume> 2228. </volume>
Reference-contexts: The Time Warner system recently introduced in Orlando <ref> [18] </ref>, is an example of the envisioned large-scale competitive environments. The resources that are typically required for a multimedia server are shown in figure 1.
Reference: [19] <author> TRISTRAM, C. </author> <title> Stream on: Video servers in the real world. </title> <month> Newmedia (April </month> <year> 1995), </year> <pages> 4652. 13 </pages>
Reference-contexts: 1 Introduction Recent advances in computer system and networking technologies have made the design and implementation of commercial multime This research was supported in part by grants from the National Science Foundation (EHR-95-50429, CCR-9024144). TO APPEAR IN THE SIGMETRICS 1997 CONFERENCE PROCEEDINGS. dia servers feasible. A few prototypes exist <ref> [19] </ref>, and many more are on the drawing boards. The multimedia server application of interest to this paper is video-on-demand, where customers request playback of particular objects available on the server.
References-found: 19

