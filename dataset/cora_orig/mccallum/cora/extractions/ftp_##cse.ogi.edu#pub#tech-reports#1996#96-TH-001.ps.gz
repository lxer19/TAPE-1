URL: ftp://cse.ogi.edu/pub/tech-reports/1996/96-TH-001.ps.gz
Refering-URL: ftp://cse.ogi.edu/pub/tech-reports/README.html
Root-URL: http://www.cse.ogi.edu
Title: Quality of Service Specification for Resource Management in Multimedia Systems  
Author: Richard Alan Staehli 
Degree: A dissertation submitted to the faculty of the Oregon Graduate Institute of Science Technology in partial fulfillment of the requirements for the degree Doctor of Philosophy in Computer Science and Engineering  
Date: 1982  January 1996  
Address: College,  
Affiliation: B.S., The Evergreen State  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Abbott, R., and Garcia-Molina, H. </author> <title> Scheduling real-time transactions. </title> <booktitle> SIGMOD Record 17, </booktitle> <month> 1 (March </month> <year> 1988), </year> <pages> 71-81. </pages>
Reference-contexts: Examples of such applications are found not only in multimedia applications but also in real-time databases, which must satisfy strict constraints on transaction times <ref> [73, 1] </ref>. There has been some controversy about whether the timing requirements of multimedia presentations should be considered to be hard or soft real-time [28, 29].
Reference: [2] <author> Anderson, D. P. </author> <title> Metascheduling for continuous media. </title> <journal> ACM Transactions on Computer Systems 11, </journal> <month> 3 (August </month> <year> 1993), </year> <pages> 226-252. </pages>
Reference-contexts: The jitter can be hidden from the presentation by introducing a buffer between the disk server and the display process. The disk scheduling and buffering requirements for continuous media data have been described by Gemmell and others <ref> [25, 2] </ref>. Some of these results are described in Section 2.2.6. Data layout is further complicated by applications that read only a portion of a continuous media stream, e.g., only the low-frequency components of a compressed video. <p> The Real-Time Mach operating system allows virtual memory pages to be "pinned-down" to avoid page faults [79]. Processor bandwidth may be reserved for periodic real-time tasks [51, 61]. Network bandwidth reservation protocols have been described and implemented <ref> [22, 2, 86] </ref>. A reservation protocol describes the parameters used to make a reservation. For example, the Continuous Media File System (CMFS) defines a real-time session by the maximum read size and read frequency guaranteed for sequential file access [5]. <p> Non real-time file accesses may be handled during slack time before the next cycle starts. Although processor, network and disk resources might seem very different, many of the reservation protocols are very similar. The Continuous Media (CM) Resource Model provides a general characterization of workload requirements for a resource <ref> [2] </ref>. A real-time file session is characterized by the unit of data access, guaranteed rate of delivery, and the workahead or number of units that may be delivered ahead of schedule to allow servicing bursts. <p> The SRP protocol for distributed transport and processing of continuous media consists of two phases: a resource acquisition phase to ensure that a feasible set of reservations can be granted followed by a relaxation phase to minimize end-to-end delay <ref> [2] </ref>. <p> Anderson identifies the following seven parameters that can be used for reserving a continuous-media transport session: maximum message size, maximum message rate, input workahead limit, output workahead limit, maximum logical delay, minimum actual delay, minimum unbuffered actual delay <ref> [2] </ref>. These parameters are defined in terms of the CM-resource model and are used to derive end-to-end guarantees for real-time transport of an abstract stream of "messages".
Reference: [3] <author> Anderson, D. P., Herrtwich, R. G., and Schaefer, C. SRP: </author> <title> A resource reservation protocol for guaranteed-performance communication in the Internet. </title> <type> Tech. Rep. </type> <institution> TR-90-006, International Computer Science Institute, </institution> <month> February </month> <year> 1990. </year>
Reference-contexts: Other QOS parameters and algorithms have been described for reservation of file system [5, 47, 61, 84], CPU [80, 51], and network capacity <ref> [22, 90, 42, 3, 86, 89] </ref>. All of these resource reservation approaches characterize bandwidth as a QOS parameter. We do not include bandwidth in presentation QOS specifications because it depends on implementation choices for data encoding.
Reference: [4] <author> Anderson, D. P., and Homsy, G. </author> <title> A continuous media I/O server and its synchronization mechanism. </title> <booktitle> Computer 24, </booktitle> <month> 10 (October </month> <year> 1991), </year> <pages> 51-57. </pages>
Reference-contexts: Prefetching may also allow higher overall throughput, since computation may be overlapped with concurrent disk access. However, prefetching does incur some computational overhead for scheduling concurrent processes. Many continuous media players are organized as a pipeline of storage access, network transport, decoding and display processes <ref> [48, 4, 66, 13, 39] </ref>. Let us generalize the idea of prefetching to describe any decoupling of a computation into concurrent producer and consumer processes. <p> The ACME continuous media I/O server supports connection-driven rate control, where a media output process adapts its rate of consumption to keep pace with a real-time file access process <ref> [4] </ref>. Rate-based feedback techniques allow distributed prefetching processes to be synchronized with consumer processes [64, 66, 13, 14]. A rate-based approach is appropriate when the prefetched data becomes obsolete at a predictable rate, regardless of whether the consumer process has read it.
Reference: [5] <author> Anderson, D. P., Osawa, Y., and Govindan, R. </author> <title> A file system for continuous media. </title> <journal> ACM Transactions on Computer Systems 10, </journal> <month> 4 (November </month> <year> 1992), </year> <pages> 311-337. </pages>
Reference-contexts: Despite this tolerance for lower quality, it is important to recognize the point at which poor quality impairs the usefulness of a presentation. An admission test can be invoked with each user request to determine if the request can be satisfied without excessively degrading the service to other users <ref> [5, 51, 71] </ref>. 1.2 The Need for Presentation Quality of Service Specifica tions How can a request for multimedia services express its QOS requirements? A multimedia system will need to interpret these requirements in order to schedule resources appropriately. <p> In a multi-user environment, reservations have been used to guarantee the availability of resources for a real-time application. Real-time file systems have been designed that guarantee a lower bound on bandwidth for sequential access to a file <ref> [46, 61, 5] </ref>. The Real-Time Mach operating system allows virtual memory pages to be "pinned-down" to avoid page faults [79]. Processor bandwidth may be reserved for periodic real-time tasks [51, 61]. Network bandwidth reservation protocols have been described and implemented [22, 2, 86]. <p> Network bandwidth reservation protocols have been described and implemented [22, 2, 86]. A reservation protocol describes the parameters used to make a reservation. For example, the Continuous Media File System (CMFS) defines a real-time session by the maximum read size and read frequency guaranteed for sequential file access <ref> [5] </ref>. Each real-time file in the CMFS is created with a maximum rate parameter that constrains the size and frequency of seek times that may be incurred in all subsequent sessions that require sequential accesses to the file. <p> This work supplies an important analysis of techniques for bounding jitter in continuous media transport but does not address other user-level QOS issues such as scalable image quality. Other QOS parameters and algorithms have been described for reservation of file system <ref> [5, 47, 61, 84] </ref>, CPU [80, 51], and network capacity [22, 90, 42, 3, 86, 89]. All of these resource reservation approaches characterize bandwidth as a QOS parameter. We do not include bandwidth in presentation QOS specifications because it depends on implementation choices for data encoding.
Reference: [6] <author> Berson, S., Ghandeharizadeh, S., Muntz, R., and Ju, X. </author> <title> Staggered striping in multimedia information systems. </title> <booktitle> In SIGMOD 94, </booktitle> <address> Minneapolis, MN (May 1994), </address> <pages> pp. 79-90. </pages>
Reference-contexts: Consider the way that existing multimedia systems handle tradeoffs between QOS and resource use. Video on Demand (VOD) systems typically guarantee lossless data transport and strict presentation timing by making conservative resource reservations <ref> [47, 6, 84, 61] </ref>. This approach is designed to satisfy a specific application where the QOS requirements are high. A multimedia system designed to support a greater range of applications should also provide efficient support for moderate and low-QOS presentations. <p> Compression techniques for reducing storage bandwidth requirements are described in Section 2.2.5. Resource reservations to avoid contention are discussed in Section 2.2.7. 25 Data Layout A careful layout of data in storage is an important part of many continuous media storage systems <ref> [47, 6] </ref>. The goal of data layout is to minimize seeks and rotational latency between reads. Seek time can be minimized by storing the data stream in contiguous storage locations. <p> When reading the data, N slices can be transferred in parallel, achieving a near-linear speedup of disk bandwidth [9]. Video on Demand (VOD) systems have been built using disk striping to provide bandwidth guarantees for many concurrent users <ref> [47, 6, 84] </ref>. However, to share bandwidth between multiple playback streams requires interleaved service, just as for a non-striped disk. stream A is striped over only 3 out of 8 disks. <p> A request for stream B must wait until A is finished if any of its data is located on the same disks. Figure 2.10 (b) shows how the same requests can be serviced with less delay using staggered striping <ref> [6] </ref>. For each consecutive time slice, staggered striping increments the indices of the disks used to stripe data so that the full stream is 27 distributed across all disks.
Reference: [7] <author> Blair, G., Campbell, A., Coulson, G., Davies, N., Garcia, F., and Shepherd, D. </author> <title> Summary of the 4th International Workshop on Network and Operating System Support for Digital Audio and Video. </title> <booktitle> Operating Systems Review 28, </booktitle> <month> 2 (April </month> <year> 1994), </year> <pages> 22-33. </pages>
Reference-contexts: As with a guarantee approach, adaptive algorithm designers are forced to make ad hoc choices regarding which aspect of presentation quality to sacrifice because of the lack of a complete specification of QOS requirements. To date, researchers have found that presentation-level QOS requirements are difficult to define <ref> [58, 19, 33, 7] </ref>. Part of the difficulty is due to a confusion between specifying what presentation is desired and how to achieve that presentation. Presentation QOS requirements derive from what functionality is intended. On the other hand, resource QOS requirements derive from how the presentation is to be implemented. <p> Presentation QOS requirements derive from what functionality is intended. On the other hand, resource QOS requirements derive from how the presentation is to be implemented. What is missing in the literature is a method for specifying presentation QOS. The need for presentation QOS specifications is now well recognized <ref> [7] </ref>, but there has been little discussion of how to address this need. The approach we favor is to divide the problem into two parts: modelling the measurable error in a presentation and empirically determining QOS requirements in terms of this model.
Reference: [8] <author> Blake, B. A., and Schwan, K. </author> <title> Experimental evaluation of a real-time scheduler for a multiprocessor system. </title> <journal> IEEE Transactions on Software Engineering 17, </journal> <month> 1 (January </month> <year> 1991), </year> <pages> 34-44. </pages>
Reference-contexts: The complexity of their heuristic algorithm for scheduling a set of n tasks in a system having r resources is O (rn 2 ) [91]. Blake and Schwan <ref> [8] </ref> report on another dynamic scheduler that uses a bin-packing approach to provide real-time guarantees (if possible) for dynamically occurring tasks. 37 As in the Spring Kernel, resources may be allocated exclusively by the scheduling process to avoid contention.
Reference: [9] <author> Cabrera, L.-F., and Long, D. D. E. Swift: </author> <title> A storage architecture for large objects. </title> <booktitle> In Proceedings of the 11th IEEE Symposium on Mass Storage Systems (1991), </booktitle> <pages> pp. 123-129. </pages>
Reference-contexts: For many multimedia applications, the data is immutable and storage is optimized for read access. Many different storage architectures have been used for multimedia data, including arrays of fast magnetic disks and optical disk jukeboxes <ref> [9, 15] </ref>. The variations in throughput and latency characteristics of such systems is very large. CD-ROM drives with transfer rates of 1.2 MBytes per second and seek times on the order of 1 second are in common use on personal computer systems [82]. <p> A data stream is segmented by time-slicing and the segments are written in round-robin order to an array of N disks. When reading the data, N slices can be transferred in parallel, achieving a near-linear speedup of disk bandwidth <ref> [9] </ref>. Video on Demand (VOD) systems have been built using disk striping to provide bandwidth guarantees for many concurrent users [47, 6, 84].
Reference: [10] <author> Campbell, A., Coulson, G., Garcia, F., and Hutchison, D. </author> <title> A continuous media transport and orchestration service. In SIGCOMM '92, </title> <journal> Computer Communcation Review (August 1992), </journal> <volume> vol. 22, </volume> <publisher> ACM Press, </publisher> <address> New York, </address> <pages> pp. 99-110. 112 113 </pages>
Reference-contexts: Our approach to QOS specification allows a complete specification of requirements and data independence. Software feedback techniques have been used to dynamically adjust stream processing workloads to available system bandwidth <ref> [10, 13, 66, 80] </ref>. Our quality estimation function can be used with feedback techniques to optimize a presentation for the current resource availability. For example, a presentation manager can monitor each of the presentation error components at runtime.
Reference: [11] <author> Campbell, A., Coulson, G., Garcia, F., Hutchison, D., and Leopold, H. </author> <title> Integrated quality of service for multimedia communications. </title> <booktitle> In Proceedings IEEE INFOCOMM '93 (San Francisco, </booktitle> <address> USA, </address> <month> April </month> <year> 1993), </year> <note> IEEE. </note>
Reference-contexts: As with earlier work, their QOS parameters do not address scalable image quality and are oriented toward resource reservations rather than user-level QOS. The Multimedia Projects Group at Lancaster University is developing the Quality of Service Architecture (QOS-A) for multimedia communications <ref> [11] </ref>. This architecture explicitly recognizes the need for distinct QOS characterizations at each level of the protocol stack. The objectives of the QOS-A project are to define an OSI-compatible architecture for QOS management in an Open Distributed Processing (ODP) multimedia environment.
Reference: [12] <author> Campbell, A., Coulson, G., and Hutchison, D. </author> <title> A quality of service architecture. </title> <journal> Computer Communication Review 24, </journal> <month> 2 (April </month> <year> 1994), </year> <pages> 6-27. </pages>
Reference-contexts: This completes the proof that SQUINT's admission test guarantees the QOS specified in the player. How does SQUINT's admission test compare with other multimedia systems? Most of the systems surveyed in this thesis make guarantees based on bandwidth requirements for a particular media representation <ref> [56, 12] </ref>. They lack a means for expressing QOS requirements independent of the data type. Other systems that support scalable presentation quality do not provide complete guarantees [80, 21]. SQUINT's admission test supports 100 QOS specifications that are scalable and independent of device and data representations.
Reference: [13] <author> Cen, S., Pu, C., Staehli, R., and Walpole, J. </author> <title> A distributed real-time MPEG video audio player. </title> <booktitle> In NOSSDAV 95 (1995), vol. 1018 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <pages> pp. 151-162. </pages>
Reference-contexts: Cen, et al., have demonstrated that an adaptive algorithm can achieve better perceived quality of MPEG video playback by intelligently 7 choosing the pattern of dropped frames at the source <ref> [13] </ref>. Others have shown that video resolution and picture quality can be varied dynamically to save bandwidth without dropping frames [21, 14]. <p> In continuous media presentations bandwidth limitations frequently limit the sample rate that can be transmitted and decoded. Several researchers have described the use of software-feedback techniques to determine the available bandwidth and to adapt the scheduled sample rate accordingly <ref> [66, 13] </ref>. In a distributed system, there is no single clock that can be used to control synchronization. Our ability to synchronize processes executing on different machines is limited by the communication latency between the machines, and by the variation in clock rates. <p> However, in most presentations of stored data the output devices are attached to a single client machine. In that case, it is a simple matter to control 24 synchronization via a local clock on the client. Feedback algorithms have been described that coordinate timing between servers and the client <ref> [13] </ref>. Section 2.2.6 describes this type of coordination in more detail. 2.2.3 Storage Optimizations Video and audio data can require large amounts of storage space. For many multimedia applications, the data is immutable and storage is optimized for read access. <p> Ideally, frames are dropped at a regular rate to minimize the perceived degradation of quality and as early as possible in the pipeline to minimize handling costs <ref> [13] </ref>. Frame dropping is one example of subsampling a data stream in time. Other examples include subsampling an audio stream and spatial subsampling of an image [18]. Another lossy optimization is the use of a less expensive and lower-quality dithering algorithm. <p> Prefetching may also allow higher overall throughput, since computation may be overlapped with concurrent disk access. However, prefetching does incur some computational overhead for scheduling concurrent processes. Many continuous media players are organized as a pipeline of storage access, network transport, decoding and display processes <ref> [48, 4, 66, 13, 39] </ref>. Let us generalize the idea of prefetching to describe any decoupling of a computation into concurrent producer and consumer processes. <p> The ACME continuous media I/O server supports connection-driven rate control, where a media output process adapts its rate of consumption to keep pace with a real-time file access process [4]. Rate-based feedback techniques allow distributed prefetching processes to be synchronized with consumer processes <ref> [64, 66, 13, 14] </ref>. A rate-based approach is appropriate when the prefetched data becomes obsolete at a predictable rate, regardless of whether the consumer process has read it. Obsolete data may be overwritten by the prefetching process without waiting for the consumer. <p> Our approach to QOS specification allows a complete specification of requirements and data independence. Software feedback techniques have been used to dynamically adjust stream processing workloads to available system bandwidth <ref> [10, 13, 66, 80] </ref>. Our quality estimation function can be used with feedback techniques to optimize a presentation for the current resource availability. For example, a presentation manager can monitor each of the presentation error components at runtime. <p> Our quality estimation function can be used with feedback techniques to optimize a presentation for the current resource availability. For example, a presentation manager can monitor each of the presentation error components at runtime. Network and processor bandwidth overloads are detected by missed deadlines for display events <ref> [13] </ref>. Many of the techniques described in Chapter 2 can reduce bandwidth requirements, including switching to a more highly compressed data source or skipping video frames. The response to overload detection should be an adaptation of the presentation plan to reduce bandwidth requirements.
Reference: [14] <author> Chaddha, N., Wall, G. A., and Schmidt, B. </author> <title> An end to end software only scalable video delivery system. </title> <booktitle> In NOSSDAV 95 (April 1995), vol. 1018 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <pages> pp. 139-150. </pages>
Reference-contexts: Others have shown that video resolution and picture quality can be varied dynamically to save bandwidth without dropping frames <ref> [21, 14] </ref>. As with a guarantee approach, adaptive algorithm designers are forced to make ad hoc choices regarding which aspect of presentation quality to sacrifice because of the lack of a complete specification of QOS requirements. <p> Some of these results are described in Section 2.2.6. Data layout is further complicated by applications that read only a portion of a continuous media stream, e.g., only the low-frequency components of a compressed video. One approach is to split a single media stream into base-layer and enhancement-layers <ref> [14] </ref>. For low-resolution access, an application need only read the base-layer stream. For best resolution, an application must read the base-layer and enhancement-layer streams and 26 combine them. Disk Striping Disk striping is a common technique for increasing disk bandwidth. <p> MPEG video streams may be filtered in real-time to remove high-frequency coefficients, producing a lower-bandwidth and lower-resolution video stream at the expense of some additional processing at the server [21]. Stanford University and Sun Microsystems have 30 designed a VOD system that supports multi-resolution access to encoded video <ref> [14] </ref>. The MPEG-2 video encoding allows both HDTV and NTSC resolution images to be decoded from a single stream. 2.2.6 Prefetching Prefetching is a common technique for hiding storage latency when the access pattern is known in advance. <p> The ACME continuous media I/O server supports connection-driven rate control, where a media output process adapts its rate of consumption to keep pace with a real-time file access process [4]. Rate-based feedback techniques allow distributed prefetching processes to be synchronized with consumer processes <ref> [64, 66, 13, 14] </ref>. A rate-based approach is appropriate when the prefetched data becomes obsolete at a predictable rate, regardless of whether the consumer process has read it. Obsolete data may be overwritten by the prefetching process without waiting for the consumer. <p> However, future multimedia system will incorporate technology for scalable video quality and other tradeoffs between presentation quality and resource use <ref> [16, 17, 14, 21] </ref>. Other researchers are only now beginning to solve the problem of how to choose from among many possible presentation plans. Nahrstedt and Smith have proposed the QOS Broker technique for presentation planning [56].
Reference: [15] <author> Christodoulakis, S., and Faloutsos, C. </author> <title> Design and performance considerations for an optical-disk based, multimedia object server. </title> <journal> IEEE Computer 19, </journal> <note> 12 (Dec 1986). [16] cker Chiueh, </note> <author> T., and Katz, R. H. </author> <title> Multi-resolution video representation for parallel disk arrays. </title> <booktitle> In ACM Multimedia 93 (August 1993), </booktitle> <pages> pp. 401-410. </pages>
Reference-contexts: For many multimedia applications, the data is immutable and storage is optimized for read access. Many different storage architectures have been used for multimedia data, including arrays of fast magnetic disks and optical disk jukeboxes <ref> [9, 15] </ref>. The variations in throughput and latency characteristics of such systems is very large. CD-ROM drives with transfer rates of 1.2 MBytes per second and seek times on the order of 1 second are in common use on personal computer systems [82].
Reference: [17] <author> Delgrossi, L., Halstrick, C., Hehmann, D., Herrtwich, R., Krone, O., Sandvoss, J., and Vogt, C. </author> <title> Media scaling for audiovisual communication with the Heidelberg Transport System. </title> <booktitle> In ACM Multimedia 93 (August 1993), </booktitle> <pages> pp. 99-104. </pages>
Reference-contexts: However, future multimedia system will incorporate technology for scalable video quality and other tradeoffs between presentation quality and resource use <ref> [16, 17, 14, 21] </ref>. Other researchers are only now beginning to solve the problem of how to choose from among many possible presentation plans. Nahrstedt and Smith have proposed the QOS Broker technique for presentation planning [56].
Reference: [18] <author> Delgrossi, L., Halstrick, C., Hehmann, D., Herrtwich, R. G., Krone, O., Sandvoss, J., and Vogt, C. </author> <title> Media scaling in a multimedia communication system. </title> <booktitle> Multimedia Systems 2, </booktitle> <month> 4 (October </month> <year> 1994), </year> <pages> 172-180. </pages>
Reference-contexts: Frame dropping is one example of subsampling a data stream in time. Other examples include subsampling an audio stream and spatial subsampling of an image <ref> [18] </ref>. Another lossy optimization is the use of a less expensive and lower-quality dithering algorithm.
Reference: [19] <author> Drapeau, G. D. </author> <title> Synchronization in the MAEstro multimedia authoring environment. </title> <booktitle> In ACM Multimedia 93 (August 1993), </booktitle> <pages> pp. 331-340. </pages>
Reference-contexts: As with a guarantee approach, adaptive algorithm designers are forced to make ad hoc choices regarding which aspect of presentation quality to sacrifice because of the lack of a complete specification of QOS requirements. To date, researchers have found that presentation-level QOS requirements are difficult to define <ref> [58, 19, 33, 7] </ref>. Part of the difficulty is due to a confusion between specifying what presentation is desired and how to achieve that presentation. Presentation QOS requirements derive from what functionality is intended. On the other hand, resource QOS requirements derive from how the presentation is to be implemented. <p> In Chapter 4, we offer a formal definition of some of these parameters and show where they fit into a complete model for presentation QOS specification. 2.1.4 MAEstro MAEstro is a set of UNIX-based tools for authoring multimedia documents <ref> [19] </ref>. It provides a timeline editor with a direct manipulation interface for synchronization of media segments. The appearance of the timeline editor is similar to Figure 2.2, but the MAEstro authoring model is more restrictive than Muse. <p> The authors can know the limitations of the presentation computing environment and can tailor content descriptors appropriately <ref> [19] </ref>. A viewer that uses the same presentation engine and the same or similar computing environment is likely to perceive the presentation as the author intended. On the other hand, the MHEG standard is predicated on the exchange of presentation descriptors between heterogeneous computing systems. <p> MAEstro and many other multimedia systems take this approach in environments where the time required to access and process data for each output is negligible relative to the time between events <ref> [19] </ref>. <p> the title screen persist too long, but if the image is displayed after the presentation time for the end slide it gets immediately overwritten! If process latencies are predictable, one way to correct the output timing is to modify the schedule of output times, compensating each by the anticipated latency <ref> [19] </ref>. If the latencies are variable, but bounded, it may be possible to hide the latency by prefetching from storage as discussed in Section 2.2.6. 22 An alternative to the clock-driven algorithm is to wait explicitly for the intended duration of a presentation before triggering subsequent actions. <p> By prefetching so that data is available "just-in-time", the data can be displayed immediately with no buffering requirements. On personal computers and some workstation environments, storage latency is repeatable and may be empirically determined by rehearsing a presentation <ref> [19, 53] </ref>. Even if some buffering is desirable to hide prefetch jitter, worst-case latency estimates may be used to determine a schedule that prefetches data as late as possible. If prefetch latency is unpredictable, a worst-case bound may still provide a better prefetch schedule than the greedy approach. <p> Other languages provide a richer authoring environment, but fail to define an ideal presentation. MAEstro, OCPNs, and the MHEG standard all describe an operational semantics where the timing of one presentation event may depend on the run-time behavior of another presentation process <ref> [19, 41, 52] </ref>. These languages can be extended to define an ideal presentation by specifying ideal run-time behavior for all presentation actions. With such extensions, formal QOS specifications can be defined by following the framework described in this chapter.
Reference: [20] <author> Druschel, P., Abbott, M. B., Pagels, M. A., and Peterson, L. L. </author> <title> Network subsystem design. </title> <journal> IEEE Network 7, </journal> <month> 4 (July </month> <year> 1993), </year> <pages> 8-17. </pages>
Reference-contexts: It is often possible to reduce the processing time by lossless and lossy process optimizations. An optimization is lossless if it preserves information in the data stream, and lossy if some information is lost. Lossless optimizations include hand-tuning of machine code and elimination of unnecessary data copying <ref> [45, 20] </ref>. Specializations are optimizations that depend on special knowledge of an application. For example, if it is 28 known that a video presentation window cannot be moved or obscured then the presentation can bypass the window system and write directly to the display frame buffer.
Reference: [21] <author> Eleftheriadis, A., and Anastassiou, D. </author> <title> Meeting arbitrary QoS constraints using dynamic rate shaping of coded digital video. </title> <booktitle> In NOSSDAV 95 (April 1995), vol. 1018 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <pages> pp. 95-106. </pages>
Reference-contexts: Others have shown that video resolution and picture quality can be varied dynamically to save bandwidth without dropping frames <ref> [21, 14] </ref>. As with a guarantee approach, adaptive algorithm designers are forced to make ad hoc choices regarding which aspect of presentation quality to sacrifice because of the lack of a complete specification of QOS requirements. <p> Scalable video resolution may become a common requirement in future applications. MPEG video streams may be filtered in real-time to remove high-frequency coefficients, producing a lower-bandwidth and lower-resolution video stream at the expense of some additional processing at the server <ref> [21] </ref>. Stanford University and Sun Microsystems have 30 designed a VOD system that supports multi-resolution access to encoded video [14]. <p> They lack a means for expressing QOS requirements independent of the data type. Other systems that support scalable presentation quality do not provide complete guarantees <ref> [80, 21] </ref>. SQUINT's admission test supports 100 QOS specifications that are scalable and independent of device and data representations. These QOS specifications are translated into presentation plans that are guaranteed not to exceed the error constraints. <p> However, future multimedia system will incorporate technology for scalable video quality and other tradeoffs between presentation quality and resource use <ref> [16, 17, 14, 21] </ref>. Other researchers are only now beginning to solve the problem of how to choose from among many possible presentation plans. Nahrstedt and Smith have proposed the QOS Broker technique for presentation planning [56].
Reference: [22] <author> Ferrari, D. </author> <title> Real-time communication in an internetwork. Journal of High Speed Networks 1, </title> <booktitle> 1 (1992), </booktitle> <pages> 79-103. 114 </pages>
Reference-contexts: The Real-Time Mach operating system allows virtual memory pages to be "pinned-down" to avoid page faults [79]. Processor bandwidth may be reserved for periodic real-time tasks [51, 61]. Network bandwidth reservation protocols have been described and implemented <ref> [22, 2, 86] </ref>. A reservation protocol describes the parameters used to make a reservation. For example, the Continuous Media File System (CMFS) defines a real-time session by the maximum read size and read frequency guaranteed for sequential file access [5]. <p> Other QOS parameters and algorithms have been described for reservation of file system [5, 47, 61, 84], CPU [80, 51], and network capacity <ref> [22, 90, 42, 3, 86, 89] </ref>. All of these resource reservation approaches characterize bandwidth as a QOS parameter. We do not include bandwidth in presentation QOS specifications because it depends on implementation choices for data encoding.
Reference: [23] <author> Gall, D. L. </author> <title> MPEG: A video compression standard for multimedia applications. </title> <journal> Comm. ACM 34, </journal> <month> 4 (April </month> <year> 1991). </year>
Reference-contexts: These two problems are related through the resource requirements for data processing, storage and transport. For example, a real-time presentation may be achieved with limited resources by using a highly compressed digital encoding, such as MPEG, that sacrifices image quality for reduced 3 storage-volume and transport-bandwidth requirements <ref> [23, 74] </ref>. In fact, both problems have trivial solutions if the application allows arbitrary degradation of quality! But for acceptable presentations, a multimedia system must attempt to provide accurate timing and good image quality. <p> Lossy 29 compression techniques include truncation, subsampling, motion compensation and the discrete cosine transform (DCT). The Motion Picture Experts Group (MPEG) MPEG-1 compression standard uses motion compensation and the DCT in combination with lossless compression techniques to achieve compression ratios on the order of 70:1 <ref> [49, 23, 74] </ref>. As with lossy code optimizations, lossy compression techniques are designed to minimize the perceived degradation of quality. MPEG-1 compression has been optimized to yield VHS quality video at CD-ROM data rates.
Reference: [24] <author> Gamma, E., Helm, R., Johnson, R., and Vlissides, J. </author> <title> Design Patterns: Elements of Reusable Object-Oriented Software. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1995. </year>
Reference-contexts: Content is described by objects that closely model the Z content descriptors in the last chapter. Figures 5.3 and 5.4 introduce a subset of the OMT (Object Modeling Technique) notation used in subsequent figures <ref> [24] </ref>. Figure 5.5 shows the SQUINT Content class hierarchy and a subset of the protocol associated with each class. The class Content maintains a dictionary of content descriptors that may be referenced by name. The Smalltalk environment provides a dictionary inspector that supports adding new descriptors and editing existing ones.
Reference: [25] <author> Gemmell, J., and Christodoulakis, S. </author> <booktitle> Principles of delay-sensitive multimedia data storage and retrieval. ACM TOIS 10, </booktitle> <month> 1 (January </month> <year> 1992), </year> <pages> 51-90. </pages>
Reference-contexts: The jitter can be hidden from the presentation by introducing a buffer between the disk server and the display process. The disk scheduling and buffering requirements for continuous media data have been described by Gemmell and others <ref> [25, 2] </ref>. Some of these results are described in Section 2.2.6. Data layout is further complicated by applications that read only a portion of a continuous media stream, e.g., only the low-frequency components of a compressed video. <p> Gemmell and Christodoulakis show that any sustainable prefetching algorithm must use a segment size of at least i r c d max s s 33 disk sectors and must allocate at least n r c s s sector-sized buffers <ref> [25] </ref>. One of the advantages of greedy prefetching is that producers are automatically blocked when consumers block so that no data is lost. However, this feature can also be a disadvantage when an exception causes the delay of a consumer process.
Reference: [26] <author> Ghandeharizadeh, S., Ramos, L., Asad, Z., and Qureshi, W. </author> <title> Object placement in parallel hypermedia systems. </title> <booktitle> In Proceedings of the 17th International Conference on Very Large Data Bases (September 1991), </booktitle> <pages> pp. 243-253. </pages>
Reference-contexts: Speculative Prefetching Prefetching strategies cannot satisfy unpredictable application access patterns unless all the candidate data objects can be prefetched simultaneously. Ghandeharizadeh, et al., describe an interesting approach in which the start of several possible data streams are prefetched before the user has selected which will be needed <ref> [26] </ref>. Each stream supplies the data for an outgoing path from the current location in a hypermedia graph.
Reference: [27] <author> Gutfreund, Y.-S., Diaz-Gonzalez, J., Sasnett, R., and Phuah, V. Cir-custalk: </author> <title> An orchestration service for distributed multimedia. </title> <booktitle> In ACM Multimedia 93, proceedings (August 1993), </booktitle> <pages> pp. 351-358. </pages>
Reference-contexts: The translation of the application QOS parameters into network QOS requirements is relatively straightforward for fixed-sized samples. The Circus multimedia environment from GTE Labs features a blackboard approach for orchestrating resource management <ref> [27] </ref>. Distributed elements that provide or require multimedia services communicate through a global blackboard where the Orchestrator attempts to configure optimal connections between them. The AMOS Multimedia Playout Manager allows integration of multimedia data in a distributed database management system [78].
Reference: [28] <author> Herrtwich, R. </author> <title> The role of performance, scheduling and resource reservation in multimedia systems. </title> <booktitle> In Operating Systems of the 90s and Beyond (1991), vol. 563 of Lecture Notes In Computer Science, </booktitle> <publisher> Springer Verlag, </publisher> <pages> pp. 279-284. </pages>
Reference-contexts: Examples of such applications are found not only in multimedia applications but also in real-time databases, which must satisfy strict constraints on transaction times [73, 1]. There has been some controversy about whether the timing requirements of multimedia presentations should be considered to be hard or soft real-time <ref> [28, 29] </ref>. A large body of knowledge exists on how to build hard-real-time systems, but it is generally expensive to assure that no deadline is ever missed [44, 37, 72, 67]. Instead, most existing multimedia systems are susceptible to some data loss and timing error.
Reference: [29] <author> Herrtwich, R. G. </author> <title> Summary of the Second International Workshop on Network and Operating System Support for Digital Audio and Video. </title> <booktitle> Operating Systems Review 26, </booktitle> <month> 2 (April </month> <year> 1992), </year> <pages> 32-59. </pages>
Reference-contexts: Examples of such applications are found not only in multimedia applications but also in real-time databases, which must satisfy strict constraints on transaction times [73, 1]. There has been some controversy about whether the timing requirements of multimedia presentations should be considered to be hard or soft real-time <ref> [28, 29] </ref>. A large body of knowledge exists on how to build hard-real-time systems, but it is generally expensive to assure that no deadline is ever missed [44, 37, 72, 67]. Instead, most existing multimedia systems are susceptible to some data loss and timing error.
Reference: [30] <author> Hewlett-Packard Co. </author> <title> Using the Audio Application Program Interface. </title> <address> Palo Alto, CA, </address> <year> 1992. </year>
Reference-contexts: Selecting from the content menu opens a display window for each video track in the presentation and displays the name of the selected content at the top 79 80 of the control panel. Audio tracks are played using the HP Audio Application Program Interface <ref> [30] </ref>. The position slider shows the current logical time in seconds, where the left and right ends of the slider correspond to the presentation start and finish respectively. The play rate slider controls the rate at which logical time advances.
Reference: [31] <author> Higgins, G. </author> <title> Image quality criteria. </title> <journal> Journal of Applied Photographic Engineering 3, </journal> <volume> 2 (1977), </volume> <pages> 53-60. </pages>
Reference-contexts: Higgins describes some of the factors that determine human perception of image quality <ref> [31] </ref>. Objective measures are given for tone reproduction, sharpness, and graininess. His definition of these quantities constitutes an error model for still images that is more expressive than the reference error model proposed in Chapter 4.
Reference: [32] <author> Hodges, M. E., Sasnett, R. M., and Ackerman, M. S. </author> <title> A construction set for multimedia applications. </title> <booktitle> IEEE Software (January 1989), </booktitle> <pages> 37-43. </pages>
Reference-contexts: to provide the best playback quality possible for the recorded data and do not incorporate any other notion of QOS requirements. 2.1.2 Muse The Athena Muse authoring environment offers four distinct representational approaches for specifying interactive multimedia learning environments: directed graphs, multidimensional spatial frameworks, declarative constraints, and a procedural language <ref> [32] </ref>. The directed graphs are useful for hypermedia style navigation. The spatial frameworks allow both specification of image display positions and placement of objects on a presentation timeline. Figure 2.2 illustrates the use of a timeline to specify synchronization in Muse.
Reference: [33] <author> Hutchison, D., Coulson, G., Campbell, A., and Blair, G. S. </author> <title> Quality of service management in distributed systems. </title> <type> Tech. Rep. </type> <institution> MPG-94-02, Lancaster University, </institution> <year> 1994. </year>
Reference-contexts: As with a guarantee approach, adaptive algorithm designers are forced to make ad hoc choices regarding which aspect of presentation quality to sacrifice because of the lack of a complete specification of QOS requirements. To date, researchers have found that presentation-level QOS requirements are difficult to define <ref> [58, 19, 33, 7] </ref>. Part of the difficulty is due to a confusion between specifying what presentation is desired and how to achieve that presentation. Presentation QOS requirements derive from what functionality is intended. On the other hand, resource QOS requirements derive from how the presentation is to be implemented.
Reference: [34] <author> Jeffay, K., Stone, D., Talley, T., and Smith, F. </author> <title> Adaptive, best-effort delivery of digital audio and video across packet-switched networks. </title> <booktitle> In Third International Workshop on Network and Operating System Support for Digital Audio and Video (San Diego, </booktitle> <address> California, </address> <month> November </month> <year> 1992), </year> <journal> IEEE Computer Society, </journal> <pages> pp. 1-12. 115 </pages>
Reference-contexts: SQUINT 102 demonstrates that simple heuristics allow fast translation of QOS requirements into reasonable resource scheduling parameters. The decision to synchronize all controllers with a single clock eliminates many of the synchronization concerns that have been raised by other researchers <ref> [41, 34, 58] </ref>. The use of a fixed schedule allows every component of the presentation plan to work independent of the others while still achieving good overall synchronization. The danger of this approach is that processing delays result in skipped segments of audio and video.
Reference: [35] <author> Kiczales, G., and Lamping, J. </author> <title> Operating systems: </title> <booktitle> Why object-oriented? In Proceedings Third International Workshop on Object Orientation in Operating Systems (December 1993), </booktitle> <pages> pp. 25-30. </pages>
Reference-contexts: The problem of implementing a presentation plan without exposing performance is called the mapping dilemma and the use of QOS specifications in a request for multimedia services is an example of a meta-protocol <ref> [35] </ref>. Without a QOS specification, a multimedia system does not have enough information to control performance aspects of a presentation. The result is that inappropriate implementation choices provide unacceptable performance. A QOS specification describes performance requirements so that the implementation can be specialized for each request.
Reference: [36] <author> Koegel-Buford, J. F. </author> <title> Middleware system services architecture. In Multimedia Systems. </title> <publisher> Addison-Wesley, </publisher> <address> New York, </address> <year> 1994, </year> <pages> pp. 221-244. </pages>
Reference-contexts: Guarantee 103 104 * reliable: True or False * delay bounds: minimum and maximum delay * jitter bounds: minimum and maximum delay variance * bandwidth bounds: minimum and maximum bandwidth The MSS architecture was developed by the Interactive Multimedia Association, an organization with representatives from Hewlett-Packard (HP), IBM and SunSoft <ref> [36] </ref>. As with earlier work, their QOS parameters do not address scalable image quality and are oriented toward resource reservations rather than user-level QOS. The Multimedia Projects Group at Lancaster University is developing the Quality of Service Architecture (QOS-A) for multimedia communications [11].
Reference: [37] <author> Lehoczky, J., Sha, L., and Ding, Y. </author> <title> The rate monotonic scheduling algorithm: exact characterization and average case behavior. </title> <booktitle> In Proc. IEEE 10th Real-Time Systems Symp. </booktitle> <month> (December </month> <year> 1989), </year> <pages> pp. 166-171. </pages>
Reference-contexts: There has been some controversy about whether the timing requirements of multimedia presentations should be considered to be hard or soft real-time [28, 29]. A large body of knowledge exists on how to build hard-real-time systems, but it is generally expensive to assure that no deadline is ever missed <ref> [44, 37, 72, 67] </ref>. Instead, most existing multimedia systems are susceptible to some data loss and timing error. The majority of the techniques surveyed in this chapter describe ways to reduce the magnitude of these errors.
Reference: [38] <author> Lenstra, J., Rinnooy, A., and Brucker, P. </author> <title> Complexity of machine scheduling problems. </title> <note> Annals of Discrete Mathematics 1 (1977). </note>
Reference-contexts: It may be necessary to extend existing reservation protocols to allow reservations that begin at a specific future time and have finite duration. The problem of scheduling a set of tasks with time and resource constraints is known to be NP-complete <ref> [38] </ref>. While effective heuristic algorithms exist for this problem [91], they are sensitive to the uncertainty in task completion times. Worst case latency estimates can be so large as to make schedulability analysis impracticable.
Reference: [39] <author> Levergood, T. M., Payne, A. C., Gettys, J., Treese, G. W., and Stewart, L. C. Audiofile: </author> <title> A network-transparent system for distributed audio applications. </title> <booktitle> In USENIX Summer Conference (June 1993). </booktitle>
Reference-contexts: Prefetching may also allow higher overall throughput, since computation may be overlapped with concurrent disk access. However, prefetching does incur some computational overhead for scheduling concurrent processes. Many continuous media players are organized as a pipeline of storage access, network transport, decoding and display processes <ref> [48, 4, 66, 13, 39] </ref>. Let us generalize the idea of prefetching to describe any decoupling of a computation into concurrent producer and consumer processes. <p> The AudioFile system uses pipe semantics to connect an audio playback application to a device server using a fixed sized queue <ref> [39] </ref>. Greedy prefetching uses a simple back-pressure technique to synchronize a fast producer with slower consumer. So long as the queue is non-empty, the consumer is insulated from delay and jitter in the prefetching process.
Reference: [40] <author> Limb, J. O. </author> <title> Distortion criteria of the human viewer. </title> <journal> IEEE Trans. on Systems, Man, and Cybernetics SMC-9 (December 1979), </journal> <pages> 778-793. </pages>
Reference-contexts: An approximate model of human perception can provide a useful tool for presentation QOS management. The degree to which different types of error interfere with the user's ability to understand the content can be determined by studies of human perception <ref> [75, 40] </ref>. This thesis focuses on how to model the user-perceivable error. For a QOS specification to be useful for resource management, it must have formal semantics. Formal semantics allow a multimedia system designer to validate whether a particular presentation algorithm will be able to meet the specification. <p> While these measures allow more accurate user-models for still images, Higgins does not report estimates of image quality from a combination of these values. Limb reports experiments in which the subjects rated a set of images by how annoying the perceived distortions were <ref> [40] </ref>. The subjective evaluations of distortion are correlated with root-mean-square-error and other objective measures. His success at creating a crude quantitative model for image fidelity suggests that useful empirical models can be determined for other multimedia presentation tasks.
Reference: [41] <author> Little, T., Ghafoor, A., Chen, C., Chang, C., and Berra, P. </author> <title> Multimedia synchronization. </title> <booktitle> Data Engineering 14, </booktitle> <month> 3 (September </month> <year> 1991), </year> <pages> 26-35. </pages>
Reference-contexts: Other languages provide a richer authoring environment, but fail to define an ideal presentation. MAEstro, OCPNs, and the MHEG standard all describe an operational semantics where the timing of one presentation event may depend on the run-time behavior of another presentation process <ref> [19, 41, 52] </ref>. These languages can be extended to define an ideal presentation by specifying ideal run-time behavior for all presentation actions. With such extensions, formal QOS specifications can be defined by following the framework described in this chapter. <p> SQUINT 102 demonstrates that simple heuristics allow fast translation of QOS requirements into reasonable resource scheduling parameters. The decision to synchronize all controllers with a single clock eliminates many of the synchronization concerns that have been raised by other researchers <ref> [41, 34, 58] </ref>. The use of a fixed schedule allows every component of the presentation plan to work independent of the others while still achieving good overall synchronization. The danger of this approach is that processing delays result in skipped segments of audio and video.
Reference: [42] <author> Little, T. D., and Ghafoor, A. </author> <title> Network considerations for distributed multimedia object composition and communication. </title> <booktitle> IEEE Network 4 (November 1990), </booktitle> <pages> 32-49. </pages>
Reference-contexts: As with authoring in the Muse system, OCPNs do not specify presentation accuracy. Little and Ghafoor have suggested a partial list of network QOS parameters for communication of multimedia objects <ref> [42] </ref>. In Chapter 4, we offer a formal definition of some of these parameters and show where they fit into a complete model for presentation QOS specification. 2.1.4 MAEstro MAEstro is a set of UNIX-based tools for authoring multimedia documents [19]. <p> Other QOS parameters and algorithms have been described for reservation of file system [5, 47, 61, 84], CPU [80, 51], and network capacity <ref> [22, 90, 42, 3, 86, 89] </ref>. All of these resource reservation approaches characterize bandwidth as a QOS parameter. We do not include bandwidth in presentation QOS specifications because it depends on implementation choices for data encoding.
Reference: [43] <author> Little, T. D., and Ghafoor, A. </author> <title> Synchronization and storage models for multimedia objects. </title> <journal> IEEE Journal on Selected Areas in Communication 8, </journal> <month> 3 (April </month> <year> 1990), </year> <pages> 413-27. </pages>
Reference-contexts: Muse has an informal presentation semantics and has been successfully used for authoring educational materials for presentation on a modified Athena workstation. 2.1.3 Object Composition Petri Nets Little and Ghafoor have described an interval-based descriptor for multimedia presentations called an Object Composition Petri Net (OCPN) <ref> [43] </ref>. Each media object is assigned to an output device and has a known display duration. An OCPN is constructed by specifying the temporal relation between two objects using one of the seven interval relations shown in Figure 2.3. <p> A computation may fork a child process to execute a sub-presentation recursively and in parallel, but it must then wait for the child to complete before it completes itself. This type of algorithm is described for executing an OCPN <ref> [43] </ref>. Duration-driven synchronization guarantees that the output of every computation c i is not overwritten early by the next output of the presentation thread.
Reference: [44] <author> Liu, C., and Layland, J. W. </author> <title> Scheduling algorithms for multiprogramming in a hard real time environment. </title> <journal> JACM 20, </journal> <volume> 1 (1973), </volume> <pages> 46-61. </pages>
Reference-contexts: There has been some controversy about whether the timing requirements of multimedia presentations should be considered to be hard or soft real-time [28, 29]. A large body of knowledge exists on how to build hard-real-time systems, but it is generally expensive to assure that no deadline is ever missed <ref> [44, 37, 72, 67] </ref>. Instead, most existing multimedia systems are susceptible to some data loss and timing error. The majority of the techniques surveyed in this chapter describe ways to reduce the magnitude of these errors.
Reference: [45] <author> Locanthi, B. N. </author> <title> Fast bitblt() with asm() and cpp. </title> <booktitle> In Proceedings of EUUG '87 Conference (Dublin, </booktitle> <address> Ireland, </address> <month> August </month> <year> 1987). </year>
Reference-contexts: It is often possible to reduce the processing time by lossless and lossy process optimizations. An optimization is lossless if it preserves information in the data stream, and lossy if some information is lost. Lossless optimizations include hand-tuning of machine code and elimination of unnecessary data copying <ref> [45, 20] </ref>. Specializations are optimizations that depend on special knowledge of an application. For example, if it is 28 known that a video presentation window cannot be moved or obscured then the presentation can bypass the window system and write directly to the display frame buffer.
Reference: [46] <author> Lougher, P., and Shepherd, D. </author> <title> The design and implementation of a continuous media storage server. </title> <booktitle> In Third International Workshop on Network and Operating System Support for Digital Audio and Video (San Diego, </booktitle> <address> California, </address> <month> November </month> <year> 1992), </year> <journal> IEEE Computer Society, </journal> <pages> pp. 63-74. 116 </pages>
Reference-contexts: In a multi-user environment, reservations have been used to guarantee the availability of resources for a real-time application. Real-time file systems have been designed that guarantee a lower bound on bandwidth for sequential access to a file <ref> [46, 61, 5] </ref>. The Real-Time Mach operating system allows virtual memory pages to be "pinned-down" to avoid page faults [79]. Processor bandwidth may be reserved for periodic real-time tasks [51, 61]. Network bandwidth reservation protocols have been described and implemented [22, 2, 86].
Reference: [47] <author> Lougher, P., and Shepherd, D. </author> <title> The design of a storage server for continuous media. </title> <journal> The Computer Journal 36, </journal> <month> 1 (February </month> <year> 1993), </year> <pages> 32-42. </pages>
Reference-contexts: Consider the way that existing multimedia systems handle tradeoffs between QOS and resource use. Video on Demand (VOD) systems typically guarantee lossless data transport and strict presentation timing by making conservative resource reservations <ref> [47, 6, 84, 61] </ref>. This approach is designed to satisfy a specific application where the QOS requirements are high. A multimedia system designed to support a greater range of applications should also provide efficient support for moderate and low-QOS presentations. <p> Compression techniques for reducing storage bandwidth requirements are described in Section 2.2.5. Resource reservations to avoid contention are discussed in Section 2.2.7. 25 Data Layout A careful layout of data in storage is an important part of many continuous media storage systems <ref> [47, 6] </ref>. The goal of data layout is to minimize seeks and rotational latency between reads. Seek time can be minimized by storing the data stream in contiguous storage locations. <p> When reading the data, N slices can be transferred in parallel, achieving a near-linear speedup of disk bandwidth [9]. Video on Demand (VOD) systems have been built using disk striping to provide bandwidth guarantees for many concurrent users <ref> [47, 6, 84] </ref>. However, to share bandwidth between multiple playback streams requires interleaved service, just as for a non-striped disk. stream A is striped over only 3 out of 8 disks. <p> This work supplies an important analysis of techniques for bounding jitter in continuous media transport but does not address other user-level QOS issues such as scalable image quality. Other QOS parameters and algorithms have been described for reservation of file system <ref> [5, 47, 61, 84] </ref>, CPU [80, 51], and network capacity [22, 90, 42, 3, 86, 89]. All of these resource reservation approaches characterize bandwidth as a QOS parameter. We do not include bandwidth in presentation QOS specifications because it depends on implementation choices for data encoding.
Reference: [48] <author> Luther, A. C. </author> <title> Digital Video in the PC Environment. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1989. </year>
Reference-contexts: Prefetching may also allow higher overall throughput, since computation may be overlapped with concurrent disk access. However, prefetching does incur some computational overhead for scheduling concurrent processes. Many continuous media players are organized as a pipeline of storage access, network transport, decoding and display processes <ref> [48, 4, 66, 13, 39] </ref>. Let us generalize the idea of prefetching to describe any decoupling of a computation into concurrent producer and consumer processes. <p> Without competition for resources from other users, the performance of multimedia applications can be predictable. Even 35 with multi-tasking, the scheduling of multimedia digital video and audio has been successfully achieved on single-user systems by elevating the priority of the media-handling tasks <ref> [48] </ref>. In a multi-user environment, reservations have been used to guarantee the availability of resources for a real-time application. Real-time file systems have been designed that guarantee a lower bound on bandwidth for sequential access to a file [46, 61, 5].
Reference: [49] <author> Luther, A. C. </author> <title> Digital video and image compression. In Multimedia Systems. </title> <publisher> Addison-Wesley, </publisher> <address> New York, </address> <year> 1994, </year> <pages> pp. 143-174. </pages>
Reference-contexts: Lossy 29 compression techniques include truncation, subsampling, motion compensation and the discrete cosine transform (DCT). The Motion Picture Experts Group (MPEG) MPEG-1 compression standard uses motion compensation and the DCT in combination with lossless compression techniques to achieve compression ratios on the order of 70:1 <ref> [49, 23, 74] </ref>. As with lossy code optimizations, lossy compression techniques are designed to minimize the perceived degradation of quality. MPEG-1 compression has been optimized to yield VHS quality video at CD-ROM data rates.
Reference: [50] <author> Maier, D., Walpole, J., and Staehli, R. </author> <title> Storage system architectures for continuous media data. </title> <booktitle> In Foundations of Data Organization and Algorithms, FODO '93 (1993), vol. 730 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <pages> pp. 1-18. </pages>
Reference-contexts: To support time-based presentations, a data manipulation language for a multimedia database should also allow the application to specify when, where, and how precisely the data should be delivered <ref> [50] </ref>. These constraints on delivery are an example of a QOS-based interface. The specification of QOS requirements is an issue for logical data modelling. QOS management is both a problem and an opportunity.
Reference: [51] <author> Mercer, C., Savage, S., and Tokuda, H. </author> <title> Processor capacity reserves: Operating system support for multimedia applications. </title> <booktitle> In Proceedings of the International Conference on Multimedia Computing and Systems, </booktitle> <address> Boston, MA (May 1994), </address> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <pages> pp. 90-99. </pages>
Reference-contexts: Despite this tolerance for lower quality, it is important to recognize the point at which poor quality impairs the usefulness of a presentation. An admission test can be invoked with each user request to determine if the request can be satisfied without excessively degrading the service to other users <ref> [5, 51, 71] </ref>. 1.2 The Need for Presentation Quality of Service Specifica tions How can a request for multimedia services express its QOS requirements? A multimedia system will need to interpret these requirements in order to schedule resources appropriately. <p> Real-time file systems have been designed that guarantee a lower bound on bandwidth for sequential access to a file [46, 61, 5]. The Real-Time Mach operating system allows virtual memory pages to be "pinned-down" to avoid page faults [79]. Processor bandwidth may be reserved for periodic real-time tasks <ref> [51, 61] </ref>. Network bandwidth reservation protocols have been described and implemented [22, 2, 86]. A reservation protocol describes the parameters used to make a reservation. <p> This work supplies an important analysis of techniques for bounding jitter in continuous media transport but does not address other user-level QOS issues such as scalable image quality. Other QOS parameters and algorithms have been described for reservation of file system [5, 47, 61, 84], CPU <ref> [80, 51] </ref>, and network capacity [22, 90, 42, 3, 86, 89]. All of these resource reservation approaches characterize bandwidth as a QOS parameter. We do not include bandwidth in presentation QOS specifications because it depends on implementation choices for data encoding.
Reference: [52] <author> Meyer-Boudnik, T., and Effelsberg, W. </author> <title> MHEG explained. </title> <booktitle> IEEE Multimedia 2, 1 (1995), </booktitle> <pages> 26-38. </pages>
Reference-contexts: As with other authoring tools, the algebraic expressions describe presentation goals without providing constraints for an implementation. 2.1.6 MHEG ISO's Multimedia Hypermedia Experts Group has defined the MHEG encoding standard for storage, exchange and execution of multimedia presentations <ref> [52] </ref>. <p> Other languages provide a richer authoring environment, but fail to define an ideal presentation. MAEstro, OCPNs, and the MHEG standard all describe an operational semantics where the timing of one presentation event may depend on the run-time behavior of another presentation process <ref> [19, 41, 52] </ref>. These languages can be extended to define an ideal presentation by specifying ideal run-time behavior for all presentation actions. With such extensions, formal QOS specifications can be defined by following the framework described in this chapter.
Reference: [53] <author> Microsoft Corporation. </author> <title> Microsoft Windows Multimedia Programmer's Workbook. </title> <publisher> Microsoft Press, </publisher> <year> 1991. </year>
Reference-contexts: By prefetching so that data is available "just-in-time", the data can be displayed immediately with no buffering requirements. On personal computers and some workstation environments, storage latency is repeatable and may be empirically determined by rehearsing a presentation <ref> [19, 53] </ref>. Even if some buffering is desirable to hide prefetch jitter, worst-case latency estimates may be used to determine a schedule that prefetches data as late as possible. If prefetch latency is unpredictable, a worst-case bound may still provide a better prefetch schedule than the greedy approach.
Reference: [54] <author> Miller, E. L., and Katz, R. H. </author> <title> Rama: Easy access to a high-bandwidth massively parallel file system. </title> <booktitle> In Proceedings of the 1995 Winter USENIX Conference (New Orleans, </booktitle> <address> LA, </address> <month> January </month> <year> 1995), </year> <booktitle> USENIX Association, </booktitle> <pages> pp. 59-70. </pages>
Reference-contexts: This inflexibility can be solved by assigning stream segments to disks randomly instead of by striping. A random assignment of stream segments to disks can balance the load among disks nearly as well as a striped layout, but makes it more difficult to provide bandwidth guarantees <ref> [54] </ref>. 2.2.4 Process Optimizations Software transport, decoding and processing of video data is often the bottleneck in multimedia systems. It is often possible to reduce the processing time by lossless and lossy process optimizations.
Reference: [55] <author> Mills, D. L. </author> <title> Precision synchronization of computer network clocks. </title> <journal> Computer Communication Review 24, </journal> <month> 2 (April </month> <year> 1994), </year> <pages> 28-43. </pages>
Reference-contexts: Our ability to synchronize processes executing on different machines is limited by the communication latency between the machines, and by the variation in clock rates. Clock rates can vary in the parts-per-million range with normal temperature changes <ref> [55] </ref>. These uncertainties make it difficult to assure that media streams from different sources begin at the same time and proceed at the same rate. One solution is to use a network clock-synchronization protocol, such as NTP, to synchronize distributed clocks within a few milliseconds [55]. <p> range with normal temperature changes <ref> [55] </ref>. These uncertainties make it difficult to assure that media streams from different sources begin at the same time and proceed at the same rate. One solution is to use a network clock-synchronization protocol, such as NTP, to synchronize distributed clocks within a few milliseconds [55]. However, in most presentations of stored data the output devices are attached to a single client machine. In that case, it is a simple matter to control 24 synchronization via a local clock on the client.
Reference: [56] <author> Nahrstedt, K., and Smith, J. M. </author> <title> The QOS broker. </title> <booktitle> IEEE Multimedia 2, 1 (1995), </booktitle> <pages> 53-67. </pages>
Reference-contexts: This completes the proof that SQUINT's admission test guarantees the QOS specified in the player. How does SQUINT's admission test compare with other multimedia systems? Most of the systems surveyed in this thesis make guarantees based on bandwidth requirements for a particular media representation <ref> [56, 12] </ref>. They lack a means for expressing QOS requirements independent of the data type. Other systems that support scalable presentation quality do not provide complete guarantees [80, 21]. SQUINT's admission test supports 100 QOS specifications that are scalable and independent of device and data representations. <p> Other researchers are only now beginning to solve the problem of how to choose from among many possible presentation plans. Nahrstedt and Smith have proposed the QOS Broker technique for presentation planning <ref> [56] </ref>. Application QOS requirements are input to a broker-buyer which translates them into requirements for local and remote resources. The broker-buyer first negotiates with the local operating system for local resources, rejecting or modifying the application requirements if sufficient resources are unavailable.
Reference: [57] <institution> ParcPlace Systems, Inc. VisualWorks. 999 E. </institution> <address> Arques Ave., Sunnyvale, CA 94086, </address> <year> 1992. </year>
Reference-contexts: As the name suggests, SQUINT supports controls for image resolution and other components of presentation quality. SQUINT is also an acronym for Smalltalk QOS User INTerface, because it makes heavy use of the Smalltalk programming environment <ref> [57] </ref>. This section gives a brief overview of the design goals for the player. A detailed description of the design and implementation of the player are given in Sections 5.2, 5.3, and 5.4.
Reference: [58] <author> Perez-Luque, M. J., and Little, T. </author> <title> A temporal reference framework for multimedia synchronization. </title> <note> To appear in IEEE Journal on Selected Areas in Communications (1995). </note>
Reference-contexts: As with a guarantee approach, adaptive algorithm designers are forced to make ad hoc choices regarding which aspect of presentation quality to sacrifice because of the lack of a complete specification of QOS requirements. To date, researchers have found that presentation-level QOS requirements are difficult to define <ref> [58, 19, 33, 7] </ref>. Part of the difficulty is due to a confusion between specifying what presentation is desired and how to achieve that presentation. Presentation QOS requirements derive from what functionality is intended. On the other hand, resource QOS requirements derive from how the presentation is to be implemented. <p> SQUINT 102 demonstrates that simple heuristics allow fast translation of QOS requirements into reasonable resource scheduling parameters. The decision to synchronize all controllers with a single clock eliminates many of the synchronization concerns that have been raised by other researchers <ref> [41, 34, 58] </ref>. The use of a fixed schedule allows every component of the presentation plan to work independent of the others while still achieving good overall synchronization. The danger of this approach is that processing delays result in skipped segments of audio and video.
Reference: [59] <author> Philips Semiconductors. </author> <title> Desktop Video Handbook. </title> <address> Palo Alto, CA, </address> <year> 1992. </year> <month> 117 </month>
Reference-contexts: For example, compact disk audio is sampled 12 at 44 Khz with 16-bits (65536 values) per sample. Digital television for studio work is sampled at 13.5 Mhz with 8-bit samples for the luminance signal <ref> [59] </ref>. A content descriptor for continuous media playback can be as simple as a file name and a few parameters that describe how the data was recorded. For example, Sun audio files contain a header with sample rate and format information [76].
Reference: [60] <author> Piscitello, D. M., and Chapin, A. L. </author> <title> Open Systems Networking. </title> <publisher> Addison-Wesley, </publisher> <year> 1993. </year>
Reference-contexts: Rate-based protocols can achieve flow control with less overhead than a greedy prefetching approach [64]. For minimal latency communications, unreliable messaging protocols such as UDP may be used since there is not time to retransmit lost messages <ref> [60] </ref>. Variations in prefetch and transport delays will produce jitter in the arrival of data in the queue. The average amount of data in the queue should be sufficient to avoid starvation when packets are delayed.
Reference: [61] <author> Ramakrishnan, K., Vaitzblit, L., Gray, C., Vahalia, U., Ting, D., Tzelnic, P., Glaser, S., and Duso, W. </author> <title> Operating system support for a video-on-demand file service. In NOSSDAV '93 (November 1993), </title> <publisher> Lancaster University, </publisher> <pages> pp. 225-236. </pages>
Reference-contexts: Consider the way that existing multimedia systems handle tradeoffs between QOS and resource use. Video on Demand (VOD) systems typically guarantee lossless data transport and strict presentation timing by making conservative resource reservations <ref> [47, 6, 84, 61] </ref>. This approach is designed to satisfy a specific application where the QOS requirements are high. A multimedia system designed to support a greater range of applications should also provide efficient support for moderate and low-QOS presentations. <p> In a multi-user environment, reservations have been used to guarantee the availability of resources for a real-time application. Real-time file systems have been designed that guarantee a lower bound on bandwidth for sequential access to a file <ref> [46, 61, 5] </ref>. The Real-Time Mach operating system allows virtual memory pages to be "pinned-down" to avoid page faults [79]. Processor bandwidth may be reserved for periodic real-time tasks [51, 61]. Network bandwidth reservation protocols have been described and implemented [22, 2, 86]. <p> Real-time file systems have been designed that guarantee a lower bound on bandwidth for sequential access to a file [46, 61, 5]. The Real-Time Mach operating system allows virtual memory pages to be "pinned-down" to avoid page faults [79]. Processor bandwidth may be reserved for periodic real-time tasks <ref> [51, 61] </ref>. Network bandwidth reservation protocols have been described and implemented [22, 2, 86]. A reservation protocol describes the parameters used to make a reservation. <p> This work supplies an important analysis of techniques for bounding jitter in continuous media transport but does not address other user-level QOS issues such as scalable image quality. Other QOS parameters and algorithms have been described for reservation of file system <ref> [5, 47, 61, 84] </ref>, CPU [80, 51], and network capacity [22, 90, 42, 3, 86, 89]. All of these resource reservation approaches characterize bandwidth as a QOS parameter. We do not include bandwidth in presentation QOS specifications because it depends on implementation choices for data encoding.
Reference: [62] <author> Ramamritham, K., and Pu, C. </author> <title> A formal characterization of epsilon serializability. </title> <journal> IEEE Transactions on Knowledge and Data Engineering (June 1995). </journal>
Reference-contexts: A formal approach for specifying accuracy requirements in database transactions 6 has been described under the name Epsilon Serializability (ESR) <ref> [62] </ref>. ESR allows a query to specify an acceptable amount of error in data values so that the DBMS can relax some of the normal data locking requirements. In multimedia systems, the requirements for presentation fidelity are analogous to the requirements for accuracy in the result of a database query. <p> We have described a completeness criteria for the definition of error model components. This methodology is similar to the formal theory for Epsilon Serializability in transaction processing <ref> [62] </ref>. Using the relational data model, ESR proposes a general theory for defining a transaction error metric and using that metric to determine when locking requirements can be relaxed.
Reference: [63] <author> Rangan, P. V., Burkhard, W. A., Bowdidge, R. W., Vin, H. M., Lindwall, J. W., Chan, K., Aaberg, I. A., and Yamamoto, L. M. </author> <title> A testbed for managing digital video and audio storage. </title> <booktitle> In Proceedings of the Summer 1991 USENIX Conference (1991), </booktitle> <pages> pp. 199-208. </pages>
Reference-contexts: A concurrent presentation of two or more streams, e.g. audio and video tracks, requires interleaved access to data for each stream. If the streams are to be played out synchronously they can be multiplexed and stored as a single stream <ref> [63] </ref>. During playback, a multiplexed stream must be de-multiplexed before the data is written to separate output devices. If concurrent streams are not multiplexed, then the disk head must be scheduled to interleave reads from each stream.
Reference: [64] <author> Rangan, P. V., and Ramanathan, S. </author> <title> Rate-based feedback techniques for continuity and synchronization in multimedia retrieval over high-speed networks. </title> <type> Tech. Rep. </type> <institution> CS92-230, UCSD, </institution> <month> March </month> <year> 1992. </year>
Reference-contexts: The ACME continuous media I/O server supports connection-driven rate control, where a media output process adapts its rate of consumption to keep pace with a real-time file access process [4]. Rate-based feedback techniques allow distributed prefetching processes to be synchronized with consumer processes <ref> [64, 66, 13, 14] </ref>. A rate-based approach is appropriate when the prefetched data becomes obsolete at a predictable rate, regardless of whether the consumer process has read it. Obsolete data may be overwritten by the prefetching process without waiting for the consumer. <p> Obsolete data may be overwritten by the prefetching process without waiting for the consumer. Rate-based protocols can achieve flow control with less overhead than a greedy prefetching approach <ref> [64] </ref>. For minimal latency communications, unreliable messaging protocols such as UDP may be used since there is not time to retransmit lost messages [60]. Variations in prefetch and transport delays will produce jitter in the arrival of data in the queue.
Reference: [65] <author> Rochkind, M. J. </author> <title> Advanced UNIX Programming. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1985. </year>
Reference-contexts: A process that writes to a UNIX pipe is viewed as a greedy prefetching process because it does not wait for a read on the pipe unless the queue for the pipe is full <ref> [65] </ref>. The AudioFile system uses pipe semantics to connect an audio playback application to a device server using a fixed sized queue [39]. Greedy prefetching uses a simple back-pressure technique to synchronize a fast producer with slower consumer.
Reference: [66] <author> Rowe, L. A., Patel, K. D., Smith, B. C., and Liu, K. </author> <title> MPEG video in software: Representation, transmission, and playback. In High Speed Networking and Multimedia Computing, </title> <booktitle> IS&T/SPIE, Symposium on Elec. </booktitle> <institution> Imaging Sci. & Tech., </institution> <address> San Jose, </address> <note> CA (February 1994). </note>
Reference-contexts: The Plateau group at Berkeley has described an adaptive algorithm for network video playback that attempts to decode as many video frames as possible while staying ahead of the display schedule <ref> [66] </ref>. If the decoder falls behind, some number of frames are skipped in order to reduce the decoder's processing load. Skipping frames is one way to trade presentation quality for resource savings. <p> In continuous media presentations bandwidth limitations frequently limit the sample rate that can be transmitted and decoded. Several researchers have described the use of software-feedback techniques to determine the available bandwidth and to adapt the scheduled sample rate accordingly <ref> [66, 13] </ref>. In a distributed system, there is no single clock that can be used to control synchronization. Our ability to synchronize processes executing on different machines is limited by the communication latency between the machines, and by the variation in clock rates. <p> Prefetching may also allow higher overall throughput, since computation may be overlapped with concurrent disk access. However, prefetching does incur some computational overhead for scheduling concurrent processes. Many continuous media players are organized as a pipeline of storage access, network transport, decoding and display processes <ref> [48, 4, 66, 13, 39] </ref>. Let us generalize the idea of prefetching to describe any decoupling of a computation into concurrent producer and consumer processes. <p> The ACME continuous media I/O server supports connection-driven rate control, where a media output process adapts its rate of consumption to keep pace with a real-time file access process [4]. Rate-based feedback techniques allow distributed prefetching processes to be synchronized with consumer processes <ref> [64, 66, 13, 14] </ref>. A rate-based approach is appropriate when the prefetched data becomes obsolete at a predictable rate, regardless of whether the consumer process has read it. Obsolete data may be overwritten by the prefetching process without waiting for the consumer. <p> Our approach to QOS specification allows a complete specification of requirements and data independence. Software feedback techniques have been used to dynamically adjust stream processing workloads to available system bandwidth <ref> [10, 13, 66, 80] </ref>. Our quality estimation function can be used with feedback techniques to optimize a presentation for the current resource availability. For example, a presentation manager can monitor each of the presentation error components at runtime.
Reference: [67] <author> Sha, L., and Sathaye, S. S. </author> <title> A systematic approach to designing distributed real-time systems. </title> <booktitle> Computer 26, </booktitle> <month> 9 (September </month> <year> 1993), </year> <pages> 68-78. </pages>
Reference-contexts: There has been some controversy about whether the timing requirements of multimedia presentations should be considered to be hard or soft real-time [28, 29]. A large body of knowledge exists on how to build hard-real-time systems, but it is generally expensive to assure that no deadline is ever missed <ref> [44, 37, 72, 67] </ref>. Instead, most existing multimedia systems are susceptible to some data loss and timing error. The majority of the techniques surveyed in this chapter describe ways to reduce the magnitude of these errors.
Reference: [68] <author> Shetler, T. </author> <title> Birth of the BLOB. </title> <address> BYTE (USA) 15, </address> <month> 2 (Feb </month> <year> 1990), </year> <pages> 221-2, 224, 226. </pages>
Reference-contexts: Audio and video streams typically contain a large portion of irrelevant information that is not easily separated from essential information. Today's successful multimedia systems handle audio and video data types as Binary Large Objects (BLOBs) whose meaning is understood only by the user <ref> [68] </ref>. As audio and video capabilities are added to nearly every workstation and personal computer, the computer is assuming a new role as the smart user-interface to unified communication and information services. Computers add value to analog media through navigation support and information management services.
Reference: [69] <author> Spivey, J. </author> <title> The Z Notation: a Reference Manual, second ed. </title> <booktitle> Prentice-Hall International, </booktitle> <address> New York, </address> <year> 1992. </year>
Reference-contexts: The method used to develop these definitions can be applied to define QOS semantics for other authoring models and less conservative constraints. 49 50 4.1 Z Notation We use a subset of the Z (pronounced "Zed") specification language as defined in The Z Reference Manual <ref> [69] </ref> and augmented with the standard arithmetic and calculus operators and relations defined over the set of real numbers R. The definitions of syntax and notation given here should be used as a reference while reading the rest of the chapter.
Reference: [70] <author> Staehli, R. A., and Walpole, J. </author> <title> Constrained-latency storage access. </title> <booktitle> Computer 26, </booktitle> <month> 3 (March </month> <year> 1993), </year> <pages> 44-53. </pages>
Reference-contexts: Chapter 2 Real-Time Presentation of Stored Multimedia Data We use the term Constrained Latency Storage Access (CLSA) to describe applications that have strict deadlines for the completion of some secondary storage accesses <ref> [70] </ref>. Examples of such applications are found not only in multimedia applications but also in real-time databases, which must satisfy strict constraints on transaction times [73, 1]. <p> When the application tries to access the data, it is found in main memory and storage access delays are avoided. In an earlier work we have described the problem of constrained-latency storage access (CLSA) and identified prefetching as the generic class for solutions <ref> [70] </ref>. Prefetching reduces presentation delay and reduces jitter (variation in delay) by allowing the display process to perform a shorter computation at the scheduled output time. Prefetching may also allow higher overall throughput, since computation may be overlapped with concurrent disk access.
Reference: [71] <author> Stankovic, J. A., and Ramamritham, K. </author> <title> The Spring Kernel: A new paradigm for real-time operating systems. </title> <booktitle> Operating Systems Review 23, </booktitle> <month> 3 (July </month> <year> 1989), </year> <pages> 54-71. </pages>
Reference-contexts: Despite this tolerance for lower quality, it is important to recognize the point at which poor quality impairs the usefulness of a presentation. An admission test can be invoked with each user request to determine if the request can be satisfied without excessively degrading the service to other users <ref> [5, 51, 71] </ref>. 1.2 The Need for Presentation Quality of Service Specifica tions How can a request for multimedia services express its QOS requirements? A multimedia system will need to interpret these requirements in order to schedule resources appropriately.
Reference: [72] <author> Stankovic, J. A., and Ramamritham, K. </author> <title> The Spring Kernel: A new paradigm for real-time systems. </title> <journal> IEEE Software (May 1991), </journal> <pages> 62-72. 118 </pages>
Reference-contexts: There has been some controversy about whether the timing requirements of multimedia presentations should be considered to be hard or soft real-time [28, 29]. A large body of knowledge exists on how to build hard-real-time systems, but it is generally expensive to assure that no deadline is ever missed <ref> [44, 37, 72, 67] </ref>. Instead, most existing multimedia systems are susceptible to some data loss and timing error. The majority of the techniques surveyed in this chapter describe ways to reduce the magnitude of these errors. <p> Worst case latency estimates can be so large as to make schedulability analysis impracticable. The Spring Kernel provides dynamic scheduling of new real-time tasks in parallel with the execution of previously guaranteed tasks <ref> [72] </ref>. The principle feature of its scheduling approach is a functional partitioning of CPU and other resources between a planning sched-uler and the dispatching and execution of guaranteed tasks.
Reference: [73] <author> Stankovic, J. A., and Zhao, W. </author> <title> On real-time transactions. </title> <booktitle> SIGMOD Record 17, </booktitle> <month> 1 (March </month> <year> 1988), </year> <pages> 4-18. </pages>
Reference-contexts: Examples of such applications are found not only in multimedia applications but also in real-time databases, which must satisfy strict constraints on transaction times <ref> [73, 1] </ref>. There has been some controversy about whether the timing requirements of multimedia presentations should be considered to be hard or soft real-time [28, 29].
Reference: [74] <author> Steinmetz, R. </author> <title> Data compression in multimedia computing standards and systems. </title> <booktitle> Multimedia Systems 1, </booktitle> <month> 5 (March </month> <year> 1994), </year> <pages> 187-204. </pages>
Reference-contexts: These two problems are related through the resource requirements for data processing, storage and transport. For example, a real-time presentation may be achieved with limited resources by using a highly compressed digital encoding, such as MPEG, that sacrifices image quality for reduced 3 storage-volume and transport-bandwidth requirements <ref> [23, 74] </ref>. In fact, both problems have trivial solutions if the application allows arbitrary degradation of quality! But for acceptable presentations, a multimedia system must attempt to provide accurate timing and good image quality. <p> Lossy 29 compression techniques include truncation, subsampling, motion compensation and the discrete cosine transform (DCT). The Motion Picture Experts Group (MPEG) MPEG-1 compression standard uses motion compensation and the DCT in combination with lossless compression techniques to achieve compression ratios on the order of 70:1 <ref> [49, 23, 74] </ref>. As with lossy code optimizations, lossy compression techniques are designed to minimize the perceived degradation of quality. MPEG-1 compression has been optimized to yield VHS quality video at CD-ROM data rates.
Reference: [75] <author> Steinmetz, R., and Engler, C. </author> <title> Human perception of media synchronization. </title> <type> Tech. Rep. </type> <institution> 43.9310, IBM European Networking Center, </institution> <year> 1993. </year>
Reference-contexts: An approximate model of human perception can provide a useful tool for presentation QOS management. The degree to which different types of error interfere with the user's ability to understand the content can be determined by studies of human perception <ref> [75, 40] </ref>. This thesis focuses on how to model the user-perceivable error. For a QOS specification to be useful for resource management, it must have formal semantics. Formal semantics allow a multimedia system designer to validate whether a particular presentation algorithm will be able to meet the specification. <p> Other researchers have reported empirical determinations of acceptable quality for various types of presentation error. Steinmetz documents the perceived level of annoyance as a function of synchronization error between audio and video <ref> [75] </ref>. His results argue for acceptable values of synchronization error between -80 ms and +80 ms when users are watching a moderate close-up of a person talking. 106 6.2 Presentation Planning Most existing multimedia systems do not have the capability to select different QOS levels for the same content.
Reference: [76] <author> Sun Microsystems. </author> <title> AUDIO HDR(3). </title> <journal> Sun Software Technical Bulletin, </journal> <year> 1989. </year>
Reference-contexts: A content descriptor for continuous media playback can be as simple as a file name and a few parameters that describe how the data was recorded. For example, Sun audio files contain a header with sample rate and format information <ref> [76] </ref>. For best reproduction of the original audio signal, the digital samples should be written to a digital-to-analog converter at the same rate and format that they were recorded. This timing requirement is typically met by periodic scheduling of a low-latency output task.
Reference: [77] <author> The Voyager Company. </author> <title> A Hard Day's Night. 1992. </title> <publisher> CD-ROM. </publisher>
Reference-contexts: One of the early titles in the CD-ROM multimedia publishing market is a repackaging of the Beatles' film, "A Hard Day's Night" <ref> [77] </ref>. This CD-ROM includes the entire film as a compressed digital-video movie. The resolution and playback fidelity is well below the quality of a VHS home video, but the CD-ROM compensates by offering random access and hypermedia links between annotations and film segments.
Reference: [78] <author> Thimm, H., and Klas, W. </author> <title> Delta-sets for optimized reactive adaptive playout management in distributed multimedia database systems. </title> <booktitle> To appear in 12th International Conference on Data Engineering, </booktitle> <address> New Orleans, LA (February 1996). </address>
Reference-contexts: Distributed elements that provide or require multimedia services communicate through a global blackboard where the Orchestrator attempts to configure optimal connections between them. The AMOS Multimedia Playout Manager allows integration of multimedia data in a distributed database management system <ref> [78] </ref>. Physical storage and access for continuous media are supported by specialized services that can perform adaptive prefetching to make data available on demand in a client's local buffer.
Reference: [79] <author> Tokuda, H., Nakajima, T., and Rao, P. </author> <title> Real-time Mach: Towards a predictable real-time system. </title> <booktitle> In Mach Workshop (1990), USENIX Association. </booktitle>
Reference-contexts: Real-time file systems have been designed that guarantee a lower bound on bandwidth for sequential access to a file [46, 61, 5]. The Real-Time Mach operating system allows virtual memory pages to be "pinned-down" to avoid page faults <ref> [79] </ref>. Processor bandwidth may be reserved for periodic real-time tasks [51, 61]. Network bandwidth reservation protocols have been described and implemented [22, 2, 86]. A reservation protocol describes the parameters used to make a reservation.
Reference: [80] <author> Tokuda, H., Tobe, Y., Chou, S. T.-C., and Moura, J. M. </author> <title> Continuous media communication with dynamic QOS control using ARTS with an FDDI network. </title> <booktitle> In SIGCOMM '92, Computer Communcation Review (1992), </booktitle> <volume> vol. 22, </volume> <publisher> ACM Press, </publisher> <address> New York, </address> <pages> pp. 88-98. </pages>
Reference-contexts: A multimedia system designed to support a greater range of applications should also provide efficient support for moderate and low-QOS presentations. The Capacity-Based Session Reservation Protocol (CBSRP) allows the specification of discrete QOS classes based on sampling rate and spatial resolution <ref> [80] </ref>. Although the CBSRP definition of QOS does support dynamic control of resource usage, it does not constrain loss of information through quantization, temporal jitter, or synchronization errors. <p> They lack a means for expressing QOS requirements independent of the data type. Other systems that support scalable presentation quality do not provide complete guarantees <ref> [80, 21] </ref>. SQUINT's admission test supports 100 QOS specifications that are scalable and independent of device and data representations. These QOS specifications are translated into presentation plans that are guaranteed not to exceed the error constraints. <p> This work supplies an important analysis of techniques for bounding jitter in continuous media transport but does not address other user-level QOS issues such as scalable image quality. Other QOS parameters and algorithms have been described for reservation of file system [5, 47, 61, 84], CPU <ref> [80, 51] </ref>, and network capacity [22, 90, 42, 3, 86, 89]. All of these resource reservation approaches characterize bandwidth as a QOS parameter. We do not include bandwidth in presentation QOS specifications because it depends on implementation choices for data encoding. <p> Our approach to QOS specification allows a complete specification of requirements and data independence. Software feedback techniques have been used to dynamically adjust stream processing workloads to available system bandwidth <ref> [10, 13, 66, 80] </ref>. Our quality estimation function can be used with feedback techniques to optimize a presentation for the current resource availability. For example, a presentation manager can monitor each of the presentation error components at runtime.
Reference: [81] <author> Ulichney, R. </author> <title> Digital Halftoning. </title> <publisher> The MIT Press, </publisher> <year> 1987. </year>
Reference-contexts: Another lossy optimization is the use of a less expensive and lower-quality dithering algorithm. For example, an error-diffusion dither generally yields the best image quality for pixel-depth reductions, but a simple truncation of pixel values to the required depth is much faster <ref> [81] </ref>. 2.2.5 Data Compression Data compression is used to reduce the storage and transport costs of multimedia data, but these savings come at the expense of increased processing requirements for encoding and decoding.
Reference: [82] <author> Venkatramani, C., and cker Chiueh, T. </author> <title> A survey of near-line storage technologies: Devices and systems. </title> <type> Tech. Rep. </type> <institution> Experimental Computer Systems Lab, </institution> <type> TR #2, </type> <institution> Dept. of Computer Science, SUNY Stony Brook, </institution> <month> October </month> <year> 1993. </year>
Reference-contexts: The variations in throughput and latency characteristics of such systems is very large. CD-ROM drives with transfer rates of 1.2 MBytes per second and seek times on the order of 1 second are in common use on personal computer systems <ref> [82] </ref>. A throughput bottleneck in storage forces either a slow-down of the presentation or information loss through skipped data. Large storage access latency causes delay and jitter in a presentation. Storage optimizations are targeted at reducing latency and increasing throughput.
Reference: [83] <author> Vin, H. M., Goyal, P., and Goyal, A. </author> <title> A statistical admission control algorithm for multimedia servers. </title> <booktitle> In ACM Multimedia 94 (October 1994), </booktitle> <pages> pp. 33-40. </pages>
Reference-contexts: Formal semantics allow a multimedia system designer to validate whether a particular presentation algorithm will be able to meet the specification. A formal specification is a prerequisite for reliable presentation quality guarantees, even when those guarantees are of a statistical nature <ref> [83] </ref>. Even if the goal is only to provide the best quality with the available resources, a formal semantics for presentation quality is needed to validate the optimality of a particular presentation.
Reference: [84] <author> Vin, H. M., and Rangan, P. V. </author> <title> Designing a multi-user HDTV storage server. </title> <journal> IEEE Journal on Selected Areas in Communication 11, </journal> <month> 1 (January </month> <year> 1993). </year>
Reference-contexts: Consider the way that existing multimedia systems handle tradeoffs between QOS and resource use. Video on Demand (VOD) systems typically guarantee lossless data transport and strict presentation timing by making conservative resource reservations <ref> [47, 6, 84, 61] </ref>. This approach is designed to satisfy a specific application where the QOS requirements are high. A multimedia system designed to support a greater range of applications should also provide efficient support for moderate and low-QOS presentations. <p> When reading the data, N slices can be transferred in parallel, achieving a near-linear speedup of disk bandwidth [9]. Video on Demand (VOD) systems have been built using disk striping to provide bandwidth guarantees for many concurrent users <ref> [47, 6, 84] </ref>. However, to share bandwidth between multiple playback streams requires interleaved service, just as for a non-striped disk. stream A is striped over only 3 out of 8 disks. <p> This work supplies an important analysis of techniques for bounding jitter in continuous media transport but does not address other user-level QOS issues such as scalable image quality. Other QOS parameters and algorithms have been described for reservation of file system <ref> [5, 47, 61, 84] </ref>, CPU [80, 51], and network capacity [22, 90, 42, 3, 86, 89]. All of these resource reservation approaches characterize bandwidth as a QOS parameter. We do not include bandwidth in presentation QOS specifications because it depends on implementation choices for data encoding.
Reference: [85] <author> Weiss, R., Duda, A., and Gifford, D. K. </author> <title> Composition and search with a video algebra. </title> <booktitle> IEEE Multimedia 2, 1 (1995), </booktitle> <pages> 12-25. </pages>
Reference-contexts: MAEstro is used for authoring multimedia documents with coarse-grained synchronization on UNIX platforms. 2.1.5 Algebraic Video Weiss, et al., have described an informal semantics for an algebra of video composition operators <ref> [85] </ref>. An algebraic video expression can represent a segment of raw video or a composition of other algebraic video expressions. The algebraic operators are shown in Table 2.1. This video algebra allows users to specify presentations through content-based queries and simple composition operations. <p> The transform, clip, cat, synch, and select descriptors support stretching and shrinking, cut, paste, synchronization, and selection of logical outputs. The formal meaning of each descriptor is given in the next subsection. These descriptors are very similar to the algebraic video operators described in Chapter2 <ref> [85] </ref>. Our cat is similar to their concatenation operator. Our transform and synch descriptors are similar, but more general than their stretch, k, and oo operators. They support additional features, such as transition effects from one video segment to the next, but do not provide a formal presentation semantics.
Reference: [86] <author> Wernik, M., Aboul-Magd, O., and Gilbert, H. </author> <title> Traffic management for B-ISDN services. </title> <booktitle> IEEE Network 6 (September 1992), </booktitle> <pages> 10-19. </pages>
Reference-contexts: The Real-Time Mach operating system allows virtual memory pages to be "pinned-down" to avoid page faults [79]. Processor bandwidth may be reserved for periodic real-time tasks [51, 61]. Network bandwidth reservation protocols have been described and implemented <ref> [22, 2, 86] </ref>. A reservation protocol describes the parameters used to make a reservation. For example, the Continuous Media File System (CMFS) defines a real-time session by the maximum read size and read frequency guaranteed for sequential file access [5]. <p> Other QOS parameters and algorithms have been described for reservation of file system [5, 47, 61, 84], CPU [80, 51], and network capacity <ref> [22, 90, 42, 3, 86, 89] </ref>. All of these resource reservation approaches characterize bandwidth as a QOS parameter. We do not include bandwidth in presentation QOS specifications because it depends on implementation choices for data encoding.
Reference: [87] <author> White Pine Software. CU-SeeMe, </author> <year> 1995. </year> <note> software. 119 </note>
Reference-contexts: Another example application is mobile computing, where the ability to view multimedia email and other documents over low-bandwidth connections and on low-resolution displays is important. Audio and video can be supported over 56-Kbps phone lines, albeit with reduced picture quality and frame rate <ref> [87] </ref>. In such applications, the timeliness of access to information may be more important than preservation of the source media quality. Network bandwidth, processing capacity and output device resolution may limit presentation quality, but they do not prevent us from providing real-time multimedia presentations.
Reference: [88] <author> Yu, C., Sun, W., Bitton, D., Yang, Q., Bruno, R., and Tullis, J. </author> <title> Efficient placement of audio data on optical disks for real-time applications. </title> <journal> Comm. ACM 32, </journal> <month> 7 (July </month> <year> 1989). </year>
Reference-contexts: Rotational latency can be minimized by dividing the data into disk-transfer units and writing these units to the next available disk sector at the same rate that they will be read. Yu, et al. have described an optimal placement of audio data on disk that accounts for rotational latency <ref> [88] </ref>. A concurrent presentation of two or more streams, e.g. audio and video tracks, requires interleaved access to data for each stream. If the streams are to be played out synchronously they can be multiplexed and stored as a single stream [63].
Reference: [89] <author> Zhang, H., and Ferrari, D. </author> <title> Improving utilization for deterministic service in multimedia communication. </title> <booktitle> In Proceedings of the International Conference on Multimedia Computing and Systems (May 1994), </booktitle> <pages> pp. 295-305. </pages>
Reference-contexts: Other QOS parameters and algorithms have been described for reservation of file system [5, 47, 61, 84], CPU [80, 51], and network capacity <ref> [22, 90, 42, 3, 86, 89] </ref>. All of these resource reservation approaches characterize bandwidth as a QOS parameter. We do not include bandwidth in presentation QOS specifications because it depends on implementation choices for data encoding.
Reference: [90] <author> Zhang, L., Deering, S., Estrin, D., Shenker, S., and Zappala, D. RSVP: </author> <title> A new resource reservation protocol. </title> <booktitle> IEEE Network 7 (September 1993), </booktitle> <pages> 8-18. </pages>
Reference-contexts: Other QOS parameters and algorithms have been described for reservation of file system [5, 47, 61, 84], CPU [80, 51], and network capacity <ref> [22, 90, 42, 3, 86, 89] </ref>. All of these resource reservation approaches characterize bandwidth as a QOS parameter. We do not include bandwidth in presentation QOS specifications because it depends on implementation choices for data encoding.
Reference: [91] <author> Zhao, W., and Ramamritham, K. </author> <title> Simple and integrated heuristic algorithms for scheduling tasks with time and resource constraints. </title> <note> Journal of Systems and Software 7 (August 1987). </note>
Reference-contexts: The problem of scheduling a set of tasks with time and resource constraints is known to be NP-complete [38]. While effective heuristic algorithms exist for this problem <ref> [91] </ref>, they are sensitive to the uncertainty in task completion times. Worst case latency estimates can be so large as to make schedulability analysis impracticable. The Spring Kernel provides dynamic scheduling of new real-time tasks in parallel with the execution of previously guaranteed tasks [72]. <p> The complexity of their heuristic algorithm for scheduling a set of n tasks in a system having r resources is O (rn 2 ) <ref> [91] </ref>. Blake and Schwan [8] report on another dynamic scheduler that uses a bin-packing approach to provide real-time guarantees (if possible) for dynamically occurring tasks. 37 As in the Spring Kernel, resources may be allocated exclusively by the scheduling process to avoid contention. <p> This optimization problem reduces to the problem of scheduling a set of tasks with time and resource constraints, which is known to be intractable <ref> [91] </ref>. SQUINT instead employs a few simple heuristics to identify error limits that are likely to be feasible and to create a presentation plan that uses near-minimal resources.
References-found: 90

