URL: ftp://info.mcs.anl.gov/pub/Otter/Papers/otter3_manual.ps.gz
Refering-URL: http://www.mcs.anl.gov/AR/otter/
Root-URL: http://www.mcs.anl.gov
Title: Distribution Category:  Manual and Guide  
Author: by William W. McCune 
Date: January 1994  
Note: OTTER 3.0 Reference  This work was supported by the Office of Scientific Computing, U.S. Department of Energy, under Contract W-31-109-Eng-38.  
Address: (UC-405)  9700 South Cass Avenue Argonne, Illinois 60439-4801  
Affiliation: Mathematics and Computer Science  ARGONNE NATIONAL LABORATORY  Mathematics and Computer Science Division  
Pubnum: ANL-94/6  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> W. Bledsoe and D. Loveland, </author> <title> editors. Automated Theorem Proving: After 25 Years, </title> <booktitle> volume 29 of Contemporary Mathematics. AMS, </booktitle> <year> 1984. </year>
Reference: [2] <author> R. S. Boyer and J S. Moore. </author> <title> A Computational Logic. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1979. </year>
Reference: [3] <author> R. S. Boyer and J S. Moore. </author> <title> A Computational Logic Handbook. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1988. </year>
Reference: [4] <author> C.-L. Chang and R. C.-T. Lee. </author> <title> Symbolic Logic and Mechanical Theorem Proving. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1973. </year>
Reference: [5] <author> N. Dershowitz. </author> <title> Termination of rewriting. </title> <journal> Journal of Symbolic Computation, </journal> <volume> 3 </volume> <pages> 69-116, </pages> <year> 1987. </year>
Reference-contexts: (lex-dependent) demodulators lex ([a, b, c, d, or (_,_)]). list (demodulators). or (x,y) = or (y,x). end_of_list. the term or (or (d,b),or (a,c)) will be demodulated to or (a,or (b,or (c,d))) (in several steps). 8.2 LRPO 8.2.1 Term Ordering (lrpo) The lexicographic recursive path ordering (lrpo, or rpo with status) <ref> [5, 8, 10] </ref> is a method for comparing terms. The important theoretical property of lrpo is that it is a termination ordering.
Reference: [6] <author> C. A. R. Hoare and M. J. C. Gordon, </author> <title> editors. Mechanized Reasoning and Hardware Design. </title> <publisher> Prentice-Hall, </publisher> <year> 1992. </year>
Reference: [7] <author> J S. Moore, </author> <title> editor. Special Issue on System Verification. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 5(4), </volume> <year> 1989. </year>
Reference: [8] <editor> J.-P. Jouannaud, editor. </editor> <booktitle> Rewriting Techniques and Applications, Lecture Notes in Computer Science, </booktitle> <volume> Vol. </volume> <pages> 202, </pages> <address> New York, 1985. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: (lex-dependent) demodulators lex ([a, b, c, d, or (_,_)]). list (demodulators). or (x,y) = or (y,x). end_of_list. the term or (or (d,b),or (a,c)) will be demodulated to or (a,or (b,or (c,d))) (in several steps). 8.2 LRPO 8.2.1 Term Ordering (lrpo) The lexicographic recursive path ordering (lrpo, or rpo with status) <ref> [5, 8, 10] </ref> is a method for comparing terms. The important theoretical property of lrpo is that it is a termination ordering.
Reference: [9] <editor> D. Kapur, editor. </editor> <booktitle> Proceedings of the 11th International Conference on Automated Deduction, Lecture Notes in Artificial Intelligence, </booktitle> <volume> Vol. </volume> <pages> 607, </pages> <address> New York, 1992. </address> <publisher> Springer-Verlag. </publisher>
Reference: [10] <author> D. Kapur and H. Zhang. RRL: </author> <title> Rewrite rule laboratory user's manual. </title> <type> Technical Report 89-03, </type> <institution> Department of Computer Science, University of Iowa, </institution> <year> 1989. </year>
Reference-contexts: (lex-dependent) demodulators lex ([a, b, c, d, or (_,_)]). list (demodulators). or (x,y) = or (y,x). end_of_list. the term or (or (d,b),or (a,c)) will be demodulated to or (a,or (b,or (c,d))) (in several steps). 8.2 LRPO 8.2.1 Term Ordering (lrpo) The lexicographic recursive path ordering (lrpo, or rpo with status) <ref> [5, 8, 10] </ref> is a method for comparing terms. The important theoretical property of lrpo is that it is a termination ordering.
Reference: [11] <author> B. Kernighan and D. Ritchie. </author> <title> The C Programming Language. </title> <booktitle> Prentice-Hall, 2nd ed., </booktitle> <year> 1988. </year>
Reference-contexts: Otter does not check that the string in the float_format command is a well-formed format specification. This is the user's responsibility. To fully understand how this works, see the standard C language reference <ref> [11, Appendix B] </ref>; in particular, the C library functions sscanf and sprintf are used to translate to and from strings. 17.10 Foreign Evaluable Functions Otter provides a general mechanism through which the user can create his or her own evaluable functions and predicates.
Reference: [12] <author> D. Knuth and P. Bendix. </author> <title> Simple word problems in universal algebras. </title> <editor> In J. Leech, editor, </editor> <booktitle> Computational Problems in Abstract Algebras, </booktitle> <pages> pages 263-297. </pages> <publisher> Pergamon Press, Oxford, </publisher> <address> U.K., </address> <year> 1970. </year>
Reference-contexts: other, and if every variable that occurs in fi also occurs in ff, the derived equality becomes an lrpo-dependent demodulator. 8.2.4 lrpo-dependent Demodulation (lrpo) An lrpo-dependent demodulator is allowed to rewrite a term if and only if its application produces an lrpo-less-than term. 8.3 Knuth-Bendix Completion The Knuth-Bendix completion procedure <ref> [12] </ref> attempts to transform a set E of equalities into a terminating, canonical set of rewrite rules (demodulators). If it is successful, the resulting set of rewrite rules, a complete set of reductions, is a decision procedure for equality of terms in the theory E.
Reference: [13] <author> A. G. </author> <title> Kurosh. </title> <booktitle> The Theory of Groups, </booktitle> <volume> volume 1. </volume> <publisher> Chelsea, </publisher> <address> New York, </address> <year> 1956. </year>
Reference-contexts: the following input file, Otter uses the knuth-bendix option to prove the difficult half of a group theory theorem of Levi: The commutator operation is associative if and only if the commutator of any two elements lies in the center of the group. (A textbook proof can be found in <ref> [13] </ref>.) Note that, contrary to common practice, the symbol order does not cause the definition of the commutator operation h (_,_) to be used as a rewrite rule to eliminate commutator expressions in h.
Reference: [14] <author> D. Loveland. </author> <title> Automated Theorem Proving: A Logical Basis. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1978. </year>
Reference: [15] <author> E. Lusk and R. Overbeek. </author> <title> The automated reasoning system ITP. </title> <type> Tech. Report ANL-84/27, </type> <institution> Argonne National Laboratory, Argonne, Ill., </institution> <month> April </month> <year> 1984. </year>
Reference: [16] <author> W. McCune. </author> <title> Skolem functions and equality in automated deduction. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence, </booktitle> <pages> pages 246-251, </pages> <address> Cambridge, Mass., 1990. </address> <publisher> MIT Press. </publisher>
Reference: [17] <author> W. McCune. </author> <title> Single axioms for groups and Abelian groups with various operations. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 10(1) </volume> <pages> 1-13, </pages> <year> 1993. </year> <month> 56 </month>
Reference-contexts: The knuth-bendix flag is also very useful when trying to prove equational theorems. (Many open problems have been solved at Argonne in this way; see, e.g., <ref> [17] </ref>). When using knuth_bendix to search for proofs, we are not bound by the conditions listed in the above claim; in fact, we usually apply additional strategies such as limiting the size of retained equalities, being more selective about making equalities into demodulators, and disabling lrpo ordering.
Reference: [18] <author> R. Padmanabhan and W. McCune. </author> <title> Automated reasoning about cubic curves. Computers and Mathematics with Applications, </title> <note> 1993. To appear. </note>
Reference-contexts: Padmanabhan and others, a new inference rule, gL ("geometric Law", or "Local to global"), was added to Otter. The rule implements a local-to-global generalization principle that has a geometric interpretation for cubic curves. The article <ref> [18] </ref> contains a description of the rule, some details about its implementation in Otter, and several new results obtained with its use.
Reference: [19] <author> A. Quaife. </author> <title> Automated development of Tarski's geometry. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 5(1) </volume> <pages> 97-118, </pages> <year> 1989. </year>
Reference: [20] <author> A. Quaife. </author> <title> Automated Development of Fundamental Mathematical Theories. </title> <type> Ph.D. thesis, </type> <institution> University of California at Berkeley, </institution> <year> 1990. </year>
Reference: [21] <editor> J. Siekmann and G. Wrightson, editors. </editor> <booktitle> Automation of Reasoning: Classical Papers on Computational Logic, volume 1 and 2. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1983. </year>
Reference: [22] <author> B. Smith. </author> <title> Reference manual for the environmental theorem prover: An incarnation of AURA. </title> <type> Tech. Report ANL-88-2, </type> <institution> Argonne National Laboratory, Argonne, Ill., </institution> <month> March </month> <year> 1988. </year>
Reference: [23] <editor> M. Stickel, editor. </editor> <booktitle> Proceedings of the 10th International Conference on Automated Deduction, Lecture Notes in Artificial Intelligence, </booktitle> <volume> Vol. </volume> <pages> 449, </pages> <address> New York, 1990. </address> <publisher> Springer-Verlag. </publisher>
Reference: [24] <author> L. Wos. </author> <title> Automated Reasoning: 33 Basic Research Problems. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, N.J., </address> <year> 1988. </year>
Reference: [25] <author> L. Wos, R. Overbeek, E. Lusk, and J. Boyle. </author> <title> Automated Reasoning: Introduction and Applications, revised edition. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1992. </year>
Reference: [26] <author> L. Wos, F. Pereira, R. Boyer, J Moore, W. Bledsoe, L. Henschen, B. Buchanan, G. Wrightson, and C. Green. </author> <title> An overview of automated reasoning and related fields. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 1(1) </volume> <pages> 5-48, </pages> <year> 1985. </year>
Reference: [27] <author> L. Wos, R. Veroff, B. Smith, and W. McCune. </author> <title> The linked inference principle II: The user's view. </title> <editor> In R. Shostak, editor, </editor> <booktitle> Proceedings of the 7th International Conference on Automated Deduction, Lecture Notes in Computer Science, </booktitle> <volume> Vol. 170, </volume> <pages> pages 316-332, </pages> <address> New York, 1984. </address> <publisher> Springer-Verlag. </publisher> <pages> 57 </pages>
Reference-contexts: Dynamic hot clauses can be added to an empty hot list (i.e., no input hot list). 17.3 Linked UR-Resolution Otter has an inference rule, linked_ur_res, that is an application of the linked inference principle <ref> [27] </ref> to UR-resolution. As this manual is written, there is not yet any documentation. The inference rule is still evolving and is highly experimental.
References-found: 27

