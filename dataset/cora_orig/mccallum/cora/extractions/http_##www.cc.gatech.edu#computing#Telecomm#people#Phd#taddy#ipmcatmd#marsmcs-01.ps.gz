URL: http://www.cc.gatech.edu/computing/Telecomm/people/Phd/taddy/ipmcatmd/marsmcs-01.ps.gz
Refering-URL: http://www.cs.gatech.edu/computing/Telecomm/playground/playground.html
Root-URL: 
Title: Internet Engineering Task Force  &lt;draft-talpade-ipatm-marsmcs-01.txt&gt; Multicast Server Architectures for MARS-based ATM multicasting. Status of  
Author: Talpade and Ammar 
Note: this Memo This document is an Internet-Draft. Internet-Drafts are working documents of the Internet Engineering Task Force (IETF), its areas, and its working groups. Note that other groups may also distribute working documents as Internet-Drafts. To learn the current status of any Internet-Draft, please check the ``1id-abstracts.txt'' listing contained in the Internet- Drafts Shadow Directories on ds.internic.net (US East Coast), nic.nordu.net (Europe), ftp.isi.edu (US West Coast), or munnari.oz.au (Pacific Rim).  
Date: March 20, 1996  
Affiliation: INTERNET-DRAFT Georgia Institute of Technology  
Abstract: Internet-Drafts are draft documents valid for a maximum of six months and may be updated, replaced, or obsoleted by other documents at any time. It is inappropriate to use Internet- Drafts as reference material or to cite them other than as ``work in progress.'' Abstract A mechanism to support the multicast needs of layer 3 protocols in general, and IP in particular, over UNI 3.0/3.1 based ATM networks has been described in draft-ietf-ipatm-ipmc-12.txt. Two basic approaches exist for the intra-subnet (intra-cluster) multicasting of IP packets. One makes use of a mesh of point to multipoint VCs (the 'VC Mesh' approach), while the other uses a shared point to multipoint tree rooted on a Multicast Server (MCS). This memo provides details on the design and implementation of an MCS, building on the core mechanisms defined in draft-ietf-ipatm-ipmc-12.txt. 
Abstract-found: 1
Intro-found: 1
Reference: [GA96] <author> Armitage, G. J., </author> <title> "Support for Multicast over UNI 3.0/3.1 based ATM networks", </title> <type> Internet-Draft, </type> <institution> draft-ietf-ipatm-ipmc-12.txt, </institution> <month> Feb </month> <year> 1996. </year>
Reference-contexts: 1 Introduction A solution to the problem of mapping layer 3 multicast service over the connection-oriented ATM service provided by UNI 3.0/3.1, has been presented in <ref> [GA96] </ref>. A Multicast Address Resolution Server (MARS) is used to maintain a mapping of layer 3 group addresses to ATM addresses in that architecture. It can be considered to be an extended analog of the ATM ARP Server introduced in RFC 1577 ([ML93]). <p> Alternatively, the source can make use of a proxy Multicast Server (MCS). The source transmits data to such an MCS, which in turn uses a point-to-multipoint VC to get the data to the group members. The MCS approach has been briefly introduced in <ref> [GA96] </ref>. This memo presents a detailed description of MCS architecture and protocols. We assume an understanding of the IP multicasting over UNI 3.0/3.1 ATM network concepts described in [GA96], and access to it. This document is organized as follows. <p> The MCS approach has been briefly introduced in <ref> [GA96] </ref>. This memo presents a detailed description of MCS architecture and protocols. We assume an understanding of the IP multicasting over UNI 3.0/3.1 ATM network concepts described in [GA96], and access to it. This document is organized as follows. Section 2 presents interactions with the local UNI 3.0/3.1 signalling entity that are used later in the document and have been originally described in [GA96]. <p> assume an understanding of the IP multicasting over UNI 3.0/3.1 ATM network concepts described in <ref> [GA96] </ref>, and access to it. This document is organized as follows. Section 2 presents interactions with the local UNI 3.0/3.1 signalling entity that are used later in the document and have been originally described in [GA96]. Section 3 presents an MCS architecture, along with a description of its interactions with the MARS. Section 4 describes the working of an MCS. The possibility of using multiple MCSs for the same layer 3 group, and the mechanism needed to support such usage, is described in section 5. <p> The designated MCS terminates one point-to-point VC from each cluster member that is multicasting to the layer 3 group. Each group member is the leaf of the point-to-multipoint VC originating from the MCS. A brief introduction to possible MCS architectures has been presented in <ref> [GA96] </ref>. The main contribution of that document concerning the MCS approach is the specification of the MARS interaction with the MCS. The next section lists control messages exchanged by the MARS and MCS. <p> MARS SJOIN and MARS SLEAVE are also identical in format to MARS JOIN. As such, their formats and those of MARS REQUEST, MARS MULTI, MARS NAK and MARS REDIRECT MAP are described in <ref> [GA96] </ref>. We describe their usage in section 4. All control messages are LLC/SNAP encapsulated as described in section 4.2 of [GA96]. (The "mar$" notation used in this document is borrowed from [GA96], and indicates a specific field in the control message.) Data messages are reflected without any modification by the MCS. <p> As such, their formats and those of MARS REQUEST, MARS MULTI, MARS NAK and MARS REDIRECT MAP are described in <ref> [GA96] </ref>. We describe their usage in section 4. All control messages are LLC/SNAP encapsulated as described in section 4.2 of [GA96]. (The "mar$" notation used in this document is borrowed from [GA96], and indicates a specific field in the control message.) Data messages are reflected without any modification by the MCS. 3.2 Association with a layer 3 group The simplest MCS architecture involves taking incoming AAL SDUs from the multicast sources <p> such, their formats and those of MARS REQUEST, MARS MULTI, MARS NAK and MARS REDIRECT MAP are described in <ref> [GA96] </ref>. We describe their usage in section 4. All control messages are LLC/SNAP encapsulated as described in section 4.2 of [GA96]. (The "mar$" notation used in this document is borrowed from [GA96], and indicates a specific field in the control message.) Data messages are reflected without any modification by the MCS. 3.2 Association with a layer 3 group The simplest MCS architecture involves taking incoming AAL SDUs from the multicast sources and sending them out over the point-to-multipoint VC to the group <p> All other fields are set as described in section 5.2.1 of <ref> [GA96] </ref> (the MCS can be considered to be a cluster member while reading that section). It MUST keep retransmitting (section 4.1.3) the MARS MSERV/MARS UNSERV over the MARS VC until it receives a copy back. <p> The mar$flags.register bit MUST be reset and the mar$flags.sequence field MUST be set to zero in the group MARS MSERV and MARS UNSERV. All other fields are set as described in section 5.2.1 of <ref> [GA96] </ref> (the MCS can be considered to be a cluster member when reading that section). 4.1.3 Retransmission of MARS MSERV and MARS UNSERV Transient problems may cause loss of control messages. <p> On registering to support a particular layer 3 group, the MCS MUST send a MARS REQUEST to the MARS. The mechanism to retrieve group membership and the format of MARS REQUEST and MARS MULTI is described in section 5.1.1 and 5.1.2 of <ref> [GA96] </ref> respectively. The MCS MUST use this mechanism for sending (and retransmitting) the MARS REQUEST and processing the returned MARS MULTI (/s). The MARS MULTI MUST be received correctly, and the MCS MUST use it to initialize its knowledge of group membership. <p> On successful reception of a MARS MULTI, the MCS MUST attempt to open the outgoing point-to-multipoint VC using the mechanism described in section 5.1.3 of <ref> [GA96] </ref>, if any group members exist. <p> The MCSs keep track of group membership updates through these messages. The format of these messages are identical to MARS JOIN and MARS LEAVE, which are described in section 5.2.1 of <ref> [GA96] </ref>. It is sufficient to note here that these messages carry the ATM address of the node joining/leaving the group (/s), the group (/s) being joined or left, and a Server Sequence Number from MARS. <p> ....) The mar$msn value in an individual MARS MULTI is not used to update the MSN until all parts of the MARS MULTI (if &gt; 1) have arrived. (If the mar$msn changes during reception of a MARS MULTI series, the MARS MULTI is discarded as described in section 5.1.1 of <ref> [GA96] </ref>). The MCS sets its MSN to zero on startup. <p> 20, 1996 * It fails to establish a point-to-point VC with the MARS. * MARS REQUEST generates no response (no MARS MULTI or MARS NAK returned). * ServerControlVC fails. * MARS MSERV or MARS UNSERV do not result in their respective copies being received. (reconnection as in section 5.4 in <ref> [GA96] </ref>). 4.5.3 Revalidating a point-to-multipoint VC The revalidation flag associated with a point-to-multipoint VC is checked when a layer 3 packet is to be sent out on the VC.
Reference: [BK96] <author> Birman, A., Kandlur, D., Rubas, J., </author> <title> "An extension to the MARS model", Internet Draft, </title> <address> draft-kandlur-ipatm-mars-directvc-00.txt, </address> <month> Nov </month> <year> 1995. </year>
Reference-contexts: A more complex protocol (based on the one proposed in this document), which may involve active use of the MARS, may be needed to support such a model. A similar model has been presented in <ref> [BK96] </ref>. * Usage of MCSs to enforce security mechanisms have not been addressed. * The increased VC usage for the VC Mesh case leads to a decrease in the maximum permissible size of the LIS.
Reference: [ML93] <author> Laubach, M., </author> <title> "Classical IP and ARP over ATM", </title> <address> RFC1577, </address> <month> Dec </month> <year> 1993. </year> <note> Talpade and Ammar [Page 22] INTERNET-DRAFT &lt;draft-talpade-ipatm-marsmcs-01.txt&gt; March 20, </note> <year> 1996 </year>
References-found: 3

