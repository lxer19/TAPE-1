URL: http://www.frc.ri.cmu.edu/~ssingh/pubs/icra98FQD.ps
Refering-URL: http://www.frc.ri.cmu.edu/~ssingh/pubs_conf.html
Root-URL: 
Title: Abstract  
Abstract: Mobile robots operating in vast outdoor unstructured environments often only have incomplete maps and must deal with new objects found during traversal. Path planning in such sparsely occupied regions must be incremental to accommodate new information, and, must use efficient representations. In previous work we have developed an optimal method, D*, to plan paths when the environment is not known ahead of time, but, rather is discovered as the robot moves around. To date, D* has been applied to a uniform grid representation for obstacles and free space. In this paper we propose the use of D* with framed quadtrees to improve the efficiency of planning paths in sparse environments. The new system has been tested in simulation as well on an autonomous jeep, equipped with local obstacle avoidance capabilities. We show how the use of framed quadtrees improves performance in terms of path length, computation speed, and memory requirements. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Brumitt, B.L., Stentz, A., </author> <title> Dynamic Mission Planning for Multiple Mobile Robots, </title> <booktitle> Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <month> May </month> <year> 1996. </year>
Reference: [2] <author> Chen, Szczerba, Uhran, </author> <title> Planning Conditional Shortest Paths through an Unknown Environment: A Framed-Quadtree Approach, </title> <booktitle> Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: Efficiency in map representation can be obtained by the use of quadtrees, but at a cost of optimality. Recently, a new data structure called a framed quadtree has been suggested as means to overcome some of the issues related to the use of quadtrees <ref> [2] </ref>. We have used this data structure to extend an existing path planner that has in the past used uniform (regular) grid cells to represent terrain. This path planner, D* [10][11] has been shown to be optimal in cases where the environment is incrementally discovered.
Reference: [3] <author> Connolly and Grupen, </author> <title> The Application of Harmonic Functions to Robotics, </title> <journal> Journal of Robotic Systems, </journal> <volume> 10(7) </volume> <pages> 931-946. </pages>
Reference: [4] <author> Hebert, Martial H., SMARTY: </author> <title> Point-Based Range Processing for Autonomous Driving, Intelligent Unmanned Ground Vehicle, </title> <editor> Martial H. Hebert, Charles Thorpe, and Anthony Stentz, editors, </editor> <publisher> Kluwer Academic Publishers, </publisher> <year> 1997. </year>
Reference-contexts: Our vehicle uses a vertical-baseline stereo system to generate range images. The resulting images are processed by the SMARTY local navigator <ref> [4] </ref>, which handles local obstacle detection and avoidance. This obstacle map is fed to a global navigator running a path planning algorithm, such as framed-quadtree D*.
Reference: [5] <author> Kelly, </author> <title> A, An Intelligent Predictive Control Approach to the High Speed Cross Country Autonomous Navigation Problem, </title> <type> Ph.D Thesis, </type> <institution> 1995, Carnegie Mellon University, </institution> <address> Pitts-burgh, PA 15213. </address>
Reference: [6] <author> Lengyel, J. and Reichert, M. and Donald, B. R. and Green-berg, D. P., </author> <title> Real Time Robot Motion Planning Using Ras-terizing Computer Graphics Hardware, </title> <booktitle> In Proc. SIGGRAPH. </booktitle> <year> 1990. </year>
Reference: [7] <author> Russell, S., Norvig, P., </author> <title> Artificial Intelligence: A Modern Approach, </title> <publisher> Prentice Hall, </publisher> <year> 1995. </year>
Reference-contexts: The black cul de-sac is an obstacle. start goal start goal start goal 3 Incremental Planning Unstructured outdoor environments are often not only sparse but also typically only partial maps are available. If complete and accurate maps were available, it would be sufficient to use A* <ref> [7] </ref> once to search the map and produce a path. The robot could simply follow this path during its traverse. Furthermore, errors in control and perception often introduce erroneous and changing information.
Reference: [8] <author> Samet, H., </author> <title> Neighbor Finding Techniques for Images Represented by Quadtrees, </title> <booktitle> Computer Graphics and Image Processing 18, </booktitle> <pages> 37-57, </pages> <year> 1982. </year>
Reference: [9] <author> Samet, H., </author> <title> An Overview of Quadtrees, Octrees, and Related Hierarchical Data Structures, </title> <booktitle> NATO ASI Series, </booktitle> <volume> Vol. F40, </volume> <year> 1988. </year>
Reference: [10] <author> Stentz, A., </author> <title> The Focussed D* Algorithm for Real-Time Replanning, </title> <booktitle> Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <month> August </month> <year> 1995. </year>
Reference: [11] <author> Stentz, A., </author> <title> Optimal and Efficient Path Planning for Partially-Known Environments, </title> <booktitle> Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <month> May </month> <year> 1994. </year>
Reference: [12] <author> Stentz A., Hebert, M., </author> <title> A Complete Navigation System for Goal Acquisition in Unknown Environments, </title> <booktitle> Autonomous Robots, </booktitle> <volume> 2(2), </volume> <year> 1995. </year>
Reference-contexts: This obstacle map is fed to a global navigator running a path planning algorithm, such as framed-quadtree D*. Both the local and global navigators submit steering advice to an arbiter, which selects a steering command each time interval and passes it to the controller <ref> [12] </ref>. Fig. 8 shows the system modules and data ow. The first set of tests shows that use of framed quadtrees remedies one drawback of regular grids the inability to drive a straight diagonal traverse, in certain cases, through an empty area (Fig. 9).
Reference: [13] <author> Stentz, A., </author> <title> Best Information Planning for Unknown, Uncertain, and Changing Domains, </title> <booktitle> AAAI-97 Workshop on On-line-Search. </booktitle>
Reference-contexts: The idea is to produce a path based on all available information and replan from the current position to the goal every time new information is discovered. This is called Best Information Planning. This approach <ref> [13] </ref> is intuitively satisfying and has been shown to produce lower-cost traverses on average than other selected algorithms for unknown and partially-known environments. Furthermore, Best Information Planning is able to make use of prior information to reduce the traversal cost.
Reference: [14] <author> Whitcomb, L. L. and Koditschek, D. E. </author> <title> Automatic Assembly Planning and Control via Potential Functions, </title> <booktitle> In Proc. IEEE/RSJ International Workshop on Intelligent Robots and Systems. </booktitle> <year> 1991. </year> <title> Fig. 10 Successful long traverse of the vehicle using framed-quadtree D* through a terrain with obstacles to the goal. The dark rectangles are obstacles detected and avoided during the traverse. The shaded areas surrounding the dark obstacles are potentially dangerous zones. Fig. 11 A close up of the data structure produced from the execution of the path in Fig. 10. start goal goal start </title>
Reference-contexts: This approach has been used successfully in the past in several systems at Carnegie Mellon [1][12]. In this paper we concentrate the discussion on global planning. Approaches to path planning for mobile robots can be broadly classified into two categories those that use exact representations of the world (e.g. <ref> [14] </ref>), and those that use a discretized representation (e.g. [3][6]). The main advantage of discretization is that the computational complexity of path planning can be controlled by adjusting the cell size.
References-found: 14

