URL: ftp://ftp.cs.colorado.edu/pub/distribs/Nutt/iwqos98.ps
Refering-URL: http://www.cs.colorado.edu/~nutt/Home.html
Root-URL: http://www.cs.colorado.edu
Email: sbrandt@cs.colorado.edu  
Title: Soft Real-time Application Execution with Dynamic Quality of Service Assurance  
Author: Scott Brandt, Gary Nutt, Toby Berk Marty Humphrey 
Address: Campus Box 430  Boulder Boulder, CO 80303-0430  
Affiliation: Department of Computer Science,  University of Colorado at  
Abstract: There is an emerging set of research operating systems that provide specialized support for continuous media and other soft real-time applications. A number of these systems pro vide QoS scheduling abstractions, some of which may dynamically change the QoS allocations to applications during application execution. The tools and environments that allow application developers to take advantage of these abstractions generally do not e xist. This paper describes a dynamic QoS resource manager (DQM) middleware application that abstracts these new OS interfaces so that they are easily used in contemporary application environments. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Burns. </author> <title> Scheduling Hard Real-Time Systems: A Review. </title> <journal> Software Engineering Journal, </journal> <month> May </month> <year> 1991. </year>
Reference: [2] <author> C. Compton and D. Tennenhouse. </author> <title> Collaborative Load Shedding. </title> <booktitle> Proceedings of the Workshop on the Role of Real-Time in Multimedia/Interactive Computing Systems, </booktitle> <month> December </month> <year> 1993. </year>
Reference-contexts: Given adequate OS support, such applications could dynamically adjust their processing based on resource a vailability. Several research programs have looked at various ways to soften QoS requirements. Compton and Tennenhouse describe a system in which applications are shed when resource a vailability reduces below an acceptable point <ref> [2] </ref>. The y argue that applications should cooperati vely, dynamically reduce resource requirements. Their approach is to be explicitly guided by the user in selecting which application to eliminate. 3 Fan investigates a similar architecture where applications request a continuous range of QoS commitment [3].
Reference: [3] <author> C. Fan. </author> <title> Realizing a Soft Real-Time Framework for Supporting Distributed Multimedia Applications. </title> <booktitle> Proceedings of the 5th IEEE Workshop on the Future Trends of Distributed Computing Systems, </booktitle> <pages> pp. 128-134, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: These new OS interfaces allow a process to either a) negotiate with the operating system for a specific amount of resources as in RT Mach [12] and Rialto [7][8]; b) specify a range of resource allocations as in MMOSS <ref> [3] </ref>; or c) specify a measure of application importance that can be used to compute a f air resource allocation as in SMART [14][15]. These systems all provide a mechanism that can be used to reduce the resource allotment granted to the running applications. <p> The y argue that applications should cooperati vely, dynamically reduce resource requirements. Their approach is to be explicitly guided by the user in selecting which application to eliminate. 3 Fan investigates a similar architecture where applications request a continuous range of QoS commitment <ref> [3] </ref>. Based upon the current state of the system, the QoS Manager may increase or decrease an application s current resource allocation within this prenegotiated range. <p> Were this algorithm to make any sense in an RT Mach system, the admission criteria would have to be changed to include a ne gotiation whereby an applications execution level is determined before it enters the system. Similarly, this algorithm could be used by applications in the MMOSS <ref> [3] </ref> and SMART systems to dynamically adjust to the resources that they have been granted. The Fair algorithm is the simplest centralized algorithm that we have implemented. It has two options.
Reference: [4] <author> H. Fujita, T. Nakajima and H. Tezuka. </author> <title> A Processor Reservation System Supporting Dynamic QoS Contr ol. </title> <booktitle> 2nd International Workshop on Real-Time Computing Systems and Applications, </booktitle> <month> October </month> <year> 1995. </year>
Reference: [5] <author> M. Humphrey, T. Berk, S. Brandt, G. Nutt. </author> <title> The DQM Architecture: Middleware for Application-centered QoS Resource Management. </title> <booktitle> To appear in the IEEE Workshop on Middleware for Distributed Real-Time Systems and Services, </booktitle> <month> Dec. </month> <year> 1997. </year>
Reference-contexts: Our long term goal is to de velop such mechanisms - ones that support soft real-time applications on appropriate operating system facilities -- to complement the OS work. The shorter term goal in this paper is to extend our preliminary work <ref> [5] </ref> on execution levels to take other factors besides the frequency of missed deadlines into account, to flesh out the DQM mechanism, and to e xperiment with this framework to understand the viability of the approach under various policies.
Reference: [6] <author> E. Jensen and C. Locke and H. Tokuda. </author> <title> A Time-Driven Scheduling Model for Real-Time Operating Systems. </title> <booktitle> Proceedings of the IEEE Real-Time Systems Symposium, </booktitle> <pages> pp. 112-122, </pages> <year> 1985. </year>
Reference-contexts: Applications are free to increase their portion of the CPU, given available capacity. Real-time processes and non-real-time processes are treated uniformly, because applications merely request their desired CPU portion. Jensens work in Benefit-Based scheduling <ref> [6] </ref> is also relevant to this project. Jensen proposed soft real-time scheduling based on application benefit. Applications would specify a benefit curve that indicates the relative benefit to be obtained by scheduling the application at v arious times with respect to its deadlines. <p> In effect, this algorithms changes the e xecution level of the application that is furthest from it s fair proportional percentage of the CPU. This algorithm approximates the scheduling used in the SMART system. The Optimal algorithm is based loosely on Jensen et al. s benefit-based scheduling idea <ref> [6] </ref>.
Reference: [7] <author> M. Jones, J. Barbera III, and A. Forin. </author> <title> An Overview of the Rialto Real-Time Architecture. </title> <booktitle> Proceedings of the Seventh ACM SIGOPS European Workshop, </booktitle> <pages> pp. 249-256, </pages> <month> September </month> <year> 1996. </year>
Reference: [8] <author> M. Jones, D. Rosu, M. Rosu. </author> <title> CPU Reservations & Time Constraints: Efficient Predictable Scheduling of Independent Activities. </title> <booktitle> Proceedings of the 16th ACM Symposium on Operating Systems Principles, </booktitle> <month> October </month> <year> 1997. </year>
Reference: [9] <author> K. Kawachiya, M. Ogata, N. Nishio and H. Tokuda. </author> <title> Evaluation of QoS-Control Servers on Real-Time Mach. </title> <booktitle> Proceedings of the 5th International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <pages> pp. 123-126, </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: Jensens goal was to schedule the applications so as to maximize overall system benefit. In addition, much of the recent research on RT Mach <ref> [9] </ref> is important for this project. At CMU, efforts are directed at providing end-to-end reservation services [11]. The K eio-Multimedia Platform at the Japan Adv anced Institute of Science and Technology (JAIST) is extending RT Mach to support QoS for continuous media streams [13].
Reference: [10] <author> J. Kay and P. Lauder. </author> <title> A Fair Share Scheduler. </title> <journal> Communications of the ACM, </journal> <volume> 31(1) </volume> <pages> 44-55, </pages> <month> January </month> <year> 1988. </year>
Reference-contexts: This assumption is not consistent with the design of the majority of real-time applications. Nieh and Lam have developed another system based on the F air Share scheduling algorithm <ref> [10] </ref> in which applications are allotted a portion of the CPU based upon their relati ve importance as measured against the other currently executing applications [14][15]. This allotment changes dynamically depending upon the current requirements of all of the currently executing processes and their relative importances.
Reference: [11] <author> C. Lee, R. Rajkumar and C. </author> <title> Mercer . Experience with Processor reservation and Dynamic QoS in Real-T ime Mach. </title> <booktitle> Proceedings of Multimedia Japan, </booktitle> <month> March </month> <year> 1996. </year>
Reference-contexts: Jensens goal was to schedule the applications so as to maximize overall system benefit. In addition, much of the recent research on RT Mach [9] is important for this project. At CMU, efforts are directed at providing end-to-end reservation services <ref> [11] </ref>. The K eio-Multimedia Platform at the Japan Adv anced Institute of Science and Technology (JAIST) is extending RT Mach to support QoS for continuous media streams [13].
Reference: [12] <author> C. Mercer, S. Savage and H. Tokuda. </author> <title> Processor Capacity Reserves: Operating System Support for Multimedia Applications. </title> <booktitle> Proceedings of the International Conference on Multimedia Computing and Systems, </booktitle> <pages> pp. 90-99, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: Operating systems designers have been creating designs and interfaces to support soft real-time operation. These new OS interfaces allow a process to either a) negotiate with the operating system for a specific amount of resources as in RT Mach <ref> [12] </ref> and Rialto [7][8]; b) specify a range of resource allocations as in MMOSS [3]; or c) specify a measure of application importance that can be used to compute a f air resource allocation as in SMART [14][15]. <p> In the extreme, the applications may be forced to dynamically adapt to a strategy in which the resource allocation is less than that required for average-case execution. Mercer, et al. suggest that a dynamic resource manager could be created to deal with situation of processor overload <ref> [12] </ref>. In Rialto, the researchers have used the mechanism to de velop an application repertoire (though there w as apparently no attempt to define a general model for its use). <p> Another body of w ork that is very relevant to this one is Processor Capacity Reserv es <ref> [12] </ref>. Processor Capacity Reserves can be used by applications to reserve a particular portion of the CPU. Applications are free to increase their portion of the CPU, given available capacity. Real-time processes and non-real-time processes are treated uniformly, because applications merely request their desired CPU portion.
Reference: [13] <author> T. Nakajima and H. Tezuka. </author> <title> A Continuous Media Application Supporting Dynamic QoS Contr ol on Real-Time Mach. </title> <booktitle> Proceedings of the Second ACM International Conference on Multimedia, </booktitle> <pages> pp. 289-297, </pages> <year> 1994. </year> <month> 14 </month>
Reference-contexts: At CMU, efforts are directed at providing end-to-end reservation services [11]. The K eio-Multimedia Platform at the Japan Adv anced Institute of Science and Technology (JAIST) is extending RT Mach to support QoS for continuous media streams <ref> [13] </ref>.
Reference: [14] <author> J. Nieh and M. Lam. </author> <title> The Design, Implementation and Evaluation of SMART: </title> <booktitle> A Scheduler for Multimedia Applications.Proceedings of the 16th ACM Symposium on Operating Systems Principles, </booktitle> <month> October </month> <year> 1997. </year>
Reference: [15] <author> J. Nieh and M. Lam. </author> <title> Integrated Processor Scheduling for Multimedia. </title> <booktitle> Proceedings of the Fifth International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <month> April </month> <year> 1995. </year>
Reference: [16] <author> G. Nutt. </author> <title> Model-Based Virtual Environments for Collaboration. </title> <type> Technical Report CU-CD-799-95, </type> <institution> Department of Computer Science, University of Colorado at Boulder, </institution> <month> December </month> <year> 1995. </year>
Reference: [17] <author> G. Nutt, T. Berk, S. Brandt, M. Humphre y, and S. Siewert. </author> <title> Resource Management of a Virtual Planning Room. </title> <booktitle> Proceedings of the Third International Workshop on Multimedia Information Systems, </booktitle> <month> September </month> <year> 1997. </year>
References-found: 17

