URL: http://www.ai.mit.edu/~mpf/desktop/RevComp/pend/UMC-98/xram.ps
Refering-URL: 
Root-URL: 
Phone: 2  
Title: Designing Reversible Memory  
Author: Carlin Vieri M. Josephine Ammer Amory Wakefield Lars "J" Svensson William Athas Tom Knight 
Address: Cambridge MA 02139, USA  Marina del Rey CA 90292, USA  
Affiliation: 1 MIT Artificial Intelligence Laboratory,  USC Information Sciences Institute,  
Abstract: This paper presents the issues involved in designing a memory system which is reversible and therefore does not erase information during its operation. High level issues of how the memory is accessed are discussed, along with low level switching circuit implementation issues, all involving techniques to avoid information erasure. A number of reversible switching circuit topologies have been found. The paper concludes with a discussion of the xram chip, an eight word by eight bit reversible memory chip submitted for fabrication in a 0.5 m cmos process. This chip performs exchange operations rather than traditional read/write operations, and is implemented in a reversible, adiabatic logic family, scrl.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> W. Athas, N. Tzartzanis, L. Svensson, L. Peterson, H. Li, X. Jiang, P. Wang, and W-C. Liu. AC-1: </author> <title> A clock-powered microprocessor. </title> <booktitle> In International Symposium on Low Power Electronics and Design, </booktitle> <pages> pages 18-20, </pages> <year> 1997. </year>
Reference-contexts: However, judicious application of reversibility in adiabatic circuits has already proven its usefulness in reducing energy dissipation <ref> [1] </ref>. The primary goal of this work is not directly to reduce energy dissipation but to investigate the switching circuits needed to compute without erasing bits.
Reference: 2. <author> W.C. Athas, L. Svensson, J.G. Koller, N. Tzartzanis, and E. Chou. </author> <title> A framework for practical low-power digital CMOS systems using adiabatic-switching principles. </title> <booktitle> In Proc. of the Int'l Workshop on Low-Power Design, </booktitle> <pages> pages 189-194, </pages> <year> 1994. </year>
Reference-contexts: Connecting a number of clearing structures in series creates a shift register, in which values are passed along, copied from b to copy1 to copy2 and so on, shown in Figure 2 <ref> [2] </ref>. Each node is then cleared non-dissipatively, so the values are moved along the shift register. To use the structure of Figure 1 (b) as part of a memory cell, a t-gate must be added to write the new value.
Reference: 3. <author> Stephen Avery and Marwan Jabri. </author> <title> Design of a register file using adiabatic logic. </title> <type> Technical Report SCA-06/06/97, </type> <institution> University of Sydney SEDAL, </institution> <month> June </month> <year> 1997. </year>
Reference-contexts: Hall's description of a reversible instruction set [6] touched on the idea of exchange-based reversible memory operations but did not discuss implementation issues. Recently, Tzarta-nis and Athas [12], Somasekhar, et al. [11] and Avery and Jabri <ref> [3] </ref> have proposed memory systems which use some form of energy recovery. It must be emphasized, however, that these are not reversible memory systems. They are merely traditional memory designs with some degree of energy recovery performed during operation.
Reference: 4. <author> E. F. Fredkin and T. Toffoli. </author> <title> Conservative logic. </title> <journal> Int'l J. Theoretical Physics, </journal> 21(3/4):219-253, 1982. 
Reference-contexts: Some number of adiabatic clock phases, generally around six, power the system. These power clock signals are conditionally steered to the inputs of other transmission gates. The second style uses Fredkin gates <ref> [4] </ref> to perform a series of bit exchanges to push the desired value out. Bits are repeatedly exchanged in the memory array in a butterfly-style network, and the amount of shu*ing is determined by the xor of the desired address and the previously accessed address. <p> The only other inputs to the memory are resonant clocks. The design is fully reversible and asymptotically non-dissipative. 3.4 Fredkin Gate Memory The second memory design was developed primarily to examine the difficulty of building a memory out of Fredkin gates <ref> [4] </ref>. The Fredkin gate, shown in Figure 6, has three inputs and three outputs. It is both universal and reversible. The Fig. 6. The Fredkin Gate gate swaps the B and C inputs if the A input is zero; otherwise all three inputs are passed unchanged to the output.
Reference: 5. <author> J. Storrs Hall. </author> <title> An electroid switching model for reversible computer architectures. </title> <booktitle> In Physics and Computation, </booktitle> <pages> pages 237-247, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: Exactly one of the four output clocks is driven high and may be used to gate a value into a bit cell. Once the exchange is performed, the input clock is then retracted, then the address bits are retracted. This operation is similar to Hall's "retractile cascade" <ref> [5] </ref> and is fully reversible and non-dissipative. A full schematic of the address decoders, four bits of memory, and a recircu-lating shift register path, is shown in Figure 5. The address inputs are assumed to be generated by some other external, reversible control circuitry.
Reference: 6. <author> J. Storrs Hall. </author> <title> A reversible instruction set architecture and algorithms. </title> <booktitle> In Physics and Computation, </booktitle> <pages> pages 128-134, </pages> <month> November </month> <year> 1994. </year>
Reference-contexts: The specific topic of reversible memory systems has only recently begun to be investigated. Hall's description of a reversible instruction set <ref> [6] </ref> touched on the idea of exchange-based reversible memory operations but did not discuss implementation issues. Recently, Tzarta-nis and Athas [12], Somasekhar, et al. [11] and Avery and Jabri [3] have proposed memory systems which use some form of energy recovery. <p> Programming reversible computers is beyond the scope of this paper, but certain techniques can take advantage of the exchange beyond this load/store usage. Hall <ref> [6] </ref> has written a sorting routine which uses exchange effectively. The essential insight of the xram is that performing a read and then a write to the same memory location does not lose any information.
Reference: 7. <author> J. G. Koller and W. C. Athas. </author> <title> Adiabatic switching, low energy computing, and the physics of storing and erasing information. </title> <booktitle> In Physics of Computation Workshop, </booktitle> <year> 1992. </year>
Reference-contexts: 1 Introduction Computing with reversible logic is a means to avoid the energy dissipated when erasing a bit and is a novel approach to low power, low energy computing. Recent implementations of reversible and adiabatic <ref> [15, 7] </ref> logic in standard cmos silicon processes have motivated further research into reversible computing. <p> It must be emphasized, however, that these are not reversible memory systems. They are merely traditional memory designs with some degree of energy recovery performed during operation. The low-level, circuit implementation issues of reversible computing <ref> [7, 15] </ref> have received additional attention, and some of the details of scrl are covered in Appendix A. 3 Reversible Memory Design Styles From a system point of view, the only additional requirement of a reversible memory, beyond a traditional memory system's function, is that it not erase bits when it
Reference: 8. <author> R. Landauer. </author> <title> Irreversibility and heat generation in the computing process. </title> <journal> IBM J. Research and Development, </journal> <volume> 5 </volume> <pages> 183-191, </pages> <year> 1961. </year> <note> Fig. 15. </note>
Reference-contexts: This paper discusses the design of fully reversible memory systems. The initial motivation for reversible computing research came from an investigation of fundamental limits of energy dissipation during computation <ref> [8] </ref>. The link between entropy in the information science sense and entropy in the thermodynamics sense, exhibited by Maxwell's demon [9], requires a minimum energy dissipation of k B T ln 2, where k B is Boltzmann's constant, when a bit is erased. <p> This paper examines the complexity and difficulty in avoiding bit erasure and discusses a set of techniques for designing reversible systems, in particular a reversible memory system. 2 Related Work Landauer's paper on irreversibility in computing <ref> [8] </ref>, published in 1961, is generally considered to be the first in the field. The specific topic of reversible memory systems has only recently begun to be investigated. <p> Erasing a bit means that at some point in the operation of the memory the value stored on some node is lost. This occurs when an operation such as Landauer's restore to one <ref> [8] </ref> is executed. An exchange-based memory is reversible, and if implemented in a reversible logic style, does not erase bits. Bit erasure can happen as a fundamental side effect of the operation of the memory or as a function of the particular implemen-tation.
Reference: 9. <author> J. C. Maxwell. </author> <title> Theory of Heat. </title> <address> Longmans, Green & Co., London, 4th edition, </address> <month> 1875. </month>
Reference-contexts: This paper discusses the design of fully reversible memory systems. The initial motivation for reversible computing research came from an investigation of fundamental limits of energy dissipation during computation [8]. The link between entropy in the information science sense and entropy in the thermodynamics sense, exhibited by Maxwell's demon <ref> [9] </ref>, requires a minimum energy dissipation of k B T ln 2, where k B is Boltzmann's constant, when a bit is erased. Erasing a bit is a logically irreversible operation with a physically irreversible effect. A reversible computer avoids bit erasure.
Reference: 10. <author> A. L. Ressler. </author> <title> The design of a conservative logic computer and a graphical editor simulator. </title> <type> Master's thesis, </type> <institution> MIT Artificial Intelligence Laboratory, </institution> <year> 1981. </year>
Reference: 11. <author> Dinesh Somasekhar, Yibin Ye, and Kaushik Roy. </author> <title> An energy recovery static RAM memory core. </title> <booktitle> In Symposium on Low Power Electronics, </booktitle> <pages> pages 62-63, </pages> <year> 1995. </year>
Reference-contexts: The specific topic of reversible memory systems has only recently begun to be investigated. Hall's description of a reversible instruction set [6] touched on the idea of exchange-based reversible memory operations but did not discuss implementation issues. Recently, Tzarta-nis and Athas [12], Somasekhar, et al. <ref> [11] </ref> and Avery and Jabri [3] have proposed memory systems which use some form of energy recovery. It must be emphasized, however, that these are not reversible memory systems. They are merely traditional memory designs with some degree of energy recovery performed during operation.
Reference: 12. <author> Nestoras Tzartzanis and William C. Athas. </author> <title> Energy recovery for the design of high-speed, low power static RAMs. </title> <booktitle> In International Symposium on Low Power Electronics and Design, </booktitle> <pages> pages 55-60, </pages> <year> 1996. </year>
Reference-contexts: The specific topic of reversible memory systems has only recently begun to be investigated. Hall's description of a reversible instruction set [6] touched on the idea of exchange-based reversible memory operations but did not discuss implementation issues. Recently, Tzarta-nis and Athas <ref> [12] </ref>, Somasekhar, et al. [11] and Avery and Jabri [3] have proposed memory systems which use some form of energy recovery. It must be emphasized, however, that these are not reversible memory systems. They are merely traditional memory designs with some degree of energy recovery performed during operation.
Reference: 13. <author> Carlin J. Vieri. Pendulum: </author> <title> A reversible computer architecture. </title> <type> Master's thesis, </type> <institution> MIT Artificial Intelligence Laboratory, </institution> <year> 1995. </year>
Reference-contexts: No information is lost in this process and it is therefore reversible. The design is intended to be a proof of concept with an eye to reusing the xram design as the register file and memory of the Pendulum processor, a fully reversible implementation of a reversible instruction set <ref> [13] </ref>. 4.1 Top Level Architecture The memory is arranged much like a traditional sram. A block of address decoders at the input drives dual-rail word lines across the array of eight 8-bit words. Each bit cell in a selected word drives a bit line.
Reference: 14. <author> S. G. Younis. </author> <title> Asymptotically Zero Energy Computing Using Split-Level Charge Recovery Logic. </title> <type> PhD thesis, </type> <institution> MIT Artificial Intelligence Laboratory, </institution> <year> 1994. </year>
Reference-contexts: Circuits constructed with charge-steering logic are quite different from scrl circuits. Use of charge-steering logic for reversible circuits is a novel technique and is discussed in some detail here; scrl has appeared in the literature previously <ref> [15, 14] </ref> and is only cursorily treated in Appendix A. Both logic styles use a set of resonant power clocks to power the circuits, but CSL rails are full swing, as opposed to the half-swing scrl rails, and generally fewer in number than scrl rails. <p> This paper has been an attempt at broad coverage of the issues involved in designing reversible memory. A Split-level Charge Recovery Logic 1 This section is intended as a brief discussion of Younis and Knight's scrl logic family. For a more comprehensive discussion, see <ref> [14] </ref>. Much of this section is detailed in [15]. Conventional cmos switching circuit operation, shown in Figure 12, involves moving charge from the V dd supply rail to an intermediate, capacitive node, and then to ground.
Reference: 15. <author> Saed G. Younis and Thomas F. Knight, Jr. </author> <title> Asymptotically zero energy split-level charge recovery logic. </title> <booktitle> In International Workshop on Low Power Design, </booktitle> <pages> pages 177-182, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction Computing with reversible logic is a means to avoid the energy dissipated when erasing a bit and is a novel approach to low power, low energy computing. Recent implementations of reversible and adiabatic <ref> [15, 7] </ref> logic in standard cmos silicon processes have motivated further research into reversible computing. <p> It must be emphasized, however, that these are not reversible memory systems. They are merely traditional memory designs with some degree of energy recovery performed during operation. The low-level, circuit implementation issues of reversible computing <ref> [7, 15] </ref> have received additional attention, and some of the details of scrl are covered in Appendix A. 3 Reversible Memory Design Styles From a system point of view, the only additional requirement of a reversible memory, beyond a traditional memory system's function, is that it not erase bits when it <p> The xram chip, discussed in detail in Section 4, was designed in the sram-style. It has been submitted for fabrication in a 0.5 m cmos process. It uses Younis and Knight's three-phase scrl <ref> [15] </ref> logic family to build an eightfieight memory with three-bit address decoders. Continuing research has uncovered various improvements to that design which reduce the number of transistors in the bit cell. <p> Circuits constructed with charge-steering logic are quite different from scrl circuits. Use of charge-steering logic for reversible circuits is a novel technique and is discussed in some detail here; scrl has appeared in the literature previously <ref> [15, 14] </ref> and is only cursorily treated in Appendix A. Both logic styles use a set of resonant power clocks to power the circuits, but CSL rails are full swing, as opposed to the half-swing scrl rails, and generally fewer in number than scrl rails. <p> A Split-level Charge Recovery Logic 1 This section is intended as a brief discussion of Younis and Knight's scrl logic family. For a more comprehensive discussion, see [14]. Much of this section is detailed in <ref> [15] </ref>. Conventional cmos switching circuit operation, shown in Figure 12, involves moving charge from the V dd supply rail to an intermediate, capacitive node, and then to ground.
References-found: 15

