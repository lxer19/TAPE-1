URL: http://www.cs.utah.edu/~critchlo/dissertation.ps
Refering-URL: http://www.cs.utah.edu/~critchlo/
Root-URL: 
Title: SCHEMA COERCION: USING DATABASE META-INFORMATION TO FACILITATE DATA TRANSFER  
Author: by Terence Critchlow 
Degree: A dissertation submitted to the faculty of The University of Utah in partial fulfillment of the requirements for the degree of Doctor of Philosophy  
Date: June 1997  
Affiliation: Department of Computer Science The University of Utah  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Rateb Abu-Hamdeh, James Cordy, and Patrick Martin. </author> <title> Schema translation using structural transformation. </title> <booktitle> In Proceedings of the 1994 CAS Conference, </booktitle> <pages> pages 202-215, </pages> <month> October </month> <year> 1994. </year>
Reference: [2] <author> Sibel Adali and Ross Emery. </author> <title> A uniform framework for integrating knowledge in heterogeneous knowledge systems. </title> <booktitle> In Eleventh International Conference on Data Engineering, </booktitle> <pages> pages 513-520, </pages> <month> March </month> <year> 1995. </year>
Reference: [3] <author> Shailesh Agarwal, Arthur M. Keller, Gio Wiederhold, and Krishna Saraswar. </author> <title> Flexible relation: An approach for integrating data from multiple, possibly inconsistent databases. </title> <booktitle> In Eleventh International Conference on Data Engineering, </booktitle> <pages> pages 495-504, </pages> <month> March </month> <year> 1994. </year>
Reference: [4] <author> Rafi Ahmed, Philippe De Smedt, Weimin Du, William Kent, Mohammad A. Ketabchi, Witold A. Litwin, Abbas Rafii, and Ming-Chien Shan. </author> <title> The Pegasus heterogeneous multidatabase system. </title> <journal> Computer, </journal> <volume> 24(12) </volume> <pages> 19-26, </pages> <month> December </month> <year> 1991. </year>
Reference: [5] <author> Jose Andany, Michel Leonard, and Carole Palisser. </author> <title> Management of schema evolution in databases. </title> <booktitle> In Proceedings of the 17th International Conference on Very Large Databases, </booktitle> <pages> pages 161-170, </pages> <month> September </month> <year> 1991. </year>
Reference: [6] <author> M. Andersson, Y. Dupont, S. Spaccapietra, K. Ye'tongnon, M. Tresch, and H. Ye. FEMUS: </author> <title> A Federated Multilingual Database System : The Integration Process, </title> <booktitle> volume 759 of Lecture Notes in Computer Science, chapter 18.4, </booktitle> <pages> pages 371-376. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference: [7] <author> Martin Andersson, Yann Dupont, Stefano Spaccapietra, and Kokou Yetongon. </author> <title> FEMUS a federated multilingual database system. </title> <type> Technical Report adbs93, </type> <institution> Lausanne Switzerland, </institution> <year> 1993. </year>
Reference: [8] <author> Martin Andersson. </author> <title> Extracting an entity relationship schema from a relational database through reverse engineering. </title> <booktitle> In Conference on the Entity Approach, </booktitle> <month> December </month> <year> 1994. </year> <month> 148 </month>
Reference: [9] <author> Malcom Atkinson, Francios Bancilhon, David DeWitt, Klaus Ditrich, David Maier, and Stanley Zdonik. </author> <title> The objectoriented database manifesto. </title> <editor> In W. Kim, J-M Nicolas, and S.Nishio, editors, </editor> <booktitle> First International Conference on Deductive and ObjectOriented Databases, </booktitle> <pages> pages 223-240. </pages> <publisher> Elsevier Science Pub. Co., </publisher> <month> December </month> <year> 1989. </year>
Reference: [10] <author> Tom Atwood, Joshua Duhl, Guy Ferran, Mary Loomis, and Drew Wade. </author> <title> The Object Database Standard: ODMG-93. Release 1.1 </title>
Reference-contexts: This lack of consensus is due, in part, to the fact that the OO data model is the newest data model currently in popular use and is a reflection of the diversity of current object-oriented programming languages. Current work <ref> [10] </ref> is attempting to address this problem, however the standard will require some time to mature before becoming commonplace in commercial applications. 2.2 Conflicts The different problems that arise when manipulating multiple schemata have been documented in several papers including [15] [24] [25] [65].
Reference: [11] <author> Guruduth Banavar, Gary Lindstrom, and Douglas Orr. </author> <title> Typesafe composition of object modules. </title> <type> Technical Report UUCS-94-001, </type> <institution> Department of Computer Science, University of Utah, </institution> <address> Salt Lake City, Utah, 84112, </address> <month> January </month> <year> 1994. </year>
Reference-contexts: However, a slightly more complicated translation is required to provide a translation between an integer and a string of numbers separated by dashes. Coercions from one data type to a more general data type, such as those outlined in <ref> [11] </ref>, can be automatically performed by the integration program without loss of information. Other coercions can be performed by the integration program, but the results are not well defined.
Reference: [12] <author> Jay Banerjee and Won Kim. </author> <title> Semantics and implementation of schema evolution in objectoriented databases. </title> <booktitle> In ACM SIGMOD Annual Conference, </booktitle> <pages> pages 311-322, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: Unfortunately, there is little support for identifying the applications that are likely to be affected by a particular schema modification. Some systems, such as <ref> [12] </ref> [53], require the conversion from the old schema to the new take place at once. This approach has the benefit that queries respond quickly since the database management system is not required to perform transformations between versions.
Reference: [13] <author> C. Batini and M. Lenzerini. </author> <title> A methodology for data schema integration in the entity-relationship model. </title> <booktitle> Entity-Relationship Approach to Software Engineering, </booktitle> <pages> pages 413-420, </pages> <month> October </month> <year> 1983. </year>
Reference: [14] <author> Carlo Batini and Maurizio Lenzerini. </author> <title> A methodology for data schema integration in the entity relationship model. </title> <journal> Transactions on Software Engineering,SE-10(6):650-664, </journal> <month> November </month> <year> 1984. </year>
Reference-contexts: Significant work has been done in the area of schema integration. Batini provided a survey of several schema integration programs and problems in [15]. Biskup provided a formal description of the integration process, including desired semantics, in [19]. Several others <ref> [14] </ref> [33] [60] [112] [115] have refined the problem and created simple tools. Much of this work has focused only on the practical problems, leaving the theoretical problems largely unsolved. As a result, it is usually the users responsibility to resolve all conflicts before the integration begins.
Reference: [15] <author> C. Batini and M. Lenzerni. </author> <title> A comparative analysis of methodologies for database schema integration. </title> <journal> ACM Computing Surveys, </journal> <volume> 18(4) </volume> <pages> 323-364, </pages> <year> 1986. </year>
Reference-contexts: Obviously, the more user knowledge provided, the better the coercion will be, but a reasonable initial coercion can often be created without any user input. Another significant, practical contribution of this work is the creation of SCoP: a consistent, comprehensive tool for schema coercion. Batini <ref> [15] </ref> observed that all schema manipulation problems can be described in terms of four steps: 1) preintegration: the transformation of schemata into the same data model and collection of additional semantic information 1) schema comparison: determination of interschematic correspondences and conflicts 1) schema conformation: resolution of conflicts detected in the previous <p> Current work [10] is attempting to address this problem, however the standard will require some time to mature before becoming commonplace in commercial applications. 2.2 Conflicts The different problems that arise when manipulating multiple schemata have been documented in several papers including <ref> [15] </ref> [24] [25] [65]. Naming conflicts arise from the difficulty in identifying similar concepts in different schemata because the database designers may have made different choices in naming the concept. Once the equivalent concepts have been identified, structural conflicts resulting from differences in representation can be addressed. <p> The problem is aggravated further if the reviewers identity is not stored in the database, but must be identified through indirect methods such as writing style. Significant work has been done in the area of schema integration. Batini provided a survey of several schema integration programs and problems in <ref> [15] </ref>. Biskup provided a formal description of the integration process, including desired semantics, in [19]. Several others [14] [33] [60] [112] [115] have refined the problem and created simple tools. Much of this work has focused only on the practical problems, leaving the theoretical problems largely unsolved.
Reference: [16] <author> E. Bertino, M. Negri, and G. Pelagatti. </author> <title> Integration of heterogeneous database applications through an objectoriented interface. </title> <journal> Information Systems, </journal> <volume> 14(5) </volume> <pages> 407-420, </pages> <year> 1989. </year>
Reference: [17] <author> Elisa Bertino. </author> <title> Integration of heterogeneous data repositories by using object oriented views. </title> <booktitle> In First Workshop on Interoperability in Multidatabase Systems, </booktitle> <pages> pages 22-29. </pages> <publisher> IEEE, </publisher> <month> April </month> <year> 1991. </year>
Reference: [18] <author> Elisa Bertino and Lorenzo Martino. </author> <title> Objectoriented database management systems: </title> <booktitle> Concepts and issues. Computer, </booktitle> <pages> pages 33-47, </pages> <year> 1991. </year>
Reference: [19] <author> Joachim Biskup and Bernhard Convent. </author> <title> A formal view integration method. </title> <booktitle> In Proceedings of the SIGMOD 86 International Conference on Management of Data, </booktitle> <pages> pages 398-407, </pages> <month> May </month> <year> 1986. </year>
Reference-contexts: Significant work has been done in the area of schema integration. Batini provided a survey of several schema integration programs and problems in [15]. Biskup provided a formal description of the integration process, including desired semantics, in <ref> [19] </ref>. Several others [14] [33] [60] [112] [115] have refined the problem and created simple tools. Much of this work has focused only on the practical problems, leaving the theoretical problems largely unsolved. As a result, it is usually the users responsibility to resolve all conflicts before the integration begins.
Reference: [20] <author> Micheal Bonjour and Gilles Falquet. </author> <title> Concept bases: A support to information systems integration. </title> <booktitle> In Proceedings of CAiSE*94, </booktitle> <month> June </month> <year> 1994. </year> <month> 149 </month>
Reference: [21] <author> Mohamed Bouneffa and Nacer Boudjlida. </author> <title> Managing schema changes in object-relationship databases. </title> <booktitle> In OOER'95: Object Oriented and Entity Relationship Modeling, </booktitle> <pages> pages 113-122, </pages> <month> December </month> <year> 1995. </year>
Reference-contexts: The major disadvantage of this approach is the amount of time required to perform the transformation on a large database. This is particularly troublesome because the database is often unavailable while the transformation is occurring. Other systems <ref> [21] </ref> [90] [109] allow dynamic, lazy transformation. The data are converted from the old representation to the new upon its first access, then stored in the new format. This approach does not require the database to be isolated during the transformation, since it is spread over many queries.
Reference: [22] <author> Mokrane Bouzeghoub and Isabelle Comyn-Wattiau. </author> <title> View integration by semantic unification and transformation of data structures. </title> <editor> In H Kangassalo, editor, </editor> <booktitle> Proceedings of the Ninth International Conference on the Entity Relationship Approach, </booktitle> <pages> pages 381-398. </pages> <publisher> Elsevier Science Publishers B. V., </publisher> <month> October </month> <year> 1989. </year>
Reference-contexts: If a relationship between two constructs is not specified, they will not be integrated. Forcing the user to resolve all conflicts manually is an unnecessary burden. Some of the tools developed recently have started to address this shortcoming. Both Bouzeghoub <ref> [22] </ref> and Gotthard [52] describe systems that perform simple manipulations in an attempt to overcome structural conflicts in the schemata being integrated.
Reference: [23] <author> Yuri Breitbart, Peter L. Olson, and Glen R. Thompson. </author> <title> Database integration in a distributed heterogeneous database system. </title> <booktitle> In ICDE, </booktitle> <pages> pages 301-310, </pages> <year> 1986. </year>
Reference: [24] <author> M. W. Bright, A. R. Hurson, and Simin H. Pakzad. </author> <title> A taxonomy and current issues in multidatabase systems. </title> <journal> Computer, </journal> <volume> 25(3) </volume> <pages> 50-59, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: Current work [10] is attempting to address this problem, however the standard will require some time to mature before becoming commonplace in commercial applications. 2.2 Conflicts The different problems that arise when manipulating multiple schemata have been documented in several papers including [15] <ref> [24] </ref> [25] [65]. Naming conflicts arise from the difficulty in identifying similar concepts in different schemata because the database designers may have made different choices in naming the concept. Once the equivalent concepts have been identified, structural conflicts resulting from differences in representation can be addressed.
Reference: [25] <author> M. W. Bright, A. R. Hurson, and Simin H. Pakzad. </author> <title> Automated resolution of semantic heterogeneity in multidatabases. </title> <journal> Transactions of Database Systems, </journal> <pages> pages 212-253, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: Current work [10] is attempting to address this problem, however the standard will require some time to mature before becoming commonplace in commercial applications. 2.2 Conflicts The different problems that arise when manipulating multiple schemata have been documented in several papers including [15] [24] <ref> [25] </ref> [65]. Naming conflicts arise from the difficulty in identifying similar concepts in different schemata because the database designers may have made different choices in naming the concept. Once the equivalent concepts have been identified, structural conflicts resulting from differences in representation can be addressed. <p> The expert system can contain domain specific knowledge, as in [40], or can contain more general real world knowledge as in [32] and <ref> [25] </ref>. Dilts created an expert system that used knowledge of computer integrated manufacturing (CIM) to resolve naming conflicts between different databases within that domain. The problem with this system is that it lacks generality. <p> Obviously, this limits the usefulness of the tool to the domain (s) that it knows about. Collet and Bright took the second approach. Their systems depend on large knowledge bases that contain a tremendous amount of general knowledge. Collet's system [32] is based on the Cyc database, whereas Bright's <ref> [25] </ref> is based on a specialized implementation of Roget's thesaurus. Both systems have the potential to do well when they are presented with general schemata since they are able to identify similar concepts easily.
Reference: [26] <author> P. Buneman, S. Davidson, and A. Kosky. </author> <title> Theoretical aspects of schema merging. </title> <booktitle> In Advances in Database Technology EDBT 92, </booktitle> <year> 1992. </year>
Reference-contexts: Gotthards tool also reduces the burden on the user by assuming name equivalence on attributes, and a heuristic match for entities based on the percentage of similarly named attributes, to help resolve name conflicts. Buneman and Kosky also assume name equivalence in <ref> [26] </ref> [27] [66] [67]. However, the interesting contribution of this work is their approach to solving attribute type conflicts. In this solution, corresponding attributes having different types in the original schemata will appear in the integrated schema as an attribute whose type is the generalization of the original types.
Reference: [27] <author> P. Buneman, S. Davidson, A. Kosky, and M. VanInwegen. </author> <title> A basis for interactive schema merging. </title> <booktitle> In Proceedings Hawaii International Conference on System Sciences, </booktitle> <year> 1992. </year>
Reference-contexts: User interaction requires the user to explicitly specify which entities are the same. If two entities are not declared to be the same, they are considered different, even if their names are the same. In some cases such as <ref> [27] </ref>, name equivalence is assumed and only constructs with the same name are merged. Name equivalence requires the user to resolve all naming conflicts before the schemata are presented for integration. Obviously, the user interaction approach puts a large burden on the integrators. <p> Gotthards tool also reduces the burden on the user by assuming name equivalence on attributes, and a heuristic match for entities based on the percentage of similarly named attributes, to help resolve name conflicts. Buneman and Kosky also assume name equivalence in [26] <ref> [27] </ref> [66] [67]. However, the interesting contribution of this work is their approach to solving attribute type conflicts. In this solution, corresponding attributes having different types in the original schemata will appear in the integrated schema as an attribute whose type is the generalization of the original types.
Reference: [28] <author> M. A. Casanova and V. M. P. Vidal. </author> <title> Towards a sound view integration methodology. </title> <booktitle> In Proceedings of the Second Annual ACM SIGACT-SIGMOD Symposium on Principles of Database Systems, </booktitle> <pages> pages 36-47, </pages> <month> March </month> <year> 1983. </year>
Reference: [29] <author> Malu' Castellanos and Felix Saltor. </author> <title> Semantic enrichment of database schemas: An object oriented approach. </title> <booktitle> In First Workshop on Interoperability in Multidatabase Systems, </booktitle> <pages> pages 258-261. </pages> <publisher> IEEE, </publisher> <month> April </month> <year> 1991. </year>
Reference-contexts: It requires them to 16 know about every concept represented in the various schemata, and create associations between related concepts. However, it does remove this burden from the programmer and is, as such, a popular option. Many people, including <ref> [29] </ref> [61] [62] [83] [110] [116] [126], have suggested ways of enhancing the database schema to contain enough information to resolve naming conflicts. By ensuring the information needed to identify similar concepts is provided with the database schema, the integration can be performed without additional user input.
Reference: [30] <author> Peter PinShan Chen. </author> <title> The entity-relationship model - toward a unified view of data. </title> <journal> Transactions on Database Systems, </journal> <pages> pages 9-36, </pages> <month> March </month> <year> 1976. </year>
Reference-contexts: Unfortunately, the relational data model does not provide any way to prevent these types of natural joins from occurring. 2.1.2 The Entity Relationship Data Model The entity-relationship (ER) model was first described by Chen in <ref> [30] </ref>. This model is the most successful attempt to create a data model that could encompass the three major data models of that time; the relational, network, and hierarchical data models. These data models were popular because they were implemented by existing database management systems.
Reference: [31] <author> Ferda N. Civelek, Asuman Dogac, and Stefano Spaccapietra. </author> <title> An expert system approach to view definition and integration. </title> <editor> In C. Batini, editor, </editor> <booktitle> The Seventh International Conference on the Entity-Relationship Approach, </booktitle> <pages> pages 229-249, </pages> <year> 1988. </year> <month> 150 </month>
Reference-contexts: For example, integrating schemata containing the different representations of the concept of marriage shown in Figures 4 (a) and 3 (b) would constitute a simple structural conflict. Once all equivalent concepts have been identified, resolving simple structural conflicts is easy. The rules for this resolution, as described in <ref> [31] </ref>, are as follows: If two equivalent entities have different attributes, the resulting entity's attributes are the union of the given attributes. An attribute can be converted into an equivalent entity, and the implicit association between an attribute and its corresponding entity can then be made into a relationship.
Reference: [32] <author> Christine Collet, Michael N. Huhns, and Wei-Min Shen. </author> <title> Resource integration using a large knowledge base in Carnot. </title> <journal> Computer, </journal> <volume> 24(12) </volume> <pages> 55-62, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: The expert system can contain domain specific knowledge, as in [40], or can contain more general real world knowledge as in <ref> [32] </ref> and [25]. Dilts created an expert system that used knowledge of computer integrated manufacturing (CIM) to resolve naming conflicts between different databases within that domain. The problem with this system is that it lacks generality. <p> Obviously, this limits the usefulness of the tool to the domain (s) that it knows about. Collet and Bright took the second approach. Their systems depend on large knowledge bases that contain a tremendous amount of general knowledge. Collet's system <ref> [32] </ref> is based on the Cyc database, whereas Bright's [25] is based on a specialized implementation of Roget's thesaurus. Both systems have the potential to do well when they are presented with general schemata since they are able to identify similar concepts easily.
Reference: [33] <author> Bogdan Czejdo and David W. Embley. </author> <title> An approach to schema integration and query formulation in federated database systems. </title> <booktitle> In ICDE, </booktitle> <pages> pages 477-484, </pages> <year> 1987. </year>
Reference-contexts: Significant work has been done in the area of schema integration. Batini provided a survey of several schema integration programs and problems in [15]. Biskup provided a formal description of the integration process, including desired semantics, in [19]. Several others [14] <ref> [33] </ref> [60] [112] [115] have refined the problem and created simple tools. Much of this work has focused only on the practical problems, leaving the theoretical problems largely unsolved. As a result, it is usually the users responsibility to resolve all conflicts before the integration begins.
Reference: [34] <author> Bogdan Czedjo and Malcolm Taylor. </author> <title> Integration of database systems using an objectoriented approach. </title> <booktitle> In First Workshop on Interoperability in Multi-database Systems, </booktitle> <pages> pages 30-37. </pages> <publisher> IEEE, </publisher> <month> April </month> <year> 1991. </year>
Reference: [35] <author> S. B. Davidson, A. S. Kosky, and B. Eckman. </author> <title> Facilitating transforms in a human genome project database. </title> <type> Technical report, </type> <institution> University of Pennsylvania, </institution> <year> 1993. </year>
Reference: [36] <author> Umeshwar Dayal and Hai yann Hwang. </author> <title> View definition and generalization for database integration in a multidatabase system. </title> <journal> Transactions on Software Engineering, </journal> <volume> SE-10(6):628-644, </volume> <month> November </month> <year> 1984. </year>
Reference: [37] <author> J. M. de Souza. </author> <title> SIS - a schema integration system. </title> <editor> In E. A. Oxborrow, editor, </editor> <booktitle> Proceedings of the Fifth British National Conference on Databases, </booktitle> <pages> pages 167-185. </pages> <publisher> Cambridge University Press, </publisher> <month> July </month> <year> 1986. </year>
Reference: [38] <author> S. M. Deen, R. R. Amin, and M. C. Taylor. </author> <title> Data integration in distributed databases. </title> <journal> Transactions on Software Engineering, </journal> <volume> SE-13(7):860-864, </volume> <month> July </month> <year> 1987. </year>
Reference: [39] <author> Jurgen Diet and Frederick H. </author> <title> Lochovsky. Interactive specification and integration of user views using forms. </title> <editor> In F. H. Lochovsky, editor, </editor> <booktitle> Proceedings of the Eighth International Conference on the Entity-Relationship Approach, </booktitle> <pages> pages 171-185. </pages> <publisher> Elsevier Science Publishers B. V., </publisher> <month> October </month> <year> 1989. </year>
Reference: [40] <author> David M. Dilts and Wenhua Wu. </author> <title> Using knowledge-based technology to integrate CIM databases. </title> <journal> Transactions on Knowledge and Data Engineering, </journal> <volume> 3(2) </volume> <pages> 237-245, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: The expert system can contain domain specific knowledge, as in <ref> [40] </ref>, or can contain more general real world knowledge as in [32] and [25]. Dilts created an expert system that used knowledge of computer integrated manufacturing (CIM) to resolve naming conflicts between different databases within that domain. The problem with this system is that it lacks generality.
Reference: [41] <institution> Meeting report DOE informatics summit, </institution> <month> April </month> <year> 1993. </year> <institution> Baltimore, MD. </institution>
Reference: [42] <author> Yann Dupont. </author> <title> Resolving fragmentation conflicts in schema integration. </title> <booktitle> In ER'94: Thirteenth International Conference on the Entity-Relationship Approach, </booktitle> <pages> pages 513-532, </pages> <month> December </month> <year> 1994. </year>
Reference: [43] <author> Ramez Elmasri and Sham Navathe. </author> <title> Object integration in logical database design. </title> <booktitle> In International Conference on Data Engineering, </booktitle> <pages> pages 426-433. </pages> <publisher> IEEE, Computer Society Press, </publisher> <month> April </month> <year> 1984. </year> <month> 151 </month>
Reference: [44] <author> R. Elmasri, J. Weeldreyer, and A. Hevner. </author> <title> The category concept: An extension to the entity-relationship model. </title> <journal> Data and Knowledge Engineering, </journal> <pages> pages 75-116, </pages> <month> June </month> <year> 1985. </year>
Reference-contexts: Several extensions to the ER model have been proposed in an attempt to address this problem. One of the most common is the Entity-Category-Relationship (ECR) model proposed by Elmasri in <ref> [44] </ref>.
Reference: [45] <author> Alexander Endrikat and Ralf Michalski. </author> <title> Application-oriented integration of distributed heterogeneous knowledge sources. </title> <editor> In D. Karagiannis, editor, </editor> <booktitle> Database and Expert Systems Applications: Proceedings of the International Conference in Berlin, </booktitle> <pages> pages 327-332, </pages> <year> 1991. </year>
Reference: [46] <author> P. Frankhauser and E. J. Neuhold. </author> <title> Knowledge based integration of heterogeneous databases. </title> <booktitle> In Proceedings of IFIP Conference DS-5 on Semantic Interoperable Database Systems, </booktitle> <month> November </month> <year> 1992. </year>
Reference: [47] <author> Karen A. Frenkel. </author> <title> The human genome project and informatics. </title> <journal> CACM, </journal> <volume> 34 </volume> <pages> 41-51, </pages> <month> November </month> <year> 1991. </year>
Reference-contexts: The Human Genome Project <ref> [47] </ref> is an ambitious first step in achieving this goal. It is an attempt to completely sequence, map and annotate the human genome. This goal is composed of three distinct projects, that are currently proceeding in parallel.
Reference: [48] <author> Manuel Garcia-Solaco, Felix Saltor, and Malu Castellanos. </author> <title> A structure based schema integration methodology. </title> <booktitle> In Eleventh International Conference on Data Engineering, </booktitle> <pages> pages 505-512, </pages> <month> March </month> <year> 1995. </year>
Reference: [49] <author> Georges Gardarin. </author> <title> Integrating classes and relations to model and query geographical databases. </title> <booktitle> In DEXA'93: Fourth International Conference on Database and Expert Systems Applications, </booktitle> <pages> pages 365-372, </pages> <month> September </month> <year> 1993. </year>
Reference: [50] <author> Philip Gaudette, Steve Trus, and Sarah Collins. </author> <title> A free value tool for ASN.1. </title> <type> Technical Report NCSL/SNA-89/1, </type> <institution> National Institute of Standards and Technology, </institution> <month> February </month> <year> 1989. </year>
Reference: [51] <author> James Geller, Yehoshua Perl, Erich Neuhold, and Amit Sheth. </author> <title> Structural schema integration with full and partial correspondence using the dual model. </title> <journal> Information Systems, </journal> <volume> 17(6) </volume> <pages> 443-464, </pages> <year> 1992. </year>
Reference: [52] <author> Willi Gotthard, Peter C. Lockemann, and Andrea Neufeld. </author> <title> System-guided view integration for objectoriented databases. </title> <journal> Transactions on Knowledge and Data Engineering, </journal> <volume> 4(1) </volume> <pages> 1-22, </pages> <month> February </month> <year> 1992. </year>
Reference-contexts: If a relationship between two constructs is not specified, they will not be integrated. Forcing the user to resolve all conflicts manually is an unnecessary burden. Some of the tools developed recently have started to address this shortcoming. Both Bouzeghoub [22] and Gotthard <ref> [52] </ref> describe systems that perform simple manipulations in an attempt to overcome structural conflicts in the schemata being integrated.
Reference: [53] <author> J-L. Hainaut, V. Englebert, J. Henrard, J-M. Hick, and D. Roland. </author> <title> Database evolution: The DB-MAIN approach. </title> <booktitle> In ER'94: Thirteenth International Conference on the Entity Relationship Approach, </booktitle> <pages> pages 112-131, </pages> <month> December </month> <year> 1994. </year>
Reference-contexts: Unfortunately, there is little support for identifying the applications that are likely to be affected by a particular schema modification. Some systems, such as [12] <ref> [53] </ref>, require the conversion from the old schema to the new take place at once. This approach has the benefit that queries respond quickly since the database management system is not required to perform transformations between versions.
Reference: [54] <author> T. A. Halpin and H. A. Proper. </author> <title> Database schema transformation and optimization. </title> <booktitle> In OOER'95 Fourteenth International Conference on ObjectOriented and Entity Relationship Modeling, </booktitle> <pages> pages 191-203, </pages> <month> December </month> <year> 1995. </year> <month> 152 </month>
Reference: [55] <author> Stephen Hayne and Sudha Ram. </author> <title> Multiuser view integration system MUVIS: An expert system for view integration. </title> <booktitle> In ICDE, </booktitle> <pages> pages 402-407, </pages> <year> 1990. </year>
Reference: [56] <author> Paul Johannesson. </author> <title> A logical basis for schema integration. </title> <booktitle> In Third International Workshop on Research Issues in Data Engineering - Interoperability in Multidatabase Systems Conference, </booktitle> <pages> pages 171-181, </pages> <year> 1993. </year>
Reference: [57] <author> Paul Johannesson. </author> <title> Supporting schema integration by linguistic instruments. </title> <booktitle> In First International Workshop on Natural Languages In Databases, </booktitle> <pages> pages 128-134, </pages> <year> 1995. </year>
Reference: [58] <author> Burton S. Kaliski Jr. </author> <title> A layman's guide to a subset of ASN.1, BER, </title> <editor> and DER, </editor> <month> June </month> <year> 1991. </year> <note> Available via anonymous FTP from ftp.uni-erlangen.de. </note>
Reference: [59] <author> Kamalakar Karlapalem, Qing Li, and Chung-Dak Shum. HODFA: </author> <title> An architectural framework for homogenizing heterogeneous legacy databases. </title> <booktitle> SIGMOD Record, </booktitle> <volume> 24(1), </volume> <month> March </month> <year> 1995. </year>
Reference: [60] <author> M. Kaul, K. Drosten, and E.J. Neuhold. ViewSystem: </author> <title> Integrating heterogeneous information bases by objectoriented views. </title> <booktitle> In Proceedings of the Sixth International Conference on Data Engineering, </booktitle> <pages> pages 2-10, </pages> <year> 1990. </year>
Reference-contexts: Significant work has been done in the area of schema integration. Batini provided a survey of several schema integration programs and problems in [15]. Biskup provided a formal description of the integration process, including desired semantics, in [19]. Several others [14] [33] <ref> [60] </ref> [112] [115] have refined the problem and created simple tools. Much of this work has focused only on the practical problems, leaving the theoretical problems largely unsolved. As a result, it is usually the users responsibility to resolve all conflicts before the integration begins.
Reference: [61] <author> Daniel A. Keim, Hans-Peter Kriegel, and Andreas Miethsam. </author> <title> Integration of relational databases in a multidatabase system based on schema enrichment. </title> <type> Technical Report 9307, </type> <institution> Ludwig-Maximilians-Universat Munchen, </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: It requires them to 16 know about every concept represented in the various schemata, and create associations between related concepts. However, it does remove this burden from the programmer and is, as such, a popular option. Many people, including [29] <ref> [61] </ref> [62] [83] [110] [116] [126], have suggested ways of enhancing the database schema to contain enough information to resolve naming conflicts. By ensuring the information needed to identify similar concepts is provided with the database schema, the integration can be performed without additional user input.
Reference: [62] <author> Daniel A. Keim, Hans-Peter Kriegel, and Andreas Miethsam. </author> <title> Object-Oriented modeling of meta information for semantic schema enrichment and (semi-)automatic schema transformation. </title> <type> Technical Report 9306, </type> <institution> Ludwig-Maximilians-Universat Munchen, </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: It requires them to 16 know about every concept represented in the various schemata, and create associations between related concepts. However, it does remove this burden from the programmer and is, as such, a popular option. Many people, including [29] [61] <ref> [62] </ref> [83] [110] [116] [126], have suggested ways of enhancing the database schema to contain enough information to resolve naming conflicts. By ensuring the information needed to identify similar concepts is provided with the database schema, the integration can be performed without additional user input.
Reference: [63] <author> William Kent. </author> <title> Solving domain mismatch and schema mismatch problems with an objectoriented database programming language. </title> <booktitle> In Seventeenth International Conference on Very Large Data Bases, </booktitle> <pages> pages 147-160, </pages> <month> September </month> <year> 1991. </year>
Reference: [64] <author> Won Kim, Jorge F. Garza, Nathaniel Ballou, and Darrell Woelk. </author> <title> Architecture of the ORION next-generation database. </title> <journal> Transactions on Knowledge and Data Engineering, </journal> <volume> 2(1) </volume> <pages> 109-124, </pages> <month> March </month> <year> 1990. </year>
Reference: [65] <author> Won Kim and Jungyun Seo. </author> <title> Classifying schematic and data heterogeneity in multidatabase systems. </title> <journal> Computer, </journal> <volume> 24(12) </volume> <pages> 12-18, </pages> <month> December </month> <year> 1991. </year> <month> 153 </month>
Reference-contexts: Current work [10] is attempting to address this problem, however the standard will require some time to mature before becoming commonplace in commercial applications. 2.2 Conflicts The different problems that arise when manipulating multiple schemata have been documented in several papers including [15] [24] [25] <ref> [65] </ref>. Naming conflicts arise from the difficulty in identifying similar concepts in different schemata because the database designers may have made different choices in naming the concept. Once the equivalent concepts have been identified, structural conflicts resulting from differences in representation can be addressed.
Reference: [66] <author> Anthony Kosky. </author> <title> A formal model for databases with applications to schema merging. </title> <editor> In Harper and Norrie, editors, </editor> <title> Specifications of Database Systems, </title> <address> Glasgow, </address> <year> 1991. </year>
Reference-contexts: Gotthards tool also reduces the burden on the user by assuming name equivalence on attributes, and a heuristic match for entities based on the percentage of similarly named attributes, to help resolve name conflicts. Buneman and Kosky also assume name equivalence in [26] [27] <ref> [66] </ref> [67]. However, the interesting contribution of this work is their approach to solving attribute type conflicts. In this solution, corresponding attributes having different types in the original schemata will appear in the integrated schema as an attribute whose type is the generalization of the original types.
Reference: [67] <author> Anthony Kosky. </author> <title> Modeling and merging database schemas. </title> <type> Technical report, </type> <institution> University of Pennsylvania, </institution> <month> September </month> <year> 1991. </year>
Reference-contexts: Gotthards tool also reduces the burden on the user by assuming name equivalence on attributes, and a heuristic match for entities based on the percentage of similarly named attributes, to help resolve name conflicts. Buneman and Kosky also assume name equivalence in [26] [27] [66] <ref> [67] </ref>. However, the interesting contribution of this work is their approach to solving attribute type conflicts. In this solution, corresponding attributes having different types in the original schemata will appear in the integrated schema as an attribute whose type is the generalization of the original types.
Reference: [68] <author> Charles Lamb, Gordon Landis, Jack Orenstein, and Dan Weinreb. </author> <title> The ObjectStore database system. </title> <journal> CACM, </journal> <volume> 34 </volume> <pages> 50-63, </pages> <month> October </month> <year> 1991. </year>
Reference: [69] <author> James A. Larson, Shamkant B. Navathe, and Ramez Elmasri. </author> <title> A theory of attribute equivalence in databases with application to schema integration. </title> <journal> Transactions on Software Engineering, </journal> <volume> 15(4) </volume> <pages> 449-463, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: It is not clear how to recognize that a particular client is also an employee. Identifying identical instances is not possible in the general case. Partial solutions to the instance integration problem are addressed in several papers. Larson <ref> [69] </ref> requires the user to specify correspondences between attributes and uses corresponding attributes to determine the integration strategy. Lim [73] requires the user to enter real world information about the items being modeled, and uses this information to determine if the instances represent the same real world object.
Reference: [70] <author> Mong Li Lee and Tok Wang Ling. </author> <title> Resolving structural conflicts in the integration of entity relationship schemas. </title> <booktitle> In OOER'95: Object Oriented and Entity Relationship Modeling, </booktitle> <pages> pages 424-433, </pages> <month> December </month> <year> 1995. </year>
Reference: [71] <author> Barbara Staudt Lerner and A. Nico Habermann. </author> <title> Beyond schema evolution to database reorganization. </title> <editor> In Norman Meyrowitz, editor, </editor> <booktitle> ECCOP/OOPSLA '90 Conference on ObjectOriented Programming: Systems, Languages and Applications European Conference on Object-Oriented Programming, </booktitle> <pages> pages 67-76, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: For example, information spread across several constructs cannot be arbitrarily rearranged, and context sensitive changes to existing data, such as changing the value of a column based on another value, cannot be made. An alternative solution, discussed in <ref> [71] </ref>, allows for 37 arbitrary restructuring of a schema by replacing the limited set of transformation operators with a simplified programming language. This language allows a variety of transformations, including the complete restructuring of the database in the limit.
Reference: [72] <author> Ee-Peng Lim and Satya Prabhakar. </author> <title> Entity identification in database integration. </title> <booktitle> In Ninth International Conference on Data Engineering. IEEE, </booktitle> <year> 1993. </year>
Reference: [73] <author> Ee-Peng Lim, Jaideep Srivastava, and Shashi Shekhar. </author> <title> Resolving attribute incompatibility in database integration: An evidential reasoning approach. </title> <booktitle> In Tenth International Conference on Data Engineering, </booktitle> <pages> pages 154-163. </pages> <publisher> IEEE, </publisher> <month> February </month> <year> 1994. </year>
Reference-contexts: Identifying identical instances is not possible in the general case. Partial solutions to the instance integration problem are addressed in several papers. Larson [69] requires the user to specify correspondences between attributes and uses corresponding attributes to determine the integration strategy. Lim <ref> [73] </ref> requires the user to enter real world information about the items being modeled, and uses this information to determine if the instances represent the same real world object. Unfortunately, these solutions require a significant amount of user interaction. <p> This may occur because the attribute has a subjective or variable value, such as a hotel rating, or because one of the databases has obsolete information, such as an old address. In the solution proposed by Lim <ref> [73] </ref>, the confidence in each version of the data is obtained from the user. When a conflict is identified, the data with the highest confidence are used.
Reference: [74] <author> Chien-Tsai Liu, Panos K. Chrysanthis, and Shi-Kou Chang. </author> <title> Database schema evolution through the specification and maintenance of changes on entities and relationships. </title> <booktitle> In ER'94: Thirteenth International Conference on the Entity Relationship Approach, </booktitle> <pages> pages 132-151, </pages> <month> December </month> <year> 1994. </year>
Reference-contexts: In order for existing applications to access all the information in a database, conversion functions must be provided between the new and old schemata. These functions allow the database management system to automatically convert the data to the required schema as described in [84] [99]. In <ref> [74] </ref> [124], views are used to reorganize and restrict the information presented, whereas the physical schema remains constant. This approach has the advantage of not requiring 35 database restructuring after every schema change.
Reference: [75] <author> Michael V. Mannino and Wolfgang Effelsberg. </author> <title> Matching techniques in global schema design. </title> <booktitle> In International Conference on Data Engineering, </booktitle> <pages> pages 418-425. </pages> <publisher> IEEE, Computer Society Press, </publisher> <month> April </month> <year> 1984. </year>
Reference: [76] <author> Leo Mark and Nick Roussopoulos. </author> <title> Metadata management. </title> <journal> Computer, </journal> 19(12) 26-36, December 1986. <volume> 154 </volume>
Reference: [77] <author> Victor M. Markowitz and Johann A. Makowsky. </author> <title> Incremental restructuring of relational schemas. </title> <booktitle> In Fourth Conference on Data Engineering, </booktitle> <pages> pages 276-284. </pages> <publisher> IEEE, </publisher> <month> February </month> <year> 1988. </year>
Reference: [78] <author> Tom Marr. </author> <note> Genome topographer. www.cb.cshl.org/gt/index-actual.html. </note>
Reference-contexts: If the desired global schema is known in advance, coercion can be used to solve the schema integration process, by translating each of the local schemata into the global schema. For example, in the Genome Topographer 4 (GT) <ref> [78] </ref>, a global schema has already been decided upon. The problem facing GT is translating interesting information from local (lab) databases into the GT global schema.
Reference: [79] <author> Patrick Martin and Wendy Powley. </author> <title> Database integration using multidatabase views. </title> <booktitle> In Proceedings of CASCON93, </booktitle> <pages> pages 779-788, </pages> <month> October </month> <year> 1993. </year>
Reference: [80] <author> Patrick Martin, James R. Cordy, and Rateb Abu-Hamdeh. </author> <title> Information capacity preserving translations of relational schemas using structural transformations. </title> <type> Technical Report 95-392, </type> <institution> Dept. of Computing and Information Science Queen's University at Kingston, </institution> <month> November </month> <year> 1995. </year>
Reference-contexts: The practical work endeavors to provide a tool that will aid the user in resolving conflicts, but does not attempt to automatically address any of the conflicts that arise. Very few works <ref> [80] </ref> provide a comprehensive approach that attempts to address all of the issues in a coordinated manner. This chapter provides a detailed description of the three most common forms of schema manipulation, and describes the unique problems arising in each of them. Various approaches to solving these problems are discussed.
Reference: [81] <author> Peter McBrien and Alex Poulovassille. </author> <title> Formalisation of semantic schema integration. </title> <type> Technical Report 96-01, </type> <institution> Dept. of Computer Science King's College London, </institution> <month> January </month> <year> 1996. </year>
Reference: [82] <author> Dennis Mcleod. </author> <title> A learning based approach to meta-data evolution in an objectoriented database. </title> <editor> In K. R. Dittrich, editor, </editor> <booktitle> Advances in Object-Oriented Database Systems: Second International Workshop on Object Oriented Database Systems, volume 334 of Lecture Notes in Computer Science, </booktitle> <pages> pages 291-224. </pages> <publisher> Springer-Verlag, </publisher> <month> September </month> <year> 1988. </year>
Reference: [83] <author> R. J. Miller, Y. E. Ioannidis, and R. Ramakrishnan. </author> <title> The use of information capacity in schema integration and translation. </title> <booktitle> In Nineteenth International Conference on Very Large Data Bases, </booktitle> <pages> pages 120-133, </pages> <year> 1993. </year>
Reference-contexts: It requires them to 16 know about every concept represented in the various schemata, and create associations between related concepts. However, it does remove this burden from the programmer and is, as such, a popular option. Many people, including [29] [61] [62] <ref> [83] </ref> [110] [116] [126], have suggested ways of enhancing the database schema to contain enough information to resolve naming conflicts. By ensuring the information needed to identify similar concepts is provided with the database schema, the integration can be performed without additional user input.
Reference: [84] <author> Simon Monk and Ian Sommerville. </author> <title> Schema evolution in OODBs using class versioning. </title> <booktitle> SIGMOD Record, </booktitle> <volume> 22(3) </volume> <pages> 16-22, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: In order for existing applications to access all the information in a database, conversion functions must be provided between the new and old schemata. These functions allow the database management system to automatically convert the data to the required schema as described in <ref> [84] </ref> [99]. In [74] [124], views are used to reorganize and restrict the information presented, whereas the physical schema remains constant. This approach has the advantage of not requiring 35 database restructuring after every schema change.
Reference: [85] <author> Amihai Motro. Superviews: </author> <title> Virtual integration of multiple databases. </title> <journal> Transactions on Software Engineering, </journal> <volume> SE-13(7):785-798, </volume> <month> July </month> <year> 1987. </year>
Reference: [86] <author> Shamkant B. Navathe and Suresh G. Gadgil. </author> <title> A methodology for view integration in logical database integration. </title> <booktitle> In Eighth International Conference on Very Large Data Bases, </booktitle> <pages> pages 142-155, </pages> <year> 1982. </year>
Reference: [87] <author> S. B. Navathe, T. Sashidhar, and R. Elmasri. </author> <title> Relationship merging in schema integration. </title> <booktitle> In Tenth International Conference on Very Large Data Bases, </booktitle> <pages> pages 78-90, </pages> <month> August </month> <year> 1984. </year>
Reference: [88] <author> Shamkant Navathe, Ramez Elmasri, and James Larson. </author> <title> Integrating user views in database design. </title> <journal> Computer, </journal> <volume> 19(1) </volume> <pages> 50-62, </pages> <month> January </month> <year> 1986. </year> <month> 155 </month>
Reference: [89] <institution> NCBI software development toolkit. </institution> <note> Technical Report Version 1.9, National Center for Biotechnology Information, August 1994. Available via ftp from www.ncbi.nlm.nih.gov. </note>
Reference-contexts: Instead the ASN.1 data interaction is performed in two steps. First the data is converted into C structures by an existing program, then the desired attributes are imported into the 62 Smalltalk environment. The NCBI Toolkit <ref> [89] </ref> is used to convert between the ASN.1 data and C structures. The toolkit uses an explicit mapping between ASN.1 classes and a collection of loosely corresponding C structures. Unfortunately, this mapping is not consistent.
Reference: [90] <author> G. T. Nguyen and D. Rieu. </author> <title> Schema evolution in objectoriented database systems. </title> <journal> Data and Knowledge Engineering, </journal> <volume> 4(1) </volume> <pages> 43-67, </pages> <month> July </month> <year> 1989. </year>
Reference-contexts: The major disadvantage of this approach is the amount of time required to perform the transformation on a large database. This is particularly troublesome because the database is often unavailable while the transformation is occurring. Other systems [21] <ref> [90] </ref> [109] allow dynamic, lazy transformation. The data are converted from the old representation to the new upon its first access, then stored in the new format. This approach does not require the database to be isolated during the transformation, since it is spread over many queries.
Reference: [91] <author> Maria E. Orloswska and C. A. Ewald. </author> <title> Schema evolution - the design and integration of fact based schemata. </title> <editor> In B. Srinivasan and J. Zeleznikow, editors, </editor> <booktitle> Research and Practical Issues in Databases: Proceedings of the Third Australian Database conference, </booktitle> <pages> pages 306-320. </pages> <publisher> World Scientific Publishing Company, </publisher> <month> February </month> <year> 1992. </year>
Reference: [92] <author> Sylvia L. Osborn. </author> <title> The role of polymorphism in schema evolution in an objectoriented database. </title> <journal> Transactions on Knowledge and Data Engineering, </journal> <volume> 1(3) </volume> <pages> 310-317, </pages> <month> September </month> <year> 1989. </year>
Reference: [93] <institution> Visual Works 2.5 Object Reference. ParcPlace Digitalk Inc., </institution> <year> 1995. </year>
Reference-contexts: To facilitate this discussion, a single example will be used throughout the chapter. This example demonstrates the creation of a coercion between two databases containing customer and invoice data. 6.1 Getting Started SCoP is implemented in the VisualWorks Smalltalk environment <ref> [93] </ref> [94] with the CoercionCreation class as its primary interface. This class maintains and displays all database and conversion information. Every coercion is represented as an instance of this class. Prior to an ASN.1 database being loaded, the ComplexType maxLevel, maxRecursiveLevel and displayLevel variables should be set.
Reference: [94] <institution> Visual Works 2.5 User's Guide. ParcPlace Digitalk Inc., </institution> <year> 1995. </year>
Reference-contexts: To facilitate this discussion, a single example will be used throughout the chapter. This example demonstrates the creation of a coercion between two databases containing customer and invoice data. 6.1 Getting Started SCoP is implemented in the VisualWorks Smalltalk environment [93] <ref> [94] </ref> with the CoercionCreation class as its primary interface. This class maintains and displays all database and conversion information. Every coercion is represented as an instance of this class. Prior to an ASN.1 database being loaded, the ComplexType maxLevel, maxRecursiveLevel and displayLevel variables should be set.
Reference: [95] <author> Randal J. Peters and M. Tamer Ozsu. </author> <title> Axiomization of dynamic schema evolution in objectbases. </title> <booktitle> In Eleventh International Conference on Data Engineering, </booktitle> <pages> pages 156-164, </pages> <month> March </month> <year> 1995. </year>
Reference: [96] <author> Jaroslav Pokorny. </author> <booktitle> Semantic relativism in conceptual modeling. In DEXA'93 Fourth International Conference on Database and Expert Systems Applications, </booktitle> <pages> pages 48-55, </pages> <month> September </month> <year> 1993. </year>
Reference: [97] <author> Ferdi Put. </author> <title> Schema translation during design and integration of databases. </title> <editor> In H. Kangassalo, editor, </editor> <booktitle> Proceedings of the Ninth International Conference on the Entity-Relationship Approach, </booktitle> <pages> pages 399-421. </pages> <publisher> Elsevier Science Publishers B. V., </publisher> <month> October </month> <year> 1990. </year>
Reference-contexts: External sources of constraints, such as application program interfaces, may be used to enforce design semantics the implementation model cannot. Fortunately, objectoriented database management systems provide a semantically rich data model as their implementation model. This enables lossless translation from a conceptual model to the implementation. Put <ref> [97] </ref> recommends the use of an extended entity-relationship (EER) model to serve as the target model for preprocessing translations. This recommendation was made, in part, because the EER model is capable of modeling all the concepts that can be represented by other data models.
Reference: [98] <author> M. A. Qutaishat, N. J. Fiddian, and W. A. Gray. </author> <title> Association merging in a schema meta-integration system for a heterogeneous objectoriented database environment. </title> <editor> In P. M. D. Gray and R. J. Lukas, editors, </editor> <booktitle> Advanced Database Systems: Tenth British National Conference on Databases, </booktitle> <pages> pages 209-226. </pages> <publisher> Springer-Verlag, </publisher> <month> July </month> <year> 1992. </year>
Reference: [99] <author> Young-Gook Ra and Elke A. Rudensteiner. </author> <title> A transparent objectoriented schema change approach using view evolution. </title> <booktitle> In Eleventh International Conference on Data Engineering, </booktitle> <pages> pages 165-172, </pages> <month> March </month> <year> 1995. </year>
Reference-contexts: In order for existing applications to access all the information in a database, conversion functions must be provided between the new and old schemata. These functions allow the database management system to automatically convert the data to the required schema as described in [84] <ref> [99] </ref>. In [74] [124], views are used to reorganize and restrict the information presented, whereas the physical schema remains constant. This approach has the advantage of not requiring 35 database restructuring after every schema change.
Reference: [100] <author> M. P. Reddy, B. E. Prasad, P. G. Reddy, and Amar Gupta. </author> <title> A methodology for integration of heterogeneous databases. </title> <journal> Transactions on Knowledge and Data Engineering, </journal> <volume> 6(6) </volume> <pages> 920-933, </pages> <month> December </month> <year> 1994. </year> <month> 156 </month>
Reference: [101] <author> John F. Roddick. </author> <title> Schema evolution in database systems - an annotated bibliography. </title> <booktitle> SIGMOD Record, </booktitle> <volume> 21(4) </volume> <pages> 35-40, </pages> <month> December </month> <year> 1992. </year>
Reference: [102] <author> Arnon Rosenthal and David Reiner. </author> <title> Tools and transformations - rigorous and otherwise - for practical database design. </title> <journal> Transactions on Database Systems, </journal> <volume> 19(2), </volume> <month> June </month> <year> 1994. </year>
Reference: [103] <author> Marek Rusinkiewicz, Amit Sheth, and George Karabatis. </author> <title> Specifying inter-database dependencies in a multidatabase environment. </title> <journal> Computer, </journal> <volume> 24(12) </volume> <pages> 46-53, </pages> <month> December </month> <year> 1991. </year>
Reference: [104] <author> Rob Sargent, Dave Fuhrman, Terence Critchlow, Tony Di Sera, Robert Mecklenburg, Gary Lindstrom, and Peter Cartwright. </author> <title> The design and implementation of a database for human genome research. </title> <booktitle> In The Eighth International Conference on Scientific and Statistical Database Management. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <month> June </month> <year> 1996. </year>
Reference-contexts: The new sequencing technology demands that the UCHGR informatics group solve the practical problem of accurately representing a rapidly evolving view of the data. 45 Rather than constantly revising a traditional relational schema, a new data model was developed <ref> [104] </ref>. This model identified five basic concepts of laboratory management: objects, relationships, processes, environments, and protocols. Instances of these concepts comprise objects normally representing concrete entities within a genetics laboratory: wells, sequences, microtitre dishes etc.
Reference: [105] <author> Ashoka Savasere, Amit Sheth, Sunit Gala, Shamkant Navathe, and Howard Marcus. </author> <title> On applying classification to schema integration. </title> <booktitle> In First Workshop on Interoperability in Multidatabase Systems, </booktitle> <pages> pages 258-261. </pages> <publisher> IEEE, </publisher> <month> April </month> <year> 1991. </year>
Reference: [106] <author> Ingo Schmitt. </author> <title> Flexible integration and derivation of heterogeneous schemata in federated database systems. </title> <type> Technical Report Preprint Nr. 10, </type> <institution> Fakultat fur Informatik, Universitat Magdeburg, Magdeburg Germany, </institution> <month> November </month> <year> 1995. </year>
Reference: [107] <author> Ingo Schmitt and Gunter Saake. </author> <title> Schema integration and view derivation by resolving intensional and extensional overlappings. </title> <booktitle> In 9th ICSA International Conference on Parallel and Distributed Computing Systems, </booktitle> <month> September </month> <year> 1996. </year>
Reference: [108] <author> Micheal Schrefl and Erich J. Neuhold. </author> <title> A knowledge based approach to overcome structural differences in object oriented database integration. </title> <editor> In Robert A. Meersman, Zhongzhi Shi, and Chen-Ho Kung, editors, </editor> <booktitle> Proceedings of the IFIP Working Conference on the Role of Artificial Intelligence in Database and Information Systems, </booktitle> <pages> pages 265-304. </pages> <publisher> Elsevier Science Publishers B. V., </publisher> <month> July </month> <year> 1988. </year>
Reference: [109] <author> Peter Schwarz and Kurt Shoens. </author> <title> Managing change in the Rufus system. </title> <booktitle> In Tenth International Conference on Data Engineering, </booktitle> <pages> pages 170-179. </pages> <publisher> IEEE, </publisher> <month> February </month> <year> 1994. </year>
Reference-contexts: The major disadvantage of this approach is the amount of time required to perform the transformation on a large database. This is particularly troublesome because the database is often unavailable while the transformation is occurring. Other systems [21] [90] <ref> [109] </ref> allow dynamic, lazy transformation. The data are converted from the old representation to the new upon its first access, then stored in the new format. This approach does not require the database to be isolated during the transformation, since it is spread over many queries.
Reference: [110] <author> Edward Sciore, Michael Siegel, and Amon Rosenthal. </author> <title> Using semantic values to facilitate interoperability among heterogeneous information systems. </title> <journal> Transactions of Database Systems, </journal> <pages> pages 254-290, </pages> <month> June </month> <year> 1994. </year> <month> 157 </month>
Reference-contexts: It requires them to 16 know about every concept represented in the various schemata, and create associations between related concepts. However, it does remove this burden from the programmer and is, as such, a popular option. Many people, including [29] [61] [62] [83] <ref> [110] </ref> [116] [126], have suggested ways of enhancing the database schema to contain enough information to resolve naming conflicts. By ensuring the information needed to identify similar concepts is provided with the database schema, the integration can be performed without additional user input. There are three drawbacks to this approach. <p> The annotation file format presented in Section 5.7 provides meta-information required by the current matching functions. If the existing algorithm is enhanced, or new algorithms are added, additional meta-information may be required; examples of the information that may be desired are suggested in <ref> [110] </ref>. To aid in this enhancement, most interaction between the annotations and their related constructs is enclosed in Annotation and AnnotationFile. Defining a new annotation requires creating a parser to accept the 98 new information and modifying the convertFrom:to:using: and annotate: methods appropriately.
Reference: [111] <author> Len Seligman and Arnon Rosenthal. </author> <title> A metadata resource to promote data integration. </title> <booktitle> In Proceedings of IEEE Metadata Conference, </booktitle> <month> April </month> <year> 1996. </year>
Reference: [112] <author> Amit P. Sheth and James A. Larson. </author> <title> A tool for integrating conceptual schemas and user views. </title> <booktitle> In International Conference on Data Engineering, </booktitle> <pages> pages 176-183. </pages> <publisher> IEEE, </publisher> <year> 1988. </year>
Reference-contexts: Significant work has been done in the area of schema integration. Batini provided a survey of several schema integration programs and problems in [15]. Biskup provided a formal description of the integration process, including desired semantics, in [19]. Several others [14] [33] [60] <ref> [112] </ref> [115] have refined the problem and created simple tools. Much of this work has focused only on the practical problems, leaving the theoretical problems largely unsolved. As a result, it is usually the users responsibility to resolve all conflicts before the integration begins.
Reference: [113] <author> Amit P. Sheth and James A. Larson. </author> <title> Federated database systems for managing distributed heterogeneous and autonomous databases. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(3) </volume> <pages> 183-236, </pages> <month> September </month> <year> 1990. </year>
Reference: [114] <author> Amit P. Sheth, Sunit K. Gala, and Shamkant B. Navathe. </author> <title> On automatic reasoning for schema integration. </title> <journal> International Journal of Intelligent Cooperative Information Systems, </journal> <volume> 2(1) </volume> <pages> 23-50, </pages> <year> 1993. </year>
Reference: [115] <author> Peretz Shoval and Sara Zohn. </author> <title> Binary-relationship integration methodology. </title> <journal> Data and Knowledge Engineering, </journal> <volume> 6(3) </volume> <pages> 225-250, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: Significant work has been done in the area of schema integration. Batini provided a survey of several schema integration programs and problems in [15]. Biskup provided a formal description of the integration process, including desired semantics, in [19]. Several others [14] [33] [60] [112] <ref> [115] </ref> have refined the problem and created simple tools. Much of this work has focused only on the practical problems, leaving the theoretical problems largely unsolved. As a result, it is usually the users responsibility to resolve all conflicts before the integration begins.
Reference: [116] <author> Micheal Siegel and Stuart E. Madnick. </author> <title> A metadata approach to resolving semantic conflicts. </title> <booktitle> In Seventeenth International Conference on Very Large Data Bases, </booktitle> <pages> pages 133-145, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: It requires them to 16 know about every concept represented in the various schemata, and create associations between related concepts. However, it does remove this burden from the programmer and is, as such, a popular option. Many people, including [29] [61] [62] [83] [110] <ref> [116] </ref> [126], have suggested ways of enhancing the database schema to contain enough information to resolve naming conflicts. By ensuring the information needed to identify similar concepts is provided with the database schema, the integration can be performed without additional user input. There are three drawbacks to this approach.
Reference: [117] <author> William W. Song, Paul Johannesson, and Janis A. Bubenko Jr. </author> <title> Semantic similarity relations in schema integration. </title> <editor> In G. Pernul and A. M. Tjoa, editors, </editor> <booktitle> Eleventh International Conference on the Entity-Relationship Approach, volume 645 of Lecture Notes in Computer Science, </booktitle> <pages> pages 97-120. </pages> <publisher> Springer-Verlag, </publisher> <month> October </month> <year> 1992. </year>
Reference: [118] <author> Stefano Spaccapietra and Christine Parent. </author> <title> View integration: a step forward in solving structural conflicts. </title> <type> Technical Report tdke93, </type> <institution> Institute of Technology in Lausanne, Lausanne Switzerland, </institution> <year> 1993. </year> <note> To appear in IEEE TKDE 1993. </note>
Reference-contexts: For example, the representation of marriage shown in Figure 4 (a) can be decomposed into the representation shown in Figure 3 (b), with the Wedding Date attribute being associated with the relationship Married. Spaccapietra describes a partial solution to the problem of how to integrate additional conflicts in <ref> [118] </ref> [119]. This solution requires that all equivalencies are known before the integration process begins. The equivalencies are used to manipulate the constructs used in the different schema into the least general representation that will accommodate both representations without loss of information.
Reference: [119] <author> Stefano Spaccapietra, Christine Parent, and Yann Dupont. </author> <title> Model independent assertions for integration of heterogeneous schemas. </title> <type> Technical Report VLDBJournal92, </type> <institution> Institute of Technology in Lausanne, Lausanne Switzerland, </institution> <year> 1993. </year>
Reference-contexts: For example, the representation of marriage shown in Figure 4 (a) can be decomposed into the representation shown in Figure 3 (b), with the Wedding Date attribute being associated with the relationship Married. Spaccapietra describes a partial solution to the problem of how to integrate additional conflicts in [118] <ref> [119] </ref>. This solution requires that all equivalencies are known before the integration process begins. The equivalencies are used to manipulate the constructs used in the different schema into the least general representation that will accommodate both representations without loss of information.
Reference: [120] <author> Frederick N. Springsteel. </author> <title> Object-based schema integration for heterogeneous database: A logical approach. </title> <booktitle> In DEXA'93: Fourth International Conference on Database and Expert Systems Applications, </booktitle> <pages> pages 166-180, </pages> <month> September </month> <year> 1993. </year>
Reference: [121] <institution> Telecommunication Standardization Sector of International Telecommunication Union. </institution> <note> Specification of Abstract Syntax Notation One (ASN.1) ITU-T Recommendation X.208, 1988. Extracted from the Blue Book. 158 </note>
Reference-contexts: The constructs connected by these instances are stored in the roles table in a highly normalized format. This representation allows the model to express complex relationships, such as ordered sets, in the same format as traditional relationships. 53 ASN.1 is a format interchange language defined in <ref> [121] </ref> [122]. This format was initially designed for data transfer, not data storage. However, it has become popular in the scientific community because of its ability to represent complex data structures. NCBI distributes its genetics database, Genbank, as a collection of several ASN.1 files.
Reference: [122] <author> Telecommunication Standardization Sector of International Telecommunication Union. </author> <title> Specification of Basic Encoding Rules for Abstract Syntax Notation One (ASN.1) ITU-T Recommendation X.209, 1988. Extracted from the Blue Book. </title>
Reference-contexts: The constructs connected by these instances are stored in the roles table in a highly normalized format. This representation allows the model to express complex relationships, such as ordered sets, in the same format as traditional relationships. 53 ASN.1 is a format interchange language defined in [121] <ref> [122] </ref>. This format was initially designed for data transfer, not data storage. However, it has become popular in the scientific community because of its ability to represent complex data structures. NCBI distributes its genetics database, Genbank, as a collection of several ASN.1 files.
Reference: [123] <author> Christiaan Thieme and Arno Siebes. </author> <title> An approach to schema integration based on transformations and behavior. </title> <type> Technical Report CS-R9403, </type> <institution> CWI, </institution> <year> 1994. </year>
Reference: [124] <author> Markus Tresch and Marc H. Scholl. </author> <title> Meta object management and its application to database evolution. </title> <editor> In G. Pernul and A. M. Tjoa, editors, </editor> <booktitle> Eleventh International Conference on the Entity-Relationship Approach, volume 645 of Lecture Notes in Computer Science, </booktitle> <pages> pages 299-321. </pages> <publisher> Springer-Verlag, </publisher> <month> October </month> <year> 1992. </year>
Reference-contexts: In order for existing applications to access all the information in a database, conversion functions must be provided between the new and old schemata. These functions allow the database management system to automatically convert the data to the required schema as described in [84] [99]. In [74] <ref> [124] </ref>, views are used to reorganize and restrict the information presented, whereas the physical schema remains constant. This approach has the advantage of not requiring 35 database restructuring after every schema change.
Reference: [125] <author> Markus Tresch and Marc H. Scholl. </author> <title> Schema transformation without database reorganization. </title> <booktitle> SIGMOD Record, </booktitle> <volume> 22(1) </volume> <pages> 21-27, </pages> <month> March </month> <year> 1993. </year>
Reference: [126] <author> Susan D. Urban and Jian Wu. </author> <title> Resolving semantic heterogeneity through the explicit representation of data model semantics. </title> <booktitle> SIGMOD Record, </booktitle> <volume> 20(4) </volume> <pages> 55-58, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: It requires them to 16 know about every concept represented in the various schemata, and create associations between related concepts. However, it does remove this burden from the programmer and is, as such, a popular option. Many people, including [29] [61] [62] [83] [110] [116] <ref> [126] </ref>, have suggested ways of enhancing the database schema to contain enough information to resolve naming conflicts. By ensuring the information needed to identify similar concepts is provided with the database schema, the integration can be performed without additional user input. There are three drawbacks to this approach.
Reference: [127] <author> Vania M.P. Vidal and Marianne Winslett. </author> <title> A rigorous approach to schema restructuring. </title> <booktitle> In OOER'95: Fourteenth International Conference on ObjectOriented and Entity-Relationship Modeling, </booktitle> <pages> pages 101-112, </pages> <month> December </month> <year> 1995. </year>
Reference: [128] <author> Y. Richard Wang and Stuart E. Madnick. </author> <title> The inter-database instance identification problem in integrating autonomous systems. </title> <booktitle> In Fifth International Conference on Data Engineering, </booktitle> <pages> pages 46-55. </pages> <publisher> IEEE, </publisher> <year> 1989. </year>
Reference-contexts: Lim [73] requires the user to enter real world information about the items being modeled, and uses this information to determine if the instances represent the same real world object. Unfortunately, these solutions require a significant amount of user interaction. Wang <ref> [128] </ref> uses a large knowledge base containing real world information about objects to heuristically determine if the instances are the same.
Reference: [129] <author> W.K. Whang, S.B. Navathe, and S. Chakravarthy. </author> <title> Logic based approach for realizing a federated information system. </title> <booktitle> In First Workshop on Interoperability in Multidatabase Systems, </booktitle> <pages> pages 258-261. </pages> <publisher> IEEE, </publisher> <month> April </month> <year> 1991. </year>
Reference: [130] <author> Whan-Kyu Whang, Sharma Chakravarthy, and Shankant B. Navathe. </author> <title> Heterogeneous databases: Inferring relationships for merging component schemas, and a query language. </title> <type> Technical Report 048, </type> <institution> University of Florida, </institution> <month> December </month> <year> 1992. </year>
Reference: [131] <author> Jian Yang, Mike P. Papazoglou, and Louis Marinos. </author> <title> Knowledge-based schema analysis in a multi-database framework. </title> <editor> In D. Karagiannis, editor, </editor> <booktitle> Database and Expert Systems Applications: Proceedings of the International Conference in Berlin, </booktitle> <pages> pages 315-320, </pages> <year> 1991. </year> <month> 159 </month>
Reference: [132] <author> S. Bing Yao, V. E. Waddle, and Barron C. Housel. </author> <title> View modeling and integration using the functional data model. </title> <journal> Transactions on Software Engineering, </journal> <volume> SZE-8(6):544-553, </volume> <month> November </month> <year> 1982. </year>
Reference: [133] <author> Roberto Zicari. </author> <title> A framework for schema updates in an objectoriented database system. </title> <booktitle> In Seventh International Conference On Data Engineering, </booktitle> <pages> pages 2-13. </pages> <publisher> IEEE, </publisher> <month> April </month> <year> 1991. </year>
References-found: 133

