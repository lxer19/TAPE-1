URL: http://www.eecs.umich.edu/~anica/papers/krdb97.ps
Refering-URL: http://www.eecs.umich.edu/~anica/
Root-URL: http://www.cs.umich.edu
Email: rundenst@cs.wpi.edu  amylee@eecs.umich.edu  anica@eecs.umich.edu  
Title: On Preserving Views In Evolving Environments  
Author: Elke A. Rundensteiner Amy J. Lee Anisoara Nica 
Address: Worcester, MA 01609  Ann Arbor, MI 48105  Ann Arbor, MI 48105  
Affiliation: Dept. of CS, WPI  Dept. of EECS, U of Mich.  Dept. of EECS, U of Mich.  
Abstract: The construction and maintenance of data warehouses (views) in large-scale environments composed of numerous distributed information sources (ISs) such as the WWW has received great attention recently. Such environments are plagued with continuously changing information because ISs tend to continuously evolve by modifying not only their content but also their query capabilities and interface and by joining or leaving the environment at any time. In this paper, we outline our position on issues related to the challenging new problem of how to adapt views in such evolving environments. We first present a taxonomy of view adaptation problems by describing the dimensions along which view adaptation problems can be classified. Based on this taxonomy, we identify a new view adaptation problem for view evolution in the context of ISs capability changes, which we call View Synchronization. We also outline the Evolvable View Environment (EVE) that we propose as framework for solving the view synchronization problem, along with our decisions concerning some of the key design issues surrounding EVE. fl This work was supported in part by the NSF RIA grant #IRI-9309076 and NSF NYI grant #IRI 94-57609. We would also like to thank our industrial sponsors, in particular, IBM and Informix. The copyright of this paper belongs to the papers authors. Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage. Proceedings of the 4th KRDB Workshop Athens, Greece, 30-August-1997 (F. Baader, M.A. Jeusfeld, W. Nutt, eds.) http://sunsite.informatik.rwth-aachen.de/Publications/CEUR-WS/Vol-8/ 
Abstract-found: 1
Intro-found: 1
Reference: [GJM96] <author> A. Gupta, H.V. Jagadish, </author> <title> and I.S. Mu-mick. Data Integration using Self-Maintainable Views. </title> <booktitle> International Conference on Extending Database Technology (EDBT), </booktitle> <year> 1996. </year>
Reference-contexts: We are also studying the application of this view technology to simulate schema changes instead of changing the base schema and thus affecting all users of the shared object-oriented database [RR95]. Gupta et al. <ref> [GJM96] </ref> and Mohania et al. [MD96] address the view redefinition problem. They study under which conditions this view update can take place without requiring access to base relations, i.e., the self-maintainability issue.
Reference: [GM95] <author> A. Gupta and I.S. Mumick. </author> <title> Maintenance of Materialized Views: Problems, Techniques, </title> <journal> and Applications. IEEE Data Engineering Bulletin, Special Issue on Materialized Views and Warehousing, </journal> <volume> 18(2) </volume> <pages> 3-19, </pages> <year> 1995. </year>
Reference-contexts: This taxonomy represents a suitable classification based on which we can define as well as differentiate between different view adaption problems, such as materialized view maintenance <ref> [GM95, Wid95] </ref>, view redefinition [GMR95, MD96], 1 These may include information such as their schemas, their query interfaces, as well as other services offered by the infor mation sources. E.A. Rundensteiner, A.J. Lee, A. Nica 13-1 etc. <p> the problem spaces depicted in Figure 2 are defined by a common view adaptability preference: maintaining the extent of the materialized view up-to-date as indicated on the Willingness to Adapt dimension. (a) The problem of materialized view maintenance after base relation updates is well studied in the database literature (see <ref> [GM95, Wid95] </ref> for an overview of problems and solutions). Its coordinates are marked by black squares in Figure 2. <p> Figures 5 and 6 depict the dimensions of the well known problem spaces: Materialized View Maintenance after base relation updates <ref> [GM95] </ref> and Materialized View Maintenance after view redefinition [MD96, GMR95]. after View Redefinition. E.A. Rundensteiner, A.J. Lee, A. <p> Their algorithms could potentially be applied to views in the context of our overall framework, once EVE has determined an acceptable view redefinition. Their results are thus complimentary to our work. Gupta et al. <ref> [GM95] </ref> identify the view mainte nance problems according to four dimensions (e.g., the amount of information used for view maintenance) that constitute the problem space, but do not treat IS capability changes which is one of the key dimensions driving our taxonomic development. <p> We bring forward a taxonomy of the view adaptation problems composed of four dimensions. We use our proposed taxonomy to classify and differentiate among different view adaptation problems, such as view redefinition and view maintenance <ref> [GM95, MD96, GMR95] </ref>. We also use it to define a new problem of view adaptation, which we call view synchronization, that corresponds to the process of adapting view definitions triggered by capability changes of ISs. We propose the Evolvable View Environment E.A. Rundensteiner, A.J. Lee, A.
Reference: [GMR95] <author> A. Gupta, I.S. Mumick, and K.A. Ross. </author> <title> Adapting Materialized Views after Redefinition. </title> <booktitle> In Proceedings ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 211-222, </pages> <year> 1995. </year>
Reference-contexts: This taxonomy represents a suitable classification based on which we can define as well as differentiate between different view adaption problems, such as materialized view maintenance [GM95, Wid95], view redefinition <ref> [GMR95, MD96] </ref>, 1 These may include information such as their schemas, their query interfaces, as well as other services offered by the infor mation sources. E.A. Rundensteiner, A.J. Lee, A. Nica 13-1 etc. <p> has no explicit changes apriori, (2) the IS changed its data extent, (3) the view user wants the view extent up-to-date, and (4) the IS did not pre serve its old data. (b) The problem of materialized view maintenance after view redefinition has been recently studied by Gupta et al. <ref> [GMR95] </ref> and by Mohania et al. [MD96]. Its coordinates are marked by triangles in Figure 2. <p> Figures 5 and 6 depict the dimensions of the well known problem spaces: Materialized View Maintenance after base relation updates [GM95] and Materialized View Maintenance after view redefinition <ref> [MD96, GMR95] </ref>. after View Redefinition. E.A. Rundensteiner, A.J. Lee, A. <p> We bring forward a taxonomy of the view adaptation problems composed of four dimensions. We use our proposed taxonomy to classify and differentiate among different view adaptation problems, such as view redefinition and view maintenance <ref> [GM95, MD96, GMR95] </ref>. We also use it to define a new problem of view adaptation, which we call view synchronization, that corresponds to the process of adapting view definitions triggered by capability changes of ISs. We propose the Evolvable View Environment E.A. Rundensteiner, A.J. Lee, A.
Reference: [KR96a] <author> H. A. Kuno and E. A. Rundensteiner. </author> <title> The MultiView OODB View System: Design and Implementation. </title> <editor> In Harold Ossher and William Harrison, editors, </editor> <booktitle> Theory and Practice of Object Systems (TAPOS), Special Issue on Subjectivity in Object-Oriented Systems. </booktitle> <publisher> John Wiley New York, </publisher> <year> 1996. </year>
Reference-contexts: In the MultiView project, we have investigated the design and implementation of object-oriented view technology in a centralized setting <ref> [Run92, KR96a, KR96b] </ref>. We are also studying the application of this view technology to simulate schema changes instead of changing the base schema and thus affecting all users of the shared object-oriented database [RR95]. Gupta et al. [GJM96] and Mohania et al. [MD96] address the view redefinition problem.
Reference: [KR96b] <author> H. A. Kuno and E. A. Rundensteiner. </author> <title> Using Object-Oriented Principles to Optimize Update Propagation to Materialized Views. </title> <booktitle> In IEEE International Conference on Data Engineering, </booktitle> <pages> pages 310-317, </pages> <year> 1996. </year>
Reference-contexts: In the MultiView project, we have investigated the design and implementation of object-oriented view technology in a centralized setting <ref> [Run92, KR96a, KR96b] </ref>. We are also studying the application of this view technology to simulate schema changes instead of changing the base schema and thus affecting all users of the shared object-oriented database [RR95]. Gupta et al. [GJM96] and Mohania et al. [MD96] address the view redefinition problem.
Reference: [LNR97] <author> A. J. Lee, A. Nica, and E. A. Runden-steiner. </author> <title> The EVE Framework: View Evolution in an Evolving Environment. </title> <type> Technical Report WPI-CS-TR-97-4, </type> <institution> Worces-ter Polytechnic Institute, Dept. of Computer Science, </institution> <year> 1997. </year>
Reference-contexts: We have designed a model for information source descriptions (MISD) <ref> [LNR97] </ref> that is capable of describing the content and capabilities of heterogeneous ISs, to be entered into the MKB. <p> an attribute must have a certain type (type integrity constraint), one relation can be meaningful joined with another relation if certain join constraints are satisfied (join constraint), a fragment of a relation is partially or completely contained in another fragment of some other relation (partial/complete information constraint), and so on <ref> [LNR97] </ref>. The IS descriptions collected in the MKB form an information pool that is critical in finding appropriate replacements for view components when view definitions become undefined (See Section 5) and for translating loosely-specified user requests into precise query plans [NR97]. Global Consistency Checking Across Sources. <p> content up-to-date after the view definition already had been changed by the view synchronizer. 5 Our Solution Approach to the View Synchronization Problem In this section, we give an overview of the key constituents of our EVE framework, while a complete description of the EVE solution can be found in <ref> [LNR97] </ref>. 5.1 Basics of the Evolvable-SQL View Defini tion Language (E-SQL) A novel principle of our approach is to explore the evolution of views based on preferences specified by its creator, such as (1) whether the view component is essential for the view to be useful to the view user E.A. <p> The format of the E-SQL view definition language is given in Figure 9. Next, we use one example to demonstrate the integrated usage of these evolution parameters, while a justification for the design of this language plus more examples can be found in <ref> [LNR97] </ref>. Example 1 Let's assume a large web-based travel agency has a promotion for its customers who travel to Asia by air. The travel agency is either going to send promotion letters to these customers or call them by phone. <p> = true); FlightRes F WHERE (C.Name = F.Passenger) ( = false) AND (F.Destination = 'Asia') ( = true) 5.2 Model of Information Source Description While ISs may be based on disparate data models, when registered ISs translate their IS schemas into one common model supported by the EVE system (see <ref> [NR96, LNR97] </ref>). We now introduce the model of information source descriptions (MISD) (for a full description of MISD, see [LNR97]) we use to specify the meta knowledge currently collected in the MKB of EVE. <p> We now introduce the model of information source descriptions (MISD) (for a full description of MISD, see <ref> [LNR97] </ref>) we use to specify the meta knowledge currently collected in the MKB of EVE. We summarize the name (first column) and the syntax (second column) of the different types of constraints collected in the MKB in Figure 10. In the following, we give some examples.
Reference: [LSK95] <author> A. Y. Levy, D. Srivastava, and T. Kirk. </author> <title> Data Model and Query Evaluation in Global Information Systems. </title> <journal> Journal of Intelligent Information Systems. </journal> <note> Special Issue on Networked Information Discovery and Retrieval, </note> <year> 1995. </year>
Reference-contexts: In the work of Levy et al. <ref> [LSK95] </ref>, external ISs are described relative to one unified world-view model. <p> The problem of view evolution, i.e., that the world view itself may evolve, is not handled in <ref> [LSK95] </ref>. Papakonstantinou et al. [PGMW95] pursue the goal of information gathering across multiple sources. Their proposed OEM language is traditional in the sense of being static, hence the view synchronization problem is not touched upon by their work.
Reference: [MD96] <author> M. Mohania and G. Dong. </author> <title> Algorithms for Adapting Materialized Views in Data Warehouses. </title> <booktitle> International Symposium on Cooperative Database Systems for Advanced Applications, </booktitle> <month> December </month> <year> 1996. </year>
Reference-contexts: This taxonomy represents a suitable classification based on which we can define as well as differentiate between different view adaption problems, such as materialized view maintenance [GM95, Wid95], view redefinition <ref> [GMR95, MD96] </ref>, 1 These may include information such as their schemas, their query interfaces, as well as other services offered by the infor mation sources. E.A. Rundensteiner, A.J. Lee, A. Nica 13-1 etc. <p> the IS changed its data extent, (3) the view user wants the view extent up-to-date, and (4) the IS did not pre serve its old data. (b) The problem of materialized view maintenance after view redefinition has been recently studied by Gupta et al. [GMR95] and by Mohania et al. <ref> [MD96] </ref>. Its coordinates are marked by triangles in Figure 2. <p> Figures 5 and 6 depict the dimensions of the well known problem spaces: Materialized View Maintenance after base relation updates [GM95] and Materialized View Maintenance after view redefinition <ref> [MD96, GMR95] </ref>. after View Redefinition. E.A. Rundensteiner, A.J. Lee, A. <p> We are also studying the application of this view technology to simulate schema changes instead of changing the base schema and thus affecting all users of the shared object-oriented database [RR95]. Gupta et al. [GJM96] and Mohania et al. <ref> [MD96] </ref> address the view redefinition problem. They study under which conditions this view update can take place without requiring access to base relations, i.e., the self-maintainability issue. Their algorithms could potentially be applied to views in the context of our overall framework, once EVE has determined an acceptable view redefinition. <p> We bring forward a taxonomy of the view adaptation problems composed of four dimensions. We use our proposed taxonomy to classify and differentiate among different view adaptation problems, such as view redefinition and view maintenance <ref> [GM95, MD96, GMR95] </ref>. We also use it to define a new problem of view adaptation, which we call view synchronization, that corresponds to the process of adapting view definitions triggered by capability changes of ISs. We propose the Evolvable View Environment E.A. Rundensteiner, A.J. Lee, A.
Reference: [NLR97] <author> A. Nica, A.J. Lee, and E. A. Runden-steiner. </author> <title> View Synchronization with Complex Substitution Algorithms. </title> <type> Technical Report WPI-CS-TR-97-6, </type> <institution> Worcester Polytechnic Institute, Dept. of Computer Science, </institution> <month> July, </month> <year> 1997. </year>
Reference-contexts: In our framework, each IS will via the ISI interface notify the MKB of any such capability changes so that they can be properly registered in the MKB. The MKB Evolver module will then take appropriate actions to update the MKB <ref> [NLR97] </ref>. For example, deleting of an attribute A from a relation S may cause the MKB evolver to modify a subset constraint between two relations S and R, e.g., "S R", into a simpler constraint "S (project all attributes of R besides A from R)". <p> View Synchronization. We are applying query planning algorithms, such as the DIIM planner [NR97], to solve the view synchronization problem. (For more details see Section 5). We are continuing to investigate different reasoning techniques to determine progressively more complex means of preserving as much as possible the initial view <ref> [NLR97] </ref>. View Maintenance. <p> In Figure 11, we present a flow chart of our view synchronization algorithm for the case when the capability change is delete-attribute (see <ref> [NLR97] </ref> for other view synchronization algorithms).
Reference: [NR96] <author> A. Nica and E. A. Rundensteiner. </author> <title> The Dynamic Information Integration Model. </title> <type> Technical report, </type> <institution> University of Michigan, Ann Arbor, EECS Dept. CSE Division, </institution> <year> 1996. </year>
Reference-contexts: = true); FlightRes F WHERE (C.Name = F.Passenger) ( = false) AND (F.Destination = 'Asia') ( = true) 5.2 Model of Information Source Description While ISs may be based on disparate data models, when registered ISs translate their IS schemas into one common model supported by the EVE system (see <ref> [NR96, LNR97] </ref>). We now introduce the model of information source descriptions (MISD) (for a full description of MISD, see [LNR97]) we use to specify the meta knowledge currently collected in the MKB of EVE.
Reference: [NR97] <author> A. Nica and E. A. Rundensteiner. </author> <title> On Translating Loosely-Specified Queries into Executable Plans in Large-Scale Information Systems. </title> <booktitle> In Proceedings of Second IFCIS International Conference on Cooperative Information Systems (CoopIS'97), </booktitle> <pages> pages 213-222, </pages> <month> June </month> <year> 1997. </year>
Reference-contexts: The IS descriptions collected in the MKB form an information pool that is critical in finding appropriate replacements for view components when view definitions become undefined (See Section 5) and for translating loosely-specified user requests into precise query plans <ref> [NR97] </ref>. Global Consistency Checking Across Sources. There are two types of inconsistencies (related to meta knowledge) in EVE. <p> An adequate language must thus support query specifications ranging from a vague ontology-based information request <ref> [NR97] </ref> to a precisely elaborated query specification that details what piece of information is to be retrieved from which particular IS (as assumed in OEM by Papakonstanti-nou et al. [PGMW95]). We have designed the DIIM query language [NR97] so to be able to handle this wide range. Query Planning. <p> language must thus support query specifications ranging from a vague ontology-based information request <ref> [NR97] </ref> to a precisely elaborated query specification that details what piece of information is to be retrieved from which particular IS (as assumed in OEM by Papakonstanti-nou et al. [PGMW95]). We have designed the DIIM query language [NR97] so to be able to handle this wide range. Query Planning. Our system incorporates algorithms for mediating between the requests for information (e.g., a view definition) and the actual information supply available in ISs as characterized in our MKB. <p> In particular, we have developed the DIIM query planner that refines a loosely-specified user query into a precise query that meets all constraints expressed in the MKB and is executable within the environment <ref> [NR97] </ref>. Our proposed query semantics define a natural way of refining a vague query by rewriting it into a more restricted query that is consistent with both IS descriptions and the original query definition. <p> In the default case when only natural joins are defined in the IS descriptions in the MKB we have shown that the semantics of these two concepts (connected rules and full disjunction) are equivalent <ref> [NR97] </ref>. View Synchronization. We are applying query planning algorithms, such as the DIIM planner [NR97], to solve the view synchronization problem. (For more details see Section 5). <p> In the default case when only natural joins are defined in the IS descriptions in the MKB we have shown that the semantics of these two concepts (connected rules and full disjunction) are equivalent <ref> [NR97] </ref>. View Synchronization. We are applying query planning algorithms, such as the DIIM planner [NR97], to solve the view synchronization problem. (For more details see Section 5). We are continuing to investigate different reasoning techniques to determine progressively more complex means of preserving as much as possible the initial view [NLR97]. View Maintenance. <p> Papakonstantinou et al. [PGMW95] pursue the goal of information gathering across multiple sources. Their proposed OEM language is traditional in the sense of being static, hence the view synchronization problem is not touched upon by their work. In the University of Michigan Digital Library project <ref> [NR97] </ref>, we have proposed the Dynamic Information Integration Model (DIIM) to allow ISs to dynamically participate in an information integration system.
Reference: [PGMW95] <author> Y. Papakonstantinou, H. Garcia-Molina, and J. Widom. </author> <title> Object Exchange Across Heterogeneous Information Sources. </title> <booktitle> IEEE International Conference on Data Engineering, </booktitle> <pages> pages 251-260, </pages> <month> March </month> <year> 1995. </year>
Reference-contexts: An adequate language must thus support query specifications ranging from a vague ontology-based information request [NR97] to a precisely elaborated query specification that details what piece of information is to be retrieved from which particular IS (as assumed in OEM by Papakonstanti-nou et al. <ref> [PGMW95] </ref>). We have designed the DIIM query language [NR97] so to be able to handle this wide range. Query Planning. Our system incorporates algorithms for mediating between the requests for information (e.g., a view definition) and the actual information supply available in ISs as characterized in our MKB. <p> The problem of view evolution, i.e., that the world view itself may evolve, is not handled in [LSK95]. Papakonstantinou et al. <ref> [PGMW95] </ref> pursue the goal of information gathering across multiple sources. Their proposed OEM language is traditional in the sense of being static, hence the view synchronization problem is not touched upon by their work.
Reference: [RR95] <author> Y. G. Ra and E. A. </author> <note> Rundensteiner. </note>
Reference-contexts: We are also studying the application of this view technology to simulate schema changes instead of changing the base schema and thus affecting all users of the shared object-oriented database <ref> [RR95] </ref>. Gupta et al. [GJM96] and Mohania et al. [MD96] address the view redefinition problem. They study under which conditions this view update can take place without requiring access to base relations, i.e., the self-maintainability issue.
References-found: 13

