URL: http://www.iro.umontreal.ca/~lecuyer/myftp/papers/mcqmc96.ps
Refering-URL: http://www.iro.umontreal.ca/~lecuyer/papers.html
Root-URL: http://www.iro.umontreal.ca
Title: Random Number Generators and Empirical Tests  
Author: Pierre L'Ecuyer 
Note: This is page 1 Printer: Opaque this  
Abstract: We recall some requirements for "good" random number generators and argue that while the construction of generators and the choice of their parameters must be based on theory, a posteriori empirical testing is also important. We then give examples of tests failed by some popular generators and examples of generators passing these tests. 
Abstract-found: 1
Intro-found: 1
Reference: [BBS86] <author> L. Blum, M. Blum, and M. Schub. </author> <title> A simple unpredictable pseudo-random number generator. </title> <journal> SIAM Journal on Computing, </journal> <volume> 15(2) </volume> <pages> 364-383, </pages> <year> 1986. </year>
Reference-contexts: This computational complexity setup is well-known in the area of cryptology, where unpredictability is a key issue. For more details, see, e.g., <ref> [BBS86, Lag93, LP89] </ref>. The idea is that statistical tests not running in polynomial time "quickly" become too long to apply, as b gets large enough, even with the fastest computers. So, polynomial-time perfect generators provably pass (essentially) all statistical tests when their size is large enough. <p> Moreover, there are generator families conjectured to be polynomial-time perfect, but none has been proved to be so. In fact, nobody knows for sure whether or not such a family exists. A nice instance is the BBS generator, introduced by Blum, Blum, and Shub <ref> [BBS86, LP89] </ref>, which is proved polynomial-time perfect under the (unproven) assumption that factoring the product of two (unknown) b-bit random primes cannot be done in polynomial time in b.
Reference: [BFS87] <author> P. Bratley, B. L. Fox, and L. E. </author> <title> Schrage. A Guide to Simulation. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <note> second edition, 1987. This is page 13 Printer: Opaque this </note>
Reference-contexts: List of selected generators. G1. LCG with m = 2 31 1 and a = 742938285 (see [FM86]). G2. LCG with m = 2 31 1 and a = 630360016 (see [LK91]). G3. LCG with m = 2 31 1 and a = 16807 (see <ref> [BFS87, LK91] </ref>). G4. LCG with m = 2 32 , a = 69069, and c = 1 (see [LK91, Rip90]). G5. LCG with m = 2 31 and a = 65539 (RANDU, see [LK91]). G6. LCG with m = 2 31 and a = 452807053 (see [DvdMST95]). G7.
Reference: [Com91] <author> A. Compagner. </author> <title> The hierarchy of correlations in random binary sequences. </title> <journal> Journal of Statistical Physics, </journal> <volume> 63 </volume> <pages> 883-896, </pages> <year> 1991. </year>
Reference-contexts: If this holds for all t up to some reasonably large value t 0 and if ae is large enough, then the vectors U n should behave pretty much as independent random points in the unit hypercube. This is similar to the "scanning ensemble" framework described by Compagner <ref> [Com91, Com95] </ref>. The above super-uniformity requirements provide precise theoretical guidelines for constructing specific generators. Their application, in turn, implies a thorough theoretical understanding of the equidistribution properties of the generators.
Reference: [Com95] <author> A. Compagner. </author> <title> Operational conditions for random number generation. </title> <journal> Physical Review E, </journal> <volume> 52(5-B):5634-5645, </volume> <year> 1995. </year>
Reference-contexts: If this holds for all t up to some reasonably large value t 0 and if ae is large enough, then the vectors U n should behave pretty much as independent random points in the unit hypercube. This is similar to the "scanning ensemble" framework described by Compagner <ref> [Com91, Com95] </ref>. The above super-uniformity requirements provide precise theoretical guidelines for constructing specific generators. Their application, in turn, implies a thorough theoretical understanding of the equidistribution properties of the generators.
Reference: [Dur73] <author> J. </author> <title> Durbin. Distribution Theory for Tests Based on the Sample Distribution Function, </title> <booktitle> volume 9 of SIAM CBMS-NSF Regional Conference Series in Applied Mathematics. </booktitle> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1973. </year>
Reference-contexts: Then, compare this empirical distribution to the theoretical distribution of T under H 0 , say F . This comparison can be done by a standard goodness-of-fit test, such as those of Kolmogorov-Smirnov (KS), Anderson-Darling, etc. <ref> [Dur73, Knu81, Ste86a] </ref>. The KS test computes the KS statistics D + 0u1 D 0u1 This is page 6 Printer: Opaque this TABLE 1.1. <p> The distribution functions of D + N under H 0 can be computed as explained in <ref> [Dur73] </ref>, assuming that F is continuous. Under H 0 , ffi + and ffi are (correlated) U (0; 1) random variables. One rejects H 0 if ffi + or ffi is far too close to 0 or 1.
Reference: [DvdMST95] <author> E. J. Dudewicz, E. C. van der Meulen, M. G. SriRam, and N. K. W. Teoh. </author> <title> Entropy-based random number evaluation. </title> <journal> American Journal of Mathematical and Management Sciences, </journal> <volume> 15 </volume> <pages> 115-153, </pages> <year> 1995. </year>
Reference-contexts: G4. LCG with m = 2 32 , a = 69069, and c = 1 (see [LK91, Rip90]). G5. LCG with m = 2 31 and a = 65539 (RANDU, see [LK91]). G6. LCG with m = 2 31 and a = 452807053 (see <ref> [DvdMST95] </ref>). G7. LCG with m = 2 31 , a = 1103515245, c = 12345 (see [Pla92]). G8. Implicit inv. with m = 2 31 1, a 1 = a 2 = 1 (see [Eic92]). G9.
Reference: [EG92] <author> J. Eichenauer-Herrmann and H. Grothe. </author> <title> A new inversive congruential pseudorandom number generator with power of two modulus. </title> <journal> ACM Transactions on Modeling and Computer Simulation, </journal> <volume> 2(1) </volume> <pages> 1-11, </pages> <year> 1992. </year>
Reference-contexts: G9. Explicit inv. with m = 2 31 1, a = b = 1 (see [Eic92, Hel95]). G10. Implicit inv. with m = 2 32 , a = b = 1, z 0 = 5 (see <ref> [EG92] </ref>). G11. Explicit inv. of [EI94] with m = 2 32 , a = 6, b = 1. G12. Modified explicit inv. of [Eic96] with m = 2 32 , a = 6, b = 1. G13. Combined LCG in Fig. 3 of [L'E88]. G14.
Reference: [EI94] <author> J. Eichenauer-Herrmann and K. Ickstadt. </author> <title> Explicit inversive congruential pseudorandom numbers with power of two modulus. </title> <journal> Mathematics of Computation, </journal> <volume> 62(206) </volume> <pages> 787-797, </pages> <year> 1994. </year>
Reference-contexts: G9. Explicit inv. with m = 2 31 1, a = b = 1 (see [Eic92, Hel95]). G10. Implicit inv. with m = 2 32 , a = b = 1, z 0 = 5 (see [EG92]). G11. Explicit inv. of <ref> [EI94] </ref> with m = 2 32 , a = 6, b = 1. G12. Modified explicit inv. of [Eic96] with m = 2 32 , a = 6, b = 1. G13. Combined LCG in Fig. 3 of [L'E88]. G14.
Reference: [Eic92] <author> J. Eichenauer-Herrmann. </author> <title> Inversive congruential pseudorandom numbers: A tutorial. </title> <journal> International Statistical Reviews, </journal> <volume> 60 </volume> <pages> 167-176, </pages> <year> 1992. </year>
Reference-contexts: G6. LCG with m = 2 31 and a = 452807053 (see [DvdMST95]). G7. LCG with m = 2 31 , a = 1103515245, c = 12345 (see [Pla92]). G8. Implicit inv. with m = 2 31 1, a 1 = a 2 = 1 (see <ref> [Eic92] </ref>). G9. Explicit inv. with m = 2 31 1, a = b = 1 (see [Eic92, Hel95]). G10. Implicit inv. with m = 2 32 , a = b = 1, z 0 = 5 (see [EG92]). G11. <p> G7. LCG with m = 2 31 , a = 1103515245, c = 12345 (see [Pla92]). G8. Implicit inv. with m = 2 31 1, a 1 = a 2 = 1 (see [Eic92]). G9. Explicit inv. with m = 2 31 1, a = b = 1 (see <ref> [Eic92, Hel95] </ref>). G10. Implicit inv. with m = 2 32 , a = b = 1, z 0 = 5 (see [EG92]). G11. Explicit inv. of [EI94] with m = 2 32 , a = 6, b = 1. G12.
Reference: [Eic96] <author> J. Eichenauer-Herrmann. </author> <title> Modified explicit inversive congru-ential pseudorandom numbers with power-of-two modulus. </title> <journal> Statistics and Computing, </journal> <volume> 6 </volume> <pages> 31-36, </pages> <year> 1996. </year>
Reference-contexts: G10. Implicit inv. with m = 2 32 , a = b = 1, z 0 = 5 (see [EG92]). G11. Explicit inv. of [EI94] with m = 2 32 , a = 6, b = 1. G12. Modified explicit inv. of <ref> [Eic96] </ref> with m = 2 32 , a = 6, b = 1. G13. Combined LCG in Fig. 3 of [L'E88]. G14.
Reference: [FM86] <author> G. S. Fishman and L. S. Moore III. </author> <title> An exhaustive analysis of multiplicative congruential random number generators with modulus 2 31 1. </title> <journal> SIAM Journal on Scientific and Statistical Computing, </journal> <volume> 7(1) </volume> <pages> 24-45, </pages> <year> 1986. </year>
Reference-contexts: The overlapping entropy correlation test computes the sample correlation between the pairs (S i ; S i+1 ) and tests for significance. This is page 10 Printer: Opaque this TABLE 1.2. List of selected generators. G1. LCG with m = 2 31 1 and a = 742938285 (see <ref> [FM86] </ref>). G2. LCG with m = 2 31 1 and a = 630360016 (see [LK91]). G3. LCG with m = 2 31 1 and a = 16807 (see [BFS87, LK91]). G4. LCG with m = 2 32 , a = 69069, and c = 1 (see [LK91, Rip90]). G5.
Reference: [Hel95] <author> P. Hellekalek. </author> <title> Inversive pseudorandom number generators: Concepts, results, and links. </title> <editor> In C. Alexopoulos, K. Kang, W. R. Lilegdon, and D. Goldsman, editors, </editor> <booktitle> Proceedings of the 1995 Winter Simulation Conference, </booktitle> <pages> pages 255-262. </pages> <publisher> IEEE Press, </publisher> <year> 1995. </year>
Reference-contexts: G7. LCG with m = 2 31 , a = 1103515245, c = 12345 (see [Pla92]). G8. Implicit inv. with m = 2 31 1, a 1 = a 2 = 1 (see [Eic92]). G9. Explicit inv. with m = 2 31 1, a = b = 1 (see <ref> [Eic92, Hel95] </ref>). G10. Implicit inv. with m = 2 32 , a = b = 1, z 0 = 5 (see [EG92]). G11. Explicit inv. of [EI94] with m = 2 32 , a = 6, b = 1. G12.
Reference: [Knu81] <author> D. E. Knuth. </author> <booktitle> The Art of Computer Programming, Volume 2: Seminumerical Algorithms. </booktitle> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <note> second edition, 1981. This is page 14 Printer: Opaque this </note>
Reference-contexts: Their application, in turn, implies a thorough theoretical understanding of the equidistribution properties of the generators. Theoretical analysis is crucial for the design of good generators and has been the subject of several books and papers; see, e.g., <ref> [Knu81, L'E94, L'E97, Nie92] </ref> and other references given there. For generators based on linear recurrences, for example, this is often achieved by analyzing the underlying lattice structure (sometimes called the "spectral test"). Generators with well-understood structural properties may appear less random, but the less understood ones could hide worse defects. <p> Then, compare this empirical distribution to the theoretical distribution of T under H 0 , say F . This comparison can be done by a standard goodness-of-fit test, such as those of Kolmogorov-Smirnov (KS), Anderson-Darling, etc. <ref> [Dur73, Knu81, Ste86a] </ref>. The KS test computes the KS statistics D + 0u1 D 0u1 This is page 6 Printer: Opaque this TABLE 1.1. <p> This also provides confidence intervals (using the KS distribution). This is what we did here, using different types of "robust" generators, such as G14 in Section 6, and the results agreed well across the different generators. This is page 7 Printer: Opaque this Knuth <ref> [Knu81] </ref> describes a "classical" set of tests. Marsaglia [Mar85, Mar96] proposes a more recent battery, called DIEHARD. Some of these tests are more "stringent" than the classical ones, in the sense that more popular generators tend to fail them. <p> We also applied the m-nearest-pairs test with the same parameters and m = 10. We just summarize the results here. For more details and more refined versions of these tests, see [LCS96]. Because of their well-known regular lattice structure <ref> [Knu81, L'E94, Rip87] </ref>, we expected the LCGs G1 to G7 to fail the nearest-pair tests and they all did, spectacularly. Most of them passed the tests with n = 10000, This is page 11 Printer: Opaque this TABLE 1.3.
Reference: [Lag93] <author> J. C. Lagarias. </author> <title> Pseudorandom numbers. </title> <journal> Statistical Science, </journal> <volume> 8(1) </volume> <pages> 31-39, </pages> <year> 1993. </year>
Reference-contexts: This computational complexity setup is well-known in the area of cryptology, where unpredictability is a key issue. For more details, see, e.g., <ref> [BBS86, Lag93, LP89] </ref>. The idea is that statistical tests not running in polynomial time "quickly" become too long to apply, as b gets large enough, even with the fastest computers. So, polynomial-time perfect generators provably pass (essentially) all statistical tests when their size is large enough.
Reference: [LCC96] <author> P. L'Ecuyer, A. Compagner, and J.-F. Cordeau. </author> <title> Entropy-based tests for random number generators. </title> <note> Submitted. Also GERAD technical report number G-96-41, </note> <year> 1996. </year>
Reference-contexts: Section 3 also discusses how to do this. Sections 4 and 5 describe two specific classes of tests, based on close points in space and on discrete entropy, respectively. They summarize the content of the two papers <ref> [LCS96, LCC96] </ref>. Section 6 gives the results of a set of tests applied to a set of previously proposed generators. This is mainly to illustrate what the tests can do, and not to recommend any specific generator. <p> Marsaglia [Mar85, Mar96] proposes a more recent battery, called DIEHARD. Some of these tests are more "stringent" than the classical ones, in the sense that more popular generators tend to fail them. References to other statistical tests can be found, for instance, in <ref> [L'E92, L'E94, LCS96, LCC96, L'E96b, LW97, Ste86b] </ref>. Another extensive testing package called TestU01 [L'E96b], still under development, implements most of the tests proposed so far, as well as several classes of generators implemented in generic form. <p> The next two sections describe two classes of statistical tests implemented in [L'E96b], but not belonging to earlier packages. Further details on these tests can be found in <ref> [LCS96, LCC96] </ref>. 4 Tests based on close points Suppose we generate n points U i = (U i ; : : : ; U i+k1 ), i = k; 2k; 3k; : : :, in the k-dimensional hypercube [0; 1) k . <p> Under H 0 , we can obtain expressions for the exact mean and variance of ^ H d (C; n), and we also know that S i converges to a N (0; 1) as n ! 1 and C ! 1 simultaneously, while n=C converges to some positive constant (see <ref> [LCC96] </ref>). This justifies the discrete entropy distribution test, which compares the empirical distribution of the S i to the N (0; 1). Of course, the quality of the normal approximation is an issue. <p> In fact, we tried changing the parameter b of G9 to some arbitrary values larger than 10 5 , and it passed the tests in all cases. Further discussion and results of entropy tests can be found in <ref> [LCC96] </ref>. 7 Conclusion Random number generators should be designed based on sound theoretical analysis, and then be tested empirically. The author believes that generators which fail simple tests such as the ones presented in this paper should be discarded.
Reference: [LCS96] <author> P. L'Ecuyer, J.-F. Cordeau, and R. Simard. </author> <title> Close-neighbor tests for random number generators. </title> <note> In preparation, </note> <year> 1996. </year>
Reference-contexts: Section 3 also discusses how to do this. Sections 4 and 5 describe two specific classes of tests, based on close points in space and on discrete entropy, respectively. They summarize the content of the two papers <ref> [LCS96, LCC96] </ref>. Section 6 gives the results of a set of tests applied to a set of previously proposed generators. This is mainly to illustrate what the tests can do, and not to recommend any specific generator. <p> Marsaglia [Mar85, Mar96] proposes a more recent battery, called DIEHARD. Some of these tests are more "stringent" than the classical ones, in the sense that more popular generators tend to fail them. References to other statistical tests can be found, for instance, in <ref> [L'E92, L'E94, LCS96, LCC96, L'E96b, LW97, Ste86b] </ref>. Another extensive testing package called TestU01 [L'E96b], still under development, implements most of the tests proposed so far, as well as several classes of generators implemented in generic form. <p> The next two sections describe two classes of statistical tests implemented in [L'E96b], but not belonging to earlier packages. Further details on these tests can be found in <ref> [LCS96, LCC96] </ref>. 4 Tests based on close points Suppose we generate n points U i = (U i ; : : : ; U i+k1 ), i = k; 2k; 3k; : : :, in the k-dimensional hypercube [0; 1) k . <p> The next proposition characterizes the stochastic process Y n . For the proof and more details, see <ref> [LCS96, RS78, SB78, Rip87] </ref>. Proposition 1 Under H 0 , for each t 1 &gt; 0, as n ! 1, the process fY n (t); 0 t t 1 g converges weakly to a Poisson process with unit rate. <p> We also applied the m-nearest-pairs test with the same parameters and m = 10. We just summarize the results here. For more details and more refined versions of these tests, see <ref> [LCS96] </ref>. Because of their well-known regular lattice structure [Knu81, L'E94, Rip87], we expected the LCGs G1 to G7 to fail the nearest-pair tests and they all did, spectacularly. Most of them passed the tests with n = 10000, This is page 11 Printer: Opaque this TABLE 1.3.
Reference: [L'E88] <author> P. L'Ecuyer. </author> <title> Efficient and portable combined random number generators. </title> <journal> Communications of the ACM, </journal> <note> 31(6) 742-749 and 774, 1988. See also the correspondence in the same journal, 32, 8 (1989) 1019-1024. </note>
Reference-contexts: G11. Explicit inv. of [EI94] with m = 2 32 , a = 6, b = 1. G12. Modified explicit inv. of [Eic96] with m = 2 32 , a = 6, b = 1. G13. Combined LCG in Fig. 3 of <ref> [L'E88] </ref>. G14. Combined MRG in Fig. 1 of [L'E96a]. 6 Some test results We selected an arbitrary set of generators previously proposed or widely used, and applied to them some instances of the tests described in the previous sections.
Reference: [L'E92] <author> P. L'Ecuyer. </author> <title> Testing random number generators. </title> <booktitle> In Proceedings of the 1992 Winter Simulation Conference, </booktitle> <pages> pages 305-313. </pages> <publisher> IEEE Press, </publisher> <month> Dec </month> <year> 1992. </year>
Reference-contexts: Marsaglia [Mar85, Mar96] proposes a more recent battery, called DIEHARD. Some of these tests are more "stringent" than the classical ones, in the sense that more popular generators tend to fail them. References to other statistical tests can be found, for instance, in <ref> [L'E92, L'E94, LCS96, LCC96, L'E96b, LW97, Ste86b] </ref>. Another extensive testing package called TestU01 [L'E96b], still under development, implements most of the tests proposed so far, as well as several classes of generators implemented in generic form.
Reference: [L'E94] <author> P. L'Ecuyer. </author> <title> Uniform random number generation. </title> <journal> Annals of Operations Research, </journal> <volume> 53 </volume> <pages> 77-120, </pages> <year> 1994. </year>
Reference-contexts: Their application, in turn, implies a thorough theoretical understanding of the equidistribution properties of the generators. Theoretical analysis is crucial for the design of good generators and has been the subject of several books and papers; see, e.g., <ref> [Knu81, L'E94, L'E97, Nie92] </ref> and other references given there. For generators based on linear recurrences, for example, this is often achieved by analyzing the underlying lattice structure (sometimes called the "spectral test"). Generators with well-understood structural properties may appear less random, but the less understood ones could hide worse defects. <p> This is what we discuss in the next section. Good theoretical and statistical behavior are not the only desired properties. Speed, low memory usage, ease of implementation, and fast jump-ahead capabilities for splitting, are among the other major requirements; see <ref> [L'E94, L'E97] </ref> for further details. 3 Empirical statistical tests Empirical tests view a generator as a black box and compute certain statistics from part of its output sequence in order to catch up significant defects. <p> Marsaglia [Mar85, Mar96] proposes a more recent battery, called DIEHARD. Some of these tests are more "stringent" than the classical ones, in the sense that more popular generators tend to fail them. References to other statistical tests can be found, for instance, in <ref> [L'E92, L'E94, LCS96, LCC96, L'E96b, LW97, Ste86b] </ref>. Another extensive testing package called TestU01 [L'E96b], still under development, implements most of the tests proposed so far, as well as several classes of generators implemented in generic form. <p> We also applied the m-nearest-pairs test with the same parameters and m = 10. We just summarize the results here. For more details and more refined versions of these tests, see [LCS96]. Because of their well-known regular lattice structure <ref> [Knu81, L'E94, Rip87] </ref>, we expected the LCGs G1 to G7 to fail the nearest-pair tests and they all did, spectacularly. Most of them passed the tests with n = 10000, This is page 11 Printer: Opaque this TABLE 1.3.
Reference: [L'E96a] <author> P. L'Ecuyer. </author> <title> Combined multiple recursive generators. </title> <journal> Operations Research, </journal> <volume> 44(5) </volume> <pages> 816-822, </pages> <year> 1996. </year>
Reference-contexts: Explicit inv. of [EI94] with m = 2 32 , a = 6, b = 1. G12. Modified explicit inv. of [Eic96] with m = 2 32 , a = 6, b = 1. G13. Combined LCG in Fig. 3 of [L'E88]. G14. Combined MRG in Fig. 1 of <ref> [L'E96a] </ref>. 6 Some test results We selected an arbitrary set of generators previously proposed or widely used, and applied to them some instances of the tests described in the previous sections.
Reference: [L'E96b] <author> P. L'Ecuyer. TestU01: </author> <title> Un logiciel pour appliquer des tests statistiques a des generateurs de valeurs aleatoires. </title> <note> In preparation, </note> <year> 1996. </year>
Reference-contexts: Marsaglia [Mar85, Mar96] proposes a more recent battery, called DIEHARD. Some of these tests are more "stringent" than the classical ones, in the sense that more popular generators tend to fail them. References to other statistical tests can be found, for instance, in <ref> [L'E92, L'E94, LCS96, LCC96, L'E96b, LW97, Ste86b] </ref>. Another extensive testing package called TestU01 [L'E96b], still under development, implements most of the tests proposed so far, as well as several classes of generators implemented in generic form. <p> Some of these tests are more "stringent" than the classical ones, in the sense that more popular generators tend to fail them. References to other statistical tests can be found, for instance, in [L'E92, L'E94, LCS96, LCC96, L'E96b, LW97, Ste86b]. Another extensive testing package called TestU01 <ref> [L'E96b] </ref>, still under development, implements most of the tests proposed so far, as well as several classes of generators implemented in generic form. The next two sections describe two classes of statistical tests implemented in [L'E96b], but not belonging to earlier packages. <p> Another extensive testing package called TestU01 <ref> [L'E96b] </ref>, still under development, implements most of the tests proposed so far, as well as several classes of generators implemented in generic form. The next two sections describe two classes of statistical tests implemented in [L'E96b], but not belonging to earlier packages.
Reference: [L'E97] <author> P. L'Ecuyer. </author> <title> Random number generation. In Jerry Banks, editor, Handbook on Simulation. </title> <publisher> Wiley, </publisher> <year> 1997. </year> <note> To appear. Also GERAD technical report number G-96-38. </note>
Reference-contexts: Their application, in turn, implies a thorough theoretical understanding of the equidistribution properties of the generators. Theoretical analysis is crucial for the design of good generators and has been the subject of several books and papers; see, e.g., <ref> [Knu81, L'E94, L'E97, Nie92] </ref> and other references given there. For generators based on linear recurrences, for example, this is often achieved by analyzing the underlying lattice structure (sometimes called the "spectral test"). Generators with well-understood structural properties may appear less random, but the less understood ones could hide worse defects. <p> This is what we discuss in the next section. Good theoretical and statistical behavior are not the only desired properties. Speed, low memory usage, ease of implementation, and fast jump-ahead capabilities for splitting, are among the other major requirements; see <ref> [L'E94, L'E97] </ref> for further details. 3 Empirical statistical tests Empirical tests view a generator as a black box and compute certain statistics from part of its output sequence in order to catch up significant defects.
Reference: [LK91] <author> A. M. Law and W. D. </author> <title> Kelton. Simulation Modeling and Analysis. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <note> second edition, </note> <year> 1991. </year>
Reference-contexts: This is page 10 Printer: Opaque this TABLE 1.2. List of selected generators. G1. LCG with m = 2 31 1 and a = 742938285 (see [FM86]). G2. LCG with m = 2 31 1 and a = 630360016 (see <ref> [LK91] </ref>). G3. LCG with m = 2 31 1 and a = 16807 (see [BFS87, LK91]). G4. LCG with m = 2 32 , a = 69069, and c = 1 (see [LK91, Rip90]). G5. LCG with m = 2 31 and a = 65539 (RANDU, see [LK91]). G6. <p> List of selected generators. G1. LCG with m = 2 31 1 and a = 742938285 (see [FM86]). G2. LCG with m = 2 31 1 and a = 630360016 (see [LK91]). G3. LCG with m = 2 31 1 and a = 16807 (see <ref> [BFS87, LK91] </ref>). G4. LCG with m = 2 32 , a = 69069, and c = 1 (see [LK91, Rip90]). G5. LCG with m = 2 31 and a = 65539 (RANDU, see [LK91]). G6. LCG with m = 2 31 and a = 452807053 (see [DvdMST95]). G7. <p> G2. LCG with m = 2 31 1 and a = 630360016 (see [LK91]). G3. LCG with m = 2 31 1 and a = 16807 (see [BFS87, LK91]). G4. LCG with m = 2 32 , a = 69069, and c = 1 (see <ref> [LK91, Rip90] </ref>). G5. LCG with m = 2 31 and a = 65539 (RANDU, see [LK91]). G6. LCG with m = 2 31 and a = 452807053 (see [DvdMST95]). G7. LCG with m = 2 31 , a = 1103515245, c = 12345 (see [Pla92]). G8. <p> = 630360016 (see <ref> [LK91] </ref>). G3. LCG with m = 2 31 1 and a = 16807 (see [BFS87, LK91]). G4. LCG with m = 2 32 , a = 69069, and c = 1 (see [LK91, Rip90]). G5. LCG with m = 2 31 and a = 65539 (RANDU, see [LK91]). G6. LCG with m = 2 31 and a = 452807053 (see [DvdMST95]). G7. LCG with m = 2 31 , a = 1103515245, c = 12345 (see [Pla92]). G8. Implicit inv. with m = 2 31 1, a 1 = a 2 = 1 (see [Eic92]). G9.
Reference: [LP89] <author> P. L'Ecuyer and R. Proulx. </author> <title> About polynomial-time "unpredictable" generators. </title> <booktitle> In Proceedings of the 1989 Winter Simulation Conference, </booktitle> <pages> pages 467-476. </pages> <publisher> IEEE Press, </publisher> <month> Dec </month> <year> 1989. </year>
Reference-contexts: This computational complexity setup is well-known in the area of cryptology, where unpredictability is a key issue. For more details, see, e.g., <ref> [BBS86, Lag93, LP89] </ref>. The idea is that statistical tests not running in polynomial time "quickly" become too long to apply, as b gets large enough, even with the fastest computers. So, polynomial-time perfect generators provably pass (essentially) all statistical tests when their size is large enough. <p> Moreover, there are generator families conjectured to be polynomial-time perfect, but none has been proved to be so. In fact, nobody knows for sure whether or not such a family exists. A nice instance is the BBS generator, introduced by Blum, Blum, and Shub <ref> [BBS86, LP89] </ref>, which is proved polynomial-time perfect under the (unproven) assumption that factoring the product of two (unknown) b-bit random primes cannot be done in polynomial time in b.
Reference: [LW97] <author> H. Leeb and S. Wegenkittl. </author> <title> Inversive and linear congruential pseudorandom number generators in selected empirical tests. </title> <booktitle> ACM Transactions on Modeling and Computer Simulation, </booktitle> <year> 1997. </year> <note> To appear. </note>
Reference-contexts: Marsaglia [Mar85, Mar96] proposes a more recent battery, called DIEHARD. Some of these tests are more "stringent" than the classical ones, in the sense that more popular generators tend to fail them. References to other statistical tests can be found, for instance, in <ref> [L'E92, L'E94, LCS96, LCC96, L'E96b, LW97, Ste86b] </ref>. Another extensive testing package called TestU01 [L'E96b], still under development, implements most of the tests proposed so far, as well as several classes of generators implemented in generic form.
Reference: [Mar85] <author> G. Marsaglia. </author> <title> A current view of random number generators. </title> <booktitle> In Computer Science and Statistics, Sixteenth Symposium on the Interface, </booktitle> <pages> pages 3-10, </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1985. </year> <note> Elsevier Science Publishers. This is page 15 Printer: Opaque this </note>
Reference-contexts: This is what we did here, using different types of "robust" generators, such as G14 in Section 6, and the results agreed well across the different generators. This is page 7 Printer: Opaque this Knuth [Knu81] describes a "classical" set of tests. Marsaglia <ref> [Mar85, Mar96] </ref> proposes a more recent battery, called DIEHARD. Some of these tests are more "stringent" than the classical ones, in the sense that more popular generators tend to fail them. References to other statistical tests can be found, for instance, in [L'E92, L'E94, LCS96, LCC96, L'E96b, LW97, Ste86b].
Reference: [Mar96] <author> G. Marsaglia. Diehard: </author> <title> A battery of tests of randomness. </title> <note> http://stat.fsu.edu/geo/diehard.html, 1996. </note>
Reference-contexts: This is what we did here, using different types of "robust" generators, such as G14 in Section 6, and the results agreed well across the different generators. This is page 7 Printer: Opaque this Knuth [Knu81] describes a "classical" set of tests. Marsaglia <ref> [Mar85, Mar96] </ref> proposes a more recent battery, called DIEHARD. Some of these tests are more "stringent" than the classical ones, in the sense that more popular generators tend to fail them. References to other statistical tests can be found, for instance, in [L'E92, L'E94, LCS96, LCC96, L'E96b, LW97, Ste86b].
Reference: [Nie92] <author> H. Niederreiter. </author> <title> Random Number Generation and Quasi-Monte Carlo Methods, </title> <booktitle> volume 63 of SIAM CBMS-NSF Regional Conference Series in Applied Mathematics. </booktitle> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1992. </year>
Reference-contexts: Their application, in turn, implies a thorough theoretical understanding of the equidistribution properties of the generators. Theoretical analysis is crucial for the design of good generators and has been the subject of several books and papers; see, e.g., <ref> [Knu81, L'E94, L'E97, Nie92] </ref> and other references given there. For generators based on linear recurrences, for example, this is often achieved by analyzing the underlying lattice structure (sometimes called the "spectral test"). Generators with well-understood structural properties may appear less random, but the less understood ones could hide worse defects.
Reference: [Pla92] <author> P. J. Plauger. </author> <title> The Standard C Library. </title> <publisher> Prentice Hall, </publisher> <address> En-glewood Cliffs, New Jersey, </address> <year> 1992. </year>
Reference-contexts: G5. LCG with m = 2 31 and a = 65539 (RANDU, see [LK91]). G6. LCG with m = 2 31 and a = 452807053 (see [DvdMST95]). G7. LCG with m = 2 31 , a = 1103515245, c = 12345 (see <ref> [Pla92] </ref>). G8. Implicit inv. with m = 2 31 1, a 1 = a 2 = 1 (see [Eic92]). G9. Explicit inv. with m = 2 31 1, a = b = 1 (see [Eic92, Hel95]). G10.
Reference: [Rip87] <author> B. D. Ripley. </author> <title> Stochastic Simulation. </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1987. </year>
Reference-contexts: The next proposition characterizes the stochastic process Y n . For the proof and more details, see <ref> [LCS96, RS78, SB78, Rip87] </ref>. Proposition 1 Under H 0 , for each t 1 &gt; 0, as n ! 1, the process fY n (t); 0 t t 1 g converges weakly to a Poisson process with unit rate. <p> We also applied the m-nearest-pairs test with the same parameters and m = 10. We just summarize the results here. For more details and more refined versions of these tests, see [LCS96]. Because of their well-known regular lattice structure <ref> [Knu81, L'E94, Rip87] </ref>, we expected the LCGs G1 to G7 to fail the nearest-pair tests and they all did, spectacularly. Most of them passed the tests with n = 10000, This is page 11 Printer: Opaque this TABLE 1.3.
Reference: [Rip90] <author> B. D. Ripley. </author> <title> Thoughts on pseudorandom number generators. </title> <journal> Journal of Computational and Applied Mathematics, </journal> <volume> 31 </volume> <pages> 153-163, </pages> <year> 1990. </year>
Reference-contexts: G2. LCG with m = 2 31 1 and a = 630360016 (see [LK91]). G3. LCG with m = 2 31 1 and a = 16807 (see [BFS87, LK91]). G4. LCG with m = 2 32 , a = 69069, and c = 1 (see <ref> [LK91, Rip90] </ref>). G5. LCG with m = 2 31 and a = 65539 (RANDU, see [LK91]). G6. LCG with m = 2 31 and a = 452807053 (see [DvdMST95]). G7. LCG with m = 2 31 , a = 1103515245, c = 12345 (see [Pla92]). G8.
Reference: [RS78] <author> B. D. Ripley and B. W. Silverman. </author> <title> Quick tests for spatial interaction. </title> <journal> Biometrika, </journal> <volume> 65(3) </volume> <pages> 641-642, </pages> <year> 1978. </year>
Reference-contexts: The next proposition characterizes the stochastic process Y n . For the proof and more details, see <ref> [LCS96, RS78, SB78, Rip87] </ref>. Proposition 1 Under H 0 , for each t 1 &gt; 0, as n ! 1, the process fY n (t); 0 t t 1 g converges weakly to a Poisson process with unit rate.
Reference: [SB78] <author> B. Silverman and T. Brown. </author> <title> Short distances, flat triangles and Poisson limits. </title> <journal> Journal of Applied Probability, </journal> <volume> 15 </volume> <pages> 815-825, </pages> <year> 1978. </year>
Reference-contexts: The next proposition characterizes the stochastic process Y n . For the proof and more details, see <ref> [LCS96, RS78, SB78, Rip87] </ref>. Proposition 1 Under H 0 , for each t 1 &gt; 0, as n ! 1, the process fY n (t); 0 t t 1 g converges weakly to a Poisson process with unit rate.
Reference: [Ste86a] <author> M. S. Stephens. </author> <title> Tests based on EDF statistics. </title> <editor> In R. B. D'Agostino and M. S. Stephens, editors, </editor> <title> Goodness-of-Fit Techniques. </title> <publisher> Marcel Dekker, </publisher> <address> New York and Basel, </address> <year> 1986. </year>
Reference-contexts: Then, compare this empirical distribution to the theoretical distribution of T under H 0 , say F . This comparison can be done by a standard goodness-of-fit test, such as those of Kolmogorov-Smirnov (KS), Anderson-Darling, etc. <ref> [Dur73, Knu81, Ste86a] </ref>. The KS test computes the KS statistics D + 0u1 D 0u1 This is page 6 Printer: Opaque this TABLE 1.1.
Reference: [Ste86b] <author> M. S. Stephens. </author> <title> Tests for the uniform distribution. </title> <editor> In R. B. D'Agostino and M. S. Stephens, editors, </editor> <booktitle> Goodness-of-Fit Techniques, </booktitle> <pages> pages 331-366. </pages> <publisher> Marcel Dekker, </publisher> <address> New York and Basel, </address> <year> 1986. </year> <institution> Pierre L'Ecuyer Departement d'informatique et de recherche operationnelle, Universite de Montreal, C.P. </institution> <address> 6128, Succ. Centre-Ville, Montreal, H3C 3J7, Canada http://www.iro.umontreal.ca/lecuyer </address>
Reference-contexts: Marsaglia [Mar85, Mar96] proposes a more recent battery, called DIEHARD. Some of these tests are more "stringent" than the classical ones, in the sense that more popular generators tend to fail them. References to other statistical tests can be found, for instance, in <ref> [L'E92, L'E94, LCS96, LCC96, L'E96b, LW97, Ste86b] </ref>. Another extensive testing package called TestU01 [L'E96b], still under development, implements most of the tests proposed so far, as well as several classes of generators implemented in generic form.
References-found: 35

