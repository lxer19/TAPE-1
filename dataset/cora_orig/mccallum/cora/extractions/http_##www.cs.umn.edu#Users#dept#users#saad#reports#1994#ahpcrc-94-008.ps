URL: http://www.cs.umn.edu/Users/dept/users/saad/reports/1994/ahpcrc-94-008.ps
Refering-URL: http://www.cs.umn.edu/Users/dept/users/saad/reports/1994/
Root-URL: http://www.cs.umn.edu
Title: P SPARSLIB Working  The Iterative Solvers Module  
Author: Youcef Saad and Kesheng Wu 
Affiliation: University of Minnesota Department of Computer Science  
Date: 2  November 17, 1993  
Pubnum: Note No.  
Abstract: P SPARSLIBis a library of portable FORTRAN routines for sparse matrix compuations. The current thrust of the library is in iterative solution techniques. In this note we present the `accelerators' part of the library, which consists of the best known of Krylov subspace techniques. This iterative solution module is implemented in reverse communication mode so as to allow any preconditioned to be combined with the pacgake. In addition, this mechanism allows us to ensure portability, since the communication calls required in the iterative solution process are hidden in the dot product and the matrix-vector product and preconditioning operatins. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> O. Axelsson and V. A. Barker. </author> <title> Finite Element Solution of Boundary Value Problems. </title> <publisher> Academic Press, </publisher> <address> Orlando, Florida, </address> <year> 1984. </year>
Reference-contexts: This widely used algorithm was developed by Hestenes and Stiefel (1952). It is the only one we implemented for solving Hermitian positive definite linear systems. For references on this algorithm see, for example <ref> [1] </ref>. P SPARSLIB 4 CGNR This algorithm is intended for solving linear systms as well as least-squares problems. It consists of solving the linear system, A T Ax = A T b by a CG method.
Reference: [2] <author> R. Fletcher. </author> <title> Conjugate gradient methods for indefinite systems. </title> <editor> In G. A. Watson, editor, </editor> <booktitle> Proceedings of the Dundee Biennal Conference on Numerical Analysis 1974, </booktitle> <pages> pages 73-89, </pages> <address> New York, 1975. </address> <publisher> University of Dundee,Scotland, Springer Verlag. </publisher>
Reference-contexts: Bi-Conjugate Gradient (BCG) is a variation of the Lanczos algorithm for solving linear systems [5] and was also developed in its best known form by Fletcher <ref> [2] </ref>. It is a geenralization of the Conjugate gradient algorithm for solving nonhermitian linear systems. For references, see fore example [7, 3, 6, 9]. Implicitly the Lanczos algorithm is a projection technique onto a Krylov subspace, such that the representation of the matrix is tridiagonal.
Reference: [3] <author> R. W. Freund and N. M. Nachtigal. </author> <title> QMR: a quasi-minimal residual method for non-Hermitian linear systems. </title> <journal> Numer. Math., </journal> <volume> 60 </volume> <pages> 315-339, </pages> <year> 1991. </year>
Reference-contexts: Bi-Conjugate Gradient (BCG) is a variation of the Lanczos algorithm for solving linear systems [5] and was also developed in its best known form by Fletcher [2]. It is a geenralization of the Conjugate gradient algorithm for solving nonhermitian linear systems. For references, see fore example <ref> [7, 3, 6, 9] </ref>. Implicitly the Lanczos algorithm is a projection technique onto a Krylov subspace, such that the representation of the matrix is tridiagonal. In BCG the projected tridiagonal system is solved progressively as the tridiag-onalization is performed. <p> We did not implement CGS because of these potential difficulties. Transpose-Free Quasi-Minimum Residual method (TFQMR) This algorithm is another Transpose-Free variation of the Lanczos algorithm developed by R. Freund [4]. The underlying idea is the Quasi-Minimum Residual (QMR) algorithm <ref> [3] </ref>. Similarly to BiCG, QMR is based on Lanczos tridi-agonalization, and requires the use of the transpose of A. It attempts to produce residual norms that are `quasi-optimal', namely some expression for the residual norms is minimized, pretending that the Lanczos vectors were orthonormal.
Reference: [4] <author> Roland W. Freund. </author> <title> A Transpose-Free Quasi-Minimal Residual algorithm for non-Hermitian linear systems. </title> <journal> SIAM J. Sci. Comp., </journal> <volume> 14(2) </volume> <pages> 470-482, </pages> <year> 1993. </year>
Reference-contexts: We did not implement CGS because of these potential difficulties. Transpose-Free Quasi-Minimum Residual method (TFQMR) This algorithm is another Transpose-Free variation of the Lanczos algorithm developed by R. Freund <ref> [4] </ref>. The underlying idea is the Quasi-Minimum Residual (QMR) algorithm [3]. Similarly to BiCG, QMR is based on Lanczos tridi-agonalization, and requires the use of the transpose of A.
Reference: [5] <author> C. </author> <title> Lanczos. Solution of systems of linear equations by minimized iterations. </title> <journal> J. Res. Nat. Bur. Standards, </journal> <volume> 49 </volume> <pages> 33-53, </pages> <year> 1952. </year>
Reference-contexts: For typical problems arising from the discretization of partial differential equations, CGNR converges more slowly than CG or BCG and so this approach is not as popular in this particular context. Bi-Conjugate Gradient (BCG) is a variation of the Lanczos algorithm for solving linear systems <ref> [5] </ref> and was also developed in its best known form by Fletcher [2]. It is a geenralization of the Conjugate gradient algorithm for solving nonhermitian linear systems. For references, see fore example [7, 3, 6, 9].
Reference: [6] <author> Noel M. Nachtigal. </author> <title> A look-ahead variant of the Lanczos Algorithm and its application to the Quasi-Minimal Residual method for non-Hermitian linear systems. </title> <type> PhD thesis, </type> <institution> MIT, Appliexd Mathematics, </institution> <address> Cambridge, Massachusetts 02139, </address> <year> 1991. </year>
Reference-contexts: Bi-Conjugate Gradient (BCG) is a variation of the Lanczos algorithm for solving linear systems [5] and was also developed in its best known form by Fletcher [2]. It is a geenralization of the Conjugate gradient algorithm for solving nonhermitian linear systems. For references, see fore example <ref> [7, 3, 6, 9] </ref>. Implicitly the Lanczos algorithm is a projection technique onto a Krylov subspace, such that the representation of the matrix is tridiagonal. In BCG the projected tridiagonal system is solved progressively as the tridiag-onalization is performed.
Reference: [7] <author> Y. Saad. </author> <title> The Lanczos biorthogonalization algorithm and other oblique projection methods for solving large unsymmetric systems. </title> <journal> SIAM J. Nu-mer. Anal., </journal> <volume> 19 </volume> <pages> 470-484, </pages> <year> 1982. </year>
Reference-contexts: Bi-Conjugate Gradient (BCG) is a variation of the Lanczos algorithm for solving linear systems [5] and was also developed in its best known form by Fletcher [2]. It is a geenralization of the Conjugate gradient algorithm for solving nonhermitian linear systems. For references, see fore example <ref> [7, 3, 6, 9] </ref>. Implicitly the Lanczos algorithm is a projection technique onto a Krylov subspace, such that the representation of the matrix is tridiagonal. In BCG the projected tridiagonal system is solved progressively as the tridiag-onalization is performed.
Reference: [8] <author> P. Sonneveld. </author> <title> CGS, a fast Lanczos-type solver for nonsymmetric linear systems. </title> <journal> SIAM J. Scient. Statist. Comput., </journal> <volume> 10(1) </volume> <pages> 36-52, </pages> <year> 1989. </year>
Reference-contexts: The benefit of the partial pivoting is important when the linear system is `hard'. Bi-Conjugate Gradient Stabilized (BCGSTAB) This algorithm was developed mostly to eliminate the need to use A T in the BCG algorithm [9]. The Conjugate Gradient Squared (CGS) <ref> [8] </ref> is the first of this class of techniques referred to as transpose-free variants of the biconjugate gradient method. CGS is a technique that obtains iterates whose residual polynomial are the square of those of the standard BiCG.

References-found: 8

