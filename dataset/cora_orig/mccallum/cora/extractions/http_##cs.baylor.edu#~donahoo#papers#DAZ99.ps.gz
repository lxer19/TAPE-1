URL: http://cs.baylor.edu/~donahoo/papers/DAZ99.ps.gz
Refering-URL: http://cs.baylor.edu/~donahoo/
Root-URL: http://cs.baylor.edu
Email: Jeff Donahoo@Baylor.edu  fammar,ewzg@cc.gatech.edu  
Title: Multiple-Channel Multicast Scheduling for Scalable Bulk-data Transport  
Author: Michael J. Donahoo Mostafa H. Ammar Ellen W. Zegura 
Keyword: KeywordsMulticast, Receiver Heterogeneity, Scheduling  
Address: Waco, TX 76798  Atlanta, GA 30332  
Affiliation: Department of Computer Science School of Engineering and Computer Science Baylor University  Networking and Telecommunications Group College of Computing Georgia Institute of Technology  
Abstract: A key technique for allowing servers to handle a large volume of requests for file transfers is to multicast the data to the set of requesting clients. Typically, the paths from the server to the clients will be heterogeneous in bandwidth availability. Multiple-Channel Multicast (MCM) is an approach that can be used to handle this heterogeneity. In this approach the data is multicast over multiple channels, each addressed as a separate multicast group. Each receiver subscribes to a set of channels (i.e., joins the corresponding multicast groups) commensurate with its own rate capabilities. Of particular interest in the design of MCM schemes is the scheduling of data transmission across the multiple channels to accommodate asynchronous requests from clients. In this paper, we present and analyze a new multiple-channel multicast approach called Partition Organization (PO) scheduling. The scheme is designed to result in good reception efficiency when compared to existing proposals while improving on their performance when other measures of interest are considered. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Swarup Acharya, Michael Franklin, and Stanley Zdonik. </author> <title> Dissemination-based data delivery using broadcast disks. </title> <journal> IEEE Personal Communications, </journal> <volume> 2(6), </volume> <month> December </month> <year> 1995. </year>
Reference: [2] <author> Kevin C. Almeroth, Mostafa H. Ammar, and Zongming Fei. </author> <title> Scalable delivery of web pages using cyclic best-effort (UDP) multicast. </title> <booktitle> In INFO-COM'98, </booktitle> <month> May </month> <year> 1998. </year>
Reference: [3] <author> Mostafa H. Ammar and Li-Ran Wu. </author> <title> Improving the throughput of point-to-multipoint ARQ protocols through destination set splitting. </title> <booktitle> In Proceedings of INFOCOM'92, </booktitle> <pages> pages 26271. </pages> <publisher> IEEE, </publisher> <month> May </month> <year> 1992. </year>
Reference: [4] <author> Supratik Bhattacharyya, James F. Kurose, Don Towsley, and Ramesh Na-garajan. </author> <title> Efficient multicast flow control using multiple multicast groups. </title> <type> Technical Report UM-CS-1997-015, </type> <institution> University of Massachusetts, </institution> <month> March </month> <year> 1997. </year>
Reference: [5] <author> Jean-Chrysostome Bolot and Andres Vega-Garcia. </author> <title> Control mechanisms for packet audio in the internet. </title> <booktitle> In Proceedings of INFOCOM'96, </booktitle> <pages> pages 232239. </pages> <publisher> IEEE, </publisher> <month> April </month> <year> 1996. </year>
Reference-contexts: The same sort of receiver autonomy is needed to ensure reliable delivery, otherwise the sender will be overwhelmed with error control information. Researchers have proposed the use of Forward Error Correction (FEC) to recover from packet loss at the receiver in reliable mul-ticast protocols <ref> [5] </ref>, [13], [14], [17], [16]. A (k; n) encoder takes k packets of source data and produces n k redundancy packets such that any k of the n (k original + n k redundancy) packets can be used to reconstruct the original k packets [10], [15].
Reference: [6] <author> Shun Yan Cheung and Mostafa H. Ammar. </author> <title> Using destination set grouping to improve the performance of window-controlled multipoint connections. </title> <booktitle> In Proceedings of INFOCOM'96, </booktitle> <month> March </month> <year> 1996. </year>
Reference: [7] <author> Russell J. Clark and Mostafa H. Ammar. </author> <title> Providing scalable Web services using multicast. </title> <booktitle> In Proceedings of the 2nd International Workshop on Services in Distributed and Networked Environments (SDNE 95), </booktitle> <month> June </month> <year> 1995. </year>
Reference: [8] <author> Michael J. Donahoo, Mostafa H. Ammar, and Ellen W. Zegura. </author> <title> Multiple-channel multicast scheduling for scalable bulk-data transport. </title> <type> Technical Report GIT-CC-98-30, </type> <institution> Georgia Institute of Technology, </institution> <year> 1999. </year>
Reference-contexts: The one remaining detail in the scheduling within a phase is the exact order of packet transmissions within a channel. As the reader may discern from the Table, this ordering is not immediately obvious. For brevity, we defer a precise specification of the ordering to a technical report <ref> [8] </ref>. Finally, at the end of a phase, all packets (original and redundancy) will have been sent on the highest numbered session. Any receiver listening to this session from the very beginning will have had the chance to hear one copy of each transmitted distinct packet. <p> Here we discuss it from the perspective of the other performance measures presented earlier. The discussion is aimed at motivating our proposal for the Partition Organization (PO) scheme presented in the next section. We present an abbreviated version of our analysis of the SO Scheme. See <ref> [8] </ref> for a more detailed version. Channel Bandwidth Distribution: The SO scheduling approach depends on the fact that the channel bandwidths are exponentially distributed. This may create problems in receiver bandwidth matching. We are not claiming that exponential channel bandwidth distribution is necessarily a bad choice. <p> One problem with this restriction concerns increasing the number of channels (n c ) to provide a better fit with receiver bandwidth requirements exponentially increases the FEC encoding complexity. Other constraints are described in <ref> [8] </ref>. Channel Desynchronization: For good performance, the SO Scheme relies on the receiver receiving the packets from the multiple channels in the sequence that they were transmitted. <p> We will describe the various advantages to this subchannel architecture in our analysis of the partitioning scheme. The precise specifica tion of the packet scheduling for the PO scheme is given in <ref> [8] </ref>. B. Example Table II gives a trace of the channels for n c = 4, k = 8, and B = 8. The top portion of the table gives the trace for the original subchannels which the receiver accesses first. <p> We call the number of redundancy packets to add to each block in the original packet channel transmission the file delta (signified by ffi). We examine the efficacy of loss rate adaptation in <ref> [8] </ref>. Burst Loss Sensitivity: Recall from the left diagram in Fig. 5 that for each original subchannel, we send k packets from the same block in sequence before moving on to the next block. <p> Increasing ! allows an improvement in reception efficiency in the case of burst loss, but suffers from a proportional increase in the maximum buffer 9 Fig. 8. Reception Efficiency ing requirements. See <ref> [8] </ref> for specifics on this tradeoff. We can improve the burst loss curve for the PO Scheme in Fig. 8 by increasing !. For a sufficiently large ! value, the PO Scheme performs better than the SO Scheme.
Reference: [9] <author> Xue Li, Sanjoy Paul, and Mostafa Ammar. </author> <title> Layered video multicast with retransmission (LVMR): Hierarchical rate control schemes. </title> <booktitle> In Proceedings of Infocom'98, </booktitle> <address> San Francisco, CA, </address> <month> March </month> <year> 1998. </year>
Reference: [10] <author> Shu Lin and Daniel J. Dostello Jr. </author> <title> Error Control Coding: </title> <booktitle> Fundamentals and Applications. Computer Applications in Electrical Engineering. </booktitle> <publisher> Prentice-Hall, </publisher> <year> 1983. </year>
Reference-contexts: A (k; n) encoder takes k packets of source data and produces n k redundancy packets such that any k of the n (k original + n k redundancy) packets can be used to reconstruct the original k packets <ref> [10] </ref>, [15]. The drawback to FEC is the complexity of encoding and decoding. The encoding complexity is directly related to k and n. The decoding complexity is directly related to the number of redundancy packets used in decoding and k.
Reference: [11] <author> Sameer Mahajan, Michael J. Donahoo, Shamkant B. Navathe, and Mostafa Ammar. </author> <title> Grouping techniques for update propagation in intermittently connected databases. </title> <booktitle> In Fourteenth International Conference on Data Engineering, </booktitle> <pages> pages 4653. </pages> <publisher> IEEE, </publisher> <month> February </month> <year> 1997. </year>
Reference: [12] <author> Steven McCanne, Van Jacobson, and Martin Vetterli. </author> <title> Receiver-driven layered multicast. </title> <booktitle> In ACM SIGCOMM'96 Conference, </booktitle> <pages> pages 117130. </pages> <publisher> ACM, ACM Press, </publisher> <month> October </month> <year> 1996. </year>
Reference: [13] <author> Jorg Nonnenmacher, Ernst Biersack, and Don Towsley. </author> <title> Parity-based loss recovery for reliable multicast transmission. </title> <booktitle> In Proceedings of ACM SIG-COMM'97 Conference, </booktitle> <volume> volume 27, </volume> <pages> pages 289300. </pages> <publisher> ACM, </publisher> <month> October </month> <year> 1997. </year> <type> Tech. Report: </type> <institution> UM-CS-1997-017. </institution>
Reference-contexts: The same sort of receiver autonomy is needed to ensure reliable delivery, otherwise the sender will be overwhelmed with error control information. Researchers have proposed the use of Forward Error Correction (FEC) to recover from packet loss at the receiver in reliable mul-ticast protocols [5], <ref> [13] </ref>, [14], [17], [16]. A (k; n) encoder takes k packets of source data and produces n k redundancy packets such that any k of the n (k original + n k redundancy) packets can be used to reconstruct the original k packets [10], [15].
Reference: [14] <author> Jorg Nonnenmacher and E.W. Biersack. </author> <title> Reliable multicast: Where to use FEC. </title> <booktitle> In Proceedings 5th Workshop on Protocols for High Speed Networks, </booktitle> <pages> pages 134148, </pages> <month> October </month> <year> 1996. </year> <note> http://www.eurecom.fr/ non-nen/mypages/FECgain.ps.gz. </note>
Reference-contexts: The same sort of receiver autonomy is needed to ensure reliable delivery, otherwise the sender will be overwhelmed with error control information. Researchers have proposed the use of Forward Error Correction (FEC) to recover from packet loss at the receiver in reliable mul-ticast protocols [5], [13], <ref> [14] </ref>, [17], [16]. A (k; n) encoder takes k packets of source data and produces n k redundancy packets such that any k of the n (k original + n k redundancy) packets can be used to reconstruct the original k packets [10], [15].
Reference: [15] <author> Luigi Rizzo. </author> <title> Effective erasure codes for reliable computer communication protocols. </title> <journal> Computer Communication Review, </journal> <month> April </month> <year> 1997. </year>
Reference-contexts: A (k; n) encoder takes k packets of source data and produces n k redundancy packets such that any k of the n (k original + n k redundancy) packets can be used to reconstruct the original k packets [10], <ref> [15] </ref>. The drawback to FEC is the complexity of encoding and decoding. The encoding complexity is directly related to k and n. The decoding complexity is directly related to the number of redundancy packets used in decoding and k. <p> Redundancy: Recall that FEC decoding complexity is directly related to the number of missing packets we must reconstruct at the receiver. The percentage of the k packets received for each block that are redundancy packets directly relates to the decode complexity at the receiver <ref> [15] </ref>. Consequently, we evaluate the percentage of redundancy packets in our experiments. Fig. 7 gives the percentage of redundancy packets for both schemes with varying packet loss. Note that irrespective of packet loss rate, the SO scheme exhibits a high percentage of redundancy packets.
Reference: [16] <author> Luigi Rizzo and Lorenzo Vicisano. </author> <title> A reliable multicast data distribution protocol based on software FEC techniques. </title> <booktitle> In Proceedings of the Fourth IEEE HPCS'97 Workshop, </booktitle> <month> June </month> <year> 1997. </year> <note> http://www.cs.ucl.ac.uk/staff/L.Vicisano/hpcs97.ps.gz. </note>
Reference-contexts: The same sort of receiver autonomy is needed to ensure reliable delivery, otherwise the sender will be overwhelmed with error control information. Researchers have proposed the use of Forward Error Correction (FEC) to recover from packet loss at the receiver in reliable mul-ticast protocols [5], [13], [14], [17], <ref> [16] </ref>. A (k; n) encoder takes k packets of source data and produces n k redundancy packets such that any k of the n (k original + n k redundancy) packets can be used to reconstruct the original k packets [10], [15].
Reference: [17] <author> Lorenzo Vicisano. </author> <title> Notes on a cumulative organization of data packets across multiple stream with different rates. </title> <note> http://www.cs.ucl.ac.uk/staff/L.Vicisano/layer.ps.gz, January 1997. </note>
Reference-contexts: The same sort of receiver autonomy is needed to ensure reliable delivery, otherwise the sender will be overwhelmed with error control information. Researchers have proposed the use of Forward Error Correction (FEC) to recover from packet loss at the receiver in reliable mul-ticast protocols [5], [13], [14], <ref> [17] </ref>, [16]. A (k; n) encoder takes k packets of source data and produces n k redundancy packets such that any k of the n (k original + n k redundancy) packets can be used to reconstruct the original k packets [10], [15]. <p> Thus, we are interested in knowing the percentage of redundancy packets used in decoding. Note that these are per-receiver performance measures. In our evaluation later we will report the average over all receivers in our experiments. 4 IV. THE SESSION ORGANIZATION (SO) SCHEDULING Vicisano <ref> [17] </ref> proposes an MCM approach called the Session Organization (SO) scheduling scheme. A SO schedule for n c channels uses a rate of b 0 for Channel C 0 and a rate of b 0 2 i1 for Channel C i , i &gt; 0 as shown in Fig. 1. <p> A total of R phases are needed for the lowest numbered channel to eventually carry all packets. B. Discussion of the SO Scheme Vicisano's analysis evaluates the SO Scheme using a single performance metric, reception efficiency <ref> [17] </ref>. Here we discuss it from the perspective of the other performance measures presented earlier. The discussion is aimed at motivating our proposal for the Partition Organization (PO) scheme presented in the next section. We present an abbreviated version of our analysis of the SO Scheme. <p> VII. CONCLUDING REMARKS In this paper we consider the issue of how to partition and schedule the data among multiple channels for bulk-data multi-cast applications. We introduce a set of performance measures and discuss how a scheme previously proposed by Vicisano <ref> [17] </ref> performs according to these measures. This motivates the development of our new PO scheduling scheme. Our performance experiments show that the PO Scheme compares favorably with Vicisano's SO Scheme as far as reception efficiency is concerned but has better performance on other performance measures.
Reference: [18] <author> Lorenzo Vicisano and Jon Crowcroft. </author> <title> One to many reliable bulk-data transfer in the MBone. </title> <booktitle> In Proceedings of the Third International Workshop on High Performance Protocol Architectures HIPPARCH '97, </booktitle> <month> June </month> <year> 1997. </year> <note> http://www.cs.ucl.ac.uk/staff/L.Vicisano/hipparch97.ps.gz. </note>
Reference: [19] <author> Lorenzo Vicisano, Luigi Rizzo, and Jon Crowcroft. </author> <title> TCP-like congestion control for layered multicast data transfer. </title> <booktitle> In Proceedings of Infocom'98, </booktitle> <pages> pages 9961003, </pages> <month> March </month> <year> 1998. </year> <month> ftp://cs.ucl.ac.uk/darpa/infocom98.ps. </month>
Reference: [20] <author> J. W. Wong and M. H. Ammar. </author> <title> Analysis of broadcast delivery in the videotex system. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 34(9):863866, </volume> <month> September </month> <year> 1985. </year>
References-found: 20

