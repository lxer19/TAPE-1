URL: ftp://ftp.cs.sc.edu/pub/singh/papers/mcast.ps.gz
Refering-URL: http://www.cs.sc.edu/~singh/papers.html
Root-URL: 
Email: kbrown@cs.sc.edu  singh@cs.sc.edu  
Title: RelM: Reliable Multicast for Mobile Networks  
Author: Kevin Brown Suresh Singh 
Date: January 23, 1996  
Address: SC 29208  SC 29208  
Affiliation: Department of Computer Science University of South Carolina Columbia,  Department of Computer Science University of South Carolina Columbia,  
Abstract: In this paper, we present a protocol for providing reliable multicast message delivery in mobile networks. Our protocol efficiently tracks message delivery and allows for reliable message delivery in an environment where the mobile multicast group experiences frequent adds and drops. Furthermore, our protocol allows group changes and message tracking to be handled locally, which translates to shorter breaks in service as mobile users move from cell to cell. RelM is implemented on top of reliable multicast IP protocols developed for high-speed networks and thus allows multicast groups to contain both, fixed and mobile users.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Acharya and R Badrinath, </author> <title> "Delivering Multicast Messages in Networks with Mobile Hosts", </title> <booktitle> 13th Intl. Conf. on Distributed Computing Systems , May 1993. </booktitle>
Reference-contexts: In Section 4, we present the basic model in which adds and drops are not allowed. Then, in Section 5, the protocol is extended to allow efficient adds and drops. Section 6 compares the efficiencu of our protocol against another proposal discussed in <ref> [1, 2] </ref>. A summary of our results and possible extensions are discussed in Section 7. 1.1 Literature Review Many solutions to the reliable multicasting problem have been proposed. <p> This protocol, thus, does not scale well for services with large subscriber bases. [10] provides for reliable multicast and allows dynamic adds and drops but is not suitable for the TCP/IP Internet and does not consider mobility. <ref> [1, 2] </ref> propose the Host View Management Protocol (HVMP) that provides reliable multicast in mobile networks. HVMP provides exactly-once semantics for the multicast. However, it does not allow dynamic joins or drops, and does not specify a method for the creation or deletion of multicast groups. <p> The HVMP protocol of <ref> [1, 2] </ref> is based on this architecture. We believe this traditional architecture is not well suited for the anticipated volume of services that will be provided to mobile hosts in the future. <p> that it has to do is join the host group G R l and send delivered () messages for all multicast messages received! 6 Performance Analysis In this section we analyze the messaging costs and the buffer usage of our protocol and compare its performance against the HVMP protocol of <ref> [1, 2] </ref> that is based on the architecture of Figure 1. In section 6.1 we compare the overhead due to control message in the absence and in the presence of mobility.
Reference: [2] <author> A. Acharya and B. Badrinath, </author> <title> "A framework for delivering multicast messages in networks with mobile hosts", </title> <type> manuscript. </type>
Reference-contexts: In Section 4, we present the basic model in which adds and drops are not allowed. Then, in Section 5, the protocol is extended to allow efficient adds and drops. Section 6 compares the efficiencu of our protocol against another proposal discussed in <ref> [1, 2] </ref>. A summary of our results and possible extensions are discussed in Section 7. 1.1 Literature Review Many solutions to the reliable multicasting problem have been proposed. <p> This protocol, thus, does not scale well for services with large subscriber bases. [10] provides for reliable multicast and allows dynamic adds and drops but is not suitable for the TCP/IP Internet and does not consider mobility. <ref> [1, 2] </ref> propose the Host View Management Protocol (HVMP) that provides reliable multicast in mobile networks. HVMP provides exactly-once semantics for the multicast. However, it does not allow dynamic joins or drops, and does not specify a method for the creation or deletion of multicast groups. <p> The HVMP protocol of <ref> [1, 2] </ref> is based on this architecture. We believe this traditional architecture is not well suited for the anticipated volume of services that will be provided to mobile hosts in the future. <p> that it has to do is join the host group G R l and send delivered () messages for all multicast messages received! 6 Performance Analysis In this section we analyze the messaging costs and the buffer usage of our protocol and compare its performance against the HVMP protocol of <ref> [1, 2] </ref> that is based on the architecture of Figure 1. In section 6.1 we compare the overhead due to control message in the absence and in the presence of mobility. <p> HVMP Messaging Costs Note that we assume that HVMP will make use of IP multicasting when possible since it is much more efficient than unicasting the same message to all members of the host group. This is mentioned as a potential enhancement in <ref> [2] </ref>. In HVMP, since the messages sent to the MSSs are identical, link level multicasting can be used to deliver the message on a single subnet. This cannot be done in RELM since we include the list of MHs in the message from the SH to the MSS. <p> Since SHs are gateways, this is a reasonable assumption. We further assume that the multicast routers (i.e., the SHs) are directly connected to the MSSs. 1. Src sends multicast (G,seqno,msg) to all members of H. The sequence number isn't mentioned in <ref> [2] </ref> but it is needed to ensure exactly once delivery. Cost: F N jHj (C + A + S + M ) 2. After the recipient MSSs deliver the msg to the MH destinations, they must send an acklist (G, seqno, acklist) back to the source. <p> Cost: P N (C + A + S + M ) 8. After forwarding is done, each MSS sends an ack add (G,MSS) to newMSS. We assume that the incarnation number is required here although not specified in <ref> [2] </ref>. <p> Our protocol is efficient and allows dynamic adds/drops from the multicast groups by handling these changes locally in a distributed way. We have conducted an extensive performance evaluation study of our protocol and compared it against the HVMP protocol of <ref> [2] </ref>. We have shown that RelM is a more efficient protocol than HVMP under a variety of system configurations. Possible extensions worth study include enhancing RelM to allow target sets [10] in which more than one source service provider may multicast to the same mobile multicast group.
Reference: [3] <author> S. Armstrong et al., </author> <title> "Multicast Transport Protocol", </title> <type> RFC 1301, </type> <month> February </month> <year> 1992. </year>
Reference-contexts: While not reliable, [8, 9] provide a set of IP-based protocols to provide unreliable multicasting on the fixed network which have been used as a basis for other reliable multicast algorithms. [14] proposes a layer under TCP to provide reliable multicasting with dynamic drops and makes use of IP multicasting. <ref> [3] </ref> also makes use of IP multicasting and proposes using 'naks' to reduce the ack implosion at the source. [7] considers multicasting in mobile networks and uses forwarding pointers and location-independent addressing to support mobility; but it is not completely reliable. [15] allows dynamic joins to an open connection but requires
Reference: [4] <author> B. Badrinath, A. Acharya, and T. Imielinski, </author> <title> "Structuring Distributed Algorithms for Mobile Hosts", </title> <booktitle> 14th Intl. Conf. on Distributed Computing Systems, </booktitle> <month> June </month> <year> 1994. </year>
Reference: [5] <author> A. Bakre and B. R. Badrinath,"I-TCP: </author> <title> Indirect TCP for Mobile Hosts", </title> <type> Technical Report DCS-TR-314, </type> <institution> Rutgers University, </institution> <address> Piscataway, NJ 08855. </address>
Reference-contexts: If the user has open connections, it will have to renegotiate QOS parameters with its service providers frequently. This is clearly an undesirable situation. * The MSS nodes will have to operate at the transport layer (in order to implement mobile versions of popular protocols such as TCP, see <ref> [5] </ref>). This adds to the cost of the MSSs. * MSSs can be easily physically tampered with since these devices reside in ceilings in buildings and in lamp-posts outdoors.
Reference: [6] <author> K. Brown and S. </author> <title> Singh,"Multicasting in Mobile Networks", </title> <type> Technical Report, </type> <institution> Department of Computer Science, University of South Carolina, Columbia, </institution> <address> SC 29208, </address> <month> August </month> <year> 1995. </year>
Reference: [7] <author> David Cheriton, "VMTP: </author> <title> Versatile Message Transaction Protocol", </title> <type> RFC 1045, </type> <month> February </month> <year> 1988. </year> <note> 28 RelM vs. HVMP System Buffer Usage 0 1000 2000 5 10 15 20 Latency (sec) To ta l S yst em Bu ffe r U sa ge RelM 1 MH/cell RelM 2 MH/cell RelM 3 MH/cell RelM 4 MH/cell HVMP 1 MH/cell HVMP 2 MH/cell HVMP 3 MH/cell HVMP 4 MH/cell </note>
Reference-contexts: which have been used as a basis for other reliable multicast algorithms. [14] proposes a layer under TCP to provide reliable multicasting with dynamic drops and makes use of IP multicasting. [3] also makes use of IP multicasting and proposes using 'naks' to reduce the ack implosion at the source. <ref> [7] </ref> considers multicasting in mobile networks and uses forwarding pointers and location-independent addressing to support mobility; but it is not completely reliable. [15] allows dynamic joins to an open connection but requires that the connection be re-established for each new member.
Reference: [8] <author> S. Deering and D. Cheriton, </author> <title> "Host Groups: A Multicast Extension to the Internet Protocol", </title> <type> RFC 966, </type> <month> December </month> <year> 1985. </year>
Reference-contexts: Section 6 compares the efficiencu of our protocol against another proposal discussed in [1, 2]. A summary of our results and possible extensions are discussed in Section 7. 1.1 Literature Review Many solutions to the reliable multicasting problem have been proposed. While not reliable, <ref> [8, 9] </ref> provide a set of IP-based protocols to provide unreliable multicasting on the fixed network which have been used as a basis for other reliable multicast algorithms. [14] proposes a layer under TCP to provide reliable multicasting with dynamic drops and makes use of IP multicasting. [3] also makes use <p> We propose simple modifications to the Single Connection Emulation (SCE) protocol of [14] to support these requirements. IP multicasting <ref> [8, 9] </ref> provides unreliable multicast delivery to hosts on the fixed network and serves as the base for SCE. IP multicasting is implemented by a designated set of network routers which act as multicast routers through which all multicast messages are funneled.
Reference: [9] <author> S. Deering, </author> <title> "Host Extensions for IP Multicasting", </title> <type> RFC 1112, </type> <month> August </month> <year> 1989. </year>
Reference-contexts: Section 6 compares the efficiencu of our protocol against another proposal discussed in [1, 2]. A summary of our results and possible extensions are discussed in Section 7. 1.1 Literature Review Many solutions to the reliable multicasting problem have been proposed. While not reliable, <ref> [8, 9] </ref> provide a set of IP-based protocols to provide unreliable multicasting on the fixed network which have been used as a basis for other reliable multicast algorithms. [14] proposes a layer under TCP to provide reliable multicasting with dynamic drops and makes use of IP multicasting. [3] also makes use <p> We propose simple modifications to the Single Connection Emulation (SCE) protocol of [14] to support these requirements. IP multicasting <ref> [8, 9] </ref> provides unreliable multicast delivery to hosts on the fixed network and serves as the base for SCE. IP multicasting is implemented by a designated set of network routers which act as multicast routers through which all multicast messages are funneled.
Reference: [10] <author> W. Effelsberg and E. Muller-Menrad, </author> <title> "Dynamic Join and Leave for Real-Time Multicast", </title> <type> Technical Report TR-93-056, </type> <institution> International Computer Science Institute, Berkeley California, </institution> <month> October </month> <year> 1993. </year>
Reference-contexts: This protocol, thus, does not scale well for services with large subscriber bases. <ref> [10] </ref> provides for reliable multicast and allows dynamic adds and drops but is not suitable for the TCP/IP Internet and does not consider mobility. [1, 2] propose the Host View Management Protocol (HVMP) that provides reliable multicast in mobile networks. HVMP provides exactly-once semantics for the multicast. <p> We have conducted an extensive performance evaluation study of our protocol and compared it against the HVMP protocol of [2]. We have shown that RelM is a more efficient protocol than HVMP under a variety of system configurations. Possible extensions worth study include enhancing RelM to allow target sets <ref> [10] </ref> in which more than one source service provider may multicast to the same mobile multicast group. Sources must be prepared to send to all members of the target set as it changes or to create their own target set if necessary. 27 RelM vs.
Reference: [11] <author> Rohit Ghai and Suresh Singh, </author> <title> "An Architecture and Communication Protocol for Picocellular Networks", </title> <journal> IEEE Personal Communications Magazine, Third Quarter (1994), </journal> <pages> pp. 36-46. </pages>
Reference: [12] <author> T. Imielinski and S. Viswanathan, </author> <title> "Adaptive Wireless Information Systems", </title> <type> manuscript. </type>
Reference: [13] <author> J.Ioannidis, D. Duchamp, and G. Maguire, </author> <title> "IP-based protocols for mobile internetworking", </title> <booktitle> Proceedings of ACM SIGCOMM '91, </booktitle> <pages> pages 235-245, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: At the next level are the Mobile Support Stations (MSS)- one to a cell. The MSSs provide mobile hosts with connectivity to the underlying network and with one another. MSSs implement a cell discovery service, such as the beacon protocol described in <ref> [13] </ref>, that enables mobile hosts to know the identity of its current MSS node. At the third level, groups of MSSs (perhaps all the MSSs in a building) are controlled by an assigned supervisor machine called the Supervisor Host (SH).
Reference: [14] <author> Rajesh Talpade and Mostafa Ammar, </author> <title> "Single Connection Emulation (SCE): An Architecture for Providing a Reliable Multicast Transport Service", </title> <type> Technical Report GIT-CC-94-47, </type> <institution> Georgia Institute of Technology, </institution> <month> October </month> <year> 1994. </year> <note> 29 RelM vs. HVMP System Buffer Usage 0 1000 2000 3000 4000 5 10 15 20 Latency (sec) Tot al Sy ste m B uf fer Us ag e RelM 1 MH/cell RelM 2 MH/cell RelM 3 MH/cell RelM 4 MH/cell HVMP 1 MH/cell HVMP 2 MH/cell HVMP 3 MH/cell HVMP 4 MH/cell </note>
Reference-contexts: While not reliable, [8, 9] provide a set of IP-based protocols to provide unreliable multicasting on the fixed network which have been used as a basis for other reliable multicast algorithms. <ref> [14] </ref> proposes a layer under TCP to provide reliable multicasting with dynamic drops and makes use of IP multicasting. [3] also makes use of IP multicasting and proposes using 'naks' to reduce the ack implosion at the source. [7] considers multicasting in mobile networks and uses forwarding pointers and location-independent addressing <p> We propose simple modifications to the Single Connection Emulation (SCE) protocol of <ref> [14] </ref> to support these requirements. IP multicasting [8, 9] provides unreliable multicast delivery to hosts on the fixed network and serves as the base for SCE. IP multicasting is implemented by a designated set of network routers which act as multicast routers through which all multicast messages are funneled.
Reference: [15] <author> C. Topolcic, </author> <title> "Experimental Internet Stream Protocol, </title> <note> Version 2 (ST-II)", RFC 1190, </note> <month> October </month> <year> 1990. </year>
Reference-contexts: with dynamic drops and makes use of IP multicasting. [3] also makes use of IP multicasting and proposes using 'naks' to reduce the ack implosion at the source. [7] considers multicasting in mobile networks and uses forwarding pointers and location-independent addressing to support mobility; but it is not completely reliable. <ref> [15] </ref> allows dynamic joins to an open connection but requires that the connection be re-established for each new member.
Reference: [16] <author> K. Seal and Suresh Singh,"Loss Profiles: </author> <title> a quality ofservice measure in mobile computing", </title> <journal> J. Wireless Networks, </journal> <note> (to appear). </note>
Reference-contexts: The HVMP protocol of [1, 2] is based on this architecture. We believe this traditional architecture is not well suited for the anticipated volume of services that will be provided to mobile hosts in the future. Our objections (discussed in detail in <ref> [17, 16] </ref>) are based on the following observations: 2 To the fixed network Mobile Support Station (MSS) Mobile Host (MH) Microcell * The base stations are responsible for tracking mobile users and forwarding packets to their new locations.

References-found: 16

