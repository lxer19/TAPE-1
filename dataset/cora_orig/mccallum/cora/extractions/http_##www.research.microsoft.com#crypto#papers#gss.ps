URL: http://www.research.microsoft.com/crypto/papers/gss.ps
Refering-URL: http://www.research.microsoft.com/crypto/
Root-URL: http://www.research.microsoft.com
Title: Generalized Secret Sharing and Monotone Functions  
Author: Josh Benaloh Jerry Leichter 
Date: January 9, 1996  
Affiliation: University of Toronto  Yale University  
Abstract: Secret Sharing from the perspective of threshold schemes has been well-studied over the past decade. Threshold schemes, however, can only handle a small fraction of the secret sharing functions which we may wish to form. For example, if it is desirable to divide a secret among four participants A, B, C, and D in such a way that either A together with B can reconstruct the secret or C together with D can reconstruct the secret, then threshold schemes (even with weighting) are provably insufficient. This paper will present general methods for constructing secret sharing schemes for any given secret sharing function. There is a natural correspondence between the set of "generalized" secret sharing functions and the set of monotone functions, and tools developed for simplifying the latter set can be applied equally well to the former set. 
Abstract-found: 1
Intro-found: 1
Reference: [AsBl80] <author> Asmuth, C. and Bloom, J. </author> <title> "A Modular Approach to Key Safeguarding." </title> <institution> Texas A&M University, Department of Mathematics, College Station, </institution> <address> TX (1980). </address>
Reference: [Bena86] <author> Benaloh, J. </author> <title> "Secret Sharing Homomorphism: Keeping Shares of a Secret Secret" Crypto '86, </title> <address> Santa Barbara, CA (Aug. </address> <year> 1986). </year>
Reference-contexts: However, the value held by A completely determines the value held by C. Thus, the value held by A together with the value held by D is sufficient to compute s. This violates the premise that A and D are insufficient. 4 Generalized Secret Sharing Homomorphisms In <ref> [Bena86] </ref> and [Bena87], Benaloh describes a homomorphism property that is present in many threshold schemes which allows shares of multiple secrets to be combined to form "composite shares" which are shares of a composition of the secrets. <p> The applications of secret sharing homomorphisms includes fault-tolerant verifiable secret-ballot elections as well as verifiable secret sharing. The methods of verifiable secret sharing developed for threshold schemes in <ref> [Bena86] </ref> and [Bena87] and also by Feldman in [Feld87] can be used for generalized secret sharing too.
Reference: [Bena87] <author> Benaloh, J. </author> <title> "Verifiable Secret-Ballot Elections." </title> <type> Ph.D. </type> <institution> Thesis presented at Yale University (Sep. </institution> <year> 1987). </year>
Reference-contexts: However, the value held by A completely determines the value held by C. Thus, the value held by A together with the value held by D is sufficient to compute s. This violates the premise that A and D are insufficient. 4 Generalized Secret Sharing Homomorphisms In [Bena86] and <ref> [Bena87] </ref>, Benaloh describes a homomorphism property that is present in many threshold schemes which allows shares of multiple secrets to be combined to form "composite shares" which are shares of a composition of the secrets. Such secret sharing homomorphisms also apply to the generalized secret sharing scheme presented here. <p> The applications of secret sharing homomorphisms includes fault-tolerant verifiable secret-ballot elections as well as verifiable secret sharing. The methods of verifiable secret sharing developed for threshold schemes in [Bena86] and <ref> [Bena87] </ref> and also by Feldman in [Feld87] can be used for generalized secret sharing too.
Reference: [Blak79] <author> Blakley, G. </author> <title> "Safeguarding Cryptographic Keys." </title> <booktitle> Proc. AFIPS 1979 National Computer Conference, </booktitle> <address> New York, NY (June 1979), </address> <pages> 313-317. </pages>
Reference: [Feld87] <author> Feldman, P. </author> <title> "A Practical Scheme for Non-interactive Verifiable Secret Sharing." </title> <booktitle> Proc. 28 th IEEE Symp. on Foundations of Computer Science, </booktitle> <address> Los Angeles, CA (Oct. </address> <year> 1987), </year> <pages> 427-437. </pages>
Reference-contexts: The applications of secret sharing homomorphisms includes fault-tolerant verifiable secret-ballot elections as well as verifiable secret sharing. The methods of verifiable secret sharing developed for threshold schemes in [Bena86] and [Bena87] and also by Feldman in <ref> [Feld87] </ref> can be used for generalized secret sharing too.
Reference: [ISN87] <author> Ito, M., Saito, A., and Nishizeki, T. </author> <title> "Secret Sharing Scheme Realizing General Access Structure." </title> <booktitle> Proc. </booktitle> <address> Glob. Com, </address> <year> (1987). </year>
Reference-contexts: The method described by Ito, Saito, and Nishizeki in <ref> [ISN87] </ref> corresponds precisely to the case of minimal CNF-formulae in which conjunctions are formed by use of (n; n)-threshold schemes rather than by simple sums.
Reference: [Koth84] <author> Kothari, S. </author> <title> "Generalized Linear Threshold Scheme." </title> <booktitle> Proc. Crypto '84, </booktitle> <address> Santa Barbara, CA (Aug. </address> <year> 1984), </year> <pages> 231-241. </pages> <note> Published as Advances in Cryptology, </note> <editor> ed. by G. Blakley and D. </editor> <booktitle> Chaum in Lecture Notes in Computer Science, </booktitle> <volume> vol. 196, </volume> <editor> ed. by G. Goos and J. Hartmanis. </editor> <publisher> Springer-Verlag, </publisher> <address> New York (1985). </address>
Reference: [Sham79] <author> Shamir, A. </author> <title> "How to Share a Secret." </title> <journal> Comm. ACM 22, </journal> <volume> 11 (Nov. </volume> <year> 1979), </year> <pages> 612-613. 10 </pages>
Reference-contexts: Given any set of fewer than k of the s i , the secret value s is completely undetermined in an information theoretic sense. 4 Shamir's polynomially based threshold scheme (see <ref> [Sham79] </ref>) satisfies the above definition whenever jSj is a prime greater than n. It is not hard to remove the restriction that jSj be prime by, for instance, factoring jSj and using Chinese remaindering to encode secrets and shares.
References-found: 8

