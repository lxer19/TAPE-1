URL: ftp://ftp.cs.utexas.edu/pub/boyer/cli-reports/077.ps
Refering-URL: ftp://ftp.cs.utexas.edu/pub/boyer/nqthm/nqthm-bibliography.html
Root-URL: http://www.cs.utexas.edu
Title: Verifying the Interactive Convergence Clock Synchronization Algorithm Using the Boyer-Moore Theorem Prover  
Phone: (512) 322-9951  
Author: William D. Young 
Note: This work was sponsored in part at Computational Logic, Inc. by National Aeronautics and Space Administration Langley Research Center (NAS1-18878). The views and conclusions contained in this document are those of the authors and should not be interpreted as representing the official policies, either expressed or implied, of Computational Logic, Inc., NASA Langley Research Center or the U.S. Government.  
Address: 1717 W. 6th St. Suite 290 Austin, Texas 78703  
Affiliation: Computational Logic Inc.  
Abstract: Technical Report 77 April 1992 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> W. R. Bevier. </author> <title> "Kit and the Short Stack". </title> <journal> Journal of Automated Reasoning 5, </journal> <month> 4 (December </month> <year> 1989), </year> <pages> 519-530. </pages>
Reference: 2. <author> W. R. Bevier and W. D. Young. </author> <title> "Machine Checked Proofs of the Design of a Fault-Tolerant Circuit". </title> <note> To appear Formal Aspects of Computing, </note> <year> 1992. </year>
Reference-contexts: An interpreter is available for the logic and permits reasoning about functions at the meta-level. Also, it is possible to ``fake'' higher-order properties in other ways. We have checked the proof, for example, that there is no algorithm that solves a certain version of the Byzantine General's problem. <ref> [2] </ref> This is inherently a second order property. 4. Aspects of the Proof 4.1 Restraining the Prover Our proof of ICCSA was somewhat atypical of most proofs using the Boyer-Moore prover.
Reference: 3. <author> R. S. Boyer and J S. Moore. </author> <title> A Computational Logic. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1979. </year>
Reference: 4. <author> R. S. Boyer and J S. Moore. Metafunctions: </author> <title> Proving Them Correct and Using Them Efficiently as New Proof Procedures. In The Correctness Problem in Computer Science, </title> <editor> R. S. Boyer and J S. Moore, Eds., </editor> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1981. </year>
Reference: 5. <author> R. S. Boyer and J S. Moore. </author> <title> A Computational Logic Handbook. </title> <publisher> Academic Press, </publisher> <address> Boston, </address> <year> 1988. </year>
Reference-contexts: To assure that there are no circularities in 7 The EHDM proof of ICCSA used only the EHDM ground prover. [11] 8 There is a standard way to gain the effects of mutual recursion by defining several ``functions'' within one and using a flag to distinguish among them. <ref> [5] </ref> Also, there is an available read macro for the prover that turns a list of mutually recursive definitions into an event of this type. 11 (LEMMA SUBLEMMA-A (REWRITE) (IMPLIES (AND (NONFAULTY P I) (NONFAULTY Q I) (IN-R TM I)) (RLEQ (SKEW P Q TM I) (RPLUS (SKEW P Q (TI
Reference: 6. <author> R.S. Boyer, D. Goldschlag, M. Kaufmann, J S. Moore. </author> <title> Functional Instantiation in First Order Logic. </title> <booktitle> Proceedings of the 1989 Workshop on Programming Logic, </booktitle> <month> May, </month> <year> 1989. </year>
Reference: 7. <author> W. A. Hunt, Jr. </author> <title> "Microprocessor Design Verification". </title> <journal> Journal of Automated Reasoning 5, </journal> <month> 4 (December </month> <year> 1989), </year> <pages> 429-460. </pages>
Reference: 8. <author> M. Kaufmann. </author> <title> "An Extension of the Boyer-Moore Theorem Prover to Handle First-Order Quantifiers". </title> <note> To appear in Journal of Automated Reasoning, </note> <year> 1992. </year>
Reference-contexts: The macro version DEFN-SK+ of the event also causes these axioms to be encapsulated and proved as rewrite rules. For GOOD-CLOCK these two theorems are shown in figure 4. See <ref> [8] </ref> for details on how these are generated and a proof of the soundness of the approach. (PROVE-LEMMA GOOD-CLOCK-SUFF (REWRITE) (IMPLIES (IMPLIES (AND (IN-INTERVAL (T1 HIGH LOW P) LOW HIGH) (IN-INTERVAL (T2 HIGH LOW P) LOW HIGH)) (RLEQ (RABS (RPLUS (CLOCK P (T1 HIGH LOW P)) (RPLUS (RNEG (CLOCK P (T2
Reference: 9. <author> L. Lamport and P. M. Melliar-Smith. </author> <title> "Synchronizing clocks in the presence of faults". </title> <journal> Journal of the ACM 32, </journal> <month> 1 (January </month> <year> 1985), </year> <pages> 52-78. </pages>
Reference: 10. <institution> NASA Conference Publication 2377. Peer Review of a Formal Verification/Design Proof Methodology. NASA, </institution> <month> July, </month> <year> 1983. </year>
Reference: 11. <author> J. Rushby and F. von Henke. </author> <title> Formal Verification of a Fault-Tolerant Clock Synchronization Algorithm. </title> <institution> NASA CR-4239, </institution> <month> June </month> <year> 1989. </year>
Reference-contexts: This approach guarantees that there are no circularities in the proof. EHDM does not impose such a limited ordering on the steps in the proof. To assure that there are no circularities in 7 The EHDM proof of ICCSA used only the EHDM ground prover. <ref> [11] </ref> 8 There is a standard way to gain the effects of mutual recursion by defining several ``functions'' within one and using a flag to distinguish among them. [5] Also, there is an available read macro for the prover that turns a list of mutually recursive definitions into an event of <p> We are working towards constructing a proof description that reflects this induction step more straightforwardly. <ref> [11] </ref> Unfortunately, determining whether such a circularity is apparent or real requires a fairly deep understanding of the proof. The Boyer-Moore approach does not allow even an apparent circularity but the cost is a much more regimented approach to proof presentation. <p> This gives a nice customizable syntax for presentation that Rushby and von Henke claim ``enabled us to do most of our work using compact and familiar notation and thereby contributed greatly to our productivity'' <ref> [11] </ref>.
Reference: 12. <author> W. D. Young. </author> <title> "A Mechanically Verified Code Generator". </title> <journal> Journal of Automated Reasoning 5, </journal> <month> 4 (December </month> <year> 1989), </year> <pages> 493-518. 16 </pages>
References-found: 12

