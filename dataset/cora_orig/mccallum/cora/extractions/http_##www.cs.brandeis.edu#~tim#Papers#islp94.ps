URL: http://www.cs.brandeis.edu/~tim/Papers/islp94.ps
Refering-URL: http://www.cs.brandeis.edu/~tim/Papers/
Root-URL: http://www.cs.brandeis.edu
Email: (tim@cs.brandeis.edu)  
Title: CLP(F) and Constrained ODEs  
Author: Timothy J. Hickey 
Address: Waltham MA, 02254  
Affiliation: Michtom School of Computer Science Volen Center for Complex Systems Brandeis University,  
Abstract: In this paper we present a preliminary report on the new language, CLP(F), which is a constraint logic programming language whose underlying domain contains the domain of real-valued functions of one variable. More precisely, the domain consists of booleans, integers, real numbers, real-valued functions of one variable and vectors of domain elements. Functions can be constrained by functional equations describing their relationship with other functions and by constraining the values of the functions and their derivatives at a finite number of points. We implement the constraint solver for functions using a modification of the powerseries method for ODEs. The solver provides sound solutions to ODEs and is also capable of handling constrained ODEs. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Bate, R. and Mueller, D. and White, J., </author> <title> Fundamentals of Astrodynamics. </title> <publisher> Dover, </publisher> <year> 1971. </year>
Reference-contexts: Query to estimate velocity from two positions and time A more interesting problem is to consider the case where the two positions are known and one must determine the velocities. This is called the Gauss problem and it is non-trivial to solve using standard numerical analysis techniques <ref> [1] </ref>, but in CLP (F) we can obtain provably correct results by using a very simple declarative query, as shown in Figure 6. This example also shows one of the pitfalls of the CLP (F) approach.
Reference: 2. <editor> Benhamou, F. and Older, W., </editor> <title> Applying interval arithmetic to real, integer, and boolean constraints. </title> <journal> Journal of Logic Programming, </journal> <note> (To Appear), </note> <year> 1994. </year>
Reference-contexts: Recently, Older and others have developed a new CLP language CLP (BNR) whose domain contains booleans, natural numbers, and reals <ref> [9, 2] </ref>. The CLP (BNR) language has a very expressive constraint language which allows highly nonlinear constraints involving algebraic and transcendental functions and which relies on a single simple computational model, sound relational interval arithmetic, to solve all of these constraints.
Reference: 3. <author> Colmerauer, A., </author> <title> Solving Equations and Inequations on Finite and Infinite Trees. </title> <booktitle> in Proceedings of the Conference on Fifth Generations Computer Systems, </booktitle> <editor> K.L. Clark and S.A. Tarnlund (eds.), </editor> <year> 1984. </year>
Reference-contexts: 1 Sound Declarative Scientific Constraint Programming One of the most promising trends in constraint logic programming has been the increasing level of abstraction of the constraint domains being implemented. This process started with Alain Colmerauer's introduction of the disequality constraint "dif" into Prolog II <ref> [3] </ref>. Jaffar and Lassez's subsequent work on the definition and semantics of Constraint Logic Programming [6] provided the logical foundation of all subsequent CLP languages.
Reference: 4. <author> Colmerauer, A., </author> <title> An Introduction to Prolog III. </title> <journal> Communications of the ACM, </journal> <month> july </month> <year> 1990. </year>
Reference-contexts: Jaffar and Lassez's subsequent work on the definition and semantics of Constraint Logic Programming [6] provided the logical foundation of all subsequent CLP languages. The introduction of the arithmetic domains into CLP languages was another milestone and with the implementations of Prolog III <ref> [4] </ref> and CLP (R) [7], researchers have been able to solve many new classes of numerical problems in a declarative style. Recently, Older and others have developed a new CLP language CLP (BNR) whose domain contains booleans, natural numbers, and reals [9, 2].
Reference: 5. <author> Eckmann, J-P. and Wittwer, P., </author> <title> Computer Methods and Borel Summability Applied to Feigenbaum's Equation. Springer-Verlag, </title> <booktitle> Lecture Notes in Physics, </booktitle> <volume> 227, </volume> <year> 1985. </year>
Reference-contexts: Observe that we have added the dbound constraints which require the components of P and P 0 to take values in the range <ref> [5; 5] </ref>. This query produces bounds for the position P (1) which are guaranteed to contain the correct answer, provided the values of P (t) and P 0 (t) are contained in [5; 5] for t 2 [0; 0:1]. <p> the dbound constraints which require the components of P and P 0 to take values in the range <ref> [5; 5] </ref>. This query produces bounds for the position P (1) which are guaranteed to contain the correct answer, provided the values of P (t) and P 0 (t) are contained in [5; 5] for t 2 [0; 0:1]. If we do not put sufficiently tight bounds on these derivatives, the system is not able to obtain a good estimate of the remainder term in the powerseries expansion and hence cannot converge to a good solution to the problem.
Reference: 6. <author> Jaffar, J. and Lassez, J. L., </author> <title> Constraint Logic Programming. </title> <booktitle> in Proceedings of the 14th ACM Symposium on the Principles of Programming Languages, </booktitle> <year> 1987. </year>
Reference-contexts: This process started with Alain Colmerauer's introduction of the disequality constraint "dif" into Prolog II [3]. Jaffar and Lassez's subsequent work on the definition and semantics of Constraint Logic Programming <ref> [6] </ref> provided the logical foundation of all subsequent CLP languages. The introduction of the arithmetic domains into CLP languages was another milestone and with the implementations of Prolog III [4] and CLP (R) [7], researchers have been able to solve many new classes of numerical problems in a declarative style.
Reference: 7. <author> Jaffar, J. and Michaylov, S., </author> <title> Methodology and Implementation of a Constraint Logic Programming System. </title> <booktitle> in Proceedings of the Fourth International Conference on Logic Programming, </booktitle> <publisher> MIT Press, </publisher> <year> 1987. </year>
Reference-contexts: Jaffar and Lassez's subsequent work on the definition and semantics of Constraint Logic Programming [6] provided the logical foundation of all subsequent CLP languages. The introduction of the arithmetic domains into CLP languages was another milestone and with the implementations of Prolog III [4] and CLP (R) <ref> [7] </ref>, researchers have been able to solve many new classes of numerical problems in a declarative style. Recently, Older and others have developed a new CLP language CLP (BNR) whose domain contains booleans, natural numbers, and reals [9, 2].
Reference: 8. <author> Moore, R. E., </author> <title> Interval Analysis. </title> <publisher> Prentice-Hall, </publisher> <year> 1966. </year>
Reference: 9. <author> Older, W. and Vellino, A., </author> <title> Constraint Arithmetic on Real Intervals, in Constraint Logic Programming: Selected Research Colmerauer, </title> <editor> A. and Benhamou, F. (eds), </editor> <title> MIT Press 1993. This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: Recently, Older and others have developed a new CLP language CLP (BNR) whose domain contains booleans, natural numbers, and reals <ref> [9, 2] </ref>. The CLP (BNR) language has a very expressive constraint language which allows highly nonlinear constraints involving algebraic and transcendental functions and which relies on a single simple computational model, sound relational interval arithmetic, to solve all of these constraints.
References-found: 9

