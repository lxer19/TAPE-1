URL: ftp://robotics.stanford.edu/pub/yotto/manip.ps.Z
Refering-URL: http://robotics.stanford.edu/~yotto/bio.html
Root-URL: http://www.cs.stanford.edu
Title: ON COMPUTING MULTI-ARM MANIPULATION TRAJECTORIES  
Author: Yoshihito Koga 
Degree: a dissertation submitted to the department of mechanical engineering and the committee on graduate studies of stanford university in partial fulfillment of the requirements for the degree of doctor of philosophy By  
Date: February 1995  
Abstract-found: 0
Intro-found: 1
Reference: [Aho, Hopcroft, and Ullman, 1983] <author> A.V. Aho, J.E. Hopcroft, and J.D. Ullman, </author> <title> Data Structures and Algorithms, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1983. </year>
Reference-contexts: To determine the connected components and their encoding to generate a collision-free path between any two configuration within it, is also O (d 4 ) (see Appendix B). We can represent T as a balanced tree <ref> [Aho, Hopcroft, and Ullman, 1983] </ref> so that inserting each configuration in T and extracting l best takes logarithmic time in the number of elements in T . In addition, it takes in the worst-case s operations (the feasible grasp set F S 38 CHAPTER 3.
Reference: [Alami et al., 1990] <author> R. Alami, T. Simeon and J.P. Laumond, </author> <title> "A Geometrical Approach to Planning Manipulation Tasks: The Case of Discrete Placements and Grasps," Robotics Research 5, </title> <editor> H. Miura and S. Arimoto, eds., </editor> <publisher> MIT Press, </publisher> <address> Cam-bridge, </address> <year> 1990, </year> <pages> pp. 453-459. </pages>
Reference-contexts: Laumond and Alami [Laumond and Alami, 1988] propose an O (n 4 ) algorithm to solve a similar problem where the robot and the movable object are both discs and the obstacles are polygonal. Alami, Simeon and Laumond <ref> [Alami et al., 1990] </ref> describe a manipulation planner for one robot and several movable objects. Both the number of legal grasps of each object (positions of the robot relative to the object) and the number of legal placements of the movable objects are finite. <p> Both the number of legal grasps of each object (positions of the robot relative to the object) and the number of legal placements of the movable objects are finite. The method was implemented for two simple robots: a translating polygon <ref> [Alami et al., 1990] </ref> and a three-revolute-joint planar 1.3. RELATED WORK 7 arm [Laumond and Alami, 1989]. A theoretical study of the more general case where the set of legal grasps and placements of the movable objects are continuous sets is presented in [Laumond and Alami, 1989]. <p> In this chapter we make precise these notions and present the multi-arm manipulation planning problem using the configuration space formalization. This is the problem statement for the first step of our two-phase approach for computing manipulation trajectories. Much of this chapter is an extension of ideas presented in <ref> [Alami et al., 1990] </ref> and Chapter 11 of [Latombe, 1991]. Our presentation is general except for the simplification of considering only a single movable object. 13 14 CHAPTER 2. PROBLEM STATEMENT 2.1 Configuration Space Consider the workcell shown in Fig. 2.1. <p> This is illustrated in Fig. 3.2. In [Koga and Latombe, 1992] we describe a method to explicitly build the manipulation graph to solve this two-dimensional problem. The method is an implementation of the ideas proposed in <ref> [Alami et al., 1990] </ref> and uses a discretized approach rather than Collins' decomposition algorithm. In particular, the manipulation graph is created by first determining the connectivity of the discretized freespace by transfer paths and then linking these connected components by transit paths.
Reference: [Barraquand et al., 1990] <author> J. Barraquand, B. Langlois and J.C. Latombe, </author> <title> "Robot Motion Planning with Many Degrees of Freedom and Dynamic Constraints," Robotics Research 5, </title> <editor> H. Miura and S. Arimoto, </editor> <publisher> MIT Press, </publisher> <address> Cambridge, </address> <year> 1990, </year> <pages> pp. 435-444. </pages>
Reference: [Barraquand and Latombe, 1991a] <author> J. Barraquand and J.C. Latombe, </author> <title> "Robot Motion Planning: A Distributed Representation Approach," </title> <type> Rep. </type> <institution> STAN-CS-89-1257, Department of Computer Science, Stanford University, </institution> <address> CA, </address> <year> 1989. </year>
Reference-contexts: The smoothing algorithm is given in Appendix B. RPP ? is probabilistically resolution-complete. This means that when a t obj exists, it will find it, but the computation time may tend to infinity. The proof is given in <ref> [Barraquand and Latombe, 1991a] </ref> 2 . Unfortunately, if no path exists, RPP ? may run forever.
Reference: [Barraquand and Latombe, 1991b] <author> J. Barraquand and J.C. Latombe, </author> <title> "Robot Motion Planning: A Distributed Representation Approach," </title> <journal> The International Journal of Robotics Research, </journal> <volume> 10(6), </volume> <year> 1991, </year> <pages> pp. 628-649. </pages>
Reference-contexts: MANIPULATION PLANNING IN A 2D WORKSPACE problem (the basic path planning problem of moving the robot from one configuration to another). In particular there exist two efficient planners called the best-first planner (BFP) and the randomized path planner (RPP) <ref> [Barraquand and Latombe, 1991b] </ref>. BFP is a fast, resolution-complete planner well suited to solving the piano movers' problem for robots with three degrees of freedom or less. RPP is a practical path planner that for many complicated examples finds the collision-free paths of robots with many degrees of freedom. <p> In Chapter 4 we give an overview of RPP as it applies to finding the object path. We now give a formal expression of the algorithm. An in-depth explanation of the general RPP algorithm is given in <ref> [Barraquand and Latombe, 1991b] </ref> and [Latombe, 1991]. C.1 The RPP Algorithm The following is taken from [Latombe, 1991].
Reference: [Bobrow et al., 1985] <author> J.E. Bobrow, S. Dubowsky, J.S. Gibson, </author> <title> "Time-Optimal Control of Robotic Manipulators Along Specified Paths," </title> <journal> The International Journal of Robotics Research, </journal> <volume> 4(3), </volume> <year> 1985, </year> <pages> pp. 3-17. </pages>
Reference-contexts: To time parameterize the computed paths, we use the well established algorithm 6 CHAPTER 1. INTRODUCTION of <ref> [Bobrow et al., 1985] </ref> and [Shin and Mackay, 1985]. <p> Some other papers on the theoretical aspects of this problem with obstacle avoidance are [Canny et al., 1988] and [Donald and Xavier, 1989]. By introducing path constraints (prescribing the robot path) the problem is greatly simplified <ref> [Bobrow et al., 1985] </ref>[Shin and Mackay, 1985]. This is due to the dramatic reduction of the search space for the optimal solution. In particular, the algorithm developed by Bobrow et al. [Bobrow et al., 1985] solves this path constrained problem for an open-kinematic-chain robot in very short time. <p> By introducing path constraints (prescribing the robot path) the problem is greatly simplified <ref> [Bobrow et al., 1985] </ref>[Shin and Mackay, 1985]. This is due to the dramatic reduction of the search space for the optimal solution. In particular, the algorithm developed by Bobrow et al. [Bobrow et al., 1985] solves this path constrained problem for an open-kinematic-chain robot in very short time. In addition, by using the output of some path planner as the prescribed path, obstacle avoidance is satisfied. <p> A variety of example paths generated by our planner are given. In Chapter 5 an algorithm for computing time-optimal motions of the robot arms constrained to the previously computed manipulation paths is described. The scheme is based on the algorithm proposed independently by Bobrow et al. <ref> [Bobrow et al., 1985] </ref> and by Shin and Mackay [Shin and Mackay, 1985]. Finally, in Chapter 6 we discuss directions for future research. Chapter 2 Problem Statement We address the problem of automatically computing the trajectories of multiple robot arms to manipulate an object to a specified location. <p> Incorporating these additional constraints into the basic problem is the focus of this chapter. 5.1 The Open-Chain Robot There exists a well established path-constrained-optimal control algorithm for open-chain robots <ref> [Bobrow et al., 1985] </ref>[Shin and Mackay, 1985][Pfeiffer and Johanni, 1987][Shiller and Lu, 1990]. We use this algortithm as the foundation for finding the minimum-time parameterization for the other two cases (the transfer paths). <p> Hence, the curve we seek in the s - _s plane is one that solves the TPBVP and maximizes the area it encloses. 68 CHAPTER 5. DYNAMIC CONSTRAINTS AND TRAJECTORY PLANNING Bobrow et al. show in <ref> [Bobrow et al., 1985] </ref> that the optimal curve has s at its maximum possible acceleration or deceleration at all times (Shiller and Lu show that there exist some special paths with critical arcs where this is not true [Shiller and Lu, 1990] we assume our paths are without the critical arcs).
Reference: [Bobrow, 1988] <author> J.E. Bobrow, </author> <title> "Optimal Robot Path Planning Using the Minimum-Time Criterion," </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 4(4), </volume> <year> 1988, </year> <pages> pp. 443-449. 124 BIBLIOGRAPHY </pages>
Reference-contexts: Using variational methods and the minimum-time parameterization algorithm as a cost function, the path shape of the transit and transfer paths could be perturbed in the direction of the negative gradient of the cost function to some locally minimized solution <ref> [Bobrow, 1988] </ref>[Barraquand et al., 1990][Shiller and Dubowsky, 1991]. For a repetitive manipulation motion, a locally time-optimal solution would be highly desirable. 6.1.3 Integrating Trajectory Planning with Real Robots The two-phase approach to trajectory planning fits directly into the development of a "user-friendly" multi-arm robot system.
Reference: [Boneschanscher et al., 1988] <author> N. Boneschanscher, H. Van der Drift, S.J. Buckley, and R.H. Taylor, </author> <title> "Subassembly Stability," </title> <booktitle> Proceedings of the 7 th National Conference on Artificial Intelligence, AAAI 88, </booktitle> <year> 1988, </year> <pages> pp. 780-785. </pages>
Reference-contexts: Another potentially important aspect of manipulation planning is determining the stable placements of the object for regrasping actions. These would be intermediate placements of the object where the robots can completely ungrasp for the purpose of regrasping. Using a simplified model of friction, Boneschanscher et al. <ref> [Boneschanscher et al., 1988] </ref> propose an algorithm that tests the stability of an arrangement of polyhedra on a table in the six-dimensional space of translations and rotations. 1.3.2 Time-Optimal Control The time-optimal control problem for robots has attracted considerable interest.
Reference: [Canny, 1988] <author> J.F. Canny, </author> <title> The Complexity of Robot Motion Planning, </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1988. </year>
Reference-contexts: The fastest known complete algorithm for solving this problem is one with time complexity that is singly-exponential in the number of degrees of freedom of the robot <ref> [Canny, 1988] </ref>. This algorithm is complete in the sense that given a description of the robot and the environment as semi-algebraic sets, it finds a collision-free path connecting the intial and goal configuration of the robot when it exists, and reports failure when it does not. <p> The algorithm is thorough but impractical for any robot with many degrees of freedom. Although no proof exists to show that the problem is intractable, the work of Canny <ref> [Canny, 1988] </ref>, the establishment of the PSPACE-hardness of the problem [Reif, 1979], and other related theoretical work as cited in Chapter 1 of Latombe's book [Latombe, 1991] strongly suggests that this is the case.
Reference: [Canny et al., 1988] <author> J. Canny, B. Donald, J. Reif, and P. Xavier, </author> <title> "On the Complexity of Kinodynamic Planning," </title> <booktitle> Proceedings of the 29 th Symposium on the Foundations of Computer Science, </booktitle> <address> White Plains, NY, </address> <year> 1988, </year> <pages> pp. 306-316. </pages>
Reference-contexts: However, the computational complexity of this algorithm is such that it is impractical for realistic systems. Some other papers on the theoretical aspects of this problem with obstacle avoidance are <ref> [Canny et al., 1988] </ref> and [Donald and Xavier, 1989]. By introducing path constraints (prescribing the robot path) the problem is greatly simplified [Bobrow et al., 1985][Shin and Mackay, 1985]. This is due to the dramatic reduction of the search space for the optimal solution.
Reference: [Craig, 1985] <author> J.J. Craig, </author> <title> Introduction to Robotics, </title> <publisher> Addison-Wesley Publishing Company, </publisher> <address> Reading, MA, </address> <year> 1986. </year>
Reference-contexts: We can now design a control law for (5.24) as if it were the open loop dynamics of a system to be controlled <ref> [Craig, 1985] </ref>. Whatever control structure we devise for computing ? , when plugged back into (5.23) we get the net force applied to the payload at the operational point. The next 5.3. THE CLOSED-CHAIN ROBOT SYSTEM 77 step is to partition to the r arms such that Eq. (5.22) holds. <p> k p e (5:29) where e = x d x, _ e = _ x d _ x, k v and k p are control gains, and x d , _ x d , and x are the desired configurations, velocities, and accelerations respectively that the operational point must track <ref> [Craig, 1985] </ref>. In the ideal case with zero tracking error and perfect modelling ? = x d .
Reference: [Donald and Xavier, 1989] <author> B. Donald and P. Xavier, </author> <title> "A Provably Good Approximation Algorithm for Optimal-Time Trajectory Planning," </title> <booktitle> Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <address> Scottsdale, AZ, </address> <year> 1989, </year> <pages> pp. 958-963. </pages>
Reference-contexts: However, the computational complexity of this algorithm is such that it is impractical for realistic systems. Some other papers on the theoretical aspects of this problem with obstacle avoidance are [Canny et al., 1988] and <ref> [Donald and Xavier, 1989] </ref>. By introducing path constraints (prescribing the robot path) the problem is greatly simplified [Bobrow et al., 1985][Shin and Mackay, 1985]. This is due to the dramatic reduction of the search space for the optimal solution.
Reference: [Ferbach and Barraquand, 1993] <author> P. Ferbach and J. Barraquand, </author> <title> "A Penalty Function Method for Constrained Motion Planning," </title> <booktitle> Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <address> San Diego, CA, </address> <year> 1994, </year> <pages> pp. 1235-1242. </pages>
Reference-contexts: In our practical approach we concentrate on planning motions for multiple robot arms and a single movable object, as opposed to multiple movable objects and a single robot. Ferbach and Barraquand <ref> [Ferbach and Barraquand, 1993] </ref>, introduce a practical approach to the multi-arm manipulation planning problem using a variational technique based on dynamic programming. They first solve the problem assuming the movable object can be moved without the arms grasping it.
Reference: [Gupta and Zhu, 1994] <author> K.K. Gupta and X. Zhu, </author> <title> "Practical Global Motion Planning for Many Degrees of Freedom: A Novel Approach within Sequential Framework," </title> <booktitle> Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <address> San Diego, CA, </address> <year> 1994, </year> <pages> pp. 2038-2043. </pages>
Reference: [Howe et al., 1990] <author> R.D. Howe, I. Kao, </author> <title> and M.R. Cutkosky, "The Sliding of Robot Fingers Under Combined Torsion and Shear Loading," </title> <booktitle> Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <address> Philadelphia, PA, </address> <year> 1990, </year> <pages> pp. 1258-1263. </pages>
Reference-contexts: This section discusses the approach taken to add this consideration of friction limits into the minimum-time parameterization algorithm. We consider first, an appropriate friction model. We use the viscoelastic rubber friction model developed by Howe, Kao, and Cutkosky <ref> [Howe et al., 1990] </ref>. We justify the use of such a model by the fact that most robot finger tips have a rubber surface.
Reference: [Jacobs et al., 1989] <author> P. Jacobs et al., </author> <title> Planning Guaranteed Near-Time-Optimal Trajectories for a Manipulator in a Cluttered Workspace, </title> <type> Rep. </type> <institution> ESRC 89-20/RAMP 89-15, University of Berkeley, </institution> <address> CA, </address> <year> 1989. </year> <note> BIBLIOGRAPHY 125 </note>
Reference-contexts: An algorithm for a closed chain robot has been developed by Slattery [Slattery, 1991]. Unfortunately, even for a relatively simple robot system the method is extremely slow in converging to the solution. None of these methods consider obstacle avoidance. Jacobs et al. <ref> [Jacobs et al., 1989] </ref> present an algorithm that guarantees bounds on the closeness of an approximation to the global-time-optimal trajectory that includes obstacle avoidance. However, the computational complexity of this algorithm is such that it is impractical for realistic systems.
Reference: [Kane, 1985] <author> T.R. Kane and D.A. Levinson, </author> <title> Dynamics: Theory and Application, </title> <publisher> McGraw-Hill Publishing Company, </publisher> <address> New York, NY, </address> <year> 1985. </year>
Reference-contexts: The robot moves in the vertical plane and has actuators at each of the joints (the shoulder, elbow, and wrist). The parameters of the robot are given in Table 5.1. We use Kane's method <ref> [Kane, 1985] </ref> to determine the equations of motion. 5.5.
Reference: [Kao and Cutkosky, 1992] <author> I. Kao and M.R. Cutkosky, </author> <title> "Quasistatic Manipulation with Compliance and Sliding," </title> <journal> The International Journal of Robotics Research, </journal> <volume> 11(1), </volume> <year> 1992, </year> <pages> pp. 20-40. </pages>
Reference-contexts: We completely ignore the many important issues related to the actual control of the slip as studied in <ref> [Kao and Cutkosky, 1992] </ref>[Tremblay and Cutkosky, 1993]. Let G 0 be a subset of G which contains motion grasp assignments and such that all g 2 G 0 have at least two working arms.
Reference: [Kavraki and Latombe, 1994] <author> L. Kavraki and J.C. Latombe, </author> <title> "Randomized Preprocessing of Configuration Space for Fast Path Planning," </title> <booktitle> Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <address> San Diego, CA, </address> <year> 1994, </year> <pages> pp. 2138-2145. </pages>
Reference: [Khan and Roth, 1971] <author> M.E. Khan and B. Roth, </author> <title> "The Near-Minimum-Time Control of Open-Loop Articulated Kinematic Chains," Journal of Dynamic Systems, Measurement, </title> <journal> and Control, </journal> <volume> 93(3), </volume> <year> 1971, </year> <pages> pp. 164-172. </pages>
Reference-contexts: The second approach is to add a geometric path constraint to the TPBVP, thus restricting the problem to finding the optimal control history that yields the minimum travel time for the specified path. The first to consider this problem under the general approach are Khan and Roth <ref> [Khan and Roth, 1971] </ref>. They find the near time-optimal solution of a three-degrees-of-freedom open-kinematic-chain manipulator. However, they simplify the problem 1.3. RELATED WORK 9 by linearizing the equations of motion of the robot.
Reference: [Khatib, 1986] <author> O. Khatib, </author> <title> "Real-Time Obstacle Avoidance for Manipulators and Mobile Robots," </title> <journal> The International Journal of Robotics Research, </journal> <volume> 5(1), </volume> <year> 1986, </year> <pages> pp. 90-98. </pages>
Reference-contexts: In [Quinlan and Khatib, 1993], Quinlan and Khatib present the elastic band concept as a link between path planning and actual robot execution. They transform the computed path into an elastic band to allow its deformation in real-time. By then utilizing a robot controller with real-time collision avoidance <ref> [Khatib, 1986] </ref>, any unexpected collisons (e.g. due to unexpected obstacles or errors in the control) can be avoided. The manipulation planner of our first step could provide the initial path from which the elastic band would be created.
Reference: [Khatib and Burdick, 1987] <author> O. Khatib and J. Burdick, </author> <title> "Optimization of Dynamics in Manipulator Design: The operational Space Formulation," </title> <journal> The International Journal of Robotics and Automation, </journal> <volume> 2(2), </volume> <year> 1987, </year> <pages> pp. 90-98. </pages>
Reference-contexts: For instance, there already exists many grasp planning algorithms that could be integrated with the planner [Pertin-Troccaz, 1989]. To compute the grasp assignments, tools for the design of robots such as the minimum isotropic acceleration <ref> [Khatib and Burdick, 1987] </ref> could be used. The minimum isotropic acceleration for a given arm, is the minimum available, end effector accelerations in all possible directions, with the joint velocities at zero.
Reference: [Khatib, 1988] <author> O. Khatib, </author> <title> "Object Manipulation in a Multi-Effector Robot System," Robotics Research 4, </title> <editor> R. Bolles and B. Roth, eds., </editor> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1988, </year> <pages> pp. 137-144. </pages>
Reference-contexts: With the advent of 1.1. PROBLEM AND MOTIVATION 3 (a) (b) (c) (g) (h) (i) 4 CHAPTER 1. INTRODUCTION new control techniques for such multi-arm systems, there already exist real robots in need of a planner to simplify their use <ref> [Khatib, 1988] </ref>[Schneider, 1992]. A motion planner for multiple robot arms has other applications. By replacing the robot models with those of the human arms, the planner could automatically generate simulations of human arm manipulation motions. <p> Consequently, during the execution of the trajectory the controller may oversaturate one or more of the actuators. We tackle this problem by incorporating the controller strategy into the optimization algorithm. For the purpose of illustration, we consider the multi-arm control strategy based on the operational space formulation <ref> [Khatib, 1988] </ref> and the virtual linkage model [Williams and Khatib, 1993]. Other methods such as the object impedance control strategy [Schneider and Cannon, 1992] are incorporated in a similar manner. 5.3.
Reference: [Khatib and Roth, 1991] <author> O. Khatib and B. Roth, </author> <title> "New Robot Mechanisms for New Robot Capabilities," </title> <booktitle> IEEE/RSJ International Conference on IROS, </booktitle> <address> Osaka, Japan, </address> <year> 1991, </year> <pages> pp. 44-49. </pages>
Reference-contexts: This greatly simplifies obtaining accurate dynamic models of the system. In addition, joint torque control allows dynamic decoupling for high-performance control of the fast moving minimum-time trajectories. By executing the time optimal motions on a high performance robot such as the ARTISAN robot 1 <ref> [Khatib and Roth, 1991] </ref>, the issues of accurate dynamic models and torque control are satisfactorily addressed. Tracking errors however, will always exist. This may result in a saturated actuator being called upon to exert additional torque to correct for tracking errors while following the optimal trajectory.
Reference: [Koga and Latombe, 1992] <author> Y. Koga and J.C. Latombe, </author> <title> "Experiments in Dual-Arm Manipulation Planning," </title> <booktitle> Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <address> Nice, France, </address> <year> 1992, </year> <pages> pp. 2238-2245. 126 BIBLIOGRAPHY </pages>
Reference-contexts: The motion of the robots and the movable object are constrained by the obstacles. However, acting alone the robots are not constrained by the movable object since they move in a plane above the object. This is illustrated in Fig. 3.2. In <ref> [Koga and Latombe, 1992] </ref> we describe a method to explicitly build the manipulation graph to solve this two-dimensional problem. The method is an implementation of the ideas proposed in [Alami et al., 1990] and uses a discretized approach rather than Collins' decomposition algorithm.
Reference: [Koga et al., 1992] <author> Y. Koga, T. Lastennet, J.C. Latombe, and T.Y. </author> <title> Li "Multi-Arm Manipulation Planning," </title> <booktitle> Proceedings of the 9th International Symposium on Automation and Robotics in Construction, </booktitle> <address> Tokyo, </address> <month> June </month> <year> 1992, </year> <pages> pp. 281-288. </pages>
Reference-contexts: However, given the success of RPP in planning the motions of multiple robots, it may be possible to extend RPP ? to plan the motions of multiple movable objects. Another possibility may be to extend the method in <ref> [Koga et al., 1992] </ref> where the sequence of object motions are first determined and then each corresponding manipulation path is found. 6.1.2 Finding Locally Optimal Manipulation Paths The techniques presented in Chapter 5 provide the basis for further optimization of the manipulation paths.
Reference: [Koga et al., 1994] <author> Y. Koga, K. Kondo, J. Kuffner, and J.C. Latombe, </author> <title> "Planning Motions with Intentions", </title> <booktitle> Proceedings of SIGGRAPH'94, </booktitle> <address> Orlando, Florida, </address> <month> July 24-29, </month> <year> 1994. </year> <note> To appear in Computer Graphics (1994). </note>
Reference-contexts: These examples are taken from <ref> [Koga et al., 1994] </ref>. Each human arm has seven degrees of freedom, plus an additional nineteen degrees of freedom for the hand. 4.6. RESULTS AND DISCUSSION 61 The non-obstructive configurations for the human arms are ones in which they are held out to the side. <p> Initial experiments in integrating the planner with an inverse kinematics algorithm for the human arms show that realistic animation of human manipulation motions 96 CHAPTER 6. CONCLUSION can be automatically generated <ref> [Koga et al., 1994] </ref>. However, in the current implementation, the planner is unable to consider motions where the arms are required to use their redundant degree of freedom to avoid obstacles.
Reference: [Kondo, 1994] <author> K. Kondo, </author> <title> Inverse Kinematics of a Human Arm, </title> <type> Rep. </type> <institution> STAN-CS-TR-94-1508, Department of Computer Science, Stanford University, </institution> <address> CA, </address> <year> 1994. </year>
Reference-contexts: The robot has six revolute joints and three degrees of freedom for the fingers of the end-effector. The non-obstructive configuration for the robot is one in which it stands vertically. The inverse kinematics of the human arms come from Kondo's algorithm <ref> [Kondo, 1994] </ref> where the redundant degree of freedom is resolved using the sensori-motor transformation model derived from neurophysiological experiments [Soechting and Flanders, 1989]. A detailed description of the algorithm is given in [Kondo, 1994]. In addition, we seat the human on a swivel chair. <p> The inverse kinematics of the human arms come from Kondo's algorithm <ref> [Kondo, 1994] </ref> where the redundant degree of freedom is resolved using the sensori-motor transformation model derived from neurophysiological experiments [Soechting and Flanders, 1989]. A detailed description of the algorithm is given in [Kondo, 1994]. In addition, we seat the human on a swivel chair. By adding this extra degree of freedom, we allow the arms to access a greater region, and hence tackle more interesting manipulation tasks.
Reference: [Kondo, 1991] <author> K. Kondo, </author> <title> "Motion Planning with Six Degrees of Freedom by Multi-Strategic Bi-Directional Heuristic Free-Space Enumeration," </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 7(3), </volume> <year> 1991, </year> <pages> pp. 267-277. </pages>
Reference: [Kuffner et al., 1994] <author> J. Kuffner, K. Kondo, Y. Koga, J.C. Latombe, </author> <title> "End Game", </title> <journal> video transactions of the electronic theater of SIGGRAPH'94. </journal>
Reference-contexts: RESULTS AND DISCUSSION 63 manipulation path. The same discretizations as above were used. There are 40 grasp locations on the box yielding a grasp set of around 2,600 elements. In addition, the planner was used to automatically generate a rather complex computer animation clip <ref> [Kuffner et al., 1994] </ref>. The motions consist of a human figure putting on his glasses, moving a box, lifting a robot out of the box, and then playing chess with the robot. The major motions in the clip were computed by specifying only ten intermediate systems configurations. 64 CHAPTER 4.
Reference: [Lacquaniti and Soechting, 1982] <author> F. Lacquaniti and J.F. Soechting, </author> <title> "Coordination of Arm and Wrist Motion During A Reaching Task," </title> <journal> The Journal of Neuroscience, </journal> <volume> Vol. 2, No. 2, </volume> <year> 1982, </year> <pages> pp. 399-408. </pages>
Reference: [Latombe, 1991] <author> J.C. Latombe, </author> <title> Robot Motion Planning, </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1991. </year>
Reference-contexts: Although no proof exists to show that the problem is intractable, the work of Canny [Canny, 1988], the establishment of the PSPACE-hardness of the problem [Reif, 1979], and other related theoretical work as cited in Chapter 1 of Latombe's book <ref> [Latombe, 1991] </ref> strongly suggests that this is the case. Consider now our problem of moving multiple robots through a series of steps to manipulate an object to a specified goal location. <p> related work can be broken into two parts; manipulation planning, which considers the spatial aspect, and time-optimal control, which considers the temporal aspect. 1.3.1 Manipulation Planning Path planning for one robot among fixed obstacles and various extensions of this basic problem have been actively studied during the past two decades <ref> [Latombe, 1991] </ref>. However, research strictly addressing manipulation planning is fairly recent. The first paper to tackle this problem is by Wilfong [Wilfong, 1988]. It considers a single-body robot translating in a 2D workspace with multiple movable objects. The robot, movable objects, and obstacles are modeled as convex polygons. <p> This is the problem statement for the first step of our two-phase approach for computing manipulation trajectories. Much of this chapter is an extension of ideas presented in [Alami et al., 1990] and Chapter 11 of <ref> [Latombe, 1991] </ref>. Our presentation is general except for the simplification of considering only a single movable object. 13 14 CHAPTER 2. PROBLEM STATEMENT 2.1 Configuration Space Consider the workcell shown in Fig. 2.1. <p> RPP is a practical path planner that for many complicated examples finds the collision-free paths of robots with many degrees of freedom. We refer the reader to Chapter 7 of <ref> [Latombe, 1991] </ref> for details of the BFP and RPP algorithm. In this chapter, we make an in-depth study of how the local approach to motion planning can be applied to a simplified multi-arm manipulation planning problem. <p> To distinguish it from the general BFP we denote the algorithm as BFP ? . This presentation is derived from Chapter 7 of <ref> [Latombe, 1991] </ref>. The three-dimensional configuration space C obj is discretized into a fine regular grid and the path is found using a heuristically guided local search. <p> Although RPP is a general planner for the piano movers' problem, we present the algorithm in the context of finding the desired object path. For a general description of RPP, we refer the reader to Chapter 7 of <ref> [Latombe, 1991] </ref>. We denote the specific algorithm for finding t obj as RPP ? . RPP ? constructs t obj by first placing a fine-resolution grid over C obj , and then searching the grid using a potential field as a guide to the goal configuration. <p> We now give a formal expression of BFP as it applies to finding this object path. For an in-depth explanation of the general BFP algorithm we refer the reader to <ref> [Latombe, 1991] </ref>. <p> A.2 The Potential Function Used in BFP ? We use the following potential function to guide the search described by the above procedure BFP ? in the two-dimensional workspace. It is based on the numerical potential function computed by the NF1 procedure described in Chapter 7 of <ref> [Latombe, 1991] </ref>. NF1 is a general algorithm than can be used to build a potential function in the free subset of GC that has a global minima at the goal configuration and with only saddle points for local minima. <p> do 15 if V (x 0 ) = M then 16 begin 17 V (x 0 ) i + h; [typically h = 1] 18 insert x 0 at the end of L i+1 ; 19 end; Other potential functions could be used such as the NF2 potential described in <ref> [Latombe, 1991] </ref>. Appendix B Connected Components of C arms For finding the object path in our 2D manipulation planner, a method to verify that arm configurations are lying in the same connected component of collision-free arm configurations, namely CC arms , is needed. <p> The algorithm initially attempts to replace subpaths whose lengths are of the order of the total path length. Then, it considers shorter and shorter subpaths until the resolution of GA is attained <ref> [Latombe, 1991] </ref>. More sophisticated techniques may be applied, such as representing the path as an elastic band under tension forces to pull the path tight. Repulsion forces from the obstacles are added to keep the path from "hugging" the obstacles [Quinlan and Khatib, 1993]. <p> In Chapter 4 we give an overview of RPP as it applies to finding the object path. We now give a formal expression of the algorithm. An in-depth explanation of the general RPP algorithm is given in [Barraquand and Latombe, 1991b] and <ref> [Latombe, 1991] </ref>. C.1 The RPP Algorithm The following is taken from [Latombe, 1991]. <p> We now give a formal expression of the algorithm. An in-depth explanation of the general RPP algorithm is given in [Barraquand and Latombe, 1991b] and <ref> [Latombe, 1991] </ref>. C.1 The RPP Algorithm The following is taken from [Latombe, 1991]. <p> C.2 The Potential Field Used in RPP ? We use the following potential function to guide the construction of the path during GRADIENT of the above procedure RPP ? . It is based on the numerical potential function computed by the NF1 procedure as described in <ref> [Latombe, 1991] </ref> and in Appendix A. We have added some additional features to the "configuration space potential" which we found from experiments to improve the gradient motion of the object. C.2.
Reference: [Latombe, 1992] <author> J.C. Latombe, </author> <title> "Geometry and Search in Motion Planning," </title> <journal> Annals of Mathematics and Artificial Intelligence, </journal> <pages> 8(2-4), </pages> <year> 1993, </year> <pages> pp. 215-227. </pages>
Reference-contexts: Unfortunately due to the double-exponential time complexity of Collins' decomposition algorithm, this approach is impractical for dealing with robot systems with many degrees of freedom. Our approach is a local one <ref> [Latombe, 1992] </ref> that consists of placing a fine resolution grid over the continuous configuration space, and then utilizing a heuristically-guided local search over the grid to obtain the solution.
Reference: [Laugier and Pertin, 1983] <author> C. Laugier and J. Pertin, </author> <title> "Automatic Grasping: A Case Study in Accessibility Analysis," </title> <booktitle> Advanced Software in Robotics, </booktitle> <editor> A. Danthine and M. Geradin, eds., </editor> <publisher> North-Holland, </publisher> <address> New York, </address> <year> 1983, </year> <pages> pp. 201-214. </pages>
Reference-contexts: An example would be ensuring that the grasp is stable, that is any slight displacement of the object tends to return the object to its original position within the grasp. There exist implemented grasp planners for parallel-jaw grippers grasping polyhedral objects <ref> [Laugier and Pertin, 1983] </ref>[Tournassoud et. al, 1987]. See [Pertin-Troccaz, 1989] for a broad survey of publications related to grasping. Another potentially important aspect of manipulation planning is determining the stable placements of the object for regrasping actions.
Reference: [Laumond and Alami, 1988] <author> J.P. Laumond and R. Alami, </author> <title> A Geometrical Approach to Planning Manipulation Tasks: The Case of a Circular Robot and a Movable Circular Object Amidst Polygonal Obstacles, </title> <journal> Rep. </journal> <volume> No. 88314, </volume> <pages> LAAS, </pages> <address> Toulouse, </address> <year> 1989. </year> <note> BIBLIOGRAPHY 127 </note>
Reference-contexts: When there is a single movable object, he proposes a complete algorithm that runs in O (n 3 log 2 n) time, where n is the total number of vertices of all the objects in the environment. Laumond and Alami <ref> [Laumond and Alami, 1988] </ref> propose an O (n 4 ) algorithm to solve a similar problem where the robot and the movable object are both discs and the obstacles are polygonal. Alami, Simeon and Laumond [Alami et al., 1990] describe a manipulation planner for one robot and several movable objects. <p> This is an idea originally proposed by Laumond and Alami <ref> [Laumond and Alami, 1988] </ref>. The basic idea is to first determine the connectivity of the free space by manipulation paths using Collins' decompositon algorithm, and then searching within the representation (which has a graph structure) for an actual manipulation path.
Reference: [Laumond and Alami, 1989] <author> J.P. Laumond and R. Alami, </author> <title> A Geometrical Approach to Planning Manipulation Tasks in Robotics, </title> <journal> Rep. </journal> <volume> No. 89261, </volume> <pages> LAAS, </pages> <address> Toulouse, </address> <year> 1989. </year>
Reference-contexts: The method was implemented for two simple robots: a translating polygon [Alami et al., 1990] and a three-revolute-joint planar 1.3. RELATED WORK 7 arm <ref> [Laumond and Alami, 1989] </ref>. A theoretical study of the more general case where the set of legal grasps and placements of the movable objects are continuous sets is presented in [Laumond and Alami, 1989]. <p> RELATED WORK 7 arm <ref> [Laumond and Alami, 1989] </ref>. A theoretical study of the more general case where the set of legal grasps and placements of the movable objects are continuous sets is presented in [Laumond and Alami, 1989]. In our practical approach we concentrate on planning motions for multiple robot arms and a single movable object, as opposed to multiple movable objects and a single robot.
Reference: [Lozano-Perez, 1983] <author> T. Lozano-Perez, </author> <title> "Spatial Planning: A Configuration Space Approach," </title> <journal> IEEE Transactions on Computers, </journal> <volume> 32(2), </volume> <year> 1983, </year> <pages> pp. 108-120. </pages>
Reference: [Lozano-Perez et al., 1987] <author> T. Lozano-Perez et al., "Handey: </author> <title> A Task-Level Robot System," Robotics Research 4, </title> <editor> R. Bolles and B. Roth, eds., </editor> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1988, </year> <pages> pp. 29-36. </pages>
Reference-contexts: At every regrasp, the object is temporarily placed on a horizontal table in a stable position selected by the planner. The work on regrasping presented in [Tournassoud et al., 1987] is part of an integrated manipulation system, handey, described in <ref> [Lozano-Perez et al., 1987] </ref>. This system controls a PUMA arm which builds an assembly in a 3D workspace. It integrates vision, path planning, grasp planning, and motion control. <p> Definition 4.4 The static grasp assignments are the grasp assignments g such that 8q obj with R (g; q obj ) 2 cl (C free ), R (g; q obj ) 2 C stable . 1 In this case, handey could be used <ref> [Lozano-Perez et al., 1987] </ref> 4.2. FINDING THE OBJECT PATH 45 Definition 4.5 The motion grasp assignments are the grasp assignments g such that 8q obj with R (g; q obj ) 2 cl (C free ), R (g; q obj ) 2 C grasp .
Reference: [Lynch, 1993] <author> K.M. Lynch, </author> <title> "Planning Pushing Paths," </title> <booktitle> Proceedings of the JSME International Conference on Advanced Mechatronics, </booktitle> <address> Tokyo, </address> <year> 1993, </year> <pages> pp. 451-456. </pages>
Reference-contexts: Though many interesting problems can be solved, their system is not fully automatic and requires as input intermediate goal locations for the movable object. Lynch addresses the problem of planning pushing paths <ref> [Lynch, 1993] </ref>. He establishes the conditions under which the contact between the robot and the movable object is stable, given the friction coefficients and the center of friction between the movable object and its supporting surface. These conditions yield nonholonomic constraints on the the motion of the robot.
Reference: [Mason and Lynch, 1993] <author> M. Mason and K. Lynch, </author> <title> "Dynamic Manipulation," </title> <booktitle> IEEE/RSJ International Conference on IROS, </booktitle> <address> Yokohama, Japan, </address> <year> 1993, </year> <pages> pp. 152-159. </pages>
Reference-contexts: The realization of such a system is not so far away. 6.1.4 Dynamic Manipulation Planning By simultaneously planning for the position, velocity, and acceleration of the system it would be possible to utilize the dynamic effects on the movable object for the purpose of its manipulation <ref> [Mason and Lynch, 1993] </ref>.
Reference: [McCarthy and Bobrow, 1992] <author> J.M. McCarty and J.E. Bobrow, </author> <title> "The Number of Saturated Actuators and Constraint Forces During Time-Optimal Movement of a General Robotic System," </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 8(3), </volume> <year> 1991, </year> <pages> pp. 407-409. </pages>
Reference-contexts: They model the friction interaction between the gripper and the payload, however they only consider the translational slipping case. McCarthy 10 CHAPTER 1. INTRODUCTION (a) Top View (b) Side View and Bobrow generalize Bobrow's original algorithm for dealing with closed-kinematic-chain robot systems <ref> [McCarthy and Bobrow, 1992] </ref>. However, this algorithm does not consider the control strategy used by the real robots. <p> For the open-chain robot, these input values are found by noting that for a given s we have a linear programming problem with variables _s 2 , s, and t . This was first noted in <ref> [McCarthy and Bobrow, 1992] </ref>. The details to transform the above problem into a linear programming problem is given in Appendix D. Using the Simplex linear programming algorithm, the desired input for the switching point algorithm can be found, resulting in the minimum-time parameterization of the transit paths. <p> Hence, using Simplex and the switching point algorithm we can find the path-constrained-time-optimal motion of a closed-chain robot system <ref> [McCarthy and Bobrow, 1992] </ref>. Unfortunately, these time-optimal motions may not be feasible trajectories for the real robot controller to track. For example, the specific method of the controller for partitioning the effort to the arms may be inconsistent with the resulting partitioning of the optimization. <p> Consequently, for the real robot to actually execute the minimum-time parameterization the dynamic models used by the optimal control algorithms need to be exact, the real robots must perfectly track step responses in the torque (the torque history of the optimal solution may have a bang-bang nature <ref> [McCarthy and Bobrow, 1992] </ref>), and there can be no tracking errors or disturbances to correct during the motion. Of course in reality, none of these assumptions hold. However, there are existing experimental robots and robots under development that closely approach this ideal.
Reference: [McCormick, 1982] <author> E.J. McCormick and M.S. Sanders, </author> <booktitle> Human Factors in Engineering and Design, </booktitle> <publisher> McGraw-Hill Book Company, </publisher> <address> New York, </address> <year> 1982. </year>
Reference-contexts: By adding this extra degree of freedom, we allow the arms to access a greater region, and hence tackle more interesting manipulation tasks. The rotation of the chair tracks the object, to keep it essentially in an optimal position with respect to the workspace of the arms <ref> [McCormick, 1982] </ref>. The dimension of the composite configuration space in these examples is seventy eight. Fig. 4.8 shows a path generated by the planner for the human arms to bring the glasses on the table to the head of the human figure.
Reference: [Meier and Bryson, 1987] <author> E.B. Meier and A.W. Bryson, </author> <title> "An Efficient Algorithm for Time Optimal Control of a Two-Link Manipulator," </title> <booktitle> AIAA Conference on Guidance and Control, </booktitle> <address> Monterey, CA, </address> <year> 1987, </year> <pages> pp. 204-212. </pages>
Reference-contexts: They find the near time-optimal solution of a three-degrees-of-freedom open-kinematic-chain manipulator. However, they simplify the problem 1.3. RELATED WORK 9 by linearizing the equations of motion of the robot. A solution for a two-link manipulator without linearizing the equations of motion, is given by Meier and Bryson <ref> [Meier and Bryson, 1987] </ref>. Unfortunately, for more realistic robot systems with high degrees of freedom their method becomes impractical. An algorithm for a closed chain robot has been developed by Slattery [Slattery, 1991].
Reference: [O'Donnel and Lozano-Perez, 1989] <author> P.A. O'Donnell and T. Lozano-Perez, </author> <title> "Deadlock Free and Collision-Free Coordination of Two Robot Manipulators," </title> <booktitle> Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <address> Scottsdale, AZ, </address> <year> 1989, </year> <pages> pp. 484-489. 128 BIBLIOGRAPHY </pages>
Reference-contexts: While it embeds a solution to many issues not considered in this thesis, it does not address the problem of planning cooperative robot motions to accomplish manipulation tasks. Planning coordinated paths for multiple robots without movable objects, is studied in <ref> [O'Donnel and Lozano-Perez, 1989] </ref>. Their approach consists of two steps. The 8 CHAPTER 1. INTRODUCTION collision-free paths for the multiple robots are computed independently of each other, and then coordinated such that the robots avoid collision with one another.
Reference: [Overmars and Svestka, 1994] <author> M.H. Overmars and P. Svestka, </author> <title> "A Probabilistic Learning Approach to Motion Planning," </title> <booktitle> Proceedings of the First Workshop on the Algorithmic Foundations of Robotics (WAFR), </booktitle> <address> San Francisco, CA, </address> <year> 1994. </year>
Reference: [Pardo et al., 1993] <author> G. Pardo-Castellote, T.Y. Li, Y. Koga, R.H. Cannon, J.C. Latombe, and S.A. Schneider, </author> <title> "Experimental Integration of Planning in a Distributed Control System," </title> <booktitle> Preprints of the 3rd International Symposium on Experimental Robotics, </booktitle> <address> Kyoto, </address> <month> October </month> <year> 1993. </year>
Reference-contexts: The specific example is for two robot arms and a single movable object in a two-dimensional workspace. This scenario comes from the dual-arm robot system developed in the Aerospace Robotics Laboratory, Stanford University <ref> [Pardo et al., 1993] </ref>. We develop techniques for treating this complex manipulation problem (as defined in Chapter 2) as a form of the more basic piano movers' problem, and then solve it using BFP. The resulting implemented planner is resolution-complete.
Reference: [Pfeiffer and Johanni, 1987] <author> J. Pfeiffer and R. Johanni, </author> <title> "A Concept for Manipulation Trajectory Planning," </title> <journal> IEEE Journal of Robotics Automation, </journal> <volume> RA-3(3), </volume> <year> 1987, </year> <pages> pp. 115-123. </pages>
Reference-contexts: For this particular case of the open-chain robot, an elegant graphical method can be employed instead of the Simplex algorithm. We refer the reader to <ref> [Pfeiffer and Johanni, 1987] </ref> for details. 5.2 The Open-Chain Robot Carrying a Payload The simplest strategy for dealing with an open-chain robot carrying a payload is to model the payload as rigidly attached to the manipulator. We can then apply the same method as in Section 5.1.
Reference: [Pfeffer et al., 1989] <author> L.E. Pfeffer, O. Khatib, and J. Hake, </author> <title> "Joint Torque Sensory Feedback in the Control of a PUMA Manipulator," </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 5(4), </volume> <year> 1991, </year> <pages> pp. 418-425. </pages>
Reference-contexts: Of course in reality, none of these assumptions hold. However, there are existing experimental robots and robots under development that closely approach this ideal. Torque-controlled manipulators approach the required capability of tracking step responses in the torque history <ref> [Pfeffer et al., 1989] </ref>, [Vischer and Khatib, 1990]. Furthermore, with low level joint torque control, one can neglect to model friction in the joints and drive-train flexibility for the equations of motion of the system [Pfeffer and Cannon, 1993]. This greatly simplifies obtaining accurate dynamic models of the system.
Reference: [Pfeffer and Cannon, 1993] <author> L.E. Pfeffer and R.H. Cannon, Jr., </author> <title> "Experiments with a Dual-Armed, Cooperative, Flexible-Drivetrain Robot System," </title> <booktitle> Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <address> Atlanta, GA, </address> <year> 1993, </year> <pages> pp. 601-608. </pages>
Reference-contexts: Torque-controlled manipulators approach the required capability of tracking step responses in the torque history [Pfeffer et al., 1989], [Vischer and Khatib, 1990]. Furthermore, with low level joint torque control, one can neglect to model friction in the joints and drive-train flexibility for the equations of motion of the system <ref> [Pfeffer and Cannon, 1993] </ref>. This greatly simplifies obtaining accurate dynamic models of the system. In addition, joint torque control allows dynamic decoupling for high-performance control of the fast moving minimum-time trajectories.
Reference: [Pertin-Troccaz, 1989] <author> J. Pertin-Troccaz, "Grasping: </author> <title> A State of the Art," The Robotics Review 1, </title> <editor> O. Khatib, J.J. Craig, and T. Lozano-Perez, eds., </editor> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1989, </year> <pages> pp. 71-98. </pages>
Reference-contexts: An example would be ensuring that the grasp is stable, that is any slight displacement of the object tends to return the object to its original position within the grasp. There exist implemented grasp planners for parallel-jaw grippers grasping polyhedral objects [Laugier and Pertin, 1983][Tournassoud et. al, 1987]. See <ref> [Pertin-Troccaz, 1989] </ref> for a broad survey of publications related to grasping. Another potentially important aspect of manipulation planning is determining the stable placements of the object for regrasping actions. These would be intermediate placements of the object where the robots can completely ungrasp for the purpose of regrasping. <p> For instance, there already exists many grasp planning algorithms that could be integrated with the planner <ref> [Pertin-Troccaz, 1989] </ref>. To compute the grasp assignments, tools for the design of robots such as the minimum isotropic acceleration [Khatib and Burdick, 1987] could be used.
Reference: [Pieper and Roth, 1969] <author> D. Pieper and B. Roth, </author> <title> "The Kinematics of Manipulators Under Computer Control," </title> <booktitle> Proceedings of the Second International Congress on Theory of Machines and Mechanisms, </booktitle> <volume> Vol. </volume> <pages> 2, </pages> <address> Zakopane, Poland, </address> <year> 1969, </year> <pages> pp. 159-169. </pages>
Reference: [Press et al., 1988] <author> W.H. Press, B.P. Flannery, S.A. Teukolsky and W.T. Vetterling, </author> <title> Numerical Recipes in C, </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, UK, </address> <year> 1988. </year>
Reference-contexts: In Section 5.1, we discuss how Bobrow's algorithm solves this problem. In this Appendix we give the details of how the input values to the switching point algorithm are found using a linear programming approach. The linear programming problem is defined as follows <ref> [Press et al., 1988] </ref>.
Reference: [Quinlan, 1994] <author> S. Quinlan, </author> <type> PhD. </type> <note> dissertation (in preparation) BIBLIOGRAPHY 129 </note>
Reference-contexts: The time for the planner to report failure depends on the problem, with some examples ranging from 30 seconds to a few minutes. To check collisions we use Quinlan's algorithm a fast hierachical collision checking algorithm <ref> [Quinlan, 1994] </ref>. 4.6.1 Three General 6R Robot Arms The system consists of three robot arms, each with six revolute joints, working in a three dimensional workspace. The non-obstructive configuration (q home i ) of each arm is one where the arm stands vertical. <p> The manipulation planner of our first step could provide the initial path from which the elastic band would be created. Currently, Quinlan uses a fast, incremental version of Bobrow's algorithm to time 6.1. SUGGESTIONS FOR FUTURE WORK 95 parameterize the elastic bands <ref> [Quinlan, 1994] </ref>. The time parameterization algorithms in our second step could conceivably be altered into a similar incremental version for time parameterizing the elastic band created from the manipulation path.
Reference: [Quinlan and Khatib, 1993] <author> S. Quinlan and O. Khatib, </author> <title> "Elastic Bands: Connecting Path Planning and Control," </title> <booktitle> Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <address> Atlanta, GA, </address> <year> 1993, </year> <pages> pp. 802-807. </pages>
Reference-contexts: For a repetitive manipulation motion, a locally time-optimal solution would be highly desirable. 6.1.3 Integrating Trajectory Planning with Real Robots The two-phase approach to trajectory planning fits directly into the development of a "user-friendly" multi-arm robot system. In <ref> [Quinlan and Khatib, 1993] </ref>, Quinlan and Khatib present the elastic band concept as a link between path planning and actual robot execution. They transform the computed path into an elastic band to allow its deformation in real-time. <p> More sophisticated techniques may be applied, such as representing the path as an elastic band under tension forces to pull the path tight. Repulsion forces from the obstacles are added to keep the path from "hugging" the obstacles <ref> [Quinlan and Khatib, 1993] </ref>. Appendix C Randomized Planning We use the randomized path planner (hereafter called RPP) to find the object path in step one of our manipulation planner for a three-dimensional workspace. In Chapter 4 we give an overview of RPP as it applies to finding the object path.
Reference: [Reif, 1979] <author> J.H. Reif, </author> <title> "Complexity of the Mover's Problem and Generalizations," </title> <booktitle> Proceedings of the 20th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1979, </year> <pages> pp. 421-427. </pages>
Reference-contexts: The algorithm is thorough but impractical for any robot with many degrees of freedom. Although no proof exists to show that the problem is intractable, the work of Canny [Canny, 1988], the establishment of the PSPACE-hardness of the problem <ref> [Reif, 1979] </ref>, and other related theoretical work as cited in Chapter 1 of Latombe's book [Latombe, 1991] strongly suggests that this is the case. Consider now our problem of moving multiple robots through a series of steps to manipulate an object to a specified goal location.
Reference: [Schneider and Cannon, 1992] <author> S.A. Schneider and R.H. Cannon, </author> <title> "Object Impedance Control for Cooperative Manipulation: Theory and Experimental Results," </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 8(3), </volume> <year> 1992, </year> <pages> pp. 383-394. </pages>
Reference-contexts: For the purpose of illustration, we consider the multi-arm control strategy based on the operational space formulation [Khatib, 1988] and the virtual linkage model [Williams and Khatib, 1993]. Other methods such as the object impedance control strategy <ref> [Schneider and Cannon, 1992] </ref> are incorporated in a similar manner. 5.3. THE CLOSED-CHAIN ROBOT SYSTEM 75 5.3.1 Control Consistent Minimum-Time Parameterization The operational space formulation and the virtual linkage model provide tools to break the control strategy into essentially two components.
Reference: [Shiller and Dubowsky, 1989] <author> Z. Shiller and S. Dubowsky, </author> <title> "Robot Path Planning with Obstacles, Acturator, Gripper, and Payload Constraints," </title> <journal> The International Journal of Robotics Research, </journal> <volume> 8(6), </volume> <year> 1989, </year> <pages> pp. 3-18. </pages>
Reference-contexts: Others have modified Bobrow's original algorithm to find the path-constrained time-optimal motion for an open-kinematic-chain robot carrying a payload, and for a closed-kinematic-chain robot system. Shiller and Dubowsky <ref> [Shiller and Dubowsky, 1989] </ref> find the time-optimal motion of an open-kinematic-chain robot subject to payload constraints. Because the inertial effects on the payload may exceed the capacity of the gripper to hold onto the payload, Shiller and Dubowsky consider a no-slip constraint for the payload.
Reference: [Shiller and Lu, 1990] <author> Z. Shiller and H. H. Lu, </author> <title> "Robust Computation of Path Constrained Time Optimal Motions," </title> <booktitle> Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <address> Cincinnati, OH, </address> <month> May </month> <year> 1990. </year>
Reference-contexts: DYNAMIC CONSTRAINTS AND TRAJECTORY PLANNING Bobrow et al. show in [Bobrow et al., 1985] that the optimal curve has s at its maximum possible acceleration or deceleration at all times (Shiller and Lu show that there exist some special paths with critical arcs where this is not true <ref> [Shiller and Lu, 1990] </ref> we assume our paths are without the critical arcs). This reduces the problem to finding the switching points from maximum acceleration to maximum deceleration while satisfying the aforementioned constraints. An efficient and robust method for finding these switching points is given in [Shiller and Lu, 1990]. <p> this is not true <ref> [Shiller and Lu, 1990] </ref> we assume our paths are without the critical arcs). This reduces the problem to finding the switching points from maximum acceleration to maximum deceleration while satisfying the aforementioned constraints. An efficient and robust method for finding these switching points is given in [Shiller and Lu, 1990]. The algorithm for finding the switching points makes use of what is called the velocity limit curve and the maximum and minimum s for a given s and _s.
Reference: [Shiller and Dubowsky, 1991] <author> Z. Shiller and S. Dubowsky, </author> <title> "On Computing the Global Time-Optimal Motions of Robotic Manipulators in the Presence of Obstacle," </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 7(6), </volume> <month> Dec. </month> <year> 1991. </year>
Reference-contexts: Furthermore, by perturbing this path shape and finding the minimum travel time for each new shape, a path that achieves a local minimum of the travel time while avoiding obstacles can be found <ref> [Shiller and Dubowsky, 1991] </ref>[Bobrow, 1988]. Others have modified Bobrow's original algorithm to find the path-constrained time-optimal motion for an open-kinematic-chain robot carrying a payload, and for a closed-kinematic-chain robot system. Shiller and Dubowsky [Shiller and Dubowsky, 1989] find the time-optimal motion of an open-kinematic-chain robot subject to payload constraints.
Reference: [Shin and Mackay, 1985] <author> K.G. Shin and N.D. McKay, </author> <title> "Minimum-Time Control of Robotic Manipulators with Geometric Path Constraints," </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> AC-30(6), </volume> <year> 1985, </year> <pages> pp. 531-541. </pages>
Reference-contexts: To time parameterize the computed paths, we use the well established algorithm 6 CHAPTER 1. INTRODUCTION of [Bobrow et al., 1985] and <ref> [Shin and Mackay, 1985] </ref>. <p> In Chapter 5 an algorithm for computing time-optimal motions of the robot arms constrained to the previously computed manipulation paths is described. The scheme is based on the algorithm proposed independently by Bobrow et al. [Bobrow et al., 1985] and by Shin and Mackay <ref> [Shin and Mackay, 1985] </ref>. Finally, in Chapter 6 we discuss directions for future research. Chapter 2 Problem Statement We address the problem of automatically computing the trajectories of multiple robot arms to manipulate an object to a specified location.
Reference: [Slattery, 1991] <author> R.A. Slattery, </author> <title> Optimal Control of Closed Chain Robotic Systems, </title> <type> Ph.D. Dissertation, </type> <institution> Dept. of Aerospace Engineering, Stanford University, </institution> <year> 1991. </year>
Reference-contexts: Although not necessary for practicality, we also include the time-optimal aspect. Existing methods to determine the time-optimal trajectory between two states of a robot with many degrees of freedom are notoriously slow to converge on a solution <ref> [Slattery, 1991] </ref>. This is without the obstacle avoidance problem. Based on this result, it seems unlikely to find a practical algorithm that in one step computes time-optimal manipulation trajectories. <p> A solution for a two-link manipulator without linearizing the equations of motion, is given by Meier and Bryson [Meier and Bryson, 1987]. Unfortunately, for more realistic robot systems with high degrees of freedom their method becomes impractical. An algorithm for a closed chain robot has been developed by Slattery <ref> [Slattery, 1991] </ref>. Unfortunately, even for a relatively simple robot system the method is extremely slow in converging to the solution. None of these methods consider obstacle avoidance.
Reference: [Soechting and Flanders, 1989] <author> J.F. Soechting and M. Flanders, </author> <title> "Sensorimotor Representations for Pointing to Targets in Three Dimensional Space," </title> <journal> Journal of Neurophysiology, </journal> <volume> 62(2), </volume> <year> 1989, </year> <note> pp.582-594. 130 BIBLIOGRAPHY </note>
Reference-contexts: The non-obstructive configuration for the robot is one in which it stands vertically. The inverse kinematics of the human arms come from Kondo's algorithm [Kondo, 1994] where the redundant degree of freedom is resolved using the sensori-motor transformation model derived from neurophysiological experiments <ref> [Soechting and Flanders, 1989] </ref>. A detailed description of the algorithm is given in [Kondo, 1994]. In addition, we seat the human on a swivel chair. By adding this extra degree of freedom, we allow the arms to access a greater region, and hence tackle more interesting manipulation tasks.
Reference: [Tremblay and Cutkosky, 1993] <author> M.R. Tremblay and M.R. Cutkosky, </author> <title> "Estimating Friction Using Incipient Slip Sensing During a Manipulation Task," </title> <booktitle> Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <address> Atlanta, GA, </address> <year> 1993, </year> <pages> pp. 429-434. </pages>
Reference: [Tournassoud et al., 1987] <author> P. Tournassoud, T. Lozano-Perez, and E. Mazer, "Re-grasping," </author> <booktitle> Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <address> Raleigh, NC, </address> <year> 1987, </year> <pages> pp. 1924-1928. </pages>
Reference-contexts: These conditions yield nonholonomic constraints on the the motion of the robot. One could view this pushing motion as a manipulation task. However, Lynch does not consider the regrasping operations. Regrasping is a vital component in manipulation tasks. Tournassoud, Lozano-Perez, and Mazer <ref> [Tournassoud et al., 1987] </ref> specifically address this problem. They describe a method for planning a sequence of regrasp operations by a single arm to change an initial grasp into a goal grasp. <p> At every regrasp, the object is temporarily placed on a horizontal table in a stable position selected by the planner. The work on regrasping presented in <ref> [Tournassoud et al., 1987] </ref> is part of an integrated manipulation system, handey, described in [Lozano-Perez et al., 1987]. This system controls a PUMA arm which builds an assembly in a 3D workspace. It integrates vision, path planning, grasp planning, and motion control.
Reference: [Vischer and Khatib, 1990] <author> D. Vischer and O. Khatib, </author> <title> "Design and Development of Torque-Controlled Joints," Experimental Robotics I, </title> <editor> V. Hayward and O. Khatib, eds., </editor> <publisher> Springer-Verlag, </publisher> <address> Berlin, Heideleberg, </address> <year> 1990, </year> <pages> pp. 271-286. </pages>
Reference-contexts: Of course in reality, none of these assumptions hold. However, there are existing experimental robots and robots under development that closely approach this ideal. Torque-controlled manipulators approach the required capability of tracking step responses in the torque history [Pfeffer et al., 1989], <ref> [Vischer and Khatib, 1990] </ref>. Furthermore, with low level joint torque control, one can neglect to model friction in the joints and drive-train flexibility for the equations of motion of the system [Pfeffer and Cannon, 1993]. This greatly simplifies obtaining accurate dynamic models of the system.
Reference: [Wilfong, 1988] <author> G. Wilfong, </author> <title> "Motion Planning in the Presence of Movable Obstacles," </title> <booktitle> Proceedings of the 4th ACM Symposium on Computational Geometry, </booktitle> <year> 1988, </year> <pages> pp. 279-288. </pages>
Reference-contexts: However, research strictly addressing manipulation planning is fairly recent. The first paper to tackle this problem is by Wilfong <ref> [Wilfong, 1988] </ref>. It considers a single-body robot translating in a 2D workspace with multiple movable objects. The robot, movable objects, and obstacles are modeled as convex polygons. The robot "grasps" an object by making one of its edges coincide with an edge of the object.
Reference: [Williams and Khatib, 1993] <author> D. Williams and O. Khatib, </author> <title> "The Virtual Linkage: </title>
Reference-contexts: We tackle this problem by incorporating the controller strategy into the optimization algorithm. For the purpose of illustration, we consider the multi-arm control strategy based on the operational space formulation [Khatib, 1988] and the virtual linkage model <ref> [Williams and Khatib, 1993] </ref>. Other methods such as the object impedance control strategy [Schneider and Cannon, 1992] are incorporated in a similar manner. 5.3. <p> The coefficient of friction is 0.905 and each finger exerts a gripping force of 50 N. The grasp description matrix comes from the example given in <ref> [Williams and Khatib, 1993] </ref>. For the path shown in Fig. 5.16 a minimum time solution of 0.809s is computed. The torque bounds for each arm are 5.5. SIMULATION RESULTS 89 Payload @ @R (a) Initial config. (b) Motion the same as the previous examples.
References-found: 67

