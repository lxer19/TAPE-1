URL: http://drl.cs.uiuc.edu/pubs/SecureDBAccess.ps
Refering-URL: http://drl.cs.uiuc.edu/security/pubs.html
Root-URL: http://www.cs.uiuc.edu
Email: febina,robmg@ncsa.uiuc.edu fvjones,winslettg@cs.uiuc.edu  
Title: Secure Access to Data Over the Internet  
Author: Eric Bina Vicki Jones Rob McCool Marianne Winslett 
Address: 1304 W. Springfield Ave 152 C.A.B., 605 E. Springfield Ave.  Urbana, IL 61801 Champaign, IL 61820  
Affiliation: National Center for Department of Computer Science Supercomputing Applications  University of Illinois University of Illinois  
Abstract: Current developments in small, portable computers, and the proliferation of online information servers world-wide, will place new requirements on computer software to support appropriate notions of privacy and security. Our research goal is to develop approaches to authentication and authorization for databases operating in an open environment, to allow databases to deal appropriately with requests from unknown individuals. In this paper, we first discuss the major security issues currently preventing greater access to databases on the Internet. We then propose a framework suitable for secure access to databases by a wide audience over the Internet, making use of World-Wide Web information servers [5], and a modified version of the NCSA Mosaic Internet browser. Our framework also uses role wrappers, software modules that assign a role or roles to an incoming database request, based on the credentials submitted with the request. The roles assigned to the request are to be used internally by the DBMS to determine what data the request is authorized to access, as well as by any application software encapsulating the database. We also discuss the results obtained from embodying our framework in an example application, using the RIPEM implementation of the Privacy Enhanced Mail authentication protocol and an ONTOS database of student information. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Abadi, M. Burrows, B. Lampson, and G. Plotkin, </author> <title> "A Calculus for Access Control in Distributed Systems", </title> <type> Technical report #70, </type> <institution> Digital Equipment Corporation, Systems Research Center, </institution> <month> February </month> <year> 1991, </year> <note> revised August 1991. </note>
Reference-contexts: Unfortunately, the current state of the art in formal protocol analysis is relatively primitive, with no agreement yet on what a formal analysis is supposed to show <ref> [1, 4, 16] </ref>. Beyond that, one would like to have some assurance that a particular implementation actually implements the protocol correctly. For protocols that have been constructed and criticized publicly, much information and discussion (and occasionally, some formal analysis) is available about the guarantees they make.
Reference: [2] <author> M. Andreesen and E. Bina, </author> <title> "NCSA Mosaic: A Global Hypermedia System," </title> <note> to appear in Internet Research, </note> <year> 1994. </year>
Reference-contexts: The most popular interface to Web servers, with over a million users after its first year of life [12], is NCSA Mosaic <ref> [2] </ref> (see Figure 2). Mosaic provides a unified interface for accessing information in Web, Gopher, WAIS, and FTP sites. Mosaic runs on X and OpenWindows platforms, PCs, and Macintoshes, and is available free of charge to individuals by anonymous ftp to ftp.ncsa.uiuc.edu.
Reference: [3] <author> D. Balenson, </author> <title> "Privacy Enhancement for Internet Electronic Mail: Part III|Algorithms, Modes, and Identifiers," </title> <type> RFC 1423, </type> <month> February </month> <year> 1993. </year>
Reference-contexts: For a quick overview of the concepts, we recommend [17]. The best known authentication protocols today are probably Kerberos [14] and PEM <ref> [3, 10] </ref>. Kerberos was designed for a large-scale open-network computing environment of privately owned and operated workstations. Kerberos uses a symmetric cryptosystem with trusted third-party authentication servers. PEM was developed to provide security for email users in the Internet community.
Reference: [4] <author> M. Bellare and P. Rogaway, </author> <title> "Entity Authentication and Key Distribution," </title> <booktitle> In Advances in Cryptology|CRYPTO '93 Proceedings, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Unfortunately, the current state of the art in formal protocol analysis is relatively primitive, with no agreement yet on what a formal analysis is supposed to show <ref> [1, 4, 16] </ref>. Beyond that, one would like to have some assurance that a particular implementation actually implements the protocol correctly. For protocols that have been constructed and criticized publicly, much information and discussion (and occasionally, some formal analysis) is available about the guarantees they make.
Reference: [5] <author> Tim Berners-Lee, Robert Cailliau, Jean-Francois Groff, and Bernd Pollermann, </author> <title> "World-Wide Web: The Information Universe," </title> <journal> Electronic Networking: Research, Applications, and Policy, </journal> <volume> volume 1, number 2, </volume> <month> Spring </month> <year> 1992. </year>
Reference-contexts: By putting the encapsulating program on or in a general-purpose information server, such as a Web server, the database can be made widely known and easily accessible (the third approach presented in Figure 1 (c)). The World-Wide Web <ref> [5, 7, 8] </ref> is a set of interlinked hypermedia information retrieval servers spread across the Internet, aiming to give access to a large universe of documents. There are over 2000 Web servers world-wide today, with an average of 8 new services coming on-line each day.
Reference: [6] <author> Tim Berners-Lee and Daniel Connolly, </author> <title> "Hypertext Markup Language," </title> <note> available electronically at URL ftp://info.cern.ch/pub/www/doc/html-spec.ps, </note> <year> 1993. </year>
Reference: [7] <author> Tim Berners-Lee, </author> <title> "Hypertext Transfer Protocol," </title> <note> available electronically at URL ftp://info.cern.ch/pub/www/doc/http-spec.ps, </note> <year> 1993. </year>
Reference-contexts: By putting the encapsulating program on or in a general-purpose information server, such as a Web server, the database can be made widely known and easily accessible (the third approach presented in Figure 1 (c)). The World-Wide Web <ref> [5, 7, 8] </ref> is a set of interlinked hypermedia information retrieval servers spread across the Internet, aiming to give access to a large universe of documents. There are over 2000 Web servers world-wide today, with an average of 8 new services coming on-line each day.
Reference: [8] <author> Tim Berners-Lee, </author> <title> "Uniform Resource Locators," </title> <note> available electronically at URL ftp://info.cern.ch/pub/www/doc/url7a.ps, </note> <year> 1993. </year>
Reference-contexts: By putting the encapsulating program on or in a general-purpose information server, such as a Web server, the database can be made widely known and easily accessible (the third approach presented in Figure 1 (c)). The World-Wide Web <ref> [5, 7, 8] </ref> is a set of interlinked hypermedia information retrieval servers spread across the Internet, aiming to give access to a large universe of documents. There are over 2000 Web servers world-wide today, with an average of 8 new services coming on-line each day.
Reference: [9] <author> D. Jonscher, </author> <title> "Extending Access Control with Duties," </title> <booktitle> Proceedings of the 6th IFIP Workshop on Database Security, </booktitle> <address> Vancouver, BC, Canada, </address> <year> 1992. </year>
Reference-contexts: We anticipate that DBMSes will offer more powerful support for roles in the future than they do today. Research on roles has been picking up steam recently in the distributed systems and database communities (see, e.g., <ref> [13, 15, 9, 11] </ref>), but many theoretical questions remain and implementation issues abound. For some applications, such as the one we discuss in Section 4, knowledge of the user's identity may be all that is needed to assign a request to a role.
Reference: [10] <author> Stephen T. Kent, </author> <title> "Internet Privacy Enhanced Mail," </title> <journal> Communications of the ACM , 36(8) </journal> <pages> 48-60, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: For a quick overview of the concepts, we recommend [17]. The best known authentication protocols today are probably Kerberos [14] and PEM <ref> [3, 10] </ref>. Kerberos was designed for a large-scale open-network computing environment of privately owned and operated workstations. Kerberos uses a symmetric cryptosystem with trusted third-party authentication servers. PEM was developed to provide security for email users in the Internet community.
Reference: [11] <author> F. </author> <title> Lochovsky, "Role-Based Security in Data Base Management Systems," Database Security: Status and Prospects, </title> <editor> C. E. Landwehr, Editor, </editor> <year> 1988. </year>
Reference-contexts: We anticipate that DBMSes will offer more powerful support for roles in the future than they do today. Research on roles has been picking up steam recently in the distributed systems and database communities (see, e.g., <ref> [13, 15, 9, 11] </ref>), but many theoretical questions remain and implementation issues abound. For some applications, such as the one we discuss in Section 4, knowledge of the user's identity may be all that is needed to assign a request to a role.
Reference: [12] <author> Bob Metcalfe, </author> <title> "Mosaic: A useful tool to help you navigate the Internet," </title> <type> InfoWorld , 16(13), </type> <month> March 28, </month> <year> 1994. </year>
Reference-contexts: The most popular interface to Web servers, with over a million users after its first year of life <ref> [12] </ref>, is NCSA Mosaic [2] (see Figure 2). Mosaic provides a unified interface for accessing information in Web, Gopher, WAIS, and FTP sites. Mosaic runs on X and OpenWindows platforms, PCs, and Macintoshes, and is available free of charge to individuals by anonymous ftp to ftp.ncsa.uiuc.edu.
Reference: [13] <author> F. Rabitti, E. Bertino, W. Kim, and D. Woelk, </author> <title> "A Model of Authorization for Next-Generation Database Systems," </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 16:1, </volume> <year> 1991. </year>
Reference-contexts: it determine the appropriate authorizations for a client, especially one not previously known to the server? We believe that the most promising approach to discretionary security is role-based security, in which a DBMS client is assigned one or more roles, which in turn determine the access authorizations for the client <ref> [13] </ref>. We anticipate that DBMSes will offer more powerful support for roles in the future than they do today. Research on roles has been picking up steam recently in the distributed systems and database communities (see, e.g., [13, 15, 9, 11]), but many theoretical questions remain and implementation issues abound. <p> We anticipate that DBMSes will offer more powerful support for roles in the future than they do today. Research on roles has been picking up steam recently in the distributed systems and database communities (see, e.g., <ref> [13, 15, 9, 11] </ref>), but many theoretical questions remain and implementation issues abound. For some applications, such as the one we discuss in Section 4, knowledge of the user's identity may be all that is needed to assign a request to a role.
Reference: [14] <author> J. Steiner, C. Neuman, and J. Schiller, </author> <title> "Kerberos: An Authentication Service for Open Network Systems," </title> <booktitle> In Proceedings of the Winter USENIX Conference, </booktitle> <year> 1988. </year>
Reference-contexts: For a quick overview of the concepts, we recommend [17]. The best known authentication protocols today are probably Kerberos <ref> [14] </ref> and PEM [3, 10]. Kerberos was designed for a large-scale open-network computing environment of privately owned and operated workstations. Kerberos uses a symmetric cryptosystem with trusted third-party authentication servers. PEM was developed to provide security for email users in the Internet community.
Reference: [15] <author> T. Ting, S. Demurjian, and M. Hu, </author> <title> "A Specification Methodology for User-Role Based Security in an Object-Oriented Design Model: Experience with a Health Care Application," </title> <booktitle> Proceedings of the 6th IFIP Workshop on Database Security, </booktitle> <address> Vancouver, BC, Canada, </address> <year> 1992. </year>
Reference-contexts: We anticipate that DBMSes will offer more powerful support for roles in the future than they do today. Research on roles has been picking up steam recently in the distributed systems and database communities (see, e.g., <ref> [13, 15, 9, 11] </ref>), but many theoretical questions remain and implementation issues abound. For some applications, such as the one we discuss in Section 4, knowledge of the user's identity may be all that is needed to assign a request to a role.
Reference: [16] <author> T. Woo and S. Lam, </author> <title> "Authorization in Distributed Systems: A Formal Approach," </title> <booktitle> Proceedings: IEEE Symposium on Research in Security and Privacy, </booktitle> <address> Oakland, CA, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: Unfortunately, the current state of the art in formal protocol analysis is relatively primitive, with no agreement yet on what a formal analysis is supposed to show <ref> [1, 4, 16] </ref>. Beyond that, one would like to have some assurance that a particular implementation actually implements the protocol correctly. For protocols that have been constructed and criticized publicly, much information and discussion (and occasionally, some formal analysis) is available about the guarantees they make.
Reference: [17] <author> T. Y. C. Woo and S. S. Lam, </author> <title> "Authentication for Distributed Systems, </title> <journal> IEEE Computer, </journal> <volume> volume 25, number 1, </volume> <month> January </month> <year> 1992. </year> <month> 14 </month>
Reference-contexts: For a quick overview of the concepts, we recommend <ref> [17] </ref>. The best known authentication protocols today are probably Kerberos [14] and PEM [3, 10]. Kerberos was designed for a large-scale open-network computing environment of privately owned and operated workstations. Kerberos uses a symmetric cryptosystem with trusted third-party authentication servers. <p> Protocols that rely on the client and server directly possessing a shared key may not scale up well due to problems with secure distribution (discussed below) <ref> [17] </ref>. Ease of Use. Some protocols are easier to set up and use than others. <p> Many existing protocols authenticate two communicating peers with the help of a third-party service that gives a session key to the two parties who want to communicate with one another. The parties then use the session key to exchange messages directly with one another to perform mutual authentication <ref> [17] </ref>. This approach is not ideal for stateless communication such as that found in Web servers, because of the large overhead that would accompany every request and response.
References-found: 17

