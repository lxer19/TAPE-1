URL: http://www.cs.utexas.edu/users/pclark/papers/aaai97.ps
Refering-URL: http://www.cs.utexas.edu/users/mfkb/papers/
Root-URL: 
Email: clarkp@redwood.rt.cs.boeing.com  porter@cs.utexas.edu  
Title: Building Concept Representations from Reusable Components  
Author: Peter Clark Bruce Porter 
Address: PO Box 3707, Seattle, WA 98124  Austin, TX 78712  
Affiliation: Boeing Company  Department of Computer Sciences University of Texas at  
Web: http://www.cs.utexas.edu/users/pclark/papers/aaai97.ps  
Note: (In Proc AAAI'97, pp369-376, CA:AAAI)  
Abstract: Our goal is to build knowledge-based systems capable of answering a wide variety of questions, including questions that are unanticipated when the knowledge base is built. For systems to achieve this level of competence and generality, they require the ability to dynamically construct new concept representations, and to do so in response to the questions and tasks posed to them. Our approach to meeting this requirement is to build knowledge bases of generalized, representational components, and to develop methods for automatically composing components on demand. This work extends the normal inheritance approach used in frame-based systems, and imports ideas from several different areas of AI, in particular compositional modeling, terminological reasoning, and ontological engineering. The contribution of this work is a novel integration of these methods that improves the efficiency of building knowledge bases and the robustness of using them. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Andersen, C. </author> <year> 1996. </year> <title> A computational model of complex concept composition. </title> <type> Master's thesis, </type> <institution> Dept CS, Univ Texas at Austin. </institution>
Reference-contexts: All of these properties need not be explicitly encoded on the concept's frame. Rather, a concept can be composed from other concepts in two ways: Inheritance: A concept declared to be a specialization of (possibly multiple) concepts will automatically acquire their properties. For example, from <ref> (Andersen 1996) </ref>, the concept house-boat could be specified as a specialization of house and boat, gaining all their properties, such as inhabited by humans and floats on water.
Reference: <editor> Baader, F., and Hollunder, B. </editor> <year> 1991. </year> <title> A terminological knowledge representation system with complete inference algorithms. </title> <booktitle> In Proc First Int Workshop on Processing Declarative Knowledge, volume 572 of Lecture Notes in CS, </booktitle> <pages> 67-85. </pages> <publisher> Springer-Verlag. </publisher>
Reference-contexts: There is a well-known trade-off to handle here, between expressivity on one hand, and completeness and tractability of inference on the other. With the exception of a few systems, eg. KRIS <ref> (Baader & Hollunder 1991) </ref>, most reasoners tolerate some incompleteness in inference, so that a more expressive representation language can be used. Our algorithm similarly does this.
Reference: <author> Batory, D., and O'Malley, S. </author> <year> 1992. </year> <title> The design and implementation of hierarchical software systems with reusable components. </title> <journal> ACM Transactions on Software Engineering and Methodology. </journal>
Reference: <author> Blair, P.; Guha, R. V.; and Pratt, W. </author> <year> 1992. </year> <title> Mi-crotheories: An ontological engineer's guide. </title> <institution> Tech Rept CYC-050-92, MCC, Austin, TX. </institution>
Reference-contexts: With regard to building knowledge bases, at a gen-eral level, we follow the principle of structuring a large theory as a set of smaller, more manageable ones, as in "ontologies" in ontolingua (Farquhar, Fikes, & Rice 1997) and TOVE (Fox & Gruninger 1994), and "mi-crotheories" in Cyc <ref> (Blair, Guha, & Pratt 1992) </ref>. However, our work differs in two important ways. <p> Recent work in compositional modeling for selecting and managing assumptions, eg. (Falkenhainer & Forbus 1991), and on the use of lifting axioms to transform axioms across contexts based on differing assumptions, eg. <ref> (Blair, Guha, & Pratt 1992) </ref>, point to methods for addressing these issues. Finally, methods for ensuring and maintaining consistency of components are needed, especially as a knowledge base evolves over time. We have recently started research on this issue (Correl & Porter 1997).
Reference: <author> Brachman, R. J.; McGuinness, D. L.; Patel-Schneider, P. F.; Resnick, L. A.; and Borgida, A. </author> <year> 1991. </year> <title> Living with CLASSIC: When and how to use a KL-ONE like language. </title> <editor> In Sowa, J., ed., </editor> <booktitle> Principles of Semantic Networks. </booktitle> <address> CA: </address> <publisher> Kaufmann. </publisher>
Reference-contexts: It is also similar to the use of signatures to characterize theories in category theory (Pierce 1991), where our participants correspond to sorts in category theory. With regard to combining components to build concept representations, our approach relates to work in description logics (DLs), such as Classic <ref> (Brachman et al. 1991) </ref> and Loom (MacGregor & Bates 1987). Building a concept representation is similar to the process of `normalizing' a conjunctive DL concept description, during which information about that concept is gathered and combined.
Reference: <author> Chandrasekaren, B. </author> <year> 1986. </year> <title> Generic tasks in knowledge-based reasoning: High-level building blocks for expert system design. </title> <journal> IEEE Expert 23-30. </journal>
Reference-contexts: In the wider context of knowledge-based systems research, our concern is with building domain models composi-tionally, as opposed to building problem-solving methods compositionally, eg. <ref> (Chandrasekaren 1986) </ref>. Finally, it is important to note that we are not proposing a new knowledge representation language; rather, we are concerned with how existing languages can be used to build representations in flexible, reusable ways.
Reference: <author> Correl, S., and Porter, B. </author> <year> 1997. </year> <title> Iterative refinement of knowledge-bases with consistency properties. </title> <editor> In Farquhar, A., and Gruninger, M., eds., </editor> <booktitle> Proc AAAI Spring Symposium on Ontological Engineering. </booktitle> <publisher> AAAI (in press). </publisher> <pages> 17-24. </pages>
Reference-contexts: Finally, methods for ensuring and maintaining consistency of components are needed, especially as a knowledge base evolves over time. We have recently started research on this issue <ref> (Correl & Porter 1997) </ref>. Summary The overall goal of our research is to build knowledge-based systems capable of answering a wide variety of questions, including questions that are unanticipated when the knowledge base is built.
Reference: <author> Crawford, J. M., and Kuipers, B. J. </author> <year> 1991. </year> <title> Algernon a tractable system for knowledge-representation. </title> <journal> SIGART Bulletin 2(3) </journal> <pages> 35-44. </pages>
Reference-contexts: With the exception of a few systems, eg. KRIS (Baader & Hollunder 1991), most reasoners tolerate some incompleteness in inference, so that a more expressive representation language can be used. Our algorithm similarly does this. Recent work on access limitation <ref> (Crawford & Kuipers 1991) </ref> has shown how tractability can be maintained through the use of access paths, which guide the inferences that an inference engine might make. For similar purposes, our algorithm uses access paths as the language for querying the knowledge base.
Reference: <author> Donini, F. M.; Hollunder, B.; Lenzerini, M.; Nardi, D.; Spaccamela, A.; and Nutt, W. </author> <year> 1992. </year> <title> The complexity of existential quantification in concept languages. </title> <booktitle> Artificial Intelligence </booktitle> 53(2/3):309-327. 
Reference-contexts: As complete reasoning in the presence of existential quantifiers is undecidable <ref> (Donini et al. 1992) </ref>, our algorithm only generates and classifies Skolem individ proach is that the concept description which is built is question-specific, containing just that information required to answer the question (s) which were posed.
Reference: <author> Eilerts, E. </author> <year> 1994. </year> <title> Kned: An interface for a frame-based knowledge representation system. </title> <type> Master's thesis, </type> <institution> Dept CS, Univ Texas at Austin, USA. </institution>
Reference-contexts: Finally, it is important to note that we are not proposing a new knowledge representation language; rather, we are concerned with how existing languages can be used to build representations in flexible, reusable ways. While this work has been implemented using a particular representation language called KM <ref> (Eilerts 1994) </ref>, the approach could also be applied using several other existing languages, eg. Algernon (Craw-ford & Kuipers 1991). A Simple Example One of our target domains, which we use for illustration throughout this paper, is bioremediation: the removal of toxic waste using micro-organisms that convert pollutant into harmless bi-products.
Reference: <author> Falkenhainer, B., and Forbus, K. </author> <year> 1991. </year> <title> Compositional modelling: Finding the right model for the job. </title> <booktitle> Artificial Intelligence 51 </booktitle> <pages> 95-143. </pages>
Reference-contexts: Second, we have not addressed the issue of handling components based on conflicting assumptions, or for deciding which set of assumptions is appropriate for a particular task. Recent work in compositional modeling for selecting and managing assumptions, eg. <ref> (Falkenhainer & Forbus 1991) </ref>, and on the use of lifting axioms to transform axioms across contexts based on differing assumptions, eg. (Blair, Guha, & Pratt 1992), point to methods for addressing these issues.
Reference: <editor> Farquhar, A., and Gruninger, M., eds. </editor> <booktitle> 1997. Proc AAAI Spring Symposium on Ontological Engineering. </booktitle> <publisher> AAAI (in press). </publisher>
Reference-contexts: This view borrows heavily from work in compositional modeling, where a model fragment encapsulates a system of relationships describing some aspect of a physical phenomenon, and can be applied when that phenomenon occurs (Levy 1993; Falkenhainer & Forbus 1991). It also draws from recent work in ontological engineering, eg. <ref> (Farquhar & Gruninger 1997) </ref>, in which an ontology encapsulates axioms describing a theory about some area (eg. substances, ceramics, sets). <p> With regard to building knowledge bases, at a gen-eral level, we follow the principle of structuring a large theory as a set of smaller, more manageable ones, as in "ontologies" in ontolingua <ref> (Farquhar, Fikes, & Rice 1997) </ref> and TOVE (Fox & Gruninger 1994), and "mi-crotheories" in Cyc (Blair, Guha, & Pratt 1992). However, our work differs in two important ways.
Reference: <author> Farquhar, A.; Fikes, R.; and Rice, J. </author> <year> 1997. </year> <title> Tools for assembling modular ontologies in ontolingua. </title> <booktitle> In Proc of the Fourteenth National Conference on Artificial Intelligence (AAAI-97). </booktitle>
Reference-contexts: This view borrows heavily from work in compositional modeling, where a model fragment encapsulates a system of relationships describing some aspect of a physical phenomenon, and can be applied when that phenomenon occurs (Levy 1993; Falkenhainer & Forbus 1991). It also draws from recent work in ontological engineering, eg. <ref> (Farquhar & Gruninger 1997) </ref>, in which an ontology encapsulates axioms describing a theory about some area (eg. substances, ceramics, sets). <p> With regard to building knowledge bases, at a gen-eral level, we follow the principle of structuring a large theory as a set of smaller, more manageable ones, as in "ontologies" in ontolingua <ref> (Farquhar, Fikes, & Rice 1997) </ref> and TOVE (Fox & Gruninger 1994), and "mi-crotheories" in Cyc (Blair, Guha, & Pratt 1992). However, our work differs in two important ways.
Reference: <author> Fox, M. S., and Gruninger, M. </author> <year> 1994. </year> <title> Ontologies for enterprise integration. </title> <booktitle> In Proc 2nd Conference on Cooperative Information Systems. </booktitle> <institution> Univ Toronto. </institution> <note> 82-90. (Also see ontologies at http://www.ie.utoronto.ca/EIL/tove/toveont.html). </note>
Reference-contexts: With regard to building knowledge bases, at a gen-eral level, we follow the principle of structuring a large theory as a set of smaller, more manageable ones, as in "ontologies" in ontolingua (Farquhar, Fikes, & Rice 1997) and TOVE <ref> (Fox & Gruninger 1994) </ref>, and "mi-crotheories" in Cyc (Blair, Guha, & Pratt 1992). However, our work differs in two important ways.
Reference: <author> Goguen, J. A. </author> <year> 1986. </year> <title> Reusing and interconnecting software components. </title> <note> Computer 16-28. </note>
Reference: <author> Lester, J. C., and Porter, B. W. </author> <year> 1997. </year> <title> Developing and empirically evaluating robust explanation generators: The knight experiments. </title> <note> Computational Linguistics 22(3). </note>
Reference: <author> Levy, A. Y. </author> <year> 1993. </year> <note> Irrelevance reasoning in knowledge-based systems. Tech report STAN-CS-93-1482 (also KSL-93-58), </note> <institution> Dept CS, Stanford Univ., CA. </institution> <note> (Chapter 7). </note>
Reference: <author> MacGregor, R., and Bates, R. </author> <year> 1987. </year> <title> The LOOM knowledge representation language. </title> <type> Tech Report ISI-RS-87-188, ISI, </type> <address> CA. </address>
Reference-contexts: With regard to combining components to build concept representations, our approach relates to work in description logics (DLs), such as Classic (Brachman et al. 1991) and Loom <ref> (MacGregor & Bates 1987) </ref>. Building a concept representation is similar to the process of `normalizing' a conjunctive DL concept description, during which information about that concept is gathered and combined.
Reference: <author> Pierce, B. </author> <year> 1991. </year> <title> Basic Category Theory for Computer Scientists. </title> <publisher> MIT Press. </publisher>
Reference-contexts: We have taken this idea from compositional modeling, eg. (Falkenhainer & Forbus 1991; Levy 1993), and software engineering, eg. (Batory & O'Malley 1992; Goguen 1986). It is also similar to the use of signatures to characterize theories in category theory <ref> (Pierce 1991) </ref>, where our participants correspond to sorts in category theory. With regard to combining components to build concept representations, our approach relates to work in description logics (DLs), such as Classic (Brachman et al. 1991) and Loom (MacGregor & Bates 1987).
Reference: <author> Porter, B. W.; Lester, J.; Murray, K.; Pittman, K.; Souther, A.; Acker, L.; and Jones, T. </author> <year> 1988. </year> <title> AI research in the context of a multifunctional knowledge base: The botany knowledge base project. </title> <type> Tech Report AI-88-88, </type> <institution> Dept CS, Univ Texas at Austin. </institution>
Reference-contexts: Introduction Our goal is the construction of knowledge-based systems capable of answering a wide range of questions, including questions unanticipated when the knowledge base was constructed. Earlier research on one large-scale project | the Botany knowledge-base project <ref> (Porter et al. 1988) </ref> | shows that if detailed, declarative representations of concepts are available, then sophisticated question-answering performance can be achieved (Lester & Porter 1997; Rickel & Porter 1997).
Reference: <author> Rickel, J. W., and Porter, B. W. </author> <year> 1997. </year> <title> Automated modeling of complex systems to answer prediction questions. </title> <journal> Artificial Intelligence. </journal> <note> (to appear). </note>
References-found: 21

