URL: http://www.cs.wisc.edu/wpis/papers/popl93.ps
Refering-URL: http://www.cs.wisc.edu/wpis/papers/
Root-URL: 
Email: samuel@cs.wisc.edu horwitz@cs.wisc.edu  
Title: Incremental Program Testing Using Program Dependence Graphs  
Author: SAMUEL BATES SUSAN HORWITZ 
Note: This work was supported in part by NSF under grant CCR-8958530, by DARPA, monitored by ONR under contract N00014-88-K-0590, as well as by grants from 3M and Xerox.  
Address: 1210 West Dayton Street Madison, Wisconsin 53706  
Affiliation: Computer Sciences Department University of Wisconsin-Madison  
Abstract: Program dependence graphs have been proposed for use in optimizing, vectorizing, and parallelizing compilers, and for program integration. This paper proposes their use as the basis for incremental program testing when using test data adequacy criteria. Test data adequacy is commonly used to provide some confidence that a particular test suite does a reasonable job of testing a program. Incremental program testing using test data adequacy criteria addresses the problem of testing a modified program given an adequate test suite for the original program. Ideally, one would like to create an adequate test suite for the modified program that reuses as many files from the old test suite as possible. Furthermore, one would like to know, for every file that is in both the old and the new test suites, whether the program components exercised by that file have been affected by the program modification; if no components have been affected, then it is not necessary to rerun the program using that file. In this paper we define adequacy criteria based on the program dependence graph, and propose techniques based on program slicing to identify components of the modified program that can be tested using files from the old test suite, and components that have been affected by the modification. This information can be used to reduce the time required to create new test files, and to avoid unproductive retesting of unaffected components. Although exact identification of the components listed above is, in general, undecidable, we demonstrate that our techniques provide safe approximations. hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or specific permission. ACM-20th PoPL-1/93-S.C., USA 1993 ACM 0-89791-561-5/93/0001/0384...$1.50 
Abstract-found: 1
Intro-found: 1
Reference: <institution> Aho86. </institution>
Reference: <author> Aho, A., Sethi, R., and Ullman, J., </author> <booktitle> Compilers: Principles, Techniques and Tools, </booktitle> <publisher> Addison-Wesley, </publisher> <address> Reading, MA (1986). Bat92a. </address>
Reference: <author> Bates, S. and Horwitz, S., </author> <title> Incremental program testing using program dependence graphs, </title> <note> technical report in preparation, </note> <institution> Computer Sciences Department, University of Wisconsin, Madison, WI (1992). Bat92b. </institution>
Reference: <author> Bates, S. and Horwitz, Susan, </author> <title> On integrating programs with input, in preparation, </title> <institution> Computer Sciences Department, University of Wisconsin, Madison, WI (1992). Bat92c. </institution>
Reference: <author> Bates, S. and Horwitz, Susan, </author> <title> Test Data Adequacy Criteria Based on Program Dependences, in preparation, </title> <institution> Computer Sciences Department, University of Wisconsin, Madison, WI (1992). </institution>
Reference: <author> Chu83. Chusho, Takeshi, </author> <title> Coverage measure for path testing based on the concept of essential branches, </title> <note> Journal of Information Processing 6(4) pp. </note> <month> 199-205 </month> <year> (1983). </year>
Reference: <author> Chu87. Chusho, Takeshi, </author> <title> Test Data Selection and Quality Estimation Based on the Concept of Essential Branches for Path Testing, </title> <journal> IEEE Transactions on Software Engineering SE-13(5) pp. </journal> <month> 509-517 (May </month> <year> 1987). </year> <month> Cla76. </month>
Reference: <author> Clarke, Lori A., </author> <title> A system to generate test data and symbolically execute programs, </title> <journal> IEEE Transactions on Software Engineering SE-2(3) pp. </journal> <month> 215-222 (September </month> <year> 1976). </year> <month> DeM91. </month>
Reference: <author> DeMillo, Richard A. and Offutt, A. Jefferson, </author> <title> Constraint-based automatic test data generation, </title> <journal> IEEE Transactions on Software Engineering 17(9) pp. </journal> <month> 900-910 (September </month> <year> 1991). </year>
Reference: <institution> Don84. </institution>
Reference: <author> Donzeau-Gouge, V., Huet, G., Kahn, G., and Lang, B., </author> <title> Programming environments based on structured editors: The MENTOR experience, pp. 128-140 in Interactive Programming Environments, </title> <editor> ed. D. Barstow, E. Sandewall, and H. Shrobe,McGraw-Hill, </editor> <address> New York (1984). </address>
Reference: <institution> Fer87. </institution>
Reference: <author> Ferrante, J., Ottenstein, K., and Warren, J., </author> <title> The program dependence graph and its use in optimization, </title> <journal> ACM Transactions on Programming Languages and Systems 9(3) pp. </journal> <month> 319-349 (July </month> <year> 1987). </year> <month> Gup91. </month>
Reference: <author> Gupta, Rajiv and Soffa, Mary Lou, </author> <title> Automatic generation of a compact test suite, </title> <type> Technical Report, </type> <institution> University of Pittsburgh, </institution> <address> Pittsburgh, PA (1991). Har. </address>
Reference: <author> Harrold, Mary Jean and Soffa, Mary Lou, </author> <title> An incremental approach to unit testing during maintenance, </title> <booktitle> Proceedings of the Conference on Softwrae Maintenance (Phoenix, </booktitle> <address> Arizona, </address> <month> October 24-27, </month> <year> 1988), </year> <pages> pp. 362-367 (). Hor88. </pages>
Reference: <author> Horwitz, S., Prins, J., and Reps, T., </author> <title> On the adequacy of program dependence graphs for representing programs, pp. </title> <booktitle> 146-157 in Conference Record of the Fifteenth ACM Symposium on Principles of Programming Languages, </booktitle> <address> (San Diego, CA, </address> <month> January 13-15, </month> <year> 1988), (1988). </year> <month> Hor89a. </month>
Reference: <author> Horwitz, S., Pfeiffer, P., and Reps, T., </author> <title> Dependence analysis for pointer variables, </title> <booktitle> Proceedings of the SIGPLAN 89 Conference on Programming Language Design and Implementation, </booktitle> <address> (Portland, OR, </address> <month> June 21-23, </month> <year> 1989), </year> <journal> ACM SIG-PLAN Notices 24(7) pp. </journal> <month> 28-40 (July </month> <year> 1989). </year> <month> Hor89b. </month>
Reference: <author> Horwitz, S., Prins, J., and Reps, T., </author> <title> Integrating non-interfering versions of programs, </title> <journal> ACM Transactions on Programming Languages and Systems 11(3) pp. </journal> <month> 345-387 (July </month> <year> 1989). </year> <month> Hor90. </month>
Reference: <author> Horwitz, S., Reps, T., and Binkley, D., </author> <title> Interprocedural slicing using dependence graphs, </title> <journal> ACM Transactions on Programming Languages and Systems 12(1) pp. </journal> <month> 26-60 (January </month> <year> 1990). </year> <month> Hor91. </month>
Reference: <author> Horwitz, S. and Reps, T., </author> <title> Efficient comparison of program slices, </title> <note> Acta Informatica 28 pp. 713-732 (1991). How76. </note>
Reference: <author> Howden, William E., </author> <title> Reliability of the path analysis testing strategy, </title> <journal> IEEE Transactions on Software Engineering SE 395 2(3) pp. </journal> <month> 208-215 (September </month> <year> 1976). </year>
Reference: <institution> Hua75. </institution>
Reference: <author> Huang, J. C., </author> <title> An approach to program testing, </title> <journal> ACM Computing Surveys 7(3) pp. </journal> <month> 113-127 (September </month> <year> 1975). </year> <title> Kor90. Korel, Bogdan, Automated software test data generation, </title> <journal> IEEE Transactions on Software Engineering 16(8) pp. </journal> <month> 870-879 (August </month> <year> 1990). </year> <month> Kra73. </month>
Reference: <author> Krause, K. W., Smith, R. W., and Goodwin, M. A., </author> <title> Optimal software test planning through automated network analysis, </title> <booktitle> Record of the 1973 IEEE Symposium on Computer Software Reliability (New York, </booktitle> <address> New York), </address> <pages> pp. </pages> <address> 18-22 (April 30-May 2, </address> <year> 1973). </year> <month> Lar88. </month>
Reference: <author> Larus, J.R. and Hilfinger, </author> <title> P.N., Detecting conflicts between structure accesses, </title> <booktitle> Proceedings of the SIGPLAN 88 Conference on Programming Language Design and Implementation, </booktitle> <address> (Atlanta, GA, </address> <month> June 22-24, </month> <year> 1988), </year> <pages> pp. </pages> <month> 21-34 (June </month> <year> 1988). </year> <month> Las83. </month>
Reference: <author> Laski, Janusz W. and Korel, Bogdan, </author> <title> A data flow oriented program testing strategy, </title> <journal> IEEE Transactions on Software Engineering SE-9(3) pp. </journal> <month> 347-354 (May </month> <year> 1983). </year>
Reference: <author> Mar90. Marick, Brian, </author> <title> A survey of test effectiveness and cost studies, </title> <type> Report No. </type> <institution> UIUCDCS-R-90-1652, Department of Computer Science, University of Illinois at Urbana-Champaign, Urbana, IL (December 1990). Not85. </institution>
Reference: <author> Notkin, D., Ellison, R.J., Staudt, B.J., Kaiser, G.E., Kant, E., Habermann, A.N., Ambriola, V., and Montangero, C., </author> <title> Special issue on the GANDALF project, </title> <journal> Journal of Systems and Software 5(2)(May 1985). Nta84. </journal>
Reference: <author> Ntafos, Simeon C., </author> <title> On required element testing, </title> <journal> IEEE Transactions on Software Engineering SE-10(6) pp. </journal> <month> 795-803 (November </month> <year> 1984). </year> <month> Ost88. </month>
Reference: <author> Ostrand, Thomas J. and Weyuker, Elaine J., </author> <title> Using data flow analysis for regression testing, </title> <booktitle> Proceedings of the Sixth Annual Pacific Northwest Software Quality Conference(Portland, </booktitle> <address> Oregon), </address> <month> (September 19-20, </month> <year> 1988). </year>
Reference: <institution> Ott84. </institution>
Reference: <author> Ottenstein, K.J. and Ottenstein, L.M., </author> <title> The program dependence graph in a software development environment, </title> <booktitle> Proceedings of the ACM SIGSOFT/SIGPLAN Software Engineering Symposium on Practical Software Development Environments, </booktitle> <address> (Pittsburgh, PA, </address> <month> April 23-25, </month> <year> 1984), </year> <journal> ACM SIGPLAN Notices 19(5) pp. </journal> <month> 177-184 (May </month> <year> 1984). </year> <month> Rap85. </month>
Reference: <author> Rapps, Sandra and Weyuker, Elaine J., </author> <title> Selecting software test data using data flow information, </title> <journal> IEEE Transactions on Software Engineering SE-11(4) pp. </journal> <month> 367-375 (April </month> <year> 1985). </year> <month> Rep88. </month>
Reference: <author> Reps, T. and Teitelbaum, T., </author> <title> The Synthesizer Generator: A system for constructing language-based editors, </title> <publisher> Springer-Verlag, </publisher> <address> New York, NY (1988). Rep89. </address>
Reference: <author> Reps, T. and Yang, W., </author> <title> The semantics of program slicing and program integration, pp. </title> <booktitle> 360-374 in Proceedings of the Colloquium on Current Issues in Programming Languages, </booktitle> <address> (Barcelona, Spain, March 13-17, </address> <year> 1989), </year> <booktitle> Lecture Notes in Computer Science Vol. </booktitle> <volume> 352, </volume> <publisher> Springer-Verlag, </publisher> <address> New York, NY (March 1989). </address>
Reference: <institution> Sch92. </institution>
Reference: <author> Schatz, E. and Ryder, B. G., </author> <title> Directed tracing to detect race conditions, </title> <institution> LCSR-TR-176, Laborator for Computer Science Research, Rutgers University, </institution> <address> New Brunswick, NJ (February 1992). Tah89. </address>
Reference: <author> Taha, Abu-Bakr, Thebaut, Stephen M., and Liu, Sying-Syang, </author> <title> An approach to software fault localization and revalidation based on incremental data flow analysis, </title> <booktitle> Proceedings of the Thirteenth Annual International Computer Software & Applications Conference (Orlando, Florida), </booktitle> <pages> pp. 552-558 (September 20-22, </pages> <year> 1989). </year>
Reference: <institution> Wei84. </institution>
Reference: <author> Weiser, M., </author> <title> Program slicing, </title> <journal> IEEE Transactions on Software Engineering SE-10(4) pp. </journal> <month> 352-357 (July </month> <year> 1984). </year>
Reference: <institution> Yan91. </institution>
Reference: <author> Yang, W., </author> <title> Identifying syntactic differences between two programs, </title> <journal> Software Practice& Experience 21(7) pp. </journal> <month> 739-755 (July </month> <year> 1991). </year> <month> 396 </month>
References-found: 42

