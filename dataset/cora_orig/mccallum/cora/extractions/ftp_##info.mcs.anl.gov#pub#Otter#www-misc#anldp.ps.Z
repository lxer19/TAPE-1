URL: ftp://info.mcs.anl.gov/pub/Otter/www-misc/anldp.ps.Z
Refering-URL: http://www.mcs.anl.gov/AR/mace/
Root-URL: http://www.mcs.anl.gov
Email: e-mail: mccune@mcs.anl.gov  
Phone: phone: 708-252-3065  
Title: A Davis-Putnam Program and its Application to Finite First-Order Model Search: Quasigroup Existence Problems  
Author: William McCune 
Date: May 9, 1994  
Note: DRAFT  
Address: Argonne, Illinois 60439-4844, U.S.A.  
Affiliation: Mathematics and Computer Science Division Argonne National Laboratory  
Abstract: This document describes the implementation and use of a Davis-Putnam procedure for the propositional satisfiability problem. It also describes code that takes statements in first-order logic with equality and a domain size n searches for models of size n. The first-order model-searching code transforms the statements into set of propositional clauses such that the first-order statements have a model of size n if and only if the propositional clauses are satisfiable. The propositional set is then given to the Davis-Putnam code; any propositional models that are found can be translated to models of the first-order statements. The first-order model-searching program accepts statements only in a flattened relational clause form without function symbols. Additional code was written to take input statements in the language of Otter 3.0 [5] and produce the flattened relational form. The program was successfully applied to several open questions on the existence of orthogonal quasigroups. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F. E. Bennett. </author> <title> Correspondence by electronic mail, </title> <year> 1994. </year>
Reference-contexts: QG3 (2 8 ). A quasigroup of type h n has order h fl n and n holes of size h. Frank Bennett <ref> [1] </ref> posed the question of the existence of QG3 (2 8 ). (Mark Stickel had already answered positively the question of the existence of QG3 (2 6 ).) The ANL-DP input relation = 2 equality relation same_hole 2 hole function f 3 quasigroup_holey end_of_symbols f v0 v0 v0 same_hole v0 v0 <p> Frank Bennett posed <ref> [1] </ref> the question of whether the the quasigroup identity (QG7a) x (yx) = (yx)y implies either (xy)x = x (yx) or xy (yx) = y. He suggested looking at models of order 17 with a hole of size 5, if they exist, as possible counterexamples.
Reference: [2] <author> F. E. Bennett and L. Zhu. </author> <title> Conjugate-orthoganal latin squares and related structures. </title> <editor> In J. H. Dinitz and D. R. Stinson, editors, </editor> <booktitle> Contamporary Design Theory: A Collection of Surveys, </booktitle> <pages> pages 41-96. </pages> <publisher> John Wiley & Sons, </publisher> <year> 1992. </year>
Reference-contexts: (1) For QG1 and QG2, the disjunction to the right of the implication is ordinarily a conjunction; the forms DRAFT 8 are equivalent for quasigroups, and models are found more easily with disjunction. (2) The second and third equalities for QG5 and the second equality for QG7 are dependent.) See <ref> [2] </ref> and [7] for details on the quasigroup problems. <p> The diagonals of the upper left square count up (mod m), except for diagonals that consist of the same element in m; ; n1. Also, the first m elements of the last x rows and columns count up (mod m). For example (see <ref> [2, Example 8.1] </ref> with the input (note that the only upper left corner is idempotent) set (dp_transform). <p> He suggested looking at models of order 17 with a hole of size 5, if they exist, as possible counterexamples. The identity (QG7b) ((xy)x)y = x, which is conjugate-equivalent <ref> [2] </ref> to (QG7a), is much easier to work with, so we put ANL-DP to work with the input relation same_hole 2 hole function f 3 quasigroup_holey end_of_symbols f v0 v0 v0 same_hole v0 v0 . -f v0 v1 v2 -f v2 v0 v3 f v3 v1 v0 . end_of_clauses same_hole 12
Reference: [3] <author> F. E. Bennett and L. Zhu. </author> <title> Self-orthogonal Mendelsohn triple systems. </title> <type> Preprint, </type> <year> 1994. </year>
Reference-contexts: Corollary 5.2 of <ref> [3] </ref> states The necessary condition for the existence of a pair of OMTS (v), that is, v j 0 or 1 (mod 3), is also sufficient except for v=3,6 and possibly excepting v 2 f9; 10; 12; 18g. See [3] for definitions. <p> Corollary 5.2 of <ref> [3] </ref> states The necessary condition for the existence of a pair of OMTS (v), that is, v j 0 or 1 (mod 3), is also sufficient except for v=3,6 and possibly excepting v 2 f9; 10; 12; 18g. See [3] for definitions.
Reference: [4] <author> M. Fujita, J. Slaney, and F. E. Bennett. </author> <title> Automatic generation of some results in finite algebra. </title> <booktitle> In International Joint Conference on Artificial Intelligence, </booktitle> <year> 1993. </year>
Reference: [5] <author> W. McCune. </author> <title> Otter 3.0 Reference Manual and Guide. </title> <type> Tech. Report ANL-94/6, </type> <institution> Argonne National Laboratory, Argonne, Ill., </institution> <year> 1994. </year>
Reference: [6] <author> J. Slaney. </author> <title> Finder version 3.0 notes and guide. </title> <type> Tech. report, </type> <institution> Centre for Information Science Research, Australian National University, </institution> <year> 1993. </year>
Reference-contexts: The parameter n specifies the domain size and its presence tells the program to read first-order flattened relational input clauses instead of propositional clauses. 2 The First-Order Model-Searching Program The first practical program for searching for small models of first-order statements was FINDER <ref> [6] </ref>. Another model-searching program is MGTP [7], which uses a somewhat different approach. The third class of programs, including LDPP [8], SATO [8], and the one described here, are based on Davis-Putnam procedures. <p> The output of Otter contains extraneous text, so it must be passed though a filter before ANL-DP can receive it. See the example files and scripts in the distribution directories. 2.4 The Order Relation The ordered semigroup example in the FINDER 3.0 manual <ref> [6, Sec. 4.1.5] </ref> motivated me to have ANL-DP recognize the less-than relation on domain elements. The input (in Otter form) for the ordered semigroup problems is as follows. set (dp_transform). list (usable). f (f (x,y),z) = f (x,f (y,z)). -(f (y,x) &lt; f (z,x)) | y &lt; z. end_of_list.
Reference: [7] <author> J. Slaney, M. Fujita, and M. Stickel. </author> <title> Automated reasoning and exhaustive search: Quasigroup existence problems. Computers and Mathematics with Applications, </title> <note> 1994. To appear. </note>
Reference-contexts: The parameter n specifies the domain size and its presence tells the program to read first-order flattened relational input clauses instead of propositional clauses. 2 The First-Order Model-Searching Program The first practical program for searching for small models of first-order statements was FINDER [6]. Another model-searching program is MGTP <ref> [7] </ref>, which uses a somewhat different approach. The third class of programs, including LDPP [8], SATO [8], and the one described here, are based on Davis-Putnam procedures. None of these programs is clearly better than the others, and each has answered open questions about quasigroups (see Sec. 2.5). <p> QG1 and QG2, the disjunction to the right of the implication is ordinarily a conjunction; the forms DRAFT 8 are equivalent for quasigroups, and models are found more easily with disjunction. (2) The second and third equalities for QG5 and the second equality for QG7 are dependent.) See [2] and <ref> [7] </ref> for details on the quasigroup problems. <p> y = w QG3 (xy)(yx) = x QG5 ((xy)x)x = y ^ x ((yx)x) = y ^ (x (yx))x = y QG7 ((xy)x)y = x ^ ((xy)y)(xy) = x Table 3: The Quasigroup Problems We also used the following cycle constraint on the last column to eliminate some isomorpohic models <ref> [7] </ref>: :f (x; n; z), for z &lt; x 1. The constraint requires that cycles in the last column be made up of contiguous elements. This constraint is specified to ANL-DP with the command-line option "-x1"; the quasigroup operation must be f (lower case) for this to work.
Reference: [8] <author> H. Zhang and M. Stickel. </author> <title> Implementing the Davis-Putnam algorithm by tries. </title> <type> Preprint, </type> <year> 1994. </year>
Reference-contexts: Department of Energy, under Contract W-31-109-Eng-38. DRAFT 2 1.1 Implementation The data structures for clauses and for propositional variables are similar to the ones Mark Stickel uses in LDPP <ref> [8] </ref>. Variables are integers 1. Associated with the set of variables is an array, indexed by the variables, of variable structures. Each variable structure contains the following fields. * value. The current value (true, false, or unassigned) of the variable. * enqueued_value. <p> Another model-searching program is MGTP [7], which uses a somewhat different approach. The third class of programs, including LDPP <ref> [8] </ref>, SATO [8], and the one described here, are based on Davis-Putnam procedures. None of these programs is clearly better than the others, and each has answered open questions about quasigroups (see Sec. 2.5). <p> Another model-searching program is MGTP [7], which uses a somewhat different approach. The third class of programs, including LDPP <ref> [8] </ref>, SATO [8], and the one described here, are based on Davis-Putnam procedures. None of these programs is clearly better than the others, and each has answered open questions about quasigroups (see Sec. 2.5). <p> Table 4 gives summaries of the performance of ANL-DP (C, list structure), SATO-2 (C, trie structure), and LDPP 0 (Lisp, list structure) on some cases of the quasigroup problems. The SATO and LDPP figures are taken from <ref> [8] </ref>. All runs were made on a SPARC 2 or similar computer. All programs used the cycle constraint and similar selection functions for splitting. I believe that differences in the number of branches are due mostly to the order of clauses and literals. Search time is given in seconds.
References-found: 8

