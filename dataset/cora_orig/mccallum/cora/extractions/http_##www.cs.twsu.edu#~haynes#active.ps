URL: http://www.cs.twsu.edu/~haynes/active.ps
Refering-URL: http://adept.cs.twsu.edu/~thomas/publications.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: e-mail: haynes@cs.twsu.edu  
Phone: Phone: (316) 978-3925  
Title: Augmenting Collective Adaptation with Simple Process Agents  
Author: Thomas Haynes 
Address: 1845 Fairmont Ave Wichita, KS 67260  
Affiliation: Department of Computer Science Wichita State University  
Abstract: We have integrated the distributed search of genetic programming based systems with collective memory to form a collective adaptation search method. Such a system significantly improves search as problem complexity is increased. However, there is still considerable scope for improvement. In collective adaptation, search agents gather knowledge of their environment and deposit it in a central information repository. Process agents are then able to manipulate that focused knowledge, exploiting the exploration of the search agents. We examine the utility of increasing the capabilities of the centralized pro cess agents.
Abstract-found: 1
Intro-found: 1
Reference: [ Garey and Johnson, 1979 ] <author> Michael R. Garey and David S. Johnson. </author> <title> Computers and Intractability: A 6 Guide to the Theory of NP-Completeness. W.H. </title> <publisher> Free--man and Co., </publisher> <address> San Francisco, CA, </address> <year> 1979. </year>
Reference-contexts: These simpler actions reflect a computational bound on either the reasoning power or memory storage of the individual agent. Such bounds are caused by the combinatorial explosion found in either search or optimization of NP complete problems <ref> [ Garey and Johnson, 1979 ] </ref> . Collective memory is defined as the combined knowledge gained by the interaction of the agents with both themselves and their environment. We combine the raw power of collective action with the expressiveness of collective memory to enhance a distributed search process.
Reference: [ Haynes et al., 1995 ] <author> Thomas Haynes, Roger Wainwright, Sandip Sen, and Dale Schoenefeld. </author> <title> Strongly typed genetic programming in evolving cooperation strategies. </title> <editor> In Larry Eshelman, editor, </editor> <booktitle> Proceedings of the Sixth International Conference on Genetic Algorithms, </booktitle> <pages> pages 271-278, </pages> <address> San Francisco, CA, 1995. </address> <publisher> Mor-gan Kaufmann Publishers, Inc. </publisher>
Reference-contexts: Both GA and GP represent search strategies in a population of chromosomes. Each chromosome in the population can be searching different parts of the search space or fitness landscape. Each chromosome can be considered to be a behavioral strategy to control an agent <ref> [ Haynes et al., 1995 ] </ref> and are considered to be autonomous in the sense that they do not typically interact to find a solution. <p> The only restriction is that the data type for each element be specified beforehand. This causes the initialization process and the various genetic operations to only construct syntactically correct trees. It has been shown that STGP can significantly reduce the search space <ref> [ Haynes et al., 1995, Montana, 1995 ] </ref> .
Reference: [ Haynes et al., 1996 ] <author> Thomas Haynes, Dale Schoenefeld, and Roger Wainwright. </author> <title> Type inheritance in strongly typed genetic programming. </title> <editor> In Kenneth E. Kinnear, Jr. and Peter J. Angeline, editors, </editor> <booktitle> Advances in Genetic Programming 2, chapter 18. </booktitle> <publisher> MIT Press, </publisher> <year> 1996. </year>
Reference-contexts: The STGP variant mainly restricts the construction and reproduction of chromosomes; the basic algorithm is GP. 4 Clique Detection Clique detection has been used as a benchmark for improving learning in GP systems <ref> [ Haynes, 1996, Haynes et al., 1996 ] </ref> . A collection of cliques in a graph can be represented as a list of a list of vertices which, in turn, can be represented by a tree structure.
Reference: [ Haynes, 1996 ] <author> Thomas Haynes. </author> <title> Duplication of coding segments in genetic programming. </title> <booktitle> In Proceedings of the Thirteenth National Conference on Artificial Intelligence, </booktitle> <address> Portland, OR, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: The STGP variant mainly restricts the construction and reproduction of chromosomes; the basic algorithm is GP. 4 Clique Detection Clique detection has been used as a benchmark for improving learning in GP systems <ref> [ Haynes, 1996, Haynes et al., 1996 ] </ref> . A collection of cliques in a graph can be represented as a list of a list of vertices which, in turn, can be represented by a tree structure. <p> We have utilized these regularities to identify and enumerate the building blocks, i.e., the connected components <ref> [ Haynes, 1996 ] </ref> . We repaired chromosomes by stripping out all invalid candidate cliques. We investigated various rates of return of repaired chromosomes into the population. We found that by duplicating the coding segments we could significantly improve the search process.
Reference: [ Haynes, 1997 ] <author> Thomas Haynes. </author> <title> Collective memory search. </title> <booktitle> In Proceedings of the 1997 ACM Symposium on Applied Computing. </booktitle> <publisher> ACM Press, </publisher> <year> 1997. </year>
Reference-contexts: The evaluation of one chromosome typically is independent of all others. We have found that collective adaptation, which is the addition of collective memory to a GP-based learning system, significantly improves the search process as problem complexity is increased <ref> [ Haynes, 1997 ] </ref> . We believe that this improvement is a direct result of the change of focus from strict competition to cooperation. However, there is still considerable room for improvement. <p> Instead the search agents gather candidate cliques into the information center and the process agent removes duplicates and candidates subsumed by larger candidates. The addition of Passive-Active collective adaptation to the search technique significantly improves the efficiency of the search process <ref> [ Haynes, 1997 ] </ref> . We want to leverage that improvement to allow clique detection in more realistic graphs. The ten node graph we use to illustrate the clique detection is contrived and thus facilitates the search process, i.e. a known optimal solution exists.
Reference: [ Holland, 1975 ] <author> John H. Holland. </author> <booktitle> Adpatation in Natural and Artificial Systems. </booktitle> <publisher> University of Michigan Press, </publisher> <address> Ann Arbor, MI, </address> <year> 1975. </year>
Reference-contexts: We consider simple computational search agents, which are chromosomes in a genetic programming (GP) [ Koza, 1992 ] population. Genetic algorithms (GA) <ref> [ Holland, 1975 ] </ref> are a class of distributed search algorithms inspired by biological evolutionary adaptation. GP is an off-shoot of GA's, and is typically used in the automatic induction of programs. Both GA and GP represent search strategies in a population of chromosomes.
Reference: [ Johnson and Trick, 1996 ] <editor> David S. Johnson and Michael A. Trick, editors. </editor> <title> Cliques, Coloring, and Satisfiability, </title> <booktitle> volume 26 of DIMACS: Series in Discrete Mathematics and Theoretical Computer Science. </booktitle> <publisher> American Mathematical Society, </publisher> <year> 1996. </year>
Reference-contexts: The ten node graph we use to illustrate the clique detection is contrived and thus facilitates the search process, i.e. a known optimal solution exists. The search for the optimal solution for this graph is not trivial with either plain GP or STGP systems. In the Second DIMACS Challenge <ref> [ Johnson and Trick, 1996 ] </ref> random graphs were generated as tests for the maximum clique detection problem (ftp://dimacs.rutgers.edu/pub/challenge). While the duplication of coding segments repair process is able to search such graphs, the plain STGP system will prematurely converge.
Reference: [ Koza, 1992 ] <author> John R. Koza. </author> <title> Genetic Programming: On the Programming of Computers by Natural Selection. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1992. </year>
Reference-contexts: The integration of action and memory leads to a distributed society of search agents which interact via collective memory; allowing for either agent communication or for a centralized search of the gathered knowledge. We consider simple computational search agents, which are chromosomes in a genetic programming (GP) <ref> [ Koza, 1992 ] </ref> population. Genetic algorithms (GA) [ Holland, 1975 ] are a class of distributed search algorithms inspired by biological evolutionary adaptation. GP is an off-shoot of GA's, and is typically used in the automatic induction of programs. <p> We examine the coordination of knowledge of loosely-coupled, heterogeneous, and initially simple agents. The agents can adapt during the search process, eventually becoming quite complex. 3 Genetic Programming Genetic programming is a machine learning technique used in the automatic induction of computer pro 2 grams <ref> [ Koza, 1992 ] </ref> . A GP system is primarily comprised of three main parts: * a population of chromosomes * a chromosome evaluator * a selection and recombination mechanism.
Reference: [ Montana, 1995 ] <author> David J. Montana. </author> <title> Strongly typed genetic programming. </title> <journal> Evolutionary Computation, </journal> <volume> 3(2) </volume> <pages> 199-230, </pages> <year> 1995. </year>
Reference-contexts: Montana claims that closure is a serious limitation to genetic programming. He introduces a variant of GP in strongly typed genetic programming (STGP), in which variables, constants, arguments, and returned values can be of any type <ref> [ Montana, 1995 ] </ref> . The only restriction is that the data type for each element be specified beforehand. This causes the initialization process and the various genetic operations to only construct syntactically correct trees. <p> The only restriction is that the data type for each element be specified beforehand. This causes the initialization process and the various genetic operations to only construct syntactically correct trees. It has been shown that STGP can significantly reduce the search space <ref> [ Haynes et al., 1995, Montana, 1995 ] </ref> .
References-found: 9

