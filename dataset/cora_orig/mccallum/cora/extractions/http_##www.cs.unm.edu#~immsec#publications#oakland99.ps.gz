URL: http://www.cs.unm.edu/~immsec/publications/oakland99.ps.gz
Refering-URL: http://www.cs.unm.edu/~immsec/papers.htm
Root-URL: http://www.cs.unm.edu
Email: fsteveah,forrestg@cs.unm.edu  
Title: Immunizing Computer Networks: Getting All the Machines in Your Network to Fight the Hacker Disease  
Author: Steven A. Hofmeyr Stephanie Forrest 
Date: November 2, 1998  
Address: Albuquerque, NM 87131-1386  
Affiliation: Dept. of Computer Science University of New Mexico  
Abstract: This paper introduces a method of distributed network intrusion detection which scales with the number of computers on a network and is tunable (the probability of detection can be traded off against overhead). Experiments with real network traffic show that the system has high detection rates for several common routes of intrusion, and low false-positive rates under normal behavior. The method can easily be extended to accommodate dynamically changing definitions of normal behavior (for example, adding a host to the network) and to remember known patterns of intrusion. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Crosbie and G. Spafford. </author> <title> Defending a computer system using autonomous agents. </title> <booktitle> In Proceedings of the 18th National Information Security Systems Conference, </booktitle> <year> 1995. </year>
Reference-contexts: We shall return to the problem of collecting a complete self set in section 3.5. 3.3 Implementing negative detectors There are many ways of implementing the detectors, for example, a detector could be a production rule, or a neural network, or an agent <ref> [1] </ref>. We chose to implement detection as string matching, where each detector is a string d, and detection of a string s occurs when there is a match between s and d, according to a matching rule.
Reference: [2] <author> P. D'haeseleer. </author> <title> An immunological approach to change detection: Theoretical results. </title> <booktitle> In Proceedings of the 9th IEEE Computer Security Foundations Workshop, </booktitle> <address> Los Alamitos, CA, 1996. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: However, the architecture of NSM is not easily distributable. Distributing NSM would require either excessive resource consumption on every machine upon which it was run, or communication between machines. Negative detection provides a natural way to distribute a detection task across multiple locations <ref> [3, 2, 4] </ref>. With negative detection, the system retains a set of detectors that match occurrences of abnormal or unusual patterns (in this case, the patterns are representations of network packets). The detectors are negative in the sense that they (implicitly) define normal network traffic in terms of non-normal packets. <p> One limitation of the negative-selection algorithm as originally implemented is that it can result in undetectable abnormal patterns called holes, which limit detection rates <ref> [3, 2] </ref>. In this paper, we address the problem of holes by introducing permutation masks to remap the representation of network packets seen by different detectors. <p> In the following section, we describe exactly how this kind of detection scheme can be distributed. 3 A scheme for distributing network intrusion detection The detection scheme presented here is based upon an abstract model of detection, for which much theoretical analysis has been done <ref> [4, 3, 2] </ref>. In this paper, we concentrate on the practical application of the model and so discuss the abstract model only briefly, within the context of network intrusion detection. <p> We use string matching because it is simple and efficient to implement, and easy to analyze and understand. Obvious matching rules include Hamming distance or edit distance, but in this paper we use the r-contiguous bits [9] rule, because of available theoretical analysis <ref> [4, 3, 2] </ref>, and because it is localized. We discuss the advantages of localization in section 3.4. Two strings, d and s match under the r-contiguous bits rule if d and s have the same symbols in at least r-contiguous locations (see figure 6).
Reference: [3] <author> P. D'haeseleer, S. Forrest, and P. Helman. </author> <title> An immunological approach to change detection: Algorithms, analysis and implications. </title> <booktitle> In Proceedings of the 1996 IEEE Symposium on Research in Security and Privacy, </booktitle> <address> Los Alamitos, CA, 1996. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: However, the architecture of NSM is not easily distributable. Distributing NSM would require either excessive resource consumption on every machine upon which it was run, or communication between machines. Negative detection provides a natural way to distribute a detection task across multiple locations <ref> [3, 2, 4] </ref>. With negative detection, the system retains a set of detectors that match occurrences of abnormal or unusual patterns (in this case, the patterns are representations of network packets). The detectors are negative in the sense that they (implicitly) define normal network traffic in terms of non-normal packets. <p> One limitation of the negative-selection algorithm as originally implemented is that it can result in undetectable abnormal patterns called holes, which limit detection rates <ref> [3, 2] </ref>. In this paper, we address the problem of holes by introducing permutation masks to remap the representation of network packets seen by different detectors. <p> In the following section, we describe exactly how this kind of detection scheme can be distributed. 3 A scheme for distributing network intrusion detection The detection scheme presented here is based upon an abstract model of detection, for which much theoretical analysis has been done <ref> [4, 3, 2] </ref>. In this paper, we concentrate on the practical application of the model and so discuss the abstract model only briefly, within the context of network intrusion detection. <p> We use string matching because it is simple and efficient to implement, and easy to analyze and understand. Obvious matching rules include Hamming distance or edit distance, but in this paper we use the r-contiguous bits [9] rule, because of available theoretical analysis <ref> [4, 3, 2] </ref>, and because it is localized. We discuss the advantages of localization in section 3.4. Two strings, d and s match under the r-contiguous bits rule if d and s have the same symbols in at least r-contiguous locations (see figure 6). <p> This trade-off has been theoretically analyzed in Forrest et al. [4] and D'haeseleer et al. <ref> [3] </ref>. We shall not discuss the analysis here, but simply note that obtaining general results that are meaningful is difficult, because the analysis depends on the structure of the self set (i.e. the regularities in the self set). <p> Such strings are called holes because they are holes in the detection system's coverage of nonself (see figure 7). It has been proved that for a given level of nontrivial specificity, holes can exist regardless of the match rule used <ref> [3] </ref>. Clearly the number of holes depends on both the regularities in the self set and the specificity of the detectors. Generally, the less specific the detectors, the greater the number of holes.
Reference: [4] <author> S. Forrest, A. S. Perelson, L. Allen, and R. Cherukuri. </author> <title> Self-nonself discrimination in a computer. </title> <booktitle> In Proceedings of the 1994 IEEE Symposium on Research in Security and Privacy, </booktitle> <address> Los Alamos, CA, 1994. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Our method builds on two earlier computer security projectsthe Network Security Monitor [6, 8] and the immune-inspired negative-detection algorithm <ref> [4] </ref>. The Intrusion Detection System (IDS) presented here monitors network traffic over a broadcast local area network (LAN). Earlier, researchers at the University of California, Davis (UCDavis) showed that intrusions can be successfully detected by monitoring traffic patterns in broadcast LANs [6, 8]. <p> However, the architecture of NSM is not easily distributable. Distributing NSM would require either excessive resource consumption on every machine upon which it was run, or communication between machines. Negative detection provides a natural way to distribute a detection task across multiple locations <ref> [3, 2, 4] </ref>. With negative detection, the system retains a set of detectors that match occurrences of abnormal or unusual patterns (in this case, the patterns are representations of network packets). The detectors are negative in the sense that they (implicitly) define normal network traffic in terms of non-normal packets. <p> In the following section, we describe exactly how this kind of detection scheme can be distributed. 3 A scheme for distributing network intrusion detection The detection scheme presented here is based upon an abstract model of detection, for which much theoretical analysis has been done <ref> [4, 3, 2] </ref>. In this paper, we concentrate on the practical application of the model and so discuss the abstract model only briefly, within the context of network intrusion detection. <p> Then a set of such negative detectors encodes a crude superset-detector, but only if each negative detector in the set is actually valid (i.e. does not cover any self strings). Sets of valid detectors can be constructed by the negative selection algorithm (see figure 5) <ref> [4] </ref>: randomly generated detectors are compared to the representative set of self strings (the training set), and censored (deleted) if they match any of those self strings (i.e. if the detector covers any part of the self set). <p> We use string matching because it is simple and efficient to implement, and easy to analyze and understand. Obvious matching rules include Hamming distance or edit distance, but in this paper we use the r-contiguous bits [9] rule, because of available theoretical analysis <ref> [4, 3, 2] </ref>, and because it is localized. We discuss the advantages of localization in section 3.4. Two strings, d and s match under the r-contiguous bits rule if d and s have the same symbols in at least r-contiguous locations (see figure 6). <p> This trade-off has been theoretically analyzed in Forrest et al. <ref> [4] </ref> and D'haeseleer et al. [3]. We shall not discuss the analysis here, but simply note that obtaining general results that are meaningful is difficult, because the analysis depends on the structure of the self set (i.e. the regularities in the self set).
Reference: [5] <author> S. Garfinkel and G Spafford. </author> <title> Practical Unix and Internet Security, </title> <address> 2cnd Edition. </address> <publisher> O'Reilly and Associates, Inc., </publisher> <year> 1996. </year>
Reference-contexts: Some ports are assigned to commonly known services, such as ftp, telnet, login, etc., whereas other ports are non-assigned (for a sample list of assigned ports, see Appendix G in Garfinkel and Spafford <ref> [5] </ref>). Furthermore, ports can be privileged (those ports below 1024) or non-privileged (1024 and up).
Reference: [6] <author> L. T. Heberlein, G. V. Dias, K. N. Levitt, B. Mukherjee, J. Wood, and D. Wolber. </author> <title> A network security monitor. </title> <booktitle> In Proceedings of the IEEE Symposium on Security and Privacy. </booktitle> <publisher> IEEE Press, </publisher> <year> 1990. </year> <month> 20 </month>
Reference-contexts: Our method builds on two earlier computer security projectsthe Network Security Monitor <ref> [6, 8] </ref> and the immune-inspired negative-detection algorithm [4]. The Intrusion Detection System (IDS) presented here monitors network traffic over a broadcast local area network (LAN). Earlier, researchers at the University of California, Davis (UCDavis) showed that intrusions can be successfully detected by monitoring traffic patterns in broadcast LANs [6, 8]. <p> Security Monitor <ref> [6, 8] </ref> and the immune-inspired negative-detection algorithm [4]. The Intrusion Detection System (IDS) presented here monitors network traffic over a broadcast local area network (LAN). Earlier, researchers at the University of California, Davis (UCDavis) showed that intrusions can be successfully detected by monitoring traffic patterns in broadcast LANs [6, 8]. <p> Once the system is trained, it can be used to monitor the network for deviations from the normal patterns. A similar approach was used in the Network Security Monitor (NSM) intrusion detection system developed at UCDavis <ref> [8, 6] </ref>. Results reported in Mukherjee et al. [8] indicate that over a two month period, NSM identified 300 out of 11000 connections as anomalous. Subsequent analysis revealed that most of these 300 connections were indicative of attacks or illegitimate behavior.
Reference: [7] <author> C. Hunt. </author> <title> TCP/IP Network Administration. </title> <publisher> O'Reilly and Associates, </publisher> <address> Sebastopol, CA, </address> <year> 1992. </year>
Reference-contexts: false positive error occurs when a self string is classified as anomalous, and a false negative error occurs when a nonself string is classified as normal (see figure 2). 3.1 Representation of network traffic In our application of the model, each event is represented by a TCP/IP SYN packet header <ref> [7] </ref>. We consider only SYN packets because all following packets on the same connection represent the same datapath triple as the original SYN packets. Furthermore, the volume of data is greatly reduced because there are typically more than 1000 normal packets to every SYN packet.
Reference: [8] <author> B. Mukherjee, L. T. Heberlein, and K. N. Levitt. </author> <title> Network intrusion detection. </title> <journal> IEEE Network, </journal> <pages> pages 2641, </pages> <month> May/June </month> <year> 1994. </year>
Reference-contexts: Our method builds on two earlier computer security projectsthe Network Security Monitor <ref> [6, 8] </ref> and the immune-inspired negative-detection algorithm [4]. The Intrusion Detection System (IDS) presented here monitors network traffic over a broadcast local area network (LAN). Earlier, researchers at the University of California, Davis (UCDavis) showed that intrusions can be successfully detected by monitoring traffic patterns in broadcast LANs [6, 8]. <p> Security Monitor <ref> [6, 8] </ref> and the immune-inspired negative-detection algorithm [4]. The Intrusion Detection System (IDS) presented here monitors network traffic over a broadcast local area network (LAN). Earlier, researchers at the University of California, Davis (UCDavis) showed that intrusions can be successfully detected by monitoring traffic patterns in broadcast LANs [6, 8]. <p> Once the system is trained, it can be used to monitor the network for deviations from the normal patterns. A similar approach was used in the Network Security Monitor (NSM) intrusion detection system developed at UCDavis <ref> [8, 6] </ref>. Results reported in Mukherjee et al. [8] indicate that over a two month period, NSM identified 300 out of 11000 connections as anomalous. Subsequent analysis revealed that most of these 300 connections were indicative of attacks or illegitimate behavior. <p> Once the system is trained, it can be used to monitor the network for deviations from the normal patterns. A similar approach was used in the Network Security Monitor (NSM) intrusion detection system developed at UCDavis [8, 6]. Results reported in Mukherjee et al. <ref> [8] </ref> indicate that over a two month period, NSM identified 300 out of 11000 connections as anomalous. Subsequent analysis revealed that most of these 300 connections were indicative of attacks or illegitimate behavior. <p> The 1.5 million packets were mapped to binary strings, using the mapping described in section 3.1. It was found that there were only 3900 unique strings, that is, the graph of normal connections is indeed sparsely connected, confirming the results reported in Mukherjee et al. <ref> [8] </ref>. The growth of this set of unique strings is shown in figure 10. As time passes (indicated by the x-axis), the number of unique strings tends to level off, although it is unlikely that this curve will ever completely level out.
Reference: [9] <author> J. K. Percus, O. E. Percus, and A. S. Perelson. </author> <title> Probability of self-nonself discrimination. Theoetical and Experimental Insights into Immunology, </title> <note> 1992. Acknowledgements (Omitted for the purposes of anonymous review) 21 </note>
Reference-contexts: We use string matching because it is simple and efficient to implement, and easy to analyze and understand. Obvious matching rules include Hamming distance or edit distance, but in this paper we use the r-contiguous bits <ref> [9] </ref> rule, because of available theoretical analysis [4, 3, 2], and because it is localized. We discuss the advantages of localization in section 3.4.
References-found: 9

