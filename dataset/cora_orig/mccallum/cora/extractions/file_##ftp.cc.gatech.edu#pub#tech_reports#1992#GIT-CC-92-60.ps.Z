URL: file://ftp.cc.gatech.edu/pub/tech_reports/1992/GIT-CC-92-60.ps.Z
Refering-URL: http://www.cs.gatech.edu/people/home/bhatta/
Root-URL: 
Email: bhatta@cc.gatech.edu  
Title: GIT-CC-92/60 A Model-Based Approach to Analogical Reasoning and Learning in Design  
Author: Sambasiva R. Bhatta 
Degree: A THESIS PROPOSAL Presented to The Academic Faculty In Partial Fulfillment of the Requirements for the Degree Doctor of Philosophy in Information and Computer Science The Committee: Dr. Ashok Goel (Advisor) Dr. Richard Catrambone (Psy) Dr. T. Govindaraj (ISyE) Dr. Janet Kolodner Dr. Ashwin Ram  
Note: This work has been supported by research grants from the Office of Naval Research (contract N00014-92-J-1234) and NSF, a CER grant from NSF (grant CCR-86-19886), and equipment donated by IBM, NCR, and Symbolics.  
Date: November 1992  
Affiliation: Georgia Institute of Technology  
Abstract-found: 0
Intro-found: 1
Reference: [Anderson, 1986] <author> J. Anderson. </author> <title> Knowledge Compilation: The General Learning Mechanism. </title> <editor> In R. Michalski, J. Carbonell, and T. Mitchell, editors, </editor> <booktitle> Machine Learning: An Artificial Intelligence Approach, </booktitle> <volume> Vol. II. </volume> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, CA, </address> <year> 1986. </year>
Reference: [Barletta and Mark, 1988] <author> R. Barletta and W. Mark. </author> <title> Explanation-Based Indexing of Cases. </title> <editor> In J. Kolodner, editor, </editor> <booktitle> Proceedings of the DARPA Workshop on Case-Based Reasoning, </booktitle> <pages> pages 50-60, </pages> <address> San Mateo, CA, May 1988. </address> <publisher> Morgan Kaufmann. </publisher> <pages> 61 </pages>
Reference: [Bhatta and Goel, 1992a] <author> S. Bhatta and A. Goel. </author> <title> Discovery of Physical Principles from Design Experiences. </title> <editor> In J. M. Zytkow, editor, </editor> <booktitle> Proceedings of the ML-92 Workshop on Machine Discovery, </booktitle> <pages> pages 77-81, </pages> <address> Aberdeen, Scotland, UK, </address> <month> July </month> <year> 1992. </year>
Reference-contexts: Corresponding to each type of mental model learned, an index-learning task is also created. We have earlier shown that SBF models of specific devices (associated with specific design cases) provide the content and constraints for learning PDMs and physical principle <ref> [Bhatta and Goel, 1992a] </ref>. In the same vein, we propose that SBF models do the same for learning GTMs. However, we admit that other methods/strategies such as similarity-based learning (SBL) may also be applied in integration with our model-based approach to each of these learning tasks.
Reference: [Bhatta and Goel, 1992b] <author> S. Bhatta and A. Goel. </author> <title> Use of Mental Models for Constraining Index Learning in Experience-Based Design. </title> <booktitle> In Proceedings of the AAAI workshop on Constraining Learning with Prior Knowledge, </booktitle> <pages> pages 1-10, </pages> <address> San Jose, CA, </address> <month> July </month> <year> 1992. </year>
Reference-contexts: In this section we describe our earlier work that shows how the SBF model of a design, together with a specification of the task for which the design case may be reused, provides the vocabulary for indexing the design case in memory <ref> [Bhatta and Goel, 1992b] </ref>. Furthermore, 46 we show how the model-based method, together with similarity-based learning (using earlier design cases in memory) helps to determine the level of index generalization. The Index Learning Problem The design cases in IDeAL are indexed by their functions and are organized in generalization-specialization hierarchies.
Reference: [Bhatta and Ram, 1991] <author> S. Bhatta and A. Ram. </author> <title> Learning Indices for Schema Selection. </title> <booktitle> In Pro ceedings of the Florida Artificial Intelligence Research Symposium, </booktitle> <pages> pages 226-231, </pages> <address> Cocoa Beach, FL, </address> <month> April </month> <year> 1991. </year>
Reference-contexts: But it cannot learn new classes of indices; it can only learn new indices within the known classes. Our earlier work <ref> [Bhatta and Ram, 1991] </ref> has also addressed the issue of learning indices to scripts and causal schemas such as XPs [Schank, 1986; Ram, 1990] in the domain of story understanding. <p> We believe that similar methods might be needed 27 for learning new indices to existing cases during retrieval in MBA. Broadly speaking, our current work shares the same assumptions|indexing schemes and methods of index learning depend on the functional requirements of tasks, if not specific to a task <ref> [Bhatta and Ram, 1991] </ref>. Another example of similar work is Barletta and Mark's [1988] explanation-based indexing (EBI), which provides an account of how explanations can be used to select a subset of predetermined indexing features to index diagnostic cases from the domain of assembly-line manufacturing.
Reference: [Birnbaum and Collins, 1988] <author> L. Birnbaum and G. Collins. </author> <title> The Transfer of Experience Across Planning Domains Through the Acquisition of Abstract Strategies. </title> <editor> In J. Kolodner, editor, </editor> <booktitle> Proceedings of the DARPA Workshop on Case-Based Reasoning, </booktitle> <pages> pages 61-79, </pages> <address> Clearwater Beach, FL, </address> <month> May </month> <year> 1988. </year>
Reference: [Brown and Chandrasekaran, 1984] <author> D. Brown and B. Chandrasekaran. </author> <title> Expert Systems for A Class of Mechanical Design Activity. </title> <booktitle> In Proceedings of the IFIP WG5.2 Working Conference on Knowledge Engineering in Computer Aided Design, </booktitle> <month> Sept. </month> <year> 1984. </year>
Reference-contexts: Design tasks can be and have been classified along several dimensions depending on the available methods and knowledge, the amount of unspecified physical structure, the product of the design, etc. [Tong and Sriram, 1992]. Although design tasks form a continuum, they have been traditionally classified into three types <ref> [Brown and Chandrasekaran, 1984; Gero, 1990] </ref>: routine, innovative, and creative.
Reference: [Brown and Chandrasekaran, 1989] <author> D. Brown and B. Chandrasekaran. </author> <title> Design Problem Solving: Knowledge Structures and Control Strategies. </title> <publisher> Pitman, </publisher> <address> London, UK, </address> <year> 1989. </year>
Reference-contexts: Instead it might also involve synthesizing solutions to subtasks of the given design task. This sense of innovation conforms to the characterization of innovative design in [Tong and Sriram, 1992], <ref> [Brown and Chandrasekaran, 1989] </ref>, and [Goel, 1989]. 1.4 Research Hypotheses This work is based on three hypotheses: 1. SBF models at different levels of abstraction play a crucial role in various stages of analogical design; 2. <p> We basically follow the same classification, and compare our system IDeAL 4 (or, our approach MBA) with related systems. One of the earliest design systems was R1 (later called XCON) which used forward chaining over rules for configuring computer systems [McDermott, 1981]. Later systems such as AIR-CYL <ref> [Brown and Chandrasekaran, 1989] </ref> and PRIDE [Mittal et al., 1986] designed mechanical devices by selecting and instantiating plans and procedures. All these systems used only a single method of reasoning, and did not reuse the designs they created. Further, they performed only very routine design.
Reference: [Bylander and Chandrasekaran, 1985] <author> T. Bylander and B. Chandrasekaran. </author> <title> Understanding Behav ior Using Consolidation. </title> <booktitle> In Proceedings of the Ninth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 450-454, </pages> <year> 1985. </year>
Reference-contexts: The primary characteristic of these models is that they capture teleological, causal, and structural knowledge of devices. These models are based on a component-substance ontology <ref> [Bylander and Chandrasekaran, 1985] </ref>. This ontology gives rise to a behavioral representation language (BRL) [Goel, 1991; 1989] for describing the SBF model of a design that is a generalization on Sembugamoorthy and Chandrasekaran's [1986] functional representation scheme. The constituents of the SBF model are described below.
Reference: [Carbonell, 1983] <author> J. Carbonell. </author> <title> Learning by Analogy: Formulating and Generalizing Plans from Past Experience. </title> <editor> In R.Michalski, J.Carbonell, and T.Mitchell, editors, </editor> <booktitle> Machine Learning: An Artificial Intelligence Approach. </booktitle> <publisher> Tioga, </publisher> <address> Palo Alto, CA, </address> <year> 1983. </year>
Reference-contexts: One method of analogical transfer is to directly map the analog to the current problem. This method, called transformational analogy, forms the basis of most work in analogical reasoning such as the Structure-Mapping theory [Gentner, 1983], ARIES <ref> [Carbonell, 1983] </ref>, ACME (Analogical Constraint Mapping Engine) [Holyoak and Thagard, 1989], ARCS (Analogue Retrieval by Constraint Satisfaction) [Thagard et al., 1990], SME (Structure-Mapping Engine) [Falkenhainer et al., 1989]. However, most of these models address only one or two stages of analogical reasoning.
Reference: [Carbonell, 1986] <author> J. Carbonell. </author> <title> Derivational Analogy: A Theory of Reconstructive Problem Solving and Expertise Acquisition, Vol. III. </title> <editor> In R.Michalski, J.Carbonell, and T.Mitchell, editors, </editor> <booktitle> Machine Learning: An Artificial Intelligence Approach, </booktitle> <pages> pages 371-392. </pages> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, CA, </address> <year> 1986. </year>
Reference-contexts: Computational models of analogy date as early as Kling [1971] though these early models were only approximate. Later computational models such as [Winston, 1982; 1986], [Gentner, 1983; Falkenhainer et al., 1989], [Kedar-Cabelli, 1988], <ref> [Carbonell, 1986] </ref>, and [Holyoak and Thagard, 1989] are more complete but still address only some stages of AR, mostly the mapping (or transfer) stage. For instance, SME [Gentner, 1983; Falkenhainer et al., 1989], PDA [Kedar-Cabelli, 1988], and ACME [Holyoak and Thagard, 1989] do not model analog retrieval.
Reference: [Catrambone and Holyoak, 1989] <author> R. Catrambone and K. Holyoak. </author> <title> Overcoming Contextual Limi tations on Problem-Solving Transfer. Journal of Experimental Psychology: Learning, Memory, </title> <journal> and Cognition, </journal> <volume> 15(6) </volume> <pages> 1147-1156, </pages> <year> 1989. </year>
Reference-contexts: Some data on analogical reasoning indicate that analogies are often made based on similarity in superficial features in the descriptions of the source and the target [Gick and 1 Holyoak, 1980] or they are made between superficially dissimilar situations only when appropriate hints are given <ref> [Catrambone and Holyoak, 1989] </ref>. In contrast, some other data indicate that "deep" features which capture relations between the superficial features are crucial in making analogies [Gentner, 1983].
Reference: [Cohen and Howe, 1988] <author> P. Cohen and A. Howe. </author> <title> How Evaluation Guides Research. </title> <journal> AI Magazine, </journal> <volume> 9(4) </volume> <pages> 35-43, </pages> <month> Winter </month> <year> 1988. </year>
Reference-contexts: Generality: (a) Coverage of problems: The larger the coverage of problems in the domain (s) of consideration the better accepted and more general is the theory. This implies 3 That is, conducting ablation experiments in which specific types of knowledge and methods are "le-sioned" <ref> [Cohen and Howe, 1988] </ref> to study their roles in the overall behavior of the system that implements the theory. 17 testing the proposed computational theory on a large set of problems (i.e., different classes of problems) in the domain. (b) Coverage of different types of tasks: This means generality of the
Reference: [de Kleer and Brown, 1984] <author> J. de Kleer and J. Brown. </author> <title> A Qualitative Physics Based on Confluences. </title> <journal> Artificial Intelligence, </journal> <volume> 24 </volume> <pages> 7-83, </pages> <year> 1984. </year>
Reference-contexts: 1989]). * the origin and acquisition of mental models; the role of case-specific models in learning models at higher levels of abstraction, such as models of device prototypes, physical principles and processes, and generic teleological mechanisms (GTMs; e.g., cascading, feedback, and feedforward), from design cases. 1.1 Mental Models Mental models <ref> [Gentner, 1983; Forbus, 1984; de Kleer and Brown, 1984; Goel, 1989] </ref> are characterized by the types of knowledge they capture, namely, teleological, causal, and structural knowledge of a "micro-world" such as a physical situation (e.g., an electron revolving around the nucleus in an atom), and a physical device (e.g., an electric <p> Much work on naive physics and qualitative reasoning (e.g., <ref> [Hayes, 1979; Hayes, 1985; Forbus, 1984; de Kleer and Brown, 1984] </ref>) has focused on the representation of the physical world and the simulation of causal processes.
Reference: [DeJong and Mooney, 1986] <author> G. DeJong and R. Mooney. </author> <title> Explanation-Based Learning: An Alter native View. </title> <journal> Machine Learning, </journal> <volume> 1(2) </volume> <pages> 145-176, </pages> <year> 1986. </year>
Reference-contexts: However, the generalizations learned by SOAR are simple rules and are specific to types of subgoals in the problem. 2.6.1 A Model-Based Approach to Learning Our model-based approach to generalization is similar to explanation-based generalization (EBG) [Mitchell et al., 1986] and explanation-based learning (EBL) <ref> [DeJong and Mooney, 1986] </ref> in using explanations (SBF models) to constrain the learning of "concepts." However, most EBL systems assume some knowledge of the target concept a priori; our model-based approach attempts to discover them. 24 Also, our model-based approach differs from EBG and EBL in the kind of explanations it
Reference: [Dietterich, 1992] <author> T. G. Dietterich. </author> <title> Toward Model-Based Learning: A Case Study in Ecosystem Prediction. </title> <booktitle> In Proceedings of the AAAI Workshop on Constraining Learning with Prior Knowledge, </booktitle> <pages> pages 19-26, </pages> <address> San Jose, CA, </address> <month> July </month> <year> 1992. </year> <month> 62 </month>
Reference: [Falkenhainer and Michalski, 1986] <author> B. Falkenhainer and R. Michalski. </author> <title> Integrating Quantitative and Qualitative Discovery: The ABACUS System. </title> <journal> Machine Learning, </journal> <volume> 1 </volume> <pages> 367-401, </pages> <year> 1986. </year>
Reference-contexts: Since some abstractions can be physical principles and processes, our approach can be compared to work in scientific discovery such as BACON [Langley et al., 1987], FAHRENHEIT [Zytkow, 1987], and ABACUS <ref> [Falkenhainer and Michalski, 1986] </ref>. These systems require a large amount of data because they use inductive approaches to discover regularities and form laws. In contrast, our approach involves incremental discovery of physical principles using models at lower levels of abstraction (e.g., device-specific models) to guide the discovery process.
Reference: [Falkenhainer et al., 1989] <author> B. Falkenhainer, K. Forbus, and D. Gentner. </author> <title> The Structure-Mapping Engine: Algorithm and Examples. </title> <journal> Artificial Intelligence, </journal> <volume> 41 </volume> <pages> 1-63, </pages> <year> 1989. </year>
Reference-contexts: This method, called transformational analogy, forms the basis of most work in analogical reasoning such as the Structure-Mapping theory [Gentner, 1983], ARIES [Carbonell, 1983], ACME (Analogical Constraint Mapping Engine) [Holyoak and Thagard, 1989], ARCS (Analogue Retrieval by Constraint Satisfaction) [Thagard et al., 1990], SME (Structure-Mapping Engine) <ref> [Falkenhainer et al., 1989] </ref>. However, most of these models address only one or two stages of analogical reasoning. Transformational analogy is also the basis for much work in case-based reasoning (CBR) [Kolodner et al., 1985; Hammond, 1989]. <p> Computational models of analogy date as early as Kling [1971] though these early models were only approximate. Later computational models such as [Winston, 1982; 1986], <ref> [Gentner, 1983; Falkenhainer et al., 1989] </ref>, [Kedar-Cabelli, 1988], [Carbonell, 1986], and [Holyoak and Thagard, 1989] are more complete but still address only some stages of AR, mostly the mapping (or transfer) stage. For instance, SME [Gentner, 1983; Falkenhainer et al., 1989], PDA [Kedar-Cabelli, 1988], and ACME [Holyoak and Thagard, 1989] do <p> Later computational models such as [Winston, 1982; 1986], <ref> [Gentner, 1983; Falkenhainer et al., 1989] </ref>, [Kedar-Cabelli, 1988], [Carbonell, 1986], and [Holyoak and Thagard, 1989] are more complete but still address only some stages of AR, mostly the mapping (or transfer) stage. For instance, SME [Gentner, 1983; Falkenhainer et al., 1989], PDA [Kedar-Cabelli, 1988], and ACME [Holyoak and Thagard, 1989] do not model analog retrieval. Other theories such as ARCS [Thagard et al., 1990] focus only on the retrieval stage. In contrast, we consider all stages of analogy in our work.
Reference: [Falkenhainer, 1990] <author> B. Falkenhainer. </author> <title> A Unified Approach to Explanation and Theory Formation. </title> <editor> In J. Shrager and P. Langley, editors, </editor> <title> Computational Models of Scientific Discovery and Theory Formation. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1990. </year>
Reference-contexts: Several researchers [Gick and Holyoak, 1983; Shinn, 1989; Birnbaum and Collins, 1988; Roverso et al., 1992] have emphasized the role of learning abstractions in making analogies between distant situations and several others <ref> [Greiner, 1988; Falkenhainer, 1990] </ref> have only showed how abstractions can mediate the analogical transfer between distant situations. We propose to investigate the mechanisms in analogical reasoning necessary for innovation and creativity in design. <p> In this respect, our theory is more similar to NLAG [Greiner, 1988], PHINEAS <ref> [Falkenhainer, 1990] </ref>, JULIANA [Shinn, 1989] and ASIS [Roverso et al., 1992]. However, both NLAG and PHINEAS assume that the abstractions are known a priori and do not address the issue of acquiring them. <p> Learning abstract models from several specific designs is also related to the tasks of theory formation and/or hypothesis formation|an abstract model is a theory of the functionality of the specific designs. In this context, our work can be compared to several systems such as PHINEAS <ref> [Falkenhainer, 1990] </ref>, COAST [Rajamoney, 1988; 1990] , and HYPGENE [Karp, 1989; 1990] . PHINEAS is a discovery system that forms theories of time-varying physical behaviors by a single similarity-driven explanation mechanism, that is, by analogy to the explanation of a similar situation.
Reference: [Forbus, 1984] <author> K. Forbus. </author> <title> Qualitative Process Theory. </title> <journal> Artificial Intelligence, </journal> <volume> 24 </volume> <pages> 85-168, </pages> <year> 1984. </year>
Reference-contexts: 1989]). * the origin and acquisition of mental models; the role of case-specific models in learning models at higher levels of abstraction, such as models of device prototypes, physical principles and processes, and generic teleological mechanisms (GTMs; e.g., cascading, feedback, and feedforward), from design cases. 1.1 Mental Models Mental models <ref> [Gentner, 1983; Forbus, 1984; de Kleer and Brown, 1984; Goel, 1989] </ref> are characterized by the types of knowledge they capture, namely, teleological, causal, and structural knowledge of a "micro-world" such as a physical situation (e.g., an electron revolving around the nucleus in an atom), and a physical device (e.g., an electric <p> Much work on naive physics and qualitative reasoning (e.g., <ref> [Hayes, 1979; Hayes, 1985; Forbus, 1984; de Kleer and Brown, 1984] </ref>) has focused on the representation of the physical world and the simulation of causal processes.
Reference: [Gentner, 1983] <author> D. Gentner. Structure-Mapping: </author> <title> A Theoretical Framework for Analogy. </title> <journal> Cognitive Science, </journal> <volume> 7 </volume> <pages> 155-170, </pages> <year> 1983. </year>
Reference-contexts: In contrast, some other data indicate that "deep" features which capture relations between the superficial features are crucial in making analogies <ref> [Gentner, 1983] </ref>. Some studies further indicate that analogies are made based on only surface similarity or only deep similarity, or both under different conditions [Holyoak and Koh, 1987]. <p> 1989]). * the origin and acquisition of mental models; the role of case-specific models in learning models at higher levels of abstraction, such as models of device prototypes, physical principles and processes, and generic teleological mechanisms (GTMs; e.g., cascading, feedback, and feedforward), from design cases. 1.1 Mental Models Mental models <ref> [Gentner, 1983; Forbus, 1984; de Kleer and Brown, 1984; Goel, 1989] </ref> are characterized by the types of knowledge they capture, namely, teleological, causal, and structural knowledge of a "micro-world" such as a physical situation (e.g., an electron revolving around the nucleus in an atom), and a physical device (e.g., an electric <p> One method of analogical transfer is to directly map the analog to the current problem. This method, called transformational analogy, forms the basis of most work in analogical reasoning such as the Structure-Mapping theory <ref> [Gentner, 1983] </ref>, ARIES [Carbonell, 1983], ACME (Analogical Constraint Mapping Engine) [Holyoak and Thagard, 1989], ARCS (Analogue Retrieval by Constraint Satisfaction) [Thagard et al., 1990], SME (Structure-Mapping Engine) [Falkenhainer et al., 1989]. However, most of these models address only one or two stages of analogical reasoning. <p> generic teleological mechanisms, and also for learning of their indices; 3. mental models (both SBF models and BF models) provide a scheme of organization for capturing specific types of design knowledge and provide an indexing vocabulary for them; The first hypothesis is motivated by many findings in psychology (for example, <ref> [Gentner, 1983] </ref>) that humans often use "deep" knowledge and not merely superficial features in making analogical transfer. Mental models such as models of device prototypes and physical principles constitute "deep" knowledge in the domain of physical devices. <p> Mental models have also been used to capture other types of relations such as structural relations between electrons and the nucleus in an atom <ref> [Gentner, 1983] </ref>. In contrast, our work also addresses the issues of acquisition, organization, and indexing of mental models; hence the proposed representations are well constrained. <p> They facilitate such tasks as interpretation of design descriptions, designing new artifacts, and learning from design experiences. This similarity will become clearer a little later. 19 2.2 Analogical Reasoning Psychological data indicates that people often use analogies in solving problems of various kinds <ref> [Gick and Holyoak, 1980, 1983; Gentner, 1983] </ref>. Computational models of analogy date as early as Kling [1971] though these early models were only approximate. <p> Computational models of analogy date as early as Kling [1971] though these early models were only approximate. Later computational models such as [Winston, 1982; 1986], <ref> [Gentner, 1983; Falkenhainer et al., 1989] </ref>, [Kedar-Cabelli, 1988], [Carbonell, 1986], and [Holyoak and Thagard, 1989] are more complete but still address only some stages of AR, mostly the mapping (or transfer) stage. For instance, SME [Gentner, 1983; Falkenhainer et al., 1989], PDA [Kedar-Cabelli, 1988], and ACME [Holyoak and Thagard, 1989] do <p> Later computational models such as [Winston, 1982; 1986], <ref> [Gentner, 1983; Falkenhainer et al., 1989] </ref>, [Kedar-Cabelli, 1988], [Carbonell, 1986], and [Holyoak and Thagard, 1989] are more complete but still address only some stages of AR, mostly the mapping (or transfer) stage. For instance, SME [Gentner, 1983; Falkenhainer et al., 1989], PDA [Kedar-Cabelli, 1988], and ACME [Holyoak and Thagard, 1989] do not model analog retrieval. Other theories such as ARCS [Thagard et al., 1990] focus only on the retrieval stage. In contrast, we consider all stages of analogy in our work. <p> Other theories such as ARCS [Thagard et al., 1990] focus only on the retrieval stage. In contrast, we consider all stages of analogy in our work. Psychological studies also show that people transfer relationships between objects in the source domain and not their attributes <ref> [Gentner, 1983] </ref>. Most theories of analogical reasoning also involve transferring relationships directly from a source analog to the target problem: relationships that conform to systematicity principle as in [Gentner, 1983], or causal relationships as in [Winston, 1982; 1986], or functional relationships as in [Kedar-Cabelli, 1988] are transferred. <p> Psychological studies also show that people transfer relationships between objects in the source domain and not their attributes <ref> [Gentner, 1983] </ref>. Most theories of analogical reasoning also involve transferring relationships directly from a source analog to the target problem: relationships that conform to systematicity principle as in [Gentner, 1983], or causal relationships as in [Winston, 1982; 1986], or functional relationships as in [Kedar-Cabelli, 1988] are transferred. <p> It finds mapping to the target problem through causal links represented in design prototype retrieved as source analog. The mapping process is domain-independent but causation-type dependent. Its mapping process is syntactic like in structure-mapping theory <ref> [Gentner, 1983] </ref> and involves matching behavior graphs to establish correspondences between the source and target domains.
Reference: [Gero and Maher, 1991] <author> J. Gero and M. Maher. </author> <title> Mutation and Analogy to Support Creativity in Computer-Aided Design. </title> <editor> In G. Schmitt, editor, </editor> <booktitle> Proceedings of the CAAD Futures'91, </booktitle> <pages> pages 241-249, </pages> <address> Zurich, </address> <year> 1991. </year>
Reference-contexts: However, relatively little Artificial Intelligence (AI) work has been directed towards modeling these traits. Although there exist a few computational theories (for instance, [Schank, 1986], [Navinchandra, 1991], [Turner, 1991], <ref> [Gero and Maher, 1991] </ref>) that attempt to model innovation and creativity, there still remains a lot to be fathomed about the processes involved in these traits.
Reference: [Gero, 1990] <author> J. Gero. </author> <title> Design Prototypes: A Knowledge Representation Schema for Design. </title> <journal> AI Magazine, </journal> <volume> 11(4) </volume> <pages> 26-36, </pages> <year> 1990. </year>
Reference-contexts: Design tasks can be and have been classified along several dimensions depending on the available methods and knowledge, the amount of unspecified physical structure, the product of the design, etc. [Tong and Sriram, 1992]. Although design tasks form a continuum, they have been traditionally classified into three types <ref> [Brown and Chandrasekaran, 1984; Gero, 1990] </ref>: routine, innovative, and creative.
Reference: [Gick and Holyoak, 1980] <author> M. Gick and K. Holyoak. </author> <title> Analogical Problem Solving. </title> <journal> Cognitive Psy chology, </journal> <volume> 12 </volume> <pages> 306-355, </pages> <year> 1980. </year>
Reference-contexts: They facilitate such tasks as interpretation of design descriptions, designing new artifacts, and learning from design experiences. This similarity will become clearer a little later. 19 2.2 Analogical Reasoning Psychological data indicates that people often use analogies in solving problems of various kinds <ref> [Gick and Holyoak, 1980, 1983; Gentner, 1983] </ref>. Computational models of analogy date as early as Kling [1971] though these early models were only approximate.
Reference: [Gick and Holyoak, 1983] <author> M. Gick and K. Holyoak. </author> <title> Schema Induction and Analogical Transfer. </title> <journal> Cognitive Psychology, </journal> <volume> 15 </volume> <pages> 1-38, </pages> <year> 1983. </year>
Reference: [Goel, 1989] <author> A. Goel. </author> <title> Integration of Case-Based Reasoning and Model-Based Reasoning for Adap tive Design Problem Solving. </title> <type> Ph.D. thesis, </type> <institution> The Ohio State University, Department of Computer and Information Science, Columbus, Ohio, </institution> <year> 1989. </year>
Reference-contexts: Some studies further indicate that analogies are made based on only surface similarity or only deep similarity, or both under different conditions [Holyoak and Koh, 1987]. Mental models of devices (i.e., structure-behavior-function models or SBF models <ref> [Goel, 1989] </ref>) capture teleological and causal explanations of how the structure of a device delivers its function; hence, they constitute "deep" knowledge in designing physical devices. Mental models provide an indexing vocabulary for storing design experiences (i.e., design cases) in memory as well as a basis for organizing them. <p> 1989]). * the origin and acquisition of mental models; the role of case-specific models in learning models at higher levels of abstraction, such as models of device prototypes, physical principles and processes, and generic teleological mechanisms (GTMs; e.g., cascading, feedback, and feedforward), from design cases. 1.1 Mental Models Mental models <ref> [Gentner, 1983; Forbus, 1984; de Kleer and Brown, 1984; Goel, 1989] </ref> are characterized by the types of knowledge they capture, namely, teleological, causal, and structural knowledge of a "micro-world" such as a physical situation (e.g., an electron revolving around the nucleus in an atom), and a physical device (e.g., an electric <p> Domain-independent mental models, that is, mental models that capture knowl edge of "universal principles" such as the law of conservation of mass. 1.1.2 Content and Representation of Mental Models We represent an agent's understanding of how devices function in the form of structure-behavior-function (SBF) models <ref> [Goel, 1989] </ref>. An SBF model of a device captures the reasoner's comprehension of how the device works, that is, how the structure of its design results in its output behaviors. <p> Although design tasks form a continuum, they have been traditionally classified into three types [Brown and Chandrasekaran, 1984; Gero, 1990]: routine, innovative, and creative. We adopt the classification of design tasks as given in <ref> [Goel, 1989] </ref>: a design task is routine if it involves only simple parametric tweaks to an old design; a design task is innovative if it involves changes in the components of the old design but leaves the overall device topology the same; it is creative if it involves changes in the <p> Instead it might also involve synthesizing solutions to subtasks of the given design task. This sense of innovation conforms to the characterization of innovative design in [Tong and Sriram, 1992], [Brown and Chandrasekaran, 1989], and <ref> [Goel, 1989] </ref>. 1.4 Research Hypotheses This work is based on three hypotheses: 1. SBF models at different levels of abstraction play a crucial role in various stages of analogical design; 2. <p> The case-specific models in MBA play a similar role in constraining the learning of models at higher levels of abstraction. Our third hypothesis is a generalization and extension of earlier work on case-based design <ref> [Goel, 1989] </ref>. 1.5 Tasks and Domain: An Example The hypothesis that mental models at higher levels of abstraction can be learned from design experiences immediately generates three different learning tasks, each corresponding to a specific type of model learned. The learning tasks are: 1. <p> A fourth learning task is to simply acquire a new design experience when a problem is solved; in particular, to form the SBF model of the current design by revising that of an old design <ref> [Goel, 1989; 1991] </ref>. When a new piece of knowledge is learned, its usefulness relies on the ability to also learn the appropriate conditions under which it might be used. In other words, learning a piece of knowledge inevitably involves learning its indices. <p> In particular, our work emphasizes that the way mental models are organized in memory and linked to other types of knowledge significantly affects their use in various problem-solving tasks and their acquisition. Our work borrows from KRITIK <ref> [Goel, 1989] </ref> the representation of device-specific models in the form of SBF models and extends it to represent different types of mental models| models of device prototypes, physical principles, physical processes, and GTMs. <p> Like KRITIK, our work also considers design in the domain of physical devices. 2.5 Design by Analogy Most of the existing design systems that use analogies perform only within-domain analogies. A few design systems that fall into this category are KRITIK <ref> [Goel, 1989] </ref>, CADET [Sycara and Navinchandra, 1992], BOGART [Mostow et al., 1989; 1992], ARGO [Huhns and Acosta, 1988; 1992], STRUPLE [Maher and Zhao, 1987] and JULIA [Hinrichs, 1991; 1988]. <p> These explanations are not only useful in evaluating the generated solutions 6 but are also useful in learning from 6 One way solutions are evaluated is by simulating their models <ref> [Goel, 1989] </ref>; simulation involves tracing through the states and transitions from the initial state to the final state by substituting values for the parameters and checking if the desired function is achieved. 29 experience. <p> processes may have more than one causal transition in their descriptions. (4) Models of Generic Teleological Mechanisms Generic Teleological Mechanisms (GTMs) have been proposed as one type of knowledge that designers use in adaptive design, that is, modify an old design by insertion of specific patterns of components (or substructures) <ref> [Stroulia and Goel, 1992; Goel, 1989] </ref>. A few examples of GTMs are cascading, feedback, and feedforward. GTMs are teleological in that they result in specific functions. <p> BF model representation of GTM encapsulates two types of knowledge: knowledge about the difference between the functions of a known design and a desired design that the GTM can help reduce; knowledge about modifications to the internal causal behaviors of the known design that are necessary to reduce this difference <ref> [Stroulia and Goel, 1992; Goel, 1989] </ref>. For example, Figure 8 shows the BF model of the cascading mechanism. 3.2.3 Primitive Functions Bylander and Chandrasekaran [1985] have proposed a few primitive functions, such as allow, pump, and create, for the domain of physical devices, though not intended as a complete set. <p> A primitive function, like any other function, is represented in terms of an input state, an output state and a set of behavioral requirements under which such a transformation is possible. For example, Figure 17 shows a representation of the primitive function allow. KRITIK <ref> [Goel, 1989] </ref> has seven primitive functions for the domain of physical devices: allow, move, 37 expel, pump, create, destroy, and changemodality. The functional context of transitions in behaviors of devices index into these primitive functions. Thus these primitive functions are the building blocks to compose higher level functions.
Reference: [Goel, 1991] <author> A. Goel. </author> <title> A Model-Based Approach to Case Adaptation. </title> <booktitle> In Proceedings of the Thir teenth Annual Conference of the Cognitive Science Society, </booktitle> <pages> pages 143-148, </pages> <address> Chicago, </address> <month> August </month> <year> 1991. </year>
Reference-contexts: The primary characteristic of these models is that they capture teleological, causal, and structural knowledge of devices. These models are based on a component-substance ontology [Bylander and Chandrasekaran, 1985]. This ontology gives rise to a behavioral representation language (BRL) <ref> [Goel, 1991; 1989] </ref> for describing the SBF model of a design that is a generalization on Sembugamoorthy and Chandrasekaran's [1986] functional representation scheme. The constituents of the SBF model are described below.
Reference: [Govindaraj, 1987] <author> T. Govindaraj. </author> <title> Qualitative Approximation Methodology for Modeling and Sim ulation of Large Dynamic Systems: Applications to a Marine Steam Power Plant. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, SMC-17(6):937-955, </journal> <volume> Nov./Dec. </volume> <year> 1987. </year>
Reference: [Greiner, 1988] <author> R. Greiner. </author> <title> Learning by Understanding Analogies. </title> <journal> Artificial Intelligence, </journal> <volume> 35:81 125, </volume> <year> 1988. </year>
Reference-contexts: Several researchers [Gick and Holyoak, 1983; Shinn, 1989; Birnbaum and Collins, 1988; Roverso et al., 1992] have emphasized the role of learning abstractions in making analogies between distant situations and several others <ref> [Greiner, 1988; Falkenhainer, 1990] </ref> have only showed how abstractions can mediate the analogical transfer between distant situations. We propose to investigate the mechanisms in analogical reasoning necessary for innovation and creativity in design. <p> In this respect, our theory is more similar to NLAG <ref> [Greiner, 1988] </ref>, PHINEAS [Falkenhainer, 1990], JULIANA [Shinn, 1989] and ASIS [Roverso et al., 1992]. However, both NLAG and PHINEAS assume that the abstractions are known a priori and do not address the issue of acquiring them.
Reference: [Hammond and Hurwitz, 1988] <author> K. Hammond and N. </author> <title> Hurwitz. Extracting Diagnostic Features from Explanations. </title> <editor> In J. Kolodner, editor, </editor> <booktitle> Proceedings of the DARPA Workshop on Case-Based Reasoning, </booktitle> <pages> pages 169-178, </pages> <address> San Mateo, CA, May 1988. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: [Hammond, 1989] <author> K. Hammond. </author> <title> Case-Based Planning: Viewing Planning as a Memory Task. </title> <publisher> Academic Press, </publisher> <address> Boston, MA, </address> <year> 1989. </year>
Reference-contexts: However, most of these models address only one or two stages of analogical reasoning. Transformational analogy is also the basis for much work in case-based reasoning (CBR) <ref> [Kolodner et al., 1985; Hammond, 1989] </ref>. Goel [1991] has shown how structure-behavior-function (SBF) models of physical devices can be used for mapping the designs of those devices to new but closely-related problems. <p> It used primarily the discriminability and the previous predictive power of features to select a subset of features as indices. However, it could only choose indices from the predetermined context-dependent feature lists and could not learn the indexing vocabulary itself. CHEF <ref> [Hammond, 1989] </ref> uses explanation-based techniques to learn indices to plans from planning failures; in particular, it learns features in the domain that are predictive of negative interactions between plan steps. By learning predictive features, it can select plans that avoid problems.
Reference: [Hayes, 1979] <author> P. Hayes. </author> <title> Naive Physics Manifesto. </title> <booktitle> In Expert Systems in the Microelectronics Age, </booktitle> <pages> pages 242-270. </pages> <publisher> Edinburgh University Press, Edinburgh, </publisher> <address> UK, </address> <year> 1979. </year> <month> 63 </month>
Reference-contexts: Much work on naive physics and qualitative reasoning (e.g., <ref> [Hayes, 1979; Hayes, 1985; Forbus, 1984; de Kleer and Brown, 1984] </ref>) has focused on the representation of the physical world and the simulation of causal processes.
Reference: [Hayes, 1985] <author> P. Hayes. </author> <title> Naive Physics I: Ontology for Liquids. </title> <booktitle> In Formal Theories of the Com monsense World, </booktitle> <pages> pages 71-107. </pages> <publisher> Ablex, </publisher> <address> Norwood, NJ, </address> <year> 1985. </year>
Reference-contexts: Much work on naive physics and qualitative reasoning (e.g., <ref> [Hayes, 1979; Hayes, 1985; Forbus, 1984; de Kleer and Brown, 1984] </ref>) has focused on the representation of the physical world and the simulation of causal processes.
Reference: [Hinrichs, 1988] <author> T. R. Hinrichs. </author> <title> Towards An Architecture for Open World Problem Solving. </title> <editor> In J. Kolodner, editor, </editor> <booktitle> Proceedings of the DARPA Workshop on Case-Based Reasoning, </booktitle> <pages> pages 182-189, </pages> <address> San Mateo, CA, May 1988. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: [Hinrichs, 1991] <author> T. R. Hinrichs. </author> <title> Problem Solving in Open Worlds: A Case Study in Design. </title> <type> Ph.D. thesis, </type> <institution> Georgia Institute of Technology, College of Computing, </institution> <address> Atlanta, GA, </address> <year> 1991. </year> <note> Tech Report #GIT-CC-91/36. </note>
Reference-contexts: For example, KRITIK [Goel, 1989; 4 IDeAL stands for Integrated "DEsign by Analogy and Learning." 21 1991] integrates case-based reasoning and model-based reasoning; CADET [Sycara and Navinchandra, 1992; Navinchandra et al., 1991] also integrates case-based reasoning and behavior-preserving problem-transformation techniques (that enable cross-contextual design retrieval and synthesis of cases); JULIA <ref> [Hinrichs, 1991; 1988] </ref> integrates case-based reasoning and constraint posting; BOGART [Mostow et al., 1992] uses design reuse via replay of design plans for supporting innovative design; ARGO [Huhns and Acosta, 1992] also uses previous design plans and macrorules, which are learned and stored at different levels of abstraction; ALADIN [Rychener et <p> A few design systems that fall into this category are KRITIK [Goel, 1989], CADET [Sycara and Navinchandra, 1992], BOGART [Mostow et al., 1989; 1992], ARGO [Huhns and Acosta, 1988; 1992], STRUPLE [Maher and Zhao, 1987] and JULIA <ref> [Hinrichs, 1991; 1988] </ref>. All these systems operate in the domain of engineering design with the exception of JULIA which is in the domain of meal planning: JULIA designs menus of meals that satisfy multiple, interacting constraints.
Reference: [Holyoak and Koh, 1987] <author> K. Holyoak and K. Koh. </author> <title> Surface and Structural Similarity in Analogical Transfer. </title> <journal> Memory & Cognition, </journal> <volume> 15 </volume> <pages> 332-340, </pages> <year> 1987. </year>
Reference-contexts: In contrast, some other data indicate that "deep" features which capture relations between the superficial features are crucial in making analogies [Gentner, 1983]. Some studies further indicate that analogies are made based on only surface similarity or only deep similarity, or both under different conditions <ref> [Holyoak and Koh, 1987] </ref>. Mental models of devices (i.e., structure-behavior-function models or SBF models [Goel, 1989]) capture teleological and causal explanations of how the structure of a device delivers its function; hence, they constitute "deep" knowledge in designing physical devices.
Reference: [Holyoak and Thagard, 1989] <author> K. Holyoak and P. Thagard. </author> <title> Analogical Mapping by Constraint Satisfaction. </title> <journal> Cognitive Science, </journal> <volume> 13 </volume> <pages> 295-355, </pages> <year> 1989. </year>
Reference-contexts: One method of analogical transfer is to directly map the analog to the current problem. This method, called transformational analogy, forms the basis of most work in analogical reasoning such as the Structure-Mapping theory [Gentner, 1983], ARIES [Carbonell, 1983], ACME (Analogical Constraint Mapping Engine) <ref> [Holyoak and Thagard, 1989] </ref>, ARCS (Analogue Retrieval by Constraint Satisfaction) [Thagard et al., 1990], SME (Structure-Mapping Engine) [Falkenhainer et al., 1989]. However, most of these models address only one or two stages of analogical reasoning. <p> Computational models of analogy date as early as Kling [1971] though these early models were only approximate. Later computational models such as [Winston, 1982; 1986], [Gentner, 1983; Falkenhainer et al., 1989], [Kedar-Cabelli, 1988], [Carbonell, 1986], and <ref> [Holyoak and Thagard, 1989] </ref> are more complete but still address only some stages of AR, mostly the mapping (or transfer) stage. For instance, SME [Gentner, 1983; Falkenhainer et al., 1989], PDA [Kedar-Cabelli, 1988], and ACME [Holyoak and Thagard, 1989] do not model analog retrieval. <p> as [Winston, 1982; 1986], [Gentner, 1983; Falkenhainer et al., 1989], [Kedar-Cabelli, 1988], [Carbonell, 1986], and <ref> [Holyoak and Thagard, 1989] </ref> are more complete but still address only some stages of AR, mostly the mapping (or transfer) stage. For instance, SME [Gentner, 1983; Falkenhainer et al., 1989], PDA [Kedar-Cabelli, 1988], and ACME [Holyoak and Thagard, 1989] do not model analog retrieval. Other theories such as ARCS [Thagard et al., 1990] focus only on the retrieval stage. In contrast, we consider all stages of analogy in our work.
Reference: [Huhns and Acosta, 1988] <author> M. Huhns and R. Acosta. Argo: </author> <title> A System for Design by Analogy. </title> <journal> IEEE Expert, </journal> <volume> 3(3) </volume> <pages> 53-68, </pages> <month> Fall </month> <year> 1988. </year>
Reference-contexts: A few design systems that fall into this category are KRITIK [Goel, 1989], CADET [Sycara and Navinchandra, 1992], BOGART [Mostow et al., 1989; 1992], ARGO <ref> [Huhns and Acosta, 1988; 1992] </ref>, STRUPLE [Maher and Zhao, 1987] and JULIA [Hinrichs, 1991; 1988]. All these systems operate in the domain of engineering design with the exception of JULIA which is in the domain of meal planning: JULIA designs menus of meals that satisfy multiple, interacting constraints.
Reference: [Huhns and Acosta, 1992] <author> M. Huhns and R. Acosta. Argo: </author> <title> An Analogical Reasoning System for Solving Design Problems. </title> <editor> In C. Tong and D. Sriram, editors, </editor> <booktitle> Artificial Intelligence in Engineering Design, </booktitle> <volume> Vol. II, </volume> <pages> pages 105-143. </pages> <publisher> Academic Press, </publisher> <address> San Diego, CA, </address> <year> 1992. </year>
Reference-contexts: 1992; Navinchandra et al., 1991] also integrates case-based reasoning and behavior-preserving problem-transformation techniques (that enable cross-contextual design retrieval and synthesis of cases); JULIA [Hinrichs, 1991; 1988] integrates case-based reasoning and constraint posting; BOGART [Mostow et al., 1992] uses design reuse via replay of design plans for supporting innovative design; ARGO <ref> [Huhns and Acosta, 1992] </ref> also uses previous design plans and macrorules, which are learned and stored at different levels of abstraction; ALADIN [Rychener et al., 1992] uses multiple knowledge sources, such as cases, rules, mathematical models and statistical methods; and DONTE [Tong, 1992] uses exploration and problem-reformulation techniques in planning the
Reference: [Karp, 1989] <author> P. Karp. </author> <title> Hypothesis Formation and Qualitative Reasoning in Molecular Biology. </title> <type> Ph.D. thesis, </type> <institution> Stanford University, Department of Computer Science, Stanford, </institution> <address> CA, </address> <year> 1989. </year>
Reference-contexts: In this context, our work can be compared to several systems such as PHINEAS [Falkenhainer, 1990], COAST [Rajamoney, 1988; 1990] , and HYPGENE <ref> [Karp, 1989; 1990] </ref> . PHINEAS is a discovery system that forms theories of time-varying physical behaviors by a single similarity-driven explanation mechanism, that is, by analogy to the explanation of a similar situation. The representations in PHINEAS are based on Forbus' [1984] qualitative process (QP) theory.
Reference: [Karp, 1990] <author> P. Karp. </author> <title> Hypothesis Formation as Design. </title> <editor> In J. Shrager and P. Langley, editors, </editor> <booktitle> Computational Models of Scientific Discovery and Theory Formation, </booktitle> <pages> pages 275-317. </pages> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1990. </year>
Reference: [Kedar-Cabelli, 1988] <author> S. Kedar-Cabelli. </author> <title> Toward A Computational Model of Purpose-Directed Analogy. </title> <editor> In R. Michalski, J. Carbonell, and T. Mitchell, editors, </editor> <booktitle> Machine Learning II: An Artificial Intelligence Approach, </booktitle> <pages> pages 284-290. </pages> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, CA, </address> <year> 1988. </year>
Reference-contexts: Computational models of analogy date as early as Kling [1971] though these early models were only approximate. Later computational models such as [Winston, 1982; 1986], [Gentner, 1983; Falkenhainer et al., 1989], <ref> [Kedar-Cabelli, 1988] </ref>, [Carbonell, 1986], and [Holyoak and Thagard, 1989] are more complete but still address only some stages of AR, mostly the mapping (or transfer) stage. For instance, SME [Gentner, 1983; Falkenhainer et al., 1989], PDA [Kedar-Cabelli, 1988], and ACME [Holyoak and Thagard, 1989] do not model analog retrieval. <p> Later computational models such as [Winston, 1982; 1986], [Gentner, 1983; Falkenhainer et al., 1989], <ref> [Kedar-Cabelli, 1988] </ref>, [Carbonell, 1986], and [Holyoak and Thagard, 1989] are more complete but still address only some stages of AR, mostly the mapping (or transfer) stage. For instance, SME [Gentner, 1983; Falkenhainer et al., 1989], PDA [Kedar-Cabelli, 1988], and ACME [Holyoak and Thagard, 1989] do not model analog retrieval. Other theories such as ARCS [Thagard et al., 1990] focus only on the retrieval stage. In contrast, we consider all stages of analogy in our work. <p> Most theories of analogical reasoning also involve transferring relationships directly from a source analog to the target problem: relationships that conform to systematicity principle as in [Gentner, 1983], or causal relationships as in [Winston, 1982; 1986], or functional relationships as in <ref> [Kedar-Cabelli, 1988] </ref> are transferred. Our work is similar to both [Winston, 1982; 1986] and [Kedar-Cabelli, 1988] in that we also transfer causal and functional relationships in a source domain to the target domain, although the tasks we model are quite different. 2.3 Model-Based Analogy In contrast to [Winston, 1982; 1986] and <p> also involve transferring relationships directly from a source analog to the target problem: relationships that conform to systematicity principle as in [Gentner, 1983], or causal relationships as in [Winston, 1982; 1986], or functional relationships as in <ref> [Kedar-Cabelli, 1988] </ref> are transferred. Our work is similar to both [Winston, 1982; 1986] and [Kedar-Cabelli, 1988] in that we also transfer causal and functional relationships in a source domain to the target domain, although the tasks we model are quite different. 2.3 Model-Based Analogy In contrast to [Winston, 1982; 1986] and [Kedar-Cabelli, 1988], our theory of model-based analogy (MBA)|access an abstract model in the source <p> Our work is similar to both [Winston, 1982; 1986] and <ref> [Kedar-Cabelli, 1988] </ref> in that we also transfer causal and functional relationships in a source domain to the target domain, although the tasks we model are quite different. 2.3 Model-Based Analogy In contrast to [Winston, 1982; 1986] and [Kedar-Cabelli, 1988], our theory of model-based analogy (MBA)|access an abstract model in the source domain and instantiate it in the target domain|is based on transferring functional and causal relationships via shared mental models at higher levels of abstraction.
Reference: [Klahr and Dunbar, 1988] <author> D. Klahr and K. Dunbar. </author> <title> Dual Space Search During Scientific Reason ing. </title> <journal> Cognitive Science, </journal> <volume> 12 </volume> <pages> 1-48, </pages> <year> 1988. </year>
Reference-contexts: The integrated architecture shown in Figure 11 is also an architecture for discovery. The 7 IDeAL stands for Integrated "DEsign by Analogy and Learning." 30 process of discovery is generally considered to have two distinct phases <ref> [Klahr and Dunbar, 1988] </ref>: hypothesis formation and hypothesis testing. The stages that correspond to these two phases of discovery are clearly shown in Figure 11. One method for hypothesis formation is to incrementally generalize over design experiences.
Reference: [Kling, 1971] <author> R. Kling. </author> <title> A Paradigm for Reasoning by Analogy. </title> <journal> Artificial Intelligence, </journal> <volume> 2(2) </volume> <pages> 147-178, </pages> <month> Fall </month> <year> 1971. </year>
Reference: [Kolodner and Simpson, 1984] <author> J. L. Kolodner and R. L. Simpson. </author> <title> Experience and Problem Solving: </title>
Reference-contexts: Qian and Gero [1992] have proposed a method for between-domain analogy that uses design prototypes for creative design, and have implemented it in a system called DSSUA. Our work on design is founded on the general paradigm of case-based reasoning (CBR) <ref> [Kolodner and Simpson, 1984; Riesbeck and Schank, 1989] </ref>, but extends it by integrating it with model-based reasoning as in KRITIK. In particular, our work borrows from KRITIK the ontology and representation of device comprehension, that is, SBF models.
References-found: 45

