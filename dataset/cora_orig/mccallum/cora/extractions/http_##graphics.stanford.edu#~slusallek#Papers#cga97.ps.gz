URL: http://graphics.stanford.edu/~slusallek/Papers/cga97.ps.gz
Refering-URL: http://graphics.stanford.edu/~slusallek/cv.html
Root-URL: http://www.cs.stanford.edu
Title: Composite Lighting Simulations with Lighting Networks  
Author: Philipp Slusallek, Marc Stamminger, Wolfgang Heidrich, Jan-Christian Popp, and Hans-Peter Seidel 
Address: Germany  
Affiliation: Computer Graphics Group Universitat Erlangen-Nurnberg,  
Abstract: A whole variety of different techniques for simulating global illumination in virtual environments have been developed over recent years. Each technique, including Radiosity, Monte-Carlo ray- or photon tracing, and directional-dependent Radiance computations, is best suited for simulating only some special case environments. None of these techniques is currently able to efficiently simulate all important lighting effects in non-trivial scenes. In this paper, we describe a new approach for efficiently combining different global illumination algorithms to yield a composite lighting simulation: Lighting Networks. Lighting Networks can exploit the advantages of each algorithm and can combine them in such a way as to simulate lighting effects that could only be computed at great costs by any single algorithm. Furthermore, this approach allows a user to configure the Lighting Network to compute only specific lighting effects that are important for a given task, while avoiding a costly simulation of the full global illumination in a scene. We show how the light paths computed by a Lighting Network can be described using regular expressions. This mapping allows us to analyze the composite lighting simulation and ensure completeness and redundant-free computations. Several examples demonstrate the advantages and unique lighting effects that can be obtained using this technique. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> ABRAM, G. D., AND WHITTED, T. </author> <title> Building block shaders. </title> <booktitle> Computer Graphics (SIGGRAPH '90 Proceedings) 24, </booktitle> <month> 4 (August </month> <year> 1990), </year> <month> 283288. </month>
Reference-contexts: This flexible combination allows for easily obtaining special lighting effects that would be difficult to compute with a single or a fixed combination of algorithms. In that sense Lighting Networks generalize the basic ideas of Shade Trees <ref> [9, 1] </ref> and similar approaches and apply them to the more complex domain of global simulation of illumination. Moreover, the ability of restricting LightOps to certain parts of the scene allows to tailor the global lighting simulation to the needs of a user (see Figure 1).
Reference: [2] <author> ARVO, J., TORRANCE, K., AND SMITH, B. </author> <title> A framework for the analysis of error in global illumination algorithms. </title> <booktitle> Computer Graphics (SIGGRAPH '94 Proceedings) (July 1994), </booktitle> <pages> 7584. </pages>
Reference-contexts: We can write this equation in operator notation <ref> [2] </ref> as L = L e + KGL; or (3) ML = L e ; with M = I KG; (4) where G is the non-local, purely geometric field radiance operator that describes visibility and computes the incident radiance at point y from the outgoing surface radiance at other points in
Reference: [3] <author> AUPPERLE, L., AND HANRAHAN, P. </author> <title> A hierarchical illumination algorithm for surfaces with glossy reflection. </title> <booktitle> In Computer Graphics (SIGGRAPH '93 Proceedings) (August 1993), </booktitle> <pages> pp. 155162. </pages>
Reference-contexts: Examples are radiosity algorithms [14, 7, 8, 16, 35, 42] that only consider diffuse reflections, but can achieve fast simulations using advanced hierarchical and clustering methods [16, 35, 42, 36]. However, the computational complexity of finite element methods that include the full direc-tionally depended reflection <ref> [21, 3, 32, 6, 24] </ref> is still cubic in the number of scene objects, which rules this method out even for simple environments with more than a few non-diffuse surfaces.
Reference: [4] <author> BAUM, D. R., WALLACE, J. R., COHEN, M. F., AND GREEN-BERG, D. P. </author> <title> The back-buffer algorithm: An extension of the radiosity method to dynamic environments. </title> <booktitle> The Visual Computer 2, 5 (Septem-ber 1986), </booktitle> <pages> 298306. </pages>
Reference: [5] <author> CHEN, S. E., RUSHMEIER, H. E., MILLER, G., AND TURNER, D. </author> <title> A progressive multi-pass method for global illumination. </title> <booktitle> Computer Graphics (SIGGRAPH '91 Proceedings) 25, </booktitle> <month> 4 (July </month> <year> 1991), </year> <month> 165174. </month>
Reference-contexts: In [26, 47, 38, 30], a radiosity computation is followed by a second view-dependent ray-tracing pass for capturing specular highlights. [30] also includes a geometric simplification step for speeding up the radiosity pass (also see Section 4). In addition, <ref> [19, 34, 5, 22] </ref> include Monte-Carlo path and photon tracing for simulating specular and caustic light paths. Usually, these methods split the description of reflection and/or illumination into separate parts (high and low spatial frequency components), each of which is simulated with a different lighting algorithm before being combined. <p> This approach is essentially the same as Southwell relaxation or the shooting method in radios-ity [15, 7]. This relaxation scheme may also be used for progressive refinement of the global solution <ref> [5] </ref>. Passing an error criterion (e.g. maximum change in energy, minimum area subdivision) to the solution procedure of a LightOp allows for controlling the accuracy of each relaxation step.
Reference: [6] <author> CHRISTENSEN, P. H., STOLLNITZ, E. J., SALESIN, D., AND DEROSE, T. D. </author> <title> Wavelet radiance. </title> <booktitle> In Fifth Eurographics Workshop on Rendering (Darmstadt, </booktitle> <month> June </month> <year> 1994), </year> <pages> pp. 287301. </pages>
Reference-contexts: Examples are radiosity algorithms [14, 7, 8, 16, 35, 42] that only consider diffuse reflections, but can achieve fast simulations using advanced hierarchical and clustering methods [16, 35, 42, 36]. However, the computational complexity of finite element methods that include the full direc-tionally depended reflection <ref> [21, 3, 32, 6, 24] </ref> is still cubic in the number of scene objects, which rules this method out even for simple environments with more than a few non-diffuse surfaces.
Reference: [7] <author> COHEN, M., CHEN, S. E., WALLACE, J. R., AND GREENBERG, D. P. </author> <title> A progressive refinement approach to fast radiosity image generation. </title> <booktitle> Computer Graphics (SIGGRAPH '88 Proceedings) 22, </booktitle> <month> 4 (August </month> <year> 1988), </year> <month> 7584. </month>
Reference-contexts: For environments without participating media (volumetric effects) the simulation requires to solve the radiance or rendering equation [23]. Many of the available techniques restrict the lighting effects they simulate by using a simplified version of the radiance equation in order to speed up the calculation. Examples are radiosity algorithms <ref> [14, 7, 8, 16, 35, 42] </ref> that only consider diffuse reflections, but can achieve fast simulations using advanced hierarchical and clustering methods [16, 35, 42, 36]. <p> Even the commonly used ambient term <ref> [7] </ref> is a trivial form of an IllumBasis, that can be made available by radiosity LightOps (see Figure 3). LightOps can only be connected within a Lighting Network, if they speak a common language, meaning they support a common IllumBasis. <p> The second solution required less than 1/10th of the time using a radiosity algorithms with clustering [35, 36] and much less than 1/100th the time when using standard Hierarchical Radiosity [17]. For the remaining surfaces the ambient term <ref> [7] </ref> is used to estimate the indirect illumination. Differences are visible as decreased contrast and accuracy, in particular at the legs of the table. account for. <p> A more intelligent method relaxes those nodes of the graph first, that are connected to the output of that node, which has indicated the maximum change in its output. This approach is essentially the same as Southwell relaxation or the shooting method in radios-ity <ref> [15, 7] </ref>. This relaxation scheme may also be used for progressive refinement of the global solution [5]. Passing an error criterion (e.g. maximum change in energy, minimum area subdivision) to the solution procedure of a LightOp allows for controlling the accuracy of each relaxation step.
Reference: [8] <author> COHEN, M. F., AND WALLACE, J. R. </author> <title> Radiosity and Realistic Image Synthesis. </title> <publisher> Academic Press, </publisher> <year> 1993. </year>
Reference-contexts: For environments without participating media (volumetric effects) the simulation requires to solve the radiance or rendering equation [23]. Many of the available techniques restrict the lighting effects they simulate by using a simplified version of the radiance equation in order to speed up the calculation. Examples are radiosity algorithms <ref> [14, 7, 8, 16, 35, 42] </ref> that only consider diffuse reflections, but can achieve fast simulations using advanced hierarchical and clustering methods [16, 35, 42, 36].
Reference: [9] <author> COOK, R. L. </author> <title> Shade trees. </title> <booktitle> Computer Graphics (SIGGRAPH '84 Proceedings) 18, </booktitle> <month> 3 (July </month> <year> 1984), </year> <month> 223231. </month>
Reference-contexts: This flexible combination allows for easily obtaining special lighting effects that would be difficult to compute with a single or a fixed combination of algorithms. In that sense Lighting Networks generalize the basic ideas of Shade Trees <ref> [9, 1] </ref> and similar approaches and apply them to the more complex domain of global simulation of illumination. Moreover, the ability of restricting LightOps to certain parts of the scene allows to tailor the global lighting simulation to the needs of a user (see Figure 1).
Reference: [10] <author> COOK, R. L., PORTER, T., AND CARPENTER, L. </author> <title> Distributed ray tracing. </title> <booktitle> Computer Graphics (SIGGRAPH '84 Proceedings) 18, </booktitle> <month> 3 (July </month> <year> 1984), </year> <month> 137145. </month>
Reference-contexts: On the other hand, Monte-Carlo path or photon tracing techniques <ref> [10, 23, 45, 46, 19, 28] </ref> simulate illumination by recursive stochastic sampling of illumination in the environment, starting with rays from the virtual camera or the light sources, respectively.
Reference: [11] <author> DURAND, F., DRETTAKIS, G., AND PUECH, C. </author> <title> The 3D visibility complex: A new approach to the problem of accurate visibility. </title> <booktitle> In Rendering Techniques '96 (Proceedings Seventh Eurographics Workshop on Rendering) (Porto, </booktitle> <month> June </month> <year> 1996), </year> <editor> X. Pueyo and P. Schr oder, Eds., </editor> <publisher> Springer, </publisher> <pages> pp. 246257. </pages>
Reference-contexts: Domains may also be used for speeding up the computation by restricting a LightOp to relevant parts of a scene. One example is, to use one LightOp for each room in a building, using the geometry visible from this room <ref> [44, 43, 11] </ref> for all of its domains. Finally, special effects can be created by limiting the effects of a LightOp to a particular subsets of the scene. An example for the use of a LightOp restricted to a particular domain is given in Figure 3.
Reference: [12] <author> GEORGE, D. W., SILLION, F. X., AND GREENBERG, D. P. </author> <title> Radios-ity redistribution for dynamic environments. </title> <journal> IEEE Computer Graphics and Applications 10, </journal> <month> 4 (July </month> <year> 1990), </year> <month> 2634. </month>
Reference: [13] <author> GERSHBEIN, R., SCHR ODER, P., AND HANRAHAN, P. </author> <title> Textures and radiosity: Controlling emission and reflection with texture maps. </title> <booktitle> In Computer Graphics (SIGGRAPH '94 Proceedings) (July 1994), </booktitle> <editor> A. Glassner, </editor> <publisher> Ed., </publisher> <pages> pp. 5158. </pages>
Reference-contexts: Depending on the requirements of a LightOp, a projection of the BRDF with one of its directions fixed is often sufficient. Only few approaches have been published for projecting general reflection functions, for instance procedural shaders, into a particular basis <ref> [52, 49, 13, 39] </ref>. Unfortunately, most of them are not well-suited to our task. Thus, until more general projection algorithms are available, the reflection bases that are most applicable are the commonly used reflection models themselves (e.g. [29, 18, 49, 31]), including simple variations as mentioned above.
Reference: [14] <author> GORAL, C. M., TORRANCE, K. E., AND GREENBERG, D. P. </author> <title> Modeling the interaction of light between diffuse surfaces. </title> <booktitle> Computer Graphics (SIGGRAPH '84 Proceedings) 18, </booktitle> <month> 3 (July </month> <year> 1984), </year> <month> 212222. </month>
Reference-contexts: For environments without participating media (volumetric effects) the simulation requires to solve the radiance or rendering equation [23]. Many of the available techniques restrict the lighting effects they simulate by using a simplified version of the radiance equation in order to speed up the calculation. Examples are radiosity algorithms <ref> [14, 7, 8, 16, 35, 42] </ref> that only consider diffuse reflections, but can achieve fast simulations using advanced hierarchical and clustering methods [16, 35, 42, 36].
Reference: [15] <author> GORTLER, S., COHEN, M. F., AND SLUSALLEK, P. </author> <title> Radiosity and relaxation methods. </title> <journal> IEEE Computer Graphics & Applications 14, </journal> <month> 6 (November </month> <year> 1994), </year> <month> 4858. </month>
Reference-contexts: A more intelligent method relaxes those nodes of the graph first, that are connected to the output of that node, which has indicated the maximum change in its output. This approach is essentially the same as Southwell relaxation or the shooting method in radios-ity <ref> [15, 7] </ref>. This relaxation scheme may also be used for progressive refinement of the global solution [5]. Passing an error criterion (e.g. maximum change in energy, minimum area subdivision) to the solution procedure of a LightOp allows for controlling the accuracy of each relaxation step.
Reference: [16] <author> GORTLER, S. J., SCHR ODER, P., COHEN, M., AND HANRAHAN, P. M. </author> <title> Wavelet radiosity. </title> <booktitle> Computer Graphics (SIGGRAPH '93 Proceedings) 27 (August 1993), </booktitle> <pages> 221230. </pages>
Reference-contexts: For environments without participating media (volumetric effects) the simulation requires to solve the radiance or rendering equation [23]. Many of the available techniques restrict the lighting effects they simulate by using a simplified version of the radiance equation in order to speed up the calculation. Examples are radiosity algorithms <ref> [14, 7, 8, 16, 35, 42] </ref> that only consider diffuse reflections, but can achieve fast simulations using advanced hierarchical and clustering methods [16, 35, 42, 36]. <p> Examples are radiosity algorithms [14, 7, 8, 16, 35, 42] that only consider diffuse reflections, but can achieve fast simulations using advanced hierarchical and clustering methods <ref> [16, 35, 42, 36] </ref>. However, the computational complexity of finite element methods that include the full direc-tionally depended reflection [21, 3, 32, 6, 24] is still cubic in the number of scene objects, which rules this method out even for simple environments with more than a few non-diffuse surfaces. <p> a single outgoing radiance sample L (x; ~!), a point sampling basis for an incident light field (consisting of an irradiance value plus a list of incident radiance samples L i (x; ~! i ) ~ d! i ), a hierarchical quadtree basis with constant or higher order basis functions <ref> [17, 16] </ref> used by many of the finite element LightOps, or the photon map basis [22] with its implicit radial basis functions computed from the location of a set of photons in the scene.
Reference: [17] <author> HANRAHAN, P., SALZMAN, D., AND AUPPERLE, L. </author> <title> A rapid hierarchical radiosity algorithm. </title> <booktitle> Computer Graphics (SIGGRAPH '91 Proceedings) 25, </booktitle> <month> 4 </month> <year> (1991), 197206. </year>
Reference-contexts: a single outgoing radiance sample L (x; ~!), a point sampling basis for an incident light field (consisting of an irradiance value plus a list of incident radiance samples L i (x; ~! i ) ~ d! i ), a hierarchical quadtree basis with constant or higher order basis functions <ref> [17, 16] </ref> used by many of the finite element LightOps, or the photon map basis [22] with its implicit radial basis functions computed from the location of a set of photons in the scene. <p> The second solution required less than 1/10th of the time using a radiosity algorithms with clustering [35, 36] and much less than 1/100th the time when using standard Hierarchical Radiosity <ref> [17] </ref>. For the remaining surfaces the ambient term [7] is used to estimate the indirect illumination. Differences are visible as decreased contrast and accuracy, in particular at the legs of the table. account for.
Reference: [18] <author> HE, X. D., TORRANCE, K. E., SILLION, F. X., AND GREENBERG, D. P. </author> <title> A comprehensive physical model for light reflection. </title> <booktitle> In Computer Graphics (SIGGRAPH '91 Proceedings) (July 1991), </booktitle> <volume> vol. 25, </volume> <pages> pp. 175186. </pages>
Reference-contexts: Unfortunately, most of them are not well-suited to our task. Thus, until more general projection algorithms are available, the reflection bases that are most applicable are the commonly used reflection models themselves (e.g. <ref> [29, 18, 49, 31] </ref>), including simple variations as mentioned above. Promising more general reflection bases for this task are spherical harmonics [37] or spherical wavelets [33].
Reference: [19] <author> HECKBERT, P. </author> <title> Adaptive radiosity textures for bidirectional ray tracing. </title> <booktitle> In Computer Graphics (SIGGRAPH '90 Proceedings) (August 1990), </booktitle> <volume> vol. 24, </volume> <pages> pp. 145154. </pages>
Reference-contexts: On the other hand, Monte-Carlo path or photon tracing techniques <ref> [10, 23, 45, 46, 19, 28] </ref> simulate illumination by recursive stochastic sampling of illumination in the environment, starting with rays from the virtual camera or the light sources, respectively. <p> In [26, 47, 38, 30], a radiosity computation is followed by a second view-dependent ray-tracing pass for capturing specular highlights. [30] also includes a geometric simplification step for speeding up the radiosity pass (also see Section 4). In addition, <ref> [19, 34, 5, 22] </ref> include Monte-Carlo path and photon tracing for simulating specular and caustic light paths. Usually, these methods split the description of reflection and/or illumination into separate parts (high and low spatial frequency components), each of which is simulated with a different lighting algorithm before being combined. <p> Note, that this definition of LightOps is an extended version of Heckberts notation, which also used regular expressions to specify a part of a light path <ref> [19] </ref>. By combining several LightOps in a Lighting Network, the regular expressions of each LightOp are concatenated along all possible path through the directed graph. In combination these regular expressions specify the light paths that can be simulated by a particular network. <p> An example for this composite reflection computation, would be the use of a radiosity LightOp O D for computing the diffuse term of a Phong reflection model and the use of a Monte-Carlo photon tracing LightOp O S for the specular term, similar to <ref> [19] </ref>. But this approach can only be applied if the Phong reflection model is used for all reflection computations. A more general solution must be found for removing this restriction from Lighting Networks. <p> It cannot be expected that an un-experienced user can handle this for non-trivial networks. In the following, we point out a strong connection between Lighting Networks and regular expressions and their equivalent finite automata, extending the ideas introduced by Heckbert <ref> [19] </ref>. We build on the notion of light paths describing bounces of photons in the environment. Each reflection of a photon is classified and labeled according to the domains of the reflection and the class of reflection operator that is being simulated by the LightOp computing the reflection.
Reference: [20] <author> HOPCROFT, J. E., AND ULLMAN, J. D. </author> <title> Introduction to automata theory, languages, and computation. </title> <publisher> Addison-Wesley, </publisher> <year> 1979. </year>
Reference-contexts: Upon request each LightOp returns a regular expression for the light paths simulated by its internal configuration. The manager of the Lighting Network then combines the individual expressions in order to get the full regular expression of the network. Using well-established results from formal language theory <ref> [20] </ref>, we can now perform operations on this formal representation of a Lighting Network. The network can be checked for redundant computations by recursively checking that alternatives (j) can not generate the same patterns.
Reference: [21] <author> IMMEL, D. S., COHEN, M. F., AND GREENBERG, D. P. </author> <title> A radios-ity method for non-diffuse environments. </title> <booktitle> Computer Graphics (SIG-GRAPH '86 Proceedings) (August 1986), </booktitle> <pages> 133142. </pages>
Reference-contexts: Examples are radiosity algorithms [14, 7, 8, 16, 35, 42] that only consider diffuse reflections, but can achieve fast simulations using advanced hierarchical and clustering methods [16, 35, 42, 36]. However, the computational complexity of finite element methods that include the full direc-tionally depended reflection <ref> [21, 3, 32, 6, 24] </ref> is still cubic in the number of scene objects, which rules this method out even for simple environments with more than a few non-diffuse surfaces.
Reference: [22] <author> JENSEN, H. W. </author> <title> Global illumination using photon maps. </title> <booktitle> In Rendering Techniques '96 (Proceedings Seventh Eurographics Workshop on Rendering) (June 1996), </booktitle> <editor> X. Pueyo and P. Schr oder, Eds., </editor> <publisher> Springer, </publisher> <pages> pp. 2130. </pages>
Reference-contexts: In [26, 47, 38, 30], a radiosity computation is followed by a second view-dependent ray-tracing pass for capturing specular highlights. [30] also includes a geometric simplification step for speeding up the radiosity pass (also see Section 4). In addition, <ref> [19, 34, 5, 22] </ref> include Monte-Carlo path and photon tracing for simulating specular and caustic light paths. Usually, these methods split the description of reflection and/or illumination into separate parts (high and low spatial frequency components), each of which is simulated with a different lighting algorithm before being combined. <p> In combination these regular expressions specify the light paths that can be simulated by a particular network. Section 6 will discuss the regular expression notation in more detail. As an example of a trivial Lighting Network, we take a LightOp O C that computes a caustic photon map <ref> [22] </ref>, representing irradi ance via all light paths from light sources via specular surfaces ^ K S ending at diffuse surfaces, and connect it to a slightly modified ra-diosity LightOp O Rad 0 that computes incident irradiance instead of outgoing radiosity via diffuse reflections. <p> light field (consisting of an irradiance value plus a list of incident radiance samples L i (x; ~! i ) ~ d! i ), a hierarchical quadtree basis with constant or higher order basis functions [17, 16] used by many of the finite element LightOps, or the photon map basis <ref> [22] </ref> with its implicit radial basis functions computed from the location of a set of photons in the scene. Even the commonly used ambient term [7] is a trivial form of an IllumBasis, that can be made available by radiosity LightOps (see Figure 3).
Reference: [23] <author> KAJIYA, J. T. </author> <title> The rendering equation. </title> <booktitle> Computer Graphics (SIG-GRAPH '86 Proceedings) 20, </booktitle> <month> 4 (August </month> <year> 1986), </year> <month> 143150. </month>
Reference-contexts: 1 Introduction Over the last years, many different lighting simulation techniques have been developed for computing the distribution of light in a virtual environment. For environments without participating media (volumetric effects) the simulation requires to solve the radiance or rendering equation <ref> [23] </ref>. Many of the available techniques restrict the lighting effects they simulate by using a simplified version of the radiance equation in order to speed up the calculation. <p> On the other hand, Monte-Carlo path or photon tracing techniques <ref> [10, 23, 45, 46, 19, 28] </ref> simulate illumination by recursive stochastic sampling of illumination in the environment, starting with rays from the virtual camera or the light sources, respectively.
Reference: [24] <author> LEWIS, R. R., AND FOURNIER, A. </author> <title> Light-driven global illumination with a wavelet representation of light transport. </title> <booktitle> In Rendering Techniques '96 (Proceedings Seventh Eurographics Workshop on Rendering) (Porto, </booktitle> <address> June 1996), </address> <publisher> Springer, </publisher> <pages> pp. 1120. </pages>
Reference-contexts: Examples are radiosity algorithms [14, 7, 8, 16, 35, 42] that only consider diffuse reflections, but can achieve fast simulations using advanced hierarchical and clustering methods [16, 35, 42, 36]. However, the computational complexity of finite element methods that include the full direc-tionally depended reflection <ref> [21, 3, 32, 6, 24] </ref> is still cubic in the number of scene objects, which rules this method out even for simple environments with more than a few non-diffuse surfaces.
Reference: [25] <author> M ULLER, S., AND SCH OFFEL, F. </author> <title> Fast radiosity repropagation for interactive virtual environments using a shadow-form-factor-list. </title> <booktitle> In Photorealitic Rendering Techniques (Proceedings Fifth Eurographics Workshop on Rendering) (Darmstadt, </booktitle> <address> Germany, June 1994), </address> <publisher> Springer, </publisher> <pages> pp. 325342. </pages>
Reference: [26] <author> NAKAMAE, T. N. E. </author> <title> Continous tone representation of three-dimensional objects taking account of shadows and interreflection. </title> <booktitle> Computer Graphics (SIGGRAPH '85 Proceedings) 19, </booktitle> <month> 3 (July </month> <year> 1985), </year> <month> 2330. </month>
Reference-contexts: Two- and multi-pass techniques try to exploit the advantages of multiple lighting algorithms by combining the effects computed by each of them. In <ref> [26, 47, 38, 30] </ref>, a radiosity computation is followed by a second view-dependent ray-tracing pass for capturing specular highlights. [30] also includes a geometric simplification step for speeding up the radiosity pass (also see Section 4).
Reference: [27] <author> NICODEMUS, F. E., RICHMOND, J. C., HSIA, J. J., GINSBERG, I. W., AND LIMPERIS, T. </author> <title> Geometrical Considerations and Nomenclature for Reflectance. National Bureau of Standard, </title> <address> Washington, </address> <month> October </month> <year> 1977. </year>
Reference-contexts: More elaborate schemes can of course be used for implementing Lighting Networks. 5 Classification of Reflection Operators Each of the LightOps in a network computes an approximation to the true local reflection operator K, which is generally given by a bidirectional reflectance distribution function (BRDF) <ref> [27] </ref>. A simple solution would be to assign each surface to only a single LightOp using the domain decomposition technique just described.
Reference: [28] <author> PATTANAIK, S. N., AND MUDUR, S. P. </author> <title> Computation of global illumination by Monte Carlo simulation of the particle model of light. </title> <booktitle> Third Eurographics Workshop on Rendering (May 1992), </booktitle> <pages> 7183. </pages>
Reference-contexts: On the other hand, Monte-Carlo path or photon tracing techniques <ref> [10, 23, 45, 46, 19, 28] </ref> simulate illumination by recursive stochastic sampling of illumination in the environment, starting with rays from the virtual camera or the light sources, respectively.
Reference: [29] <author> PHONG, B.-T. </author> <title> Illumination for computer generated pictures. </title> <type> CACM 18, </type> <month> 3 (July </month> <year> 1975), </year> <month> 311317. </month>
Reference-contexts: Unfortunately, most of them are not well-suited to our task. Thus, until more general projection algorithms are available, the reflection bases that are most applicable are the commonly used reflection models themselves (e.g. <ref> [29, 18, 49, 31] </ref>), including simple variations as mentioned above. Promising more general reflection bases for this task are spherical harmonics [37] or spherical wavelets [33].
Reference: [30] <author> RUSHMEIER, H., PATTERSON, C., AND VEERASAMY, A. </author> <title> Geometric simplification for indirect illumination calculations. </title> <booktitle> In Proceedings Graphics Interface '93 (1993), </booktitle> <publisher> Morgan Kaufmann publishers. </publisher>
Reference-contexts: Two- and multi-pass techniques try to exploit the advantages of multiple lighting algorithms by combining the effects computed by each of them. In <ref> [26, 47, 38, 30] </ref>, a radiosity computation is followed by a second view-dependent ray-tracing pass for capturing specular highlights. [30] also includes a geometric simplification step for speeding up the radiosity pass (also see Section 4). <p> Two- and multi-pass techniques try to exploit the advantages of multiple lighting algorithms by combining the effects computed by each of them. In [26, 47, 38, 30], a radiosity computation is followed by a second view-dependent ray-tracing pass for capturing specular highlights. <ref> [30] </ref> also includes a geometric simplification step for speeding up the radiosity pass (also see Section 4). In addition, [19, 34, 5, 22] include Monte-Carlo path and photon tracing for simulating specular and caustic light paths. <p> This allows to increase the speed of the simulation by restricting costly simulations to regions where they are required, or it allows a user to selectively include or exclude certain lighting effects. This approach is somewhat similar to the idea in <ref> [30] </ref>, which used a geometrically simplified environment for speeding up the radiosity computation for indirect illumination. Although we do not provide simplification directly in the Lighting Networks concept, the restriction of the domain of LightOps together with automatic clustering techniques implements the same general idea.
Reference: [31] <author> SCHLICK, C. </author> <title> Customizable reflectance models for everyday rendering. </title> <booktitle> In Fourth Eurographics Workshop on Rendering (Paris, </booktitle> <month> June </month> <year> 1993), </year> <pages> pp. 7383. </pages>
Reference-contexts: Unfortunately, most of them are not well-suited to our task. Thus, until more general projection algorithms are available, the reflection bases that are most applicable are the commonly used reflection models themselves (e.g. <ref> [29, 18, 49, 31] </ref>), including simple variations as mentioned above. Promising more general reflection bases for this task are spherical harmonics [37] or spherical wavelets [33].
Reference: [32] <author> SCHR ODER, P., AND HANRAHAN, P. </author> <title> Wavelet methods for radiance computations. </title> <booktitle> In Photorealistic Rendering Techniques (Proceedings Fifth Eurographics Workshop on Rendering) (Darmstadt, </booktitle> <address> June 1994), </address> <publisher> Springer, </publisher> <pages> pp. 303311. </pages>
Reference-contexts: Examples are radiosity algorithms [14, 7, 8, 16, 35, 42] that only consider diffuse reflections, but can achieve fast simulations using advanced hierarchical and clustering methods [16, 35, 42, 36]. However, the computational complexity of finite element methods that include the full direc-tionally depended reflection <ref> [21, 3, 32, 6, 24] </ref> is still cubic in the number of scene objects, which rules this method out even for simple environments with more than a few non-diffuse surfaces.
Reference: [33] <author> SCHR ODER, P., AND SWELDENS, W. </author> <title> Spherical wavelets: Efficiently representing functions on the sphere. </title> <booktitle> Computer Graphics (SIGGRAPH '95 Proceedings) (August 1995), </booktitle> <pages> 161172. </pages>
Reference-contexts: Thus, until more general projection algorithms are available, the reflection bases that are most applicable are the commonly used reflection models themselves (e.g. [29, 18, 49, 31]), including simple variations as mentioned above. Promising more general reflection bases for this task are spherical harmonics [37] or spherical wavelets <ref> [33] </ref>. In the second step, similar to IllumBases, each LightOp provides a list of primary reflection bases and for each of these bases a list of terms that it can account for in its simulation.
Reference: [34] <author> SHIRLEY, P. </author> <title> A ray tracing algorithm for global illumination. </title> <booktitle> In Graphics Interface '90 (May 1990), </booktitle> <pages> pp. </pages> <year> 205212. </year>
Reference-contexts: In [26, 47, 38, 30], a radiosity computation is followed by a second view-dependent ray-tracing pass for capturing specular highlights. [30] also includes a geometric simplification step for speeding up the radiosity pass (also see Section 4). In addition, <ref> [19, 34, 5, 22] </ref> include Monte-Carlo path and photon tracing for simulating specular and caustic light paths. Usually, these methods split the description of reflection and/or illumination into separate parts (high and low spatial frequency components), each of which is simulated with a different lighting algorithm before being combined.
Reference: [35] <author> SILLION, F. </author> <title> Clustering and volume scattering for hierarchical radios-ity calculations. </title> <booktitle> In Photorealistic Rendering Technique (Proceedings Fifth Eurographics Workshop on Rendering) (Darmstadt, </booktitle> <address> June 1994), </address> <publisher> Springer, </publisher> <pages> pp. 105120. </pages>
Reference-contexts: For environments without participating media (volumetric effects) the simulation requires to solve the radiance or rendering equation [23]. Many of the available techniques restrict the lighting effects they simulate by using a simplified version of the radiance equation in order to speed up the calculation. Examples are radiosity algorithms <ref> [14, 7, 8, 16, 35, 42] </ref> that only consider diffuse reflections, but can achieve fast simulations using advanced hierarchical and clustering methods [16, 35, 42, 36]. <p> Examples are radiosity algorithms [14, 7, 8, 16, 35, 42] that only consider diffuse reflections, but can achieve fast simulations using advanced hierarchical and clustering methods <ref> [16, 35, 42, 36] </ref>. However, the computational complexity of finite element methods that include the full direc-tionally depended reflection [21, 3, 32, 6, 24] is still cubic in the number of scene objects, which rules this method out even for simple environments with more than a few non-diffuse surfaces. <p> In the upper image the radiosity solution is computed on all surfaces. For the lower image only the ceiling is considered a light source, and the light is only reflected on the walls. The second solution required less than 1/10th of the time using a radiosity algorithms with clustering <ref> [35, 36] </ref> and much less than 1/100th the time when using standard Hierarchical Radiosity [17]. For the remaining surfaces the ambient term [7] is used to estimate the indirect illumination. Differences are visible as decreased contrast and accuracy, in particular at the legs of the table. account for. <p> contribution by caustic light paths. (a) direct light paths only, (b) caustic light path only, (c) direct and caustic light path, (d) same as (c) but after conversion to quadtree, (e) indirect illumination with light exchange and color bleeding between the red paper and the book computed with clustered radiosity <ref> [35] </ref> after linear interpolation, (f) Complete composite simulation including ray traced transparency and reflection.
Reference: [36] <author> SILLION, F. </author> <title> A unified hierarchical algorithm for global illumination with scattering volumes and object clusters. </title> <journal> IEEE Transactions on Visualization and Computer Graphics 1, </journal> <month> 3 (September </month> <year> 1995). </year>
Reference-contexts: Examples are radiosity algorithms [14, 7, 8, 16, 35, 42] that only consider diffuse reflections, but can achieve fast simulations using advanced hierarchical and clustering methods <ref> [16, 35, 42, 36] </ref>. However, the computational complexity of finite element methods that include the full direc-tionally depended reflection [21, 3, 32, 6, 24] is still cubic in the number of scene objects, which rules this method out even for simple environments with more than a few non-diffuse surfaces. <p> In the upper image the radiosity solution is computed on all surfaces. For the lower image only the ceiling is considered a light source, and the light is only reflected on the walls. The second solution required less than 1/10th of the time using a radiosity algorithms with clustering <ref> [35, 36] </ref> and much less than 1/100th the time when using standard Hierarchical Radiosity [17]. For the remaining surfaces the ambient term [7] is used to estimate the indirect illumination. Differences are visible as decreased contrast and accuracy, in particular at the legs of the table. account for.
Reference: [37] <author> SILLION, F. X., ARVO, J. R., WESTIN, S. H., AND GREENBERG, D. P. </author> <title> A global illumination solution for general reflectance distributions. </title> <booktitle> Computer Graphics (SIGGRAPH '91 Proceedings) 25, </booktitle> <month> 4 (July </month> <year> 1991), </year> <month> 187196. </month>
Reference-contexts: Thus, until more general projection algorithms are available, the reflection bases that are most applicable are the commonly used reflection models themselves (e.g. [29, 18, 49, 31]), including simple variations as mentioned above. Promising more general reflection bases for this task are spherical harmonics <ref> [37] </ref> or spherical wavelets [33]. In the second step, similar to IllumBases, each LightOp provides a list of primary reflection bases and for each of these bases a list of terms that it can account for in its simulation.
Reference: [38] <author> SILLION, F. X., AND PUECH, C. </author> <title> A general two-pass method integrating specular and diffuse reflection. </title> <booktitle> Computer Graphics (SIGGRAPH '89 Proceedings) 23, </booktitle> <month> 3 (July </month> <year> 1989), </year> <month> 335344. </month>
Reference-contexts: Two- and multi-pass techniques try to exploit the advantages of multiple lighting algorithms by combining the effects computed by each of them. In <ref> [26, 47, 38, 30] </ref>, a radiosity computation is followed by a second view-dependent ray-tracing pass for capturing specular highlights. [30] also includes a geometric simplification step for speeding up the radiosity pass (also see Section 4).
Reference: [39] <author> SLUSALLEK, P., PFLAUM, T., AND SEIDEL, H.-P. </author> <title> Using procedural RenderMan shaders for global illumination. </title> <booktitle> In Computer Graphics Forum (EUROGRAPHICS '95 Proceedings) (Maastricht, </booktitle> <month> August </month> <year> 1995), </year> <pages> pp. </pages> <month> C311C324. </month>
Reference-contexts: Depending on the requirements of a LightOp, a projection of the BRDF with one of its directions fixed is often sufficient. Only few approaches have been published for projecting general reflection functions, for instance procedural shaders, into a particular basis <ref> [52, 49, 13, 39] </ref>. Unfortunately, most of them are not well-suited to our task. Thus, until more general projection algorithms are available, the reflection bases that are most applicable are the commonly used reflection models themselves (e.g. [29, 18, 49, 31]), including simple variations as mentioned above.
Reference: [40] <author> SLUSALLEK, P., AND SEIDEL, H.-P. </author> <title> Vision: An architecture for global illumination calculations. </title> <journal> IEEE Transactions on Visualization and Computer Graphics 1, </journal> <month> 1 (March </month> <year> 1995), </year> <month> 7796. </month>
Reference-contexts: Images showing the progressive refinement of a scene are presented in Figure 6. 8 Implementation The Lighting Networks as described above have been implemented as part of an object-oriented and physically-based rendering system <ref> [40] </ref>. In this system, all queries for global illumination are sent to an object of the abstract lighting class, which manages the actual simulation. Many different lighting algorithms had been implemented for this system as derived classes, but it was difficult to use these algorithms in combination.
Reference: [41] <author> SLUSALLEK, P., STAMMINGER, M., AND SEIDEL, H.-P. </author> <title> Lighting networks: A new approach for designing lighting algorithms. </title> <note> submitted for publication, </note> <year> 1998. </year>
Reference-contexts: During the development it turned out that Lighting Networks also provide an ideal environment for the development of new lighting simulation algorithms and explicitly show the similarities and differences between lighting simulation approaches <ref> [41] </ref>. In the Lighting Network approach, each lighting algorithm is considered a Lighting Operator or LightOp for short (see Section 2 for a formal definition), taking illumination information as input and generating new illumination information as output after having simulated part of the global lighting effects in the scene.
Reference: [42] <author> SMITS, B., ARVO, J., AND GREENBERG, D. </author> <title> A clustering algorithm for radiosity in complex environments. </title> <booktitle> Computer Graphics (SIG-GRAPH '94 Proceedings) (July 1994), </booktitle> <pages> 435442. </pages>
Reference-contexts: For environments without participating media (volumetric effects) the simulation requires to solve the radiance or rendering equation [23]. Many of the available techniques restrict the lighting effects they simulate by using a simplified version of the radiance equation in order to speed up the calculation. Examples are radiosity algorithms <ref> [14, 7, 8, 16, 35, 42] </ref> that only consider diffuse reflections, but can achieve fast simulations using advanced hierarchical and clustering methods [16, 35, 42, 36]. <p> Examples are radiosity algorithms [14, 7, 8, 16, 35, 42] that only consider diffuse reflections, but can achieve fast simulations using advanced hierarchical and clustering methods <ref> [16, 35, 42, 36] </ref>. However, the computational complexity of finite element methods that include the full direc-tionally depended reflection [21, 3, 32, 6, 24] is still cubic in the number of scene objects, which rules this method out even for simple environments with more than a few non-diffuse surfaces.
Reference: [43] <author> TELLER, S., FOWLER, C., FUNKHOUSER, T., AND HANRAHAN, P. </author> <title> Partitioning and ordering large radiosity computations. </title> <booktitle> Computer Graphics (SIGGRAPH '94 Proceedings) (July 1994), </booktitle> <pages> 443450. </pages>
Reference-contexts: Domains may also be used for speeding up the computation by restricting a LightOp to relevant parts of a scene. One example is, to use one LightOp for each room in a building, using the geometry visible from this room <ref> [44, 43, 11] </ref> for all of its domains. Finally, special effects can be created by limiting the effects of a LightOp to a particular subsets of the scene. An example for the use of a LightOp restricted to a particular domain is given in Figure 3.
Reference: [44] <author> TELLER, S. J., AND S EQUIN, C. H. </author> <title> Visibility preprocessing for interactive walkthroughs. </title> <booktitle> In Computer Graphics (SIGGRAPH '91 Proceedings) (July 1991), </booktitle> <editor> T. W. Sederberg, Ed., </editor> <volume> vol. 25, </volume> <pages> pp. 6169. </pages>
Reference-contexts: Domains may also be used for speeding up the computation by restricting a LightOp to relevant parts of a scene. One example is, to use one LightOp for each room in a building, using the geometry visible from this room <ref> [44, 43, 11] </ref> for all of its domains. Finally, special effects can be created by limiting the effects of a LightOp to a particular subsets of the scene. An example for the use of a LightOp restricted to a particular domain is given in Figure 3.
Reference: [45] <author> VEACH, E., AND GUIBAS, L. J. </author> <title> Optimally combining sampling techniques for Monte Carlo rendering. </title> <booktitle> Computer Graphics (SIGGRAPH '95 Proceedings) (August 1995), </booktitle> <pages> 419428. </pages>
Reference-contexts: On the other hand, Monte-Carlo path or photon tracing techniques <ref> [10, 23, 45, 46, 19, 28] </ref> simulate illumination by recursive stochastic sampling of illumination in the environment, starting with rays from the virtual camera or the light sources, respectively.
Reference: [46] <author> VEACH, E., AND GUIBAS, L. J. </author> <title> Metropolis light transport. </title> <booktitle> Computer Graphics (SIGGRAPH '97 Proceedings) (August 1997), </booktitle> <pages> 6576. </pages>
Reference-contexts: On the other hand, Monte-Carlo path or photon tracing techniques <ref> [10, 23, 45, 46, 19, 28] </ref> simulate illumination by recursive stochastic sampling of illumination in the environment, starting with rays from the virtual camera or the light sources, respectively.
Reference: [47] <author> WALLACE, J. R., COHEN, M. F., AND GREENBERG, D. P. </author> <title> A two-pass solution to the rendering equation: A synthesis of ray tracing and radiosity methods. </title> <booktitle> Computer Graphics (SIGGRAPH '87 Proceedings) 21, </booktitle> <month> 4 (July </month> <year> 1987), </year> <month> 311320. </month>
Reference-contexts: Two- and multi-pass techniques try to exploit the advantages of multiple lighting algorithms by combining the effects computed by each of them. In <ref> [26, 47, 38, 30] </ref>, a radiosity computation is followed by a second view-dependent ray-tracing pass for capturing specular highlights. [30] also includes a geometric simplification step for speeding up the radiosity pass (also see Section 4).
Reference: [48] <author> WARD, G. J. </author> <title> Adaptive shadow testing for ray tracing. </title> <booktitle> In Second Eurographics Workshop on Rendering (Part. </booktitle> <address> Edition) (May 1991). </address>
Reference-contexts: Thus, the non-trivial functionality of efficient light source sampling need not be replicated for other LightOps that can take a quadtree IllumBasis as input. This separate implementation now allows for a centralized optimization by techniques such as adaptive shadow testing <ref> [48] </ref> and others.
Reference: [49] <author> WARD, G. J. </author> <title> Measuring and modeling anisotropic reflection. </title> <booktitle> Computer Graphics (SIGGRAPH '92 Proceedings) (July 1992), </booktitle> <pages> 265273. </pages>
Reference-contexts: For a different LightOp it may be more appropriate to approximate the same reflection in another primary basis P W ard using Ward's physically-based reflection model <ref> [49] </ref> that has different diffuse and specular terms b W ard D and b W ard Each projection of a particular operator is represented in our framework by a ReflectionApprox object that identifies the particular reflection basis and offers access to the different coefficients of the reflection operator in this basis. <p> Depending on the requirements of a LightOp, a projection of the BRDF with one of its directions fixed is often sufficient. Only few approaches have been published for projecting general reflection functions, for instance procedural shaders, into a particular basis <ref> [52, 49, 13, 39] </ref>. Unfortunately, most of them are not well-suited to our task. Thus, until more general projection algorithms are available, the reflection bases that are most applicable are the commonly used reflection models themselves (e.g. [29, 18, 49, 31]), including simple variations as mentioned above. <p> Unfortunately, most of them are not well-suited to our task. Thus, until more general projection algorithms are available, the reflection bases that are most applicable are the commonly used reflection models themselves (e.g. <ref> [29, 18, 49, 31] </ref>), including simple variations as mentioned above. Promising more general reflection bases for this task are spherical harmonics [37] or spherical wavelets [33].
Reference: [50] <author> WARD, G. J. </author> <title> The RADIANCE lighting simulation and rendering system. </title> <booktitle> Computer Graphics (SIGGRAPH '94 Proceedings) (July 1994), </booktitle> <pages> 459472. </pages>
Reference-contexts: An example is the Irradiance Caching technique <ref> [51, 50] </ref>, which is based on path tracing but also includes smooth basis functions (similar to ra-diosity) to interpolate indirect illumination from previously cached computations. Two- and multi-pass techniques try to exploit the advantages of multiple lighting algorithms by combining the effects computed by each of them.
Reference: [51] <author> WARD, G. J., AND RUBINSTEIN, F. </author> <title> A ray tracing solution for diffuse interreflection. </title> <booktitle> Computer Graphics (SIGGRAPH '88 Proceedings) 22, </booktitle> <month> 4 (August </month> <year> 1988), </year> <month> 8592. </month>
Reference-contexts: An example is the Irradiance Caching technique <ref> [51, 50] </ref>, which is based on path tracing but also includes smooth basis functions (similar to ra-diosity) to interpolate indirect illumination from previously cached computations. Two- and multi-pass techniques try to exploit the advantages of multiple lighting algorithms by combining the effects computed by each of them.
Reference: [52] <author> WESTIN, S. H., ARVO, J. R., AND TORRANCE, K. E. </author> <title> Predicting reflectance functions from complex surfaces. </title> <booktitle> In Computer Graphics (SIGGRAPH '92 Proceedings) (July 1992), </booktitle> <editor> E. E. Catmull, Ed., </editor> <volume> vol. 26, </volume> <pages> pp. 255264. </pages>
Reference-contexts: Depending on the requirements of a LightOp, a projection of the BRDF with one of its directions fixed is often sufficient. Only few approaches have been published for projecting general reflection functions, for instance procedural shaders, into a particular basis <ref> [52, 49, 13, 39] </ref>. Unfortunately, most of them are not well-suited to our task. Thus, until more general projection algorithms are available, the reflection bases that are most applicable are the commonly used reflection models themselves (e.g. [29, 18, 49, 31]), including simple variations as mentioned above.
References-found: 52

