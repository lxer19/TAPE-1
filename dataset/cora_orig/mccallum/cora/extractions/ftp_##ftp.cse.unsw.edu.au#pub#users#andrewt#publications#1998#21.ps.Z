URL: ftp://ftp.cse.unsw.edu.au/pub/users/andrewt/publications/1998/21.ps.Z
Refering-URL: http://www.cse.unsw.edu.au/school/publications/1998/SCSE_publications.html
Root-URL: http://www.cse.unsw.edu.au
Email: mann@cse.unsw.edu.au  
Title: Procedural Renunciation and the SemiAutomatic Trap  
Author: Graham A. Mann 
Address: Sydney, NSW 2052, Australia.  
Affiliation: Artificial Intelligence Laboratory School of Computer Science Engineering University of New South Wales  
Abstract: This paper addresses two contemporary issues which could threaten the usefulness of conceptual graphs and their widespread acceptance as a knowledge representation. The first concerns the recent debate over the place of actors in the formalism. After briefly summarising arguments on both sides, I take the position that actors should be retained, and marshal four supporting arguments. An example shows that (slightly enhanced) actor nodes can greatly simplify the delivery of external control signals, without excessively complicating the denotation of the graphs they contain. The second issue concerns an epistemological problem which I have called the semiautomatic trap. This is our tendency to continue constructing systems of logic that depend on human involvement beyond necessity to the point at which such involvement is impractical, unscaleable and theoretically problematic. Two important escape routes from the semiautomatic trap are pointed out, involving more emphasis on automatic graph construction from primitive data, and emphasis on automatic interpretation of conceptual graphs. Practical methods for both are suggested as ways forward for the community. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Brachman, J. et.al. </author> <title> Krypton: A Functional Approach to Knowledge Representation. </title> <journal> IEEE Computer, 1983, </journal> <volume> 16, 10, </volume> <pages> 67-74. </pages>
Reference-contexts: They are sometimes associated with bad programming habits in old-fashioned languages, hacking, and scruffy methodology. Some attempts to incorporate procedural elements in knowledge models began to be seen in the 80s in the KL-ONE modifications, KRYPTON <ref> [1] </ref> and BACK [12], OMEGA [5] and CycL [8].
Reference: 2. <editor> Buchler, J. </editor> <address> Charles Peirce's Empiricism. New York: </address> <publisher> Harcourt, Brace & Co., </publisher> <year> 1939. </year>
Reference-contexts: His pragmatism was an attempt to overcome, or at least make tractable, the problems of logic theory, which in the words of Peircian scholar Ernest Nagel ...derive almost entirely from isolating knowledge from the procedures leading up to it, so that it becomes logically impossible to obtain. <ref> [2] </ref>. These deliberations suggest that the procedural aspects of knowledge should not be factored out. Perhaps this idea has not been realised for historical reasons.
Reference: 3. <author> Burk, A.W. </author> <booktitle> The Collected Papers of Charles Sanders Peirce. </booktitle> <volume> Vol. </volume> <pages> 5. </pages>
Reference: 4. <author> Ellis, G. </author> <title> Objectoriented Conceptual Graphs. </title> <editor> In G. Ellis, R. Levinson, W. Rich and J.F. Sowa (Eds.) </editor> <booktitle> Conceptual Structures: Applications, Implementation and Theory. Lecture Notes in AI 954, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1995, </year> <pages> 114-157. </pages>
Reference-contexts: Messages could be sent to and from objects that appeared to be concept boxes labelled with process names to other process-objects, not shown on the graph, and presumably more closely connected with the physical engine. Ellis <ref> [4] </ref> subsequently criticised this design as awkward, but his own simpler model still encounters the basic difficulty of trying to describe declaratively what is essentially a procedure, and it still seems to miss the point.
Reference: 5. <author> Hewitt, C., et. al. </author> <title> Knowledge Embedding in the Description System Omega. </title> <booktitle> Proceedings of the First National Conference on Artificial Intelligence, </booktitle> <address> Stanford, CA, </address> <year> 1980, </year> <pages> 157-164. </pages>
Reference-contexts: They are sometimes associated with bad programming habits in old-fashioned languages, hacking, and scruffy methodology. Some attempts to incorporate procedural elements in knowledge models began to be seen in the 80s in the KL-ONE modifications, KRYPTON [1] and BACK [12], OMEGA <ref> [5] </ref> and CycL [8].
Reference: 6. <author> Hiebert, J. </author> <title> Conceptual and Procedural Knowledge in Mathematics: An Introductory Analysis. </title> <editor> In J. Hiebert (Ed.) </editor> <title> Conceptual and Procedural Knowledge: The Case of Mathematics. </title> <address> Hillsdale, NJ: </address> <publisher> Lawrence Earlbaum Assoc., </publisher> <year> 1986, </year> <month> pp.1-27. </month>
Reference: 7. <author> Lacroix, G. </author> <title> Technical Domination and Techniques of Domination in the New Bureacratic Processes. </title> <editor> In L. Yngstrom, et. al. </editor> <booktitle> (Ed.s) Can Information Technology Result in Benevolent Bureacracies? The Netherlands: </booktitle> <publisher> Elsevier Science Publishing Co., </publisher> <year> 1985, </year> <pages> 173-178. </pages>
Reference: 8. <author> Lenat, D. et. al. </author> <title> CYC: Towards Programs with Common Sense. </title> <journal> Communications of the ACM, 1990, </journal> <volume> 33, </volume> <pages> 30-49. </pages>
Reference-contexts: They are sometimes associated with bad programming habits in old-fashioned languages, hacking, and scruffy methodology. Some attempts to incorporate procedural elements in knowledge models began to be seen in the 80s in the KL-ONE modifications, KRYPTON [1] and BACK [12], OMEGA [5] and CycL <ref> [8] </ref>. Original CG theory [14], also a product of the 80s, showed foresight in permitting actors to influence and be influenced by concepts, even if the examples given were simple mathematical functions, which tended to foster the view that they are nothing more than a special kind of relation.
Reference: 9. <author> McCarthy, J. </author> <title> Recursive Functions of Symbolic Expressions and their Computation by Machine, Part 1. </title> <journal> Communications of the ACM, 1960, </journal> <volume> 3, </volume> <pages> 4. </pages>
Reference-contexts: Perhaps this idea has not been realised for historical reasons. In the late 1950s, computer science theory bifurcated into traditional stepwise control methods for a state-machine emerging directly from von Neumanns work on the one hand [17], and mathematical function-based models, on which for example McCarthy based his Lisp <ref> [9] </ref>, on the other. At each turn, as simple data structures and control metaphors gave way to more sophisticated schemes, the declarative was presented as the more refined, explicit, portable and formally backed.
Reference: 10. <author> Mann, </author> <title> G.A. Control of a Navigating Rational Agent by Natural Language. </title> <type> PhD thesis, </type> <institution> University of New South Wales, </institution> <year> 1996. </year>
Reference-contexts: I have argued elsewhere <ref> [10] </ref> that for some purposes, truth-conditionally is simply not adequate as an answer to the question: what does this expression mean?. <p> before and after the interpreter complies with the act? What relationship do truth-conditions have with the intentions of the speaker, the intentions of the hearer, or the hearer's active response? Now conceptual graphs can and have been used with other, more progressive semantics, including situation semantics [15] and four-pole semantics <ref> [10] </ref>. <p> Since I have written elsewhere about parsing and learning by asking <ref> [10] </ref>, I will focus here on this method. <p> Let us assume, for convenience, that the form for users of a hypothetical system is natural language, and permit that to explain what is needed to automatically interpret graphs. Section 2 argued that a truth-conditional semantics is not enough. In <ref> [10] </ref>, I expressed this as the need to move beyond truth-preserving algorithms to plausibility-preserving heuristics. What does this mean? Imagine that the natural language system is asked two questions: 1. Can a rabbit fly? 2.
Reference: 11. <author> Munday, C., Sobora, F. & Lukose, D. UNE-CG-KEE: </author> <title> Next Generation Knowledge Engineering Environment. </title> <booktitle> Proceedings of the 1 st Australian Knowledge Structures Workshop. </booktitle> <address> Armidale, Australia, </address> <year> 1994, </year> <pages> 103-117. </pages>
Reference-contexts: The acquisition process depends on a special teaching language in which a range of operations on these databases may be expressed in simple fashion. Such a language would be something like the Structured English Interface for the Deakin Toolset <ref> [11] </ref>, except that additions and changes to the conceptual hierarchies as well as the construction of graphs based on them would be allowed. The procedural knowledgebase would need a theoretically different set of techniques for skill learning, which will not be addressed here.
Reference: 12. <author> Nebel, B. & von Luck, K. </author> <title> Hybrid Reasoning in BACK. </title> <editor> In Z.W. Ras and L. </editor> <title> Saitta (Ed.s) Methodologies for Intelligent Systems, Vol.3. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, The Netherlands, </address> <year> 1988. </year>
Reference-contexts: They are sometimes associated with bad programming habits in old-fashioned languages, hacking, and scruffy methodology. Some attempts to incorporate procedural elements in knowledge models began to be seen in the 80s in the KL-ONE modifications, KRYPTON [1] and BACK <ref> [12] </ref>, OMEGA [5] and CycL [8].
Reference: 13. <author> Rochowiak, D. </author> <title> A Pragmatic Understanding of Knowing That and Knowing How: The Pivotal Role of Conceptual Structures. </title> <editor> In D. Lukose, H. Delugach, M. Keeler, L. Searle & J.F. Sowa (Eds.) </editor> <booktitle> Conceptual Structures: Fulfilling Peirce's Dream. Lecture Notes in AI 1257, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1997, </year> <pages> 25-40. </pages>
Reference-contexts: At the end of this section, I will show how actors may be transformed into parameterised procedural calls in a way which has less to do with relations. Good reasons why procedures should be tolerated in CG epistemology were recently advanced by Rochowiak <ref> [13] </ref>. Beginning from a classical philosophical definition of knowledge as justified true belief, he argues that declarative and procedural forms can be distinguished in each of these three definitional terms.
Reference: 14. <author> J.F. Sowa: </author> <title> Conceptual structures. </title> <address> Menlo Park, California: </address> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1984. </year>
Reference-contexts: They are sometimes associated with bad programming habits in old-fashioned languages, hacking, and scruffy methodology. Some attempts to incorporate procedural elements in knowledge models began to be seen in the 80s in the KL-ONE modifications, KRYPTON [1] and BACK [12], OMEGA [5] and CycL [8]. Original CG theory <ref> [14] </ref>, also a product of the 80s, showed foresight in permitting actors to influence and be influenced by concepts, even if the examples given were simple mathematical functions, which tended to foster the view that they are nothing more than a special kind of relation.
Reference: 15. <author> Sowa, J.F. </author> <title> Conceptual Graph Summary. </title> <editor> In T.E. Nagle et. al. (Eds.), </editor> <booktitle> Conceptual Structures: Current Research and Practice. </booktitle> <address> Chichester: </address> <publisher> Ellis Horwood, </publisher> <year> 1992, </year> <pages> 339-348. </pages>
Reference-contexts: value be the same before and after the interpreter complies with the act? What relationship do truth-conditions have with the intentions of the speaker, the intentions of the hearer, or the hearer's active response? Now conceptual graphs can and have been used with other, more progressive semantics, including situation semantics <ref> [15] </ref> and four-pole semantics [10].
Reference: 16. <author> Sowa, J.F. </author> <title> Logical Foudations for Representing ObjectOriented Systems. </title> <journal> Journal of Theoretical and Experimental Artificial Intelligence, 1993, </journal> <volume> 5. 17. </volume> <editor> von Neumann, J. </editor> <booktitle> The Computer & the Brain. </booktitle> <address> New York: </address> <publisher> Yale University Press, </publisher> <year> 1958. </year>
Reference-contexts: And movies or simulations of acts are one of the things we want to provide in a modern multimedia dictionary. An alternative to explicit actor nodes has been proposed in Sowas objectoriented car-starting example <ref> [16] </ref>. External processes, in this case the ignition of a cars engine, could be provably initiated from a conceptual graph built on an objectoriented software model.
References-found: 16

