URL: http://www.cse.ucsc.edu/research/fpmcm/fpga95.ps
Refering-URL: http://www.cse.ucsc.edu/research/fpmcm/
Root-URL: http://www.cse.ucsc.edu
Email: isshiki@cse.ucsc.edu, dai@cse.ucsc.edu  
Title: High-Level Bit-Serial Datapath Synthesis for Multi-FPGA Systems  
Author: Tsuyoshi Isshiki and Wayne Wei-Ming Dai 
Address: Building,  Santa Cruz, CA 95064, USA  
Affiliation: Applied Sciences  Computer Engineering University of California  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> P. Bertin, D. Roncin and J. Vuillemin, </author> <title> "Programmable Active Memories Performance Measurements," </title> <booktitle> Proc. ACM/SIGDA Workshop on Field Programmable Gate Arrays, </booktitle> <year> 1992. </year>
Reference: [2] <author> P. Bertin and H. Touati, </author> <title> "PAM Programming Environments: Practice and Experience," </title> <booktitle> Proc. IEEE Workshop on FPGAs for Custom Computing Machines, </booktitle> <month> April </month> <year> 1994. </year>
Reference: [3] <author> C. E. Cox and W. E. Blanz, </author> <title> "GANGLION-A Fast Field-Programmble Gate Array Implementation of a Connectionist Classifier," </title> <journal> IEEE Solid-State Circuits Vol. </journal> <volume> 27, No. 3, </volume> <pages> pp. 288-299, </pages> <month> March </month> <year> 1992. </year>
Reference: [4] <author> C. M. Fiduccia and R. M. Mattheyses, </author> <title> "A Linear-Time Heuristic for Improving Network Partitions," </title> <booktitle> Proc. 19th Design Automation Conference, </booktitle> <address> pp.241-247 </address>
Reference-contexts: Retiming registers are inserted according to the scheduling. 3.5 Layout Synthesis 1. Partition: Currently implemented partitioning algorithm is 6 based on a classical min-cut hyper-graph biparti--tioning heuristics by Fiduccia and Mattheyses <ref> [4] </ref> for its simplicity. The netlist is recursively partitioned into clusters of a given size.
Reference: [5] <author> M. Gokhale, W. Holmes, A. Kopser, S. Lucas, R. Min-nich and D. Sweely, </author> <title> "Building and Using a Highly Parallel Programmable Logic Array," </title> <journal> IEEE Computers, </journal> <pages> pp. 81-89, </pages> <month> Jan. </month> <year> 1991. </year>
Reference: [6] <author> Dzung T. Hoang, </author> <title> "Searching Genetic Databases on Splash 2," </title> <booktitle> Proc. IEEE Workshop on FPGAs for Custom Computing Machines, </booktitle> <pages> pp. 185-191, </pages> <month> April </month> <year> 1993. </year>
Reference: [7] <author> T. Isshiki and W. W.-M. Dai, </author> <title> "High-Performance Dat-apath Implementation on Field-Programmable Multi-Chip Module (FPMCM)," </title> <booktitle> Proc. 4th International Workshop on Field-Programmable Logic and Applications, FPL '94, </booktitle> <month> Sept. </month> <year> 1994. </year>
Reference: [8] <author> T. Isshiki and W. W.-M. Dai, </author> <title> "Field-Programmable Multi-Chip Module (FPMCM) for High-Performance DSP Accelerator," </title> <booktitle> IEEE Asia-Pacific Conference on Circuits and Systems, </booktitle> <month> Dec. </month> <year> 1994. </year>
Reference: [9] <author> J. Vanhoof, K. V. Rompaey, I. Bolsens, G. Goossens and H. De Man," </author> <title> "High-Level Synthesis for Real-Time Digital Signal Processing," </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1993. </year> <title> [10] "The Programmable Logic Data Book," </title> <publisher> Xilinx, Inc., </publisher> <year> 1994. </year>
Reference-contexts: This requires the support for high-level design capture without the need for dig ital system design skills. 2. Together with the easy programming environment, the compiler has to be sophisticated enough to pro duce area-efficient, high-speed datapath circuits. The development of High-Level Synthesis in ASIC-DSP community <ref> [9] </ref> cannot simply be applied to the datapath designs on FPGA. Since the routing resource and logic resource are physically fixed, it is often hard to control or even predict the outcome of the layout synthesis on FPGA.
References-found: 9

