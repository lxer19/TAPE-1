URL: http://graphics.lcs.mit.edu/~seth/pubs/antipenumbra.ps.Z
Refering-URL: http://graphics.lcs.mit.edu/~seth/pubs/pubs.html
Root-URL: 
Title: Computing the Antipenumbra of an Area Light Source  
Author: Seth J. Teller 
Keyword: CR Categories and Subject Descriptors: [Computer Graphics]: I.3.5 Computational Geometry and Object Modeling geometric algorithms, languages, and systems; I.3.7 Three-Dimensional Graphics and Realism color, shading, shadowing, and texture. Additional Key Words and Phrases: Radiosity, aspect graph, discontinuity meshing, stabbing lines, Plucker coordinates.  
Address: Berkeley  
Affiliation: University of California at  
Abstract: We define the antiumbra and the antipenumbra of a convex area light source shining through a sequence of convex areal holes in three dimensions. The antiumbra is the volume from which all points on the light source can be seen. The antipenumbra is the volume from which some, but not all, of the light source can be seen. We show that the antipenumbra is, in general, a disconnected set bounded by portions of quadric surfaces, and describe an implemented O(n 2 ) time algorithm that computes this boundary, where n is the total number of edges comprising the light source and holes. The antipenumbra computation is motivated by a visibility scheme in which we wish to determine the volume visible to an observer looking through a sequence of transparent convex holes, or portals, connecting adjacent cells in a spatial subdivision. Knowledge of the antipenumbra should also prove useful for rendering shadowed objects. Finally, we have extended the algorithm to compute the planar and quadratic surfaces along which the rate of areal variation in the visible portion of the light source changes discontinuously due to occlusion. These surfaces are relevant in polygon meshing schemes for global illumination and shadow computations. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Atherton, K. Weiler, and D. Greenberg. </author> <title> Polygon shadow generation. </title> <booktitle> Computer Graphics (Proc. SIGGRAPH '78), </booktitle> <volume> 12 </volume> <pages> 275-281, </pages> <year> 1978. </year>
Reference-contexts: For a point light source and a set of polygonal occluders in three 1 which are linked by convex polygonal transparent portals. source (here, the leftmost portal) through the cells of the subdivision. dimensions, the penumbra is vacuous, and computing the umbra is straightforward <ref> [1, 7] </ref>. The problem becomes substantially more complex when the light source is lineal or areal. In general, as few as two occluders can give rise to shadows bounded by reguli, ruled quadric surfaces of negative Gaussian curvature [23], whose three generator lines arise from non-adjacent hole or light-source edges.
Reference: [2] <author> B. Grunbaum. </author> <title> Convex Polytopes. </title> <publisher> Wiley-Interscience, </publisher> <address> New York, </address> <year> 1967. </year>
Reference-contexts: Thus, S must be on or above each hyperplane h k (Figure 8), and inside or on the boundary of the convex polytope T k . The face structure of the polytope T k has worst-case complexity quadratic in the number of halfspaces defining it <ref> [2] </ref>, and can be computed by a randomized algorithm in optimal O (n 2 ) expected time [6]. Define the extremal stabbing lines as those lines incident on four generator edges [18].
Reference: [3] <author> Daniel R. Baum, Stephen Mann, Kevin P. Smith, and James M. Winget. </author> <title> Making radiosity usable: Automatic preprocessing and meshing techniques for the generation of accurate radios-ity solutions. </title> <booktitle> Computer Graphics (Proc. SIGGRAPH '91), </booktitle> <volume> 25(4) </volume> <pages> 51-60, </pages> <year> 1991. </year>
Reference-contexts: For example, only polygons mutually visible through a portal sequence (i.e., in each other's antipenumbrae) can interact directly by exchanging luminous energy. Knowing a light source's antipenumbra would also be useful in the polygonal subdivision that shadowing and global illumination algorithms employ to model shadow boundaries <ref> [3, 4, 12, 13, 21] </ref>. Finally, the algorithm is of theoretical interest for two reasons. First, for the class of input described here, the algorithm computes strong (antiumbral) and weak (antipenumbral) polygon visibility [17] with respect to a polygon (area light source) in 3D.
Reference: [4] <author> A.T. Campbell III and Donald S. Fussell. </author> <title> Adaptive mesh generation for global diffuse illumination. </title> <booktitle> Computer Graphics (Proc. SIGGRAPH '91), </booktitle> <volume> 24(4) </volume> <pages> 155-164, </pages> <year> 1990. </year>
Reference-contexts: Several algorithms approximating multiple-occluder shadow boundaries have been described. For example, in [16], the penumbra cast by multiple occluders is approximated by casting each occluder's penumbra individually, then performing polyhedral union and intersection operations on the result. An analogous approach is described in <ref> [4] </ref>, where the light source is treated as a discrete set of point light sources, and the shadows of collections of occluders are cast and combined. <p> For example, only polygons mutually visible through a portal sequence (i.e., in each other's antipenumbrae) can interact directly by exchanging luminous energy. Knowing a light source's antipenumbra would also be useful in the polygonal subdivision that shadowing and global illumination algorithms employ to model shadow boundaries <ref> [3, 4, 12, 13, 21] </ref>. Finally, the algorithm is of theoretical interest for two reasons. First, for the class of input described here, the algorithm computes strong (antiumbral) and weak (antipenumbral) polygon visibility [17] with respect to a polygon (area light source) in 3D.
Reference: [5] <author> Norman Chin and Steven Feiner. </author> <title> Fast object-precision shadow generation for area light sources using BSP trees. </title> <booktitle> In Proc. 1992 Symposium on Interactive 3D Graphics, </booktitle> <pages> pages 21-30, </pages> <year> 1992. </year>
Reference-contexts: This error metric can then be used to control adaptive subdivision of the light source or occluders. Another recent algorithm approximates umbra volumes by constructing penumbra trees and umbra trees; these are BSP trees [8] whose polyhedral leaf cells bound polygon fragments in partial or complete shadow <ref> [5] </ref>. For polygonal light sources, holes, and occluders, the boundary between total illumination (antiumbra) and partial illumination (penumbra, antipenumbra) is piecewise-planar. The boundary between partial illumination (penumbra, antipenumbra) and no illu mination (umbra), however, generally consists of portions of reguli.
Reference: [6] <author> Kenneth L. Clarkson and Peter W. Shor. </author> <title> Applications of random sampling in computational geometry II. </title> <booktitle> Discrete Computational Geometry, </booktitle> <pages> pages 387-421, </pages> <year> 1989. </year>
Reference-contexts: The face structure of the polytope T k has worst-case complexity quadratic in the number of halfspaces defining it [2], and can be computed by a randomized algorithm in optimal O (n 2 ) expected time <ref> [6] </ref>. Define the extremal stabbing lines as those lines incident on four generator edges [18]. Since four lines (i.e., constraints) are necessary to determine a line, if any stabbing lines exist, then at least one must be extremal.
Reference: [7] <author> Frank C. Crow. </author> <title> Shadow algorithms for computer graphics. </title> <booktitle> Computer Graphics (Proc. SIGGRAPH '77), </booktitle> <volume> 11(2) </volume> <pages> 242-248, </pages> <year> 1977. </year>
Reference-contexts: For a point light source and a set of polygonal occluders in three 1 which are linked by convex polygonal transparent portals. source (here, the leftmost portal) through the cells of the subdivision. dimensions, the penumbra is vacuous, and computing the umbra is straightforward <ref> [1, 7] </ref>. The problem becomes substantially more complex when the light source is lineal or areal. In general, as few as two occluders can give rise to shadows bounded by reguli, ruled quadric surfaces of negative Gaussian curvature [23], whose three generator lines arise from non-adjacent hole or light-source edges.
Reference: [8] <author> H. Fuchs, Z. Kedem, and B. Naylor. </author> <title> On visible surface genera-tion by a priori tree structures. </title> <journal> Computer Graphics (Proc. </journal> <volume> SIG-GRAPH '80), 14(3) </volume> <pages> 124-133, </pages> <year> 1980. </year>
Reference-contexts: This error metric can then be used to control adaptive subdivision of the light source or occluders. Another recent algorithm approximates umbra volumes by constructing penumbra trees and umbra trees; these are BSP trees <ref> [8] </ref> whose polyhedral leaf cells bound polygon fragments in partial or complete shadow [5]. For polygonal light sources, holes, and occluders, the boundary between total illumination (antiumbra) and partial illumination (penumbra, antipenumbra) is piecewise-planar.
Reference: [9] <author> Thomas A. Funkhouser, Carlo H. Sequin, and Seth J. Teller. </author> <title> Management of large amounts of data in interactive building walkthroughs. </title> <booktitle> In Proc. 1992 Workshop on Interactive 3D Graphics, </booktitle> <pages> pages 11-20, </pages> <year> 1992. </year>
Reference-contexts: Space is subdivided into polyhedral cells, which are mutually visible only through sequences of portals, or convex polygonal holes <ref> [9, 26, 27] </ref>. Figure 3 depicts five cells of one such polyhedral subdivision, and the portals linking adjacent cells. An observer constrained to a given source cell can see out of the cell only through a portal (say, that of the leftmost cell in Figures 3 and 4).
Reference: [10] <author> Ziv Gigus, John Canny, and Raimund Seidel. </author> <title> Efficiently computing and representing aspect graphs of polyhedral objects. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 13(6) </volume> <pages> 542-551, </pages> <year> 1991. </year>
Reference-contexts: aspect graph of a general polyhedral object with n vertices is O (n 4 lg n + m lg m + c t ), where m is the number of qualitatively distinct views, at worst O (n 6 ), and c t the total number of changes between these views <ref> [10] </ref>. For a convex lineal or areal light source and a single convex oc-cluder in 3D, the umbra and its union with the penumbra are convex. Such first-order shadows have been employed to yield convincing renderings of shadowed scenes [15, 16]. <p> We present an implemented O (n 2 ) time algorithm that computes the piecewise-quadratic boundary of the antipenumbra. We also describe an extension of the algorithm that computes linear and quadratic event surfaces <ref> [10] </ref>. These are the loci at which the rate of areal variation in the visible portion of the light source, and therefore the derivative of illumination intensity, changes discontinuously due to occlusion. Such surfaces are useful, for example, in polygon meshing schemes for global illumination and shadow computations. <p> The surface, or swath, swept out by the sliding line must either be planar (if the line remains tight on a vertex) or a regulus, whose three generator lines embed three polygon edges. In the terminology of <ref> [10] </ref>, swaths are VE or EEE event surfaces important in the construction of aspect graphs, since they are loci at which qualitative changes in occlusion occur. in 3D generates a VE plane (i) or a EEE quadratic surface (ii). edges A,B,C and D.
Reference: [11] <author> Ziv Gigus and Jitendra Malik. </author> <title> Computing the aspect graph for line drawings of polyhedral objects. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 12(2) </volume> <pages> 113-122, </pages> <year> 1990. </year>
Reference-contexts: As the observer moves, the apparent area of the light source (and therefore the illumination intensity at the observer location) changes smoothly, except when a swath (i.e., event surface) is encountered. Generically, this happens in one of two fundamental ways for polyhedral objects <ref> [11] </ref>. Either a hole vertex appears (disappears) from the region boundary (Figure 18-ii), or the observer's line of sight simultaneously intersects three edges, causing the appearance (disappearance) of an apparent boundary vertex (Figure 18-iii).
Reference: [12] <author> Pat Hanrahan and David Salzman. </author> <title> A rapid hierarchical radios-ity algorithm. </title> <booktitle> Computer Graphics (Proc. SIGGRAPH '91), </booktitle> <volume> 25(4) </volume> <pages> 197-206, </pages> <year> 1991. </year>
Reference-contexts: For example, only polygons mutually visible through a portal sequence (i.e., in each other's antipenumbrae) can interact directly by exchanging luminous energy. Knowing a light source's antipenumbra would also be useful in the polygonal subdivision that shadowing and global illumination algorithms employ to model shadow boundaries <ref> [3, 4, 12, 13, 21] </ref>. Finally, the algorithm is of theoretical interest for two reasons. First, for the class of input described here, the algorithm computes strong (antiumbral) and weak (antipenumbral) polygon visibility [17] with respect to a polygon (area light source) in 3D.
Reference: [13] <author> Paul S. Heckbert. </author> <title> Simulating Global Illumination Using Adaptive Meshing. </title> <type> PhD thesis, </type> <institution> Computer Sciences Department, University of California, Berkeley, </institution> <month> June </month> <year> 1991. </year>
Reference-contexts: For example, only polygons mutually visible through a portal sequence (i.e., in each other's antipenumbrae) can interact directly by exchanging luminous energy. Knowing a light source's antipenumbra would also be useful in the polygonal subdivision that shadowing and global illumination algorithms employ to model shadow boundaries <ref> [3, 4, 12, 13, 21] </ref>. Finally, the algorithm is of theoretical interest for two reasons. First, for the class of input described here, the algorithm computes strong (antiumbral) and weak (antipenumbral) polygon visibility [17] with respect to a polygon (area light source) in 3D. <p> Along extremal swaths, the set of contributing edges changes, adding or removing linear or quadratic terms from the function relating the amount of visible light area to observer location. Consequently, extremal swaths are in general loci of first- or second-derivative discontinuities in illumination intensity. (In the terminology of <ref> [13] </ref>, planar traces of extremal swaths are curves of D 1 or D 2 discontinuity.) Zeroth-derivative discontinuities (i.e., abrupt changes in illumination value) can occur only in the presence of a point light source, or if the observer crosses the plane of an area light source.
Reference: [14] <author> J.J. Koenderink and A.J. van Doorn. </author> <title> The internal representation of solid shape with respect to vision. </title> <journal> Biol. Cybern., </journal> <volume> 32 </volume> <pages> 211-216, </pages> <year> 1979. </year>
Reference-contexts: Reguli were first used in the context of occlusion for the aspect graph computation, which catalogues all qualitatively distinct views of a polyhedral object under orthographic or perspective projection <ref> [14, 20] </ref>.
Reference: [15] <author> Tomoyuki Nishita and Eihachiro Nakamae. </author> <title> Half-tone representation of 3-D objects illuminated by area sources or polyhedron sources. </title> <booktitle> In Proc. IEEE COMPSAC, </booktitle> <year> 1983, </year> <pages> pages 237-242, </pages> <year> 1983. </year>
Reference-contexts: For a convex lineal or areal light source and a single convex oc-cluder in 3D, the umbra and its union with the penumbra are convex. Such first-order shadows have been employed to yield convincing renderings of shadowed scenes <ref> [15, 16] </ref>. These penumbra algorithms, however, extend to multiple occluders only by effectively approximating the light source as a point or as a set of points. Several algorithms approximating multiple-occluder shadow boundaries have been described.
Reference: [16] <author> Tomoyuki Nishita and Eihachiro Nakamae. </author> <title> Continuous-tone representation of three-dimensional objects taking account of shadows and interreflection. </title> <journal> Computer Graphics (Proc. </journal> <volume> SIG-GRAPH '85), 19(3) </volume> <pages> 23-30, </pages> <year> 1985. </year>
Reference-contexts: For a convex lineal or areal light source and a single convex oc-cluder in 3D, the umbra and its union with the penumbra are convex. Such first-order shadows have been employed to yield convincing renderings of shadowed scenes <ref> [15, 16] </ref>. These penumbra algorithms, however, extend to multiple occluders only by effectively approximating the light source as a point or as a set of points. Several algorithms approximating multiple-occluder shadow boundaries have been described. <p> These penumbra algorithms, however, extend to multiple occluders only by effectively approximating the light source as a point or as a set of points. Several algorithms approximating multiple-occluder shadow boundaries have been described. For example, in <ref> [16] </ref>, the penumbra cast by multiple occluders is approximated by casting each occluder's penumbra individually, then performing polyhedral union and intersection operations on the result.
Reference: [17] <author> Joseph O'Rourke. </author> <title> Art Gallery Theorems and Algorithms. </title> <publisher> Oxford University Press, </publisher> <year> 1987. </year>
Reference-contexts: Finally, the algorithm is of theoretical interest for two reasons. First, for the class of input described here, the algorithm computes strong (antiumbral) and weak (antipenumbral) polygon visibility <ref> [17] </ref> with respect to a polygon (area light source) in 3D.
Reference: [18] <editor> Marco Pellegrini. Stabbing and ray-shooting in 3-dimensional space. </editor> <booktitle> In Proc. 6 th ACM Symposium on Computational Geometry, </booktitle> <pages> pages 177-186, </pages> <year> 1990. </year>
Reference-contexts: p y p z 1 We use the following convention dictating the correspondence between the minors of Equation 1 and the `i : `0 = p x q y q x p y `2 = p x q x `4 = p z q z (this order was adopted in <ref> [18] </ref> to produce positive signs in some useful identities involving Pl ucker coordinates). <p> Define the extremal stabbing lines as those lines incident on four generator edges <ref> [18] </ref>. Since four lines (i.e., constraints) are necessary to determine a line, if any stabbing lines exist, then at least one must be extremal. The structure of the polytope T k yields all extremal stabbing lines [18, 25]. <p> Define the extremal stabbing lines as those lines incident on four generator edges [18]. Since four lines (i.e., constraints) are necessary to determine a line, if any stabbing lines exist, then at least one must be extremal. The structure of the polytope T k yields all extremal stabbing lines <ref> [18, 25] </ref>. Each such line ` is incident, in 3D, upon four of the e k . Consequently, the Plucker point P ` must lie on four of the hyperplanes h k in 5D, and must therefore lie on a 1D face, or edge, of the polytope T k .
Reference: [19] <author> Ken Perlin and Xue-Dong Wang. </author> <title> An efficient approximation for penumbra shadow. </title> <type> Technical Report 346, </type> <institution> New York University Courant Institute of Mathematical Sciences, Computer Science Division, </institution> <year> 1988. </year>
Reference-contexts: An analogous approach is described in [4], where the light source is treated as a discrete set of point light sources, and the shadows of collections of occluders are cast and combined. An algorithm proposed in <ref> [19] </ref> replaces the area light source with a point at its center, and describes an error metric that bounds the spatial discrepancy between the computed and true penumbra. This error metric can then be used to control adaptive subdivision of the light source or occluders.
Reference: [20] <author> W.H Plantinga and C.R. Dyer. </author> <title> Visibility, occlusion, and the aspect graph. </title> <journal> Int. J. Computer Vision, </journal> <volume> 5(2) </volume> <pages> 137-160, </pages> <year> 1990. </year>
Reference-contexts: Reguli were first used in the context of occlusion for the aspect graph computation, which catalogues all qualitatively distinct views of a polyhedral object under orthographic or perspective projection <ref> [14, 20] </ref>.
Reference: [21] <author> David Salesin, Dani Lischinski, and Tony DeRose. </author> <title> Reconstructing illumination functions with selected discontinuities. </title> <booktitle> In Proc. 3 rd Eurographics Workshop on Rendering, </booktitle> <year> 1992. </year>
Reference-contexts: For example, only polygons mutually visible through a portal sequence (i.e., in each other's antipenumbrae) can interact directly by exchanging luminous energy. Knowing a light source's antipenumbra would also be useful in the polygonal subdivision that shadowing and global illumination algorithms employ to model shadow boundaries <ref> [3, 4, 12, 13, 21] </ref>. Finally, the algorithm is of theoretical interest for two reasons. First, for the class of input described here, the algorithm computes strong (antiumbral) and weak (antipenumbral) polygon visibility [17] with respect to a polygon (area light source) in 3D.
Reference: [22] <author> Raimund Seidel. </author> <title> Linear programming and convex hulls made easy. </title> <booktitle> In Proc. 6 th ACM Symposium on Computational Geometry, </booktitle> <pages> pages 211-215, </pages> <year> 1990. </year>
Reference-contexts: To compute the convex hull of n hyperplanes in 5D, we used a d-dimensional Delaunay simplicialization algorithm implemented by Allan Wilks at AT&T Bell Labs and Allen McIntosh at Bellcore, and a d-dimensional linear programming algorithm <ref> [22] </ref> implemented by Michael Hohmeyer at U.C. Berkeley. and the leftmost polygon acting as a light source. The antipenum-bra computation took about 2 CPU seconds. The polytope T k , formed from 15 halfspaces in 5D, has 80 facets, 186 2D-faces (triangles), and 200 1D-faces (edges).
Reference: [23] <author> D.M.Y. Sommerville. </author> <title> Analytical Geometry of Three Dimensions. </title> <publisher> Cambridge University Press, </publisher> <year> 1959. </year>
Reference-contexts: The problem becomes substantially more complex when the light source is lineal or areal. In general, as few as two occluders can give rise to shadows bounded by reguli, ruled quadric surfaces of negative Gaussian curvature <ref> [23] </ref>, whose three generator lines arise from non-adjacent hole or light-source edges. Reguli were first used in the context of occlusion for the aspect graph computation, which catalogues all qualitatively distinct views of a polyhedral object under orthographic or perspective projection [14, 20]. <p> The remaining traces correspond to surfaces of illumination rate discontinuity lying within the antipenumbra. 2 Pl ucker Coordinates We use the Pl ucker coordinatization <ref> [23] </ref> of directed lines in three space. Any ordered pair of distinct points p = (p x ; p y ; p z ) and q = (q x ; q y ; q z ) defines a directed line ` in 3D. <p> This confirms basic intuition: one could describe all lines in three-space in terms of, for example, their intercepts on two standard planes. to, the Plucker surface. The set of points in 5D satisfying Equation 3 is a quadric surface called the Plucker surface <ref> [23] </ref>. One might visualize this set as a four-dimensional ruled surface embedded in five dimensions, analogous to a quadric hyperboloid of one sheet embedded in three-space (Figure 6).
Reference: [24] <author> Seth J. Teller and Michael E. Hohmeyer. </author> <title> Computing the lines piercing four lines. </title> <type> Technical Report UCB/CSD 91/665, </type> <institution> Computer Science Department, U.C. Berkeley, </institution> <year> 1991. </year>
Reference-contexts: Thus, we can find all extremal stabbing lines of a given polygon sequence by examining the edges of the polytope for intersections with the Pl ucker surface. The extremal stabbing line corresponding to each intersection can be determined in constant time from the four relevant generator edges E k <ref> [24] </ref>. The input consists of nine polygons, with n = 39 edges total. The 5D convex polytope T k has 755 edges, which together yield 82 intersections with the Plucker surface, and thus 82 extremal stabbing lines.
Reference: [25] <author> Seth J. Teller and Michael E. Hohmeyer. </author> <title> Stabbing oriented convex polygons in randomized O(n 2 ) time. </title> <type> Technical Report UCB/CSD 91/669, </type> <institution> Computer Science Department, U.C. Berkeley, </institution> <year> 1992. </year>
Reference-contexts: Define the extremal stabbing lines as those lines incident on four generator edges [18]. Since four lines (i.e., constraints) are necessary to determine a line, if any stabbing lines exist, then at least one must be extremal. The structure of the polytope T k yields all extremal stabbing lines <ref> [18, 25] </ref>. Each such line ` is incident, in 3D, upon four of the e k . Consequently, the Plucker point P ` must lie on four of the hyperplanes h k in 5D, and must therefore lie on a 1D face, or edge, of the polytope T k .
Reference: [26] <author> Seth J. Teller and Carlo H. Sequin. </author> <title> Visibility preprocessing for interactive walkthroughs. </title> <journal> Computer Graphics (Proc. </journal> <volume> SIG-GRAPH '91), 25(4) </volume> <pages> 61-69, </pages> <year> 1991. </year>
Reference-contexts: Space is subdivided into polyhedral cells, which are mutually visible only through sequences of portals, or convex polygonal holes <ref> [9, 26, 27] </ref>. Figure 3 depicts five cells of one such polyhedral subdivision, and the portals linking adjacent cells. An observer constrained to a given source cell can see out of the cell only through a portal (say, that of the leftmost cell in Figures 3 and 4).
Reference: [27] <author> Seth J. Teller and Carlo H. Sequin. </author> <title> Visibility computations in polyhedral three-dimensional environments. </title> <type> Technical Report UCB/CSD 92/680, </type> <institution> Computer Science Department, U.C. Berkeley, </institution> <year> 1992. </year>
Reference-contexts: Space is subdivided into polyhedral cells, which are mutually visible only through sequences of portals, or convex polygonal holes <ref> [9, 26, 27] </ref>. Figure 3 depicts five cells of one such polyhedral subdivision, and the portals linking adjacent cells. An observer constrained to a given source cell can see out of the cell only through a portal (say, that of the leftmost cell in Figures 3 and 4).
References-found: 27

