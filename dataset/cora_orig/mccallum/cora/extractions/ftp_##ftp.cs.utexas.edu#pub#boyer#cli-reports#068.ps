URL: ftp://ftp.cs.utexas.edu/pub/boyer/cli-reports/068.ps
Refering-URL: ftp://ftp.cs.utexas.edu/pub/boyer/cli-reports/index.html
Root-URL: 
Title: A Formal Model of Asynchronous Communication and Its Use in Mechanically Verifying a Biphase Mark Protocol  
Phone: (512) 322-9951  
Author: J Strother Moore 
Address: 1717 W. 6th St. Suite 290 Austin, Texas 78703  
Affiliation: Computational Logic Inc.  
Abstract: Technical Report 68 1992 
Abstract-found: 1
Intro-found: 1
Reference: 1. <editor> S. Aggarwal and K. Sabnani (eds.). </editor> <title> Protocol Specification, Testing, and Verification VIII. </title> <publisher> Elsevier Science Publishers B.V. (North-Holland), </publisher> <year> 1988. </year>
Reference-contexts: An important survey of the field was published as long ago as 1979 [31] and the field has an annual conference (Protocol Testing, Specification, and Verification) with proceedings published by North-Holland <ref> [1] </ref>. The International Standards Organization has defined seven levels of protocol. Level 1, the ``physical level,'' deals with pin connections, voltage levels, and physical signal formats. Level 2, the ``data link level,'' concerns itself with data formats, synchronization, error control, and flow control.
Reference: 2. <author> H. Barringer. </author> <title> A Survey of Verification Techniques for Parallel Programs. </title> <booktitle> Springer-Verlag Lecture Notes in Computer Science 191, </booktitle> <address> Berlin, </address> <year> 1985. </year>
Reference: 3. <author> W.R. Bevier and W.A. Hunt and J S. Moore and W.D. Young. </author> <note> "Special Issue on System Verification". Journal of Automated Reasoning 5, </note> <month> 4 </month> <year> (1989), </year> <pages> 409-530. </pages>
Reference: 4. <author> W.R. Bevier and W.D. Young. </author> <title> The Proof of Correctness of a Fault-Tolerant Circuit Design. </title> <booktitle> Proceedings of the Second International Working Conference on Dependable Computing for Critical Applications, </booktitle> <month> February, </month> <year> 1991, </year> <pages> pp. 107-114. </pages>
Reference: 5. <author> R. S. Boyer and J S. Moore. </author> <title> A Computational Logic. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1979. </year>
Reference: 6. <author> R. S. Boyer and J S. Moore. </author> <title> A Computational Logic Handbook. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1988. </year>
Reference: 7. <author> B.C. Brock and W.A. Hunt. </author> <title> A Formal Introduction to a Simple HDL. In Formal Methods for VLSI Design, </title> <editor> J. Staunstrup, Ed., </editor> <publisher> Elsevier Science Publishers B.V. (North-Holland), </publisher> <year> 1990, </year> <pages> pp. 285-329. </pages>
Reference: 8. <author> J. Campbell. </author> <title> C Programmer's Guide to Serial Communications. </title> <editor> Howard W. </editor> <publisher> Sams and Co., </publisher> <address> 4300 West 62 Street, Indianapolis, </address> <note> IN 46268, </note> <year> 1988. </year>
Reference: 9. <author> K.M. Chandy and J. Misra. </author> <title> Parallel Program Design: A Foundation. </title> <publisher> Addison Wesley, </publisher> <address> Massachusetts, </address> <year> 1988. </year>
Reference: 10. <author> E.M. Clarke and E.A. Emerson and A.P. Sistla. </author> <title> "Automatic Verification of Finite-State Concurrent Systems using Temporal Logic Specifications". </title> <journal> ACM Transactions on Programming Languages and Systems 8, </journal> <volume> 2 (1986), </volume> <pages> 244-263. </pages>
Reference-contexts: But in the 80s the combination of finite-state machine models, propositional temporal logic, and fast mechanical decision procedures came to dominate mechanized protocol verification because of the speed and automation this combination offered. For a description how this approach is applied to the alternating bit protocol see <ref> [10] </ref> by E. Clarke, E. Emerson and A. Sistla. Clarke and O. Grumberg have written an excellent review of the use of finite state machines and temporal logic in automatic verification of concurrent systems [11].
Reference: 11. <author> E.M. Clarke and O. Grumberg. </author> <title> "Research on Automatic Verification of Finite-State Concurrent Systems". </title> <journal> Ann. Rev. Comput. Sci. </journal> <volume> 2 (1987), </volume> <pages> 269-290. </pages>
Reference-contexts: For a description how this approach is applied to the alternating bit protocol see [10] by E. Clarke, E. Emerson and A. Sistla. Clarke and O. Grumberg have written an excellent review of the use of finite state machines and temporal logic in automatic verification of concurrent systems <ref> [11] </ref>. However, the finite state machine approach and the related Petri net approach [27] suffer from the inability to discuss time quantitatively.
Reference: 12. <author> B.L. DiVito. </author> <title> A Mechanical Verification of the Alternating Bit Protocol. </title> <type> Tech. </type> <institution> Rept. ICSCA-CMP-21, Institute for Computing Science, The University of Texas at Austin, </institution> <year> 1981. </year>
Reference-contexts: In the late 70s mechanical protocol verification was based on the then-standard program verification technology: a procedural encoding of the protocol was annotated with inductive assertions, from which verification conditions were mechanically generated and then interactively proved. In <ref> [12] </ref> this method is applied to the alternating bit protocol. See [13] for examples of method applied to still-higher transport level protocols.
Reference: 13. <author> B.L. Di Vito. </author> <title> Verification of Communications Protcols and Abstract Process Models. </title> <type> PhD Thesis ICSCA-CMP-25, </type> <institution> Institute for Computing Science and Computer Applications, University of Texas at Austin, </institution> <year> 1982. </year> <note> Also available through Computational Logic, </note> <institution> Inc., </institution> <address> Suite 290, 1717 West Sixth Street, Austin, TX 78703.. </address>
Reference-contexts: In the late 70s mechanical protocol verification was based on the then-standard program verification technology: a procedural encoding of the protocol was annotated with inductive assertions, from which verification conditions were mechanically generated and then interactively proved. In [12] this method is applied to the alternating bit protocol. See <ref> [13] </ref> for examples of method applied to still-higher transport level protocols. But in the 80s the combination of finite-state machine models, propositional temporal logic, and fast mechanical decision procedures came to dominate mechanized protocol verification because of the speed and automation this combination offered.
Reference: 14. <author> D.M. Goldschlag. </author> <title> Mechanizing Unity. In Programming Concepts and Methods, </title> <editor> M. Broy and C. B. Jones, Eds., </editor> <publisher> North Holland, </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference: 15. <author> C.A.R. Hoare. </author> <title> Communicating Sequential Processes. </title> <publisher> Prentice Hall International, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1985. </year>
Reference: 16. <institution> W.A. Hunt. FM8501: A Verified Microprocessor. University of Texas at Austin, </institution> <month> December, </month> <year> 1985. </year> <note> Also available through Computational Logic, </note> <institution> Inc., </institution> <address> Suite 290, 1717 West Sixth Street, Austin, TX 78703.. </address>
Reference-contexts: introduction to and overview of the field. In common with our work, many formal models of microprocessors, e.g., <ref> [16] </ref>, [32], and [20], quantitatively measure time in cycles. A particularly intriguing title, given the title of this work, is J. Joyce's ``Formal Specification and Verification of Asynchronous Processes in Higher-Order Logic'' [19]. The report deals with the same problem confronted in [16], namely how to formalize the interaction between a <p> our work, many formal models of microprocessors, e.g., <ref> [16] </ref>, [32], and [20], quantitatively measure time in cycles. A particularly intriguing title, given the title of this work, is J. Joyce's ``Formal Specification and Verification of Asynchronous Processes in Higher-Order Logic'' [19]. The report deals with the same problem confronted in [16], namely how to formalize the interaction between a synchronous microprocessor and an asynchronous memory via a four-phase handshaking protocol. The report offers an attractive alternative to the formalization presented in [16]. But it does not address general asynchronous communication in the sense that we do. <p> The report deals with the same problem confronted in <ref> [16] </ref>, namely how to formalize the interaction between a synchronous microprocessor and an asynchronous memory via a four-phase handshaking protocol. The report offers an attractive alternative to the formalization presented in [16]. But it does not address general asynchronous communication in the sense that we do. Because we verify a protocol in this paper, it is necessary to comment upon the relation of our work to the very old and very active research area of protocol verification.
Reference: 17. <author> Intel Corporation. Microcommunications. </author> <title> Intel Literature Sales, P.O. Box 7641, Mt. Prospect, </title> <address> IL 60056-7641, </address> <year> 1991. </year>
Reference: 18. <author> P. Jain and S.S. Lam. </author> <title> "Specification Real-Time Protocols for Broadcast Networks". </title> <journal> IEEE Transactions on Computers 40, </journal> <volume> 4 (1991), </volume> <pages> 404-422. </pages>
Reference-contexts: This is in stark contrast to our work, where explicit, quantitatively measured time forms the foundation of the model. Finally, while not at level 1 and not supported by mechanically checked proofs, the closest work on protocol verification is perhaps that by P. Jain and S. Lam <ref> [18] </ref> where time is modeled quantitatively and discretely and signal propagation down a bus is also modeled (assuming constant propagation speed). They specify a modified Expressnet protocol which they prove to be collison-free and they derive bounds for its access delay. 11.
Reference: 19. <author> J.J. Joyce. </author> <title> Formal Specification and Verification of Asynchronous Processes in Higher-Order Logic. </title> <type> Tech. Rept. Technical Report No. 136, </type> <institution> University of Cambridge Computer Laboratory, </institution> <month> June, </month> <year> 1988. </year>
Reference-contexts: introduction to and overview of the field. In common with our work, many formal models of microprocessors, e.g., [16], [32], and [20], quantitatively measure time in cycles. A particularly intriguing title, given the title of this work, is J. Joyce's ``Formal Specification and Verification of Asynchronous Processes in Higher-Order Logic'' <ref> [19] </ref>. The report deals with the same problem confronted in [16], namely how to formalize the interaction between a synchronous microprocessor and an asynchronous memory via a four-phase handshaking protocol. The report offers an attractive alternative to the formalization presented in [16].
Reference: 20. <author> J.J. Joyce. </author> <title> Multi-Level Verification of Microprocessor-Based Systems. </title> <type> Tech. Rept. Technical Report No. 195, </type> <institution> University of Cambridge Computer Laboratory, </institution> <month> May, </month> <year> 1990. </year> <month> 50 </month>
Reference-contexts: introduction to and overview of the field. In common with our work, many formal models of microprocessors, e.g., [16], [32], and <ref> [20] </ref>, quantitatively measure time in cycles. A particularly intriguing title, given the title of this work, is J. Joyce's ``Formal Specification and Verification of Asynchronous Processes in Higher-Order Logic'' [19].
Reference: 21. <author> Z. Manna and A. Pnueli. </author> <title> "Adequate Proof Principles for Invariance and Liveness Properties of Concurrent Programs". </title> <booktitle> Science of Computer Programming 4 (1984), </booktitle> <pages> 257-289. </pages>
Reference: 22. <author> C. Mead and L. Conway. </author> <title> Introduction to VLSI Systems. </title> <publisher> Addison-Wesley Publishing Co., </publisher> <year> 1980. </year>
Reference: 23. <author> R. Milner. </author> <title> A Calculus of Communicating Systems. </title> <address> Springler-Verlag, Berlin, </address> <year> 1980. </year>
Reference: 24. <editor> F.C. Mish (Ed.) </editor> <booktitle> Webster's Ninth New Collegiate Dictionary. </booktitle> <address> Merriam-Webster, </address> <publisher> Inc, </publisher> <year> 1987. </year>
Reference: 25. <author> J S. Moore. </author> <title> Mechanically Verified Hardware Implementing an 8-Bit Parallel IO Byzantine Agreement Processor. </title> <type> Tech. </type> <institution> Rept. NASA CR-189588, NASA, </institution> <year> 1992. </year>
Reference: 26. <author> M. Pease and R. Shostak and L. Lamport. </author> <title> "Reaching Agreement in the Presence of Faults". </title> <journal> Journal of the ACM 27, </journal> <volume> 2 (1980), </volume> <pages> 228-234. </pages>
Reference: 27. <author> J.L. Peterson. </author> <title> Petri Net Theory and the Modeling of Systems. </title> <publisher> Prentice Hall, </publisher> <year> 1981. </year>
Reference-contexts: Clarke, E. Emerson and A. Sistla. Clarke and O. Grumberg have written an excellent review of the use of finite state machines and temporal logic in automatic verification of concurrent systems [11]. However, the finite state machine approach and the related Petri net approach <ref> [27] </ref> suffer from the inability to discuss time quantitatively. Much research in the protocol verification community is now aimed at adding some notion of time to the finite state approach, without exacerbating the already vexing state explosion problem or taking the entire problem out of the propositional domain.
Reference: 28. <author> M. S. Roden. </author> <title> Digital Communication Systems Design. </title> <publisher> Prentice Hall, </publisher> <year> 1988. </year>
Reference: 29. <author> J. Rushby and F. von Henke. </author> <title> Formal Verification of the Interactive Convergence Clock Synchronization Algorithm using EHDM. </title> <type> Tech. </type> <institution> Rept. SRI CSL 89-3R, Computer Science Laboratory, SRI International, </institution> <address> Menlo Park, CA 94025, </address> <month> January, </month> <year> 1989. </year>
Reference: 30. <author> B. Sklar. </author> <title> Digital Communications Fundamentals and Applications. </title> <publisher> Prentice Hall, </publisher> <year> 1988. </year>
Reference: 31. <author> C. Sunshine. </author> <title> "Formal Techniques for Protocol Specification and Verification". </title> <booktitle> Computer 12, 9 (1979), </booktitle> <pages> 20-27. </pages>
Reference-contexts: Because we verify a protocol in this paper, it is necessary to comment upon the relation of our work to the very old and very active research area of protocol verification. An important survey of the field was published as long ago as 1979 <ref> [31] </ref> and the field has an annual conference (Protocol Testing, Specification, and Verification) with proceedings published by North-Holland [1]. The International Standards Organization has defined seven levels of protocol. Level 1, the ``physical level,'' deals with pin connections, voltage levels, and physical signal formats.
Reference: 32. <author> C.H. Pygott. </author> <title> Formal Proof of Correspondence Between the Specification of a Hardware Module and its Gate Level Implementation. </title> <type> Report 85012, </type> <institution> Royal Signals and Radar Establishment, Malvern, </institution> <address> Worcestershire (United Kingdom), </address> <month> November, </month> <year> 1985. </year>
Reference-contexts: introduction to and overview of the field. In common with our work, many formal models of microprocessors, e.g., [16], <ref> [32] </ref>, and [20], quantitatively measure time in cycles. A particularly intriguing title, given the title of this work, is J. Joyce's ``Formal Specification and Verification of Asynchronous Processes in Higher-Order Logic'' [19].
Reference: 33. <author> M. Yoeli. </author> <title> Formal Verification of Hardware Design. </title> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> California, </address> <year> 1990. </year> <title> i Table of Contents </title>
Reference: 1. <institution> Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1 </institution>
Reference-contexts: An important survey of the field was published as long ago as 1979 [31] and the field has an annual conference (Protocol Testing, Specification, and Verification) with proceedings published by North-Holland <ref> [1] </ref>. The International Standards Organization has defined seven levels of protocol. Level 1, the ``physical level,'' deals with pin connections, voltage levels, and physical signal formats. Level 2, the ``data link level,'' concerns itself with data formats, synchronization, error control, and flow control.
Reference: 2. <institution> Logical Foundations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 </institution>


Reference: 5. <institution> The Theorem . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16 </institution>
Reference: 6. <institution> Formal Experiments . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18 </institution>

Reference: 8. <institution> Other Configurations of Biphase Mark . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44 </institution>
Reference: 9. <institution> Concluding Remarks on our Model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45 </institution>
Reference: 10. <institution> Relation to Other Work . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46 </institution>
Reference-contexts: But in the 80s the combination of finite-state machine models, propositional temporal logic, and fast mechanical decision procedures came to dominate mechanized protocol verification because of the speed and automation this combination offered. For a description how this approach is applied to the alternating bit protocol see <ref> [10] </ref> by E. Clarke, E. Emerson and A. Sistla. Clarke and O. Grumberg have written an excellent review of the use of finite state machines and temporal logic in automatic verification of concurrent systems [11].
Reference: 11. <institution> Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48 ii </institution>
Reference-contexts: For a description how this approach is applied to the alternating bit protocol see [10] by E. Clarke, E. Emerson and A. Sistla. Clarke and O. Grumberg have written an excellent review of the use of finite state machines and temporal logic in automatic verification of concurrent systems <ref> [11] </ref>. However, the finite state machine approach and the related Petri net approach [27] suffer from the inability to discuss time quantitatively.
References-found: 41

