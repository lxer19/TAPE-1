URL: http://www.cs.dartmouth.edu/~agent/papers/agent.ps.Z
Refering-URL: http://www.cs.dartmouth.edu/~rus/report-dec96.html
Root-URL: http://www.cs.dartmouth.edu
Title: Information Architecture and Agents  
Author: George Cybenko Robert Gray Yunxin Wu Alexy Khrabrov 
Address: Hanover, NH 03755  
Affiliation: Thayer School of Engineering Dartmouth College  
Date: June 1994)  
Note: (Copyright  Hewlett-Packard Corporation  
Abstract: This paper surveys the architecture and properties of intelligent information agents. A number of issues arising in the future design of general, programmable agents are presented. Examples of agent applications are given with some implementations. A formal model for information agents is developed briefly. 
Abstract-found: 1
Intro-found: 1
Reference: [And73] <author> Michael R. Anderberg. </author> <title> Cluster Analysis for Applications. </title> <publisher> Academic Press, </publisher> <address> New York and London, </address> <year> 1973. </year>
Reference-contexts: Using Cluster Analysis methods or Vector Quantization techniques <ref> [And73, Kun93] </ref>, documents with a vector representation can be grouped and a hierarchical cluster structure can be built automatically. This structure is very useful for efficiently searching and browsing the collection. The structure can be visualized in 2D space as an assistant tool for retrieval and browsing.
Reference: [Bat94] <author> Joseph Bates. </author> <title> The role of emotion in believable agents. </title> <journal> Communications of the ACM, </journal> <volume> 37(7) </volume> <pages> 68-71, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: Users are comfortable with agent decisions since the agents learn which decisions to make by observing user behavior. The July 1994 issue of Communications of the ACM contains several articles that discuss the psychological acceptance of agents. These articles include [Mae94], <ref> [Bat94] </ref> and [Nor94]. 4 The Shannon Machine A Formal Model for Agents The goal of this section is to describe a formal model, called a Shannon Machine, for an agent's activity using concepts from computation and information theory.
Reference: [BJR94] <author> Paul Barker, Thomas Johannsen, and Colin Robbins. </author> <title> A survey of current and possible future uses of x.500 directory services. </title> <journal> Journal of Information Networking, </journal> <volume> 1(3), </volume> <month> March </month> <year> 1994. </year>
Reference-contexts: For example Aramino has developed a directory that contains meta-knowledge about online bibliographic databases. The directory is searched to identify the bibliographic databases that are most likely to contain the answer to a user query. These databases are then searched <ref> [BJR94] </ref>. Distributed object managers do not support resource discovery per se. Instead they provide transparent access to a distributed collections of objects. Message can be sent to an object without specifying its network location. The messages are automatically routed to the appropriate site.
Reference: [BN84] <author> A. D. Birrell and B. J. Nelson. </author> <title> Implementing remote procedure calls. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 2(1) </volume> <pages> 39-59, </pages> <month> February </month> <year> 1984. </year>
Reference-contexts: The program chooses when and where to migrate. It can suspend its execution at an arbitrary point, transport to a new machine and resume execution on the new machine. Transportable agents were developed as the next step in the remote procedure call <ref> [BN84] </ref>, remote evaluation [SG90] and SUPRA-RPC [Sto94] hierarchy. Transportable agents have several advantages over these paradigms. Transportable agents consume fewer network resources since intermediate data does not need to be brought across the network and agents can communicate easily among themselves.
Reference: [Boe94] <institution> Personal communication, </institution> <month> August </month> <year> 1994. </year>
Reference-contexts: For example the Boeing 777 contains over five million parts. In many situations engineers design each part from scratch even though equivalent parts already exist. For example industry analysts estimate that up to eighty-five percent of jetliner parts can be taken from previous designs <ref> [Boe94] </ref>. However most parts are redesigned despite the potential for component reuse. Part of the problem is that many designers are paid per design. There is little incentive for design reuse.
Reference: [Bus45] <author> Vannevar Bush. </author> <title> As we may think. </title> <journal> Atlantic Monthly, </journal> <pages> pages pp101-108, </pages> <month> July </month> <year> 1945. </year>
Reference-contexts: The question is, how to avoid wasting effort in creating, maintaining, duplicating, and locating a Patient Record? (PR). "A record, if it is to be useful to science, must be continuously extended, it must be stored, and above all it must be consulted" <ref> [Bus45] </ref>. Consensus is to mold PR into CPR, Computer-based Patient Record. Its new format and access techniques will radically change the way how medical personnel associates a patient with his acquired medical data.
Reference: [C + 92] <institution> A.M. Cummings et al. University Libraries and Scholarly Communications. Association of Research Libraries, </institution> <address> New York, </address> <year> 1992. </year>
Reference-contexts: The next section will explore the common feature of these applications and develop an agent architecture that can support them. The challenges that face researchers and application developers are discussed there. 2.1 Scholarly Agents Modern researchers face the daunting task of keeping track of the developments in their field <ref> [C + 92] </ref>. This task is becoming increasingly challenging as the flow of publications and research announcements continues to grow. Fortunately more and more information is becoming available in electronic form.
Reference: [Cic64] <author> M. T. Cicero. De senectute. De amicitia. De divinatione. </author> <title> Classical Library. Loeb, </title> <address> London; Cambridge, MA, </address> <year> 1964. </year> <month> 38 </month>
Reference-contexts: Machine learning may improve this capability of the agent's pattern 6 recognition. "Naturally there is nothing which would be impossible to understood in a long time, fixing in memory and in writing what is already recognized" <ref> [Cic64] </ref>. Pattern here is a broad-sense combination of events, such as critical sections of EEG, causing a real-time warning. A mere urge to get a refill is a possible response triggered by the critical section on the time scale (the prescription had expired).
Reference: [CT91] <author> T.M. Cover and J.A. Thomas. </author> <title> Elements of Information Theory. </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: Much of the following material is based on known information theoretic constructs and our contribution is mainly in the application and interpretation of it to the information retrieval and intelligent agent context. All the requisite background is contained in standard references <ref> [CT91, LP81] </ref>. A Shannon Machine is based on the notion of a Turing Machine.
Reference: [D + 90] <author> S. Deerwester et al. </author> <title> Indexing by latent semantic analysis. </title> <journal> Journal of the American Society of Information Science, </journal> <volume> 41(6) </volume> <pages> 391-407, </pages> <year> 1990. </year>
Reference-contexts: The structure can be visualized in 2D space as an assistant tool for retrieval and browsing. More detailed discussion can be find in Section 3.5. The automatic clustering of the documents and visualization of the clustering can be based on the latent semantic indexing method <ref> [D + 90] </ref> and have been implemented. An example is grouping personal e-mail letters according to text and not just the headers. The letters of the responses of paper reviewers form a distinct cluster. <p> Vector space models have been discussed most extensively in the context of text retrieval. [Sal73] and [SM83] discuss the SMART system at Cornell which represents documents as term-frequency vectors and uses the cosine of the angle between vectors as a measure of document similarity. <ref> [D + 90] </ref> and [Gup94] discusses latent semantic indexing which uses the same cosine measure as the SMART system but first performs a singular value decomposition in order to reduce the dimension of the term frequency vectors. <p> Comparisons between sets of features are used to determine document similarity. The previous discussion leads to several research issues. 1. Which representation is best for a given document type and application? Much work has been done in this area. [SM83], <ref> [D + 90] </ref> and [Gup94] explore various term-frequency representations for straight text. The recent IEEE International Conference on Multimedia Systems and Computing highlighted several different ways of representing images and text. <p> One common technique is to interpret the cosine of the angle between two feature vectors as a measure of their similarity <ref> [D + 90] </ref>, [Sal73], [Gup94]. This technique has the advantage that it can be used in a wide range of applications. It is particularly effective when comparing term-frequency vectors. However this cosine measure does not provide good results in all applications. <p> Since term weighting methods can improve the system performance, using the covariance matrix rather than the correlation matrix seems to be a good choice. It can be shown that the Latent Semantic Method (LSI) based on SVD <ref> [D + 90] </ref>, which has been proved to have better performance than simple cosine measure using (1), can be formulated in a form similar to (5) where F fl should be substituted by the reduced left singular matrix (term matrix) T .
Reference: [E + 94] <author> Ernest A. Edmonds et al. </author> <title> Support for collaborative design: Agents and emergence. </title> <journal> Communications of the ACM, </journal> <volume> 37(7) </volume> <pages> 72-76, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: part that looks about like the provided sketch, weighs less than two pounds, can withstand vertical and horizontal pressure of two hundred pounds per square inch and can be attached with type B fasteners." Such a request involves both graphical and textual information and several different kinds of part features. <ref> [E + 94] </ref> discuss other roles that agents can play in collaborative design tasks. 2.5 Organizational Agents When a document collection becomes large, without a priori structure, it is difficult to efficiently manage and comprehend the documents and their interrelationships. <p> Alderman separates the task-specific knowledge from the learning and reasoning algorithms. This allows the system to be easily ported from one problem domain to another. Other articles highlight the use of agents in "groupware" or group-oriented software and in design tasks <ref> [E + 94, Gre94] </ref>. 2.7 Disk Management Agents Hierarchical file systems have become the norm today. Their utility in managing large collections of files places the burden of organization squarely on the user who must decide when to extend the hierarchy and where to place files.
Reference: [EW94] <author> Oren Etzioni and Daniel Weld. </author> <title> A softbot-based interface to the Internet. </title> <journal> Communications of the ACM, </journal> <volume> 37(7) </volume> <pages> 72-76, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: The user feels comfortable with the agents because they adapt themselves to his behavior and take over the decision making task gradually. Such a learning ability will be essential in many agent applications. Etzioni and Weld from the University of Washington discuss a "softbot-based interface to the Internet" <ref> [EW94] </ref>. The softbot has a logical model of each Internet resource that describes how to invoke the resource and the effects of resource invocation. The softbot accepts a request and uses a goal-oriented planning algorithm to decide which sequence of resource accesses will best meet the goal. <p> Note that the resource could be an application or another agent. 16 There are other possibilities for the bridging model as evidenced in recent work. <ref> [EW94] </ref> discuss a softbot-based interface to the Internet which uses a logical model of each Internet resource. The logical model specifies how to invoke the resource and what happens when the resource is invoked.
Reference: [FW91] <author> T. Finn and G. Wiederhold. </author> <title> An overview of KQML: A knowledge query and manipulation language. </title> <institution> Available through the Stanford University Computer Science Department, </institution> <year> 1991. </year>
Reference-contexts: The logical model specifies how to invoke the resource and what happens when the resource is invoked. The bridging model could be a set of these logical resource models. [GK94a], <ref> [FW91] </ref> and [G + 92] discuss the agent communication language KQML and its subcomponent KIF. KQML is a standardized language that autonomous software processes can use to exchange information and requests.
Reference: [G + 92] <author> M. R. Genesereth et al. </author> <title> Knowledge Interchange Format Version 3 Reference Manual, </title> <institution> Logic-92-1. Stanford University Logic Group, </institution> <year> 1992. </year>
Reference-contexts: The logical model specifies how to invoke the resource and what happens when the resource is invoked. The bridging model could be a set of these logical resource models. [GK94a], [FW91] and <ref> [G + 92] </ref> discuss the agent communication language KQML and its subcomponent KIF. KQML is a standardized language that autonomous software processes can use to exchange information and requests. The bridging model might translate some subset of KQML into commands that can be applied directly to the resource interface.
Reference: [G + 94] <author> Y. Gong et al. </author> <title> An image database system with content capturing and fast image indexing abilities. </title> <booktitle> In Proceedings of the International Conference on Multimedia Computing and Systems, </booktitle> <address> Washington, </address> <month> May </month> <year> 1994. </year> <title> IEEE, </title> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: The recent IEEE International Conference on Multimedia Systems and Computing highlighted several different ways of representing images and text. Two of the more interesting papers presented were <ref> [G + 94] </ref> and [RWG94]. [G + 94] discusses an image database system that represents images as both collections of monocolor segments and a collection of histograms. [RWG94] 13 discusses algebraic video in which an algebraic expression is used to represent the content of a video stream. <p> The recent IEEE International Conference on Multimedia Systems and Computing highlighted several different ways of representing images and text. Two of the more interesting papers presented were <ref> [G + 94] </ref> and [RWG94]. [G + 94] discusses an image database system that represents images as both collections of monocolor segments and a collection of histograms. [RWG94] 13 discusses algebraic video in which an algebraic expression is used to represent the content of a video stream.
Reference: [GK94a] <author> Michael R. Genesereth and Steven P. Ketchpel. </author> <title> Software agents. </title> <journal> Communications of the ACM, </journal> <volume> 37(7) 48-53,147, </volume> <month> July </month> <year> 1994. </year>
Reference-contexts: The logical model specifies how to invoke the resource and what happens when the resource is invoked. The bridging model could be a set of these logical resource models. <ref> [GK94a] </ref>, [FW91] and [G + 92] discuss the agent communication language KQML and its subcomponent KIF. KQML is a standardized language that autonomous software processes can use to exchange information and requests.
Reference: [GK94b] <author> Michael R. Genesereth and Steven P. Ketchpel. </author> <title> Software agents. </title> <journal> Communications of the ACM, </journal> <volume> 37(7) </volume> <pages> 48-53, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: Automatic brokers combine directory assistance with distributed object management. They identify an appropriate resource and then 20 provide transparent routing of messages to and from the resource. Automatic brokers include ToolTalk and the Publish and Subscribe Service on the Macintosh <ref> [GK94b] </ref>. Genesereth extends the automatic broker scheme in his work with KQML [GK94b]. Genesereth proposes a federated architecture in which each agent is associated with a facilitator. Agents communicate only with their facilitators. Facilitators communicate with each other. Agents post their capabilities and application-specific facts to their facilitator. <p> They identify an appropriate resource and then 20 provide transparent routing of messages to and from the resource. Automatic brokers include ToolTalk and the Publish and Subscribe Service on the Macintosh <ref> [GK94b] </ref>. Genesereth extends the automatic broker scheme in his work with KQML [GK94b]. Genesereth proposes a federated architecture in which each agent is associated with a facilitator. Agents communicate only with their facilitators. Facilitators communicate with each other. Agents post their capabilities and application-specific facts to their facilitator.
Reference: [GL89] <author> Gene H. Golub and Charles F. Van Loan. </author> <title> Matrix Computations. </title> <publisher> The Johns Hopkins University Press, </publisher> <address> Baltimore and London, </address> <year> 1989. </year>
Reference-contexts: It is consistent with the conclusion of Section 4 to maximally reduce uncertainty we should find the documents that cover the coordinates in the feature vector space maximally. This is a numerical linear algebra problem that can be solved efficiently by SVD and QR factorization with column pivoting <ref> [GL89] </ref>. This method is consistent with the conclusion of Section 4 to maximally reduce uncertainty we should find the documents that cover the coordinates in the feature vector space maximally.
Reference: [Gra95] <author> Robert S. Gray. </author> <title> Transportable agents. </title> <type> Ph.D. Thesis Proposal, </type> <year> 1995. </year> <note> Available from the author. </note>
Reference-contexts: Permits are negotiated between an agent and every machine that it visits. Despite its use in a commercial system Telescript has several weaknesses such as privacy concerns and inefficient execution of agents. A project is underway at Dartmouth to develop a transportable agent system that addresses these issues <ref> [Gra95] </ref>. This system is based around the the Tool Command Language (Tcl) which is a popular string-based scripting language. It is likely that a successful implementation of the information architecture will support transportable agents.
Reference: [Gre94] <author> Irene Greif. </author> <title> Desktop agents in group-enabled projects. </title> <journal> Communications of the ACM, </journal> <volume> 37(7) </volume> <pages> 72-76, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: Alderman separates the task-specific knowledge from the learning and reasoning algorithms. This allows the system to be easily ported from one problem domain to another. Other articles highlight the use of agents in "groupware" or group-oriented software and in design tasks <ref> [E + 94, Gre94] </ref>. 2.7 Disk Management Agents Hierarchical file systems have become the norm today. Their utility in managing large collections of files places the burden of organization squarely on the user who must decide when to extend the hierarchy and where to place files.
Reference: [GSS94] <author> Michael Genesereth, Narinder Singh, and Mustafa Syed. </author> <title> A distributed and anonymous knowledge sharing approach to software interoperation. </title> <editor> In Yannis Labrou and Tim Finin, editors, </editor> <booktitle> Proceedings of the CIKM Workshop on Intelligent Information Agents, Third International Conference on Information and Knowledge Management (CIKM 94), </booktitle> <address> Gaithersburg, Mary-land, </address> <month> December </month> <year> 1994. </year>
Reference-contexts: The features that distinguishes this federated architecture from traditional directory assistance and automatic brokers is the amount of processing that is done in the facilitator. The facilitator engages in automated reasoning rather than lookup, pattern matching or standard database and text searches <ref> [GSS94] </ref>. The command thread in all of these approaches is that resource discovery is reduced to a search problem. The agent implicitly or explicitly searches a well-known resource in order to identify additional resources.
Reference: [Gup94] <author> Vishal Gupta. </author> <title> Dartmouth associative retrieval kernel (DARK). </title> <type> Master's thesis, </type> <institution> Dartmouth College, </institution> <year> 1994. </year>
Reference-contexts: A dictionary-lookup heuristic was used to identify proper noun phrases. A latent semantic indexing package was used to determine which documents were relevant to each key phrase. LSI was chosen since it is one of the best generic text-retrieval methods <ref> [Gup94] </ref>. The LSI package assigns a numerical similarity score to each phrase/document pair. The highest scoring pairs 7 become the hyperlinks. This approach generates many useful links in a collection of TIME magazine articles but generates many nonsensical links as well. <p> Vector space models have been discussed most extensively in the context of text retrieval. [Sal73] and [SM83] discuss the SMART system at Cornell which represents documents as term-frequency vectors and uses the cosine of the angle between vectors as a measure of document similarity. [D + 90] and <ref> [Gup94] </ref> discusses latent semantic indexing which uses the same cosine measure as the SMART system but first performs a singular value decomposition in order to reduce the dimension of the term frequency vectors. Vector space models have not been discussed as extensively in the context of image and audio retrieval. <p> Comparisons between sets of features are used to determine document similarity. The previous discussion leads to several research issues. 1. Which representation is best for a given document type and application? Much work has been done in this area. [SM83], [D + 90] and <ref> [Gup94] </ref> explore various term-frequency representations for straight text. The recent IEEE International Conference on Multimedia Systems and Computing highlighted several different ways of representing images and text. <p> One common technique is to interpret the cosine of the angle between two feature vectors as a measure of their similarity [D + 90], [Sal73], <ref> [Gup94] </ref>. This technique has the advantage that it can be used in a wide range of applications. It is particularly effective when comparing term-frequency vectors. However this cosine measure does not provide good results in all applications. It certainly does not work if the feature vectors are non-numeric.
Reference: [Hay88] <author> J. P. Hayes. </author> <title> Building hypertext using automatic text processing. </title> <booktitle> In Proceedings of the AAAI-88 Workshop on AI and Hypertext, </booktitle> <address> St. Paul, Minnesota, </address> <year> 1988. </year>
Reference-contexts: Future work will address these shortcomings. An agent could use this or other techniques to generate hyperlinks in a collection of documents that had been retrieved for user consideration. Other text-analysis techniques for automatically generating hyperlinks are discussed in <ref> [Hay88] </ref>, [Rea91] and [Rin91]. 2.5.2 Automatic Clustering In the vector space model of text documents [SM83], points in high dimensional vector space represent documents and the distances between the points are correlated with the similarities between the documents.
Reference: [Jr.69] <author> John W. Sammon Jr. </author> <title> A nonlinear mapping for data structure analysis. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 18(5) </volume> <pages> 401-409, </pages> <month> May </month> <year> 1969. </year>
Reference-contexts: In such systems, the topics of the documents change randomly and it is not easy to return to the interesting documents that have been read. The nonlinear mapping method <ref> [Jr.69] </ref> and self-organizing mapping method [Koh90] can be used for the mapping computation. 3.6 Redundancy Correlation methods find relevant documents. The other important issue that information agents must consider is to prevent redundancy in the collection. Finding a metric for redundancy is a hard problem.
Reference: [JvRS95] <author> Dag Johansen, Robbert van Renesse, and Fred B. Scheidner. </author> <title> Operating system support for mobile agents. </title> <booktitle> In Proceedings of the 5th IEEE Workshop on Hot Topics in Operating Systems, </booktitle> <year> 1995. </year> <editor> [Kem62] et al. Kemeny, J. G. </editor> <title> A library for 2000 a.d. </title> <editor> In Martin Greenberger, editor, </editor> <booktitle> Management and the Computer of the Future. </booktitle> <publisher> The MIT Press and Wiley, </publisher> <year> 1962. </year> <month> 39 </month>
Reference-contexts: At best the client must collect partial results from the remote subprograms and then distribute the results. This requires twice as much communication. In addition transportable agents are a convenient paradigm for distributed computing since the communication channels are hidden but the location of the computation is not <ref> [JvRS95] </ref>. This makes transportable agents easier to use than low-level facilities that require the programmer to handle all communication but more powerful than schemes such as process migration in which the system decides when to migrate a program based on a fixed set of criteria [SS94]. <p> They allow clients and servers to program which other which greatly extends the functionality that application and server developers can offer to their customers. In addition applications can dynamically distribute their server components on startup <ref> [JvRS95] </ref>. When used to their full potential, transportable agents replace the client/server model with a peer/peer model. Agents interact as peers and are not divided into the fixed roles of client and server. The peer/peer model offers much more flexibility when developing distributed applications [Lew95].
Reference: [Khr94] <author> Alexy V. Khrabrov. </author> <title> Modern information society calls for intelligent agents. </title> <note> Available via the author (alexy.khrabrov@dartmouth.edu), </note> <year> 1994. </year>
Reference-contexts: A question of investment may require an estimate, list of options, or recommendation as an answer. A rewarding thing for the agent to do is to optimize the resources to make robust bets. There are three ways to predict outcome, including results of bets, described in <ref> [Khr94] </ref>. The latter work, performed at Dartmouth, presents a general framework for agent's decision-making. 2.3 Agents in Medicine 2.3.1 Problem area and specification Health care reform is the social priority. It's an illustration of what is progress considered to be about: information reuse, centralization, standard indexing and online access.
Reference: [KK94] <author> Keith Kotay and David Kotz. </author> <title> Transportable agents. </title> <editor> In Yannis Labrou and Tim Finin, editors, </editor> <booktitle> Proceedings of the CIKM Workshop on Intelligent Information Agents, Third International Conference on Information and Knowledge Management (CIKM 94), </booktitle> <address> Gaithersburg, Maryland, </address> <month> December </month> <year> 1994. </year>
Reference-contexts: These issues have been addressed in the context of transportable agents. A transportable agent is a program that can migrate from machine to machine in a heterogeneous network <ref> [KK94] </ref>. The program chooses when and where to migrate. It can suspend its execution at an arbitrary point, transport to a new machine and resume execution on the new machine.
Reference: [Koh90] <author> Teuvo Kohonen. </author> <title> The self organizing map. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 78(9) </volume> <pages> 1464-1480, </pages> <year> 1990. </year>
Reference-contexts: In such systems, the topics of the documents change randomly and it is not easy to return to the interesting documents that have been read. The nonlinear mapping method [Jr.69] and self-organizing mapping method <ref> [Koh90] </ref> can be used for the mapping computation. 3.6 Redundancy Correlation methods find relevant documents. The other important issue that information agents must consider is to prevent redundancy in the collection. Finding a metric for redundancy is a hard problem.
Reference: [Kun93] <author> S. Y. Kung. </author> <title> Digital Neural Networks. </title> <publisher> PTR Prentice Hall, </publisher> <address> Englewood Cliffs, New Jersey 07632, </address> <year> 1993. </year>
Reference-contexts: Using Cluster Analysis methods or Vector Quantization techniques <ref> [And73, Kun93] </ref>, documents with a vector representation can be grouped and a hierarchical cluster structure can be built automatically. This structure is very useful for efficiently searching and browsing the collection. The structure can be visualized in 2D space as an assistant tool for retrieval and browsing.
Reference: [Lew95] <author> Ted G. Lewis. </author> <booktitle> Where is client/server software heading? IEEE Computer, </booktitle> <pages> pages 49-55, </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: When used to their full potential, transportable agents replace the client/server model with a peer/peer model. Agents interact as peers and are not divided into the fixed roles of client and server. The peer/peer model offers much more flexibility when developing distributed applications <ref> [Lew95] </ref>. Finally transportable agents do not require a connection between the local and remote machines which in combination with their low use of network resources makes them ideally suited for mobile computing [Whi94]. <p> Distributed object managers do not support resource discovery per se. Instead they provide transparent access to a distributed collections of objects. Message can be sent to an object without specifying its network location. The messages are automatically routed to the appropriate site. Distributed object managers include CORBA and DSOM <ref> [Lew95] </ref>. Distributed object management is a critical adjunct to directory assistance since it can provide transparent access to the resources that have just been discovered. Automatic brokers combine directory assistance with distributed object management.
Reference: [lot93] <institution> Lotus development corporation: </institution> <note> Notes user's guide, </note> <year> 1993. </year>
Reference-contexts: We are not aware of any models or implementations at all for agents to "shop" for information or otherwise retrieve information that best compliments an existing corpus. Some commercial collaboration enhancement software systems have a forms-based interface with a scripting language available to the user <ref> [lot93] </ref>. 3.4 Predictive Agents By prediction, we mean tying the operation and activity of an agent that gathers information to an application that can use the resulting information in some anticipatory way to assist the user.
Reference: [LP81] <author> H.R. Lewis and C.H. Papadimitriou. </author> <title> Elements of the Theory of Computation. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1981. </year>
Reference-contexts: Much of the following material is based on known information theoretic constructs and our contribution is mainly in the application and interpretation of it to the information retrieval and intelligent agent context. All the requisite background is contained in standard references <ref> [CT91, LP81] </ref>. A Shannon Machine is based on the notion of a Turing Machine.
Reference: [M + 94] <author> Tom Mitchell et al. </author> <title> Experience with a learning personal assistant. </title> <journal> Communications of the ACM, </journal> <volume> 37(7) </volume> <pages> 72-76, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: The softbot accepts a request and uses a goal-oriented planning algorithm to decide which sequence of resource accesses will best meet the goal. Mitchell and several others from Carnegie-Mellon University describe an agent that helps the user to schedule meetings <ref> [M + 94] </ref>. The agent is similar to the scheduling agent of Patti Maes in that it learns the user's scheduling preferences room, location, duration, importance relative to other meetings and so on through routine use.
Reference: [Mae94] <editor> Pattie Maes. </editor> <title> Agents that reduce work and information overload. </title> <journal> Communications of the ACM, </journal> <volume> 37(7) 30-40,142, </volume> <month> July </month> <year> 1994. </year>
Reference-contexts: A brief summary of some of these applications is presented here. Pattie Maes from the MIT Media Laboratory presents four "interface" agents an agent that handles electronic mail, an agent that schedules meetings, an agent that filters electronic news and an agent that recommends suitable entertainment <ref> [Mae94] </ref>. One of the distinguishing features of these agents is that they gradually learn which decisions to make by observing the user, accepting user feedback and receiving advice from other agents. <p> The user must understand the action that was taken and must feel that he would have taken the same action if he had performed the task manually. Other factors besides an effective interface contribute to psychological acceptance of agents. Pattie Maes has noted that trainable agents are readily accepted <ref> [Mae94] </ref>. Users are comfortable with agent decisions since the agents learn which decisions to make by observing user behavior. The July 1994 issue of Communications of the ACM contains several articles that discuss the psychological acceptance of agents. These articles include [Mae94], [Bat94] and [Nor94]. 4 The Shannon Machine A Formal <p> Maes has noted that trainable agents are readily accepted <ref> [Mae94] </ref>. Users are comfortable with agent decisions since the agents learn which decisions to make by observing user behavior. The July 1994 issue of Communications of the ACM contains several articles that discuss the psychological acceptance of agents. These articles include [Mae94], [Bat94] and [Nor94]. 4 The Shannon Machine A Formal Model for Agents The goal of this section is to describe a formal model, called a Shannon Machine, for an agent's activity using concepts from computation and information theory.
Reference: [Neg94] <author> Nicholas Negroponte. </author> <title> Bits about bits. </title> <booktitle> Keynote address at the IEEE International Conference on Multimedia Computing and Systems., </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: A solution might be as simple as Nicholas Negroponte's "Swiss bank accounts" in which a trusted third party runs the agent on the owner's behalf so that no other user knows who owns the agent <ref> [Neg94] </ref>. Bills are sent to the trusted third party which then forwards the bills to the appropriate owners. Authentication is more difficult since unfortunately privacy and authority are contrary goals. The privacy mechanism discussed above relies on a third party removing all owner identification from the agent.
Reference: [Nor94] <author> Donald Norman. </author> <title> How might people interact with agents. </title> <journal> Communications of the ACM, </journal> <volume> 37(7) </volume> <pages> 68-71, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: However the agent's owner might care deeply about privacy since many people view choice of reading material as highly personal. The third party can easily provide the necessary billing services and privacy. <ref> [Nor94] </ref> discusses privacy briefly and underscores that the challenges are as much ethical as technical. Most technical work has dealt with authority rather than privacy. <p> Users are comfortable with agent decisions since the agents learn which decisions to make by observing user behavior. The July 1994 issue of Communications of the ACM contains several articles that discuss the psychological acceptance of agents. These articles include [Mae94], [Bat94] and <ref> [Nor94] </ref>. 4 The Shannon Machine A Formal Model for Agents The goal of this section is to describe a formal model, called a Shannon Machine, for an agent's activity using concepts from computation and information theory.
Reference: [PW89] <author> James R. Pinkert and Larry L. Wear. </author> <title> Operating Systems. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, New Jersey 07632, </address> <year> 1989. </year>
Reference-contexts: For example, the resource may give the user a chance of a free visit to some parts of it for advertising purposes. A method of authorization here is to use an analogy with tickets to some events <ref> [PW89] </ref>. The 30 is willing to pay for. resource gives the agent a ticket that has the list of the information that can be visited in advance, and checks the ticket of the agent when its visiting to authorize the access rights.
Reference: [R + 93] <author> D.E. Rose et al. </author> <title> Content awareness in a file system interface: Implementing the `pile' metaphor for organizing information. </title> <booktitle> In Proceedings of ACM-SIGIR '93, </booktitle> <pages> pages 260-268, </pages> <year> 1993. </year>
Reference-contexts: There is a small but growing interest in developing agent-like utilities that can organize and manage a personal file system using content instead of directories and naming conventions. Researchers at Apple Computer have introduced the notion of "piles" which are content based clusters of files dealing with similar subjects <ref> [R + 93] </ref>. An agent assists users by creating piles for new files when needed, assigning new files to existing piles if there is enough correlation and locating files associatively according to content when the user wants to call up an existing file.
Reference: [Rea91] <author> T. C. Rearick. </author> <title> Automating the conersion of text into hypertext. </title> <editor> In E. Berk and J. Devlin, editors, </editor> <booktitle> Hypertext/Hypermedia Handbook. </booktitle> <publisher> McGraw-Hill, </publisher> <year> 1991. </year>
Reference-contexts: Future work will address these shortcomings. An agent could use this or other techniques to generate hyperlinks in a collection of documents that had been retrieved for user consideration. Other text-analysis techniques for automatically generating hyperlinks are discussed in [Hay88], <ref> [Rea91] </ref> and [Rin91]. 2.5.2 Automatic Clustering In the vector space model of text documents [SM83], points in high dimensional vector space represent documents and the distances between the points are correlated with the similarities between the documents.
Reference: [Rei94] <author> Andy Reinhardt. </author> <title> The network with smarts. </title> <journal> Byte, </journal> <pages> pages 51-64, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: However Telescript is a commercial product from General Magic that is being used in the new AT&T PersonaLink network <ref> [Rei94] </ref>. Telescript is the most robust and secure system. Telescript agents are written in an object-oriented interpreted language. An interpreted language is used so that agents can migrate easily among heterogeneous machines and to provide an extra layer of security between the agent and the bare hardware.
Reference: [Rie94] <author> Doug Riecken. </author> <title> Introduction. </title> <journal> Communications of the ACM, </journal> <volume> 37(7) </volume> <pages> 72-76, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: Many researchers compound this apparent dissimilarity by inventing new terms to describe their particular agents. Readers now see references to "intelligent agents, intelligent interfaces, adaptive interfaces, knowbots, knobots, softbots, userbots, taskbots, personal agents and network agents" <ref> [Rie94] </ref>. However these agents perform similar tasks. Each agent manages an information space or some portion of an information space.
Reference: [Rin91] <author> R. Riner. </author> <title> Automated conversion. </title> <editor> In E. Berk and J. Devlin, editors, </editor> <booktitle> Hypertext/Hypermedia Handbook. </booktitle> <publisher> McGraw-Hill, </publisher> <year> 1991. </year>
Reference-contexts: Future work will address these shortcomings. An agent could use this or other techniques to generate hyperlinks in a collection of documents that had been retrieved for user consideration. Other text-analysis techniques for automatically generating hyperlinks are discussed in [Hay88], [Rea91] and <ref> [Rin91] </ref>. 2.5.2 Automatic Clustering In the vector space model of text documents [SM83], points in high dimensional vector space represent documents and the distances between the points are correlated with the similarities between the documents.
Reference: [RWG94] <author> A. Duda R. Weiss and D. K. Gifford. </author> <title> Content-based access to algebraic video. </title> <booktitle> In Proceedings of the International Conference on Multimedia Computing and Systems, </booktitle> <address> Washington, </address> <month> May </month> <year> 1994. </year> <title> IEEE, </title> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: The recent IEEE International Conference on Multimedia Systems and Computing highlighted several different ways of representing images and text. Two of the more interesting papers presented were [G + 94] and <ref> [RWG94] </ref>. [G + 94] discusses an image database system that represents images as both collections of monocolor segments and a collection of histograms. [RWG94] 13 discusses algebraic video in which an algebraic expression is used to represent the content of a video stream. <p> Two of the more interesting papers presented were [G + 94] and <ref> [RWG94] </ref>. [G + 94] discusses an image database system that represents images as both collections of monocolor segments and a collection of histograms. [RWG94] 13 discusses algebraic video in which an algebraic expression is used to represent the content of a video stream. Unfortunately work in this area tends to require a case-by-case approach.
Reference: [Sal73] <author> G. Salton. </author> <title> Recent studies in automatic text analysis and document retrieval. </title> <journal> Journal of the ACM, </journal> <volume> 20(2) </volume> <pages> 258-278, </pages> <year> 1973. </year>
Reference-contexts: The application developer uses the libraries that are appropriate for her agent. The feature vector model is similar to the vector space models that have been proposed throughout the corpus of information retrieval literature. Vector space models have been discussed most extensively in the context of text retrieval. <ref> [Sal73] </ref> and [SM83] discuss the SMART system at Cornell which represents documents as term-frequency vectors and uses the cosine of the angle between vectors as a measure of document similarity. [D + 90] and [Gup94] discusses latent semantic indexing which uses the same cosine measure as the SMART system but first <p> One common technique is to interpret the cosine of the angle between two feature vectors as a measure of their similarity [D + 90], <ref> [Sal73] </ref>, [Gup94]. This technique has the advantage that it can be used in a wide range of applications. It is particularly effective when comparing term-frequency vectors. However this cosine measure does not provide good results in all applications. It certainly does not work if the feature vectors are non-numeric.
Reference: [SCS94] <author> David Canfield Smith, Allen Cypher, and Jim Spohrer. Kidsim: </author> <title> Programming agents without a programming language. </title> <journal> Communications of the ACM, </journal> <volume> 37(7) </volume> <pages> 72-76, </pages> <month> July </month> <year> 1994. </year> <month> 40 </month>
Reference-contexts: The agent could then be thought of as an interpreter for 9 10 user-defined agents. This opens up the whole field of end-user programming which is aptly demonstrated by the KidSim environment. The KidSim environment allows children to construct simulations through languageless programming <ref> [SCS94] </ref>. The agent works with some set of information resources which can be referred to as the domain of the agent. The set of information resources could be large in which case the domain is likely organized into a hierarchy.
Reference: [Sel94] <author> Ted Selker. Coach: </author> <title> A teaching agent that learns. </title> <journal> Communications of the ACM, </journal> <volume> 37(7) </volume> <pages> 72-76, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: Ted Selker from the IBM Almaden Research 8 Center presents the COACH system which can provide "interactive adaptive computer help [in] text--based interfaces" <ref> [Sel94] </ref>. The COACH system monitors user actions to create a user model. This model is used to decide when and what kind of unsolicited advice should be offered to the user. Alderman separates the task-specific knowledge from the learning and reasoning algorithms.
Reference: [SG90] <author> J. W. Stamos and D. K. Gifford. </author> <title> Remote evaluation. </title> <journal> ACM Transactions on Progamming Languages and Systems, </journal> <volume> 12(4) </volume> <pages> 537-565, </pages> <year> 1990. </year>
Reference-contexts: The program chooses when and where to migrate. It can suspend its execution at an arbitrary point, transport to a new machine and resume execution on the new machine. Transportable agents were developed as the next step in the remote procedure call [BN84], remote evaluation <ref> [SG90] </ref> and SUPRA-RPC [Sto94] hierarchy. Transportable agents have several advantages over these paradigms. Transportable agents consume fewer network resources since intermediate data does not need to be brought across the network and agents can communicate easily among themselves.
Reference: [SM83] <author> G. Salton and M. J. McGill. </author> <title> Introduction to Modern Information Retrieval. </title> <publisher> McGraw-Hill Computer Science Series. McGraw-Hill, </publisher> <address> New York, </address> <year> 1983. </year>
Reference-contexts: An agent could use this or other techniques to generate hyperlinks in a collection of documents that had been retrieved for user consideration. Other text-analysis techniques for automatically generating hyperlinks are discussed in [Hay88], [Rea91] and [Rin91]. 2.5.2 Automatic Clustering In the vector space model of text documents <ref> [SM83] </ref>, points in high dimensional vector space represent documents and the distances between the points are correlated with the similarities between the documents. Using Cluster Analysis methods or Vector Quantization techniques [And73, Kun93], documents with a vector representation can be grouped and a hierarchical cluster structure can be built automatically. <p> The feature vector model is similar to the vector space models that have been proposed throughout the corpus of information retrieval literature. Vector space models have been discussed most extensively in the context of text retrieval. [Sal73] and <ref> [SM83] </ref> discuss the SMART system at Cornell which represents documents as term-frequency vectors and uses the cosine of the angle between vectors as a measure of document similarity. [D + 90] and [Gup94] discusses latent semantic indexing which uses the same cosine measure as the SMART system but first performs a <p> Comparisons between sets of features are used to determine document similarity. The previous discussion leads to several research issues. 1. Which representation is best for a given document type and application? Much work has been done in this area. <ref> [SM83] </ref>, [D + 90] and [Gup94] explore various term-frequency representations for straight text. The recent IEEE International Conference on Multimedia Systems and Computing highlighted several different ways of representing images and text. <p> Below is an example that demonstrates the potential of statistical model and signal processing methods in text processing area. 3.5.2 Text Correlation In the vector space model of text representation <ref> [SM83] </ref>, a document is regarded as a set of terms. The features are the term frequency counts in the documents. Feature vectors are formed whose components are the frequencies of different terms. Term weighting may use to improve the effectiveness of this representation.
Reference: [Spa89] <author> Eugene H. Spafford. </author> <title> The internet worm: Crisis and aftermath. </title> <journal> Communications of the ACM, </journal> <volume> 32(6) </volume> <pages> 678-687, </pages> <year> 1989. </year>
Reference-contexts: However transmitting an agent to a remote machine introduces numerous complexities. The agent must either precede from machine to machine in round-robin fashion or run multiple copies of itself on each machine which raises the specter of the Internet worm <ref> [Spa89] </ref>. The agent must be able to run on different machine architectures since there is no guarantee that the domain is contained within a uniform architecture.
Reference: [SS94] <author> Mukesh Singhal and Niranjan G. Shivaratri. </author> <title> Advanced concepts in operating systems: Distributed, database and multiprocessor operating systems. </title> <publisher> McGraw-Hill Series in Computer Science. McGraw-Hill, </publisher> <address> New York, </address> <year> 1994. </year>
Reference-contexts: This makes transportable agents easier to use than low-level facilities that require the programmer to handle all communication but more powerful than schemes such as process migration in which the system decides when to migrate a program based on a fixed set of criteria <ref> [SS94] </ref>. Most existing transportable agent systems provide the go instruction which migrates the agent to a new machine. The statement after the go is executed at the destination machine. The details of packaging and transmitting the agent are hidden.
Reference: [Sto94] <author> A. D. Stoyenko. SUPRA-RPC: </author> <title> SUbprogram PaRAmeters in Remote Procedure Calls. </title> <journal> Software-Practice and Experience, </journal> <volume> 24(1) </volume> <pages> 27-49, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: The program chooses when and where to migrate. It can suspend its execution at an arbitrary point, transport to a new machine and resume execution on the new machine. Transportable agents were developed as the next step in the remote procedure call [BN84], remote evaluation [SG90] and SUPRA-RPC <ref> [Sto94] </ref> hierarchy. Transportable agents have several advantages over these paradigms. Transportable agents consume fewer network resources since intermediate data does not need to be brought across the network and agents can communicate easily among themselves.
Reference: [Val84] <author> L.G. Valiant. </author> <title> A theory of the learnable. </title> <journal> Communications of the ACM, </journal> <volume> 27:11:1134-1142, </volume> <year> 1984. </year>
Reference-contexts: Those issues and the overall architecture provide a framework around which future research and evaluation can be made. In the past, models such as Turing machines (for general computation) and the PAC model <ref> [Val84] </ref> (for machine learning) have been valuable as reference models to evaluate and compare progress. We do not assume that we are presenting a model as powerful or as generic as a Turing machine but we do hope that these discussions will lead to efforts in that direction.
Reference: [Whi94] <author> James E. White. </author> <title> Telescript technology: The foundation for the electronic marketplace. General magic white paper, General Magic, </title> <publisher> Inc., </publisher> <year> 1994. </year> <month> 41 </month>
Reference-contexts: The peer/peer model offers much more flexibility when developing distributed applications [Lew95]. Finally transportable agents do not require a connection between the local and remote machines which in combination with their low use of network resources makes them ideally suited for mobile computing <ref> [Whi94] </ref>. Mobile computing is characterized by low bandwidth, high latency and periods of disconnection from the network. 19 There are several transportable agent systems although most have not progressed beyond the prototype stage.
References-found: 53

