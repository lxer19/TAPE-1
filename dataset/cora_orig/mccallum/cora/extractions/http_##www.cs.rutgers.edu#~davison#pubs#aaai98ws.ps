URL: http://www.cs.rutgers.edu/~davison/pubs/aaai98ws.ps
Refering-URL: http://www.cs.rutgers.edu/~davison/pubs/aaai98ws.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: fdavison,hirshg@cs.rutgers.edu  
Title: on Predicting the Future: AI Approaches to Time-Series Analysis 1 Predicting Sequences of User Actions  
Author: Brian D. Davison and Haym Hirsh 
Keyword: Motivation Background Evaluation Criteria  
Address: New Jersey New Brunswick, NJ 08903 USA  
Affiliation: Department of Computer Science Rutgers, The State University of  
Note: To be presented at the AAAI/ICML 1998 Workshop  
Abstract: People display regularities in almost everything they do. This paper proposes characteristics of an idealized algorithm that, when applied to sequences of user actions, would allow a user interface to adapt over time to an individual's pattern of use. We describe a simple predictive method with these characteristics and show its predictive accuracy on a large dataset of UNIX commands to be at least as good as others that have been considered, while using fewer computational and memory resources. How predictable are you? Each of us displays patterns of actions throughout whatever we do. Most occur without conscious thought. Some patterns are widespread among large communities, and are taught, as rules, such as reading from left to right, or driving on the correct side of the road. Other patterns are a function of our lifestyle, such as picking up pizza on the way home from work every Friday, or programming the VCR to record our favorite comedy each week. Many are a result of the way interfaces are designed, like the pattern of movement of your finger on a phone dialing a number you call often, or how you might log into your computer, check mail, read news, and visit your favorite website for the latest sports scores. As computers pervade more and more aspects of our lives, the need for a system to be able to adapt to the user, perhaps in ways not programmed explicitly by the system's designer, become ever more apparent. A car that can offer advice on driving routes is useful; one that can also guess your destination (such as a pizza parlor because it is Friday and you are leaving work) is likely to be found even more useful, particularly if you didn't have to program it explicitly with that knowledge. The ability to predict the user's next action allows the system to anticipate the user's needs (perhaps through speculative execution or intelligent defaults) and to adapt to and improve upon the user's work habits (such as automating repetitive tasks). Additionally, adaptive interfaces have also been shown to help those with disabilities (Greenberg et al. 1995; Demasco & McCoy 1992). This paper considers the more mundane, but present-day activities of user actions within a command line shell. We have concentrated initially on UNIX command prediction 1 because of its continued widespread use; the UNIX shell provides an excellent testbed for experimentation and automatic data collection. However, our interest is in more general action prediction, and so we hypothesize that successful methodologies will also be applicable in other interfaces, including futuristic ones anticipated above as well as present-day menu selection in GUIs and voice-mail, or URL selection in web browsers. This paper, therefore, reflects our focus on the underlying technology for action prediction, rather than on how prediction can be effectively used within an interface. In this paper, we use the data from two user studies to suggest that relatively naive methods can predict a particular user's next command surprisingly well. With the generic task in mind, we will describe the characteristics of an ideal algorithm for action prediction. Finally, we will present and analyze a novel algorithm that satisfies these characteristics and additionally performs better than the previous best-performing system. This paper addresses the task of predicting the next element in a sequence, where the sequence is made up of nominal (unordered as well as non-numeric) elements. This type of problem (series prediction) is not studied often by machine learning researchers; concept recognition (i.e., a boolean classification task such as sequence recognition) is more common, as is the use of independent samples from a distribution of examples. UNIX commands, and user actions in general, however, are not independent, and being nominal, don't fall into the domain of traditional statistical time-series analysis techniques. In most machine learning experiments that have a single dataset of independent examples, cross-validation is the standard method of evaluating the performance of an algorithm. When cross-validation is inappropriate, partitioning the data into separate training and test sets is common. For sequential datasets, then, the obvious split would have the training set contain the first portion of the sequence, and the test set 1 We are currently ignoring command arguments and switches. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Andrews, T. </author> <year> 1997. </year> <title> Computer command prediction. </title> <type> Master's thesis, </type> <institution> University of Nevada, </institution> <address> Reno. </address>
Reference: <author> Bauer, M. </author> <year> 1996. </year> <title> Acquisition of user preferences for plan recognition. </title> <editor> In Chin, D., ed., </editor> <booktitle> Proceedings of the Fifth International Conference on User Modeling (UM96). </booktitle>
Reference: <author> Bell, T. C.; Cleary, J. G.; and Witten, I. H. </author> <year> 1990. </year> <title> Text Compression. </title> <address> Englewood Cliffs, NJ: </address> <publisher> Prentice Hall. </publisher>
Reference-contexts: Masui (1994) also learns repeated user patterns, requiring the user to hit the 'repeat' button when the system should learn or execute a macro. Sequence prediction is also strongly related to data compression <ref> (Bell, Cleary, & Witten 1990) </ref> since an algorithm that can predict the next item in a sequence well can also be used to compress the data stream.
Reference: <author> Cypher, A. </author> <year> 1993a. </year> <title> Eager: Programming repetitive tasks by demonstration. </title> <booktitle> In Cypher (1993b). </booktitle> <pages> 204-217. </pages>
Reference-contexts: Thus, a mechanism that can learn to better model a user would be quite valuable in this context. Programming by demonstration (Cypher 1993b; Nevill-Manning 1993) also has some similarities to our work. For example, Cypher's Eager <ref> (Cypher 1993a) </ref> can automate explicitly marked loops in user actions in a graphical interface. They, too, are concerned with performance when integrated into a user interface.
Reference: <author> Cypher, A., ed. </author> <year> 1993b. </year> <title> Watch What I Do: Programming by Demonstration. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Darragh, J. J.; Witten, I. H.; and James, M. L. </author> <year> 1990. </year> <title> The reactive keyboard: A predictive typing aid. </title> <booktitle> IEEE Computer 23(11) </booktitle> <pages> 41-49. </pages>
Reference-contexts: More recently, Tauscher and Greenberg (1997) extended Greenberg's recurrence analysis to URL re-visitation in World Wide Web browsers. These efforts consider only some simple methods for offering the top-n possibilities for easy selection (such as the most recent n commands). The Reactive Keyboard <ref> (Darragh, Witten, & James 1990) </ref> also uses simple history-matching methods for prediction, but at the lower level of keypresses.
Reference: <author> Davison, B. D., and Hirsh, H. </author> <year> 1997a. </year> <title> Experiments in UNIX command prediction. </title> <type> Technical Report ML-TR-41, </type> <institution> Department of Computer Science, Rutgers University. </institution>
Reference: <author> Davison, B. D., and Hirsh, H. </author> <year> 1997b. </year> <title> Toward an adaptive command line interface. </title> <booktitle> In Advances in Human Factors/Ergonomics: Design of Computing Systems: Social and Ergonomic Considerations, </booktitle> <pages> 505-508. </pages> <address> San Francisco, CA: Elsevier Science Publishers. </address> <booktitle> Proceedings of the Seventh International Conference on Human-Computer Interaction. </booktitle>
Reference: <author> Debevc, M.; Meyer, B.; and Svecko, R. </author> <year> 1997. </year> <title> An adaptive short list for documents on the world wide web. </title> <booktitle> In Proceedings of the 1997 International Conference on Intelligent User Interfaces, </booktitle> <pages> 209-211. </pages> <address> Orlando, FL: </address> <publisher> ACM Press. </publisher>
Reference: <author> Demasco, P. W., and McCoy, K. F. </author> <year> 1992. </year> <title> Generating text from compressed input: An intelligent interface for people with severe motor impairments. </title> <journal> Communications of the ACM 35(5) </journal> <pages> 68-78. </pages>
Reference: <author> Esmaili, M.; Safavi-Naini, R.; and Pieprzyk, J. </author> <year> 1996. </year> <title> Evidential reasoning in network intrusion detection systems. </title> <editor> In Pieprzyk, J., and Seberry, J., eds., </editor> <booktitle> Information Security and Privacy: First Australasian Conference, ACISP'96, </booktitle> <pages> 253-265. </pages> <address> Wollongong, NSW, Australia: </address> <note> Springer-Verlag. Lecture Notes in Computer Science 1172. </note>
Reference-contexts: Most intrusion detection systems can be categorized as using either statistical-anomaly detection, or rule-based detection. While rule-based expert systems monitor for known attack patterns and thus trigger few false alarms, they are also criticized as encouraging the development of ad hoc rules <ref> (Esmaili, Safavi-Naini, & Pieprzyk 1996) </ref> and require significant human engineering effort to develop. In contrast, statistical systems traditionally build profiles of normal user behavior and then search for the unusual sequences of events for consideration.
Reference: <author> Greenberg, S.; Darragh, J. J.; Maulsby, D.; and Witten, I. H. </author> <year> 1995. </year> <title> Predictive interfaces: What will they think of next? In Edwards, </title> <editor> A. D. N., ed., </editor> <title> Extra-ordinary human-computer interaction: interfaces for users with disabilities. </title> <publisher> Cambridge University Press. </publisher> <pages> chapter 6, 103-140. </pages>
Reference: <author> Greenberg, S. </author> <year> 1988. </year> <title> Using unix: collected traces of 168 users. </title> <type> Research Report 88/333/45, </type> <institution> Department of Computer Science, University of Calgary, Alberta. </institution> <note> Includes tar-format cartridge tape. </note>
Reference: <author> Greenberg, S. </author> <year> 1993. </year> <title> The Computer User as Toolsmith: The Use, Reuse, and Organization of Computer-based Tools. </title> <address> New York, NY: </address> <publisher> Cambridge University Press. </publisher>
Reference: <author> Hermens, L. A., and Schlimmer, J. C. </author> <year> 1993. </year> <title> A machine-learning apprentice for the completion of repetitive forms. </title> <booktitle> In Proceedings of the Ninth IEEE Conference on Artificial Intelligence Applications, </booktitle> <pages> 164-170. </pages> <address> Los Alamitos, CA: </address> <publisher> IEEE Computer Society Press. </publisher>
Reference: <author> Hirashima, T.; Matsuda, N.; and Toyoda, J. </author> <year> 1998. </year> <title> Context-sensitive filtering for hypertext browsing. </title> <booktitle> In Proceedings of the 1998 International Conference on Intelligent User Interfaces. </booktitle> <publisher> ACM Press. </publisher>
Reference: <author> Joachims, T.; Freitag, D.; and Mitchel, T. </author> <year> 1997. </year> <title> Web-watcher: A tour guide for the world wide web. </title> <booktitle> In Proceedings of the Fifteenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> 770-775. </pages> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Therefore, the Adaptive Short List computes a simplistic 'most likely' set of documents without regard to context. A number of researchers have studied the use of machine learning in developing intelligent interfaces incorporating action prediction. For example, WebWatcher <ref> (Joachims, Freitag, & Mitchel 1997) </ref> predicts which links on a page on World Wide Web a user will select, and Hirashima et al. (1998) present a method for context-sensitive filtering, but both systems rely on the precise nature of the artifacts being manipulated (namely decomposable pages of text).
Reference: <author> Kumar, S. </author> <year> 1995. </year> <title> Classification and detection of computer intrusions. </title> <type> Ph.D. Dissertation, </type> <institution> Purdue University, West Lafayette, </institution> <note> IN. </note>
Reference: <author> Laird, P., and Saul, R. </author> <year> 1994. </year> <title> Discrete sequence prediction and its applications. </title> <booktitle> Machine Learning 15(1) </booktitle> <pages> 43-68. </pages>
Reference: <author> Lee, A. </author> <year> 1992. </year> <title> Investigations into History Tools for User Support. </title> <type> Ph.D. Dissertation, </type> <institution> University of Toronto. </institution> <note> Available as Technical Report CSRI-271. </note>
Reference: <author> Lesh, N., and Etzioni, O. </author> <year> 1995. </year> <title> A sound and fast goal recognizer. </title> <booktitle> In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> 1704-1710. </pages> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Lesh, N. </author> <year> 1997. </year> <title> Adaptive goal recognition. </title> <booktitle> In Proceedings of the Fifteenth International Joint Conference on Artificial Intelligence. </booktitle> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Lunt, T. F. </author> <year> 1990. </year> <title> IDES: An intelligent system for detecting intruders. </title> <booktitle> In Proceedings of the Symposium: Computer Security, Threat and Countermeasures. </booktitle>
Reference: <author> Maes, P., and Kozierok, R. </author> <year> 1993. </year> <title> Learning interface agents. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> 459-465. </pages> <address> Menlo Park, CA: </address> <publisher> AAAI Press. </publisher>
Reference: <author> Maes, P. </author> <year> 1994. </year> <title> Agents that reduce work and information overload. </title> <journal> Communications of the ACM 37(7) </journal> <pages> 31-40. </pages>
Reference: <author> Masui, T., and Nakayama, K. </author> <year> 1994. </year> <title> Repeat and predict two keys to efficient text editing. </title> <booktitle> In Proceedings of the Conference on Human Factors in Computing Systems, </booktitle> <pages> 118-123. </pages> <address> New York: </address> <publisher> ACM Press. </publisher>
Reference: <author> Mitchell, T. M.; Mahadevan, S.; and Steinberg, L. I. </author> <year> 1985. </year> <title> LEAP: A learning apprentice for VLSI design. </title> <booktitle> In Proceedings of the Ninth International Joint Conference on Artificial Intelligence. </booktitle>
Reference-contexts: much time has passed); 4. not need to retain a copy of the user's full history of ac tions; 5. output a list of predictions, sorted by confidence; 6. adapt to changes to the target concept; 7. be fast enough for interactive use; 8. learn by passively watching the user <ref> (Mitchell, Mahade van, & Steinberg 1985) </ref>; and 9. apply even in the absence of domain knowledge. Such a system would be ideally suited for incorporation into many types of user interfaces.
Reference: <author> Motoda, H., and Yoshida, K. </author> <year> 1997. </year> <title> Machine learning techniques to make computers easier to use. </title> <booktitle> In Proceedings of the Fifteenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> 1622-1631. </pages> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Nevill-Manning, C. G. </author> <year> 1993. </year> <title> Programming by demonstration. </title> <journal> New Zealand Journal of Computing 4(2) </journal> <pages> 15-24. </pages>
Reference: <author> Nevill-Manning, C. G. </author> <year> 1996. </year> <title> Inferring Sequential Structure. </title> <type> Ph.D. Dissertation, </type> <institution> University of Waikato, </institution> <address> New Zealand. </address>
Reference: <author> Quinlan, J. R. </author> <year> 1993. </year> <title> C4.5: Programs for Machine Learning. </title> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: In each of these, the learning problem was to examine the commands executed previously, and to predict the command to be executed next. We found that, without explicit domain knowledge, a naive method based on C4.5 <ref> (Quinlan 1993) </ref> was able to predict each command with a macroaverage accuracy of 38.5% (microaverage was 37.2%).
Reference: <author> Schlimmer, J. C., and Wells, P. C. </author> <year> 1996. </year> <title> Quantitative results comparing three intelligent interfaces for information capture: A case study adding name information into an electronic personal organizer. </title> <journal> Journal of Artificial Intelligence Research 5 </journal> <pages> 329-349. </pages>
Reference: <author> Sheth, B., and Maes, P. </author> <year> 1993. </year> <title> Evolving agents for personalized information filtering. </title> <booktitle> In Proceedings of the Ninth IEEE Conference on Artificial Intelligence Applications, </booktitle> <pages> 345-352. </pages> <address> Los Alamitos, CA: </address> <publisher> IEEE Computer Society Press. </publisher>
Reference: <author> Sutton, R. S., and Barto, A. G. </author> <year> 1998. </year> <title> Reinforcement Learning: An Introduction. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference-contexts: While on the surface the command prediction problem (and especially the IPAM approach) may bear some similarities to Markov decision processes, reinforcement learning approaches <ref> (Sutton & Barto 1998) </ref> are not likely to be a good over time for a typical user. choice for the following reasons: 1) while we have made the Markov assumption, it is only a rationalization that we used to motivate the IPAM approach; 2) every `state' has equal value the task
Reference: <author> Tauscher, L., and Greenberg, S. </author> <year> 1997. </year> <title> How people revisit web pages: Empirical findings and implications for the design of history systems. </title> <booktitle> International Journal of Human Computer Studies 47(1) </booktitle> <pages> 97-138. </pages>
Reference: <author> Utgoff, P. E. </author> <year> 1989. </year> <title> Incremental induction of decision trees. </title> <booktitle> Machine Learning 4(2) </booktitle> <pages> 161-186. </pages>
Reference-contexts: C4.5 also has significant computational overhead. It can only generate new decision-trees; it does not incrementally update or improve the decision tree upon receiving new information. (While there are other decision-tree systems that can perform incremental updates <ref> (Utgoff 1989) </ref>, they have not achieved the same levels of performance as C4.5.) Therefore, C4.5 decision tree generation must be performed outside of the command prediction loop.
Reference: <author> Yoshida, K., and Motoda, H. </author> <year> 1996. </year> <title> Automated user modeling for intelligent interface. </title> <journal> International Journal of Human-Computer Interaction 8(3) </journal> <pages> 237-258. </pages>
Reference: <author> Yoshida, K. </author> <year> 1994. </year> <title> User command prediction by graph-based induction. </title> <booktitle> In Proceedings of the Sixth International Conference on Tools with Artificial Intelligence, </booktitle> <pages> 732-735. </pages> <address> Los Alamitos, CA: </address> <publisher> IEEE Computer Society Press. </publisher>
References-found: 38

