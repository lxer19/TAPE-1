URL: ftp://ftp.cs.man.ac.uk/pub/TR/UMCS-99-3-1-graves.ps.Z
Refering-URL: ftp://ftp.cs.man.ac.uk/pub/TR/UMCS-99-3-1.html
Root-URL: http://www.cs.man.ac.uk
Email: arg|cc@dmu.ac.uk  
Title: A Generic Control Architecture for Telerobotics  
Author: Alan R. Graves and Chris Czarnecki 
Address: LE1 9BH.  
Affiliation: Centre for Computational Intelligence, De Montfort University, Leicester,  
Abstract: 1 This paper describes a telerobotic system designed for the real world task of bomb disposal. The system is based around an existing remotely operated vehicle built for this purpose some years ago. The original vehicle has been enhanced in order to contend with a number of operational problems identified with its use. A sensor configuration and distributed control system are described which address these problems. The core of the control system is founded upon the principles of the Subsumption Architecture, although the design is grounded in a wider concept of the development of generic user interfaces which may be used to control a number of different types of telerobot. This is a desirable feature for application domains in which a number of different types of robot are used for performing distinct functions, such as the nuclear industry and military operations. Localising the differences between telerobots to within the remote control system can increase flexibility and can simplify the development of different versions of a system. This requirement presents a number of problems when considering the physical structure (sensors, chassis and actuators) and the control systems (functions and behaviors) of different telerobots. To this end, a system architecture, communication protocol and robot description language are described which address these issues. Proc. TIMR 99 "Towards Intelligent Mobile Robots", Bristol 1999 Technical Report Series, Department of Computer Science, Manchester University, ISSN 1361 - 6161. Report number UMCS-99-3-1. http://www.cs.man.ac.uk/cstechrep/titles99.html 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Anderson, R. J., </author> <title> "SMART: A Modular Control Architecture for Telerobotics," </title> <journal> IEEE Robotics and Automation Society Magazine, </journal> <volume> Vol. 2, No. 3, </volume> <month> Sept. </month> <year> 1995, </year> <pages> pp. 10-18. </pages>
Reference-contexts: The SMART architecture <ref> [1] </ref> shares many of the same motivations, although that approach is designed expressly for manufacturing workcells rather than mobile telerobots. The approach described here also differs quite markedly from other robot modelling techniques in both intent and implementation.
Reference: [2] <author> R. C. Arkin, </author> <title> Reactive Control as a Substrate for Telerobotic Systems, </title> <journal> IEEE AES Magazine, </journal> <volume> Vol. 6, No. 6, </volume> <month> June, </month> <year> 1991, </year> <pages> pp. 24-31. </pages>
Reference-contexts: However, the wider field of Behavior-based robotics includes many other controller designs which incorporate the notion of behavioral modules, although operating on radically different computational substrates <ref> [2, 7] </ref>. Additionally, it is conceivable that virtually any underlying control system could present itself via a wrapper in which its functions are encapsulated by conceptual behaviors.
Reference: [3] <author> Betg-Brezetz, S., Hebert, P., Chatila, R., & Devy, M., </author> <title> Uncertain Map Making in Natural Environments, </title> <booktitle> in Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <address> Minneapolis, Minnesota, </address> <month> April 22-28, </month> <journal> 1996, </journal> <volume> Vol. 2, </volume> <pages> pp. 1048-1053. </pages>
Reference-contexts: Due to the short nature of the missions and constant human supervision, navigation does not need to extend to the complexity of map building and planning. (e.g. as in <ref> [3] </ref>.) 4 Man-Machine Control System The core of the control system onboard the telerobot has responsibility for combining commands from the human operator with data from the numerous sensors, and providing a coherent control strategy to drive the robot.
Reference: [4] <author> Brooks, R. A., </author> <title> A Robust Layered Control System for a Mobile Robot, </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> Vol. 2, No. 1, </volume> <year> 1986, </year> <pages> pp. 14-23. </pages>
Reference-contexts: The control system which performs this is based upon Brooks Subsumption Architecture (SA) <ref> [4] </ref>. This approach overcomes the limitations imposed by the demands of real-time autonomous robotics which have beleaguered traditional techniques for achieving robot control. This architecture is ideal for implementation on computers onboard mobile robots which are constrained in terms of computational power.
Reference: [5] <author> Chen, C. X., Trivedi, M. M., & Bidlack, C. A., </author> <title> Simulation and Graphical Interface for Programming and Visualisation of Sensor-based Robot Operation, </title> <booktitle> in Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <address> Nice, France, </address> <month> May 12-14, </month> <journal> 1992, </journal> <volume> Vol. 2, </volume> <pages> pp. 1095-1102. </pages>
Reference-contexts: The approach described here also differs quite markedly from other robot modelling techniques in both intent and implementation. In contrast to modelling techniques designed for simulation which provide physically accurate models of the robots and their environments <ref> [5] </ref>, this approach describes the characteristics of the robot in a user interface-oriented way.
Reference: [6] <author> J. H. Connell, </author> <title> SSS: A Hybrid Architecture Applied to Robot Navigation, </title> <booktitle> in Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <address> Nice, France, </address> <month> May 12-14, </month> <note> Vol. 3, </note> <year> 1992, </year> <pages> pp. 2719-2724. </pages>
Reference-contexts: However, classical SA controllers tend to provide hard-coded behavior, lacking the programmability and versatility required in telerobotic applications. Connells SSS architecture extends the basic model by sandwiching the subsumption network between a low-level servo control layer, and a high-level symbolic layer <ref> [6] </ref>. The symbolic layer exerts overall control by providing parameters for the subsumption modules, thereby making the whole system more versatile than a traditional SA controller.
Reference: [7] <author> J. Connell, & P. Viola, </author> <title> Cooperative Control of a Semi-Autonomous Mobile Robot, </title> <booktitle> in Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <address> Cincinnati, OH, </address> <month> May 13-18, </month> <year> 1990, </year> <pages> pp. 1118-1121. </pages>
Reference-contexts: However, the wider field of Behavior-based robotics includes many other controller designs which incorporate the notion of behavioral modules, although operating on radically different computational substrates <ref> [2, 7] </ref>. Additionally, it is conceivable that virtually any underlying control system could present itself via a wrapper in which its functions are encapsulated by conceptual behaviors.
Reference: [8] <author> Graves, A. R., & Czarnecki, C. A., </author> <title> A Novel Teleoperated Robot Control System, </title> <note> to be published in Proceedings of Mechatronics 98, Skvde, Sweden, </note> <month> Sept 9-11, </month> <year> 1998. </year>
Reference-contexts: The research presented in this paper is applied to a physical robot designed for the well-defined real world application of bomb disposal, as has been previously described by Graves and Czarnecki <ref> [8] </ref>. An existing teleoperated vehicle used for military bomb disposal operations has been upgraded into an advanced telerobotic system, however, this particular robot is only one of many designs which are used in this field of work; other robots range from small reconnaissance robots through to large teleoperated forklift trucks.
Reference: [9] <author> Ince, I., Bryant, K., & Brooks, T., </author> <title> Virtuality and Reality: A Video/Graphics Environment for Teleoperation, </title> <booktitle> in Proceedings of IEEE International Conference on Systems, Man and Cybernetics, </booktitle> <volume> 2, </volume> <year> 1991, </year> <pages> pp. 1083-1089. </pages>
Reference-contexts: Traditional, direct control teleoperator interfaces are giving way to modern computer workstations which allow rich representations of the remote environment to be presented to the user through a number of techniques ranging from 2D computer graphics through to virtual reality and augmented reality displays <ref> [9] </ref>. Additionally, Artificial Intelligence (AI) techniques enable robots to perform sensor-guided functions, either alleviating the need for continuous control by the operator, or providing higher levels of accuracy in positioning and manipulation than may be achieved by an unaided operator.
Reference: [10] <author> Moore, P. R., & Eriksson, P., </author> <title> A Role for Sensor Simulation, </title> <booktitle> in Computer Aided Robotics, Proc. Of 26 th International Symposium on Industrial Robots, </booktitle> <address> ISIR 95, Singapore, 4-6 Oct, </address> <year> 1995. </year>
Reference-contexts: However, the approach taken here in the representation of generic sensors has some similarities with the simulation work of Moore and Ericksson <ref> [10] </ref>. This paper describes a telerobotic system which has been designed as separate components built around the communication protocol. The format of the paper is as follows. Section 2 describes the original teleoperated vehicle and the problems identified with its use.
Reference: [11] <institution> VRML97 Specification, VRML Consortium. </institution> <note> URL: http://www.vrml.org/Specification/, Date: 16/06/98. </note>
Reference-contexts: TRIL is a descriptive language, rather than a procedural one, with a simple syntax and structure which is based on that of VRML (Virtual Reality Modelling Language) <ref> [11] </ref>. Like VRML, TRIL is composed of nodes which contain named fields. These may store primitive types (such as ints and strings), other nodes, or arrays of these. Nodes are organised hierarchically, with abstract parent nodes defining the type of a number of related sub-nodes.
References-found: 11

