URL: http://www.isi.edu/netstation/Direct-Interface-v16.ps
Refering-URL: http://www.isi.edu/div7/netstation/
Root-URL: http://www.isi.edu
Title: The Impact of a Zero-Scan Internet Checksumming Mechanism  
Author: Gregory G. Finn, Steve Hotz, Rod Van Meter 
Address: 1  
Affiliation: USC/Information Sciences Institute  
Abstract: This paper describes a zero-scan mechanism that reduces Internet checksumming overhead from a per-byte scan (or copy) cost, to a small and constant per-message cost. Unlike previous techniques, this mechanism requires no message buffering within the source. This will allow Internet transport protocols to achieve transfer latencies comparable to specialized protocols implemented directly on high-speed LAN (link-layer) services. In addition, this mechanism is transparent to systems outside of the source LAN. Hence, this mechanism affords applications the portability of Internet protocols without sacrificing the high performance of specialized LAN transport protocols. The proposed zero-scan checksumming scheme eliminates the last requirement for an additional data copy/scan, beyond the scan required to transmit or receive from the network channel. If this checksumming mechanism is combined with zero-copy operating system mechanisms that provide low-overhead transfer across application and kernel boundaries, a network interface architecture that provides separate message buffering is no longer required. A consequence is that the network interface may be reduced, essentially, to DMA engines plus link and physical-layer logic. Taken one step further, the network interface could be integrated with the CPU to create an internet microprocessor. These alternative interface designs are discussed, along with their requirements and effects upon operating system and computer system architectures.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Boden, N., Cohen, D., Felderman, R., Kulawik, A. E., Seitz, C. L., Seizovic, J. N., Wen-King Su Myrinet: </author> <title> A Gigabit-per-Second Local Area Network IEEE Micro, </title> <journal> Vol. </journal> <volume> 15, No. 1, </volume> <month> February </month> <year> 1995. </year>
Reference-contexts: When the ARPANET began in 1969, it provided point-to-point links that ranged up to approximately 100 Kbit/s of data bandwidth per port. Commercial LANs now provide port bandwidths well above 1 Gbit/s. Examples are the Myrinet <ref> [1] </ref>, which was based upon ATOMIC [2], and HiPPI [3]. Message processing latency has likewise decreased by a factor of 100, as processor speeds have risen from the 1 MIP mainframe that was a typical host in 1969 to the 100 MIPs microprocessors that are now available.
Reference: [2] <author> Cohen, D., Finn, G. G., Felderman, R., DeSchon, A. </author> <title> The Use of Message-Based Multicomputer Components to Construct Gigabit Networks ACM Computer Communication Review, </title> <journal> Vol. </journal> <volume> 23, No.3., </volume> <month> July </month> <year> 1993. </year>
Reference-contexts: When the ARPANET began in 1969, it provided point-to-point links that ranged up to approximately 100 Kbit/s of data bandwidth per port. Commercial LANs now provide port bandwidths well above 1 Gbit/s. Examples are the Myrinet [1], which was based upon ATOMIC <ref> [2] </ref>, and HiPPI [3]. Message processing latency has likewise decreased by a factor of 100, as processor speeds have risen from the 1 MIP mainframe that was a typical host in 1969 to the 100 MIPs microprocessors that are now available.
Reference: [3] <institution> HIgh Performance Parallel Interface Mechanical, Electrical, and Signalling Protocol Specification ANSI X3T9/88-127, X3T9.3/88-023, REV 8.1, </institution> <month> June </month> <year> 1991. </year>
Reference-contexts: When the ARPANET began in 1969, it provided point-to-point links that ranged up to approximately 100 Kbit/s of data bandwidth per port. Commercial LANs now provide port bandwidths well above 1 Gbit/s. Examples are the Myrinet [1], which was based upon ATOMIC [2], and HiPPI <ref> [3] </ref>. Message processing latency has likewise decreased by a factor of 100, as processor speeds have risen from the 1 MIP mainframe that was a typical host in 1969 to the 100 MIPs microprocessors that are now available. Figure 1 illustrates (and compares) the rise in capacity and processing speeds.
Reference: [4] <author> Dalton, C., Watson, G., Banks, D., Calamvokis, C., Edwards, A., </author> <title> Lumley, </title> <journal> J. Afterburner IEEE Network, </journal> <month> July </month> <year> 1993. </year>
Reference: [5] <author> Smith, J. M.,Traw, C. B. S. </author> <title> Giving Applications Access to Gb/s Networking IEEE Network, </title> <month> July </month> <year> 1993. </year>
Reference: [6] <author> Buzzard, G. jacobson, D., Marovich, S., Wilkes, J. Hamlyn: </author> <title> a high-performance network interface with sender-based memory management Hot Interconnects 95. </title>
Reference: [7] <author> Steenkiste, P. A. </author> <title> Gigabit Nectar: </title> <institution> Architecture and Performance Carnegie Mellon University, CMU-CS-95-192, </institution> <month> September </month> <year> 1995. </year>
Reference: [8] <author> Druschel, P., Peterson, L. L. Fbufs: </author> <booktitle> A High-Bandwidth Cross-Domain Transfer Facility Proceedings of the Fourteenth ACM Symposium on Operating Systems Principles, </booktitle> <month> Dec. </month> <year> 1993. </year>
Reference: [9] <author> Druschel, P. </author> <title> Operating System Support for High-Speed Networking TR 94-24, </title> <institution> Dept. of Computer Science, University of Arizona, </institution> <month> August </month> <year> 1994. </year>
Reference-contexts: PIO is more f lexible, and in some systems PIO is ef fectively faster than DMA. However, the reason often mentioned for the ef fectiveness of PIO is that it allows checksum calculation to be combined with data copying at no additional cost in RISC architectures <ref> [9] </ref>; this is no longer an advantage with a zero-pass checksum. W ithout this advantage, there is little reason to commit processor cycles to transfer internet messages. The use of DMA to move data to/from network channels will allow the CPU to perform other tasks. <p> Scattering of incoming messages into multiple system buffers is also a feature deemed important to reduce complexity <ref> [9] </ref>. 4.2.2 Need for Realignment Headers can be of variable length, thus it is unrealistic to impose a restriction that all pieces of a message be both aligned and be multiples of the basic wordsize of a particular processor.
Reference: [10] <author> Tzou, S., Anderson, D. P. </author> <title> The Performance of Message-passing using Restricted Virtual Memory Remapping Software - Practice and Experience, </title> <journal> Vol. </journal> <volume> 21(3), </volume> <pages> pp. 251-267, </pages> <month> March </month> <year> 1991. </year>
Reference: [11] <author> Cheriton, </author> <title> D.R. </title> <journal> The V Distributed System Communications of the ACM, </journal> <volume> 31(3) </volume> <pages> 314-333, </pages> <month> March </month> <year> 1988. </year>
Reference: [12] <author> Plummer, </author> <title> W IEN 45: TCP Checksum Function Design Bolt Beranek and Newman, </title> <publisher> Inc., </publisher> <month> June </month> <year> 1978 </year>
Reference: [13] <author> Postel, J. </author> <type> RFC 768: </type> <institution> User Datagram Protocol USC/Information Sciences Institute, </institution> <month> August </month> <year> 1980. </year>
Reference: [14] <author> Postel, J. </author> <title> (editor) RFC 793: </title> <journal> Transmission Control Protocol USC/Information Sciences Institute, </journal> <month> September </month> <year> 1981. </year>
Reference: [15] <author> Steenkiste, P. </author> <title> A. </title>
Reference-contexts: To alleviate this cost, a designer may choose to include internet checksumming support in the network interface and calculate the checksum as a message is moved between system memory and buf fers in the network interface <ref> [15] </ref>. This avoids a software checksum scan by the host, but now the message must be stored inside the interface so the checksum can be embedded before the packet (i.e. the header) is transmitted.
References-found: 15

