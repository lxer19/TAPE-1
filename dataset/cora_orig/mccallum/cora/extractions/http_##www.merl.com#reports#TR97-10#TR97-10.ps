URL: http://www.merl.com/reports/TR97-10/TR97-10.ps
Refering-URL: http://www.merl.com/reports/TR97-10/index.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: The Interactive Sharing Transfer Protocol Version 1.0  
Author: Richard C. Waters David B. Anderson Derek L. Schwenke 
Address: Alamitos CA, 1997.)  1997 201 Broadway, Cambridge, Massachusetts 02139  
Affiliation: Los  Mitsubishi Electric Information Technology Center America,  
Date: October, 1997  
Web: http://www.merl.com  
Note: MERL A MITSUBISHI ELECTRIC RESEARCH LABORATORY  Copyright c  
Pubnum: TR-97-10  
Abstract: The Interactive Sharing Transfer Protocol (ISTP) supports the sharing of information about a virtual world among a group of user processes. ISTP allows the interoperation of diverse systems running on diverse hardware. The key advantages of ISTP are that it supports (1) real-time interaction between users, (2) the communication of every kind of information required in a virtual world, and (3) scalability to large numbers of simultaneous users and large virtual worlds. (Part I of this report is based on Waters R.C., Anderson D.B., & Schwenke D.L., "Design of the Interactive Sharing Transfer Protocol", Postproc. WET ICE '97 IEEE Sixth Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprises, (MIT, June 1997), IEEE Computer Society Press, This work may not be copied or reproduced in whole or in part for any commercial purpose. Permission to copy in whole or in part without payment of fee is granted for nonprofit educational and research purposes provided that all such whole or partial copies include the following: a notice that such copying is by permission of Mitsubishi Electric Information Technology Center America; an acknowledgment of the authors and individual contributions to the work; and all applicable portions of the copyright notice. Copying, reproduction, or republishing for any other purpose shall require a license with payment of fee to Mitsubishi Electric Information Technology Center America. All rights reserved. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H.E. Bal, </author> <title> Programming Distributed Systems, </title> <publisher> Prentice Hall International, </publisher> <year> 1991. </year>
Reference-contexts: As summarized below, this is achieved in ISTP through the combination of a number of specialized techniques. which we call the world model. The data sharing is supported via the shared data-object model of distributed shared memory <ref> [1] </ref>. However, to provide scalability, several modifications are made in this standard approach. To avoid writers/writers conflicts, each object in the world model has one process as its owner and only the owning process can modify it.
Reference: [2] <editor> Barrus J.W., Waters R.C., & Anderson D.B. (1996) "Locales and Beacons: </editor> <title> Efficient and Precise Support for Large Multi-User Virtual Environments", </title> <booktitle> IEEE Virtual Reality Annual International Symposium, </booktitle> <address> (Santa Clara CA, </address> <month> March </month> <year> 1996), </year> <pages> 204-213, </pages> <publisher> IEEE Computer Society Press, </publisher> <address> Los Alamitos CA. </address>
Reference-contexts: However, the ownership of an object can be transferred from one process to another. There are no inter-process locks. Each process can separately control the times at which object-update information is sent and received. The world model is broken into chunks called locales <ref> [2, 4] </ref> with disjoint sets of objects and MERL-TR-97-10 October, 1997 4 Interactive Sharing Transfer Protocol explicit lists of neighboring locales. No process maintains a complete copy of the world model; rather, each process maintains a partial copy of only the locales it is interested in.
Reference: [3] <author> J.W. Barrus, R.C. Waters, & D.B. Anderson, Locales and Beacons: </author> <title> Efficient and Precise Support for Large Multi-User Virtual Environments, </title> <type> technical report 95-16a, </type> <address> MERL Cambridge MA, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: ISTP achieves WWW-like operation via locales, links, and a third special class of objects called beacons <ref> [3] </ref>. Beacons have URL-like tags and can be used as markers on other world model objects. Special ISTP servers allow the rapid retrieval of information about beacons using queries based on beacon URLs. Beacons allow content to be easily located. Links allow it to be retrieved.
Reference: [4] <author> J.W. Barrus, R.C. Waters, & D.B. Anderson, "Locales: </author> <title> Supporting large multiuser virtual environments", </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 16(6) </volume> <pages> 50-57, </pages> <month> November </month> <year> 1996. </year>
Reference-contexts: However, the ownership of an object can be transferred from one process to another. There are no inter-process locks. Each process can separately control the times at which object-update information is sent and received. The world model is broken into chunks called locales <ref> [2, 4] </ref> with disjoint sets of objects and MERL-TR-97-10 October, 1997 4 Interactive Sharing Transfer Protocol explicit lists of neighboring locales. No process maintains a complete copy of the world model; rather, each process maintains a partial copy of only the locales it is interested in. <p> This approach is optimized for minimal latency communication to an audience of interested processes, where interest is defined in terms of the `locality' of the objects. In ISTP, `locality' is specified explicitly using locale objects <ref> [4] </ref> rather than geometrically.
Reference: [5] <author> D. Brutzman, M. Zyda, K. Watsen, & M. Macedonia, </author> <title> "Virtual Reality Transfer Protocol (VRTP) Design Rationale", </title> <note> web document "http://www.stl.nps.navy.mil/~brutzman/ vrml/vrtp design.ps", </note> <month> January </month> <year> 1997. </year>
Reference-contexts: Several applications are being constructed on top of Spline [11]. However, much more experimentation has to be done before one could consider ISTP a success. We hope that suitably tempered by experience, ISTP can grow into a candidate DVE communication standard <ref> [5] </ref>. Acknowledgments The design and implementation of Spline and ISTP is the result of a four-year effort by a large group of people. Richard Waters and David Anderson have been the principle architects of Spline and ISTP from their earliest inception.
Reference: [6] <author> Calvin J., </author> <title> et al (1993) "The SIMNET Virtual World Architecture", </title> <booktitle> Proc. IEEE Virtual Reality Annual International Symposium, </booktitle> <pages> 450-455, </pages> <address> (Seattle WA, </address> <month> Sept. </month> <year> 1993). </year>
Reference-contexts: operation is essential for a DVE transport layer to be immediately applicable to the currently existing infrastructure. 1.1 Other Approaches The DVE transport layers fielded in commercial applications to date fall into two basic categories: proprietary, central server (CS) systems and those adhering to the Distributed Interactive Simulation standard (DIS) <ref> [6, 13] </ref>. CS systems are widely used as the basis for MUDs, chat rooms, and multi-user games. DIS has been widely successful as the basis for military training systems. Figure 1 rates these two approaches from the perspective of the six goals presented above on a scale of A-E.
Reference: [7] <author> R. Lea, Y. Honda, K. Matsuda, & S. Matsuda, </author> <title> "Community Place: Architecture and Performance", </title> <booktitle> VRML '97 Symposium, </booktitle> <address> (Monterey CA, </address> <month> February </month> <year> 1997). </year>
Reference-contexts: This kind of hybrid approach has been suggested by a number of researchers, e.g., <ref> [7] </ref>. 2.2 Architecture of ISTP The architecture of ISTP is illustrated in Figure 4. The basic function of ISTP is to communicate objects in the shared world model underlying a DVE. It is expected that there will be many kinds of objects in this world model.
Reference: [8] <editor> M.R. Macedonia, et al, </editor> <title> "Exploiting Reality with Multicast Groups", </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 15(5) </volume> <pages> 38-45, </pages> <month> September </month> <year> 1995. </year>
Reference-contexts: Like DIS, ISTP achieves near real-time interaction by using peer-to-peer UDP messaging for most updates. ISTP achieves greater scalability than DIS by associating each locale with a separate multicast communication group. (This basic idea has been used in a number of systems such as <ref> [8] </ref>.) By deciding which locales (and thus multicast groups) to attend to, ISTP processes decide which object messages to receive without experiencing any overhead for the messages they wish to ignore.
Reference: [9] <author> R.C. Waters, </author> <title> Time Synchronization In Spline, </title> <type> technical report 96-09, </type> <address> MERL Cambridge MA, </address> <month> April </month> <year> 1996. </year>
Reference-contexts: To allow precise specification of event timing, ISTP uses compact absolute time stamps. As discussed in <ref> [9] </ref>, ISTP incorporates methods for adjusting the time values that are communicated between machines so that they are meaningful on each machine even when the clocks on the various machines are not synchronized.
Reference: [10] <author> Waters R.C. & Barrus J.W., </author> <title> "The Rise of Shared Virtual Environments," </title> <journal> IEEE Spectrum, </journal> <volume> 34(3) </volume> <pages> 20-25, </pages> <month> March </month> <year> 1997. </year>
Reference-contexts: Spline, which is described in separate documents [11, 12], makes it easy to build Distributed Virtual Environments (DVEs)|virtual worlds where multiple people interact with each other and computer simulations in a 3D visual and audio environment <ref> [10] </ref>. Using ISTP, Spline performs all the processing necessary to maintain a distributed, modifiable, and extendable model of a virtual world that is shared between the participants. It is important to realize that while ISTP and Spline have evolved together, they are completely separate.
Reference: [11] <editor> R.C. Waters, D.B. Anderson, J.W. Barrus, </editor> <address> D.C. Brogan, M.A. </address> <note> Casey, </note> <author> S.G. McKeown, T. Nitta, </author> <title> I.B. Sterns, & W.S. Yerazunis, "Diamond Park and Spline: A Social Virtual Reality System with 3D Animation, Spoken Interaction, and Runtime Modifiability," Presence: </title> <booktitle> Teleoperators and Virtual Environments, </booktitle> <volume> 6(4) </volume> <pages> 461-480, </pages> <month> August </month> <year> 1997. </year>
Reference-contexts: Parts II and III are best read together, with Part II used as a reference when the various messages are discussed in Part III. ISTP is used for communication by the Scalable Platform for Large Interactive Networked Environments (Spline). Spline, which is described in separate documents <ref> [11, 12] </ref>, makes it easy to build Distributed Virtual Environments (DVEs)|virtual worlds where multiple people interact with each other and computer simulations in a 3D visual and audio environment [10]. <p> Much more than than ISTP is MERL-TR-97-10 October, 1997 14 Interactive Sharing Transfer Protocol needed to make it easy to write DVEs. Using ISTP as a basis, a prototype implementation of a full DVE platform called the Scalable Platform for Large Interactive Network Environments (Spline) <ref> [11] </ref> has been implemented. Several applications are being constructed on top of Spline [11]. However, much more experimentation has to be done before one could consider ISTP a success. We hope that suitably tempered by experience, ISTP can grow into a candidate DVE communication standard [5]. <p> Using ISTP as a basis, a prototype implementation of a full DVE platform called the Scalable Platform for Large Interactive Network Environments (Spline) <ref> [11] </ref> has been implemented. Several applications are being constructed on top of Spline [11]. However, much more experimentation has to be done before one could consider ISTP a success. We hope that suitably tempered by experience, ISTP can grow into a candidate DVE communication standard [5].
Reference: [12] <author> Waters R.C., Anderson D.B., Greysukh A., Lambert W., Kozuka H., Perlman B., Phan V., Schwenke D., Shipman S., Suits E., and Yerazunis W., </author> <title> The ANSI C (Internal) Spline Version 3.0 Application Program Interface, </title> <type> MERL TR 97-11, </type> <month> October </month> <year> 1996. </year>
Reference-contexts: Parts II and III are best read together, with Part II used as a reference when the various messages are discussed in Part III. ISTP is used for communication by the Scalable Platform for Large Interactive Networked Environments (Spline). Spline, which is described in separate documents <ref> [11, 12] </ref>, makes it easy to build Distributed Virtual Environments (DVEs)|virtual worlds where multiple people interact with each other and computer simulations in a 3D visual and audio environment [10].

References-found: 12

