URL: ftp://ftp.cs.indiana.edu/pub/techreports/TR380.ps.Z
Refering-URL: http://www.cs.indiana.edu/trindex.html
Root-URL: 
Title: Derivation of a Verified Microprocessor An Exercise in Integrating Verification with Formal Derivation  
Author: Bhaskar Bose and Steven D. Johnson 
Date: may 1993  May 1993.  
Note: DDD-FM9001:  To appear in the proceedings of the 1993 IFIP Advanced Research Conference on Correct Hardware Design and Verification Methods (CHARME '93 Arles, France,  
Abstract: indiana university computer science department technical report no. 380 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Actel Corporation, </author> <title> Sunnyvale, CA. ACT Family Field Programmable Gate Array Databook, </title> <year> 1991. </year>
Reference-contexts: Technology dependent, highly optimized implementations of the arithmetic components were engineered and verified against their respective abstract specifications. The derived and arithmetic components were implemented in an ACTEL FPGA (field programmable gate array) <ref> [1] </ref>. The memory and register file were implemented using SRAM components. The result of this experiment was a derived FM9001. This work extends the experimentation on the interplay between derivation and verification that was reported in [15]. Previous work applied the DDD system to Hunt's FM8501 description [9].
Reference: [2] <author> S. B. Akers. </author> <title> Binary Decision Diagrams. </title> <journal> In IEEE Transactions on Computers, </journal> <volume> volume C-27, </volume> <pages> pages 509-516, </pages> <month> June </month> <year> 1978. </year>
Reference-contexts: First the derivation was upgraded in conjunction with Hunt's refinements to representation. Second, much more of the algebra was mechanized; in fact, the entire ACTEL gate-level hardware description was generated either by mechanical derivation or verified using boolean equivalence methods <ref> [2, 6] </ref>. Finally, the DDD-FM9001 was realized in hardware. 2 Experiences from the FM8501 Experiment In the FM8501 proof [9], Hunt established an equivalence relation between specifications of an abstract programmer's model, called soft, and an implementation, a hardware interpreter model, called big-machine. <p> The designs were then verified in COSMOS [7] using Boolean verification <ref> [2, 6] </ref> against their respective abstract specifications. Figure 5 shows what aspect of the design was verified and what was derived. The shaded area denotes the components that were verified.
Reference: [3] <author> Bhaskar Bose, Steven D. Johnson, and Shyamsundar Pullela. </author> <title> Integrating boolean verification with formal derivation. </title> <booktitle> In Proceedings of the IFIP Conference on Hardware Description Languages and their applications (CHDL), </booktitle> <year> 1993. </year>
Reference-contexts: Boolean Verification 1 : The verification of the arithmetic components in the DDD-FM9001 reduced to verifying a boolean term, constructed from the FM9001 abstract ALU specification, was equivalent to a hand designed multiplexor design tuned for the ACTEL FPGA architecture. Details of the verification are reported in 6 <ref> [3] </ref>. Algebraic techniques were used to construct a boolean term from the abstract ALU specification.
Reference: [4] <author> C. David Boyer and Steven D. Johnson. </author> <title> Using the digital design derivation system: Case study of a VLSI garbage collector. </title> <editor> In J. Darringer and F. Ramming, editors, </editor> <booktitle> Proceedings of the IFIP WG 10.2 Ninth International Symposium on Computer Hardware Description Languages (CHDL), </booktitle> <address> Amsterdam, 1989. </address> <publisher> Elsevier. </publisher>
Reference-contexts: A single temporary register and five new states were added to the design. System Synthesis t 3 : The next step involves a series of transformations which decompose the behavioral specification into a control abstraction and a structural component. Details of this transformation is reported in <ref> [4, 11, 14] </ref>. The transformations are completely automatic and require no user guidance.
Reference: [5] <author> Robert S. Boyer and J. Struther Moore. </author> <title> A Computational Logic Handbook. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1988. </year>
Reference-contexts: Hunt mechanically verified the FM9001 in the Nqthm theorem prover <ref> [5] </ref>. A set of transformations were applied to y Research reported herein was supported, in part, by NSF: The National Science Foundation, under grants numbered DCR 85-21497, MIP 87-07067 and MIP 89-21842, and by NASA: The National Aeronautics and Space Administration under grant number NGT-50861. <p> R * System 00 R fl fl nextstate R ? y logic synthesis the FM8501 gave us insight into the FM9001 derivation. 3 The FM9001 Microprocessor The FM9001 [10] is a 32-bit microprocessor representing the third generation processor description defined by Hunt and mechanically verified using the Nqthm theorem prover <ref> [5] </ref>. The proof establishes an equivalence relationship between four levels of specifications ranging from an abstract programmer's model interpreter to a netlist. The highest level of specification (Figure 3) is a collection of six recursive functions defining an instruction level interpreter of the FM9001.
Reference: [6] <author> R. Bryant. </author> <title> Graph-Based Algorithms for Boolean Function Manipulation. </title> <journal> In IEEE Transactions on Computers, </journal> <volume> volume C-35, </volume> <pages> pages 677-691, </pages> <month> August </month> <year> 1986. </year>
Reference-contexts: First the derivation was upgraded in conjunction with Hunt's refinements to representation. Second, much more of the algebra was mechanized; in fact, the entire ACTEL gate-level hardware description was generated either by mechanical derivation or verified using boolean equivalence methods <ref> [2, 6] </ref>. Finally, the DDD-FM9001 was realized in hardware. 2 Experiences from the FM8501 Experiment In the FM8501 proof [9], Hunt established an equivalence relation between specifications of an abstract programmer's model, called soft, and an implementation, a hardware interpreter model, called big-machine. <p> The designs were then verified in COSMOS [7] using Boolean verification <ref> [2, 6] </ref> against their respective abstract specifications. Figure 5 shows what aspect of the design was verified and what was derived. The shaded area denotes the components that were verified.
Reference: [7] <author> R. Bryant. COSMOS: </author> <title> A Compiled Simulator for MOS Circuits. </title> <booktitle> In Proceedings of the 24 th Design Automation Conference, </booktitle> <year> 1987. </year>
Reference-contexts: The designs were then verified in COSMOS <ref> [7] </ref> using Boolean verification [2, 6] against their respective abstract specifications. Figure 5 shows what aspect of the design was verified and what was derived. The shaded area denotes the components that were verified.
Reference: [8] <author> John A. Darringer. </author> <title> The application of program verification techniques to hardware verification. </title> <booktitle> In Proceedings of the 16 th Design Automation Conference, </booktitle> <month> June </month> <year> 1979. </year>
Reference-contexts: Details of the verification are reported in 6 [3]. Algebraic techniques were used to construct a boolean term from the abstract ALU specification. Symbolic evaluation, where base operators are extended to return symbolic values and symbols are introduced as input values in place of real data objects <ref> [8] </ref> , was applied to both the abstract ALU specification and the ACTEL multiplexor implementation.
Reference: [9] <author> Jr. Hunt, Warren A. FM8501: </author> <title> A Verified Microprocessor. </title> <type> PhD thesis, </type> <institution> The University of Texas at Austin, </institution> <year> 1985. </year> <note> Also published as Technical Report 47 (December, </note> <year> 1985). </year>
Reference-contexts: The memory and register file were implemented using SRAM components. The result of this experiment was a derived FM9001. This work extends the experimentation on the interplay between derivation and verification that was reported in [15]. Previous work applied the DDD system to Hunt's FM8501 description <ref> [9] </ref>. Results of this work exposed the need to take a broader view of formal reasoning in design. The DDD/FM8501 experiment illustrated how alternative modes of reasoning could be applied to a single design. <p> Second, much more of the algebra was mechanized; in fact, the entire ACTEL gate-level hardware description was generated either by mechanical derivation or verified using boolean equivalence methods [2, 6]. Finally, the DDD-FM9001 was realized in hardware. 2 Experiences from the FM8501 Experiment In the FM8501 proof <ref> [9] </ref>, Hunt established an equivalence relation between specifications of an abstract programmer's model, called soft, and an implementation, a hardware interpreter model, called big-machine. DDD was applied to both the abstract programmer's model, soft, and the hardware interpreter model, big-machine.
Reference: [10] <author> Warren A. Hunt. </author> <title> A formal HDL and its use in the FM9001 verification. In C.A.R. </title> <editor> Hoare and M.J.C. Gordon, editors, </editor> <title> Mechanized Reasoning in Hardware Design. </title> <publisher> Prentice-Hall, </publisher> <year> 1992. </year> <month> 11 </month>
Reference-contexts: As a continuation in our efforts to understand how derivation and verification are interrelated, we applied the DDD system [11, 12, 14], a transformation system which implements a basic design algebra of equivalence preserving transformations for circuit derivation, to Hunt's FM9001 specification <ref> [10] </ref>. Hunt mechanically verified the FM9001 in the Nqthm theorem prover [5]. <p> Select * System 00 fl fl fl fl fl fl fl mem regs alu dec nextstate t 6 6 1 (verify) Select R * System 00 R fl fl nextstate R ? y logic synthesis the FM8501 gave us insight into the FM9001 derivation. 3 The FM9001 Microprocessor The FM9001 <ref> [10] </ref> is a 32-bit microprocessor representing the third generation processor description defined by Hunt and mechanically verified using the Nqthm theorem prover [5]. The proof establishes an equivalence relationship between four levels of specifications ranging from an abstract programmer's model interpreter to a netlist.
Reference: [11] <author> S. D. Johnson and Bhaskar Bose. </author> <title> A system for mechanized digital design derivation. </title> <editor> In Subramanyam, editor, </editor> <booktitle> Proceedings of ACM International Workshop on Formal Methods in VLSI Design. </booktitle> <month> January </month> <year> 1991. </year>
Reference-contexts: Verification reflects a design perspective where a proof establishes that an implementation satisfies its specification. As a continuation in our efforts to understand how derivation and verification are interrelated, we applied the DDD system <ref> [11, 12, 14] </ref>, a transformation system which implements a basic design algebra of equivalence preserving transformations for circuit derivation, to Hunt's FM9001 specification [10]. Hunt mechanically verified the FM9001 in the Nqthm theorem prover [5]. <p> A single temporary register and five new states were added to the design. System Synthesis t 3 : The next step involves a series of transformations which decompose the behavioral specification into a control abstraction and a structural component. Details of this transformation is reported in <ref> [4, 11, 14] </ref>. The transformations are completely automatic and require no user guidance.
Reference: [12] <author> Steven D. Johnson. </author> <title> Synthesis of Digital Designs from Recursion Equations. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, </address> <year> 1984. </year>
Reference-contexts: Verification reflects a design perspective where a proof establishes that an implementation satisfies its specification. As a continuation in our efforts to understand how derivation and verification are interrelated, we applied the DDD system <ref> [11, 12, 14] </ref>, a transformation system which implements a basic design algebra of equivalence preserving transformations for circuit derivation, to Hunt's FM9001 specification [10]. Hunt mechanically verified the FM9001 in the Nqthm theorem prover [5].
Reference: [13] <author> Steven D. Johnson. </author> <title> Manipulating logical organization with system factorizations. </title> <editor> In M. Leeser and G. Brown, editors, </editor> <title> Hardware Specification, Verification and Synthesis: </title> <journal> Mathematical Aspects, </journal> <pages> pages 260-281. </pages> <booktitle> Proceedings of Mathematical Sciences Institute Workshop, </booktitle> <publisher> Cornell University, Springer-Verlag, </publisher> <month> July </month> <year> 1989. </year>
Reference-contexts: Operations were encapsulated in modules and complex components such as the memory, register file, ALU, incrementor, and decrementor were factored from the description <ref> [13] </ref>. Figure 2 diagrams this decomposition. The isolation of components into abstract modules provides a mechanism by which individual components can be verified.
Reference: [14] <author> Steven D. Johnson, Bhaskar Bose, and C. David Boyer. </author> <title> A tactical framework for digital design. </title> <editor> In G. Birtwistle and P.A. Subrahmanyam, editors, </editor> <booktitle> VLSI Specification, Verification and Synthesis, </booktitle> <pages> pages 349-383. </pages> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, </address> <year> 1988. </year>
Reference-contexts: Verification reflects a design perspective where a proof establishes that an implementation satisfies its specification. As a continuation in our efforts to understand how derivation and verification are interrelated, we applied the DDD system <ref> [11, 12, 14] </ref>, a transformation system which implements a basic design algebra of equivalence preserving transformations for circuit derivation, to Hunt's FM9001 specification [10]. Hunt mechanically verified the FM9001 in the Nqthm theorem prover [5]. <p> A single temporary register and five new states were added to the design. System Synthesis t 3 : The next step involves a series of transformations which decompose the behavioral specification into a control abstraction and a structural component. Details of this transformation is reported in <ref> [4, 11, 14] </ref>. The transformations are completely automatic and require no user guidance.
Reference: [15] <author> Steven D. Johnson, Robert M. Wehrmeister, and Bhaskar Bose. </author> <title> On the interplay of synthesis and verification: Experiments with the FM8501 processor description. </title> <editor> In Luc Claesen, editor, </editor> <booktitle> Applied Formal Methods For Correct VLSI Design, </booktitle> <pages> pages 385-404, </pages> <address> Amsterdam, Netherlands, 1989. IMEC, </address> <publisher> Elsevier. </publisher>
Reference-contexts: The memory and register file were implemented using SRAM components. The result of this experiment was a derived FM9001. This work extends the experimentation on the interplay between derivation and verification that was reported in <ref> [15] </ref>. Previous work applied the DDD system to Hunt's FM8501 description [9]. Results of this work exposed the need to take a broader view of formal reasoning in design. The DDD/FM8501 experiment illustrated how alternative modes of reasoning could be applied to a single design. <p> This was discussed in <ref> [15] </ref> but not mechanized at the time. The goal was to reduce the inherent parallelism in the original specification. In this phase, called serialization, a function call is replaced by a sequence of function calls, whose composition is equivalent to the original term.
Reference: [16] <author> Michael C. McFarland, Alice C. Parker, and Raul Camposano. </author> <title> Tutorial on high-level synthesis. </title> <booktitle> In 25th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 330-336, </pages> <year> 1988. </year>
Reference-contexts: If the conditional had been left within the function invocation, it would be implemented in the architecture. t 2 : In a process analogous to scheduling in high-level synthesis <ref> [16] </ref>, the DDD system was guided through a series of folding and unfolding transformations in order to achieve a desired scheduling of operations. This was discussed in [15] but not mechanized at the time. The goal was to reduce the inherent parallelism in the original specification.
Reference: [17] <author> Kamlesh Rath and Steven D. Johnson. </author> <title> Toward a basis for protocol specification and process decomposition. </title> <booktitle> In Proceedings of the IFIP Conference on Hardware Description Languages and their applications (CHDL), </booktitle> <year> 1993. </year> <month> 12 </month>
Reference-contexts: This difference isolates an aspect of the verification of the FM9001. They could not be derived since they did not exist in the original specification. We have developed a formalism for process decomposition to address this very issue <ref> [17] </ref>, however, at the time of this derivation exercise, the function was not integrated with DDD. At present, a new derivation is under way. In this derivation, the behavioral specification will be serialized such that the incrementor, decrementor and ALU operations will be implemented with a single arithmetic 10 component.
References-found: 17

