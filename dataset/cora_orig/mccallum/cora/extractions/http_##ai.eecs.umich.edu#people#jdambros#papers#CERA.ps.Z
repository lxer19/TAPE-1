URL: http://ai.eecs.umich.edu/people/jdambros/papers/CERA.ps.Z
Refering-URL: http://ai.eecs.umich.edu/people/jdambros/index.html
Root-URL: http://www.eecs.umich.edu
Title: HIERARCHICAL CONCURRENT ENGINEERING IN A MULTIAGENT FRAMEWORK  
Author: Joseph DAmbrosio, Timothy Darr, William 
Address: Ann Arbor, MI 48109  
Affiliation: Birmingham 2 Artificial Intelligence Lab EECS Department The University of Michigan  
Abstract: 1 This paper has been accepted for publication in the May 1996 issue of Concurrent Engineering: Research and Applications (CERA). 2 contact author: wpb@eecs.umich.edu, 313-936-1590, fax 313-763-1260 
Abstract-found: 1
Intro-found: 1
Reference: 10. <author> H. Park, et al., </author> <title> An Agent-Based Approach to Concurrent Cable Harness Design, </title> <booktitle> Artificial Intelligence for Engineering Design, Analysis, and Manufacturing, </booktitle> <volume> Vol. 8, </volume> <year> 1994, </year> <pages> pp. 45-61. </pages>
Reference-contexts: This approach is similar to agent-based systems, which will be discussed next. Several agent-based systems focus on the needs of cooperative problem solving among domain experts. PACT [1] is a testbed for building large-scale, distributed CE systems, where agents are grouped by discipline and communicate through facilitators [9]. First-Link <ref> [10] </ref> emphasizes collaboration among specialist and the development of hierarchical design representations. DesignWorld [11] is an automated engineering environment for the design and manufacturing of digital circuits, which is built upon the concept of facilitators.
Reference: 11. <editor> P.N. Huyn, M.R. Genesereth, and R. Letsinger, </editor> <booktitle> Automated Concurrent Engineering in DesignWorld, IEEE Computer, </booktitle> <month> January </month> <year> 1993, </year> <pages> pp. 74-76. 2 6 </pages>
Reference-contexts: PACT [1] is a testbed for building large-scale, distributed CE systems, where agents are grouped by discipline and communicate through facilitators [9]. First-Link [10] emphasizes collaboration among specialist and the development of hierarchical design representations. DesignWorld <ref> [11] </ref> is an automated engineering environment for the design and manufacturing of digital circuits, which is built upon the concept of facilitators.
Reference: 12. <author> K.J. Werkman, </author> <title> Multiple Agent Cooperative Design Evaluation Using Negotiation, </title> <booktitle> Artificial Intelligence in Design 92, </booktitle> <publisher> Kluwer Academic Publishers, </publisher> <year> 1992. </year>
Reference-contexts: The focus of the above systems is on knowledge representation and communication for a peer-to-peer problem solving network; there is no concept of hierarchical control or preferences in these systems. Some agent-based systems have attempted to address the need for hierarchical control and preferences. DFI <ref> [12] </ref> is a CE tool for steel-connection design. A system designer hierarchically controls a network of agents, each of which is a domain expert with its own preferences.
Reference: 13. <author> T.P. Darr and W.P. </author> <title> Birmingham, Automated Design for Concurrent Engineering, </title> <journal> IEEE Expert, </journal> <volume> Vol. 9 No. 5, </volume> <year> 1994, </year> <pages> pp. 35-42. </pages>
Reference-contexts: The preferences of the system designer are limited to specifying a single attribute to optimize, while an ad hoc scheme for representing agent preferences allows agents to negotiate over values for the remaining attributes. In ACDS <ref> [13] </ref>, [14], a system agent distributes its preferences to catalog agents, who uses these preferences to select components. In this system, there is no ability for 8 catalog agents to apply their own expertise (preferences). AGENTS [15] is a objectoriented Prolog-based language for cooperating expert systems. <p> In this section, we provide details of these two aspects of decision making. A. Modeling Feasibility We model the task of determining the feasibility of a design as solving a distributed, dynamic, interval constraintsatisfaction problem (DDICSP) <ref> [13] </ref>. A constraint satisfaction problem (CSP) is characterized by a set of variables to assign and a set of constraints that restrict the possible assignments to the variables. <p> As will be seen, the agent-preference model plays a key role in applying local expertise and achieving overall coordination. V. Agent Coordination in a Multilevel Environment ( A C M E ) We now describe how an existing CE tool, ACDS <ref> [13] </ref>, [14], can be extended to meet the needs of hierarchical CE. We call the resulting tool ACME, which provides support for both hierarchical and peer-to-peer problem solving. When subcontracting a task in the ACME environment, an agent specifies both the constraints and preferences for the subtask.
Reference: 14. <author> T.P. Darr and W.P. </author> <title> Birmingham, An AttributeSpace Representation and Algorithm for Concurrent Engineering, </title> <booktitle> Artificial Intelligence for Engineering Design, Analysis, and Manufacturing, </booktitle> <publisher> in press, </publisher> <year> 1996. </year>
Reference-contexts: The preferences of the system designer are limited to specifying a single attribute to optimize, while an ad hoc scheme for representing agent preferences allows agents to negotiate over values for the remaining attributes. In ACDS [13], <ref> [14] </ref>, a system agent distributes its preferences to catalog agents, who uses these preferences to select components. In this system, there is no ability for 8 catalog agents to apply their own expertise (preferences). AGENTS [15] is a objectoriented Prolog-based language for cooperating expert systems. <p> As will be seen, the agent-preference model plays a key role in applying local expertise and achieving overall coordination. V. Agent Coordination in a Multilevel Environment ( A C M E ) We now describe how an existing CE tool, ACDS [13], <ref> [14] </ref>, can be extended to meet the needs of hierarchical CE. We call the resulting tool ACME, which provides support for both hierarchical and peer-to-peer problem solving. When subcontracting a task in the ACME environment, an agent specifies both the constraints and preferences for the subtask.
Reference: 15. <author> G.Q. Huang and J.A. Brandon, </author> <title> Agents for Cooperating Expert Systems in Concurrent Engineering Design, </title> <booktitle> Artificial Intelligence for Engineering Design, Analysis, and Manufacturing, </booktitle> <volume> Vol. 7, No. 3, </volume> <year> 1993, </year> <pages> pp. 145-158. </pages>
Reference-contexts: In ACDS [13], [14], a system agent distributes its preferences to catalog agents, who uses these preferences to select components. In this system, there is no ability for 8 catalog agents to apply their own expertise (preferences). AGENTS <ref> [15] </ref> is a objectoriented Prolog-based language for cooperating expert systems. To implement concurrent engineering, a system designer interacts with a directorate design agent, who controls two agent committees, comprised of design agents and analysis agents respectively. There is no concept of preferences in AGENTS.
Reference: 16. <author> R.L. Keeney, and H. Raiffa, </author> <title> Decisions with Multiple Objectives: Preferences and Value Tradeoffs, </title> <publisher> Wiley and Sons, </publisher> <address> New York, </address> <year> 1976. </year>
Reference-contexts: I = -i 1 , ..., i y -; A set of design attributes that directly contribute to evaluating the optimality of a design. A = -a 1 , a 2 , ..., a k -; A multi-attribute value function v that captures designer preferences <ref> [16] </ref>. v w v a k k k = ( ) where w k is a relative attribute weight and v k (a k ) is an attribute value function. (see Section IV.B for a definition of value function). A set of constraints that define feasibility and interoperability. <p> Keeney and Raiffa <ref> [16] </ref> describe the process for determining the attribute value functions and tradeoff weights. The amount of quantitative analysis required to construct the function can be reduced by using an imprecise value function.
Reference: 17. <author> D.L. Thurston, </author> <title> A Formal Method for Subjective Design Evaluation with Multiple Attributes, </title> <booktitle> Research in Engineering Design, </booktitle> <volume> Vol. 3, </volume> <year> 1991, </year> <pages> pp. 105-122. </pages>
Reference-contexts: Modeling this sort of preference information is the topic of the next section. B. Modeling Preferences Many design problems are characterized by multiple conflicting attributes, and formal models of preferences <ref> [17] </ref>, [18] have shown promise in resolving conflicting design objectives. A formal model, e.g., a multi-attribute value function, in contrast to ad hoc techniques, provides a well-defined basis for predicting the quality of the results achieved.
Reference: 18. <editor> J.G. DAmbrosio and W.P. Birmingham, </editor> <booktitle> Preference-Directed Design, Artificial Intelligence for Engineering Design, Analysis, and Manufacturing (AI EDAM), </booktitle> <volume> Vol. 9, </volume> <year> 1995, </year> <pages> pp. 219-230. </pages>
Reference-contexts: Modeling this sort of preference information is the topic of the next section. B. Modeling Preferences Many design problems are characterized by multiple conflicting attributes, and formal models of preferences [17], <ref> [18] </ref> have shown promise in resolving conflicting design objectives. A formal model, e.g., a multi-attribute value function, in contrast to ad hoc techniques, provides a well-defined basis for predicting the quality of the results achieved. <p> The nondominated set contains only those alternatives for which no other preferred alternative exists based on specified preferences. The nondominated set of alternatives is guaranteed to contain the optimal one <ref> [18] </ref>. In the next section, we describe how agents interact to perform hierarchical CE. As will be seen, the agent-preference model plays a key role in applying local expertise and achieving overall coordination. V.
Reference: 19. <author> C.C. White, et al., </author> <title> A Model of Multi-Attribute Decision Making and TradeOff Weight Determination Under Uncertainty, </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> Vol. SMC-14, No. 2, </volume> <month> March/April </month> <year> 1984, </year> <pages> pp. 223-229. </pages>
Reference-contexts: Keeney and Raiffa [16] describe the process for determining the attribute value functions and tradeoff weights. The amount of quantitative analysis required to construct the function can be reduced by using an imprecise value function. Imprecisely Specified Multi-Attribute Utility Theory (ISMAUT) <ref> [19] </ref> creates a partial order based on preference relationships among a subset of alternatives.
Reference: 20. <author> X. Hu, J.G. DAmbrosio, B.T. Murray, and D. Tang, </author> <title> Codesign of Architectures for Automotive Powertrain Modules, </title> <booktitle> IEEE Micro, </booktitle> <month> August </month> <year> 1994, </year> <pages> pp. 17-25. </pages>
Reference-contexts: In this application, the parts to be selected include both hardware and software components. The example presented here is a simplified version of the problem described by Hu et al. <ref> [20] </ref>. A system agent wishes to create the embedded controller shown in Fig. 4. The controller is comprised of both hardware and software, and both must be considered simultaneously.
Reference: 21. <author> J.G. DAmbrosio and X. Hu, </author> <title> Configuration-Level Hardware/Software Partitioning for Real-Time Embedded Systems, </title> <booktitle> Presented at The Third International Workshop on Hardware-Software Codesign, </booktitle> <month> September </month> <year> 1994. </year> <pages> 2 7 </pages>
Reference-contexts: The function specification for this problem includes three software functions to be supported, and requires that a computer board with enough RAM and CPU throughput be configured. Two attributes, cost and feasibility factor, characterize the system. Cost is a summation of hardware component costs, and feasibility factor <ref> [21] </ref> is a measure of the systems ability to guarantee that all software modules complete execution before their respective deadlines. 1 7 (a) System hardware Filter Read Sensor Fuel Calc. Sensor Actuator Sensor (b) System software Fig. 4. Embedded controller example.
Reference: 22. <author> J.G. DAmbrosio and W.P. </author> <title> Birmingham, Hierarchical Concurrent Engineering: Supporting Hierarchical Decomposition and Peer-to-Peer Problem Solving, </title> <institution> University of Michigan Technical Report CSE-TR-259-95, </institution> <month> September </month> <year> 1995. </year>
Reference-contexts: We are attempting to reduce these costs by isolating the impact of a change in a design variable assignment to Dv. Initial test results related to isolating the impact of variable changes on value have been encouraging <ref> [22] </ref>. Isolating this impact may require propagation of intervals through nonmonotonic functions if a wide class of problems is to be supported, and techniques based on the work Faltings [23] and Hyvnen [24] may prove useful.
Reference: 23. <author> B. Faltings, </author> <title> Arc-Consistency for Continuous Variables, </title> <journal> Artificial Intelligence, </journal> <volume> Vol. 65, </volume> <year> 1994, </year> <pages> pp. 363-379. </pages>
Reference-contexts: Initial test results related to isolating the impact of variable changes on value have been encouraging [22]. Isolating this impact may require propagation of intervals through nonmonotonic functions if a wide class of problems is to be supported, and techniques based on the work Faltings <ref> [23] </ref> and Hyvnen [24] may prove useful. A firm definition of the optimal solution for a hierarchical organization of agents must still be identified, as well as conditions when such a solution can be found.
Reference: 24. <author> E. Hyvnen, </author> <title> Constraint Reasoning Based on Interval Arithmetic: the Tolerance Propagation Approach, </title> <journal> Artificial Intelligence, </journal> <volume> Vol. 58, </volume> <year> 1992, </year> <pages> pp. 71-112. </pages>
Reference-contexts: Initial test results related to isolating the impact of variable changes on value have been encouraging [22]. Isolating this impact may require propagation of intervals through nonmonotonic functions if a wide class of problems is to be supported, and techniques based on the work Faltings [23] and Hyvnen <ref> [24] </ref> may prove useful. A firm definition of the optimal solution for a hierarchical organization of agents must still be identified, as well as conditions when such a solution can be found. This may involve research from the area of mathematical programming, group decision making, and negotiation. 2 5
References-found: 15

