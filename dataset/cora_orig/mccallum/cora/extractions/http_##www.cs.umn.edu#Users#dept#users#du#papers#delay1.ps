URL: http://www.cs.umn.edu/Users/dept/users/du/papers/delay1.ps
Refering-URL: http://www.cs.umn.edu/Users/dept/users/du/papers/
Root-URL: http://www.cs.umn.edu
Title: Achieving the Shortest Clock Period by Inserting the Minimum Amount of Delay  
Author: Shangzhi Sun David H. C. Du and Guoliang Xue 
Address: Vermont, USA.  
Affiliation: 1 Computer Science Department, University of Minnesota, USA. 2 Department of Computer Science and Electrical Engineering The University of  
Abstract: The performance of a circuit depends on its clock period. The shorter a valid clock period is, the better the performance is. The clock period is tightly related to the difference between the longest propagation delay and the shortest propagation delay from primary inputs to primary outputs. The objective of this paper is to minimize the amount of delay inserted while achieving the shortest clock period. Inserting delay buffers is done after traditional delay optimization. We propose an optimal algorithm based on a novel linear programming formulation. Our algorithm can also be used to solve similar delay buffer problems. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> S.W. Cheng, H.C. Chen, David H.C. Du and A. Lim, </author> <title> The Role of Long and Short Paths in Circuit Performance Optimization, </title> <booktitle> 29th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 543-548, </pages> <year> 1992. </year>
Reference-contexts: It is possible to obtain a shorter clock period by considering both the topological longest path and the topological shortest path delay. More accurate clock periods were obtained in <ref> [1] </ref> and [3] by considering path sensitization. A feasible clocking setting problem which requires that all paths have a delay that lies between an upper bound and a lower bound was studied in [4] by inserting delay buffers.
Reference: 2. <author> X. Hu, R.G. Harber, S.C. Bass, Geo. </author> <title> Minimizing the number of Delay Buffers in the Synchronization of Pipelined Systems. </title> <booktitle> 28th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 758-763, </pages> <year> 1991. </year>
Reference-contexts: An optimal polynomial algorithm for inserting delay buffers to achieve a feasible clocking in fanout free circuit was proposed in [4]. However it was pointed in [4] that it may be very hard to deal with fanout circuits. A very good algorithm for the fanout circuits was proposed in <ref> [2] </ref>. Unfortunately an example given in [5] showed that this algorithm may not be optimal. So far there has been no optimal polynomial time algorithm to insert the minimum amount of delay in a fanout circuit to obtain a feasible clock setting or the shortest clock period. <p> Different orderings may require different amount of delay. For each node with fanout edges, we need to construct a binary tree. Recently an example given by [5] showed that the ordering proposed by <ref> [2] </ref> may not be optimal. In this paper, we formulate this problem as a linear programming and use its optimal solution to decide the processor ordering and the amount of delay inserted to each edge. We introduce the following more notations.
Reference: 3. <author> S.Z. Sun, David H.C. Du, Y.C. Hsu and H.C. Chen. </author> <title> On valid Clocking for Combinational Circuits. </title> <booktitle> Will appear in the proceedings of International Conference on Computer Design, </booktitle> <pages> 94. </pages>
Reference-contexts: It is possible to obtain a shorter clock period by considering both the topological longest path and the topological shortest path delay. More accurate clock periods were obtained in [1] and <ref> [3] </ref> by considering path sensitization. A feasible clocking setting problem which requires that all paths have a delay that lies between an upper bound and a lower bound was studied in [4] by inserting delay buffers.
Reference: 4. <author> Narendra V. Shenoy, R. K. Brayton, A. L. Sangiovanni-Vincentelli, </author> <title> Minimum Padding to Satisfy Short Path Constraints. </title> <booktitle> In the proceedings of the International Conference on Computer-Aided Design, </booktitle> <pages> pages 156-161, </pages> <year> 1993 </year>
Reference-contexts: More accurate clock periods were obtained in [1] and [3] by considering path sensitization. A feasible clocking setting problem which requires that all paths have a delay that lies between an upper bound and a lower bound was studied in <ref> [4] </ref> by inserting delay buffers. <p> In order to reduce system hardware cost and complexity, it is desirable to insert the minimum amount of delay to achieve this. An optimal polynomial algorithm for inserting delay buffers to achieve a feasible clocking in fanout free circuit was proposed in <ref> [4] </ref>. However it was pointed in [4] that it may be very hard to deal with fanout circuits. A very good algorithm for the fanout circuits was proposed in [2]. Unfortunately an example given in [5] showed that this algorithm may not be optimal. <p> In order to reduce system hardware cost and complexity, it is desirable to insert the minimum amount of delay to achieve this. An optimal polynomial algorithm for inserting delay buffers to achieve a feasible clocking in fanout free circuit was proposed in <ref> [4] </ref>. However it was pointed in [4] that it may be very hard to deal with fanout circuits. A very good algorithm for the fanout circuits was proposed in [2]. Unfortunately an example given in [5] showed that this algorithm may not be optimal.
Reference: 5. <author> S.Z. Sun, David H. C. Du, G.L. Xue. </author> <title> Efficient Algorithms for Delay Buffers Minimization Problem. </title> <booktitle> Submitted to International Conference on Computer-Aided Design, </booktitle> <pages> 94. </pages>
Reference-contexts: However it was pointed in [4] that it may be very hard to deal with fanout circuits. A very good algorithm for the fanout circuits was proposed in [2]. Unfortunately an example given in <ref> [5] </ref> showed that this algorithm may not be optimal. So far there has been no optimal polynomial time algorithm to insert the minimum amount of delay in a fanout circuit to obtain a feasible clock setting or the shortest clock period. <p> The total different number of orderings of i 1 , i 2 . , i m is m!. Different orderings may require different amount of delay. For each node with fanout edges, we need to construct a binary tree. Recently an example given by <ref> [5] </ref> showed that the ordering proposed by [2] may not be optimal. In this paper, we formulate this problem as a linear programming and use its optimal solution to decide the processor ordering and the amount of delay inserted to each edge. We introduce the following more notations.
References-found: 5

