URL: http://www.eecs.umich.edu/mistic/papers/mhasan/Paper2.ps
Refering-URL: http://www.eecs.umich.edu/mistic/publications.html
Root-URL: http://www.eecs.umich.edu
Title: MISTIC 1.1: A PROCESS COMPILER FOR MICROMACHINED DEVICES  
Author: M. Hasanuzzaman and C. H. Mastrangelo 
Date: SUMMARY 1  
Address: Ann Arbor, MI 48109-2122, USA  
Affiliation: Center for Integrated Sensors and Circuits, Department of Electrical Engineering and Computer Science University of Michigan,  
Abstract: This paper describes a systematic method for the automatic generation of fabrication processes of thin film micromachined devices. The method uses a par ogy to determine the order between its various components in the form of a directed acyclic graph. The sequence in which these components are fabricated is determined from the poset linear extensions, and the component sequence is expanded into a corresponding process flows. The synthesis procedure has been implemented in a computer program MISTIC which calculates specific process parameters using an internal database of process recipes, etchants, and materials. Currently MISTIC includes process modules for deposition, lithography, etching, ion implantation, and coupled simultaneous diffusion, and reactive growth. Several common micromachined devices have been compiled and compared with the reported processes. tial order set (poset) representation of device topol
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. D. Senturia, R. M. Harris, and et. al, </author> <title> "A computer-aided design system for microelectrome chanical systems (MEMCAD)," </title> <journal> IEEE J. Microelec tromechanical Syst., </journal> <volume> vol. 1, </volume> <pages> pp. 3-13, </pages> <year> 1992. </year>
Reference-contexts: INTRODUCTION While process simulators are essential for rapid device development, these tools are aimed at design verification and do not provide matching to desired device specifications. Current state-of-the-art simulation tools such as SUPREM and MEMCAD <ref> [1] </ref>, take a de scription of the fabrication process flow as inputs and generate accurate representations of devices. Typically, a satisfactory design is arrived after many iterations and weeks of intensive simulation. This represents an increasing burden on designers as process complexity grows.
Reference: [2] <author> B. Gogoi, R. Yuen, and C. H. Mastrangelo, </author> <title> "The automatic synthesis of planar fabrication process flows for surface micromachined devices," </title> <booktitle> in MEMS 94, International Conference on Microelectrome-chanical Systems, </booktitle> <pages> pp. 153-157, </pages> <year> 1994. </year>
Reference-contexts: Each intermediate cross section can be considered as a point in a state space <ref> [2] </ref>, where each operator OE i represents a vector that connects subsequent states. In this state-space context, the synthesis problem consists of finding a finite path that connects the initial x o and final x n states. <p> The flow F consist of the sequence F = [OE o ; OE 1 ; :::; OE n ] (3) operating on x o . In this notation, brackets denote sequences and braces denote sets. It can be shown <ref> [2] </ref> that there is a very large num ber of process flows for a given device, and it is in general factorial in the number of layers. The large path number leads in general to multiple solutions. <p> Figure 2 shows a few linear extensions for the graph of Figure 1. This proce 6 9 2 3 4 5 780 1 6 9 2 3 45 780 1 dure is known as topological sorting <ref> [2] </ref>. The existance of F is then assured by the existance of a linear extension of the device graph. A number of useful theorems can be proven from graph theory [2]. For the sake of brevity, we ommit the proofs here. <p> 9 2 3 4 5 780 1 6 9 2 3 45 780 1 dure is known as topological sorting <ref> [2] </ref>. The existance of F is then assured by the existance of a linear extension of the device graph. A number of useful theorems can be proven from graph theory [2]. For the sake of brevity, we ommit the proofs here. Theorem 1 (Fundamental) Let d be a device of c i components with order O represented by an acyclic directed graph. <p> Page 2 PROCESS FLOW CONSTRUCTION The first step in the construction of flow F consists of finding linear extensions of the condensed device graph using a sequential algorithm due to Steiner <ref> [2] </ref>. The layer sequences [l 1 ; l 2 ; :::; l N ] are next expanded into flows using a selective operator set (l i ).
Reference: [3] <author> R. A. Brualdy and H. J. Ryser, </author> <title> Combinatorial Ma trix Theory. </title> <address> New York: </address> <publisher> Cambridge Univ. Press, </publisher> <year> 1991. </year>
Reference-contexts: In general, the device graph has no loops therefore is acyclic. Acyclic directed graphs are representations of partial ordered sets or posets. The poset is compactly stored in the digraph adjacency matrix A (d). Matrix A is a square, Boolean (0,1)-matrix <ref> [3, 4, 5] </ref> with a i;j = 1 iff c i O c j and zero elsewhere. The component with zero column is the root, and all components with zero rows are receivers. The binary order specified in A is transitive. The transitive closure matrix T specify all transitive relationships.
Reference: [4] <author> K. H. Kim, </author> <title> Boolean Matrix Theory and Applica tions. </title> <address> New York: </address> <publisher> M. Dekker, </publisher> <year> 1982. </year>
Reference-contexts: In general, the device graph has no loops therefore is acyclic. Acyclic directed graphs are representations of partial ordered sets or posets. The poset is compactly stored in the digraph adjacency matrix A (d). Matrix A is a square, Boolean (0,1)-matrix <ref> [3, 4, 5] </ref> with a i;j = 1 iff c i O c j and zero elsewhere. The component with zero column is the root, and all components with zero rows are receivers. The binary order specified in A is transitive. The transitive closure matrix T specify all transitive relationships.
Reference: [5] <author> R. A. Brualdy and H. J. Ryser, </author> <title> A Survey of Finite Mathematics. </title> <address> New York: </address> <publisher> Cambridge Univ. Press, </publisher> <year> 1991. </year>
Reference-contexts: In general, the device graph has no loops therefore is acyclic. Acyclic directed graphs are representations of partial ordered sets or posets. The poset is compactly stored in the digraph adjacency matrix A (d). Matrix A is a square, Boolean (0,1)-matrix <ref> [3, 4, 5] </ref> with a i;j = 1 iff c i O c j and zero elsewhere. The component with zero column is the root, and all components with zero rows are receivers. The binary order specified in A is transitive. The transitive closure matrix T specify all transitive relationships.
Reference: [6] <author> N. Alon, J. H. Spencer, and P. Erdos, </author> <title> The Proba bilistic Method. </title> <address> New York: </address> <publisher> Wiley, </publisher> <year> 1992. </year> <pages> Page 4 </pages>
Reference-contexts: Elements r i;j = 1 when c i can occupy position j and zero elsewhere. It may be shown that the quantity n (D) per (R) i=1 known as Bergman's bound <ref> [6] </ref> for the permanent, is a bound for n (D), where b i is the number of ones in row i of R. In practice, if n (D) &gt; 10 4 , further simplifications are necessary to find D in a reasonable time.
References-found: 6

