URL: http://www.cs.unc.edu/~anderson/papers/podc93.ps.Z
Refering-URL: http://www.cs.unc.edu/~anderson/papers.html
Root-URL: http://www.cs.unc.edu
Title: "Adaptive Backoff Synchronization Techniques", Proceedings of the "A Fine-Grained Solution to the Mutual Exclusion Problem",
Author: A. Agarwal and M. Cherian, J. Anderson, [] T. Anderson, [] K. Chandy and J. Misra, [] E. Dijkstra, J. Goodman, M. Vernon, and P. Woest, G. Graunke and S. Thakkar, C. Kruskal, L. Rudolph, M. Snir, [] J. Mellor-Crummey and M. Scott, [] G. Peterson and M. Fischer, G. Peterson, [] P. Yew, N. Tzeng, and D. Lawrie, 
Date: February, 1990.  4, October, 1988,  1, February, 1987, pp. 1-11.  1, February, 1991, pp. 21-65.  
Note: References [1]  16th International Symposium on Computer Architecture, May. 1989, pp. 396-406. [2]  IEEE Transactions on Parallel and Distributed Systems, Vol. 1, No. 1, January, 1990, pp. 6-16. [4] BBN Advanced Computers, Inside the TC2000 Computer,  the ACM Vol. 8, No. 9, 1965, pp. 569. [7]  the Third International Conference on Architectural Support for Programming Languages and Operating Systems, 1989, pp. 64-75. [8]  IEEE Computer, Vol. 23, June, 1990, pp. 60-69. [9] J. Kessels, "Arbitration Without Common Modifiable Variables", Acta Informatica, Vol. 17, 1982, pp. 135-141. [10]  ACM Transactions on Programming Languages and Systems, Vol. 10, No.  pp. 579-601. [11] L. Lamport,  ACM Transactions on Computer Systems, Vol. 5, No.  ACM Transactions on Computer Systems, Vol. 9, No.  Proceedings of the 9th ACM Symposium on Theory of Computing, May, 1977, pp. 91-97. [14]  Information Processing Letters, Vol. 12, No. 3, June, 1981, pp. 115-116. [15] E. Styer, "Improving Fast Mutual Exclusion", Proceedings of the Eleventh Annual ACM Symposium on Principles of Distributed Computing 1992, pp.  IEEE Transactions on Computers, Vol. C-36, No. 4, April, 1987, pp. 388-395.  
Abstract: due to the fact that each two-process entry and exit sec-tion of Peterson's algorithm requires fewer remote operations outside of busy-waiting loops than does ours. This gives rise to the following open question: how many remote operations outside of busy-waiting loops are required in two-process read/write algorithms based on local spinning? We end the paper with a few observations concerning the time complexity of concurrent algorithms. A natural approach to measuring the time complexity of such an algorithm would be to simply count the number of operations. However, a straightforward application of such an approach does not provide any insight into the behavior of mutual exclusion algorithms under heavy contention. In particular, in any algorithm in which processes busy-wait, the number of operations needed for one process to get to its critical section is unbounded. In order to serve as a measure of time complexity, a measure should be both intuitive and easy to compute. In sequential programming, the usual measure of time complexity, which is obtained by simply counting operations, satisfies these criteria. By contrast, there has been much disagreement on how time complexity should be measured in concurrent programs, and a complexity measure satisfying these criteria has yet to be adopted. We believe that an appropriate time complexity measure for concurrent algorithms is one based on the number of remote memory references. As seen in this paper, such a measure can be used to make meaningful distinctions concerning the performance of concurrent programs. Acknowledgement: We would like to thank Howard Gob-ioff for helping with the performance studies given in Section 5. We would also like to acknowledge Argonne National Laboratories for providing us with access to the machines used in these studies. We are particularly grateful to Terry Gaaster-land at Argonne for her help. We would also like to thank Nir Shavit and the program committee for their comments on an earlier draft of this paper. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Agarwal and M. Cherian, </author> <title> "Adaptive Backoff Synchronization Techniques", </title> <booktitle> Proceedings of the 16th International Symposium on Computer Architecture, </booktitle> <month> May. </month> <year> 1989, </year> <pages> pp. 396-406. </pages>
Reference: [2] <author> J. Anderson, </author> <title> "A Fine-Grained Solution to the Mutual Exclusion Problem", </title> <note> to appear in Acta Infor-matica. </note>
Reference: [3] <author> T. Anderson, </author> <title> "The Performance of Spin Lock Alternatives for Shared-Memory Multiprocessors", </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> Vol. 1, No. 1, </volume> <month> January, </month> <year> 1990, </year> <pages> pp. 6-16. </pages>
Reference: [4] <institution> BBN Advanced Computers, Inside the TC2000 Computer, </institution> <month> February, </month> <year> 1990. </year>
Reference: [5] <author> K. Chandy and J. Misra, </author> <title> Parallel Program Design: </title>
References-found: 5

