URL: http://www.isr.umd.edu/Labs/CACSE/FSQP/adif_man.ps
Refering-URL: http://www.isr.umd.edu/Labs/CACSE/FSQP/fsqp.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: User's Guide for ADIFFSQP Version  
Author: Mingyan D. Liu and Andre L.Tits 
Address: College Park, MD 20742  
Affiliation: Institute for Systems Research University of Maryland,  
Date: Released March, 1997  
Pubnum: 0.9 1  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> J.L.Zhou &amp; A.L.Tits, </author> <title> User's Guide for FSQP Version3.0c: A FORTRAN Code for Solving Constrained Nonlinear (Minimax) Optimization Problems, Generating Iterates Satisfying All Inequality and Linear Constraints, </title> <institution> Institute for Systems Research, University of Maryland, College Park, </institution> <address> MD 20742m 1992. </address>
Reference-contexts: 1 Introduction ADIFFSQP is a utility program that allows the user of the FFSQP <ref> [1] </ref> constrained nonlinear optimization routines to invoke the computational differentiation (or automatic differentiation: AD) preprocessor ADIFOR2.0 [2] conveniently. When solving optimization problems, FFSQP requires the evaluation of various objectives and constraints, and of their derivatives. <p> procedures of FFSQP, ADIFOR and ADIFFSQP, it is necessary to define some terms which will be frequently mentioned in the following context. independent variable: By independent variables we mean the components of x, the third argument in the argument list of the objective and constraint evaluation subroutines called by FFSQP <ref> [1] </ref>. dependent variable: The fourth argument, e.g., gj or fj, in the argument list of the objective and constraint evaluation subroutines called by FFSQP [1]. function evaluation subroutine: A subroutine evaluating the function whose derivative is sought. Sometimes, more than one subroutine may be needed to evaluate a single function. <p> By independent variables we mean the components of x, the third argument in the argument list of the objective and constraint evaluation subroutines called by FFSQP <ref> [1] </ref>. dependent variable: The fourth argument, e.g., gj or fj, in the argument list of the objective and constraint evaluation subroutines called by FFSQP [1]. function evaluation subroutine: A subroutine evaluating the function whose derivative is sought. Sometimes, more than one subroutine may be needed to evaluate a single function. <p> all the subroutines whose arguments include independent or dependent variables, or whose common blocks include independent or dependent variables, except possibly the objective and constraint derivative evaluation subroutines. 2. the primary input file contains a call to FFSQP and also includes a parameter statement assigning a constant value to nparam <ref> [1] </ref>, the number of independent variables. The primary input file must also include top-level function evaluation subroutines. 3. if present, the user provided top-level derivative evaluation subroutines appear in the primary input file 2 . ADIFFSQP proceeds as follows: 2 These subroutines will be discarded by ADIFFSQP.
Reference: [2] <author> Christian Bischof, Alan Carle, Peyvand Khademi, Andrew Mauer, and Paul Hov-land, </author> <note> ADIFOR2.0 User's Guide, Mathematics and Computer Science Division Technical Memorandum No.192 and Center for Research on Parallel Computation Technical Report CRPC-95516-s, </note> <month> August </month> <year> 1995. </year>
Reference-contexts: 1 Introduction ADIFFSQP is a utility program that allows the user of the FFSQP [1] constrained nonlinear optimization routines to invoke the computational differentiation (or automatic differentiation: AD) preprocessor ADIFOR2.0 <ref> [2] </ref> conveniently. When solving optimization problems, FFSQP requires the evaluation of various objectives and constraints, and of their derivatives. The user may either provide his/her own derivative evaluation subroutines or ask FFSQP to use its intrinsic finite differencing option to evaluate the derivatives. Both alternatives have drawbacks. <p> The structure of ADIFFSQP is determined by both ADIFOR and FFSQP. We will discuss how they work in these two subsections. 2.1 ADIFOR 2.0 of ADIFOR. ADIntrinsic and SparsLinC are two libraries that accompany the ADIFOR package. More detailed descriptions can also be found in <ref> [2] </ref>. To summarize, a user working with ADIFOR2.0 generally needs to take the following steps: (1) Provide a function evaluation subroutine (set). <p> The ADIFOR2.0 software can be retrieved by visiting: http://www.mcs.anl.gov/adifor, or http://www.cs.rice.edu/~adifor. These pages describe how to request access to ADIFOR2.0 and how to download the software. The details on how to install ADIFOR2.0 can be found in <ref> [2] </ref>. This includes unpacking the files: gunzip adifor2.0.tar.gz tar xf adifor2.0.tar gunzip adifor2.0.lib.tar.gz tar xf adifor2.0.lib.tar User's Guide for ADIFFSQP 8 ADIFOR2.0 can run on a Sparc, an IBM RS 6000 or an SGI workstation and it provides the necessary libraries for each of these machines.
Reference: [3] <author> Andreas Griewank, </author> <title> On Automatic Differentiation, </title> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, Argonne, </institution> <address> IL 60493, U.S.A. </address>
Reference-contexts: Automatic differentiation is as accurate as analytical differentiation. It evaluates partial derivatives accurately and cheaply. In particular, it has been demonstrated that, in reverse mode, the evaluation of a gradient requires no more than five times the effort of evaluating the underlying function alone <ref> [3] </ref>. Current AD packages, such as ADIFOR2.0, typically take the form of preprocessors that accept function evaluation subroutines as input and generate corresponding derivative evaluation subroutines. Obviously users can directly invoke ADIFOR2.0 to generate the derivative evaluation subroutine without ADIFFSQP.
References-found: 3

