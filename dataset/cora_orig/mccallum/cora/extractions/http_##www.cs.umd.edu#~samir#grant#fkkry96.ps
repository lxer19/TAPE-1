URL: http://www.cs.umd.edu/~samir/grant/fkkry96.ps
Refering-URL: http://www.cs.umd.edu/~samir/grant/career.html
Root-URL: 
Email: E-Mail: sandor@zpr.uni-koeln.de.  E-mail samir@cs.umd.edu.  E-Mail: mklemmst@zpr.uni-koeln.de.  E-mail rbk@utdallas.edu.  E-mail ney@cs.dartmouth.edu.  
Title: A Network-Flow Technique for Finding Low-Weight Bounded-Degree Spanning Trees  
Author: Sandor P. Fekete Samir Khuller Monika Klemmstein Balaji Raghavachari Neal Young k k 
Note: 20742. Research supported by NSF Research Initiation Award CCR-9307462 and an NSF CAREER Award CCR-9501355.  75083-0688. Research supported in part by NSF Research Initiation Award CCR-9409625.  03755-3510. Part of this research was done while  and supported by Eva Tardos' NSF PYI grant DDM-9157199.  
Address: Koln, D-50923 Koln, Germany.  College Park, MD  Koln, D-50923 Koln, Germany.  Dallas, Box 830688, Richardson, TX  College, Hanover NH  Ithaca NY 14853  
Affiliation: Center for Parallel Computing, Universitat zu  Computer Science Department and Institute for Advanced Computer Studies, University of Maryland,  Center for Parallel Computing, Universitat zu  Department of Computer Science, The University of Texas at  Dept. of Computer Science, Dartmouth  at School of ORIE, Cornell University,  
Abstract: fl A preliminary version of this paper appeared in the Proceedings of the 5th International Integer Pro gramming and Combinatorial Optimization Conference (IPCO), June 1996, pages 105-117. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. K. Ahuja, T. L. Magnanti and J. B. Orlin. </author> <title> Network flows (theory, algorithms and applications). </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1993. </year>
Reference-contexts: The cost of a sequence is an upper bound on the resulting increase in the weight of the tree. Our goal is to find a feasible legal sequence of minimum cost. For brevity, we call such a sequence a minimum-cost sequence. The problem reduces to a minimum-cost flow problem <ref> [1] </ref> in a flow network that we call the adoption network for T . The adoption network is defined as follows. Starting with G, replace each edge (u; v) by two directed edges (u; v) and (v; u), each with cost w (u; v) and infinite capacity. <p> The cost of the flow is the sum, over all edges, of the cost of the edge times the flow on the edge. Since the demands are integers, there exists an integer-valued minimum-cost feasible flow <ref> [1] </ref>. Assuming that each degree constraint is at least 1, there exists such a flow that is also legal. For brevity, we call such a flow a minimum-cost flow. Lemma 1 The following statements are true: 1. The adoption sequences correspond to integer-valued flows. <p> It can be verified that the above sequence of adoptions preserves legality and feasibility, and does not increase cost. 3 Polynomial-Time Algorithm An acyclic, integer, minimum-cost flow can be found in polynomial time <ref> [1] </ref>. The corresponding legal, feasible adoption sequence can be performed in polynomial time as described in the proof of the second part of Lemma 1. <p> Note that f (u; v) = f (v; u). Intuitively, a negative flow of x units from u to v means that x units of flow go from v to u. This is known as the skew symmetry property of flows <ref> [1] </ref>. Inductively it can be shown that for each vertex v, the net flow into it is deg T (v) d fl (v), so that the adoption sequence determined by the flow f achieves a tree with the same degrees as the optimal tree.
Reference: [2] <author> C. Brezovec, G. Cornuejols, F. Glover. </author> <title> A matroid algorithm and its application to the efficient solution of two optimization problems in graphs. Math. </title> <booktitle> Programming 42 (1988), </booktitle> <pages> pp. 471-487. </pages>
Reference-contexts: The special case of only one vertex with a degree-constraint has been examined [5, 6, 9]; a polynomial time algorithm for the case of a fixed number of nodes with a constrained degree was given by Brezovec et al. <ref> [2] </ref>. Computational results for some heuristics for the general problem are presented in [14, 19, 21]. Papadimitriou and Vazirani [15] raised the problem of finding the complexity of computing a minimum-weight degree-4 spanning tree of points in the plane. Some geometric aspects are considered in [10, 13, 17].
Reference: [3] <author> T. Fischer. </author> <title> Optimizing the degree of minimum weight spanning trees. </title> <type> Tech. Rep. 93-1338, </type> <institution> Dept. of Computer Science, Cornell University, </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: In unweighted graphs, Furer and Raghavachari [4] gave a polynomial-time algorithm to find a spanning tree of maximum degree exceeding the minimum possible by at most one. In arbitrary weighted graphs, Fischer <ref> [3] </ref> showed that a minimum spanning tree with maximum degree O (ffi fl +log n) can be computed in polynomial time, where ffi fl is the minimum maximum degree of any minimum spanning tree.
Reference: [4] <author> M. Furer and B. Raghavachari. </author> <title> Approximating the minimum-degree Steiner tree to within one of optimal. </title> <editor> J. </editor> <booktitle> Algorithms 17 (1994), </booktitle> <pages> pp. 409-423. 18 </pages>
Reference-contexts: For points in the plane, the performance guarantee of their algorithm improves to 1:5; if the tree is allowed to have degree four, the ratio improves further to 1:25. In unweighted graphs, Furer and Raghavachari <ref> [4] </ref> gave a polynomial-time algorithm to find a spanning tree of maximum degree exceeding the minimum possible by at most one.
Reference: [5] <author> H. N. Gabow. </author> <title> A good algorithm for smallest spanning trees with a degree constraint. </title> <booktitle> Networks 8 (1978), </booktitle> <pages> pp. 201-208. </pages>
Reference-contexts: There are various practical motivations: the problem arises in the context of VLSI layout and network design [8, 12, 20] (such as in the Bellcore software FIBER OPTIONS, used for designing survivable optimal fiber networks). The special case of only one vertex with a degree-constraint has been examined <ref> [5, 6, 9] </ref>; a polynomial time algorithm for the case of a fixed number of nodes with a constrained degree was given by Brezovec et al. [2]. Computational results for some heuristics for the general problem are presented in [14, 19, 21].
Reference: [6] <author> H. N. Gabow and R. E. Tarjan. </author> <title> Efficient algorithms for a family of matroid intersection problems. </title> <editor> J. </editor> <booktitle> Algorithms 5 (1984), </booktitle> <pages> pp. 80-131. </pages>
Reference-contexts: There are various practical motivations: the problem arises in the context of VLSI layout and network design [8, 12, 20] (such as in the Bellcore software FIBER OPTIONS, used for designing survivable optimal fiber networks). The special case of only one vertex with a degree-constraint has been examined <ref> [5, 6, 9] </ref>; a polynomial time algorithm for the case of a fixed number of nodes with a constrained degree was given by Brezovec et al. [2]. Computational results for some heuristics for the general problem are presented in [14, 19, 21].
Reference: [7] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and intractability: a guide to the theory of NP-completeness. </title> <publisher> Freeman, </publisher> <address> San Francisco, CA, </address> <year> 1979. </year>
Reference: [8] <author> B. Gavish. </author> <title> Topological design of centralized computer networks | formulations and algorithms. </title> <booktitle> Networks 12 (1982), </booktitle> <pages> pp. 355-377. </pages>
Reference-contexts: In general, it is NP-hard to find such a tree. There are various practical motivations: the problem arises in the context of VLSI layout and network design <ref> [8, 12, 20] </ref> (such as in the Bellcore software FIBER OPTIONS, used for designing survivable optimal fiber networks).
Reference: [9] <author> F. Glover, D. Klingman. </author> <title> Finding minimum spanning trees with a fixed number of links at a node. </title> <editor> In: B. Roy (ed.), </editor> <booktitle> Combinatorial Programming: Methods and Applications. </booktitle> <address> D. </address> <publisher> Reidel Publishing Company, </publisher> <address> Dordrecht-Holland, </address> <year> 1975. </year> <pages> pp. 191-201. </pages>
Reference-contexts: There are various practical motivations: the problem arises in the context of VLSI layout and network design [8, 12, 20] (such as in the Bellcore software FIBER OPTIONS, used for designing survivable optimal fiber networks). The special case of only one vertex with a degree-constraint has been examined <ref> [5, 6, 9] </ref>; a polynomial time algorithm for the case of a fixed number of nodes with a constrained degree was given by Brezovec et al. [2]. Computational results for some heuristics for the general problem are presented in [14, 19, 21].
Reference: [10] <author> S. Khuller, B. Raghavachari and N. Young. </author> <title> Low degree spanning trees of small weight. </title> <journal> SIAM J. Comput. </journal> <volume> 25 (1996), </volume> <pages> pp. 355-368. </pages>
Reference-contexts: Computational results for some heuristics for the general problem are presented in [14, 19, 21]. Papadimitriou and Vazirani [15] raised the problem of finding the complexity of computing a minimum-weight degree-4 spanning tree of points in the plane. Some geometric aspects are considered in <ref> [10, 13, 17] </ref>. In this paper, we consider modifying a given spanning tree T , to meet the degree constraints without increasing its weight considerably. <p> Our polynomial-time algorithm performs an optimal sequence of adoptions. Adoptions have been previously used to obtain bounded-degree trees in weighted graphs <ref> [10, 16, 18] </ref>. The main contributions of this paper are a careful analysis of the power of adoptions and a network-flow technique for selecting an optimal sequence of adoptions. The method yields a stronger performance guarantee and may yield better results in practice. <p> The performance guarantee of our algorithm is better. In Euclidean graphs (induced by points in IR d ), minimum spanning trees are known to have bounded degree. For such graphs, Khuller, Raghavachari and Young <ref> [10] </ref> gave a linear-time algorithm to find a degree-3 spanning tree of weight at most 5=3 times the weight of a minimum spanning tree. <p> (T 3 ) &lt; 3 For the case of Euclidean distances in the plane, we get bounded degree trees that satisfy * w (T 3 ) &lt; 5 * w (T 4 ) &lt; 4 15 The latter two bounds are worse than those shown by Khuller, Raghavachari and Young <ref> [10] </ref> using the geometry of point arrangements. (It was shown that 3 2 and 5 4 are upper bounds.) We conjecture that the following are the optimal ratios: Conjecture 7 For the case of Euclidean distances in the plane, we conjecture that there exist bounded degree trees that satisfy * w
Reference: [11] <author> S. Khuller, B. Raghavachari, N. Young, </author> <title> Balancing minimum spanning trees and shortest-path trees. </title> <booktitle> Algorithmica 14 (1995), </booktitle> <pages> pp. 305-321. </pages>
Reference-contexts: We discuss similar results for the L 1 , L 2 , and L 1 norms. For some of these norms, this improves the best current performance guarantees. Finally, we disprove the following conjecture of <ref> [11] </ref>: "In Euclidean graphs, perhaps a Traveling Salesman path of weight at most (2 ") times the minimum spanning-tree weight always exists..." Our algorithms modify the given tree by performing a sequence of adoptions. Our polynomial-time algorithm performs an optimal sequence of adoptions. <p> in (c) by 45 degrees.) w (T 3 ) w (T min ) , L 2 distances (b) w (T min ) , L 2 distances (c) w (T min ) , L 1 distances. 16 6.1 Geometric Hamiltonian Paths We conclude this paper by settling a question raised in <ref> [11] </ref>, in the negative: "In Euclidean graphs, perhaps a Traveling Salesman path of weight at most (2 ") times the minimum spanning-tree weight always exists and can be found in polynomial time." Theorem 8 For an arrangement of points in the plane with Euclidean distances, the ratio w (T 2 )
Reference: [12] <author> C. L. Monma, D. Shallcross. </author> <title> Methods for designing communication networks with certain two-connected survivability constraints. </title> <journal> Oper. Res. </journal> <volume> 37 (1989), </volume> <pages> pp. 531-541. </pages>
Reference-contexts: In general, it is NP-hard to find such a tree. There are various practical motivations: the problem arises in the context of VLSI layout and network design <ref> [8, 12, 20] </ref> (such as in the Bellcore software FIBER OPTIONS, used for designing survivable optimal fiber networks).
Reference: [13] <author> C. L. Monma, S. Suri, </author> <title> Transitions in geometric minimum spanning trees. </title> <booktitle> Discrete & Computational Geometry 8 (1992), </booktitle> <pages> pp. 265-293. </pages>
Reference-contexts: Computational results for some heuristics for the general problem are presented in [14, 19, 21]. Papadimitriou and Vazirani [15] raised the problem of finding the complexity of computing a minimum-weight degree-4 spanning tree of points in the plane. Some geometric aspects are considered in <ref> [10, 13, 17] </ref>. In this paper, we consider modifying a given spanning tree T , to meet the degree constraints without increasing its weight considerably. <p> For the case of L 2 distances in the plane, there always is an MST of maximum degree 5 <ref> [13] </ref>; for the case of L 1 or L 1 distances there always exists a MST of maximum degree 4 [13, 17]. <p> For the case of L 2 distances in the plane, there always is an MST of maximum degree 5 [13]; for the case of L 1 or L 1 distances there always exists a MST of maximum degree 4 <ref> [13, 17] </ref>. Without using any specific structure of the involved distance functions, we note as a corollary: Corollary 6 Let T min be an MST and T k be a tree whose maximal degree is at most k.
Reference: [14] <author> S. C. Narula and C. A. Ho. </author> <title> Degree-constrained minimum spanning tree. </title> <institution> Comput. Ops. Res. </institution> <month> 7 </month> <year> (1980), </year> <pages> pp. 239-249. </pages>
Reference-contexts: Computational results for some heuristics for the general problem are presented in <ref> [14, 19, 21] </ref>. Papadimitriou and Vazirani [15] raised the problem of finding the complexity of computing a minimum-weight degree-4 spanning tree of points in the plane. Some geometric aspects are considered in [10, 13, 17].
Reference: [15] <author> C. H. Papadimitriou, U. V. Vazirani, </author> <title> On two geometric problems related to the traveling salesman problem. </title> <editor> J. </editor> <booktitle> Algorithms 5 (1984), </booktitle> <pages> pp. 231-246. 19 </pages>
Reference-contexts: Computational results for some heuristics for the general problem are presented in [14, 19, 21]. Papadimitriou and Vazirani <ref> [15] </ref> raised the problem of finding the complexity of computing a minimum-weight degree-4 spanning tree of points in the plane. Some geometric aspects are considered in [10, 13, 17].
Reference: [16] <author> R. Ravi, M. V. Marathe, S. S. Ravi, D. J. Rosenkrantz and H. B. Hunt III. </author> <title> Many birds with one stone: multi-objective approximation algorithms. Manuscript. A preliminary version appeared in Proc. </title> <booktitle> 25th Annual ACM Symp. on the Theory of Computing, </booktitle> <pages> pp. 438-447, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Our polynomial-time algorithm performs an optimal sequence of adoptions. Adoptions have been previously used to obtain bounded-degree trees in weighted graphs <ref> [10, 16, 18] </ref>. The main contributions of this paper are a careful analysis of the power of adoptions and a network-flow technique for selecting an optimal sequence of adoptions. The method yields a stronger performance guarantee and may yield better results in practice. <p> The method yields a stronger performance guarantee and may yield better results in practice. The analysis of adoptions shows that different techniques will be necessary if better bounds are to be obtained. 5 In the full version of their paper, Ravi et al. <ref> [16, Thm. 1.9] </ref> (if slightly generalized and improved 1 ) gave an algorithm with a performance guarantee of 2 min d (v) 2 : v 2 V; deg T (v) &gt; 2 provided each d (v) 3. The performance guarantee of our algorithm is better. <p> has degree at least two in the current tree. 1 To obtain the improved bound one has to change the proof slightly by upper bounding c (v 1 v 2 ) c (vv 2 ) by c (vv 1 ) and not c (vv 2 ) as is done in <ref> [16] </ref>. 6 1 Choose a neighbor x of v in the current tree other than the neighbor on the current u ; v path. 2 Modify the current tree by replacing edge (v; x) by (u; x).
Reference: [17] <author> G. Robins and J. S. Salowe. </author> <title> Low-degree minimum spanning trees. </title> <booktitle> Discrete and Computational Geometry 14 (1995), </booktitle> <pages> pp. 151-166. </pages>
Reference-contexts: Computational results for some heuristics for the general problem are presented in [14, 19, 21]. Papadimitriou and Vazirani [15] raised the problem of finding the complexity of computing a minimum-weight degree-4 spanning tree of points in the plane. Some geometric aspects are considered in <ref> [10, 13, 17] </ref>. In this paper, we consider modifying a given spanning tree T , to meet the degree constraints without increasing its weight considerably. <p> In such cases our algorithms can be used to find spanning trees of even smaller degree with weight bounded by a factor strictly smaller than 2 times the weight of a minimum spanning tree (MST). For example, in the L 1 metric, a degree-4 MST can be found <ref> [17] </ref>, so that we can find a degree-3 tree with weight at most 1:5 times the weight of an MST. We discuss similar results for the L 1 , L 2 , and L 1 norms. For some of these norms, this improves the best current performance guarantees. <p> For the case of L 2 distances in the plane, there always is an MST of maximum degree 5 [13]; for the case of L 1 or L 1 distances there always exists a MST of maximum degree 4 <ref> [13, 17] </ref>. Without using any specific structure of the involved distance functions, we note as a corollary: Corollary 6 Let T min be an MST and T k be a tree whose maximal degree is at most k.
Reference: [18] <author> J. S. Salowe. </author> <title> Euclidean spanner graphs with degree four. </title> <journal> Discrete Appl. Math. </journal> <volume> 54 (1994), </volume> <pages> pp. 55-66. </pages>
Reference-contexts: Our polynomial-time algorithm performs an optimal sequence of adoptions. Adoptions have been previously used to obtain bounded-degree trees in weighted graphs <ref> [10, 16, 18] </ref>. The main contributions of this paper are a careful analysis of the power of adoptions and a network-flow technique for selecting an optimal sequence of adoptions. The method yields a stronger performance guarantee and may yield better results in practice.
Reference: [19] <author> M. Savelsbergh and A. Volgenant. </author> <title> Edge exchanges in the degree-constrained minimum spanning tree problem. </title> <institution> Comput. Ops. Res. </institution> <month> 12 </month> <year> (1985), </year> <pages> pp. 341-348. </pages>
Reference-contexts: Computational results for some heuristics for the general problem are presented in <ref> [14, 19, 21] </ref>. Papadimitriou and Vazirani [15] raised the problem of finding the complexity of computing a minimum-weight degree-4 spanning tree of points in the plane. Some geometric aspects are considered in [10, 13, 17].
Reference: [20] <author> M. Stoer. </author> <title> Design of survivable networks. </title> <booktitle> Lecture Notes on Mathematics # 1531. </booktitle> <publisher> Springer, </publisher> <address> Heidelberg, </address> <year> 1992. </year>
Reference-contexts: In general, it is NP-hard to find such a tree. There are various practical motivations: the problem arises in the context of VLSI layout and network design <ref> [8, 12, 20] </ref> (such as in the Bellcore software FIBER OPTIONS, used for designing survivable optimal fiber networks).
Reference: [21] <author> A. Volgenant. </author> <title> A Lagrangean approach to the degree-constrained minimum spanning tree problem. </title> <type> Europ. </type> <institution> J. Ops. Res. </institution> <month> 39 </month> <year> (1989), </year> <pages> pp. 325-331. 20 </pages>
Reference-contexts: Computational results for some heuristics for the general problem are presented in <ref> [14, 19, 21] </ref>. Papadimitriou and Vazirani [15] raised the problem of finding the complexity of computing a minimum-weight degree-4 spanning tree of points in the plane. Some geometric aspects are considered in [10, 13, 17].
References-found: 21

