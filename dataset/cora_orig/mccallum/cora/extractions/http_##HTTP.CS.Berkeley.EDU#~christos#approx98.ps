URL: http://HTTP.CS.Berkeley.EDU/~christos/approx98.ps
Refering-URL: http://HTTP.CS.Berkeley.EDU/~christos/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: E-mail: piluc@dsi.unifi.it  E-mail: deng@cs.cityu.edu.hk  E-mail: christos@cs.berkeley.edu  
Phone: Fax: +39-55-4796730  
Title: On Approximating a Scheduling Problem (Extended Abstract for Approx98)  
Author: Pierluigi Crescenzi Deng Xiaotie Christos H. Papadimitriou 
Address: Via C. Lombroso 6/17, 50134 Firenze, Italy  Kowloon, Hong Kong SAR, China  Soda Hall 689, Berkeley CA 94720, U.S.A.  
Affiliation: Dipartimento di Sistemi e Informatica Universita degli Studi di Firenze  Department of Computer Science City University of Hong Kong  Computer Science Division University of California at Berkeley  
Abstract: Given a set of communication tasks (best described in terms of a weighted bipartite graph where one set of nodes denotes the senders, the other set the receivers, edges are communication tasks, and the weight of an edge is the time required for transmission), we wish to minimize the total time required for the completion of all communication tasks assuming that tasks can be preempted (that is, each edge can be subdivided into many edges with weights adding up to the edge's original weight) and that preemption comes with a cost. In this paper, we first prove that one cannot approximate this problem within a factor smaller than 7 6 . Successively, we propose a simple approximation algorithm within a ratio of two. Finally, we devise a more sophisticated algorithm, called the potential function algorithm, which experimentally performs much better even though, unfortunately, at present we are able to only prove an upper bound of two as well. Indeed, the way in which our more sophisticated algorithm derives from the simple one, suggests a hierarchy of algorithms, all of which have a worst-case performance at most two, but which we suspect to have increasingly better performance, both in worst case and with actual instances. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Bongiovanni G., Coppersmith D., and Wong C.K., </author> <title> "An optimal time slot assignment algorithm for an SS/TDMA system wit variable number of transponders", </title> <journal> IEEE Trans. on Communications, </journal> <volume> 29, </volume> <pages> 721-726, </pages> <year> 1981. </year>
Reference-contexts: The only problem with this approach is that, strictly speaking, it is a pseudopolynomial-time algorithm, not a polynomial-time one (its running time depends linearly on the weights of G). We can remedy this as follows 1 : 1 This approach is similar to that used in <ref> [1] </ref> to optimally solve the minimum bipartite scheduling problem without setup costs. 5 Theorem 6 There is a polynomial-time algorithm for preemptive bipartite schedul-ing with an approximation ratio two.
Reference: [2] <author> Even S., Itai A., and Shamir A., </author> <title> "On the complexity of timetable and multicommodity flow problems", </title> <journal> SIAM J. Comput., </journal> <volume> 5, </volume> <pages> 691-703, </pages> <year> 1976. </year>
Reference-contexts: but which we suspect to have increasingly better performance, both in worst case and with actual instances. 2 Inapproximability In this section we shall prove that approximating the preemptive bipartite scheduling problem within a ratio smaller than 7 6 is NP-hard, by a reduction from the Restricted Timetable Design problem <ref> [2, 3] </ref>, defined as follows: 2 Instance: A set T = ft 1 ; : : : ; t n g of teachers, a set C = fc 1 ; : : : ; c m g of classes, an availabil-ity function A : T fi f1; 2; 3g ! f0;
Reference: [3] <author> Gopal I.S. and Wong C.K., </author> <title> "Minimizing the number of switchings in an SS/TDMA system", </title> <journal> IEEE Trans. on Communications, </journal> <volume> 33, </volume> <pages> 497-501, </pages> <year> 1985. </year>
Reference-contexts: 1 Introduction In parallel computation [4], as well as in SS/TDMA network switches <ref> [3] </ref>, the following scheduling problem arises: We have a set of communication tasks, best described in terms of a weighted bipartite graph (see Figure 1). <p> In SS/TDMA network switches, minimizing switching time largely depends on finding the optimum of this scheduling problem <ref> [3] </ref>. If all edge weights are equal, then the problem is in effect a bipartite edge-coloring problem, easily solvable in linear time. But in general the task lengths will be different. <p> For example, the optimum schedule for the task system in Figure 1 when D = 1 has total cost 9. It is implicit in <ref> [3] </ref> that the preemptive bipartite scheduling problem is NP-hard (the authors of [3] are interested in the special case in which D is larger than the sum of all w's, and therefore the optimum schedule must minimize the number of matchings first, and secondarily the total transmission time). <p> For example, the optimum schedule for the task system in Figure 1 when D = 1 has total cost 9. It is implicit in <ref> [3] </ref> that the preemptive bipartite scheduling problem is NP-hard (the authors of [3] are interested in the special case in which D is larger than the sum of all w's, and therefore the optimum schedule must minimize the number of matchings first, and secondarily the total transmission time). This negative result encourages us to look for approximation algorithms for this problem. <p> This negative result encourages us to look for approximation algorithms for this problem. Unfortunately, as we show in Section 2 by a proof inspired by the NP-hardness proof in <ref> [3] </ref>, one cannot approximate preemptive bipartite scheduling within a factor smaller than 7 6 . As we point out in Section 3, a heuristic proposed by Gopal and Wong has in fact unbounded error. <p> but which we suspect to have increasingly better performance, both in worst case and with actual instances. 2 Inapproximability In this section we shall prove that approximating the preemptive bipartite scheduling problem within a ratio smaller than 7 6 is NP-hard, by a reduction from the Restricted Timetable Design problem <ref> [2, 3] </ref>, defined as follows: 2 Instance: A set T = ft 1 ; : : : ; t n g of teachers, a set C = fc 1 ; : : : ; c m g of classes, an availabil-ity function A : T fi f1; 2; 3g ! f0; <p> two, but we believe it should perform better as k grows, though at the expense of an increased amount of time (at present we have only implemented A 0 and A 1 ). 3.4 The heuristic of Gopal and Wong We show that the algorithm proposed by Gopal and Wong <ref> [3] </ref> may result in an unbounded approximation ratio in the worst case. Their algorithm finds a solution with the minimum possible number of matchings, and then heuristically optimizes the total delay by repeatedly selecting a matching with the minimum maximum edge weight.
Reference: [4] <author> Goudreau M., Lang K., Rao S.B., Suel T., Tsantilas T., </author> <title> "Towards Efficiency and Portability: Programming with the BSP Model", </title> <booktitle> Proc. SPAA, </booktitle> <year> 1996. </year>
Reference-contexts: 1 Introduction In parallel computation <ref> [4] </ref>, as well as in SS/TDMA network switches [3], the following scheduling problem arises: We have a set of communication tasks, best described in terms of a weighted bipartite graph (see Figure 1). <p> We wish to minimize the total time required for the completion of all communication tasks. In the context of parallel computation, this problem arises most systematically in the BSP style <ref> [5, 4] </ref>, in which computation steps interleave with communication steps, and each communication step can be captured by a weighted bipartite graph of communication tasks, as above. In SS/TDMA network switches, minimizing switching time largely depends on finding the optimum of this scheduling problem [3].

References-found: 4

