URL: ftp://ftp.isi.edu/pub/cengiz/publications/MaRS:CCR.ps.gz
Refering-URL: http://www.isi.edu/~cengiz/publications/
Root-URL: http://www.isi.edu
Title: Performance Comparison of Routing Protocols under Dynamic and Static File Transfer Connections  
Author: A. Udaya Shankar Cengiz Alaettinoglu, Klaudia Dussa-Zieger, Ibrahim Matta 
Address: College Park, MD 20742  
Affiliation: Department of Computer Science University of Maryland  
Abstract: We compare the performance of two recently proposed distance-vector algorithms (Merlin-Segall and Extended Bellman-Ford) with a link-state algorithm (SPF), under varying file transfer workload. (Unlike the traditional distance-vector algorithms, these new distance-vector algorithms do not suffer from long-lived loops.) Our comparison is done using a recently developed network simulator, MaRS. We consider both dynamic and static file transfer connections, and both uniform and hotspot distributions of source-sink pairs. Our conclusion is that Extended Bellman-Ford performs as well as SPF in terms of delay and throughput. This suggests that distance-vector algorithms are appropriate for very large wide-area networks, since their space requirements are less than that of link-state algorithms. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Alaettinoglu, K. Dussa-Zieger, I. Matta, and A. U. Shankar. </author> <title> MaRS (Maryland Routing Simulator) Version 1.0 User's Manual. </title> <type> Technical Report UMIACS-TR-91-80, </type> <institution> CS-TR-2687, Department of Computer Science, University of Maryland, College Park, MD 20742, </institution> <month> June </month> <year> 1991. </year>
Reference-contexts: To ignore the workload, as is done in all hop-count and message complexity analyses, is to ignore the critical delayed feedback between routing table changes and link cost changes. A testbed appears essential for understanding these issues. We have developed such a testbed, called MaRS (Maryland Routing Simulator) <ref> [1] </ref>. In this paper, we use MaRS to evaluate the performance of three routing algorithms in terms of delay and throughput under varying file transfer workload. In all cases, we consider the NSFNET-backbone network and a hop-normalized link cost function. <p> It provides a flexible platform for the evaluation and comparison of network routing algorithms. MaRS is implemented in C on a UNIX environment. It has an optional graphical (X Window System) interface. It is available publicly in the Internet by anonymous ftp from ftp.cs.umd.edu <ref> [1] </ref>. A network configuration consists of a physical network, a routing algorithm and a workload. The physical network consists of nodes and links. Each node i represents a store-and-forward entity, and is characterized by parameters such as buffer space, processing speed, packet queueing discipline, and failure and repair distributions.
Reference: [2] <author> D. Bertsekas and R. </author> <title> Gallager. </title> <booktitle> Data Networks, </booktitle> <pages> pages 297-333. </pages> <publisher> Prentice-Hall, Inc., </publisher> <year> 1987. </year>
Reference-contexts: The distance-vector approach has less space overhead. However, the straight-forward distributed implementation of the Bellman-Ford algorithm performs badly, because it can have long-lived loops giving rise to large dissemination times <ref> [2] </ref>. The ARPANET initially used this Distributed Bellman-Ford algorithm, but it was replaced in 1979 by a link state algorithm referred to as SPF (Shortest Path First) [19]. <p> Regarding analytical approaches, one approach is to use a queueing network model where routing is based on delayed state information. Unfortunately, this is usually intractable except for extremely simple models [7, 8]. Another more tractable approach is to use flow models <ref> [2, 8] </ref>. <p> Unfortunately, this is usually intractable except for extremely simple models [7, 8]. Another more tractable approach is to use flow models [2, 8]. However, this approach assumes that flows are static (or quasi-static) <ref> [2] </ref>. 3 Overview of Routing Algorithms In this paper, we are concerned with next-hop routing; that is, each data packet has its destination node id, and each node (other than the destination) maintains a neighboring node id, referred to as next hop, to forward the packets to.
Reference: [3] <author> C. Cheng, R. Riley, S. P. R. Kumar, and J. J. Garcia-Luna-Aceves. </author> <title> A Loop-free Bellman-Ford Routing Protocol Without Bouncing Effect. </title> <booktitle> In Proc. ACM SIGCOMM '89, </booktitle> <pages> pages 224-237, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: The ARPANET initially used this Distributed Bellman-Ford algorithm, but it was replaced in 1979 by a link state algorithm referred to as SPF (Shortest Path First) [19]. Since 1979, many new kinds of distance-vector algorithms have been proposed <ref> [20, 24, 15, 3, 11, 23] </ref> which achieve significantly reduced dissemination times by using node coordination mechanisms. <p> In all cases, we consider the NSFNET-backbone network and a hop-normalized link cost function. We compare SPF and two recently proposed distance-vector algorithms, namely Merlin-Segall [20, 24] henceforth called MS, and Extended Bellman-Ford <ref> [3] </ref> henceforth called ExBF. The file transfer workload we consider is specified in terms of source-sink pairs.
Reference: [4] <author> Wushow Chou, Arnold Bragg, and Arne Nilsson. </author> <title> The Need for Adaptive Routing in the Chaotic and Unbalanced Traffic. </title> <journal> IEEE Transactions on Communications, </journal> <year> 1981. </year>
Reference-contexts: SPF) [19] and its new link cost function (i.e. hop-normalized delay function) [17]. The tests showed that the new algorithm and cost function give better performance than the old ARPANET algorithm (i.e. Distributed Bellman-Ford) and the old delay function. Regarding simulation approaches, reference <ref> [4] </ref> concluded that an adaptive strategy is needed in a skewed workload environment. For SPF, it investigated the effects of the link cost function parameters and demonstrated optimal settings. In [26], the original and new ARPANET algorithms (i.e. <p> We then describe the range of parameters exercised in our simulations and the performance measures obtained. Assumptions and parameters were predetermined either consistently with those made in the literature, e.g. [19] [17] [12] <ref> [4] </ref>, or from statistics provided by Merit/NSFNET Information Services, or by experimentation. 4.1 Overview of MaRS Our simulation studies were done on a recently developed discrete-event simulator, MaRS (Maryland Routing Simulator). It provides a flexible platform for the evaluation and comparison of network routing algorithms. <p> The explanation we have is the following: in general we have observed that SPF adapts faster in response to traffic burst and link failure/recovery. We think that this leads to oscillations in routes 3 which degrade performance under uniform workload <ref> [4] </ref>, while under skewed workload, these route changes would cause the use of under-utilized links. We give more importance to hotspot workload than to uniform workload, because we believe that it is more representative of real-life network conditions.
Reference: [5] <author> E. Dijkstra. </author> <title> A Note on Two Problems in Connection with Graphs. </title> <journal> Numer. Math., </journal> <volume> 1 </volume> <pages> 269-271, </pages> <year> 1959. </year>
Reference-contexts: However, these loops are short-lived, because they disappear in the time it takes a message to traverse the diameter of the network. SPF is a link-state algorithm in which Dijkstra's shortest path algorithm <ref> [5] </ref> is applied to the view of the network topology to determine next hops. Distance-Vector Algorithms In the distance-vector approach, every node maintains for each destination a set of distances, one through each of its neighbors.
Reference: [6] <author> E. Dijkstra and C. Scholten. </author> <title> Termination Detection for Diffusing Computations. </title> <journal> Information Processing Letters, </journal> <volume> 11(1) </volume> <pages> 1-4, </pages> <year> 1980. </year>
Reference-contexts: For each destination, MS guarantees that the next hops on the nodes that can reach the destination form a tree rooted at the destination. MS attains loop-free paths by coordinating the next hop updates for each destination as a diffusion computation <ref> [6] </ref> which is started by the destination. ExBF is another distance-vector algorithm which avoids long-lived loops but not short-lived loops. For each destination, every node maintains a distance and a prefinal node through each of its neighbors.
Reference: [7] <author> A. Ephremides, P. Varaiya, and J. Walrand. </author> <title> A Simple Dynamic Routing Problem. </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> 25(4) </volume> <pages> 690-693, </pages> <month> August </month> <year> 1980. </year>
Reference-contexts: Regarding analytical approaches, one approach is to use a queueing network model where routing is based on delayed state information. Unfortunately, this is usually intractable except for extremely simple models <ref> [7, 8] </ref>. Another more tractable approach is to use flow models [2, 8].
Reference: [8] <author> A. Ephremides and S. Verdu. </author> <title> Control and Optimization Methods in Communication Network Problems. </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> 34(9) </volume> <pages> 930-942, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: Regarding analytical approaches, one approach is to use a queueing network model where routing is based on delayed state information. Unfortunately, this is usually intractable except for extremely simple models <ref> [7, 8] </ref>. Another more tractable approach is to use flow models [2, 8]. <p> Regarding analytical approaches, one approach is to use a queueing network model where routing is based on delayed state information. Unfortunately, this is usually intractable except for extremely simple models [7, 8]. Another more tractable approach is to use flow models <ref> [2, 8] </ref>.
Reference: [9] <author> L. Ford and D. Fulkerson. </author> <booktitle> Flows in Networks, </booktitle> <pages> pages 297-333. </pages> <publisher> Prentice-Hall, Inc., </publisher> <year> 1962. </year>
Reference-contexts: There are two basic kinds of routing algorithms: link-state and distance-vector. In the link-state approach, each node maintains a view of the network topology with a cost for each link. In the distance-vector approach, which is based on the Bellman-Ford algorithm <ref> [9] </ref>, each node maintains for each destination a set of distances, one for each of its neighbors. The distance-vector approach has less space overhead. However, the straight-forward distributed implementation of the Bellman-Ford algorithm performs badly, because it can have long-lived loops giving rise to large dissemination times [2].
Reference: [10] <author> R. Gallager. </author> <title> A Minimum Delay Routing Algorithm Using Distributed Computation. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-25:73-84, </volume> <month> Jan </month> <year> 1977. </year>
Reference-contexts: Reference [28] compared SPF, Distributed Bellman-Ford and DUAL algorithms with respect to measures such as number of paths with loops after a node/link change. However, it has no workload and assumes unit link delays and zero processing time at the nodes. Reference [21] compared SPF, Gallager's algorithm <ref> [10] </ref>, and the CODEX algorithm [13, 14]. It was shown that SPF with the old delay link cost function performs poorly compared to the other two algorithms in terms of packet delay under moderate to heavy traffic conditions.
Reference: [11] <author> J.J. Garcia-Luna-Aceves. </author> <title> A Unified Approach to Loop Free Routing Using Distance Vectors or Link States. </title> <booktitle> In Proc. ACM SIGCOMM '89, </booktitle> <pages> pages 212-223, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: The ARPANET initially used this Distributed Bellman-Ford algorithm, but it was replaced in 1979 by a link state algorithm referred to as SPF (Shortest Path First) [19]. Since 1979, many new kinds of distance-vector algorithms have been proposed <ref> [20, 24, 15, 3, 11, 23] </ref> which achieve significantly reduced dissemination times by using node coordination mechanisms.
Reference: [12] <author> S. A. Heimlich. </author> <title> Traffic Characterization of the NSFNET National Backbone. </title> <booktitle> In Proc. USENIX '90, </booktitle> <pages> pages 207-227, </pages> <address> Washington, D.C., </address> <month> January </month> <year> 1990. </year>
Reference-contexts: We then describe the range of parameters exercised in our simulations and the performance measures obtained. Assumptions and parameters were predetermined either consistently with those made in the literature, e.g. [19] [17] <ref> [12] </ref> [4], or from statistics provided by Merit/NSFNET Information Services, or by experimentation. 4.1 Overview of MaRS Our simulation studies were done on a recently developed discrete-event simulator, MaRS (Maryland Routing Simulator). It provides a flexible platform for the evaluation and comparison of network routing algorithms.
Reference: [13] <author> P.A. Humblet and S.R. Soloway. </author> <title> Algorithms for Data Communication Networks-Part 1. </title> <type> Technical report, </type> <institution> Codex Corp., </institution> <year> 1986. </year>
Reference-contexts: However, it has no workload and assumes unit link delays and zero processing time at the nodes. Reference [21] compared SPF, Gallager's algorithm [10], and the CODEX algorithm <ref> [13, 14] </ref>. It was shown that SPF with the old delay link cost function performs poorly compared to the other two algorithms in terms of packet delay under moderate to heavy traffic conditions.
Reference: [14] <author> P.A. Humblet, S.R. Soloway, and B. Steinka. </author> <title> Algorithms for Data Communication Networks-Part 2. </title> <type> Technical report, </type> <institution> Codex Corp., </institution> <year> 1986. </year>
Reference-contexts: However, it has no workload and assumes unit link delays and zero processing time at the nodes. Reference [21] compared SPF, Gallager's algorithm [10], and the CODEX algorithm <ref> [13, 14] </ref>. It was shown that SPF with the old delay link cost function performs poorly compared to the other two algorithms in terms of packet delay under moderate to heavy traffic conditions.
Reference: [15] <author> J. M. Jaffe and F.H. Moss. </author> <title> A Responsive Distributed Routing Algorithm for Computer Networks. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-30(7):1758-1762, </volume> <month> July </month> <year> 1982. </year>
Reference-contexts: The ARPANET initially used this Distributed Bellman-Ford algorithm, but it was replaced in 1979 by a link state algorithm referred to as SPF (Shortest Path First) [19]. Since 1979, many new kinds of distance-vector algorithms have been proposed <ref> [20, 24, 15, 3, 11, 23] </ref> which achieve significantly reduced dissemination times by using node coordination mechanisms.
Reference: [16] <author> Dale Johnson. </author> <title> NSFnet Report. </title> <booktitle> In Proc. of the Nineteenth Internet Engineering Task Force, </booktitle> <pages> pages 377-382, </pages> <institution> University of Colorado, National Center for Atmospheric Research, </institution> <month> December </month> <year> 1990. </year>
Reference-contexts: The link-cost update period is uniformly distributed with mean 10 seconds and standard deviation 1 second. (These values were obtained from [19] [17], and experimentation [25].) Workload We use only FTP source-sink pairs (this is a major NSFNET application <ref> [16] </ref>).
Reference: [17] <author> A. Khanna and J. Zinky. </author> <title> A Revised ARPANET Routing Metric. </title> <booktitle> In Proc. ACM SIGCOMM '89, </booktitle> <pages> pages 45-56, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: There is previous work examining these algorithms individually, and we mention experimental, simulation, and analytic approaches. Regarding experimental approaches, a series of tests was performed on the ARPANET to evaluate its new routing algorithm (i.e. SPF) [19] and its new link cost function (i.e. hop-normalized delay function) <ref> [17] </ref>. The tests showed that the new algorithm and cost function give better performance than the old ARPANET algorithm (i.e. Distributed Bellman-Ford) and the old delay function. Regarding simulation approaches, reference [4] concluded that an adaptive strategy is needed in a skewed workload environment. <p> We then describe the range of parameters exercised in our simulations and the performance measures obtained. Assumptions and parameters were predetermined either consistently with those made in the literature, e.g. [19] <ref> [17] </ref> [12] [4], or from statistics provided by Merit/NSFNET Information Services, or by experimentation. 4.1 Overview of MaRS Our simulation studies were done on a recently developed discrete-event simulator, MaRS (Maryland Routing Simulator). It provides a flexible platform for the evaluation and comparison of network routing algorithms. <p> MaRS currently provides three routing algorithms, SPF, MS, ExBF (described in section 3). MaRS currently provides four types of link cost functions based on hop count, utilization, delay, and hop-normalized delay. The link cost function used in this paper is the hop normalized delay function of the ARPANET <ref> [19, 17] </ref>. <p> The link-cost update period is uniformly distributed with mean 10 seconds and standard deviation 1 second. (These values were obtained from [19] <ref> [17] </ref>, and experimentation [25].) Workload We use only FTP source-sink pairs (this is a major NSFNET application [16]).
Reference: [18] <author> L. Kleinrock. </author> <title> Queueing Systems, </title> <booktitle> Volume II: Computer Applications. </booktitle> <publisher> John Wiley and Sons, Inc., </publisher> <year> 1976. </year>
Reference-contexts: Thus, the number of packets generated per second, also referred to as the workload in this section, grows linearly with the number of source-sink pairs. We expect the throughput, delay and data load to be related to the workload in a manner typical of open queueing networks <ref> [18] </ref>. That is, the throughput should equal the workload as long as the workload is less than the system capacity (for workload higher than the system capacity the system is unstable). <p> Therefore, we expect the throughput, delay and data load to be related to the workload in a manner typical of closed queueing networks <ref> [18] </ref>. That is, as the workload increases, the throughput (and data load) increase linearly at first and then slower (at which point packets are being generated at higher rate than they are being accepted into the network). The delay increases very slowly at first and then linearly.
Reference: [19] <author> J. M. McQuillan, I. Richer, and E. C. Rosen. </author> <title> The New Routing Algorithm for the ARPANET. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-28(5):711-719, </volume> <month> May </month> <year> 1980. </year>
Reference-contexts: The ARPANET initially used this Distributed Bellman-Ford algorithm, but it was replaced in 1979 by a link state algorithm referred to as SPF (Shortest Path First) <ref> [19] </ref>. Since 1979, many new kinds of distance-vector algorithms have been proposed [20, 24, 15, 3, 11, 23] which achieve significantly reduced dissemination times by using node coordination mechanisms. <p> There is previous work examining these algorithms individually, and we mention experimental, simulation, and analytic approaches. Regarding experimental approaches, a series of tests was performed on the ARPANET to evaluate its new routing algorithm (i.e. SPF) <ref> [19] </ref> and its new link cost function (i.e. hop-normalized delay function) [17]. The tests showed that the new algorithm and cost function give better performance than the old ARPANET algorithm (i.e. Distributed Bellman-Ford) and the old delay function. <p> We then describe the range of parameters exercised in our simulations and the performance measures obtained. Assumptions and parameters were predetermined either consistently with those made in the literature, e.g. <ref> [19] </ref> [17] [12] [4], or from statistics provided by Merit/NSFNET Information Services, or by experimentation. 4.1 Overview of MaRS Our simulation studies were done on a recently developed discrete-event simulator, MaRS (Maryland Routing Simulator). It provides a flexible platform for the evaluation and comparison of network routing algorithms. <p> MaRS currently provides three routing algorithms, SPF, MS, ExBF (described in section 3). MaRS currently provides four types of link cost functions based on hop count, utilization, delay, and hop-normalized delay. The link cost function used in this paper is the hop normalized delay function of the ARPANET <ref> [19, 17] </ref>. <p> The link-cost update period is uniformly distributed with mean 10 seconds and standard deviation 1 second. (These values were obtained from <ref> [19] </ref> [17], and experimentation [25].) Workload We use only FTP source-sink pairs (this is a major NSFNET application [16]).
Reference: [20] <author> P. M. Merlin and A. Segall. </author> <title> A Failsafe Distributed Routing Protocol. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-27(9):1280-1287, </volume> <month> September </month> <year> 1979. </year>
Reference-contexts: The ARPANET initially used this Distributed Bellman-Ford algorithm, but it was replaced in 1979 by a link state algorithm referred to as SPF (Shortest Path First) [19]. Since 1979, many new kinds of distance-vector algorithms have been proposed <ref> [20, 24, 15, 3, 11, 23] </ref> which achieve significantly reduced dissemination times by using node coordination mechanisms. <p> In all cases, we consider the NSFNET-backbone network and a hop-normalized link cost function. We compare SPF and two recently proposed distance-vector algorithms, namely Merlin-Segall <ref> [20, 24] </ref> henceforth called MS, and Extended Bellman-Ford [3] henceforth called ExBF. The file transfer workload we consider is specified in terms of source-sink pairs.
Reference: [21] <author> B. P. Mohanty, C. G. Cassandras, and D. Towsley. </author> <title> Performance Comparison of Routing Algorithms in Packet Switched Networks. </title> <booktitle> In Proc. IEEE Globecom '90, </booktitle> <address> San Diego, California, </address> <year> 1990. </year>
Reference-contexts: Reference [28] compared SPF, Distributed Bellman-Ford and DUAL algorithms with respect to measures such as number of paths with loops after a node/link change. However, it has no workload and assumes unit link delays and zero processing time at the nodes. Reference <ref> [21] </ref> compared SPF, Gallager's algorithm [10], and the CODEX algorithm [13, 14]. It was shown that SPF with the old delay link cost function performs poorly compared to the other two algorithms in terms of packet delay under moderate to heavy traffic conditions.
Reference: [22] <author> D. J. Nelson, K. Sayood, and H. Chang. </author> <title> An Extended Least-Hop Distributed Routing Algorithm. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 38(4) </volume> <pages> 520-528, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: In [26], the original and new ARPANET algorithms (i.e. Distributed Bellman-Ford and SPF) were evaluated in a comparison with two hierarchical extensions to these algorithms. It was observed that a shorter link-cost update period should be used for higher data workload. Multi-path extensions to SPF were proposed in <ref> [22] </ref> and [27], and were shown to perform better. Reference [28] compared SPF, Distributed Bellman-Ford and DUAL algorithms with respect to measures such as number of paths with loops after a node/link change. However, it has no workload and assumes unit link delays and zero processing time at the nodes.
Reference: [23] <author> B. Rajagopalan and M. Faiman. </author> <title> A New Responsive Distributed Shortest-Path Routing Algorithm. </title> <booktitle> In Proc. ACM SIGCOMM '89, </booktitle> <pages> pages 237-246, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: The ARPANET initially used this Distributed Bellman-Ford algorithm, but it was replaced in 1979 by a link state algorithm referred to as SPF (Shortest Path First) [19]. Since 1979, many new kinds of distance-vector algorithms have been proposed <ref> [20, 24, 15, 3, 11, 23] </ref> which achieve significantly reduced dissemination times by using node coordination mechanisms. <p> The node chooses a neighbor with the minimum distance for a destination as the next hop towards that destination. It is well known that the straight-forward implementation of the above approach, in addition to short-lived next hop loops, can have long-lived loops of duration proportional to link cost changes <ref> [23] </ref>. The new distance-vector algorithms have mechanisms to avoid long-lived loops. MS is a distance-vector algorithm which avoids both short-lived and long-lived loops. For each destination, MS guarantees that the next hops on the nodes that can reach the destination form a tree rooted at the destination.
Reference: [24] <author> A. Segal. </author> <title> Advances in Verifiable Fail-Safe Routing Procedures. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-29(4):491-497, </volume> <month> April </month> <year> 1981. </year>
Reference-contexts: The ARPANET initially used this Distributed Bellman-Ford algorithm, but it was replaced in 1979 by a link state algorithm referred to as SPF (Shortest Path First) [19]. Since 1979, many new kinds of distance-vector algorithms have been proposed <ref> [20, 24, 15, 3, 11, 23] </ref> which achieve significantly reduced dissemination times by using node coordination mechanisms. <p> In all cases, we consider the NSFNET-backbone network and a hop-normalized link cost function. We compare SPF and two recently proposed distance-vector algorithms, namely Merlin-Segall <ref> [20, 24] </ref> henceforth called MS, and Extended Bellman-Ford [3] henceforth called ExBF. The file transfer workload we consider is specified in terms of source-sink pairs.
Reference: [25] <author> A. Udaya Shankar, Cengiz Alaettinoglu, Ibrahim Matta, and Klaudia Dussa-Zieger. </author> <title> Performance Comparison of Routing Protocols using MaRS: Distance-Vector versus Link-State. </title> <booktitle> In Proc. ACM SIGMETRICS and PERFORMANCE, </booktitle> <pages> pages 181-192, </pages> <address> Newport, Rhode Island, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: Under uniform workload, MS and ExBF are about equivalent (with ExBF being slightly better), while SPF does significantly worse. We give more importance to hotspot workload than to uniform workload, because we believe that it is more representative of real-life network conditions. Elsewhere <ref> [25] </ref>, we have used MaRS to compare the three routing algorithms under static file transfer workload, for varying link cost functions, varying link failure and repair characteristics, and regular and high-speed versions of the NSFNET-backbone. <p> The link-cost update period is uniformly distributed with mean 10 seconds and standard deviation 1 second. (These values were obtained from [19] [17], and experimentation <ref> [25] </ref>.) Workload We use only FTP source-sink pairs (this is a major NSFNET application [16]). <p> This means that short-lived loops do not cause congestion. And the diffusion computation mechanism used 3 We have observed that SPF has higher oscillations in instantaneous delay compared to ExBF and MS under uniform workload around saturation <ref> [25] </ref>. We have not checked for oscillations in routes. by MS causes MS to adapt too slowly. (These conclusions held even in the high-speed network we studied in [25].) ExBF has a worst-case exponential message complexity (O (2 N )), which is much higher than that of SPF (O (E)) and <p> 3 We have observed that SPF has higher oscillations in instantaneous delay compared to ExBF and MS under uniform workload around saturation <ref> [25] </ref>. We have not checked for oscillations in routes. by MS causes MS to adapt too slowly. (These conclusions held even in the high-speed network we studied in [25].) ExBF has a worst-case exponential message complexity (O (2 N )), which is much higher than that of SPF (O (E)) and that of MS (O (H fi E)), where N is the number of network nodes, E is the number of network links, and H is the length of
Reference: [26] <author> W.T. Tsai, C. Ramamoorthy, W.K. Tsai, and O. Nishiguchi. </author> <title> An Adaptive Hierarchical Routing Protocol. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 38 </volume> <pages> 1059-1075, </pages> <month> August </month> <year> 1989. </year>
Reference-contexts: Distributed Bellman-Ford) and the old delay function. Regarding simulation approaches, reference [4] concluded that an adaptive strategy is needed in a skewed workload environment. For SPF, it investigated the effects of the link cost function parameters and demonstrated optimal settings. In <ref> [26] </ref>, the original and new ARPANET algorithms (i.e. Distributed Bellman-Ford and SPF) were evaluated in a comparison with two hierarchical extensions to these algorithms. It was observed that a shorter link-cost update period should be used for higher data workload.
Reference: [27] <author> Z. Wang and J. Crowcroft. </author> <title> Shortest Path First with Emergency Exits. </title> <booktitle> In Proc. ACM SIG-COMM '90, </booktitle> <pages> pages 166-176, </pages> <month> September </month> <year> 1990. </year>
Reference-contexts: Distributed Bellman-Ford and SPF) were evaluated in a comparison with two hierarchical extensions to these algorithms. It was observed that a shorter link-cost update period should be used for higher data workload. Multi-path extensions to SPF were proposed in [22] and <ref> [27] </ref>, and were shown to perform better. Reference [28] compared SPF, Distributed Bellman-Ford and DUAL algorithms with respect to measures such as number of paths with loops after a node/link change. However, it has no workload and assumes unit link delays and zero processing time at the nodes.
Reference: [28] <author> W. Zaumen and J.J. Garcia-Luna-Aceves. </author> <title> Dynamics of Distributed Shortest-path Routing Algorithms. </title> <booktitle> In Proc. ACM SIGCOMM '91, </booktitle> <month> September </month> <year> 1991. </year>
Reference-contexts: Distributed Bellman-Ford and SPF) were evaluated in a comparison with two hierarchical extensions to these algorithms. It was observed that a shorter link-cost update period should be used for higher data workload. Multi-path extensions to SPF were proposed in [22] and [27], and were shown to perform better. Reference <ref> [28] </ref> compared SPF, Distributed Bellman-Ford and DUAL algorithms with respect to measures such as number of paths with loops after a node/link change. However, it has no workload and assumes unit link delays and zero processing time at the nodes.
References-found: 28

