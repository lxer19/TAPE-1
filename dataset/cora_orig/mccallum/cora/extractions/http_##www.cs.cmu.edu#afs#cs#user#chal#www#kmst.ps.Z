URL: http://www.cs.cmu.edu/afs/cs/user/chal/www/kmst.ps.Z
Refering-URL: http://www.cs.cmu.edu/~chal/Pubs/pub.html
Root-URL: 
Title: A CONSTANT-FACTOR APPROXIMATION ALGORITHM FOR THE GEOMETRIC K-MST PROBLEM IN THE PLANE for the L
Author: JOSEPH S. B. MITCHELL AVRIM BLUM PRASAD CHALASANI AND SANTOSH VEMPALA 
Keyword: Key words. minimum spanning trees, k-MST, guillotine subdivisions, quota traveling salesman problem, prize-collecting salesman, and bank robber (orienteering) problem, network optimization, computational geometry, dynamic programming, approximation algorithms polynomial  
Note: 2 (resp., 3:266)  allowed (resp., not allowed).  AMS subject classifications. 68Q25, 68R10, 68U05  
Abstract: We show that any rectilinear polygonal subdivision in the plane can be converted into a "guillotine" subdivision whose length is at most twice that of the original subdivision. "Guillotine" subdivisions have a simple recursive structure that allows one to search for "optimal" such subdivisions in polynomial time, using dynamic programming. In particular, a consequence of our main theorem is a very simple proof that the k-MST problem in the plane has a constant factor polynomial-time approximation algorithm: We obtain a factor of 2 (resp., 3) for the L 1 metric, and a factor of 2 p 1. Introduction. We introduce a new technique that can be used to obtain simple approximation algorithms for geometric network design problems. The method is 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Arora, </author> <title> Polynomial time approximation schemes for Euclidean TSP and other geometric problems, </title> <type> Manuscript, </type> <month> March 30, </month> <year> 1996. </year> <note> Appears in Proc. 37th Annu. </note> <institution> IEEE Sympos. Found. Comput. </institution> <year> Sci.(1996), </year> <pages> pp. 2-12. </pages>
Reference-contexts: Thus, since A x A y , we get that R 1 R 1 0 g (y)dy 0. Thus, it cannot be that for all values of y 2 <ref> [0; 1] </ref>, h (y) &lt; g (y), so there exists a y = y fl for which h (y fl ) g (y fl ). <p> This problem is known to be NP-hard, and previously had an O (log n) approximation algorithm [17]. 7. Conclusion. In conclusion, we mention some of the exciting developments that have happened in the time since this paper was written. In the spring of 1996, S. Arora <ref> [1] </ref> announced a remarkable result | he had found a polynomial-time approximation scheme, (PTAS) for the Euclidean traveling salesperson problem (TSP), as well as other geometric optimization problems, such as the Steiner tree problem, the k-MST problem, etc. 2 Then, some weeks later, Mitchell [19] discovered that, in fact, a very
Reference: [2] <author> B. Awerbuch, Y. Azar, A. Blum, and S. Vempala, </author> <title> Improved approximation guarantees for minimum-weight k-trees and prize-collecting salesmen, </title> <booktitle> Proc. 27th Annu. ACM Sympos. Theory Comput. </booktitle> <year> (1995), </year> <pages> pp. 277-283. </pages>
Reference-contexts: In those papers, the problem is shown to be NP-complete, and Ravi et al. give an approximation algorithm with factor O ( k). Algorithms with improved approximation factors have since been discovered: Awerbuch et al. <ref> [2] </ref> obtain factor O (log 2 k), and Rajagopalan and Vazirani [20] obtain O (log k). <p> It then calls itself recursively k 1 times for each of the two boxes B i : in each call passing down the set of points in B i , a new integer k 0 2 <ref> [2; k] </ref>, and the set of required points it was originally given (only considering those that lie in the box B i ) including the new point p. <p> A direct application of the above yields a time bound of O (n log n + nk 30 ), which is an improvement when k is small compared with n. Remark:. Awerbuch et al. <ref> [2] </ref> discuss both "rooted" and "unrooted" versions of the k-MST problem. In the "rooted" version of the problem, we are given a specified point, r, and we must use r as one of the k points in the MST. <p> Other Applications. Our methods also apply to three other problems that are related to the k-MST, and for which approximation algorithms for the graph versions have been given by Awerbuch et al. <ref> [2] </ref>: 1. In the quota-driven salesman problem, each point of P has an associated integral value w i , and a salesman has a given integer quota, R. <p> This algorithm runs in time polynomial in n and R. One open problem is to extend the algorithm to run in time polynomial in n and log R, which holds for the algorithm of Awerbuch et al. <ref> [2] </ref>. 2. <p> of P , and the objective function is now to minimize the sum of the distances traveled plus the sum of the penalties on the points not visited, subject to satisfying the quota R. (Thus, if all penalties are 0, we simply get the quota-driven salesman problem.) As mentioned in <ref> [2] </ref>, an approximation of PCTSP follows immediately from concatenating a tour obtained for the quota-driven salesman, with the 2-approximation tour given by the algorithm of Goemans and Williamson [15] (which considers the effect of penalties, but does not use the quota constraint). 3. <p> MITCHELL, A. BLUM, P. CHALASANI, AND S. VEMPALA to travel a distance d, maximize the total value R of all points visited. As in <ref> [2] </ref>, we can obtain an approximation for this problem, based on "guessing" the value of R, running the approximation for the quota-driven salesman for quota R, breaking the path into subpaths of length d=2, and then picking the subpath of highest value.
Reference: [3] <author> E. Balas, </author> <title> The prize collecting traveling salesman problem, Networks, </title> <booktitle> 19 (1989), </booktitle> <pages> pp. 621-636. </pages>
Reference-contexts: One open problem is to extend the algorithm to run in time polynomial in n and log R, which holds for the algorithm of Awerbuch et al. [2]. 2. In the prize collecting salesman problem (or, PCTSP), as studied by Balas <ref> [3] </ref> (see also [4]), the setup is the same as in the quota-driven salesman problem, except that, in addition to "values" w i , there are non-negative penalties associated with each point of P , and the objective function is now to minimize the sum of the distances traveled plus the
Reference: [4] <author> D. Bienstock, M. X. Goemans, D. Simchi-Levi, and D. Williamson, </author> <title> A note on the prize collecting traveling salesman problem, </title> <journal> Math. Prog., </journal> <volume> 59 (1993), </volume> <pages> pp. 413-420. </pages>
Reference-contexts: One open problem is to extend the algorithm to run in time polynomial in n and log R, which holds for the algorithm of Awerbuch et al. [2]. 2. In the prize collecting salesman problem (or, PCTSP), as studied by Balas [3] (see also <ref> [4] </ref>), the setup is the same as in the quota-driven salesman problem, except that, in addition to "values" w i , there are non-negative penalties associated with each point of P , and the objective function is now to minimize the sum of the distances traveled plus the sum of the
Reference: [5] <author> A. Blum, P. Chalasani, D. Coppersmith, B. Pulleyblank, P. Raghavan, and M. Sudan, </author> <title> The minimum latency problem, </title> <booktitle> Proc. 26th Annu. ACM Sympos. Theory Comput. </booktitle> <year> (1994), </year> <pages> pp. 163-171. </pages>
Reference-contexts: latency of a point p is the length of the tour from the starting point to the point p. (Thus, the latency of a point measures how long a job at that point must wait before being served by the repairman/deliveryman that is traveling along the tour.) Blum et al. <ref> [5] </ref> have given an approximation algorithm with a constant factor bound of 128; this bound has recently been improved by Goemans and Kleinberg [14] to 29. By a direct application of Theorem 2 of [5], which states that a c-approximation for the k-MST implies an 8c-approximation for the MLP, we see <p> wait before being served by the repairman/deliveryman that is traveling along the tour.) Blum et al. <ref> [5] </ref> have given an approximation algorithm with a constant factor bound of 128; this bound has recently been improved by Goemans and Kleinberg [14] to 29. By a direct application of Theorem 2 of [5], which states that a c-approximation for the k-MST implies an 8c-approximation for the MLP, we see that our results immediately imply a 24-approximation algorithm for the L 1 metric MLP and a 26:13-approximation algorithm for the L 2 metric MLP, for points in the plane.
Reference: [6] <author> A. Blum, P. Chalasani, and S. Vempala, </author> <title> A constant-factor approximation for the k-MST problem in the plane, </title> <booktitle> Proc. 27th Annu. ACM Sympos. Theory Comput. </booktitle> <year> (1995), </year> <pages> pp. 294-302. </pages>
Reference-contexts: Algorithms with improved approximation factors have since been discovered: Awerbuch et al. [2] obtain factor O (log 2 k), and Rajagopalan and Vazirani [20] obtain O (log k). In the time since our work first appeared (in <ref> [6] </ref> and [18]), there have been further improvements in the approximation factors: Blum, Ravi, and Vempala [7] obtain a factor of 17, and, most recently, Garg [12] obtains a factor of 3. <p> In Section 6, we mention a few applications of our method to some problems that are related to the k-MST. This paper represents the contributions from two manuscripts: the work of Blum, Chalasani, and Vempala <ref> [6] </ref>, based on the notion of a "division tree", and the improvement and simplification to it given by Mitchell [18], based on the notion of "guillotine subdivisions". <p> Division Trees. In this section we define division trees, and describe a simple dynamic programming algorithm based on this notion that achieves a constant factor approximation to the k-MST problem. The proof of the approximation guarantee GEOMETRIC k-MST APPROXIMATION 3 appears in <ref> [6] </ref>. We do not present the proof here because in the next section we will describe a more powerful algorithm that achieves a better constant factor, and for which the proof is significantly simpler. <p> Also, it is not too hard to see that this algorithm finds the set of k points with the lightest division tree. What is shown in <ref> [6] </ref> is that for any set of points, the division tree of minimum weight is only a constant factor more costly than the minimum spanning tree. 3. Guillotine Subdivisions.
Reference: [7] <author> A. Blum, R. Ravi, and S. Vempala, </author> <title> A constant-factor approximation algorithm for the k-MST problem, </title> <booktitle> Proc. 28th Annu. ACM Sympos. Theory Comput. </booktitle> <year> (1996), </year> <pages> pp. 442-448. </pages>
Reference-contexts: In the time since our work first appeared (in [6] and [18]), there have been further improvements in the approximation factors: Blum, Ravi, and Vempala <ref> [7] </ref> obtain a factor of 17, and, most recently, Garg [12] obtains a factor of 3. Cheung and Kumar [8] have also considered the problem, which they call the "quorum-cast" problem and which arises in communication networks.
Reference: [8] <author> S. Y. Cheung and A. Kumar, </author> <title> Efficient quorumcast routing algorithms, </title> <booktitle> Proc. IEEE INFOCOM '94 Conference on Computer Communications, 2 (1994), </booktitle> <pages> pp. 840-847. </pages>
Reference-contexts: In the time since our work first appeared (in [6] and [18]), there have been further improvements in the approximation factors: Blum, Ravi, and Vempala [7] obtain a factor of 17, and, most recently, Garg [12] obtains a factor of 3. Cheung and Kumar <ref> [8] </ref> have also considered the problem, which they call the "quorum-cast" problem and which arises in communication networks.
Reference: [9] <author> D.-Z. Du, L.-Q. Pan, and M.-T. Shing, </author> <title> Minimum edge length guillotine rectangular partition, </title> <type> Report 02418-86, </type> <institution> Math. Sci. Res. Inst., Univ. California, Berkeley, </institution> <address> CA, </address> <year> 1986. </year>
Reference-contexts: See Figure 3.1 for an example of a guillotine subdivision, where we illustrate the entire tree of perfect cuts. (Each perfect cut is indicated with a small arrow.) Note that, in contrast with guillotine rectangular subdivisions (see <ref> [9, 17] </ref>), the guillotine subdivisions we study here are not restricted to have rectangular faces; rather, the faces of a guillotine subdivision are rectilinear polygons. In fact, it is precisely this distinction that permits us to get constant factor approximations, while the previous method of [17] obtained logarithmic factors. <p> The Main Theorem. We now show that any rectilinear subdivision can be converted into a guillotine subdivision, without increasing its length by much (at most doubling it). Our proof is inspired by the proof in <ref> [9] </ref> that any subdivision of a box (in &lt; 2 ) into rectangles can be converted into a "guillotine" rectangular subdivision of at most twice the length, by adding a new set of edges whose total length is small (charged off to the original edges of the subdivision). Theorem 4.1.
Reference: [10] <author> D. Eppstein, </author> <title> Faster geometric k-point MST approximation, </title> <type> Tech. Report 95-13, </type> <institution> Dept. Inform. Comput. Sci., Univ. California, </institution> <address> Irvine, CA, </address> <year> 1995. </year>
Reference-contexts: The problem is NP-hard. Ravi et al. [21] give an approximation algorithm with ratio O (k 1=4 ), which was quickly improved to a factor of O (log k) by Garg and Hochbaum [13] and Mata and Mitchell [17]. Eppstein <ref> [10] </ref> has improved the approximation ratio to O (log k= log log n), and has given general techniques to improve the running times (as a function of n) of existing algorithms; further, he shows that the exact k-MST problem can be solved in time 2 O (k logk) n + O <p> The polynomial time bound for solving the above recursions has a rather high exponent | O (n 15 k 2 ). One approach to improving this is to apply the following lemma of Eppstein <ref> [10] </ref>, which is obtained by doing a simple nearest-neighbor clustering: Lemma 5.2 (Eppstein 95).
Reference: [11] <author> M. Fischetti, H. W. Hamacher, K. Jtrnsten, and F. Maffioli, </author> <title> Weighted k-cardinality trees: complexity and polyhedral structure, Networks, </title> <booktitle> 24 (1994), </booktitle> <pages> pp. 11-21. </pages>
Reference-contexts: The k-MST problem was introduced independently by Fischetti et al. <ref> [11] </ref>, Zelikovsky and Lozevanu [22], and Ravi et al. [21]. In those papers, the problem is shown to be NP-complete, and Ravi et al. give an approximation algorithm with factor O ( k).
Reference: [12] <author> N. Garg, </author> <title> A 3-approximation for the minimum tree spanning k vertices, </title> <booktitle> Proc. 37th Annu. IEEE Sympos. Found. Comput. Sci.(1996), </booktitle> <pages> pp. 302-309. </pages>
Reference-contexts: In the time since our work first appeared (in [6] and [18]), there have been further improvements in the approximation factors: Blum, Ravi, and Vempala [7] obtain a factor of 17, and, most recently, Garg <ref> [12] </ref> obtains a factor of 3. Cheung and Kumar [8] have also considered the problem, which they call the "quorum-cast" problem and which arises in communication networks.
Reference: [13] <author> N. Garg and D. S. Hochbaum, </author> <title> An O(log k) approximation algorithm for the k minimum spanning tree problem in the plane, </title> <booktitle> Proc. 26th Annu. ACM Sympos. Theory Comput. </booktitle> <year> (1994), </year> <pages> pp. 432-438. </pages>
Reference-contexts: The problem is NP-hard. Ravi et al. [21] give an approximation algorithm with ratio O (k 1=4 ), which was quickly improved to a factor of O (log k) by Garg and Hochbaum <ref> [13] </ref> and Mata and Mitchell [17].
Reference: [14] <author> M. Goemans and J. Kleinberg, </author> <title> An improved approximation ratio for the minimum latency problem, </title> <booktitle> Proc. 7th ACM-SIAM Sympos. Discrete Algorithms (1996), </booktitle> <pages> pp. 152-158. </pages>
Reference-contexts: a point measures how long a job at that point must wait before being served by the repairman/deliveryman that is traveling along the tour.) Blum et al. [5] have given an approximation algorithm with a constant factor bound of 128; this bound has recently been improved by Goemans and Kleinberg <ref> [14] </ref> to 29.
Reference: [15] <author> M. Goemans and D. Williamson, </author> <title> General approximation technique for constrained forest problems, </title> <booktitle> Proc. 3rd ACM-SIAM Sympos. Discrete Algorithms (1992), </booktitle> <pages> pp. 307-315. </pages>
Reference-contexts: subject to satisfying the quota R. (Thus, if all penalties are 0, we simply get the quota-driven salesman problem.) As mentioned in [2], an approximation of PCTSP follows immediately from concatenating a tour obtained for the quota-driven salesman, with the 2-approximation tour given by the algorithm of Goemans and Williamson <ref> [15] </ref> (which considers the effect of penalties, but does not use the quota constraint). 3. In the bank robber (orienteering) problem, we are faced with essentially the dual of the quota-driven salesman problem: Given a gas tank that allows one 10 J. MITCHELL, A. BLUM, P. CHALASANI, AND S.
Reference: [16] <author> C. Mata and J. S. B. Mitchell, </author> <title> A constant factor approximation algorithm for the red-blue separation problem, </title> <type> Manuscript, </type> <institution> Dept. of Computer Science, SUNY Stony Brook, </institution> <address> NY, </address> <year> 1995. </year>
Reference-contexts: In a recent application of our guillotine subdivision results, Mata and Mitchell <ref> [16] </ref> have obtained a constant-factor approximation algorithm for the following red-blue separation problem: Given n points in the plane, each colored red or blue, find a shortest simple polygon separating red from blue.
Reference: [17] <author> C. Mata and J. S. B. Mitchell, </author> <title> Approximation algorithms for geometric tour and network design problems, </title> <booktitle> Proc. 11th Annu. ACM Sympos. </booktitle> <institution> Comput. Geom. </institution> <year> (1995), </year> <pages> pp. 360-369. </pages>
Reference-contexts: The problem is NP-hard. Ravi et al. [21] give an approximation algorithm with ratio O (k 1=4 ), which was quickly improved to a factor of O (log k) by Garg and Hochbaum [13] and Mata and Mitchell <ref> [17] </ref>. <p> See Figure 3.1 for an example of a guillotine subdivision, where we illustrate the entire tree of perfect cuts. (Each perfect cut is indicated with a small arrow.) Note that, in contrast with guillotine rectangular subdivisions (see <ref> [9, 17] </ref>), the guillotine subdivisions we study here are not restricted to have rectangular faces; rather, the faces of a guillotine subdivision are rectilinear polygons. In fact, it is precisely this distinction that permits us to get constant factor approximations, while the previous method of [17] obtained logarithmic factors. <p> In fact, it is precisely this distinction that permits us to get constant factor approximations, while the previous method of <ref> [17] </ref> obtained logarithmic factors. For example, in order to transform a "staircase" (rectilinear) polygon into a guillotine rectangular subdivision, we must increase its total edge length by a factor of (log n); in contrast, a staircase polygon is already a guillotine subdivision, according to our definition. 4. The Main Theorem. <p> This problem is known to be NP-hard, and previously had an O (log n) approximation algorithm <ref> [17] </ref>. 7. Conclusion. In conclusion, we mention some of the exciting developments that have happened in the time since this paper was written. In the spring of 1996, S.
Reference: [18] <author> J. S. B. Mitchell, </author> <title> Guillotine subdivisions approximate polygonal subdivisions: A simple new method for the geometric k-MST problem, </title> <booktitle> Proc. 7th ACM-SIAM Sympos. Discrete Algorithms (1996), </booktitle> <pages> pp. 402-408. </pages>
Reference-contexts: Algorithms with improved approximation factors have since been discovered: Awerbuch et al. [2] obtain factor O (log 2 k), and Rajagopalan and Vazirani [20] obtain O (log k). In the time since our work first appeared (in [6] and <ref> [18] </ref>), there have been further improvements in the approximation factors: Blum, Ravi, and Vempala [7] obtain a factor of 17, and, most recently, Garg [12] obtains a factor of 3. <p> This paper represents the contributions from two manuscripts: the work of Blum, Chalasani, and Vempala [6], based on the notion of a "division tree", and the improvement and simplification to it given by Mitchell <ref> [18] </ref>, based on the notion of "guillotine subdivisions". We will briefly describe the original "division tree" method of Blum et al., but will only give details of the simpler method of Mitchell [18]. 2. Division Trees. <p> based on the notion of a "division tree", and the improvement and simplification to it given by Mitchell <ref> [18] </ref>, based on the notion of "guillotine subdivisions". We will briefly describe the original "division tree" method of Blum et al., but will only give details of the simpler method of Mitchell [18]. 2. Division Trees. In this section we define division trees, and describe a simple dynamic programming algorithm based on this notion that achieves a constant factor approximation to the k-MST problem. The proof of the approximation guarantee GEOMETRIC k-MST APPROXIMATION 3 appears in [6]. <p> (PTAS) for the Euclidean traveling salesperson problem (TSP), as well as other geometric optimization problems, such as the Steiner tree problem, the k-MST problem, etc. 2 Then, some weeks later, Mitchell [19] discovered that, in fact, a very minor variation of the method and proof given in his earlier work <ref> [18] </ref>, and contained in this paper, also gives a particularly simple PTAS for geometric instances of the TSP, the k-MST, the Steiner tree problem, etc.
Reference: [19] <author> J. S. B. Mitchell, </author> <title> Guillotine subdivisions approximate polygonal subdivisions: A simple polynomial-time approximation scheme for geometric TSP, k-MST, and related problems, </title> <type> Manuscript, </type> <month> April 30, </month> <year> 1996. </year> <note> To appear, SIAM J. Comp. </note>
Reference-contexts: Arora [1] announced a remarkable result | he had found a polynomial-time approximation scheme, (PTAS) for the Euclidean traveling salesperson problem (TSP), as well as other geometric optimization problems, such as the Steiner tree problem, the k-MST problem, etc. 2 Then, some weeks later, Mitchell <ref> [19] </ref> discovered that, in fact, a very minor variation of the method and proof given in his earlier work [18], and contained in this paper, also gives a particularly simple PTAS for geometric instances of the TSP, the k-MST, the Steiner tree problem, etc. <p> GEOMETRIC k-MST APPROXIMATION 11 most (1 + p m )L.) See <ref> [19] </ref> for further details of the application of this extension. Acknowledgments. We thank D. Eppstein, M. Held, S. Khuller and C. Mata for comments and suggestions that improved this paper.
Reference: [20] <author> S. Rajagopalan and V. Vazirani, </author> <title> Logarithmic approximation of minimum weight k trees, </title> <type> Manuscript, </type> <year> 1995. </year>
Reference-contexts: In those papers, the problem is shown to be NP-complete, and Ravi et al. give an approximation algorithm with factor O ( k). Algorithms with improved approximation factors have since been discovered: Awerbuch et al. [2] obtain factor O (log 2 k), and Rajagopalan and Vazirani <ref> [20] </ref> obtain O (log k). In the time since our work first appeared (in [6] and [18]), there have been further improvements in the approximation factors: Blum, Ravi, and Vempala [7] obtain a factor of 17, and, most recently, Garg [12] obtains a factor of 3.
Reference: [21] <author> R. Ravi, R. Sundaram, M. V. Marathe, D. J. Rosenkrantz, and S. S. Ravi, </author> <title> Spanning trees short and small, </title> <booktitle> Proc. 5th ACM-SIAM Sympos. Discrete Algorithms (1994), </booktitle> <pages> pp. 546-555. </pages>
Reference-contexts: The k-MST problem was introduced independently by Fischetti et al. [11], Zelikovsky and Lozevanu [22], and Ravi et al. <ref> [21] </ref>. In those papers, the problem is shown to be NP-complete, and Ravi et al. give an approximation algorithm with factor O ( k). <p> Specifically, we are given a set P of n points in the plane, and an integer k n, and we are to find a subset of k points of P that has the shortest minimum spanning tree. The problem is NP-hard. Ravi et al. <ref> [21] </ref> give an approximation algorithm with ratio O (k 1=4 ), which was quickly improved to a factor of O (log k) by Garg and Hochbaum [13] and Mata and Mitchell [17].
Reference: [22] <author> A. Zelikovsky and D. Lozevanu, </author> <title> Minimal and bounded trees, </title> <institution> Tezele Cong. XVIII Acad. Romano-Americane, </institution> <month> Kishinev </month> <year> (1993), </year> <pages> pp. 25-26. </pages>
Reference-contexts: The k-MST problem was introduced independently by Fischetti et al. [11], Zelikovsky and Lozevanu <ref> [22] </ref>, and Ravi et al. [21]. In those papers, the problem is shown to be NP-complete, and Ravi et al. give an approximation algorithm with factor O ( k).
References-found: 22

