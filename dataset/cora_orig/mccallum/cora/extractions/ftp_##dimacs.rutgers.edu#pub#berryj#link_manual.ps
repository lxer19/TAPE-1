URL: ftp://dimacs.rutgers.edu/pub/berryj/link_manual.ps
Refering-URL: http://dimacs.rutgers.edu/~berryj/LINK.html
Root-URL: http://www.cs.rutgers.edu
Email: berryj@numen.elon.edu  
Title: Link 1.2  
Author: Jonathan W. Berry 
Date: January 3, 1998  
Address: College, N.C.  
Affiliation: Elon  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> D. Berque, R. Cecchini, M. Goldberg, and R. Rivenburgh. </author> <title> The setplayer system for symbolic computation on power sets. </title> <journal> Journal of Symbolic Computation, </journal> <volume> 14 </volume> <pages> 645-662, </pages> <year> 1992. </year>
Reference-contexts: the development of GraphLab [12], Nate Dean was largely responsible for the package NETPAD at Bellcore [10] , Steve Skiena at State University at New York at Stony Brook had produced Combinatorica on top of Mathe-matica [13], and Mark Goldberg and his students at Rensselaer Polytechnic Institute had implemented SetPlayer <ref> [1] </ref>. Though these packages have many useful features, some overlapping and some not, none was complete or without significant drawbacks depending on the user and the application. These researchers wanted a more comprehensive package that would add new features and retain the positive aspects of their previous efforts. <p> is a hypergraph, it will not be reconstructable from the matrix, but the adjacency information will still be correct. 181 #include&lt;fstream.h&gt; #include&lt;LINK/graph/UBinGraph.h&gt; #include&lt;LINK/graph/Attribute.h&gt; void main () - UBinGraph g1; if (newAttribute ((Graph*)&g1, "test_attr", 1.0) != LINK_OK) error ("Attr.cpp: error creating test_attr"); g1.addVertices (2); Vertex** vertices = g1.vertexStart (); setAttribute ((GraphObject*)vertices <ref> [1] </ref>, "test_attr", 8.0); ofstream fout; fout.open ("g1.g", ios::out); g1.saveToFile (&fout); ifstream fin; fin.open ("g1.g", ios::in); char ch; while (fin.get (ch)) cout.put (ch); - Graph UBinGraph ( graph_name ("Graph0") name ("") direction (0) width (1) size (10) weight (1.00000) x (0.500000) color ("black") label ("") mark (0) type (0) starttime (0) finishtime
Reference: [2] <author> J. Berry, N. Dean, P. Fasel, M. Goldberg, E. Johnson, J. MacCuish, G. Shannon, and S. Skiena. </author> <title> Link: A combinatorics and graph theory workbench for applications and research. </title> <type> Technical Report 95-15, </type> <note> Center for Discrete Mathematics and Theoretical Computer Science (see also: http://dimacs.rutgers.edu), Piscataway, </note> <institution> NJ, </institution> <year> 1995. </year>
Reference-contexts: O (n) Array&lt;Item&gt; a ( (Container&lt;Item&gt;&) c); Creates an dynamic array with storage of default size and initializes it with the elements of c. Note that the storage may be reallocated during this process. O (n) 2. Operations 112 #include&lt;iostream.h&gt; #include&lt;LINK/basic/Array.h&gt; main () - Array&lt;int&gt; l; l.insert (3); l <ref> [2] </ref> = 4; cout &lt;< l &lt;< endl; int i, count = l.size (); for (i=0; i&lt;count; i++) cout &lt;< l [i] &lt;< " "; cout &lt;< endl; Iterator&lt;int&gt; it (&l); int element; while (it (element)) cout &lt;< element &lt;< " "; cout &lt;< endl; - 3 0 4 113 Array&lt;Item&gt;&
Reference: [3] <author> J. Bondy and U. Murty. </author> <title> Graph Theory with Applications. </title> <publisher> North-Holland, </publisher> <year> 1976. </year>
Reference-contexts: AsymMatrix&lt;int&gt; LaplacianMatrix (Matrix&lt;int&gt;& m); Returns the product of matrix m and its transpose. 193 3 The Graph Hierarchy 4 Graph Operations The unary and binary graph operations are listed below. For a discussion of the meaning of each operation, see <ref> [3] </ref> (for example). Note that each operation returns MHyperGraph. This allows the programmer maximum flexibility with respect to graph type. The Graphclass constructors make it easy to convert the result into a more specific form.
Reference: [4] <author> N. Dean and G. E. Shannon, </author> <title> editors. Computational Support for Discrete Mathematics. </title> <journal> American Mathematical Society, 1993. DIMACS Series in Discrete Mathematics and Theoretical Computer Science, </journal> <volume> Volume 15. </volume>
Reference-contexts: The magnitude of such a project exceeds the efforts made so far by the researchers and research groups responsible for the existing systems. A good discussion of software packages for discrete math is found in <ref> [4, 14, 9] </ref>. From the standpoint of a theoretician or an applications researcher, there are several features which characterize a useful software tool for their work. First of all, it is essential to have a set of libraries that are efficient, easy to use, robust, and extensible.
Reference: [5] <author> Charles M. Fiduccia and R. M. Mattheyses. </author> <title> A linear-time heuristic for improving network partitions. </title> <booktitle> In Proceedings of the 19 th IEEE Design Automation Conference, </booktitle> <pages> pages 175-181, </pages> <year> 1982. </year>
Reference-contexts: Suppose further that our algorithm has its own associated header file and two associated source files. The following sections will describe the integration process with a definite example: the Kernighan-Lin partitioning algorithm <ref> [7, 5] </ref>.
Reference: [6] <author> E. Gallesio. </author> <title> The stk reference manual. </title> <type> Technical Report RT 95-31a, </type> <institution> I3S CNRS, Universite de Nice - Sophia Antipolis, France, </institution> <year> 1995. </year>
Reference-contexts: Part II Graphical User Interface 14 1 General LINK's graphical user interface (GUI) has been written in such a way that extensions and changes are much easier than would be possible with an XWindows application. Erick Gallesio's object-oriented Scheme interface (STk) <ref> [6] </ref> to John Ousterhout's Tk graphics package [11] makes this possible. It is not necessary to know any further details of these packages in order to use LINK effectively, but the LINK User's Manual (see Page ?? describes how to make effective use of some power features of the system.
Reference: [7] <author> B. W. Kernighan and S. Lin. </author> <title> An efficient heuristic procedure for partitioning graphs. </title> <journal> Bell System Technical Journal, </journal> <volume> 49 </volume> <pages> 291-307, </pages> <year> 1970. </year>
Reference-contexts: Suppose further that our algorithm has its own associated header file and two associated source files. The following sections will describe the integration process with a definite example: the Kernighan-Lin partitioning algorithm <ref> [7, 5] </ref>.
Reference: [8] <author> B. McKay. </author> <title> nauty user's guide (version 1.5). </title> <type> Technical Report TR-CS-90-02, </type> <institution> Department of Computer Science, Australian National University, Australia, </institution> <year> 1990. </year>
Reference-contexts: A window appears indicating whether the graphs 25 are isomorphic or not. The actual isomorphism testing is performed by Brendan McKay's nauty system <ref> [8] </ref>. * Graph Sum * Graph Product * Lexicographic Product 26 Part III User's Manual 27 7 Introduction Let's begin with an example.
Reference: [9] <author> K. Mehlhorn and S. Nahger. Leda: </author> <title> A platform for combinatorial and geometric computing. </title> <journal> CACM, </journal> <volume> 38(1) </volume> <pages> 96-102, </pages> <month> Jan </month> <year> 1995. </year>
Reference-contexts: The magnitude of such a project exceeds the efforts made so far by the researchers and research groups responsible for the existing systems. A good discussion of software packages for discrete math is found in <ref> [4, 14, 9] </ref>. From the standpoint of a theoretician or an applications researcher, there are several features which characterize a useful software tool for their work. First of all, it is essential to have a set of libraries that are efficient, easy to use, robust, and extensible.
Reference: [10] <author> M. Mevenkamp, N. Dean, and C. Monma. </author> <title> NETPAD user's guide and reference guide, </title> <year> 1990. </year>
Reference-contexts: Each had already directed similar projects. Greg Shannon of Indiana University had organized the development of GraphLab [12], Nate Dean was largely responsible for the package NETPAD at Bellcore <ref> [10] </ref> , Steve Skiena at State University at New York at Stony Brook had produced Combinatorica on top of Mathe-matica [13], and Mark Goldberg and his students at Rensselaer Polytechnic Institute had implemented SetPlayer [1].
Reference: [11] <author> J. Ousterhout. </author> <title> Tcl and the Tk Toolkit. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: Part II Graphical User Interface 14 1 General LINK's graphical user interface (GUI) has been written in such a way that extensions and changes are much easier than would be possible with an XWindows application. Erick Gallesio's object-oriented Scheme interface (STk) [6] to John Ousterhout's Tk graphics package <ref> [11] </ref> makes this possible. It is not necessary to know any further details of these packages in order to use LINK effectively, but the LINK User's Manual (see Page ?? describes how to make effective use of some power features of the system.
Reference: [12] <author> G. Shannon, L. Meeden, and D. Friedman. SchemeGraphs: </author> <title> An object-oriented environment for manipulating graphs, 1990. </title> <journal> Software and documentation. </journal> <volume> 207 </volume>
Reference-contexts: In July 1991, four researchers met at the SIAM conference for Applied Mathematics in Washington D.C. and discussed the possibility of creating a large software package for discrete mathematics. Each had already directed similar projects. Greg Shannon of Indiana University had organized the development of GraphLab <ref> [12] </ref>, Nate Dean was largely responsible for the package NETPAD at Bellcore [10] , Steve Skiena at State University at New York at Stony Brook had produced Combinatorica on top of Mathe-matica [13], and Mark Goldberg and his students at Rensselaer Polytechnic Institute had implemented SetPlayer [1].
Reference: [13] <author> S. Skiena. </author> <title> Implementing Discrete Mathematics: Combinatorics and Graph Theory with Mathematica. </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: Each had already directed similar projects. Greg Shannon of Indiana University had organized the development of GraphLab [12], Nate Dean was largely responsible for the package NETPAD at Bellcore [10] , Steve Skiena at State University at New York at Stony Brook had produced Combinatorica on top of Mathe-matica <ref> [13] </ref>, and Mark Goldberg and his students at Rensselaer Polytechnic Institute had implemented SetPlayer [1]. Though these packages have many useful features, some overlapping and some not, none was complete or without significant drawbacks depending on the user and the application.

References-found: 13

