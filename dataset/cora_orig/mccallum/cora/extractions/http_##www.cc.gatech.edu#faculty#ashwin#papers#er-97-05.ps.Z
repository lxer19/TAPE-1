URL: http://www.cc.gatech.edu/faculty/ashwin/papers/er-97-05.ps.Z
Refering-URL: http://www.cs.gatech.edu/faculty/ashwin/ABSTRACTS-summary.html
Root-URL: 
Email: markd@cc.gatech.edu  ashwin@cc.gatech.edu  
Title: Situation development in a complex real-world domain  
Author: Mark Devaney Ashwin Ram 
Keyword: situation development, pre-processing  
Address: Atlanta, GA 30332-0280  Atlanta, GA 30332-0280  
Affiliation: College of Computing Georgia Institute of Technology  College of Computing Georgia Institute of Technology  
Note: ICML-97 Workshop ML Application in the Real World, Nashville, TN, July 1997 (to appear).  
Abstract: Applying techniques from Machine Learning to real-world domains and problems often requires considerable processing of the input data, to both remove noise and to augment the amount and type of information present. We describe our work in the task of situation assessment in the domain of US Army training exercises involving hundreds of agents interacting in real-time over the course of several days. In particular, we describe techniques we have developed to process this data and draw general conclusions on the types of information required in order to apply various Machine Learning algorithms and how this information may be extracted in real-world situations where it is not directly represented.
Abstract-found: 1
Intro-found: 1
Reference: <institution> Army Headquarters. </institution> <year> (1990). </year> <title> FM 34-3 Intelligence Analysis. </title> <address> Washington D.C.: </address> <institution> Department of the Army. </institution>
Reference-contexts: This is the core of the situation development task and one of the central problems to be solved in pursuit of this task is the ability to identify events from low-level actions (Bares, et. al., 1994). In the domain of Army Intelligence analysis <ref> (ARMY, 1990) </ref>, events are a type of indicator, significant occurrences on the battlefield which have proven to be evidence for certain actions. For example, a large scale movement to the forward area may indicate preparation for an attack.
Reference: <author> Bares, M., Canamero, D., Delannoy, J., & Kodratoff, Y. </author> <year> (1994). </year> <title> XPLANS: Case-based Reasoning for Plan Recognition. </title> <journal> Applied Artificial Intelligence, </journal> <volume> 8, </volume> <pages> 617-634. </pages>
Reference-contexts: This is the core of the situation development task and one of the central problems to be solved in pursuit of this task is the ability to identify events from low-level actions <ref> (Bares, et. al., 1994) </ref>. In the domain of Army Intelligence analysis (ARMY, 1990), events are a type of indicator, significant occurrences on the battlefield which have proven to be evidence for certain actions. For example, a large scale movement to the forward area may indicate preparation for an attack.
Reference: <author> Box, G.E.P., Jenkins, G.M., & Reinsel, </author> <title> G.C. (1994) Time Series Analysis. </title> <address> Englewood Cliffs, New Jersey: </address> <publisher> Prentice Hall. </publisher>
Reference-contexts: We use the ARINA (autoregressive integrated moving average) forecasting model <ref> (Box, Jenkins, & Reinsel, 1994) </ref> to make predictions of unit positions various distances into the future.
Reference: <author> Cheeseman, P. & Stutz, J. </author> <year> (1995). </year> <title> Bayesian Classification (AutoClass): Theory and Results. </title> <editor> In U. Fayyad, </editor> <publisher> G. </publisher>
Reference-contexts: The Machine Learning technique of clustering can be a powerful tool for generating groups from single instances, which is exactly the problem faced in creating pseudo-echelon information from individual units. Our first attempt employed a hierarchical Bayesian clustering algorithm <ref> (Cheeseman & Stutz, 1995) </ref> which we hoped would not only generate second-order echelons, but the entire echelon hierarchy. However, this approach did not perform well as there was no bias in the algorithm to keeping units within the same group which caused the clusterings to appear and disappear very frequently.
Reference: <editor> Piatetsky-Shapiro, P. Smyth, & R. Uthurusamy (Eds.) </editor> <booktitle> Advances in Knowledge Discovery and Data Mining. </booktitle> <address> Menlo Park: </address> <publisher> The AAAI Press. </publisher>
Reference: <author> Cover, T.M. & Hart, P.E. </author> <year> (1967). </year> <title> Nearest neighbor pattern classification. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 13, </volume> <pages> 21-27. </pages>
Reference-contexts: Instead, we made the assumption that the initial deploy ment of the units on the battlefield corresponded at least roughly to the existing organizational structure and that this structure should be largely preserved over the course of an engagement. We employed a nearest neighbor clustering algorithm <ref> (Cover & Hart, 1967) </ref> to generate an initial set of clusters for the starting deployment of all the units on the battlefield.
Reference: <author> Huber, M. & Durfee, E. </author> <year> (1992). </year> <title> Plan Recognition for Real-World Autonomous Robots: </title> <booktitle> Work in Progress. In Working Notes: Applications of Artificial Intelligence to Real-World Autonomous Mobile Robots, AAAI Fall Symposium, </booktitle> <pages> pp. 68-75. </pages> <address> Boston, </address> <institution> MA : American Association for Artificial Intelligence. </institution>
Reference: <author> Ram, A. & Santamaria, J.C. </author> <year> (1997). </year> <title> Continuous Case-Based Reasoning. </title> <journal> Artificial Intelligence, </journal> <note> (90)1-2:25-77. (to appear) </note>
Reference-contexts: We intend to use this information as well in the plan recognition process. In order to produce a rough idea of the viability of this process we have attempted to recognize patterns in the indicators using the SINS continuous case-based reasoning system <ref> (Ram & Santamaria, 1997) </ref>. A simple evaluation has demonstrated that after training on one battle, the system can recognize similar patterns of indicators in a novel but visually similar battle. line plots. Each graph indicates the strength (0 - 1) of the corresponding indicator for each side.
References-found: 8

