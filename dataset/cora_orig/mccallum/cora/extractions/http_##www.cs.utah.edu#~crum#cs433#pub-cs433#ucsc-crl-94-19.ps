URL: http://www.cs.utah.edu/~crum/cs433/pub-cs433/ucsc-crl-94-19.ps
Refering-URL: http://www.cs.utah.edu/~crum/cs433/pub-cs433/
Root-URL: 
Email: moria@cs.ucsc.edu avg@cs.ucsc.edu wilhelms@cs.ucsc.edu  
Title: Direct Volume Rendering via 3D Textures  
Author: Orion Wilson, Allen Van Gelder, Jane Wilhelms 
Keyword: Computer Graphics, Scientific Visualization, 3D Texture Mapping, Direct Volume Rendering.  
Date: June 29, 1994  
Address: UCSC-CRL-94-19  Santa Cruz 95064  
Affiliation: Computer and Information Sciences University of California, Santa Cruz  Baskin Center for Computer Engineering and Information Sciences University of California,  
Abstract: The advent of very fast texture mapping hardware in modern graphics workstations has warranted research into rendering techniques that use texture mapping to full advantage. We have developed a new and easy to implement method for direct volume rendering that produces high-quality images at speeds approaching two orders of magnitude faster than existing techniques, on workstations with hardware support for three-dimensional texture maps. A rectilinear data set is converted into a three-dimensional texture map containing color and opacity information. In the rendering phase, the texture map is then applied to a stack of parallel planes, which effectively cut the texture into many slices. The slices are composited to form an image of the original data set. This paper describes the theory and implementation of this technique. 
Abstract-found: 1
Intro-found: 1
Reference: [Ake93] <author> Kurt Akeley. </author> <title> RealityEngine graphics. </title> <booktitle> Computer Graphics (ACM SIGGRAPH Proceedings), </booktitle> <volume> 27 </volume> <pages> 109-116, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: The former limitation may be inherent in the method, but the latter can be dealt with as described below. Akeley mentions the possibility of using a 3D texture map for volume rendering in his report on the design of the Silicon Graphics Reality Engine <ref> [Ake93] </ref>. Independently from the work presented here, three other papers have been written describing use of 3D texture mapping hardware for direct volume rendering. Cullip and Neumann sketch two approaches, which they call object space and image space, and apply them to CT data [CN93].
Reference: [CCF94] <author> Brian Cabral, Nancy Cam, and Jim Foran. </author> <title> Accelerated volume rendering and tomographic reconstruction using texture mapping hardware. </title> <note> 1994. (submitted for publication). </note>
Reference-contexts: Cullip and Neumann sketch two approaches, which they call object space and image space, and apply them to CT data [CN93]. Guan and Lipes discuss hardware issues [GL94]. Cabral, Cam and Foran describe how to use texture mapping hardware to accelerate numerical Radon transforms <ref> [CCF94] </ref>. All of the methods described require substantial programming to "hand compute" transformations, clipping, and the like, details of which are omitted. This paper describes how most of this programming can be eliminated by use of graphics library procedures to perform texture space transformations and set clipping planes.
Reference: [CN93] <author> T. J. Cullip and U. Newman. </author> <title> Accelerating volume reconstruction with 3d texture hardware. </title> <type> Technical Report TR93-027, </type> <institution> University of North Carolina, </institution> <address> Chapel Hill, N. C., </address> <year> 1993. </year>
Reference-contexts: Independently from the work presented here, three other papers have been written describing use of 3D texture mapping hardware for direct volume rendering. Cullip and Neumann sketch two approaches, which they call object space and image space, and apply them to CT data <ref> [CN93] </ref>. Guan and Lipes discuss hardware issues [GL94]. Cabral, Cam and Foran describe how to use texture mapping hardware to accelerate numerical Radon transforms [CCF94]. All of the methods described require substantial programming to "hand compute" transformations, clipping, and the like, details of which are omitted.
Reference: [DCH88] <author> Robert A. Drebin, Loren Carpenter, and Pat Hanrahan. </author> <title> Volume rendering. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 65-74, </pages> <month> July </month> <year> 1988. </year>
Reference-contexts: 1 Overview Rendering speed has always been a major problem in direct volume rendering, because all regions of the volume may contribute to the image, and because new orientations generally require considerable re-computation. A spectrum of methods offering different combinations of rendering speed versus image quality have been presented <ref> [DCH88, Sab88, UK88, Lev88, Kru90, Lev90, MHC90, Wes90, LH91, Lev92] </ref>. Some methods use hardware-assisted Gouraud-shading capabilities to speed rendering, by calculating the projections of volume regions and treating them as polygons [ST90, LH91, WVG91, Wil92, VGW93].
Reference: [GL94] <author> S. Guan and R. G. Lipes. </author> <title> Innovative volume rendering using 3d texture mapping. In SPIE: Medical Imaging 1994: Images Captures, Formatting and Display. </title> <booktitle> SPIE 2164, </booktitle> <year> 1994. </year>
Reference-contexts: Cullip and Neumann sketch two approaches, which they call object space and image space, and apply them to CT data [CN93]. Guan and Lipes discuss hardware issues <ref> [GL94] </ref>. Cabral, Cam and Foran describe how to use texture mapping hardware to accelerate numerical Radon transforms [CCF94]. All of the methods described require substantial programming to "hand compute" transformations, clipping, and the like, details of which are omitted.
Reference: [Kru90] <author> Wolfgang Krueger. </author> <title> Volume rendering and data feature enhancement. </title> <booktitle> Computer Graphics (Proceedings of the San Diego Workshop on Volume Visualization), </booktitle> <volume> 24(5):21 - 26, </volume> <year> 1990. </year>
Reference-contexts: 1 Overview Rendering speed has always been a major problem in direct volume rendering, because all regions of the volume may contribute to the image, and because new orientations generally require considerable re-computation. A spectrum of methods offering different combinations of rendering speed versus image quality have been presented <ref> [DCH88, Sab88, UK88, Lev88, Kru90, Lev90, MHC90, Wes90, LH91, Lev92] </ref>. Some methods use hardware-assisted Gouraud-shading capabilities to speed rendering, by calculating the projections of volume regions and treating them as polygons [ST90, LH91, WVG91, Wil92, VGW93].
Reference: [Lev88] <author> Marc Levoy. </author> <title> Display of surfaces from volume data. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 8(3) </volume> <pages> 29-37, </pages> <month> March </month> <year> 1988. </year>
Reference-contexts: 1 Overview Rendering speed has always been a major problem in direct volume rendering, because all regions of the volume may contribute to the image, and because new orientations generally require considerable re-computation. A spectrum of methods offering different combinations of rendering speed versus image quality have been presented <ref> [DCH88, Sab88, UK88, Lev88, Kru90, Lev90, MHC90, Wes90, LH91, Lev92] </ref>. Some methods use hardware-assisted Gouraud-shading capabilities to speed rendering, by calculating the projections of volume regions and treating them as polygons [ST90, LH91, WVG91, Wil92, VGW93].
Reference: [Lev90] <author> Marc Levoy. </author> <title> Efficient ray tracing of volume data. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 9(3) </volume> <pages> 245-261, </pages> <month> July </month> <year> 1990. </year> <month> 10 </month>
Reference-contexts: 1 Overview Rendering speed has always been a major problem in direct volume rendering, because all regions of the volume may contribute to the image, and because new orientations generally require considerable re-computation. A spectrum of methods offering different combinations of rendering speed versus image quality have been presented <ref> [DCH88, Sab88, UK88, Lev88, Kru90, Lev90, MHC90, Wes90, LH91, Lev92] </ref>. Some methods use hardware-assisted Gouraud-shading capabilities to speed rendering, by calculating the projections of volume regions and treating them as polygons [ST90, LH91, WVG91, Wil92, VGW93].
Reference: [Lev92] <author> Marc Levoy. </author> <title> Volume rendering using the fourier projection-slice theorem. </title> <booktitle> In Proceedings of Graphics Interface '92, </booktitle> <address> Vancouver, B.C., </address> <year> 1992. </year> <note> Also Stanford University Technical Report CSL-TR-92-521. </note>
Reference-contexts: 1 Overview Rendering speed has always been a major problem in direct volume rendering, because all regions of the volume may contribute to the image, and because new orientations generally require considerable re-computation. A spectrum of methods offering different combinations of rendering speed versus image quality have been presented <ref> [DCH88, Sab88, UK88, Lev88, Kru90, Lev90, MHC90, Wes90, LH91, Lev92] </ref>. Some methods use hardware-assisted Gouraud-shading capabilities to speed rendering, by calculating the projections of volume regions and treating them as polygons [ST90, LH91, WVG91, Wil92, VGW93].
Reference: [LH91] <author> David Laur and Pat Hanrahan. </author> <title> Hierarchical splatting: A progressive refinement algorithm for volume rendering. </title> <booktitle> Computer Graphics (ACM Siggraph Proceedings), </booktitle> <volume> 25(4) </volume> <pages> 285-288, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: 1 Overview Rendering speed has always been a major problem in direct volume rendering, because all regions of the volume may contribute to the image, and because new orientations generally require considerable re-computation. A spectrum of methods offering different combinations of rendering speed versus image quality have been presented <ref> [DCH88, Sab88, UK88, Lev88, Kru90, Lev90, MHC90, Wes90, LH91, Lev92] </ref>. Some methods use hardware-assisted Gouraud-shading capabilities to speed rendering, by calculating the projections of volume regions and treating them as polygons [ST90, LH91, WVG91, Wil92, VGW93]. <p> A spectrum of methods offering different combinations of rendering speed versus image quality have been presented [DCH88, Sab88, UK88, Lev88, Kru90, Lev90, MHC90, Wes90, LH91, Lev92]. Some methods use hardware-assisted Gouraud-shading capabilities to speed rendering, by calculating the projections of volume regions and treating them as polygons <ref> [ST90, LH91, WVG91, Wil92, VGW93] </ref>. In this paper, we present a new method that takes advantage of a more sophisticated capability of some new graphics computers: hardware-assisted 3D texture mapping.
Reference: [MHC90] <author> Nelson Max, Pat Hanrahan, and Roger Crawfis. </author> <title> Area and volume coherence for efficient visualization of 3d scalar functions. </title> <booktitle> Computer Graphics (ACM Workshop on Volume Visualization), </booktitle> <volume> 24(5) </volume> <pages> 27-33, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: 1 Overview Rendering speed has always been a major problem in direct volume rendering, because all regions of the volume may contribute to the image, and because new orientations generally require considerable re-computation. A spectrum of methods offering different combinations of rendering speed versus image quality have been presented <ref> [DCH88, Sab88, UK88, Lev88, Kru90, Lev90, MHC90, Wes90, LH91, Lev92] </ref>. Some methods use hardware-assisted Gouraud-shading capabilities to speed rendering, by calculating the projections of volume regions and treating them as polygons [ST90, LH91, WVG91, Wil92, VGW93].
Reference: [Sab88] <author> Paolo Sabella. </author> <title> A rendering algorithm for visualizing 3D scalar fields. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 51-58, </pages> <month> July </month> <year> 1988. </year>
Reference-contexts: 1 Overview Rendering speed has always been a major problem in direct volume rendering, because all regions of the volume may contribute to the image, and because new orientations generally require considerable re-computation. A spectrum of methods offering different combinations of rendering speed versus image quality have been presented <ref> [DCH88, Sab88, UK88, Lev88, Kru90, Lev90, MHC90, Wes90, LH91, Lev92] </ref>. Some methods use hardware-assisted Gouraud-shading capabilities to speed rendering, by calculating the projections of volume regions and treating them as polygons [ST90, LH91, WVG91, Wil92, VGW93].
Reference: [ST90] <author> Peter Shirley and Allan Tuchman. </author> <title> A polygonal approximation to direct scalar volume rendering. </title> <journal> Computer Graphics, </journal> <volume> 24(5) </volume> <pages> 63-70, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: A spectrum of methods offering different combinations of rendering speed versus image quality have been presented [DCH88, Sab88, UK88, Lev88, Kru90, Lev90, MHC90, Wes90, LH91, Lev92]. Some methods use hardware-assisted Gouraud-shading capabilities to speed rendering, by calculating the projections of volume regions and treating them as polygons <ref> [ST90, LH91, WVG91, Wil92, VGW93] </ref>. In this paper, we present a new method that takes advantage of a more sophisticated capability of some new graphics computers: hardware-assisted 3D texture mapping.
Reference: [UK88] <author> Craig Upson and Michael Keeler. </author> <title> The v-buffer: Visible volume rendering. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 59-64, </pages> <month> July </month> <year> 1988. </year>
Reference-contexts: 1 Overview Rendering speed has always been a major problem in direct volume rendering, because all regions of the volume may contribute to the image, and because new orientations generally require considerable re-computation. A spectrum of methods offering different combinations of rendering speed versus image quality have been presented <ref> [DCH88, Sab88, UK88, Lev88, Kru90, Lev90, MHC90, Wes90, LH91, Lev92] </ref>. Some methods use hardware-assisted Gouraud-shading capabilities to speed rendering, by calculating the projections of volume regions and treating them as polygons [ST90, LH91, WVG91, Wil92, VGW93].
Reference: [VGW93] <author> Allen Van Gelder and Jane Wilhelms. </author> <title> Rapid exploration of curvilinear grids using direct volume rendering. </title> <booktitle> In Visualization 93 Conference, </booktitle> <address> San Jose, CA, </address> <month> October </month> <year> 1993. </year> <note> IEEE. (extended abstract) Also, </note> <institution> University of California technical report UCSC-CRL-93-02. </institution>
Reference-contexts: A spectrum of methods offering different combinations of rendering speed versus image quality have been presented [DCH88, Sab88, UK88, Lev88, Kru90, Lev90, MHC90, Wes90, LH91, Lev92]. Some methods use hardware-assisted Gouraud-shading capabilities to speed rendering, by calculating the projections of volume regions and treating them as polygons <ref> [ST90, LH91, WVG91, Wil92, VGW93] </ref>. In this paper, we present a new method that takes advantage of a more sophisticated capability of some new graphics computers: hardware-assisted 3D texture mapping. <p> For a detailed explanation of this computation, see <ref> [WVG91, VGW93] </ref>, but briefly the formulas are: ff = ln 1 ff A = 1 e ff where E and C have three components, Red, Green and Blue. Note that C is well-defined as ff approaches 0, by taking a power series expansion.
Reference: [Wes90] <author> Lee Westover. </author> <title> Footprint evaluation for volume rendering. </title> <journal> Computer Graphics, </journal> <volume> 24(4) </volume> <pages> 367-76, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: 1 Overview Rendering speed has always been a major problem in direct volume rendering, because all regions of the volume may contribute to the image, and because new orientations generally require considerable re-computation. A spectrum of methods offering different combinations of rendering speed versus image quality have been presented <ref> [DCH88, Sab88, UK88, Lev88, Kru90, Lev90, MHC90, Wes90, LH91, Lev92] </ref>. Some methods use hardware-assisted Gouraud-shading capabilities to speed rendering, by calculating the projections of volume regions and treating them as polygons [ST90, LH91, WVG91, Wil92, VGW93].
Reference: [Wil92] <author> Peter Williams. </author> <title> Interactive splatting of nonrectilinear volumes. </title> <booktitle> In Visualization '92, </booktitle> <pages> pages 37-44. </pages> <publisher> IEEE, </publisher> <month> October </month> <year> 1992. </year>
Reference-contexts: A spectrum of methods offering different combinations of rendering speed versus image quality have been presented [DCH88, Sab88, UK88, Lev88, Kru90, Lev90, MHC90, Wes90, LH91, Lev92]. Some methods use hardware-assisted Gouraud-shading capabilities to speed rendering, by calculating the projections of volume regions and treating them as polygons <ref> [ST90, LH91, WVG91, Wil92, VGW93] </ref>. In this paper, we present a new method that takes advantage of a more sophisticated capability of some new graphics computers: hardware-assisted 3D texture mapping.
Reference: [WVG91] <author> Jane Wilhelms and Allen Van Gelder. </author> <title> A coherent projection approach for direct volume rendering. </title> <booktitle> Computer Graphics (Proceedings ACM Siggraph), </booktitle> <volume> 25(4) </volume> <pages> 275-284, </pages> <year> 1991. </year> <month> 11 </month>
Reference-contexts: A spectrum of methods offering different combinations of rendering speed versus image quality have been presented [DCH88, Sab88, UK88, Lev88, Kru90, Lev90, MHC90, Wes90, LH91, Lev92]. Some methods use hardware-assisted Gouraud-shading capabilities to speed rendering, by calculating the projections of volume regions and treating them as polygons <ref> [ST90, LH91, WVG91, Wil92, VGW93] </ref>. In this paper, we present a new method that takes advantage of a more sophisticated capability of some new graphics computers: hardware-assisted 3D texture mapping. <p> For example, as shown in Table 1 rendering is 14 to 140 times faster than coherent projection, which is itself considered a fast method <ref> [WVG91] </ref>. The conversion into the texture map need only be done once, and then the volume can be rendered arbitrarily scaled, translated, and rotated. Resulting images have definition and clarity comparable to other rendering methods. <p> For a detailed explanation of this computation, see <ref> [WVG91, VGW93] </ref>, but briefly the formulas are: ff = ln 1 ff A = 1 e ff where E and C have three components, Red, Green and Blue. Note that C is well-defined as ff approaches 0, by taking a power series expansion. <p> The speed overhead incurred is about one tenth of a second per texture map to copy the texture from regular memory into texture memory. 3 Experimental Results We compared 3D texture-mapped direct volume rendering using our program voltx under different user-settings, and also compared to coherent projection direct volume rendering <ref> [WVG91] </ref>, a relatively fast direct volume rendering method for rectilinear volumes. The user-settings include number of slices (which can alternatively be set by specifying desired distance between planes), 8-bit or 12-bit texture maps, and point or trilinear interpolation.
References-found: 18

