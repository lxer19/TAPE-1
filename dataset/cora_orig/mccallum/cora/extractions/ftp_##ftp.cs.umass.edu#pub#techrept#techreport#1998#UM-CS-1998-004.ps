URL: ftp://ftp.cs.umass.edu/pub/techrept/techreport/1998/UM-CS-1998-004.ps
Refering-URL: http://dis.cs.umass.edu/~araja/pubs.html
Root-URL: 
Email: Email: araja@cs.umass.edu  
Title: A more complex view of schedule uncertainty based on contingency analysis  
Author: Anita Raja Victor Lesser Thomas Wagner 
Address: Amherst, MA 01003,  
Affiliation: Computer Science Department, University of Massachusetts,  
Date: January 28, 1998  
Abstract: The Design-to-Criteria scheduler is a domain independent system that schedules complex AI problem solving tasks to meet real-time performance goals. In this paper, we further extend the scheduler to more effectively deal with uncertainty present in a schedule that can be critical in hard deadline or hard cost situations. This is based on an analysis of available schedules that can be used to recover from a situation in which partially executed schedules cannot be completed successfully. In addition to evaluating schedules effectively from the uncertainty perspective, we also implement method reordering techniques to minimize uncertainty. fl This material is based upon work supported by the National Science Foundation under Grant No. IRI-9523419, the Defense Advanced Research Projects Agency (DARPA) and Air Force Research Laboratory, Air Force Materiel Command, USAF, under agreement number F30602-97-1-0249, and Dept. of the Navy, Office of the Chief of Naval Research, under Grant No. N00014-95-1-1198. The content of the information does not necessarily reflect the position or the policy of the National Science Foundation, Defense Advanced Research Projects Agency (DARPA), Air Force Research Laboratory or the U.S. Government and no official endorsement should be inferred 
Abstract-found: 1
Intro-found: 1
Reference: [Amant95] <author> St. Amant, R.; Kuwata, Y., and Cohen, P. </author> <year> 1995. </year> <title> "Monitoring Progress with Dynamic Programming Envelopes." </title> <booktitle> In Proceedings of the Seventh International IEEE Conference on Tools with Artificial Intelligence, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <pages> pp. 426-433. </pages>
Reference: [Bresina94] <author> Bresina, J.;Drummond, M; Swanson, </author> <title> K.,"Just-In-Case Scheduling", </title> <booktitle> Proceedings of AAAI-94, </booktitle> <address> Seattle, WA </address>
Reference-contexts: This type of analysis, called contingency planning can be expensive because it could involve an exhaustive search for the appropriate method that would improve to schedule robustness without diminishing the criteria requirements <ref> [Bresina94] </ref>. However, the technique we describe in this paper implements an algorithm which eliminates the need to do an exhaustive search, though it is more expensive than our non-contingency scheduling approach. 2 In this paper, we discuss contingency scheduling issues and formalize them using five statistical measures of schedule robustness. <p> In the examples discussed above, we assume distinct failure regions, the instance being failure to comply with the duration deadline. This requirement simplifies the examples and the explanation thework presented here is extendible to other hard performance criteria as well. <ref> [Bresina94] </ref> discusses an algorithm for a specific domain namely a real telescope scheduling problem where the stochastic actions are managed by a splitting technique. Here the Just-In-Case scheduler pro-actively manages duration uncertainty by using the contingent schedules built as a result of analyzing the problem using off-line computations.
Reference: [Decker95] <author> Decker,K.; TAEMS: </author> <title> A framework for analysis and design of coordination mechanisms. </title> <editor> In G. O'Hare and N. Jennings, editors, </editor> <booktitle> Foundations of Distributed Artificial Intelligence. </booktitle> <publisher> Wiley Inter-Science, </publisher> <year> 1995. </year>
Reference: [Decker93] <author> Decker, K. and Lesser, V. </author> <title> Quantitative Modeling of Complex Computational Task Environments, </title> <booktitle> Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <year> 1993. </year>
Reference: [Hart90] <author> Hart, D., Anderson, S. and Cohen P., </author> <year> 1990. </year> <title> "Envelopes as a Vehicle for Improving the Efficiency of Plan Execution" In Proceedings of the Workshop on Innovative Approaches to Planning, Scheduling and Control. </title> <editor> K. Sycara(Ed.). </editor> <publisher> Morgan Kaufmann. </publisher> <pages> 71-76 </pages>
Reference: [Wagner98b] <author> Wagner, T.; Garvey, A.; and Lesser, V. </author> <year> 1998. </year> <title> Criteria-Directed Heuristic Task Scheduling. </title> <journal> International Journal of Approximate Reasoning, Special Issue on Scheduling. </journal> <note> To appear. Also available as UMASS CS TR-97-59. </note>
Reference-contexts: 1 Introduction The Design-to-Criteria scheduler <ref> [Wagner97c, Wagner98b] </ref> is a domain-independent system that schedules complex AI problem solving tasks to meet real-time performance goals. <p> We could define AEUB',OEB',EB', AEB' and ELB' which would involve complete analysis of all paths by the scheduler. The resulting schedules would display higher performance characteristics and meet goal criteria better but will also be computationally infeasible to generate <ref> [Wagner98b] </ref>. 14 4 Rescheduling and Recovery Algorithms In this section, we describe a generic algorithm which can guarantee a more precise performance evaluation of schedules when uncertainty is present in the schedule, using the theory described above.
Reference: [Wagner97c] <author> Wagner, T.; Garvey, A.; and Lesser, V. </author> <year> 1997. </year> <title> Complex Goal Criteria and Its Application in Design-to-Criteria Scheduling. </title> <booktitle> In Proceedings of the Fourteenth National Conference on Artificial Intelligence, </booktitle> <pages> 294-301. </pages> <note> Also available as UMASS CS TR-1997-10. </note>
Reference-contexts: 1 Introduction The Design-to-Criteria scheduler <ref> [Wagner97c, Wagner98b] </ref> is a domain-independent system that schedules complex AI problem solving tasks to meet real-time performance goals. <p> The scheduler determines a particular path to achieve a goal as well as the specific order of execution of the subtasks associated with this path. It uses a complex user-defined scheduling criteria <ref> [Wagner97c] </ref> that takes into account the performance characteristics such as cost, quality and duration in the overall schedule and amount of uncertainty with respect to these characteristics. In this paper, we further extend the scheduler to more efficiently deal with uncertainty present in a schedule. <p> A subset of these alternatives are selected and schedules are created using a heuristic single-pass method-ordering technique. The set of candidate schedules are then ranked using a sophisticated multi-dimensional evaluation mechanism <ref> [Wagner97c] </ref> which compares the schedules' statistical attributes to scheduling design criteria, e.g., quality, cost, duration and uncertainty measures, provided by scheduler clients. <p> We are considering using limited tree expansion in situations such as these where it is not precluded by the combinatorics of the actual scheduling instance. 6 2.2 Critical Regions In our example, task A2 has an enables non-local effect <ref> [Wagner97c] </ref> as well as a 25% chance of failure within its distribution. We hence predict that task A2 could potentially be a critical region. A critical region is a set of possible outcomes of method execution which if occurred would seriously degrade the performance characteristics of the overall schedule. <p> Expected Lower Bound (ELB) The expected lower bound rating, of a schedule s ij , is the performance measure of a schedule execution without taking rescheduling into consideration <ref> [Wagner97c] </ref>. It is a expected rating because it is computed on a statistical basis taking quality, cost and duration distributions into account. 11 2. Approximate Expected Upper Bound (AEUB) It is the statistical schedule rating after eliminating all regions where rescheduling could occur.
Reference: [Wagner97e] <author> Wagner, T.; Garvey, A.; and Lesser, V. </author> <year> 1997. </year> <title> Leveraging Uncertainty in Design-to-Criteria Scheduling. </title> <institution> UMASS Department of Computer Science Technical Report TR-97-11. </institution> <month> 19 </month>
Reference-contexts: In addition to evaluating schedules more effectively from the uncertainty perspective, we also implement method reordering techniques to minimize uncertainty. The Design-to-Criteria scheduler with its present functionality does some reordering of subtasks within a schedule <ref> [Wagner97e] </ref> but it does not reason about whether there are ways to recover from failure scenarios. We define schedule robustness as a characteristic of a schedule in which the schedule allows for recovery from execution failure of one of the scheduled actions.
References-found: 8

