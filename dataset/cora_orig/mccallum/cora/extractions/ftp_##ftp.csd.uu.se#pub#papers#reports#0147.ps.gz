URL: ftp://ftp.csd.uu.se/pub/papers/reports/0147.ps.gz
Refering-URL: http://www.csd.uu.se/papers/reports.html
Root-URL: 
Phone: Phone: +481818 25 00 Fax: +461851 19 25  
Title: an Open Agent-Based Market Infrastructure  
Author: Joakim Eriksson, Niclas Finne and Sverker Janson (Editors) 
Address: 311, S-751 05 Uppsala, Sweden  
Affiliation: Box  
Note: MarketSpace'96  
Abstract: UPMAIL Technical Report No. 147 April 7, 1997 ISSN 1100-0686 Abstract We describe the results of the MarketSpace project, carried out as part of the Software Systems (Programvarusystem DV1, 20p) course, in the fourth year of the programming methodology branch of the Computer Science Program (DVP) at Up-psala University. Partners were Telia Research and Swedish Institute of Computer Science. The project have resulted in a specification of an agent-based infrastructure in which electronic commerce can be automated. Also five software agents have been built, each taking different roles in the market. The focus of the project has been on information and interaction models for the market, and how to automate different market roles. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Sverker Janson. </author> <title> Intelligent software agents. </title> <address> URL: http://www.sics.se/isl/abc/survey.html. </address>
Reference-contexts: We will not try to give one answer 6 to the question "what is an agent", we will rather give a short introduction to some of the different views <ref> [1] </ref>. Information Integration Agents Information integration agents are components in a heterogeneous distributed information system and they have the ability to communicate information or rather knowledge in this system. These agents use an agent communication protocol and a common knowledge representation format to be able to understand each others knowledge.
Reference: [2] <author> Tim Finin and Richard Fritzson. </author> <title> KQML as an agent communication language. </title> <booktitle> In Proceedings of the Third International Conference on Information and Knowledge Management, </booktitle> <year> 1994. </year>
Reference-contexts: Each database has its own agent that handles the database retrieval and translation of information to the common representation format. The agents in this system use KQML as their communication protocol and KIF as their common knowledge representation format <ref> [2, 3] </ref>. Coordinated Agents When looking at coordinated agents the interesting aspect is not each agent's behavior but rather the behavior of a whole society of interacting agents.
Reference: [3] <author> Michael R. Genesereth and Richard E. Fikes. </author> <title> Knowledge interchange format version 3.0 reference manual. </title> <type> Technical report, </type> <institution> Computer Science Department, Stanford University, </institution> <year> 1992. </year>
Reference-contexts: Each database has its own agent that handles the database retrieval and translation of information to the common representation format. The agents in this system use KQML as their communication protocol and KIF as their common knowledge representation format <ref> [2, 3] </ref>. Coordinated Agents When looking at coordinated agents the interesting aspect is not each agent's behavior but rather the behavior of a whole society of interacting agents.
Reference: [4] <author> Eric Rasmusen. </author> <title> Games and Information. </title> <publisher> Blackwell, </publisher> <year> 1989. </year>
Reference-contexts: Coordinated Agents When looking at coordinated agents the interesting aspect is not each agent's behavior but rather the behavior of a whole society of interacting agents. There are several coordination theories to use when looking at agent coordination, for example we have game theory <ref> [4] </ref>, and economic theory (market oriented cooperation)[5]. One example of work relating to coordinated agents is Tuomas Sandholm and Victor Lesser's work on extending the Contract Net framework where the agents uses a contract protocol for distributing tasks between the agents in the system [6].
Reference: [5] <author> Scott H. Clearwater. </author> <title> Market-based Control, A Paradigm for Distributed Resource Allocation. </title> <publisher> World Scientific, </publisher> <address> Palo Alto, CA, </address> <year> 1996. </year>
Reference: [6] <author> Tuomas Sandholm and Victor Lesser. </author> <title> Issues in automated negotiation and electronic commerce: Extending the contract net framework. </title> <booktitle> In Proceedings of ICMAS'95, </booktitle> <year> 1995. </year>
Reference-contexts: One example of work relating to coordinated agents is Tuomas Sandholm and Victor Lesser's work on extending the Contract Net framework where the agents uses a contract protocol for distributing tasks between the agents in the system <ref> [6] </ref>. Using this protocol agents negotiate with each other about which tasks to do, each trying to make "money" for the tasks it does. Mobile Agents Mobile agents have the ability to migrate between different locations (on different machines). These agents are often small programs that do quite simple tasks.
Reference: [7] <author> General Magic. </author> <title> Telescript technology: Mobile agents. </title> <address> URL: http://www.genmagic.com/Telescript/Whitepapers/wp4/whitepaper-4.html. </address>
Reference-contexts: There exist several mobile agent platforms and one of the most known is General Magic's Telescript <ref> [7] </ref>. Assistant Agents The role of an assistant agent is to make the system easier to use for the human user. In general the assistant agent helps the user with some kind of information filtering to let the user concentrate on the important information.
Reference: [8] <author> Johan Montelius, Sverker Janson, Jan Gabrielsson, Anders Danne, Goran B-age, and Mikael Eriksson. </author> <title> Intentions and intelligent screening in an agent-based personal communication system. </title>
Reference-contexts: Since users are different in many ways the assistant agent has to adapt to the behavior of its user to be as useful as possible. One example of assistant agents is Ericsson Radio Systems' work on personal assistants, PA, for both telecommunication and Internet communication <ref> [8] </ref>. The PA can take care of forwarding different types of communication to the user, using the media that he or she prefers.
Reference: [9] <author> J. Weizenbaum. </author> <title> Computer Power and Human Reason. W.H. </title> <publisher> Freeman and Co, </publisher> <address> New York, </address> <year> 1976. </year>
Reference-contexts: The believable agent taken from the first aspect is an agent that in some way behaves like a human. The most known example of a believable agent is the ELIZA program which tries to imitate a human in a conversation <ref> [9] </ref>. The other aspect of believable agents concerns the internal implementations rather than external behavior. These agents have a formal representation of their 7 mental states including concepts like knowledge, belief, time, etc.
Reference: [10] <author> Digicash. E-cash. </author> <note> URL: http://www.digicash.com/ecash/ecash-home.html. </note>
Reference-contexts: The really good thing about credit cards is that they are are so convenient, for both parties, and that is why credit cards are used even though the are some risks. Ecash is developed by DigiCash and is a rather new service <ref> [10] </ref>. To use ecash the user must have a virtual wallet on the hard drive from which money is withdrawn when a purchase is made (or deposited when something is sold). To make a purchase both the buyer and the seller must have ecash accounts in the same bank. <p> Payment and Security Electronic commerce is not really possible without payment and security. There are implementations <ref> [10, 11, 12] </ref> of this, but they have not been included in the project. Models of negotiation The model of negotiation (see section 2.2.2) employed in this project is rather simple. More advanced negotiation models need to be studied in order to expand the applicability of negotiation in MarketSpace.
Reference: [11] <author> Visa and MasterCard. </author> <title> Set specification. </title> <address> URL: http://www.visa.com/cgi-bin/vee/sf/set/intro.html?2+0. </address>
Reference-contexts: will send a receipt to B * The goods will then be sent to B, either by electronic means or some other way The Future Secure Electronic Transaction (SET) is a standard for secure payments with credit cards on the Internet developed jointly by Visa, MasterCard, Netscape, IBM and Microsoft <ref> [11] </ref>. The user will receive their encryption keys from their bank or credit card company and the keys are placed on the user's hard drive (or something like that). When the user wants to buy something from a company, he/she will encrypt the order including the credit card number. <p> Payment and Security Electronic commerce is not really possible without payment and security. There are implementations <ref> [10, 11, 12] </ref> of this, but they have not been included in the project. Models of negotiation The model of negotiation (see section 2.2.2) employed in this project is rather simple. More advanced negotiation models need to be studied in order to expand the applicability of negotiation in MarketSpace.
Reference: [12] <institution> Information Sciences Institute. Netcash. </institution> <note> URL: http://nii-server.isi.edu/info/netcash/. </note>
Reference-contexts: If everything is in order, the company gets its money and the buyer gets the product. 41 Netcash was developed by team at the Information Sciences Institute of the University of Southern California <ref> [12] </ref>. This system have, apart from the usual buyer and merchant, currency servers. The main function of the currency server is to mint (electronic) coins, each currency server has uniquely id and so does every coin minted by that server. <p> Payment and Security Electronic commerce is not really possible without payment and security. There are implementations <ref> [10, 11, 12] </ref> of this, but they have not been included in the project. Models of negotiation The model of negotiation (see section 2.2.2) employed in this project is rather simple. More advanced negotiation models need to be studied in order to expand the applicability of negotiation in MarketSpace.
Reference: [13] <author> Joe Armstrong, Robert Virding, Claes Wikstrom, and Mike Williams. </author> <title> Concurrent Programming in Erlang. </title> <publisher> Prentice Hall, </publisher> <address> second edition, </address> <year> 1996. </year> <month> 104 </month>
Reference-contexts: Since humans constantly changes in how he or she interacts with the agent, it is also desirable that the interface is adaptive. Such kinds of interfaces are quite expensive to implement, but they are necessary in a future MarketSpace. 4.3 Languages 4.3.1 Erlang Erlang <ref> [13] </ref> has proven to be very expressive and compact. It is very suitable to express ideas and behavior in.
Reference: [14] <author> David Flanagan. </author> <title> Java in a Nutshell: A Desktop Quick Reference for Java Programmers. </title> <publisher> O'Reilly & Associates, </publisher> <year> 1996. </year>
Reference-contexts: It is very suitable to express ideas and behavior in. Unfortunately, it lacks typechecking which is a serious downside in this context, especially when implementing a knowledge representation system. 4.3.2 Java Java <ref> [14] </ref> is a suitable language for many types of applications; it is easy to grasp, but the major problem is the lack of efficient implementations. The thread-package also suffers from the fact that the language specification [15] does not specify how threads are to be scheduled.
Reference: [15] <author> James Gosling, Bill Joy, and Guy Steele. </author> <title> The java language specification. </title> <note> URL: http://www.javasoft.com/doc/language specification/index.html. 105 </note>
Reference-contexts: The thread-package also suffers from the fact that the language specification <ref> [15] </ref> does not specify how threads are to be scheduled. This means that the programmer cannot rely on that threads are timesliced, for example.
References-found: 15

