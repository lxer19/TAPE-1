URL: http://www.cs.umd.edu/users/bultan/papers/neural-networks.ps
Refering-URL: http://www.cs.umd.edu/users/bultan/publications-abstracts.html
Root-URL: 
Email: e-mail aykanat@cs.bilkent.edu.tr  
Phone: 2  Phone +90 312 266 4133 Fax +90 312 266 4126  
Title: A Fast Neural-Network Algorithm for Cell Placement  
Author: C. AYKANAT, Prof. Cevdet Aykanat 
Address: TR-06533 Bilkent, Ankara, Turkey  College Park, MD 20742, USA  TR-06533 Bilkent Ankara, Turkey  
Affiliation: Department of Computer Engineering and Information Science Bilkent University  Department of Computer Science University of Maryland  Computer Engineering Department Bilkent University  
Note: 1 TEVF IK BULTAN 2 AND ISMA IL HAR ITAO GLU 2 1  Corresponding author Assoc.  Running Title Neural Algorithm for Cell Placement  
Abstract-found: 0
Intro-found: 1
Reference: <author> Bultan T., & Aykanat C. </author> <year> (1992). </year> <title> A new mapping heuristic based on mean field annealing. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 16, </volume> <pages> 292-305. </pages>
Reference-contexts: In last decade, neurocomputing approaches based on Hopfield model have 4 been successfully applied to various combinatorial optimization problems such as traveling salesman problem (Peterson & Sodeberg, 1989; Van den Bout & Miller, 1989; Takahashi, 1997), scheduling problem (Gislen et al., 1992), mapping problem <ref> (Bultan & Aykanat, 1992) </ref>, knapsack problem (Ohlsson et al., 1993; Ohlsson & Pi, 1997), communication routing problem (Hakkinen et al., 1997), graph partitioning problem (Herault & Niez, 1989; Peterson & Sodeberg, 1989; Van den Bout & Miller, 1990), graph layout problem (Cimikowski & Shope, 1996), circuit partitioning problem (Yih & Mazumder,
Reference: <author> Bultan, T., & Aykanat, C. </author> <year> (1995). </year> <title> Circuit partitioning using mean field annealing. </title> <journal> Neurocomputing, </journal> <volume> 8, </volume> <pages> 171-194. </pages>
Reference-contexts: Here, d avg denotes the average cell degree, i.e., average number of nets connected to a cell. This scheme is based on the techniques developed in <ref> (Bultan & Aykanat, 1995) </ref> for circuit partitioning problem, and can be derived from the formulations in (Bultan & Aykanat, 1995). Therefore, we will not give its details here. Note that a sequence of L-row, L-column and IO spin updates can be considered as a single MFA iteration. <p> Here, d avg denotes the average cell degree, i.e., average number of nets connected to a cell. This scheme is based on the techniques developed in <ref> (Bultan & Aykanat, 1995) </ref> for circuit partitioning problem, and can be derived from the formulations in (Bultan & Aykanat, 1995). Therefore, we will not give its details here. Note that a sequence of L-row, L-column and IO spin updates can be considered as a single MFA iteration.
Reference: <author> Cimikowski, R., & Shope, P. </author> <year> (1996). </year> <title> A neural-network algorithm for a graph layout problem. </title> <journal> IEEE Transactions on Neural Networks, </journal> <volume> 7(2), </volume> <pages> 341-345. </pages>
Reference-contexts: 1997), scheduling problem (Gislen et al., 1992), mapping problem (Bultan & Aykanat, 1992), knapsack problem (Ohlsson et al., 1993; Ohlsson & Pi, 1997), communication routing problem (Hakkinen et al., 1997), graph partitioning problem (Herault & Niez, 1989; Peterson & Sodeberg, 1989; Van den Bout & Miller, 1990), graph layout problem <ref> (Cimikowski & Shope, 1996) </ref>, circuit partitioning problem (Yih & Mazumder, 1990; Bultan & Aykanat, 1995). In this paper, we apply the Mean Field Annealing (MFA) technique to the cell placement problem.
Reference: <author> Dunlop, A. E., & Kernighan, B. W. </author> <year> (1985). </year> <title> A procedure for placement of standard-cell VLSI circuits, </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 4, </volume> <pages> 92-98. </pages>
Reference-contexts: We assume that each cell is placed to the center of the cluster to which it is mapped. During the placement it is not feasible to calculate the exact routing length for two reasons. First, a feasible placement is not available during the execution of some algorithms, e.g., <ref> (Dunlop & Kernighan, 1985) </ref>, second, the computation of the exact routing cost necessitates the execution of the global and the detailed routing phases which are as hard as the placement phase. Hence, most of the placement heuristics use a method for approximating the routing cost.
Reference: <author> Gislen, L., Peterson, C., & Soderberg, B. </author> <year> (1992). </year> <title> Complex scheduling with Potts neural networks. </title> <journal> Neural Computation, </journal> <volume> 4, </volume> <pages> 805-831. </pages>
Reference-contexts: In last decade, neurocomputing approaches based on Hopfield model have 4 been successfully applied to various combinatorial optimization problems such as traveling salesman problem (Peterson & Sodeberg, 1989; Van den Bout & Miller, 1989; Takahashi, 1997), scheduling problem <ref> (Gislen et al., 1992) </ref>, mapping problem (Bultan & Aykanat, 1992), knapsack problem (Ohlsson et al., 1993; Ohlsson & Pi, 1997), communication routing problem (Hakkinen et al., 1997), graph partitioning problem (Herault & Niez, 1989; Peterson & Sodeberg, 1989; Van den Bout & Miller, 1990), graph layout problem (Cimikowski & Shope, 1996),
Reference: <author> Hakkinen, J., Lagerholm, M., Peterson, C., & Soderberg, B. </author> <year> (1997). </year> <title> A Potts neuron approach to communication routing (LU-TP Technical report No. </title> <type> 97-02) Sweden: </type> <institution> Lund University, Department of Theoretical Physics II. </institution> <note> (also submitted to Neural Computation). </note>
Reference-contexts: been successfully applied to various combinatorial optimization problems such as traveling salesman problem (Peterson & Sodeberg, 1989; Van den Bout & Miller, 1989; Takahashi, 1997), scheduling problem (Gislen et al., 1992), mapping problem (Bultan & Aykanat, 1992), knapsack problem (Ohlsson et al., 1993; Ohlsson & Pi, 1997), communication routing problem <ref> (Hakkinen et al., 1997) </ref>, graph partitioning problem (Herault & Niez, 1989; Peterson & Sodeberg, 1989; Van den Bout & Miller, 1990), graph layout problem (Cimikowski & Shope, 1996), circuit partitioning problem (Yih & Mazumder, 1990; Bultan & Aykanat, 1995).
Reference: <author> Herault, L., & Niez, J. </author> <year> (1989). </year> <title> Neural networks and graph k-partitioning. </title> <journal> Complex Systems, </journal> <volume> 3, </volume> <pages> 531-575. </pages>
Reference: <author> Hopfield, J. J., & Tank, D. W. </author> <year> (1985). </year> <title> Neural computation of decisions in optimization problems. </title> <journal> Biological Cybernetic, </journal> <volume> 52, </volume> <pages> 141-152. </pages>
Reference-contexts: MFA combines the collective computation property of Hopfield neural networks <ref> (Hopfield & Tank, 1985) </ref> with the annealing notion of Simulated Annealing (SA) (Kirkpatrick et al., 1983). In MFA, discrete variables called spins (or neurons) are used for encoding configurations of combinatorial optimization problems. <p> In this paper, we propose a fast placement algorithm for symmetrical-array FPGAs that produces layouts which are as good as the ones produced by SA. 4 APPLYING MFA TO THE CELL PLACEMENT PROBLEM MFA technique merges the collective computation and the annealing properties of Hopfield neural networks <ref> (Hopfield & Tank, 1985) </ref> and SA (Kirkpatrick et al., 1983), respectively, to obtain a general algorithm for solving combinatorial optimization problems. A combinatorial optimization problem consists of a set of configurations and a cost function.
Reference: <author> Kirkpatrick, S., Gellat, C. D., & Vecchi, M. P. </author> <year> (1983). </year> <title> Optimization by simulated annealing. </title> <journal> Science, </journal> <volume> 220, </volume> <pages> 671-680. </pages>
Reference-contexts: MFA combines the collective computation property of Hopfield neural networks (Hopfield & Tank, 1985) with the annealing notion of Simulated Annealing (SA) <ref> (Kirkpatrick et al., 1983) </ref>. In MFA, discrete variables called spins (or neurons) are used for encoding configurations of combinatorial optimization problems. An energy function written in terms of spins is used for representing the cost function of the problem. <p> we propose a fast placement algorithm for symmetrical-array FPGAs that produces layouts which are as good as the ones produced by SA. 4 APPLYING MFA TO THE CELL PLACEMENT PROBLEM MFA technique merges the collective computation and the annealing properties of Hopfield neural networks (Hopfield & Tank, 1985) and SA <ref> (Kirkpatrick et al., 1983) </ref>, respectively, to obtain a general algorithm for solving combinatorial optimization problems. A combinatorial optimization problem consists of a set of configurations and a cost function.
Reference: <author> Lengauer, T. </author> <year> (1990). </year> <title> Combinatorial Algorithms for Integrated Circuit Layout. </title> <publisher> John Wiley and Sons. </publisher>
Reference-contexts: Hence, the second phase of the problem can be similarly skipped for symmetrical FPGAs. This two phase modeling enables us to develop heuristics for the first phase of the problem which are independent of the design style. Since cell placement problem is NP-Hard <ref> (Lengauer, 1990) </ref> finding efficient placement heuristics is an important research issue.
Reference: <author> Ohlsson, M., Peterson, C. & Soderberg, B. </author> <year> (1993). </year> <title> Neural networks for optimization problems with inequality constraints | the knapsack problem. </title> <journal> Neural Computation, </journal> <volume> 5(2), </volume> <pages> 331-339. </pages>
Reference: <author> Ohlsson, M., & Pi, H. </author> <year> (1997). </year> <title> A study of the mean field approach to knapsack problems. </title> <booktitle> Neural Networks, </booktitle> <volume> 10(2), </volume> <pages> 263-271. </pages>
Reference: <author> Peterson, C., & Soderberg, B. </author> <year> (1989). </year> <title> A new method for mapping optimization problems onto neural networks. </title> <journal> International Journal of Neural Systems, </journal> <volume> 1(3), </volume> <pages> 3-22. </pages>
Reference: <author> Rose, J., Francis, R. J., Brown, S., & Vranesic, Z. G. </author> <year> (1992). </year> <title> Field-Programmable Gate Arrays. </title> <address> MA: </address> <publisher> Kluwer Academic Publishers. </publisher>
Reference-contexts: Symmetrical FPGAs consist of logic blocks forming a rectangular grid <ref> (Rose et al., 1992, 1993) </ref>. Hence, the second phase of the problem can be similarly skipped for symmetrical FPGAs. This two phase modeling enables us to develop heuristics for the first phase of the problem which are independent of the design style. <p> Several types of FPGAs have been introduced over the last years, which differ from each other by their programming technologies, logic block architectures and routing network architectures <ref> (Rose et al., 1992) </ref>. They can be classified into four main categories: symmetrical-array, row-based, hierarchical and sea-of-gates. A typical symmetrical-array FPGA consists of a two-dimensional grid called logic cell array (LCA) which is interconnected with vertical and horizontal channels as shown in Fig. 2 (a).
Reference: <author> Rose, J., Elgamal, A. E., & Sangiovanni-Vincentelli, A. </author> <year> (1993). </year> <booktitle> Architecture of field-programmable gate-array, Proceedings of IEEE, </booktitle> <volume> 81, </volume> <pages> 1013-1029. </pages> <address> 28 Sechen C. </address> <year> (1988). </year> <title> VLSI placement and global routing using simulated annealing. </title> <address> MA: </address> <publisher> Kluwer Aca--demic Publishers. </publisher>
Reference-contexts: The placement problem is especially important in designs 7 using such devices, because fixed routing resources make it difficult to achieve 100% automatic routing. Automated FPGA layout generation can be divided into four major phases, partitioning, technology mapping, placement and routing <ref> (Rose et al., 1993) </ref>. Partitioning is used for very large logic circuits that require multiple FPGA chips. In technology mapping phase, a logic circuit is transformed to an optimized, generic logic input format that consists of CLBs and IOBs.
Reference: <author> Shahookar, K., & Mazumder, P. </author> <year> (1991). </year> <title> VLSI cell placement techniques, </title> <journal> ACM Computing Surveys 23(2), </journal> <pages> 142-220. </pages>
Reference-contexts: Usually two closely related criteria are used to construct a cost function : minimization of the routing length and minimization of the chip area. In some design styles (e.g., standard cell), minimization of the area is equivalent to minimization of the routing length <ref> (Shahookar & Mazumder, 1991) </ref> whereas in some others area is fixed (e.g., FPGA). If the area is fixed, minimization of the routing length is necessary for the routability of the circuit using the available routing resources. <p> If the area is fixed, minimization of the routing length is necessary for the routability of the circuit using the available routing resources. Minimization of the routing length also minimizes the propagation delays of the circuit, hence increases its speed <ref> (Shahookar & Mazumder, 1991) </ref>. Although cell placement problem has different characteristics related to the technology used in different design styles, key features of the problem remain the same. This enables us to make a general definition for the cell placement problem which will be valid for all design styles. <p> The rectangular grid of clusters is used for estimating the final locations of the cells. We will discuss the computation of routing cost in detail in Section 2. Fig. 1 (a) illustrates an example circuit with 16 cells and 19 nets <ref> (Shahookar & Mazumder, 1991) </ref>. The circuit has 3 input (I1, I2, I3) and 2 output (O1, O2) pads. Pads may be interpreted as cells which must be mapped to the boundaries of the cluster grid. <p> Fig. 1 (b) shows the bounding box of the net f10; 15g with two cells. This method gives a good approximation to the Steiner tree which is the most efficient routing scheme <ref> (Shahookar & Mazumder, 1991) </ref>. The shortest way to route a net is to find the minimum length Steiner tree of the cells connected to that net.
Reference: <author> Sherwani, N. </author> <year> (1993). </year> <title> Algorithms for VLSI physical design automation. </title> <publisher> Kluwer Academic Publishers. </publisher>
Reference: <author> Takahashi, Y. </author> <title> (1997) Mathematical improvement of the Hopfield model for TSP feasible solutions by synapse dynamical systems. </title> <journal> Neurocomputing, </journal> <volume> 15(1), </volume> <month> 15-43. </month> <title> The Programmable Gate Array Data Book. (1994). </title> <publisher> Xilinx Inc. </publisher>
Reference: <author> Van den Bout, D. E., & Miller, T. K. </author> <year> (1989). </year> <title> Improving the performance of the Hopfield-Tank neural network through normalization and annealing. </title> <journal> Biological Cybernetics, </journal> <volume> 62, </volume> <pages> 129-139. </pages>
Reference: <author> Van den Bout, D. E., & Miller, T. K. </author> <year> (1990). </year> <title> Graph partitioning using annealing neural networks. </title> <journal> IEEE Transaction on Neural Networks, </journal> <volume> 1(2), </volume> <pages> 192-203. </pages>
Reference: <author> Yih, J. S., & Mazumder, P. </author> <year> (1990). </year> <title> A neural network design for circuit partitioning. </title> <journal> IEEE Transactions on Computer-Aided Design. </journal> <volume> 9, </volume> <pages> 1265-1271. 29 </pages>
References-found: 21

