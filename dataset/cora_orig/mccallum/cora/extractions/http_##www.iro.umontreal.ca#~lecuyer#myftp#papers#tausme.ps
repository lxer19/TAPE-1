URL: http://www.iro.umontreal.ca/~lecuyer/myftp/papers/tausme.ps
Refering-URL: http://www.iro.umontreal.ca/~lecuyer/papers.html
Root-URL: http://www.iro.umontreal.ca
Title: MAXIMALLY EQUIDISTRIBUTED COMBINED TAUSWORTHE GENERATORS  
Author: PIERRE L'ECUYER 
Abstract: Tausworthe random number generators based on a primitive trinomial allow an easy and fast implementation when their parameters obey certain restrictions. However, such generators, with those restrictions, have bad statistical properties unless we combine them. A generator is called maximally equidistributed if its vectors of successive values have the best possible equidistribution in all dimensions. This paper shows how to find maximally equidistributed combinations in an efficient manner, and gives a list of generators with that property. Such generators have a strong theoretical support and lend themselves to very fast software implementations. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Compagner, </author> <title> The Hierarchy of Correlations in Random Binary Sequences, </title> <journal> Journal of Statistical Physics 63 (1991), </journal> <pages> 883-896. </pages>
Reference-contexts: 1. Introduction Theoretical and empirical investigations suggest that random number generators based on a too simple linear recurrence, such as simple linear congruential generators or trinomial-based Tausworthe or GFSR generators, should be avoided, and that combined generators should be used instead <ref> [1, 5, 7, 13] </ref>. In this paper, we examine a class of combined Tausworthe generators first introduced by Tezuka [10] and propose specific instances which have the best possible equidistribution properties (relative to their period length) in all dimensions. <p> Combined Generators. Unfortunately, Tausworthe generators based on polynomials of the above special form are unacceptable for two major reasons. Firstly, recurrences based on polynomials with too few non-zero coefficients are known to have important statistical defects <ref> [1, 7] </ref>.
Reference: [2] <author> R. Couture, P. L'Ecuyer, and S. Tezuka. </author> <title> On the Distribution of k-Dimensional Vectors for Simple and Combined Tausworthe Sequences, </title> <note> Mathematics of Computation 60, 202 (1993), 749-761 and S11-S16. </note>
Reference-contexts: it has the additional property that for L ` &gt; ` t and all t, none of the 2 t` cells contains more than a single point. (All of this is explained in further details in the next section.) The values of ` t can be computed as explained in <ref> [2, 10] </ref>, by exploiting the fact that they are related to the lengths of the shortest vectors in certain lattices. <p> However, the computations described in <ref> [2] </ref> provide more information than just ` t , and the aim of this paper is to describe a much more efficient algorithm for computing the resolution ` t for all t and checking for maximal equidistribution. <p> Conclusion We showed how to find efficiently combined Tausworthe generators with optimal equidistribution properties in all dimensions. Our method is simple and faster than those previously available (e.g., much faster than the method described in <ref> [2] </ref>). It permits one to perform exhaustive searches for optimal parameters with a modest computing effort.
Reference: [3] <author> D. E. Knuth, </author> <booktitle> The Art of Computer Programming : Seminumerical Algorithms, </booktitle> <volume> vol. 2, </volume> <booktitle> second edition. </booktitle> <publisher> Addison-Wesley, </publisher> <year> 1981. </year>
Reference-contexts: Define G n (z) = z n mod P (z), for all n 0. This polynomial can be computed by a standard divide-to-conquer algorithm (see <ref> [3] </ref>). Proposition 2. The polynomial G n (z) can be written (uniquely) as G n (z) = i=0 where the coefficients b n;i are the same as in (4). Proof. Suppose that G n (z) is given by (6).
Reference: [4] <author> P. L'Ecuyer, </author> <title> Efficient and Portable Combined Random Number Generators, </title> <journal> Communications of the ACM 31, </journal> <note> 6 (1988), 742-749 and 774. See also the correspondence in the same journal, 32, </note> <month> 8 </month> <year> (1989), </year> <pages> 1019-1024. </pages>
Reference-contexts: return ((s1 ^ s2 ^ s3) * 2.3283064365e-10); - s3 must be initialized to any non-zero values. 1 On a SUN SPARCstation 20, it took approximately 0.9 seconds to generate one million random numbers with this code, compared with 4.8 seconds for the widely used 32-bit combined generator proposed in <ref> [4] </ref> (also implemented in C). On a PC-486 (33 MHz), with a different compiler, generating the same one million random numbers took 3.2 seconds for taus88 and 7.6 seconds for the combined generator of [4]. <p> with this code, compared with 4.8 seconds for the widely used 32-bit combined generator proposed in <ref> [4] </ref> (also implemented in C). On a PC-486 (33 MHz), with a different compiler, generating the same one million random numbers took 3.2 seconds for taus88 and 7.6 seconds for the combined generator of [4]. Four-component ME-CF combined generators similar to that of Figure 1, with period 2 113 , are also easy to implement. 5. Conclusion We showed how to find efficiently combined Tausworthe generators with optimal equidistribution properties in all dimensions.
Reference: [5] <author> P. L'Ecuyer, </author> <title> Testing Random Number Generators, </title> <booktitle> Proceedings of the 1992 Winter Simulation Conference, </booktitle> <publisher> IEEE Press (1992), </publisher> <pages> 305-313. </pages>
Reference-contexts: 1. Introduction Theoretical and empirical investigations suggest that random number generators based on a too simple linear recurrence, such as simple linear congruential generators or trinomial-based Tausworthe or GFSR generators, should be avoided, and that combined generators should be used instead <ref> [1, 5, 7, 13] </ref>. In this paper, we examine a class of combined Tausworthe generators first introduced by Tezuka [10] and propose specific instances which have the best possible equidistribution properties (relative to their period length) in all dimensions.
Reference: [6] <author> P. L'Ecuyer, </author> <title> Uniform Random Number Generation, </title> <journal> Annals of Operations Research 53 (1994), </journal> <pages> 77-120. </pages>
Reference-contexts: Combinations with three components or more should then be considered and we provide a list of ME combinations of that kind. We used L = 32, having in mind 32-bit computers. 2. Tausworthe Generators and (t; `)-Equidistribution 2.1. Definition and Implementation. Tausworthe generators <ref> [6, 8, 9, 11] </ref> produce pseudorandom numbers by generating a sequence of bits from a linear recurrence modulo 2, and forming fractional numbers by taking blocks of successive bits. More precisely, let F 2 denote the finite field with two elements (say, 0 and 1). <p> See <ref> [6, 11, 13] </ref> for further details. The main interest of that kind of combination is that not only large periods can be achieved, but also P (z) typically has many non-zero coefficients even when the individual P j (z) are all trinomials.
Reference: [7] <author> J. H. Lindholm, </author> <title> An Analysis of the Pseudo-Randomness Properties of Subsequences of Long m-Sequences, </title> <journal> IEEE Transactions on Information Theory IT-14, </journal> <volume> 4 (1968), </volume> <pages> 569-576. </pages>
Reference-contexts: 1. Introduction Theoretical and empirical investigations suggest that random number generators based on a too simple linear recurrence, such as simple linear congruential generators or trinomial-based Tausworthe or GFSR generators, should be avoided, and that combined generators should be used instead <ref> [1, 5, 7, 13] </ref>. In this paper, we examine a class of combined Tausworthe generators first introduced by Tezuka [10] and propose specific instances which have the best possible equidistribution properties (relative to their period length) in all dimensions. <p> Combined Generators. Unfortunately, Tausworthe generators based on polynomials of the above special form are unacceptable for two major reasons. Firstly, recurrences based on polynomials with too few non-zero coefficients are known to have important statistical defects <ref> [1, 7] </ref>.
Reference: [8] <author> H. Niederreiter, </author> <title> Random Number Generation and Quasi-Monte Carlo Methods, </title> <booktitle> SIAM CBMS-NSF Regional Conference Series in Applied Mathematics, </booktitle> <volume> vol. 63, </volume> <publisher> SIAM, </publisher> <address> Philadel-phia, </address> <year> 1992. </year>
Reference-contexts: It appears that a period length of 2 60 is rather short, in the sense that it imposes rather small upper bounds on ` t for moderate values of t. Arguments based on the order of the discrepancy bounds for Tausworthe generators <ref> [8] </ref> also suggest that one should never use more than a negligible fraction of the period of linear-type generators, which implies that practical general purpose generators should have huge period lengths. <p> Combinations with three components or more should then be considered and we provide a list of ME combinations of that kind. We used L = 32, having in mind 32-bit computers. 2. Tausworthe Generators and (t; `)-Equidistribution 2.1. Definition and Implementation. Tausworthe generators <ref> [6, 8, 9, 11] </ref> produce pseudorandom numbers by generating a sequence of bits from a linear recurrence modulo 2, and forming fractional numbers by taking blocks of successive bits. More precisely, let F 2 denote the finite field with two elements (say, 0 and 1).
Reference: [9] <author> R. C. </author> <title> Tausworthe, Random Numbers Generated by Linear Recurrence Modulo Two, </title> <booktitle> Mathematics of Computation 19 (1965), </booktitle> <pages> 201-209. </pages>
Reference-contexts: Combinations with three components or more should then be considered and we provide a list of ME combinations of that kind. We used L = 32, having in mind 32-bit computers. 2. Tausworthe Generators and (t; `)-Equidistribution 2.1. Definition and Implementation. Tausworthe generators <ref> [6, 8, 9, 11] </ref> produce pseudorandom numbers by generating a sequence of bits from a linear recurrence modulo 2, and forming fractional numbers by taking blocks of successive bits. More precisely, let F 2 denote the finite field with two elements (say, 0 and 1).
Reference: [10] <author> S. Tezuka, </author> <title> Random number generation based on polynomial arithmetic modulo two, </title> <institution> IBM TRL Research Report, RT-0017, </institution> <year> 1989. </year>
Reference-contexts: In this paper, we examine a class of combined Tausworthe generators first introduced by Tezuka <ref> [10] </ref> and propose specific instances which have the best possible equidistribution properties (relative to their period length) in all dimensions. <p> it has the additional property that for L ` &gt; ` t and all t, none of the 2 t` cells contains more than a single point. (All of this is explained in further details in the next section.) The values of ` t can be computed as explained in <ref> [2, 10] </ref>, by exploiting the fact that they are related to the lengths of the shortest vectors in certain lattices. <p> Secondly, for a b-bit computer, the period length of the generator cannot exceed 2 b , which is much too short for many applications on current 32-bit computers. 4 PIERRE L'ECUYER One way to address those drawbacks without slowing down the generator too much, suggested by Tezuka <ref> [10] </ref> and Wang and Compagner [13], is to combine two or more trinomial-based generators of the special form, as follows.
Reference: [11] <author> S. Tezuka and P. L'Ecuyer, </author> <title> Efficient and Portable Combined Tausworthe Random Number Generators, </title> <booktitle> ACM Transactions on Modeling and Computer Simulation 1 (1991), </booktitle> <pages> 99-112. </pages>
Reference-contexts: A search for combined generators of that sort had already been performed within a small subclass of two-component combinations <ref> [11] </ref> with period length of approximately 2 60 . A value of L = 60 was used (implicitly). No ME generator was found in that subclass, but three "almost-ME" generators were reported and proposed, after passing successfully a battery of empirical statistical tests. <p> Combinations with three components or more should then be considered and we provide a list of ME combinations of that kind. We used L = 32, having in mind 32-bit computers. 2. Tausworthe Generators and (t; `)-Equidistribution 2.1. Definition and Implementation. Tausworthe generators <ref> [6, 8, 9, 11] </ref> produce pseudorandom numbers by generating a sequence of bits from a linear recurrence modulo 2, and forming fractional numbers by taking blocks of successive bits. More precisely, let F 2 denote the finite field with two elements (say, 0 and 1). <p> This is a slight COMBINED TAUSWORTHE GENERATORS 3 generalization of the algorithm given in <ref> [11] </ref>, where L = k was implicitly assumed. The vectors ~ s n are maintained as unsigned (L-bit) integers, which are then multiplied by the normalization constant 2 L to produce u n . <p> If the polynomials P j (z) are pairwise relatively prime, then the period of the combined generator is ae = lcm (2 k 1 1; : : : ; 2 k J 1) = (2 k 1 1)fi fi (2 k J 1). Further, as shown in <ref> [11] </ref>, the combined generator is equivalent to a Tausworthe generator with (reducible) characteristic polynomial P (z) = P 1 (z) P J (z) and s such that z s j j=1 where j j (z) is the inverse of P (z)=P j (z) modulo P j (z). <p> See <ref> [6, 11, 13] </ref> for further details. The main interest of that kind of combination is that not only large periods can be achieved, but also P (z) typically has many non-zero coefficients even when the individual P j (z) are all trinomials. <p> The three generators proposed in <ref> [11] </ref> turn out to have 4. Example 2. We made a similar search for the case J = 2, k 1 = 29, k 2 = 28, and with the constraint = 0. <p> Three combined Tausworthe generators with two components and period lengths 2 60 were proposed in <ref> [11] </ref>. The three- and four-component ME-CF combinations that we found offer better alternatives, with longer period lengths and significantly better resolution. In terms of speed, these generators are also highly competitive compared to those which are currently available from software libraries.
Reference: [12] <author> J. P. R. Tootill, W. D. Robinson, and D. J. Eagle, </author> <title> An Asymptotically Random Tausworthe Sequence, </title> <journal> Journal of the ACM 20 (1973), </journal> <pages> 469-481. </pages>
Reference-contexts: A generator is said to have maximal resolution in dimension t if fl t = 0, and maximal dimension for resolution ` if ` = 0. Adopting a definition similar to <ref> [12] </ref> (in [12], L k was implicitly assumed), we call the sequence maximally equidistributed (ME) if fl t = 0 for t = 1; : : : ; k or, equivalently, if ` = 0 for ` = 1; : : : ; L. <p> A generator is said to have maximal resolution in dimension t if fl t = 0, and maximal dimension for resolution ` if ` = 0. Adopting a definition similar to <ref> [12] </ref> (in [12], L k was implicitly assumed), we call the sequence maximally equidistributed (ME) if fl t = 0 for t = 1; : : : ; k or, equivalently, if ` = 0 for ` = 1; : : : ; L.
Reference: [13] <author> D. Wang and A. Compagner, </author> <title> On the Use of Reducible Polynomials as Random Number Generators, </title> <booktitle> Mathematics of Computation 60 (1993), </booktitle> <pages> 363-374. </pages>
Reference-contexts: 1. Introduction Theoretical and empirical investigations suggest that random number generators based on a too simple linear recurrence, such as simple linear congruential generators or trinomial-based Tausworthe or GFSR generators, should be avoided, and that combined generators should be used instead <ref> [1, 5, 7, 13] </ref>. In this paper, we examine a class of combined Tausworthe generators first introduced by Tezuka [10] and propose specific instances which have the best possible equidistribution properties (relative to their period length) in all dimensions. <p> a b-bit computer, the period length of the generator cannot exceed 2 b , which is much too short for many applications on current 32-bit computers. 4 PIERRE L'ECUYER One way to address those drawbacks without slowing down the generator too much, suggested by Tezuka [10] and Wang and Compagner <ref> [13] </ref>, is to combine two or more trinomial-based generators of the special form, as follows. <p> See <ref> [6, 11, 13] </ref> for further details. The main interest of that kind of combination is that not only large periods can be achieved, but also P (z) typically has many non-zero coefficients even when the individual P j (z) are all trinomials.
Reference: [14] <author> N. Zierler and J. Brillhart, </author> <title> On Primitive Tronomials (Mod 2), </title> <booktitle> Information and Control 13 (1968), </booktitle> <pages> 541-554, </pages> <note> and 14 (1969), 566-569. </note> <institution> D epartement d'Informatique et de Recherche Op erationnelle, Universit e de Montr e-al, C.P. 6128, Succ. Centre-Ville, Montr eal, H3C 3J7, Canada E-mail address: lecuyer@iro.umontreal.ca </institution>
Reference-contexts: Let us recall all the pairs (k; q) such that 25 k 32, 0 &lt; 2q &lt; k, and P (z) = z k z q 1 is a primitive trinomial. They are <ref> [14] </ref>: (31; 3), (31; 6), (31; 7), (31; 13), (29; 2), (28; 3), (28; 9), (28; 13), (25; 3), (25; 7). Example 1. Let J = 2, k 1 = 31, and k 2 = 29.
References-found: 14

