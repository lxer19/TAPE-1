URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/93-29.ps.Z
Refering-URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/README.html
Root-URL: 
Phone: 5  6  7  
Title: Selectivity: Reductions, Nondeterminism, and Function Classes 1  
Author: Lane A. Hemaspaandra Albrecht Hoene Ashish V. Naik Mitsunori Ogiwara Alan L. Selman Thomas Thierauf Jie Wang 
Keyword: Key words: Complexity theory, semi-decision algorithms, membership testing, selector functions, lowness, nonuniform complexity  
Web: CCR-9002292.  SUNY-Buffalo.  CCR-9002292.  
Address: Rochester, Rochester, NY 14627, USA.  NY 14260, USA.  NY 14260, USA.  D-89069 Ulm, Germany.  Greensboro, NC 27412, USA.  
Affiliation: 2 Department of Computer Science, University of  4 Department of Computer Science, SUNY-Buffalo, Buffalo,  Department of Computer Science and Information Mathematics, University of Electro-communications, Tokyo  Department of Computer Science, SUNY-Buffalo, Buffalo,  Abt. Theoretische Informatik, Universitat Ulm,  University of Rochester. 8 Department of Mathematics, University of North Carolina,  
Note: August 1993  Supported in part by the NSF under grants CCR-8957604 and NSF-INT-9116781/JSPS-ENG-207. Work done in part while visiting the University of Electro-Communications-Tokyo.  Supported in part by the NSF under grant  182, Japan. Supported in part by the NSF under grant CCR-9002292 and the JSPS under grant NSF-INT-9116781/JSPS-ENG-207. Work done in part while visiting  Supported in part by the NSF under grant  Supported in part by a DFG Postdoctoral Stipend and by the NSF under grant CCR-8957604. Work done in part while visiting the  Supported in part by the NSF under grant CCR-9108899.  
Abstract: 1 Some of these results appear in preliminary form in "Computing Solutions Uniquely Collapses the Polynomial Hierarchy" (Department of Computer Science, State University of New York technical report TR93-28, August 1993; L. Hemaspaandra, A. Naik, M. Ogiwara, and A. Selman) and "Selectivity" (a 1993 ICCI Conference contribution; L. Hemachandra, A. Hoene, M. Ogiwara, and A. Selman, T. Thierauf, and J. Wang). 3 Fachbereich 20, Informatik, Technische Universitat Berlin, D-10587 Berlin, Germany. Supported in part by a DFG Postdoctoral Fellowship and the NSF under grant CCR-8957604. Work done in part while visiting the University of Rochester and the University of Washington-Seattle. 
Abstract-found: 1
Intro-found: 1
Reference: [AFK89] <author> M. Abadi, J. Feigenbaum, and J. Killian. </author> <title> On hiding information from an oracle. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 39 </volume> <pages> 21-50, </pages> <year> 1989. </year> <month> 35 </month>
Reference: [AFW92] <author> K. Abrahamson, M. Fellows, and C. Wilson. </author> <title> Parallel self-reducibility. </title> <booktitle> In Pro--ceedings of the 4th International Conference on Computing and Information, </booktitle> <pages> pages 67-70. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> May </month> <year> 1992. </year>
Reference: [AH92] <author> E. Allender and L. Hemachandra. </author> <title> Lower bounds for the low hierarchy. </title> <journal> Journal of the ACM, </journal> <volume> 39(1) </volume> <pages> 234-250, </pages> <year> 1992. </year>
Reference-contexts: This upper bound on the lowness of the NP-selective sets is optimal (with respect to relativizable proof techniques), due to the recently proven lower bound on the lowness of P-selective sets <ref> [AH92] </ref>. As to extended lowness [BBS86], we note that all NP-selective sets are ExtendedLowfi 3 , and we prove that a more general class, (NP=poly) T (coNP=poly), is ExtendedLow 3 . We also introduce a more flexible notion of selectivity. <p> The following theorem follows immediately from a more general result we will establish later, Corollary 3.33. Theorem 3.25 The NP-selective sets in NP are Low 2 . The above result is optimal with respect to relativizable proof techniques, as Allender and Hemachandra <ref> [AH92] </ref> have proven that there is a relativized world in which even some P-selective NP sets are not lower than Low 2 . A set A is said to be GeneralizedLow 2 if p; A p 2 [BBS86].
Reference: [AHH + ] <author> V. Arvind, Y. Han, L. Hemachandra, J. Kobler, A. Lozano, M. Mundhenk, M. Ogiwara, U. Schoning, R. Silvestri, and T. Thierauf. </author> <title> Reductions to sets of low information content. </title> <editor> In K. Ambos-Spies, S. Homer, and U. Schoning, editors, </editor> <booktitle> Complexity Theory. </booktitle> <address> Cambridge University Press. </address> <note> To appear. </note>
Reference: [AHOW92] <author> E. Allender, L. Hemachandra, M. Ogiwara, and O. Watanabe. </author> <title> Relating equivalence and reducibility to sparse sets. </title> <journal> SIAM Journal on Computing, </journal> <volume> 21(3) </volume> <pages> 521-539, </pages> <year> 1992. </year>
Reference-contexts: complexity" result that applies to these and other selectivity classes. 2 2 Equivalence and Reducibility to P-Selective Sets For any class C and any reducibility denoted t r , let R t r (C) respectively denote fA fi (9L 2 C)[A t fi r L ^ L t r A]g <ref> [AHOW92] </ref>. In this section, we study the structure of the E (P-sel) and R (P-sel) classes stretching from P-sel = E p m (P-sel) up to R T (P-sel), which equals P=poly (see [Sel79,Sel82b,Ko83]), the well-studied class of sets having small circuits [KL80].
Reference: [AM77] <author> L. Adleman and K. Manders. </author> <title> Reducibility, randomness, </title> <booktitle> and intractibility. In Proceedings of the 9th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 151-153, </pages> <year> 1977. </year>
Reference: [BBS86] <author> J. Balcazar, R. Book, and U. Schoning. </author> <title> Sparse sets, </title> <journal> lowness and highness. SIAM Journal on Computing, </journal> <volume> 15(3) </volume> <pages> 739-746, </pages> <year> 1986. </year>
Reference-contexts: This upper bound on the lowness of the NP-selective sets is optimal (with respect to relativizable proof techniques), due to the recently proven lower bound on the lowness of P-selective sets [AH92]. As to extended lowness <ref> [BBS86] </ref>, we note that all NP-selective sets are ExtendedLowfi 3 , and we prove that a more general class, (NP=poly) T (coNP=poly), is ExtendedLow 3 . We also introduce a more flexible notion of selectivity. This notion removes the requirements that the selector be total and single-valued. <p> Lowness and extended lowness are used here as defined, respectively, by Schoning [Sch83], and by Long and Sheu [LS91] and Balcazar, Book, and Schoning <ref> [BBS86] </ref>. Definition 3.22 1. [Sch83] For each k 1, define Low k = fL 2 NP fi p; L p k g, where the p levels of the polynomial hierarchy [MS72,Sto77]. 2. [LS91,BBS86] For each k 2, define ExtendedLow k = fL fi p; L p; SATL k1 g. <p> A set A is said to be GeneralizedLow 2 if p; A p 2 <ref> [BBS86] </ref>.
Reference: [BH77] <author> L. Berman and J. Hartmanis. </author> <title> On isomorphisms and density of NP and other complete sets. </title> <journal> SIAM Journal on Computing, </journal> <volume> 6(2) </volume> <pages> 305-322, </pages> <year> 1977. </year>
Reference-contexts: R btt (P-sel) 6 R tt (P-sel). 5. (Watanabe, referenced in [Tod91]) R p p 6. ([Sel79][Sel82b, Theorem 12][Ko83, Theorem 3]) R p T (P-sel) = P=poly. (Meyer, as cited in <ref> [BH77] </ref>, has noted that P=poly = R p T (SPARSE), and P/poly is also well known to equal R p tt (TALLY).) Theorem 2.2 1.
Reference: [BK88] <author> R. Book and K. Ko. </author> <title> On sets truth-table reducible to sparse sets. </title> <journal> SIAM Journal on Computing, </journal> <volume> 17(5) </volume> <pages> 903-919, </pages> <year> 1988. </year>
Reference: [BLS84] <author> R. Book, T. Long, and A. Selman. </author> <title> Quantitative relativizations of complexity classes. </title> <journal> SIAM Journal on Computing, </journal> <volume> 13(3) </volume> <pages> 461-487, </pages> <year> 1984. </year>
Reference: [BLS85] <author> R. Book, T. Long, and A. Selman. </author> <title> Qualitative relativizations of complexity classes. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 30 </volume> <pages> 395-413, </pages> <year> 1985. </year>
Reference-contexts: The power of nondeterministic computation is one unifying theme of complexity theory. In light of this and the fact that P is the largest level of the polynomial hierarchy that is known to contain only P-selective sets, Section 3 studies the class of NP-selective sets|sets having an "NP function <ref> [BLS85] </ref>" that serves as a selector. (Formal definitions are given in Section 3.) Self-reducibility (see the survey [JY90]) has been widely discussed as a property possessed by most "natural" sets, e.g., SAT. <p> Later in this section, we introduce selectivity notions that are more inclusive still: #P-selectivity, OptP-selectivity, SpanP-selectivity, and selectivity versions of three types of NP functions more general than the type defined below. Definition 3.1 <ref> [BLS85] </ref> NPSV t is the class of total (single-valued) functions f : fl ! fl such that there is a nondeterministic polynomial-time Turing machine N such that, for every input x 2 fl : 1. <p> Recall that 2 We use the natural notion of access to a single-valued function oracle; the value of the function on the queried string is returned. 18 set-f (x) = fz fi z is an output of f (x)g. Definition 3.6 <ref> [BLS85] </ref> 1.
Reference: [BLS93] <author> H. Buhrman, L. Longpre, and E. Spaan. </author> <title> SPARSE reduces conjunctively to TALLY. </title> <booktitle> In Proceedings of the 8th Structure in Complexity Theory Conference, </booktitle> <pages> pages 208-214. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> May </month> <year> 1993. </year>
Reference: [BTvEB93] <author> H. Buhrman, L. Torenvliet, and P. van Emde Boas. </author> <title> Twenty questions to a P-selector. </title> <type> Manuscript, </type> <year> 1993. </year>
Reference-contexts: Previous results along this line include only Buhrman et al.'s result 1 that R p pos (P-sel) = P-sel <ref> [BTvEB93] </ref> and Watanabe's result (referenced in [Tod91]) that R p p T (P-sel). <p> Theorem 3.15 If A p pos B and B is NP-selective, then 1. A is NP-selective, and 2. if B 6= fl and B 6= ; then A NP SV t m B. Lemma 3.16 (Relativization of a result of <ref> [BTvEB93] </ref>) If A p pos B, B is FP L - selective for some set L, B 6= ;, and B 6= fl , then A p; L m B, and hence A is FP L -selective.
Reference: [BvHT93] <author> H. Buhrman, P. van Helden, and L. Torenvliet. </author> <title> P-selective self-reducible sets: A new characterization of P. </title> <booktitle> In Proceedings of the 8th Structure in Complexity Theory Conference, </booktitle> <pages> pages 44-51. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> May </month> <year> 1993. </year>
Reference-contexts: It is known that a Turing self-reducible set A is in P if and only if it is P-selective <ref> [BvHT93] </ref>. Analogously, we show that if a Turing self-reducible set A is NP-selective, then it is in NP T coNP. This suggests that we might hope to use NP-selectivity as a tool for comparing NP and NP T coNP. <p> Thus, we have nondeterministic polynomial-time procedures for both membership in A and non-membership in A. Theorem 3.8 should be viewed as a nondeterministic analog of the result of Buhrman, van Helden, and Torenvliet <ref> [BvHT93] </ref> that "for all sets A, if A is P-selective and polynomial-time Turing self-reducible, then A 2 P." However, though mirroring closely the structure and proof of their result, Theorem 3.8 is sufficiently general that it does not seem to be provable via relativization of Buhrman, van Helden, and Torenvliet's result, <p> A relativized form of the Buhrman, van Helden, and Torenvliet result is: Fact 3.9 (Relativization of a result of <ref> [BvHT93] </ref>) For all sets L and A, if A is FP L -selective and polynomial-time Turing self-reducible, then A 2 P L . Let A be NP-selective via NPSV t selector function f. By Lemma 3.5, Part 2, f 2 FP L for some L 2 NP coNP. <p> So by Fact 3.9, A 2 P NP"coNP = NP T coNP. The 1-tt part of the parenthetical remark (but not, as far as we know, the fl part of the parenthetical remark) can also be obtained by relativizing the related 1-tt result of Buhrman, van Helden, and Torenvliet <ref> [BvHT93] </ref>. 21 Simplifying our result to its quintessential form, we have the following. Corollary 3.13 There is an NP-complete set that is NP-sel if and only if NP = coNP. Equivalently, NP NP-sel if and only if NP = coNP. <p> disjunctive self-reducible sets in (NP T coNP)=poly are Low 2 , but this does not yield a Low 2 result for the NP-selective sets as not even all P-selective sets are disjunctive (or even Turing) self-reducible (this follows immediately from the facts that all Turing-self-reducible P-selective sets are in P <ref> [BvHT93] </ref>, yet there are P-selective sets of arbitrary complexity [Sel79,Sel82a]). However, we can prove that the NP-selective sets are even lower. Indeed, they are as low as the P-selective sets. The following theorem follows immediately from a more general result we will establish later, Corollary 3.33.
Reference: [Cai86] <author> J. Cai. </author> <title> On Some Most Probable Separations of Complexity Classes. </title> <type> PhD thesis, </type> <institution> Cornell University, </institution> <address> Ithaca, NY, </address> <year> 1986. </year> <month> 36 </month>
Reference-contexts: Though it remains plausible that the polynomial hierarchy collapses relative to a random oracle, the conventional wisdom is that the hierarchy is does not collapse relative to a random oracle (see <ref> [Cai86] </ref> for some indication of the difficulties surrounding this issue). Note that, in the table contained in the statement of Theorem 3.34, six of the eight boxes have the characterization NP = coNP.
Reference: [CGH + 88] <author> J. Cai, T. Gundermann, J. Hartmanis, L. Hemachandra, V. Sewelson, K. Wag--ner, and G. Wechsung. </author> <title> The boolean hierarchy I: Structural properties. </title> <journal> SIAM Journal on Computing, </journal> <volume> 17(6) </volume> <pages> 1232-1252, </pages> <year> 1988. </year>
Reference-contexts: By hypothesis, A is Turing self reducible, and thus, by Buhrman et al.'s Fact 3.9, A 2 P L . Thus, A p T L, which proves the lemma. Turing reduce to tally sets) sets for NP does not robustly (i.e., in every relativized world) collapse the "Boolean hierarchy <ref> [CGH + 88] </ref>" and Kadin [Kad89] established the apparently incomparable result that the same hypothesis does not robustly imply the collapse of the polynomial hierarchy to P with (constructibly) less than O (log n) queries to NP.
Reference: [CGH + 89] <author> J. Cai, T. Gundermann, J. Hartmanis, L. Hemachandra, V. Sewelson, K. Wag-ner, and G. Wechsung. </author> <title> The boolean hierarchy II: </title> <journal> Applications. SIAM Journal on Computing, </journal> <volume> 18(1) </volume> <pages> 95-111, </pages> <year> 1989. </year>
Reference-contexts: However, a relativized counterexample is implicitly in the literature. Cai et al. <ref> [CGH + 89] </ref> proved that the existence of sparse Turing-hard (which is equivalent to tally Turing-hard, as sparse sets 22 Theorem 3.21, in the realm of "promise problems ([EY80,ESY84], see also [GS88,CHV])." Informally, PP-A [Sel88,LS93] is the promise problem corresponding to P-selectivity; a solution to PP-A will|if the promise is met
Reference: [CH90] <author> J. Cai and L. Hemachandra. </author> <title> On the power of parity polynomial time. </title> <journal> Mathematical Systems Theory, </journal> <volume> 23(2) </volume> <pages> 95-106, </pages> <year> 1990. </year>
Reference: [CHV] <author> J. Cai, L. Hemachandra, and J. Vyskoc. </author> <title> Promises and fault-tolerant database access. </title> <editor> In K. Ambos-Spies, S. Homer, and U. Schoning, editors, </editor> <booktitle> Complexity Theory. </booktitle> <address> Cambridge University Press. </address> <note> To appear. </note>
Reference-contexts: Access of this sort is known as "guarded" or "smart" access; it was introduced by Grollmann and Selman [GS88] and has been recently studied in detail by Cai, Hemachandra, and Vyskoc <ref> [CHV] </ref>. So, informally, what the following refined version of the last three parts of the lemma states is that not only does Turing access to strong computation save a quantifier, but so also does even guarded access to strong computation.
Reference: [ESY84] <author> S. Even, A. Selman, and Y. Yacobi. </author> <title> The complexity of promise problems with applications to public-key cryptography. </title> <journal> Information and Control, </journal> <volume> 61(2) </volume> <pages> 159-173, </pages> <year> 1984. </year>
Reference: [EY80] <author> S. Even and Y. Yacobi. </author> <title> Cryptocomplexity and NP-completeness. </title> <booktitle> In Proceedings of the 7th International Colloquium on Automata, Languages, and Programming, </booktitle> <pages> pages 195-207. </pages> <note> Springer-Verlag Lecture Notes in Computer Science, </note> <year> 1980. </year>
Reference: [FHOS93] <author> S. Fenner, S. Homer, M. Ogiwara, and A. Selman. </author> <title> On using oracles that compute values. </title> <booktitle> In Proceedings of the 10th Annual Symposium on Theoretical Aspects of Computer Science, </booktitle> <pages> pages 398-407. </pages> <note> Springer-Verlag Lecture Notes in Computer Science #665, </note> <month> February </month> <year> 1993. </year>
Reference-contexts: An interesting open issue highlighted by Theorem 3.34 is whether some complexity class collapse completely characterizes whether all NP sets are NPSV-selective. However, the necessary and sufficient conditions we've obtained already address an important problem raised by Fenner et al. <ref> [FHOS93] </ref> and Selman [Sel], namely, whether all NPMV functions have NPSV refinements (that is, whether for each NPMV function there is an NPSV function having the same domain whose output set when defined is a subset of the outputs of the NPMV function). <p> Fenner et al. <ref> [FHOS93] </ref> have introduced a model, different from that mentioned in the previous sentence, in which a machine accessing a multivalued function oracle must compute robustly with respect to every single-valued refinement of the oracle; we will call this model the value model. Analogously to results of Fenner et al. [FHOS93], we <p> al. <ref> [FHOS93] </ref> have introduced a model, different from that mentioned in the previous sentence, in which a machine accessing a multivalued function oracle must compute robustly with respect to every single-valued refinement of the oracle; we will call this model the value model. Analogously to results of Fenner et al. [FHOS93], we note that in the value model NP NPMV = p 2 and NP NPMV t = NP. 2. Regarding Lemma 3.5, Part 4, the proof is also class-specific. <p> Analogously to a result of Fenner et al. <ref> [FHOS93] </ref>, in the value model NPSV t NPMV t = NPSV t . Comment 3.40 If A fl A and A is NPMV-selective [sic.], then A 2 NP T coNP. Comment 3.41 1.
Reference: [Gav92a] <author> R. Gavalda. </author> <title> Bounding the complexity of advice functions. </title> <booktitle> In Proceedings of the 7th Structure in Complexity Theory Conference, </booktitle> <pages> pages 249-254. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> June </month> <year> 1992. </year>
Reference: [Gav92b] <author> R. Gavalda. </author> <title> On conjunctive and disjunctive reductions to sparse sets. </title> <type> Manuscript, </type> <month> January </month> <year> 1992. </year>
Reference: [GB91] <author> R. Gavalda and J. Balcazar. </author> <title> Strong and robustly strong polynomial time re-ducibilities to sparse sets. </title> <journal> Theoretical Computer Science, </journal> <volume> 88(1) </volume> <pages> 1-14, </pages> <year> 1991. </year>
Reference-contexts: We stress that Theorem 3.23 should not be confused with the potentially weaker (though also correct) claim that NP-sel (NP=poly) T (coNP=poly). (The reason this is potentially weaker is that (NP=poly) T (coNP=poly) = (NP T coNP) SPARSE (NP coNP)=poly <ref> [GB91] </ref>.) From Theorem 3.23, it immediately follows that the NP-selective sets in NP are Low 3 (since (NP T coNP)=poly T NP (NP=poly) T (coNP=poly) T (coNP=poly) T NP, which due to Kamper [Kam91] is Low 3 ).
Reference: [GHJY91] <author> J. Goldsmith, L. Hemachandra, D. Joseph, and P. Young. </author> <title> Near-testable sets. </title> <journal> SIAM Journal on Computing, </journal> <volume> 20(3) </volume> <pages> 506-523, </pages> <year> 1991. </year>
Reference-contexts: 1 Introduction Given the disappointingly small class of sets that are known to have polynomial-time decision algorithms, researchers have explored more flexible approaches to efficient set recognition (or near-recognition): almost polynomial time [MP79], average polynomial time (see [Gur91]), implicit membership testability [HH91], near-testability <ref> [GHJY91] </ref>, P-closeness [Sch86,Yes83], P-selectivity [Sel79], and others. One of the more natural of these more general recognition notions is P-selectivity.
Reference: [GS88] <author> J. Grollmann and A. Selman. </author> <title> Complexity measures for public-key cryptosys-tems. </title> <journal> SIAM Journal on Computing, </journal> <volume> 17(2) </volume> <pages> 309-335, </pages> <year> 1988. </year>
Reference-contexts: Access of this sort is known as "guarded" or "smart" access; it was introduced by Grollmann and Selman <ref> [GS88] </ref> and has been recently studied in detail by Cai, Hemachandra, and Vyskoc [CHV].
Reference: [Gur91] <author> Y. Gurevich. </author> <title> Average case completeness. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 42 </volume> <pages> 346-398, </pages> <year> 1991. </year> <month> 37 </month>
Reference-contexts: 1 Introduction Given the disappointingly small class of sets that are known to have polynomial-time decision algorithms, researchers have explored more flexible approaches to efficient set recognition (or near-recognition): almost polynomial time [MP79], average polynomial time (see <ref> [Gur91] </ref>), implicit membership testability [HH91], near-testability [GHJY91], P-closeness [Sch86,Yes83], P-selectivity [Sel79], and others. One of the more natural of these more general recognition notions is P-selectivity.
Reference: [GW] <author> R. Gavalda and O. Watanabe. </author> <title> On the computational complexity of small descriptions. </title> <journal> SIAM Journal on Computing. </journal> <note> To appear. Preliminary version appears in Proceedings of the 6th Structure in Complexity Theory Conference (1991), IEEE Computer Society Press, pp. 89-101. </note>
Reference: [HH91] <author> L. Hemachandra and A. Hoene. </author> <title> On sets with efficient implicit membership tests. </title> <journal> SIAM Journal on Computing, </journal> <volume> 20(6) </volume> <pages> 1148-1156, </pages> <year> 1991. </year>
Reference-contexts: 1 Introduction Given the disappointingly small class of sets that are known to have polynomial-time decision algorithms, researchers have explored more flexible approaches to efficient set recognition (or near-recognition): almost polynomial time [MP79], average polynomial time (see [Gur91]), implicit membership testability <ref> [HH91] </ref>, near-testability [GHJY91], P-closeness [Sch86,Yes83], P-selectivity [Sel79], and others. One of the more natural of these more general recognition notions is P-selectivity.
Reference: [HHT93] <author> Y. Han, L. Hemachandra, and T. Thierauf. </author> <title> Threshold computation and cryptographic security. </title> <type> Technical Report TR-461, </type> <institution> University of Rochester, Department of Computer Science, Rochester, </institution> <address> NY, </address> <month> June </month> <year> 1993. </year>
Reference-contexts: a polynomial composing the polynomial running times of N 1 , N 2 , and N 3 . 25 Let h: : :i be any nice, "multi-arity onto" pairing function (that is, the ranges of different arities are disjoint, and the union over all arities covers fl , see, e.g., <ref> [HHT93] </ref>).
Reference: [HNOS93] <author> E. Hemaspaandra, A. Naik, M. Ogiwara, and A. Selman. </author> <title> P-selective sets, and reducing search to decision vs. </title> <type> self-reducibility. Technical Report 93-21, </type> <institution> State University of New York at Buffalo, Department of Computer Science, Buffalo, </institution> <address> NY, </address> <year> 1993. </year>
Reference-contexts: Set T = T 0 S V . So we have satisfied (R). Related to Corollary 2.20 is the recent result of E. Hemaspaandra et al. <ref> [HNOS93] </ref> that E 6= UE implies there is a tally set T in R p T (UPP), where UP is Valiant's [Val76] notion of unambiguous polynomial time, and, analogously, UE is the class of sets computable in unambiguous time 2 O (n) . 3 Nondeterministic Selectivity Though all sets in P
Reference: [Joc68] <author> C. Jockusch. </author> <title> Semirecursive sets and positive reducibility. </title> <journal> Transactions of the AMS, </journal> <volume> 131(2) </volume> <pages> 420-436, </pages> <year> 1968. </year>
Reference-contexts: We will use P-sel to denote the class of P-selective sets. The function f is said to be a selector (function) for A. Since its introduction by Selman [Sel79,Sel82a,Sel82b] as a complexity-theoretic analog to the semirecursive sets <ref> [Joc68] </ref> from recursive function theory, P-selectivity has attracted a good deal of interest, and there have recently been many advances in our understanding of this class [Tod91,HNOS93,NOS93,BvHT93,BTvEB93].
Reference: [JY90] <author> D. Joseph and P. Young. </author> <title> Self-reducibility: Effects of internal structure on computational complexity. </title> <editor> In A. Selman, editor, </editor> <booktitle> Complexity Theory Retrospective, </booktitle> <pages> pages 82-107. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: and the fact that P is the largest level of the polynomial hierarchy that is known to contain only P-selective sets, Section 3 studies the class of NP-selective sets|sets having an "NP function [BLS85]" that serves as a selector. (Formal definitions are given in Section 3.) Self-reducibility (see the survey <ref> [JY90] </ref>) has been widely discussed as a property possessed by most "natural" sets, e.g., SAT. It is known that a Turing self-reducible set A is in P if and only if it is P-selective [BvHT93].
Reference: [Kad89] <author> J. Kadin. </author> <title> P NP[log n] and sparse Turing-complete sets for NP. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 39(3) </volume> <pages> 282-298, </pages> <year> 1989. </year>
Reference-contexts: Thus, A p T L, which proves the lemma. Turing reduce to tally sets) sets for NP does not robustly (i.e., in every relativized world) collapse the "Boolean hierarchy [CGH + 88]" and Kadin <ref> [Kad89] </ref> established the apparently incomparable result that the same hypothesis does not robustly imply the collapse of the polynomial hierarchy to P with (constructibly) less than O (log n) queries to NP.
Reference: [Kam91] <author> J. Kamper. </author> <title> Non-uniform proof systems: a new framework to describe nonuniform and probabilistic complexity classes. </title> <journal> Theoretical Computer Science, </journal> <volume> 85(2) </volume> <pages> 305-331, </pages> <year> 1991. </year>
Reference-contexts: reason this is potentially weaker is that (NP=poly) T (coNP=poly) = (NP T coNP) SPARSE (NP coNP)=poly [GB91].) From Theorem 3.23, it immediately follows that the NP-selective sets in NP are Low 3 (since (NP T coNP)=poly T NP (NP=poly) T (coNP=poly) T (coNP=poly) T NP, which due to Kamper <ref> [Kam91] </ref> is Low 3 ). Kamper [Kam91] proves 24 also that all disjunctive self-reducible sets in (NP T coNP)=poly are Low 2 , but this does not yield a Low 2 result for the NP-selective sets as not even all P-selective sets are disjunctive (or even Turing) self-reducible (this follows immediately <p> that (NP=poly) T (coNP=poly) = (NP T coNP) SPARSE (NP coNP)=poly [GB91].) From Theorem 3.23, it immediately follows that the NP-selective sets in NP are Low 3 (since (NP T coNP)=poly T NP (NP=poly) T (coNP=poly) T (coNP=poly) T NP, which due to Kamper <ref> [Kam91] </ref> is Low 3 ). Kamper [Kam91] proves 24 also that all disjunctive self-reducible sets in (NP T coNP)=poly are Low 2 , but this does not yield a Low 2 result for the NP-selective sets as not even all P-selective sets are disjunctive (or even Turing) self-reducible (this follows immediately from the facts that all Turing-self-reducible
Reference: [KL80] <author> R. Karp and R. Lipton. </author> <title> Some connections between nonuniform and uniform complexity classes. </title> <booktitle> In Proceedings of the 12th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 302-309, </pages> <month> April </month> <year> 1980. </year>
Reference-contexts: In this section, we study the structure of the E (P-sel) and R (P-sel) classes stretching from P-sel = E p m (P-sel) up to R T (P-sel), which equals P=poly (see [Sel79,Sel82b,Ko83]), the well-studied class of sets having small circuits <ref> [KL80] </ref>. Previous results along this line include only Buhrman et al.'s result 1 that R p pos (P-sel) = P-sel [BTvEB93] and Watanabe's result (referenced in [Tod91]) that R p p T (P-sel).
Reference: [Ko83] <author> K. Ko. </author> <title> On self-reducibility and weak P-selectivity. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 26 </volume> <pages> 209-221, </pages> <year> 1983. </year>
Reference-contexts: Those techniques suffice to prove (see [Sel88]) that "If A is p d -complete for NP, then PP-A is NP Turing-hard," but note that Theorem 3.21 goes beyond the limitations of disjunctive reductions. The P-selective sets were shown by Ko <ref> [Ko83] </ref> to be in P/poly, the class of sets having small circuits, and the P-selective sets in NP were shown by Ko and Schoning [KS85] to fall into the second level of the low hierarchy [Sch83] (that is, A 2 NP T = NP NP ). <p> For each k 3, define ExtendedLowfi k = fL fi k1 )[O (log n)] P ( p; SATL k2 )[O (log n)] g. Theorem 3.23 NP-sel (NP T coNP)=poly. Lemma 3.24 ([LS93], see also <ref> [Ko83] </ref>) For all sets A and L, if A is FP L -selective, then A 2 P L =poly. Proof of Theorem 3.23 Follows immediately from Lemma 3.24 and Part 2 of Lemma 3.5. <p> B n L =n , 2. B n has at most n elements, and 3. (8x 2 n ) [x 2 L () (9y 2 B n ) [set-f (x; y) = fxg]]. This is true, as in the case of Ko's proof that P-sel P=poly <ref> [Ko83] </ref>, as we may repeatedly choose to add to B n some element of L =n that loses to (that is, proves less likely to be in L according to f ) at least half the elements that both are not yet in B n and don't yet beat some element
Reference: [Ko89] <author> K. Ko. </author> <title> Distinguishing conjunctive and disjunctive reducibilities by sparse sets. </title> <journal> Information and Computation, </journal> <volume> 81(1) </volume> <pages> 62-87, </pages> <year> 1989. </year>
Reference: [Kob93] <author> J. Kobler. </author> <title> Locating P/poly optimally in the extended low hierarchy. </title> <booktitle> In Proceedings of the 10th Annual Symposium on Theoretical Aspects of Computer Science, </booktitle> <pages> pages 28-37. </pages> <note> Springer-Verlag Lecture Notes in Computer Science #665, </note> <month> February </month> <year> 1993. </year>
Reference-contexts: Theorem 3.26 If A is Turing self-reducible and A 2 R p T (NP-sel), then A is GeneralizedLow 2 . As to extended lowness, Kobler <ref> [Kob93] </ref> has shown that that (NP T coNP)=poly is ExtendedLowfi 3 . From this and Theorem 3.23, we can immediately conclude that the NP-selective sets are ExtendedLowfi 3 . An interesting question left open by Kobler's paper is whether (NP=poly) T (coNP=poly) is extended low.
Reference: [Kre88] <author> M. Krentel. </author> <title> The complexity of optimization problems. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 36 </volume> <pages> 490-509, </pages> <year> 1988. </year> <month> 38 </month>
Reference-contexts: F C-sel will denote the class of F C-selective sets. Let #P [Val79], OptP <ref> [Kre88] </ref>, and SpanP [KST89] be as defined in the standard literature.
Reference: [KS85] <author> K. Ko and U. Schoning. </author> <title> On circuit-size complexity and the low hierarchy in NP. </title> <journal> SIAM Journal on Computing, </journal> <volume> 14(1) </volume> <pages> 41-51, </pages> <year> 1985. </year>
Reference-contexts: The P-selective sets were shown by Ko [Ko83] to be in P/poly, the class of sets having small circuits, and the P-selective sets in NP were shown by Ko and Schoning <ref> [KS85] </ref> to fall into the second level of the low hierarchy [Sch83] (that is, A 2 NP T = NP NP ). Do similar results hold for NP-selectivity? The NP-selective sets in fact have the same lowness properties as the P-selective sets (Theorem 3.25), and have nonuniform representations.
Reference: [KST89] <author> J. Kobler, U. Schoning, and J. Toran. </author> <title> On counting and approximation. </title> <journal> Acta Informatica, </journal> <volume> 26 </volume> <pages> 363-379, </pages> <year> 1989. </year>
Reference-contexts: F C-sel will denote the class of F C-selective sets. Let #P [Val79], OptP [Kre88], and SpanP <ref> [KST89] </ref> be as defined in the standard literature.
Reference: [LLS75] <author> R. Ladner, N. Lynch, and A. Selman. </author> <title> A comparison of polynomial time re-ducibilities. </title> <journal> Theoretical Computer Science, </journal> <volume> 1(2) </volume> <pages> 103-124, </pages> <year> 1975. </year>
Reference: [Lon82] <author> T. </author> <title> Long. Strong nondeterministic polynomial-time reducibilities. </title> <journal> Theoretical Computer Science, </journal> <volume> 21 </volume> <pages> 1-25, </pages> <year> 1982. </year>
Reference-contexts: However, we'll soon observe (Proposition 3.11) that all sets in NP T coNP are NP-selective. We note the following easy observations, whose final three parts essentially reflect the effects of strong (in the sense of Long <ref> [Lon82] </ref> and Selman [Sel78]) computation; informally put, strong computation is computation such that at least one nondeterministic path gets a correct answer and no paths get wrong answers. <p> Similarly, with one question to an NP SATH set E 00 (defined analogously), we determine whether the "s" advice collection is good for helping S 2 . Note that when given the correct advice strings, an NP machine can strongly (in the sense of Long <ref> [Lon82] </ref> and Selman [Sel78]) check whether x 2 H or x 62 H, by nondeterministically guessing which is true and checking an x 2 H guess via checking whether hx; r jxj i 2 S 1 , and checking an x 62 H guess via checking whether hx; s jxj i
Reference: [LS91] <author> T. Long and M. Sheu. </author> <title> A refinement of the low and high hierarchies. </title> <type> Technical Report OSU-CISRC-2/91-TR6, </type> <institution> Ohio State University, Department of Computer Science, Columbus, Ohio, </institution> <month> February </month> <year> 1991. </year>
Reference-contexts: Do similar results hold for NP-selectivity? The NP-selective sets in fact have the same lowness properties as the P-selective sets (Theorem 3.25), and have nonuniform representations. Lowness and extended lowness are used here as defined, respectively, by Schoning [Sch83], and by Long and Sheu <ref> [LS91] </ref> and Balcazar, Book, and Schoning [BBS86].
Reference: [LS93] <author> L. Longpre and A. Selman. </author> <title> Hard promise problems and nonuniform complexity. </title> <journal> Theoretical Computer Science, </journal> <volume> 115(3) </volume> <pages> 277-290, </pages> <year> 1993. </year>
Reference-contexts: For any class E, we say PP-F is Turing-hard for E if PP-F is Turing-hard for each set in E. Just as A is P-selective if and only if PP-A has a solution in P <ref> [LS93] </ref>, we have the following (note that NP T coNP = P NP"coNP [Sel74,Sel79]). Lemma 3.19 For each set A, A is NP-selective if and only if PP-A has a solution in NP coNP. Lemma 3.20 1. Let A p pos B and let L be any solution of PP-B. <p> Theorem 3.21 If A is p pos -hard for NP, then PP-A is Turing-hard for NP. The above theorem should be compared with the techniques of [Sel88], which "apply only when A 2 NP and, at that, only when A is p d -equivalent to a disjunctive self-reducible set" <ref> [LS93] </ref>. Those techniques suffice to prove (see [Sel88]) that "If A is p d -complete for NP, then PP-A is NP Turing-hard," but note that Theorem 3.21 goes beyond the limitations of disjunctive reductions. <p> A set A is said to be GeneralizedLow 2 if p; A p 2 [BBS86]. It is not hard to see|by Lemma 3.5, the standard equality NP = NP NP T coNP [Sch83], and relativizing the result of Longpre and Selman <ref> [LS93] </ref> that "If A is Turing self-reducible and A is Turing reducible to a P-selective set then A is GeneralizedLow 2 "|that we obtain the following generalized lowness result. Theorem 3.26 If A is Turing self-reducible and A 2 R p T (NP-sel), then A is GeneralizedLow 2 . <p> However, below, we establish that the NPSV-selective sets in NP are in fact Low 2 . Lemma 3.31 <ref> [LS93] </ref> If A is in p i and B is a solution of PP-A, then p; A p; B Theorem 3.32 If A 2 NPSV-sel T NP, then PP-A has a solution L that is Low 2 .
Reference: [MP79] <author> A. Meyer and M. Paterson. </author> <title> With what frequency are apparently intractable problems difficult? Technical Report MIT/LCS/TM-126, </title> <institution> MIT Laboratory for Computer Science, </institution> <address> Cambridge, MA, </address> <year> 1979. </year>
Reference-contexts: 1 Introduction Given the disappointingly small class of sets that are known to have polynomial-time decision algorithms, researchers have explored more flexible approaches to efficient set recognition (or near-recognition): almost polynomial time <ref> [MP79] </ref>, average polynomial time (see [Gur91]), implicit membership testability [HH91], near-testability [GHJY91], P-closeness [Sch86,Yes83], P-selectivity [Sel79], and others. One of the more natural of these more general recognition notions is P-selectivity.
Reference: [MS72] <author> A. Meyer and L. Stockmeyer. </author> <title> The equivalence problem for regular expressions with squaring requires exponential space. </title> <booktitle> In Proceedings of the 13th IEEE Symposium on Switching and Automata Theory, </booktitle> <pages> pages 125-129, </pages> <year> 1972. </year>
Reference: [NOS93] <author> A. Naik, M. Ogiwara, and A. Selman. </author> <title> P-selective sets, and reducing search to decision vs. self-reducibility. </title> <booktitle> In Proceedings of the 8th Structure in Complexity Theory Conference, </booktitle> <pages> pages 52-64. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> May </month> <year> 1993. </year>
Reference: [OH93] <author> M. Ogiwara and L. Hemachandra. </author> <title> A complexity theory for closure properties. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 46 </volume> <pages> 295-325, </pages> <year> 1993. </year>
Reference: [PZ83] <author> C. Papadimitriou and S. Zachos. </author> <title> Two remarks on the power of counting. </title> <booktitle> In Proceedings 6th GI Conference on Theoretical Computer Science, </booktitle> <pages> pages 269-276. </pages> <note> Springer-Verlag Lecture Notes in Computer Science #145, </note> <year> 1983. </year>
Reference: [Ric89] <author> C. Rich. </author> <title> Positive relativizations of the P=?NP problem. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 38(3) </volume> <pages> 511-523, </pages> <year> 1989. </year>
Reference-contexts: We say that A NP SV t m B if there is an NPSV t function f such that for every x 2 fl it holds that x 2 A () f (x) 2 B (see <ref> [Ric89] </ref>). It will be clear from the definition below of NP-selectivity that if A NP SV t m B and B is NP-selective, then A is also NP-selective. Definition 1.1 defined the P-selective sets. We now propose a natural extension of that definition to selectivity via any class of functions.
Reference: [Roy93] <author> J. Royer, </author> <month> August </month> <year> 1993. </year> <type> Personal Communication. </type>
Reference-contexts: Previously, it was known only that (a) relative to a random oracle not all NPMV functions have NPSV refinements <ref> [Roy93] </ref>, and (b) if all NPMV functions have NPSV refinements, then there exist disjoint NP-Turing-complete sets that are separated only by NP-hard sets [Sel].
Reference: [Sch83] <author> U. Schoning. </author> <title> A low and a high hierarchy in NP. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 27 </volume> <pages> 14-28, </pages> <year> 1983. </year>
Reference-contexts: Section 3 also studies the lowness and nonuniform complexity of NP-selective sets. We show that NP-selective sets are of simple nonuniform complexity; all NP-selective sets are in (NP coNP)=poly. Though inclusion in the third level of the low hierarchy <ref> [Sch83] </ref> for all NP-selective sets in NP follows immediately from this, we show the stronger result that NP-selective sets are as low as P-selective sets: all NP-selective sets in NP are in the second level of the low hierarchy. <p> The P-selective sets were shown by Ko [Ko83] to be in P/poly, the class of sets having small circuits, and the P-selective sets in NP were shown by Ko and Schoning [KS85] to fall into the second level of the low hierarchy <ref> [Sch83] </ref> (that is, A 2 NP T = NP NP ). Do similar results hold for NP-selectivity? The NP-selective sets in fact have the same lowness properties as the P-selective sets (Theorem 3.25), and have nonuniform representations. Lowness and extended lowness are used here as defined, respectively, by Schoning [Sch83], and <p> hierarchy <ref> [Sch83] </ref> (that is, A 2 NP T = NP NP ). Do similar results hold for NP-selectivity? The NP-selective sets in fact have the same lowness properties as the P-selective sets (Theorem 3.25), and have nonuniform representations. Lowness and extended lowness are used here as defined, respectively, by Schoning [Sch83], and by Long and Sheu [LS91] and Balcazar, Book, and Schoning [BBS86]. Definition 3.22 1. [Sch83] For each k 1, define Low k = fL 2 NP fi p; L p k g, where the p levels of the polynomial hierarchy [MS72,Sto77]. 2. [LS91,BBS86] For each k 2, define ExtendedLow <p> Lowness and extended lowness are used here as defined, respectively, by Schoning <ref> [Sch83] </ref>, and by Long and Sheu [LS91] and Balcazar, Book, and Schoning [BBS86]. Definition 3.22 1. [Sch83] For each k 1, define Low k = fL 2 NP fi p; L p k g, where the p levels of the polynomial hierarchy [MS72,Sto77]. 2. [LS91,BBS86] For each k 2, define ExtendedLow k = fL fi p; L p; SATL k1 g. <p> A set A is said to be GeneralizedLow 2 if p; A p 2 [BBS86]. It is not hard to see|by Lemma 3.5, the standard equality NP = NP NP T coNP <ref> [Sch83] </ref>, and relativizing the result of Longpre and Selman [LS93] that "If A is Turing self-reducible and A is Turing reducible to a P-selective set then A is GeneralizedLow 2 "|that we obtain the following generalized lowness result.
Reference: [Sch86] <author> U. Schoning. </author> <title> Complete sets and closeness to complexity classes. </title> <journal> Mathematical Systems Theory, </journal> <volume> 19(1) </volume> <pages> 29-42, </pages> <year> 1986. </year>
Reference: [Sel] <author> A. Selman. </author> <title> A taxonomy of complexity classes of functions. </title> <journal> Journal of Computer and System Sciences. </journal> <note> In press. 39 </note>
Reference-contexts: Definition 3.3 has the nice property that for single-valued, total classes of selector functions, such as is the case for both the P-selective sets and the NP-selective sets, Definition 3.3 coincides exactly with the definition above and also with Definition 1.1. Definition 3.2 (see, e.g., <ref> [Sel] </ref>) For every (possibly partial, possibly multivalued) function f : fl ! fl , let set-f (x) = fz fi fi z is an output of f (x)g. Definition 3.3 [Selectivity by Classes of Functions] 1. <p> An interesting open issue highlighted by Theorem 3.34 is whether some complexity class collapse completely characterizes whether all NP sets are NPSV-selective. However, the necessary and sufficient conditions we've obtained already address an important problem raised by Fenner et al. [FHOS93] and Selman <ref> [Sel] </ref>, namely, whether all NPMV functions have NPSV refinements (that is, whether for each NPMV function there is an NPSV function having the same domain whose output set when defined is a subset of the outputs of the NPMV function). <p> One can pose this question, equivalently and more concretely, as: Is there a function f 2 NPSV such that domain (f ) = SAT and (8F 2 SAT )[f (F ) is a satisfying assignment of F ] <ref> [Sel] </ref>? Informally, can an NP function "pick off" a single satisfying assignment of a satisfiable formula? (This question can be compared with the results of Valiant and Vazirani [VV86] on probabilistically reducing SAT to a question about (solutions to a promise problem regarding) unambiguous computation.) It follows from Theorem 3.34 that <p> results of Valiant and Vazirani [VV86] on probabilistically reducing SAT to a question about (solutions to a promise problem regarding) unambiguous computation.) It follows from Theorem 3.34 that all NPMV functions have NPSV refinements if the polynomial hierarchy collapses to NP (this can be seen also from a result of <ref> [Sel] </ref>), and that all NPMV functions have NPSV refinements only if the polynomial hierarchy collapses to NP NP . <p> Previously, it was known only that (a) relative to a random oracle not all NPMV functions have NPSV refinements [Roy93], and (b) if all NPMV functions have NPSV refinements, then there exist disjoint NP-Turing-complete sets that are separated only by NP-hard sets <ref> [Sel] </ref>. Corollary 3.38, though establishing strong evidence that NPMV functions lack NPSV refinements, leaves open the question of whether all NPMV functions have single-valued refinements computable in FP NP tt (see [WT93,AFW92,HNOS93,NOS93,Sel] for background and discussion).
Reference: [Sel74] <author> A. Selman. </author> <title> On the structure of NP. </title> <journal> Notices of the AMS, </journal> <volume> 2:310, </volume> <year> 1974. </year>
Reference: [Sel78] <author> A. Selman. </author> <title> Polynomial time enumeration reducibility. </title> <journal> SIAM Journal on Computing, </journal> <volume> 7(4) </volume> <pages> 440-457, </pages> <year> 1978. </year>
Reference-contexts: However, we'll soon observe (Proposition 3.11) that all sets in NP T coNP are NP-selective. We note the following easy observations, whose final three parts essentially reflect the effects of strong (in the sense of Long [Lon82] and Selman <ref> [Sel78] </ref>) computation; informally put, strong computation is computation such that at least one nondeterministic path gets a correct answer and no paths get wrong answers. <p> Similarly, with one question to an NP SATH set E 00 (defined analogously), we determine whether the "s" advice collection is good for helping S 2 . Note that when given the correct advice strings, an NP machine can strongly (in the sense of Long [Lon82] and Selman <ref> [Sel78] </ref>) check whether x 2 H or x 62 H, by nondeterministically guessing which is true and checking an x 2 H guess via checking whether hx; r jxj i 2 S 1 , and checking an x 62 H guess via checking whether hx; s jxj i 2 S 2
Reference: [Sel79] <author> A. Selman. </author> <title> P-selective sets, tally languages, and the behavior of polynomial time reducibilities on NP. </title> <journal> Mathematical Systems Theory, </journal> <volume> 13 </volume> <pages> 55-65, </pages> <year> 1979. </year>
Reference-contexts: 1 Introduction Given the disappointingly small class of sets that are known to have polynomial-time decision algorithms, researchers have explored more flexible approaches to efficient set recognition (or near-recognition): almost polynomial time [MP79], average polynomial time (see [Gur91]), implicit membership testability [HH91], near-testability [GHJY91], P-closeness [Sch86,Yes83], P-selectivity <ref> [Sel79] </ref>, and others. One of the more natural of these more general recognition notions is P-selectivity. Intuitively, a set is P-selective if there is a 2-ary polynomial-time function that chooses which of its inputs is "more likely" (or, actually, is "not less likely") to belong to the set. Definition 1.1 [Sel79] <p> <ref> [Sel79] </ref>, and others. One of the more natural of these more general recognition notions is P-selectivity. Intuitively, a set is P-selective if there is a 2-ary polynomial-time function that chooses which of its inputs is "more likely" (or, actually, is "not less likely") to belong to the set. Definition 1.1 [Sel79] A set A is P-selective if there is a total polynomial-time function f so that, for every x; y 2 fl , 1. f (x; y) 2 fx; yg, and 2. if x 2 A or y 2 A, then f (x; y) 2 A. <p> k 2: 1. there is a tally set in E p p 14 2. there is a tally set in E p p 3. there is a tally set in R p p 4. there is a tally set in R p p Finally, we note that Selman's early result <ref> [Sel79, Theorem 5] </ref> that "every tally set is T -equivalent to some P-selective set" is essentially optimal. It is not hard to see that this optimality follows as a consequence of a recent result of Watanabe (see part 5 of Theorem 2.1). <p> implies there is a tally set T in R p T (UPP), where UP is Valiant's [Val76] notion of unambiguous polynomial time, and, analogously, UE is the class of sets computable in unambiguous time 2 O (n) . 3 Nondeterministic Selectivity Though all sets in P are trivially P-selective, Selman <ref> [Sel79] </ref> proved that not all NP sets are P-selective unless P = NP, and that not all sets in NP T coNP are P-selective unless P = NP coNP. <p> If P 6= NP T coNP, then there is a set B in NP T coNP P such that B is many-one reducible to B <ref> [Sel79, Theorem 1] </ref>, and thus B cannot be P-selective [Sel79, Theorem 2]. However, we'll soon observe (Proposition 3.11) that all sets in NP T coNP are NP-selective. <p> If P 6= NP T coNP, then there is a set B in NP T coNP P such that B is many-one reducible to B [Sel79, Theorem 1], and thus B cannot be P-selective <ref> [Sel79, Theorem 2] </ref>. However, we'll soon observe (Proposition 3.11) that all sets in NP T coNP are NP-selective.
Reference: [Sel82a] <author> A. Selman. </author> <title> Analogues of semirecursive sets and effective reducibilities to the study of NP complexity. </title> <journal> Information and Control, </journal> <volume> 52 </volume> <pages> 36-51, </pages> <year> 1982. </year>
Reference: [Sel82b] <author> A. Selman. </author> <title> Reductions on NP and P-selective sets. </title> <journal> Theoretical Computer Science, </journal> <volume> 19 </volume> <pages> 287-304, </pages> <year> 1982. </year>
Reference-contexts: Below, we state our theorems summarizing the structure of reductions and equivalences to P-selective sets. Note that Selman <ref> [Sel82b] </ref> proved that the class of P-selective sets is strictly contained in E p tt (P-sel), a result that follows from either of Theorem 2.1 and Theorem 2.2. <p> We may also note the following result. Theorem 3.14 (8A 6= fl ; A 6= ;)[(A 2 NP T coNP) () (A NP SV t m A and A 2 pos A and A 2 NP-sel)]. Proof The claim about positive reductions is analogous to <ref> [Sel82b, Theorem 8] </ref>. The other parts are easy to see. Related to the positive reduction claim in the previous theorem, we have the following claim. Theorem 3.15 If A p pos B and B is NP-selective, then 1.
Reference: [Sel88] <author> A. Selman. </author> <title> Promise problems complete for complexity classes. </title> <journal> Information and Computation, </journal> <volume> 78 </volume> <pages> 87-98, </pages> <year> 1988. </year>
Reference-contexts: Definition 3.18 ([LS93], see also <ref> [Sel88] </ref>) 1. Given any set A, we say that a set B is a solution to PP-A if fhx; yi fi A)g B = fhx; yi fi (x 2 A) and (y 62 A)g. 2. <p> Theorem 3.21 If A is p pos -hard for NP, then PP-A is Turing-hard for NP. The above theorem should be compared with the techniques of <ref> [Sel88] </ref>, which "apply only when A 2 NP and, at that, only when A is p d -equivalent to a disjunctive self-reducible set" [LS93]. Those techniques suffice to prove (see [Sel88]) that "If A is p d -complete for NP, then PP-A is NP Turing-hard," but note that Theorem 3.21 goes <p> The above theorem should be compared with the techniques of <ref> [Sel88] </ref>, which "apply only when A 2 NP and, at that, only when A is p d -equivalent to a disjunctive self-reducible set" [LS93]. Those techniques suffice to prove (see [Sel88]) that "If A is p d -complete for NP, then PP-A is NP Turing-hard," but note that Theorem 3.21 goes beyond the limitations of disjunctive reductions.
Reference: [Sto77] <author> L. Stockmeyer. </author> <title> The polynomial-time hierarchy. </title> <journal> Theoretical Computer Science, </journal> <volume> 3 </volume> <pages> 1-22, </pages> <year> 1977. </year>
Reference: [TB91] <author> S. Tang and R. </author> <title> Book. Reducibilities on tally and sparse sets. </title> <journal> Theoretical Informatics and Applications (RAIRO), </journal> <volume> 25(3) </volume> <pages> 293-302, </pages> <year> 1991. </year>
Reference: [Tod91] <author> S. </author> <title> Toda. On polynomial-time truth-table reducibilities of intractable sets to P-selective sets. </title> <journal> Mathematical Systems Theory, </journal> <volume> 24 </volume> <pages> 69-82, </pages> <year> 1991. </year>
Reference-contexts: Previous results along this line include only Buhrman et al.'s result 1 that R p pos (P-sel) = P-sel [BTvEB93] and Watanabe's result (referenced in <ref> [Tod91] </ref>) that R p p T (P-sel). For the case of sparse sets, reductions and equivalences have been studied intensely in a long line of papers [BK88,TB91, AHOW92,GW,Ko89,AHH + ,Gav92b,BLS93] that, unfortunately, rely upon techniques that fail to apply to the case of P-selective sets. <p> Theorem 2.1 1. [Sel82b,BTvEB93] P-sel = R p m (P-sel) = R ptt (P-sel) = R p m (P-sel). p p p p p R k-tt (P-sel) 6 R (k+1)-tt (P-sel) 6 . p p p p 4. R btt (P-sel) 6 R tt (P-sel). 5. (Watanabe, referenced in <ref> [Tod91] </ref>) R p p 6. ([Sel79][Sel82b, Theorem 12][Ko83, Theorem 3]) R p T (P-sel) = P=poly. (Meyer, as cited in [BH77], has noted that P=poly = R p T (SPARSE), and P/poly is also well known to equal R p tt (TALLY).) Theorem 2.2 1.
Reference: [Val76] <author> L. Valiant. </author> <title> The relative complexity of checking and evaluating. </title> <journal> Information Processing Letters, </journal> <volume> 5 </volume> <pages> 20-23, </pages> <year> 1976. </year>
Reference-contexts: Set T = T 0 S V . So we have satisfied (R). Related to Corollary 2.20 is the recent result of E. Hemaspaandra et al. [HNOS93] that E 6= UE implies there is a tally set T in R p T (UPP), where UP is Valiant's <ref> [Val76] </ref> notion of unambiguous polynomial time, and, analogously, UE is the class of sets computable in unambiguous time 2 O (n) . 3 Nondeterministic Selectivity Though all sets in P are trivially P-selective, Selman [Sel79] proved that not all NP sets are P-selective unless P = NP, and that not all
Reference: [Val79] <author> L. Valiant. </author> <title> The complexity of enumeration and reliability problems. </title> <journal> SIAM Journal on Computing, </journal> <volume> 8(3) </volume> <pages> 410-421, </pages> <year> 1979. </year>
Reference-contexts: F C-sel will denote the class of F C-selective sets. Let #P <ref> [Val79] </ref>, OptP [Kre88], and SpanP [KST89] be as defined in the standard literature.
Reference: [VV86] <author> L. Valiant and V. Vazirani. </author> <title> NP is as easy as detecting unique solutions. </title> <journal> Theoretical Computer Science, </journal> <volume> 47 </volume> <pages> 85-93, </pages> <year> 1986. </year>
Reference-contexts: NPSV such that domain (f ) = SAT and (8F 2 SAT )[f (F ) is a satisfying assignment of F ] [Sel]? Informally, can an NP function "pick off" a single satisfying assignment of a satisfiable formula? (This question can be compared with the results of Valiant and Vazirani <ref> [VV86] </ref> on probabilistically reducing SAT to a question about (solutions to a promise problem regarding) unambiguous computation.) It follows from Theorem 3.34 that all NPMV functions have NPSV refinements if the polynomial hierarchy collapses to NP (this can be seen also from a result of [Sel]), and that all NPMV functions
Reference: [WT93] <author> O. Watanabe and S. </author> <title> Toda. Structural analysis of the complexity of inverse functions. </title> <journal> Mathematical Systems Theory, </journal> <volume> 26 </volume> <pages> 203-214, </pages> <year> 1993. </year>
Reference-contexts: In particular, our result that "NPMV has NPSV refinements only if PH = NP NP " itself relativizes. However, any relativizable proof of the FP NP tt analog would immediately|due to the result of Watanabe and Toda <ref> [WT93] </ref> that the analog holds relative to a random oracle|imply that the polynomial hierarchy collapses relative to a random oracle.
Reference: [Yap83] <author> C. Yap. </author> <title> Some consequences of non-uniform conditions on uniform classes. </title> <journal> Theoretical Computer Science, </journal> <volume> 26 </volume> <pages> 287-300, </pages> <year> 1983. </year>
Reference-contexts: It follows immediately (respectively via Theorem 3.27 and <ref> [Yap83] </ref>) that NPMV t -sel is ExtendedLow 3 , and that NPMV t -sel T NP is Low 3 . We now state some less immediate results. Theorem 3.28 NPSV-sel T T coNP)=poly. Proof Let L 2 NP be NPSV-selective, with selector function f 2 NPSV.
Reference: [Yes83] <author> Y. Yesha. </author> <title> On certain polynomial-time truth-table reducibilities of complete sets to sparse sets. </title> <journal> SIAM Journal on Computing, </journal> <volume> 12(3) </volume> <pages> 411-425, </pages> <year> 1983. </year> <month> 40 </month>
References-found: 72

