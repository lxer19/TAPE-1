URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/user/christos/www/PUBLICATIONS/mindreaderTR.ps.gz
Refering-URL: http://www.cs.cmu.edu/~christos/cpub.html
Root-URL: 
Title: MindReader: Querying databases through multiple examples  
Author: Yoshiharu Ishikawa Ravishankar Subramanya Christos Faloutsos 
Note: 1 Visiting from  3 On leave from University of Maryland. This work was supported by the National Science Foundation (NSF) under grant number IRI-9625428, and by NSF, ARPA and NASA under NSF Cooperative Agreement No. IRI-9411299.  
Address: Pittsburgh, PA 15213  2 Pittsburgh Supercomputing Center  
Affiliation: School of Computer Science Carnegie Mellon University  Nara Institute of Science and Technology, Nara, Japan  
Date: April 1998  
Pubnum: CMU-CS-98-119  
Abstract-found: 0
Intro-found: 1
Reference: [BKK96] <author> Stefan Berchtold, Daniel A. Keim, and Hans-Peter Kriegel. </author> <title> The X-tree: An index structure for high-dimensional data. </title> <booktitle> In Proceedings of Very Large Data Bases, </booktitle> <pages> pages 28-39, </pages> <address> Mumbai, India, </address> <month> September </month> <year> 1996. </year>
Reference-contexts: Typically, n-d data points will be stored in a Spatial Access Method (SAM) (e.g., X-tree <ref> [BKK96] </ref>, SR-tree [KS97], R fl -tree [BKSS90]). SAMs are carefully constructed and fine-tuned by decades of research, so that they can handle very efficiently spatial queries (range- and nearest neighbor queries) under the Euclidean distance.
Reference: [BKSS90] <author> Norbert Beckmann, Hans-Peter Kriegel, Ralf Schneider, and Bernhard Seeger. </author> <title> The R fl -tree: An efficient and robust access method for points and rectangles. </title> <booktitle> In Proceedings of ACM SIGMOD, </booktitle> <pages> pages 322-331, </pages> <address> Atlantic City, NJ, </address> <month> May </month> <year> 1990. </year>
Reference-contexts: Typically, n-d data points will be stored in a Spatial Access Method (SAM) (e.g., X-tree [BKK96], SR-tree [KS97], R fl -tree <ref> [BKSS90] </ref>). SAMs are carefully constructed and fine-tuned by decades of research, so that they can handle very efficiently spatial queries (range- and nearest neighbor queries) under the Euclidean distance.
Reference: [CK97] <author> Michael J. Carey and Donald Kossman. </author> <title> Processing top n and bottom n queries. </title> <journal> IEEE Data Engineering Bulletin, </journal> <volume> 20(3) </volume> <pages> 12-19, </pages> <month> September </month> <year> 1997. </year>
Reference-contexts: We mentioned the VAGUE system earlier. Nearest neighbor queries are attracting increasing attention not only by researchers but also by vendors: see, for example, the proposed 'STOP AFTER' keyword of SQL <ref> [CK97] </ref>, * time sequences: find stocks similar to, e.g., IBM's stock.
Reference: [CKM + 95] <author> M. Christel, T. Kanade, M. Mauldin, R. Reddy, M. Sirbu, S. Stevens, and H. Wact-lar. </author> <title> Informedia digital video library. </title> <journal> Communication of the ACM, </journal> <volume> 38(4) </volume> <pages> 57-58, </pages> <month> April </month> <year> 1995. </year> <month> 15 </month>
Reference-contexts: Such a method will be useful in many settings: * multimedia systems and digital libraries that handle mixed media (e.g., Informedia <ref> [CKM + 95, WKS96] </ref>): find videos with J.F. Kennedy (either by face matching or voice matching, or both). * general approximate matching or nearest neighbor queries, in traditional databases. We mentioned the VAGUE system earlier.
Reference: [FBF + 94] <author> C. Faloutsos, R. Barber, M. Flickner, J. Hafner, W. Niblack, D. Petkovic, and W. Equitz. </author> <title> Efficient and effective querying by image content. </title> <journal> Journal of Intelligent Information Systems, </journal> 3(3/4):231-262, July 1994. 
Reference-contexts: As an example, consider content-based retrieval in image databases. Suppose that a user simply needs sunset images. Many existing image database system, such as QBIC (Query By Image Content) <ref> [FBF + 94] </ref> and Virage [Vir], provide query mechanisms based on multiple image features. To ease user's query formulation, such image database systems support Query by (Visual) Example [HK92] queries and interfaces (e.g., sliding bars) to obtain user's preferences for the features.
Reference: [FK94] <author> Christos Faloutsos and Ibrahim Kamel. </author> <title> Beyond uniformity and independence: Analysis of R-trees using the concept of fractal dimension. </title> <booktitle> In Proceedings of the Thirteenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, </booktitle> <pages> pages 4-13, </pages> <address> Minneapolis, MN, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: Despite its large distance from the "ideal" query point, our method managed to locate the correct center in three iterations and then to align itself to the target ellipsoid distance function (dotted ellipse). 4.4 Real Data We used the Montgomery County dataset <ref> [FK94] </ref> with end-points of road segments from the Montgomery County of Maryland (Fig. 6). The solid box shown in the plot is the region of interest.
Reference: [FL95] <author> Christos Faloutsos and King-Ip (David) Lin. </author> <title> FastMap: A fast algorithm for indexing, data-mining and visualization of traditional and multimedia datasets. </title> <booktitle> In Proceedings of ACM SIGMOD, </booktitle> <pages> pages 163-174, </pages> <address> San Jose, CA, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: In the method called tf fi idf ("term frequency inverse document frequency"), they generated pseudo-document vectors from image feature vectors then directly applied the Rocchio's formula. Although the above techniques are based on similarity-based query processing, we 3 can easily transform similarity values to straight Euclidean distances (see <ref> [FL95] </ref> or Eq. (13) (shown later)) and apply distance-based query processing. Re-weighting: The second approach is based on re-weighting. For example, the MARS system mentioned above, proposes another refinement method based on re-weighting, which we call standard deviation method.
Reference: [GV96] <author> Gene H. Golub and Charles F. Van Loan. </author> <title> Matrix Computations. </title> <publisher> The Johns Hopkins University Press, </publisher> <address> Baltimore and London, third edition edition, </address> <year> 1996. </year>
Reference-contexts: It turns out that we can easily solve the problem by using the Moore-Penrose inverse matrix (or pseudo-inverse matrix) <ref> [GV96] </ref>. The details are in appendix D. 7 4 Experiments Here we describe our experiments on synthetic and real data.
Reference: [Har92] <author> Donna Harman. </author> <title> Relevance feedback and other query modification techniques. </title> <editor> In William B. Frakes and Ricardo Baeza-Yates, editors, </editor> <booktitle> Information Retrieval: Data Structures & Algorithms, chapter 11, </booktitle> <pages> pages 241-263. </pages> <publisher> Prentice-Hall, </publisher> <year> 1992. </year>
Reference-contexts: Query-point movement: Here, a method tries to improve the estimate of the 'ideal query point' by by moving it towards 'good' example points (and away from 'bad' example points). This concept of example-based query refinement is often found in the information retrieval field as relevance feedback techniques <ref> [Har92, SL96] </ref>. <p> For example, the Rocchio's formula [Roc71], that is based on the vector space model, is given as follows: Q 1 = Q 0 + fi i=1 n 1 n 2 X S i (1) (in <ref> [Har92] </ref> this formula is called Standard Rocchio), where Q 0 is the vector for the initial query, R i is the vector for relevant document i, S i is the vector for nonrelevant document i, n 1 is the number of relevant documents, and n 2 is the number of nonrelevant
Reference: [HK92] <author> Kyoji Hirata and Toshikazu Kato. </author> <title> Query by visual example content based image retrieval -. In A. </title> <editor> Pirotte, C. Delobel, and G. Gottlob, editors, </editor> <booktitle> Proceedings of 3rd International Conference on Extending Database Technology (Advances in Database Technology - EDBT'92), volume 580 of Lecture Notes in Computer Science, </booktitle> <pages> pages 56-71, </pages> <address> Vienna, Austria, March 1992. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Suppose that a user simply needs sunset images. Many existing image database system, such as QBIC (Query By Image Content) [FBF + 94] and Virage [Vir], provide query mechanisms based on multiple image features. To ease user's query formulation, such image database systems support Query by (Visual) Example <ref> [HK92] </ref> queries and interfaces (e.g., sliding bars) to obtain user's preferences for the features. In this case, the user would provide sample sunset images or sketches and assign high importance on the color feature and medium importance on the shape feature by using sliding bars.
Reference: [KS97] <author> Norio Katayama and Shin'ichi Satoh. </author> <title> The SR-tree: An index structure for high-dimensional nearest neighbor queries. </title> <booktitle> In Proceedings of ACM SIGMOD, </booktitle> <pages> pages 369-380, </pages> <address> Tucson, Arizona, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: Typically, n-d data points will be stored in a Spatial Access Method (SAM) (e.g., X-tree [BKK96], SR-tree <ref> [KS97] </ref>, R fl -tree [BKSS90]). SAMs are carefully constructed and fine-tuned by decades of research, so that they can handle very efficiently spatial queries (range- and nearest neighbor queries) under the Euclidean distance.
Reference: [Mot88] <author> Amihai Motro. </author> <title> VAGUE: A user interface to relational databases that permits vague queries. </title> <journal> ACM Transactions on Office Information Systems, </journal> <volume> 6(3) </volume> <pages> 187-214, </pages> <month> July </month> <year> 1988. </year>
Reference-contexts: A similar situation appears even in traditional databases. For example, the VAGUE system <ref> [Mot88] </ref> built upon a relational database system supports vague queries by incorporating the concept of data metrics on attribute domains and allowing "similar-to" operator to compare attribute values. If we have a method to derive the implied distance function, we can apply it to vague query processing.
Reference: [RHM97] <author> Yong Rui, Thomas S. Huang, and Sharad Mehrotra. </author> <title> Content-based image retrieval with relevance feedback in MARS. </title> <booktitle> In Proceedings of IEEE International Conference on Image Processing '97, </booktitle> <address> Santa Barbara, CA, </address> <month> October </month> <year> 1997. </year>
Reference-contexts: In the vector space model, cosine similarity is typically used to calculate similarity values between documents. Query-point movement was also used in one of the methods proposed by MARS (Multimedia Analysis and Retrieval System) <ref> [RHM97, RHM98] </ref> for image retrieval. In the method called tf fi idf ("term frequency inverse document frequency"), they generated pseudo-document vectors from image feature vectors then directly applied the Rocchio's formula. <p> and showed how to find the optimal solution * we showed that our formulation is the first one that can guess "diagonal queries" * we also showed that it includes as special cases some older methods, like the method by Rocchio and Salton [Roc71] and the method of standard deviation <ref> [RHM97, RHM98] </ref>. Moreover, our method does not need any of the ad-hoc heuristics and constants that the above two methods need.
Reference: [RHM98] <author> Yong Rui, Thomas S. Huang, and Sharad Mehrotra. </author> <title> Human perception subjectivity and relevance feedback in multimedia information retrieval. </title> <booktitle> In Proceedings 16 of IS&T and SPIE Storage and Retrieval of Image and Video Databases VI, </booktitle> <address> San Jose, CA, </address> <month> January </month> <year> 1998. </year>
Reference-contexts: In the vector space model, cosine similarity is typically used to calculate similarity values between documents. Query-point movement was also used in one of the methods proposed by MARS (Multimedia Analysis and Retrieval System) <ref> [RHM97, RHM98] </ref> for image retrieval. In the method called tf fi idf ("term frequency inverse document frequency"), they generated pseudo-document vectors from image feature vectors then directly applied the Rocchio's formula. <p> and showed how to find the optimal solution * we showed that our formulation is the first one that can guess "diagonal queries" * we also showed that it includes as special cases some older methods, like the method by Rocchio and Salton [Roc71] and the method of standard deviation <ref> [RHM97, RHM98] </ref>. Moreover, our method does not need any of the ad-hoc heuristics and constants that the above two methods need.
Reference: [Roc71] <author> Joseph John Rocchio. </author> <title> Relevance feedback in information retrieval. </title> <editor> In Gerard Salton, editor, </editor> <booktitle> The SMART Retrieval System Experiments in Automatic Document Processing, </booktitle> <pages> pages 313-323. </pages> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, N.J., </address> <year> 1971. </year>
Reference-contexts: This concept of example-based query refinement is often found in the information retrieval field as relevance feedback techniques [Har92, SL96]. For example, the Rocchio's formula <ref> [Roc71] </ref>, that is based on the vector space model, is given as follows: Q 1 = Q 0 + fi i=1 n 1 n 2 X S i (1) (in [Har92] this formula is called Standard Rocchio), where Q 0 is the vector for the initial query, R i is the <p> Specifically * we formulated the problem rigorously and showed how to find the optimal solution * we showed that our formulation is the first one that can guess "diagonal queries" * we also showed that it includes as special cases some older methods, like the method by Rocchio and Salton <ref> [Roc71] </ref> and the method of standard deviation [RHM97, RHM98]. Moreover, our method does not need any of the ad-hoc heuristics and constants that the above two methods need.
Reference: [SK97] <author> Thomas Seidl and Hans-Peter Kriegel. </author> <title> Efficient user-adaptable similarity search in large multimedia databases. </title> <booktitle> In Proceedings of VLDB, </booktitle> <pages> pages 506-515, </pages> <address> Athens, Greece, </address> <month> August </month> <year> 1997. </year>
Reference-contexts: As it was recently discovered, all these indices can easily support any weighted Euclidean distance, as well as "diagonal" (= generalized ellipsoid) queries <ref> [SK97] </ref>, without requiring any restructuring. That is, the user can give a generalized ellipsoid, and the SAMs will quickly retrieve the qualifying points. Thus, MindReader can utilize any and all of the fast solutions in [SK97]. <p> can easily support any weighted Euclidean distance, as well as "diagonal" (= generalized ellipsoid) queries <ref> [SK97] </ref>, without requiring any restructuring. That is, the user can give a generalized ellipsoid, and the SAMs will quickly retrieve the qualifying points. Thus, MindReader can utilize any and all of the fast solutions in [SK97]. Therefore, we do not concern ourselves with the speed of searching in this paper any more. 6 Conclusion We have focused on the problem of combining multiple examples, along with their "goodness" scores, to try to guess the distance function that the user has in mind. <p> the majority of older meth ods) * a very friendly user interface (the user just clicks on each good example, one, or more times, in proportion to the "goodness" of the specific example) 14 * fast searching, thanks to recent developments on "generalized ellipsoid queries" in spatial access methods technology <ref> [SK97] </ref> We implemented the proposed approach in an operational system ("MindReader") and we ran experiments on real and synthetic data.
Reference: [SL96] <author> Amanda Spink and Robert M. Losee. </author> <title> Feedback in information retrieval. </title> <editor> In Martha E. Williams, editor, </editor> <booktitle> Annual Review of Information Science and Technology (ARIST), </booktitle> <volume> volume 31, chapter 2, </volume> <pages> pages 33-78. </pages> <year> 1996. </year>
Reference-contexts: Query-point movement: Here, a method tries to improve the estimate of the 'ideal query point' by by moving it towards 'good' example points (and away from 'bad' example points). This concept of example-based query refinement is often found in the information retrieval field as relevance feedback techniques <ref> [Har92, SL96] </ref>.
Reference: [Vir] <institution> Virage inc. home page. </institution> <note> http://www.virage.com/. </note>
Reference-contexts: As an example, consider content-based retrieval in image databases. Suppose that a user simply needs sunset images. Many existing image database system, such as QBIC (Query By Image Content) [FBF + 94] and Virage <ref> [Vir] </ref>, provide query mechanisms based on multiple image features. To ease user's query formulation, such image database systems support Query by (Visual) Example [HK92] queries and interfaces (e.g., sliding bars) to obtain user's preferences for the features.
Reference: [WKS96] <author> Howard D. Wactlar, Takeo Kanade, and Michael A. Smith. </author> <title> Intelligent access to digital video: Informedia project. </title> <journal> IEEE Computer, </journal> <volume> 29(5) </volume> <pages> 45-52, </pages> <month> May </month> <year> 1996. </year> <month> 17 </month>
Reference-contexts: Such a method will be useful in many settings: * multimedia systems and digital libraries that handle mixed media (e.g., Informedia <ref> [CKM + 95, WKS96] </ref>): find videos with J.F. Kennedy (either by face matching or voice matching, or both). * general approximate matching or nearest neighbor queries, in traditional databases. We mentioned the VAGUE system earlier.
References-found: 19

