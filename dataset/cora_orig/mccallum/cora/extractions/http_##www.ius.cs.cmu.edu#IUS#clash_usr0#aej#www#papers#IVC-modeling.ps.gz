URL: http://www.ius.cs.cmu.edu/IUS/clash_usr0/aej/www/papers/IVC-modeling.ps.gz
Refering-URL: http://www.ius.cs.cmu.edu/usr/users/aej/www/research/modeling.html
Root-URL: 
Email: aej@ri.cmu.edu sbk@crl.dec.com  
Title: Registration and Integration of Textured 3-D Data  
Author: Andrew Edie Johnson Sing Bing Kang 
Affiliation: The Robotics Institute Cambridge Research Laboratory Carnegie Mellon University Digital Equipment Corporation  
Abstract: In general, multiple views are required to create a complete 3-D model of an object or of a multi-roomed indoor scene. In this work, we address the problem of merging multiple textured 3-D data sets, each of which corresponds to a different view of a scene or object. There are two steps to the merging process: registration and integration. To register, or align, data sets we use a modified version of the Iterative Closest Point algorithm; our version, which we call color ICP, considers not only 3-D information, but color as well. We show that the use of color decreases registration error by an order of magnitude. Once the 3-D data sets have been registered, we integrate them to produce a seamless, composite 3-D textured model. Our approach to integration uses a 3-D occupancy grid to represent likelihood of spatial occupancy through voting. In addition to occupancy information, we store surface normal in each voxel of the occupancy grid. Surface normal is used to robustly extract a surface from the occupancy grid; on that surface we blend textures from multiple views. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Bajaj, F. Bernardini and G. Xu. </author> <title> Automatic reconstruction of surfaces and scalar fields from 3-D scans. </title> <booktitle> Computer Graphics (SIGGRAPH 95), </booktitle> <pages> 109-118, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: Hoppe et. al. [13] use an augmented Euclidean Minimal Spanning Tree to create a signed distance function from a set of unorganized points. They then polygonize the signed distance function using the Marching Cubes surface polygonizer. Bajaj et. al. <ref> [1] </ref> use alpha-shapes and Bernstein-Bezier forms 11 to construct smooth surfaces from a set of unorganized points. Unstructured point sets have no sensing information, so these algorithms cannot make use of a sensor model or viewing direction to improve results in the presence of noisy data.
Reference: [2] <author> P. Besl and N. McKay. </author> <title> A method of registration of 3-D shapes. </title> <journal> IEEE Trans. Pattern Analysis and Machine Intelligence, </journal> <volume> vol. 12, no. 2, </volume> <pages> pp. 239-256, </pages> <month> February </month> <year> 1992. </year>
Reference-contexts: To solve this problem Besl & McKay <ref> [2] </ref> proposed the Iterative Closest Point algorithm which establishes correspondences between data sets by matching points in one data set to the closest points in the other data set. Traditional ICP works as follows.
Reference: [3] <author> J. Boissonnat. </author> <title> Geometric structures for three-dimensional shape representation. </title> <journal> ACM Trans. Graphics, </journal> <volume> 3:4:266-286, </volume> <month> October </month> <year> 1984. </year>
Reference-contexts: The structured data approaches can be broken down further into surface based and volumetric approaches. Integration algorithms that can be applied to unstructured point sets are useful when no underlying surface information is available. The surface is constructed using proximity information in 3-D space. Boissonnat <ref> [3] </ref> developed an algorithm for efficient computation of the Delaunay tetrahedronization of space. Veltkamp [27] creates surfaces from unorganized points by generalizing the concept of closest point using a g-neighborhood graph, when constructing a 3-D tetrahedronization of space. <p> Once the implicit surface is constructed, it is polygonized using a the Marching Cubes [17] algorithm to create the surface from the volumetric data. The methods vary in how the implicit surface is constructed and the volumetric data is organized. Hilton, et. al. [12], Curless and Levoy <ref> [3] </ref> and Wheeler [29] have developed volumetric integration algorithms that construct a weighted signed distance function to the surface from structured point data. Hilton et. al. use surface normal and distance to compute the signed distance function.
Reference: [4] <author> Y. Chen and G. Medioni. </author> <title> Object modelling by registration of multiple range images. </title> <journal> Image and Vision Computing, </journal> <volume> vol. 10, no. 3, </volume> <pages> pp. 145-155, </pages> <month> April </month> <year> 1992. </year>
Reference-contexts: Zhang showed good results with stereo data, which motivated our use of the ICP algorithm for registration. Chen and Medioni <ref> [4] </ref> have developed an interactive range image registration algorithm based on minimizing the normal distance between two surfaces. There algorithm will converge faster than the ICP algorithms described above because it reduces the number of conicting constraints imposed by closest point correspondences.
Reference: [5] <author> Y. Chen and G. Medioni. </author> <title> Surface description of complex objects from range images. </title> <booktitle> Proc. IEEE Computer Vision and Pattern Recognition (CVPR 94), </booktitle> <pages> 153-158, </pages> <year> 1994. </year>
Reference-contexts: By using the surface information these algorithms will produce better results than those produced by the unorganized point algorithms. However, dependence on a view based retriangulation step will result in poor results near complex regions of high curvature. Chen and Medioni <ref> [5] </ref> avoid the view dependent retriangulation step by growing a deformable surface to the surface data. However, their approach assumes the object being modeled is genus zero which is not true when modeling complex scenes.
Reference: [6] <author> B. Curless and M. Levoy. </author> <title> A volumetric method for building complex models from range images. </title> <booktitle> Computer Graphics (SIGGRAPH 96), </booktitle> <month> August </month> <year> 1996. </year>
Reference: [7] <author> A. Elfies. </author> <title> Sonar-based real world mapping and navigation. </title> <journal> IEEE Jour. Robotics and Automation, </journal> <volume> vol. RA-3, no. 3, </volume> <pages> pp. 249-265, </pages> <year> 1987. </year>
Reference-contexts: Our algorithm is most similar to the volumetric approaches that construct a 3-D implicit surface function. We 12 construct an implicit function describing the surface using a volumetric data structure. However, we approach the problem from the direction of probabilistic occupancy grids developed by Elfes <ref> [7] </ref>. Occupancy grids describe the probability of surface based on the proximity of points and a sensor error model. The occupancy grid paradigm is intuitive and is easily changed to accommodate different sensors.
Reference: [8] <author> O. Faugeras and M. Hebert. </author> <title> The representation, recognition and locating of 3-D objects. </title> <journal> Intl. Jour. Robotics Research, </journal> <volume> vol. 5, no. 3, </volume> <pages> pp. 27-52, </pages> <year> 1986. </year>
Reference-contexts: Given the (m i , s i ) pairs, compute the rigid transformation T that will minimize the 3-D euclidean distance between their spatial coordinates using the quaternion method of Faugeras and Hebert <ref> [8] </ref>. (2) Finally, transform the points in M by T and repeat the iterations until the convergence criterion is met. To make Color ICP robust when the model is not a proper subset of the scene, we have incorporated the dynamic maximum distance threshold employed by Zhang [30].
Reference: [9] <author> J. Foley, A. van Dam, s. Feiner and J Hughes. </author> <title> Computer Graphics: </title> <booktitle> Principles and Practice. </booktitle> <publisher> Addison-Wesley, </publisher> <address> New York, </address> <year> 1990 </year>
Reference-contexts: Therefore, we would like the color model to separate intensity from intrinsic color, so that the role of intensity in the matching of color is reduced. A color model that meets this criterion is the YIQ color model <ref> [9] </ref>. In the YIQ model the intensity of light is conveyed by the Y channel and the intrinsic color (hue, saturation) is conveyed by the I and Q channels.
Reference: [10] <author> J. Friedman, J. Bentley and R. Finkel. </author> <title> An algorithm for finding best matches in logarithmic expected time. </title> <journal> ACM Trans. on Mathematical Software, </journal> <volume> 3:3, </volume> <pages> 209-226, </pages> <month> September </month> <year> 1977. </year>
Reference: [11] <author> K. Higuchi, M. Hebert and K. </author> <title> Ikeuchi. Building 3-D models from unregistered range images. </title> <type> Technical Report CMU-CS-93-214, </type> <institution> Carnegie Mellon University, </institution> <month> November </month> <year> 1993. </year>
Reference: [12] <author> A Hilton, A. Stoddart, J. Illingworth and T Windeatt. </author> <title> Reliable surface reconstruction from multiple range images. </title> <booktitle> Fourth European Conf. on Computer Vision (ECCV `96), </booktitle> <pages> pp. 14-18, </pages> <month> April </month> <year> 1996. </year>
Reference-contexts: Once the implicit surface is constructed, it is polygonized using a the Marching Cubes [17] algorithm to create the surface from the volumetric data. The methods vary in how the implicit surface is constructed and the volumetric data is organized. Hilton, et. al. <ref> [12] </ref>, Curless and Levoy [3] and Wheeler [29] have developed volumetric integration algorithms that construct a weighted signed distance function to the surface from structured point data. Hilton et. al. use surface normal and distance to compute the signed distance function.
Reference: [13] <author> H. Hoppe, T. DeRose, T. DuChamp, J. McDonald and W. Stuetzle. </author> <title> Surface reconstruction from unorganized points. </title> <booktitle> Computer Graphics (SIGGRAPH 92), </booktitle> <pages> pp. 71-78. </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Boissonnat [3] developed an algorithm for efficient computation of the Delaunay tetrahedronization of space. Veltkamp [27] creates surfaces from unorganized points by generalizing the concept of closest point using a g-neighborhood graph, when constructing a 3-D tetrahedronization of space. Hoppe et. al. <ref> [13] </ref> use an augmented Euclidean Minimal Spanning Tree to create a signed distance function from a set of unorganized points. They then polygonize the signed distance function using the Marching Cubes surface polygonizer.
Reference: [14] <author> A. Johnson and S. Kang. </author> <title> Registration and integration of textured 3-D data. </title> <institution> Digital Equipment Corp. Cambridge Research Lab. </institution> <type> Tech. Report CRL 96/4, </type> <month> October </month> <year> 1996. </year> <month> 25 </month>
Reference: [15] <author> S.B. Kang and R. Szeliski, </author> <title> 3-D scene data recovery using omnidirectional multibaseline stereo. </title> <booktitle> Conf. on Computer Vision and Pattern Recognition (CVPR 96), </booktitle> <pages> pp. 364-370, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: Recovery of 3-D scene data In our work, we use 3-D data recovered from omnidirectional multibaseline stereo, i.e., using multiple panoramic images <ref> [15] </ref>. Each panoramic image spans a 360 horizontal field of view. The primary advantage of this method is that, at any given camera center location, the scene can be recovered at a very wide horizontal field of view. This is done without resorting to any intermediate 3-D merging. <p> The omnidirectional multibaseline stereo approach to recover 3-D data and, subsequently, the scene model is p Omnidirectional Recovered Textured Points 3-D DataMultibaseline Stereo 3 summarized in Figure 1. We provide only a brief outline of the approach here; full details can be found in <ref> [15] </ref>. The approach is straightforward: at each camera location in the scene, sequences of images are captured while the camera is rotated about the vertical axis passing through the camera optical center. Each set of images is then composited to produce panoramas at each camera location.
Reference: [16] <author> C. Kolb. </author> <title> Rayshade User Guide and Reference Manual. </title> <month> August </month> <year> 1994. </year>
Reference-contexts: At the top of the figure are shown two synthetic textured 3-D data sets (in wireframe and texture mapped) generated from a room model created using the Ray Shade modeling package <ref> [16] </ref>. The room has four walls, a doorway into another room and various objects along the wall (tori, vases, columns). The walls of the room are also texture mapped with common vision images (mandrill face,...) to add extra texture to the scene.
Reference: [17] <author> W. Lorensen and H. Cline. </author> <title> Marching Cubes: a high resolution 3D surface construction algorithm. </title> <booktitle> Computer Graphics (SIGGRAPH 87), </booktitle> <pages> pp. 163-169, </pages> <year> 1987. </year>
Reference-contexts: The final group of integration algorithms constructs a continuous 3-D implicit function describing the surface using a volumetric data structure to discretely sample the function. Once the implicit surface is constructed, it is polygonized using a the Marching Cubes <ref> [17] </ref> algorithm to create the surface from the volumetric data. The methods vary in how the implicit surface is constructed and the volumetric data is organized. <p> Usually ridge detection requires computation of second order surface derivatives to determine this direction--a computation without a robust solution. The implicit surface function is then polygonized using the standard Marching Cubes algorithm <ref> [17] </ref> with a modified lookup table of 22 cases to prevent the creation of holes in the surface [20]. The consensus surface mesh (a) points sets horizontal slice of surface likelihood through the voxel space for those points (b). Notice that only allocated voxels are shown.
Reference: [18] <author> M. Martin and H. Moravec. </author> <title> Robot Evidence Grids. </title> <institution> Carnegie Mellon University Robotics Institute Tech. Report CMU-RI-TR-96-06, </institution> <month> March </month> <year> 1996. </year>
Reference: [19] <author> L. Matthies and S. Shafer. </author> <title> Error modeling in stereo navigation. </title> <journal> IEEE Jour. Robotics and Automation, </journal> <volume> vol. RA-3, no. 3, </volume> <pages> pp. 239-248, </pages> <month> June </month> <year> 1987. </year>
Reference-contexts: The sensor error model G E is an approximation of a true stereo error model and is represented as an ellipsoidal gaussian distribution centered at the measured 3-D point whose axis is oriented along the line of sight <ref> [19] </ref>. The point spread model G S is used to promote the generation of surfaces from discrete data. It is represented as a cylindrical gaussian, centered at the sensed point, whose axis is aligned with the local surface normal. <p> The spread of the gaussian can be characterized by two parameters, s a 2 the variance perpendicular to the viewing direction and s b 2 the variance along the viewing direction. A 2-D slice of the sensor error geometry is shown in Figure 5. Matthies and Shafer <ref> [19] </ref> showed that the variances of the sensor error model should vary depending on the position of the sensed point. To reduce the amount of calculation per point, we have assumed that the variances of the sensor error model are fixed for all points.
Reference: [20] <author> C. Montani, R. Scateni and R. Scopigno. </author> <title> A modified look-up table for implicit disambiguation of Marching Cubes. </title> <journal> Visual Computer, </journal> <volume> vol. 10, </volume> <pages> pp. 353-355, </pages> <year> 1994. </year>
Reference-contexts: The implicit surface function is then polygonized using the standard Marching Cubes algorithm [17] with a modified lookup table of 22 cases to prevent the creation of holes in the surface <ref> [20] </ref>. The consensus surface mesh (a) points sets horizontal slice of surface likelihood through the voxel space for those points (b). Notice that only allocated voxels are shown.
Reference: [21] <author> S. Naher and C. Uhrig. </author> <title> The LEDA User Manual. </title> <month> May </month> <year> 1996. </year>
Reference-contexts: The discontinuity in the resulting combined texture bears testimony to the fact that the recovered shapes at the two different sites are not exact. 6. Implementation The code for our model merging work is written in C++ and uses the Library of Efficient Data types and Algorithms (LEDA) <ref> [21] </ref>. LEDA is a library of data types and algorithms that includes, among others, graph data structures and algorithms to manipulate them. Each vertex, edge, and face of a 3-D scene model has its own data structure, while the connectivity information between the vertices is encoded in a graph.
Reference: [22] <author> M. Rutishauser, M. Stricker and M. Trobina. </author> <title> Merging range images of arbitrarily shaped objects. </title> <booktitle> Proc. IEEE Computer Vision and Pattern Recognition (CVPR 94), </booktitle> <pages> 573-580, </pages> <year> 1994. </year>
Reference-contexts: Turk and Levoy [26] developed a method which zips together overlapping surface meshes followed by adjustment of mesh vertex positions based on all the overlapping data. The algorithm of Rutishauser, et. al. <ref> [22] </ref> use a sensor error model to combine redundant points followed by a retriangulation step. By using the surface information these algorithms will produce better results than those produced by the unorganized point algorithms.
Reference: [23] <author> H.-Y. Shum, K. Ikeuchi and R. Reddy. </author> <title> Principal component analysis with missing data and its application to object modeling. </title> <journal> Proc. IEEE Computer Vision and Pattern Recognition (CVPR-94), </journal> <pages> pp. 560-565, </pages> <month> June </month> <year> 1994. </year>
Reference: [24] <author> M. Soucy and D. Laurendeau. </author> <title> Multi-resolution surface modeling from multiple range views. </title> <booktitle> Proc. IEEE Computer Vision and Pattern Recognition (CVPR 92), </booktitle> <pages> 348-353, </pages> <year> 1992. </year>
Reference-contexts: With connectivity, the surface normal at each point can be calculated, giving a richer description of the shape of the object than 3-D points without surface normals. Surface based algorithms for integration of structured points usually operate on polygonal meshes. Soucy and Laurendeau <ref> [24] </ref> partition the points into disjoint sets based on a Venn diagram of views. Within each disjoint set they create a rectangular grid of surface points which are integrated along boundaries in the Venn diagram.
Reference: [25] <author> R. Sproull. </author> <title> Refinements to nearest neighbor searching in k-dimensional trees. </title> <journal> Algorithmica 6: </journal> <pages> 579-589, </pages> <year> 1991. </year>
Reference: [26] <author> G. Turk and M. Levoy. </author> <title> Zippered polygonal meshes from range images. </title> <booktitle> Computer Graphics (SIGGRAPH 94), </booktitle> <pages> pp. 311-318, </pages> <year> 1994. </year>
Reference-contexts: Soucy and Laurendeau [24] partition the points into disjoint sets based on a Venn diagram of views. Within each disjoint set they create a rectangular grid of surface points which are integrated along boundaries in the Venn diagram. Turk and Levoy <ref> [26] </ref> developed a method which zips together overlapping surface meshes followed by adjustment of mesh vertex positions based on all the overlapping data. The algorithm of Rutishauser, et. al. [22] use a sensor error model to combine redundant points followed by a retriangulation step.
Reference: [27] <author> R. Veltkamp. </author> <title> 2D and 3D object reconstruction with the g-neighborhood graph. </title> <institution> CWI Centre for Mathematics and Computer Science Tech. Report CS-R9116, </institution> <year> 1991. </year>
Reference-contexts: Integration algorithms that can be applied to unstructured point sets are useful when no underlying surface information is available. The surface is constructed using proximity information in 3-D space. Boissonnat [3] developed an algorithm for efficient computation of the Delaunay tetrahedronization of space. Veltkamp <ref> [27] </ref> creates surfaces from unorganized points by generalizing the concept of closest point using a g-neighborhood graph, when constructing a 3-D tetrahedronization of space. Hoppe et. al. [13] use an augmented Euclidean Minimal Spanning Tree to create a signed distance function from a set of unorganized points.
Reference: [28] <author> K. Waters, J. Rehg, M. Loughlin, S.B. Kang, and D. Terzopoulos, </author> <title> Visual sensing of humans for active public interfaces. </title> <booktitle> Workshop on Computer Vision in Man-machine Interfaces, </booktitle> <address> Cambridge, UK, </address> <month> Apr. </month> <year> 1996. </year>
Reference-contexts: The work described here is used to recover 3-D models of indoor scenes for the on-going Smart Kiosk project at Cambridge Research Lab., Digital Equipment Corp. <ref> [28] </ref>. The Smart Kiosk can be described as an enhanced version of the Automatic Teller Machine, with the added capability of being able to interact with the user through body tracking, and gesture and speech recognition.
Reference: [29] <author> M. Wheeler. </author> <title> Automatic modeling and localization for object recognition. </title> <institution> Carnegie Mellon Univ., School of Computer Science Tech. Report CMU-CS-96-118, </institution> <month> October </month> <year> 1996. </year>
Reference-contexts: The methods vary in how the implicit surface is constructed and the volumetric data is organized. Hilton, et. al. [12], Curless and Levoy [3] and Wheeler <ref> [29] </ref> have developed volumetric integration algorithms that construct a weighted signed distance function to the surface from structured point data. Hilton et. al. use surface normal and distance to compute the signed distance function.
Reference: [30] <author> Z. Zhang. </author> <title> Iterative point matching for registration of free-form curves and surfaces. </title> <booktitle> Intl Jour. Computer Vision, </booktitle> <volume> vol. 13 no. 2, </volume> <pages> pp. 119-152, </pages> <year> 1994. </year>
Reference-contexts: Since their algorithm looks for a corresponding scene point for every model point, incorrect registration can occur when a model point does not have a corresponding scene point due to occlusion in the scene. Zhang <ref> [30] </ref> also proposed an iterative closest point algorithm that has two improvements over the algorithm of Besl and McKay. The first improvement used K-dimensional trees [10][25] to speed up the closest point computation. <p> However, major modifications to the algorithm would be necessary to make it suitable for registration based on shape and appearance. We have developed an ICP algorithm that builds on the algorithm presented by Zhang <ref> [30] </ref>. <p> To make Color ICP robust when the model is not a proper subset of the scene, we have incorporated the dynamic maximum distance threshold employed by Zhang <ref> [30] </ref>. This threshold limits the maximum distance between closest points (6-D); if two points are farther apart than this threshold, they are not used to compute the rigid transformation.
References-found: 30

