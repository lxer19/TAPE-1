URL: http://www.cs.washington.edu/homes/mlease/writings/lisp40yrs.ps.gz
Refering-URL: http://www.cs.washington.edu/homes/mlease/writings/
Root-URL: http://www.cs.washington.edu
Title: Radiation Therapy Planning: an Uncommon Application of Lisp  
Author: Ira J. Kalet, Robert S. Giansiracusa, Craig Wilcox, and Matthew Lease 
Keyword: CLOS, events, modeling, graphics  
Address: Seattle, WA  
Affiliation: Department of Radiation Oncology and Department of Computer Science and Engineering University of Washington,  
Abstract: We used Common Lisp to build a complex and powerful interactive graphics simulation system called "Prism", for planning radiation therapy. Special features of Common Lisp that we used to advantage include: lexical closures, the Common Lisp Object System (CLOS), and the Common Lisp binding to the X window system (CLX). We use events, indirect invocation and mediators to achieve modularity. Some of the components of Prism are: a contoured volume editor, computed medical images, a rule based function to generate target volumes, and a radiation dose computation function. To achieve fast floating point computation in the latter, we applied both generic and vendor specific optimizations. The result is a system that is routinely used in the University of Wash-ington Cancer Center, by people with no programming expertise. Our experience shows that Lisp is practical, powerful and efficient for interactive graphics, complex modeling and intensive floating point computations such as radiation dose modeling. Additional work in progress includes a medical image server and an interface to an on-line anatomy atlas. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Faiz M. Khan. </author> <title> The Physics of Radiation Therapy. </title> <editor> Williams and Wilkins, </editor> <address> Baltimore, MD, </address> <year> 1984. </year>
Reference-contexts: The refinement and testing of such formulas is a large and active area of research in medical physics. A survey of the principles can be found in textbooks, e.g., Khan <ref> [1] </ref>, and the particular formulas used in our RTP system are described in exhaustive detail in a technical report [2].
Reference: [2] <author> Ira J. Kalet, Gavin Young, Robert Giansira-cusa, Jonathan Jacky, and Paul Cho. </author> <title> Prism dose computation methods, version 1.2. </title> <type> Technical Report 97-12-01, </type> <institution> Radiation Oncology Department, University of Washington, </institution> <address> Seat-tle, Washington, </address> <year> 1997. </year>
Reference-contexts: The refinement and testing of such formulas is a large and active area of research in medical physics. A survey of the principles can be found in textbooks, e.g., Khan [1], and the particular formulas used in our RTP system are described in exhaustive detail in a technical report <ref> [2] </ref>. We describe aspects of the implementation of these formulas in Common Lisp here in section 2.4. 1.2 A short history of RTP system development As mentioned, methods are well known for computing the physical dose received anywhere in the body from a given beam configuration.
Reference: [3] <author> Michael Goitein and M. Abrams. </author> <title> Multidimensional treatment planning: I. delineation of anatomy. </title> <journal> International Journal of Radiation Oncology Biology and Physics, </journal> <volume> 9 </volume> <pages> 777-787, </pages> <year> 1983. </year>
Reference-contexts: Therefore the "configure radiation beams" step above is an interactive generate-test loop. The importance of having powerful three dimensional radiation treatment planning software tools has been evident for some time <ref> [3, 4] </ref>. Much recent work has focused on enhancing the delineation of anatomy [5, 6], and providing visualization tools [7]. Early systems ran as teletype applications on dialup time sharing systems, then on dedicated minicomputers with frame buffer displays.
Reference: [4] <author> Michael Goitein, M. Abrams, D. Rowell, H. Pollari, and J. Wiles. </author> <title> Multi-dimensional treatment planning: II. beam's eye-view, back projection, and projection through CT sections. </title> <journal> International Journal of Radiation Oncology Biology and Physics, </journal> <volume> 9 </volume> <pages> 789-797, </pages> <year> 1983. </year>
Reference-contexts: Therefore the "configure radiation beams" step above is an interactive generate-test loop. The importance of having powerful three dimensional radiation treatment planning software tools has been evident for some time <ref> [3, 4] </ref>. Much recent work has focused on enhancing the delineation of anatomy [5, 6], and providing visualization tools [7]. Early systems ran as teletype applications on dialup time sharing systems, then on dedicated minicomputers with frame buffer displays.
Reference: [5] <author> James F. Brinkley. </author> <title> A flexible, generic model for anatomic shape: Application to interactive two-dimensional medical image segmentation and matching. </title> <journal> Computers and Biomedical Research, </journal> <volume> 26(2) </volume> <pages> 121-142, </pages> <year> 1993. </year>
Reference-contexts: Therefore the "configure radiation beams" step above is an interactive generate-test loop. The importance of having powerful three dimensional radiation treatment planning software tools has been evident for some time [3, 4]. Much recent work has focused on enhancing the delineation of anatomy <ref> [5, 6] </ref>, and providing visualization tools [7]. Early systems ran as teletype applications on dialup time sharing systems, then on dedicated minicomputers with frame buffer displays.
Reference: [6] <author> Gregg Tracton, Edward Chaney, Julian Rosenman, and Stephen Pizer. </author> <title> MASK: combining 2D and 3D segmentation methods to enhance functionality. </title> <booktitle> In Mathematical Methods in Medical Imaging III: Proceedings of 1994 International Symposium on Optics, Imaging, and Instrumentation, volume 2299. SPIE, </booktitle> <month> July </month> <year> 1994. </year>
Reference-contexts: Therefore the "configure radiation beams" step above is an interactive generate-test loop. The importance of having powerful three dimensional radiation treatment planning software tools has been evident for some time [3, 4]. Much recent work has focused on enhancing the delineation of anatomy <ref> [5, 6] </ref>, and providing visualization tools [7]. Early systems ran as teletype applications on dialup time sharing systems, then on dedicated minicomputers with frame buffer displays.
Reference: [7] <editor> Photon Treatment Planning Collaborative Working Group. </editor> <title> Three-dimensional display in planning radiation therapy: A clinical perspective. </title> <journal> International Journal of Radiation Oncology, Biology and Physics, </journal> <volume> 21 </volume> <pages> 79-89, </pages> <year> 1991. </year>
Reference-contexts: Therefore the "configure radiation beams" step above is an interactive generate-test loop. The importance of having powerful three dimensional radiation treatment planning software tools has been evident for some time [3, 4]. Much recent work has focused on enhancing the delineation of anatomy [5, 6], and providing visualization tools <ref> [7] </ref>. Early systems ran as teletype applications on dialup time sharing systems, then on dedicated minicomputers with frame buffer displays. As the computer and graphics hardware became faster and cheaper, the medical physicists writing RTP programs became more ambitious about the kind of interactive graphic displays they implemented.
Reference: [8] <author> Ira J. Kalet and Jonathan P. Jacky. </author> <title> A research-oriented treatment planning program system. </title> <booktitle> Computer Programs in Biomedicine, </booktitle> <volume> 14 </volume> <pages> 85-98, </pages> <year> 1982. </year>
Reference-contexts: We previously developed two generations of systems that experiment with the organization of treatment planning steps such as delineation of anatomy, manipulation of radiation beams, display of dose distributions, and production of output. The first system <ref> [8] </ref>, which provided two dimensional treatment planning, used a new modular design [9] that made the system very flexible. Its menu system was easily modified or supplemented without changing the programs themselves. <p> This obscured the actual application, the radiotherapy objects and their operations. Even in our earliest publication <ref> [8] </ref> we recognized that Lisp would be a promising language to use for our design ideas. At that time, though, there was no well supported Lisp system that could be used for our application.
Reference: [9] <author> Jonathan Jacky and Ira Kalet. </author> <title> A general purpose data entry program. </title> <journal> Communications of the ACM, </journal> <volume> 26(6) </volume> <pages> 409-417, </pages> <year> 1983. </year>
Reference-contexts: We previously developed two generations of systems that experiment with the organization of treatment planning steps such as delineation of anatomy, manipulation of radiation beams, display of dose distributions, and production of output. The first system [8], which provided two dimensional treatment planning, used a new modular design <ref> [9] </ref> that made the system very flexible. Its menu system was easily modified or supplemented without changing the programs themselves. It allowed the user to add or change any data items in the treatment plan at any time rather than enforcing a sequence of operations on the user.
Reference: [10] <author> Jonathan Jacky and Ira Kalet. </author> <title> An object-oriented approach to a large scientific application. </title> <editor> In Norman Meyrowitz, editor, </editor> <booktitle> OOP-SLA '86 Object Oriented Programming Systems, Languages and Applications Conference Proceedings, </booktitle> <pages> pages 368-376. </pages> <institution> Association for Computing Machinery, </institution> <year> 1986. </year> <journal> (also SIGPLAN Notices, </journal> <volume> 21(11), </volume> <month> Nov. </month> <year> 1986). </year>
Reference-contexts: Its menu system was easily modified or supplemented without changing the programs themselves. It allowed the user to add or change any data items in the treatment plan at any time rather than enforcing a sequence of operations on the user. The second system <ref> [10, 11] </ref> provided high resolution display and allowed the user to put on the screen multiple plots displaying plan and image data simultaneously. Integration with computer controlled therapy machines [12] has been part of the project from the beginning.
Reference: [11] <author> Jonathan Jacky and Ira Kalet. </author> <title> An object-oriented programming discipline for standard Pascal. </title> <journal> Communications of the ACM, </journal> <volume> 30(9) </volume> <pages> 772-776, </pages> <month> September </month> <year> 1987. </year>
Reference-contexts: Its menu system was easily modified or supplemented without changing the programs themselves. It allowed the user to add or change any data items in the treatment plan at any time rather than enforcing a sequence of operations on the user. The second system <ref> [10, 11] </ref> provided high resolution display and allowed the user to put on the screen multiple plots displaying plan and image data simultaneously. Integration with computer controlled therapy machines [12] has been part of the project from the beginning.
Reference: [12] <author> Ira J. Kalet, Jonathan P. Jacky, Ruedi Risler, Solveig Rohlin, and Peter Wootton. </author> <title> Integration of radiotherapy planning systems and radiotherapy treatment equipment: 11 years experience. </title> <journal> International Journal of Radiation Oncology, Biology and Physics, </journal> <volume> 38(1) </volume> <pages> 213-221, </pages> <year> 1997. </year>
Reference-contexts: The second system [10, 11] provided high resolution display and allowed the user to put on the screen multiple plots displaying plan and image data simultaneously. Integration with computer controlled therapy machines <ref> [12] </ref> has been part of the project from the beginning. These first two systems were written in Pas-cal, for DEC VAX computers running VMS. The graphic display was a Ramtek 9465 frame buffer.
Reference: [13] <author> Scott McKay and William York. </author> <title> Common Lisp Interface Manager, release 2.0 specification. </title> <type> Technical report, </type> <institution> Symbolics, Inc. and International Lisp Associates, Inc., </institution> <month> May </month> <year> 1992. </year>
Reference-contexts: It is not intended to completely hide all the details of the X window system, but rather to encapsulate X event processing and provide some basic user interface widgets. This limited goal is in contrast to more comprehensive systems such as CLIM <ref> [13] </ref> and Garnet [14]. CLIM provides an abstract drawing model that can be realized on several window systems, not just X. However, CLIM does not provide the completely general desktop model of an application that can be made of multiple active windows. Garnet provides a comprehensive system for building applications.
Reference: [14] <author> Brad A. Myers, Dario A. Giuse, Roger B. Dannenberg, Brad Vander Zanden, David S. Kosbie, Edward Pervin, Andrew Mickish, and Philippe Marchal. Garnet: </author> <title> Comprehensive support for graphical, highly interactive user interfaces. </title> <journal> Computer, </journal> <volume> 23(11) </volume> <pages> 71-85, </pages> <month> Novem-ber </month> <year> 1990. </year> <month> 22 </month>
Reference-contexts: It is not intended to completely hide all the details of the X window system, but rather to encapsulate X event processing and provide some basic user interface widgets. This limited goal is in contrast to more comprehensive systems such as CLIM [13] and Garnet <ref> [14] </ref>. CLIM provides an abstract drawing model that can be realized on several window systems, not just X. However, CLIM does not provide the completely general desktop model of an application that can be made of multiple active windows. Garnet provides a comprehensive system for building applications.
Reference: [15] <author> Kevin Sullivan and David Notkin. </author> <title> Reconcil--ing environment integration and component independence. </title> <booktitle> In Proceedings of SIGSOFT90: Fourth Symposium on Software Development Environments, </booktitle> <pages> pages 22-33, </pages> <address> Irvine, Califor-nia, </address> <year> 1990. </year>
Reference-contexts: Garnet is large, a consequence of providing a lot of capabilities. One interesting aspect of Garnet is the provision for constraints. These are important in interactive applications that have dynamically interacting components. In SLIK such constraints can be implemented by using abstract behavioral types, events, and mediators <ref> [15] </ref>. In Garnet, only "one-way" constraints are supported, but the event/mediator strategy used in SLIK is more general as it supports bidirectional constraints and can also represent other kinds of behavioral relationships. The event scheme used in SLIK is not related to X window system event dispatching.
Reference: [16] <author> T. Berlage. OSF/Motif: </author> <title> Concepts and Programming. </title> <publisher> Addison-Wesley, </publisher> <address> Wokingham, United Kingdom, </address> <year> 1991. </year>
Reference-contexts: In the 5 SLIK code X window system events are handled independently (and invisibly to the application). SLIK is not targeted for a particular window manager. SLIK widgets are very spartan, having no fancy shading or style such as that typical of Motif <ref> [16] </ref>. Future implementations of SLIK may change the appearance of the devices, so they have a more polished appearance, but the programmer's interface will not change.
Reference: [17] <author> Kevin Sullivan and David Notkin. </author> <title> Reconciling environment integration and software evolution. </title> <journal> ACM Transactions on Software Engineering and Methods, </journal> <volume> 1(3) </volume> <pages> 229-268, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Object oriented programming languages do not avoid this problem, as explicit mention of particular objects by other objects, as well as generic function names, is still required. Even implicit invocation is not sufficient as this just reverses the dependencies. Instead we use abstract behavioral types and mediators <ref> [17] </ref>, where the behavioral relationships between objects are external to the description of those objects. An abstract behavioral type (ABT) defines a class of objects in terms of the operations that can be applied to the objects and in terms of the activities or events the object can announce.
Reference: [18] <author> Guy Steele, Jr. </author> <title> COMMON LISP, the Language. </title> <publisher> Digital Press, </publisher> <address> Burlington, Mas-sachusetts, </address> <note> second edition, </note> <year> 1990. </year>
Reference-contexts: The Lisp reader generally converts lowercase input to uppercase, so except for quoted string data, we assume case insensitivity. The system must be configured so this works, i.e., the readtable is the default as described in Steele <ref> [18, page 540] </ref>. Strings are delimited by the double quote (") character. Unquoted strings in files are read as symbols. The end of the data for the object is demarcated by the keyword :end with no value following it.
Reference: [19] <author> Robert L. Siddon. </author> <title> Fast calculation of the exact radiological path for a three-dimensional ct array. </title> <journal> Medical Physics, </journal> <volume> 12(2) </volume> <pages> 252-255, </pages> <year> 1985. </year>
Reference-contexts: Calculate the total density for the current pixel by summing the values of the intersected voxels weighted by the length of the ray within each voxel. Our implementation is very close to the algorithm presented by Siddon <ref> [19] </ref> except that we do not require a constant distance between the CT images in an image set.
Reference: [20] <institution> International Commission on Radiation Units and Measurements. </institution> <month> Prescribing, </month> <title> Recording and Reporting Photon Beam Therapy. International Commission on Radiation Units and Measurements, </title> <address> Bethesda, MD, </address> <year> 1993. </year> <type> Report 50. </type>
Reference-contexts: to cache coherency because the 3-D dataset is rather large (tens of megabytes). 2.6 Planning target volumes: a rule based component As part of the advance toward true three dimensional radiation therapy treatments, the International Commission on Radiation Units recently defined an entity known as the planning target volume (PTV) <ref> [20] </ref>. While a physician should ideally be able to outline a tumor volume on a patient's treatment planning CT (cross sectional image set) and then irradiate only that volume, certain realistic constraints make this impossible.
Reference: [21] <author> Mary Austin-Seymour, Ira Kalet, John McDonald, Sharon Kromhout-Schiro, Jon Jacky, Sharon Hummel, and Jonathan Unger. </author> <title> Three-dimensional planning target volumes: A model and a software tool. </title> <journal> International Journal of Radiation Oncology Biology Physics, </journal> <volume> 33(5) </volume> <pages> 1073-1080, </pages> <year> 1995. </year>
Reference-contexts: This larger volume, illustrated by the dashed line in Figure 11, is the planning target volume. 2.6.1 The PTV model The Planning Target Volume Tool <ref> [21] </ref> included in the Prism system generates a PTV using a knowledge base, inference engine, and volume expansion algorithm. <p> policy for the order of treatment planning steps, 2. built-in capability for artificial intelligence tools, including a rule interpreter [23] providing support for experimental development of automated radiation treatment planning al gorithms [24], 3. a software tool for automatically generating a planning target volume from a physician drawn tumor volume <ref> [21] </ref>, 4. more explicit attention to quality engineering, better documentation of system behavior and internals, 5. more adaptability, for integration of new modules and outside software, for example, integration of an on-line digital anatomy at las [25]. 6. more adaptability, with respect to diversity of radiation treatment machine types, and integration
Reference: [22] <author> Case H. Ketting, Mary M. Austin-Seymour, Ira J. Kalet, Jonathan P. Jacky, Sharon E. Kromhout-Schiro, Sharon M. Hummel, Jonathan M. Unger, and Lawrence M. Fagan. </author> <title> Evaluation of an expert system producing geometric solids as output. </title> <editor> In Reed M. Gardner, editor, </editor> <booktitle> Proceedings of the Nineteenth Annual Symposium on Computer Applications in Medical Care, </booktitle> <pages> pages 683-687, </pages> <address> Philadelphia, PA, </address> <year> 1995. </year> <title> Hanley and Belfus, </title> <publisher> Inc. </publisher>
Reference-contexts: This model and implementation were tested by comparing the generated target volumes with PTV's drawn by experienced radiation oncologists, using standard expert system evaluation methods <ref> [22] </ref>.
Reference: [23] <author> Christine Sweeney. </author> <title> RULER user manual. </title> <type> Technical Report 91-10-01, </type> <institution> Radiation Oncology Department, University of Washington, </institution> <address> Seattle, Washington, </address> <year> 1991. </year> <title> A rule interpreter based on discrimination nets. </title>
Reference-contexts: 3-D radiation treatment planning capabilities, the Prism system includes unique features, and has some characteristics that are not found in other RTP systems: 1. dynamic random access there is no enforced policy for the order of treatment planning steps, 2. built-in capability for artificial intelligence tools, including a rule interpreter <ref> [23] </ref> providing support for experimental development of automated radiation treatment planning al gorithms [24], 3. a software tool for automatically generating a planning target volume from a physician drawn tumor volume [21], 4. more explicit attention to quality engineering, better documentation of system behavior and internals, 5. more adaptability, for integration
Reference: [24] <author> Ira J. Kalet and Witold Paluszynski. </author> <title> Knowledge-based computer systems for radiotherapy planning. </title> <journal> American Journal of Clinical Oncology, </journal> <volume> 13(4) </volume> <pages> 344-351, </pages> <year> 1990. </year>
Reference-contexts: some characteristics that are not found in other RTP systems: 1. dynamic random access there is no enforced policy for the order of treatment planning steps, 2. built-in capability for artificial intelligence tools, including a rule interpreter [23] providing support for experimental development of automated radiation treatment planning al gorithms <ref> [24] </ref>, 3. a software tool for automatically generating a planning target volume from a physician drawn tumor volume [21], 4. more explicit attention to quality engineering, better documentation of system behavior and internals, 5. more adaptability, for integration of new modules and outside software, for example, integration of an on-line digital
Reference: [25] <author> James F. Brinkley, Kraig Eno, and John W. Sundsten. </author> <title> Knowledge-based client-server approach to structural information retrieval: the digital anatomist browser. </title> <booktitle> Computer Methods and Programs in Biomedicine, </booktitle> <volume> 40(2) </volume> <pages> 131-145, </pages> <year> 1993. </year>
Reference-contexts: tool for automatically generating a planning target volume from a physician drawn tumor volume [21], 4. more explicit attention to quality engineering, better documentation of system behavior and internals, 5. more adaptability, for integration of new modules and outside software, for example, integration of an on-line digital anatomy at las <ref> [25] </ref>. 6. more adaptability, with respect to diversity of radiation treatment machine types, and integration with computer controlled radiation treatment machines. 3.2 Performance The two critical areas where run-time execution speed is important are the updating of the graphic displays and the dose calculation.
Reference: [26] <author> W. Dean Bidgood, Jr., Steven C. Horii, Fred W. Prior, and Donald E. Van Syckle. </author> <title> Understanding and using DICOM, the data interchange standard for biomedical imaging. </title> <journal> Journal of the American Medical Informatics Association, </journal> <volume> 4(3) </volume> <pages> 199-212, </pages> <year> 1997. </year>
Reference-contexts: resource, and the development of a macro language for radiation therapy planning systems. 4.1 The Prism DICOM-3 medical image server The application and presentation layer network protocol developed by the American College of Radiology (ACR) and NEMA for interchange of medical image data between imaging computer systems is called DICOM-3 <ref> [26] </ref>. It is an object oriented model for medical images and related entities as well as an encoding scheme and communications protocol that is designed to work in several wide area network environments, including TCP/IP. DICOM-3 is now supported by most manufacturers of computerized medical imaging equipment.
Reference: [27] <author> John C. Mallery. </author> <title> A Common LISP hyperme-dia server. </title> <booktitle> In Proceedings of The First International Conference on The World-Wide Web, 1994. conference held at CERN, </booktitle> <address> Geneva, Switzerland. </address>
Reference-contexts: We are confident that the performance and robustness will be adequate. Our experience and that of others with the Common Lisp Hypermedia Server (CL-HTTP) from the MIT AI lab <ref> [27] </ref> already has demonstrated the effectiveness of writing socket based TCP/IP network applications in Lisp. The Prism DICOM-3 server design follows the standard model for a TCP/IP connection-oriented server [28]. The overall flow is shown in figure 13.
Reference: [28] <author> Douglas E. Comer and David L. Stevens. </author> <title> Internetworking with TCP/IP: Client-Server Programming and Applications, volume III. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1993. </year>
Reference-contexts: Our experience and that of others with the Common Lisp Hypermedia Server (CL-HTTP) from the MIT AI lab [27] already has demonstrated the effectiveness of writing socket based TCP/IP network applications in Lisp. The Prism DICOM-3 server design follows the standard model for a TCP/IP connection-oriented server <ref> [28] </ref>. The overall flow is shown in figure 13. The names in the figure correspond to the standard BSD socket library calls. Other DICOM implementations have been made available including full source code and documentation, for example the CTN project at Mallincrodt Institute of Radiology [29].
Reference: [29] <author> S. M. Moore, D. E. Beecher, and S. A. Hoff-man. </author> <title> Dicom shareware: a public implementation of the dicom standard. </title> <editor> In R. Gilbert Jost, editor, </editor> <booktitle> Proceedings of the SPIE Conference on Medical Imaging 1994 PACS: Design and Evaluation, </booktitle> <volume> volume 2165, </volume> <pages> pages 772-781, </pages> <address> Bellingham, Washington, </address> <year> 1994. </year> <booktitle> Society of Photo-optical Instrumentation Engineers (SPIE). </booktitle>
Reference-contexts: The overall flow is shown in figure 13. The names in the figure correspond to the standard BSD socket library calls. Other DICOM implementations have been made available including full source code and documentation, for example the CTN project at Mallincrodt Institute of Radiology <ref> [29] </ref>. These are very large programs and suites of programs and libraries written in C. They are difficult to integrate into other systems like Prism, and are not very modular. We decided it would be more efficient simply to write our own directly in Common Lisp.
Reference: [30] <author> James F. Brinkley, Scott W. Bradley, John W. Sundsten, and Cornelius Rosse. </author> <title> The digital anatomist information system and its use in the generation and delivery of web-based anatomy atlases. </title> <journal> Computers and Biomedical Research, </journal> <volume> 30 </volume> <pages> 472-503, </pages> <year> 1997. </year>
Reference-contexts: Another incentive for using Lisp was that most Digital Anatomist components communicate with each other using a Lisp-like command syntax <ref> [30, page 478] </ref>. 4.2.3 Implementation experience We implemented a prototype clinical reference interface to the Digital Anatomist resources (the image repository and semantic network of anatomic terms). The prototype provides support for the kinds of queries we believe would be useful in radiation treatment planning.
Reference: [31] <author> Theodor D. Sterling. </author> <title> Natural language compilers and interpreters in radiation treatment planning or nous parlons anglais better than jede andere sprache. </title> <editor> In Ulf Rosenow, editor, </editor> <booktitle> Proceedings of the Sixth International Conference on the Use of Computers in Radiation Therapy, </booktitle> <pages> pages 8-24, Gottingen, </pages> <year> 1977. </year> <month> 23 </month>
Reference-contexts: Sterling proposed <ref> [31] </ref> that powerful systems for RTP could be built by first designing a macro language for RTP, with primitives for body parts, radiation machines and their functions. Prism is a step in this direction.
References-found: 31

