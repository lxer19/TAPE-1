URL: http://www.fzi.de/prost/projects/production_cell/visualization/TechReport.ps.Z
Refering-URL: http://www.fzi.de/prost/projects/production_cell/Visualization.html
Root-URL: http://www.fzi.de
Email: email: -brauer, lewerentz, lindner-@fzi.de  
Title: Implementing a Visualization of an Industrial Production Cell Using Tk/Tcl  
Author: Artur Brauer, Claus Lewerentz, Thomas Lindner 
Date: Oktober 26, 1993  
Address: Haid-und-Neu-Strae 10-14 76131 Karlsruhe Germany  
Affiliation: Forschungszentrum Informatik  
Pubnum: Technical Report  
Abstract: In this work, an application of Tk/Tcl to the domain of process visualization is described. We developed a simulation of an industrial production cell for to evaluate and validate control software for this (reactive) system. A major requirement was to provide a simple integration of the simulation with control programs. In the first chapter the production cell and requirements for the visualization are described. Then the way the simulation was implemented using Tk/Tcl and our experiences are reported. This should be interesting for people who want to use Tk/Tcl for building visualizations of reactive or real time systems. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. K. Ousterhout, </author> <title> An Embeddable Command Language, </title> <booktitle> Proceedings of the1990 Winter USENIX Conference. </booktitle>
Reference-contexts: Tk/Tcl consists of two parts. There is once Tcl, which is a simple interpretive command language, similar to Lisp. It provides variables, procedures and control structures like if than else and for. Also available are strings, lists and expressions. See <ref> [1] </ref> for a detailed description of Tcl. Tk is a toolkit for X11, which is implemented using Tcl, what means that it can be also used from Tcl applications.
Reference: [2] <author> J. K. Ousterhout, </author> <title> An X11 Toolkit Based on the Tcl Language, </title> <booktitle> Proceedings of the 1991 Winter USENIX Conference. </booktitle>
Reference-contexts: Furthermore, Tk provides a send command that allows any Tk-based application to invoke Tcl commands in any other Tk-based application. Using the send command applications can communicate in a powerful way. See <ref> [2] </ref> for a detailed description of Tk. We decided to use Tk/Tcl by the following reasons: Firstly, Tk/Tcl enables one to program in X on a higher level. Especially the canvas widget helped us to speed up the application development.
Reference: [3] <author> Kai Gutenkunst, </author> <title> Techniques for the coupling of user interfaces and applications, </title> <institution> Forschungszentrum Informatik, </institution> <note> Haid-und-Neu-Strae 10-14, D-7500 Karlsruhe 1, 1992 (in German language). </note>
Reference-contexts: The second reason was that we had to provide an extremely simple coupling mechanism between the visualization and any control software developed by the feed belt deposit belt elevating press arm 2 arm 1 robot robotal rotary table device 3 project partners. A students work <ref> [3] </ref> had shown us that this coupling is very simple using Tcl mechanisms. 3. Experiences Before and during the implementation of the simulation various decision had to be made. There was the whole structure of the simulation and the representation of the data to be determined.
Reference: [4] <author> Thomas Lindner, </author> <title> Case Study Production Cell: Task Definition, </title> <type> Technical Report, </type> <institution> Forschungszentrum Informatik, </institution> <address> Haid-und-Neu-Strae 10-14, D-7500 Karlsruhe 1. </address>
Reference-contexts: What is more, the arms of the robot have different levels and can not move vertically. Such, the press have to balance the height difference of the arms. For a complete understanding of the model see <ref> [4] </ref>. * submitted to the Tk/Tcl Workshop 1993 This work is sponsored by the German Ministry of Research and Technology (BMFT) as part of the compound project KORSO Korrekte Software. 2 The task of the case study, which is treated by several research groups in Germany, is the development of control
Reference: [5] <author> Marc Michaeli, </author> <title> Control Software for a Production Cell, </title> <publisher> Forschungszentrum Informatik, </publisher> <address> Haid-und-Neu-Strae 10-14, D-7500 Karlsruhe 1. </address>
Reference-contexts: In order to achieve this, some small low-level C procedures were added to Tcl, thus resulting in a Tcl extension, that serves as a driver for the hardware model. 7 3.11 Guards We tested the simulation with a control software developed at the FZI by a student <ref> [5] </ref> and a problem became obvious. The control software reacted very slow, so it couldnt assure to stop a device when it had reached a desired position. Even more, in a bad case it couldnt stop a device to prevent it from a collision.
References-found: 5

