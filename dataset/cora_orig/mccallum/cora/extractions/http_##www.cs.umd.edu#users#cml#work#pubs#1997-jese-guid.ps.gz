URL: http://www.cs.umd.edu/users/cml/work/pubs/1997-jese-guid.ps.gz
Refering-URL: http://www.cs.umd.edu/users/cml/work/pubs/
Root-URL: 
Email: lott@bellcore.com  
Title: A Controlled Experiment to Evaluate On-Line Process Guidance  
Author: Christopher M. Lott 
Date: March 31, 1997  
Address: Morristown NJ 07960  
Affiliation: Bellcore,  
Abstract: Process-centered software engineering environments are expected to improve an individual's comprehension of work activities, as well as improve communication and reduce conflicts among teams of software developers. We chose to investigate individual responses when using such an environment before looking for a group response. A controlled experiment compared off-line and on-line implementations of measurement-based process guidance to test three hypotheses: first, individuals accomplish their work more efficiently when using on-line process guidance as compared to offline guidance; second, individuals are willing to use an on-line system for guidance; and third, individuals adjust their behavior based on quantitative quality models. The 20 subjects worked alone on two testing exercises. Subjects used either an off-line or an on-line guidance technique during the first exercise, and the other technique during the second exercise. The results did not confirm the hypotheses. On average, subjects worked more efficiently when using off-line guidance, preferred off-line guidance, and ignored quantitative quality models. Post hoc analysis identified a strong correlation between subject experience level and preference for the type of guidance, a result that deserves further investigation. 
Abstract-found: 1
Intro-found: 1
Reference: [Basili, 1994] <author> Basili, V. R. </author> <year> (1994). </year> <title> A research agenda for ISERN: Validating the Quality Improvement Paradigm. </title> <booktitle> Presented at the 1994 ISERN annual meeting. </booktitle>
Reference-contexts: Table 1 lists some of these factors <ref> [Basili, 1994] </ref>.
Reference: [Basili and Perricone, 1984] <author> Basili, V. R. and Perricone, B. T. </author> <year> (1984). </year> <title> Software errors and complexity: An empirical investigation. </title> <journal> Communications of the ACM, 27(1):4252. </journal>
Reference-contexts: The two-faceted fault classification scheme defined by Basili and Perricone <ref> [Basili and Perricone, 1984] </ref> was used to select a mix of faults (type fomission, commissiong and fault class finitialization, computation, control, interface, data, cosmeticg). The number of faults was chosen to attain a similar fault density in both programs.
Reference: [Box et al., 1978] <author> Box, G. E. P., Hunter, W. G., and Hunter, J. S. </author> <year> (1978). </year> <title> Statistics for Experimenters. </title> <publisher> John Wiley & Sons, </publisher> <address> New York. </address>
Reference-contexts: The analysis for the main effects uses inferential statistics to test the pairs for significant differences <ref> [Box et al., 1978, p. 97101] </ref>. <p> According to <ref> [Box et al., 1978, p. 101] </ref>, the t-test is an acceptable approximation of a randomization test. Since randomization tests do not assume a normal distribution in the results, and randomization was incorporated into the design, the t-test is an appropriate choice of inferential analysis approach.
Reference: [Brooks, 1980] <author> Brooks, R. E. </author> <year> (1980). </year> <title> Studying programmer behavior experimentally: The problems of proper methodology. </title> <journal> Communications of the ACM, 23(4):207213. </journal>
Reference-contexts: The population was made up of master's degree candidates (quarter-time appointments) and Ph.D. degree candidates (full-time appointments). Twenty subjects (6 Ph.D. and 14 M.S. candidates) completed the exercises during their regular working hours. One threat to validity was that the subjects were in part self-selected <ref> [Brooks, 1980] </ref>. All employees were experienced in window, icon, menu, pointer (WIMP) interfaces. Only volunteers who had a working knowledge of the C programming language were accepted as subjects. No prior knowledge about the testing techniques was required. Another possible threat to validity was biased subjects.
Reference: [Campbell and Stanley, 1966] <author> Campbell, D. T. and Stanley, J. C. </author> <year> (1966). </year> <title> Experimental and Quasi-Experimental Designs for Research. </title> <publisher> Houghton Mifflin, </publisher> <address> Boston. ISBN 0-395-30787-2. </address>
Reference-contexts: Threats to internal validity include selection and maturation effects <ref> [Campbell and Stanley, 1966] </ref>. A selection effect could be caused by using subjects who are predisposed towards (or against) the use of a process-centered system. However, no preliminary test was administered to the subjects that might have assessed this bias in order to avoid 7 problems of reactivity and sensitization.
Reference: [Christie, 1995] <author> Christie, A. M. </author> <year> (1995). </year> <title> Software Process Automation, The Technology and Its Adoption. </title> <publisher> SpringerVerlag. </publisher>
Reference-contexts: Some work has been done on evaluating process guidance systems. Christie reports on a comparison of ProcessWeaver and SynerVision to accomplish a shared task <ref> [Christie, 1995] </ref>. The study evaluated issues concerning ease of use as viewed by both the process developer and the end user (e.g., development of the process description, screen layout, and response time).
Reference: [Dart et al., 1987] <author> Dart, S. A., Ellison, R. J., Feiler, P. H., and Habermann, A. N. </author> <year> (1987). </year> <title> Software development environments. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 1828. 26 </pages>
Reference-contexts: 1 Introduction Much research has focused on developing process-centered software engineering environments (surveys include <ref> [Dart et al., 1987, Perry and Kaiser, 1991, Lott, 1994] </ref>). fl This work was conducted while the author was with the Fraunhofer Institute for Experimental Software Engineering, Kaiserslautern, Germany. 1 However, few studies have demonstrated measurable, objective benefits of their use.
Reference: [Kamsties and Lott, 1995] <author> Kamsties, E. and Lott, C. M. </author> <year> (1995). </year> <title> An empirical evaluation of three defect-detection techniques. </title> <editor> In Schafer, W. and Botella, P., editors, </editor> <booktitle> Proceedings of the Fifth European Software Engineering Conference, </booktitle> <pages> pages 362383. </pages> <note> Lecture Notes in Computer Science Nr. 989, SpringerVerlag. </note>
Reference-contexts: Program tokens sorts and counts words in its input. Static source-code measures of the programs are summarized in Table 3, and reveal a size difference in excess of 2:1. Previous experience with these exercises in the context of a controlled experiment <ref> [Kamsties and Lott, 1995] </ref> indicated that the structural testing exercise required more time than the functional testing exercise for the same program, so the size difference was necessary to keep the exercise duration as similar as possible. <p> All faults caused unique, visible failures given suitable inputs. 4.3.3 Data used to derive quality models The data supplied as quantitative quality models (e.g., estimated amount of time required) were derived from previous experimental trials that used the same techniques and instruments <ref> [Kamsties and Lott, 1995] </ref>. Table 4 summarizes the previous observations and the quality models that were supplied to all subjects. The guidance materials explained that the quantitative quality models were based on similar components and exercises.
Reference: [Lott, 1994] <author> Lott, C. M. </author> <year> (1994). </year> <title> Measurement support in software engineering environments. </title> <journal> International Journal of Software Engineering & Knowledge Engineering, 4(3):409426. </journal>
Reference-contexts: 1 Introduction Much research has focused on developing process-centered software engineering environments (surveys include <ref> [Dart et al., 1987, Perry and Kaiser, 1991, Lott, 1994] </ref>). fl This work was conducted while the author was with the Fraunhofer Institute for Experimental Software Engineering, Kaiserslautern, Germany. 1 However, few studies have demonstrated measurable, objective benefits of their use.
Reference: [Lott, 1996] <author> Lott, C. M. </author> <year> (1996). </year> <title> Measurement-based feedback in a process-centered software engineering environment. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, The University of Maryland, College Park, Maryland 20742. </institution> <note> Available online at http://www.cs.umd.edu/users/cml/. </note>
Reference-contexts: The only client currently implemented is a user interface that provides personnel who perform technical, constructive activities with information maintained by the server. This paper describes a controlled experiment that compared the use of measurement-based process guidance as implemented off-line (on paper) versus on-line (using MVP-S) <ref> [Lott, 1996] </ref>. Because relatively little empirical work has been done on using process-centered systems to assist software developers, the research presented here is best classified as exploratory, and can be expected to uncover more questions than it answers.
Reference: [Lott et al., 1995] <author> Lott, C. M., Hoisl, B., and Rombach, H. D. </author> <year> (1995). </year> <title> The use of roles and measurement to enact project plans in MVP-S. </title> <editor> In Schafer, W., editor, </editor> <booktitle> Proceedings of the Fourth European Workshop on Software Process Technology, </booktitle> <pages> pages 3048, </pages> <address> Noordwijkerhout, The Netherlands. </address> <note> Lecture Notes in Computer Science Nr. 913, SpringerVerlag. </note>
Reference-contexts: The study described in this paper specifically addresses the question of acceptance of on-line guidance by users. The process guidance system that was used in this study is a research prototype that supports measurement-based guidance and feedback for individuals and teams <ref> [Lott et al., 1995] </ref>. The system uses integrated process and measurement information to assist software developers, and is named the Multi-View Process 2 System (MVP-S). Fundamentally, the system only provides information and col-lects data.
Reference: [Lott and Rombach, 1993] <author> Lott, C. M. and Rombach, H. D. </author> <year> (1993). </year> <title> Measurement-based guidance of software projects using explicit project plans. </title> <journal> Information and Software Technology, 35(6/7):407419. </journal>
Reference-contexts: However, the drawback of multiple observations is a maturation effect that might result from a subject learning from the first exercise. Different exercises were used to mitigate such maturation effects. 4.1.4 Use of quantitative quality models Quantitative quality models are a basic part of measurement-based process guidance <ref> [Lott and Rombach, 1993] </ref>. All subjects received quantitative quality models, regardless of the guidance technique used. This was intended to approximate the situation in which an organization maintains a database about prior test efforts.
Reference: [Perry and Kaiser, 1991] <author> Perry, D. E. and Kaiser, G. E. </author> <year> (1991). </year> <title> Models of software development environments. </title> <journal> IEEE Transactions on Software Engineering, 17(3):283295. </journal>
Reference-contexts: 1 Introduction Much research has focused on developing process-centered software engineering environments (surveys include <ref> [Dart et al., 1987, Perry and Kaiser, 1991, Lott, 1994] </ref>). fl This work was conducted while the author was with the Fraunhofer Institute for Experimental Software Engineering, Kaiserslautern, Germany. 1 However, few studies have demonstrated measurable, objective benefits of their use.
Reference: [Srumgard, 1996] <author> Srumgard, S. </author> <year> (1996). </year> <title> An empirical study of process conformance. </title> <booktitle> In Proceedings of the 21 st Annual Software Engineering Workshop. </booktitle> <institution> NASA Goddard Space Flight Center, Greenbelt MD 20771. </institution> <month> 27 </month>
Reference-contexts: No significant correlation of reported motivation with the results was detected. Although the observer detected no significant deviations from the prescribed processes, and process conformance was judged to be acceptable, assessing process conformance is extremely difficult <ref> [Srumgard, 1996] </ref>. Next the influence of the controlled independent variables exercise, guidance technique, and order on the rate at which failures were detected is analyzed. Measure n Mean Std. dev.
References-found: 14

