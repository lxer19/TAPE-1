URL: ftp://ftp.math.tu-berlin.de/pub/Preprints/combi/Report-408-1994.ps.Z
Refering-URL: http://acme.commerce.ubc.ca/quey/queyranne.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Machine Scheduling  
Author: by Maurice Queyranne and Andreas S. Schulz 
Keyword: Polyhedral Approaches  
Date: 408/1994  
Note: to  
Address: Sekr. MA 6-1, Strae des 17. Juni 136, D-10623 Berlin Germany  
Affiliation: Technische Universitt Berlin berlin FACHBEREICH 3 MATHEMATIK  
Pubnum: No.  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> F. Afrati, S. Cosmadakis, C. H. Papadimitriou, G. Papageorgiou, and N. Papakonstanti-nou, </author> <title> The complexity of the traveling repairman problem, </title> <journal> Theor. Info. Appl. </journal> <volume> 20 (1986), </volume> <pages> 79-87. </pages>
Reference-contexts: Additional Notes and References Queyranne and Wang [81] report computational experiences with a cutting plane algorithm on randomly generated instances ranging from 30 to 160 jobs for the single machine problem with precedence constraints and sequence-independent processing times drawn from the discrete uniform distribution <ref> [1; 100] </ref>. They also prove that the bounds obtained this way, only using the parallel and the simple series inequalities always outperform the lower bounds obtained by Lagrangian relaxation based on completion time variables where the precedence constraints are incorporated into the objective function (cf. [99]). <p> j + p j0 (1 z j0 ) M j0 S 0 ; j 2 N: Minimizing the sum of starting times, P j2N S j or, equivalently, the sum of waiting times, P j2N (S j r j ) is known as the traveling repairman problem (cf., e. g., <ref> [1] </ref>). Van Eijl [35] suggested to use another type of date variables besides the TSP variables in order to avoid the big-M. She extracted her model, that can be used for all three types of objectives mentioned above, from one of Maffioli and Sciomachen [68] with even more variables.
Reference: [2] <author> J. H. Ahmadi, R. H. Ahmadi, S. Dasu, and C. S. Tang, </author> <title> Batching and scheduling jobs with batch and discrete processors, </title> <booktitle> Operations Research 39 (1992), </booktitle> <pages> 750-763. </pages>
Reference-contexts: Similarly, positional release dates may restrict the number (but not the identity) of jobs available by given dates. Such constraints may arise, for instance, if a supplier has a limited production capacity for materials or subassemblies. As an example, consider the two-machine flowshop problem of Ahmadi et al. <ref> [2] </ref>, where the first machine is a batch machine which can process a batch of any b jobs in t time units.
Reference: [3] <author> J. M. van den Akker, </author> <title> LP-Based Solution Methods for Single-Machine Scheduling Problems, </title> <type> Ph.D. thesis, </type> <institution> Eindhoven University of Technology, Eindhoven, </institution> <address> The Netherlands, </address> <year> 1994. </year>
Reference-contexts: Because of the major drawback of the time-indexed approach, namely the large number of variables as well as the large number of initial constraints that lead immediately to large memory requirements and computation times, van den Akker <ref> [3] </ref> applied Dantzig-Wolfe decomposition [30] in order to solve the initial LP-relaxation by column generation.
Reference: [4] <author> J. M. van den Akker, C. P. M. van Hoesel, and M. W. P. Savelsbergh, </author> <title> Facet inducing inequalities for single-machine scheduling problems, </title> <type> Memorandum COSOR 93-27, </type> <institution> Department of Mathematics and Computing Science, Eindhoven University of Technology, Eindhoven, </institution> <address> The Netherlands, </address> <year> 1993. </year>
Reference-contexts: Section 3 investigates polytopes arising from the use of these variables, based on earlier work of Sousa and Wolsey [97], Crama and Spieksma [29], and van den Akker, van Hoesel and Savelsbergh <ref> [4] </ref>. In Section 4 we do not care about time, and just want to know for each pair of jobs j; k which precedes the other. Hence, we obtain linear ordering variables ffi jk . These are one if j precedes k and zero, otherwise. <p> In essentially this way Sousa and Wolsey obtained two more classes of valid inequalities for T I (see [97] for a detailed description of these inequalities). But in contrast to the family of inequalities (3.7) those are in general not that strong (cf. <ref> [4] </ref>). If the time horizon T is large enough, Sousa and Wolsey established the facet defining property of inequalities (3.7). Van den Akker, van Hoesel and Savelsbergh [4] showed that these inequalities together with the inequalities (3.2) provide (in a certain sense) all facet defining inequalities of T I with integral <p> But in contrast to the family of inequalities (3.7) those are in general not that strong (cf. <ref> [4] </ref>). If the time horizon T is large enough, Sousa and Wolsey established the facet defining property of inequalities (3.7). Van den Akker, van Hoesel and Savelsbergh [4] showed that these inequalities together with the inequalities (3.2) provide (in a certain sense) all facet defining inequalities of T I with integral coefficients and right-hand side 1. (Crama and Spieksma [29] derived the same result for their special case.) The approach of van den Akker, van Hoesel and Savelsbergh <p> Notice, that in general a complete list of inequalities defining facets of esub (T I) contains for each facet of T I itself an inducing inequality. In order to describe their result mentioned above more detailed we adopt some notation from van den Akker, van Hoesel and Savelsbergh <ref> [4] </ref>. We denote by V the support of a valid inequality for esub (T I), and by V j the set of those time periods t with (j; t) 2 V . <p> Thus, we can conclude that all inequalities that define facets of T I, that have integral coefficients and right-hand side 1, and that are also valid for esub (T I) are contained in the classes (3.2) and (3.7). Van den Akker, van Hoesel and Savelsbergh <ref> [4] </ref> derive also necessary and sufficient characterizations of inequalities that define facets of esub (T I) and have right-hand side 2. 3.4 Computational Experiences Sousa and Wolsey [97] as well as Crama and Spieksma [29] report on first computational experiences with a branch&cut algorithm based on the inequalities they derived.
Reference: [5] <author> D. Applegate and W. Cook, </author> <title> A computational study of the job-shop scheduling problem, </title> <note> ORSA Journal on Computing 3 (1991), 149-156. 54 </note>
Reference-contexts: Applegate and Cook <ref> [5] </ref> compared two cutting plane algorithms for the job shop problem based on natural date variables, only, and on natural date and linear ordering variables for each machine, respectively. They used several straightforward extensions of the inequalities we presented in this section and in Section 2.
Reference: [6] <author> A. von Arnim, U. Faigle, and R. Schrader, </author> <title> The permutahedron of series-parallel posets, </title> <booktitle> Discrete Applied Mathematics 28 (1990), </booktitle> <pages> 3-9. </pages>
Reference-contexts: The permutahedron of a poset has been the subject of investigation in von Arnim, Faigle and Schrader <ref> [6] </ref>, Schulz [89], and von Arnim and Schrader [7]. In case that all job processing times are equal to one all the work has been done for the polytope rather than for the polyhedron. <p> That is, AflB has to be an intermediate set. A set J D is called intermediate (or convex) if j ! k ! l and j; l 2 J imply k 2 J. Inequality (2.13) which has been derived by von Arnim, Faigle and Schrader <ref> [6] </ref> for the permutahedron and by Queyranne and Wang [82] for P n (D) is called series inequality or convex set constraint. <p> Here D=(A fl B) stands for the contracted poset resulting from D by replacing A fl B by a single element. While the parallel inequalities are sufficient to describe the scheduling polyhedra of weak posets, von Arnim, Faigle and Schrader <ref> [6] </ref> for the permutahedron and Queyranne and Wang [82] for P n (D) showed that the parallel together with the series inequalities are sufficient in case of series-parallel posets. The way Queyranne and Wang obtained this result exploits the decomposition tree and reveals similarities with Lawler's algorithm.
Reference: [7] <author> A. von Arnim and R. Schrader, </author> <title> The permutahedron of P 4 -sparse posets, </title> <note> Working paper, </note> <year> 1993. </year>
Reference-contexts: Since nonpreemptive schedules are completely determined by the job completion times C j or, equivalently, the start times S j , several authors including Balas [16], Queyranne [79], Queyranne and Wang [81, 82], von Arnim and Schrader <ref> [7] </ref>, and von Arnim and Schulz [8] studied the convex hull of feasible completion time vectors. This work is presented in a unifying way in Section 2. <p> P n (D) is a kind of dominant of B n (D) and it is indeed its dominant if the jobs are pairwise incomparable. The polytope B n (D) is also known under the name generalized permutahedron of the poset D (cf. <ref> [7] </ref> and [8]) since when all job processing times are equal to one, it is the convex hull of all permutations that extend D. <p> The permutahedron of a poset has been the subject of investigation in von Arnim, Faigle and Schrader [6], Schulz [89], and von Arnim and Schrader <ref> [7] </ref>. In case that all job processing times are equal to one all the work has been done for the polytope rather than for the polyhedron. <p> They showed that certain inequalities associated with the order N are needed. This is not surprising since the absence of an induced N gives an equivalent characterization of series-parallel posets by a forbidden substructure. Von Arnim and Schrader <ref> [7] </ref> introduced another class of inequalities that generalizes the one of Queyranne and Wang and showed that the addition of this class of the so-called spider inequalities to all the inequalities we derived before leads to a complete linear description of B n (D) when D is N -sparse.
Reference: [8] <author> A. von Arnim and A. S. Schulz, </author> <title> Facets of the generalized permutahedron of a poset, </title> <type> Preprint 386/1994, </type> <institution> Department of Mathematics, Technical University of Berlin, </institution> <address> Berlin, Germany, </address> <year> 1994. </year>
Reference-contexts: Since nonpreemptive schedules are completely determined by the job completion times C j or, equivalently, the start times S j , several authors including Balas [16], Queyranne [79], Queyranne and Wang [81, 82], von Arnim and Schrader [7], and von Arnim and Schulz <ref> [8] </ref> studied the convex hull of feasible completion time vectors. This work is presented in a unifying way in Section 2. Time is handled more implicitly if 0=1-variables x jt are used that are not only 3 indexed by jobs but additionally by time periods. <p> P n (D) is a kind of dominant of B n (D) and it is indeed its dominant if the jobs are pairwise incomparable. The polytope B n (D) is also known under the name generalized permutahedron of the poset D (cf. [7] and <ref> [8] </ref>) since when all job processing times are equal to one, it is the convex hull of all permutations that extend D. <p> In case that all job processing times are equal to one all the work has been done for the polytope rather than for the polyhedron. Also Schulz [90] and von Arnim and Schulz <ref> [8] </ref> took this point of view and studied B n (D) whereas Queyranne [79] as well as Queyranne and Wang 10 [82] concentrate on P n (D). <p> This property carries over to B n (D). Theorem 2.2 ([90], see also <ref> [8] </ref>) Let D be a poset with series decomposition D 1 fl fl D q . <p> If D is not series decomposable, the dimension of B n (D) is n 1 [90] (cf. also <ref> [8] </ref>). With the help of Theorem 2.2 it is easy to determine the dimension of B n (D) for arbitrary D. Corollary 2.3 ([90], see also [8]) Let D be a poset with series decomposition D 1 fl fl D q . <p> If D is not series decomposable, the dimension of B n (D) is n 1 [90] (cf. also <ref> [8] </ref>). With the help of Theorem 2.2 it is easy to determine the dimension of B n (D) for arbitrary D. Corollary 2.3 ([90], see also [8]) Let D be a poset with series decomposition D 1 fl fl D q . <p> Again, this condition is not sufficient in case of B n (D). Assume that D is non series decomposable. Then von Arnim and Schulz <ref> [8] </ref> (see also [90]) proved that an intermediate set A fl B induces a facet of B n (D) if and only if A, B, and D=(A fl B) are not series decomposable. <p> A filter (or terminal set) of a poset is a subset whose complement forms an ideal. Minimal linear descriptions for P n (D) and B n (D) for series-parallel D are given in Queyranne and Wang [82], and in Schulz [90] as well as von Arnim and Schulz <ref> [8] </ref>, respectively. The separation problem associated with the class of series inequalities is not completely solved. Queyranne and Wang [81] proposed an algorithm for the simple series inequalities. This subclass contains only those series inequalities induced by A fl B where A or B is a singleton. <p> Von Arnim and Schulz <ref> [8] </ref> show that a spider S D together with an ideal I or an filter F of R defines a facet of B n (D) if and only if S is an intermediate set and the contracted poset D=S is non series decomposable.
Reference: [9] <author> N. Ascheuer, L. Escudero, M. Grotschel, and M. Stoer, </author> <title> On identifying in polynomial time violated subtour elimination and precedence forcing constraints for the sequential ordering problem, Integer Programming and Combinatorial Optimization (R. </title> <editor> Kannan and W. R. Pulleyblank, eds.), </editor> <address> University of Waterloo, Waterloo, Ontario, </address> <year> 1990, </year> <booktitle> Proceedings of the 1st IPCO Conference, </booktitle> <pages> pp. 19-28. </pages>
Reference-contexts: The sequential ordering problem is to determine in the complete directed graph on N with arc costs a Hamiltonian path that does not violate the precedences and has minimal total cost. This problem has been attacked with a cutting plane approach by Ascheuer et al. <ref> [9, 10] </ref> who discussed also different 0/1-models but prefer one based on TSP variables only. We focus here on the equivalent ATS model with fixed orign and destination, as we did in the previous section. We call a tour in G n+1 feasible if it satisfies the precedence constraints.
Reference: [10] <author> N. Ascheuer, L. Escudero, M. Grotschel, and M. Stoer, </author> <title> A cutting plane approach to the sequential ordering problem (with applications to job scheduling in manufacturing), </title> <note> SIAM Journal on Optimization 3 (1993), 25-42. </note>
Reference-contexts: makespan can be done by solving a linear programming problem over the ATS polytope. 6.2 Precedence Constraints If there are restrictions on the sequences in terms of given precedences between pairs of jobs we enter the precedence constrained ATS polytope (cf., [20]) and the Sequential Ordering Problem (cf., e. g., <ref> [10] </ref>), respectively. Let D = (N; !) be the poset imposing the precedence constraints. The sequential ordering problem is to determine in the complete directed graph on N with arc costs a Hamiltonian path that does not violate the precedences and has minimal total cost. <p> The sequential ordering problem is to determine in the complete directed graph on N with arc costs a Hamiltonian path that does not violate the precedences and has minimal total cost. This problem has been attacked with a cutting plane approach by Ascheuer et al. <ref> [9, 10] </ref> who discussed also different 0/1-models but prefer one based on TSP variables only. We focus here on the equivalent ATS model with fixed orign and destination, as we did in the previous section. We call a tour in G n+1 feasible if it satisfies the precedence constraints.
Reference: [11] <author> N. Ascheuer, M. Fischetti, and M. Grotschel, </author> <type> Personal communication, </type> <year> 1994. </year>
Reference-contexts: Notice that constraints (6.4) also prevent subtours. As it is often the case the big-M formulation turns out to perform poorly in practice. As-cheuer et al. <ref> [11] </ref> compared branch&cut algorithms based on the big-M formulation and on a formulation involving TSP variables only. Their experience with instances involving up to 50 nodes (jobs) shows that the latter one is always preferable. The formulation they used is as follows.

Reference: [18] <author> E. Balas and M. Fischetti, </author> <title> A lifting procedure for the asymmetric traveling salesman polytope and a large new class of facets, </title> <booktitle> Mathematical Programming 58 (1993), </booktitle> <month> 325-352. </month> <title> [19] , On the monotonization of polyhedra, Integer Programming and Combinatorial Optimization (G. </title> <editor> Rinaldi and L. A. Wolsey, eds.), </editor> <booktitle> 1993, Proceedings of the 3rd IPCO Conference, </booktitle> <pages> pp. 23-38. </pages>
Reference-contexts: (A l ; N 0 n A l ) q + 1 are valid for the PCATS polytope. 51 We close this section on the precedence-constrained asymmetric traveling salesman polytope by mentioning that Balas, Fischetti and Pulleyblank also provide a lifting procedure that generalizes the one of Balas and Fischetti <ref> [18] </ref> for the pure asymmetric traveling salesman polytope. 6.3 TSP with Time Windows Other typical restrictions arising in scheduling are release dates and deadlines. Assume that each job j is released at time r j .
Reference: [20] <author> E. Balas, M. Fischetti, and W. R. Pulleyblank, </author> <title> The precedence-constrained traveling salesman polytope, </title> <institution> Management Science Research Report 582, Graduate School of Industrial Administration, Carnegie Mellon University, Pittsburgh, USA, </institution> <month> April </month> <year> 1992. </year> <month> 55 </month>
Reference-contexts: "The traveling salesman problem, in its symmetric as well as its asymmetric version, is the classical model for the optimal sequencing of items in all those situations where the cost of a sequence can be expressed as the sum of costs of successive pairs of items" (Balas, Fischetti, and Pulleyblank <ref> [20] </ref>). There is a great variety of problems that can be formulated by this model. We will focus on the nonpreemptive single machine problem with sequence-dependent processing times. <p> Thus, minimizing the makespan can be done by solving a linear programming problem over the ATS polytope. 6.2 Precedence Constraints If there are restrictions on the sequences in terms of given precedences between pairs of jobs we enter the precedence constrained ATS polytope (cf., <ref> [20] </ref>) and the Sequential Ordering Problem (cf., e. g., [10]), respectively. Let D = (N; !) be the poset imposing the precedence constraints. <p> We call a tour in G n+1 feasible if it satisfies the precedence constraints. Because of these constraints there are several arcs in A n+1 that cannot be used by any feasible tour. Balas, Fischetti and Pulleyblank <ref> [20] </ref> derived the following complete characterization of removable arcs, the interesting direction of which can be proved by a simple shrinking argument. Proposition 6.1 ([20]) An arc (j; k) 2 A n+1 cannot be used by any tour if and only if it satisfies one of the following conditions: (a) j
Reference: [21] <author> C. Barnhart, E. L. Johnson, G. L. Nemhauser, M. W. P. Savelsbergh, and P. H. Vance, Branch-and-price: </author> <title> Column generation for solving huge integer programs, </title> <booktitle> Mathematical Programming: State of the Art 1994 (J. </booktitle> <editor> R. Birge and K. G. Murty, eds.), </editor> <publisher> The University of Michigan, </publisher> <year> 1994, </year> <pages> pp. 186-207. </pages>
Reference-contexts: Van den Akker reports on the solution of instances of the LP-relaxation with up to 30 jobs and p max 100 using column generation. She also shows that it is easy in this case to combine column with row generation (see <ref> [21] </ref> for a general treatment of this topic). Since facet inducing inequalities with right-hand side 1 or 2 are formulated in the original variables, they only influence the objective in the pricing problem but not its structure. <p> The idea is to handle the obtained subproblems in the same way as the root problem. Thus, altogether this leads to a branch&price algorithm. See Barnhart et al. <ref> [21] </ref> for a general survey of branch&price, and Desrosiers et al. [33] for applications of branch&price in time constrained routing and scheduling. An important issue of a branch&price algorithm is the choice of the branching strategy.
Reference: [22] <author> J. P. Benzecri, </author> <title> Sur l'analyse des preferences, </title> <editor> Ordres Totaux Finis (M. Barbut, ed.), </editor> <address> Paris, </address> <year> 1971. </year>
Reference-contexts: The so-called permutahedron (or permutohedron or taxihedron), the convex hull of all permutations, has almost independently been studied by Schoute [87], Rado [85] (see also [103]), Guilbaud and Rosenstiehl [52], Benzecri <ref> [22] </ref>, Kreweras [58], Balas [13], Gaiha and Gupta [45], and Maes and Kappen [67]. The permutahedron of a poset has been the subject of investigation in von Arnim, Faigle and Schrader [6], Schulz [89], and von Arnim and Schrader [7].
Reference: [23] <author> D. Bertsimas and J. Ni~no-Moras, </author> <title> Conservation laws, extended polymatroids and multi-armed bandit problems: A unified approach to indexable systems, Integer Programming and Combinatorial Optimization (G. </title> <editor> Rinaldi and L. A. Wolsey, eds.), </editor> <booktitle> 1993, Proceedings of the 3rd IPCO Conference, </booktitle> <pages> pp. 355-384. </pages>
Reference-contexts: Thus, the usefulness of the supermodularity framework is confirmed and established, also for parallel machine problems. Some extensions of the results related to supermodular polyhedra were also obtained for stochastic and dynamic scheduling problems (cf. <ref> [37, 39, 38, 92, 24, 23] </ref>). In many multiclass queueing systems, strong conservation laws are satisfied by certain performance measures. These laws imply that the feasible space of achievable performance is the base of a polyma-troid. Therefore, many types of functions of the performance vector can be efficiently optimized. <p> In many multiclass queueing systems, strong conservation laws are satisfied by certain performance measures. These laws imply that the feasible space of achievable performance is the base of a polyma-troid. Therefore, many types of functions of the performance vector can be efficiently optimized. Bertsimas and Ni~no-Mora <ref> [23] </ref> showed that this remains true if the performance measure satisfies a generalized conservation law by observing that in this case the performance space can be seen as an extended polymatroid (cf. [24]).
Reference: [24] <author> P. P. Bhattacharya, L. Georgiadis, and P. Tsoucas, </author> <title> Extended polymatroids: Properties and optimization, Integer Programming and Combinatorial Optimization (E. </title> <editor> Balas, G. Cornuejols, and R. Kannan, eds.), </editor> <publisher> Carnegie Mellon University, </publisher> <year> 1992, </year> <booktitle> Proceedings of the 2nd IPCO Conference, </booktitle> <pages> pp. 298-315. </pages>
Reference-contexts: Thus, the usefulness of the supermodularity framework is confirmed and established, also for parallel machine problems. Some extensions of the results related to supermodular polyhedra were also obtained for stochastic and dynamic scheduling problems (cf. <ref> [37, 39, 38, 92, 24, 23] </ref>). In many multiclass queueing systems, strong conservation laws are satisfied by certain performance measures. These laws imply that the feasible space of achievable performance is the base of a polyma-troid. Therefore, many types of functions of the performance vector can be efficiently optimized. <p> Therefore, many types of functions of the performance vector can be efficiently optimized. Bertsimas and Ni~no-Mora [23] showed that this remains true if the performance measure satisfies a generalized conservation law by observing that in this case the performance space can be seen as an extended polymatroid (cf. <ref> [24] </ref>). Notice, that the polytope B n is itself an extended polymatroid. 3 Time-Indexed Variables The general task of machine scheduling is to allocate machines to jobs over time.
Reference: [25] <author> J. L. Bruno, E. G. Coffman, and R. Sethi, </author> <title> Scheduling independent tasks to reduce mean finishing time, </title> <booktitle> Communications of the ACM 17 (1974), </booktitle> <pages> 382-387. </pages>
Reference-contexts: For a simple example with unrelated parallel machines, Bruno et al. <ref> [25] </ref> express the total completion time as X C j = j2N i ! j u i where the assignment variables are now u i j! , equal to one if job j is in !-th position from the end on machine i.
Reference: [26] <author> A. Caprara and M. Fischetti, </author> <title> Odd cut-sets, odd cycles and 0-1/2 Chvatal-Gomory cuts, </title> <type> Technical Report, </type> <institution> DEIS, University of Bologna, Bologna, Italy, </institution> <year> 1993. </year>
Reference-contexts: The lower bounds obtained by using this formulation may be further improved by implicitly adding known inequalities that define high-dimensional faces of the linear ordering polytope, e. g. Mobius-Ladder-inequalities [49] which can be separated in polynomial time (cf., <ref> [26, 70, 71] </ref>). 4.3 Release Dates The single machine problem remains N P-hard when we replace the precedence constraints by release times r j at which job j becomes available for processing.
Reference: [27] <author> M. W. Carter, M. J. Magazine, and T.-S. Moon, </author> <title> A warning about cyclic lot scheduling with sequence dependent set-up times, </title> <booktitle> International Journal of Production Research 26 (1988), </booktitle> <pages> 1281-1283. </pages>
Reference-contexts: Although this condition seems to be reasonable in many applications, Carter, Magazine and Moon <ref> [27] </ref> pointed out that situations where this condition is violated may occur. Notice that the triangle condition is trivially satisfied if there are no changeover times, i. e. s jk = 0 for all j; k 2 N; j 6= k.
Reference: [28] <author> R. W. Conway, W. L. Maxwell, and L. W. Miller, </author> <title> Theory of Scheduling, </title> <publisher> Addison-Wesley, </publisher> <year> 1967. </year>
Reference-contexts: We will return to the problem with changeover times in Section 2.5. Since we do not allow for different job release dates, we can restrict to schedules without inserted idle times when dealing with a regular performance measure (cf. <ref> [28] </ref>). We could achieve this restriction by adding to (2.1) the constraint C j p (N ) for all maximal elements j 2 D. As mentioned above, the permutation schedules are the only without inserted idle time and thus the only satisfying this additional condition. <p> Additional Notes and References If one deals with a regular performance measure, and if in addition all jobs have the same release time, it is known for a long time (cf. <ref> [28] </ref>) that there always exists an optimal schedule without induced machine idle time. This implies that the overall completion time is equal to p (N ). We pointed out that in this case the inequalities (3.2) of the initial formulation can be turned into equations.
Reference: [29] <author> Y. Crama and F. C. R. Spieksma, </author> <title> Scheduling jobs of equal length: Complexity, facets and computational results, </title> <type> Report M 93-09, </type> <institution> Department of Mathematics, University of Limburg, </institution> <address> Maastricht, The Netherlands, </address> <year> 1993. </year>
Reference-contexts: Time is handled more implicitly if 0=1-variables x jt are used that are not only 3 indexed by jobs but additionally by time periods. Section 3 investigates polytopes arising from the use of these variables, based on earlier work of Sousa and Wolsey [97], Crama and Spieksma <ref> [29] </ref>, and van den Akker, van Hoesel and Savelsbergh [4]. In Section 4 we do not care about time, and just want to know for each pair of jobs j; k which precedes the other. Hence, we obtain linear ordering variables ffi jk . <p> This remains true when all jobs have the same processing time p and T = n p + c for some constant c. In this case the scheduling problem can be solved by solving n+c assignment problems (cf. <ref> [29] </ref> for details). On the other hand, if all jobs have the same processing time p j = 2 and T is part of the input, Crama and Spieksma [29] showed that the scheduling problem is N P-hard, even if all c jt 2 f0; 1g. 3.2 Dimension and Basic Facets <p> In this case the scheduling problem can be solved by solving n+c assignment problems (cf. <ref> [29] </ref> for details). On the other hand, if all jobs have the same processing time p j = 2 and T is part of the input, Crama and Spieksma [29] showed that the scheduling problem is N P-hard, even if all c jt 2 f0; 1g. 3.2 Dimension and Basic Facets One of the first concerns when starting the study of a polyhedron is to determine its dimension. <p> We include the proof because it provides a nice application of Lemma 1.1. That is, we show that the equations (3.1) define a minimal equation system for T I. Our proof generalizes the one of Crama and Spieksma <ref> [29] </ref> which is restricted to jobs with identical processing times. We already mentioned that system (3.1) is valid for T I and that its matrix has full row rank. <p> Crama and Spieksma <ref> [29] </ref> for the restriction to identical processing times). 3.3 More Valid Inequalities After providing an initial valid (integer) formulation of the considered problem, the next task is to find more inequalities valid for T I which strengthen the initial linear relaxation and therefore 23 can contribute to obtain a better lower <p> Van den Akker, van Hoesel and Savelsbergh [4] showed that these inequalities together with the inequalities (3.2) provide (in a certain sense) all facet defining inequalities of T I with integral coefficients and right-hand side 1. (Crama and Spieksma <ref> [29] </ref> derived the same result for their special case.) The approach of van den Akker, van Hoesel and Savelsbergh is to investigate a polytope that is related to the submissive or monotone completion of the polytope T I. <p> Van den Akker, van Hoesel and Savelsbergh [4] derive also necessary and sufficient characterizations of inequalities that define facets of esub (T I) and have right-hand side 2. 3.4 Computational Experiences Sousa and Wolsey [97] as well as Crama and Spieksma <ref> [29] </ref> report on first computational experiences with a branch&cut algorithm based on the inequalities they derived. Both authors studied randomly generated instances with different objective function types. Since they do not present any elegant separation procedure, we omit the details of their algorithms.
Reference: [30] <author> G. B. Dantzig and P. Wolfe, </author> <title> Decomposition principle for linear programs, </title> <booktitle> Operations Research 8 (1960), </booktitle> <pages> 101-111. </pages>
Reference-contexts: Because of the major drawback of the time-indexed approach, namely the large number of variables as well as the large number of initial constraints that lead immediately to large memory requirements and computation times, van den Akker [3] applied Dantzig-Wolfe decomposition <ref> [30] </ref> in order to solve the initial LP-relaxation by column generation.
Reference: [31] <author> S. Dauzere-Peres, </author> <title> Minimizing late jobs in the general one machine scheduling problem, </title> <type> Tech. report, </type> <institution> Laboratory for Manufacturing and Productivity, M.I.T., </institution> <address> Cambridge, Mass., </address> <year> 1994. </year>
Reference-contexts: For the problems they tried, they find that positional formulations are not dominated by the best time indexed formulation (see Section 3 above) in terms of linear programming lower bounds, and that they may require far fewer variables. As another example, Dauzere-Peres <ref> [31] </ref> 42 uses positional variables to represent the number of late jobs in a one-machine problem with release dates. Solving O (log n) linear programs yields a lower bound on the minimum number of late jobs, which is independent of a big-M coefficient used in the formulation.
Reference: [32] <author> M. Desrochers, J. K. Lenstra, M. W. P. Savelsbergh, and F. Soumis, </author> <title> Vehicle routing with time windows: Optimization and approximation, Vehicle Routing: Methods and Studies (B. </title> <editor> L. Golden and A. A. Assad, eds.), </editor> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1988, </year> <pages> pp. 65-84. 56 </pages>
Reference-contexts: Including these time constraints into the TSP model leads to the following well-known "big-M formulation" of the asymmetric traveling salesman problem with time windows (cf., e. g., <ref> [32] </ref>): k2N 0 nfjg z jk = 1 P j2N 0 nfkg z jk = 1 S j + p jk (1 z jk ) M jk S k S j r j j 2 N 0 (6.2) j; k 2 N; j 6= k (6.4) j 2 N (6.6) Here
Reference: [33] <author> J. Desrosiers, Y. Dumas, M. M. Solomon, and F. Soumis, </author> <title> Time constrained routing and scheduling, Networks (M. </title> <editor> E. Ball, T. L. Magnanti, C. Monma, and G. L. Nemhauser, eds.), </editor> <booktitle> Handbooks in Operations Research and Management Science, </booktitle> <volume> vol. </volume> ?, <publisher> North-Holland, </publisher> <year> 1994, </year> <note> to appear. </note>
Reference-contexts: The idea is to handle the obtained subproblems in the same way as the root problem. Thus, altogether this leads to a branch&price algorithm. See Barnhart et al. [21] for a general survey of branch&price, and Desrosiers et al. <ref> [33] </ref> for applications of branch&price in time constrained routing and scheduling. An important issue of a branch&price algorithm is the choice of the branching strategy. It has to be done such that the subproblems can indeed be solved by using the same kind of algorithm. <p> We refer the reader to the textbook of Nemhauser and Wolsey [73] for a general treatment of this important topic. In the case of the TSPTW, preprocessing can be performed by tightening the time windows, deriving enforced precedences, and elimination of variables (cf., e. g., <ref> [33] </ref>). For example, r k + p k &gt; d j for two different jobs j; k implies the precedence j ! k.
Reference: [34] <author> M. E. Dyer and L. A. Wolsey, </author> <title> Formulating the single machine sequencing problem with release dates as a mixed integer program, </title> <booktitle> Discrete Applied Mathematics 26 (1990), </booktitle> <pages> 255-270. </pages>
Reference-contexts: Hence, we obtain linear ordering variables ffi jk . These are one if j precedes k and zero, otherwise. Linear ordering variables have been used, among others, by Peters [74], Dyer and Wolsey <ref> [34] </ref>, Wolsey [101], and Nemhauser and Savelsbergh [72]. Positional date variables t and fl denoting the start time and completion time of the -th job in the schedule, respectively, have been used together with assignment variables u j by Lasserre and Queyranne [59]. <p> Proof. First, we rewrite the expression for C j using equation (3.1) (and a summation trick due to Dyer and Wolsey <ref> [34] </ref>): C j = t=1 = t=1 p (N) X x jt (1 + 2 + + (p j 1)) 1 = p j @ p j t=1 p (N) X x jt (1 + 2 + + (p j 1)) 1 1 = p j @ t=1 2 p j <p> This is also different to the case of deadlines. Peters [74] studied the deadline problem from a polyhedral point of view using both, linear ordering and starting time variables. Dyer and Wolsey <ref> [34] </ref>, Wolsey [101], and Nemhauser and Savelsbergh [72] dealt with the problem with release dates. <p> The lower bound on the sequencing problem with release dates that is obtained by use of the LP relaxation (4.17) - (4.19) together with these inequalities above is at least as good as the one obtained with (4.21). Additional Notes and References Dyer and Wolsey <ref> [34] </ref> compared the quality of different LP relaxations for the single machine problem with release dates with respect to the bounds they ensure for the weighted sum of starting times, or, equivalently, completion times.
Reference: [35] <author> C. van Eijl, </author> <title> Valid inequalities for the traveling salesman problem with time windows, </title> <type> Working paper, </type> <institution> Department of Mathematics and Computing Science, Eindhoven University of Technology, Eindhoven, </institution> <address> The Netherlands, </address> <year> 1994. </year>
Reference-contexts: Van Eijl <ref> [35] </ref> suggested to use another type of date variables besides the TSP variables in order to avoid the big-M. She extracted her model, that can be used for all three types of objectives mentioned above, from one of Maffioli and Sciomachen [68] with even more variables.
Reference: [36] <author> H. Emmons, </author> <title> Scheduling to a common due date on parallel uniform processors, </title> <booktitle> Naval Research Logistics 34 (1987), </booktitle> <pages> 803-810. </pages>
Reference-contexts: Thus, for example, the makespan on one machine is simply fl n . The term positional was coined by Emmons <ref> [36] </ref> to refer to position-dependent weights, and used by Hoogeven and van de Velde [56] for positional completion time variables. This term seems preferable to the more ambiguous terms generic [59] and generalized [53] used by earlier authors.
Reference: [37] <author> A. Federgruen and H. Groenevelt, </author> <title> The greedy procedure for resource allocation problems: Necessary and sufficient conditions for optimality, </title> <note> Operations Research 34 (1986), </note> <month> 909-918. </month> <title> [38] , Characterization and optimization of achievable performance in queueing systems, </title> <note> Operations Research 36 (1988), </note> <month> 733-741. </month> <title> [39] , M=G=c queueing systems with multiple customer classes: Characterization and control of achievable performance under nonpreemptive priority rules, </title> <booktitle> Management Science 34 (1988), </booktitle> <pages> 1121-1138. </pages>
Reference-contexts: Thus, the usefulness of the supermodularity framework is confirmed and established, also for parallel machine problems. Some extensions of the results related to supermodular polyhedra were also obtained for stochastic and dynamic scheduling problems (cf. <ref> [37, 39, 38, 92, 24, 23] </ref>). In many multiclass queueing systems, strong conservation laws are satisfied by certain performance measures. These laws imply that the feasible space of achievable performance is the base of a polyma-troid. Therefore, many types of functions of the performance vector can be efficiently optimized.
Reference: [40] <author> P. C. Fishburn, </author> <title> Induced binary probabilities and the linear ordering polytope: A status report, </title> <booktitle> Mathematical Social Sciences 23 (1992), </booktitle> <pages> 67-80. </pages>
Reference-contexts: This polytope has been studied since 1953, and it belongs to the best understood polyhedra associated with hard combinatorial optimization problems, cf. Fishburn <ref> [40] </ref> for an overview. <p> However, many classes of facet inducing inequalities are known (cf., <ref> [40] </ref>).
Reference: [41] <author> S. Fujishige, </author> <title> Submodular systems and related topics, Mathematical Programming Study 22 (1984), 113-131. [42] , Submodular Functions and Optimization, </title> <journal> Annals of Discrete Mathematics, </journal> <volume> vol. 47, </volume> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1991. </year>
Reference-contexts: For a more extensive discussion as well as for an overview on the development of this concept we refer the reader to the surveys of Lovasz [66] and Fujishige <ref> [41] </ref>, and to Fujishige's monograph [42]. The study of polyhedra associated with supermodular systems unifies and simplifies the study of several classes of scheduling polyhedra. The nature of these scheduling polyhedra becomes apparent in this supermodularity framework.
Reference: [43] <author> D. R. Fulkerson, </author> <title> Blocking polyhedra, Graph Theory and Its Applications (B. </title> <editor> Harris, ed.), </editor> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1970, </year> <pages> pp. </pages> <month> 93-112. </month> <title> [44] , Blocking and antiblocking pairs of polyhedra, </title> <booktitle> Mathematical Programming 1 (1971), </booktitle> <pages> 168-194. </pages>
Reference-contexts: He also provided a lifting result that allowed him to characterize all facets induced by inequalities which at most three nonzero coefficients. For example, he proved that the inequalities C j p 0j are facet defining by using the theory of blocking polyhedra (cf. <ref> [43, 44] </ref>). The reader should be able to prove this directly by a slight modification of the proof presented above for Proposition 2.1. Finally, Balas presented a sufficient condition whether a facet defining inequality for P n;s defines also a facet of the job shop polyhedron.
Reference: [45] <author> P. Gaiha and S. K. Gupta, </author> <title> Adjacent vertices on a permutohedron, </title> <journal> SIAM Journal of Applied Mathematics 32 (1977), </journal> <pages> 323-327. </pages>
Reference-contexts: The so-called permutahedron (or permutohedron or taxihedron), the convex hull of all permutations, has almost independently been studied by Schoute [87], Rado [85] (see also [103]), Guilbaud and Rosenstiehl [52], Benzecri [22], Kreweras [58], Balas [13], Gaiha and Gupta <ref> [45] </ref>, and Maes and Kappen [67]. The permutahedron of a poset has been the subject of investigation in von Arnim, Faigle and Schrader [6], Schulz [89], and von Arnim and Schrader [7].
Reference: [46] <author> M. R. Garey and D. S. Johnson, </author> <title> Two-processor scheduling with start-times and deadlines, </title> <journal> SIAM Journal on Computing 6 (1977), </journal> <pages> 416-426. 57 </pages>
Reference-contexts: Tsitsiklis 53 [98] showed that this remains true in case of the traveling repairman. Even worse, Savelsbergh [86] proved that already finding only a feasible solution is strongly N P-complete. However, this also follows from an earlier result of Garey and Johnson <ref> [46] </ref> who showed that finding a feasible solution to the nonpreemptive single machine scheduling problem with release dates and deadlines is strongly N P-complete, even if the processing times are independent of the sequence.
Reference: [47] <author> R. J. Giglio and H. M. Wagner, </author> <title> Approximate solutions to the three-machine scheduling problem, </title> <booktitle> Operations Research 12 (1964), </booktitle> <pages> 305-324. </pages>
Reference-contexts: See <ref> [47] </ref> for early experimental results with Wagner's formulation. We now compare Wagner's formulation to that using positional dates and assignment variables described above.
Reference: [48] <editor> B. L. Golden and A. A. Assad (eds.), </editor> <title> Vehicle Routing: Methods and Studies, </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1988. </year>
Reference-contexts: For more details we refer the reader to the collection of studies in vehicle routing edited by Golden and Assad <ref> [48] </ref>. For another single machine problem, involving due dates instead of deadlines that can also be modelled by use of the TSP the reader is referred to Picard and Queyranne [75] (see also [93]).
Reference: [49] <author> M. Grotschel, M. Junger, and G. Reinelt, </author> <title> Facets of the linear ordering polytope, </title> <booktitle> Mathematical Programming 33 (1985), </booktitle> <pages> 43-60. </pages>
Reference-contexts: k (4.8) ffi jk = 1 for j; k 2 N with j ! k (4.9) ffi jk = 0 for j; k 2 N with k ! j (4.10) The following lemma and its proof extend the analogic ones for the linear ordering polytope due to Grotschel et al. <ref> [49] </ref>. Lemma 4.2 Let D = (N; !) be a poset. Then the equations (4.6), (4.9), and (4.10) build a minimal linear system for P LO (D). Proof. Let dffi = d 0 be an arbitrary equation that is satisfied by all linear extension of D. <p> The lower bounds obtained by using this formulation may be further improved by implicitly adding known inequalities that define high-dimensional faces of the linear ordering polytope, e. g. Mobius-Ladder-inequalities <ref> [49] </ref> which can be separated in polynomial time (cf., [26, 70, 71]). 4.3 Release Dates The single machine problem remains N P-hard when we replace the precedence constraints by release times r j at which job j becomes available for processing.
Reference: [50] <author> M. Grotschel, L. Lovasz, and A. Schrijver, </author> <title> Geometric Algorithms and Combinatorial Optimization, </title> <booktitle> Algorithms and Combinatorics, </booktitle> <volume> vol. 2, </volume> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1988. </year>
Reference-contexts: Branching occurs only when no violated inequalities are found to cut off infeasible solutions. (This is possible since the separation problem is N P-complete if the optimization problem is, see Grotschel, Lovasz and Schrijver <ref> [50] </ref>.) Hence, two important theoretical issues are to determine good (partial) descriptions of the convex hull of incidence vectors in terms of linear equations and inequalities, and to solve the separation problem associated with the obtained classes of inequalities efficiently.
Reference: [51] <author> M. Grotschel and M. W. Padberg, </author> <title> Polyhedral theory, The Traveling Salesman Problem: </title>
Reference-contexts: The facial structure of the symmetric as well as the asymmetric traveling salesman polytope has been the object of considerable research. We are not going to repeat it here, but refer the reader to the survey of properties of both polyhedra due to Padberg and Grotschel <ref> [51] </ref>, and to Balas and Fischetti [19] and Queyranne and Wang [84] for the recent developments with regard to the asymmetric and the symmetric case, respectively. 6.1 Minimizing the Makespan Using the TSP The sequencing problem we are interested in is defined as follows.
References-found: 40

