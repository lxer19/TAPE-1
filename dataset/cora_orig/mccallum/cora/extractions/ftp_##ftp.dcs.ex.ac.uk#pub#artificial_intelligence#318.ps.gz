URL: ftp://ftp.dcs.ex.ac.uk/pub/artificial_intelligence/318.ps.gz
Refering-URL: http://www.dcs.ex.ac.uk/reports/reports.html
Root-URL: 
Title: Revisable knowledge discovery in databases  
Author: Ajit Narayanan 
Date: February 6, 1995  
Address: Exeter EX4 4PT UK  
Affiliation: Department of Computer Science University of Exeter  
Abstract: This paper introduces the idea of using nonmonotonic inheritance networks for the storage and maintenance of knowledge discovered in data (revisable knowledge discovery in databases | RKDD). While existing data mining strategies for knowledge discovery in databases (KDD) typically involve initial structuring through the use of identification trees and the subsequent extraction of rules from these trees for use in rule-based expert systems, such strategies have difficulty in coping with additional information which may conflict with that already used for the automatic generation of rules. In the worst case, the entire automatic sequence may have to be repeated. If nonmonotonic inheritance networks are used instead of rules for storing knowledge discovered in databases, additional conflicting information can be inserted directly into such structures, thereby by-passing the need for recompilation.
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> G. Piatetsky-Shapiro and W. J. Frawley, editors. </editor> <title> Knowledge Discovery in Databases. </title> <publisher> AAAI Press/MIT Press, </publisher> <year> 1991. </year>
Reference-contexts: Secondly, that structured representation is used to produce a knowledge structure for use in knowledge-based expert systems. And thirdly, the knowledge base is maintained and updated as new information enters the system. Techniques for implementing the first phase are well established <ref> [1, 2, 3, 4] </ref> and can consist of using identification trees (IDTs) with information-theoretic heuristics to provide an ordering of tests on attributes so that basic classification is achieved. Also, a variety of statistical techniques can be used to generate statistically significant relationships.
Reference: [2] <editor> U. M. Fayyad and R. Uthurusamy, editors. </editor> <booktitle> Knowledge Discovery in Databases (KDD-94). American Association for Artificial Intelligence (AAAI-94)., 1994. Workshop Notes. </booktitle>
Reference-contexts: Secondly, that structured representation is used to produce a knowledge structure for use in knowledge-based expert systems. And thirdly, the knowledge base is maintained and updated as new information enters the system. Techniques for implementing the first phase are well established <ref> [1, 2, 3, 4] </ref> and can consist of using identification trees (IDTs) with information-theoretic heuristics to provide an ordering of tests on attributes so that basic classification is achieved. Also, a variety of statistical techniques can be used to generate statistically significant relationships.
Reference: [3] <author> J. R. Quinlan. </author> <title> Induction of decision trees. </title> <journal> Machine Learning, </journal> <volume> 1(1) </volume> <pages> 81-106, </pages> <year> 1986. </year>
Reference-contexts: Secondly, that structured representation is used to produce a knowledge structure for use in knowledge-based expert systems. And thirdly, the knowledge base is maintained and updated as new information enters the system. Techniques for implementing the first phase are well established <ref> [1, 2, 3, 4] </ref> and can consist of using identification trees (IDTs) with information-theoretic heuristics to provide an ordering of tests on attributes so that basic classification is achieved. Also, a variety of statistical techniques can be used to generate statistically significant relationships.
Reference: [4] <author> P. H. Winston. </author> <booktitle> Artificial Intelligence. </booktitle> <publisher> Addison Wesley, </publisher> <address> third edition, </address> <year> 1992. </year> <note> Chapter 21. </note>
Reference-contexts: Secondly, that structured representation is used to produce a knowledge structure for use in knowledge-based expert systems. And thirdly, the knowledge base is maintained and updated as new information enters the system. Techniques for implementing the first phase are well established <ref> [1, 2, 3, 4] </ref> and can consist of using identification trees (IDTs) with information-theoretic heuristics to provide an ordering of tests on attributes so that basic classification is achieved. Also, a variety of statistical techniques can be used to generate statistically significant relationships.
Reference: [5] <author> J. Wirth and J. Catlett. </author> <title> Experiments on the cost and benefits of windowing in ID3. </title> <booktitle> In Proceedings of the Fifth International Conference on Machine Learning, </booktitle> <year> 1988. </year>
Reference-contexts: If the number of exceptions and conflicts grows sufficiently large, they can be appended to the original data and a new IDT with associated rule-base generated. `Windowing techniques' <ref> [5] </ref> involve adding exceptions to the original data and generating a new tree. ID4 prunes subtrees of the IDT which appear to be incorrect and adds whole new subtress as new instance appear [6].
Reference: [6] <author> J. C. Schlimmer and D. Fisher. </author> <title> A case study of incremental concept induction. </title> <booktitle> In Proceedings of the Fifth National Conference on Artificial Intelligence, </booktitle> <pages> pages 496-501, </pages> <year> 1986. </year>
Reference-contexts: ID4 prunes subtrees of the IDT which appear to be incorrect and adds whole new subtress as new instance appear <ref> [6] </ref>. ID5 rearranges test nodes as new information appears, no matter whether the information conflicts with existing information or not [7].
Reference: [7] <author> P. E. Utgoff. </author> <title> An incremental ID3. </title> <booktitle> In Proceedings of the Fifth National Conference on Machine Learning, </booktitle> <year> 1988. </year>
Reference-contexts: ID4 prunes subtrees of the IDT which appear to be incorrect and adds whole new subtress as new instance appear [6]. ID5 rearranges test nodes as new information appears, no matter whether the information conflicts with existing information or not <ref> [7] </ref>.
Reference: [8] <author> R. Reiter. </author> <title> A logic for default reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 13 </volume> <pages> 81-132, </pages> <year> 1980. </year>
Reference-contexts: This is the approach of default reasoning and, more specifically, default logic (DL | <ref> [8, 9, 10] </ref>). The second way is to say that a nonmonotonic knowledge representation technique should explicitly include nonmonotonic terms as part of its formalism. This is the approach of modal nonmonotonic reasoning, e.g. [11, 12, 13].
Reference: [9] <author> D. W. Etherington and R. Reiter. </author> <title> On inheritance hierachies with exceptions. </title> <booktitle> In Proceedings of the American Association for Artificial Intelligence (AAAI83), </booktitle> <pages> pages 104-108, </pages> <year> 1983. </year>
Reference-contexts: This is the approach of default reasoning and, more specifically, default logic (DL | <ref> [8, 9, 10] </ref>). The second way is to say that a nonmonotonic knowledge representation technique should explicitly include nonmonotonic terms as part of its formalism. This is the approach of modal nonmonotonic reasoning, e.g. [11, 12, 13].
Reference: [10] <author> D. W. Etherington. </author> <title> Formalizing nonmonotonic reasoning systems. </title> <journal> Artificial Intelligence, </journal> <volume> 31 </volume> <pages> 41-85, </pages> <year> 1987. </year>
Reference-contexts: This is the approach of default reasoning and, more specifically, default logic (DL | <ref> [8, 9, 10] </ref>). The second way is to say that a nonmonotonic knowledge representation technique should explicitly include nonmonotonic terms as part of its formalism. This is the approach of modal nonmonotonic reasoning, e.g. [11, 12, 13].
Reference: [11] <author> D. McDermott and J. Doyle. </author> <title> Nonmonotonic logic [i]. </title> <journal> Artificial Intelligence, </journal> <volume> 13 </volume> <pages> 41-72, </pages> <year> 1980. </year>
Reference-contexts: This is the approach of default reasoning and, more specifically, default logic (DL | [8, 9, 10]). The second way is to say that a nonmonotonic knowledge representation technique should explicitly include nonmonotonic terms as part of its formalism. This is the approach of modal nonmonotonic reasoning, e.g. <ref> [11, 12, 13] </ref>. The third and perhaps most conceptually and technically complex way is to say that the set of nonmonotonically derivable formulae from a set of premises is a set of monotonically derivable premises from a certain superset of the premises.
Reference: [12] <author> R. C. Moore. </author> <title> Semantical considerations on nonmonotonic logic. </title> <journal> Artificial Intelligence, </journal> <volume> 25 </volume> <pages> 75-94, </pages> <year> 1985. </year>
Reference-contexts: This is the approach of default reasoning and, more specifically, default logic (DL | [8, 9, 10]). The second way is to say that a nonmonotonic knowledge representation technique should explicitly include nonmonotonic terms as part of its formalism. This is the approach of modal nonmonotonic reasoning, e.g. <ref> [11, 12, 13] </ref>. The third and perhaps most conceptually and technically complex way is to say that the set of nonmonotonically derivable formulae from a set of premises is a set of monotonically derivable premises from a certain superset of the premises.
Reference: [13] <author> K. Konolige. </author> <title> Hierarchic autoepistemic theories for nonmonotonic reasoning: preliminary report. </title> <editor> In M. Reinfrank, J. de Kleer, M. L. Ginsbery, and E. Sandewall, editors, </editor> <booktitle> Proceedings of the 2nd International Workshop on Nonmonotonic Reasoning, </booktitle> <pages> pages 42-59, </pages> <year> 1988. </year>
Reference-contexts: This is the approach of default reasoning and, more specifically, default logic (DL | [8, 9, 10]). The second way is to say that a nonmonotonic knowledge representation technique should explicitly include nonmonotonic terms as part of its formalism. This is the approach of modal nonmonotonic reasoning, e.g. <ref> [11, 12, 13] </ref>. The third and perhaps most conceptually and technically complex way is to say that the set of nonmonotonically derivable formulae from a set of premises is a set of monotonically derivable premises from a certain superset of the premises.
Reference: [14] <author> J. McCarthy. </author> <title> Circumscription | a form of nonmonotonic reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 13 </volume> <pages> 89-116, </pages> <year> 1980. </year>
Reference-contexts: The third and perhaps most conceptually and technically complex way is to say that the set of nonmonotonically derivable formulae from a set of premises is a set of monotonically derivable premises from a certain superset of the premises. This is the approach of circumscription <ref> [14, 15, 16, 17] </ref>. 3 There have also been attempts at reconciling these different approaches, e.g. [20]. Currently, default reasoning looks the most promising of the rule-based approaches for handling exceptions in knowledge bases.
Reference: [15] <author> J. McCarthy. </author> <title> Applications of circumscription to formalizing commonsense reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 28 </volume> <pages> 89-116, </pages> <year> 1986. </year> <month> 20 </month>
Reference-contexts: The third and perhaps most conceptually and technically complex way is to say that the set of nonmonotonically derivable formulae from a set of premises is a set of monotonically derivable premises from a certain superset of the premises. This is the approach of circumscription <ref> [14, 15, 16, 17] </ref>. 3 There have also been attempts at reconciling these different approaches, e.g. [20]. Currently, default reasoning looks the most promising of the rule-based approaches for handling exceptions in knowledge bases.
Reference: [16] <author> V. Lifschitz. </author> <title> Closed world databases and circumscription. </title> <journal> Artificial Intelligence, </journal> <volume> 27:229--235, </volume> <year> 1985. </year>
Reference-contexts: The third and perhaps most conceptually and technically complex way is to say that the set of nonmonotonically derivable formulae from a set of premises is a set of monotonically derivable premises from a certain superset of the premises. This is the approach of circumscription <ref> [14, 15, 16, 17] </ref>. 3 There have also been attempts at reconciling these different approaches, e.g. [20]. Currently, default reasoning looks the most promising of the rule-based approaches for handling exceptions in knowledge bases.
Reference: [17] <author> V. Lifschitz. </author> <title> Circumscriptive theories: A logic based framework for knowledge representation. </title> <editor> In R. H. Thomason, editor, </editor> <booktitle> Philosophical logic and artificial intelligence. </booktitle> <publisher> Kluwer Academic Press, </publisher> <year> 1989. </year>
Reference-contexts: The third and perhaps most conceptually and technically complex way is to say that the set of nonmonotonically derivable formulae from a set of premises is a set of monotonically derivable premises from a certain superset of the premises. This is the approach of circumscription <ref> [14, 15, 16, 17] </ref>. 3 There have also been attempts at reconciling these different approaches, e.g. [20]. Currently, default reasoning looks the most promising of the rule-based approaches for handling exceptions in knowledge bases.
Reference: [18] <author> M. Boden and A. Narayanan. </author> <title> A representational architecture for nonmonotonic inheritance structures. </title> <editor> In S. Gielen and B. Kappen, editors, </editor> <booktitle> Proceedings of the International Conference on Artificial Neural Networks (ICANN93), </booktitle> <pages> pages 343-349. </pages> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: See <ref> [18, 19] </ref> for connectionist models of exception handling. 4 For informal exposition purposes, simple, one-place predicate variables ff; fi and fl are used here. 4 however, where explicit reference has to be made to `unless or except for conditions, as in `Elephants are grey unless they are Royal elephants'.
Reference: [19] <author> M. Boden and A. Narayanan. </author> <title> A connectionist model of nonmonotonic reasoning. </title> <booktitle> In Connectionism in a Broad Perspective, </booktitle> <pages> pages 65-78. </pages> <publisher> Ellis Horwood, </publisher> <year> 1994. </year>
Reference-contexts: See <ref> [18, 19] </ref> for connectionist models of exception handling. 4 For informal exposition purposes, simple, one-place predicate variables ff; fi and fl are used here. 4 however, where explicit reference has to be made to `unless or except for conditions, as in `Elephants are grey unless they are Royal elephants'.
Reference: [20] <author> D. W. Etherington. </author> <title> Relating default logic and circumscription. </title> <booktitle> In Proceedings of the International Joint Confence on Artificial Intelligence (IJCAI87), </booktitle> <year> 1987. </year>
Reference-contexts: This is the approach of circumscription [14, 15, 16, 17]. 3 There have also been attempts at reconciling these different approaches, e.g. <ref> [20] </ref>. Currently, default reasoning looks the most promising of the rule-based approaches for handling exceptions in knowledge bases.
Reference: [21] <author> D. S. Touretzky. </author> <title> Implicit ordering of defaults in inheritance systems. </title> <booktitle> In Proceedings of the American Association for Artificial Intelligence, </booktitle> <pages> pages 322-325, </pages> <year> 1984. </year>
Reference-contexts: Moreover, it blocks it for precisely the reason that it should be blocked, namely, ostriches (a subclass of birds) don't fly, although birds do. 5 In spite of the neatness of default logic, there are some major problems in its use for han-dling exceptions <ref> [21] </ref>. Two problems are especially relevant to the use of the DL approach in automated knowledge extraction, representation and maintenance. First, there is the problem that as knowledge is added to the knowledge base existing default rules must continually be replaced by new ones which take the exceptions into account. <p> A variety of preemption algorithms have been provided for selecting one path over another when the two paths support contradictory conclusions <ref> [21, 24, 25, 26] </ref>, and the algorithmic complexity of these algorithms has been evaluated [27]. Preemption, generally 9 speaking, identifies an `intermediate' on a path p 1 which also belongs to another path p 2 which points to nodes further up the path p 1 .
Reference: [22] <author> B. R. Gaines. </author> <title> Exception DAGS as knowledge structures. </title> <editor> In U. M. Fayyad and R. Uthurusamy, editors, </editor> <booktitle> Proceedings of the AAAI Workshop on Knowledge Discovery in Databases (KDD-94), </booktitle> <pages> pages 13-24, </pages> <year> 1994. </year> <booktitle> AAAI-94 Workshop Program. </booktitle>
Reference-contexts: Secondly, and alternatively, whole new rules may need to be inserted for new types of knowledge. Hence, the total set of exception rules increases as the knowledge base increases. 2.2 Exception directed acyclic graphs Another approach to maintenance is through the use of exception directed acyclic graphs (EDAGs) <ref> [22] </ref>. EDAGs can be interpreted as a set of rules with exceptions. The idea is that the root of the exception structure contains a default conclusion unless one of the children of the root contains a `concept' which leads to a conclusion which overrides the default conclusion.
Reference: [23] <author> B. R. Gaines. </author> <title> Refining induction into knowledge. </title> <booktitle> In Proceeding of the AAAI Workshop on Knowledge Discovery in Databases (KDD-91), </booktitle> <pages> pages 1-10, </pages> <year> 1991. </year> <booktitle> AAAI-91 Workshop Program. </booktitle>
Reference-contexts: Then a default conclusion would hair=blonde? sunburned=yes hair=red? hair=brown? sunburned=no lotion used=yes? sunburned=no lotion used=no? sunburned=yes hair=blonde? from the sunburned data. be inserted in the root, say, `not-sunburned', leading to a more concise EDAG (Figure 3). Such structures can be factored further <ref> [23] </ref>. 6 sunburned=no sunburned=yes hair=red? sunburned=yes hair=blonde? lotion used=no that someone is not sunburned unless either that person has blonde hair and has not used suntan lotion, in which case that person is sunburned, or that person has red hair, in which case that person is sunburned.
Reference: [24] <author> E. Sandewall. </author> <title> Non-monotonic inference rules for multiple inheritance with exceptions. </title> <booktitle> In Proceedings of the Institute of Electrical and Electronics Engineers (IEEE) Volume 74, </booktitle> <pages> pages 1345-1353, </pages> <year> 1986. </year>
Reference-contexts: A variety of preemption algorithms have been provided for selecting one path over another when the two paths support contradictory conclusions <ref> [21, 24, 25, 26] </ref>, and the algorithmic complexity of these algorithms has been evaluated [27]. Preemption, generally 9 speaking, identifies an `intermediate' on a path p 1 which also belongs to another path p 2 which points to nodes further up the path p 1 . <p> These two principles | that more specific information should override more general information, and that explicit information should override implicit | belong to two different path-based reasoning styles: on-path preemption [25] and off-path preemption <ref> [24] </ref>, resulting in the `clash of intuitions' debate [29]. 9 That is, a set of assertions/rules which are not to be cycled through, as would be the case in production systems, for example.
Reference: [25] <author> D. S. Touretzky, J. F. Horty, and R. H. Thomason. </author> <title> A clash of intuitions: The current state of nonmonotonic multiple inheritance systems. </title> <booktitle> In Proceedings of the Tenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 476-482, </pages> <year> 1987. </year>
Reference-contexts: A variety of preemption algorithms have been provided for selecting one path over another when the two paths support contradictory conclusions <ref> [21, 24, 25, 26] </ref>, and the algorithmic complexity of these algorithms has been evaluated [27]. Preemption, generally 9 speaking, identifies an `intermediate' on a path p 1 which also belongs to another path p 2 which points to nodes further up the path p 1 . <p> These two principles | that more specific information should override more general information, and that explicit information should override implicit | belong to two different path-based reasoning styles: on-path preemption <ref> [25] </ref> and off-path preemption [24], resulting in the `clash of intuitions' debate [29]. 9 That is, a set of assertions/rules which are not to be cycled through, as would be the case in production systems, for example.
Reference: [26] <author> J. F. Horty, R. H. Thomason, and D. S. Touretzky. </author> <title> A skeptical theory of inheritance in nonmonotonic semantic networks. </title> <journal> Artificial Intelligence, </journal> <volume> 42 </volume> <pages> 311-348, </pages> <year> 1990. </year>
Reference-contexts: A variety of preemption algorithms have been provided for selecting one path over another when the two paths support contradictory conclusions <ref> [21, 24, 25, 26] </ref>, and the algorithmic complexity of these algorithms has been evaluated [27]. Preemption, generally 9 speaking, identifies an `intermediate' on a path p 1 which also belongs to another path p 2 which points to nodes further up the path p 1 . <p> Path p 1 and the conclusion it supports can be pruned once the intermediate Royal-elephant has been identified. That is, p 2 wins because Royal-elephant contains more specific information about Clyde (non-greyness) via Royal-elephant than p 1 via Elephant (greyness). 7 These intuitive considerations are formalised in path-based algorithms <ref> [26] </ref>. More generally, the difference between path-based reasoning and logic-based reasoning is that in the latter, if an inconsistency arises, generally `anything goes', whereas in the former conclusions can only be formed if there are paths in the network supporting them, even if conflicts exist in the structure. <p> The path-based preemption algorithms are provably correct <ref> [30, 26] </ref> and have the advantage of being able to cope with conflicting conclusions.
Reference: [27] <author> B. Selman and H. Levesque. </author> <title> The tractability of path-based inheritance. </title> <booktitle> In Proceedings of the International Joint Confence on Artificial Intelligence (IJCAI89), </booktitle> <pages> pages 1140-1145, </pages> <year> 1989. </year>
Reference-contexts: A variety of preemption algorithms have been provided for selecting one path over another when the two paths support contradictory conclusions [21, 24, 25, 26], and the algorithmic complexity of these algorithms has been evaluated <ref> [27] </ref>. Preemption, generally 9 speaking, identifies an `intermediate' on a path p 1 which also belongs to another path p 2 which points to nodes further up the path p 1 .
Reference: [28] <author> A. Narayanan and B. Olsson. </author> <title> Converting identification trees into nonmonotonic inheritance structures. </title> <type> Technical Report 286, </type> <institution> University of Exeter Department of Computer Science, </institution> <year> 1994. </year> <note> Available through anonymous ftp (atlas.ex.ac.uk). </note>
Reference-contexts: All classes (N1, N2, N3 and X) are assumed to have positive modality. Algorithms have been written and implemented (in Pascal) for converting binary identification trees with binary classification (e.g. sunburned/non-sunburned) into nonmonotonic inheritance networks <ref> [28] </ref>.
Reference: [29] <author> R. Al-Asady and A. Narayanan. </author> <title> More notes on `A clash of intuitions'. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI-93), </booktitle> <pages> pages 682-689, </pages> <year> 1993. </year>
Reference-contexts: These two principles | that more specific information should override more general information, and that explicit information should override implicit | belong to two different path-based reasoning styles: on-path preemption [25] and off-path preemption [24], resulting in the `clash of intuitions' debate <ref> [29] </ref>. 9 That is, a set of assertions/rules which are not to be cycled through, as would be the case in production systems, for example.
Reference: [30] <author> D. Touretzky. </author> <title> The Mathematics of Inheritance Systems. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1986. </year> <month> 21 </month>
Reference-contexts: The path-based preemption algorithms are provably correct <ref> [30, 26] </ref> and have the advantage of being able to cope with conflicting conclusions.
References-found: 30

