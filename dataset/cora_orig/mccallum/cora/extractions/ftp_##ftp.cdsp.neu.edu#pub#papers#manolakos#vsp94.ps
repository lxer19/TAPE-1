URL: ftp://ftp.cdsp.neu.edu/pub/papers/manolakos/vsp94.ps
Refering-URL: http://www.mathsoft.com/wavelets.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Disributed Memory and Control VLSI Architectures for the 1-D Discrete Wavelet Transform 1  
Author: Jose Fridman Elias S. Manolakos 
Address: Boston, MA  
Affiliation: Communications and Digital Signal Processing (CDSP) Center Electrical and Computer Engineering Dept. Northeastern University  
Note: IEEE VLSI Signal Processing VII, to appear, 10/1994  
Abstract: We address the synthesis of fast, efficient and regular computational structures for the Discrete Wavelet Transform (DWT) algorithm, using linear space-time mapping and constraint driven localization techniques. Index space transformations are used to regularize the DWT algorithm and to avoid data collisions due to multiprojection. A summary of the data dependence and localization analysis is presented, as well as an array of L Processing Elements (PEs) for computing any J-octave DWT decomposition with latency of M, where L is the wavelet filter length and M is the input sequence length. The latency is independent of the highest computable octave J, for any value of J, and the efficiency is nearly optimal and independent of M. The proposed design is the fastest parallel implementation of the 1-D DWT with L PEs that we know of. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S.Y. Kung. </author> <title> VLSI Array Processors. </title> <publisher> Prentice Hall, </publisher> <year> 1989. </year>
Reference-contexts: This paper addresses the synthesis of fast, efficient and regular computational structures for the DWT consisting of simple to implement Processing Elements (PEs). We use linear space-time mapping <ref> [1] </ref> and constraint driven localization [2] techniques, and we operate on the algorithm at the Dependence Graph (DG) level with a non-linear index space transformation in order to 1 This work is partially supported by the Advanced Projects Research Agency under contract MDA-972-31-0023 and F49620-93-1-0490 monitored by the Air Force Office <p> on the algorithm at the Dependence Graph (DG) level with a non-linear index space transformation in order to 1 This work is partially supported by the Advanced Projects Research Agency under contract MDA-972-31-0023 and F49620-93-1-0490 monitored by the Air Force Office of Scientific Research. avoid data collisions arising from multiprojection <ref> [1] </ref>. The architecture pre-sented here is VLSI-amenable, but it may also be implemented on a network of coarser-grain MIMD processors using message passing. VLSI architectures for the DWT have been proposed elsewhere [3, 4, 5, 6]. <p> A 2-dim DG may then be linearly mapped onto a 1-dim PE array with a square 2 fi 2 matrix T , and satisfying the Space-Time Compatibility Constraints (STCCs) <ref> [1] </ref> reduces to the (trivial) problem of finding a non-singular space time mapping matrix. Fig. 2 (a) shows a schematic representation of m with J = 4.
Reference: [2] <author> H. M. Stellakis and E. S. Manolakos. </author> <title> "Adaptive Computation of Higher Order Moments and its VLSI Implementation". </title> <booktitle> Intl. </booktitle> <editor> J. </editor> <title> on Adaptive Control and Signal Processing. (special issue on Adaptive Algorithms for Higher Order Statistics), </title> <note> to appear 1/1995. </note>
Reference-contexts: This paper addresses the synthesis of fast, efficient and regular computational structures for the DWT consisting of simple to implement Processing Elements (PEs). We use linear space-time mapping [1] and constraint driven localization <ref> [2] </ref> techniques, and we operate on the algorithm at the Dependence Graph (DG) level with a non-linear index space transformation in order to 1 This work is partially supported by the Advanced Projects Research Agency under contract MDA-972-31-0023 and F49620-93-1-0490 monitored by the Air Force Office of Scientific Research. avoid data
Reference: [3] <author> G. Knowles. </author> <title> "VLSI Architecture for the Discrete Wavelet Transform". </title> <journal> Electronics Letters, </journal> <volume> 26(15) </volume> <pages> 1184-1185, </pages> <month> July </month> <year> 1990. </year>
Reference-contexts: The architecture pre-sented here is VLSI-amenable, but it may also be implemented on a network of coarser-grain MIMD processors using message passing. VLSI architectures for the DWT have been proposed elsewhere <ref> [3, 4, 5, 6] </ref>. Those in [3, 5, 6] are neither systolic nor regular, therefore difficult to scale and extend to DWT transforms for 2-dim signals. Those in [4] are based on the principle of re-utilizing a pair of convolvers controlled by a global routing network. <p> The architecture pre-sented here is VLSI-amenable, but it may also be implemented on a network of coarser-grain MIMD processors using message passing. VLSI architectures for the DWT have been proposed elsewhere [3, 4, 5, 6]. Those in <ref> [3, 5, 6] </ref> are neither systolic nor regular, therefore difficult to scale and extend to DWT transforms for 2-dim signals. Those in [4] are based on the principle of re-utilizing a pair of convolvers controlled by a global routing network.
Reference: [4] <author> Mohan Vishwanath, Robert Owens, and Mary Jane Irwin. </author> <title> "Discrete Wavelet Transforms in VLSI". </title> <booktitle> In Proc. Application Specific Array Processors, </booktitle> <pages> pages 218-229, </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1992. </year>
Reference-contexts: The architecture pre-sented here is VLSI-amenable, but it may also be implemented on a network of coarser-grain MIMD processors using message passing. VLSI architectures for the DWT have been proposed elsewhere <ref> [3, 4, 5, 6] </ref>. Those in [3, 5, 6] are neither systolic nor regular, therefore difficult to scale and extend to DWT transforms for 2-dim signals. Those in [4] are based on the principle of re-utilizing a pair of convolvers controlled by a global routing network. <p> VLSI architectures for the DWT have been proposed elsewhere [3, 4, 5, 6]. Those in [3, 5, 6] are neither systolic nor regular, therefore difficult to scale and extend to DWT transforms for 2-dim signals. Those in <ref> [4] </ref> are based on the principle of re-utilizing a pair of convolvers controlled by a global routing network. It is possible to improve on the modularity and performance of these implementations by following a top-down data dependence analysis and mapping procedure and restating the DWT algorithm from first principles.
Reference: [5] <author> K. K. Parhi and T. Nishitani. </author> <title> "VLSI Architectures for Discrete Wavelet Transforms". </title> <journal> IEEE Transactions on Very Large Scale Integration (VLSI) Systems, </journal> <volume> 1(2) </volume> <pages> 191-202, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: The architecture pre-sented here is VLSI-amenable, but it may also be implemented on a network of coarser-grain MIMD processors using message passing. VLSI architectures for the DWT have been proposed elsewhere <ref> [3, 4, 5, 6] </ref>. Those in [3, 5, 6] are neither systolic nor regular, therefore difficult to scale and extend to DWT transforms for 2-dim signals. Those in [4] are based on the principle of re-utilizing a pair of convolvers controlled by a global routing network. <p> The architecture pre-sented here is VLSI-amenable, but it may also be implemented on a network of coarser-grain MIMD processors using message passing. VLSI architectures for the DWT have been proposed elsewhere [3, 4, 5, 6]. Those in <ref> [3, 5, 6] </ref> are neither systolic nor regular, therefore difficult to scale and extend to DWT transforms for 2-dim signals. Those in [4] are based on the principle of re-utilizing a pair of convolvers controlled by a global routing network.
Reference: [6] <institution> Aware Wavelet Transform Processor Preliminary. AWARE, Inc., </institution> <address> Cambridge, MA, </address> <year> 1992. </year>
Reference-contexts: The architecture pre-sented here is VLSI-amenable, but it may also be implemented on a network of coarser-grain MIMD processors using message passing. VLSI architectures for the DWT have been proposed elsewhere <ref> [3, 4, 5, 6] </ref>. Those in [3, 5, 6] are neither systolic nor regular, therefore difficult to scale and extend to DWT transforms for 2-dim signals. Those in [4] are based on the principle of re-utilizing a pair of convolvers controlled by a global routing network. <p> The architecture pre-sented here is VLSI-amenable, but it may also be implemented on a network of coarser-grain MIMD processors using message passing. VLSI architectures for the DWT have been proposed elsewhere [3, 4, 5, 6]. Those in <ref> [3, 5, 6] </ref> are neither systolic nor regular, therefore difficult to scale and extend to DWT transforms for 2-dim signals. Those in [4] are based on the principle of re-utilizing a pair of convolvers controlled by a global routing network.
Reference: [7] <author> J. Fridman and E. Manolakos. </author> <title> "On Linear Space-Time Mapping for the 1-D Discrete Wavelet Transform: Scalable Linear Array Synthesis". </title> <booktitle> SPIE Conf. on Mathematical Imaging: Wavelet Applications in Signal and Image Processing, </booktitle> <address> San Diego, </address> <month> July, </month> <year> 1994. </year>
Reference-contexts: Due to lack of space, we omit the details of the data dependence and localization analysis, and concentrate on the space-time mapping. In <ref> [7, 8] </ref> we have shown that the DWT algorithm, in its original nested-loop formulation, may not be described by a set of Uniform or Affine Recurrence Equations (UREs, AREs) [9, 10], thus it may not be mapped directly onto an efficient systolic array by conventional space-time techniques. <p> The sequences S j (n); W j (n) correspond to the sequences shown in Eqn. (1) and (2), the input being X (n) = S 0 (n): DATA DEPENDENCE ANALYSIS We now present a brief summary of the localization and data dependence analysis carried out in <ref> [7, 8] </ref>. Localized DWT Algorithm The set of data dependencies D A of algorithm A may be expressed as a matrix D A , whose columns are the data dependence vectors given in Table 2.
Reference: [8] <author> J. Fridman and E. S. Manolakos. </author> <title> "Parallel Processing for the 1-D Discrete Wavelet Transform. Part I: Algorithm Analysis and Localization". </title> <journal> IEEE Transactions on Signal Processing. </journal> <note> Submitted, </note> <year> 1994. </year>
Reference-contexts: Due to lack of space, we omit the details of the data dependence and localization analysis, and concentrate on the space-time mapping. In <ref> [7, 8] </ref> we have shown that the DWT algorithm, in its original nested-loop formulation, may not be described by a set of Uniform or Affine Recurrence Equations (UREs, AREs) [9, 10], thus it may not be mapped directly onto an efficient systolic array by conventional space-time techniques. <p> However there exists a non-linear index space transformation that may be used to regularize the dependence structure of the algorithm in order to linearly schedule and map it onto a linear and regular array with constant-length communication links. Also in <ref> [8] </ref> we proved that linearly scheduled array implementations of the 3-dim index space DWT algorithm derived by multiprojection suffer from large latency (execution time) and low efficiency, when used in decompositions with more than 4 octaves. <p> The sequences S j (n); W j (n) correspond to the sequences shown in Eqn. (1) and (2), the input being X (n) = S 0 (n): DATA DEPENDENCE ANALYSIS We now present a brief summary of the localization and data dependence analysis carried out in <ref> [7, 8] </ref>. Localized DWT Algorithm The set of data dependencies D A of algorithm A may be expressed as a matrix D A , whose columns are the data dependence vectors given in Table 2. <p> Performance Limitations In <ref> [8] </ref> it is shown that there is a limitation on the lower and upper bounds of the latency and efficiency, respectively, of linearly scheduled array imple mentations of the DWT algorithm in either form A or A 0 . These bounds are due mainly to data collisions arising from multiprojection.
Reference: [9] <author> D.I. Moldovan. "ADVIS: </author> <title> A Software Package for the Design of Systolic Arrays". </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> CAD-6:33-40, </volume> <month> January </month> <year> 1987. </year>
Reference-contexts: In [7, 8] we have shown that the DWT algorithm, in its original nested-loop formulation, may not be described by a set of Uniform or Affine Recurrence Equations (UREs, AREs) <ref> [9, 10] </ref>, thus it may not be mapped directly onto an efficient systolic array by conventional space-time techniques.
Reference: [10] <author> P. Quinton and V. Van Dongen. </author> <title> "The Mapping of Linear Recurrence Equations on Regular Arrays". </title> <journal> Journal of VLSI Signal Processing, </journal> <volume> 1(2) </volume> <pages> 95-113, </pages> <month> October </month> <year> 1989. </year>
Reference-contexts: In [7, 8] we have shown that the DWT algorithm, in its original nested-loop formulation, may not be described by a set of Uniform or Affine Recurrence Equations (UREs, AREs) <ref> [9, 10] </ref>, thus it may not be mapped directly onto an efficient systolic array by conventional space-time techniques.
Reference: [11] <author> J. Fridman and E. S. Manolakos. </author> <title> "Parallel Processing for the 1-D Discrete Wavelet Transform. Part II: Scalable Architectures Synthesis". </title> <journal> IEEE Transactions on Signal Processing. </journal> <note> Submitted, </note> <year> 1994. </year>
Reference-contexts: A thorough register transfer-level description of the PE's internal architecture may be found in <ref> [11] </ref>. Demultiplexer and multiplexer x demux and x mux are the instruction decoding circuits which initiate an action on the data stored in x latch j given a coded control signal.
References-found: 11

