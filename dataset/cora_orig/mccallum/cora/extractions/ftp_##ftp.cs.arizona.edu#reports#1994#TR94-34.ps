URL: ftp://ftp.cs.arizona.edu/reports/1994/TR94-34.ps
Refering-URL: http://www.cs.arizona.edu/research/reports.html
Root-URL: http://www.cs.arizona.edu
Email: udi@cs.arizona.edu  
Title: A Simple Scheme to Make Passwords Based on One-Way Functions Much Harder to Crack  
Author: Udi Manber 
Date: November 1994  
Address: Tucson, AZ 85721  
Affiliation: Department of Computer Science University of Arizona  
Abstract: We present a simple scheme that makes guessing passwords based on one-way functions 100 to 1000 times harder. The scheme is easy to program and easy to incrementally add to existing schemes. In particular, there is no need to switch to it all at the same time. Old passwords will still work and have the same security as before (one will not be able to distinguish them from new passwords); newly-entered passwords will become much more secure. The new scheme is independent of the one-way function used and does not require changing any part of the encryption mechanism. 
Abstract-found: 1
Intro-found: 1
Reference: [Cu92] <author> Curry D. A., </author> <title> Unix System Security, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass, </address> <year> 1992. </year>
Reference-contexts: The same principles would apply to any such system. 3 2. Password Security in UNIX We give a very brief outline of the password mechanism in UNIX. More details can be found in many places (e.g., [MT79], [Kl90], [GS91], <ref> [Cu92] </ref>). A UNIX password is actually not encrypted, but used as the encryption key to the crypt function. Crypt is using 25 rounds of modified DES 2 to encrypt a string of 0's with the password as a key.
Reference: [GS91] <author> Garfinkel S., and G. Spafford, </author> <title> Practical UNIX Security, </title> <publisher> O'Reilly & Associates, Inc., </publisher> <address> Sabastopol, CA, </address> <year> 1991. </year>
Reference-contexts: The same principles would apply to any such system. 3 2. Password Security in UNIX We give a very brief outline of the password mechanism in UNIX. More details can be found in many places (e.g., [MT79], [Kl90], <ref> [GS91] </ref>, [Cu92]). A UNIX password is actually not encrypted, but used as the encryption key to the crypt function. Crypt is using 25 rounds of modified DES 2 to encrypt a string of 0's with the password as a key.
Reference: [FK89] <author> Feldmeier D. C., and P. R. Karn, </author> <title> ``UNIX password security ten years later," </title> <booktitle> Proceedings of the UNIX Security Workshop (August 1989). </booktitle>
Reference-contexts: So instead, a scheme based on the DES standard was used. As pointed out by Feldmeier and Karn <ref> [FK89] </ref>, current fast implementations of DES and current fast machines allow encryption to be even faster today than the one rejected 15 years ago. In this short paper, we suggest a simple scheme that should tilt the playing field back to the ``good guys'' favor.
Reference: [Ha91] <institution> Icons of the computer age, </institution> <address> Harper's Magazine, </address> <month> November </month> <year> 1991, </year> <note> p. 26. </note>
Reference-contexts: This state of affairs has generated a race to collect bigger and bigger dictionaries, and to update them all the time with names in the news, phrases, new categories, etc. ([Sp92]). Accounts of this race has even reached the popular press <ref> [Ha91] </ref>. It's not clear who is winning this race, but it is clear that it is a tough one. System administrators who are not up-to-date lose to hackers who are.
Reference: [JO89] <author> Jobush D. L., and A. E. Oldehoeft, </author> <title> ``A Survey of Password Mechanisms: Weaknesses and Potential Improvements. </title> <booktitle> Part 1,'' Computers & Security, </booktitle> <month> 8 (July </month> <year> 1989), </year> <pages> pp. 587-604. </pages>
Reference-contexts: Many if not most attacks on UNIX involved grabbing the /etc/passwd file at some point (Cliff Stoll's account [St89] is particularly enjoyable). Many studies have shown that users tend to select easy-to-guess passwords <ref> [JO89] </ref>; some found as many as 85% of the passwords on a system to be guessable in reasonable time. The most common remedy up to date has been for system administrators to check passwords either when they are originally entered and/or on a regular basis using large dictionaries.
Reference: [Kl90] <author> Klein, D. V., </author> <title> ``Foiling the Cracker: A survey of, and improvement to, password security,'' UNIX Security Workshop II, </title> <booktitle> the Usenix Association (August 1990), </booktitle> <pages> pp. 5-14. </pages>
Reference-contexts: The same principles would apply to any such system. 3 2. Password Security in UNIX We give a very brief outline of the password mechanism in UNIX. More details can be found in many places (e.g., [MT79], <ref> [Kl90] </ref>, [GS91], [Cu92]). A UNIX password is actually not encrypted, but used as the encryption key to the crypt function. Crypt is using 25 rounds of modified DES 2 to encrypt a string of 0's with the password as a key.
Reference: [MW94] <author> U. Manber and S. Wu, </author> <title> ``An Algorithm for Approximate Membership Checking With Application to Password Security,'' </title> <journal> Information Processing Letters 50 (May 1994), </journal> <pages> pp. 191-197. </pages>
Reference-contexts: System administrators who are not up-to-date lose to hackers who are. Making sure that no password appears in the dictionary may not be sufficient, as guesses can automatically generate strings that sound good, or strings that are within one character of dictionary words <ref> [MW94] </ref>. What makes it so difficult is the advances in DES encryption, which allows for hundreds of guesses a second! When the password scheme for UNIX was first developed, an old encryption scheme was used, but was deemed too risky because encryption took about 1 ms on a PDP11/70.
Reference: [MT79] <author> Morris, R. and K. Thompson, </author> <title> ``Password security: a case history,'' </title> <journal> Communications of the ACM, </journal> <month> 22 (November </month> <year> 1979), </year> <pages> pp. 594-597. </pages>
Reference-contexts: The password file itself need not be kept secret, because one cannot decipher the original passwords from what is stored in the file. At least, that was the idea when this scheme was developed and later incorporated in the UNIX system (Morris and Thompson <ref> [MT79] </ref> list Wilkes [Wi68] for the origin of this scheme). The password file itself (/etc/passwd) was made available for anyone (who has access to the system) to read. hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh 1 Supported in part by NSF grant CCR-9301129, and by the Advanced Research Projects Agency under contract number DABT63-93-C-0052. <p> The same principles would apply to any such system. 3 2. Password Security in UNIX We give a very brief outline of the password mechanism in UNIX. More details can be found in many places (e.g., <ref> [MT79] </ref>, [Kl90], [GS91], [Cu92]). A UNIX password is actually not encrypted, but used as the encryption key to the crypt function. Crypt is using 25 rounds of modified DES 2 to encrypt a string of 0's with the password as a key.
Reference: [Mu92] <author> Muffett, D. E., </author> <title> ``Crack: A sensible password checker for Unix,'' a document distributed with the Crack 4.1 software package (March 1992). </title>
Reference-contexts: This scheme makes it at least two orders of magnitude bigger. We implemented this scheme within the UNIX login procedure, using the crypt procedure distributed with Crack <ref> [Mu92] </ref>. The value of S that corresponds to half a second slowdown of one login attempt was between 100 for an old Sequent machine to about 1000 for a DEC Alpha 400 (the slowest and fastest UNIX machines in our department). The implementation of this scheme is very easy.
Reference: [Sp92] <author> Spafford, E. H., </author> <title> ``Opus: Preventing Weak Password Choices,'' Computers & Security, </title> <month> 11 (May </month> <year> 1992), </year> <pages> pp. 273-278. </pages>
Reference: [St89] <author> Stoll C., </author> <title> The Cuckoo's Egg, </title> <publisher> Doubleday, </publisher> <year> 1989. </year>
Reference-contexts: Such attacks were started as soon as UNIX became popular, and have become a major threat to the security of UNIX. Many if not most attacks on UNIX involved grabbing the /etc/passwd file at some point (Cliff Stoll's account <ref> [St89] </ref> is particularly enjoyable). Many studies have shown that users tend to select easy-to-guess passwords [JO89]; some found as many as 85% of the passwords on a system to be guessable in reasonable time.
Reference: [Wi68] <author> Wilkes, M. V., </author> <title> Time-Sharing Computer Systems, </title> <publisher> American Elsevier, </publisher> <address> New York, </address> <year> 1968. </year>
Reference-contexts: The password file itself need not be kept secret, because one cannot decipher the original passwords from what is stored in the file. At least, that was the idea when this scheme was developed and later incorporated in the UNIX system (Morris and Thompson [MT79] list Wilkes <ref> [Wi68] </ref> for the origin of this scheme). The password file itself (/etc/passwd) was made available for anyone (who has access to the system) to read. hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh 1 Supported in part by NSF grant CCR-9301129, and by the Advanced Research Projects Agency under contract number DABT63-93-C-0052.
References-found: 12

