URL: http://vlsicad.cs.ucla.edu/~abk/papers/conference/c77.ps
Refering-URL: http://vlsicad.cs.ucla.edu/~abk/publications.html
Root-URL: http://www.cs.ucla.edu
Email: abk@cs.ucla.edu,  
Title: Futures for Partitioning in Physical Design  
Author: Andrew B. Kahng 
Web: http://vlsicad.cs.ucla.edu  
Address: Los Angeles, CA 90095-1596  
Affiliation: UCLA Computer Science Department,  
Abstract: The context for partitioning in physical design is dominated by two concerns: top-down design and the focus on spatial embedding. The role of partitioning is exactly that of a facilitator of divide-and-conquer metaheuristics for floorplanning, timing and placement optimization. Formulations or optimization objectives for partitioning follow from its context and role. Finally, the available algorithm technology determines how effectively we can address a given partitioning formulation and optimize a given objective. This invited paper considers the future of partitioning for physical design in light of these factors, and proposes a list of technology needs. A living version of this paper can be found at vlsicad.cs.ucla.edu . 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. J. Alpert, </author> <type> personal communication, </type> <month> February </month> <year> 1998. </year>
Reference-contexts: Alpert <ref> [1] </ref> has made a huge step toward improved benchmarks, and though cultural gaps still persist, I will not address them below. <p> Algorithms likely combinatorial in nature that handle such non-local objectives must be identified. * The combinatorial structure of partitioning must be understood. When partitioning with tight balance constraints and irregular module sizes <ref> [1] </ref>, the continuous min-cut formulation gives way to a more discrete packing formulation, and the precise nature of this phase transition needs to be clarified.
Reference: [2] <author> C. J. Alpert, </author> <title> The ISPD Circuit Benchmark Suite, </title> <booktitle> Proc. ACM/IEEE Intl. Symp. on Physical Design, </booktitle> <month> April </month> <year> 1998. </year>
Reference-contexts: The one direction that seems to have been dropped is spectral partitioning, which has seen significant advances by researchers at, e.g., UC Santa Cruz and the University of Waterloo, but which may not be critical in the future <ref> [2] </ref>. 9 For example, we may characterize edges according to their feasible or budgeted delays. * To support the previous goal, various partitioning formulations must be characterized as large-scale discrete global optimizations.
Reference: [3] <author> C. J. Alpert and A. B. Kahng, </author> <title> Recent Directions in Netlist Partitioning: A Survey, </title> <booktitle> Integration 19 (1995), </booktitle> <pages> pp. 1-81. </pages>
Reference-contexts: 1 Introduction Partitioning in VLSI physical design has been actively studied over the past two decades, with hundreds of works in the literature. A comprehensive review can be obtained from <ref> [3] </ref> [13] [19] [8]. The standard formulation seeks a multi-way partitioning of a vertex- and hyperedge-weighted directed hypergraph, with a minimum hyperedge-cut objective subject to partition size constraints. <p> Today's partitioning tools cannot easily capture such knowledge, even when co for today's min-cut partitioners. 2 <ref> [3] </ref> and [13] also provide lists of future directions for partitioning. 3 An exception is when the algorithm runtime scales near-linearly with instance complexity. <p> Readers may find it interesting to compare what follows with the predictions given three years ago in <ref> [3] </ref> and two years ago in [13]. 8 * Prediction in top-down design requires instance models. We need structural models of heterogeneous design instances, at all levels of representation, that go beyond single-number characterizations. <p> models of optimization cost surfaces and neighborhood structures), and (ii) distributions of solution quality for multi-start metaheuristics (e.g., order statistics of multiple runs of FM partitioning). 7 The min-cut framework suffers from other mismatches with the placement application, e.g., min-cuts typically create underutilized routing resources along cutlines. 8 Both surveys <ref> [3] </ref> and [13] point out the need for improved benchmarks and culture (reporting of experimental protocols and results; sharing and reuse of ideas/software across multiple application domains). Alpert [1] has made a huge step toward improved benchmarks, and though cultural gaps still persist, I will not address them below. <p> Alpert [1] has made a huge step toward improved benchmarks, and though cultural gaps still persist, I will not address them below. Both surveys point to constraint-dominated partitioning, and the potential for combinatorial or enumerative methods. [13] suggests logic resynthesis and estimation of system properties; <ref> [3] </ref> suggests the study of clustering and iterative metaheuristics for global optimization. All of these futures are mentioned again below, hopefully with some fresh perspectives.
Reference: [4] <author> C. J. Alpert, J.-H. Huang and A. B. Kahng, </author> <title> Multilevel Circuit Partitioning, </title> <booktitle> Proc. ACM/IEEE Design Automation Conference, </booktitle> <year> 1997, </year> <pages> pp. 530-533. </pages>
Reference-contexts: This is a mission statement for the partitioning field. Today, partitioning is a key element of many heuristics for physical design applications. However, it is not clear whether today's standard partitioning algorithms (basically, multilevel implementations of Fiduccia-Mattheyses (FM) variants [10] <ref> [4] </ref> [16]) will successfully adapt to tomorrow's challenges: non-local and non-geometric objectives; constraint-dominated formulations; the need to maintain design state information (noted above); etc. I believe that the partitioning field must (i) carefully determine the limits of the major partitioning approaches, and (ii) never lose sight of the mission statement.
Reference: [5] <author> K. Bazargan, S. Kim and M. Sarrafzadeh, Nostradamus: </author> <title> A Floorplanner of Uncertain Design, </title> <booktitle> Proc. ACM/IEEE Intl. Symp. on Physical Design, </booktitle> <month> April </month> <year> 1998. </year>
Reference-contexts: Aspects of the input (components, connectivity, time budgets, etc.) are only partially or probabilistically specified (see recent work of Sar-rafzadeh and coauthors, e.g., <ref> [5] </ref>). 6 Block floorplanning also exemplifies the phase transition between heterogeneous and homogeneous instances, and discrete and continuous perspectives for optimization. Finally, in most methodologies the reconciliation of functional and physical hierarchies during block placement (as well as chip-level route planning, pin definition and performance optimization) must be maintained.
Reference: [6] <author> K. D. Boese, </author> <title> Models for Iterative Global Optimization, </title> <type> Ph.D. Thesis, </type> <institution> UCLA Computer Science Dept., </institution> <year> 1996. </year>
Reference-contexts: What are the statistics of the optimization cost surface under given neighborhood structures? What is the appropriate choice of metaheuristics (e.g., multi-start greed, annealing, large-step Markov chains, population-based search, etc.) for search in a given cost surface under CPU bounds? Studies of iterative global optimization <ref> [6] </ref> suggest that iterated-descent methods and go-with-winners types of population-based search are very effective. The theory of problem-space and heuristic-space methods [24] 10 is also of particular interest, given the possibility of subtle mismatches between the partitioning objective and the application's true objective.
Reference: [7] <author> A. E. Caldwell, A. B. Kahng and I. L. </author> <title> Markov, </title> <type> manuscript, </type> <year> 1997. </year>
Reference-contexts: If we can bipartition according to the min-cut objective, and anneal according to the true (min-wirelength) placement objective, what is the best strategy for interpolating annealing corrections into a top-down bipartitioning placement? Some first steps toward resolving this issue have been taken in <ref> [7] </ref>. 12 Yeh et al. [28] observe that annealing is inferior to FM for 2-way partitioning. Our experience [7] suggests that the crossover point occurs at surprisingly low values of k. smaller instance to save runtime or allow better search of the solution space; this is the primary motivation in the <p> according to the true (min-wirelength) placement objective, what is the best strategy for interpolating annealing corrections into a top-down bipartitioning placement? Some first steps toward resolving this issue have been taken in <ref> [7] </ref>. 12 Yeh et al. [28] observe that annealing is inferior to FM for 2-way partitioning. Our experience [7] suggests that the crossover point occurs at surprisingly low values of k. smaller instance to save runtime or allow better search of the solution space; this is the primary motivation in the literature.
Reference: [8] <author> W. E. Donath, </author> <title> Logic Partitioning, </title> <editor> in B. Preas and M. Loren-zetti, eds., </editor> <booktitle> Physical Design Automation in VLSI Systems, </booktitle> <address> Ben-jamin/Cummings, </address> <year> 1988. </year>
Reference-contexts: 1 Introduction Partitioning in VLSI physical design has been actively studied over the past two decades, with hundreds of works in the literature. A comprehensive review can be obtained from [3] [13] [19] <ref> [8] </ref>. The standard formulation seeks a multi-way partitioning of a vertex- and hyperedge-weighted directed hypergraph, with a minimum hyperedge-cut objective subject to partition size constraints. Recent years have seen several works that add I/O-count or path-cut constraints, replication and retim-ing degrees of freedom, hierarchy awareness, etc. to the standard formulation.
Reference: [9] <author> A. E. Dunlop and B. W. Kernighan, </author> <title> A Procedure for Placement of Standard Cell VLSI Circuits, </title> <booktitle> IEEE Transactions on Computer-Aided Design 4(1) (1985), </booktitle> <pages> pp. </pages> <month> 92-98. </month> <title> 13 Antun Domic points out the example of a weak driver output connected to the input of a repeater, whose output goes to a receiver. A partitioner sees two 2-pin nets that have equal cut cost. However, it is better to group the weak driver with the repeater. </title>
Reference-contexts: For example, the first bisection of a min-cut placer is placing the entire (flat, fine-grain) netlist onto just two points (!) This extreme coarseness in the layout model vis-a-vis the minimum-wirelength placement objective is the mismatch that has motivated terminal propagation <ref> [9] </ref>, quadrisection [25], quadrisection with exact placement objective [12], etc.
Reference: [10] <author> C. M. Fiduccia and R. M. Mattheyses, </author> <title> A Linear Time Heuris--tic for Improving Network Partitions, </title> <booktitle> Proc. ACM/IEEE Design Automation Conference, </booktitle> <year> 1982, </year> <pages> pp. 175-181. </pages>
Reference-contexts: This is a mission statement for the partitioning field. Today, partitioning is a key element of many heuristics for physical design applications. However, it is not clear whether today's standard partitioning algorithms (basically, multilevel implementations of Fiduccia-Mattheyses (FM) variants <ref> [10] </ref> [4] [16]) will successfully adapt to tomorrow's challenges: non-local and non-geometric objectives; constraint-dominated formulations; the need to maintain design state information (noted above); etc.
Reference: [11] <author> S. Hauck and G. Borriello, </author> <title> An Evaluation of Bipartitioning Techniques, </title> <booktitle> IEEE Trans. on Computer-Aided Design 16 (1997), </booktitle> <pages> pp. 849-866. </pages>
Reference-contexts: Third, and most important, clustering captures design knowledge that would otherwise be forgotten (e.g., identification of synthesized buffer-inverter trees, two-dimensional datapath regularity [21], clock/test structures, electrical clustering, 13 or hierarchy). To date, principled studies of clustering have not yet been published (some first steps are given in [15] <ref> [11] </ref> [16]).
Reference: [12] <author> D. J. Huang and A. B. Kahng, </author> <title> Partitioning-Based Standard-Cell Global Placement with an Exact Objective, </title> <booktitle> in Proc. ACM/IEEE Intl. Symp. on Physical Design, </booktitle> <address> Napa, </address> <month> April </month> <year> 1997, </year> <pages> pp. 18-25. </pages>
Reference-contexts: For example, the first bisection of a min-cut placer is placing the entire (flat, fine-grain) netlist onto just two points (!) This extreme coarseness in the layout model vis-a-vis the minimum-wirelength placement objective is the mismatch that has motivated terminal propagation [9], quadrisection [25], quadrisection with exact placement objective <ref> [12] </ref>, etc. The natural extension of this trend toward top-down 8-way, 16-way, etc. partitioning with exact placement objective fails because the number of gain buckets in FM variants grows quadratically with k in k-way partitioning, and the size of the net gain vector [12] grows exponentially in k. <p> quadrisection [25], quadrisection with exact placement objective <ref> [12] </ref>, etc. The natural extension of this trend toward top-down 8-way, 16-way, etc. partitioning with exact placement objective fails because the number of gain buckets in FM variants grows quadratically with k in k-way partitioning, and the size of the net gain vector [12] grows exponentially in k. Hence, the correct extension of the trend is to non-partitioning based placers with a less coarse-grain layout abstraction. 7 On the other hand, flat (annealing-based) placers traditionally have fine-grain views of both the netlist and the layout.
Reference: [13] <author> F. R. Johannes, </author> <title> Tutorial: Partitioning of VLSI Circuits and Systems, </title> <booktitle> Proc. ACM/IEEE Design Automation Conference, </booktitle> <year> 1996, </year> <pages> pp. 83-87. </pages>
Reference-contexts: 1 Introduction Partitioning in VLSI physical design has been actively studied over the past two decades, with hundreds of works in the literature. A comprehensive review can be obtained from [3] <ref> [13] </ref> [19] [8]. The standard formulation seeks a multi-way partitioning of a vertex- and hyperedge-weighted directed hypergraph, with a minimum hyperedge-cut objective subject to partition size constraints. <p> Today's partitioning tools cannot easily capture such knowledge, even when co for today's min-cut partitioners. 2 [3] and <ref> [13] </ref> also provide lists of future directions for partitioning. 3 An exception is when the algorithm runtime scales near-linearly with instance complexity. <p> Readers may find it interesting to compare what follows with the predictions given three years ago in [3] and two years ago in <ref> [13] </ref>. 8 * Prediction in top-down design requires instance models. We need structural models of heterogeneous design instances, at all levels of representation, that go beyond single-number characterizations. <p> optimization cost surfaces and neighborhood structures), and (ii) distributions of solution quality for multi-start metaheuristics (e.g., order statistics of multiple runs of FM partitioning). 7 The min-cut framework suffers from other mismatches with the placement application, e.g., min-cuts typically create underutilized routing resources along cutlines. 8 Both surveys [3] and <ref> [13] </ref> point out the need for improved benchmarks and culture (reporting of experimental protocols and results; sharing and reuse of ideas/software across multiple application domains). Alpert [1] has made a huge step toward improved benchmarks, and though cultural gaps still persist, I will not address them below. <p> Alpert [1] has made a huge step toward improved benchmarks, and though cultural gaps still persist, I will not address them below. Both surveys point to constraint-dominated partitioning, and the potential for combinatorial or enumerative methods. <ref> [13] </ref> suggests logic resynthesis and estimation of system properties; [3] suggests the study of clustering and iterative metaheuristics for global optimization. All of these futures are mentioned again below, hopefully with some fresh perspectives.
Reference: [14] <author> A. B. Kahng, S. Muddu, E. Sarto and R. Sharma, </author> <title> Interconnect Tuning Strategies for High-Performance ICs, </title> <booktitle> Proc. Design, Automation and Test in Europe (DATE), </booktitle> <address> Paris, </address> <month> February </month> <year> 1998. </year>
Reference-contexts: Today's Rent-like characterizations are based solely on topological structure; future models must capture delay and temporal structure 9 as well as communication and function complexity. Such new structural models will also facilitate such design activities as interconnect tuning <ref> [14] </ref>. * Prediction requires tool models as well. We need models of global optimization metaheuristics that allow prediction of output solution quality based on instance parameters and available CPU resource.
Reference: [15] <author> A. B. Kahng and R. Sharma, </author> <title> Studies of Clustering Objectives and Heuristics for Improved Standard-Cell Placement, </title> <type> manuscript, </type> <year> 1997. </year>
Reference-contexts: Third, and most important, clustering captures design knowledge that would otherwise be forgotten (e.g., identification of synthesized buffer-inverter trees, two-dimensional datapath regularity [21], clock/test structures, electrical clustering, 13 or hierarchy). To date, principled studies of clustering have not yet been published (some first steps are given in <ref> [15] </ref> [11] [16]).
Reference: [16] <author> G. Karypis, R. Aggarwal, V. Kumar and S. Shekhar, </author> <title> Multilevel Hypergraph Partitioning: Applications in VLSI Domain, </title> <booktitle> Proc. ACM/IEEE Design Automation Conference, </booktitle> <year> 1997, </year> <pages> pp. 526-529. </pages>
Reference-contexts: This is a mission statement for the partitioning field. Today, partitioning is a key element of many heuristics for physical design applications. However, it is not clear whether today's standard partitioning algorithms (basically, multilevel implementations of Fiduccia-Mattheyses (FM) variants [10] [4] <ref> [16] </ref>) will successfully adapt to tomorrow's challenges: non-local and non-geometric objectives; constraint-dominated formulations; the need to maintain design state information (noted above); etc. I believe that the partitioning field must (i) carefully determine the limits of the major partitioning approaches, and (ii) never lose sight of the mission statement. <p> Third, and most important, clustering captures design knowledge that would otherwise be forgotten (e.g., identification of synthesized buffer-inverter trees, two-dimensional datapath regularity [21], clock/test structures, electrical clustering, 13 or hierarchy). To date, principled studies of clustering have not yet been published (some first steps are given in [15] [11] <ref> [16] </ref>). At least three threads of research remain disconnected: clustering objectives (which have mostly been ad hoc), clustering heuristics (none of which yet directly optimizes any of the proposed clustering objectives), and benefits to given applications (which currently lack metrics as well as direct links back to the clustering objectives). <p> These should be unified. Other research topics: (1) How much does the choice of clustering heuristic matter in multilevel partitioning and placement approaches? (2) If the choice does matter, what clustering heuristic and parameters (e.g., the matching ratio in heavy-edge matching <ref> [16] </ref>) should be used for circuits with given characteristics, and given partitioning/placement applications? (3) What are the best approaches to timing-oriented clustering? (Lillis [20] suggests concepts of convexity (no directed path leaves and later re-enters a cluster) and quasi-convexity.) 6 Acknowledgments Over the years, I have enjoyed stimulating discussions of partitioning
Reference: [17] <author> M.-T. Kuo, L.-T. Liu and C.-K. Cheng, </author> <title> Network Partitioning Into Tree Hierarchies, </title> <booktitle> Proc. ACM/IEEE Design Automation Conference, </booktitle> <year> 1996, </year> <pages> pp. 477-482. </pages>
Reference-contexts: Certain node clus-terings or smashings might be prohibited. This leads to new partitioning formulations (see the recent work of Cheng and coau thors, e.g., <ref> [17] </ref>). * Gate-level placement in row-based implementation styles presents nearly geometric objective function terms, along with very homogeneous instance structure.
Reference: [18] <author> E. L. Lawler, K. N. Levitt and J. Turner, </author> <title> Module Clustering to Minimize Delay in Digital Networks, </title> <journal> IEEE Trans. on Computers 18 (1969), </journal> <pages> pp. 47-57. </pages>
Reference: [19] <author> T. Lengauer, </author> <title> Combinatorial Algorithms for Integrated Circuit Layout, </title> <address> Wiley-Teubner, </address> <year> 1990. </year>
Reference-contexts: 1 Introduction Partitioning in VLSI physical design has been actively studied over the past two decades, with hundreds of works in the literature. A comprehensive review can be obtained from [3] [13] <ref> [19] </ref> [8]. The standard formulation seeks a multi-way partitioning of a vertex- and hyperedge-weighted directed hypergraph, with a minimum hyperedge-cut objective subject to partition size constraints.
Reference: [20] <author> J. Lillis, </author> <type> personal communication, </type> <month> February </month> <year> 1998. </year>
Reference-contexts: To illustrate the mismatches that can occur between partitioning algorithms and the underlying application domain, consider the following synthesis of row-based placer evolution. 6 Lillis <ref> [20] </ref> observes that if block attributes such as area are represented by probability distributions, a feasible partitioning could be defined as one where each partition contains nodes whose area satisfies capacity constraints with some pre-specified high probability. On one hand, top-down partitioning-based placers have become popular for their speed advantage. <p> The links between placement and partitioning can also become more bidirectional, i.e., placement can be a tool that leads to good partitioning solutions, just as partitioning is a tool for placement. * Formulations that handle timing constraints must be developed. Lillis <ref> [20] </ref> notes that recent retiming objectives may well give way to, e.g., minimization of maximum latch-to-latch hops across partition boundaries. Above, this was cited as one example of a non-local objective function term that is not naturally handled by iterative FM-style partitioners. <p> With respect to physical design, there are at least three major purposes for clustering. First, clustering contracts a large problem instance into a 10 Lillis <ref> [20] </ref> has explored FM partitioning in a secondary general connectivity graph. <p> clustering heuristic matter in multilevel partitioning and placement approaches? (2) If the choice does matter, what clustering heuristic and parameters (e.g., the matching ratio in heavy-edge matching [16]) should be used for circuits with given characteristics, and given partitioning/placement applications? (3) What are the best approaches to timing-oriented clustering? (Lillis <ref> [20] </ref> suggests concepts of convexity (no directed path leaves and later re-enters a cluster) and quasi-convexity.) 6 Acknowledgments Over the years, I have enjoyed stimulating discussions of partitioning and clustering with: Lars Hagen, Chuck Alpert, Ken Boese, Dennis Huang, Rahul Sharma, Andy Caldwell and Igor Markov at UCLA; Chung-Kuan Cheng, John
Reference: [21] <author> R. X. T. Nijssen and J. A. G. Jess, </author> <title> Two-Dimensional Datap-ath Regularity Extraction, </title> <booktitle> Proc. ACM/SIGDA Physical Design Workshop, </booktitle> <month> April </month> <year> 1996, </year> <pages> pp. 111-117. </pages>
Reference-contexts: Second, when it is known that modules should be grouped together, clustering them together prevents, e.g., a top-down partitioning placer from making a mistake. Third, and most important, clustering captures design knowledge that would otherwise be forgotten (e.g., identification of synthesized buffer-inverter trees, two-dimensional datapath regularity <ref> [21] </ref>, clock/test structures, electrical clustering, 13 or hierarchy). To date, principled studies of clustering have not yet been published (some first steps are given in [15] [11] [16]).
Reference: [22] <author> M. Sarrafzadeh and M. Wang, NRG: </author> <title> Global and Detailed Placement, </title> <booktitle> Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <year> 1997, </year> <pages> pp. 532-537. </pages>
Reference-contexts: Notice the contrast with the trend for top-down partitioning-based placers. The critical observation is that the two classical placer speedup techniques coarsening the netlist, and coarsening the layout target are orthogonal. With this observation, one realizes the import of the recent NRG placement approach of Sarrafzadeh and Wang <ref> [22] </ref>: it shows that the two types of speedup can and should be independently implemented.
Reference: [23] <institution> Semiconductor Industry Association, The National Technology Roadmap for Semiconductors: Technology Needs, </institution> <month> December </month> <year> 1997. </year>
Reference: [24] <author> R. H. Storer, S. D. Wu and R. Vaccari, </author> <title> New Search Spaces for Sequencing Problems With Application to Job Shop Scheduling, </title> <booktitle> Management Science 38 (1992), </booktitle> <pages> pp. 1495-1509. </pages>
Reference-contexts: The theory of problem-space and heuristic-space methods <ref> [24] </ref> 10 is also of particular interest, given the possibility of subtle mismatches between the partitioning objective and the application's true objective.
Reference: [25] <author> P. R. Suaris and G. Kedem, Quadrisection: </author> <title> A New Approach to Standard Cell Layout, </title> <booktitle> Proc. IEEE/ACM International Conference on Computer-Aided Design, </booktitle> <year> 1987, </year> <pages> pp. 474-477. </pages>
Reference-contexts: For example, the first bisection of a min-cut placer is placing the entire (flat, fine-grain) netlist onto just two points (!) This extreme coarseness in the layout model vis-a-vis the minimum-wirelength placement objective is the mismatch that has motivated terminal propagation [9], quadrisection <ref> [25] </ref>, quadrisection with exact placement objective [12], etc.
Reference: [26] <author> W. Sun and C. Sechen, </author> <title> Efficient and Effective Placements for Very Large Circuits, </title> <booktitle> Proc. IEEE/ACM International Conference on Computer-Aided Design, </booktitle> <year> 1993, </year> <pages> pp. 170-177. </pages>
Reference-contexts: Hence, the correct extension of the trend is to non-partitioning based placers with a less coarse-grain layout abstraction. 7 On the other hand, flat (annealing-based) placers traditionally have fine-grain views of both the netlist and the layout. They obtain speedups via (multilevel) clustering <ref> [26] </ref>; with this technique, the flat placer can be viewed as mapping (1) a coarse-grain (clustered) netlist onto (2) a fine-grain layout target. Notice the contrast with the trend for top-down partitioning-based placers.
Reference: [27] <author> G. Vijayan, </author> <title> Generalization of Min-Cut Partitioning to Tree Structures and Its Applications, </title> <journal> IEEE Trans. on Computers 40(3) (1991), </journal> <pages> pp. 307-314. </pages>
Reference-contexts: Similar difficulties arise in what might be termed floorplan-driven partitioning, for which antecedents were studied in <ref> [27] </ref>. * Placement for pre-synthesis floorplanning presents a mix of hard, (estimated) semi-hard and (estimated) soft blocks.
Reference: [28] <author> C.-W. Yeh, C.-K. Cheng and T.-T. Y. Lin, </author> <title> Optimization by Iterative Improvement: An Experimental Evaluation on Two-Way Partitioning, </title> <booktitle> IEEE Transactions on Computer-Aided Design 14 (1995), </booktitle> <pages> pp. 145-153. </pages>
Reference-contexts: If we can bipartition according to the min-cut objective, and anneal according to the true (min-wirelength) placement objective, what is the best strategy for interpolating annealing corrections into a top-down bipartitioning placement? Some first steps toward resolving this issue have been taken in [7]. 12 Yeh et al. <ref> [28] </ref> observe that annealing is inferior to FM for 2-way partitioning. Our experience [7] suggests that the crossover point occurs at surprisingly low values of k. smaller instance to save runtime or allow better search of the solution space; this is the primary motivation in the literature.
References-found: 28

