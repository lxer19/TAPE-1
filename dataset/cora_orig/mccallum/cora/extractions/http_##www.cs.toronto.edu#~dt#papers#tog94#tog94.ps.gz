URL: http://www.cs.toronto.edu/~dt/papers/tog94/tog94.ps.gz
Refering-URL: http://www.cs.toronto.edu/~dt/cad.html
Root-URL: http://www.cs.toronto.edu
Title: Dynamic NURBS with Geometric Constraints for Interactive Sculpting  
Author: Demetri Terzopoulos and Hong Qin 
Keyword: General Terms: Algorithms, Design, Theory Additional Keywords and Phrases: CAGD, NURBS, Deformable Models, Dynamics, Constraints, Finite Elements, Trimming, Solid Rounding, Optimal Curve and Surface Fitting, Cross-Sectional Shape Design, Free-Form Deformation, Shape Metamorphosis.  
Date: 13(2), April, 1994, 103-136.  
Note: Published in ACM Transactions on Graphics,  
Address: Toronto  
Affiliation: Department of Computer Science, University of  
Abstract: This article develops a dynamic generalization of the nonuniform rational B-spline (NURBS) model. NURBS have become a de facto standard in commercial modeling systems because of their power to represent free-form shapes as well as common analytic shapes. To date, however, they have been viewed as purely geometric primitives that require the user to manually adjust multiple control points and associated weights in order to design shapes. Dynamic NURBS, or D-NURBS, are physics-based models that incorporate mass distributions, internal deformation energies, and other physical quantities into the popular NURBS geometric substrate. Using D-NURBS, a modeler can interactively sculpt curves and surfaces and design complex shapes to required specifications not only in the traditional indirect fashion, by adjusting control points and weights, but also through direct physical manipulation, by applying simulated forces and local and global shape constraints. D-NURBS move and deform in a physically intuitive manner in response to the user's direct manipulations. Their dynamic behavior results from the numerical integration of a set of nonlinear differential equations that automatically evolve the control points and weights in response to the applied forces and constraints. To derive these equations, we employ Lagrangian mechanics and a finite-element-like discretization. Our approach supports the trimming of D-NURBS surfaces using D-NURBS curves. We demonstrate D-NURBS models and constraints in applications including the rounding of solids, optimal surface fitting to unstructured data, surface design from cross sections, and free-form deformation. We also introduce a new technique for 2D shape metamorphosis using constrained D-NURBS surfaces. CR Categories and Subject Descriptors: I.3.5 [Computer Graphics]: Computational Geometry and Object Modeling | Curve, Surface, solid, and object representations; Physically based modeling; splines; I.3.6 [Computer Graphics]: Methodology and Techniques | Interaction techniques. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Baumgarte. </author> <title> Stabilization of constraints and integrals of motion in dynamical systems. </title> <journal> Comp. Meth. in Appl. Mech. and Eng., </journal> <volume> 1 </volume> <pages> 1-16, </pages> <year> 1972. </year>
Reference-contexts: The method is applied to the B-spline model in [6, 42]. The augmented Lagrangian method [18] combines the Lagrange multipliers with the simpler penalty method [26]. One of the best known techniques for applying constraints to dynamic models is the Baumgarte stabilization method <ref> [1] </ref> which solves constrained equations of motion through linear feedback control (see also [17, 25]). We augment (17) as follows: M p + D _ p + Kp = f p I _ p C &gt; where C &gt; p are generalized forces stemming from the holonomic constraint equations.
Reference: [2] <author> M.I.G. Bloor and M.J. Wilson. </author> <title> Representing PDE surfaces in terms of B-splines. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 22(6) </volume> <pages> 324-331, </pages> <year> 1990. </year>
Reference-contexts: Celniker and Gossard [5] developed an interesting prototype system for interactive free-form design based on the finite-element optimization of energy functionals proposed in [36]. Bloor and Wilson [3] developed related models using similar energies and numerical optimization, and in <ref> [2] </ref> they proposed the use of B-splines for this purpose. Subsequently, Celniker and Welch [6] investigated deformable B-splines with linear constraints. Welch and Witkin [42] extended the approach to trimmed hierarchical B-splines (see also [13]). <p> Subsequently, Celniker and Welch [6] investigated deformable B-splines with linear constraints. Welch and Witkin [42] extended the approach to trimmed hierarchical B-splines (see also [13]). Thingvold and Cohen [38] proposed a deformable B-spline whose control points are mass points connected by elastic springs and hinges. In <ref> [2, 6, 42] </ref> deformable B-spline curves and surfaces are designed by imposing shape criteria via the minimization of energy functionals subject to hard or soft geometric constraints. These constraints are imposed through Lagrange multipliers or penalty methods, respectively. The same techniques are applicable to D-NURBS.
Reference: [3] <author> M.I.G. Bloor and M.J. Wilson. </author> <title> Using partial differential equations to generate free-form surfaces. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 22(4) </volume> <pages> 202-212, </pages> <year> 1990. </year>
Reference-contexts: Terzopoulos and Fleischer [36] demonstrated simple interactive sculpting using viscoelastic and plastic models. Celniker and Gossard [5] developed an interesting prototype system for interactive free-form design based on the finite-element optimization of energy functionals proposed in [36]. Bloor and Wilson <ref> [3] </ref> developed related models using similar energies and numerical optimization, and in [2] they proposed the use of B-splines for this purpose. Subsequently, Celniker and Welch [6] investigated deformable B-splines with linear constraints. Welch and Witkin [42] extended the approach to trimmed hierarchical B-splines (see also [13]).
Reference: [4] <author> W. Bohm, G. Farin, and J. Kahmann. </author> <title> A survey of curve and surface methods in CAGD. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <volume> 1(1) </volume> <pages> 1-60, </pages> <year> 1984. </year>
Reference-contexts: We then describe their analytic and geometric properties. More detailed material can be found in <ref> [4, 24, 21, 22, 23, 39] </ref>. 3.1 Curves A NURBS curve generalizes the B-spline.
Reference: [5] <author> G. Celniker and D. Gossard. </author> <title> Deformable curve and surface finite-element for free-form shape design. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 257-266, </pages> <year> 1991. </year>
Reference-contexts: Section 8 concludes the article. 2 Background Dynamic NURBS are motivated by prior research aimed at applying the deformable modeling approach to shape design. Terzopoulos and Fleischer [36] demonstrated simple interactive sculpting using viscoelastic and plastic models. Celniker and Gossard <ref> [5] </ref> developed an interesting prototype system for interactive free-form design based on the finite-element optimization of energy functionals proposed in [36]. Bloor and Wilson [3] developed related models using similar energies and numerical optimization, and in [2] they proposed the use of B-splines for this purpose. <p> For the elastic potential energy of D-NURBS, we can adopt the thin-plate under tension energy model [35], which was also used in <ref> [5, 42] </ref> (other energies are possible, including the nonquadratic, curvature-based Published in ACM Transactions on Graphics, 13 (2), April, 1994, 103-136. 8 energies in [36, 19]): U = 2 ff 1;1 @u @u @s &gt; @s +fi 1;1 @u 2 @u 2 + fi 1;2 @u@v @u@v @ 2 s &gt;
Reference: [6] <author> G. Celniker and W. Welch. </author> <title> Linear constraints for deformable B-spline surfaces. </title> <booktitle> In Proceedings, Symposium on Interactive 3D Graphics, </booktitle> <pages> pages 165-170, </pages> <year> 1992. </year>
Reference-contexts: Bloor and Wilson [3] developed related models using similar energies and numerical optimization, and in [2] they proposed the use of B-splines for this purpose. Subsequently, Celniker and Welch <ref> [6] </ref> investigated deformable B-splines with linear constraints. Welch and Witkin [42] extended the approach to trimmed hierarchical B-splines (see also [13]). Thingvold and Cohen [38] proposed a deformable B-spline whose control points are mass points connected by elastic springs and hinges. <p> Subsequently, Celniker and Welch [6] investigated deformable B-splines with linear constraints. Welch and Witkin [42] extended the approach to trimmed hierarchical B-splines (see also [13]). Thingvold and Cohen [38] proposed a deformable B-spline whose control points are mass points connected by elastic springs and hinges. In <ref> [2, 6, 42] </ref> deformable B-spline curves and surfaces are designed by imposing shape criteria via the minimization of energy functionals subject to hard or soft geometric constraints. These constraints are imposed through Lagrange multipliers or penalty methods, respectively. The same techniques are applicable to D-NURBS. <p> The same techniques are applicable to D-NURBS. Compared to deformable B-splines, however, D-NURBS are capable of representing a wider variety of free-form shapes, as well as standard analytic shapes. Previous models solve static equilibrium problems, or in the case of <ref> [6] </ref> involve simple linear dynamics with diagonal (arbitrarily lumped) mass and damping matrices (apparently for efficiency). D-NURBS are a more sophisticated dynamic model. We adopt the approach proposed in [17] for converting arbitrary geometric models into dynamic models using Lagrangian mechanics and finite element analysis. Our approach is systematic. <p> The force f (u; v; t) in the D-NURBS equation of motion represents the net effect of all applied forces. Typical force functions are spring forces, repulsion forces, gravitational forces, inflation forces, etc. <ref> [36, 6, 34] </ref>. <p> We can control either or both using a mouse to obtain an interactive spring force. 5.2 Linear Constraints Linear geometric constraints such as point, curve, and surface normal constraints are often useful <ref> [6] </ref>. To incorporate linear geometric constraints into D-NURBS, we reduce the matrices and vectors in (17) to a minimal unconstrained set of generalized coordinates. Linear constraints are generally expressible as follows: C (p) = Ap + b = 0; (20) where A is a matrix of coefficients. <p> This approach increases the number of degrees of freedom, hence the computational cost, by adding unknowns i |also known as Lagrange multipliers| which determine the magnitudes of the constraint forces. The method is applied to the B-spline model in <ref> [6, 42] </ref>. The augmented Lagrangian method [18] combines the Lagrange multipliers with the simpler penalty method [26]. One of the best known techniques for applying constraints to dynamic models is the Baumgarte stabilization method [1] which solves constrained equations of motion through linear feedback control (see also [17, 25]).
Reference: [7] <author> J.E. Chadwick, D.R. Haumann, and R.E. Parent. </author> <title> Layered construction for animated deformable characters. </title> <journal> Computer Graphics, </journal> <volume> 23(3) </volume> <pages> 243-252, </pages> <year> 1989. </year>
Reference-contexts: We can arrive at a physics-based version of the FFD in which the object to be deformed is embedded in the D-NURBS "material" and deforms along with the deforming D-NURBS. The physics-based deformation is similar in motivation to the one devised in <ref> [7] </ref>, but it offers fully continuous dynamics by virtue of the continuous nature of D-NURBS.
Reference: [8] <author> S.E. Chen and R. Parent. </author> <title> Shape averaging and its applications to industrial design. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 9(1) </volume> <pages> 47-54, </pages> <year> 1989. </year>
Reference-contexts: Published in ACM Transactions on Graphics, 13 (2), April, 1994, 103-136. 23 7.6 Shape Metamorphosis Metamorphosis is the blending of one shape into another. Work on 3D shape blending includes <ref> [8, 16] </ref>. The blending of 2D shapes has widespread application in illustration, animation, etc., and simple (e.g., linear) interpolation techniques usually produce unsatisfactory results [29]. Shinagawa and Kunii [31] propose an method which interpolates differential properties of the 2D shape using the elastic surfaces of [37, 36].
Reference: [9] <author> C. de Boor. </author> <title> On calculating with B-Splines. </title> <journal> Journal of Approximation Theory, </journal> <volume> 6(1) </volume> <pages> 50-62, </pages> <year> 1972. </year>
Reference-contexts: integer N g and N h , we can find Gauss weights a g , b h and abscissas u g , v h in two directions of the parametric domain such that k ij can be approximated by ([27]) k ij g=1 h=1 We apply the de Boor algorithm <ref> [9] </ref> to evaluate f ij (u g ; v h ). 3 Generally speaking, for integrands that are polynomial of degree 2N 1 or less, Gaussian quadrature evaluates the integral exactly with N weights and abscissas.
Reference: [10] <author> G. Farin. </author> <title> Trends in curve and surface design. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 21(5) </volume> <pages> 293-296, </pages> <year> 1989. </year>
Reference-contexts: It offers a unified mathematical formulation for representing not only free-form curves and surfaces, but also standard analytic shapes such as conics, quadrics, and surfaces of revolution. By adjusting the positions of control points and manipulating associated weights, one can design a large variety of shapes using NURBS <ref> [10, 12, 24, 21, 22, 23, 39] </ref>.
Reference: [11] <author> G. Farin. </author> <title> Curves and Surfaces for Computer aided Geometric Design: A Practical Guide. </title> <publisher> Academic Press, </publisher> <address> second edition, </address> <year> 1990. </year>
Reference-contexts: They inherit many of the properties of nonrational B-splines, such as the strong convex hull property, variation diminishing property, local support, and invariance under standard geometric transformations (see <ref> [11] </ref> for more details). Moreover, they have some additional properties: * NURBS offer a common mathematical framework for implicit and parametric polynomial forms.
Reference: [12] <author> G. Farin. </author> <title> From conics to NURBS: A tutorial and survey. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 12(5) </volume> <pages> 78-86, </pages> <month> Sept. </month> <year> 1992. </year>
Reference-contexts: It offers a unified mathematical formulation for representing not only free-form curves and surfaces, but also standard analytic shapes such as conics, quadrics, and surfaces of revolution. By adjusting the positions of control points and manipulating associated weights, one can design a large variety of shapes using NURBS <ref> [10, 12, 24, 21, 22, 23, 39] </ref>. <p> The spline is attracted toward a control point more if the corresponding weight is increased and less if the weight is decreased. For a more detailed discussion of NURBS properties, see <ref> [23, 24, 39, 12, 21, 22] </ref>. The most frequently used NURBS design techniques are the specification of a control polygon, or interpolation or approximation of data points to generate the initial shape. For surfaces or solids, cross-sectional design including skinning, sweeping, and swinging operations is also popular.
Reference: [13] <author> D.R. Forsey and R.H. Bartels. </author> <title> Hierarchical B-spline refinement. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 205-212, </pages> <year> 1988. </year>
Reference-contexts: Bloor and Wilson [3] developed related models using similar energies and numerical optimization, and in [2] they proposed the use of B-splines for this purpose. Subsequently, Celniker and Welch [6] investigated deformable B-splines with linear constraints. Welch and Witkin [42] extended the approach to trimmed hierarchical B-splines (see also <ref> [13] </ref>). Thingvold and Cohen [38] proposed a deformable B-spline whose control points are mass points connected by elastic springs and hinges. In [2, 6, 42] deformable B-spline curves and surfaces are designed by imposing shape criteria via the minimization of energy functionals subject to hard or soft geometric constraints.
Reference: [14] <author> B.R. Gossick. </author> <title> Hamilton's Principle and Physical Systems. </title> <publisher> Academic Press, </publisher> <address> New York and London, </address> <year> 1967. </year>
Reference-contexts: D-NURBS physics are based on the work-energy version of Lagrangian dynamics <ref> [14] </ref>. In an abstract physical system, let p i (t) be a set of generalized coordinates. These N functions of time are assembled into the vector p. Let f i (t) be the generalized applied force that acts on p i . <p> In Appendix B, we show that by applying (10), the D-NURBS equations of motion are given by M p + D _ p + Kp = f p I _ p; (17) where the generalized force vector, obtained through the principle of virtual work <ref> [14] </ref> done by the applied force distribution f (u; v; t), is f p (p) = J &gt; f (u; v; t) du dv; (18) and where I (p) = J &gt; _ J du dv: 5 Forces and Constraints We have derived the Lagrangian equations of motion for D-NURBS.
Reference: [15] <author> H. Kardestuncer. </author> <title> Finite Element Handbook. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1987. </year>
Reference-contexts: We cannot obtain an analytical solution in general. An efficient numerical implementation of D-NURBS is possible, however, through the use of techniques from finite-element analysis <ref> [15] </ref>. Standard finite element codes assemble individual element matrices into the global matrices that appear in the discrete equations of motion [43, 15]. <p> We cannot obtain an analytical solution in general. An efficient numerical implementation of D-NURBS is possible, however, through the use of techniques from finite-element analysis [15]. Standard finite element codes assemble individual element matrices into the global matrices that appear in the discrete equations of motion <ref> [43, 15] </ref>. Despite the fact that the global matrices are stored using efficient sparse matrix storage schemes (which maintain only the entries needed for matrix factorization), matrix assembly and matrix-vector multiplications quickly become too costly, particularly for D-NURBS surfaces with high dimensional p.
Reference: [16] <author> A. Kaul and J. Rossignac. </author> <title> Solid interpolating deformations: Construction and animation of PIPs. </title> <editor> In F.H. Post and W. Barth, editors, </editor> <booktitle> Proc. Eurographics '91, </booktitle> <pages> pages 493-505, </pages> <address> Amsterdam, 1991. </address> <publisher> North Holland. </publisher>
Reference-contexts: Published in ACM Transactions on Graphics, 13 (2), April, 1994, 103-136. 23 7.6 Shape Metamorphosis Metamorphosis is the blending of one shape into another. Work on 3D shape blending includes <ref> [8, 16] </ref>. The blending of 2D shapes has widespread application in illustration, animation, etc., and simple (e.g., linear) interpolation techniques usually produce unsatisfactory results [29]. Shinagawa and Kunii [31] propose an method which interpolates differential properties of the 2D shape using the elastic surfaces of [37, 36].
Reference: [17] <author> D. Metaxas and D. Terzopoulos. </author> <title> Dynamic deformation of solid primitives with constraints. </title> <journal> Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 309-312, </pages> <year> 1992. </year>
Reference-contexts: The incremental manipulation of local shape parameters to satisfy complex local and global shape constraints is at best cumbersome and often unproductive. Physics-based modeling provides a means to overcome these drawbacks. Free-form deformable models, which were introduced to computer graphics in [37] and further developed in <ref> [36, 26, 33, 20, 34, 17] </ref> are particularly relevant in the context of modeling with NURBS. Important advantages accrue from the deformable model approach [36]: * The behavior of the deformable model is governed by physical laws. <p> Previous models solve static equilibrium problems, or in the case of [6] involve simple linear dynamics with diagonal (arbitrarily lumped) mass and damping matrices (apparently for efficiency). D-NURBS are a more sophisticated dynamic model. We adopt the approach proposed in <ref> [17] </ref> for converting arbitrary geometric models into dynamic models using Lagrangian mechanics and finite element analysis. Our approach is systematic. We formulate deformable curves and surfaces and reduce them to algorithms in a principled way, without resorting to any of the ad hoc assumptions of prior schemes (c.f. [38]). <p> Using (10), we can take an arbitrary geometric model, such as a NURBS, introduce appropriate kinetic, potential, and dissipation energies, and systematically formulate a physics-based, dynamic generalization of the model <ref> [17] </ref>. In the sequel, we will discuss only D-NURBS surfaces (we can consider D-NURBS curves as a special case with a simpler expression in fewer variables). <p> The augmented Lagrangian method [18] combines the Lagrange multipliers with the simpler penalty method [26]. One of the best known techniques for applying constraints to dynamic models is the Baumgarte stabilization method [1] which solves constrained equations of motion through linear feedback control (see also <ref> [17, 25] </ref>). We augment (17) as follows: M p + D _ p + Kp = f p I _ p C &gt; where C &gt; p are generalized forces stemming from the holonomic constraint equations.
Reference: [18] <author> M. Minoux. </author> <title> Mathematical Programming. </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1986. </year>
Reference-contexts: This approach increases the number of degrees of freedom, hence the computational cost, by adding unknowns i |also known as Lagrange multipliers| which determine the magnitudes of the constraint forces. The method is applied to the B-spline model in [6, 42]. The augmented Lagrangian method <ref> [18] </ref> combines the Lagrange multipliers with the simpler penalty method [26]. One of the best known techniques for applying constraints to dynamic models is the Baumgarte stabilization method [1] which solves constrained equations of motion through linear feedback control (see also [17, 25]).
Reference: [19] <author> H.P. Moreton and C.H. Sequin. </author> <title> Functional optimization for fair surface design. </title> <journal> Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 167-176, </pages> <year> 1992. </year> <journal> Published in ACM Transactions on Graphics, </journal> <volume> 13(2), </volume> <month> April, </month> <year> 1994, </year> <pages> 103-136. 31 </pages>
Reference-contexts: For the elastic potential energy of D-NURBS, we can adopt the thin-plate under tension energy model [35], which was also used in [5, 42] (other energies are possible, including the nonquadratic, curvature-based Published in ACM Transactions on Graphics, 13 (2), April, 1994, 103-136. 8 energies in <ref> [36, 19] </ref>): U = 2 ff 1;1 @u @u @s &gt; @s +fi 1;1 @u 2 @u 2 + fi 1;2 @u@v @u@v @ 2 s &gt; @ 2 s ! 1 p &gt; Kp: (15) The ff i;j (u; v) and fi i;j (u; v) are elasticity functions which control
Reference: [20] <author> A. Pentland and J. Williams. </author> <title> Good vibrations: Modal dynamics for graphics and animation. </title> <journal> Computer Graphics, </journal> <volume> 23(3) </volume> <pages> 215-222, </pages> <year> 1989. </year>
Reference-contexts: The incremental manipulation of local shape parameters to satisfy complex local and global shape constraints is at best cumbersome and often unproductive. Physics-based modeling provides a means to overcome these drawbacks. Free-form deformable models, which were introduced to computer graphics in [37] and further developed in <ref> [36, 26, 33, 20, 34, 17] </ref> are particularly relevant in the context of modeling with NURBS. Important advantages accrue from the deformable model approach [36]: * The behavior of the deformable model is governed by physical laws.
Reference: [21] <author> L. Piegl. </author> <title> Modifying the shape of rational B-splines. </title> <booktitle> part 1:curves. Computer-Aided Design, </booktitle> <volume> 21(8) </volume> <pages> 509-518, </pages> <year> 1989. </year>
Reference-contexts: It offers a unified mathematical formulation for representing not only free-form curves and surfaces, but also standard analytic shapes such as conics, quadrics, and surfaces of revolution. By adjusting the positions of control points and manipulating associated weights, one can design a large variety of shapes using NURBS <ref> [10, 12, 24, 21, 22, 23, 39] </ref>. <p> We then describe their analytic and geometric properties. More detailed material can be found in <ref> [4, 24, 21, 22, 23, 39] </ref>. 3.1 Curves A NURBS curve generalizes the B-spline. <p> The spline is attracted toward a control point more if the corresponding weight is increased and less if the weight is decreased. For a more detailed discussion of NURBS properties, see <ref> [23, 24, 39, 12, 21, 22] </ref>. The most frequently used NURBS design techniques are the specification of a control polygon, or interpolation or approximation of data points to generate the initial shape. For surfaces or solids, cross-sectional design including skinning, sweeping, and swinging operations is also popular.
Reference: [22] <author> L. Piegl. </author> <title> Modifying the shape of rational B-splines. </title> <booktitle> part 2:surfaces. Computer-Aided Design, </booktitle> <volume> 21(9) </volume> <pages> 538-546, </pages> <year> 1989. </year>
Reference-contexts: It offers a unified mathematical formulation for representing not only free-form curves and surfaces, but also standard analytic shapes such as conics, quadrics, and surfaces of revolution. By adjusting the positions of control points and manipulating associated weights, one can design a large variety of shapes using NURBS <ref> [10, 12, 24, 21, 22, 23, 39] </ref>. <p> We then describe their analytic and geometric properties. More detailed material can be found in <ref> [4, 24, 21, 22, 23, 39] </ref>. 3.1 Curves A NURBS curve generalizes the B-spline. <p> The spline is attracted toward a control point more if the corresponding weight is increased and less if the weight is decreased. For a more detailed discussion of NURBS properties, see <ref> [23, 24, 39, 12, 21, 22] </ref>. The most frequently used NURBS design techniques are the specification of a control polygon, or interpolation or approximation of data points to generate the initial shape. For surfaces or solids, cross-sectional design including skinning, sweeping, and swinging operations is also popular.
Reference: [23] <author> L. Piegl. </author> <title> On NURBS: A survey. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 11(1) </volume> <pages> 55-71, </pages> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: 1 Introduction In 1975 Versprille [40] proposed the Non-Uniform Rational B-Splines or NURBS. This shape representation for geometric design generalized Riesenfeld's B-splines. NURBS quickly gained popularity and were incorporated into several commercial modeling systems <ref> [23] </ref>. The NURBS representation has several attractive properties. It offers a unified mathematical formulation for representing not only free-form curves and surfaces, but also standard analytic shapes such as conics, quadrics, and surfaces of revolution. <p> It offers a unified mathematical formulation for representing not only free-form curves and surfaces, but also standard analytic shapes such as conics, quadrics, and surfaces of revolution. By adjusting the positions of control points and manipulating associated weights, one can design a large variety of shapes using NURBS <ref> [10, 12, 24, 21, 22, 23, 39] </ref>. <p> We then describe their analytic and geometric properties. More detailed material can be found in <ref> [4, 24, 21, 22, 23, 39] </ref>. 3.1 Curves A NURBS curve generalizes the B-spline. <p> The spline is attracted toward a control point more if the corresponding weight is increased and less if the weight is decreased. For a more detailed discussion of NURBS properties, see <ref> [23, 24, 39, 12, 21, 22] </ref>. The most frequently used NURBS design techniques are the specification of a control polygon, or interpolation or approximation of data points to generate the initial shape. For surfaces or solids, cross-sectional design including skinning, sweeping, and swinging operations is also popular.
Reference: [24] <author> L. Piegl and W. Tiller. </author> <title> Curve and surface constructions using rational B-splines. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 19(9) </volume> <pages> 485-498, </pages> <year> 1987. </year>
Reference-contexts: It offers a unified mathematical formulation for representing not only free-form curves and surfaces, but also standard analytic shapes such as conics, quadrics, and surfaces of revolution. By adjusting the positions of control points and manipulating associated weights, one can design a large variety of shapes using NURBS <ref> [10, 12, 24, 21, 22, 23, 39] </ref>. <p> We then describe their analytic and geometric properties. More detailed material can be found in <ref> [4, 24, 21, 22, 23, 39] </ref>. 3.1 Curves A NURBS curve generalizes the B-spline. <p> The spline is attracted toward a control point more if the corresponding weight is increased and less if the weight is decreased. For a more detailed discussion of NURBS properties, see <ref> [23, 24, 39, 12, 21, 22] </ref>. The most frequently used NURBS design techniques are the specification of a control polygon, or interpolation or approximation of data points to generate the initial shape. For surfaces or solids, cross-sectional design including skinning, sweeping, and swinging operations is also popular.
Reference: [25] <author> J. Platt. </author> <title> A generalization of dynamic constraints. CVGIP: Graphical Models and Image Processing, </title> <booktitle> 54(6) </booktitle> <pages> 516-525, </pages> <year> 1992. </year>
Reference-contexts: The augmented Lagrangian method [18] combines the Lagrange multipliers with the simpler penalty method [26]. One of the best known techniques for applying constraints to dynamic models is the Baumgarte stabilization method [1] which solves constrained equations of motion through linear feedback control (see also <ref> [17, 25] </ref>). We augment (17) as follows: M p + D _ p + Kp = f p I _ p C &gt; where C &gt; p are generalized forces stemming from the holonomic constraint equations.
Reference: [26] <author> J. Platt and A. Barr. </author> <title> Constraints methods for flexible models. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 279-288, </pages> <year> 1988. </year>
Reference-contexts: The incremental manipulation of local shape parameters to satisfy complex local and global shape constraints is at best cumbersome and often unproductive. Physics-based modeling provides a means to overcome these drawbacks. Free-form deformable models, which were introduced to computer graphics in [37] and further developed in <ref> [36, 26, 33, 20, 34, 17] </ref> are particularly relevant in the context of modeling with NURBS. Important advantages accrue from the deformable model approach [36]: * The behavior of the deformable model is governed by physical laws. <p> The method is applied to the B-spline model in [6, 42]. The augmented Lagrangian method [18] combines the Lagrange multipliers with the simpler penalty method <ref> [26] </ref>. One of the best known techniques for applying constraints to dynamic models is the Baumgarte stabilization method [1] which solves constrained equations of motion through linear feedback control (see also [17, 25]).
Reference: [27] <author> W. Press, B. Flanney, S. Teukolsky, and W. Verttering. </author> <title> Nemerical Recipes: </title> <booktitle> The Art of Scientific Computing. </booktitle> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1986. </year>
Reference-contexts: Published in ACM Transactions on Graphics, 13 (2), April, 1994, 103-136. 12 6.2 Calculation of Element Matrices We evaluate the integral expressions for the matrices (12), (14), and (16) numerically using Gaussian quadrature <ref> [27] </ref>. We shall explain the computation of the element stiffness matrix; the computation of the mass and damping matrices follow suit. <p> In the interest of efficiency, we do not factorize the matrix expression on the left hand side of (29) in order to solve for p (t+t) . Instead, we employ the conjugate gradient method to obtain an iterative solution <ref> [27, 32] </ref>. To achieve interactive simulation rates, we limit the number of conjugate gradient iterations per time step to 10. We have observed that 2 iterations typically suffice to converge to a residual of less than 10 3 . <p> While this does not destroy the correctness of Gauss quadrature, we can expect reduced accuracy since the integrand is not smooth. There is no easy way around this potential problem for arbitrary boundary curves, other than to use Monte Carlo integration and pay the penalty of slow asymptotic convergence <ref> [27] </ref>. Fortunately, in practice, the D-NURBS model appears tolerant of the reduced integration accuracy in boundary elements. Fig. 1 illustrates the trimming of D-NURBS surfaces using D-NURBS trimming curves in the parametric domain.
Reference: [28] <author> L.L. Schumaker. </author> <title> Fitting surfaces to scattered data. </title> <editor> In G.G. Lorentz, C.K. Chui, and L.L. Schumaker, editors, </editor> <booktitle> Approximation Theory II, </booktitle> <pages> pages 203-267. </pages> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1976. </year>
Reference-contexts: The above rounding technique is easily extensible to any number of surfaces meeting at arbitrary angles. To round a complete solid, we can apply the technique to all of its edges, corners, etc. 7.4 Optimal Surface Fitting D-NURBS are applicable to the optimal fitting of regular or scattered data <ref> [28] </ref>. The most general and often most useful case occurs with scattered data, when there are fewer or more data points than unknowns|i.e., when the solution is underdetermined or overdetermined by the data.
Reference: [29] <author> T.W. Sederberg, P. Gao, G. Wang, and H. </author> <title> Mu. 2-D shape blending: An intrinsic solution to the vertex path problem. </title> <booktitle> In Computer Graphics Proceedings, Annual Conference Series, Proc. ACM Siggraph'93 (Anaheim, </booktitle> <address> CA, </address> <month> Aug., </month> <year> 1993), </year> <pages> pages 15-18, </pages> <year> 1993. </year>
Reference-contexts: Work on 3D shape blending includes [8, 16]. The blending of 2D shapes has widespread application in illustration, animation, etc., and simple (e.g., linear) interpolation techniques usually produce unsatisfactory results <ref> [29] </ref>. Shinagawa and Kunii [31] propose an method which interpolates differential properties of the 2D shape using the elastic surfaces of [37, 36]. Motivated by their approach, we propose a new technique which exploits the properties of D-NURBS surfaces. <p> Fig. 7 (b) shows a linear generalized cylinder obtained with high surface tension in the u direction: ff 1;1 = 1000 and ff 2;2 = fi i;j = 0. Note that the morphing ellipse shrinks as it rotates, a typical artifact of linear interpolation <ref> [29] </ref>. The rotational component can be preserved, however, by imposing a geometric constraint on the D-NURBS which creates a helical surface in the u direction of the cylinder, as shown in Fig. 7 (c). Here the only nonzero deformation energy parameter is the rigidity fi 1;1 = 1000.
Reference: [30] <author> T.W. Sederberg and S.R. Parry. </author> <title> Free-form deformation of solid geometric primitives. </title> <journal> Computer Graphics, </journal> <volume> 20(4) </volume> <pages> 151-160, </pages> <year> 1986. </year>
Reference-contexts: The shape is embedded in the spline and deformed by manipulating the spline's control points. Sederberg and Parry <ref> [30] </ref> popularized this concept of free-form deformation (FFD) in the graphics literature. We can arrive at a physics-based version of the FFD in which the object to be deformed is embedded in the D-NURBS "material" and deforms along with the deforming D-NURBS.
Reference: [31] <author> Y. </author> <title> Shinagawa and T.L. Kunii. The differential model: A model for animating transformation of objects using differential information. In T.L. </title> <editor> Kunii, editor, </editor> <booktitle> Modeling in Computer Graphics, </booktitle> <pages> pages 6-15. </pages> <publisher> Springer-Verlag, </publisher> <address> Tokyo, </address> <year> 1991. </year>
Reference-contexts: Work on 3D shape blending includes [8, 16]. The blending of 2D shapes has widespread application in illustration, animation, etc., and simple (e.g., linear) interpolation techniques usually produce unsatisfactory results [29]. Shinagawa and Kunii <ref> [31] </ref> propose an method which interpolates differential properties of the 2D shape using the elastic surfaces of [37, 36]. Motivated by their approach, we propose a new technique which exploits the properties of D-NURBS surfaces.
Reference: [32] <author> G. Strang. </author> <title> Introduction to Applied Mathematics. </title> <publisher> Wellesley-Cambridge Press, </publisher> <address> MA, </address> <year> 1986. </year>
Reference-contexts: 0 ; Although (22) looks more complicated than (17), its implementation is surprisingly straightforward in view of the sparseness of G and the reduced size of q. 5.3 Nonlinear Constraints It is possible to impose nonlinear geometric (equality) constraints C (p) = 0; (24) on D-NURBS through Lagrange multiplier techniques <ref> [32] </ref>. This approach increases the number of degrees of freedom, hence the computational cost, by adding unknowns i |also known as Lagrange multipliers| which determine the magnitudes of the constraint forces. The method is applied to the B-spline model in [6, 42]. <p> In the interest of efficiency, we do not factorize the matrix expression on the left hand side of (29) in order to solve for p (t+t) . Instead, we employ the conjugate gradient method to obtain an iterative solution <ref> [27, 32] </ref>. To achieve interactive simulation rates, we limit the number of conjugate gradient iterations per time step to 10. We have observed that 2 iterations typically suffice to converge to a residual of less than 10 3 .
Reference: [33] <author> R. Szeliski and D. Terzopoulos. </author> <title> From splines to fractals. </title> <journal> Computer Graphics, </journal> <volume> 23(3) </volume> <pages> 51-60, </pages> <year> 1989. </year>
Reference-contexts: The incremental manipulation of local shape parameters to satisfy complex local and global shape constraints is at best cumbersome and often unproductive. Physics-based modeling provides a means to overcome these drawbacks. Free-form deformable models, which were introduced to computer graphics in [37] and further developed in <ref> [36, 26, 33, 20, 34, 17] </ref> are particularly relevant in the context of modeling with NURBS. Important advantages accrue from the deformable model approach [36]: * The behavior of the deformable model is governed by physical laws. <p> The most general and often most useful case occurs with scattered data, when there are fewer or more data points than unknowns|i.e., when the solution is underdetermined or overdetermined by the data. In this case, D-NURBS can yield "optimal" solutions by minimizing the thin-plate under tension deformation energy <ref> [35, 33] </ref>. The surfaces are optimal in the sense that they provide the smoothest curve or surface (as measured by the deformation energy) which interpolates or approximates the data.
Reference: [34] <author> R. Szeliski and D. Tonnesen. </author> <title> Surface modeling with oriented particle systems. </title> <journal> Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 185-194, </pages> <year> 1992. </year>
Reference-contexts: The incremental manipulation of local shape parameters to satisfy complex local and global shape constraints is at best cumbersome and often unproductive. Physics-based modeling provides a means to overcome these drawbacks. Free-form deformable models, which were introduced to computer graphics in [37] and further developed in <ref> [36, 26, 33, 20, 34, 17] </ref> are particularly relevant in the context of modeling with NURBS. Important advantages accrue from the deformable model approach [36]: * The behavior of the deformable model is governed by physical laws. <p> The force f (u; v; t) in the D-NURBS equation of motion represents the net effect of all applied forces. Typical force functions are spring forces, repulsion forces, gravitational forces, inflation forces, etc. <ref> [36, 6, 34] </ref>.
Reference: [35] <author> D. Terzopoulos. </author> <title> Regularization of inverse visual problems involving discontinuities. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 8(4) </volume> <pages> 413-424, </pages> <year> 1986. </year>
Reference-contexts: Shapes can be sculpted interactively using a variety of force-based "tools." * The equilibrium state of the dynamic model is characterized by a minimum of the potential energy of the model subject to imposed constraints <ref> [35] </ref>. <p> The dissipation energy is F = 2 fl _ s &gt; _ s du dv = 2 where D (p) = flJ &gt; J du dv (14) is the damping matrix. For the elastic potential energy of D-NURBS, we can adopt the thin-plate under tension energy model <ref> [35] </ref>, which was also used in [5, 42] (other energies are possible, including the nonquadratic, curvature-based Published in ACM Transactions on Graphics, 13 (2), April, 1994, 103-136. 8 energies in [36, 19]): U = 2 ff 1;1 @u @u @s &gt; @s +fi 1;1 @u 2 @u 2 + fi 1;2 <p> The most general and often most useful case occurs with scattered data, when there are fewer or more data points than unknowns|i.e., when the solution is underdetermined or overdetermined by the data. In this case, D-NURBS can yield "optimal" solutions by minimizing the thin-plate under tension deformation energy <ref> [35, 33] </ref>. The surfaces are optimal in the sense that they provide the smoothest curve or surface (as measured by the deformation energy) which interpolates or approximates the data. <p> For the special case of zero-mean Gaussian data errors, optimal approximation in the least squares residual sense results when c is proportional to the inverse variance of data errors <ref> [35] </ref>. Published in ACM Transactions on Graphics, 13 (2), April, 1994, 103-136. 19 (a1) (a2) (c1) (c2) a convex/concave surface, (c) a sinusoidal surface. (a-c1) D-NURBS patch outline with control points (white) and data points (red) shown. (a-c2) D-NURBS surface at equilibrium fitted to scattered data points.
Reference: [36] <author> D. Terzopoulos and K. Fleischer. </author> <title> Deformable models. </title> <journal> The Visual Computer, </journal> <volume> 4(6) </volume> <pages> 306-331, </pages> <year> 1988. </year>
Reference-contexts: The incremental manipulation of local shape parameters to satisfy complex local and global shape constraints is at best cumbersome and often unproductive. Physics-based modeling provides a means to overcome these drawbacks. Free-form deformable models, which were introduced to computer graphics in [37] and further developed in <ref> [36, 26, 33, 20, 34, 17] </ref> are particularly relevant in the context of modeling with NURBS. Important advantages accrue from the deformable model approach [36]: * The behavior of the deformable model is governed by physical laws. <p> Physics-based modeling provides a means to overcome these drawbacks. Free-form deformable models, which were introduced to computer graphics in [37] and further developed in [36, 26, 33, 20, 34, 17] are particularly relevant in the context of modeling with NURBS. Important advantages accrue from the deformable model approach <ref> [36] </ref>: * The behavior of the deformable model is governed by physical laws. Through a computational physics simulation, the model responds dynamically to applied simulated forces in a natural and predictable way. <p> Section 7 describes our prototype D-NURBS modeling system and presents applications and results. Section 8 concludes the article. 2 Background Dynamic NURBS are motivated by prior research aimed at applying the deformable modeling approach to shape design. Terzopoulos and Fleischer <ref> [36] </ref> demonstrated simple interactive sculpting using viscoelastic and plastic models. Celniker and Gossard [5] developed an interesting prototype system for interactive free-form design based on the finite-element optimization of energy functionals proposed in [36]. <p> Terzopoulos and Fleischer <ref> [36] </ref> demonstrated simple interactive sculpting using viscoelastic and plastic models. Celniker and Gossard [5] developed an interesting prototype system for interactive free-form design based on the finite-element optimization of energy functionals proposed in [36]. Bloor and Wilson [3] developed related models using similar energies and numerical optimization, and in [2] they proposed the use of B-splines for this purpose. Subsequently, Celniker and Welch [6] investigated deformable B-splines with linear constraints. <p> The Lagrangian equations of motion are then expressed as d @T @p i @F + @p i Variants of this equation have served as the basis for deformable model formulations <ref> [36] </ref>. Using (10), we can take an arbitrary geometric model, such as a NURBS, introduce appropriate kinetic, potential, and dissipation energies, and systematically formulate a physics-based, dynamic generalization of the model [17]. <p> For the elastic potential energy of D-NURBS, we can adopt the thin-plate under tension energy model [35], which was also used in [5, 42] (other energies are possible, including the nonquadratic, curvature-based Published in ACM Transactions on Graphics, 13 (2), April, 1994, 103-136. 8 energies in <ref> [36, 19] </ref>): U = 2 ff 1;1 @u @u @s &gt; @s +fi 1;1 @u 2 @u 2 + fi 1;2 @u@v @u@v @ 2 s &gt; @ 2 s ! 1 p &gt; Kp: (15) The ff i;j (u; v) and fi i;j (u; v) are elasticity functions which control <p> The force f (u; v; t) in the D-NURBS equation of motion represents the net effect of all applied forces. Typical force functions are spring forces, repulsion forces, gravitational forces, inflation forces, etc. <ref> [36, 6, 34] </ref>. <p> The blending of 2D shapes has widespread application in illustration, animation, etc., and simple (e.g., linear) interpolation techniques usually produce unsatisfactory results [29]. Shinagawa and Kunii [31] propose an method which interpolates differential properties of the 2D shape using the elastic surfaces of <ref> [37, 36] </ref>. Motivated by their approach, we propose a new technique which exploits the properties of D-NURBS surfaces. D-NURBS provide minimal-energy blends which are more general than linear interpolants and which may be controlled through various additional constraints specific to the NURBS geometry.
Reference: [37] <author> D. Terzopoulos, J. Platt, A. Barr, and K. Fleischer. </author> <title> Elastically deformable models. </title> <journal> Computer Graphics, </journal> <volume> 21(4) </volume> <pages> 205-214, </pages> <year> 1987. </year>
Reference-contexts: The incremental manipulation of local shape parameters to satisfy complex local and global shape constraints is at best cumbersome and often unproductive. Physics-based modeling provides a means to overcome these drawbacks. Free-form deformable models, which were introduced to computer graphics in <ref> [37] </ref> and further developed in [36, 26, 33, 20, 34, 17] are particularly relevant in the context of modeling with NURBS. Important advantages accrue from the deformable model approach [36]: * The behavior of the deformable model is governed by physical laws. <p> The blending of 2D shapes has widespread application in illustration, animation, etc., and simple (e.g., linear) interpolation techniques usually produce unsatisfactory results [29]. Shinagawa and Kunii [31] propose an method which interpolates differential properties of the 2D shape using the elastic surfaces of <ref> [37, 36] </ref>. Motivated by their approach, we propose a new technique which exploits the properties of D-NURBS surfaces. D-NURBS provide minimal-energy blends which are more general than linear interpolants and which may be controlled through various additional constraints specific to the NURBS geometry.
Reference: [38] <author> J.A. Thingvold and E. Cohen. </author> <title> Physical modeling with B-spline surfaces for interactive design and animation. </title> <journal> Computer Graphics, </journal> <volume> 24(2) </volume> <pages> 129-137, </pages> <year> 1990. </year> <title> Proceedings, 1990 Symposium on Interactive 3D Graphics. </title> <journal> Published in ACM Transactions on Graphics, </journal> <volume> 13(2), </volume> <month> April, </month> <year> 1994, </year> <pages> 103-136. 32 </pages>
Reference-contexts: Subsequently, Celniker and Welch [6] investigated deformable B-splines with linear constraints. Welch and Witkin [42] extended the approach to trimmed hierarchical B-splines (see also [13]). Thingvold and Cohen <ref> [38] </ref> proposed a deformable B-spline whose control points are mass points connected by elastic springs and hinges. In [2, 6, 42] deformable B-spline curves and surfaces are designed by imposing shape criteria via the minimization of energy functionals subject to hard or soft geometric constraints. <p> Our approach is systematic. We formulate deformable curves and surfaces and reduce them to algorithms in a principled way, without resorting to any of the ad hoc assumptions of prior schemes (c.f. <ref> [38] </ref>). Because our dynamic models allow fully continuous mass and damping distributions, we obtain banded mass and damping matrices. These are known as consistent matrices in the finite element literature [43]. The D-NURBS control points and associated weights become generalized coordinates in the Lagrangian equations of motion.
Reference: [39] <author> W. Tiller. </author> <title> Rational B-splines for curve and surface representation. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 3(6) </volume> <pages> 61-69, </pages> <month> Sept. </month> <year> 1983. </year>
Reference-contexts: It offers a unified mathematical formulation for representing not only free-form curves and surfaces, but also standard analytic shapes such as conics, quadrics, and surfaces of revolution. By adjusting the positions of control points and manipulating associated weights, one can design a large variety of shapes using NURBS <ref> [10, 12, 24, 21, 22, 23, 39] </ref>. <p> We then describe their analytic and geometric properties. More detailed material can be found in <ref> [4, 24, 21, 22, 23, 39] </ref>. 3.1 Curves A NURBS curve generalizes the B-spline. <p> The spline is attracted toward a control point more if the corresponding weight is increased and less if the weight is decreased. For a more detailed discussion of NURBS properties, see <ref> [23, 24, 39, 12, 21, 22] </ref>. The most frequently used NURBS design techniques are the specification of a control polygon, or interpolation or approximation of data points to generate the initial shape. For surfaces or solids, cross-sectional design including skinning, sweeping, and swinging operations is also popular.
Reference: [40] <author> K.J. Versprille. </author> <title> Computer-Aided Design Applications of the Rational B-Spline Approximation form. </title> <type> PhD thesis, </type> <institution> Syracuse University, </institution> <year> 1975. </year>
Reference-contexts: 1 Introduction In 1975 Versprille <ref> [40] </ref> proposed the Non-Uniform Rational B-Splines or NURBS. This shape representation for geometric design generalized Riesenfeld's B-splines. NURBS quickly gained popularity and were incorporated into several commercial modeling systems [23]. The NURBS representation has several attractive properties.
Reference: [41] <author> G. Wahba. </author> <title> Spline Models for Observational Data. </title> <publisher> SIAM, </publisher> <address> Philadelphia, PA, </address> <year> 1990. </year>
Reference-contexts: The red closed D-NURBS curve has 7 control points and the green open D-NURBS curve has 5 control points. The glass is interactively sculpted into different swept shapes using spring forces (Fig. 6 (b-d)). 5 Cross-validation <ref> [41] </ref> provides a principled approach to choosing the relevant physical parameters|typically the ratio of data force spring constants to surface stiffnesses|for given data sets.
Reference: [42] <author> W. Welch and A. Witkin. </author> <title> Variational surface modeling. </title> <journal> Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 157-166, </pages> <year> 1992. </year>
Reference-contexts: Bloor and Wilson [3] developed related models using similar energies and numerical optimization, and in [2] they proposed the use of B-splines for this purpose. Subsequently, Celniker and Welch [6] investigated deformable B-splines with linear constraints. Welch and Witkin <ref> [42] </ref> extended the approach to trimmed hierarchical B-splines (see also [13]). Thingvold and Cohen [38] proposed a deformable B-spline whose control points are mass points connected by elastic springs and hinges. <p> Subsequently, Celniker and Welch [6] investigated deformable B-splines with linear constraints. Welch and Witkin [42] extended the approach to trimmed hierarchical B-splines (see also [13]). Thingvold and Cohen [38] proposed a deformable B-spline whose control points are mass points connected by elastic springs and hinges. In <ref> [2, 6, 42] </ref> deformable B-spline curves and surfaces are designed by imposing shape criteria via the minimization of energy functionals subject to hard or soft geometric constraints. These constraints are imposed through Lagrange multipliers or penalty methods, respectively. The same techniques are applicable to D-NURBS. <p> For the elastic potential energy of D-NURBS, we can adopt the thin-plate under tension energy model [35], which was also used in <ref> [5, 42] </ref> (other energies are possible, including the nonquadratic, curvature-based Published in ACM Transactions on Graphics, 13 (2), April, 1994, 103-136. 8 energies in [36, 19]): U = 2 ff 1;1 @u @u @s &gt; @s +fi 1;1 @u 2 @u 2 + fi 1;2 @u@v @u@v @ 2 s &gt; <p> This approach increases the number of degrees of freedom, hence the computational cost, by adding unknowns i |also known as Lagrange multipliers| which determine the magnitudes of the constraint forces. The method is applied to the B-spline model in <ref> [6, 42] </ref>. The augmented Lagrangian method [18] combines the Lagrange multipliers with the simpler penalty method [26]. One of the best known techniques for applying constraints to dynamic models is the Baumgarte stabilization method [1] which solves constrained equations of motion through linear feedback control (see also [17, 25]).
Reference: [43] <author> O.C. Zienkiewicz. </author> <title> The Finite Element Method. </title> <publisher> McGraw-Hill, </publisher> <address> London, third edition, </address> <year> 1977. </year>
Reference-contexts: Because our dynamic models allow fully continuous mass and damping distributions, we obtain banded mass and damping matrices. These are known as consistent matrices in the finite element literature <ref> [43] </ref>. The D-NURBS control points and associated weights become generalized coordinates in the Lagrangian equations of motion. From a physics-based modeling point of view, the existence of weights makes the NURBS geometry substantially more challenging than B-spline geometry. <p> We cannot obtain an analytical solution in general. An efficient numerical implementation of D-NURBS is possible, however, through the use of techniques from finite-element analysis [15]. Standard finite element codes assemble individual element matrices into the global matrices that appear in the discrete equations of motion <ref> [43, 15] </ref>. Despite the fact that the global matrices are stored using efficient sparse matrix storage schemes (which maintain only the entries needed for matrix factorization), matrix assembly and matrix-vector multiplications quickly become too costly, particularly for D-NURBS surfaces with high dimensional p.
References-found: 43

