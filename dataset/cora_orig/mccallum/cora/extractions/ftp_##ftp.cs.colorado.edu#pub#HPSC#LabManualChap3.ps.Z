URL: ftp://ftp.cs.colorado.edu/pub/HPSC/LabManualChap3.ps.Z
Refering-URL: http://www.cs.colorado.edu/current/courses/materials.hpsc.html
Root-URL: http://www.cs.colorado.edu
Title: Lab 3 Measuring Operation Time 3.1 Introduction  
Keyword: 3.2 Measuring operation time  
Note: 53  
Abstract: In this chapter, we study the performance of the DECstation 5000 Model 240. We measure the time it takes to perform the basic operations of arithmetic, and we use these measurements to try to predict the time to do vector operations in linear algebra. We then measure the time to do the vector operations and compare the results with predictions. For this work, you should read the Computer Performance tutorial [Fosdick et al. 95]. In Unix environments, there are many tools for measuring time. The Unix command, man -k time, provides a pretty long list. In the examples and exercises that follow, we use the Fortran intrinsic procedure, ETIME. This procedure gives the time, in seconds, that your process has used since it started. 1 It provides two components of the time used by your process, user time and system time. This procedure is typically used with Fortran programs. A similar procedure named ctime is used with C programs. We embed ETIME in our Fortran function, MYTIME, shown in fig. 3.1. This arrangement makes it easy to replace ETIME by some other function, since our 
Abstract-found: 1
Intro-found: 1
Reference: [DEC 91] <institution> Digital Equipment Corporation, </institution> <address> Palo Alto, CA 94301. </address> <month> [Dec </month> <year> 1991]. </year> <title> DECstation 5000 Model 240: </title> <type> Technical Overview. </type>
Reference-contexts: This system uses a MIPS R3000 CPU and R3010 FPU chipset <ref> [Kane 88, DEC 91] </ref>, operating at 40 MHz (25 nsec cycle time). Thus we can expect that arithmetic operations require some small multiple of 25 nsec. As we have already observed, the granularity of the clock we use to measure time is only 1 256 seconds, or about 4 msec.
Reference: [Fosdick & Jessup 95] <author> FOSDICK, LLOYD D. AND ELIZABETH R. JESSUP. </author> <year> [1995]. </year> <title> An overview of scientific computing. </title> <booktitle> HPSC Course Notes. </booktitle>
Reference-contexts: Exercise 3.4.2 Following the pattern in add.f, write a program named mult.f to measure the time for the statement X = X*Y. CUBoulder : HPSC Course Notes Lab Manual Chapter 3 67 Using the table of arithmetic times for the DECstation 5000/240 in An Overview of Scientific Computing <ref> [Fosdick & Jessup 95] </ref>, estimate how long this program takes to run using the same values of NREP and NSAMP as in Example 3.4.1. You need to be careful about the values you use for the operands. A bad choice causes overflow or underflow.
Reference: [Fosdick et al. 95] <author> FOSDICK, LLOYD D., CAROLYN J. C. SCHAUBLE, AND ELIZABETH R. JESSUP. </author> <year> [1995]. </year> <title> Computer performance: An introduction. </title> <booktitle> HPSC Course Notes. </booktitle>
Reference-contexts: We then measure the time to do the vector operations and compare the results with predictions. For this work, you should read the Computer Performance tutorial <ref> [Fosdick et al. 95] </ref>. 3.2 Measuring operation time In Unix environments, there are many tools for measuring time. The Unix command, man -k time, provides a pretty long list. In the examples and exercises that follow, we use the Fortran intrinsic procedure, ETIME.
Reference: [Kane 88] <author> KANE, GERRY. </author> <year> [1988]. </year> <title> MIPS RISC Architecture. </title> <publisher> Prentice-Hall, Inc., </publisher> <address> Englewood Cliffs, NJ. </address> <note> CUBoulder : HPSC Course Notes Lab Manual Chapter 3 75 </note>
Reference-contexts: This system uses a MIPS R3000 CPU and R3010 FPU chipset <ref> [Kane 88, DEC 91] </ref>, operating at 40 MHz (25 nsec cycle time). Thus we can expect that arithmetic operations require some small multiple of 25 nsec. As we have already observed, the granularity of the clock we use to measure time is only 1 256 seconds, or about 4 msec.

References-found: 4

