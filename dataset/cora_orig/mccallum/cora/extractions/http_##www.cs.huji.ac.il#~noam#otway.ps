URL: http://www.cs.huji.ac.il/~noam/otway.ps
Refering-URL: http://www.cs.huji.ac.il/~noam/papers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: On Read-Once vs. Multiple Access to Randomness in Logspace  
Author: Noam Nisan 
Date: June 15, 1995  
Abstract: In the "correct" definition of randomized space-bounded computation, the machine has access to a random coin. The coin can be flipped at will, but outcomes of previous coin flips cannot be recalled unless they are saved in the machine's limited memory. In contrast to this read-once mechanism of accessing the random source, one may consider Turing machines which have access to a random tape. Here, the random bits may be multiply accessed by the machine. In this note we show a very concrete sense in which multiple access to the random bits is better than read-once access to them: Every language accepted with bounded 2-sided error by a read-once-randomized Logspace machine, can be accepted with zero error by a randomized Logspace machine having multiple access to the random bits. Finally we characterize the class of languages that can be accepted with two-sided error by randomized Logspace machines with multiple access to the random bits as exactly the class of languages that are in Logspace relative to almost every oracle. 
Abstract-found: 1
Intro-found: 1
Reference: [Adl78] <author> L. Adleman. </author> <title> Two theorems on random polynomial time. </title> <booktitle> In 19 th Annual Symposium on Foundations of Computer Science, </booktitle> <address> Ann Arbor, </address> <publisher> Michigan, </publisher> <pages> pages 75-83, </pages> <year> 1978. </year>
Reference-contexts: It is interesting to note that, analogous to the case of randomized polynomial time computation, all of the above mentioned classes can be simulated 3 non unif ormly in Logspace (using the techniques of <ref> [Adl78] </ref>). I.e. we have even for the largest class, BP fl L, that BP fl L L=poly. In this paper we thus only discuss uniform simulations and classes.
Reference: [BCD*89] <author> A. Borodin, S.A. Cook, P.W. Dymond, W.L. Ruzzo, and M. Tompa. </author> <title> Two applications of inductive counting for complementation problems. </title> <journal> SIAM J. Comput., </journal> <volume> 18(3) </volume> <pages> 559-578, </pages> <year> 1989. </year>
Reference-contexts: In this paper we focus our attention on this last issue: the access to randomness. For discussion of some of the other issues, and of the various 2 complexity classes defined by the different choices, we refer the reader e.g. to <ref> [BCD*89, Gil77, BCP83, KV85, RST84, Hon80] </ref>. In this note we only consider machines which halt always, i.e. machines with running time which is at most singly exponential in the space bound. <p> Most of our discussion will be focused on Logspace machines and the classes obtained by them: ZP L, RL, BP L, ZP fl L, R fl L, BP fl L (Note: in <ref> [BCD*89] </ref> the first three classes are denoted by ZP LP , RLP , and BP LP resp.). Everything which we say, however, applies to any other "nice" (e.g. space constructible) space bound. <p> Theorem 1 BP L ZP fl L. One immediate corollary regarding standard complexity classes is: Theorem 2 BP L ZP AC 1 . In fact, a slightly better simulation is implied, namely in the class ZP SAC 1 (see, e.g., <ref> [BCD*89] </ref> for a definition). The best deterministic simulation of BP L known is BP L DET N C 2 due to [BCP83].
Reference: [BCP83] <author> A. Bordin, S. Cook, and N. Pippenger. </author> <title> Parallel computation for well-endowed rings and space-bounded probabilistic machines. </title> <journal> Information and Control, </journal> <volume> 58 </volume> <pages> 113-136, </pages> <year> 1983. </year>
Reference-contexts: In this paper we focus our attention on this last issue: the access to randomness. For discussion of some of the other issues, and of the various 2 complexity classes defined by the different choices, we refer the reader e.g. to <ref> [BCD*89, Gil77, BCP83, KV85, RST84, Hon80] </ref>. In this note we only consider machines which halt always, i.e. machines with running time which is at most singly exponential in the space bound. <p> It is, in fact, reasonable to conjecture that RL does not contain RN C 1 . Consider also the deterministic simulation of randomized Logspace: it is well known that ZP L, RL, and BP L can all be simulated in polynomial time <ref> [BCP83] </ref>. It is not known, however, whether BP fl L, R fl L or even ZP fl L can be simulated in polynomial time (or indeed even in sub-exponential time). In fact, it is reasonable to conjecture that these classes are not contained in P . <p> In fact, a slightly better simulation is implied, namely in the class ZP SAC 1 (see, e.g., [BCD*89] for a definition). The best deterministic simulation of BP L known is BP L DET N C 2 due to <ref> [BCP83] </ref>.
Reference: [BG81] <author> C.H. Bennett and J. Gill. </author> <title> Relative to a random oracle a, p a 6= np a 6= co np a with probability 1. </title> <journal> SIAM J. Comput., </journal> <volume> 10 </volume> <pages> 96-113, </pages> <year> 1981. </year>
Reference: [BNS89] <author> L. Babai, N. Nisan, and M. Szegedy. </author> <title> Multiparty protocols and logspace-hard pseudorandom sequences. </title> <booktitle> In Proceedings of the 21 st Annual ACM Symposium on Theory of Computing, Seattle, Wash-ington, </booktitle> <pages> pages 1-11, </pages> <year> 1989. </year>
Reference-contexts: In fact, a slightly better simulation is implied, namely in the class ZP SAC 1 (see, e.g., [BCD*89] for a definition). The best deterministic simulation of BP L known is BP L DET N C 2 due to [BCP83]. In <ref> [BNS89, Nis90] </ref> a different way in which multiple access to randomness is better than read-once access is demonstrated: Logspace algorithms using a polynomial number of random bits in a read-once fashion may be simulated by a randomized Logspace algorithm which uses only O (log 2 n) random bits but with multiple
Reference: [Gil77] <author> J. Gill. </author> <title> Computational complexity of probabilistic turing machines. </title> <journal> SIAM J. Comput., </journal> <volume> 6 </volume> <pages> 675-695, </pages> <year> 1977. </year>
Reference-contexts: In this paper we focus our attention on this last issue: the access to randomness. For discussion of some of the other issues, and of the various 2 complexity classes defined by the different choices, we refer the reader e.g. to <ref> [BCD*89, Gil77, BCP83, KV85, RST84, Hon80] </ref>. In this note we only consider machines which halt always, i.e. machines with running time which is at most singly exponential in the space bound.
Reference: [Hon80] <author> J.W. Hong. </author> <title> On similarity and duality of computation. </title> <booktitle> In 21 th Annual Symposium on Foundations of Computer Science, </booktitle> <address> Syracuse, New York, </address> <pages> pages 348-359, </pages> <year> 1980. </year>
Reference-contexts: In this paper we focus our attention on this last issue: the access to randomness. For discussion of some of the other issues, and of the various 2 complexity classes defined by the different choices, we refer the reader e.g. to <ref> [BCD*89, Gil77, BCP83, KV85, RST84, Hon80] </ref>. In this note we only consider machines which halt always, i.e. machines with running time which is at most singly exponential in the space bound.
Reference: [Imm88] <author> N. Immerman. </author> <title> Nondeterministic space is closed under complementation. </title> <journal> SIAM J. Comp., </journal> <volume> 17 </volume> <pages> 935-938, </pages> <year> 1988. </year>
Reference: [KV85] <author> M. Karpinski and R. </author> <title> Verbeek. There is no polynomial deterministic space simulation of probabilistic space with two-way random-tape generator. </title> <journal> Information and Control, </journal> <volume> 67 </volume> <pages> 158-162, </pages> <year> 1985. </year>
Reference-contexts: In this paper we focus our attention on this last issue: the access to randomness. For discussion of some of the other issues, and of the various 2 complexity classes defined by the different choices, we refer the reader e.g. to <ref> [BCD*89, Gil77, BCP83, KV85, RST84, Hon80] </ref>. In this note we only consider machines which halt always, i.e. machines with running time which is at most singly exponential in the space bound.
Reference: [Nis90] <author> N. Nisan. </author> <title> Psuedorandom generators for space-bounded computation. </title> <booktitle> In Proceedings of the 22 st Annual ACM Symposium on Theory of Computing, </booktitle> <year> 1990. </year> <month> 12 </month>
Reference-contexts: In fact, a slightly better simulation is implied, namely in the class ZP SAC 1 (see, e.g., [BCD*89] for a definition). The best deterministic simulation of BP L known is BP L DET N C 2 due to [BCP83]. In <ref> [BNS89, Nis90] </ref> a different way in which multiple access to randomness is better than read-once access is demonstrated: Logspace algorithms using a polynomial number of random bits in a read-once fashion may be simulated by a randomized Logspace algorithm which uses only O (log 2 n) random bits but with multiple
Reference: [NW88] <author> N. Nisan and A. Wigderson. </author> <title> Hardness vs. randomness. </title> <booktitle> In 29 th Annual Symposium on Foundations of Computer Science, </booktitle> <address> White Plains, New York, </address> <pages> pages 2-12, </pages> <month> October </month> <year> 1988. </year>
Reference-contexts: It is left to construct such a generator G in Logspace. We use the construction from <ref> [NW88] </ref>. It should be noted that the reason that this construction works is different from the reason that the construction works in [NW88]; here we only require that it is n c -wise independent and that it is easy to compute. <p> It is left to construct such a generator G in Logspace. We use the construction from <ref> [NW88] </ref>. It should be noted that the reason that this construction works is different from the reason that the construction works in [NW88]; here we only require that it is n c -wise independent and that it is easy to compute. Our random seed x is a p by p array of bits where p is the smallest prime number greater than n 2c .
Reference: [RST84] <author> W.L. Ruzzo, J. Simon, and M. Tompa. </author> <title> Space-bounded hierarchies and probabilistic computation. </title> <journal> J. Comp. and Syst. Sci., </journal> <volume> 28(2) </volume> <pages> 216-230, </pages> <year> 1984. </year>
Reference-contexts: It is possible for these kinds of machines to run for an expected time which is doubly exponential in the space bound. (Note: a condition requiring the machine to halt with probability one gives the same class. See e.g. <ref> [RST84] </ref>.) 3. Access to randomness * Read-once: The machine may flip a random coin at any point. <p> In this paper we focus our attention on this last issue: the access to randomness. For discussion of some of the other issues, and of the various 2 complexity classes defined by the different choices, we refer the reader e.g. to <ref> [BCD*89, Gil77, BCP83, KV85, RST84, Hon80] </ref>. In this note we only consider machines which halt always, i.e. machines with running time which is at most singly exponential in the space bound.
References-found: 12

