URL: http://www-icparc.doc.ic.ac.uk/papers/combining_constraint_network_and_causal_.ps
Refering-URL: http://www-icparc.doc.ic.ac.uk/papers.html
Root-URL: 
Title: Combining Constraint Network and Causal Theory to Solve Scheduling Problems from a CSP Perspective  
Author: Robert Rodosek 
Abstract: The Constraint Satisfaction Problem (CSP) is one of the areas of artificial intelligence where a significant amount of problem classification and complexity analysis has co-occurred. For a large class of scheduling problems, described in a CSP notation, we propose a hypergraph as an underlying structure. We show that using causal theories, based on the nature of constraints, can lead to a significant efficient improvement in solving this class of scheduling problems. The complexity of the new strategy is analyzed as well. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Berge, </author> <title> Hypergraphs, </title> <publisher> North Holland, </publisher> <address> Amsterdam, The Netherlands, </address> <year> 1989. </year>
Reference-contexts: Definition 4.1 (Hypergraph <ref> [1] </ref>). A hypergraph is an ordered pair (V; E) where V is a finite set of vertices and E is a set of edges, each of which is a subset of V .
Reference: [2] <author> R. Dechter and J. Pearl. </author> <title> Network-Based Heuristics for Constraint Satisfaction Problems. </title> <journal> Artificial Intelligence, </journal> <volume> 34, </volume> <year> 1988. </year>
Reference-contexts: Significant efficient improvement of solving this class of scheduling problems can be achieved by using causal theories. In [6] a hypergraph has been used as an underlying structure for CSPs with the emphasis on the decomposition. Dechter and Pearl in <ref> [2] </ref> introduced a heuristic scheme which attempts to improve the efficiency of finding a solution by decomposing a CSP into a number of subproblems. Furthermore, in [3] causal theory for CSPs is used on a graph, but not on a hypergraph. The paper is organized as follows.
Reference: [3] <author> R. Dechter and J. Pearl. </author> <title> Directed Constraint Networks: A relational Framework for Causal Modeling. </title> <booktitle> Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <year> 1991. </year>
Reference-contexts: 1 INTRODUCTION Solving scheduling problems have been considered lately by using a reductionist approach, based on constraint satisfaction techniques (see [4], [5]). Some work has also been done on solving CSPs using causal theories (see <ref> [3] </ref>). Specific types of constraints of scheduling problems can be used to efficiently improve the search when we use causal theories. Mostly, however, this approach has not yet been considered. This paper presents an efficient technique to simplify the search process. <p> In [6] a hypergraph has been used as an underlying structure for CSPs with the emphasis on the decomposition. Dechter and Pearl in [2] introduced a heuristic scheme which attempts to improve the efficiency of finding a solution by decomposing a CSP into a number of subproblems. Furthermore, in <ref> [3] </ref> causal theory for CSPs is used on a graph, but not on a hypergraph. The paper is organized as follows. First, the necessary terminology for scheduling problems and CSPs is introduced in Section 2. Afterwards, properties of constraints of scheduling problems assembled into CSPs are examined. <p> Definition 3.4 (k-backtrack-free CSP). A CSP is called k-backtrack-free along ordering = (i 1 ; :::; i n ) iff Note that 0-backtrack-freeness is the standard notation of backtrack-freeness as stated, e.g., in <ref> [3] </ref>. Planning, Scheduling and Reasoning about Actions 632 R. Rodosek Example 3.5 (A 3-backtracking).
Reference: [4] <author> M. S. Fox, N. Sadeh and C. Baykan. </author> <title> Constrained Heuristics Search. </title> <booktitle> Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <year> 1989. </year>
Reference-contexts: 1 INTRODUCTION Solving scheduling problems have been considered lately by using a reductionist approach, based on constraint satisfaction techniques (see <ref> [4] </ref>, [5]). Some work has also been done on solving CSPs using causal theories (see [3]). Specific types of constraints of scheduling problems can be used to efficiently improve the search when we use causal theories. Mostly, however, this approach has not yet been considered.
Reference: [5] <author> M. S. Fox and N. Sadeh. </author> <title> Why Is Scheduling Difficult? A CSP Perspective. </title> <booktitle> Proceedings of the National Conference on Artificial Intelligence, </booktitle> <year> 1990. </year>
Reference-contexts: 1 INTRODUCTION Solving scheduling problems have been considered lately by using a reductionist approach, based on constraint satisfaction techniques (see [4], <ref> [5] </ref>). Some work has also been done on solving CSPs using causal theories (see [3]). Specific types of constraints of scheduling problems can be used to efficiently improve the search when we use causal theories. Mostly, however, this approach has not yet been considered. <p> In Section 5, we present a new solution strategy for scheduling problems as well as analyze its complexity. Finally, Section 6 concludes the paper. 1 University of Munich, Department of Computer Science, There sienstrae 39, 80333 Munich, Germany 2 CONSTRAINT SATISFACTION PERSPECTIVE OF SCHEDULING 2.1 Scheduling Problems Scheduling problems <ref> [5] </ref> are generally defined by two basic sets, a set of activities and a set of resources, with some constraints over them. A solution of the scheduling problem is an assignment of a start time and a resource for each activity such that all specified constraints are satisfied.
Reference: [6] <author> P. Jeavons, D. Cohen and M. Gyssens. </author> <title> On the Decomposition of Hypergraphs. Technical Report, NATO Advanced Study Institute Constraint Programming, </title> <type> CS 57/93, </type> <institution> Institute of Cybernetics, Tallin, </institution> <year> 1993. </year>
Reference-contexts: We propose to use a hypergraph as an underlying structure for a large class of scheduling problems described in a CSP notation. Significant efficient improvement of solving this class of scheduling problems can be achieved by using causal theories. In <ref> [6] </ref> a hypergraph has been used as an underlying structure for CSPs with the emphasis on the decomposition. Dechter and Pearl in [2] introduced a heuristic scheme which attempts to improve the efficiency of finding a solution by decomposing a CSP into a number of subproblems. <p> Then H is called a hinge, if for i = 1; :::; m, there exists an edge h i in H such that S e " e2H e h i (see <ref> [6] </ref>). In words, a hinge of a hypergraph is a subset of its edges containing at least two edges such that each maximal connected subset intersects it within one of its edges. The minimal hinges are hinges which do not contain other hinges. <p> The minimal hinges are hinges which do not contain other hinges. A hypergraph is called m-cyclic if the size of the largest minimal hinge of it is equal to m. Lemma 5.2 (Complexity of CSPs <ref> [6] </ref>).
Reference: [7] <author> J. de-Kleer and J. S. Brown. </author> <title> Theories of Causal Ordering. </title> <journal> Artificial Intelligence, </journal> <volume> 29, </volume> <year> 1986. </year>
Reference-contexts: Good introduction to causal theories can be found in <ref> [7] </ref>. To characterize the cause-effect relationship by constraints, we introduce restricted CSPs where only some constraints are considered w.r.t. the scope. Definition 3.1 (Restricted CSP).
Reference: [8] <author> P. Meseguer. </author> <title> Constraint Satisfaction Problems: An Overview. </title> <journal> AICOM, </journal> <volume> Vol. 2, No. 1, </volume> <year> 1989. </year>
Reference-contexts: The activities a 3 and a 4 use different resources. The goal is to find a start time in time space <ref> [0; 8] </ref> and a resource for each activity such that the constraints are satisfied. <p> (r 2 ; r 1 ); (r 2 ; r 3 ); (r 3 ; r 1 ); (r 3 ; r 2 )g, and r (a; a 0 ) = R fi R for other pairs of activities a; a 0 2 A. 2.2 Constraint Satisfaction Problems A CSP <ref> [8] </ref> consists of a number of sets and a number of relations, i.e., constraints, on these sets. Each constraint specifies allowed combinations of values, one of each set. Finding a combination of values, namely a solution, which satisfies all constraints, is known to be an N P -complete problem. <p> In order to get a CSP where all constraints for each index i 2 N allow exactly the same values of the set D i , we reconsider the well-known definition of an arc-consistent CSP (see <ref> [8] </ref>). Definition 2.6 (Arc-consistent CSP). Let = (D; C) be a CSP. <p> An arc-consistent CSP is derived from a given CSP in polyno mial time (see <ref> [8] </ref>). To illustrate these definitions, we give an example of an arc-consistent CSP, which will be used throughout the paper, and corresponds to the scheduling problem in Example 2.2, as it will be shown by describing scheduling problems in the CSP notation. Table 1.
Reference: [9] <author> R. Rodosek. </author> <title> Complexity and Heuristics for the Scheduling Problem. </title> <booktitle> Proceedings of the IEEE Electrotechnical and Computer Science Conference, Portoroz, Slovenia, </booktitle> <year> 1993. </year> <title> Planning, Scheduling and Reasoning about Actions 634 R. </title> <publisher> Rodosek </publisher>
Reference-contexts: A solution of the scheduling problem is an assignment of a start time and a resource for each activity such that all specified constraints are satisfied. We consider a large class of scheduling problems <ref> [9] </ref> where temporal and resource dependencies between any two activities are allowed. Note, in the light of possible constraints over activities and resources, the capacity limitation of resources and the expected size of produced data of activities can be described in the following formalism as well. Definition 2.1 (Scheduling problem). <p> b); * any two activities do not run simultaneously on one resource, i.e., 8a; b 2 A : sr (a) = sr (b) ) (st (a) + d (a) st (b)) _ (st (b) + d (b) st (a)): Scheduling problems defined by this definition are N P complete (see <ref> [9] </ref>). In order to get the resources which are available for an activity a 2 A, the following restriction of r , i.e., r j a := b2A fr j (r; r 0 ) 2 r (a; b)g, is called the resource domain of a. Example 2.2 (A scheduling problem).
References-found: 9

