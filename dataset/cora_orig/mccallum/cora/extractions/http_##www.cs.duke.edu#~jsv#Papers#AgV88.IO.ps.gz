URL: http://www.cs.duke.edu/~jsv/Papers/AgV88.IO.ps.gz
Refering-URL: http://www.cs.duke.edu/~jsv/Papers/catalog/node2.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: (page 1) The Input/Output Complexity of Sorting and Related Problems La complexite en entrees/sorties du
Author: Alok Aggarwal and Jeffrey Scott Vitter ;; 
Abstract: We provide tight upper and lower bounds, up to a constant factor, for the number of inputs and outputs (I/Os) between internal memory and secondary storage required for five sorting-related problems: sorting, the fast Fourier transform (FFT), permutation networks, permuting, and matrix transposition. The bounds hold both in the worst case and in the average case, and in several situations the constant factors match. Secondary storage is modeled as a magnetic disk capable of transfering P blocks each containing B records in a single time unit; the records in each block must be input from or output to B contiguous locations on the disk. We give two optimal algorithms for the problems, which are variants of merge sorting and distribution sorting. In particular we show for P = 1 that the standard merge sorting algorithm is an optimal external sorting method, up to a constant factor in the number of I/Os. Our sorting algorithms use the same number of I/Os as does the permutation phase of key sorting, except when the internal memory size is extremely small, thus affirming the popular adage that key sorting is not faster. We also give a simpler and more direct derivation of Hong and Kung's lower bound for the FFT for the special case B = P = O(1). Resume. Nous donnons des bornes inferieures et superieures precises, a un facteur constant pres pour le nombre d'entrees/sorties entre memoire interne et memoire secondaire que necessitent cinq problemes relies au tri: le tri, la transformation de Fourier rapide, les reseaux de permutation, la permutation d'enregistrements, et la transposition de matrices. Ces bornes sont valables dans le cas moyen et dans le cas le pire. La memoire secondaire est modelisee comme un disque magnetique capable de transferer P blocs contenant cha-cun B enregistrements, en une unite de temps; les enregistrements de chaque bloc doivent ^etre traites comme B emplacements contigus sur disque. Nous donnons deux algorithmes optimaux qui sont des variantes du tri fusion et du tri distribution. En particulier, on montre que pour P = 1, le tri fusion usuel est une methode de tri optimale, a un fac-teur constant pres vis-a-vis du nombre d'entrees/sorties. Nos algorithmes de tri utilisent le m^eme nombre d'entrees/sorties que la phase de permutation d'un tri sur une cle (sauf lorsque la memoire interne est tres petite). Ceci confirme l'adage d'apres lequel le tri sur une cle n'est pas plus rapide qu'un tri fusion. Nous obtenons egalement une preuve simple et direct d'un resultat de Hong et Kung donnant des bornes inferieures pour la FFT dans le case ou B = P = O(1). 
Abstract-found: 1
Intro-found: 1
Reference: <author> R. Beigel and J. Gill. </author> <type> Personal communication (1986). </type>
Reference: <author> M. Blum, R. W. Floyd, V. Pratt, R. L. Rivest, and R. E. Tarjan. </author> <title> "Time Bounds for Selection," </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 7 (1973), </volume> <pages> 448-461. </pages>
Reference: <author> R. W. Floyd. </author> <title> "Permuting Information in Idealized Two-Level Storage," in Complexity of Computer Calculations, edited by R. </title> <editor> Miller and J. Thatcher, </editor> <publisher> Plenum, </publisher> <address> New York (1972), </address> <pages> 105-109. </pages>
Reference: <author> Hong J. W. and H. T. Kung. </author> <title> "I/O Complexity: The Red-Blue Pebble Game," </title> <booktitle> Proceedings of the 13th Annual ACM Symposium on Theory of Computing, </booktitle> <address> Milwaukee, WI (October 1981), </address> <pages> 326-333. </pages>
Reference: <author> D. E. Knuth. </author> <title> The Art of Computer Programming. Volume III: Sorting and Searching. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA (1973). </address>
Reference: <author> S. C. Kwan and J. L. Baer. </author> <title> "The I/O Performance of Multiway Mergesort and Tag Sort," </title> <journal> IEEE Transactions on Computers, </journal> <note> C-34(4), Special Issue on Sorting (April 1985), 383-387. </note>
Reference: <author> F. T. Leighton. </author> <title> "Tight Bounds on the Complexity of Parallel Sorting," </title> <journal> IEEE Transactions on Computers, </journal> <note> C-34(4), Special Issue on Sorting (April 1985). </note>
Reference: <author> E. E. Lindstrom and J. S. Vitter. </author> <title> "The Design and Analysis of BucketSort for Bubble Memory Secondary Storage," </title> <journal> IEEE Transactions on Computers, </journal> <month> C-34(3) (March </month> <year> 1985), </year> <pages> 218-233. </pages>
Reference: <author> J. E. Savage and J. S. Vitter. </author> <title> "Parallelism in Space-Time Tradeoffs," </title> <booktitle> Advances in Computing Research, Volume 4: Special Issue on Parallel and Distributed Computing, </booktitle> <publisher> JAI Press, </publisher> <address> Greenwich, CT (1987), </address> <pages> 117-146. </pages>
Reference: <author> C. L. Wu and T. Y. Feng. </author> <title> "The Universality of the Shu*e-Exchange Network," </title> <journal> IEEE Transactions on Computers, </journal> <month> C-30(5) (May </month> <year> 1981), </year> <pages> 324-332. </pages>
References-found: 10

