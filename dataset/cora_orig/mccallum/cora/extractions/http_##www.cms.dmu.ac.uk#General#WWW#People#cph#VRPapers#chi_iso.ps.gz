URL: http://www.cms.dmu.ac.uk/General/WWW/People/cph/VRPapers/chi_iso.ps.gz
Refering-URL: http://www.cms.dmu.ac.uk/General/WWW/People/cph/VRPapers/
Root-URL: 
Email: twm@cs.brown.edu globus@nas.nasa.gov  
Phone: (401) 863-7693 (415) 604-4404  
Title: Direct Manipulation of Isosurfaces and Cutting Planes in Virtual Environments  
Author: Tom Meyer Al Globus 
Keyword: scientific visualization, virtual reality, direct-manipulation interfaces, scalar fields, isosurfaces, cutting planes  
Address: Box 1910 MS T045-1  Providence RI 02912 Moffett Field CA 94035-1000  
Affiliation: Department of Computer Science Computer Science Corporation  Brown University NASA Ames Research Center  
Abstract: This paper presents some novel interface techniques for the visualization of scalar field data in virtual reality (VR) environments. In particular, we discuss the direct manipulation of isosurfaces and cutting planes and give general guidelines for design of user interfaces and algorithms for scientific visualization in virtual environments. This work was motivated by the need to visualize scalar field data from computational fluid dynamics (CFD) calculations interactively in the Virtual Wind Tunnel at NASA Ames, but the techniques are applicable to other problem areas, including medical imaging and geological and mathematical visualization. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> G. V. Bancroft, F. J. Merritt, T. C. Plessel, P. G. Ke-laita, R. K. McCabe, and A. Globus. </author> <title> FAST: A multiprocessing environment for visualization of computational fluid dynamics. </title> <editor> In A. Kaufman, editor, </editor> <booktitle> Visualization, </booktitle> <pages> pages 14-27, </pages> <year> 1990. </year>
Reference-contexts: In doing so, we describe the specific problems involved in manipulating visualizations of large 3D data sets, especially in immersive virtual environments. Techniques for dealing with these problems include gestural manipulation techniques and the use of time-critical algorithms. PRIOR WORK Many visualization systems, such as AVS [11] and FAST <ref> [1] </ref>, support the specification and viewing of cutting planes and isosurfaces in a desktop environment. While these may be sufficiently interactive for desktop work, they do not support the real-time interaction speeds required for VR.
Reference: 2. <author> J. Bloomenthal. </author> <title> Polygonization of implicit surfaces. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <volume> 5(4) </volume> <pages> 341-356, </pages> <year> 1988. </year>
Reference-contexts: A simple algorithm to examine areas of likely importance is to search in the immediate vicinity of the probe, extend the search as far as time permits, and then draw only the locally generated surface. Such an algorithm, known as the tracking algorithm, was developed by Bloomenthal <ref> [2] </ref> for modeling implicit surfaces. This algorithm generates a set of voxels containing the surface by starting at the voxel containing the sample point. It then determines which of the adjacent voxels the surface continues through, and adds those to the list if they have not already been examined.
Reference: 3. <author> S. Bryson. </author> <title> Effects of lag and frame rate on various tracking tasks. </title> <type> Draft report. </type>
Reference-contexts: In order to maintain this sense of presence, the simulation must react to the user's movements without noticeable lag and maintain a frame rate of at least 8-10 frames per second <ref> [3] </ref>. The Virtual Wind Tunnel system at NASA consists of a head--mounted display and glove input device. The system included several tools for visualizing vector fields.
Reference: 4. <author> S. Bryson and C. Levitt. </author> <title> The virtual windtunnel: An environment for the exploration of three-dimensional unsteady flows. </title> <booktitle> In Visualization '91, </booktitle> <pages> pages 17-24, </pages> <year> 1991. </year>
Reference-contexts: While these may be sufficiently interactive for desktop work, they do not support the real-time interaction speeds required for VR. Additionally, they do not provide direct manipulation interfaces to these visualization techniques, using sliders and text entry instead for tool manipulation. The Virtual Wind Tunnel project <ref> [4] </ref>, under the direction of Steve Bryson at NASA Ames Research Center, provides a number of direct manipulation interfaces for interactive viewing of vector field data in a virtual environment. It supports visualizations of steady and unsteady flows using streamlines, streaklines, and pathlines.
Reference: 5. <author> J. Butterworth, A. Davidson, S. Hench, and T. M. Olano. 3DM: </author> <title> A three dimensional modeler using a head-mounted display. </title> <booktitle> Computer Graphics (1992 Symposium on Interactive 3D Graphics), </booktitle> <volume> 25(2) </volume> <pages> 135-138, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: In addition, they had difficulty in perceiving stereo cues in the image and suffered from disorientation. Some of these problems could have been solved by more powerful navigation techniques through the data, such as flying and grabbing the space <ref> [5] </ref>. The disorientation may have been due to the lack of perceptual cues and the difficulty of maneuvering through the environment.
Reference: 6. <author> D. B. Conner, S. S. Snibbe, K. P. Herndon, D. C. Robbins, R. C. Zeleznik, and A. van Dam. </author> <title> Three-dimensional widgets. </title> <booktitle> Computer Graphics (1992 Symposium on Interactive 3D Graphics), </booktitle> <volume> 25(2) </volume> <pages> 183-188, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: The Brown University Graphics Group has done considerable work on the specification and design of 3D widgets used for direct-manipulation in modeling and animation <ref> [6] </ref>. However, little work has been done there on designing 3D widgets specifically for scientific visualization; in this paper, we examine relevant design criteria and apply these criteria to create two useful widgets for visualizing scalar fields in a virtual environment.
Reference: 7. <author> R. A. Drebin, L. Carpenter, and P. </author> <title> Hanrahan. </title> <booktitle> Volume rendering. Computer Graphics (SIGGRAPH '88 Proceedings), </booktitle> <volume> 22(4) </volume> <pages> 65-74, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: An isosurface is commonly generated as a polygonal surface, using an algorithm such as Marching Cubes <ref> [7] </ref>.
Reference: 8. <author> S. S. Snibbe, K. P. Herndon, D. C. Robbins, D. B. Conner, and A. van Dam. </author> <title> Using deformations to explore 3d widget design. </title> <booktitle> Computer Graphics (SIGGRAPH '92 Proceedings), </booktitle> <volume> 26(2) </volume> <pages> 351-352, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: This involves working in a rapid-prototyping environment, where a widget can be quickly created and modified in response to user feedback, thus shortening the design cycle. General Widget Design Principles A useful set of general criteria for widget design is <ref> [8] </ref>: * Self-disclosure. The geometry of the widget should indicate its behavior through handles and other cues (affor dances). * Implicit versus explicit control of parameters. Widgets usually explicitly control parameters, but may implicitly control additional parameters in order to reduce the complexity of the interface. * Degrees of freedom.
Reference: 9. <author> R. R. Springmeyer, M. M. Blattner, and N. L. Max. </author> <title> A characterization of the scientific data analysis process. </title> <booktitle> In Visualization, </booktitle> <pages> pages 235-242, </pages> <year> 1992. </year>
Reference-contexts: DESIGN PROCESS What Do Scientists Want? In the interface design process, it is necessary to determine what the users (in this case visualization scientists) actually need. Springmeyer, et al., conduct an empirical study of the work process of scientists, and give design recommendations for scientific data analysis tools <ref> [9] </ref>. * Facilitate active exploration. Tools should allow for inter active qualitative and quantitative exploration of data. * Capture the context of analysis. Tools should support the annotation of data. * Decrease cumbersome maneuvering. Tools should minimize navigation requirements, and provide support for the culling of large data sets.
Reference: 10. <author> R. M. Taylor, II, W. Robinett, V. L. Chi, F. P. Brooks, Jr., W. V. Wright, R. S. Williams, and E. J. Snyder. </author> <title> The Nanomanipulator: A virtual reality interface for a scanning tunnelling microscope. </title> <editor> In J. T. Kajiya, editor, </editor> <booktitle> Computer Graphics (SIGGRAPH '93 Proceedings), </booktitle> <volume> volume 27, </volume> <pages> pages 127-134, </pages> <month> Aug. </month> <year> 1993. </year>
Reference-contexts: It supports visualizations of steady and unsteady flows using streamlines, streaklines, and pathlines. Another tool designed for the exploration of scientific data in a virtual environment is the University of North Carolina's Nanomanipulator <ref> [10] </ref>, which lets the user visualize the scalar field of the height of an atomic surface in a virtual environment, incorporating both visual displays and force feedback.
Reference: 11. <author> C. Upson, T. Faulhaber, Jr., D. Kamins, D. Laidlaw, D. Schlegel, J. Vroom, R. Gurwitz, and A. van Dam. </author> <title> The application visualization system: A computational environment for scientific visualization. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 9(4) </volume> <pages> 30-42, </pages> <month> July </month> <year> 1989. </year>
Reference-contexts: In doing so, we describe the specific problems involved in manipulating visualizations of large 3D data sets, especially in immersive virtual environments. Techniques for dealing with these problems include gestural manipulation techniques and the use of time-critical algorithms. PRIOR WORK Many visualization systems, such as AVS <ref> [11] </ref> and FAST [1], support the specification and viewing of cutting planes and isosurfaces in a desktop environment. While these may be sufficiently interactive for desktop work, they do not support the real-time interaction speeds required for VR.
Reference: 12. <author> R. C. Zeleznik, K. P. Herndon, D. C. Robbins, N. Huang, T. Meyer, N. Parker, and J. F. Hughes. </author> <title> An interactive 3D toolkit for constructing 3D widgets. </title> <editor> In J. T. Kajiya, editor, </editor> <booktitle> Computer Graphics (SIGGRAPH '93 Proceedings), </booktitle> <volume> volume 27, </volume> <pages> pages 81-84, </pages> <month> Aug. </month> <year> 1993. </year>
Reference-contexts: The Cutting Plane Widget A simple interface for direct manipulation of a bounded cutting plane is a rectangle on that plane. Our first attempt at creating interactive plane widgets was involved with an interactive toolkit for building 3D widgets <ref> [12] </ref>, as shown in Figure 4. This widget contains considerable geometry, including a resize handle, a plane normal, an up vector, the projection of this up vector on the plane, and a representation of the space determined by the plane.
References-found: 12

