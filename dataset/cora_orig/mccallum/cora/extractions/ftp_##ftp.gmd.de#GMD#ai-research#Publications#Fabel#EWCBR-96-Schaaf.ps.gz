URL: ftp://ftp.gmd.de/GMD/ai-research/Publications/Fabel/EWCBR-96-Schaaf.ps.gz
Refering-URL: http://nathan.gmd.de/projects/fabel/fabel-pub2.html
Root-URL: 
Email: e-mail:Joerg.Schaaf@gmd.de  
Title: Fish and Shrink. A next step towards e-cient case retrieval in large scaled case bases  
Author: Jorg Walter Schaaf 
Address: Sankt Augustin, Germany  
Affiliation: GMD Artiflcial Intelligence Research Division  
Abstract: Keywords: Case-Based Reasoning, case retrieval, case representation This paper deals with the retrieval of useful cases in case-based reasoning. It focuses on the questions of what "useful" could mean and how the search for useful cases can be organized. We present the new search algorithm Fish and Shrink that is able to search quickly through the case base, even if the aspects that deflne usefulness are spontaneously combined at query time. We compare Fish and Shrink to other algorithms and show that most of them make an implicit closed world assumption. We flnally refer to a realization of the presented idea in the context of the prototype of the FABEL-Project 1 . The scenery is as follows. Previously collected cases are stored in a large scaled case base. An expert describes his problem and gives the aspects in which the requested case should be similar. The similarity measure thus given spontaneously shall now be used to explore the case base within a short time, shall present a required number of cases and make sure that none of the other cases is more similar. The question is now how to prepare the previously collected cases and how to deflne a retrieval algorithm which is able to deal with sponta neously user-deflned similarity measures.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> K. D. Ashley and E. L. Rissland, </author> <title> `Waiting on weighting: A symbolic least commitment approach', </title> <booktitle> in Proceedings of the Seventh National Conference on Artiflcial Intelligence, </booktitle> <pages> pp. 239-244. </pages> <publisher> Morgan Kaufmann, </publisher> <address> St. Paul, MN, </address> <year> (1988). </year>
Reference-contexts: If cases are indexed a new possibility of comparison arises. Now it is possible to state at query time which attributes are important and how important they are. There are some approaches in literature, for example <ref> [1, 6, 9] </ref>, that ofier spontaneous attribute weighting and try to avoid complete search. These approaches difier from the following one in some important points concerning complexity of attributes and combination. Complexity of attributes: Attributes of collected cases are often of low complexity. This makes comparison easy. <p> The function to calculate the view distance is user deflned. We call this function the view distance function or SD name . Deflnition 4 view distance. The view distance of two cases is deflned 2 as a function SD name : -0 -0 W ! <ref> [0; 1] </ref>. The view distance is a combination of aspect distances weighted by the view W.
Reference: 2. <author> J. L. Bentley, </author> <title> `Multidimensional binary search trees used for associative searching', </title> <journal> Communications of the ACM, </journal> <volume> 18(9), </volume> <pages> 509-517, </pages> <month> (September </month> <year> 1975). </year>
Reference-contexts: Aspect distances between two cases normally never change. Spontaneous changes in case neighborhood (because of changing view distance) will raise di-culties in standard retrieval algorithms. It is principally impossible to precalculate static retrieval structures, like those used in search trees (for example k-d-trees <ref> [2, 16, 17] </ref>) or networks (for example, shared feature networks or discrimination networks [5]) that are based on a single evaluation of case distance. 3 Retrieval in large scaled case-bases "Case-based reasoning will be ready for large-scale problems only when its retrieval algorithms are su-ciently robust and e-cient to handle thousands
Reference: 3. <author> Carl-Helmut Coulon, </author> <title> `Automatic indexing, retrieval and reuse of topologies in complex designs', </title> <booktitle> in Proceeding of the sixth International Conference on Computing in Civil and Building Engineering, </booktitle> <editor> eds., Peter Jan Pahl and Heinrich Werner, </editor> <booktitle> pp. </booktitle> <pages> 749-754, </pages> <address> Berlin, (1995). </address> <publisher> Balkema, </publisher> <address> Rotterdam. </address>
Reference-contexts: Empirical results will be available by the end of 1996 ([15]). An evaluation by domain experts with respect to the quality of delivered cases is still to be done. Up to now, we have integrated the aspects "case silhouette" [4] concerning two subsystems, "Gestalten" [10], "topological structure" <ref> [3] </ref> and a fuzzy representation of components [7] for cases in the domain of architectural design. As an interesting additional feature, our concept allows to derive a quality assessment for aspects from working with it.
Reference: 4. <author> Carl-Helmut Coulon and Ralf Stefiens, </author> <title> `Comparing fragments by their images', in Similarity concepts and retrieval methods, </title> <editor> ed., </editor> <booktitle> Angi Vo, </booktitle> <pages> 36-44, </pages> <address> GMD, Sankt Augustin, </address> <year> (1994). </year>
Reference-contexts: Empirical results will be available by the end of 1996 ([15]). An evaluation by domain experts with respect to the quality of delivered cases is still to be done. Up to now, we have integrated the aspects "case silhouette" <ref> [4] </ref> concerning two subsystems, "Gestalten" [10], "topological structure" [3] and a fuzzy representation of components [7] for cases in the domain of architectural design. As an interesting additional feature, our concept allows to derive a quality assessment for aspects from working with it.
Reference: 5. <author> E. A. Feigenbaum, </author> <title> `The simulation of natural learning behaviour', in Computers and Thought, </title> <editor> eds., E. A. Feigenbaum and J. Feldman, </editor> <address> 297-309, </address> <publisher> McGraw-Hill, </publisher> <address> New-York, </address> <year> (1963). </year>
Reference-contexts: Spontaneous changes in case neighborhood (because of changing view distance) will raise di-culties in standard retrieval algorithms. It is principally impossible to precalculate static retrieval structures, like those used in search trees (for example k-d-trees [2, 16, 17]) or networks (for example, shared feature networks or discrimination networks <ref> [5] </ref>) that are based on a single evaluation of case distance. 3 Retrieval in large scaled case-bases "Case-based reasoning will be ready for large-scale problems only when its retrieval algorithms are su-ciently robust and e-cient to handle thousands and ten thousands of cases." (Kolodner in [8], page 289). 2 Deflnition of
Reference: 6. <author> Klaus Goos, Fallbasiertes Klassiflzieren. </author> <title> Methoden, Integration und Evaluation, </title> <type> Ph.D. dissertation, </type> <institution> Bayerische Julius-Maximilians-Universitat, Wurzburg, </institution> <year> 1995. </year>
Reference-contexts: If cases are indexed a new possibility of comparison arises. Now it is possible to state at query time which attributes are important and how important they are. There are some approaches in literature, for example <ref> [1, 6, 9] </ref>, that ofier spontaneous attribute weighting and try to avoid complete search. These approaches difier from the following one in some important points concerning complexity of attributes and combination. Complexity of attributes: Attributes of collected cases are often of low complexity. This makes comparison easy. <p> The question arises what to store to speed up retrieval without limiting it too much. In his hillclimbing approach Goos <ref> [6] </ref> stores distances between entire cases and focuses the search to the neighborhood of a case which are most promising. Other approaches based on case neighborhood are [9] and [18]. They use spreading activation to increase a score for cases with attribute values similar to the query. <p> Other approaches based on case neighborhood are [9] and [18]. They use spreading activation to increase a score for cases with attribute values similar to the query. In the following paragraph I will show that all, <ref> [6] </ref>, [9] and [18], make use of an undeclared, implicit closed world assumption and that this assumption is the reason for a lot of problems. The implicit closed world assumption is: If similarity between two cases is not explicitly stated, then these cases are deflni-tively difierent. <p> Goos and Lenz try to beneflt from similarities stated and stored between a directly tested case and its neighbors. They use information about the closeness of cases to decide where to go on searching <ref> [6] </ref> or which cases shall be presented to the user [9]. The authors assume that similarity not stated explicitly is equivalent with stated dissimilarity. They disregard that missing similarity statements can come from at least two reasons. <p> Missing representation of important attributes leads to no delay and thus to early direct test. If the deflnitions of dissimilarity in <ref> [6] </ref>, [9] and [18] fail, it is possible that similar cases are not found. According to the deflnition presented here, similar cases are tested later in the process at the worst. 3.2 Fish and Shrink.
Reference: 7. <author> Wolfgang Grather, </author> <title> `Computing distances between attribute-value representations in an associative memory', in Similarity concepts and retrieval methods, ed., Angi V o, </title> <type> 12-25, </type> <institution> GMD, Sankt Augustin, </institution> <year> (1994). </year>
Reference-contexts: An evaluation by domain experts with respect to the quality of delivered cases is still to be done. Up to now, we have integrated the aspects "case silhouette" [4] concerning two subsystems, "Gestalten" [10], "topological structure" [3] and a fuzzy representation of components <ref> [7] </ref> for cases in the domain of architectural design. As an interesting additional feature, our concept allows to derive a quality assessment for aspects from working with it.
Reference: 8. <author> Janet L. Kolodner, </author> <title> Case-Based Reasoning, </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, </address> <year> 1993. </year>
Reference-contexts: feature networks or discrimination networks [5]) that are based on a single evaluation of case distance. 3 Retrieval in large scaled case-bases "Case-based reasoning will be ready for large-scale problems only when its retrieval algorithms are su-ciently robust and e-cient to handle thousands and ten thousands of cases." (Kolodner in <ref> [8] </ref>, page 289). 2 Deflnition of view distances and their inuence to case selection is discussed in [11].
Reference: 9. <author> M. Lenz and H. D. Burkhard, </author> <title> `Retrieval ohne Suche', in Fallbasiertes Schlieen - Grundlagen und Anwendungen, </title> <editor> eds., Brigitte Bartsch-Sporl, Dietmar Janetzko, </editor> <booktitle> and Stefan Wess, </booktitle> <pages> pp. 1-10, </pages> <address> Universitat Kaiserslautern, Germany, </address> <year> (1995). </year> <institution> Zentrum fur Lernende Systeme und Anwendungen, Fachbereich Informatik. </institution>
Reference-contexts: If cases are indexed a new possibility of comparison arises. Now it is possible to state at query time which attributes are important and how important they are. There are some approaches in literature, for example <ref> [1, 6, 9] </ref>, that ofier spontaneous attribute weighting and try to avoid complete search. These approaches difier from the following one in some important points concerning complexity of attributes and combination. Complexity of attributes: Attributes of collected cases are often of low complexity. This makes comparison easy. <p> The question arises what to store to speed up retrieval without limiting it too much. In his hillclimbing approach Goos [6] stores distances between entire cases and focuses the search to the neighborhood of a case which are most promising. Other approaches based on case neighborhood are <ref> [9] </ref> and [18]. They use spreading activation to increase a score for cases with attribute values similar to the query. In the following paragraph I will show that all, [6], [9] and [18], make use of an undeclared, implicit closed world assumption and that this assumption is the reason for a <p> Other approaches based on case neighborhood are <ref> [9] </ref> and [18]. They use spreading activation to increase a score for cases with attribute values similar to the query. In the following paragraph I will show that all, [6], [9] and [18], make use of an undeclared, implicit closed world assumption and that this assumption is the reason for a lot of problems. The implicit closed world assumption is: If similarity between two cases is not explicitly stated, then these cases are deflni-tively difierent. <p> Goos and Lenz try to beneflt from similarities stated and stored between a directly tested case and its neighbors. They use information about the closeness of cases to decide where to go on searching [6] or which cases shall be presented to the user <ref> [9] </ref>. The authors assume that similarity not stated explicitly is equivalent with stated dissimilarity. They disregard that missing similarity statements can come from at least two reasons. On the one hand missing statements can express dissimilarity, on the other hand they can express that similarity has not yet been checked. <p> Missing representation of important attributes leads to no delay and thus to early direct test. If the deflnitions of dissimilarity in [6], <ref> [9] </ref> and [18] fail, it is possible that similar cases are not found. According to the deflnition presented here, similar cases are tested later in the process at the worst. 3.2 Fish and Shrink.
Reference: 10. <author> Jorg W. Schaaf, </author> <title> `Gestalts in CAD-plans, Analysis of a Similarity Concept', in AI in Design'94, </title> <editor> eds., J. Gero and F. </editor> <booktitle> Sudweeks, </booktitle> <pages> pp. 437-446, </pages> <address> Lausanne, (1994). </address> <publisher> Kluwer Academic Publishers, Dordrecht. </publisher>
Reference-contexts: Empirical results will be available by the end of 1996 ([15]). An evaluation by domain experts with respect to the quality of delivered cases is still to be done. Up to now, we have integrated the aspects "case silhouette" [4] concerning two subsystems, "Gestalten" <ref> [10] </ref>, "topological structure" [3] and a fuzzy representation of components [7] for cases in the domain of architectural design. As an interesting additional feature, our concept allows to derive a quality assessment for aspects from working with it.
Reference: 11. <author> Jorg W. Schaaf, </author> <title> `ASPECT: Uber die Suche nach situationsgerechten Fallen im Case Based Reasoning', </title> <type> Fabel-Report 31, </type> <institution> GMD, Sankt Augustin, </institution> <year> (1995). </year>
Reference-contexts: Further possible and useful view distance functions are discussed in <ref> [11] </ref>. They lead to more conservative or more creative case proposals. View distances are calculated between cases. Some of them are of special interest for further explanation so we deflne them: Deflnition 5 Test- and base distance and view neighbor. <p> Retrieval in large scaled case-bases "Case-based reasoning will be ready for large-scale problems only when its retrieval algorithms are su-ciently robust and e-cient to handle thousands and ten thousands of cases." (Kolodner in [8], page 289). 2 Deflnition of view distances and their inuence to case selection is discussed in <ref> [11] </ref>. <p> That is what we describe with the term "shrink" in the nickname Fish and Shrink of the discussed algorithm. "Fishing" refers to the random access to the test case. If one of the above conditions is violated then an error occurs. A possibility to avoid this is discussed in <ref> [11] </ref>. Figure 3 shows the algorithm Fish and Shrink. The idea of Fish and Shrink is that the view distance between the query and a test case restricts both, the minimum distance as well as a maximum distance 1. <p> Experience shows that cases in the swarm of a test case do not difier enough to provide additional information, so tests within a swarm are not recommended. 5 State of the work and outlook The presented approach is completely worked out, formally described in <ref> [11] </ref> and implemented as a prototype. The retrieval algorithm Fish and Shrink delivers cases from the domain of building design that are similar in flve freely combinable aspects. It is now being tested with larger case bases (about 400 cases in flve difierent representations.
Reference: 12. <author> Jorg Walter Schaaf, </author> <title> `"Fish and Sink"; An Anytime-Algorithm to Retrieve Adequate Cases', </title> <booktitle> in Case-based reasoning research and development: flrst International Conference, ICCBR-95, proceedings, </booktitle> <editor> eds., Manuela Veloso and Agnar Aamodt, </editor> <address> 538-547, </address> <publisher> Springer, </publisher> <address> Berlin, </address> <month> (October </month> <year> 1995). </year>
Reference-contexts: The Fish and Shrink algorithm presented here realizes that without using any closed world assumption like this mentioned above. It is based (like the Fish and Sink algorithm <ref> [12] </ref>) on a metaphor of sinking cases and cases being dragged down (Figure 2).
Reference: 13. <author> Barbara Schmidt-Belz, </author> <title> `Scenario of FABEL Prototype 3 Supporting Architectural Design', </title> <type> Fabel-Report 40, </type> <institution> GMD, Sankt Augustin, </institution> <year> (1995). </year>
Reference-contexts: The function fi i often has the nature of a transformation or a projection, but sometimes of a knowledge intensive interpretation. In the project FABEL a case-based reasoner was developed which ofiers several difierent tools to retrieve cases <ref> [13] </ref>. Each tool delivers useful cases under certain conditions. To make them all work together, the main ideas of these methods have been regarded as "aspects" in the sense described above.
Reference: 14. <author> S. Skiena, </author> <title> Implementing Discrete Mathematics, </title> <publisher> Addision-Wesley Publishing Co., </publisher> <year> 1990. </year>
Reference-contexts: The topology graph of design objects like columns, pipes or furniture is such a complex attribute. Topology of design objects is an essential criterion for reusability of a design. Representation of topology is expensive, and comparison of two topology graphs is NP-complete <ref> [14] </ref>. Because the term "attribute" hardly flts a topology graph for example, a useful but complex representation like this will be called an "aspect representation" of a case. It is not easy to describe what an aspect itself is.
Reference: 15. <author> Ralf Stefiens, </author> <title> Kantenreduktion in ASPECT-Fallbasen, </title> <type> Master's thesis, </type> <institution> Universitat Bonn, </institution> <year> 1995. </year> <note> Diplomarbeit in der Entstehung. </note>
Reference: 16. <author> Dagmar Steinert, E-ziente Zugrifisstrukturen fur die ahnlichkeitsbasierte Vo-rauswahl von Fallen, </author> <type> Master's thesis, </type> <institution> Lehrstuhl fur Informatik VI (KI) der Univer-sitat Wurzburg, </institution> <year> 1993. </year>
Reference-contexts: Aspect distances between two cases normally never change. Spontaneous changes in case neighborhood (because of changing view distance) will raise di-culties in standard retrieval algorithms. It is principally impossible to precalculate static retrieval structures, like those used in search trees (for example k-d-trees <ref> [2, 16, 17] </ref>) or networks (for example, shared feature networks or discrimination networks [5]) that are based on a single evaluation of case distance. 3 Retrieval in large scaled case-bases "Case-based reasoning will be ready for large-scale problems only when its retrieval algorithms are su-ciently robust and e-cient to handle thousands
Reference: 17. <author> S. Wess, K.D. Althofi, and G. Derwand, </author> <title> `Improving the retrieval step in case-based reasoning', </title> <booktitle> in Pre-Prints First European Workshop on Case-Based reasoning, </booktitle> <address> Uni-versitat Kaiserslautern, Germany, </address> <year> (1993). </year> <institution> Zentrum fur Lernende Systeme und An-wendungen, Fachbereich Informatik. </institution>
Reference-contexts: Aspect distances between two cases normally never change. Spontaneous changes in case neighborhood (because of changing view distance) will raise di-culties in standard retrieval algorithms. It is principally impossible to precalculate static retrieval structures, like those used in search trees (for example k-d-trees <ref> [2, 16, 17] </ref>) or networks (for example, shared feature networks or discrimination networks [5]) that are based on a single evaluation of case distance. 3 Retrieval in large scaled case-bases "Case-based reasoning will be ready for large-scale problems only when its retrieval algorithms are su-ciently robust and e-cient to handle thousands
Reference: 18. <author> M. Wolverton and B. Hayes-Roth, </author> <title> `Retrieving semantically distant analogies with knowledge-directed spreading activation.', </title> <type> Technical Report KSL 94-19, </type> <institution> Knowledge Systems Laboratory, Stanford University, </institution> <month> (March </month> <year> 1994). </year> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: The question arises what to store to speed up retrieval without limiting it too much. In his hillclimbing approach Goos [6] stores distances between entire cases and focuses the search to the neighborhood of a case which are most promising. Other approaches based on case neighborhood are [9] and <ref> [18] </ref>. They use spreading activation to increase a score for cases with attribute values similar to the query. In the following paragraph I will show that all, [6], [9] and [18], make use of an undeclared, implicit closed world assumption and that this assumption is the reason for a lot of <p> Other approaches based on case neighborhood are [9] and <ref> [18] </ref>. They use spreading activation to increase a score for cases with attribute values similar to the query. In the following paragraph I will show that all, [6], [9] and [18], make use of an undeclared, implicit closed world assumption and that this assumption is the reason for a lot of problems. The implicit closed world assumption is: If similarity between two cases is not explicitly stated, then these cases are deflni-tively difierent. <p> Missing representation of important attributes leads to no delay and thus to early direct test. If the deflnitions of dissimilarity in [6], [9] and <ref> [18] </ref> fail, it is possible that similar cases are not found. According to the deflnition presented here, similar cases are tested later in the process at the worst. 3.2 Fish and Shrink.
References-found: 18

