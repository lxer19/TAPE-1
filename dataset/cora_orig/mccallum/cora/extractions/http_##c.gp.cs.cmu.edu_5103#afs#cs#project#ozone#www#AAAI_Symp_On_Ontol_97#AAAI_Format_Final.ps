URL: http://c.gp.cs.cmu.edu:5103/afs/cs/project/ozone/www/AAAI_Symp_On_Ontol_97/AAAI_Format_Final.ps
Refering-URL: http://c.gp.cs.cmu.edu:5103/afs/cs/project/ozone/www/AAAI_Symp_On_Ontol_97/abstract.html
Root-URL: http://www.cs.cmu.edu
Email: sfs,mb81@cs.cmu.edu  
Title: An Ontology for Constructing Scheduling Systems community, issues of knowledge acquisition and knowledge sharing have
Author: Stephen F. Smith and Marcel A. Becker 
Keyword: Ontologies and Model Building  
Note: Within the artificial intelligence  
Address: 5000 Forbes Avenue Pittsburgh, PA 15213  
Affiliation: The Robotics Institute Carnegie Mellon University  
Abstract: In this paper, we consider the use of ontologies as a basis for structuring and simplifying the process of constructing domain-specific problem-solving tools. We focus specifically on the task of scheduling. Though there is commonality in scheduling system requirements and design at several levels across application domains, different scheduling environments invariably present different challenges (e.g., different dominating constraints, different objectives, different domain structure, different sources of uncertainty, etc.), and hence we can expect high-performance application systems to require customized solutions. Unfortunately, the time and cost associated with such domain-specific system development at present is typically quite large. Our work toward overcoming this application construction bottleneck has led to the development of OZONE, a toolkit for configuring constraint-based scheduling systems. A central component of OZONE is its scheduling ontology, which defines a reusable and extensible base of concepts for describing and representing scheduling problems, domains and constraints. The OZONE ontology provides a framework for analyzing the information requirements of a given target domain, and a structural foundation for constructing an appropriate domain model. Through direct association of software component capabilities with concepts in the ontology, the ontology promotes rapid configuration of executable systems and allows concentration of modeling effort on those idiosyncratic aspects of the target domain. The OZONE ontology and toolkit represent a synthesis of extensive prior work in developing constraint-based scheduling models for a range of applications in manufacturing, space and transportation logistics. We first motivate the use of ontologies as model building tools, establishing linkages to recent concepts in software engineering and proposing an extended view of ontologies that includes capability descriptions. We then describe our perspective on the structure of planning and scheduling domain models and summarize major components of current OZONE scheduling ontology. In recent years, the field of software engineering has placed increasing emphasis on software reusability as a key to reducing the time and cost of application system construction and maintenance. Techniques for development and (re)use of software components have received wide attention and use (Biggerstaff & Perlis 1989; Krueger 1992), and tools that support system development from reusable building blocks are maturing (Cotter 1996; Smith 1990; Batory & O'Malley 1992). Despite this activity, however, the systematic development of applications from components remains an open issue. One obstacle stems from the lack of communication and coordination between component developers (who must design for reuse) and component users (who design with reuse) (Becker & Daz-Herrera 1994); overly complex components are difficult to reuse while overly simple components do not provide sufficient building blocks. Two current areas of software engineering research aimed specifically at promoting reusability are (1) domain analysis (Hess et al. 1990; Arango & Prieto-Daz 1991) and (2) software architectures (Garlan & Shaw 1994; Clements 1996). Methodologies for domain analysis center around formulation of a domain model, which is intended to precisely delineate the scope of an application domain, the objects in this domain, desired system functionalities and features, and the dimensions along which these functionalities vary. Research in software architecture has focused on categorizing reusable architectural styles (Garlan, Allen, & Ockerbloom 1994), on architectural description languages (Shaw & Garlan 1994), and on architectural patterns (Gamma et al. 1994) that support composition of components. What is missing are mechanisms to support the transition from (abstract) domain models to specific architectural designs and system implementations. 
Abstract-found: 1
Intro-found: 0
Reference: <author> Allen, J. </author> <year> 1984. </year> <title> Towards a general theory of action and time. </title> <booktitle> Artificial Intelligence 23(2) </booktitle> <pages> 123-154. </pages>
Reference: <author> Arango, G., and Prieto-Daz, R. </author> <year> 1991. </year> <title> Domain analysis concepts and research directions. </title> <editor> In Prieto-Daz, R., and Arango, G., eds., </editor> <title> Domain Analysis and Software Modeling. </title> <publisher> Los Alamitos, </publisher> <address> CA: </address> <publisher> IEEE Computer Society Press. </publisher>
Reference: <author> Batory, D., and O'Malley, S. </author> <year> 1992. </year> <title> The design and implementation of hierarchical software systems with reusable components. </title> <journal> ACM Transactions on Software Engineering and Methodology. </journal>
Reference: <author> Becker, M., and Daz-Herrera, J. </author> <year> 1994. </year> <title> Creating domain specific libraries: a methodology, design guidelines and an implementation. </title> <booktitle> In Proceedings of 1994 3rd International Conference on Software Reuse. </booktitle>
Reference: <author> Biggerstaff, T., and Perlis, A. </author> <year> 1989. </year> <title> Software Reusability. </title> <publisher> ACM Press. </publisher>
Reference: <author> Chandrasehakaran, B. </author> <year> 1986. </year> <title> Generic tasks in knowledge-based reasoning: High-level building blocks for expert system design. </title> <booktitle> IEEE Expert 1(3) </booktitle> <pages> 23-30. </pages>
Reference: <author> Clements, P. </author> <year> 1996. </year> <title> Coming attractions in software architecture. </title> <type> Technical Report Technical Report CMU/SEI-96-TR-008, </type> <institution> Software Engineering Institute, Carnegie Mellon University, </institution> <address> Pittsburgh, PA. </address>
Reference: <author> Cotter, S. </author> <year> 1996. </year> <title> Inside Talligent Technology. Reading, MA.: Addison-Wesley. chapter The Talligent programming model: framework concepts. </title>
Reference: <author> Fadel, F.; M.S. Fox, M.; and Gruninger, M. </author> <year> 1994. </year> <title> A generic enterprise resource ontology. </title> <booktitle> In Proc. of 3rd. IEEE Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises. </booktitle>
Reference: <author> Gamma, E.; Helm, R.; Johnsosn, R.; and Vlissides, J. </author> <year> 1994. </year> <title> Design Patterns: Elements of Reusable Object-Oriented Design. </title> <publisher> Addison-Wesley. </publisher>
Reference: <author> Garlan, D., and Shaw, M. </author> <year> 1994. </year> <title> An introduction to software architecture. </title> <type> Technical Report Technical Report CMU-CS-94-166, </type> <institution> Carnegie Mellon University, </institution> <address> Pittsburgh, PA. </address>
Reference: <author> Garlan, D.; Allen, R.; and Ockerbloom, J. </author> <year> 1994. </year> <title> Exploiting style in architectural design environment. </title> <booktitle> In Proc. of ACM SIGSOFT'94 Symposium on Foundations of Software Engineering. </booktitle>
Reference: <author> Gruber, T. </author> <year> 1993. </year> <title> Towards principles for the design of ontologies used for knowledge sharing. </title> <type> Technical Report Technical Report KSL-93-04, </type> <institution> Stanford Uni--versity, </institution> <address> Palo Alto, CA. </address>
Reference: <author> Gruninger, M., and Fox, M. </author> <year> 1994. </year> <title> An activity ontology for enterprise modeling. </title> <type> Technical Report Technical Report, </type> <institution> Ind. Eng. Department, University of Toronto. </institution>
Reference: <author> Hess, J.; Novak, W.; Carrol, P.; Cohen, S.; Holibaugh, R.; Kang, K.; and Peterson, A. </author> <year> 1990. </year> <title> A domain analysis bibliography. </title> <type> Technical Report SEI-90-SR-3, </type> <institution> Software Engineering Institute, Carnegie Mellon University, </institution> <address> Pittsburgh, PA. </address>
Reference: <author> Krueger, C. </author> <year> 1992. </year> <title> Software reuse. </title> <journal> Computing Surveys 24(2) </journal> <pages> 131-83. </pages>
Reference: <author> Lassila, O.; Becker, M.; and Smith, S. </author> <year> 1996. </year> <title> An exploratory prototype for aero-medical evacuation planning. </title> <type> Technical Report Technical Report CMU-RI-TR-96-02, </type> <institution> Robotics Institute, Carnegie Mellon University, </institution> <address> Pittsburgh, PA. </address>
Reference: <author> Le Pape, C. </author> <year> 1994. </year> <title> Implementation of resource constraints in ilog schedule: A library for the development of constraint-based scheduling systems. </title> <journal> Intelligent Systems Eng. </journal> <month> Summer. </month>
Reference: <author> Lee, J.; Yost, G.; and Group, P. W. </author> <year> 1994. </year> <title> The pif process interchange format and framework. </title> <type> Technical Report Working Paper No. 180, </type> <institution> MIT Center for Coordination Science. </institution>
Reference: <author> Muscettola, N.; Smith, S.; A., C.; and D'Aloisi, D. </author> <year> 1992. </year> <title> Coordinating space telescope operations within an integrated planning and scheduling framework. </title> <journal> IEEE Control Systems 12(2). </journal>
Reference: <author> Shaw, M., and Garlan, D. </author> <year> 1994. </year> <title> Characteristics og high-level languages for software architecture. </title> <type> Technical Report CMU/SEI-94-TR-23, </type> <institution> School of Computer Science and Software Engineering Institute , Carnegie Mellon University, </institution> <address> Pittsburgh, PA. </address>
Reference: <author> Smith, S., and Lassila, O. </author> <year> 1994. </year> <title> Configurable systems for reactive production management. In Knowledge-Based Reactive Scheduling. Amsterdam (The Nether-lands): </title> <journal> IFIP Transactions B-15. </journal>
Reference: <author> Smith, S.; Lassila, O.; and Becker, M. </author> <year> 1996. </year> <title> Configurable, mixed-initiative systems for planning and scheduling. </title> <editor> In Tate, A., ed., </editor> <booktitle> Advanced Planning Technology. </booktitle> <address> Menlo Park: </address> <publisher> AAAI Press. </publisher>
Reference: <author> Smith, S. </author> <year> 1989. </year> <title> The opis framework for modeling manufacturing systems. </title> <type> Technical Report Technical Report CMU-RI-TR-89-30, </type> <institution> The Robotics Institute, Carnegie Mellon University, </institution> <address> Pittsburgh, PA. </address>
Reference: <author> Smith, D. </author> <year> 1990. </year> <title> Kids: A semiautomatic program development system. </title> <journal> IEEE Transaction of Software Engineering 16(9) </journal> <pages> 1024-43. </pages>
Reference: <author> Smith, S. </author> <year> 1994. </year> <title> Opis: A methodology and architecture for reactive scheduling. In Zweben, </title> <editor> M., and Fox, M., eds., </editor> <title> Intelligent Scheduling. </title> <publisher> Morgan Kaufmann Publishers. </publisher>
Reference: <author> Steels, L. </author> <year> 1990. </year> <title> Components of expertise. </title> <journal> AI Magazine 11(2) </journal> <pages> 29-49. </pages>
Reference: <author> Swartout, B.; Patil, R.; Knight, K.; and Russ, T. </author> <year> 1996. </year> <title> Toward distributed use of large-scale ontologies. </title> <note> submitted to 1996 Banff Knowledge Acquisition Workshop. </note>
Reference: <author> Tate, A. </author> <year> 1996. </year> <title> Towards a plan ontology. </title> <journal> AI*IA Notizie (Journal of the Italian Association for AI) 9(1). </journal>
Reference: <author> Uschold, M.; King, M.; Moralee, S.; and Zor-gios, Y. </author> <year> 1996. </year> <title> The enterprise ontology v. </title> <journal> 1.1. </journal> <note> available from http://www.aiai.ed.ac.uk/ enterprise/enterprise/ontology.html, </note> <institution> University of Ed-inburgh, UK. </institution>
Reference: <author> Uschold, M. </author> <year> 1996. </year> <title> Building ontologies: Towards a unified methodology. </title> <type> Technical Report Technical Report AIAI-TR-197, </type> <institution> University of Edinburgh. </institution>
Reference: <author> Wielinga, B., and Schreiber, A. </author> <year> 1993. </year> <title> Reusable and sharable knowledge bases: A european perspective. </title> <booktitle> In Proc. Int. Conf. on Building and Sharing Very Large-Scaled Knowledge Bases '93. </booktitle> <address> Tokyo: </address> <institution> Japan Information Processing Dev. Center. </institution>
Reference: <author> Wielinga, B.; Velde, W.; Schreiber, G.; and Akkerna-mans, H. </author> <year> 1992. </year> <title> The kads knowledge modelling approach. </title> <booktitle> In Proc. </booktitle> <editor> 2nd Japanese K. A. </editor> <booktitle> for Knowledge-Based Systems Workshop. </booktitle> <institution> Hitachi Advanced Research Lab. </institution>
References-found: 33

