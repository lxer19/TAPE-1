URL: http://www.cs.umd.edu/~shankar/Papers/viewserver-hierarchy.ps.gz
Refering-URL: http://www.cs.umd.edu/~shankar/Z-iteration/references.html
Root-URL: 
Email: shankar@cs.umd.edu  
Title: The Viewserver Hierarchy for Inter-Domain Routing: Protocols and Evaluation  
Author: Cengiz Alaettinoglu A. Udaya Shankar 
Note: *To appear in IEEE JSAC Special Issue on Global Internet This research was performed while the author was with the  
Date: March 3, 1995  
Address: Marina del Rey, CA 90292  cengiz@isi.edu College Park, MD 20742  Mary-land, College Park, MD 20742.  
Affiliation: Information Sciences Institute Institute for Advanced Computer Studies University of Southern California and Department of Computer Science  University of Maryland  Computer Science Department, University of  
Pubnum: CS-TR-3151.1 UMIACS-TR-93-98.1  
Abstract: We present an inter-domain routing protocol based on a new hierarchy, referred to as the viewserver hierarchy. The protocol satisfies policy and ToS constraints, adapts to dynamic topology changes including failures that partition domains, and scales well to large number of domains without losing detail (unlike the usual scaling technique of aggregating domains into superdomains). Domain-level views are maintained by special nodes called viewservers. Each viewserver maintains a view of a surrounding precinct. Viewservers are organized hierarchically. To obtain domain-level source routes, the views of one or more viewservers are merged (upto a maximum of twice the levels in the hierarchy). We also present a model for evaluating inter-domain routing protocols, and apply this model to compare our viewserver hierarchy against the simple approach where each node maintains a domain-level view of the entire internetwork. Our results indicate that the viewserver hierarchy finds many short valid paths and reduces the amount of memory requirement by two orders of magnitude. fl This work is supported in part by ARPA and Philips Labs under contract DASG60-92-0055 to Department of Computer Science, University of Maryland, and by National Science Foundation Grant No. NCR 89-04590. The views, opinions, and/or findings contained in this report are those of the author(s) and should not be interpreted as representing the official policies, either expressed or implied, of the Advanced Research Projects Agency, PL, or the U.S. Government. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Alaettinoglu and A. U. Shankar. </author> <title> Hierarchical inter-domain routing protocol with on-demand ToS and policy resolution. </title> <booktitle> In IEEE International Conference on Networking Protocols '93, </booktitle> <address> San Fransisco, California, </address> <month> October </month> <year> 1993. </year>
Reference-contexts: view-update protocol and the evaluation model are not present, the view-query protocol is only informally described, and the evaluation results are summarized for only one internetwork topology. 4 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS and policy constraints for large internetworks <ref> [17, 16, 19, 11, 7, 6, 22, 1, 21, 20, 8] </ref>. Several inter-domain routing protocols (e.g. BGP [17], IDRP [16], NR [11]) are based on path-vector approach [18]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. <p> If the intersection is taken, then a subdomain A can be forced to accept traffic it would otherwise not accept. Other problems are described in <ref> [7, 6, 1] </ref>. <p> This study does not address the scalability of the SDR mode. In <ref> [1] </ref>, we proposed a superdomain-based protocol which always finds a valid path if one exists and never admits an invalid path. It does this by maintaining both union and intersection constraints and using a view-query protocol.
Reference: [2] <author> C. Alaettinoglu and A. U. Shankar. </author> <title> Viewserver hierarchy: A new inter-domain routing protocol and its evaluation. </title> <type> Technical Report UMIACS-TR-93-98, </type> <institution> CS-TR-3151, Department of Computer Science, University of Maryland, College Park, </institution> <month> October </month> <year> 1993. </year> <note> Earlier version CS-TR-3033, </note> <month> February </month> <year> 1993. </year>
Reference-contexts: These approaches have drawbacks because the aggregation results in loss of detail (discussed in Section 2). Our protocol In this paper, we present an inter-domain routing protocol that we proposed recently <ref> [2, 3] </ref>. It combines domain-level views with a novel hierarchical scheme. It scales well to large internetworks, and does not suffer from the problems of superdomains. In our scheme, domain-level views are not maintained by every router but by special nodes called viewservers.
Reference: [3] <author> C. Alaettinoglu and A. U. Shankar. </author> <title> Viewserver hierarchy: A new inter-domain routing protocol. </title> <booktitle> In IEEE INFOCOM '94, </booktitle> <address> Toronto, Canada, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: These approaches have drawbacks because the aggregation results in loss of detail (discussed in Section 2). Our protocol In this paper, we present an inter-domain routing protocol that we proposed recently <ref> [2, 3] </ref>. It combines domain-level views with a novel hierarchical scheme. It scales well to large internetworks, and does not suffer from the problems of superdomains. In our scheme, domain-level views are not maintained by every router but by special nodes called viewservers. <p> In Section 5, we present our evaluation model and results from its application to the viewserver hierarchy. In Section 6, we conclude and describe how to add fault-tolerance and cacheing schemes to improve performance. This paper differs from <ref> [3] </ref> in that in the latter, the view-update protocol and the evaluation model are not present, the view-query protocol is only informally described, and the evaluation results are summarized for only one internetwork topology. 4 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS
Reference: [4] <author> A. Bar-Noy and M. Gopal. </author> <title> Topology distribution cost vs. efficient routing in large networks. </title> <booktitle> In ACM SIGCOMM '90, </booktitle> <pages> pages 242-252, </pages> <address> Philadelphia, Pennsylvania, </address> <month> September </month> <year> 1990. </year>
Reference-contexts: The cost equals 1 if all links from A to B are down. Each cost value of a domain-level edge (A; B) can be derived from the cost values of the intra-domain routes in A and links from A to B <ref> [4] </ref>. Link cost changes and link/node failures and repairs correspond to cost changes, failures and repairs of domain-level edges. Link/node failures can also partition a domain into cells [15]. A cell is a maximal subset of nodes of a domain that can reach each other without leaving the domain.
Reference: [5] <author> L. Breslau and D. Estrin. </author> <title> Design of inter-administrative domain routing protocols. </title> <booktitle> In ACM SIGCOMM '90, </booktitle> <pages> pages 231-241, </pages> <address> Philadelphia, Pennsylvania, </address> <month> September </month> <year> 1990. </year>
Reference-contexts: Across all domains, an inter-domain routing protocol is executed that provides routes between source and destination nodes in different domains. This protocol must satisfy various constraints: (1) It must satisfy policy constraints, which are administrative restrictions on the inter-domain traffic <ref> [9, 13, 10, 5] </ref>. Policy constraints are of two types: transit policies and source policies. The transit policies of a domain A specify how other domains can use the resources of A (e.g. $0.01 per packet, no traffic from domain B). <p> To do this, it must keep track of the types of services offered by each domain <ref> [5] </ref>. (3) Inter-domain routing protocols must scale up to very large internetworks, i.e. with a very large number of domains. Practically this means that processing, memory and communication requirements should be much less than linear in the number of domains. <p> A simple straightforward approach to inter-domain routing is domain-level source routing with link-state approach <ref> [9, 5] </ref>. In this approach, each router 3 maintains a domain-level view of the internetwork, i.e., a graph with a vertex for every domain and an edge between every two neighbor domains. Policy and ToS information is attached to the vertices and the edges of the view.
Reference: [6] <author> I. Castineyra, J. N. Chiappa, C. Lynn, R. Ramanathan, and M. Steenstrup. </author> <title> The nimrod routing architecture. </title> <type> Internet Draft., </type> <month> March </month> <year> 1994. </year> <note> Available by anonymous ftp from research.ftp.com:pub/nimrod. </note>
Reference-contexts: To achieve scaling, several approaches based on aggregating domains into superdomains have 3 Not all nodes maintain routing tables. A router is a node that maintains a routing table. 4 referred to as the policy server in [9] 2 been proposed <ref> [19, 16, 7, 6] </ref>. These approaches have drawbacks because the aggregation results in loss of detail (discussed in Section 2). Our protocol In this paper, we present an inter-domain routing protocol that we proposed recently [2, 3]. It combines domain-level views with a novel hierarchical scheme. <p> view-update protocol and the evaluation model are not present, the view-query protocol is only informally described, and the evaluation results are summarized for only one internetwork topology. 4 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS and policy constraints for large internetworks <ref> [17, 16, 19, 11, 7, 6, 22, 1, 21, 20, 8] </ref>. Several inter-domain routing protocols (e.g. BGP [17], IDRP [16], NR [11]) are based on path-vector approach [18]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. <p> By exchanging k paths to each destination, the probability of detecting a valid path for each source can be increased. The most common approach to solve the scaling problem is to use superdomains (e.g. IDPR [19], IDRP [16], Nimrod <ref> [7, 6] </ref>). Superdomains extend the idea of area hierarchy [12]. Here, domains are grouped hierarchically into superdomains: "close" domains are grouped into level 1 superdomains, "close" level 1 superdomains are grouped into level 2 superdomains, and so on. <p> If the intersection is taken, then a subdomain A can be forced to accept traffic it would otherwise not accept. Other problems are described in <ref> [7, 6, 1] </ref>. <p> Nimrod <ref> [7, 6] </ref> and IDPR [19] use the link-state approach, domain-level source routing, and superdomains (non-overlapping superdomains for Nimrod). IDRP [16] uses path-vector approach and a variation of superdomains (which are referred to as routing domain confederations). <p> One drawback of our protocol is that to obtain a domain-level source route, views are merged at or prior to the connection setup, thereby increasing the setup time. This drawback is not unique to our scheme <ref> [9, 19, 7, 6, 11] </ref>. There are several ways to reduce this setup overhead. First, domain-level source routes to frequently used destinations can be cached. Second, views of frequently queried viewservers can be replicated at "mirror" viewservers close to the source domain.
Reference: [7] <author> J. N. Chiappa. </author> <title> A new ip routing and addressing architecture. </title> <type> Internet Draft., </type> <year> 1992. </year> <note> Available by anonymous ftp from research.ftp.com:pub/nimrod. </note>
Reference-contexts: To achieve scaling, several approaches based on aggregating domains into superdomains have 3 Not all nodes maintain routing tables. A router is a node that maintains a routing table. 4 referred to as the policy server in [9] 2 been proposed <ref> [19, 16, 7, 6] </ref>. These approaches have drawbacks because the aggregation results in loss of detail (discussed in Section 2). Our protocol In this paper, we present an inter-domain routing protocol that we proposed recently [2, 3]. It combines domain-level views with a novel hierarchical scheme. <p> view-update protocol and the evaluation model are not present, the view-query protocol is only informally described, and the evaluation results are summarized for only one internetwork topology. 4 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS and policy constraints for large internetworks <ref> [17, 16, 19, 11, 7, 6, 22, 1, 21, 20, 8] </ref>. Several inter-domain routing protocols (e.g. BGP [17], IDRP [16], NR [11]) are based on path-vector approach [18]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. <p> By exchanging k paths to each destination, the probability of detecting a valid path for each source can be increased. The most common approach to solve the scaling problem is to use superdomains (e.g. IDPR [19], IDRP [16], Nimrod <ref> [7, 6] </ref>). Superdomains extend the idea of area hierarchy [12]. Here, domains are grouped hierarchically into superdomains: "close" domains are grouped into level 1 superdomains, "close" level 1 superdomains are grouped into level 2 superdomains, and so on. <p> If the intersection is taken, then a subdomain A can be forced to accept traffic it would otherwise not accept. Other problems are described in <ref> [7, 6, 1] </ref>. <p> Nimrod <ref> [7, 6] </ref> and IDPR [19] use the link-state approach, domain-level source routing, and superdomains (non-overlapping superdomains for Nimrod). IDRP [16] uses path-vector approach and a variation of superdomains (which are referred to as routing domain confederations). <p> One drawback of our protocol is that to obtain a domain-level source route, views are merged at or prior to the connection setup, thereby increasing the setup time. This drawback is not unique to our scheme <ref> [9, 19, 7, 6, 11] </ref>. There are several ways to reduce this setup overhead. First, domain-level source routes to frequently used destinations can be cached. Second, views of frequently queried viewservers can be replicated at "mirror" viewservers close to the source domain.
Reference: [8] <author> D. Clark. </author> <title> Route fragments, a routing proposal. Big-Internet mailing list., </title> <month> July </month> <year> 1992. </year> <note> Available by anonymous ftp from munnari.oz.au:big-internet/list-archive. </note>
Reference-contexts: view-update protocol and the evaluation model are not present, the view-query protocol is only informally described, and the evaluation results are summarized for only one internetwork topology. 4 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS and policy constraints for large internetworks <ref> [17, 16, 19, 11, 7, 6, 22, 1, 21, 20, 8] </ref>. Several inter-domain routing protocols (e.g. BGP [17], IDRP [16], NR [11]) are based on path-vector approach [18]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. <p> In the landmark hierarchy, nodes within the radius of a landmark maintain a route to the landmark, but the landmark may not have a route to these nodes. In the viewserver hierarchy, a viewserver maintains routes to the nodes in its precinct. Route fragments <ref> [8] </ref> is a mechanism to glue together precomputed partial source routes to obtain a route from a source node to a destination node. A destination route fragment, called a route suffix, is a sequence of domain ids from a backbone to the destination domain. <p> A RequestView message is sent by a source to obtain an accumulated view containing 9 Querying the name servers can be done the same way it is done currently in the Internet. 10 This is similiar to matching route fragments <ref> [8] </ref>. However, in our case the sequence is computed in a distributed fashion (this is needed to handle topology changes). 9 both the source and the destination domains.
Reference: [9] <author> D.D. Clark. </author> <title> Policy routing in internet protocols. Request for Comment RFC-1102, </title> <institution> Network Information Center, </institution> <month> May </month> <year> 1989. </year> <month> 26 </month>
Reference-contexts: Across all domains, an inter-domain routing protocol is executed that provides routes between source and destination nodes in different domains. This protocol must satisfy various constraints: (1) It must satisfy policy constraints, which are administrative restrictions on the inter-domain traffic <ref> [9, 13, 10, 5] </ref>. Policy constraints are of two types: transit policies and source policies. The transit policies of a domain A specify how other domains can use the resources of A (e.g. $0.01 per packet, no traffic from domain B). <p> A simple straightforward approach to inter-domain routing is domain-level source routing with link-state approach <ref> [9, 5] </ref>. In this approach, each router 3 maintains a domain-level view of the internetwork, i.e., a graph with a vertex for every domain and an edge between every two neighbor domains. Policy and ToS information is attached to the vertices and the edges of the view. <p> To achieve scaling, several approaches based on aggregating domains into superdomains have 3 Not all nodes maintain routing tables. A router is a node that maintains a routing table. 4 referred to as the policy server in <ref> [9] </ref> 2 been proposed [19, 16, 7, 6]. These approaches have drawbacks because the aggregation results in loss of detail (discussed in Section 2). Our protocol In this paper, we present an inter-domain routing protocol that we proposed recently [2, 3]. It combines domain-level views with a novel hierarchical scheme. <p> One drawback of our protocol is that to obtain a domain-level source route, views are merged at or prior to the connection setup, thereby increasing the setup time. This drawback is not unique to our scheme <ref> [9, 19, 7, 6, 11] </ref>. There are several ways to reduce this setup overhead. First, domain-level source routes to frequently used destinations can be cached. Second, views of frequently queried viewservers can be replicated at "mirror" viewservers close to the source domain.
Reference: [10] <author> D. Estrin. </author> <title> Policy requirements for inter administrative domain routing. Request for Comment RFC--1125, </title> <institution> Network Information Center, </institution> <month> November </month> <year> 1989. </year>
Reference-contexts: Across all domains, an inter-domain routing protocol is executed that provides routes between source and destination nodes in different domains. This protocol must satisfy various constraints: (1) It must satisfy policy constraints, which are administrative restrictions on the inter-domain traffic <ref> [9, 13, 10, 5] </ref>. Policy constraints are of two types: transit policies and source policies. The transit policies of a domain A specify how other domains can use the resources of A (e.g. $0.01 per packet, no traffic from domain B). <p> Practically this means that processing, memory and communication requirements should be much less than linear in the number of domains. It must also handle non-hierarchical domain interconnections at any level <ref> [10] </ref> (e.g. we do not want to hand configure special routes as "back-doors"). (4) Inter-domain routing protocols must automatically adapt to link cost changes, node/link failures and repairs including failures that partition domains [15]. A simple straightforward approach to inter-domain routing is domain-level source routing with link-state approach [9, 5].
Reference: [11] <author> D. Estrin, Y. Rekhter, and S. Hotz. </author> <title> Scalable inter-domain routing architecture. </title> <booktitle> In ACM SIGCOMM '92, </booktitle> <pages> pages 40-52, </pages> <address> Baltimore, Maryland, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: view-update protocol and the evaluation model are not present, the view-query protocol is only informally described, and the evaluation results are summarized for only one internetwork topology. 4 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS and policy constraints for large internetworks <ref> [17, 16, 19, 11, 7, 6, 22, 1, 21, 20, 8] </ref>. Several inter-domain routing protocols (e.g. BGP [17], IDRP [16], NR [11]) are based on path-vector approach [18]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. <p> Several inter-domain routing protocols (e.g. BGP [17], IDRP [16], NR <ref> [11] </ref>) are based on path-vector approach [18]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. ToS and policy information is attached to these paths. These paths are also used to avoid routing loops. <p> Nimrod [7, 6] and IDPR [19] use the link-state approach, domain-level source routing, and superdomains (non-overlapping superdomains for Nimrod). IDRP [16] uses path-vector approach and a variation of superdomains (which are referred to as routing domain confederations). Reference <ref> [11] </ref> combines the benefits of path-vector approach and link-state approach by having two modes: An NR mode, which is an extension of IDRP and is used for the most common ToS and policy constraints; and a SDR mode, which is like IDPR and is used for less frequent ToS and policy <p> One drawback of our protocol is that to obtain a domain-level source route, views are merged at or prior to the connection setup, thereby increasing the setup time. This drawback is not unique to our scheme <ref> [9, 19, 7, 6, 11] </ref>. There are several ways to reduce this setup overhead. First, domain-level source routes to frequently used destinations can be cached. Second, views of frequently queried viewservers can be replicated at "mirror" viewservers close to the source domain.
Reference: [12] <author> F. Kamoun and L. Kleinrock. </author> <title> Stochastic performance evaluation of hierarchical routing for large networks. </title> <booktitle> Computer Networks and ISDN Systems, </booktitle> <year> 1979. </year>
Reference-contexts: By exchanging k paths to each destination, the probability of detecting a valid path for each source can be increased. The most common approach to solve the scaling problem is to use superdomains (e.g. IDPR [19], IDRP [16], Nimrod [7, 6]). Superdomains extend the idea of area hierarchy <ref> [12] </ref>. Here, domains are grouped hierarchically into superdomains: "close" domains are grouped into level 1 superdomains, "close" level 1 superdomains are grouped into level 2 superdomains, and so on.
Reference: [13] <author> B.M. Leiner. </author> <title> Policy issues in interconnecting networks. Request for Comment RFC-1124, </title> <institution> Network Information Center, </institution> <month> September </month> <year> 1989. </year>
Reference-contexts: Across all domains, an inter-domain routing protocol is executed that provides routes between source and destination nodes in different domains. This protocol must satisfy various constraints: (1) It must satisfy policy constraints, which are administrative restrictions on the inter-domain traffic <ref> [9, 13, 10, 5] </ref>. Policy constraints are of two types: transit policies and source policies. The transit policies of a domain A specify how other domains can use the resources of A (e.g. $0.01 per packet, no traffic from domain B).
Reference: [14] <author> P. V. Mockapetris. </author> <title> Domain names concepts and facilities. Request for Comment RFC-1034, </title> <institution> Network Information Center, </institution> <month> November </month> <year> 1987. </year>
Reference-contexts: A node may have many addresses since the parent-child relationship is many-to-many. If a source wants a domain-level source route to a destination, it first queries the name servers <ref> [14] </ref> to obtain a set of addresses for the destination 9 . Then, it queries viewservers to obtain an accumulated view containing both its domain and the destination's domain. Nodes can reach the viewservers in their domains using the intra-domain routing protocol of the domain.
Reference: [15] <author> R. Perlman. </author> <title> Hierarchical networks and subnetwork partition problem. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 9 </volume> <pages> 297-303, </pages> <year> 1985. </year>
Reference-contexts: It must also handle non-hierarchical domain interconnections at any level [10] (e.g. we do not want to hand configure special routes as "back-doors"). (4) Inter-domain routing protocols must automatically adapt to link cost changes, node/link failures and repairs including failures that partition domains <ref> [15] </ref>. A simple straightforward approach to inter-domain routing is domain-level source routing with link-state approach [9, 5]. In this approach, each router 3 maintains a domain-level view of the internetwork, i.e., a graph with a vertex for every domain and an edge between every two neighbor domains. <p> Link cost changes and link/node failures and repairs correspond to cost changes, failures and repairs of domain-level edges. Link/node failures can also partition a domain into cells <ref> [15] </ref>. A cell is a maximal subset of nodes of a domain that can reach each other without leaving the domain. In the same way, link/node repairs may merge cells into bigger cells. We identify a cell with the minimum node-id of the gateways in the cell 12 .
Reference: [16] <author> Y. Rekhter. </author> <title> Inter-domain routing protocol (idrp). </title> <journal> Journal of Internetworking Research and Experience, </journal> <volume> 4 </volume> <pages> 61-80, </pages> <year> 1993. </year>
Reference-contexts: To achieve scaling, several approaches based on aggregating domains into superdomains have 3 Not all nodes maintain routing tables. A router is a node that maintains a routing table. 4 referred to as the policy server in [9] 2 been proposed <ref> [19, 16, 7, 6] </ref>. These approaches have drawbacks because the aggregation results in loss of detail (discussed in Section 2). Our protocol In this paper, we present an inter-domain routing protocol that we proposed recently [2, 3]. It combines domain-level views with a novel hierarchical scheme. <p> view-update protocol and the evaluation model are not present, the view-query protocol is only informally described, and the evaluation results are summarized for only one internetwork topology. 4 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS and policy constraints for large internetworks <ref> [17, 16, 19, 11, 7, 6, 22, 1, 21, 20, 8] </ref>. Several inter-domain routing protocols (e.g. BGP [17], IDRP [16], NR [11]) are based on path-vector approach [18]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. <p> Several inter-domain routing protocols (e.g. BGP [17], IDRP <ref> [16] </ref>, NR [11]) are based on path-vector approach [18]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. ToS and policy information is attached to these paths. These paths are also used to avoid routing loops. <p> By exchanging k paths to each destination, the probability of detecting a valid path for each source can be increased. The most common approach to solve the scaling problem is to use superdomains (e.g. IDPR [19], IDRP <ref> [16] </ref>, Nimrod [7, 6]). Superdomains extend the idea of area hierarchy [12]. Here, domains are grouped hierarchically into superdomains: "close" domains are grouped into level 1 superdomains, "close" level 1 superdomains are grouped into level 2 superdomains, and so on. <p> Nimrod [7, 6] and IDPR [19] use the link-state approach, domain-level source routing, and superdomains (non-overlapping superdomains for Nimrod). IDRP <ref> [16] </ref> uses path-vector approach and a variation of superdomains (which are referred to as routing domain confederations).
Reference: [17] <author> Y. Rekhter and T. Li. </author> <title> A border gateway protocol 4 (bgp-4). Request for Comment RFC-1654, </title> <institution> Network Information Center, </institution> <month> July </month> <year> 1994. </year>
Reference-contexts: view-update protocol and the evaluation model are not present, the view-query protocol is only informally described, and the evaluation results are summarized for only one internetwork topology. 4 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS and policy constraints for large internetworks <ref> [17, 16, 19, 11, 7, 6, 22, 1, 21, 20, 8] </ref>. Several inter-domain routing protocols (e.g. BGP [17], IDRP [16], NR [11]) are based on path-vector approach [18]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. <p> Several inter-domain routing protocols (e.g. BGP <ref> [17] </ref>, IDRP [16], NR [11]) are based on path-vector approach [18]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. ToS and policy information is attached to these paths. These paths are also used to avoid routing loops.
Reference: [18] <author> K. G. Shin and M. Chen. </author> <title> Performance analysis of distributed routing strategies free of ping-pong-type looping. </title> <journal> IEEE Transactions on Computers, </journal> <year> 1987. </year>
Reference-contexts: Several inter-domain routing protocols (e.g. BGP [17], IDRP [16], NR [11]) are based on path-vector approach <ref> [18] </ref>. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. ToS and policy information is attached to these paths. These paths are also used to avoid routing loops.
Reference: [19] <author> M. Steenstrup. </author> <title> An architecture for inter-domain policy routing. Request for Comment RFC-1478, </title> <institution> Network Information Center, </institution> <month> July </month> <year> 1993. </year>
Reference-contexts: To achieve scaling, several approaches based on aggregating domains into superdomains have 3 Not all nodes maintain routing tables. A router is a node that maintains a routing table. 4 referred to as the policy server in [9] 2 been proposed <ref> [19, 16, 7, 6] </ref>. These approaches have drawbacks because the aggregation results in loss of detail (discussed in Section 2). Our protocol In this paper, we present an inter-domain routing protocol that we proposed recently [2, 3]. It combines domain-level views with a novel hierarchical scheme. <p> view-update protocol and the evaluation model are not present, the view-query protocol is only informally described, and the evaluation results are summarized for only one internetwork topology. 4 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS and policy constraints for large internetworks <ref> [17, 16, 19, 11, 7, 6, 22, 1, 21, 20, 8] </ref>. Several inter-domain routing protocols (e.g. BGP [17], IDRP [16], NR [11]) are based on path-vector approach [18]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. <p> For each destination, a router exchanges its best valid path 6 with its neighbor routers. However, a path-vector algorithm may not find a valid path from a source to the destination even if such a route exists <ref> [19] </ref>. By exchanging k paths to each destination, the probability of detecting a valid path for each source can be increased. The most common approach to solve the scaling problem is to use superdomains (e.g. IDPR [19], IDRP [16], Nimrod [7, 6]). Superdomains extend the idea of area hierarchy [12]. <p> valid path from a source to the destination even if such a route exists <ref> [19] </ref>. By exchanging k paths to each destination, the probability of detecting a valid path for each source can be increased. The most common approach to solve the scaling problem is to use superdomains (e.g. IDPR [19], IDRP [16], Nimrod [7, 6]). Superdomains extend the idea of area hierarchy [12]. Here, domains are grouped hierarchically into superdomains: "close" domains are grouped into level 1 superdomains, "close" level 1 superdomains are grouped into level 2 superdomains, and so on. <p> The usual techniques are to take either the union or the intersection of the constraints of the subdomains <ref> [19] </ref> 7 . Both techniques have problems. For example, if the union is taken, then a subdomain A can be forced to obey constraints of other subdomains; this may eliminate a path through A which is otherwise valid. <p> Nimrod [7, 6] and IDPR <ref> [19] </ref> use the link-state approach, domain-level source routing, and superdomains (non-overlapping superdomains for Nimrod). IDRP [16] uses path-vector approach and a variation of superdomains (which are referred to as routing domain confederations). <p> To reach the next domain cell in a domain-level source route, the intra-domain routing protocol of a domain should keep track of the domain cells reachable through each of its gateways. 12 Our cells are like the domain components of IDPR <ref> [19] </ref>. 12 View-Update Protocol: Updating Domain-Level Views Viewservers do not communicate with each other to maintain their views. Gateways detect and communicate domain-level topology changes to viewservers. <p> This is because of lack of time, and because precise definitions of the hierarchies in these protocols is not available. For example, to do a fair evaluation of IDPR <ref> [19] </ref>, we need precise guidelines for how to group domains into super-domains, and how to choose between the union and intersection methods when defining policy/ToS constraints of super-domains. In fact, these protocols have not been evaluated in a way that we can compare them to the viewserver hierarchy. <p> One drawback of our protocol is that to obtain a domain-level source route, views are merged at or prior to the connection setup, thereby increasing the setup time. This drawback is not unique to our scheme <ref> [9, 19, 7, 6, 11] </ref>. There are several ways to reduce this setup overhead. First, domain-level source routes to frequently used destinations can be cached. Second, views of frequently queried viewservers can be replicated at "mirror" viewservers close to the source domain.
Reference: [20] <author> P. F. Tsuchiya. </author> <title> The landmark hierarchy: Description and analysis, the landmark routing: Architecture algorithms and issues. </title> <type> Technical Report MTR-87W00152, </type> <institution> MTR-87W00174, The MITRE Corporation, </institution> <address> McLean, Virginia, </address> <year> 1987. </year>
Reference-contexts: view-update protocol and the evaluation model are not present, the view-query protocol is only informally described, and the evaluation results are summarized for only one internetwork topology. 4 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS and policy constraints for large internetworks <ref> [17, 16, 19, 11, 7, 6, 22, 1, 21, 20, 8] </ref>. Several inter-domain routing protocols (e.g. BGP [17], IDRP [16], NR [11]) are based on path-vector approach [18]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. <p> Even though this protocol scales well for realistic internetwork topologies (e.g. where each superdomain is connected to at most log N D external domains), its worst-case storage requirement can be linear in N D . The landmark hierarchy <ref> [21, 20] </ref> is another approach for solving the scaling problem. Here, each router is a landmark with a radius, and routers which are within a radius away from the landmark maintain a route to it.
Reference: [21] <author> P. F. Tsuchiya. </author> <title> The landmark hierarchy:a new hierarchy for routing in very large networks. </title> <booktitle> In ACM SIGCOMM '88, </booktitle> <month> August </month> <year> 1988. </year>
Reference-contexts: view-update protocol and the evaluation model are not present, the view-query protocol is only informally described, and the evaluation results are summarized for only one internetwork topology. 4 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS and policy constraints for large internetworks <ref> [17, 16, 19, 11, 7, 6, 22, 1, 21, 20, 8] </ref>. Several inter-domain routing protocols (e.g. BGP [17], IDRP [16], NR [11]) are based on path-vector approach [18]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers. <p> Even though this protocol scales well for realistic internetwork topologies (e.g. where each superdomain is connected to at most log N D external domains), its worst-case storage requirement can be linear in N D . The landmark hierarchy <ref> [21, 20] </ref> is another approach for solving the scaling problem. Here, each router is a landmark with a radius, and routers which are within a radius away from the landmark maintain a route to it.
Reference: [22] <author> P. F. Tsuchiya. </author> <title> Efficient and robust policy routing using multiple hierarchical addresses. </title> <booktitle> In ACM SIGCOMM '91, </booktitle> <pages> pages 53-65, </pages> <address> Zurich, Switzerland, </address> <month> September </month> <year> 1991. </year>
Reference-contexts: view-update protocol and the evaluation model are not present, the view-query protocol is only informally described, and the evaluation results are summarized for only one internetwork topology. 4 2 Related Work In this section, we survey recently proposed inter-domain routing protocols that support ToS and policy constraints for large internetworks <ref> [17, 16, 19, 11, 7, 6, 22, 1, 21, 20, 8] </ref>. Several inter-domain routing protocols (e.g. BGP [17], IDRP [16], NR [11]) are based on path-vector approach [18]. Here, for each destination domain a router maintains a set of paths, one through each of its neighbor routers.
References-found: 22

