URL: http://www.cs.ucla.edu/~zaniolo/cz/fqas98.ps
Refering-URL: http://www.cs.ucla.edu/~zaniolo/cz/ZanioloPapers.html
Root-URL: http://www.cs.ucla.edu
Email: greco@si.deis.unical.it  zaniolo@cs.ucla.edu  sumit@cs.rutgers.edu  
Phone: 2  3  
Title: Third Int. Conf. on Flexible Query Answering Syst., FQAS'98 Optimization of Logic Queries with MIN
Author: Sergio Greco, Carlo Zaniolo and Sumit Ganguly 
Address: 87030 Rende, Italy  Los Angeles, CA 90024  New Brunswick, NJ 08903  
Affiliation: 1 DEIS, Univ. della Calabria,  Computer Science Dept., Univ. of California,  Dept. of Computer Science, Rutgers University,  
Abstract: We propose an algorithm for pushing min and max aggregates into recursive predicates, while preserving query equivalence under certain monotonicity constraints. The transformed query is often safe when the original one is not, and more efficient than the original query when this is safe.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> K. Apt, H. Blair, and A. Walker. </author> <title> Towards a theory of declarative programming. In (Foundations of Deductive Databases and Logic Programming (Minker, </title> <editor> ed.), </editor> <year> 1988. </year>
Reference-contexts: This has formal semantics, inasmuch as by rewriting the min predicates by means of negation, we get a stratified program <ref> [1] </ref>. However, a straightforward evaluation of such a stratified program would materialize the predicate ? The work of the first author has been supported by the project MURST 40 % "". path (X,Y,C) and then choose the smallest cost tuple for every X and Y.
Reference: 2. <author> M.P. Consens and A.O. Mendelzon. </author> <title> Low complexity aggregation in graphlog and Datalog. </title> <booktitle> Theoretical Computer Science, </booktitle> <year> 1993. </year>
Reference-contexts: These problems, widely recognized by deductive database researchers, have been the subject of recent works <ref> [2, 3, 5, 7, 8, 9, 10, 14, 16, 18, 21] </ref>. Although our discussion deals explicitly only with min programs, the symmetric properties of max programs follow by duality.
Reference: 3. <author> S. W. Dietrich. </author> <title> Shortest Path by Approximation in Logic Programs. </title> <journal> ACM Letters on Programming Languages and Systems Vol 1, </journal> <volume> No, 2, </volume> <pages> pages 119-137, </pages> <month> June </month> <year> 1992,. </year>
Reference-contexts: These problems, widely recognized by deductive database researchers, have been the subject of recent works <ref> [2, 3, 5, 7, 8, 9, 10, 14, 16, 18, 21] </ref>. Although our discussion deals explicitly only with min programs, the symmetric properties of max programs follow by duality.
Reference: 4. <author> S. J. Finkelstein, N. Mattos, I.S. Mumick and H. Pirahesh. </author> <title> Expressing Recursive Queries in SQL. ISO - IEC JTC1/SC21 WG3 DBL MCI Tec. </title> <type> Rep., </type> <month> March, </month> <year> 1996. </year>
Reference: 5. <author> S. Ganguly, S. Greco, and C. Zaniolo. </author> <title> Extrema predicates in deductive databases. </title> <journal> J. Computer and System Science, </journal> <year> 1995. </year>
Reference-contexts: These problems, widely recognized by deductive database researchers, have been the subject of recent works <ref> [2, 3, 5, 7, 8, 9, 10, 14, 16, 18, 21] </ref>. Although our discussion deals explicitly only with min programs, the symmetric properties of max programs follow by duality. <p> In particular, a very efficient algorithm for the computation of monotonic queries with unstratified min and max aggregates was presented in <ref> [5] </ref>. Therefore, we are seeking techniques to rewrite stratified queries into equivalent unstratified ones. 2 Syntax and Semantics The notion of a minimum naturally assumes the existence of a domain of constants over which a total order is defined. <p> We will only consider programs where each recursive set of predicates consists of cost predicates (called min clique) or standard predicates (called standard clique). Standard cliques are computed by using the classical fixpoint computation whereas min cliques are computed by using special algorithms such as the greedy fixpoint of <ref> [5] </ref>. Predicates that appear inside special atoms will be called minimized predicates. 3 Propagation of min predicates In this section, we present an algorithm for transforming monotonic-min programs into query-equivalent programs which can be more efficiently evaluated using the semi-naive greedy operator G P [5]. <p> such as the greedy fixpoint of <ref> [5] </ref>. Predicates that appear inside special atoms will be called minimized predicates. 3 Propagation of min predicates In this section, we present an algorithm for transforming monotonic-min programs into query-equivalent programs which can be more efficiently evaluated using the semi-naive greedy operator G P [5]. <p> The main contribution consists of a precise algorithm for the propagation of min and max predicates into logic programs. The propagation of such meta-level predicates permits the efficient computation, by using a variation of the seminaive fixpoint, called seminaive greedy fixpoint <ref> [5] </ref>, of logic programs with min and max predicates. In [5] it has been shown that the computation of the single source shortest path program of Example 1, after the propagation of the min predicates, has the same complexity of the celebrated Dijkstra's algorithm. <p> The propagation of such meta-level predicates permits the efficient computation, by using a variation of the seminaive fixpoint, called seminaive greedy fixpoint <ref> [5] </ref>, of logic programs with min and max predicates. In [5] it has been shown that the computation of the single source shortest path program of Example 1, after the propagation of the min predicates, has the same complexity of the celebrated Dijkstra's algorithm.
Reference: 6. <author> M. Gelfond and V. Lifschitz. </author> <title> The stable model semantics of logic programming. </title> <booktitle> In Proc. of the Fifth Intern. Conf. on Logic Programming, </booktitle> <pages> pages 1070-1080, </pages> <year> 1988. </year>
Reference: 7. <author> S. Greco, S. Ganguly, and C. Zaniolo. </author> <title> Greedy by Choice. </title> <booktitle> Proc. Eleventh ACM PODS Conf., </booktitle> <pages> pages 109-118, </pages> <year> 1991. </year>
Reference-contexts: These problems, widely recognized by deductive database researchers, have been the subject of recent works <ref> [2, 3, 5, 7, 8, 9, 10, 14, 16, 18, 21] </ref>. Although our discussion deals explicitly only with min programs, the symmetric properties of max programs follow by duality.
Reference: 8. <author> S. Greco, D. Sacca, and C. Zaniolo. </author> <title> Dynamic Programming optimization for Logic Programs with Aggregates. </title> <booktitle> Proc. Int. Logic Progr. Symp., </booktitle> <pages> pages 109-118, </pages> <year> 1993. </year>
Reference-contexts: These problems, widely recognized by deductive database researchers, have been the subject of recent works <ref> [2, 3, 5, 7, 8, 9, 10, 14, 16, 18, 21] </ref>. Although our discussion deals explicitly only with min programs, the symmetric properties of max programs follow by duality.
Reference: 9. <author> D. Kemp and P. Stuckey. </author> <title> Semantics of Logic Programs with Aggregates. </title> <booktitle> In Proc. of the 1991 Intern. Symposium on Logic Programming, </booktitle> <pages> pages 387-341, </pages> <year> 1991. </year>
Reference-contexts: These problems, widely recognized by deductive database researchers, have been the subject of recent works <ref> [2, 3, 5, 7, 8, 9, 10, 14, 16, 18, 21] </ref>. Although our discussion deals explicitly only with min programs, the symmetric properties of max programs follow by duality.
Reference: 10. <author> I.S. Mumick, H. Pirahesh, and R. Ramakrishnan. </author> <title> The magic of duplicates and aggregates. </title> <booktitle> In Proc. 16th Conf. on Very Large Data Bases, </booktitle> <pages> pages 264-277, </pages> <year> 1990. </year>
Reference-contexts: These problems, widely recognized by deductive database researchers, have been the subject of recent works <ref> [2, 3, 5, 7, 8, 9, 10, 14, 16, 18, 21] </ref>. Although our discussion deals explicitly only with min programs, the symmetric properties of max programs follow by duality.
Reference: 11. <author> I.S. Mumick, and O. Shmueli. </author> <title> How Expressive is Stratified Aggregation. </title> <journal> In Annals of Mathematics and Artificial Intelligence, </journal> <year> 1995. </year>
Reference-contexts: Here we use Datalog to study how min and max aggregates are propagated down into queries, since this simplies the presentation; however, similar techniques can be applied directly to the optimization of recursive SQL queries. Observe that stratified aggregation has very high expressive power on ordered domains <ref> [11] </ref> and, therefore, queries should be written by using stratified aggregates which have clear and intuitive semantics.
Reference: 12. <author> H. Przymusinska and T.C. Przymusinski. </author> <title> Weakly perfect model semantics for logic programs. </title> <booktitle> In Proc. Fifth Intern. Conf. on Logic Progr., </booktitle> <pages> pages 1106-1120, </pages> <year> 1988. </year>
Reference: 13. <author> K. Ross. </author> <title> A Procedural Semantics for the Well-Founded Negation in Logic Programs. </title> <booktitle> In Proc. ACM Symp. on Principles of Database Systems, </booktitle> <pages> pages 22-33, </pages> <year> 1989. </year>
Reference-contexts: The technique presented in the paper can be also extended to programs presenting different forms of monotonicity such as XY-stratification [22] and modular stratification <ref> [13] </ref>.
Reference: 14. <author> K. Ross and Y. Sagiv. </author> <title> Monotonic Aggregation in Deductive Databases. </title> <booktitle> Proc. Eleventh ACM PODS Conf., </booktitle> <year> 1992. </year>
Reference-contexts: These problems, widely recognized by deductive database researchers, have been the subject of recent works <ref> [2, 3, 5, 7, 8, 9, 10, 14, 16, 18, 21] </ref>. Although our discussion deals explicitly only with min programs, the symmetric properties of max programs follow by duality.
Reference: 15. <author> D. Sacca and C. Zaniolo. </author> <title> Stable models and non-determinism in logic programs with negation. </title> <booktitle> In Proc. of the Ninth ACM PODS Conf., </booktitle> <pages> pages 205-217, </pages> <year> 1990. </year>
Reference: 16. <author> S. Sudarshan and R. Ramakrishnan. </author> <title> Aggregation and relevance in deductive databases. </title> <booktitle> In Proc. of the 17th Conf. on Very Large Data Bases, </booktitle> <year> 1991. </year>
Reference-contexts: These problems, widely recognized by deductive database researchers, have been the subject of recent works <ref> [2, 3, 5, 7, 8, 9, 10, 14, 16, 18, 21] </ref>. Although our discussion deals explicitly only with min programs, the symmetric properties of max programs follow by duality.
Reference: 17. <author> R. Ramakrishnan, D. Srivastava, and S. Sudarshan. </author> <title> CORAL: Control, Relations and Logic. </title> <booktitle> In Proc. of Intl. Conf. on Very Large Data Bases, </booktitle> <year> 1992. </year>
Reference: 18. <author> S. Sudarshan, D. Srivastava, R. Ramakrishnan and C. Beeri, </author> <title> Extending Well-Founded and Valid Semantics for Aggregation, </title> <booktitle> In Proc. of the Int. Logic Programming Symposium, </booktitle> <pages> pages 591-608, </pages> <year> 1992. </year>
Reference-contexts: These problems, widely recognized by deductive database researchers, have been the subject of recent works <ref> [2, 3, 5, 7, 8, 9, 10, 14, 16, 18, 21] </ref>. Although our discussion deals explicitly only with min programs, the symmetric properties of max programs follow by duality.
Reference: 19. <author> J. Ullman. </author> <title> Principles of Data and Knowledge-Base Systems, </title> <booktitle> volume 1 and 2. </booktitle> <publisher> Computer Science Press, </publisher> <address> New York, </address> <year> 1988. </year>
Reference: 20. <author> A. Van Gelder, K.A. Ross, and J.S. Schlipf. </author> <title> The well-founded semantics for general logic programs. </title> <journal> Journal of ACM, </journal> <volume> 38(3) </volume> <pages> 620-650, </pages> <year> 1991. </year>
Reference: 21. <author> A. Van Gelder. </author> <booktitle> Foundation of Aggregation in Deductive Databases In Proceedings of the Third Int. Conf. on Deductive and O-O Databases, </booktitle> <address> Phoenix, AZ, </address> <year> 1993. </year>
Reference-contexts: These problems, widely recognized by deductive database researchers, have been the subject of recent works <ref> [2, 3, 5, 7, 8, 9, 10, 14, 16, 18, 21] </ref>. Although our discussion deals explicitly only with min programs, the symmetric properties of max programs follow by duality.
Reference: 22. <author> C. Zaniolo, N. Arni, and K. Ong. </author> <title> Negation and aggregates in recursive rules: the LDL++ approach, </title> <booktitle> In Proc. Int. Conf. od Deductive and Object Oriented Databases, </booktitle> <pages> pp. 204-221, </pages> <year> 1993. </year> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: The technique presented in the paper can be also extended to programs presenting different forms of monotonicity such as XY-stratification <ref> [22] </ref> and modular stratification [13].
References-found: 22

