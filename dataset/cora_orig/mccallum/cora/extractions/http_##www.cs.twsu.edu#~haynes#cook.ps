URL: http://www.cs.twsu.edu/~haynes/cook.ps
Refering-URL: http://adept.cs.twsu.edu/~thomas/publications.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: E-mail: haynes@cs.twsu.edu  
Phone: Phone: (316) 978-3925  
Title: Perturbing the Representation, Decoding, and Evaluation of Chromosomes  
Author: Thomas Haynes 
Address: Wichita, KS 67260  
Affiliation: Department of Computer Science Wichita State University  
Abstract: We investigate different genetic algorithm and genetic programming variants of representation, decoding, and evaluation of chromosomes for clique detection in graph. Small changes can drastically impact finding the evolutionary process, making fair comparisons difficult.
Abstract-found: 1
Intro-found: 1
Reference: [ Andre and Teller, 1996 ] <author> David Andre and Astro Teller. </author> <title> A study in program response and the negative effects of introns in genetic programming. </title> <editor> In John R. Koza, David E. Goldberg, David B. Fogel, and Rick L. Ri-olo, editors, </editor> <booktitle> Genetic Programming 1996: Proceedings of the First Annual Conference, </booktitle> <pages> pages 12-20, </pages> <address> Stanford University, CA, USA, 28-31 July 1996. </address> <publisher> MIT Press. </publisher>
Reference-contexts: Consider the chromosome in Figure 5 and assume that subtree mutation has disrupted subtree B, i.e., the candidate clique f4; 5; 6g. While the subgraph induced by this subtree is no longer complete, the ExtCon node acts as barrier and isolates the damage to this subtree (see <ref> [ Andre and Teller, 1996 ] </ref> for an overview of adverse subtree interaction).
Reference: [ Bui and Eppley, 1995 ] <author> Thang Nguyen Bui and Paul H. Eppley. </author> <title> A hybrid genetic algorithm for the maximum clique problem. </title> <editor> In Larry Eshelman, editor, </editor> <booktitle> Proceedings of the Sixth International Conference on Genetic Algorithms, </booktitle> <pages> pages 478-484, </pages> <address> San Francisco, CA, 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: [ Daida et al., 1997 ] <author> Jason Daida, Steven Ross, Jeffrey McClain, Derrick Ampy, and Michael Holczer. </author> <title> Challenges with verification, repeatability, and meaningful comparisons in genetic programming. </title> <editor> In John R. Koza, Kalyanmoy Deb, Marco Dorigo, David B. Fogel, Max Garzon, Hitoshi Iba, and Rick L. Riolo, editors, </editor> <booktitle> Genetic Programming 1997: Proceedings of the Second Annual Conference, </booktitle> <pages> pages 64-69, </pages> <address> Stanford University, CA, USA, 13-16 July 1997. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: We will discuss the impact changing the function and terminal sets has on evolution and also investigate more insidious complications which hinder both evolution and the verification, repeatability, and meaningful comparisons of experiments <ref> [ Daida et al., 1997 ] </ref> .
Reference: [ Falkenauer, 1995 ] <author> Emanuel Falkenauer. </author> <title> Solving equal piles with the grouping genetic algorithm. </title> <editor> In Larry Eshelman, editor, </editor> <booktitle> Proceedings of the Sixth International Conference on Genetic Algorithms, </booktitle> <pages> pages 492-497, </pages> <address> San Francisco, CA, 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: As mentioned in Section 3.2.3, both the GA encoding of Bui and Eppley and their previous GP encoding could not maintain several candidate cliques in a single chromosome. They utilize a grouping GA <ref> [ Falkenauer, 1995 ] </ref> to maintain multiple candidate cliques in the chromosome. They fix the number of initial groups in a chromosome to be initially 30 and slowly reduce it to 4.
Reference: [ Garey and Johnson, 1979 ] <author> Michael R. Garey and David S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. W.H. </title> <publisher> Freeman and Co., </publisher> <address> San Francisco, CA, </address> <year> 1979. </year>
Reference-contexts: Thus, each different problem we consider will have different terminal set sizes 1 . We consider two NP-complete problems, finding either the maximum clique, max clique (MC), of G or the set of all cliques, clique cover (CC), of G <ref> [ Garey and Johnson, 1979 ] </ref> (page 194): Covering by cliques: Given that G = (V; E) and a positive integer K E, are there are k K subsets V 1 ; V 2 ; : : : ; V k of V such that each V i induces a complete
Reference: [ Goldberg, 1989 ] <author> David E. Goldberg. </author> <title> Genetic Algorithms in Search, Optimization & Machine Learning. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1989. </year>
Reference-contexts: They are integral to the schema theorem, which defines how the implicit parallel search of a GA "builds" better solutions over time <ref> [ Holland, 1975, Goldberg, 1989 ] </ref> . With a string of length l, and a building block of defining length ffi, any crossover operation has a probability P l = l 1 of destroying a building block [ Goldberg, 1989 ] . <p> With a string of length l, and a building block of defining length ffi, any crossover operation has a probability P l = l 1 of destroying a building block <ref> [ Goldberg, 1989 ] </ref> . Consider the string of length l = 15 and a building block, b1, of defining length ffi = 6 in Figure 1.
Reference: [ Haynes et al., 1995 ] <author> Thoms Haynes, Roger L. Wainwright, Sandip Sen, and Dale A. Schoenefeld. </author> <title> Strongly typed genetic programming in evolving cooperation strategies. </title> <editor> In Larry Eshelman, editor, </editor> <booktitle> Proceedings of the Sixth International Conference on Genetic Algorithms, </booktitle> <pages> pages 271-278, </pages> <address> San Francisco, CA, 1995. </address> <publisher> Mor-gan Kaufmann. </publisher>
Reference-contexts: 1 Introduction While research into the interactions of function and terminal set size is sparse to non-existent (for examples, see [ Montana, 1995 ] and <ref> [ Haynes et al., 1995 ] </ref> ), a rule of thumb for GP researchers is to keep both as small as possible. A key consideration is sufficiency [ Koza, 1992 ] : the domain must be solvable with the given function and terminal sets.
Reference: [ Haynes et al., 1996 ] <author> Thomas Haynes, Dale Schoenefeld, and Roger Wainwright. </author> <title> Type inheritance in strongly typed genetic programming. </title> <editor> In Kenneth E. Kinnear, Jr. and Peter J. Angeline, editors, </editor> <booktitle> Advances in Genetic Programming 2, chapter 18. </booktitle> <publisher> MIT Press, </publisher> <year> 1996. </year>
Reference-contexts: Any other candidate cliques would still be complete. 4 And for max clique, the goal is to discover the maximal maximal clique. 5 Strong typing [ Montana, 1995 ] and type inheritance <ref> [ Haynes et al., 1996 ] </ref> are used to ensure that the parent of an ExtCon node is either the root or another ExtCon node. 4 A semantical interpretation is that ExtCon filters out subgraphs which are not complete. It also removes duplicate or subsumed subgraphs.
Reference: [ Haynes, 1996 ] <author> Thomas Haynes. </author> <title> Duplication of coding segments in genetic programming. </title> <booktitle> In Proceedings of 6 the Thirteenth National Conference on Artificial In--telligence, </booktitle> <address> Portland, OR, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: Theorem 2 The probability of disruption of clique is inversely proportional to the ratio of the size of the clique to the size of the graph. 3.2.3 Clique Cover GP We have used GP to find both the clique cover <ref> [ Haynes, 1996 ] </ref> and the max clique of a graph [ Haynes, 1998 ] . 3 This is especially true for the FC family of graphs, but less so for graphs in which the union of two cliques is not empty: the union of the subgraphs may not be complete, <p> For a given graph, the representation in <ref> [ Haynes, 1996 ] </ref> can generate more unique chromosomes than that used in [ Soule et al., 1996 ] . This increase in the search space is offset as the representation causes the chromosomes in [ Haynes, 1996 ] to be less susceptible to destructive crossover and mutation than those in <p> For a given graph, the representation in <ref> [ Haynes, 1996 ] </ref> can generate more unique chromosomes than that used in [ Soule et al., 1996 ] . This increase in the search space is offset as the representation causes the chromosomes in [ Haynes, 1996 ] to be less susceptible to destructive crossover and mutation than those in [ Soule et al., 1996 ] . Consider the chromosome in Figure 5 and assume that subtree mutation has disrupted subtree B, i.e., the candidate clique f4; 5; 6g. <p> It also removes duplicate or subsumed subgraphs. As a result, ExtCon facilitates the growth of back-up material in segments which are non-coding 6 <ref> [ Haynes, 1996 ] </ref> . However, the evaluation function introduces some fragility back into the system. Step #2 forces all sub-trees to have unique vertices present, e.g., in Figure 5, subtree C is not a candidate clique. <p> our experiments is that while Step #2 has been used in all of our research into clique detection, it has not been reported in any of 6 These are segments which do not contribute either positively or negatively to the evaluation of the chromosome. the prior publications (see for example <ref> [ Haynes, 1996, Haynes, 1997 ] </ref> ).
Reference: [ Haynes, 1997 ] <author> Thomas Haynes. </author> <title> Phenotypical building blocks for genetic programming. </title> <editor> In Thomas Back, editor, </editor> <booktitle> Proceedings of the Seventh International Conference on Genetic Algorithms (ICGA97), </booktitle> <address> San Francisco, CA, 1997. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: our experiments is that while Step #2 has been used in all of our research into clique detection, it has not been reported in any of 6 These are segments which do not contribute either positively or negatively to the evaluation of the chromosome. the prior publications (see for example <ref> [ Haynes, 1996, Haynes, 1997 ] </ref> ).
Reference: [ Haynes, 1998 ] <author> Thomas D. Haynes. </author> <title> Collective Adaptation: The Sharing of Building Blocks. </title> <type> PhD thesis, </type> <institution> The University of Tulsa, </institution> <year> 1998. </year>
Reference-contexts: 2 The probability of disruption of clique is inversely proportional to the ratio of the size of the clique to the size of the graph. 3.2.3 Clique Cover GP We have used GP to find both the clique cover [ Haynes, 1996 ] and the max clique of a graph <ref> [ Haynes, 1998 ] </ref> . 3 This is especially true for the FC family of graphs, but less so for graphs in which the union of two cliques is not empty: the union of the subgraphs may not be complete, but there may be a subset of the vertices which can <p> Since they are interested in max clique and not clique cover, only the largest group contributes to the fitness of the chromosome. 3.2.5 Clique Cover GA We have used a GA encoding 7 to investigate both max clique and clique cover in a subset of the FC family of graphs <ref> [ Haynes, 1998 ] </ref> . In this encoding, we fix the chromosome length, use a vertex encoding, and adopt a grouping GA to allow for a variable number of candidate cliques in a chromosome. Unlike Soule and Foster, we do not fix the number of groups in the chromosome.
Reference: [ Holland, 1975 ] <author> John H. Holland. </author> <booktitle> Adpatation in Natural and Artificial Systems. </booktitle> <publisher> University of Michigan Press, </publisher> <address> Ann Arbor, MI, </address> <year> 1975. </year>
Reference-contexts: They are integral to the schema theorem, which defines how the implicit parallel search of a GA "builds" better solutions over time <ref> [ Holland, 1975, Goldberg, 1989 ] </ref> . With a string of length l, and a building block of defining length ffi, any crossover operation has a probability P l = l 1 of destroying a building block [ Goldberg, 1989 ] .
Reference: [ Koza, 1992 ] <author> John R. Koza. </author> <title> Genetic Programming: On the Programming of Computers by Natural Selection. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1992. </year>
Reference-contexts: A key consideration is sufficiency <ref> [ Koza, 1992 ] </ref> : the domain must be solvable with the given function and terminal sets. The researcher must balance the space of all possible parse trees against adding perhaps a composite function. <p> Two examples are the Ephemeral Random Constant, which encompasses the infinite set of real numbers in the range [1:0; 1:0], and the different k parity problems, where as you increase k, you increase the size of the terminal set <ref> [ Koza, 1992 ] </ref> . cliques of cardinality 4. 3.1 Domain Characteristics We can illustrate that the combination of the low cardi-nality candidate cliques into higher cardinality candidate cliques meets the characteristics of a Royal Road function [ Mitchell et al., 1992 ] : 1) All of the desired building blocks
Reference: [ Mitchell et al., 1992 ] <author> Melanie Mitchell, Stephanie For-rest, and John H. Holland. </author> <title> The royal road for genetic algorithms: Fitness landscapes and GA performance. In Toward a Practice of Autonomous Systems: </title> <booktitle> Proceedings of the First European Conference on Artificial Life, </booktitle> <pages> pages 245-254, </pages> <address> Cambridge, MA, 1992. </address> <publisher> MIT Press. </publisher>
Reference-contexts: where as you increase k, you increase the size of the terminal set [ Koza, 1992 ] . cliques of cardinality 4. 3.1 Domain Characteristics We can illustrate that the combination of the low cardi-nality candidate cliques into higher cardinality candidate cliques meets the characteristics of a Royal Road function <ref> [ Mitchell et al., 1992 ] </ref> : 1) All of the desired building blocks are known in advance. 2) The landscape can be varied systematically. 3) The global optimum, and all local optimum, can be enumerated.
Reference: [ Montana, 1995 ] <author> David J. Montana. </author> <title> Strongly typed genetic programming. </title> <journal> Evolutionary Computation, </journal> <volume> 3(2) </volume> <pages> 199-230, </pages> <year> 1995. </year>
Reference-contexts: 1 Introduction While research into the interactions of function and terminal set size is sparse to non-existent (for examples, see <ref> [ Montana, 1995 ] </ref> and [ Haynes et al., 1995 ] ), a rule of thumb for GP researchers is to keep both as small as possible. A key consideration is sufficiency [ Koza, 1992 ] : the domain must be solvable with the given function and terminal sets. <p> i.e., how many of the new parse trees in F 2 fi T capture more functionality than those F 1 fiT ? To test this rule of thumb in action, we can either add extraneous functions and/or terminals or restrict the possible combinations of an existing set, i.e., strong typing <ref> [ Montana, 1995 ] </ref> . We will discuss the impact changing the function and terminal sets has on evolution and also investigate more insidious complications which hinder both evolution and the verification, repeatability, and meaningful comparisons of experiments [ Daida et al., 1997 ] . <p> Any other candidate cliques would still be complete. 4 And for max clique, the goal is to discover the maximal maximal clique. 5 Strong typing <ref> [ Montana, 1995 ] </ref> and type inheritance [ Haynes et al., 1996 ] are used to ensure that the parent of an ExtCon node is either the root or another ExtCon node. 4 A semantical interpretation is that ExtCon filters out subgraphs which are not complete.
Reference: [ Rosca and Ballard, 1995 ] <author> Justinian Rosca and Dana H. Ballard. </author> <title> Causality in genetic programming. </title> <editor> In L. Es-helman, editor, </editor> <booktitle> Genetic Algorithms: Proceedings of the Sixth International Conference (ICGA95), </booktitle> <pages> pages 256-263, </pages> <address> Pittsburgh, PA, USA, 15-19 July 1995. </address> <publisher> Mor-gan Kaufmann. </publisher>
Reference-contexts: The GA is able to detect cliques faster than the GP. This increase could be a result of transforming to a more natural representation, but we believe it is due to the difference in the effectiveness of the two crossover operators. As reported in <ref> [ Rosca and Ballard, 1995 ] </ref> , even with the traditional choice of selecting the crossover point at 90% as a function node and 10% as a terminal node, uniform selection causes the majority of subtree crossover to occur at the bottommost levels of the parse tree, i.e., the terminals and
Reference: [ Soule and Foster, 1997 ] <author> Terence Soule and James A. Foster. </author> <title> Genetic algorithm hardness measures applied to the maximum clique problem. </title> <editor> In Thomas Back, editor, </editor> <booktitle> Proceedings of the Seventh International Conference on Genetic Algorithms (ICGA97), </booktitle> <address> San Francisco, CA, 1997. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Any researcher trying to duplicate our results would have seen larger chromosomes and a steeper learning curve than our published findings. 3.2.4 Max Clique GA Soule and Foster have also used a GA encoding to investigate the relation between graph characteristics and GA hardness <ref> [ Soule and Foster, 1997 ] </ref> , i.e., how hard a particular problem is for a GA to solve. As mentioned in Section 3.2.3, both the GA encoding of Bui and Eppley and their previous GP encoding could not maintain several candidate cliques in a single chromosome.
Reference: [ Soule et al., 1996 ] <author> Terence Soule, James A. Foster, and John Dickinson. </author> <title> Using genetic programming to approximate maximum clique. </title> <editor> In John R. Koza, David E. Goldberg, David B. Fogel, and Rick L. Riolo, editors, </editor> <booktitle> Genetic Programming 1996: Proceedings of the First Conference, </booktitle> <address> Stanford University, CA, USA, 28-31 July 1996. </address> <publisher> MIT Press. </publisher> <pages> 7 </pages>
Reference-contexts: Soule et al. point out that such an approach fails to exploit building blocks. If two labels are connected, but not close together on the chromosome, then the defining length will not be short, resulting in a greater chance of disruption of the building block <ref> [ Soule et al., 1996 ] </ref> . We can illustrate this failure to exploit building blocks by considering the chromosomes which represent the same induced subgraph in the context of both of the graphs shown in Figure 3: fc4-4.clq and fcr4-4.clq. <p> The first encourages the evolution of subgraphs with high incidence vertices and the last encourages the evolution of larger cliques. system presented in <ref> [Soule et al., 1996] </ref>. While the ordering of vertex labels does not influence their system, depending on the graph being considered, their evaluation function can be very fragile, i.e., very susceptible to destructive crossover or mutation. <p> For a given graph, the representation in [ Haynes, 1996 ] can generate more unique chromosomes than that used in <ref> [ Soule et al., 1996 ] </ref> . This increase in the search space is offset as the representation causes the chromosomes in [ Haynes, 1996 ] to be less susceptible to destructive crossover and mutation than those in [ Soule et al., 1996 ] . <p> Haynes, 1996 ] can generate more unique chromosomes than that used in <ref> [ Soule et al., 1996 ] </ref> . This increase in the search space is offset as the representation causes the chromosomes in [ Haynes, 1996 ] to be less susceptible to destructive crossover and mutation than those in [ Soule et al., 1996 ] . Consider the chromosome in Figure 5 and assume that subtree mutation has disrupted subtree B, i.e., the candidate clique f4; 5; 6g. <p> The intent is for Step #2 to force the evolution of exactly the correct solution in the chromosome. If we remove Step #2 from the decoding algorithm, then IntCon is no longer selective. In effect, ExtCon now serves as a group separator for the representation used in <ref> [ Soule et al., 1996 ] </ref> , i.e., each chromosome can represent several cliques in parallel. <p> This new decoding algorithm has a further benefit in that destructive mutation is still isolated since it need not effect the whole chromosome as in <ref> [ Soule et al., 1996 ] </ref> . Finally, since it enforces parsimony, Step #2 must reduce code growth inside each group expressed in the chromosome.
References-found: 18

