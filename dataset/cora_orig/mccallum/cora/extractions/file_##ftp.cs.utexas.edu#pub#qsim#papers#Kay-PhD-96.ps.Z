URL: file://ftp.cs.utexas.edu/pub/qsim/papers/Kay-PhD-96.ps.Z
Refering-URL: http://www.cs.utexas.edu/users/bert/
Root-URL: http://www.cs.utexas.edu
Title: by  
Author: Herbert Kay 
Date: 1996  
Note: Copyright  
Abstract-found: 0
Intro-found: 1
Reference: [Aubin and Cellina, 1984] <author> J. P. Aubin and A. Cellina. </author> <title> Differential Inclusions. </title> <publisher> Springer-Verlag, </publisher> <year> 1984. </year>
Reference-contexts: This field analyzes conditions under which bounds exist for an ODE system. Several algorithms (e.g., [Markov and Angelov, 1986]) follow directly from this work. * The field of differential inclusions <ref> [Aubin and Cellina, 1984] </ref> views the SQDE prediction problem from a framework where state and model uncertainty are directly represented by sets of state-space points and ODE models, respectively, and analyzes conditions under which bounds for the system exists.
Reference: [Bates and Watts, 1988] <author> Douglas M. Bates and Donald G. Watts. </author> <title> Nonlinear Regression and Its Applications. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1988. </year>
Reference-contexts: If we represent the data-stream as a matrix [Y j X] where the ith row represents a single sample data-point (y i ; x i ), it can be shown <ref> [Bates and Watts, 1988] </ref> that the 1 ff confidence band for f is x T b fi s pF (ff; p; n p)kx T R 1 k where s 2 is the sample standard error kYX b fik 2 np , F is the ff quantile of the F-statistic with p <p> Because the linearization is only an approximation, this estimate does not provide an exact 1 ff confidence band for f . However, the result is approximately correct and depends on the degree of nonlinearity of the expectation surface <ref> [Bates and Watts, 1988] </ref>. We use the LINPACK subroutine DQRDC to compute the QR decomposition of V. This method performs the decomposition using pivoting so that R v is both upper triangular and has diagonal elements whose magnitude decreases going down the diagonal.
Reference: [Berleant and Kuipers, 1992] <author> Daniel Berleant and Benjamin Kuipers. </author> <title> Combined qualitative and numerical simulation with Q3. </title> <editor> In Boi Faltings and Peter Struss, editors, </editor> <booktitle> Recent Advances in Qualitative Physics. </booktitle> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: For some systems, this error could lead to incorrect results (for example, if the system is chaotic and thus sensitive to initial conditions). By simulating from an imprecise initial condition, we maintain the Guaranteed Coverage Property of 6 Localization is akin to Target Interval Splitting <ref> [Berleant and Kuipers, 1992] </ref> which attempts to refute the ends of intervals. 7 In fact, the values in the table are incorrect since they do not fall inside the guaranteed Q2 envelope. <p> We could utilize this method for computing derivatives at the snapshot by splicing the new state into the proper interval of the SQ behavior and then use the adjacent states to compute derivative values (see Figure 4.10). This method is the essence of the Q3 behavior refinement method <ref> [Berleant and Kuipers, 1992] </ref> and the time-point insertion method of MIMIC. While time-point insertion can improve bounds on the derivatives of the model, it is very expensive to use.
Reference: [Biegler and Cuthrell, 1985] <author> L. T. Biegler and J. E. Cuthrell. </author> <title> Improved infeasible path optimization for sequential modular simulators II. the optimization algorithm. </title> <journal> Computers and Chemical Engineering, </journal> <volume> 9(3) </volume> <pages> 257-267, </pages> <year> 1985. </year>
Reference-contexts: While more difficult to solve than the unconstrained problem, there are still a number of methods based on numerical methods. In our work we use the OPT algorithm <ref> [Biegler, 1985, Biegler and Cuthrell, 1985] </ref>. To compute the estimate, we need to find the best value for n h . <p> Table 3.3 demonstrates that the cost of MSQUID increases with the number of hidden units with n h = 8 being between roughly two and thirteen times as slow as n h = 3. It is instructive to understand the reasons for this decrease in speed. MSQUID uses OPT <ref> [Biegler and Cuthrell, 1985] </ref> to solve the constrained optimization problem. OPT breaks the optimization problem into the tasks of computing a search direction in the parameter space defined by w and then selecting a distance along this direction that reduces the objective function. <p> Computing the static envelope function given the estimate is o (n 3 h ) due to the QR factorization required to linearize the expectation surface (see Section 3.3). Computing the estimate depends on the optimization method. The OPT method <ref> [Biegler and Cuthrell, 1985] </ref> breaks the optimization problem into selecting a direction in the problem space by solving a quadratic programming problem and then using a line search method for selecting the size of the step in this direction.
Reference: [Biegler, 1985] <author> L. T. Biegler. </author> <title> Improved infeasible path optimization for sequential modular simulators I. the interface. </title> <journal> Computers and Chemical Engineering, </journal> <volume> 9(3) </volume> <pages> 245-256, </pages> <year> 1985. </year>
Reference-contexts: While more difficult to solve than the unconstrained problem, there are still a number of methods based on numerical methods. In our work we use the OPT algorithm <ref> [Biegler, 1985, Biegler and Cuthrell, 1985] </ref>. To compute the estimate, we need to find the best value for n h .
Reference: [Bothe, 1992] <author> Dieter Bothe. </author> <title> Multivalued differential equations on graphs. Nonlinear Analysis, Theory, Methods, </title> <journal> and Applications, </journal> <volume> 18(3) </volume> <pages> 245-252, </pages> <year> 1992. </year>
Reference-contexts: For the purposes of intuition, we prove a slightly weaker version of the theorem in which we assume f i (x) &lt; f i (X) when Condition A.2 holds. A complete proof which assumes f i (x) f i (X) is given in <ref> [Bothe, 1992] </ref> and [Hullermeier, 1995]. 133 The bound holds at t 0 by assumption.
Reference: [Brajnik and Clancy, 1996] <author> Giorgio Brajnik and Daniel J. Clancy. </author> <title> Trajectory constraints in qualitative simulation. </title> <booktitle> In Proceedings of the Thirteenth National Conference on Artificial Intelligence (AAAI-96), </booktitle> <pages> pages 979-984, </pages> <year> 1996. </year>
Reference-contexts: Apply More Knowledge Another way to tighten predictions is to provide more information to the simulation engine. Of particular interest here is work on constraining the qualitative behavior by way of trajectory descriptions <ref> [Brajnik and Clancy, 1996] </ref>. This technique can also be used to provide a method for specifying the behavior of exogenous variables in a qualitative simulation. 128 Eliminate the Coverage Guarantee Another approach is to simply eliminate the guar-anteed coverage offered by SQsim. <p> These types of systems were ex 129 cluded from our original design due to limitations in the QSIM modeling and simulation method. Recently, techniques for adding such properties to an SQDE have been developed <ref> [Brajnik and Clancy, 1996] </ref> and should be included in SQUID. More complex discrepancy detection SQUID uses a relatively simple model of discrepancy detection where the overlap between the SQ trend and the SQ behavior must be empty to refute the model.
Reference: [Capelo et al., 1996] <author> Antonio C. Capelo, Liliana Ironi, and Stefania Tentoni. </author> <title> The need for qualitative reasoning in automated modeling : A case study. </title> <editor> In Yumi Iwasaki and Adam Farquhar, editors, </editor> <title> Qualitative Reasoning, </title> <booktitle> The Tenth International Workshop, </booktitle> <pages> pages 32-39, </pages> <year> 1996. </year> <note> AAAI Technical Report WS-96-01. </note>
Reference-contexts: This is particularly important in monitoring where faults are manifested as structural changes. Finally, another use of qualitative methods for identification is embodied in the system of <ref> [Capelo et al., 1996] </ref>. This system addresses the problem in traditional identification of how to select the best parametric model from a set of potential models.
Reference: [Cem Say and Kuru, 1996] <author> A. C. Cem Say and Selahattin Kuru. </author> <title> Qualitative system identification: Deriving structure from behavior. </title> <journal> Artificial Intelligence, </journal> <volume> 83(1) </volume> <pages> 75-141, </pages> <month> May </month> <year> 1996. </year>
Reference-contexts: Since selecting amongst model spaces is a very different problem for selecting a model from a model space, this decomposition permits independent solutions to these problems. Existing work in qualitative reasoning <ref> [Coiera, 1989, Richards et al., 1992, Cem Say and Kuru, 1996] </ref> addresses the model selection problem. In this chapter, we concentrate on model refinement. 4.1.1 An Application: Process Monitoring The monitoring of continuous processes can also be cast as a model learning problem (see of measurements.
Reference: [Cheung and Stephanopoulos, 1990] <author> Jarvis Tat-Yin Cheung and George Stephanopoulos. </author> <title> Representation of process trends part i. a formal representation framework. </title> <journal> Computers and Chemical Engineering, </journal> 14(4/5):495-510, 1990. 
Reference-contexts: In part as a solution to the computational expense of scale-space filtering, Cheung and Stephanopoulos developed the "triangle representation" for trend description together with an algorithm for extracting a trend from noisy data <ref> [Cheung and Stephanopoulos, 1990] </ref> .
Reference: [Clancy and Kuipers, 1993] <author> Daniel J. Clancy and Benjamin Kuipers. </author> <title> Behavioral abstraction for tractable simulation. </title> <booktitle> In Working Papers from the Seventh International Workshop on Qualitative Reasoning about Physical Systems, </booktitle> <pages> pages 57-64, </pages> <address> Orcas Island, Wash-ington, </address> <year> 1993. </year>
Reference-contexts: In addition to the semiquantitative improvements described in this dissertation, other research related to taming intractably branching behaviors has been conducted. In particular, work by Clancy <ref> [Clancy and Kuipers, 1993] </ref> on elimination of uninteresting distinctions, behavior abstraction, and focusing techniques show promise in reducing the number of spurious behaviors in a qualitative simulation. 127 predicts the state space of the CSTR will be within the rectangular region shown in the bottom graph. <p> Limited work has already been conducted [Gazi et al., 1993] with encouraging results. Future progress requires further work on reducing the number of spurious behaviors generated by the simulator, a technical problem that is the subject of active research in the Qualitative Reasoning community (see <ref> [Clancy and Kuipers, 1993] </ref> and [Tokuda, 1996], for example). 5.4.2 MSQUID Function learning is a key task in many scientific endeavors. Often, however, a precise parametric model does not exist, yet there is a need to determine a best fit to a set of data.
Reference: [Coiera, 1989] <author> E. Coiera. </author> <title> Generating qualitative models from example behaviors. </title> <type> Technical Report 8901, </type> <institution> Department of Computer Science, University of New South Wales, </institution> <year> 1989. </year>
Reference-contexts: Since selecting amongst model spaces is a very different problem for selecting a model from a model space, this decomposition permits independent solutions to these problems. Existing work in qualitative reasoning <ref> [Coiera, 1989, Richards et al., 1992, Cem Say and Kuru, 1996] </ref> addresses the model selection problem. In this chapter, we concentrate on model refinement. 4.1.1 An Application: Process Monitoring The monitoring of continuous processes can also be cast as a model learning problem (see of measurements.
Reference: [Corliss, 1995a] <author> George F. Corliss. </author> <title> Guranteed error bounds for ordinary differential equations. In Theory of Numerics in Ordinary and Partial Differential Equations. </title> <publisher> Oxford University Press, </publisher> <year> 1995. </year> <note> Also available at ftp://boris.mscs.mu.edu/pub/corliss/ValidODE. </note>
Reference-contexts: This method yields very precise predic-tions, but requires very specific model structures and is thus not generally applicable. * Use intervals to bound parameters and use an interval ODE solver to compute predictions <ref> [Corliss, 1995a] </ref>. This method is fast and general, but produces very weak bounds. <p> This class is identical to the class of quasi-monotonic systems [Walter, 1970] for which it can be shown that simulating the corners of the hypercube leads to an optimal bound <ref> [Corliss, 1995a] </ref>. These sources of spurious behavior suggest that we can improve the Nsim prediction by using different uncertainty representations or simulation methods. In Section 2.4 we will examine some of these possibilities. <p> It is noteworthy because it casts the bounding problem as a set of optimization problems in the state space of the system. This allows it to avoid manipulating state-space uncertainty representations, thus sidestepping the correlation problems of most other methods. * The paper by Corliss <ref> [Corliss, 1995a] </ref> describes a variety of other bounding methods for ODE systems and analyzes conditions under which they are applicable.
Reference: [Corliss, 1995b] <author> Geroge F. Corliss. </author> <title> Introduction to validated ODE solving. </title> <type> Technical Report 416, </type> <institution> Department of Mathematics, Statistics and Computer Science - Marquette University, </institution> <address> Milwaukee, WI 53233, </address> <month> March </month> <year> 1995. </year>
Reference-contexts: Inclusion monotonicity is the property that if X is an interval vector and F (X) is an interval function 11 then if Y X then F (Y ) F (X). Typical algorithms <ref> [Moore, 1979, Corliss, 1995b] </ref> work in two stages: 11 We say that F is an interval extension of f if F (X 1 ; : : : ; X n ) = f (x 1 ; : : : x n ) as long as the interval X i = [x
Reference: [Cybenko, 1989] <author> G. Cybenko. </author> <title> Approximation by superpositions of sigmoidal functions. Mathematics of Control, Signals, </title> <journal> and Systems, </journal> <volume> 2 </volume> <pages> 303-314, </pages> <year> 1989. </year>
Reference-contexts: We can compute the weights by solving the nonlinear least squares problem min X (y i ^y i ) 2 where ^y i = f (x i ; w) and w is a vector of all weights. Cybenko <ref> [Cybenko, 1989] </ref> and others have shown that with a large enough number of hidden units, any continuous function may be approximated by a network of this form. 1 The bias terms permit the estimation function to shift the center of the sigmoid. 2 The weight w i [n+1;j] represents the connection <p> If the variance of the noise is known, this information can be used to check the goodness of fit and thus avoid local minima in the model space. 3.6 Related Work This work is related to several approaches to function estimation using neural networks. Cybenko <ref> [Cybenko, 1989] </ref> has shown that any continuous function can be represented with a neural net that is similar to one that we use. With our method, we assume a priori that the true function is monotonic. <p> For simplicity, we consider only the case of a one dimensional monotonic function (i.e., the function is y = f (x) where x is scalar). The proof would follow directly from <ref> [Cybenko, 1989] </ref> except that, for reasons of computational efficiency, our constraint that guarantees monotonicity is overly strong.
Reference: [Dalle Molle, 1989] <author> David Dalle Molle. </author> <title> Qualitative simulation of dynamic chemical processes. </title> <type> Technical Report AI89-107, </type> <institution> Artificial Intelligence Laboratory, University of Texas at Austin, Austin, Texas 78712, </institution> <month> May </month> <year> 1989. </year>
Reference-contexts: to the initial values? * Do the trajectories remain inside an acceptable region of the state space? * Where and when do extrema occur in the trajectories of the state variables? * How sensitive is the behavior to uncertainty in model parameters? Our example follows the work of Dalle Molle <ref> [Dalle Molle, 1989] </ref> who made a detailed study of the adiabatic CSTR for the case where the system is in equilibrium and then C Ai is negatively perturbed.
Reference: [Danes et al., 1993] <author> P. Danes, L. Trave-Massuyes, and J. Aguilar-Martin. </author> <title> A generic method for computing the response of a numerically-known dynamic system to qualitative inputs. </title> <booktitle> In Proceedings of IEEE-SMC'93, </booktitle> <address> Le Touquet, France, </address> <year> 1993. </year>
Reference-contexts: Since it is a purely numerical method, it cannot exploit qualitative information about the model to prevent envelope divergence as SQsim does. * The system of Danes <ref> [Danes et al., 1993] </ref> simulates precise models whose inputs are imprecisely-defined and satisfy certain controllability and observability requirements (which means that it can simulate only a subset of the SQDEs that SQsim can). <p> While extremely useful for providing a method for abstracting families of functions, they are also very difficult to compute with. By eliminating such descriptions and sticking to purely parameterized models, existing methods for predicting behavior become available <ref> [Lohner, 1988, Danes et al., 1993] </ref>. It seems likely that for some domains, these types of solutions may overcome the existing limitations of SQsim.
Reference: [Draper and Smith, 1981] <author> Norman R. Draper and H. Smith. </author> <title> Applied Regression Analysis (second edition). </title> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1981. </year>
Reference-contexts: In contrast, our approach can only handle fixed-variance problems, but since variance will often track either x or y, we can make monotonicity assumptions about 2 if it should prove necessary. Under such circumstances, variance stabilization techniques <ref> [Draper and Smith, 1981] </ref> should prove useful in fixing the variance. This work is also related to monotonic function estimation [Joerding and Meador, 1991, Hellerstein, 1990, Kruskal, 1964], particularly the NIMF estimator [Hellerstein, 1990] which also determines envelopes for multivariate monotonic functions.
Reference: [Dvorak and Kuipers, 1989] <author> Daniel Louis Dvorak and Benjamin Kuipers. </author> <title> Model-based monitoring of dynamic systems. </title> <booktitle> In Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1238-1243, </pages> <year> 1989. </year>
Reference-contexts: By using multiple-sized windows, it can detect slope changes at different time-scales 16 . 4.5.2 Semiquantitative Monitoring and Identification The use of semiquantitative models for monitoring was the basis for the MIMIC system <ref> [Dvorak and Kuipers, 1989] </ref>. MIMIC implements both the tracking and hypothesis generation phases of monitoring (see Figure 4.27). It uses the SQDE as a model space representation from which an SQ behavior set is generated by (an earlier version of) SQsim.
Reference: [Gazi et al., 1993] <author> Evangeline Gazi, Herbert Kay, Benjamin Kuipers, W. D. Seider, and Lyle H. Ungar. </author> <title> Controller verification using qualitative reasoning (extended abstract). </title> <booktitle> In American Institute of Chemical Engineers, </booktitle> <year> 1993. </year> <month> 139 </month>
Reference-contexts: Since robust design must account for uncertainty introduced in the construction process, SQUID would appear to be an ideal method to apply to such problems. Limited work has already been conducted <ref> [Gazi et al., 1993] </ref> with encouraging results.
Reference: [Gazi et al., 1996] <author> E. Gazi, W.D. Seider, and L.H. Ungar. </author> <title> Verfication of controllers in the presence of uncertainty: Application to styrene polymerization. </title> <journal> Industrial and Engineering Chemistry Research, </journal> <volume> 35(7) </volume> <pages> 2277-2287, </pages> <year> 1996. </year>
Reference-contexts: Recent work on sampling a monotonic function space for use with Monte Carlo simulation <ref> [Gazi et al., 1996] </ref> suggests that such a method could replace the Nsim portion of SQsim. Simplify the Model Space Representation The main representational ingredient that distinguishes SQDEs from parametric models is the inclusion of static envelopes around monotonic functions.
Reference: [Gelb, 1974] <author> Arthur Gelb. </author> <title> Applied Optimal Estimation. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1974. </year>
Reference-contexts: Furthermore, it is difficult to represent functional uncertainty with this method. * Represent uncertainty using probability distributions for imprecisely known parameters and use variance propagation methods to make predictions <ref> [Gelb, 1974, Reckhow, 1987] </ref>. This approach fails when the uncertainty cannot be modeled as probabilities (for example, if we have functional uncertainty).
Reference: [Haimowitz, 1994] <author> Ira Joseph Haimowitz. </author> <title> Knowledge-Based Trend Detection and Diagnosis. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering and Computer Science, Massachusetts Institute of Technology, </institution> <year> 1994. </year>
Reference-contexts: These improvements make SQUID more efficient and robust than the tracking method of MIMIC. Of course, SQUID does not address the hypothesis generation component of MIMIC and so these methods are very much complementary. 124 Another semiquantitative monitoring system is TrenDx <ref> [Haimowitz, 1994] </ref>. This system also uses a semiquantitative representation of behavior and attempts to fit data to the behavior. Unlike both SQUID and MIMIC, however, TrenDx does not use a model space representation. This has two consequences: 1. Since there is no model space, TrenDx cannot do refinement. 2.
Reference: [Hellerstein, 1990] <author> Joseph Hellerstein. </author> <title> Obtaining quantitative predictions from monotone relationships. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence (AAAI-90), </booktitle> <pages> pages 388-394, </pages> <year> 1990. </year>
Reference-contexts: Under such circumstances, variance stabilization techniques [Draper and Smith, 1981] should prove useful in fixing the variance. This work is also related to monotonic function estimation <ref> [Joerding and Meador, 1991, Hellerstein, 1990, Kruskal, 1964] </ref>, particularly the NIMF estimator [Hellerstein, 1990] which also determines envelopes for multivariate monotonic functions. NIMF allows for a 71 more general noise model (zero mean, symmetrically distributed) and uses a non-parametric statistical method for determining point confidence bounds. <p> Under such circumstances, variance stabilization techniques [Draper and Smith, 1981] should prove useful in fixing the variance. This work is also related to monotonic function estimation [Joerding and Meador, 1991, Hellerstein, 1990, Kruskal, 1964], particularly the NIMF estimator <ref> [Hellerstein, 1990] </ref> which also determines envelopes for multivariate monotonic functions. NIMF allows for a 71 more general noise model (zero mean, symmetrically distributed) and uses a non-parametric statistical method for determining point confidence bounds. These bounds, however, are much weaker than those derived with methods that first compute an estimate.
Reference: [Hullermeier, 1995] <author> Eyke Hullermeier. </author> <title> Numerical simulation methods for uncertain dynamics. </title> <type> Technical Report tr-ri-95-170, </type> <institution> Heinz Nixdorf Institut, </institution> <address> Universitat-GH-Paderborn, Furstenaallee 11, D-33102 Paderborn, Germany, </address> <month> November </month> <year> 1995. </year>
Reference-contexts: Nsim is thus making predictions about models that are not part of the original model space and so these predictions admit spurious states. In some cases, model correlation can be eliminated by rewriting the SQDE so that only one reference to a function is made (see <ref> [Hullermeier, 1995] </ref>). In the above example, we can introduce a new variable z = x + y thus transforming the system into x 0 = c f (x) z 0 = x 0 + y 0 = c g (z x) which makes only one reference to f . <p> In <ref> [Hullermeier, 1995] </ref>, Hullermeier examines SQDE simulation as done by Nsim in this framework and suggests methods for using alternate representations that can sometimes produce better bounds at greater computational expense. There has also been applied work in behavior bounding in the area of VLSI simulation by Zukowski [Zukowski, 1986]. <p> For the purposes of intuition, we prove a slightly weaker version of the theorem in which we assume f i (x) &lt; f i (X) when Condition A.2 holds. A complete proof which assumes f i (x) f i (X) is given in [Bothe, 1992] and <ref> [Hullermeier, 1995] </ref>. 133 The bound holds at t 0 by assumption.
Reference: [Joerding and Meador, 1991] <author> Wayne H. Joerding and Jack L. Meador. </author> <title> Encoding a priori information in feedforward networks. </title> <booktitle> Neural Networks, </booktitle> <volume> 4 </volume> <pages> 847-856, </pages> <year> 1991. </year>
Reference-contexts: Under such circumstances, variance stabilization techniques [Draper and Smith, 1981] should prove useful in fixing the variance. This work is also related to monotonic function estimation <ref> [Joerding and Meador, 1991, Hellerstein, 1990, Kruskal, 1964] </ref>, particularly the NIMF estimator [Hellerstein, 1990] which also determines envelopes for multivariate monotonic functions. NIMF allows for a 71 more general noise model (zero mean, symmetrically distributed) and uses a non-parametric statistical method for determining point confidence bounds.
Reference: [Kahaner et al., 1989] <author> David Kahaner, Cleve Moler, and Stephen Nash. </author> <title> Numerical Methods and Software. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, </address> <year> 1989. </year>
Reference-contexts: For some classes of systems (for example, systems with tight feedback), small amounts of parametric uncertainty do not affect the results. For systems with larger amounts of uncertainty or nonlinearities, however, the model device mismatch may be large. * Use Monte-Carlo analysis <ref> [Kahaner et al., 1989] </ref>. By running repeated simulations of the ODE system using different combinations of parameter values, it is possible to get some idea of the behavior of the models in the model space. <p> Guided by this observation, we will suggest certain enhancements that will enable us to reliably use MSQUID in the context of semiquantitative identification. 3.5.1 Quality of the Estimation Function To determine the quality of the estimate, we ran both MSQUID and UNCMND <ref> [Kahaner et al., 1989] </ref>, a fast, readily available, unconstrained optimizer, using the same neural network structure on the following series of test functions: * linear (y = 0:5x + 5) on x 2 [0; 100] 57 nodes.
Reference: [Kay and Kuipers, 1993] <author> Herbert Kay and Benjamin Kuipers. </author> <title> Numerical behavior envelopes for qualitative models. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence (AAAI-93), </booktitle> <pages> pages 606-613, </pages> <year> 1993. </year>
Reference-contexts: We have developed such a method that uses a step-size that fits the numerical properties of the SQDE rather than relying on the distance between qualitative 15 time-points. Our method, called Nsim <ref> [Kay and Kuipers, 1993] </ref>, does this by constructing an ODE system that is guaranteed to bound the behaviors of the SQDE. This system is then simulated to generate a dynamic envelope for all behaviors of the SQDE. <p> clues on how to further improve bounds. 2.3.3 Other Examples In addition to its application in predicting the behavior of the CSTR, SQsim has also been applied to a variety of other systems, including a model of a semiconductor vacuum system during pumpdown that was used in a monitoring system <ref> [Kay, 1991, Kay and Kuipers, 1993] </ref>. Because of the highly nonlinear nature of the model, a small error in modeling can have a large effect on the predicted behavior, and so it is very difficult to accurately predict the dynamic behavior of the system with a precise model.
Reference: [Kay, 1991] <author> Herbert Kay. </author> <title> Monitoring and diagnosis of multi-tank flows using qualitative reasoning. </title> <type> Master's thesis, </type> <institution> The University of Texas at Austin, </institution> <month> May </month> <year> 1991. </year>
Reference-contexts: clues on how to further improve bounds. 2.3.3 Other Examples In addition to its application in predicting the behavior of the CSTR, SQsim has also been applied to a variety of other systems, including a model of a semiconductor vacuum system during pumpdown that was used in a monitoring system <ref> [Kay, 1991, Kay and Kuipers, 1993] </ref>. Because of the highly nonlinear nature of the model, a small error in modeling can have a large effect on the predicted behavior, and so it is very difficult to accurately predict the dynamic behavior of the system with a precise model.
Reference: [Kruskal, 1964] <author> J. B. Kruskal. </author> <title> Multidimensional scaling by optimizing goodness of fit to a nonmetric hypothesis. </title> <journal> Psychometrika, </journal> <volume> 29(1) </volume> <pages> 1-27, </pages> <month> March </month> <year> 1964. </year>
Reference-contexts: Under such circumstances, variance stabilization techniques [Draper and Smith, 1981] should prove useful in fixing the variance. This work is also related to monotonic function estimation <ref> [Joerding and Meador, 1991, Hellerstein, 1990, Kruskal, 1964] </ref>, particularly the NIMF estimator [Hellerstein, 1990] which also determines envelopes for multivariate monotonic functions. NIMF allows for a 71 more general noise model (zero mean, symmetrically distributed) and uses a non-parametric statistical method for determining point confidence bounds.
Reference: [Kuipers and Berleant, 1988] <author> Benjamin Kuipers and Daniel Berleant. </author> <title> Using incomplete quantitative knowledge in qualitative reasoning. </title> <booktitle> In Proceedings of the Seventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 324-329, </pages> <year> 1988. </year>
Reference-contexts: Nsim's envelopes are guaranteed to bound all trajectories in T (M)(t). 1.4.2 SQsim A Semiquantitative Simulator for Imprecise Models SQsim (for SemiQuantitative SIMulator) is a functional superset of the QSIM modeling and simulation system that utilizes QSIM, Q2 <ref> [Kuipers and Berleant, 1988] </ref>, and Nsim to produce better predictions of semiquantitative models by ensuring that predictions from each inference method are consistent with each other. <p> In the process, some branches of the tree may be refuted because their qualitative descriptions are inconsistent with the quantitative information, while on other branches quantitative information refines the prediction. The Q2 algorithm <ref> [Kuipers and Berleant, 1988] </ref> produces semiquantitative event descriptions from the SQDE.
Reference: [Kuipers, 1984] <author> Benjamin Kuipers. </author> <title> Commonsense reasoning about causality : Deriving behavior from structure. </title> <journal> Artificial Intelligence, </journal> <volume> 24 </volume> <pages> 169-204, </pages> <year> 1984. </year>
Reference-contexts: Each simulation method corresponds to a component of the SQ behavior description. They are described in the next sections. QSIM Qualitative Simulator Qualitative inference produces a qualitative trajectory behavior tree from the QDE portion of the model. We use Kuipers' QSIM algorithm <ref> [Kuipers, 1984, Kuipers, 1986] </ref> to perform this inference. The simulation alternates between simulating time-point and time-interval states. By applying the rules of qualitative arithmetic [Kuipers, 1994], QSIM generates a set of variable descriptions consistent with the model constraints at the initial state.
Reference: [Kuipers, 1986] <author> Benjamin Kuipers. </author> <title> Qualitative simulation. </title> <journal> Artificial Intelligence, </journal> <volume> 29 </volume> <pages> 289-338, </pages> <month> September </month> <year> 1986. </year> <month> 140 </month>
Reference-contexts: Often, there will be precise information about the structural and qualitative properties of the model, while the numerical information will be imprecise. We make use of this distinction by using a multi-level representation based on the QSIM <ref> [Kuipers, 1986] </ref> representation for ODE systems. The levels are: * The structural level (SDE). At this level, we describe the form of the ODE system in terms of the state variables and the constraints that link them. Constraints are described as arithmetic operators and functional relationships. <p> Each simulation method corresponds to a component of the SQ behavior description. They are described in the next sections. QSIM Qualitative Simulator Qualitative inference produces a qualitative trajectory behavior tree from the QDE portion of the model. We use Kuipers' QSIM algorithm <ref> [Kuipers, 1984, Kuipers, 1986] </ref> to perform this inference. The simulation alternates between simulating time-point and time-interval states. By applying the rules of qualitative arithmetic [Kuipers, 1994], QSIM generates a set of variable descriptions consistent with the model constraints at the initial state. <p> state variables (i.e., variables with a d/dt constraint), and t the length of the longest behavior. * The cost of generating a QSIM behavior tree is worst-case exponential in t (due to branching caused by multiple successors to a qualitative state) although the empirical cost is closer to o (ct) <ref> [Kuipers, 1986] </ref> 13 . * The major costs of using Q2 on a single state are: Equation generation. Equation generation creates the set of equations that hold for the events determined by a qualitative time-point state.
Reference: [Kuipers, 1994] <author> Benjamin Kuipers. </author> <title> Qualitative Reasoning Modeling and Simulation with Incomplete Knowledge. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1994. </year>
Reference-contexts: dissertation presents four new methods for predicting and refining imprecisely-defined ODE systems: 1.4.1 Nsim A Numerical Simulator for Imprecise Models Nsim (for Numerical Simulator using Interval Methods) is an extension to the QSIM modeling and simulation system that generates a numerical bounding envelope for each variable in a QSIM model <ref> [Kuipers, 1994] </ref> augmented with partial quantitative information. <p> QSIM Qualitative Simulator Qualitative inference produces a qualitative trajectory behavior tree from the QDE portion of the model. We use Kuipers' QSIM algorithm [Kuipers, 1984, Kuipers, 1986] to perform this inference. The simulation alternates between simulating time-point and time-interval states. By applying the rules of qualitative arithmetic <ref> [Kuipers, 1994] </ref>, QSIM generates a set of variable descriptions consistent with the model constraints at the initial state. For instance, if x and y are related by a monotonic increasing function, qdir (x) =" implies qdir (y) =". <p> (i.e., in the event x (t 1 ) = x 1 , x 1 is an rmag of x). 15 QSIM3.0 allows multi-variate monotonic constraints which take an arbitrary number of arguments, however SQUID does not make use of these constraints. 119 always shrink monotonically until they drop below *epsilon* <ref> [Kuipers, 1994] </ref>. Assume that k bounds the number of times that the range of an rmag can change before reaching *epsilon*. Then in the worst case, each equation will appear on the agenda k times leading to a total evaluation time of o (k (ct + st 2 )).
Reference: [Kulkarni et al., 1991] <author> Deepak Kulkarni, Kiriako Kutulakos, and Peter Robinson. </author> <title> Data analysis using scale-space filtering and bayesian probabilistic reasoning. </title> <type> Technical Report FIA-91-05, </type> <institution> NASA Ames Research Center, </institution> <year> 1991. </year>
Reference-contexts: Scale-space filtering permits the recovery of a trend with no prior knowledge. Unfortunately, it does so at the cost of filtering the signal through a theoretically infinite number of Gaussian filters. Work has been done on reducing this need <ref> [Kulkarni et al., 1991] </ref>, but it still involves multiple filterings of the data as well as pattern recognition to infer the scale-space portrait from a finite set of points.
Reference: [Leonard et al., 1992] <author> J. A. Leonard, M. A. Kramer, and L. H. Ungar. </author> <title> Using radial basis functions to approximate a function and its error bounds. </title> <journal> IEEE Transactions of Neural Networks, </journal> <volume> 3(4) </volume> <pages> 624-627, </pages> <year> 1992. </year>
Reference-contexts: This assumption restricts our attention to a smaller class of functions which means that less data is needed to compute a reasonable estimate. Additionally, we compute a confidence measure on our estimate in the form of an envelope. The VI-NET method <ref> [Leonard et al., 1992] </ref> also uses a neural network for computing estimates of general functions. It is notable in that it provides a confidence measure on its estimate and can determine when it is being asked to extrapolate.
Reference: [Ljung, 1987] <author> Lennart Ljung. </author> <title> System Identification: Theory for the User. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1987. </year>
Reference-contexts: Because of the model-process mismatch problem it may be difficult to conclude that a deviation is due to a fault or due to a bad model. 4.1.2 Traditional Refinement Methods System Identification Refining a model space given a set of measurements is the subject of system identification <ref> [Ljung, 1987] </ref>, a field closely related to control theory. Traditional system identification uses six steps (see Figure 4.3): 76 1. An experiment is run to collect process data. This experiment should be informative, i.e., it should contain data that describes the system dynamics adequately.
Reference: [Lohner, 1988] <author> Rudolf Lohner. </author> <title> Einschlieung der Losung gewohnlicher Anfangs- und Randwertaufgaben und Anwendungen. </title> <type> PhD thesis, </type> <institution> Universitat Karlsruhe, </institution> <year> 1988. </year>
Reference-contexts: Interval ODE simulators are also susceptible to the effects of ignoring correlations between variables, particularly the wrapping effect. Modern simulators such as AWA <ref> [Lohner, 1988] </ref> minimize this effect by using a coordinate system that that follows the trajectory of the system. AWA does this by producing an approximate solution to the ODE system and using the angle between this solution and the coordinate axes to rotate the frame of reference for computing intervals. <p> While extremely useful for providing a method for abstracting families of functions, they are also very difficult to compute with. By eliminating such descriptions and sticking to purely parameterized models, existing methods for predicting behavior become available <ref> [Lohner, 1988, Danes et al., 1993] </ref>. It seems likely that for some domains, these types of solutions may overcome the existing limitations of SQsim.
Reference: [Lunze, 1989] <author> Jan Lunze. </author> <title> Robust Multivariable Feedback Control. </title> <publisher> Prentice Hall, </publisher> <year> 1989. </year>
Reference-contexts: Furthermore, linearization is required to solve the variance equations which leads to a mismatch between the behavior of the true model and its linearization. * Use a specialized model structure that separates the uncertainty from the ODE system <ref> [Lunze, 1989] </ref>. The ODE model and the uncertainty model can be solved separately 2 and then combined to bound the model space.
Reference: [Markov and Angelov, 1986] <author> S. Markov and R. Angelov. </author> <title> An interval method for systems of ODE. </title> <booktitle> In Lecture Notes in Computer Science #212 Interval Mathematics 1985, </booktitle> <pages> pages 103-108. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1986. </year>
Reference-contexts: This field analyzes conditions under which bounds exist for an ODE system. Several algorithms (e.g., <ref> [Markov and Angelov, 1986] </ref>) follow directly from this work. * The field of differential inclusions [Aubin and Cellina, 1984] views the SQDE prediction problem from a framework where state and model uncertainty are directly represented by sets of state-space points and ODE models, respectively, and analyzes conditions under which bounds for
Reference: [Moore, 1979] <author> Ramon E. Moore. </author> <title> Methods and Applications of Interval Analysis. </title> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1979. </year>
Reference-contexts: All three behaviors are possible given the information in the QDE. 13 Given an initial assignment of ranges to certain landmarks, we can solve the system of equations using propagation of intervals through model constraints using interval mathematics <ref> [Moore, 1979] </ref> 2 . Whenever we find an equation that computes the value of a model variable, we intersect its existing range with the computed one. If their intersection reduces the range, we assert the updated range and follow the consequences of this new, smaller range. <p> As simulation proceeds, this set may include more and more states that are not reachable from the initial state, thus leading to bounds that diverge with time. This is known as the "wrapping problem" in the interval simulation literature <ref> [Moore, 1979] </ref> (see Figure 2.7). Note that wrapping is the property of any finite representation of a set of states. Depending on the system, is sometimes possible to reduce the effect of wrapping by using other representations such as ellipsoids [Moore, 1979] or by using coordinate transformations that orient the hypercube <p> known as the "wrapping problem" in the interval simulation literature <ref> [Moore, 1979] </ref> (see Figure 2.7). Note that wrapping is the property of any finite representation of a set of states. Depending on the system, is sometimes possible to reduce the effect of wrapping by using other representations such as ellipsoids [Moore, 1979] or by using coordinate transformations that orient the hypercube with respect to the trajectory of the system (see Section 2.4). * Ignoring correlations in the SQDE. A model may contain multiple references to a function, however, the extremization process may make these references refer to different functions. <p> Inclusion monotonicity is the property that if X is an interval vector and F (X) is an interval function 11 then if Y X then F (Y ) F (X). Typical algorithms <ref> [Moore, 1979, Corliss, 1995b] </ref> work in two stages: 11 We say that F is an interval extension of f if F (X 1 ; : : : ; X n ) = f (x 1 ; : : : x n ) as long as the interval X i = [x <p> One such method is to use 12 X (t) = X (t j ) + i=1 i! A (p+1) (t t j ) p+1 for t 2 I where the Taylor coefficients are computed recursively starting with X (t j ) and A (see <ref> [Moore, 1979] </ref> for details). Interval ODE simulators are also susceptible to the effects of ignoring correlations between variables, particularly the wrapping effect. Modern simulators such as AWA [Lohner, 1988] minimize this effect by using a coordinate system that that follows the trajectory of the system.
Reference: [Reckhow, 1987] <author> K.H. Reckhow. </author> <title> Error analysis, first order. </title> <editor> In Madan O. Singh, editor, </editor> <booktitle> Systems and Control Encyclopedia Theory, Technology, Applications, </booktitle> <volume> Volume 6, </volume> <pages> pages 1552-1553. </pages> <address> Oxford, </address> <year> 1987. </year>
Reference-contexts: Furthermore, it is difficult to represent functional uncertainty with this method. * Represent uncertainty using probability distributions for imprecisely known parameters and use variance propagation methods to make predictions <ref> [Gelb, 1974, Reckhow, 1987] </ref>. This approach fails when the uncertainty cannot be modeled as probabilities (for example, if we have functional uncertainty).
Reference: [Richards et al., 1992] <author> Bradley L. Richards, Ina Kraan, and Benjamin Kuipers. </author> <title> Automatic abduction of qualitative models. </title> <booktitle> In Proceedings of the Tenth National Conference on Artificial Intelligence (AAAI-92), </booktitle> <pages> pages 723-728, </pages> <year> 1992. </year>
Reference-contexts: Since selecting amongst model spaces is a very different problem for selecting a model from a model space, this decomposition permits independent solutions to these problems. Existing work in qualitative reasoning <ref> [Coiera, 1989, Richards et al., 1992, Cem Say and Kuru, 1996] </ref> addresses the model selection problem. In this chapter, we concentrate on model refinement. 4.1.1 An Application: Process Monitoring The monitoring of continuous processes can also be cast as a model learning problem (see of measurements.
Reference: [Tokuda, 1996] <author> Lance Tokuda. </author> <title> Managing occurrence branching in qualitative simulation. </title> <booktitle> In Proceedings of the Thirteenth National Conference on Artificial Intelligence (AAAI-96), </booktitle> <pages> pages 998-1003, </pages> <year> 1996. </year>
Reference-contexts: Future progress requires further work on reducing the number of spurious behaviors generated by the simulator, a technical problem that is the subject of active research in the Qualitative Reasoning community (see [Clancy and Kuipers, 1993] and <ref> [Tokuda, 1996] </ref>, for example). 5.4.2 MSQUID Function learning is a key task in many scientific endeavors. Often, however, a precise parametric model does not exist, yet there is a need to determine a best fit to a set of data.
Reference: [Vescovi et al., 1995] <author> Marcos Vescovi, Adam Farquhar, and Yumi Iwasaki. </author> <title> Numerical interval simulation: Combined qualitative and quantitative simulation to bound behaviors of non-monotonic systems. </title> <booktitle> In Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1806-1812, </pages> <year> 1995. </year> <month> 141 </month>
Reference-contexts: the interest of completeness, we list some of these below. 13 Of course, since the extremal system is a precise ODE system, there is no reason that Nsim could not use an interval ODE solver to ensure that this source of error is accounted for. 42 * The NIS system <ref> [Vescovi et al., 1995] </ref> is similar to Nsim in that it produces dynamic envelopes for systems describable by SQDEs.
Reference: [Walter, 1970] <author> Wolfgang Walter. </author> <title> Differential and Integral Inequalities. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin York, </address> <year> 1970. </year>
Reference-contexts: The practical result is that the extremal system for this system produces tighter bounds than extremal system (2.1). SQDEs that lead to separable extremal systems have the property that their bounds are determined by simulating "corners" of the hypercube. This class is identical to the class of quasi-monotonic systems <ref> [Walter, 1970] </ref> for which it can be shown that simulating the corners of the hypercube leads to an optimal bound [Corliss, 1995a]. These sources of spurious behavior suggest that we can improve the Nsim prediction by using different uncertainty representations or simulation methods. <p> There is also a large body of theoretical work that provides a formal basis for many bounding methods: * The field of differential inequalities <ref> [Walter, 1970] </ref> has relevance to bounding behaviors of imprecisely-defined ODE systems. This field analyzes conditions under which bounds exist for an ODE system.
Reference: [Witkin, 1983] <author> Andrew P. Witkin. </author> <title> Scale-space filtering. </title> <booktitle> In Proceedings of the Eigth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1019-1022, </pages> <year> 1983. </year>
Reference-contexts: One limitation of traditional methods is that it is often necessary to have extra information about the 122 underlying trend such as its power spectrum to define a filter that reconstructs the origi-nal signal. Scale-space filtering <ref> [Witkin, 1983] </ref> eliminates this need by filtering the signal through a family of Gaussian filters whose filter coefficient is continuously varied across a range of values. As the coefficient increases, the signal is smoothed further until it eventually becomes flat.
Reference: [Zukowski, 1986] <author> Charles A. Zukowski. </author> <title> The Bounding Approach to VLSI Circuit Simulation. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, </address> <year> 1986. </year> <month> 142 </month>
Reference-contexts: In [Hullermeier, 1995], Hullermeier examines SQDE simulation as done by Nsim in this framework and suggests methods for using alternate representations that can sometimes produce better bounds at greater computational expense. There has also been applied work in behavior bounding in the area of VLSI simulation by Zukowski <ref> [Zukowski, 1986] </ref>.
References-found: 48

