URL: ftp://ftp.research.microsoft.com/pub/tr/tr-97-25.ps
Refering-URL: http://www.research.microsoft.com/barc/mbone/mppt.htm
Root-URL: http://www.research.microsoft.com
Title: Using Multicast FEC to Solve the Midnight Madness Problem  
Author: Eve Schooler and Jim Gemmell 
Address: One Microsoft Way Redmond, WA 98052  
Date: September 30, 1997  
Affiliation: Microsoft Research  Microsoft Research Advanced Technology Division Microsoft Corporation  
Abstract: Technical Report MSR-TR-97-25 
Abstract-found: 1
Intro-found: 1
Reference: [AFZ95] <author> Acharya, Swarup, Franklin, Michael, and Zdonik, Stanley, </author> <title> Dissemination-Based Data Delivery Using Broadcast Disks, </title> <journal> IEEE Personal Communications, </journal> <volume> pp.50-60, </volume> <month> Dec </month> <year> 1995. </year>
Reference-contexts: This is referred to as the data carousel or broadcast disk approach <ref> [AFZ95] </ref>. The receiver is able to reconstruct missing components of a file without having to request retransmissions, but at the cost of possibly waiting the full duration of the loop.
Reference: [BIR91] <author> Birman, K., Schiper, A., and Stephenson, P., </author> <title> Lightweight Causal and Atomic Group Multicast, </title> <journal> ACM Transaction on Computer Systems. </journal> <volume> 9(3): </volume> <pages> 272-314. </pages> <month> Aug </month> <year> 1991. </year>
Reference-contexts: Namely, IP multicast only provides a datagram service or best-effort delivery. It does not guarantee that packets sent will be received, nor does it ensure packets will arrive in the order they are sent. A number of efforts have been undertaken to provide reliability on top of IP multicast <ref> [BIR91, CHA84, CRO88, FLO95, HOL95, MON94, PAU97, TAL95, WHE95, YAV95] </ref>. Because the semantics of reliable group communication vary on an application basis, there is no single reliable multicast protocol that can best meets the needs of all applications.
Reference: [BLA94] <author> Blahut, R.E., </author> <title> Theory and Practice of Error Control Codes, </title> <publisher> Addison Wesley, </publisher> <address> MA, </address> <year> 1984. </year>
Reference: [BOL94] <author> Bolot, J.C., Turletti, T., Wakeman, I., </author> <title> Scalable Feedback Control for Multicast Video Distribution in the Internet, </title> <booktitle> Proceedings of ACM SIGCOMM94, </booktitle> <address> pp.58-67, </address> <month> Oct </month> <year> 1994. </year>
Reference-contexts: All hierarchical approaches have difficulty confining multicast messaging to explicit sub-trees because it is difficult to match the tree topology with the multicast time-to-live (TTL) scoping mechanism. Polling. Polling is a sender-initiated technique to prevent implosions <ref> [HAN97b, BOL94] </ref>. All nodes generate a random key of sufficient bits that uniqueness is extremely likely. The sender sends a polling message, which includes a key and a value to indicate the number of bits, which must match between the senders key and a receivers key.
Reference: [CHA84] <author> J. M. Chang and N. F. Maxemchuck, </author> <title> Reliable Broadcast Protocols, </title> <journal> ACM Transactions on Computing Systems, </journal> <volume> 2(3) </volume> <pages> 251-273. </pages> <month> Aug </month> <year> 1984. </year>
Reference-contexts: Namely, IP multicast only provides a datagram service or best-effort delivery. It does not guarantee that packets sent will be received, nor does it ensure packets will arrive in the order they are sent. A number of efforts have been undertaken to provide reliability on top of IP multicast <ref> [BIR91, CHA84, CRO88, FLO95, HOL95, MON94, PAU97, TAL95, WHE95, YAV95] </ref>. Because the semantics of reliable group communication vary on an application basis, there is no single reliable multicast protocol that can best meets the needs of all applications.
Reference: [CRO88] <author> Crowcroft, J., and Paliwoda, K., </author> <title> A Multicast Transport Protocol, </title> <booktitle> Proceedings of ACM SIGCOMM 88, </booktitle> <pages> Pages 247 - 256, </pages> <year> 1988. </year>
Reference-contexts: Namely, IP multicast only provides a datagram service or best-effort delivery. It does not guarantee that packets sent will be received, nor does it ensure packets will arrive in the order they are sent. A number of efforts have been undertaken to provide reliability on top of IP multicast <ref> [BIR91, CHA84, CRO88, FLO95, HOL95, MON94, PAU97, TAL95, WHE95, YAV95] </ref>. Because the semantics of reliable group communication vary on an application basis, there is no single reliable multicast protocol that can best meets the needs of all applications.
Reference: [DEE88] <author> Deering, S., </author> <title> Host Extensions for IP Multicasting, </title> <type> RFC 1058, </type> <institution> Stanford University, Stanford, </institution> <address> CA, </address> <year> 1988. </year>
Reference-contexts: and 10MB can take nearly an hour to download. 2 However, the unicast transmission may not achieve the ideal because with long delays the algorithm to manage TCPs window may slow throughput. 3 Comparison with Unicast IP multicast provides a powerful and efficient means to transmit data to multiple parties <ref> [DEE88] </ref>. A sender multicasts data by sending to an IP address, just as if using unicast IP. The only difference is that the IP address is in the range reserved for multicasting (224.x.x.x-239.x.x.x). A receiver expresses interest in a multicast session by using the Internet Group Management Protocol (IGMP).
Reference: [FEN97] <author> Fenner, W., </author> <title> Internet Group Management Protocol, </title> <type> version 2, </type> <institution> Xerox PARC, </institution> <address> Palo Alto, CA, </address> <month> Jan </month> <year> 1997. </year>
Reference-contexts: A receiver expresses interest in a multicast session by using the Internet Group Management Protocol (IGMP). Once it sends an IGMP message to subscribe to the group address, it will receive all packets sent to that multicast address and within the scope or time-to-live (TTL) of the sender <ref> [FEN97] </ref>. To send a packet to a group of receivers, the unicast solution requires a sender to send individual copies of the packet to each receiver, whereas IP multicast allows the sender to perform a single send. A multicast packet is only duplicated at network branching points, as necessary. <p> The sender loops continuously either ad infinitum or until the session completion time is reached. Whenever there are no receivers, the multicast group membership algorithm (IGMP) will prune back the multicast distribution, so the senders transmission will not be carried over any network link <ref> [FEN97] </ref>. A receiver subscribes to the multicast address and listens for data until either receiving the entire data transfer or the session completion time is reached. Presently, there is no back-channel from the receiver to the sender.
Reference: [FLO95] <author> Floyd, S., Jacobson, V., Liu, C., McCanne, S., and Zhang, L., </author> <title> A Reliable Multicast Framework for Lightweight Sessions and Application Level Framing, </title> <booktitle> ACM SIGCOMM 95, </booktitle> <address> Cambridge, MA, </address> <month> Aug </month> <year> 1995. </year>
Reference-contexts: Namely, IP multicast only provides a datagram service or best-effort delivery. It does not guarantee that packets sent will be received, nor does it ensure packets will arrive in the order they are sent. A number of efforts have been undertaken to provide reliability on top of IP multicast <ref> [BIR91, CHA84, CRO88, FLO95, HOL95, MON94, PAU97, TAL95, WHE95, YAV95] </ref>. Because the semantics of reliable group communication vary on an application basis, there is no single reliable multicast protocol that can best meets the needs of all applications. <p> When receivers detect a missed packet, typically each sends its own unicast NACK to request the packet be resent. With this technique, NACKs are now multicast so that all participants may detect that a NACK has already been issued <ref> [RAM87, FLO95] </ref>. In addition, a receiver delays or suppresses the NACK for a random amount of time, in hopes of receiving a NACK for the same packet from some other host. <p> Even after these precautions, implosion becomes unavoidable with extremely large numbers of receivers. 4 Local Repair. Another technique to reduce the potential bottleneck at the sender is to allow any receiver that has cached a packet to reply to a NACK request <ref> [FLO95] </ref>. Because the receivers use a timer-based suppression scheme to minimize the number of receivers that respond, this approach has the same drawbacks as NACK suppression when the receiver set becomes large. Hierarchy.
Reference: [FLO93] <author> Floyd, S., Jacobson, V., </author> <title> The Synchronization of Periodic Routing Messages, </title> <journal> ACM SIGCOMM Computer Communication Review, </journal> <volume> 23(4) </volume> <pages> 33-44, </pages> <month> Oct </month> <year> 1993. </year>
Reference-contexts: Of course this lengthens the amount of time a receiver needs to wait for the replenishment of a missed packet. Another modification to generate asynchrony is to adjust the data rate timer <ref> [FLO93] </ref>. To avoid synchronization, the timer interval is adjusted by randomly setting it to an amount from the uniform distribution on the interval [0.5T, 1.5T], where T is the desired timer interval. <p> Each layer would operate essentially as a separate Fcast. To avoid synchronized packet sending across layers, the multiple sender threads should use the technique suggested in <ref> [FLO93] </ref> to randomly perturb timer intervals, which would avoid self-induced congestion (packet bursts) and subsequent packet loss.
Reference: [GEM97] <author> Gemmell, J., </author> <title> Scalable Reliable Multicast Using Erasure-Correcting Resends, </title> <type> Technical Report MSR-TR-97-20, </type> <institution> Microsoft Research, </institution> <address> Redmond, WA, </address> <month> June </month> <year> 1997. </year>
Reference-contexts: A small window also assures timely delivery. Thus, 14 instead of looping through the data set continuously as Fcast would, multicast PowerPoint conditionally resends missed or lost slides. Multicast PowerPoint relies on the ECSRM protocol, a variant of the SRM protocol with FEC <ref> [GEM97] </ref>. ECSRM relies on NACK suppression to reduce message implosion, but uses FEC packets when responding to resend requests. It has a sliding window of data that can be recovered and that expires during the session. Regardless of the protocol differences, Fcast combines quite naturally with multicast PowerPoint.
Reference: [HAN97a] <author> Handley, M., Jacobson, V., SDP: </author> <title> Session Description Protocol, </title> <type> Internet Draft, </type> <institution> IETF MMUSIC Working Group, </institution> <month> Sept </month> <year> 1997. </year>
Reference-contexts: Session Descriptions Despite being entirely separate components, the sender and receiver must be in agreement on certain session attributes. These are the descriptive parameters describing the file transfer. We assume that there exists an outside mechanism to share session descriptions between the sender and receiver <ref> [HAN97a] </ref>. The session description might be carried in a session announcement protocol such as SAP [HAN96], located on a Web page with scheduling information, or conveyed via Email or other out-of-band methods.
Reference: [HAN97b] <author> Handley, M., Crowcroft, J., </author> <title> Network Text Editor (NTE): A Scalable Shared Text Editor for the Mbone, </title> <booktitle> Proceedings of ACM SIGCOMM97, </booktitle> <address> Canne France, </address> <month> Aug </month> <year> 1997. </year>
Reference-contexts: All hierarchical approaches have difficulty confining multicast messaging to explicit sub-trees because it is difficult to match the tree topology with the multicast time-to-live (TTL) scoping mechanism. Polling. Polling is a sender-initiated technique to prevent implosions <ref> [HAN97b, BOL94] </ref>. All nodes generate a random key of sufficient bits that uniqueness is extremely likely. The sender sends a polling message, which includes a key and a value to indicate the number of bits, which must match between the senders key and a receivers key.
Reference: [HAN97c] <author> Handley, M., </author> <title> An Examination of MBone Performance, </title> <institution> USC/ISI Research Report ISI/RR-97-450, Information Sciences Institute, Marina del Rey, </institution> <address> CA, </address> <month> Jan </month> <year> 1997. </year>
Reference-contexts: Thus the bulk data transfer might be organized to stagger the transmission order across different layers. A hierarchical organization of the layers makes data coverage more straightforward. Another partitioning across layers is based on error rates <ref> [HAN97c] </ref>, with original packets on one layer, FEC targeted at correlated loss on another layer, and a final layer of FEC for extremely high error rates. Note that this is an exclusionary rather than additive approach to layering.
Reference: [HAN96] <author> Handley, M., </author> <title> SAP: Session Announcement Protocol, </title> <type> Internet Draft, </type> <institution> IETF MMUSIC Working Group, </institution> <month> Nov </month> <year> 1996. </year>
Reference-contexts: These are the descriptive parameters describing the file transfer. We assume that there exists an outside mechanism to share session descriptions between the sender and receiver [HAN97a]. The session description might be carried in a session announcement protocol such as SAP <ref> [HAN96] </ref>, located on a Web page with scheduling information, or conveyed via Email or other out-of-band methods. The session description attributes needed for a multicast FEC bulk data transfer are shown in the tSession data structure below. The Maddr, nPort and nTTL indicate a unique multicast address and scope.
Reference: [HOL95] <author> Holbrook, H.W., Singhal, S.K., and Cheriton, </author> <title> D.R., Log-based Receiver-Reliable Multicast for Distributed Interactive Simulation, </title> <booktitle> Proceedings of SIGCOMM '95, </booktitle> <address> Cambridge, MA, </address> <month> Aug </month> <year> 1995. </year> <month> 16 </month>
Reference-contexts: Namely, IP multicast only provides a datagram service or best-effort delivery. It does not guarantee that packets sent will be received, nor does it ensure packets will arrive in the order they are sent. A number of efforts have been undertaken to provide reliability on top of IP multicast <ref> [BIR91, CHA84, CRO88, FLO95, HOL95, MON94, PAU97, TAL95, WHE95, YAV95] </ref>. Because the semantics of reliable group communication vary on an application basis, there is no single reliable multicast protocol that can best meets the needs of all applications. <p> Each inner node is only responsible for reliable transmission to its children, which limits state explosion and message implosion and accomplishes local repairs. The difficulty with a hierarchical approach lies in the tree management itself. For static trees, losing an internal node can have disastrous consequences on its descendents <ref> [HOL95] </ref>. Dynamic trees are unstable when the receiver set rapidly changes [YAV95]. Furthermore, some nodes may be unsuitable as interior nodes; for example, nodes that are slow and unresponsive, or that are connected via slow modem links.
Reference: [JAC97] <author> Jacobson, V., </author> <title> Pathchar a tool to infer characteristics of Internet paths, </title> <booktitle> MSRI Seminar slides, </booktitle> <month> Apr </month> <year> 1997; </year> <month> ftp://ftp.ee.lbl.gov/pathchar/msri-talk.ps.gz. </month>
Reference-contexts: To avoid rigid configuration, we could use pathchar methods to establish the bandwidth of the 1 st hop and to note whether or not a receiver is connected via modem <ref> [JAC97] </ref>. Thus far we also have assumed that there is no back-channel between receivers and sender. In this case, the sender is at risk of sending at data rates that are not maximally useful to the receivers.
Reference: [KAS97] <author> Kasera, S.K., Kurose, J., Towsley, D., </author> <title> Scalable Reliable Multicast Using Multiple Multicast Groups, </title> <booktitle> ACM SIGMETRICS 97, </booktitle> <address> Seattle, WA, </address> <year> 1997. </year>
Reference-contexts: Note that this is an exclusionary rather than additive approach to layering. A related tack <ref> [KAS97] </ref> is to place different ranges of FEC indices on particular layers. A receiver can easily subscribe to a particular layer in order to replace specific packets lost. Similarly, layers could be partitioned to carry particular groups or group ranges, or even to carry entirely different files.
Reference: [MCC97] <author> McCanne, S., Vetterli, M., Jacobson, V., </author> <title> Low-complexity Video Coding for Receiver-driven Layered Multicast, </title> <journal> IEEE Journal on Selected Areas in Communications, Vol.16, No.6, </journal> <volume> pp.983-1001, </volume> <month> Aug </month> <year> 1997. </year>
Reference-contexts: Each represents the bandwidth of a separate layer to which receivers can subscribe as they are capable. Alternatively, the layers might offer similar data rates. Yet another scheme draws upon lessons from hierarchical video encoding <ref> [MCC97] </ref>. The data rates offered by the layers are organized exponentially, so that each layer is sending at twice the data rate of the previous layer [VIC97]. <p> Layering can be used to solve this. An end node should only subscribe to as many layers as can be successfully received. One way of ascertaining the appropriate level is via join-leave experiments <ref> [MCC97] </ref>, whereby a receiver adds and drops layers and observes the behavior of the transmission. This will no doubt help, but the stability of the approach is not yet proven (i.e., oscillations may occur as many nodes add and drop).
Reference: [MON94] <author> Montgomery, T., </author> <title> Design, Implementation, and Verification of the Reliable Multicast Protocol, </title> <type> Masters Thesis, </type> <institution> University of West Virginia, </institution> <year> 1994. </year>
Reference-contexts: Namely, IP multicast only provides a datagram service or best-effort delivery. It does not guarantee that packets sent will be received, nor does it ensure packets will arrive in the order they are sent. A number of efforts have been undertaken to provide reliability on top of IP multicast <ref> [BIR91, CHA84, CRO88, FLO95, HOL95, MON94, PAU97, TAL95, WHE95, YAV95] </ref>. Because the semantics of reliable group communication vary on an application basis, there is no single reliable multicast protocol that can best meets the needs of all applications.
Reference: [MSC97] <institution> Microsoft TechNet Reference Desk Home Page, </institution> <note> How microsoft Manages www.microsoft.com; http://microsoft.com/syspro/technet/tnnews/features/mscom.htm </note>
Reference-contexts: Not surprisingly, nearby University of Washington found that it was nearly impossible to get any traffic through the Internet due to congestion generated by IE 3.0 downloads. Unexpectedly, whole countries also found their Internet access taxed by individuals trying to obtain the software <ref> [MSC97] </ref>. The increase in the number of hits to the Microsoft Web site became known as the Midnight Madness scenario. These are spikes in hit volumes that are often an order of magnitude greater than the usual traffic load. <p> We characterize the frenzied downloading as midnight madness because the mad dash for files often takes place late at night or in the early hours of the morning when files are first made available. To put the problem in perspective, let us examine some of the statistics in detail <ref> [MSC97] </ref>. Three minutes after Internet Explorer 3.0 was placed on download servers, Web site hits climbed to 15 times the normal levels. Within 6 hours, 32,000 users had downloaded the 10-MB file.
Reference: [PAU97] <author> S. Paul, K. K. Sabnani, J. C.-H. Lin, and S. Bhattacharyya, </author> <title> Reliable Multicast Transport Protocol (RMTP), </title> , <journal> IEEE Journal on Selected Areas in Communications. Special Issue for Multipoint Communications, </journal> <volume> Vol. 15, No. 3, </volume> <pages> pp. 407 421, </pages> <month> Apr </month> <year> 1997. </year>
Reference-contexts: Namely, IP multicast only provides a datagram service or best-effort delivery. It does not guarantee that packets sent will be received, nor does it ensure packets will arrive in the order they are sent. A number of efforts have been undertaken to provide reliability on top of IP multicast <ref> [BIR91, CHA84, CRO88, FLO95, HOL95, MON94, PAU97, TAL95, WHE95, YAV95] </ref>. Because the semantics of reliable group communication vary on an application basis, there is no single reliable multicast protocol that can best meets the needs of all applications.
Reference: [POS81] <author> Postel, J., ed,. </author> <title> Transmission Control Protocol, </title> <type> RFC 793, </type> <month> Sept </month> <year> 1981. </year>
Reference-contexts: By establishing large numbers of TCP connections between a single sender and multiple receivers, the sender transmits many copies of the same data, which then must traverse many of the same network links <ref> [POS81] </ref>. Naturally, links closest to the sender are heavily penalized. Nonetheless such a transmission can create bottlenecks anywhere in the network where oversubscription occurs, as evidenced by the IE 2 anecdotes above.
Reference: [RAM87] <author> Ramakrishnan, S. and Jain, B. N., </author> <title> A Negative Acknowledgement With Periodic Polling Protocol for Multicast over LANs, </title> <booktitle> Proc. IEEE Infocom 87, </booktitle> <pages> pp. 502-511, </pages> <month> Mar/Apr </month> <year> 1987. </year>
Reference-contexts: There are several approaches to scalable reliable multicast (that are often combined): NACK Suppression. The aim of receiver-initiated NACK suppression is to minimize the number of NACKs generated in order to avoid message implosion <ref> [RAM87] </ref>. When receivers detect a missed packet, typically each sends its own unicast NACK to request the packet be resent. With this technique, NACKs are now multicast so that all participants may detect that a NACK has already been issued [RAM87, FLO95]. <p> When receivers detect a missed packet, typically each sends its own unicast NACK to request the packet be resent. With this technique, NACKs are now multicast so that all participants may detect that a NACK has already been issued <ref> [RAM87, FLO95] </ref>. In addition, a receiver delays or suppresses the NACK for a random amount of time, in hopes of receiving a NACK for the same packet from some other host.
Reference: [RIZZ97a] <author> L. Rizzo, L. Vicisano, </author> <title> Reliable Multicast Data Distribution protocol based on software FEC techniques, </title> <booktitle> Proceedings of the Fourth IEEES Workshop on the Architecture and Implementation of High Performance Communication Systems, </booktitle> <address> HPCS97, Chalkidiki, Greece, </address> <month> June </month> <year> 1997. </year>
Reference-contexts: The receiver is able to reconstruct missing components of a file without having to request retransmissions, but at the cost of possibly waiting the full duration of the loop. A more effective approach that requires no back-traffic, but which reduces the retransmission wait time, employs forward error correction (FEC) <ref> [RIZZ97a, RIZZ97b, RIZZ97c] </ref>. Clever use of redundant encoding of the data allows receivers to simply listen for packets as long as is necessary to receive the full transmission. The encoding algorithm is designed to handle erasures (whole packets lost), rather than single-bit errors.
Reference: [RIZZ97b] <author> L. Rizzo, L. Vicisano, </author> <title> Effective Erasure Codes for Reliable Computer Communication Protocols, </title> <journal> Computer Communication Review, Vol.27, No.2, </journal> <volume> pp.24-36, </volume> <month> Apr </month> <year> 1997. </year>
Reference-contexts: The receiver is able to reconstruct missing components of a file without having to request retransmissions, but at the cost of possibly waiting the full duration of the loop. A more effective approach that requires no back-traffic, but which reduces the retransmission wait time, employs forward error correction (FEC) <ref> [RIZZ97a, RIZZ97b, RIZZ97c] </ref>. Clever use of redundant encoding of the data allows receivers to simply listen for packets as long as is necessary to receive the full transmission. The encoding algorithm is designed to handle erasures (whole packets lost), rather than single-bit errors.
Reference: [RIZZ97c] <author> L. </author> <title> Rizzo, On the Feasibility of Software FEC, </title> <type> DEIT Tech Report, </type> <address> http://www.iet.unipi.it/~luigi/softfec.ps, Jan 1997. </address>
Reference-contexts: The receiver is able to reconstruct missing components of a file without having to request retransmissions, but at the cost of possibly waiting the full duration of the loop. A more effective approach that requires no back-traffic, but which reduces the retransmission wait time, employs forward error correction (FEC) <ref> [RIZZ97a, RIZZ97b, RIZZ97c] </ref>. Clever use of redundant encoding of the data allows receivers to simply listen for packets as long as is necessary to receive the full transmission. The encoding algorithm is designed to handle erasures (whole packets lost), rather than single-bit errors. <p> The more unique blocks sent (and received), the sooner the receiver will obtain k unique blocks that it can decode back into the original group. Thus, the transmission order for a file with G groups might be as suggested by <ref> [RIZZ97c] </ref> and displayed in packet of the last group is sent, the next transmission cycle begins again. If an early packet is lost from the first group, it may require the receipt of G additional packets to be received before being able to repair the one lost. <p> We discuss the transmission ordering, as well as the tradeoffs of data manipulation in memory versus storage on disk. Finally, we specify the application programming interface (API) to the Fcast suite of library routines. The Fcast implementation takes advantage of high-performance FEC software that is publicly available from <ref> [RIZZ97c] </ref>. The erasure code algorithm is capable of running at speeds in excess of 100 Mb/sec on standard workstation platforms and implements a special case of the ReedSolomon or BCH codes [BLA84].
Reference: [SCH97] <author> Schulzrinne, H., Casner, S., Frederick, R., Jacobson, V., RTP: </author> <title> A Transport Protocol for Real-Time Applications, </title> <type> RFC 1889, </type> <month> Jan </month> <year> 1997. </year>
Reference-contexts: However, Or the packets may be dropped earlier due to congestion. 12 eventually, it might be useful to incorporate some feedback mechanisms, even if only to use RTCP-like techniques to track the number of subscribers per layer <ref> [SCH97] </ref>. A certain number of subscribers might justify increasing the aggregate bandwidth usage. It is not clear yet how best to combine congestion control with scalable, reliable multicast.
Reference: [TAL95] <author> Talpade, R., Ammar, M.H., </author> <title> Single Connection Emulation: An Architecture for Providing a Reliable Multicast Transport Service, </title> <booktitle> Proceedings of the 15 th IEEE International Conference on Distributed Computing Systems, </booktitle> <address> Vancouver, Canada, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: Namely, IP multicast only provides a datagram service or best-effort delivery. It does not guarantee that packets sent will be received, nor does it ensure packets will arrive in the order they are sent. A number of efforts have been undertaken to provide reliability on top of IP multicast <ref> [BIR91, CHA84, CRO88, FLO95, HOL95, MON94, PAU97, TAL95, WHE95, YAV95] </ref>. Because the semantics of reliable group communication vary on an application basis, there is no single reliable multicast protocol that can best meets the needs of all applications.
Reference: [VIC97] <author> L. Vicisano, J. Crowcroft, </author> <title> One to Many Reliable Bulk-Data Transfer in the Mbone, </title> <booktitle> Proceedings of the Third International Workshop on High Performance Protocol Architectures, </booktitle> <address> HIPPARCH 97, Uppsala, Sweden, </address> <month> June </month> <year> 1997. </year>
Reference-contexts: Alternatively, the layers might offer similar data rates. Yet another scheme draws upon lessons from hierarchical video encoding [MCC97]. The data rates offered by the layers are organized exponentially, so that each layer is sending at twice the data rate of the previous layer <ref> [VIC97] </ref>. Transmission ordering is integral to layering because we want the full coverage of the data set, yet we aim to incur little to no redundancy. <p> This will no doubt help, but the stability of the approach is not yet proven (i.e., oscillations may occur as many nodes add and drop). Another technique to determine the appropriate level of subscription is to perform coordinated bursts of data rate doubling <ref> [VIC97] </ref>, when hierarchical layers are used.
Reference: [WHE95] <author> Whetten, B., Montgomery, T., Kaplan, S., </author> <title> A High Performance Totally Ordered Multicast Protocol, </title> <booktitle> Proceedings International Workshop on Theory and Practice in Distributed Systems, </booktitle> <publisher> Springer-Verlag, </publisher> <address> pp.33-57, </address> <month> Sept </month> <year> 1994. </year>
Reference-contexts: Namely, IP multicast only provides a datagram service or best-effort delivery. It does not guarantee that packets sent will be received, nor does it ensure packets will arrive in the order they are sent. A number of efforts have been undertaken to provide reliability on top of IP multicast <ref> [BIR91, CHA84, CRO88, FLO95, HOL95, MON94, PAU97, TAL95, WHE95, YAV95] </ref>. Because the semantics of reliable group communication vary on an application basis, there is no single reliable multicast protocol that can best meets the needs of all applications.
Reference: [YAV95] <author> Yavatkar, R, Griffioen, J, Sudan, M, </author> <title> A Reliable Dissemination Protocol for Interactive Collaborative Applications, </title> <booktitle> ACM Multimedia 95, </booktitle> <pages> Pages 333-343, </pages> <month> Nov </month> <year> 1995. </year>
Reference-contexts: Namely, IP multicast only provides a datagram service or best-effort delivery. It does not guarantee that packets sent will be received, nor does it ensure packets will arrive in the order they are sent. A number of efforts have been undertaken to provide reliability on top of IP multicast <ref> [BIR91, CHA84, CRO88, FLO95, HOL95, MON94, PAU97, TAL95, WHE95, YAV95] </ref>. Because the semantics of reliable group communication vary on an application basis, there is no single reliable multicast protocol that can best meets the needs of all applications. <p> The difficulty with a hierarchical approach lies in the tree management itself. For static trees, losing an internal node can have disastrous consequences on its descendents [HOL95]. Dynamic trees are unstable when the receiver set rapidly changes <ref> [YAV95] </ref>. Furthermore, some nodes may be unsuitable as interior nodes; for example, nodes that are slow and unresponsive, or that are connected via slow modem links. Identifying such unsuitable nodes may be difficult, and even then, all nodes may be considered unsuitable.
References-found: 32

