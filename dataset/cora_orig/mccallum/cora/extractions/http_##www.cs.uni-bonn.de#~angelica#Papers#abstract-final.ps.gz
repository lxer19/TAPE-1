URL: http://www.cs.uni-bonn.de/~angelica/Papers/abstract-final.ps.gz
Refering-URL: http://www.cs.uni-bonn.de/~angelica/publications.html
Root-URL: http://cs.uni-bonn.de
Email: fwolfram,abc,fox,angelica,stefang@informatik.uni-bonn.de  
Title: Logic Programming Tools Applied to Fire Detection in Hard-coal Mines  
Author: Wolfram Burgard, Armin B. Cremers, Dieter Fox, Angelica M. Kappel, and Stefan Luttringhaus-Kappel W. Burgard, A. B. Cremers, D. Fox, M. Heidelbach, A. M. Kappel, and S. Luttringhaus-Kappel. Knowledge-enhanced CO-Monitoring 
Note: References [1]  in Coal Mines. In Proceedings of the Ninth International Conference on Industrial Engineering Applications of Artificial Intelligence Expert Systems, 1996.  
Address: Bonn, Germany  
Affiliation: Institut fur Informatik III, Universitat  
Abstract: Detection of underground fires is an important security task in hard-coal mining. In order to enable a rapid detection, the underground carbon monoxide (CO) concentration is constantly monitored using several hundreds of sensors in an average coal mine. Current monitoring systems, however, produce a large number of false alarms. We developed an improved system for CO-monitoring in hard-coal mines using adaptive techniques to forecast the CO-concentrations in the mine, achieving a significant reduction of false alarms. Logic programming permits a descriptive and transparent formulation of the underlying algorithms and heuristics, leading to improved security and easy maintenance of the resulting system. Both the main monitoring process and the graphical user interface are implemented using logic programming techniques. For each, a Prolog-based tool has been developed. Simultaneous monitoring of a large number of CO-sensors is implemented in the rule-based specification language SEA (Streams in EA). SEA is an extension of Evolving Algebras (EAs) providing modules and stream parallelism. Special emphasis is on the compiler, which generate efficient Prolog code from SEA specifications. As a basis for the mouse-driven graphical user interface of the monitoring system we developed the library PAT (Prolog and Tcl/Tk) which smoothly couples Tcl/Tk to Prolog. In contrast to existing Tcl/Tk interfaces like ProTcXl, which require extensive knowledge of Tcl/Tk commands, PAT handles all user interface elements as Prolog terms, tightly integrating Tk's functionality and being conform to the logic programming paradigm. [2] Angelica M. Kappel. Executable Specifications based on Dynamic Algebras. In A. Voronkov, editor, Logic Programming and Automated Reasoning, volume 698 of Lecture Notes in Artificial Intelligence, pages 229-240. Springer Verlag, 1993. 
Abstract-found: 1
Intro-found: 0
Reference: [1] <author> W. Burgard, A. B. Cremers, D. Fox, M. Heidelbach, A. M. Kappel, and S. Luttringhaus-Kappel. </author> <title> Knowledge-enhanced CO-Monitoring in Coal Mines. </title> <booktitle> In Proceedings of the Ninth International Conference on Industrial & Engineering Applications of Artificial Intelligence & Expert Systems, </booktitle> <year> 1996. </year>
Reference: [2] <author> Angelica M. Kappel. </author> <title> Executable Specifications based on Dynamic Algebras. </title> <editor> In A. Voronkov, editor, </editor> <booktitle> Logic Programming and Automated Reasoning, volume 698 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 229-240. </pages> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
References-found: 2

