URL: ftp://ftp.cs.rutgers.edu/pub/farach/LZ2-Matching.ps.Z
Refering-URL: http://www.cs.rutgers.edu/~farach/index.html
Root-URL: http://www.cs.rutgers.edu
Title: p Within at most c elements on the path toward the root there is a
Author: p u. u. 
Keyword: p References  
Note: 3. Prefix Chunks: Assume that c &lt; m and c &lt;  has at most c elements, each found in time at most O(c).  10  
Abstract: c elements since then we reach a stored node and access that information in constant time. Total Time: O(nc + n log m) (O(nc) using hash ing). 2. Suffix Chunks: Check whether any of the previous elements in the path toward the root is an exact suffix. This is done as in section 5.2. However, there is no need to check more than at most c nodes, since by then we reach a stored node and access the information in constant time. Total Time: O(nc log m) (O(nc) using hashing). p 6 Open Problems In the nascent area of compressed matching it is harder to find a closed problem than an open problem. Start with exact matching in the LZW compression. We optimal. We would like to see a O(n + m) time and space algorithm. For the model requiring as little extra space as possible, one would like an algorithm with O(m) extra space and better time than O(mn u) that we report. Optimally, we would want the time to be O(n), but anything between the two will be welcome. In addition to the above two problems, one can go through the compression literature and try to find efficient pattern matching algorithms for the various known compressions. An interesting step in this direction would be the Lempel-Ziv compression. Finally, for any fixed compression we would like to see more than an algorithm for the simple pattern matching. Important problems to solve are approximate matching, dictionary matching, matching with don't cares, and multidimensional matching. Each of these problems needs efficient parallel algorithms as well. [1] A. Amir and G. Benson. Efficient two dimensional compressed matching. Proc. of Data Compression Conference, Snow Bird, Utah, pages 279-288, Mar 1992. [2] A. Amir and G. Benson. Two-dimensional periodicity and its application. Proc. of 3rd Symposium on Discrete Algorithms, Orlando, FL, pages 440-452, Jan 1992. [3] A. Amir, G. Benson, and M. Farach. Witness-free dueling: The perfect crime! (or how to match in a compressed two-dimensional array). submitted for publication, 1993. [4] A. Amir, G.M. Landau, and U. Vishkin. Efficient pattern matching with scaling. Journal of Algorithms, 13(1):2-32, 1992. [5] M. Dietzfelbinger, A. Karlin, K. Mehlhorn, F. Meyer auf der Heide, H. Rohnert, and R. Tarjan. Dynamic perfect hashing: Upper and lower bounds. In Proc. of the 20th Ann. ACM Symp. on Theory of Computing, pages 524-531, October 1988. [6] T. Eilam-Tsoreff and U. Vishkin. Matching patterns in a string subject to multilinear trasformations. Pro-cedings of the International Workshop on Sequences, Combinatorics, Compression, Security and Transmission, Salerno, Italy, June 1988. [7] M. Gu, M. Farach, and R. Beigel. An efficient algorithm for dynamic text indexing. Personal communication, submitted for publication. [8] D.E. Knuth, J.H. Morris, and V.R. Pratt. Fast pattern matching in strings. SIAM J. Comp., 6:323-350, 1977. [9] E. M. McCreight. A space-economical suffix tree construction algorithm. Journal of the ACM, 23:262-272, 1976. [10] P. Weiner. Linear pattern matching algorithm. Proc. 14 IEEE Symposium on Switching and Automata Theory, pages 1-11, 1973. [11] T. A. Welch. A technique for high-performance data compression. IEEE Computer, 17:8-19, 1984. [12] J. Ziv and A. Lempel. A universal algorithm for sequential data compression. IEEE Trans. on Information Theory, IT-23(3):337-343, 1977. presented two implementations, neither of which is
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Amir and G. Benson. </author> <title> Efficient two dimensional compressed matching. </title> <booktitle> Proc. of Data Compression Conference, Snow Bird, Utah, </booktitle> <pages> pages 279-288, </pages> <month> Mar </month> <year> 1992. </year>
Reference: [2] <author> A. Amir and G. Benson. </author> <title> Two-dimensional periodicity and its application. </title> <booktitle> Proc. of 3rd Symposium on Discrete Algorithms, </booktitle> <address> Orlando, FL, </address> <pages> pages 440-452, </pages> <month> Jan </month> <year> 1992. </year>
Reference: [3] <author> A. Amir, G. Benson, and M. Farach. Witness-free dueling: </author> <title> The perfect crime! (or how to match in a compressed two-dimensional array). </title> <note> submitted for publication, </note> <year> 1993. </year>
Reference: [4] <author> A. Amir, G.M. Landau, and U. Vishkin. </author> <title> Efficient pattern matching with scaling. </title> <journal> Journal of Algorithms, </journal> <volume> 13(1) </volume> <pages> 2-32, </pages> <year> 1992. </year>
Reference: [5] <author> M. Dietzfelbinger, A. Karlin, K. Mehlhorn, F. Meyer auf der Heide, H. Rohnert, and R. Tarjan. </author> <title> Dynamic perfect hashing: Upper and lower bounds. </title> <booktitle> In Proc. of the 20th Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> pages 524-531, </pages> <month> October </month> <year> 1988. </year>
Reference: [6] <author> T. Eilam-Tsoreff and U. Vishkin. </author> <title> Matching patterns in a string subject to multilinear trasformations. Pro-cedings of the International Workshop on Sequences, Combinatorics, Compression, Security and Transmission, </title> <type> Salerno, </type> <institution> Italy, </institution> <month> June </month> <year> 1988. </year>
Reference: [7] <author> M. Gu, M. Farach, and R. Beigel. </author> <title> An efficient algorithm for dynamic text indexing. </title> <type> Personal communication, </type> <note> submitted for publication. </note>
Reference: [8] <author> D.E. Knuth, J.H. Morris, and V.R. Pratt. </author> <title> Fast pattern matching in strings. </title> <journal> SIAM J. Comp., </journal> <volume> 6 </volume> <pages> 323-350, </pages> <year> 1977. </year>
Reference: [9] <author> E. M. McCreight. </author> <title> A space-economical suffix tree construction algorithm. </title> <journal> Journal of the ACM, </journal> <volume> 23 </volume> <pages> 262-272, </pages> <year> 1976. </year>
Reference: [10] <author> P. Weiner. </author> <title> Linear pattern matching algorithm. </title> <booktitle> Proc. 14 IEEE Symposium on Switching and Automata Theory, </booktitle> <pages> pages 1-11, </pages> <year> 1973. </year>
Reference: [11] <author> T. A. Welch. </author> <title> A technique for high-performance data compression. </title> <journal> IEEE Computer, </journal> <volume> 17 </volume> <pages> 8-19, </pages> <year> 1984. </year>

References-found: 11

