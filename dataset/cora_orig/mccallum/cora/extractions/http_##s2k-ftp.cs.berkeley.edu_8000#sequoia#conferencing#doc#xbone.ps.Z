URL: http://s2k-ftp.cs.berkeley.edu:8000/sequoia/conferencing/doc/xbone.ps.Z
Refering-URL: http://s2k-ftp.cs.berkeley.edu:8000/sequoia/conferencing/doc/
Root-URL: http://www.cs.berkeley.edu
Title: Proposed Mbone/Xunet Extensions Revision 1.7.3  
Author: John Lockwood 
Date: August 27, 1993  
Address: Murray Hill, NJ  
Affiliation: Xunet Project AT&T Bell Labs  
Abstract-found: 0
Intro-found: 0
Reference: [1] <author> A. G. Fraser, C. R. Kalmanek, A. E. Kaplan, W. T. Marshall, and R. C. Restrick, </author> <title> "Xunet 2: A nationwide testbed in high-speed networking," </title> <booktitle> in INFOCOM, </booktitle> <pages> pp. 582-589, </pages> <year> 1992. </year>
Reference-contexts: 1 Xunet Xunet is an experimental Asynchronous Transfer Mode (ATM) network that connects AT&T Bells Labs, University of Illinois, University of California at Berkeley, University of Wisconsin, Rutgers University, Lawrence Livermore National Laboratories and Sandia National Laboratory using a combination of DS3 and optical links, as shown in Figure 1.1 <ref> [1] </ref>. Routers, consisting of a Silicon Graphics 4D/310S with a custom Hobbit processor-based ATM interface, provide IP connectivity between the Xunet routers [2]. 1 2 The Mbone The Multicast Backbone (Mbone) is a virtual network that runs on top of the Internet. <p> char *argv []; - int rxfd, txfd; char rxaddrstr [16], txaddrstr [16]; u_long rxmaddr, txmaddr; int rxport, txport; int txttl; char buf [MAXBUFSIZE]; int buflen; struct sockaddr from; int fromlen; int i; printf ("%d"n",argc); if (argc!=5) - printf ("Usage: %s RXaddr RXport TXaddr TXport"n",argv [0]); exit (-1); - strcpy (rxaddrstr,argv <ref> [1] </ref>); rxmaddr=inet_addr (rxaddrstr); sscanf (argv [2],"%d",&rxport); strcpy (txaddrstr,argv [3]); txmaddr=inet_addr (txaddrstr); sscanf (argv [4],"%d",&txport); printf ("RX: %s %d; TX: %s %d"n",rxaddrstr,rxport,txaddrstr,txport); txttl=200; UDP_RX_connect (rxmaddr,rxport,&rxfd); UDP_TX_connect (txmaddr,&txfd,txttl); for (i=0;; ) - buflen = UDP_RX (rxfd, buf, MAXBUFSIZE, &from, &fromlen); /* UDP_RX_printsource (&from, &fromlen); */ UDP_TX (txfd, txmaddr, txport, buf, buflen); - UDP_RX_close <p> mrouted, useful after changing mrouted.conf"n"); printf (" mstatus: Print routing tables (mrouted.dump)"n"); printf (" medit: Set permissions on /etc/mrouted.conf to a+rw"n"); printf (" mnoedit: Write protect /etc/mrouted.conf"n"); printf ("mgetconf: Print the configuration file (mrouted.conf)"n"); printf ("mputconf: Write a new configuration file from stdin"n"n"); exit (0); -; hp = gethostbyname (argv <ref> [1] </ref>); bcopy (hp-&gt;h_addr, &(server.sin_addr.s_addr), hp-&gt;h_length); server.sin_port = htons (PORT); if (connect (sock, &server, sizeof (server)) &lt; 0) - close (sock); perror ("conn sock "); exit (0); - strcpy (mc.cookie,COOKIE); strcpy (mc.command,argv [2]); bcopy (&mc,buffer,sizeof (mc)); if (send (sock, buffer, sizeof (mc), 0) &lt; 0) perror ("writing"); /* Read from stdin, write <p> buffer, sizeof (mc), 0) &lt; 0) perror ("writing"); /* Read from stdin, write to remote /etc/mrouted.conf */ if (strcmp (argv [2],"mputconf")==0) - while (( len = read (0, buffer, BUFLEN)) &gt; 0) send (sock, buffer, len, 0); buffer [0]=0x4; send (sock, buffer ,1,0); - printf ("Return message from %s: "n",argv <ref> [1] </ref>); len=1; buffer [0]=0x1; while (buffer [len-1] != 0x4) - len = recv (sock, buffer, BUFLEN, 0); write (1, buffer, len); - write (1,""n",1); close (sock); 31 - B.3 Common Header: xumserv.h /*****************************************************/ /* xumserv.h: */ /* */ /* common header for xumrex.c and xumerv.h */ /* */ /* John lockwood
Reference: [2] <author> A. Berenbaum, J. Dixon, A. Iyengar, and S. Keshav, </author> <title> "A flexible ATM-host interface for Xunet II," </title> <journal> IEEE Network, </journal> <pages> pp. 18-23, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: Routers, consisting of a Silicon Graphics 4D/310S with a custom Hobbit processor-based ATM interface, provide IP connectivity between the Xunet routers <ref> [2] </ref>. 1 2 The Mbone The Multicast Backbone (Mbone) is a virtual network that runs on top of the Internet. The Mbone is implemented by multicast routers that are scattered throughout the Internet. <p> configuration file (mrouted.conf)"n"); printf ("mputconf: Write a new configuration file from stdin"n"n"); exit (0); -; hp = gethostbyname (argv [1]); bcopy (hp-&gt;h_addr, &(server.sin_addr.s_addr), hp-&gt;h_length); server.sin_port = htons (PORT); if (connect (sock, &server, sizeof (server)) &lt; 0) - close (sock); perror ("conn sock "); exit (0); - strcpy (mc.cookie,COOKIE); strcpy (mc.command,argv <ref> [2] </ref>); bcopy (&mc,buffer,sizeof (mc)); if (send (sock, buffer, sizeof (mc), 0) &lt; 0) perror ("writing"); /* Read from stdin, write to remote /etc/mrouted.conf */ if (strcmp (argv [2],"mputconf")==0) - while (( len = read (0, buffer, BUFLEN)) &gt; 0) send (sock, buffer, len, 0); buffer [0]=0x4; send (sock, buffer ,1,0); -
Reference: [3] <author> S. Casner and S. Deering, </author> <title> "First IETF internet audiocast," </title> <journal> ACM Sigcomm Computer Communications Review, </journal> <volume> vol. 22, </volume> <month> July </month> <year> 1992. </year>
Reference-contexts: The Mbone is implemented by multicast routers that are scattered throughout the Internet. Using the Mbone, it has become possible to provide audio and low-bandwidth video conferencing on almost all workstation platforms <ref> [3] </ref>. Most Mbone routers are actually workstations running a program called mrouted. When multicast routers are separated by unicast routers, the multicast packets are encapsulated in unicast IP packets. These "tunnels" allow the multicast packets to be routed between "multicast regions" over a standard IP network. <p> rxaddrstr [16], txaddrstr [16]; u_long rxmaddr, txmaddr; int rxport, txport; int txttl; char buf [MAXBUFSIZE]; int buflen; struct sockaddr from; int fromlen; int i; printf ("%d"n",argc); if (argc!=5) - printf ("Usage: %s RXaddr RXport TXaddr TXport"n",argv [0]); exit (-1); - strcpy (rxaddrstr,argv [1]); rxmaddr=inet_addr (rxaddrstr); sscanf (argv [2],"%d",&rxport); strcpy (txaddrstr,argv <ref> [3] </ref>); txmaddr=inet_addr (txaddrstr); sscanf (argv [4],"%d",&txport); printf ("RX: %s %d; TX: %s %d"n",rxaddrstr,rxport,txaddrstr,txport); txttl=200; UDP_RX_connect (rxmaddr,rxport,&rxfd); UDP_TX_connect (txmaddr,&txfd,txttl); for (i=0;; ) - buflen = UDP_RX (rxfd, buf, MAXBUFSIZE, &from, &fromlen); /* UDP_RX_printsource (&from, &fromlen); */ UDP_TX (txfd, txmaddr, txport, buf, buflen); - UDP_RX_close (rxfd, rxmaddr); UDP_TX_close (txfd); - B Remote mrouted
Reference: [4] <author> S. Casner, </author> <note> "mbone FAQ." Anonymous ftp from nic.sura.net in /pub/mbone, </note> <month> May </month> <year> 1993. </year>
Reference-contexts: Most primary Mbone metrics are assigned a value of one. Backup links typically have a metric of two or three. <ref> [4] </ref>. 2.4 Thresholds Each link is assigned a static threshold value. If the packet's time-to-live is less than the threshold, the packet is not forwarded. Thesholds are used to confine traffic within a local region. By placing large thresholds on the links surrounding a multicast region, traffic can be contained. <p> If the packet's time-to-live is less than the threshold, the packet is not forwarded. Thesholds are used to confine traffic within a local region. By placing large thresholds on the links surrounding a multicast region, traffic can be contained. Typical threshold assignments are listed below: <ref> [4] </ref>. 1 Local machines 32 Separate sites 64 Separate regions 128 Separate continents 2.5 Initial time-to-live (ttl) High bandwidth traffic is assigned an initial ttl value that would prevent it from crossing boundaries. Applications choose their initial ttl by a setsockopt just after opening the socket. <p> Applications choose their initial ttl by a setsockopt just after opening the socket. Each packet's ttl field is decremented by one for each hop. When the metric reaches zero, the packet is quietly discarded. Typical initial ttl settings are listed below <ref> [4] </ref>: 31 High bandwidth local traffic (&gt; 200 kbps) 63 Video/Voice conference 127 64kbps audio 255 Low bandwidth voice/wb traffic 2.6 Your Responsibilites: A warning from Van Users of the Mbone must control themselves.
Reference: [5] <author> S. Deering, </author> <title> "Host extensions for IP multicasting." </title> <type> RFC 1112, </type> <month> Aug. </month> <year> 1989. </year>
Reference-contexts: An example configuration is illustrated in Figure 3.1. Here, the multicast router periodically sends a query IGMP message on the Ethernet. Each of the hosts responds with a report IGMP message, minimizing the traffic by the algorithm described in Section 3.3 <ref> [5] </ref>. 3.1 Sending datagrams A multicast packet is transmitted in much the same way as that of a unicast IP packet. New setsockopt's have been provided to allow the application to specify the initial ttl as well as the outgoing network interface.
Reference: [6] <author> S. Deering and D. Cheriton, </author> <title> "Multicast routing in datagram internetworks and extended LANs," </title> <journal> ACM Transactions on Computer Systems, </journal> <pages> pp. 85-110, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: This is a user-level program that uses setsockopt downcalls to set the routing tables, which are maintained in the kernel. Mbone routing is based on the Dalal and Metcalfe reverse-path broadcast Distance Vector Multicast Routing Protocol (DVMRP) algorithm <ref> [6] </ref>. Multicast packets are routed by their source address and the interface from which the packet arrived. Presently, this program uses broadcast trees to distribute multicast traffic throughout the Mbone.
Reference: [7] <author> S. Deering, "CERFnet seminar: MBONE|the mulicast backbone," </author> <year> 1993. </year>
Reference-contexts: Multicast packets are routed by their source address and the interface from which the packet arrived. Presently, this program uses broadcast trees to distribute multicast traffic throughout the Mbone. Leaves that are not participating in a multicast session are truncated <ref> [7] </ref>, which helps to reduce the traffic seen by the attached hosts. Thresholds and time-to-live values also help reduce excessive multicast traffic.
Reference: [8] <author> S. Deering, "mrouted man page." </author> <note> Anonymous ftp as ipmulti-sunos41x.tar, </note> <month> July </month> <year> 1993. </year>
Reference-contexts: Thresholds and time-to-live values also help reduce excessive multicast traffic. To give an example of some of the state information maintained in each router, the text displayed in Sections 4.1 and 4.2 was extracted from /usr/tmp/mrouted.dump on peters.research.att.com (July 2, 1993), just after issuing a killall -USR1 mrouted <ref> [8] </ref>. 4.1 Virtual Interface Table mrouted must maintain information about each of its multicast interfaces. A virtual interface can be either a physical multicast interface or a tunnel to another mrouted.
Reference: [9] <author> V. Jacobson, </author> <note> "Session directory (sd) README." Anonymous ftp from ee.lbl.gov, </note> <month> Mar. </month> <year> 1993. </year>
Reference-contexts: All software is available via anonymous ftp on various sites. Source code is available as noted. 5.1.1 Session Directory: sd Session Directory is like a "TV Guide". It is the mechanism used to coordinate multicast audio/video/whiteboard conferences <ref> [9] </ref>. sd is used on a voluntary basis.
Reference: [10] <author> V. Jacobson and S. McCanne, </author> <title> "Visual audio tool (vat) man page." </title> <note> Anonymous ftp from ee.lbl.gov, </note> <month> Feb. </month> <year> 1992. </year>
Reference-contexts: The binaries for sd are available at ftp.ee.lbl.gov. 5.1.2 Visual Audio Tool: vat vat provides audio conferencing on a network <ref> [10] </ref>.
Reference: [11] <author> H. Schulzrinne, </author> <title> "Voice communication across the internet: A network voice terminal." </title> <note> Anonymous ftp from gaia.cs.umass.edu as /pub/nevot/nevot.ps.Z, </note> <month> Aug. </month> <year> 1992. </year>
Reference-contexts: Unfortunately, the source code for vat has not yet been released. Binaries are available at ftp.ee.lbl.gov. 5.1.3 Network Voice Terminal: nevot nevot is another tool for audio conferencing <ref> [11] </ref>. It supports the vat audio packets and provides additional features. The source code for nevot is available at gaia.cs.umass.edu in /pub/nevot.
Reference: [12] <author> R. Frederick, </author> <title> "Network video (nv) man page." </title> <note> Anonymous ftp from parcftp.xerox.com in /pub/net-research, </note> <month> Mar. </month> <year> 1993. </year>
Reference-contexts: The source code for nevot is available at gaia.cs.umass.edu in /pub/nevot. With a modular design, trace and statistics tools, and available source code, nevot makes for a good research tool. 5.1.4 Network Video: nv nv is a tool that can send compressed video images across the network <ref> [12] </ref>. A dial is provided to adjust the maximum transmit bandwidth|a mechanism for a crude type of network admissions control. Audio/Video conferences typically run nv simultaneously with nevot or vat. The bandwidth control allows nv to co-exist with audio tools.
Reference: [13] <author> W. Dang, </author> <title> "Image multicaster client (imm) man page." </title> <note> Anonymous ftp as /paccom/imm/imm.tar from ftp.hawaii.edu, </note> <month> Aug. </month> <year> 1993. </year>
Reference-contexts: Audio/Video conferences typically run nv simultaneously with nevot or vat. The bandwidth control allows nv to co-exist with audio tools. Source code is available for nv from parcftp.parc.xerox.com in /pub/net-research. 5.1.5 Image Multicaster Client: imm This program recives multicasted JPEG images <ref> [13] </ref>. Typically, these images are displayed in the root window. This program is usually invoked from sd.
Reference: [14] <author> D. R. Boggs, </author> <title> "Internet broadcasting." </title> <type> Ph.D Thesis, </type> <institution> Electrical Engineering Dept., Stan-ford University, </institution> <month> Jan. </month> <year> 1982. </year>
Reference-contexts: One could imagine that a query would begin with a broadcast with a short time-to-live. If no database responds 9 with an answer, the time-to-live field is increased, and the scope of the query is broadened. This process continues until a query can be resolved <ref> [14] </ref>. 10 6 Suggested Xunet Multicast Channels To standardize a common meeting place for Xunet discussion, I suggest the following multi-cast addresses be used for internal Xunet video and audio conferences. Applications can be invoked using sd as well as from the command line.
Reference: [15] <author> S. Deering, </author> <title> "IP multicast extensions for 4.3BSD UNIX and related systems." </title> <note> Anonymous ftp from gregorio.stanford.edu as vmtp-ip/ipmulticast.README, </note> <month> June </month> <year> 1989. </year> <month> 34 </month>
Reference-contexts: The programs described in this section allow testing and debugging the multicast functionality at each site. 9.1 General Multicast Debugging Tools The following tools have been created or modified to include multicast debugging operations <ref> [15] </ref>. These tools are available from gregorio.stanford.edu in the vmtp-ip directory. On a sun, These tools would replace your existing program of the same name.
References-found: 15

