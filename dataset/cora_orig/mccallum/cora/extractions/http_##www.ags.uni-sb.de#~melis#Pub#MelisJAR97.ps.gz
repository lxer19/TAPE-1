URL: http://www.ags.uni-sb.de/~melis/Pub/MelisJAR97.ps.gz
Refering-URL: http://jswww.cs.uni-sb.de/~melis/
Root-URL: 
Email: email: melis@cs.uni-sb.de  
Title: The Heine-Borel Challenge Problem In Honor of Woody Bledsoe  
Author: Erica Melis 
Address: D-66041 Saarbrucken, Germany,  
Affiliation: Universitat des Saarlandes, Fachbereich Informatik,  
Abstract: Woody Bledsoe's last challenge problem is the analogical transfer of the Heine-Borel theorem for real intervals to the two-dimensional case. This could not be solved by the up to then known techniques of analogical theorem proving. The Heine-Borel theorem is a widely known result in mathematics. It is usually stated in the field of real numbers R 1 and similar versions are also true in R 2 , in topology, and in metric spaces. This article shows how analogy-driven proof plan construction is applicable to this genuinely mathematical problem. Our goal here was to use a source proof plan of HB1 (the Heine-Borel theorem in R 1 ) as a guide to automatically produce a proof plan of HB2 (the Heine-Borel theorem in R 2 ). We were able to accomplish our goal by generating the target proof plan of HB2 by reformulation and analogical replay. 1 keywords: analogy, challenge problems
Abstract-found: 1
Intro-found: 1
Reference: [BBH72] <author> W. W. Bledsoe, Robert S. Boyer, and W. H. Henneman. </author> <title> Computer proofs of limit theorems. </title> <journal> Artificial Intelligence, </journal> <volume> 3(1) </volume> <pages> 27-60, </pages> <year> 1972. </year>
Reference: [Ble77] <author> W. Bledsoe. </author> <title> Non-resolution theorem proving. </title> <journal> Artificial Intelligence, </journal> <volume> 9 </volume> <pages> 1-35, </pages> <year> 1977. </year>
Reference: [Ble86] <author> W.W. Bledsoe. </author> <title> The use of analogy in automatic proof discovery. </title> <institution> Tech.Rep. AI-158-86, Microelectronics and Computer Technology Corporation, Austin, TX, </institution> <year> 1986. </year>
Reference: [Ble90] <author> W. Bledsoe. </author> <title> Challenge problems in elementary analysis. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 6 </volume> <pages> 341-359, </pages> <year> 1990. </year>
Reference: [Ble94] <author> W.W. Bledsoe. </author> <title> Heine-Borel theorem analogy example. </title> <type> Technical Report Memo ATP 124, </type> <institution> University of Texas Computer Science Dept, Austin, TX, </institution> <year> 1994. </year> <month> 24 </month>
Reference-contexts: In the first version of a proof plan for HB1, Bledsoe had used the formula (ba) to represent the length of the closed interval [a; b]. In <ref> [Ble94] </ref> Woody Bledsoe suggested a formalization of the HB1 lemmata with length [a; b] instead, in order to make the analogical transfer simpler.
Reference: [Ble95a] <author> W.W. Bledsoe. </author> <title> A precondition prover for analogy. </title> <journal> BioSystems, </journal> <volume> 34 </volume> <pages> 225-247, </pages> <year> 1995. </year>
Reference-contexts: This appears to be a very promising way to employ semantic information in the analogy process. Techniques for automatically patching the target methods are required such as abduction or "debugging" <ref> [Ble95a] </ref> which automatically provide additional preconditions in order to verify target methods. A more elaborated modification could use abduction. <p> He first suggested that we collaborate on a non-trivial analogy problem, in which a well known mathematical theorem is involved. He recommended the HB1, HB2 pair. He proposed a proof plan and lemma list of HB1 <ref> [Ble95a] </ref>. He checked the validity of the plans for HB1 and HB2 by "running" them on a prover which calls OTTER as a subroutine. Personally, Woody encouraged me to continue my research on analogy-driven proof plan construction.
Reference: [Ble95b] <author> W.W. Bledsoe. </author> <title> Abduction rules. </title> <type> Technical Report Memo ATP 126, </type> <institution> University of Texas Computer Science Dept, Austin, TX, </institution> <month> August </month> <year> 1995. </year>
Reference-contexts: abduction performed on line5a of method2' which cannot be verified replaces L8 by L8'= 8v; w; x; y (0 v^0 x^0 w^0 y ! (f (v; w) 2 IN^x=2 f (v;w) v^y=2 f (v;w) w)) as a new precondition for the proof of line5a, where f is a Skolem function <ref> [Ble95b] </ref>. L8' becomes an open subgoal which is eventually to be proved. Such a procedure may yield subgoals which are easier to prove and may avoid restructuring.
Reference: [BM88] <author> R.S. Boyer and J.S. Moore. </author> <title> Integrating decision procedures into heuristic theorem provers: A case study of linear arithmetic. </title> <journal> Machine Intelligence, </journal> <volume> 11 </volume> <pages> 83-124, </pages> <year> 1988. </year>
Reference: [Bun88] <author> A. Bundy. </author> <title> The use of explicit plans to guide inductive proofs. </title> <editor> In E. Lusk and R. Overbeek, editors, </editor> <booktitle> Proc. 9th International Conference on Automated Deduction (CADE-9), volume 310 of Lecture Notes in Computer Science, </booktitle> <pages> pages 111-120, </pages> <address> Argonne, 1988. </address> <publisher> Springer. </publisher>
Reference: [BvHS91] <author> A. Bundy, F. van Harmelen, J. Hesketh, and A. Smaill. </author> <title> Experiments with proof plans for induction. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 7 </volume> <pages> 303-324, </pages> <year> 1991. </year>
Reference: [Car86] <author> J.G. Carbonell. </author> <title> Derivational analogy: A theory of reconstructive problem solving and expertise acquisition. In R.S. </title> <editor> Michalsky, J.G. Carbonell, and T.M. Mitchell, editors, </editor> <booktitle> Machine Learning: An Artificial Intelligence Approach, </booktitle> <pages> pages 371-392. </pages> <publisher> Morgan Kaufmann Publ., </publisher> <address> Los Altos, </address> <year> 1986. </year>
Reference: [CLD + 97] <author> C.Benzmueller, L.Cheikhrouhou, D.Fehrer, A.Fiedler, X.Huang, M.Kerber, M.Kohlhase, K.Konrad, A.Meier, E. Melis, W.Schaarschmidt, J.Siekmann, and V.Sorge. </author> <title> OMEGA: Towards a mathematical assistant. </title> <booktitle> In Proc. 14th International Conference on Automated Deduction (CADE), </booktitle> <pages> pages -, Townsville, </pages> <address> 1997. </address> <publisher> Springer. </publisher>
Reference: [Cur95] <author> R. Curien. </author> <title> Outils pour la Preuve par Analogie. </title> <type> PhD thesis, </type> <institution> Univer-site Henri Poincare - Nancy, </institution> <year> 1995. </year>
Reference: [Deu71] <author> P. Deussen. </author> <title> Halbgruppen und Automaten, </title> <booktitle> volume 99 of Heidelberger Taschenbucher. </booktitle> <publisher> Springer, </publisher> <year> 1971. </year>
Reference: [GMW79] <author> M. Gordon, R. Milner, </author> <title> and C.P. Wadsworth. Edinburgh LCF: A Mechanized Logic of Computation. </title> <booktitle> Lecture Notes in Computer Science 78. </booktitle> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1979. </year>
Reference: [Had45] <author> J. </author> <title> Hadamard. The Psychology of Invention in the Mathematical Field. </title> <publisher> Princeton Univ. Press, Princeton, </publisher> <year> 1945. </year>
Reference: [HKKR94] <author> X. Huang, M. Kerber, M. Kohlhase, and J. Richts. </author> <title> Methods the basic units for planning and verifying proofs. </title> <booktitle> In Proceedings of Jahrestagung fur Kunstliche Intelligenz KI-94, Saarbrucken, 1994. </booktitle> <publisher> Springer. </publisher> <pages> 25 </pages>
Reference: [Kli71] <author> R.E. Kling. </author> <title> A paradigm for reasoning by analogy. </title> <journal> Artificial Intelli--gence, </journal> <volume> 2 </volume> <pages> 147-178, </pages> <year> 1971. </year>
Reference: [KW94] <author> Th. Kolbe and Ch. Walther. </author> <title> Reusing proofs. </title> <booktitle> In Proceedings of 11th European Conference on Artificial Intelligence (ECAI-94), </booktitle> <address> Amsterdam, </address> <year> 1994. </year> <note> http://kirmes.inferenzsysteme.informatik.th-darmstadt.de/ kolbe/. </note>
Reference: [KW95] <author> Th. Kolbe and Ch. Walther. </author> <title> Patching proofs for reuse. </title> <editor> In N. Lavrac and S. Wrobel, editors, </editor> <booktitle> Proceedings of the 8th European Conference on Machine Learning 1995, </booktitle> <address> Kreta, </address> <year> 1995. </year>
Reference-contexts: The presented analogy method was developed in 17 In <ref> [KW95] </ref> a reformulation very similar to Add-Argument is used 23 dependently from the Heine-Borel example. It works at the proof plan level and includes reformulations.
Reference: [McC90] <author> W.W. McCune. </author> <title> Otter 2.0 users guide. </title> <type> Technical Report ANL-90/9, </type> <institution> Argonne National Laboratory, Maths and CS Division, Argonne, Illinois, </institution> <year> 1990. </year>
Reference: [Mel93a] <author> E. Melis. </author> <title> Analogies between proofs a case study. </title> <institution> SEKI-Report SR-93-12, University of Saarbrucken, Saarbrucken, </institution> <year> 1993. </year> <note> available from http://jswww.cs.uni-sb.de/pub/seki/index.html. </note>
Reference: [Mel93b] <author> E. Melis. </author> <title> Change of representation in theorem proving by analogy. </title> <institution> SEKI-Report SR-93-07, University of Saarbrucken, Saarbrucken, </institution> <year> 1993. </year> <note> available from http://jswww.cs.uni-sb.de/pub/seki/index.html. </note>
Reference: [Mel95a] <author> E. Melis. </author> <title> Analogy in CLAM. </title> <type> Technical Report DAI Research Paper No 766, </type> <institution> University of Edinburgh, AI Dept, Dept. of Artificial Intelligence, Edinburgh, </institution> <year> 1995. </year> <note> available from http://jswww.cs.uni-sb.de/~melis/. </note>
Reference-contexts: As the modifications of method-111' show, this can be unhealthy for reformulations as well. However, a more abstract method representation is a matter of the proof planner and its methods rather than of the analogy. As shown with the implementation of analogy-driven proof plan construction in CL A M <ref> [Mel95a] </ref>, reformulations and analogical replay work well with methods that do not rely on one particular proof schema. To repeat, the presented version of the HB1 problem and its proof were taken from Bledsoe's challenge. The described analogical transfer of the HB1 plan has been accomplished automatically by OMEGA/Analogy. <p> The first targets more robustness of the analogical transfer and generating whole proofs that include the proofs of the suggested lemmata. This is, at least partly, a task for proof planning. A second front is the investigation of frequent reformulations, 17 where we have gained additional experience <ref> [Mel95a] </ref> in the proof planner CL A M that mainly works for proofs by induction. Meta-planning with meta-methods that represent reformulations will be investigated to automate the choice of sequences of reformulations. Another front of future research is to include more semantic information.
Reference: [Mel95b] <author> E. Melis. </author> <title> A model of analogy-driven proof-plan construction. </title> <booktitle> In Proceedings of the 14th International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 182-189, </pages> <address> Montreal, </address> <year> 1995. </year>
Reference: [Mun81] <author> J.C. Munyer. </author> <title> Analogy as a Means of Discovery in Problem Solving and Learning. </title> <type> PhD thesis, </type> <institution> University of California, Santa Cruz, </institution> <year> 1981. </year>
Reference: [MV94] <author> E. Melis and M. Veloso. </author> <title> Analogy makes proofs feasible. </title> <editor> In D. Aha, editor, </editor> <booktitle> AAAI-workshop on Case-Based Reasoning, </booktitle> <pages> pages 13-17, </pages> <address> Seattle, </address> <year> 1994. </year>
Reference: [Owe90] <author> S. Owen. </author> <title> Analogy for Automated Reasoning. </title> <publisher> Academic Press, </publisher> <year> 1990. </year>
Reference: [Pol45] <author> G. Polya. </author> <title> How to Solve it. </title> <publisher> Princeton University Press, Princeton, </publisher> <year> 1945. </year>
Reference: [Pol54] <author> G. Polya. </author> <title> Mathematics and Plausible Reasoning. </title> <publisher> Princeton University Press, </publisher> <address> NJ, </address> <year> 1954. </year> <month> 26 </month>
Reference: [Seh95] <author> A.C. Sehn. </author> <title> DECLAME - eine deklarative Sprache zur Reprasentation von Methoden. </title> <type> Master's thesis, </type> <institution> Universitat des Saarlandes, </institution> <year> 1995. </year> <note> published as SEKI Working Paper SWP-95-02. </note>
Reference: [vdW64] <editor> B.L. van der Waerden. Wie der Beweis der Vermutung von Baudet gefunden wurde. Abh.Math.Sem.Univ.Hamburg, </editor> <volume> 28, </volume> <year> 1964. </year>
Reference: [Vel94] <author> M.M. Veloso. </author> <title> Flexible strategy learning: Analogical replay of problem solving episodes. </title> <booktitle> In Proc. of the twelfth National Conference on Artificial Intelligence 1994, </booktitle> <address> Seattle, WA, </address> <year> 1994. </year>
Reference: [Wan91] <author> R. Wang. </author> <title> The use of analogy in the PC system. </title> <institution> CS Department Memo, Univerity of Texas at Austin, </institution> <month> May </month> <year> 1991. </year> <month> 27 </month>
References-found: 34

