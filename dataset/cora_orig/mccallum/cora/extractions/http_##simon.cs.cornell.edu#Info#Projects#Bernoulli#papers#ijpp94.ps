URL: http://simon.cs.cornell.edu/Info/Projects/Bernoulli/papers/ijpp94.ps
Refering-URL: 
Root-URL: 
Title: A Singular Loop Transformation Framework Based on Non-singular Matrices  
Author: Wei Li Keshav Pingali 
Address: Ithaca, New York 14853  
Affiliation: Department of Computer Science Cornell University  
Abstract: In this paper, we discuss a loop transformation framework that is based on integer non-singular matrices. The transformations included in this framework are called fl-transformations and include permutation, skewing and reversal, as well as a transformation called loop scaling. This framework is more general than existing ones; however, it is also more difficult to generate code in our framework. This paper shows how integer lattice theory can be used to generate efficient code. An added advantage of our framework over existing ones is that there is a simple completion algorithm which, given a partial transformation matrix, produces a full transformation matrix that satisfies all dependences. This completion procedure has applications in parallelization and in the generation of code for NUMA machines. 1 This work was supported by the Cornell Theory Center, NSF Presidential Young Investigator award 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Allen and K. Kennedy. </author> <title> Automatic translation of FORTRAN programs to vector form. </title> <journal> ACM Transactions on Progamming Languages and Systems, </journal> <volume> 9(4) </volume> <pages> 491-542, </pages> <month> Octo-ber </month> <year> 1987. </year>
Reference: [2] <author> C. Ancourt and F. Irigoin. </author> <title> Scanning polyhedra with DO loops. </title> <booktitle> In Third ACM Symposium on Principles and Practice of Parallel Programming, </booktitle> <pages> pages 39-50, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: In fact, we show that it suffices to use DO-loops with constant step sizes, and that these step sizes are the integers in the diagonal of the Hermite form. For the working example, H has the diagonal <ref> [2; 3] </ref>, which means that the loop step is 2 for the outer loop, and 3 for the inner loop. More generally, we have the following theorem. Theorem 4.3 The positive integers on the diagonal of the Hermite form are the gaps in each dimension.
Reference: [3] <author> U. Banerjee. </author> <title> Unimodular transformations of double loops. </title> <booktitle> In Proceedings of the Workshop on Advances in Languages and Compilers for Parallel Processing, </booktitle> <pages> pages 192-219, </pages> <month> August </month> <year> 1990. </year> <month> 23 </month>
Reference-contexts: In fact, we show that it suffices to use DO-loops with constant step sizes, and that these step sizes are the integers in the diagonal of the Hermite form. For the working example, H has the diagonal <ref> [2; 3] </ref>, which means that the loop step is 2 for the outer loop, and 3 for the inner loop. More generally, we have the following theorem. Theorem 4.3 The positive integers on the diagonal of the Hermite form are the gaps in each dimension.
Reference: [4] <author> M. Barnett and C. Lengauer. </author> <title> Loop parallelization and unimodularity. </title> <type> Technical Report ECS-LFCS-92-197, </type> <institution> University of Edinburgh, </institution> <year> 1992. </year>
Reference: [5] <author> J. W. S. Cassels. </author> <title> An introduction to the geometry of numbers. </title> <publisher> Berlin, Springer, </publisher> <year> 1959. </year>
Reference: [6] <author> G. B. Dantzig and B. C. Eaves. </author> <title> Fourier-motzkin elimination and its dual. </title> <journal> Journal of Combinatorial Theory(A), </journal> <volume> 14 </volume> <pages> 288-297, </pages> <year> 1973. </year>
Reference: [7] <author> M. Dowling. </author> <title> Optimal code parallelization using unimodular transformations. </title> <journal> Parallel Computing, </journal> <volume> 16 </volume> <pages> 157-171, </pages> <year> 1990. </year>
Reference: [8] <author> K. Gallivan, W. Jalby, and D. Gannon. </author> <title> On the problem of optimizing data transfers for complex memory systems. </title> <booktitle> International Conference on Supercomputing, </booktitle> <pages> pages 238-253, </pages> <year> 1988. </year>
Reference: [9] <author> G. H. Golub and C. F. Van Loan. </author> <title> Matrix Computations. </title> <publisher> Johns Hopkins University Press, </publisher> <year> 1989. </year>
Reference: [10] <author> L. Lamport. </author> <title> The parallel execution of do loops. </title> <journal> Communications of the ACM, </journal> <pages> pages 83-93, </pages> <month> February </month> <year> 1974. </year>
Reference: [11] <author> W. Li and K. Pingali. </author> <title> Access Normalization: Loop restructuring for NUMA compilers. </title> <booktitle> In Proc. 5th International Conference on Architectural Support for Programming Languages and Operating Systems, </booktitle> <month> October </month> <year> 1992. </year>
Reference: [12] <author> L. Lu. </author> <title> A unified framework for systematic loop transformations. </title> <booktitle> In 3rd ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming, </booktitle> <pages> pages 28-38, </pages> <month> April </month> <year> 1991. </year>
Reference: [13] <author> D. Padua and M. Wolfe. </author> <title> Advanced compiler optimizations for supercomputers. </title> <journal> Communications of ACM, </journal> <volume> 29(12) </volume> <pages> 1184-1201, </pages> <month> December </month> <year> 1986. </year>
Reference: [14] <author> J. Ramanujam. </author> <title> Non-unimodular transformations of nested loops. </title> <booktitle> In Proc. of Supercomputing, </booktitle> <year> 1992. </year> <month> 24 </month>
Reference: [15] <author> V. Sarkar and R. Thekkath. </author> <title> A general framework for iteration-reordering loop trans-formations. </title> <booktitle> In Proc. ACM SIGPLAN 92 Conference on Programming Language Design and Implementation, </booktitle> <year> 1992. </year>
Reference: [16] <author> A. Schrijver. </author> <title> Theory of Linear and Integer Programming. </title> <publisher> John Wiley & Sons, </publisher> <year> 1986. </year>
Reference: [17] <author> M. Wolf and M. Lam. </author> <title> A data locality optimizing algorithm. </title> <booktitle> In Proc. ACM SIGPLAN 91 Conference on Programming Language Design and Implementation, </booktitle> <pages> pages 30-44, </pages> <month> June </month> <year> 1991. </year>
Reference: [18] <author> M. Wolf and M. Lam. </author> <title> A loop transformation theory and an algorithm to maximize parallelism. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <month> October </month> <year> 1991. </year>

References-found: 18

