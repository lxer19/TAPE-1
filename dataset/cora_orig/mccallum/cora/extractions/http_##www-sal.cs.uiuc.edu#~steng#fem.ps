URL: http://www-sal.cs.uiuc.edu/~steng/fem.ps
Refering-URL: http://www-sal.cs.uiuc.edu/~steng/fem.html
Root-URL: http://www.cs.uiuc.edu
Title: GEOMETRIC SEPARATORS FOR FINITE ELEMENT MESHES  
Author: GARY L. MILLER SHANG-HUA TENG WILLIAM THURSTON and STEPHEN A. VAVASIS 
Keyword: Key words. graph separators, finite elements, mesh partitioning, domain decomposition, com putational geometry, sparse matrix computations, conformal mapping, center points  
Date: 1995 000  
Note: SIAM J. Sci. Comp. c fl1995 Society for Industrial and Applied Mathematics Vol. 0, No. 0, pp. 000-000, To appear  AMS(MOS) subject classifications. 65F50, 68Q20  
Abstract: We propose a class of graphs that would occur naturally in finite-element and finite-difference problems, and we prove a bound on separators for this class of graphs. Graphs in this class are embedded in d-dimensional space in a certain manner. For d-dimensional graphs, our separator bound is O(n (d1)=d ), which is the best possible bound. We also propose a simple randomized algorithm to find this separator in O(n) time. This separator algorithm can be used to partition the mesh among processors of a parallel computer, and can also be used for the nested dissection sparse elimination algorithm.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Alon, P. Seymour, and R. Thomas, </author> <title> A separator theorem for graphs with an excluded minor and its applications, </title> <booktitle> in Proceedings of the 22th Annual ACM Symposium on Theory of Computing, ACM, </booktitle> <year> 1990, </year> <pages> pp. 293-299. </pages>
Reference-contexts: Building on this result, Gilbert, Hutchinson, and Tarjan [15] showed that all graphs with genus bounded by g have an O ( p gn)-separator, and Alon, Seymour, and Thomas <ref> [1] </ref> proved that all graphs with an excluded minor isomorphic to the h-clique have an O (h 3=2 p n)-separator. These results are apparently not applicable to graphs arising as finite element meshes when the dimension d is higher than 2.
Reference: [2] <author> I. Babu ska and A. K. Aziz, </author> <title> On the angle condition in the finite element method, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 13 (1976), </volume> <pages> pp. 214-226. </pages>
Reference-contexts: Other shape criteria weaker than an aspect ratio bound have appeared in the literature; for instance, Babuska and Aziz <ref> [2] </ref> have shown that the 2D finite element appproximation converges to the true solution in the case that the largest angle of the mesh is bounded away from (this is a weaker condition that bounded aspect 8 g. miller, s.-h. teng, w. thurston, and s. vavasis Fig. 3.
Reference: [3] <author> M. J. Berger and S. Bokhari, </author> <title> A partitioning strategy for nonuniform problems on multiprocessors, </title> <journal> IEEE Trans. Comp., </journal> <volume> C-36 (1987), </volume> <pages> pp. 570-580. </pages>
Reference-contexts: However, the bounded radius-edge Delauney triangulation is an ff-overlap graph as argued by [26]. Another type of discretization used in solving PDE's is a finite difference mesh with adaptive refinement. See, e.g., Fig. 3, based on a paper by Berger and Bokhari <ref> [3] </ref>. In such a mesh, it is a common rule to require that no node has neighbors more than twice as far away as its closest neighbor (otherwise the extra interpolations lead to numerical inaccuracy).
Reference: [4] <author> M. Bern, D. Eppstein, and J. R. Gilbert, </author> <title> Provably good mesh generation, </title> <booktitle> in 31st Annual Symposium on Foundations of Computer Science, IEEE, </booktitle> <year> 1990, </year> <pages> pp. 231-241. </pages>
Reference-contexts: It is usually a requirement for numerical accuracy that the simplices are well-shaped <ref> [4, 11, 43] </ref>. A common shape criterion used in mesh generation [4, 6, 33, 37] is an upper bound on the aspect ratio of the simplices. This term has many definitions that all roughly equivalent [27]. <p> It is usually a requirement for numerical accuracy that the simplices are well-shaped [4, 11, 43]. A common shape criterion used in mesh generation <ref> [4, 6, 33, 37] </ref> is an upper bound on the aspect ratio of the simplices. This term has many definitions that all roughly equivalent [27].
Reference: [5] <author> J. H. Bramble, J. E. Pasciak, and A. H. Schatz, </author> <title> An iterative method for elliptic problems on regions partitioned into substructures, </title> <journal> Math. Comp., </journal> <volume> 46 (1986), </volume> <pages> pp. 361-9. </pages>
Reference-contexts: Part of this work was done while the author was visiting Xerox PARC. 1 2 g. miller, s.-h. teng, w. thurston, and s. vavasis parallel computer. An iterative method is formulated that allows each processor to operate independently. See Bramble, Pasciak and Schatz <ref> [5] </ref>. Nested dissection, due to George [13], George and Liu [14], and Lipton, Rose, and Tarjan [22] is a node ordering for sparse Gaussian elimination. Although originally a sequential algorithm, nested dissection also parallelizes well.
Reference: [6] <author> L. P. Chew, </author> <title> Guaranteed quality triangular meshes, </title> <type> Tech. Rep. 89-893, </type> <institution> Department of Computer Science, Cornell University, </institution> <year> 1989. </year>
Reference-contexts: It is usually a requirement for numerical accuracy that the simplices are well-shaped [4, 11, 43]. A common shape criterion used in mesh generation <ref> [4, 6, 33, 37] </ref> is an upper bound on the aspect ratio of the simplices. This term has many definitions that all roughly equivalent [27].
Reference: [7] <author> K. Clarkson, D. Eppstein, G. L. Miller, C. Sturtivant, and S.-H. Teng, </author> <title> Approximating center points with iterated Radon points, </title> <booktitle> in Proceedings of 9th ACM Symposium on Computational Geometry, </booktitle> <year> 1993, </year> <pages> pp. 91-98. </pages>
Reference-contexts: Alternatively, a deterministic linear-time sampling algorithm can be used in place of random sampling [25, 39], but one must again compute a center of the sample using linear programming in time exponential in d. See <ref> [7] </ref> and [27] for more discussion on center points and efficient algorithms for approximately computing them. See [16] for practical behavior of these randomized algorithms.
Reference: [8] <author> L. Danzer, J. Fonlupt, and V. Klee, </author> <title> Helly's theorem and its relatives, </title> <booktitle> Proceedings of Symposia in Pure Mathematics, </booktitle> <publisher> American Mathematical Society, </publisher> <month> 7 </month> <year> (1963), </year> <pages> pp. 101-180. </pages>
Reference-contexts: P IR d such that jP j = n, a center point of P is defined to be a point x 2 IR d such that if H is any open halfspace whose boundary contains x, then jP " Hj dn=(d + 1):(1) It can be shown from Helly's theorem <ref> [8] </ref> that a center point always exists. Note that center points are quite different from centroids. A center point is largely insensitive to "outliers" in P . On the hand, a single distant outlier can cause the centroid of P to be displaced by an arbitrarily large distance.
Reference: [9] <author> A. L. Dulmage and N. S. Mendelsohn, </author> <title> Coverings of bipartite graphs, </title> <journal> Canadian J. Math., </journal> <volume> 10 (1958), </volume> <pages> pp. 517-534. </pages>
Reference-contexts: Alternatively, we can find in polynomial time the minimum set of vertices C of G that "cover" E 1 , where "cover" means that at least one endpoint of every edge in E 1 is in C. (See <ref> [9] </ref> or [35] for this algorithm.) It can be shown that ffn (d1)=d is the best possible bound on a separator set for an n-vertex ff-overlap graph.
Reference: [10] <author> D. Eppstein, G. L. Miller, and S.-H. Teng, </author> <title> A deterministic linear time algorithm for geometric separators and its applications, </title> <booktitle> in Proceedings of 9th ACM Symposium on Computational Geometry, </booktitle> <year> 1993, </year> <pages> pp. 99-108. </pages>
Reference-contexts: This is proved below. In Step 6 we choose a random great circle, which requires time O (d). This is equivalent to choosing a plane through the origin with a randomly selected orientation. (This step of the algorithm can be made deterministic; see <ref> [10] </ref>.) Step 7 is also seen to require time O (d). Finally, there are two possible alternatives for carrying out Step 8, which are both described in x7 in more detail.
Reference: [11] <author> I. Fried, </author> <title> Condition of finite element matrices generated from nonuniform meshes, </title> <journal> AIAA J., </journal> <volume> 10 (1972), </volume> <pages> pp. 219-221. </pages>
Reference-contexts: It is usually a requirement for numerical accuracy that the simplices are well-shaped <ref> [4, 11, 43] </ref>. A common shape criterion used in mesh generation [4, 6, 33, 37] is an upper bound on the aspect ratio of the simplices. This term has many definitions that all roughly equivalent [27].
Reference: [12] <author> J. E. L. G. Hardy and G. P olya, </author> <title> Inequalities, </title> <publisher> Cambridge University Press, </publisher> <editor> second ed., </editor> <year> 1952. </year>
Reference-contexts: Lemma 5.3. Let a 1 ; : : : ; a n be nonnegative numbers, and d 2. Then n X a d ! 1=d n X a d1 ! 1=(d1) Proof. See <ref> [12] </ref>. We now come to the main result for this section, which uses the preceding lemmas. Theorem 5.4. For all x 2 IR d , the following inequalities hold: f (x) d g (x) d c 0 where c 0 d is a constant depending on d. Proof. <p> Now we apply the Holder inequality <ref> [12] </ref>.
Reference: [13] <author> J. A. George, </author> <title> Nested dissection of a regular finite element mesh, </title> <journal> SIAM J. Numerical Analysis, </journal> <volume> 10 (1973), </volume> <pages> pp. 345-363. </pages>
Reference-contexts: Part of this work was done while the author was visiting Xerox PARC. 1 2 g. miller, s.-h. teng, w. thurston, and s. vavasis parallel computer. An iterative method is formulated that allows each processor to operate independently. See Bramble, Pasciak and Schatz [5]. Nested dissection, due to George <ref> [13] </ref>, George and Liu [14], and Lipton, Rose, and Tarjan [22] is a node ordering for sparse Gaussian elimination. Although originally a sequential algorithm, nested dissection also parallelizes well. For instance, Pan and Reif [34] parallelized it by writing it as sequence of matrix factors.
Reference: [14] <author> J. A. George and J. W. H. Liu, </author> <title> An automatic nested dissection algorithm for irregular finite element problems, </title> <journal> SIAM J. on Numerical Analysis, </journal> <volume> 15 (1978), </volume> <pages> pp. 1053-1069. </pages>
Reference-contexts: An iterative method is formulated that allows each processor to operate independently. See Bramble, Pasciak and Schatz [5]. Nested dissection, due to George [13], George and Liu <ref> [14] </ref>, and Lipton, Rose, and Tarjan [22] is a node ordering for sparse Gaussian elimination. Although originally a sequential algorithm, nested dissection also parallelizes well. For instance, Pan and Reif [34] parallelized it by writing it as sequence of matrix factors. <p> Hendrickson and Leland [20] have improved the spectral method with a multilevel heuristic; the improved version is much faster in practice. Another mesh-partitioning algorithm used in practice is a graph-search heuristic due to George and Liu <ref> [14] </ref>. Leighton and Rao [21] have a partitioning method guaranteed to return a split whose separator size (see below) is within logarithmic factors of optimal, but the technique, based on flow algorithms, currently appears to be too expensive for application to large-scale meshes.
Reference: [15] <author> J. Gilbert, J. Hutchinson, and R. Tarjan, </author> <title> A separation theorem for graphs of bounded genus, </title> <journal> Journal of Algorithms, </journal> <volume> 5 (1984), </volume> <pages> pp. 391-407. </pages>
Reference-contexts: One of the most well-known separator results is Lipton and Tarjan's result [23] that any planar graph has a p 8n-separator that 2/3-splits, which improved on Ungar's [40] result. Building on this result, Gilbert, Hutchinson, and Tarjan <ref> [15] </ref> showed that all graphs with genus bounded by g have an O ( p gn)-separator, and Alon, Seymour, and Thomas [1] proved that all graphs with an excluded minor isomorphic to the h-clique have an O (h 3=2 p n)-separator.
Reference: [16] <author> J. Gilbert, G. Miller, and S.-H. Teng, </author> <title> Geometric mesh partitioning: implementation and experiments, </title> <booktitle> in Proceedings of the 9th International Parallel Processing Symposium, IEEE, </booktitle> <year> 1995, </year> <pages> pp. 418-427. </pages> <note> Also available as CSL-94-13, </note> <institution> Xerox Palo Alto Research Center, Palo Alto, California. </institution>
Reference-contexts: See [7] and [27] for more discussion on center points and efficient algorithms for approximately computing them. See <ref> [16] </ref> for practical behavior of these randomized algorithms. In Step 3, the necessary orthogonal matrix may be represented as a single Householder reflection|see [17] for an explanation of how to pick an orthogonal matrix to zero out all but one entry in a vector. <p> The size of the random sample depends on d; for example, for d = 3, we have used sample sizes of about 1200. This means that the running time of most of the algorithm is independent of n. See [27] and <ref> [16] </ref>. 5. Construction of a cost function. In this section we begin the proof of the main result in Theorem 2.1, which is that jCj is bounded by O (ffn (d1)=d + const) with high probability. <p> In practice, one often wants a split in which G 1 and G 2 have no more than 1/2 the nodes, i.e., a ratio of 1 + o (1). (Experimental results <ref> [16] </ref> suggest that for practical examples, our algorithm produces approximately a 45%-55% split after 10 trials for the d = 3 case, much better than the worst case 20%-80% split claimed in Theorem 2.1.) There is a standard technique originally due to [23] that derives an algorithm Strong-Split using Weak-Split as <p> Deterministic linear time approximate algorithms are known but are not efficient enough for practical use. It is also interesting to determine how our algorithm performs in practice compared to other current algorithms, such as the spectral method. This is the subject of recent work by Gilbert, Miller and Teng <ref> [16] </ref>, who also propose some additional heuristics not described here. The results of [16] can be summarized as follows. Typically 30 random choices for the sphere separator sufficed. The spectral method used by [16] came from [20], who use heuristic local improvement as well as spectral partitioning. <p> It is also interesting to determine how our algorithm performs in practice compared to other current algorithms, such as the spectral method. This is the subject of recent work by Gilbert, Miller and Teng <ref> [16] </ref>, who also propose some additional heuristics not described here. The results of [16] can be summarized as follows. Typically 30 random choices for the sphere separator sufficed. The spectral method used by [16] came from [20], who use heuristic local improvement as well as spectral partitioning. <p> This is the subject of recent work by Gilbert, Miller and Teng <ref> [16] </ref>, who also propose some additional heuristics not described here. The results of [16] can be summarized as follows. Typically 30 random choices for the sphere separator sufficed. The spectral method used by [16] came from [20], who use heuristic local improvement as well as spectral partitioning. Our geometric separation algorithm usually ran faster than spectral partitioning (but in both cases there are many possible heuristics that could speed up either one).
Reference: [17] <author> G. H. Golub and C. F. V. Loan, </author> <title> Matrix Computations, 2nd Edition, </title> <publisher> Johns Hopkins University Press, </publisher> <year> 1989. </year>
Reference-contexts: See [7] and [27] for more discussion on center points and efficient algorithms for approximately computing them. See [16] for practical behavior of these randomized algorithms. In Step 3, the necessary orthogonal matrix may be represented as a single Householder reflection|see <ref> [17] </ref> for an explanation of how to pick an orthogonal matrix to zero out all but one entry in a vector. The number of floating point operations involved is O (d) independent of n.
Reference: [18] <author> S. Guattery and G. L. Miller, </author> <title> On spectral partitioning methods, </title> <booktitle> in Proc. of the 6th ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1995, </year> <pages> pp. 233-242. </pages>
Reference-contexts: In some cases spectral did better; in others, geometric did better. Though the spectral method compares favorably with other heuristics, Guattery and Miller <ref> [18] </ref> geometric separators 21 recently found a class of graphs on which the spectral method performs poorly. Acknowledgments.
Reference: [19] <author> D. Haussler and E. Welzl, </author> <title> *-net and simplex range queries, Discrete & Computational Geometry, </title> <booktitle> 2 (1987), </booktitle> <pages> pp. 127-151. </pages>
Reference-contexts: and s. vavasis Computing a true center point in Step 2 appears to a very expensive operation (involving a linear programming problem with n d constraints) but by using random (geometric) sampling, an approximate center point can be found in random constant time (independent of n but exponential in d) <ref> [41, 19] </ref>. An approximate center point satisfies (1) except with (d + 1 + *)n=(d + 2) on the right-hand side, where * &gt; 0 may be arbitrarily small.
Reference: [20] <author> B. Hendrickson and R. Leland, </author> <title> An improved spectral graph partitioning algorithm for mapping parallel computations, </title> <type> Tech. Rep. </type> <institution> SAND92-1460, Sandia National Laboratories, </institution> <address> Al-buquerque, New Mexico, </address> <year> 1992. </year>
Reference-contexts: For instance, Pothen, Simon, and Liou [36] have a "spectral" partitioning method based on eigenvalues of the "Laplacian" matrix of the graph. This method seems to work well in practice but does not come with any known guarantees for finite element meshes. Hendrickson and Leland <ref> [20] </ref> have improved the spectral method with a multilevel heuristic; the improved version is much faster in practice. Another mesh-partitioning algorithm used in practice is a graph-search heuristic due to George and Liu [14]. <p> This is the subject of recent work by Gilbert, Miller and Teng [16], who also propose some additional heuristics not described here. The results of [16] can be summarized as follows. Typically 30 random choices for the sphere separator sufficed. The spectral method used by [16] came from <ref> [20] </ref>, who use heuristic local improvement as well as spectral partitioning. Our geometric separation algorithm usually ran faster than spectral partitioning (but in both cases there are many possible heuristics that could speed up either one).
Reference: [21] <author> F. T. Leighton and S. Rao, </author> <title> An approximate max-flow min-cut theorem for uniform multi-commodity flow problems with applications to approximation algorithms, </title> <booktitle> in 29th Annual Symposium on Foundations of Computer Science, </booktitle> <year> 1988, </year> <pages> pp. 422-431. </pages> <note> 22 g. </note> <author> miller, s.-h. teng, w. thurston, and s. </author> <note> vavasis </note>
Reference-contexts: Hendrickson and Leland [20] have improved the spectral method with a multilevel heuristic; the improved version is much faster in practice. Another mesh-partitioning algorithm used in practice is a graph-search heuristic due to George and Liu [14]. Leighton and Rao <ref> [21] </ref> have a partitioning method guaranteed to return a split whose separator size (see below) is within logarithmic factors of optimal, but the technique, based on flow algorithms, currently appears to be too expensive for application to large-scale meshes.
Reference: [22] <author> R. J. Lipton, D. J. Rose, and R. E. Tarjan, </author> <title> Generalized nested dissection, </title> <journal> SIAM J. on Numerical Analysis, </journal> <volume> 16 (1979), </volume> <pages> pp. 346-358. </pages>
Reference-contexts: An iterative method is formulated that allows each processor to operate independently. See Bramble, Pasciak and Schatz [5]. Nested dissection, due to George [13], George and Liu [14], and Lipton, Rose, and Tarjan <ref> [22] </ref> is a node ordering for sparse Gaussian elimination. Although originally a sequential algorithm, nested dissection also parallelizes well. For instance, Pan and Reif [34] parallelized it by writing it as sequence of matrix factors. Parallel multifrontal methods (see, e.g., survey [24]) are also often based on nested dissection.
Reference: [23] <author> R. J. Lipton and R. E. Tarjan, </author> <title> A separator theorem for planar graphs, </title> <journal> SIAM J. of Appl. Math., </journal> <volume> 36 (1979), </volume> <pages> pp. 177-189. </pages>
Reference-contexts: Our algorithm can compute an edge separator as effectively and efficiently as it computes vertex separators. We have decided to state our theoretical bounds in terms of vertex separators, however, to be consistent with previous literature. One of the most well-known separator results is Lipton and Tarjan's result <ref> [23] </ref> that any planar graph has a p 8n-separator that 2/3-splits, which improved on Ungar's [40] result. <p> ratio of 1 + o (1). (Experimental results [16] suggest that for practical examples, our algorithm produces approximately a 45%-55% split after 10 trials for the d = 3 case, much better than the worst case 20%-80% split claimed in Theorem 2.1.) There is a standard technique originally due to <ref> [23] </ref> that derives an algorithm Strong-Split using Weak-Split as a subroutine. Strong-Split yields an even split at the expense of a greater running time (by a constant factor) and a larger constant factor in the bound on the size of the separator.
Reference: [24] <author> J. W. H. Liu, </author> <title> The multifrontal method for sparse matrix solution: </title> <journal> theory and practice, SIAM Review, </journal> <volume> 34 (1992), </volume> <pages> pp. 82-109. </pages>
Reference-contexts: Although originally a sequential algorithm, nested dissection also parallelizes well. For instance, Pan and Reif [34] parallelized it by writing it as sequence of matrix factors. Parallel multifrontal methods (see, e.g., survey <ref> [24] </ref>) are also often based on nested dissection. For either technique it is necessary to first partition the region into subdomains.
Reference: [25] <author> J. Matou sek, </author> <title> Approximations and optimal geometric divide-and-conquer, </title> <booktitle> in 23rd ACM Symp. Theory of Computing, ACM, </booktitle> <year> 1991, </year> <pages> pp. 512-522. </pages>
Reference-contexts: An approximate center point satisfies (1) except with (d + 1 + *)n=(d + 2) on the right-hand side, where * &gt; 0 may be arbitrarily small. Alternatively, a deterministic linear-time sampling algorithm can be used in place of random sampling <ref> [25, 39] </ref>, but one must again compute a center of the sample using linear programming in time exponential in d. See [7] and [27] for more discussion on center points and efficient algorithms for approximately computing them. See [16] for practical behavior of these randomized algorithms.
Reference: [26] <author> G. L. Miller, D. Talmor, S.-H. Teng, and N. Walkington, </author> <title> A Delauney based numerical method for three dimensions: generation, formulation, and partition, </title> <booktitle> in Proceedings of the 27th annual ACM Symposium on the Theory of Computing, </booktitle> <year> 1995, </year> <pages> pp. </pages> ???-??? 
Reference-contexts: An example of finite difference mesh with refinement. ratio). Miller, Talmor, Teng and Walkington <ref> [26] </ref> have shown a similar result about 3D Delauney triangulations satisfying a radius-edge ratio bound. In such a triangulation, the radius of the circumscribing circle of each simplex divided by its shortest edge is bounded above by a constant, and the triangulation is a Delauney triangulation. <p> In the case of a 2D triangulation with an upper bound on the largest angle, the 1-skeleton of the triangulation is not necessarily an overlap graph with bounded ff. However, the bounded radius-edge Delauney triangulation is an ff-overlap graph as argued by <ref> [26] </ref>. Another type of discretization used in solving PDE's is a finite difference mesh with adaptive refinement. See, e.g., Fig. 3, based on a paper by Berger and Bokhari [3].
Reference: [27] <author> G. L. Miller, S.-H. Teng, W. Thurston, and S. A. Vavasis, </author> <title> Automatic mesh partitioning, in Graph Theory and Sparse Matrix Computation, </title> <editor> A. George, J. Gilbert, and J. Liu, eds., </editor> <volume> vol. </volume> <booktitle> 56 of IMA Volumes in Mathematics and its Applications, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1993, </year> <pages> pp. </pages> <month> 57-84. </month> <title> [28] , Separators for sphere-packings and nearest neighborhood graphs. </title> <note> Submitted to J. ACM, </note> <year> 1993. </year> <title> [29] , Geometric separators for finite element meshes: appendix concerning volume elements. </title> <type> Unpublished, </type> <year> 1994. </year>
Reference-contexts: The focus of this paper is on finite element meshes; the companion paper focuses on problems arising in computational geometry. The authors have also jointly written a survey paper <ref> [27] </ref> that surveys the results from this paper, the companion, and several additional results by various authors on efficient center point computation. <p> It is usually a requirement for numerical accuracy that the simplices are well-shaped [4, 11, 43]. A common shape criterion used in mesh generation [4, 6, 33, 37] is an upper bound on the aspect ratio of the simplices. This term has many definitions that all roughly equivalent <ref> [27] </ref>. One definition of aspect ratio of a simplex T is the radius of the smallest sphere containing T divided by the radius of the largest sphere that can be inscribed in T . <p> Alternatively, a deterministic linear-time sampling algorithm can be used in place of random sampling [25, 39], but one must again compute a center of the sample using linear programming in time exponential in d. See [7] and <ref> [27] </ref> for more discussion on center points and efficient algorithms for approximately computing them. See [16] for practical behavior of these randomized algorithms. <p> The size of the random sample depends on d; for example, for d = 3, we have used sample sizes of about 1200. This means that the running time of most of the algorithm is independent of n. See <ref> [27] </ref> and [16]. 5. Construction of a cost function. In this section we begin the proof of the main result in Theorem 2.1, which is that jCj is bounded by O (ffn (d1)=d + const) with high probability.
Reference: [30] <author> G. L. Miller, S.-H. Teng, and S. A. Vavasis, </author> <title> A unified geometric approach to graph separators, </title> <booktitle> in 31nd Annual Symposium on Foundations of Computer Science, IEEE, </booktitle> <year> 1991, </year> <pages> pp. 538-547. </pages>
Reference-contexts: This class is defined in the next section. First, we review the relationship between this paper and other papers by the same authors. This paper and its companion paper [28] either extend or explain several short conference papers <ref> [30, 31, 32] </ref> and one journal paper [42]. The focus of this paper is on finite element meshes; the companion paper focuses on problems arising in computational geometry.
Reference: [31] <author> G. L. Miller and W. Thurston, </author> <title> Separators in two and three dimensions, </title> <booktitle> in Proceedings of the 22th Annual ACM Symposium on Theory of Computing, </booktitle> <address> Baltimore, </address> <month> May </month> <year> 1990, </year> <booktitle> ACM, </booktitle> <pages> pp. 300-309. </pages>
Reference-contexts: This class is defined in the next section. First, we review the relationship between this paper and other papers by the same authors. This paper and its companion paper [28] either extend or explain several short conference papers <ref> [30, 31, 32] </ref> and one journal paper [42]. The focus of this paper is on finite element meshes; the companion paper focuses on problems arising in computational geometry.
Reference: [32] <author> G. L. Miller and S. A. Vavasis, </author> <title> Density graphs and separators, </title> <booktitle> in Proceedings of the ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1991, </year> <pages> pp. 331-336. </pages>
Reference-contexts: This class is defined in the next section. First, we review the relationship between this paper and other papers by the same authors. This paper and its companion paper [28] either extend or explain several short conference papers <ref> [30, 31, 32] </ref> and one journal paper [42]. The focus of this paper is on finite element meshes; the companion paper focuses on problems arising in computational geometry.
Reference: [33] <author> S. A. Mitchell and S. A. Vavasis, </author> <title> Quality mesh generation in three dimensions, </title> <booktitle> in Proceedings of the ACM Computational Geometry Conference, </booktitle> <year> 1992, </year> <pages> pp. 212-221. </pages> <note> Also appeared as Cornell C.S. TR 92-1267. </note>
Reference-contexts: It is usually a requirement for numerical accuracy that the simplices are well-shaped [4, 11, 43]. A common shape criterion used in mesh generation <ref> [4, 6, 33, 37] </ref> is an upper bound on the aspect ratio of the simplices. This term has many definitions that all roughly equivalent [27]. <p> Fig. 2 shows an example of a finite element mesh with bounded aspect ratio generated by a mesh-generator written by S. Mitchell and based geometric separators 5 Fig. 2. A mesh with bounded aspect ratio. on the algorithm in <ref> [33] </ref>. A three-dimensional version of that algorithm has recently been implemented by Vavasis [44]. We can show that the interior nodes in a 1-skeleton form an overlap graph. This result is easily generalized to higher-order elements. First we prove a preliminary geometric lemma. This lemma is also used later on.
Reference: [34] <author> V. Pan and J. Reif, </author> <title> Efficient parallel solution of linear systems, </title> <booktitle> in Proceedings of the 17th Annual ACM Symposium on Theory of Computing, </booktitle> <year> 1985, </year> <pages> pp. 143-152. </pages>
Reference-contexts: See Bramble, Pasciak and Schatz [5]. Nested dissection, due to George [13], George and Liu [14], and Lipton, Rose, and Tarjan [22] is a node ordering for sparse Gaussian elimination. Although originally a sequential algorithm, nested dissection also parallelizes well. For instance, Pan and Reif <ref> [34] </ref> parallelized it by writing it as sequence of matrix factors. Parallel multifrontal methods (see, e.g., survey [24]) are also often based on nested dissection. For either technique it is necessary to first partition the region into subdomains.
Reference: [35] <author> C. H. Papadimitriou and K. Steiglitz, </author> <title> Combinatorial Optimization: Algorithms and Complexity, </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1982. </year>
Reference-contexts: Alternatively, we can find in polynomial time the minimum set of vertices C of G that "cover" E 1 , where "cover" means that at least one endpoint of every edge in E 1 is in C. (See [9] or <ref> [35] </ref> for this algorithm.) It can be shown that ffn (d1)=d is the best possible bound on a separator set for an n-vertex ff-overlap graph.
Reference: [36] <author> A. Pothen, H. D. Simon, and K.-P. Liou, </author> <title> Partitioning sparse matrices with eigenvectors of graphs, </title> <journal> SIAM J. Matrix Anal. Appl., </journal> <volume> 11 (1990), </volume> <pages> pp. 430-452. </pages>
Reference-contexts: Other authors have recently looked at the mesh-partitioning problem. For instance, Pothen, Simon, and Liou <ref> [36] </ref> have a "spectral" partitioning method based on eigenvalues of the "Laplacian" matrix of the graph. This method seems to work well in practice but does not come with any known guarantees for finite element meshes.
Reference: [37] <author> J. Ruppert, </author> <title> A new and simple algorithm for quality 2-dimensional mesh generation, </title> <booktitle> in 4th Symp. Discrete Algorithms, </booktitle> <publisher> SIAM, </publisher> <year> 1993, </year> <pages> pp. 83-92. </pages>
Reference-contexts: It is usually a requirement for numerical accuracy that the simplices are well-shaped [4, 11, 43]. A common shape criterion used in mesh generation <ref> [4, 6, 33, 37] </ref> is an upper bound on the aspect ratio of the simplices. This term has many definitions that all roughly equivalent [27].
Reference: [38] <author> G. Strang and G. J. Fix, </author> <title> An Analysis of the Finite Element Method, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1973. </year>
Reference-contexts: Finite element and finite difference meshes. The main result of this section is that finite element meshes that satisfy a "shape" criterion are overlap graphs. The finite element method <ref> [38] </ref> is a collection of techniques for solving problems such as Poisson's equation on irregularly-shaped domains. The finite element method subdivides the domain (a subset of IR d ) into a mesh of polyhedral elements. A common choice for an element is a d-dimensional simplex.
Reference: [39] <author> S.-H. Teng, </author> <title> Points, Spheres, and Separators: a unified geometric approach to graph partitioning, </title> <type> PhD thesis, </type> <institution> Carnegie-Mellon University, School of Computer Science, </institution> <year> 1991. </year> <month> CMU-CS-91-184. </month>
Reference-contexts: An approximate center point satisfies (1) except with (d + 1 + *)n=(d + 2) on the right-hand side, where * &gt; 0 may be arbitrarily small. Alternatively, a deterministic linear-time sampling algorithm can be used in place of random sampling <ref> [25, 39] </ref>, but one must again compute a center of the sample using linear programming in time exponential in d. See [7] and [27] for more discussion on center points and efficient algorithms for approximately computing them. See [16] for practical behavior of these randomized algorithms.
Reference: [40] <author> P. Ungar, </author> <title> A theorem on planar graphs, </title> <journal> Journal London Math Soc., </journal> <volume> 26 (1951), </volume> <pages> pp. 256-262. </pages>
Reference-contexts: We have decided to state our theoretical bounds in terms of vertex separators, however, to be consistent with previous literature. One of the most well-known separator results is Lipton and Tarjan's result [23] that any planar graph has a p 8n-separator that 2/3-splits, which improved on Ungar's <ref> [40] </ref> result.
Reference: [41] <author> V. N. Vapnik and A. Y. Chervonenkis, </author> <title> On the uniform convergence of relative frequencies of events to their probabilities, </title> <journal> Theory Probab. Appl., </journal> <volume> 16 (1971), </volume> <pages> pp. 264-280. </pages>
Reference-contexts: and s. vavasis Computing a true center point in Step 2 appears to a very expensive operation (involving a linear programming problem with n d constraints) but by using random (geometric) sampling, an approximate center point can be found in random constant time (independent of n but exponential in d) <ref> [41, 19] </ref>. An approximate center point satisfies (1) except with (d + 1 + *)n=(d + 2) on the right-hand side, where * &gt; 0 may be arbitrarily small.
Reference: [42] <author> S. A. Vavasis, </author> <title> Automatic domain partitioning in three dimensions, </title> <journal> SIAM J. Sci. Stat. Comp., </journal> <volume> 12 (1991), </volume> <pages> pp. </pages> <month> 950-970. </month> <title> [43] , Stable finite elements for problems with wild coefficients, </title> <type> Tech. Rep. 93-1364, </type> <institution> Department of Computer Science, Cornell University, </institution> <address> Ithaca, NY, </address> <year> 1993. </year> <note> [44] , QMG version 1.0. See ftp://ftp.cs.cornell.edu/pub/vavasis/qmg1.0.tar.gz or http://www.cs.cornell.edu/Info/People/vavasis/qmg-home.html, 1995. </note>
Reference-contexts: This class is defined in the next section. First, we review the relationship between this paper and other papers by the same authors. This paper and its companion paper [28] either extend or explain several short conference papers [30, 31, 32] and one journal paper <ref> [42] </ref>. The focus of this paper is on finite element meshes; the companion paper focuses on problems arising in computational geometry. <p> Define graph G, whose nodes are an m fi m fi fi m array of nodes arranged in a d-dimensional unit-spaced lattice (so that n = m d ), and whose edges connect all neighbors within distance ff. This is clearly seen to be an overlap graph, and Vavasis <ref> [42] </ref> shows that any partitioning of this graph into constant-sized pieces must involve a separator set of at least const ffn (d1)=d nodes. 8. Practical issues.
References-found: 40

