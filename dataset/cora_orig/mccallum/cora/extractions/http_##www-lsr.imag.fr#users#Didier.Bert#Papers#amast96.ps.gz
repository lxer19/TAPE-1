URL: http://www-lsr.imag.fr/users/Didier.Bert/Papers/amast96.ps.gz
Refering-URL: http://www-lsr.imag.fr/Les.Groupes/scop/f-publi.html
Root-URL: http://www.imag.fr
Email: e-mail: fbert, echahedg@imag.fr  
Title: Resolution of goals with the functional and logic programming language LPG impact of abstract interpretation  
Author: Didier Bert, Rachid Echahed and Kamel Adi 
Web: http://thot.imag.fr/Les.Groupes/scop/  
Address: BP 53, 38041 Grenoble cedex 9, France  
Affiliation: IMAG-LSR, CNRS,  
Abstract-found: 0
Intro-found: 1
Reference: 2. <author> D. Bert, R. Echahed, and B. M. Ostvold. </author> <title> Abstract rewriting. </title> <booktitle> In Proceedings of the 3rd International Workshop on Static Analysis, WSA'93, number 724 in Lecture Notes in Computer Science, </booktitle> <pages> pp 178-192. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: An implementation of lpg for SUN4/SunOS 4.1.3 is available by URL ftp://ftp.imag.fr/pub/SCOP/LPG. The lpg calculus, designed to solve goals a la Prolog, is mainly based on narrowing techniques. These techniques yield semi-decidable algorithms. Recently, we have shown in <ref> [2, 4] </ref> how abstract interpretation may help to improve the operational semantics of lpg-like languages.
Reference: 3. <author> D. Bert, R. Echahed, and J.-C. Reynaud. </author> <title> Reference manual of the LPG specifica tion language and environment. </title> <address> ftp://ftp.imag.fr/pub/SCOP/LPG, </address> <year> 1994. </year>
Reference-contexts: Figures 3 and 4 give two ex amples of property modules. Formal Sort specifies the class of sets and Equality characterizes algebras that consist of a set and a boolean operator which satisfies the axioms of "equivalence". More details about lpg may be found in <ref> [5, 3] </ref>. 3 The LPG solver In lpg system, one may either normalize terms using an abstract machine as in classical functional languages or solve goals a la Prolog.
Reference: 4. <author> D. Bert and R. Echahed. </author> <title> Abstraction of conditional term rewriting systems. </title> <editor> In J. Lloyd, editor, </editor> <booktitle> Proc. of the International Symposium on Logic Programming, ILPS-95, </booktitle> <pages> pp 162-176, </pages> <address> Portland, Oregon, 1995. </address> <publisher> MIT Press. </publisher>
Reference-contexts: An implementation of lpg for SUN4/SunOS 4.1.3 is available by URL ftp://ftp.imag.fr/pub/SCOP/LPG. The lpg calculus, designed to solve goals a la Prolog, is mainly based on narrowing techniques. These techniques yield semi-decidable algorithms. Recently, we have shown in <ref> [2, 4] </ref> how abstract interpretation may help to improve the operational semantics of lpg-like languages. <p> Then, the equation t == t 0 is not satisfiable if A (t) and A (t 0 ) are disjoint. Such approximations are computed using abstract rewriting systems <ref> [4] </ref>. In Figure 6, we give an abstract rewriting system which is obtained automatically from the concrete specifications of the operators height and g given in Figures 1 and 2.
Reference: 5. <author> D. Bert and R. Echahed. </author> <title> On the operational semantics of the algebraic and logic language LPG. In Recent Trends in Data Types Specification, </title> <publisher> LNCS 906, </publisher> , <pages> pp 132-152. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: 1 Introduction lpg <ref> [1, 5] </ref> belongs to the class of languages designed for software specification, rapid prototyping and high-level programming. It allows one to define abstract data types, functions and predicates within one unified framework : Horn clause logic with equality. An implementation of lpg for SUN4/SunOS 4.1.3 is available by URL ftp://ftp.imag.fr/pub/SCOP/LPG. <p> Figures 3 and 4 give two ex amples of property modules. Formal Sort specifies the class of sets and Equality characterizes algebras that consist of a set and a boolean operator which satisfies the axioms of "equivalence". More details about lpg may be found in <ref> [5, 3] </ref>. 3 The LPG solver In lpg system, one may either normalize terms using an abstract machine as in classical functional languages or solve goals a la Prolog. <p> A goal is syntacti cally written as "A 1 ; : : : ; A m ; : : : ; A n ?" where every A i is either an equation, a disequation or any other literal. The operational semantics of lpg <ref> [1, 6, 5] </ref> property Formal Sort sorts t end Formal Sort Fig. 3.
Reference: 6. <author> R. Echahed. </author> <title> Sur l'integration des langages algebriques et logiques. </title> <type> PhD thesis, </type> <institution> INPG, Grenoble, </institution> <year> 1990. </year>
Reference-contexts: A goal is syntacti cally written as "A 1 ; : : : ; A m ; : : : ; A n ?" where every A i is either an equation, a disequation or any other literal. The operational semantics of lpg <ref> [1, 6, 5] </ref> property Formal Sort sorts t end Formal Sort Fig. 3.
References-found: 5

