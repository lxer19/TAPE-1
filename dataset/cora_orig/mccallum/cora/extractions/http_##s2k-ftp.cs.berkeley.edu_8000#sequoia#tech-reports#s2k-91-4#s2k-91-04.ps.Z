URL: http://s2k-ftp.cs.berkeley.edu:8000/sequoia/tech-reports/s2k-91-4/s2k-91-04.ps.Z
Refering-URL: http://s2k-ftp.cs.berkeley.edu:8000/sequoia/tech-reports/s2k-91-4/
Root-URL: http://www.cs.berkeley.edu
Title: The Sequoia 2000 Object Browser  
Author: Jolly Chen, Ray Larson, and Michael Stonebraker 
Abstract: Sequoia 2000 Technical Report 91/4 University of California Berkeley, Ca. Abstract In this paper we explain the paradigm that we are following for Sequoia 2000 object browsers. It is intended to be a keyboard-free interface, and is based on the "move and zoom" paradigm popularized for Navy ships by SDMS [HERO80]. 
Abstract-found: 1
Intro-found: 1
Reference: [CROF87] <author> Croft, B. and Thompson, R. ``I3R: </author> <title> A New Approach to the Design of Document Retrieval Systems.'' </title> <journal> Journal of the American Society for Information Science (Nov. </journal> <year> 1987). </year>
Reference-contexts: These techniques, such as the vector space and probabilistic models of IR attempt to rank the documents in the database in order of their similarity, or probability of relevance, to a given natural language query [SALT91]. Systems using these methods include I3R <ref> [CROF87] </ref>, CITE [DOSZ82] and CHESHIRE [LARS91]. <p> We will also be developing a set of experimental browsers for text documents. Some interesting work on direct manipulation interfaces and visual abstractions for conventional 9 Boolean systems has been reported by Shneiderman [SHNE91], and for more advanced IR sys-tems by Croft <ref> [CROF87] </ref>, but we intend to take a different approach based on the browsing paradigm discussed above.
Reference: [DLA87] <institution> Division of Library Automation. </institution> <note> MELVYL Online Catalog Reference Manual. </note> <institution> (Berkeley, CA: Division of Library Automation, University of California, </institution> <year> 1987). </year>
Reference-contexts: of search criteria on specific fields, e.g: 1 author = "Knuth" and (subject = "algorithms" or subject = "typesetting") Systems with this sort of Boolean query language include commercial bibliographic search services, such as DIALOG and BRS, and online library catalogs like the MELVYL system at the University of California <ref> [DLA87] </ref>. More advanced retrieval methods have been developed that replace Boolean logic with more sophisticated matching techniques.
Reference: [DOSZ82] <author> Doszkocs, T. </author> <title> ``From Research to Application: </title> <booktitle> The CITE Natural Language Information Retrieval System.'' Research and Development in Information Retrieval: Proceedings, </booktitle> <address> Berlin, 1982. (New York, Berlin: </address> <publisher> Springer Verlag, </publisher> <year> 1983) </year>
Reference-contexts: These techniques, such as the vector space and probabilistic models of IR attempt to rank the documents in the database in order of their similarity, or probability of relevance, to a given natural language query [SALT91]. Systems using these methods include I3R [CROF87], CITE <ref> [DOSZ82] </ref> and CHESHIRE [LARS91].
Reference: [GUTM84] <author> Gutman, A., ``R-trees: </author> <title> A Dynamic Index Structure for Spatial Searching,'' </title> <booktitle> Proc. 1984 ACM-SIGMOD Conference on Management of Data, </booktitle> <address> Boston, Mass. </address> <month> June </month> <year> 1984. </year>
Reference-contexts: Any given browser is now straightforward. Each object in each class is mapped into one or more polygons in the n-space of the browser by applying the locator function discussed above. POSTGRES supports user-defined access methods, and we have used this facility to construct an R-tree index <ref> [GUTM84] </ref>, which efficiently supports multidimensional spatial search. Hence, an R-tree index is built on the result of the locator function. To find the objects that should appear on the screen, this index is searched to find the objects which intersect the region of n-space that corresponds to the screen.
Reference: [HERO80] <author> Herot, C., ``SDMS: </author> <title> A Spatial Data Base System,'' </title> <journal> ACM TODS (1980). </journal>
Reference-contexts: Example browsers One browser we are currently constructing uses latitude and longitude as dimensions. The browser places all browsing objects into this geographic space The background landscape is a topographic map. As such, this browser has points in common with Image Query and with SDMS <ref> [HERO80] </ref>. We will also be developing a set of experimental browsers for text documents.
Reference: [KEMN91] <author> Kemnitz, G. (ed.), </author> <title> ``The POSTGRES Reference Manual, </title> <note> Version 3.0'' Electronics Research Laboratory, </note> <institution> University of California, Berkeley, CA, Report M91/10, </institution> <month> November </month> <year> 1991. </year>
Reference-contexts: For these reasons, we have taken a much more general approach to repository access, which we now describe. Since repository objects reside in a POSTGRES data base, we make use of several of the novel features provided by POSTGRES <ref> [STON90, KEMN91] </ref>. Hence, in Section 2, we briefly describe features of POSTGRES that are relevant to our browser, which is described in Sections 3 and 4. 2. <p> To accomodate this need, POSTGRES supports a final constructed type, set, whose value is a collection of instances from all classes. POSTGRES also contains a powerful function facility, and details of its capabilities appear in <ref> [KEMN91] </ref>. Here, we merely illustrate one kind of POSTGRES function, namely C functions. 3 A user can define an arbitrary number of C functions whose arguments are base types or composite types.
Reference: [LARS91] <author> Larson, R., </author> <title> ``Classification Clustering, Probabilistic Information Retrieval and the Online Catalog,'' </title> <journal> Library Quarterly, </journal> <volume> vol. </volume> <month> 61 (April </month> <year> 1991). </year>
Reference-contexts: These techniques, such as the vector space and probabilistic models of IR attempt to rank the documents in the database in order of their similarity, or probability of relevance, to a given natural language query [SALT91]. Systems using these methods include I3R [CROF87], CITE [DOSZ82] and CHESHIRE <ref> [LARS91] </ref>.
Reference: [OSBO86] <author> Osborne, S. and Heaven, T., </author> <title> ``The Design of a Relational System with Abstract Data Types as Domains,'' </title> <journal> ACM TODS, </journal> <month> Sept. </month> <year> 1986. </year>
Reference-contexts: POSTGRES contains an extensive type system and a powerful notion of functions. There are three kinds of types in POSTGRES, base types, arrays of base types, and composite types, which we discuss in turn. Some researchers, e.g. <ref> [STON86, OSBO86] </ref>, have argued that one should be able to construct new base types such as bits, bitstrings, encoded character strings, bitmaps, compressed integers, packed decimal numbers, radix 50 decimal numbers, money, etc.
Reference: [SALT91] <author> Salton, G., </author> <title> ``Developments in Automatic Text Retrieval,'' </title> <journal> Science Aug. </journal> <volume> 30, </volume> <year> 1991. </year>
Reference-contexts: These techniques, such as the vector space and probabilistic models of IR attempt to rank the documents in the database in order of their similarity, or probability of relevance, to a given natural language query <ref> [SALT91] </ref>. Systems using these methods include I3R [CROF87], CITE [DOSZ82] and CHESHIRE [LARS91]. <p> However, text documents may lack such conventional "dimensions" as latitude and longitude. Instead, automatic clustering methods and document similarity measures developed in the vector space and probabilistic models of information retrieval <ref> [SALT91] </ref> might be used to present 2 or 3 dimensional "slices" of an n-dimensional document space. In such a representation each document, or surrogate cluster "centroids" for a set of sufficiently similar documents would be represented by icons.
Reference: [SHNE89] <author> Shneiderman, B., et al. </author> <title> ``Three Evaluations of Museum Installations of a Hypertext System,'' </title> <journal> Journal of the American Society for Information Science (May 1989). ,ip </journal>
Reference: [SHNE91] <author> Shneiderman, B. </author> <title> ``Visual User Interfaces for Information Exploration,'' </title> <booktitle> Proceedings of the 54th ASIS Annual Meeting, </booktitle> <address> Washington, DC, </address> <month> Oct. </month> <year> 1991. </year>
Reference-contexts: As such, this browser has points in common with Image Query and with SDMS [HERO80]. We will also be developing a set of experimental browsers for text documents. Some interesting work on direct manipulation interfaces and visual abstractions for conventional 9 Boolean systems has been reported by Shneiderman <ref> [SHNE91] </ref>, and for more advanced IR sys-tems by Croft [CROF87], but we intend to take a different approach based on the browsing paradigm discussed above.
Reference: [STON86] <author> Stonebraker, M., </author> <title> Inclusion of New Types in Relational Data Base Systems, </title> <booktitle> Proc. Second International Conference on Data Engineering, </booktitle> <address> Los Angeles, Ca., </address> <month> Feb. </month> <year> 1986. </year> <month> 10 </month>
Reference-contexts: POSTGRES contains an extensive type system and a powerful notion of functions. There are three kinds of types in POSTGRES, base types, arrays of base types, and composite types, which we discuss in turn. Some researchers, e.g. <ref> [STON86, OSBO86] </ref>, have argued that one should be able to construct new base types such as bits, bitstrings, encoded character strings, bitmaps, compressed integers, packed decimal numbers, radix 50 decimal numbers, money, etc.
Reference: [STON90] <author> Stonebraker, M. et al., </author> <title> ``The Implementation of POSTGRES,'' </title> <journal> IEEE Transactions on Knowledge and Data Engineering (March 1990). </journal> <volume> [STON90B]Stonebraker, </volume> <editor> M., et. al., </editor> <title> "On Rules, Procedures, Caching and Views," </title> <booktitle> Proc. 1991 ACM-SIGMOD Conference on Management of Data, </booktitle> <address> Atlantic City, N.J., </address> <month> June </month> <year> 1990. </year>
Reference-contexts: For these reasons, we have taken a much more general approach to repository access, which we now describe. Since repository objects reside in a POSTGRES data base, we make use of several of the novel features provided by POSTGRES <ref> [STON90, KEMN91] </ref>. Hence, in Section 2, we briefly describe features of POSTGRES that are relevant to our browser, which is described in Sections 3 and 4. 2.
Reference: [STON92] <author> Stonebraker, M., </author> <title> "An Overview of the Sequoia 2000 Project," </title> <booktitle> (elsewhere in this proceedings). </booktitle> <pages> 11 </pages>
Reference-contexts: 1. Introduction As noted in <ref> [STON92] </ref>, the Sequoia 2000 project seeks to provide the concept of bottomless storage for Global Change researchers. These clients wish to store large numbers of disparate objects in a storage system, including satellite imagery, aerial photographs, polygonal maps including topographic maps, computer programs, documents, output of simulation runs, etc.
References-found: 14

