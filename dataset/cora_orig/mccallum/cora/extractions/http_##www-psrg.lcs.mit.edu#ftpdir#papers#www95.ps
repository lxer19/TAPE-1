URL: http://www-psrg.lcs.mit.edu/ftpdir/papers/www95.ps
Refering-URL: http://www.cs.washington.edu/homes/speed/papers/ieee/ieee-metacrawler/ieee-metacrawler.html
Root-URL: 
Title: Discover: A Resource Discovery System based on Content Routing  
Author: Mark A. Sheldon Andrzej Duda Ron Weiss David K. Gifford 
Address: Cambridge, MA 02139, USA 2 CNRS-IMAG 38610 Gieres, France  
Affiliation: 1 Programming Systems Research Group, MIT Laboratory for Computer Science,  
Abstract: We have built an HTTP based resource discovery system called Discover that provides a single point of access to over 500 WAIS servers. Discover provides two key services: query refinement and query routing. Query refinement helps a user improve a query fragment to describe the user's interests more precisely. Once a query has been refined and describes a manageable result set, query routing automatically forwards the query to the WAIS servers that contain relevant documents. Abbreviated descriptions of WAIS sites called content labels are used by the query refinement and query routing algorithms. Our experimental results suggest that query refinement in conjunction with the query routing provides an effective way to discover resources in a large universe of documents. Our experience with query refinement has convinced us that the expansion of query fragments is essential for using a large, dynamically changing, heterogenous distributed information system.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> B. Alberti et al. </author> <title> The Internet Gopher protocol: A distributed document search and retrieval protocol. University of Minesota Microcomputer and Workstation Networks Center, </title> <note> Spring 1991. Revised Spring 1992. </note>
Reference-contexts: Furthermore, a content routing system allows greater autonomy to each information provider and content router to tailor its indexing mechanisms and facilities using local knowledge. Veronica [12] is a discovery system that maintains an index of document titles from Gopher <ref> [1] </ref> menus, and it suffers from the same limitations as the Web search systems. Subject-based directories of information, e.g., Planet Earth 2 and the NCSA Meta-Index 3 , provide a useful browsable organization of information. These would be useful paradigms for organizing particular hierarchies in a Content Routing System.
Reference: 2. <author> T. Berners-Lee. </author> <title> Hypertext transfer protocol. </title> <type> Internet Draft, </type> <month> Nov. </month> <year> 1993. </year>
Reference-contexts: This URL is interpreted by the client's browser without the intervention of Discover. 4.2 An HTTP Content Router for WAIS The Discover implementation is based on the framework provided by the HTTP World Wide Web protocol <ref> [2] </ref>. Since HTML documents and HTML Forms provide the most widely used multimedia display format in use today [3], we chose to use HTML Forms for Discover's input and output. Figure 12 illustrates the structure of Discover. Discover uses several features of the WWW framework and form support.
Reference: 3. <author> T. Berners-Lee and D. Connolly. </author> <title> Hypertext markup language. </title> <type> Internet Draft, </type> <month> July </month> <year> 1993. </year>
Reference-contexts: Since HTML documents and HTML Forms provide the most widely used multimedia display format in use today <ref> [3] </ref>, we chose to use HTML Forms for Discover's input and output. Figure 12 illustrates the structure of Discover. Discover uses several features of the WWW framework and form support.
Reference: 4. <author> T. Berners-Lee et al. </author> <title> World-Wide Web: The information universe. </title> <journal> Electronic Networking, </journal> <volume> 2(1) </volume> <pages> 52-58, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction Locating and accessing information in the rapidly growing, heterogeneous, distributed collection of data sources available via the World Wide Web <ref> [4] </ref> is a difficult problem of growing importance. The servers on the Web represent a vast potential resource. Unfortunately, neither the organization of the data nor the available tools for associative access to the data is adequate for quickly discovering relevant information.
Reference: 5. <author> C. M. Bowman, P. B. Danzig, D. R. Hardy, U. Manber, and M. F. Schwartz. </author> <title> The harvest information discovery and access system. </title> <booktitle> In Proceedings of the Second International World Wide Web Conference, </booktitle> <address> Chicago, Illinois, </address> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: However, there is no support for the automatic selection of relevant databases for a user's query. Network-based resource discovery systems like Harvest and GLOSS, gather information about other servers and provide some form of query-based mechanism for users to find out about servers relevant to a request. Harvest <ref> [5] </ref> builds on our work on content routing by providing a modular system for gathering information from servers and providing query-based browsing of descriptions of those servers. A broker is a kind of content router, and a SOIF (Structured Object Interchange Format) object is a kind of simple content label.
Reference: 6. <author> A. Duda and M. A. Sheldon. </author> <title> Content routing in networks of WAIS servers. </title> <booktitle> In International Conference on Distributed Computing Systems Proceedings. IEEE, </booktitle> <month> June </month> <year> 1994. </year>
Reference-contexts: It uses compact descriptions of information servers, called content labels to accomplish this in an efficient and scalable This work was supported by the Defense Advanced Research Projects Agency and the Department of the Army under contract DABT63-92-C-0012. manner [19]. A previous prototype was the subject of <ref> [6] </ref> (a companion paper to [19]). This prototype was based on the Semantic File System protocol [10]. Discover 1 is a new prototype Content Routing System that provides associative access to over 500 Wide Area Information Servers (WAIS) [13] via the World Wide Web.
Reference: 7. <author> D. Eichmann. </author> <title> The RBSE spider balancing effective search against web load. </title> <booktitle> In Proceedings of the First International Conference on the World Wide Web, </booktitle> <address> Geneva, Switzerland, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: In the Community Information System, a simple theorem prover assisted the user in choosing query terms that guaranteed the query could be satisfied at available newswire databases. Web robots like the Web Crawler [17], WWW Worm, ALIWEB [14], and the RBSE Spider <ref> [7] </ref>, gather information about resources on the web for query-based access. However, these systems are not scalable because they use a global indexing strategy, i.e., they attempt to build one database that indexes everything.
Reference: 8. <author> A. Emtage and P. Deutsch. </author> <title> Archie an electronic directory service for the Internet. </title> <booktitle> In USENIX Association Winter Conference Proceedings, </booktitle> <pages> pages 93-110, </pages> <address> San Francisco, </address> <month> Jan. </month> <year> 1992. </year>
Reference-contexts: WAIS [13] combines full text indexing of documents with network-based access. However, there is no facility for routing queries to relevant databases and merging results, nor is there any mechanism for suggesting query terms to users. The Archie system <ref> [8] </ref> polls a fixed set of FTP sites on the Internet. A query yields a set of host/filename pairs which is then used to retrieve the relevant files manually. The Conit system [15, 16] provides a uniform user interface to a large number of databases accessible from several retrieval systems.
Reference: 9. <author> D. K. Gifford. </author> <title> Polychannel systems for mass digital communication. </title> <journal> Comm. ACM, </journal> <volume> 33(2), </volume> <month> Feb. </month> <year> 1990. </year>
Reference-contexts: Query refinement is a unique component of our design that draws on our past experience with the Community Information System <ref> [9] </ref>. In the Community Information System, a simple theorem prover assisted the user in choosing query terms that guaranteed the query could be satisfied at available newswire databases. <p> The approach considered here is based on conditional probability of term collocation. We feel that this approach is more suited to the more heterogeneous environment of today's internet than that of our previous work <ref> [9] </ref>. We have explored using a thesaurus for automatic server clustering and for term suggestions. The traditional use of a thesaurus, however, is to expand the result set by replacing a term with a disjunction of terms from its thesaurus entry [18]. <p> Final list of relevant servers the National Science Foundation. The database covers from the beginning of 1990 to the present <ref> (no abstracts are available before 1990) </ref>. If you use WAIS to retrieve these documents, We'd like to hear about your experience. Please write to stis@nsf.gov. You might also be interested in the nsf-pubs database which contains NSF publications.
Reference: 10. <author> D. K. Gifford et al. </author> <title> Semantic file systems. </title> <booktitle> In Thirteenth ACM Symposium on Operating Systems Principles. ACM, </booktitle> <month> Oct. </month> <year> 1991. </year> <title> Available as Operating Systems Review Volume 25, Number 5. </title>
Reference-contexts: A previous prototype was the subject of [6] (a companion paper to [19]). This prototype was based on the Semantic File System protocol <ref> [10] </ref>. Discover 1 is a new prototype Content Routing System that provides associative access to over 500 Wide Area Information Servers (WAIS) [13] via the World Wide Web. Discover is the first tool on the Web known to the authors to offer query refinement and query routing.
Reference: 11. <author> L. Gravano, A. Tomasic, and H. Garc ia-Molina. </author> <title> The efficacy of GLOSS for the text database discovery problem. </title> <type> Technical Report STAN-CS-TR-93-2, </type> <institution> Stanford University, </institution> <month> Oct. </month> <year> 1993. </year>
Reference-contexts: There is no query refinement capability or even enumeration of field names or values. The user must browse through the SOIF objects to get hints on how to construct queries. The GLOSS system <ref> [11] </ref> also provides a mechanism for finding servers relevant to a query, but it uses a probabilistic scheme. GLOSS characterizes the contents of an information server by extracting a histogram of its words occurrences.
Reference: 12. <author> H. Hahn and R. Stout. </author> <title> The Internet Complete Reference. </title> <publisher> Osborne McGraw-Hill, </publisher> <address> Berkeley, California, </address> <year> 1994. </year>
Reference-contexts: These systems overburden network resources by transmitting entire documents, rather than the index data, or better still, content labels. Furthermore, a content routing system allows greater autonomy to each information provider and content router to tailor its indexing mechanisms and facilities using local knowledge. Veronica <ref> [12] </ref> is a discovery system that maintains an index of document titles from Gopher [1] menus, and it suffers from the same limitations as the Web search systems. Subject-based directories of information, e.g., Planet Earth 2 and the NCSA Meta-Index 3 , provide a useful browsable organization of information.
Reference: 13. <author> B. Kahle and A. Medlar. </author> <title> An information system for corporate users: Wide Area Information Servers. </title> <type> Technical Report TMC-199, </type> <institution> Thinking Machines, Inc., </institution> <month> Apr. </month> <year> 1991. </year> <note> Version 3. </note>
Reference-contexts: A previous prototype was the subject of [6] (a companion paper to [19]). This prototype was based on the Semantic File System protocol [10]. Discover 1 is a new prototype Content Routing System that provides associative access to over 500 Wide Area Information Servers (WAIS) <ref> [13] </ref> via the World Wide Web. Discover is the first tool on the Web known to the authors to offer query refinement and query routing. Our work also represents the first attempt known to us to build a transparent, user-guided distributed information system on top of WAIS servers. <p> At present, these systems are rather ad hoc and static, requiring manual update and maintenance. Network-based information retrieval systems provide associative access to information on remote servers. WAIS <ref> [13] </ref> combines full text indexing of documents with network-based access. However, there is no facility for routing queries to relevant databases and merging results, nor is there any mechanism for suggesting query terms to users. The Archie system [8] polls a fixed set of FTP sites on the Internet.
Reference: 14. <author> M. Koster. </author> <title> ALIWEB archie-like indexing in the web. </title> <booktitle> In Proceedings of the First International Conference on the World Wide Web, </booktitle> <address> Geneva, Switzerland, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: In the Community Information System, a simple theorem prover assisted the user in choosing query terms that guaranteed the query could be satisfied at available newswire databases. Web robots like the Web Crawler [17], WWW Worm, ALIWEB <ref> [14] </ref>, and the RBSE Spider [7], gather information about resources on the web for query-based access. However, these systems are not scalable because they use a global indexing strategy, i.e., they attempt to build one database that indexes everything.
Reference: 15. <author> R. S. Marcus. </author> <title> An experimental comparison of the effectiveness of computers and humans as search intermediaries. </title> <journal> Journal of the American Society for Information Science, </journal> <volume> 34(6) </volume> <pages> 381-404, </pages> <month> Nov. </month> <year> 1983. </year>
Reference-contexts: The Archie system [8] polls a fixed set of FTP sites on the Internet. A query yields a set of host/filename pairs which is then used to retrieve the relevant files manually. The Conit system <ref> [15, 16] </ref> provides a uniform user interface to a large number of databases accessible from several retrieval systems. User queries are translated into commands on the different systems. However, there is no support for the automatic selection of relevant databases for a user's query.
Reference: 16. <author> R. S. Marcus. </author> <title> Advanced retrieval assistance for the DGIS gateway. </title> <type> Technical Report LIDS R-1958, </type> <institution> MIT Laboratory for Information and Decision Systems, </institution> <month> Mar. </month> <year> 1990. </year>
Reference-contexts: The Archie system [8] polls a fixed set of FTP sites on the Internet. A query yields a set of host/filename pairs which is then used to retrieve the relevant files manually. The Conit system <ref> [15, 16] </ref> provides a uniform user interface to a large number of databases accessible from several retrieval systems. User queries are translated into commands on the different systems. However, there is no support for the automatic selection of relevant databases for a user's query.
Reference: 17. <author> B. Pinkerton. </author> <title> Finding what people want: Experiences with the WebCrawler. </title> <booktitle> In Proceedings of the First International Conference on the World Wide Web, </booktitle> <address> Geneva, Switzerland, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: In the Community Information System, a simple theorem prover assisted the user in choosing query terms that guaranteed the query could be satisfied at available newswire databases. Web robots like the Web Crawler <ref> [17] </ref>, WWW Worm, ALIWEB [14], and the RBSE Spider [7], gather information about resources on the web for query-based access. However, these systems are not scalable because they use a global indexing strategy, i.e., they attempt to build one database that indexes everything.
Reference: 18. <author> G. Salton. </author> <title> Introduction to Modern Information Retrieval. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1983. </year>
Reference-contexts: We have explored using a thesaurus for automatic server clustering and for term suggestions. The traditional use of a thesaurus, however, is to expand the result set by replacing a term with a disjunction of terms from its thesaurus entry <ref> [18] </ref>. This has the opposite effect of our query refinement mechanism, which reduces the result set size. We adopt a predicate data model in which user queries consist of boolean combinations of terms. Terms may be either keywords or attributes (field name, value pairs).
Reference: 19. <author> M. A. Sheldon, A. Duda, R. Weiss, J. W. O'Toole, Jr., and D. K. Gifford. </author> <title> A content routing system for distributed information servers. </title> <booktitle> In Proc. Fourth International Conference on Extending Database Technology, </booktitle> <month> Mar. </month> <year> 1994. </year>
Reference-contexts: It uses compact descriptions of information servers, called content labels to accomplish this in an efficient and scalable This work was supported by the Defense Advanced Research Projects Agency and the Department of the Army under contract DABT63-92-C-0012. manner <ref> [19] </ref>. A previous prototype was the subject of [6] (a companion paper to [19]). This prototype was based on the Semantic File System protocol [10]. <p> compact descriptions of information servers, called content labels to accomplish this in an efficient and scalable This work was supported by the Defense Advanced Research Projects Agency and the Department of the Army under contract DABT63-92-C-0012. manner <ref> [19] </ref>. A previous prototype was the subject of [6] (a companion paper to [19]). This prototype was based on the Semantic File System protocol [10]. Discover 1 is a new prototype Content Routing System that provides associative access to over 500 Wide Area Information Servers (WAIS) [13] via the World Wide Web.
References-found: 19

