URL: ftp://theory.lcs.mit.edu/pub/people/oded/dgw1.ps
Refering-URL: http://theory.lcs.mit.edu/~oded/zk.html
Root-URL: 
Title: Hashing Functions can Simplify Zero-Knowledge Protocol Design (too)  
Author: Ivan Damg-ard Oded Goldreich Avi Wigderson 
Address: Jerusalem, Israel.  
Note: and BRICS, Basic Research In Computer Science, Centre of the Danish National Research Foundation.  Work done while visiting BRICS, Basic Research In Computer Science, Centre of the Danish National Research Foundation. Supported in part by grant No. xx-00yyy from the United States Israel Binational Reseach Foundation (BSF), Jerusalem, Israel.  
Affiliation: Dept. of Computer Science, Aarhus Univesity, Denmark  Institute for Computer Science, Hebrew University,  
Date: November 28, 1994  
Abstract: In Crypto93, Damg-ard showed that any constant-round protocol in which the verifier sends only independent, random bits and which is zero-knowledge against the honest verifier can be transformed into a protocol (for the same problem) that is zero-knowledge in general. His transformation was based on the interactive hashing technique of Naor, Ostrovsky, Venkatesan and Yung, and thus the resulting protocol had very large round-complexity. We adopt Damg-ard's methods, using ordinary hashing functions, instead of the abovementioned interactive hashing technique. Typically, the protocols we derive have much lower round-complexity than those derived by Damg-ard's transformation. As in Damg-ard's transformation, our transformation preserves statistical/perfect zero-knowledge and does not rely on any computational assumptions. However, unlike Damg-ard's transformation, the new transformation is not applicable to argument systems or to proofs of knowledge. y Dept. of Applied Math. and Computer Science, Weizmann Institute of Science, Rehovot, Israel. Work done while visiting BRICS, Basic Research In Computer Science, Centre of the Danish National Research Foundation. Supported in part by grant No. 92-00226 from the United States - Israel Binational Reseach Foundation (BSF), Jerusalem, Israel. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. Babai. </author> <title> Trading Group Theory for Randomness, </title> <booktitle> Proc. of 17th STOC, </booktitle> <pages> pages 421-420, </pages> <year> 1985. </year>
Reference-contexts: Recall that the statistical difference between two random variable X and Y is 2 ff jProb (X = ff) Prob (Y = ff)j We say that X is "-away from Y if the statistical difference between them is ". Proposition 1 Let n be an integer, " 2 <ref> [0; 1] </ref> and m def = n 4 log 2 (n="). Suppose that H n;m is a family of almost n-wise independent hashing functions. <p> Such interactive proofs are called Arthur-Merlin games <ref> [1] </ref> or public-coins interactive proofs (cf., [14]). <p> Soundness properties are preserved as well, but with some slackness which results from the imperfectness of the Random Selection protocol. In particular, Proposition 5 Let : f0; 1g fl 7! <ref> [0; 1] </ref> be a function bounding the probability that verifier V accepts inputs when interacting with any (possibly cheating) prover. Namely, (x) is a bound on the probability that V accepts x. Suppose that on input x, the interactive proof (P; V ) runs for t (jxj) rounds. <p> Namely, when producing a transcript with less likely r i 's, the simulator will discard it with some probability. The required probability (with which to discard transcripts) can be easily computed. 4.4 Conclusions Combining Propositions 5 and 6, we get Theorem 1 Let : N 7! <ref> [0; 1] </ref>. Suppose L has a constant-round Arthur-Merlin proof system, with error bound , which is perfect (resp. almost-perfect) [resp. computational] zero-knowledge with respect to the honest verifier.
Reference: [2] <author> M. Bellare, S. Micali and R. Ostrovsky: </author> <title> The (true) Complexity of Statistical Zero-Knowledge, </title> <booktitle> Proc. of STOC 90. </booktitle>
Reference-contexts: Assuming various intractability assumptions, such transformations have been presented by Bellare et. al. <ref> [2] </ref>, and Ostrovsky et. al. [18]. A transformation which does not rely on any intractability assumptions has been presented by Damg-ard in Crypto93. His transformation (of honest-verifier zero-knowledge into general zero-knowledge) has two shortcomings. <p> Other Related Work The idea of transforming honest verifier zero-knowledge into zero-knowledge in general was first studied by Bellare, Micali and Ostrovsky <ref> [2] </ref>. Their transformation needed a computational assumption of a specific algebraic type. Since then several constructions have reduced the computational assumptions needed.
Reference: [3] <author> M. Ben-Or, O. Goldreich, S. Goldwasser, J. H-astad, J. Killian, S. Micali and P. Rog-away: </author> <title> Everything Provable is Provable in Zero-Knowledge, </title> <booktitle> Proc. of Crypto 88. </booktitle>
Reference-contexts: They have proved that the existence of honest verifier zero-knowledge proof system for a language which is "hard on the average" implies the existence of one-way functions. Combined with the results of [12] and <ref> [15, 3] </ref>, this yields a (computational and general) zero-knowledge proof for the same language. Thus, computational honest-verifier zero-knowledge interactive proofs, for "hard on the average" languages, get transformed into computational zero-knowledge interactive proofs for these languages.
Reference: [4] <author> G. Brassard, D. Chaum and C. Crepeau: </author> <title> Minimum Disclosure Proofs of Knowledge, </title> <journal> JCSS. </journal>
Reference-contexts: We preserve some of the positive properties of Damg-ard's transformation. In particular, our transformation does not rely on any computational assumptions and preserves perfect and almost-perfect zero-knowledge. However, unlike Damg-ard's transformation, the new transformation is not applicable to argument systems (i.e., the BCC model <ref> [4] </ref>) or to proofs of knowledge. Our transformation builds on Damg-ard's work [6]. In his transformation, the random messages sent by the verifier (in each round) are replaced by a multi-round interactive hashing protocol, which in turn originates in the work of Naor, Ostrovsky, Venkatesan and Yung [17].
Reference: [5] <author> G. Brassard, C. Crepeau and M. Yung, </author> <title> "Everything in NP can be Argued in Perfect Zero-Knowledge in a Constant Number of Rounds", </title> <booktitle> proceedings of 16th ICALP, </booktitle> <pages> pp. 123-136, </pages> <year> 1989. </year>
Reference: [6] <author> I. Damg-ard: </author> <title> Interactive Hashing can Simplify Zero-Knowledge Protocol Design Without Computational Assumptions, </title> <booktitle> Proc. of Crypto 93. </booktitle>
Reference-contexts: In particular, our transformation does not rely on any computational assumptions and preserves perfect and almost-perfect zero-knowledge. However, unlike Damg-ard's transformation, the new transformation is not applicable to argument systems (i.e., the BCC model [4]) or to proofs of knowledge. Our transformation builds on Damg-ard's work <ref> [6] </ref>. In his transformation, the random messages sent by the verifier (in each round) are replaced by a multi-round interactive hashing protocol, which in turn originates in the work of Naor, Ostrovsky, Venkatesan and Yung [17].
Reference: [7] <author> U. Feige and A. Shamir, </author> <title> "Zero-Knowledge Proofs of Knowledge in Two Rounds", </title> <booktitle> Advances in Cryptology - Crypto89 (proceedings), </booktitle> <pages> pp. 526-544, </pages> <year> 1990. </year>
Reference: [8] <author> O. Goldreich, S. Goldwasser and N. Linial, </author> <title> "Fault-Tolerant Computation without Assumptions: the Two-Party Case", </title> <booktitle> Proc. of 32nd FOCS, </booktitle> <pages> pp. 447-457, </pages> <year> 1991. </year>
Reference-contexts: However, perfect honest-verifier zero-knowledge proofs (for such languages) do not get transformed into perfect zero-knowledge proofs. A two-party protocol for random selection, with unrelated properties, has been presented in <ref> [8] </ref>. This protocol guarantees that, as long as one party plays honestly, the outcome of the protocol hits any set S f0; 1g n with probability at most ~ O ( q where ~ O (") def = " polylog (1=").
Reference: [9] <author> O. Goldreich and A. Kahan, </author> <title> How to Construct Constant-Round Zero-Knowledge Proof Systems for NP, </title> <note> submitted for publication in Journal of Crypology, </note> <year> 1993. </year>
Reference-contexts: Likewise, assuming the existence of one-way function, there exist constant-round interactive proofs for any NP-language which are zero-knowledge with respect to the honest verifier. Yet, constant-round interactive proofs for NP which are zero-knowledge in general are known only under seemingly stronger assumptions and are also more complex (cf., <ref> [9] </ref>). In view of the relative simplicity of designing protocols which are zero-knowledge with respect to the honest verifier, a transformation of such protocols into protocols which are zero-knowledge in general (i.e., wrt any verifier) may be very valuable.
Reference: [10] <author> O. Goldreich and H. Krawcyzk, </author> <title> "On the Composition of Zero-Knowledge Proof Systems", </title> <booktitle> proceedings of 17th ICALP, </booktitle> <pages> pp. 268-282, </pages> <year> 1990. </year>
Reference-contexts: However, it also increase the error probability of the proof system by a non-negligible amount which can be made arbitrarily small. This increase is inevitible in view of a result of Goldreich and Krawcyzk <ref> [10] </ref>, see discussion in subsection 4.4. Thus, to get proof systems with negligible error probability, one may repeat the protocols resulting from our transformation a non-constant number of times. Still, the resulting proof systems will have much lower round complexity than those resulting from Damg-ard's transformation. <p> For black-box zero-knowledge we require that there exists a universal simulator, which given access to any efficient verifier, can simulate the interaction of the prover with this verifier. For further details see <ref> [10] </ref>. 3 Random Selection We consider a randomized two-party protocol for selecting strings. The two parties to the protocol are called the challenger and the responder. These names are supposed to reflect the asymmetric requirements (presented below) as well as the usage of the protocol in our zero-knowledge transformation. <p> Furthermore, the zero-knowledge property can be demonstrated using a black-box simulation. Also, if the original system had no error on inputs in L then the same holds for the new system. Theorem 1 does not preserve the error probability of the original system. This seems inevitible, in light of <ref> [10] </ref>. Recall that there are languages believed not to be in BPP which have constant-round Arthur-Merlin proof systems, with exponentially small error probability, which are zero-knowledge with respect to the honest verifier. <p> Now, a stronger version of Theorem 1, say one in which 0 (n) (n) is a negligible function of n, would imply that these languages have constant-round Arthur-Merlin (balck-box) zero-knowledge proof systems (with negligible error probability). But, according to <ref> [10] </ref>, languages having constant-round Arthur-Merlin (balck-box) zero-knowledge proof systems lie in BPP. Needless to say that N P and even Graph Non-Isomorphism are believed not to lie in BPP. 15
Reference: [11] <author> O. Goldreich, Y. Mansour and M. Sipser: </author> <title> Proofs that Never Fail and Random Selection, </title> <booktitle> Proc. of FOCS 87. </booktitle>
Reference-contexts: Another two-party protocol for random selection, with other unrelated properties, has been presented in <ref> [11] </ref>.
Reference: [12] <author> O. Goldreich, S. Micali and A. Wigderson: </author> <title> Proofs that yield Nothing but their Validity and a Methodology of Cryptographic Protocol Design, </title> <booktitle> Proc. of FOCS 86. </booktitle>
Reference-contexts: 1 Introduction Zero-knowledge proof systems, introduced by Goldwasser, Micali and Rackoff [13], are a key tool in the design of cryptographic protocols. The results of Goldreich, Micali and Wigder-son <ref> [12] </ref> guarantee that such proof systems can be constructed for any NP-statement, provided that one-way functions exist. However, the general construction presented in [12] and subsequent works may yield quite inefficient proof systems for particular applications of interest. <p> The results of Goldreich, Micali and Wigder-son <ref> [12] </ref> guarantee that such proof systems can be constructed for any NP-statement, provided that one-way functions exist. However, the general construction presented in [12] and subsequent works may yield quite inefficient proof systems for particular applications of interest. Thus, developing methodoligies for the design of zero-knowledge proofs is still of interest. <p> They have proved that the existence of honest verifier zero-knowledge proof system for a language which is "hard on the average" implies the existence of one-way functions. Combined with the results of <ref> [12] </ref> and [15, 3], this yields a (computational and general) zero-knowledge proof for the same language. Thus, computational honest-verifier zero-knowledge interactive proofs, for "hard on the average" languages, get transformed into computational zero-knowledge interactive proofs for these languages. <p> Loosely speaking, we require that 2 This includes, for example, the perfect zero-knowledge proofs for Graph Isomorphism and the computational zero-knowledge proofs for NP, but not the perfect zero-knowledge proof for Graph Non-Isomorphism <ref> [12] </ref>. * if the challenger follows the protocol then, no matter which strategy is used by the responder, the output of the protocol is almost uniformly distributed; * if the responder follows the protocol then, no string may appear with probability much greater than its probability under the uniform distribution. <p> For example, Graph Isomorphism has such a system (for perfect zero-knowledge), and assuming the existence of one-way functions, every language in N P has such a system (for computational zero-knowledge) <ref> [12] </ref>. Now, a stronger version of Theorem 1, say one in which 0 (n) (n) is a negligible function of n, would imply that these languages have constant-round Arthur-Merlin (balck-box) zero-knowledge proof systems (with negligible error probability).
Reference: [13] <author> S. Goldwasser, S. Micali and C. Rackoff: </author> <title> The Knowledge Complexity of Interactive Proof Systems, </title> <journal> SIAM J. Computing, </journal> <volume> Vol. 18, </volume> <pages> pp. 186-208, </pages> <year> 1989. </year> <month> 16 </month>
Reference-contexts: 1 Introduction Zero-knowledge proof systems, introduced by Goldwasser, Micali and Rackoff <ref> [13] </ref>, are a key tool in the design of cryptographic protocols. The results of Goldreich, Micali and Wigder-son [12] guarantee that such proof systems can be constructed for any NP-statement, provided that one-way functions exist.
Reference: [14] <author> S. Goldwasser and M. Sipser. </author> <title> Private Coins versus Public Coins in Interactive Proof Systems, </title> <booktitle> Proc. of 18th STOC, </booktitle> <pages> pages 59-68, </pages> <year> 1986. </year>
Reference-contexts: Such interactive proofs are called Arthur-Merlin games [1] or public-coins interactive proofs (cf., <ref> [14] </ref>).
Reference: [15] <author> R. Impagliazzo and M. Yung, </author> <title> Direct Minimum-Knowledge Computations, </title> <booktitle> Advances in Cryptology - Crypto87 (proceedings), </booktitle> <year> 1987, </year> <pages> pp. 40-51. </pages>
Reference-contexts: They have proved that the existence of honest verifier zero-knowledge proof system for a language which is "hard on the average" implies the existence of one-way functions. Combined with the results of [12] and <ref> [15, 3] </ref>, this yields a (computational and general) zero-knowledge proof for the same language. Thus, computational honest-verifier zero-knowledge interactive proofs, for "hard on the average" languages, get transformed into computational zero-knowledge interactive proofs for these languages.
Reference: [16] <author> M. Naor: </author> <title> Bit Commitments from Pseudorandomness, </title> <booktitle> Proc. of Crypto 89. </booktitle>
Reference: [17] <author> M. Naor, R. Ostrovsky, R. Venkatesan and M. Yung: </author> <title> Zero-Knowledge Arguments for NP can be Based on General Complexity Assumptions, </title> <booktitle> Proc. of Crypto 92. </booktitle>
Reference-contexts: Our transformation builds on Damg-ard's work [6]. In his transformation, the random messages sent by the verifier (in each round) are replaced by a multi-round interactive hashing protocol, which in turn originates in the work of Naor, Ostrovsky, Venkatesan and Yung <ref> [17] </ref>. Instead, in our transformation, the random messages sent by the verifier are replaced by a 3=2-round protocol, called Random Selection.
Reference: [18] <author> R. Ostrovsky, R. Venkatesan and M. Yung: </author> <title> Interactive Hashing Simplifies Zero-Knowledge Protocol Design, </title> <booktitle> Proc. of EuroCrypt 93. </booktitle>
Reference-contexts: Assuming various intractability assumptions, such transformations have been presented by Bellare et. al. [2], and Ostrovsky et. al. <ref> [18] </ref>. A transformation which does not rely on any intractability assumptions has been presented by Damg-ard in Crypto93. His transformation (of honest-verifier zero-knowledge into general zero-knowledge) has two shortcomings. <p> Their transformation needed a computational assumption of a specific algebraic type. Since then several constructions have reduced the computational assumptions needed. The latest in this line of work is by Ostrovsky, Venkatesan and Yung <ref> [18] </ref>, who give a transformation which is based on 2 interactive hashing and preserved statistical zero-knowledge. Their transformation relies on existence of a one-way permutation. The transformation works for any protocol, provided that the verifier is probabilistic polynomial-time.
Reference: [19] <author> R. Ostrovsky and A. Wigderson: </author> <title> One-Way Functions are Essential for Non-Trivial Zero-Knowledge, </title> <booktitle> Proc. 2nd Israel Symp. on Theory of Computing and Systems, </booktitle> <year> 1993. </year> <month> 17 </month>
Reference-contexts: The transformation works for any protocol, provided that the verifier is probabilistic polynomial-time. An indirect way of converting protocols which are zero-knowledge with respect to the honest verifier into ones which are zero-knowledge in general, is available through a recent result of Ostrovsky and Wigderson <ref> [19] </ref>. They have proved that the existence of honest verifier zero-knowledge proof system for a language which is "hard on the average" implies the existence of one-way functions. Combined with the results of [12] and [15, 3], this yields a (computational and general) zero-knowledge proof for the same language.
References-found: 19

