URL: http://www.cs.nmsu.edu/lldap/download/lpco.ps.Z
Refering-URL: http://www.cs.nmsu.edu/lldap/pub_lp/lpco.html
Root-URL: http://www.cs.nmsu.edu
Email: fdtang,epontell,guptag@cs.nmsu.edu boris@dia.fi.upm.es  
Title: Last Parallel Call Optimization and Fast Backtracking in And-parallel Logic Programming Systems  
Author: Tang DongXing, Enrico Pontelli Manuel Carro Gopal Gupta 
Address: 28660-Boadilla del Monte Las Cruces NM USA Madrid, Spain  
Affiliation: Laboratory for Logic and Databases Facultad de Informatica Dept of Computer Science Universidad Politecnica de Madrid New Mexico State University  
Abstract: In this paper we present a novel optimization called Last Parallel Call Optimization. The last parallel call optimization can be regarded as an extension of last call optimization, found in sequential systems, to and-parallel systems. The last parallel call optimization leads to improved time and space performance for a majority of and-parallel programs. The last parallel call optimization is presented in detail in this paper and its advantages discussed at length. The last parallel call optimization can be incorporated in a parallel system (such as RAPWAM) through relatively minor modifications to the runtime machinery. We also present some experimental results from a limited implementation of last parallel call operation done on the DDAS System. These experimental results prove that last parallel call optimization is indeed effective and produces better speed-ups with respect to an un-optimized implementation. We also discuss the problem of efficiently performing the kill operation in and-parallel systems. We present two approaches for efficiently propagating the kill signal to other parallel calls subsumed by the subgoal that received the kill signal. The first approach, implemented in the and-parallel component of the ACE system, propagates the kill lazily while the second one propagates the kill signal eagerly. The advantages and disadvantages of both these approaches are presented. The implementation and optimization techniques presented in this paper are very pragmatic and we believe that they will be of considerable utility to implementors of and-parallel systems. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Barklund, H. Millroth. </author> <title> Providing Iteration and Concurrency in Logic Program through Bounded Quantifications. </title> <booktitle> In Proc. International Conf. on Fifth Generation Computer Systems, </booktitle> <month> June </month> <year> 1992, </year> <pages> pages 817-824. </pages>
Reference: [2] <author> D. </author> <title> DeGroot. Restricted AND-parallelism. </title> <booktitle> In International Conference on Fifth Generation Computer Systems, </booktitle> <month> Nov., </month> <year> 1984. </year>
Reference: [3] <author> G. Gupta, </author> <title> "Parallel Execution of Logic Programs on Shared Memory Multiprocessors," </title> <type> Ph.D. Thesis, </type> <institution> University of North Carolina, </institution> <month> Dec. </month> <year> 1991. </year>
Reference: [4] <author> G.Gupta, E. Pontelli, M. Hermenegildo, V. Santos Costa. </author> <title> ACE: And/Or-parallel Copying-based Execution of Logic Programs. </title> <booktitle> In Proc. International Conference on Logic Programming, </booktitle> <year> 1994, </year> <note> MIT PRess, to appear. </note>
Reference: [5] <author> M. V. Hermenegildo. </author> <title> An Abstract Machine for Restricted AND-parallel Execution of Logic Programs. </title> <booktitle> In Third International Conference on Logic Programming, Lecture Notes in Computer Science 225, </booktitle> <pages> pages 25-40. </pages> <publisher> Springer-Verlag, </publisher> <month> July </month> <year> 1986. </year>
Reference: [6] <author> M. V. Hermenegildo, R. I. Nasr, </author> <title> Efficient Implementation of backtracking in AND-parallelism. </title> <booktitle> In 3rd International Conference on Logic Programming, </booktitle> <address> London, </address> <year> 1986. </year> <pages> pages 40-54. </pages>
Reference: [7] <author> D. Jacobs and A. Langen. </author> <title> Accurate and Efficient Approximation of Variable Aliasing in Logic Programs. </title> <booktitle> In 1989 North American Conference on Logic Programming. </booktitle> <publisher> MIT Press, </publisher> <month> October </month> <year> 1989. </year>
Reference: [8] <author> K. Muthukumar and M. Hermenegildo. </author> <title> Compile-time Derivation of Variable Dependency Using Abstract Interpretation. </title> <journal> Journal of Logic Programming, </journal> <volume> 13(2 and </volume> 3):315-347, July 1992. 
Reference: [9] <author> E. Pontelli, G. Gupta, M. Hermenegildo. </author> <title> ACE: A progress Report. </title> <type> Technical Report. </type> <institution> Department of Computer Science. New Mex-ico State University, </institution> <month> March </month> <year> 1994. </year>
Reference: [10] <author> E. Pontelli, M. Carro, G. Gupta, </author> <title> "Kill and Backtracking in And-parallel Systems," </title> <type> Internal Report, </type> <institution> ACE Project, Department of Computer Science, New Mexico State University, </institution> <month> Dec. </month> <year> 1993. </year>
Reference: [11] <author> K. Shen: </author> <title> Studies in And/Or Parallelism in Prolog. </title> <type> Ph.D thesis, </type> <institution> University of Cam-bridge, </institution> <year> 1992. </year>
Reference: [12] <author> D. H. D. Warren. </author> <title> Last Call Optimization. "An Improved Prolog Implementation Which Optimises Tail Recursion," </title> <booktitle> In 2nd International Logic Programming Conference, </booktitle> <year> 1984, </year> <editor> K. Clark and S. A. Tarnlund (eds). </editor> <title> Academic Press. </title> <note> Also Research Paper 156, DAI, </note> <institution> Univ. of Edinburgh, </institution> <year> 1980. </year> <month> 15 </month>
References-found: 12

