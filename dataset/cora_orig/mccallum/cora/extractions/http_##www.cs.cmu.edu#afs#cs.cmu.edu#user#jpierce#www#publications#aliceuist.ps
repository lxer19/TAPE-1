URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/user/jpierce/www/publications/aliceuist.ps
Refering-URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/user/jpierce/www/publications/publications.html
Root-URL: 
Email: -jpierce, pausch- @cs.cmu.edu  
Title: Alice: Easy to Use Interactive 3D Graphics toward addressing the 3D authoring problem. The goal
Author: Jeffrey S. Pierce Steve Audia, Tommy Burnette, Kevin Christiansen, Dennis Cosgrove, Matt Conway, Ken Hinckley, Kristen Monkaitis, James Patten, Joe Shochet, David Staack, Brian Stearns, Chris Sturgill, George Williams, Randy Pausch 
Keyword: Virtual reality, 3D graphics, rapid prototyping, usability engineering  
Address: 5000 Forbes Ave, Pittsburgh, PA 15213  
Affiliation: Computer Science Department, Carnegie Mellon University  
Abstract: Alice runs on Windows 95 computers, and does not require hardware acceleration for acceptable performance. This illustration is a screengrab of one of the worlds that has been built using Alice. These opening shots are the default worlds we provide with Alice. Users can also easily create their own worlds if they dont want to use one of the defaults. The author of this particular world has brought our Alice model into the world and placed her on the island. UIST attendees will have the opportunity to experiment with Alice and create worlds of their own. ABSTRACT Alice is a rapid prototyping system used to create three dimensional graphics simulations like those seen in virtual reality applications. Alice uses an interpreted language called Python as its scripting language to implement user actions. This interactive development environment allows users to explore many more design options than is possible in a compiled language environment. The alpha version of Alice for Windows 95 is available for free over the internet, with the beta release scheduled for August. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Guido van Rossum, </author> <title> Interactively Testing Remote Servers Using the Python Programming Language. </title> <note> This paper and the Python programming language is available from http://www.python.org </note>
Reference: [2] <author> Seymour Papert, MindStorms: </author> <title> Children, Computers, and Powerful Ideas , Basic Books, </title> <address> New York, </address> <year> 1980. </year>
Reference-contexts: Instead, Alice users move objects Forward/Back, Left/Right, and Up/Down, making Alice feel a great deal like a 3D version of LOGO <ref> [2] </ref>. Another problem with current APIs is that they only provide primitive operations. Creating high level behaviors for objects using these APIs has been compared to baking an apple pie given the periodic table. We have tried to provide a number of high level commands for specifying object behaviors.
Reference: [3] <editor> Stephen Kosslyn, </editor> <publisher> Image and Mind , Harvard University Press, </publisher> <address> Cambridge, Mass, </address> <year> 1980. </year>
Reference-contexts: ALICE IS EASY Much work has gone into creating a system that lowers the cognitive burden of creating 3D interactive programs. To do this, we have used findings in the spatial understanding literature <ref> [3] </ref> [4] to help structure the way programmers think about problems in three dimensional object placement and dynamic behavior. These findings are reflected in the design of behavioral abstractions provided in the Alice API. Alice has also undergone a constant user testing process throughout its development.
Reference: [4] <author> M. C. </author> <booktitle> Corballis The Nature of the Left-Right Coding . Paper presented at the annual meeting of the American Psychological Association, </booktitle> <address> Los Angeles, </address> <year> 1981. </year>
Reference-contexts: ALICE IS EASY Much work has gone into creating a system that lowers the cognitive burden of creating 3D interactive programs. To do this, we have used findings in the spatial understanding literature [3] <ref> [4] </ref> to help structure the way programmers think about problems in three dimensional object placement and dynamic behavior. These findings are reflected in the design of behavioral abstractions provided in the Alice API. Alice has also undergone a constant user testing process throughout its development.
References-found: 4

