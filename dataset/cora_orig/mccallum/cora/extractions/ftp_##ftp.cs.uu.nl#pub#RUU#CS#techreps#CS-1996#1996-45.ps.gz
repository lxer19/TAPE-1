URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1996/1996-45.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Phone: 2  4  
Title: Relative Undecidability in Term Rewriting  
Author: Alfons Geser Aart Middeldorp ? Enno Ohlebusch Hans Zantema ?? 
Address: Germany  Germany  Netherlands  
Affiliation: 1 University of Passau,  University of Tsukuba, Japan 3 University of Bielefeld,  Utrecht University, The  
Abstract: For two hierarchies of properties of term rewriting systems related to confluence and termination, respectively, we prove relative undecidability: for implications X ) Y in the hierarchies the property X is undecidable for term rewriting systems satisfying Y .
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> A.-C. Caron, </author> <title> Linear Bounded Automata and Rewrite Systems: Influence of Initial Configuration on Decision Properties, </title> <booktitle> Proceedings of the 15th Colloquium on Trees in Algebra and Programming, Lecture Notes in Computer Science 493 (1991) 74-89. </booktitle>
Reference: 2. <author> M. Dauchet, </author> <title> Simulation of Turing Machines by a Regular Rewrite Rule, </title> <note> Theoretical Computer Science 103 (1992) 109-120. </note>
Reference: 3. <author> N. Dershowitz and J.-P. Jouannaud, </author> <title> Rewrite Systems, </title> <booktitle> in: Handbook of Theoretical Computer Science, </booktitle> <volume> Vol. </volume> <editor> B (ed. J. van Leeuwen), </editor> <publisher> North-Holland (1990) 243-320. </publisher>
Reference-contexts: In the next section this is done for the confluence hierarchy and in Sect. 3 for the termination hierarchy. These two sections can be read independently. The definitions of the various properties are given in the respective sections; for further preliminaries on term rewriting we refer to <ref> [3, 10] </ref>. <p> A TRS R is said to have unique normal forms with respect to reduction (UN ! ) if every term has at most one normal form. The above definition of strong confluence originates from Huet [8] and is different from the one in Dershowitz and Jouannaud <ref> [3] </ref>. They call a TRS R strongly confluent if R ! R ! = R = R . Klop [10] calls the latter property subcommutativity (WCR 1 ).
Reference: 4. <author> M.C.F. Ferreira, </author> <title> Termination of Term Rewriting: Well-foundedness, Totality, and Transformations, </title> <type> PhD thesis, </type> <institution> University of Utrecht, </institution> <year> 1995. </year>
Reference-contexts: A TRS R is called self-embedding if it admits a reduction t ! + R u ! fl Emb t for some terms t, u. Recent investigations of these notions include <ref> [4, 5, 16, 19, 20, 23] </ref>. Validity of most of the implications in the termination hierarchy is direct from the definitions; only TT ) ST requires some well-known argument, see e.g. [20], and NSE ) SN requires Kruskal's theorem. <p> We take lexicographic status for each function symbol, F left-to-right and G right-to-left. The induced Knuth-Bendix order orients each rule from left to right. By a result of Ferreira <ref> [4, Thm. 4.47] </ref> the TRS S 6 (P ) is not only terminating, but even totally terminating. ut Proposition 26 [6]. The TRS S 6 (P ) is !-terminating if and only if P admits no solution. Proof. Let fl 2 + be a solution for P .
Reference: 5. <author> M.C.F. Ferreira and H. Zantema, </author> <title> Total Termination of Term Rewriting, </title> <booktitle> Applicable Algebra in Engineering, Communication and Computing 7 (1996) 133-162. </booktitle> <pages> 17 </pages>
Reference-contexts: A TRS R is called self-embedding if it admits a reduction t ! + R u ! fl Emb t for some terms t, u. Recent investigations of these notions include <ref> [4, 5, 16, 19, 20, 23] </ref>. Validity of most of the implications in the termination hierarchy is direct from the definitions; only TT ) ST requires some well-known argument, see e.g. [20], and NSE ) SN requires Kruskal's theorem.
Reference: 6. <author> A. Geser, </author> <title> Omega-termination is Undecidable for Totally Terminating Term Rewrit--ing Systems, </title> <type> Technical Report MIP-9608, </type> <institution> Universitat Passau (1996). </institution>
Reference-contexts: 8 &gt; &gt; : G (x; a (y); z; a (w); u) ! G (a (x); y; a (z); w; u) for all a 2 F (ff (x); y; fi (z); w; u) ! F (x; ff (y); z; fi (w); u) for all (ff; fi) 2 P Proposition 25 <ref> [6] </ref>. The TRS S 6 (P ) is totally terminating for every PCP in-stance P . Proof. We use the Knuth-Bendix order ([11]) where h is assigned weight 0, and every other function symbol weight 1. <p> We take lexicographic status for each function symbol, F left-to-right and G right-to-left. The induced Knuth-Bendix order orients each rule from left to right. By a result of Ferreira [4, Thm. 4.47] the TRS S 6 (P ) is not only terminating, but even totally terminating. ut Proposition 26 <ref> [6] </ref>. The TRS S 6 (P ) is !-terminating if and only if P admits no solution. Proof. Let fl 2 + be a solution for P . <p> Hence S 6 (P ) is not !-terminating. This leaves to prove that S 6 (P ) is !-terminating if P has no solution. Here we sketch the proof, for more details we refer to <ref> [6] </ref>. For a ground term t, let ktk denote the number of barred and unbarred letters in t not below an F , G, or h symbol.
Reference: 7. <author> G. Huet and D. Lankford, </author> <title> On the Uniform Halting Problem for Term Rewriting Systems, </title> <type> report 283, </type> <note> INRIA (1978). </note>
Reference: 8. <author> G. Huet, </author> <title> Confluent Reductions: Abstract Properties ans Applications to Term Rewriting Systems, </title> <note> Journal of the ACM 27 (1980) 797-821. </note>
Reference-contexts: A TRS R is said to have unique normal forms with respect to reduction (UN ! ) if every term has at most one normal form. The above definition of strong confluence originates from Huet <ref> [8] </ref> and is different from the one in Dershowitz and Jouannaud [3]. They call a TRS R strongly confluent if R ! R ! = R = R . Klop [10] calls the latter property subcommutativity (WCR 1 ). <p> Hence ff 1 ff n (c) = fi 1 fi n (c), giving a solution for P . ut Below we make frequent use of the following result of Huet <ref> [8] </ref>. Theorem 2. Every linear strongly closed TRS is strongly confluent. ut Here a TRS R is called strongly closed if both s ! = R fl R fl for every critical pair hs; ti of R. 2.1 NF ) UN Proposition 3.
Reference: 9. <author> G. Huet and D.C. Oppen, </author> <title> Equations and Rewrite Rules: A Survey, in: Formal Language Theory: Perspectives and Open Problems (ed. </title> <editor> R. </editor> <publisher> Book), Academic Press (1980) 349-405. </publisher>
Reference: 10. <author> J.W. Klop, </author> <title> Term Rewriting Systems, </title> <booktitle> in: Handbook of Logic in Computer Science (eds. </booktitle> <editor> S. Abramski, D. Gabbay and T. Maibaum), </editor> <volume> Volume 2, </volume> <publisher> Oxford University Press (1992) 1-116. </publisher>
Reference-contexts: In the next section this is done for the confluence hierarchy and in Sect. 3 for the termination hierarchy. These two sections can be read independently. The definitions of the various properties are given in the respective sections; for further preliminaries on term rewriting we refer to <ref> [3, 10] </ref>. <p> The above definition of strong confluence originates from Huet [8] and is different from the one in Dershowitz and Jouannaud [3]. They call a TRS R strongly confluent if R ! R ! = R = R . Klop <ref> [10] </ref> calls the latter property subcommutativity (WCR 1 ). Below we use PCP to show that for each of the five implications X ) Y in the confluence hierarchy the property X is undecidable for TRSs satisfying the property Y .
Reference: 11. <author> D.E. Knuth and P.B. Bendix, </author> <title> Simple Word Problems in Universal Algebras, in: Computational Problems in Abstract Algebra (ed. </title> <editor> J. Leech), </editor> <publisher> Pergamon Press (1970) 263-297. </publisher>
Reference: 12. <author> M. Kurihara and A. Ohuchi, </author> <title> Modularity of Simple Termination of Term Rewriting Systems, </title> <note> Journal of IPS Japan 31 (1990) 633-642. </note>
Reference: 13. <author> P. Lescanne, </author> <title> On Termination of One Rule Rewrite Systems, </title> <note> Theoretical Computer Science 132 (1994) 395-401. </note>
Reference-contexts: (z)) ! F (a (z); a (z); a (z)) for all a 2 S (P ) = F (x; a (y); x; a (y)) ! F (a (x); y; a (x); y) for all a 2 The system R (P ) is a minor modification of the basic system from <ref> [13] </ref>; the 8 system S (P ) is from [22]. The next well-known proposition is the motivation for defining these systems. Proposition 14. The following statements are equivalent: 1. The TRS R (P ) is terminating. 2. The TRS S (P ) is terminating. 3.
Reference: 14. <author> Y. Matiyasevich and G. Senizergues, </author> <title> Decision Problems for Semi-Thue Systems with a Few Rules. </title> <booktitle> Proceedings of the 11th IEEE Annual Symposium on Logic in Computer Science, </booktitle> <address> New Brunswick, </address> <pages> pp. 523-531, </pages> <year> 1996. </year>
Reference-contexts: Matiyasevich and Senizergues <ref> [14] </ref> recently showed that PCP is undecidable even when restricted to instances consisting of seven pairs.
Reference: 15. <author> A. Middeldorp and B. Gramlich, </author> <title> Simple Termination is Difficult, </title> <booktitle> Applicable Algebra in Engineering, Communication and Computing 6 (1995) 115-128. </booktitle>
Reference: 16. <author> A. Middeldorp and H. Zantema, </author> <title> Simple Termination Revisited, </title> <booktitle> Proceedings of the 12th International Conference on Automated Deduction, </booktitle> <address> Nancy, </address> <note> Lecture Notes in Artificial Intelligence 814 (1994) 451-465. Extended version to appear as Simple Termination of Rewrite Systems in Theoretical Computer Science 175 (1997). </note>
Reference-contexts: A TRS R is called self-embedding if it admits a reduction t ! + R u ! fl Emb t for some terms t, u. Recent investigations of these notions include <ref> [4, 5, 16, 19, 20, 23] </ref>. Validity of most of the implications in the termination hierarchy is direct from the definitions; only TT ) ST requires some well-known argument, see e.g. [20], and NSE ) SN requires Kruskal's theorem. <p> For infinite TRSs over infinite signatures the termination hierarchy is more complicated: if the notion of embedding is not changed then NSE ) SN does not hold any more, if the notions of embedding and simple termination are adjusted as motivated in <ref> [16] </ref>, then the implication TT ) ST no longer holds ([16]). In this paper however we consider only finite TRSs over finite signatures. All TRSs needed for the termination hierarchy are modifications of two basic TRSs parameterized by an arbitrary PCP instance P .
Reference: 17. <author> D.A. Plaisted, </author> <title> The Undecidability of Self-Embedding for Term Rewriting Systems, </title> <note> Information Processing Letters 20 (1985) 61-64. </note>
Reference: 18. <author> E. Post, </author> <title> A Variant of a Recursively Unsolvable Problem, </title> <journal> Bulletin of the American Mathematical Society 52 (1946) 264-268. </journal>
Reference: 19. <author> A. Rubio, </author> <title> Extension Orderings, </title> <booktitle> Proceedings of the 22nd International Colloquium on Automata, Languages and Programming, Szeged, Lecture Notes in Computer Science 944 (1995) 511-522. </booktitle>
Reference-contexts: A TRS R is called self-embedding if it admits a reduction t ! + R u ! fl Emb t for some terms t, u. Recent investigations of these notions include <ref> [4, 5, 16, 19, 20, 23] </ref>. Validity of most of the implications in the termination hierarchy is direct from the definitions; only TT ) ST requires some well-known argument, see e.g. [20], and NSE ) SN requires Kruskal's theorem.
Reference: 20. <author> H. Zantema, </author> <title> Termination of Term Rewriting: Interpretation and Type Elimination, </title> <note> Journal of Symbolic Computation 17 (1994) 23-50. </note>
Reference-contexts: A TRS R is called self-embedding if it admits a reduction t ! + R u ! fl Emb t for some terms t, u. Recent investigations of these notions include <ref> [4, 5, 16, 19, 20, 23] </ref>. Validity of most of the implications in the termination hierarchy is direct from the definitions; only TT ) ST requires some well-known argument, see e.g. [20], and NSE ) SN requires Kruskal's theorem. <p> Recent investigations of these notions include [4, 5, 16, 19, 20, 23]. Validity of most of the implications in the termination hierarchy is direct from the definitions; only TT ) ST requires some well-known argument, see e.g. <ref> [20] </ref>, and NSE ) SN requires Kruskal's theorem. None of the implications are equivalences: for all implications X ) Y in the termination hierarchy a TRS exists satisfying Y but not X. <p> It is not difficult to see that there exists an infinite reduction in which all steps take place at the root position and both kinds of rewrite rules are used infinitely often. (This can be shown formally using type elimination <ref> [20] </ref>.) Any such reduction must contain a subsequence of the form F (c; c; a (t)) ! F (a (t); a (t); a (t)) ! + F (c; c; a (t))) where in the underbraced part only rewrite rules of the form F (ff (x); fi (y); z) ! F (x; <p> Define f A (t) = G A ([fl (c)]; c A ; [fl (c)]; c A ; t). The above reduction proves !-termination of the single rule h (f (x)) ! f (h (h (x))), contradicting <ref> [20, Prop. 11] </ref>. Hence S 6 (P ) is not !-terminating. This leaves to prove that S 6 (P ) is !-terminating if P has no solution. Here we sketch the proof, for more details we refer to [6].
Reference: 21. <author> H. Zantema, </author> <title> Termination of Term Rewriting by Semantic Labelling, </title> <note> Fundamenta Informaticae 24 (1995) 89-105. </note>
Reference-contexts: The TRS S 3 (P ) is terminating for every PCP instance P . Proof. We apply semantic labelling as described in <ref> [21] </ref>. As model M we choose two elements 0, 1, with interpretations F M (x; y; z) = G M (x; y; z) = a M (x) = c M = 1 and h M (x) = 0 for all x; y; z 2 f0; 1g and a 2 . <p> &gt; &gt; &gt; : F 1 (^a (x); y; ^a (x); y) ! F 1 (a (x); y; a (x); y) for all a 2 F 1 (ff (x); y; fi (z); w) ! F 1 (x; ff (y); z; fi (w)) for all (ff; fi) 2 P 13 From <ref> [21] </ref> we know that S 5 (P ) is terminating if and only if S 0 5 (P ) is terminating.
Reference: 22. <author> H. Zantema, </author> <title> Total Termination of Term Rewriting is Undecidable, </title> <note> Journal of Symbolic Computation 20 (1995) 43-60. </note>
Reference-contexts: for all a 2 S (P ) = F (x; a (y); x; a (y)) ! F (a (x); y; a (x); y) for all a 2 The system R (P ) is a minor modification of the basic system from [13]; the 8 system S (P ) is from <ref> [22] </ref>. The next well-known proposition is the motivation for defining these systems. Proposition 14. The following statements are equivalent: 1. The TRS R (P ) is terminating. 2. The TRS S (P ) is terminating. 3. The PCP instance P admits no solution. Proof. <p> Here jtj denotes the number of function symbols in t. Since for length-preserving TRSs termination and simple termination coincide, this proves that both simple termination and self-embeddingness are undecidable. The main result of <ref> [22] </ref> is that S (P ) is totally terminating if and only if P admits no solution, proving undecidability of total termination. 3.1 NL ) AC S 1 (P ) = F (c; c; a (z)) ! g (F (a (z); a (z); a (z))) for all a 2 Proposition 15. <p> The TRS S 5 (P ) is totally terminating if and only if P admits no solution. Proof. Assume P admits no solution. According to <ref> [22] </ref> the TRS S (P ) is totally terminating, hence admits a compatible well-founded monotone algebra (A; &gt;) with &gt; a total order on A.
Reference: 23. <author> H. Zantema and A. Geser, </author> <title> Non-Looping Rewriting, </title> <institution> Utrecht University, Department of Computer Science, </institution> <note> report UU-CS-1996-03 (1996). 18 </note>
Reference-contexts: A TRS R is called self-embedding if it admits a reduction t ! + R u ! fl Emb t for some terms t, u. Recent investigations of these notions include <ref> [4, 5, 16, 19, 20, 23] </ref>. Validity of most of the implications in the termination hierarchy is direct from the definitions; only TT ) ST requires some well-known argument, see e.g. [20], and NSE ) SN requires Kruskal's theorem.
References-found: 23

