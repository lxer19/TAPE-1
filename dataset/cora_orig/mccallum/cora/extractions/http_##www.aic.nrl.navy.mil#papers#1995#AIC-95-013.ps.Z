URL: http://www.aic.nrl.navy.mil/papers/1995/AIC-95-013.ps.Z
Refering-URL: http://www.aic.nrl.navy.mil/papers/1995/
Root-URL: 
Email: Email: gref@aic.nrl.navy.mil  
Date: 16 February 1995  
Address: Code 5514  Washington, DC 20375-5337  
Affiliation: Navy Center for Applied Research in Artificial Intelligence  Naval Research Laboratory  
Note: John Grefenstette  
Abstract: Virtual Genetic Algorithms: First Results Abstract An important goal of the theory of genetic algorithms is to build models that predict how well genetic algorithms are expected to perform on a given fitness landscape (i.e., a given combination of representation, fitness function, and set of genetic operators). This paper describes the design of a software tool called a virtual genetic algorithm (VGA) that predicts the behavior of a genetic algorithm. The VGA operates like a genetic algorithm except that evaluations of individuals are based on empirically derived statistical fitness models. Because it by-passes the evaluation process, the VGA can be executed in a fraction of the time of the GA that it models, allowing multiple exploratory runs that produce average-case, best-case and worst-case predictions. We discuss ways to build the required models based on a preliminary exploration of the fitness landscape. Our initial results show that the VGA can provide a cost effective way to explore the likely performance of alternative genetic representations and operators.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Altenberg, L. </author> <year> (1994). </year> <title> The evolution of evolvability in genetic programming. </title> <booktitle> In Advances in Genetic Programming, </booktitle> <editor> (K. E. Kinnear, Ed.). </editor> <publisher> MIT Press. </publisher>
Reference-contexts: 1. INTRODUCTION Recent progress in the analysis of fitness landscapes <ref> [1, 2, 3, 4, 6, 8, 9] </ref> has provided new insights into the performance of genetic algorithms (GAs) [7]. However, little progress has been made toward providing practical tools for predicting the performance of a genetic algorithm on a given landscape prior to execution. <p> Altenberg discusses a number of other measurement functions that could provide a better basis for models of the fitness landscape, and conjectures that one of the most critical factors is evolvability <ref> [1] </ref>, i.e., how rapidly the ability to generate offspring with higher fitness decays, as parental fitness increases. Similar ideas are used by Baeck [3, 4] to analyze the convergence rate of simple genetic algorithms, based on probabilities that mutation produces a superior individual.
Reference: [2] <author> Altenberg, L. </author> <year> (1995). </year> <title> The Schema Theorem and Price's Theorem. </title> <booktitle> In Foundations of Genetic Algorithms 3, </booktitle> <address> D. Whitley (Ed.). San Mateo, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: 1. INTRODUCTION Recent progress in the analysis of fitness landscapes <ref> [1, 2, 3, 4, 6, 8, 9] </ref> has provided new insights into the performance of genetic algorithms (GAs) [7]. However, little progress has been made toward providing practical tools for predicting the performance of a genetic algorithm on a given landscape prior to execution. <p> Among other results, empirical evidence is presented in support of the hypothesis that "the better a GA-operator works, the higher its correlation coefficient is." However, the correlation coefficient alone is not sufficient to predict the performance of genetic algorithms, as Altenberg <ref> [2] </ref> shows by two counter-examples. <p> That is why we actually draw samples from the distribution to assign fitnesses to the offspring. It should be noted that there may be better statistics to use to model the transfer of fitness from parent to child <ref> [2] </ref>. The VGA is independent of the precise form of model being used, and can serve as a platform to investigate other statistical models of genetic operators as they become available. 4.
Reference: [3] <author> Baeck, T. </author> <year> (1992). </year> <title> The interaction of mutation rate, selection, and self-adaptation with a genetic algorithm. In Parallel Problem Solving from Nature 2, </title> <editor> R. Maenner and B. Manderick (Eds.), </editor> <publisher> Elsevier. </publisher>
Reference-contexts: 1. INTRODUCTION Recent progress in the analysis of fitness landscapes <ref> [1, 2, 3, 4, 6, 8, 9] </ref> has provided new insights into the performance of genetic algorithms (GAs) [7]. However, little progress has been made toward providing practical tools for predicting the performance of a genetic algorithm on a given landscape prior to execution. <p> Similar ideas are used by Baeck <ref> [3, 4] </ref> to analyze the convergence rate of simple genetic algorithms, based on probabilities that mutation produces a superior individual. Another approach to predicting GA performance is to derive "equations of motion" for the population fitness.
Reference: [4] <author> Baeck, T. </author> <year> (1995). </year> <title> Order statistics for convergence velocity analysis in evolutionary algorithms. </title> <booktitle> In Foundations of Genetic Algorithms 3, </booktitle> <address> D. Whitley (Ed.). San Mateo, CA: </address> <publisher> Mor-gan Kaufmann. </publisher>
Reference-contexts: 1. INTRODUCTION Recent progress in the analysis of fitness landscapes <ref> [1, 2, 3, 4, 6, 8, 9] </ref> has provided new insights into the performance of genetic algorithms (GAs) [7]. However, little progress has been made toward providing practical tools for predicting the performance of a genetic algorithm on a given landscape prior to execution. <p> Similar ideas are used by Baeck <ref> [3, 4] </ref> to analyze the convergence rate of simple genetic algorithms, based on probabilities that mutation produces a superior individual. Another approach to predicting GA performance is to derive "equations of motion" for the population fitness.
Reference: [5] <author> Grefenstette, J. </author> <year> (1986). </year> <title> Optimization of control parameters for genetic algorithms. </title> <journal> IEEE Transactions on Systems, Man and Cybernetics 16(1), </journal> <pages> 122-128. </pages>
Reference-contexts: It is a common experience that several alternatives end up being explored by simply running the GA with alternative settings to decide which is best suited for the problem at hand. Meta-level GAs have also been used to find suitable parameter settings <ref> [5] </ref>. However, for applications in which the evaluation of a single individual requires a time-consuming computational process, such as running an extensive simulation program, this trial and error approach to exploring the space of GAs may not be an acceptable option.
Reference: [6] <author> Grefenstette, J. </author> <year> (1995). </year> <title> Predictive models using fitness distributions of genetic operators. </title> <booktitle> In Foundations of Genetic Algorithms 3, </booktitle> <address> D. Whitley (Ed.). San Mateo, CA: </address> <publisher> Morgan Kauf-mann. </publisher>
Reference-contexts: 1. INTRODUCTION Recent progress in the analysis of fitness landscapes <ref> [1, 2, 3, 4, 6, 8, 9] </ref> has provided new insights into the performance of genetic algorithms (GAs) [7]. However, little progress has been made toward providing practical tools for predicting the performance of a genetic algorithm on a given landscape prior to execution. <p> VIRTUAL GENETIC ALGORITHMS The main contribution of this paper is the notion of a virtual genetic algorithm, which is an algorithm that is intended to model a genetic algorithm. This work is motivated by recent papers <ref> [10, 6] </ref> that have proposed predictive models of GAs based on expected changes in the mean population fitness from one generation to the next. <p> Each run provides a sample trajectory, so repeated runs can yield not only expected performance of the GA, but also predictions about best-case and worst-case performance. These kinds of predictions cannot be derived from population-level expectation-based models, such as those in <ref> [10, 6] </ref>. The next section deals with methods for deriving the statistical models of the fitness landscape required by the VGA. 3. <p> Another approach to predicting GA performance is to derive "equations of motion" for the population fitness. Muehlenbein and Schlierkamp-Voosen [10] used ideas from quantitative genetics to derive a predictive model for a "breeder" genetic algorithm. Combining the approaches in [9, 10], Grefenstette <ref> [6] </ref> creates a predictive model for the mean population fitness, based on the fitness distributions of genetic operators. <p> the correlation coefficient between parental fitness and offspring fitness, this method results in linear models of the form: F c (OP) = a + bF p (OP) (3) It is shown that, for several test functions and genetic operators, such models have fairly good fit (see Figure 3 excerpted from <ref> [6] </ref>). <p> Given an initial estimate for M (0), Eq. (4) can be iterated to predict the performance of the GA over time. For the purpose of these first experiments with VGAs, we adopt an enhanced form of the method used in <ref> [6] </ref>. We create a model of the fitness landscape associated with each genetic operator OP, using the procedure shown in Figure 4. 1. Generate N parents at random and evaluate. 2. <p> This information is ignored in previous work <ref> [9, 6] </ref>, although it is readily available from the information generated in steps (1) and (2), as shown by the error bars in Figure 3.
Reference: [7] <author> Holland, J. H. </author> <year> (1975). </year> <title> Adaptation in natural and artificial systems. </title> <publisher> University of Michigan Press, </publisher> <address> Ann Arbor. </address> - <month> 11 </month> - 
Reference-contexts: 1. INTRODUCTION Recent progress in the analysis of fitness landscapes [1, 2, 3, 4, 6, 8, 9] has provided new insights into the performance of genetic algorithms (GAs) <ref> [7] </ref>. However, little progress has been made toward providing practical tools for predicting the performance of a genetic algorithm on a given landscape prior to execution.
Reference: [8] <author> Kauffman, S. A. </author> <year> (1989). </year> <title> Adaptation on rugged fitness landscapes. </title> <booktitle> In Lecture Notes on Complexity, </booktitle> <editor> D. Stein (Ed.), </editor> <publisher> Addison Wesley, </publisher> <pages> 527-618. </pages>
Reference-contexts: 1. INTRODUCTION Recent progress in the analysis of fitness landscapes <ref> [1, 2, 3, 4, 6, 8, 9] </ref> has provided new insights into the performance of genetic algorithms (GAs) [7]. However, little progress has been made toward providing practical tools for predicting the performance of a genetic algorithm on a given landscape prior to execution. <p> The term fitness landscape refers to the response surface defined by a given representation of the search space, the fitness function, and the genetic operators. - 5 - There have been several recent discussions relating GA performance to features of the fitness landscape. Kauffman <ref> [8] </ref> describes the family of NK-fitness landscapes for which he provides an analysis of how rugged the landscape is. Manderick, de Weger and Spiessens [9] follow this work by exploring the relationships between overall performance of genetic algorithms and statistical features of the fitness landscape.
Reference: [9] <author> Manderick, B., de Weger, M. and P. </author> <title> Spiessens (1991). The genetic algorithm and the structure of the fitness landscape. </title> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann, </publisher> <pages> 143-150. </pages>
Reference-contexts: 1. INTRODUCTION Recent progress in the analysis of fitness landscapes <ref> [1, 2, 3, 4, 6, 8, 9] </ref> has provided new insights into the performance of genetic algorithms (GAs) [7]. However, little progress has been made toward providing practical tools for predicting the performance of a genetic algorithm on a given landscape prior to execution. <p> Kauffman [8] describes the family of NK-fitness landscapes for which he provides an analysis of how rugged the landscape is. Manderick, de Weger and Spiessens <ref> [9] </ref> follow this work by exploring the relationships between overall performance of genetic algorithms and statistical features of the fitness landscape. In particular, they study the correlation coefficient of genetic operators. <p> In addition, <ref> [9] </ref> analyzes the correlation length of the landscape, which characterizes the neighborhoods of the landscape as induced by particular genetic operators. <p> Another approach to predicting GA performance is to derive "equations of motion" for the population fitness. Muehlenbein and Schlierkamp-Voosen [10] used ideas from quantitative genetics to derive a predictive model for a "breeder" genetic algorithm. Combining the approaches in <ref> [9, 10] </ref>, Grefenstette [6] creates a predictive model for the mean population fitness, based on the fitness distributions of genetic operators. <p> This information is ignored in previous work <ref> [9, 6] </ref>, although it is readily available from the information generated in steps (1) and (2), as shown by the error bars in Figure 3. <p> Two well-known examples are Partially-Matched Crossover (PMX) and Edge Crossover (EX). Suppose we wish to decide which of these operators to use on a given problem. The particular TSP used here is a 30-city problem previously used in <ref> [9] </ref>. We begin by performing an exploration of the fitness landscape as described in Figure 4. With N = 1000, this results in the models shown in Table 1.
Reference: [10] <author> Muehlenbein, H. and D. </author> <title> Schlierkamp-Voosen (1993). Predictive models for the breeder genetic algorithm. </title> <booktitle> Evolutionary Computation 1(1), </booktitle> <pages> 25-49. </pages>
Reference-contexts: VIRTUAL GENETIC ALGORITHMS The main contribution of this paper is the notion of a virtual genetic algorithm, which is an algorithm that is intended to model a genetic algorithm. This work is motivated by recent papers <ref> [10, 6] </ref> that have proposed predictive models of GAs based on expected changes in the mean population fitness from one generation to the next. <p> Each run provides a sample trajectory, so repeated runs can yield not only expected performance of the GA, but also predictions about best-case and worst-case performance. These kinds of predictions cannot be derived from population-level expectation-based models, such as those in <ref> [10, 6] </ref>. The next section deals with methods for deriving the statistical models of the fitness landscape required by the VGA. 3. <p> Similar ideas are used by Baeck [3, 4] to analyze the convergence rate of simple genetic algorithms, based on probabilities that mutation produces a superior individual. Another approach to predicting GA performance is to derive "equations of motion" for the population fitness. Muehlenbein and Schlierkamp-Voosen <ref> [10] </ref> used ideas from quantitative genetics to derive a predictive model for a "breeder" genetic algorithm. Combining the approaches in [9, 10], Grefenstette [6] creates a predictive model for the mean population fitness, based on the fitness distributions of genetic operators. <p> Another approach to predicting GA performance is to derive "equations of motion" for the population fitness. Muehlenbein and Schlierkamp-Voosen [10] used ideas from quantitative genetics to derive a predictive model for a "breeder" genetic algorithm. Combining the approaches in <ref> [9, 10] </ref>, Grefenstette [6] creates a predictive model for the mean population fitness, based on the fitness distributions of genetic operators.
References-found: 10

