URL: http://www.cs.umbc.edu/kqml/papers/kqml-semantics.ps
Refering-URL: http://www.paoli.atm.lmco.com/kqml/
Root-URL: 
Email: email: jklabrou@cs.umbc.edu  email: finin@cs.umbc.edu  
Phone: voice: (410) 455-2667 fax: (410) 455-3969  voice: (410) 455-3522 fax: (410) 455-3969  
Title: A semantics approach for KQML a general purpose communication language for software agents  
Author: Yannis Labrou Tim Finin 
Address: Baltimore MD 21228  Baltimore MD 21228  
Affiliation: Computer Science Department University of Maryland, Baltimore County  Computer Science Department University of Maryland, Baltimore County  
Abstract: We investigate the semantics for Knowledge Query Manipulation Language (KQML) and we propose a semantic framework for the language. KQML is a language and a protocol to support communication between software agents. Based on ideas from speech act theory, we propose a semantic description for KQML that associates descriptions of the cognitive states of agents with the use of the language's primitives (performatives). We use this approach to describe the semantics for the basic set of KQML performa-tives. We also investigate implementation issues related to our semantic approach. We suggest that KQML can offer an all purpose communication language for software agents that requires no limiting pre-commitments on the agents' structure and implementation. KQML can provide the Distributed AI, Cooperative Distributed Problem Solving and Software Agents communities with an all purpose language and environment for intelligent inter-agent communication. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> External Interfaces Working Group ARPA Knowledge Sharing Initiative. </institution> <note> KQML Overview. Working paper, </note> <year> 1992. </year>
Reference-contexts: One of the key areas identified by KSE was that of protocols for communication between separate knowledge-based modules, as well as between knowledge-based systems and databases. The result was Knowledge Query Manipulation Language (KQML) (see <ref> [1, 2, 14] </ref> for documentation on KQML) a message format and a message-handling protocol to support run-time knowledge sharing and interaction among agents. Interaction is more than an exchange of messages.
Reference: [2] <institution> External Interfaces Working Group ARPA Knowledge Sharing Initiative. </institution> <note> Specification of the KQML agent-communication language. Working paper, </note> <month> June </month> <year> 1993. </year>
Reference-contexts: One of the key areas identified by KSE was that of protocols for communication between separate knowledge-based modules, as well as between knowledge-based systems and databases. The result was Knowledge Query Manipulation Language (KQML) (see <ref> [1, 2, 14] </ref> for documentation on KQML) a message format and a message-handling protocol to support run-time knowledge sharing and interaction among agents. Interaction is more than an exchange of messages. <p> KQML is intended to be a universal interaction language, that supports communication through explicit linguistic actions. Our focus in this paper is the formal description of the semantics of the language. Although the language is partly designed and in use, it lacks a formal semantics, and its current description <ref> [2] </ref> is based on natural language descriptions of its primitives called performatives. We believe that a formal semantics is necessary for the unambiguous definition of the language, and its appropriate use. Furthermore, the semantic description is related to implementation issues.
Reference: [3] <author> J.L. Austin. </author> <title> How to do things with words. </title> <publisher> Harvard University Press, </publisher> <address> Cambridge, MA, </address> <year> 1962. </year>
Reference-contexts: The propositional content conditions assure that agents do not make promises about other agents, they do not respond to queries not directed to them, etc. They are enforced by the conversation policies (more about them in the Section 6.1) and the application 5 term first coined by Austin <ref> [3] </ref>, to suggest that some verbs can be uttered so that they perform some action (later, it was decided that all verbs may be considered as performatives) 6 In the full version of KQML (not presented here), the content may also be a KQML message itself. 7 An ontology is a
Reference: [4] <author> Alan H. Bond and Les Gasser. </author> <title> An analysis of problems and research in DAI. </title> <booktitle> In Readings in Distributed Artificial Intelligence, </booktitle> <pages> pages 3-35. </pages> <publisher> Morgan Kaufman Publishers, </publisher> <address> San Mateo, California, </address> <year> 1988. </year> <note> 22 URL is http://www.cs.umbc.edu/kqml/ </note>
Reference-contexts: The rising demand for software agents that can interoperate [16], and for intelligent agents that can take advantage of the 1 For an introduction to the issues that DAI is concerned with, see <ref> [4] </ref> and [15]. enormous resources of today's Internet (like Etzioni's Inter--net softbots [13]) provide a proving ground for a communication language.
Reference: [5] <author> John A. Campbell and Mark P. D'Inverno. </author> <title> Knowl--edge interchange protocols. </title> <editor> In Y. Demazeau and J.-P. Muller, editors, </editor> <booktitle> Decentralized A.I.: Proc. of the First European Workshop on Modelling, </booktitle> <pages> pages 63-80. </pages> <publisher> Else-vier Science Publishers B.V. /North Holland, </publisher> <address> Amster-dam, </address> <year> 1990. </year>
Reference-contexts: Camp-bell <ref> [5] </ref> uses predicates (that stand for epistemic operators), and propositions to describe mental states associated with specific speech acts (like warning or bargaining). Cohen and Perrault in their plan-based theory of speech acts [9] use a believe modal operator based on Hintikka's ideas about propositional attitudes, knowledge and belief [20]. <p> In these expressions we use operators that have a reserved meaning (the operators will be identified by predicates). The use of such operators, to describe mental states of agents that use speech acts, can be found in approaches as diverse as Campbell's <ref> [5] </ref> and Singh's [27]. The operators used in this presentation are: 1. Bel, as in bel (A,P) which has the meaning that P is true for A. P is an expression in the native language of A's application. We will further refer to this operator in Section 7.
Reference: [6] <author> Philip R. Cohen and Hector J. Levesque. </author> <title> Intention = Choice + Commitment. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 410-415, </pages> <month> July </month> <year> 1987. </year>
Reference-contexts: where speech acts are used in the context of the investigation of reference and other Philosophy of Lan 2 variations of this classification appear also in the literature 3 as in "I name this ship the Titanic" guage issues, to strict formalisms, as in the work of Cohen and Levesque <ref> [6, 8, 7] </ref> that define a formal model of the cognitive state of an agent and then use it to interpret speech acts as actions that are derived, guided and controlled in the context of the cognitive states of the related agents.
Reference: [7] <author> Philip R. Cohen and Hector J. Levesque. </author> <title> Intention is choice with commitment. </title> <journal> Artificial Intelligence, </journal> <volume> 42 </volume> <pages> 213-261, </pages> <year> 1990. </year>
Reference-contexts: where speech acts are used in the context of the investigation of reference and other Philosophy of Lan 2 variations of this classification appear also in the literature 3 as in "I name this ship the Titanic" guage issues, to strict formalisms, as in the work of Cohen and Levesque <ref> [6, 8, 7] </ref> that define a formal model of the cognitive state of an agent and then use it to interpret speech acts as actions that are derived, guided and controlled in the context of the cognitive states of the related agents.
Reference: [8] <author> P.R. Cohen and H.J. Levesque. </author> <title> Persistence, intention, and commitment. </title> <editor> In P. R. Cohen, J. Morgan, and M. E. Pollack, editors, </editor> <booktitle> Intentions in Communication, </booktitle> <pages> pages 33-69. </pages> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1990. </year>
Reference-contexts: where speech acts are used in the context of the investigation of reference and other Philosophy of Lan 2 variations of this classification appear also in the literature 3 as in "I name this ship the Titanic" guage issues, to strict formalisms, as in the work of Cohen and Levesque <ref> [6, 8, 7] </ref> that define a formal model of the cognitive state of an agent and then use it to interpret speech acts as actions that are derived, guided and controlled in the context of the cognitive states of the related agents.
Reference: [9] <author> P.R. Cohen and C.R. Perrault. </author> <title> Elements of a plan-based theory of speech acts (1979). </title> <editor> In Alan H. Bond and Les Gasser, editors, </editor> <booktitle> Readings in Distributed Artificial Intelligence, </booktitle> <pages> pages 169-186. </pages> <publisher> Morgan Kaufman Publishers, </publisher> <address> San Mateo, CA, </address> <year> 1988. </year>
Reference-contexts: Camp-bell [5] uses predicates (that stand for epistemic operators), and propositions to describe mental states associated with specific speech acts (like warning or bargaining). Cohen and Perrault in their plan-based theory of speech acts <ref> [9] </ref> use a believe modal operator based on Hintikka's ideas about propositional attitudes, knowledge and belief [20].
Reference: [10] <author> M. Cutkosky, E. Engelmore, R. Fikes, T. Gruber, M. Genesereth, and W. Mark. </author> <title> PACT: An experiment in integrating concurrent engineering systems. </title> <year> 1992. </year>
Reference-contexts: The problem of what to send to whom can be attacked in several ways: 1) if the query-answering capabilities of each agent are well known in advance (like in [17] and in <ref> [10] </ref>, where early versions of KQML were used for inter-agent communication) the application programer encodes the information in the distributed application so that when a query has to be answered by an agent in the outside world, the application knows in advance whom to query, 2) if the application operates in
Reference: [11] <author> Randall Davis and Reid G. Smith. </author> <title> Negotiation as a metaphor for distributed problem solving. </title> <journal> Artificial Intelligence, </journal> <volume> 20 </volume> <pages> 63-109, </pages> <year> 1983. </year> <note> (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 333-356, </address> <publisher> Morgan Kaufmann, </publisher> <year> 1988). </year>
Reference-contexts: The mode of achievement is set by the "organizational" hierarchy or interaction protocol that the agents may use in their interaction. In Contract Net [28] , the fact that some agents act as managers and others as potential contractors, creates a context for the negotiation <ref> [11] </ref> , through bidding, that characterizes the protocol. The preparatory conditions are viewed as preconditions on the cognitive state, for an agent to use a performative. <p> providing a conversation module that can cooperate with the router the agent will be able to better handle asynchronous behavior, help the agent keep track of its business and provide the means to the application programmer to build more complex schemes of inter-agent communication (protocols like the Contract Net, see <ref> [28, 11] </ref>). 7 Software agents and KQML We argue that our semantic approach does not constrain the kinds of software agents that can use KQML.
Reference: [12] <author> E.H. Durfee, V.R. Lesser, and D.D. Corkill. </author> <title> Cooperative distributed problem solving. </title> <editor> In A. Barr, P.R. Co-hen, and E.A. Feigenbaum, editors, </editor> <booktitle> The Handbook of Artificial Intelligence, </booktitle> <volume> Vol. IV, </volume> <pages> pages 83-147. </pages> <publisher> Addison-Wesley Pub. Co., </publisher> <address> Reading, MA, </address> <year> 1989. </year>
Reference-contexts: interest in such a language are those of Distributed Artificial Intelligence (DAI 1 ) ,the subfield of AI concerned with concurrency in AI computations, (Cooperative) Distributed Problem Solving, that studies how a loosely coupled network of problem solvers can work together to solve problems that are beyond their individual capabilities <ref> [12] </ref>, and Multi Agent Systems, concerned with coordinating behavior among a collection of (possibly pre-existing) autonomous intelligent agents.
Reference: [13] <author> Oren Etzioni and Daniel Weld. </author> <title> A softbot-based interface to the internet. </title> <journal> CACM, </journal> <volume> 37(7) </volume> <pages> 72-76, </pages> <year> 1994. </year>
Reference-contexts: The rising demand for software agents that can interoperate [16], and for intelligent agents that can take advantage of the 1 For an introduction to the issues that DAI is concerned with, see [4] and [15]. enormous resources of today's Internet (like Etzioni's Inter--net softbots <ref> [13] </ref>) provide a proving ground for a communication language.
Reference: [14] <author> Tim Finin, Don McKay, Rich Fritzson, and Robin McEntire. </author> <title> KQML: an information and knowledge exchange protocol. </title> <editor> In Kazuhiro Fuchi and Toshio Yokoi, editors, </editor> <title> Knowledge Building and Knowledge Sharing. </title> <publisher> Ohmsha and IOS Press, </publisher> <year> 1994. </year>
Reference-contexts: One of the key areas identified by KSE was that of protocols for communication between separate knowledge-based modules, as well as between knowledge-based systems and databases. The result was Knowledge Query Manipulation Language (KQML) (see <ref> [1, 2, 14] </ref> for documentation on KQML) a message format and a message-handling protocol to support run-time knowledge sharing and interaction among agents. Interaction is more than an exchange of messages. <p> It is based in the KQML implementation developed at UNISYS <ref> [14] </ref> . We identify the following four parts: Application. In the case that this is a non-distributed application, the application programmer has to identify the points in the program where external information is needed.
Reference: [15] <author> L. Gasser. </author> <title> An overview of DAI. </title> <editor> In Nicholas M. Avouris and Les Gasser, editors, </editor> <booktitle> Distributed Artificial Intelligence: Theory and Praxis, </booktitle> <pages> pages 9-30. </pages> <publisher> Kluwer Academic Publishers, </publisher> <address> Dordrecht, The Netherlands, </address> <year> 1992. </year>
Reference-contexts: The rising demand for software agents that can interoperate [16], and for intelligent agents that can take advantage of the 1 For an introduction to the issues that DAI is concerned with, see [4] and <ref> [15] </ref>. enormous resources of today's Internet (like Etzioni's Inter--net softbots [13]) provide a proving ground for a communication language.
Reference: [16] <author> Michael R. Genesereth and Steven P. Ketchpel. </author> <title> Software agents. </title> <journal> CACM, </journal> <volume> 37(7) </volume> <pages> 48-53, </pages> <year> 1994. </year>
Reference-contexts: The rising demand for software agents that can interoperate <ref> [16] </ref>, and for intelligent agents that can take advantage of the 1 For an introduction to the issues that DAI is concerned with, see [4] and [15]. enormous resources of today's Internet (like Etzioni's Inter--net softbots [13]) provide a proving ground for a communication language.
Reference: [17] <author> Mike Genesereth. Designworld. </author> <booktitle> In Proceedings of the IEEE Conference on Robotics and Automation, pages 2,785-2,788. </booktitle> <publisher> IEEE CS Press. </publisher>
Reference-contexts: At those points, queries (in the general sense) have to be delivered to other applications (agents) that can answer them. The problem of what to send to whom can be attacked in several ways: 1) if the query-answering capabilities of each agent are well known in advance (like in <ref> [17] </ref> and in [10], where early versions of KQML were used for inter-agent communication) the application programer encodes the information in the distributed application so that when a query has to be answered by an agent in the outside world, the application knows in advance whom to query, 2) if the
Reference: [18] <author> Carl Hewitt. </author> <title> Offices are open systems. </title> <journal> Communications of the ACM, </journal> <volume> 4(3) </volume> <pages> 271-287, </pages> <month> July </month> <year> 1986. </year> <note> (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 321-330, </address> <publisher> Mor-gan Kaufmann, </publisher> <year> 1988). </year>
Reference-contexts: for inter-agent communication) the application programer encodes the information in the distributed application so that when a query has to be answered by an agent in the outside world, the application knows in advance whom to query, 2) if the application operates in an environment mostly consisting of open systems <ref> [19, 18] </ref> the application can ask a facilitator 19 to appropriately deliver its query, or, 3) the application can ask the facilitator (or other agents) to take care of appropriately delivering the query or "discuss" the matter with the facilitator or other agents, in order to deliver the query on its
Reference: [19] <author> Carl Hewitt and Jeff Inman. </author> <title> DAI betwixt and between: From "intelligent agents" to open systems science. </title> <journal> IEEE Transactions on Systems, Man and Cybernetics, </journal> <volume> 21(6), </volume> <month> December </month> <year> 1991. </year> <note> (Special Issue on Distributed AI). </note>
Reference-contexts: for inter-agent communication) the application programer encodes the information in the distributed application so that when a query has to be answered by an agent in the outside world, the application knows in advance whom to query, 2) if the application operates in an environment mostly consisting of open systems <ref> [19, 18] </ref> the application can ask a facilitator 19 to appropriately deliver its query, or, 3) the application can ask the facilitator (or other agents) to take care of appropriately delivering the query or "discuss" the matter with the facilitator or other agents, in order to deliver the query on its
Reference: [20] <author> J. Hintikka. </author> <title> Knowledge and Belief. </title> <publisher> Cornell University Press, </publisher> <address> Ithaca, New York, </address> <year> 1962. </year>
Reference-contexts: Cohen and Perrault in their plan-based theory of speech acts [9] use a believe modal operator based on Hintikka's ideas about propositional attitudes, knowledge and belief <ref> [20] </ref>. Singh is interested in modelling agents in terms of beliefs and intentions [26] and uses this description to provide a semantic approach for speech acts [27], enhancing the usual model-theoretic framework with modal operators for the primitive concepts of intention and know-how.
Reference: [21] <author> Kurt Konolige. </author> <title> A Deduction Model of Belief. </title> <publisher> Pitman, </publisher> <address> London, </address> <year> 1986. </year>
Reference-contexts: The common denominator of most of the formal semantic approaches is the possible-world model that has an axiomatization in terms of modal logic (for an introduction to the possible worlds model and the issues related to it see <ref> [21] </ref>). We adopt Searle's description (approach) for speech acts [25, 24]. A speech act may be described asF (P) where F is the illocutionary force indicator and P is the propositional content of the illocutionary act 4 . Searle suggests the following seven components of the illocutionary force: 1.
Reference: [22] <author> R. Neches, R. Fikes, T. Finin, T. Gruber, R. Patil, T. Senator, and W. Swartout. </author> <title> Enabling technology for knowledge sharing. </title> <journal> AI Magazine, </journal> <volume> 12(3):36 - 56, </volume> <month> Fall </month> <year> 1991. </year>
Reference-contexts: Addressing this problem is the primary goal of the ARPA Knowledge Sharing Effort (KSE) [23]. KSE is an initiative to develop the technical infrastructure to support the sharing of knowledge among systems <ref> [22] </ref>. Its goal is to develop new systems by selecting components from libraries of reusable modules and assembling them together. One of the key areas identified by KSE was that of protocols for communication between separate knowledge-based modules, as well as between knowledge-based systems and databases.
Reference: [23] <author> R. Patil, R. Fikes, P. Patel-Schneider, D. McKay, T. Finin, T. Gruber, and R. Neches. </author> <title> The DARPA Knowledge Sharing Effort: Progress report. </title> <editor> In B. Nebel, C. Rich, and W. Swartout, editors, </editor> <booktitle> Principles of Knowledge Representation and Reasoning: Proc. of the Third International Conference (KR'92), </booktitle> <address> San Ma-teo, CA, November 1992. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: This example is an instance of the larger problem of providing for an environment where software agents may effectively communicate and exchange knowledge and information. Addressing this problem is the primary goal of the ARPA Knowledge Sharing Effort (KSE) <ref> [23] </ref>. KSE is an initiative to develop the technical infrastructure to support the sharing of knowledge among systems [22]. Its goal is to develop new systems by selecting components from libraries of reusable modules and assembling them together.
Reference: [24] <author> J. Searle and D. Vanderveken. </author> <title> Foundations of illocu-tionary logic. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, UK, </address> <year> 1985. </year>
Reference-contexts: The common denominator of most of the formal semantic approaches is the possible-world model that has an axiomatization in terms of modal logic (for an introduction to the possible worlds model and the issues related to it see [21]). We adopt Searle's description (approach) for speech acts <ref> [25, 24] </ref>. A speech act may be described asF (P) where F is the illocutionary force indicator and P is the propositional content of the illocutionary act 4 . Searle suggests the following seven components of the illocutionary force: 1. The illocutionary point is a fundamental primitive notion.
Reference: [25] <author> John R. Searle. </author> <title> Speech Acts. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, UK, </address> <year> 1969. </year>
Reference-contexts: There is a plethora of approaches regarding the abstractions (models) used for capturing and describing such states, depending on one's motivations. They range from informal references to propositional attitudes, like "believe" or "want", as in Searle's early work <ref> [25] </ref> where speech acts are used in the context of the investigation of reference and other Philosophy of Lan 2 variations of this classification appear also in the literature 3 as in "I name this ship the Titanic" guage issues, to strict formalisms, as in the work of Cohen and Levesque <p> The common denominator of most of the formal semantic approaches is the possible-world model that has an axiomatization in terms of modal logic (for an introduction to the possible worlds model and the issues related to it see [21]). We adopt Searle's description (approach) for speech acts <ref> [25, 24] </ref>. A speech act may be described asF (P) where F is the illocutionary force indicator and P is the propositional content of the illocutionary act 4 . Searle suggests the following seven components of the illocutionary force: 1. The illocutionary point is a fundamental primitive notion.
Reference: [26] <author> M.P. Singh. </author> <title> Towards a formal theory of communication for multiagent systems. </title> <booktitle> In Proceedings of the IJCAI'91, </booktitle> <year> 1991. </year>
Reference-contexts: Cohen and Perrault in their plan-based theory of speech acts [9] use a believe modal operator based on Hintikka's ideas about propositional attitudes, knowledge and belief [20]. Singh is interested in modelling agents in terms of beliefs and intentions <ref> [26] </ref> and uses this description to provide a semantic approach for speech acts [27], enhancing the usual model-theoretic framework with modal operators for the primitive concepts of intention and know-how.
Reference: [27] <author> M.P. Singh. </author> <title> A semantics for speech acts. </title> <note> (to appear in Annals of Mathematics and Artificial Intelligence), </note> <year> 1992. </year>
Reference-contexts: Singh is interested in modelling agents in terms of beliefs and intentions [26] and uses this description to provide a semantic approach for speech acts <ref> [27] </ref>, enhancing the usual model-theoretic framework with modal operators for the primitive concepts of intention and know-how. <p> In these expressions we use operators that have a reserved meaning (the operators will be identified by predicates). The use of such operators, to describe mental states of agents that use speech acts, can be found in approaches as diverse as Campbell's [5] and Singh's <ref> [27] </ref>. The operators used in this presentation are: 1. Bel, as in bel (A,P) which has the meaning that P is true for A. P is an expression in the native language of A's application. We will further refer to this operator in Section 7.
Reference: [28] <author> Reid G. Smith. </author> <title> The contract net protocol: High level communication and control in a distributed problem solver. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-29(12):1104-1113, </volume> <month> December </month> <year> 1980. </year> <note> (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 357-366, </address> <publisher> Morgan Kaufmann, </publisher> <year> 1988). </year>
Reference-contexts: The mode of achievement refers to establishing certain relationships between speakers and hearers that make certain illocutionary acts, meaningful. The mode of achievement is set by the "organizational" hierarchy or interaction protocol that the agents may use in their interaction. In Contract Net <ref> [28] </ref> , the fact that some agents act as managers and others as potential contractors, creates a context for the negotiation [11] , through bidding, that characterizes the protocol. The preparatory conditions are viewed as preconditions on the cognitive state, for an agent to use a performative. <p> providing a conversation module that can cooperate with the router the agent will be able to better handle asynchronous behavior, help the agent keep track of its business and provide the means to the application programmer to build more complex schemes of inter-agent communication (protocols like the Contract Net, see <ref> [28, 11] </ref>). 7 Software agents and KQML We argue that our semantic approach does not constrain the kinds of software agents that can use KQML.
References-found: 28

