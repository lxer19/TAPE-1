URL: ftp://ftp.cs.columbia.edu/reports/reports-1990/cucs-047-90.ps.gz
Refering-URL: http://www.cs.columbia.edu/~library/1990.html
Root-URL: http://www.cs.columbia.edu
Email: naser@cs.columbia.edu,  kaiser@cs.columbia.edu,  
Phone: (212) 854-8182  (212) 854-3856  
Title: Consistency and Automation in Multi-User Rule-Based Development Environments  
Author: Naser S. Barghouti and Gail E. Kaiser N. S. Barghouti and G. E. Kaiser 
Note: Copyright 1990  
Address: New York, NY 10027  
Affiliation: Columbia University Department of Computer Science  
Abstract: Technical Report CUCS-047-90 31 October 1990 Abstract We investigate the scaling up of a class of single-user software development environments, which we call rule-based development environments (RBDEs), to support multiple developers cooperating together on a project. RBDEs model the software development process in terms of rules that encapsulate activities, and execute forward and backward chaining on the rules to provide assistance in carrying out the development process. There is a spectrum of assistance models, ranging from pure automation to strict consistency preservation. We describe three problems whose solutions are dependent on the choice of assistance model: (1) multiple views; (2) evolution; and (3) concurrency control. We discuss how the two extremes of the spectrum restrict the possible approaches to multiple views and evolution. In order to explore different aspects of the concurrency control problem across multiple points on the spectrum of RBDEs, we develop a maximalist assistance model and propose an approach to synchronization of cooperating developers within the context of this model. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> CLF Manual University of Southern California, Information Sciences Institute, Marina del Rey CA, </institution> <year> 1988. </year>
Reference-contexts: 1. Introduction Software development environments aim to assist developers of software projects in carrying out the development process. A particular class of environments, which we call rule-based development environments (RBDEs), model the software development process in terms of rules <ref> [1, 2, 3] </ref>. RBDEs encapsulate development activities as rules and provide assistance to developers by applying forward and/or backward chaining on the rules to automatically perform software development activities and/or inform the developers when particular activities should or should not be done.
Reference: [2] <author> N. H. Minsky and D. </author> <note> Rozenshtein. </note>
Reference-contexts: 1. Introduction Software development environments aim to assist developers of software projects in carrying out the development process. A particular class of environments, which we call rule-based development environments (RBDEs), model the software development process in terms of rules <ref> [1, 2, 3] </ref>. RBDEs encapsulate development activities as rules and provide assistance to developers by applying forward and/or backward chaining on the rules to automatically perform software development activities and/or inform the developers when particular activities should or should not be done. <p> The RBDE automatically carries out as many activities as it can, but this does not affect the validity of activities requested directly by users. 2.1. A Consistency Preserving Model The consistency preserving assistance model is implemented in systems like Darwin <ref> [2] </ref>, whose rules are considered laws that cannot be violated. Every rule has a condition and a set of one or more effects. The rule cannot be invoked unless its condition is satisfied.
References-found: 2

