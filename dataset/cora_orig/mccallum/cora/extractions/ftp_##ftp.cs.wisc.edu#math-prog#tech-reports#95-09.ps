URL: ftp://ftp.cs.wisc.edu/math-prog/tech-reports/95-09.ps
Refering-URL: http://www.cs.wisc.edu/math-prog/tech-reports/
Root-URL: 
Title: QPCOMP: A Quadratic Programming Based Solver for Mixed Complementarity Problems  
Author: Stephen C. Billups and Michael C. Ferris 
Date: February 7, 1996  
Abstract: QPCOMP is an extremely robust algorithm for solving mixed nonlinear complementarity problems that has fast local convergence behavior. Based in part on the NE/SQP method of Pang and Gabriel[14], this algorithm represents a significant advance in robustness at no cost in efficiency. In particular, the algorithm is shown to solve any solvable Lipschitz continuous, continuously differentiable, pseudo-monotone mixed nonlinear complementarity problem. QP-COMP also extends the NE/SQP method for the nonlinear complementarity problem to the more general mixed nonlinear complementarity problem. Computational results are provided, which demonstrate the effectiveness of the algorithm.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. C. Billups, </author> <title> Algorithms for Complementarity Problems and Generalized Equations (Ph.D. </title> <type> thesis, </type> <institution> University of Wisconsin-Madison, Madison, Wisconsin, </institution> <year> 1995). </year>
Reference-contexts: Since the development closely parallels that given in [14], we are deliberately terse in our presentation. Moreover, we omit the proofs to Proposition 3.1, Theorem 3.4 and Lemma 3.5. However, detailed proofs for these results are given in <ref> [1, Chapter 2] </ref>. Once the extended NE/SQP algorithm is presented we will then modify it to ensure finite termination. <p> Lemma 3.12 ([1], Lemma 2.2.23) Under the hypotheses of Lemma 3.11, there exist constants M 1 , M 2 , and L, depending on the starting point x 0 , such that for all t 2 <ref> [0; 1] </ref>, the following inequalities hold: jf i (x k + t d k )j M 1 ; jrf i (x k + t d k )j M 2 (8) f i (x k ) t L fl fl fl f i (x k + t d k ) f i <p> Furthermore, B j 1, so lim B j = 1, which implies that A j ! 0. 20 Let us now examine the direction finding subproblem (QP j ) for large j. For some ff 2 <ref> [0; 1] </ref>, define ~ d by ~ d i := 0 if i 2 I j j Here we see that (M j + D j ) ~ d + H j = 4 j (1 ff)H J j 5 : Thus, j (x j ; d j ) 1 fl
Reference: [2] <author> A. Brooke, D. Kendrick and A. Meeraus, </author> <title> GAMS: A User's Guide (The Scientific Press, </title> <address> South San Francisco, CA, </address> <year> 1988). </year>
Reference-contexts: This limit is set to 10 when the Modified NE/SQP algorithm is called from Step 2 of QPCOMP, and is increased by 4 whenever the Modified NE/SQP algorithm fails, up to a maximum of 30. QPCOMP was interfaced with the GAMS modeling language <ref> [2, 6] </ref>, allowing problems to be easily specified in GAMS, and the algorithm to be tested using MCPLIB [4] and GAMSLIB [2]. Specifically, we tested QPCOMP on every problem with fewer than 110 variables in MCPLIB and GAMSLIB. <p> QPCOMP was interfaced with the GAMS modeling language [2, 6], allowing problems to be easily specified in GAMS, and the algorithm to be tested using MCPLIB [4] and GAMSLIB <ref> [2] </ref>. Specifically, we tested QPCOMP on every problem with fewer than 110 variables in MCPLIB and GAMSLIB. Larger problems were excluded because our implementation of QPCOMP uses a dense solver for the QP subproblems. Table 2 summarizes the features of the problems tested.
Reference: [3] <author> C. Chen and O. L. Mangasarian, </author> <title> "A class of smoothing functions for nonlinear and mixed complementarity problems", </title> <note> Computational Optimization and Applications 5 (1996) 97-138. </note>
Reference-contexts: Among the algorithms included in this class are PATH [5, 15], MILES [17], SMOOTH <ref> [3] </ref>, NE/SQP [14], and BDIFF [10]. Within this basic framework, there are substantial differences between the algorithms; the algorithms differ in the choice of merit function, the techniques used for determining search directions, and the globalization strategies used to guarantee descent of the merit function. <p> Larger problems were excluded because our implementation of QPCOMP uses a dense solver for the QP subproblems. Table 2 summarizes the features of the problems tested. We also tested NE/SQP, PATH version 2.8 [5], and SMOOTH version 3.0 <ref> [3] </ref> on the problems in Table 2. To run NE/SQP, we simply used the QPCOMP algorithm with = 1 and fl = 0. A comparison of the performance of the algorithms is given in Table 3.
Reference: [4] <author> S. P. Dirkse and M. C. Ferris, "MCPLIB: </author> <title> A collection of nonlinear mixed complementarity problems", </title> <note> Optimization Methods and Software 5 (1995) 319-345. 26 </note>
Reference-contexts: Note that by choosing l = 0 and u = 1, the MCP reduces to the standard nonlinear comple mentarity problem (NCP), which is to find x 0 such that f (x) 0 and x &gt; f (x) = 0: Complementarity problems (both MCP and NCP) arise in many applications <ref> [4, 7] </ref> and are the subject of much recent computational work. Indeed in recent years, a significant number of algorithms have been developed to solve complementarity problems. <p> QPCOMP was interfaced with the GAMS modeling language [2, 6], allowing problems to be easily specified in GAMS, and the algorithm to be tested using MCPLIB <ref> [4] </ref> and GAMSLIB [2]. Specifically, we tested QPCOMP on every problem with fewer than 110 variables in MCPLIB and GAMSLIB. Larger problems were excluded because our implementation of QPCOMP uses a dense solver for the QP subproblems. Table 2 summarizes the features of the problems tested.
Reference: [5] <author> S. P. Dirkse and M. C. Ferris, </author> <title> "The PATH solver: A non-monotone stabilization scheme for mixed complementarity problems", </title> <note> Optimization Methods and Software 5 (1995) 123-156. </note>
Reference-contexts: Among the algorithms included in this class are PATH <ref> [5, 15] </ref>, MILES [17], SMOOTH [3], NE/SQP [14], and BDIFF [10]. Within this basic framework, there are substantial differences between the algorithms; the algorithms differ in the choice of merit function, the techniques used for determining search directions, and the globalization strategies used to guarantee descent of the merit function. <p> Specifically, we tested QPCOMP on every problem with fewer than 110 variables in MCPLIB and GAMSLIB. Larger problems were excluded because our implementation of QPCOMP uses a dense solver for the QP subproblems. Table 2 summarizes the features of the problems tested. We also tested NE/SQP, PATH version 2.8 <ref> [5] </ref>, and SMOOTH version 3.0 [3] on the problems in Table 2. To run NE/SQP, we simply used the QPCOMP algorithm with = 1 and fl = 0. A comparison of the performance of the algorithms is given in Table 3.
Reference: [6] <author> S. P. Dirkse, M. C. Ferris, P. V. Preckel and T. Rutherford, </author> <title> "The GAMS callable program library for variational and complementarity solvers", </title> <type> Mathematical Programming Technical Report 94-07, </type> <institution> Computer Sciences Department, University of Wisconsin (Madison, Wisconsin, </institution> <year> 1994), </year> <note> Available from ftp://ftp.cs.wisc.edu/math-prog/tech-reports/. </note>
Reference-contexts: This limit is set to 10 when the Modified NE/SQP algorithm is called from Step 2 of QPCOMP, and is increased by 4 whenever the Modified NE/SQP algorithm fails, up to a maximum of 30. QPCOMP was interfaced with the GAMS modeling language <ref> [2, 6] </ref>, allowing problems to be easily specified in GAMS, and the algorithm to be tested using MCPLIB [4] and GAMSLIB [2]. Specifically, we tested QPCOMP on every problem with fewer than 110 variables in MCPLIB and GAMSLIB.
Reference: [7] <author> M. C. Ferris and J. S. Pang, </author> <title> "Engineering and economic applications of complementarity problems", Discussion Papers in Economics 95-4, </title> <institution> Department of Economics, University of Colorado (Boulder, Colorado, </institution> <year> 1995), </year> <note> Available from ftp://ftp.cs.wisc.edu/math-prog/tech-reports/. </note>
Reference-contexts: Note that by choosing l = 0 and u = 1, the MCP reduces to the standard nonlinear comple mentarity problem (NCP), which is to find x 0 such that f (x) 0 and x &gt; f (x) = 0: Complementarity problems (both MCP and NCP) arise in many applications <ref> [4, 7] </ref> and are the subject of much recent computational work. Indeed in recent years, a significant number of algorithms have been developed to solve complementarity problems.
Reference: [8] <author> S. A. Gabriel, </author> <title> Algorithms for the Nonlinear Complementarity Problem: The NE/SQP Method and Extensions (Ph.D. </title> <type> thesis, </type> <institution> The Johns Hopkins University, Baltimore, Maryland, </institution> <year> 1992). </year>
Reference-contexts: Moreover, we omit the proofs to Proposition 3.1, Theorem 3.4 and Lemma 3.5. However, detailed proofs for these results are given in [1, Chapter 2]. Once the extended NE/SQP algorithm is presented we will then modify it to ensure finite termination. We note that Gabriel <ref> [8] </ref> also extended NE/SQP to address the upper bound nonlinear complementarity problem, a special case of MCP where l = 0 and u &gt; 0 is finite. 3.1 Extension of NE/SQP to the MCP Framework Recall that a vector x solves MCP (f; IB ) if and only if (x) =
Reference: [9] <author> P. T. Harker and J. S. Pang, </author> <title> "Finite-dimensional variational inequality and nonlinear complementarity problems: A survey of theory, algorithms and applications", </title> <note> Mathematical Programming 48 (1990) 161-220. </note>
Reference-contexts: It is known <ref> [9] </ref> that if a function g : IR n ! IR is pseudo-convex [11, Definition 9.3.1], then rg is a pseudo-monotone function. However, if g is only pseudo-convex at a point x fl , it does not necessarily follow that rg is pseudo-monotone at x fl .
Reference: [10] <author> P. T. Harker and B. Xiao, </author> <title> "Newton's method for the nonlinear complementarity problem: A B-differentiable equation approach", </title> <note> Mathematical Programming 48 (1990) 339-358. </note>
Reference-contexts: Among the algorithms included in this class are PATH [5, 15], MILES [17], SMOOTH [3], NE/SQP [14], and BDIFF <ref> [10] </ref>. Within this basic framework, there are substantial differences between the algorithms; the algorithms differ in the choice of merit function, the techniques used for determining search directions, and the globalization strategies used to guarantee descent of the merit function.
Reference: [11] <author> O. L. Mangasarian, </author> <title> Nonlinear Programming (McGraw-Hill, </title> <address> New York, </address> <year> 1969), </year> <note> SIAM Classics in Applied Mathematics 10, SIAM, Philadelphia, </note> <year> 1994. </year>
Reference-contexts: It is known [9] that if a function g : IR n ! IR is pseudo-convex <ref> [11, Definition 9.3.1] </ref>, then rg is a pseudo-monotone function. However, if g is only pseudo-convex at a point x fl , it does not necessarily follow that rg is pseudo-monotone at x fl . Pseudo-monotonicity is a weaker condition than monotonicity. In particular, every monotone function is pseudo-monotone.
Reference: [12] <author> B. A. Murtagh and M. A. Saunders, </author> <title> "MINOS 5.0 user's guide", </title> <type> Technical Report SOL 83.20, </type> <institution> Stanford University (Stanford, California, </institution> <year> 1983). </year>
Reference-contexts: The Fortran package MINOS <ref> [12] </ref> was used to solve the quadratic subproblems. The algorithm allows for a great deal of flexibility in the choice of parameters, which can be specified in an options file.
Reference: [13] <author> J. M. Ortega and W. C. Rheinboldt, </author> <title> Iterative Solution of Nonlinear Equations in Several Variables (Academic Press, </title> <address> San Diego, California, </address> <year> 1970). </year>
Reference-contexts: The Euclidean and max norms are denoted by kk and kk 1 , respectively. Throughout the paper, we use the standard definitions of monotone and strongly monotone functions <ref> [13, Definition 5.4.2] </ref>. Similarly, in discussing convergence rates, we use the standard definitions of Q-superlinear and Q-quadratic convergence [13, Chapter 9]. <p> The Euclidean and max norms are denoted by kk and kk 1 , respectively. Throughout the paper, we use the standard definitions of monotone and strongly monotone functions [13, Definition 5.4.2]. Similarly, in discussing convergence rates, we use the standard definitions of Q-superlinear and Q-quadratic convergence <ref> [13, Chapter 9] </ref>. Finally, we use the symbol IR + to represent the nonnegative real numbers. 2 The Basic Idea As mentioned in the introduction, numerous algorithms exist which are extremely proficient at solving monotone or strongly monotone mixed complementarity problems.
Reference: [14] <author> J. S. Pang and S. A. Gabriel, "NE/SQP: </author> <title> A robust algorithm for the nonlinear complementarity problem", </title> <note> Mathematical Programming 60 (1993) 295-338. </note>
Reference-contexts: Among the algorithms included in this class are PATH [5, 15], MILES [17], SMOOTH [3], NE/SQP <ref> [14] </ref>, and BDIFF [10]. Within this basic framework, there are substantial differences between the algorithms; the algorithms differ in the choice of merit function, the techniques used for determining search directions, and the globalization strategies used to guarantee descent of the merit function. <p> This strategy provides a means of extending any algorithm which reliably solves strongly monotone MCPs so that it will solve a much broader class of problems. In particular, it will solve any problem which satisfies a pseudo-monotonicity condition at a solution. Applying this strategy to the NE/SQP algorithm <ref> [14] </ref>, results in the QPCOMP algorithm. NE/SQP is an algorithm for solving nonlinear complementarity problems that has a number of theoretical advantages. We present this algorithm in Section 3, along with extensions to the MCP framework that are necessary for its use in our context. <p> The next two sections of the paper are devoted to addressing these details. 3 Subproblem Solution In this section, we present an algorithm for solving strongly monotone MCPs, which is based on the NE/SQP algorithm <ref> [14] </ref>. NE/SQP was originally developed as a method for solving the nonlinear 6 complementarity problem. When it was first introduced, NE/SQP offered a significant advance in the robustness of NCP solvers because the subproblems it needs to solve at each iteration are convex quadratic programs, which are always solvable. <p> This is in marked contrast to the SMOOTH algorithm which requires f to be defined on all of IR n . In this section, we first present the NE/SQP algorithm extended to the MCP framework. Since the development closely parallels that given in <ref> [14] </ref>, we are deliberately terse in our presentation. Moreover, we omit the proofs to Proposition 3.1, Theorem 3.4 and Lemma 3.5. However, detailed proofs for these results are given in [1, Chapter 2]. Once the extended NE/SQP algorithm is presented we will then modify it to ensure finite termination. <p> + y i 0 i 2 I f i (x) + rf i (x) &gt; y 0 i 2 I y i = 0 i 2 I 0 S eu (x): Note that when l = 0; u = 1 the above definition is identical to the concept of s-regularity <ref> [14, Definition 1] </ref>. The following theorem parallels the convergence results of [14, Theorems 1 and 2] and establishes the fact that the NE/SQP algorithm has very good local convergence behavior. Theorem 3.4 ([1], Theorems 2.2.12 and 2.2.15) Let f : IB ! IR n be a once continuously differentiable function. <p> The following theorem parallels the convergence results of <ref> [14, Theorems 1 and 2] </ref> and establishes the fact that the NE/SQP algorithm has very good local convergence behavior. Theorem 3.4 ([1], Theorems 2.2.12 and 2.2.15) Let f : IB ! IR n be a once continuously differentiable function. Let x 0 2 IB be arbitrary.
Reference: [15] <author> D. Ralph, </author> <title> "Global convergence of damped Newton's method for nonsmooth equations, via the path search", </title> <note> Mathematics of Operations Research 19 (1994) 352-389. </note>
Reference-contexts: Among the algorithms included in this class are PATH <ref> [5, 15] </ref>, MILES [17], SMOOTH [3], NE/SQP [14], and BDIFF [10]. Within this basic framework, there are substantial differences between the algorithms; the algorithms differ in the choice of merit function, the techniques used for determining search directions, and the globalization strategies used to guarantee descent of the merit function.
Reference: [16] <author> R. T. Rockafellar, </author> <title> "Monotone operators and augmented Lagrangian methods in nonlinear programming", </title> <editor> in: O. L. Mangasarian, R. R. Meyer and S. M. Robinson eds., </editor> <publisher> Nonlinear Programming 3 (Academic Press, London, </publisher> <pages> 1978) pp. 1-26. </pages>
Reference-contexts: Note that every subproblem in the sequence uses the same choice of , but a different choice of centering point. In particular the centering point for one subproblem is the solution of the previous subproblem. This is very reminiscent of the proximal point algorithm <ref> [16] </ref> and of Tikhonov regularization [18]. The following lemma gives sufficient conditions for a subsequence of these iterates to converge to a solution of MCP (f; IB ).
Reference: [17] <author> T. F. Rutherford, "MILES: </author> <title> A mixed inequality and nonlinear equation solver", </title> <type> Working Paper, </type> <institution> Department of Economics, University of Colorado, Boulder. </institution>
Reference-contexts: Among the algorithms included in this class are PATH [5, 15], MILES <ref> [17] </ref>, SMOOTH [3], NE/SQP [14], and BDIFF [10]. Within this basic framework, there are substantial differences between the algorithms; the algorithms differ in the choice of merit function, the techniques used for determining search directions, and the globalization strategies used to guarantee descent of the merit function.
Reference: [18] <author> A. N. Tikhonov and V. Y. </author> <title> Arsenin, </title> <publisher> Solutions of Ill-Posed Problems (John Wiley & Sons, </publisher> <address> New York, </address> <year> 1977). </year> <month> 27 </month>
Reference-contexts: Note that every subproblem in the sequence uses the same choice of , but a different choice of centering point. In particular the centering point for one subproblem is the solution of the previous subproblem. This is very reminiscent of the proximal point algorithm [16] and of Tikhonov regularization <ref> [18] </ref>. The following lemma gives sufficient conditions for a subsequence of these iterates to converge to a solution of MCP (f; IB ).
References-found: 18

