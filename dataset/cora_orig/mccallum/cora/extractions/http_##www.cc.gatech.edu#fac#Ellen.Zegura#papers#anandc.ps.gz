URL: http://www.cc.gatech.edu/fac/Ellen.Zegura/papers/anandc.ps.gz
Refering-URL: 
Root-URL: 
Email: fbobby,calvert,ewzg@cc.gatech.edu  
Title: On Active Networking and Congestion  
Author: Samrat Bhattacharjee Kenneth L. Calvert Ellen W. Zegura 
Address: Atlanta, Georgia 30332-0280  
Affiliation: College of Computing Georgia Institute of Technology  
Web: GIT-CC-96/02  
Abstract: Active networking offers a change in the usual network paradigm: from passive carrier of bits to a more general computation engine. The implementation of such a change is likely to enable radical new applications that cannot be foreseen today. Large-scale deployment, however, involves significant challenges in interoperability and security. Less clear, perhaps, are the "immediate" benefits of such a paradigm shift, and how they might be used to justify migration towards active networking. In this paper, we focus on the benefits of active networking with respect to a problem that is unlikely to disappear in the near future: network congestion. In particular, we consider application-specific processing of user data within the network at congested nodes. Given an architecture in which applications can specify intra-network processing, the bandwidth allocated to each application's packets can be reduced in a manner that is tailored to the application, rather than being applied generically. We consider a range of schemes for processing application data during congestion, including "unit" level dropping (a generalization of packet dropping), media transformation, and multi-stream interaction. We also present some architectural considerations for a simple approach, in which packets are labeled to indicate permitted manipulations. Our results suggest that congestion control makes a good case for active networking, enabling schemes that are not possible within the conventional view of the network. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> ForeRunner ASX-200, </author> <note> software version 3.4.x edition. </note>
Reference-contexts: Thus, the link into the active processor appears to be faster, relatively speaking. 4.2 Details It is important to understand some of the operational details of the Fore ASX-200 switch <ref> [1] </ref>, as they have constrained and dictated portions of our implementation. Network Device Characteristics. Each VC is characterized at circuit setup time by peak and mean data rate, and burst capacity.
Reference: [2] <institution> ISO DIS 10918-1 Digital compression and coding of continuous-tone still images (JPEG). CCITT Recommendation T.81. </institution>
Reference-contexts: Their focus is on accomodating an environment with heterogeneous transmission and endstation capabilities, by converting video from one representation format to another. An implementation of a JPEG <ref> [2] </ref> to H.261 [3] transcoder can reduce the bandwidth of a video stream from 6 Mbps to 128 kbps. Amir et al. further consider some temporal and spatial bandwidth reduction techniques to use in concert with format conversion. 3 Our Approach 3.1 Motivation Our approach is motivated by several expectations. <p> In general, this reduced-bandwidth form is not obtained by simply dropping units from the higher-bandwidth form. The importance of graceful degradation is well recognized, and indeed is supported by techniques such as layered encoding of images and video <ref> [2, 11, 16] </ref>. In layered encoding, the image is coded into successive levels. Reconstruction is possible (albeit at lower quality) even if one or more lower level components are missing.
Reference: [3] <institution> Video codec for audiovisual services at p*64kb/s. ITU-T Recommendation H.261. </institution>
Reference-contexts: Their focus is on accomodating an environment with heterogeneous transmission and endstation capabilities, by converting video from one representation format to another. An implementation of a JPEG [2] to H.261 <ref> [3] </ref> transcoder can reduce the bandwidth of a video stream from 6 Mbps to 128 kbps. Amir et al. further consider some temporal and spatial bandwidth reduction techniques to use in concert with format conversion. 3 Our Approach 3.1 Motivation Our approach is motivated by several expectations.
Reference: [4] <author> E. Amir, W. McCanne, and H. Zhang. </author> <title> An application level video gateway. </title> <booktitle> In ACM Multimedia '95, </booktitle> <year> 1995. </year>
Reference-contexts: networking technology is either needed or already exists in some form [23]: * Multicast routers, which selectively duplicate packets before forwarding them on links. * Video gateways, capable of transcoding video (i.e., changing from one representation format to another) as it passes from one part of the network to another <ref> [4] </ref>. * Firewalls, which selectively filter data passing into and out of an administrative domain. In addition to these relatively incremental examples, wide-spread implementation of active networking is likely to enable radical new applications that cannot be foreseen today. <p> Separating traffic more finely into classes allows further specialization of treatment. 3 While dynamic congestion control is not an explicit goal of Amir et al.'s application level video gateway <ref> [4] </ref>, their techniques for transcoding can have the effect of bandwidth reduction. Their focus is on accomodating an environment with heterogeneous transmission and endstation capabilities, by converting video from one representation format to another.
Reference: [5] <author> G. Armitage and K. Adans. </author> <title> Packet reassembly during cell loss. </title> <journal> IEEE Network Magazine, </journal> <month> September </month> <year> 1993. </year>
Reference-contexts: Examples of processing that could be called "active" can be found in existing congestion control mechanisms. Recognizing the performance degradation caused by fragmentation [14], packet-level discard techniques have been explored to improve the performance of TCP/IP over ATM <ref> [5, 19] </ref>. The Partial Packet Discard strategy drops all cells in a packet that follow a dropped cell [5]; the Early Packet Discard strategy improves performance by aggressively dropping entire packets when a congestion threshold is reached [19]. <p> Recognizing the performance degradation caused by fragmentation [14], packet-level discard techniques have been explored to improve the performance of TCP/IP over ATM [5, 19]. The Partial Packet Discard strategy drops all cells in a packet that follow a dropped cell <ref> [5] </ref>; the Early Packet Discard strategy improves performance by aggressively dropping entire packets when a congestion threshold is reached [19]. <p> Our answer is that in the AP, this storage can be much more flexibly used. Many of the other processing functions discussed below use this basic capability as a building block. Unit-Level Dropping. Unit-level dropping is a natural extension of packet-level discard <ref> [5, 19] </ref>. Units that are meaningful to the application are dropped if any portion of the unit must be dropped. Note that to be most effective, this does require buffering at the AP to collect a unit so that it is clear that the "tail" will not be dropped.
Reference: [6] <author> Ran Atkinson. </author> <title> Ip authentication header. </title> <type> RFC 1826, </type> <month> August </month> <year> 1995. </year>
Reference-contexts: implemented in our experimental setup.) If the Internet Protocol (version 4 or version 6) is being used as the end-to-end switching layer, we recommend that the APCI be treated as a "sublayer" or optional header, as is done for example with the headers used to implement the IP security architecture <ref> [6, 7] </ref>. At a node where active processing takes place, the switch examines packets for APCI and processes those in which it is present.
Reference: [7] <author> Ran Atkinson. </author> <title> Ip encapsulating security payload. </title> <type> RFC 1827, </type> <month> August </month> <year> 1995. </year>
Reference-contexts: implemented in our experimental setup.) If the Internet Protocol (version 4 or version 6) is being used as the end-to-end switching layer, we recommend that the APCI be treated as a "sublayer" or optional header, as is done for example with the headers used to implement the IP security architecture <ref> [6, 7] </ref>. At a node where active processing takes place, the switch examines packets for APCI and processes those in which it is present.
Reference: [8] <author> D. Clark and D. Tennenhouse. </author> <title> Architectural considerations for a new generation of protocols. </title> <booktitle> In ACM SIGCOMM '90, </booktitle> <year> 1990. </year>
Reference-contexts: If anything (e.g. fragmentation) causes a restructuring of the packet while it is in transit through the network, the network layer must adjust the APCI so it remains consistent. However, fragmentation has been avoided as much as possible for some time [14], and the philosophy of Application Layer Framing <ref> [8] </ref> has gained wide acceptance. Where ALF prevails, the network tries to preserve the structure of the data units created by the application, and the network layer can be mostly independent of active networking. 6.2.2 Attaching the APCI The Active Processing control information may depend on multiple protocol layers.
Reference: [9] <author> A. Eleftheriadis and D. Anastassiou. </author> <title> Constained and general dynamic rate shaping of compressed digital video. </title> <booktitle> In IEEE International Conference on Image Processing, </booktitle> <address> Washington, D.C., </address> <month> October </month> <year> 1995. </year>
Reference-contexts: They could work well 7 in conjunction with layered encoding to tailor the transformed stream to the desired bandwidth. A number of techniques are suitable for on-the-fly transformation of MPEG and JPEG data, including selective discard of discrete cosine transform (DCT) coefficients <ref> [9, 22, 17] </ref>, and decoding and recoding at higher quantization. Multi-stream Interaction. As alluded to earlier, active networks are capable of operating on units that have been defined to include data from multiple streams. Consider the following examples of multi-stream interactions: * Multimedia playout.
Reference: [10] <author> D. Feldmeier. </author> <title> A data-labelling technique for high-performance protocol processing and its consequences. </title> <booktitle> In ACM SIGCOMM '93, </booktitle> <year> 1993. </year>
Reference-contexts: B's data units have APCI attached by the AAL. As the data unit progresses down through the stack, each layer adds its label to the APCI; this information can be used to encode the structure of the data at all levels, as described in Feldmeier's "chunk" labeling scheme <ref> [10] </ref>. At the receiver, the APCI must be recognized by the appropriate layer. In the simplest case, it is discarded. For example, with IPv6, it might be treated as an unrecognized option header.
Reference: [11] <author> International Organisation for Standardisation. </author> <title> Generic coding of moving pictures and associated audio. </title> <address> ISO/IEC/JTC1/SC29/WG-11, </address> <month> March </month> <year> 1993. </year>
Reference-contexts: In general, this reduced-bandwidth form is not obtained by simply dropping units from the higher-bandwidth form. The importance of graceful degradation is well recognized, and indeed is supported by techniques such as layered encoding of images and video <ref> [2, 11, 16] </ref>. In layered encoding, the image is coded into successive levels. Reconstruction is possible (albeit at lower quality) even if one or more lower level components are missing.
Reference: [12] <author> J. Gosling and H. McGilton. </author> <title> The Java language environment: A White paper. Sun Microsystems, </title> <year> 1995. </year>
Reference-contexts: Many proposals for moving toward active networking tend toward the more general end of the scale <ref> [12, 23] </ref>, with programs in a Turing-complete language attached to each packet.
Reference: [13] <author> V. Jacobson. </author> <title> Congestion avoidance and control. </title> <booktitle> In ACM SIGCOMM '88, </booktitle> <year> 1988. </year>
Reference-contexts: is required for congestion notification information to propagate back to the sender limits the speed with which an application can self-regulate to reduce congestion, or can ramp up when congestion has cleared. (One can argue quite legitimately that a gradual increase following congestion |as provided by slow start in TCP <ref> [13] </ref>| is good practice; an active network node can similarly implement gradual increase mechanisms.) 1.2 Characterizing Active Networks Viewing the network as a computational engine admits a rather large space of possible approaches. <p> Also, reserved bandwidth is likely to cost more. Finally, as computing speeds increase, so will a sending application's ability to trade processing for transmission bandwidth in reaction to congestion in the network. At the same time, however, it must be noted that the sender-adaptation model <ref> [13] </ref>, which has worked so well in the Internet, presents a couple of well-known challenges.
Reference: [14] <author> C. Kent and J. Mogul. </author> <title> Fragmentation considered harmful. </title> <booktitle> In ACM SIGCOMM '87, </booktitle> <month> August </month> <year> 1987. </year>
Reference-contexts: Examples of processing that could be called "active" can be found in existing congestion control mechanisms. Recognizing the performance degradation caused by fragmentation <ref> [14] </ref>, packet-level discard techniques have been explored to improve the performance of TCP/IP over ATM [5, 19]. <p> If anything (e.g. fragmentation) causes a restructuring of the packet while it is in transit through the network, the network layer must adjust the APCI so it remains consistent. However, fragmentation has been avoided as much as possible for some time <ref> [14] </ref>, and the philosophy of Application Layer Framing [8] has gained wide acceptance.
Reference: [15] <author> Philip Lougher. Mpegutil, </author> <year> 1995. </year> <month> 22 </month>
Reference-contexts: Each I-frame plus the following P and B frames forms a group of pictures (GOP), which can be decoded independently of the other frames. We have augmented an existing MPEG decoding tool <ref> [15] </ref> to delimit frames as application units. We further mark each frame with its type, I, P or B. We consider two types of MPEG active processing. Our MPEG Frame Dropping (MPEG-FD) AP performs frame level dropping of MPEG streams. This is unit-level dropping with variable length units.
Reference: [16] <author> S. McCanne and M. Vetterli. </author> <title> Joint source/channel coding for multicast packet video. </title> <booktitle> In IEEE International Conference on Image Processing, </booktitle> <month> October </month> <year> 1995. </year>
Reference-contexts: In general, this reduced-bandwidth form is not obtained by simply dropping units from the higher-bandwidth form. The importance of graceful degradation is well recognized, and indeed is supported by techniques such as layered encoding of images and video <ref> [2, 11, 16] </ref>. In layered encoding, the image is coded into successive levels. Reconstruction is possible (albeit at lower quality) even if one or more lower level components are missing.
Reference: [17] <author> D. G. Morrison, M. E. Nilsson, and M. Ghanbari. </author> <title> Reduction of the bit-rate of compressed video in its coded form. </title> <booktitle> In Sixth International Workshop on Packet Video, </booktitle> <address> Portland, OR, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: They could work well 7 in conjunction with layered encoding to tailor the transformed stream to the desired bandwidth. A number of techniques are suitable for on-the-fly transformation of MPEG and JPEG data, including selective discard of discrete cosine transform (DCT) coefficients <ref> [9, 22, 17] </ref>, and decoding and recoding at higher quantization. Multi-stream Interaction. As alluded to earlier, active networks are capable of operating on units that have been defined to include data from multiple streams. Consider the following examples of multi-stream interactions: * Multimedia playout.
Reference: [18] <author> S. Ramanathan, P. Rangan, and H. Vin. </author> <title> Frame-induced packet discarding: an efficient strategy for video networking. In Workshop on Network and Operating System Support for Digital Audio and Video (NOSSDAV), </title> <month> November </month> <year> 1993. </year>
Reference-contexts: transmit the I-frame. (Note that a more precise dropping scheme is possible, namely one which is aware of the exact dependencies amongst the frames, and triggers a drop of all (transitively) dependent frames whenever a frame must be dropped.) Ramanathan et al. explore similar discard mechanisms to improve video transmission <ref> [18] </ref>. We evaluate the performance of the MPEG APs using two metrics. First, we measure the fraction of transmitted frames that were received, regardless of frame type. These results are given in Figure 3, and include a curve for a Null AP. The buffer size is varied on the x-axis.
Reference: [19] <author> A. Romanow and S. Floyd. </author> <title> Dynamics of TCP traffic over ATM networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <month> May </month> <year> 1995. </year>
Reference-contexts: Examples of processing that could be called "active" can be found in existing congestion control mechanisms. Recognizing the performance degradation caused by fragmentation [14], packet-level discard techniques have been explored to improve the performance of TCP/IP over ATM <ref> [5, 19] </ref>. The Partial Packet Discard strategy drops all cells in a packet that follow a dropped cell [5]; the Early Packet Discard strategy improves performance by aggressively dropping entire packets when a congestion threshold is reached [19]. <p> The Partial Packet Discard strategy drops all cells in a packet that follow a dropped cell [5]; the Early Packet Discard strategy improves performance by aggressively dropping entire packets when a congestion threshold is reached <ref> [19] </ref>. The presence of a cell loss priority bit in the ATM cell header allows the source to indicate to the network that some cells should be treated differently than others under congestion. <p> Our answer is that in the AP, this storage can be much more flexibly used. Many of the other processing functions discussed below use this basic capability as a building block. Unit-Level Dropping. Unit-level dropping is a natural extension of packet-level discard <ref> [5, 19] </ref>. Units that are meaningful to the application are dropped if any portion of the unit must be dropped. Note that to be most effective, this does require buffering at the AP to collect a unit so that it is clear that the "tail" will not be dropped.
Reference: [20] <author> W. David Sincoskie. </author> <title> Development of the U.S. </title> <booktitle> national information infrastructure. Keynote address, International Conference on Computer Communications and Networks (ICCCN'95), </booktitle> <month> September </month> <year> 1995. </year>
Reference-contexts: In an active network, nodes (routers and switches) can perform computations on user data as it traverses the network. Further, applications are provided with a mechanism to select, and even program, the computation that occurs <ref> [20, 23] </ref>. In one proposal these two capabilities are integrated in a capsule entity: a combination of code and data that migrates through the network being executed at nodes [23].
Reference: [21] <author> W. T. Strayer, B. F. Dempsey, and A. C. Weaver. XTP: </author> <title> The Xpress Transfer Protocol. </title> <publisher> Addison-Wesley, </publisher> <year> 1992. </year>
Reference-contexts: Along with the APFI, the application can also pass one or more values to be placed in specific label fields in the APCI. 2 The same approach would apply to any other switched technology used as a subnet by IP, e.g. XTP <ref> [21] </ref>.
Reference: [22] <author> H. Sun, W. Kwok, and J. Zdepski. </author> <title> Architectures for MPEG compressed bitstream scaling. </title> <booktitle> In IEEE International Conference on Image Processing, </booktitle> <address> Washington, D.C., </address> <month> October </month> <year> 1995. </year>
Reference-contexts: They could work well 7 in conjunction with layered encoding to tailor the transformed stream to the desired bandwidth. A number of techniques are suitable for on-the-fly transformation of MPEG and JPEG data, including selective discard of discrete cosine transform (DCT) coefficients <ref> [9, 22, 17] </ref>, and decoding and recoding at higher quantization. Multi-stream Interaction. As alluded to earlier, active networks are capable of operating on units that have been defined to include data from multiple streams. Consider the following examples of multi-stream interactions: * Multimedia playout.
Reference: [23] <author> D. L. Tennenhouse and D. J. Wetherall. </author> <title> Towards an active network architecture. </title> <booktitle> In Multimedia Computing and Networking '96, </booktitle> <month> January </month> <year> 1996. </year>
Reference-contexts: In an active network, nodes (routers and switches) can perform computations on user data as it traverses the network. Further, applications are provided with a mechanism to select, and even program, the computation that occurs <ref> [20, 23] </ref>. In one proposal these two capabilities are integrated in a capsule entity: a combination of code and data that migrates through the network being executed at nodes [23]. <p> Further, applications are provided with a mechanism to select, and even program, the computation that occurs [20, 23]. In one proposal these two capabilities are integrated in a capsule entity: a combination of code and data that migrates through the network being executed at nodes <ref> [23] </ref>. The following examples have been cited as evidence that active networking technology is either needed or already exists in some form [23]: * Multicast routers, which selectively duplicate packets before forwarding them on links. * Video gateways, capable of transcoding video (i.e., changing from one representation format to another) as <p> In one proposal these two capabilities are integrated in a capsule entity: a combination of code and data that migrates through the network being executed at nodes <ref> [23] </ref>. The following examples have been cited as evidence that active networking technology is either needed or already exists in some form [23]: * Multicast routers, which selectively duplicate packets before forwarding them on links. * Video gateways, capable of transcoding video (i.e., changing from one representation format to another) as it passes from one part of the network to another [4]. * Firewalls, which selectively filter data passing into and out of <p> Many proposals for moving toward active networking tend toward the more general end of the scale <ref> [12, 23] </ref>, with programs in a Turing-complete language attached to each packet. <p> We conclude with an assessment of our approach, including open issues and areas for future work. Our results suggest that congestion control makes a good case for active networking, enabling schemes that are not possible within the conventional view of the network. 2 Related Work Tennenhouse and Wetherall <ref> [23] </ref> have outlined an architecture and set of issues for active networking. They propose an integrated approach in which capsules containing data and programs replace the traditional (passive) network packets.
Reference: [24] <author> T. von Eicken et al. </author> <title> Active messages: A mechanism for integrated communication and computation. </title> <booktitle> In 19th International Symposium on Computer Architecture, </booktitle> <year> 1992. </year>
Reference-contexts: They propose an integrated approach in which capsules containing data and programs replace the traditional (passive) network packets. Much of their discussion focuses on the programming and security aspects of this architecture, including program scope, cross-platform execution of code, and resource usage. Active messages <ref> [24] </ref> are related to active networking in the sense that the messages contain both user data and information to specify processing at the receiver. (Specifically, each message contains an address of a user-level handler.) However, active messages are intended to optimize performance for a network of workstations or other relatively closely
References-found: 24

