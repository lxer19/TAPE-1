URL: http://www.cs.gatech.edu/people/home/gruia/ipco98b.ps.gz
Refering-URL: http://www.cs.gatech.edu/people/home/gruia/
Root-URL: 
Title: Multicuts in Unweighted Graphs with Bounded Degree and Bounded Tree-Width  
Author: Gruia Calinescu Cristina G. Fernandes Bruce Reed 
Abstract: The Multicut problem can be defined as: given a graph G and a collection of pairs of distinct vertices (s i ; t i ) of G, find a minimum set of edges of G whose removal disconnects each s i from the corresponding t i . The fractional Multicut problem is the dual of the well-known Multicommodity Flow problem. Multicut is known to be NP-hard and Max SNP-hard even when the input graph is restricted to being a tree. The main result of the paper is a polynomial-time approximation scheme (PTAS) for Multicut in unweighted graphs with bounded degree and bounded tree-width. That is, for any * &gt; 0, we present a polynomial-time (1 + *)-approximation algorithm. In the particular case when the input is a bounded-degree tree, we have a linear-time implementation of the algorithm. We also provide some hardness results. We prove that Multicut is still NP-hard for binary trees and that it is Max SNP-hard if we relax any of the three condition (unweighted, bounded-degree, bounded tree-width). We also show that some of these results extend to the vertex version of Multicut.
Abstract-found: 1
Intro-found: 1
Reference: [ALMSS92] <author> S. Arora, C. Lund, R. Motwani, M. Sudan and M. Szegedy, </author> <title> "Proof Verification and Hardness of Approximation Problems," </title> <booktitle> Proc. 33 rd IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> 14-23, </pages> <year> 1992. </year>
Reference-contexts: Identifying this class is the main theoretical result of this paper. Hardness results indicate why we cannot eliminate any of the three restrictions|unweighted, bounded degree and 2 bounded tree-width|on the input graph and still obtain a PTAS. It is known <ref> [ALMSS92] </ref> that for a Max SNP-hard problem, unless P=NP, no PTAS exists. We have already seen that Unweighted Edge Multicut is Max SNP-hard in stars [GVY96], so letting the input graph have unbounded degree makes the problem harder. <p> These are all the edges of the wall. We prove that Edge, Vertex and Unrestricted Vertex Multicut are Max SNP-hard in walls. This means, by Arora et al. <ref> [ALMSS92] </ref>, that there is a constant * &gt; 0 such that the existence of a polynomial-time approximation algorithm for any of the three versions of Multicut with performance ratio at most 1 + * implies that P = N P .
Reference: [AL91] <author> S. Arnborg and J. Lagergren, </author> <title> "Problems Easy for Tree-Decomposable Graphs," </title> <journal> Journal of Algorithms, </journal> <volume> 12 (2), </volume> <pages> 308-340, </pages> <year> 1991. </year>
Reference-contexts: Various NP-hard problems, like Clique or Coloring, have a polynomial-time algorithm (linear time in fact) if the input graph has bounded tree-width (see for example <ref> [AL91] </ref>). We will present the formal definition of tree-width in Section 2. Bounded tree-width can also be used to obtain good approximation algorithms for those problems that remain NP-hard even if restricted to graphs of bounded tree-width.
Reference: [DJPSY94] <author> E. Dahlhaus, D. S. Johnson, C. H. Papadimitriou, P. D. Seymour and M. Yannakakis, </author> <title> "The Complexity of Multiterminal Cuts," </title> <journal> SIAM Journal on Computing, </journal> <volume> 23 (4), </volume> <pages> 864-894, </pages> <year> 1994. </year>
Reference-contexts: The fractional version of a Multicut problem is the dual of a Multicommodity Flow problem and, therefore, Multicut is of similar interest <ref> [DJPSY94, GVY96, GVY97, KARR90, TV93] </ref>. <p> For k = 2, a variant of the Max-Flow Min-Cut Theorem holds [H63, I78] and Multicut is solvable in polynomial time. For k 3, the problem is NP-hard <ref> [DJPSY94] </ref>. Since many variants of the Weighted Multicut are known to be NP-hard, we search for efficient approximation algorithms.
Reference: [D70] <author> E. A. Dinic, </author> <title> "Algorithm for Solution of a Problem of Maximum Flow in Networks with Power Estimation," </title> <journal> Soviet Mathematics Doklady, </journal> <volume> 11, </volume> <pages> 1277-1280, </pages> <year> 1970. </year>
Reference-contexts: The particular case in which k = 1 is characterized by the famous Max-Flow Min-Cut Theorem [FF56], and is solvable in strongly polynomial time <ref> [D70] </ref>. For k = 2, a variant of the Max-Flow Min-Cut Theorem holds [H63, I78] and Multicut is solvable in polynomial time. For k 3, the problem is NP-hard [DJPSY94]. Since many variants of the Weighted Multicut are known to be NP-hard, we search for efficient approximation algorithms.
Reference: [ENSZ96] <author> G. Even, J. S. Naor, B. Schieber and L. Zosin, </author> <title> "Approximating Minimum Subset Feedback Sets in Undi-rected Graphs with Applications," </title> <booktitle> Proc. 4 th Israel Symposium on Theory of Computing and Systems, </booktitle> <pages> 78-88, </pages> <year> 1996. </year>
Reference: [FF56] <author> L. R. Ford and D. R. Fulkerson, </author> <title> "Maximal flow through a network," </title> <journal> Canadian Journal of Mathematics, </journal> <volume> 8, </volume> <pages> 399-404, </pages> <year> 1956. </year>
Reference-contexts: The particular case in which k = 1 is characterized by the famous Max-Flow Min-Cut Theorem <ref> [FF56] </ref>, and is solvable in strongly polynomial time [D70]. For k = 2, a variant of the Max-Flow Min-Cut Theorem holds [H63, I78] and Multicut is solvable in polynomial time. For k 3, the problem is NP-hard [DJPSY94].
Reference: [FF58] <author> L. R. Ford and D. R. Fulkerson, </author> <title> "A Suggested Computation for Maximal Multicommodity Network Flows," </title> <journal> Management Science, </journal> <volume> 5, </volume> <pages> 97-101, </pages> <year> 1958. </year>
Reference-contexts: 1 Introduction Multicommodity Flow problems have been intensely studied for decades <ref> [FF58, H63, GVY96, KARR90, LR88, PT93] </ref> because of their practical applications and also of the appealing hardness of several of their versions. The fractional version of a Multicut problem is the dual of a Multicommodity Flow problem and, therefore, Multicut is of similar interest [DJPSY94, GVY96, GVY97, KARR90, TV93].
Reference: [GJ79] <author> M. R. Garey and D. S. Johnson, </author> <title> Computers and Intractability, </title> <editor> W. H. </editor> <publisher> Freeman and Co., </publisher> <year> 1979. </year>
Reference-contexts: Combining the reduction with the PTAS for Unrestricted Vertex Multicut in graphs of bounded tree-width, we obtain a PTAS for Unweighted Edge Multicut in graphs with bounded degree and bounded tree-width. This is the main result of the paper. Note that, according to <ref> [GJ79, page 140, Theorem 6.8] </ref>, a FPTAS cannot exist for this problem, unless P=NP. We also have a linear-time implementation of our PTAS for Edge Multicut in bounded-degree trees. <p> Theorem 4.1 Edge Multicut in binary trees is NP-hard. Proof. The reduction is from 3-SAT, a well-known NP-complete problem <ref> [GJ79] </ref>. Consider an instance of 3-SAT, that is, a set of m clauses C 1 ; C 2 ; : : : ; C m on n variables x 1 ; x 2 ; : : :; x n , each clause with exactly three literals.
Reference: [GVY96] <author> N. Garg, V. Vazirani and M. Yannakakis. </author> <title> "Approximate Max-Flow Min-(Multi)Cut Theorems and Their Applications," </title> <journal> SIAM Journal on Computing, </journal> <volume> 25 (2), </volume> <pages> 235-251, </pages> <year> 1996. </year>
Reference-contexts: 1 Introduction Multicommodity Flow problems have been intensely studied for decades <ref> [FF58, H63, GVY96, KARR90, LR88, PT93] </ref> because of their practical applications and also of the appealing hardness of several of their versions. The fractional version of a Multicut problem is the dual of a Multicommodity Flow problem and, therefore, Multicut is of similar interest [DJPSY94, GVY96, GVY97, KARR90, TV93]. <p> The fractional version of a Multicut problem is the dual of a Multicommodity Flow problem and, therefore, Multicut is of similar interest <ref> [DJPSY94, GVY96, GVY97, KARR90, TV93] </ref>. <p> E-mail: reed@ime.usp.br. Research partially supported by FAPESP (Proc. 96/12111-4) and PRONEX (MCT/FINEP)(Proj. 107/97). 1 The case when the input graph is restricted to a tree has been studied in <ref> [GVY96] </ref>. Unweighted Multicut problem (in which w (e) = 1 for all edges e of G) restricted to stars (trees of height one) is equivalent (including performance ratio) to Minimum Vertex Cover, by Proposition 1 in [GVY96]. It follows that Unweighted Multicut restricted to stars is NP-hard and Max SNP-hard. <p> case when the input graph is restricted to a tree has been studied in <ref> [GVY96] </ref>. Unweighted Multicut problem (in which w (e) = 1 for all edges e of G) restricted to stars (trees of height one) is equivalent (including performance ratio) to Minimum Vertex Cover, by Proposition 1 in [GVY96]. It follows that Unweighted Multicut restricted to stars is NP-hard and Max SNP-hard. In fact, getting a performance ratio better than two seems very hard, since getting a performance ratio better than two for Minimum Vertex Cover remains a challenging open problem [S95]. <p> In fact, getting a performance ratio better than two seems very hard, since getting a performance ratio better than two for Minimum Vertex Cover remains a challenging open problem [S95]. Garg, Vazirani and Yannakakis give an algorithm in <ref> [GVY96] </ref> with a performance ratio of two for the Weighted Multicut problem in trees. Note that the integral unweighted Multicommodity Flow problem in trees is solvable in polynomial time [GVY96]. We find useful two variations of the Multicut problem. <p> Garg, Vazirani and Yannakakis give an algorithm in <ref> [GVY96] </ref> with a performance ratio of two for the Weighted Multicut problem in trees. Note that the integral unweighted Multicommodity Flow problem in trees is solvable in polynomial time [GVY96]. We find useful two variations of the Multicut problem. <p> It is known [ALMSS92] that for a Max SNP-hard problem, unless P=NP, no PTAS exists. We have already seen that Unweighted Edge Multicut is Max SNP-hard in stars <ref> [GVY96] </ref>, so letting the input graph have unbounded degree makes the problem harder. We show that Weighted Edge Multicut is Max SNP-hard in binary trees, therefore letting the input graph be weighted makes the problem harder.
Reference: [GVY97] <author> N. Garg, V. Vazirani and M. Yannakakis. </author> <title> "Primal-Dual Approximation Algorithms for Integral Flow and Multicut in Trees," </title> <journal> Algorithmica, </journal> <volume> 18 (1), </volume> <pages> 3-20, </pages> <year> 1997. </year>
Reference-contexts: The fractional version of a Multicut problem is the dual of a Multicommodity Flow problem and, therefore, Multicut is of similar interest <ref> [DJPSY94, GVY96, GVY97, KARR90, TV93] </ref>. <p> We say A is an ff-approximation algorithm if its performance ratio is at most ff. The smaller the performance ratio, the better. The best known performance ratio for Weighted Multicut in general graphs is O (log k) <ref> [GVY97] </ref>. Important research has been done for improving the performance ratio when the input graph G belongs to special classes of graphs. <p> Solving Vertex Multicut in this instance is equivalent to solving Unrestricted Vertex Multicut in the original instance. Both Vertex Multicut and Unrestricted Vertex Multicut might be of interest on their own. Garg, Vazirani and Yannakakis considered the weighted version of Vertex Multicut, and proved that their algorithm in <ref> [GVY97] </ref> achieves a performance ratio of O (log k) for the weighted version of Vertex Multicut in general graphs. From now on, we refer to Multicut as Edge Multicut, to avoid confusion. Let us mention some results we obtained for Vertex Multicut and Unrestricted Vertex Multicut.
Reference: [HT84] <author> D. Harel and R. E. Tarjan, </author> <title> "Fast Algorithms for Finding Nearest Common Ancestor," </title> <journal> SIAM Journal on Computing, </journal> <volume> 13 (2), </volume> <pages> 338-355, </pages> <year> 1984. </year>
Reference: [H63] <author> T. C. Hu, </author> <title> "Multicommodity Network Flows," </title> <journal> Operations Research, </journal> <volume> 9, </volume> <pages> 898-900, </pages> <year> 1963. </year>
Reference-contexts: 1 Introduction Multicommodity Flow problems have been intensely studied for decades <ref> [FF58, H63, GVY96, KARR90, LR88, PT93] </ref> because of their practical applications and also of the appealing hardness of several of their versions. The fractional version of a Multicut problem is the dual of a Multicommodity Flow problem and, therefore, Multicut is of similar interest [DJPSY94, GVY96, GVY97, KARR90, TV93]. <p> The particular case in which k = 1 is characterized by the famous Max-Flow Min-Cut Theorem [FF56], and is solvable in strongly polynomial time [D70]. For k = 2, a variant of the Max-Flow Min-Cut Theorem holds <ref> [H63, I78] </ref> and Multicut is solvable in polynomial time. For k 3, the problem is NP-hard [DJPSY94]. Since many variants of the Weighted Multicut are known to be NP-hard, we search for efficient approximation algorithms.
Reference: [I78] <author> A. Itai, </author> <title> "Two-Commodity Flow," </title> <journal> Journal of ACM, </journal> <volume> 25, </volume> <pages> 596-611, </pages> <year> 1978. </year>
Reference-contexts: The particular case in which k = 1 is characterized by the famous Max-Flow Min-Cut Theorem [FF56], and is solvable in strongly polynomial time [D70]. For k = 2, a variant of the Max-Flow Min-Cut Theorem holds <ref> [H63, I78] </ref> and Multicut is solvable in polynomial time. For k 3, the problem is NP-hard [DJPSY94]. Since many variants of the Weighted Multicut are known to be NP-hard, we search for efficient approximation algorithms.
Reference: [KARR90] <author> P. Klein, A. Agrawal, R. Ravi and S. Rao, </author> <title> "Approximation through Multicommodity Flow," </title> <booktitle> Proc. 31 st IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> 726-737, </pages> <year> 1990. </year>
Reference-contexts: 1 Introduction Multicommodity Flow problems have been intensely studied for decades <ref> [FF58, H63, GVY96, KARR90, LR88, PT93] </ref> because of their practical applications and also of the appealing hardness of several of their versions. The fractional version of a Multicut problem is the dual of a Multicommodity Flow problem and, therefore, Multicut is of similar interest [DJPSY94, GVY96, GVY97, KARR90, TV93]. <p> The fractional version of a Multicut problem is the dual of a Multicommodity Flow problem and, therefore, Multicut is of similar interest <ref> [DJPSY94, GVY96, GVY97, KARR90, TV93] </ref>. <p> The best known performance ratio for Weighted Multicut in general graphs is O (log k) [GVY97]. Important research has been done for improving the performance ratio when the input graph G belongs to special classes of graphs. For planar graphs, Tardos and Vazirani [TV93], see also <ref> [KARR90] </ref>, give an approximate Max-Flow Min-Cut theorem and an algorithm with a constant performance ratio. fl College of Computing, Georgia Institute of Technology, Atlanta, GA 30332-0280. Research supported in part by NSF grant CCR-9319106. E-mail: gruia@cc.gatech.edu. y Department of Computer Science, University of S~ao Paulo, Brazil. E-mail: cris@ime.usp.br.
Reference: [KPRT97] <author> P. Klein, S. Plotkin, S. Rao and E. Tardos, </author> <title> "Approximation Algorithms for Steiner and Directed Multicuts," </title> <journal> Journal of Algorithms, </journal> <volume> 22 (2), </volume> <pages> 241-269, </pages> <year> 1997. </year>
Reference: [LR88] <author> F. T. Leighton and S. Rao, </author> <title> "An Approximate Max-Flow Min-Cut Theorem for Uniform Multicommodity Flow Problems with Application to Approximation Algorithms," </title> <booktitle> Proc. 29 th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> 422-431, </pages> <year> 1988. </year>
Reference-contexts: 1 Introduction Multicommodity Flow problems have been intensely studied for decades <ref> [FF58, H63, GVY96, KARR90, LR88, PT93] </ref> because of their practical applications and also of the appealing hardness of several of their versions. The fractional version of a Multicut problem is the dual of a Multicommodity Flow problem and, therefore, Multicut is of similar interest [DJPSY94, GVY96, GVY97, KARR90, TV93].
Reference: [S95] <author> D. B. Shmoys, </author> <title> "Computing Near-Optimal Solutions to Combinatorial Optimization Problems," in Combinatorial Optimization, </title> <booktitle> DIMACS Series in Discrete Mathematics and Theoretical Computer Science (20), </booktitle> <editor> W. Cook and L. Lovasz (eds.), </editor> <publisher> AMS Publications, </publisher> <year> 1995, </year> <pages> 355-397. </pages>
Reference-contexts: It follows that Unweighted Multicut restricted to stars is NP-hard and Max SNP-hard. In fact, getting a performance ratio better than two seems very hard, since getting a performance ratio better than two for Minimum Vertex Cover remains a challenging open problem <ref> [S95] </ref>. Garg, Vazirani and Yannakakis give an algorithm in [GVY96] with a performance ratio of two for the Weighted Multicut problem in trees. Note that the integral unweighted Multicommodity Flow problem in trees is solvable in polynomial time [GVY96]. We find useful two variations of the Multicut problem.
Reference: [PT93] <author> S. Plotkin and E. Tardos, </author> <title> "Improved Bounds on the Max-Flow Min-Cut Ratio for Multicommodity Flows," </title> <booktitle> Proc. 25 th Annual ACM Symp. on Theory of Computing, </booktitle> <pages> 691-697, </pages> <year> 1993. </year> <month> 10 </month>
Reference-contexts: 1 Introduction Multicommodity Flow problems have been intensely studied for decades <ref> [FF58, H63, GVY96, KARR90, LR88, PT93] </ref> because of their practical applications and also of the appealing hardness of several of their versions. The fractional version of a Multicut problem is the dual of a Multicommodity Flow problem and, therefore, Multicut is of similar interest [DJPSY94, GVY96, GVY97, KARR90, TV93].
Reference: [PY91] <author> C. H. Papadimitriou and M. Yannakakis. </author> <title> "Optimization, Approximation, and Complexity Classes," </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 43 </volume> <pages> 425-440, </pages> <year> 1991. </year>
Reference-contexts: This means, by Arora et al. [ALMSS92], that there is a constant * &gt; 0 such that the existence of a polynomial-time approximation algorithm for any of the three versions of Multicut with performance ratio at most 1 + * implies that P = N P . As in <ref> [PY91] </ref>, we use the concept of L-reduction, which is a special kind of reduction that preserves approximability. Theorem 4.7 Edge, Vertex and Unrestricted Vertex Multicut are Max SNP-hard in walls. Proof sketch. The reduction is from the well-known Max SNP-hard problem MAX 3-SAT [PY91]. <p> As in <ref> [PY91] </ref>, we use the concept of L-reduction, which is a special kind of reduction that preserves approximability. Theorem 4.7 Edge, Vertex and Unrestricted Vertex Multicut are Max SNP-hard in walls. Proof sketch. The reduction is from the well-known Max SNP-hard problem MAX 3-SAT [PY91]. We show the reduction for Unrestricted Vertex Multicut. The other two reductions are similar. The first part of the L-reduction is the polynomial-time algorithm f and the constant ff.
Reference: [RS86] <author> N. Robertson and P. Seymour, </author> <title> "Graph Minor II. Algorithmic Aspects of Tree-Width," </title> <journal> Journal of Algorithms, </journal> <volume> 7, </volume> <pages> 309-322, </pages> <year> 1986. </year>
Reference-contexts: We have a proof that Vertex Multicut is NP-hard in bounded-degree trees. Unrestricted Vertex Multicut is easier: it is polynomially solvable in trees, but it becomes NP-hard in bounded-degree series-parallel graphs. The tree-width notion (first introduced by Robertson and Seymour <ref> [RS86] </ref>) seems to often capture a property of the input graph which makes hard problems easy. Various NP-hard problems, like Clique or Coloring, have a polynomial-time algorithm (linear time in fact) if the input graph has bounded tree-width (see for example [AL91]).
Reference: [TV93] <author> E. Tardos and V. V. Vazirani, </author> <title> "Improved Bounds for the Max-Flow Min-Multicut Ratio for Planar and K r;r -free graphs," </title> <journal> Information Processing Letters, </journal> <volume> 47 (2), </volume> <pages> 77-80, </pages> <year> 1993. </year>
Reference-contexts: The fractional version of a Multicut problem is the dual of a Multicommodity Flow problem and, therefore, Multicut is of similar interest <ref> [DJPSY94, GVY96, GVY97, KARR90, TV93] </ref>. <p> The best known performance ratio for Weighted Multicut in general graphs is O (log k) [GVY97]. Important research has been done for improving the performance ratio when the input graph G belongs to special classes of graphs. For planar graphs, Tardos and Vazirani <ref> [TV93] </ref>, see also [KARR90], give an approximate Max-Flow Min-Cut theorem and an algorithm with a constant performance ratio. fl College of Computing, Georgia Institute of Technology, Atlanta, GA 30332-0280. Research supported in part by NSF grant CCR-9319106. E-mail: gruia@cc.gatech.edu. y Department of Computer Science, University of S~ao Paulo, Brazil.
Reference: [VL90] <editor> J. van Leeuwen, </editor> <booktitle> "Graph Algorithms," Handbook of Theoretical Computer Science, Volume A, chapter 10, </booktitle> <pages> 525-631. </pages> <publisher> The MIT Press/Elsevier, </publisher> <year> 1990. </year> <month> 11 </month>
Reference-contexts: In our case, Unrestricted Vertex Multicut is NP-hard in graphs of tree-width at most two, since this class of graphs coincides with the series-parallel graphs (see for example <ref> [VL90] </ref>). We give a straightforward PTAS for Unrestricted Vertex Multicut in graphs of bounded tree-width. We present an approximation-ratio preserving reduction from Edge Multicut to Unrestricted Vertex Multicut.
References-found: 22

