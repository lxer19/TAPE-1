URL: ftp://www.cs.utexas.edu/pub/techreports/tr92-04.ps.Z
Refering-URL: http://www.cs.utexas.edu/users/boyer/publications.html
Root-URL: http://www.cs.utexas.edu
Title: A Formal Specification of Some User Mode Instructions for the  
Author: Motorola Robert S. Boyer and Yuan Yu 
Note: February, 1992  
Abstract: Technical Report TR-92-04 Computer Sciences Department University of Texas at Austin Austin, Texas 78712 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> William Bevier, J Strother Moore, Warren Hunt, and William Young. </author> <title> Special issue on system verification. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 5(4), </volume> <year> 1989. </year>
Reference-contexts: D. thesis, Warren Hunt specified the FM8502 microprocessor in the Nqthm logic <ref> [1] </ref>. In Hunt's FM8502 there is only one instruction format. Therefore in the FM8502 "soft-machine" specification one can compute the effective addresses before looking at the op-code. But in the MC68020, there are several instruction formats, and the algorithm for computing effective addresses 23 depends upon what the op-code is. <p> The general style of Nqthm formalization used in this MC68020 specification is the product of over a decade of study by the authors of Nqthm and their students. Especially influential was the FM8502 and Piton work <ref> [1] </ref>.
Reference: [2] <author> Robert S. Boyer and J Strother Moore. </author> <title> A Computational Logic Handbook. </title> <publisher> Academic Press, </publisher> <year> 1988. </year>
Reference-contexts: It is in a spirit of scientific cooperation that we distribute this specification, but we distribute it without any warranty of any kind, on an `as is' basis. The definitions below were written in the logic described in A Computational Logic Handbook, <ref> [2] </ref>, with syntactic extensions for `let' and `cond'. The definitions have been admitted under the definitional principle described in that book, using the mechanical theorem prover also described in that book. <p> The precise axioms and notations for these objects and the built-in functions that operate on these objects may be found in <ref> [2] </ref>. <p> Our initial library mc20-0 contains (i) the basic axioms and definitions of Nqthm, which are described in Chapter 4 of <ref> [2] </ref>, (ii) some proved arithmetic lemmas that are used to help in the admission of the following definitions, and (iii) a definition of the nonnegative integer exponentiation function `exp', which is defined as: exp (x , y) = if y ' 0 then 1 else x fl exp (x , y <p> Especially influential was the FM8502 and Piton work [1]. The development of Nqthm was primarily supported by NSF, ONR, and DARPA. 113 17 Syntax Summary Here is a summary of the conventional syntax used in this report in terms of the official syntax of the Nqthm logic described in <ref> [2] </ref>. (`cond' and `let' are recent extensions not described in [2].) 1. Variables. x , y , z , etc. are printed in italics. 2. Function application. <p> The development of Nqthm was primarily supported by NSF, ONR, and DARPA. 113 17 Syntax Summary Here is a summary of the conventional syntax used in this report in terms of the official syntax of the Nqthm logic described in <ref> [2] </ref>. (`cond' and `let' are recent extensions not described in [2].) 1. Variables. x , y , z , etc. are printed in italics. 2. Function application.
Reference: [3] <author> Robert S. Boyer and Yuan Yu. </author> <title> Automated Correctness Proofs of Machine Code Programs for a Commercial Microprocessor, </title> <type> Technical Report TR-91-33, </type> <address> University of Texas at Austin, </address> <booktitle> to appear in the proceedings of the 11th International Conference on Automated Deduction, Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: 1 Introduction This report contains a formal specification of approximately 80% of the `user mode' instructions of the Motorola MC68020 microprocessor. An earlier report <ref> [3] </ref> describes how we have used this specification to prove mechanically the correctness of several dozen machine code programs, most of them generated by `industrial strength' compilers for C or Ada. Our specification is based upon the user's manual for the MC68020 [4]. <p> This report is decidedly not a tutorial on the MC68020 or on our specification of it. The reader will find it easier to read this specification after having read <ref> [3] </ref>. The reader will also find it invaluable to have a copy of [4] handy. Readers in search of a less stark introduction to this specification will find it in the forthcoming Ph. D. dissertation of Yuan Yu. <p> This theorem should not be confused with the much more general theorem stating the correctness of the same GCD program on all input, a theorem whose mechanical proof is described in <ref> [3] </ref>. 112 16 Acknowledgements We would like to thank Bill Bevier, Don Good, Warren Hunt, Matt Kaufmann, J Moore, and Bill Schelter for their many constructive suggestions and discussions. Special thanks to Fay Goytowski for her meticulous reading of the MC68020 specification, which revealed a dozen or so errors.

References-found: 3

