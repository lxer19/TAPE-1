URL: http://www.cs.utah.edu/~ppsloan/sig97.ps
Refering-URL: http://www.cs.utah.edu/~dejohnso/workshop/talks/sloan/sloan.html
Root-URL: 
Title: Importance Driven Texture Coordinate Optimization  
Author: Peter-Pike J. Sloan David M. Weinstein J. Dean Brederson 
Affiliation: Department of Computer Science University of Utah  
Note: Submitted to Siggraph 97  
Abstract: Traditionally, texture coordinates have been generated and optimized statically, often before a model's textures have even been created. With the arrival of new technologies, such as 3D paint programs, weaknesses of a static optimization process are becoming apparent. These weaknesses arise from constructing a parameterization based solely on the model's geometry, ignoring the fact that detail is not uniformly spaced throughout the texture space. In fact, certain regions of the texture are more important than other regions. In this paper we introduce the notion of the importance map and describe how importance values are derived from both intrinsic properties of the texture and user-guided highlights. Furthermore, we describe how importance maps are used to drive the texture coordinate optimization. Finally, we show how this optimization process can be integrated into a 3D painting environment, enabling dynamic optimization at any stage of texture design. CR Categories and Subject Descriptors: I.3.3 [Computer Graphics] Picture/Image Generation. I.3.7 [Computer Graphics] Graphics and Realism Color Shading and Texture. Additional Keywords and Phrases: texture mapping, texture map distortion, interaction 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> AGRAWALA, M., BEERS, A. C., AND LEVOY, M. </author> <title> 3D painting on scanned surfaces. </title> <booktitle> In 1995 Symposium on Interactive 3D Graphics (Apr. </booktitle> <year> 1995), </year> <editor> P. Hanrahan and J. Winget, </editor> <booktitle> Eds., </booktitle> <pages> pp. 145-150. </pages>
Reference-contexts: The mesh subdivision was irregular, based on detail, but it was never discussed how this would be mapped to a texture. Agrawala <ref> [1] </ref> also used a dense regular mesh, but never attempted to generate a parameterization over the surface. It would be difficult to paint fine details on this surface. Pedersen [19, 20] presented a general 3D painting framework.
Reference: [2] <author> BEERS, A. C., AGRAWALA, M., AND CHADDHA, N. </author> <title> Rendering from compressed textures. </title> <booktitle> In SIGGRAPH 96 Conference Proceedings (1996), </booktitle> <publisher> H. Rush-meier, Ed., </publisher> <pages> pp. 373-378. </pages>
Reference-contexts: He uses the same techniques as [17] to continually minimize the distortion in the mapping. A shortcoming to this approach is that it only works on smooth surfaces and fails at discontinuities. Two earlier papers referred to compressed textures: one using vector quantization by Beers <ref> [2] </ref>, the other by Torborg that utilized a new architecture [22]. The work presented here is complimentary to both of these techniques the notion of user-specified importance could not be easily addressed in a standard compressed representation.
Reference: [3] <author> BENNIS, C., V EZIEN, J.-M., IGL ESIAS, G., AND GAGALOWICZ, A. </author> <title> Piecewise surface flattening for non-distorted texture mapping. </title> <booktitle> In SIGGRAPH 91 Conference Proceedings (July 1991), </booktitle> <editor> T. W. Sederberg, </editor> <publisher> Ed., </publisher> <pages> pp. 237-246. </pages>
Reference-contexts: Minimizing the metric distortion induced by embedding three-dimensional models in texture space has been the focus of previous texture coordinate optimization research <ref> [16, 3, 17, 19, 13] </ref>. While these earlier methods do an excellent job of addressing the geometric form of the model, they are intrinsically limited because they reparameterize as a preprocess; they apply their minimization operations before any paint has been applied to the surface.
Reference: [4] <author> BERMAN, D. F., BARTELL, J. T., AND SALESIN, D. H. Multiresolution painting and compositing. </author> <note> In SIGGRAPH 94 Conference Proceedings (July 1994), </note> <editor> A. Glassner, </editor> <publisher> Ed., </publisher> <pages> pp. 85-90. </pages>
Reference-contexts: We have looked at several common decomposition techniques including Laplacian pyramids [18], wavelets <ref> [7, 4] </ref>, and steerable pyramids [12]. For our application, we use image decomposition to analyze the texture content, thereby deriving the importance value for each texel in its context.
Reference: [5] <author> BLINN, J. F., AND NEWELL, M. E. </author> <title> Textureand reflection in computergenerated images. </title> <booktitle> Communications of the ACM 19 (1976), </booktitle> <pages> 542-546. </pages>
Reference-contexts: 1 Introduction Texture mapping <ref> [5, 11] </ref> has become a popular technique for representing intricate detail with relatively simple geometry. In constructing texture mapped models, the modeler must define a parameterization of the model. This parameterization, often stored as texture coordinates, maps the three-dimensional model space to a flat, two-dimensional texture space.
Reference: [6] <author> BURT, P., AND ADELSON, E. H. </author> <title> A multiresolution spline with application to image mosaics. </title> <journal> ACM Transactions on Graphics 2 (1983), </journal> <pages> 217-236. </pages>
Reference-contexts: We have implemented two methods for specifying importance: the first method employs analysis and decomposition techniques to automatically derive importance from textures, while the second method is user-specified. 2.1 Automatic Specification There has been an extensive amount of research in computer vision <ref> [6] </ref> and recent work in computer graphics [12] on methods of decomposing images to extract features and details. We have looked at several common decomposition techniques including Laplacian pyramids [18], wavelets [7, 4], and steerable pyramids [12].
Reference: [7] <author> CHUI, C. K., Ed. </author> <title> Wavelets: A Tutorial in Theory and Applications. </title> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: We have looked at several common decomposition techniques including Laplacian pyramids [18], wavelets <ref> [7, 4] </ref>, and steerable pyramids [12]. For our application, we use image decomposition to analyze the texture content, thereby deriving the importance value for each texel in its context.
Reference: [8] <author> CROW, F. C. </author> <title> Summed-area tables for texture mapping. </title> <booktitle> In SIGGRAPH 84 Conference Proceedings (July 1984), </booktitle> <publisher> H. Christiansen, Ed., </publisher> <pages> pp. 207-212. </pages>
Reference-contexts: We begin by computing prefix sum tables for each row and column in the importance map. Entries in these tables are the sum of the value of the current element and all of the preceding elements a one-dimensional version of a summed area table <ref> [8] </ref>. Isocontours are then computed separably in each dimension at evenly spaced contour values. We want to define the deformation as a linear mapping from the canonical texture space to the intersection points of the computed isocontours.
Reference: [9] <author> ECK, M., DEROSE, T., DUCHAMP, T., HOPPE, H., LOUNSBERY, M., AND STUETZLE, W. </author> <title> Multiresolution analysis of arbitrary meshes. </title> <booktitle> In SIGGRAPH 95 Conference Proceedings (Aug. </booktitle> <year> 1995), </year> <editor> R. Cook, </editor> <publisher> Ed., </publisher> <pages> pp. 173-182. </pages>
Reference: [10] <author> HANRAHAN, P., AND HAEBERLI, P. E. </author> <title> Direct WYSIWYG painting and texturing on 3D shapes. </title> <booktitle> In SIGGRAPH 90 Conference Proceedings (Aug. </booktitle> <year> 1990), </year> <editor> F. Baskett, </editor> <publisher> Ed., </publisher> <pages> pp. 215-223. </pages>
Reference-contexts: What these optimization methods have failed to take into account is the information distribution within the texture itself they assume that all areas of the model will have equal texture detail. This shortcoming has recently been highlighted with the advent of 3D painting programs <ref> [10, 19, 20] </ref>. With these programs, users now have fine control over where they apply detail on the surface of models, and in practice it is quite common for textures to have extremely inhomogeneous distributions of detail. <p> Again, the key distinctions between this work and our work are in the lack of an importance notion and in the static nature of the parameterization. The original 3D painting paper by Hanrahan <ref> [10] </ref> did not explicitly use textures, but instead used a dense mesh (which could be later turned into a texture if necessary) to represent the surface. The mesh subdivision was irregular, based on detail, but it was never discussed how this would be mapped to a texture.
Reference: [11] <author> HECKBERT, P. S. </author> <title> Survey of texture mapping. In Proceedings of Graphics Interface '86 (May 1986), </title> <editor> M. Green, </editor> <publisher> Ed., </publisher> <pages> pp. 207-212. </pages>
Reference-contexts: 1 Introduction Texture mapping <ref> [5, 11] </ref> has become a popular technique for representing intricate detail with relatively simple geometry. In constructing texture mapped models, the modeler must define a parameterization of the model. This parameterization, often stored as texture coordinates, maps the three-dimensional model space to a flat, two-dimensional texture space.
Reference: [12] <author> HEEGER, D. J., AND BERGEN, J. R. </author> <title> Pyramid-Based texture analysis/synthesis. </title> <booktitle> In SIGGRAPH 95 Conference Proceedings (Aug. </booktitle> <year> 1995), </year> <editor> R. Cook, </editor> <publisher> Ed., </publisher> <pages> pp. 229-238. </pages>
Reference-contexts: We have implemented two methods for specifying importance: the first method employs analysis and decomposition techniques to automatically derive importance from textures, while the second method is user-specified. 2.1 Automatic Specification There has been an extensive amount of research in computer vision [6] and recent work in computer graphics <ref> [12] </ref> on methods of decomposing images to extract features and details. We have looked at several common decomposition techniques including Laplacian pyramids [18], wavelets [7, 4], and steerable pyramids [12]. <p> 2.1 Automatic Specification There has been an extensive amount of research in computer vision [6] and recent work in computer graphics <ref> [12] </ref> on methods of decomposing images to extract features and details. We have looked at several common decomposition techniques including Laplacian pyramids [18], wavelets [7, 4], and steerable pyramids [12]. For our application, we use image decomposition to analyze the texture content, thereby deriving the importance value for each texel in its context. Specifically, we sum the absolute values of the coefficients for the basis functions covering each pixel, where each coefficient is scaled by the appropriate scaling function.
Reference: [13] <author> KRISHNAMURTHY, V., AND LEVOY, M. </author> <title> Fitting smooth surfaces to dense polygon meshes. </title> <booktitle> In SIGGRAPH 96 Conference Proceedings (Aug. </booktitle> <year> 1996), </year> <editor> H. Rush-meier, </editor> <publisher> Ed., </publisher> <pages> pp. 313-324. </pages>
Reference-contexts: Minimizing the metric distortion induced by embedding three-dimensional models in texture space has been the focus of previous texture coordinate optimization research <ref> [16, 3, 17, 19, 13] </ref>. While these earlier methods do an excellent job of addressing the geometric form of the model, they are intrinsically limited because they reparameterize as a preprocess; they apply their minimization operations before any paint has been applied to the surface. <p> To accomplish this, we induce forces on each vertex of the deformed mesh. These forces are similar to those presented by Krishnamurthy et al. in <ref> [13] </ref>, but our method maintains relative importance and minimizes metric distortion. There are two forces for each vertex of every triangle, one which maintains importance and another which minimizes distortion. <p> Two prior papers [16, 17] have used a conjugate gradient algorithm to minimize the metric distortion introduced by the mapping. Maillot [17] presented an attractive interactive environment for creating an initial parameterization over a surface. Krishnamurthy <ref> [13] </ref> describes how to fit smooth surfaces to polygon meshes, using a relaxation technique to optimize the parameterization of the surfaces (and therefore of the textures).
Reference: [14] <author> LEE, S., CHWA, K., SHIN, S. Y., AND WOLBERG, G. </author> <title> Image metamorphosis using snakes and free-form deformations. </title> <booktitle> In SIGGRAPH '95 Conference Proceedings (Aug. </booktitle> <year> 1995), </year> <editor> R. Cook, </editor> <publisher> Ed., </publisher> <pages> pp. 439-448. </pages>
Reference-contexts: warp the texture coordinates via a deformation that optimizes according to the importance map, and second we relax the texture mesh and add a term to minimize metric distortion. 3.1 Constructing the Deformation While there are many techniques to perform this part of the optimization (from both the morphing/warping literature <ref> [14, 23] </ref> and thin plate spline techniques [15]), we chose a technique similar to a multilevel free-form deformation [14]. Using this approach, the deformation is constructed in a coarse-to-fine manner. We begin by computing prefix sum tables for each row and column in the importance map. <p> the texture mesh and add a term to minimize metric distortion. 3.1 Constructing the Deformation While there are many techniques to perform this part of the optimization (from both the morphing/warping literature [14, 23] and thin plate spline techniques [15]), we chose a technique similar to a multilevel free-form deformation <ref> [14] </ref>. Using this approach, the deformation is constructed in a coarse-to-fine manner. We begin by computing prefix sum tables for each row and column in the importance map. <p> This mappings is well-defined because the deformation is guaranteed by construction to be one-to-one. We triangulate the deformed mesh and use a piecewise linear mapping between the canonical and deformed texture spaces. A higher order mapping could easily be used provided the additional constraints presented in <ref> [14] </ref> were used to guarantee that the deformation was one-to-one. canonical and deformed texture spaces.
Reference: [15] <author> LEE, S.-Y., CHWA, K.-Y., HAHN, J., AND SHIN, S.-Y. </author> <title> Image morphing using deformation techniques. </title> <journal> Journal of Visualization and Computer Animation 6, </journal> <month> 3 </month> <year> (1995). </year>
Reference-contexts: that optimizes according to the importance map, and second we relax the texture mesh and add a term to minimize metric distortion. 3.1 Constructing the Deformation While there are many techniques to perform this part of the optimization (from both the morphing/warping literature [14, 23] and thin plate spline techniques <ref> [15] </ref>), we chose a technique similar to a multilevel free-form deformation [14]. Using this approach, the deformation is constructed in a coarse-to-fine manner. We begin by computing prefix sum tables for each row and column in the importance map.
Reference: [16] <author> MA, S. D., AND LIN, H. </author> <title> Optimal texture mapping. </title> <booktitle> In Eurographics '88 (Sept. </booktitle> <year> 1988), </year> <editor> D. A. Duce and P. Jancene, Eds., </editor> <publisher> North-Holland, </publisher> <pages> pp. 421-428. </pages>
Reference-contexts: Minimizing the metric distortion induced by embedding three-dimensional models in texture space has been the focus of previous texture coordinate optimization research <ref> [16, 3, 17, 19, 13] </ref>. While these earlier methods do an excellent job of addressing the geometric form of the model, they are intrinsically limited because they reparameterize as a preprocess; they apply their minimization operations before any paint has been applied to the surface. <p> We give a brief overview of these earlier contributions in the three general related areas of texture coordinate generation/optimization techniques, 3D painting paradigms, and compressed texture representations. Two prior papers <ref> [16, 17] </ref> have used a conjugate gradient algorithm to minimize the metric distortion introduced by the mapping. Maillot [17] presented an attractive interactive environment for creating an initial parameterization over a surface.
Reference: [17] <author> MAILLOT, J., YAHIA, H., AND VERROUST, A. </author> <title> Interactive texture mapping. </title> <booktitle> In SIGGRAPH 93 Conference Proceedings (Aug. </booktitle> <year> 1993), </year> <editor> J. T. Kajiya, </editor> <publisher> Ed., </publisher> <pages> pp. 27-34. </pages>
Reference-contexts: Minimizing the metric distortion induced by embedding three-dimensional models in texture space has been the focus of previous texture coordinate optimization research <ref> [16, 3, 17, 19, 13] </ref>. While these earlier methods do an excellent job of addressing the geometric form of the model, they are intrinsically limited because they reparameterize as a preprocess; they apply their minimization operations before any paint has been applied to the surface. <p> We give a brief overview of these earlier contributions in the three general related areas of texture coordinate generation/optimization techniques, 3D painting paradigms, and compressed texture representations. Two prior papers <ref> [16, 17] </ref> have used a conjugate gradient algorithm to minimize the metric distortion introduced by the mapping. Maillot [17] presented an attractive interactive environment for creating an initial parameterization over a surface. <p> We give a brief overview of these earlier contributions in the three general related areas of texture coordinate generation/optimization techniques, 3D painting paradigms, and compressed texture representations. Two prior papers [16, 17] have used a conjugate gradient algorithm to minimize the metric distortion introduced by the mapping. Maillot <ref> [17] </ref> presented an attractive interactive environment for creating an initial parameterization over a surface. Krishnamurthy [13] describes how to fit smooth surfaces to polygon meshes, using a relaxation technique to optimize the parameterization of the surfaces (and therefore of the textures). <p> Pedersen [19, 20] presented a general 3D painting framework. He advocates the use of patchinos, small regions of the surface that have their own local mapping and can be easily dragged around the surface. He uses the same techniques as <ref> [17] </ref> to continually minimize the distortion in the mapping. A shortcoming to this approach is that it only works on smooth surfaces and fails at discontinuities. Two earlier papers referred to compressed textures: one using vector quantization by Beers [2], the other by Torborg that utilized a new architecture [22].
Reference: [18] <author> OGDEN, J. M., ADELSON, E., BERGEN, J., AND BURT, P. </author> <title> Pyramid-basedcom-puter graphics. </title> <booktitle> RCA Engineer 30 (1985), </booktitle> <pages> 4-15. </pages>
Reference-contexts: We have looked at several common decomposition techniques including Laplacian pyramids <ref> [18] </ref>, wavelets [7, 4], and steerable pyramids [12]. For our application, we use image decomposition to analyze the texture content, thereby deriving the importance value for each texel in its context.
Reference: [19] <author> PEDERSEN, H. K. </author> <title> Decorating implicit surfaces. </title> <booktitle> In SIGGRAPH 95 Conference Proceedings (Aug. </booktitle> <year> 1995), </year> <editor> R. Cook, </editor> <publisher> Ed., </publisher> <pages> pp. 291-300. </pages>
Reference-contexts: Minimizing the metric distortion induced by embedding three-dimensional models in texture space has been the focus of previous texture coordinate optimization research <ref> [16, 3, 17, 19, 13] </ref>. While these earlier methods do an excellent job of addressing the geometric form of the model, they are intrinsically limited because they reparameterize as a preprocess; they apply their minimization operations before any paint has been applied to the surface. <p> What these optimization methods have failed to take into account is the information distribution within the texture itself they assume that all areas of the model will have equal texture detail. This shortcoming has recently been highlighted with the advent of 3D painting programs <ref> [10, 19, 20] </ref>. With these programs, users now have fine control over where they apply detail on the surface of models, and in practice it is quite common for textures to have extremely inhomogeneous distributions of detail. <p> Agrawala [1] also used a dense regular mesh, but never attempted to generate a parameterization over the surface. It would be difficult to paint fine details on this surface. Pedersen <ref> [19, 20] </ref> presented a general 3D painting framework. He advocates the use of patchinos, small regions of the surface that have their own local mapping and can be easily dragged around the surface. He uses the same techniques as [17] to continually minimize the distortion in the mapping.
Reference: [20] <author> PEDERSEN, H. K. </author> <title> A framework for interactive texturing on curved surfaces. </title> <booktitle> In SIGGRAPH 96 Conference Proceedings (Aug. </booktitle> <year> 1996), </year> <editor> H. Rushmeier, </editor> <publisher> Ed., </publisher> <pages> pp. 295-302. </pages>
Reference-contexts: What these optimization methods have failed to take into account is the information distribution within the texture itself they assume that all areas of the model will have equal texture detail. This shortcoming has recently been highlighted with the advent of 3D painting programs <ref> [10, 19, 20] </ref>. With these programs, users now have fine control over where they apply detail on the surface of models, and in practice it is quite common for textures to have extremely inhomogeneous distributions of detail. <p> Agrawala [1] also used a dense regular mesh, but never attempted to generate a parameterization over the surface. It would be difficult to paint fine details on this surface. Pedersen <ref> [19, 20] </ref> presented a general 3D painting framework. He advocates the use of patchinos, small regions of the surface that have their own local mapping and can be easily dragged around the surface. He uses the same techniques as [17] to continually minimize the distortion in the mapping.
Reference: [21] <author> SHIRMAN, L., AND KAMEN, Y. </author> <title> Fast and accurate texture placement. </title> <journal> IEEE Computer Graphics and Applications 17, </journal> <month> 1 (Jan. </month> <year> 1997), </year> <pages> 60-66. </pages>
Reference-contexts: Figure 3.3 shows before and after images of a reparameterized space. in Figure 2b and 2c. 3.4 Application to Parametric Surfaces If the model is a B-spline or Bezier surface, the deformation mesh can be used to reparameterize the surface, as in <ref> [21] </ref>. This repa-rameterization is only used for determining texture coordinates over the surface. The relaxation can be done directly on the deformation mesh, and metric distortion can be explicitly computed and optimized using this mesh as well.
Reference: [22] <author> TORBORG, J., AND KAJIYA, J. T. Talisman: </author> <title> Commodity realtime 3d graphics for the pc. </title> <booktitle> In Computer Graphics Proceedings, Annual Conference Series, </booktitle> <year> 1996 (1996), </year> <pages> pp. 353-363. </pages>
Reference-contexts: A shortcoming to this approach is that it only works on smooth surfaces and fails at discontinuities. Two earlier papers referred to compressed textures: one using vector quantization by Beers [2], the other by Torborg that utilized a new architecture <ref> [22] </ref>. The work presented here is complimentary to both of these techniques the notion of user-specified importance could not be easily addressed in a standard compressed representation.
Reference: [23] <author> WOLBERG, G., AND BOULT, T. E. </author> <title> Separable image warpingwith spatial lookup tables. </title> <booktitle> In SIGGRAPH 89 Conference Proceedings (July 1989), </booktitle> <editor> J. Lane, </editor> <publisher> Ed., </publisher> <pages> pp. 369-378. </pages>
Reference-contexts: warp the texture coordinates via a deformation that optimizes according to the importance map, and second we relax the texture mesh and add a term to minimize metric distortion. 3.1 Constructing the Deformation While there are many techniques to perform this part of the optimization (from both the morphing/warping literature <ref> [14, 23] </ref> and thin plate spline techniques [15]), we chose a technique similar to a multilevel free-form deformation [14]. Using this approach, the deformation is constructed in a coarse-to-fine manner. We begin by computing prefix sum tables for each row and column in the importance map.
References-found: 23

