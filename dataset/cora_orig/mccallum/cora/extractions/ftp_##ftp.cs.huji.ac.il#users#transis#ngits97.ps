URL: ftp://ftp.cs.huji.ac.il/users/transis/ngits97.ps
Refering-URL: http://www.cs.huji.ac.il/~grishac/grishac.html
Root-URL: http://www.cs.huji.ac.il
Email: fanker,grishac,dolev,idishg@cs.huji.ac.il  
Title: The Caelum Toolkit for CSCW: The Sky is the Limit  
Author: Tal Anker Gregory V. Chockler Danny Dolev Idit Keidar 
Address: Jerusalem, Israel  
Affiliation: Institute of Computer Science The Hebrew University of Jerusalem  
Web: http://www.cs.huji.ac.il/f~anker,~grishac,~dolev,~idishg  
Abstract: We present a general framework for the construction of groupware and computer supported cooperative work (CSCW) applications. Examples of such applications include: multi-media and desktop conferencing, distance learning, interactive games and simulations, and collaborative computing. We provide application builders with a software development kit (SDK) that supports sharing of a variety of applications among dynamically changing groups of users. We provide a variety of efficient communication solutions, tuned towards different quality of service (QoS) requirements, as well as tools for maintaining consistency of distributed and replicated information in the face of faults. We exploit the group communication paradigm for dynamic discussion groups, and for keeping track of the dynamically changing set of participants. The discussion groups may be organized hierarchically, and discussion in groups may be secure. Our services are fault tolerant and scalable, and are therefore appropriate for multi processor failure prone networks such as the Internet.
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> ACM. </editor> <booktitle> Communications of the ACM 39(4), special issue on Group Communications Systems, </booktitle> <month> April </month> <year> 1996. </year>
Reference-contexts: This allows to handle a set of processes as a single logical connection. Furthermore, processes may dynamically join or leave these groups. Group communication systems (GCSs), (e.g., Tran-sis, Horus and Totem <ref> [1] </ref>, Ensemble [20], ISIS [11], RMP [38], Phoenix [24] and Newtop [16]) provide group multicast and membership services. The membership service provides the group members with an indication of the current membership: the group of currently connected processes.
Reference: [2] <author> Y. Amir. </author> <title> Replication Using Group Communication Over a Partitioned Network. </title> <type> PhD thesis, </type> <institution> Institute of Computer Science, The Hebrew University of Jerusalem, Israel, </institution> <year> 1995. </year>
Reference-contexts: The long-term consistency service can be implemented using a variety of algorithms with different availability guarantees. Group communication is a powerful building block for such algorithms, e.g., <ref> [23, 2, 3] </ref> all provide long-term consistency services using group communication as a building block.
Reference: [3] <author> Y. Amir, D. Breitgand, G. Chockler, and D. Dolev. </author> <title> Group Communication as an Infrastructure for Distributed System Management. </title> <booktitle> In International Workshop on Services in Distributed and Networked Environment, number 3rd, </booktitle> <pages> pages 84-91, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: Virtual synchrony requires synchronization among the applications and the membership service. This service is costly: it incurs a delay period in which messages may not be transmitted [17]. This synchronization greatly facilitates the design of applications that require consistency (e.g., applications with shared data <ref> [10, 3, 23, 5] </ref>), but is too costly for applications that require real-time message delivery (e.g., video transmission). Caelum provides virtually synchronous communication for groups and message types that explicitly request this service. The implementation of Virtual Synchrony is based on synchronization messages, as depicted in Figure 3. <p> The long-term consistency service can be implemented using a variety of algorithms with different availability guarantees. Group communication is a powerful building block for such algorithms, e.g., <ref> [23, 2, 3] </ref> all provide long-term consistency services using group communication as a building block.
Reference: [4] <author> Y. Amir, G. V. Chockler, D. Dolev, and R. Vitenberg. </author> <title> Efficient State Transfer in Partionable Environments. </title> <booktitle> In Proceedings of European Research Seminar in Advanced Distributed Systems (ERSADS'97), </booktitle> <pages> pages 183-191. </pages> <institution> Laboratoire de Systemes d'Exploitation Ecole Polytechnique Federale de Lausanne, </institution> <month> March </month> <year> 1997. </year>
Reference-contexts: Caelum provides two levels of consistency services: short-term and long-term. The short-term consistency service guarantees to preserve consistency within a group of connected processes. When a partition is mended, the states of previously disconnected replicas are unified using a state transfer protocol. The protocol in <ref> [4] </ref> exploits group communication for efficient implementation of state transfer. The long-term consistency service guarantees a fully serializable history of object updates. This is achieved by prohibiting arbitrary updates of the object in disjoint network components, often, only the members of a primary component may update the object.
Reference: [5] <author> Y. Amir, D. Dolev, P. M. Melliar-Smith, and L. E. Moser. </author> <title> Robust and Efficient Replication using Group Communication. </title> <type> Technical Report CS94-20, </type> <institution> Institute of Computer Science, The Hebrew University of Jerusalem, Jerusalem, Israel, </institution> <year> 1994. </year>
Reference-contexts: Virtual synchrony requires synchronization among the applications and the membership service. This service is costly: it incurs a delay period in which messages may not be transmitted [17]. This synchronization greatly facilitates the design of applications that require consistency (e.g., applications with shared data <ref> [10, 3, 23, 5] </ref>), but is too costly for applications that require real-time message delivery (e.g., video transmission). Caelum provides virtually synchronous communication for groups and message types that explicitly request this service. The implementation of Virtual Synchrony is based on synchronization messages, as depicted in Figure 3.
Reference: [6] <author> T. Anker, D. Breitgand, D. Dolev, and Z. Levy. </author> <title> Congress: CONnection-oriented Group-address RESolution Service. </title> <type> TR 96-23, </type> <institution> Institute of Computer Science, The Hebrew University of Jerusalem, Jerusalem, Israel, </institution> <month> December </month> <year> 1996. </year> <note> Available from: http://www.cs.huji.ac.il/labs/transis/. </note>
Reference-contexts: The Maestro [9] system provides a common membership service for groups of processes running Ensemble [20] with different QoS options. The design of the membership service of Caelum was inspired by Maestro. The basic membership service of Caelum is based on the congress connnection-oriented group-address resolution service <ref> [6] </ref>, which is designed for ATM networks, but may be exploited in other networks as well. congress supports two types of services: address resolution, which is a single query about the group membership, and incremental updates, which provides the user with updates every time the group membership changes. congress provides basic
Reference: [7] <author> T. Anker, G. Chockler, I. Keidar, M. Rozman, and J. </author> <title> Wexler. Exploiting Group Communication for Highly Available Video-On-Demand Services. </title> <booktitle> In Proceedings of the IEEE 13th International Conference on Advanced Science and Technology (ICAST 97) and the 2nd International Conference on Multimedia Information Systems (ICMIS 97), </booktitle> <pages> pages 265-270, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: Implementations of database style reliability (i.e. message recovery and order constraints) may violate these assumptions, rendering the video decoding algorithm (e.g., MPEG <ref> [21, 31, 7] </ref>) incorrect. A desktop and multi-media conferencing tool [30], is a Computer Supported Cooperative Work (CSCW) application incorporating various activities such as video transmission and management of replicated work space. These activities obviously require different qualities of service, and yet are part of the same application. <p> Video Conferencing requires high bandwidth low latency real-time message delivery, but also needs to exchange messages for connection establishment, flow control and negotiation and renegotiation of QoS (agreement on QoS parameters among the communicating parties) [28]. We constructed a video on demand service, <ref> [7] </ref>, that exploits Transis to perform these tasks simply and efficiently. Shared Drawing on a White Board requires low bandwidth totally ordered multicast, and short term consistency. A shared white board [33] was implemented in Java, using Transis.
Reference: [8] <author> R. Baldoni, A. Mostefaoui, and M. Raynal. </author> <title> Causal Delivery of Messages with Real-time Data in Unreliable Networks. </title> <booktitle> Real-Time Systems, </booktitle> <volume> 10, </volume> <year> 1996. </year>
Reference-contexts: After this timeout, the message may be either discarded or delivered in spite of the lack of synchronization, according to the application's specification. This concept generalizes the -Causal communication mode <ref> [8, 39] </ref>. In this communication mode, messages may be lost. Each message has a lifetime, , after which its data is no longer meaningful, hence the message may be discarded. Another example of best-effort semantics is the cyclic UDP [35] prioritized best-effort message recovery mechanism.
Reference: [9] <author> K. Birman, R. Friedman, and M. Hayden. </author> <title> The Maestro Group Manager: A Structuring Tool For Applications With Multiple Quality of Service Requirements. </title> <type> Technical report, </type> <institution> Dept. of Computer Science, Cornell University, </institution> <address> Ithaca, NY 14850, USA, </address> <month> February </month> <year> 1997. </year>
Reference-contexts: Here, we follow the approach taken by Maestro <ref> [9] </ref>, which separates the group multicast services from the membership services. In Section 2 we describe the group communication paradigm, and in Section 3 we describe the MMTS. The membership services of Caelum are described in Section 4, and the session services in Section 5. <p> Furthermore, it is desirable to make such systems fault tolerant. Recently, several emerging projects addressed the challenge of incorporating QoS communication into the framework of group communication. Maestro <ref> [9] </ref> extends the Ensemble [20] group communication system by coordinating several protocol stacks with different QoS guarantees. The Collaborative Computing Transport Layer (CCTL) [29] implements similar concepts, geared towards distributed collaborative multimedia applications. Both systems implement and elaborate the concept of MMTS. <p> Each message targeted to the group's logical name is guaranteed to be delivered to all the currently connected and operational group's members. The Maestro <ref> [9] </ref> system provides a common membership service for groups of processes running Ensemble [20] with different QoS options. The design of the membership service of Caelum was inspired by Maestro.
Reference: [10] <author> K. Birman and T. Joseph. </author> <title> Exploiting Virtual Synchrony in Distributed Systems. </title> <booktitle> In Symp. Operating Systems Principles, </booktitle> <volume> number 11, </volume> <pages> pages 123-138. </pages> <publisher> ACM, </publisher> <month> Nov 87. </month>
Reference-contexts: The agreement protocol is run only for groups that explicitly request this service. Group communication systems usually provide strong semantics of message ordering w.r.t. membership changes, e.g., virtual synchrony <ref> [10, 17, 27] </ref>. Virtual synchrony requires synchronization among the applications and the membership service. This service is costly: it incurs a delay period in which messages may not be transmitted [17]. <p> Virtual synchrony requires synchronization among the applications and the membership service. This service is costly: it incurs a delay period in which messages may not be transmitted [17]. This synchronization greatly facilitates the design of applications that require consistency (e.g., applications with shared data <ref> [10, 3, 23, 5] </ref>), but is too costly for applications that require real-time message delivery (e.g., video transmission). Caelum provides virtually synchronous communication for groups and message types that explicitly request this service. The implementation of Virtual Synchrony is based on synchronization messages, as depicted in Figure 3.
Reference: [11] <author> K. Birman, A. Schiper, and P. Stephenson. </author> <title> Lightweight Causal and Atomic Group Multicast. </title> <journal> ACM Trans. Comp. Syst., </journal> <volume> 9(3) </volume> <pages> 272-314, </pages> <year> 1991. </year>
Reference-contexts: This allows to handle a set of processes as a single logical connection. Furthermore, processes may dynamically join or leave these groups. Group communication systems (GCSs), (e.g., Tran-sis, Horus and Totem [1], Ensemble [20], ISIS <ref> [11] </ref>, RMP [38], Phoenix [24] and Newtop [16]) provide group multicast and membership services. The membership service provides the group members with an indication of the current membership: the group of currently connected processes.
Reference: [12] <author> G. Chockler, N. Huleihel, I. Keidar, and D. Dolev. </author> <title> Multimedia Multicast Transport Service for Group-ware. </title> <booktitle> In TINA Conference on the Convergence of Telecommunications and Distributed Computing Technologies, </booktitle> <month> September </month> <year> 1996. </year> <note> Full version available as Technical Report CS96-3, </note> <institution> The Hebrew University, Jerusalem, Israel. </institution>
Reference-contexts: Caelum is designed to operate in a heterogeneous multi-processor environment. Caelum provides the tools for overcoming machine and network failures. Caelum exploits a novel concept: a Multi-media Multicast Transport Service (MMTS) <ref> [12] </ref>, that supports multiple QoS group communication options 1 . This makes the services of Caelum inherently fault tolerant, and allows the application builder to define the tradeoffs between the level of synchronization/reliability and the timeliness of message delivery. <p> Some components of Caelum were previously implemented in C, and our current effort focuses on implementing parts of Caelum in OCAML, and providing user interfaces in C, Java and OCAML. 1 In <ref> [12] </ref> the membership services are regarded as part of the MMTS. Here, we follow the approach taken by Maestro [9], which separates the group multicast services from the membership services. In Section 2 we describe the group communication paradigm, and in Section 3 we describe the MMTS. <p> These properties are crucial for the performance of application that require real-time message delivery, e.g., video multicast. 3 Multimedia Multicast Transport Ser vices (MMTS) In <ref> [12] </ref> a novel concept is introduced: a Multi-media Multicast Transport Service (MMTS) that supports QoS group communication. The MMTS provides a framework for synchronization of messages with different QoS requirements. The Caelum toolkit exploits the MMTS concept. <p> Cyclic UDP allows the user to specify priorities for messages. Messages with a higher priority are recovered before messages with a lower priority. Message recovery attempts are stopped after a certain timeout period. Cyclic UDP may be incorporated in the MMTS, (as described in <ref> [12] </ref>), by recovering lost messages only until the synchronization barrier message is delivered. 4 Advanced Group Membership Ser vices and Policies Caelum provides a hierarchical group membership service with support for group policies. These services are valuable building blocks for conferencing applications and interactive games. <p> Note that after the flush message, the application only stops sending messages for which virtually synchronous semantics must be enforced. The "bunches" concept of the MMTS <ref> [12] </ref>, allows the application to continue transmission of messages for which virtual synchrony is not required. An important innovation of Caelum is the support for hierarchical directory services. Caelum maintains a hierarchy of groups: a group may be a sub-group of a parent group.
Reference: [13] <author> F. Cristian and F. Schmuck. </author> <title> Agreeing on Process Group Membership in Asynchronous Distributed Systems. </title> <type> Technical Report CSE95-428, </type> <institution> Department of Conmputer Science and Engineering, University of California, </institution> <address> San Diego, </address> <year> 1995. </year>
Reference-contexts: This is done by using congress incremental updates in conjunction with a one round agreement protocol. Such order properties are provided by many group membership systems and algorithms (e.g., Cristian and Schmuck's one round membership protocol <ref> [13] </ref>). The agreement protocol is run only for groups that explicitly request this service. Group communication systems usually provide strong semantics of message ordering w.r.t. membership changes, e.g., virtual synchrony [10, 17, 27]. Virtual synchrony requires synchronization among the applications and the membership service.
Reference: [14] <author> D. Dolev and D. Malki. </author> <title> The Transis Approach to High Availability Cluster Communication. </title> <journal> Communications of the ACM, </journal> <volume> 39(4), </volume> <month> April </month> <year> 1996. </year>
Reference-contexts: The Caelum architecture consists of a toolkit front-end, a membership service module, an MMTS module, and a module providing session-level services. The architecture of Caelum is described in Figure 2. We are currently implementing Caelum using the Transis <ref> [14] </ref> and Ensemble [20] group communication systems, enhanced with QoS communication.
Reference: [15] <author> D. Dolev, I. Keidar, and E. Yeger Lotem. </author> <title> Dynamic Voting for Consistent Primary Components. </title> <type> TR 96-7, </type> <institution> Institute of Computer Science, The Hebrew University of Jerusalem, Jerusalem, Israel, </institution> <month> June </month> <year> 1996. </year>
Reference-contexts: Caelum provides several types of primary component services that notify processes when they are members of the current primary component, e.g., a service based on dynamic voting <ref> [15] </ref>. 5.3 Secure Group Communication Caelum supports the notion of a secure multicast group [19, 32]. The communication in a secure group is encrypted. Each member multicasts messages that are encrypted using a secret key known to all of the group members.
Reference: [16] <author> P. D. Ezhilchelvan, A. Macedo, and S. K. Shrivastava. Newtop: </author> <title> a Fault Tolerant Group Communication Protocol. </title> <booktitle> In The 15th International Conference on Distributed Computing Systems, </booktitle> <month> June </month> <year> 1995. </year>
Reference-contexts: This allows to handle a set of processes as a single logical connection. Furthermore, processes may dynamically join or leave these groups. Group communication systems (GCSs), (e.g., Tran-sis, Horus and Totem [1], Ensemble [20], ISIS [11], RMP [38], Phoenix [24] and Newtop <ref> [16] </ref>) provide group multicast and membership services. The membership service provides the group members with an indication of the current membership: the group of currently connected processes.
Reference: [17] <author> R. Friedman and R. V. Renesse. </author> <title> Strong and Weak Virtual Synchrony in Horus. </title> <type> TR 95-1537, </type> <institution> dept. of Computer Science, Cornell University, </institution> <month> August </month> <year> 1995. </year>
Reference-contexts: The agreement protocol is run only for groups that explicitly request this service. Group communication systems usually provide strong semantics of message ordering w.r.t. membership changes, e.g., virtual synchrony <ref> [10, 17, 27] </ref>. Virtual synchrony requires synchronization among the applications and the membership service. This service is costly: it incurs a delay period in which messages may not be transmitted [17]. <p> Group communication systems usually provide strong semantics of message ordering w.r.t. membership changes, e.g., virtual synchrony [10, 17, 27]. Virtual synchrony requires synchronization among the applications and the membership service. This service is costly: it incurs a delay period in which messages may not be transmitted <ref> [17] </ref>. This synchronization greatly facilitates the design of applications that require consistency (e.g., applications with shared data [10, 3, 23, 5]), but is too costly for applications that require real-time message delivery (e.g., video transmission). Caelum provides virtually synchronous communication for groups and message types that explicitly request this service.
Reference: [18] <author> D. Gang, G. Chockler, T. Anker, A. Kremer, and T. Winkler. </author> <title> Conducting Midi Sessions Over the Network Using the Transis Group Communication System. </title> <booktitle> In International Computer Music Conference (ICMC 97), </booktitle> <month> September </month> <year> 1997. </year> <note> To appear. </note>
Reference-contexts: The hierarchical groups of Caelum support concurrent sessions and allow each user to choose which session group to join (provided that the group policy permits it). 6.2 A Jam Session Over the Network In <ref> [18] </ref>, Transis is exploited to conduct distributed jam sessions over a network. The musical notes are encoded in the MIDI [26] format, and are reliably mul-ticast using Transis. Musicians that want to play together are organized in a Transis multicast group, and others may join as listeners.
Reference: [19] <author> M. Hayden and O. Rodeh. </author> <title> Security in TransisE. </title> <type> Techi-cal Report, </type> <institution> The Hebrew University of Jerusalem. </institution> <note> In preparation. </note>
Reference-contexts: Caelum provides several types of primary component services that notify processes when they are members of the current primary component, e.g., a service based on dynamic voting [15]. 5.3 Secure Group Communication Caelum supports the notion of a secure multicast group <ref> [19, 32] </ref>. The communication in a secure group is encrypted. Each member multicasts messages that are encrypted using a secret key known to all of the group members. The access to a secure group is regulated by an authentication server.
Reference: [20] <author> M. Hayden and R. van Renesse. </author> <title> Optimizing Layered Communication Protocols. </title> <type> Technical Report TR96-1613, </type> <institution> Dept. of Computer Science, Cornell University, </institution> <address> Ithaca, NY 14850, USA, </address> <month> November </month> <year> 1996. </year>
Reference-contexts: The Caelum architecture consists of a toolkit front-end, a membership service module, an MMTS module, and a module providing session-level services. The architecture of Caelum is described in Figure 2. We are currently implementing Caelum using the Transis [14] and Ensemble <ref> [20] </ref> group communication systems, enhanced with QoS communication. <p> This allows to handle a set of processes as a single logical connection. Furthermore, processes may dynamically join or leave these groups. Group communication systems (GCSs), (e.g., Tran-sis, Horus and Totem [1], Ensemble <ref> [20] </ref>, ISIS [11], RMP [38], Phoenix [24] and Newtop [16]) provide group multicast and membership services. The membership service provides the group members with an indication of the current membership: the group of currently connected processes. <p> Furthermore, it is desirable to make such systems fault tolerant. Recently, several emerging projects addressed the challenge of incorporating QoS communication into the framework of group communication. Maestro [9] extends the Ensemble <ref> [20] </ref> group communication system by coordinating several protocol stacks with different QoS guarantees. The Collaborative Computing Transport Layer (CCTL) [29] implements similar concepts, geared towards distributed collaborative multimedia applications. Both systems implement and elaborate the concept of MMTS. <p> Each message targeted to the group's logical name is guaranteed to be delivered to all the currently connected and operational group's members. The Maestro [9] system provides a common membership service for groups of processes running Ensemble <ref> [20] </ref> with different QoS options. The design of the membership service of Caelum was inspired by Maestro.
Reference: [21] <institution> ISO/IEC 13818 and ISO/IEC 11172. </institution> <note> The MPEG Spec--ification. http://www.mpeg2.de/. </note>
Reference-contexts: Implementations of database style reliability (i.e. message recovery and order constraints) may violate these assumptions, rendering the video decoding algorithm (e.g., MPEG <ref> [21, 31, 7] </ref>) incorrect. A desktop and multi-media conferencing tool [30], is a Computer Supported Cooperative Work (CSCW) application incorporating various activities such as video transmission and management of replicated work space. These activities obviously require different qualities of service, and yet are part of the same application.
Reference: [22] <author> I. Keidar and D. Dolev. </author> <title> Increasing the Resilience of Distributed and Replicated Database Systems. </title> <journal> The Journal of Computer and System Sciences (JCSS) special issue on PODS 1995. </journal> <note> To Appear. Previous version in the 1995 ACM-SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems (PODS), </note> <month> May </month> <year> 1995, </year> <pages> pages 245-254. </pages>
Reference-contexts: Among them are tools for coordination and floor control in conferencing systems, consistent object replication, atomic commitment <ref> [34, 22] </ref>, lock management, security etc. Let us consider some of these services in more detail. 5.1 Coordination and Floor Control Different groups may impose different run-time policies on the eligibility of members to provide input of various types (e.g., video, audio, text) in a group.
Reference: [23] <author> I. Keidar and D. Dolev. </author> <title> Efficient Message Ordering in Dynamic Networks. </title> <booktitle> In ACM Symp. on Prin. of Distributed Computing (PODC), </booktitle> <volume> number 15, </volume> <pages> pages 68-76, </pages> <month> May </month> <year> 1996. </year>
Reference-contexts: Virtual synchrony requires synchronization among the applications and the membership service. This service is costly: it incurs a delay period in which messages may not be transmitted [17]. This synchronization greatly facilitates the design of applications that require consistency (e.g., applications with shared data <ref> [10, 3, 23, 5] </ref>), but is too costly for applications that require real-time message delivery (e.g., video transmission). Caelum provides virtually synchronous communication for groups and message types that explicitly request this service. The implementation of Virtual Synchrony is based on synchronization messages, as depicted in Figure 3. <p> The long-term consistency service can be implemented using a variety of algorithms with different availability guarantees. Group communication is a powerful building block for such algorithms, e.g., <ref> [23, 2, 3] </ref> all provide long-term consistency services using group communication as a building block.
Reference: [24] <author> C. Malloth and A. Schiper. </author> <title> View Synchronous Communication in large scale networks. In Proceedings 2nd Open Workshop of the ESPRIT project BROADCAST (number 6360), </title> <note> July 1995 (also available as a Technical Report Nr. </note> <institution> 94/84 at Ecole Polytechnique Federale de Lausanne (Switzerland), </institution> <month> October </month> <year> 1994). </year>
Reference-contexts: This allows to handle a set of processes as a single logical connection. Furthermore, processes may dynamically join or leave these groups. Group communication systems (GCSs), (e.g., Tran-sis, Horus and Totem [1], Ensemble [20], ISIS [11], RMP [38], Phoenix <ref> [24] </ref> and Newtop [16]) provide group multicast and membership services. The membership service provides the group members with an indication of the current membership: the group of currently connected processes.
Reference: [25] <author> S. McCanne and V. Jacobson. </author> <title> Vic: A Flexible Framework for Packet Video. </title> <booktitle> In Proceedings of ACM Multimedia, </booktitle> <pages> pages 511-522, </pages> <month> November </month> <year> 1995. </year>
Reference-contexts: Maestro [9] extends the Ensemble [20] group communication system by coordinating several protocol stacks with different QoS guarantees. The Collaborative Computing Transport Layer (CCTL) [29] implements similar concepts, geared towards distributed collaborative multimedia applications. Both systems implement and elaborate the concept of MMTS. The vic <ref> [25] </ref> video conferencing tool over the MBone 2 is a flexible framework for packet video. This approach uses a conference bus for broadcasting the various media in a conference session (e.g., whiteboard media, audio, and video).
Reference: [26] <author> B. Michael. </author> <title> Music Through MIDI. </title> <address> Redmond: </address> <publisher> Mi-crosoft Press, </publisher> <year> 1987. </year>
Reference-contexts: The musical notes are encoded in the MIDI <ref> [26] </ref> format, and are reliably mul-ticast using Transis. Musicians that want to play together are organized in a Transis multicast group, and others may join as listeners.
Reference: [27] <author> L. E. Moser, Y. Amir, P. M. Melliar-Smith, and D. A. Agarwal. </author> <title> Extended Virtual Synchrony. </title> <booktitle> In International Conference on Distributed Computing Systems, number 14th, </booktitle> <month> June </month> <year> 1994. </year>
Reference-contexts: The agreement protocol is run only for groups that explicitly request this service. Group communication systems usually provide strong semantics of message ordering w.r.t. membership changes, e.g., virtual synchrony <ref> [10, 17, 27] </ref>. Virtual synchrony requires synchronization among the applications and the membership service. This service is costly: it incurs a delay period in which messages may not be transmitted [17].
Reference: [28] <author> M. Rautenberg and H. Rzehak. </author> <title> A Control System for an Interactive Video on Demand Server Handling Variable Data Rates. </title> <booktitle> In Interactive Distributed Multimedia Systems and Services (IDMS), </booktitle> <pages> pages 265-276, </pages> <month> March </month> <year> 1996. </year> <note> LNCS 1045. </note>
Reference-contexts: Nonetheless, such applications are concerned with more than just transmitting a stream of video: they need to exchange messages for connection establishment, dynamic group management, and negotiation and re-negotiation of Quality of Service (QoS) <ref> [28] </ref>. Furthermore, it is desirable to make such systems fault tolerant. Recently, several emerging projects addressed the challenge of incorporating QoS communication into the framework of group communication. Maestro [9] extends the Ensemble [20] group communication system by coordinating several protocol stacks with different QoS guarantees. <p> Video Conferencing requires high bandwidth low latency real-time message delivery, but also needs to exchange messages for connection establishment, flow control and negotiation and renegotiation of QoS (agreement on QoS parameters among the communicating parties) <ref> [28] </ref>. We constructed a video on demand service, [7], that exploits Transis to perform these tasks simply and efficiently. Shared Drawing on a White Board requires low bandwidth totally ordered multicast, and short term consistency. A shared white board [33] was implemented in Java, using Transis.
Reference: [29] <author> I. Rhee, S. Cheung, P. Hutto, and V. Sunderam. </author> <title> Group Communication Support for Distributed Multimedia and CSCW Systems. </title> <type> Technical report, </type> <institution> Dept. of Mathematics Computer Science, Emory University, </institution> <address> Atlanta, GA 30322, </address> <month> October </month> <year> 1996. </year> <note> To appear in ICDCS'97. </note>
Reference-contexts: Recently, several emerging projects addressed the challenge of incorporating QoS communication into the framework of group communication. Maestro [9] extends the Ensemble [20] group communication system by coordinating several protocol stacks with different QoS guarantees. The Collaborative Computing Transport Layer (CCTL) <ref> [29] </ref> implements similar concepts, geared towards distributed collaborative multimedia applications. Both systems implement and elaborate the concept of MMTS. The vic [25] video conferencing tool over the MBone 2 is a flexible framework for packet video.
Reference: [30] <author> T. Rodden. </author> <title> A survey of CSCW systems. </title> <journal> Interacting with Computers, </journal> <volume> 3(3) </volume> <pages> 319-353, </pages> <year> 1991. </year>
Reference-contexts: Implementations of database style reliability (i.e. message recovery and order constraints) may violate these assumptions, rendering the video decoding algorithm (e.g., MPEG [21, 31, 7]) incorrect. A desktop and multi-media conferencing tool <ref> [30] </ref>, is a Computer Supported Cooperative Work (CSCW) application incorporating various activities such as video transmission and management of replicated work space. These activities obviously require different qualities of service, and yet are part of the same application. <p> Similarly, Caelum may facilitate the development of distance learning applications, multi-party interactive games over the network, distributed simulations, and other collaborative computing applications. 6.1 On-line Conferencing Multi-media and desktop conferencing systems are described in the survey of CSCW systems <ref> [30] </ref>. Such a system integrates several conferees (users), that cooperatively use a variety of applications in a shared work space. The shared applications have different QoS re quirements: Multi-Party Text Chat is simple to implement using group communication systems. <p> The conference agent controls the communication among the conferees and the applications. The architecture of a multi-media and desktop conferencing system is depicted in Figure 4. The distributed agent can exploit Caelum to provide the services listed in <ref> [30] </ref>, e.g., floor control (i.e. input filtering), dynamic recon-figuration, consistent workspace replication and management, and logging the session.
Reference: [31] <author> L. A. Rowe, K. D. Patel, B. C. Smith, and K. Liu. </author> <title> MPEG Video in Software: Representation, Transmission, and Playback. In High Speed Networking and Multimedia Computing, </title> <booktitle> IS&T/SPIE Symp. </booktitle> <institution> on Elec. Imaging Sci. & Tech., </institution> <month> February </month> <year> 1994. </year>
Reference-contexts: Implementations of database style reliability (i.e. message recovery and order constraints) may violate these assumptions, rendering the video decoding algorithm (e.g., MPEG <ref> [21, 31, 7] </ref>) incorrect. A desktop and multi-media conferencing tool [30], is a Computer Supported Cooperative Work (CSCW) application incorporating various activities such as video transmission and management of replicated work space. These activities obviously require different qualities of service, and yet are part of the same application.
Reference: [32] <author> A. Rowley and J. Dollimore. </author> <title> Secure Group Communication for Groupware Applications. </title> <booktitle> In Proceedings of European Research Seminar in Advanced Distributed Systems (ERSADS'97), </booktitle> <pages> pages 222-227. </pages> <institution> Laboratoire de Systemes d'Exploitation Ecole Polytechnique Federale de Lausanne, </institution> <month> March </month> <year> 1997. </year>
Reference-contexts: Caelum provides several types of primary component services that notify processes when they are members of the current primary component, e.g., a service based on dynamic voting [15]. 5.3 Secure Group Communication Caelum supports the notion of a secure multicast group <ref> [19, 32] </ref>. The communication in a secure group is encrypted. Each member multicasts messages that are encrypted using a secret key known to all of the group members. The access to a secure group is regulated by an authentication server.
Reference: [33] <author> G. Shamir. </author> <title> Shared Whiteboard: A Java Application in the Transis Environment. </title> <institution> Lab project, High Availability lab, The Hebrew University of Jerusalem, Jerusalem, Israel, </institution> <month> October </month> <year> 1996. </year> <note> Available from: http://www.cs.huji.ac.il/labs/transis/. </note>
Reference-contexts: We constructed a video on demand service, [7], that exploits Transis to perform these tasks simply and efficiently. Shared Drawing on a White Board requires low bandwidth totally ordered multicast, and short term consistency. A shared white board <ref> [33] </ref> was implemented in Java, using Transis. Editing Shared Files also requires low bandwidth totally ordered multicast within a partition. However, in order to keep the replicated (or shared) files consistent, a long term consistency service is required. The conference agent controls the communication among the conferees and the applications.
Reference: [34] <author> D. Skeen. </author> <title> A Quorum-Based Commit Protocol. </title> <booktitle> In Berkeley Workshop on Distributed Data Management and Computer Networks, </booktitle> <volume> number 6, </volume> <pages> pages 69-80, </pages> <month> Feb. </month> <year> 1982. </year>
Reference-contexts: Among them are tools for coordination and floor control in conferencing systems, consistent object replication, atomic commitment <ref> [34, 22] </ref>, lock management, security etc. Let us consider some of these services in more detail. 5.1 Coordination and Floor Control Different groups may impose different run-time policies on the eligibility of members to provide input of various types (e.g., video, audio, text) in a group.
Reference: [35] <author> B. C. Smith. </author> <title> Implementation Techniques for Conti-nous Media Systems and Applications. </title> <type> PhD thesis, </type> <institution> University of California at Berkeley, </institution> <year> 1994. </year>
Reference-contexts: The MMTS concept is flexible, it can exploit various underlying communication protocols and technologies, e.g., RSVP [40], ST-II [36] and ATM QoS. Furthermore, it modularly supports integration of new QoS options, e.g., the cyclic UDP QoS <ref> [35] </ref> that was implemented as a protocol layer in the Horus system [37]. One of the important challenges that need to be addressed when using groupware toolkits for a multimedia application is how to combine services with strong semantics with the QoS required by the multimedia application. <p> This concept generalizes the -Causal communication mode [8, 39]. In this communication mode, messages may be lost. Each message has a lifetime, , after which its data is no longer meaningful, hence the message may be discarded. Another example of best-effort semantics is the cyclic UDP <ref> [35] </ref> prioritized best-effort message recovery mechanism. Cyclic UDP allows the user to specify priorities for messages. Messages with a higher priority are recovered before messages with a lower priority. Message recovery attempts are stopped after a certain timeout period.
Reference: [36] <author> C. Topolcic. </author> <title> Experimental Internet Stream Protocol: </title> <note> Version 2 (ST-II), </note> <month> October </month> <year> 1990. </year> <title> Internet RFC 1190. </title>
Reference-contexts: The MMTS can be viewed as integrating both the conference bus and the coordination tool. The MMTS concept is flexible, it can exploit various underlying communication protocols and technologies, e.g., RSVP [40], ST-II <ref> [36] </ref> and ATM QoS. Furthermore, it modularly supports integration of new QoS options, e.g., the cyclic UDP QoS [35] that was implemented as a protocol layer in the Horus system [37].
Reference: [37] <author> W. Vogels and R. van Renesse. </author> <title> Support for Complex Multi-Media Applications using the Horus system. </title> <address> Ithaca, NY 14850, USA, </address> <month> December </month> <year> 1994. </year> <note> On-line html document: http://www.cs.cornell.edu/ Info/People/rvr/papers/rt/novsdav.html. </note>
Reference-contexts: The MMTS concept is flexible, it can exploit various underlying communication protocols and technologies, e.g., RSVP [40], ST-II [36] and ATM QoS. Furthermore, it modularly supports integration of new QoS options, e.g., the cyclic UDP QoS [35] that was implemented as a protocol layer in the Horus system <ref> [37] </ref>. One of the important challenges that need to be addressed when using groupware toolkits for a multimedia application is how to combine services with strong semantics with the QoS required by the multimedia application.
Reference: [38] <author> B. Whetten, T. Montgomery, and S. Kaplan. </author> <title> A high perfomance totally ordered multicast protocol. </title> <editor> In K. P. Birman, F. Mattern, and A. Schipper, editors, </editor> <booktitle> Theory and Practice in Distributed Systems: International Workshop, </booktitle> <pages> pages 33-57. </pages> <publisher> Springer, </publisher> <year> 1995. </year> <note> Lecture Notes in Computer Science 938. </note>
Reference-contexts: This allows to handle a set of processes as a single logical connection. Furthermore, processes may dynamically join or leave these groups. Group communication systems (GCSs), (e.g., Tran-sis, Horus and Totem [1], Ensemble [20], ISIS [11], RMP <ref> [38] </ref>, Phoenix [24] and Newtop [16]) provide group multicast and membership services. The membership service provides the group members with an indication of the current membership: the group of currently connected processes.
Reference: [39] <author> R. Yavatkar. MCP: </author> <title> a Protocol for Coordination and Temporal Synchronization in Multimedia Collaborative Applications. </title> <booktitle> In Proceedings of the 12'th ICDCS, </booktitle> <pages> pages 606-613, </pages> <address> 1992. </address> <publisher> IEEE press. </publisher>
Reference-contexts: After this timeout, the message may be either discarded or delivered in spite of the lack of synchronization, according to the application's specification. This concept generalizes the -Causal communication mode <ref> [8, 39] </ref>. In this communication mode, messages may be lost. Each message has a lifetime, , after which its data is no longer meaningful, hence the message may be discarded. Another example of best-effort semantics is the cyclic UDP [35] prioritized best-effort message recovery mechanism.
Reference: [40] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, and D. Zappala. RSVP: </author> <title> A New Resource ReSerVation Protocol. </title> <booktitle> In IEEE Network, Septem-ber 1993. </booktitle> <institution> The RSVP Project home page: </institution> <note> http://www.isi.edu/div7/rsvp/rsvp.html. </note>
Reference-contexts: The MMTS can be viewed as integrating both the conference bus and the coordination tool. The MMTS concept is flexible, it can exploit various underlying communication protocols and technologies, e.g., RSVP <ref> [40] </ref>, ST-II [36] and ATM QoS. Furthermore, it modularly supports integration of new QoS options, e.g., the cyclic UDP QoS [35] that was implemented as a protocol layer in the Horus system [37].
References-found: 40

