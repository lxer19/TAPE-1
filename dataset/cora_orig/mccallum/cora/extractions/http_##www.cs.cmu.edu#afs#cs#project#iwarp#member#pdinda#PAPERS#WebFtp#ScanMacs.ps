URL: http://www.cs.cmu.edu/afs/cs/project/iwarp/member/pdinda/PAPERS/WebFtp/ScanMacs.ps
Refering-URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/usr/pdinda/html/papers.html
Root-URL: 
Title: SCANMACS Scan Macros for Regularly Distributed Arrays  
Author: Peter A. Dinda 
Keyword: HPF standard library  
Note: is described, including modifications to the compiler.  
Date: May 4, 1995  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Blelloch, G. </author> <title> Scans and Other Primitives for Parallel Computing. </title> <type> PhD thesis, </type> <institution> MIT, </institution> <year> 1988. </year>
Reference-contexts: 1 Introduction This paper describes SCANMACS, a portable set of C macros for instantiating families of high performance scan (parallel prefix <ref> [1] </ref>) functions for parallel computers. These functions can perform segmented and masked scans along any dimension of regularly distributed arrays. SCANMACS was used to build an HPF [3] scan intrinsics library for the Fx [2] compiler.
Reference: [2] <author> Gross, T., O'Hallaron, D., and Subholk, J. </author> <title> Task parallelism in a high-performance fortran framework. </title> <booktitle> IEEE Parallel and Distributed Technologies (1994), </booktitle> <pages> (accepted). </pages>
Reference-contexts: These functions can perform segmented and masked scans along any dimension of regularly distributed arrays. SCANMACS was used to build an HPF [3] scan intrinsics library for the Fx <ref> [2] </ref> compiler. Because of SCANMACS relation to HPF, we first describe HPF regular distributions and scan intrinsics. Next, the operation of SCANMACS generated scan functions, the implementation of SCANMACS, and its limitations are discussed.
Reference: [3] <author> High Performance Fortran Forum. </author> <title> High Performance Fortran Language Specification, </title> <note> Version 1.0, </note> <month> May </month> <year> 1993. </year>
Reference-contexts: 1 Introduction This paper describes SCANMACS, a portable set of C macros for instantiating families of high performance scan (parallel prefix [1]) functions for parallel computers. These functions can perform segmented and masked scans along any dimension of regularly distributed arrays. SCANMACS was used to build an HPF <ref> [3] </ref> scan intrinsics library for the Fx [2] compiler. Because of SCANMACS relation to HPF, we first describe HPF regular distributions and scan intrinsics. Next, the operation of SCANMACS generated scan functions, the implementation of SCANMACS, and its limitations are discussed. <p> Next, the operation of SCANMACS generated scan functions, the implementation of SCANMACS, and its limitations are discussed. Finally, we comment on testing procedures and the performance of a stereo vision step coded with scans. 2 HPF The High Performance Fortran specification <ref> [3] </ref> defines a set of parallel prefix and suffix intrinsic functions as part of the HPF standard library.
Reference: [4] <author> Little, J. J., Blelloch, G. E., and Cass, T. A. </author> <title> Algorithmic techniques for computer vision on a fine-grained parallel machine. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence 11, </journal> <month> 3 (March </month> <year> 1989), </year> <pages> 244-257. </pages>
Reference-contexts: I compared it with a naive parallel loop implementation with the following results: Images/iteration Naive PDO Scan 1 4.7 images/sec 40.4 images/sec 16 4.3 images/sec 73.6 images/sec The first column indicates the number of images processed simultaneously. For each image, the scan versions performs the following steps, inspired by <ref> [4] </ref>: 1. plus-prescan along each row 2. shift the rows right by the window's horizontal size 3. compute the point-wise difference between the shifted row and the unshifted row 4. plus-scan along each column of the result 5. shift the columns up by the window's vertical size 6. compute the point-wise
Reference: [5] <author> Okutomi, M., and Kanade, T. </author> <title> A multiple-baseline stereo. </title> <type> Tech. Rep. </type> <institution> CMU-CS-90-189, Carnegie Mellon University, </institution> <month> November </month> <year> 1990. </year> <month> 5 </month>
Reference-contexts: All combination of segments and masks were tested and found to operate well. 6 A simple application As promised in my proposal, I implemented the windowed error sum calculation step of Okutomi-Kanade stereo vision <ref> [5] </ref> using scans and tested it on 64 processors of the Paragon. I compared it with a naive parallel loop implementation with the following results: Images/iteration Naive PDO Scan 1 4.7 images/sec 40.4 images/sec 16 4.3 images/sec 73.6 images/sec The first column indicates the number of images processed simultaneously.
References-found: 5

