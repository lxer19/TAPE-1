URL: http://www.cs.unc.edu/~dm/UNC/PHYSICS/Papers/thesis.ps.gz
Refering-URL: http://www.cs.unc.edu/~hirota/290/papers.html
Root-URL: http://www.cs.unc.edu
Title: 1 An Incremental Distance Computation Al-  
Author: gorithm 
Abstract: In this chapter we present a simple and efficient method to compute the distance between two convex polyhedra by finding and tracking the closest points. The method is generally applicable, but is especially well suited to repetitive distance calculation as the objects move in a sequence of small, discrete steps due to its incremental nature. The method works by finding and maintaining a pair of closest features (vertex, edge, or face) on the two polyhedra as the they move. We take advantage of the fact that the closest features change only infrequently as the objects move along finely discretized paths. By preprocessing the polyhedra, we can verify that the closest features have not changed or performed an update to a neighboring feature in expected constant time. Our experiments show that, once initialized, the expected running time of our incremental algorithm is constant independent of the complexity of the polyhedra, provided the motion is not abruptly large. Our method is very straightforward in its conception. We start with a candidate pair of features, one from each polyhedron, and check whether the closest points lie on these features. Since the objects are convex, this is a local test involving only the neighboring features (boundary and coboundary as defined in Sec. ??) of the candidate features. If the features fail the test, we step to a neighboring feature of one or both candidates, and try again. With some simple preprocessing, we can guarantee that every feature has a constant number of neighboring features. This is how we can verify a closest feature pair in expected constant time. When a pair of features fails the test, the new pair we choose is guaranteed to be closer than the old one. Usually when the objects move and one of the closest features changes, we can find it after a single iteration. Even if the closest features are changing rapidly, say once per step along the path, our algorithm will take only slightly longer. It is also clear that in any situation the algorithm must terminate in a number of steps at most equal to the number of feature pairs. This algorithm is a key part of our general planning algorithm, described in Chap.?? That algorithm creates a one-dimensional roadmap of the free space of a robot by tracing out curves of maximal clearance from obstacles. We use the algorithm in this chapter to compute distances and closest points. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. E. Andersson and N. F. Steward. </author> <title> Maximal distance for robotic simulation: the convex case. </title> <journal> Journal of Optimization Theory and Applications, 57(No. </journal> 2):215-222, 1988. 
Reference: [2] <author> C. Bajaj and T. Dey. </author> <title> Convex decomposition of polyhedra and robustness. </title> <journal> SIAM J. of Comput., </journal> <volume> (No. </volume> 2):339-364, 1992. 
Reference-contexts: For nonconvex objects, we rely on subdivision into convex pieces, which unfortunately, may take O ((n + r 2 )logr) time to partition a nondegenerate simple polytope of genus 0, where n is the number of vertices and r is the number of reflex edges of the original nonconvex object <ref> [23, 2] </ref>. In general, a polytope of n vertices can always be partitioned into O (n 2 ) convex pieces [22].
Reference: [3] <author> D. Baraff. </author> <title> Curved surfaces and coherence for non-penetrating rigid body simulation. </title> <journal> ACM Computer Graphics, </journal> <volume> 24(4) </volume> <pages> 19-28, </pages> <year> 1990. </year>
Reference: [4] <author> D. Baraff. </author> <title> Issues on computing contact forces for non-penetrating rigid bodies. </title> <journal> Algorithmica, </journal> <volume> Vol. 10(2-4):292-352, </volume> <month> Aug/Sept/Oct </month> <year> 1993. </year>
Reference: [5] <author> David Baraff and Andrew Witkin. </author> <title> Dynamic simulation of non-penetrating flexible bodies. </title> <journal> Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 303-308, </pages> <month> July </month> <year> 1992. </year>
Reference: [6] <author> J. Barraquand, B. Langlois, and J-C. Latombe. </author> <title> Robot motion planning with many degrees of freedom and dynamic constraints. </title> <booktitle> In Proceedings 5th Int. Symp Robotics Research, </booktitle> <address> Tokyo, Japan, </address> <year> 1989. </year>
Reference: [7] <author> R. Barzel and A. Barr. </author> <title> A modeling system based on dynamic constraints. </title> <journal> ACM Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 31-39, </pages> <year> 1988. </year>
Reference: [8] <author> D. N. Bernstein. </author> <title> The number of roots of a system of equations. </title> <journal> Funkt-sional'nyi Analiz i Ego Prilozheniya, </journal> <volume> 9(3) </volume> <pages> 1-4, </pages> <month> Jul-Sep </month> <year> 1975. </year>
Reference: [9] <author> J. E. Bobrow. </author> <title> A direct minimization approach for obtaining distance between convex polyhedra. </title> <journal> International Journal of Robotics Research, 8(No. </journal> 3):65-67, 1989. 
Reference: [10] <author> W. Bouma and Jr. G. Vanecek. </author> <title> Collision detection and analysis in a physically based simulation. </title> <booktitle> In Proceeding of the Seconde Eurographics Workshop on Animation and Simulation, 1992. </booktitle> <address> Vienna Austria. </address>
Reference: [11] <author> J. W. Boyse. </author> <title> Interference detection among solids and surfaces. </title> <journal> Comm. ACM, </journal> <volume> 22(1) </volume> <pages> 3-9, </pages> <year> 1979. </year> <month> 38 </month>
Reference: [12] <author> S. A. Cameron. </author> <title> A study of the clash detection problem in robotics. </title> <booktitle> Proc. IEEE ICRA, </booktitle> <pages> pages pp. 488-493, </pages> <year> 1985. </year>
Reference: [13] <author> S. A. Cameron and R. K. Culley. </author> <title> Determining the minimum translational distance between two convex polyhedra. </title> <booktitle> Proc. IEEE ICRA, </booktitle> <pages> pages pp. 591-596, </pages> <year> 1986. </year>
Reference-contexts: By comparing the number of arithmetic operations in the previous implemented algorithms, we believe that our implementation gives better performance and probably is the fastest implemented collision detection algorithm. (Please see [65], <ref> [13] </ref>, [17], [40], [39], [38], [72], and [90].) This is especially true in a dynamic environment where the trajectories are not known (nor are they in closed form even between impacts, but are given by elliptic integrals).
Reference: [14] <author> J. Canny. </author> <title> Computing roadmaps of general semi-algebraic sets. </title> <booktitle> In AAECC-91, </booktitle> <pages> pages 94-107, </pages> <year> 1991. </year>
Reference: [15] <author> J. Canny and B. Donald. </author> <title> Simplified voronoi diagrams. </title> <journal> Discret Comput. Geometry, </journal> <pages> pages 219-236, </pages> <year> 1988. </year>
Reference: [16] <author> J. Canny and I. Emiris. </author> <title> An efficient algorithm for the sparse mixed resultant. </title> <editor> In G. Cohen, T. Mora, and O. Moreno, editors, </editor> <booktitle> Proc. 10th Intern. Symp. on Applied Algebra, Algebraic Algorithms and Error-Correcting Codes, </booktitle> <pages> pages 89-104. </pages> <publisher> Springer Verlag, </publisher> <month> May </month> <year> 1993. </year> <note> Lect. Notes in Comp. Science 263. </note>
Reference: [17] <author> J. F. Canny. </author> <title> Collision detection for moving polyhedra. </title> <journal> IEEE Trans. PAMI, </journal> <volume> 8:pp. </volume> <pages> 200-209, </pages> <year> 1986. </year>
Reference-contexts: By comparing the number of arithmetic operations in the previous implemented algorithms, we believe that our implementation gives better performance and probably is the fastest implemented collision detection algorithm. (Please see [65], [13], <ref> [17] </ref>, [40], [39], [38], [72], and [90].) This is especially true in a dynamic environment where the trajectories are not known (nor are they in closed form even between impacts, but are given by elliptic integrals).
Reference: [18] <author> J. F. Canny. </author> <title> The Complexity of Robot Motion Planning. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1988. </year>
Reference: [19] <author> J. F. Canny. </author> <title> Constructing roadmaps of semi-algebraic sets I: Completeness. </title> <journal> Artificial Intelligence, </journal> <volume> 37 </volume> <pages> 203-222, </pages> <year> 1988. </year>
Reference: [20] <author> J. F. Canny and M. C. Lin. </author> <title> An opportunistic global path planner. </title> <journal> Algo-rithmica, Special Issue on Computational Robotics, </journal> <volume> Vol. 10(2-4):102-120, </volume> <month> Aug/Sept/Oct </month> <year> 1993. </year>
Reference: [21] <author> J.F. Canny. </author> <title> Generalized characteristic polynomials. </title> <journal> Journal of Symbolic Computation, </journal> <volume> 9(3) </volume> <pages> 241-250, </pages> <year> 1990. </year>
Reference: [22] <author> B. Chazelle. </author> <title> Convex partitions of polyhedra: A lower bound and worst-case optimal algorithm. </title> <journal> SIAM J. Comput., </journal> <volume> 13 </volume> <pages> 488-507, </pages> <year> 1984. </year>
Reference-contexts: In general, a polytope of n vertices can always be partitioned into O (n 2 ) convex pieces <ref> [22] </ref>. Given the object representation and data structure for convex polyhedra described in Chapter ??, here we will define the term closest feature pair which we quote frequently in our description of the distance computation algorithm for convex polyhedra.
Reference: [23] <author> B. Chazelle and L. Palios. </author> <title> Triangulating a non-convex polytope. </title> <journal> Discrete & Comput. Geom., </journal> (5):505-526, 1990. <volume> 39 </volume>
Reference-contexts: For nonconvex objects, we rely on subdivision into convex pieces, which unfortunately, may take O ((n + r 2 )logr) time to partition a nondegenerate simple polytope of genus 0, where n is the number of vertices and r is the number of reflex edges of the original nonconvex object <ref> [23, 2] </ref>. In general, a polytope of n vertices can always be partitioned into O (n 2 ) convex pieces [22].
Reference: [24] <author> J. Cohen, M. Lin, D. Manocha, and M. Ponamgi. </author> <title> Exact collision detec-tion for interactive, large-scaled environments. </title> <type> Tech Report #TR94-005, </type> <institution> 1994. University of North Carolina, Chapel Hill. </institution>
Reference: [25] <author> James F. Cremer and A. James Stewart. </author> <title> The architecture of newton, a general-purpose dynamics simulator. </title> <booktitle> In IEEE Int. Conf. on Robotics and Automation, </booktitle> <pages> pages 1806-1811, </pages> <month> May </month> <year> 1989. </year>
Reference: [26] <author> D. P. Dobkin and D. G. Kirkpatrick. </author> <title> A linear algorithm for determining the separation of convex polyhedra. </title> <journal> J. Algorithms, </journal> <volume> 6(3):pp. </volume> <pages> 381-392, </pages> <year> 1985. </year>
Reference: [27] <author> D. P. Dobkin and D. G. Kirkpatrick. </author> <title> Determining the separation of preprocessed polyhedra a unified approach. </title> <booktitle> In Proc. 17th Internat. Colloq. Automata Lang. Program, Lecture Notes in Computer Science 443, </booktitle> <pages> pages 400-413. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference: [28] <author> B. R. Donald. </author> <title> Motion planning with six degrees of freedom. </title> <type> Master's thesis, </type> <institution> MIT Artificial Intelligence Lab., </institution> <year> 1984. </year> <month> AI-TR-791. </month>
Reference: [29] <author> Tom Duff. </author> <title> Interval arithmetic and recursive subdivision for implicit functions and constructive solid geometry. </title> <journal> ACM Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 131-139, </pages> <year> 1992. </year>
Reference: [30] <author> M. E. Dyer. </author> <title> Linear algorithms for two and three-variable linear programs. </title> <journal> SIAM J. on Computing, </journal> <volume> 13:pp. </volume> <pages> 31-45, </pages> <year> 1984. </year>
Reference: [31] <author> H. Edelsbrunner. </author> <title> A new approach to rectangle intersections, part i&ii. </title> <journal> Intern. J. Computer Math., </journal> <volume> 13:pp. </volume> <pages> 209-229, </pages> <year> 1983. </year>
Reference: [32] <author> H. Edelsbrunner. </author> <title> Algorithms in Combinatorial Geometry. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, Heidelberg, New York, London, Paris, Tokyo, </address> <year> 1988. </year>
Reference: [33] <author> I. Emiris and J. Canny. </author> <title> A general approach to removing degeneracies. </title> <booktitle> In IEEE FOCS, </booktitle> <pages> pages 405-413, </pages> <year> 1991. </year>
Reference: [34] <author> S. F. Fahlman. </author> <title> A planning system for robot construction tasks. </title> <booktitle> Artifical Intellignece, 5:pp. </booktitle> <pages> 1-49, </pages> <year> 1974. </year>
Reference: [35] <author> G. Farin. </author> <title> Curves and Surfaces for Computer Aided Geometric Design: </title>
References-found: 35

