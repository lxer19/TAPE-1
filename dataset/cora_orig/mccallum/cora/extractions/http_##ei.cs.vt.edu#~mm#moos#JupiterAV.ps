URL: http://ei.cs.vt.edu/~mm/moos/JupiterAV.ps
Refering-URL: http://ei.cs.vt.edu/~mm/s96/moos.html
Root-URL: http://www.cs.vt.edu
Title: The Jupiter Audio/Video Architecture: Secure Multimedia in Network Places  
Author: Pavel Curtis, Michael Dixon, Ron Frederick, and David A. Nichols 
Keyword: Network places, collaboration, audio, video, multicast, security, encryption.  
Address: 3333 Coyote Hill Road Palo Alto, CA 94304 USA  
Affiliation: Xerox Palo Alto Research Center  
Note: Proceedings of ACM Multiedia 95 1/12  
Email: -pavel,mdixon,frederick,nichols-@parc.xerox.com  
Phone: +1 415 812 4000  
Abstract: Jupiter is a multiuser, multimedia virtual world intended to support remote collaboration, including support for shared documents, shared tools, and audio/video communication. In addition, it provides a rich set of end-user customization and programming facilities, designed to support a community of developers with a wide range both of skills and of trust in each other. This combination of features leads to an interesting tension in the systems design, between exibility and privacy: how can we make it easy for power users to build applications that control the distribution and recording of the real-time audio and video streams in new and useful ways, while simultaneously assuring all users that they understand and control where their own A/V streams are going at any moment? In this paper we describe our solution to this dilemma; it combines the automatic use of encryption, a f lexible model for dynamically interconnecting media sources and sinks, and user-interface widgets that can be relied upon to accurately represent and control the workstations audio/video capabilities. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Adler, Annette, and Austin Henderson, </author> <title> A Room of Our O wn: Experie nces f rom a Dire ct Of fice Share, </title> <booktitle> Proceedings of the 1994 ACM Confer ence on Human Factors in Computing Systems, </booktitle> <month> May, </month> <year> 1994. </year>
Reference-contexts: Such pairs should be able to easily set up an A/V tunnel between them, allowing them to stay in communication even as they each move about in the virtual space <ref> [1] </ref>. Workgroup media spaces The same basic concept scales up to larger groups as well. For example, the hardware group in PARCs computer science lab comprises about ten people usually working on several distinct projects at any given time.
Reference: 2. <author> Berners-Lee, T., L. Masinter , and M. Mc Cahill, </author> <title> Uniform Resource Locators (URL), IETF Request for Comments RFC 1738, </title> <note> available from ftp://ftp.internic.net/rfc/rfc1738.txt. </note>
Reference-contexts: In addition to assigning addresses and keys for sending out-of-band data, the key manager provides a mechanism for sending small amounts of in-band data. This is currently intended primarily as a means for sources to send a URL <ref> [2] </ref> for some sound, image or video sequence that they wish recipients to retrieve and display. Values can be sent to a devices broadcast set using the broadcast_value () method, or to a specific channel using transmit_value ().
Reference: 3. <author> Bly, Sara, Steve Harrison, and Susan Irwin, </author> <title> Media Spaces: Bringing People Together in a Video, Audio, and Computing Environment, </title> <journal> Communications of the ACM, </journal> <volume> 36(1), </volume> <month> January </month> <year> 1993. </year>
Reference-contexts: While their individual work keeps the group members spread apart in both physical and virtual space, they would like to be able to stay casually in touch with each other as a group; they, too, should be able to easily set up a group A/V space to meet this need <ref> [3] </ref>. Public address system At the limit of this notion, some communities might wish to allow certain distinguished users to make announce ments that are seen and heard by everyone. Virtual video telephones The two-person A/V tunnel concept is similar to a video telephone call that is never disconnected.
Reference: 4. <author> Curtis, Pavel, </author> <title> LambdaMOO Programmers Manual, a v a i l a b l e a s f t p : / / f t p . p a r c . x e r o x . c o m / p u b / M O O / ProgrammersManual.ps. </title>
Reference-contexts: The Jupiter Server The main server is substantially more complex and general than the client. An instance of the LambdaMOO server software used in a number of MUDs (multi-user dungeons) on the Internet <ref> [4] </ref>, it accepts and manages network connections, maintains an objectoriented database, and, often in response to user commands and client protocol messages, executes code stored in the database. The database contains a variety of objects, including their methods and instance variables.
Reference: 5. <author> Curtis, Pavel and David A. Nichols, </author> <title> MUDs Grow Up: Social Virtual Reality in the Real W orld, </title> <booktitle> in the Proceedings of the 1994 IEEE Computer Conference, </booktitle> <pages> pp. 193-200, </pages> <month> January </month> <year> 1994. </year> <note> Also available as ftp:// ftp.parc.xerox.com/pub/MOO/papers/MUDsGrowUp.ps. </note>
Reference-contexts: INTRODUCTION Jupiter is a system supporting long-term collaboration through the use of network places <ref> [5] </ref>. Each Jupiter user runs a client program on a workstation, preferably equipped with video camera and microphone, and connects to a Jupiter server that maintains a persistent virtual world of network places.
Reference: 6. <author> Deering, S. and D. Cheriton, </author> <title> Multicast routing in d a t a g r a m n e t w o r k s a n d e x t e n d e d L A N s , A C M Transactions on Computer Systems, </title> <month> May </month> <year> 1990. </year>
Reference-contexts: All communication on these TCP connections will soon be encrypted for privacy, using the proposed standard Secure Sockets Layer protocol, SSL [7]. The clients transmit and receive audio and video data using IP multicast <ref> [6] </ref> and the proposed standard Real-time Transport Protocol (RTP) [10]. All Jupiter audio and video traf fic is encrypted for privacy.
Reference: 7. <author> Hickman, Kipp E. B., </author> <title> The SSL Protocol, </title> <note> available from http://home.mcom.com/newsref/std/SSL.html. </note>
Reference-contexts: The TCP connection is essentially the only means of communication between any client and the server. All communication on these TCP connections will soon be encrypted for privacy, using the proposed standard Secure Sockets Layer protocol, SSL <ref> [7] </ref>. The clients transmit and receive audio and video data using IP multicast [6] and the proposed standard Real-time Transport Protocol (RTP) [10]. All Jupiter audio and video traf fic is encrypted for privacy.
Reference: 8. <author> Minneman, Scott L., and Steve R. Harrison, </author> <title> Where Were We: making and using near synchronous, </title> <editor> pre-na rrative vide o, </editor> <booktitle> Proce edings of the 1993 ACM International Conference on Multimedia, </booktitle> <pages> pp. 207-214, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Once such a recording has been made, of course, it should again be straightforward to play it back later to any authorized listeners. Extra facilities might usefully allow users to insert notes and other markings tied to specific locations in the recording, to aid in later indexing or review <ref> [8] </ref>. External audio/video sources Virtual analogs of physical places is just one example of making an external audio/video source available to Jupi-ter users. Others might include broadcast radio and televi sion signals or physical security cameras.
Reference: 9. <author> Nichols, David A., Pavel Curtis, Michael Dixon, and John Lamping, </author> <title> A Low-Bandwidth Window Toolkit, </title> <note> in preparation. </note>
Reference-contexts: All of the semantics of the various actions it performs is carried in the servers code and the users mind. The server/client windowing protocol is relatively high-level and low-bandwidth, especially in comparison to X windows and similar systems <ref> [9] </ref>. Windows are described to the client as a tree of high-level widgets, drawn from a fixed set of about 20 defined in the protocol.
Reference: 10. <author> Schulzrinne, H., S. Casner , R. Frederick, and V. Jacobson, RTP: </author> <title> A Transport Protocol for Real-Time Applications, IETF Internet Draft, </title> <note> available from ftp://ftp.internic.net/internet-drafts/draft-ietf-avt-rtp-07.txt. </note>
Reference-contexts: All communication on these TCP connections will soon be encrypted for privacy, using the proposed standard Secure Sockets Layer protocol, SSL [7]. The clients transmit and receive audio and video data using IP multicast [6] and the proposed standard Real-time Transport Protocol (RTP) <ref> [10] </ref>. All Jupiter audio and video traf fic is encrypted for privacy.
Reference: 11. <author> Zellweger, Polle T., Douglas B. Terry, and Daniel C. Swinehart, </author> <title> An Overview of the Etherphone System and its A pplica tio ns, </title> <booktitle> Proc ee dings of the 2n d IEE E Conference on Computer Workstations, </booktitle> <address> March1988. </address>
Reference-contexts: Proceedings of ACM Multiedia 95 3/12 Connecting to the real world phone system Given appropriate hardware, it should be straightforward to hook up any virtual telephone system to the one in the real world <ref> [11] </ref>. Audio/video recording and playback As is suggested by the answering machine example, not all participants in audio/video communications are human users. One obvious non-user application is a tape recorder.
References-found: 11

