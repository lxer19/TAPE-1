URL: http://st-www.cs.uiuc.edu/~hanmer/PLoP-97/Proceedings.ps/appleton.ps
Refering-URL: http://st-www.cs.uiuc.edu/~hanmer/PLoP-97/Workshops.html
Root-URL: http://www.cs.uiuc.edu
Email: &lt;bradapp@enteract.com&gt;  
Title: Patterns for Conducting Process Improvement  
Author: by Brad Appleton 
Keyword: Patterns, Process Improvement, Software Process  
Note: Copyright 1997 by Brad Appleton. Permission is granted to copy for the PLoP '97 conference.  
Web: http://www.enteract.com/~bradapp/  
Abstract: Process improvement shares many common characteristics with product development. Recognizing these similarities is important, but so is recognizing some of the crucial differences. It is vital to the success of improvement efforts to realize that process change entails cultural change. Numerous social and technical barriers must be overcome to effect lasting improvement. Ten patterns of software process improvement are described which illustrate some important similarities and differences between process improvement and product development. 
Abstract-found: 1
Intro-found: 1
Reference: [Conner] <author> Daryl Conner, </author> <title> Managing at the Speed of Change, </title> <publisher> Villard Books, </publisher> <year> 1993 </year>
Reference-contexts: Some of the forces that make such improvement efforts difficult are: Resistance to change (often due to a perceived threat of losing power, control, familiarity, or social status) The speed at which groups and individuals are capable of assimilating change without suffering from dysfunction (see <ref> [Conner] </ref>) The existing tolerance and readiness for change present within the current organizational climate Process change imposes a learning curve which typically makes things appear to get worse before they get better. Improvement efforts consume time and resources which many would prefer to spend on their particular development projects.
Reference: [PLoPD1] <author> James O. Coplien, Douglas C. Schmidt (Ed.), </author> <title> Pattern Languages of Program Design, </title> <publisher> Addison-Wesley, </publisher> <year> 1995, </year> <pages> pp. 178-237 </pages>
Reference-contexts: Thus, an infrastructure similar to that used by software projects is in order. Related Patterns By equating the contexts of process and product development, it becomes valid to consider numerous project management patterns in the context of conducting process improvement. Patterns from sources such as <ref> [PLoPD1] </ref> and [PLoPD2], may now be applicable. Other process improvement patterns which follow from this one: A Virtual Forum may be created during the course of setting up the process development repository and other improvement project resources. Local Heroes will help you staff the PIT appropriately.
Reference: [PLoPD2] <author> John M. Vlissides, James O. Coplien, Norman L. Kerth (Ed.), </author> <title> Pattern Languages of Program Design 2, </title> <publisher> Addison-Wesley, </publisher> <year> 1996, </year> <pages> pp. 345-352 </pages>
Reference-contexts: Thus, an infrastructure similar to that used by software projects is in order. Related Patterns By equating the contexts of process and product development, it becomes valid to consider numerous project management patterns in the context of conducting process improvement. Patterns from sources such as [PLoPD1] and <ref> [PLoPD2] </ref>, may now be applicable. Other process improvement patterns which follow from this one: A Virtual Forum may be created during the course of setting up the process development repository and other improvement project resources. Local Heroes will help you staff the PIT appropriately.
Reference: [Osterweil1] <author> Leon J. Osterweil, </author> <title> "Software Processes are Software Too", </title> <booktitle> Proceedings of the 9th International Conference on Software Engineering, </booktitle> <publisher> ACM Press, </publisher> <month> March </month> <year> 1987, </year> <pages> pp. 2-13 </pages>
Reference-contexts: Local Heroes will help you staff the PIT appropriately. Process follows Practice recommends the initial set of activities the PIT should undertake. Improvement follows Process and Improvement follows Spiral discuss the process of conducting process improvement efforts. Known Uses <ref> [Osterweil1] </ref> and [Osterweil2] describe how "Software Processes are Software Too." [Wiegers] remarks that treating SPI efforts like a project with mini-projects for each SPI increment was key to the success of Kodak's SPI efforts. [Grady] expresses the same sentiment of SPI efforts at Hewlett-Packard. [Austin,Paulish] and [Curtis] point to multiple SPI
Reference: [Osterweil2] <author> Leon J. Osterweil, </author> <title> "Software Processes are Software Too, Revisited", </title> <booktitle> Proceedings of the 19th International Conference on Software Engineering, </booktitle> <publisher> ACM Press, </publisher> <month> May </month> <year> 1997, </year> <pages> pp. 540-548 </pages>
Reference-contexts: Local Heroes will help you staff the PIT appropriately. Process follows Practice recommends the initial set of activities the PIT should undertake. Improvement follows Process and Improvement follows Spiral discuss the process of conducting process improvement efforts. Known Uses [Osterweil1] and <ref> [Osterweil2] </ref> describe how "Software Processes are Software Too." [Wiegers] remarks that treating SPI efforts like a project with mini-projects for each SPI increment was key to the success of Kodak's SPI efforts. [Grady] expresses the same sentiment of SPI efforts at Hewlett-Packard. [Austin,Paulish] and [Curtis] point to multiple SPI case studies
Reference: [Wiegers] <author> Karl E. Wiegers, </author> <title> Creating a Software Engineering Culture, </title> <publisher> Dorset House, </publisher> <year> 1996 </year>
Reference-contexts: Local Heroes will help you staff the PIT appropriately. Process follows Practice recommends the initial set of activities the PIT should undertake. Improvement follows Process and Improvement follows Spiral discuss the process of conducting process improvement efforts. Known Uses [Osterweil1] and [Osterweil2] describe how "Software Processes are Software Too." <ref> [Wiegers] </ref> remarks that treating SPI efforts like a project with mini-projects for each SPI increment was key to the success of Kodak's SPI efforts. [Grady] expresses the same sentiment of SPI efforts at Hewlett-Packard. [Austin,Paulish] and [Curtis] point to multiple SPI case studies which reached the same conclusions. [Wakulczyk] explains how <p> In these cases, a compromise is required. There is nothing wrong with taking "baby steps" if that is all you presently afford (in fact, <ref> [Wiegers] </ref> recommends it). Improvements may take longer to accomplish, and one still needs to worry about dwindling time commitments. But it is far better to progress slowly and to reach the goal than it is to overcommit and to fail. <p> Dedicated Improvement Processors describes the other extreme to solving this problem. It may be combined with this pattern to obtain a mix of full-time and part-time PIT members. Known Uses [Wakulczyk] describes success with a software engineering process group (SEPG) composed of two full-time members and thirty-two part-time members. <ref> [Wiegers] </ref> mentions the use of ongoing "mini-project" teams (PITs coordinated by a central PEG) consisting predominantly of part-time members to successfully implement process improvements at Kodak. [Dorsey,McDonald] describe their SPI success at GTE using a central PEG to coordinate Process Action Teams (PATs) composed of 3-5 part-time members. [McLane] mentions DEC's <p> Known Uses [Grady] writes at length about Hewlett-Packard's success in using the classic Shewhart cycle together with the spiral model for planning SPI efforts. <ref> [Wiegers] </ref> describes SPI efforts at Kodak which applied a spiral cycle of Plan-Do-Assess-Verify for evolutionary improvement. [Wakulczyk] remarks upon NORAD's success applying a spiral cycle of Analyze-Plan-Do-Check-Act for SPI. [Jones,Kasunic] and [Radice] both describe success with extensions to the SEI IDEAL model, iterating the cycle of Initiate-Diagnose-Enact-Assess-Leverage in a spiral fashion
Reference: [Grady] <author> Robert B. Grady, </author> <title> Successful Software Process Improvement, Prentice-Hall, </title> <note> 1997 [Austin, </note> <author> Paulish] Robert D. Austin, Daniel J. Paulish, </author> <title> A Survey of Commonly Applied Methods for Software Process Improvement, </title> <institution> Carnegie Mellon University SEI Technical Report CMU/SEI-93-TR-27, </institution> <month> February </month> <year> 1993 </year>
Reference-contexts: Known Uses [Osterweil1] and [Osterweil2] describe how "Software Processes are Software Too." [Wiegers] remarks that treating SPI efforts like a project with mini-projects for each SPI increment was key to the success of Kodak's SPI efforts. <ref> [Grady] </ref> expresses the same sentiment of SPI efforts at Hewlett-Packard. [Austin,Paulish] and [Curtis] point to multiple SPI case studies which reached the same conclusions. [Wakulczyk] explains how treating improvement efforts at NORAD with the same careful management and visibility as major projects helped such efforts gain the respect they deserved. [Larner] <p> The process definition lifecycle suggested by Process follows Practice fits into one of the earliest iteration cycles to perform, while the suggested process evolution outline maps very closely to most variants of the Shewhart cycle commonly employed in SPI initiatives. Known Uses <ref> [Grady] </ref> writes at length about Hewlett-Packard's success in using the classic Shewhart cycle together with the spiral model for planning SPI efforts. [Wiegers] describes SPI efforts at Kodak which applied a spiral cycle of Plan-Do-Assess-Verify for evolutionary improvement. [Wakulczyk] remarks upon NORAD's success applying a spiral cycle of Analyze-Plan-Do-Check-Act for SPI.
Reference: [Curtis] <author> Bill Curtis, </author> <title> "Software Process Improvement: Methods and Lessons Learned", </title> <booktitle> Proceedings of the 19th International Conference on Software Engineering, </booktitle> <publisher> ACM Press, </publisher> <month> May </month> <year> 1997, </year> <pages> pp. 624-625 </pages>
Reference-contexts: Known Uses [Osterweil1] and [Osterweil2] describe how "Software Processes are Software Too." [Wiegers] remarks that treating SPI efforts like a project with mini-projects for each SPI increment was key to the success of Kodak's SPI efforts. [Grady] expresses the same sentiment of SPI efforts at Hewlett-Packard. [Austin,Paulish] and <ref> [Curtis] </ref> point to multiple SPI case studies which reached the same conclusions. [Wakulczyk] explains how treating improvement efforts at NORAD with the same careful management and visibility as major projects helped such efforts gain the respect they deserved. [Larner] states one lesson learned in SPI efforts at Lloyds Bank was to <p> Center PEG describes how to "Scope the PIT" for SPI initiatives that encompass a very large group of people. PIT also Practices and Dedicated Improvement Processors discuss how much time should be devoted by members of the PIT to SPI efforts. Known Uses <ref> [Curtis] </ref> cites SPI case studies which demonstrate the importance of staffing SPI initiatives with respected leaders (developers and managers) who are among the best and brightest in the organization (as opposed to using merely competent people with less influence in the community). [Donaldsen,Siegel] support these findings, as do [Fowler,Rifkin]. [Wakulczyk] describes <p> Related Patterns The recommendation of a process that is "self-aware" for the sake of its own improvement suggests an interesting similarity to Reflection from [POSA]. Improvement follows Spiral suggests a framework for planning and organizing improvement activities within the confines of the improvement process. Known Uses <ref> [Curtis] </ref>, [Fowler,Rifkin], [Donaldsen,Siegel] all observe the importance of PIT members leading by example and bolstering credibility of their efforts by following the same orderly processes which they expect others to adopt. [McCarthy] and [Cusumano,Selby] note that Microsoft refers to this as "dogfooding", because it brings to mind the sentiment that pet
Reference: [Wakulczyk] <author> Marek Wakulczyk, </author> <title> "The Successful SEPG: </title> <booktitle> S-CMM Level 2 in 2 1 / 2 Years", 9th Annual Software Technology Conference, </booktitle> <address> Salt Lake City, Utah, </address> <month> April </month> <year> 1997 </year>
Reference-contexts: Software Too." [Wiegers] remarks that treating SPI efforts like a project with mini-projects for each SPI increment was key to the success of Kodak's SPI efforts. [Grady] expresses the same sentiment of SPI efforts at Hewlett-Packard. [Austin,Paulish] and [Curtis] point to multiple SPI case studies which reached the same conclusions. <ref> [Wakulczyk] </ref> explains how treating improvement efforts at NORAD with the same careful management and visibility as major projects helped such efforts gain the respect they deserved. [Larner] states one lesson learned in SPI efforts at Lloyds Bank was to set up and run each process improvement project like a development project <p> Uses [Curtis] cites SPI case studies which demonstrate the importance of staffing SPI initiatives with respected leaders (developers and managers) who are among the best and brightest in the organization (as opposed to using merely competent people with less influence in the community). [Donaldsen,Siegel] support these findings, as do [Fowler,Rifkin]. <ref> [Wakulczyk] </ref> describes how having an SEPG filled with peers greatly facilitated their ability to gain trust from, and stay attuned with, the developers at NORAD. <p> It also has characteristics in common with Grass Roots [Delano,Rising]. Dedicated Improvement Processors describes the other extreme to solving this problem. It may be combined with this pattern to obtain a mix of full-time and part-time PIT members. Known Uses <ref> [Wakulczyk] </ref> describes success with a software engineering process group (SEPG) composed of two full-time members and thirty-two part-time members. [Wiegers] mentions the use of ongoing "mini-project" teams (PITs coordinated by a central PEG) consisting predominantly of part-time members to successfully implement process improvements at Kodak. [Dorsey,McDonald] describe their SPI success at <p> Known Uses [Grady] writes at length about Hewlett-Packard's success in using the classic Shewhart cycle together with the spiral model for planning SPI efforts. [Wiegers] describes SPI efforts at Kodak which applied a spiral cycle of Plan-Do-Assess-Verify for evolutionary improvement. <ref> [Wakulczyk] </ref> remarks upon NORAD's success applying a spiral cycle of Analyze-Plan-Do-Check-Act for SPI. [Jones,Kasunic] and [Radice] both describe success with extensions to the SEI IDEAL model, iterating the cycle of Initiate-Diagnose-Enact-Assess-Leverage in a spiral fashion for SPI planning and implementation. [SPC] and [Kellner] also recommend the use of an evolutionary spiral
Reference: [Larner] <author> Chris Larner, </author> <title> "More Practical Experiences and Lessons Gained by the SEPG of a Major European Bank", </title> <booktitle> Proceedings of the 1996 8th SEPG Conference, </booktitle> <month> May </month> <year> 1996, </year> <institution> Atlantic City, NJ </institution>
Reference-contexts: [Grady] expresses the same sentiment of SPI efforts at Hewlett-Packard. [Austin,Paulish] and [Curtis] point to multiple SPI case studies which reached the same conclusions. [Wakulczyk] explains how treating improvement efforts at NORAD with the same careful management and visibility as major projects helped such efforts gain the respect they deserved. <ref> [Larner] </ref> states one lesson learned in SPI efforts at Lloyds Bank was to set up and run each process improvement project like a development project using existing project management standards.
Reference: [Radice] <author> Ronald A. Radice, </author> <title> "Extensions to IDEAL Approach to Software Process Improvement", </title> <booktitle> Proceedings of the 1996 8th SEPG Conference, </booktitle> <month> May </month> <year> 1996, </year> <note> Atlantic City, </note> <author> NJ [Delano, Rising] David Delano, Linda Rising, </author> <title> "Introducing Technology into the Workplace", </title> <note> PLoP/Allerton Park 1997 Proceedings, Washington University Technical Report #wucs-97-34 [Dikel, </note> <author> Kane] David Kane, Christy Hermansen, David Dikel, and Ralph Malveaux, </author> <title> "Organizational Patterns for Software Architecture", </title> <booktitle> PLoP/Allerton Park 1997 Proceedings, </booktitle> <institution> Washington University Technical Report #wucs-97-34 </institution>
Reference-contexts: Another SPI case study by <ref> [Radice] </ref> states that treating improvement initiatives in this manner was not only a key characteristic of success, but that neglecting to conduct SPI projects this way was a recurring characteristic of failed efforts. Pattern Virtual Forum Context You are setting up a process improvement project infrastructure using Process is Product. <p> length about Hewlett-Packard's success in using the classic Shewhart cycle together with the spiral model for planning SPI efforts. [Wiegers] describes SPI efforts at Kodak which applied a spiral cycle of Plan-Do-Assess-Verify for evolutionary improvement. [Wakulczyk] remarks upon NORAD's success applying a spiral cycle of Analyze-Plan-Do-Check-Act for SPI. [Jones,Kasunic] and <ref> [Radice] </ref> both describe success with extensions to the SEI IDEAL model, iterating the cycle of Initiate-Diagnose-Enact-Assess-Leverage in a spiral fashion for SPI planning and implementation. [SPC] and [Kellner] also recommend the use of an evolutionary spiral process model for incremental process improvement.
Reference: [Cope] <author> James O. Coplien, </author> <title> "A Generative Development Process Pattern Language", Pattern Languages of Program Design, </title> <editor> James O. Coplien, Douglas C. Schmidt (Ed.), </editor> <publisher> Addison-Wesley, </publisher> <year> 1995, </year> <pages> pp. 178-237 </pages>
Reference-contexts: The electronic forum is not capable of conveying the same richness of expression as a face-to-face dialogue (there is no satisfactory replacement for direct human interaction). Related Patterns Involve Everyone [Delano,Rising], Informal Networks [Dikel,Kane], and Engage Customers <ref> [Cope] </ref> are all similar to this pattern. Brown Bag [Delano,Rising] suggests another way of solving this problem that may be applied in concert with Virtual Forum. The virtual forum may be used to facilitate and coordinate communication between the Improvement Action Teams, the PIT (s) and the Center PEG. <p> Solution Compose the PIT primarily of venerated veteran practitioners throughout the development community. These people should be "all-stars in the family": respected members of the organization with proven track records as developers or managers (cf. Domain Expertise in Roles <ref> [Cope] </ref>). Ideally, these talented individuals have leadership potential: when they talk, their peers tend to listen and are more likely to follow their example. If possible, try to recruit members from all development project teams so that each project has at least one voice to represent its interests. <p> Motivating individuals to participate in the PIT is not addressed by this pattern (Unity Of Purpose [Harrison] may prove useful here). Patterns for establishing suitable rewards and reinforcement to encourage such participation are also needed (see Compensate Success <ref> [Cope] </ref> for one example). Congruent action (see [WeinbergV3]) must somehow accompany the creation of such rewards to ensure that practitioner's commitments are adjusted to allow appropriate time and training to participate in improvement efforts. <p> Gaining such cooperation from management is another issue not directly addressed here (other patterns are needed for this as well). Related Patterns This pattern shares many elements with Domain Expertise in Roles <ref> [Cope] </ref>, Case Team [Beedle], as well as Grass Roots and Local Leader [Delano,Rising]. Size the Project [Cope] may help to determine how many people should serve on the PIT. Center PEG describes how to "Scope the PIT" for SPI initiatives that encompass a very large group of people. <p> Gaining such cooperation from management is another issue not directly addressed here (other patterns are needed for this as well). Related Patterns This pattern shares many elements with Domain Expertise in Roles <ref> [Cope] </ref>, Case Team [Beedle], as well as Grass Roots and Local Leader [Delano,Rising]. Size the Project [Cope] may help to determine how many people should serve on the PIT. Center PEG describes how to "Scope the PIT" for SPI initiatives that encompass a very large group of people. <p> However, forming a single PIT using Local Heroes to obtain equitable representation from the various projects and departments would vastly exceed a manageable team size (such as that recommended by Size the Project <ref> [Cope] </ref>). Forming several smaller teams of more manageable size is possible, but could give rise to a combinatorial explosion in efforts between PITs trying to coordinate all their efforts. Furthermore, if multiple PITs are created, the question arises as to which PITs have authority over the others. <p> Both the PEG and the PITs are typically used throughout the entire lifespan of the improvement initiative. Related Patterns This pattern bears a passing resemblance to the [GoF] design patterns Mediator and Observer. However, it has much more in common with Hub, Spoke and Rim from <ref> [Cope] </ref>, and Sub-Architect [Beedle]. Local Heroes should be used when forming the PEG. PIT also Practices and Dedicated Improvement Processors suggest strategies to use for the other subordinate PITs (the latter is usually employed for the PEG as well). <p> The resulting failure will make the next attempt doubly difficult if people have been soured against the idea from a previous bad experience. Related Patterns In some respects, this pattern is the process development equivalent of Architect also Implements from <ref> [Cope] </ref>. It also has characteristics in common with Grass Roots [Delano,Rising]. Dedicated Improvement Processors describes the other extreme to solving this problem. It may be combined with this pattern to obtain a mix of full-time and part-time PIT members. <p> Related Patterns Core Processes and Strategic Direction Initiative [Beedle] have many similarities to Process follows Practice. Virtual Forum may be used throughout the application of this pattern for some of the communication that occurs between the PIT and the practitioners. Mercenary Analyst, from <ref> [Cope] </ref>, may be useful for composing and revising process documentation. Improvement follows Spiral builds upon this pattern by suggesting a framework upon which to impose the proposed lifecycle phases. Improvement follows Process suggests the process to use for the various activities within the improvement lifecycle. <p> Once again, as with Local Heroes, patterns for establishing appropriate rewards and reinforcement to encourage participation and cooperation are needed to help this pattern succeed (see Compensate Success <ref> [Cope] </ref>, and Compensate Results [Beedle]). Related Patterns This pattern is reminiscent of Engage Customers [Cope], Grass Roots [Delano,Rising], Process Owners and Business Architecture Team [Beedle]. The Virtual Forum may be used by the IAT to communicate some of their efforts to the PIT and the practitioners. <p> Once again, as with Local Heroes, patterns for establishing appropriate rewards and reinforcement to encourage participation and cooperation are needed to help this pattern succeed (see Compensate Success <ref> [Cope] </ref>, and Compensate Results [Beedle]). Related Patterns This pattern is reminiscent of Engage Customers [Cope], Grass Roots [Delano,Rising], Process Owners and Business Architecture Team [Beedle]. The Virtual Forum may be used by the IAT to communicate some of their efforts to the PIT and the practitioners. Improvement follows Process and Improvement follows Spiral should be used to conduct the efforts of the IAT.
Reference: [Baumert] <author> John H. Baumert, </author> <title> "Experiences Developing and Deploying a Corporate-Wide Process Asset Library", </title> <booktitle> Proceedings of the 1996 8th SEPG Conference, </booktitle> <month> May </month> <year> 1996, </year> <institution> Atlantic City, NJ </institution>
Reference-contexts: It may also be used to solicit participation and feedback during Process follows Practice. Known Uses The use of an electronic forum to facilitate dialogues for garnering SPI input and feedback are described in [Austin,Paulish], <ref> [Baumert] </ref>, and [McLane]. Pattern Local Heroes Context You must assemble the process improvement team (a.k.a the PIT -- see Process is Product).
Reference: [McLane] <author> Marie McLane, </author> <title> "The First Step is the Hardest: A Systemic Approach to Continuous Process Improvement", </title> <booktitle> Proceedings of the 1994 6th SEPG Conference, </booktitle> <address> April 1996, Dallas, TX </address>
Reference-contexts: It may also be used to solicit participation and feedback during Process follows Practice. Known Uses The use of an electronic forum to facilitate dialogues for garnering SPI input and feedback are described in [Austin,Paulish], [Baumert], and <ref> [McLane] </ref>. Pattern Local Heroes Context You must assemble the process improvement team (a.k.a the PIT -- see Process is Product). The pool of candidates from which to select team members contains people internal to the organization as well as those external to the organization (experienced consultants and prospective new-hires). <p> part-time members. [Wiegers] mentions the use of ongoing "mini-project" teams (PITs coordinated by a central PEG) consisting predominantly of part-time members to successfully implement process improvements at Kodak. [Dorsey,McDonald] describe their SPI success at GTE using a central PEG to coordinate Process Action Teams (PATs) composed of 3-5 part-time members. <ref> [McLane] </ref> mentions DEC's use of an extended SEPG (or ESEPG) composed of part-time members and states how they were vital to piloting and implementing changes within their projects. Pattern Dedicated Improvement Processors Context See PIT also Practices. Problem See PIT also Practices. Forces See PIT also Practices.
Reference: [Harrison] <author> Neil Harrison, </author> <title> "Organizational Patterns for Teams", Pattern Languages of Program Design 2, </title> <editor> John M. Vlissides, James O. Coplien, Norman L. Kerth (Ed.), </editor> <publisher> Addison-Wesley, </publisher> <year> 1996, </year> <pages> pp. 345-352 </pages>
Reference-contexts: Other patterns are needed to fill in this gap. One alternative would be to use as many people as possible from within the organization and use external experts to fill the remaining slots. Motivating individuals to participate in the PIT is not addressed by this pattern (Unity Of Purpose <ref> [Harrison] </ref> may prove useful here). Patterns for establishing suitable rewards and reinforcement to encourage such participation are also needed (see Compensate Success [Cope] for one example).
Reference: [WeinbergV3] <author> Gerald Weinberg, </author> <title> Quality Software Management Volume 3: Congruent Action, </title> <publisher> Dorset House, </publisher> <year> 1994 </year>
Reference-contexts: Motivating individuals to participate in the PIT is not addressed by this pattern (Unity Of Purpose [Harrison] may prove useful here). Patterns for establishing suitable rewards and reinforcement to encourage such participation are also needed (see Compensate Success [Cope] for one example). Congruent action (see <ref> [WeinbergV3] </ref>) must somehow accompany the creation of such rewards to ensure that practitioner's commitments are adjusted to allow appropriate time and training to participate in improvement efforts. This requires committed support throughout the management hierarchy to enlist the cooperation of product-line managers and middle-managers to lighten workloads.
Reference: [Beedle] <author> Michael A. Beedle, </author> <title> "cOOherentBPR - A pattern language to build agile organizations", </title> <note> PLoP/Allerton Park 1997 Proceedings, Washington University Technical Report #wucs-97-34 [Donaldsen, </note> <author> Siegel] Scott E. Donaldsen, Stanley G. Siegel, </author> <title> Cultivating Successful Software Development: A Practitioner's View, </title> <publisher> Prentice-Hall PTR, </publisher> <address> 1997 [Fowler, </address> <institution> Rifkin] Priscilla Fowler, Stan Rifkin, Software Engineering Process Group Guide, Carnegie Mellon University SEI Technical Report CMU/SEI-90-TR-024, </institution> <month> September </month> <year> 1990 </year>
Reference-contexts: Gaining such cooperation from management is another issue not directly addressed here (other patterns are needed for this as well). Related Patterns This pattern shares many elements with Domain Expertise in Roles [Cope], Case Team <ref> [Beedle] </ref>, as well as Grass Roots and Local Leader [Delano,Rising]. Size the Project [Cope] may help to determine how many people should serve on the PIT. Center PEG describes how to "Scope the PIT" for SPI initiatives that encompass a very large group of people. <p> Both the PEG and the PITs are typically used throughout the entire lifespan of the improvement initiative. Related Patterns This pattern bears a passing resemblance to the [GoF] design patterns Mediator and Observer. However, it has much more in common with Hub, Spoke and Rim from [Cope], and Sub-Architect <ref> [Beedle] </ref>. Local Heroes should be used when forming the PEG. PIT also Practices and Dedicated Improvement Processors suggest strategies to use for the other subordinate PITs (the latter is usually employed for the PEG as well). <p> Process follows Practice emphasizes these things and makes it clear that not everything has to change. This increases familiarity and self-esteem while decreasing the size and speed of changes to be made. Related Patterns Core Processes and Strategic Direction Initiative <ref> [Beedle] </ref> have many similarities to Process follows Practice. Virtual Forum may be used throughout the application of this pattern for some of the communication that occurs between the PIT and the practitioners. Mercenary Analyst, from [Cope], may be useful for composing and revising process documentation. <p> Once again, as with Local Heroes, patterns for establishing appropriate rewards and reinforcement to encourage participation and cooperation are needed to help this pattern succeed (see Compensate Success [Cope], and Compensate Results <ref> [Beedle] </ref>). Related Patterns This pattern is reminiscent of Engage Customers [Cope], Grass Roots [Delano,Rising], Process Owners and Business Architecture Team [Beedle]. The Virtual Forum may be used by the IAT to communicate some of their efforts to the PIT and the practitioners. <p> as with Local Heroes, patterns for establishing appropriate rewards and reinforcement to encourage participation and cooperation are needed to help this pattern succeed (see Compensate Success [Cope], and Compensate Results <ref> [Beedle] </ref>). Related Patterns This pattern is reminiscent of Engage Customers [Cope], Grass Roots [Delano,Rising], Process Owners and Business Architecture Team [Beedle]. The Virtual Forum may be used by the IAT to communicate some of their efforts to the PIT and the practitioners. Improvement follows Process and Improvement follows Spiral should be used to conduct the efforts of the IAT.
Reference: [Kotter] <author> John Kotter, </author> <title> Leading Change, </title> <institution> Harvard Business School Press, </institution> <year> 1996 </year>
Reference-contexts: Pattern Center PEG Context The group undergoing process improvement is large enough that one PIT simply can't serve it effectively (or else a PIT of extremely large and unwieldy size would be required). Problem How do you manage multiple PITs for a large organization? Forces A single guiding coalition <ref> [Kotter] </ref> is desirable to maintain conceptual integrity and consistency of the improvement project. However, forming a single PIT using Local Heroes to obtain equitable representation from the various projects and departments would vastly exceed a manageable team size (such as that recommended by Size the Project [Cope]).
Reference: [GoF] <author> Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides, </author> <title> Design Patterns: Elements of Reusable Object-Oriented Software, </title> <publisher> Addison-Wesley, </publisher> <year> 1995 </year>
Reference-contexts: Both the PEG and the PITs are typically used throughout the entire lifespan of the improvement initiative. Related Patterns This pattern bears a passing resemblance to the <ref> [GoF] </ref> design patterns Mediator and Observer. However, it has much more in common with Hub, Spoke and Rim from [Cope], and Sub-Architect [Beedle]. Local Heroes should be used when forming the PEG.
Reference: [Haley] <author> Thomas J. Haley, </author> <title> "Software Process Improvement at Raytheon", </title> <journal> IEEE Software, November 1996, </journal> <volume> Vol. 13 No. 6 [Dorsey, </volume> <editor> McDonald] Terri Dorsey, Diane McDonald, </editor> <title> "Structured for Success: a Software Engineering Process Group (SEPG) Model", </title> <booktitle> Proceedings of the 1996 8th SEPG Conference, </booktitle> <month> May </month> <year> 1996, </year> <title> Atlantic City, </title> <editor> NJ [Herbsleb, Carleton] James Herbsleb, Anita Carleton, James Rozum, Jane Siegel, David Zubrow, </editor> <title> Benefits of CMM-Based Software Process Improvement: Initial Results, </title> <institution> Carnegie Mellon University SEI Technical Report CMU/SEI-94-TR-013, </institution> <month> August </month> <year> 1994 </year>
Reference-contexts: Local Heroes should be used when forming the PEG. PIT also Practices and Dedicated Improvement Processors suggest strategies to use for the other subordinate PITs (the latter is usually employed for the PEG as well). Known Uses <ref> [Haley] </ref> writes of an executive SEPG steering committee used to coordinate four different process working groups at Raytheon. [Dorsey,McDonald] describe GTE's improvement successes using a central SEPG to coordinate 3-5 person process action teams, each devoted to a specific key process area. [Austin,Paulish] mention ISO 9000 improvement efforts at DuPont using <p> The Virtual Forum may be used by the IAT to communicate some of their efforts to the PIT and the practitioners. Improvement follows Process and Improvement follows Spiral should be used to conduct the efforts of the IAT. Known <ref> [Haley] </ref> describes the use of ad hoc task teams (which included line-engineers) to Known Uses implement individual process improvements at Raytheon. [Fowler,Rifkin] cite multiple SPI case studies where using such "working groups, task forces, networks, or tiger teams" met with success. [Herbsleb,Carleton] writes of SPI efforts at Tinker Air Force Base
Reference: [Humphrey] <author> Watts Humphrey, </author> <title> Managing the Software Process, </title> <publisher> Addison-Wesley, </publisher> <year> 1989 </year>
Reference-contexts: With this knowledge in mind, improvement plans that carefully take into account the existing process and culture have a higher likelihood of being successful (or as <ref> [Humphrey] </ref> writes: "If you don't know where you are, a map won't help!"). It should be noted that the level of detail to which the process should be characterized is not clearly stated by this pattern.
Reference: [Krasner] <author> Herb Krasner, </author> <title> "Software Cycle-Time Reduction (SCTR): Boldly Going Beyond Level 3", </title> <booktitle> Proceedings of the 1996 8th SEPG Conference, </booktitle> <month> May </month> <year> 1996, </year> <institution> Atlantic City, NJ </institution>
Reference-contexts: Improvement follows Process suggests the process to use for the various activities within the improvement lifecycle. Known Uses Examples of first characterizing and assessing the existing process, and then using that as a benchmark for effecting continuous incremental process improvements are either cited or described in <ref> [Krasner] </ref>, [Austin,Paulish], [Fowler,Rifkin], and [WeinbergV4]. Pattern Improvement Action Teams Context A specific process area been selected for improvement.
Reference: [WeinbergV4] <author> Gerald Weinberg, </author> <title> Quality Software Management Volume 4: Anticipating Change, </title> <publisher> Dorset House, </publisher> <year> 1997 </year>
Reference-contexts: Known Uses Examples of first characterizing and assessing the existing process, and then using that as a benchmark for effecting continuous incremental process improvements are either cited or described in [Krasner], [Austin,Paulish], [Fowler,Rifkin], and <ref> [WeinbergV4] </ref>. Pattern Improvement Action Teams Context A specific process area been selected for improvement. Some preliminary planning and discussion has already been conducted to flesh out the essential requirements for the improvement, and to propose some feasible alternatives for implementing it (perhaps Virtual Forum was used for much of this).
Reference: [POSA] <author> Frank Buschmann, Regine Meunier, Hans Rohnert, Peter Sommerald, Michael Stal, </author> <title> Pattern-Oriented Software Architecture: A System Of Patterns, </title> <publisher> John Wiley & Sons, </publisher> <year> 1996 </year>
Reference-contexts: In addition the process becomes adaptable enough to accommodate many of the varying needs of both product development, and process development. Related Patterns The recommendation of a process that is "self-aware" for the sake of its own improvement suggests an interesting similarity to Reflection from <ref> [POSA] </ref>. Improvement follows Spiral suggests a framework for planning and organizing improvement activities within the confines of the improvement process.
Reference: [McCarthy] <author> Jim McCarthy, </author> <title> Dynamics of Software Development, </title> <note> Microsoft Press, 1995 [Cusumano, </note> <author> Selby] Michael A. Cusumano, Richard W. </author> <title> Selby Microsoft Secrets: How the World's Most Powerful Software Company Creates Technology, Shapes Markets, and Manages People, </title> <publisher> The Free Press, </publisher> <month> October </month> <year> 1995 </year>
Reference-contexts: Known Uses [Curtis], [Fowler,Rifkin], [Donaldsen,Siegel] all observe the importance of PIT members leading by example and bolstering credibility of their efforts by following the same orderly processes which they expect others to adopt. <ref> [McCarthy] </ref> and [Cusumano,Selby] note that Microsoft refers to this as "dogfooding", because it brings to mind the sentiment that pet product vendors should be required to "eat their own dogfood" before asking consumers to feed it to their own beloved pets.
Reference: [Boehm88] <author> Barry Boehm, </author> <title> "A Spiral Model of Software Development and Enhancement", </title> <booktitle> IEEE Computer, </booktitle> <month> May </month> <year> 1988 </year>
Reference-contexts: Solution Impose a spiral model upon the process improvement lifecycle and base it off some variant of the Shewhart cycle of Plan-Do-Check-Act (espoused by Deming and in TQM circles). Current incarnations of the spiral model include the original model proposed in <ref> [Boehm88] </ref>, the "Theory W" spiral model of [Pressman] and an updated model in [Boehm96] called the Win-Win spiral model. Resulting Context A spiral framework for iteratively incorporating planning, assessment, and risk management activities throughout the process of implementing and deploying improvements.
Reference: [Pressman] <author> Roger S. Pressman, </author> <title> Software Engineering: A Practitioner's Approach, 4th ed., </title> <publisher> McGraw-Hill, </publisher> <year> 1996 </year>
Reference-contexts: Solution Impose a spiral model upon the process improvement lifecycle and base it off some variant of the Shewhart cycle of Plan-Do-Check-Act (espoused by Deming and in TQM circles). Current incarnations of the spiral model include the original model proposed in [Boehm88], the "Theory W" spiral model of <ref> [Pressman] </ref> and an updated model in [Boehm96] called the Win-Win spiral model. Resulting Context A spiral framework for iteratively incorporating planning, assessment, and risk management activities throughout the process of implementing and deploying improvements.
Reference: [Boehm96] <author> Barry Boehm, </author> <title> "Anchoring the Software Process", </title> <journal> IEEE Software, </journal> <month> July </month> <year> 1996, </year> <title> Volume 13 Number 4 [Jones, </title> <editor> Kasunic] Lawrence G. Jones, Mark Kasunic, Mike Ginn, </editor> <title> "Implementing SEI's IDEAL Model in a Less Than Ideal World", </title> <booktitle> Proceedings of the 1996 8th SEPG Conference, </booktitle> <month> May </month> <year> 1996, </year> <institution> Atlantic City, NJ </institution>
Reference-contexts: Current incarnations of the spiral model include the original model proposed in [Boehm88], the "Theory W" spiral model of [Pressman] and an updated model in <ref> [Boehm96] </ref> called the Win-Win spiral model. Resulting Context A spiral framework for iteratively incorporating planning, assessment, and risk management activities throughout the process of implementing and deploying improvements. The spiral model is used in a manner similar to that which its proponents recommend for software development.
Reference: [SPC] <author> Software Productivity Consortium, </author> <title> Improving the Software Process Through Process Definition and Modeling, </title> <publisher> International Thomson Computer Press, </publisher> <year> 1996 </year>
Reference-contexts: which applied a spiral cycle of Plan-Do-Assess-Verify for evolutionary improvement. [Wakulczyk] remarks upon NORAD's success applying a spiral cycle of Analyze-Plan-Do-Check-Act for SPI. [Jones,Kasunic] and [Radice] both describe success with extensions to the SEI IDEAL model, iterating the cycle of Initiate-Diagnose-Enact-Assess-Leverage in a spiral fashion for SPI planning and implementation. <ref> [SPC] </ref> and [Kellner] also recommend the use of an evolutionary spiral process model for incremental process improvement. Conclusions This paper began by claiming that important social and cultural issues make process improvement projects markedly different from most product development projects.
Reference: [Kellner] <author> Marc I. Kellner, </author> <title> "A Method for Designing, Defining, and Evolving Software Processes", </title> <booktitle> Proceedings of the 1996 8th SEPG Conference, </booktitle> <month> May </month> <year> 1996, </year> <institution> Atlantic City, NJ </institution>
Reference-contexts: a spiral cycle of Plan-Do-Assess-Verify for evolutionary improvement. [Wakulczyk] remarks upon NORAD's success applying a spiral cycle of Analyze-Plan-Do-Check-Act for SPI. [Jones,Kasunic] and [Radice] both describe success with extensions to the SEI IDEAL model, iterating the cycle of Initiate-Diagnose-Enact-Assess-Leverage in a spiral fashion for SPI planning and implementation. [SPC] and <ref> [Kellner] </ref> also recommend the use of an evolutionary spiral process model for incremental process improvement. Conclusions This paper began by claiming that important social and cultural issues make process improvement projects markedly different from most product development projects.
References-found: 30

