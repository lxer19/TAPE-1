URL: http://www.cosc.brocku.ca/Research/TechRep/cs9402.ps
Refering-URL: http://www.cosc.brocku.ca/Research/TechRep/
Root-URL: 
Title: The Inductive Inference of Finite Interleaving with Synchronization  
Author: Brian J. Ross 
Keyword: Key words: inductive inference, exact identification, PAC learning, interleaving, shu*e, synchronization, process algebra, acyclic digraphs.  
Address: St. Catharines, Ontario, Canada L2S 3A1  
Affiliation: Brock University Department of Computer Science  
Pubnum: Technical Report CS-94-02  
Email: email: bross@sandbanks.cosc.brocku.ca  
Phone: phone: (416) 688-5550 ext. 4284 fax: (416) 688-2789  
Date: June 1994  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> I.K. Aalbersberg and G. Rozenberg. </author> <title> Theory of Traces. </title> <journal> Theoretical Computer Science, </journal> <volume> 60 </volume> <pages> 1-82, </pages> <year> 1988. </year>
Reference-contexts: This paper is concerned with the inductive inference of a restricted interleaved language I , which features synchronized interleaving behaviour. This language is interesting from a number of perspectives. Firstly, algebraic interleaving is of central importance in the theory of concurrency <ref> [21, 12, 20, 1, 19] </ref>. An interleaved expression P jj Q denotes the concurrent execution of P and Q. Its computational behaviour is modelled by a trace or stream of atomic elements, in which P and Q nondeterministi-cally contribute values into the trace. <p> Our use of a DAG with path-length labels made the algorithm polynomial. This DAG representation is related to dependence graphs found in the theory of traces, in which the shu*e operator is an essential concept <ref> [1] </ref>. Similar graph models of concurrent systems are used in process algebras [20, 19] and Petri nets [21].
Reference: [2] <author> G.E. Andrews. </author> <title> The Theory of Partitions. </title> <publisher> Addison-Wesley, </publisher> <address> Massachusetts, </address> <year> 1976. </year>
Reference-contexts: The number of ways of partitioning jj = n elements is given by the nth Bell number B n <ref> [2, 9] </ref>. <p> As discussed in section 2.3, the number I expressions derivable for a fixed of size n is equivalent to the number of partitions of the n elements of . This is given by the nth Bell number fi n <ref> [2, 9] </ref>, where B 0 = B 1 = 1 n X k B n1 This simple recursive definition of Bell numbers is difficult to use in theorem 28.
Reference: [3] <author> D. Angluin. </author> <title> Inference of Reversible Languages. </title> <journal> Journal of the ACM, </journal> <volume> 29(3) </volume> <pages> 741-765, </pages> <month> July </month> <year> 1982. </year>
Reference-contexts: This has relationships with process-theoretic computation theory, since processes often generate indeterminately large computational sequences. Other restricted languages used for inference have included k-reversible regular languages <ref> [3] </ref>, 0-reversible commutative regular languages [11], and k-bounded regular languages [13]. Acknowledgements: The author thanks Tom Jenkyns for his interesting analyses of some combinatorial issues. The author is supported by NSERC Operating Grant 0138467. 23
Reference: [4] <author> D. Angluin. </author> <title> Queries and Concept Learning. </title> <journal> Machine Learning, </journal> <volume> 2 </volume> <pages> 319-342, </pages> <year> 1987. </year>
Reference-contexts: Inductive inference using equivalence queries was first suggested in <ref> [4] </ref>, in which a target DFA is inferred from counterexamples in response to intermediate inferred machines. [17] extends this technique to !-regular languages those with infinite members. This has relationships with process-theoretic computation theory, since processes often generate indeterminately large computational sequences.
Reference: [5] <author> D. Angluin and C.H. Smith. </author> <title> Inductive Inference: Theory and Methods. </title> <journal> Computing Surveys, </journal> <volume> 15(3) </volume> <pages> 237-269, </pages> <year> 1983. </year>
Reference-contexts: 1 Introduction Inductive inference is a machine learning paradigm which attempts to discover a formal language from information about members of the language <ref> [5] </ref>. A characteristic of inductive inference problems is that the inference of many formal languages is NP-complete, while the inference of others is tractable so long as the language under study is restricted and a suitable representation and inference technique is used [23, 22].
Reference: [6] <author> F.T. Boesch and J.F. Gimpel. </author> <title> Covering the Points of a Digraph with Point-Disjoint Paths and Its Application to Code Optimization. </title> <journal> Journal of the ACM, </journal> <volume> 24(2) </volume> <pages> 192-198, </pages> <month> April </month> <year> 1977. </year>
Reference-contexts: The minimal number of terms extractable from the DAG is determinable by using a polynomial minimal path cover algorithm for selecting paths from the DAG. For example, the one in <ref> [6] </ref> is O (k 3 ) for a DAG with k nodes. However, there are some disadvantages to this hypothesis ordering scheme. Firstly, unlike the previous selection schemes that generated maximum-sized term (s), hypotheses produced in the minimal-term scheme do not always permit refutation by counterexamples.
Reference: [7] <editor> G. Chartrand and L. Lesniak. </editor> <title> Graphs and Digraphs. </title> <publisher> Wadsworth and Brooks/Cole, </publisher> <address> Monterey, CA, </address> <note> second edition, </note> <year> 1986. </year>
Reference-contexts: jj a e n " (e i 2 MaxPaths) (d) Delete from G the source, sink, and nodes & arcs referencing values in M axP aths, and recurse on M axF lowInterleave. for doing this is to refine DAG traversal by introducing a "maxflow" analysis into the graph traversal process <ref> [7, 15] </ref>. Maxflow is a well-known network flow algorithm that attempts to find the maximum output of a network or graph. The routine in figure 8 replaces the Interleave routine in figure 7.
Reference: [8] <author> M.R. Garey and D.S. Johnson. </author> <title> Computers and Intractability. W.H. </title> <publisher> Freeman, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: For example, disregarding synchronization, consider a set S of different I terms and an alphabet . Then determining the minimal number of terms that covers is NP-complete. The Minimal Cover problem transforms to it when the terms are considered to be sets <ref> [8] </ref>. In addition, a naive representation of the enumerated terms uses an exponential amount of space, as there are ( i=1 i! terms constructable for jj = k.
Reference: [9] <author> R.L. Graham, D.E. Knuth, and O. Patashnik. </author> <title> Concrete Mathematics. </title> <publisher> Addison Wesley, </publisher> <address> New York, </address> <year> 1989. </year>
Reference-contexts: The number of ways of partitioning jj = n elements is given by the nth Bell number B n <ref> [2, 9] </ref>. <p> As discussed in section 2.3, the number I expressions derivable for a fixed of size n is equivalent to the number of partitions of the n elements of . This is given by the nth Bell number fi n <ref> [2, 9] </ref>, where B 0 = B 1 = 1 n X k B n1 This simple recursive definition of Bell numbers is difficult to use in theorem 28. <p> Proof: A derivable approximation for B n is B n e 1 X k n The result follows by solving for B n (see <ref> [9] </ref> for details). 2 We can now derive a PAC result for I without synchronization. Theorem 30 Consider the universe H of I expressions (without synchronization) for some fixed .
Reference: [10] <author> D. Haussler. </author> <title> Quantifying Inductive Bias: AI Learning Algorithms and Valiant's Learning Framework. </title> <journal> Artificial Intelligence, </journal> <volume> 36 </volume> <pages> 177-221, </pages> <year> 1988. </year>
Reference-contexts: that, as in the greedy selection case, there are only jj equivalence classes possible, which is a very coarse measure of hypothesis suitability. 4 PAC learning of I Because the universe of possible I expressions over a given is finite, it is possible to derive a PAC model of learning <ref> [25, 10] </ref>. Some definitions from [10] are first given. See these sources for a more detailed study. Definition 25 Consider the universe U of hypotheses derivable in some domain D, and the set of examples S of some target concept in D. <p> Some definitions from <ref> [10] </ref> are first given. See these sources for a more detailed study. Definition 25 Consider the universe U of hypotheses derivable in some domain D, and the set of examples S of some target concept in D. <p> Then for any ffi, 0 &lt; ffi &lt; 1, if m * 1 (ln (1=ffi) + lnjHj) then the version space of Q is *-exhausted with probability at least 1 ffi. Proof: See <ref> [25, 10] </ref>. 2 We can now derive the PAC model for I inference. Since synchronization reduces the size of the version spaces for hypotheses, the PAC model of expressions involving synchronization will be a combinatorial simplification of the case without it.
Reference: [11] <author> D. Helmbold, R. Sloan, and M.K. Warmuth. </author> <title> Learning Submodules and Reversible Commutative Regular Languages. </title> <type> Technical report, </type> <institution> Department of Computer and Information Sciences, University of California at Santa Cruz, </institution> <year> 1989. </year>
Reference-contexts: This has relationships with process-theoretic computation theory, since processes often generate indeterminately large computational sequences. Other restricted languages used for inference have included k-reversible regular languages [3], 0-reversible commutative regular languages <ref> [11] </ref>, and k-bounded regular languages [13]. Acknowledgements: The author thanks Tom Jenkyns for his interesting analyses of some combinatorial issues. The author is supported by NSERC Operating Grant 0138467. 23
Reference: [12] <author> C. A. R. Hoare. </author> <title> Communicating Sequential Processes. </title> <publisher> Prentice-Hall, </publisher> <year> 1985. </year>
Reference-contexts: This paper is concerned with the inductive inference of a restricted interleaved language I , which features synchronized interleaving behaviour. This language is interesting from a number of perspectives. Firstly, algebraic interleaving is of central importance in the theory of concurrency <ref> [21, 12, 20, 1, 19] </ref>. An interleaved expression P jj Q denotes the concurrent execution of P and Q. Its computational behaviour is modelled by a trace or stream of atomic elements, in which P and Q nondeterministi-cally contribute values into the trace.
Reference: [13] <author> O.H. Ibarra and T. Jiang. </author> <title> Learning regular languages from counterexamples. </title> <booktitle> In Proceedings of the 1988 Workshop on Computational Learning Theory, </booktitle> <address> San Mateo, CA, 1988. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: This has relationships with process-theoretic computation theory, since processes often generate indeterminately large computational sequences. Other restricted languages used for inference have included k-reversible regular languages [3], 0-reversible commutative regular languages [11], and k-bounded regular languages <ref> [13] </ref>. Acknowledgements: The author thanks Tom Jenkyns for his interesting analyses of some combinatorial issues. The author is supported by NSERC Operating Grant 0138467. 23
Reference: [14] <author> T. Jenkyns, </author> <year> 1993. </year> <type> Personal communication. </type>
Reference-contexts: not cause problems, since the cardinality of trace sets will not be the criteria for choosing hypotheses. 2 On the other hand, it can be proven that, if the number of terms in two expressions are fixed, then the expression with the largest term will have a smaller trace set <ref> [14] </ref>. 8 The number of I expressions that exist over a given is also measurable. Disre--garding duplicates and synchronization, counting the number of I expressions possible over a given is equivalent to the partition problem, which is concerned with counting the number of partitions derivable for a given multiset.
Reference: [15] <author> R. Johnsonbaugh. </author> <title> Discrete Mathematics. </title> <publisher> Macmillan, </publisher> <address> New York, third edition, </address> <year> 1990. </year>
Reference-contexts: jj a e n " (e i 2 MaxPaths) (d) Delete from G the source, sink, and nodes & arcs referencing values in M axP aths, and recurse on M axF lowInterleave. for doing this is to refine DAG traversal by introducing a "maxflow" analysis into the graph traversal process <ref> [7, 15] </ref>. Maxflow is a well-known network flow algorithm that attempts to find the maximum output of a network or graph. The routine in figure 8 replaces the Interleave routine in figure 7.
Reference: [16] <author> M. </author> <title> Lothaire. Combinatorics on Words. </title> <publisher> Addison-Wesley, </publisher> <address> Massachusetts, </address> <year> 1983. </year> <month> 24 </month>
Reference-contexts: The PAC learning of I is discussed in section 4. Conclusions, future work, and related work are discussed in section 5. 2 Language definition and properties 2.1 Definition We define a restricted interleaving language I . I expressions are called shu*es in combinatorial algebra, and have the same semantics <ref> [16] </ref>. An alphabet = fa; b; c; :::g is a finite multiset of atomic actions or elements. Using , we define I as follows.
Reference: [17] <author> O. Maler and Amir Pnueli. </author> <title> Learning !-Regular Languages from Queries and Counter-Examples. In K.P. </title> <editor> Jantke, editor, </editor> <booktitle> Workshop on Analogical and Inductive Inference, </booktitle> <pages> pages 161-170. </pages> <publisher> Springer-Verlag LNAI 397, </publisher> <year> 1989. </year>
Reference-contexts: Inductive inference using equivalence queries was first suggested in [4], in which a target DFA is inferred from counterexamples in response to intermediate inferred machines. <ref> [17] </ref> extends this technique to !-regular languages those with infinite members. This has relationships with process-theoretic computation theory, since processes often generate indeterminately large computational sequences. Other restricted languages used for inference have included k-reversible regular languages [3], 0-reversible commutative regular languages [11], and k-bounded regular languages [13].
Reference: [18] <author> A.J. Mayer and L.J. Stockmeyer. </author> <title> The complexity of word problems this time with interleaving. </title> <type> Technical Report RJ 8947, </type> <institution> IBM Research Div., </institution> <address> San Jose, CA, </address> <year> 1992. </year>
Reference-contexts: Its computational behaviour is modelled by a trace or stream of atomic elements, in which P and Q nondeterministi-cally contribute values into the trace. Secondly, the interleaving operator permits its exponentially-large domain space to be denoted with linear efficiency <ref> [18] </ref>. In addition, with respect to inductive inference, it is possible to derive a maximally efficient set of input examples for any I expression.
Reference: [19] <author> R. Milner. </author> <title> Communication and Concurrency. </title> <publisher> Prentice Hall, </publisher> <year> 1989. </year>
Reference-contexts: This paper is concerned with the inductive inference of a restricted interleaved language I , which features synchronized interleaving behaviour. This language is interesting from a number of perspectives. Firstly, algebraic interleaving is of central importance in the theory of concurrency <ref> [21, 12, 20, 1, 19] </ref>. An interleaved expression P jj Q denotes the concurrent execution of P and Q. Its computational behaviour is modelled by a trace or stream of atomic elements, in which P and Q nondeterministi-cally contribute values into the trace. <p> Our use of a DAG with path-length labels made the algorithm polynomial. This DAG representation is related to dependence graphs found in the theory of traces, in which the shu*e operator is an essential concept [1]. Similar graph models of concurrent systems are used in process algebras <ref> [20, 19] </ref> and Petri nets [21]. There are a number of ways in which the inference 3 ln is the natural log, and log is the common log. 22 algorithm could be made faster than O (nk 2 ).
Reference: [20] <author> E.-R. </author> <title> Olderog and C.A.R. Hoare. Specification-Oriented Semantics for Communicating Processes. </title> <journal> Acta Informatica, </journal> <volume> 23 </volume> <pages> 9-66, </pages> <year> 1986. </year>
Reference-contexts: This paper is concerned with the inductive inference of a restricted interleaved language I , which features synchronized interleaving behaviour. This language is interesting from a number of perspectives. Firstly, algebraic interleaving is of central importance in the theory of concurrency <ref> [21, 12, 20, 1, 19] </ref>. An interleaved expression P jj Q denotes the concurrent execution of P and Q. Its computational behaviour is modelled by a trace or stream of atomic elements, in which P and Q nondeterministi-cally contribute values into the trace. <p> If the prefix operator and empty action are dropped from trace expressions, a trace is simply a string of actions. Traces for I expressions are usually sets of strings, since one interleaving expressions may generate multiple strings. The following trace model is taken from a process algebra in <ref> [20] </ref>, and defines the interleaving behaviour of jj A . The semantic function T generates a trace for the argument expression. <p> Our use of a DAG with path-length labels made the algorithm polynomial. This DAG representation is related to dependence graphs found in the theory of traces, in which the shu*e operator is an essential concept [1]. Similar graph models of concurrent systems are used in process algebras <ref> [20, 19] </ref> and Petri nets [21]. There are a number of ways in which the inference 3 ln is the natural log, and log is the common log. 22 algorithm could be made faster than O (nk 2 ).
Reference: [21] <author> J.L. Peterson. </author> <title> Petri Nets. </title> <journal> Computing Surveys, </journal> <volume> 9(3), </volume> <month> September </month> <year> 1977. </year>
Reference-contexts: This paper is concerned with the inductive inference of a restricted interleaved language I , which features synchronized interleaving behaviour. This language is interesting from a number of perspectives. Firstly, algebraic interleaving is of central importance in the theory of concurrency <ref> [21, 12, 20, 1, 19] </ref>. An interleaved expression P jj Q denotes the concurrent execution of P and Q. Its computational behaviour is modelled by a trace or stream of atomic elements, in which P and Q nondeterministi-cally contribute values into the trace. <p> This DAG representation is related to dependence graphs found in the theory of traces, in which the shu*e operator is an essential concept [1]. Similar graph models of concurrent systems are used in process algebras [20, 19] and Petri nets <ref> [21] </ref>. There are a number of ways in which the inference 3 ln is the natural log, and log is the common log. 22 algorithm could be made faster than O (nk 2 ).
Reference: [22] <author> L. Pitt. </author> <title> Inductive Inference, DFAs, and Computational Complexity. </title> <editor> In K. P. Jantke, editor, </editor> <booktitle> Workshop on Analogical and Inductive Inference, </booktitle> <pages> pages 18-44. </pages> <publisher> Springer-Verlag LNAI 397, </publisher> <year> 1989. </year>
Reference-contexts: A characteristic of inductive inference problems is that the inference of many formal languages is NP-complete, while the inference of others is tractable so long as the language under study is restricted and a suitable representation and inference technique is used <ref> [23, 22] </ref>. This paper is concerned with the inductive inference of a restricted interleaved language I , which features synchronized interleaving behaviour. This language is interesting from a number of perspectives. Firstly, algebraic interleaving is of central importance in the theory of concurrency [21, 12, 20, 1, 19].
Reference: [23] <author> L. Pitt and L.G. Valiant. </author> <title> Computational Limitations on Learning from Examples. </title> <journal> Journal of the ACM, </journal> <volume> 35(4) </volume> <pages> 965-984, </pages> <month> October </month> <year> 1988. </year>
Reference-contexts: A characteristic of inductive inference problems is that the inference of many formal languages is NP-complete, while the inference of others is tractable so long as the language under study is restricted and a suitable representation and inference technique is used <ref> [23, 22] </ref>. This paper is concerned with the inductive inference of a restricted interleaved language I , which features synchronized interleaving behaviour. This language is interesting from a number of perspectives. Firstly, algebraic interleaving is of central importance in the theory of concurrency [21, 12, 20, 1, 19]. <p> An important concept that should be considered in concert with interleaving is deterministic and/or nondeterministic choice ("+"). Adding such an operator, however, would make the system as powerful as a regular language, and regular languages cannot be tractably identified from positive examples alone <ref> [23] </ref>. It is safe to assume that, unless interleaved languages are restricted in some fashion, their inference will often be NP-complete. Hence any interleaving language must be enhanced with caution.
Reference: [24] <author> B.J. Ross. </author> <title> The Inductive Inference of Cyclic Synchronized Interleaving. </title> <booktitle> In Proceedings of the 11th European Conference on Artificial Intelligence, </booktitle> <address> Amsterdam, 1994. </address> <publisher> John Wiley and Sons. </publisher>
Reference-contexts: It is safe to assume that, unless interleaved languages are restricted in some fashion, their inference will often be NP-complete. Hence any interleaving language must be enhanced with caution. A language variant of I whose inference has been shown to be tractable is perpetual cyclic interleaving expressions with synchronization <ref> [24] </ref>. The cyclic term (abc) ! generates the infinite trace abcabcabca:::. The I fl expression (abcd) ! jj c (ecf g) ! denotes an interleaving expression in which the terms cyclicly contribute to the trace while synchronizing with c.
Reference: [25] <author> L.G. Valiant. </author> <title> A Theory of the Learnable. </title> <journal> Communications of the ACM, </journal> <volume> 27(11) </volume> <pages> 1134-1142, </pages> <month> November </month> <year> 1984. </year> <month> 25 </month>
Reference-contexts: that, as in the greedy selection case, there are only jj equivalence classes possible, which is a very coarse measure of hypothesis suitability. 4 PAC learning of I Because the universe of possible I expressions over a given is finite, it is possible to derive a PAC model of learning <ref> [25, 10] </ref>. Some definitions from [10] are first given. See these sources for a more detailed study. Definition 25 Consider the universe U of hypotheses derivable in some domain D, and the set of examples S of some target concept in D. <p> Then for any ffi, 0 &lt; ffi &lt; 1, if m * 1 (ln (1=ffi) + lnjHj) then the version space of Q is *-exhausted with probability at least 1 ffi. Proof: See <ref> [25, 10] </ref>. 2 We can now derive the PAC model for I inference. Since synchronization reduces the size of the version spaces for hypotheses, the PAC model of expressions involving synchronization will be a combinatorial simplification of the case without it.
References-found: 25

