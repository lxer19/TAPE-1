URL: http://www.cs.uni-bonn.de/III/lehre/praktika/AutonomeRobotik/SS98/rtlHFESEC97.ps.gz
Refering-URL: http://www.cs.uni-bonn.de/III/lehre/praktika/AutonomeRobotik/SS98/
Root-URL: http://cs.uni-bonn.de
Email: email: fwolfram, abc, schulzg@cs.uni-bonn.de  
Title: Architecture of the Robotic Tele Lab  
Author: Wolfram Burgard Armin B. Cremers Dirk Schulz 
Address: D-53117 Bonn, Germany  
Affiliation: Dept. of Computer Science III University of Bonn  
Date: August 29, 1997  
Abstract: With the growth of the Internet the ability to share remote laboratory resources and to monitor and control remote devices becomes more and more important. Since the Internet makes no guarantees of the communication link's bandwidth, tele-operation systems have to deal with possible lags in communication. This paper describes the architecture of the Robotic Tele Lab, a tele-operation system allowing multiple researchers in different locations to observe experiments on our task-level controlled mobile robot RHINO over the Internet. To cope with the poor communication properties of the Internet, our system uses a distributed virtual environment, predictive simulations and IP-Multicasting. This approach allows the monitoring of complex experiments even over low bandwidth connections with varying transmission delays. We further describe an experiment with our task-level controlled mobile robot RHINO. During this experiment RHINO operated for six days as a tourguide in a populated museum and was tele-operated over the Internet by more than 600 virtual visitors. 
Abstract-found: 1
Intro-found: 1
Reference: [BBC + 95] <author> Joachim Buhmann, Wolfram Burgard, Armin B. Cremers, Dieter Fox, Thomas Hofmann, Frank Schneider, Jiannis Strikos, and Sebastian Thrun. </author> <title> The mobile robot Rhino. </title> <journal> AI Magazine, </journal> <volume> 16(2):3138, </volume> <month> Summer </month> <year> 1995. </year>
Reference-contexts: Since the simulations are synchronised, the user will see the virtual environment from the perspective of the real robot, even while it is moving. Synchronisation: In this paragraph we will briefly explain how the RTL server is connected to the RHINO system <ref> [BBC + 95, TBB + ] </ref> and how the virtual robot's position is synchronised with RHINO's position. The RHINO system consists of the robot itself, an RWI B21 robot, and several software modules, each performing a specific navigation or planning task.
Reference: [BFHS96] <author> Wolfram Burgard, Dieter Fox, Daniel Hennig, and Timo Schmidt. </author> <title> Estimating the absolute position of a mobile robot using position probability grids. </title> <booktitle> In Proc. of the Fourteenth National Conference on Artificial Intelligence, </booktitle> <pages> pages 896901, </pages> <year> 1996. </year>
Reference-contexts: The modules exchange information asynchronously via TCP/IP using the message passing library TCX [Fed93]. Two modules are employed for the synchronisation tasks:- (1) the navigation and collision avoidance module [FBT97] and (2) the localisation module <ref> [BFHS96] </ref>. The navigation module sends robot state information, position, velocities and accelerations, to the RTL server up to 4 times a second. These values are used by the RHINO interface of the server to re-initialise the simulation if the simulated values differ significantly from the real values.
Reference: [Dee89] <author> Steve Deering. </author> <title> Host extensions for ip multicasting. In Request for Comments (RFC) 1112, </title> <institution> Internet Engineering Task Force (IETF), </institution> <month> August </month> <year> 1989. </year>
Reference-contexts: In typical client-server systems, the server sends information to a single client only on request. The RTL server broadcasts state changes to all connected clients at once. Broadcasting is achieved using IP-Multicasting over the multicast backbone (MBone) <ref> [Dee89] </ref> of the Internet. Clients register at the so-called multicast address of the server. Together the server and clients form a multicast group. In multicast groups every message sent by one group member is received by all the other group members.
Reference: [FBT97] <author> Dieter Fox, Wolfram Burgard, and Sebastian Thrun. </author> <title> The dynamic window approach to collision avoidance. </title> <journal> IEEE Robotics & Automation Magazine, </journal> <volume> 4(1):2333, </volume> <month> March </month> <year> 1997. </year>
Reference-contexts: The modules exchange information asynchronously via TCP/IP using the message passing library TCX [Fed93]. Two modules are employed for the synchronisation tasks:- (1) the navigation and collision avoidance module <ref> [FBT97] </ref> and (2) the localisation module [BFHS96]. The navigation module sends robot state information, position, velocities and accelerations, to the RTL server up to 4 times a second.
Reference: [Fed93] <author> C. Fedor. TCX. </author> <title> an interprocess communication system for building robotic architectures. programmers guide to version 10.xx. </title> <institution> Carnegie Mellon University, </institution> <address> Pittsburgh, PA, </address> <month> December </month> <year> 1993. </year>
Reference-contexts: The RHINO system consists of the robot itself, an RWI B21 robot, and several software modules, each performing a specific navigation or planning task. The modules exchange information asynchronously via TCP/IP using the message passing library TCX <ref> [Fed93] </ref>. Two modules are employed for the synchronisation tasks:- (1) the navigation and collision avoidance module [FBT97] and (2) the localisation module [BFHS96]. The navigation module sends robot state information, position, velocities and accelerations, to the RTL server up to 4 times a second.
Reference: [FPW + 95] <author> Terrence Fong, Henning Pangels, David Wettergreen, Erik Nygren, Butler Hine, Phil Hon-talas, and Christopher Fedor. </author> <title> Operator interfaces and network-based participation for Dante II. </title> <booktitle> In SAE 25th International Conference on Environmental Systems, </booktitle> <year> 1995. </year>
Reference-contexts: Due to limitations of the Internet communication facilities of the WWW, some differences between the RTL architecture and the tourguide interface exist and these will also be explained. 2 Related Work So far, research on tele-operated autonomous robots has focused mainly on robots exploring dangerous environments <ref> [HHF + 95, FPW + 95] </ref> and on the design of autonomous robot systems for space missions [HBJJ94, Sto96]. In contrast to RTL, these systems use leased lines and satellite links for communication. High bandwidth is permanently available and transmission delays are nearly constant.
Reference: [HBJJ94] <author> G. Hirzinger, B. Brunner, Dietrich J., and Heindl J. </author> <title> ROTEXthe first remotely controlled robot in space. </title> <booktitle> In IEEE Conference on Robotics and Automation, </booktitle> <address> San Diego, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: between the RTL architecture and the tourguide interface exist and these will also be explained. 2 Related Work So far, research on tele-operated autonomous robots has focused mainly on robots exploring dangerous environments [HHF + 95, FPW + 95] and on the design of autonomous robot systems for space missions <ref> [HBJJ94, Sto96] </ref>. In contrast to RTL, these systems use leased lines and satellite links for communication. High bandwidth is permanently available and transmission delays are nearly constant.
Reference: [HHF + 95] <author> Butler Hine, Phil Hontalas, Terrence Fong, Laurent Piguet, Erik Nygren, and Aaron Kline. VEVI: </author> <title> A virtual environment teleoperations interface for planetary exploration. </title> <booktitle> In SAE 25th International Conference on Environmental Systems, </booktitle> <month> July </month> <year> 1995. </year>
Reference-contexts: Due to limitations of the Internet communication facilities of the WWW, some differences between the RTL architecture and the tourguide interface exist and these will also be explained. 2 Related Work So far, research on tele-operated autonomous robots has focused mainly on robots exploring dangerous environments <ref> [HHF + 95, FPW + 95] </ref> and on the design of autonomous robot systems for space missions [HBJJ94, Sto96]. In contrast to RTL, these systems use leased lines and satellite links for communication. High bandwidth is permanently available and transmission delays are nearly constant.
Reference: [MBZ + 95] <author> Michael R. Macedonia, Donald P. Brutzman, Michael J. Zyda, David R. Pratt, Paul T. Barham, John Falby, and John Locke. NPSNET: </author> <title> A multi-player 3D virtual environment over the internet. </title> <booktitle> In Proceedings of the ACM 1995 Symposium on Interactive 3D Graphics, </booktitle> <year> 1995. </year>
Reference-contexts: We use the task-level control system of our mobile robot RHINO and a 3D computer graphics visualisation of the operating environment instead. A sophisticated scheme of synchronised simulations, adopted from the field of distributed interactive simulation <ref> [MBZ + 95] </ref>, bridges transmission delays and helps to further reduce bandwidth requirements. For the transmission of state changes we employ IP-Multicasting, the most efficient method for transfering information to many destinations over the Internet. <p> The environment of the robot is assumed to be static in these systems. The Internet communication architecture of RTL is based on NPSNET-IV <ref> [MBZ + 95] </ref>, a distributed, interactive virtual 3D multi user environment, connecting different training simulators over the Internet. From the NPSNET-IV system RTL adopts the use synchronous predictive simulations and the use of IP-Multicasting. NPSNET-IV is a pure virtual environment.
Reference: [Sto96] <author> H. W. Stone. Mars pathfinder microrover: </author> <title> A low-cost, low-power spacecraft. </title> <booktitle> In Proceedings of the 1996 AIAA Forum on Advanced Developments in Space Robotics, </booktitle> <address> Madison,WI, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: 1 Introduction A well known application area for robots, and especially tele-operated autonomous robots, is the exploration of dangerous environments or of environments whose direct observation is in some way difficult. The mars pathfinder mission <ref> [Sto96] </ref> is perhaps the most popular example of this type of application. However, we are concerned with a different research direction in autonomous robotics, namely the design of service robot systems. Such are robots capable of carrying out tasks like delivery jobs autonomously in ordinary environments like hospitals and offices. <p> between the RTL architecture and the tourguide interface exist and these will also be explained. 2 Related Work So far, research on tele-operated autonomous robots has focused mainly on robots exploring dangerous environments [HHF + 95, FPW + 95] and on the design of autonomous robot systems for space missions <ref> [HBJJ94, Sto96] </ref>. In contrast to RTL, these systems use leased lines and satellite links for communication. High bandwidth is permanently available and transmission delays are nearly constant.
Reference: [TBB + ] <author> S. Thrun, A. Bucken, W. Burgard, D. Fox, T. Frohlinghaus, D. Hennig, T. Hofmann, M. Krell, and T. Schimdt. </author> <title> Map learning and high-speed navigation in RHINO. </title> <editor> In D. Ko-rtenkamp, R.P. Bonasso, and R. Murphy, editors, </editor> <title> AI-based Mobile Robots: Case studies of successful robot systems. </title> <publisher> MIT Press, to appear, </publisher> <address> Cambridge, MA. </address>
Reference-contexts: Since the simulations are synchronised, the user will see the virtual environment from the perspective of the real robot, even while it is moving. Synchronisation: In this paragraph we will briefly explain how the RTL server is connected to the RHINO system <ref> [BBC + 95, TBB + ] </ref> and how the virtual robot's position is synchronised with RHINO's position. The RHINO system consists of the robot itself, an RWI B21 robot, and several software modules, each performing a specific navigation or planning task.
References-found: 11

