URL: ftp://ftp.cs.colorado.edu/users/andre/papers/SCM5.ps
Refering-URL: http://www.cs.colorado.edu/~andre/papers.html
Root-URL: http://www.cs.colorado.edu
Email: fandre,dennis,alwg@cs.colorado.edu  
Title: Does Configuration Management Research Have a Future?  
Author: Andre van der Hoek, Dennis Heimbigner, and Alexander L. Wolf 
Address: Boulder, Colorado 80309 USA  
Affiliation: Department of Computer Science, CB 430 University of Colorado  
Abstract: In this position paper we raise the question of whether Configuration Management (CM) research has a future. The new standard in CM systems|typified by commercial products such as Adele, ADC, ClearCase, Continuus/CM, and CCC/Harvest|largely satisfies the CM functionality requirements posed by Dart. This implies that research in the area of CM is either unnecessary or that we must find new challenges in CM on which to focus. We believe that these challenges indeed exist. Here we present some areas that we feel are good opportunities for new or continued CM research, and therefore conclude that CM research does have a future. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. </author> <title> Dart. Spectrum of Functionality in Configuration Management Systems. </title> <type> Technical Report SEI-90-TR-11, </type> <institution> Software Engineering Institute, Pittsburgh, Pennsylvania, </institution> <month> December </month> <year> 1990. </year>
Reference-contexts: Introduction Numerous attempts have been made to lay out the overall functionality requirements for CM systems. Dart <ref> [1, 2] </ref> defines eight areas. * Component: identifies, classifies, and accesses the components of the software product. * Structure: represents the system model of the product. * Construction: supports the construction of the product and its artifacts. * Auditing: keeps an audit trail of the product and its process. * Accounting:
Reference: [2] <author> S. </author> <title> Dart. Concepts in Configuration Management Systems. </title> <booktitle> In Proceedings of the Third International Workshop on Software Configuration Management, </booktitle> <pages> pages 1-18. </pages> <booktitle> ACM SIGSOFT, </booktitle> <year> 1991. </year>
Reference-contexts: Introduction Numerous attempts have been made to lay out the overall functionality requirements for CM systems. Dart <ref> [1, 2] </ref> defines eight areas. * Component: identifies, classifies, and accesses the components of the software product. * Structure: represents the system model of the product. * Construction: supports the construction of the product and its artifacts. * Auditing: keeps an audit trail of the product and its process. * Accounting:
References-found: 2

