URL: http://wwwis.win.tue.nl/~wsinwa/pn93.ps
Refering-URL: http://wwwis.win.tue.nl/~wsinwa/publications.html
Root-URL: http://www.win.tue.nl
Title: Interval Timed Coloured Petri Nets and their Analysis  
Author: W.M.P. van der Aalst 
Affiliation: Eindhoven University of Technology Dept. of Mathematics and Computing Science  
Abstract: Practical experiences show that only timed and coloured Petri nets are capable of modelling large and complex real-time systems. This is the reason we present the Interval Timed Coloured Petri Net (ITCPN) model. An interval timed coloured Petri net is a coloured Petri net extended with time; time is in tokens and transitions determine a delay for each produced token. This delay is specified by an upper and lower bound, i.e. an interval. The ITCPN model allows the modelling of the dynamic behaviour of large and complex systems, without losing the possibility of formal analysis. In addition to the existing analysis techniques for coloured Petri nets, we propose a new analysis method to analyse the temporal behaviour of the net. This method constructs a reduced reachability graph and exploits the fact that delays are described by an interval. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> W.M.P. van der Aalst, </author> <title> Interval Timed Petri Nets and their analysis. </title> <booktitle> Computing Science Notes 91/09, </booktitle> <institution> Eindhoven University of Technology, Eindhoven, </institution> <year> 1991. </year> <title> [2] , Modelling and Analysis of Complex Logistic Systems, in Integration in Production Management Systems, H.J. </title> <editor> Pels and J.C. Wortmann, eds., </editor> <volume> vol. </volume> <booktitle> B-7 of IFIP Transactions, </booktitle> <publisher> Elsevier Science Publishers, </publisher> <address> Amsterdam, </address> <year> 1992, </year> <pages> pp. </pages> <month> 277-292. </month> <title> [3] , Timed coloured Petri nets and their application to logistics, </title> <type> PhD thesis, </type> <institution> Eindhoven University of Technology, Eindhoven, </institution> <year> 1992. </year>
Reference-contexts: (t 1 )) = fhp in ; ji + hp free ; mi j j 2 J and m 2 Mg For j 2 J and m 2 M, we have: 1 F (t 1 )(hp in ; ji + hp free ; mi) = hhp busy ; hm; jii; <ref> [1; 3] </ref>i The domain of F (t 1 ) describes the condition on which transition t 1 is enabled, i.e. t 1 is enabled if there is (at least) one token in place p in and one token in p free . <p> Note that, in this case, the enabling of a transition does not depend upon the values of the tokens consumed. The enabling time of transition t 1 depends upon the 1 Note that hp in ; ji + hp free ; mi and hhp busy ; hm; jii; <ref> [1; 3] </ref>i are multi-sets, see section 3.1. ae ae ae ae p in p busy p out p free hhp free ; hM 1; J 1ii; 3i ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae <p> ae p in p busy p out p free hhp free ; hM 1; J 1ii; 3i ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae ae w - ' $ oe <ref> [1; 3] </ref> [0; 0] timestamps of the tokens to be consumed. If t 1 occurs, it consumes one token from place p in and one token from p free and it produces one token for place p busy . <p> 9 hhp;vi;xi2b 9 hhp;vi;[y;z]i2b (x 2 [y; z]) and (b hhp; vi; xi) (b hhp; vi; [y; z]i) Consider for example: ; ; hhp in ; J 1i; 1i + 2 hhp free ; M1i; 0i hhp in ; J 1i; [0:5; 1:5]i + 2 hhp free ; M 1i; <ref> [0; 1] </ref>i Note that hhp in ; J 1i; 1i is not a specialization of hhp in ; J 2i; [0:5; 1:5]i, because the values of the two tokens differ. <p> The delay intervals are given in the figure. Suppose the initial state is such that there is one token in p 1 with timestamp 0. The number of successors of this state is infinite, because all states with one token in p 2 having a timestamp x 2 <ref> [1; 2] </ref> and one token in p 3 having a timestamp y 2 [3; 4] are reachable. It may seem unreasonable that this simple example corresponds to a reachability graph with an infinite number of states. <p> To illustrate these alternative semantics we will use the example shown in figure 1. The initial state corresponds to the state class hhp in ; J 1i; <ref> [1; 1] </ref>i + hhp free ; M1i; [0; 0]i. Note that there is only one state which is a specialization of this class. The minimum enabling time (ET min ) of the event which corresponds to the firing of t 1 is equal to 1. <p> The minimum enabling time (ET min ) of the event which corresponds to the firing of t 1 is equal to 1. The maximum model time (M T max ) is also 1. The only state class directly reachable from hhp in ; J 1i; <ref> [1; 1] </ref>i + hhp free ; M 1i; [0; 0]i is the state class hhp busy ; hM 1; J 1i; [2; 4]i. For this state class, the minimum enabling time (ET min ) of the event which corresponds to the firing of t 2 is equal to 2. <p> Note that the opposite does not hold, because of dependencies between tokens are not taken into account. Consider for example the net shown in figure 4. Suppose there is one token in p1 with a time interval <ref> [0; 1] </ref> and the other places are empty. In this case t fires between time 0 (ET min (e)) and time 1 (MT max (s)). <p> In this case t fires between time 0 (ET min (e)) and time 1 (MT max (s)). The next state of the ITCPN using the alternative definitions given in section 4.2, will be the state with one token in p2 (with interval <ref> [1; 3] </ref>) and one token in p3 (with interval [3; 5]). This suggests that it is possible to have a token in p2 with timestamp 1 and a token in p3 with timestamp 5. <p> Moreover, we are able to answer questions which cannot be answered by simulation or the method proposed by Berthomieu et al. [7]. We have modelled and analysed many examples using the approach presented in this paper, see Van der Aalst <ref> [3, 2, 1] </ref> and Odijk [23]. To facilitate the analysis of real-life systems we have developed an analysis tool, called IAT ([3]). This tool also supports more traditional kinds of analysis such as the generation of place and transition invariants.
Reference: [4] <author> W.M.P. van der Aalst and A.W. Waltmans, </author> <title> Modelling logistic systems with EXSPECT, in Dynamic Modelling of Information Systems, </title> <editor> H.G. Sol and K.M. van Hee, eds., </editor> <publisher> Elsevier Science Publishers, </publisher> <address> Amsterdam, </address> <year> 1991, </year> <pages> pp. 269-288. </pages>
Reference-contexts: The number of successors of this state is infinite, because all states with one token in p 2 having a timestamp x 2 [1; 2] and one token in p 3 having a timestamp y 2 <ref> [3; 4] </ref> are reachable. It may seem unreasonable that this simple example corresponds to a reachability graph with an infinite number of states. This is the reason we developed the Modified Transition System Reduction Technique described in this section. <p> This is the reason we developed the Modified Transition System Reduction Technique described in this section. This technique generates the reachability graph and uses, for computational reasons only, alternative definitions for the dynamic behaviour of an ITCPN. j * - P P P P P Pq <ref> [3; 4] </ref> i i p 3 4.2 Reducing the Reachability Graph of an ITCPN The Modified Transition System Reduction Technique (MTSRT) uses alternative definitions for the dynamic behaviour of an ITCPN, i.e. the MTSRT method uses alternative semantics. <p> The maximum model time (M T max ) is also 1. The only state class directly reachable from hhp in ; J 1i; [1; 1]i + hhp free ; M 1i; [0; 0]i is the state class hhp busy ; hM 1; J 1i; <ref> [2; 4] </ref>i. For this state class, the minimum enabling time (ET min ) of the event which corresponds to the firing of t 2 is equal to 2. The maximum model time (M T max ) is 4. Transition t 2 will fire between 2 and 4. <p> The maximum model time (M T max ) is 4. Transition t 2 will fire between 2 and 4. Consequently, the only state class directly reachable from hhp busy ; hM 1; J 1i; <ref> [2; 4] </ref>i is hhp out ; J 1i; [2; 4]i + hhp free ; M 1i; [2; 4]i. 4.3 Soundness The alternative definitions of section 4.2 have been given for computational reasons. <p> The maximum model time (M T max ) is 4. Transition t 2 will fire between 2 and 4. Consequently, the only state class directly reachable from hhp busy ; hM 1; J 1i; <ref> [2; 4] </ref>i is hhp out ; J 1i; [2; 4]i + hhp free ; M 1i; [2; 4]i. 4.3 Soundness The alternative definitions of section 4.2 have been given for computational reasons. <p> Transition t 2 will fire between 2 and 4. Consequently, the only state class directly reachable from hhp busy ; hM 1; J 1i; <ref> [2; 4] </ref>i is hhp out ; J 1i; [2; 4]i + hhp free ; M 1i; [2; 4]i. 4.3 Soundness The alternative definitions of section 4.2 have been given for computational reasons. However, calculating the reduced reachability graph only makes sense if the reduced reachability graph can be used to deduce properties of the reachability graph which represents the behaviour of the ITCPN. <p> This tool also supports more traditional kinds of analysis such as the generation of place and transition invariants. IAT is part of the software package ExSpect (see ASPT [6], Van Hee et al. [12] and Van der Aalst <ref> [3, 4] </ref>). 5 Conclusion In this paper, we presented a coloured Petri net model extended with time. This ITCPN model uses a new timing mechanism where time is associated with tokens and transitions determine a delay specified by an interval.
Reference: [5] <author> C. Andre, </author> <title> Synchronized Elementary Net Systems, </title> <booktitle> in Advances in Petri Nets 1989, </booktitle> <editor> G. Rozenberg, ed., </editor> <volume> vol. </volume> <booktitle> 424 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1990, </year> <pages> pp. 51-76. </pages>
Reference-contexts: The next state of the ITCPN using the alternative definitions given in section 4.2, will be the state with one token in p2 (with interval [1; 3]) and one token in p3 (with interval <ref> [3; 5] </ref>). This suggests that it is possible to have a token in p2 with timestamp 1 and a token in p3 with timestamp 5. However, this is not possible, because these timestamps are related (i.e. they where produced at the same time).
Reference: [6] <author> ASPT, </author> <title> ExSpect 4.0 User Manual, </title> <institution> Eindhoven University of Technology, </institution> <year> 1993. </year>
Reference-contexts: To facilitate the analysis of real-life systems we have developed an analysis tool, called IAT ([3]). This tool also supports more traditional kinds of analysis such as the generation of place and transition invariants. IAT is part of the software package ExSpect (see ASPT <ref> [6] </ref>, Van Hee et al. [12] and Van der Aalst [3, 4]). 5 Conclusion In this paper, we presented a coloured Petri net model extended with time. This ITCPN model uses a new timing mechanism where time is associated with tokens and transitions determine a delay specified by an interval.
Reference: [7] <author> B. Berthomieu and M. Diaz, </author> <title> Modelling and verification of time dependent systems using Time Petri Nets, </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 17 (1991), </volume> <pages> pp. 259-273. </pages>
Reference-contexts: Another difference with our model is the fact that Merlin's model is not a high-level Petri net model because of the absence of typed (coloured) tokens. Compared to our model, Merlin's model has a rather complex formal semantics, which was presented in <ref> [7] </ref> by Berthomieu and Diaz. This is caused by a redundant state space (marking and enabled transitions are represented separately) and the fact that they use a relative time scale and allow for multiple enabledness of transitions. <p> However, experimentation shows that the calculated bounds are often of great value and far from trivial. Moreover, we are able to answer questions which cannot be answered by simulation or the method proposed by Berthomieu et al. <ref> [7] </ref>. We have modelled and analysed many examples using the approach presented in this paper, see Van der Aalst [3, 2, 1] and Odijk [23]. To facilitate the analysis of real-life systems we have developed an analysis tool, called IAT ([3]).
Reference: [8] <author> G. Chiola, C. Dutheillet, G. Franceschinis, and S. Haddad, </author> <title> On well-formed coloured nets and their symbolic reachability graph, </title> <booktitle> in Proceedings of the 11th International Conference on Applications and Theory of Petri Nets, </booktitle> <address> Paris, </address> <month> June </month> <year> 1990, </year> <pages> pp. 387-411. </pages>
Reference-contexts: Obviously such a reachability graph may, even for small nets, become very large (often infinite). Many authors have presented analysis techniques for the efficient calculation of a reachability graph of an untimed coloured Petri net (e.g. [27], [16], [14], <ref> [8] </ref>). In this section we focus on the reachability graph of an ITCPN. In general the number of reachable states of an ITCPN (given an initial state) is infinite. This is mainly caused by the fact that we use interval timing. Consider an enabled transition. <p> Experimentation shows that, in general, the results obtained using the MTSRT method are quite meaningful. A direction of further research is to incorporate other reduction techniques for coloured Petri nets into our approach (e.g. [27], [16], [14], <ref> [8] </ref>).
Reference: [9] <author> G. Florin and S. Natkin, </author> <title> Evaluation based upon Stochastic Petri Nets of the Maximum Throughput of a Full Duplex Protocol, in Application and theory of Petri nets: </title> <booktitle> selected papers from the first and the second European workshop, </booktitle> <editor> C. Girault and W. Reisig, eds., </editor> <volume> vol. </volume> <booktitle> 52 of Informatik Fachberichte, </booktitle> <address> Berlin, 1982, </address> <publisher> Springer-Verlag, Berlin, </publisher> <pages> pp. 280-288. </pages>
Reference: [10] <author> H.J. Genrich and K. Lautenbach, </author> <title> System modelling with high level Petri nets, </title> <booktitle> Theoretical Computer Science, 13 (1981), </booktitle> <pages> pp. 109-136. </pages>
Reference: [11] <author> K.M. van Hee, </author> <title> Information System Engineering: a Formal Approach, </title> <publisher> Cam-bridge University Press, </publisher> <year> 1994. </year>
Reference-contexts: Although there seems to be a consensus of opinion on this matter, only a few timed coloured Petri net models have been proposed in literature (e.g. Van Hee et al. <ref> [12, 11] </ref>, Morasca [22]). Moreover, even fewer methods have been developed for the analysis of the temporal behaviour of these nets. This is one of the reasons we propose the Interval Timed Coloured Petri Net (ITCPN) model and an analysis method, called MTSRT, based on this model.
Reference: [12] <author> K.M. van Hee, L.J. Somers, and M. Voorhoeve, </author> <title> Executable specifications for distributed information systems, </title> <booktitle> in Proceedings of the IFIP TC 8 / WG 8.1 Working Conference on Information System Concepts: An In-depth Analysis, </booktitle> <editor> E.D. Falkenberg and P. Lindgreen, eds., </editor> <address> Namur, Belgium, 1989, </address> <publisher> Elsevier Science Publishers, Amsterdam, </publisher> <pages> pp. 139-156. </pages>
Reference-contexts: Sometimes it is even impossible to model the behaviour of the system accurately. To solve these problems many authors propose extensions of the basic Petri net model. Several authors have extended the basic Petri net model with coloured or typed tokens ([10], [15], [16], <ref> [12] </ref>, [13]). In these models tokens have a value, often referred to as `colour'. There are several reasons for such an extension. One of these reasons is the fact that (uncoloured) Petri nets tend to become too large to handle. <p> These `coloured' Petri nets allow the modeller to make much more succinct and manageable descriptions, therefore they are called high-level nets. Other authors have proposed a Petri net model with explicit quantitative time (e.g. [28], [24], [20], [19], <ref> [12] </ref>, [26]). We call these models timed Petri net models. In our opinion, only timed and coloured Petri nets are suitable for the modelling of large and complex real-time systems. <p> Although there seems to be a consensus of opinion on this matter, only a few timed coloured Petri net models have been proposed in literature (e.g. Van Hee et al. <ref> [12, 11] </ref>, Morasca [22]). Moreover, even fewer methods have been developed for the analysis of the temporal behaviour of these nets. This is one of the reasons we propose the Interval Timed Coloured Petri Net (ITCPN) model and an analysis method, called MTSRT, based on this model. <p> The ITCPN model uses a rather new timing mechanism where time is associated with tokens. This timing concept has been adopted from Van Hee et al. <ref> [12] </ref>. In the ITCPN model we attach a timestamp to every token. This timestamp indicates the time a token becomes available. Associating time with tokens seems to be the natural choice for high-level Petri nets, since the colour is also associated with tokens. <p> Instead of using `interval timing', we could have used a Petri net model with fixed delays or stochastic delays. Petri nets with fixed (deterministic) delays have been proposed in [28], [24], [26] and <ref> [12] </ref>. They allow for simple analysis methods but are not very expressive, because in a real system the durations of most activities are variable. One way to model this variability, is to assume certain delay distributions, i.e. to use a timed Petri net model with delays described by probability distributions. <p> To facilitate the analysis of real-life systems we have developed an analysis tool, called IAT ([3]). This tool also supports more traditional kinds of analysis such as the generation of place and transition invariants. IAT is part of the software package ExSpect (see ASPT [6], Van Hee et al. <ref> [12] </ref> and Van der Aalst [3, 4]). 5 Conclusion In this paper, we presented a coloured Petri net model extended with time. This ITCPN model uses a new timing mechanism where time is associated with tokens and transitions determine a delay specified by an interval.
Reference: [13] <author> K.M. van Hee and P.A.C. Verkoulen, </author> <title> Integration of a Data Model and High-Level Petri Nets, </title> <booktitle> in Proceedings of the 12th International Conference on Applications and Theory of Petri Nets, </booktitle> <address> Gjern, </address> <month> June </month> <year> 1991, </year> <pages> pp. 410-431. </pages>
Reference-contexts: Sometimes it is even impossible to model the behaviour of the system accurately. To solve these problems many authors propose extensions of the basic Petri net model. Several authors have extended the basic Petri net model with coloured or typed tokens ([10], [15], [16], [12], <ref> [13] </ref>). In these models tokens have a value, often referred to as `colour'. There are several reasons for such an extension. One of these reasons is the fact that (uncoloured) Petri nets tend to become too large to handle.
Reference: [14] <author> P. Hubner, A.M. Jensen, L.O. Jepsen, and K. Jensen, </author> <title> Reachability trees for high level Petri nets, </title> <booktitle> Theoretical Computer Science, 45 (1986), </booktitle> <pages> pp. 261-292. </pages>
Reference-contexts: If we want to inspect the reachability graph by means of a computer, we have to solve this problem. This is the reason several authors developed reduction techniques (Hubner et al. <ref> [14] </ref> and Valmari [27]). Unfortunately, it is not known how to apply these techniques to timed coloured Petri nets. For timed coloured Petri nets with certain types of stochastic delays it is possible to translate the net into a continuous time Markov chain. <p> Obviously such a reachability graph may, even for small nets, become very large (often infinite). Many authors have presented analysis techniques for the efficient calculation of a reachability graph of an untimed coloured Petri net (e.g. [27], [16], <ref> [14] </ref>, [8]). In this section we focus on the reachability graph of an ITCPN. In general the number of reachable states of an ITCPN (given an initial state) is infinite. This is mainly caused by the fact that we use interval timing. Consider an enabled transition. <p> Experimentation shows that, in general, the results obtained using the MTSRT method are quite meaningful. A direction of further research is to incorporate other reduction techniques for coloured Petri nets into our approach (e.g. [27], [16], <ref> [14] </ref>, [8]).
Reference: [15] <author> K. Jensen, </author> <title> Coloured Petri Nets, in Advances in Petri Nets 1986 Part I: Petri Nets, central models and their properties, </title> <editor> W. Brauer, W. Reisig, and G. Rozen-berg, eds., </editor> <volume> vol. </volume> <booktitle> 254 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1987, </year> <pages> pp. </pages> <month> 248-299. </month> <title> [16] , Coloured Petri Nets: A High Level Language for System Design and Analysis, </title> <booktitle> in Advances in Petri Nets 1990, </booktitle> <editor> G. Rozenberg, ed., </editor> <volume> vol. </volume> <booktitle> 483 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1990, </year> <pages> pp. </pages> <month> 342-416. </month> <title> [17] , Coloured Petri Nets. Basic concepts, analysis methods and practical use., </title> <booktitle> EATCS monographs on Theoretical Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1992. </year>
Reference-contexts: Sometimes it is even impossible to model the behaviour of the system accurately. To solve these problems many authors propose extensions of the basic Petri net model. Several authors have extended the basic Petri net model with coloured or typed tokens ([10], <ref> [15] </ref>, [16], [12], [13]). In these models tokens have a value, often referred to as `colour'. There are several reasons for such an extension. One of these reasons is the fact that (uncoloured) Petri nets tend to become too large to handle. <p> However, in this paper we give a definition which is closer to the definition of Coloured Petri Nets (CPN), see Jensen <ref> [15, 16, 17] </ref>. Nearly all timed Petri net models use a continuous time domain, so do we. Definition 3 T S is the time set, T S = fx 2 IR j x 0g, i.e. the set of all non-negative reals. <p> In this paper, we require that both the multi-set of consumed tokens and the multi-set of produced tokens contain finitely many elements. Apart from the interval timing and a transition function instead of incidence functions, this definition resembles the definition of a CP-matrix (see Jensen <ref> [15, 17] </ref>). 3.3 Dynamic Behaviour of Interval Timed Coloured Petri Nets The five tuple (; P; T; C; F ) specifies the static structure of an ITCPN. <p> Modern graphical screens are fast and have a high resolution. Therefore, it is possible to visualize a simulation graphically (i.e. animation). Reachability analysis is a technique which constructs a reachability graph, sometimes referred to as reachability tree or occurrence graph (cf. Jensen <ref> [15, 17] </ref>). Such a reachability graph contains a node for each possible state and an arc for each possible state change. Reachability analysis is a very powerful method in the sense that it can be used to prove all kinds of properties. <p> Therefore, in general, these invariants do not characterize the dynamic behaviour of the system. On the other hand, they can be used to verify properties which are time independent. For more information about the calculation of invariants in a coloured Petri net, see Jensen <ref> [15, 17] </ref>. In our ITCPN model, a delay is described by an interval rather than a fixed value or some delay distribution.
Reference: [18] <author> M. Ajmone Marsan, G. Balbo, A. Bobbio, G. Chiola, G. Conte, and A. Cumani, </author> <title> On Petri Nets with Stochastic Timing, </title> <booktitle> in Proceedings of the International Workshop on Timed Petri Nets, </booktitle> <address> Torino, 1985, </address> <publisher> IEEE Computer Society Press, </publisher> <pages> pp. 80-87. </pages>
Reference-contexts: One way to model this variability, is to assume certain delay distributions, i.e. to use a timed Petri net model with delays described by probability distributions. These nets are called stochastic Petri nets ([9], [19], <ref> [18] </ref>). Analysis of stochastic Petri nets is possible (in theory), since the reachability graph can be regarded, under certain conditions, as a Markov chain or a semi-Markov process. <p> However, these conditions are severe: all firing delays have to be sampled from an exponential distribution or the topology of the net has to be of a special form (Ajmone Marsan et al. <ref> [18] </ref>). Since there are no general applicable analysis methods, several authors resorted to using simulation to study the behaviour of the net (see section 4). To avoid these problems, we propose delays described by an interval specifying an upper and lower bound for the duration of the corresponding activity. <p> Several authors attempted to increase the modelling power by allowing other kinds of delays, for example mixed deterministic and negative exponential distributed delays, and phase-distributed delays (see Ajmone Marsan et al. <ref> [18] </ref>). Nearly all stochastic Petri net models (and related analysis techniques) do not allow for coloured tokens, because the increased modelling power is offset by computational difficulties. This is the reason stochastic high-level Petri nets are often used in a simulation context only.
Reference: [19] <author> M. Ajmone Marsan, G. Balbo, and G. Conte, </author> <title> A Class of Generalised Stochastic Petri Nets for the Performance Evaluation of Multiprocessor Systems, </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 2 (1984), </volume> <pages> pp. 93-122. </pages>
Reference-contexts: These `coloured' Petri nets allow the modeller to make much more succinct and manageable descriptions, therefore they are called high-level nets. Other authors have proposed a Petri net model with explicit quantitative time (e.g. [28], [24], [20], <ref> [19] </ref>, [12], [26]). We call these models timed Petri net models. In our opinion, only timed and coloured Petri nets are suitable for the modelling of large and complex real-time systems. <p> One way to model this variability, is to assume certain delay distributions, i.e. to use a timed Petri net model with delays described by probability distributions. These nets are called stochastic Petri nets ([9], <ref> [19] </ref>, [18]). Analysis of stochastic Petri nets is possible (in theory), since the reachability graph can be regarded, under certain conditions, as a Markov chain or a semi-Markov process.
Reference: [20] <author> P. Merlin, </author> <title> A Study of the Recoverability of Computer Systems, </title> <type> PhD thesis, </type> <institution> University of California, Irvine, California, </institution> <year> 1974. </year>
Reference-contexts: These `coloured' Petri nets allow the modeller to make much more succinct and manageable descriptions, therefore they are called high-level nets. Other authors have proposed a Petri net model with explicit quantitative time (e.g. [28], [24], <ref> [20] </ref>, [19], [12], [26]). We call these models timed Petri net models. In our opinion, only timed and coloured Petri nets are suitable for the modelling of large and complex real-time systems. <p> Examples of such systems are: real-time computer systems, process controllers, communication systems, flexible manufacturing systems and just-in-time manufacturing systems. To our knowledge, only one other model has been presented in literature which also uses delays specified by an interval. This model was presented by Merlin in <ref> [20, 21] </ref>. In this model the enabling time of a transition is specified by a minimal and a maximal time. Another difference with our model is the fact that Merlin's model is not a high-level Petri net model because of the absence of typed (coloured) tokens.
Reference: [21] <author> P. </author> <title> Merlin and D.J. Faber, Recoverability of communication protocols, </title> <journal> IEEE Transactions on Communication, </journal> <volume> 24 (1976), </volume> <pages> pp. 1036-1043. </pages>
Reference-contexts: Examples of such systems are: real-time computer systems, process controllers, communication systems, flexible manufacturing systems and just-in-time manufacturing systems. To our knowledge, only one other model has been presented in literature which also uses delays specified by an interval. This model was presented by Merlin in <ref> [20, 21] </ref>. In this model the enabling time of a transition is specified by a minimal and a maximal time. Another difference with our model is the fact that Merlin's model is not a high-level Petri net model because of the absence of typed (coloured) tokens.
Reference: [22] <author> S. Morasca, M. Pezz e, and M. Trubian, </author> <title> Timed High-Level Nets, </title> <journal> The Journal of Real-Time Systems, </journal> <volume> 3 (1991), </volume> <pages> pp. 165-189. </pages>
Reference-contexts: Although there seems to be a consensus of opinion on this matter, only a few timed coloured Petri net models have been proposed in literature (e.g. Van Hee et al. [12, 11], Morasca <ref> [22] </ref>). Moreover, even fewer methods have been developed for the analysis of the temporal behaviour of these nets. This is one of the reasons we propose the Interval Timed Coloured Petri Net (ITCPN) model and an analysis method, called MTSRT, based on this model.
Reference: [23] <author> M.A. Odijk, </author> <title> ITPN analysis of ExSpect specifications with respect to production logistics, </title> <type> Master's thesis, </type> <institution> Eindhoven University of Technology, Eindhoven, </institution> <year> 1991. </year>
Reference-contexts: Moreover, we are able to answer questions which cannot be answered by simulation or the method proposed by Berthomieu et al. [7]. We have modelled and analysed many examples using the approach presented in this paper, see Van der Aalst [3, 2, 1] and Odijk <ref> [23] </ref>. To facilitate the analysis of real-life systems we have developed an analysis tool, called IAT ([3]). This tool also supports more traditional kinds of analysis such as the generation of place and transition invariants.
Reference: [24] <author> C. Ramchandani, </author> <title> Performance Evaluation of Asynchronous Concurrent Systems by Timed Petri Nets, </title> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <address> Cambridge, </address> <year> 1973. </year>
Reference-contexts: These `coloured' Petri nets allow the modeller to make much more succinct and manageable descriptions, therefore they are called high-level nets. Other authors have proposed a Petri net model with explicit quantitative time (e.g. [28], <ref> [24] </ref>, [20], [19], [12], [26]). We call these models timed Petri net models. In our opinion, only timed and coloured Petri nets are suitable for the modelling of large and complex real-time systems. <p> The (firing) delay of a produced token is specified by an upper and lower bound, i.e. an interval. Instead of using `interval timing', we could have used a Petri net model with fixed delays or stochastic delays. Petri nets with fixed (deterministic) delays have been proposed in [28], <ref> [24] </ref>, [26] and [12]. They allow for simple analysis methods but are not very expressive, because in a real system the durations of most activities are variable.
Reference: [25] <author> W. Reisig, </author> <title> Petri nets: an introduction, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, </address> <year> 1985. </year>
Reference-contexts: 1 Introduction Petri nets have been widely used for the modelling and analysis of concurrent systems (Reisig <ref> [25] </ref>). There are several factors which contribute to their success: the graphical nature, the ability to model parallel and distributed processes in a natural manner, the simplicity of the model and the firm mathematical foundation.
Reference: [26] <author> J. Sifakis, </author> <title> Use of Petri Nets for performance evaluation, </title> <booktitle> in Proceedings of the Third International Symposium IFIP W.G. 7.3., Measuring, modelling and evaluating computer systems (Bonn-Bad Godesberg, </booktitle> <year> 1977), </year> <editor> H. Beilner and E. Gelenbe, eds., </editor> <publisher> Elsevier Science Publishers, </publisher> <address> Amsterdam, </address> <year> 1977, </year> <pages> pp. 75-93. </pages>
Reference-contexts: These `coloured' Petri nets allow the modeller to make much more succinct and manageable descriptions, therefore they are called high-level nets. Other authors have proposed a Petri net model with explicit quantitative time (e.g. [28], [24], [20], [19], [12], <ref> [26] </ref>). We call these models timed Petri net models. In our opinion, only timed and coloured Petri nets are suitable for the modelling of large and complex real-time systems. <p> The (firing) delay of a produced token is specified by an upper and lower bound, i.e. an interval. Instead of using `interval timing', we could have used a Petri net model with fixed delays or stochastic delays. Petri nets with fixed (deterministic) delays have been proposed in [28], [24], <ref> [26] </ref> and [12]. They allow for simple analysis methods but are not very expressive, because in a real system the durations of most activities are variable.
Reference: [27] <author> A. Valmari, </author> <title> Stubborn sets for reduced state space generation, </title> <booktitle> in Proceedings of the 10th International Conference on Applications and Theory of Petri Nets, </booktitle> <address> Bonn, </address> <month> June </month> <year> 1989. </year>
Reference-contexts: If we want to inspect the reachability graph by means of a computer, we have to solve this problem. This is the reason several authors developed reduction techniques (Hubner et al. [14] and Valmari <ref> [27] </ref>). Unfortunately, it is not known how to apply these techniques to timed coloured Petri nets. For timed coloured Petri nets with certain types of stochastic delays it is possible to translate the net into a continuous time Markov chain. <p> Obviously such a reachability graph may, even for small nets, become very large (often infinite). Many authors have presented analysis techniques for the efficient calculation of a reachability graph of an untimed coloured Petri net (e.g. <ref> [27] </ref>, [16], [14], [8]). In this section we focus on the reachability graph of an ITCPN. In general the number of reachable states of an ITCPN (given an initial state) is infinite. This is mainly caused by the fact that we use interval timing. Consider an enabled transition. <p> Experimentation shows that, in general, the results obtained using the MTSRT method are quite meaningful. A direction of further research is to incorporate other reduction techniques for coloured Petri nets into our approach (e.g. <ref> [27] </ref>, [16], [14], [8]).
Reference: [28] <author> W.M. Zuberek, </author> <title> Timed Petri Nets and Preliminary Performance Evaluation, </title> <booktitle> in Proceedings of the 7th annual Symposium on Computer Architecture, vol. 8(3) of Quarterly Publication of ACM Special Interest Group on Computer Architecture, </booktitle> <year> 1980, </year> <pages> pp. 62-82. </pages>
Reference-contexts: These `coloured' Petri nets allow the modeller to make much more succinct and manageable descriptions, therefore they are called high-level nets. Other authors have proposed a Petri net model with explicit quantitative time (e.g. <ref> [28] </ref>, [24], [20], [19], [12], [26]). We call these models timed Petri net models. In our opinion, only timed and coloured Petri nets are suitable for the modelling of large and complex real-time systems. <p> The (firing) delay of a produced token is specified by an upper and lower bound, i.e. an interval. Instead of using `interval timing', we could have used a Petri net model with fixed delays or stochastic delays. Petri nets with fixed (deterministic) delays have been proposed in <ref> [28] </ref>, [24], [26] and [12]. They allow for simple analysis methods but are not very expressive, because in a real system the durations of most activities are variable.
References-found: 24

