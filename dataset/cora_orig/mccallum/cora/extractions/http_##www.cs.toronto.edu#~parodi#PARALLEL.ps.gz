URL: http://www.cs.toronto.edu/~parodi/PARALLEL.ps.gz
Refering-URL: http://www.cs.toronto.edu/~parodi/abstract_accv95b.html
Root-URL: 
Title: Parallel Algorithms for the Interpretation of Line Drawings  
Author: N. Dendris P. Parodi flfl 
Address: P.O. Box 1045, Patras 26110 Greece  Via Dodecaneso 33, 16146 Genova Italy  
Affiliation: Department of Computer Engineering and Informatics University of Patras  flfl Dipartimento di Fisica Universita di Genova  
Abstract: This paper describes the design and the analysis of parallel algorithms for the interpretation of planar or perspective projections of scenes constructed by some generating grammar (trihedral scenes, Manhattan world, Origami scenes, Pottery world). The motivation is that parallel techniques are more and more studied in Artificial Intelligence and Computer Vision as parallel machines improve their performances and parallel models have been successfully proposed for biological systems, so that it is possible to attempt a methodological identification between algorithms which are easily paralleliz-able and biologically plausible algorithms. It is found that the labeling problem (Huffman, 1970; Clowes, 1970) is efficiently solvable in parallel when it is polynomially tractable. The realizability problem, which is usually solved by linear programming methods, is hard to parallelize in the general case, while 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D.A.Huffman. </author> <title> Impossible objects as nonsense sentences. </title> <journal> Machine Intelligence, </journal> <volume> 6 </volume> <pages> 295-323, </pages> <year> 1971. </year>
Reference-contexts: Line drawings have been intensively studied since the 70s. The fundamental step for the interpretation of line drawings is thought to be the consistent labeling of its segments as the projection of convex, concave, contour edges. Labeling was introduced by Huffman <ref> [1] </ref> and Clowes [2]), who focused on the case of trihedral scenes. Their results have been extended their results have been extended to line drawings with shadows and cracks (Waltz [3]), line drawings of Origami scenes (Kanade [4]), trihedral scenes with hidden edges (Sugihara [5]), curved line objects (Malik [6]). <p> There are two standard approaches to labeling: the linguistic approach, dating back to Huffman <ref> [1] </ref> and Clowes [2], and the constraint satisfaction approach, dating back to Waltz [3] and Mackworth [17]. 2.1.1 Labeling as Satisfiability of a boolean expression In the linguistic approach, the labeling problem is reduced to the satisfiability problem (SAT) of a boolean proposition in conjunctive normal form (CNF) associated to the
Reference: [2] <author> M.B. Clowes. </author> <title> On seeing things. </title> <journal> Artificial Intelligence, </journal> <volume> 2 </volume> <pages> 79-116, </pages> <year> 1971. </year>
Reference-contexts: Line drawings have been intensively studied since the 70s. The fundamental step for the interpretation of line drawings is thought to be the consistent labeling of its segments as the projection of convex, concave, contour edges. Labeling was introduced by Huffman [1] and Clowes <ref> [2] </ref>), who focused on the case of trihedral scenes. Their results have been extended their results have been extended to line drawings with shadows and cracks (Waltz [3]), line drawings of Origami scenes (Kanade [4]), trihedral scenes with hidden edges (Sugihara [5]), curved line objects (Malik [6]). <p> There are two standard approaches to labeling: the linguistic approach, dating back to Huffman [1] and Clowes <ref> [2] </ref>, and the constraint satisfaction approach, dating back to Waltz [3] and Mackworth [17]. 2.1.1 Labeling as Satisfiability of a boolean expression In the linguistic approach, the labeling problem is reduced to the satisfiability problem (SAT) of a boolean proposition in conjunctive normal form (CNF) associated to the line drawing.
Reference: [3] <author> D. Waltz. </author> <title> Understanding line-drawings of scenes with shadows. </title> <journal> Artificial Intelligence, </journal> <volume> 2 </volume> <pages> 79-116, </pages> <year> 1971. </year>
Reference-contexts: Labeling was introduced by Huffman [1] and Clowes [2]), who focused on the case of trihedral scenes. Their results have been extended their results have been extended to line drawings with shadows and cracks (Waltz <ref> [3] </ref>), line drawings of Origami scenes (Kanade [4]), trihedral scenes with hidden edges (Sugihara [5]), curved line objects (Malik [6]). In Sugihara [7] a polynomial time algorithm was given which checked whether a labeled line drawing representing a polyhedral scene was realizable by reduction to Linear Programming. <p> There are two standard approaches to labeling: the linguistic approach, dating back to Huffman [1] and Clowes [2], and the constraint satisfaction approach, dating back to Waltz <ref> [3] </ref> and Mackworth [17]. 2.1.1 Labeling as Satisfiability of a boolean expression In the linguistic approach, the labeling problem is reduced to the satisfiability problem (SAT) of a boolean proposition in conjunctive normal form (CNF) associated to the line drawing.
Reference: [4] <author> T. Kanade. </author> <title> A theory of Origami world. </title> <journal> Artificial Intelligence, </journal> <volume> 3 </volume> <pages> 43-58, </pages> <year> 1981. </year>
Reference-contexts: Labeling was introduced by Huffman [1] and Clowes [2]), who focused on the case of trihedral scenes. Their results have been extended their results have been extended to line drawings with shadows and cracks (Waltz [3]), line drawings of Origami scenes (Kanade <ref> [4] </ref>), trihedral scenes with hidden edges (Sugihara [5]), curved line objects (Malik [6]). In Sugihara [7] a polynomial time algorithm was given which checked whether a labeled line drawing representing a polyhedral scene was realizable by reduction to Linear Programming.
Reference: [5] <author> K. Sugihara. </author> <title> Picture language for skeletal polyhedra. </title> <journal> Computer Graphics and Image Processing, </journal> <volume> 8 </volume> <pages> 382-405, </pages> <year> 1978. </year> <month> 22 </month>
Reference-contexts: Labeling was introduced by Huffman [1] and Clowes [2]), who focused on the case of trihedral scenes. Their results have been extended their results have been extended to line drawings with shadows and cracks (Waltz [3]), line drawings of Origami scenes (Kanade [4]), trihedral scenes with hidden edges (Sugihara <ref> [5] </ref>), curved line objects (Malik [6]). In Sugihara [7] a polynomial time algorithm was given which checked whether a labeled line drawing representing a polyhedral scene was realizable by reduction to Linear Programming. <p> A line drawing may only record the visible edges of the scene, or it may also contain the information on hidden edges, maybe drawn (as in <ref> [5] </ref>, [14]) differently from visible edges (see Fig. 1D). Finally, the scene is assumed to be in general position: a slight change in the viewpoint does not change the topology of the line drawing. The classical approach to interpreting line drawings is by subdivision into two steps: labeling and realizability. <p> The reduction takes time O (log 2 N ) with O (N 2 = log N ) processors, the most demanding task being the extraction of YE-subgraphs. 3.3 Polyhedral scenes with hidden edges. Consider a scene made of solid, trihedral polyhedra, as in Sugihara <ref> [5] </ref> and Alevizos [14]. Assume that hidden edges are drawn along with visible ones (see Fig. 1B). An edge is called hidden when it lies on material interposed between the edge itself and the projection plane, and not when it is occluded by some other objects. <p> If the two surfaces are on the same side of the segment (whether this is hidden or not) the label is "!" and the arrow leaves the two surfaces on its right side. Sugihara <ref> [5] </ref> gave a complete junction catalog. The labeling algorithm goes as follows. Planar faces can be uniquely recovered by the knowledge of the hidden edges, as shown in Alevizos [14]. A boolean variable ff (f ) is then associated to every planar face f of the line drawing.
Reference: [6] <author> J. Malik. </author> <title> Interpreting line drawings of curved objects. </title> <journal> International Journal of Computer Vision, </journal> <volume> 1 </volume> <pages> 73-103, </pages> <year> 1987. </year>
Reference-contexts: Their results have been extended their results have been extended to line drawings with shadows and cracks (Waltz [3]), line drawings of Origami scenes (Kanade [4]), trihedral scenes with hidden edges (Sugihara [5]), curved line objects (Malik <ref> [6] </ref>). In Sugihara [7] a polynomial time algorithm was given which checked whether a labeled line drawing representing a polyhedral scene was realizable by reduction to Linear Programming. <p> The Pottery world is a world of arbitrarily intersecting or overlaying objects each obtained by rotating an arbitrary polygon around an arbitrary axis. The labeling scheme is the one introduced by Malik <ref> [6] </ref>. In [11], an extensive geometrical analysis of the permissible connections between junctions in legal drawings of the Pottery World proved the existence of "unique label propagation rules" for segments that belong to the same component of the line drawing.
Reference: [7] <author> K. Sugihara. </author> <title> Mathematical structures of line drawings of polyhedrons. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 4(5) </volume> <pages> 458-469, </pages> <year> 1982. </year>
Reference-contexts: Their results have been extended their results have been extended to line drawings with shadows and cracks (Waltz [3]), line drawings of Origami scenes (Kanade [4]), trihedral scenes with hidden edges (Sugihara [5]), curved line objects (Malik [6]). In Sugihara <ref> [7] </ref> a polynomial time algorithm was given which checked whether a labeled line drawing representing a polyhedral scene was realizable by reduction to Linear Programming. <p> However, the realizability problem becomes polynomially solvable if the line drawing is already labeled. The problem can in this case be reduced to an instance of Linear Programming (Sugihara <ref> [7] </ref>). Unfortunately, this does not seem to be a biologically plausible approach to realizability, in 16 that Linear Programming is P-complete (Dobkin et al. [23]) and is therefore unlikely to be efficiently parallelizable. There are, however, some positive results about realizability of a labeled line drawing. <p> As for realizability, the situation is more delicate. The usual approach to real-izability is by reduction to Linear Programming (Sugihara <ref> [7] </ref>), but this is not a biologically plausible approach since Linear Programming is P-complete (Dobkin et al. [23]). On the positive side, when the location of vanishing 19 points is given, the problem becomes efficiently parallelizable and its solution is the intuitive one in terms of the ordering of surfaces.
Reference: [8] <author> J. K. Tsotsos. </author> <title> A complexity level analysis of vision. </title> <journal> Behav. Brain Sci., </journal> <volume> 13(3) </volume> <pages> 423-455, </pages> <year> 1990. </year>
Reference-contexts: Any algorithm designed for interpreting line drawings must be confronted with the efficiency of the brain. On account of this, complexity analysis has acquired a growing importance in the design of biologically plausible algorithms (see Tsotsos <ref> [8] </ref> for a general discussion), and a number of results have been obtained on the classification of visual problems as tractable (that is, polynomially solvable) and intractable (that is, N P-complete if not provably nonpolynomial).
Reference: [9] <author> L.M.Kirousis and C.H.Papadimitriou. </author> <title> The complexity of recognizing polyhedral scenes. </title> <journal> Journal of Computer and System Sciences, </journal> (37):14-38, 1988. 
Reference-contexts: Examples of the use of this methodology can be found in <ref> [9] </ref>, [10], [11], [12], [13]. A number of results on the complexity of understanding line drawings has been obtained in the past. Kirousis & Papadimitriou [9] showed that the labelability and the realizability problems are both N P -complete. <p> Examples of the use of this methodology can be found in <ref> [9] </ref>, [10], [11], [12], [13]. A number of results on the complexity of understanding line drawings has been obtained in the past. Kirousis & Papadimitriou [9] showed that the labelability and the realizability problems are both N P -complete. They also gave a linear time algorithm for labeling planar projections of Manhattan scenes (in these, all edges in the scene are oriented according to one of three orthogonal directions). <p> As in the sequential case, the geometrical regularities play a fundamental role in biological plausibility. Some algorithms presented in this paper had already been parallelized in the past (Manhattan world <ref> [9] </ref>, trihedral scenes with a connecting segment for each Y-junction [10], Pottery world [11]), other algorithms were not (trihedral scenes with vanishing points, Origami scenes, trihedral scenes with hidden edges, general polyhedral scenes with hidden edges and vanishing points, realizability problem with the information on vanishing points. 4 2 Labeling line <p> The line drawing has N segments. Since all junctions must have degree two or three, the number of junctions is O (N ). Under these hypotheses, the labeling problem was found to be N P -complete by Kirousis & Papadimitriou <ref> [9] </ref>. 8 Here it is also assumed that a set of n vanishing points is given, whose location in the image plane is known. <p> See [11] for a detailed reduction to ICSP. 4 The realizability problem The realizability problem is, in general, N P-complete (see Kirousis & Pa-padimitriou <ref> [9] </ref>, who showed that this is true even in the simple case of trihedral scenes). However, the realizability problem becomes polynomially solvable if the line drawing is already labeled. The problem can in this case be reduced to an instance of Linear Programming (Sugihara [7]). <p> Unfortunately, this does not seem to be a biologically plausible approach to realizability, in 16 that Linear Programming is P-complete (Dobkin et al. [23]) and is therefore unlikely to be efficiently parallelizable. There are, however, some positive results about realizability of a labeled line drawing. Kirousis & Papadimitriou <ref> [9] </ref> showed that the realizability problem for (labeled) planar projections of Manhattan scenes can be solved in time O (log 2 N ) with O (M (N )) processors. <p> This approach has been extended to perspective projection of arbitrary polyhedral (and Origami) scenes under the assumption that the location of vanishing points (Parodi & Piccioli [24]) is given, with the same time requirements. The approach used in <ref> [9] </ref>, [24] can be outlined as follows: 1. Extracting the spatial structure. Once a labeled line drawing is given, it is possible to extract the so-called 3D spatial structure (see Sugihara [25]), which gives a description of the 3D qualitative structure of the scene depicted by the line drawing.
Reference: [10] <author> L.M.Kirousis. </author> <title> Effectively labeling planar projections of polyhedra. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 12(2) </volume> <pages> 123-130, </pages> <year> 1990. </year>
Reference-contexts: Examples of the use of this methodology can be found in [9], <ref> [10] </ref>, [11], [12], [13]. A number of results on the complexity of understanding line drawings has been obtained in the past. Kirousis & Papadimitriou [9] showed that the labelability and the realizability problems are both N P -complete. <p> Kirousis & Papadimitriou [9] showed that the labelability and the realizability problems are both N P -complete. They also gave a linear time algorithm for labeling planar projections of Manhattan scenes (in these, all edges in the scene are oriented according to one of three orthogonal directions). Kirousis <ref> [10] </ref> gave a linear time algorithm that labels line drawings of trihedral scenes, under the hypothesis that for all Y-junctions we know at least one segment which is not the projection of an occluding edge. <p> As in the sequential case, the geometrical regularities play a fundamental role in biological plausibility. Some algorithms presented in this paper had already been parallelized in the past (Manhattan world [9], trihedral scenes with a connecting segment for each Y-junction <ref> [10] </ref>, Pottery world [11]), other algorithms were not (trihedral scenes with vanishing points, Origami scenes, trihedral scenes with hidden edges, general polyhedral scenes with hidden edges and vanishing points, realizability problem with the information on vanishing points. 4 2 Labeling line drawings A line drawing L (see Fig. 1) is a <p> Such segments are marked "fl" in the subgraph of Fig. 3. In the following we give the reduction to 2-SAT (see Kirousis <ref> [10] </ref> for the reduction to ICSP). Certain constraints additional to the ones by Huffman and Clowes which the labeling of the line drawing must satisfy in order to be realizable are given. <p> YE-subgraphs can be extracted in time O (log 2 N ) with O (N 2 = log N ) processors (as for L-chains, see Section 3.1). The labeling of L-chains and YE-subgraphs must satisfy several geometrical constraints which are very useful for the labeling process (see Kirousis <ref> [10] </ref>).
Reference: [11] <author> N. Dendris, I.A.Kalafatis, and L. M. Kirousis. </author> <title> Labeling images of the Pottery world. </title> <editor> In T.Ibaraki, Y. Inagaki, K. Iwama, T. Nishizeki, and M. Yamashita, editors, </editor> <booktitle> Algorithms and Computation: Third International Symposium, ISAAC '92, </booktitle> <pages> pages 198-208. </pages> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1992. </year>
Reference-contexts: Examples of the use of this methodology can be found in [9], [10], <ref> [11] </ref>, [12], [13]. A number of results on the complexity of understanding line drawings has been obtained in the past. Kirousis & Papadimitriou [9] showed that the labelability and the realizability problems are both N P -complete. <p> Also, Alevizos [14] gave a linear time algorithm that labels line drawings of trihedral scenes using the information provided by hidden edges. Dendris et al, <ref> [11] </ref> described a linear time labeling algorithm for line drawings of scenes made up of curved objects, derived by revolution of line segments around arbitrary axes. <p> As in the sequential case, the geometrical regularities play a fundamental role in biological plausibility. Some algorithms presented in this paper had already been parallelized in the past (Manhattan world [9], trihedral scenes with a connecting segment for each Y-junction [10], Pottery world <ref> [11] </ref>), other algorithms were not (trihedral scenes with vanishing points, Origami scenes, trihedral scenes with hidden edges, general polyhedral scenes with hidden edges and vanishing points, realizability problem with the information on vanishing points. 4 2 Labeling line drawings A line drawing L (see Fig. 1) is a graph which is <p> As for the labeling step (after the line drawing is paneled) the reduction is straightforward: O (1) time with O (N ) processors. 3.5 Pottery world. In Dendris et al. <ref> [11] </ref>, a fast parallel algorithm for labeling line drawings of scenes from the Pottery world was given. The Pottery world is a world of arbitrarily intersecting or overlaying objects each obtained by rotating an arbitrary polygon around an arbitrary axis. The labeling scheme is the one introduced by Malik [6]. <p> The Pottery world is a world of arbitrarily intersecting or overlaying objects each obtained by rotating an arbitrary polygon around an arbitrary axis. The labeling scheme is the one introduced by Malik [6]. In <ref> [11] </ref>, an extensive geometrical analysis of the permissible connections between junctions in legal drawings of the Pottery World proved the existence of "unique label propagation rules" for segments that belong to the same component of the line drawing. <p> This can be done in parallel constant time, using O (N ) processors. Hence, the reduction takes time O (log 2 N ) with O (N 2 = log N ) processors, the most demanding task being, as in Section 3.2, the extraction of E- and Y-subgraphs. See <ref> [11] </ref> for a detailed reduction to ICSP. 4 The realizability problem The realizability problem is, in general, N P-complete (see Kirousis & Pa-padimitriou [9], who showed that this is true even in the simple case of trihedral scenes).
Reference: [12] <author> P. Parodi and V. Torre. </author> <title> A linear complexity procedure for labeling perspective projections of polyhedra. </title> <booktitle> In Fourth Int. Conf. Comp. Vision, </booktitle> <volume> ICCV '93, </volume> <pages> pages 291-295, </pages> <address> Berlin, </address> <year> 1993. </year>
Reference-contexts: Examples of the use of this methodology can be found in [9], [10], [11], <ref> [12] </ref>, [13]. A number of results on the complexity of understanding line drawings has been obtained in the past. Kirousis & Papadimitriou [9] showed that the labelability and the realizability problems are both N P -complete. <p> Dendris et al, [11] described a linear time labeling algorithm for line drawings of scenes made up of curved objects, derived by revolution of line segments around arbitrary axes. Parodi & Torre <ref> [12] </ref> gave a polynomial time algorithm to label perspective projections of trihedral scenes once the location of vanishing points in the image plane is given. Parodi [13] analyzed the complexity of labeling Origami scenes.
Reference: [13] <author> P. Parodi. </author> <title> Labeling perspective projections of origami scenes. </title> <booktitle> In Asian Conf. of Comp. Vision, </booktitle> <address> ACCV '93, Osaka, Japan, </address> <year> 1993. </year>
Reference-contexts: Examples of the use of this methodology can be found in [9], [10], [11], [12], <ref> [13] </ref>. A number of results on the complexity of understanding line drawings has been obtained in the past. Kirousis & Papadimitriou [9] showed that the labelability and the realizability problems are both N P -complete. <p> Parodi & Torre [12] gave a polynomial time algorithm to label perspective projections of trihedral scenes once the location of vanishing points in the image plane is given. Parodi <ref> [13] </ref> analyzed the complexity of labeling Origami scenes. <p> Such world is called minimal Origami world (see <ref> [13] </ref>). It can be shown that the labeling problem for line drawings of Origami scenes is N P-complete, and it remains N P-complete even if the location of the vanishing points in the image plane is known (see Parodi [13]). <p> Such world is called minimal Origami world (see <ref> [13] </ref>). It can be shown that the labeling problem for line drawings of Origami scenes is N P-complete, and it remains N P-complete even if the location of the vanishing points in the image plane is known (see Parodi [13]). <p> The details of the algorithm are shown in <ref> [13] </ref>. The most demanding task in the paneling step is the extraction of walks, that is the chains of segments which are projection of coplanar edges. This can be carried out in time O (log N ) with O (N ) processors.
Reference: [14] <author> P.Alevizos. </author> <title> A linear algorithm for labeling planar projections of polyhedra. </title> <booktitle> Proc. IEEE/RSJ Int. Workshop on Intelligent Robots and Systems (Osaka, </booktitle> <address> Japan, </address> <year> 1991), </year> <pages> pages 595-601, </pages> <year> 1991. </year>
Reference-contexts: Kirousis [10] gave a linear time algorithm that labels line drawings of trihedral scenes, under the hypothesis that for all Y-junctions we know at least one segment which is not the projection of an occluding edge. Also, Alevizos <ref> [14] </ref> gave a linear time algorithm that labels line drawings of trihedral scenes using the information provided by hidden edges. Dendris et al, [11] described a linear time labeling algorithm for line drawings of scenes made up of curved objects, derived by revolution of line segments around arbitrary axes. <p> A line drawing may only record the visible edges of the scene, or it may also contain the information on hidden edges, maybe drawn (as in [5], <ref> [14] </ref>) differently from visible edges (see Fig. 1D). Finally, the scene is assumed to be in general position: a slight change in the viewpoint does not change the topology of the line drawing. The classical approach to interpreting line drawings is by subdivision into two steps: labeling and realizability. <p> The reduction takes time O (log 2 N ) with O (N 2 = log N ) processors, the most demanding task being the extraction of YE-subgraphs. 3.3 Polyhedral scenes with hidden edges. Consider a scene made of solid, trihedral polyhedra, as in Sugihara [5] and Alevizos <ref> [14] </ref>. Assume that hidden edges are drawn along with visible ones (see Fig. 1B). An edge is called hidden when it lies on material interposed between the edge itself and the projection plane, and not when it is occluded by some other objects. <p> Sugihara [5] gave a complete junction catalog. The labeling algorithm goes as follows. Planar faces can be uniquely recovered by the knowledge of the hidden edges, as shown in Alevizos <ref> [14] </ref>. A boolean variable ff (f ) is then associated to every planar face f of the line drawing. According to the value of ff (f ) it is possible to determine whether f is filled inside or outside.
Reference: [15] <author> J. Feldman and D. Ballard. </author> <title> Connectionist models and their properties. </title> <journal> Cognitive Science, </journal> <volume> 6 </volume> <pages> 205-254, </pages> <year> 1982. </year>
Reference-contexts: It is a general conviction that biological systems exploit a massive parallelism (see for example Feldman & Ballard <ref> [15] </ref>) , so that it is important to ask whether a given algorithm which solves a visual problem is parallelizable. We will exploit the theory of parallel complexity, and as a first approximation we will use the PRAM (Parallel Random Access Memory) as the model of computation (see Section A).
Reference: [16] <author> J. JaJa. </author> <title> An Introduction to Parallel Algorithms. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1992. </year> <month> 23 </month>
Reference-contexts: The use of the PRAM model need not be biologically realistic, but it is a powerful model for several reasons (see Jaja <ref> [16] </ref>): (i) the PRAM model removes algorithmic details concerning synchronization and communication, and therefore allows the algorithm designer to focus on structural properties of the problem; (ii) the PRAM model captures several important parameters of parallel computation; (iii) many algorithms for more realistic models can be easily derived from PRAM algorithms; <p> This research was partially supported by Progetto Finalizzato Robotica (CNR), Progetto Finalizzato Trasporti (CNR), Agenzia Spaziale Italiana, Esprit Basic Research Action (Insight-2), Esprit 6961 Smart Sensory Systems. A Parallel complexity and techniques The elementary notions of parallel computation which are recalled here are derived from Jaja <ref> [16] </ref> and Karp & Ramachandran [26]. The model of computation used in this paper is the PRAM (Parallel Random Access Machine).
Reference: [17] <author> A. K. Mackworth. </author> <title> Consistency in networks of relations. </title> <journal> Artificial Intel--ligence, </journal> <volume> 8 </volume> <pages> 99-118, </pages> <year> 1977. </year>
Reference-contexts: There are two standard approaches to labeling: the linguistic approach, dating back to Huffman [1] and Clowes [2], and the constraint satisfaction approach, dating back to Waltz [3] and Mackworth <ref> [17] </ref>. 2.1.1 Labeling as Satisfiability of a boolean expression In the linguistic approach, the labeling problem is reduced to the satisfiability problem (SAT) of a boolean proposition in conjunctive normal form (CNF) associated to the line drawing.
Reference: [18] <author> R. M. Karp and A. Wigderson. </author> <title> A fast parallel algorithm for the maximal independent set problem. </title> <journal> J. Association of Computing Machinery, </journal> <volume> 32 </volume> <pages> 762-773, </pages> <year> 1985. </year>
Reference-contexts: cases, however, it is possible to reduce the labeling problem to 2-SAT (the satisfiability problem for a boolean proposition in conjunctive normal form with no more than two literals per clause). 2-SAT is known to be polynomially solvable, and also to be efficiently solvable in parallel (see Karp & Wigderson <ref> [18] </ref>).
Reference: [19] <author> S. A. Cook and M. Luby. </author> <title> A simple parallel algorithm for finding a satisfying truth assignment to a 2-CNF formula. </title> <journal> Information Processing Letters, </journal> (27):141-145, 1988. 
Reference-contexts: The least upper bound so far obtained is O (log 2 N ) with O (N 4 ) processors (see Cook & Luby <ref> [19] </ref>) (N is the number of variables) on the EREW-PRAM model (see Section A). 2.1.2 Labeling as Constraint Satisfaction In the constraint satisfaction approach, the labeling problem is seen as a special case of the problem of assigning values to a given set of variables, so that the assigned values satisfy
Reference: [20] <author> A. K. Mackworth and E. C. Freuder. </author> <title> The complexity of constraint satisfaction revisited. </title> <journal> Artificial Intelligence, </journal> <volume> 59 </volume> <pages> 57-92, </pages> <year> 1993. </year>
Reference-contexts: Arc Consistency can be carried out in time proportional to the number of constraints (see Mackworth & Freuder <ref> [20] </ref> for a perspective on the work in the area). k-Consistency (consistency of sets of k + 1 variables) can be achieved in time O (n k ) where n is the number of constraints.
Reference: [21] <author> S. Kasif. </author> <title> On the parallel complexity of discrete relaxation in constraint satisfaction networks. </title> <journal> Artificial Intelligence, </journal> (45):275-286, 1990. 
Reference-contexts: Unfortunately, relaxation algorithms are inherently sequential: Kasif <ref> [21] </ref> has proved that Arc Consistency and, more in general, k-Consistency, is P-complete. <p> In all of these examples, some geometrical constraints are available that reduce the number of possible interpretations of the line drawing. It is interesting to notice that some well-known relaxation techniques for labeling (as Arc Consistency) are inherently sequential (Kasif <ref> [21] </ref>) and so they do not represent biologically plausible solutions to the problem; they become efficiently parallelizable when the constraints are of the implicational type (Kirousis [22]). As for realizability, the situation is more delicate.
Reference: [22] <author> L.M.Kirousis. </author> <title> Fast parallel constraint satisfaction. </title> <journal> Artificial Intelligence, </journal> <volume> 64 </volume> <pages> 147-160, </pages> <year> 1993. </year>
Reference-contexts: Unfortunately, relaxation algorithms are inherently sequential: Kasif [21] has proved that Arc Consistency and, more in general, k-Consistency, is P-complete. On the positive side, it has been shown by Kirousis <ref> [22] </ref> that if the constraints in the network are all of the implicational type (a constraint relation R is called implicational if for any two variables X i and X j constrained by R and any value a i from the domain of X i , either a i and R <p> It is interesting to notice that some well-known relaxation techniques for labeling (as Arc Consistency) are inherently sequential (Kasif [21]) and so they do not represent biologically plausible solutions to the problem; they become efficiently parallelizable when the constraints are of the implicational type (Kirousis <ref> [22] </ref>). As for realizability, the situation is more delicate. The usual approach to real-izability is by reduction to Linear Programming (Sugihara [7]), but this is not a biologically plausible approach since Linear Programming is P-complete (Dobkin et al. [23]).
Reference: [23] <author> D. Dobkin, R. J. Lipton, and S. Reiss. </author> <title> Linear programming is log-space hard for p. </title> <journal> Inf. Process. Lett., </journal> (9):96-97, 1979. 
Reference-contexts: The problem can in this case be reduced to an instance of Linear Programming (Sugihara [7]). Unfortunately, this does not seem to be a biologically plausible approach to realizability, in 16 that Linear Programming is P-complete (Dobkin et al. <ref> [23] </ref>) and is therefore unlikely to be efficiently parallelizable. There are, however, some positive results about realizability of a labeled line drawing. <p> As for realizability, the situation is more delicate. The usual approach to real-izability is by reduction to Linear Programming (Sugihara [7]), but this is not a biologically plausible approach since Linear Programming is P-complete (Dobkin et al. <ref> [23] </ref>). On the positive side, when the location of vanishing 19 points is given, the problem becomes efficiently parallelizable and its solution is the intuitive one in terms of the ordering of surfaces.
Reference: [24] <author> P.Parodi and G.Piccioli. </author> <title> 3d reconstruction of a scene from a line drawing by using vanishing points. </title> <note> 1994. submitted. </note>
Reference-contexts: This approach has been extended to perspective projection of arbitrary polyhedral (and Origami) scenes under the assumption that the location of vanishing points (Parodi & Piccioli <ref> [24] </ref>) is given, with the same time requirements. The approach used in [9], [24] can be outlined as follows: 1. Extracting the spatial structure. <p> This approach has been extended to perspective projection of arbitrary polyhedral (and Origami) scenes under the assumption that the location of vanishing points (Parodi & Piccioli <ref> [24] </ref>) is given, with the same time requirements. The approach used in [9], [24] can be outlined as follows: 1. Extracting the spatial structure. Once a labeled line drawing is given, it is possible to extract the so-called 3D spatial structure (see Sugihara [25]), which gives a description of the 3D qualitative structure of the scene depicted by the line drawing.
Reference: [25] <author> K. Sugihara. </author> <title> An algebraic approach to shape-from-image problems. </title> <journal> Artificial Intelligence, </journal> (23):59-95, 1984. 
Reference-contexts: The approach used in [9], [24] can be outlined as follows: 1. Extracting the spatial structure. Once a labeled line drawing is given, it is possible to extract the so-called 3D spatial structure (see Sugihara <ref> [25] </ref>), which gives a description of the 3D qualitative structure of the scene depicted by the line drawing. Intuitively speaking, the 3D spatial structure is the set of the geometrical elements (vertices and faces suffice) of the scene, along with the geometrical relations among these elements.
Reference: [26] <author> R. M. Karp and V. Ramachandran. </author> <title> Parallel algorithms for shared-memory machines. </title> <editor> In J. Van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science: Algorithms and Complexity, chapter 17, </booktitle> <pages> pages 869-942. </pages> <publisher> Elsevier, </publisher> <year> 1990. </year>
Reference-contexts: (it is a bipartite graph whose nodes are the vertices and faces of the scene and there is an arc between vertex v and face f every time v lies on f ; see Fig. 4), which takes O (log 2 N ) steps with O (N ) processors (see <ref> [26] </ref>). 17 3. Implementing the incidence relations. By using the information on vanishing points, the shape of each component can be reconstructed in a unique way, in that the orientation of all planar surfaces is fixed. <p> If some inconsistencies arise during the propagation, the line drawing is discarded as impossible (with that labeling). Exploration of the graph can be performed in time O (log 2 N ) with O (M (N )) processors (see <ref> [26] </ref>). 4. Implementing the occlusion relations. The occlusion relations among geometrical elements belonging to the same component are independent of the scaling factors and can therefore be trivially checked in time O (1) with O (N ) processors. <p> A Parallel complexity and techniques The elementary notions of parallel computation which are recalled here are derived from Jaja [16] and Karp & Ramachandran <ref> [26] </ref>. The model of computation used in this paper is the PRAM (Parallel Random Access Machine).

References-found: 26

