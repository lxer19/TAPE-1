URL: ftp://ftp.cs.colorado.edu/users/alw/papers/icse16.ps.Z
Refering-URL: http://www.cs.colorado.edu/~arcadia/Papers/analysis/cu_analysis_papers.html
Root-URL: http://www.cs.colorado.edu
Email: fprem,dsrg@research.att.com alw@cs.colorado.edu  
Title: Automated Construction of Testing and Analysis Tools Research Paper  
Author: Premkumar T. Devanbu David S. Rosenblum Alexander L. Wolf 
Date: May 16-21, 1994  
Address: Sorrento, Italy,  Murray Hill, NJ 07974 USA Boulder, CO 80309 USA  
Affiliation: Engineering,  Software and Systems Research Laboratory Department of Computer Science AT&T Bell Laboratories University of Colorado  
Note: From the Proceedings of the 16th International Conference on Software  
Abstract: Many software testing and analysis tools manipulate graph representations of programs, such as abstract syntax trees or abstract semantics graphs. Hand-crafting such tools in conventional programming languages can be difficult, error prone, and time consuming. Our approach is to use application generators targeted for the domain of graph-representation-based testing and analysis tools. Moreover, we generate the generators themselves, so that the development of tools based on different languages and/or representations can also be supported better. In this paper we report on our experiences in developing a system called Aria that generates testing and analysis tools based on an abstract semantics graph representation for C and C ++ called Reprise. Aria itself was generated by the Genoa system. We demonstrate the utility of Aria and, thereby, the power of our approach, by showing Aria's use in the development of a tool that derives control dependence graphs directly from Reprise abstract semantics graphs. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R.A. Ballance, S.L. Graham, and M.L. Van De Van-ter. </author> <title> The Pan Language-Based Editing System For Integrated Development Environments. </title> <booktitle> In SIGSOFT '90: Proceedings of the Fourth Symposium on Software Development Environments, </booktitle> <pages> pages 77-93. </pages> <booktitle> ACM SIGSOFT, </booktitle> <month> December </month> <year> 1990. </year>
Reference: [2] <author> P. Borras, D. Clement, T. Despeyroux, J. Incerpi, G. Kahn, B. Lang, and V. Pascual. </author> <title> Centaur: The System. </title> <booktitle> In SIGSOFT '88: Proceedings of the Third Symposium on Software Development Environments, </booktitle> <pages> pages 14-24. </pages> <booktitle> ACM SIGSOFT, </booktitle> <month> November </month> <year> 1988. </year>
Reference: [3] <author> P.T. Devanbu. </author> <title> GENOA|A Customizable, Language- and Front-end-independent Code Analyzer. </title> <booktitle> In Proceedings of the 14th International Conference on Software Engineering, </booktitle> <pages> pages 307-317. </pages> <publisher> IEEE Computer Society, </publisher> <month> May </month> <year> 1992. </year>
Reference: [4] <author> J. Ferrante, K.J. Ottenstein, and J.D. Warren. </author> <title> The Program Dependence Graph and its Use in Optimization. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 9(3) </volume> <pages> 319-349, </pages> <month> October </month> <year> 1987. </year>
Reference: [5] <author> R.W. Gray, V.P. Heuring, S.P. Levi, A.M. Sloane, and W.M. Waite. Eli: </author> <title> A Complete, Flexible Compiler Construction System. </title> <journal> Communications of the ACM, </journal> <volume> 35(2) </volume> <pages> 121-131, </pages> <month> February </month> <year> 1992. </year>
Reference: [6] <author> N. Habermann and D. Notkin. </author> <title> Gandalf: Software Development Environments. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> SE-12(12):1117-1127, </volume> <month> Decem-ber </month> <year> 1986. </year>
Reference: [7] <author> M.J. Harrold, B. Malloy, and G. Rothermel. </author> <title> Efficient Construction of Program Dependence Graphs. </title> <booktitle> In Proceedings of the 1993 International Symposium on Software Testing and Analysis (ISSTA), </booktitle> <pages> pages 160-170. </pages> <booktitle> ACM SIGSOFT, </booktitle> <month> June </month> <year> 1993. </year>
Reference: [8] <author> A. Podgurski and L.A. Clarke. </author> <title> A Formal Model of Program Dependencies and its Implications for Software Testing, Debugging, and Maintenance. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 16(9) </volume> <pages> 965-979, </pages> <month> September </month> <year> 1990. </year>
Reference: [9] <institution> The Reasoning Systems Corporation, Palo Alto, Cal-ifornia. </institution> <note> Refine Users Manual. </note>
Reference: [10] <author> T. Reps and T. Teitelbaum. </author> <title> The Synthesizer Generator. </title> <booktitle> In Proceedings of the ACM SIGSOFT/SIGPLAN Software Engineering Symposium on Practical Software Development Environments, </booktitle> <pages> pages 42-48. </pages> <booktitle> ACM SIGSOFT, </booktitle> <month> April </month> <year> 1984. </year>
Reference: [11] <author> D.J. Richardson, </author> <title> T.O. O'Malley, C.T. Moore, and S.L. Aha. Developing and Integrating ProDAG in the Arcadia Environment. </title> <booktitle> In SIGSOFT '92: Proceedings of the Fifth Symposium on Software Development Environments, </booktitle> <pages> pages 109-119. </pages> <booktitle> ACM SIGSOFT, </booktitle> <month> Decem-ber </month> <year> 1992. </year>
Reference: [12] <author> D.S. Rosenblum and A.L. Wolf. </author> <title> Representing Semantically Analyzed C++ Code with Reprise. </title> <booktitle> In Proceedings of the Third C++ Technical Conference, </booktitle> <pages> pages 119-134. </pages> <publisher> USENIX Association, </publisher> <month> April </month> <year> 1991. </year> <month> 250 </month>
References-found: 12

