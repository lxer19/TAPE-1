URL: http://www.cs.nyu.edu/kedem/pubs/hpc96.ps
Refering-URL: http://www.cs.nyu.edu/kedem/pubs.html
Root-URL: http://www.cs.nyu.edu
Email: email: chu@cs.nyu.edu, kedem@cs.nyu.edu  
Title: Techniques for Improving the Performance of Multiple Writer Memory Protocols in Distributed Shared Memory Systems
Author: Churngwei Chu Zvi M. Kedem 
Keyword: Distributed processors.  
Address: New York University New York, NY 10012-1185  
Affiliation: Department of Computer Science  
Abstract: Distributed shared memory systems are an important tool for developing and executing parallel computations on networks of workstations. However, their performance strongly depends on the efficient implementation of concurrent access to the shared data. We propose several techniques with the potential of improving the performance of important basic protocols utilized in the existing distributed shared memory systems. 
Abstract-found: 1
Intro-found: 1
Reference: [BDG + 91] <author> A. Beguelin, J. Dongarra, G. Geist, R. Manchek, and V. Sunderam.1991. </author> <title> "A user's guide to PVM: Parallel virtual machine." </title> <type> Technical Report TM-11826, </type> <institution> Oak Ridge National Laboratory. </institution>
Reference-contexts: Two of these approaches are currently most viable for providing the software environment to enable the utilization of networked workstations for parallel computation. One is based on the message passing model, embodied in, e.g. PVM and MPI <ref> [BDG + 91, GLS94] </ref>. Although this approach is the most popular now, it fl This research was partially supported by the National Science Foundation under grant numbers CCR-94-21935 and CCR-94-11590. is rather low level and makes programming very difficult.
Reference: [BZS93] <author> B. Bershad, M. Zekauskas, and W. Saw-don.1993. </author> <title> "The Midway distributed shared memory system." </title> <type> Technical Re Page 5 port CMU-CS-93-119, </type> <institution> Carnegie-Mellon University. </institution>
Reference-contexts: The interest and the potential of DSM-based systems is evidenced by the vigorous program of research and by several prototypes that have been developed in recent years, including Midway, Munin, TreadMarks, Quarks <ref> [BZS93, CBZ95, KCDZ94, CKK95] </ref>. DSM systems, however, have not yet reached the maturity of the message passing system. In fact, we have identified bottlenecks in the performance of DSM systems and have proposed techniques for removing them.
Reference: [Car93] <author> J. B. Carter.1993. </author> <title> "Efficient Distributed Shared Memory Based on Multi-Protocol Release Consistency." </title> <type> PhD thesis, </type> <institution> Rice University. </institution>
Reference-contexts: This protocol allows more than one workstation to write to the same page at the same time. However the page does not shuttle among the workstations. Instead of passing a copy of the page nondeterministicly among workstations, each workstation collects its updates (technically in the forms of "diffs") <ref> [Car93, ZSB94] </ref> from a written page and then propagates them to other workstations. This is an effective way of improving performance in many cases. We will show that this approach has a downside and has to be used with caution.
Reference: [CBZ95] <author> J. B. Carter, J. K. Bennett, and W. Zwaenepoel.1995. </author> <title> "Techniques for reducing consistency-related communication in distributed shared memory systems." </title> <journal> ACM Transactions on Computer Systems,13,no.3(Aug.):205-243. </journal>
Reference-contexts: The interest and the potential of DSM-based systems is evidenced by the vigorous program of research and by several prototypes that have been developed in recent years, including Midway, Munin, TreadMarks, Quarks <ref> [BZS93, CBZ95, KCDZ94, CKK95] </ref>. DSM systems, however, have not yet reached the maturity of the message passing system. In fact, we have identified bottlenecks in the performance of DSM systems and have proposed techniques for removing them. <p> A protocol behaving as described above, is generally referred to as a single-writer protocol. One of the ways to reduce such shuttling was to employ a multiple-writer protocol in conjunction with a specific memory consistency model <ref> [CBZ95, KCDZ94] </ref>. This protocol allows more than one workstation to write to the same page at the same time. However the page does not shuttle among the workstations. <p> Each will respond by sending the single entry of array S it wrote. For eager update protocol <ref> [CBZ95] </ref>, each writer aggressively propogates updates to threads currently holding S. So each thread needs to send the single entry of S, which wrote, to all other n 1 threads.
Reference: [CKK95] <author> J.B. Carter, D. Khandekar, and L. Kamb.1995. </author> <title> "Distributed shared memory: Where we are and where we should be headed." </title> <booktitle> In Proceedings of the Fifth Workshop on Hot Topics in Operating Systems, </booktitle> <pages> 119-122. </pages>
Reference-contexts: The interest and the potential of DSM-based systems is evidenced by the vigorous program of research and by several prototypes that have been developed in recent years, including Midway, Munin, TreadMarks, Quarks <ref> [BZS93, CBZ95, KCDZ94, CKK95] </ref>. DSM systems, however, have not yet reached the maturity of the message passing system. In fact, we have identified bottlenecks in the performance of DSM systems and have proposed techniques for removing them.
Reference: [GLS94] <author> W. Gropp, E. Lusk, and A. Skjellum. </author> <year> 1994. </year> <title> USING MPI:Portable Parallel Programming with the Mesage-Passing Interface. </title> <publisher> The MIT Press. </publisher>
Reference-contexts: Two of these approaches are currently most viable for providing the software environment to enable the utilization of networked workstations for parallel computation. One is based on the message passing model, embodied in, e.g. PVM and MPI <ref> [BDG + 91, GLS94] </ref>. Although this approach is the most popular now, it fl This research was partially supported by the National Science Foundation under grant numbers CCR-94-21935 and CCR-94-11590. is rather low level and makes programming very difficult.
Reference: [KCDZ94] <author> P. Keleher, A. L. Cox, S. Dwarkadas, and W. Zwaenepoel.1994. "Treadmarks: </author> <title> Distributed shared memory on standard workstations and operating systems." </title> <booktitle> In The 1994 Winter USENIX Conference. </booktitle>
Reference-contexts: The interest and the potential of DSM-based systems is evidenced by the vigorous program of research and by several prototypes that have been developed in recent years, including Midway, Munin, TreadMarks, Quarks <ref> [BZS93, CBZ95, KCDZ94, CKK95] </ref>. DSM systems, however, have not yet reached the maturity of the message passing system. In fact, we have identified bottlenecks in the performance of DSM systems and have proposed techniques for removing them. <p> A protocol behaving as described above, is generally referred to as a single-writer protocol. One of the ways to reduce such shuttling was to employ a multiple-writer protocol in conjunction with a specific memory consistency model <ref> [CBZ95, KCDZ94] </ref>. This protocol allows more than one workstation to write to the same page at the same time. However the page does not shuttle among the workstations. <p> As is currently generally done, this will require n (n 1) messages. In the underlying implementation of lazy invalidate protocol <ref> [KCDZ94] </ref>, each thread k will in effect contact each Page 2 of the threads 0, 1, : : : , k 1, k + 1, : : : , and n 1. Each will respond by sending the single entry of array S it wrote. <p> For a single-owner protocol, employing release consistency, each thread has to send out the updates on subarray to page owners, even though the major part of the subarray is only read by itself. For a multiple-owner protocol <ref> [KCDZ94] </ref>, modifications are kept locally until acquiring threads send requesting messages. Thus, no messages are passed until any thread gets the indexes of a subarray from the queue.
Reference: [WOT + 95] <author> S. C. Woo, M. Ohara, E. Torrie, J. Singh, and A. Gupta.1995. </author> <title> "The SPLASH-2 programs:characterization and methodological considerations." </title> <booktitle> In Proceedings of 22nd Annual International Symposium on Computer Architecture, </booktitle> <pages> 24-36. </pages>
Reference-contexts: At the end of the computation, the new value of the global vector is defined by: A := P i A i . This is an abstraction of a computation that appears, for instance in SPLASH-2 application suite <ref> [WOT + 95] </ref>. When N is much larger than M , the standard way of performing the computation proceeds as follows.
Reference: [ZSB94] <author> M. Zekauskas, W. Sawdon, and B. Ber-shad.1994. </author> <title> "Software write detection for a distributed shared memory." </title> <booktitle> In Proceedings of USENIX, </booktitle> <pages> 87-100. Page 6 </pages>
Reference-contexts: This protocol allows more than one workstation to write to the same page at the same time. However the page does not shuttle among the workstations. Instead of passing a copy of the page nondeterministicly among workstations, each workstation collects its updates (technically in the forms of "diffs") <ref> [Car93, ZSB94] </ref> from a written page and then propagates them to other workstations. This is an effective way of improving performance in many cases. We will show that this approach has a downside and has to be used with caution.
References-found: 9

