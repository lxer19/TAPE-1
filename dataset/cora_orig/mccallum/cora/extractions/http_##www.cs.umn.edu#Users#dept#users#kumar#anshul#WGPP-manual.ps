URL: http://www.cs.umn.edu/Users/dept/users/kumar/anshul/WGPP-manual.ps
Refering-URL: http://www.cs.umn.edu/Users/dept/users/kumar/anshul/
Root-URL: http://www.cs.umn.edu
Title: WGPP: Watson Graph Partitioning (and sparse matrix ordering) Package Users Manual: Version 3.2  
Author: Anshul Gupta P. O. Box 
Affiliation: Computer Science/Mathematics IBM Research  IBM Research Division T.J. Watson Research Center  Yorktown  IBM Research Division Almaden Austin China Haifa Tokyo Watson Zurich  
Address: 20453 (90427)  Heights, New York 10598  
Note: RC  
Pubnum: Report  
Email: anshul@watson.ibm.com  
Date: May 6, 1996  
Abstract: LIMITED DISTRIBUTION NOTICE This report has been submitted for publication outside of IBM and will probably be copyrighted if accepted for publication. It has been issued as a Research Report for early dissemination of its contents. In view of the transfer of copyright to the outside publisher, its distribution outside of IBM prior to publication should be limited to peer communications and specific requests. After outside publication, requests should be filled only by reprints or legally obtained copies of the article (e.g., payment of royalties). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Cleve Ashcraft. </author> <title> Compressed graphs and the minimum degree algorithm. </title> <journal> SIAM Journal of Scientific Computing, </journal> <volume> 16 </volume> <pages> 1404-1411, </pages> <year> 1995. </year> <month> 17 </month>
Reference-contexts: The graph partitioning routines may occasionally fail or hang if memory is insufficient. 7 Acknowledgments Details of the algorithms implemented in WGPP can be found in [5, 6]. Many algorithms implemented in WGPP are adapted from or improved upon the ones discussed in <ref> [9, 11, 1, 3] </ref>.
Reference: [2] <author> Cleve Ashcraft and Joseph W.-H. Liu. </author> <title> Robust ordering of sparse matrices using multisection. </title> <type> Technical Report CS 96-01, </type> <institution> Department of Computer Science, York University, </institution> <address> Ontario, Canada, </address> <year> 1996. </year>
Reference-contexts: WMMRB is better than Metis in both ordering time and quality for most matrices. Recent reports by Ashcraft and Liu <ref> [2] </ref> and Hendrickson and Rothberg [8] suggest that their graph-partitioning based ordering algorithms may generate competitive orderings for certain types of finite-difference and finite-element matrices. The ordering software reported in [2] and [8] is not available in public domain for direct comparison with WGPP, but is reported to generate better orderings <p> Recent reports by Ashcraft and Liu <ref> [2] </ref> and Hendrickson and Rothberg [8] suggest that their graph-partitioning based ordering algorithms may generate competitive orderings for certain types of finite-difference and finite-element matrices. The ordering software reported in [2] and [8] is not available in public domain for direct comparison with WGPP, but is reported to generate better orderings than Metis.
Reference: [3] <author> Cleve Ashcraft and Joseph W.-H. Liu. </author> <title> Generalized nested dissection: Some recent progress. </title> <booktitle> In Proceedings of Fifth SIAM Conference on Applied Linear Algebra, </booktitle> <address> Snowbird, Utah, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: The graph partitioning routines may occasionally fail or hang if memory is insufficient. 7 Acknowledgments Details of the algorithms implemented in WGPP can be found in [5, 6]. Many algorithms implemented in WGPP are adapted from or improved upon the ones discussed in <ref> [9, 11, 1, 3] </ref>.
Reference: [4] <author> Timothy A. Davis, Patrick Amestoy, and Iain S. Duff. </author> <title> An approximate minimum degree ordering algorithm. </title> <type> Technical Report TR-94-039, </type> <institution> Computer and Information Sciences Department, University of Florida, </institution> <address> Gainesville, FL, </address> <year> 1994. </year>
Reference-contexts: Currently, two of the best and most well known codes available for computing fill-reducing ordering for sparse matrices are that of Harwell MC47B/BD routine based on the approximate minimum degree (AMD) algorithm <ref> [4] </ref> (if both ordering time and quality are taken into account) and the one in Metis (if only ordering quality is considered). In many practical applications, sparse matrices with the same structure need to be factored more than once. <p> Many algorithms implemented in WGPP are adapted from or improved upon the ones discussed in [9, 11, 1, 3]. The WMMRB routine in Versions 0, 1, and 2 of WGPP uses the AMD code written by Amestoy, Davis, and Duff <ref> [4] </ref> to label small subgraphs containing about 100 nodes. 8 Notice: Terms and Conditions for Use of WGPP IBM reserves the right to discontinue the free distribution of this software for any or all of the hardware platforms without any prior notice.
Reference: [5] <author> Anshul Gupta. </author> <title> Fast and effective algorithms for graph partitioning and sparse matrix ordering. </title> <type> Technical Report RC 20496 (90799), </type> <institution> IBM T. J. Watson Research Center, </institution> <address> Yorktown Heights, NY, </address> <month> July 10, </month> <year> 1996. </year> <note> To appear in IBM Journal of Research and Development. </note>
Reference-contexts: The sparse matrix ordering WMMRB has undergone a good amount of testing and has been found to be robust. The graph partitioning routines may occasionally fail or hang if memory is insufficient. 7 Acknowledgments Details of the algorithms implemented in WGPP can be found in <ref> [5, 6] </ref>. Many algorithms implemented in WGPP are adapted from or improved upon the ones discussed in [9, 11, 1, 3].
Reference: [6] <author> Anshul Gupta. </author> <title> Graph partitioning based sparse matrix ordering algorithms for interior-point methods. </title> <type> Technical Report RC 20467 (90480), </type> <institution> IBM T. J. Watson Research Center, </institution> <address> Yorktown Heights, NY, </address> <month> May 21, </month> <year> 1996. </year> <note> Available on the WWW at the IBM Research CyberJournal site at http://www.research.ibm.com:8080/. </note>
Reference-contexts: However, for sparse matrices arising from highly irregular graphs, such as those in linear programming problems, WMMRB significantly outperforms AMD, both in terms of ordering time and quality. In <ref> [6] </ref>, we present extensive experimental results that show that replacing the minimum degree based ordering in the IBM Optimization Subroutine Library (OSL) by WMMRB reduces the total time for solving a suite of 53 medium to large problems by a factor of 2.2. <p> The sparse matrix ordering WMMRB has undergone a good amount of testing and has been found to be robust. The graph partitioning routines may occasionally fail or hang if memory is insufficient. 7 Acknowledgments Details of the algorithms implemented in WGPP can be found in <ref> [5, 6] </ref>. Many algorithms implemented in WGPP are adapted from or improved upon the ones discussed in [9, 11, 1, 3].
Reference: [7] <author> Bruce Hendrickson and Robert Leland. </author> <title> Chaco user's guide. </title> <type> Technical Report SAND93-2339, </type> <institution> Sandia National Laboratories, </institution> <address> Albuquerque, NM, </address> <month> October </month> <year> 1993. </year>
Reference-contexts: the author. 1 2 Performance, Quality, and Usability Comparisons At the time of its release, WGGP is either faster or generates graph partitions with a smaller edge-cut (for small number of partitions, it is both faster and better) than the other state-of-the art graph partitioning packages available, such as, Chaco <ref> [7] </ref> and Metis [10].
Reference: [8] <author> Bruce Hendrickson and Edward Rothberg. </author> <title> Improving the runtime and quality of nested dissection ordering. </title> <type> Technical Report SAND96-0868J, </type> <institution> Sandia National Laboratories, </institution> <address> Albuquerque, NM, </address> <year> 1996. </year>
Reference-contexts: WMMRB is better than Metis in both ordering time and quality for most matrices. Recent reports by Ashcraft and Liu [2] and Hendrickson and Rothberg <ref> [8] </ref> suggest that their graph-partitioning based ordering algorithms may generate competitive orderings for certain types of finite-difference and finite-element matrices. The ordering software reported in [2] and [8] is not available in public domain for direct comparison with WGPP, but is reported to generate better orderings than Metis. <p> Recent reports by Ashcraft and Liu [2] and Hendrickson and Rothberg <ref> [8] </ref> suggest that their graph-partitioning based ordering algorithms may generate competitive orderings for certain types of finite-difference and finite-element matrices. The ordering software reported in [2] and [8] is not available in public domain for direct comparison with WGPP, but is reported to generate better orderings than Metis. To the best of our knowledge, WMMRB is one of the most general purpose routines for fast, robust, and high quality ordering of sparse matrices arising in different applications.
Reference: [9] <author> George Karypis and Vipin Kumar. </author> <title> A fast and high quality multilevel scheme for partitioning irregular graphs. </title> <type> Technical Report TR 95-035, </type> <institution> Department of Computer Science, University of Minnesota, </institution> <year> 1995. </year>
Reference-contexts: The graph partitioning routines may occasionally fail or hang if memory is insufficient. 7 Acknowledgments Details of the algorithms implemented in WGPP can be found in [5, 6]. Many algorithms implemented in WGPP are adapted from or improved upon the ones discussed in <ref> [9, 11, 1, 3] </ref>.
Reference: [10] <author> George Karypis and Vipin Kumar. METIS: </author> <title> Unstructured graph partitioning and sparse matrix ordering system. </title> <type> Technical report, </type> <institution> Department of Computer Science, University of Minnesota, </institution> <year> 1995. </year>
Reference-contexts: 2 Performance, Quality, and Usability Comparisons At the time of its release, WGGP is either faster or generates graph partitions with a smaller edge-cut (for small number of partitions, it is both faster and better) than the other state-of-the art graph partitioning packages available, such as, Chaco [7] and Metis <ref> [10] </ref>.
Reference: [11] <author> George Karypis and Vipin Kumar. </author> <title> Multilevel k-way partitioning scheme for irregular graphs. </title> <type> Technical Report TR 95-064, </type> <institution> Department of Computer Science, University of Minnesota, </institution> <year> 1995. </year> <month> 18 </month>
Reference-contexts: The graph partitioning routines may occasionally fail or hang if memory is insufficient. 7 Acknowledgments Details of the algorithms implemented in WGPP can be found in [5, 6]. Many algorithms implemented in WGPP are adapted from or improved upon the ones discussed in <ref> [9, 11, 1, 3] </ref>.
References-found: 11

