URL: ftp://ftp.cis.ufl.edu/cis/tech-reports/tr91/tr91-001.ps
Refering-URL: http://www.cis.ufl.edu/tech-reports/tech-reports/tr91-abstracts.html
Root-URL: http://www.cis.ufl.edu
Title: A Multimodel Methodology for Qualitative Model Engineering  
Author: Paul A. Fishwick Bernard P. Zeigler 
Keyword: Categories and Subject Descriptors: I.2.4 [Artificial Intelligence] Knowledge Representation Formalisms and Methods representations; I.6.1 [Simulation and Modeling] Simulation Theory model classification, systems theory; I.6.5 [Simulation and Modeling] Model Development modeling methodologies. I.6.8 [Simulation and Modeling] Types of Simulation combined, discrete event, continuous. General Terms: Combined Simulation, Systems Theory, Qualitative Simulation. Additional Key Words and Phrases: Multimodeling, Abstraction Levels, Homomorphism.  
Affiliation: University of Florida and  University of Arizona  
Abstract: Qualitative models arising in the artificial intelligence domain often concern real systems that are difficult to represent with traditional means. However, some promise for dealing with such systems is offered by research in simulation methodology. Such research produces models that combine both continuous and discrete event formalisms. Nevertheless, the aims and approaches of the AI and the simulation communities remain rather mutually ill-understood. Consequently, there is a need to bridge theory and methodology in order to have a uniform language when either analyzing or reasoning about physical systems. This article introduces a methodology and formalism for developing multiple, cooperative models of physical systems of the type studied in qualitative physics. The formalism combines discrete event and continuous models and offers an approach to building intelligent machines capable of physical modeling and reasoning. fl One author (Fishwick) is grateful for partial funding of this research through grants from the National Science Foundation IRI-8909152 and the Florida High Technology and Industry Council UPN 91092520. The other author (Zeigler) acknowledges the support of NASA Grant "A Simulation Environment for Laboratory Management by Robotic Organizations." Author's Addresses: Paul A. Fishwick, Dept. of Computer and Information Sciences, University of Florida, Bldg. CSE, Room 301, Gainesville, FL 32611; Bernard P. Zeigler, Dept. of Electrical and Computer Engineering, University of Arizona, Tucson, AZ 85721. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Addanki, S., Cremonini, R., and Penberthy, J. S. </author> <title> Reasoning about Assumptions in Graphs of Models. </title> <booktitle> In Eleventh International Joint Conference on Artificial Intelligence (August 1989), IJCAI, </booktitle> <pages> pp. 1432 - 1438. </pages>
Reference-contexts: The formalism should help to build intelligent machines capable of physical modeling and reasoning. Our approach has similar goals to the work of Forbus and Falkenheiner in their SIMGEN [17] system and the work of Addanki et al. <ref> [1] </ref> in their graphs of models approach to supporting multiple models. Our work is similar in that we build multiple models that can fit together to aid in question-answering at different levels.
Reference: [2] <author> Berleant, D. </author> <title> Combining Qualitative and Quantitative Simulation: In Brief. </title> <booktitle> In Second Conference on AI, Simulation and Planning in High Autonomy Systems (Cocoa Beach, </booktitle> <address> FL, </address> <month> April </month> <year> 1991), </year> <pages> pp. 233 - 240. </pages>
Reference-contexts: AI researchers have also performed substantial research in modeling qualitative behavior at different abstraction and aggregation levels <ref> [37, 38, 2] </ref>. It is this latter interest with which we are most concerned. We use an example from recent AI literature to demonstrate how certain simulation methods can be reoriented and extended to help AI modellers toward their goals.
Reference: [3] <author> Bobrow, D. G. </author> <title> Qualitative Reasoning about Physical Systems. </title> <publisher> MIT Press, </publisher> <year> 1985. </year>
Reference-contexts: In any event, there are enough similarities in the goals of AI and simulation research to contend that methods in simulation modeling can play a strong role in AI. There has been a considerable amount of research performed in the AI sub-disciplines of qualitative reasoning <ref> [3, 39] </ref> and simulation [21], qualitative physics [17] and model based reasoning [34]. The chief problems being addressed by AI researchers in qualitative simulation, for instance, revolve around reducing the explosive number of states obtained during envisionment [22, 36] by applying more constraints.
Reference: [4] <author> Cellier, F. E. </author> <title> Combined Continuous System Simulation by Use of Digital Computers: Techniques and Tools. </title> <type> PhD thesis, </type> <institution> Swiss Federal Institute of Technology Zurich, </institution> <year> 1979. </year> <title> [5] de Kleer, </title> <editor> J., and Brown, J. S. </editor> <title> A Qualitative Physics Based on Confluences. In Qualitative Reasoning about Physical Systems, </title> <editor> D. G. Bobrow, Ed. </editor> <publisher> MIT Press, </publisher> <year> 1985, </year> <pages> pp. 7 - 83. </pages>
Reference-contexts: The idea of a multimodel has its roots within the work in combined simulation modeling. Combined modeling has traditionally referred to a integration of discrete event and continuous modeling within the same system description. Pritsker [31, 32] first implemented combined modeling in the GASP modeling language. Cellier <ref> [4] </ref> developed an approach to combined continuous/discrete event models implemented in a GASP language extension. Praehofer [30] extended the Discrete Event System Specification (DEVS) [45] to provide a formalism and a simulation environment for specifying combined continuous/discrete event models. <p> A combined model combines two or more of the above model types. For instance, a combined discrete event/continuous model has two distinct model types: a discrete event model and a continuous model. These two models are coupled with discrete events <ref> [4, 30] </ref>. 2.3 Event Identification An event is a state &lt; s 1 ; : : : ; s n &gt; (where s i are components of the state vector) at a specific time t. <p> Such an FSA-controlled multimodel can be simulated in a combined continuous/discrete event environment such as those of Cellier <ref> [4] </ref> and Praehofer [30]. However, to fully under stand the operation of such simulation, we first present a formalization.
Reference: [6] <author> Fishwick, P. A. </author> <title> Hierarchical Reasoning: Simulating Complex Processes over Multiple Levels of Abstraction. </title> <type> PhD thesis, </type> <institution> University of Pennsylvania, </institution> <year> 1986. </year>
Reference-contexts: Although system dynamics [35] is inadequate for representing systems containing phase transitions and complicated boundary conditions, simulation methodology developed concepts to model complex systems over multiple levels of abstraction <ref> [6, 7, 8] </ref>. Oren [28] developed a concept of multimodel to formalize models containing several submodels, only one of which is put into effect at any given time. The idea of a multimodel has its roots within the work in combined simulation modeling.
Reference: [7] <author> Fishwick, P. A. </author> <title> The Role of Process Abstraction in Simulation. </title> <journal> IEEE Transactions on Systems, Man and Cybernetics 18, </journal> <volume> 1 (January/February 1988), 18 - 39. </volume>
Reference-contexts: Although system dynamics [35] is inadequate for representing systems containing phase transitions and complicated boundary conditions, simulation methodology developed concepts to model complex systems over multiple levels of abstraction <ref> [6, 7, 8] </ref>. Oren [28] developed a concept of multimodel to formalize models containing several submodels, only one of which is put into effect at any given time. The idea of a multimodel has its roots within the work in combined simulation modeling. <p> A methodology and formalisms to create models. 3. An a priori knowledge base of basic physical system properties. 4. An ability to deduce new knowledge. 5. An ability to induce new knowledge. 6. Methods for traversing levels of abstraction. This paper deals only with items one, two and six <ref> [7, 19, 45, 24] </ref>. We propose that the concepts of events and partitions, formulated within general systems theory, can support the construction of multimodels for high autonomy systems.
Reference: [8] <author> Fishwick, P. A. </author> <title> Abstraction Level Traversal in Hierarchical Modeling. In Modelling and Simulation Methodology: Knowledge Systems Paradigms, </title> <editor> B. P. Zeigler, M. Elzas, and T. Oren, Eds. </editor> <publisher> Elsevier North Holland, </publisher> <year> 1989, </year> <pages> pp. 393 - 429. </pages>
Reference-contexts: Although system dynamics [35] is inadequate for representing systems containing phase transitions and complicated boundary conditions, simulation methodology developed concepts to model complex systems over multiple levels of abstraction <ref> [6, 7, 8] </ref>. Oren [28] developed a concept of multimodel to formalize models containing several submodels, only one of which is put into effect at any given time. The idea of a multimodel has its roots within the work in combined simulation modeling.
Reference: [9] <author> Fishwick, P. A. </author> <title> Extracting Rules from Fuzzy Simulation. Expert Systems with Applications 3, </title> <booktitle> 3 (1991), </booktitle> <volume> 317 - 327. </volume>
Reference-contexts: The explosion is a result of having a model whose structure and parameters are too ill-defined. Simulation researchers have dealt with fuzzy parameters <ref> [10, 9] </ref>; however, there has been little simulation research into the problem of studying systems whose structural |rather than parametric| constraints are uncertain (i.e., not knowing whether two states are joined in the structure of a finite state automaton).
Reference: [10] <author> Fishwick, P. A. </author> <title> Fuzzy Simulation: Specifying and Identifying Qualitative Models. </title> <journal> International Journal of General Systems 9, </journal> <volume> 3 (1991), 295 - 316. </volume>
Reference-contexts: The explosion is a result of having a model whose structure and parameters are too ill-defined. Simulation researchers have dealt with fuzzy parameters <ref> [10, 9] </ref>; however, there has been little simulation research into the problem of studying systems whose structural |rather than parametric| constraints are uncertain (i.e., not knowing whether two states are joined in the structure of a finite state automaton).
Reference: [11] <author> Fishwick, P. A. </author> <title> Heterogeneous Decomposition and Coupling for Combined Modeling. </title> <booktitle> In 1991 Winter Simulation Conference (Phoenix, </booktitle> <address> AZ, </address> <month> December </month> <year> 1991), </year> <pages> pp. 1199 - 1208. 27 </pages>
Reference-contexts: We start with an abstract model expressed as an FSA (finite state automaton) and perform homogeneous (i.e., staying within the same formalism) refinement to derive two more levels of refinement. The final refinement is heterogeneous <ref> [11] </ref> in that the automaton is decomposed into block networks each representing a continuous process such as "heating" or "cooling." This methodology has a number of interesting features: * The result of the refinement is a set of models at different levels of abstraction. * These models can answer various questions
Reference: [12] <author> Fishwick, P. A. </author> <title> Computer Simulation Modeling: Methodology, </title> <booktitle> Algorithms and Pro--grams. </booktitle> <year> 1992. </year> <note> (to be published as a textbook). </note>
Reference-contexts: The result of the refinement is a set of models at different levels of abstraction. * These models can answer various questions that relate to the proper level of abstraction. * The models can be integrated into a multimodel [25, 28] that can be simulated using one of several methods <ref> [12, 30] </ref>. * The semantics of the multimodel can be expressed in the DEVS formalism. * The DEVS representation lends itself to further abstraction which supports more effi cient discrete-event simulation. After the review of systems concepts and discussion of the refinement process, we justify the claims just made. <p> A simulation of the multimodel could be carried out in DEVS-based simulation environments such a DEVS-Scheme [43]. To provide a concrete example of such simulation, in this article we will present algorithms that are represented in SimPack <ref> [12] </ref> (a set of simulation tools). An FSA-controlled multimodel can be converted to a discrete event simulation by translation of its graph to the core of a discrete event simulation: the event switch statement.
Reference: [13] <author> Fishwick, P. A., and Luker, P. A., Eds. </author> <title> Qualitative Simulation Modeling and Analysis. </title> <publisher> Springer Verlag, </publisher> <year> 1991. </year>
Reference-contexts: We will address, instead, the relationship between qualitative and quantitative modeling from the perspective of systems and simulation theory and methodology <ref> [13, 14] </ref>. This work was prompted by two needs: (1) a need to bridge gaps between the artificial intelligence (AI) and simulation communities' representations of system models, and (2) a need to derive more formal approaches to the development of models for systems typically studied by AI qualitative modellers.
Reference: [14] <author> Fishwick, P. A., and Modjeski, R. B., Eds. </author> <title> Knowledge Based Simulation: Methodology and Application. </title> <publisher> Springer Verlag, </publisher> <year> 1991. </year>
Reference-contexts: We will address, instead, the relationship between qualitative and quantitative modeling from the perspective of systems and simulation theory and methodology <ref> [13, 14] </ref>. This work was prompted by two needs: (1) a need to bridge gaps between the artificial intelligence (AI) and simulation communities' representations of system models, and (2) a need to derive more formal approaches to the development of models for systems typically studied by AI qualitative modellers.
Reference: [15] <author> Fishwick, P. A., and Zeigler, B. P. </author> <title> Qualitative Physics: Towards the Automation of Systems Problem Solving. </title> <journal> Journal of Theoretical and Experimental Artificial Intelligence 3 (1991), </journal> <volume> 219 - 246. </volume>
Reference-contexts: A more complete discussion of the commonalities and points of controversy is given by Fishwick and Zeigler <ref> [15] </ref>. In any event, there are enough similarities in the goals of AI and simulation research to contend that methods in simulation modeling can play a strong role in AI.
Reference: [16] <author> Forbus, K. D. </author> <title> Qualitative Physics: Past, Present and Future. </title> <booktitle> In Exploring Artificial Intelligence, </booktitle> <editor> H. Shrobe, Ed. </editor> <publisher> Morgan Kaufmann, </publisher> <year> 1988, </year> <pages> pp. </pages> <address> 239 -296. </address>
Reference-contexts: It is this latter interest with which we are most concerned. We use an example from recent AI literature to demonstrate how certain simulation methods can be reoriented and extended to help AI modellers toward their goals. Consider a paper by Forbus <ref> [16] </ref> which presents a comprehensive overview of the field of qualitative physics. Forbus notes that "some device ontologies are unnatu 2 ral." For instance, it is difficult to model a pot of boiling water (see fig. 1) or a bouncing ball when expressed within system dynamics. <p> Heuristic approaches to event identification for qualitative modeling were suggested and illustrated with a multimodel characterization of boiling water | an example introduced by Forbus <ref> [16] </ref>. Although we have demonstrated our multimodel approach on the system of boiling water, we believe our method to be applicable to many more scenarios where different levels of abstraction are coded in the model form most appropriate for those levels.
Reference: [17] <author> Forbus, K. D., and Falkenhainer, B. </author> <title> Self-Explanatory Simulations: An Integration of Qualitative and Quantitative Knowledge. </title> <booktitle> In AAAI (1990), </booktitle> <pages> pp. 380 - 387. </pages>
Reference-contexts: There has been a considerable amount of research performed in the AI sub-disciplines of qualitative reasoning [3, 39] and simulation [21], qualitative physics <ref> [17] </ref> and model based reasoning [34]. The chief problems being addressed by AI researchers in qualitative simulation, for instance, revolve around reducing the explosive number of states obtained during envisionment [22, 36] by applying more constraints. <p> The formalism should help to build intelligent machines capable of physical modeling and reasoning. Our approach has similar goals to the work of Forbus and Falkenheiner in their SIMGEN <ref> [17] </ref> system and the work of Addanki et al. [1] in their graphs of models approach to supporting multiple models. Our work is similar in that we build multiple models that can fit together to aid in question-answering at different levels.
Reference: [18] <author> Kalman, R. E., Falb, P. L., and Arbib, M. A. </author> <title> Topics in Mathematical Systems Theory. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1962. </year>
Reference-contexts: Using the canonical model definition as a base permits us to specify many varieties of models from Petri nets to cellular automata; most system models in systems theory <ref> [29, 18] </ref> and science [19] are predicated on the canonical formulation. The emphasis on behavior preservation through homomorphic mapping insures maximal consistency when dynamically mapping between abstraction levels. We will use the system of boiling water to illustrate our methods. <p> Instead, we assume that the M ODELS all share a common state set and that in a transition, the new model starts in the same state that the old model was at the time the transition occurred. 3.6 DEVS Abstraction of FSA-Controlled Multimodels Even though classical system theory <ref> [18, 29] </ref> provides strong definitions for individual systems and system networks there is little concentration on the concept of an "event." Events were not critical to the study of systems within the classical theory.
Reference: [19] <author> Klir, G. J. </author> <title> Architecture of Systems Problem Solving. </title> <publisher> Plenum Press, </publisher> <year> 1985. </year>
Reference-contexts: Using the canonical model definition as a base permits us to specify many varieties of models from Petri nets to cellular automata; most system models in systems theory [29, 18] and science <ref> [19] </ref> are predicated on the canonical formulation. The emphasis on behavior preservation through homomorphic mapping insures maximal consistency when dynamically mapping between abstraction levels. We will use the system of boiling water to illustrate our methods. <p> A methodology and formalisms to create models. 3. An a priori knowledge base of basic physical system properties. 4. An ability to deduce new knowledge. 5. An ability to induce new knowledge. 6. Methods for traversing levels of abstraction. This paper deals only with items one, two and six <ref> [7, 19, 45, 24] </ref>. We propose that the concepts of events and partitions, formulated within general systems theory, can support the construction of multimodels for high autonomy systems.
Reference: [20] <author> Kreutzer, W. </author> <title> System Simulation: Programming Styles and Languages. </title> <publisher> Addison Wesley, </publisher> <year> 1986. </year>
Reference-contexts: In general, actions are applied to objects and have a beginning and end | these are possible locations for events. (Indeed, in the activity scanning "world view" of discrete-event simulation <ref> [20, 32] </ref>, activities or actions form the basic primitives for model expression.) * In general, consider all boundary conditions. With respect to collisions between geometrical objects, the points of collision indicate events.
Reference: [21] <author> Kuipers, B. </author> <title> Qualitative Simulation. </title> <booktitle> Artificial Intelligence 29, </booktitle> <month> 3 (September </month> <year> 1986), </year> <pages> 289 - 338. </pages>
Reference-contexts: With respect to the AI and simulation communities, both groups have terminology that is very similar in focus. For instance, an "envisionment" [5] would be termed a "reachability tree" or "finite state automaton" in the systems literature, and a "landmark" <ref> [21] </ref> would be termed a "discrete event." There are many other correlations; we name four of them in table 1. A more complete discussion of the commonalities and points of controversy is given by Fishwick and Zeigler [15]. <p> In any event, there are enough similarities in the goals of AI and simulation research to contend that methods in simulation modeling can play a strong role in AI. There has been a considerable amount of research performed in the AI sub-disciplines of qualitative reasoning [3, 39] and simulation <ref> [21] </ref>, qualitative physics [17] and model based reasoning [34]. The chief problems being addressed by AI researchers in qualitative simulation, for instance, revolve around reducing the explosive number of states obtained during envisionment [22, 36] by applying more constraints.
Reference: [22] <author> Kuipers, B., and Chiu, C. </author> <title> Taming Intractable Branching in Qualitative Simulation. </title> <booktitle> In Tenth International Joint Conference in Artificial Intelligence (Milan, </booktitle> <year> 1987), </year> <pages> pp. 1079 - 1085. </pages>
Reference-contexts: The chief problems being addressed by AI researchers in qualitative simulation, for instance, revolve around reducing the explosive number of states obtained during envisionment <ref> [22, 36] </ref> by applying more constraints. The explosion is a result of having a model whose structure and parameters are too ill-defined.
Reference: [23] <author> Nance, R. E. </author> <title> The Time and State Relationships in Simulation Modeling. </title> <journal> Communications of the ACM 24, </journal> <month> 4 (April </month> <year> 1981), </year> <pages> 173 - 179. </pages>
Reference-contexts: Therefore, an event is of the form &lt; t; s 1 ; : : : ; s n &gt;. This definition of event was first used in physics [33], and is defined in systems theory [29, page 198]. In the simulation literature <ref> [32, 23] </ref>, the term "event" is usually associated with a linguistic or cognitive mapping. <p> Simulation researchers such as Zeigler [41] and Nance <ref> [23] </ref> extended the classical theory to formally specify discrete event models and the roles of events, state and time within simulation models. We now present a brief review of the resulting DEVS formalism as a prelude to mapping the FSA-controlled multimodel into a DEVS equivalent [41].
Reference: [24] <author> Nance, R. E. </author> <title> A Conical Methodology: A Framework for Simulation Model Development. </title> <booktitle> In Conference on Methodology and Validation (San Diego, </booktitle> <address> CA., </address> <month> April </month> <year> 1987), </year> <booktitle> Society for Computer Simulation, </booktitle> <pages> pp. 38 - 43. </pages>
Reference-contexts: A methodology and formalisms to create models. 3. An a priori knowledge base of basic physical system properties. 4. An ability to deduce new knowledge. 5. An ability to induce new knowledge. 6. Methods for traversing levels of abstraction. This paper deals only with items one, two and six <ref> [7, 19, 45, 24] </ref>. We propose that the concepts of events and partitions, formulated within general systems theory, can support the construction of multimodels for high autonomy systems.
Reference: [25] <author> Oren, T. I. </author> <title> Model-Based Activities: A Paradigm Shift. In Simulation and Model-Based Methodologies: An Integrative View. </title> <publisher> Springer Verlag, </publisher> <year> 1984, </year> <pages> pp. 3 - 40. </pages>
Reference-contexts: or "cooling." This methodology has a number of interesting features: * The result of the refinement is a set of models at different levels of abstraction. * These models can answer various questions that relate to the proper level of abstraction. * The models can be integrated into a multimodel <ref> [25, 28] </ref> that can be simulated using one of several methods [12, 30]. * The semantics of the multimodel can be expressed in the DEVS formalism. * The DEVS representation lends itself to further abstraction which supports more effi cient discrete-event simulation.
Reference: [26] <author> Oren, T. I. </author> <title> Simulation Model Symbolic Processing: Taxonomy. In Systems and Control Encyclopedia. </title> <publisher> Pergammon Press, </publisher> <year> 1987, </year> <pages> pp. 4377 - 4381. </pages>
Reference-contexts: Discrete event simulations can be performed over models with a discrete state space (i.e., first column in table 2). What about continuous events? In the simulation literature <ref> [32, 27, 26] </ref>, one finds reference only to discrete events. Continuous events might be defined in terms of the start and end of an arbitrary numerical integration interval. However, this concept is not adequate since it depends on a simulation process, and is not an intrinsic characteristic of the model.
Reference: [27] <author> Oren, T. I. </author> <title> Simulation: Taxonomy. In Systems and Control Encyclopedia. </title> <publisher> Pergammon Press, </publisher> <year> 1987, </year> <pages> pp. 4411 - 4414. 28 </pages>
Reference-contexts: Discrete event simulations can be performed over models with a discrete state space (i.e., first column in table 2). What about continuous events? In the simulation literature <ref> [32, 27, 26] </ref>, one finds reference only to discrete events. Continuous events might be defined in terms of the start and end of an arbitrary numerical integration interval. However, this concept is not adequate since it depends on a simulation process, and is not an intrinsic characteristic of the model.
Reference: [28] <author> Oren, T. I. </author> <title> Dynamic Templates and Semantic Rules for Simulation Advisors and Certifiers. In Knowledge Based Simulation: Methodology and Application. </title> <publisher> Springer Verlag, </publisher> <year> 1991, </year> <pages> pp. 53 - 76. </pages>
Reference-contexts: Although system dynamics [35] is inadequate for representing systems containing phase transitions and complicated boundary conditions, simulation methodology developed concepts to model complex systems over multiple levels of abstraction [6, 7, 8]. Oren <ref> [28] </ref> developed a concept of multimodel to formalize models containing several submodels, only one of which is put into effect at any given time. The idea of a multimodel has its roots within the work in combined simulation modeling. <p> or "cooling." This methodology has a number of interesting features: * The result of the refinement is a set of models at different levels of abstraction. * These models can answer various questions that relate to the proper level of abstraction. * The models can be integrated into a multimodel <ref> [25, 28] </ref> that can be simulated using one of several methods [12, 30]. * The semantics of the multimodel can be expressed in the DEVS formalism. * The DEVS representation lends itself to further abstraction which supports more effi cient discrete-event simulation.
Reference: [29] <author> Padulo, L., and Arbib, M. A. </author> <title> Systems Theory: A Unified State Space Approach to Continuous and Discrete Systems. </title> <editor> W. B. </editor> <publisher> Saunders, </publisher> <address> Philadelphia, PA, </address> <year> 1974. </year>
Reference-contexts: Using the canonical model definition as a base permits us to specify many varieties of models from Petri nets to cellular automata; most system models in systems theory <ref> [29, 18] </ref> and science [19] are predicated on the canonical formulation. The emphasis on behavior preservation through homomorphic mapping insures maximal consistency when dynamically mapping between abstraction levels. We will use the system of boiling water to illustrate our methods. <p> of an FSA-controlled multimodel, create a formal specification using DEVS concepts, and demonstrate its use in answering both symbolic and dynamic questions about system structure and behavior. 5 2 Defining a System 2.1 Formal Specification A deterministic system &lt; T; U; Y; Q; ; ffi; &gt; within classical systems theory <ref> [29, 40] </ref> is defined as follows: * T is the time set. <p> Therefore, an event is of the form &lt; t; s 1 ; : : : ; s n &gt;. This definition of event was first used in physics [33], and is defined in systems theory <ref> [29, page 198] </ref>. In the simulation literature [32, 23], the term "event" is usually associated with a linguistic or cognitive mapping. <p> Instead, we assume that the M ODELS all share a common state set and that in a transition, the new model starts in the same state that the old model was at the time the transition occurred. 3.6 DEVS Abstraction of FSA-Controlled Multimodels Even though classical system theory <ref> [18, 29] </ref> provides strong definitions for individual systems and system networks there is little concentration on the concept of an "event." Events were not critical to the study of systems within the classical theory.
Reference: [30] <author> Praehofer, H. </author> <title> System Theoretic Foundations for Combined Discrete-Continuous System Simulation. </title> <type> PhD thesis, </type> <institution> Johannes Kepler University of Linz, </institution> <year> 1991. </year>
Reference-contexts: Combined modeling has traditionally referred to a integration of discrete event and continuous modeling within the same system description. Pritsker [31, 32] first implemented combined modeling in the GASP modeling language. Cellier [4] developed an approach to combined continuous/discrete event models implemented in a GASP language extension. Praehofer <ref> [30] </ref> extended the Discrete Event System Specification (DEVS) [45] to provide a formalism and a simulation environment for specifying combined continuous/discrete event models. <p> The result of the refinement is a set of models at different levels of abstraction. * These models can answer various questions that relate to the proper level of abstraction. * The models can be integrated into a multimodel [25, 28] that can be simulated using one of several methods <ref> [12, 30] </ref>. * The semantics of the multimodel can be expressed in the DEVS formalism. * The DEVS representation lends itself to further abstraction which supports more effi cient discrete-event simulation. After the review of systems concepts and discussion of the refinement process, we justify the claims just made. <p> A combined model combines two or more of the above model types. For instance, a combined discrete event/continuous model has two distinct model types: a discrete event model and a continuous model. These two models are coupled with discrete events <ref> [4, 30] </ref>. 2.3 Event Identification An event is a state &lt; s 1 ; : : : ; s n &gt; (where s i are components of the state vector) at a specific time t. <p> Such an FSA-controlled multimodel can be simulated in a combined continuous/discrete event environment such as those of Cellier [4] and Praehofer <ref> [30] </ref>. However, to fully under stand the operation of such simulation, we first present a formalization. An FSA-controlled multimodel is specified by a structure &lt; F SA, M ODELS, map, T RAN SIT ION S &gt;, where * F SA is a finite state automaton whose states are called phases. <p> A formal interpretation for the structure &lt; F SA; M ODELS; map; T RAN SIT ION S &gt; can be given by mapping it into the DEVS&DESS formalism <ref> [30] </ref> for combined continuous and discrete event models. 3 We refrain from giving this mapping here and restrict our comments to the following: * Note that zero, one, or more transition conditions may be associated with any phase.
Reference: [31] <author> Pritsker, A. A. B. </author> <title> The GASP IV Simulation Language. </title> <publisher> John Wiley and Sons, </publisher> <year> 1974. </year>
Reference-contexts: The idea of a multimodel has its roots within the work in combined simulation modeling. Combined modeling has traditionally referred to a integration of discrete event and continuous modeling within the same system description. Pritsker <ref> [31, 32] </ref> first implemented combined modeling in the GASP modeling language. Cellier [4] developed an approach to combined continuous/discrete event models implemented in a GASP language extension.
Reference: [32] <author> Pritsker, A. A. B. </author> <title> Introduction to Simulation and SLAM II. </title> <publisher> Halsted Press, </publisher> <year> 1986. </year>
Reference-contexts: The idea of a multimodel has its roots within the work in combined simulation modeling. Combined modeling has traditionally referred to a integration of discrete event and continuous modeling within the same system description. Pritsker <ref> [31, 32] </ref> first implemented combined modeling in the GASP modeling language. Cellier [4] developed an approach to combined continuous/discrete event models implemented in a GASP language extension. <p> Table 2 displays these combinations with example model formalisms for each. Discrete event models cannot be localized within table 2 since the concept of "discrete event" refers to a discrete updating process rather than to the discrete or continuous character of time or state (see <ref> [42, 32] </ref> for characterizations of discrete event models). Discrete event simulations can be performed over models with a discrete state space (i.e., first column in table 2). What about continuous events? In the simulation literature [32, 27, 26], one finds reference only to discrete events. <p> Discrete event simulations can be performed over models with a discrete state space (i.e., first column in table 2). What about continuous events? In the simulation literature <ref> [32, 27, 26] </ref>, one finds reference only to discrete events. Continuous events might be defined in terms of the start and end of an arbitrary numerical integration interval. However, this concept is not adequate since it depends on a simulation process, and is not an intrinsic characteristic of the model. <p> Therefore, an event is of the form &lt; t; s 1 ; : : : ; s n &gt;. This definition of event was first used in physics [33], and is defined in systems theory [29, page 198]. In the simulation literature <ref> [32, 23] </ref>, the term "event" is usually associated with a linguistic or cognitive mapping. <p> In general, actions are applied to objects and have a beginning and end | these are possible locations for events. (Indeed, in the activity scanning "world view" of discrete-event simulation <ref> [20, 32] </ref>, activities or actions form the basic primitives for model expression.) * In general, consider all boundary conditions. With respect to collisions between geometrical objects, the points of collision indicate events.
Reference: [33] <author> Reichenbach, H. </author> <title> The Philosophy of Space and Time. </title> <publisher> Dover, </publisher> <year> 1957. </year> <title> First published by General Publishing Company, </title> <address> Toronto, Ontario. </address>
Reference-contexts: Therefore, an event is of the form &lt; t; s 1 ; : : : ; s n &gt;. This definition of event was first used in physics <ref> [33] </ref>, and is defined in systems theory [29, page 198]. In the simulation literature [32, 23], the term "event" is usually associated with a linguistic or cognitive mapping.
Reference: [34] <editor> Scarl, E., Ed. </editor> <booktitle> Second AAAI Workshop on Model Based Reasoning (Boston, </booktitle> <address> MA, </address> <year> 1990), </year> <note> AAAI Conference. </note>
Reference-contexts: There has been a considerable amount of research performed in the AI sub-disciplines of qualitative reasoning [3, 39] and simulation [21], qualitative physics [17] and model based reasoning <ref> [34] </ref>. The chief problems being addressed by AI researchers in qualitative simulation, for instance, revolve around reducing the explosive number of states obtained during envisionment [22, 36] by applying more constraints. The explosion is a result of having a model whose structure and parameters are too ill-defined.
Reference: [35] <author> Shearer, J. L., Murphy, A. T., and Richardson, H. H. </author> <title> Introduction to System Dynamics. </title> <publisher> Addison Wesley, </publisher> <year> 1967. </year>
Reference-contexts: Forbus notes that "some device ontologies are unnatu 2 ral." For instance, it is difficult to model a pot of boiling water (see fig. 1) or a bouncing ball when expressed within system dynamics. Although system dynamics <ref> [35] </ref> is inadequate for representing systems containing phase transitions and complicated boundary conditions, simulation methodology developed concepts to model complex systems over multiple levels of abstraction [6, 7, 8].
Reference: [36] <author> Struss, P. </author> <title> Global Filters for Qualitative Behaviors. </title> <booktitle> In AAAI (1988), </booktitle> <pages> pp. </pages> <address> 275 -279. </address>
Reference-contexts: The chief problems being addressed by AI researchers in qualitative simulation, for instance, revolve around reducing the explosive number of states obtained during envisionment <ref> [22, 36] </ref> by applying more constraints. The explosion is a result of having a model whose structure and parameters are too ill-defined.
Reference: [37] <author> Weld, D. S. </author> <title> Combining Discrete and Continuous Process Models. </title> <booktitle> In Ninth International Joint Conference on Artificial Intelligence (August 1985), IJCAI, </booktitle> <pages> pp. 140 - 143. </pages>
Reference-contexts: AI researchers have also performed substantial research in modeling qualitative behavior at different abstraction and aggregation levels <ref> [37, 38, 2] </ref>. It is this latter interest with which we are most concerned. We use an example from recent AI literature to demonstrate how certain simulation methods can be reoriented and extended to help AI modellers toward their goals.
Reference: [38] <author> Weld, D. S. </author> <title> The Use of Aggregation in Causal Simulation. </title> <booktitle> Artificial Intelligence 30, </booktitle> <month> 1 (October </month> <year> 1986), </year> <pages> 1 - 34. </pages>
Reference-contexts: AI researchers have also performed substantial research in modeling qualitative behavior at different abstraction and aggregation levels <ref> [37, 38, 2] </ref>. It is this latter interest with which we are most concerned. We use an example from recent AI literature to demonstrate how certain simulation methods can be reoriented and extended to help AI modellers toward their goals.
Reference: [39] <editor> Weld, D. S., and de Kleer, J., Eds. </editor> <booktitle> Readings in Qualitative Reasoning about Physical Systems (Palo Alto, </booktitle> <address> CA, 1990), </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: In any event, there are enough similarities in the goals of AI and simulation research to contend that methods in simulation modeling can play a strong role in AI. There has been a considerable amount of research performed in the AI sub-disciplines of qualitative reasoning <ref> [3, 39] </ref> and simulation [21], qualitative physics [17] and model based reasoning [34]. The chief problems being addressed by AI researchers in qualitative simulation, for instance, revolve around reducing the explosive number of states obtained during envisionment [22, 36] by applying more constraints.
Reference: [40] <author> Wymore, A. W. </author> <title> A Mathematical Theory of Systems Engineering: The Elements. </title> <publisher> Krieger Publishing Co., </publisher> <year> 1977. </year>
Reference-contexts: of an FSA-controlled multimodel, create a formal specification using DEVS concepts, and demonstrate its use in answering both symbolic and dynamic questions about system structure and behavior. 5 2 Defining a System 2.1 Formal Specification A deterministic system &lt; T; U; Y; Q; ; ffi; &gt; within classical systems theory <ref> [29, 40] </ref> is defined as follows: * T is the time set.
Reference: [41] <author> Zeigler, B. P. </author> <title> Theory of Modelling and Simulation. </title> <publisher> John Wiley and Sons, </publisher> <year> 1976. </year>
Reference-contexts: The system formalism is very general. For instance, figures 2 and 3 show two sample models that can be represented using a 1) block network, and 2) state transition method, respectively. Both of these formalisms can be shown to be sub-classes of the system formalism <ref> [41] </ref>. In fig. 2, transfer functions are represented as boxes with inputs and outputs connected to each box. This is termed a "block model" in systems engineering or a "data flow" graph in software engineering. <p> This is discussed further in sec. 4. Alternatively, the modeller may decide to terminate the refinement process leaving the transition non-deterministically specified. Indeed, the decision whether to continue refinement should be based on the modeling objectives, the accuracy required, and the computational resources available <ref> [41, 42] </ref>. 3.4 A Heterogeneous Refinement Heterogeneous refinement takes homogeneous refinement a step further by loosening the restriction of equivalent model types. <p> Simulation researchers such as Zeigler <ref> [41] </ref> and Nance [23] extended the classical theory to formally specify discrete event models and the roles of events, state and time within simulation models. We now present a brief review of the resulting DEVS formalism as a prelude to mapping the FSA-controlled multimodel into a DEVS equivalent [41]. <p> as Zeigler <ref> [41] </ref> and Nance [23] extended the classical theory to formally specify discrete event models and the roles of events, state and time within simulation models. We now present a brief review of the resulting DEVS formalism as a prelude to mapping the FSA-controlled multimodel into a DEVS equivalent [41]. Time, in discrete event systems, is assumed to be real-valued (T = R + 0 ).
Reference: [42] <author> Zeigler, B. P. </author> <title> Multi-Facetted Modelling and Discrete Event Simulation. </title> <publisher> Academic Press, </publisher> <year> 1984. </year>
Reference-contexts: What kind of system model would be necessary so that the robot can answer the question? Clearly, it would be best to have both detailed mathematical models of heat transfer as well as more aggregated, so-called, lumped models <ref> [42, 43] </ref>. Such lumped models serve two purposes: 1) their relatively reduced computational complexity enables them to be used to obtain answers quickly, and 2) they serve to form cognitive and linguistic links between different knowledge representation levels. <p> Table 2 displays these combinations with example model formalisms for each. Discrete event models cannot be localized within table 2 since the concept of "discrete event" refers to a discrete updating process rather than to the discrete or continuous character of time or state (see <ref> [42, 32] </ref> for characterizations of discrete event models). Discrete event simulations can be performed over models with a discrete state space (i.e., first column in table 2). What about continuous events? In the simulation literature [32, 27, 26], one finds reference only to discrete events. <p> The individual components can be chosen with the aid of an existing knowledge base which is created manually, along with all models necessary for the simulation. Our knowledge base approach is similar, in function, to the system entity structure (SES) <ref> [42] </ref>. We do not focus on the knowledge base schemata in this paper, but present the sort of infrastructure needed to form models at different abstraction levels. All model knowledge is provided by the human modeller (i.e., not automatically inferred). <p> This is discussed further in sec. 4. Alternatively, the modeller may decide to terminate the refinement process leaving the transition non-deterministically specified. Indeed, the decision whether to continue refinement should be based on the modeling objectives, the accuracy required, and the computational resources available <ref> [41, 42] </ref>. 3.4 A Heterogeneous Refinement Heterogeneous refinement takes homogeneous refinement a step further by loosening the restriction of equivalent model types. <p> To do this the DEVS model employs its time-advance and internal transition function to predict the time and state of next internal event; it also employs its external transition function to update its state when a change in input occurs. Zeigler <ref> [42] </ref> showed that a DEVS representation of general system is in a homomorphic relation to the original system called a system morphism. In such a morphism, a corre 7 In our simplified formalization of section 3.5, the prevailing input u is assumed to be stored in the state, q.
Reference: [43] <author> Zeigler, B. P. </author> <title> Multifaceted Systems Modeling: Structure and Behavior at a Multiplicity of Levels. In Individual Development and Social Change: Explanatory Analysis. </title> <publisher> Academic Press, </publisher> <year> 1985, </year> <pages> pp. 265 - 293. </pages>
Reference-contexts: What kind of system model would be necessary so that the robot can answer the question? Clearly, it would be best to have both detailed mathematical models of heat transfer as well as more aggregated, so-called, lumped models <ref> [42, 43] </ref>. Such lumped models serve two purposes: 1) their relatively reduced computational complexity enables them to be used to obtain answers quickly, and 2) they serve to form cognitive and linguistic links between different knowledge representation levels. <p> A simulation of the multimodel could be carried out in DEVS-based simulation environments such a DEVS-Scheme <ref> [43] </ref>. To provide a concrete example of such simulation, in this article we will present algorithms that are represented in SimPack [12] (a set of simulation tools).
Reference: [44] <author> Zeigler, B. P. </author> <title> DEVS Representation of Dynamical Systems: Event-Based Intelligent Control. </title> <booktitle> Proceedings of the IEEE 77, </booktitle> <month> 1 (January </month> <year> 1989), </year> <pages> 72 - 80. </pages>
Reference-contexts: We now present a brief review of the resulting DEVS formalism as a prelude to mapping the FSA-controlled multimodel into a DEVS equivalent [41]. Time, in discrete event systems, is assumed to be real-valued (T = R + 0 ). The DEVS structure <ref> [44] </ref> &lt; U; Y; S; ffi; ; ta &gt; is as follows: 3 Actually, this is strictly true only for the case where the M ODELS are restricted to be continuous, discrete time or discrete event.

References-found: 43

