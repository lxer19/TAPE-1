URL: http://www.cs.princeton.edu/~dpd/Papers/BarberDobkinHuhdanpaa.ps.Z
Refering-URL: http://www.cs.princeton.edu/~dpd/Research.html
Root-URL: http://www.cs.princeton.edu
Title: The Quickhull Algorithm for Convex Hulls  
Author: C. Bradford Barber David P. Dobkin Hannu Huhdanpaa 
Note: Submitted to the ACM Transactions on Mathematical Software  
Date: January 9, 1995  
Abstract: The convex hull of a set of points is the smallest convex set that contains the points. This paper presents a practical convex hull algorithm that combines the two-dimensional Quickhull Algorithm with the general dimension Beneath-Beyond Algorithm. It is similar to the randomized, incremental algorithms for convex hull and Delaunay triangulation. We provide empirical evidence that the algorithm runs faster when the input contains non-extreme points, and that it uses less memory. Computational geometry algorithms have traditionally assumed that input sets are well behaved. When an algorithm is implemented with floating point arithmetic, this assumption can lead to serious errors. We briefly describe a solution to this problem when computing the convex hull in two, three, or four dimensions. The output is a set of "thick" facets that contain all possible exact convex hulls of the input. A variation is effective in five or more dimensions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Allen and D. Dutta. </author> <title> Determination & evaluation of support structures in layered manufacturing. </title> <journal> Journal of Design & Manufacturing, </journal> <volume> 5 </volume> <pages> 153-162, </pages> <year> 1995. </year>
Reference-contexts: The program can be called from within an application. Over the last two years, 3000 copies of qhull were retrieved via ftp. It has been used for support structures in layered manufacturing <ref> [1] </ref>, classification of molecules by their biological activity, vibration control, geographic information systems, neighbors of the origin in the R 8 lattice, stress analysis, stability of robot grasps [5], spectrometry [6], constrained control allocation [8], robot navigation [17], micromagnetic modeling [38], and invariant sets of delta-sigma modulators [45].
Reference: [2] <author> F. Aurenhammer. </author> <title> Voronoi diagrams a survey of a fundamental geometric data structure. </title> <journal> ACM Computing Surveys, </journal> <volume> 23 </volume> <pages> 345-405, </pages> <year> 1991. </year>
Reference-contexts: In his review article, Aurenhammer describes applications of these structures in mesh generation, file searching, cluster analysis, collision detection, crystallography, metallurgy, urban planning, cartography, image processing, numerical integration, statistics, sphere packing, and point location <ref> [2] </ref>. We represent a convex hull with a set of facets and a set of adjacency lists giving the neighbors and vertices for each facet. The boundary elements of a facet are called ridges. Each ridge signifies the adjacency of two facets.
Reference: [3] <author> D. Avis and D. Bremner. </author> <title> How good are convex hull algorithms? In Proc. </title> <booktitle> 11th Annual ACM Symposium on Computational Geometry, </booktitle> <pages> pages 20-28, </pages> <year> 1995. </year>
Reference-contexts: It is the earliest incremental method for 3 computing the convex hull. It is an excellent choice in high dimensions when the number of facets is much smaller than the maximum number of facets for r vertices (f r ) <ref> [3] </ref> [25]. 2. The Quickhull Algorithm We assume that the input points are in general position (i.e., no set of d + 1 points define a (d 1)-flat), so that their convex hull is a simplicial complex [39].
Reference: [4] <author> C. B. Barber, D. P. Dobkin, and H. Huhdanpaa. </author> <title> The Quickhull algorithm for convex hull. </title> <type> Technical Report GCG53, </type> <institution> The Geometry Center, </institution> <year> 1993. </year>
Reference-contexts: Each test is an average and range for ten trials. Quickhull partitions points to the first visible facet. The randomized version starts with a random initial simplex. In a previous report, we compared actual time and space for Quickhull and a randomized incremental program <ref> [4] </ref>. Those figures support our results here. 6 First consider uniform random distributions projected to a sphere. Each coordinate is selected randomly from the interval [-0.5, 0.5]. The sphere is radius 0.5 centered at the origin. All points are extreme.
Reference: [5] <author> L. Belsis, S. Grundmann, T. Rasanen, J. Sullivan, J. B. Walker, and M. Wright. </author> <title> Personal communications regarding qhull, </title> <year> 1995. </year>
Reference-contexts: It has been used for support structures in layered manufacturing [1], classification of molecules by their biological activity, vibration control, geographic information systems, neighbors of the origin in the R 8 lattice, stress analysis, stability of robot grasps <ref> [5] </ref>, spectrometry [6], constrained control allocation [8], robot navigation [17], micromagnetic modeling [38], and invariant sets of delta-sigma modulators [45]. Acknowledgments: A special thanks to Albert Marden and Victor Milenkovic for providing excellent environments for completing this work. The referees' comments greatly improved the presentation and content of this paper.
Reference: [6] <author> J.W. Boardman. </author> <title> Automating spectral unmixing of AVIRIS data using convex geometry concepts. </title> <booktitle> Fourth Airborne Geoscience Workshop, </booktitle> <address> Washington, D.C., </address> <month> October </month> <year> 1993. </year>
Reference-contexts: 1. Introduction The convex hull of a set of points is the smallest convex set that contains the points. The convex hull is a fundamental construction for mathematics and computational geometry. For example, Boardman uses the convex hull in his analysis of spectrometry data <ref> [6] </ref> and Weeks uses the convex hull to determine the canonical triangulation of cusped hyperbolic 3-manifolds [44]. Other problems can be reduced to the convex hull for example, halfspace intersection, Delaunay fl 116 Fayerweather Street, Cambridge, MA 02138, bradb@geom.umn.edu. <p> It has been used for support structures in layered manufacturing [1], classification of molecules by their biological activity, vibration control, geographic information systems, neighbors of the origin in the R 8 lattice, stress analysis, stability of robot grasps [5], spectrometry <ref> [6] </ref>, constrained control allocation [8], robot navigation [17], micromagnetic modeling [38], and invariant sets of delta-sigma modulators [45]. Acknowledgments: A special thanks to Albert Marden and Victor Milenkovic for providing excellent environments for completing this work. The referees' comments greatly improved the presentation and content of this paper.
Reference: [7] <author> J.-D. Boissonnat and M. Devillers-Teillaud. </author> <title> On the randomized construction of the Delau-nay tree. </title> <booktitle> Theoretical Computer Science, </booktitle> <year> 1990. </year> <month> 12 </month>
Reference-contexts: They locate a visible facet by a depth-first search of the previous convex hulls. Consider the sequence of facets tested for a point. Quickhull may test the same sequence during successive partitions of the point into outside sets. Edelsbrunner and Shah [21], Joe [30], and Boissonnat and Devillers-Teillaud <ref> [7] </ref> use a similar method for Delaunay triangulations. They express their algorithm in terms of triangulations and the in-sphere test.
Reference: [8] <author> K. A. Bordignon and W. C. Durham. </author> <title> Closed-form solutions to constrained control allocation problem. </title> <journal> Journal of Guidance, Control, and Dynamics, </journal> <volume> 18(5) </volume> <pages> 1000-1007, </pages> <year> 1995. </year>
Reference-contexts: It has been used for support structures in layered manufacturing [1], classification of molecules by their biological activity, vibration control, geographic information systems, neighbors of the origin in the R 8 lattice, stress analysis, stability of robot grasps [5], spectrometry [6], constrained control allocation <ref> [8] </ref>, robot navigation [17], micromagnetic modeling [38], and invariant sets of delta-sigma modulators [45]. Acknowledgments: A special thanks to Albert Marden and Victor Milenkovic for providing excellent environments for completing this work. The referees' comments greatly improved the presentation and content of this paper.
Reference: [9] <author> D.F. Brown. </author> <title> Voronoi diagrams from convex hulls. </title> <journal> Information Processing Letters, </journal> <volume> 9 </volume> <pages> 223-228, </pages> <year> 1979. </year>
Reference-contexts: To determine the Delaunay triangulation of a set of points: lift the points to a paraboloid and compute their convex hull. The set of ridges of the lower convex hull is the Delaunay triangulation of the original points <ref> [9] </ref>. The intersection of halfspaces about the origin is equivalent to the convex hull of the points in dual space [39]. <p> They express their algorithm in terms of triangulations and the in-sphere test. By the correspondence between Delaunay triangulation and convex hull, each triangle is a facet of the convex hull and the in-sphere test determines the visible facets for the lifted point <ref> [9] </ref>. 3. Comparison of Quickhull with the randomized algorithms If Quickhull and the randomized algorithms perform essentially the same steps, why do we prefer Quickhull? Quickhull uses less space than most of the randomized incremental algorithms and runs faster for distributions with non-extreme points.
Reference: [10] <author> A. Bykat. </author> <title> Convex hull of a finite set of points in two dimensions. </title> <journal> Information Processing Letters, </journal> <volume> 7 </volume> <pages> 296-298, </pages> <year> 1978. </year>
Reference-contexts: Like Clarkson and Shor's algorithm, an unprocessed point is in exactly one outside set. Our variation is to process the furthest point of an outside set instead of a random point. In R 2 , this is the well-known Quickhull Algorithm <ref> [10] </ref> [20] [22] [26]. Other variations of the Clarkson and Shor algorithm do not maintain conflict graphs or outside sets. Instead, they retain old facets of the convex hull with links to the new facets that replaced them.
Reference: [11] <author> D.R. Chand and S.S. Kapur. </author> <title> An algorithm for convex polytopes. </title> <journal> Journal of the ACM, </journal> <volume> 7 </volume> <pages> 78-86, </pages> <year> 1970. </year>
Reference-contexts: In higher dimensions, the best output-sensitive algorithm is Seidel's shelling algorithm at O (n 2 + h log n) when h = (n) [40], and gift-wrapping at O (nh) otherwise <ref> [11] </ref>. The Double-Description Method is the dual of the Beneath-Beyond Algorithm [36]. It is the earliest incremental method for 3 computing the convex hull.
Reference: [12] <author> B. Chazelle and J. Matousek. </author> <title> Derandomizing an output-sensitive convex hull algorithm in three dimensions. Computational Geometry: </title> <booktitle> Theory and Applications, </booktitle> <year> 1991. </year>
Reference-contexts: Via the duality transform, each facet of the convex hull defines a point of intersection of the halfspaces. Recent work on convex hulls and Delaunay triangulations has focused on variations of a randomized, incremental algorithm that has optimal expected performance <ref> [12] </ref> [15] [21] [28] [30] [37]. Points are processed one at a time in a random order. In this paper, we propose and analyze a strategy for processing points in a more efficient order. The result is a faster algorithm for distributions with interior points. <p> Clarkson & Shor give a 3-d convex hull algorithm with optimal output-sensitive expected time [16]; it was derandomized by Chazelle and Matousek <ref> [12] </ref>. In higher dimensions, the best output-sensitive algorithm is Seidel's shelling algorithm at O (n 2 + h log n) when h = (n) [40], and gift-wrapping at O (nh) otherwise [11]. The Double-Description Method is the dual of the Beneath-Beyond Algorithm [36].
Reference: [13] <author> K. L. Clarkson. </author> <title> Safe and effective determinant evaluation. </title> <booktitle> In Proc. 31st IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 387-395, </pages> <year> 1992. </year>
Reference-contexts: The output is a triangulation. If the input is degenerate, the output may contain simplices with zero volume. Clarkson's hull implementation of the randomized incremental algorithm 10 restricts the input precision to about fifteen decimal digits. The implementation computes the exact sign of determinants <ref> [13] </ref>. It is a practical solution for precise convex hulls and Delaunay triangulations [14].
Reference: [14] <author> K. L. Clarkson. </author> <title> A program for convex hulls. </title> <address> http://netlib.att.com/netlib/ voronoi/hull.html, </address> <year> 1995. </year>
Reference-contexts: Clarkson's hull implementation of the randomized incremental algorithm 10 restricts the input precision to about fifteen decimal digits. The implementation computes the exact sign of determinants [13]. It is a practical solution for precise convex hulls and Delaunay triangulations <ref> [14] </ref>. We timed hull, hullio [19] (a precursor of hull without exact arithmetic), triangle [41] (a two dimensional Delaunay triangulation program with exact arithmetic), and our implementation of Quickhull (qhull 2.2) on a Silicon Graphics 100 MHz R4000. These are fastest implementations known to the authors.
Reference: [15] <author> K. L. Clarkson, K. Mehlhorn, and R. Seidel. </author> <title> Four results on randomized incremental constructions. </title> <booktitle> In Symposium on Theoretical Aspects of Computer Science, </booktitle> <year> 1992. </year>
Reference-contexts: Via the duality transform, each facet of the convex hull defines a point of intersection of the halfspaces. Recent work on convex hulls and Delaunay triangulations has focused on variations of a randomized, incremental algorithm that has optimal expected performance [12] <ref> [15] </ref> [21] [28] [30] [37]. Points are processed one at a time in a random order. In this paper, we propose and analyze a strategy for processing points in a more efficient order. The result is a faster algorithm for distributions with interior points. <p> This is the same as the expected cost of the randomized incremental algorithms <ref> [15] </ref>. For Quickhull, the furthest point of an outside set is not always the furthest point from a facet, but in many cases, it is the furthest overall and hence an extreme point. If it is not an extreme point, then a later point will delete it.
Reference: [16] <author> K.L. Clarkson and P.W. Shor. </author> <title> Applications of random sampling in computational geometry, ii. </title> <journal> Discrete Computational Geometry, </journal> <volume> 4 </volume> <pages> 387-421, </pages> <year> 1989. </year>
Reference-contexts: Second, construct a cone of new facets from the point to its horizon ridges. Third, delete the visible facets, thus forming the convex hull of the new point and the previously processed points. The original randomized incremental algorithm upon which we build was proposed by Clark-son and Shor <ref> [16] </ref>. They work in the dual space of halfspace intersections. Their algorithm adds a halfspace by intersecting it with the polytope of the previous intersections. They randomly select a halfspace to add to the polytope. For each unprocessed halfspace, they maintain the list of polytope edges that intersect the halfspace. <p> In R 2 , Kirkpatrick and Seidel found an optimal output-sensitive algorithm for convex hull that runs in O (n log h) time, where h is the output size [32]. Clarkson & Shor give a 3-d convex hull algorithm with optimal output-sensitive expected time <ref> [16] </ref>; it was derandomized by Chazelle and Matousek [12]. In higher dimensions, the best output-sensitive algorithm is Seidel's shelling algorithm at O (n 2 + h log n) when h = (n) [40], and gift-wrapping at O (nh) otherwise [11].
Reference: [17] <author> P. Cucka, N.S. Netanyahu, and A. Rosenfeld. </author> <title> Learning in navigation: Goal finding in graphs. </title> <type> Technical Report CAR-TR-759, </type> <institution> Center for Automation Research, University of Maryland, </institution> <year> 1995. </year>
Reference-contexts: It has been used for support structures in layered manufacturing [1], classification of molecules by their biological activity, vibration control, geographic information systems, neighbors of the origin in the R 8 lattice, stress analysis, stability of robot grasps [5], spectrometry [6], constrained control allocation [8], robot navigation <ref> [17] </ref>, micromagnetic modeling [38], and invariant sets of delta-sigma modulators [45]. Acknowledgments: A special thanks to Albert Marden and Victor Milenkovic for providing excellent environments for completing this work. The referees' comments greatly improved the presentation and content of this paper.
Reference: [18] <author> T. K. Dey, K. Sugihara, and C. L. Bajaj. </author> <title> Delaunay triangulations in three dimensions with finite precision arithmetic. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <volume> 9 </volume> <pages> 457-470, </pages> <year> 1992. </year>
Reference-contexts: If this occurs, Quickhull generates a warning and reports a wide facet. In R 2 , there are several robust convex hull and Delaunay triangulation algorithms [23] [29] [34]. In R 3 , Sugihara and Dey et. al. produce a topologically robust convex hull and Delaunay triangulation <ref> [18] </ref> [42]. Their algorithms are a variation of Beneath-Beyond with steps to prevent topological anomalies such as in Figure 3. The output may contain unbounded geometric faults. There are several implementations for computing the convex hull with precise arithmetic. The output is a triangulation.
Reference: [19] <author> S. </author> <title> Dorward. </title> <type> Personal communication, </type> <year> 1992. </year>
Reference-contexts: Clarkson's hull implementation of the randomized incremental algorithm 10 restricts the input precision to about fifteen decimal digits. The implementation computes the exact sign of determinants [13]. It is a practical solution for precise convex hulls and Delaunay triangulations [14]. We timed hull, hullio <ref> [19] </ref> (a precursor of hull without exact arithmetic), triangle [41] (a two dimensional Delaunay triangulation program with exact arithmetic), and our implementation of Quickhull (qhull 2.2) on a Silicon Graphics 100 MHz R4000. These are fastest implementations known to the authors.
Reference: [20] <author> W. Eddy. </author> <title> A new convex hull algorithm for planar sets. </title> <journal> ACM Transactions on Mathematical Software, </journal> <year> 1977. </year>
Reference-contexts: Like Clarkson and Shor's algorithm, an unprocessed point is in exactly one outside set. Our variation is to process the furthest point of an outside set instead of a random point. In R 2 , this is the well-known Quickhull Algorithm [10] <ref> [20] </ref> [22] [26]. Other variations of the Clarkson and Shor algorithm do not maintain conflict graphs or outside sets. Instead, they retain old facets of the convex hull with links to the new facets that replaced them.
Reference: [21] <author> H. Edelsbrunner and N.R. Shah. </author> <title> Incremental topological flipping works for regular triangulations. </title> <booktitle> In Proceedings of the Symposium on Computational Geometry, </booktitle> <pages> pages 43-52. </pages> <publisher> ACM, </publisher> <year> 1992. </year>
Reference-contexts: Via the duality transform, each facet of the convex hull defines a point of intersection of the halfspaces. Recent work on convex hulls and Delaunay triangulations has focused on variations of a randomized, incremental algorithm that has optimal expected performance [12] [15] <ref> [21] </ref> [28] [30] [37]. Points are processed one at a time in a random order. In this paper, we propose and analyze a strategy for processing points in a more efficient order. The result is a faster algorithm for distributions with interior points. <p> They locate a visible facet by a depth-first search of the previous convex hulls. Consider the sequence of facets tested for a point. Quickhull may test the same sequence during successive partitions of the point into outside sets. Edelsbrunner and Shah <ref> [21] </ref>, Joe [30], and Boissonnat and Devillers-Teillaud [7] use a similar method for Delaunay triangulations. They express their algorithm in terms of triangulations and the in-sphere test.
Reference: [22] <author> R.W. Floyd. </author> <title> Personal communication to Preparata & Shamos on Quickhull, </title> <year> 1976. </year>
Reference-contexts: Like Clarkson and Shor's algorithm, an unprocessed point is in exactly one outside set. Our variation is to process the furthest point of an outside set instead of a random point. In R 2 , this is the well-known Quickhull Algorithm [10] [20] <ref> [22] </ref> [26]. Other variations of the Clarkson and Shor algorithm do not maintain conflict graphs or outside sets. Instead, they retain old facets of the convex hull with links to the new facets that replaced them.
Reference: [23] <author> S. Fortune. </author> <title> Stable maintenance of point-set triangulation in two dimensions. </title> <booktitle> In 30th Annual Symposium on the Foundations of Computer Science. IEEE, </booktitle> <year> 1989. </year>
Reference-contexts: Later, the coplanar point may be far above a new facet. If this occurs, Quickhull generates a warning and reports a wide facet. In R 2 , there are several robust convex hull and Delaunay triangulation algorithms <ref> [23] </ref> [29] [34]. In R 3 , Sugihara and Dey et. al. produce a topologically robust convex hull and Delaunay triangulation [18] [42]. Their algorithms are a variation of Beneath-Beyond with steps to prevent topological anomalies such as in Figure 3. The output may contain unbounded geometric faults.
Reference: [24] <author> S. Fortune. </author> <title> Computational geometry. </title> <editor> In R. Martin, editor, </editor> <booktitle> Directions in Geometric Computing. Winchester UK: Information Geometers, </booktitle> <year> 1993. </year>
Reference-contexts: The chain either ends with a facet of the current hull, or all facets of the current hull are above the point and the point is discarded. These algorithms have been implemented. In practice, their running times are competitive with other algorithms <ref> [24] </ref>. We can compare Quickhull with the randomized incremental algorithms by changing the selection step of Quickhull. If Quickhull selects a random point instead of a furthest point, it is a randomized incremental algorithm.
Reference: [25] <author> K. Fukuda. </author> <title> cdd Reference Manual. </title> <address> ftp://ifor13.ethz.ch/pub/fukuda/cdd, </address> <year> 1995. </year>
Reference-contexts: It is the earliest incremental method for 3 computing the convex hull. It is an excellent choice in high dimensions when the number of facets is much smaller than the maximum number of facets for r vertices (f r ) [3] <ref> [25] </ref>. 2. The Quickhull Algorithm We assume that the input points are in general position (i.e., no set of d + 1 points define a (d 1)-flat), so that their convex hull is a simplicial complex [39].
Reference: [26] <author> P.J. Green and B.W. Silverman. </author> <title> Constructing the convex hull of a set of points in the plane. </title> <journal> Computer Journal, </journal> <pages> 22(262-266), </pages> <year> 1979. </year>
Reference-contexts: Like Clarkson and Shor's algorithm, an unprocessed point is in exactly one outside set. Our variation is to process the furthest point of an outside set instead of a random point. In R 2 , this is the well-known Quickhull Algorithm [10] [20] [22] <ref> [26] </ref>. Other variations of the Clarkson and Shor algorithm do not maintain conflict graphs or outside sets. Instead, they retain old facets of the convex hull with links to the new facets that replaced them.
Reference: [27] <author> B. Grunbaum. </author> <title> Measures of symmetry for convex sets. </title> <booktitle> In Proceedings of the Seventh Symposium in Pure Mathematics of the American Mathematical Society, Symposium on Convexity, </booktitle> <pages> pages 233-270, </pages> <year> 1961. </year>
Reference-contexts: The result is a faster algorithm for distributions with interior points. An incremental algorithm for the convex hull repeatedly adds a point to the convex hull of the previously processed points. Of particular interest is the Beneath-Beyond Algorithm <ref> [27] </ref> [31] [39]. A new point is processed in three steps. First, locate the visible facets for the point The boundary of the visible facets is the set of horizon ridges for the point. A facet is visible if the point is above the facet. <p> The hyperplane defines a halfspace of points that have negative distances from the hyperplane. If the distance is positive, the point is above the hyperplane. For processing a point we use a simplification of Grunbaum's Beneath-Beyond Theorem [Th. 5.2.1] <ref> [27] </ref>. The randomized incremental algorithms are based on this theorem. Theorem 1. (Simplified beneath-beyond) Let H be a convex hull in R d and let p be a point in R d H . Then F is a facet of conv (p [ H ) if and only if 1.
Reference: [28] <author> L. Guibas, D.E. Knuth, and M. Sharir. </author> <title> Randomized incremental construction of Delaunay and Voronoi diagrams. </title> <journal> Algorithmica, </journal> <pages> pages 381-413, </pages> <year> 1992. </year>
Reference-contexts: Via the duality transform, each facet of the convex hull defines a point of intersection of the halfspaces. Recent work on convex hulls and Delaunay triangulations has focused on variations of a randomized, incremental algorithm that has optimal expected performance [12] [15] [21] <ref> [28] </ref> [30] [37]. Points are processed one at a time in a random order. In this paper, we propose and analyze a strategy for processing points in a more efficient order. The result is a faster algorithm for distributions with interior points.
Reference: [29] <author> L. Guibas, D. Salesin, and J. Stolfi. </author> <title> Constructing strongly convex approximate hulls with inaccurate primitives. </title> <journal> Algorithmica, </journal> <volume> 9 </volume> <pages> 534-560, </pages> <year> 1993. </year>
Reference-contexts: Later, the coplanar point may be far above a new facet. If this occurs, Quickhull generates a warning and reports a wide facet. In R 2 , there are several robust convex hull and Delaunay triangulation algorithms [23] <ref> [29] </ref> [34]. In R 3 , Sugihara and Dey et. al. produce a topologically robust convex hull and Delaunay triangulation [18] [42]. Their algorithms are a variation of Beneath-Beyond with steps to prevent topological anomalies such as in Figure 3. The output may contain unbounded geometric faults.
Reference: [30] <author> B. Joe. </author> <title> Construction of three-dimensional Delaunay triangulations using local transformations. </title> <booktitle> Computer-Aided Geometric Design, </booktitle> <volume> 8 </volume> <pages> 123-142, </pages> <year> 1991. </year>
Reference-contexts: Via the duality transform, each facet of the convex hull defines a point of intersection of the halfspaces. Recent work on convex hulls and Delaunay triangulations has focused on variations of a randomized, incremental algorithm that has optimal expected performance [12] [15] [21] [28] <ref> [30] </ref> [37]. Points are processed one at a time in a random order. In this paper, we propose and analyze a strategy for processing points in a more efficient order. The result is a faster algorithm for distributions with interior points. <p> They locate a visible facet by a depth-first search of the previous convex hulls. Consider the sequence of facets tested for a point. Quickhull may test the same sequence during successive partitions of the point into outside sets. Edelsbrunner and Shah [21], Joe <ref> [30] </ref>, and Boissonnat and Devillers-Teillaud [7] use a similar method for Delaunay triangulations. They express their algorithm in terms of triangulations and the in-sphere test.
Reference: [31] <author> M. Kallay. </author> <title> Convex hull algorithms in higher dimensions. </title> <type> Unpublished manuscript, </type> <institution> Dept. Mathematics, Univ. of Oklahoma, Norman, </institution> <note> Oklahoma (see Preparata & Shamos 1985), </note> <year> 1981. </year>
Reference-contexts: The result is a faster algorithm for distributions with interior points. An incremental algorithm for the convex hull repeatedly adds a point to the convex hull of the previously processed points. Of particular interest is the Beneath-Beyond Algorithm [27] <ref> [31] </ref> [39]. A new point is processed in three steps. First, locate the visible facets for the point The boundary of the visible facets is the set of horizon ridges for the point. A facet is visible if the point is above the facet.
Reference: [32] <author> D.G. Kirkpatrick and R. Seidel. </author> <title> The ultimate planar convex hull algorithm? SIAM J. </title> <journal> Computing, </journal> <volume> 15 </volume> <pages> 287-299, </pages> <year> 1986. </year>
Reference-contexts: Output-sensitivity is important for convex hull algorithms because the output size can be much smaller than the worst case size. In R 2 , Kirkpatrick and Seidel found an optimal output-sensitive algorithm for convex hull that runs in O (n log h) time, where h is the output size <ref> [32] </ref>. Clarkson & Shor give a 3-d convex hull algorithm with optimal output-sensitive expected time [16]; it was derandomized by Chazelle and Matousek [12].
Reference: [33] <author> V. Klee. </author> <title> Convex polytopes and linear programming. </title> <booktitle> In Proc. IBM Sci. Comput. Symp.: Combinatorial Problems, </booktitle> <pages> pages 123-158, </pages> <year> 1966. </year>
Reference-contexts: This defines two balance conditions. Let d be the dimension, n be the number of input points, r be the number of processed points, and f r be the maximum number of facets of r vertices (f r = O (r bd=2c =bd=2c!) <ref> [33] </ref>). Definition .
Reference: [34] <author> Z. Li and V. Milenkovic. </author> <title> Constructing strongly convex hulls using exact or rounded arithmetic. </title> <booktitle> In Proceedings of the Symposium on Computational Geometry, </booktitle> <pages> pages 197-207. </pages> <publisher> ACM, </publisher> <year> 1990. </year>
Reference-contexts: Later, the coplanar point may be far above a new facet. If this occurs, Quickhull generates a warning and reports a wide facet. In R 2 , there are several robust convex hull and Delaunay triangulation algorithms [23] [29] <ref> [34] </ref>. In R 3 , Sugihara and Dey et. al. produce a topologically robust convex hull and Delaunay triangulation [18] [42]. Their algorithms are a variation of Beneath-Beyond with steps to prevent topological anomalies such as in Figure 3. The output may contain unbounded geometric faults.
Reference: [35] <author> V. Milenkovic. </author> <type> Personal communication, </type> <year> 1994. </year> <month> 14 </month>
Reference-contexts: For Quickhull, the second case corresponds to assigning all points to one outside set for most 7 partitions. We conjecture that this can not occur if we restrict the input precision to O (log n) bits <ref> [35] </ref>. In R d , a point creates at least d new facets. Since Quickhull processes the furthest point of each outside set, a sequence of partitions to a single facet would produce a facet that is too small for the input precision.
Reference: [36] <author> T. S. Motzkin, H. Raiffa, G. L. Thompson, and R. M. Thrall. </author> <title> The double description method. </title> <editor> In H. W. Kuhn and A. W. Tucker, editors, </editor> <title> Contributions to the Theory of Games II, </title> <journal> volume 8 of Annals of Mathematical Studies, </journal> <pages> pages 51-73. </pages> <publisher> Princeton University Press, </publisher> <year> 1953. </year>
Reference-contexts: In higher dimensions, the best output-sensitive algorithm is Seidel's shelling algorithm at O (n 2 + h log n) when h = (n) [40], and gift-wrapping at O (nh) otherwise [11]. The Double-Description Method is the dual of the Beneath-Beyond Algorithm <ref> [36] </ref>. It is the earliest incremental method for 3 computing the convex hull. It is an excellent choice in high dimensions when the number of facets is much smaller than the maximum number of facets for r vertices (f r ) [3] [25]. 2.
Reference: [37] <author> K. Mulmuley. </author> <title> Computational Geometry, An Introduction Through Randomized Algorithms. </title> <publisher> Prentice-Hall, </publisher> <year> 1994. </year>
Reference-contexts: Via the duality transform, each facet of the convex hull defines a point of intersection of the halfspaces. Recent work on convex hulls and Delaunay triangulations has focused on variations of a randomized, incremental algorithm that has optimal expected performance [12] [15] [21] [28] [30] <ref> [37] </ref>. Points are processed one at a time in a random order. In this paper, we propose and analyze a strategy for processing points in a more efficient order. The result is a faster algorithm for distributions with interior points.
Reference: [38] <author> D.G. Porter, E. Glavinas, P. Dhagat, J. A. O'Sullivan, R. S. Indeck, and M. W. Muller. </author> <title> Irregular grain structure in micromagnetic simulation. </title> <journal> Journal of Applied Physics, </journal> <note> to appear April 1996. </note>
Reference-contexts: It has been used for support structures in layered manufacturing [1], classification of molecules by their biological activity, vibration control, geographic information systems, neighbors of the origin in the R 8 lattice, stress analysis, stability of robot grasps [5], spectrometry [6], constrained control allocation [8], robot navigation [17], micromagnetic modeling <ref> [38] </ref>, and invariant sets of delta-sigma modulators [45]. Acknowledgments: A special thanks to Albert Marden and Victor Milenkovic for providing excellent environments for completing this work. The referees' comments greatly improved the presentation and content of this paper.
Reference: [39] <author> D F.P. Preparata and M.I. Shamos. </author> <title> Computational Geometry. An Introduction. </title> <publisher> Springer-Verlag, </publisher> <year> 1985. </year>
Reference-contexts: The set of ridges of the lower convex hull is the Delaunay triangulation of the original points [9]. The intersection of halfspaces about the origin is equivalent to the convex hull of the points in dual space <ref> [39] </ref>. To determine the intersection of halfspaces: locate an interior point by linear programming [43], translate the interior point to the origin, transform halfspaces into points by dividing offsets into coefficients, and compute the convex hull. <p> The result is a faster algorithm for distributions with interior points. An incremental algorithm for the convex hull repeatedly adds a point to the convex hull of the previously processed points. Of particular interest is the Beneath-Beyond Algorithm [27] [31] <ref> [39] </ref>. A new point is processed in three steps. First, locate the visible facets for the point The boundary of the visible facets is the set of horizon ridges for the point. A facet is visible if the point is above the facet. <p> The Quickhull Algorithm We assume that the input points are in general position (i.e., no set of d + 1 points define a (d 1)-flat), so that their convex hull is a simplicial complex <ref> [39] </ref>. We represent a d-dimensional convex hull by its vertices and (d 1)-dimensional faces (the facets). A point is extreme if it is a vertex of the convex hull. Each facet includes a set of vertices, a set of neighboring facets, and a hyperplane equation.
Reference: [40] <author> R. Seidel. </author> <title> Constructing higher-dimensional convex hulls at logarithmic cost per face. </title> <booktitle> In Proc. 18th ACM Symposium on the Theory of Computation, </booktitle> <pages> pages 404-413, </pages> <year> 1986. </year>
Reference-contexts: Clarkson & Shor give a 3-d convex hull algorithm with optimal output-sensitive expected time [16]; it was derandomized by Chazelle and Matousek [12]. In higher dimensions, the best output-sensitive algorithm is Seidel's shelling algorithm at O (n 2 + h log n) when h = (n) <ref> [40] </ref>, and gift-wrapping at O (nh) otherwise [11]. The Double-Description Method is the dual of the Beneath-Beyond Algorithm [36]. It is the earliest incremental method for 3 computing the convex hull.
Reference: [41] <author> J. R. Shewchuk. </author> <title> Triangle: A two-dimensional quality mesh generator and Delaunay trian-gulator. </title> <type> Technical report, </type> <institution> Carnegie-Mellon Institute, </institution> <year> 1995. </year>
Reference-contexts: The implementation computes the exact sign of determinants [13]. It is a practical solution for precise convex hulls and Delaunay triangulations [14]. We timed hull, hullio [19] (a precursor of hull without exact arithmetic), triangle <ref> [41] </ref> (a two dimensional Delaunay triangulation program with exact arithmetic), and our implementation of Quickhull (qhull 2.2) on a Silicon Graphics 100 MHz R4000. These are fastest implementations known to the authors. We used a Sun SPARCstation for performance tuning of qhull.
Reference: [42] <author> K. Sugihara. </author> <title> Topologically consistent algorithms related to convex polyhedra. </title> <booktitle> In Algorithms and Computation, Third International Symposium, ISAAC '92, volume 650 of Lecture Notes in Computer Science, </booktitle> <pages> pages 209-218. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: If this occurs, Quickhull generates a warning and reports a wide facet. In R 2 , there are several robust convex hull and Delaunay triangulation algorithms [23] [29] [34]. In R 3 , Sugihara and Dey et. al. produce a topologically robust convex hull and Delaunay triangulation [18] <ref> [42] </ref>. Their algorithms are a variation of Beneath-Beyond with steps to prevent topological anomalies such as in Figure 3. The output may contain unbounded geometric faults. There are several implementations for computing the convex hull with precise arithmetic. The output is a triangulation.
Reference: [43] <author> S. Teller. </author> <type> Personal communication, </type> <year> 1994. </year>
Reference-contexts: The intersection of halfspaces about the origin is equivalent to the convex hull of the points in dual space [39]. To determine the intersection of halfspaces: locate an interior point by linear programming <ref> [43] </ref>, translate the interior point to the origin, transform halfspaces into points by dividing offsets into coefficients, and compute the convex hull. Via the duality transform, each facet of the convex hull defines a point of intersection of the halfspaces.
Reference: [44] <author> J.R. Weeks. </author> <title> Convex hulls and isometries of cusped hyperbolic 3-manifolds. </title> <type> Technical Report TR GCG32, </type> <institution> The Geometry Center, Univ. of Minnesota, </institution> <month> August </month> <year> 1991. </year>
Reference-contexts: The convex hull is a fundamental construction for mathematics and computational geometry. For example, Boardman uses the convex hull in his analysis of spectrometry data [6] and Weeks uses the convex hull to determine the canonical triangulation of cusped hyperbolic 3-manifolds <ref> [44] </ref>. Other problems can be reduced to the convex hull for example, halfspace intersection, Delaunay fl 116 Fayerweather Street, Cambridge, MA 02138, bradb@geom.umn.edu.
Reference: [45] <author> B. Zhang, M. Goodson, and R. Schreier. </author> <title> Invariant sets for general second-order low-pass delta-sigma modulators with dc inputs. </title> <booktitle> In IEEE Inter. Symposium on Circuits and Systems, </booktitle> <volume> volume 6, </volume> <pages> pages 1-4, </pages> <year> 1994. </year> <month> 15 </month>
Reference-contexts: in layered manufacturing [1], classification of molecules by their biological activity, vibration control, geographic information systems, neighbors of the origin in the R 8 lattice, stress analysis, stability of robot grasps [5], spectrometry [6], constrained control allocation [8], robot navigation [17], micromagnetic modeling [38], and invariant sets of delta-sigma modulators <ref> [45] </ref>. Acknowledgments: A special thanks to Albert Marden and Victor Milenkovic for providing excellent environments for completing this work. The referees' comments greatly improved the presentation and content of this paper.
References-found: 45

