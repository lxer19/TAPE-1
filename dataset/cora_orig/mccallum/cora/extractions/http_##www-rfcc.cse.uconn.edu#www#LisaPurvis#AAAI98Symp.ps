URL: http://www-rfcc.cse.uconn.edu/www/LisaPurvis/AAAI98Symp.ps
Refering-URL: http://www-rfcc.cse.uconn.edu/www/LisaHome.html
Root-URL: 
Email: E-Mail: lpurvis@wrc.xerox.com  
Title: Synergy and Commonality in Case-Based and Constraint-Based Reasoning  
Author: Lisa Purvis 
Address: 800 Phillips Road, 128-51E Webster, NY 14580  
Affiliation: Xerox Corporation  
Abstract: Although Case-Based Reasoning (CBR) is a natural formulation for many problems, our previous work on CBR as applied to design made it apparent that there were elements of the CBR paradigm that prevented it from being more widely applied. At the same time, we were evaluating Constraint Satisfaction techniques for design, and found a commonality in motivation between repair-based constraint satisfaction problems (CSP) and case adaptation. This led us to combine the two methodologies in order to gain the advantages of CSP for case-based reasoning, allowing CBR to be more widely and flexibly applied. In combining the two methodologies, we found some unexpected synergy and commonality between the approaches. This paper describes the synergy and commonality that emerged as we combined case-based and constraint-based reasoning, and gives a brief overview of our continuing and future work on exploiting the emergent synergy when combining these reasoning modes. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Bellicha, A. </author> <year> 1994. </year> <title> Maintenance of solution in a dynamic constraint satisfaction problem. </title> <booktitle> In Artificial Intelligence in Engineering. </booktitle>
Reference: <author> Dechter, R., and Dechter, A. </author> <year> 1988. </year> <title> Belief mainte-nance in dynamic constraint networks. </title> <booktitle> In Proceedings of the Sixth National Conference on Artificial Intelligence, </booktitle> <volume> 37 - 42. </volume>
Reference-contexts: For these reasons, the dynamic CSP formalism has been developed, which relaxes the assumption that the problem variables and constraints remain fixed. The DCSP is a sequence of CSPs, where each one differs from the previous one by the addition or removal of some constraints <ref> (Dechter & Dechter 1988) </ref>. Both DCSP and CBR recognize that solving from scratch each time a new problem is encountered is inefficient. Significant effort is being placed on discovering ways by which to reuse solutions in DCSPs (Bel-licha 1994; Hentenryck 1990; Verfaillie & Schiex 1994).
Reference: <author> Hentenryck, P. V. </author> <year> 1990. </year> <title> Incremental constraint satisfaction in logic programming. </title> <booktitle> In Seventh International Conference on Logic Programming, </booktitle> <volume> 189 - 202. </volume>
Reference: <author> Hua, K., and Faltings, B. </author> <year> 1993. </year> <title> Exploring case-based building design cadre. </title> <booktitle> In Artificial Intelligence in Engineering Design, Analysis, and Manufacturing. </booktitle>
Reference-contexts: Benefits to CBR from using CSP formalism Several benefits to case-based adaptation were realized as a result of formulating cases as constraint satisfaction problems and using a constraint satisfaction algorithm to do the adaptation. Controlled Adaptation Controlling adaptation can typically be difficult, as described in <ref> (Hua & Falt-ings 1993) </ref>, where it was observed that changing one feature during the adaptation process may result in non-convergent behavior for the adaptation. CSP provides a technique by which to ensure convergence on a solution, thereby controlling the adaptation process.
Reference: <author> Leake, D. </author> <year> 1995. </year> <title> Cbr in context: The present and future. In Case Based Reasoning: Experiences, Lessons, and Future Directions. </title>
Reference-contexts: Case Adaptation as a Constraint Satisfaction Problem Adaptation is the component of a case-based reasoning system that adapts retrieved cases to fit new circumstances. It is often considered to be the most difficult problem in case-based reasoning <ref> (Leake 1995) </ref>. In order to enable an efficient and systematic adap-tation process that combines several cases, we developed a case combination methodology in which each existing case is represented as a discrete CSP.
Reference: <author> Miller, G. A. </author> <year> 1997. </year> <title> WordNet 1.5 Database (online dictionary, </title> <institution> at http://www.cogsci.princeton.edu/~wn). Princeton University, Cognitive Science Laboratory. </institution>
Reference-contexts: Introduction Synergy is defined as: The working together of two things to produce an effect that is greater than the sum of their individual effects <ref> (Miller 1997) </ref>. It is precisely this interaction between two entities that motivated us to investigate combining constraint satisfaction and case-based reasoning (CBR) to achieve case adaptation in our previous work (Purvis 1995; Purvis & Pu 1995).
Reference: <author> Minton, S.; Johnston, M.; and Laird, P. </author> <year> 1992. </year> <title> Minimizing conflicts: A heuristic repair method for constraint satisfaction and scheduling problems. </title> <journal> Artificial Intelligence 161-205. </journal>
Reference-contexts: At the same time, we were evaluating constraint satisfaction techniques for design and found a certain commonality in approach between repair-based constraint satisfaction (in the form of the minimum conflicts repair algorithm <ref> (Minton, Johnston, & Laird 1992) </ref>), and case adaptation. <p> The methodology then combines the cases that match the new problem situation into a valid solution for the new problem by applying the minimum conflicts repair algorithm <ref> (Minton, Johnston, & Laird 1992) </ref>. The formalized adaptation methodology enables application of this adaptation process to any problem that can be formulated as a discrete CSP.
Reference: <author> Purvis, L., and Athalye, S. </author> <year> 1997. </year> <title> Towards improving case adaptability with a genetic algorithm. </title> <booktitle> In Proceedings of the Second International Conference on Case-Based Reasoning, </booktitle> <pages> 403-412. </pages>
Reference-contexts: Our initial adaptability criterion is based on these two factors and is described in detail in <ref> (Purvis & Athalye 1997) </ref>. By imposing a constraint satisfaction formalism on the adaptation process, we were able to define this domain independent adaptability criterion. <p> Incorporating a Genetic Algorithm into the Problem Solver In order to improve case adaptability, we have begun to investigate the incorporation of a genetic algorithm into the adaptation process <ref> (Purvis & Athalye 1997) </ref>. The reason that the minimum conflicts CSP algorithm does not perform well in some case combinations is that it vacillates around a local minimum when the adaptability of the cases is low. An example of this is shown in Figure 2, where two cases are combined. <p> We have introduced a fitness function for the GA that will perturb a case solution so that when it is subsequently re-combined with the other cases, its adaptability has been improved enough to allow a more efficient combination <ref> (Purvis & Athalye 1997) </ref>. The fitness function we have developed is based on the principle that it is more important to satisfy those constraints that affect a larger number of variables. <p> These two criteria help us to favor those solutions that will not cause propagation into the neighboring case, and also to favor those that promise to have little intra-problem repair. This propagation potential measurement and its associated fitness function are described in detail in <ref> (Purvis & Athalye 1997) </ref>. Further Exploitable Commonalities Between CSP and CBR In continuing our work on combining CSP and CBR to achieve efficient and flexible case combination, we have noticed a similarity in the motivation and challenges faced by case adaptation and dynamic constraint satisfaction problems (DCSP).
Reference: <author> Purvis, L., and Pu, P. </author> <year> 1995. </year> <title> Adaptation using constraint satisfaction techniques. </title> <booktitle> In Proceedings of the First International Conference on Case-Based Reasoning, </booktitle> <address> Sesimbra, Portugal, </address> <pages> 289-300. </pages>
Reference-contexts: In our system COMPOSER <ref> (Purvis 1995) </ref>, which solved assembly sequence and configuration design problems with a combined CSP/CBR approach, we found both expected and unexpected benefits from integrating the two problem solving paradigms. <p> As we proceeded with our experiments, we found that there were several unexpected benefits to formalizing case adaptation as a constraint satisfaction problem. Increased Efficiency of Constraint Solving Our experiments showed that overall, starting with case solutions outperformed solving the CSP from random initial solutions <ref> (Purvis 1995) </ref>. However, we also found that in some situations, the case solutions did not provide better performance than from-scratch problem solving. This observation led us to another unexpected benefit of using CSP for case adaptation: the development of an adaptability criterion. <p> Our experiments with assembly sequence generation and configuration design problems showed that the minimum conflicts algorithm could not perform an efficient case combination when there were a large number of highly constrained, initially inconsistent edge variables (i.e. variables at the boundary between two cases) <ref> (Purvis 1995) </ref>. Our initial adaptability criterion is based on these two factors and is described in detail in (Purvis & Athalye 1997). By imposing a constraint satisfaction formalism on the adaptation process, we were able to define this domain independent adaptability criterion. <p> Thus, the experience of previous solutions can be re-used even in the first iteration of a dynamic CSP. Those sub-cases that best match the larger problem can be retrieved and combined via the constraint-based adaptation described in our previous work <ref> (Purvis 1995) </ref>. Second, a similarity measure can be defined that will search the case base full of previously solved problems for those that are 'most similar' to the new problem.
Reference: <author> Purvis, L. </author> <year> 1995. </year> <title> Intelligent Design Problem Solving Using Case-Based and Constraint-Based Techniques. </title> <type> Ph.D. Dissertation, </type> <institution> The University of Connecticut. </institution>
Reference-contexts: In our system COMPOSER <ref> (Purvis 1995) </ref>, which solved assembly sequence and configuration design problems with a combined CSP/CBR approach, we found both expected and unexpected benefits from integrating the two problem solving paradigms. <p> As we proceeded with our experiments, we found that there were several unexpected benefits to formalizing case adaptation as a constraint satisfaction problem. Increased Efficiency of Constraint Solving Our experiments showed that overall, starting with case solutions outperformed solving the CSP from random initial solutions <ref> (Purvis 1995) </ref>. However, we also found that in some situations, the case solutions did not provide better performance than from-scratch problem solving. This observation led us to another unexpected benefit of using CSP for case adaptation: the development of an adaptability criterion. <p> Our experiments with assembly sequence generation and configuration design problems showed that the minimum conflicts algorithm could not perform an efficient case combination when there were a large number of highly constrained, initially inconsistent edge variables (i.e. variables at the boundary between two cases) <ref> (Purvis 1995) </ref>. Our initial adaptability criterion is based on these two factors and is described in detail in (Purvis & Athalye 1997). By imposing a constraint satisfaction formalism on the adaptation process, we were able to define this domain independent adaptability criterion. <p> Thus, the experience of previous solutions can be re-used even in the first iteration of a dynamic CSP. Those sub-cases that best match the larger problem can be retrieved and combined via the constraint-based adaptation described in our previous work <ref> (Purvis 1995) </ref>. Second, a similarity measure can be defined that will search the case base full of previously solved problems for those that are 'most similar' to the new problem.
Reference: <author> Purvis, L. </author> <year> 1997. </year> <title> Dynamic constraint satisfaction using case-based reasoning techniques. </title> <booktitle> In Proceedings of the CP'97 Workshop on Dynamic Constraint Satisfaction. </booktitle>
Reference-contexts: Our initial adaptability criterion is based on these two factors and is described in detail in <ref> (Purvis & Athalye 1997) </ref>. By imposing a constraint satisfaction formalism on the adaptation process, we were able to define this domain independent adaptability criterion. <p> Incorporating a Genetic Algorithm into the Problem Solver In order to improve case adaptability, we have begun to investigate the incorporation of a genetic algorithm into the adaptation process <ref> (Purvis & Athalye 1997) </ref>. The reason that the minimum conflicts CSP algorithm does not perform well in some case combinations is that it vacillates around a local minimum when the adaptability of the cases is low. An example of this is shown in Figure 2, where two cases are combined. <p> We have introduced a fitness function for the GA that will perturb a case solution so that when it is subsequently re-combined with the other cases, its adaptability has been improved enough to allow a more efficient combination <ref> (Purvis & Athalye 1997) </ref>. The fitness function we have developed is based on the principle that it is more important to satisfy those constraints that affect a larger number of variables. <p> These two criteria help us to favor those solutions that will not cause propagation into the neighboring case, and also to favor those that promise to have little intra-problem repair. This propagation potential measurement and its associated fitness function are described in detail in <ref> (Purvis & Athalye 1997) </ref>. Further Exploitable Commonalities Between CSP and CBR In continuing our work on combining CSP and CBR to achieve efficient and flexible case combination, we have noticed a similarity in the motivation and challenges faced by case adaptation and dynamic constraint satisfaction problems (DCSP).
Reference: <author> Verfaillie, G., and Schiex, T. </author> <year> 1994. </year> <title> Solution reuse in dynamic constraint satisfaction problems. </title> <booktitle> In Proceedings of the 12th National Conference on Artificial Intelligence, </booktitle> <pages> 307-312. </pages>
References-found: 12

