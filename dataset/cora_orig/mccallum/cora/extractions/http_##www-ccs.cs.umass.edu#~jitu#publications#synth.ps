URL: http://www-ccs.cs.umass.edu/~jitu/publications/synth.ps
Refering-URL: http://www-ccs.cs.umass.edu/~jitu/publications.html
Root-URL: 
Email: e-mail: fjitu@cs.umass.edug  
Title: Can Intelligent Prefetching Make Web Browsing Faster? A Synthesis Project Report  
Author: by Jitendra D. Padhye 
Note: This work is supported in part by the National Science Foundation under contracts NCR-9508274 and CDA-9502639 and by the Office of Research and Development contract 95-F137600-000. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author and do not necessarily reflect the views of the National Science Foundation.  
Abstract: This synthesis project proposes the use of techniques developed in the field of artificial intelligence to predict behavior of clients in networked environments with a client-server architecture. Successful prediction of user behavior allows the system to utilize its resources more efficiently. Predicting future access patterns of clients may allow the system to fetch some of the data from the server in advance. This not only reduces the response time as seen by the client, but it may also help to reduce the burst load on the network. In our project we have chosen to concentrate on World Wide Web (WWW) based systems, as most of these systems are inherently stateless and asynchronous. This makes the problem of predicting user behavior more difficult, while at the same time it promises greater improvements in performance with successful predictions. As a starting point, we focus our attention on web-based intelligent tutoring systems. We believe that such systems will increasingly augment the traditional classroom model of teaching and learning as the Internet spreads wider and wider. The access times experienced by the users while downloading material from these systems will be a critical factor in their widespread acceptance. In addition, user modeling is an integral part of many intelligent tutoring systems. We hope to exploit these models to predict user access patterns. To test our ideas, we have built a World Wide Web based intelligent tutoring system called MANIC (Multimedia Asynchronous Networked Individualized CourseWare). The implementation includes a student model server which creates and maintains the models of individual students using this system. The server uses these models to predict future access patterns of the student. This information is used by a proxy to prefetch documents from the web server in an effort to improve response times experienced by the users of the system. All the major components of the system have been implemented and a beta version is currently being used to teach a 1-credit course in the UMass Computer Science Department. 
Abstract-found: 1
Intro-found: 1
Reference: [Beck96] <author> J. Beck, M. Stern and E. Haugsjaa, </author> <booktitle> "Applications of AI in Education", ACM Crossroads, </booktitle> <pages> pp. 11-15, </pages> <month> Fall </month> <year> 1996. </year>
Reference-contexts: Many ways of modeling student behavior have been explored by the researchers in intelligent tutoring system community. A good survey of AI based techniques for modeling student behavior may be found in <ref> [Beck96] </ref>. A comprehensive discussion on the use of student models to provide individualized instructions is presented in [Gree91]. In [Ship96] the authors describe a prefetching scheme based on student modeling that is very similar to ours.
Reference: [Bern96] <author> T. BernersLee, R. Fielding, H. Frystyk, </author> <title> "Hypertext Transfer Protocol - HTTP/1.0", Network Working Group, </title> <booktitle> RFC 1945, </booktitle> <month> May </month> <year> 1996. </year>
Reference-contexts: These decisions, (if the student model server is present) are communicated to the proxy via a special protocol that piggybacks on top of the normal HTTP (HyperText Transfer Protocol) communication. In absence of a student model server, the proxy automatically serves as a caching proxy <ref> [Bern96] </ref>. 3 User Tracking in MANIC Environment In this section we will briefly describe some of the implementation details of the MANIC architecture. We will restrict ourselves only to those aspects of implementation that are necessary to understand the next two sections, v.i.z. the proxy and the student model server. <p> A more detailed coverage of the implementation details is provided in [Kuro96]. Moreover, we will assume that the reader is familiar with the HTTP 1.0 protocol. This protocol is described in more detain in <ref> [Bern96] </ref>. One of the primary requirements to implement user modeling and prefetching is that the system be able to track its users. The HTTP protocol is a stateless protocol [Bern96] and hence special mechanisms like cookies [Gund96] are necessary to track users. <p> This protocol is described in more detain in <ref> [Bern96] </ref>. One of the primary requirements to implement user modeling and prefetching is that the system be able to track its users. The HTTP protocol is a stateless protocol [Bern96] and hence special mechanisms like cookies [Gund96] are necessary to track users. The MANIC architecture makes extensive use of single-session cookies. When a user registers with the MANIC web server, he/she is assigned a unique user id. <p> Anonymity: Although the HTTP protocol does not transmit a user id (unless cookies are in use <ref> [Bern96] </ref>), it does reveal the Internet address of the machine on which the browser is running, as it is essential for communication using TCP/IP protocol. The user may not want to reveal the address of his/her workstation, for reasons of security and privacy.
Reference: [Bhat96] <author> Manish Bhatia, </author> <title> "Web Audience Measurement: Issues, Challenges and Solutions", IPQC conference on Performance Measurement for Web Sites, </title> <address> San Francisco, </address> <month> Sept. </month> <note> 30th. 1996. http://www.nielsenmedia.com/sfpres, </note>
Reference-contexts: Modeling the behavior of users of a WWW site is of particular interest to companies involved in Internet commerce. A recent presentation by a Nilsen executive <ref> [Bhat96] </ref> discusses various aspects of this problem from a commercial viewpoint. Many ways of modeling student behavior have been explored by the researchers in intelligent tutoring system community. A good survey of AI based techniques for modeling student behavior may be found in [Beck96].
Reference: [Bowm94] <author> C. Bowman, P. Danzig, D. Hardy, U. Manber, M. Schwartz and D. Wessels, </author> <month> "Harvest: </month>
Reference-contexts: This feature can be particularly useful if several users route their access through the same proxy. In addition to reducing the latency perceived by the users, this also reduces the traffic on the network. Sophisticated architectures such as the Harvest System <ref> [Bowm94] </ref> have been developed towards this end. HTTP protocol provides several features to facilitate caching. The performance of a cache can be improved by judicious use of prefetching. <p> The work of [Tait91] and [Nobl95] is significant in this regard. Caching, especially "community" caching, has been recognized as viable way to reduce traffic on Internet backbone. The Harvest caching system described in <ref> [Bowm94] </ref> is an example of such a scheme. The Harvest system is an integrated set of tools for replicating and caching objects stored on various nodes across the Internet. It incorporates many protocols such as HTTP, NNTP and FTP. HTTP caching is also discussed in [Glas94] and [Luot94].
References-found: 4

