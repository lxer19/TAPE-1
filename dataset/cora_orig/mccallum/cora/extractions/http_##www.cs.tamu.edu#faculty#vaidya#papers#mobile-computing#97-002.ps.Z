URL: http://www.cs.tamu.edu/faculty/vaidya/papers/mobile-computing/97-002.ps.Z
Refering-URL: http://www.cs.tamu.edu/faculty/vaidya/mobile.html
Root-URL: http://www.cs.tamu.edu
Email: E-mail: shameed@cs.tamu.edu vaidya@cs.tamu.edu  
Phone: Phone: (409) 845-0512 Fax: (409) 847-8578  
Title: Efficient Algorithms for Scheduling Single and Multiple Channel Data Broadcast  
Author: Sohail Hameed Nitin H. Vaidya 
Date: February 11, 1997  
Address: College Station, TX 77843-3112, USA  
Affiliation: Department of Computer Science Texas A&M University  
Pubnum: Technical Report 97-002  
Abstract: With the increasing popularity of portable wireless computers, mechanisms to efficiently transmit information to such clients are of significant interest. The environment under consideration is asymmetric in that the information server has much more bandwidth available, as compared to the clients. It has been proposed that in such systems the server should broadcast the information periodically. A broadcast schedule determines what is broadcast by the server and when. In this report, we present an algorithm for scheduling broadcast in such environments. This algorithm is based on a fair queueing algorithm [6], and can be executed in O(log M) time, where M is the number of information items. The algorithm significantly improves the time-complexity over previously proposed broadcast scheduling algorithms. We evaluate performance of the algorithm and find it to be close to optimal. We also present an algorithm to coordinate broadcasts over multiple channels, and evaluate its performance for two channels. Key Words: Data broadcast, asymmetric communication environments, broadcast schedul ing, simulation results. fl Research reported is supported in part by Texas Advanced Technology Program grant 009741-052-C and National Science Foundation grant MIP-9423735. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Acharya, M. Franklin, and S. Zdonik, </author> <title> "Prefetching from a broadcast disk," </title> <booktitle> in 12th International Conference on Data Engineering, </booktitle> <month> February </month> <year> 1996. </year>
Reference-contexts: Each simulation was conducted for at least 8 million item requests by the clients. Other parameters used in the simulation are described below. 5.1 Demand Probability Distribution We assume that demand probabilities follow the Zipf distribution (similar assumptions are made by other researchers as well <ref> [1, 2, 3, 4, 26] </ref>). The Zipf distribution may be expressed as follows: p i = i=1 (1=i) 1 i M where is a parameter named access skew coefficient. Different values of the access skew coefficient yield different Zipf distributions. <p> The problem of data broadcasting has received much attention lately. The existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time <ref> [4, 3, 2, 1, 13, 16, 10, 8, 26] </ref> and schemes attempting to reduce the tuning time [14, 15]. However, proposed on-line algorithms have not been studied previously. Ammar and Wong [4, 26] have performed extensive research on broadcast scheduling and obtained many interesting results. <p> The Single Channel Scheduling Algorithm presented in this report is also on-line and results in an improvement by a factor of 2 in the mean access time as compared to the probabilistic on-line algorithm in [13, 25, 26]. Chiueh [8] and Acharya et al. <ref> [3, 2, 1] </ref> present schemes that transmit the more frequently used items more often. However, they do not use optimal broadcast frequencies. Our schemes, on the other hand, tend to use optimal frequencies.
Reference: [2] <author> S. Acharya, R. Alonso, M. Franklin, and S. Zdonik, </author> <title> "Broadcast disks data management for asymmetric communications environment," </title> <booktitle> in ACM SIGMOD Conference, </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: With the increasing popularity of portable wireless computers, mechanisms to efficiently transmit information to such clients are of significant interest [9]. For instance, such mechanisms could be used by a satellite [21] or a base station <ref> [2] </ref> to communicate information of common interest to wireless hosts. In the environment under consideration, the downstream communication capacity, from server to clients, is relatively much greater than the upstream communication capacity, from clients to server. Such environments are, hence, called asymmetric communication environments [2]. <p> satellite [21] or a base station <ref> [2] </ref> to communicate information of common interest to wireless hosts. In the environment under consideration, the downstream communication capacity, from server to clients, is relatively much greater than the upstream communication capacity, from clients to server. Such environments are, hence, called asymmetric communication environments [2]. In an asymmetric environment, broadcasting the information is an effective way of making the information available simultaneously to a large number of users. For asymmetric environment, researchers have previously proposed algorithms for designing broadcast schedules [2, 3, 4, 8, 10, 13, 14, 15, 16, 11, 20, 21, 25, 26]. <p> Access time is the amount of time a client has to wait for an information item that it needs. It is important to minimize the access time so as to decrease the idle time at the client. Several researchers have considered the problem of minimizing the access time <ref> [2, 3, 4, 8, 10, 15, 16, 25, 26] </ref>. The algorithms presented in this report are on-line algorithms. An on-line algorithm does not a priori generate the broadcast schedule. Instead, the algorithm determines which item to broadcast next when the server is ready to broadcast an item. <p> Each simulation was conducted for at least 8 million item requests by the clients. Other parameters used in the simulation are described below. 5.1 Demand Probability Distribution We assume that demand probabilities follow the Zipf distribution (similar assumptions are made by other researchers as well <ref> [1, 2, 3, 4, 26] </ref>). The Zipf distribution may be expressed as follows: p i = i=1 (1=i) 1 i M where is a parameter named access skew coefficient. Different values of the access skew coefficient yield different Zipf distributions. <p> The problem of data broadcasting has received much attention lately. The existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time <ref> [4, 3, 2, 1, 13, 16, 10, 8, 26] </ref> and schemes attempting to reduce the tuning time [14, 15]. However, proposed on-line algorithms have not been studied previously. Ammar and Wong [4, 26] have performed extensive research on broadcast scheduling and obtained many interesting results. <p> The Single Channel Scheduling Algorithm presented in this report is also on-line and results in an improvement by a factor of 2 in the mean access time as compared to the probabilistic on-line algorithm in [13, 25, 26]. Chiueh [8] and Acharya et al. <ref> [3, 2, 1] </ref> present schemes that transmit the more frequently used items more often. However, they do not use optimal broadcast frequencies. Our schemes, on the other hand, tend to use optimal frequencies.
Reference: [3] <author> S. Acharya, M. Franklin, and S. Zdonik, </author> <title> "Dissemination-based data delivery using broadcast disks," </title> <journal> IEEE Personal Communication, </journal> <pages> pp. 50-60, </pages> <month> December </month> <year> 1995. </year>
Reference-contexts: Access time is the amount of time a client has to wait for an information item that it needs. It is important to minimize the access time so as to decrease the idle time at the client. Several researchers have considered the problem of minimizing the access time <ref> [2, 3, 4, 8, 10, 15, 16, 25, 26] </ref>. The algorithms presented in this report are on-line algorithms. An on-line algorithm does not a priori generate the broadcast schedule. Instead, the algorithm determines which item to broadcast next when the server is ready to broadcast an item. <p> Each simulation was conducted for at least 8 million item requests by the clients. Other parameters used in the simulation are described below. 5.1 Demand Probability Distribution We assume that demand probabilities follow the Zipf distribution (similar assumptions are made by other researchers as well <ref> [1, 2, 3, 4, 26] </ref>). The Zipf distribution may be expressed as follows: p i = i=1 (1=i) 1 i M where is a parameter named access skew coefficient. Different values of the access skew coefficient yield different Zipf distributions. <p> The problem of data broadcasting has received much attention lately. The existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time <ref> [4, 3, 2, 1, 13, 16, 10, 8, 26] </ref> and schemes attempting to reduce the tuning time [14, 15]. However, proposed on-line algorithms have not been studied previously. Ammar and Wong [4, 26] have performed extensive research on broadcast scheduling and obtained many interesting results. <p> The Single Channel Scheduling Algorithm presented in this report is also on-line and results in an improvement by a factor of 2 in the mean access time as compared to the probabilistic on-line algorithm in [13, 25, 26]. Chiueh [8] and Acharya et al. <ref> [3, 2, 1] </ref> present schemes that transmit the more frequently used items more often. However, they do not use optimal broadcast frequencies. Our schemes, on the other hand, tend to use optimal frequencies.
Reference: [4] <author> M. H. Ammar and J. W. Wong, </author> <title> "On the optimality of cyclic transmission in teletext systems," </title> <journal> IEEE Transactions on Communications, </journal> <pages> pp. 68-73, </pages> <month> January </month> <year> 1987. </year>
Reference-contexts: Access time is the amount of time a client has to wait for an information item that it needs. It is important to minimize the access time so as to decrease the idle time at the client. Several researchers have considered the problem of minimizing the access time <ref> [2, 3, 4, 8, 10, 15, 16, 25, 26] </ref>. The algorithms presented in this report are on-line algorithms. An on-line algorithm does not a priori generate the broadcast schedule. Instead, the algorithm determines which item to broadcast next when the server is ready to broadcast an item. <p> Each simulation was conducted for at least 8 million item requests by the clients. Other parameters used in the simulation are described below. 5.1 Demand Probability Distribution We assume that demand probabilities follow the Zipf distribution (similar assumptions are made by other researchers as well <ref> [1, 2, 3, 4, 26] </ref>). The Zipf distribution may be expressed as follows: p i = i=1 (1=i) 1 i M where is a parameter named access skew coefficient. Different values of the access skew coefficient yield different Zipf distributions. <p> The problem of data broadcasting has received much attention lately. The existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time <ref> [4, 3, 2, 1, 13, 16, 10, 8, 26] </ref> and schemes attempting to reduce the tuning time [14, 15]. However, proposed on-line algorithms have not been studied previously. Ammar and Wong [4, 26] have performed extensive research on broadcast scheduling and obtained many interesting results. <p> However, proposed on-line algorithms have not been studied previously. Ammar and Wong <ref> [4, 26] </ref> have performed extensive research on broadcast scheduling and obtained many interesting results. One of the results obtained by Ammar and Wong is a special case of our square-root rule (Theorem 1).
Reference: [5] <author> J. Bennett and H. Zhang, </author> <title> "Worst-case fair packet fair queueing algorithms," </title> <type> tech. rep., </type> <institution> Computer Science, Carnegie Mellon University, </institution> <year> 1996. </year>
Reference-contexts: Linear time-complexity in number of items may become intolerable when the server has a large number of items to broadcast. Techniques like bucketing 3 have previously been used to reduce the complexity while sometimes compromising perfor-mance [21]. This report presents two algorithms, based on packet fair queueing <ref> [6, 5, 18, 19] </ref>, both having the time-complexity of O (log M ), where M is the number of information items. This is a significant improvement in time-complexity over previously proposed algorithms with comparable performance. <p> Note that l i s i is the fraction of broadcast bandwidth allocated to item i. It turns out that the above two conditions are similar to those imposed on "packet fair queueing" algorithms <ref> [5, 6] </ref>. Although the problem of packet fair queueing is not identical to broadcast scheduling, the similarities between these two problems motivated us to adapt a packet fair 7 queueing algorithm in [5, 6] to broadcast scheduling. The broadcast scheduling algorithm, thus obtained, is presented below. <p> It turns out that the above two conditions are similar to those imposed on "packet fair queueing" algorithms <ref> [5, 6] </ref>. Although the problem of packet fair queueing is not identical to broadcast scheduling, the similarities between these two problems motivated us to adapt a packet fair 7 queueing algorithm in [5, 6] to broadcast scheduling. The broadcast scheduling algorithm, thus obtained, is presented below. For each item i, the algorithm maintains two variables, B i and C i . <p> Bennett and Zhou [6] cite a O (log M ) fair queueing implementation that can be used to implement the above algorithm. Their implementation is apparently presented in <ref> [5] </ref>; however, we are unable to obtain a copy of [5] at this time. It is possible that their implementation of fair queueing is analogous to the implementation summarized below. Keshav [17] also presents a heap-based implementation of fair queueing. <p> Bennett and Zhou [6] cite a O (log M ) fair queueing implementation that can be used to implement the above algorithm. Their implementation is apparently presented in <ref> [5] </ref>; however, we are unable to obtain a copy of [5] at this time. It is possible that their implementation of fair queueing is analogous to the implementation summarized below. Keshav [17] also presents a heap-based implementation of fair queueing. However, his fair queueing algorithm is somewhat different from that in [6]. <p> Distribution. The simulation results labelled as sim are within 12.6% of analytical lower bounds labelled as opt. 6 Related Work The algorithms presented in this paper are based on an algorithm proposed previously for "packet fair queueing" <ref> [6, 5, 18, 19] </ref>. As noted earlier, the problem of optimal broadcast scheduling is closely related to design of good packet fair queueing algorithms. The problem of data broadcasting has received much attention lately. <p> Simulation results show that this algorithm also performs close to optimal. 8 Future Work The Single Channel Scheduling Algorithm, explained in Section 3, is based on the idea of Worst-case Fair Weighted Fair Queueing Algorithm (WF 2 Q) presented in <ref> [5] </ref> which addresses the issue of fair allocation of bandwidth to different sessions flowing through a node on a single outgoing link. The WF 2 Q algorithm tries to emulate Generalized Processor Sharing (GPS) [18] scheduling discipline.
Reference: [6] <author> J. C. R. Bennett and H. Zhang, </author> <title> "Hierarchical packet fair queueing algorithms," </title> <booktitle> in Sigcomm'96, </booktitle> <year> 1996. </year>
Reference-contexts: Linear time-complexity in number of items may become intolerable when the server has a large number of items to broadcast. Techniques like bucketing 3 have previously been used to reduce the complexity while sometimes compromising perfor-mance [21]. This report presents two algorithms, based on packet fair queueing <ref> [6, 5, 18, 19] </ref>, both having the time-complexity of O (log M ), where M is the number of information items. This is a significant improvement in time-complexity over previously proposed algorithms with comparable performance. <p> Note that l i s i is the fraction of broadcast bandwidth allocated to item i. It turns out that the above two conditions are similar to those imposed on "packet fair queueing" algorithms <ref> [5, 6] </ref>. Although the problem of packet fair queueing is not identical to broadcast scheduling, the similarities between these two problems motivated us to adapt a packet fair 7 queueing algorithm in [5, 6] to broadcast scheduling. The broadcast scheduling algorithm, thus obtained, is presented below. <p> It turns out that the above two conditions are similar to those imposed on "packet fair queueing" algorithms <ref> [5, 6] </ref>. Although the problem of packet fair queueing is not identical to broadcast scheduling, the similarities between these two problems motivated us to adapt a packet fair 7 queueing algorithm in [5, 6] to broadcast scheduling. The broadcast scheduling algorithm, thus obtained, is presented below. For each item i, the algorithm maintains two variables, B i and C i . <p> From among these items, the items with the smallest C i (suggested worst-case completion time) is chosen for broadcast. Using the heap data structure [12], steps 1 through 4 can be implemented such that, the average time complexity per iteration is O (log M ). Bennett and Zhou <ref> [6] </ref> cite a O (log M ) fair queueing implementation that can be used to implement the above algorithm. Their implementation is apparently presented in [5]; however, we are unable to obtain a copy of [5] at this time. <p> It is possible that their implementation of fair queueing is analogous to the implementation summarized below. Keshav [17] also presents a heap-based implementation of fair queueing. However, his fair queueing algorithm is somewhat different from that in <ref> [6] </ref>. We maintain two binary heaps, H B and H C . Heap H B has item with smallest B i value, among all its items, at its root. <p> Distribution. The simulation results labelled as sim are within 12.6% of analytical lower bounds labelled as opt. 6 Related Work The algorithms presented in this paper are based on an algorithm proposed previously for "packet fair queueing" <ref> [6, 5, 18, 19] </ref>. As noted earlier, the problem of optimal broadcast scheduling is closely related to design of good packet fair queueing algorithms. The problem of data broadcasting has received much attention lately.
Reference: [7] <author> P. M. Chen, E. K. Lee, G. A. Gibson, R. H. Katz, and D. A. Patterson, </author> <title> "RAID: High-performance, reliable secondary storage," </title> <journal> ACM Computing Surveys, </journal> <volume> vol. 26, no. 2, </volume> <pages> pp. 145-185, </pages> <year> 1994. </year>
Reference-contexts: Their solution to this problem is to use error control codes (ECC) for forward error correction, and a RAID-like approach (dubbed airRAID) that stripes the data. The server is required to transmit the stripes on different frequencies, much like the RAID approach spreads stripes of data on different disks <ref> [7] </ref>. ECC is not always sufficient to achieve forward error correction, therefore, uncorrectable errors remains an issue (which is ignored in the past work on data broadcast). We previously proposed algorithms [21, 24, 23] for scheduling broadcast in presence of errors, and for multiple channels.
Reference: [8] <author> T. Chiueh, </author> <title> "Scheduling for broadcast-based file systems," </title> <booktitle> in MOBIDATA Workshop, </booktitle> <month> November </month> <year> 1994. </year>
Reference-contexts: Access time is the amount of time a client has to wait for an information item that it needs. It is important to minimize the access time so as to decrease the idle time at the client. Several researchers have considered the problem of minimizing the access time <ref> [2, 3, 4, 8, 10, 15, 16, 25, 26] </ref>. The algorithms presented in this report are on-line algorithms. An on-line algorithm does not a priori generate the broadcast schedule. Instead, the algorithm determines which item to broadcast next when the server is ready to broadcast an item. <p> The problem of data broadcasting has received much attention lately. The existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time <ref> [4, 3, 2, 1, 13, 16, 10, 8, 26] </ref> and schemes attempting to reduce the tuning time [14, 15]. However, proposed on-line algorithms have not been studied previously. Ammar and Wong [4, 26] have performed extensive research on broadcast scheduling and obtained many interesting results. <p> The Single Channel Scheduling Algorithm presented in this report is also on-line and results in an improvement by a factor of 2 in the mean access time as compared to the probabilistic on-line algorithm in [13, 25, 26]. Chiueh <ref> [8] </ref> and Acharya et al. [3, 2, 1] present schemes that transmit the more frequently used items more often. However, they do not use optimal broadcast frequencies. Our schemes, on the other hand, tend to use optimal frequencies.
Reference: [9] <author> R. J. </author> <title> Douglas (Program Manager), "Battlefield awareness and data dissemination (BADD) program," program duration 1996-2000. </title> <note> Web site at http://maco.dc.isx.com/iso/battle/badd.html. </note>
Reference-contexts: 1 Introduction Mobile computing and wireless networks are fast-growing technologies that are making ubiquitous computing a reality. Mobile and wireless computing systems have found many applications, including Defense Messaging System (DMS), Digital Battlefield and Data Dissemination (BADD) <ref> [9] </ref>, and as a general-purpose computing tool. With the increasing popularity of portable wireless computers, mechanisms to efficiently transmit information to such clients are of significant interest [9]. <p> Mobile and wireless computing systems have found many applications, including Defense Messaging System (DMS), Digital Battlefield and Data Dissemination (BADD) <ref> [9] </ref>, and as a general-purpose computing tool. With the increasing popularity of portable wireless computers, mechanisms to efficiently transmit information to such clients are of significant interest [9]. For instance, such mechanisms could be used by a satellite [21] or a base station [2] to communicate information of common interest to wireless hosts. <p> However, the algorithm proposed in [23] does not perform as well as Multiple Channel Scheduling Algorithm proposed in this report (Section 4) does. Battlefield Awareness and Data Dissemination (BADD) Advanced Concept Technology Demonstration (ACTD) is a project in which our research work may be applied <ref> [9] </ref>. ACTD is managed and funded by DARPA Information System Services.
Reference: [10] <author> V. A. Gondhalekar, </author> <title> "Scheduling periodic wireless data broadcast," </title> <month> December </month> <year> 1995. </year> <title> M.S. </title> <type> Thesis, </type> <institution> The University of Texas at Austin. </institution>
Reference-contexts: Access time is the amount of time a client has to wait for an information item that it needs. It is important to minimize the access time so as to decrease the idle time at the client. Several researchers have considered the problem of minimizing the access time <ref> [2, 3, 4, 8, 10, 15, 16, 25, 26] </ref>. The algorithms presented in this report are on-line algorithms. An on-line algorithm does not a priori generate the broadcast schedule. Instead, the algorithm determines which item to broadcast next when the server is ready to broadcast an item. <p> The problem of data broadcasting has received much attention lately. The existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time <ref> [4, 3, 2, 1, 13, 16, 10, 8, 26] </ref> and schemes attempting to reduce the tuning time [14, 15]. However, proposed on-line algorithms have not been studied previously. Ammar and Wong [4, 26] have performed extensive research on broadcast scheduling and obtained many interesting results.
Reference: [11] <author> A. Gurijala and U. Pooch, </author> <title> "Propagating updates in asymmetric channels (a position paper)," </title> <booktitle> in First International Workshop on Satellite-based Information Services (WOS-BIS), </booktitle> <month> November </month> <year> 1996. </year>
Reference: [12] <author> E. Horowitz and S. Sahni, </author> <title> Fundamentals of Data Structures in Pascal. </title> <publisher> Computer Science Press, Inc., </publisher> <year> 1984. </year>
Reference-contexts: The items in set S are "ready" for transmission. From among these items, the items with the smallest C i (suggested worst-case completion time) is chosen for broadcast. Using the heap data structure <ref> [12] </ref>, steps 1 through 4 can be implemented such that, the average time complexity per iteration is O (log M ). Bennett and Zhou [6] cite a O (log M ) fair queueing implementation that can be used to implement the above algorithm.
Reference: [13] <author> T. Imielinski and S. Viswanathan, </author> <title> "Adaptive wireless information systems," </title> <booktitle> in Proceedings of SIGDBS (Special Interest Group in DataBase Systems) Conference, </booktitle> <month> October </month> <year> 1994. </year>
Reference-contexts: The problem of data broadcasting has received much attention lately. The existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time <ref> [4, 3, 2, 1, 13, 16, 10, 8, 26] </ref> and schemes attempting to reduce the tuning time [14, 15]. However, proposed on-line algorithms have not been studied previously. Ammar and Wong [4, 26] have performed extensive research on broadcast scheduling and obtained many interesting results. <p> Ammar and Wong [4, 26] have performed extensive research on broadcast scheduling and obtained many interesting results. One of the results obtained by Ammar and Wong is a special case of our square-root rule (Theorem 1). Wong [26] and Imielinski and Viswanathan <ref> [13, 25] </ref> present an on-line scheme that uses a probabilistic approach for deciding which item 16 Distribution. The simulation results labelled as sim are within 13.3% of analytical lower bounds labelled as opt. Distribution. <p> The Single Channel Scheduling Algorithm presented in this report is also on-line and results in an improvement by a factor of 2 in the mean access time as compared to the probabilistic on-line algorithm in <ref> [13, 25, 26] </ref>. Chiueh [8] and Acharya et al. [3, 2, 1] present schemes that transmit the more frequently used items more often. However, they do not use optimal broadcast frequencies. Our schemes, on the other hand, tend to use optimal frequencies.
Reference: [14] <author> T. Imielinski, S. Viswanathan, and B. R. Badrinath, </author> <title> "Power efficient filtering of data on air," </title> <booktitle> in 4th International Conference on Extending Database Technology, </booktitle> <month> March </month> <year> 1994. </year>
Reference-contexts: The existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time [4, 3, 2, 1, 13, 16, 10, 8, 26] and schemes attempting to reduce the tuning time <ref> [14, 15] </ref>. However, proposed on-line algorithms have not been studied previously. Ammar and Wong [4, 26] have performed extensive research on broadcast scheduling and obtained many interesting results. One of the results obtained by Ammar and Wong is a special case of our square-root rule (Theorem 1).
Reference: [15] <author> T. Imielinski, S. Viswanathan, and B. R. Badrinath, </author> <title> "Data on the air organization and access," </title> <type> manuscript. </type>
Reference-contexts: Access time is the amount of time a client has to wait for an information item that it needs. It is important to minimize the access time so as to decrease the idle time at the client. Several researchers have considered the problem of minimizing the access time <ref> [2, 3, 4, 8, 10, 15, 16, 25, 26] </ref>. The algorithms presented in this report are on-line algorithms. An on-line algorithm does not a priori generate the broadcast schedule. Instead, the algorithm determines which item to broadcast next when the server is ready to broadcast an item. <p> The existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time [4, 3, 2, 1, 13, 16, 10, 8, 26] and schemes attempting to reduce the tuning time <ref> [14, 15] </ref>. However, proposed on-line algorithms have not been studied previously. Ammar and Wong [4, 26] have performed extensive research on broadcast scheduling and obtained many interesting results. One of the results obtained by Ammar and Wong is a special case of our square-root rule (Theorem 1).
Reference: [16] <author> R. Jain and J. Werth, </author> <title> "Airdisks and airraid : Modelling and scheduling periodic wireless data broadcast (extended abstract)," </title> <type> Tech. Rep. DIMACS Tech. Report 95-11, </type> <institution> Rutgers University, </institution> <month> May </month> <year> 1995. </year> <month> 22 </month>
Reference-contexts: Access time is the amount of time a client has to wait for an information item that it needs. It is important to minimize the access time so as to decrease the idle time at the client. Several researchers have considered the problem of minimizing the access time <ref> [2, 3, 4, 8, 10, 15, 16, 25, 26] </ref>. The algorithms presented in this report are on-line algorithms. An on-line algorithm does not a priori generate the broadcast schedule. Instead, the algorithm determines which item to broadcast next when the server is ready to broadcast an item. <p> It can be shown that the item mean access time is minimized when all instances of the item are equally spaced. That is, s ij = s i for all j <ref> [16] </ref>. Hereafter, for our theoretical development, we assume that all instances of item i are spaced s i apart. <p> The problem of data broadcasting has received much attention lately. The existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time <ref> [4, 3, 2, 1, 13, 16, 10, 8, 26] </ref> and schemes attempting to reduce the tuning time [14, 15]. However, proposed on-line algorithms have not been studied previously. Ammar and Wong [4, 26] have performed extensive research on broadcast scheduling and obtained many interesting results. <p> Chiueh [8] and Acharya et al. [3, 2, 1] present schemes that transmit the more frequently used items more often. However, they do not use optimal broadcast frequencies. Our schemes, on the other hand, tend to use optimal frequencies. Jain and Werth <ref> [16] </ref> note that reducing the variance of spacing between consecutive instances of an item reduces the mean access time. The two schemes presented in this report do attempt to achieve a low variance. Jain and Werth [16] also note that errors may occur in transmission of data. <p> Jain and Werth <ref> [16] </ref> note that reducing the variance of spacing between consecutive instances of an item reduces the mean access time. The two schemes presented in this report do attempt to achieve a low variance. Jain and Werth [16] also note that errors may occur in transmission of data. Their solution to this problem is to use error control codes (ECC) for forward error correction, and a RAID-like approach (dubbed airRAID) that stripes the data.
Reference: [17] <author> S. Keshav, </author> <title> "On the efficient implementation of fair queueing," </title> <journal> Journal of Internetwork--ing: Research and Experience, </journal> <volume> vol. 2, </volume> <month> September </month> <year> 1991. </year>
Reference-contexts: Their implementation is apparently presented in [5]; however, we are unable to obtain a copy of [5] at this time. It is possible that their implementation of fair queueing is analogous to the implementation summarized below. Keshav <ref> [17] </ref> also presents a heap-based implementation of fair queueing. However, his fair queueing algorithm is somewhat different from that in [6]. We maintain two binary heaps, H B and H C . Heap H B has item with smallest B i value, among all its items, at its root.
Reference: [18] <author> A. K. Parekh and R. G. Gallagher, </author> <title> "A generalized processor sharing approach to flow control in integrated services networks: The single-node case," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 1, </volume> <month> June </month> <year> 1993. </year>
Reference-contexts: Linear time-complexity in number of items may become intolerable when the server has a large number of items to broadcast. Techniques like bucketing 3 have previously been used to reduce the complexity while sometimes compromising perfor-mance [21]. This report presents two algorithms, based on packet fair queueing <ref> [6, 5, 18, 19] </ref>, both having the time-complexity of O (log M ), where M is the number of information items. This is a significant improvement in time-complexity over previously proposed algorithms with comparable performance. <p> Distribution. The simulation results labelled as sim are within 12.6% of analytical lower bounds labelled as opt. 6 Related Work The algorithms presented in this paper are based on an algorithm proposed previously for "packet fair queueing" <ref> [6, 5, 18, 19] </ref>. As noted earlier, the problem of optimal broadcast scheduling is closely related to design of good packet fair queueing algorithms. The problem of data broadcasting has received much attention lately. <p> The WF 2 Q algorithm tries to emulate Generalized Processor Sharing (GPS) <ref> [18] </ref> scheduling discipline. GPS is an idealized algorithm that assumes that the packets are infinitely divisible and hence cannot be implemented in practice. WF 2 Q closely approximates GPS just like Single Channel Scheduling Algorithm closely approximates the ideal conditions given in Section 3.
Reference: [19] <author> M. Shreedhar and G. Varghese, </author> <title> "Efficient fair queuing using deficit round robin," </title> <booktitle> in SIGCOMM'95, </booktitle> <address> Cambridge, MA, USA, </address> <year> 1995. </year>
Reference-contexts: Linear time-complexity in number of items may become intolerable when the server has a large number of items to broadcast. Techniques like bucketing 3 have previously been used to reduce the complexity while sometimes compromising perfor-mance [21]. This report presents two algorithms, based on packet fair queueing <ref> [6, 5, 18, 19] </ref>, both having the time-complexity of O (log M ), where M is the number of information items. This is a significant improvement in time-complexity over previously proposed algorithms with comparable performance. <p> Distribution. The simulation results labelled as sim are within 12.6% of analytical lower bounds labelled as opt. 6 Related Work The algorithms presented in this paper are based on an algorithm proposed previously for "packet fair queueing" <ref> [6, 5, 18, 19] </ref>. As noted earlier, the problem of optimal broadcast scheduling is closely related to design of good packet fair queueing algorithms. The problem of data broadcasting has received much attention lately.
Reference: [20] <author> K. Stathatos, N. Roussopoulos, and J. S. Baras, </author> <title> "Adaptive data broadcasting using air-cache," </title> <booktitle> in First International Workshop on Satellite-based Information Services (WOS-BIS), </booktitle> <month> November </month> <year> 1996. </year>
Reference: [21] <author> N. H. Vaidya and S. Hameed, </author> <title> "Data broadcast in asymmetric environments," </title> <booktitle> in First International Workshop on Satellite-based Information Services (WOSBIS), </booktitle> <month> November </month> <year> 1996. </year>
Reference-contexts: With the increasing popularity of portable wireless computers, mechanisms to efficiently transmit information to such clients are of significant interest [9]. For instance, such mechanisms could be used by a satellite <ref> [21] </ref> or a base station [2] to communicate information of common interest to wireless hosts. In the environment under consideration, the downstream communication capacity, from server to clients, is relatively much greater than the upstream communication capacity, from clients to server. Such environments are, hence, called asymmetric communication environments [2]. <p> Instead, the algorithm determines which item to broadcast next when the server is ready to broadcast an item. On-line algorithms are of interest as they can quickly adapt to time-varying environments. The time-complexity involved in determining the next item to broadcast is critical. Our previous work <ref> [21] </ref> includes a number of on-line algorithms each with linear time complexity in number of items. Linear time-complexity in number of items may become intolerable when the server has a large number of items to broadcast. <p> Linear time-complexity in number of items may become intolerable when the server has a large number of items to broadcast. Techniques like bucketing 3 have previously been used to reduce the complexity while sometimes compromising perfor-mance <ref> [21] </ref>. This report presents two algorithms, based on packet fair queueing [6, 5, 18, 19], both having the time-complexity of O (log M ), where M is the number of information items. This is a significant improvement in time-complexity over previously proposed algorithms with comparable performance. <p> ECC is not always sufficient to achieve forward error correction, therefore, uncorrectable errors remains an issue (which is ignored in the past work on data broadcast). We previously proposed algorithms <ref> [21, 24, 23] </ref> for scheduling broadcast in presence of errors, and for multiple channels. In [23], we discussed broadcasting on two channels. However, the algorithm proposed in [23] does not perform as well as Multiple Channel Scheduling Algorithm proposed in this report (Section 4) does.
Reference: [22] <author> N. H. Vaidya and S. Hameed, </author> <title> "Data broadcast scheduling: On-line and off-line algorithms," </title> <type> Tech. Rep. 96-017, </type> <institution> Computer Science Department, Texas A&M University, College Station, </institution> <month> July </month> <year> 1996. </year>
Reference-contexts: Section 5 evaluates the performance of our algorithms. Related work is discussed in Section 6. A summary is presented in Section 7. 2 Theoretical Foundation for the Proposed Algorithms <ref> [22] </ref> First we introduce some terminology and notations to be used here [22]. * Database at the server is assumed to be divided into many information items. <p> Section 5 evaluates the performance of our algorithms. Related work is discussed in Section 6. A summary is presented in Section 7. 2 Theoretical Foundation for the Proposed Algorithms <ref> [22] </ref> First we introduce some terminology and notations to be used here [22]. * Database at the server is assumed to be divided into many information items. The items are not necessarily of the same length. * l i represents length of item i. * The time required to broadcast an item of unit length is referred to as one time unit. <p> Acknowledgements Thanks are due to P. Krishna for drawing our attention to the papers on packet fair queueing. 19 A Appendix: Proof of Theorem 1 <ref> [22] </ref> Proof: As instances of item i are spaced equally, the spacing between consecutive instances of item i is N=f i , where N = P M j=1 f j l j is the length of the broadcast cycle.
Reference: [23] <author> N. H. Vaidya and S. Hameed, </author> <title> "Improved algorithms for scheduling data broadcast," </title> <type> Tech. Rep. 96-029, </type> <institution> Computer Science Department, Texas A&M University, College Station, </institution> <month> December </month> <year> 1996. </year>
Reference-contexts: This is a significant improvement in time-complexity over previously proposed algorithms with comparable performance. The proposed algorithms can easily be extended to take transmission errors into account as wireless environments are subject to such errors <ref> [23] </ref>. In environments where different clients may listen to different number of broadcast channels (depending on how many they can afford), the schedules on different broadcast channels should be coordinated so as to minimize the access time for most clients. <p> The rest of the report is organized as follows. Section 2 introduces terminology, and derives some theoretical results that motivate the proposed algorithms. Section 3 presents proposed scheduling algorithm for single channel. This algorithm was also presented in <ref> [23] </ref>. However, the performance evaluation of the algorithm is done using different parameters in this report. Section 4 presents scheduling algorithm for broadcast on multiple channels. The algorithm presented here is completely different from the algorithm presented in [23]. Besides, the multiple channel algorithm in [23] gives scheme to schedule only <p> This algorithm was also presented in <ref> [23] </ref>. However, the performance evaluation of the algorithm is done using different parameters in this report. Section 4 presents scheduling algorithm for broadcast on multiple channels. The algorithm presented here is completely different from the algorithm presented in [23]. Besides, the multiple channel algorithm in [23] gives scheme to schedule only on two channels and is hard to generalize. <p> algorithm was also presented in <ref> [23] </ref>. However, the performance evaluation of the algorithm is done using different parameters in this report. Section 4 presents scheduling algorithm for broadcast on multiple channels. The algorithm presented here is completely different from the algorithm presented in [23]. Besides, the multiple channel algorithm in [23] gives scheme to schedule only on two channels and is hard to generalize. Whereas, the Multiple Channel Scheduling Algorithm presented in Section 4 of this report can be used to schedule any number of channels and performs better than the previously proposed algorithm. <p> Therefore, t optimal represents a lower bound on achievable overall mean access time. The lower bound, in general, is not achievable. However, as shown later, it is possible to achieve overall mean access time almost identical to the above lower bound. 3 Proposed Broadcast Scheduling Scheme <ref> [23] </ref> In this section, we consider the case when the information items are broadcast on a single channel. Section 4 considers multiple channel broadcast. As noted above, for an optimal schedule, spacing between consecutive instances of item i should be obtained using Equation 3. <p> ECC is not always sufficient to achieve forward error correction, therefore, uncorrectable errors remains an issue (which is ignored in the past work on data broadcast). We previously proposed algorithms <ref> [21, 24, 23] </ref> for scheduling broadcast in presence of errors, and for multiple channels. In [23], we discussed broadcasting on two channels. However, the algorithm proposed in [23] does not perform as well as Multiple Channel Scheduling Algorithm proposed in this report (Section 4) does. <p> ECC is not always sufficient to achieve forward error correction, therefore, uncorrectable errors remains an issue (which is ignored in the past work on data broadcast). We previously proposed algorithms [21, 24, 23] for scheduling broadcast in presence of errors, and for multiple channels. In <ref> [23] </ref>, we discussed broadcasting on two channels. However, the algorithm proposed in [23] does not perform as well as Multiple Channel Scheduling Algorithm proposed in this report (Section 4) does. <p> We previously proposed algorithms [21, 24, 23] for scheduling broadcast in presence of errors, and for multiple channels. In <ref> [23] </ref>, we discussed broadcasting on two channels. However, the algorithm proposed in [23] does not perform as well as Multiple Channel Scheduling Algorithm proposed in this report (Section 4) does. Battlefield Awareness and Data Dissemination (BADD) Advanced Concept Technology Demonstration (ACTD) is a project in which our research work may be applied [9].
Reference: [24] <author> N. H. Vaidya and S. Hameed, </author> <title> "Scheduling data broadcast in asymmetric communication environments," </title> <type> Tech. Rep. 96-022, </type> <institution> Computer Science Department, Texas A&M University, College Station, </institution> <month> November </month> <year> 1996. </year>
Reference-contexts: One can also conceive an environment in which the server broadcasts information on multiple channels <ref> [24] </ref>, and different clients listen to 9 different number of channels depending on the desired quality of service (as characterized by the mean access time). In this section, we present an on-line algorithm for scheduling broadcast on multiple channels. Let c denote the total number of channels available to server. <p> In addition to these length distributions, we also use a random length distribution obtained by choosing lengths randomly distributed from 1 to 10 with uniform probability. Figure 6 shows the Random Length Distribution so generated. We have used these distributions in our previous work <ref> [24] </ref> as well. 0 4 8 12 Length Item Number random : : : : : : : : : : : : : : : : : : : : : : :: : : : :: : : : : : : : : : : : : : <p> ECC is not always sufficient to achieve forward error correction, therefore, uncorrectable errors remains an issue (which is ignored in the past work on data broadcast). We previously proposed algorithms <ref> [21, 24, 23] </ref> for scheduling broadcast in presence of errors, and for multiple channels. In [23], we discussed broadcasting on two channels. However, the algorithm proposed in [23] does not perform as well as Multiple Channel Scheduling Algorithm proposed in this report (Section 4) does.
Reference: [25] <author> S. Viswanathan, </author> <title> Publishing in Wireless and Wireline Environments. </title> <type> PhD thesis, </type> <institution> Rut-gers, </institution> <month> November </month> <year> 1994. </year>
Reference-contexts: Access time is the amount of time a client has to wait for an information item that it needs. It is important to minimize the access time so as to decrease the idle time at the client. Several researchers have considered the problem of minimizing the access time <ref> [2, 3, 4, 8, 10, 15, 16, 25, 26] </ref>. The algorithms presented in this report are on-line algorithms. An on-line algorithm does not a priori generate the broadcast schedule. Instead, the algorithm determines which item to broadcast next when the server is ready to broadcast an item. <p> Ammar and Wong [4, 26] have performed extensive research on broadcast scheduling and obtained many interesting results. One of the results obtained by Ammar and Wong is a special case of our square-root rule (Theorem 1). Wong [26] and Imielinski and Viswanathan <ref> [13, 25] </ref> present an on-line scheme that uses a probabilistic approach for deciding which item 16 Distribution. The simulation results labelled as sim are within 13.3% of analytical lower bounds labelled as opt. Distribution. <p> The Single Channel Scheduling Algorithm presented in this report is also on-line and results in an improvement by a factor of 2 in the mean access time as compared to the probabilistic on-line algorithm in <ref> [13, 25, 26] </ref>. Chiueh [8] and Acharya et al. [3, 2, 1] present schemes that transmit the more frequently used items more often. However, they do not use optimal broadcast frequencies. Our schemes, on the other hand, tend to use optimal frequencies.
Reference: [26] <author> J. W. Wong, </author> <title> "Broadcast delivery," </title> <booktitle> in Proceedings of IEEE, </booktitle> <pages> pp. 1566-1577, </pages> <month> December </month> <year> 1988. </year>
Reference-contexts: Access time is the amount of time a client has to wait for an information item that it needs. It is important to minimize the access time so as to decrease the idle time at the client. Several researchers have considered the problem of minimizing the access time <ref> [2, 3, 4, 8, 10, 15, 16, 25, 26] </ref>. The algorithms presented in this report are on-line algorithms. An on-line algorithm does not a priori generate the broadcast schedule. Instead, the algorithm determines which item to broadcast next when the server is ready to broadcast an item. <p> Each simulation was conducted for at least 8 million item requests by the clients. Other parameters used in the simulation are described below. 5.1 Demand Probability Distribution We assume that demand probabilities follow the Zipf distribution (similar assumptions are made by other researchers as well <ref> [1, 2, 3, 4, 26] </ref>). The Zipf distribution may be expressed as follows: p i = i=1 (1=i) 1 i M where is a parameter named access skew coefficient. Different values of the access skew coefficient yield different Zipf distributions. <p> The problem of data broadcasting has received much attention lately. The existing schemes can be roughly divided into two categories (some schemes may actually belong to both categories): Schemes attempting to reduce the access time <ref> [4, 3, 2, 1, 13, 16, 10, 8, 26] </ref> and schemes attempting to reduce the tuning time [14, 15]. However, proposed on-line algorithms have not been studied previously. Ammar and Wong [4, 26] have performed extensive research on broadcast scheduling and obtained many interesting results. <p> However, proposed on-line algorithms have not been studied previously. Ammar and Wong <ref> [4, 26] </ref> have performed extensive research on broadcast scheduling and obtained many interesting results. One of the results obtained by Ammar and Wong is a special case of our square-root rule (Theorem 1). <p> However, proposed on-line algorithms have not been studied previously. Ammar and Wong [4, 26] have performed extensive research on broadcast scheduling and obtained many interesting results. One of the results obtained by Ammar and Wong is a special case of our square-root rule (Theorem 1). Wong <ref> [26] </ref> and Imielinski and Viswanathan [13, 25] present an on-line scheme that uses a probabilistic approach for deciding which item 16 Distribution. The simulation results labelled as sim are within 13.3% of analytical lower bounds labelled as opt. Distribution. <p> The Single Channel Scheduling Algorithm presented in this report is also on-line and results in an improvement by a factor of 2 in the mean access time as compared to the probabilistic on-line algorithm in <ref> [13, 25, 26] </ref>. Chiueh [8] and Acharya et al. [3, 2, 1] present schemes that transmit the more frequently used items more often. However, they do not use optimal broadcast frequencies. Our schemes, on the other hand, tend to use optimal frequencies.
References-found: 26

