URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/CS-TR-91-1000/CS-TR-91-1000.ps.Z
Refering-URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/CS-TR-91-1000/
Root-URL: http://www.cs.wisc.edu
Title: A Model for Estimating Trace-Sample Miss Ratios  
Author: David A. Wood Mark D. Hill R. E. Kessler 
Keyword: Index Terms Cache memory, performance evaluation, cold-start behavior, trace-driven simulation, sampling techniques  
Address: 1210 West Dayton Street Madison, WI 53706  
Affiliation: Computer Science Department University of Wisconsin Madison  school at the University of Wisconsin-Madison.  University of Wisconsin-Madison.  
Note: Appears in the proceedings of "ACM SIGMETRICS Conference on Measurement and Modeling of Computer Systems",  This work is supported in part by the National Science Foundation (MIPS-8957278 and CCR-8902536), A.T.& T. Bell Laboratories, Cray Research Foundation, Digital Equipment Corporation, and the graduate  R. E. Kessler has been supported by a summer internship at Digital Equipment Corporation, and graduate fellowships from the National Science Foundation and the  
Email: david@cs.wisc.edu  
Date: May 1991.  
Abstract: In this paper we make three contributions regarding . First, we provide empirical evidence that is much larger than the overall miss ratio (e.g., 0.40 vs. 0.02). Prior work suggests that they should be the same. Second, we develop a model that explains our empirical results for long trace samples. In our model, each block frame is either live, if its next reference will hit, or dead, if its next reference will miss. We model each block frame as an alternating renewal process, and use the renewal-reward theorem to show that is simply the fraction of time block frames are dead. Finally, we extend the model to handle short trace samples and use it to develop several estimators of . Trace-driven simulation results show these estimators lead to better estimates of overall miss ratios than do previous methods. 
Abstract-found: 1
Intro-found: 1
Reference: [Bick77] <author> Peter J. Bickel and Kjell A. Doksum. </author> <title> Mathematical Statistics. </title> <publisher> Holden-Day, Inc., </publisher> <address> San Francisco, </address> <year> 1977. </year>
Reference: [Borg90] <author> Anita Borg, R. E. Kessler, and David W. Wall. </author> <title> Generation and analysis of very long address traces. </title> <booktitle> In Proceedings of the 17th Annual International Symposium on Computer Architecture, </booktitle> <pages> pages 270-279, </pages> <year> 1990. </year>
Reference-contexts: Trace-driven simulation is the most-commonly-used technique for evaluating the performance of cache memories [Smit82]. Trace-sampling is a refinement that simulates multiple trace samples to estimate the miss ratio of a long base trace [Laha88]. Since most programs exhibit non-stationary miss ratios over very long intervals <ref> [Borg90] </ref>, a single long trace sample may not be representative of the entire program. Instead, if we can accurately estimate the miss ratio of short samples, then the average over multiple short samples should more accurately predict the true miss ratio. <p> We tried to minimize the effects of this bias by using long address traces. We used five address traces gathered from a DEC Titan <ref> [Borg90] </ref>, that contain multiprogramming behavior, but not operating system references. The traces mult1 and mult2 are multiprogramming workloads, consisting of both software development and CAD applications. Tv is a VLSI circuit timing verifier, sor is an implementation of the successive overrelaxation algorithm, and tree is a compiled Scheme program.
Reference: [East78] <author> Malcom C. Easton and Ronald Fagin. </author> <title> Cold-start vs. warm-start miss ratios. </title> <journal> Communications of the ACM, </journal> <volume> 21(10), </volume> <month> October </month> <year> 1978. </year>
Reference-contexts: Thus, when the simulator references a block frame for the first time, it cannot determine whether or not the reference actually misses. These potential misses have been called cold-start misses <ref> [East78] </ref> because they occur at the beginning of a simulation; we prefer to call them unknown references since they may or may not be actual misses.
Reference: [Klei75] <author> Leonard Kleinrock. </author> <title> Queueing Systems Volume 1: Theory. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1975. </year>
Reference-contexts: The simulator also ignores generations terminated by the end of the trace. Because long generations are more likely to be excluded, as a result of the inspection paradox [Wolf89, Ross83] (also known as the residual life paradox <ref> [Klei75] </ref>), these simulation artifacts tend to bias the means downwards. We tried to minimize the effects of this bias by using long address traces. We used five address traces gathered from a DEC Titan [Borg90], that contain multiprogramming behavior, but not operating system references.
Reference: [Laha88] <author> S. Laha, J. H. Patel, and R. K. Iyer. </author> <title> Accurate low-cost methods for performance evaluation of cache memory systems. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 37(11) </volume> <pages> 1325-1336, </pages> <month> November </month> <year> 1988. </year>
Reference-contexts: Trace-driven simulation is the most-commonly-used technique for evaluating the performance of cache memories [Smit82]. Trace-sampling is a refinement that simulates multiple trace samples to estimate the miss ratio of a long base trace <ref> [Laha88] </ref>. Since most programs exhibit non-stationary miss ratios over very long intervals [Borg90], a single long trace sample may not be representative of the entire program.
Reference: [Mend90] <author> Abraham Mendelson, Dominique Thiebaut, and Dhiraj Pradhan. </author> <title> Modeling live and dead lines in cache memory systems. </title> <type> Technical Report TR-90-CSE-14, </type> <institution> Dept. of Electrical and Computer Engineering, University of Massachusetts, </institution> <year> 1990. </year>
Reference-contexts: While this result may seem obvious, we need the formalism of renewal theory to extend the model in Section 5. In related work, Puzak [Puza85] and Mendelson, Thiebaut, and Pradhan <ref> [Mend90] </ref> define the terms live and dead slightly differently. Their definitions apply to blocks, rather than block frames: they call a block live if it is in the cache and will be referenced again, and call it dead otherwise.
Reference: [Puza85] <author> T. R. Puzak. </author> <title> Cache Memory Design. </title> <type> PhD thesis, </type> <institution> University of Massachusetts, </institution> <address> Amherst, MA, </address> <year> 1985. </year>
Reference-contexts: While this result may seem obvious, we need the formalism of renewal theory to extend the model in Section 5. In related work, Puzak <ref> [Puza85] </ref> and Mendelson, Thiebaut, and Pradhan [Mend90] define the terms live and dead slightly differently. Their definitions apply to blocks, rather than block frames: they call a block live if it is in the cache and will be referenced again, and call it dead otherwise.
Reference: [Ross83] <author> Sheldon M. Ross. </author> <title> Stochastic Processes. </title> <publisher> John Wi-ley and Sons, </publisher> <address> New York, </address> <year> 1983. </year>
Reference-contexts: In practice, these assumptions are rarely strictly true for individual cache block frames. Nevertheless, they are close enough that the model yields good results, as shown in the next section. The renewal-reward theorem states that random events see time-average behavior <ref> [Wolf89, Ross83] </ref>. In other words, the probability that a random time t falls within a block frame's dead time is simply the fraction of time that the block frame is dead. <p> To eliminate cold-start effects from our validation experiments, the simulator does not count generations that begin with an unknown reference. The simulator also ignores generations terminated by the end of the trace. Because long generations are more likely to be excluded, as a result of the inspection paradox <ref> [Wolf89, Ross83] </ref> (also known as the residual life paradox [Klei75]), these simulation artifacts tend to bias the means downwards. We tried to minimize the effects of this bias by using long address traces.
Reference: [Smit82] <author> Alan Jay Smith. </author> <title> Cache memories. </title> <journal> ACM Computing Surveys, </journal> <volume> 14(3) </volume> <pages> 473-530, </pages> <month> September </month> <year> 1982. </year>
Reference-contexts: 1 Introduction A cache is a high-speed buffer that holds recently-used parts of main memory <ref> [Smit82] </ref>. When a reference is not found in the cache (a miss), the block of data that contains it is transferred from main memory and stored in a block frame in the cache. <p> An Away set-associative cache has A block frames per set (associativity A) and SA block frames overall. Trace-driven simulation is the most-commonly-used technique for evaluating the performance of cache memories <ref> [Smit82] </ref>. Trace-sampling is a refinement that simulates multiple trace samples to estimate the miss ratio of a long base trace [Laha88]. Since most programs exhibit non-stationary miss ratios over very long intervals [Borg90], a single long trace sample may not be representative of the entire program.
Reference: [Ston90] <author> Harold S. Stone. </author> <title> High-Performance Computer Architecture. </title> <publisher> Addison Wesley, </publisher> <address> second edition, </address> <year> 1990. </year>
Reference-contexts: The second technique fares no better; filling the large cache requires an absolute minimum of 128,000 references, and many times that in practice. More recently, Laha, et al.[Laha88], and Stone <ref> [Ston90] </ref> have proposed similar techniques that warmup each set independently. Rather than waiting for the entire cache to fill, they record metrics for each set that has filled. By not counting unknown references, these approaches implicitly assume that unknown references behave the same as randomly selected references. <p> However, ^m hot has the unfortunate property of always under predicting the true miss ratio, which could lead to optimistic cache designs. Nevertheless, the hot-start and cold-start miss ratios are useful as bounds, since the true miss ratio must lie between them <ref> [Ston90] </ref>. For sufficiently large samples, i.e., large values of M , the relative difference between ^m cold and ^m hot becomes small, making it reasonable to ignore the difference. A more intuitive estimate assumes that unknown references miss at the same rate as all other references. <p> If we pick a single reference at random, it is no more or less likely to miss than any other, thus it misses with probability m (^ ss = ^m ss ): ^m ss = R M (4) Stone originally proposed this steady-state estimate for direct-mapped caches <ref> [Ston90] </ref>, which is equivalent to excluding the unknown references from the computation of the miss ratio. He used a different justification, arguing that references should only be counted if they access a primed set.
Reference: [Wolf89] <author> Ronald W. Wolff. </author> <title> Stochastic Modeling and the Theory of Queues. </title> <publisher> Prentice-Hall, </publisher> <year> 1989. </year> <month> 11 </month>
Reference-contexts: In practice, these assumptions are rarely strictly true for individual cache block frames. Nevertheless, they are close enough that the model yields good results, as shown in the next section. The renewal-reward theorem states that random events see time-average behavior <ref> [Wolf89, Ross83] </ref>. In other words, the probability that a random time t falls within a block frame's dead time is simply the fraction of time that the block frame is dead. <p> To eliminate cold-start effects from our validation experiments, the simulator does not count generations that begin with an unknown reference. The simulator also ignores generations terminated by the end of the trace. Because long generations are more likely to be excluded, as a result of the inspection paradox <ref> [Wolf89, Ross83] </ref> (also known as the residual life paradox [Klei75]), these simulation artifacts tend to bias the means downwards. We tried to minimize the effects of this bias by using long address traces. <p> To correct for this effect, we need to predict the probability that a block frame is dead at time t given that it is referenced in the trace. We do this by applying Bayes' Rule <ref> [Wolf89] </ref> to our alternating renewal process. Consider a trace sample containing N references beginning at some random time t. Let X i be the event that an arbitrary block frame i is dead at time t. <p> The renewal-reward theorem <ref> [Wolf89] </ref> states that: P fY d (t) N g = E [D j ] x=1 where the range on the sum begins at 1 because by definition P fD j = 0g = 0.
References-found: 11

