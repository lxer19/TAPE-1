URL: http://www.cs.ucl.ac.uk/staff/L.Dekker/pubs/galspace.ps
Refering-URL: http://www.cs.ucl.ac.uk/research/nuclear/nuclearpapers.html
Root-URL: http://www.cs.ucl.ac.uk
Email: J.Kingdon@cs.ucl.ac.uk, L.Dekker@cs.ucl.ac.uk  
Title: The Shape of Space  
Author: Jason Kingdon, Laura Dekker 
Address: Gower Street London WC1E 6BT, UK  
Affiliation: Intelligent Systems Lab Department of Computer Science University College London  
Abstract: Typically a search problem is posed as an optimisation task in which a cost, or fitness, function must be maximised or minimised, subject to various parameter constraints. This paper discusses the shape of space, in terms of search algorithms. We point out that it is the combination of representation and traversal operators that define an algorithm's view of a given search problem, and hence gives rise to a fitness landscape. In this sense a fitness landscape only exists in terms of a given search algorithm, and that notions of landscape difficulty are therefore algorithm dependent. We demonstrate these issues for genetic algorithms (GAs) and encoded hill-climbers. We show that both styles of algorithm have attractive features in terms of the way a landscape can be dynamically adjusted, providing a simple means for applying multiple search strategies to a given search problem. We illustrate the techniques for a range of standard cost functions and algorithms. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Forrest, S & Mitchell, </author> <title> M (1993). Relative Building-Block Fitness and Building-Block Hypothesis. </title> <address> FOGA II San Mateo California, </address> <publisher> Morgan Kaufman.109:126. </publisher>
Reference-contexts: To illustrate the effects we define a set of twelve search algorithms making use of static and dynamic base-change representations seven GAs, four hill-climbers. Each algorithm was tested, along with a random sampling control algorithm, on a range of standard test functions, including two Royal Road <ref> [1] </ref>, and a multiple-deceptive GA problem. Where a base change caused an over-specification of the search space, the fitness value for points created out-of-range was set to zero.
Reference: 2. <author> Goldberg, </author> <title> DE (1989). Genetic Algorithms, in Search Optimisation and Machine Learning . MA: </title> <publisher> Addison Wesley. </publisher>
Reference-contexts: The important rle played by hyperplanes in the search is underlined by 2 Which we refer to here as simple crossover . traditional schema analysis and the introduction of the * notation <ref> [2] </ref>. The selection operator acts as a sampling scheme for an existing population and therefore introduces no new points of the search space. However, selection is generally the only point of contact between the GA and the fitness function, and is therefore fundamental to the search trajectory.
Reference: 3. <author> Grefenstette, </author> <title> J (1993). Deception Considered Harmful. </title> <address> FOGA II San Mateo California, </address> <publisher> Morgan Kaufman. 75:91. </publisher>
Reference-contexts: This holds if all edges, faces and sub 4 In other words DF1 is the result of static building block analysis <ref> [3] </ref>.
Reference: 4. <author> Horn, J. & Goldberg, </author> <title> DE (1994). GA Difficulty and the Modality of Fitness Landscapes. </title> <type> IlliGAL Report No. 94006. </type>
Reference-contexts: makes a search space hard or easy? Some progress has been made 1 A similar argument has been adopted by [5]. 2 in this area, with work focusing on the notions of modality (the number of peaks), isolation of the optimum (needle-in-a-haystack) and deception (problems that mislead a search heuristic) <ref> [4] </ref>. It seems intuitive that multimodal functions should be hard for both GAs and hill-climbers, but that a unimodal function should be easy. <p> It can be shown, however, that a maximally multimodal function (one where every suboptimum is located adjacent to a sub-minimum) can be easy for a GA to solve. Similarly, a unimodal function, such as the snake-in-a-box <ref> [4] </ref> can be easy for a hill-climber to traverse, but the path it takes is impractically long, forcing it to sample on average half of the search space as it moves towards the optimum.
Reference: 5. <author> Jones, </author> <title> T (1994). A Model of Landscapes. </title> <institution> Santa Fe Inst. Tec Rep. </institution>
Reference-contexts: Moving Through the Search Space How do the various search algorithms move through a problem space, and what makes a search space hard or easy? Some progress has been made 1 A similar argument has been adopted by <ref> [5] </ref>. 2 in this area, with work focusing on the notions of modality (the number of peaks), isolation of the optimum (needle-in-a-haystack) and deception (problems that mislead a search heuristic) [4].
Reference: 6. <author> Leipins, G & Vose, </author> <title> M (1990). Representation Issues in Genetic Algorithms. </title> <journal> Journal of Exp. and Theo. Art. </journal> <volume> Intel , 2 </volume> <pages> 101-115. </pages>
Reference: 7. <author> Mahfoud, SW & Goldberg, </author> <title> DE (1992). Parallel Recombinative Simulated Annealing: A Genetic Algorithm. </title> <type> IlliGAL Report No. 92002. </type>
Reference-contexts: 1. Introduction Recent interest in the development of general-purpose computational search techniques has broadened the scope of stochastic search algorithms. From stochastic hill-climbers, taboo search, simulated annealing, evolutionary strategies and GAs, hybridisations have emerged, such as recombinative simulated annealing <ref> [7] </ref> and dynamic hill climbing [11], which blur the distinctions between the different approaches.
Reference: 8. <author> Mathias, K & Whitley, </author> <title> D (1993). Remapping Hyperspace During Genetic Search: Canonical Delta Folding. </title> <address> FOGA II San Mateo California, </address> <publisher> Morgan Kaufman. 167:186. </publisher>
Reference-contexts: Clearly an arbitrary encoding requires a mapping between each of the encoded and decoded points, which is not practical. Two ways of producing a manageable way to reshape space are delta-folding <ref> [8] </ref> and dynamic hill-climbing [11]. These have proven to be successful for solving certain problems. Another method for achieving a similar effect is to use higher base encodings, dynamically changing, so as to remap the problem space.
Reference: 9. <author> Syswerda, </author> <title> G (1993). Simulated Crossover in Genetic Algorithms. </title> <address> FOGA II San Mateo California, </address> <publisher> Morgan Kaufman. </publisher>
Reference-contexts: A switch to base 5 creates the connected, and crossoverstable points 30 and 00. Figure 6 gives the results of simulation. 100 200 300 Base 2 Base 5 Population Average Fitness Generation Number Optimum Deceptive Optimum Population size of 20. Syswerda <ref> [9] </ref>, has studied DF2 using different styles of GA, testing different forms of crossover (i.e., one-point, two-point, uniform etc.), and various population sizes.
Reference: 10. <author> Wolpert, </author> <title> D & Macready, W (1995) No Free Lunch Theorems for Search. </title> <institution> Santa Fe Inst. </institution> <note> Tec Report SF1-TR-95-02-010. </note>
Reference-contexts: It is suggested that for real-world problems, in which little is known a priori about the cost function, multiple search strategies are a pragmatic response to the limitations set down by recent theoretical results <ref> [10] </ref>. We illustrate the techniques for a range of standard cost functions. 2. <p> Moreover, on the basis of this information it is impossible to conclude that algorithm A is in any universal sense better than algorithm B for all given problems (for precise statement see <ref> [10] </ref>). However, what has emerged from the above is the relative ease by which a function landscape can be reshaped by changing operators or encodings. This provides a simple way for creating and testing radically different algorithms that view, or define, the function landscape in new ways. <p> Two facts make this consideration largely redundant. In a formal sense, an algorithm that uses dynamic encodings is no better and no worse than any other. This unconsoling but true fact is guaranteed by <ref> [10] </ref>. In a more practical sense perfect encodings are not necessary. If the encoding aids the search at a given instant, all well and good.
Reference: 11. <author> Yuret, D & de la Maza, </author> <title> M (1993). Dynamic Hill-Climbing: Overcoming the Limitations of Optimization Techniques. </title> <booktitle> 2nd Turkish Symp on Art. Intel. and Neural Networks. </booktitle> <address> 208:212. </address>
Reference-contexts: 1. Introduction Recent interest in the development of general-purpose computational search techniques has broadened the scope of stochastic search algorithms. From stochastic hill-climbers, taboo search, simulated annealing, evolutionary strategies and GAs, hybridisations have emerged, such as recombinative simulated annealing [7] and dynamic hill climbing <ref> [11] </ref>, which blur the distinctions between the different approaches. <p> Clearly an arbitrary encoding requires a mapping between each of the encoded and decoded points, which is not practical. Two ways of producing a manageable way to reshape space are delta-folding [8] and dynamic hill-climbing <ref> [11] </ref>. These have proven to be successful for solving certain problems. Another method for achieving a similar effect is to use higher base encodings, dynamically changing, so as to remap the problem space.
References-found: 11

