URL: ftp://ftp.cc.gatech.edu/pub/coc/tech_reports/1995/GIT-CC-95-28.ps.Z
Refering-URL: http://www.cs.gatech.edu/tech_reports/index.95.html
Root-URL: 
Title: Core Migration for Dynamic Multicast Routing  
Author: Michael J. Donahoo Ellen W. Zegura 
Address: Atlanta, Georgia 30332-0280  
Affiliation: College of Computing Georgia Institute of Technology  
Pubnum: GIT-CC-95/28  
Abstract: Efficient multicast communication provides one of the best avenues for scaling bandwidth intensive applications. Current multicast routing mechanisms perform well for multicast groups which reach a long-term, steady-state distribution of membership. However, when the membership migrates throughout the network, current routing techniques may perform poorly. One type of multicast routing technique involves selection of a "core" router through which all multicast communication is routed. We propose to adapt this routing scheme to efficiently support dynamic groups, by allowing the core to migrate. As part of our work we provide solutions to several problems that are more general, including estimating multicast bandwidth using unicast information and soliciting responses from a limited number of participants to avoid message implosion. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Kevin Almeroth and Mostafa Ammar. </author> <title> On the performance of a multicast delivery video-on-demand service with discontinuous VCR actions. </title> <booktitle> In International Conference on Communications (ICC 95), </booktitle> <month> June </month> <year> 1995. </year> <pages> 20 21 </pages>
Reference-contexts: Consequently, techniques such as multicasting are becoming more important in satisfying the need for high bandwidth, even for applications not traditionally thought of as multicast-oriented <ref> [1, 6] </ref>. As an alternative to traditional shortest path tree multicast routing [9, 15], some recently-proposed multicast routing algorithms involve the designation of a network node as the "center" of the routing tree for each multicast group [3, 7, 8].
Reference: [2] <author> Mostafa H. Ammar. </author> <title> Probabilistic multicast: Generalizing the multicast paradigm to improve scalability. </title> <booktitle> In Proceedings of INFOCOM 1994, </booktitle> <pages> pages 848-55, </pages> <year> 1994. </year>
Reference-contexts: This method has broader applicability, for example in deciding whether to deliver information (e.g., from a server) via unicast or multicast. * A method for efficiently soliciting responses from a selected number of receivers in the multicast group, using a combination of probabilistic multicast <ref> [2] </ref> and probing rounds [4]. <p> This not only creates additional network load but can lead to message implosion at the candidate cores. In this section we introduce Random Participant Evaluation, which works in the same manner as above except that it utilizes probabilistic multicast <ref> [2] </ref> to control the number of responses sent by participants to each candidate core. The header of the multicast packet contains an acceptance probability, ff, which each participant uses to determine whether or not to respond.
Reference: [3] <author> Tony Ballardie, Paul Francis, and Jon Crowcroft. </author> <title> Core based trees (cbt). </title> <booktitle> In Proceedings of SIGCOMM 1994, </booktitle> <pages> pages 1-19, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: As an alternative to traditional shortest path tree multicast routing [9, 15], some recently-proposed multicast routing algorithms involve the designation of a network node as the "center" of the routing tree for each multicast group <ref> [3, 7, 8] </ref>. Sources send unicast messages to the center for the group which then multicasts the message on a common tree to the group members. <p> Unfortunately, current multicast routing mechanisms give little consideration to the relationship between core placement and performance, leaving the decision of where to place a core to the local network administrator <ref> [3] </ref>. Researchers have only recently began to consider core placement [5, 11], but with emphasis on the one-time placement of the core based on a priori knowledge of the application.
Reference: [4] <author> Jean-Chrysostome Bolot, Thierry Turleeti, and Ian Wakeman. </author> <title> Scalable feedback control for multicast video distribution in the internet. </title> <booktitle> In Proceedings of SIG-COMM, </booktitle> <pages> pages 58-67, </pages> <year> 1994. </year>
Reference-contexts: This method has broader applicability, for example in deciding whether to deliver information (e.g., from a server) via unicast or multicast. * A method for efficiently soliciting responses from a selected number of receivers in the multicast group, using a combination of probabilistic multicast [2] and probing rounds <ref> [4] </ref>. <p> We adapt the receiver congestion discovery protocol proposed in <ref> [4] </ref> to determine the number of receivers. Our algorithm chooses an initial value of ff, and the core sends a probabilistic multicast to the receivers. The initial value of ff is chosen conservatively, allowing for few or no responses. <p> Initially ff = A=M , clearly conservative since in general M is larger than the number of receivers and considerably larger than A. This value is increased exponentially until a receiver responds. As in <ref> [4] </ref>, we analyze the algorithm to determine the expected round in which a first response occurs. Following the notation in [4], we let r j denote the number of responses at round j, p j denote the probability that a particular receiver replies during round j, and n denote the number <p> This value is increased exponentially until a receiver responds. As in <ref> [4] </ref>, we analyze the algorithm to determine the expected round in which a first response occurs. Following the notation in [4], we let r j denote the number of responses at round j, p j denote the probability that a particular receiver replies during round j, and n denote the number of receivers. <p> See <ref> [4] </ref> for a description of the round trip time discovery. 14 rounds earlier for A=M = :01, independent of n. The intuition for the earlier responses is that the initial value of ff can get us closer to the correct number of responses than the bit masking scheme.
Reference: [5] <author> Kenneth L. Calvert, Ellen W. Zegura, and Michael J. Donahoo. </author> <title> Core selection methods for multicast routing. </title> <booktitle> In Proceedings of IC3N, </booktitle> <year> 1995. </year>
Reference-contexts: Unfortunately, current multicast routing mechanisms give little consideration to the relationship between core placement and performance, leaving the decision of where to place a core to the local network administrator [3]. Researchers have only recently began to consider core placement <ref> [5, 11] </ref>, but with emphasis on the one-time placement of the core based on a priori knowledge of the application.
Reference: [6] <author> Russell J. Clark and Mostafa H. Ammar. </author> <title> Providing scalable Web services using multicast. </title> <booktitle> In Proceedings of the 2nd International Workshop on Services in Distributed and Networked Environments (SDNE 95), </booktitle> <month> June </month> <year> 1995. </year>
Reference-contexts: Consequently, techniques such as multicasting are becoming more important in satisfying the need for high bandwidth, even for applications not traditionally thought of as multicast-oriented <ref> [1, 6] </ref>. As an alternative to traditional shortest path tree multicast routing [9, 15], some recently-proposed multicast routing algorithms involve the designation of a network node as the "center" of the routing tree for each multicast group [3, 7, 8].
Reference: [7] <author> Stephen Deering, Deborah Estrin, Dino Farinacci, Van Jacobson, Ching gung Liu, and Liming Wei. </author> <title> Protocol indepedent multicast (PIM): Motivation and architecture. </title> <type> IETF Working Draft, </type> <month> March </month> <year> 1994. </year>
Reference-contexts: As an alternative to traditional shortest path tree multicast routing [9, 15], some recently-proposed multicast routing algorithms involve the designation of a network node as the "center" of the routing tree for each multicast group <ref> [3, 7, 8] </ref>. Sources send unicast messages to the center for the group which then multicasts the message on a common tree to the group members.
Reference: [8] <author> Stephen Deering, Deborah Estrin, Dino Farinacci, Van Jacobson, Ching-Gung Liu, and Liming Wei. </author> <title> Protocol independent multicasting (PIM), sparse mode protocol specification. </title> <type> Technical report, </type> <institution> IETF-IDMR, </institution> <month> March </month> <year> 1994. </year>
Reference-contexts: As an alternative to traditional shortest path tree multicast routing [9, 15], some recently-proposed multicast routing algorithms involve the designation of a network node as the "center" of the routing tree for each multicast group <ref> [3, 7, 8] </ref>. Sources send unicast messages to the center for the group which then multicasts the message on a common tree to the group members.
Reference: [9] <author> Stephen E. Deering and David R. Cheriton. </author> <title> Multicast routing in datagram internet-works and extended LANs. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 8(2) </volume> <pages> 85-110, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: Consequently, techniques such as multicasting are becoming more important in satisfying the need for high bandwidth, even for applications not traditionally thought of as multicast-oriented [1, 6]. As an alternative to traditional shortest path tree multicast routing <ref> [9, 15] </ref>, some recently-proposed multicast routing algorithms involve the designation of a network node as the "center" of the routing tree for each multicast group [3, 7, 8].
Reference: [10] <author> Matthew Doar and Ian Leslie. </author> <booktitle> How bad is naive multicast routing? In Proceedings of INFOCOM 1993, </booktitle> <pages> pages 82-9, </pages> <year> 1993. </year>
Reference-contexts: In [13, 16, 17], the authors consider the use of dynamic Steiner trees to handle dynamic multicast routing, but these algorithms are not well suited for large networks or distributed implementation. Several other authors <ref> [10, 14] </ref> have investigated incremental changes to multicast routing trees to accomodate changes in receivers. We extend core-based multicast routing schemes to allow migration of the core. <p> Whether this is the "right" or "best" way to characterize a dynamic multicast application remains an open question. Other researchers have used parameters including the duration (or lifetime) of a connection, the holding time between modification events, and the probability an event is an addition <ref> [10, 17] </ref>. We have not found any other use of a migration function, rather other researchers appear to generate new members in random locations in the network.
Reference: [11] <author> Deborah Estrin. </author> <title> Draft note on RP selection for PIM-SM. </title> <type> IETF, </type> <month> Mar </month> <year> 1994. </year>
Reference-contexts: Unfortunately, current multicast routing mechanisms give little consideration to the relationship between core placement and performance, leaving the decision of where to place a core to the local network administrator [3]. Researchers have only recently began to consider core placement <ref> [5, 11] </ref>, but with emphasis on the one-time placement of the core based on a priori knowledge of the application.
Reference: [12] <author> Institute for Simulation and Training. </author> <title> Standard for Distributed Interactive Simulation | application protocols (version 2.0.4 draft IEEE standard). </title> <type> Technical Report IST-CR-94-50, </type> <institution> University of Central Florida, </institution> <month> March </month> <year> 1994. </year>
Reference-contexts: Selection of a "good" core is critical. Selecting a core becomes even more difficult if the make-up of the group changes during the lifetime of the group connection. As an example application, consider the multicast requirements of Distributed Interactive Simulation (DIS) <ref> [12] </ref> or distributed game-playing: each entity must multicast information about its location and activity to the other entities within its current region-of-influence. The region-of-influence can change radically during the simulation, as entities move about within the virtual environment.
Reference: [13] <author> Makoto Imase and Bernard M. Waxman. </author> <title> Dynamic Steiner tree problem. </title> <journal> SIAM Journal Disc. Math, </journal> <volume> 4(3) </volume> <pages> 369-84, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: Researchers have only recently began to consider core placement [5, 11], but with emphasis on the one-time placement of the core based on a priori knowledge of the application. In <ref> [13, 16, 17] </ref>, the authors consider the use of dynamic Steiner trees to handle dynamic multicast routing, but these algorithms are not well suited for large networks or distributed implementation. Several other authors [10, 14] have investigated incremental changes to multicast routing trees to accomodate changes in receivers.
Reference: [14] <author> James Kadirire and Graham Knight. </author> <title> Comparison of dynamic multicast routing algorithms for wide-area packet switched (Asynchronous Transfer Mode) networks. </title> <booktitle> In Proceedings of INFOCOM 1995, </booktitle> <pages> pages 212-219, </pages> <year> 1995. </year>
Reference-contexts: In [13, 16, 17], the authors consider the use of dynamic Steiner trees to handle dynamic multicast routing, but these algorithms are not well suited for large networks or distributed implementation. Several other authors <ref> [10, 14] </ref> have investigated incremental changes to multicast routing trees to accomodate changes in receivers. We extend core-based multicast routing schemes to allow migration of the core.
Reference: [15] <author> D. Waitzman, C. Partridge, and S. Deering. </author> <title> Distance vector multicast routing protocol. </title> <address> RFC1075, </address> <month> Nov </month> <year> 1988. </year>
Reference-contexts: Consequently, techniques such as multicasting are becoming more important in satisfying the need for high bandwidth, even for applications not traditionally thought of as multicast-oriented [1, 6]. As an alternative to traditional shortest path tree multicast routing <ref> [9, 15] </ref>, some recently-proposed multicast routing algorithms involve the designation of a network node as the "center" of the routing tree for each multicast group [3, 7, 8].
Reference: [16] <author> Bernard M. Waxman. </author> <title> Routing of multipoint connections. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 6(9) </volume> <pages> 1617-22, </pages> <month> December </month> <year> 1988. </year> <month> 22 </month>
Reference-contexts: Researchers have only recently began to consider core placement [5, 11], but with emphasis on the one-time placement of the core based on a priori knowledge of the application. In <ref> [13, 16, 17] </ref>, the authors consider the use of dynamic Steiner trees to handle dynamic multicast routing, but these algorithms are not well suited for large networks or distributed implementation. Several other authors [10, 14] have investigated incremental changes to multicast routing trees to accomodate changes in receivers.
Reference: [17] <author> Bernard M. Waxman. </author> <title> Performance evaluation of multipoint routing algorithms. </title> <booktitle> In IEEE INFOCOM 93, </booktitle> <volume> volume 3, </volume> <pages> pages 980-6, </pages> <month> March </month> <year> 1993. </year>
Reference-contexts: Researchers have only recently began to consider core placement [5, 11], but with emphasis on the one-time placement of the core based on a priori knowledge of the application. In <ref> [13, 16, 17] </ref>, the authors consider the use of dynamic Steiner trees to handle dynamic multicast routing, but these algorithms are not well suited for large networks or distributed implementation. Several other authors [10, 14] have investigated incremental changes to multicast routing trees to accomodate changes in receivers. <p> Whether this is the "right" or "best" way to characterize a dynamic multicast application remains an open question. Other researchers have used parameters including the duration (or lifetime) of a connection, the holding time between modification events, and the probability an event is an addition <ref> [10, 17] </ref>. We have not found any other use of a migration function, rather other researchers appear to generate new members in random locations in the network.
Reference: [18] <author> Ellen W. Zegura, Kenneth L. Calvert, and Samrat Bhattacharjee. </author> <title> How to model an internetwork. </title> <booktitle> In Proceedings of INFOCOM 96, </booktitle> <year> 1995. </year> <month> 23 </month>
Reference-contexts: In Section 7 we bring together the details of each step into a complete version of the algorithm, and explore the performance with all components working together. 4 Modeling 4.1 Transit-Stub Model of Internetworks We generate graphs for our simulations using a recently developed Transit-Stub method <ref> [18] </ref>. This graph generation method produces graphs that reflect the structure of the Internet, and thus are preferable to the standard use of random graphs or regular topologies (e.g., rings and meshes) for studying internetworking problems. A Transit-Stub graph partitions the vertices into two types of domains: transit and stub. <p> No stub domains other than U and V will be involved. * If an edge exists between stub domains U and V , then the shortest path from u 2 U to v 2 V may include this edge, bypassing any transit domains. See <ref> [18] </ref> for more details on the construction process and properties of the resulting graphs. 4.2 Multicast Routing Scenarios We use the term scenario to describe a time-dependent characterization of an application's behavior. Scenarios, as opposed to simulating with purely random behavior, provide a framework for classification of applications.
References-found: 18

