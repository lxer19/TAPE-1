URL: ftp://coast.cs.purdue.edu/pub/doc/network/pnet.ext.ps.Z
Refering-URL: http://www.cs.purdue.edu/coast/archive/data/categ30.html
Root-URL: http://www.cs.purdue.edu
Email: smb@ulysses.att.com  
Title: Pseudo-Network Drivers and Virtual Networks  
Author: S.M. Bellovin* 
Address: Murray Hill, New Jersey 07974  
Affiliation: AT&T Bell Laboratories  
Abstract: Many operating systems have long had pseudo-teletypes, inter-process communication channels that provide terminal semantics on one end, and a smart server program on the other. We describe an analogous concept, pseudo-network drivers. One end of the driver appears to be a real network device, with the appropriate interface and semantics; data written to it goes to a program, however, rather than to a physical medium. Using this and some auxiliary mechanisms, we present a variety of applications, including system test, network monitoring, dial-up TCP/IP, and ways to both improve and subvert network security. Most notably, we show how pseudo-network devices can be used to create virtual networks and to provide encrypted communications capability. We describe two implementations, one using a conventional driver for socket-based systems, and one using stream pipes for System V.
Abstract-found: 1
Intro-found: 1
Reference: [BFE] <institution> ``Blacker Front End Interface Control Document,'' </institution> <note> pp. 1-25-1-40 in DDN Protocol Handbook, </note> <editor> ed. E.J. Feinler, O.J. Jacobsen, </editor> <publisher> M.K. Stahl, and C.A. Ward. </publisher>
Reference-contexts: We shall spend some time on a detailed description of just such a system; it is currently under development. Since ours is loosely modeled on the Blacker Front End <ref> [BFE, Mund87] </ref> but is much less secure, we dub it Greyer. There are two principal uses for Greyer: providing end-to-end encryption between a pair of hosts communicating over an insecure network, and providing network-level encryption between a pair of gateways, each of which is protecting a group of naive hosts.
Reference: [Bell89] <author> S.M. Bellovin, </author> <title> ``Security Problems in the TCP/IP Protocol Suite,'' </title> <journal> Computer Communications Review 19(2), </journal> <pages> pp. </pages> <month> 32-48 (April, </month> <year> 1989). </year>
Reference-contexts: First, this facility is only available to root; a rogue super-user has easier ways to spoof IP addresses. Second, the very existence of Pnet allows injection of packets with arbitrary addresses. Finally, as shown elsewhere, <ref> [Bell89] </ref> using an IP address for authorization is very unsafe in any event. 2. This does not necessarily provide enough security for the gateway machine. ICMP packets can have a global effect, regardless of the destination address used. fragments. 3.2 Netspy The Pnet driver can be used to monitor conversations. <p> Unfortunately, there are ways to attack hosts that rely on IP addresses for authentication, even if responses are not heard. <ref> [Bell89, Morr85] </ref> More simply, IP source routing could be used, thereby forcing the target host to reply via the same insecure path. Gateways and Greyer Gateways using Greyer may require interface isolation as well.
Reference: [Brad89] <author> R.T. Braden,ed., </author> <title> ``Requirements for Internet hosts - communication layers.,'' </title> <note> RFC 1122 (October 1989). </note>
Reference-contexts: However, many IP modules will not forward packets, either for security reasons or because forwarding packets is the business of gateways, not hosts. <ref> [Brad89] </ref> For socket-based implementations, a second approach is to create a raw IP socket, and use it to re-inject the packets. Unfortunately, while that mechanism is suitable for transmitting the encrypted packets, it fails on decryption.
Reference: [Come88] <author> D. Comer, </author> <title> Internetworking with TCP/IP : Principles, Protocols, and Architecture, </title> <publisher> Prentice-Hall, Inc. </publisher> <year> (1988). </year>
Reference-contexts: Bellovin, Room 3C-536B, AT&T Bell Laboratories, 600 Mountain Avenue, Murray Hill, New Jersey 07974. Server Pnet (driver) Pnet (network) IP User Kernel other servers Although the primary focus of the driver is TCP/IP, <ref> [Fein85, Come88] </ref> the socket version is actually quite general; it can handle any address families supported by the rest of the kernel. It has been tested on SunOS 4.0.1 and 4.0.3; with minor changes, it should run on 4.2bsd, 4.3bsd, and other related operating systems. 2.
Reference: [Denn81] <author> D.E. Denning and G.M. Sacco, </author> <title> ``Timestamps in Key Distribution Protocols,'' </title> <journal> Communications of the ACM 24(8), </journal> <pages> pp. 533-536, </pages> <note> ACM (August 1981). </note> ________________ <month> 6. </month> <title> In practice, life is a bit more complex; M_FLUSH messages must be processed both in the kernel and sent to the user process. Furthermore, security considerations dictate that use of mesg/rmesg be restricted to the superuser. </title>
Reference-contexts: First, we assume that the Greyer server will not have keys for each possible destination; rather, it will use something like Needham-Schroeder <ref> [Need78, Denn81, Need87] </ref> or Kerberos [Stei88] to obtain a session key. It is therefore necessary to transmit this session key to the remote Greyer server. If TCP is used as the transport mechanism, the solution is obvious: send the session key at the start of each connection.
Reference: [Estr89] <author> D. Estrin, J.C. Mogul, and G. Tsudik, </author> <title> ``Visa Protocols for Controlling Inter--Organization Datagram Flow,'' </title> <journal> IEEE Journal on Selected Areas in Communications 7(4), </journal> <pages> pp. 486-498, </pages> <note> (Special Issue on Secure Communications) (May 1989). </note>
Reference-contexts: It also provides authorization: the key distribution center may, at its option, decline to issue a key for a conversation deemed administratively prohibited. In fact, the Greyer mechanisms could simply be used for authorization without bothering with transmitting the encrypted text at all, as in the Visa protocols. <ref> [Estr89] </ref> There are obvious risks of address forgery here, of course.
Reference: [Fein85] <author> E.J. Feinler, O.J. Jacobsen, </author> <title> M.K. Stahl, and C.A. Ward, DDN Protocol Handbook, DDN Network Information Center, </title> <booktitle> SRI International (1985). </booktitle>
Reference-contexts: Bellovin, Room 3C-536B, AT&T Bell Laboratories, 600 Mountain Avenue, Murray Hill, New Jersey 07974. Server Pnet (driver) Pnet (network) IP User Kernel other servers Although the primary focus of the driver is TCP/IP, <ref> [Fein85, Come88] </ref> the socket version is actually quite general; it can handle any address families supported by the rest of the kernel. It has been tested on SunOS 4.0.1 and 4.0.3; with minor changes, it should run on 4.2bsd, 4.3bsd, and other related operating systems. 2.
Reference: [Jaco88] <author> V. Jacobson, </author> <title> ``Congestion Avoidance and Control,'' </title> <note> pp. 314-329 in Proceedings of SIGCOMM '88 (August 1988). </note>
Reference-contexts: Too many packets are dropped or delayed, leading to excessive retries and/or congestion. [Nowi89] If a TCP-based relay process is used with Pnet, application-level retry timers can be turned off, and advantage can be taken of recent TCP performance improvements. <ref> [Karn87, Jaco88] </ref> Similarly, if the underlying network is prone to data corruption, this mechanism is useful when using systems that turn off UDP checksumming. If this strategy is adopted, great care must be taken if application-level retry timers are still used.
Reference: [Karn87] <author> P. Karn and C. Partridge, </author> <title> ``Improving Round-Trip Estimates in Reliable Transport Protocols,'' </title> <note> pp. 2-7 in Proceedings of SIGCOMM '87 (August 1987). </note>
Reference-contexts: Too many packets are dropped or delayed, leading to excessive retries and/or congestion. [Nowi89] If a TCP-based relay process is used with Pnet, application-level retry timers can be turned off, and advantage can be taken of recent TCP performance improvements. <ref> [Karn87, Jaco88] </ref> Similarly, if the underlying network is prone to data corruption, this mechanism is useful when using systems that turn off UDP checksumming. If this strategy is adopted, great care must be taken if application-level retry timers are still used.
Reference: [Lanz89] <author> L. Lanzillo and C. Partridge, </author> <title> ``Implementation of Dial-Up IP for UNIX Systems,'' </title> <booktitle> in Proc. Winter USENIX Conference, </booktitle> <address> San Diego, California (January, </address> <year> 1989). </year>
Reference-contexts: A line discipline is used for framing, which is reasonable enough; however, some implementations require a dummy process to linger to keep the line open, or some mechanism to prevent the normal close operations from taking place. Furthermore, dial-up SLIP operation is awkward, though it has been done. <ref> [Lanz89] </ref> All of that can be bypassed using Pnet. A single process can handle packets for all of the SLIP destinations; it can make calls as needed, transmit and receive data, etc.
Reference: [McGr89] <author> G.J. McGrath, </author> <title> ``DPLI Interface Specifications.,'' </title> <note> AT&T White Paper (February 1989). </note>
Reference-contexts: The implementation is thus able to deal only with Ethernet 5 networks and point-to-point links, for which the concept of destination address is not relevant. This is obviously easy to fix. System V versions typically use the Data Link Provider Interface (DLPI) <ref> [McGr89] </ref> protocol between IP and the device driver. The Pnet server must implement its half of this protocol, a non-trivial matter. DLPI does provide for the destination address to be passed along.
Reference: [Mogu89] <author> J. Mogul, </author> <title> ``Simple and Flexible Datagram Access Controls for UNIX-based Gateways,'' </title> <booktitle> in Proc. Summer USENIX Conference, </booktitle> <address> Baltimore, Maryland (June, </address> <year> 1989). </year>
Reference-contexts: That is, we do not permit the implicit forwarding to an alternate address associated with another network interface on the gateway. 2 For some purposes, a simple isolation bit is insufficient; one would need isolation groups that define allowable forwarding patterns. Finally, one could escalate to full address screening, <ref> [Mogu89] </ref> though if encryption is univerally performed that is probably not necessary. 3. APPLICATIONS The Pnet driver has many uses, ranging from the trivial to the complex. A few are discussed below. <p> Assume, for example, a paranoid gateway that was configured to allow only electronic mail traffic; this would be configured to accept TCP packets with a source or destination port of 25, and to reject all others. <ref> [Mogu89] </ref> Two co-operating parties could set up a TCP circuit between Pnet servers, and simply assign one end to port 25. Assuming suitable routing information were exchanged, each end would have access to the other's IP networks. ________________ 3.
Reference: [Morr85] <author> R.T. Morris, </author> <title> ``A Weakness in the 4.2BSD UNIX TCP/IP Software,'' </title> <note> Computing Science Technical Report No. 117, </note> <institution> AT&T Bell Laboratories, </institution> <address> Murray Hill, New Jersey (February 1985). </address>
Reference-contexts: Unfortunately, there are ways to attack hosts that rely on IP addresses for authentication, even if responses are not heard. <ref> [Bell89, Morr85] </ref> More simply, IP source routing could be used, thereby forcing the target host to reply via the same insecure path. Gateways and Greyer Gateways using Greyer may require interface isolation as well.
Reference: [Mund87] <author> G.R. Mundy and R.W. Shirey, </author> <title> ``Defense Data Network Security Architecture,'' </title> <booktitle> in Proc. MILCOM '87, IEEE, </booktitle> <address> Washington, D.C. </address> <year> (1987). </year>
Reference-contexts: We shall spend some time on a detailed description of just such a system; it is currently under development. Since ours is loosely modeled on the Blacker Front End <ref> [BFE, Mund87] </ref> but is much less secure, we dub it Greyer. There are two principal uses for Greyer: providing end-to-end encryption between a pair of hosts communicating over an insecure network, and providing network-level encryption between a pair of gateways, each of which is protecting a group of naive hosts.
Reference: [Need78] <author> R.M. Needham and M. Schroeder, </author> <title> ``Using Encryption for Authentication in Large Networks of Computers,'' </title> <journal> Communications of the ACM 21(12), </journal> <pages> pp. 993-999, </pages> <note> ACM (December, </note> <year> 1978). </year>
Reference-contexts: First, we assume that the Greyer server will not have keys for each possible destination; rather, it will use something like Needham-Schroeder <ref> [Need78, Denn81, Need87] </ref> or Kerberos [Stei88] to obtain a session key. It is therefore necessary to transmit this session key to the remote Greyer server. If TCP is used as the transport mechanism, the solution is obvious: send the session key at the start of each connection.
Reference: [Need87] <author> R.M. Needham and M. Schroeder, </author> <title> ``Authentication Revisited,'' Operating Systems Review 21(1), </title> <editor> p. </editor> <month> 7 (January </month> <year> 1987). </year>
Reference-contexts: First, we assume that the Greyer server will not have keys for each possible destination; rather, it will use something like Needham-Schroeder <ref> [Need78, Denn81, Need87] </ref> or Kerberos [Stei88] to obtain a session key. It is therefore necessary to transmit this session key to the remote Greyer server. If TCP is used as the transport mechanism, the solution is obvious: send the session key at the start of each connection.
Reference: [Nowi89] <author> B. Nowicki, </author> <title> ``Transport Issues in the Network File System,'' </title> <journal> Computer Communications Review 19(2), </journal> <pages> pp. </pages> <month> 16-20 (April, </month> <year> 1989). </year>
Reference-contexts: The point is that Pnet allows IP-level access, and is thus far more damaging. 3.6 More Reliable Datagrams In the current congested Internet environment, datagram services are hard to use. Too many packets are dropped or delayed, leading to excessive retries and/or congestion. <ref> [Nowi89] </ref> If a TCP-based relay process is used with Pnet, application-level retry timers can be turned off, and advantage can be taken of recent TCP performance improvements. [Karn87, Jaco88] Similarly, if the underlying network is prone to data corruption, this mechanism is useful when using systems that turn off UDP checksumming.
Reference: [Plum82] <author> D.C. Plummer, </author> <title> ``Ethernet Address Resolution Protocol: Or converting network protocol addresses to 48.bit Ethernet address for transmission on Ethernet hardware.,'' RFC 826 (November 1982). </title>
Reference-contexts: known to crash when the interface was deleted. -0 1 2 Packet Size time ratio 0 200 400 600 800 1000 1200 1400 The 9th Edition implementation of stream TCP/IP deals well enough with shutdowns; however, the IP destination address is not passed downstream along with the packet unless ARP <ref> [Plum82] </ref> is in use. The implementation is thus able to deal only with Ethernet 5 networks and point-to-point links, for which the concept of destination address is not relevant. This is obviously easy to fix.
Reference: [Ritc84] <author> D.M. Ritchie, </author> <title> ``A Stream Input-Output System,'' </title> <journal> AT&T Bell Laboratories Technical Journal 63(8, </journal> <volume> part 2), </volume> <pages> pp. </pages> <year> 1897-1910 </year> <month> (October </month> <year> 1984). </year>
Reference-contexts: There are two general implementation techniques available. For socket-based systems, such as SunOS and 4.3bsd, we have implemented a standard network device driver; a detailed description of the driver is given below. For stream <ref> [Ritc84] </ref> implementations of TCP/IP, a simple stream pipe may suffice, possibly with no kernel changes whatsoever; again, details are given below. ________________ * Author's address: Steven M. Bellovin, Room 3C-536B, AT&T Bell Laboratories, 600 Mountain Avenue, Murray Hill, New Jersey 07974.
Reference: [Romk88] <author> J.L. Romkey, </author> <title> ``Nonstandard for transmission of IP datagrams over serial lines: SLIP.,'' </title> <note> RFC 1055 (June 1988). </note>
Reference-contexts: The latter can use Pnet to transmit packets to and from IP; at the far end of the Datakit VCS circuit, IP can handle them directly. 3.4 Replacing SLIP The conventional mechanism for sending IP packets over tty lines SLIP, or Serial Line IP <ref> [Romk88] </ref> requires oddball code in the kernel. A line discipline is used for framing, which is reasonable enough; however, some implementations require a dummy process to linger to keep the line open, or some mechanism to prevent the normal close operations from taking place.
Reference: [SP3] <author> SDNS Protocol and Signalling Working Group, SP3 Sub-Group, </author> <title> ``SDNS Secure Data Networking System Security Protocol 3 (SP3),'' </title> <address> SDN.301 (July 12, </address> <year> 1988). </year>
Reference-contexts: More likely, we will use the SP3 protocol from SDNS. <ref> [SP3] </ref> A final possibility is to include the encrypted key in each packet. This preserves the stateless nature of IP gateways, at the obvious cost in bandwidth. The exact choice depends heavily on the characteristics of the physical network; we will address this question further when Greyer is implemented. 5.
Reference: [Stei88] <author> J. Steiner, C. Neuman, and J.I. Schiller, </author> <title> ``Kerberos: An Authentication Service for Open Network Systems,'' </title> <booktitle> in Proc. Winter USENIX Conference, </booktitle> <address> Dallas (1988). </address>
Reference-contexts: First, we assume that the Greyer server will not have keys for each possible destination; rather, it will use something like Needham-Schroeder [Need78, Denn81, Need87] or Kerberos <ref> [Stei88] </ref> to obtain a session key. It is therefore necessary to transmit this session key to the remote Greyer server. If TCP is used as the transport mechanism, the solution is obvious: send the session key at the start of each connection.
References-found: 22

