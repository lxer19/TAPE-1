URL: http://www.cs.tamu.edu/faculty/chen/notes/geo.ps
Refering-URL: http://www.cs.tamu.edu/faculty/chen/notes/
Root-URL: http://www.cs.tamu.edu
Title: Computational Geometry: Methods and Applications  
Author: Jianer Chen 
Date: February 19, 1996  
Affiliation: Computer Science Department Texas A&M University  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> A. Aggarwal and J. Wein, </author> <title> Computational Geometry, </title> <type> MIT Technical Report, </type> <address> MIT/LCS/RSS 3, </address> <year> (1988). </year>
Reference-contexts: The field is currently thriving. Since 1985, several texts, collections, and monographs have appeared <ref> [1, 10, 18, 20, 25, 26] </ref>. The annual symposium has attracted 100 papers and 200 attendees steadily. There is evidence that the field is broadening to touch geometric modeling and geometric theorem proving. <p> If we restrict ff to the interval <ref> [0, 1] </ref>, then we have a representation for a line segment, denoted p 1 p 2 , with the points p 1 and p 2 as its extreme points. <p> For slab L <ref> [1] </ref>, construct an empty 2-3 tree T_1. The list l_1 for the slab L [1] is also empty; Set k = 2; 3. <p> For slab L <ref> [1] </ref>, construct an empty 2-3 tree T_1. The list l_1 for the slab L [1] is also empty; Set k = 2; 3. Look at the vertex v_ (k-1), delete all lower edges of the vertex v_ (k-1) from the tree T_ (k-1) and insert all upper edges of the vertex v_ (k-1) into the tree T_ (k-1). <p> Then there is a continuous curve C in E 4n that adjoins the two points I i and I j . More precisely, there are 2n continuous functions on the interval <ref> [0, 1] </ref> S 1 (t); T 1 (t); S 2 (t); T 2 (t); ; S n (t); T n (t) such that S h (0) = S h (1) = p h , and T h (0) = q (i) (j) h = 1; 2; ; n, and for all <p> 1 (t); T 1 (t); S 2 (t); T 2 (t); ; S n (t); T n (t) such that S h (0) = S h (1) = p h , and T h (0) = q (i) (j) h = 1; 2; ; n, and for all t 2 <ref> [0; 1] </ref>, the point (S 1 (t); T 1 (t); S 2 (t); T 2 (t); ; S n (t); T n (t)) Since I i and I j are two different instances in (8.7), there must be an index k such that q (i) (j) k are different points in
Reference: [2] <author> A. V. Aho, J. E. Hopcropt, and J. D. Ullman, </author> <title> The Design and Analysis of Computer Algorithms, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> (1974). </year>
Reference-contexts: Chapter 2 Algorithmic Foundations For the past twenty years the analysis and design of computer algorithms has been one of the most thriving endeavors in computer science. The fundamental works of Knuth [14] and Aho-Hopcroft-Ullman <ref> [2] </ref> have brought order and systematization to a rich collection of isolated results, conceptualized the basic paradigms, and established a methodology that has become the standard of the field. <p> In any case, the size of the sublist we are going to work on is at most three fourth of the size of the original list L. The detailed discussion of this algorithm can be found in <ref> [2] </ref>, Section 3.5. Let us analyze the above Median Finding algorithm. Suppose that the 83 84 PRUNE AND SEARCH time complexity of the algorithm is T (n) on inputs of size n. Then to find the median of the list L 0 of the n=5 medians takes time T (n=5). <p> Now to read the leaves of the 2-3 tree T k from left to right, we can use, say, depth first search on the tree T k . (For the discussion of depth first search of a graph, see <ref> [2] </ref>.) The time to read the tree T k and then to produce the list l k thus is bounded by some constant times the number of nodes in the tree T k , which is bounded by O (n). <p> Since the algorithm has been well studied in the course of Algorithm Analysis, we give only a brief outline of the algorithm and omit most of the details. The interested reader is referred to <ref> [2] </ref>. Kruskal's algorithm finds the minimum weight spanning tree for a weighted graph G by simply adding edges one at a time, at each step using the lightest edge that does not form a cycle. This algorithm gradually builds up the tree one edge at a time from disconnected components. <p> Since for each edge in the graph, at most three UNION-FIND operations are performed, to construct the final minimum weight spanning tree, we need at most 3m UNION-FIND operations. This can be done in time O (mff (m)), where ff (m) = o (log (m)) (see <ref> [2] </ref>, Section 4.7 1 For detailed discussion of UNION-FIND problem, the reader is referred to [2], Section 4.7. MAX-EMPTY-CIRCLE 123 for detailed discussion). <p> This can be done in time O (mff (m)), where ff (m) = o (log (m)) (see <ref> [2] </ref>, Section 4.7 1 For detailed discussion of UNION-FIND problem, the reader is referred to [2], Section 4.7. MAX-EMPTY-CIRCLE 123 for detailed discussion). <p> relationship between constructing convex hulls and sorting (see Section 6.1), we may have realized that an algorithm faster than O (n log n) for convex hull is impossible, since as we have seen in Algorithm Analysis that sorting n numbers requires at least (n log n) comparisons (see, for example, <ref> [2] </ref>), and since SORTING / n CONVEX HULL so the problem CONVEX HULL is at least as hard as SORTING.
Reference: [3] <author> S. G. Akl, </author> <title> The Design and Analysis of Parallel Algorithms, </title> <publisher> Prentice Hall, </publisher> <address> Engiewood, N.J., </address> <year> (1989). </year>
Reference-contexts: IF (DCEL [a][F1] = i) THEN a := DCEL [a][P1]; ELSE a := DCEL [a][P2]; 4. WHILE (a &lt;&gt; a0) DO IF (DCEL [a][F1] = i) THEN a := DCEL [a][P1] ELSE a := DCEL [a][P2]; END. GEOMETRIC GRAPHS 19 For example, if we start with HF <ref> [3] </ref> = 4, and use the DCEL for the planar imbedding I of the complete graph K 4 , then we will get the region f 3 as e 4 , e 5 , and e 6 . <p> We list below the parallel complexity for these problems, and explain briefly the basic idea of the parallel algorithms solving these problems. For more detailed discussions on efficient parallel algorithms, the reader is referred to <ref> [3] </ref>. MAXIMUM Given n numbers, find the maximum number. Theorem 13.1.1 MAXIMUM can be solved in O (log n) parallel time using O (n) processors. proof.
Reference: [4] <author> J. L. Bentley and M. I. Shamos, </author> <title> A problem in multivariate statistics: Algorithms, data structure, </title> <booktitle> and applications, Proc. 15th Allerton Conf. </booktitle> <institution> Commun., Contr., and Comput., </institution> <year> (1977), </year> <month> pp.193-201. </month>
Reference-contexts: Computational geometry is of practical importance because Euclidean 1 2 INTRODUCTION space of two and three dimensions forms the arena in which real physical objects are arranged. A large number of applications areas such as pattern recognition [28], computer graphics [19], image processing [22], operations research, statistics <ref> [4, 27] </ref>, computer-aided design, robotics [25, 26], etc., have been the incubation bed of the discipline since they provide inherently geometric problems for which efficient algorithms have to be developed. A large number of manufacturing problems involve wire layout, facilities location, cutting-stock and related geometric optimization problems.
Reference: [5] <author> M. Blum, W. Floyd, V. R. Pratt, R. L. Rivest, and R. E. Tarjan, </author> <title> Time bounds for selection, </title> <journal> J. Computer and System Sciences 7, </journal> <year> (1972), </year> <month> pp.448-461. </month>
Reference-contexts: There are CONVEX HULLS 59 two different ways to split the set into such two sets. One is to use a linear time algorithm, developed by Blum, Floyd, Pratt, Rivest, and Tarjan <ref> [5] </ref>, to find the point p with the median x-coordinate, then spit S into S 1 and S 2 according to p. Another way is to presort the set S by x-coordinates, then for a sorted list, the median can always be found in linear time. <p> Chapter 6 Prune and Search Prune and Search is a technique originally used for finding medians developed by Blum, Floyd, Pratt, Rivest, and Tarjan <ref> [5] </ref>. The technique, as applied to median finding, throws out a constant fraction of the numbers during each iteration of a loop. Solving the recurrence gives us an O (n) time algorithm for finding a median. Let us have a more detailed review of the above algorithm.
Reference: [6] <author> C. B. Boyer, </author> <title> A History of Mathematics, </title> <address> New York: </address> <publisher> Wiley, </publisher> <year> (1968). </year>
Reference-contexts: We will also apply the method to find the smallest area triangles. We will see that the geometric transformation techniques enable us to convert these geometric problems into more familiar problems we have discussed. Geometric transformations have their roots in the mathematics of the early nineteenth century <ref> [6] </ref>. Their applications to problems of computing dates back to the concept of primal and dual problems in the study of linear programming (see, for example, [21]). Brown [7] gives a systematic treatment of transformations and their applications to problems of computational geometry.
Reference: [7] <author> K. Q. Brown, </author> <title> Geometric transforms for fast geometric algorithms, </title> <type> Tech. Report CMU-CS-80-101, </type> <institution> Carnegie-Mellon, </institution> <year> (1979). </year>
Reference-contexts: Geometric transformations have their roots in the mathematics of the early nineteenth century [6]. Their applications to problems of computing dates back to the concept of primal and dual problems in the study of linear programming (see, for example, [21]). Brown <ref> [7] </ref> gives a systematic treatment of transformations and their applications to problems of computational geometry. Since his dissertation, these methods have found vast application.
Reference: [8] <author> B. Chazelle, </author> <title> Triangulating a simple polygon in linear time, Discrete and Computational Geometry, </title> <booktitle> (1991), </booktitle> <pages> pp. 485-524. </pages>
Reference-contexts: In the next subsection, we will show that given a general PSLG G, in time O (n log n) we can convert G into a regular PSLG by adding edges to G. Consequently, the problem CONSTRAINED-TRIANGULATION can be solved in time O (n log n). Remark: Chazelle <ref> [8] </ref> has recently proven that triangulating a simple polygon (not necessarily a monotone polygon) can be done in linear time. <p> Then the triangulation takes time O (n log n) if the PSLG is a general PSLG, or takes time O (n) if the PSLG is connected (triangulating a connected PSLG in linear time is a recent breakthrough due to Chazelle <ref> [8] </ref>). Therefore, Step 1 of the algorithm takes time O (n log n) for a general PSLG G and takes time O (n) for a connected PSLG G. The TRACE-REGION algorithm takes time O (n) to find all regions, therefore, Step 2 of the algorithm takes time O (n).
Reference: [9] <author> R. Cole, </author> <title> Parallel merge sort, </title> <note> SIAM J. Computing 17, (1988), pp.770-785. </note>
Reference-contexts: With the rank for each red element in the final linked list, a processor can copy the red element directly to the array A 0 in constant time. Theorem 13.1.4 SORTING can be solved in time O (log n) using O (n) processors. proof. See <ref> [9] </ref>. Now we are ready for describing the parallel algorithm for constructing convex hulls for planar points. The algorithm looks as follows. Algorithm PARALLELHULL f Given a set S of n planar points stored in an array A, find the convex hull CH (S) of S. g begin 1.
Reference: [10] <author> H. Edelsbrunner, </author> <title> Algorithms in Combinatorial Geometry, </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> (1987). </year> <note> 219 220 BIBLIOGRAPHY </note>
Reference-contexts: The field is currently thriving. Since 1985, several texts, collections, and monographs have appeared <ref> [1, 10, 18, 20, 25, 26] </ref>. The annual symposium has attracted 100 papers and 200 attendees steadily. There is evidence that the field is broadening to touch geometric modeling and geometric theorem proving.
Reference: [11] <author> H. Edelsbrunner, J. O'Rourke, and R. Seidel, </author> <title> Constructing arrangements of lines and hyperplanes with applications, </title> <note> SIAM J. Computing 15, (1986), pp.341-363. </note>
Reference-contexts: The algorithm we presented in this section is not the best algorithm. The best algorithm we know for the problem THE-SMALLEST-TRIANGLE is due to Edelsbrunner, O'Rourke, and Seidel, which runs in time O (n 2 ) and space O (n) <ref> [11] </ref>. Whereas, the only known lower bound is (n log n). In fact, even for checking whether there exist three co-linear points, the only bounds that we know are O (n 2 ) and (n log n).
Reference: [12] <author> D. G. Kirkpatrick, </author> <title> Optimal search in planar subdivisions, </title> <note> SIAM J. Computing 12, (1983), pp.28-35. </note>
Reference-contexts: The algorithm discussed in this section is due to Kirkpatrick <ref> [12] </ref>. All the geometric objects in the refinement method on rectangles are simple rectangles. Moreover, it is easy to refine a rectangle into four smaller rectangles by a horizontal line and a vertical line.
Reference: [13] <author> D. G. Kirkpatrick and R. Seidel, </author> <title> The ultimate planar convex hull algorithm? SIAM J. </title> <booktitle> Computing 15, </booktitle> <year> (1986), </year> <month> pp.287-299. </month>
Reference-contexts: In particular, if the function F (n) is O (n), then it can be proved that the function T (n) is also O (n). 6.1 Kirkpatrick-Seidel's algorithm for convex hulls We present a prune and search algorithm for constructing convex hulls, which is due to Kirkpatrick and Seidel <ref> [13] </ref>. Let us first consider the following problem.
Reference: [14] <author> D. E. Knuth, </author> <title> The Art of Computer Programming. Volume III: Sorting and Searching, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> (1973). </year>
Reference-contexts: Chapter 2 Algorithmic Foundations For the past twenty years the analysis and design of computer algorithms has been one of the most thriving endeavors in computer science. The fundamental works of Knuth <ref> [14] </ref> and Aho-Hopcroft-Ullman [2] have brought order and systematization to a rich collection of isolated results, conceptualized the basic paradigms, and established a methodology that has become the standard of the field. <p> * HALF-PLANE INTERSECTION Given n half-planes in the plane, compute their common intersection. * POLYGON INTERSECTION Given two polygons P and Q with m and n vertices, respectively, com puter their intersection. 3.4 Geometric searching This geometric problem is well motivated by the following Post Office Problem proposed by Knuth <ref> [14] </ref>: Given a fixed map of n post offices, for an arbitrary query point, which is the nearest post office? The solution to this problem is simple: compare the distance between the query point and each post office and find the nearest one. <p> Similarly, we cannot expect that the storage used for the organized structure is less than O (n) since even storing the unorganized structure, the subdivision G itself needs (n) space. Finally, as pointed out by Knuth <ref> [14] </ref>, any algorithm for searching an ordered table of length n by means of comparisons can be represented as a binary tree of n leaves, thus in the worst case, the searching time is at least (log n). <p> Similarly, we cannot expect that the storage used for the organized structure is less than O (n) since even storing the unorganized structure, the PSLG G itself needs (n) space. Finally, as pointed out by Knuth <ref> [14] </ref>, any algorithm for searching an ordered table of length n by means of comparisons can be represented as a binary tree of n leaves, thus in the worst case, the searching time is at least (log n).
Reference: [15] <author> J. B. Kruskal, </author> <title> On the shortest spanning subtree of a graph and the traveling salesman problem, </title> <booktitle> Proc. AMS 7, </booktitle> <year> (1956), </year> <month> pp.48-50. </month>
Reference-contexts: Therefore, a Euclidean minimum spanning tree of the set S is a minimum weight spanning tree of the graph G S , and vice versa. There are a few efficient algorithms constructing the minimum weight spanning tree for weighted graphs. For example, Kruskal's algorithm <ref> [15] </ref> constructs the minimum weight spanning tree for a weighted graph with m edges in time O (m log m). However, the complete graph G S has (n 2 ) edges.
Reference: [16] <author> D. T. Lee and F. P. Preparata, </author> <title> Computational Geometry A Survey, </title> <journal> IEEE Transitions on Computers C-33, </journal> <volume> No. 12, </volume> <year> (1984), </year> <month> pp.1072-1101. </month>
Reference: [17] <author> P. McMullen and G. C. Shephard, </author> <title> Convex Polytopes and the Upper Bound Conjecture, </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, Eng-land, </address> <year> (1971). </year>
Reference-contexts: Theorem 3.1.3 The convex hull of a finite set S of points in E 2 is a simple polygon. Moreover, each hull vertex must be a point in the set S. proof. We give an informal, but intuitive proof here. A formal proof can be found in <ref> [17] </ref>. 1. The convex hull CH (S) of the finite set S must be connected. Otherwise, let p 1 and p 2 be two points in two distinct connected components of CH (S). Then the line segment p 1 p 2 would not be entirely in CH (S). 2.
Reference: [18] <author> K. Mehlhorn, </author> <title> Multidimensional Searching and Computational Geometry, </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> (1984). </year>
Reference-contexts: The field is currently thriving. Since 1985, several texts, collections, and monographs have appeared <ref> [1, 10, 18, 20, 25, 26] </ref>. The annual symposium has attracted 100 papers and 200 attendees steadily. There is evidence that the field is broadening to touch geometric modeling and geometric theorem proving.
Reference: [19] <author> W. M. Newman and R. F. Sproull, </author> <title> Principles of Interactive Computer Graphics, </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> (1979). </year>
Reference-contexts: Computational geometry is of practical importance because Euclidean 1 2 INTRODUCTION space of two and three dimensions forms the arena in which real physical objects are arranged. A large number of applications areas such as pattern recognition [28], computer graphics <ref> [19] </ref>, image processing [22], operations research, statistics [4, 27], computer-aided design, robotics [25, 26], etc., have been the incubation bed of the discipline since they provide inherently geometric problems for which efficient algorithms have to be developed. <p> An architectural design cannot place two interpenetrable objects to share a common region. When displaying objects on a 2-dimensional display device, obscured portions (or intersecting portions) should be eliminated to enhance realism, a long standing problem known as hidden line/surface elimination problem <ref> [19] </ref>.
Reference: [20] <author> J. O'Rourke, </author> <title> Art Gallery Theorems and Algorithms, </title> <publisher> Oxford, </publisher> <address> New York, </address> <year> (1987). </year>
Reference-contexts: The field is currently thriving. Since 1985, several texts, collections, and monographs have appeared <ref> [1, 10, 18, 20, 25, 26] </ref>. The annual symposium has attracted 100 papers and 200 attendees steadily. There is evidence that the field is broadening to touch geometric modeling and geometric theorem proving.
Reference: [21] <author> C. H. Papadimitriou and K. Steiglitz, </author> <title> Combinatorial Optimization: Algorithms and Complexity, </title> <address> Englewood Cliffs, NJ: </address> <publisher> Prentice Hall, </publisher> <year> (1982). </year>
Reference-contexts: Geometric transformations have their roots in the mathematics of the early nineteenth century [6]. Their applications to problems of computing dates back to the concept of primal and dual problems in the study of linear programming (see, for example, <ref> [21] </ref>). Brown [7] gives a systematic treatment of transformations and their applications to problems of computational geometry. Since his dissertation, these methods have found vast application.
Reference: [22] <author> T. Pavlidis, </author> <title> Algorithms for Graphics and Image Processing, </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> (1982). </year>
Reference-contexts: Computational geometry is of practical importance because Euclidean 1 2 INTRODUCTION space of two and three dimensions forms the arena in which real physical objects are arranged. A large number of applications areas such as pattern recognition [28], computer graphics [19], image processing <ref> [22] </ref>, operations research, statistics [4, 27], computer-aided design, robotics [25, 26], etc., have been the incubation bed of the discipline since they provide inherently geometric problems for which efficient algorithms have to be developed.
Reference: [23] <author> F. P. Preparata and M. I. Shamos, </author> <title> Computational Geometry: An Introduction, </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> (1985). </year> <note> BIBLIOGRAPHY 221 </note>
Reference-contexts: After a decade of development the field came into its own in 1985, when three components of any healthy discipline were realized: a textbook, a conference, and a journal. Preparata and Shamos's book Computational Geometry: An Introduction <ref> [23] </ref>, the first textbook solely devoted to the topic, was published at about the same time as the first ACM Symposium on Computational Geometry was held, and just prior to the start of a new Springer-Verlag journal Discrete and Computational Geometry. The field is currently thriving. <p> The following is an algorithm for traveling the boundary of a region when the DCEL of G is given. (The algorithm for traveling the edges incident on a vertex of G is given in <ref> [23] </ref>.) Algorithm TRACE-REGION (i) Trace the boundary edges of the region i. - BEGIN 1. a := HF [i]; 3. IF (DCEL [a][F1] = i) THEN a := DCEL [a][P1]; ELSE a := DCEL [a][P2]; 4.
Reference: [24] <author> R. C. Prim, </author> <title> Shortest connection networks and some generalizations, </title> <journal> Bell Sys. Tech, J. </journal> <volume> 36, </volume> <year> (1957), </year> <month> pp.1389-1401. </month>
Reference: [25] <author> J. Schwartz, M. Sharir, and J. Hopcroft, </author> <title> Planning, Geometry, and Complexity of Robot Motion, </title> <publisher> Ablex Publishing Co., </publisher> <address> Norwood, New Jersey, </address> <year> (1987). </year>
Reference-contexts: The field is currently thriving. Since 1985, several texts, collections, and monographs have appeared <ref> [1, 10, 18, 20, 25, 26] </ref>. The annual symposium has attracted 100 papers and 200 attendees steadily. There is evidence that the field is broadening to touch geometric modeling and geometric theorem proving. <p> A large number of applications areas such as pattern recognition [28], computer graphics [19], image processing [22], operations research, statistics [4, 27], computer-aided design, robotics <ref> [25, 26] </ref>, etc., have been the incubation bed of the discipline since they provide inherently geometric problems for which efficient algorithms have to be developed. A large number of manufacturing problems involve wire layout, facilities location, cutting-stock and related geometric optimization problems.
Reference: [26] <author> J. Schwartz and C. Yap, </author> <booktitle> Algorithmic and Geometric Aspects of Robotics, </booktitle> <volume> Vol. 1, </volume> <publisher> Erlbaum, </publisher> <address> Hillsdale, New Jersey, </address> <year> (1987). </year>
Reference-contexts: The field is currently thriving. Since 1985, several texts, collections, and monographs have appeared <ref> [1, 10, 18, 20, 25, 26] </ref>. The annual symposium has attracted 100 papers and 200 attendees steadily. There is evidence that the field is broadening to touch geometric modeling and geometric theorem proving. <p> A large number of applications areas such as pattern recognition [28], computer graphics [19], image processing [22], operations research, statistics [4, 27], computer-aided design, robotics <ref> [25, 26] </ref>, etc., have been the incubation bed of the discipline since they provide inherently geometric problems for which efficient algorithms have to be developed. A large number of manufacturing problems involve wire layout, facilities location, cutting-stock and related geometric optimization problems.
Reference: [27] <author> M. I. Shamos, </author> <title> Geometry and statistics: Problems at the interface, in Algorithms and Complexity, </title> <editor> J. F. Traub, Ed., </editor> <publisher> Academic, </publisher> <address> New York, </address> <year> (1976), </year> <month> pp.251-280. </month>
Reference-contexts: Computational geometry is of practical importance because Euclidean 1 2 INTRODUCTION space of two and three dimensions forms the arena in which real physical objects are arranged. A large number of applications areas such as pattern recognition [28], computer graphics [19], image processing [22], operations research, statistics <ref> [4, 27] </ref>, computer-aided design, robotics [25, 26], etc., have been the incubation bed of the discipline since they provide inherently geometric problems for which efficient algorithms have to be developed. A large number of manufacturing problems involve wire layout, facilities location, cutting-stock and related geometric optimization problems.
Reference: [28] <author> G. T. Toussaint, </author> <title> Pattern recognition and geometrical complexity, </title> <booktitle> Proc. 5th Int. Conf. Pattern Recog., </booktitle> <year> (1980), </year> <month> pp.1324-1347. </month>
Reference-contexts: Computational geometry is of practical importance because Euclidean 1 2 INTRODUCTION space of two and three dimensions forms the arena in which real physical objects are arranged. A large number of applications areas such as pattern recognition <ref> [28] </ref>, computer graphics [19], image processing [22], operations research, statistics [4, 27], computer-aided design, robotics [25, 26], etc., have been the incubation bed of the discipline since they provide inherently geometric problems for which efficient algorithms have to be developed.
References-found: 28

