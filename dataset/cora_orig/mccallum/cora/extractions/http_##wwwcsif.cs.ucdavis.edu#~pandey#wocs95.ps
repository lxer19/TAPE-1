URL: http://wwwcsif.cs.ucdavis.edu/~pandey/wocs95.ps
Refering-URL: http://www.cs.ucdavis.edu/~pandey/cyes.html
Root-URL: http://www.cs.ucdavis.edu
Email: fraju, browneg@cs.utexas.edu  
Title: CYES-C++: A Concurrent Extension of C++ through Compositional Mechanisms  
Author: Raju Pandey J. C. Browne 
Date: December 10, 1994  
Address: Austin, TX 78712  
Affiliation: Department of Computer Sciences The University of Texas at Austin  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Margaret A. Ellis and Bjarne Stroustrup. </author> <title> The Annotated C++ Reference Manual. </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: 1 Introduction This paper describes a concurrent extension of the C++ programming language <ref> [1] </ref>. The extended C++ language, which we call CYES-C++, supports highly concurrent objects, implements a general concurrent method invocation mechanism, fully integrates the notion of inheritance with concurrency, and supports reusability of both method and synchronization specifications.
Reference: [2] <author> Satoshi Matsuoka and Akinori Yonezawa. </author> <title> Analysis of Inheritance Anomaly in Object-Oriented Concurrent Programming Languages. </title> <booktitle> In Research Directions in Object-Based Concurrency. </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, </address> <year> 1993. </year>
Reference-contexts: For instance, future-based asynchronous method invocation can be represented by specifying an event ordering constraint expression that orders the read and write events on a future variable. 2.3 Extensibility of Classes Inheritance provides a framework for extending the definition of classes. There is a problem, termed the inheritance anomaly <ref> [2] </ref>, with the inheritance of method implementations in many concurrent object-oriented programming languages. It arises because implementations of methods in most programming languages combine specifications of both computational and interaction behaviors.
Reference: [3] <author> Raju Pandey and James C. Browne. </author> <title> Event-based Composition of Concurrent Programs. </title> <booktitle> In Workshop on Languages and Compilers for Parallel Computation, Lecture Notes in Computer Science 768. </booktitle> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: The computational model [4] for CYES-C++ is derived by integrating the ideas of a general model of computation, called the C-YES model <ref> [3] </ref>, within the framework of the object-oriented paradigm. The major components of C-YES model of parallel computation are: i) separation of specification of computational behavior of components and specification of interactions among the components, and (ii) declarative specification of interaction as algebraic expressions over events. <p> In section 4, we give direction for future work along with some conclusions. 2 Computational Model The computational model [4] for CYES-C++ is derived by integrating a general compositional model of concurrent programming, called the C-YES model <ref> [3] </ref>, within the framework of the object-oriented paradigm. In the C-YES model, a concurrent program is composed from two separately specified entities: i) computational behavior specifications of components of the concurrent program, and ii) specification of interactions among the components.
Reference: [4] <author> Raju Pandey and James C. Browne. </author> <title> A Compositional Approach to Concurrent Object-Oriented Programming. </title> <booktitle> In IEEE Inter-nation Conference on Computer Languages. </booktitle> <publisher> IEEE Press, </publisher> <month> May </month> <year> 1994. </year> <month> 6 </month>
Reference-contexts: The extended C++ language, which we call CYES-C++, supports highly concurrent objects, implements a general concurrent method invocation mechanism, fully integrates the notion of inheritance with concurrency, and supports reusability of both method and synchronization specifications. The computational model <ref> [4] </ref> for CYES-C++ is derived by integrating the ideas of a general model of computation, called the C-YES model [3], within the framework of the object-oriented paradigm. <p> We then present the various aspects of the language with suitable examples in section 3. In section 4, we give direction for future work along with some conclusions. 2 Computational Model The computational model <ref> [4] </ref> for CYES-C++ is derived by integrating a general compositional model of concurrent programming, called the C-YES model [3], within the framework of the object-oriented paradigm.
References-found: 4

