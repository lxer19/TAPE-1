URL: http://www.win.tue.nl/cs/ipa/uitp/papers/Andrews.ps.gz
Refering-URL: http://www.win.tue.nl/cs/ipa/uitp/proceedings.html
Root-URL: http://www.win.tue.nl
Title: On the Spreadsheet Presentation of Proof Obligations  
Author: James H. Andrews 
Address: Ontario London, Ontario, Canada N6A 5B7  
Affiliation: Dept. of Computer Science University of Western  
Abstract: A compact and structured format for presenting proof obligations is described. The format places the formulas and proof obligations in the form of a spreadsheet, where rows are formulas, columns are obligations, and cells record whether and how a formula appears in an obligation. This spreadsheet presentation frees the proof system from some interface-related restrictions, and allows users to follow a more natural style of problem solving. It can be applied to either sequent or tableau logics, and can be used by most theorem proving systems. An initial implementation is discussed, some recommendations are made for future effort, and a graphical user interface design is proposed based on the spreadsheet model. 
Abstract-found: 1
Intro-found: 1
Reference: [And91] <author> James H. Andrews. </author> <title> Logic Programming: Operational Semantics and Proof Theory. Distinguished Dissertation Series. </title> <publisher> Cambridge University Press, </publisher> <month> March </month> <year> 1991. </year>
Reference-contexts: The proof assistant SVP is a system for proving properties of Prolog programs, based on the author's semantics for depth-first, left-to-right Prolog with ground negation <ref> [And91, And93, And97] </ref>. It uses a scrolling, ASCII command-loop interface.
Reference: [And93] <author> James H. Andrews. </author> <title> A logical semantics for depth-first Prolog with ground negation. </title> <booktitle> In Proceedings of the International Logic Programming Symposium, </booktitle> <address> Vancouver, October 1993. </address> <publisher> MIT Press. </publisher>
Reference-contexts: The proof assistant SVP is a system for proving properties of Prolog programs, based on the author's semantics for depth-first, left-to-right Prolog with ground negation <ref> [And91, And93, And97] </ref>. It uses a scrolling, ASCII command-loop interface.
Reference: [And97] <author> James H. Andrews. </author> <title> A logical semantics for depth-first Prolog with ground negation. </title> <booktitle> Theoretical Computer Science, </booktitle> <address> 184(1-2):105-143, </address> <month> September </month> <year> 1997. </year>
Reference-contexts: The proof assistant SVP is a system for proving properties of Prolog programs, based on the author's semantics for depth-first, left-to-right Prolog with ground negation <ref> [And91, And93, And97] </ref>. It uses a scrolling, ASCII command-loop interface.
Reference: [Nar93] <author> Bonnie A. Nardi. </author> <title> A Small Matter of Programming. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Mass., </address> <year> 1993. </year>
Reference-contexts: The computer spreadsheet's strength is that it provides a "good division of labor between text and graphics [and also] a careful integration of text and graphics" <ref> [Nar93] </ref>. Why should a spreadsheet format be appropriate for proof obligations? The key observation here is that although we may have many obligations, each containing many formulas, the number of distinct formulas is often small. Consider an initial formula of the form A _ ((B _ (D&F ))&(C _ (E&G))).
Reference: [Nor83] <author> Donald A. Norman. </author> <title> Cognitive engineering. </title> <editor> In Donald A. Norman and Stephen W. Draper, editors, </editor> <title> User Centered System Design: </title> <booktitle> New Perspectives on Human-Computer Interaction, </booktitle> <pages> pages 31-61, </pages> <address> Hillsdale, N.J., </address> <year> 1983. </year> <editor> L. </editor> <publisher> Erl-baum Associates. </publisher>
Reference-contexts: This problem was largely solved by Bricklin and Frankston's revolutionary 1978 program Visicalc <ref> [Nor83] </ref>. Since then, accounting packages have consistently displayed information in an electronic form of spreadsheet, in which information is presented in related rows and columns.
Reference: [Sta97] <author> R. F. Stark. </author> <title> Formal verification of logic programs: foundations and implementation. </title> <editor> In S. Adian and A. Nerode, editors, </editor> <booktitle> Logical Foundations of Computer Science LFCS '97 | Logic at Yaroslavl, </booktitle> <pages> pages 354-368. </pages> <note> Springer-Verlag, Lecture Notes in Computer Science 1234, </note> <year> 1997. </year> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: A spreadsheet representing an example proof state. the proof, the system automatically displays the spreadsheet which describes the current state. SVP is sequent-based, so every proof obligation is a sequent. Stark <ref> [Sta97] </ref> has written a proof system with similar capabilities, though a different interface style. Here I focus only on the aspects of SVP that are most relevant to discussion of spreadsheets. 2.1 The Layout of the SVP Spreadsheet using SVP.
References-found: 6

