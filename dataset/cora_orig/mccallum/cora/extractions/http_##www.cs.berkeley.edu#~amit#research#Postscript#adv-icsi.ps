URL: http://www.cs.berkeley.edu/~amit/research/Postscript/adv-icsi.ps
Refering-URL: http://www.cs.berkeley.edu/~amit/research/index.html
Root-URL: http://www.cs.berkeley.edu
Email: E-mail: fferrari,amit,ventreg@icsi.berkeley.edu  
Title: Distributed advance reservation of real-time connections  
Phone: (510) 643-9153 FAX (510) 643-7684  
Author: Domenico Ferrari, Amit Gupta, Giorgio Ventre 
Note: Now with  
Date: March 1995  
Address: I 1947 Center St. Suite 600 Berkeley, California 94704-1198  TR-95-008  Napoli, Italy  
Affiliation: INTERNATIONAL COMPUTER SCIENCE INSTITUTE  Tenet Group University of California at Berkeley, and International Computer Science Institute  Dipartimento di Informatica e Sistemistica, Universita degli Studi di Napoli "Federico II",  
Abstract: The ability to reserve real-time connections in advance is essential in all distributed multi-party applications (i.e., applications involving multiple human beings) using a network that controls admissions to provide good quality of service. This paper discusses the requirements of the clients of an advance reservation service, and a distributed design for such a service. The design is described within the context of the Tenet Real-Time Protocol Suite 2, a suite being developed for multi-party communication, which will offer advance reservation capabilities to its clients based on the principles and the mechanisms proposed in the paper. Simulation results providing useful data about the performance and some of the properties of these mechanisms are also presented. We conclude that the one described here is a viable approach to constructing an advance reservation service within the context of the Tenet Suites as well as that of other solutions to the multi-party real-time communication problem. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Anindo Banerjea, Domenico Ferrari, Bruce Mah, Mark Moran, Dinesh Verma, and Hui Zhang. </author> <title> The Tenet real-time protocol suite: Design, implementation, and experiences. </title> <type> Technical Report TR-94-059, </type> <institution> International Computer Science Institute, Berkeley, California, </institution> <month> November </month> <year> 1994. </year> <note> Also to appear in IEEE/ACM Transactions on Networking, </note> <year> 1995. </year>
Reference-contexts: To our knowledge, advance reservation services are not available within any of the existing schemes for real-time communication (see for example <ref> [1, 3, 4, 14, 15, 16] </ref>). Let us consider, for example, the Tenet scheme [8], which has been one of the first to be implemented (in the Tenet Real-Time Protocol Suite 1 [1]). The Tenet protocols can coexist with non-real-time protocols such as those in the Internet suite. <p> Let us consider, for example, the Tenet scheme [8], which has been one of the first to be implemented (in the Tenet Real-Time Protocol Suite 1 <ref> [1] </ref>). The Tenet protocols can coexist with non-real-time protocols such as those in the Internet suite. <p> Since the environment is a packet-switching one, non-real-time traffic is able, even when resources are fully booked or overbooked, to exploit any resources not currently in use (even if they have been reserved) by real-time connections. In the client-service interface of the Tenet Suite 1 <ref> [1] </ref>, there is no way a client can request the establishment of a real-time channel in advance. <p> The service model in the existing proposals and realizations of real-time communication services, including that in the Tenet Suite 1 <ref> [1] </ref>, assumes that real-time channels are requested (and established) for an indefinite duration. Clients are not asked to specify for how long such channels (to be called immediate channels in the sequel) will be alive, and this non-negligibly simplifies their tasks.
Reference: [2] <author> Riccardo Bettati, Domenico Ferrari, Amit Gupta, Wendy Heffner, Wingwai Howe, Quyen Nguyen, Mark Moran, and Raj Yavatkar. </author> <title> Connection establishment for multi-party real-time communication. </title> <booktitle> Proceedings of Fifth International Workshop on Network and Operating Systems Support for Distributed Audio and Video, </booktitle> <address> Boston, MA, </address> <month> April </month> <year> 1994. </year>
Reference-contexts: Our measurements show that the admission tests overhead is usually less than 1 ms per server on a 12 SPECmarks (SPEC 92int) SUN SS IPC <ref> [2] </ref>. Isolating the effects of the two components Our advance reservation mechanisms affect resource reservations in two ways: first, resource partitioning provides isolation and protection between the advance requests and the immediate requests; second, advance reservation provides higher priority 14 to connections that come with larger advance-notice periods.
Reference: [3] <author> Robert Braden, David Clark, and Scott Shenker. </author> <title> Integrated services in the internet architecture: an overview. Request for Comments (Informational) RFC 1633, </title> <institution> Internet Engineering Task Force, </institution> <month> June </month> <year> 1994. </year>
Reference-contexts: To our knowledge, advance reservation services are not available within any of the existing schemes for real-time communication (see for example <ref> [1, 3, 4, 14, 15, 16] </ref>). Let us consider, for example, the Tenet scheme [8], which has been one of the first to be implemented (in the Tenet Real-Time Protocol Suite 1 [1]). The Tenet protocols can coexist with non-real-time protocols such as those in the Internet suite.
Reference: [4] <author> David Clark, Scott Shenker, and Lixia Zhang. </author> <title> Supporting real-time applications in an integrated services packet network: Architecture and mechanism. </title> <booktitle> Proceedings of ACM SIGCOMM'92, </booktitle> <pages> pages 14-26, </pages> <address> Baltimore, Maryland, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: To our knowledge, advance reservation services are not available within any of the existing schemes for real-time communication (see for example <ref> [1, 3, 4, 14, 15, 16] </ref>). Let us consider, for example, the Tenet scheme [8], which has been one of the first to be implemented (in the Tenet Real-Time Protocol Suite 1 [1]). The Tenet protocols can coexist with non-real-time protocols such as those in the Internet suite. <p> In [5], the authors propose an advance reservation mechanism for predictive service <ref> [4] </ref>, which requires characterizing advance reservation 17 request arrivals, start times, and durations. Since it is designed for predictive service, their approach cannot be used to reserve guaranteed-performance channels.
Reference: [5] <author> Mikael Degermark, Torsten Kohler, Stephen Pink, and Olov Schelen. </author> <title> Advance reservations for predictive service. </title> <booktitle> Proceedings of Fifth International Workshop on Network and Operating Systems Support for Distributed Audio and Video, </booktitle> <address> Boston, MA, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: In <ref> [5] </ref>, the authors propose an advance reservation mechanism for predictive service [4], which requires characterizing advance reservation 17 request arrivals, start times, and durations. Since it is designed for predictive service, their approach cannot be used to reserve guaranteed-performance channels.
Reference: [6] <author> Luca Delgrossi, Sibylle Schaller, Hartmut Wittig, and Lars Wolf. </author> <title> Issues of reserving resources in advance. </title> <booktitle> Proceedings of Fifth International Workshop on Net 18 work and Operating Systems Support for Distributed Audio and Video, </booktitle> <address> Boston, MA, </address> <month> April </month> <year> 1995. </year>
Reference: [7] <author> Domenico Ferrari and Amit Gupta. </author> <title> Resource partitioning in real-time communication. </title> <booktitle> Proceedings of IEEE Symposium on Global Data Networking, </booktitle> <pages> pages 128-135, </pages> <address> Cairo, Egypt, </address> <month> December </month> <year> 1993. </year>
Reference-contexts: This complication can be avoided, and the establishment of immediate channels still kept as fast as possible, by separating the two types of channels so that the admission tests for a new channel only take into account the channels of its type in each server. Resource partitioning <ref> [7, 9] </ref>, a service the Tenet Suite 2 will offer network managers, is an almost perfect solution for this problem. The immediate partition treats any new request exactly as described in [8]. <p> Table 2 assumes that the scheduling discipline the server implements is one that requires only buffer space and processing power to be considered as resources (if a deadline-based discipline is used, we need to consider also the "schedulability" or "delay" resource <ref> [7] </ref>). In the table, buffer space is expressed as a number of packet-sized buffers, and processing power in Kbits/s; times are measured in milliseconds. We have omitted several columns that contain local bounds and other channel parameters.
Reference: [8] <author> Domenico Ferrari and Dinesh Verma. </author> <title> A scheme for real-time channel establishment in wide-area networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 8(3) </volume> <pages> 368-379, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: To our knowledge, advance reservation services are not available within any of the existing schemes for real-time communication (see for example [1, 3, 4, 14, 15, 16]). Let us consider, for example, the Tenet scheme <ref> [8] </ref>, which has been one of the first to be implemented (in the Tenet Real-Time Protocol Suite 1 [1]). The Tenet protocols can coexist with non-real-time protocols such as those in the Internet suite. <p> This disadvantage is a very serious one, so serious that we believe it cannot be ignored. In our design, immediate channels will normally be created with an indefinite duration. In the establishment of immediate channels, which in the scheme described in <ref> [8] </ref> only considers the situation at the time the request is made, we must now look at all the future situations as well: Figure 1 shows a case in which no immediate channel can be created through a server (i.e., a network component that has resources to be allocated) at time <p> Resource partitioning [7, 9], a service the Tenet Suite 2 will offer network managers, is an almost perfect solution for this problem. The immediate partition treats any new request exactly as described in <ref> [8] </ref>. The advance partition must instead use a different mechanism (to be presented in Section 3.3) to test new requests for admission. <p> In the simulations, we used the EDD scheduling discipline <ref> [8] </ref>, in which admission control tests at a server take O (n) time, where n is the number of resource allocations existing at that server.
Reference: [9] <author> Amit Gupta and Domenico Ferrari. </author> <title> Resource partitioning for multi-party real-time communication. </title> <type> Technical Report TR-94-061, </type> <institution> International Computer Science Institute, Berkeley, California, </institution> <month> November </month> <year> 1994. </year>
Reference-contexts: This complication can be avoided, and the establishment of immediate channels still kept as fast as possible, by separating the two types of channels so that the admission tests for a new channel only take into account the channels of its type in each server. Resource partitioning <ref> [7, 9] </ref>, a service the Tenet Suite 2 will offer network managers, is an almost perfect solution for this problem. The immediate partition treats any new request exactly as described in [8]. <p> The partition-based solution raises, however, a problem: each resource has to be allocated statically to each partition, and this may cause inefficiencies due to fragmentation <ref> [9] </ref> and, worse, to poor allocation decisions; one of the two partitions for a resource may be saturated while the other is almost empty.
Reference: [10] <author> Amit Gupta, Wendy Heffner, Mark Moran, and Clemens Szyperski. </author> <title> Multi-party real-time communication in computer networks. </title> <booktitle> Collected abstracts of 4th International Workshop on Network and Operating Systems Support for Digital Audio and Video, </booktitle> <pages> pages 37-39, </pages> <address> Lancaster, UK, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: Section 2 discusses the service requirements for advance reservations. In Section 3, 1 we describe the distributed advance reservations mechanisms we have designed for, and are implementing in, the Tenet Suite 2 <ref> [10] </ref>. The principles on which our mechanisms are based, however, are easily portable to other approaches and protocols for real-time communication. <p> This version provides complete support for multi-party real-time communication protocols, including support for advance reservations. Our goal was to make the experiments as realistic as possible, so that we could confidently predict the behavior of our implementation of the advance reservation service in the Tenet Suite 2 <ref> [10] </ref>. For example, we used the NSFNET backbone network topology in our simulations (see Figure 3). We assumed 45Mbps for each link, and we set the propagation delay along the diameter to 40 ms.
Reference: [11] <author> Amit Gupta, Winnie Howe, Mark Moran, and Quyen Nguyen. </author> <title> Resource sharing in multi-party realtime communication. </title> <booktitle> Proceedings of INFOCOM 95, </booktitle> <address> Boston, MA, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: also be observed that, in this workload, all conferences are of the same size, and that there exist resource sharing relationships among the conference channels (only up to 2 of the 10 channels constituting a conference may be active at any given time) so that they can share resource allocations <ref> [11, 12] </ref>. 13 In Figure 4 and all of the remaining figures, we report on the horizontal axis the fraction f of the total resources that is allocated to the immediate partition. The advance partition's allocation is 100 (0:8 f )% of the total resources. <p> As we increase the allocation to the immediate partition, the overhead increases (due to resource sharing, the computational overhead is higher for single channels than for channels that belong to a conference <ref> [11] </ref>; the overhead increases because we accept more individual channels at the expense of conference channels).
Reference: [12] <author> Amit Gupta and Mark Moran. </author> <title> Channel groups: A unifying abstraction for specifying inter-stream relationships. </title> <type> Technical Report TR-93-015, </type> <institution> International Computer Science Institute, Berkeley, California, </institution> <month> March </month> <year> 1993. </year>
Reference-contexts: also be observed that, in this workload, all conferences are of the same size, and that there exist resource sharing relationships among the conference channels (only up to 2 of the 10 channels constituting a conference may be active at any given time) so that they can share resource allocations <ref> [11, 12] </ref>. 13 In Figure 4 and all of the remaining figures, we report on the horizontal axis the fraction f of the total resources that is allocated to the immediate partition. The advance partition's allocation is 100 (0:8 f )% of the total resources.
Reference: [13] <author> E. W. Knightly and G. Ventre. </author> <title> Galileo: a tool for simulation and analysis of real-time networks. </title> <booktitle> Proceedings of IEEE 1993 International Conference on Network Protocols, </booktitle> <pages> pages 264-271, </pages> <address> San Francisco, CA, </address> <month> October </month> <year> 1993. </year>
Reference-contexts: In this section, we describe the simulation scenario, the workload, and the results obtained with these experiments. 4.1 Simulator description We ran these simulations on an enhanced version of Galileo <ref> [13] </ref>, an object-oriented real-time network simulator. This version provides complete support for multi-party real-time communication protocols, including support for advance reservations.
Reference: [14] <author> Craig Partridge and Stephen Pink. </author> <title> An implementation of the revised internet stream protocol (ST-2). </title> <journal> Journal of Internetworking Research and Experience, </journal> <pages> pages 27-54, </pages> <year> 1992. </year>
Reference-contexts: To our knowledge, advance reservation services are not available within any of the existing schemes for real-time communication (see for example <ref> [1, 3, 4, 14, 15, 16] </ref>). Let us consider, for example, the Tenet scheme [8], which has been one of the first to be implemented (in the Tenet Real-Time Protocol Suite 1 [1]). The Tenet protocols can coexist with non-real-time protocols such as those in the Internet suite.
Reference: [15] <author> Wilko Reinhardt. </author> <title> Advance reservation of network resources for multimedia applications. </title> <booktitle> Proceedings of ICAWA 94, </booktitle> <address> Germany, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: To our knowledge, advance reservation services are not available within any of the existing schemes for real-time communication (see for example <ref> [1, 3, 4, 14, 15, 16] </ref>). Let us consider, for example, the Tenet scheme [8], which has been one of the first to be implemented (in the Tenet Real-Time Protocol Suite 1 [1]). The Tenet protocols can coexist with non-real-time protocols such as those in the Internet suite. <p> We have recently learnt about two other efforts to provide advance reservations for real-time communication. Reinhardt <ref> [15] </ref> proposes a signaling mechanism for advance reservations with the ST-II protocol and Delgrossi et al.[6] discuss the design issues encountered when trying to support advance reservations in ST-II. The signaling approach in [15] is somewhat similar to ours, except that it uses fixed-size intervals, with the accompanying extra overhead (for <p> We have recently learnt about two other efforts to provide advance reservations for real-time communication. Reinhardt <ref> [15] </ref> proposes a signaling mechanism for advance reservations with the ST-II protocol and Delgrossi et al.[6] discuss the design issues encountered when trying to support advance reservations in ST-II. The signaling approach in [15] is somewhat similar to ours, except that it uses fixed-size intervals, with the accompanying extra overhead (for example, with five-minute granularity, the overhead for a two-hour video conference would be approximately twenty-four times the overhead for an immediate reservation, which is the extremely unlikely upper bound for overhead in our
Reference: [16] <author> Lixia Zhang, Steve Deering, Deborah Estrin, Scott Shenker, and Daniel Zappala. RSVP: </author> <title> A new resource reservation protocol. </title> <journal> IEEE Networks Magazine, </journal> <volume> 31(9) </volume> <pages> 8-18, </pages> <month> September </month> <year> 1993. </year> <month> 19 </month>
Reference-contexts: To our knowledge, advance reservation services are not available within any of the existing schemes for real-time communication (see for example <ref> [1, 3, 4, 14, 15, 16] </ref>). Let us consider, for example, the Tenet scheme [8], which has been one of the first to be implemented (in the Tenet Real-Time Protocol Suite 1 [1]). The Tenet protocols can coexist with non-real-time protocols such as those in the Internet suite.
References-found: 16

