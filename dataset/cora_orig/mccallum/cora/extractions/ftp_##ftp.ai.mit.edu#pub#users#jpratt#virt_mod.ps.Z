URL: ftp://ftp.ai.mit.edu/pub/users/jpratt/virt_mod.ps.Z
Refering-URL: http://www.leglab.ai.mit.edu/leglab/robots/Spring_Flamingo/Spring_Flamingo.html
Root-URL: 
Title: Virtual Model Control of a Bipedal Walking Robot a physical bipedal walking robot. A simple
Degree: Jerry Pratt, Peter Dilworth, Gill Pratt  
Keyword: Virtual Model Control  
Web: http://www.ai.mit.edu/projects/leglab/  
Address: Cambridge, MA 02139  
Affiliation: MIT Leg Laboratory,  
Note: In Proceedings of the 1997 International Conference on Robotics and Automation (ICRA '97)  has been applied to  
Abstract: Virtual Model Control is a motion control language that uses simulations of imagined mechanical components to create forces, which are applied through real joint torques, thereby creating the illusion that the virtual components are connected to the robot. Due to the intuitive nature of this technique, designing a Virtual Model Controller requires the same skills as designing the mechanism itself. A high level control system can be cascaded with the low level Virtual Model Controller to modulate the parameters of the virtual mechanisms. Discrete commands from the high level controller would then result in fluid motion. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Dunn and R. Howe. </author> <title> Towards smooth bipedal walking. </title> <booktitle> IEEE Conference on Robotics and Automation, </booktitle> <year> 1996. </year>
Reference: [2] <author> N. Hogan. </author> <title> Impeadance control: An approach to manipulation: Part i theory, part ii implementation, part iii - applications. </title> <journal> J. of Dynamic Systems, Measurement and Control, </journal> <volume> 107 </volume> <pages> 1-24, </pages> <year> 1985. </year>
Reference-contexts: Such components can include simple springs, dampers, dashpots, masses, latches, bearings, non-linear potential and dissipative fields, or any other imaginable component. Virtual components can even contain adaptive and learning elements [12]. Virtual Model Control borrows ideas from Virtual Reality, Hybrid Position-Force Control [14], Stiffness Control [16], Impeadance Control <ref> [2] </ref>, and the Operational Space Formulation [5]. Many complex tasks that are difficult to describe using traditional techniques can be readily characterized with a simple set of virtual components. For example, consider a robot wishing to impart an impact onto an unknown surface (e.g. knocking on a door).
Reference: [3] <author> S. Kajita and K.Tani. </author> <title> Experimental study of biped dynamic walking in the linear inverted pendulum mode. </title> <booktitle> IEEE Conference on Robotics and Automation, </booktitle> <year> 1995. </year>
Reference: [4] <author> O. Khatib. </author> <title> Real-time obstacle avoidance for manipulators and mobile robots. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 5(1) </volume> <pages> 90-98, </pages> <year> 1986. </year>
Reference: [5] <author> O. Khatib. </author> <title> A unified approach for motion and force control of robot manipulators: the operational space formulation. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 3(1) </volume> <pages> 43-53, </pages> <year> 1987. </year>
Reference-contexts: Virtual components can even contain adaptive and learning elements [12]. Virtual Model Control borrows ideas from Virtual Reality, Hybrid Position-Force Control [14], Stiffness Control [16], Impeadance Control [2], and the Operational Space Formulation <ref> [5] </ref>. Many complex tasks that are difficult to describe using traditional techniques can be readily characterized with a simple set of virtual components. For example, consider a robot wishing to impart an impact onto an unknown surface (e.g. knocking on a door).
Reference: [6] <author> Tad McGeer. </author> <title> Passive dynamic walking. </title> <journal> International Journal of Robotics Research, </journal> <volume> 9(2) </volume> <pages> 62-82, </pages> <year> 1990. </year>
Reference-contexts: We have not attempted to perform an analysis on why the stupid walking algorithm converges to a limit cycle for the appropriate initial conditions. We only speculate that mechanisms similar to those present in McGeer's passive dynamic walker <ref> [6] </ref> and Mochon and McMa-hon's balastic walking model [9] are in force. 4 Conclusions Spring Turkey walked continuously through the use of Virtual Model Control techniques. We stress here that we augmented the natural dynamics of the robot with simple virtual components, rather than attempted to cancel the natural dynamics.
Reference: [7] <author> W. T. Miller. </author> <title> Real time neural network control of a biped walking robot. </title> <journal> IEEE Control Systems Magazine, </journal> <pages> pages Feb:41-48, </pages> <year> 1994. </year>
Reference: [8] <author> H. Miura and I. Shimoyama. </author> <title> Dynamic walk of a biped. </title> <journal> International Journal of Robotics Research, </journal> <volume> 3(2) </volume> <pages> 60-74, </pages> <year> 1984. </year>
Reference: [9] <author> Simon Mochon and Thomas A. McMahon. </author> <title> Ballistic walking: An improved model. </title> <journal> Mathematical Biosciences, </journal> <volume> 52 </volume> <pages> 241-260, </pages> <year> 1979. </year>
Reference-contexts: We have not attempted to perform an analysis on why the stupid walking algorithm converges to a limit cycle for the appropriate initial conditions. We only speculate that mechanisms similar to those present in McGeer's passive dynamic walker [6] and Mochon and McMa-hon's balastic walking model <ref> [9] </ref> are in force. 4 Conclusions Spring Turkey walked continuously through the use of Virtual Model Control techniques. We stress here that we augmented the natural dynamics of the robot with simple virtual components, rather than attempted to cancel the natural dynamics. In no case did we assume linear dynamics.
Reference: [10] <author> Gill A. Pratt and Matthew M. Williamson. </author> <title> Series elastic actuators. </title> <booktitle> IEEE International Conference on Intelligent Robots and Systems, </booktitle> <volume> 1 </volume> <pages> 399-406, </pages> <year> 1995. </year>
Reference-contexts: An unac-tuated boom constrains Spring Turkey's roll, yaw, and lateral motion thereby reducing it to a planar robot. algorithm. All of Spring Turkey's motors are located in its upper body, with power being transmitted to the joints via cable drives. Series Elastic Actuation <ref> [10] </ref> is employed at each degree of freedom, allowing for accurate application of torques and a high degree of shock tolerance. The maximum torque that can be applied to the hips is approximately 12 Nm while approximately 18 Nm can be applied to the knees. <p> Spring Turkey weighs approximately 22 lbs (10 kg) and stands 2 ft (60 cm) tall from toe to hip. Potentiometers at the hips, knees, and boom measure joint angles and body pitch. Extension springs are used at the hips and knees to implement Series Elastic Actuation <ref> [10] </ref>. Linear potentiometers measure the stretch in the springs. 3.1 Turkey Walking Virtual Model Control was applied to Spring Turkey to allow it to perform simple walking.
Reference: [11] <author> J. Pratt, A. Torres, P. Dilworth, and G. Pratt. </author> <title> Virtual actuator control. </title> <booktitle> IEEE International Conference on Intelligent Robots and Systems, </booktitle> <year> 1996. </year>
Reference-contexts: Some benefits of Virtual Model Control are that it is compact, requires relatively small amounts of computation, and can be implemented in a distributed manner (see <ref> [13, 11] </ref> for information on how to implement virtual components). Furthermore, a high level controller could be implemented as a state machine which simply changes virtual component connections or parameters at the state transitions. <p> This follows the procedure described in <ref> [11] </ref>. 2.1 Single Leg Implementation serial robot model that we use to represent a single leg of our walking robot. We wish to connect a virtual component between frame fAg, which is attached to the foot, and frame fBg, which is attached to the body.
Reference: [12] <author> Jerry E. Pratt. </author> <title> Learning virtual model control of a biped walking robot. Unpublished Project Report for MIT's Machine Learning Class (6.858), </title> <year> 1994. </year>
Reference-contexts: Such components can include simple springs, dampers, dashpots, masses, latches, bearings, non-linear potential and dissipative fields, or any other imaginable component. Virtual components can even contain adaptive and learning elements <ref> [12] </ref>. Virtual Model Control borrows ideas from Virtual Reality, Hybrid Position-Force Control [14], Stiffness Control [16], Impeadance Control [2], and the Operational Space Formulation [5]. Many complex tasks that are difficult to describe using traditional techniques can be readily characterized with a simple set of virtual components.
Reference: [13] <author> Jerry E. Pratt. </author> <title> Virtual model control of a biped walking robot. </title> <type> Master's thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <month> August </month> <year> 1995. </year>
Reference-contexts: Some benefits of Virtual Model Control are that it is compact, requires relatively small amounts of computation, and can be implemented in a distributed manner (see <ref> [13, 11] </ref> for information on how to implement virtual components). Furthermore, a high level controller could be implemented as a state machine which simply changes virtual component connections or parameters at the state transitions.
Reference: [14] <author> M. H. Raibert and J. J. Craig. </author> <title> Hybrid position/force control of manipulators. Journal of Dynamic Systems, Measurement, </title> <journal> and Control, </journal> <volume> 102, </volume> <year> 1981. </year>
Reference-contexts: Such components can include simple springs, dampers, dashpots, masses, latches, bearings, non-linear potential and dissipative fields, or any other imaginable component. Virtual components can even contain adaptive and learning elements [12]. Virtual Model Control borrows ideas from Virtual Reality, Hybrid Position-Force Control <ref> [14] </ref>, Stiffness Control [16], Impeadance Control [2], and the Operational Space Formulation [5]. Many complex tasks that are difficult to describe using traditional techniques can be readily characterized with a simple set of virtual components.
Reference: [15] <author> Marc H. Raibert. </author> <title> Legged Robots That Balance. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1986. </year>
Reference: [16] <author> K. Salisbury. </author> <title> Active stiffness control of a manipulator in cartesian coordinates. </title> <booktitle> 19th IEEE Conference on Decision and Control, </booktitle> <pages> pages 83-88, </pages> <month> Dec. </month> <year> 1980. </year>
Reference-contexts: Such components can include simple springs, dampers, dashpots, masses, latches, bearings, non-linear potential and dissipative fields, or any other imaginable component. Virtual components can even contain adaptive and learning elements [12]. Virtual Model Control borrows ideas from Virtual Reality, Hybrid Position-Force Control [14], Stiffness Control <ref> [16] </ref>, Impeadance Control [2], and the Operational Space Formulation [5]. Many complex tasks that are difficult to describe using traditional techniques can be readily characterized with a simple set of virtual components.
Reference: [17] <author> Ann L. Torres. </author> <title> Implementation of virtual model control on a walking hexapod. </title> <month> May </month> <year> 1996. </year> <type> Undergraduate Thesis, </type> <institution> Massachusetts Institute of Technology. </institution>
Reference-contexts: In this light we in the Leg Laboratory believe that robots cannot be commanded to perform a task; they can only be given hints and suggestions. Virtual Model Control has been used to control a dynamic walking bipedal robot (described below) and an agile 3D hexapod in simulation <ref> [17] </ref>. 2 Virtual Model Implementation for a Biped In this Section we present the mathematics to implement virtual components on our bipedal robot for the support leg in single support or both legs in double support.
Reference: [18] <author> J. Yamaguchi, A. Takanishi, and I. Kato. </author> <title> Development of a biped walking robot adapting to a horizontally uneven surface. </title> <booktitle> IEEE International Conference on Intelligent Robots and Systems, </booktitle> <pages> pages 1156-1163, </pages> <year> 1994. </year>
References-found: 18

