URL: http://www.cs.umd.edu/~samir/grant/gk96.ps
Refering-URL: http://www.cs.umd.edu/~samir/grant/career.html
Root-URL: 
Title: Approximation Algorithms for Connected Dominating Sets  
Author: Sudipto Guha Samir Khuller 
Address: Stanford, CA 94305  College Park, MD 20742  
Affiliation: Dept. of Computer Science Stanford University  Dept. of Computer Science and UMIACS University of Maryland  
Abstract: The dominating set problem in graphs asks for a minimum size subset of vertices with the following property: each vertex is required to be either in the dominating set, or adjacent to some vertex in the dominating set. We focus on the related question of finding a connected dominating set of minimum size, where the graph induced by vertices in the dominating set is required to be connected as well. This problem arises in network testing, as well as in wireless communication. Two polynomial time algorithms that achieve approximation factors of 2H() + 2 and H() + 2 are presented, where is the maximum degree, and H is the harmonic function. This question also arises in relation to the traveling tourist problem, where one is looking for the shortest tour such that each vertex is either visited, or has at least one of its neighbors visited. We also consider a generalization of the problem to the weighted case, and give an algorithm with an approximation factor of (c n + 1) ln n where c n ln k is the approximation factor for the node weighted Steiner tree problem (currently c n = 1:6103). We also consider the more general problem of finding a connected dominating set of a specified subset of vertices and provide a polynomial time algorithm with a (c + 1)H() + c 1 approximation factor, where c is the Steiner approximation ratio for graphs (currently c = 1:644).
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Arkin, M. Halldorsson and R. Hassin, </author> <title> "Approximating the tree and tour covers of a graph", </title> <journal> Information Processing Letters, </journal> <volume> 47: </volume> <pages> 275-282, </pages> <year> (1993). </year> <month> 14 </month>
Reference-contexts: They also consider the related question of finding a tour that visits each edge of the graph (connected vertex cover). This is needed when one requires testing the links as well as the nodes. Approximation algorithms for the latter problem were given by Arkin, Halldorsson and Hassin <ref> [1] </ref>. We observe that there is a simple algorithm for the unweighted connected vertex cover problem that gives a factor 2 approximation (the one given in [1] is more complicated). Perform a Depth First Search, and take all the non-leaf vertices as the vertex cover. <p> Approximation algorithms for the latter problem were given by Arkin, Halldorsson and Hassin <ref> [1] </ref>. We observe that there is a simple algorithm for the unweighted connected vertex cover problem that gives a factor 2 approximation (the one given in [1] is more complicated). Perform a Depth First Search, and take all the non-leaf vertices as the vertex cover. This clearly induces a connected graph, and the approximation ratio is 2, as shown by Savage [21]. In practice, however this method will probably give large connected vertex covers.
Reference: [2] <author> P. Berman, </author> <type> personal communication, </type> <month> May </month> <year> (1996). </year>
Reference-contexts: ln a 0 jOP T CDS j + jOP T CDS j + a f + 2 (jOP T CDS j a f ), and since a 0 jOP T CDS j , the solution found has at most jOP T CDS j (ln + 3) nodes. 2 Remark: Berman, <ref> [2] </ref>, has an alternate proof of H () + 2 of the same algorithm.
Reference: [3] <author> P. Berman and M. Furer, </author> <type> personal communication, </type> <month> May </month> <year> (1996). </year>
Reference-contexts: For the special case when the required vertices form a dominating set in a graph and all edges have unit weight, Berman and Furer <ref> [3] </ref> have announced a new algorithm with c = 4 3 . Thus we can improve the approximation ratio to 4 3 (1 + H ()) by using their algorithm.
Reference: [4] <author> P. Berman and V. Ramaiyer, </author> <title> "Improved approximation algorithms for the Steiner tree problem", </title> <journal> J. Algorithms, </journal> <volume> 17 </volume> <pages> 381-408, </pages> <year> (1994). </year>
Reference: [5] <author> V. Bharghavan and B. Das, </author> <title> "Ad-hoc routing using minimum connected dominating sets", </title> <note> to appear IEEE International Conference on Communications, </note> <year> (1997). </year>
Reference-contexts: Each node not in the dominating set, is not responsible for relaying any messages [12]. Many of the ideas in our paper have been used to design a distributed algorithm for routing based on minimum connected dominating sets in ad-hoc networks <ref> [5] </ref>. Recent work by Marathe, Ravi and Sundaram [18] gives bicriteria approximation algorithms for the "service-constrained network design problem". The goal is to design a tree that has low cost and is sufficiently close to each node in the graph (these service requirements can be nonuniform).
Reference: [6] <author> T. Cormen, C. Leiserson, and R. Rivest, </author> <title> Introduction to Algorithms, </title> <publisher> The MIT Press, </publisher> <year> 1989. </year>
Reference-contexts: Let u k = 0. Adding up all the charges we get 2 (u 0 u 1 ) + j=1 u j 2 + 2 j=1 u j (With some algebraic manipulation (see <ref> [6, page 977] </ref>) and using the fact that u 0 + 1, one can show that this is at most 2 (1 + H ()). 2 Remark: We could modify the algorithm and at each step scan either one or two vertices, whichever results in a smaller charge to each vertex. <p> We define ffi as the size of the largest subset of R, adjacent to a node in the graph (ffi min (; k)). Proof: By a slight modification to the proof given in <ref> [6, page 977] </ref> we can prove, jBj (H (ffi) 1) jOP T CDS (R)j. (Since the first step reduces to finding a set cover with the size of the largest set being ffi.) Since OP T CDS (R) cannot dominate any two vertices of B 0 by one vertex, jB 0
Reference: [7] <author> U. Feige, </author> <title> "A threshold of ln n for approximating set-cover", </title> <booktitle> 28th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 314-318, </pages> <year> (1996). </year>
Reference-contexts: We also show an approximation preserving reduction from the set-cover problem to the connected dominating set problem, showing that it is hard to improve the approximation guarantee of H () for any graph and asymptotically large n and unless N P DT IM E [n O (loglog n) ] <ref> [17, 7] </ref>. This is described in Subsection 5.1. <p> This is based on the hardness results for set cover proven by Lund and Yannakakis [17] and Feige <ref> [7] </ref>. Given a set cover instance we reduce it to a connected dominating set problem as follows: Let the set cover instance be to cover set U , with minimum number of sets from the collection S = fS 1 ; S 2 ; : : :; S m g. <p> Thus approximating the connected dominating set with a factor of (1 *)H (ffi) (for all ) would imply approximating minimum set cover within the same factor. This would imply that N P DT IM E [n O (loglog n) ] <ref> [7] </ref>. 5.2 Hardness results for Generalizations We show two simple reductions that demonstrate that other generalizations of the CDS problem may be as hard to approximate as the "set TSP" problem for which no non-trivial approximation algorithms are known. (For the Euclidean case, Mata and Mitchell [19] have given approximation algorithms
Reference: [8] <author> M. R. Garey and D. S. Johnson, </author> <title> "Computers and Intractability: A guide to the theory of NP-completeness", </title> <publisher> Freeman, </publisher> <address> San Francisco (1978). </address>
Reference-contexts: Given a graph G = (V; E), find a minimum size subset S of vertices, such that the subgraph induced by S is connected and S forms a dominating set in G. This problem is known to be N P -hard <ref> [8] </ref>. Recall that a dominating set is one in which each vertex is either in the dominating set, or adjacent to some vertex in the dominating set. A related problem is the traveling tourist problem.
Reference: [9] <author> S. Guha and S. Khuller, </author> <title> "Approximation algorithms for connected dominating sets", </title> <booktitle> Proc. of 4th Annual European Symposium on Algorithms, </booktitle> <pages> pages 179-193, </pages> <year> (1996). </year>
Reference-contexts: This algorithm is described in Section 2. The second algorithm is an improvement of the first algorithm. The algorithm finds a dominating set in the first phase, and in the second phase connects the dominating set. In an earlier version of this paper <ref> [9] </ref> we established a bound of H () + H (H ()). Using Slav ik's greedy set-cover bound [22], we were able to show that the approximation factor is ln n + O (1). Recently, Berman (personal communication) suggested a modification to our algorithm [9], which improves the approximation factor to <p> an earlier version of this paper <ref> [9] </ref> we established a bound of H () + H (H ()). Using Slav ik's greedy set-cover bound [22], we were able to show that the approximation factor is ln n + O (1). Recently, Berman (personal communication) suggested a modification to our algorithm [9], which improves the approximation factor to H () + 2. We describe the algorithm and give a 2 simple proof of an approximation ratio of ln + 3 (since ln H () 0:7, the difference is very small). This algorithm is described in Section 3. <p> This continues until all the vertices from N (u) have been scanned. Finally we scan a vertex from N (v) and mark v. At this point, the algorithm has picked d + 2 vertices. 5 The entire algorithm can be implemented in O (m) steps <ref> [9] </ref>. This implementation is useful because it leads to a heuristic for the maximum leaf spanning tree problem as well [14]. <p> Thus we can improve the approximation ratio to 4 3 (1 + H ()) by using their algorithm. By applying a simple greedy strategy to connect the vertices in the dominating set, we proved a bound of H () + H (H ()) <ref> [9] </ref>. Here we present a modification of the above algorithm, as suggested by Berman, and prove an approximation ratio of ln + 3. (Berman has an alternate proof for an approximation ratio of H () + 2.) The algorithm runs in two phases. <p> We thank Vaduvur Bharghavan for re-igniting our interest in the connected dominating sets problem. We thank Piotr Berman for allowing us to include his modifications to the algorithm presented in <ref> [9] </ref> that led to Algorithm II. We also thank the diligent reviewer for detailed comments on an earlier draft of this paper.
Reference: [10] <author> S. Guha and S. Khuller, </author> <title> "Improved approximation algorithms for node weighted Steiner trees", </title> <type> manuscript (1997). </type>
Reference-contexts: In Subsection 4.1 we give a (c n + 1) ln n approximation for the node weighted CDS problem, where c n ln k is the approximation factor for the node weighted Steiner tree problem [13] and k is the number of terminals (currently c n = 1:6103 <ref> [10] </ref>). We next consider the Steiner CDS problem, where only a specified subset of vertices have to be dominated by a connected dominating set. For the unweighted case, we provide an approximation algorithm that runs in polynomial time in Subsection 4.2. <p> The greedy algorithm picks sets based on the ratio of their weight to the number of new elements they cover.) Step 2. To connect the vertices in DS we use a node-weighted Steiner tree approximation algorithm <ref> [13, 10] </ref> to find a Steiner tree that includes all the vertices in DS, after making the weights of all vertices in DS equal to zero. This yields a connected dominating set CDS. <p> We now run the node weighted Steiner tree algorithm <ref> [10] </ref> to find a node-weighted Steiner tree which connects the vertices in DS. The approximation factor of the algorithm is 1:6103 ln k, where k is the number of terminals (the paper by Klein and Ravi [13] gives a 2 ln k approximation factor).
Reference: [11] <author> F. Harary and B. Raghavachari, </author> <title> "The E-mail gossip number and the connected domination number", </title> <note> submitted to Applied Math. Letters (1996). </note>
Reference-contexts: The maximum leaf spanning tree problem is another related problem that has been studied and factor 3 approximations are known for it [16]. 4 Recently, Harary and Raghavachari <ref> [11] </ref> have shown that the email gossip number of a graph is exactly n 1 + OP T CDS , where OP T CDS is the size of the optimal connected dominating set. This indicates that the connected dominating set problem has many interesting applications.
Reference: [12] <author> A. Kothari and V. Bharghavan, </author> <title> "Algorithms for unicast and multicast routing in ad-hoc networks", </title> <type> manuscript (1996). </type>
Reference-contexts: The broadcast is done to the vertices in the connected dominating set. The nodes in the connected dominating set are responsible for relaying messages. Each node not in the dominating set, is not responsible for relaying any messages <ref> [12] </ref>. Many of the ideas in our paper have been used to design a distributed algorithm for routing based on minimum connected dominating sets in ad-hoc networks [5]. Recent work by Marathe, Ravi and Sundaram [18] gives bicriteria approximation algorithms for the "service-constrained network design problem".
Reference: [13] <author> P. N. Klein and R. Ravi, </author> <title> "A nearly best-possible approximation algorithm for node-weighted Steiner trees", </title> <journal> J. Algorithms, </journal> <volume> 19(1) </volume> <pages> 104-114, </pages> <year> (1995). </year>
Reference-contexts: This is described in Subsection 5.1. In Subsection 4.1 we give a (c n + 1) ln n approximation for the node weighted CDS problem, where c n ln k is the approximation factor for the node weighted Steiner tree problem <ref> [13] </ref> and k is the number of terminals (currently c n = 1:6103 [10]). We next consider the Steiner CDS problem, where only a specified subset of vertices have to be dominated by a connected dominating set. <p> The greedy algorithm picks sets based on the ratio of their weight to the number of new elements they cover.) Step 2. To connect the vertices in DS we use a node-weighted Steiner tree approximation algorithm <ref> [13, 10] </ref> to find a Steiner tree that includes all the vertices in DS, after making the weights of all vertices in DS equal to zero. This yields a connected dominating set CDS. <p> We now run the node weighted Steiner tree algorithm [10] to find a node-weighted Steiner tree which connects the vertices in DS. The approximation factor of the algorithm is 1:6103 ln k, where k is the number of terminals (the paper by Klein and Ravi <ref> [13] </ref> gives a 2 ln k approximation factor). Consider the vertices in OP T CDS ; these together with the vertices in DS induce a connected subgraph. Hence there exists a node weighted Steiner tree of weight w (OP T CDS ).
Reference: [14] <author> D. Kleitman and D. West, </author> <title> "Spanning trees with many leaves", </title> <journal> SIAM Journal on Discrete Mathematics, </journal> <volume> 4(1) </volume> <pages> 99-106, </pages> <year> (1991). </year>
Reference-contexts: At this point, the algorithm has picked d + 2 vertices. 5 The entire algorithm can be implemented in O (m) steps [9]. This implementation is useful because it leads to a heuristic for the maximum leaf spanning tree problem as well <ref> [14] </ref>. Modified Greedy Algorithm: We now modify the scanning rule to prove a good approximation ratio for this class of algorithms (that maintain a connected set that eventually becomes a CDS). We define a new operation of scanning a pair of adjacent vertices u and v.
Reference: [15] <author> M. Karpinsky and A. Zelikovsky, </author> <title> "New approximation algorithms for the Steiner tree problem", Technical Report, </title> <booktitle> Electronic Colloquium on Computational Complexity (ECCC): </booktitle> <address> TR95-030, </address> <year> (1995). </year>
Reference-contexts: For the unweighted case, we provide an approximation algorithm that runs in polynomial time in Subsection 4.2. It has an approximation factor of (1 + c)H (min (; k)) + c 1, where c is the approximation ratio for the Steiner tree problem (currently c = 1:644 <ref> [15] </ref>) and k is the size of the set we want to dominate. When the vertices have weights, the Steiner connected dominating set problem is at least as hard as the notorious set TSP problem on graphs (defined shortly) for which no non-trivial approximation algorithms are known. <p> Since members of the optimum connected dominating set along with the members of the dominating set we found, induce a connected subgraph, we can prove an approximation ratio of c (1 + H ()), where c is the approximation ratio for the unweighted Steiner tree problem (currently c = 1:644 <ref> [15] </ref>). For the special case when the required vertices form a dominating set in a graph and all edges have unit weight, Berman and Furer [3] have announced a new algorithm with c = 4 3 . <p> that connects the nodes of R (B) [ B 0 . 11 Apply an (edge weighted) Steiner tree approximation, with all edges having unit weight, and find a tree of size c (jR (B)j + jB 0 j + jOP T CDS (R)j), where c is the Steiner approximation ratio <ref> [15] </ref>. Since this tree is edge weighted, it has essentially the same number of nodes, including those of R (B) [ B 0 .
Reference: [16] <author> H. I. Lu and R. Ravi, </author> <title> "The power of local optimization: approximation algorithms for maximum-leaf spanning tree", </title> <booktitle> Proc. of the 30 th Annual Allerton Conf. on Communication, Control and Computing pages 533-542, </booktitle> <year> (1992). </year>
Reference-contexts: The nodes in the connected dominating set together with the remaining nodes of the graph form a spanning tree with many leaves. The maximum leaf spanning tree problem is another related problem that has been studied and factor 3 approximations are known for it <ref> [16] </ref>. 4 Recently, Harary and Raghavachari [11] have shown that the email gossip number of a graph is exactly n 1 + OP T CDS , where OP T CDS is the size of the optimal connected dominating set.
Reference: [17] <author> C. Lund and M. Yannakakis, </author> <title> "On the hardness of approximating minimization problems", </title> <journal> Journal of the ACM, </journal> <volume> 41(5): </volume> <pages> 960-981, </pages> <year> (1994). </year>
Reference-contexts: We also show an approximation preserving reduction from the set-cover problem to the connected dominating set problem, showing that it is hard to improve the approximation guarantee of H () for any graph and asymptotically large n and unless N P DT IM E [n O (loglog n) ] <ref> [17, 7] </ref>. This is described in Subsection 5.1. <p> This is based on the hardness results for set cover proven by Lund and Yannakakis <ref> [17] </ref> and Feige [7].
Reference: [18] <author> M. Marathe, R. Ravi and R. Sundaram, </author> <title> "Service-constrained network design problems", </title> <booktitle> Proc. of 5th Scandinavian Workshop on Algorithm Theory, </booktitle> <pages> pages 28-40, </pages> <year> (1996). </year> <month> 15 </month>
Reference-contexts: The same is true for the CDS problem when the edges have weights. Recent work by Marathe, Ravi and Sundaram <ref> [18] </ref> gives bicriteria approximation algorithms for the "service-constrained network design problem". The goal is to design a tree that has low cost and is sufficiently close to each vertex in the graph (these service requirements can be non-uniform). <p> Each node not in the dominating set, is not responsible for relaying any messages [12]. Many of the ideas in our paper have been used to design a distributed algorithm for routing based on minimum connected dominating sets in ad-hoc networks [5]. Recent work by Marathe, Ravi and Sundaram <ref> [18] </ref> gives bicriteria approximation algorithms for the "service-constrained network design problem". The goal is to design a tree that has low cost and is sufficiently close to each node in the graph (these service requirements can be nonuniform).
Reference: [19] <author> C. S. Mata and J. S. B. </author> <title> Mitchell "Approximation algorithms for geometric tour and network design problems", </title> <booktitle> Proc. of the 11th Annual Symp. on Computational Geometry, </booktitle> <pages> pages 360-369, </pages> <year> (1995). </year>
Reference-contexts: O (loglog n) ] [7]. 5.2 Hardness results for Generalizations We show two simple reductions that demonstrate that other generalizations of the CDS problem may be as hard to approximate as the "set TSP" problem for which no non-trivial approximation algorithms are known. (For the Euclidean case, Mata and Mitchell <ref> [19] </ref> have given approximation algorithms for this problem.) c j Theorem 5.1 A polynomial approximation algorithm for the edge weighted connected dominating set problem with factor f (n) would imply a polynomial approximation algorithm for the set TSP problem with factor 2f (n).
Reference: [20] <author> S. Paul and R. Miller, </author> <title> "Locating faults in a systematic manner in a large heterogeneous network", </title> <booktitle> IEEE INFOCOM, </booktitle> <pages> pages 522-529, </pages> <year> (1995). </year>
Reference-contexts: We use N (v) to denote the set of neighbors of a vertex v. The degree of a vertex v is denoted by d (v). 1.3 Applications and Related Work The paper by Paul and Miller <ref> [20] </ref> discusses applications related to testing nodes in a computer network using a short "traveling tourist tour". They also consider the related question of finding a tour that visits each edge of the graph (connected vertex cover).
Reference: [21] <author> C. Savage, </author> <title> "Depth-First search and the vertex cover problem", </title> <journal> Information Processing Letters, </journal> <volume> 14(5): </volume> <pages> 233-235, </pages> <year> (1982). </year>
Reference-contexts: Perform a Depth First Search, and take all the non-leaf vertices as the vertex cover. This clearly induces a connected graph, and the approximation ratio is 2, as shown by Savage <ref> [21] </ref>. In practice, however this method will probably give large connected vertex covers. Other applications for the connected dominating set problem are in doing broadcasts for wireless computers in digital battlefields. The broadcast is done to the vertices in the connected dominating set.
Reference: [22] <author> P. </author> <title> Slav ik "A tight analysis of the greedy algorithm for set cover", </title> <booktitle> 28th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 435-441, </pages> <year> (1996). </year>
Reference-contexts: The algorithm finds a dominating set in the first phase, and in the second phase connects the dominating set. In an earlier version of this paper [9] we established a bound of H () + H (H ()). Using Slav ik's greedy set-cover bound <ref> [22] </ref>, we were able to show that the approximation factor is ln n + O (1). Recently, Berman (personal communication) suggested a modification to our algorithm [9], which improves the approximation factor to H () + 2.
Reference: [23] <author> K. White, M. Farber and W. Pulleyblank, </author> <title> "Steiner trees, connected domination and strongly chordal graphs", </title> <journal> Networks, </journal> <volume> 15: </volume> <pages> 109-124, </pages> <year> (1985). </year> <month> 16 </month>
Reference-contexts: This indicates that the connected dominating set problem has many interesting applications. Polynomial algorithms for the connected dominating set problem for special classes of graphs were given by White, Farber and Pulleyblank <ref> [23] </ref>. 2 Algorithm I We introduce an algorithm that finds a connected dominating set, by "growing" a tree. The idea behind the algorithm is the following: grow a tree T , starting from the vertex of maximum degree.
References-found: 23

