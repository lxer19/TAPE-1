URL: ftp://theory.cs.uni-bonn.de/pub/reports/cs-reports/1998/85195-CS.ps.gz
Refering-URL: http://cs.uni-bonn.de/info5/publications/CS-1998-en.html
Root-URL: http://cs.uni-bonn.de
Email: email: arora@cs.princeton.edu.  email: karger@lcs.mit.edu  
Title: Polynomial Time Approximation Schemes for Dense Instances of N P-Hard Problems (Extended Version)  
Author: Sanjeev Arora David Karger Marek Karpinski 
Affiliation: MIT Laboratory for Computer Science.  
Web: URL: http://www.cs.princeton.edu/~arora  URL: http://theory.lcs.mit.edu/~karger  
Note: To appear in J. Comput. System Sci., 1998. Princeton University. Supported by an NSF CAREER Award NSF CCR-9502747 and an Alfred Sloan Fellowship.  Work done at AT&T Bell Laboratories.  
Abstract: We present a unified framework for designing polynomial time approximation schemes (PTASs) for "dense" instances of many N P-hard optimization problems, including maximum cut, graph bisection, graph separation, minimum k-way cut with and without specified terminals, and maximum 3-satisfiability. By dense graphs we mean graphs with minimum degree (n), although our algorithms solve most of these problems so long as the average degree is (n). Denseness for non-graph problems is defined similarly. The unified framework begins with the idea of exhaustive sampling: picking a small random set of vertices, guessing where they go on the optimum solution, and then using their placement to determine the placement of everything else. The approach then develops into a PTAS for approximating certain smooth integer programs where the objective function and the constraints are "dense" polynomials of constant degree. x University of Bonn. Supported in part by the International Computer Science Institute, Berkeley, California, by the DFG Grant KA 673/4-1, ESPRIT BR Grants 7097, 21726, and EC-US 030, and by the Max-Planck Research Prize. Email: marek@cs.bonn.edu , URL: http://theory.cs.uni-bonn.de/~marek. 
Abstract-found: 1
Intro-found: 1
Reference: [AFK96] <author> S. Arora, A. Frieze, and H. Kaplan. </author> <title> A new rounding procedure for the assignment problem with applications to dense graph arrangement problems. </title> <booktitle> In 37th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 21-30, </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1996. </year>
Reference-contexts: Of course, now we know an inherent reason why such approaches are unlikely to succeed: BISECTION has a PTAS on dense graphs. To conclude, we mention some recent research that extends or improves our work. Arora, Frieze, and Kaplan <ref> [AFK96] </ref> extend our exhaustive sampling idea to design additive approximation schemes for problems in which feasible solutions are permutations (such as the 0-1 Quadratic Assignment problem).
Reference: [AFW94] <author> N. Alon, A. Frieze, and D. Welsh. </author> <title> Polynomial time randomized approximation schemes for the tutte polynomial of dense graphs. </title> <booktitle> In Proceedings of the 35 th Annual Symposium on the Foundations of Computer Science [IEE94], </booktitle> <pages> pages 24-35. </pages>
Reference-contexts: For instance, in graphs with degree exceeding n=2, one can find Hamiltonian cycles [P 76] and approximate the number of perfect matchings [JS89]. In everywhere-dense graphs it is easy to approximate the values of the Tutte polynomial and, as a special case, to estimate the reliability of a network <ref> [AFW94] </ref>. Independent of our work, Fernandez de la Vega [FdlV94] developed a PTAS for everywhere-dense MAX-CUT using exhaustive sampling principles similar to ours. After sampling and guessing, Fernandez de la Vega replaces our linear-programming solution with a greedy placement procedure.
Reference: [ALM + 92] <author> S. Arora, C. Lund, R. Motwani, M. Sudan, and M. Szegedy. </author> <title> Proof verification and hardness of approximation problems. </title> <booktitle> In Proceedings of the 33 rd Annual Symposium on the Foundations of Computer Science [IEE92], </booktitle> <pages> pages 14-23. </pages>
Reference-contexts: We know that unless P = N P, problems such as CLIQUE <ref> [FGL + 91, AS92, ALM + 92] </ref> and CHROMATIC NUMBER [LY93] cannot be approximated even to within a factor of n ffi in polynomial time, for some fixed ffi &gt; 0. (More recently, Hastad [H96] showed that if SAT does not have randomized polynomial-time algorithms, then CLIQUE cannot be approximated to <p> No inapproximability results are known for them. MAX-SN P problems, such as MAX-CUT or MAX-3-SAT, can be approximated to within some fixed constant factor but no better <ref> [PY91, ALM + 92] </ref>. Only a few problems, such as KNAPSACK [S75] and BIN PACKING [FL81], are known to have polynomial time approximation schemes (PTASs). <p> The reader will note that the problems span a broad spectrum. Some, like maximum cut and maximum k-satisfiability, are MAX-SN P-complete. Thus they do not have PTASs on general (that is, non-dense) instances <ref> [ALM + 92] </ref>, but they can all be approximated within some constant factor in polynomial time [PY91]. Others, like graph bisection and separation, do not currently have any algorithms with approximation ratios better than O (log n) on general instances. <p> We do not see any connection. In fact, approximating CLIQUE in dense graphs is N P-hard (this follows from 29 the fact that approximating INDEPENDENT SET in degree-5 graphs is N P--hard <ref> [ALM + 92] </ref>). 4.3 MAX-k-SAT A standard "arithmetization" method can be used to represent MAX-k-SAT as a degree-k smooth IP. Let y 1 ; : : : ; y n be the variables and m be the number of clauses. <p> The resulting instance is 2=5-dense, but the capacity of the minimum bisection is unchanged. Now we show that if there is a PTAS on everywhere-1=2-dense instances of MIN-VERTEX-COVER, then P = N P. We rely on the result of <ref> [PY91, ALM + 92] </ref> that P = N P if there is a PTAS for MIN-VERTEX-COVER on the following simple family of graphs: each of the n vertices has degree at most 5, and the smallest vertex cover has size at least n=2.
Reference: [AS92] <author> S. Arora and S. Safra. </author> <title> Probabilistic checking of proofs: A new characterization of NP. </title> <journal> JACM 45(1) </journal> <pages> 70-122, </pages> <year> 1998. </year> <title> Prelim. </title> <booktitle> version in Proceedings of the 33 rd Annual Symposium on the Foundations of Computer Science [IEE92], </booktitle> <pages> pages 2-13. </pages>
Reference-contexts: We know that unless P = N P, problems such as CLIQUE <ref> [FGL + 91, AS92, ALM + 92] </ref> and CHROMATIC NUMBER [LY93] cannot be approximated even to within a factor of n ffi in polynomial time, for some fixed ffi &gt; 0. (More recently, Hastad [H96] showed that if SAT does not have randomized polynomial-time algorithms, then CLIQUE cannot be approximated to
Reference: [BCLS84] <author> T. Bui, S. Chaudhuri, T. Leighton, and M. Sipser. </author> <title> Graph bisection algorithms with good average case behavior. </title> <booktitle> In Proceedings of the 25 th Annual Symposium on the Foundations of Computer Science, </booktitle> <pages> pages 181-192. </pages> <publisher> IEEE, IEEE Computer Society Press, </publisher> <year> 1984. </year>
Reference-contexts: BISECTION: Partition the vertices of an undirected graph into two equal halves so as to minimize the number of edges with exactly one endpoint in each half. Some algorithms, for example using eigenvalues [B87] or simulated annealing [JS93] do well on certain random graphs (see also <ref> [BCLS84] </ref>). For worst-case inputs, no true approximation algorithms are known. Some known "bisection approximators" (based upon techniques of [LR88]) yield separators whose capacity is within a factor O (log n) of the capacity of the optimum bisection. Our algorithm gives an exact bisection.
Reference: [BGG93] <author> M. Bellare, O. Goldreich, and S. Goldwasser. </author> <title> Randomness in interactive proofs. </title> <journal> Computational Complexity, </journal> <volume> 3 </volume> <pages> 319-354, </pages> <year> 1993. </year> <note> Abstract in IEEE FOCS 1990. </note>
Reference-contexts: Those depend upon two randomized procedures: Randomized Rounding (used in Lemma 3.3) and the Sampling Lemma. Raghavan [Rag88] derandomized the former through the method of conditional probabilities. Derandomizations of the Sampling Lemma appear in [BR94] and <ref> [BGG93] </ref>. For example, instead of picking s = O (log n=* 2 ) variables independently, it suffices to pick the variables whose indices are encountered on a random walk of length O (log n=* 2 ) on a constant degree expander [Gil93].
Reference: [B87] <author> R. B. Boppana. </author> <title> Eigenvalues and graph bisection: </title> <booktitle> an average-case analysis Proceedings of the 28th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 280-285, </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1987. </year> <month> 41 </month>
Reference-contexts: BISECTION: Partition the vertices of an undirected graph into two equal halves so as to minimize the number of edges with exactly one endpoint in each half. Some algorithms, for example using eigenvalues <ref> [B87] </ref> or simulated annealing [JS93] do well on certain random graphs (see also [BCLS84]). For worst-case inputs, no true approximation algorithms are known. Some known "bisection approximators" (based upon techniques of [LR88]) yield separators whose capacity is within a factor O (log n) of the capacity of the optimum bisection.
Reference: [BR94] <author> M. Bellare and J. Rompel. </author> <title> Randomness-efficient oblivious sampling. </title> <booktitle> In Proceedings of the 35 th Annual Symposium on the Foundations of Computer Science [IEE94], </booktitle> <pages> pages 276-287. </pages>
Reference-contexts: Those depend upon two randomized procedures: Randomized Rounding (used in Lemma 3.3) and the Sampling Lemma. Raghavan [Rag88] derandomized the former through the method of conditional probabilities. Derandomizations of the Sampling Lemma appear in <ref> [BR94] </ref> and [BGG93]. For example, instead of picking s = O (log n=* 2 ) variables independently, it suffices to pick the variables whose indices are encountered on a random walk of length O (log n=* 2 ) on a constant degree expander [Gil93].
Reference: [DFK91] <author> M. E. Dyer, A. Frieze, and R. Kannan. </author> <title> A random polynomial time algorithm for approximating the volume of convex bodies. </title> <journal> Journal of the ACM, </journal> <volume> 38 </volume> <pages> 1-17, </pages> <year> 1991. </year>
Reference-contexts: A PTAS thus allows us to trade off approximation accuracy for running time. (In the previous definition, if the running time is polynomial in 1=* as well, then we have a fully polynomial time approximation scheme. These are known to exist for a few problems <ref> [GJ79, DFK91, KLM89] </ref>.) Unfortunately, recent results ([ALM + 92]) show that if P 6= N P, then PTASs do not exist for many N P-hard problems.
Reference: [DJP + 94] <author> E. Dahlhaus, D. S. Johnson, C. H. Papadimitriou, P. D. Seymour, and M. Yannakakis. </author> <title> The complexity of multiterminal cuts. </title> <journal> SIAM Journal on Computing, </journal> <volume> 23(4) </volume> <pages> 864-894, </pages> <year> 1994. </year> <note> A preliminary version appeared in ACM STOC 1992. </note>
Reference-contexts: Saran and Vazirani [SV91] gave a (22=k)-approximation algorithm. The variant k-terminal cut problem specifies k vertices that must all be disconnected from each other by the removal of the edges. Dalhaus et al. <ref> [DJP + 94] </ref> give an algorithm that achieves an approximation ratio of (2 2=k). DENSE-k-SUBGRAPH: Given a graph, find a subset of k vertices that induces a graph with the most edges.
Reference: [Edw86] <author> K. Edwards. </author> <title> The complexity of colouring problems on dense graphs. </title> <journal> Theoretical Computer Science, </journal> <volume> 43 </volume> <pages> 337-343, </pages> <year> 1986. </year>
Reference-contexts: Application of our techniques to this problem yields a result already shown in <ref> [Edw86] </ref>. MAX-SN P: The class of "constant factor approximable" problems defined in [PY91]. <p> Edwards <ref> [Edw86] </ref> shows how to 3-color a 3-colorable everywhere-dense graph in polynomial time. Our sampling approach gives an alternative algorithm. A random-sampling based approach related to ours also appears in [KP92]. <p> This was shown for MAX-CUT by Fernandez de la Vega [FdlV94]. We have also seen this for the case of (small) bisections. Here we describe two other problems, multiway cuts and 3-coloring. (The latter was already solved by Edwards <ref> [Edw86] </ref>.) 6.1 MINk-CUT First we consider the k-terminal cut problem. Let ffin denote the minimum degree. Let OP T be the capacity of the optimum cut. <p> A similar PTAS can be designed for the problem without terminals, where the goal is simply to find the best partition into k nonempty groups of vertices. 37 6.2 3-COLORING Random sampling also gives a scheme for 3-coloring dense 3-colorable graphs. Since this result replicates that of Edwards <ref> [Edw86] </ref>, details are omitted. Let the colors be 0; 1; 2. Initially, make all vertices "uncolored." As before, we pick a random sample of O ((log n))=* 2 ) vertices and guess their colors. Let us focus on the correct guess.
Reference: [FG95] <author> U. Feige and M. X. Goemans. </author> <title> Approximating the value of 2-prover proof systems, with applications to max-2sat and max-dicut. </title> <booktitle> In Proceedings of theIsraeli Symposium on Theoretical Computer Science, </booktitle> <pages> pages 182-189, </pages> <year> 1995. </year>
Reference-contexts: An algorithm in [GW94] achieves an approximation ratio of 1:13 for the problem. 3 MAX-DICUT: The directed version of the MAX-CUT problem. An algorithm in <ref> [FG95] </ref> (improving [GW94]) achieves an approximation ratio of 1:15. MAX-HYPERCUT (d): A generalization of MAX-CUT to hypergraphs of dimension d; an edge is considered cut if it has at least one endpoint on each side.
Reference: [FGL + 91] <author> U. Feige, S. Goldwasser, L. Lovasz, S. Safra, and M. Szegedy. </author> <title> Approximating clique is almost NP-complete. </title> <booktitle> In Proceedings of the 32 nd Annual Symposium on the Foundations of Computer Science, </booktitle> <pages> pages 2-12. </pages> <publisher> IEEE, IEEE Computer Society Press, </publisher> <month> October </month> <year> 1991. </year>
Reference-contexts: We know that unless P = N P, problems such as CLIQUE <ref> [FGL + 91, AS92, ALM + 92] </ref> and CHROMATIC NUMBER [LY93] cannot be approximated even to within a factor of n ffi in polynomial time, for some fixed ffi &gt; 0. (More recently, Hastad [H96] showed that if SAT does not have randomized polynomial-time algorithms, then CLIQUE cannot be approximated to
Reference: [FdlV94] <author> W. Fernandez de la Vega. </author> <title> MAXCUT has a randomized approximation scheme in dense graphs. Random Structures & Algorithms, </title> <journal> vol. </journal> <volume> 8(3) </volume> <pages> 187-198, </pages> <year> 1996. </year> <title> Prelim. </title> <type> manuscript, </type> <month> October </month> <year> 1994. </year>
Reference-contexts: In everywhere-dense graphs it is easy to approximate the values of the Tutte polynomial and, as a special case, to estimate the reliability of a network [AFW94]. Independent of our work, Fernandez de la Vega <ref> [FdlV94] </ref> developed a PTAS for everywhere-dense MAX-CUT using exhaustive sampling principles similar to ours. After sampling and guessing, Fernandez de la Vega replaces our linear-programming solution with a greedy placement procedure. <p> This was shown for MAX-CUT by Fernandez de la Vega <ref> [FdlV94] </ref>. We have also seen this for the case of (small) bisections. Here we describe two other problems, multiway cuts and 3-coloring. (The latter was already solved by Edwards [Edw86].) 6.1 MINk-CUT First we consider the k-terminal cut problem. Let ffin denote the minimum degree.
Reference: [FL81] <author> W. Fernandez de la Vega and G. S. Lueker. </author> <title> Bin packing can be solved within 1+* in linear time. </title> <booktitle> Combinatorica:1(4), </booktitle> <pages> 349-355, </pages> <year> 1981. </year>
Reference-contexts: No inapproximability results are known for them. MAX-SN P problems, such as MAX-CUT or MAX-3-SAT, can be approximated to within some fixed constant factor but no better [PY91, ALM + 92]. Only a few problems, such as KNAPSACK [S75] and BIN PACKING <ref> [FL81] </ref>, are known to have polynomial time approximation schemes (PTASs).
Reference: [FK96] <author> A. Frieze and R. Kannan. </author> <title> The regularity lemma and approximation schemes for dense problems. </title> <booktitle> In Proceedings of the 37 th Annual Symposium on the Foundations of Computer Science, </booktitle> <pages> pages 12-20. </pages> <publisher> IEEE, IEEE Computer Society Press, </publisher> <month> October </month> <year> 1996. </year> <month> 42 </month>
Reference-contexts: To conclude, we mention some recent research that extends or improves our work. Arora, Frieze, and Kaplan [AFK96] extend our exhaustive sampling idea to design additive approximation schemes for problems in which feasible solutions are permutations (such as the 0-1 Quadratic Assignment problem). Frieze and Kannan <ref> [FK96] </ref> and independently, Goldreich, Goldwasser, and Ron [GGR96] showed that our techniques apply because of certain regularity properties in dense graphs, and used this observation to design linear time additive approximation schemes for most of the problems we have considered here.
Reference: [GGR96] <author> O. Goldreich, S. Goldwasser, and D. Ron. </author> <title> Property testing and its connection to learning and approximation. </title> <booktitle> In 37th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 339-348, </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1996. </year>
Reference-contexts: Arora, Frieze, and Kaplan [AFK96] extend our exhaustive sampling idea to design additive approximation schemes for problems in which feasible solutions are permutations (such as the 0-1 Quadratic Assignment problem). Frieze and Kannan [FK96] and independently, Goldreich, Goldwasser, and Ron <ref> [GGR96] </ref> showed that our techniques apply because of certain regularity properties in dense graphs, and used this observation to design linear time additive approximation schemes for most of the problems we have considered here. Frieze and Kan-nan also point out connections to constructive versions of Szemeredi's Regularity Lemma.
Reference: [Gil93] <author> D. Gillman. </author> <title> A Chernoff bound for random walks on expanders. </title> <booktitle> In Proceedings of the 34 th Annual Symposium on the Foundations of Computer Science [IEE93], </booktitle> <pages> pages 680-691. </pages>
Reference-contexts: For example, instead of picking s = O (log n=* 2 ) variables independently, it suffices to pick the variables whose indices are encountered on a random walk of length O (log n=* 2 ) on a constant degree expander <ref> [Gil93] </ref>. For any fixed sampling experiment, the probably that such a walk works is 1=n O (1) . Hence our algorithm can deterministically go through all such walks (the number of such walks is n O (1=* 2 ) since the expander has O (1) degree).
Reference: [GJ79] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <address> San Francisco, </address> <year> 1979. </year>
Reference-contexts: A PTAS thus allows us to trade off approximation accuracy for running time. (In the previous definition, if the running time is polynomial in 1=* as well, then we have a fully polynomial time approximation scheme. These are known to exist for a few problems <ref> [GJ79, DFK91, KLM89] </ref>.) Unfortunately, recent results ([ALM + 92]) show that if P 6= N P, then PTASs do not exist for many N P-hard problems.
Reference: [GW94] <author> M. X. Goemans and D. P. Williamson. </author> <title> Improved Approximation Algorithms for Maximum Cut and Satisfiability Problems Using Semidefi-nite Programming. </title> <journal> JACM 42(6): </journal> <pages> 1115-1145, </pages> <year> 1995. </year> <booktitle> Extended abstract in Proceedings of the 26 th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 422-431. </pages> <publisher> ACM, ACM Press, </publisher> <month> May </month> <year> 1994. </year>
Reference-contexts: It is an open problem whether they are hard to approximate. MAX-CUT: Partition the vertices of an undirected graph into two groups so as to maximize the number of edges with exactly one endpoint in each group. An algorithm in <ref> [GW94] </ref> achieves an approximation ratio of 1:13 for the problem. 3 MAX-DICUT: The directed version of the MAX-CUT problem. An algorithm in [FG95] (improving [GW94]) achieves an approximation ratio of 1:15. <p> An algorithm in <ref> [GW94] </ref> achieves an approximation ratio of 1:13 for the problem. 3 MAX-DICUT: The directed version of the MAX-CUT problem. An algorithm in [FG95] (improving [GW94]) achieves an approximation ratio of 1:15. MAX-HYPERCUT (d): A generalization of MAX-CUT to hypergraphs of dimension d; an edge is considered cut if it has at least one endpoint on each side.
Reference: [H96] <author> J. Hastad. </author> <booktitle> Clique is hard to approximate within n 1* . Proceedings of the 37 th Annual Symposium on the Foundations of Computer Science, </booktitle> <pages> pages 627-636. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1996. </year>
Reference-contexts: We know that unless P = N P, problems such as CLIQUE [FGL + 91, AS92, ALM + 92] and CHROMATIC NUMBER [LY93] cannot be approximated even to within a factor of n ffi in polynomial time, for some fixed ffi &gt; 0. (More recently, Hastad <ref> [H96] </ref> showed that if SAT does not have randomized polynomial-time algorithms, then CLIQUE cannot be approximated to within a factor n 1ffi , for every ffi &gt; 0.) Others problems, such as those related to graph separators [LR88], have algorithms with approximation ratios close to O (log n).
Reference: [H97] <author> J. Hastad. </author> <title> Some optimal inapproximability results. </title> <booktitle> Proceedings of the 28 th ACM Symposium on Theory of Computing pages 1-10, </booktitle> <year> 1997. </year>
Reference-contexts: An algorithm in [Yan92] achieves an approximation ratio of 1:33 for the problem. Improved algorithms have since been given for MAX-3-SAT; an approximation ratio of 8=7 + * is achieved in [KZ97]. It also known that achieving an approximation ratio of 8=7 * is N P-hard <ref> [H97] </ref>. MINk-CUT: Given an n-vertex graph, remove a minimum set of edges that partitions the graph into k connected components. Saran and Vazirani [SV91] gave a (22=k)-approximation algorithm. The variant k-terminal cut problem specifies k vertices that must all be disconnected from each other by the removal of the edges.
Reference: [H64] <author> W. Hoffding. </author> <title> Probability inequalities for sums of bounded random variables. </title> <journal> Journal of the American Stastical Association, </journal> <volume> 58(301) </volume> <pages> 13-30, </pages> <year> 1964. </year>
Reference-contexts: Since the numbers are drawn with replacement, the values X j are identically distributed, and E [X j ] = n j=1 Since jX j j M by hypothesis, the lemma now follows from the standard Hoffding bound <ref> [H64] </ref>. For MAX-CUT, our goal is to estimate the values ae i of the form P a j ). First, if any jN (i)j *n=10, we use the estimate 0 for ae i .
Reference: [IEE92] <editor> IEEE. </editor> <booktitle> Proceedings of the 33 rd Annual Symposium on the Foundations of Computer Science. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <month> October </month> <year> 1992. </year>
Reference: [IEE93] <editor> IEEE. </editor> <booktitle> Proceedings of the 34 th Annual Symposium on the Foundations of Computer Science. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <month> November </month> <year> 1993. </year>
Reference: [IEE94] <editor> IEEE. </editor> <booktitle> Proceedings of the 35 th Annual Symposium on the Foundations of Computer Science. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <month> November </month> <year> 1994. </year> <month> 43 </month>
Reference: [IK75] <author> O. H. Ibarra and C. E. Kim. </author> <title> Fast approximation algorithms for the knapsack and sum of subsets problems. </title> <journal> Journal of the ACM, </journal> <volume> 22(4) </volume> <pages> 463-468, </pages> <year> 1975. </year>
Reference: [JS89] <author> M. Jerrum and A. Sinclair. </author> <title> Approximating the permanent. </title> <journal> SIAM Journal on Computing, </journal> <volume> 18(6) </volume> <pages> 1149-1178, </pages> <year> 1989. </year>
Reference-contexts: For instance, in graphs with degree exceeding n=2, one can find Hamiltonian cycles [P 76] and approximate the number of perfect matchings <ref> [JS89] </ref>. In everywhere-dense graphs it is easy to approximate the values of the Tutte polynomial and, as a special case, to estimate the reliability of a network [AFW94]. Independent of our work, Fernandez de la Vega [FdlV94] developed a PTAS for everywhere-dense MAX-CUT using exhaustive sampling principles similar to ours.
Reference: [JS93] <author> M. Jerrum and G. B. Sorkin. </author> <title> Simulated annealing for graph bisection. </title> <booktitle> In Proceedings of the 34 th Annual Symposium on the Foundations of Computer Science [IEE93], </booktitle> <pages> pages 94-103. </pages>
Reference-contexts: BISECTION: Partition the vertices of an undirected graph into two equal halves so as to minimize the number of edges with exactly one endpoint in each half. Some algorithms, for example using eigenvalues [B87] or simulated annealing <ref> [JS93] </ref> do well on certain random graphs (see also [BCLS84]). For worst-case inputs, no true approximation algorithms are known. Some known "bisection approximators" (based upon techniques of [LR88]) yield separators whose capacity is within a factor O (log n) of the capacity of the optimum bisection.
Reference: [KZ97] <author> H. Karloff and U. </author> <title> Zwick. </title> <booktitle> A 7=8 * approximation for MAX-3SAT? In Proceedings of the 37 th Annual Symposium on the Foundations of Computer Science 1997. </booktitle>
Reference-contexts: An algorithm in [Yan92] achieves an approximation ratio of 1:33 for the problem. Improved algorithms have since been given for MAX-3-SAT; an approximation ratio of 8=7 + * is achieved in <ref> [KZ97] </ref>. It also known that achieving an approximation ratio of 8=7 * is N P-hard [H97]. MINk-CUT: Given an n-vertex graph, remove a minimum set of edges that partitions the graph into k connected components. Saran and Vazirani [SV91] gave a (22=k)-approximation algorithm.
Reference: [K84] <author> N. Karmarkar. </author> <title> A new polynomial-time algorithm for linear programming. </title> <journal> Combinatorica, </journal> <volume> 4(4) </volume> <pages> 373-395, </pages> <year> 1984. </year>
Reference-contexts: We solve the linear system using a polynomial-time algorithm for linear programming in O ((Kn d1 ) 3 ) time <ref> [K84] </ref>. Lemma 3.7 implies that the (fractional) solution thus obtained is also a feasible solution for the original PIP, except for an additive error 2d* 0 n d .
Reference: [KK82] <author> N. Karmakar and R. M. Karp. </author> <title> An efficient approximation scheme for the one-dimensional bin-packing problem. </title> <booktitle> In Proceedings of the 23 rd Annual Symposium on the Foundations of Computer Science, </booktitle> <pages> pages 312-320. </pages> <publisher> IEEE, IEEE Computer Society Press, </publisher> <year> 1982. </year>
Reference: [KLM89] <author> R. M. Karp, M. Luby, and N. </author> <title> Madras. Monte-Carlo approximation algorithms for enumeration problems. </title> <journal> Journal of Algorithms, </journal> <volume> 10(3) </volume> <pages> 429-448, </pages> <year> 1989. </year>
Reference-contexts: A PTAS thus allows us to trade off approximation accuracy for running time. (In the previous definition, if the running time is polynomial in 1=* as well, then we have a fully polynomial time approximation scheme. These are known to exist for a few problems <ref> [GJ79, DFK91, KLM89] </ref>.) Unfortunately, recent results ([ALM + 92]) show that if P 6= N P, then PTASs do not exist for many N P-hard problems.
Reference: [KSW97] <author> S. Khanna, M. Sudan, and D. Williamson. </author> <title> A complete classification of the approximability of maximization problems derived from boolean constraint satisfaction. </title> <booktitle> In Proceedings of the 29th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 11-20, </pages> <year> 1997. </year>
Reference-contexts: As is well-known (see [Pap94], Theorem 13.8), a MAX-SN P 0 problem can be viewed as a MAX-k-FUNCTION-SAT problem for some fixed integer k. (An alternative name for MAX-k-FUNCTION-SAT is "constraint satisfaction problems" <ref> [KSW97] </ref>.) We call an instance of a MAX-SN P 0 problem dense if the instance of MAX-k-FUNCTION-SAT produced using it has (n k ) functions. It is easily checked that our earlier definitions of denseness were sub-cases of this definition.
Reference: [KP92] <author> E. Koutsoupias and C. H. Papadimitriou. </author> <title> On the greedy heuristic for satisfiability. </title> <journal> Information Processing Letters, </journal> <volume> 43(1) </volume> <pages> 53-55, </pages> <year> 1992. </year>
Reference-contexts: Edwards [Edw86] shows how to 3-color a 3-colorable everywhere-dense graph in polynomial time. Our sampling approach gives an alternative algorithm. A random-sampling based approach related to ours also appears in <ref> [KP92] </ref>.
Reference: [KP93] <author> G. Kortsarz and D. Peleg. </author> <title> On choosing a dense subgraph. </title> <booktitle> In Proceedings of the 34 th Annual Symposium on the Foundations of Computer Science [IEE93], </booktitle> <pages> pages 692-701. 44 </pages>
Reference-contexts: Dalhaus et al. [DJP + 94] give an algorithm that achieves an approximation ratio of (2 2=k). DENSE-k-SUBGRAPH: Given a graph, find a subset of k vertices that induces a graph with the most edges. This problem was studied in <ref> [KP93] </ref>, where 4 an approximation algorithm with ratio n 7=18 was presented. 3-COLORING: Color the vertices of a graph with 3 colors such that no two adjacent vertices have the same color. Application of our techniques to this problem yields a result already shown in [Edw86].
Reference: [LR88] <author> T. Leighton and S. Rao. </author> <title> An approximate max-flow min-cut theorem for uniform multicommodity flow problems with applications to approximation algorithms. </title> <booktitle> In Proceedings of the 29 th Annual Symposium on the Foundations of Computer Science, </booktitle> <pages> pages 422-431. </pages> <publisher> IEEE, IEEE Computer Society Press, </publisher> <month> October </month> <year> 1988. </year>
Reference-contexts: ffi in polynomial time, for some fixed ffi &gt; 0. (More recently, Hastad [H96] showed that if SAT does not have randomized polynomial-time algorithms, then CLIQUE cannot be approximated to within a factor n 1ffi , for every ffi &gt; 0.) Others problems, such as those related to graph separators <ref> [LR88] </ref>, have algorithms with approximation ratios close to O (log n). No inapproximability results are known for them. MAX-SN P problems, such as MAX-CUT or MAX-3-SAT, can be approximated to within some fixed constant factor but no better [PY91, ALM + 92]. <p> SEPARATOR: Partition the vertices of a graph into two groups, each with at least 1=3 of the vertices, so as to minimize the number of edges with exactly one endpoint in each group. An algorithm in <ref> [LR88] </ref> achieves approximation ratio O (log n) (though it may produce a 1=4 : 3=4 separator instead of a 1=3 : 2=3 separator). BISECTION: Partition the vertices of an undirected graph into two equal halves so as to minimize the number of edges with exactly one endpoint in each half. <p> Some algorithms, for example using eigenvalues [B87] or simulated annealing [JS93] do well on certain random graphs (see also [BCLS84]). For worst-case inputs, no true approximation algorithms are known. Some known "bisection approximators" (based upon techniques of <ref> [LR88] </ref>) yield separators whose capacity is within a factor O (log n) of the capacity of the optimum bisection. Our algorithm gives an exact bisection.
Reference: [LY93] <author> C. Lund and M. Yannakakis. </author> <title> On the hardness of approximating minimization problems. </title> <booktitle> In Proceedings of the 25 th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 286-293. </pages> <publisher> ACM, ACM Press, </publisher> <month> May </month> <year> 1993. </year>
Reference-contexts: We know that unless P = N P, problems such as CLIQUE [FGL + 91, AS92, ALM + 92] and CHROMATIC NUMBER <ref> [LY93] </ref> cannot be approximated even to within a factor of n ffi in polynomial time, for some fixed ffi &gt; 0. (More recently, Hastad [H96] showed that if SAT does not have randomized polynomial-time algorithms, then CLIQUE cannot be approximated to within a factor n 1ffi , for every ffi &gt;
Reference: [P 76] <author> L. Posa. </author> <title> Hamiltonian circuits in random graphs. </title> <journal> Discrete Mathematics, </journal> <volume> 14 </volume> <pages> 359-364, </pages> <year> 1976. </year>
Reference-contexts: For instance, in graphs with degree exceeding n=2, one can find Hamiltonian cycles <ref> [P 76] </ref> and approximate the number of perfect matchings [JS89]. In everywhere-dense graphs it is easy to approximate the values of the Tutte polynomial and, as a special case, to estimate the reliability of a network [AFW94].
Reference: [Pap94] <author> C. H. Papadimitriou. </author> <title> Computational Complexity. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: ) find an assignment that satisfies OPT * 2 k n k (1 *)OPT clauses. 4.4 Dense MAX-SN P As pointed out in [PY91], problems such as MAX-CUT, MAX-k-SAT and MAX-HYPERCUT (d) lie in a class called MAX-SN P, and actually in a subclass called 30 MAX-SN P 0 in <ref> [Pap94] </ref>. MAX-SN P 0 was defined using model theory, and it is unclear how to define denseness for MAX-SN P 0 problems. In fact, problems such as vertex cover are in MAX-SN P only if the degree of the graph is bounded. <p> The objective is to assign values to the variables so as to satisfy as many f i as possible. As is well-known (see <ref> [Pap94] </ref>, Theorem 13.8), a MAX-SN P 0 problem can be viewed as a MAX-k-FUNCTION-SAT problem for some fixed integer k. (An alternative name for MAX-k-FUNCTION-SAT is "constraint satisfaction problems" [KSW97].) We call an instance of a MAX-SN P 0 problem dense if the instance of MAX-k-FUNCTION-SAT produced using it has (n
Reference: [PY91] <author> C. H. Papadimitriou and M. Yannakakis. </author> <title> Optimization, approximation and complexity classes. </title> <journal> JCSS, </journal> <volume> 43(3) </volume> <pages> 425-440, </pages> <year> 1991. </year> <note> A preliminary version appeared in STOC 1988. </note>
Reference-contexts: No inapproximability results are known for them. MAX-SN P problems, such as MAX-CUT or MAX-3-SAT, can be approximated to within some fixed constant factor but no better <ref> [PY91, ALM + 92] </ref>. Only a few problems, such as KNAPSACK [S75] and BIN PACKING [FL81], are known to have polynomial time approximation schemes (PTASs). <p> In particular, this is is true for every MAX-SN P -hard problem. (The class of MAX-SN P-hard problems includes VERTEX COVER, MAX-3-SAT, MAX-CUT, METRIC TSP, MULTI-WAY CUTS, and many others <ref> [PY91] </ref>.) Note that the inapproximability results mentioned above, like all N P 2 hardness results, rule out approximation only on worst case instances of the problem. They do not rule out the existence of algorithms (heuristics) that do well on most instances. <p> The reader will note that the problems span a broad spectrum. Some, like maximum cut and maximum k-satisfiability, are MAX-SN P-complete. Thus they do not have PTASs on general (that is, non-dense) instances [ALM + 92], but they can all be approximated within some constant factor in polynomial time <ref> [PY91] </ref>. Others, like graph bisection and separation, do not currently have any algorithms with approximation ratios better than O (log n) on general instances. It is an open problem whether they are hard to approximate. <p> Application of our techniques to this problem yields a result already shown in [Edw86]. MAX-SN P: The class of "constant factor approximable" problems defined in <ref> [PY91] </ref>. <p> k , we have OPT (1 2 k )(m O (n k1 )): By approximating our PIP we can in time O (n 2 4k =* 2 ) find an assignment that satisfies OPT * 2 k n k (1 *)OPT clauses. 4.4 Dense MAX-SN P As pointed out in <ref> [PY91] </ref>, problems such as MAX-CUT, MAX-k-SAT and MAX-HYPERCUT (d) lie in a class called MAX-SN P, and actually in a subclass called 30 MAX-SN P 0 in [Pap94]. MAX-SN P 0 was defined using model theory, and it is unclear how to define denseness for MAX-SN P 0 problems. <p> The resulting instance is 2=5-dense, but the capacity of the minimum bisection is unchanged. Now we show that if there is a PTAS on everywhere-1=2-dense instances of MIN-VERTEX-COVER, then P = N P. We rely on the result of <ref> [PY91, ALM + 92] </ref> that P = N P if there is a PTAS for MIN-VERTEX-COVER on the following simple family of graphs: each of the n vertices has degree at most 5, and the smallest vertex cover has size at least n=2.
Reference: [Rag88] <author> P. Raghavan. </author> <title> Probabilistic construction of deterministic algorithms: Approximate packing integer programs. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 37(2) </volume> <pages> 130-43, </pages> <month> October </month> <year> 1988. </year>
Reference-contexts: Those depend upon two randomized procedures: Randomized Rounding (used in Lemma 3.3) and the Sampling Lemma. Raghavan <ref> [Rag88] </ref> derandomized the former through the method of conditional probabilities. Derandomizations of the Sampling Lemma appear in [BR94] and [BGG93].
Reference: [RT87] <author> P. Raghavan and C. D. Thompson. </author> <title> Randomized rounding: a technique for provably good algorithms and algorithmic proofs. </title> <journal> Combi-natorica, </journal> <volume> 7(4) </volume> <pages> 365-374, </pages> <year> 1987. </year>
Reference-contexts: We present this section first since it is more straightforward than the following ones but conveys the same ideas. As we saw in Section 2.3, Raghavan and Thompson <ref> [RT87] </ref> show that given a fractional solution to a linear program, we can round it into an integer solution that is "almost as good." We rephrased their result in Lemma 2.2.
Reference: [S75] <author> S. Sahni. </author> <title> Approximate algorithms for the 0/1 knapsack problem. </title> <journal> Journal of the ACM, </journal> <volume> 22(1) </volume> <pages> 115-124, </pages> <year> 1975. </year>
Reference-contexts: No inapproximability results are known for them. MAX-SN P problems, such as MAX-CUT or MAX-3-SAT, can be approximated to within some fixed constant factor but no better [PY91, ALM + 92]. Only a few problems, such as KNAPSACK <ref> [S75] </ref> and BIN PACKING [FL81], are known to have polynomial time approximation schemes (PTASs).
Reference: [SV91] <author> H. Saran and V. V. Vazirani. </author> <title> Finding k-cuts within twice the optimal. </title> <booktitle> In IEEE, editor, Proceedings of the 32nd Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 743-751, </pages> <address> San Juan, Porto Rico, October 1991. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: It also known that achieving an approximation ratio of 8=7 * is N P-hard [H97]. MINk-CUT: Given an n-vertex graph, remove a minimum set of edges that partitions the graph into k connected components. Saran and Vazirani <ref> [SV91] </ref> gave a (22=k)-approximation algorithm. The variant k-terminal cut problem specifies k vertices that must all be disconnected from each other by the removal of the edges. Dalhaus et al. [DJP + 94] give an algorithm that achieves an approximation ratio of (2 2=k).
Reference: [Shm94] <author> D. Shmoys. </author> <title> Computing near-optimal solutions to combinatorial optimization problems. In Combinatorial Optimization, </title> <booktitle> DIMACS Series 45 in Discrete Math and Theoretical Computer Science, </booktitle> <editor> (W. Cook, L. Lovasz, and P.D. Seymour, eds.) </editor> <publisher> AMS, </publisher> <year> 1995, </year> <pages> pages 355-397. </pages>
Reference-contexts: worst-case ratio of the value of the solution returned by the algorithm to the value of the optimum solution. (This definition is for minimization problems; for maximization problems the ratio is inverted so that it is always at least 1.) Optimization problems seem to be approximable to different degrees (see <ref> [Shm94] </ref> for a survey).
Reference: [Yan92] <author> M. Yannakakis. </author> <title> On the approximation of maximum satisfiability. </title> <booktitle> In Proceedings of the 3 rd Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 1-9. ACM-SIAM, </pages> <month> January </month> <year> 1992. </year> <month> 46 </month>
Reference-contexts: Our algorithm gives an exact bisection. MAX-k-SAT: Given a conjunctive normal form formula with k variables per clause, find a true-false assignment to the variables making the maximum possible number of clauses true. An algorithm in <ref> [Yan92] </ref> achieves an approximation ratio of 1:33 for the problem. Improved algorithms have since been given for MAX-3-SAT; an approximation ratio of 8=7 + * is achieved in [KZ97]. It also known that achieving an approximation ratio of 8=7 * is N P-hard [H97].
References-found: 47

