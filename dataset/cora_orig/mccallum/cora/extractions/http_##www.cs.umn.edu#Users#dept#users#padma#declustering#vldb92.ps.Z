URL: http://www.cs.umn.edu/Users/dept/users/padma/declustering/vldb92.ps.Z
Refering-URL: http://www.cs.umn.edu/Users/dept/users/padma/declustering/
Root-URL: http://www.cs.umn.edu
Title: CMD: A Multidimensional Declustering Method for Parallel Database Systems 1  
Author: Jianzhong Li Jaideep Srivastava Doron Rotem Union Street S. E. 
Keyword: Key Words. Parallel database, data clustering, multidimensional data clustering, multidimensional range query.  
Address: 4-192 EECS Building  Minneapolis, MN 55455  
Affiliation: Computer Science Department  University of Minnesota  
Abstract: I/O parallelism appears to be a promising approach to achieving high performance in parallel database systems. In such systems, it is essential to decluster database files into fragments and spread them across multiple disks so that the DBMS software can exploit the I/O bandwidth reading and writing the disks in parallel. In this paper, we consider the problem of declustering multidimensional data on a parallel disk system. Since the multidimensional range query is the main work-horse for applications accessing such data, our aim is to provide efficient support for it. A new declustering method for parallel disk systems, called coordinate modulo distribution (CMD), is proposed. Our analysis shows that the method achieves optimum parallelism for a very high percentage of range queries on multidimensional data, if the distribution of data on each dimension is stationary. We have derived the exact conditions under which optimality is achieved. Also provided are the worst and average case bounds on multidimensional range query performance. Experimental results show that the method achieves near optimum performance in almost all cases even when the stationarity assumption does not hold. Details of the parallel algorithms for range query processing and data maintenance are also provided. 1 Supported in part by Natioal Science Foundation Grant No. IRI-9110584. Initial results of this research were 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> H. C. Du and J. S. Sobolewski, </author> <title> Disk allocation for Product Files on Multiple Disk Systems, </title> <journal> ACM Trans. Database Systems, </journal> <volume> Vol. 7, </volume> <month> March </month> <year> 1982, </year> <pages> pp. 82-101. </pages>
Reference-contexts: Thus, multidimensional declustering methods need additional research. However, only a little attention has been focused on this area so far. In 1982, Du and Sobolewski proposed a heuristic data allocation method, called Disk Modulo <ref> [1] </ref>, which has been explored by many researchers [2, 3, 4, 5, 6]. The method considered the multidimensional access method, but was restricted to static files and partial-match queries only.
Reference: 2. <author> M. Y. Chen, </author> <title> Multidisk File Design: An Analysis of Folding Buckets to Disks, </title> <journal> BIT, </journal> <volume> Vol. 24, </volume> <year> 1984, </year> <pages> pp. 262-268. </pages>
Reference-contexts: Thus, multidimensional declustering methods need additional research. However, only a little attention has been focused on this area so far. In 1982, Du and Sobolewski proposed a heuristic data allocation method, called Disk Modulo [1], which has been explored by many researchers <ref> [2, 3, 4, 5, 6] </ref>. The method considered the multidimensional access method, but was restricted to static files and partial-match queries only.
Reference: 3. <author> M. Y. Chen, </author> <title> A Note on Redundant Disk Modulo Allocation, </title> <journal> Information Processing Letter, </journal> <volume> Vol. 20, </volume> <year> 1985, </year> <pages> pp. 121-123. </pages>
Reference-contexts: Thus, multidimensional declustering methods need additional research. However, only a little attention has been focused on this area so far. In 1982, Du and Sobolewski proposed a heuristic data allocation method, called Disk Modulo [1], which has been explored by many researchers <ref> [2, 3, 4, 5, 6] </ref>. The method considered the multidimensional access method, but was restricted to static files and partial-match queries only.
Reference: 4. <author> C. C. Chang and M. Y. Chen, </author> <title> Lower Bounds of Using Disk Modulo Allocation Method to Allocate Cartesian Product Files in Two-disk Systems, </title> <booktitle> In The Proceedings of International Computer Symposium, </booktitle> <address> Tainan, Taiwan, </address> <year> 1986, </year> <pages> pp. 770-774. </pages>
Reference-contexts: Thus, multidimensional declustering methods need additional research. However, only a little attention has been focused on this area so far. In 1982, Du and Sobolewski proposed a heuristic data allocation method, called Disk Modulo [1], which has been explored by many researchers <ref> [2, 3, 4, 5, 6] </ref>. The method considered the multidimensional access method, but was restricted to static files and partial-match queries only.
Reference: 5. <author> C. C. Chan and L. S. Lian, </author> <title> On Strict Optimality Property of Allocating Binary Cartesian Product Files on Multiple Disk Systems, </title> <booktitle> In The Proceedings of International Conference on Foundation of Data Organization, </booktitle> <address> Japan, </address> <year> 1985, </year> <pages> pp. 104-112. </pages>
Reference-contexts: Thus, multidimensional declustering methods need additional research. However, only a little attention has been focused on this area so far. In 1982, Du and Sobolewski proposed a heuristic data allocation method, called Disk Modulo [1], which has been explored by many researchers <ref> [2, 3, 4, 5, 6] </ref>. The method considered the multidimensional access method, but was restricted to static files and partial-match queries only.
Reference: 6. <author> H. C. Du, </author> <title> Disk Allocation Methods for Binary Cartesian Product Files, </title> <journal> BIT, </journal> <volume> Vol. 26, </volume> <year> 1986, </year> <pages> pp. 138-147. </pages>
Reference-contexts: Thus, multidimensional declustering methods need additional research. However, only a little attention has been focused on this area so far. In 1982, Du and Sobolewski proposed a heuristic data allocation method, called Disk Modulo [1], which has been explored by many researchers <ref> [2, 3, 4, 5, 6] </ref>. The method considered the multidimensional access method, but was restricted to static files and partial-match queries only.
Reference: 7. <author> C. T. Wu and W. A. Burkmard, </author> <title> Associative Searching in Multiple Storage Units, </title> <journal> ACM. Trans. Database Systems, </journal> <volume> Vol. 12, No. 1, </volume> <year> 1987, </year> <pages> pp. 38-64. </pages>
Reference-contexts: The method considered the multidimensional access method, but was restricted to static files and partial-match queries only. In 1987, Wu and Burkhard proposed a dynamic file allocation method <ref> [7] </ref>, called M-cycle allocation scheme, which was the first to adapt dynamic hash files to process range queries in parallel 2 disk systems. The method initially partitions the key-space into regions and allocates the regions among multiple disks. <p> The performance of the algorithm of range query processing on non-uniformly distributed file. In order to compare the performance of range query processing of the CM D method with that of the M-cycle method <ref> [7] </ref>, which is the only other method for multidimensional range query processing in multidisk systems, we also implemented the algorithms of the M-cycle method. We used the M-cycle method to distribute the same two files and performed the same 10 range queries on the two files.
Reference: 8. <author> J. Neievergelt, H. Hinterberger and K. C. Sevcik, </author> <title> The Grid File: An Adaptable, Symmetric Multikey File Structure, </title> <journal> ACM Trans. Database Systems, </journal> <volume> Vol. 9, No. 1, </volume> <year> 1984, </year> <pages> pp. 38-71. </pages>
Reference-contexts: A grid file is a multi-dimensional file structure <ref> [8] </ref> in which records of a d-dimensional file are represented as points in a d-dimensional space. The representational problem is how to allocate the 5 points in the space to a linear set of storage units of fixed size, called pages.
Reference: 9. <author> G. Gopeland, W. Alexander, E. Boughter and T. Keller, </author> <title> Data Placement in Bubba, </title> <booktitle> Proc. ACM SIGMOD Conf. on Management of Data, </booktitle> <year> 1988, </year> <pages> pp. 99-108. </pages>
Reference: 10. <author> M. Y. Kim, </author> <title> Synchronized disk interleaving, </title> <journal> IEEE Trans. on Computers, </journal> <volume> 35(11), </volume> <year> 1986, </year> <pages> pp. 978-988. </pages>
Reference: 11. <author> M. Livny, S. Khoshafian and H. Boral, </author> <booktitle> Multidisk Management Algorithms, Proc. ACM SIGMETRICS, </booktitle> <year> 1987, </year> <pages> pp. 69-77. </pages>
Reference: 12. <author> K. Salem and H. Garcia-Molina, </author> <title> Disk Striping, </title> <booktitle> IEEE Conf. on Data Engineering, </booktitle> <year> 1986, </year> <pages> pp. 336-342. </pages>
Reference: 13. <author> D. Patterson, G. Gibson and R. Katz, </author> <title> A Case for Redundant Array of Inexpensive disks (RAID), </title> <booktitle> Proc. ACM SIGMOD Conf. on Management of Data, </booktitle> <year> 1988, </year> <pages> pp. 109-116. </pages>
Reference: 14. <author> C. Faloutsos and D. Metaxas, </author> <title> Declustering Using Error Correcting Codes, </title> <booktitle> Proc. Symp. on Principles of Database Systems, </booktitle> <year> 1989, </year> <pages> pp. 253-258. </pages>
Reference: 15. <author> M. H. Kim and S. Pramanik, </author> <title> Optimal File Distribution for partial Match Retrieval, </title> <booktitle> Proc. ACM SIGMOD Conf. on Management of Data, </booktitle> <year> 1988, </year> <pages> pp. 173-182. </pages>
Reference: 16. <author> S. Pramanik and M. H. Kim, </author> <title> Parallel Processing of Large Node B-tree, </title> <journal> Trans. on Computers, </journal> <volume> 39(9), </volume> <year> 1990, </year> <pages> pp. 1208-1212. 27 </pages>
Reference: 17. <author> B. Seeger and P. A. Larson, </author> <title> Multi-Disk B-tree*, </title> <booktitle> Proc. ACM SIGMOD Conf. on Manage--ment of Data, </booktitle> <year> 1991, </year> <pages> pp. 436-445. </pages>
Reference: 18. <author> K. A. Hua and C. Lee, </author> <title> An Adaptive Data Placement Scheme For Parallel Database Computer Systems, </title> <booktitle> Proc. The 16th VLDB Conf. </booktitle> , <year> 1990, </year> <pages> pp. 493-506. </pages>
Reference-contexts: The cost of retrieval strongly depends on the data distribution. When data is nonuniformly distributed the performance of the method degrades significantly. In 1990, Hua and Lee presented an adaptive placement scheme which distributes data of a relation based on the grid file structure <ref> [18] </ref>. However, this method considers the balance only in terms of the data volume without distributing the neighbour grid blocks on different disks, so that the disk accessing concurrency can not be sufficiently achieved.
Reference: 19. <author> D. Ries and R. Epstein, </author> <title> Evaluation of Distribution Criteria for Distributed Database Systems, </title> <type> UCB/ERL Technical Report M78/22, </type> <institution> UC Berkeley, </institution> <month> May, </month> <year> 1978. </year>
Reference-contexts: In general, increasing the degree of declustering reduces the response time for an individual query and increases the overall throughput of systems. Declustering has its origins in the concept of horizontal partitioning initially developed as a distribution mechanism for distributed DBMS <ref> [19] </ref>. Since then, the declustering problem has received extensive attention [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]. In recent years, many researchers have concentrated on declustering techniques for parallel database machines.
Reference: 20. <author> Teradata Corporation, </author> <title> DBC/1012 Data Base Computer Concepts and Facilities, Teradata Document C02-001-05, </title> <address> Los Angeles, Calif. </address> <year> 1988. </year>
Reference-contexts: In recent years, many researchers have concentrated on declustering techniques for parallel database machines. Three kinds of declustering methods have been applied in well known parallel database machines, namely round-robin <ref> [20] </ref>, hashed declustering [21] and range-partition declustering [22]. Most of the research on declustering cited above concentrates on declustering the data in a database file using the values of a single attribute or a few key attributes so that operations applied on the partitioning attribute can be performed very efficiently.
Reference: 21. <author> M. Kitsuregawa, H. Tanaks and T. Moto-Oka, </author> <title> Architecture and Performance of Relational Algebra Machine GRACE, </title> <booktitle> Proc. of the International Conference on Parallel Processing, </booktitle> <address> Chicago, </address> <year> 1984. </year>
Reference-contexts: In recent years, many researchers have concentrated on declustering techniques for parallel database machines. Three kinds of declustering methods have been applied in well known parallel database machines, namely round-robin [20], hashed declustering <ref> [21] </ref> and range-partition declustering [22]. Most of the research on declustering cited above concentrates on declustering the data in a database file using the values of a single attribute or a few key attributes so that operations applied on the partitioning attribute can be performed very efficiently.
Reference: 22. <author> D. J. DeWitt, et al, </author> <title> GAMMA: A Performance Dataflow Database Machine, </title> <booktitle> Proc. of Inter. Conf. on VLDB, </booktitle> <year> 1986, </year> <pages> pp. 228-237. </pages>
Reference-contexts: In recent years, many researchers have concentrated on declustering techniques for parallel database machines. Three kinds of declustering methods have been applied in well known parallel database machines, namely round-robin [20], hashed declustering [21] and range-partition declustering <ref> [22] </ref>. Most of the research on declustering cited above concentrates on declustering the data in a database file using the values of a single attribute or a few key attributes so that operations applied on the partitioning attribute can be performed very efficiently.
Reference: 23. <author> D. Patterson, et al, </author> <title> RAID: Redundant Arrays of Inexpensive Disks, </title> <booktitle> Proc. of ACM SIGMOD Conference on Managemet of Data, </booktitle> <address> Chicago, IL, </address> <year> 1988. </year>
Reference-contexts: It is highly unlikely that the performance of individual disk units will improve significantly in the near future. Thus, we need to consider how to exploit multiple disk systems <ref> [23] </ref>. This problem is usually addressed today by data declustering. Declustering a database file involves distributing the data in the database file among multiple disks.
References-found: 23

