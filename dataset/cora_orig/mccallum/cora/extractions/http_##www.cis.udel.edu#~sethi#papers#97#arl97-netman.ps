URL: http://www.cis.udel.edu/~sethi/papers/97/arl97-netman.ps
Refering-URL: http://www.cis.udel.edu/~sethi/netman/protocols.html
Root-URL: http://www.cis.udel.edu
Title: A SPREADSHEET-BASED SNMP SCRIPTING ENVIRONMENT FOR BATTLEFIELD NETWORK MANAGEMENT  
Author: Adarshpal S. Sethi Pramod Kalyanasundaram Christopher M. Sherwin Dong Zhu 
Keyword: Network Management, Hierarchical Management, Proxy Agents, Spreadsheet Paradigm, SNMP.  
Note: In Proc. First ARL/ATIRP Annual Conference,  
Address: 19716  College Park, MD  
Affiliation: Department of Computer and Information Sciences University of Delaware, Newark, DE  
Email: fsethi, kalyanas, sherwin, dzhug@cis.udel.edu  
Date: (Jan. 1997), pp. 251-256.  
Abstract: Effective management of battlefield networks requires a hierarchical network management architecture wherein managers can dyanmically delegate management tasks to intermediate managers. In this report we describe a novel paradigm called the spreadsheet paradigm which extends the traditional flat SNMP management model to a hierarchical architecture. We present a spreadsheet MIB, language, and event model that is located at a proxy node acting in the role of an intermediate manager and controllable by a manager. An important feature of the spreadsheet-based proxy is that it permits managers to configure dynamic MIB views based on application requirements that can be quite different from the underlying MIB structures at the agents. The spreadsheet-based proxy architecture presents an easy to use and comprehend abstraction and interface to extend a standard management framework. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A.S. Sethi, Y. Raynaud, and F. Faure-Vincent, </author> <title> editors. Integrated Network Management IV. </title> <publisher> Chapman and Hall, </publisher> <address> London, </address> <year> 1995. </year>
Reference-contexts: To effectively manage large distributed systems and complex internetworks, a management model must go beyond the traditional flat model of a single manager communicating with a large number of agents. Hierarchical management and peer-to-peer communication among managers are attractive alternatives that need to be explored for distributed system management <ref> [1] </ref>. However, the most popular management framework, the SNMP framework (which includes both the SNMP and the SNMPv2 protocols) [2], [3], [4], only supports the flat management model.
Reference: [2] <author> J. D. Case, M. S. Fedor, M. L. Schoffstall, and C. Davin. </author> <title> Simple Network Management Protocol (RFC 1157), </title> <month> May </month> <year> 1990. </year>
Reference-contexts: Hierarchical management and peer-to-peer communication among managers are attractive alternatives that need to be explored for distributed system management [1]. However, the most popular management framework, the SNMP framework (which includes both the SNMP and the SNMPv2 protocols) <ref> [2] </ref>, [3], [4], only supports the flat management model. Although the SNMPv2 protocol includes an InformRequest PDU intended for manager-to-manager communication in a hierarchical environment, it cannot be effectively used because the SNMP framework lacks essential support for hierarchical management.
Reference: [3] <author> J. Case, K. McCloghrie, M. Rose, and S. Wald-busser. </author> <title> Protocol Operations for Version 2 of the Simple Network Management Protocol (SN-MPv2) (RFC 1905), </title> <month> January </month> <year> 1996. </year>
Reference-contexts: Hierarchical management and peer-to-peer communication among managers are attractive alternatives that need to be explored for distributed system management [1]. However, the most popular management framework, the SNMP framework (which includes both the SNMP and the SNMPv2 protocols) [2], <ref> [3] </ref>, [4], only supports the flat management model. Although the SNMPv2 protocol includes an InformRequest PDU intended for manager-to-manager communication in a hierarchical environment, it cannot be effectively used because the SNMP framework lacks essential support for hierarchical management. <p> The user can thus organize management information based on the user's requirements, which can be quite different from the underlying MIB structure. Further, the user can perform operations on these user structured views of management information independent of the structure of the standard SNMP MIBs. Existing models <ref> [3] </ref>, [9] provide facilities for event definitions and object relationships. However, for these event definitions and object relationships to be available for use by a manager, they must be predefined in the MIBs supported by an agent.
Reference: [4] <author> M. T. Rose and K. McCloghrie. </author> <title> Structure and Identification of Management Information for TCP/IP based internets (RFC 1155), </title> <month> May </month> <year> 1990. </year>
Reference-contexts: Hierarchical management and peer-to-peer communication among managers are attractive alternatives that need to be explored for distributed system management [1]. However, the most popular management framework, the SNMP framework (which includes both the SNMP and the SNMPv2 protocols) [2], [3], <ref> [4] </ref>, only supports the flat management model. Although the SNMPv2 protocol includes an InformRequest PDU intended for manager-to-manager communication in a hierarchical environment, it cannot be effectively used because the SNMP framework lacks essential support for hierarchical management.
Reference: [5] <author> Y. Yemini, G. Goldszmidt, and S. Yemini. </author> <title> Network Management by Delegation. </title> <editor> In I. Krish-nan and W. Zimmer, editors, </editor> <booktitle> Integrated Network Management II, </booktitle> <pages> pages 95-107. </pages> <publisher> North Holland, </publisher> <address> Amsterdam, </address> <year> 1991. </year>
Reference-contexts: Management by delegation is a well-known strategy <ref> [5] </ref>, [6] for implementing hierarchical management, but so far the SNMP community has been unable to take advantage of it because the delegation primitives have not been integrated with the SNMP framework.
Reference: [6] <author> K. Arai and Y. Yemini. </author> <title> MIB view language (MVL) for SNMP. In A.S. Sethi, </title> <editor> Y. Raynaud, and F. Faure-Vincent, editors, </editor> <booktitle> Integrated Network Management IV, </booktitle> <pages> pages 454-465. </pages> <publisher> Chapman and Hall, </publisher> <address> London, </address> <year> 1995. </year>
Reference-contexts: Management by delegation is a well-known strategy [5], <ref> [6] </ref> for implementing hierarchical management, but so far the SNMP community has been unable to take advantage of it because the delegation primitives have not been integrated with the SNMP framework.
Reference: [7] <author> P. Kalyanasundaram, A.S. Sethi, and C. Sher-win. </author> <title> Design of A Spreadsheet Paradigm for Network Management. </title> <booktitle> In Proceedings of the 7th IFIP/IEEE Workshop on Distributed Systems: Operations and Management, </booktitle> <address> L'Aquila, Italy, </address> <month> October </month> <year> 1996. </year>
Reference-contexts: Our research into new models for distributed system management has led us to propose a new paradigm which we call the spreadsheet paradigm <ref> [7] </ref>, [8] that incorporates management by delegation concepts into the SNMP framework to facilitate the management of distributed systems.
Reference: [8] <author> P. Kalyanasundaram, A.S. Sethi, C. Sherwin, and D. Zhu. </author> <title> A Spreadsheet-based Scripting Environment for SNMP. </title> <booktitle> In Proceedings of the 5th IFIP/IEEE International Symposium on Integrated Network Management (to appear), </booktitle> <address> San Diego, CA, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: Our research into new models for distributed system management has led us to propose a new paradigm which we call the spreadsheet paradigm [7], <ref> [8] </ref> that incorporates management by delegation concepts into the SNMP framework to facilitate the management of distributed systems.
Reference: [9] <author> M. Hasan. </author> <title> An Active Temporal Model for Network Management Databases. In A.S. Sethi, </title> <editor> Y. Raynaud, and F. Faure-Vincent, editors, </editor> <booktitle> Integrated Network Management IV, </booktitle> <pages> pages 524-535. </pages> <publisher> Chapman and Hall, </publisher> <address> London, </address> <year> 1995. </year>
Reference-contexts: The user can thus organize management information based on the user's requirements, which can be quite different from the underlying MIB structure. Further, the user can perform operations on these user structured views of management information independent of the structure of the standard SNMP MIBs. Existing models [3], <ref> [9] </ref> provide facilities for event definitions and object relationships. However, for these event definitions and object relationships to be available for use by a manager, they must be predefined in the MIBs supported by an agent.
Reference: [10] <author> S. Waldbusser. </author> <title> Remote Network Monitoring Management Information Base (RFC 1757), </title> <month> February </month> <year> 1995. </year>
Reference-contexts: Existing models [3], [9] provide facilities for event definitions and object relationships. However, for these event definitions and object relationships to be available for use by a manager, they must be predefined in the MIBs supported by an agent. Some MIBs (such as the RMON MIB <ref> [10] </ref>) allow the manager to choose the objects that will enter into a relationship (e.g., choosing the interface whose statistics are to be observed), but the nature of the relationships is built into the MIB table structures and cannot be modified by the manager.
Reference: [11] <author> D. Holden. </author> <title> Predictive Languages for Management. </title> <booktitle> In Integrated Network Management I, </booktitle> <pages> pages 585-596. </pages> <publisher> North Holland, </publisher> <address> Amsterdam, </address> <month> May </month> <year> 1989. </year> <month> 256 </month>
Reference-contexts: The interpreter performs the functions of syntax checking, run time error checking, detection and reporting. A language that targets a network management environment must be able to support features that facilitate the specification of network management tasks coupled with user flexibility and expressive power <ref> [11] </ref>. The SSL has been specially designed for this purpose. The SSL supports arithmetic operators that allow a user to perform expression evaluation. It further allows a user to specify numeric (dot notation) or symbolic form of managed objects.
References-found: 11

