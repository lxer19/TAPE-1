URL: http://www.cs.huji.ac.il/~anker/com-seminar/RSVP/rsvp-issues.ps
Refering-URL: http://www.cs.huji.ac.il/~anker/com-seminar/RSVP/
Root-URL: http://www.cs.huji.ac.il
Email: fshenker,breslaug@parc.xerox.com  
Title: Two Issues in Reservation Establishment  
Author: Scott Shenker and Lee Breslau 
Address: Palo Alto, California 94304-1314  
Affiliation: Palo Alto Research Center Xerox Corporation  
Abstract: This paper addresses two issues related to resource reservation establishment in packet switched networks offering real-time services. The first issue arises out of the natural tension between the local nature of reservations (i.e., they control the service provided on a particular link) and the end-to-end nature of application service requirements. How do reservation establishment protocols enable applications to receive their desired end-to-end service? We review the current one-pass and two-pass approaches, and then propose a new hybrid approach called one-pass-with-advertising. The second issue in reservation establishment we consider arises from the inevitable heterogeneity in network router capabilities. Some routers and subnets in the Internet will support real-time services and others, such as ethernets, will not. How can a reservation establishment mechanism enable applications to achieve the end-to-end service they desire in the face of this heterogeneity? We propose an approach involving replacement services and advertising to build end-to-end service out of heterogeneous per-link service offerings. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Banerjea, D. Ferrari, B. Mah, M. Moran, D. Verma, and H. Zhang. </author> <title> The Tenet realtime protocol suite: design, implementation, and experiences, </title> <type> Technical Report TR-94-059, </type> <institution> International Computer Science Institute, </institution> <month> November </month> <year> 1994. </year>
Reference-contexts: At a more abstract level, however, one can say that there are only two basic approaches to reservation establishment in the literature. The first is a one-pass mechanism, as represented by RSVP. The second is a two-pass mechanism, as represented by the original Tenet design <ref> [1, 16] </ref> and by ST [13, 28]. We discuss these approaches separately, and in each case ask to what extent they can meet the end-to-end service needs of applications. <p> It also allows the admission control module to be independent of RSVP, in that the system calls to admission control are merely service requests and they could be issued by any number of different protocols. 3.1.2 Two-Pass Mechanisms Two-pass mechanisms, such as employed in the original Tenet architecture <ref> [1] </ref>, have very different properties. We will first sketch this general approach as it applies to the unicast case. The receiver 10 sends a reservation message towards the source containing the desired end-to-end delay bound.
Reference: [2] <author> S. Berson and D. Zappala. </author> <title> Looping and Wildcard Filters, </title> <note> memo 1/26/95. </note>
Reference-contexts: However, recent discussions in the RSVP design community suggest that RSVP itself, in order to support shared channels, might require RESV messages to include such a list of sources, at least when running on top of current multicast routing protocols <ref> [2] </ref>. 3.5 Interactions with Type-of-Service Routing There are several proposals for routing algorithms that can provide paths tailored for an application's service requirements; see [4, 9, 20] for a few representative references.
Reference: [3] <author> R. Braden, D. Clark, and S. Shenker. </author> <title> Integrated Services in the Internet Architecture: an Overview, Internet RFC 1633, </title> <month> June, </month> <year> 1994. </year>
Reference-contexts: 1 Introduction There are many proposed designs that make Internet-style packet-switched networks capable of supporting real-time applications (see <ref> [3, 6, 11, 12, 14, 18, 19, 21, 22, 23, 25] </ref> and references therein for a few representative examples). These proposals typically involve three main changes to the Internet architecture.
Reference: [4] <author> I. Castineyra, J.N. Chiappa and M. Steenstrup. </author> <title> The Nimrod Routing Architecture, </title> <type> Internet Draft, </type> <year> 1994. </year>
Reference-contexts: to support shared channels, might require RESV messages to include such a list of sources, at least when running on top of current multicast routing protocols [2]. 3.5 Interactions with Type-of-Service Routing There are several proposals for routing algorithms that can provide paths tailored for an application's service requirements; see <ref> [4, 9, 20] </ref> for a few representative references. These protocols offer an application a choice of path, and OPWA offers an application a choice of services along a path. How does OPWA interact with such routing algorithms? These routing algorithms choose routes based on a Quality-of-Route (QoR) request. <p> There are other ways to accomplish this same goal; for instance, static advertised parameters could be made available through routing. 17 In particular, some architectural proposals for the Internet, such as Nimrod <ref> [4] </ref>, provide link-state maps to each end host. Certainly in such an architecture, the ADV messages we propose here would be largely superfluous (they would still be needed to carry any advertisements that varied on time scales shorter than the frequency of routing updates).
Reference: [5] <author> D. Clark. </author> <title> The Design Philosophy of the DARPA Internet Protocols, </title> <booktitle> In Proceedings of ACM SIGCOMM '88, </booktitle> <month> August </month> <year> 1988. </year>
Reference-contexts: First, the protocol is receiver-initiated, in that service requests are generated by receivers and then propagated towards senders. These service requests, carried in RESV messages, follow the reverse of the paths over which data packets travel. Second, the protocol is based on the notion of soft-state <ref> [5] </ref>, which means that the state in the switches is periodically refreshed by the receivers.
Reference: [6] <author> D. Clark, S. Shenker, and L. Zhang. </author> <title> Supporting Real-Time Applications in an Integrated Services Packet Network: Architecture and Mechanism, </title> <booktitle> In Proceedings of ACM SIGCOMM '92, </booktitle> <pages> pp 14-26, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction There are many proposed designs that make Internet-style packet-switched networks capable of supporting real-time applications (see <ref> [3, 6, 11, 12, 14, 18, 19, 21, 22, 23, 25] </ref> and references therein for a few representative examples). These proposals typically involve three main changes to the Internet architecture. <p> also being considered by two IETF working groups: the Integrated Services Working Group (for the service model) and the RSVP Working Group (for the reservation establishment protocol). reservations from different receivers. 2.1 Service Model and Router Requirements The service model we use for context is based on that described in <ref> [6] </ref> and [25]. We assume that the network offers three basic packet delivery services related to real-time applications, which we describe below. <p> As part of the reservation request, the application must specify its traffic characteristics to the network; we call this traffic specification the TSpec. To specify traffic we use the token bucket filter <ref> [6, 21] </ref>, which has two parameters: the token bucket rate r and the token bucket depth b. <p> Thus, r is an upper bound on the long term rate of the traffic and b bounds its burstiness. The most traditional form of real-time service is what we call guaranteed service (see <ref> [6] </ref>), which provides an absolutely firm delay bound on every packet. <p> The service required at each hop is that the service must model the fluid model to within an error tolerance defined by A ff and B ff . A second type of real-time service, introduced in <ref> [6] </ref>, is 4 This is a slight generalization of their result, in that the error terms are more general. 5 We do not explain more fully what the fluid model is, nor how error tolerances are described by the parameters A ff and B ff , because it would take us
Reference: [7] <author> S. Deering. </author> <title> Multicast Routing in a Datagram Internet-work, </title> <type> Technical Report STAN-CS-92-1415, </type> <institution> Stanford University, </institution> <month> December </month> <year> 1991. </year>
Reference-contexts: the routers, enable applications to get the end-to-end service they desire? In particular, if an application desires a certain end-to-end delay bound, how do the appropriate per-link services get installed along the path to make sure this bound is met? This question is especially difficult in the context of multi-cast <ref> [7] </ref> flows, where there are many service requests (e.g., 2 Our language here is intentionally vague because some reservation protocols deliver the application's service request to each router unchanged, whereas other reservation protocols take the application service request and then do some computation on that request before delivering it to individual
Reference: [8] <author> A. Demers, S. Keshav, and S. Shenker. </author> <title> Analysis and Simulation of a Fair Queueing Algorithm, </title> <journal> In Journal of Internetworking: Research and Experience, </journal> <volume> 1, </volume> <pages> pp. 3-26, </pages> <year> 1990. </year> <booktitle> Also in Proc. ACM SIGCOMM '89, </booktitle> <pages> pp 3-12. </pages>
Reference-contexts: The way this bound is provisioned is not completely traditional; rather than providing a delay bound at each switch and then adding up the delays, we take advantage of the celebrated result due to Parekh and Gallager [21, 22, 23] on the weighted-fair-queueing (WFQ) scheduling algorithm <ref> [8] </ref>. The guaranteed service delivered to an individual application is parametrized by a rate r g (specified by the client) and error terms A and B (specified by the network).
Reference: [9] <author> D. Estrin, Y. Rekhter and S. Hotz. </author> <title> Scalable Inter-Domain Routing Architecture, </title> <booktitle> In Proceedings of ACM SIGCOMM '92, </booktitle> <month> August </month> <year> 1992. </year>
Reference-contexts: to support shared channels, might require RESV messages to include such a list of sources, at least when running on top of current multicast routing protocols [2]. 3.5 Interactions with Type-of-Service Routing There are several proposals for routing algorithms that can provide paths tailored for an application's service requirements; see <ref> [4, 9, 20] </ref> for a few representative references. These protocols offer an application a choice of path, and OPWA offers an application a choice of services along a path. How does OPWA interact with such routing algorithms? These routing algorithms choose routes based on a Quality-of-Route (QoR) request.
Reference: [10] <author> D. Estrin, S. Shenker, and D. Zappala. </author> <title> Routing Support for Resource Reservations, </title> <type> preprint, </type> <year> 1994. </year>
Reference-contexts: Thus, Type-of-Service routing and OPWA are complementary because they operate at rather different granulari-ties of service. Of course, there are many other interesting interactions between routing and reservation protocols; see <ref> [10] </ref> for a more extensive discussion. 3.6 Discussion The philosophy of OPWA is that receivers are given enough information so that they know the end-to-end service that would result from any per-link service request. This allows applications to make tradeoffs between "cost" and performance.
Reference: [11] <author> D. Ferrari. </author> <title> Distributed Delay Jitter Control in Packet-Switching Internetworks, </title> <journal> In Journal of Internetwork-ing: Research and Experience, </journal> <volume> 4, </volume> <pages> pp. 1-20, </pages> <year> 1993. </year>
Reference-contexts: 1 Introduction There are many proposed designs that make Internet-style packet-switched networks capable of supporting real-time applications (see <ref> [3, 6, 11, 12, 14, 18, 19, 21, 22, 23, 25] </ref> and references therein for a few representative examples). These proposals typically involve three main changes to the Internet architecture.
Reference: [12] <author> D. Ferrari, A. Banerjea, and H. Zhang. </author> <title> Network Support for Multimedia: a discussion of the Tenet approach, </title> <booktitle> In Computer Networks and ISDN Systems, </booktitle> <volume> 20, </volume> <pages> pp. 1267-1280, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction There are many proposed designs that make Internet-style packet-switched networks capable of supporting real-time applications (see <ref> [3, 6, 11, 12, 14, 18, 19, 21, 22, 23, 25] </ref> and references therein for a few representative examples). These proposals typically involve three main changes to the Internet architecture. <p> In practice, reservation requests might come from some generalized resource manager on the host rather than the application itself; for convenience we will just refer to applications as the entities controlling the endpoint reservation process. 3.1 Current Approaches There are many different reservation protocol designs (see, for example, <ref> [12, 13, 14, 18, 24, 28, 29] </ref>), and they differ in many important aspects. At a more abstract level, however, one can say that there are only two basic approaches to reservation establishment in the literature. The first is a one-pass mechanism, as represented by RSVP.
Reference: [13] <author> J. Forgie. </author> <title> ST A Proposed Internet Stream Protocol, Internet Experimental Notes IEN-119, </title> <month> September </month> <year> 1979. </year>
Reference-contexts: In practice, reservation requests might come from some generalized resource manager on the host rather than the application itself; for convenience we will just refer to applications as the entities controlling the endpoint reservation process. 3.1 Current Approaches There are many different reservation protocol designs (see, for example, <ref> [12, 13, 14, 18, 24, 28, 29] </ref>), and they differ in many important aspects. At a more abstract level, however, one can say that there are only two basic approaches to reservation establishment in the literature. The first is a one-pass mechanism, as represented by RSVP. <p> The first is a one-pass mechanism, as represented by RSVP. The second is a two-pass mechanism, as represented by the original Tenet design [1, 16] and by ST <ref> [13, 28] </ref>. We discuss these approaches separately, and in each case ask to what extent they can meet the end-to-end service needs of applications.
Reference: [14] <author> I. Gopal and R. Guerin. </author> <title> Network Transparency: The plaNET Approach, </title> <journal> In IEEE/ACM Transactions on Networking, </journal> <volume> 2(3), </volume> <pages> pp. 226-239, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction There are many proposed designs that make Internet-style packet-switched networks capable of supporting real-time applications (see <ref> [3, 6, 11, 12, 14, 18, 19, 21, 22, 23, 25] </ref> and references therein for a few representative examples). These proposals typically involve three main changes to the Internet architecture. <p> In practice, reservation requests might come from some generalized resource manager on the host rather than the application itself; for convenience we will just refer to applications as the entities controlling the endpoint reservation process. 3.1 Current Approaches There are many different reservation protocol designs (see, for example, <ref> [12, 13, 14, 18, 24, 28, 29] </ref>), and they differ in many important aspects. At a more abstract level, however, one can say that there are only two basic approaches to reservation establishment in the literature. The first is a one-pass mechanism, as represented by RSVP.
Reference: [15] <author> A. Gupta and M. Moran. </author> <title> Channel Groups: A Unifying abstraction for specifying inter-stream relationships, </title> <type> Technical Report TR-93-015, </type> <institution> International Computer Science Institute, </institution> <month> March </month> <year> 1993. </year>
Reference-contexts: This has two important implications for our discussion of reservation establishment. We do not go into the details here, but only give the following short description. The presence of multiple sources raises the issue of shared channels. As proposed in <ref> [15] </ref> and [29], a given reservation can be shared by the traffic streams from several sources. Shared channels take advantage of application level semantics to reduce the aggregate resources reserved.
Reference: [16] <author> A. Gupta, W. Howe, M. Moran, and Q. Nguyen. </author> <title> Resource sharing in multi-party realtime communication, </title> <booktitle> In Proceedings of IEEE Infocom '95. </booktitle>
Reference-contexts: At a more abstract level, however, one can say that there are only two basic approaches to reservation establishment in the literature. The first is a one-pass mechanism, as represented by RSVP. The second is a two-pass mechanism, as represented by the original Tenet design <ref> [1, 16] </ref> and by ST [13, 28]. We discuss these approaches separately, and in each case ask to what extent they can meet the end-to-end service needs of applications.
Reference: [17] <author> A. Gupta, </author> <title> private communication. </title>
Reference: [18] <author> J. Hyman, A. Lazar, and G. Pacifici. </author> <title> A Separation Principle Between Scheduling and Admission Control for Broadband Switching, </title> <journal> In IEEE JSAC, </journal> <volume> Vol. 11, No. 4, </volume> <pages> pp 605-616, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: 1 Introduction There are many proposed designs that make Internet-style packet-switched networks capable of supporting real-time applications (see <ref> [3, 6, 11, 12, 14, 18, 19, 21, 22, 23, 25] </ref> and references therein for a few representative examples). These proposals typically involve three main changes to the Internet architecture. <p> In practice, reservation requests might come from some generalized resource manager on the host rather than the application itself; for convenience we will just refer to applications as the entities controlling the endpoint reservation process. 3.1 Current Approaches There are many different reservation protocol designs (see, for example, <ref> [12, 13, 14, 18, 24, 28, 29] </ref>), and they differ in many important aspects. At a more abstract level, however, one can say that there are only two basic approaches to reservation establishment in the literature. The first is a one-pass mechanism, as represented by RSVP.
Reference: [19] <author> C. Kalmanek, H. Kanakia, and S. Keshav. </author> <title> Rate Controlled Servers for Very High-Speed Networks, </title> <booktitle> In Proceedings of GlobeCom '90, </booktitle> <pages> pp 300.3.1-300.3.9, </pages> <year> 1990. </year>
Reference-contexts: 1 Introduction There are many proposed designs that make Internet-style packet-switched networks capable of supporting real-time applications (see <ref> [3, 6, 11, 12, 14, 18, 19, 21, 22, 23, 25] </ref> and references therein for a few representative examples). These proposals typically involve three main changes to the Internet architecture.
Reference: [20] <author> J. Moy. </author> <note> OSPF Version 2, Internet RFC 1583, </note> <month> March </month> <year> 1994. </year>
Reference-contexts: to support shared channels, might require RESV messages to include such a list of sources, at least when running on top of current multicast routing protocols [2]. 3.5 Interactions with Type-of-Service Routing There are several proposals for routing algorithms that can provide paths tailored for an application's service requirements; see <ref> [4, 9, 20] </ref> for a few representative references. These protocols offer an application a choice of path, and OPWA offers an application a choice of services along a path. How does OPWA interact with such routing algorithms? These routing algorithms choose routes based on a Quality-of-Route (QoR) request.
Reference: [21] <author> A. Parekh and R. Gallager. </author> <title> A Generalized Processor Sharing Approach to Flow Control- The Single Node Case, </title> <journal> In IEEE/ACM Transactions on Networking, </journal> <volume> 1(3), </volume> <pages> pp. 344-357, </pages> <year> 1993. </year>
Reference-contexts: 1 Introduction There are many proposed designs that make Internet-style packet-switched networks capable of supporting real-time applications (see <ref> [3, 6, 11, 12, 14, 18, 19, 21, 22, 23, 25] </ref> and references therein for a few representative examples). These proposals typically involve three main changes to the Internet architecture. <p> As part of the reservation request, the application must specify its traffic characteristics to the network; we call this traffic specification the TSpec. To specify traffic we use the token bucket filter <ref> [6, 21] </ref>, which has two parameters: the token bucket rate r and the token bucket depth b. <p> The way this bound is provisioned is not completely traditional; rather than providing a delay bound at each switch and then adding up the delays, we take advantage of the celebrated result due to Parekh and Gallager <ref> [21, 22, 23] </ref> on the weighted-fair-queueing (WFQ) scheduling algorithm [8]. The guaranteed service delivered to an individual application is parametrized by a rate r g (specified by the client) and error terms A and B (specified by the network). <p> For a flow characterized by an (r; b) token bucket TSpec and a reserved rate r g , with r g r, the maximal packet delay, following <ref> [21, 22, 23] </ref>, is given by 4 b r g + A r g +B.
Reference: [22] <author> A. Parekh and R. Gallager. </author> <title> A Generalized Processor Sharing Approach to Flow Control- The Multiple Node Case, </title> <journal> In IEEE/ACM Transactions on Networking, </journal> <volume> 2(2), </volume> <pages> pp. 137-150, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction There are many proposed designs that make Internet-style packet-switched networks capable of supporting real-time applications (see <ref> [3, 6, 11, 12, 14, 18, 19, 21, 22, 23, 25] </ref> and references therein for a few representative examples). These proposals typically involve three main changes to the Internet architecture. <p> The way this bound is provisioned is not completely traditional; rather than providing a delay bound at each switch and then adding up the delays, we take advantage of the celebrated result due to Parekh and Gallager <ref> [21, 22, 23] </ref> on the weighted-fair-queueing (WFQ) scheduling algorithm [8]. The guaranteed service delivered to an individual application is parametrized by a rate r g (specified by the client) and error terms A and B (specified by the network). <p> For a flow characterized by an (r; b) token bucket TSpec and a reserved rate r g , with r g r, the maximal packet delay, following <ref> [21, 22, 23] </ref>, is given by 4 b r g + A r g +B.
Reference: [23] <author> A. Parekh. </author> <title> A Generalized Processor Sharing Approach to Flow Control in Integrated Services Networks, </title> <note> In Technical Report LIDS-TR-2089, </note> <institution> Laboratory for Information and Decision Systems, Massachusetts Institute of Technology, </institution> <year> 1992. </year>
Reference-contexts: 1 Introduction There are many proposed designs that make Internet-style packet-switched networks capable of supporting real-time applications (see <ref> [3, 6, 11, 12, 14, 18, 19, 21, 22, 23, 25] </ref> and references therein for a few representative examples). These proposals typically involve three main changes to the Internet architecture. <p> The way this bound is provisioned is not completely traditional; rather than providing a delay bound at each switch and then adding up the delays, we take advantage of the celebrated result due to Parekh and Gallager <ref> [21, 22, 23] </ref> on the weighted-fair-queueing (WFQ) scheduling algorithm [8]. The guaranteed service delivered to an individual application is parametrized by a rate r g (specified by the client) and error terms A and B (specified by the network). <p> For a flow characterized by an (r; b) token bucket TSpec and a reserved rate r g , with r g r, the maximal packet delay, following <ref> [21, 22, 23] </ref>, is given by 4 b r g + A r g +B.
Reference: [24] <author> H. Saran, S. Keshav, and C. Kalmanek. </author> <title> A Scheduling Discipline and Admission Control Policy for Xunet 2, </title> <address> NOSSDAV '93. </address>
Reference-contexts: In practice, reservation requests might come from some generalized resource manager on the host rather than the application itself; for convenience we will just refer to applications as the entities controlling the endpoint reservation process. 3.1 Current Approaches There are many different reservation protocol designs (see, for example, <ref> [12, 13, 14, 18, 24, 28, 29] </ref>), and they differ in many important aspects. At a more abstract level, however, one can say that there are only two basic approaches to reservation establishment in the literature. The first is a one-pass mechanism, as represented by RSVP.
Reference: [25] <author> S. Shenker, D. Clark, and L. Zhang. </author> <title> A Scheduling Service Model and a Scheduling Architecture for an Integrated Services Packet Network, </title> <type> preprint. </type>
Reference-contexts: 1 Introduction There are many proposed designs that make Internet-style packet-switched networks capable of supporting real-time applications (see <ref> [3, 6, 11, 12, 14, 18, 19, 21, 22, 23, 25] </ref> and references therein for a few representative examples). These proposals typically involve three main changes to the Internet architecture. <p> considered by two IETF working groups: the Integrated Services Working Group (for the service model) and the RSVP Working Group (for the reservation establishment protocol). reservations from different receivers. 2.1 Service Model and Router Requirements The service model we use for context is based on that described in [6] and <ref> [25] </ref>. We assume that the network offers three basic packet delivery services related to real-time applications, which we describe below. <p> This leads to the issue of heterogeneity we discuss in Section 4. 6 The choice of three levels is somewhat arbitrary, but there is a need for a standard number of levels. 7 Reference <ref> [25] </ref> refers to this as ASAP service. 2.2 Reservation Protocol We base our discussion of the resource reservation protocol on RSVP, which was introduced in [29] and is currently under discussion in the IETF (see [30] for a preliminary design specification).
Reference: [26] <author> S. Shenker. </author> <title> Fundamental Design Issues for the Future Internet, </title> <note> In IEEE JSAC, to appear. </note>
Reference-contexts: The views expressed here do not reflect the position or policy of the U.S. government. 1 It is important to note that not all proposals involve extending the service model. As discussed in <ref> [26] </ref>, one possible approach is merely to implement Fair Queuing in all switches and then put the onus on applications to be sufficiently adaptable.
Reference: [27] <author> S. Shenker. </author> <title> mail to int-serv@isi.edu mailing list, </title> <type> 11/4/1994. </type>
Reference-contexts: However, it is unrealistic to expect, in most circumstances, that these services will be uniformly and universally deployed. For instance, in the Internet context, the Internet Engineering Task Force (IETF) will likely define these services, but it will probably not mandate deployment of them (see <ref> [27] </ref>). That is, it will provide standards delineating what a router must do in order to claim to support specific services, such as guaranteed, predictive, and controlled delay. <p> See the archives of the Integrated Services Working Group, available for anonymous ftp on ftp.isi.edu, for a further discussion of this subject. In particular, see <ref> [27] </ref>. by an application should be modeled on the ideal of end--to-end connectivity of the requested service (i.e., the service that would be provided if all routers along the path offered the requested service), and (2) the network is responsible for informing the application the extent to which this is a
Reference: [28] <author> C. Topolcic. </author> <title> Experimental Internet Stream Protocol: </title> <type> Version 2 (ST-II), Internet RFC 1190, </type> <month> October, </month> <year> 1990. </year>
Reference-contexts: In practice, reservation requests might come from some generalized resource manager on the host rather than the application itself; for convenience we will just refer to applications as the entities controlling the endpoint reservation process. 3.1 Current Approaches There are many different reservation protocol designs (see, for example, <ref> [12, 13, 14, 18, 24, 28, 29] </ref>), and they differ in many important aspects. At a more abstract level, however, one can say that there are only two basic approaches to reservation establishment in the literature. The first is a one-pass mechanism, as represented by RSVP. <p> The first is a one-pass mechanism, as represented by RSVP. The second is a two-pass mechanism, as represented by the original Tenet design [1, 16] and by ST <ref> [13, 28] </ref>. We discuss these approaches separately, and in each case ask to what extent they can meet the end-to-end service needs of applications.
Reference: [29] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, and D. Zappala. RSVP: </author> <title> A New Resource ReSerVation Protocol, </title> <journal> IEEE Network Magazine, </journal> <month> September </month> <year> 1993. </year>
Reference-contexts: in Section 4. 6 The choice of three levels is somewhat arbitrary, but there is a need for a standard number of levels. 7 Reference [25] refers to this as ASAP service. 2.2 Reservation Protocol We base our discussion of the resource reservation protocol on RSVP, which was introduced in <ref> [29] </ref> and is currently under discussion in the IETF (see [30] for a preliminary design specification). This protocol was designed to support both unicast and multicast applications, and thus serves as a useful guide to our discussion. <p> This has two important implications for our discussion of reservation establishment. We do not go into the details here, but only give the following short description. The presence of multiple sources raises the issue of shared channels. As proposed in [15] and <ref> [29] </ref>, a given reservation can be shared by the traffic streams from several sources. Shared channels take advantage of application level semantics to reduce the aggregate resources reserved. <p> In practice, reservation requests might come from some generalized resource manager on the host rather than the application itself; for convenience we will just refer to applications as the entities controlling the endpoint reservation process. 3.1 Current Approaches There are many different reservation protocol designs (see, for example, <ref> [12, 13, 14, 18, 24, 28, 29] </ref>), and they differ in many important aspects. At a more abstract level, however, one can say that there are only two basic approaches to reservation establishment in the literature. The first is a one-pass mechanism, as represented by RSVP.
Reference: [30] <author> L. Zhang, R. Braden, D. Estrin, S. Herzog, and S. Jamin. </author> <title> Resource ReSerVation Protocol (RSVP) - Version 1 Functional Specification, RFC in preparation, </title> <year> 1995. </year>
Reference-contexts: somewhat arbitrary, but there is a need for a standard number of levels. 7 Reference [25] refers to this as ASAP service. 2.2 Reservation Protocol We base our discussion of the resource reservation protocol on RSVP, which was introduced in [29] and is currently under discussion in the IETF (see <ref> [30] </ref> for a preliminary design specification). This protocol was designed to support both unicast and multicast applications, and thus serves as a useful guide to our discussion. For our purposes in this paper, there are three basic design principles that are especially relevant.
References-found: 30

