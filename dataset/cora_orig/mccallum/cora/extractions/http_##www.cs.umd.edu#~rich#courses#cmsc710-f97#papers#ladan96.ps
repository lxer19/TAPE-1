URL: http://www.cs.umd.edu/~rich/courses/cmsc710-f97/papers/ladan96.ps
Refering-URL: http://www.cs.umd.edu/~rich/courses/cmsc710-f97/resources.html
Root-URL: 
Email: frich, ladang@cs.umd.edu  
Title: Experiments with Digital Video Playback  
Author: Richard Gerber and Ladan Gharai 
Keyword: Digital Video, Performance Analysis, Measurements, Experiment Construction, Operating Systems.  
Note: This research is supported in part by ONR grant N00014-94-10228, NSF grant CCR-9209333, and NSF Young Investigator Award CCR-9357850.  
Address: College Park, MD 20742  
Affiliation: Institute for Advanced Computer Studies Department of Computer Science University of Maryland  
Abstract: In this paper we describe our experiments on digital video applications, concentrating on the static and dynamic tradeoffs involved in video playback. Our results were extracted from a controlled series 272 tests, which we ran in three stages. In the first stage of 120 tests, we used a simple player-monitor tool to evaluate the effects of various static parameters: compression type, frame size, digitized rate, spatial quality and keyframe distribution. The tests were carried out on two Apple Macintosh platforms: at the lower end a Quadra 950, and at the higher end, a Power PC 7100/80. Our quantitative metrics included average playback rate, as well as the rate's variance over one-second intervals. The first set of experiments unveiled several anomalous latencies. To track them down we ran an additional 120 tests, from which we concluded that the video and IO operations were insufficiently tuned to each other. In the next step we attempted to correct this problem, by implementing our own video playback software and accompanying device-level handlers. Our emphasis was on achieving a controlled, deterministic coordination between the various system components. An additional set of 32 experiments were carried out on our platforms, which showed frame-rate increases of up to 325%, with associated reductions in rate variance. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Navin Chaddha, Gerard A.Wall, and Brian Schmidt. </author> <title> An End to End Software Only Scalable Video Delivery System. </title> <booktitle> In Proceedings of the Workshop on Network and Operating Systems for Digital Audio and Video (NOSSDAV 95), </booktitle> <year> 1995. </year>
Reference-contexts: One limitation is the exclusive reliance on the JPEG codec thus, the prefetch algorithm assumes that any frame may either be retrieved or dropped. This type of rate-based scaling is significantly more complicated when applied to codecs with inter-frame dependencies, such as Cinepak, MPEG, etc. The system described in <ref> [1] </ref> scales not only the rate, but also the spatial resolution of a video stream. This is done by packaging three versions of every frame, with each offering a monotonic improvement over the previous one.
Reference: [2] <author> Kevin Fall. </author> <title> A Peer-to-Peer I/O System in Support of I/O Intensive Workloads. </title> <type> PhD thesis, </type> <institution> University of California at San Diego, </institution> <year> 1994. </year>
Reference-contexts: At any point in the process the codec can stop improving the current frame, 6 and proceed to the next. Of course, this flexibility is achieved by using a custom codec, which was designed specifically for this purpose. Our focus on IO and data paths is echoed in <ref> [2, 3] </ref>, which proposes a means of optimizing the transmission of compressed videos. While a network may be able to transmit the video frames, the destination station may end up being the bottleneck.
Reference: [3] <author> Kevin Fall and Joseph Pasquale. </author> <title> Improving Continuous-Media Playback Performance with In-Kernel Data Paths. </title> <booktitle> In Proceedings of the First International IEEE Conference on Multimedia Computing and Systems, </booktitle> <pages> pages 100-109, </pages> <year> 1994. </year>
Reference-contexts: At any point in the process the codec can stop improving the current frame, 6 and proceed to the next. Of course, this flexibility is achieved by using a custom codec, which was designed specifically for this purpose. Our focus on IO and data paths is echoed in <ref> [2, 3] </ref>, which proposes a means of optimizing the transmission of compressed videos. While a network may be able to transmit the video frames, the destination station may end up being the bottleneck.
Reference: [4] <author> D.James Gemmell, Harrick M.Vin, Dilip D.Kandlur, P.Venkat Rangan, and Lawrence A.Rowe. </author> <title> Multimedia Storage Servers: A tutorial. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 40-49, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: Moreover, both algorithms can support a number of concurrent streams, and both have reasonable response times for aperiodic requests. Another technique, the Group Sweeping Scheme <ref> [4] </ref>, is a hybrid of round-robin and SCAN. A number of "groups" are scheduled via round-robin, whereas within each group the SCAN algorithm is used. <p> But there is an obvious relationship between disk scheduling and placement, and placement is an area where the multimedia system designer can have an immediate effect. The trade-offs are enunciated in <ref> [4] </ref>: contiguous placement is optimal for most disk-schedulers, but it requires allocating a huge "chunk" of consecutive tracks to each file. This policy is only manageable for read-only files, and it can introduce significant external fragmentation.
Reference: [5] <author> Howard P. Katseff and Bethany S.Robinson. </author> <title> Predictive Prefetch in the Nemesis Multimedia Information Service. </title> <booktitle> In ACM Multimedia Proceedings, </booktitle> <pages> pages 201-209, </pages> <year> 1993. </year>
Reference-contexts: If this is done properly, the radical oscillations seen in Figure 1 (3) should not occur, and ideally R 2 (e) will be close to zero. This is the approach taken in the the Nemesis <ref> [5] </ref> project, which uses a predictive prefetch algorithm to scale a client's input streams. One limitation is the exclusive reliance on the JPEG codec thus, the prefetch algorithm assumes that any frame may either be retrieved or dropped.
Reference: [6] <author> Gregory K.Wallace. </author> <title> The JPEG Still Picture Compression Standard. </title> <journal> Communications of the ACM, </journal> <volume> 34(4), </volume> <month> April </month> <year> 1991. </year>
Reference-contexts: Our test instances have labels like "C/30/3/ 1 2 /75," which denotes a movie re-digitized in the Cinepak codec at 30 fps, with one keyframe every third frame, in a frame size of 320x160 with a 75% quality index. Codecs and Keyframes. JPEG <ref> [6] </ref> is basically a compression standard for still-pictures, which can produce nearly lossless digital copies. It turned out to be a poor performer at playback time, and we used it as our "high watermark" for image quality, while simultaneously as a "low watermark" for motion quality.
Reference: [7] <author> A.L. Narasimha Reddy and James C.Wyllie. </author> <title> IO Issues in a Multimedia System. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 69-74, </pages> <month> March </month> <year> 1994. </year>
Reference-contexts: Two additional playback-enhancing techniques concentrate on optimizing disk performance; these are disk scheduling and block placement. Simulation studies conducted in <ref> [7] </ref> show that good performance for single streams can be realized by both CSCAN and SCAN-EDF ahybrid of the traditional SCAN technique, and the "earliest-deadline-first" strategy used in real-time thread schedulers. Moreover, both algorithms can support a number of concurrent streams, and both have reasonable response times for aperiodic requests.
Reference: [8] <author> Donald L. Stone and Kevin Jeffay. </author> <title> An Empirical Study of Delay Jitter Management Policies. </title> <journal> Multimedia Systems, </journal> <volume> 2(6) </volume> <pages> 267-279, </pages> <year> 1995. </year>
Reference-contexts: Nonetheless, some recent papers touch on many of the same issues we raise in our experiments, and they come to some similar conclusions. Stone and Jeffay's study of delay and jitter management <ref> [8] </ref> is highly relevant to our work on dynamic tuning. As they note, a network's display latency effectively determines client's frame rate, and that latency is, for obvious reasons, inversely proportional to permissible display rates.
Reference: [9] <author> Toshiyuki Urabe, Hassan Afzal, Grace Ho, and Pramod Pancha Magda El Zarki. MPEGTool: </author> <title> an X Window-Based MPEG Encoder and Statistics Tool. </title> <journal> Multimedia Systems, </journal> <volume> 1 </volume> <pages> 220-229, </pages> <year> 1994. </year> <month> 23 </month>
Reference-contexts: We first de-fragment the entire file system, and then we optimize each file into single chunks of contiguous blocks. Finally, the abilities of our player-monitor are similar to that described in <ref> [9] </ref>, where MPEG-encoded video streams can be generated expressly for providing statistical information on the data, such as distribution of ATM cells per frame, auto-correlation and cell inter-arrival times. 7 3 Experiment Construction and Variable Instantiation In this section we provide an overview of the methods used in constructing our test
References-found: 9

