URL: ftp://ftp.eecs.umich.edu/people/wellman/aiedam95.ps.Z
Refering-URL: http://ai.eecs.umich.edu/people/wellman/Publications.html
Root-URL: http://www.cs.umich.edu
Email: wellman@engin.umich.edu  
Title: A Computational Market Model for Distributed Configuration Design  
Author: Michael P. Wellman 
Address: 1101 Beal Avenue Ann Arbor, MI 48109-2110  
Affiliation: University of Michigan, AI Laboratory  
Note: To appear in AI EDAM 1995.  
Abstract: This paper presents a precise market model for a well-defined class of distributed configuration design problems. Given a design problem, the model defines a computational economy to allocate basic resources to agents participating in the design. The result of running these design economies constitutes the market solution to the original problem. After defining the configuration design framework, I describe the mapping to computational economies and our results to date. For some simple examples, the system can produce good designs relatively quickly. However, analysis shows that the design economies are not guaranteed to find optimal designs, and we identify and discuss some of the major pitfalls. Despite known shortcomings and limited explorations thus far, the market model offers a useful conceptual viewpoint for analyzing distributed design problems. 
Abstract-found: 1
Intro-found: 1
Reference: <editor> Arrow, K. J., and L. Hurwicz, Ed. </editor> <year> (1977). </year> <title> Studies in Resource Allocation Processes. </title> <publisher> Cambridge, Cambridge University Press. </publisher>
Reference: <author> Balkany, A., W. P. Birmingham, and I. D. </author> <month> Tommelein </month> <year> (1993). </year> <title> An analysis of several configuration design systems. </title> <booktitle> AI EDAM 7: </booktitle> <pages> 1-17. </pages>
Reference-contexts: Distributed Configuration Design We adopt a standard framework for configuration design (Mittal and Frayman 1989). Our specific formulation follows (Darr and Birmingham 1994) , and covers many representative systems <ref> (Balkany et al. 1993) </ref>. Design in this framework corresponds to selection of parts to perform functions . More precisely, a design problem consists of: Version of April 6, 1995. 3 A set of attributes, A 1 ,, A n , and their associated domains, X 1 ,, X n .
Reference: <author> Bowen, J., and D. </author> <month> Bahler </month> <year> (1993). </year> <title> Constraint-based software for concurrent engineering. </title> <booktitle> Computer 26(1): </booktitle> <pages> 66-68. </pages>
Reference-contexts: We are also exploring combinations of market-based and constraint-based methods, where we use general constraints (including those inexpressible in the market model) to prune the catalogs before running the design economy. This might be accomplished using an auxiliary constraint network <ref> (Bowen and Bahler 1993) </ref>, or one built on the existing agent structure (Darr and Birmingham 1994) . A hybrid approach interleaving market-directed search for good designs with constraint reasoning uses each method to compensate for inadequacies in the other.
Reference: <author> Cheriton, D. R., and K. </author> <month> Harty </month> <year> (1993). </year> <title> A market approach to operating system memory allocation. </title> <institution> Stanford University Department of Computer Science. </institution> <note> Version of April 6, 1995. 17 Clearwater, </note> <editor> S, Ed. </editor> <year> (1995). </year> <title> Market-Based Control: A Paradigm for Distributed Resource Allocation. </title> <publisher> World Scientific. </publisher>
Reference: <author> Cutkosky, M. R., R. S. Englemore, R. E. Fikes, et al. </author> <year> (1993). </year> <title> PACT: An experiment in integrating concurrent engineering systems. </title> <booktitle> Computer 26(1): </booktitle> <pages> 28-37. </pages>
Reference: <author> Darr, T. P., and W. P. </author> <title> Birmingham (1994). An AttributeSpace Representation and Algorithm for Concurrent Engineering. </title> <institution> University of Michigan. </institution> <note> Revised version to appear in IEEE Expert </note> . 
Reference-contexts: Distributed Configuration Design We adopt a standard framework for configuration design (Mittal and Frayman 1989). Our specific formulation follows <ref> (Darr and Birmingham 1994) </ref> , and covers many representative systems (Balkany et al. 1993). Design in this framework corresponds to selection of parts to perform functions . <p> The remaining steps are to identify the agents and define their behavior. As mentioned above, it is typical in multiagent design to allocate individual agents responsibility for distinct components or functions. Within our distributed design scheme, these agents correspond to catalogs. In a distributed constraintsatisfaction formulation of the problem <ref> (Darr and Birmingham 1994) </ref> , catalog agents select a part to contribute to the overall design. The chosen part entails a particular pattern of resource usage and performance, as specified in its associated attribute vector. <p> There may be some encoding tricks to get around this restriction in some cases, but the basic design economy assumes this property. 3.3. An Example To illustrate the mapping from configuration design problems to design economies, we carry out the exercise for an example presented by <ref> (Darr and Birmingham 1994) </ref>. The problem is a very simplified computer configuration design. In the example, we have two functions to satisfy: processing , and serial port . Our design criteria are dollar cost and reliability, as measured in failures-per-million-hours (fpmh ). <p> This might be accomplished using an auxiliary constraint network (Bowen and Bahler 1993), or one built on the existing agent structure <ref> (Darr and Birmingham 1994) </ref> . A hybrid approach interleaving market-directed search for good designs with constraint reasoning uses each method to compensate for inadequacies in the other. Another specific modification to the underlying model we are exploring is to maintain intervals on prices rather than specific points.
Reference: <author> Davis, R., and R. G. </author> <title> Smith (1983). Negotiation as a Metaphor for Distributed Problem Solving. </title> <booktitle> Artificial Intelligence 20: </booktitle> <pages> 63-109. </pages>
Reference-contexts: Related Work In addition to my own prior work in market-oriented programming (Wellman 1993; Wellman 1995) , there have been several other efforts to exploit markets for distributed computation (Clearwater 1995). Most famous in AI is the contract net <ref> (Davis and Smith 1983) </ref> , but it is only recently that true economic mechanisms have been incorporated in that framework (Sandholm 1993) .
Reference: <author> Drexler, K. E., and M. S. </author> <title> Miller (1988). Incentive engineering for computational resource management. The Ecology of Computation Ed. </title> <editor> B. A. Huberman. </editor> <publisher> North-Holland. </publisher> <pages> 231-266. </pages>
Reference: <author> Edmonds, E. A., L. Candy, R. Jones, et al. </author> <year> (1994). </year> <title> Support for collaborative design: Agents and emergence. </title> <journal> Communications of the ACM 37(7): </journal> <pages> 41-47. </pages>
Reference: <author> Etzioni, O., and D. </author> <title> Weld (1994). A softbot-based interface to the internet. </title> <journal> Communications of the ACM 37(7): </journal> <pages> 72-76. </pages>
Reference-contexts: 1. Introduction The current dramatic expansion in network technology and infrastructure, including the explosive growth of the internet, will soon see an inevitable proliferation of automated, distributed, information agents (for example, of the sort described by <ref> (Etzioni and Weld 1994) </ref> ). With these advances, opportunities and incentives for the decentralization of design activities are rapidly emerging. Computational support for distributed design collaboration presents a variety of new challenges (Cutkosky et al. 1993; Edmonds et al. 1994; Reddy et al. 1993).
Reference: <author> Genesereth, M. R., and S. P. </author> <month> Ketchpel </month> <year> (1994). </year> <title> Software agents. </title> <journal> Communications of the ACM 37(7): </journal> <pages> 48-53. </pages>
Reference: <author> Hildenbrand, W., and A. P. </author> <month> Kirman </month> <year> (1976). </year> <title> Introduction to Equilibrium Analysis: Variations on Themes by Edgeworth and Walras. </title> <publisher> Amsterdam, North-Holland Publishing Company. </publisher>
Reference: <author> Huberman, B. A., Ed. </author> <year> (1988). </year> <title> The Ecology of Computation. </title> <publisher> North-Holland. </publisher>
Reference-contexts: Where Shoham defines a set of interactions based on speech acts, we focus exclusively on the economic actions such as exchange and production. In both approaches (as well as some others <ref> (Huberman 1988) </ref>), the underlying idea is to get an improved understanding of a complex computational system via social constructs. Finally, there is a large literature on decomposition methods for mathematical programming problems, which could perhaps be applied to distributed design.
Reference: <author> Koopmans, T. C. </author> <year> (1970). </year> <title> Uses of prices. Scientific Papers of Tjalling C. </title> <editor> Koopmans Ed. </editor> . <publisher> Springer-Verlag. </publisher> <pages> 243-257. </pages>
Reference-contexts: Because prices are a very compact way to convey this incentive information to each agent, we can argue that price systems also satisfy C <ref> (Koopmans 1970) </ref> . For these reasons, some have found the market economy an inspiring social metaphor for approaches to coordinating distributed computational agents. Thus, we sometimes see mechanisms and protocols appealing to notions of negotiation, bidding, or other economic behavior.
Reference: <author> Kurose, J. F., and R. </author> <month> Simha </month> <year> (1989). </year> <title> A microeconomic approach to optimal resource allocation in distributed computer systems. </title> <journal> IEEE Transactions on Computers 38: </journal> <pages> 705-717. </pages>
Reference: <author> Milgrom, P., and J. </author> <title> Roberts (1991). Adaptive and sophisticated learning in normal form games. </title> <booktitle> Games and Economic Behavior 3: </booktitle> <pages> 82-100. </pages>
Reference: <author> Miller, M. S., and K. E. </author> <title> Drexler (1988). Markets and Computation: Agoric Open Systems. The Ecology of Computation Ed. </title> <editor> B. A. Huberman. </editor> <publisher> North-Holland. </publisher> <pages> 133-176. </pages>
Reference: <author> Mittal, S., and F. </author> <month> Frayman </month> <year> (1989). </year> <title> Towards a generic model of configuration tasks. </title> <booktitle> Proceedings of the Eleventh International Joint Conference on Artificial Intelligence , Detroit, </booktitle> <address> MI, </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Distributed Configuration Design We adopt a standard framework for configuration design <ref> (Mittal and Frayman 1989) </ref>. Our specific formulation follows (Darr and Birmingham 1994) , and covers many representative systems (Balkany et al. 1993). Design in this framework corresponds to selection of parts to perform functions .
Reference: <author> Newell, A. </author> <year> (1982). </year> <title> The Knowledge Level. </title> <booktitle> Artificial Intelligence 18: </booktitle> <pages> 87-127. </pages> <note> 18 Version of April 6, </note> <year> 1995. </year>
Reference-contexts: This approach is highly congruent with much work in Artificial Intelligence, where we attempt to characterize an agents behavior in terms of its knowledge and goals (or more generally, beliefs, desires, and intentions). Indeed, this knowledge level analysis requires some kind of rationality abstraction <ref> (Newell 1982) </ref> , and is perhaps even implicit in our usage of the term agent . Decentralization . The central concern of economics is to relate decentralized, individual decisions to aggregate behavior of the overall society. This is also the concern of Distributed AI as a computational science. 5.2.
Reference: <author> Reddy, Y. V. R., K. Srinivas, V. Jagannathan, et al. </author> <year> (1993). </year> <title> Computer support for concurrent engineering. </title> <booktitle> Computer 26(1): </booktitle> <pages> 12-16. </pages>
Reference: <author> Sandholm, T. </author> <year> (1993). </year> <title> An implementation of the contract net protocol based on marginal cost calculations. </title> <booktitle> Proceedings of the National Conference on Artificial Intelligence, </booktitle> <address> Washington, DC, </address> <publisher> AAAI Press. </publisher>
Reference-contexts: Most famous in AI is the contract net (Davis and Smith 1983) , but it is only recently that true economic mechanisms have been incorporated in that framework <ref> (Sandholm 1993) </ref> .
Reference: <author> Shoham, Y. </author> <year> (1993). </year> <title> Agent-Oriented Programming. </title> <booktitle> Artificial Intelligence 60: </booktitle> <pages> 51-92. </pages>
Reference-contexts: However, there are no other fully computational market models for distributed design of which we are aware. This approach also shares some conceptual features with other agent-based frameworks for distributed computing (Genesereth and Ketchpel 1994; Wiederhold 1992) , particularly Shohams approach to agent-oriented programming <ref> (Shoham 1993) </ref>. Where Shoham defines a set of interactions based on speech acts, we focus exclusively on the economic actions such as exchange and production.
Reference: <author> Shoven, J. B., and J. </author> <title> Whalley (1992). </title> <publisher> Applying General Equilibrium . Cambridge University Press. </publisher>
Reference: <author> Varian, H. R. </author> <year> (1984). </year> <title> Microeconomic Analysis. </title> <address> New York, </address> <publisher> W. W. Norton & Company. </publisher>
Reference-contexts: Given certain technical restrictions on the producer technologies and consumer preferences, equilibrium is guaranteed to exist and the system converges to it. Specifically, if technologies and preferences are smooth and strictly convex, then a competitive equilibrium exists (see <ref> (Varian 1984) </ref> for formal treatment). <p> The consumers problem is to set demands maximizing utility, subject to the budget constraint. This defines a constrained optimization problem, parametrized by current going prices. In our example, we adopt a standard special functional form for utility, one exhibiting constant elasticity of substitution (CES) <ref> (Varian 1984) </ref> . The CES utility function is u x 1 ,, x n ( ) = a i x i i=1 , where the a i are good coefficients and r is a generic substitution parameter.
Reference: <author> Waldspurger, C. A., T. Hogg, B. A. Huberman, et al. </author> <year> (1992). </year> <title> Spawn: A distributed computational economy. </title> <journal> IEEE Transactions on Software Engineering 18: </journal> <pages> 103-117. </pages>
Reference: <author> Wellman, M. P. </author> <year> (1993). </year> <title> A market-oriented programming environment and its application to distributed multicommodity flow problems. </title> <journal> Journal of Artificial Intelligence Research 1(1): </journal> <pages> 1-23. </pages>
Reference-contexts: Given a design problem, our model defines a computational economy to solve the design problem, expressed in terms of concepts from microeconomic theory. We can then implement these economies in our WALRAS system for market-oriented programming <ref> (Wellman 1993) </ref> , thus producing a runnable design economy. The following sections describe the configuration design framework, the mapping to computational economies, and preliminary results. For some simple examples, the system can produce good designs relatively quickly. <p> Since the markets for the goods are interconnected (due to interactions in both production and consumption), the price for one good will generally affect the demand and supply for others. W ALRAS adjusts the prices via an iterative bidding protocol, until the system reaches a competitive equilibrium (see <ref> (Wellman 1993) </ref> for details), i.e., an allocation and set of prices such that (1) consumers bid so to maximize utility, subject to their budget constraints, (2)producers bid so to maximize profits, subject to their technological possibilities, and (3)net demand is zero for all goods.
Reference: <author> Wellman, M. P. </author> <year> (1995). </year> <title> Market-oriented programming: Some early lessons. Market-Based Control: A Paradigm for Distributed Resource Allocation , Ed. </title> <editor> S. Clearwater. </editor> <publisher> World Scientific. </publisher>
Reference: <author> Wiederhold, G. </author> <year> (1992). </year> <booktitle> Mediators in the architecture of future information systems. Computer 26(3): </booktitle> <pages> 38-49. </pages>
References-found: 28

