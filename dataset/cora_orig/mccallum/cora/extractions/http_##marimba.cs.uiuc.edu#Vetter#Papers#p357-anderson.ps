URL: http://marimba.cs.uiuc.edu/Vetter/Papers/p357-anderson.ps
Refering-URL: http://marimba.cs.uiuc.edu/Vetter/seminar.htm
Root-URL: http://www.cs.uiuc.edu
Title: Continuous Profiling: Where Have All the Cycles Gone?  
Author: JENNIFER M. ANDERSON, LANCE M. BERC, JEFFREY DEAN, SANJAY GHEMAWAT, MONIKA R. HENZINGER, SHUNTAK A. LEUNG, RICHARD L. SITES, MARK T. VANDEVOORDE, CARL A. WALDSPURGER, and WILLIAM E. WEIHL 
Keyword: Categories and Subject Descriptors: C.4 [Computer Systems Organization]: Performance of Systems; D.2.2 [Software Engineering]: Tools and Techniquesprofiling tools; D.2.6 [Programming Languages]: Programming Environmentsperformance monitoring; D.4 [Operating Systems]: General; D.4.7 [Operating Systems]: Organization and Design; D.4.8 [Operating Systems]: Performance General Terms: Performance Additional Key Words and Phrases: Profiling, performance understanding, program analysis, performance-monitoring hardware  
Note: ACM Transactions on Computer Systems, Vol. 15, No. 4, November 1997, Pages 357-390.  
Affiliation: Digital Equipment Corporation  
Abstract: This article describes the Digital Continuous Profiling Infrastructure, a sampling-based profiling system designed to run continuously on production systems. The system supports multiprocessors, works on unmodified executables, and collects profiles for entire systems, including user programs, shared libraries, and the operating system kernel. Samples are collected at a high rate (over 5200 samples/sec. per 333MHz processor), yet with low overhead (1-3% slowdown for most workloads). Analysis tools supplied with the profiling system use the sample data to produce a precise and accurate accounting, down to the level of pipeline stalls incurred by individual instructions, of where time is being spent. When instructions incur stalls, the tools identify possible reasons, such as cache misses, branch mispredictions, and functional unit contention. The fine-grained instruction-level analysis guides users and automated optimizers to the causes of performance problems and provides important insights for fixing them. An earlier version of this article appeared at the 16th ACM Symposium on Operating System Principles (SOSP), St. Malo, France, Oct., 1997. Authors' addresses: J. M. Anderson and J. Dean, Digital Equipment Corp., Western Research Laboratory, 250 University Avenue, Palo Alto, CA 94301; email: -jennifer; jdean-@pa.dec.com; L. M. Berc, S. Ghemawat, M. R. Henzinger, S.-T. A. Leung, M. T. Vandevoorde, C. A. Waldspurger, and W. E. Weihl, Digital Equipment Corp., Systems Research Center, 130 Lytton Avenue, Palo Alto, CA 94301; email: berc; sanjay; monika; sleung; mtv; caw; weihl-@pa.dec.com; R. L. Sites, Adobe Systems Incorporated, 345 Park Avenue, San Jose, CA 95110-2704; email: dsites@adobe.com. Permission to make digital / hard copy of part or all of this work for personal or classroom use is granted without fee provided that the copies are not made or distributed for profit or commercial advantage, the copyright notice, the title of the publication, and its date appear, and notice is given that copying is by permission of the ACM, Inc. To copy otherwise, to republish, to post on servers, or to redistribute to lists, requires prior specific permission and / or a fee. 
Abstract-found: 1
Intro-found: 1
Reference: <author> ANDERSON, T. E. AND LAZOWSKA, E. D. </author> <year> 1990. </year> <title> Quartz: A tool for tuning parallel program performance. </title> <booktitle> In Proceedings of the ACM SIGMETRICS 1990 Conference on Measurement and Modeling of Computer Systems. ACM, </booktitle> <address> New York, </address> <pages> 115-125. </pages>
Reference: <author> BALL, T. AND LARUS, J. </author> <year> 1994. </year> <title> Optimally profiling and tracing programs. </title> <journal> ACM Trans. Program. Lang. Syst. </journal> <volume> 16, </volume> <month> 4 (July), </month> <note> 1319 -1360. </note>
Reference: <author> BLICKSTEIN, D., CRAIG, P., DAVIDSON, C., FAIMAN, R., GLOSSOP, K., GROVE, R., HOBBS, S., AND NOYCE, W. </author> <year> 1992. </year> <title> The GEM optimizing compiler system. Digital Tech. </title> <journal> J. </journal> <volume> 4, </volume> <pages> 4. </pages>
Reference: <author> CARTA, D. </author> <year> 1990. </year> <title> Two fast implementations of the minimal standard random number generator. </title> <journal> Commun. ACM 33, </journal> <volume> 1 (Jan.), 87- 88. </volume>
Reference: <author> COHN, R. AND LOWNEY, P. G. </author> <year> 1996. </year> <title> Hot cold optimization of large Windows/NT applications. </title> <booktitle> In 29th Annual International Symposium on Microarchitecture (Micro-29) (Paris, </booktitle> <address> France, Dec.). </address>
Reference: <author> COHN, R., GOODWIN, D., LOWNEY, P. G., AND RUBIN, N. </author> <year> 1997. </year> <title> Spike: An optimizer for Alpha/NT executables. In USENIX Windows NT Workshop. </title> <institution> USENIX Assoc., Berkeley, Calif. DIGITAL. </institution> <year> 1995a. </year> <title> Alpha 21164 microprocessor hardware reference manual. </title> <institution> Digital Equipment Corp., Maynard, Mass. DIGITAL. </institution> <year> 1995b. </year> <title> DECchip 21064 and DECchip 21064A Alpha AXP microprocessors hardware reference manual. </title> <institution> Digital Equipment Corp., Maynard, </institution> <address> Mass. </address>
Reference: <author> GOLDBERG, A. J. AND HENNESSY, J. L. </author> <year> 1993. </year> <title> MTOOL: An integrated system for performance debugging shared memory multiprocessor applications. </title> <journal> IEEE Trans. Parallel Distrib. Syst. </journal> <volume> 28 - 40. </volume>
Reference: <author> GRAHAM, S., KESSLER, P., AND MCKUSICK, M. </author> <year> 1982. </year> <title> gprof: A call graph execution profiler. </title> <journal> SIGPLAN Not. </journal> <volume> 17, </volume> <month> 6 (June), </month> <note> 120 -126. </note>
Reference: <author> HALL, M., ANDERSON, J., AMARASINGHE, S., MURPHY, B., LIAO, S.-W., BUGNION, E., AND LAM, M. </author> <year> 1996. </year> <title> Maximizing multiprocessor performance with the SUIF compiler. </title> <journal> IEEE Comput. </journal> <volume> 29, 12 (Dec.), 84 - 89. </volume>
Reference: <author> JOHNSON, R., PEARSON, D., AND PINGALI, K. </author> <year> 1994. </year> <title> The program structure tree: Computing control regions in linear time. </title> <booktitle> In Proceedings of the ACM SIGPLAN '94 Conference on Programming Language Design and Implementation. ACM, </booktitle> <address> New York, </address> <pages> 171-185. </pages>
Reference: <author> MCCALPIN, J. D. </author> <year> 1995. </year> <title> Memory bandwidth and machine balance in high performance computers. </title> <journal> IEEE Tech. Comm. Comput. Arch. </journal> <note> Newslett. See also http://www.cs.virginia.edu/ stream. Continuous Profiling 389 ACM Transactions on Computer Systems, Vol. 15, No. 4, </note> <month> November </month> <year> 1997. </year> <note> MIPS. 1990. UMIPS-V reference manual (pixie and pixstats). </note> <institution> MIPS Computer Systems, Sunnyvale, Calif. </institution>
Reference: <author> REISER, J. F. AND SKUDLAREK, J. P. </author> <year> 1994. </year> <title> Program profiling problems, and a solution via machine language rewriting. </title> <journal> SIGPLAN Not. </journal> <volume> 29, </volume> <month> 1 (Jan.), </month> <note> 37- 45. </note>
Reference: <author> ROSENBLUM, M., HERROD, S., WITCHEL, E., AND GUPTA, A. </author> <year> 1995. </year> <title> Complete computer simulation: The SimOS approach. IEEE Parallel Distrib. </title> <type> Tech. 3, 3 (Fall). </type>
Reference: <author> SITES, R. AND WITEK, R. </author> <year> 1995. </year> <title> Alpha AXP architecture reference manual. </title> <publisher> Digital Press, </publisher> <address> Newton, Mass. </address>
Reference: <author> ZAGHA, M., LARSON, B., TURNER, S., AND ITZKOWITZ, M. </author> <year> 1996. </year> <title> Performance analysis using the MIPS R10000 performance counters. </title> <booktitle> In Proceedings of Supercomputing. </booktitle>
Reference: <author> ZHANG, X., WANG, Z., GLOY, N., CHEN, J. B., AND SMITH, M. D. </author> <year> 1997. </year> <title> Operating system support for automated profiling and optimization. </title> <booktitle> In Proceedings of the 16th ACM Symposium on Operating Systems Principles. ACM, </booktitle> <address> New York. </address> <note> Received July 1997; revised September 1997; accepted September 1997 390 Jennifer M. </note> <editor> Anderson et al. </editor> <booktitle> ACM Transactions on Computer Systems, </booktitle> <volume> Vol. 15, No. 4, </volume> <month> November </month> <year> 1997. </year>
References-found: 16

