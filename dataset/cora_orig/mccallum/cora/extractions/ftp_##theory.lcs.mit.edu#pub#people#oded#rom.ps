URL: ftp://theory.lcs.mit.edu/pub/people/oded/rom.ps
Refering-URL: http://theory.lcs.mit.edu/~oded/rom.html
Root-URL: 
Email: E-mail: canetti@watson.ibm.com  E-mail: oded@wisdom.weizmann.ac.il.  E-mail: shaih@watson.ibm.com  
Title: The Random Oracle Methodology, Revisited (preliminary version)  
Author: Ran Canetti Oded Goldreich Shai Halevi 
Keyword: Cryptography (Encryption and Signature Schemes) and Complexity Theory (use of CS-Proofs).  
Note: Work done while visiting LCS, MIT. Partially supported by DARPA grant DABT63 96-C-0018.  
Address: P.O. Box 704, Yorktown Height, NY 10598, USA.  Rehovot, Israel.  P.O. Box 704, Yorktown Height, NY 10598, USA.  
Affiliation: IBM Watson,  Department of Computer Science, Weizmann Institute of Science,  IBM Watson,  
Date: March 31, 1998  
Abstract: We take a formal look at the relationship between the security of cryptographic schemes in the Random Oracle Model, and the security of the schemes which result from implementing the random oracle by so called "cryptographic hash functions". The main result of this paper is a negative one: There exist signature and encryption schemes which are secure in the Random Oracle Model, but for which any implementation of the random oracle results in insecure schemes. In the process of devising the above schemes, we consider possible definitions for the notion of a "good implementation" of a random oracle, pointing out limitations and challenges. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Bellare and P. Rogaway. </author> <title> Random Oracles are Practical: a Paradigm for Designing Efficient Protocols. </title> <booktitle> In 1st Conf. on Computer and Communications Security, ACM, </booktitle> <pages> pages 62-73, </pages> <year> 1993. </year>
Reference-contexts: Thus, one obtains an implementation of the ideal system in a "real-world" where random oracles do not exist. This methodology, explicitly formulated by Bellare and Rogaway <ref> [1] </ref> and hereafter referred to as the random oracle methodology, has been used in many works (see, for example, [7, 20, 11, 17, 1, 15, 2, 18]). Although the random oracle methodology seems to be useful in practice, it is unclear how to put this methodology on firm grounds. <p> Thus, one obtains an implementation of the ideal system in a "real-world" where random oracles do not exist. This methodology, explicitly formulated by Bellare and Rogaway [1] and hereafter referred to as the random oracle methodology, has been used in many works (see, for example, <ref> [7, 20, 11, 17, 1, 15, 2, 18] </ref>). Although the random oracle methodology seems to be useful in practice, it is unclear how to put this methodology on firm grounds. <p> failure of the Random Oracle Methodology Upon formulating the random oracle methodology, Bellare and Rogaway did warn that a proof of security in the Random Oracle Model should not be taken as guarantee to the security of implementations (in which the Random Oracle is replaced by functions such as MD5) <ref> [1] </ref>. However, it is widely believed that a security proof in the Random Oracle Model means that there are no "structural flaws" in the scheme.
Reference: [2] <author> M. Bellare and P. Rogaway. </author> <title> The Exact Security of Digital Signatures: How to Sign with RSA and Rabin. In EuroCrypt96, </title> <publisher> Springer LNCS (Vol. </publisher> <pages> 1070), pages 399-416. </pages>
Reference-contexts: Thus, one obtains an implementation of the ideal system in a "real-world" where random oracles do not exist. This methodology, explicitly formulated by Bellare and Rogaway [1] and hereafter referred to as the random oracle methodology, has been used in many works (see, for example, <ref> [7, 20, 11, 17, 1, 15, 2, 18] </ref>). Although the random oracle methodology seems to be useful in practice, it is unclear how to put this methodology on firm grounds.
Reference: [3] <author> M. Blum and S. Micali. </author> <title> How to Generate Cryptographically Strong Sequences of PseudoRandom Bits. </title> <journal> SICOMP, </journal> <volume> Vol. 13, </volume> <pages> pages 850-864, </pages> <year> 1984. </year> <note> Preliminary version in 23rd FOCS, </note> <year> 1982. </year>
Reference-contexts: Specifically, we argue that the traditional approach of providing a single robust definition which supports a wide range of applications is bound to fail. That is, one should not expect to see definitions such as of pseudorandom generators <ref> [3, 21] </ref> (or functions [8]), and general results of the type saying that these can be used in any application in which parties are restricted merely by computing resources. <p> In this case no computational assumptions are needed since shared-key encryption is implied by one-way functions <ref> [3, 12, 8] </ref>, and the later exist in the Random Oracle Model. 14 seed s can generate a plaintext msg (resp., a ciphertext c) which satisfies the condition in Item 2 of the encryption algorithm (resp., the condition in Item 3 of the decryption algorithm).
Reference: [4] <author> R. Canetti. </author> <title> Towards Realizing Random Oracles: Hash Functions that Hide All Partial Information. In Crypto97, </title> <publisher> Springer LNCS (Vol. </publisher> <pages> 1294), pages 455-469. </pages>
Reference-contexts: He uses the assumption that such function ensembles exists, for a specific evasive relation in [17, Thm. 20]. First steps in the direction of identifying and studying useful special-purpose properties of the Random Oracle Model have been recently taken by Canetti <ref> [4] </ref>. Specifically, Canetti considered a property called "perfect one-wayness", and provided a definition of this property, constructions which possess this property (under some reasonable assumptions), and applications for which such functions suffice. Additional constructions have been recently suggested by Canetti, Micciancio and Reingold [5].
Reference: [5] <author> R. Canetti, D. Micciancio and O. Reingold. </author> <title> Perfectly One-Way Probabilistic Hashing. </title> <booktitle> 30th ACM Symposium on the Theory of Computing, </booktitle> <year> 1998. </year>
Reference-contexts: Specifically, Canetti considered a property called "perfect one-wayness", and provided a definition of this property, constructions which possess this property (under some reasonable assumptions), and applications for which such functions suffice. Additional constructions have been recently suggested by Canetti, Micciancio and Reingold <ref> [5] </ref>.
Reference: [6] <author> I.B. Damg-ard. </author> <title> Collision free hash functions and public key signature schemes. </title> <booktitle> In Euro-Crypt87, </booktitle> <volume> LNCS (Vol. 304), </volume> <publisher> Springer-Verlag, </publisher> <year> 1988. </year> <pages> Pages 203-216. </pages>
Reference-contexts: For example, we may require that given a description of a family and a function chosen at random from a this family it is hard to find two preimages which the function maps to the same image. Indeed, this sound definition coincides with the well-known collision-intractability property <ref> [6] </ref>. Trying to generalize, we may replace the "equality of images" relation by any other relation among the pre-images and images of the function.
Reference: [7] <author> A. Fiat and A. Shamir. </author> <title> How to Prove Yourself. Practical Solutions to Identification and Signature Problems. </title> <booktitle> In Crypto86, </booktitle> <publisher> Springer-Verlag LNCS (Vol. </publisher> <pages> 263), pages 186-189, </pages> <year> 1987. </year>
Reference-contexts: Thus, one obtains an implementation of the ideal system in a "real-world" where random oracles do not exist. This methodology, explicitly formulated by Bellare and Rogaway [1] and hereafter referred to as the random oracle methodology, has been used in many works (see, for example, <ref> [7, 20, 11, 17, 1, 15, 2, 18] </ref>). Although the random oracle methodology seems to be useful in practice, it is unclear how to put this methodology on firm grounds. <p> Specifically, we consider a property which we call "correlation intractability" (which seems to underline heuristics such as the Fiat-Shamir transformation of a three-round identification scheme into a signature scheme <ref> [7] </ref>), and show that even a minimalistic formulation of this property cannot be obtained by any fully specified function (or function ensemble). <p> We note that the Fiat-Shamir heuristic (for transforming interactive identification protocols into signature schemes <ref> [7] </ref>) does not fall into the above category, since the function's seed needs to be fixed with the public key, and used for signing polynomially many messages, where the polynomial is not a-priori known. 18 Acknowledgments We wish to thank Silvio Micali for enlightening discussions. 19
Reference: [8] <author> O. Goldreich, S. Goldwasser, and S. Micali. </author> <title> How to Construct Random Functions. </title> <journal> JACM, </journal> <volume> Vol. 33, No. 4, </volume> <pages> pages 792-807, </pages> <year> 1986. </year>
Reference-contexts: Specifically, we argue that the traditional approach of providing a single robust definition which supports a wide range of applications is bound to fail. That is, one should not expect to see definitions such as of pseudorandom generators [3, 21] (or functions <ref> [8] </ref>), and general results of the type saying that these can be used in any application in which parties are restricted merely by computing resources. <p> In particular, we show that even minimalistic definitions cannot be realized. An obvious failure. We first comment that an obvious maximalistic definition, which amount to adopting the pseudorandom requirement of <ref> [8] </ref>, fails poorly. That is, we cannot demand that an (efficient) algorithm that is given the description of the function cannot distinguish its input-output behavior from the one of a random function. This is so since the function description determines its input-output behavior. 5 Towards a minimalistic definition. <p> In this case no computational assumptions are needed since shared-key encryption is implied by one-way functions <ref> [3, 12, 8] </ref>, and the later exist in the Random Oracle Model. 14 seed s can generate a plaintext msg (resp., a ciphertext c) which satisfies the condition in Item 2 of the encryption algorithm (resp., the condition in Item 3 of the decryption algorithm).
Reference: [9] <author> S. Goldwasser and S. Micali. </author> <title> Probabilistic Encryption. </title> <journal> JCSS, </journal> <volume> Vol. 28, No. 2, </volume> <pages> pages 270-299, </pages> <year> 1984. </year> <note> Preliminary version in 14th STOC, </note> <year> 1982. </year>
Reference-contexts: Recall that the former exist, provided trapdoor permutations exist <ref> [9, 21] </ref>. 5 Restricted correlation intractability Faced with the negative result of Theorem 4, one may explore restricted (and yet possibly useful) versions of the correlation intractability property.
Reference: [10] <author> S. Goldwasser, S. Micali, and R.L. Rivest. </author> <title> A Digital Signature Scheme Secure Against Adaptive Chosen-Message Attacks. </title> <journal> SICOMP, </journal> <month> April </month> <year> 1988, </year> <pages> pages 281-308. </pages>
Reference-contexts: Specifically, in this step we use CS-proofs as a tool to "diagonalize against all polynomial-time ensembles in polynomial time". (As noted by Silvio Micali, this technique may be useful also in other settings where diagonalization techniques are applied.) The reader is referred to <ref> [10] </ref> for basic terminology regarding signature schemes and corresponding notions of security. As a starting point for our constructions, we use a signature scheme, denoted S = (G; S; V ), where G is the key-generation algorithm, S is the signing algorithm, and V is the verification algorithm.
Reference: [11] <author> L.C. Guillou and J.J. Quisquater. </author> <title> A Practical Zero-Knowledge Protocol Fitted to Security Microprocessors Minimizing both Transmission and Memory. In EuroCrypt88, </title> <publisher> Springer-Verlag LNCS (Vol. </publisher> <pages> 330), pages 123-128. </pages>
Reference-contexts: Thus, one obtains an implementation of the ideal system in a "real-world" where random oracles do not exist. This methodology, explicitly formulated by Bellare and Rogaway [1] and hereafter referred to as the random oracle methodology, has been used in many works (see, for example, <ref> [7, 20, 11, 17, 1, 15, 2, 18] </ref>). Although the random oracle methodology seems to be useful in practice, it is unclear how to put this methodology on firm grounds.
Reference: [12] <author> J. H-astad, R. Impagliazzo, L.A. Levin and M. Luby. </author> <title> Construction of Pseudorandom Generator from any One-Way Function. </title> <note> To appear in SICOMP. Preliminary versions by Impagliazzo et. </note> <editor> al. </editor> <booktitle> in 21st STOC (1989) and H-astad in 22nd STOC (1990). </booktitle>
Reference-contexts: In this case no computational assumptions are needed since shared-key encryption is implied by one-way functions <ref> [3, 12, 8] </ref>, and the later exist in the Random Oracle Model. 14 seed s can generate a plaintext msg (resp., a ciphertext c) which satisfies the condition in Item 2 of the encryption algorithm (resp., the condition in Item 3 of the decryption algorithm).
Reference: [13] <author> R. Impagliazzo and S. Rudich. </author> <title> Limits on the provable consequences of one-way permutations. </title> <booktitle> 21th ACM Symposium on the Theory of Computing, </booktitle> <year> 1989. </year>
Reference-contexts: Remark 5. As opposed to Theorem 8, here we need to make computational assumptions, namely, that there exist schemes which are secure in the Random Oracle Model. (The result in <ref> [13] </ref> imply that it is highly unlikely that such schemes are proven to exists without making any assumptions.) Clearly, any scheme which is secure without random oracles is also secure in the Random Oracle Model.
Reference: [14] <author> J. Kilian. </author> <title> A Note on Efficient Zero-Knowledge Proofs and Arguments. </title> <booktitle> In 24th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 723-732, </pages> <year> 1992. </year>
Reference-contexts: Additional constructions have been recently suggested by Canetti, Micciancio and Reingold [5]. Our proof of Theorem 1.2 uses CS-proofs (in the Random Oracle Model), as defined and constructed by Micali [15], in an essential way. (The underlying ideas of Micali's construction [15] can be found in Kilian's construction <ref> [14] </ref>.) 4 1.4 Organization In Section 2 we present syntax necessary for the rest of the paper. In Section 3 we discuss the reasoning that led us to define the correlation intractability property, and prove that even such a minimalistic definition cannot be met by a function ensemble.
Reference: [15] <author> S. Micali. </author> <title> CS Proofs. </title> <booktitle> In 35th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 436-453, </pages> <year> 1994. </year>
Reference-contexts: Thus, one obtains an implementation of the ideal system in a "real-world" where random oracles do not exist. This methodology, explicitly formulated by Bellare and Rogaway [1] and hereafter referred to as the random oracle methodology, has been used in many works (see, for example, <ref> [7, 20, 11, 17, 1, 15, 2, 18] </ref>). Although the random oracle methodology seems to be useful in practice, it is unclear how to put this methodology on firm grounds. <p> Additional constructions have been recently suggested by Canetti, Micciancio and Reingold [5]. Our proof of Theorem 1.2 uses CS-proofs (in the Random Oracle Model), as defined and constructed by Micali <ref> [15] </ref>, in an essential way. (The underlying ideas of Micali's construction [15] can be found in Kilian's construction [14].) 4 1.4 Organization In Section 2 we present syntax necessary for the rest of the paper. <p> Additional constructions have been recently suggested by Canetti, Micciancio and Reingold [5]. Our proof of Theorem 1.2 uses CS-proofs (in the Random Oracle Model), as defined and constructed by Micali <ref> [15] </ref>, in an essential way. (The underlying ideas of Micali's construction [15] can be found in Kilian's construction [14].) 4 1.4 Organization In Section 2 we present syntax necessary for the rest of the paper. <p> However, the scheme constructed in this step utilizes signing and verification procedures which are slightly super-polynomial time. * In the third step we use CS-proofs <ref> [15] </ref> to get rid of the super-polynomial running-time, hence obtaining a standard signature scheme which is secure in the Random Oracle Model, but has no secure implementation. <p> Alternatively, it can ask the signer for a signature on this msg, and so obtain the secret signing-key. 2 4.3 Third step To eliminate the super-polynomial time in the above signature scheme, we use CS-proofs as defined and constructed by Micali <ref> [15] </ref>. Recall that in a CS-proof system, a prover, Prv, is trying to convince a verifier, Ver, of the validity of an assertion of the type "machine M accepts input x within t steps".
Reference: [16] <author> M. Naor and M. Yung. </author> <title> Universal One-Way Hash Functions and their Cryptographic Applications. </title> <booktitle> In 21th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 33-43, </pages> <year> 1989. </year> <month> 20 </month>
Reference-contexts: We assume that the scheme (G; S; V ) is existentially unforgeable under adaptive chosen message attack, in the Random Oracle Model. Somewhat surprisingly, we do not need to rely on any cryptographic assumptions here, since such (ideal) schemes can be easily shown to exist using the techniques of <ref> [16, 19] </ref> (since one-way functions exist in the Random Oracle Model). 6 6 Alternatively, we could use an `ordinary' signature scheme, but then our Theorem 8 would be conditioned on the existence of one-way functions. 8 Conventions.
Reference: [17] <author> T. </author> <title> Okamoto Provably Secure and Practical Identification Scheme and Corresponding Signature Scheme. </title> <booktitle> In Crypto91, </booktitle> <pages> pages 31-53. </pages>
Reference-contexts: Thus, one obtains an implementation of the ideal system in a "real-world" where random oracles do not exist. This methodology, explicitly formulated by Bellare and Rogaway [1] and hereafter referred to as the random oracle methodology, has been used in many works (see, for example, <ref> [7, 20, 11, 17, 1, 15, 2, 18] </ref>). Although the random oracle methodology seems to be useful in practice, it is unclear how to put this methodology on firm grounds. <p> Furthermore, unless otherwise justified, such ideal scheme may have no secure implementations at all. 1.3 Related Work Our definition of correlation-intractability is related to a definition by Okamoto <ref> [17] </ref>. In terms of our terminology, Okamoto considers function ensembles for which it is infeasible to form input-output relations with respect to a specific evasive relation [17, Def. 19] (rather than all such relations). <p> In terms of our terminology, Okamoto considers function ensembles for which it is infeasible to form input-output relations with respect to a specific evasive relation <ref> [17, Def. 19] </ref> (rather than all such relations). He uses the assumption that such function ensembles exists, for a specific evasive relation in [17, Thm. 20]. First steps in the direction of identifying and studying useful special-purpose properties of the Random Oracle Model have been recently taken by Canetti [4]. <p> In terms of our terminology, Okamoto considers function ensembles for which it is infeasible to form input-output relations with respect to a specific evasive relation [17, Def. 19] (rather than all such relations). He uses the assumption that such function ensembles exists, for a specific evasive relation in <ref> [17, Thm. 20] </ref>. First steps in the direction of identifying and studying useful special-purpose properties of the Random Oracle Model have been recently taken by Canetti [4].
Reference: [18] <author> D. Pointcheval and J. Stern. </author> <title> Security Proofs for Signature Schemes. In EuroCrypt96, </title> <publisher> Springer-Verlag LNCS (Vol. </publisher> <pages> 1070), pages 387-398. </pages>
Reference-contexts: Thus, one obtains an implementation of the ideal system in a "real-world" where random oracles do not exist. This methodology, explicitly formulated by Bellare and Rogaway [1] and hereafter referred to as the random oracle methodology, has been used in many works (see, for example, <ref> [7, 20, 11, 17, 1, 15, 2, 18] </ref>). Although the random oracle methodology seems to be useful in practice, it is unclear how to put this methodology on firm grounds.
Reference: [19] <author> J. Rompel. </author> <title> One-Way Functions are Necessary and Sufficient for Secure Signatures. </title> <booktitle> In 22nd ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 387-394, </pages> <year> 1990. </year>
Reference-contexts: We assume that the scheme (G; S; V ) is existentially unforgeable under adaptive chosen message attack, in the Random Oracle Model. Somewhat surprisingly, we do not need to rely on any cryptographic assumptions here, since such (ideal) schemes can be easily shown to exist using the techniques of <ref> [16, 19] </ref> (since one-way functions exist in the Random Oracle Model). 6 6 Alternatively, we could use an `ordinary' signature scheme, but then our Theorem 8 would be conditioned on the existence of one-way functions. 8 Conventions.
Reference: [20] <author> C.P. Schnorr. </author> <title> Efficient Signature Generation by Smart Cards. </title> <journal> Journal of Cryptology, </journal> <volume> Vol. 4, No. 3, </volume> <pages> pages 161-174 (1991). </pages>
Reference-contexts: Thus, one obtains an implementation of the ideal system in a "real-world" where random oracles do not exist. This methodology, explicitly formulated by Bellare and Rogaway [1] and hereafter referred to as the random oracle methodology, has been used in many works (see, for example, <ref> [7, 20, 11, 17, 1, 15, 2, 18] </ref>). Although the random oracle methodology seems to be useful in practice, it is unclear how to put this methodology on firm grounds.
Reference: [21] <author> A.C. Yao. </author> <title> Theory and Application of Trapdoor Functions. </title> <booktitle> In 23rd IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 80-91, </pages> <year> 1982. </year> <month> 21 </month>
Reference-contexts: Specifically, we argue that the traditional approach of providing a single robust definition which supports a wide range of applications is bound to fail. That is, one should not expect to see definitions such as of pseudorandom generators <ref> [3, 21] </ref> (or functions [8]), and general results of the type saying that these can be used in any application in which parties are restricted merely by computing resources. <p> Recall that the former exist, provided trapdoor permutations exist <ref> [9, 21] </ref>. 5 Restricted correlation intractability Faced with the negative result of Theorem 4, one may explore restricted (and yet possibly useful) versions of the correlation intractability property.
References-found: 21

