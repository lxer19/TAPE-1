URL: http://www.cs.brown.edu/people/mph/stoc94.ps
Refering-URL: http://www.cs.brown.edu/people/mph/stoc94.html
Root-URL: http://www.cs.brown.edu/
Email: herlihy@crl.dec.com  shanir@math.tau.ac.il  
Title: A Simple Constructive Computability Theorem for Wait-free Computation  
Author: Maurice Herlihy Nir Shavit 
Address: Tel-Aviv University  
Affiliation: Digital Equipment Corporation Cambridge Research Laboratory  Computer Science Department  
Abstract: Not all synchronization problems have wait-free solutions. In this paper, we give a new, remarkably simple necessary and sufficient combinatorial condition characterizing the problems that have wait-free solutions using shared read/write memory. We associate the range of possible input and output values for any synchronization problem with a high-dimensional geometric structure called a simpli-cial complex. We show that a synchronization problem has a wait-free solution if and only if its input complex can be continuously "stretched and folded" to cover its output complex. The key to the new theorem is a novel "simplex agreement" protocol, allowing processes to converge asynchronously to a common simplex of a simplicial complex. The proof exploits a number of classical results from algebraic and combinatorial topology. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. Attiya, A. Bar-Noy, and D. Dolev. </author> <title> Sharing memory robustly in message-passing systems. </title> <booktitle> In Proceedings of the 9th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 377-408, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: We use A n to denote a (combinatorial) complex, and jA n j to denote its (geometric) point-set in Euclidian space. Similarly, we use S n to denote an 1 Our results also apply to message-passing systems in which fewer than half the processes can fail <ref> [1] </ref>. (n + 1)-process simplex, and jS n j its underlying point set. The number n is called the dimension of the simplex or complex. A simplex's set of identifiers is denoted by ids (S n ).
Reference: [2] <author> H. Attiya, N. Lynch, and N. Shavit. </author> <booktitle> Are wait-free algorithms fast? In Proceedings of the 31st Annual Symposium on the Foundations of Computer Science, </booktitle> <month> October </month> <year> 1990. </year>
Reference-contexts: In this paper, we focus on sufficiency, constructing an explicit algorithm given the subdivision and the simplicial map. The basic intuition is that solving a decision task is really a form of approximate agreement <ref> [2, 8, 9, 10, 12] </ref>, in which processes may start out preferring vertexes "far apart" on the output 2 The 2-process consensus task requires processes with inputs in the range f0; 1g to agree on one of their input values as a common output.
Reference: [3] <author> Hagit Attiya, Amotz Bar-Noy, Danny Dolev, David Peleg, and Rudiger Reischuk. </author> <title> Renaming in an asynchronous environment. </title> <journal> Journal of the ACM, </journal> <month> July </month> <year> 1990. </year>
Reference-contexts: The present authors presented a general topological characterization of t-faulty computation, and used it to derive impossibility results for both k-set agreement and the well-known renaming problem of Attiya et al. <ref> [3] </ref>. Our earlier characterization, however, has two limitations. First, the condition is not stated directly in terms of the task's input/output specification. Instead, it characterizes solvability in terms of the topological properties of an associated "full information complex," a geometric realization of a family of concurrent executions. <p> A wait-free solution is one which tolerates the failure of up to n out of n + 1 processes. For example, in the renaming task <ref> [3] </ref>, n + 1 processes with unique names from a large name space must choose unique names from a smaller name space. renaming task where three processors must choose unique names from an output space of four names. As shown, this particular complex is topologically equivalent to a torus.
Reference: [4] <author> O. Biran, S. Moran, and S. Zaks. </author> <title> A combinatorial characterization of the distributed tasks which are solvable in the presence of one faulty processor. </title> <booktitle> In Proceedings of the 7th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 263-275, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: Much research in this area has focused on identifying combinatorial conditions characterizing when such tasks are solvable. In the late 80's, Biran, Moran and Zaks <ref> [4] </ref> provided a pioneering graph theoretic characterization for decision tasks in an asynchronous message-passing system in which only a single processor could fail.
Reference: [5] <author> E. Borowsky and E. Gafni. </author> <title> Generalized FLP impossibility result for t-resilient asynchronous computations. </title> <booktitle> In Proceedings of the 1993 ACM Symposium on Theory of Computing, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: In the late 80's, Biran, Moran and Zaks [4] provided a pioneering graph theoretic characterization for decision tasks in an asynchronous message-passing system in which only a single processor could fail. This result was not substantially improved until early 1993, when three independent research teams, Borowsky and Gafni <ref> [5] </ref>, Saks and Zaharoglou [13], and the present authors [11], succeeded in applying new combinatorial techniques to models that allow more than one failure. <p> A corresponding protocol appears in Figure 6. 3 Strategy The necessity of Theorem 2.1 follows from earlier work. If a protocol exists, the subdivision is induced by the "coherent family of spans" constructed in our earlier paper [11], or by closely related constructions in <ref> [5, 13] </ref>. In this paper, we focus on sufficiency, constructing an explicit algorithm given the subdivision and the simplicial map.
Reference: [6] <author> E. Borowsky and E. Gafni. </author> <title> Immediate atomic snapshots and fast renaming. </title> <booktitle> In Proceedings of the 12th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <month> August </month> <year> 1993. </year>
Reference-contexts: This subdivision is a color-preserving analogue of the classical barycentric subdivision. * Simplex agreement on (I n ) is solved by the "participating-set" algorithm of Borowsky and Gafni <ref> [6] </ref>. <p> This is exactly the participating set problem of Borowsky and Gafni <ref> [6] </ref>, and their simple wait-free solution appears in Figure 9. Lemma 5.2 There exists a wait-free solution to simplex agreement with input complex I n and output complex k (I n ), the iterated standard chromatic sub division for any k &gt; 0.
Reference: [7] <author> S. Chaudhuri. </author> <title> Agreement is harder than consensus: set consensus problems in totally asynchronous systems. </title> <booktitle> In Proceedings of the Ninth Annual ACM Symosium on Principles of Distributed Computing, </booktitle> <pages> pages 311-234, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: Saks and Zaharoglou used point-set topology and a form of Brouwer's fixed point theorem for the k-dimensional ball to prove that the longstanding open problem of wait-free k-set agreement <ref> [7] </ref> is unsolvable for k N 1. Borowsky and Gafni used a novel simulation method and a variant of Sperner's Lemma to prove k-set agreement impossible with any number of faults t k.
Reference: [8] <author> D. Dolev, N.A. Lynch, S.S. Pinter, </author> <title> E.W. Stark, and W.E. Weihl. Reaching approximate agreement in the presence of faults. </title> <journal> Journal of the ACM, </journal> <volume> 33(3) </volume> <pages> 499-516, </pages> <month> July </month> <year> 1986. </year>
Reference-contexts: In this paper, we focus on sufficiency, constructing an explicit algorithm given the subdivision and the simplicial map. The basic intuition is that solving a decision task is really a form of approximate agreement <ref> [2, 8, 9, 10, 12] </ref>, in which processes may start out preferring vertexes "far apart" on the output 2 The 2-process consensus task requires processes with inputs in the range f0; 1g to agree on one of their input values as a common output.
Reference: [9] <author> A. Fekete. </author> <title> Asymptotically optimal algorithms for approximate agreement. </title> <booktitle> In Proceedings of the 5th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <month> August </month> <year> 1986. </year>
Reference-contexts: In this paper, we focus on sufficiency, constructing an explicit algorithm given the subdivision and the simplicial map. The basic intuition is that solving a decision task is really a form of approximate agreement <ref> [2, 8, 9, 10, 12] </ref>, in which processes may start out preferring vertexes "far apart" on the output 2 The 2-process consensus task requires processes with inputs in the range f0; 1g to agree on one of their input values as a common output.
Reference: [10] <author> M.P. Herlihy. </author> <title> Impossibility results for asynchronous PRAM. </title> <booktitle> In Proceedings of the 2nd Annual Symposium on Parallel Algorithms and Architectures, </booktitle> <month> July </month> <year> 1991. </year>
Reference-contexts: In this paper, we focus on sufficiency, constructing an explicit algorithm given the subdivision and the simplicial map. The basic intuition is that solving a decision task is really a form of approximate agreement <ref> [2, 8, 9, 10, 12] </ref>, in which processes may start out preferring vertexes "far apart" on the output 2 The 2-process consensus task requires processes with inputs in the range f0; 1g to agree on one of their input values as a common output.
Reference: [11] <author> M.P. Herlihy and N. Shavit. </author> <title> The asynchronous computability theorem for t-resilient tasks. </title> <booktitle> In Proceedings of the 1993 ACM Symposium on Theory of Computing, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: This result was not substantially improved until early 1993, when three independent research teams, Borowsky and Gafni [5], Saks and Zaharoglou [13], and the present authors <ref> [11] </ref>, succeeded in applying new combinatorial techniques to models that allow more than one failure. <p> To capture the formal properties of such environments, we make no fairness assumptions about processes. Up to N 1 out of N processes can halt, or display arbitrary variations in speed. In particular, one process cannot tell whether another has halted or is just running very slowly. Elsewhere <ref> [11] </ref>, we introduced a model in which task specifications are given using standard geometric formalisms from undergraduate-level algebraic topology. (Most of our technical definitions are taken from Spanier [14].) An initial or final state of a process is modeled as a vertex, ~v, a point in some high-dimensional Euclidian space. <p> A corresponding protocol appears in Figure 6. 3 Strategy The necessity of Theorem 2.1 follows from earlier work. If a protocol exists, the subdivision is induced by the "coherent family of spans" constructed in our earlier paper <ref> [11] </ref>, or by closely related constructions in [5, 13]. In this paper, we focus on sufficiency, constructing an explicit algorithm given the subdivision and the simplicial map.
Reference: [12] <author> S. Mahaney and F.B. Schneider. </author> <title> Inexact agreement: Accuracy, precision, and graceful degre-dation. </title> <booktitle> In Proceedings of the 4th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <month> August </month> <year> 1985. </year>
Reference-contexts: In this paper, we focus on sufficiency, constructing an explicit algorithm given the subdivision and the simplicial map. The basic intuition is that solving a decision task is really a form of approximate agreement <ref> [2, 8, 9, 10, 12] </ref>, in which processes may start out preferring vertexes "far apart" on the output 2 The 2-process consensus task requires processes with inputs in the range f0; 1g to agree on one of their input values as a common output.
Reference: [13] <author> M. Saks and F. Zaharoglou. </author> <title> Wait-free k-set agreement is impossible: The topology of public knowledge. </title> <booktitle> In Proceedings of the 1993 ACM Symposium on Theory of Computing, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: This result was not substantially improved until early 1993, when three independent research teams, Borowsky and Gafni [5], Saks and Zaharoglou <ref> [13] </ref>, and the present authors [11], succeeded in applying new combinatorial techniques to models that allow more than one failure. <p> A corresponding protocol appears in Figure 6. 3 Strategy The necessity of Theorem 2.1 follows from earlier work. If a protocol exists, the subdivision is induced by the "coherent family of spans" constructed in our earlier paper [11], or by closely related constructions in <ref> [5, 13] </ref>. In this paper, we focus on sufficiency, constructing an explicit algorithm given the subdivision and the simplicial map.
Reference: [14] <author> E.H. Spanier. </author> <title> Algebraic Topology. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1966. </year> <pages> Page 10 </pages>
Reference-contexts: In particular, one process cannot tell whether another has halted or is just running very slowly. Elsewhere [11], we introduced a model in which task specifications are given using standard geometric formalisms from undergraduate-level algebraic topology. (Most of our technical definitions are taken from Spanier <ref> [14] </ref>.) An initial or final state of a process is modeled as a vertex, ~v, a point in some high-dimensional Euclidian space. Each vertex is labeled with a process id id (~v) and a value value (~v) (either input or output).
References-found: 14

