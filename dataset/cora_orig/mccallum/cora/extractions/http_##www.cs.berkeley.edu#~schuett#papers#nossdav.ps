URL: http://www.cs.berkeley.edu/~schuett/papers/nossdav.ps
Refering-URL: http://www-mash.cs.berkeley.edu/mash/pubs/index.html
Root-URL: 
Email: fschuett,suchi,yatin,mccanne,randyg@cs.berkeley.edu  
Title: A Soft State Protocol for Accessing Multimedia Archives  
Author: Angela Schuett, Suchitra Raman, Yatin Chawathe, Steven McCanne, Randy Katz 
Address: Berkeley  
Affiliation: Department of EECS University of California,  
Abstract: The advent and deployment of IP Multicast has fueled the growth of multi-user collaborative applications. The MBone, the Internet multicast infrastructure, extends the traditional best-effort unicast delivery model of the Internet to enable efficient multipoint packet delivery. Using IP Mul-ticast to deliver archived multimedia content can provide significant advantages in scalability and efficiency. With the popularity of collaboration tools for audio/video conferencing on the MBone, we have seen a number of applications developed to record and play back these MBone sessions. In this paper, we look at the requirements for an archive system control protocol that allows the initiation and manipulation of a playback session. We present a control protocol which itself uses IP multicast. This provides benefits in scalability, fault recovery, and allows simultaneous control of an archive session by multiple clients. The interesting features of our protocol include the application of soft server state techniques, and a built-in mechanism for fault detection and recovery. We have implemented and deployed a prototype and are actively using it in our research group. 
Abstract-found: 1
Intro-found: 1
Reference: [AA98] <author> K. Almeroth and M. Ammar. </author> <title> The Interactive Multimedia Jukebox (IMJ): A New Paradigm for the On-Demand Delivery of Audio/Video. </title> <booktitle> In Proceedings of the Seventh International World Wide Web Conference, </booktitle> <month> April </month> <year> 1998. </year>
Reference-contexts: NOSSDAV - July 1998 - Cambridge, UK 9 However, only one client may have control of the session, with other clients designated as listeners only. In addition, each client keeps a separate connection open to the server throughout the session, which limits the system scalability. The Internet Multimedia Jukebox <ref> [AA98] </ref> is a research effort which is exploring the viability of grouping users together into implicit groups. The IMJ system uses the web as a means to gather requests and present play schedules.
Reference: [Abo97] <author> Bernard Aboba. </author> <title> Alternatives for Enhancing RTCP Scalability. </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> January </month> <year> 1997. </year>
Reference-contexts: To adapt the per client control bandwidth to the total number of clients, we use the mechanisms of RTCP, where clients build a soft state table listing participants. Each heartbeat message updates this table. Several papers have recently proposed schemes to improve the scalability of RTCP <ref> [RS97, Abo97] </ref>, and SSAC should be able to incorporate this work. While client heartbeat messages are rate controlled, client initiated state change messages may be sent immediately.
Reference: [AMK98] <author> Elan Amir, Steve McCanne, and Randy Katz. </author> <title> An Active Service Framework and its Application to Real-time Multimedia Transcoding. </title> <note> Submitted for publication, </note> <year> 1998. </year>
Reference-contexts: An ongoing research effort at Berkeley is developing a service toolkit framework, AS1, which uses an announce/listen soft state protocol for launching service agents <ref> [AMK98] </ref>. This fits in well with the SSAC protocol design. Using AS1 we have built an archive server which utilizes SSAC messages to automatically restart failed archive agents. The AS1 framework is also implemented using the MASH toolkit. <p> The server is constructed out of a number of host machines, all listening to a single multicast address. Each host machine runs a host manager (HM) process. This process is responsible for listening to control traffic and launching archive agent (AA) processes when needed. See the AS1 paper <ref> [AMK98] </ref> for details on how a minimum number of host managers can be maintained in the system at all times. The AS1 system allows the set of member host machines to be completely fluid. <p> After the timer expires, the manager will launch a new archive agent, which immediately announces its state binding to that CSID. Other host managers with launches pending for that CSID will cancel their launches. For information about other heuristics which are used to handle launch collisions, see <ref> [AMK98] </ref>. If an archive agent aborts, the soft state mapping which binds that agent to a CSID will expire.
Reference: [BFD97] <author> William J. Bolosky, Robert P. Fitzgerald, and John R. Douceur. </author> <title> Distributed Schedule Management in the Tiger Video Fileserver. </title> <booktitle> In Proceedings of the Sixteenth ACM Symposium on Operating Systems Principles, </booktitle> <month> October </month> <year> 1997. </year>
Reference-contexts: Several commercial systems have been deployed and tested in thousands of homes. These commercial systems have recognized the importance of fault recovery mechanisms in server implementation <ref> [NLO95, BFD97] </ref>. Recently, a large effort has been undertaken to standardize many aspects of archive control. The resulting protocol, RTSP, addresses the issues of a common connection oriented control protocol which answers the needs of a variety of current streaming application vendors [SRL98].
Reference: [BNKL98] <author> P. Basu, A. Narayanan, R. Krishnan, and T.D.C. Little. </author> <title> An Implementation of Dynamic Service Aggregation for Interactive Video Delivery. </title> <booktitle> In Proc. SPIE Multimedia Computing and Networking, </booktitle> <year> 1998. </year>
Reference-contexts: If any of the members of such an implicit group perform a seek/pause operation, the group is automatically split up. The use of implicit client groups has been explored in several systems as a means to improve server scalability <ref> [DSS94, BNKL98] </ref>. 2.3 Fault Detection and Recovery Fault detection in the context of media streaming systems involves detecting both client and server failures. If a client-side failure occurs, the server should detect this, and stop delivering data. This is necessary so that server resources do not become orphaned.
Reference: [BSAK95] <author> H. Balakrishnan, S. Seshan, E. Amir, and R. Katz. </author> <title> Improving TCP/IP Performance Over Wireless Networks. </title> <booktitle> In Proceedings of the first ACM Conference on Mobile Computing and Networking, </booktitle> <address> Berkeley, CA, </address> <month> November </month> <year> 1995. </year>
Reference-contexts: The concept of soft state has been widely used for building robust and reliable systems. A number of network protocols for Internet routing [MRR80], IP multicast routing [DEF + 96], and the Snoop protocol for improving TCP performance over wireless networks <ref> [BSAK95] </ref> use soft state to achieve robustness and good performance. We heavily rely on the use of soft state throughout our design. As we will demonstrate, this design choice greatly simplifies fault management resulting in high availability. Soft state protocols are also amenable to implementation on multicast. <p> A number of other systems outside the realm of archive control have used the notion of soft state to achieve better performance and robustness. Networking systems for routing protocols [MRR80, DEF + 96] and performance optimization <ref> [BSAK95] </ref> rely on soft state to update their tables; this allows them to continue operating in the event of partial failures and ensures that no special recovery protocols are needed to regenerate state that might have been lost in a crash.
Reference: [Dee91] <author> Stephen E. Deering. </author> <title> Multicast Routing in a Datagram Internetwork. </title> <type> PhD thesis, </type> <institution> Stanford University, </institution> <month> December </month> <year> 1991. </year>
Reference-contexts: 1 Introduction The development and deployment of the IP multicast infrastructure (the MBone) in the Internet has enabled the development of a number of collaborative applications. IP Multi-cast <ref> [Dee91, DEF + 96] </ref> provides an efficient mechanism for multi-point data delivery. The new class of multi-party applications enabled by IP Multicast includes a variety of audio and video conferencing tools [Sch92, MJ95, JM], shared whiteboards and text editors [McC92, RT96, HC97], and floor control applications [MR97].
Reference: [DEF + 96] <author> Stephen Deering, Deborah Estrin, Dino Fari-nacci, Van Jacobson, Ching-Gung Liu, and Liming Wei. </author> <title> An Architecture for Wide-area NOSSDAV - July 1998 - Cambridge, UK 10 Multicast Routing. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 4(2), </volume> <month> April </month> <year> 1996. </year>
Reference-contexts: 1 Introduction The development and deployment of the IP multicast infrastructure (the MBone) in the Internet has enabled the development of a number of collaborative applications. IP Multi-cast <ref> [Dee91, DEF + 96] </ref> provides an efficient mechanism for multi-point data delivery. The new class of multi-party applications enabled by IP Multicast includes a variety of audio and video conferencing tools [Sch92, MJ95, JM], shared whiteboards and text editors [McC92, RT96, HC97], and floor control applications [MR97]. <p> State which is not refreshed in time expires. Advantages of the soft state approach include implicit error recovery. The concept of soft state has been widely used for building robust and reliable systems. A number of network protocols for Internet routing [MRR80], IP multicast routing <ref> [DEF + 96] </ref>, and the Snoop protocol for improving TCP performance over wireless networks [BSAK95] use soft state to achieve robustness and good performance. We heavily rely on the use of soft state throughout our design. <p> A number of other systems outside the realm of archive control have used the notion of soft state to achieve better performance and robustness. Networking systems for routing protocols <ref> [MRR80, DEF + 96] </ref> and performance optimization [BSAK95] rely on soft state to update their tables; this allows them to continue operating in the event of partial failures and ensures that no special recovery protocols are needed to regenerate state that might have been lost in a crash.
Reference: [DPS + ] <author> A. Demers, K. Peterson, M. Spreitzer, D. Terry, M. Theimer, and B. Welch. </author> <title> The Bayou Architecture: Support for Data Sharing Among Mobile Users. </title>
Reference-contexts: A number of soft state systems such as Bayou <ref> [DPS + ] </ref> have explicitly traded consistency for availability in application-specific ways. [FGC + 97] use the principles of soft state and eventual consistency heavily in their design of a general-purpose Internet service framework. 7 Summary We have presented a new protocol for archive control that allows multiple clients to initiate
Reference: [DSS94] <author> A. Dan, D. Sitaram, and P. Shahabuddin. </author> <title> Scheduling Policies for an On-demand Video Server with Batching. </title> <booktitle> In ACM Multimedia, </booktitle> <year> 1994. </year>
Reference-contexts: If any of the members of such an implicit group perform a seek/pause operation, the group is automatically split up. The use of implicit client groups has been explored in several systems as a means to improve server scalability <ref> [DSS94, BNKL98] </ref>. 2.3 Fault Detection and Recovery Fault detection in the context of media streaming systems involves detecting both client and server failures. If a client-side failure occurs, the server should detect this, and stop delivering data. This is necessary so that server resources do not become orphaned.
Reference: [FGC + 97] <author> Armando Fox, Steven Gribble, Yatin Chawathe, Eric Brewer, and Paul Gauthier. </author> <title> Cluster-based Scalable Network Services. </title> <booktitle> In Proceedings of SOSP '97, </booktitle> <pages> pages 7891, </pages> <address> St. Malo, France, </address> <month> October </month> <year> 1997. </year>
Reference-contexts: A number of soft state systems such as Bayou [DPS + ] have explicitly traded consistency for availability in application-specific ways. <ref> [FGC + 97] </ref> use the principles of soft state and eventual consistency heavily in their design of a general-purpose Internet service framework. 7 Summary We have presented a new protocol for archive control that allows multiple clients to initiate and control playback of stored multimedia content in a scalable manner.
Reference: [FJM + 95] <author> Sally Floyd, Van Jacobson, Steven McCanne, Ching-Gung Liu, and Lixia Zhang. </author> <title> A Reliable Multicast Framework for Light-weight Sessions and Application Level Framing. </title> <booktitle> In Proceedings of SIGCOMM '95, </booktitle> <address> Boston, MA, </address> <month> September </month> <year> 1995. </year> <institution> Association for Computing Machinery. </institution>
Reference-contexts: Since no central hard state is involved in such a protocol, it makes the protocol much more resilient to failures. The use of announce/listen eliminates the need for heavyweight reliable protocols such as TCP or SRM <ref> [FJM + 95] </ref> in the implementation of SSAC. It allows SSAC to run over unicast UDP or multicast. To present the protocol, we begin by explaining the case where a single client connects to the server using unicast.
Reference: [HC97] <author> Mark Handley and Jon Crowcroft. </author> <title> Network Text Editor (NTE): A scalable shared text editor for the MBone. </title> <booktitle> In Proceedings of SIG-COMM '97, </booktitle> <address> Cannes, France, </address> <month> September </month> <year> 1997. </year> <institution> Association for Computing Machinery. </institution>
Reference-contexts: IP Multi-cast [Dee91, DEF + 96] provides an efficient mechanism for multi-point data delivery. The new class of multi-party applications enabled by IP Multicast includes a variety of audio and video conferencing tools [Sch92, MJ95, JM], shared whiteboards and text editors <ref> [McC92, RT96, HC97] </ref>, and floor control applications [MR97]. If computer supported collaboration is to become successful and mainstream, it must at the very least provide functionality that was previously unavailable in face-to-face meetings.
Reference: [HJ97] <author> Mark Handley and Van Jacobson. SDP: </author> <title> Session Description Protocol. </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> November </month> <year> 1997. </year>
Reference-contexts: Light-weight sessions refers to the fault tolerant, scalable, decentralized communications model that has been used successfully in many MBone conferencing protocols such as RTP/RTCP [SCFJ96] for audio and video and SAP <ref> [HJ97] </ref> for session announcements. Instead of instantiating hard server state as in centralized protocols, light-weight sessions use a soft state announce/listen approach, in which an agent periodically transmits a status announcement. Listening members update their status information on receiving an announcement. If no announcements are received, state eventually times out. <p> The CSID for an explicit group can be any numeric or text string which will be unique, at the server, for the life of the control session, for example, a group member's e-mail address. This CSID is propagated to the group members through some separate means, such as sdr <ref> [HJ97] </ref>. In addition, group members need to share a starting time for their playback session. Implicit groups can also be formed by using a shared CSID.
Reference: [Hol97] <author> Wieland Holfelder. </author> <title> Interactive Remote Recording and Playback of Multicast Video-conferences. </title> <booktitle> In Proceedings of the Fourth International Workshop on Interactive Distributed Multimedia Systems and Telecommini-cation Services (IDMS), </booktitle> <year> 1997. </year>
Reference-contexts: However, RTSP does not address multiple client control, and does not provide any explicit mechanisms for fault discovery or recovery. The MBone VCR on Demand service <ref> [Hol97] </ref> allows multiple clients to connect to a server for session playback. NOSSDAV - July 1998 - Cambridge, UK 9 However, only one client may have control of the session, with other clients designated as listeners only.
Reference: [HS92] <author> Jim Hollan and Scott Stornetta. </author> <title> Beyond Being There. </title> <booktitle> In Proceedings of CHI '92, </booktitle> <year> 1992. </year>
Reference-contexts: By harnessing the computing technology at our disposal today, instead of merely imitating face-to-face communication, we can enhance collaboration by intelligently adding functionality through the electronic medium <ref> [HS92] </ref>. A key functionality that is possible and useful in this new medium is the ability to record and play back collaborative sessions, for example, a group meeting. A recording agent can participate in the multicast session associated with the meeting and archive the entire session.
Reference: [Jac94] <author> Van Jacobson. </author> <title> SIGCOMM '94 Tutorial: Multimedia conferencing on the Internet, </title> <month> August </month> <year> 1994. </year>
Reference-contexts: operate even in the presence of buggy software modules or network failures. 2.4 Design Principles We have developed an archive control protocol that addresses maintenance of shared state, group formation and management, and fault detection and recovery through the use of the multicast protocol design principles of lightweight sessions (LWS) <ref> [McC98, Jac94] </ref>. Light-weight sessions refers to the fault tolerant, scalable, decentralized communications model that has been used successfully in many MBone conferencing protocols such as RTP/RTCP [SCFJ96] for audio and video and SAP [HJ97] for session announcements.
Reference: [JM] <author> Van Jacobson and Steven McCanne. </author> <title> Visual Audio Tool. </title> <institution> Lawrence Berke-ley Laboratory. </institution> <note> Software available at ftp://ftp.ee.lbl.gov/conferencing/vat. </note>
Reference-contexts: IP Multi-cast [Dee91, DEF + 96] provides an efficient mechanism for multi-point data delivery. The new class of multi-party applications enabled by IP Multicast includes a variety of audio and video conferencing tools <ref> [Sch92, MJ95, JM] </ref>, shared whiteboards and text editors [McC92, RT96, HC97], and floor control applications [MR97]. If computer supported collaboration is to become successful and mainstream, it must at the very least provide functionality that was previously unavailable in face-to-face meetings. <p> We utilize the established MBone tools vic [MJ95], vat <ref> [JM] </ref> and mediaboard [RT96] for transmitting content.
Reference: [MBKea97] <author> Steve McCanne, Eric Brewer, Randy Katz, and Lawrence Rowe et al. </author> <title> Toward a Common Infrastructure for Multimedia-Networking Mid-dleware. </title> <booktitle> In Proceedings of the Fifth International Workshop on Network and OS Support for Digital Audio and Video (NOSSDAV), </booktitle> <month> May </month> <year> 1997. </year>
Reference-contexts: The client immediately begins announcing using the SSAC protocol. When the first response from the server arrives, the client configures itself to listen on the indicated data sessions, and begins displaying data. The MARS rover was constructed using objects from the MASH toolkit. The MASH toolkit <ref> [MBKea97] </ref> is an array of composable multimedia networking and application objects. High performance objects, such as media encoders, decoders, recording and playback objects are written in C++. These objects are then glued together using the Tcl scripting language, along with Tcl/Tk components for user interfaces, parsers, and policy components.
Reference: [McC92] <author> Steven McCanne. </author> <title> A Distributed Whiteboard for Network Conferencing. </title> <type> Class report, </type> <institution> UC Berkeley, </institution> <month> May </month> <year> 1992. </year>
Reference-contexts: IP Multi-cast [Dee91, DEF + 96] provides an efficient mechanism for multi-point data delivery. The new class of multi-party applications enabled by IP Multicast includes a variety of audio and video conferencing tools [Sch92, MJ95, JM], shared whiteboards and text editors <ref> [McC92, RT96, HC97] </ref>, and floor control applications [MR97]. If computer supported collaboration is to become successful and mainstream, it must at the very least provide functionality that was previously unavailable in face-to-face meetings.
Reference: [McC98] <author> Steven McCanne. </author> <title> Scalable Multimedia Communication with Internet Multicast, Lightweight Sessions, </title> <booktitle> and the MBone. Proceedings of the IEEE, </booktitle> <year> 1998. </year>
Reference-contexts: operate even in the presence of buggy software modules or network failures. 2.4 Design Principles We have developed an archive control protocol that addresses maintenance of shared state, group formation and management, and fault detection and recovery through the use of the multicast protocol design principles of lightweight sessions (LWS) <ref> [McC98, Jac94] </ref>. Light-weight sessions refers to the fault tolerant, scalable, decentralized communications model that has been used successfully in many MBone conferencing protocols such as RTP/RTCP [SCFJ96] for audio and video and SAP [HJ97] for session announcements.
Reference: [MJ95] <author> Steven McCanne and Van Jacobson. </author> <title> vic: A Flexible Framework for Packet Video. </title> <booktitle> In Proceedings of ACM Multimedia '95, </booktitle> <pages> pages 511 522, </pages> <address> San Francisco, CA, </address> <month> November </month> <year> 1995. </year>
Reference-contexts: IP Multi-cast [Dee91, DEF + 96] provides an efficient mechanism for multi-point data delivery. The new class of multi-party applications enabled by IP Multicast includes a variety of audio and video conferencing tools <ref> [Sch92, MJ95, JM] </ref>, shared whiteboards and text editors [McC92, RT96, HC97], and floor control applications [MR97]. If computer supported collaboration is to become successful and mainstream, it must at the very least provide functionality that was previously unavailable in face-to-face meetings. <p> Clients consider state change messages to be provisional until a server reflection is heard. 4 Implementation We have implemented the core SSAC protocol in a distributed archive server which we call MARS (MASH ARchive Server), and a client application, the MARS rover. We utilize the established MBone tools vic <ref> [MJ95] </ref>, vat [JM] and mediaboard [RT96] for transmitting content.
Reference: [MR97] <author> Radhika Malpani and Lawrence A. Rowe. </author> <title> Floor Control for Large-Scale MBone Seminars. </title> <booktitle> In Proceedings of ACM Multimedia '97, </booktitle> <year> 1997. </year>
Reference-contexts: IP Multi-cast [Dee91, DEF + 96] provides an efficient mechanism for multi-point data delivery. The new class of multi-party applications enabled by IP Multicast includes a variety of audio and video conferencing tools [Sch92, MJ95, JM], shared whiteboards and text editors [McC92, RT96, HC97], and floor control applications <ref> [MR97] </ref>. If computer supported collaboration is to become successful and mainstream, it must at the very least provide functionality that was previously unavailable in face-to-face meetings.
Reference: [MRR80] <author> J. McQuillan, I. Richer, and E. Rosen. </author> <title> The New Routing Algorithm for the ARPANET. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 28(5):711719, </volume> <month> May </month> <year> 1980. </year>
Reference-contexts: State which is not refreshed in time expires. Advantages of the soft state approach include implicit error recovery. The concept of soft state has been widely used for building robust and reliable systems. A number of network protocols for Internet routing <ref> [MRR80] </ref>, IP multicast routing [DEF + 96], and the Snoop protocol for improving TCP performance over wireless networks [BSAK95] use soft state to achieve robustness and good performance. We heavily rely on the use of soft state throughout our design. <p> A number of other systems outside the realm of archive control have used the notion of soft state to achieve better performance and robustness. Networking systems for routing protocols <ref> [MRR80, DEF + 96] </ref> and performance optimization [BSAK95] rely on soft state to update their tables; this allows them to continue operating in the event of partial failures and ensures that no special recovery protocols are needed to regenerate state that might have been lost in a crash.
Reference: [NLO95] <author> Michael N. Nelson, Mark Linton, and Susan Owicki. </author> <title> A Highly Available, Scalable ITV System. </title> <booktitle> In Proceedings of the Fifteenth ACM Symposium on Operating Systems Principles, </booktitle> <month> December </month> <year> 1995. </year>
Reference-contexts: Several commercial systems have been deployed and tested in thousands of homes. These commercial systems have recognized the importance of fault recovery mechanisms in server implementation <ref> [NLO95, BFD97] </ref>. Recently, a large effort has been undertaken to standardize many aspects of archive control. The resulting protocol, RTSP, addresses the issues of a common connection oriented control protocol which answers the needs of a variety of current streaming application vendors [SRL98].
Reference: [RS97] <author> Jonathan Rosenberg and Henning Schulzrinne. </author> <title> Timer Reconsideration for Enhanced RTP Scalability. </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> July </month> <year> 1997. </year>
Reference-contexts: To adapt the per client control bandwidth to the total number of clients, we use the mechanisms of RTCP, where clients build a soft state table listing participants. Each heartbeat message updates this table. Several papers have recently proposed schemes to improve the scalability of RTCP <ref> [RS97, Abo97] </ref>, and SSAC should be able to incorporate this work. While client heartbeat messages are rate controlled, client initiated state change messages may be sent immediately.
Reference: [RT96] <author> Suchitra Raman and Teck-Lee Tung. </author> <title> Medi-aboard using the Scalable Reliable Multicast Toolkit. </title> <type> Class report, </type> <institution> UC Berkeley, </institution> <month> December </month> <year> 1996. </year>
Reference-contexts: IP Multi-cast [Dee91, DEF + 96] provides an efficient mechanism for multi-point data delivery. The new class of multi-party applications enabled by IP Multicast includes a variety of audio and video conferencing tools [Sch92, MJ95, JM], shared whiteboards and text editors <ref> [McC92, RT96, HC97] </ref>, and floor control applications [MR97]. If computer supported collaboration is to become successful and mainstream, it must at the very least provide functionality that was previously unavailable in face-to-face meetings. <p> We utilize the established MBone tools vic [MJ95], vat [JM] and mediaboard <ref> [RT96] </ref> for transmitting content. We have recorded around 20 Gigabytes of content from MBone lectures, research group meetings, and local classes, and provide access to these sessions through the MARS system. 4.1 Client Application A screen shot of our client application, MARS rover, is shown in Figure 3.
Reference: [SCFJ96] <author> Henning Schulzrinne, Steve Casner, R. Freder-ick, and Van Jacobson. RTP: </author> <title> A Transport Protocol for Real-Time Applications. </title> <institution> Internet Engineering Task Force, Audio-Video Transport Working Group, </institution> <month> January </month> <year> 1996. </year> <month> RFC-1889. </month>
Reference-contexts: Light-weight sessions refers to the fault tolerant, scalable, decentralized communications model that has been used successfully in many MBone conferencing protocols such as RTP/RTCP <ref> [SCFJ96] </ref> for audio and video and SAP [HJ97] for session announcements. Instead of instantiating hard server state as in centralized protocols, light-weight sessions use a soft state announce/listen approach, in which an agent periodically transmits a status announcement. Listening members update their status information on receiving an announcement. <p> The rate at which each group member announces is adjusted as the group size grows, in a mechanism similar to that used in RTCP <ref> [SCFJ96] </ref>. The goal is for each of n members to announce at a rate of p=n, where p is the announcement period. As we discussed in Section 3.1, the length of the announcement period determines the length of time before a fault is discovered and corrected.
Reference: [Sch92] <author> Henning Schulzrinne. </author> <title> Voice Communication Across the Internet: A network voice terminal. </title> <type> Technical Report TR-92-50, </type> <institution> University of Massachusetts, </institution> <address> Amherst, 1992. NOSSDAV - July 1998 - Cambridge, UK 11 </address>
Reference-contexts: IP Multi-cast [Dee91, DEF + 96] provides an efficient mechanism for multi-point data delivery. The new class of multi-party applications enabled by IP Multicast includes a variety of audio and video conferencing tools <ref> [Sch92, MJ95, JM] </ref>, shared whiteboards and text editors [McC92, RT96, HC97], and floor control applications [MR97]. If computer supported collaboration is to become successful and mainstream, it must at the very least provide functionality that was previously unavailable in face-to-face meetings.
Reference: [SRL98] <author> H. Schulzrinne, A. Rao, and R. Lanphier. </author> <title> Real Time Streaming Protocol (RTSP). </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Febru-ary </month> <year> 1998. </year>
Reference-contexts: This parameter exchange causes both the server and the client to construct a shared state table. One approach to establishing this state table is to use a reliable, connection-oriented byte stream transport protocol such as TCP. The Real-time Streaming Protocol (RTSP) <ref> [SRL98] </ref> uses this approach 1 . While this is straightforward in the single client-single server case, it is not suitable when multiple clients share a single control session. If each client in the shared session requires a separate connection to the server, the server must maintain expensive per-client connection state. <p> Recently, a large effort has been undertaken to standardize many aspects of archive control. The resulting protocol, RTSP, addresses the issues of a common connection oriented control protocol which answers the needs of a variety of current streaming application vendors <ref> [SRL98] </ref>. However, RTSP does not address multiple client control, and does not provide any explicit mechanisms for fault discovery or recovery. The MBone VCR on Demand service [Hol97] allows multiple clients to connect to a server for session playback.
References-found: 30

