URL: file://isi.edu/atomic-doc/Interfacing_Displays.ps
Refering-URL: http://www.isi.edu/div7/netstation/
Root-URL: http://www.isi.edu
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Finn, G. </author> <title> An Integration of Network Communication with Workstation Architecture ACM Computer Communication Review, </title> <journal> Vol. </journal> <volume> 21, No. 5, </volume> <month> October </month> <year> 1991. </year>
Reference: [2] <author> Hayter, M., McAuley, D. </author> <title> The Desk Area Network ACM Transactions on Operating Systems, </title> <month> October </month> <year> 1991, </year> <pages> pp. 1421. </pages>
Reference: [3] <author> Houh, H., Adam, J., Ismert, M., Lindblad, C., Tennenhouse, D. </author> <title> The VuNet Desk Area Network: Architecture, </title> <journal> Implementation and Experience IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol. 13, No. 4, </volume> <month> May </month> <year> 1995. </year>
Reference: [4] <institution> TMS 320C80 MVP Transfer Controller Users Guide Texas Instruments, </institution> <year> 1995. </year>
Reference: [5] <institution> TMS 320C80 MVP C Source Debugger Users Guide Texas Instruments, </institution> <year> 1995. </year>
Reference-contexts: Advances in VLSI now allow a sophisticated addressing engine of this type to be incorporated into a processor. The Texas Instruments TMS320C80 MVP processor organizes its memory conventionally as a sequence of bytes. However, it includes as a part of its memory-bus interface a transfer controller <ref> [5] </ref>. The transfer controller is capable of performing the pixel-format conversions outlined in Section 4.1as it maps a source vector of pixels into its destination within a frame buffer. A transfer controller of this type makes the necessary mappings and conversions available as part of a block data transfer . <p> This allows a sequence of color pixel values to be moved from within an incoming network packet buffer into a frame buffer without directly involving the CPU in the data movement. 4.4 Transfer Controller Performance The 320C80 development environment includes both an extensive chip simulator and an in-circuit emulator <ref> [5] </ref>. The simulator correctly simulates the processor, cache, transfer controller and memory system interactions. This was used to evaluate alternative memory architectures. Of particular interest was how ef fectively the transfer controller could perform the mappings and format conversions.
Reference: [6] <author> Seitz, C. L., et. </author> <title> al. </title> <journal> Myrinet - A Gigabit/Second Local-Area Network IEEE Micro, </journal> <volume> Vol. 15, No. 1, </volume> <pages> pp. 29-36. </pages> <month> February </month> <year> 1995. </year>
Reference-contexts: CR T support technology is well developed. Instead, the primary focus was the development of a color frame buf fer architecture that was suited to receiving its pixel values via Internet packets received over a gigabit network. The Myrinet LAN was chosen as the network <ref> [6] </ref>. Myrinet provides 640 Mb/s point-to-point channels.
Reference: [7] <institution> HIPPI Frame Buffer http://www.io.com/~webpub/avaika Avaika Networks Corporation, </institution> <month> February </month> <year> 1995. </year>
Reference-contexts: The 640 Mb/s Memory Network Interface Frame Buffer TMS NTSC NTSC Frame Buffer Bt-463 RAMDAC 128 Avaika Networks HIPPI color frame buffer is an example of this approach. The Avaika color frame buffer is closely associated with the underlying link-layer packet format <ref> [7] </ref>. The frame buffer assumes that pixels within a packet are in frame-buf fer format. Top-offrame and start-of-data are indicated by a field within the HIPPI packet. Once a frame has been started, data from successive packets is used to fill the frame.
Reference: [8] <author> Barham, P., hayter, M., McAuley, D., Pratt, </author> <title> I.. </title> <journal> Devices on the Desk Area Network IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol. 13, No. 4, </volume> <month> May </month> <year> 1995. </year>
Reference-contexts: However , this approach is tied to the HIPPI network specif i-cally and to the particular pixel format supported by the frame buffer. It is not compatible with the Internet. The approach being taken by the DAN project is to attach a framestore to an ATM network <ref> [8] </ref>. The DAN framestore in addition to acting as a frame buffer provides windowing support. The VCI of an ATM connection is associated with a particular window within the frame store.
References-found: 8

