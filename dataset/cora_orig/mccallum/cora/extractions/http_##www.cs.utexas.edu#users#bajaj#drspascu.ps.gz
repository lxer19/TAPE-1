URL: http://www.cs.utexas.edu/users/bajaj/drspascu.ps.gz
Refering-URL: http://www.cs.utexas.edu/users/bajaj/
Root-URL: 
Keyword: DATA VISUALIZATION TECHNIQUES  
Note: Edited by Chandrajit Bajaj DATA VISUALIZATION TECHNIQUES, Edited by C. Bajaj c 1998 John Wiley Sons Ltd  
Web: Chandrajit Bajaj  
Abstract-found: 0
Intro-found: 0
Reference: <institution> 5/4/1998 22:17|PAGE PROOFS for John Wiley & Sons Ltd|book References </institution>
Reference: [AFH80] <author> E. Artzy, G. Frieder, and G. T. Herman. </author> <title> The theory, design, implementation and evaluation of a three-dimensional surface detection algorithm. </title> <booktitle> In Computer Graphics (SIGGRAPH '80 Proceedings), </booktitle> <volume> volume 14, </volume> <pages> pages 2-9, </pages> <year> 1980. </year>
Reference-contexts: One issue is the efficiency of avoiding re-computation (recomputing intersection along shared edges of cells). Through regular traversal and contour propagation, information can be saved more efficiently than in a random order visitation which is required by some cell search techniques. 3.4.1 Contour Propagation Contour propagation <ref> [AFH80, HB94, IK95, BPS96] </ref> is a surface tracking method which is based on continuity of the scalar field, and hence of the isocontours derived from the field. Given a single seed cell on a connected component of a contour, the entire component is traced by breadth-first traversal through the face-adjacencies.
Reference: [BLM97] <author> M. J. Bentum, B. B. A. Lichtenbelt, and T. Malzbender. </author> <title> Frequency analysis of gradient estimators in volume rendering. </title> <journal> IEEE Transactions on Visualization Computer Graphics, </journal> <year> 1997. </year>
Reference-contexts: However, the ability of higher degree interpolant and associated gradient estimators to accurately represent the underlying data are motivating work in this direction <ref> [MMMY96, BLM97] </ref>. 3.2.2 Connectivity The common approach of linear interpolation along cell edges is sufficient to obtain a sampling of points which lie on the surface, but the problem of connecting the points to form a surface still remains.
Reference: [BPS96] <author> C. L. Bajaj, V. Pascucci, and D. R. Schikore. </author> <title> Fast isocontouring for improved interactivity. </title> <booktitle> In Proceedings of 1996 Symposium on Volume Visualization, </booktitle> <pages> pages 39-46, </pages> <month> October </month> <year> 1996. </year> <title> [BPS97a] . The contour spectrum. </title> <booktitle> In Proceedings of IEEE Visualization '97, </booktitle> <pages> pages 167-173, </pages> <month> October </month> <year> 1997. </year> <title> [BPS97b] . Fast isocontouring for structured and unstructured meshes in any dimension. </title> <booktitle> In Proceedings of Late Breaking Hot Topics (IEEE Visualization 1997), </booktitle> <pages> pages 25-28, </pages> <month> October </month> <year> 1997. </year>
Reference-contexts: With certain assumptions on the distributions of points in the span space, the worst-case query time improves to O (k + n c L + n c Several authors have recently demonstrated improved worst-case performance bounds with the use of the interval tree and segment tree data structures <ref> [BPS96, CMPS97, vK96] </ref>. <p> One issue is the efficiency of avoiding re-computation (recomputing intersection along shared edges of cells). Through regular traversal and contour propagation, information can be saved more efficiently than in a random order visitation which is required by some cell search techniques. 3.4.1 Contour Propagation Contour propagation <ref> [AFH80, HB94, IK95, BPS96] </ref> is a surface tracking method which is based on continuity of the scalar field, and hence of the isocontours derived from the field. Given a single seed cell on a connected component of a contour, the entire component is traced by breadth-first traversal through the face-adjacencies. <p> Propagation from seed cells requires a sufficient subset of cells which guarantee that every connected component for any arbitrary isovalue intersects at least one cell in the subset, called a seed set. A general definition of seed sets and framework for construction of seed sets is presented in <ref> [BPS96] </ref>. 3.4.2.1 Optimal Seed Sets In [vvB + 97], the theory of optimal seed sets is discussed, which suggests that optimal (minimal) seed sets can be constructed in time which is polynomial in the number of cells, though the cost for minimal seed sets remains prohibitive for most cases. <p> Wiley & Sons Ltd|book 22 Bajaj, Pascucci, Schikore T (x) D F (x) = c 2 D B B T (y 0 ) T (x), range propagated from the left T (y), range propaged from below T (I), total incoming range 3.4.2.6 Responsibility Propagation In earlier work, Bajaj et al. <ref> [BPS96] </ref> described a plane sweep approach to seed set computation for regular grids. Results from the responsibility propagation algorithm fall between the general sweep filtering and the contour climbing. Processing of cells is performed in a regular traversal order, with ranges of responsibility propagated along the directions of the traversal.
Reference: [CMPS97] <author> P. Cignoni, C. Montani, E. Puppo, and R. Scopigno. </author> <title> Speeding up isosurface extraction using interval trees. </title> <journal> IEEE Transactions on Visualization and Computer Graphics, </journal> <volume> 3(2) </volume> <pages> 158-170, </pages> <year> 1997. </year>
Reference-contexts: With certain assumptions on the distributions of points in the span space, the worst-case query time improves to O (k + n c L + n c Several authors have recently demonstrated improved worst-case performance bounds with the use of the interval tree and segment tree data structures <ref> [BPS96, CMPS97, vK96] </ref>.
Reference: [CS97] <author> Y.-J. Chiang and C. T. Silva. </author> <title> I/o optimal isosurface extraction. </title> <booktitle> In Proceedings of IEEE Visualization '97, </booktitle> <pages> pages 293-300, </pages> <month> October </month> <year> 1997. </year>
Reference-contexts: The hierarchy is constructed by recursive application of a set of three tetrahedron "splitting" rules. Isosurfaces can be extracted from the at a user-defined level of detail. Chiang and Silva <ref> [CS97] </ref> use an I/O-optimal interval tree to perform efficient contouring of data which cannot be stored in primary memory. Results have indicated that isocontouring can be performed on data residing on secondary storage such that the I/O operations required are not the limiting factor of the computation.
Reference: [DK91] <author> A. Doi and A. Koide. </author> <title> An efficient method of triangulating equi-valued surfaces by using tetrahedral cells. </title> <journal> IEICE Trans. Commun. Elec. Inf. Syst., </journal> <volume> E-74(1):214-224, </volume> <year> 1991. </year>
Reference-contexts: Consistency may be achieved simply by subdividing each cell into tetrahedra and using a linear interpolant within each tetrahedron <ref> [DK91] </ref>.
Reference: [Dur88] <author> M. J. Durst. </author> <title> Additional reference to marching cubes. </title> <journal> Computer Graphics, </journal> <volume> 22(2) </volume> <pages> 72-73, </pages> <year> 1988. </year>
Reference-contexts: The full table of the 256 possible vertex configurations can easily be generated from this table of 15 cases. The use of complementary triangulations reduces the number of base cases, but also introduces a well-know topological inconsistency on certain configurations of shared faces between cubes <ref> [Dur88] </ref>, one case of which is illustrated in Figure 3.1. A number of techniques have been proposed which offer solutions to this inconsistency, which we group into two classes.
Reference: [Gal91] <author> R. S. Gallagher. </author> <title> Span filtering: An efficient scheme for volume visualization of large finite element models. </title> <editor> In G. M. Nielson and L. Rosenblum, editors, </editor> <booktitle> Proceedings of IEEE Visualization '91, </booktitle> <pages> pages 68-75, </pages> <year> 1991. </year>
Reference-contexts: Optimizations may be performed when the isovalue is changed by a small delta. One min-max list is created for each level of a hierarchical decomposition of the min-max search space. The overall complexity remains O (n c ) in the worst case analysis. Gallagher <ref> [Gal91] </ref> describes a span filtering algorithm, in which the entire range space of the scalar function is divided into a fixed number of buckets. Cells are grouped into buckets based on the minimum value taken on by the function over the cell.
Reference: [Hai91] <author> R. Haimes. </author> <title> Techniques for interactive and interrogative scientific volumetric visualization, </title> <year> 1991. </year>
Reference-contexts: In fact, it has been observed in user studies that the majority of the time spent interacting with a visualization is in modifying the visualization parameters, not in changing the viewing parameters <ref> [Hai91] </ref>. Hence there has been great interest in improving the computational efficiency of contouring algorithms. We will focus on isocontouring of scalar fields which are defined over a piecewise cell decomposition rather than the more general case of implicit functions, although many issues cross over between the two input formats.
Reference: [HB94] <author> C. T. Howie and E. H. Blake. </author> <title> The mesh propagation algorithm for isosurface construction. </title> <journal> Computer Graphics Forum, </journal> <volume> 13(3) </volume> <pages> 65-74, </pages> <year> 1994. </year> <note> Eurographics '94 Conference issue. </note>
Reference-contexts: One issue is the efficiency of avoiding re-computation (recomputing intersection along shared edges of cells). Through regular traversal and contour propagation, information can be saved more efficiently than in a random order visitation which is required by some cell search techniques. 3.4.1 Contour Propagation Contour propagation <ref> [AFH80, HB94, IK95, BPS96] </ref> is a surface tracking method which is based on continuity of the scalar field, and hence of the isocontours derived from the field. Given a single seed cell on a connected component of a contour, the entire component is traced by breadth-first traversal through the face-adjacencies.
Reference: [IK95] <author> T. Itoh and K. Koyamada. </author> <title> Automatic isosurface propagation using an extrema graph and sorted boundary cell lists. </title> <journal> IEEE Transactions on Visualization and Computer Graphics, </journal> <volume> 1(4) </volume> <pages> 319-327, </pages> <year> 1995. </year>
Reference-contexts: For an individual isovalue, cells which fall into a given bucket need only be examined if their span extents to the bucket which contains the isovalue. In the worst case, complexity remains O (n c ). Itoh and Koyamada <ref> [IK95] </ref> compute a graph of the extrema values in the scalar field. Every connected component of an isocontour is guaranteed to intersect at least one arc in the graph. Isocontours are generated by propagating contours from a seed point detected along these arcs. <p> One issue is the efficiency of avoiding re-computation (recomputing intersection along shared edges of cells). Through regular traversal and contour propagation, information can be saved more efficiently than in a random order visitation which is required by some cell search techniques. 3.4.1 Contour Propagation Contour propagation <ref> [AFH80, HB94, IK95, BPS96] </ref> is a surface tracking method which is based on continuity of the scalar field, and hence of the isocontours derived from the field. Given a single seed cell on a connected component of a contour, the entire component is traced by breadth-first traversal through the face-adjacencies. <p> As a result, seed set approaches can be tailored to suit a wide variety of settings and applications, depending on the available resources which can be dedicated to the computation. We review a selected subset of seed set construction algorithms. 3.4.2.2 Extrema Graphs Itoh and Koyamada <ref> [IK95] </ref> introduce the use of extrema graphs for accelerating the search for isocontours. They observe that any closed contour must enclose an extremum of the scalar field, or be constant (or empty) within.
Reference: [IYK96] <author> T. Itoh, Y. Yamaguchi, and K. Koyamada. </author> <title> Volume thinning for automatic isosurface propagation. </title> <booktitle> In Proceedings of IEEE Visualization '96, </booktitle> <pages> pages 303-310, </pages> <year> 1996. </year>
Reference-contexts: Cells extracted in this search are used as seed cells for an isocontour tracking algorithm, similar to the slicing algorithm described by Speray and Kennon [SK90]. 3.4.2.3 Volume Thinning Extending the extrema graph approach, Itoh et al. <ref> [IYK96] </ref> have applied image thinning techniques to progressively remove cells from a volume mesh which are not necessary in the "skeleton" of the function.
Reference: [KCM94] <author> D. B. Karron, J. Cox, and B. Mishra. </author> <title> New findings from the SpiderWeb algorithm: Toward a digital Morse theory. </title> <booktitle> In Visualization in Biomedical Computing, </booktitle> <volume> volume 2359, </volume> <pages> pages 643-657, </pages> <year> 1994. </year>
Reference-contexts: Karron et al. <ref> [KCM94] </ref> further discuss the proper treatment of criticalities in isocontouring, proposing a digital morse theory for describing the topological transitions of isocontours of scalar fields. 5/4/1998 22:17|PAGE PROOFS for John Wiley & Sons Ltd|book Accelerated IsoContouring 11 Zhou et al. [ZCT95] make the point that a tetrahedral decomposition and linear approximation
Reference: [Ken93] <author> D. Kenwright. </author> <title> Dual stream function methods for generating three-dimensional streamlines, 1993. DATA VISUALIZATION TECHNIQUES, Edited by C. </title> <publisher> Bajaj c fl 1998 John Wiley & Sons Ltd 34 REFERENCES </publisher>
Reference-contexts: Nielson and Hamann propose generating a consistent decision on connectivity by enforcing a topology which is correct with respect to the bilinear interpolant along the face [NH91]. Kenwright derives a similar condition for disambiguating the connectivity on the faces in terms of the gradient of the bilinear interpolant <ref> [Ken93] </ref>. Natarajan further enforces consistency with the trilinear interpolant for the case of ambiguities which are interior to a cell, which occur when diagonal vertices across the body of the cell are similarly colored but have no edge-connected path of vertices of the same color between them [Nat94].
Reference: [LC87] <author> W. E. Lorensen and H. E. Cline. </author> <title> Marching cubes: A high resolution 3D surface construction algorithm. </title> <editor> In M. C. Stone, editor, </editor> <booktitle> Computer Graphics (SIG-GRAPH '87 Proceedings), </booktitle> <volume> volume 21, </volume> <pages> pages 163-169, </pages> <year> 1987. </year>
Reference-contexts: A binary classification of the 8 vertices of a regular cell leads to a total of 2 8 or 256 possible configurations. Taking rotational symmetry into account, this can been reduced to 22 distinct cases [LVG80, Sri81]. Marching Cubes <ref> [LC87] </ref> further reduces the number of base cases by assigning complementary triangulation for complementary vertex configurations (black to white), resulting in 15 distinct colorings, for which connectivity information can be assigned, as shown in Figure 3.2.
Reference: [Lor95] <author> W. E. Lorensen. </author> <title> Marching through the visible man. </title> <editor> In G. M. Nielson and D. Silver, editors, </editor> <booktitle> Proceedings of IEEE Visualization '95, </booktitle> <pages> pages 368-373, </pages> <year> 1995. </year>
Reference-contexts: 3.1 Introduction Isocontouring is a widely used approach to the visualization of scalar data and an integral component of almost every visualization environment. Computation of isocontours has applications in visualization ranging from extraction of surfaces from medical volume data <ref> [Lor95] </ref> to computation of stream surfaces for flow visualization [van93]. Inherent in the selection of an isocontour, defined as C (w) : fxjF (x) w = 0g, is that only a selected subset of the data is represented in the result.
Reference: [LSJ96] <author> Y. Livnat, H.-W. Shen, and C. R. Johnson. </author> <title> A near optimal isosurface extraction algorithm for unstructured grids. </title> <journal> IEEE Transactions on Visualization and Computer Graphics, </journal> <volume> 2(1) </volume> <pages> 73-84, </pages> <year> 1996. </year>
Reference-contexts: Preprocessing of the scalar field permits the construction of search structures which accelerate the repeated action of isocontouring, allowing for increased interactivity during modification of the isovalue. Many preprocessing approaches and search structures have been presented, which are conveniently classified (similar to the classification presented in <ref> [LSJ96] </ref>) based on whether the search is in domain space or range space. 3.3.1 Domain Search A straightforward search of the domain by enumerating all cells leads to an overhead cost of O (n c ). <p> At each level in the tree, min and max values for the cells contained in the subtree are stored, providing a means to efficiently discard large spatial regions in the search phase. An analysis presented in <ref> [LSJ96] </ref> suggests a worst-case computational complexity of O (k + k log n c k ), where k is the size of the output and n c is the number of cells. 3.3.2 Range Search A large number of search techniques in the recent literature perform the search for intersected cells <p> (x); max F (x)] There are two approaches for representing the range space, the 1D value-space, in which each range R (c) is considered as a segment, or interval, along the real line, and the 2D span-space, in which each range R (c) is considered as a point in 2D <ref> [LSJ96] </ref>, as illustrated in Figure 3.6. <p> Every connected component of an isocontour is guaranteed to intersect at least one arc in the graph. Isocontours are generated by propagating contours from a seed point detected along these arcs. Noisy data with many extrema will reduce the performance of such a strategy. Livnat et al. <ref> [LSJ96] </ref> note that in the worst case the number of arcs will be O (n c ), and hence straightforward enumeration of the arcs is equivalent in complexity to enumeration of the cells. Livnat, Shen, and Johnson describe a new approach which operates on the 2D min-max span space [LSJ96]. <p> al. <ref> [LSJ96] </ref> note that in the worst case the number of arcs will be O (n c ), and hence straightforward enumeration of the arcs is equivalent in complexity to enumeration of the cells. Livnat, Shen, and Johnson describe a new approach which operates on the 2D min-max span space [LSJ96]. The span-space representation of the cells is preprocessed using a Kd-tree, which allows O (k + p n c ) worst case query time to determine the cells which intersect the contour, where k is the size of the output. <p> Spatial Coherence We assume a minimum of C 0 continuity in our scalar field. Continuity along shared cell faces is exploited by many contouring approaches described above. The octree decomposition exploits spatial coherence in a hierarchical manner. As should be expected, the analysis in <ref> [LSJ96] </ref> reveals that the complexity gain breaks down when the spatial frequency is high, forcing large portions of the octree to be traversed. Range-Space Coherence Searches in range-space have demonstrated improved worst-case query complexity with performance which is independent of spatial frequency.
Reference: [LVG80] <author> S. Lobregt, P. W. Verbeek, and F. C. A. Groen. </author> <title> Three-dimensional skeletoniza-tion: Principle and algorithms. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 2(1) </volume> <pages> 75-77, </pages> <year> 1980. </year>
Reference-contexts: A binary classification of the 8 vertices of a regular cell leads to a total of 2 8 or 256 possible configurations. Taking rotational symmetry into account, this can been reduced to 22 distinct cases <ref> [LVG80, Sri81] </ref>. Marching Cubes [LC87] further reduces the number of base cases by assigning complementary triangulation for complementary vertex configurations (black to white), resulting in 15 distinct colorings, for which connectivity information can be assigned, as shown in Figure 3.2.
Reference: [Mat94] <author> S. V. Matveyev. </author> <title> Approximating of isosurface in the marching cube: Ambiguity problem. </title> <editor> In R. D. Bergeron and A. E. Kaufman, editors, </editor> <booktitle> Proceedings of Visualization '94, </booktitle> <pages> pages 288-292, </pages> <year> 1994. </year>
Reference-contexts: The sub-cases are indexed by the saddle point evaluations in order to determine a triangulation which is topologically consistent with the trilinear interpolant [Nat94] Matveyev further simplifies the correctness in connectivity for the case of a regular cell by avoiding the explicit computation of the saddle points <ref> [Mat94] </ref>. With the observation that the asymptotes of a saddle in a regular cell are parallel to the coordinate axes, correct connectivity can be determined by sorting the intersections along an axial direction. The nature of the bilinear interpolant ensures that pairs in the sorting will be connected.
Reference: [McC85] <author> E. M. McCreight. </author> <title> Priority search trees. </title> <journal> SIAM J. Comput., </journal> <volume> 14 </volume> <pages> 257-276, </pages> <year> 1985. </year>
Reference-contexts: that interval endpoints are taken from a small set of values (such as a limited set of the integers), the number of unique interval values is called n u . 3.3.2.2 Interval Tree An interval tree is made up of a binary tree over the set of interval min/max values <ref> [McC85] </ref>. Each internal node holds a split value s, with which intervals are compared during insertion into the tree. If the interval is entirely less than the split value it is inserted into the left subtree, while intervals greater than the split value are recursively inserted into the right subtree.
Reference: [Meh84] <author> K. Mehlhorn. </author> <title> Data Structures and Algorithms 3: Multi-dimensional Searching and Computational Geometry, </title> <booktitle> volume 3 of EATCS Monographs on Theoretical Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Heidelberg, West Germany, </address> <year> 1984. </year>
Reference-contexts: the intervals are not split in the recursive insertion, each interval is stored only twice, and the storage complexity is O (n s ). 3.3.2.3 Segment Tree A segment tree also consists of a binary search tree over the set of min and max values of all the seed cells <ref> [Meh84, Mul94] </ref>. The primary difference from the interval tree is the manner in which the segments are stored.
Reference: [MMMY96] <author> T. Moller, R. Machiraju, K. Mueller, and R. Yagel. </author> <title> Classification and local error estimation of interpolation and derivative filters for volume rendering. </title> <booktitle> In Proceedings of 1996 Symposium on Volume Visualization, </booktitle> <pages> pages 71-78, </pages> <year> 1996. </year>
Reference-contexts: However, the ability of higher degree interpolant and associated gradient estimators to accurately represent the underlying data are motivating work in this direction <ref> [MMMY96, BLM97] </ref>. 3.2.2 Connectivity The common approach of linear interpolation along cell edges is sufficient to obtain a sampling of points which lie on the surface, but the problem of connecting the points to form a surface still remains.
Reference: [MSS94] <author> C. Montani, R. Scateni, and R. Scopigno. </author> <title> Discretized marching cubes. </title> <editor> In R. D. Bergeron and A. E. Kaufman, editors, </editor> <booktitle> Proceedings of IEEE Visualization '94, </booktitle> <pages> pages 281-287, </pages> <year> 1994. </year>
Reference-contexts: As data sizes increase and relative sizes of cells decrease, the effect of interpolating along cell edges is less noticeable. Other strategies have been developed to reduce this computational portion of isocontour approximation, such as selecting midpoints along intersected edges <ref> [MSS94] </ref>.
Reference: [Mul94] <author> K. Mulmuley. </author> <title> Computational Geometry: An Introduction Through Randomized Algorithms. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1994. </year>
Reference-contexts: the intervals are not split in the recursive insertion, each interval is stored only twice, and the storage complexity is O (n s ). 3.3.2.3 Segment Tree A segment tree also consists of a binary search tree over the set of min and max values of all the seed cells <ref> [Meh84, Mul94] </ref>. The primary difference from the interval tree is the manner in which the segments are stored.
Reference: [Nat94] <author> B. K. Natarajan. </author> <title> On generating topologically consistent isosurfaces from uniform samples. </title> <journal> The Visual Computer, </journal> <volume> 11(1) </volume> <pages> 52-62, </pages> <year> 1994. </year>
Reference-contexts: Natarajan further enforces consistency with the trilinear interpolant for the case of ambiguities which are interior to a cell, which occur when diagonal vertices across the body of the cell are similarly colored but have no edge-connected path of vertices of the same color between them <ref> [Nat94] </ref>. <p> Saddle configuration w &gt; F (x s ) w &lt; F (x s ) w = F (x s ) The solution suggested by Natarajan <ref> [Nat94] </ref> is particularly attractive due to its simplicity of implementation and design to enforce consistency with the trilinear in-terpolant, a commonly used interpolant for 3D reconstruction and visualization. The situation on faces with colored vertices which are diagonally adjacent can be viewed in two dimensions as in Figure 3.3. <p> A simple extension to a traditional case table requires sub-cases only for configurations which contain saddles. The sub-cases are indexed by the saddle point evaluations in order to determine a triangulation which is topologically consistent with the trilinear interpolant <ref> [Nat94] </ref> Matveyev further simplifies the correctness in connectivity for the case of a regular cell by avoiding the explicit computation of the saddle points [Mat94].
Reference: [NH91] <author> G. M. Nielson and B. Hamann. </author> <title> The asymptotic decider: Resolving the ambiguity of marching cubes. </title> <editor> In G. M. Nielson and L. Rosenblum, editors, </editor> <booktitle> Visualization '91 Proceedings, </booktitle> <pages> pages 83-91, </pages> <year> 1991. </year>
Reference-contexts: A second class of connectivity solutions guarantee consistency on a shared face by ensuring correctness with respect to a particular data model. Nielson and Hamann propose generating a consistent decision on connectivity by enforcing a topology which is correct with respect to the bilinear interpolant along the face <ref> [NH91] </ref>. Kenwright derives a similar condition for disambiguating the connectivity on the faces in terms of the gradient of the bilinear interpolant [Ken93].
Reference: [SHLJ96] <author> H.-W. Shen, C. D. Hansen, Y. Livnat, and C. R. Johnson. </author> <title> Isosurfacing in span space with utmost efficiency. </title> <booktitle> In Visualization '96 Proceedings, </booktitle> <pages> pages 287-294, </pages> <year> 1996. </year>
Reference-contexts: It is reported that in the average case, k is the dominant factor, providing optimal average complexity. The same authors, with Hansen <ref> [SHLJ96] </ref>, have described a technique which demonstrates improved empirical results by using an L fi L lattice decomposition of the span space, in addition to allowing for parallel implementation on a distributed memory architecture.
Reference: [SJ95] <author> H.-W. Shen and C. R. Johnson. Sweeping simplices: </author> <title> A fast iso-surface extraction algorithm for unstructured grids. </title> <editor> In G. M. Nielson and D. Silver, editors, </editor> <booktitle> Proceedings of IEEE Visualization '95, </booktitle> <pages> pages 143-150, </pages> <year> 1995. </year>
Reference-contexts: For small changes in w, the active list can be updated, rather than wholly recomputed, by adding and purging new candidate cells to the active list. In the worst case, complexity remains O (n c ). Shen and Johnson <ref> [SJ95] </ref> describe the Sweeping Simplices algorithm, which builds on the min-max lists of Giles and Haimes and augments the approach with a hierarchical decomposition of the value-space.
Reference: [SK90] <author> D. Speray and S. Kennon. </author> <title> Volume probes: Interactive data exploration on arbitrary grids. </title> <booktitle> Computer Graphics (San Diego Workshop on Volume Visualization), </booktitle> <volume> 24(5) </volume> <pages> 5-12, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: Cells extracted in this search are used as seed cells for an isocontour tracking algorithm, similar to the slicing algorithm described by Speray and Kennon <ref> [SK90] </ref>. 3.4.2.3 Volume Thinning Extending the extrema graph approach, Itoh et al. [IYK96] have applied image thinning techniques to progressively remove cells from a volume mesh which are not necessary in the "skeleton" of the function.
Reference: [Sri81] <author> S. N. Srihari. </author> <title> Representation of three-dimensional digital images. </title> <journal> Computing Surveys, </journal> <volume> 13(4) </volume> <pages> 399-424, </pages> <year> 1981. </year>
Reference-contexts: A binary classification of the 8 vertices of a regular cell leads to a total of 2 8 or 256 possible configurations. Taking rotational symmetry into account, this can been reduced to 22 distinct cases <ref> [LVG80, Sri81] </ref>. Marching Cubes [LC87] further reduces the number of base cases by assigning complementary triangulation for complementary vertex configurations (black to white), resulting in 15 distinct colorings, for which connectivity information can be assigned, as shown in Figure 3.2.
Reference: [van93] <author> J. J. van Wijk. </author> <title> Implicit stream surfaces. </title> <booktitle> In Proceedings of IEEE Visualization '93, </booktitle> <pages> pages 245-252, </pages> <month> October </month> <year> 1993. </year>
Reference-contexts: 3.1 Introduction Isocontouring is a widely used approach to the visualization of scalar data and an integral component of almost every visualization environment. Computation of isocontours has applications in visualization ranging from extraction of surfaces from medical volume data [Lor95] to computation of stream surfaces for flow visualization <ref> [van93] </ref>. Inherent in the selection of an isocontour, defined as C (w) : fxjF (x) w = 0g, is that only a selected subset of the data is represented in the result.
Reference: [vGW94] <author> A. van Gelder and J. Wilhelms. </author> <title> Topological considerations in isosurface generation. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 13(4) </volume> <pages> 337-375, </pages> <year> 1994. </year>
Reference-contexts: They propose that a tetrahedral decomposition may be used, provided that intersections along the introduced diagonals are computed for the cubic function which results from sampling the trilinear function across the diagonal of a cell, rather than applying linear interpolation along all edges. Wilhelms and Van Gelder <ref> [WvG90, vGW94] </ref> provide a comprehensive review the topological considerations in extracting isosurfaces, and demonstrate that gradient heuristics applied at the vertices of a cell are necessary and sufficient to disambiguate the topology of functions which are quadratic.
Reference: [vK96] <author> M. van Kreveld. </author> <title> Efficient methods for isoline extraction from a digital elevation model based on triangulated irregular networks. </title> <journal> International Journal of Geographical Information Systems, </journal> <volume> 10 </volume> <pages> 523-540, </pages> <year> 1996. </year> <note> Also appeared as Technical Report UU-CS-1994-21, </note> <institution> University of Utrecht, the Netherlands. </institution>
Reference-contexts: With certain assumptions on the distributions of points in the span space, the worst-case query time improves to O (k + n c L + n c Several authors have recently demonstrated improved worst-case performance bounds with the use of the interval tree and segment tree data structures <ref> [BPS96, CMPS97, vK96] </ref>.
Reference: [vvB + 97] <author> M. van Kreveld, R. van Oostrum, C. L. Bajaj, V. Pascucci, and D. R. Schikore. </author> <title> Contour trees and small seed sets for isosurface traversal. </title> <booktitle> In 13th ACM Symposium on Computational Geometry, </booktitle> <pages> pages 212-220, </pages> <year> 1997. </year>
Reference-contexts: A general definition of seed sets and framework for construction of seed sets is presented in [BPS96]. 3.4.2.1 Optimal Seed Sets In <ref> [vvB + 97] </ref>, the theory of optimal seed sets is discussed, which suggests that optimal (minimal) seed sets can be constructed in time which is polynomial in the number of cells, though the cost for minimal seed sets remains prohibitive for most cases.
Reference: [WG90] <author> J. Wilhelms and A. V. Gelder. </author> <title> Octrees for faster isosurface generation extended abstract. </title> <booktitle> Computer Graphics (San Diego Workshop on Volume Visualization), </booktitle> <volume> 24(5) </volume> <pages> 57-62, </pages> <address> 1990. </address> <publisher> 5/4/1998 22:17|PAGE PROOFS for John Wiley & Sons Ltd|book REFERENCES 35 </publisher>
Reference-contexts: In the case when few cells are intersected, this overhead cost is a dominant factor, leading to inefficient computation. A spatial hierarchy for accelerating the search process is a natural approach which has been explored by Wilhelms and Van Gelder <ref> [WvG92, WG90] </ref>. For space efficiency considerations, a partial octree decomposition was developed which groups all cells at the highest level and adaptively approximates the data through axis-aligned subdivisions which better approximate the data.
Reference: [WMW86] <author> G. Wyvill, C. McPheeters, and B. Wyvill. </author> <title> Data structure for soft objects. </title> <journal> The Visual Computer, </journal> <volume> 2 </volume> <pages> 227-234, </pages> <year> 1986. </year>
Reference-contexts: Consistency may be achieved simply by subdividing each cell into tetrahedra and using a linear interpolant within each tetrahedron [DK91]. An efficient approach to consistency is to adopt a consistent decision rule, such as sampling the function at the center of the ambiguous face to determine the local topology <ref> [WMW86] </ref>. 3.2.2.2 Correct Connectivity The core of the problem along shared cell faces lies in determining the topological connectivity of vertices which are colored the same but which lie diagonally across a face or body of a cell.
Reference: [WvG90] <author> J. Wilhelms and A. van Gelder. </author> <title> Topological considerations in isosurface generation. </title> <booktitle> In Computer Graphics (San Diego Workshop on Volume Visualization), </booktitle> <pages> pages 79-86, </pages> <year> 1990. </year> <title> Published as Computer Graphics (San Diego Workshop on Volume Visualization), volume 24, number 5. [WvG92] . Octrees for faster isosurface generation. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 11(3) </volume> <pages> 201-227, </pages> <year> 1992. </year>
Reference-contexts: They propose that a tetrahedral decomposition may be used, provided that intersections along the introduced diagonals are computed for the cubic function which results from sampling the trilinear function across the diagonal of a cell, rather than applying linear interpolation along all edges. Wilhelms and Van Gelder <ref> [WvG90, vGW94] </ref> provide a comprehensive review the topological considerations in extracting isosurfaces, and demonstrate that gradient heuristics applied at the vertices of a cell are necessary and sufficient to disambiguate the topology of functions which are quadratic.
Reference: [ZCK97] <author> Y. Zhou, B. Chen, and A. Kaufman. </author> <title> Multiresolution tetrahedral framework for visualizing volume data. </title> <booktitle> In Proceedings of IEEE Visualization '97, </booktitle> <pages> pages 135-142, </pages> <month> October </month> <year> 1997. </year>
Reference-contexts: Two approaches in particular have been explored with respect to contouring of extremely large scalar fields. Zhou et al. <ref> [ZCK97] </ref> describe a hierarchical tetrahedral representation for volume data and discuss an approach to adaptive isocontouring from the multi-resolution volume representation. The hierarchy is constructed by recursive application of a set of three tetrahedron "splitting" rules. Isosurfaces can be extracted from the at a user-defined level of detail.
Reference: [ZCT95] <author> Y. Zhou, W. Chen, and Z. Tang. </author> <title> An elaborate ambiguity detection method for constructing isosurfaces within tetrahedral meshes. </title> <journal> Computers and Graphics, </journal> <volume> 19(3) </volume> <pages> 355-364, </pages> <address> 1995. </address> <publisher> 5/4/1998 22:17|PAGE PROOFS for John Wiley & Sons Ltd|book </publisher>
Reference-contexts: Karron et al. [KCM94] further discuss the proper treatment of criticalities in isocontouring, proposing a digital morse theory for describing the topological transitions of isocontours of scalar fields. 5/4/1998 22:17|PAGE PROOFS for John Wiley & Sons Ltd|book Accelerated IsoContouring 11 Zhou et al. <ref> [ZCT95] </ref> make the point that a tetrahedral decomposition and linear approximation change the function and may still result in incorrect, though consistent, topology.
References-found: 40

