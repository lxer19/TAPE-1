URL: http://www-networking.eecs.berkeley.edu/Networking/EE290Q/lecture2/lecture2.ps
Refering-URL: http://www-networking.eecs.berkeley.edu/Networking/EE290Q/course.html
Root-URL: http://www.cs.berkeley.edu
Title: EE 290Q Topics in Communication Networks Lecture Notes: 2  
Author: Remco Litjens 
Date: January 18, 1996 Preface  
Abstract: The lecture focused on worst-case resource allocation in a single-node network. In most of the lecture, a specific traffic regulator (rate controller) at the source will be assumed (leaky bucket), and the analysis will be done for the generalized processor sharing (GPS) scheduling policy. Both concepts will be defined in this report. The material is based on an article by Parekh and Gallager [2] and an article by Cruz [1]. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Cruz, R.L. </author> <year> (1995). </year> <title> Quality of Service Guarantees in Virtual Circuit Switched Networks. </title> <journal> IEEE Journal on Selected Areas in Communications, August 1995, </journal> <volume> Vol. 13, No. 6, </volume> <pages> pp. 1048-1056. </pages>
Reference: [2] <author> Parekh, Abhay K. and Gallager, Robert G. </author> <year> (1993). </year> <title> A Generalized Processor Sharing Approach to Flow Control in Integrated Services Networks: the Single-Node Case. </title> <journal> IEEE/ACM Transactions on Networking, June 1993, </journal> <volume> Vol. 1, No. 3, </volume> <pages> pp. 344-357. </pages>
Reference-contexts: The latter is generally implemented and policed using traffic regulators such as leaky buckets which shape the traffic entering the network. In the studied paper, Parekh and Gallager <ref> [2] </ref> show that the use of generalized processor sharing (GPS), when combined with leaky bucket admission control, allows the network to make a wide range of worst-case performance guarantees on throughput and delay. The analysis is done for a single-server GPS system. <p> let S i (s; t) be the amount of fluid of session i that is served by the node in time interval [s; t]: S i (s; t) depends on the workload offered by both session i (A i (0; t)) and 1 The figure, grabbed from Parekh and Gallager <ref> [2] </ref>, shows the additional constraint that fluid may not be released at a rate greater than C i &gt; i for each session i; i = 1; ; N: This constraint is not adopted in this report, nor was it assumed in the corresponding lecture. 2 the competing sessions (A j <p> So no matter how other sessions misbehave, each session is protected by this guarantee. However, Parekh and Gallager <ref> [2] </ref> prove that a tighter service curve exist, which follows from the work conserving property of the GPS policy. The result is stated in the following theorem (theorem 3 in [2]): Theorem 1 Consider a single-node network deploying a GPS scheduling discipline to allocate the available C Mbps transmission rate over <p> So no matter how other sessions misbehave, each session is protected by this guarantee. However, Parekh and Gallager <ref> [2] </ref> prove that a tighter service curve exist, which follows from the work conserving property of the GPS policy. The result is stated in the following theorem (theorem 3 in [2]): Theorem 1 Consider a single-node network deploying a GPS scheduling discipline to allocate the available C Mbps transmission rate over N users, each regulated by a leaky bucket controller with parameters ( i ; i ); i = 1; ; N; with P N i=1 i &lt; C (stability condition). <p> i (0; t s): Let for session i; t i be the bit-value of tokens left at time t plus the session i backlog at time t; we can think of t i as the maximum amount of session i backlog at time t + : Claim (lemma 10 in <ref> [2] </ref>): S i (s; t) P fC (t s) j62B s i P fC (t s) j62B g 5 The first inequality states that the amount of fluid of session i that is served is at least a fraction i = j2B j of the total amount of fluid that can <p> Finally, the fact that P j j62B j ; following from theorem 4 in Parekh and Gallager <ref> [2] </ref> and possible relabeling of sessions (not proven here but see example below), completes the proof. 2 Example 2 Fix a time t and let t be the beginning of session 1's busy period that contains t: We prove that if B = f2; ; N g; then t 1 1 <p> the proof. 2 Example 2 Fix a time t and let t be the beginning of session 1's busy period that contains t: We prove that if B = f2; ; N g; then t 1 1 ; as an example of the general case proven in Parekh and Gallager <ref> [2] </ref>. The fact that 1 62 B implies that session 1 cannot build up a queue of packets in [t; t], since more token fluid will arrive in this period then packet fluid.
Reference: [3] <author> Parekh, Abhay K. and Gallager, Robert G. </author> <year> (1994). </year> <title> A Generalized Processor Sharing Approach to Flow Control in Integrated Services Networks: the Multiple Node Case. </title> <journal> IEEE/ACM Transactions on Networking, April 1994, </journal> <volume> Vol. 2, No. 2, </volume> <pages> pp. 137-150. 6 </pages>
Reference-contexts: The analysis is done for a single-server GPS system. In the sequal to this paper (Parekh and Gallager <ref> [3] </ref>), the results are extended to arbitrary topology networks with multiple nodes (see also Lecture Notes: 3).
References-found: 3

