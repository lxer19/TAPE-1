URL: ftp://ftp.cs.umd.edu/pub/papers/papers/2997/2997.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/TR.html
Root-URL: 
Title: Split menus: Effectively using selection frequency to organize menus  
Author: Andrew Sears* Ben Shneiderman 
Keyword: General Terms: Human Factors, Design Keywords: Menus, user interface, human-computer interaction, selection frequency, experiment, split menus  
Note: CR Categories:  This authors current address is:  
Address: College Park, MD 20742  243 South Wabash Avenue, Chicago, IL 60604.  
Affiliation: Human-Computer Interaction Lab Computer Science Department Institute for Systems Research University of Maryland  DePaul University, Department of Computer Science,  
Email: sears@cs.umd.edu ben@cs.umd.edu  
Date: June 7, 1993  
Web: H.5.2  
Abstract: When some items in a menu are selected more frequently than others, as is often the case, designers or individual users may be able to speed performance and improve preference ratings by placing several high-frequency items at the top of the menu. Design guidelines for split menus were developed and applied. Split menus were implemented and tested in two in situ usability studies and a controlled experiment. In the usability studies performance times were reduced by 17 to 58% depending on the site and menus. In the controlled experiment split menus were significantly faster than alphabetic menus and yielded significantly higher subjective preferences. A possible resolution to the continuing debate among cognitive theorists about predicting menu selection times is offered. We conjecture and offer evidence that, at least when selecting items from pull-down menus, a logarithmic model applies to familiar (high-frequency) items and a linear model applies to unfamiliar (low-frequency) items. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Appl87 Apple Computer Inc., </author> <title> Human Interface Guidelines: The Apple Desktop Interface, </title> <address> Reading, MA: </address> <publisher> Addison-Wesley, </publisher> <year> 1987. </year>
Reference-contexts: This continues until all items are placed in the menu. Many guidelines documents suggest using one or more of these organizations depending on the items being displayed <ref> (Appl87, MIL91, OSF90, SmMo86, Sun90) </ref>. Additional methods of organizing items include: sequential (listed by sequence of use), functional (similar to logical), and importance (place critical items first) (Brow88, Norm91). Several studies have investigated the effects of menu organizations on user performance.
Reference: <author> Brow88 C. Marlin Brown, </author> <title> Human-Computer Interface Design Guidelines, </title> <address> Norwood, NJ: </address> <publisher> Ablex, </publisher> <year> 1988. </year>
Reference-contexts: Phone books often have an easily accessed section for frequently dialed numbers and bookcases are often organized with a section for frequently used books. Several researchers have suggested organizing menu items by how frequently they are selected <ref> (Brow88, Norm91, PaRo88, Shne92, SmMo86) </ref>. Often the advice is simply to place the most frequently selected items at the top of the menu. <p> Many guidelines documents suggest using one or more of these organizations depending on the items being displayed (Appl87, MIL91, OSF90, SmMo86, Sun90). Additional methods of organizing items include: sequential (listed by sequence of use), functional (similar to logical), and importance (place critical items first) <ref> (Brow88, Norm91) </ref>. Several studies have investigated the effects of menu organizations on user performance. Somberg compared four menu organizations: alphabetic, probability of selection, random, and positionally constant (Somb87).
Reference: <author> Card82 S. K. Card, </author> <title> User perceptual mechanisms in the search of computer command menus, </title> <booktitle> Human Factors in Computer Systems Proceedings (1982), </booktitle> <address> New York: </address> <publisher> ACM, </publisher> <pages> 190-196. </pages>
Reference-contexts: However, it does not provide a comparison between various methods of organizing items in a positionally constant menu. Card compared positionally constant alphabetical, categorical (called functional by Card), and random organizations <ref> (Card82) </ref>. Alphabetically ordered menus were the fastest and randomly ordered menus were the slowest. These results indicate that in addition to keeping menu items in fixed locations, a meaningful organization should also be used.
Reference: <author> CHWS88 J. Callahan, D. Hopkins, M. Weiser, & B. Shneiderman, </author> <title> An empirical comparison of pie versus linear menus, </title> <booktitle> Proceedings of CHI 88 (1988), </booktitle> <address> New York: </address> <publisher> ACM, </publisher> <pages> 95-100. </pages>
Reference-contexts: Other attempts at speeding menu selection have used nonlinear menus. Callahan, Hopkins, Weiser, and Shneiderman investigated the benefits of circular (pie) menus which make the distance to each item equal <ref> (CHWS88) </ref> while Walker and Smelcer explored the benefits of making menu items larger the farther down they were in a menu (WaSm90). Both of these research efforts focused on making the movement to a menu item easier and both demonstrated that this can save users time. 3.
Reference: <author> FYM90 D. Fisher, E. Yungkurth, & S. Moss, </author> <title> Optimal menu hierarchy design: Syntax and semantics, </title> <booktitle> Human Factors 32, </booktitle> <volume> 6, </volume> <pages> 665-683, </pages> <year> 1990. </year>
Reference-contexts: Fisher, Yungkurth, and Moss developed a model that accounted for different menu items being selected with different frequencies and extended previous work with the linear model to a larger variety of menus <ref> (FYM90) </ref>. 5 The first limitation of these models is that they assume that users select all menu items using the same strategy. We believe that different strategies are used depending on how familiar users are with the item being selected.
Reference: <author> GrWi85 S. Greenberg & I. H. Witten, </author> <title> Adaptive personalized interfaces: A question of viability, </title> <journal> Behaviour and Information Technology 4, </journal> <volume> 1, </volume> <year> 1985, </year> <pages> 31-45. </pages>
Reference-contexts: After practice there was no difference in performance, but users still preferred static menus. Greenberg and Whitten investigated the benefits of 3 organizing menus based on an a priori set of frequencies and updating the menu to reflect recent usage as users make selections <ref> (GrWi85) </ref>. The results suggests that organizing items by frequency and recency of use may prove useful. These two studies indicate that automatically updating menus to reflect current usage patterns may be useful, but can also lead to problems. Other attempts at speeding menu selection have used nonlinear menus. <p> This could be done by weighing recent selections more heavily <ref> (GrWi85) </ref>, or by using only the most recent selections. Strategies must be developed that can monitor selection frequencies and visually alert users to consider reordering a menu.
Reference: <author> Gree88 S. Greenberg, </author> <title> Tool use, reuse, and organization in command-driven interfaces, </title> <type> Ph.D. Dissertation, </type> <institution> Calgary, Alberta, Canada: The University of Calgary Department of Computer Science, </institution> <year> 1988, </year> <pages> 28-33. </pages>
Reference-contexts: If all items are selected with near equal frequency, minimal benefits would be expected for split menus. However, if a few items represent the majority of selections, as is often the case with computer commands <ref> (Gree88) </ref>, it is likely that split menus will improve performance. If the frequently selected items are located at the top of the traditional menu minimal benefits would be expected, but if they are at the bottom of the traditional menu, split menus should prove beneficial.
Reference: <author> LaNa85 T. K. Landauer & D. W. Nachbar, </author> <title> Selection from alphabetic and numeric menu trees using a touch screen: Breadth, depth, and width, </title> <booktitle> Proc. Human Factors in Computing Systems (April 1985), </booktitle> <address> New York: </address> <publisher> ACM SIGCHI, </publisher> <pages> 73-78. </pages>
Reference-contexts: Several models have been developed to predict the amount of time necessary to select an item from a menu. These models typically fall into one of two categories: linear or logarithmic <ref> (LaNa85, LeMa85, Norm91, PaRo86) </ref>. Linear models predict that the amount of time to select an item is a linear function of the position of the item in the menu (LeMa85).
Reference: <author> LeMa85 E. Lee & J. MacGregor, </author> <title> Minimizing User Search Time in Menu Retrieval Systems, </title> <booktitle> Human Factors 27, </booktitle> <volume> 2, </volume> <pages> 157-162, </pages> <year> 1985. </year> <title> MIL91 Department of Defense, Military Standard - Human engineering design criteria for military systems, equipment and facilities, </title> <address> MIL-STD-1472D, March 20, </address> <year> 1991. </year>
Reference-contexts: Several models have been developed to predict the amount of time necessary to select an item from a menu. These models typically fall into one of two categories: linear or logarithmic <ref> (LaNa85, LeMa85, Norm91, PaRo86) </ref>. Linear models predict that the amount of time to select an item is a linear function of the position of the item in the menu (LeMa85). <p> These models typically fall into one of two categories: linear or logarithmic (LaNa85, LeMa85, Norm91, PaRo86). Linear models predict that the amount of time to select an item is a linear function of the position of the item in the menu <ref> (LeMa85) </ref>. These models typically assume that the majority of the selection time is spent searching the menu in a linear fashion for the desired item. Logarithmic models predict that the amount of time to select an item is a logarithmic function of the position of the item in the menu.
Reference: <author> MiSh89 J. Mitchell & B. Shneiderman, </author> <title> Dynamic versus Static Menus: An exploratory comparison, </title> <journal> SIGCHI Bulletin 20, </journal> <volume> 4, </volume> <year> 1989, </year> <pages> 33-37. </pages>
Reference-contexts: Mitchell and Shneiderman compared static menus and menus that were automatically reorganized based on the users current pattern of selections and found that users preferred static menus <ref> (MiSh89) </ref>. In addition, when comparing the first exposure to the system, users were faster and made fewer errors with static menus. After practice there was no difference in performance, but users still preferred static menus.
Reference: <author> Norm91 K. Norman, </author> <title> The Psychology of Menu Selection. </title> <address> Norwood, NJ: </address> <publisher> Ablex, </publisher> <year> 1991. </year> <title> OSF90 Open Software Foundation, OSF/Motif Style Guide, </title> <address> Englewood Cliffs, NJ: </address> <publisher> Prentice Hall, </publisher> <year> 1990. </year>
Reference: <author> PaRo86 K. R. Paap & R. J. Roske-Hofstrand, </author> <title> The optimal number of menu options per panel, </title> <booktitle> Human Factors 28, </booktitle> <volume> 4, </volume> <pages> 377-385, </pages> <year> 1986. </year> <note> 21 PaRo88 K. </note> <author> R. Paap & R. J. Roske-Hofstrand, </author> <title> Design of Menus, </title> <editor> In M. Helander (Ed.), </editor> <booktitle> Handbook of Human-Computer Interaction (pp. </booktitle> <pages> 205-235). </pages> <address> Amsterdam: </address> <publisher> Elsevier Science Publishers, </publisher> <year> 1988. </year>
Reference: <author> RuHe86 R. Rubinstein & H. Hersh, </author> <title> The Human Factor: Designing Computer Systems for People. </title> <address> Burlington, MA: </address> <publisher> Digital Press, </publisher> <year> 1986. </year>
Reference-contexts: Related research People often apply frequency of use to organize objects to make frequent tasks easier. Similarly, using the frequency of actions to organize user interfaces should result in faster performance as well as improved user preference ratings <ref> (RuHe86, Sear93b) </ref>. Many menu organizations have been suggested such as alphabetical, logical, categorical, or frequency of use. Alphabetical organizations order the items based on the lexical order of item names and are one of the orderings referred to as traditional throughout this paper.
Reference: <author> Sear93a A. Sears, </author> <title> Layout Appropriateness: Guiding user interface design with simple task descriptions, </title> <type> Ph.D. Dissertation, </type> <institution> College Park, MD: The University of Maryland Computer Science Department, </institution> <year> 1993. </year>
Reference-contexts: They do not indicate how to select these high-frequency items, how to organize them at the top of the display, or what to do with the remaining items. Refining this suggestion, and applying it to menus results in split menus <ref> (Sear93a) </ref>. Split menus are created by splitting a menu into two sections. Designers or individual users may place frequently selected items in the top section and infrequently selected items in the bottom section.
Reference: <author> Sear93b A. Sears, </author> <title> Layout Appropriateness: A metric for evaluating user interface widget layout, </title> <note> 1992. To appear in: IEEE Transactions on Software Engineering. </note>
Reference: <author> Shne92 B. Shneiderman, </author> <title> Designing the User Interface. Reading, Second Edition, </title> <address> MA: </address> <publisher> Addison-Wesley, </publisher> <year> 1992. </year>
Reference: <author> SmMo86 S. L. Smith & J. N. Mosier, </author> <title> Guidelines for designing user interface software, </title> <type> Report 7 MTR-10090, </type> <institution> Bedford, MA: Mitre Corporation, </institution> <year> 1986. </year>
Reference-contexts: This can lead to faster selections, but users may feel that the menu has no obvious organization. When giving guidelines for formatting data, Smith and Mosier <ref> (SmMo86) </ref> suggested: Where some data items are used more frequently than others, consider grouping those items at the top of the display. They do not indicate how to select these high-frequency items, how to organize them at the top of the display, or what to do with the remaining items.
Reference: <author> Somb87 B. L. Somberg, </author> <title> A comparison of rule-based and positionally constant arrangements of computer menu items, </title> <booktitle> Proceedings of CHI & GI 87 (1987), </booktitle> <address> New York: </address> <publisher> ACM, </publisher> <pages> 255-260. </pages>
Reference-contexts: Additional methods of organizing items include: sequential (listed by sequence of use), functional (similar to logical), and importance (place critical items first) (Brow88, Norm91). Several studies have investigated the effects of menu organizations on user performance. Somberg compared four menu organizations: alphabetic, probability of selection, random, and positionally constant <ref> (Somb87) </ref>. However, it is important to remember that for the alphabetic, probability, and random organizations menu items changed positions between each selection making it impossible to learn the location of an item.
Reference: <author> Sun90 Sun Microsystems, Inc., </author> <title> OPEN LOOK Graphical User Interface Application Style Guidelines, </title> <address> Reading, MA: </address> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference: <author> Thor44 E. L. Thondike & I. Lorge, </author> <title> The teachers wood book of 30,000 words. </title> <address> New York: </address> <publisher> Columbia University Press, </publisher> <year> 1944. </year>
Reference-contexts: Thirty-six evenly distributed permutations (using a Latin square design) were used to determine the order in which the menu-distribution combinations were used. All menus contained fifteen items. Menu items were selected from a filtered list of the 1000 most frequently used words in printed English <ref> (Thor44) </ref>. Words that began with capital letters, contractions, and words that were less than four characters or more than eight characters were eliminated from the list of possible menu items. Every subject used nine different menus which contained a randomly selected set of fifteen words from the remaining list.
Reference: <author> WaSm90 N. Walker & J. Smelcer, </author> <title> A comparison of selection times from walking and pull-down menus, </title> <booktitle> Proceedings of CHI 90 (1990), </booktitle> <address> New York: </address> <publisher> ACM, </publisher> <pages> 221-225. 22 </pages>
Reference-contexts: Callahan, Hopkins, Weiser, and Shneiderman investigated the benefits of circular (pie) menus which make the distance to each item equal (CHWS88) while Walker and Smelcer explored the benefits of making menu items larger the farther down they were in a menu <ref> (WaSm90) </ref>. Both of these research efforts focused on making the movement to a menu item easier and both demonstrated that this can save users time. 3.
References-found: 21

