URL: http://anytime.cs.umass.edu/~jgrass/ps/ada.ps
Refering-URL: http://anytime.cs.umass.edu/~jgrass/school/papers.html
Root-URL: 
Email: -jgrass,shlomo,moss-@cs.umass.edu  
Title: Anytime Database Algorithms  
Author: Joshua Grass, Shlomo Zilberstein and Eliot Moss 
Date: December 5, 1995  
Address: Amherst, MA 01003 U.S.A.  
Affiliation: Computer Science Department University of Massachusetts  
Abstract: Optimized queries greatly increases the speed in which queries can be answered by a database. Unfortunately, query optimization is computationally expensive. Can query optimization be combined with anytime algorithm techniques to determine the amount of time to spend optimizing a query and the amount to actually spend executing the query on the database? In this paper I create a database optimizer that searches the entire space of possible logically equivalent queries and accurately estimates the cost of evaluating each query. I evaluate the results of the expected query execution time versus query optimization time and show that the resulting graphs exhibit the qualities we want out of a well-behaved anytime algorithm.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Boddy and T.L. Dean. </author> <title> Solving time-dependent planning problems. </title> <booktitle> In Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 979-984, </pages> <address> Detroit, Michigan, </address> <year> 1989. </year>
Reference: [2] <author> Johann Christoph Freytag. </author> <title> A rule-based view of query optimization. </title> <booktitle> In Proceedings ACM-SIGMOD, </booktitle> <pages> pages 173-180. </pages> <publisher> ACM, </publisher> <year> 1987. </year>
Reference: [3] <author> Goetz Graefe and David J. DeWitt. </author> <title> The exodus optimizer generator. </title> <booktitle> In Proceedings ACM-SIGMOD, </booktitle> <pages> pages 160-172. </pages> <publisher> ACM, </publisher> <year> 1987. </year>
Reference: [4] <author> Joshua Grass and Shlomo Zilberstein. </author> <title> Programming with anytime algorithms. </title> <booktitle> In Anytime Alogrithms and Deliberation Scheduling, </booktitle> <pages> pages 22-27, </pages> <address> Montreal, Canada, </address> <year> 1995. </year> <booktitle> IJCAI-95. </booktitle> <pages> 20 </pages>
Reference: [5] <author> Robert Philip Kooi. </author> <title> The Optimization of Queries in Relational Databases. </title> <type> PhD thesis, </type> <institution> Case Western Reserve University, </institution> <year> 1980. </year>
Reference-contexts: In order to give the most reliable estimates possible for join and filter nodes (other then actually doing the computation) the cost function uses histogram representations of the database to predict the number of hits <ref> [5] </ref>. Each node contains information about the database that will be output by that node. This information will generally become less and less accurate the further away a node is from a database node, where it can read this information from the database header. <p> Unit cost The cost to execute this one node. Total cost The cost to execute the child nodes and this one. Using the above node information, histograms of the databases, and the assumption that field values are independent, Kooi <ref> [5] </ref> has shown that this cost model is very accurate. The cost model is based on the number of blocks written and read during the course of the query. 3.1 Database Database nodes do not load information, and are thus not pipable. <p> deviation is small, meaning the execution savings is more predictable given an optimization time. 5 Conclusion The anytime query optimizer that I created demonstrates the six principles of a well-behaved anytime algorithm that we were looking for: 18 group of 4 database queries (right) Quality Measure The work of Kooi's <ref> [5] </ref> paper demonstrates that using histograms and given independence between variables the query cost function is very accu rate. Monotonicity The code enforces monotonicity by keeping the lowest cost query in memory in case of interrupt and for comparison with new queries.
Reference: [6] <author> Shashi Shekhar, Jaideep Srivastava, and Soumitra Dutta. </author> <title> A fromal model of tradeoff between optimization and execution costs in semantic query optimization. </title> <booktitle> In Proceedings of the 14th VLDB Conference, </booktitle> <pages> pages 457-467, </pages> <address> Los Angeles, California, </address> <year> 1988. </year>
Reference: [7] <author> Sreekumar T. Shenoy and Z. Meral Ozsoyoglu. </author> <title> A system for semantic query optimization. </title> <booktitle> In Proceedings ACM-SIGMOD, </booktitle> <pages> pages 181-195. </pages> <publisher> ACM, </publisher> <year> 1987. </year>
Reference: [8] <author> S. Zilberstein. </author> <title> Operational Rationality through Compilation of Anytime Algorithms. </title> <type> PhD thesis, </type> <institution> University of Califonia, Berkeley, </institution> <year> 1993. </year> <note> also Technical Report No. CSD-93-743, Available on-line at http://anytime.cs.umass.edu/~shlomo. </note>
Reference-contexts: Not only because the properties themselves are useful, but also because then the performance profile of the query optimization engine could be combined with the performance profiles of functions that use the database results <ref> [11, 8] </ref>. We could then use an anytime database query engine 1 as a component in more complex anytime systems. A well behaved anytime algorithm has a number of properties: 1. Quality measure: An anytime algorithm must return results that have a measurable quality. 2.
Reference: [9] <author> S. Zilberstein and S. J. Russell. </author> <title> Efficient resource-bounded reasoning in at-ralph. </title> <booktitle> In Proceedings of the First International Conference on AI Planning Systems, </booktitle> <pages> pages 260-266, </pages> <address> College Park, Maryland, </address> <year> 1992. </year>
Reference: [10] <author> S. Zilberstein and S. J. Russell. </author> <title> Anytime sensing, planning and action: A practical model for robot control. </title> <booktitle> In Proceedings of the Thirteenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1402-1407, </pages> <address> Chambery, France, </address> <year> 1993. </year>
Reference: [11] <author> S. Zilberstein and S. J. Russell. </author> <title> Optimal composition of real-time systems. </title> <journal> Artificial Intelligence, </journal> <year> 1995. </year> <month> 21 </month>
Reference-contexts: Not only because the properties themselves are useful, but also because then the performance profile of the query optimization engine could be combined with the performance profiles of functions that use the database results <ref> [11, 8] </ref>. We could then use an anytime database query engine 1 as a component in more complex anytime systems. A well behaved anytime algorithm has a number of properties: 1. Quality measure: An anytime algorithm must return results that have a measurable quality. 2.
References-found: 11

