URL: http://www.cs.virginia.edu/~mtl8c/icc97.ps
Refering-URL: http://www.cs.virginia.edu/~mtl8c/
Root-URL: http://www.cs.virginia.edu
Title: MESH: Distributed Error Recovery for Multimedia Streams in Wide-Area Multicast Networks  
Author: Matthew T. Lucas Bert J. Dempsey Alfred C. Weaver 
Keyword: Key Words: Multicast, Multimedia, Error Control, Retransmission, Forward Error Correction.  
Note: Corresponding Author, Paper  
Address: Charlottesville, VA 22903  Manning Hall, Campus Box 3360  Library Science  Chapel Hill, NC 27599-3360  
Affiliation: Department of Computer Science University of Virginia  Presenter  School of Information and  University of North Carolina at Chapel Hill  
Email: fmatt,weaverg@Virginia.EDU  bert@ils.unc.edu  
Phone: Voice: 919-962-8066 FAX: 919-962-8071  
Abstract: This paper addresses support for multi-party multimedia applications delivered across data-gram wide-area networks such as the Internet. Our approach is to develop a novel endsystem protocol framework, MESH, that protects delay-sensitive multicast data streams against network delays and errors. The MESH approach partitions the multicast group into subgroups, elects subgroup managers called active receivers, and localizes error recovery between active receivers. Novel features of our protocol include an explicit model for delay-sensitive retransmission, run-time evaluation at the active receiver to determine its retransmission partner, and the ability to handle multiple multicast data sources without building a per-source control framework. To evaluate the performance and network costs of MESH, a wide-area network simulation of digital video distribution is constructed and studied over a range of network loss rates. Simulation experiments show that both MESH and an alternative scheme, end-to-end forward error correction, provide excellent error control with MESH incurring significantly less network overhead. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Biersack. </author> <title> Performance Evaluation of Forward Error Correction in ATM Networks. </title> <journal> ACM SIGCOMM '92, </journal> <volume> 22(4) </volume> <pages> 248-258, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: For network packet loss, redundancy-based error control, or Forward Error Correction (FEC), offers a low latency solution to compensating for some losses but at the cost of consuming additional network bandwidth <ref> [1] </ref>. While source-driven retransmission protocols do not scale to large networks and large receiver sets, recent fully reliable multicasting protocols introduce a hierarchy of special multicast receivers that handle retransmissions locally and relay control information back to the source. <p> Reed-Solomon codes add h redundant packets to n data packets <ref> [1] </ref>. If any n of the n + h packets are received, then the original data can be recovered. In our simulation experiments, H redundant packets are added to each group of packets from N frames, denoted here as a FEC (N :H) encoding.
Reference: [2] <author> J. Bolot, T. Turletti, and I. Wakeman. </author> <title> Scalable Feedback Control for Multicast Video Distribution in the Internet. </title> <journal> ACM SIGCOMM '94, </journal> <volume> 24(4) </volume> <pages> 58-67, </pages> <month> September </month> <year> 1994. </year>
Reference-contexts: Buffering on the receiver side protects playback from disruptions due to packet delay variations, packet jitter. Receiver feedback techniques <ref> [2] </ref> have been shown effective in matching application data rates with long-term fluctuations in the available network bandwidth. For network packet loss, redundancy-based error control, or Forward Error Correction (FEC), offers a low latency solution to compensating for some losses but at the cost of consuming additional network bandwidth [1].
Reference: [3] <author> Jo-Mei Chang and N. F. Maxemchuk. </author> <title> Reliable Broadcast Protocols. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 2(3) </volume> <pages> 251-273, </pages> <month> August </month> <year> 1984. </year>
Reference: [4] <author> Bert J. Dempsey, Jorg Liebeherr, and Alfred C. Weaver. </author> <title> On Retransmission-Based Error Control for Continuous Media Traffic in Packet-Switching Networks. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 28 </volume> <pages> 719-736, </pages> <year> 1996. </year>
Reference-contexts: However, the retransmission approaches employed are largely inappropriate for multimedia applications since the temporal constraints of continuous media are not considered. A deadline-driven model for retransmission-based error recovery of continuous media data is developed in <ref> [4] </ref>. The slack retransmission request (S-ARQ) scheme extends the initial buffering at the receiver (the slack time) to enable receivers to recover some lost messages via retransmission. drops the second voice packet in a talkspurt. <p> Upon detecting the lost packet (as triggered by the reception of an out-of-order packet), the receiver initiates a retransmission request and recovers the data prior to its playback deadline. S-ARQ has been shown to perform well for point-to-point multimedia applications in a high performance network environment <ref> [4] </ref>. However, S-ARQ as described above will not scale to large multicast groups because the source must process every retransmission request for the entire group.
Reference: [5] <author> Sally Floyd, Van Jacobson, Ching-Gung Liu, Steven McCanne, and Lixia Zhang. </author> <title> Reliable Multicast Framework for Light-weight Sessions and Application Level Framing. </title> <booktitle> In ACM Sigcomm '95, </booktitle> <pages> pages 342-356, </pages> <address> Cambridge, Massachusetts, </address> <month> September </month> <year> 1995. </year>
Reference: [6] <author> Hugh W. Holbrook, Sandeep K. Singhal, and David R. Cheriton. </author> <title> Log-Based Receiver-Realiable Multicast for Distributed Interactive Simulation. </title> <booktitle> In Proc. Sigcomm '95, </booktitle> <pages> pages 328-341, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: This dynamic control structure enables adaptation to network traffic dynamics and exploitation of multiple physical paths in the wide-area topology, in contrast with static hierarchical control as in <ref> [6, 7] </ref>, and finally (3) MESH is also explicitly designed to work with multiple multicast data sources without building a per-source control framework. The remainder of this paper is structured as follows. Section 2 covers related work and describes the MESH protocol. <p> However, the CM protocol and its derivatives are based on a centralized design which does not scale to large groups [8]. Holbrook <ref> [6] </ref>, Paul [7] and Yavatkar [10] use a distributed protocol design for achieving single source, reliable data distribution. These protocols strategically distribute special nodes called designated receivers (DRs) throughout the multicast group. <p> While these performance and cost advantages come at the expense of protocol complexity within endsystems, we believe the MESH design will inherently limit this complexity. In particular, MESH avoids the overhead of setting up and maintaining per-source control trees, in contrast to several other distributed multicast error control schemes <ref> [6, 7, 10] </ref>. Furthermore, as compared with these tree-based schemes, the MESH design is more robust to active receiver failures, adapts more readily to network congestion, and is well-suited for multiple sources.
Reference: [7] <author> John C. Lin and Sanjoy Paul. RMTP: </author> <title> A Reliable Multicast Transport Protocol. </title> <booktitle> In To Appear in Proc. IEEE Infocom '96, </booktitle> <pages> pages 1414-1424, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: This dynamic control structure enables adaptation to network traffic dynamics and exploitation of multiple physical paths in the wide-area topology, in contrast with static hierarchical control as in <ref> [6, 7] </ref>, and finally (3) MESH is also explicitly designed to work with multiple multicast data sources without building a per-source control framework. The remainder of this paper is structured as follows. Section 2 covers related work and describes the MESH protocol. <p> However, the CM protocol and its derivatives are based on a centralized design which does not scale to large groups [8]. Holbrook [6], Paul <ref> [7] </ref> and Yavatkar [10] use a distributed protocol design for achieving single source, reliable data distribution. These protocols strategically distribute special nodes called designated receivers (DRs) throughout the multicast group. <p> While these performance and cost advantages come at the expense of protocol complexity within endsystems, we believe the MESH design will inherently limit this complexity. In particular, MESH avoids the overhead of setting up and maintaining per-source control trees, in contrast to several other distributed multicast error control schemes <ref> [6, 7, 10] </ref>. Furthermore, as compared with these tree-based schemes, the MESH design is more robust to active receiver failures, adapts more readily to network congestion, and is well-suited for multiple sources.
Reference: [8] <author> Sridhar Pingali, Don Towsley, and James F. Kurose. </author> <title> A Comparison of Sender-Initiated and Receiver-Initiated Reliable Multicast Protocols. </title> <booktitle> In Proc. 1994 ACM Sigmetrics and Performance `94, </booktitle> <pages> pages 221-230, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: Section 4 gives our conclusions and discusses future work. 2 Distributed Retransmission Error Recovery Chang and Maxemchuck (CM)[3] present the pioneer work on fully reliable multicast transport protocol design. However, the CM protocol and its derivatives are based on a centralized design which does not scale to large groups <ref> [8] </ref>. Holbrook [6], Paul [7] and Yavatkar [10] use a distributed protocol design for achieving single source, reliable data distribution. These protocols strategically distribute special nodes called designated receivers (DRs) throughout the multicast group.
Reference: [9] <author> H. Schulzrinne, S. Casner, R. Frederick, and V. Jacobson. RTP: </author> <title> A Transport Protocol for Real-Time Applications. </title> <type> Technical Report draft-ietf-avt-rtp-06, </type> <institution> Internet Engineering Task Force (IETF), </institution> <month> November </month> <year> 1994. </year>
Reference-contexts: Note that the advertisement protocol can be easily implemented using an existing protocol definition, e.g. RTP <ref> [9] </ref>. The structure of an advertisement packet is shown in Figure 2.
Reference: [10] <author> R. Yavatkar, James Friffioen, and Madhu Sudan. </author> <title> A Reliable Dissemination Protocol for Interactive Collaborative Applications. </title> <booktitle> ACM Multimedia 1995, </booktitle> <pages> pages 333-343, </pages> <month> November </month> <year> 1995. </year>
Reference-contexts: However, the CM protocol and its derivatives are based on a centralized design which does not scale to large groups [8]. Holbrook [6], Paul [7] and Yavatkar <ref> [10] </ref> use a distributed protocol design for achieving single source, reliable data distribution. These protocols strategically distribute special nodes called designated receivers (DRs) throughout the multicast group. By hierarchically organizing DRs and endsystems, errors can be recovered locally between DRs and Lucas, MESH: Distributed Error Recovery 2 their children. <p> During the multicast data transfer, each AR dynamically discovers neighboring ARs with which it may perform retransmissions. Discovery takes place through an advertisement protocol run at each AR, thus avoiding the overhead of setting up and maintaining static control hierarchies, e.g. as in <ref> [10] </ref>. For non-local losses, an AR runs the retransmission protocol and unicasts a retransmission request to a remote AR. If an AR receives a retransmission request and has a copy of the data, it immediately unicasts the data to the requesting AR. <p> While these performance and cost advantages come at the expense of protocol complexity within endsystems, we believe the MESH design will inherently limit this complexity. In particular, MESH avoids the overhead of setting up and maintaining per-source control trees, in contrast to several other distributed multicast error control schemes <ref> [6, 7, 10] </ref>. Furthermore, as compared with these tree-based schemes, the MESH design is more robust to active receiver failures, adapts more readily to network congestion, and is well-suited for multiple sources.
References-found: 10

