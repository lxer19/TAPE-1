URL: http://www-sal.cs.uiuc.edu/~nachum/papers/mitra-report-text.ps.gz
Refering-URL: http://sal.cs.uiuc.edu/~nachum/papers/
Root-URL: http://www.cs.uiuc.edu
Email: mitra@vnet.ibm.com  nachum@cs.uiuc.edu  
Phone: Phone [+1] 408-463-4276  Phone [+1] 217-333-4219  
Title: Matching and Unification in Rewrite Theories required for pattern application in pattern-directed languages, while decidable
Author: Subrata Mitra Nachum Dershowitz 
Note: Decidable matching is  
Date: January 1996  
Address: 555 Bailey Avenue, San Jose, CA 95141  Urbana, IL 61801, U.S.A.  
Affiliation: Application Development Technology Institute IBM Software Solutions Division  Department of Computer Science University of Illinois  
Abstract: Semantic unification" is the process of generating a basis set of substitutions (of terms for variables) that makes two given terms equal in a specified theory. Semantic unification is an important component of some theorem provers. "Semantic matching," a simpler variant of unification, where the substitution is made in only one of the terms, has potential usage in programming language interpreters. In this paper we restrict ourselves to matching and unification problems in theories that can be presented as convergent rewrite systems, that is, finite sets of equations that compute unique output values when applied (from left-to-right) to input values. The new results presented here, together with existing results, provide a much finer characterization of decidable matching and unification than was available before. 
Abstract-found: 1
Intro-found: 1
Reference: [ Aguzzi and Modigliani, 1994 ] <author> G. Aguzzi and U. Modigliani. </author> <title> A Criterion to Decide the Semantic Matching Problem. </title> <booktitle> In Proceedings of the International Conference on Logic and Algebra (in memory of Prof. </booktitle> <address> Magari), Italy, </address> <year> 1995. </year>
Reference-contexts: One difference between the two characterizations is that the current theorem uses the syntactic property of depth, while the one from [Dershowitz et al., 1992] used a semantic property of decreasing functions. Recently <ref> [Aguzzi and Modigliani, 1994] </ref> have extended the de-cidability criterion of [Dershowitz et al., 1992] by introducing the notion of P-increase (P-non-decrease) to replace increase (non-decrease), using which one could talk about the positional increase (non-decrease) of a suitable property like depth, with recursive calls (rather than use the property on an
Reference: [ Bockmayr, 1987 ] <author> A. Bockmayr. </author> <title> A Note on a Canonical Theory with Undecidable Unification and Matching Problem. </title> <journal> Journal of Automated Reasoning, </journal> <volume> Vol 3, </volume> <pages> pages 379-381, </pages> <year> 1987. </year>
Reference-contexts: It is well-known that any 2 strategy for finding a complete set of unifiers, or of matchings, for two terms, with respect to a given theory, may not terminate, even when the theory is presented as a finite and convergent (terminating and confluent) set of rewrite rules; see, for example, <ref> [Heilbrunner and Holldobler, 1987; Bockmayr, 1987] </ref>. On the other hand, for some special classes of theories| associativity, for instance|semantic unification is decidable. In this paper, we are interested in unification and matching in theories that have a convergent presentation. <p> In this section, we use these restrictions to characterize decidability of matching and unification problems with convergent rewrite systems. The known results (including the new ones presented in this section) are summarized in Table 1. Some explanations are Restriction Decidable Some References None no <ref> [Bockmayr, 1987] </ref> and others Linear no [Heilbrunner and Holldobler, 1987] Left-linear no [Dershowitz and Jouannaud, 1990], also as an out come of [Heilbrunner and Holldobler, 1987] Right-linear no as an outcome of [Heilbrunner and Holldobler, 1987] Left-flat yes [Christian, 1992] Right-flat no Theorems 1 and 2 Flat yes as an outcome
Reference: [ Christian, 1992 ] <author> J. Christian. </author> <title> Some Termination Criteria for Narrowing and E-Narrowing. </title> <booktitle> In Proceeding of the Eleventh International Conference on Automated Deduction, </booktitle> <address> Saratoga Springs, New York, </address> <month> June </month> <year> 1992. </year> <booktitle> Volume 607, </booktitle> <pages> pages 582-588, </pages> <booktitle> of Lecture Notes in Artificial Intelligence, </booktitle> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Some explanations are Restriction Decidable Some References None no [Bockmayr, 1987] and others Linear no [Heilbrunner and Holldobler, 1987] Left-linear no [Dershowitz and Jouannaud, 1990], also as an out come of [Heilbrunner and Holldobler, 1987] Right-linear no as an outcome of [Heilbrunner and Holldobler, 1987] Left-flat yes <ref> [Christian, 1992] </ref> Right-flat no Theorems 1 and 2 Flat yes as an outcome of [Christian, 1992] Table 1: Results on unification and matching in order: * Each row of the table defines a new class of rewrite systems, by pre senting the additional restrictions, over and above convergence. * For each <p> and others Linear no [Heilbrunner and Holldobler, 1987] Left-linear no [Dershowitz and Jouannaud, 1990], also as an out come of [Heilbrunner and Holldobler, 1987] Right-linear no as an outcome of [Heilbrunner and Holldobler, 1987] Left-flat yes <ref> [Christian, 1992] </ref> Right-flat no Theorems 1 and 2 Flat yes as an outcome of [Christian, 1992] Table 1: Results on unification and matching in order: * Each row of the table defines a new class of rewrite systems, by pre senting the additional restrictions, over and above convergence. * For each of the cases listed above, both matching and unification problems have the same property <p> It is possible to combine the two requirements: For left-flat systems there is no requirement on linearity of any kind in the proof given in <ref> [Christian, 1992] </ref>; thus, the problems are decidable for left-flat non-linear systems. On the contrary, the counterexample in Theorem 2 is of a linear system with flat right-hand sides. Therefore, even for linear right-flat systems, the matching and unification problems continue to be undecidable. <p> in either direction, it is intuitive to use the restriction on both sides.) The resulting theories are simpler than the ones for convergent systems with flat right-hand sides (in fact, they bear similarity to the systems that are convergent and left-flat, for which a positive result was 16 proved in <ref> [Christian, 1992] </ref>). Other characterizations of decidable unifica-tion appear in [Kapur and Narendran, 1987] (every right-hand side of a rule must be a proper subterm of the corresponding left-hand side) and [Hullot, 1980] (every right-hand side must be a variable or a ground term).
Reference: [ Comon, 1992 ] <author> H. Comon. </author> <title> On unification of terms with integer exponents. </title> <type> Technical Report 770, </type> <institution> Universite de Paris-Sud, Laboratoire de Recherche en Informatique, </institution> <year> 1992. </year>
Reference-contexts: Unfortunately, none of these systems are powerful enough to capture truly recursive functions. Decidability results for unification in convergent systems was extended in [Dershowitz and Mitra, 1993], where the problems considered could potentially have infinite solutions, which were captured as indexed terms, along the lines of <ref> [Comon, 1992] </ref>. The main difference between the requirements of the result from [Dershowitz and Mitra, 1993] and the one presented here is that we allow multiple flat terms with defined functions as right-hand sides for rules defining a given function.
Reference: [ Comon et al., 1991 ] <author> H. Comon, M. Haberstrau, and J.-P. Jouannaud. </author> <title> Decidable problems in shallow equational theories. </title> <type> Technical Report 718, </type> <institution> Universite de Paris-Sud, Laboratoire de Recherche en Informa-tique, </institution> <month> December </month> <year> 1991. </year>
Reference: [ Dershowitz and Sivakumar, 1987 ] <author> N. Dershowitz and G. Sivakumar. </author> <title> Solving goals in equational languages. </title> <editor> In S. Kaplan and J.-P. Jouan-naud, editors, </editor> <booktitle> Proceedings of the First International Workshop on Conditional Term Rewriting Systems, </booktitle> <pages> pages 45-55, </pages> <address> Orsay, France, </address> <month> July </month> <year> 1987. </year> <title> Vol. </title> <booktitle> 308 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin (1988). </address>
Reference: [ Dershowitz and Jouannaud, 1990 ] <author> N. Dershowitz and J.-P. Jouannaud. </author> <title> Rewrite systems. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, chapter 6, </booktitle> <pages> pages 243-320, </pages> <publisher> North-Holland, </publisher> <address> Ams-terdam, </address> <year> 1990. </year>
Reference-contexts: The only decidability proof of this paper would use a well-founded ordering to show that a complete procedure for the required problem is also terminating. We use standard terminology and notations about rewrite systems. Missing definitions can be found in <ref> [Dershowitz and Jouannaud, 1990] </ref>, which is a survey of the field. <p> The known results (including the new ones presented in this section) are summarized in Table 1. Some explanations are Restriction Decidable Some References None no [Bockmayr, 1987] and others Linear no [Heilbrunner and Holldobler, 1987] Left-linear no <ref> [Dershowitz and Jouannaud, 1990] </ref>, also as an out come of [Heilbrunner and Holldobler, 1987] Right-linear no as an outcome of [Heilbrunner and Holldobler, 1987] Left-flat yes [Christian, 1992] Right-flat no Theorems 1 and 2 Flat yes as an outcome of [Christian, 1992] Table 1: Results on unification and matching in order:
Reference: [ Dershowitz et al., 1990 ] <author> N. Dershowitz, S. Mitra and G. Sivakumar. </author> <title> Equation solving in conditional AC-theories. </title> <booktitle> In Proceedings of the Second International Conference on Algebraic and Logic Programming, Nancy, France, 1990. </booktitle> <volume> Volume 463, </volume> <pages> pages 283-297, </pages> <booktitle> of Lecture Notes in Computer Science, </booktitle> <publisher> Springer Verlag. </publisher> <pages> 18 </pages>
Reference: [ Dershowitz et al., 1992 ] <author> N. Dershowitz, S. Mitra, and G. Sivakumar. </author> <title> Decidable matching for convergent systems. </title> <booktitle> In Proceedings of the Eleventh Conference on Automated Deduction, </booktitle> <pages> pages 589-602, </pages> <address> Saratoga Springs, NY, </address> <month> June </month> <year> 1992. </year> <title> Vol. </title> <booktitle> 607 of Lecture Notes in Artificial Intelligence, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin. </address>
Reference-contexts: If all right-hand sides for rules in R are either variables, or have a constructor at the root, and all right-hand sides are such that no defined function is nested below any decreasing function, then the semantic matching problem is decidable for R. Furthermore, it was shown, in <ref> [Dershowitz et al., 1992] </ref>, that each of the restrictions listed in Proposition 4 is necessary to have decidable matching. In the same spirit, we have Theorem 5 for left-linear systems. For this theorem, we will assume that constants and variables have depth one: Theorem 5. <p> (x; y); z) We now show that each of the restrictions used in Theorem 5 is necessary for decidability: If we drop the requirement of left-linearity, then we could get undecidability, essentially, by encoding the more general unification problem in left-linear systems as a matching problem (see Section 4 of <ref> [Dershowitz et al., 1992] </ref> for examples). In the remaining cases, we show that matching of certain goals would result in unification in the theories of 12 addition (+) and multiplication (fl). (Notice that the definitions of + and fl in Example 3 obey all the syntactic restrictions of Theorem 5. <p> In fact, we have shown, by way of counterexamples, that matching becomes undecidable (as it usually 15 is) when any of the conditions that we have proposed is weakened. The result is similar in spirit to one given in <ref> [Dershowitz et al., 1992] </ref> which was for restricted non-erasing systems. <p> One difference between the two characterizations is that the current theorem uses the syntactic property of depth, while the one from <ref> [Dershowitz et al., 1992] </ref> used a semantic property of decreasing functions. Recently [Aguzzi and Modigliani, 1994] have extended the de-cidability criterion of [Dershowitz et al., 1992] by introducing the notion of P-increase (P-non-decrease) to replace increase (non-decrease), using which one could talk about the positional increase (non-decrease) of a suitable property <p> One difference between the two characterizations is that the current theorem uses the syntactic property of depth, while the one from <ref> [Dershowitz et al., 1992] </ref> used a semantic property of decreasing functions. Recently [Aguzzi and Modigliani, 1994] have extended the de-cidability criterion of [Dershowitz et al., 1992] by introducing the notion of P-increase (P-non-decrease) to replace increase (non-decrease), using which one could talk about the positional increase (non-decrease) of a suitable property like depth, with recursive calls (rather than use the property on an entire function).
Reference: [ Dershowitz and Mitra, 1993 ] <author> N. Dershowitz and S. Mitra. </author> <title> Higher-order and semantic unification. </title> <booktitle> In Proceedings of the Thirteenth International Conference on Foundations of Software Technology and Theoretical Computer Science, Bombay, India, 1993. </booktitle> <volume> Volume 761, </volume> <pages> pages 139-150, </pages> <booktitle> of Lecture Notes in Computer Science, </booktitle> <publisher> Springer Verlag. </publisher>
Reference-contexts: However, rewrite systems with flat left-hand sides are truly restrictive, and do not allow any recursively defined functions. 5 * Although linearity and flat right-hand sides do not guarantee decid--ability (as illustrated in the proof of Theorem 2), a further restriction does <ref> [Dershowitz and Mitra, 1993] </ref>. <p> Unfortunately, none of these systems are powerful enough to capture truly recursive functions. Decidability results for unification in convergent systems was extended in <ref> [Dershowitz and Mitra, 1993] </ref>, where the problems considered could potentially have infinite solutions, which were captured as indexed terms, along the lines of [Comon, 1992]. The main difference between the requirements of the result from [Dershowitz and Mitra, 1993] and the one presented here is that we allow multiple flat terms <p> Decidability results for unification in convergent systems was extended in <ref> [Dershowitz and Mitra, 1993] </ref>, where the problems considered could potentially have infinite solutions, which were captured as indexed terms, along the lines of [Comon, 1992]. The main difference between the requirements of the result from [Dershowitz and Mitra, 1993] and the one presented here is that we allow multiple flat terms with defined functions as right-hand sides for rules defining a given function. <p> For instance, the definition of eq, in Example 2, used two rules, each of which has eq (a defined function) on its right-hand side, which would not be allowed by <ref> [Dershowitz and Mitra, 1993] </ref>. 17
Reference: [ Fay, 1979 ] <author> M. Fay. </author> <title> First-order unification in an equational theory. </title> <booktitle> In Proceedings of the Fourth Workshop on Automated Deduction, </booktitle> <pages> pages 161-167, </pages> <address> Austin, TX, </address> <month> February </month> <year> 1979. </year>
Reference: [ Gallier and Snyder, 1990 ] <author> J. Gallier and W. Snyder. </author> <title> Complete set of transformations for general E-unification. </title> <journal> Theoretical Computer Science, </journal> <volume> 67 </volume> <pages> 203-260, </pages> <year> 1990. </year>
Reference: [ Heilbrunner and Holldobler, 1987 ] <author> S. Heilbrunner and S. Holldobler. </author> <title> The undecidability of the unification and matching problem for canonical theories. </title> <journal> Acta Informatica, </journal> <volume> 24(2) </volume> <pages> 157-171, </pages> <month> April </month> <year> 1987. </year>
Reference-contexts: It is well-known that any 2 strategy for finding a complete set of unifiers, or of matchings, for two terms, with respect to a given theory, may not terminate, even when the theory is presented as a finite and convergent (terminating and confluent) set of rewrite rules; see, for example, <ref> [Heilbrunner and Holldobler, 1987; Bockmayr, 1987] </ref>. On the other hand, for some special classes of theories| associativity, for instance|semantic unification is decidable. In this paper, we are interested in unification and matching in theories that have a convergent presentation. <p> The known results (including the new ones presented in this section) are summarized in Table 1. Some explanations are Restriction Decidable Some References None no [Bockmayr, 1987] and others Linear no <ref> [Heilbrunner and Holldobler, 1987] </ref> Left-linear no [Dershowitz and Jouannaud, 1990], also as an out come of [Heilbrunner and Holldobler, 1987] Right-linear no as an outcome of [Heilbrunner and Holldobler, 1987] Left-flat yes [Christian, 1992] Right-flat no Theorems 1 and 2 Flat yes as an outcome of [Christian, 1992] Table 1: Results <p> The known results (including the new ones presented in this section) are summarized in Table 1. Some explanations are Restriction Decidable Some References None no [Bockmayr, 1987] and others Linear no <ref> [Heilbrunner and Holldobler, 1987] </ref> Left-linear no [Dershowitz and Jouannaud, 1990], also as an out come of [Heilbrunner and Holldobler, 1987] Right-linear no as an outcome of [Heilbrunner and Holldobler, 1987] Left-flat yes [Christian, 1992] Right-flat no Theorems 1 and 2 Flat yes as an outcome of [Christian, 1992] Table 1: Results on unification and matching in order: * Each row of the table defines a new class <p> Some explanations are Restriction Decidable Some References None no [Bockmayr, 1987] and others Linear no <ref> [Heilbrunner and Holldobler, 1987] </ref> Left-linear no [Dershowitz and Jouannaud, 1990], also as an out come of [Heilbrunner and Holldobler, 1987] Right-linear no as an outcome of [Heilbrunner and Holldobler, 1987] Left-flat yes [Christian, 1992] Right-flat no Theorems 1 and 2 Flat yes as an outcome of [Christian, 1992] Table 1: Results on unification and matching in order: * Each row of the table defines a new class of rewrite systems, by pre senting the additional restrictions, over <p> Proof. We show that the undecidable problem of emptyness of the intersection of two simple context-free languages can be encoded as a matching goal using a rewrite system with the given restrictions. See <ref> [Heilbrunner and Holldobler, 1987] </ref> for the definition of a simple context free language, and a construction which motivated the following example: Example 1. <p> We need two rules for any general production (unlike <ref> [Heilbrunner and Holldobler, 1987] </ref>) in order to ensure that the right hand sides of rules are flat. <p> grammars, i.e, c (f (F $; x; z); g (G$; x 0 ; z)) ! c (f ($; $; $); g ($; $; $)) if and only if z 2 F and z 2 G: Since it is undecidable if the intersection of two simple context free languages is empty <ref> [Heilbrunner and Holldobler, 1987] </ref>, matching (and therefore unification) in such a rewrite system is also undecidable. The proof of termination and confluence of the rewrite system with defined functions f and g can be done based on observations about production rules of a simple grammar in GNF.
Reference: [ Holldobler, 1987 ] <author> S. Holldobler. </author> <title> A unification algorithm for confluent theories. </title> <booktitle> In Proceedings of the Fourteenth EATCS International Colloquium on Automata, Languages, and Programming, </booktitle> <pages> pages 31-41, </pages> <address> Kalsruhe, West Germany, </address> <month> July </month> <year> 1987. </year> <title> Vol. </title> <booktitle> 267 in Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference: [ Hopcroft and Ullman, 1979 ] <author> J. E. Hopcroft and J. D. Ullman. </author> <title> Introduction to automata theory, languages and computation. </title> <publisher> Addison Wesley, </publisher> <year> 1979. </year>
Reference-contexts: There is no decision procedure for the unification or matching problem in a (left- and right-) linear convergent rewrite system, in which every right-hand side is flat. Proof. We show that semantic unification in such theories can be used to simulate the undecidable Post's Correspondence Problem (PCP, <ref> [Hopcroft and Ullman, 1979] </ref>). 7 An instance of PCP consists of two lists A = w 1 ; : : :; w k and B = x 1 ; : : : ; x k , of strings over some alphabet . <p> Therefore, a decision procedure for matching (and thus unification) in such rewrite systems could be used to decide the Post's Correspondence Problem, which is impossible <ref> [Hopcroft and Ullman, 1979] </ref>. 3 A Complete Matching Procedure For convergent systems, the unification (and therefore matching) problem is recursively enumerable. In other words, there exists a procedure that can find a unifier (match) whenever one exists.
Reference: [ Hullot, 1980 ] <author> J.-M. Hullot. </author> <title> Canonical forms and unification. </title> <editor> In R. Kowal-ski, editor, </editor> <booktitle> Proceedings of the Fifth International Conference on Automated Deduction, </booktitle> <pages> pages 318-334, </pages> <address> Les Arcs, France, </address> <month> July </month> <year> 1980. </year> <title> Vol. </title> <booktitle> 87 of Lecture Notes in Computer Science, </booktitle> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference-contexts: Other characterizations of decidable unifica-tion appear in [Kapur and Narendran, 1987] (every right-hand side of a rule must be a proper subterm of the corresponding left-hand side) and <ref> [Hullot, 1980] </ref> (every right-hand side must be a variable or a ground term). Unfortunately, none of these systems are powerful enough to capture truly recursive functions.
Reference: [ Jouannaud and Kirchner, 1991 ] <author> J.-P. Jouannaud and C. Kirchner. </author> <title> Solving equations in abstract algebras: A rule-based survey of unification. </title> <editor> In J.-L. Lassez and G. Plotkin, editors, </editor> <booktitle> Computational Logic: Essays in Honor of Alan Robinson. </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1991. </year> <month> 19 </month>
Reference-contexts: Such unification (matching) procedures have been studied extensively in the literature; see, for example [Fay, 1979; Hullot, 1980; Holldobler, 1987; Dershowitz and Sivakumar, 1987; Martelli et al., 1989; Gallier and Snyder, 1990; Dershowitz et al., 1990], and <ref> [Jouannaud and Kirchner, 1991] </ref>, which is a survey of unification. If we restrict ourselves to convergent rewrite systems that are, additionally, either non-erasing or left-linear, then the non-deterministic transformation rules of Table 2 constitutes a complete set for the matching problem: Theorem 3 (Completeness).
Reference: [ Kapur and Narendran, 1987 ] <author> D. Kapur and P. Narendran. </author> <title> Matching, uni-fication and complexity (a preliminary note). </title> <journal> SIGSAM Bulletin, </journal> <volume> 21(4) </volume> <pages> 6-9, </pages> <month> November </month> <year> 1987. </year>
Reference-contexts: Other characterizations of decidable unifica-tion appear in <ref> [Kapur and Narendran, 1987] </ref> (every right-hand side of a rule must be a proper subterm of the corresponding left-hand side) and [Hullot, 1980] (every right-hand side must be a variable or a ground term). Unfortunately, none of these systems are powerful enough to capture truly recursive functions.
Reference: [ Martelli et al., 1989 ] <author> A. Martelli, G. F. Rossi, and C. Moiso. </author> <title> Lazy unification algorithms for canonical rewrite systems. </title> <editor> In H. At-Kaci and M. Nivat, editors, </editor> <title> Resolution of Equations in Algebraic Structures, </title> <booktitle> volume 2: Rewriting Techniques, </booktitle> <pages> pages 245-274. </pages> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1989. </year>

References-found: 19

