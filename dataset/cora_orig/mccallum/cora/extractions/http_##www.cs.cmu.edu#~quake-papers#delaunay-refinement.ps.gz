URL: http://www.cs.cmu.edu/~quake-papers/delaunay-refinement.ps.gz
Refering-URL: http://c.gp.cs.cmu.edu:5103/afs/cs.cmu.edu/project/quake/public/www/papers.html
Root-URL: 
Title: Delaunay Refinement Mesh Generation  
Author: Jonathan Richard Shewchuk Gary L. Miller, co-chair David R. O'Hallaron, co-chair Thomas R. Gross Jim Ruppert, Arris Pharmaceutical Jonathan Richard Shewchuk 
Degree: Submitted in partial fulfillment of the requirements for the degree of Doctor of Philosophy Thesis Committee:  
Note: Copyright 1997  
Address: Pittsburgh, PA 15213  
Affiliation: School of Computer Science Computer Science Department Carnegie Mellon University  Omar Ghattas, Department of Civil and Environmental Engineering  
Date: May 18, 1997  
Abstract: Effort sponsored in part by the Advanced Research Projects Agency and Rome Laboratory, Air Force Materiel Command, USAF under agreement number F30602-96-1-0287, in part by the National Science Foundation under Grant CMS-9318163, in part by the Natural Sciences and Engineering Research Council of Canada under a 1967 Science and Engineering Scholarship, and in part by a grant from the Intel Corporation. The U.S. Government is authorized to reproduce and distribute reprints for Governmental purposes notwithstanding any copyright annotation thereon. The views and conclusions contained herein are those of the authors and should not be interpreted as necessarily representing the official policies or endorsements, either expressed or implied, of the Advanced Research Projects Agency, Rome Laboratory, or the U.S. Government. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Franz Aurenhammer. </author> <title> Voronoi Diagrams A Survey of a Fundamental Geometric Data Structure. </title> <journal> ACM Computing Surveys 23(3):345405, </journal> <month> September </month> <year> 1991. </year>
Reference-contexts: The signif-icand is a p-bit binary number of the form b:bbb : : :, where each b denotes a single bit; one additional bit represents the sign. This research does not address issues of overflow and underflow, so I allow the exponent to be an integer in the range <ref> [1; 1] </ref>. (Fortunately, many applications have inputs whose exponents fall within a circumscribed range.
Reference: [2] <author> Francis Avnaim, Jean-Daniel Boissonnat, Olivier Devillers, Franco P. Preparata, and Mariette Yvinec. </author> <title> Evaluating Signs of Determinants Using Single-Precision Arithmetic. </title> <journal> Algorithmica 17(2):111132, </journal> <month> February </month> <year> 1997. </year>
Reference-contexts: When that upper bound drops below one, the determinant must be zero, since the matrix entries are integers, and the algorithm can stop. Related Work in Robust Computational Geometry 149 Recently, Avnaim, Boissonnat, Devillers, Preparata, and Yvinec <ref> [2] </ref> proposed an algorithm to evaluate signs of determinants of 2 fi 2 and 3 fi 3 matrices of p-bit integers using only p and (p + 1)-bit arithmetic, respectively. <p> A similar adaptive routine could accurately compute the numerators. It might be fruitful to explore whether the methods described by Clarkson [23] and Avnaim et al. <ref> [2] </ref> can be extended by fast multiprecision methods to handle arbitrary double precision floating-point inputs.
Reference: [3] <author> Ivo Babuska and A. K. Aziz. </author> <title> On the Angle Condition in the Finite Element Method. </title> <journal> SIAM Journal on Numerical Analysis 13(2):214226, </journal> <month> April </month> <year> 1976. </year>
Reference: [4] <author> David H. Bailey. </author> <title> A Portable High Performance Multiprecision Package. </title> <type> Technical Report RNR-90-022, </type> <institution> NASA Ames Research Center, Moffett Field, California, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: Table 6.2 lists timings for ORIENT2D, given random inputs. Observe that the adaptive test, when it stops at the approximate result A, takes nearly twice as long as the approximate test because of the need to compute an error bound. The table includes a comparison with Bailey's MPFUN <ref> [4] </ref>, chosen because it is the fastest portable and freely available arbitrary precision package I know of. ORIENT2D coded with my (nonadaptive) algorithms is roughly thirteen times faster than ORIENT2D coded with MPFUN.
Reference: [5] <author> B. S. Baker, E. Grosse, and C. S. Rafferty. </author> <title> Nonobtuse Triangulation of Polygons. </title> <booktitle> Discrete and Computational Geometry 3(2):147168, </booktitle> <year> 1988. </year>
Reference: [6] <author> T. J. Baker. </author> <title> Automatic Mesh Generation for Complex Three-Dimensional Regions using a Constrained Delaunay Triangulation. </title> <journal> Engineering with Computers 5:161175, </journal> <year> 1989. </year>
Reference: [7] <author> Hesheng Bao, Jacobo Bielak, Omar Ghattas, David R. O'Hallaron, Loukas F. Kallivokas, Jonathan Richard Shewchuk, and Jifeng Xu. </author> <title> Earthquake Ground Motion Modeling on Parallel Computers. </title> <booktitle> Supercomputing '96 (Pittsburgh, </booktitle> <address> Pennsylvania), </address> <month> November </month> <year> 1996. </year>
Reference: [8] <author> C. Bradford Barber. </author> <title> Computational Geometry with Imprecise Data and Arithmetic. </title> <type> Ph.D. thesis, </type> <institution> Department of Computer Science, Princeton University, Princeton, </institution> <address> New Jersey, </address> <month> October </month> <year> 1992. </year> <note> Available as Technical Report CS-TR-377-92. </note>
Reference-contexts: Milenkovic's and Fortune's algorithms are both quasi-stable, having small error bounds. Milenkovic's algorithm can be thought of as a quasi-robust algorithm for line arrangements, or as a robust algorithm for pseudo-line arrangements. Barber <ref> [8] </ref> pioneered an approach in which uncertainty, including the imprecision of input data, is a part of each geometric entity. Boxes are structures that specify the location and the uncertainty in location of a vertex, edge, facet, or other geometric structure.
Reference: [9] <author> T. J. Barth and D. C. Jesperson. </author> <title> The Design and Application of Upwind Schemes on Unstructured Meshes. </title> <booktitle> Proceedings of the AIAA 27th Aerospace Sciences Meeting (Reno, </booktitle> <address> Nevada), </address> <year> 1989. </year>
Reference: [10] <author> Marshall Bern and David Eppstein. </author> <title> Mesh Generation and Optimal Triangulation. </title> <editor> Computing in Euclidean Geometry (Ding-Zhu Du and Frank Hwang, editors), </editor> <booktitle> Lecture Notes Series on Computing, </booktitle> <volume> volume 1, </volume> <pages> pages 2390. </pages> <publisher> World Scientific, </publisher> <address> Singapore, </address> <year> 1992. </year>
Reference: [11] <author> Marshall Bern, David Eppstein, and John R. Gilbert. </author> <title> Provably Good Mesh Generation. </title> <booktitle> 31st Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 231241. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1990. </year>
Reference: [12] <author> Adrian Bowyer. </author> <title> Computing Dirichlet Tessellations. </title> <journal> Computer Journal 24(2):162166, </journal> <note> 1981. 201 202 Jonathan Richard Shewchuk </note>
Reference: [13] <author> Christoph Burnikel, Jochen K onemann, Kurt Mehlhorn, Stefan Naher, Stefan Schirra, and Christian Uhrig. </author> <title> Exact Geometric Computation in LEDA. </title> <booktitle> Eleventh Annual Symposium on Computational Geometry (Vancouver, </booktitle> <institution> British Columbia, Canada), pages C18C19. Association for Computing Machinery, </institution> <month> June </month> <year> 1995. </year>
Reference-contexts: Yet exact floating-point arithmetic can't even cope with rotating a square 45 ffi in the plane, because irrational vertex coordinates result. The problem of constructed irrational values has been partly attacked by the implementation of real numbers in the LEDA library of algorithms <ref> [13] </ref>. Values derived from square roots (and other arithmetic operations) 150 Jonathan Richard Shewchuk are stored in symbolic form when necessary.
Reference: [14] <author> Scott A. Canann, S. N. Muthukrishnan, and R. K. Phillips. </author> <title> Topological Refinement Procedures for Triangular Finite Element Meshes. </title> <booktitle> Engineering with Computers 12(3 & 4):243255, </booktitle> <year> 1996. </year>
Reference: [15] <author> John Canny. </author> <title> Some Algebraic and Geometric Computations in PSPACE. </title> <booktitle> 20th Annual Symposium on the Theory of Computing (Chicago, </booktitle> <publisher> Illinois), </publisher> <pages> pages 460467. </pages> <institution> Association for Computing Machinery, </institution> <month> May </month> <year> 1988. </year>
Reference-contexts: This theory is at least NP-hard and is decidable in polynomial space <ref> [15] </ref>. Unfortunately, the full power of the theory seems to be necessary for 152 Jonathan Richard Shewchuk some problems.
Reference: [16] <author> Graham F. Carey and John Tinsley Oden. </author> <title> Finite Elements: Computational Aspects. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1984. </year>
Reference: [17] <author> James C. Cavendish, David A. Field, and William H. Frey. </author> <title> An Approach to Automatic Three-Dimensional Finite Element Mesh Generation. </title> <note> International Journal for Numerical Methods in Engineering 21(2):329347, </note> <month> February </month> <year> 1985. </year>
Reference: [18] <author> L. Paul Chew. </author> <title> Constrained Delaunay Triangulations. </title> <journal> Algorithmica 4(1):97108, </journal> <year> 1989. </year> <title> [19] . Guaranteed-Quality Triangular Meshes. </title> <type> Technical Report TR-89-983, </type> <institution> Department of Computer Science, Cornell University, </institution> <year> 1989. </year> <title> [20] . Building Voronoi Diagrams for Convex Polygons in Linear Expected Time. </title> <type> Technical Report PCS-TR90-147, </type> <institution> Department of Mathematics and Computer Science, Dartmouth College, </institution> <year> 1990. </year> <title> [21] . Guaranteed-Quality Mesh Generation for Curved Surfaces. </title> <booktitle> Proceedings of the Ninth Annual Symposium on Computational Geometry (San Diego, California), </booktitle> <pages> pages 274280. </pages> <institution> Association for Computing Machinery, </institution> <month> May </month> <year> 1993. </year> <title> [22] . Guaranteed-Quality Delaunay Meshing in 3D. </title> <booktitle> Proceedings of the Thirteenth Annual Symposium on Computational Geometry. Association for Computing Machinery, </booktitle> <year> 1997. </year>
Reference: [23] <author> Kenneth L. Clarkson. </author> <title> Safe and Effective Determinant Evaluation. </title> <booktitle> 33rd Annual Symposium on Foundations of Computer Science (Pittsburgh, Pennsylvania), </booktitle> <pages> pages 387395. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> October </month> <year> 1992. </year>
Reference-contexts: There are several exact arithmetic schemes designed specifically for computational geometry; most are methods for exactly evaluating the sign of a determinant, and hence can be used to perform the orientation and incircle tests. Clarkson <ref> [23] </ref> proposes an algorithm for using floating-point arithmetic to evaluate the sign of the determinant of a small matrix of integers. A variant of the modified Gram-Schmidt procedure is used to improve the conditioning of the matrix, so that the determinant can subsequently be evaluated safely by Gaussian elimination. <p> A similar adaptive routine could accurately compute the numerators. It might be fruitful to explore whether the methods described by Clarkson <ref> [23] </ref> and Avnaim et al. [2] can be extended by fast multiprecision methods to handle arbitrary double precision floating-point inputs.
Reference: [24] <author> Kenneth L. Clarkson and Peter W. Shor. </author> <title> Applications of Random Sampling in Computational Geometry, II. </title> <booktitle> Discrete & Computational Geometry 4(1):387421, </booktitle> <year> 1989. </year>
Reference: [25] <author> E. F. D'Azevedo and R. B. Simpson. </author> <title> On Optimal Interpolation Triangle Incidences. </title> <journal> SIAM Journal on Scientific and Statistical Computing 10:10631075, </journal> <year> 1989. </year>
Reference: [26] <author> T. J. Dekker. </author> <title> A Floating-Point Technique for Extending the Available Precision. </title> <journal> Numerische Mathe-matik 18:224242, </journal> <year> 1971. </year>
Reference-contexts: Two such algorithms, due to Dekker and Knuth respectively, are presented. Theorem 41 (Dekker <ref> [26] </ref>) Let a and b be p-bit floating-point numbers such that jaj jbj. <p> The multiplication is performed by splitting each value into two halves with half the precision, then performing four exact multiplications on these fragments. The trick is to find a way to split a floating-point value in two. The following theorem was first proven by Dekker <ref> [26] </ref>: Theorem 52 Let a be a p-bit floating-point number, where p 3. Choose a splitting point s such that p 2 s p 1. <p> The products a hi b hi , a lo b hi , a hi b lo , and a lo b lo can each be computed exactly by the floating-point unit, producing four values. These could then be summed using the FAST-EXPANSION-SUM procedure in Section 6.3.4. However, Dekker <ref> [26] </ref> provides several faster ways to accomplish the computation. Dekker attributes the following method to G. W. Veltkamp.
Reference: [27] <author> Boris N. </author> <title> Delaunay. Sur la Sph ere Vide. </title> <institution> Izvestia Akademia Nauk SSSR, VII Seria, Otdelenie Matem-aticheskii i Estestvennyka Nauk 7:793800, </institution> <year> 1934. </year>
Reference: [28] <author> Tamal K. Dey, Chanderjit L. Bajaj, and Kokichi Sugihara. </author> <title> On Good Triangulations in Three Dimensions. </title> <booktitle> Proceedings of the Symposium on Solid Modeling Foundations and CAD/CAM Applications. Association for Computing Machinery, </booktitle> <year> 1991. </year> <note> Bibliography 203 </note>
Reference: [29] <author> David P. Dobkin and Michael J. Laszlo. </author> <title> Primitives for the Manipulation of Three-Dimensional Subdivisions. </title> <journal> Algorithmica 4:332, </journal> <year> 1989. </year>
Reference: [30] <author> Rex A. Dwyer. </author> <title> A Faster Divide-and-Conquer Algorithm for Constructing Delaunay Triangulations. </title> <journal> Algorithmica 2(2):137151, </journal> <year> 1987. </year>

Reference: [36] <author> Steven Fortune and Christopher J. Van Wyk. </author> <title> Efficient Exact Arithmetic for Computational Geometry. </title> <booktitle> Proceedings of the Ninth Annual Symposium on Computational Geometry (San Diego, California), </booktitle> <pages> pages 163172. </pages> <institution> Association for Computing Machinery, </institution> <month> May </month> <year> 1993. </year> <title> [37] . Static Analysis Yields Efficient Exact Integer Arithmetic for Computational Geometry. </title> <journal> ACM Transactions on Graphics 15(3):223248, </journal> <month> July </month> <year> 1996. </year>
Reference-contexts: Although exact arithmetic banishes these difficulties, it is common to hear reports of implementations being slowed by factors of ten or more as a consequence <ref> [56, 36] </ref>. For these reasons, computational geometry is an important arena for evaluating extended precision arithmetic schemes. The orientation and incircle tests evaluate the sign of a matrix determinant. It is significant that only the sign, and not the magnitude, of the determinant is needed. <p> For these reasons, computational geometry is an important arena for evaluating extended precision arithmetic schemes. The orientation and incircle tests evaluate the sign of a matrix determinant. It is significant that only the sign, and not the magnitude, of the determinant is needed. Fortune and Van Wyk <ref> [36] </ref> take advantage of this fact by using a floating-point filter: the determinant is first evaluated approximately, and only if forward error analysis indicates that the sign of the approximate result cannot be trusted does one use an exact test. <p> Fortune and Van Wyk <ref> [37, 36] </ref> propose a more general approach (not specific to determinants, or even to predicates) that represents integers using a standard multiple-digit technique with digits of radix 2 23 stored as double precision floating-point values. (53-bit double precision significands make it possible to add several products of 23-bit integers before it <p> One cannot generally know in advance how much precision is needed. In the context of determinant evaluation for computational geometry, Fortune and Van Wyk <ref> [36] </ref> suggest using a floating-point filter. An expression is evaluated approximately in hardware precision arithmetic first. Forward error analysis determines whether the approximate result can be trusted; if not, an exact result is computed. If the exact computation is only needed occasionally, the application is slowed only a little. <p> Because exact translation is the common case, my adaptive geometric predicates test for and exploit this case. Once a determinant has been chosen for evaluation, there are several methods to evaluate it. A number of methods are surveyed by Fortune and Van Wyk <ref> [36] </ref>, and only their conclusion is repeated here. The cheapest method of evaluating the determinant of a 5 fi 5 or smaller matrix seems to be by dynamic programming applied to cofactor expansion. <p> The techniques Priest and I have developed are simple enough to be coded directly in numerical algorithms, avoiding function call overhead and conversion costs. A useful tool in coding such algorithms would be an expression compiler similar to Fortune and Van Wyk's LN <ref> [37, 36] </ref>, which converts an expression into exact arithmetic code, complete with error bound derivation and floating-point filters. Such a tool could also automate the process of breaking an expression into adaptive stages as described in Section 6.4.
Reference: [38] <author> Lori A. Freitag, Mark Jones, and Paul Plassman. </author> <title> An Efficient Parallel Algorithm for Mesh Smoothing. </title> <booktitle> Fourth International Meshing Roundtable (Albuquerque, </booktitle> <address> New Mexico), </address> <pages> pages 4758. </pages> <institution> Sandia National Laboratories, </institution> <month> October </month> <year> 1995. </year>
Reference: [39] <author> Lori A. Freitag and Carl Ollivier-Gooch. </author> <title> A Comparison of Tetrahedral Mesh Improvement Techniques. </title> <booktitle> Fifth International Meshing Roundtable (Pittsburgh, Pennsylvania), </booktitle> <pages> pages 87100. </pages> <institution> Sandia National Laboratories, </institution> <month> October </month> <year> 1996. </year> <title> [40] . Tetrahedral Mesh Improvement Using Swapping and Smoothing. </title> <note> To appear in International Journal for Numerical Methods in Engineering, </note> <year> 1997. </year>
Reference: [41] <author> William H. Frey. </author> <title> Selective Refinement: A New Strategy for Automatic Node Placement in Graded Triangular Meshes. </title> <note> International Journal for Numerical Methods in Engineering 24(11):21832200, </note> <month> November </month> <year> 1987. </year>
Reference: [42] <author> William H. Frey and David A. </author> <title> Field. Mesh Relaxation: A New Technique for Improving Triangulations. </title> <note> International Journal for Numerical Methods in Engineering 31:11211133, </note> <year> 1991. </year>
Reference: [43] <author> P. L. George, F. Hecht, and E. Saltel. </author> <title> Automatic Mesh Generator with Specified Boundary. </title> <booktitle> Computer Methods in Applied Mechanics and Engineering 92(3):269288, </booktitle> <month> November </month> <year> 1991. </year>
Reference: [44] <author> David Goldberg. </author> <title> What Every Computer Scientist Should Know About Floating-Point Arithmetic. </title> <journal> ACM Computing Surveys 23(1):548, </journal> <month> March </month> <year> 1991. </year> <note> 204 Jonathan Richard Shewchuk </note>
Reference-contexts: For example, in four-bit arithmetic, binary 1101 (decimal 13) is represented as 1:101 fi 2 3 . See the survey by Goldberg <ref> [44] </ref> for a detailed explanation of floating-point storage formats, particularly the IEEE 754 standard. Exact arithmetic often produces values that require more than p bits to store. <p> This optimization would be valid if computers stored arbitrary real numbers, but is incorrect for floating-point numbers. Unfortunately, not all compiler developers are aware of the importance of maintaining correct floating-point language semantics, but as a whole, they seem to be improving. Gold-berg <ref> [44, x3.2.3] </ref> presents several related examples of how carefully designed numerical algorithms can be utterly ruined by incorrect optimizations. Even floating-point units that use binary arithmetic with exact rounding, including those that conform to the IEEE 754 standard, can have subtle properties that undermine the assumptions of the algorithms.
Reference: [45] <author> N. A. Golias and T. D. Tsiboukis. </author> <title> An Approach to Refining Three-Dimensional Tetrahedral Meshes Based on Delaunay Transformations. </title> <note> International Journal for Numerical Methods in Engineering 37:793812, </note> <year> 1994. </year>
Reference: [46] <author> Leonidas J. Guibas, Donald E. Knuth, and Micha Sharir. </author> <title> Randomized Incremental Construction of Delaunay and Voronoi Diagrams. </title> <journal> Algorithmica 7(4):381413, </journal> <note> 1992. Also available as Stanford University Computer Science Department Technical Report STAN-CS-90-1300 and in Springer-Verlag Lecture Notes in Computer Science, volume 443. </note>
Reference: [47] <author> Leonidas J. Guibas and Jorge Stolfi. </author> <title> Primitives for the Manipulation of General Subdivisions and the Computation of Voronoi Diagrams. </title> <journal> ACM Transactions on Graphics 4(2):74123, </journal> <month> April </month> <year> 1985. </year>
Reference: [48] <author> Carol Hazelwood. </author> <title> Approximating Constrained Tetrahedrizations. </title> <booktitle> Computer Aided Geometric Design 10:6787, </booktitle> <year> 1993. </year>
Reference: [49] <author> L. R. Hermann. </author> <title> Laplacian-Isoparametric Grid Generation Scheme. </title> <journal> Journal of the Engineering Mechanics Division of the American Society of Civil Engineers 102:749756, </journal> <month> October </month> <year> 1976. </year>
Reference: [50] <author> Christoph M. Hoffmann. </author> <title> The Problems of Accuracy and Robustness in Geometric Computation. </title> <booktitle> Computer 22(3):3141, </booktitle> <month> March </month> <year> 1989. </year>
Reference-contexts: The next several pages are devoted to a discussion of representative research in each class, and of the circumstances in which exact arithmetic and other techniques are or are not applicable. For more extensive surveys of geometric robustness, see Fortune [34] and Hoffmann <ref> [50] </ref>. Exact algorithms.
Reference: [51] <author> A. Jameson, T. J. Baker, and N. P. Weatherill. </author> <title> Calculation of Inviscid Transonic Flow over a Complete Aircraft. </title> <booktitle> Proceedings of the 24th AIAA Aerospace Sciences Meeting (Reno, </booktitle> <address> Nevada), </address> <year> 1986. </year>
Reference: [52] <author> Barry Joe. </author> <title> Three-Dimensional Triangulations from Local Transformations. </title> <journal> SIAM Journal on Scientific and Statistical Computing 10:718741, </journal> <year> 1989. </year> <title> [53] . Construction of Three-Dimensional Triangulations using Local Transformations. </title> <booktitle> Computer Aided Geometric Design 8:123142, </booktitle> <year> 1991. </year> <title> [54] . Construction of k-Dimensional Delaunay Triangulations using Local Transformations. </title> <journal> SIAM Journal on Scientific Computing 14(6):14151436, </journal> <month> November </month> <year> 1993. </year> <title> [55] . Construction of Three-Dimensional Improved-Quality Triangulations Using Local Transformations. </title> <journal> SIAM Journal on Scientific Computing 16(6):12921307, </journal> <month> November </month> <year> 1995. </year>
Reference: [56] <author> Michael Karasick, Derek Lieber, and Lee R. Nackman. </author> <title> Efficient Delaunay Triangulation Using Rational Arithmetic. </title> <journal> ACM Transactions on Graphics 10(1):7191, </journal> <month> January </month> <year> 1991. </year>
Reference-contexts: Although exact arithmetic banishes these difficulties, it is common to hear reports of implementations being slowed by factors of ten or more as a consequence <ref> [56, 36] </ref>. For these reasons, computational geometry is an important arena for evaluating extended precision arithmetic schemes. The orientation and incircle tests evaluate the sign of a matrix determinant. It is significant that only the sign, and not the magnitude, of the determinant is needed. <p> Fortune and Van Wyk report an order-of-magnitude speed improvement over the use of multiprecision libraries (for equal bit complexity). Furthermore, LN gains another speed improvement by installing floating-point filters wherever appropriate, calculating error bounds automatically. Karasick, Lieber, and Nackman <ref> [56] </ref> report their experiences optimizing a method for determinant evaluation using rational inputs. Their approach reduces the bit complexity of the inputs by performing arithmetic on intervals (with low precision bounds) rather than exact values.
Reference: [57] <author> Donald Ervin Knuth. </author> <booktitle> The Art of Computer Programming: Seminumerical Algorithms, second edition, </booktitle> <volume> volume 2. </volume> <publisher> Addison Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1981. </year>
Reference-contexts: Due to roundoff, these operators lack several desirable arithmetic properties. Associativity is an example; in four-bit arithmetic, (1000 0:011) 0:011 = 1000, but 1000 (0:011 0:011) = 1001. A list of reliable identities for floating-point arithmetic is given by Knuth <ref> [57] </ref>. Roundoff is often analyzed in terms of ulps, or units in the last place. An ulp is the effective magnitude of the low-order (pth) bit of a p-bit significand. An ulp is defined relative to a specific floating point value; I shall use ulp (a) to denote this quantity. <p> Of course, FAST-TWO-SUM remains faster if the relative sizes of the operands are known a priori, and the comparison can be avoided. Theorem 42 (Knuth <ref> [57] </ref>) Let a and b be p-bit floating-point numbers, where p 3.
Reference: [58] <author> Anton Szandor LaVey. </author> <title> The Satanic Bible. </title> <publisher> Avon Books, </publisher> <address> New York, </address> <year> 1969. </year>
Reference: [59] <author> Charles L. Lawson. </author> <title> Software for C 1 Surface Interpolation. Mathematical Software III (John R. Rice, </title> <booktitle> editor), </booktitle> <pages> pages 161194. </pages> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1977. </year>
Reference: [60] <author> Der-Tsai Lee and Bruce J. Schachter. </author> <title> Two Algorithms for Constructing a Delaunay Triangulation. </title> <journal> International Journal of Computer and Information Sciences 9(3):219242, </journal> <year> 1980. </year>
Reference: [61] <author> Seppo Linnainmaa. </author> <title> Analysis of Some Known Methods of Improving the Accuracy of Floating-Point Sums. </title> <journal> BIT 14:167202, </journal> <note> 1974. Bibliography 205 </note>
Reference: [62] <author> Rainald L ohner. </author> <title> Generation of Three-Dimensional Unstructured Grids by the Advancing Front Method. </title> <booktitle> Proceedings of the 26th AIAA Aerospace Sciences Meeting (Reno, </booktitle> <address> Nevada), </address> <year> 1988. </year>
Reference: [63] <author> David L. Marcum and Nigel P. Weatherill. </author> <title> Unstructured Grid Generation Using Iterative Point Insertion and Local Reconnection. </title> <booktitle> Twelfth AIAA Applied Aerodynamics Conference (Colorado Springs, </booktitle> <address> Colorado), number AIAA 94-1926, </address> <month> June </month> <year> 1994. </year>
Reference: [64] <author> Dimitri J. Mavriplis. </author> <title> An Advancing Front Delaunay Triangulation Algorithm Designed for Robustness. </title> <type> Technical Report 92-49, </type> <institution> ICASE, </institution> <month> October </month> <year> 1992. </year>
Reference: [65] <author> Victor Milenkovic. </author> <title> Double Precision Geometry: A General Technique for Calculating Line and Segment Intersections using Rounded Arithmetic. </title> <booktitle> 30th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 500505. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1989. </year>
Reference-contexts: However, sometimes one can settle for an algorithm whose output might not be realizable. I place such algorithms in a bag labeled with the fuzzy term quasi-robust, which I apply to any algorithm whose output is somehow provably distinguishable from nonsense. Milenkovic <ref> [65] </ref> circumvents the aforementioned NP-hardness result while using approximate arithmetic by constructing pseudo-line arrangements; a pseudo-line is a curve constrained to lie very close to an actual line.
Reference: [66] <author> Gary L. Miller, Dafna Talmor, Shang-Hua Teng, and Noel Walkington. </author> <title> A Delaunay Based Numerical Method for Three Dimensions: Generation, Formulation, and Partition. </title> <booktitle> Proceedings of the Twenty-Seventh Annual ACM Symposium on the Theory of Computing (Las Vegas, </booktitle> <address> Nevada), </address> <month> May </month> <year> 1995. </year>
Reference: [67] <author> Gary L. Miller, Dafna Talmor, Shang-Hua Teng, Noel Walkington, and Han Wang. </author> <title> Control Volume Meshes using Sphere Packing: Generation, Refinement and Coarsening. </title> <booktitle> Fifth International Meshing Roundtable (Pittsburgh, Pennsylvania), </booktitle> <pages> pages 4761, </pages> <month> October </month> <year> 1996. </year>
Reference: [68] <author> Scott A. Mitchell. </author> <title> Cardinality Bounds for Triangulations with Bounded Minimum Angle. </title> <booktitle> Proceedings of the Sixth Canadian Conference on Computational Geometry (Saskatoon, </booktitle> <address> Saskatchewan, Canada), </address> <pages> pages 326331, </pages> <month> August </month> <year> 1994. </year>
Reference: [69] <author> Scott A. Mitchell and Stephen A. Vavasis. </author> <title> Quality Mesh Generation in Three Dimensions. </title> <booktitle> Proceedings of the Eighth Annual Symposium on Computational Geometry, </booktitle> <pages> pages 212221, </pages> <year> 1992. </year> <title> [70] . Quality Mesh Generation in Higher Dimensions. </title> <note> Submitted to SIAM Journal on Computing. Manuscript available from http://www.cs.cornell.edu/Info/People/vavasis/vavasis.html, February 1997. </note>
Reference: [71] <author> N. E. Mnev. </author> <title> The Universality Theorems on the Classification Problem of Configuration Varieties and Convex Polytopes Varieties. Topology and Geometry - Rohlin Seminar (O. Ya. </title> <editor> Viro, editor), </editor> <booktitle> Lecture Notes in Mathematics, </booktitle> <volume> volume 1346, </volume> <pages> pages 527543. </pages> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: An example is the line arrangement problem: given a set of lines (specified by real coordinates (a; b; c), so that ax + by = c), compute the combinatorial structure of the resulting arrangement in the plane. It follows from recent work of Mnev <ref> [71] </ref> that the problem of deciding whether a combinatorial arrangement is actually realizable with lines is as hard as the existential theory of the reals. Hence a parsimonious algorithm for the line arrangement problem . . . seems to require the solution of NP-hard problems.
Reference: [72] <author> Ernst P. M ucke, Isaac Saias, and Binhai Zhu. </author> <title> Fast Randomized Point Location Without Preprocessing in Two- and Three-dimensional Delaunay Triangulations. </title> <booktitle> Proceedings of the Twelfth Annual Symposium on Computational Geometry, </booktitle> <pages> pages 274283. </pages> <institution> Association for Computing Machinery, </institution> <month> May </month> <year> 1996. </year>
Reference: [73] <author> Friedhelm Neugebauer and Ralf Diekmann. </author> <title> Improved Mesh Generation: Not Simple but Good. </title> <booktitle> Fifth International Meshing Roundtable (Pittsburgh, Pennsylvania), </booktitle> <pages> pages 257270. </pages> <institution> Sandia National Laboratories, </institution> <month> October </month> <year> 1996. </year>
Reference: [74] <author> Thomas Ottmann, Gerald Thiemt, and Christian Ullrich. </author> <title> Numerical Stability of Geometric Algorithms. </title> <booktitle> Proceedings of the Third Annual Symposium on Computational Geometry, </booktitle> <pages> pages 119125. </pages> <institution> Association for Computing Machinery, </institution> <month> June </month> <year> 1987. </year>
Reference-contexts: I am not aware of any prior literature on exact determinant evaluation that considers floating-point operands, except for one limited example: Ottmann, Thiemt, and Ullrich <ref> [74] </ref> advocate the use of an accurate scalar product operation, ideally implemented in hardware (though the software-level distillation algorithm described in Section 6.3.8 may also be used), as a way to evaluate some predicates such as the 2D orientation test.
Reference: [75] <author> V. N. Parthasarathy and Srinivas Kodiyalam. </author> <title> A Constrained Optimization Approach to Finite Element Mesh Smoothing. Finite Elements in Analysis and Design 9:309320, </title> <note> 1991. 206 Jonathan Richard Shewchuk </note>
Reference: [76] <author> Douglas M. Priest. </author> <title> Algorithms for Arbitrary Precision Floating Point Arithmetic. </title> <booktitle> Tenth Symposium on Computer Arithmetic (Los Alamitos, California), </booktitle> <pages> pages 132143. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1991. </year> <title> [77] . On Properties of Floating Point Arithmetics: Numerical Stability and the Cost of Accurate Computations. </title> <type> Ph.D. thesis, </type> <institution> Department of Mathematics, University of California at Berkeley, Berke-ley, California, </institution> <month> November </month> <year> 1992. </year> <note> Available by anonymous FTP to ftp.icsi.berkeley.edu as pub/theory/priest-thesis.ps.Z. </note>
Reference-contexts: This assumption holds on processors compliant with the IEEE 754 floating-point standard. Proofs of the correctness of all algorithms are given. The methods herein are closely related to, and occasionally taken directly from, methods developed by Priest <ref> [76, 77] </ref>, but are faster. The improvement in speed arises partly because Priest's algorithms run on a wide variety of floating-point architectures, with different radices and rounding behavior, whereas mine are limited to and optimized for radix two with exact rounding. <p> the multiple-component algorithms described herein is that the former perform exact arithmetic by keeping the bit complexity of operands small enough to avoid roundoff error, whereas the latter allow roundoff to occur, then account for 2 Note that this definition of expansion is slightly different from that used by Priest <ref> [76] </ref>; whereas Priest requires that the expo nents of any two components of the expansion differ by at least p, no such requirement is made here. 3 Formally, x and y are nonoverlapping if there exist integers r and s such that x = r2 s and jyj &lt; 2 s <p> The algorithm can also be used with round-toward-zero arithmetic, but the proof is different. I have emphasized round-to-even arithmetic here due to the IEEE 754 standard. A variant of this algorithm was presented by Priest <ref> [76] </ref>, but it is used differently here. Priest uses the algorithm to sum two nonoverlapping expansions, and proves under general conditions that the components of the resulting expansion overlap by at most one digit (i.e. one bit in binary arithmetic). <p> The COMPRESS algorithm below finds a compact form for an expansion. More importantly, COMPRESS guarantees that the largest component is a good approximation to the whole expansion. If round-to-even tiebreaking is used, COMPRESS also converts nonoverlapping expansions into nonadjacent expansions. Priest <ref> [76] </ref> presents a more complicated Renormalization procedure that compresses optimally. Its greater running time is rarely justified by the marginal reduction in expansion length, unless there is a need to put expansions in a canonical form. <p> Distillation can be performed by the divide-and-conquer algorithm of Priest <ref> [76] </ref>, which uses any expansion addition algorithm to sum the values in a tree-like fashion as illustrated in Figure 6.17. Each p-bit addend is a leaf of the tree, and each interior node represents a call to an expansion addition algorithm. <p> Division cannot always, of course, be performed exactly, but it can be performed to arbitrary precision by an iterative algorithm that employs multiprecision addition and multiplication. Consult Priest <ref> [76] </ref> for one such algorithm. The easiest way to compare two expansions is to subtract one from the other, and test the sign of the result.
Reference: [78] <author> V. T. Rajan. </author> <booktitle> Optimality of the Delaunay Triangulation in R d . Proceedings of the Seventh Annual Symposium on Computational Geometry, </booktitle> <pages> pages 357363, </pages> <year> 1991. </year>
Reference: [79] <author> James Martin Ruppert. </author> <title> Results on Triangulation and High Quality Mesh Generation. </title> <type> Ph.D. thesis, </type> <institution> University of California at Berkeley, Berkeley, California, </institution> <year> 1992. </year>
Reference: [80] <author> Jim Ruppert. </author> <title> A New and Simple Algorithm for Quality 2-Dimensional Mesh Generation. </title> <type> Technical Report UCB/CSD 92/694, </type> <institution> University of California at Berkeley, Berkeley, California, </institution> <year> 1992. </year> <title> [81] . A New and Simple Algorithm for Quality 2-Dimensional Mesh Generation. </title> <booktitle> Proceedings of the Fourth Annual Symposium on Discrete Algorithms, </booktitle> <pages> pages 8392. </pages> <institution> Association for Computing Machinery, </institution> <month> January </month> <year> 1993. </year> <title> [82] . A Delaunay Refinement Algorithm for Quality 2-Dimensional Mesh Generation. </title> <journal> Journal of Algorithms 18(3):548585, </journal> <month> May </month> <year> 1995. </year>
Reference: [83] <author> Jim Ruppert and Raimund Seidel. </author> <title> On the Difficulty of Tetrahedralizing 3-Dimensional Non-Convex Polyhedra. </title> <booktitle> Proceedings of the Fifth Annual Symposium on Computational Geometry, </booktitle> <pages> pages 380393. </pages> <institution> Association for Computing Machinery, </institution> <year> 1989. </year>
Reference: [84] <author> H. Samet. </author> <title> The Quadtree and Related Hierarchical Data Structures. </title> <journal> Computing Surveys 16:188260, </journal> <year> 1984. </year>
Reference: [85] <author> Raimund Seidel. </author> <title> Backwards Analysis of Randomized Geometric Algorithms. </title> <type> Technical Report TR-92-014, </type> <institution> International Computer Science Institute, University of California at Berkeley, Berkeley, Cal-ifornia, </institution> <month> February </month> <year> 1992. </year>
Reference: [86] <author> Michael I. Shamos and Dan Hoey. </author> <title> Closest-Point Problems. </title> <booktitle> 16th Annual Symposium on Foundations of Computer Science (Berkeley, California), </booktitle> <pages> pages 151162. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> October </month> <year> 1975. </year>
Reference: [87] <author> Mark S. Shephard and Marcel K. Georges. </author> <title> Automatic Three-Dimensional Mesh Generation by the Finite Octree Technique. </title> <note> International Journal for Numerical Methods in Engineering 32:709749, </note> <year> 1991. </year>
Reference: [88] <author> Daniel Dominic Sleator and Robert Endre Tarjan. </author> <title> Self-Adjusting Binary Search Trees. </title> <journal> Journal of the Association for Computing Machinery 32(3):652686, </journal> <month> July </month> <year> 1985. </year>
Reference: [89] <author> Pat H. Sterbenz. </author> <title> Floating-Point Computation. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1974. </year>
Reference-contexts: which shows that subtraction is exact for two operands within a factor of two of each other: 156 Jonathan Richard Shewchuk a = 1 1 0 1 a = 1 0 0 1 fi2 1 a b = 1 1 a b = 1 0 0 1 Lemma 40 (Sterbenz <ref> [89] </ref>) Suppose that b 2 [ a 2 ; 2a]. Then a b = a b. Proof: Without loss of generality, assume jaj jbj. (The other case is symmetric, because ab = ba.) Then b 2 [ a 2 ; a].
Reference: [90] <author> Peter Su. </author> <title> Efficient Parallel Algorithms for Closest Point Problems. </title> <type> Ph.D. thesis, </type> <institution> Dartmouth College, </institution> <address> Hanover, New Hampshire, </address> <month> May </month> <year> 1994. </year> <note> Bibliography 207 </note>
Reference: [91] <author> Peter Su and Robert L. Scot Drysdale. </author> <title> A Comparison of Sequential Delaunay Triangulation Algorithms. </title> <booktitle> Proceedings of the Eleventh Annual Symposium on Computational Geometry (Vancouver, </booktitle> <address> British Columbia, Canada), </address> <pages> pages 6170. </pages> <institution> Association for Computing Machinery, </institution> <month> June </month> <year> 1995. </year>
Reference: [92] <author> Joe F. Thompson and Nigel P. Weatherill. </author> <title> Aspects of Numerical Grid Generation: </title> <booktitle> Current Science and Art. </booktitle> <year> 1993. </year>
Reference: [93] <author> David F. Watson. </author> <title> Computing the n-dimensional Delaunay Tessellation with Application to Voronoi Polytopes. </title> <journal> Computer Journal 24(2):167172, </journal> <year> 1981. </year>
Reference: [94] <author> Nigel P. Weatherill. </author> <title> Delaunay Triangulation in Computational Fluid Dynamics. </title> <journal> Computers and Mathematics with Applications 24(5/6):129150, </journal> <month> September </month> <year> 1992. </year>
Reference: [95] <author> Nigel P. Weatherill and O. Hassan. </author> <title> Efficient Three-Dimensional Grid Generation using the Delaunay Triangulation. </title> <booktitle> Proceedings of the First European Computational Fluid Dynamics Conference (Brussels, </booktitle> <address> Belgium) (Ch. </address> <publisher> Hirsch, </publisher> <editor> J. Periaux, and W. Kordulla, editors), </editor> <booktitle> pages 961968, </booktitle> <month> September </month> <year> 1992. </year>
Reference: [96] <author> Nigel P. Weatherill, O. Hassan, D. L. Marcum, and M. J. Marchant. </author> <title> Grid Generation by the Delaunay Triangulation. </title> <booktitle> Von Karman Institute for Fluid Dynamics 19931994 Lecture Series, </booktitle> <year> 1994. </year>
Reference: [97] <author> James Hardy Wilkinson. </author> <title> Rounding Errors in Algebraic Processes. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1963. </year>
Reference-contexts: Using standard terminology from forward error analysis <ref> [97] </ref>, the quantity 1 2 ulp (1) is called the machine epsilon, denoted *. Recall that exact rounding guarantees that jy i j *jx i j; the quantity * bounds the relative error err (a ~ b)=(a ~ b) of any basic Adaptive Precision Arithmetic 179 floating-point operation.
Reference: [98] <author> M. A. Yerry and Mark S. Shephard. </author> <title> A Modified Quadtree Approach to Finite Element Mesh Generation. </title> <journal> IEEE Computer Graphics and Applications 3:3946, </journal> <month> January/February </month> <year> 1983. </year> <title> [99] . Automatic Three-Dimensional Mesh Generation by the Modified-Octree Technique. </title> <note> International Journal for Numerical Methods in Engineering 20:19651990, </note> <year> 1984. </year>
References-found: 80

