URL: http://www.iscs.nus.sg/~liub/wkshp/choueiry.ps
Refering-URL: 
Root-URL: 
Email: fchoueiryjnoubirg@di.epfl.ch  
Title: A Disjunctive Decomposition Scheme for Discrete Constraint Satisfaction Problems Using Complete No-Good Sets  
Author: Berthe Y. CHOUEIRY and Guevara NOUBIR 
Address: in Lausanne (EPFL)  
Affiliation: Industrial Computing Laboratory Department of Computer Science Swiss Federal Institute of Technology  
Abstract: In this paper, we introduce a new disjunctive decomposition scheme for discrete constraint satisfaction problems (CSPs). This strategy is based on first identifying complete no-goods in a graph derived from the microstructure of the CSP, then using these no-goods to decompose the initial CSP into subproblems that exclude these no-goods. This decomposition produces a partition of the solution space and is guaranteed to keep all solutions while reducing the total number of possibilities to be considered. We describe the strategy, study its properties, and identify the number of possibilities that are excluded at any decomposition step. We describe a practical application to which this strategy can be efficiently applied and compare our technique to some decomposition methods reported in the literature.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Esther Arkin and Ellen Silverberg. </author> <title> Scheduling Jobs with Fixed Start and End Times. </title> <journal> Discrete Applied Mathematics, </journal> <volume> 18 </volume> <pages> 1-8, </pages> <year> 1987. </year>
Reference-contexts: In the literature, list coloring is also called restricted coloring. 6 and also as a discrete binary CSP with constraints of mutual exclusion. RA is known to be NP-complete <ref> [1] </ref>. Fig. 3 shows a simple example of an RA problem, the corresponding interval graphs and constraint graph.
Reference: [2] <author> Berthe Y. Choueiry and Boi Faltings. </author> <title> A Decomposition Heuristic for Resource Allocation. </title> <booktitle> In Proc. of the 11 th ECAI, </booktitle> <pages> pages 585-589, </pages> <address> Amsterdam, The Nether-lands, </address> <year> 1994. </year>
Reference-contexts: Finally, we compare our approach to the ones described in the literature, such as ordered search, IDC (Inferred Disjunctive Constraint [3]), FOF (Factor Out Failure [5]), VAD (Value Assignment Delay Heuristic <ref> [2] </ref>), and the strategy proposed by Jegou [9]. 2 Definitions A constraint satisfaction problem (CSP) is defined by P = (V; D; C); where V = fV 1 ; V 2 ; : : :; V n g is the set of variables, D = fD V 1 ; D V <p> Such a possibility is not unrealistic and in Section 4, we report a practical application that we have modeled as a CSP and which co-microstructure is a triangulated graph. 4 Application to resource allocation In our previous work <ref> [2] </ref>, we have studied a resource allocation (RA) problem that consists of allocating qualified and specialized technicians to a set of pre-scheduled surgical operations in the surgical unit of a hospital. <p> Experiments on random problems and real-world data still need to be carried out for drawing empirical evidence. 5.2 VAD-based conjunctive decomposition In <ref> [2] </ref>, we introduced a decomposition strategy, based on the Value Assignment Delay heuristic (VAD), for solving resource allocation (RA) problems as defined in Section 4. The VAD acts by iteratively `hiding' the most constrained values in RA thus gradually `removing' the links in the constraint graph. <p> One interesting direction for future research is the exploitation of complete no-good sets for generating a conjunctive decomposition strategy and for localizing conflicts applicable to general CSPs, as a generalization of the application of VAD heuristic, reported in <ref> [2] </ref>, to general CSPs.
Reference: [3] <author> Eugene C. Freuder. </author> <title> Using Inferred Disjunctive Constraints to Decompose Constraint Satisfaction Problems. </title> <booktitle> In Proc. of the 13 th IJCAI, </booktitle> <pages> pages 254-260, </pages> <address> Chambery, France, </address> <year> 1993. </year>
Reference-contexts: Then we identify the problem of resource allocation as one practical application to which our strategy can be efficiently applied. Finally, we compare our approach to the ones described in the literature, such as ordered search, IDC (Inferred Disjunctive Constraint <ref> [3] </ref>), FOF (Factor Out Failure [5]), VAD (Value Assignment Delay Heuristic [2]), and the strategy proposed by Jegou [9]. 2 Definitions A constraint satisfaction problem (CSP) is defined by P = (V; D; C); where V = fV 1 ; V 2 ; : : :; V n g is the <p> IDC = Inferred Disjunctive Constraint <ref> [3] </ref> FC = Forward Checking [4]. BD = Microstructure Based Decomposition [9]. NC = Network Consistency [11, 4]. co-BD = co-Microstructure Based Decomposition. BT-CPR = Backtrack with Cartesian Product Representation [8, 4]. <p> More specifically, we suspect that BD may be more effective on tightly constrained CSPs (few edges in (P)) whereas co-BD may be more effective on loosely constrained CSPs (few edges in co-(P)). These claims need further investigations and an empirical evaluation on random problems. 5.4 Decomposition using IDC In <ref> [3] </ref>, Freuder introduces a strategy 8 for decomposing a CSP into disjunctive subproblems that we describe from the perspective of our approach. The decomposition is carried out according to all minimal no-good sets in which a given variable-value pair is involved.
Reference: [4] <author> Eugene C. Freuder and Paul D. Hubbe. </author> <title> A Disjunctive Decomposition Control Schema for Constraint Satisfaction. </title> <editor> In Vijay Saraswat and Pascal Van Hentenryck, editors, </editor> <booktitle> Principles and Practice of Constraint Programming, </booktitle> <pages> pages 319-335. </pages> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1995. </year>
Reference-contexts: One advantage of disjunctive decomposition strategies is that they can be efficiently implemented in parallel: the resulting subproblems need not communicate and thus can be distributed among a number of processing units. In <ref> [4] </ref>, Freuder and Hubbe describe a general control schema for disjunctive decomposition of a CSP and show how previous resolution strategies (e.g., backtrack, forward checking, network consistency) can be formulated as instances of this schema. <p> Note that it is not straightforward to define what is a maximal CNG-set since applying consistency checking techniques to the CSP may uncover new inconsistencies and thus increase the size of a given CNG-set. A conjunctive decomposition <ref> [4] </ref> "breaks the problem into subproblems such that all the subproblems must be solved, and the solutions must fit together properly, for the original problem to be solved". A disjunctive decomposition [4] of a CSP P is a set of subproblems fP i g, each of which is induced from P <p> A conjunctive decomposition <ref> [4] </ref> "breaks the problem into subproblems such that all the subproblems must be solved, and the solutions must fit together properly, for the original problem to be solved". A disjunctive decomposition [4] of a CSP P is a set of subproblems fP i g, each of which is induced from P by restricting the domain of one or more variables (and accordingly updating the constraints). The decomposition is required to satisfy the following properties [4]: * Consistency. <p> A disjunctive decomposition <ref> [4] </ref> of a CSP P is a set of subproblems fP i g, each of which is induced from P by restricting the domain of one or more variables (and accordingly updating the constraints). The decomposition is required to satisfy the following properties [4]: * Consistency. Any pair of values from a pair of instantiated variables is consistent. * Simplification. Each of the fP i g has fewer possibilities or more instan tiated variables than P. * Semi-completeness. <p> The generated subproblems determine a partition of the solutions of the initial problem. In addition to the basic properties listed in Section 2, Freuder and Hubbe <ref> [4] </ref> identify the following desirable properties of a decomposition strategy: * Completeness. Any solution to P will be a solution to at least one of the fP i g. * Non-redundancy. Any possibility for P appears in at most one of the fP i g. * Reducibility. <p> As a result, the decomposition strategy that we described in Section 3.1 can be efficiently carried out for RA. 5 Relation to previous work Our approach fits in the very general control schema proposed in <ref> [4] </ref>. A succinct comparison to other decomposition methods is shown in Table 5. <p> p p p p p p Simplification p p p p p p p Semi-completeness p p p p p p p Completeness p p p p p p Non-redundancy p p p p p p Reducibility fi p p p p p =yes fi = no BT = Backtrack <ref> [4] </ref>. IDC = Inferred Disjunctive Constraint [3] FC = Forward Checking [4]. BD = Microstructure Based Decomposition [9]. NC = Network Consistency [11, 4]. co-BD = co-Microstructure Based Decomposition. BT-CPR = Backtrack with Cartesian Product Representation [8, 4]. <p> p p p Semi-completeness p p p p p p p Completeness p p p p p p Non-redundancy p p p p p p Reducibility fi p p p p p =yes fi = no BT = Backtrack <ref> [4] </ref>. IDC = Inferred Disjunctive Constraint [3] FC = Forward Checking [4]. BD = Microstructure Based Decomposition [9]. NC = Network Consistency [11, 4]. co-BD = co-Microstructure Based Decomposition. BT-CPR = Backtrack with Cartesian Product Representation [8, 4]. <p> IDC = Inferred Disjunctive Constraint [3] FC = Forward Checking [4]. BD = Microstructure Based Decomposition [9]. NC = Network Consistency <ref> [11, 4] </ref>. co-BD = co-Microstructure Based Decomposition. BT-CPR = Backtrack with Cartesian Product Representation [8, 4]. Table 1: A concise comparison of the properties of the main decomposition strategies. agenda' 6 of a decomposition schema (i.e., which subproblem to decompose first, which no-good set to choose first). <p> IDC = Inferred Disjunctive Constraint [3] FC = Forward Checking [4]. BD = Microstructure Based Decomposition [9]. NC = Network Consistency [11, 4]. co-BD = co-Microstructure Based Decomposition. BT-CPR = Backtrack with Cartesian Product Representation <ref> [8, 4] </ref>. Table 1: A concise comparison of the properties of the main decomposition strategies. agenda' 6 of a decomposition schema (i.e., which subproblem to decompose first, which no-good set to choose first). <p> The remaining alternatives (i.e., P 1 , P 2 , : : :, P k ) are partially explored by the conflict resolution procedure that complements the VAD. 6 An agenda <ref> [4] </ref> is a heap that keeps track of the subproblems in the leaves of a tree hierarchy created by an iterative application of a given decomposition technique. 8 4.
Reference: [5] <author> Eugene C. Freuder and Paul D. Hubbe. </author> <title> Extracting Constraint Satisfaction Sub-problems. </title> <booktitle> In Proc. of the 14 th IJCAI, </booktitle> <pages> pages 548-555, </pages> <address> Montreal, Canada, </address> <year> 1995. </year>
Reference-contexts: Then we identify the problem of resource allocation as one practical application to which our strategy can be efficiently applied. Finally, we compare our approach to the ones described in the literature, such as ordered search, IDC (Inferred Disjunctive Constraint [3]), FOF (Factor Out Failure <ref> [5] </ref>), VAD (Value Assignment Delay Heuristic [2]), and the strategy proposed by Jegou [9]. 2 Definitions A constraint satisfaction problem (CSP) is defined by P = (V; D; C); where V = fV 1 ; V 2 ; : : :; V n g is the set of variables, D = <p> However, it cannot be used if one is seeking all solutions, which is anyway a rather rare requirement. Also, for a given complete no-good set, IDC may generate more decomposition steps (thus, more subproblems) than co-BD, which processes all no-goods of the set at once. 5.5 Subproblem extraction In <ref> [5] </ref>, Freuder and Hubbe introduce yet another disjunctive decomposition scheme based on extracting a given subproblem from the initial CSP. <p> Also, unnecessary intermediate subproblems would need to be generated. Hence, when CNG-sets can be identified, co-BD is more suited than the extraction procedure described above for use in the `Factor Out Failure' strategy of <ref> [5] </ref>.
Reference: [6] <author> F. Gavril. </author> <title> Algorithms for minimum coloring, maximum clique, minimum covering by cliques, and maximum independent set of a chordal graph. </title> <journal> SIAM J. Comput., </journal> <volume> 1 </volume> (2):180-187, 1972. 
Reference-contexts: It is easy to show that this graph is necessarily triangulated because of the underlying interval graph. This graph may actually consist of several non-connected components, all triangulated. Since co-(RA) is necessarily triangu lated, finding maximal cliques can be done in linear time in the size of the graph <ref> [6] </ref>. As a result, the decomposition strategy that we described in Section 3.1 can be efficiently carried out for RA. 5 Relation to previous work Our approach fits in the very general control schema proposed in [4]. A succinct comparison to other decomposition methods is shown in Table 5.
Reference: [7] <author> Martin C. Golumbic. </author> <title> Algorithmic Aspects of Perfect Graphs. </title> <journal> Annals of Discrete Mathematics, </journal> <volume> 21 </volume> <pages> 301-323, </pages> <year> 1984. </year>
Reference-contexts: RA is known to be NP-complete [1]. Fig. 3 shows a simple example of an RA problem, the corresponding interval graphs and constraint graph. Note that, although graph. the interval graph is triangulated <ref> [7] </ref>, the constraint graph is not because the labels of the nodes in the constraint graph corresponding to two overlapping intervals can have an empty intersection thus implying a universal constraint between the nodes. Fig. 4 shows the complementary microstructure corresponding to this example.
Reference: [8] <author> Paul D. Hubbe and Eugene C. Freuder. </author> <title> An Efficient Cross Product Representation of the Constraint Satisfaction Problem Search Space. </title> <booktitle> In Proc. of AAAI-92, </booktitle> <pages> pages 421-427, </pages> <address> San Jose, CA, </address> <year> 1989. </year>
Reference-contexts: IDC = Inferred Disjunctive Constraint [3] FC = Forward Checking [4]. BD = Microstructure Based Decomposition [9]. NC = Network Consistency [11, 4]. co-BD = co-Microstructure Based Decomposition. BT-CPR = Backtrack with Cartesian Product Representation <ref> [8, 4] </ref>. Table 1: A concise comparison of the properties of the main decomposition strategies. agenda' 6 of a decomposition schema (i.e., which subproblem to decompose first, which no-good set to choose first).
Reference: [9] <author> Philippe Jegou. </author> <title> Decomposition of Domains Based on the Micro-Structure of Finite Constraint-Satisfaction Problems. </title> <booktitle> In Proc. of AAAI-93, </booktitle> <pages> pages 731-736, </pages> <address> Washington, DC, </address> <year> 1993. </year>
Reference-contexts: In [4], Freuder and Hubbe describe a general control schema for disjunctive decomposition of a CSP and show how previous resolution strategies (e.g., backtrack, forward checking, network consistency) can be formulated as instances of this schema. In <ref> [9] </ref>, Jegou introduces yet another decomposition scheme based on using the characteristics of a graph structure called the microstructure of the CSP. <p> Finally, we compare our approach to the ones described in the literature, such as ordered search, IDC (Inferred Disjunctive Constraint [3]), FOF (Factor Out Failure [5]), VAD (Value Assignment Delay Heuristic [2]), and the strategy proposed by Jegou <ref> [9] </ref>. 2 Definitions A constraint satisfaction problem (CSP) is defined by P = (V; D; C); where V = fV 1 ; V 2 ; : : :; V n g is the set of variables, D = fD V 1 ; D V 2 ; : : :; D V <p> Universal constraints are omitted from the constraint graph. In this document, we restrict our study to discrete binary CSPs: each domain D V i is a finite set of discrete values and each constraint applies to two variables. The microstructure <ref> [9] </ref> of a CSP P = (V; D; C), denoted (P), is the graph G (V; E) where V = f (V i ; v) j (V i 2 V) ^ (v 2 D V i )g and E = fe (V i ;v);(V j ;w) j (v 2 D V <p> IDC = Inferred Disjunctive Constraint [3] FC = Forward Checking [4]. BD = Microstructure Based Decomposition <ref> [9] </ref>. NC = Network Consistency [11, 4]. co-BD = co-Microstructure Based Decomposition. BT-CPR = Backtrack with Cartesian Product Representation [8, 4]. <p> We believe that interesting strategies of problem solving and conflict localization can be developed based on this generali zation of the application of the VAD to general CSPs. 5.3 Microstructure-based decomposition Jegou <ref> [9] </ref> indicated that any maximal clique of size n in the microstructure of a CSP of n variables is a solution to the CSP.
Reference: [10] <author> Richard M. Karp. </author> <title> Reducibility among Combinatorial Problems. </title> <editor> In E. M. Miller and J.W. Thatcher, editors, </editor> <booktitle> Complexity of Computer Computations, </booktitle> <pages> pages 85-103. </pages> <publisher> Plenum Press, </publisher> <address> New York, </address> <year> 1972. </year>
Reference-contexts: Consequently, there is a clear advantage of choosing CNG-sets that are as big as possible, ideally the maximal cliques of the co-microstructure. However, the problem of finding all maximal cliques in a graph is known to be NP-complete <ref> [10] </ref>. This constitutes a limitation to the `optimal' application of our strategy without, however, endangering the basic mechanism. Indeed, maximal cliques are desired but do not constitute a necessary requirement since our decomposition can exploit cliques of any sizes.
Reference: [11] <author> Alan K. Mackworth. </author> <title> On Reading Sketch Maps. </title> <booktitle> In Proc. of the 5 th IJCAI, </booktitle> <pages> pages 598-606, </pages> <address> Cambridge, MA, </address> <year> 1977. </year>
Reference-contexts: IDC = Inferred Disjunctive Constraint [3] FC = Forward Checking [4]. BD = Microstructure Based Decomposition [9]. NC = Network Consistency <ref> [11, 4] </ref>. co-BD = co-Microstructure Based Decomposition. BT-CPR = Backtrack with Cartesian Product Representation [8, 4]. Table 1: A concise comparison of the properties of the main decomposition strategies. agenda' 6 of a decomposition schema (i.e., which subproblem to decompose first, which no-good set to choose first).
Reference: [12] <author> Francesca Rossi, Charles Petrie, and Vasant Dhar. </author> <title> On the Equivalence of Constraint Satisfaction Problems. </title> <booktitle> In Proc. of the 9 th ECAI, </booktitle> <pages> pages 550-556, </pages> <address> Stockholm, Sweden, </address> <year> 1990. </year> <month> 12 </month>
Reference-contexts: For non-binary CSPs, one can apply this technique to the dual CSP, which is binary, obtained as described in <ref> [12] </ref>. According to Expression (3), the gain depends on the size of the CNG-set chosen: the bigger the set, the bigger the gain. Also, if we were to apply the decomposition strategy iteratively, this choice also reduces the number of iterations.
References-found: 12

