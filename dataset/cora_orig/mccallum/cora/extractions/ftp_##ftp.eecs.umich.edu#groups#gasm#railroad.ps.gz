URL: ftp://ftp.eecs.umich.edu/groups/gasm/railroad.ps.gz
Refering-URL: http://www.eecs.umich.edu/gasm/papers.html
Root-URL: http://www.eecs.umich.edu
Title: The Railroad Crossing Problem: An Experiment with Instantaneous Actions and Immediate Reactions  
Author: Yuri Gurevich and James K. Huggins 
Date: February 7, 1997  
Address: Ann Arbor, MI, 48109-2122, USA.  
Affiliation: EECS Department, University of Michigan,  
Abstract: We give an evolving algebra solution for the well-known railroad crossing problem and use the occasion to experiment with agents that perform instantaneous actions in continuous time and in particular with agents that fire at the moment they are enabled. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Egon Borger, </author> <title> Annotated Bibliography on Evolving Algebras, in "Specification and Validation Methods", </title> <editor> ed. E. Borger, </editor> <publisher> Oxford University Press, </publisher> <year> 1995, </year> <pages> 37-51. </pages>
Reference-contexts: The evolving algebras (EA) methodology has been used extensively for specification and validation for real-world software and hardware systems; see the EA guide [3] and the EA bibliography <ref> [1] </ref>. The merits of using "toy" problems as benchmarks are debatable; not every methodology scales well to real-world problems. Still, toy problems are appropriate for experimentation.
Reference: [2] <author> Egon Borger, Yuri Gurevich and Dean Rosenzweig: </author> <title> The Bakery Algorithm: Yet Another Specification and Verification, in "Specification and Validation Methods", </title> <editor> ed. E. Borger, </editor> <publisher> Oxford University Press, </publisher> <year> 1995. </year>
Reference-contexts: It is not natural at all to view closing 3 and opening of the gate as instantaneous actions, and we will not do that. Let us stress that the evolving algebra methodology does not require that actions are necessarily instantaneous. See for example <ref> [2] </ref> where an instantaneous action ealgebra is refined to a prolonged-action ealgebra. The design part of the railway crossing problem is not difficult, especially because the problem has been addressed in a number of papers. <p> I1 Agents execute instantaneously. I2 Enviromental changes take place instantaneously. I3 The global state of the given distributed ealgebra is well defined at every moment. Let us stress again that the three assumptions above are not a part of the evolving algebra definition. The prolonged-action ealgebra <ref> [2] </ref>, mentioned in Sect. 2, satisfies none of these three assumptions. Vocabularies and Static Structures. Fix some vocabulary with a universe symbol Reals and let + be the extension of with a nullary function symbol CT; it is supposed of course that does not contain CT.
Reference: [3] <author> Yuri Gurevich, </author> <title> "Evolving Algebra 1993: Lipari Guide", in "Specification and Validation Methods", </title> <editor> Ed. E. Borger, </editor> <publisher> Oxford University Press, </publisher> <year> 1995, </year> <pages> 9-36. </pages>
Reference-contexts: The evolving algebras (EA) methodology has been used extensively for specification and validation for real-world software and hardware systems; see the EA guide <ref> [3] </ref> and the EA bibliography [1]. The merits of using "toy" problems as benchmarks are debatable; not every methodology scales well to real-world problems. Still, toy problems are appropriate for experimentation. <p> In Sect. 3, we give a brief introduction to evolving algebras (in short, ealgebras), in order to make this paper self-contained. We omit many important aspects of ealgebras and refer the interested reader to a fuller definition in the EA guide <ref> [3] </ref>. In Sect. 4, experimenting with instantaneous actions in real time, we define special distributed real-time ealgebras appropriate to situations like that of the railroad crossing problem. In Sect. 5 and Sect. 6, we give a solution for the railroad crossing problem which is formalized as an ealgebra. <p> What remains is to formalize the design in a specification language, in our case as an evolving algebra, and prove the safety and liveness requirements are satisfied. 3 Evolving Algebras Reminder We give a brief reminder on evolving algebras based on the EA guide <ref> [3] </ref>. We present only what is necessary here and ignore many important features. 3.1 Static Algebras Static algebras are essentially logicians' structures except that a tiny bit of meta-mathematics is built into it. They are indeed algebras in the sense of the science of universal algebra.
Reference: [4] <author> Yuri Gurevich and James K. Huggins, </author> <title> "The Railroad Crossing Problem: An Evolving Algebra Solution," </title> <type> LITP 95/63, </type> <institution> Janvier 1996, Centre National de la Recherche Scientifique Paris, France. </institution>
Reference-contexts: Acknowledgments. Raghu Mani participated in an initial stage of the work [5]. During the final stage of the work, the first author was a CNRS 1 visitor in the Laboratoire Informatique Theoretique et Program-mation, Paris, France <ref> [4] </ref>. 2 The Railroad Crossing Problem Imagine a railroad crossing with several train tracks and a common gate, such as the one depicted in Fig. 1. Sensors along every track detect oncoming and departing trains. Let us consider one of the tracks, shown in Fig. 2.
Reference: [5] <author> Yuri Gurevich, James K. Huggins, and Raghu Mani, </author> <title> "The Generalized Railroad Crossing Problem: An Evolving Algebra Based Solution," </title> <institution> University of Michigan EECS Department Technical Report CSE-TR-230-95. </institution>
Reference-contexts: No semantical approach makes inherent difficulties of a given problem go away. At best, the approach does not introduce more complications and allows one to deal with the inherent complexity of the given problem. Acknowledgments. Raghu Mani participated in an initial stage of the work <ref> [5] </ref>.
Reference: [6] <author> Constance Heitmeyer and Nancy Lynch: </author> <title> The Generalized Railroad Crossing: A Case Study in Formal Verification of Real-Time Systems, </title> <booktitle> Proc., Real-Time Systems Symp., </booktitle> <address> San Juan, Puerto Rico, </address> <month> Dec., </month> <year> 1994, </year> <note> IEEE. </note>
Reference-contexts: 1 Introduction The well-known railroad crossing problem has been used as an example for comparing various specification and validation methodologies; see for example <ref> [6, 7] </ref> and the relevant references there. The evolving algebras (EA) methodology has been used extensively for specification and validation for real-world software and hardware systems; see the EA guide [3] and the EA bibliography [1]. <p> This is of course a simplification. The position of a real gate could be anywhere between fully closed and fully opened. (In <ref> [6] </ref>, the position of the gate ranges between 0 o and 90 o .) But this simplification is meaningful.
Reference: [7] <author> Ernst-Rudiger Olderog, Anders P. Ravn and Jens Ulrik Skakkebaek, </author> <title> "Refining System Requirements to Program Specifications", </title> <note> to appear. </note>
Reference-contexts: 1 Introduction The well-known railroad crossing problem has been used as an example for comparing various specification and validation methodologies; see for example <ref> [6, 7] </ref> and the relevant references there. The evolving algebras (EA) methodology has been used extensively for specification and validation for real-world software and hardware systems; see the EA guide [3] and the EA bibliography [1].
Reference: [8] <author> Robin Milner. </author> <title> A private discussion, </title> <month> Aug. </month> <year> 1994. </year> <month> 19 </month>
Reference-contexts: One could use another symbol for the built-in equality, but this is not necessary. A remark to theoreticians. At the point that updates are introduced, some people, in particular Robin Milner <ref> [8] </ref>, raise an objection that an update may destroy algebraic properties. For example, an operation may lose associativity. That is true.
References-found: 8

