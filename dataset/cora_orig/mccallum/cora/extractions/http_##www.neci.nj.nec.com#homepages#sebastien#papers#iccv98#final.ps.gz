URL: http://www.neci.nj.nec.com/homepages/sebastien/papers/iccv98/final.ps.gz
Refering-URL: http://www.neci.nj.nec.com/homepages/sebastien/papers/
Root-URL: 
Title: A Maximum-Flow Formulation of the N -camera Stereo Correspondence Problem for an image size of
Author: Sebastien Roy Ingemar J. Cox d. 
Address: 4 Independence Way Princeton, NJ 08540, U.S.A.  
Affiliation: NEC Research Institute  
Date: January 1998 1  
Note: c 1998 IEEE. Proc. of Int. Conference on Computer Vision Bombai,  running time is O(n 1:2 d 1:3  
Abstract: This paper describes a new algorithm for solving the N-camera stereo correspondence problem by transforming it into a maximum-flow problem. Once solved, the minimum-cut associated to the maximum-flow yields a disparity surface for the whole image at once. This global approach to stereo analysis provides a more accurate and coherent depth map than the traditional line-by-line stereo. Moreover, the optimality of the depth surface is guaranteed and can be shown to be a generalization of the dynamic programming approach that is widely used in standard stereo. Results show improved depth estimation as well as better handling of depth discontinuities. While the worst case running time is O(n 2 d 2 log(nd)), the observed average 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. H. Baker. </author> <title> Depth from Edge and Intensity Based Stereo. </title> <type> PhD thesis, </type> <institution> University of Illinois at Urbana-Champaign, </institution> <year> 1981. </year>
Reference: [2] <author> Y. Ohta and T. Kanade. </author> <title> Stereo by intra- and inter scanline using dynamic programming. </title> <journal> IEEE Trans. Pattern Analysis and Machine Intelligence, </journal> <volume> 7(2) </volume> <pages> 139-154, </pages> <year> 1985. </year>
Reference-contexts: Centre-Ville, Montreal, Quebec, H3C 3J7 There have been several earlier attempts to relate the solutions of consecutive epipolar lines matched with dynamic programming. In <ref> [2] </ref>, dynamic programming is used to first match epipolar lines and then iteratively improve the solutions obtained by using vertical edges as reference. In [3], a probabilistic approach is used to relate the individual matchings obtained by dynamic programming to improve the depth map quality. <p> In [5], a Bayesian approach to the stereo correspondence problem is described. The resulting optimization problem can be solved efficiently by using dynamic programming along epipolar lines, resulting in the same problem as <ref> [2, 3] </ref> of relating the independent solutions. It proposes a heuristic method called iterated stochastic dynamic programming that uses previously computed adjacent epipolar line solutions to iteratively improve randomly selected solutions. <p> To take full advantage of local coherence, they have to be be six-connected to relate each individual epipolar line. Unfortunately, doing this makes dynamic programming unusable since there is no strict order for building the solution surface. Many solutions for global disparity surface matching have been proposed <ref> [2, 5, 6] </ref>. Typically, these algorithm propose an iterative approach in which a solution is improved by using the previous matching obtained for neighboring epipolar lines.
Reference: [3] <author> I. J. Cox, S. Hingorani, B. M. Maggs, and S. B. Rao. </author> <title> A maximum likelihood stereo algorithm. </title> <booktitle> Computer Vision and Image Understanding, </booktitle> <volume> 63(3) </volume> <pages> 542-567, </pages> <year> 1996. </year>
Reference-contexts: Centre-Ville, Montreal, Quebec, H3C 3J7 There have been several earlier attempts to relate the solutions of consecutive epipolar lines matched with dynamic programming. In [2], dynamic programming is used to first match epipolar lines and then iteratively improve the solutions obtained by using vertical edges as reference. In <ref> [3] </ref>, a probabilistic approach is used to relate the individual matchings obtained by dynamic programming to improve the depth map quality. As a first approach, the current line matching uses the previous epipolar line solution to improve its own solution. However, this introduces a non-desirable vertical asymmetry. <p> In [5], a Bayesian approach to the stereo correspondence problem is described. The resulting optimization problem can be solved efficiently by using dynamic programming along epipolar lines, resulting in the same problem as <ref> [2, 3] </ref> of relating the independent solutions. It proposes a heuristic method called iterated stochastic dynamic programming that uses previously computed adjacent epipolar line solutions to iteratively improve randomly selected solutions. <p> Some multiple camera algorithms have been presented (see [4, 6-8]). In [6], a pair of camera is used as a reference or base pair. Other cameras provide extra information to enrich the matching cost function of the reference camera pair. The matching then proceed using dynamic programming as in <ref> [3] </ref>. In [7] and [8], a multiple-camera real-time stereo system is presented. They use a single reference camera to perform the matching. All the other cameras provide the information pertinent to each possible depth of points in the reference image. <p> 2 log (nd)) The new best bound [10] runs in O (e 2 log (v 2 =e) log (U )) where U is the largest edge capacity, yields a running time of O (n 1:5 d 1:5 log (nd) log (U )) The dynamic programming approach on separate epipolar lines <ref> [3] </ref> requires a total running time of fi (nd), which might seem much better than the maximum-flow algorithm. <p> The typical running time for 256 fi256 images is anywhere between 1 to 30 minutes, on a 160Mhz pentium machine, depending on the depth resolution used. While this is considerably slower than <ref> [3] </ref>, the algorithm was not optimized for speed. Performance improvement are expected in the future. 5 Experiments and results In this sections, results of binocular and N -camera stereoscopic matching from maximum-flow are presented and compared with two other algorithms. maximum-flow and MLMH+V results. <p> It differs from the maximum-flow algorithm only in the way it solve the disparity surface. They are otherwise identical and their results use the same disparity scale and are not equalized. Second, the algorithm referred to as MLMH+V is the efficient dynamic programming implementation from <ref> [3] </ref> (for the binocular version) and from [6] (for the N -camera version). It performs an iterative optimization of its disparity solution to enforce smoothness across disparity lines.
Reference: [4] <author> O. Faugeras. </author> <title> Three-dimentional computer vision. </title> <publisher> MIT Press, </publisher> <address> Cambridge, </address> <year> 1993. </year>
Reference-contexts: This approach is not optimal and further more introduce a large amount of smoothness that tends to blur depth discontinuities. Some multiple camera algorithms have been presented (see <ref> [4, 6-8] </ref>). In [6], a pair of camera is used as a reference or base pair. Other cameras provide extra information to enrich the matching cost function of the reference camera pair. The matching then proceed using dynamic programming as in [3]. <p> d) as cost (p 0 0 ; d) = n (v (p 0 0 ; d)) 2 (2) 2.1 Epipolar geometry and Matching It is a well known fact that for a given camera geometry, each image point is restricted to move along a single line called the epipolar line <ref> [4] </ref>. This reduces the matching process to a 1-D search along corresponding epipolar lines. A very important additional constraint is the ordering constraint. It states that the order of points along corresponding epipolar lines is preserved. <p> A very important additional constraint is the ordering constraint. It states that the order of points along corresponding epipolar lines is preserved. In fact, this corresponds to enforcing a smoothness constraint along epipolar lines (also noted in <ref> [4] </ref>). In the traditional approach to stereo matching, a single epipolar line A is matched with its corresponding epipolar line B in the other image.
Reference: [5] <author> P. N. Belhumeur. </author> <title> A Bayesian approach to binocular stereopsis. </title> <journal> Int. J. Computer Vision, </journal> <volume> 19(3) </volume> <pages> 237-260, </pages> <year> 1996. </year>
Reference-contexts: However, this introduces a non-desirable vertical asymmetry. A second approach is to iteratively improve each epipolar line solutions with its neighboring lines solution. While this local approach is not globally optimal, it provides an efficient way to introduce smoothness constraint across epipolar lines. In <ref> [5] </ref>, a Bayesian approach to the stereo correspondence problem is described. The resulting optimization problem can be solved efficiently by using dynamic programming along epipolar lines, resulting in the same problem as [2, 3] of relating the independent solutions. <p> To take full advantage of local coherence, they have to be be six-connected to relate each individual epipolar line. Unfortunately, doing this makes dynamic programming unusable since there is no strict order for building the solution surface. Many solutions for global disparity surface matching have been proposed <ref> [2, 5, 6] </ref>. Typically, these algorithm propose an iterative approach in which a solution is improved by using the previous matching obtained for neighboring epipolar lines.
Reference: [6] <author> I. J. Cox. </author> <title> A maximum likelihood N -camera stereo algorithm. </title> <booktitle> In Proc. of IEEE Conference on Computer Vision and Pattern Recognition, </booktitle> <pages> pages 733-739, </pages> <year> 1994. </year>
Reference-contexts: This approach is not optimal and further more introduce a large amount of smoothness that tends to blur depth discontinuities. Some multiple camera algorithms have been presented (see [4, 6-8]). In <ref> [6] </ref>, a pair of camera is used as a reference or base pair. Other cameras provide extra information to enrich the matching cost function of the reference camera pair. The matching then proceed using dynamic programming as in [3]. In [7] and [8], a multiple-camera real-time stereo system is presented. <p> However, the representation using (a; d) is favored over one using (a; b) because we do need two base camera (A and B) as in <ref> [6] </ref> but only one (A). 3 Recovering a full disparity map A natural extension to matching a single pair of epipolar lines at a time would be to extend it to the whole image at once, as depicted in Figure 3, by matching all pairs of epipolar lines simultaneously. <p> To take full advantage of local coherence, they have to be be six-connected to relate each individual epipolar line. Unfortunately, doing this makes dynamic programming unusable since there is no strict order for building the solution surface. Many solutions for global disparity surface matching have been proposed <ref> [2, 5, 6] </ref>. Typically, these algorithm propose an iterative approach in which a solution is improved by using the previous matching obtained for neighboring epipolar lines. <p> They are otherwise identical and their results use the same disparity scale and are not equalized. Second, the algorithm referred to as MLMH+V is the efficient dynamic programming implementation from [3] (for the binocular version) and from <ref> [6] </ref> (for the N -camera version). It performs an iterative optimization of its disparity solution to enforce smoothness across disparity lines. It should be noted that the results from this algorithm use a different disparity scale (gray levels) than maximum-flow or standard stereo and are equalized to improve their contrast.
Reference: [7] <author> S. B. Kang, J. A. Webb, C. L. Zitnick, and T. Kanade. </author> <title> An active multibaseline stereo system with real-time image acquisition. </title> <type> Technical Report CMU-CS-94-167, </type> <institution> School of Computer Science, Carnegie Mellon University, </institution> <year> 1994. </year>
Reference-contexts: In [6], a pair of camera is used as a reference or base pair. Other cameras provide extra information to enrich the matching cost function of the reference camera pair. The matching then proceed using dynamic programming as in [3]. In <ref> [7] </ref> and [8], a multiple-camera real-time stereo system is presented. They use a single reference camera to perform the matching. All the other cameras provide the information pertinent to each possible depth of points in the reference image.
Reference: [8] <author> T. Kanade, A. Yoshida, K. Oda, H. Kano, and M. Tanaka. </author> <title> A stereo machine for video-rate dense depth mapping and its new applications. </title> <booktitle> In Proc. of IEEE Conference on Computer Vision and Pattern Recognition, </booktitle> <address> San Francisco, </address> <year> 1996. </year>
Reference-contexts: In [6], a pair of camera is used as a reference or base pair. Other cameras provide extra information to enrich the matching cost function of the reference camera pair. The matching then proceed using dynamic programming as in [3]. In [7] and <ref> [8] </ref>, a multiple-camera real-time stereo system is presented. They use a single reference camera to perform the matching. All the other cameras provide the information pertinent to each possible depth of points in the reference image.
Reference: [9] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest. </author> <title> In troduction to Algorithms. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1990. </year>
Reference-contexts: This results in the desired global disparity surface. 4.3 Solving the Maximum Flow problem There is an abundant literature on algorithms to solve the maximum-flow problem <ref> [9, 10] </ref>. For this paper, we implemented a well known algorithm, preflow-push lift-to-front (see [9]). Currently, the best maximum-flow algorithm is presented in [10] and is particularly well suited for sparse graphs like the ones built for stereo matching. <p> This results in the desired global disparity surface. 4.3 Solving the Maximum Flow problem There is an abundant literature on algorithms to solve the maximum-flow problem [9, 10]. For this paper, we implemented a well known algorithm, preflow-push lift-to-front (see <ref> [9] </ref>). Currently, the best maximum-flow algorithm is presented in [10] and is particularly well suited for sparse graphs like the ones built for stereo matching. The number of vertices v in the graph is equal to the number of image pixels multiplied by the depth resolution.
Reference: [10] <author> A. V. Goldberg and S. B. Rao. </author> <title> Length functions for flow computations. </title> <type> Technical Report 97-055, </type> <institution> NEC Research Institute, Princeton NJ, </institution> <year> 1997. </year>
Reference-contexts: This results in the desired global disparity surface. 4.3 Solving the Maximum Flow problem There is an abundant literature on algorithms to solve the maximum-flow problem <ref> [9, 10] </ref>. For this paper, we implemented a well known algorithm, preflow-push lift-to-front (see [9]). Currently, the best maximum-flow algorithm is presented in [10] and is particularly well suited for sparse graphs like the ones built for stereo matching. <p> This results in the desired global disparity surface. 4.3 Solving the Maximum Flow problem There is an abundant literature on algorithms to solve the maximum-flow problem [9, 10]. For this paper, we implemented a well known algorithm, preflow-push lift-to-front (see [9]). Currently, the best maximum-flow algorithm is presented in <ref> [10] </ref> and is particularly well suited for sparse graphs like the ones built for stereo matching. The number of vertices v in the graph is equal to the number of image pixels multiplied by the depth resolution. <p> This implies that the preflow-push algorithm used, with a running time O (ve log (v 2 =e)) yields a running time of O (n 2 d 2 log (nd)) The new best bound <ref> [10] </ref> runs in O (e 2 log (v 2 =e) log (U )) where U is the largest edge capacity, yields a running time of O (n 1:5 d 1:5 log (nd) log (U )) The dynamic programming approach on separate epipolar lines [3] requires a total running time of fi
References-found: 10

