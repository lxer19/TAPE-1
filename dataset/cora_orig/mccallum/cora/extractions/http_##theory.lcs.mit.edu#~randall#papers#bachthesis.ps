URL: http://theory.lcs.mit.edu/~randall/papers/bachthesis.ps
Refering-URL: http://theory.lcs.mit.edu/~randall/
Root-URL: 
Title: An Experimental Comparison of Edge-Triggering  
Author: and Level-Clocking by Keith H. Randall c Keith H. Randall, MCMXCIII. Leonard A. Gould 
Degree: Submitted to the Department of Electrical Engineering and Computer Science in partial fulfillment of the requirements for the degree of Bachelor of Science in Computer Science and Engineering at the  All rights reserved. The author hereby grants to M.I.T. permission to reproduce and to distribute copies of this thesis document in whole or in part, and to grant others the right to do so. Author  Certified by Charles E. Leiserson Thesis Supervisor Accepted by  Chairman, Departmental Committee on Undergraduate Theses  
Date: May 1993  May 4, 1993  
Affiliation: MASSACHUSETTS INSTITUTE OF TECHNOLOGY  Department of Electrical Engineering and Computer Science  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> T. Burks, K. Sakallah, and T. Mudge. </author> <title> Multiphase retiming using minT c . t 92 ACM Workshop on Timing Issues in the Specification and Synthesis of Digital Systems, </title> <month> March </month> <year> 1992. </year>
Reference-contexts: This interface also makes Tim easier to write and use because Tim can work on a variety of circuit formats and delay models with no additional effort. 10 1.6 Previous Work Timing verification and optimization of synchronous circuitry has been the subject of extensive study <ref> [1, 4, 5, 6, 7, 10, 11, 15, 16, 18, 19] </ref>. In [9], Leiserson et al. present a good summary of algorithms for retiming edge-triggered circuits for speed and latch count. <p> In [9], Leiserson et al. present a good summary of algorithms for retiming edge-triggered circuits for speed and latch count. The concept of replacing each edge-triggered flip-flop by a pair of back-to-back level-sensitive latches, and then using retiming for speed optimization has been explored in <ref> [1, 5, 11] </ref>. The potential of level-clocking for reducing the number of storage elements has been mentioned in [11]. The idea of using latches instead of flip-flops has been also used in [17] in the context of multi-phase clocks.
Reference: [2] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> McGraw-Hill, MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: Karp's minimum mean-weight cycle algorithm is a fi (V E)-time, fi (V 2 )-space algorithm to compute M (see <ref> [2] </ref>). Although the time bound is a good one (or at least a reasonable one), the space required can be prohibitive for large circuits because memory-access times increase dramatically with the size of memory, especially for virtual memory systems where memory latency can be in the millisecond range.
Reference: [3] <author> L. A. Glasser and D. W. Dobberpuhl. </author> <title> The Design and Analysis of VLSI Circuits. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1985. </year>
Reference-contexts: first step of this procedure was to replace each edge-triggered flip-flop by a pair of back-to-back level-sensitive latches that are clocked by a two-phase, nonoverlapping clocking scheme, as shown in figure 1-3. (In fact, it is common in VLSI to implement edge-triggered flip-flops by a pair of back-to-back level-sensitive latches <ref> [3, 20] </ref>.) The two-phase circuit produced by this conversion has the same clock period and the same number of storage elements as the original edge-triggered circuit, under the reasonable assumption that each edge-triggered flip-flop counts as two level-sensitive latches.
Reference: [4] <author> A. T. Ishii and C. E. Leiserson. </author> <title> A timing analysis of level-clocked circuitry. </title> <booktitle> In Advanced Research in VLSI: Proc. of the Sixth MIT Conference, </booktitle> <pages> pages 113-130. </pages> <publisher> MIT Press, </publisher> <month> April </month> <year> 1990. </year>
Reference-contexts: This interface also makes Tim easier to write and use because Tim can work on a variety of circuit formats and delay models with no additional effort. 10 1.6 Previous Work Timing verification and optimization of synchronous circuitry has been the subject of extensive study <ref> [1, 4, 5, 6, 7, 10, 11, 15, 16, 18, 19] </ref>. In [9], Leiserson et al. present a good summary of algorithms for retiming edge-triggered circuits for speed and latch count.
Reference: [5] <author> A. T. Ishii, C. E. Leiserson, and M. C. Papaefthymiou. </author> <title> Optimizing two-phase, </title> <booktitle> level-clocked circuitry. In Advanced Research in VLSI and Parallel Systems: Proc. of the 1992 Brown/MIT Conference. </booktitle> <publisher> MIT Press, </publisher> <month> March </month> <year> 1992. </year>
Reference-contexts: This interface also makes Tim easier to write and use because Tim can work on a variety of circuit formats and delay models with no additional effort. 10 1.6 Previous Work Timing verification and optimization of synchronous circuitry has been the subject of extensive study <ref> [1, 4, 5, 6, 7, 10, 11, 15, 16, 18, 19] </ref>. In [9], Leiserson et al. present a good summary of algorithms for retiming edge-triggered circuits for speed and latch count. <p> In [9], Leiserson et al. present a good summary of algorithms for retiming edge-triggered circuits for speed and latch count. The concept of replacing each edge-triggered flip-flop by a pair of back-to-back level-sensitive latches, and then using retiming for speed optimization has been explored in <ref> [1, 5, 11] </ref>. The potential of level-clocking for reducing the number of storage elements has been mentioned in [11]. The idea of using latches instead of flip-flops has been also used in [17] in the context of multi-phase clocks. <p> A similar pattern is revealed for almost all of our test circuits. This phenomenon can be justified as follows. The critical ratio R is a lower bound on the clock period of both the edge-triggered and the level-clocked circuit <ref> [5, 13] </ref>. Consequently, the longest combinational delay in the circuits is at least R under any transformation that does not change the number of storage elements around the cycles in the circuit. <p> Tim can then use standard graph algorithms, such as shortest path algorithms, to determine features of a circuit. All of the commands listed in figure 4.1 are implemented as a combination of various graph algorithms. The detailed algorithms for solving these optimization problems can be found in [10] and <ref> [5] </ref>. A real problem with Tim is the fact that many of its algorithms take a significant amount of time to run on large circuits. In view of this, much effort was put into improving the algorithms that Tim uses to verify and optimize circuits. <p> The number of latches in the circuit is then X w r (e) = e2E = e2E X r (v) r (u) X w (e) + v2V (indegree (v) outdegree (v))r (v) and the timing constraints (see <ref> [5] </ref>) are of the form r (u) r (v) x (u; v) : Thus, an equivalent statement of the latch minimization problem is to minimize P v2V y (v)r (v) subject to the constraints r (u) r (v) x (u; v).
Reference: [6] <author> N. P. Jouppi. </author> <title> Timing analysis for NMOS VLSI. </title> <booktitle> In Proc. 20th Design Automation Conference, </booktitle> <pages> pages 411-418, </pages> <month> June </month> <year> 1983. </year>
Reference-contexts: This interface also makes Tim easier to write and use because Tim can work on a variety of circuit formats and delay models with no additional effort. 10 1.6 Previous Work Timing verification and optimization of synchronous circuitry has been the subject of extensive study <ref> [1, 4, 5, 6, 7, 10, 11, 15, 16, 18, 19] </ref>. In [9], Leiserson et al. present a good summary of algorithms for retiming edge-triggered circuits for speed and latch count.
Reference: [7] <author> C. E. Leiserson, F. M. Rose, and J. B. Saxe. </author> <title> Optimizing synchronous circuitry by retiming. </title> <booktitle> 3rd Caltech Conference on VLSI, </booktitle> <year> 1983. </year> <editor> R. Bryant, </editor> <publisher> ed., </publisher> <pages> pp. 87-116. </pages>
Reference-contexts: The second step of the procedure was to use the "retiming" transformation to relocate the storage elements of the two-phase circuit that resulted from the first step. Retiming relocates storage elements in both edge-triggered and level-clocked circuitry without changing its functionality <ref> [7, 8, 10] </ref>. In addition, retiming is a "universal" transformation for speeding up circuits, in the sense that any other functionality-preserving transformation that did better than retiming would depend on the functionality of the gates in the circuit [8]. <p> This interface also makes Tim easier to write and use because Tim can work on a variety of circuit formats and delay models with no additional effort. 10 1.6 Previous Work Timing verification and optimization of synchronous circuitry has been the subject of extensive study <ref> [1, 4, 5, 6, 7, 10, 11, 15, 16, 18, 19] </ref>. In [9], Leiserson et al. present a good summary of algorithms for retiming edge-triggered circuits for speed and latch count.
Reference: [8] <author> C. E. Leiserson and J. B. Saxe. </author> <title> Optimizing synchronous systems. </title> <journal> Journal of VLSI and Computer Systems, </journal> <volume> 1(1) </volume> <pages> 41-67, </pages> <year> 1983. </year> <month> 38 </month>
Reference-contexts: The second step of the procedure was to use the "retiming" transformation to relocate the storage elements of the two-phase circuit that resulted from the first step. Retiming relocates storage elements in both edge-triggered and level-clocked circuitry without changing its functionality <ref> [7, 8, 10] </ref>. In addition, retiming is a "universal" transformation for speeding up circuits, in the sense that any other functionality-preserving transformation that did better than retiming would depend on the functionality of the gates in the circuit [8]. <p> In addition, retiming is a "universal" transformation for speeding up circuits, in the sense that any other functionality-preserving transformation that did better than retiming would depend on the functionality of the gates in the circuit <ref> [8] </ref>. Figure 1-4 illustrates the retiming operation for a gate in a circuit. Observe that retiming can change the clock period as well as the number of storage elements in a circuit.
Reference: [9] <author> C. E. Leiserson and J. B. Saxe. </author> <title> Retiming synchronous circuitry. </title> <type> Technical Report TM-372, </type> <institution> MIT Laboratory for Computer Science, </institution> <month> October </month> <year> 1988. </year>
Reference-contexts: In <ref> [9] </ref>, Leiserson et al. present a good summary of algorithms for retiming edge-triggered circuits for speed and latch count. The concept of replacing each edge-triggered flip-flop by a pair of back-to-back level-sensitive latches, and then using retiming for speed optimization has been explored in [1, 5, 11].
Reference: [10] <author> C. E. Leiserson and J. B. Saxe. </author> <title> Retiming synchronous circuitry. </title> <journal> Algorithmica, </journal> <volume> 6(1), </volume> <year> 1991. </year> <note> Also available as MIT/LCS/TM-372. </note>
Reference-contexts: The second step of the procedure was to use the "retiming" transformation to relocate the storage elements of the two-phase circuit that resulted from the first step. Retiming relocates storage elements in both edge-triggered and level-clocked circuitry without changing its functionality <ref> [7, 8, 10] </ref>. In addition, retiming is a "universal" transformation for speeding up circuits, in the sense that any other functionality-preserving transformation that did better than retiming would depend on the functionality of the gates in the circuit [8]. <p> This interface also makes Tim easier to write and use because Tim can work on a variety of circuit formats and delay models with no additional effort. 10 1.6 Previous Work Timing verification and optimization of synchronous circuitry has been the subject of extensive study <ref> [1, 4, 5, 6, 7, 10, 11, 15, 16, 18, 19] </ref>. In [9], Leiserson et al. present a good summary of algorithms for retiming edge-triggered circuits for speed and latch count. <p> Tim can then use standard graph algorithms, such as shortest path algorithms, to determine features of a circuit. All of the commands listed in figure 4.1 are implemented as a combination of various graph algorithms. The detailed algorithms for solving these optimization problems can be found in <ref> [10] </ref> and [5]. A real problem with Tim is the fact that many of its algorithms take a significant amount of time to run on large circuits. In view of this, much effort was put into improving the algorithms that Tim uses to verify and optimize circuits. <p> The reduction from a minimization problem of the type with latch sharing to one without latch sharing can be found in <ref> [10] </ref>. Basically, the procedure is to associate with each gate in the graph a "mirror" gate which has no outputs, no delay, and receives one input from each of its pair's outputs (see figure 4-4).
Reference: [11] <author> B. Lockyear and C. Ebeling. </author> <title> Optimal retiming of multi-phase, </title> <booktitle> level-clocked circuits. In Advanced Research in VLSI and Parallel Systems: Proc. of the 1992 Brown/MIT Conference. </booktitle> <publisher> MIT Press, </publisher> <month> March </month> <year> 1992. </year>
Reference-contexts: This interface also makes Tim easier to write and use because Tim can work on a variety of circuit formats and delay models with no additional effort. 10 1.6 Previous Work Timing verification and optimization of synchronous circuitry has been the subject of extensive study <ref> [1, 4, 5, 6, 7, 10, 11, 15, 16, 18, 19] </ref>. In [9], Leiserson et al. present a good summary of algorithms for retiming edge-triggered circuits for speed and latch count. <p> In [9], Leiserson et al. present a good summary of algorithms for retiming edge-triggered circuits for speed and latch count. The concept of replacing each edge-triggered flip-flop by a pair of back-to-back level-sensitive latches, and then using retiming for speed optimization has been explored in <ref> [1, 5, 11] </ref>. The potential of level-clocking for reducing the number of storage elements has been mentioned in [11]. The idea of using latches instead of flip-flops has been also used in [17] in the context of multi-phase clocks. <p> The concept of replacing each edge-triggered flip-flop by a pair of back-to-back level-sensitive latches, and then using retiming for speed optimization has been explored in [1, 5, 11]. The potential of level-clocking for reducing the number of storage elements has been mentioned in <ref> [11] </ref>. The idea of using latches instead of flip-flops has been also used in [17] in the context of multi-phase clocks. Retiming for speed has been studied in the context of single-phase level-clocked circuits in [16].
Reference: [12] <author> J. Orlin. </author> <title> A faster strongly polynomial minimum cost flow algorithm. </title> <booktitle> Sloan Working Papers, </booktitle> <pages> number 3060-89, </pages> <month> August </month> <year> 1989. </year>
Reference: [13] <author> M. C. Papaefthymiou. </author> <title> Understanding retiming through maximum average-weight cycles. </title> <booktitle> 3rd ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <month> July </month> <year> 1991. </year>
Reference-contexts: A similar pattern is revealed for almost all of our test circuits. This phenomenon can be justified as follows. The critical ratio R is a lower bound on the clock period of both the edge-triggered and the level-clocked circuit <ref> [5, 13] </ref>. Consequently, the longest combinational delay in the circuits is at least R under any transformation that does not change the number of storage elements around the cycles in the circuit.
Reference: [14] <author> M. C. Papaefthymiou and K. H. Randall. Tim: </author> <title> a timing package for two-phase, </title> <booktitle> level-clocked circuitry. In Proceedings of the 30th ACM/IEEE Design Automation Conference, </booktitle> <month> June </month> <year> 1993. </year> <note> Also available as an MIT VLSI Memo 92-693, </note> <month> October </month> <year> 1992. </year>
Reference-contexts: Our empirical comparison focused on two specific quantitative measures: speed and number of storage elements. We ran our tests using Tim, a timing optimization tool currently under development at MIT <ref> [14] </ref>. 1.2 Theoretical Results The first question to ask is why edge-triggered and level-clocked circuits should have different speed and latch count properties at all. Delay in a circuit is caused by propagation delay in the circuit's combinational logic, not in its storage elements. <p> First, we briefly refer to our tools and test circuits. We move on to describe and motivate our experimental methodology, and then we discuss our results. Our experiments were performed using Tim, a timing optimization package currently under development at MIT <ref> [14] </ref>. Tim performs a variety of functions on two-phase circuitry, such as timing verification, retiming, clock tuning, and sensitivity analysis. It also performs timing verification, retiming, and sensitivity analysis on edge-triggered circuitry.
Reference: [15] <author> K. A. Sakallah, T. N. Mudge, and O. A. Olukotun. </author> <title> checkT c and minT c : Timing verification and optimal clocking of synchronous digital circuits. </title> <booktitle> In Digest of Technical Papers of the 1990 IEEE International Conference on CAD, </booktitle> <pages> pages 552-555, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: This interface also makes Tim easier to write and use because Tim can work on a variety of circuit formats and delay models with no additional effort. 10 1.6 Previous Work Timing verification and optimization of synchronous circuitry has been the subject of extensive study <ref> [1, 4, 5, 6, 7, 10, 11, 15, 16, 18, 19] </ref>. In [9], Leiserson et al. present a good summary of algorithms for retiming edge-triggered circuits for speed and latch count.
Reference: [16] <author> N. Shenoy, R. K. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> Retiming of circuits with single phase level-sensitive latches. </title> <booktitle> In International Conference on Computer Design, </booktitle> <month> October </month> <year> 1991. </year>
Reference-contexts: This interface also makes Tim easier to write and use because Tim can work on a variety of circuit formats and delay models with no additional effort. 10 1.6 Previous Work Timing verification and optimization of synchronous circuitry has been the subject of extensive study <ref> [1, 4, 5, 6, 7, 10, 11, 15, 16, 18, 19] </ref>. In [9], Leiserson et al. present a good summary of algorithms for retiming edge-triggered circuits for speed and latch count. <p> The idea of using latches instead of flip-flops has been also used in [17] in the context of multi-phase clocks. Retiming for speed has been studied in the context of single-phase level-clocked circuits in <ref> [16] </ref>. Despite the large amount of work in this area, our contribution is (we believe) the first attempt to quantify empirically the performance differences of edge-triggering and two-phase clocking. 1.7 Outline of Thesis The remainder of this thesis has four sections.
Reference: [17] <author> T. G. Szymanski. </author> <title> Computing optimal clock schedules. </title> <booktitle> In Proc. 29th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 399-404, </pages> <month> June </month> <year> 1992. </year> <month> 39 </month>
Reference-contexts: The potential of level-clocking for reducing the number of storage elements has been mentioned in [11]. The idea of using latches instead of flip-flops has been also used in <ref> [17] </ref> in the context of multi-phase clocks. Retiming for speed has been studied in the context of single-phase level-clocked circuits in [16].
Reference: [18] <author> T. G. Szymanski and N. Shenoy. </author> <title> Verifying clock schedules. </title> <booktitle> In Digest of Technical Papers of the 1992 IEEE/ACM International Conference on CAD, </booktitle> <month> November </month> <year> 1992. </year>
Reference-contexts: This interface also makes Tim easier to write and use because Tim can work on a variety of circuit formats and delay models with no additional effort. 10 1.6 Previous Work Timing verification and optimization of synchronous circuitry has been the subject of extensive study <ref> [1, 4, 5, 6, 7, 10, 11, 15, 16, 18, 19] </ref>. In [9], Leiserson et al. present a good summary of algorithms for retiming edge-triggered circuits for speed and latch count.
Reference: [19] <author> S. H. Unger and C. J. Tan. </author> <title> Clocking schemes for high speed digital systems. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-35(10):880-895, </volume> <month> October </month> <year> 1986. </year>
Reference-contexts: This interface also makes Tim easier to write and use because Tim can work on a variety of circuit formats and delay models with no additional effort. 10 1.6 Previous Work Timing verification and optimization of synchronous circuitry has been the subject of extensive study <ref> [1, 4, 5, 6, 7, 10, 11, 15, 16, 18, 19] </ref>. In [9], Leiserson et al. present a good summary of algorithms for retiming edge-triggered circuits for speed and latch count.
Reference: [20] <author> S. A. Ward and R. H. Halstead, Jr. </author> <title> Computation Structures. </title> <publisher> McGraw-Hill, MIT Press, </publisher> <year> 1990. </year> <month> 40 </month>
Reference-contexts: first step of this procedure was to replace each edge-triggered flip-flop by a pair of back-to-back level-sensitive latches that are clocked by a two-phase, nonoverlapping clocking scheme, as shown in figure 1-3. (In fact, it is common in VLSI to implement edge-triggered flip-flops by a pair of back-to-back level-sensitive latches <ref> [3, 20] </ref>.) The two-phase circuit produced by this conversion has the same clock period and the same number of storage elements as the original edge-triggered circuit, under the reasonable assumption that each edge-triggered flip-flop counts as two level-sensitive latches.
References-found: 20

