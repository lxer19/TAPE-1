URL: http://www.cs.purdue.edu/homes/palsberg/paper/toplas95-p.ps.gz
Refering-URL: http://www.cs.purdue.edu/homes/palsberg/publications.html
Root-URL: http://www.cs.purdue.edu
Title: Closure Analysis in Constraint Form  
Author: JENS PALSBERG 
Keyword: Categories and Subject Descriptors: D.3.1 [Programming Languages]: Formal Definitions and Theory|semantics; D.3.2 [Programming Languages]: Language Classifications|applicative languages; F.3.1 [Logics and Meanings of Programs]: Specifying and Verifying and Reasoning about Programs|logics of programs General Terms: Languages, Theory Additional Key Words and Phrases: Constraints, correctness proof, flow analysis  
Affiliation: Aarhus University  
Abstract: Flow analyses of untyped higher-order functional programs have in the past decade been presented by Ayers, Bondorf, Consel, Jones, Heintze, Sestoft, Shivers, Steckler, Wand, and others. The analyses are usually defined as abstract interpretations and are used for rather different tasks such as type recovery, globalization, and binding-time analysis. The analyses all contain a global closure analysis that computes information about higher-order control-flow. Sestoft proved in 1989 and 1991 that closure analysis is correct with respect to call-by-name and call-by-value semantics, but it remained open if correctness holds for arbitrary beta-reduction. This article answers the question; both closure analysis and others are correct with respect to arbitrary beta-reduction. We also prove a subject-reduction result: closure information is still valid after beta-reduction. The core of our proof technique is to define closure analysis using a constraint system. The constraint system is equivalent to the closure analysis of Bondorf, which in turn is based on Sestoft's. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Agesen, O., Palsberg, J., and Schwartzbach, M. I. </author> <year> 1993. </year> <title> Type inference of Self: Analysis of objects with dynamic and multiple inheritance. </title> <booktitle> In Proceedings of ECOOP'93, 7th European Conference on Object-Oriented Programming. Lecture Notes in Computer Science, </booktitle> <volume> vol. 707. </volume> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <pages> 247-267. </pages>
Reference: <author> Ayers, A. </author> <year> 1992. </year> <title> Efficient closure analysis with reachability. </title> <booktitle> In Proceedings of WSA'92, </booktitle> <institution> Analyse Statique. IRISA, Rennes, France, </institution> <month> 126-134. </month>
Reference: <author> Barendregt, H. P. </author> <year> 1981. </year> <title> The Lambda Calculus: Its Syntax and Semantics. </title> <publisher> North-Holland, Amsterdam. </publisher>
Reference: <author> Bondorf, A. </author> <year> 1993. </year> <note> Similix 5.0 Manual. </note> <institution> DIKU, University of Copenhagen, Denmark. </institution> <note> Included in Similix 5.0 distribution. </note>
Reference: <author> Bondorf, A. </author> <year> 1991. </year> <title> Automatic autoprojection of higher order recursive equations. </title> <institution> Sci. Comput. Program. </institution> <month> 17, 1-3 (Dec.), </month> <pages> 3-34. </pages>
Reference: <author> Bondorf, A. and Danvy, O. </author> <year> 1991. </year> <title> Automatic autoprojection of recursive equations with global variables and abstract data types. </title> <journal> Sci. Comput. Program. </journal> <volume> 16, </volume> <pages> 151-195. </pages>
Reference: <author> Bondorf, A. and Jtrgensen, J. </author> <year> 1993. </year> <title> Efficient analyses for realistic off-line partial evaluation. </title>
Reference: <author> J. </author> <booktitle> Functional Program. </booktitle> <volume> 3, 3, </volume> <pages> 315-346. </pages>
Reference: <author> Consel, C. </author> <year> 1990. </year> <title> Binding time analysis for higher order untyped functional languages. </title> <booktitle> In Proceedings of the ACM Conference on Lisp and Functional Programming. ACM, </booktitle> <address> New York, </address> <pages> 264-272. </pages>
Reference: <author> Giannini, P. and Rocca, S. R. D. </author> <year> 1988. </year> <title> Characterization of typings in polymorphic type discipline. </title> <booktitle> In Proceedings of LICS'88, 3rd Annual Symposium on Logic in Computer Science. IEEE, </booktitle> <address> New York, </address> <pages> 61-70. </pages>
Reference: <author> Heintze, N. </author> <year> 1994. </year> <title> Set-based analysis of ML programs. </title> <booktitle> In Proceedings of the ACM Conference on LISP and Functional Programming. ACM, </booktitle> <address> New York, </address> <pages> 306-317. </pages>
Reference: <author> Heintze, N. </author> <year> 1992. </year> <title> Set based program analysis. </title> <type> Ph. D. thesis, </type> <institution> CMU-CS-92-201, Carnegie Mellon University, </institution> <address> Pittsburgh, Pa. </address>
Reference: <author> Jones, N. D. </author> <year> 1981. </year> <title> Flow analysis of lambda expressions. </title> <booktitle> In Proceedings of the 8th Colloquium on Automata, Languages, and Programming. Lecture Notes in Computer Science, </booktitle> <volume> vol. 115. </volume> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <pages> 114-128. </pages>
Reference: <author> Palsberg, J. </author> <year> 1993. </year> <title> Correctness of binding-time analysis. </title> <editor> J. </editor> <booktitle> Functional Program. </booktitle> <volume> 3, 3, </volume> <pages> 347-363. </pages>
Reference: <author> Palsberg, J. and Schwartzbach, M. I. </author> <year> 1994a. </year> <title> Binding-time analysis: Abstract interpretation versus type inference. </title> <booktitle> In Proceedings of ICCL'94, 5th IEEE International Conference on Computer Languages. IEEE, </booktitle> <address> New York, </address> <pages> 289-298. </pages>
Reference: <author> Palsberg, J. and Schwartzbach, M. I. </author> <year> 1994b. </year> <title> Object-Oriented Type Systems. </title> <publisher> John Wiley and Sons, </publisher> <address> New York. </address>
Reference: <author> Palsberg, J. and Schwartzbach, M. I. </author> <year> 1992a. </year> <title> Safety analysis versus type inference. </title> <institution> Inf. Comput. </institution> <note> To be published. </note>
Reference: <author> Palsberg, J. and Schwartzbach, M. I. </author> <year> 1992b. </year> <title> Safety analysis versus type inference for partial types. </title> <journal> Inf. Process. Lett. </journal> <volume> 43, </volume> <pages> 175-180. </pages>
Reference: <author> Palsberg, J. and Schwartzbach, M. I. </author> <year> 1991. </year> <title> Object-oriented type inference. </title> <booktitle> In Proceedings of OOPSLA'91, ACM SIGPLAN 6th Annual Conference on Object-Oriented Programming Systems, Languages and Applications. ACM, </booktitle> <address> New York, </address> <pages> 146-161. </pages>
Reference: <author> Sestoft, P. </author> <year> 1991. </year> <title> Analysis and efficient implementation of functional programs. </title> <type> Ph. D. thesis, </type> <institution> DIKU, University of Copenhagen. </institution>
Reference: <author> Sestoft, P. </author> <year> 1989. </year> <title> Replacing function parameters by global variables. M.S. </title> <type> thesis, </type> <institution> DIKU, University of Copenhagen. </institution>
Reference: <author> Shivers, O. </author> <year> 1991a. </year> <title> Control-flow analysis of higher-order languages. </title> <type> Ph. D. thesis, </type> <institution> CMU-CS-91-145, Carnegie Mellon University, </institution> <address> Pittsburgh, Pa. </address>
Reference: <author> Shivers, O. </author> <year> 1991b. </year> <title> Data-flow analysis and type recovery in Scheme. </title> <booktitle> In Topics in Advanced Language Implementation, </booktitle> <editor> P. Lee, Ed. </editor> <publisher> MIT Press, </publisher> <address> Cambridge, Mass., </address> <pages> 47-87. </pages>
Reference: <author> Ungar, D. and Smith, R. B. </author> <year> 1987. </year> <title> SELF: The power of simplicity. </title> <booktitle> In Proceedings of OOP-SLA'87, Object-Oriented Programming Systems, Languages and Applications. ACM, </booktitle> <address> New 16 Jens Palsberg York, </address> <month> 227-241. </month> <title> Also published in Lisp and Symbolic Computation 4(3), </title> <publisher> Kluwer Acadamic Publishers, </publisher> <month> June </month> <year> 1991. </year>
Reference: <author> Wand, M. and Steckler, P. </author> <year> 1994. </year> <title> Selective and lightweight closure conversion. </title> <booktitle> In Proceedings of POPL'94, 21st Annual Symposium on Principles of Programming Languages. ACM, </booktitle> <address> New York, 434-445. </address> <note> Received May 1994; revised October 1994; accepted October 1994 </note>
References-found: 25

