URL: ftp://ftp.cs.brown.edu/pub/techreports/95/cs95-13.ps.Z
Refering-URL: http://www.cs.brown.edu/publications/techreports/reports/CS-95-13.html
Root-URL: http://www.cs.brown.edu/
Abstract-found: 0
Intro-found: 0
Reference: 1. <author> Gerard Boudier, Ferdinando Gallo, Regis Minot, and Ian Thomas, </author> <title> An overview of PCTE and PCTE+, </title> <journal> SIGPLAN Notices Vol. </journal> <pages> 24(2) pp. </pages> <month> 248-257 (February </month> <year> 1989). </year>
Reference-contexts: Most commercial environment rely solely on control integration. PCTE <ref> [1] </ref> and evolving environments are emphasizing data integration as a needed facility. Control integration, a technique that we pioneered for programming environments in the FIELD system [11], is very effective for integrating a concurrently running set of tools.
Reference: 2. <institution> PROCASE Corporation, SMARTsystem Technical Overview, PROCASE Corporation (1989). </institution>
Reference-contexts: Fully utilizing a database provides a high degree of integration. Data integration has been used to some extent in the Ada programming support environments, in software engineering environments based on PCTE, and in limited commercial tools such as ProCase <ref> [2] </ref>. Unfortunately, practical data integration is difficult to achieve. The amount of data represented by intermediate results, especially for a large system, can be immense (i.e., gigabytes or larger).
Reference: 3. <author> Judith E. Grass and Yih-Farn Chen, </author> <title> The C++ information abstractor, </title> <booktitle> Proceedings of the Second USENIX C++ Conference, </booktitle> <pages> pp. </pages> <month> 265-275 (April </month> <year> 1990). </year>
Reference-contexts: Linton proposed using relational databases [5]. More recently, the FIELD environment provides a cross-reference database of program information that is used by a variety of tools in the environment [4], CIA and CIA++ represent environment-independent program databases for C and C++ respectively <ref> [3] </ref>. Suns programming environment includes a similar tool, the source browser, that maintains its own database. The use of an independent program database addresses some of the issues of data integration, but not all.
Reference: 4. <author> Moises Lejter, Scott Meyers, and Steven P. Reiss, </author> <title> Support for maintaining object-oriented programs, </title> <journal> IEEE Trans. on Software Engineering Vol. </journal> <pages> 18(12) pp. </pages> <month> 1045-1052 (December </month> <year> 1992). </year>
Reference-contexts: Interlisps Masterscope package used an internal database [14]. Linton proposed using relational databases [5]. More recently, the FIELD environment provides a cross-reference database of program information that is used by a variety of tools in the environment <ref> [4] </ref>, CIA and CIA++ represent environment-independent program databases for C and C++ respectively [3]. Suns programming environment includes a similar tool, the source browser, that maintains its own database. The use of an independent program database addresses some of the issues of data integration, but not all.
Reference: 5. <author> Mark A. Linton, </author> <title> Implementing relational views of programs, </title> <journal> SIGPLAN Notices Vol. </journal> <pages> 19(5) pp. </pages> <month> 132-140 (May </month> <year> 1984). </year>
Reference-contexts: An alternative to complete data integration has been to provide a program database as another tool in the environment. Interlisps Masterscope package used an internal database [14]. Linton proposed using relational databases <ref> [5] </ref>. More recently, the FIELD environment provides a cross-reference database of program information that is used by a variety of tools in the environment [4], CIA and CIA++ represent environment-independent program databases for C and C++ respectively [3].
Reference: 6. <author> Gail Mitchell, </author> <title> Extensible query processing in an object-oriented database, </title> <note> Brown University Computer Science Technical Report CS-93-16 (May 1993). </note>
Reference: 7. <author> Robert Munck, Patricia Oberndorf, Erhard Ploedereder, and Richard Thall, </author> <title> An overview of DOD_STD_1838A (proposed), the common APSE interface set, Revision A, </title> <journal> SIGPLAN Notices Vol. </journal> <pages> 24(2) pp. </pages> <month> 235-247 (February </month> <year> 1989). </year> <title> Fragments: A Mechanism for Low Cost Data Integration May 5, </title> <year> 1995 </year> <month> 13 </month>
Reference-contexts: While the traditional unit of a file is too large for tight integration, using the basic syntactic constructs of the language (such as Diana for Ada <ref> [7] </ref>), requires more information than is necessary and is too language specific. For most applications it is sufficient to break a program down into language-independent logical units such as functions, class definitions, declarations, etc. The other documents that compose the system can be broken down similarly.
Reference: 8. <author> Norman Ramsey, </author> <title> Literate programming tools need not be complex, </title> <institution> Princeton University Department of Computer Science Research Report CS-TR-351-91 (October 1991). </institution>
Reference: 9. <author> N. Ramsey, </author> <title> Literate programming: weaving a language-independent WEB, </title> <journal> CACM Vol. </journal> <pages> 32(9) pp. </pages> <month> 1051-1055 (September </month> <year> 1989). </year>
Reference: 10. <author> Steven P. Reiss, Eris: </author> <title> the design and implementation of an experimental relational information system, </title> <institution> Brown University (1983). </institution>
Reference: 11. <author> Steven P. Reiss, </author> <title> Connecting tools using message passing in the FIELD environment, </title> <booktitle> IEEE Software Vol. </booktitle> <pages> 7(4) pp. </pages> <month> 57-67 (July </month> <year> 1990). </year>
Reference-contexts: Most commercial environment rely solely on control integration. PCTE [1] and evolving environments are emphasizing data integration as a needed facility. Control integration, a technique that we pioneered for programming environments in the FIELD system <ref> [11] </ref>, is very effective for integrating a concurrently running set of tools. It is the Fragments: A Mechanism for Low Cost Data Integration May 5, 1995 4 basis for most current commercial programming environments including Hewlett-Packards Soft-bench and Suns Tooltalk.
Reference: 12. <author> R. Rivest, </author> <title> The MD5 message-digest algorithm, </title> <institution> MIT Laboratory for Computer Science and RSD Data Security, Inc. </institution> <month> (April </month> <year> 1992). </year>
Reference-contexts: This can then be used to assign a date-last-modified to each fragment for doing intelligent system building or detecting changes <ref> [12] </ref>. Fragment positions identify the start and end position of the fragment in a file. This is generally easy to determine by keeping track of the start and end position of each token that is scanned and then noting the first and last token of each fragment.
Reference: 13. <author> K. Shoens, A. Luniewski, P. Schwarz, J. Stamos, and J. Thomas, </author> <title> The Rufus system: information organization for semi-structured data, </title> <booktitle> Proc. 19th VLDB Conference, </booktitle> <pages> pp. </pages> <month> 1-12 </month> <year> (1993). </year>
Reference-contexts: Here there exist virtual files at various sites that when accessed as a file, actually invoke a computation of some sort. Other related work can also be seen in databases that try to abstract information from files such as the Rufus system <ref> [13] </ref>. 4.0 Fragment Integration Our approach to integration combines standard control integration with a much simplified form of data integration that we call fragment integration.
Reference: 14. <author> Warren Teitelman, </author> <note> Interlisp Reference Manual, XEROX (1974). </note>
Reference-contexts: An alternative to complete data integration has been to provide a program database as another tool in the environment. Interlisps Masterscope package used an internal database <ref> [14] </ref>. Linton proposed using relational databases [5]. More recently, the FIELD environment provides a cross-reference database of program information that is used by a variety of tools in the environment [4], CIA and CIA++ represent environment-independent program databases for C and C++ respectively [3].
References-found: 14

