URL: http://www.research.att.com/library/trs/TRs/98/98.14/98.14.1.body.ps
Refering-URL: http://www.research.att.com/library/trs/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: GREEDY RANDOMIZED ADAPTIVE SEARCH PROCEDURES FOR THE STEINER PROBLEM IN GRAPHS  
Author: SIMONE L. MARTINS, PANOS M. PARDALOS, MAURICIO G.C. RESENDE, AND CELSO C. RIBEIRO 
Abstract: We describe four versions of a Greedy Randomized Adaptive Search Procedure (GRASP) for finding approximate solutions of general instances of the Steiner Problem in Graphs. Different construction and local search algorithms are presented. Preliminary computational results with one of the versions on a variety of test problems are reported. On the majority of instances from the OR-Library, a set of standard test problems, the GRASP produced optimal solutions. On those that optimal solutions were not found, the GRASP found good quality approximate solutions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Y.P. Aneja. </author> <title> An integer linear programming approach to the Steiner problem in graphs. </title> <journal> Networks, </journal> <volume> 10 </volume> <pages> 167-178, </pages> <year> 1980. </year>
Reference-contexts: A branch-and-bound approach that uses heuristics to provide good lower bounds and to choose the next edge for consideration in the backtracking process is proposed by Foulds and Gibbons [17], and Shore, Foulds, and Gibbons [41]. Other approaches, including branch-and-bound, are proposed by Beasley [3, 4], Aneja <ref> [1] </ref>, Maculan [32], Lucena [31], Wong [48], and Chopra, Gorres, and Rao [7]. Exact algorithms for the SPG can benefit from preprocessing the graph so that the size of the problem to solve is reduced. <p> Many heuristics have been proposed to find approximate solutions for the SPG. For example, in Aneja <ref> [1] </ref>, a greedy variation of a set covering algorithm is presented, and an MST-based procedure is used as a shortcut in the dual ascent algorithm given by Wong [48]. <p> User running times were measured with the system routine getrusage. All instances were solved with identical parameter settings. The restricted candidate list parameter ff was selected at random using the uniform distribution in the interval <ref> [0; 1] </ref>. Each GRASP iteration used the same parameter during the entire iteration. The acceleration scheme described in Subsubsection 2.1.4 was activated with the parameter k best = 100. Table 2 summarizes the computational results.
Reference: [2] <author> A. Balakrishnan and N.R. Patel. </author> <title> Problem reduction methods and a tree generation algorithm for the Steiner network problem. </title> <journal> Networks, </journal> <volume> 17 </volume> <pages> 65-85, </pages> <year> 1987. </year>
Reference-contexts: Another algorithm, which generates spanning trees for a derived problem in order of increasing total length until a solution to the original problem can be inferred, is proposed by Balakrishnan and Patel <ref> [2] </ref>. Also, implicit enumeration approaches are given by Shore, Foulds, and Gibbons [41], and Yang Date: July 6, 1998. Key words and phrases. Combinatorial optimization, Steiner Problem in Graphs, local search, GRASP, network design. AT&T Labs Research Technical Report: TR 98.14.1. 1 2 S. L. MATRINS, P. M. PARDALOS, M. <p> Exact algorithms for the SPG can benefit from preprocessing the graph so that the size of the problem to solve is reduced. Reduction techniques are discussed in Beasley [3], Balakrishnan and Patel <ref> [2] </ref>, Duin and Volgenant [13, 14], Voss [44, 45], Iwainsky et al. [24], Chopra, Gorres, and Rao [7], Khoury and Pardalos [27], and Duin [11, 12]. Many heuristics have been proposed to find approximate solutions for the SPG.
Reference: [3] <author> J.E. Beasley. </author> <title> An algorithm for the Steiner problem in graphs. </title> <journal> Networks, </journal> <volume> 14 </volume> <pages> 147-159, </pages> <year> 1984. </year>
Reference-contexts: A branch-and-bound approach that uses heuristics to provide good lower bounds and to choose the next edge for consideration in the backtracking process is proposed by Foulds and Gibbons [17], and Shore, Foulds, and Gibbons [41]. Other approaches, including branch-and-bound, are proposed by Beasley <ref> [3, 4] </ref>, Aneja [1], Maculan [32], Lucena [31], Wong [48], and Chopra, Gorres, and Rao [7]. Exact algorithms for the SPG can benefit from preprocessing the graph so that the size of the problem to solve is reduced. <p> Exact algorithms for the SPG can benefit from preprocessing the graph so that the size of the problem to solve is reduced. Reduction techniques are discussed in Beasley <ref> [3] </ref>, Balakrishnan and Patel [2], Duin and Volgenant [13, 14], Voss [44, 45], Iwainsky et al. [24], Chopra, Gorres, and Rao [7], Khoury and Pardalos [27], and Duin [11, 12]. Many heuristics have been proposed to find approximate solutions for the SPG.
Reference: [4] <author> J.E. Beasley. </author> <title> An SST-based algorithm for the Steiner problem on graphs. </title> <journal> Networks, </journal> <volume> 19 </volume> <pages> 1-16, </pages> <year> 1989. </year>
Reference-contexts: A branch-and-bound approach that uses heuristics to provide good lower bounds and to choose the next edge for consideration in the backtracking process is proposed by Foulds and Gibbons [17], and Shore, Foulds, and Gibbons [41]. Other approaches, including branch-and-bound, are proposed by Beasley <ref> [3, 4] </ref>, Aneja [1], Maculan [32], Lucena [31], Wong [48], and Chopra, Gorres, and Rao [7]. Exact algorithms for the SPG can benefit from preprocessing the graph so that the size of the problem to solve is reduced.
Reference: [5] <author> J.E. Beasley. OR-Library: </author> <title> Distributing test problems by electronic mail. </title> <journal> J. of Oper. Res. Soc., </journal> <volume> 41 </volume> <pages> 1069-1072, </pages> <year> 1990. </year>
Reference-contexts: For each of the 20 series C test problems from the OR-Library <ref> [5] </ref>, we present the weight W (T fl ) of the best solution found and the computation time in seconds (secs) obtained by (i) a straightforward version of algorithm GRASP for SPG with a random values for ff, and (ii) the same algorithm using the above acceleration scheme with k best <p> Preliminary experimental results In this section, we report on preliminary computational results with an implementation of the GRASP described in Subsection 2.1, i.e. using the spanning tree based construction procedure and the vertex-based local search. We considered the 60 instances from classes C, D, and E of Beasley's OR-Library <ref> [5] </ref>. The experiments were done on a Silicon Graphics Challenge computer with 20 196 MHz MIPS R10000 processors and 6.144 Gbytes of memory. The code was executed each time on a single processor.
Reference: [6] <author> K. Bharath-Kumar and J.M. Jaffe. </author> <title> Routing to multiple destinations in computer networks. </title> <journal> IEEE Trans. Commun., </journal> <volume> COM-31:343-351, </volume> <year> 1983. </year>
Reference-contexts: Another MST-based heuristic was proposed by Choukmane [8] and independently by Plesnk [36], Kou, Markowsky, and Berman [28], Bharath-Kumar and Jaffe <ref> [6] </ref>, and Iwainsky et al. [24]. A heuristic based on Kruskal's MST algorithm is given by Wu, Widmayer, and Wong [49]. Another heuristic approach based on Prim's MST algorithm is given by Takahashi and Matsuyama [42].
Reference: [7] <author> S. Chopra, E.R. Gorres, and M.R. Rao. </author> <title> Solving the Steiner tree problem on graphs using branch and cut. </title> <journal> ORSA Journal on Computing, </journal> <volume> 4 </volume> <pages> 320-335, </pages> <year> 1992. </year>
Reference-contexts: Other approaches, including branch-and-bound, are proposed by Beasley [3, 4], Aneja [1], Maculan [32], Lucena [31], Wong [48], and Chopra, Gorres, and Rao <ref> [7] </ref>. Exact algorithms for the SPG can benefit from preprocessing the graph so that the size of the problem to solve is reduced. Reduction techniques are discussed in Beasley [3], Balakrishnan and Patel [2], Duin and Volgenant [13, 14], Voss [44, 45], Iwainsky et al. [24], Chopra, Gorres, and Rao [7], <p> <ref> [7] </ref>. Exact algorithms for the SPG can benefit from preprocessing the graph so that the size of the problem to solve is reduced. Reduction techniques are discussed in Beasley [3], Balakrishnan and Patel [2], Duin and Volgenant [13, 14], Voss [44, 45], Iwainsky et al. [24], Chopra, Gorres, and Rao [7], Khoury and Pardalos [27], and Duin [11, 12]. Many heuristics have been proposed to find approximate solutions for the SPG.
Reference: [8] <author> E.-A. Choukhmane. </author> <title> Une heuristique pour le probleme de l'arbre de Steiner. </title> <journal> RAIRO Recherche Operationnelle, </journal> <volume> 12 </volume> <pages> 207-212, </pages> <year> 1978. </year>
Reference-contexts: For example, in Aneja [1], a greedy variation of a set covering algorithm is presented, and an MST-based procedure is used as a shortcut in the dual ascent algorithm given by Wong [48]. Another MST-based heuristic was proposed by Choukmane <ref> [8] </ref> and independently by Plesnk [36], Kou, Markowsky, and Berman [28], Bharath-Kumar and Jaffe [6], and Iwainsky et al. [24]. A heuristic based on Kruskal's MST algorithm is given by Wu, Widmayer, and Wong [49]. Another heuristic approach based on Prim's MST algorithm is given by Takahashi and Matsuyama [42]. <p> Spanning tree based construction phase. The spanning tree based construction phase of GRASP makes use of the distance network heuristic, suggested by Choukmane <ref> [8] </ref>, Iwainsky, Canuto, Taraszow and Villa [24], Kou, Markowsky and Berman [28], and Plesnk [36], with time complexity O (jXjjV j 2 ). Mehlhorn [34] proposed a modification of the original version, leading to a procedure using simple 4 S. L. MATRINS, P. M. PARDALOS, M. G. C.
Reference: [9] <author> D. Cieslik. </author> <title> Steiner minimal trees, </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Dordrecht, </address> <year> 1998. </year>
Reference-contexts: A different heuristic based on neighborhood contraction techniques is provided by Plesnk [36]. The reader is referred to Winter [47], Hwang and Richards [22], Hwang, Richards, and Winter [23], and Cieslik <ref> [9] </ref> for surveys. 2. GRASP for the Steiner problem in graphs Approximate solutions for the Steiner minimal tree problem can be obtained by many techniques, including node, spanning tree, and path-based approaches.
Reference: [10] <author> S.E. Dreyfus and R.A. Wagner. </author> <title> The Steiner problem in graphs. </title> <journal> Networks, </journal> <volume> 1 </volume> <pages> 195-207, </pages> <year> 1972. </year>
Reference-contexts: Along another line, straightforward dynamic programming approaches are proposed by Dreyfus and Wagner <ref> [10] </ref>, and Levin [30]. A branch-and-bound approach that uses heuristics to provide good lower bounds and to choose the next edge for consideration in the backtracking process is proposed by Foulds and Gibbons [17], and Shore, Foulds, and Gibbons [41].
Reference: [11] <author> C.W. Duin. </author> <title> Steiner's problem in graphs. </title> <type> Ph.D. Thesis, </type> <institution> University of Amsterdam, </institution> <note> 1993. </note> <author> 12 S. L. MATRINS, P. M. PARDALOS, M. G. C. RESENDE, AND C. C. </author> <month> RIBERIO </month>
Reference-contexts: Reduction techniques are discussed in Beasley [3], Balakrishnan and Patel [2], Duin and Volgenant [13, 14], Voss [44, 45], Iwainsky et al. [24], Chopra, Gorres, and Rao [7], Khoury and Pardalos [27], and Duin <ref> [11, 12] </ref>. Many heuristics have been proposed to find approximate solutions for the SPG. For example, in Aneja [1], a greedy variation of a set covering algorithm is presented, and an MST-based procedure is used as a shortcut in the dual ascent algorithm given by Wong [48].
Reference: [12] <author> C.W. Duin. </author> <title> Reducing the graphical Steiner problem with a sensitivity test. In Network Design: Connectivity and Facilities Location, P.M. </title> <editor> Pardalos and D.-Z. Du (Eds.), </editor> <booktitle> DIMACS Series on Discrete Mathematics and Theoretical Computer Science, </booktitle> <volume> 40 </volume> <pages> 79-107, </pages> <year> 1998. </year>
Reference-contexts: Reduction techniques are discussed in Beasley [3], Balakrishnan and Patel [2], Duin and Volgenant [13, 14], Voss [44, 45], Iwainsky et al. [24], Chopra, Gorres, and Rao [7], Khoury and Pardalos [27], and Duin <ref> [11, 12] </ref>. Many heuristics have been proposed to find approximate solutions for the SPG. For example, in Aneja [1], a greedy variation of a set covering algorithm is presented, and an MST-based procedure is used as a shortcut in the dual ascent algorithm given by Wong [48].
Reference: [13] <author> C.W. Duin and A. Volgenant. </author> <title> Some generalizations of the Steiner problem in graphs. </title> <journal> Networks, </journal> <volume> 17 </volume> <pages> 353-364, </pages> <year> 1987. </year>
Reference-contexts: Exact algorithms for the SPG can benefit from preprocessing the graph so that the size of the problem to solve is reduced. Reduction techniques are discussed in Beasley [3], Balakrishnan and Patel [2], Duin and Volgenant <ref> [13, 14] </ref>, Voss [44, 45], Iwainsky et al. [24], Chopra, Gorres, and Rao [7], Khoury and Pardalos [27], and Duin [11, 12]. Many heuristics have been proposed to find approximate solutions for the SPG.
Reference: [14] <author> C.W. Duin and A. Volgenant. </author> <title> Reduction tests for the Steiner problem in graphs. </title> <journal> Networks, </journal> <volume> 19 </volume> <pages> 549-567, </pages> <year> 1989. </year>
Reference-contexts: Exact algorithms for the SPG can benefit from preprocessing the graph so that the size of the problem to solve is reduced. Reduction techniques are discussed in Beasley [3], Balakrishnan and Patel [2], Duin and Volgenant <ref> [13, 14] </ref>, Voss [44, 45], Iwainsky et al. [24], Chopra, Gorres, and Rao [7], Khoury and Pardalos [27], and Duin [11, 12]. Many heuristics have been proposed to find approximate solutions for the SPG.
Reference: [15] <author> T.A. Feo and M.G.C. Resende. </author> <title> A probabilistic heuristic for a computationally difficult set covering problem. </title> <journal> Operations Research Letters, </journal> <volume> 8 </volume> <pages> 67-71, </pages> <year> 1989. </year>
Reference-contexts: We also propose a path-based construction phase and a path-based local search. Combining these two construction phases with the two local search phases, yields four versions of GRASP. 2.1. GRASP. A greedy randomized adaptive search procedure (GRASP) <ref> [15, 16] </ref> can be seen as a metaheuristic which captures good features of pure greedy algorithms (e.g. fast local search convergence and good quality solutions) and also of random construction procedures (e.g. diversification).
Reference: [16] <author> T.A. Feo and M.G.C. Resende. </author> <title> Greedy randomized adaptive search procedures. </title> <journal> Journal of Global Optimization, </journal> <volume> 6 </volume> <pages> 109-133, </pages> <year> 1995. </year>
Reference-contexts: We also propose a path-based construction phase and a path-based local search. Combining these two construction phases with the two local search phases, yields four versions of GRASP. 2.1. GRASP. A greedy randomized adaptive search procedure (GRASP) <ref> [15, 16] </ref> can be seen as a metaheuristic which captures good features of pure greedy algorithms (e.g. fast local search convergence and good quality solutions) and also of random construction procedures (e.g. diversification).
Reference: [17] <author> L.R. Foulds and P.B. Gibbons. </author> <title> A branch and bound approach to the Steiner problem in graphs. </title> <booktitle> Proceedings of the 14th Annual Conference of the Operational Research Society of New Zealand, </booktitle> <volume> 1 </volume> <pages> 61-70, </pages> <year> 1978. </year>
Reference-contexts: Along another line, straightforward dynamic programming approaches are proposed by Dreyfus and Wagner [10], and Levin [30]. A branch-and-bound approach that uses heuristics to provide good lower bounds and to choose the next edge for consideration in the backtracking process is proposed by Foulds and Gibbons <ref> [17] </ref>, and Shore, Foulds, and Gibbons [41]. Other approaches, including branch-and-bound, are proposed by Beasley [3, 4], Aneja [1], Maculan [32], Lucena [31], Wong [48], and Chopra, Gorres, and Rao [7].
Reference: [18] <author> L.R. Foulds and J.V. Rayward-Smith. </author> <title> Steiner problems in graphs: Algorithms and applications. </title> <journal> Eng. Optimization, </journal> <volume> 7 </volume> <pages> 7-16, </pages> <year> 1983. </year>
Reference-contexts: While all of the above MTS-based approaches implicitly choose the Steiner nodes (optional nodes in the Steiner tree), an average distance heuristic that selects those nodes is given by Rayward-Smith [39]; refer also to Rayward-Smith and Clare [40], and Foulds and Rayward-Smith <ref> [18] </ref>. A different heuristic based on neighborhood contraction techniques is provided by Plesnk [36]. The reader is referred to Winter [47], Hwang and Richards [22], Hwang, Richards, and Winter [23], and Cieslik [9] for surveys. 2.
Reference: [19] <author> M.R. Garey and D.S. Johnson. </author> <title> The rectilinear Steiner tree problem is NP-complete. </title> <journal> SIAM J. Appl. Math., </journal> <volume> 32 </volume> <pages> 826-834, </pages> <year> 1977. </year>
Reference-contexts: The SPG has also many equivalent formulations as an integer program [22] or as a continuous nonconvex global optimization problem [26]. Karp [25] showed earlier that the SPG decision problem is NP-complete in general. Even for some restrictions like grid graphs <ref> [19] </ref>, bipartite graphs [20], chordal and split graphs [46], the problem remains NP-complete. Moreover, on directed graphs, Provan and Ball [38] showed that the variant of the rooted Steiner arborescence of a directed graph is NP-complete.
Reference: [20] <author> M.R. Garey and D.S. Johnson. </author> <title> Computers and Intractability, </title> <editor> W. H. </editor> <publisher> Freeman, </publisher> <address> San Francisco, </address> <year> 1979. </year>
Reference-contexts: The SPG has also many equivalent formulations as an integer program [22] or as a continuous nonconvex global optimization problem [26]. Karp [25] showed earlier that the SPG decision problem is NP-complete in general. Even for some restrictions like grid graphs [19], bipartite graphs <ref> [20] </ref>, chordal and split graphs [46], the problem remains NP-complete. Moreover, on directed graphs, Provan and Ball [38] showed that the variant of the rooted Steiner arborescence of a directed graph is NP-complete.
Reference: [21] <author> S.L. Hakimi. </author> <title> Steiner's problem in graphs and its implications. </title> <journal> Networks, </journal> <volume> 1 </volume> <pages> 113-133, </pages> <year> 1971. </year>
Reference-contexts: 1. Introduction Posed independently by Hakimi <ref> [21] </ref> and Levin [30], the Steiner problem in graphs (SPG) consists in connecting a subset of given nodes on a graph with the minimum cost tree. The SPG has also many equivalent formulations as an integer program [22] or as a continuous nonconvex global optimization problem [26]. <p> In order to avoid total enumeration, topological and other properties of general graphs can be used. Another alternative is to develop good lower and upper bounds in order to reduce the possible search space. Two simple approaches are proposed by Hakimi <ref> [21] </ref>. While one of them is based on spanning tree enumeration, the other approach is a topology enumeration recursive algorithm.
Reference: [22] <author> F.K. Hwang and D.S. Richards. </author> <title> Steiner tree Problems. </title> <journal> Networks, </journal> <volume> 2 </volume> <pages> 55-89, </pages> <year> 1992. </year>
Reference-contexts: 1. Introduction Posed independently by Hakimi [21] and Levin [30], the Steiner problem in graphs (SPG) consists in connecting a subset of given nodes on a graph with the minimum cost tree. The SPG has also many equivalent formulations as an integer program <ref> [22] </ref> or as a continuous nonconvex global optimization problem [26]. Karp [25] showed earlier that the SPG decision problem is NP-complete in general. Even for some restrictions like grid graphs [19], bipartite graphs [20], chordal and split graphs [46], the problem remains NP-complete. <p> A different heuristic based on neighborhood contraction techniques is provided by Plesnk [36]. The reader is referred to Winter [47], Hwang and Richards <ref> [22] </ref>, Hwang, Richards, and Winter [23], and Cieslik [9] for surveys. 2. GRASP for the Steiner problem in graphs Approximate solutions for the Steiner minimal tree problem can be obtained by many techniques, including node, spanning tree, and path-based approaches.
Reference: [23] <author> F.K. Hwang, D.S. Richards, and P. Winter. </author> <title> The Steiner Tree Problem, </title> <publisher> Elsevier, </publisher> <address> Amsterdam, </address> <year> 1992. </year>
Reference-contexts: A different heuristic based on neighborhood contraction techniques is provided by Plesnk [36]. The reader is referred to Winter [47], Hwang and Richards [22], Hwang, Richards, and Winter <ref> [23] </ref>, and Cieslik [9] for surveys. 2. GRASP for the Steiner problem in graphs Approximate solutions for the Steiner minimal tree problem can be obtained by many techniques, including node, spanning tree, and path-based approaches.
Reference: [24] <author> A. Iwainsky, E. Canuto, O. Taraszow, and A. Villa. </author> <title> Network decomposition for the optimization of connection structures. </title> <journal> Networks, </journal> <volume> 16 </volume> <pages> 205-235, </pages> <year> 1986. </year>
Reference-contexts: Exact algorithms for the SPG can benefit from preprocessing the graph so that the size of the problem to solve is reduced. Reduction techniques are discussed in Beasley [3], Balakrishnan and Patel [2], Duin and Volgenant [13, 14], Voss [44, 45], Iwainsky et al. <ref> [24] </ref>, Chopra, Gorres, and Rao [7], Khoury and Pardalos [27], and Duin [11, 12]. Many heuristics have been proposed to find approximate solutions for the SPG. <p> Another MST-based heuristic was proposed by Choukmane [8] and independently by Plesnk [36], Kou, Markowsky, and Berman [28], Bharath-Kumar and Jaffe [6], and Iwainsky et al. <ref> [24] </ref>. A heuristic based on Kruskal's MST algorithm is given by Wu, Widmayer, and Wong [49]. Another heuristic approach based on Prim's MST algorithm is given by Takahashi and Matsuyama [42]. <p> Spanning tree based construction phase. The spanning tree based construction phase of GRASP makes use of the distance network heuristic, suggested by Choukmane [8], Iwainsky, Canuto, Taraszow and Villa <ref> [24] </ref>, Kou, Markowsky and Berman [28], and Plesnk [36], with time complexity O (jXjjV j 2 ). Mehlhorn [34] proposed a modification of the original version, leading to a procedure using simple 4 S. L. MATRINS, P. M. PARDALOS, M. G. C. RESENDE, AND C. C.
Reference: [25] <author> R.M. Karp. </author> <title> Reducibility among combinatorial problems. In Complexity of Computer Communications, R.E. </title> <editor> Miller and J.W. Thatcher (Eds.), </editor> <publisher> Plenum Press, </publisher> <address> New York, 85-103, </address> <year> 1972. </year>
Reference-contexts: The SPG has also many equivalent formulations as an integer program [22] or as a continuous nonconvex global optimization problem [26]. Karp <ref> [25] </ref> showed earlier that the SPG decision problem is NP-complete in general. Even for some restrictions like grid graphs [19], bipartite graphs [20], chordal and split graphs [46], the problem remains NP-complete.
Reference: [26] <author> B.N. Khoury, P.M. Pardalos, and D.W. Hearn. </author> <title> Equivalent formulations for the Steiner problem in graphs. In Network Optimization Problems, P.M. </title> <editor> Pardalos and D.-Z. Du (Eds.), </editor> <publisher> World Scientific, </publisher> <pages> 111-124, </pages> <year> 1993. </year>
Reference-contexts: The SPG has also many equivalent formulations as an integer program [22] or as a continuous nonconvex global optimization problem <ref> [26] </ref>. Karp [25] showed earlier that the SPG decision problem is NP-complete in general. Even for some restrictions like grid graphs [19], bipartite graphs [20], chordal and split graphs [46], the problem remains NP-complete.
Reference: [27] <editor> B.N. Khoury and P.M. Pardalos. </editor> <title> A heuristic for the Steiner problem on graphs. </title> <journal> Comp. Opt. & Appl., </journal> <volume> 6 </volume> <pages> 5-14, </pages> <year> 1996. </year>
Reference-contexts: Reduction techniques are discussed in Beasley [3], Balakrishnan and Patel [2], Duin and Volgenant [13, 14], Voss [44, 45], Iwainsky et al. [24], Chopra, Gorres, and Rao [7], Khoury and Pardalos <ref> [27] </ref>, and Duin [11, 12]. Many heuristics have been proposed to find approximate solutions for the SPG. For example, in Aneja [1], a greedy variation of a set covering algorithm is presented, and an MST-based procedure is used as a shortcut in the dual ascent algorithm given by Wong [48].
Reference: [28] <author> L. Kou, G. Markowsky, and L. Berman. </author> <title> A fast algorithm for Steiner trees. </title> <journal> Acta Info., </journal> <volume> 15 </volume> <pages> 141-145, </pages> <year> 1981. </year>
Reference-contexts: Another MST-based heuristic was proposed by Choukmane [8] and independently by Plesnk [36], Kou, Markowsky, and Berman <ref> [28] </ref>, Bharath-Kumar and Jaffe [6], and Iwainsky et al. [24]. A heuristic based on Kruskal's MST algorithm is given by Wu, Widmayer, and Wong [49]. Another heuristic approach based on Prim's MST algorithm is given by Takahashi and Matsuyama [42]. <p> Spanning tree based construction phase. The spanning tree based construction phase of GRASP makes use of the distance network heuristic, suggested by Choukmane [8], Iwainsky, Canuto, Taraszow and Villa [24], Kou, Markowsky and Berman <ref> [28] </ref>, and Plesnk [36], with time complexity O (jXjjV j 2 ). Mehlhorn [34] proposed a modification of the original version, leading to a procedure using simple 4 S. L. MATRINS, P. M. PARDALOS, M. G. C. RESENDE, AND C. C. RIBERIO data structures and presenting an improved time complexity.
Reference: [29] <author> J.B. Kruskal. </author> <title> On the shortest apanning subtree of a graph and the traveling salesman problem. </title> <journal> Proceedings of the American Mathematical Society, </journal> <volume> 7 </volume> <pages> 48-50, </pages> <year> 1956. </year>
Reference-contexts: Next, Kruskal's greedy algorithm <ref> [29] </ref> is used to solve the minimum spanning tree problem MSTP (X; E 0 ; w 0 ). This algorithm works as follows. A minimum spanning tree is constructed, one edge at a time, until all nodes are connected.
Reference: [30] <author> A. Levin. </author> <title> Algorithms for the shortest connection of a group of graph vertices. </title> <journal> Soviet Math. Doklady, </journal> <volume> 12 </volume> <pages> 1477-1481, </pages> <year> 1971. </year>
Reference-contexts: 1. Introduction Posed independently by Hakimi [21] and Levin <ref> [30] </ref>, the Steiner problem in graphs (SPG) consists in connecting a subset of given nodes on a graph with the minimum cost tree. The SPG has also many equivalent formulations as an integer program [22] or as a continuous nonconvex global optimization problem [26]. <p> Along another line, straightforward dynamic programming approaches are proposed by Dreyfus and Wagner [10], and Levin <ref> [30] </ref>. A branch-and-bound approach that uses heuristics to provide good lower bounds and to choose the next edge for consideration in the backtracking process is proposed by Foulds and Gibbons [17], and Shore, Foulds, and Gibbons [41].
Reference: [31] <author> A. Lucena. </author> <title> Steiner problem in graphs: Lagrangean relaxation and cutting planes. </title> <journal> COAL Bulletin, </journal> <volume> 21 </volume> <pages> 2-7, </pages> <year> 1992. </year>
Reference-contexts: Other approaches, including branch-and-bound, are proposed by Beasley [3, 4], Aneja [1], Maculan [32], Lucena <ref> [31] </ref>, Wong [48], and Chopra, Gorres, and Rao [7]. Exact algorithms for the SPG can benefit from preprocessing the graph so that the size of the problem to solve is reduced.
Reference: [32] <author> N. Maculan. </author> <title> The Steiner problem in graphs. </title> <journal> Ann. Discrete Math., </journal> <volume> 31 </volume> <pages> 185-222, </pages> <year> 1987. </year>
Reference-contexts: A branch-and-bound approach that uses heuristics to provide good lower bounds and to choose the next edge for consideration in the backtracking process is proposed by Foulds and Gibbons [17], and Shore, Foulds, and Gibbons [41]. Other approaches, including branch-and-bound, are proposed by Beasley [3, 4], Aneja [1], Maculan <ref> [32] </ref>, Lucena [31], Wong [48], and Chopra, Gorres, and Rao [7]. Exact algorithms for the SPG can benefit from preprocessing the graph so that the size of the problem to solve is reduced.
Reference: [33] <author> T.L. Magnanti and R.T. Wong. </author> <title> Network design and transportation planning: Models and algorithms. </title> <journal> Trans. Science, </journal> <volume> 18 </volume> <pages> 1-55, </pages> <year> 1984. </year>
Reference: [34] <author> K. Mehlhorn. </author> <title> A faster approximation for the Steiner problem in graphs. </title> <journal> Information Processing Letters, </journal> <volume> 27 </volume> <pages> 125-128, </pages> <year> 1988. </year>
Reference-contexts: Spanning tree based construction phase. The spanning tree based construction phase of GRASP makes use of the distance network heuristic, suggested by Choukmane [8], Iwainsky, Canuto, Taraszow and Villa [24], Kou, Markowsky and Berman [28], and Plesnk [36], with time complexity O (jXjjV j 2 ). Mehlhorn <ref> [34] </ref> proposed a modification of the original version, leading to a procedure using simple 4 S. L. MATRINS, P. M. PARDALOS, M. G. C. RESENDE, AND C. C. RIBERIO data structures and presenting an improved time complexity. <p> Neighborhoods N (i); 8i = 1; : : : ; jXj can be computed in time O (jEj + jV j log jV j) <ref> [34] </ref>, which is the same complexity of the minimum spanning tree computation. Then, the overall complexity of the distance heuristic network with Mehlhorn's improvements is only O (jEj + jV j log jV j), which is much better than the original bound.
Reference: [35] <author> M. Minoux. </author> <title> Efficient greedy heuristics for Steiner tree problems using reoptimization and supermodularity. </title> <journal> INFOR, </journal> <volume> 28 </volume> <pages> 221-233, </pages> <year> 1990. </year>
Reference-contexts: fV n Xg n S, the computation of neighbor T S [fsg [X;E (S [fsg [X);w (S [ fsg [ X) obtained by the insertion of s into the current set S of Steiner nodes can be done in O (jV j) average time, using the algorithm proposed by Minoux <ref> [35] </ref>.
Reference: [36] <author> J. Plesnk. </author> <title> A bound for the Steiner tree problem in graphs. </title> <journal> Math. Slovoca, </journal> <volume> 31 </volume> <pages> 155-163, </pages> <year> 1981. </year>
Reference-contexts: For example, in Aneja [1], a greedy variation of a set covering algorithm is presented, and an MST-based procedure is used as a shortcut in the dual ascent algorithm given by Wong [48]. Another MST-based heuristic was proposed by Choukmane [8] and independently by Plesnk <ref> [36] </ref>, Kou, Markowsky, and Berman [28], Bharath-Kumar and Jaffe [6], and Iwainsky et al. [24]. A heuristic based on Kruskal's MST algorithm is given by Wu, Widmayer, and Wong [49]. Another heuristic approach based on Prim's MST algorithm is given by Takahashi and Matsuyama [42]. <p> A different heuristic based on neighborhood contraction techniques is provided by Plesnk <ref> [36] </ref>. The reader is referred to Winter [47], Hwang and Richards [22], Hwang, Richards, and Winter [23], and Cieslik [9] for surveys. 2. <p> Spanning tree based construction phase. The spanning tree based construction phase of GRASP makes use of the distance network heuristic, suggested by Choukmane [8], Iwainsky, Canuto, Taraszow and Villa [24], Kou, Markowsky and Berman [28], and Plesnk <ref> [36] </ref>, with time complexity O (jXjjV j 2 ). Mehlhorn [34] proposed a modification of the original version, leading to a procedure using simple 4 S. L. MATRINS, P. M. PARDALOS, M. G. C. RESENDE, AND C. C. RIBERIO data structures and presenting an improved time complexity.
Reference: [37] <author> J.S. Provan. </author> <title> A polynomial algorithm for the Steiner tree problem on terminal-planar graphs. </title> <type> Technical Report UNC/ORSA/Tech. </type> <institution> Rep.-83/10, Dep. Operations Research, University of North Carolina, Chapel Hill, </institution> <year> 1983. </year>
Reference-contexts: Moreover, on directed graphs, Provan and Ball [38] showed that the variant of the rooted Steiner arborescence of a directed graph is NP-complete. NP-completeness still sticks to the problem with planar acyclic digraphs with indegree and outdegree at most two <ref> [37] </ref>. However, there are some classes of instances for which polynomial time algorithms exist. In what follows, we give a short survey of existing algorithms and heuristics for the Steiner problem in graphs. All known exact SPG algorithms for general graphs are in some way enumerative algorithms.
Reference: [38] <author> J.S. Provan and M.O. Ball. </author> <title> Computing network reliability. </title> <journal> Operations Res., </journal> <volume> 32 </volume> <pages> 516-526, </pages> <year> 1984. </year>
Reference-contexts: Karp [25] showed earlier that the SPG decision problem is NP-complete in general. Even for some restrictions like grid graphs [19], bipartite graphs [20], chordal and split graphs [46], the problem remains NP-complete. Moreover, on directed graphs, Provan and Ball <ref> [38] </ref> showed that the variant of the rooted Steiner arborescence of a directed graph is NP-complete. NP-completeness still sticks to the problem with planar acyclic digraphs with indegree and outdegree at most two [37]. However, there are some classes of instances for which polynomial time algorithms exist.
Reference: [39] <author> V.J. Rayward-Smith. </author> <title> The computation of nearly minimal Steiner trees in graphs. </title> <journal> Int. J. Math. Ed. Sci. Technol., </journal> <volume> 14 </volume> <pages> 15-23, </pages> <year> 1983. </year>
Reference-contexts: Another heuristic approach based on Prim's MST algorithm is given by Takahashi and Matsuyama [42]. While all of the above MTS-based approaches implicitly choose the Steiner nodes (optional nodes in the Steiner tree), an average distance heuristic that selects those nodes is given by Rayward-Smith <ref> [39] </ref>; refer also to Rayward-Smith and Clare [40], and Foulds and Rayward-Smith [18]. A different heuristic based on neighborhood contraction techniques is provided by Plesnk [36]. The reader is referred to Winter [47], Hwang and Richards [22], Hwang, Richards, and Winter [23], and Cieslik [9] for surveys. 2.
Reference: [40] <author> V.J. Rayward-Smith and A. Clare. </author> <title> On finding Steiner vertices. </title> <journal> Networks, </journal> <volume> 16 </volume> <pages> 283-294, </pages> <year> 1986. </year>
Reference-contexts: While all of the above MTS-based approaches implicitly choose the Steiner nodes (optional nodes in the Steiner tree), an average distance heuristic that selects those nodes is given by Rayward-Smith [39]; refer also to Rayward-Smith and Clare <ref> [40] </ref>, and Foulds and Rayward-Smith [18]. A different heuristic based on neighborhood contraction techniques is provided by Plesnk [36]. The reader is referred to Winter [47], Hwang and Richards [22], Hwang, Richards, and Winter [23], and Cieslik [9] for surveys. 2.
Reference: [41] <author> M.L. Shore, L.R. Foulds, and P.B. Gibbons. </author> <title> An algorithm for the Steiner problem in graphs. </title> <journal> Networks, </journal> <volume> 12 </volume> <pages> 323-333, </pages> <year> 1982. </year>
Reference-contexts: Another algorithm, which generates spanning trees for a derived problem in order of increasing total length until a solution to the original problem can be inferred, is proposed by Balakrishnan and Patel [2]. Also, implicit enumeration approaches are given by Shore, Foulds, and Gibbons <ref> [41] </ref>, and Yang Date: July 6, 1998. Key words and phrases. Combinatorial optimization, Steiner Problem in Graphs, local search, GRASP, network design. AT&T Labs Research Technical Report: TR 98.14.1. 1 2 S. L. MATRINS, P. M. PARDALOS, M. G. C. RESENDE, AND C. C. <p> A branch-and-bound approach that uses heuristics to provide good lower bounds and to choose the next edge for consideration in the backtracking process is proposed by Foulds and Gibbons [17], and Shore, Foulds, and Gibbons <ref> [41] </ref>. Other approaches, including branch-and-bound, are proposed by Beasley [3, 4], Aneja [1], Maculan [32], Lucena [31], Wong [48], and Chopra, Gorres, and Rao [7]. Exact algorithms for the SPG can benefit from preprocessing the graph so that the size of the problem to solve is reduced.
Reference: [42] <author> H. Takahashi and A. </author> <title> Matsuyama. An approximate solution for the Steiner problem in graphs. </title> <journal> Math. Jpn., </journal> <volume> 24 </volume> <pages> 573-577, </pages> <year> 1980. </year>
Reference-contexts: A heuristic based on Kruskal's MST algorithm is given by Wu, Widmayer, and Wong [49]. Another heuristic approach based on Prim's MST algorithm is given by Takahashi and Matsuyama <ref> [42] </ref>. While all of the above MTS-based approaches implicitly choose the Steiner nodes (optional nodes in the Steiner tree), an average distance heuristic that selects those nodes is given by Rayward-Smith [39]; refer also to Rayward-Smith and Clare [40], and Foulds and Rayward-Smith [18]. <p> Path-based construction phase. This construction procedure uses a randomized version of the algorithm described in the pseudo-code in Figure 2. This algorithm was proposed by Takahashi and Matsuyama <ref> [42] </ref>. The randomization is applied at line 5, where instead of selecting the closest terminal node, a restricted candidate list with close nodes is constructed and a node is selected at random from this list. 2.2.2. Path-based local search. We begin with some definitions.
Reference: [43] <author> M.G.A. Verhoeven, M.E.M. Severens, and E.H.L. Aarts. </author> <title> Local search for Steiner trees in graphs. In Modern Heuristics Search Methods, </title> <editor> V. J. Rayward-Smith et al. (Eds.), </editor> <publisher> John Wiley, </publisher> <pages> 117-129, </pages> <year> 1996. </year>
Reference-contexts: A Steiner tree has a most jSj 2 key-nodes and 2jSj 3 key-paths. A minimum Steiner tree consists of key-paths that are shortest paths between key-nodes or terminals. We use the key-path based local search, proposed by Verhoeven, Severens, and Aarts <ref> [43] </ref>. Let T = fl 1 ; l 2 ; : : : ; l K g be a Steiner tree, where each l i ; i = 1; : : : ; K, denotes a key-path. <p> In only three of those 37 instances did GRASP not find an optimal solution. * We compare the results obtained by GRASP in classes D and E with those found with the key-path based local search approach in Verhoeven, Severens, and Aarts <ref> [43] </ref>. In all cases, the GRASP solutions were as good or better than the key-path based local search solutions. In 26 out of the 40 instances, the GRASP solution is better than the key-path based solution. <p> Running times increase with the number of nodes, arcs, and terminals. We compare the results obtained by GRASP in classes D and E with those found with the key-path based local search approach in Verhoeven, Severens, and Aarts <ref> [43] </ref>. In all cases, the GRASP solutions were as good as or better than the key-path based local search solutions. We noted that the average running time per iteration of the key-path based local search approach is substantially smaller than that of the average GRASP iteration.
Reference: [44] <author> S. Voss. </author> <title> Steiner's problem in directed graphs: Logical tests in a branch and bound algorithm. </title> <booktitle> NATO Advanced Research Workshop on Topological Network Design, </booktitle> <address> Copenhagen, </address> <year> 1989. </year>
Reference-contexts: Exact algorithms for the SPG can benefit from preprocessing the graph so that the size of the problem to solve is reduced. Reduction techniques are discussed in Beasley [3], Balakrishnan and Patel [2], Duin and Volgenant [13, 14], Voss <ref> [44, 45] </ref>, Iwainsky et al. [24], Chopra, Gorres, and Rao [7], Khoury and Pardalos [27], and Duin [11, 12]. Many heuristics have been proposed to find approximate solutions for the SPG.
Reference: [45] <author> S. Voss. </author> <title> A reduction-based algorithm for the Steiner problem in graphs. </title> <journal> Methods of Operations Res. </journal> <volume> 58 </volume> <pages> 239-252, </pages> <year> 1989. </year> <title> GRASP FOR STEINER PROBLEM IN GRAPHS 13 </title>
Reference-contexts: Exact algorithms for the SPG can benefit from preprocessing the graph so that the size of the problem to solve is reduced. Reduction techniques are discussed in Beasley [3], Balakrishnan and Patel [2], Duin and Volgenant [13, 14], Voss <ref> [44, 45] </ref>, Iwainsky et al. [24], Chopra, Gorres, and Rao [7], Khoury and Pardalos [27], and Duin [11, 12]. Many heuristics have been proposed to find approximate solutions for the SPG.
Reference: [46] <author> K. White, M. Farber, and W. Pulleyblank. </author> <title> Steiner trees, connected domination and strongly chordal graphs. </title> <journal> Networks, </journal> <volume> 15 </volume> <pages> 109-124, </pages> <year> 1985. </year>
Reference-contexts: The SPG has also many equivalent formulations as an integer program [22] or as a continuous nonconvex global optimization problem [26]. Karp [25] showed earlier that the SPG decision problem is NP-complete in general. Even for some restrictions like grid graphs [19], bipartite graphs [20], chordal and split graphs <ref> [46] </ref>, the problem remains NP-complete. Moreover, on directed graphs, Provan and Ball [38] showed that the variant of the rooted Steiner arborescence of a directed graph is NP-complete. NP-completeness still sticks to the problem with planar acyclic digraphs with indegree and outdegree at most two [37].
Reference: [47] <author> P. Winter. </author> <title> Steiner problem in networks: A survey. </title> <journal> Networks, </journal> <volume> 17 </volume> <pages> 129-167, </pages> <year> 1987. </year>
Reference-contexts: A different heuristic based on neighborhood contraction techniques is provided by Plesnk [36]. The reader is referred to Winter <ref> [47] </ref>, Hwang and Richards [22], Hwang, Richards, and Winter [23], and Cieslik [9] for surveys. 2. GRASP for the Steiner problem in graphs Approximate solutions for the Steiner minimal tree problem can be obtained by many techniques, including node, spanning tree, and path-based approaches.
Reference: [48] <author> R.T. Wong. </author> <title> A dual ascent approach to Steiner tree problems on a directed graph. </title> <journal> Mathematical Programming, </journal> <volume> 28 </volume> <pages> 271-287, </pages> <year> 1984. </year>
Reference-contexts: Other approaches, including branch-and-bound, are proposed by Beasley [3, 4], Aneja [1], Maculan [32], Lucena [31], Wong <ref> [48] </ref>, and Chopra, Gorres, and Rao [7]. Exact algorithms for the SPG can benefit from preprocessing the graph so that the size of the problem to solve is reduced. <p> Many heuristics have been proposed to find approximate solutions for the SPG. For example, in Aneja [1], a greedy variation of a set covering algorithm is presented, and an MST-based procedure is used as a shortcut in the dual ascent algorithm given by Wong <ref> [48] </ref>. Another MST-based heuristic was proposed by Choukmane [8] and independently by Plesnk [36], Kou, Markowsky, and Berman [28], Bharath-Kumar and Jaffe [6], and Iwainsky et al. [24]. A heuristic based on Kruskal's MST algorithm is given by Wu, Widmayer, and Wong [49].
Reference: [49] <author> Y.F. Wu, P. Widmayer, and C. K. Wong. </author> <title> A faster approximation algorithm for the Steiner problem in graphs. </title> <journal> Acta Info., </journal> <volume> 23 </volume> <pages> 223-229, </pages> <year> 1986. </year>
Reference-contexts: Another MST-based heuristic was proposed by Choukmane [8] and independently by Plesnk [36], Kou, Markowsky, and Berman [28], Bharath-Kumar and Jaffe [6], and Iwainsky et al. [24]. A heuristic based on Kruskal's MST algorithm is given by Wu, Widmayer, and Wong <ref> [49] </ref>. Another heuristic approach based on Prim's MST algorithm is given by Takahashi and Matsuyama [42].
Reference: [50] <author> Y.Y. Yang and O. Wing. </author> <title> An algorithm for the wiring problem. </title> <booktitle> Digest IEEE Int. Symp. Electrical Networks, </booktitle> <pages> 14-15, </pages> <year> 1971. </year> <institution> Department of Computer Science, Catholic University of Rio de Janeiro, Rio de Janeiro, Brazil E-mail address: simone@inf.puc-rio.br Center for Applied Optimization, Department of Industrial and Systems Engineer ing, University of Florida, Gainesville, FL 32611 USA. E-mail address: pardalos@ufl.edu Information Sciences Research, AT&T Labs Research, Florham Park, NJ 07932 USA. E-mail address: mgcr@research.att.com Department of Computer Science, Catholic University of Rio de Janeiro, Rio de Janeiro, Brazil E-mail address: celso@inf.puc-rio.br </institution>
Reference-contexts: Key words and phrases. Combinatorial optimization, Steiner Problem in Graphs, local search, GRASP, network design. AT&T Labs Research Technical Report: TR 98.14.1. 1 2 S. L. MATRINS, P. M. PARDALOS, M. G. C. RESENDE, AND C. C. RIBERIO and Wing <ref> [50] </ref>, where the set of all trees spanning the set of given points is, in a systematic way, separated into smaller subsets to be analyzed, using upper and lower bounds, in order to determine whether or not they contain the optimal feasible solution.
References-found: 50

