URL: http://www.isi.edu/sims/minton/papers/monte-book.ps
Refering-URL: http://www.isi.edu/sims/minton/homepage.html
Root-URL: http://www.isi.edu
Title: Analyzing a Heuristic Strategy for Constraint-Satisfaction and Scheduling  
Author: Mark D. Johnston and Steven Minton 
Abstract: This paper describes a simple heuristic approach to solving large-scale constraint satisfaction and scheduling problems. In this approach one starts with an inconsistent assignment for a set of variables and searches through the space of possible repairs. The search can be guided by a value-ordering heuristic, the min-conflicts heuristic, that attempts to minimize the number of constraint violations after each step. The heuristic can be used with a variety of different search strategies. On the n-queens problem, a technique based on this approach performs orders of magnitude better than traditional backtracking techniques. The technique has also been used for scheduling the Hubble Space telescope. A theoretical analysis is presented both to explain why this method works well on certain types of problems and to predict when it is likely to be most effective. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Abramson and M. Yung. </author> <title> Divide and conquer under global constraints: A solution to the n-queens problem. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 61 </volume> <pages> 649-662, </pages> <year> 1989. </year>
Reference-contexts: In a sense, the problem of finding a single solution has been solved, since there are a number of analytic methods which yield a solution in linear time <ref> [1] </ref>. For example, there are certain well-known patterns that can be used to produce a solution to any instance of the n-queens problem. Nevertheless, the problem has been perceived as relatively "hard" for heuristic search methods.
Reference: [2] <author> H.M. Adorf and M.D. Johnston. </author> <title> A discrete stochastic neural network algorithm for constraint satisfaction problems. </title> <booktitle> In Proceedings of the International Joint Conference on Neural Networks, </booktitle> <address> San Diego, CA, </address> <year> 1990. </year>
Reference-contexts: This analysis shows, for example, how the "distance" between the current assignment and solution (in terms of the minimum number of repairs that are required) affects the expected utility of the heuristic. The work described in this paper was inspired by a neural network originally developed <ref> [20, 2, 19] </ref> for use in Spike [17], a system for scheduling astronomical observations on the Hubble Space Telescope. The min-conflicts heuristic was distilled from an analysis of the network, as described in [27, 28, 29].
Reference: [3] <author> E. Biefeld and L. Cooper. </author> <title> Bottleneck identification using process chronologies. </title> <booktitle> In Proceedings IJCAI-91, </booktitle> <address> Sydney, Australia, </address> <year> 1991. </year>
Reference-contexts: Repair-based methods and scheduling In general, scheduling appears to be an excellent application area for repair-based methods. Supporting evidence comes from previous work on other real-world scheduling applications by Zweben et al.[44], Biefeld and Cooper <ref> [3] </ref> and Kurtzmann [25]. Each of these projects use iterative improvement methods which can be characterized as repair-based. There are several reasons why repair-based methods are well-suited to scheduling applications. <p> The telescope is expected to remain highly over-subscribed, in that many more proposals will be submitted than can be accommodated by any schedule. On such problems, repair-based methods offer an alternative to traditional branch-and-bound techniques. Finally, as Biefeld and Cooper <ref> [3] </ref> have pointed out, there are real-world scheduling problems where humans find repair-based methods very natural. For example, human schedulers at JPL employ repair-based methods when constructing mission schedules for robotic spacecraft.
Reference: [4] <author> D. Brelaz. </author> <title> New methods to color the vertices of a graph. </title> <journal> Communications of the ACM, </journal> <volume> 22 </volume> <pages> 251-256, </pages> <year> 1979. </year>
Reference-contexts: Unfortunately, we found that the min-conflicts hill-climbing method performed relatively poorly when compared against a more traditional search algorithm. Specifically, we compared the min-conflicts method to a simple constructive backtracking algorithm that is known to perform well on graph-coloring problems. The algorithm, originally proposed by Brelaz <ref> [4, 42] </ref>, can be described as the repeated application of the following rule for choosing a node to color: Find the uncolored node that has the fewest consistent colorings with its neighbors. If there is more than one, then choose one that has the maximum degree in the uncolored subgraph.
Reference: [5] <author> P. Cheeseman, B. Kanefsky, and W.M. Taylor. </author> <title> Where the really hard problems are. </title> <booktitle> In Proceedings IJCAI-91, </booktitle> <address> Sydney, Australia, </address> <year> 1991. </year>
Reference-contexts: The sparsely colored graphs were significantly more difficult because there is less information conveyed by a node's neighbors regarding the correct choice of color. In related study, Cheeseman et al. <ref> [5] </ref> have shown that as the average connectivity of a (connected) graph increases, a "phase transition" occurs, and it is at this point that most of the hard graph colorability problems are found.
Reference: [6] <author> R. Dechter and J. Pearl. </author> <title> Network-based heuristics for constraint satisfaction problems. </title> <journal> Artificial Intelligence, </journal> <volume> 34 </volume> <pages> 1-38, </pages> <year> 1988. </year>
Reference-contexts: For comparison, the table also shows the corresponding values for the random problem described by Dechter and Pearl <ref> [6] </ref>. 3.2.2 Value Selection Heuristics The second step in realizing the model is to obtain expressions for the probability of choosing a correct value (P cjs and P cjs ) based on the conflict probability distributions defined in Section 3.2.1.
Reference: [7] <author> M.S. Fox. </author> <title> Constraint-Directed Search: A Case Study of Job-Shop Scheduling. </title> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <year> 1987. </year>
Reference-contexts: We have also applied the technique to a sample of job-shop scheduling problems in order to obtain some comparison with other approaches. Both of these areas are discussed in this section. Hubble Space Telescope The Hubble Space Telescope scheduling problem can be considered a constrained optimization problem <ref> [9, 7] </ref> where we must maximize both the number and the importance of the constraints that are satisfied. As noted in [27, 28], the initial scheduling system developed for this application had difficulty producing schedules efficiently.
Reference: [8] <author> M.S. Fox, N. Sadeh, and C. Baykan. </author> <title> Constrained heuristic search. </title> <booktitle> In Proceedings IJCAI-89, </booktitle> <address> Detroit, MI, </address> <year> 1989. </year>
Reference-contexts: There has also been related work in AI on sophisticated methods for measuring the contention between resources in scheduling problems. This information can then be used in heuristic search <ref> [8, 33, 36] </ref>. The use of "conflict counts" can be viewed as a simple measure of resource contention. The fact that the min-conflicts approach performs well on n-queens, a well-studied, "standard" constraint-satisfaction problem, suggests that AI repair-based approaches may be more generally useful than previously thought.
Reference: [9] <author> E.C. Freuder. </author> <title> Partial constraint satisfaction. </title> <booktitle> In Proceedings IJCAI-89, </booktitle> <address> Detroit, MI, </address> <year> 1989. </year>
Reference-contexts: We have also applied the technique to a sample of job-shop scheduling problems in order to obtain some comparison with other approaches. Both of these areas are discussed in this section. Hubble Space Telescope The Hubble Space Telescope scheduling problem can be considered a constrained optimization problem <ref> [9, 7] </ref> where we must maximize both the number and the importance of the constraints that are satisfied. As noted in [27, 28], the initial scheduling system developed for this application had difficulty producing schedules efficiently.
Reference: [10] <author> F. Glover and M. </author> <title> Laguna. Tabu search. </title> <editor> In Colin R. Reeves, editor, </editor> <title> Modern Heuristic Techniques for Combinatorial Problems. </title> <publisher> Blackwell Scientific Publishers, </publisher> <year> 1992. </year>
Reference-contexts: Other encouraging studies on repair-based algorithms include Sosic and Gu's work with N-queens [39], Morris's work on constraint-satisfaction problems [30, 31, 32] and a variety of studies on Tabu Search (e.g. <ref> [10, 13] </ref>), 33 a hill-climbing, local search technique that maintains a list of forbidden moves in order to avoid cycles. 5 Future Work The min-conflicts method outlined in this paper, and repair-based methods in general, appear to offer exciting new possibilities for scheduling.
Reference: [11] <author> K.J. Hammond. </author> <title> Case-based Planning: An Integrated Theory of Planning, Learning and Memory. </title> <type> PhD thesis, </type> <institution> Yale University, Department of Computer Science, </institution> <year> 1986. </year>
Reference-contexts: In particular, there is a long history of AI programs that use repair or debugging strategies to solve problems, primarily in the areas of planning and design [38, 41]. This approach has recently had a renaissance with the emergence of case-based <ref> [11, 24] </ref> and analogical [14, 22, 43] problem solving. To solve a problem, a case-based system will retreive the solution &gt;from a previous, similar problem and repair the old solution so that it solves the new problem.
Reference: [12] <author> R.M. Haralick and G.L. Elliot. </author> <title> Increasing tree search efficiency for constraint satisfaction problems. </title> <journal> Artificial Intelligence, </journal> <volume> 14 </volume> <pages> 263-313, </pages> <year> 1980. </year>
Reference-contexts: For example, there are certain well-known patterns that can be used to produce a solution to any instance of the n-queens problem. Nevertheless, the problem has been perceived as relatively "hard" for heuristic search methods. Several studies of the n-queens problem <ref> [40, 12, 23] </ref> have compared heuristic backtracking methods such as search rearrangement backtracking (e.g., most-constrained first), forward checking, dependency-directed backtracking, etc. To solve the n-queens problem, we constructed a hill-climbing program that operates as follows.
Reference: [13] <author> A. Hertz and D. de Werra. </author> <title> Using tabu search techniques for graph coloring. </title> <journal> Computing, </journal> <volume> 39 </volume> <pages> 345-351, </pages> <year> 1987. </year>
Reference-contexts: Other encouraging studies on repair-based algorithms include Sosic and Gu's work with N-queens [39], Morris's work on constraint-satisfaction problems [30, 31, 32] and a variety of studies on Tabu Search (e.g. <ref> [10, 13] </ref>), 33 a hill-climbing, local search technique that maintains a list of forbidden moves in order to avoid cycles. 5 Future Work The min-conflicts method outlined in this paper, and repair-based methods in general, appear to offer exciting new possibilities for scheduling.
Reference: [14] <author> A.K. Hickman and M.C. Lovett. </author> <title> Partial match and search control via internal analogy. </title> <booktitle> In Proceedings of the Thirteenth Annual Conference of the Cognitive Science Society, </booktitle> <address> Chicago, Ill., </address> <year> 1991. </year>
Reference-contexts: In particular, there is a long history of AI programs that use repair or debugging strategies to solve problems, primarily in the areas of planning and design [38, 41]. This approach has recently had a renaissance with the emergence of case-based [11, 24] and analogical <ref> [14, 22, 43] </ref> problem solving. To solve a problem, a case-based system will retreive the solution &gt;from a previous, similar problem and repair the old solution so that it solves the new problem.
Reference: [15] <author> D.S. Johnson, C.R. Aragon, L.A. McGeoch, and C. Schevon. </author> <title> Optimization by simulated annealing: An experimental evaluation, Part II. </title> <journal> Journal of Operations Research, </journal> <year> 1990. </year>
Reference-contexts: 1 Introduction One of the most promising general approaches for solving combinatorial search problems is to generate an initial, suboptimal solution and then to apply local repair heuristics <ref> [37, 26, 31, 27, 44, 39, 15] </ref>. Techniques based on this approach have met with empirical success on many combinatorial problems, including the traveling salesman and graph partitioning problems [16]. <p> For example, the Kernighan 32 Lin method, perhaps the most successful algorithm for solving graph-partitioning problems, repeatedly improves a partitioning by swapping the two vertices that yield the greatest cost differential. The much-publicized simulated annealing method can also be characterized as a form of local search <ref> [15] </ref>. The min-conflicts approach is also closely related to previous work in AI. In particular, there is a long history of AI programs that use repair or debugging strategies to solve problems, primarily in the areas of planning and design [38, 41].
Reference: [16] <author> D.S. Johnson, C.H. Papadimitrou, and M. Yannakakis. </author> <title> How easy is local search? Journal of Computer and System Sciences, </title> <booktitle> 37 </booktitle> <pages> 79-100, </pages> <year> 1988. </year>
Reference-contexts: Techniques based on this approach have met with empirical success on many combinatorial problems, including the traveling salesman and graph partitioning problems <ref> [16] </ref>. Such techniques also have a long tradition in AI, most notably in problem-solving systems that operate by debugging initial solutions [38, 41]. In this paper, we describe how this idea can be extended to constraint satisfaction problems (CSPs) in a natural manner. <p> Nevertheless, to the extent that the statistical properties of classes of problems can be established, it may still be possible to use the model to perform average-case analysis of heuristics. 4 Related Work The heuristic hill-climbing method described in this paper can be characterized as a local search method <ref> [16] </ref>, in that each repair minimizes the number of conflicts for an individual variable. Local search methods have been applied to a variety of important problems, often with impressive results.
Reference: [17] <author> M. Johnston and ? Miller. Spike: </author> <title> Intelligent scheduling of hubble space telescope observations. </title> <editor> In M. Zweben and M.? Fox, editors, </editor> <booktitle> This book??? ????, 1993? </booktitle>
Reference-contexts: The work described in this paper was inspired by a neural network originally developed [20, 2, 19] for use in Spike <ref> [17] </ref>, a system for scheduling astronomical observations on the Hubble Space Telescope. The min-conflicts heuristic was distilled from an analysis of the network, as described in [27, 28, 29].
Reference: [18] <author> M.D. Johnston. </author> <title> Automated telescope scheduling. </title> <booktitle> In Proceedings of the Symposium on Coordination of Observational Projects. </booktitle> <publisher> Cambridge University Press, </publisher> <year> 1987. </year>
Reference-contexts: The constraints relevant to the long term problem are primarily temporal constraints. As outlined in <ref> [18] </ref>, some exposures are designed as calibrations or target acquisitions for others, and so must proceed them. Some must be executed at specific times, or at specific phases in the case of periodic phenomena. Some observations must be made at regular intervals, or grouped within a specified time span.
Reference: [19] <author> M.D. Johnston and H.M. Adorf. </author> <title> Learning in stochastic neural networks for constraint satisfaction problems. </title> <booktitle> In Proceedings of NASA Conference on Space Telerobotics, </booktitle> <address> Pasadena, CA, </address> <month> January </month> <year> 1989. </year>
Reference-contexts: This analysis shows, for example, how the "distance" between the current assignment and solution (in terms of the minimum number of repairs that are required) affects the expected utility of the heuristic. The work described in this paper was inspired by a neural network originally developed <ref> [20, 2, 19] </ref> for use in Spike [17], a system for scheduling astronomical observations on the Hubble Space Telescope. The min-conflicts heuristic was distilled from an analysis of the network, as described in [27, 28, 29].
Reference: [20] <author> M.D. Johnston and H.M. Adorf. </author> <title> Scheduling with neural networks the case of the hubble space telescope. </title> <journal> Computers and Operations Research, </journal> <volume> 19 </volume> <pages> 209-240, </pages> <year> 1992. </year> <month> 36 </month>
Reference-contexts: This analysis shows, for example, how the "distance" between the current assignment and solution (in terms of the minimum number of repairs that are required) affects the expected utility of the heuristic. The work described in this paper was inspired by a neural network originally developed <ref> [20, 2, 19] </ref> for use in Spike [17], a system for scheduling astronomical observations on the Hubble Space Telescope. The min-conflicts heuristic was distilled from an analysis of the network, as described in [27, 28, 29]. <p> This explicit representation enables the scheduler to obtain a more accurate assessment of the number of conflicts in a given schedule. One of the original and most effective Spike search strategies was based on a neural network model designated "guarded discrete stochatic", or GDS <ref> [20] </ref>. In searching for a schedule, the GDS network effectively employed the same constraint satisfaction approach used by our min-conflicts method.
Reference: [21] <author> L.V. Kale. </author> <title> An almost perfect heuristic for the n nonattacking queens problem. </title> <journal> Information Processing Letters, </journal> <volume> 34 </volume> <pages> 173-178, </pages> <year> 1990. </year>
Reference-contexts: problems have also recently been invented. (By coincidence, these two other methods and our method were all developed and published independently.) While both methods are specific to n-queens, one method is a repair-based method that is similar to ours in spirit [39], whereas the other employs a constructive backtracking approach <ref> [21] </ref>. This latter method uses a combination of variable and value-ordering heuristics which take advantage of the particular structure inherent in n-queens. This shows that one can solve n-queens problems quickly with a traditional, constructive backtracking method.
Reference: [22] <author> S. Kambhampati. </author> <title> Supporting flexible plan reuse. </title> <editor> In Minton S., editor, </editor> <title> Machine Learning Methods for Planning and Scheduling. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year>
Reference-contexts: In particular, there is a long history of AI programs that use repair or debugging strategies to solve problems, primarily in the areas of planning and design [38, 41]. This approach has recently had a renaissance with the emergence of case-based [11, 24] and analogical <ref> [14, 22, 43] </ref> problem solving. To solve a problem, a case-based system will retreive the solution &gt;from a previous, similar problem and repair the old solution so that it solves the new problem.
Reference: [23] <author> N. Keng and D.Y.Y. Yun. </author> <title> A planning/scheduling methodology for the constrained resource problem. </title> <booktitle> In Proceedings IJCAI-89, </booktitle> <address> Detroit, MI, </address> <year> 1989. </year>
Reference-contexts: For example, there are certain well-known patterns that can be used to produce a solution to any instance of the n-queens problem. Nevertheless, the problem has been perceived as relatively "hard" for heuristic search methods. Several studies of the n-queens problem <ref> [40, 12, 23] </ref> have compared heuristic backtracking methods such as search rearrangement backtracking (e.g., most-constrained first), forward checking, dependency-directed backtracking, etc. To solve the n-queens problem, we constructed a hill-climbing program that operates as follows.
Reference: [24] <author> J.L. Kolodner, R.L.Jr. Simpson, and K. Sycara-Cyranski. </author> <title> A process model of case-based reasoning in problem solving. </title> <booktitle> In Proceedings IJCAI-85, </booktitle> <address> Los Angeles, CA, </address> <year> 1985. </year>
Reference-contexts: In particular, there is a long history of AI programs that use repair or debugging strategies to solve problems, primarily in the areas of planning and design [38, 41]. This approach has recently had a renaissance with the emergence of case-based <ref> [11, 24] </ref> and analogical [14, 22, 43] problem solving. To solve a problem, a case-based system will retreive the solution &gt;from a previous, similar problem and repair the old solution so that it solves the new problem.
Reference: [25] <author> C.R. Kurtzman. </author> <title> Time and Resource Constrained Scheduling, with Applications to Space Station Planning. </title> <type> PhD thesis, </type> <institution> Dept. of Aeronautics and Astronautics, MIT, </institution> <address> Cambridge, MA, </address> <year> 1988. </year>
Reference-contexts: Repair-based methods and scheduling In general, scheduling appears to be an excellent application area for repair-based methods. Supporting evidence comes from previous work on other real-world scheduling applications by Zweben et al.[44], Biefeld and Cooper [3] and Kurtzmann <ref> [25] </ref>. Each of these projects use iterative improvement methods which can be characterized as repair-based. There are several reasons why repair-based methods are well-suited to scheduling applications.
Reference: [26] <author> C.R. Kurtzman and D.L. Aiken. </author> <title> The Mfive space station crew activity scheduler and stowage logistics clerk. </title> <booktitle> In Proceedings the AIAA Computers in Aerospace VII Conference, </booktitle> <address> Monterey, CA, </address> <year> 1989. </year>
Reference-contexts: 1 Introduction One of the most promising general approaches for solving combinatorial search problems is to generate an initial, suboptimal solution and then to apply local repair heuristics <ref> [37, 26, 31, 27, 44, 39, 15] </ref>. Techniques based on this approach have met with empirical success on many combinatorial problems, including the traveling salesman and graph partitioning problems [16].
Reference: [27] <author> S. Minton, M. Johnston, A.B. Philips, and P. Laird. </author> <title> Solving large scale constraint satisfaction and scheduling problems using a heuristic repair method. </title> <booktitle> In Proceedings AAAI-90, </booktitle> <year> 1990. </year>
Reference-contexts: 1 Introduction One of the most promising general approaches for solving combinatorial search problems is to generate an initial, suboptimal solution and then to apply local repair heuristics <ref> [37, 26, 31, 27, 44, 39, 15] </ref>. Techniques based on this approach have met with empirical success on many combinatorial problems, including the traveling salesman and graph partitioning problems [16]. <p> The work described in this paper was inspired by a neural network originally developed [20, 2, 19] for use in Spike [17], a system for scheduling astronomical observations on the Hubble Space Telescope. The min-conflicts heuristic was distilled from an analysis of the network, as described in <ref> [27, 28, 29] </ref>. The heuristic has now replaced the neural network in the Spike system, since it can be implemented in a very simple and 1 efficient fashion. We begin the paper with a description of the min-conflicts approach. <p> The average runtime for the hill-climbing program is very close to linear. In terms of realtime performance, this program solves the million queens problem in less than four minutes on a SPARCstation1. As discussed in <ref> [27] </ref>, these results are substantially better than those of traditional AI search methods, which have trouble 5 solving even the thousand queens problem in a reasonable time. <p> Both of these areas are discussed in this section. Hubble Space Telescope The Hubble Space Telescope scheduling problem can be considered a constrained optimization problem [9, 7] where we must maximize both the number and the importance of the constraints that are satisfied. As noted in <ref> [27, 28] </ref>, the initial scheduling system developed for this application had difficulty producing schedules efficiently. The constraint-based system, Spike, that was developed to augment (and partially replace) the initial system has performed quite well using a relatively simple approach.
Reference: [28] <author> S. Minton, M. Johnston, A.B. Philips, and P. Laird. </author> <title> Minimizing conflicts: A heuristic repair method for constraint satisfaction and scheduling problems. </title> <journal> Artificial Intelligence, </journal> <volume> 58 </volume> <pages> 161-205, </pages> <year> 1992. </year>
Reference-contexts: The work described in this paper was inspired by a neural network originally developed [20, 2, 19] for use in Spike [17], a system for scheduling astronomical observations on the Hubble Space Telescope. The min-conflicts heuristic was distilled from an analysis of the network, as described in <ref> [27, 28, 29] </ref>. The heuristic has now replaced the neural network in the Spike system, since it can be implemented in a very simple and 1 efficient fashion. We begin the paper with a description of the min-conflicts approach. <p> Both of these areas are discussed in this section. Hubble Space Telescope The Hubble Space Telescope scheduling problem can be considered a constrained optimization problem [9, 7] where we must maximize both the number and the importance of the constraints that are satisfied. As noted in <ref> [27, 28] </ref>, the initial scheduling system developed for this application had difficulty producing schedules efficiently. The constraint-based system, Spike, that was developed to augment (and partially replace) the initial system has performed quite well using a relatively simple approach. <p> It is important to note that the derived probabilities depend only on the existence of the distributions, and not on their specific form. For brevity, derivations are omitted here: they follow the same lines as <ref> [28] </ref>. Here we simply state the expressions for P cjs and P cjs for three different value selection methods. Min-Conflicts Value Selection. The min-conflicts value selection heuristic can be stated as: Choose a value which has the minimum number of conflicts with the assigned values for the other variables.
Reference: [29] <author> S. Minton, A.B. Philips, M. Johnston, and P. Laird. </author> <title> The min-conflicts heuristic: Experimental and theoretical results. </title> <type> Technical Report FIA-91-25, </type> <institution> Artificial Intelligence Research Branch, NASA Ames, </institution> <year> 1991. </year>
Reference-contexts: The work described in this paper was inspired by a neural network originally developed [20, 2, 19] for use in Spike [17], a system for scheduling astronomical observations on the Hubble Space Telescope. The min-conflicts heuristic was distilled from an analysis of the network, as described in <ref> [27, 28, 29] </ref>. The heuristic has now replaced the neural network in the Spike system, since it can be implemented in a very simple and 1 efficient fashion. We begin the paper with a description of the min-conflicts approach.
Reference: [30] <author> P. Morris. </author> <title> Solutions without exhaustive search: An iterative descent method for binary constraint satisfaction problems. </title> <booktitle> In Proceedings the AAAI-90 Workshop on Constraint-Directed Reasoning, </booktitle> <address> Boston, MA, </address> <year> 1990. </year>
Reference-contexts: Other encouraging studies on repair-based algorithms include Sosic and Gu's work with N-queens [39], Morris's work on constraint-satisfaction problems <ref> [30, 31, 32] </ref> and a variety of studies on Tabu Search (e.g. [10, 13]), 33 a hill-climbing, local search technique that maintains a list of forbidden moves in order to avoid cycles. 5 Future Work The min-conflicts method outlined in this paper, and repair-based methods in general, appear to offer exciting
Reference: [31] <author> P. Morris. </author> <title> An iterative improvement algorithm with guaranteed convergence. </title> <type> Technical Report TR-M--91-1, </type> <note> Intellicorp Technical Note, </note> <year> 1991. </year>
Reference-contexts: 1 Introduction One of the most promising general approaches for solving combinatorial search problems is to generate an initial, suboptimal solution and then to apply local repair heuristics <ref> [37, 26, 31, 27, 44, 39, 15] </ref>. Techniques based on this approach have met with empirical success on many combinatorial problems, including the traveling salesman and graph partitioning problems [16]. <p> Other encouraging studies on repair-based algorithms include Sosic and Gu's work with N-queens [39], Morris's work on constraint-satisfaction problems <ref> [30, 31, 32] </ref> and a variety of studies on Tabu Search (e.g. [10, 13]), 33 a hill-climbing, local search technique that maintains a list of forbidden moves in order to avoid cycles. 5 Future Work The min-conflicts method outlined in this paper, and repair-based methods in general, appear to offer exciting
Reference: [32] <author> P. Morris. </author> <title> On the density of solutions in equilibrium points for the queens problem. </title> <booktitle> In Proceedings AAAI-92, </booktitle> <address> San Jose, CA, </address> <year> 1992. </year>
Reference-contexts: Other encouraging studies on repair-based algorithms include Sosic and Gu's work with N-queens [39], Morris's work on constraint-satisfaction problems <ref> [30, 31, 32] </ref> and a variety of studies on Tabu Search (e.g. [10, 13]), 33 a hill-climbing, local search technique that maintains a list of forbidden moves in order to avoid cycles. 5 Future Work The min-conflicts method outlined in this paper, and repair-based methods in general, appear to offer exciting
Reference: [33] <author> N. Muscettola. </author> <title> Scheduling by iterative partition of bottleneck conflicts. </title> <type> Technical Report CMU-RI-TR-92-05, </type> <institution> Robotics Inst, Carnegie-Mellon Univ., </institution> <year> 1992. </year>
Reference-contexts: A set of 60 such problems was defined by Sadeh [36] and used in a comparison of his "micro-opportunistic" scheduler with other techniques, including some of the major current approaches from the operations research community. These same problems were also used by Muscettola <ref> [33] </ref> to evaluate his "conflict partition scheduling" approach. We have applied Spike to these problems, using the current Spike version of the min-conflicts algorithm that has superseded the GDS network. <p> The Spike results are in column (1): Spike was the only method to solve all 60 problems. In columns (2) and (3) are the results for CPS = Conflict Partition Scheduling and "MIN-CONF", a variant of min-conflicts reported by Muscettola <ref> [33] </ref>. <p> There has also been related work in AI on sophisticated methods for measuring the contention between resources in scheduling problems. This information can then be used in heuristic search <ref> [8, 33, 36] </ref>. The use of "conflict counts" can be viewed as a simple measure of resource contention. The fact that the min-conflicts approach performs well on n-queens, a well-studied, "standard" constraint-satisfaction problem, suggests that AI repair-based approaches may be more generally useful than previously thought.
Reference: [34] <author> N. Muscettola, S.F. Smith, G. Amiri, and D. Pathak. </author> <title> Generating space telescope observation schedules. </title> <type> Technical Report CMU-RI-TR-89-28, </type> <institution> Carnegie Mellon University, Robotics Institute, </institution> <year> 1989. </year>
Reference-contexts: The long-term problem involves assigning approximately one year's worth of exposures to a set of "bins" or time segments of several days length. (The short-term problem involves deriving a detailed series of commands for the telescope and is addressed using different techniques <ref> [34] </ref>.) The input to Spike is a set of detailed specifications for exposures that are to be scheduled on the telescope. The constraints relevant to the long term problem are primarily temporal constraints.
Reference: [35] <author> R. Musick and S. Russell. </author> <title> How long will it take? In Proceedings AAAI-92, </title> <address> San Jose, CA, </address> <year> 1992. </year>
Reference-contexts: Finally, we close by noting that the theoretical analysis we presented can be extended. Our work, and other recent work on analyzing repair-based search methods <ref> [35] </ref>, identifies some of the important factors which determine the relative performance of the method. In the future, we would like to extend our analysis to repair methods for other tasks, such as case-based planning methods.
Reference: [36] <author> N. Sadeh. </author> <title> Look-ahead Techniques for Micro-Opportunistic Job Shop Scheduling. </title> <type> PhD thesis, </type> <institution> School of Computer Science, Carnegie-Mellon Univ., </institution> <address> Pittsburgh, PA., </address> <year> 1991. </year>
Reference-contexts: This can easily be cast as a constraint satisfaction problem with binary temporal constraints among nm tasks. A set of 60 such problems was defined by Sadeh <ref> [36] </ref> and used in a comparison of his "micro-opportunistic" scheduler with other techniques, including some of the major current approaches from the operations research community. These same problems were also used by Muscettola [33] to evaluate his "conflict partition scheduling" approach. <p> There are 10 problem instances for each of six different sets of parameters, covering a range of release and due dates and number of bottleneck resources. In the results reported by Sadeh <ref> [36] </ref>, runs were constrained to expand no more than 1000 search states in order to provide a reasonable basis for comparing different methods. <p> Only Spike (column 1) found solutions to all 60 problem instances. conflicts are counted (Spike uses an arc- and path-consistent form of the temporal constraints, and counts conflicts for inferred as well as explicit constraints). Columns (5) through (8) are the results from <ref> [36] </ref> which includes detailed references to the various algorithms, where: DSR = dynamic search rearrangement, ABT = advised backtracking, ORR = operations resource reliance, FSS = filtered survivable schedules, and SMU = Southern Methodist University heuristics. <p> run-time performance in any detailed way, it is interesting to note that the median times required for Spike to find solutions to these problems was only a few seconds each (on a Sparcstation 2, running Allegro Common Lisp) | much faster than the characteristic times of minutes 10 reported in <ref> [36] </ref>. <p> There has also been related work in AI on sophisticated methods for measuring the contention between resources in scheduling problems. This information can then be used in heuristic search <ref> [8, 33, 36] </ref>. The use of "conflict counts" can be viewed as a simple measure of resource contention. The fact that the min-conflicts approach performs well on n-queens, a well-studied, "standard" constraint-satisfaction problem, suggests that AI repair-based approaches may be more generally useful than previously thought.
Reference: [37] <author> B. Selman, H. Levesque, and D. Mitchell. </author> <title> A new method for solving hard satisfiability problems. </title> <booktitle> In Proceedings AAAI-92, </booktitle> <address> San Jose, CA, </address> <year> 1992. </year>
Reference-contexts: 1 Introduction One of the most promising general approaches for solving combinatorial search problems is to generate an initial, suboptimal solution and then to apply local repair heuristics <ref> [37, 26, 31, 27, 44, 39, 15] </ref>. Techniques based on this approach have met with empirical success on many combinatorial problems, including the traveling salesman and graph partitioning problems [16]. <p> The fact that the min-conflicts approach performs well on n-queens, a well-studied, "standard" constraint-satisfaction problem, suggests that AI repair-based approaches may be more generally useful than previously thought. Additional evidence also comes from some recent flurry of related studies. For instance, Selman, Levesque and Mitchell <ref> [37] </ref>, showed that GSAT, a repair-based algorithm that uses a form of min-conflicts for satisfiability problems, outperforms traditional satisfiability algorithms. Specifically, they demonstrated that GSAT is superior to the well-known Davis-Putnam satisfiability algorithm on "hard" satisifiability problems. Selman, Levesque and Mitchell [37] also claim that GSAT performs relatively well on graph-coloring <p> For instance, Selman, Levesque and Mitchell <ref> [37] </ref>, showed that GSAT, a repair-based algorithm that uses a form of min-conflicts for satisfiability problems, outperforms traditional satisfiability algorithms. Specifically, they demonstrated that GSAT is superior to the well-known Davis-Putnam satisfiability algorithm on "hard" satisifiability problems. Selman, Levesque and Mitchell [37] also claim that GSAT performs relatively well on graph-coloring problems; since GSAT is essentially the same as our min-conflicts hill-climbing method, this implies that min-conflicts should perform well on graph-colorability problems if a similar problem encoding is used (i.e., repreenting coloring problems as satisfiability problems).
Reference: [38] <author> R.G. Simmons. </author> <title> A theory of debugging plans and interpretations. </title> <booktitle> In Proceedings AAAI-88, </booktitle> <address> Minneapolis, MN, </address> <year> 1988. </year>
Reference-contexts: Techniques based on this approach have met with empirical success on many combinatorial problems, including the traveling salesman and graph partitioning problems [16]. Such techniques also have a long tradition in AI, most notably in problem-solving systems that operate by debugging initial solutions <ref> [38, 41] </ref>. In this paper, we describe how this idea can be extended to constraint satisfaction problems (CSPs) in a natural manner. Most of the previous work on CSP algorithms has assumed a "constructive" backtracking approach in which a partial assignment to the variables is incrementally extended. <p> The min-conflicts approach is also closely related to previous work in AI. In particular, there is a long history of AI programs that use repair or debugging strategies to solve problems, primarily in the areas of planning and design <ref> [38, 41] </ref>. This approach has recently had a renaissance with the emergence of case-based [11, 24] and analogical [14, 22, 43] problem solving.
Reference: [39] <author> R. Sosic and J. Gu. </author> <title> A polynomial time algorithm for the n-queens problem. </title> <journal> SIGART, </journal> <volume> 1(3), </volume> <year> 1990. </year>
Reference-contexts: 1 Introduction One of the most promising general approaches for solving combinatorial search problems is to generate an initial, suboptimal solution and then to apply local repair heuristics <ref> [37, 26, 31, 27, 44, 39, 15] </ref>. Techniques based on this approach have met with empirical success on many combinatorial problems, including the traveling salesman and graph partitioning problems [16]. <p> two other heuristic methods that can quickly solve n-queens problems have also recently been invented. (By coincidence, these two other methods and our method were all developed and published independently.) While both methods are specific to n-queens, one method is a repair-based method that is similar to ours in spirit <ref> [39] </ref>, whereas the other employs a constructive backtracking approach [21]. This latter method uses a combination of variable and value-ordering heuristics which take advantage of the particular structure inherent in n-queens. This shows that one can solve n-queens problems quickly with a traditional, constructive backtracking method. <p> Other encouraging studies on repair-based algorithms include Sosic and Gu's work with N-queens <ref> [39] </ref>, Morris's work on constraint-satisfaction problems [30, 31, 32] and a variety of studies on Tabu Search (e.g. [10, 13]), 33 a hill-climbing, local search technique that maintains a list of forbidden moves in order to avoid cycles. 5 Future Work The min-conflicts method outlined in this paper, and repair-based methods
Reference: [40] <author> H.S. Stone and J.M. Stone. </author> <title> Efficient search techniques an empirical study of the n-queens problem. </title> <journal> IBM Journal of Research and Development, </journal> <volume> 31 </volume> <pages> 464-474, </pages> <year> 1987. </year>
Reference-contexts: For example, there are certain well-known patterns that can be used to produce a solution to any instance of the n-queens problem. Nevertheless, the problem has been perceived as relatively "hard" for heuristic search methods. Several studies of the n-queens problem <ref> [40, 12, 23] </ref> have compared heuristic backtracking methods such as search rearrangement backtracking (e.g., most-constrained first), forward checking, dependency-directed backtracking, etc. To solve the n-queens problem, we constructed a hill-climbing program that operates as follows.
Reference: [41] <author> G. J. Sussman. </author> <title> A Computer Model of Skill Acquisition. </title> <publisher> American Elsevier, </publisher> <address> New York, </address> <year> 1975. </year>
Reference-contexts: Techniques based on this approach have met with empirical success on many combinatorial problems, including the traveling salesman and graph partitioning problems [16]. Such techniques also have a long tradition in AI, most notably in problem-solving systems that operate by debugging initial solutions <ref> [38, 41] </ref>. In this paper, we describe how this idea can be extended to constraint satisfaction problems (CSPs) in a natural manner. Most of the previous work on CSP algorithms has assumed a "constructive" backtracking approach in which a partial assignment to the variables is incrementally extended. <p> The min-conflicts approach is also closely related to previous work in AI. In particular, there is a long history of AI programs that use repair or debugging strategies to solve problems, primarily in the areas of planning and design <ref> [38, 41] </ref>. This approach has recently had a renaissance with the emergence of case-based [11, 24] and analogical [14, 22, 43] problem solving.
Reference: [42] <author> J.S. Turner. </author> <title> Almost all k-colorable graphs are easy to color. </title> <journal> Journal of Algorithms, </journal> <volume> 9 </volume> <pages> 63-82, </pages> <year> 1988. </year>
Reference-contexts: Unfortunately, we found that the min-conflicts hill-climbing method performed relatively poorly when compared against a more traditional search algorithm. Specifically, we compared the min-conflicts method to a simple constructive backtracking algorithm that is known to perform well on graph-coloring problems. The algorithm, originally proposed by Brelaz <ref> [4, 42] </ref>, can be described as the repeated application of the following rule for choosing a node to color: Find the uncolored node that has the fewest consistent colorings with its neighbors. If there is more than one, then choose one that has the maximum degree in the uncolored subgraph.
Reference: [43] <editor> M.M. Veloso and J.G. Carbonell. </editor> <title> Towards scaling up machine learning: A case study with derivation analogy in prodigy. </title> <editor> In Minton S., editor, </editor> <title> Machine Learning Methods for Planning and Scheduling. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year> <month> 38 </month>
Reference-contexts: In particular, there is a long history of AI programs that use repair or debugging strategies to solve problems, primarily in the areas of planning and design [38, 41]. This approach has recently had a renaissance with the emergence of case-based [11, 24] and analogical <ref> [14, 22, 43] </ref> problem solving. To solve a problem, a case-based system will retreive the solution &gt;from a previous, similar problem and repair the old solution so that it solves the new problem.
Reference: [44] <author> M. </author> <title> Zweben. A framework for iterative improvement search algorithms suited for constraint satisfaction problems. </title> <type> Technical Report RIA-90-05-03-1, </type> <institution> NASA Ames Research Center, AI Research Branch, </institution> <year> 1990. </year>
Reference-contexts: 1 Introduction One of the most promising general approaches for solving combinatorial search problems is to generate an initial, suboptimal solution and then to apply local repair heuristics <ref> [37, 26, 31, 27, 44, 39, 15] </ref>. Techniques based on this approach have met with empirical success on many combinatorial problems, including the traveling salesman and graph partitioning problems [16]. <p> Another notable, recent study with repair-based algorithms was conducted by Zweben and his collegues on scheduling problems <ref> [44, 45] </ref>, where a system that employs a similar heuristic approach is being used to schedule ground maintenance for the space shuttle.
Reference: [45] <author> M. Zweben, E. Davis, B. Daun, E. Drascher, M. Deale, and M. Eskey. </author> <title> Learning to improve constraint-based scheduling. </title> <journal> Artificial Intelligence, </journal> <volume> 58 </volume> <pages> 271-296, </pages> <year> 1992. </year>
Reference-contexts: Another notable, recent study with repair-based algorithms was conducted by Zweben and his collegues on scheduling problems <ref> [44, 45] </ref>, where a system that employs a similar heuristic approach is being used to schedule ground maintenance for the space shuttle.
Reference: [46] <author> M. Zweben, M. Deale, and R. Gargan. Anytime rescheduling. </author> <title> In Proceeedings of the Workshop on Innovative Approaches to Planning, Scheduling and Control. </title> <publisher> Morgan Kaufmann Publishers, </publisher> <year> 1990. </year> <month> 39 </month>
Reference-contexts: Each of these projects use iterative improvement methods which can be characterized as repair-based. There are several reasons why repair-based methods are well-suited to scheduling applications. First, as Zweben and Gargan <ref> [46] </ref> have pointed out, unexpected events may require schedule revision, in which case dynamic rescheduling is an important issue. Repair-based methods can be used for rescheduling in a natural manner.
References-found: 46

