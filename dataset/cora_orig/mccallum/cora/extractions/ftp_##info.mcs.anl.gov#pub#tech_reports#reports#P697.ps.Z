URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/P697.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/abstracts/abstracts97.htm
Root-URL: http://www.mcs.anl.gov
Title: Automatic Proofs and Counterexamples for Some Ortholattice Identities  
Author: William McCune 
Keyword: Automatic theorem proving, ortholattice, quantum logic, theory of computation.  
Date: October 9, 1997  
Address: Argonne, Illinois, 60439, U.S.A.  
Affiliation: Mathematics and Computer Science Division Argonne National Laboratory  
Abstract: This note answers questions on whether three identities known to hold for orthomodular lattices are true also for ortholattices. One identity is shown to fail by MACE, a program that searches for counterexamples, an the other two are proved to hold by EQP, an equational theorem prover. The problems, from work in quantum logic, were given to us by Norman Megill. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> W. McCune. </author> <title> A Davis-Putnam program and its application to finite first-order model search: Quasigroup existence problems. </title> <type> Tech. Report ANL/MCS-TM-194, </type> <institution> Argonne National Laboratory, Argonne, IL, </institution> <note> May 1994 (also see http://www.mcs.anl.gov/home/mccune/ar/mace/). </note>
Reference-contexts: It has several strategies for applying equational reasoning and searching for proofs. One of its strengths is that associativity and commutativity of binary operations are built into the inference rules. This feature makes EQP perform well on many problems involving lattice-like structures. MACE <ref> [1] </ref> is a program that searches for finite models of first-order statements. In practice, it is limited to fairly simple statements without many variables, and 2 it usually cannot find large models.
Reference: [2] <author> W. McCune. </author> <title> Otter 3.0 Reference Manual and Guide. </title> <type> Tech. Report ANL-94/6, </type> <institution> Argonne National Laboratory, Argonne, IL, </institution> <note> 1994 (also see http://www.mcs.anl.gov/home/mccune/ar/otter/). </note>
Reference-contexts: In practice, it is limited to fairly simple statements without many variables, and 2 it usually cannot find large models. Even with these limitations, it is a valuable complement to our theorem provers. (Our more well-known theorem prover Otter <ref> [2, 5] </ref> does not seem as effective as EQP for lattice-like problems because Otter lacks associative-commutative unification and several valuable paramodulation strategies. See [4] for several examples of using Otter for this type of problem.) 2 Equation E1 I had no intuition about whether E1 could be proved for ortholattices.
Reference: [3] <author> W. McCune. </author> <title> 33 basic test problems: A practical evaluation of some paramodu-lation strategies. </title> <editor> In Robert Veroff, editor, </editor> <booktitle> Automated Reasoning and its Applications: Essays in Honor of Larry Wos, chapter 5, </booktitle> <pages> pages 71-114. </pages> <note> MIT Press, 1997 (also see http://www.mcs.anl.gov/home/mccune/ar/33-basic-test-problems/). </note>
Reference-contexts: According to Megill, E1 is the most important to the quantum logic work. Equation E3 was proved for ortholattices by Megill (by hand), independently and in parallel to our work, shortly after he asked if our programs could prove it. 1.1 The Programs EQP and MACE EQP <ref> [3] </ref> is an automated theorem-proving program for statements in first-order equational logic. It has several strategies for applying equational reasoning and searching for proofs. One of its strengths is that associativity and commutativity of binary operations are built into the inference rules. <p> See <ref> [3] </ref> further for details on these EQP features. * The pair algorithm. At each iteration of the search loop, a pair of equations was selected for application of the inference rule. * A selection ratio of four.
Reference: [4] <author> W. McCune and R. Padmanabhan. </author> <title> Automated Deduction in Equational Logic and Cubic Curves, </title> <booktitle> volume 1095 of Lecture Notes in Computer Science (AI subseries). </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <note> 1996 (also see http://www.mcs.anl.gov/home/mccune/ar/monograph/). </note>
Reference-contexts: Even with these limitations, it is a valuable complement to our theorem provers. (Our more well-known theorem prover Otter [2, 5] does not seem as effective as EQP for lattice-like problems because Otter lacks associative-commutative unification and several valuable paramodulation strategies. See <ref> [4] </ref> for several examples of using Otter for this type of problem.) 2 Equation E1 I had no intuition about whether E1 could be proved for ortholattices. Hence, I put the programs to work in parallel, with EQP searching for a proof and MACE searching for a counterexample.
Reference: [5] <author> W. McCune and L. Wos. </author> <title> Otter: The CADE-13 Competition incarnations. </title> <journal> J. Automated Reasoning, </journal> <volume> 18(2) </volume> <pages> 211-220, </pages> <year> 1997. </year>
Reference-contexts: In practice, it is limited to fairly simple statements without many variables, and 2 it usually cannot find large models. Even with these limitations, it is a valuable complement to our theorem provers. (Our more well-known theorem prover Otter <ref> [2, 5] </ref> does not seem as effective as EQP for lattice-like problems because Otter lacks associative-commutative unification and several valuable paramodulation strategies. See [4] for several examples of using Otter for this type of problem.) 2 Equation E1 I had no intuition about whether E1 could be proved for ortholattices.
Reference: [6] <author> N. Megill, </author> <month> Sept. </month> <year> 1997. </year> <title> Correspondence by electronic mail. Fortunately, two of the larger equations (associativity of meet and x _ (y _ y 0 ) = y _ y 0 ) could be omitted, because they depend on the other axioms and lemmas; this allowed the search to run in less than 70 megabytes. </title> <type> 8 </type>
Reference-contexts: _ b))) _ (a _ ((a 0 ^ ((a _ b 0 ) ^ (a _ b))) _ (a 0 ^ ((a 0 ^ b) _ (a 0 ^ b 0 ))))) = 1 (E2) These three equations arose in work on quantum logic by Norman Megill and Mladen Pavacic <ref> [6] </ref>. Each equation was known to hold for orthomodular lattices, but it was unknown whether any of them holds for ortholattices. Megill asked whether any of Argonne's automated deduction programs could be used to solve the problems.
References-found: 6

