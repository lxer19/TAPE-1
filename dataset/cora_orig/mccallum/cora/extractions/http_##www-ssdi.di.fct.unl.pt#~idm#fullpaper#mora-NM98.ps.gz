URL: http://www-ssdi.di.fct.unl.pt/~idm/fullpaper/mora-NM98.ps.gz
Refering-URL: http://www.uni-koblenz.de/~dix/NMR7/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: idm@di.fct.unl.pt  jja@dmat.uevora.pt  schroede@kbs.uni-hannover.de  
Title: Argumentation and Cooperation for Distributed Extended Logic Programs  
Author: Iara de Almeida Mora CENTRIA Jose Julio Alferes CENTRIA and Dept.Mathem. Michael Schroeder 
Keyword: Argumentation, Extended Logic Programming, Multi-agent systems  
Address: Lisbon 2825 Monte de Caparica, Portugal  Rua Rom~ao Ramalho, 59 7000 Evora, Portugal  Lange Laude 3 30159 Hannover, Germany  
Affiliation: New University of  University of Evora  Inst. for Knowledge-based Systems University of Hannover  
Abstract: Argumentation semantics in extended logic programming has been defined in (Dung 1993; Prakken & Sar-tor 1997) for a single agent, determining the agents' beliefs by an internal argumentation process. In this paper we extend the argumentation framework to a multi-agent setting including cooperation among agents. We present an inference algorithm for the framework and an example showing the process of argumentation and cooperation. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Alferes, J. J., and Pereira, L. M. </author> <year> 1996. </year> <title> Reasoning with Logic Programming. </title> <publisher> (LNAI 1111), Springer-Verlag. </publisher>
Reference-contexts: Extended Logic Programming Due to its declarative nature, as well as its procedural implementations, logic programming can be seen as a good language for knowledge representation. In fact, much work have been done concerning the use of logic programs for knowledge representation (see, e.g., <ref> (Alferes & Pereira 1996) </ref> and references therein), and concerning its relation to other well-known non-monotonic formalism for knowledge representation and reasoning, such as default logics, auto-epistemic logics, etc. In the sequel we will use a logic programming language to represent the agents' knowledge. <p> However, the former, unlike the latter, considers the so-called coherence requirement relating the two form of negation: "if L is explicitly false then L must be assumed false by default". For further details on the subject of extended logic programs, their semantics, applications, and implementation see <ref> (Alferes & Pereira 1996) </ref>. Argumentation The following definitions for argumentation are based on (Prakken & Sartor 1997). They propose an argument as a sequence of ground rules 3 : Definition 2 (Argument) Let P be an extended logic program.
Reference: <author> Alferes, J. J.; Damasio, C. V.; and Pereira, L. M. </author> <year> 1995. </year> <title> A logic programming system for non-monotonic reasoning. </title> <journal> Journal of Automated Reasoning 14(1) </journal> <pages> 93-147. </pages>
Reference: <author> Dung, P. M. </author> <year> 1993. </year> <title> An argumentation semantics for logic programming with explicit negation. </title> <booktitle> In Proc. of the 10th International Conference on Logic Programming, </booktitle> <pages> 616-630. </pages> <publisher> MIT Press. </publisher>
Reference-contexts: Intuitively, argumentation semantics treats the evaluation of a logic program as an argumentation process, where a goal G holds if all arguments supporting G can no longer be attacked. Thus, logic programming is seen as a discourse involving attacking and counter-attacking arguments. While Dung <ref> (Dung 1993) </ref> uses argumentation to define a declarative semantics for extended logic programs, Prakken and Sartor's work (Prakken & Sartor 1997) is driven by their applications in legal reasoning. Logic programming can be described in terms of two figures: Reductio ad Absurdum- and ground-attack (Dung 1993) or, equivalently, rebut and undercut <p> While Dung <ref> (Dung 1993) </ref> uses argumentation to define a declarative semantics for extended logic programs, Prakken and Sartor's work (Prakken & Sartor 1997) is driven by their applications in legal reasoning. Logic programming can be described in terms of two figures: Reductio ad Absurdum- and ground-attack (Dung 1993) or, equivalently, rebut and undercut (Prakken & Sartor 1997). The former classifies an argument that leads to a contradiction under the current believes and arguments, and the latter an argument that falsifies the premise of one of the current arguments. Next we introduce extended logic programming.
Reference: <author> Dung, P. M. </author> <year> 1995. </year> <title> On the acceptability of arguments and its fundamental role in nonmonotonic reasoning, </title> <booktitle> logic programming and n-person games. Artificial Intelligence 77(2) </booktitle> <pages> 321-357. </pages>
Reference-contexts: We extend the definition of partial argument for also incomplete sequence of rules. We improve the previous algorithm to have cooperation and simulate it for a multi-agent inference. We show the connection between WFSX semantics and argumentation. Finally, Prakken and Sartor (Prakken & Sartor 1997) and Dung <ref> (Dung 1995) </ref> propose different methods to get sceptical or credulous argumentation. As further work, we intend to define just one (flexible) argumentation framework to obtain conclusions in more credulous or sceptical way 5 , depending on the applica tion's goal.
Reference: <author> Finin, T.; Weber, J.; Wiederhold, G.; Genesereth, M.; Fritzson, R.; McKay, D.; McGuire, J.; Pelavin, R.; Shapiro, S.; and Beck, C. </author> <year> 1993. </year> <title> Specification of the KQML agent communication language. Technical report, The DARPA Knowledge Sharing Initiative, External Interfaces Working Group, </title> <address> Baltimore, USA. </address>
Reference-contexts: So, for sim plicity, we refer to them simply as dialogue tree (resp. dialogue). Argumentation Protocol To implement the MAS's inference operation, the agents evolve an argumentation process. In the light of speech act theory and subsequent agent communication languages such as ACL, KIF, or KQML <ref> (Finin et al. 1993) </ref> we can identify five relevant speech acts of the dialogues. By assuming that L (resp. L 0 ) is an objective literal and A (resp. A 0 ) is an argument that supports L (resp. L 0 ) then 1.
Reference: <author> Gelder, A. V.; Ross, K.; and Schlipf, J. S. </author> <year> 1988. </year> <title> Unfounded sets and well-founded semantics for general logic programs. </title> <booktitle> In Proceeding of the 7th ACM Symposium on Principles of Databse Systems. </booktitle> <address> Austin, Texas. </address> <pages> 221-230. </pages>
Reference: <author> Gelfond, M., and Lifschitz, V. </author> <year> 1990. </year> <title> Logic programs with classical negation. </title> <editor> In Warren, and Szeredi., eds., </editor> <booktitle> 7th Int. Conf. on LP, </booktitle> <pages> 579-597. </pages> <publisher> MIT Press. </publisher>
Reference-contexts: In fact, in various situations one may want to explicitly declare that something is false. These were the main motivations for the generalization of the language of logic programs to include an explicit form of negation <ref> (Gelfond & Lifschitz 1990) </ref>. The so generalized language was called Extended Logic Programming. <p> Literals of the form not L are called default literals. As usual L 0 is called the head, and L 1 ; : : : ; not L n the body of the rule. For this language, various declarative semantics have been defined, e.g. the answer-sets semantics <ref> (Gelfond & Lifschitz 1990) </ref> (which is a generalization of the stable models semantics of normal logic programs), the well-founded semantics with explicit negation (WFSX) (Pereira & Alferes 1992), and the well-founded semantics with "classical" negation (Przymusinski 1990).
Reference: <author> Mora, I. A., and Alferes, J. J. </author> <year> 1998a. </year> <title> Argumentative and cooperative multi-agent system for extended logic programs. </title> <booktitle> In XIVth Brazilian Symposium on Artificial Intelligence. </booktitle> <publisher> Springer-Verlag. Submitted. </publisher>
Reference: <author> Mora, I. A., and Alferes, J. J. </author> <year> 1998b. </year> <title> Credulus and sceptical argumentation for extended logic programs. In Internal Report. </title>
Reference: <author> Pereira, L. M., and Alferes, J. J. </author> <year> 1992. </year> <title> Well founded semantics for logic programs with explicit negation. </title>
Reference-contexts: Next we introduce extended logic programming. After that, we present basic argumentation definitions and a proof proposal for an argument that coincides with the extended well founded semantics (WFSX), a semantics for extended logic programs (for details, see <ref> (Pereira & Alferes 1992) </ref>). Then we extend the argumentation framework for a multi-agent set ting (Schroeder, Mora, & Alferes 1997) including coop-eration. Finally, we present an algorithm for inference in the framework and an example showing the process of argumentation and cooperation. <p> For this language, various declarative semantics have been defined, e.g. the answer-sets semantics (Gelfond & Lifschitz 1990) (which is a generalization of the stable models semantics of normal logic programs), the well-founded semantics with explicit negation (WFSX) <ref> (Pereira & Alferes 1992) </ref>, and the well-founded semantics with "classical" negation (Przymusinski 1990). Both of the last two are generalizations of the well-founded semantics of normal programs.
Reference: <editor> In B. Neumann (Ed.), </editor> <booktitle> European Conference on Artificial Intelligence. </booktitle> <publisher> John Wiley & Sons. </publisher> <pages> 102-106. </pages>
Reference: <author> Pereira, L. M.; Aparcio, J. N.; and Alferes, J. J. </author> <year> 1993. </year> <title> Non-monotonic reasoning with logic programming. </title> <journal> Journal of Logic Programming. </journal> <note> Special issue on Nonmonotonic reasoning 17(2, 3 & 4). 5 Some results can be found in (Mora & Alferes 1998b; 1998a). </note>
Reference: <author> Prakken, H., and Sartor, G. </author> <year> 1997. </year> <note> Argument-based extended logig programming with defeasible priorities. Journal of Applied Non-Classical Logics. </note>
Reference-contexts: Thus, logic programming is seen as a discourse involving attacking and counter-attacking arguments. While Dung (Dung 1993) uses argumentation to define a declarative semantics for extended logic programs, Prakken and Sartor's work <ref> (Prakken & Sartor 1997) </ref> is driven by their applications in legal reasoning. Logic programming can be described in terms of two figures: Reductio ad Absurdum- and ground-attack (Dung 1993) or, equivalently, rebut and undercut (Prakken & Sartor 1997). <p> 1993) uses argumentation to define a declarative semantics for extended logic programs, Prakken and Sartor's work <ref> (Prakken & Sartor 1997) </ref> is driven by their applications in legal reasoning. Logic programming can be described in terms of two figures: Reductio ad Absurdum- and ground-attack (Dung 1993) or, equivalently, rebut and undercut (Prakken & Sartor 1997). The former classifies an argument that leads to a contradiction under the current believes and arguments, and the latter an argument that falsifies the premise of one of the current arguments. Next we introduce extended logic programming. <p> For further details on the subject of extended logic programs, their semantics, applications, and implementation see (Alferes & Pereira 1996). Argumentation The following definitions for argumentation are based on <ref> (Prakken & Sartor 1997) </ref>. They propose an argument as a sequence of ground rules 3 : Definition 2 (Argument) Let P be an extended logic program. <p> Since the proponent wants a conclusion to be justified, a proponent's argument has to be strictly defeating while, since the opponents only want to prevent the conclusion from being justified, an opponent move may be just defeating. The dialogue definition below is a modification of the original one <ref> (Prakken & Sartor 1997) </ref>, so that it can capture our modified notion of acceptability, where attacks to an argument cannot be rebuts. Definition 10 (Dialogue) A dialogue is a finite nonempty sequence of moves move i = (P layer i ; A i )(i &gt; 0), such that 1. <p> To solve this problem, priorities should be used in order to always obtain a consensual result. Conclusion and Further work The work presented in this paper is based on work by Dung (Dung 1993; 1995) and Prakken and Sar-tor <ref> (Prakken & Sartor 1997) </ref> on argumentation. Dung defines a declarative semantics for extended logic programs using the metaphor of argumentation. <p> The Prakken and Sartor's argumentation semantics defines a set of priorities to solve conflicts on the argumentation dialogue (for details see <ref> (Prakken & Sartor 1997) </ref>) and it can be easily added to our argumentation proposal. When there is no determined priority, literals involved in some conflict are simple considered as de-feasible. <p> We extend the definition of partial argument for also incomplete sequence of rules. We improve the previous algorithm to have cooperation and simulate it for a multi-agent inference. We show the connection between WFSX semantics and argumentation. Finally, Prakken and Sartor <ref> (Prakken & Sartor 1997) </ref> and Dung (Dung 1995) propose different methods to get sceptical or credulous argumentation. As further work, we intend to define just one (flexible) argumentation framework to obtain conclusions in more credulous or sceptical way 5 , depending on the applica tion's goal.
Reference: <author> Przymusinski, T. </author> <year> 1990. </year> <title> Extended stable semantics for normal and disjunctive programs. </title> <editor> In Warren, and Szeredi., eds., </editor> <booktitle> 7th Int. Conf. on LP, </booktitle> <pages> 459-477. </pages> <publisher> MIT Press. </publisher>
Reference-contexts: For this language, various declarative semantics have been defined, e.g. the answer-sets semantics (Gelfond & Lifschitz 1990) (which is a generalization of the stable models semantics of normal logic programs), the well-founded semantics with explicit negation (WFSX) (Pereira & Alferes 1992), and the well-founded semantics with "classical" negation <ref> (Przymusinski 1990) </ref>. Both of the last two are generalizations of the well-founded semantics of normal programs. However, the former, unlike the latter, considers the so-called coherence requirement relating the two form of negation: "if L is explicitly false then L must be assumed false by default".
Reference: <author> Schroeder, M.; Mora, I. A.; and Alferes, J. J. </author> <year> 1997. </year> <title> Vivid agents arguing about distributed extended logic programs. </title> <editor> In Costa, E., and Cardoso, A., eds., </editor> <booktitle> Progress in Artificial Intelligence, 8th Portuguese Conference on Artificial Intelligence EPIA97, volume LNAI1323. Coimbra, </booktitle> <address> Portugal: </address> <publisher> Springer-Verlag. </publisher> <pages> 217-228. </pages>
Reference-contexts: After that, we present basic argumentation definitions and a proof proposal for an argument that coincides with the extended well founded semantics (WFSX), a semantics for extended logic programs (for details, see (Pereira & Alferes 1992)). Then we extend the argumentation framework for a multi-agent set ting <ref> (Schroeder, Mora, & Alferes 1997) </ref> including coop-eration. Finally, we present an algorithm for inference in the framework and an example showing the process of argumentation and cooperation. <p> When there is no determined priority, literals involved in some conflict are simple considered as de-feasible. Since our argumentation semantic incorporates the Coherence principle it is more credulous and leads to more intuitive results than their proposal. Our previous work on argumentation <ref> (Schroeder, Mora, & Alferes 1997) </ref> has defined multi-agent argumentation. However it proposed a simplified cooperation process: a partial argument is defined as a rule. We extend the definition of partial argument for also incomplete sequence of rules.
References-found: 15

