URL: http://www.win.tue.nl/win/cs/csr/csr94/94.16.ps
Refering-URL: http://www.win.tue.nl/win/cs/csr/csr94.html
Root-URL: http://www.win.tue.nl
Title: Mathematical Induction Made Calculational begins with an introduction to relation algebra and is reasonably self-contained.
Author: Roland Backhouse and Henk Doornbos 
Note: The paper  
Date: March 31, 1994  
Address: P.O. Box 513, 5600 MB Eindhoven, The Netherlands.  
Affiliation: Department of Mathematics and Computer Science, Eindhoven University of Technology,  
Abstract: Several concise formulations of mathematical induction are presented and proven equivalent. The formulations are expressed in variable-free relation algebra and thus are in terms of relations only, without mentioning the related objects. It is shown that the induction principle in this form lends itself very well for use in calculational proofs. As a non-trivial example a proof of a generalisation of Newman's lemma is given. The idea of formal reasoning | by which we mean the manipulation of uninterpreted formulae according to prescribed syntactic rules | seems to split the computing community into two distinct and opposing schools. There are the enthusiasts who fervently advocate its use, arguing its effectiveness and reliability, and there are the sceptics who dismiss it, arguing that it ignores the creative process in the discovery of new facts or the design of new systems. Whilst ourselves belonging very much to the enthusiasts we are nevertheless of the opinion that, at this point in time, the sceptics can muster much bigger artillery than we enthusiasts. There are two problems. First, the formal methods community is too concerned with the issue of (a posteriori) verification of software rather than harnessing formal methods to the much harder task of its construction. Second, it is not sufficiently recognised that formal methods must combine precision with conciseness. Too often formal systems are large and complex, involving complex rules with large numbers of parameters, 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C.J. Aarts, R.C. Backhouse, P. Hoogendijk, T.S. Voermans, and J. van der Woude. </author> <title> A relational theory of datatypes. </title> <note> Available via anonymous ftp from ftp.win.tue.nl in directory pub/math.prog.construction, </note> <month> September </month> <year> 1992. </year>
Reference-contexts: ; C ) , 5 f * h 2 A C and k * g 2 C A . (Here and elsewhere we use the symbol " * " for function composition.) For a complete account of the theory of Galois connections, including proofs of the properties mentioned here, see <ref> [1, part 1] </ref>. We have already seen several examples of Galois connections: (1), (2), and (3) are all instances of (6). To see this for (1), define f:T = (T ; T ) , take for the lattice ordering v and for the product ordering v fi v.
Reference: [2] <author> R.C. Backhouse. </author> <title> Closure algorithms and the star-height problem of regular languages. </title> <type> PhD thesis, </type> <institution> University of London, </institution> <year> 1975. </year>
Reference-contexts: As we see below the follows-from is very straightforward; it is also of lesser importance.) 28 In <ref> [2] </ref> it was shown that the rule remains valid for matrices by induction on the size of the matrix. Here we shall show that the rule is valid for any algebra complying with the properties detailed in sections 1.1 and 1.2 (the lattice and monoid structures of a relation algebra).
Reference: [3] <author> R.C. Backhouse and B.A. Carre. </author> <title> Regular algebra applied to path-finding problems. </title> <journal> Journal of the Institute of Mathematics and its Applications, </journal> <volume> 15 </volume> <pages> 161-186, </pages> <year> 1975. </year>
Reference-contexts: Definition 53 (Spec-well-founded) Spec R is said to be spec-well-founded if and only if it satisfies 8 (S :: Sv?? ( S v S ffi R) :(54) (This definition was introduced in <ref> [3] </ref> where it was given the name "definiteness". Elsewhere [18] it is called "progressive finiteness". Because of its elegantly compact form it has no doubt been introduced in many other publications.) The claim is that all three definitions of well-foundedness are equivalent. <p> ffi T : From this one deduces in the same way that (X 7! X ffi R) = R fl = (X 7! X ffi R + ) = (X 7! X ffi R) : 7 The Uep of Regular Algebra We remarked earlier that definition 53 was introduced in <ref> [3] </ref> where it was called "definiteness". Reference [3] was about applying regular algebra to path-finding problems, and a fundamental fact exploited in that paper was that the property of being a regular algebra is preserved by matrix formation. <p> in the same way that (X 7! X ffi R) = R fl = (X 7! X ffi R + ) = (X 7! X ffi R) : 7 The Uep of Regular Algebra We remarked earlier that definition 53 was introduced in <ref> [3] </ref> where it was called "definiteness". Reference [3] was about applying regular algebra to path-finding problems, and a fundamental fact exploited in that paper was that the property of being a regular algebra is preserved by matrix formation. <p> Salomaa's axiomatisation [17] of regular algebra, however, involved the use of the so-called "empty word property", the formulation of which does not extend to matrices. As a replacement for Salomaa's rule the following rule was postulated in <ref> [3] </ref> as an axiom of regular algebra: R satisfies (54) j 8 (S; T :: T = S t T ffi R j T = S ffi R fl ) : We call this rule the unique extension property (uep) of regular algebra. (In fact only an implication was postulated in <p> as an axiom of regular algebra: R satisfies (54) j 8 (S; T :: T = S t T ffi R j T = S ffi R fl ) : We call this rule the unique extension property (uep) of regular algebra. (In fact only an implication was postulated in <ref> [3] </ref>. As we see below the follows-from is very straightforward; it is also of lesser importance.) 28 In [2] it was shown that the rule remains valid for matrices by induction on the size of the matrix.
Reference: [4] <author> R.C. Backhouse and J. van der Woude. </author> <title> Demonic operators and monotype factors. </title> <booktitle> Mathematical Structures in Computer Science, </booktitle> <volume> 3(4) </volume> <pages> 417-433, </pages> <month> December </month> <year> 1993. </year>
Reference-contexts: Those readers familiar with weakest liberal preconditions will recognise the interpretations of these properties as old and faithful friends. (See <ref> [4] </ref> for a more detailed discussion of the connection.) The proofs we give may be less familiar and are illustrative of the elegance of calculations with Galois connections.
Reference: [5] <author> Han Baumer. </author> <title> On the use of relation algebra in the theory of reduction systems. </title> <editor> In J.L.G. Dietz, editor, </editor> <volume> CSN 92, </volume> <pages> pages 54-64, </pages> <address> Amsterdam, 1992. </address> <publisher> Centrum voor Wiskunde en Informatica. </publisher>
Reference-contexts: Spec R is confluent is equivalent to R fl ffi (R [ ) fl v (R [ ) fl ffi R fl :(84) Spec R is locally confluent is R ffi R [ v (R [ ) fl ffi R fl :(85) See <ref> [5] </ref> for how to obtain these definitions from the usual formulations.
Reference: [6] <author> Garrett Birkhoff. </author> <title> Lattice Theory, </title> <booktitle> volume 25 of American Mathematical Society Colloquium Publications. </booktitle> <publisher> American Mathematical Society, </publisher> <address> Providence, Rhode Island, </address> <note> 3rd edition, </note> <year> 1967. </year>
Reference-contexts: Our division of the axiom system into substructures is intended to better organise the discussion of such issues. 2 Galois Connections 2.1 Basics The concept of a Galois connection is "well known", see e.g. <ref> [6, 8] </ref>, but perhaps not as well known as it should be. <p> Interpreting n as indicated in equation (11) the polar &gt;&gt;nR may be identified with the set P where y2P j 8 (x :: x [[R]]y) : The term "polarity" was coined by Birkhoff <ref> [6] </ref>; he defines a binary operator on sets and relations modelled here by p=S (where right polar p models a set and spec S models a relation).
Reference: [7] <author> J.H. Conway. </author> <title> Regular Algebra and Finite Machines. </title> <publisher> Chapman and Hall, </publisher> <address> London, </address> <year> 1971. </year>
Reference-contexts: We prefer Conway's <ref> [7] </ref> terminology viz. right and left factor operators. 6 Straightforward consequences of these definitions are the cancellation properties R ffi RnS v S ;(9) Given the interpretations of composition and inclusion in the relational model it is straight forward to derive the interpretations of the two factor operators.
Reference: [8] <author> B. A. Davey and H. A. Priestly. </author> <title> Introduction to Lattices and Order. </title> <publisher> Cambridge Mathematical Textbooks. Cambridge University Press, </publisher> <address> first edition, </address> <year> 1990. </year>
Reference-contexts: Our division of the axiom system into substructures is intended to better organise the discussion of such issues. 2 Galois Connections 2.1 Basics The concept of a Galois connection is "well known", see e.g. <ref> [6, 8] </ref>, but perhaps not as well known as it should be.
Reference: [9] <author> R.P. </author> <title> Dilworth. Non-commutative residuated lattices. </title> <journal> Transactions of the American Mathematical Society, </journal> <volume> 46 </volume> <pages> 426-444, </pages> <year> 1939. </year>
Reference-contexts: the existence of two binary operators n and = (pronounced under and over, respectively) defined by the rules: R v SnT j S ffi R v T ,(7) These two operators have been given a variety of names in the literature, the oldest being the right and left residual operators <ref> [9] </ref>.
Reference: [10] <author> W.H.J. Feijen. </author> <title> Exercises in formula manipulation. In E.W. Dijkstra, editor, </title> <booktitle> Formal Development of Programs and Proofs, </booktitle> <pages> pages 139-158. </pages> <publisher> Addison-Wesley Publ. Co., </publisher> <year> 1990. </year>
Reference-contexts: To see this for (1), define f:T = (T ; T ) , take for the lattice ordering v and for the product ordering v fi v. Then (1) can be rewritten as t:(R ; S) v T j (R ; S) f:T . See <ref> [10] </ref> for an illustration of how the use of this Galois connection considerably enhances calculations with the supremum operator.
Reference: [11] <author> P.J. Freyd and A. Scedrov. </author> <title> Categories, </title> <publisher> Allegories. North-Holland, </publisher> <year> 1990. </year> <month> 36 </month>
Reference-contexts: R ffi S u T v R ffi U ( S u R [ ffi T v U :(5) Following Freyd and Scedrov <ref> [11] </ref> we call the rule the modular identity. The earliest reference we know of to the rule is [16] where it is given the name "Dedekind's formula" (in French "formel Dedekind") because of its relationship to the modular identity (for groups) formulated by Dedekind. <p> Calculations are often made significantly more effective if one has a good grasp of exactly what the merits and demerits of each is. One mechanism for representing sets as relations is via so-called "monotypes" (sometimes called "coreflexives" <ref> [11] </ref>), a second is via "left conditions" and a third via "right conditions" (sometimes called "row" and "column vectors" [18]). Axiomatically, these have the following definitions. First: we say that spec A is a monotype iff A v I .
Reference: [12] <author> G. Huet. </author> <title> Confluent reductions: Abstract properties and applications to term rewriting systems. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 27(4) </volume> <pages> 797-821, </pages> <year> 1980. </year>
Reference-contexts: Compared to the original proof in [14] the proof given here is much simpler. See <ref> [12] </ref> for a proof that, although not calculational, is comparable to the one given here. It should be remarked that the generalisation | the replacement of R [ by an arbitrary spec | emerged quite naturally from the proof we constructed for Newman's lemma in its original form. <p> This generalisation is in our opinion not so easy to see in a proof like the one in <ref> [12] </ref>. 35 Acknowledgement Our thanks to Dana Buhaceanu whose solution to an examination question on this topic led to the proof of lemma 80, to Han Baumer for introducing us to the term-rewriting literature and suggesting that we try to prove Newman's lemma, and to Lex Bijlsma and Jaap van der
Reference: [13] <author> J.W. Klop. </author> <title> Term rewriting systems: a tutorial. </title> <journal> Bulletin of the EATCS, </journal> <volume> 32 </volume> <pages> 143-182, </pages> <year> 1987. </year>
Reference-contexts: Now an important property of the relation associated with a term rewrite system is that of confluence, another one is local confluence (also known as the Church-Rosser and weakly Church-Rosser properties respectively). For an account of term rewrite systems in general and these properties in particular see <ref> [13] </ref>. Newman's lemma states that any relation that admits induction and is locally confluent is also confluent. First we formulate these two properties in the relational calculus.
Reference: [14] <author> M.H.A. Newman. </author> <title> On theories with a combinatorial definition of "equivalence". </title> <journal> Annals of Math., </journal> <volume> 43(2) </volume> <pages> 223-243, </pages> <year> 1942. </year>
Reference-contexts: We also leave this as an exercise. A final exercise is to show that (T 7! RnT ) is a left condition. 32 9 Newman's Lemma Newman's lemma <ref> [14] </ref> is a lemma from the study of term rewriting systems. These systems play an important role in, for instance, the implementation of functional programming languages. By definition, a term rewrite system is a set, together with a set of rewrite rules. <p> Compared to the original proof in <ref> [14] </ref> the proof given here is much simpler. See [12] for a proof that, although not calculational, is comparable to the one given here.
Reference: [15] <author> Oystein Ore. </author> <title> Galois connexions. </title> <journal> Transactions of the American Mathematical Society, </journal> <volume> 55 </volume> <pages> 493-513, </pages> <year> 1944. </year>
Reference: [16] <author> J. Riguet. </author> <title> Relations binaires, fermetures, correspondances de Galois. </title> <journal> Bulletin de la Societe Mathematique de France, </journal> <volume> 76 </volume> <pages> 114-155, </pages> <year> 1948. </year>
Reference-contexts: R ffi S u T v R ffi U ( S u R [ ffi T v U :(5) Following Freyd and Scedrov [11] we call the rule the modular identity. The earliest reference we know of to the rule is <ref> [16] </ref> where it is given the name "Dedekind's formula" (in French "formel Dedekind") because of its relationship to the modular identity (for groups) formulated by Dedekind. We make no explicit use of this rule.
Reference: [17] <author> Arto Salomaa. </author> <title> Two complete axiom systems for the algebra of regular events. </title> <journal> J. Assoc. Comp. Mach., </journal> <volume> 13(1) </volume> <pages> 158-169, </pages> <month> January </month> <year> 1966. </year>
Reference-contexts: Reference [3] was about applying regular algebra to path-finding problems, and a fundamental fact exploited in that paper was that the property of being a regular algebra is preserved by matrix formation. Salomaa's axiomatisation <ref> [17] </ref> of regular algebra, however, involved the use of the so-called "empty word property", the formulation of which does not extend to matrices.
Reference: [18] <author> G. Schmidt and T. Strohlein. </author> <title> Relations and Graphs, Discrete Mathematics for Computer Scientists. </title> <booktitle> EATCS Monographs on Theoretical Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin Heidelberg, </address> <year> 1993. </year>
Reference-contexts: 1 The Algebraic Framework In this section we provide a short introduction to relation algebra, the axiomatic calculus of relations due to (among others) de Morgan, Schroder and Tarski. Full accounts appear in several monographs (see, for example, <ref> [18, 19] </ref>); we will make do with just a summary of precisely those properties we need in our calculations. Throughout the rest of this article capital letters R, S, T , U will denote elements of a relation algebra. <p> One mechanism for representing sets as relations is via so-called "monotypes" (sometimes called "coreflexives" [11]), a second is via "left conditions" and a third via "right conditions" (sometimes called "row" and "column vectors" <ref> [18] </ref>). Axiomatically, these have the following definitions. First: we say that spec A is a monotype iff A v I . Second: we say that spec p is a right condition iff p = &gt;&gt; ffi p . <p> Definition 53 (Spec-well-founded) Spec R is said to be spec-well-founded if and only if it satisfies 8 (S :: Sv?? ( S v S ffi R) :(54) (This definition was introduced in [3] where it was given the name "definiteness". Elsewhere <ref> [18] </ref> it is called "progressive finiteness". Because of its elegantly compact form it has no doubt been introduced in many other publications.) The claim is that all three definitions of well-foundedness are equivalent.
Reference: [19] <author> Alfred Tarski and Steven Givant. </author> <title> A Formalization of Set Theory without Variables, </title> <booktitle> volume 41 of Colloquium Publications. </booktitle> <publisher> American Mathematical Society, </publisher> <address> Providence, Rhode Island, </address> <year> 1987. </year> <month> 37 </month>
Reference-contexts: 1 The Algebraic Framework In this section we provide a short introduction to relation algebra, the axiomatic calculus of relations due to (among others) de Morgan, Schroder and Tarski. Full accounts appear in several monographs (see, for example, <ref> [18, 19] </ref>); we will make do with just a summary of precisely those properties we need in our calculations. Throughout the rest of this article capital letters R, S, T , U will denote elements of a relation algebra.
References-found: 19

