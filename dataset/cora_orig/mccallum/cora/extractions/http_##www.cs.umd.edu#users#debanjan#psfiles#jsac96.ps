URL: http://www.cs.umd.edu/users/debanjan/psfiles/jsac96.ps
Refering-URL: http://www.cs.umd.edu/users/debanjan/pages/onepage.html
Root-URL: 
Email: email:fkandlur,debanjan,mwlmg@watson.ibm.com  
Title: Protocol Architecture for Multimedia Applications over ATM Networks  
Author: Dilip D. Kandlur Debanjan Saha Marc Willebeek-LeMair 
Address: Yorktown Heights, NY 10598  
Affiliation: IBM Thomas J. Watson Research Center  
Abstract: At the data-link layer, ATM offers a number of features, such as high-bandwidth and per-session quality of service (QoS) guarantees, making it particularly attractive to multimedia applications. Unfortunately, many of these features are not visible to applications because of the inadequacies of existing higher-level protocol architectures. Although there is considerable effort underway to tune these protocols for ATM networks, we believe that a new ATM specific protocol stack is essential to effectively exploit all the benefits of ATM. In this paper we describe the semantics of such a protocol stack, and discuss its advantages over traditional protocol architectures from the perspective of multimedia applications. The performance impact of the new protocol architecture is experimentally demonstrated on a video conferencing testbed built around IBM RS/6000s equipped with prototype hardware for video/audio processing, and connected via ATM links. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> MMTplus Functional Description. IBM Internal Document, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: Each machine is equipped with an IBM Turboways ATM network interface [2], and the MMT 4 prototype adapter <ref> [1] </ref>. The ATM adapter implements the ATM adaptation layer 5 (AAL5), which is responsible for all segmentation and reassembly of datagrams and detection of transmission errors and dropped cells. The MMT adapter performs video and audio capture, compression, decompression, and playback. main memory are connected through the system bus. <p> The video input is fed through the video frame rate control logic to the compression engine. The data rate of the compressed data stream can be controlled by programming the quantizer to as low as 128 Kbits/sec and as high as 10 Mbits/sec <ref> [1] </ref>. The CODEC is capable of mixing up to 32 video streams [15] in the compressed domain and presenting them in multiple video windows. ATM Adapter. The Turboways ATM adapter [2] is responsible for performing the AAL5 functionalities.
Reference: [2] <institution> ATM Turboways 100 Adapter. IBM Internal Document, </institution> <month> May </month> <year> 1994. </year>
Reference-contexts: Each machine is equipped with an IBM Turboways ATM network interface <ref> [2] </ref>, and the MMT 4 prototype adapter [1]. The ATM adapter implements the ATM adaptation layer 5 (AAL5), which is responsible for all segmentation and reassembly of datagrams and detection of transmission errors and dropped cells. <p> The CODEC is capable of mixing up to 32 video streams [15] in the compressed domain and presenting them in multiple video windows. ATM Adapter. The Turboways ATM adapter <ref> [2] </ref> is responsible for performing the AAL5 functionalities. It features a dedicated i960 processor and a specialized chipset to handle AAL5 segmentation and reassembly in hardware. The adapter is equipped with a DMA master and 2MB of on-board memory.
Reference: [3] <editor> ATM Forum, </editor> <publisher> Prentice Hall Inc., </publisher> <address> Englewood Cliffs, NJ. </address> <note> ATM User-Network Interface Specification Version 3.0, </note> <year> 1993. </year>
Reference-contexts: The User-Network signaling standard specifies the protocol for the setup of ATM virtual connections. The current version of this signaling standard, as defined by the ATM Forum, is UNI 3.1 <ref> [3, 8] </ref> and it supports point-to-point and point-to-multipoint connections. The standard makes a distinction between Private and Public UNI 1 interfaces. During connection setup the endpoints of a connection have to be identified. The connection SETUP message carries several fields to identify the endpoints such as: * Called party address.
Reference: [4] <author> A. Campbell, G. Coulson, and D. Hutchison. </author> <title> A Quality of Service Architecture. </title> <journal> SIGCOMM Computer Communication Review, </journal> <volume> 24(2), </volume> <month> April </month> <year> 1994. </year>
Reference-contexts: Another unique feature of our design is the use of connection specific handlers. This permits customization of the protocol stack on a per-connection basis. The issue of application interface for quality of service in ATM networks has been addressed by other researchers <ref> [4, 16] </ref>. However, we believe that our approach of extending the socket interface provides a smooth transition by allowing applications access to new features while maintaining backward compatibility. The rest of the paper is organized as follows. In section 2 we describe the semantics of the protocol stack.
Reference: [5] <author> M-S. Chen, Z-Y. Shae, D. D. Kandlur, T. Barzilai, and H. Vin. </author> <title> A multimedia desktop collaboration system. </title> <type> Research Report RC 17951, </type> <institution> IBM Research, T. J. Watson Research Center, </institution> <address> Yorktown Heights, NY 10598, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: The goal of our project was to develop a system capable of handling multiple, very high quality, full motion video streams and CD quality audio streams. It was built around IBM RS/6000s equipped with prototype adapters (MMT) <ref> [5] </ref> for real-time capture, compression, decompression and play back of video and audio. In the first prototype implementation the hosts exchanged video and audio data using classical IP (Internet Protocol) running over ATM adaptation layer five (AAL5) as defined in RFC1577 [9].
Reference: [6] <author> P. Druschel, L.L. Peterson, and B.S. Davie. </author> <title> Experiences with a High-Speed Network Adapter: A Software Perspective. </title> <booktitle> In Proceedings, ACM SIGCOMM, </booktitle> <month> August </month> <year> 1994. </year>
Reference-contexts: Connection specific processing provides multimedia applications with data channels customizable to satisfy their specific service requirements. The emergence of ATM networks has led many researchers <ref> [17, 10, 6] </ref> to look into efficient protocol processing architectures. However, in all of these works, user processes are assumed to be the end-points of communication.
Reference: [7] <author> K. Fall and J. Pasquale. </author> <title> Exploiting In-kernel Data Paths to Improve I/O Throughput and CPU Availability. </title> <booktitle> In Proceedings, USENIX Winter Conference, </booktitle> <month> January </month> <year> 1993. </year>
Reference-contexts: In the architecture shown in Fig. 4 data paths connect the devices that generate/consume data directly. Separation of control and data allows devices to be the end-points of a connection. We can use mechanisms such as splice <ref> [7] </ref> to establish in-kernel direct paths between the ATM network interface and a device, transparent to the application. The application can still exercise control on the data path through the control socket.
Reference: [8] <author> ATM Forum. </author> <title> ATM user-network interface specification, </title> <note> version 3.1, </note> <year> 1994. </year>
Reference-contexts: The User-Network signaling standard specifies the protocol for the setup of ATM virtual connections. The current version of this signaling standard, as defined by the ATM Forum, is UNI 3.1 <ref> [3, 8] </ref> and it supports point-to-point and point-to-multipoint connections. The standard makes a distinction between Private and Public UNI 1 interfaces. During connection setup the endpoints of a connection have to be identified. The connection SETUP message carries several fields to identify the endpoints such as: * Called party address.
Reference: [9] <author> M. Laubach. </author> <title> Classical IP and ARP over ATM. </title> <institution> Internet RFC-1577, </institution> <month> January </month> <year> 1994. </year>
Reference-contexts: In the first prototype implementation the hosts exchanged video and audio data using classical IP (Internet Protocol) running over ATM adaptation layer five (AAL5) as defined in RFC1577 <ref> [9] </ref>. Consequently, there was no quality of service support for the network connections. Furthermore, application-to-application throughput of the datapath was only a very small fraction of the bandwidth available at the ATM layer. After a careful profiling, we identified several architectural shortcomings limiting the application throughput. <p> Applications have transparent access to the ATM network using the PF INET protocol family. The mapping of IP to the ATM data-link is handled by the ATM network interface 4 (IF ATM) using the IP over ATM protocol <ref> [9] </ref>. Applications also have direct access to ATM services using the ATM protocol family (PF ATM). In the following we explain the application interface using the PF ATM protocol family. The PF ATM family uses ATM addresses for identifying endpoints for connections. Addressing. <p> The network interface layer provides a connectionless data-link service to its users and it demultiplexes incoming data packets based on the logical link control (LLC) information. In the case of ATM, this interface layer adapts the connectionless LLC service to ATM virtual connections. For IP traffic, RFC1577 <ref> [9] </ref> defines a "classical" IP subnet mapping wherein this adaptation is localized to the data-link layer using a modified ARP mechanism, leaving the upper layer protocols and applications unchanged. In the figure, this is reflected by the absence of ATM signaling flows in the PF INET family. Native ATM Interface.
Reference: [10] <author> C. Maeda and B. N. Bershad. </author> <title> Protocol Service Decomposition for High-Performance Networking. </title> <booktitle> In Proceedings, ACM Symposium on Operating Systems Principles, </booktitle> <month> December </month> <year> 1993. </year>
Reference-contexts: Connection specific processing provides multimedia applications with data channels customizable to satisfy their specific service requirements. The emergence of ATM networks has led many researchers <ref> [17, 10, 6] </ref> to look into efficient protocol processing architectures. However, in all of these works, user processes are assumed to be the end-points of communication.
Reference: [11] <author> B. Manning and R. Colella. </author> <title> DNS NSAP resource records. </title> <institution> Internet RFC-1706, </institution> <month> October </month> <year> 1994. </year>
Reference-contexts: We propose to exploit the Internet Domain Name Service (DNS) to provide naming support for applications. The DNS has been extended to support NSAP Resource Records <ref> [11] </ref> so that DNS servers can store NSAPs and client DNS resolvers can obtain the NSAPs by issuing queries based on the host name. Communication between the resolver and the DNS server will proceed as usual using the normal TCP/IP protocol stack. Control.
Reference: [12] <author> A. Romanow and S. Floyd. </author> <title> Dynamics of TCP Traffic over ATM Networks. </title> <booktitle> In Proceedings, ACM SIGCOMM, </booktitle> <month> August </month> <year> 1994. </year>
Reference-contexts: Unfortunately, higher layer protocols such as TCP/IP fail to extend these benefits to their applications. Although a considerable effort is underway to tune these existing protocols for ATM networks <ref> [12, 20] </ref>, we believe there is considerable advantage to be gained by a new ATM specific protocol stack to effectively exploit all the benefits of ATM. In this paper we briefly describe the semantics of such a protocol stack and present experimental evidence of its impact on multimedia applications.
Reference: [13] <author> D. Saha. </author> <title> Supporting Distributed Multimedia Applications on ATM Networks. </title> <type> Ph.D. dissertation, </type> <institution> University of Maryland. </institution> <note> Also available as Technical Report CS-TR-3519. http://www.cs.umd.edu/ debanjan/education.html, </note> <month> August </month> <year> 1995. </year>
Reference-contexts: To facilitate device-to-device data streaming between MMT and ATM adapters we extended the MMT device driver. Details on these extensions may be found in <ref> [13] </ref>. We modified VASU to exploit the benefits of the new architecture. On the transmit side, VASU opens one control and one data channel to the MMT. The control channel is used to move control information, such as device or connection failure, from the MMT to VASU.
Reference: [14] <author> D. Saha, D. Kandlur, Z. Shae, T. Barzilai, and M. W-LeMair. </author> <title> A Videoconferencing Testbed on ATM: Design, Implementation, and Optimizations. </title> <booktitle> In Proceedings International Conference on Multimedia Computing and Systems, </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: In the following description we limit our attention to the Video Audio Support Unit (VASU), the subsystem responsible for moving audio and video data. For a detailed description of the entire system refer to <ref> [14] </ref>. In the first prototype, referred to as the base system, peer VASUs running on different hosts open communication channels to each other using datagram sockets running over UDP/IP on ATM AAL5. In the base system, no modification to the devices or the device interfaces are made.
Reference: [15] <author> Z-Y. Shae and M-S. Chen. </author> <title> Mixing and playback of JPEG compressed packet videos. </title> <booktitle> In Proceedings GLOBECOM. IEEE, </booktitle> <month> December </month> <year> 1992. </year>
Reference-contexts: The data rate of the compressed data stream can be controlled by programming the quantizer to as low as 128 Kbits/sec and as high as 10 Mbits/sec [1]. The CODEC is capable of mixing up to 32 video streams <ref> [15] </ref> in the compressed domain and presenting them in multiple video windows. ATM Adapter. The Turboways ATM adapter [2] is responsible for performing the AAL5 functionalities. It features a dedicated i960 processor and a specialized chipset to handle AAL5 segmentation and reassembly in hardware.
Reference: [16] <author> R. Sharma and S. Keshav. </author> <title> Signalling and Operating System Support for Native Mode ATM Applications. </title> <booktitle> In Proceedings, ACM SIGCOMM, </booktitle> <month> August </month> <year> 1994. </year> <month> 21 </month>
Reference-contexts: Another unique feature of our design is the use of connection specific handlers. This permits customization of the protocol stack on a per-connection basis. The issue of application interface for quality of service in ATM networks has been addressed by other researchers <ref> [4, 16] </ref>. However, we believe that our approach of extending the socket interface provides a smooth transition by allowing applications access to new features while maintaining backward compatibility. The rest of the paper is organized as follows. In section 2 we describe the semantics of the protocol stack.
Reference: [17] <author> C. A. Thekkat, T. D. Nguyen, E. Moy, and E. D. Lazowaska. </author> <title> Implementing User Protocols at User Level. </title> <booktitle> In Proceedings, ACM SIGCOMM, </booktitle> <month> August </month> <year> 1993. </year>
Reference-contexts: Connection specific processing provides multimedia applications with data channels customizable to satisfy their specific service requirements. The emergence of ATM networks has led many researchers <ref> [17, 10, 6] </ref> to look into efficient protocol processing architectures. However, in all of these works, user processes are assumed to be the end-points of communication.
Reference: [18] <institution> The USENIX Association and O'Reilly & Associates, Inc., </institution> <address> 103 Morris Street, Suite A, Sebastopol, CA 94572. </address> <note> 4.4BSD Programmer's Reference Manual, </note> <month> April </month> <year> 1994. </year>
Reference-contexts: In the traditional socket interface, control and data are handled on the same socket. Control parameters are usually passed using ioctl or setsockopt function calls. However, these calls do not accommodate the upward flow of information from the protocol module to the application. More recently <ref> [18] </ref>, the message structure used in the sendmsg and recvmsg function calls has been modified to include control fields, and these calls can be used to pass control information between the application and the protocol module. <p> The local end-point information is obtained by passing the data socket as a parameter. ctl_sock = socket (AF_ATM,SOCK_CNTL,0); sendmsg (ctl_sock,&lt;SETFLOWSPEC,data_sock,flow-spec,flow-spec-len&gt;); sendmsg (ctl_sock,&lt;SETUP,data_sock,&lt;dest-atm-address,dst-port&gt;>); Here, the sendmsg call is used to pass the control information structure since it differentiates between control and data fields <ref> [18] </ref>. Alternatively, the information could also be passed using write or send. The CNTL module maintains connection state information for each connection that has been opened on the control socket. <p> In order to exploit the rich set of functionality provided by the ATM network, in the optimized system we use a native ATM stack running over AAL5 instead of UDP/IP. 6 mbufs are kernel managed buffers <ref> [18] </ref>. 15 4.3 Optimizations with the Native ATM Stack Based on the lessons learned from the implementation and evaluation of the first prototype, we have designed and implemented the second prototype with two primary objectives: * Optimize the data path between MMT and ATM adapters by exploiting the separation of control
Reference: [19] <author> G. K. Wallace. </author> <title> The JPEG Still Picture Compression Standard. </title> <journal> Communications of the ACM, </journal> <volume> 34, </volume> <month> April </month> <year> 1991. </year>
Reference-contexts: The DSP has access to a 256 Kbyte SRAM and a 16 Kbyte dual port memory (DP-RAM). The SRAM is used for smoothing and mixing of video and audio streams. The dual port memory is used to communicate with the system. The adapter currently supports the ISO Motion-JPEG <ref> [19] </ref> standard. The video processing unit consists of two motion JPEG engines, one for compression and the other for decompression. They can support different frame rates and resolutions. The video input is fed through the video frame rate control logic to the compression engine.
Reference: [20] <author> A. Wolman, G. Voelker, and C. A. Thekkath. </author> <title> Latency Analysis of TCP on an ATM Network. </title> <booktitle> In Proceedings, Winter Usenix, </booktitle> <month> January </month> <year> 1994. </year> <month> 22 </month>
Reference-contexts: Unfortunately, higher layer protocols such as TCP/IP fail to extend these benefits to their applications. Although a considerable effort is underway to tune these existing protocols for ATM networks <ref> [12, 20] </ref>, we believe there is considerable advantage to be gained by a new ATM specific protocol stack to effectively exploit all the benefits of ATM. In this paper we briefly describe the semantics of such a protocol stack and present experimental evidence of its impact on multimedia applications.
References-found: 20

