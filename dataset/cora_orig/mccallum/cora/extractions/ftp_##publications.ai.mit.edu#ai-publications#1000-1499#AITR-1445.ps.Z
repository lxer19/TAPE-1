URL: ftp://publications.ai.mit.edu/ai-publications/1000-1499/AITR-1445.ps.Z
Refering-URL: http://www.ai.mit.edu/projects/transit/rn1_documents.html
Root-URL: 
Email: andre@ai.mit.edu  
Title: Robust, High-Speed Network Design for Large-Scale Multiprocessing  
Author: Andr e DeHon 
Date: 1445 September, 1993  
Affiliation: MASSACHUSETTS INSTITUTE OF TECHNOLOGY ARTIFICIAL INTELLIGENCE LABORATORY  
Pubnum: A.I. Technical Report No.  
Abstract: Large-scale multiprocessing remains an elusive, yet promising paradigm for achieving high-performance computation. As machine size scales upward, there are two important aspects of multiprocessor systems which will generally get worse rather than better: (1) interprocessor communication latency will increase and (2) the probability that some component in the system will fail will increase. Both of these problems can prevent us from realizing the potential benefits of large-scale multiprocessing. In this document we consider the problem of designing networks which simultaneously minimize communication latency while maximizing fault tolerance for large-scale multiprocessors. Using a synergy of techniques including connection topologies, routing protocols, signalling techniques, and packaging technologies we assemble integrated, system-level solutions to this network design problem. In particular, we recommend the use of multipath, multistage networks, simple, source-responsible routing protocols, stochastic fault-avoidance, dense three- dimensional packaging, low-voltage, series-terminated transmission line signalling, and scan based diagnostic and reconfiguration. Acknowledgements: This report describes research done at the Artificial Intelligence Laboratory of the Mas- sachusetts Institute of Technology. Support for the Laboratory's Artificial Intelligence Research is provided in part by the Advanced Research Projects Agency under Office of Naval Research contract N00014-91-J-1698. This material is based upon work supported under a National Science Foundation Graduate Fellowship. Any opinions, findings, conclusions or recommendations expressed in this publication are those of the author and do not necessarily reflect the views of the National Science Foundation. 
Abstract-found: 1
Intro-found: 1
Reference: [ACD + 91] <author> Anant Agarwal, David Chaiken, Godfrey D'Souza, Kirk Johnson, David Kranz, John Kubiatowicz, Kiyoshi Kurihara, Beng-Hong Lim, Gino Maa, Dan Nussbaum, Mike Parkin, and Donald Yeung. </author> <title> The MIT Alewife Machine: A Large-Scale DistributedMemory Multiprocessor. MIT/LCS/TM 454, </title> <publisher> MIT, </publisher> <address> 545 Technology Sq., Cambridge, MA 02139, </address> <month> November </month> <year> 1991. </year>
Reference-contexts: Each node is composed of a processor, some memory, and a network interface. In a hardware-supported shared-memory machine, this network interface might be the cache-controller [LLG + 91] <ref> [ACD + 91] </ref>; in a message-passing machine, it would be the network message interface [Cor91] [Thi91]. Increasingly, the network interface may be tightly-integrated with the processor [D + 92] [NPA91]. We explicitly assume the network interface has multiple connections both into the network and out of the network. <p> The exploitation of network locality to minimize the effective communication latency in a multiprocessor system is an active area of current research [KLS90] <ref> [ACD + 91] </ref> [Wal92]. Exploiting network locality is of particular interest when designing scalable computer systems since the latency of the interconnect will necessarily increase with network size.
Reference: [ACM88] <author> Arvind, D. E. Culler, and G. </author> <title> K Mass. Assessing the Benefits of Fine-Grain Parallelism in Dataflow Programs. </title> <journal> The International Journal of Soupercomputer Applications, </journal> <volume> 2(3), </volume> <month> November </month> <year> 1988. </year>
Reference: [AI87] <author> Arvind and R. A. Ianucci. </author> <title> Two Fundamental Issues in Multiprocessing. </title> <booktitle> In Proceedings of DFVLR Conference on Parallel Processing in Science and Engineering, </booktitle> <pages> pages 6188, </pages> <address> West Germany, </address> <month> June </month> <year> 1987. </year>
Reference-contexts: Data parallel operations are limited by the rate at which processors can obtain access to the data on which they need to operate. Multithreaded ([Smi78] [Jor83] [ALKK90] [SBCvE90] [CSS + 91] [NPA92]) and dataflow ([ACM88] <ref> [AI87] </ref> [PC90]) architectures have been developed to mitigate communication latency by hiding its effects. These techniques all rely on an abundance of parallelism to provide useful processing to perform while waiting on slow communications. <p> this parallelism for particular programs and computational models using a parallelism profile which 1 The basic argument presented here is drawn from an unpublished manuscript by Professor Michael Dertouzos. 13 shows the number of operations which may be executed simultaneously at each time-step assuming an unbounded number of processors (e.g. <ref> [AI87] </ref>). The available parallelism will be a function of the compiler and run-time system in addition to being dependent on the problem being solved and the algorithm used to solve it. Communication latency is also, generally, not constant.
Reference: [ALKK90] <author> Anant Agarwal, Beng-Hong Lim, David Kranz, and John Kubiatowicz. </author> <month> APRIL: </month> <title> A Processor Architecture for Multiprocessing. </title> <booktitle> In Proceedings of the 17th International Symposium on Computer Architecture, </booktitle> <pages> pages 104-114. </pages> <publisher> IEEE, </publisher> <month> May </month> <year> 1990. </year>
Reference-contexts: Data parallel operations are limited by the rate at which processors can obtain access to the data on which they need to operate. Multithreaded ([Smi78] [Jor83] <ref> [ALKK90] </ref> [SBCvE90] [CSS + 91] [NPA92]) and dataflow ([ACM88] [AI87] [PC90]) architectures have been developed to mitigate communication latency by hiding its effects. These techniques all rely on an abundance of parallelism to provide useful processing to perform while waiting on slow communications.
Reference: [And85] <author> T. Anderson, </author> <title> editor. </title> <journal> Resilient Computing Systems, </journal> <volume> volume I, chapter 10, </volume> <pages> pages 178196. </pages> <publisher> Wiley-Interscience, </publisher> <year> 1985. </year> <note> Chapter by: </note> <author> C. I. </author> <month> Dimmer. </month>
Reference-contexts: Of course, the electrical and mechanical design of the system must also be suitable for live replacement (e.g. Tandem Non-Stop computer systems <ref> [And85] </ref>, Stratus fault-tolerant computer systems [Web90], Thinking Machines CM5 [Thi91]).
Reference: [Baz85] <author> M. Bazes. </author> <title> A Novel Percision MOS Synchronous Delay Line. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> 20(6) </volume> <pages> 1265-1271, </pages> <month> December </month> <year> 1985. </year>
Reference-contexts: For finer control, of course, a voltage controlled delay could be used instead of, or in addition to, a variable delay multiplexor (See Figure 6.28). Figure 6.29 130 Shown here is a voltage controlled delay line (VCDL) after <ref> [Baz85] </ref> and [Joh88]. Varying VCTRL effectively controls the amount of capacitive load seen by the output of each inverter stage and hence the delay through each inverter stage.
Reference: [BJN + 86] <author> L. A. Bergman, A. R. Johnston, R. Nixon, S. C. Esener, C. C. Guest, P. K. Yu, T. J. Drabik, and M. R. Feldman S. H. Lee. </author> <title> Holographic Optical Interconnects for VLSI. </title> <journal> Optical Engineering, </journal> <volume> 25(10) </volume> <pages> 1009-1118, </pages> <month> October </month> <year> 1986. </year>
Reference-contexts: Since photons do not interfere with each other, free- space optics makes the task of wiring the interconnections through the center of the hollow cube trivial. <ref> [BJN + 86] </ref> and [WBJ + 87] discuss early work on large-scale, free-space optical interconnect for VLSI systems. They use holographic optical elements to direct optical beams for interconnections. The flexibility of the holographic media holds out promise for adaptive and dynamic connection alignment and reconfiguration.
Reference: [Bra90] <author> Christopher W. Branson. </author> <title> Integrating Tester Pin Electronics. </title> <booktitle> IEEE Design and Test of Computers, </booktitle> <pages> pages 4-14, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: Several options exist for controlling the variable output impedance. Knight and Krymm suggest controlling the output impedance by controlling the gate voltage on the final stage output drivers [KK88] (See Figure 6.11). Branson suggests using exponentially sized pass gates between the signalling supplies and the output pad <ref> [Bra90] </ref>. The impedance is controlled by only allowing the appropriate subset of pass gates to turn on to achieve the desired impedance.
Reference: [Buc89] <author> Leonard Buchoff. </author> <title> Elastomeric Connectors for Land Grid Array Packages. </title> <journal> Connection Technology, </journal> <month> April </month> <year> 1989. </year>
Reference-contexts: These land grids are connected through compressional connectors to similar land grids on the PCBs. Due to the low-insertion force and high-density available from these land-grid arrays (LGAs), they have recently become an attractive option for packaging high pin-count ICs (e.g. <ref> [Buc89] </ref>). Intel, for example, has adopted the LGA package for its 80386SL microprocessor [Mal91]. We make one final addition to the LGA structure.
Reference: [CCS + 88] <author> Barbara A. Chappell, Terry I. Chappell, Stanley E. Shuster, Hermann M. Segmuller, James W. Allan, Robert L. Franch, and Phillip J. Restle. </author> <title> Fast CMOS ECL Receivers With 100-mV Worst-Case Sensitivity. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> 23(1):5967, </volume> <month> February </month> <year> 1988. </year> <month> 197 </month>
Reference-contexts: In the interest of high-speed switching, we want a receiver which has high gain for small signal deviations around the mid-point between the signalling supplies. <ref> [CCS + 88] </ref> and [KK88] introduce suitable differential receivers. Figure 6.15 shows one such receiver. The rightmost inverter pair (I1 and I2) in Figure 6.15 forms a differential receiver biased to trip when the input voltage seen by the input pad exceeds half the low-voltage supply.
Reference: [CED92] <author> Frederic Chong, Eran Egozy, and Andr e DeHon. </author> <title> Fault Tolerance and Performance of Multipath Multistage Interconnection Networks. </title> <editor> In Thomas F. Knight Jr. and John Savage, editors, </editor> <booktitle> Advanced Research in VLSI and Parallel Systems 1992, </booktitle> <pages> pages 227-242. </pages> <publisher> MIT Press, </publisher> <month> March </month> <year> 1992. </year>
Reference-contexts: After the routing structure determines which set of outputs in one stage must be connected to which set of inputs in the following stage, we randomly assign individual input-output pairs within the corresponding sets. first introduced in <ref> [CED92] </ref> and is based on the wiring scheme described in [LM89]. In practice, 39 .
Reference: [CFKA90] <author> David Chaiken, Craig Fields, Kiyoshi Kurihara, and Anant Agarwal. </author> <title> Directory-Based Cache-Coherence in Large-Scale Multiprocessors. </title> <journal> IEEE Computer, </journal> <volume> 23(6) </volume> <pages> 41-58, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: Consequently, we use simple synthetic loadings to keep simulation time manageable. We start by using uniformly distributed random destinations for our messages. We refine our model by looking at shared-memory applications studied by the MIT Alewife Project <ref> [CFKA90] </ref>. A.3.1 Modeling Shared-Memory Applications Our goal is to provide a realistic model of network utilization that can be used to compare many different networks and parameters. To keep simulation time tractable, we use a variant of uniform traffic. Our simulation sends messages to random destinations in a uniform distribution. <p> To keep simulation time tractable, we use a variant of uniform traffic. Our simulation sends messages to random destinations in a uniform distribution. However, message lengths are randomly generated according to distributions derived from specific parallel applications. These application were taken from caching studies done by the Alewife Project <ref> [CFKA90] </ref>. These studies simulate a shared memory architecture with coherent caches at each processing node. <p> the following system parameters: * Shared memory, coherent caches * Full-map directories * 16-byte cache lines * 64 nodes, corresponding to 3-stage, radix-4 networks. * Single thread * CISC instructions * 1 memory reference per instruction * Processors stall after 1 outstanding memory reference * Barrier synchronization A.3.2 Application Descriptions <ref> [CFKA90] </ref> studied four applications: SIMPLE, SPEECH, FFT, and WEATHER. SIMPLE models the hydrodynamic behavior of fluids using finite difference methods to solve the equations in two dimensions. SPEECH is the lexical decoding stage of a phonetically-based spoken language understanding system. It uses a variant of the Viterbi search algorithm.
Reference: [Cho92] <author> Frederic T. Chong. </author> <title> Performance Issues of Fault Tolerant Multistage Interconnection Networks. </title> <type> Master's thesis, </type> <institution> MIT, 545 Technology Sq., </institution> <address> Cambridge, MA 02139, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: This synthetic application and the simulations in general are described in detail in <ref> [Cho92] </ref>; most relevant details are reprinted in Appendix A. fault levels. Here latency is the average time from when a message is injected into the network until the time its reply and acknowledgment are received. <p> For the sake of these simulations we assume dilation one routing components are used in the final stage of the networks (e.g. Figure 3.11). 1 This information is reprinted with slight modification from <ref> [Cho92] </ref> 187 A.3 Network Loading In this section, we derive network loads for use with our performance simulations. We need to run a large number of simulations to obtain average performance of each network at various fault levels. Consequently, we use simple synthetic loadings to keep simulation time manageable.
Reference: [CK92] <author> Frederic T. Chong and Thomas F. Knight, Jr. </author> <title> Design and Performance of Multipath MIN Architectures. </title> <booktitle> In Symposium on Parallel Architectures and Algorithms, </booktitle> <pages> pages 286-295, </pages> <address> San Diego, California, </address> <month> June </month> <year> 1992. </year> <note> ACM. </note>
Reference-contexts: Experience indicates that most such networks perform equivalently. The testing, however, assures that one avoids the unlikely, but possible, case in which a network with poor expansion was generated. Figure 3.22 shows a network constructed with this algorithm. Hybrid Network Compromise Chong observed in <ref> [CK92] </ref> that one can achieve maximum path expansion while introducing some randomized expansion to minimize congestion. The result is a network which is a hybrid between the two described above. <p> has lost all of its input connections to the first stage of the network or all of its output connections from the final stage of the network. 3.5.5 Network Harvest Evaluation To evaluate the harvest rate of a network with faults, we use the reconfiguration algorithm suggested by Chong in <ref> [CK92] </ref>. This reconfiguration algorithm identifies all nodes with good network connectivity. The algorithm does not necessarily identify all nodes which retain full connectivity in the network as available in the harvested network.
Reference: [Com90] <author> IEEE Standards Committee. </author> <title> IEEE Standard Test Access Port and Boundary-Scan Architecture. </title> <publisher> IEEE, </publisher> <address> 345 East 47th Street, New York, NY 10017-2394, </address> <month> July </month> <year> 1990. </year> <note> IEEE Std 1149.1-1990. </note>
Reference-contexts: This section reviews the major points of the existing standard upon which we are building. The IEEE Standard Test-Access Port (TAP) <ref> [Com90] </ref> defines a serial test interface requiring four dedicated I/O pins on each component. The standard allows components to be daisy-chained 11 so that a single test path can provide access to many or all components in a system. <p> If these functions are not robust against faults, they may well be useless when actually needed and could present a liability to system integrity. 5.2 Scan-Based Testing and Reconfiguration As introduced in Section 2.2, the IEEE standard test-access port and boundary scan architecture <ref> [Com90] </ref> is emerging as an industry standard for component and board testing. Using moderate overhead, the standard allows functional testing of components and structural testing of interconnect. Additionally, the standard allows component specific registers which can be adapted for use in component configuration. <p> However, we are concerned with assuring that reasonable behavior will result even when parts of the system are not behaving properly. We give each TAP its own instruction register and bypass register. These registers behave exactly as in a standard TAP <ref> [Com90] </ref>. Differences in TAP behavior arise when multiple TAPs attempt to access the same scan registers. This would occur whenever the different TAPs attempted to load instructions that referenced the same scan paths on chip.
Reference: [Cor89] <institution> Engineering Plastics Division Hoechst Celanese Corporation. Vectra Liquid Crystal Polymer Molding Guidelines and Specifications (VC-6), </institution> <year> 1989. </year>
Reference-contexts: Each BB372 has two stubs at opposite corners which mate with the DSPGA372 alignment holes. The stubs protrude on both sides of the carrier, allowing the carrier to make positive alignment with both the attached PCB and DSPGA package. The BB372 carrier is made from Vectra Liquid Crystal Polymer <ref> [Cor89] </ref> and was fabricated by Cinch. Table 7.2 summarizes the physical dimensions. Our main disappointment with BB372 has been the handling care required.
Reference: [Cor90] <author> Rogers Corporation. </author> <title> Isocon Interconnection Features and Applications, </title> <year> 1990. </year>
Reference-contexts: Spring style connectors house shaped pieces of metal which behave as springs in a flexible carrier. When compressed between boards, the spring nature of the metal forces positive contact with the PCBs on both sides of the connector (e.g. [GPM92] <ref> [Cor90] </ref>). Shown here is a cross-sectional view of a packaging stack. Components and PCBs are sandwiched in alternating layers to form a three-dimensional stack structure of components.
Reference: [Cor91] <author> Intel Corporation. </author> <title> Paragon XP/S. Product Overview, </title> <year> 1991. </year>
Reference-contexts: Each node is composed of a processor, some memory, and a network interface. In a hardware-supported shared-memory machine, this network interface might be the cache-controller [LLG + 91] [ACD + 91]; in a message-passing machine, it would be the network message interface <ref> [Cor91] </ref> [Thi91]. Increasingly, the network interface may be tightly-integrated with the processor [D + 92] [NPA91]. We explicitly assume the network interface has multiple connections both into the network and out of the network.
Reference: [CSS + 91] <author> David E. Culler, Anurag Sah, Klaus Erik Schauser, Thorsten von Eicken, and John Wawrzynek. </author> <title> Fine-grain Parallelism with Minimal Hardware Support: A CompilerControlled Threaded Abstract Machine. </title> <booktitle> In Proceedings of the Fourth International Conference on the Architectural Support for Programming Languages and Operating Systems, </booktitle> <month> April </month> <year> 1991. </year>
Reference-contexts: Data parallel operations are limited by the rate at which processors can obtain access to the data on which they need to operate. Multithreaded ([Smi78] [Jor83] [ALKK90] [SBCvE90] <ref> [CSS + 91] </ref> [NPA92]) and dataflow ([ACM88] [AI87] [PC90]) architectures have been developed to mitigate communication latency by hiding its effects. These techniques all rely on an abundance of parallelism to provide useful processing to perform while waiting on slow communications. <p> Node latencies such as these are highly dependent on the programming model, processor, controller, and memory system in use. [NPA92] and [D + 92] describe processors which were designed to minimize these latencies. [E + 92] and <ref> [CSS + 91] </ref> describe a computational model intended to minimize these latencies.
Reference: [CYH84] <author> Chin Chi-Yuan and Kai Hwang. </author> <title> Connection Principles for Multipath Packet Switching Networks. </title> <booktitle> In 10th Annual Symposium on Computer Architecture, </booktitle> <pages> pages 99-108, </pages> <year> 1984. </year>
Reference-contexts: network i/o connections are key to avoiding a single point of failure which may sever a node completely from the interconnection network. 3.3.4 Extra-Stage, Multistage Networks When using multistage interconnection networks one can construct extra-stage networks with more switching stages than are actually required to uniquely specify a destination ([LP83], <ref> [CYH84] </ref> et. al.) (See Figures 3.10 and 3.14). The set of routing specifications that reach the same physical destination defines a class of equivalent paths.
Reference: [D + 92] <author> William J. Dally et al. </author> <title> The Message-Driven Processor: A Multicomputer Processing Node with Efficient Mechanisms. </title> <booktitle> IEEE Micro, </booktitle> <pages> pages 23-39, </pages> <month> April </month> <year> 1992. </year>
Reference-contexts: In a hardware-supported shared-memory machine, this network interface might be the cache-controller [LLG + 91] [ACD + 91]; in a message-passing machine, it would be the network message interface [Cor91] [Thi91]. Increasingly, the network interface may be tightly-integrated with the processor <ref> [D + 92] </ref> [NPA91]. We explicitly assume the network interface has multiple connections both into the network and out of the network. <p> Node latencies such as these are highly dependent on the programming model, processor, controller, and memory system in use. [NPA92] and <ref> [D + 92] </ref> describe processors which were designed to minimize these latencies. [E + 92] and [CSS + 91] describe a computational model intended to minimize these latencies. <p> If the message rate were any higher, the processors would just be stalled more often, and the network loading would not really change. Note that our analysis assumes low-latency message handling, a concept demonstrated in the J-Machine <ref> [D + 92] </ref>. If, as with many commercial and research machines, there exists a high latency for message handling, the latency induces a feedback effect which prevents full utilization of the network [Joh92].
Reference: [Dal87] <author> William J. Dally. </author> <title> A VLSI Architecture for Concurrent Data Structures. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1987. </year>
Reference-contexts: Many popular k-ary-n-cubes networks in use today set k = 2 or k = 3 to build mesh (See Figure 3.5) or cube (See Figure 3.6) structures <ref> [Dal87] </ref>. For these networks, the distances between components can be made uniformly short such that the switching latency dominates the transit latency. When constrained to three-dimensional space, larger values of k, will tend to have transit latencies which scale as W ( 3 p N).
Reference: [Dal91] <author> William J. Dally. </author> <title> Express Cubes: Improving the performance of k-ary n-cube inter-connection networks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 40(9) </volume> <pages> 1016-1023, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: Leiserson shows that properly sized fat trees can efficiently perform any communication performed by any other similarly sized network 28 [Lei85]. 3.1.7 Express Cubes Express cubes <ref> [Dal91] </ref> are a hybrid between a tree-structure and a k-ary-n-cube (See Fig- ure 3.12). By placing interchange switches periodically in a k-ary-n-cube, the switching delay can be reduced from Q ( k p N) to Q (log (N )). <p> The longest wires in many of these network will be W ( 3 p N) due to spatial constraints in three-dimensions. Requiring data to 29 Shown above is a portion of an express mesh after <ref> [Dal91] </ref>. The components labelled with an I are interchange units which allow connections to be routed along express channels, thereby bypassing intermediate switching nodes.
Reference: [DeH90] <author> Andr e DeHon. </author> <title> Fat-Tree Routing For Transit. </title> <type> AI Technical Report 1224, </type> <institution> MIT Artificial Intelligence Laboratory, </institution> <month> April </month> <year> 1990. </year> <month> 198 </month>
Reference-contexts: Figure 3.33 shows a diagram of such a leaf cluster. This hybrid structure was introduced in <ref> [DeH90] </ref> and is developed in more detail there. 3.6 Flexibility In Section 2.8, we raised some concerns about how well a network topology can be adapted to solve particular applications. <p> Up Routing Stage 16 64 Final Down Routing Stage 16 64 Middle Down Routing Stage 12 48 Initial Down Routing Stage 8 32 Table 7.4: Unit Tree Component Summary 7.5.4 Unit Tree Examples For the sake of illustration, let us consider two specific unit tree configurations introduced in [DeH91] and <ref> [DeH90] </ref>. Here, we denote each unit tree as U T r p fic l . Both of these unit trees use the RN1 routing component, a radix-4, dilation-2 routing component (See Chapter 8). U T 64fi2 has c l = 2 and, consequently, c r = 32.
Reference: [DeH91] <author> Andr e DeHon. </author> <title> Practical Schemes for Fat-Tree Network Construction. </title> <editor> In Carlo H. S equin, editor, </editor> <booktitle> Advanced Research in VLSI: International Conference 1991. </booktitle> <publisher> MIT Press, </publisher> <month> March </month> <year> 1991. </year>
Reference-contexts: T 64fi8 Up Routing Stage 16 64 Final Down Routing Stage 16 64 Middle Down Routing Stage 12 48 Initial Down Routing Stage 8 32 Table 7.4: Unit Tree Component Summary 7.5.4 Unit Tree Examples For the sake of illustration, let us consider two specific unit tree configurations introduced in <ref> [DeH91] </ref> and [DeH90]. Here, we denote each unit tree as U T r p fic l . Both of these unit trees use the RN1 routing component, a radix-4, dilation-2 routing component (See Chapter 8). U T 64fi2 has c l = 2 and, consequently, c r = 32.
Reference: [DeH92] <author> Andr e DeHon. </author> <title> Scan-Based Testability for Fault-tolerant Architectures. </title> <editor> In Duncan M. Walker and Fabrizio Lombardi, editors, </editor> <booktitle> Proceedings of the IEEE International Workshop on Defect and Fault Tolerance in VLSI Systems, </booktitle> <pages> pages 90-99. </pages> <publisher> IEEE, IEEE Computer Society Press, </publisher> <year> 1992. </year>
Reference-contexts: It is also necessary to determine which units need physical replacement when the system is scheduled for manual repair. Having an estimate of the faults in the network is also necessary to identify when isolation occurs or 1 Portions of this discussion were first presented as <ref> [DeH92] </ref> 91 how likely isolation will occur when new faults arise. We have already argued that reconfiguration allows improved performance in the presence of faults. Reconfiguration is also a key mechanism for facilitating on-line repair.
Reference: [Div89] <institution> Cinch Connector Division. CIN::APSE Product Brochure, </institution> <year> 1989. </year>
Reference-contexts: Button balls are composed of 25 spun gold wire compressed into small diameter cylindrical holes (e.g. 20 mil diameter by 40 mil high) in a plastic carrier. They provide multiple points of contact between the PCB lands on each side of the ball when compressed (e.g. <ref> [Div89] </ref> [Smo85]). Spring style connectors house shaped pieces of metal which behave as springs in a flexible carrier. When compressed between boards, the spring nature of the metal forces positive contact with the PCBs on both sides of the connector (e.g. [GPM92] [Cor90]).
Reference: [DKS93] <author> Andr e DeHon, Thomas F. Knight Jr., and Thomas Simon. </author> <title> Automatic Impedance Control. </title> <booktitle> In ISSCC Digest of Technical Papers, </booktitle> <pages> pages 164-165. </pages> <publisher> IEEE, </publisher> <month> February </month> <year> 1993. </year>
Reference-contexts: DeHon, Knight, and Simon consider a variant that places the impedance control transistors and the gating transistor in series between the signal supply and the output pad <ref> [DKS93] </ref> (See out of the critical signal path through the output pad. Unlike the other two digitally-controlled impedance schemes, the impedance setting is controlled separately from the drive enables and held static during operation. <p> The output driver layout becomes smaller and simpler since the final driver is built entirely out of N-devices. Output drivers that rely on both P-devices and N-devices require guard-rings between the PMOS and NMOS devices to protect against latch-up. implemented in CMOS26, Hewlett Packard's 0.8 effective gate-length process <ref> [DKS93] </ref>. This output driver exhibits a 2 ns output latency and 1 ns rise/fall times. The fabricated driver was capable of matching external impedances between 30W and 100W. <p> As the pad input voltage seen by I2 varies away from the half voltage level, 116 Shown above is a digital controlled-impedance driver after <ref> [DKS93] </ref>. The digital values on pu impedance and pd impedance enable the parallel impedance control transistors. Driver transistors are placed in series between the impedance control networks and the output pad. The desired signalling voltage is connected to the pad by enabling the appropriate drive transistor. <p> In order for I3 to rectify properly, it should be sized so that its midpoint voltage tracks the midpoint voltage of I1 and I2 with process variation. in CMOS26, Hewlett Packard's 0.8 effective gate-length process <ref> [DKS93] </ref>. The input latency through this receiver is approximately 1 ns. The total i/o latency, t io , for this receiver and the driver described in the previous section is 3 ns. 117 Shown here is a sized CMOS driver circuit from [DKS93]. All widths are shown in microns. <p> in CMOS26, Hewlett Packard's 0.8 effective gate-length process <ref> [DKS93] </ref>. The input latency through this receiver is approximately 1 ns. The total i/o latency, t io , for this receiver and the driver described in the previous section is 3 ns. 117 Shown here is a sized CMOS driver circuit from [DKS93]. All widths are shown in microns. This driver was designed for CMOS26, Hewlett Packard's 0.8 effective gate-length process. 6.7 Bidirectional Operation The drivers and receiver shown in the previous sections can be combined to allow half-duplex, bidirectional signalling, as needed for the routing components described in Chapter 4. <p> This pulse ripples through the inverter chain enabling each sample register to store the digital input value two inverter delays apart. The digital input value to the sample register comes from the pad's receiver. 119 Shown here is the differential receiver from <ref> [DKS93] </ref>. All widths are shown in microns. This driver was designed for CMOS26, Hewlett Packard's 0.8 effective gate-length process. Grounded-P inverters are used in the differential receiver rather than complementary CMOS inverters as in Figure 6.15. <p> The sample register can be read under scan control through the TAP to provide a digital, discrete-time profile of the voltage on the output pad. Figure 6.19 shows the combined i/o pad circuitry from <ref> [DKS93] </ref>. <p> However, since processing and operating temperature variation affect the timing of the input and output circuitry, the number of bits in the sample register should be chosen such that the window spans all potential timing variations. 6.8.5 Sample Results The test component described in <ref> [DKS93] </ref> was configured with a 16-bit sample register and six bits of both pull-up and pull-down impedance control.
Reference: [DS86] <author> William J. Dally and Charles L. Sietz. </author> <title> The Torus Routing Chip, </title> <booktitle> volume 1 of Distributed Computing, </booktitle> <pages> pages 187-196. </pages> <publisher> Springer-Verlag, </publisher> <year> 1986. </year>
Reference-contexts: Toroidal k-ary-n-cubes can be used to cut the worst case switching latency in each dimension in half and avoid hot-spot problems in simple k-ary-n-cubes (See Figure 3.7) <ref> [DS86] </ref>. 26 3.1.5 Flat Multistage Networks A multistage network distributes each hypercube routing element spatially so that fixed-degree switches can be used for routing. Like the hypercube, routing can occur in a distributed manner requiring only log r (N ) stages between any pair of nodes in the network.
Reference: [DZ83] <author> J. D. Day and J. Zimmermann. </author> <title> The OSI Reference Model. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 71 </volume> <pages> 1334-1340, </pages> <month> December </month> <year> 1983. </year>
Reference-contexts: When a connection is blocked due to contention or a data stream is corrupted, the source endpoint retries the connection. 4.3 MRP in the Context of the ISO OSI Reference Model MRP fits into a layered protocol scheme, such as the ISO OSI Reference Model <ref> [DZ83] </ref> at the data-link layer (See Figure 4.1). That is, MRP itself is independent of the underlying physical layer which takes care of raw bit transmissions. MRP is, thus independent of the electrical and mechanical aspects of the interconnection.
Reference: [E + 92] <author> Thorsten von Eicken et al. </author> <title> Active Messages: a Mechanism for Integrated Communication and Computation. </title> <booktitle> In Proceedings of the 19th Annual Symposium on Computer Architecture, </booktitle> <address> Queensland, Australia, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: Node latencies such as these are highly dependent on the programming model, processor, controller, and memory system in use. [NPA92] and [D + 92] describe processors which were designed to minimize these latencies. <ref> [E + 92] </ref> and [CSS + 91] describe a computational model intended to minimize these latencies. <p> The read operation is the only primitive message which receives data along with its reply message. destination processor to service. The destination processor dequeues each message and invokes the function at the specified address with the associated data. <ref> [E + 92] </ref> calls this kind of low-overhead, remote code invocation an Active Message. This primitive exports the basic functionality of the network to the software level where custom message handlers can be crafted in software for each application or run-time system. primitive network operations.
Reference: [Fuj92] <author> Fujipoly. </author> <title> Connector W Series, </title> <year> 1992. </year>
Reference-contexts: As a result, the connector will deteriorate when handled improperly. With proper equipment, the buttons can be restuffed, so repair is possible. Once inserted into a system and compressed, the buttons remain situated during normal use. Initial experiments with a conductive elastomer from Fujipoly <ref> [Fuj92] </ref> suggest that elastomeric technology is a viable alternative for this application. Elastomeric connectors are more robust to human handling. The elastomer provides a sheet of anisotropic contacts such that no specialization is required to match the pad geometry of the package or PCB.
Reference: [GC82] <author> C. Clark Jr. George and J. B. Cain. </author> <title> Error-Correction Coding for Digital Communications. </title> <publisher> Plenum Press, </publisher> <address> New York, </address> <year> 1982. </year>
Reference-contexts: The non-legal instruction encodings all get treated as bypass instructions so that they cannot interfere with the normal operation of the component. Error correcting and detecting codes in common use for data storage and transmission <ref> [GC82] </ref> [PW72] are common examples of sparse encodings. In this application, we are concerned with detecting errors and preventing them from corrupting non-faulty operation, not correcting errors. If, for 94 Each scan path has its own instruction register, bypass register, and TAP controller.
Reference: [GK92] <author> Thaddeus J. Gabara and Scott C. Knauer. </author> <title> Digitally Adjustable Resistors in CMOS for High-Performance Applications. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> 27(8):11761185, </volume> <month> August </month> <year> 1992. </year>
Reference-contexts: Gabara and Knauer suggest a scheme which is virtually equivalent using a set of exponentially sized transistors in parallel in each of the pull-up and pull-down networks to allow digital control of the output impedance <ref> [GK92] </ref> (See Figure 6.12). DeHon, Knight, and Simon consider a variant that places the impedance control transistors and the gating transistor in series between the signal supply and the output pad [DKS93] (See out of the critical signal path through the output pad. <p> This output driver exhibits a 2 ns output latency and 1 ns rise/fall times. The fabricated driver was capable of matching external impedances between 30W and 100W. In total, the driver consumes 115 Shown above is a digitally controlled variable resistance driver from <ref> [GK92] </ref> ([GK92] actually uses PMOS devices in both resistance networks since it focuses on operation in a different voltage region). The digital values on pu impedance and pd impedance determine which transistors are enabled whenever the driver drives a high or low signal, respectively.
Reference: [GL85] <author> Ronald I. Greenberg and Charles E. Leiserson. </author> <title> Randomized Routing on Fat-Trees. </title> <booktitle> In IEEE 26th Annual Symposium on the Foundations of Computer Science. IEEE, </booktitle> <month> November </month> <year> 1985. </year>
Reference-contexts: This successive subdivision can be easily seen in the network shown in Figure 3.9. 3.1.6 Tree Based Networks Properly constructed, a tree-based, multistage network avoid the major liabilities associated with the standard multistage networks. Specifically, we consider fat-tree networks as described in [Lei85] and <ref> [GL85] </ref> and shown in Figure 1.2. The switching delay remains O (log (N )) as 27 with hypercubes and multistage networks. Routing may occur in a distributed fashion. Unlike the multistage networks described above, the tree-based networks do allow locality exploitation. <p> Leiserson shows that, when the rate of bandwidth growth in the fat-tree is chosen properly, fat-trees can be volume universal. That is, a properly constructed volume Q (V ) fat-tree network can simulate any volume Q (V ) network in polylogarthmic time [Lei85] [Lei89] <ref> [GL85] </ref>. The key observation in demonstrating the universality of various fat-tree structures, is that the physical world places constraints on the ratio between the volume of a region and the wire channel capacity, and hence bandwidth, which can efficiently enter or leave that volume.
Reference: [GM82] <author> P. Goel and M. T. McMahon. </author> <title> Electronic Chip-In-Place Test. </title> <booktitle> In Proceedings 1982 International Test Conference, </booktitle> <pages> pages 83-90. </pages> <publisher> IEEE, </publisher> <year> 1982. </year>
Reference-contexts: Using the same serial scan path, the value of every receiver can be sampled and recovered. This mechanism allows the TAP to verify the complete connectivity of the components in the system. All connectivity faults, shorted wires, stuck drivers or receivers, or open-circuits can be identified in this manner <ref> [GM82] </ref> [Wag87]. The scan path allows data to be driven into a component independent of the values present on the component's external I/O pins. The resultant values generated by the component in response to the driven data can similarly be sampled and recovered via the serial scan path.
Reference: [GPM92] <author> Dimitry Grabbe, Ryszard Prypotniewicz, and Henri Merkelo. </author> <title> AMPSTAR Connector Family, </title> <year> 1992. </year>
Reference-contexts: Spring style connectors house shaped pieces of metal which behave as springs in a flexible carrier. When compressed between boards, the spring nature of the metal forces positive contact with the PCBs on both sides of the connector (e.g. <ref> [GPM92] </ref> [Cor90]). Shown here is a cross-sectional view of a packaging stack. Components and PCBs are sandwiched in alternating layers to form a three-dimensional stack structure of components.
Reference: [HLwn] <author> Johan Hastad and Tom Leighton. </author> <title> Analysis of Backoff Protocols for Multiple Access Channels. In Unknown. Unknown, </title> <publisher> Unknown. </publisher>
Reference-contexts: Since the path on a retransmission may be very different from the path just taken, it may be beneficial to immediately retry the failed connection even when the failure was due to blocking. While much work has been done on backoff and retry strategies for bus based systems (e.g. <ref> [HLwn] </ref>), retransmission policies for this class of networks remain an open area of research. If the network continues to retain complete connectivity between all communicating endpoints, the source will eventually be able to deliver its message to its destination.
Reference: [Hui90] <author> Joseph Y. Hui. </author> <title> Switching and Traffic Theory for Integrated Broadband Networks. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, </address> <year> 1990. </year> <month> 199 </month>
Reference-contexts: Each additional path through the network requires that we construct a complete copy of the original network. Multiple, multistage style networks are used in the telecommunications field to minimize contention and increase available bandwidth over single-path networks <ref> [Hui90] </ref>. Figure 3.13 shows a 2-replicated bidelta network. Replicated networks do have one advantage over pure indirect routing schemes including most cube style networks. With multiple networks, each node does have multiple connections both to and from the network.
Reference: [Inc90] <institution> AMP Incorporated. Conductive Carbon Fiber Connectors Product Announcement, </institution> <month> July </month> <year> 1990. </year> <pages> Catalog 90-749. </pages>
Reference-contexts: The conductors are arranged to conduct only along one axis. In this way, they provide interconnect between conductors placed on opposite sides of the connector and lined up along the conduction axis. The elastomer will compress under pressure allowing the conductors to make positive electrical contact (e.g. <ref> [Inc90] </ref> [Pol90] [Tec88] [ND90]). Button balls are composed of 25 spun gold wire compressed into small diameter cylindrical holes (e.g. 20 mil diameter by 40 mil high) in a plastic carrier.
Reference: [Int89] <institution> Intel Corporation, </institution> <address> Literature Sales, P.O. Box 58130, Santa Clara, CA 95052-8130. </address> <note> 80960CA User's Manual, </note> <year> 1989. </year>
Reference-contexts: Since RN1 is a radix-4 routing component, the network is comprised of log 4 (64) = 3 routing stages. of a RISC microprocessor (e.g. Intel's 80960CA [MB88] <ref> [Int89] </ref>), fast, static memory, network interfaces, and support logic. Four logical network interfaces service the two connection into and the two connection out of the network. The processor performs computation, initiates network communications, and services non-primitive network operations.
Reference: [Joh88] <author> Mark G. Johnson. </author> <title> A Variable Delay Line PLL for CPU-Coprocessor Synchronization. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> 23(5) </volume> <pages> 1218-1223, </pages> <month> October </month> <year> 1988. </year>
Reference-contexts: For finer control, of course, a voltage controlled delay could be used instead of, or in addition to, a variable delay multiplexor (See Figure 6.28). Figure 6.29 130 Shown here is a voltage controlled delay line (VCDL) after [Baz85] and <ref> [Joh88] </ref>. Varying VCTRL effectively controls the amount of capacitive load seen by the output of each inverter stage and hence the delay through each inverter stage.
Reference: [Joh92] <author> Kirk L. Johnson. </author> <title> The Impact of Communication Locality on Large-Scale Multiprocessor Performance. </title> <booktitle> In Proceedings of the 19th Annual International Symposium on Computer Architecture, </booktitle> <address> Queensland, Australia, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: Locality optimizations yield negligible rewards when the transmission latency benefit is small compared to the latency associated with launching and handling the message. Johnson demonstrated upper bounds on the benefits of locality exploitation using a simple mathematical model <ref> [Joh92] </ref>. For a specific system ([ACD + 91]), he shows that even for machines as large as 1000 processors, the upper bound on the performance benefit due to locality exploitation is a factor of two. 2.4.3 Node Handling Latency This document concentrates on designing the network for a high-performance multiprocessor. <p> Note that our analysis assumes low-latency message handling, a concept demonstrated in the J-Machine [D + 92]. If, as with many commercial and research machines, there exists a high latency for message handling, the latency induces a feedback effect which prevents full utilization of the network <ref> [Joh92] </ref>. Although cache miss and message locality numbers are open to debate, we observe that the technological trends of multiple-issue processors and wider cache lines will only increase demands on the network.
Reference: [Jor83] <author> J. F. Jordan. </author> <title> Performance Measurement on HEP A pipelined MIMD Computer. </title> <booktitle> In Proceedings of the 19th Annual International Symposium on Computer Architecture. IEEE, </booktitle> <month> June </month> <year> 1983. </year>
Reference-contexts: In dataflow programs, latency determines the delay between the computation of a data value and the time when the value can actually be used. Data parallel operations are limited by the rate at which processors can obtain access to the data on which they need to operate. Multithreaded ([Smi78] <ref> [Jor83] </ref> [ALKK90] [SBCvE90] [CSS + 91] [NPA92]) and dataflow ([ACM88] [AI87] [PC90]) architectures have been developed to mitigate communication latency by hiding its effects. These techniques all rely on an abundance of parallelism to provide useful processing to perform while waiting on slow communications.
Reference: [Kah91] <author> Nabil Kahale. </author> <title> Better Expansion for Ramanujan Graphs. </title> <booktitle> In 32nd Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 398-404. </pages> <publisher> IEEE, </publisher> <month> October </month> <year> 1991. </year>
Reference-contexts: As introduced above, there are no known deterministic algorithms for achieving an optimal expansion. In practice, randomized wiring schemes produce higher expansion than any known deterministic methods. <ref> [Kah91] </ref> presents some of the most recent work on the deterministic construction of expansion graphs. [Upf89] and [LM89] show that randomly wired multibutterflies have good expansion properties. The high expansion generally means there will be less congestion in the network.
Reference: [KK88] <author> Thomas F. Knight Jr. and Alexander Krymm. </author> <title> A Self-Terminating Low-Voltage Swing CMOS Output Driver. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> 23(2), </volume> <month> April </month> <year> 1988. </year>
Reference-contexts: Logically, this configuration is shown in Figure 6.10. Several options exist for controlling the variable output impedance. Knight and Krymm suggest controlling the output impedance by controlling the gate voltage on the final stage output drivers <ref> [KK88] </ref> (See Figure 6.11). Branson suggests using exponentially sized pass gates between the signalling supplies and the output pad [Bra90]. The impedance is controlled by only allowing the appropriate subset of pass gates to turn on to achieve the desired impedance. <p> In all of these driver schemes, when the high signalling supply is a device threshold drop or 114 Shown above is a voltage-controlled controlled-impedance CMOS driver from <ref> [KK88] </ref>. By varying V control below the logic supply voltage, one varies the gate voltage applied to the final driver when it is enabled. <p> In the interest of high-speed switching, we want a receiver which has high gain for small signal deviations around the mid-point between the signalling supplies. [CCS + 88] and <ref> [KK88] </ref> introduce suitable differential receivers. Figure 6.15 shows one such receiver. The rightmost inverter pair (I1 and I2) in Figure 6.15 forms a differential receiver biased to trip when the input voltage seen by the input pad exceeds half the low-voltage supply. I1 and I2 are identical inverters. <p> When it is necessary to turn the connection around to reverse the flow of data in the network, the i/o pads can swap roles as driver and receiver. 118 Shown above is a receiver after <ref> [KK88] </ref>. Inverters I1 and I2 are identical devices (W P 1 = W P 2, W N 1 = W N 2). I1 biases I2 into its high-gain region.
Reference: [KLS90] <author> Kathleen Knobe, Joan D. Lukas, and Guy L. Steele, Jr. </author> <title> Data Optimization: Allocation of Arrays to Reduce Communication on SIMD Machines. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 8 </volume> <pages> 102-118, </pages> <year> 1990. </year>
Reference-contexts: The exploitation of network locality to minimize the effective communication latency in a multiprocessor system is an active area of current research <ref> [KLS90] </ref> [ACD + 91] [Wal92]. Exploiting network locality is of particular interest when designing scalable computer systems since the latency of the interconnect will necessarily increase with network size.
Reference: [KMZ79] <author> Bernd K onemann, Joachim Mucha, and G unther Zwiehoff. </author> <title> Built-In Logic Block Observation Techniques. </title> <booktitle> In Proceedings 1979 International Test Conference, </booktitle> <pages> pages 37-41. </pages> <publisher> IEEE, </publisher> <year> 1979. </year>
Reference-contexts: These instructions provide uniform access to internal-component scan-paths. Such internal paths are commonly used to allow a small number of test-patterns to achieve high-fault coverage in components with significant internal state. Other common additions are configuration registers and Built-In-Self-Test (BIST) facilities <ref> [KMZ79] </ref> [LeB84] [Lak86]. 2.3 Effects of Latency 1 For the sake of understanding the role of latency in multiprocessor communications, we consider a very simple model of parallel computation. To solve our problem we need to execute a total number of operations, c.
Reference: [KR89] <author> Vijay P. Kumar and Andrew L. Reibman. </author> <title> Failure Dependent Performance Analysis of a Fault-Tolerant Multistage Interconnection Network. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 38(12) </volume> <pages> 1703-1713, </pages> <month> December </month> <year> 1989. </year>
Reference-contexts: It is important to eliminate simulation skew because it can mask the effects of localized network degradation. Analytic models suggest that faults and congestion may severely affect the performance observed by specific destination nodes while leaving others largely unaffected <ref> [KR89] </ref>. Without synchronization, such localized degradation would be lost in the average I/O bandwidth utilization. Modeling synchronization, however, forces all processors to wait for those falling behind, resulting in a more realistic decrease in I/O bandwidth utilization. A.3.5 The FLAT24 Load We also simulate a uniform message distribution, FLAT24.
Reference: [KS86] <author> Clyde P. Kruskal and Marc Snir. </author> <title> A Unified Theory of Interconnection Network Structure. </title> <booktitle> In Theoretical Computer Science, </booktitle> <pages> pages 75-94, </pages> <year> 1986. </year>
Reference-contexts: The best-case packaging volume grows as Q (N 3 2 ) and the transit latency grows as Q ( p N ) like the hypercube [LR86]. Quite a variety of networks can be classified as multistage networks including: Butterfly networks, Banyan networks, Bidelta networks <ref> [KS86] </ref>, Benes networks, and Multibutterfly networks. Figures 3.8 through 3.11 show some popular multistage networks. Each stage in these networks routes by successively subdividing the set of possible destinations into a number of equivalence classes equal to the radix of the routing components. For example, consider a radix-2 network.
Reference: [Lak86] <author> Ron Lake. </author> <title> A Fast 20K Gate Array with On-Chip Test System. </title> <booktitle> VLSI Systems Design, </booktitle> <volume> 7(6) </volume> <pages> 46-55, </pages> <month> June </month> <year> 1986. </year>
Reference-contexts: These instructions provide uniform access to internal-component scan-paths. Such internal paths are commonly used to allow a small number of test-patterns to achieve high-fault coverage in components with significant internal state. Other common additions are configuration registers and Built-In-Self-Test (BIST) facilities [KMZ79] [LeB84] <ref> [Lak86] </ref>. 2.3 Effects of Latency 1 For the sake of understanding the role of latency in multiprocessor communications, we consider a very simple model of parallel computation. To solve our problem we need to execute a total number of operations, c.
Reference: [LeB84] <author> Johnny J. LeBlanc. LOCST: </author> <title> A Built-In Self-Test Technique. </title> <booktitle> IEEE Design and Test, </booktitle> <pages> pages 45-52, </pages> <month> November </month> <year> 1984. </year>
Reference-contexts: These instructions provide uniform access to internal-component scan-paths. Such internal paths are commonly used to allow a small number of test-patterns to achieve high-fault coverage in components with significant internal state. Other common additions are configuration registers and Built-In-Self-Test (BIST) facilities [KMZ79] <ref> [LeB84] </ref> [Lak86]. 2.3 Effects of Latency 1 For the sake of understanding the role of latency in multiprocessor communications, we consider a very simple model of parallel computation. To solve our problem we need to execute a total number of operations, c.
Reference: [Lei85] <author> Charles E. Leiserson. Fat-Trees: </author> <title> Universal Networks for Hardware Efficient Supercomputing. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-34(10):892-901, </volume> <month> October </month> <year> 1985. </year>
Reference-contexts: To simultaneously optimize these characteristics, we utilize multipath, multistage interconnection networks based on several key ideas from the theoretical community including multibutterflies [Upf89] [LM92] and fat trees <ref> [Lei85] </ref>. Using multibutterfly (See Figure 1.1) and fat-tree networks (See Figure 1.2), we minimize the number of routing switches which must be traversed in the network between any pair of nodes. <p> This successive subdivision can be easily seen in the network shown in Figure 3.9. 3.1.6 Tree Based Networks Properly constructed, a tree-based, multistage network avoid the major liabilities associated with the standard multistage networks. Specifically, we consider fat-tree networks as described in <ref> [Lei85] </ref> and [GL85] and shown in Figure 1.2. The switching delay remains O (log (N )) as 27 with hypercubes and multistage networks. Routing may occur in a distributed fashion. Unlike the multistage networks described above, the tree-based networks do allow locality exploitation. <p> Leiserson shows that properly sized fat trees can efficiently perform any communication performed by any other similarly sized network 28 <ref> [Lei85] </ref>. 3.1.7 Express Cubes Express cubes [Dal91] are a hybrid between a tree-structure and a k-ary-n-cube (See Fig- ure 3.12). By placing interchange switches periodically in a k-ary-n-cube, the switching delay can be reduced from Q ( k p N) to Q (log (N )). <p> Leiserson shows that, when the rate of bandwidth growth in the fat-tree is chosen properly, fat-trees can be volume universal. That is, a properly constructed volume Q (V ) fat-tree network can simulate any volume Q (V ) network in polylogarthmic time <ref> [Lei85] </ref> [Lei89] [GL85]. The key observation in demonstrating the universality of various fat-tree structures, is that the physical world places constraints on the ratio between the volume of a region and the wire channel capacity, and hence bandwidth, which can efficiently enter or leave that volume.
Reference: [Lei89] <author> Charles E. Leiserson. </author> <title> VLSI Theory and Parallel Supercomputing. MIT/LCS/TM 402, </title> <publisher> MIT, </publisher> <address> 545 Technology Sq., Cambridge, MA 02139, </address> <month> May </month> <year> 1989. </year> <note> Also appears as an invited presentation at the 1989 Caltech Decennial VLSI Conference. 200 </note>
Reference-contexts: Leiserson shows that, when the rate of bandwidth growth in the fat-tree is chosen properly, fat-trees can be volume universal. That is, a properly constructed volume Q (V ) fat-tree network can simulate any volume Q (V ) network in polylogarthmic time [Lei85] <ref> [Lei89] </ref> [GL85]. The key observation in demonstrating the universality of various fat-tree structures, is that the physical world places constraints on the ratio between the volume of a region and the wire channel capacity, and hence bandwidth, which can efficiently enter or leave that volume.
Reference: [LHM + 89] <author> Anthony L. Lentine, H. Scott Hinton, David A. B. Miller, Jill E. Henry, J. E. Cunning-ham, and Leo M. F. Chirovsky. </author> <title> Symmertric Self-Electrooptic Effect Device: Optical Set-Reset Latch, Differential Logic Gate, and Differential Modulator/Detector. </title> <journal> IEEE Journal of Quantum Electronics, </journal> <volume> 25(8) </volume> <pages> 1928-1936, </pages> <month> August </month> <year> 1989. </year>
Reference-contexts: Even assuming 100% power effeciency, modern optical modulator/detectors have at least an order of magnitude more i/o latency, t io , than purely electrical i/o pads (e.g. 40 ns versus 3 ns) at comparable power levels <ref> [LHM + 89] </ref>. Since optical detection latency is inversely proportional to the incident power level, the optical conversion would require an order of magnitude greater power than the electrical pads to make the optical i/o latency comparable to electrical i/o latency.
Reference: [LLG + 91] <author> Daniel Lenoski, James Laudon, Kourosh Gharachorloo, Wolf-Dietrich Weber, Anoop Gupta, and John Hennessy. </author> <title> Overview and Status of the Stanford DASH Multiprocessor. In Norihisa Suzuki, editor, </title> <booktitle> Proceedings of the International Symposium on Shared Memory Multiprocessing, </booktitle> <pages> pages 102-108. </pages> <booktitle> Information Processing Society of Japan, </booktitle> <month> April </month> <year> 1991. </year>
Reference-contexts: Each node is composed of a processor, some memory, and a network interface. In a hardware-supported shared-memory machine, this network interface might be the cache-controller <ref> [LLG + 91] </ref> [ACD + 91]; in a message-passing machine, it would be the network message interface [Cor91] [Thi91]. Increasingly, the network interface may be tightly-integrated with the processor [D + 92] [NPA91].
Reference: [LM89] <author> Tom Leighton and Bruce Maggs. </author> <title> Expanders Might Be Practical: Fast Algorithms for Routing Around Faults on Multibutterflies. </title> <booktitle> In IEEE 30th Annual Symposium on Foundations of Computer Science, </booktitle> <year> 1989. </year>
Reference-contexts: a result, there will generally be less contention for connections through the first stage of routers in the latter wiring than in the former. 38 Leighton and Maggs introduced ff-fi expansion to formalize the desirable expansion properties as they pertain to groups of nodes which may wish to communicate simultaneously <ref> [LM89] </ref>. Informally, ff-fi expansion is a metric of the degree to which any subset of components in one stage will fan out into the next stage. <p> As introduced above, there are no known deterministic algorithms for achieving an optimal expansion. In practice, randomized wiring schemes produce higher expansion than any known deterministic methods. [Kah91] presents some of the most recent work on the deterministic construction of expansion graphs. [Upf89] and <ref> [LM89] </ref> show that randomly wired multibutterflies have good expansion properties. The high expansion generally means there will be less congestion in the network. Additionally, Leighton and Maggs show that after k faults have occurred on a N node machine, it is always possible to harvest N O (k) nodes [LM89]. <p> and <ref> [LM89] </ref> show that randomly wired multibutterflies have good expansion properties. The high expansion generally means there will be less congestion in the network. Additionally, Leighton and Maggs show that after k faults have occurred on a N node machine, it is always possible to harvest N O (k) nodes [LM89]. As introduced in Section 3.1.5, multistage networks operate by successively subdividing the set of potential destinations at each stage. All the inputs to routing components in the same equivalence class at some intermediate stage in the network, are logically equivalent. <p> After the routing structure determines which set of outputs in one stage must be connected to which set of inputs in the following stage, we randomly assign individual input-output pairs within the corresponding sets. first introduced in [CED92] and is based on the wiring scheme described in <ref> [LM89] </ref>. In practice, 39 .
Reference: [LM92] <author> Tom Leighton and Bruce Maggs. </author> <title> Fast Algorithms for Routing Around Faults in Multibutterflies and Randomly-Wired Splitter Networks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 41(5) </volume> <pages> 1-10, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: To simultaneously optimize these characteristics, we utilize multipath, multistage interconnection networks based on several key ideas from the theoretical community including multibutterflies [Upf89] <ref> [LM92] </ref> and fat trees [Lei85]. Using multibutterfly (See Figure 1.1) and fat-tree networks (See Figure 1.2), we minimize the number of routing switches which must be traversed in the network between any pair of nodes. <p> To aid the routing of messages, each component will have a pin dedicated to calculating flow control information according to the following blocking criterion taken from Leighton and Maggs in <ref> [LM92] </ref>. A router is blocked if it does not have at least one unused, operational output port in each logical direction which leads to a router which is not blocked.
Reference: [LP83] <author> Duncan Lawrie and Krishnan Padmanabhan. </author> <title> A Class of Redundant Path Multistage Interconnection Networks. </title> <journal> IEEE Tr. on Computers, </journal> <volume> C-32(12):1099-1108, </volume> <month> December </month> <year> 1983. </year>
Reference: [LR86] <author> Frank T. Leighton and Arnold L. Rosenberg. </author> <title> Three-Dimensional Circuit Layouts. </title> <journal> SIAM Journal on Computing, </journal> <volume> 15(3) </volume> <pages> 793-813, </pages> <month> August </month> <year> 1986. </year>
Reference-contexts: This is not practical for several reasons. We cannot build very large networks with bounded pin-out components, and a different component size is needed for each different network size. Using techniques from [Tho80] and <ref> [LR86] </ref>, we find the interwiring resources will grow as Q (N 3 ). Wiring constraints alone require that the best packaging volume grows as Q (N 3 ), making, in the best case, the wiring distances, d, grow as Q (N ). <p> Additionally, when implemented in three-dimensional space, the interconnection requirements cause the machine volume to grow as Q (N 3 2 ). This result is also derivable from the techinques presented in [Tho80] and <ref> [LR86] </ref> by considering the number of wires which must cross through the middle of the machine 24 Shown above is a 16 processor hypercube. (Drawing by Frederic Chong) in any decomposition. <p> The number of switches required by a multistage network grows as O (N log (N )). The best-case packaging volume grows as Q (N 3 2 ) and the transit latency grows as Q ( p N ) like the hypercube <ref> [LR86] </ref>. Quite a variety of networks can be classified as multistage networks including: Butterfly networks, Banyan networks, Bidelta networks [KS86], Benes networks, and Multibutterfly networks. Figures 3.8 through 3.11 show some popular multistage networks.
Reference: [Mal91] <editor> David Maliniak. Pinless Land-Grid Array Socket Houses Intel's 80386SL Microprocessor. </editor> <booktitle> Electronic Design, </booktitle> <month> March 28 </month> <year> 1991. </year>
Reference-contexts: Due to the low-insertion force and high-density available from these land-grid arrays (LGAs), they have recently become an attractive option for packaging high pin-count ICs (e.g. [Buc89]). Intel, for example, has adopted the LGA package for its 80386SL microprocessor <ref> [Mal91] </ref>. We make one final addition to the LGA structure. Rather than placing the land grid only on 141 the bottom side of the package, we place the land-grid array on both sides of the IC package and, optionally, provide continuity through the package between the top and bottom pads.
Reference: [MB88] <author> Glenford J. Myers and David L. Budde. </author> <title> The 80960 Microprocessor Architecture. </title> <publisher> Wiley-Interscience, </publisher> <year> 1988. </year>
Reference-contexts: Since RN1 is a radix-4 routing component, the network is comprised of log 4 (64) = 3 routing stages. of a RISC microprocessor (e.g. Intel's 80960CA <ref> [MB88] </ref> [Int89]), fast, static memory, network interfaces, and support logic. Four logical network interfaces service the two connection into and the two connection out of the network. The processor performs computation, initiates network communications, and services non-primitive network operations.
Reference: [MDK91] <author> Henry Minsky, Andr e DeHon, and Thomas F. Knight Jr. RN1: </author> <title> Low-Latency, Dilated, Crossbar Router. In Hot Chips Symposium III, </title> <year> 1991. </year>
Reference-contexts: At present, much work is still needed on efficient conversion between electrical and optical signals and emitter-detector alignment. 160 Part III Case Studies 161 8. RN1 RN1 is a circuit-switched, crossbar routing element developed in the MIT Transit Project <ref> [MDK91] </ref>.
Reference: [Mil91] <author> David Miller. </author> <booktitle> International Trends in Optics, chapter 2, </booktitle> <pages> pages 13-23. </pages> <publisher> Academic Press, Inc., </publisher> <year> 1991. </year>
Reference-contexts: Recent work in optics promises to integrate electrical and optical processing so that we will be able to build optical conversions into our primitive routing elements <ref> [Mil91] </ref>. Since photons do not interfere with each other, free- space optics makes the task of wiring the interconnections through the center of the hollow cube trivial. [BJN + 86] and [WBJ + 87] discuss early work on large-scale, free-space optical interconnect for VLSI systems.
Reference: [Min91] <author> Henry Q. Minsky. </author> <title> A Parallel Crossbar Routing Chip for a Shared Memory Multiprocessor. </title> <type> AI memo 1284, </type> <institution> MIT Artificial Intelligence Laboratory, 545 Technology Sq., </institution> <address> Cambridge, MA 02139, </address> <year> 1991. </year>
Reference-contexts: Backward port arbitration occurs in a distributed fashion along each logical output column. When several forward ports attempt to open a connection to the same logical backward port during the same cycle, an 8-way arbitration for the available backward ports takes place. <ref> [Min91] </ref> contains a detailed description of the design and implementation of RN1. RN1 was implemented as a full-custom, CMOS integrated circuit using a combination of standard-cell and full-custom layout. Standard, five-volt, CMOS i/o pads were used with this first-generation routing component.
Reference: [MR91] <author> Silvio Micali and Phillip Rogaway. </author> <title> Secure Computation. MIT/LCS/TR 513, </title> <publisher> MIT, </publisher> <address> 545 Technology Sq., Cambridge, MA 02139, </address> <month> August </month> <year> 1991. </year>
Reference-contexts: Stuck-value errors may take on an arbitrary, but constant, logic value. Bit flips are assumed to take on random values. Specifically, we are not assuming an adversarial fault model (e.g. <ref> [MR91] </ref>) in which faulty portions of the system are allowed to take on arbitrary erroneous values. These fault-manifestations are chosen to be consistent with fault expectations in digital hardware systems. Structural faults in the interconnect between components may give rise to floating or shorted nodes.
Reference: [MT90] <author> Colin M. Maunder and Rodham E. Tulloss, </author> <title> editors. The Test Access Port and Boundary-Scan Architecture, </title> <booktitle> chapter 20, </booktitle> <pages> pages 205-213. </pages> <publisher> IEEE, </publisher> <year> 1990. </year> <note> Chapter by: </note> <author> Patrick F. McHugh and Lee Whetsel. </author> <month> 201 </month>
Reference-contexts: McHugh and Whetsel propose adding parity to instruction encodings <ref> [MT90] </ref> to identify corrupted instruction words. Sparse encoding is a more general encoding scheme which allows stronger 95 protection against data corruption.
Reference: [ND90] <author> Michael Noakes and William J. Dally. </author> <title> System Design of the J-Machine. </title> <editor> In William J. Dally, editor, </editor> <booktitle> Advanced Research in VLSI: Proceedings of the Sixth MIT Conference, </booktitle> <pages> pages 179-194, </pages> <address> Cambridge, Massachusetts, 1990. </address> <publisher> MIT Press. </publisher>
Reference-contexts: In this way, they provide interconnect between conductors placed on opposite sides of the connector and lined up along the conduction axis. The elastomer will compress under pressure allowing the conductors to make positive electrical contact (e.g. [Inc90] [Pol90] [Tec88] <ref> [ND90] </ref>). Button balls are composed of 25 spun gold wire compressed into small diameter cylindrical holes (e.g. 20 mil diameter by 40 mil high) in a plastic carrier. They provide multiple points of contact between the PCB lands on each side of the ball when compressed (e.g. [Div89] [Smo85]).
Reference: [NPA91] <author> R. S. Nikhil, G. M. Papadopoulos, and Arvind. </author> <title> *T: A Killer Micro for A Brave New World. CSG Memo 325, </title> <publisher> MIT, </publisher> <address> 545 Technology Sq., Cambridge, MA 02139, </address> <year> 1991. </year>
Reference-contexts: In a hardware-supported shared-memory machine, this network interface might be the cache-controller [LLG + 91] [ACD + 91]; in a message-passing machine, it would be the network message interface [Cor91] [Thi91]. Increasingly, the network interface may be tightly-integrated with the processor [D + 92] <ref> [NPA91] </ref>. We explicitly assume the network interface has multiple connections both into the network and out of the network.
Reference: [NPA92] <author> Rishiyur S. Nikhil, Gregory M. Papadopoulous, and Arvind. </author> <title> *T: A Multithreaded Massively Parallel Architecture. </title> <booktitle> In Proceedings of the 19th International Symposium on Computer ARchitecture. ACM, </booktitle> <month> May </month> <year> 1992. </year>
Reference-contexts: Data parallel operations are limited by the rate at which processors can obtain access to the data on which they need to operate. Multithreaded ([Smi78] [Jor83] [ALKK90] [SBCvE90] [CSS + 91] <ref> [NPA92] </ref>) and dataflow ([ACM88] [AI87] [PC90]) architectures have been developed to mitigate communication latency by hiding its effects. These techniques all rely on an abundance of parallelism to provide useful processing to perform while waiting on slow communications. <p> Node latencies such as these are highly dependent on the programming model, processor, controller, and memory system in use. <ref> [NPA92] </ref> and [D + 92] describe processors which were designed to minimize these latencies. [E + 92] and [CSS + 91] describe a computational model intended to minimize these latencies.
Reference: [oD86] <institution> U.S. Department of Defense. Military Standardization Handbook: Reliability Prediction of Electronic Equipment, </institution> <address> mil-hdbk-217e edition, </address> <year> 1986. </year> <title> This handbook is updated periodically to track the evolution of electronic equipment technology. </title> <note> MIL-HDBK217 was first issued in 1965. </note>
Reference-contexts: Example A moderate complexity, modern component has a failure rate of ten failures per million hours ( c 10 5 hr 1 ) (See <ref> [oD86] </ref> for estimating component failure rates). A million component machine which depended on all million components working correctly, would have: s = N p = 10 fi 10 hr = 10=hr (2:16) This gives the machine a Mean Time To Failure (MTTF) of 6 minutes.
Reference: [PC90] <author> G. M. Papadopoulos and D. E. Culler. Monsson: </author> <title> an Explicit Token-Store Architecture. </title> <booktitle> In Proceedings of the 17th Annual International Symposium on Computer Architecture. IEEE, </booktitle> <year> 1990. </year>
Reference-contexts: Data parallel operations are limited by the rate at which processors can obtain access to the data on which they need to operate. Multithreaded ([Smi78] [Jor83] [ALKK90] [SBCvE90] [CSS + 91] [NPA92]) and dataflow ([ACM88] [AI87] <ref> [PC90] </ref>) architectures have been developed to mitigate communication latency by hiding its effects. These techniques all rely on an abundance of parallelism to provide useful processing to perform while waiting on slow communications.
Reference: [Pol90] <author> Shin Etsu Poly. </author> <title> Shin-Flex GD Product Summary, </title> <year> 1990. </year>
Reference-contexts: The conductors are arranged to conduct only along one axis. In this way, they provide interconnect between conductors placed on opposite sides of the connector and lined up along the conduction axis. The elastomer will compress under pressure allowing the conductors to make positive electrical contact (e.g. [Inc90] <ref> [Pol90] </ref> [Tec88] [ND90]). Button balls are composed of 25 spun gold wire compressed into small diameter cylindrical holes (e.g. 20 mil diameter by 40 mil high) in a plastic carrier.
Reference: [Pos81] <author> (Ed.) Jon Postel. </author> <title> Transmission Control Protocol - DARPA Internet Program Protocol Specification. </title> <type> RFC 793, </type> <institution> USC/ISI, Information Sciences Institute, University of Southern California, 4676 Admiralty Way, Marina del Rey, California, </institution> <month> 90291, September </month> <year> 1981. </year>
Reference-contexts: Either, we can design all operations which use MRP directly to be idempotent or we can implement a layer of protocol between applications and MRP which guarantees idempotent message delivery. The Transmission Control Protocol (TCP), in use on many local-area networks, provides reliable data streams by using sequence numbers <ref> [Pos81] </ref> to guarantee idempotent message delivery. When a source needs to communicate with a destination, the source arbitrates with the destination for a valid set of sequence numbers. The source annotates each unique packet of data transmitted to the destination with a different sequence number.
Reference: [PW72] <author> W. Wesley Peterson and E.J. Weldon Jr. </author> <title> Error-Correcting Codes. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1972. </year>
Reference-contexts: The non-legal instruction encodings all get treated as bypass instructions so that they cannot interfere with the normal operation of the component. Error correcting and detecting codes in common use for data storage and transmission [GC82] <ref> [PW72] </ref> are common examples of sparse encodings. In this application, we are concerned with detecting errors and preventing them from corrupting non-faulty operation, not correcting errors. If, for 94 Each scan path has its own instruction register, bypass register, and TAP controller.
Reference: [RWD84] <author> Simon Ramo, John R. Whinnery, and Theodore Van Duzer. </author> <title> Fields and Waves in Communication Electronics. </title> <publisher> John Wiley and Sons, </publisher> <address> 2nd edition, </address> <year> 1984. </year>
Reference-contexts: As a consequence, our interconnection medium will behave like a transmission line, and our signalling problem becomes a transmission line design problem. 6.2 Transmission Line Review In this section, we review the salient features of transmission line signalling. See <ref> [RWD84] </ref> for a thorough treatment of transmission lines. For most physical interconnection media in use in digital systems, the effects of signal attenuation and phase distortion can be ignored. <p> Solid conductor planes also serve to eliminate or reduce the cross-talk between signal traces on the same PCB. To guarantee consistent controlled <p>- 138 impedance interconnect, signal traces are generally run over a conductor plane or between a pair of solid conducting planes (See <ref> [RWD84] </ref>). As a practical matter, there is a limit to the system size we can place on a single printed-circuit board. Despite the fact that PCBs are generally composed of multiple conductor layers, PCB technology is essentially two-dimensional.
Reference: [SBCvE90] <author> R. Saavedra-Barrerra, D. E. Culler, and T. von Eicken. </author> <title> Analysis of Multithreaded Architectures for Parallel Computing. </title> <booktitle> In Proceedings of the 2nd Annual Symposium on Parallel Algorithms and Architectures, </booktitle> <month> July </month> <year> 1990. </year>
Reference-contexts: Data parallel operations are limited by the rate at which processors can obtain access to the data on which they need to operate. Multithreaded ([Smi78] [Jor83] [ALKK90] <ref> [SBCvE90] </ref> [CSS + 91] [NPA92]) and dataflow ([ACM88] [AI87] [PC90]) architectures have been developed to mitigate communication latency by hiding its effects. These techniques all rely on an abundance of parallelism to provide useful processing to perform while waiting on slow communications.
Reference: [Sim92] <author> Thomas Simon. </author> <title> Matched Delay Clock Distribution. </title> <type> Personal Communications, </type> <year> 1992. </year>
Reference-contexts: The additional stage of fanout adds somewhat to the total skew. Another option is to provide a direct connection to each clocked IC from a central driver where the edge arrival time is carefully tuned <ref> [Sim92] </ref>. Qualitatively, this kind of clock distribution is similar to the matched delay drivers described in Section 6.9.
Reference: [Smi78] <author> B. J. Smith. </author> <title> A Pipelined, Shared-Resource MIMD Computer. </title> <booktitle> In Proceedings of the 1978 International Conference on Parallel Processing, </booktitle> <pages> pages 6-8, </pages> <year> 1978. </year>
Reference: [Smo85] <author> R. Smolley. Button Board, </author> <title> A New Technology Interconnect for 2 and 3 Dimensional Packaging. </title> <booktitle> In International Society for Hybrid Microelectronics Conference, </booktitle> <month> November </month> <year> 1985. </year>
Reference-contexts: Button balls are composed of 25 spun gold wire compressed into small diameter cylindrical holes (e.g. 20 mil diameter by 40 mil high) in a plastic carrier. They provide multiple points of contact between the PCB lands on each side of the ball when compressed (e.g. [Div89] <ref> [Smo85] </ref>). Spring style connectors house shaped pieces of metal which behave as springs in a flexible carrier. When compressed between boards, the spring nature of the metal forces positive contact with the PCBs on both sides of the connector (e.g. [GPM92] [Cor90]).
Reference: [SS92] <author> Daniel P. Siewiorek and Robert S. Swarz. </author> <title> Reliable Computer Systems: Design and Evaluation. </title> <publisher> Digital Press, </publisher> <address> Burlington, MA, 2nd edition, </address> <year> 1992. </year> <month> 202 </month>
Reference-contexts: While a permanent fault occurs and remains a fault, a transient fault may only persist for a short period of time. Transient faults which recur with notable frequency are termed intermittent. <ref> [SS92] </ref> indicate that transient and intermittent faults account for the vast majority of faults which occur in computer systems. For the purposes of this presentation, static faults are permanent or intermittent faults which have occurred at some point in the past and are known to the system as a whole. <p> Opens and bridging faults within an IC may also leave nodes shorted or floating. For a good survey of physical faults and their manifestations see Chapter 2 in <ref> [SS92] </ref>. 10 The manner in which we handle dynamic faults in this work relies on end-to-end checksums to make the likelihood that a corrupted message looks like a good message arbitrarily small. As long as faults produce random data, we can select a checksum which has the desired property.
Reference: [Tec88] <author> Elastomeric Technologies. </author> <title> Elastomeric Connector Application Guide, </title> <year> 1988. </year>
Reference-contexts: The conductors are arranged to conduct only along one axis. In this way, they provide interconnect between conductors placed on opposite sides of the connector and lined up along the conduction axis. The elastomer will compress under pressure allowing the conductors to make positive electrical contact (e.g. [Inc90] [Pol90] <ref> [Tec88] </ref> [ND90]). Button balls are composed of 25 spun gold wire compressed into small diameter cylindrical holes (e.g. 20 mil diameter by 40 mil high) in a plastic carrier. They provide multiple points of contact between the PCB lands on each side of the ball when compressed (e.g. [Div89] [Smo85]).
Reference: [Tex91] <author> Texas Instruments. </author> <title> Shrink Small Outline Package Surface Mounting Packages, </title> <year> 1991. </year>
Reference-contexts: The processor and custom bus control logic can each be placed in their own DSPGA package. The memory can be obtained in gull-wing, surface-mount packages. The bus interface logic can be packaged in SSOP packages with a 25 mil pad pitch <ref> [Tex91] </ref>. By adding a fourth DSPGA package, we can package a node on a 6 inch square PCB with the DSPGA components centered 3 inches apart. The memory and glue logic can be placed on the surface of the node PCB between the DSPGA packages as shown in Figure 12.2.
Reference: [Thi91] <institution> Thinking Machines Corporation, Cambridge, MA. </institution> <type> CM5 Technical Summary, </type> <month> October </month> <year> 1991. </year>
Reference-contexts: Each node is composed of a processor, some memory, and a network interface. In a hardware-supported shared-memory machine, this network interface might be the cache-controller [LLG + 91] [ACD + 91]; in a message-passing machine, it would be the network message interface [Cor91] <ref> [Thi91] </ref>. Increasingly, the network interface may be tightly-integrated with the processor [D + 92] [NPA91]. We explicitly assume the network interface has multiple connections both into the network and out of the network. <p> Of course, the electrical and mechanical design of the system must also be suitable for live replacement (e.g. Tandem Non-Stop computer systems [And85], Stratus fault-tolerant computer systems [Web90], Thinking Machines CM5 <ref> [Thi91] </ref>). Once replaced, scan testing can determine the interconnection and functional integrity of the 99 Shown above is a configuration of a multipath network where it may make sense to configure out additional routers (The network without reconfiguration is shown in Figure 3.22).
Reference: [Tho80] <author> C. D. Thompson. </author> <title> A Complexity Theory of VLSI. </title> <type> Technical Report CMU-CS-80-140, </type> <institution> Department of Computer Science, Carnegie-Mellon University, </institution> <year> 1980. </year>
Reference-contexts: This is not practical for several reasons. We cannot build very large networks with bounded pin-out components, and a different component size is needed for each different network size. Using techniques from <ref> [Tho80] </ref> and [LR86], we find the interwiring resources will grow as Q (N 3 ). Wiring constraints alone require that the best packaging volume grows as Q (N 3 ), making, in the best case, the wiring distances, d, grow as Q (N ). <p> Additionally, when implemented in three-dimensional space, the interconnection requirements cause the machine volume to grow as Q (N 3 2 ). This result is also derivable from the techinques presented in <ref> [Tho80] </ref> and [LR86] by considering the number of wires which must cross through the middle of the machine 24 Shown above is a 16 processor hypercube. (Drawing by Frederic Chong) in any decomposition.
Reference: [Upf89] <author> E. Upfal. </author> <title> An O(log N ) deterministic packet routing scheme. </title> <booktitle> In 21st Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 241-250. </pages> <publisher> ACM, </publisher> <month> May </month> <year> 1989. </year>
Reference-contexts: To simultaneously optimize these characteristics, we utilize multipath, multistage interconnection networks based on several key ideas from the theoretical community including multibutterflies <ref> [Upf89] </ref> [LM92] and fat trees [Lei85]. Using multibutterfly (See Figure 1.1) and fat-tree networks (See Figure 1.2), we minimize the number of routing switches which must be traversed in the network between any pair of nodes. <p> As introduced above, there are no known deterministic algorithms for achieving an optimal expansion. In practice, randomized wiring schemes produce higher expansion than any known deterministic methods. [Kah91] presents some of the most recent work on the deterministic construction of expansion graphs. <ref> [Upf89] </ref> and [LM89] show that randomly wired multibutterflies have good expansion properties. The high expansion generally means there will be less congestion in the network.
Reference: [Wag87] <author> Paul T. Wagner. </author> <title> Interconnect Testing with Boundary Scan. </title> <booktitle> In Proceedings 1987 International Test Conference, </booktitle> <pages> pages 52-57. </pages> <publisher> IEEE, </publisher> <year> 1987. </year>
Reference-contexts: This mechanism allows the TAP to verify the complete connectivity of the components in the system. All connectivity faults, shorted wires, stuck drivers or receivers, or open-circuits can be identified in this manner [GM82] <ref> [Wag87] </ref>. The scan path allows data to be driven into a component independent of the values present on the component's external I/O pins. The resultant values generated by the component in response to the driven data can similarly be sampled and recovered via the serial scan path.
Reference: [Wal92] <author> Deborah Wallach. </author> <title> PHD: A Hierarchical Cache Coherent Protocol. </title> <type> Master's thesis, </type> <institution> MIT, 545 Technology Sq., </institution> <address> Cambridge, MA 02139, </address> <month> September </month> <year> 1992. </year>
Reference-contexts: The exploitation of network locality to minimize the effective communication latency in a multiprocessor system is an active area of current research [KLS90] [ACD + 91] <ref> [Wal92] </ref>. Exploiting network locality is of particular interest when designing scalable computer systems since the latency of the interconnect will necessarily increase with network size.
Reference: [WBJ + 87] <author> W. H. Wu, L. A. Bergman, A. R. Johnston, C. C. Guest, S. C. Esener, P. K. Yo, M. R. Feldman, and S. H. Lee. </author> <title> Implementation of Optical Interconnections for VLSI. </title> <journal> IEEE Transactions on Electron Devices, </journal> <volume> 34(3) </volume> <pages> 706-714, </pages> <month> March </month> <year> 1987. </year>
Reference-contexts: Since photons do not interfere with each other, free- space optics makes the task of wiring the interconnections through the center of the hollow cube trivial. [BJN + 86] and <ref> [WBJ + 87] </ref> discuss early work on large-scale, free-space optical interconnect for VLSI systems. They use holographic optical elements to direct optical beams for interconnections. The flexibility of the holographic media holds out promise for adaptive and dynamic connection alignment and reconfiguration.
Reference: [Web90] <author> Steve Webber. </author> <title> The Stratus Architecture. </title> <type> Stratus Technical Report TR-1, </type> <institution> Status Computer, Inc., </institution> <address> 55 Fairbanks Blvd., Marlboro, Massachusetts 01752, </address> <year> 1990. </year> <month> 203 </month>
Reference-contexts: Of course, the electrical and mechanical design of the system must also be suitable for live replacement (e.g. Tandem Non-Stop computer systems [And85], Stratus fault-tolerant computer systems <ref> [Web90] </ref>, Thinking Machines CM5 [Thi91]). Once replaced, scan testing can determine the interconnection and functional integrity of the 99 Shown above is a configuration of a multipath network where it may make sense to configure out additional routers (The network without reconfiguration is shown in Figure 3.22).
References-found: 90

