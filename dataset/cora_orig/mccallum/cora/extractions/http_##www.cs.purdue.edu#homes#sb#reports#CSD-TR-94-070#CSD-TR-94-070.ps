URL: http://www.cs.purdue.edu/homes/sb/reports/CSD-TR-94-070/CSD-TR-94-070.ps
Refering-URL: http://www.cs.purdue.edu/homes/sb/reports/LIST.html
Root-URL: http://www.cs.purdue.edu
Email: Email: boier@cs.purdue.edu and dcm@cs.purdue.edu  
Title: A Graphics Package for Structural Biology  
Author: Ioana Maria Martin and Dan C. Marinescu 
Address: West Lafayette, IN, 47907  
Affiliation: Computer Sciences Department Purdue University  
Abstract: In this report we present a graphics package for data visualization in Structural Biology. SBG/2-D is an X-window application supporting interactive visualization of electron density data used by the Molecular Replacement Method for the determination of the 3-D atomic structure of large macromolecules like viruses. SBG/2-D consists of a set of routines for displaying electron density contour maps and mask maps in 2-D. The data is displayed in sections, parallel to one of the principal planes of coordinates. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Rossmann, M.G., M.A. Cornea-Hasegan, D.C. Marinescu, Z. Zhang, R.E. Lynch, A. Hadfield, J. Muckelbauer, R. McKenna, S. Munshi, J-B. Dai, </author> <title> "The Parallel Envelope", </title> <institution> CSD-TR-94-018, Computer Science Department, Purdue University, </institution> <year> (1994) </year>
Reference-contexts: The data is produced by the program which computes the molecular envelope <ref> [1] </ref>. 8 considered for visualization. If electron density is to be displayed, then the user must also specify the electron density intervals to be plotted, by specifying the lower and the upper bound, as well as a step for each of the intervals. <p> This informs the linker that the math library is used. See the README file for details. 13 create the executable called pse make Input File Formats. The data files used as input by SBG/2-D consist of a 64K header followed by binary data <ref> [1] </ref>. file header binary data (64 K bytes) The binary data is organized either in brick or in section-by-section format as explained in [1]. <p> The data files used as input by SBG/2-D consist of a 64K header followed by binary data <ref> [1] </ref>. file header binary data (64 K bytes) The binary data is organized either in brick or in section-by-section format as explained in [1]. The bricks format is the standard external data format used by the Molecular Replacement Program suite and the section by section formats are internal formats produced by FFTSYNTH and the ENVELOPE programs. <p> Error and warning codes are defined in the file mask.h and handled by the module error.c. Timing Results. Table 1 gives time measurements for a 24 Mbytes file in brick format produced by version 1.2 of the ENVELOPE program <ref> [1] </ref>. Execution times and a summary of the profiling results are tabulated for each type of map that can be produced in SBG/2-D. The Program Structure. All program modules are written in C. The skeleton of the interface was generated using BX version 3.0. [3].
Reference: [2] <author> Marius Cornea-Hasegan, Calin Costian, Dan C. Marinescu, Ioana Maria Martin and John R. Rice, </author> <title> "Towards Problem Solving Environments for High Performance Computing", </title> <booktitle> Proceedings of High Performance Computing Conference, </booktitle> <address> Singapore 1994 (in print). </address> <note> [3] -, "The Builder Xcessory User's Guide" , Version 3.0 ICS (1993) [4] -, "NCAR Graphics Fundamentals", Unix version 3.2, Document version 1.0 (1993) </note>
Reference-contexts: To support this computing model, namely a front-end graphics workstation connected via high speed networks with computing engines with different architectures, we have designed an intelligent collaborative problem solving environment called SB, Structural Biology <ref> [2] </ref>. A catalog of objects (programs, data, etc.) is maintained for each project a user is undertaking. Each object consists of a stub which contains a descriptor of the object stored on the front-end graphics workstation and a file stored somewhere in this distributed environment. <p> These "hooks" are known as callback lists and the application procedures are known as callback functions. The Builder Xcessory Tool. The SBG/2-D user interface was created using an interface building tool called BX and described in <ref> [2] </ref>. The Builder Xcessory Tool, BX, is a package for building and testing user interfaces. In BX, widgets are selected from a Palette then positioned on the screen and resized using the mouse. The resources associated with a widget are set using the Resource Editor.
Reference: [5] <author> Young, D.A., </author> <title> "The X Window System Programming and Applications with Xt", </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> (1990) </year>
Reference-contexts: The legends are used to specify the association color - mask/electron density value for the current map. 10 3 Internals The X Environment. The X-Window System is a network-transparent operating environment which supports multiple overlapping windows on a variety of workstations <ref> [5] </ref>. Network-transparency means that applications can run on one workstation and display the output using a display head connected to the same or to a different workstation. <p> It is not necessary to alter an X program in any way to make it connect over the network to a remote workstation. Hence, X applications are portable <ref> [5] </ref>. <p> SBG/2-D is an X-Window application. Like any X application, once a display connection is established, it interacts with the workstation by manipulating resources. Resources include windows, bitmaps, fonts, colors and other data structures used by the application. Events are used to report changes to the workstation's display <ref> [5] </ref>. SBG/2-D uses a combination of functions from different layers of the X-Window system (Xlib, XtIntrinsics,Motif) and a widget set. Widgets are components that allow the creation of the user interface. They include menus, scrollbars, dialog boxes [4].
Reference: [6] <author> Jones, O., </author> <title> "Introduction to the X Window System", </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> (1989) </year>
Reference: [7] <author> Dayhoff, M. O., </author> <title> "A Contour-Map Program for X-Ray Crystallography", </title> <journal> CACM, Vol.6, </journal> <volume> Number 10, </volume> <year> (1963) </year>
Reference-contexts: The current versions are based on X-Windows and run on Sun4 and SGI workstations. SBG/2-D can be used as a standalone packages or can be integrated within the SB environment <ref> [7] </ref>. The first part of the report describes the user interface to SBG/2-D. <p> Functions for Providing On-Line Help get help: reads the help file in a buffer which will be displayed in a scrolled window. 18 Appendix. The Contouring Algorithm The contouring algorithm used in SBG/2-D is based on <ref> [7] </ref>. Input: A two-dimensional array whose entries represent values of the electron density: (x; y), with 1 x n x ; 1 y n y , where n x and n y are the dimensions of the grid.
Reference: [8] <author> Marius A. Cornea-Hasegan, Zhongyun Zhang, Robert E. Lynch, Dan C. Marinescu, Andrea Hadfield, Jodi K. Muckelbauer, Sanjeev Munshi, Liang Tong, and Michael G. Rossmann, </author> <title> "Phase Refinement and Extension by Means of Non-crystallographic Symmetry Averaging using Parallel Computers," </title> <note> (submitted). 20 </note>
Reference-contexts: The phase refinement and extension used by the Molecular Replacement Method is a computationally intensive task carried out as an iterative computation described in <ref> [8] </ref>.
References-found: 6

