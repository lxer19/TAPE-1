URL: ftp://ftp.gmd.de/GMD/ai-research/Publications/Fabel/Fabel-21-MoMo-language.ps.gz
Refering-URL: http://nathan.gmd.de/projects/fabel/fabel-pub.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: AAA  Concurrency constraints as control speciflcations for the MoMo language  
Author: F AAA AAA AAAA AAAA AAAA AAAA B AAA AAA L E F AB EL Friedrich Gebhardt, Eckehard Gro and Hans Vo 
Date: 21  
Note: c 1994 Gesellschaft  
Address: Reihe FABEL-Report Status: freigegeben Dokumentbezeichner: Org/Reports/nr-21 Erstellt am: 04.03.1994 Korrigiert am: 14.05.1994 ISSN 0942-413X  
Affiliation: Druck: Gesellschaft fur Mathematik und Datenverarbeitung mbH (GMD), Sankt Augustin  fur Mathematik und Datenverarbeitung mbH  Gesellschaft fur Mathematik und Datenverarbeitung mbH (GMD)  
Pubnum: FABEL-Report No.  
Abstract-found: 0
Intro-found: 1
Reference: [ Fensel et al., 1991 ] <author> D. Fensel, J. Angele, and D. Landes. KARL:: </author> <title> A knowledge acquisition and representation language. </title> <editor> In J. Rault, editor, </editor> <booktitle> Proceedings of the 11th International Conference Expert systems and their applications, volume 1 (Tools, Techniques & Methods), </booktitle> <pages> pages 513-528, </pages> <address> Avignon, 1991. </address> <publisher> EC2. </publisher>
Reference-contexts: In particular, they are not restricted to MoMo but could also be applied at the task layer of other KADS-oriented languages such as (ML) 2 [ van Harmelen and Balder, 1991 ] , KARL <ref> [ Fensel et al., 1991 ] </ref> , or other such languages. We start with sketching the overall structure of MoMo and then present in Section 3 the principles of the new version of the task layer.
Reference: [ Fidelak, 1993 ] <author> M. Fidelak. </author> <title> Integritatsbedingungen in Petri-Netzen. </title> <type> PhD thesis, </type> <institution> Univer-sitat Koblenz-Landau, Koblenz, </institution> <month> December </month> <year> 1993. </year>
Reference-contexts: Although we studied such an approach quite intensively including in our considerations the process logic of <ref> [ Fidelak, 1993 ] </ref> , we didn't accept it, and it may be of interest to sketch here the main reasons. There are simple examples where one would like to apply a kind of procedural language.
Reference: [ Jensen, 1990 ] <author> K. Jensen. </author> <title> Coloured Petri Nets: a high level language for system design and analysis. </title> <editor> In G. Rozenberg, editor, </editor> <booktitle> Advances in Petri Nets 1990. </booktitle> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1990. </year>
Reference-contexts: The data constituting the domain knowledge are stored somehow in an orderly fashion; a large portion of these data has most likely been obtained without consideration of MoMo. 2 Fabel-Report No. 21 3 The inference layer is realized as a Coloured Petri Net (CPN) <ref> [ Jensen, 1990 ] </ref> . KADS roles correspond to places of the net, KADS inferences to actions (transitions). <p> However, there should follow an action "Output to the user" which is not modelled in our simple example. Chapter 4 Hierarchies 4.1 Inference net hierarchies At the inference layer, MoMo is augmented by hierarchies in the sense of <ref> [ Jensen, 1990 ] </ref> . Thus it is possible to replace an action (then called a substitution action) by an action bounded subnet (a page). The semantics of the hierarchical net is that of the at net that results from the expansion.
Reference: [ van Harmelen and Balder, 1991 ] <author> F. van Harmelen and J. Balder. </author> <title> (M L) 2 : A formal language for kads models of expertise. </title> <institution> ESPRIT Project P5248 KADS-II KADS-II/T1.2/PP/UvA/17/1.0, University of Amsterdam, </institution> <month> November </month> <year> 1991. </year>
Reference-contexts: In particular, they are not restricted to MoMo but could also be applied at the task layer of other KADS-oriented languages such as (ML) 2 <ref> [ van Harmelen and Balder, 1991 ] </ref> , KARL [ Fensel et al., 1991 ] , or other such languages. We start with sketching the overall structure of MoMo and then present in Section 3 the principles of the new version of the task layer.
Reference: [ Walther et al., 1992 ] <author> J. Walther, A. Vo, M. Linster, T. Hemmann, H. Vo, and W. Kar-bach. </author> <month> MoMo. </month> <institution> Arbeitspapiere der GMD 658, Gesellschaft fur Mathematik und Daten-verarbeitung mbH (GMD), Sankt Augustin, </institution> <month> June </month> <year> 1992. </year>
Reference-contexts: Introduction 1 MoMo is a knowledge modelling language based on the KADS model of expertise [ Wielinga et al., 1992 ] . It uses a structure similar to Coloured Petri Nets on the inference level and, in its flrst version which is working for a couple of years <ref> [ Walther et al., 1992 ] </ref> , a procedural language on the task level. One major goal of the ongoing revision and extension of MoMo is to replace this procedural language by a less stringent speciflcation. <p> The existing MoMo functionality <ref> [ Walther et al., 1992; Walther et al., 1993 ] </ref> will essentially remain unchanged; it does not belong to the scope of this report. <p> Even if this is quite opposite to a freely occurring net, it must somehow be achievable. It is in fact achievable with net extensions; however, things become too complicated. As an example, consider Figure 3.1. This inference net is taken from <ref> [ Walther et al., 1992 ] </ref> . The problem is to diagnose defects in a technical equipment; a proposed solution was the inference net shown together with the sequence of actions Perform "Select" as often as possible. Perform "Match" as often as possible. Perform "Generalize" as often as possible.
Reference: [ Walther et al., 1993 ] <author> J. Walther, A. Vo, T. Hemmann, and H. Vo. MoMo. </author> <booktitle> In 3rd KADS Meeting on CommonKADS, </booktitle> <pages> pages 189-205, </pages> <address> Munchen, </address> <year> 1993. </year> <institution> Siemens AG. </institution>
Reference-contexts: The existing MoMo functionality <ref> [ Walther et al., 1992; Walther et al., 1993 ] </ref> will essentially remain unchanged; it does not belong to the scope of this report.
Reference: [ Wielinga et al., 1992 ] <author> B. J. Wielinga, A. T. Schreiber, and J. A. Breuker. Kads: </author> <title> a mod-elling approach to knowledge engineering. </title> <journal> Knowledge Acquisition, </journal> <volume> 4 </volume> <pages> 5-53, </pages> <year> 1992. </year> <month> 32 </month>
Reference-contexts: Introduction 1 MoMo is a knowledge modelling language based on the KADS model of expertise <ref> [ Wielinga et al., 1992 ] </ref> . It uses a structure similar to Coloured Petri Nets on the inference level and, in its flrst version which is working for a couple of years [ Walther et al., 1992 ] , a procedural language on the task level. <p> basic knowledge of Petri nets. 1 This research was also supported by the German Ministry for Research and Technology (BMFT) within the joint project BEHAVIOR under contract No. 01-IW-203-C0. 1 Chapter 2 KADS as a starting point 2.1 KADS methodology KADS is a methodology for the development of knowledge-based systems <ref> [ Wielinga et al., 1992 ] </ref> . The goal of MoMo is to operationalize the KADS methodology, at least in parts. To be more speciflc, the KADS model of expertise distinguishes four knowledge levels. The domain layer encompasses the knowledge about the application domain; it is declarative in nature.
References-found: 7

