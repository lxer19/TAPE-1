URL: ftp://ftp.research.microsoft.com/pub/tr/tr-98-55.ps
Refering-URL: http://www.research.microsoft.com/~tedb/interest.htm
Root-URL: http://www.research.microsoft.com
Title: Pattern Matching for Program Generation: A User Manual  
Author: Ted J. Biggerstaff 
Address: One Microsoft Way Redmond, WA 98052  
Affiliation: Microsoft Research Microsoft Corporation  
Date: December, 1998  
Abstract: Technical Report MSR-TR-98-55 Copyright 1998, Microsoft Corporation. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <institution> Allegro CL for Windows, </institution> <note> Version 3 User Manual, </note> <author> Franz Inc., </author> <year> 1995. </year>
Reference: 2. <author> Don Batory, Vivek Singhal, Marty Sirkin, and Jeff Thomas, </author> <title> Scalable Software Libraries, </title> <booktitle> Symposium on the Foundations of Software Engineering. </booktitle> <address> Los Angeles, CA, </address> <month> December, </month> <year> 1993. </year>
Reference: 3. <author> Ted J. Biggerstaff, </author> <title> Anticipatory Optimization in Domain Specific Translation, </title> <booktitle> International Conference on Software Reuse, </booktitle> <month> June, </month> <year> 1998a. </year>
Reference: 4. <author> Ted J. Biggerstaff, </author> <title> A Perspective of Generative Reuse, </title> <booktitle> Annals of Software Engineering, </booktitle> <publisher> Baltzer Science Publishers, AE Bussum, </publisher> <address> The Netherlands, </address> <year> 1998b. </year>
Reference: 5. <author> Ted J. Biggerstaff, </author> <title> Composite Folding in Anticipatory Optimization, </title> <type> Microsoft Research Technical Report, </type> <institution> MSR-TR-98-22, </institution> <year> 1998c. </year>
Reference: 6. <author> W. F. Clocksin and C. S. Mellish, </author> <title> Programming in Prolog, </title> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference: 7. <author> Crew, R. F., ASTLOG: </author> <title> A Language for Examining Abstract Syntax Trees, </title> <booktitle> In Proceedings of the USENIX Conference on DomainSpecific Languages, </booktitle> <month> ASTLOG: </month> <title> A Language for Examining Abstract Syntax Trees Santa Barbara, </title> <address> California, </address> <month> October </month> <year> 1997. </year>
Reference-contexts: There are somewhat less direct relationships with Wiles work. Popart (Wile, 1994) adopts a grammar theoretical basis for its representation and is operationally slanted more toward syntax-directed parsing and language translation architectures. Wiles more recent work <ref> (Wile, 1997) </ref> pushes the representation toward purer abstractions and seeks a theoretical basis for the relationships among and manipulations upon such abstract representations. Motivation for the pattern matcher arises from both the transformation and program generation communities. See Feather, 1987 and Partsch, 1990. <p> Motivation for the pattern matcher arises from both the transformation and program generation communities. See Feather, 1987 and Partsch, 1990. There are related systems from the program analysis community <ref> (See Crew, 1997 and Devanbu, 1992) </ref> although the analysis systems and generation systems typically differ in their control architectures. That is, the program representation and analysis machinery are the primary controllers of program analysis systems and other functionality is subservient to the analysis machinery.
Reference: 8. <author> Devanbu, P. </author> <title> GENOA A Language and Front-End independent source code analyzer generator, </title> <booktitle> Fourteenth International Conference on Software Engineering, </booktitle> <address> Melbourne, Australia, </address> <year> 1992. </year>
Reference: 9. <author> Martin Feather, </author> <title> A Survey and Classification of some Program Transformation Approaches and Techniques, In Program Specification and Transformation, </title> <publisher> Elsevier (North-Holland), IFIP, </publisher> <year> 1987. </year>
Reference-contexts: Certainly, the overall control structure, binding regime, and inference mechanisms are similar to those of Prolog <ref> (Clocksin and Mellish, 1987, Malpas 1987) </ref> and Icon (Griswold, et al., 1996). The binding regime uses unification, which goes back to Robinsons 1965 paper on Resolution theorem proving. The matching paradigm has similarities to other systems that rely on pattern matching (Kotik et al., 1986).
Reference: 10. <author> Paul Graham, </author> <title> On Lisp: Advanced Techniques for Common Lisp, </title> <publisher> Prentice-Hall, </publisher> <year> 1994. </year>
Reference: 11. <author> Paul Graham, </author> <title> The ANSI Common Lisp, </title> <publisher> Prentice-Hall, </publisher> <year> 1996. </year>
Reference: 12. <author> R. E. Griswold, J. F. Poage, I. P. Polonsky, </author> <title> The Snobol4 Programming Language, </title> <publisher> Prentice-Hall, </publisher> <year> 1971. </year>
Reference: 13. <author> Ralph E. Griswold, Madge T. Griswold, </author> <title> The Icon Programming Language, </title> <publisher> Prentice-Hall, </publisher> <year> 1996 </year>
Reference: 14. <author> Sonya E. Keene, </author> <title> Object Oriented Programming in Common Lisp: A Programmers Guide to the Common Lisp Object System, </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference: 15. <author> Helmut A. Partsch, </author> <title> Specification and Transformation of Programs, </title> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference: 16. <author> John Malpas, </author> <title> Prolog: A Relational Language and it Applications, </title> <publisher> Prentice-Hall, </publisher> <year> 1987. </year>
Reference: 17. <author> Gordon B. Kotik, A. Joseph Rockmore, and Douglas R. Smith, </author> <title> Use of Refine for Knowledge-Based Software Development, </title> <booktitle> Western Conference on Knowledge-Based Engineering and Expert Systems, </booktitle> <year> 1986. </year>
Reference: 18. <author> J. A. Robinson, </author> <title> A Machine-Oriented Logic Based on the Resolution Principle, </title> <journal> JACM, </journal> <pages> pp. 23-41, </pages> <year> 1965. </year>
Reference: 19. <author> Guy L. Steele Jr., </author> <title> Common Lisp: The Language (Second Edition), </title> <publisher> Digital Press, </publisher> <year> 1990. </year>
Reference: 20. <author> David Wile, POPART: </author> <title> Producer of Parsers and Related Tools, Systems Builders Manual, </title> <type> Draft Technical Report, </type> <institution> UCS/ISI, </institution> <year> 1994. </year> <note> See http://www.isi.edu/software-sciences/wile/Popart/popart.html. </note>
Reference: 21. <author> David Wile, </author> <title> Toward a Calculus for Abstract Syntax Trees , In Proceedings of a Working Conference on Algorithmic Languages and Calculi, </title> <booktitle> IFIP Working Group 2.1, </booktitle> <month> February, </month> <year> 1997, </year> <institution> Strasbourg, France. </institution>

References-found: 21

