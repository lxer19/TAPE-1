URL: http://www.eecis.udel.edu:80/~mills/database/papers/dimacs_pub.ps
Refering-URL: http://www.eecis.udel.edu:80/~mills/database/papers/
Root-URL: http://www.cis.udel.edu
Title: Cryptographic Authentication for Real-Time Network Protocols  
Author: David L. Mills 
Abstract: This paper describes a new security model and authentication scheme for distributed, real-time network protocols used in time synchronization and event scheduling applications. It outlines the design requirements of these protocols and why these requirements cannot be met using conventional cryptography and algorithms. It proposes a new design called autokey , which uses a combination of public-key cryptography and a psuedo-random sequence of one-way hash functions. Autokey has been implemented for the Network Time Protocol (NTP), but it can be adapted to other similar protocols. The paper describes the protocol operations, data structures and resources required for autokey, as well as a preliminary vulnerability assessment. 
Abstract-found: 1
Intro-found: 1
Reference: <editor> Note: </editor> <title> Internet Drafts are perishable memoranda describing works in progress and may change in substantial ways before final publication as research reports. They are cited here only when no other source of the material is available. </title>
Reference: 1. <author> Haller, N. </author> <title> The S/KEY onetime password system. </title> <institution> Network Working Group Report RFC-1760. Bellcore, </institution> <month> February </month> <year> 1995, </year> <pages> 12 pp. </pages>
Reference-contexts: The autokey scheme described in following sections is specifically tailored to the needs of timesensitive protocols where the keys are randomly generated and used only once, as in the S/KEY scheme <ref> [1] </ref>. It involves three stages of operation for each potential server. In the first stage, the server network address is determined, either directly from directory services or from an intercepted multicast message, and an association mobilized to communicate with the server.
Reference: 2. <author> Karn, P., and W.A. Simpson. </author> <title> The Photuris session key management protocol. Net work Working Group Internet Draft, </title> <type> Qualcomm, </type> <month> November </month> <year> 1995, </year> <pages> 66 pp. </pages>
Reference-contexts: The key is accessed by a unique key identifier, which serves a purpose similar to the security parameter identifier (SPI) described in recent internet drafts <ref> [2] </ref>, [3]. The key is used to construct a message digest (one-way hash function) of the message using either keyed MD5 [4] or DES-CBC. The key identifier and message digest together form the message authentication code (MAC), which is transmitted following the NTP packet header.
Reference: 3. <author> Maughan, D., M. Schertler. </author> <title> Internet security association and key management proto col (ISAKMP). </title> <type> Internet Draft, </type> <institution> National Security Agency, </institution> <month> November </month> <year> 1995, </year> <pages> 59 pp. </pages>
Reference-contexts: The key is accessed by a unique key identifier, which serves a purpose similar to the security parameter identifier (SPI) described in recent internet drafts [2], <ref> [3] </ref>. The key is used to construct a message digest (one-way hash function) of the message using either keyed MD5 [4] or DES-CBC. The key identifier and message digest together form the message authentication code (MAC), which is transmitted following the NTP packet header.
Reference: 4. <author> Metzger, P., and W. Simpson. </author> <title> IP authentication using keyed MD5. </title> <institution> Network Working Group Paper RFC-1828, Piermont and Daydreamer, </institution> <month> August </month> <year> 1995, </year> <pages> 5 pp. </pages> <address> 10 D AVID L. M ILLS </address>
Reference-contexts: The key is accessed by a unique key identifier, which serves a purpose similar to the security parameter identifier (SPI) described in recent internet drafts [2], [3]. The key is used to construct a message digest (one-way hash function) of the message using either keyed MD5 <ref> [4] </ref> or DES-CBC. The key identifier and message digest together form the message authentication code (MAC), which is transmitted following the NTP packet header.
Reference: 5. <author> Mills, </author> <title> D.L. Internet time synchronization: the Network Time Protocol. </title> <journal> IEEE Trans. Communications COM-39, </journal> <month> 10 (October </month> <year> 1991), </year> <pages> 1482-1493. </pages>
Reference-contexts: 1. Introduction The Network Time Protocol (NTP) <ref> [5] </ref> is widely deployed in the Internet to synchronize computer time to national standards. The current NTP population includes over 230 primary servers and well over 100,000 secondary servers and clients.
Reference: 6. <author> Mills, </author> <title> D.L. Network Time Protocol (Version 3) specification, implementation and analysis. </title> <institution> Network Working Group Paper RFC-1305, University of Delaware, </institution> <month> March </month> <year> 1992, </year> <pages> 113 pp. </pages>
Reference-contexts: Primary 94A60; Secondary 68P25. 2 D AVID L. M ILLS Most NTP servers and clients use the NTP Version 3 reference implementation for Unix, VMS and Windows, which is a relatively complex, real-time, distributed application. The architecture, protocol and algorithms are specified in RFC-1305 <ref> [6] </ref>. The NTP Version 4 specification is not yet complete, but transition documents are available [7] which describe the new features. The NTP Version 4 reference implementation now under test supports most of these features, including the authentication scheme described in this paper.
Reference: 7. <author> Mills, D.L, and A. Thyagarajan. </author> <title> Network time protocol version 4 proposed changes. </title> <institution> Electrical Engineering Department Paper 94-10-2, University of Delaware, </institution> <month> October </month> <year> 1994, </year> <pages> 32 pp. </pages>
Reference-contexts: The architecture, protocol and algorithms are specified in RFC-1305 [6]. The NTP Version 4 specification is not yet complete, but transition documents are available <ref> [7] </ref> which describe the new features. The NTP Version 4 reference implementation now under test supports most of these features, including the authentication scheme described in this paper. Additional information can be found at the NTP home page http:// www.eecis.udel.edu/~ntp and the authors home page http://www.eecis.udel.edu/~mills.
Reference: 8. <institution> DES modes of operation. FIPS Publication 81, National Bureau of Standards, </institution> <note> Decem ber 1980. </note>
Reference-contexts: The authentication scheme described in RFC-1305 is designed to support this security model. This scheme has since been augmented to include provisions for the MD5 message digest algorithm [12], in addition to the DES-CBC <ref> [8] </ref>, [9] algorithm. The scheme contains provisions to cryptographically authenticate individual servers operating in any mode using a symmetric-key cryptosystem and private keys. In RFC-1305, an association is distinguished by source and destination network addresses and assigned a secret cryptographic key, which is stored in a secure database.
Reference: 9. <institution> Data encryption standard. FIPS Publication 46-1, National Bureau of Standards, </institution> <month> Janu ary </month> <year> 1988. </year>
Reference-contexts: The authentication scheme described in RFC-1305 is designed to support this security model. This scheme has since been augmented to include provisions for the MD5 message digest algorithm [12], in addition to the DES-CBC [8], <ref> [9] </ref> algorithm. The scheme contains provisions to cryptographically authenticate individual servers operating in any mode using a symmetric-key cryptosystem and private keys. In RFC-1305, an association is distinguished by source and destination network addresses and assigned a secret cryptographic key, which is stored in a secure database.
Reference: 10. <author> PKCS #1: </author> <title> RSA encryption standard, </title> <type> Version 1.5. </type> <institution> RSA Laboratories, </institution> <month> November </month> <year> 1993. </year>
Reference-contexts: Subsequently, the authenticity of each NTP message is verified using mechanisms described in the next section. 3.1 Conventional Approaches In a perfect world with inexhaustible processor and memory resources, a public-key cryptosystem such as RSA public-key infrastructure (PKI) <ref> [10] </ref> would be a good foundation on which to build the authentication scheme.
Reference: 11. <institution> PKCS #3: </institution> <note> Diffie-Hellman key-agreement standard, version 1.4. </note> <institution> RSA Laboratories, </institution> <month> November </month> <year> 1993. </year>
Reference-contexts: Conventional authentication models are based on public-key cryptography and digital signatures; however, the known public-key algorithms drastically degrade timekeeping accuracy and require significant computing resource commitments. Current key-agreement schemes based on Diffie-Hellman <ref> [11] </ref> do not scale well in a large network with thousands of servers and clients. Furthermore, a timesensitive protocol such as NTP places severe requirements on latency and available resources which cannot be satisfied using conventional approaches.
Reference: 12. <author> Rivest, R. </author> <title> The MD5 messagedigest algorithm. Network Working Group Paper RFC 1321, </title> <publisher> MIT and RSA, </publisher> <month> April </month> <year> 1992, </year> <pages> 21 pp. </pages> <institution> E LECTRICAL AND C OMPUTER E NGINEERING D EPARTMENT , U NIVERSITY OF D ELA - WARE , N EWARK , DE 19716 </institution>
Reference-contexts: The authentication scheme described in RFC-1305 is designed to support this security model. This scheme has since been augmented to include provisions for the MD5 message digest algorithm <ref> [12] </ref>, in addition to the DES-CBC [8], [9] algorithm. The scheme contains provisions to cryptographically authenticate individual servers operating in any mode using a symmetric-key cryptosystem and private keys.
References-found: 13

