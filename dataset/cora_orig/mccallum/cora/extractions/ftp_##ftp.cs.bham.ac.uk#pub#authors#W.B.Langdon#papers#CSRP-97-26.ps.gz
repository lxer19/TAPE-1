URL: ftp://ftp.cs.bham.ac.uk/pub/authors/W.B.Langdon/papers/CSRP-97-26.ps.gz
Refering-URL: http://www.cs.bham.ac.uk/~wbl/biblio/gp-bibliography.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Scheduling Planned Maintenance of Electrical Power Transmission Networks Using Genetic Algorithms  
Author: W. B. Langdon 
Keyword: Genetic Algorithms, Genetic Programming, Scheduling, Optimisation, Maintenance Plan ning, Electricity Transmission Networks.  
Address: Birmingham B15 2TT, UK  
Affiliation: School of Computer Science, University of Birmingham,  
Abstract: Technical Report: CSRP-97-26 10 November 1997 Abstract The maintenance of the electrical power transmission networks must be planned in advance so as to minimise costs taking into account: * location and size of demand for electricity, * generator capacities and availabilities, * electricity carrying capacity of the remainder of the network, i.e. that part not undergoing maintenance, * resilience of the network to faults (contingencies). This complex optimisation and scheduling problem is currently performed manually (albeit with some computerised assistance). This paper reports recent work aiming to automatically generate low cost schedules using genetic algorithms (GA) and genetic programming (GP) using the South Wales region as a demonstration network. 
Abstract-found: 1
Intro-found: 1
Reference: [ABN94] <author> Laurent Atlan, Jerome Bonnet, and Martine Naillon. </author> <title> Learning distributed reactive strategies by genetic programming for the general job shop problem. </title> <booktitle> In Proceedings of the 7th annual Florida Artificial Intelligence Research Symposium, </booktitle> <address> Pensacola, Florida, USA, May 1994. </address> <publisher> IEEE Press. </publisher>
Reference-contexts: Obvious temporal structure Crossover disruptive, Still very big, No grid structure, Sparse [CH93] [VJ93] Graph 130 by 52 bit Realistic Crossover disruptive, Complex, Little pre ceding work, Sparse [MK93] TSP 7,000 link Widely studied "By edge" costs, Sparse [SMM + 91] [VJ93] GP S-expr ession Complex, Little pre ceding work <ref> [ABN94] </ref> Expans ive Coding 7; 000 fi n com plex Crossover friendly Complex, Little pre ceding work [BBM93] "Greedy Optimiz ation" 130 line id Good crossover, Compact, Widely studied Fitness evaluation expensive [Sys91] [FRC93] In the linear, 2D and TSP structures every attempt should be made to keep electrically close lines <p> (set 2 (ADD (read 2) (fit i0))))) (read 2))) (read 0) (PROG2 (set 1 i0) (set 0 (SUB (read ((ADD i0 (read (SUB 0 (ADD 1 1)))))) (read 2)))) 0)) (read 1)))))))) 16 9.7 Other GP Approaches Genetic Programming has been used in other scheduling problems, notably Job Shop Scheduling <ref> [ABN94] </ref> and scheduling maintenance of railway track [Gri95]. An approach based on [ABN94] which used a chromosome with a separate tree per task (i.e. line) to be maintained was tried. However unlike [ABN94] there was no central coordinating heuristic to ensure "the system's coherence" and each tree was free to schedule <p> (set 1 i0) (set 0 (SUB (read ((ADD i0 (read (SUB 0 (ADD 1 1)))))) (read 2)))) 0)) (read 1)))))))) 16 9.7 Other GP Approaches Genetic Programming has been used in other scheduling problems, notably Job Shop Scheduling <ref> [ABN94] </ref> and scheduling maintenance of railway track [Gri95]. An approach based on [ABN94] which used a chromosome with a separate tree per task (i.e. line) to be maintained was tried. However unlike [ABN94] there was no central coordinating heuristic to ensure "the system's coherence" and each tree was free to schedule its line independent of the others. <p> 16 9.7 Other GP Approaches Genetic Programming has been used in other scheduling problems, notably Job Shop Scheduling <ref> [ABN94] </ref> and scheduling maintenance of railway track [Gri95]. An approach based on [ABN94] which used a chromosome with a separate tree per task (i.e. line) to be maintained was tried. However unlike [ABN94] there was no central coordinating heuristic to ensure "the system's coherence" and each tree was free to schedule its line independent of the others. The fitness function guiding the co-evolution of these trees.
Reference: [And94] <author> David Andre. </author> <title> Automatically defined features: The simultaneous evolution of 2-dimensional feature detectors and an algorithm for using them. </title> <editor> In Kenneth E. Kinnear, Jr., editor, </editor> <booktitle> Advances in Genetic Programming, chapter 23, </booktitle> <pages> pages 477-494. </pages> <publisher> MIT Press, </publisher> <year> 1994. </year>
Reference: [BBM93] <author> David Beasley, David R. Bull, and Ralph R. Martin. </author> <title> Reducing epistasis in combinatorial problems by expansive coding. </title> <editor> In Stephanie Forrest, editor, </editor> <booktitle> Proceedings of the 5th International Conference on Genetic Algorithms, ICGA-93, </booktitle> <pages> pages 400-407, </pages> <institution> University of Illinois at Urbana-Champaign, </institution> <address> 17-21 July 1993. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: 52 bit Realistic Crossover disruptive, Complex, Little pre ceding work, Sparse [MK93] TSP 7,000 link Widely studied "By edge" costs, Sparse [SMM + 91] [VJ93] GP S-expr ession Complex, Little pre ceding work [ABN94] Expans ive Coding 7; 000 fi n com plex Crossover friendly Complex, Little pre ceding work <ref> [BBM93] </ref> "Greedy Optimiz ation" 130 line id Good crossover, Compact, Widely studied Fitness evaluation expensive [Sys91] [FRC93] In the linear, 2D and TSP structures every attempt should be made to keep electrically close lines close to each other in the representation.
Reference: [CH93] <author> Hugh M. Cartwright and Stephen P. Harris. </author> <title> Analysis of the distribution of airborne pollution using genetic algorithms. Atmospheric Environment, </title> <address> 27A(12):1783-1791, </address> <year> 1993. </year>
Reference-contexts: Table 1: Possible chromosomes for the maintenance scheduling problem Organiz ation Size Gene Expected Benefit Disadvantages Selected References Linear 7,000 bit Simple Crossover disruptive, Too long, No struc ture, Sparse [Gol89] 2D 130 by 52 bit Simple, Obvious temporal structure Crossover disruptive, Still very big, No grid structure, Sparse <ref> [CH93] </ref> [VJ93] Graph 130 by 52 bit Realistic Crossover disruptive, Complex, Little pre ceding work, Sparse [MK93] TSP 7,000 link Widely studied "By edge" costs, Sparse [SMM + 91] [VJ93] GP S-expr ession Complex, Little pre ceding work [ABN94] Expans ive Coding 7; 000 fi n com plex Crossover friendly Complex,
Reference: [Dav91] <editor> Lawrence Davis, editor. </editor> <booktitle> Handbook of Genetic Algorithms. </booktitle> <publisher> Van Nostrand Reinhold, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: Figure 5 shows this schematically, whilst the dotted line on Figure 6 shows an order in which lines are considered. This approach of hybridising a GA with a problem specific heuristic has been widely studied. <ref> [Dav91] </ref> for example firmly advocates using hybrid GAs when attempting to solve difficult real world problems.
Reference: [Dun93] <author> R. M. Dunnett. </author> <title> A proposal to use a genetic algorithm for maintenance planning. PSBM note, National Grid, </title> <institution> Technology and Science Laboratories, </institution> <month> July </month> <year> 1993. </year> <title> Private communication. </title>
Reference-contexts: Earlier work [Lan95] investigated creating electrical network maintenance plans using Genetic Algorithms on a demonstration four node test problem devised by NGC <ref> [Dun93] </ref>. [Lan95] showed the combination of a Genetic Algorithm using an order or permutation chromosome combined with hand coded "Greedy" schedulers can readily produce an optimal schedule for this problem.
Reference: [FRC93] <author> Hsiao-Lan Fang, Peter Ross, and Dave Corne. </author> <title> A promising genetic algorithm approach to job-shop scheduling, rescheduling and open-shop scheduling problems. </title> <editor> In Stephanie Forrest, editor, </editor> <booktitle> Proceedings of the 5th International Conference on Genetic Algorithms, ICGA-93, </booktitle> <pages> pages 375-382, </pages> <institution> University of Illinois at Urbana-Champaign, </institution> <month> 17-21 July </month> <year> 1993. </year> <note> Morgan Kauf-mann. </note>
Reference-contexts: studied "By edge" costs, Sparse [SMM + 91] [VJ93] GP S-expr ession Complex, Little pre ceding work [ABN94] Expans ive Coding 7; 000 fi n com plex Crossover friendly Complex, Little pre ceding work [BBM93] "Greedy Optimiz ation" 130 line id Good crossover, Compact, Widely studied Fitness evaluation expensive [Sys91] <ref> [FRC93] </ref> In the linear, 2D and TSP structures every attempt should be made to keep electrically close lines close to each other in the representation. The graph representation has the advantage that this can be naturally built into the chromosome. <p> Hybrid GAs, of various sorts, have been used on a number of scheduling problems (e.g. flight crew 9 scheduling [Lev94], task scheduling [Sys91] and job-shop and open-shop scheduling <ref> [FRC93, FRC94, YN92] </ref>). 8 South Wales Problem without Contingencies 8.1 Greedy Scheduler The greedy scheduler used is based upon the minimum increase cost greedy scheduler that solved the four node problem (Heuristic 4 in [Lan95]) but modified to take into account maintenance takes four weeks rather than one.
Reference: [FRC94] <author> Hsiao-Lan Fang, Peter Ross, and Dave Corne. </author> <title> A promising hybrid GA/heuristic approach for open-shop scheduling problems. </title> <editor> In A. Cohn, editor, </editor> <booktitle> ECAI 94 Proceedings of the 11th Eu-ropean Conference on Artificial Intelligence, </booktitle> <pages> pages 590-594, </pages> <address> Amsterdam, The Netherlands, August 8-12 1994. </address> <publisher> John Wiley & Sons, Ltd. </publisher>
Reference-contexts: Hybrid GAs, of various sorts, have been used on a number of scheduling problems (e.g. flight crew 9 scheduling [Lev94], task scheduling [Sys91] and job-shop and open-shop scheduling <ref> [FRC93, FRC94, YN92] </ref>). 8 South Wales Problem without Contingencies 8.1 Greedy Scheduler The greedy scheduler used is based upon the minimum increase cost greedy scheduler that solved the four node problem (Heuristic 4 in [Lan95]) but modified to take into account maintenance takes four weeks rather than one.
Reference: [Gol89] <author> David E. Goldberg. </author> <title> Genetic Algorithms in Search Optimization and Machine Learning. </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: Table 1 summarises the GA representations investigated ([Sha94] gives a bibliography of GAs used on many scheduling problems). Table 1: Possible chromosomes for the maintenance scheduling problem Organiz ation Size Gene Expected Benefit Disadvantages Selected References Linear 7,000 bit Simple Crossover disruptive, Too long, No struc ture, Sparse <ref> [Gol89] </ref> 2D 130 by 52 bit Simple, Obvious temporal structure Crossover disruptive, Still very big, No grid structure, Sparse [CH93] [VJ93] Graph 130 by 52 bit Realistic Crossover disruptive, Complex, Little pre ceding work, Sparse [MK93] TSP 7,000 link Widely studied "By edge" costs, Sparse [SMM + 91] [VJ93] GP S-expr <p> The graph representation has the advantage that this can be naturally built into the chromosome. With a simple linear chromosome, Holland or multi-point crossover <ref> [Gol89] </ref>, would appear to be too disruptive to solve the problem. A simple example illustrates this. Suppose lines L 1 and L 2 are close together. It will often be the case that good solutions maintain one or the other but neither at the same time. <p> The first makes no change to the fitness whilst the second and third make it worse. That is, we would expect crossover to have difficulty assembling better solutions from good "building blocks" <ref> [Gol89] </ref>. The same problem appears in the temporal dimension and so affects the first three representations given in Table 1. <p> These components are not combined instead selection for reproduction and replacement uses Pareto tournaments and fitness niches <ref> [Gol89] </ref>. The cost and CPU penalty are determined when the individual is created but the novelty reward is dynamic and may change whilst the individual is within the population. The CPU penalty is the mean number of primitives evaluated per line.
Reference: [Gor95] <author> T. G. W. Gordon. </author> <title> Schedule optimisation using genetic algorithms. </title> <type> Master's thesis, </type> <institution> University College, </institution> <address> London, </address> <month> October </month> <year> 1995. </year>
Reference-contexts: I.e. K is 4,000 MW and S = 5. In general the balance between the costs of maintenance and the (typically unknown) costs of not maintaining a plant item is complex. Such choices are beyond the scope of this work, however <ref> [Gor95] </ref> verified the values used for the four node problem are applicable to the South Wales region. 6 The Chromosome Various ways of representing schedules within the GA, were considered.
Reference: [Gri95] <author> C. A. Grimes. </author> <title> Application of genetic techniques to the planning of railway track maintenance work. </title> <editor> In A. M. S. Zalzala, editor, </editor> <booktitle> First International Conference on Genetic Algorithms in Engineering Systems: Innovations and Applications, GALESIA, </booktitle> <volume> volume 414, </volume> <pages> pages 467-472, </pages> <address> Sheffield, UK, </address> <month> 12-14 September </month> <year> 1995. </year> <pages> IEE. </pages>
Reference-contexts: (read 2))) (read 0) (PROG2 (set 1 i0) (set 0 (SUB (read ((ADD i0 (read (SUB 0 (ADD 1 1)))))) (read 2)))) 0)) (read 1)))))))) 16 9.7 Other GP Approaches Genetic Programming has been used in other scheduling problems, notably Job Shop Scheduling [ABN94] and scheduling maintenance of railway track <ref> [Gri95] </ref>. An approach based on [ABN94] which used a chromosome with a separate tree per task (i.e. line) to be maintained was tried. However unlike [ABN94] there was no central coordinating heuristic to ensure "the system's coherence" and each tree was free to schedule its line independent of the others.
Reference: [Hol92] <author> John H. Holland. </author> <title> Adaptation in Natural and Artificial Systems: An Introductory Analysis with Applications to Biology, </title> <booktitle> Control and Artificial Intelligence. </booktitle> <publisher> MIT Press, </publisher> <year> 1992. </year> <note> First Published by University of Michigan Press 1975. </note>
Reference-contexts: This paper describes work by NGC's Technology and Science Laboratories and University College London which investigates the feasibility of generating practical and economic maintenance schedules using genetic algorithms (GAs) <ref> [Hol92] </ref>.
Reference: [Koz92] <author> John R. Koza. </author> <title> Genetic Programming: On the Programming of Computers by Natural Selection. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, USA, </address> <year> 1992. </year>
Reference-contexts: Where these primitives take arguments, they are checked to see if they are within the legal range. If not the primitive normally evaluates to 0.0 9.3 Mutation Approximately 90% of new individuals are created by crossover between two parents using GP crossover (as <ref> [Koz92] </ref> except only one individuals is created at a time). The remainder are created by mutating a copy of a single parent. Two forms of mutation are used with equal likelihood. In subtree mutation [Koz92] a single node within the program is chosen at random. <p> Approximately 90% of new individuals are created by crossover between two parents using GP crossover (as <ref> [Koz92] </ref> except only one individuals is created at a time). The remainder are created by mutating a copy of a single parent. Two forms of mutation are used with equal likelihood. In subtree mutation [Koz92] a single node within the program is chosen at random. This is the root of a subtree which is removed and replaced with a randomly generated new subtree.
Reference: [Lan95] <author> W. B. Langdon. </author> <title> Scheduling planned maintenance of the national grid. </title> <editor> In Terence C. Fogarty, editor, </editor> <booktitle> Evolutionary Computing, number 993 in Lecture Notes in Computer Science, </booktitle> <pages> pages 132-153. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: This paper describes work by NGC's Technology and Science Laboratories and University College London which investigates the feasibility of generating practical and economic maintenance schedules using genetic algorithms (GAs) [Hol92]. Earlier work <ref> [Lan95] </ref> investigated creating electrical network maintenance plans using Genetic Algorithms on a demonstration four node test problem devised by NGC [Dun93]. [Lan95] showed the combination of a Genetic Algorithm using an order or permutation chromosome combined with hand coded "Greedy" schedulers can readily produce an optimal schedule for this problem. <p> Earlier work <ref> [Lan95] </ref> investigated creating electrical network maintenance plans using Genetic Algorithms on a demonstration four node test problem devised by NGC [Dun93]. [Lan95] showed the combination of a Genetic Algorithm using an order or permutation chromosome combined with hand coded "Greedy" schedulers can readily produce an optimal schedule for this problem. <p> For the four node problem this was done by calculating the line costs associated with many feasible schedules <ref> [Lan95, page 140] </ref>. This gave the highest feasible line cost as being 3870MW weeks. K was set to 4,000 MW weeks, so that any schedule which failed to maintain even one line would have a higher cost that the worst "reasonable" schedule which maintains them all. <p> scheduling problems (e.g. flight crew 9 scheduling [Lev94], task scheduling [Sys91] and job-shop and open-shop scheduling [FRC93, FRC94, YN92]). 8 South Wales Problem without Contingencies 8.1 Greedy Scheduler The greedy scheduler used is based upon the minimum increase cost greedy scheduler that solved the four node problem (Heuristic 4 in <ref> [Lan95] </ref>) but modified to take into account maintenance takes four weeks rather than one. Briefly the greedy scheduler (cf. Fig. 5) is presented with each line in the order determined by the GA chromosome. <p> Notice the expected number of changes rises linearly with the size of the tree. 9.4 Constructing the Initial Population The initial population was created from two "seed" individuals. These are the GA heuristics described in Section 8.1 and <ref> [Lan95, page 141] </ref>, re-written as GP individuals using the primitives described in Section 9.2 and modified for the South Wales region (see Figures 8 and 9). Half the remaining population is created from each seed by making a copy of it and then mutating the copy.
Reference: [Lev94] <author> David Levine. </author> <title> A Parallel Genetic Algorithm for the Set Partitioning Problem. </title> <type> PhD thesis, </type> <institution> Illinois Institute of Technology, Mathematics and Computer Science Division, Argonne National Laboratory, </institution> <address> 9700 South Cass Avenue, Argonne, IL 60439, USA, </address> <month> May </month> <year> 1994. </year> <month> 23 </month>
Reference-contexts: Hybrid GAs, of various sorts, have been used on a number of scheduling problems (e.g. flight crew 9 scheduling <ref> [Lev94] </ref>, task scheduling [Sys91] and job-shop and open-shop scheduling [FRC93, FRC94, YN92]). 8 South Wales Problem without Contingencies 8.1 Greedy Scheduler The greedy scheduler used is based upon the minimum increase cost greedy scheduler that solved the four node problem (Heuristic 4 in [Lan95]) but modified to take into account maintenance
Reference: [MK93] <author> M. L. Maher and S. Kundu. </author> <title> Adaptive design using a genetic algorithm. </title> <editor> In John S. Gero and Fay Sudweeks, editors, </editor> <booktitle> Formal design methods for computer-aided design, </booktitle> <pages> pages 211-228, </pages> <institution> University of Sydney, NSW, Australia, </institution> <month> Jun </month> <year> 1993. </year> <title> Key Center of Design Computing, </title> <institution> University of Sydney. </institution>
Reference-contexts: Disadvantages Selected References Linear 7,000 bit Simple Crossover disruptive, Too long, No struc ture, Sparse [Gol89] 2D 130 by 52 bit Simple, Obvious temporal structure Crossover disruptive, Still very big, No grid structure, Sparse [CH93] [VJ93] Graph 130 by 52 bit Realistic Crossover disruptive, Complex, Little pre ceding work, Sparse <ref> [MK93] </ref> TSP 7,000 link Widely studied "By edge" costs, Sparse [SMM + 91] [VJ93] GP S-expr ession Complex, Little pre ceding work [ABN94] Expans ive Coding 7; 000 fi n com plex Crossover friendly Complex, Little pre ceding work [BBM93] "Greedy Optimiz ation" 130 line id Good crossover, Compact, Widely studied
Reference: [Ros94] <author> Peter Ross. About PGA 2.8, </author> <year> 1994. </year> <note> Available via ftp ftp.dai.ed.ac.uk directory pub/pga-2.8. </note>
Reference-contexts: This coupled with the sparseness of the chromosome (about 1 bit in 50 set) and other difficulties, has led to the decision to try a "greedy optimisation" representation. ([Gor95] used a linear chromosome with non-binary alleles <ref> [Ros94] </ref> to solve the four node problem but was less successful on the South Wales problem). 8 7 Greedy Optimisers The approach taken so far to solving the power transmission network maintenance scheduling problem has been to split the problem in two; a GA and a "greedy optimiser".
Reference: [RT94] <author> J. L. Ribeiro Filho and P. Treleaven. </author> <title> GAME: A framework for programming genetic algorithms applications. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computing Proceedings of the 1994 IEEE World Congress on Computational Intelligence, </booktitle> <volume> volume 2, </volume> <pages> pages 840-845, </pages> <address> Orlando, USA, 26 June-2 July 1994. </address> <publisher> IEEE Press. </publisher>
Reference-contexts: However we can gain some reassurance from the fact that the GA which optimally solved the four node problem also produced good solutions to the bigger regional problem. This give us some comfort as we increase the problem size again. A Using QGAME QGAME <ref> [RT94] </ref> was used in all the GA experiments on grid scheduling problems. In every case the genetic algorithm contain a single population of 20 individuals, each contained a chromosome which consisted of a permutation of the lines to be scheduled. Permutation crossover and default parameters were used (see Table 4).
Reference: [Sha94] <author> Jane Shaw. </author> <title> References on the application of genetic algorithms to production scheduling, </title> <month> June </month> <year> 1994. </year> <note> Available via anonymous ftp site cs.ucl.ac.uk file genetic/biblio/ga-js-shed-bibliography.txt. </note>
Reference: [SMM + 91] <author> T. Starkweather, S. McDaniel, K. Mathias, D. Whitley, and C. Whitley. </author> <title> A comparison of genetic sequencing operators. </title> <editor> In Richard K. Belew and Lashon B. Booker, editors, </editor> <booktitle> Proceedings of the fourth international conference on Genetic Algorithms, </booktitle> <pages> pages 69-76, </pages> <address> University of California - San Diego, La Jolla, CA, USA, 13-16 July 1991. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: long, No struc ture, Sparse [Gol89] 2D 130 by 52 bit Simple, Obvious temporal structure Crossover disruptive, Still very big, No grid structure, Sparse [CH93] [VJ93] Graph 130 by 52 bit Realistic Crossover disruptive, Complex, Little pre ceding work, Sparse [MK93] TSP 7,000 link Widely studied "By edge" costs, Sparse <ref> [SMM + 91] </ref> [VJ93] GP S-expr ession Complex, Little pre ceding work [ABN94] Expans ive Coding 7; 000 fi n com plex Crossover friendly Complex, Little pre ceding work [BBM93] "Greedy Optimiz ation" 130 line id Good crossover, Compact, Widely studied Fitness evaluation expensive [Sys91] [FRC93] In the linear, 2D and
Reference: [Sys91] <author> Gilbert Syswerda. </author> <title> Schedule optimization using genetic algorithms. </title> <editor> In Lawrence Davis, editor, </editor> <booktitle> Handbook of Genetic Algorithms, </booktitle> <pages> pages 332-349. </pages> <publisher> Van Nostrand Reinhold, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: Widely studied "By edge" costs, Sparse [SMM + 91] [VJ93] GP S-expr ession Complex, Little pre ceding work [ABN94] Expans ive Coding 7; 000 fi n com plex Crossover friendly Complex, Little pre ceding work [BBM93] "Greedy Optimiz ation" 130 line id Good crossover, Compact, Widely studied Fitness evaluation expensive <ref> [Sys91] </ref> [FRC93] In the linear, 2D and TSP structures every attempt should be made to keep electrically close lines close to each other in the representation. The graph representation has the advantage that this can be naturally built into the chromosome. <p> Hybrid GAs, of various sorts, have been used on a number of scheduling problems (e.g. flight crew 9 scheduling [Lev94], task scheduling <ref> [Sys91] </ref> and job-shop and open-shop scheduling [FRC93, FRC94, YN92]). 8 South Wales Problem without Contingencies 8.1 Greedy Scheduler The greedy scheduler used is based upon the minimum increase cost greedy scheduler that solved the four node problem (Heuristic 4 in [Lan95]) but modified to take into account maintenance takes four weeks
Reference: [TV95] <author> Astro Teller and Manuela Veloso. </author> <title> Program evolution for data mining. </title> <journal> The International Journal of Expert Systems, </journal> <volume> 8(3) </volume> <pages> 216-236, </pages> <year> 1995. </year>
Reference-contexts: This is allowed by repeatedly calling the evolved program, so having processed all 42 tasks it called again for the first, and then the second, and the third and so on. Processing continues until a fixed CPU limit is exceeded (cf. PADO <ref> [TV95] </ref>).
Reference: [VJ93] <author> Christine L. Valenzuela and Antonia J. Jones. </author> <title> Evolutionary divide and conquer (I): novel genetic approach to the TSP. </title> <journal> Evolutionary Computation, </journal> <volume> 1(4) </volume> <pages> 313-333, </pages> <year> 1993. </year>
Reference-contexts: Table 1: Possible chromosomes for the maintenance scheduling problem Organiz ation Size Gene Expected Benefit Disadvantages Selected References Linear 7,000 bit Simple Crossover disruptive, Too long, No struc ture, Sparse [Gol89] 2D 130 by 52 bit Simple, Obvious temporal structure Crossover disruptive, Still very big, No grid structure, Sparse [CH93] <ref> [VJ93] </ref> Graph 130 by 52 bit Realistic Crossover disruptive, Complex, Little pre ceding work, Sparse [MK93] TSP 7,000 link Widely studied "By edge" costs, Sparse [SMM + 91] [VJ93] GP S-expr ession Complex, Little pre ceding work [ABN94] Expans ive Coding 7; 000 fi n com plex Crossover friendly Complex, Little <p> ture, Sparse [Gol89] 2D 130 by 52 bit Simple, Obvious temporal structure Crossover disruptive, Still very big, No grid structure, Sparse [CH93] <ref> [VJ93] </ref> Graph 130 by 52 bit Realistic Crossover disruptive, Complex, Little pre ceding work, Sparse [MK93] TSP 7,000 link Widely studied "By edge" costs, Sparse [SMM + 91] [VJ93] GP S-expr ession Complex, Little pre ceding work [ABN94] Expans ive Coding 7; 000 fi n com plex Crossover friendly Complex, Little pre ceding work [BBM93] "Greedy Optimiz ation" 130 line id Good crossover, Compact, Widely studied Fitness evaluation expensive [Sys91] [FRC93] In the linear, 2D and TSP structures every
Reference: [YN92] <author> Takeshi Yamada and Ryohei Nakano. </author> <title> A genetic algorithm applicable to large-scale job-shop problems. </title> <editor> In R Manner and B Manderick, editors, </editor> <booktitle> Parallel Problem Solving from Nature 2, </booktitle> <pages> pages 281-290, </pages> <address> Brussels, Belgium, 1992. </address> <publisher> Elsevier Science. </publisher> <pages> 24 </pages>
Reference-contexts: Hybrid GAs, of various sorts, have been used on a number of scheduling problems (e.g. flight crew 9 scheduling [Lev94], task scheduling [Sys91] and job-shop and open-shop scheduling <ref> [FRC93, FRC94, YN92] </ref>). 8 South Wales Problem without Contingencies 8.1 Greedy Scheduler The greedy scheduler used is based upon the minimum increase cost greedy scheduler that solved the four node problem (Heuristic 4 in [Lan95]) but modified to take into account maintenance takes four weeks rather than one.
References-found: 24

