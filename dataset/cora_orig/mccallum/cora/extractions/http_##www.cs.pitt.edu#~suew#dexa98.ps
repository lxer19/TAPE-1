URL: http://www.cs.pitt.edu/~suew/dexa98.ps
Refering-URL: http://www.cs.pitt.edu/~suew/
Root-URL: http://www.cs.pitt.edu/~suew
Title: Programming Views for Mobile Database Clients  
Author: Susan Weissman Lauzac, Panos K. Chrysanthis 
Address: Pittsburgh, Pittsburgh, PA 15260  
Affiliation: Department of Computer Science University of  
Abstract: Within a database mobile environment, cached data on mobile clients can take the form of materialized views. In order to efficiently maintain such materialized views while taking into consideration disconnected operations, in this paper, we present the view holder, a mechanism within the fixed network that maintains versions of views. Further, we propose an extension to SQL that enables the programming of the view holders by the mobile clients based on their preferences and capabilities and discuss their implementation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Bailey, G. Dong, M. Mohania, X. Wang. </author> <title> Efficient Incremental View Maintenance Using Tagging in Dis tributed Databases. </title> <type> TR 95-37, </type> <institution> U. of Melbourne, </institution> <year> 1995. </year>
Reference-contexts: This creates a great deal of traffic within the fixed network, especially if many MHs are requesting the same view query. 3 View Holders To alleviate the problems discussed, without requiring modifications to the existing databases and data warehouses (i.e., unlike solutions presented in <ref> [1] </ref>), we developed a versioning mechanism, called the view holder, for maintaining the materialized views requested by a mobile host. Every application on a mobile host uses only a subset of the data that exists in the data sources DS including our data warehouse.
Reference: [2] <author> L. S. Colby, A. Kawaguchi, D. F. Lieuwen, I. Mumick. </author> <title> Supporting Multiple View Maintenance Polices. </title> <booktitle> the ACM SIGMOD Conf., </booktitle> <pages> pp. 405-416, </pages> <year> 1997. </year>
Reference: [3] <institution> Aglets Workbench. by IBM Japan Research Group. </institution> <note> Web site: http://aglets.trl.ibm.co.jp </note>
Reference-contexts: SELECT FROM ... If updated materialize view Materialize View SELECT FROM ... 4.3 Implementation Issues Our implementation approach for executing the monitoring program at the data sources is to utilize an Aglet. Aglets are mobile Internet agents in Java <ref> [3] </ref> that can be dispatched from the view holder and sent to a remote host for execution. If the aglets are equipped with database capabilities they become mobile database agents [8] that can connect to a remote data server, execute the monitoring program, and fetch any updates (see Figure 3).
Reference: [4] <author> T. Imielinski, S. Viswanathan, B. R. Badrinath. </author> <title> Querying in Highly Mobile Environments. </title> <booktitle> the 18th VLDB Conf., </booktitle> <pages> pp. 41-52, </pages> <month> Aug. </month> <year> 1992. </year>
Reference-contexts: The information stored can take the form of materialized views that operate in a fashion similar to data caches in distributed systems. Thus, the role of materialized views and view maintenance as a caching scheme is becoming increasingly important in the context of mobile database applications <ref> [4] </ref>. Specifically, there is a need for a dynamic and customizable view maintenance mechanism so that the cache or view consistency achieved between the data stored on the mobile host and the data sources match the availability or cost of the network and the capabilities of the mobile host.
Reference: [5] <author> A. Kawaguchi, D. Lieuwen, D. Mumick, D. Quass, K. A. Ross. </author> <title> Concurrency Control Theory for Deferred Materialized Views. </title> <booktitle> the 1997 ICDT, </booktitle> <month> Jan. </month> <year> 1997. </year>
Reference: [6] <author> J. J. Kistler and M. Satyanarayanan. </author> <title> Disconnected Operation in the Coda File System. </title> <journal> ACM Trans. on Computer Sys., </journal> <volume> 10(1) </volume> <pages> 3-25, </pages> <month> Feb. </month> <year> 1992. </year>
Reference-contexts: For a specific application environment, the MH can request that a view holder maintains this superview SV of the data that it could possibly need. Then the MH can cache or hoard <ref> [6] </ref> a subset of this superview SV before a period of disconnection or a weak connection. In the example given, the mobile machine may not have the ability to store all the data regarding every store that sells racquetball equipment in every city from the query RqballSales.
Reference: [7] <author> P. Krishna, N. H. Vaidya, D. K. Prodhan. </author> <title> Static and Adaptive Location Management in Mobile Wireless Networks. </title> <journal> J. Computer Comm., </journal> <volume> 19(4), </volume> <month> Mar. </month> <year> 1996. </year>
Reference: [8] <author> S. Papastavrou and G. Samaras. </author> <title> The Development of DBMS Client/Server Applications on the Web using Java Mobile Agents. </title> <type> TR 98-5, </type> <institution> U. of Cyprus, </institution> <year> 1998. </year>
Reference-contexts: Aglets are mobile Internet agents in Java [3] that can be dispatched from the view holder and sent to a remote host for execution. If the aglets are equipped with database capabilities they become mobile database agents <ref> [8] </ref> that can connect to a remote data server, execute the monitoring program, and fetch any updates (see Figure 3). After receiving updates from an issued aglet, it is the view holder's responsibility to process the updates and present the MH with specific view data changes.
Reference: [9] <author> A. P. Sistla, O. Wolfson, S. Chamberlain, S. Dao. </author> <title> Mod eling and Querying Mobile Objects. </title> <booktitle> the 13th ICDE, </booktitle> <pages> pp. 422-431, </pages> <month> Apr. </month> <year> 1997. </year>
Reference: [10] <author> D. Quass and J. Widom. </author> <title> On-Line Warehouse View Maintenance for Batch Updates. </title> <booktitle> the ACM SIGMOD Conf., </booktitle> <pages> pp. 147-158, </pages> <month> May </month> <year> 1997. </year>
Reference-contexts: Let us assume that the data warehouse is maintained by a versioning algorithm, such as "two version no locking" <ref> [10] </ref>, where one or more versions may be available for the readers at any time. However, our data servers do not support any versioning mechanism. 2.1 The Data Servers and Warehouse Our data servers contain base tables regarding some sporting goods stores (Table 1). <p> This is in contrast to a single reader session, in a data warehousing environment, where each consecutive query comes from the same version <ref> [10] </ref>. Another difference to consider is that, in a data warehousing scenario, view maintenance is achieved by forcing the client or MH to receive a new version of the materialized view. However, such a view maintenance strategy is not suitable and potentially very expensive for a MH. <p> from the limited resources of the MH and wireless networking conditions: * In some versioning algorithms, once many maintenance transactions occur within the data warehouse and the data is considered too old, the user must end its current work and gather a new version because the older one has expired <ref> [10] </ref>.
Reference: [11] <author> N. Roussopoulos. </author> <title> Materialized Views and Data Ware houses. </title> <booktitle> SIGMOD record, </booktitle> <volume> 27(1) </volume> <pages> 21-26, </pages> <month> Mar. </month> <year> 1998. </year>
Reference-contexts: When a view holder is required to maintain a particular view, the view specification can be seen as a program specification <ref> [11] </ref>. Further, a view holder can be programmed to maintain multiple versions of a view in order to compensate for the data changes that oc-cured to the materialized views that were used during disconnection. In the next section, by means of an example, we motivate the need of view holders. <p> Every time the view "program" is executed, the view is re-materialized <ref> [11] </ref>. It is the view holder's responsibility to monitor the sources and rematerialize the data when changes have occurred, since the MH does not have the resources to do this work.
Reference: [12] <author> G. Walborn and P. </author> <title> Chrysanthis. </title> <booktitle> Pro-motion: Man agement of Mobile Transactions. the 11th ACM SAC, </booktitle> <pages> pp. 171-181, </pages> <month> Mar. </month> <year> 1997. </year>
Reference-contexts: Currently, we are working on implementing view holders using Java agents in conjunction with PRO-MOTION, Aglet Replicated Data Server Server Data Aglet Data Holder Warehouse View our mobile transaction infrastructure <ref> [12] </ref>.
Reference: [13] <author> S. Weissman Lauzac and P. K. Chrysanthis. </author> <title> Utilizing Versions of Views within a Mobile Environment. </title> <booktitle> the 9th ICCI, </booktitle> <month> Jun. </month> <year> 1998. </year>
Reference-contexts: In this paper, we present such a mechanism in the form of a proxy within the fixed network that can assume different roles in order to provide a customizable client-oriented "data warehouse" mechanism which we will call the view holder <ref> [13] </ref>. In contrast to its warehouse counterpart, a view holder is not as static or generic, and maintains a state fl This work is supported in part by the National Science Foundation under grant IRI-95020091 with respect to the individual mobile clients it supports. <p> View holders can be implemented via a data structure called the tuple version list (TVL). These TVLs and the algorithms that maintain them and compute are described in <ref> [13] </ref>. It is possible some of the data sources including data warehouses may not support explicit versions of data. In such a case, the view holder will create an implicit "version" by querying the source in order to extract the data at a given moment.
Reference: [14] <author> J. E. Widom. </author> <title> Special Issue on Materialized Views and Data Warehousing. </title> <journal> IEEE DE Bulletin, </journal> <volume> 18(2), </volume> <month> Jun. </month> <year> 1995. </year>
Reference: [15] <author> Y. Zhuge, H. Garcia-Molina, J. Hammer, J. Widom. </author> <title> View Maintenance in a Warehousing Environment. </title> <booktitle> the ACM SIGMOD Conf., </booktitle> <pages> pp. 316-327, </pages> <year> 1995. </year>
References-found: 15

