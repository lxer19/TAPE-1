URL: http://www.cs.cmu.edu/afs/cs/user/dennis/www/theory/sample.ps
Refering-URL: http://www.cs.cmu.edu/afs/cs/user/dennis/www/theory/acmstyle.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: yuan@cs.ualberta.ca  you@cs.ualberta.ca  
Title: Coherence Approach to Logic Program Revision  
Author: Li-Yan Yuan Jia-Huai You 
Address: Edmonton Canada T6G 2H1  Edmonton Canada T6G 2H1  
Affiliation: Computing Science University of Alberta  Computing Science University of Alberta  
Abstract: We present a new approach to the problem of revising extended programs, based on the coherence theory initially advocated by Gardenfors for belief revision. Our approach resolves contradiction by removing only conflicting information, not the believed source of it, and therefore, keeps information loss minimal. Furthermore, since there is no need of searching for problematic assumptions, as is done in the traditional assumption-removal approach, our approach provides a skeptical revision semantics that is tractable. We define the skeptical and credulous coherence semantics and show that both semantics can be characterized in terms of the fixpoint semantics of a revised program using a simple program revision technique. These semantics provide a suitable framework for knowledge and belief revision in the context of logic programs. Semantical properties and advantages of the proposed revision semantics are also analyzed. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.J. Alferes, C. V. Damasio, and L. M. Pereira. </author> <title> Top-down query evaluation for well-founded semantics with explicit negation. </title> <booktitle> In Proc. ECAI '94, </booktitle> <pages> pages 140-144, </pages> <year> 1994. </year>
Reference-contexts: The principle of relevance requires that the values of the literals in a set be determined by only those clauses that define them [3, 8]. Relevance has been considered essential in any goal-directed query evaluation <ref> [1] </ref> while the goal-directed theoretical characterization forms suitable bases for logic programming [9]. The following example demonstrates that the assumption removal approach may violate relevance.
Reference: [2] <author> J.J. Alferes, P. Dung, and L. Pereira. </author> <title> Scenario semantics of extended logic programs. </title>
Reference: [3] <author> J. Dix. </author> <title> A framework for representing and characterizing semantics of logic programs. </title> <booktitle> In Proceedings of the KR'92, </booktitle> <pages> pages 591-602, </pages> <year> 1992. </year>
Reference-contexts: The principle of relevance requires that the values of the literals in a set be determined by only those clauses that define them <ref> [3, 8] </ref>. Relevance has been considered essential in any goal-directed query evaluation [1] while the goal-directed theoretical characterization forms suitable bases for logic programming [9]. The following example demonstrates that the assumption removal approach may violate relevance.
Reference: [4] <author> J. Dix. </author> <title> A classification theory of semantics of normal logic programs: II. weak properties. </title> <note> to appear, </note> <year> 1994. </year>
Reference-contexts: We also analyze the semantical properties of the proposed revision semantics and show that these semantics satisfy conservatism and relevance, among a number of properties along the line similar to that of Dix <ref> [4] </ref>. 2 Conclusions The coherence approach to logic program revision is based on the idea that contradiction may be resolved by removing only conflicting information, without searching for believed source of conflict. We have demonstrated that this approach satisfies many desirable properties, inclosing the conservatism and relevance.
Reference: [5] <author> P. M. Dung. </author> <title> An argumentation semantics for logic programming with explicit negation. </title> <booktitle> In Proc. the 10th ICLP Programming, </booktitle> <pages> pages 615-630. </pages> <publisher> The MIT Press, </publisher> <year> 1993. </year>
Reference-contexts: The work of the first author was performed while visiting the ISIS, Fujitsu Labs, Numazu, Japan. 1 The assumptions here refer to the values of the default negations. mechanisms may be used for the removal. Three notable examples are the contradiction removal semantics [10], the argumentation semantics <ref> [5] </ref>, and the assumption denial semantics [14]. The assumption removal approach, though avoiding contradictory conclusions caused by negation as failure, is not suitable for many applications, such as knowledge and belief revision. <p> The assumption-removal approach, though avoiding contradiction, does not address the consequences of assumption removal. As such, conservatism may not hold. Example 1.1 Consider below :a notb; a ; c not:a; and the credulous argumentation semantics <ref> [5] </ref>. With each negative literal :ff viewed as a named proposition ff, the credulous argumentation semantics of does not imply c, which demonstrates that c is not true with respect to the credulous argumentation semantics without involving any revision mechanism. <p> Furthermore, the assumption removal approach suffers com--putationally from finding a minimal set of problematic assumptions. This is the cause of intractability in the contradiction removal semantics, as shown in [12], and in the grounded version of the ideal skeptical semantics, as shown in [13]. Although Dung's grounded argumentation semantics <ref> [5] </ref> does not attempt to compute a minimal removal set, it is also NP-hard since it is NP-complete to determine if an atom is derivable from a sound argument [13], an essential property in attack and counterattack relationships.
Reference: [6] <author> Peter Gardenfors, </author> <title> editor. Belief Revision. </title> <publisher> Cambridge University Press, </publisher> <year> 1992. </year>
Reference-contexts: One of the basic postulates in knowledge revision is that of conservatism which requires that any conclusions derived from a revised system be derivable from the system prior to the revision <ref> [6] </ref>. The assumption-removal approach, though avoiding contradiction, does not address the consequences of assumption removal. As such, conservatism may not hold. Example 1.1 Consider below :a notb; a ; c not:a; and the credulous argumentation semantics [5]. <p> In this paper, we present an alternative approach, based on the coherence theory <ref> [6] </ref>, to removing contradiction from extended programs. This approach provides a suitable semantics for knowledge and belief revision in the framework of logic programs.
Reference: [7] <author> M. Gelfond and V. Lifschitz. </author> <title> Logical programs with classical negation. </title> <booktitle> In Proceedings of the 7th International Conference on Logic Programming, </booktitle> <pages> pages 579-597. </pages> <publisher> The MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: 1 Introduction The extension of logic programs with classical negation significantly increases the expressive power of logic programs, but also presents new challenges <ref> [7] </ref>. Among other things, the contradiction problem brought up by classical negation has to be addressed. Unlike normal programs, an extended program with classical negation may not be consistent.
Reference: [8] <author> Y. Hu and L. Y. Yuan. </author> <title> Extended well founded semantics for logic programs with negations. </title> <booktitle> In Proceedings of the 8th International Conference on Logic Programming, </booktitle> <pages> pages 412-425. </pages> <publisher> The MIT Press, </publisher> <year> 1991. </year>
Reference-contexts: The principle of relevance requires that the values of the literals in a set be determined by only those clauses that define them <ref> [3, 8] </ref>. Relevance has been considered essential in any goal-directed query evaluation [1] while the goal-directed theoretical characterization forms suitable bases for logic programming [9]. The following example demonstrates that the assumption removal approach may violate relevance.
Reference: [9] <author> D. Miller, G. Nadathur, F. Pfenning, and A. Scedrov. </author> <title> Uniform proofs as a foundation for logic programming. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 51 </volume> <pages> 125-157, </pages> <year> 1991. </year>
Reference-contexts: The principle of relevance requires that the values of the literals in a set be determined by only those clauses that define them [3, 8]. Relevance has been considered essential in any goal-directed query evaluation [1] while the goal-directed theoretical characterization forms suitable bases for logic programming <ref> [9] </ref>. The following example demonstrates that the assumption removal approach may violate relevance. Example 1.2 Assume is defined by a notb; :a notb; d notb: To resolve the conflict between a and :a, the assumption-removal semantics has to remove notb. Consequently, d cannot be derived.
Reference: [10] <author> L.M. Pereira, J.J. Alferes, and J.N. Aparicio. </author> <title> Contradiction removal within well founded semantics. </title> <booktitle> In Proc. of the 1st International Workshop on Logic Programming and Nonmonotonic Reasoning, </booktitle> <pages> pages 106-119, </pages> <year> 1991. </year>
Reference-contexts: The work of the first author was performed while visiting the ISIS, Fujitsu Labs, Numazu, Japan. 1 The assumptions here refer to the values of the default negations. mechanisms may be used for the removal. Three notable examples are the contradiction removal semantics <ref> [10] </ref>, the argumentation semantics [5], and the assumption denial semantics [14]. The assumption removal approach, though avoiding contradictory conclusions caused by negation as failure, is not suitable for many applications, such as knowledge and belief revision.
Reference: [11] <author> M. Wallace. </author> <title> Unrestricted logic programs or if stratification is the cure, </title> <booktitle> what is the malady? In Proc. of European Conference on AI, </booktitle> <pages> pages 682-687, </pages> <year> 1990. </year>
Reference-contexts: A remarkable fact about CJ partial models of a program is that they are fixpoints of a suitably defined operator for program R , which is obtained from by a simple program revision technique: semi-normalizing the doubling program <ref> [11] </ref>. This program revision technique is simple but not trivial, and it gives a natural revision semantics based on the coherence theory.
Reference: [12] <author> C. Witteveen and C. M. Jonker. </author> <title> Revision by expansion in logic programs. </title>
Reference-contexts: Furthermore, the assumption removal approach suffers com--putationally from finding a minimal set of problematic assumptions. This is the cause of intractability in the contradiction removal semantics, as shown in <ref> [12] </ref>, and in the grounded version of the ideal skeptical semantics, as shown in [13].
Reference: [13] <author> J.H. You and R. Cartwright. </author> <title> Tractable argumentation semantics via iterative belief revision. </title> <booktitle> In Proc. of ILPS'94, </booktitle> <pages> pages 239-254, </pages> <year> 1994. </year>
Reference-contexts: Furthermore, the assumption removal approach suffers com--putationally from finding a minimal set of problematic assumptions. This is the cause of intractability in the contradiction removal semantics, as shown in [12], and in the grounded version of the ideal skeptical semantics, as shown in <ref> [13] </ref>. Although Dung's grounded argumentation semantics [5] does not attempt to compute a minimal removal set, it is also NP-hard since it is NP-complete to determine if an atom is derivable from a sound argument [13], an essential property in attack and counterattack relationships. <p> in [12], and in the grounded version of the ideal skeptical semantics, as shown in <ref> [13] </ref>. Although Dung's grounded argumentation semantics [5] does not attempt to compute a minimal removal set, it is also NP-hard since it is NP-complete to determine if an atom is derivable from a sound argument [13], an essential property in attack and counterattack relationships. In this paper, we present an alternative approach, based on the coherence theory [6], to removing contradiction from extended programs. This approach provides a suitable semantics for knowledge and belief revision in the framework of logic programs.
Reference: [14] <author> J.H. You and L.Y. Yuan. </author> <title> Logic programming with assumption denials. </title> <booktitle> In Proc. of the Workshop 5, </booktitle> <address> ICLP'94, </address> <year> 1994. </year>
Reference-contexts: Three notable examples are the contradiction removal semantics [10], the argumentation semantics [5], and the assumption denial semantics <ref> [14] </ref>. The assumption removal approach, though avoiding contradictory conclusions caused by negation as failure, is not suitable for many applications, such as knowledge and belief revision.
References-found: 14

