URL: http://www.cs.umn.edu/Users/dept/users/kencham/design.ps.gz
Refering-URL: http://www.cs.umn.edu/Users/dept/users/kencham/
Root-URL: http://www.cs.umn.edu
Phone: (612)625-4012. Fax (612)625-0572  
Title: Designing an I/O Scheduler for Continuous Media summary, a set of six design equations are
Author: Deepak R. Kenchammana-Hosekote and Jaideep Srivastava 
Keyword: schedulers. Keywords: Multi-media, Continuous media, I/O scheduling, Slack time, Stream operations  
Note: In  to realize such  This author can be contacted at 4-192,  or on Internet at srivasta@cs.umn.edu  
Date: May 11, 1994  
Address: Minneapolis, MN  Building, 200 Union Street S.E., Minneapolis, MN 55455. Ph.  
Affiliation: University of Minnesota,  EECS  
Abstract: A growing set of multi-media applications require continuous flow of high volume data, e.g. video and audio, that can wholly reside only in secondary (and possibly tertiary) storage devices. Additionally, data accessed by such applications have temporal relationships that must be maintained at storage and retrieval time. In order to provide such high volume data in real-time large investment in secondary storage devices and mechanisms is necessary. In order to provide economical access to such data specialized storage servers called Continuous Media (CM) servers must be shared by a large community of users. In this paper we discuss the design of an I/O scheduler that schedules synchronized access to continuous media in real-time from secondary storage devices. To schedule multiple accesses to the storage server, we describe a control system model for a class of cyclical schedulers for continuous media that guarantee data rate. This model is then used to explore different trade-offs like the buffer space and slack time. Configuration issues like main memory requirements and control policies like admission control are then quantitatively analyzed. In addition to simultaneously accessing data, users will execute operations like Play and FastPlay that require data at varying rates, and FastForward and FastReverse operations that require data in a sequence that is different from the original recording. In order to implement such VCR-like operations without affecting data rate guarantees requires a gradual build up of data until a time when it is safe enough to effect them. We describe this phenomenon and the design equation that limits this rate of data build up. Problems involved in feasible implementation of this design are presented. 
Abstract-found: 1
Intro-found: 1
Reference: [AOG92] <author> David Anderson, Yoshitomo Osawa, and R. Govindan. </author> <title> A file system for continuous media. </title> <journal> ACM Transaction on Computer Systems, </journal> <volume> 10(4), </volume> <month> November </month> <year> 1992. </year>
Reference-contexts: With today's hardware technology, designing schemes to schedule concurrent access requests to the storage system of a CM server is expected to be a critical task. A consensus amongst researchers in this area ([RV93], [LS92], <ref> [AOG92] </ref>, [CL93]) indicates that this task is vital to providing various CM data services to clients. This focus is a result of what is being labelled as the I/O-bottleneck problem where the storage devices are fast becoming the bottleneck in a computer system [IEE94]. <p> Prior attempts at deriving solutions using ceilings and f loors have been successful for some cases but do not work in all cases. One previous attempt at deriving integral service vectors has been proposed in <ref> [AOG92] </ref> in which the whole space of integral service vectors is systematically searched to arrive at the smallest possible integral service vector that ensures that no client starves. However, the algorithm suffers from slow convergence to the solution. [KHS93b] gives a systematic approach to deriving an integral service vector. <p> To summarize, DE 2 gives a good starting point for an algorithm solving the integer nonlinear programming, since it is clear that there can exist no solution less that n fl . The algorithm mentioned in <ref> [AOG92] </ref> converges significantly faster when this fact is used. This minimization problem and other techniques to solve it are described in greater detail in [KHS93b]. <p> Fortunately, such parametric optimizations can be easily implemented. 20 n S new n + B k G large G opt G small x transition 7 Related Work The problem of designing a scheduling strategy for continuous media has been addressed by many researchers - [RV93], [LS92], [CL93], <ref> [AOG92] </ref>, [RVG + 93], [KEL94], and [TPBG93]. Each of them have used a cyclical model similar to the one discussed in this paper. [RV93] discuss their approach to designing a multi-user high definition TV (HDTV) system. <p> They use a similar scheduling model to the one described here and had realized the non-linearity of the model. However, a clear exposition of the design trade-offs involved in such a task was not discussed. <ref> [AOG92] </ref> describes a model that lies wholly in the discrete domain, i.e. a scheduling model involving integral service vectors only. They are, to the knowledge of the authors, the first to propose a systematic search of the discrete space. <p> They are, to the knowledge of the authors, the first to propose a systematic search of the discrete space. However, their search technique is slow, but when used in conjunction with DE 2 chan be made to converge faster. <ref> [AOG92] </ref> discusses the use of slack time and studies the effect of balancing CM and non real-time tasks at the CM server. Their findings purport observations made in this paper. [LS92] describes a prototype implementation of a CM server.
Reference: [CL93] <author> Haung-Jen Chen and T.D.C Little. </author> <title> Physical storage organization for time dependent multimedia data. </title> <booktitle> In 4 th Intl. Conference on Foundation of Data Organization and Algorithms, </booktitle> <year> 1993. </year>
Reference-contexts: With today's hardware technology, designing schemes to schedule concurrent access requests to the storage system of a CM server is expected to be a critical task. A consensus amongst researchers in this area ([RV93], [LS92], [AOG92], <ref> [CL93] </ref>) indicates that this task is vital to providing various CM data services to clients. This focus is a result of what is being labelled as the I/O-bottleneck problem where the storage devices are fast becoming the bottleneck in a computer system [IEE94]. <p> Fortunately, such parametric optimizations can be easily implemented. 20 n S new n + B k G large G opt G small x transition 7 Related Work The problem of designing a scheduling strategy for continuous media has been addressed by many researchers - [RV93], [LS92], <ref> [CL93] </ref>, [AOG92], [RVG + 93], [KEL94], and [TPBG93]. Each of them have used a cyclical model similar to the one discussed in this paper. [RV93] discuss their approach to designing a multi-user high definition TV (HDTV) system. <p> Their focus on reducing response times for concurrency set operations is consistent with their customers' demand for a large number of concurrent users. Some other efforts at designing such a scheduler use stochastic approximations and hence, do not provide rate guarantees. <ref> [CL93] </ref> and [DKT94] discuss such efforts. 8 Conclusions There is a growing need for an environment that will provide an integrated access to text, video, audio, etc. A critical challenge in achieving this objective is the retrieval and storage of continuous media data.
Reference: [DKT94] <author> Jayant Dey, , John Kurose, and Don Towsley. </author> <title> VCR Capabilities for Very Large Scale Video On Demand. </title> <type> Technical report, </type> <institution> University of Massachusetts, Amherst, Department of Computer Science, </institution> <address> Amherst, MA, </address> <month> January </month> <year> 1994. </year>
Reference-contexts: Their focus on reducing response times for concurrency set operations is consistent with their customers' demand for a large number of concurrent users. Some other efforts at designing such a scheduler use stochastic approximations and hence, do not provide rate guarantees. [CL93] and <ref> [DKT94] </ref> discuss such efforts. 8 Conclusions There is a growing need for an environment that will provide an integrated access to text, video, audio, etc. A critical challenge in achieving this objective is the retrieval and storage of continuous media data.
Reference: [GR93] <author> S Gandharizadeh and L. Ramos. </author> <title> Continuous retrieval of multimedia data using parallelism. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 5(4), </volume> <month> August </month> <year> 1993. </year>
Reference-contexts: Hence, data throughput per access request increases with the block size. Indeed this effect has been independently observed as: * Improved performance in storage systems with disk arrays, where a larger logical block is striped across a disk array. This effect has been observed by previous work <ref> [GR93] </ref>, [LS92]. * Improved throughput in storage systems with larger block sizes while storing larger data types like full-motion video [LS92]. Example As an example, consider a CM server with a high performance disk, whose disk transfer rate is 1 GBps.
Reference: [IEE94] <institution> IEEE Computer Society. COMPUTER: The I/O Subsystem: A candidate for improvement, </institution> <month> March </month> <year> 1994. </year>
Reference-contexts: This focus is a result of what is being labelled as the I/O-bottleneck problem where the storage devices are fast becoming the bottleneck in a computer system <ref> [IEE94] </ref>. Hence, system resource management and scheduling are critical aspects of a CM server design. There are two critical aspects to this problem, * Managing the storage surfaces, or the data placement problem * Scheduling accesses to the storage system, or the CM scheduling problem.
Reference: [Joh80] <author> Ellis L. Johnson. </author> <title> Integer Programming: Facets, Subadditivity, and Duality for Group and Semi-group Problems. </title> <address> CBMS-NSF, </address> <year> 1980. </year>
Reference-contexts: When this is coupled with the observation that the I/O scheduler is a non-linear system, the problem of deriving integral service vectors for each round k becomes a problem of Integer Programming with NonLinear Constraints <ref> [Joh80] </ref>. It is easy to see that simple ceilings and f loors of the service vector in DE 2 are insufficient to solve the problem because of the non-linear constraints that the service vector must satisfy.
Reference: [KEL94] <author> R. Keller, W. Effelsberg, and B. Lamparter. </author> <title> Performance bottlenecks in digital movie systems. </title> <booktitle> In Proc. of 4 rd Intl. Workshop on Network and Operating Systems, </booktitle> <year> 1994. </year>
Reference-contexts: such parametric optimizations can be easily implemented. 20 n S new n + B k G large G opt G small x transition 7 Related Work The problem of designing a scheduling strategy for continuous media has been addressed by many researchers - [RV93], [LS92], [CL93], [AOG92], [RVG + 93], <ref> [KEL94] </ref>, and [TPBG93]. Each of them have used a cyclical model similar to the one discussed in this paper. [RV93] discuss their approach to designing a multi-user high definition TV (HDTV) system.
Reference: [KHS93a] <author> Deepak Kenchammana-Hosekote and Jaideep Srivastava. </author> <title> Data Placement for Continuous Media. </title> <type> Technical Report TR93-80, </type> <institution> Department of Computer Science, University of Minnesota, </institution> <month> December </month> <year> 1993. </year>
Reference-contexts: Furthermore, we assume that all n k i blocks are fetched before servicing client i + 1. This assumption is realistic since placement strategies for CM streams ([CL93], <ref> [KHS93a] </ref>) try to reduce the inter-block access time between consecutive blocks of a CM stream. <p> of all concurrent accesses (i.e. no client starves), * proceeds in rounds such that data produced in round k is consumed in round k + 1, * has a non-zero fixed cost associated with servicing each independent access ff &gt; 0, and * has finite buffer available to it. 3 <ref> [KHS93a] </ref> describes how related streams, e.g. video and audio streams to be retrieved concurrently, can be placed effectively to reduce this quantity. 5 r 1 r s 1 i s Schedule v T sff svc 6 2.3 Server Capacity Analysis At this point it is worthwhile to explore if the scheduling
Reference: [KHS93b] <author> Deepak Kenchammana-Hosekote and Jaideep Srivastava. </author> <title> Scheduling continuous media in a Video-On-Demand server. </title> <type> Technical Report TR93-75, </type> <institution> Dept. Of Computer Science, University of Minnesota, </institution> <month> November </month> <year> 1993. </year>
Reference-contexts: If b is the block size of the storage system, v i 's are the per-block access times, and r i 's, the consumption rates, do not change then at all times in a I/O scheduler Design Equation 1 b &gt; i=1 The proof for this expression is provided elsewhere <ref> [KHS93b] </ref>. However, we present an intuition behind this condition. In a time interval v i , a single block of data, b bytes, is fetched from the storage system. In the time to produce this block, v j r j bytes are consumed by stream j. <p> This is given in the form of the second design equation DE 2 Design Equation 2 n k i = sff P s ! The proof of this equation is given in <ref> [KHS93b] </ref>. Clearly, DE 2 shows the non-linear relation between the consumption rate of a stream, r i , and the number of blocks that need to be fetched in each round of a I/O scheduler, n fl i . This is the consequence of the non-linearity of the I/O scheduler. <p> However, the algorithm suffers from slow convergence to the solution. <ref> [KHS93b] </ref> gives a systematic approach to deriving an integral service vector. The process of transforming the fractional vector from DE 2 to an integral one is defined and approaches to the set of possible transformations is classified. <p> The algorithm mentioned in [AOG92] converges significantly faster when this fact is used. This minimization problem and other techniques to solve it are described in greater detail in <ref> [KHS93b] </ref>. Interestingly, the problem of discretizing solutions from the set of design equations proposed here is a necessary evil ! This is because, in most cases the discretized service vector creates slack time for the I/O scheduler.
Reference: [LS92] <author> P. Lougher and D. Shepherd. </author> <title> Design and implementation of a continuous media storage server. </title> <booktitle> In Proc. of 3 rd Intl. Workshop on Network and Operating Systems, </booktitle> <year> 1992. </year>
Reference-contexts: With today's hardware technology, designing schemes to schedule concurrent access requests to the storage system of a CM server is expected to be a critical task. A consensus amongst researchers in this area ([RV93], <ref> [LS92] </ref>, [AOG92], [CL93]) indicates that this task is vital to providing various CM data services to clients. This focus is a result of what is being labelled as the I/O-bottleneck problem where the storage devices are fast becoming the bottleneck in a computer system [IEE94]. <p> Hence, data throughput per access request increases with the block size. Indeed this effect has been independently observed as: * Improved performance in storage systems with disk arrays, where a larger logical block is striped across a disk array. This effect has been observed by previous work [GR93], <ref> [LS92] </ref>. * Improved throughput in storage systems with larger block sizes while storing larger data types like full-motion video [LS92]. Example As an example, consider a CM server with a high performance disk, whose disk transfer rate is 1 GBps. <p> This effect has been observed by previous work [GR93], <ref> [LS92] </ref>. * Improved throughput in storage systems with larger block sizes while storing larger data types like full-motion video [LS92]. Example As an example, consider a CM server with a high performance disk, whose disk transfer rate is 1 GBps. <p> Fortunately, such parametric optimizations can be easily implemented. 20 n S new n + B k G large G opt G small x transition 7 Related Work The problem of designing a scheduling strategy for continuous media has been addressed by many researchers - [RV93], <ref> [LS92] </ref>, [CL93], [AOG92], [RVG + 93], [KEL94], and [TPBG93]. Each of them have used a cyclical model similar to the one discussed in this paper. [RV93] discuss their approach to designing a multi-user high definition TV (HDTV) system. <p> Their findings purport observations made in this paper. <ref> [LS92] </ref> describes a prototype implementation of a CM server. The design decisions taken in its implementation follow closely the equations described here. [TPBG93] describes the design of a commercially available product.
Reference: [RV93] <author> Venkat P. Rangan and Harrick M. Vin. </author> <title> Designing a multiuser HDTV storage server. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 11(1), </volume> <month> January </month> <year> 1993. </year>
Reference-contexts: Fortunately, such parametric optimizations can be easily implemented. 20 n S new n + B k G large G opt G small x transition 7 Related Work The problem of designing a scheduling strategy for continuous media has been addressed by many researchers - <ref> [RV93] </ref>, [LS92], [CL93], [AOG92], [RVG + 93], [KEL94], and [TPBG93]. Each of them have used a cyclical model similar to the one discussed in this paper. [RV93] discuss their approach to designing a multi-user high definition TV (HDTV) system. <p> G small x transition 7 Related Work The problem of designing a scheduling strategy for continuous media has been addressed by many researchers - <ref> [RV93] </ref>, [LS92], [CL93], [AOG92], [RVG + 93], [KEL94], and [TPBG93]. Each of them have used a cyclical model similar to the one discussed in this paper. [RV93] discuss their approach to designing a multi-user high definition TV (HDTV) system. They use a similar scheduling model to the one described here and had realized the non-linearity of the model.
Reference: [RVG + 93] <author> K.K. Ramakrishnan, L. Vaitzblit, C. Gray, U. Vahalia, D. Ting, P. Tzelnic, S. Glasner, and W. Duso. </author> <title> Operating system support for a Video-On-Demand service. </title> <booktitle> In Proc. of 4 rd Intl. Workshop on Network and Operating Systems, </booktitle> <year> 1993. </year>
Reference-contexts: Fortunately, such parametric optimizations can be easily implemented. 20 n S new n + B k G large G opt G small x transition 7 Related Work The problem of designing a scheduling strategy for continuous media has been addressed by many researchers - [RV93], [LS92], [CL93], [AOG92], <ref> [RVG + 93] </ref>, [KEL94], and [TPBG93]. Each of them have used a cyclical model similar to the one discussed in this paper. [RV93] discuss their approach to designing a multi-user high definition TV (HDTV) system.
Reference: [TPBG93] <author> F. Tobagi, J. Pang, R. Baird, and M. Gang. </author> <title> Streaming RAID A disk array management system for video files. </title> <booktitle> In 1 st Conference on Multimedia, </booktitle> <pages> pages 393-400. </pages> <publisher> ACM, </publisher> <year> 1993. </year> <month> 22 </month>
Reference-contexts: optimizations can be easily implemented. 20 n S new n + B k G large G opt G small x transition 7 Related Work The problem of designing a scheduling strategy for continuous media has been addressed by many researchers - [RV93], [LS92], [CL93], [AOG92], [RVG + 93], [KEL94], and <ref> [TPBG93] </ref>. Each of them have used a cyclical model similar to the one discussed in this paper. [RV93] discuss their approach to designing a multi-user high definition TV (HDTV) system. They use a similar scheduling model to the one described here and had realized the non-linearity of the model. <p> Their findings purport observations made in this paper. [LS92] describes a prototype implementation of a CM server. The design decisions taken in its implementation follow closely the equations described here. <ref> [TPBG93] </ref> describes the design of a commercially available product. Their focus on reducing response times for concurrency set operations is consistent with their customers' demand for a large number of concurrent users.
References-found: 13

