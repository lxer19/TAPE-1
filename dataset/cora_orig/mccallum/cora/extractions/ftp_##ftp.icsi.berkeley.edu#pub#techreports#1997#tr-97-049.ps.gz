URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1997/tr-97-049.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1997.html
Root-URL: http://www.icsi.berkeley.edu
Email: fsander,tschuding@icsi.berkeley.edu  
Title: Towards Mobile Cryptography  
Phone: (510) 643-9153 FAX (510) 643-7684  
Author: Tomas Sander and Christian F. Tschudin 
Note: TR-97-049  
Address: I 1947 Center St. Suite 600 Berkeley, California 94704-1198  
Affiliation: INTERNATIONAL COMPUTER SCIENCE INSTITUTE  
Abstract: Mobile code technology has become a driving force for recent advances in distributed systems. The concept of mobility of executable code raises major security problems. In this paper we deal with the protection of mobile code from possibly malicious hosts. We conceptualize on the specific cryptographic problems posed by mobile code. We are able to provide a solution for some of these problems: We present techniques how to achieve "non-interactive computing with encrypted programs" in certain cases and give a complete solution for this problem in important instances. We further present a way how an agent might securely perform a cryptographic primitive, digital signing, in an untrusted execution environment. Our results are based on the use of homomorphic encryption schemes and function composition techniques. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Abadi and J. Feigenbaum. </author> <title> Secure circuit evaluation. </title> <journal> Journal of Cryptology, </journal> <volume> 2(1) </volume> <pages> 1-12, </pages> <year> 1990. </year>
Reference-contexts: We start by discussing related work on the problem of processing encrypted data (PED). Abadi and Feigenbaum <ref> [1] </ref> described a protocol how to securely evaluate a Boolean circuit in encrypted data. They further reduced EEF (for Boolean circuits) to PED by representing the Boolean circuit that is to be hidden as data fed to a universal Boolean circuit.
Reference: [2] <author> Don Coppersmith, Jacques Stern, and Serge Vaudenay. </author> <title> Attacks on the birational permutation signature schemes. </title> <editor> In Douglas R. Stinson, editor, </editor> <booktitle> Proceedings of CRYPTO'93, number 773 in LNCS, </booktitle> <pages> pages 435-443, </pages> <year> 1993. </year>
Reference-contexts: However, the schemes resulting from those constructions have been successfully attacked by Coppersmith, Stern and Vaudenay <ref> [2] </ref>. So there is a need to find new constructions for secure birational functions to put our ideas to work. We expect that other ways to construct secure birational maps can be found e.g., based on concepts from Algebraic Geometry where birational maps are extensively studied.
Reference: [3] <institution> DARPA "Agent Based Systems" Program, </institution> <month> September </month> <year> 1997. </year> <note> http://abs.wwwhome.com/. </note>
Reference-contexts: Information retrieval is also the basic scenario for military applications where mobile agents would roam the slow battle field network for finding suspicious incidents that endanger a large scale operation <ref> [3] </ref>. Furthermore, mobile agents can be used to deploy new information or software in an autonomous way.
Reference: [4] <institution> Proceedings of the DARPA Workshop on Foundations for Secure Mobile Code, </institution> <address> Monterey CA, USA, </address> <month> March </month> <year> 1997. </year> <note> http://www.cs.nps.navy.mil/research/languages/wkshp.html. </note>
Reference-contexts: Further information on such topics can be found e.g., in <ref> [4, 14] </ref>. * The whole area of protecting the executing host from malicious actions of mobile code. * The protection of the network as a whole (e.g., spamming agents or hosts). * The secure routing of mobile code. * The detection of tampering by and the identification of a malicious host.
Reference: [5] <author> J. Feigenbaum and M. Merritt. </author> <title> Open questions, talk abstracts, and summary of discussions. </title> <booktitle> DIMACS Series in Discrete Mathematics and Theoretical Computer Science, </booktitle> <volume> 2 </volume> <pages> 1-45, </pages> <year> 1991. </year>
Reference-contexts: Also motivated by the problem of processing encrypted data, Rivest et al. [9] asked in 1978 for encryption schemes having certain additional "homomorphic" properties. In 1991 Feigenbaum and Merritt asked more specifically <ref> [5] </ref>: Is there a public-key encryption function E such that both E (x + y) and E (xy) are easy to compute from E (x) and E (y)? It is easy to see that an encryption function having these properties allows to evaluate polynomial expressions in the encrypted data without revealing
Reference: [6] <author> Richard Lipton and Tomas Sander. </author> <title> An additively homomorphic encryption scheme or how to introduce a partial trapdoor in the discrete log, </title> <month> November </month> <year> 1997. </year> <note> Submitted for publication. </note>
Reference-contexts: The protocol relies on the use of a public key encryption scheme that has certain additional properties. Lipton and Sander made recently an important contribution <ref> [6] </ref> in succeeding to construct such a scheme for rings of type Z=N Z, N smooth. Thus for this case we can present a first complete solution for the "non-interactive evaluation of encrypted functions". <p> Now apply proposition 2. Observe that the algorithm Mixed-Mult makes at most O (log N ) 2 calls to Plus. Until recently there were no additively homomorphic encryption schemes on rings Z=N Zknown. In <ref> [6] </ref> however, Lipton and Sander describe an additive homomorphic scheme on rings Z=N Zfor smooth integers N (a positive integer is called smooth if it has only small prime factors). <p> Assume further that the used encryption scheme is polynomial time indistinguishable. Then no information is leaked about f except it's skeleton. The additive scheme of Lipton and Sander <ref> [6] </ref> is polynomial time indistinguishable under the (reasonable) assumption of the hardness of the Power Residue Hypothesis (which is a generalization of the well-known Quadratic Residue Hypothesis to residues of higher degree).
Reference: [7] <editor> A. J. Menezes, P. C. van Oorschot, and S. A. Vanstone. </editor> <booktitle> Handbook of Applied Cryptography. </booktitle> <publisher> CRC Press, </publisher> <year> 1997. </year>
Reference-contexts: By varying a definition of general cryptography given in <ref> [7] </ref>, we may define mobile cryptography as "the study of mathematical techniques related to aspects of information security of mobile executable code in a network". The distinctive aspect of mobile cryptography is that the border conditions for realizing cryptographic protocols are different.
Reference: [8] <author> S. Micali, C. Rackoff, and B. Sloan. </author> <title> The notion of security for probabilistic cryptosystems. </title> <journal> SIAM Journal on Computing, </journal> <volume> 17(2) </volume> <pages> 412-426, </pages> <year> 1988. </year>
Reference-contexts: Encryption schemes that have this strong property are called polynomial time indistinguishable (see <ref> [8] </ref> for further details). With this background we can summarize the results as follows: Theorem 4 Let E be an additively homomorphic encryption scheme on Z=NZ.
Reference: [9] <author> Ronald L. Rivest, Len Adleman, and Michael L. Dertouzos. </author> <title> On data banks and privacy homo-morphisms. </title> <editor> In R. A. DeMillo, D. P. Dobkin, A. K. Jones, and R. J. Lipton, editors, </editor> <booktitle> Foundations of Secure Computation, </booktitle> <pages> pages 169-179. </pages> <publisher> Academic Press, </publisher> <year> 1978. </year>
Reference-contexts: The secure execution environment usually includes the computing base that provides the physical storage and the execution support. Using a graphical notation similar to <ref> [9] </ref>, the left side of figure 1 shows the involved elements, the boundary denotes the secure execution environment. The trustworthiness of the computing base is crucial. Even in secured multiparty computations it is assumed that the participating parties are able to perform their computations on their own trusted platform. <p> Also motivated by the problem of processing encrypted data, Rivest et al. <ref> [9] </ref> asked in 1978 for encryption schemes having certain additional "homomorphic" properties.
Reference: [10] <editor> K. Rothermel and R. Popescu-Zeletin, editors. </editor> <booktitle> Mobile Agents'97 Proceedings of the 1st International Workshop. </booktitle> <publisher> LNCS 1219. Springer, </publisher> <month> April </month> <year> 1997. </year>
Reference-contexts: The computations themselves have become mobile. Various mobile agent systems have been built and are subject to ongoing research, each targeting at another application field (see e.g., <ref> [10, 15] </ref>). In the following we describe three of them. Mobile Computing: Computing with mobile devices poses problems to networking because the changing physical location requires a continuous reconfiguration of the data links. If connectivity can not always be maintained it also requires applications to handle extended off-line periods.
Reference: [11] <author> Adi Shamir. </author> <title> Efficient signature schemes based on birational permutations. </title> <editor> In Douglas R. Stinson, editor, </editor> <booktitle> Proceedings of CRYPTO'93, number 773 in LNCS, </booktitle> <pages> pages 1-12, </pages> <year> 1993. </year>
Reference-contexts: Interestingly enough there are already results on the hardness of decomposing rational functions. Decomposition problems have been studied in various forms, but no polynomial time algorithm for decomposing multivariate rational functions is known (see [17] for further references). Shamir <ref> [11] </ref> has described ways to obtain birational permutation schemes s : K n ! K n , where the components are given by rational functions and such that s is easy to invert. It is easy to transform the above problem with one function f into this setting. <p> This problem is known to be very hard. So an adversary will not be able to invert f except for some very simple choices of f.) Ways to construct birational functions s that are easy to invert have been described by Shamir in the second part of <ref> [11] </ref>. However, the schemes resulting from those constructions have been successfully attacked by Coppersmith, Stern and Vaudenay [2]. So there is a need to find new constructions for secure birational functions to put our ideas to work.
Reference: [12] <author> D. Tennenhouse, J. M. Smith, W. D. Sincoskie, D. J. Wetherall, and G. J. Minden. </author> <title> A survey of active network research. </title> <journal> IEEE Communications Magazine, </journal> <volume> 35 </volume> <pages> 80-86, </pages> <month> January </month> <year> 1997. </year>
Reference-contexts: Although it induces some processing overhead, this instructional mode of communications gives the most freedom for realizing customized communication architectures [13]. Several experimental systems are under construction (MIT, University of Pennsylvania, etc), many of them under a special DARPA research program <ref> [12] </ref>. A primary goal of active networks is to shift information processing tasks from the end nodes to internal nodes. Information fusion inside the network reduces latency and bandwidth. Performing information diffusion inside the network also saves bandwidth (e.g., data filtering) and enables customizable data delivery protocols.
Reference: [13] <author> Christian F. Tschudin. </author> <title> On the Structuring of Computer Communications. </title> <type> PhD thesis No. 2632, </type> <institution> Universite de Geneve, </institution> <year> 1993. </year> <note> http://cui.unige.ch/pub/tschudin. </note>
Reference-contexts: Although it induces some processing overhead, this instructional mode of communications gives the most freedom for realizing customized communication architectures <ref> [13] </ref>. Several experimental systems are under construction (MIT, University of Pennsylvania, etc), many of them under a special DARPA research program [12]. A primary goal of active networks is to shift information processing tasks from the end nodes to internal nodes. Information fusion inside the network reduces latency and bandwidth.
Reference: [14] <author> Giovanni Vigna, </author> <title> editor. Mobile Agents and Security. </title> <publisher> LNCS. Springer, </publisher> <year> 1998. </year> <month> Forthcoming. </month>
Reference-contexts: Further information on such topics can be found e.g., in <ref> [4, 14] </ref>. * The whole area of protecting the executing host from malicious actions of mobile code. * The protection of the network as a whole (e.g., spamming agents or hosts). * The secure routing of mobile code. * The detection of tampering by and the identification of a malicious host.
Reference: [15] <author> J. Vitek and Chr. Tschudin, </author> <title> editors. Mobile Object Systems Towards the Programmable Internet. </title> <publisher> LNCS 1222. Springer, </publisher> <month> April </month> <year> 1997. </year>
Reference-contexts: The computations themselves have become mobile. Various mobile agent systems have been built and are subject to ongoing research, each targeting at another application field (see e.g., <ref> [10, 15] </ref>). In the following we describe three of them. Mobile Computing: Computing with mobile devices poses problems to networking because the changing physical location requires a continuous reconfiguration of the data links. If connectivity can not always be maintained it also requires applications to handle extended off-line periods.
Reference: [16] <author> Ingo Wegener. </author> <title> The Complexity of Boolean Functions. </title> <address> Eiley-Teubner, </address> <year> 1987. </year>
Reference-contexts: If one succeeds with non-interactive evaluation of encrypted functions (EEF) for Boolean circuits the problem of EEF for general programs would at least theoretically be solved. Note for this that every Turing machine program can be efficiently simulated by Boolean circuits <ref> [16] </ref> 4.1 Non-Interactive Evaluation of Encrypted Functions The ability to hide a function f inside an executable program is of central importance for mobile agent protection because the obtained code privacy immediately yields code integrity as explained earlier.
Reference: [17] <author> Richard E. Zippel. </author> <title> Rational function decomposition. </title> <booktitle> In Proceedings of the International Symposium on Symbolic and Algebraic Computation, </booktitle> <pages> pages 1-6. </pages> <publisher> ACM Press, </publisher> <month> July </month> <year> 1991. </year> <month> 14 </month>
Reference-contexts: Interestingly enough there are already results on the hardness of decomposing rational functions. Decomposition problems have been studied in various forms, but no polynomial time algorithm for decomposing multivariate rational functions is known (see <ref> [17] </ref> for further references). Shamir [11] has described ways to obtain birational permutation schemes s : K n ! K n , where the components are given by rational functions and such that s is easy to invert.
References-found: 17

