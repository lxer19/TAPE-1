URL: http://www.cs.ucl.ac.uk/staff/c.perkins/MM-Briefing-Day/rlc.ps.gz
Refering-URL: http://www.cs.ucl.ac.uk/staff/c.perkins/MM-Briefing-Day/
Root-URL: http://www.cs.ucl.ac.uk
Email: email: fL.Vicisano,J.Crowcroftg@cs.ucl.ac.uk  email: l.rizzo@iet.unipi.it  
Phone: 2  tel. +39-50-568533 fax +39-50-568  
Title: TCP-like congestion control for layered multicast data transfer  
Author: Lorenzo Vicisano Luigi Rizzo Jon Crowcroft 
Address: Gower Street, London WC1E 6BT, UK  via Diotisalvi 2 56126 Pisa (Italy)  
Affiliation: 1 Department of Computer Science, University College, London  Dip. di Ingegneria dell'Informazione, Universita di Pisa  
Note: UCL-CS Research Note RN/97/75, submitted for reviewing.  (corresponding author)  
Abstract: We present a novel congestion control algorithm suitable for use with cumulative, layered data streams in the MBone. Our algorithm behaves similarly to TCP congestion control algorithms, and shares bandwidth fairly with other instances of the protocol and with TCP flows. It is entirely receiver driven and requires no per-receiver status at the sender, in order to scale to large numbers of receivers. It relies on standard functionalities of multicast routers, and is suitable for continuous stream and reliable bulk data transfer. In the paper we illustrate the algorithm, characterize its response to losses both analytically and by simulations, and analyse its behaviour using simulations and experiments in real networks. We also show how error recovery can be dealt with independently from congestion control by using FEC techniques, so as to provide reliable bulk data transfer. Keywords: congestion control, multicast. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R.E.Blahut, </author> <title> "Theory and Practice of Error Control Codes" Addison Wesley, </title> <address> MA, </address> <year> 1984 </year>
Reference-contexts: We also assume the existence of an upper level session management protocol which possibly collects feedback to decide how long to continue transmissions and select which packets to send. The approach we follow is based on the use of FEC techniques (see <ref> [1, 14] </ref>). Intuitively, the problems of finding a suitable transmission order for the data, and achieving an effective recovery from losses, can be solved by passing all the k packets which make up the object to an encoder which can produce a large number n AE k of packets. <p> The use of FEC has a drawback, though, which consists in the potentially high encoding and decoding costs. However, this overhead can be limited to acceptable values. The principle of operation of conventional FEC encoders and decoders is shown in <ref> [1] </ref>, while [14] presents an implementation suitable for use in computer communication protocols. <p> Such encoders/decoders require O (k) operations per packet produced, although the multiplying constants are small and encoding speeds in the Mbit/s (or higher) can be achieved on cheap PCs with values of k in the range 32..64 (see [14] for such an implementation). The use of FFT techniques (see <ref> [1] </ref>) can reduce the complexity of FEC encoding to O (log k).
Reference: [2] <author> T.Brown, S.Sazzad, C.Schroeder, P.Cantrell, J,Gibson, </author> <title> "Packet video for heterogeneous networks using CU-SeeMe", </title> <booktitle> Proc. of IEEE Intl. Conf. on Image Processing, </booktitle> <address> Lausanne, Sept.96 </address>
Reference: [3] <author> D-M.Chiu, </author> <title> R.Jain "Analysis of the Increase and Decrease Algorithm hms for Congestion Avoidance in Computer Networks", computer Networks and ISDN Systems, </title> <address> V.17, pp.1-14, </address> <year> 1989. </year>
Reference-contexts: Both Figure 3 and Figure 4 show that protocol instances running concurrently present a similar throughput. To evaluate better this feature, we have computed the fairness index 3 <ref> [3] </ref> from the results of the simulations. 3 The fairness index is defined as fi = x=0 T (x) N x=0 T (x) 2 where T (x) is the throughput of the x-th protocol instance. fi always lies between 1 (indicating that all instances get the same share) and 1=N (when
Reference: [4] <author> S.Deering, </author> <title> "Multicast Routing in a Datagram Internetwork", </title> <type> PhD Thesis, </type> <institution> Stanford University, Dec.1991. </institution>
Reference: [5] <author> W. Fenner, </author> <title> "Internet Group Management Protocol, </title> <type> Version 2", INTERNET-DRAFT (working draft), </type> <month> Jan. 20, </month> <year> 1997, </year> <note> http://ds.internic.net/internet-drafts/- draft-ietf-idmr-igmp-v2-06.txt </note>
Reference: [6] <author> S.Floyd, K.Fall, </author> <title> "Router Mechanisms to Support End-to-End Congestion Control", </title> <type> Tech--nical report, </type> <institution> ftp://ftp.ee.lbl.gov/papers/collapse.ps. </institution>
Reference-contexts: As a consequence, we believe that the proper approach to deal with high losses lies in the use of appropriately low values of B 0 , and in the use of queue management mechanisms in the routers to deal with uncontrollable flows <ref> [6] </ref>. 4.4 Validation of the model inter-protocol fairness To validate our analytical model, we have both simulated the behaviour of several instances of the protocol sharing a bottleneck link, and run an implementation of our protocol on a real Internet path.
Reference: [7] <author> D.Hoffman, M.Speer, </author> <title> "Hierarchical video distribution over Internet-style networks", </title> <booktitle> Proc. of IEEE Intl. Conf. on Image Processing, </booktitle> <address> Lausanne, Sept.1996 </address>
Reference: [8] <author> V.Jacobson, </author> <title> "Congestion Avoidance and Control", </title> <booktitle> ACM SIGCOMM'88, </booktitle> <month> August </month> <year> 1988, </year> <institution> Stanford, </institution> <address> CA, pp.314-329. </address>
Reference-contexts: A second difference is that our protocol works by controlling the data rate, while TCP congestion control is based on the `conservation of packets' principle <ref> [8] </ref>: a new packet is not put into the network until an old packet leaves; this allows TCP to fine-tune its traffic generation and to react quickly in the face of short-term network load changes.
Reference: [9] <author> M.Luby, M.Mitzenmacher, A.Shokrollahi, D.Spielman, and V.Stemann. </author> <title> "Practical loss-resilient codes", </title> <booktitle> Proceedings of the Twenty-Ninth Annual ACM Symposium on Theory of Computing, </booktitle> <pages> page 150, </pages> <address> El Paso, Texas, </address> <month> 4-6 May </month> <year> 1997. </year>
Reference-contexts: As an alternative, a recent paper <ref> [9] </ref> presents a different encoding algorithm, based on probabilistic techniques, which is very efficient for large values of k, requiring constant time per packet produced. 6 Conclusions and future work We have presented a congestion control algorithm for multicast data transfer on the MBone, evaluated its performance, and shown its applicability
Reference: [10] <author> M.Mathis, J.Semke, J.Mahdavi, T.Ott, </author> <title> "The Macroscopic Behavior of the TCP Congestion Aviodance Algorithm", </title> <address> CCR, Vol.27 N.3, </address> <month> July </month> <year> 1997. </year>
Reference: [11] <author> S. McCanne, V. Jacobson, and M. Vetterli, </author> <title> "Receiver-driven Layered Multicast", </title> <address> SIG-COMM'96, </address> <month> August </month> <year> 1996, </year> <institution> Stanford, CA, pp.1-14. </institution> <note> Available as ftp://ftp.ee.lbl.gov/papers/mccanne-sigcomm96.ps.gz </note>
Reference: [12] <institution> UCB/LBNL Network Simulator - ns version 2, </institution> <year> 1997, </year> <note> http://- www-mash.cs.berkeley.edu/ns/. </note>
Reference-contexts: We investigate the start up behaviour, steady state behaviour, adaptation to changing network conditions, fairness among protocol instances and with TCP instances. Measurements on the real network have been performed using a prototype implementation of the algorithm, while simulations have been done using the ns simulator <ref> [12] </ref>, both using tail-drop and RED routers. The network topologies used in the simulations are shown in Figure 2, with transmitters and receivers spread on the various nodes.
Reference: [13] <author> T.Ott, J.Kemperman, M.Mhathis, </author> <title> "The stationary distribution of ideal TCP congestion avoidance", </title> <type> Technical Report, </type> <month> Aug. </month> <year> 1996. </year>
Reference: [14] <author> L. </author> <title> Rizzo, "Effective erasure codes for reliable computer communication protocols", </title> <address> CCR, V.27 N.2, </address> <month> April </month> <year> 1997, </year> <note> pp.24-36. Source code available as http://www.iet.unipi.it/~luigi/vdm.tgz </note>
Reference-contexts: We also assume the existence of an upper level session management protocol which possibly collects feedback to decide how long to continue transmissions and select which packets to send. The approach we follow is based on the use of FEC techniques (see <ref> [1, 14] </ref>). Intuitively, the problems of finding a suitable transmission order for the data, and achieving an effective recovery from losses, can be solved by passing all the k packets which make up the object to an encoder which can produce a large number n AE k of packets. <p> The use of FEC has a drawback, though, which consists in the potentially high encoding and decoding costs. However, this overhead can be limited to acceptable values. The principle of operation of conventional FEC encoders and decoders is shown in [1], while <ref> [14] </ref> presents an implementation suitable for use in computer communication protocols. Such encoders/decoders require O (k) operations per packet produced, although the multiplying constants are small and encoding speeds in the Mbit/s (or higher) can be achieved on cheap PCs with values of k in the range 32..64 (see [14] for <p> while <ref> [14] </ref> presents an implementation suitable for use in computer communication protocols. Such encoders/decoders require O (k) operations per packet produced, although the multiplying constants are small and encoding speeds in the Mbit/s (or higher) can be achieved on cheap PCs with values of k in the range 32..64 (see [14] for such an implementation). The use of FFT techniques (see [1]) can reduce the complexity of FEC encoding to O (log k).
Reference: [15] <author> L.Rizzo, L.Vicisano, </author> <title> "A Reliable Multicast data Distribution Protocol based on software FEC techniques", </title> <booktitle> The Fourth IEEE Workshop on the Architecture and Implementation of High Performance Communication Systems (HPCS'97), </booktitle> <address> Sani Beach, Chalkidiki, Greece June 23-25, </address> <year> 1997 </year>
Reference-contexts: This approach has already been used by the authors in the RMDP protocol <ref> [15] </ref>, a reliable multicast protocol which can be easily extended with the congestion control algorithm described in this paper. The use of a FEC encoding with high redundancy makes all packets equivalent for data reconstruction, and solves many problems at once.
Reference: [16] <author> W. Stevens., </author> <title> "TCP Slow Start, Congestion Avoidance, Fast Retransmit, and Fast Recovery Algorithms.", </title> <address> RFC2001, </address> <month> January </month> <year> 1997. </year>
Reference: [17] <author> N.Shacham, </author> <title> "Multipoint communication by hierarchically encoded data", </title> <booktitle> Proc. of IEEE Infocom'92, </booktitle> <year> (1992), </year> <month> pp.2107-2114. </month>
Reference: [18] <author> D.Taubman, A.Zakhor, </author> <title> "Multi-rate 3-D subband coding of video", </title> <journal> IEEE Trans. on Image Processing 3, </journal> <volume> 5 (Sept.1994), </volume> <month> pp.572-588. </month>
Reference: [19] <author> L.Vicisano, </author> <title> "Notes on a cumulative layered organisation of data packets across multiple streams with variable-rate", </title> <address> http://www.cs.ucl.ac.uk/staff/L.Vicisano/layers.ps </address> .
References-found: 19

