URL: http://www.cs.brown.edu/courses/cs252/graph/survey.ps
Refering-URL: http://www.cs.brown.edu/courses/cs252/graph/home.html
Root-URL: http://www.cs.brown.edu/
Title: A Survey of Planar Graph Drawing Algorithms  
Author: C.S. Prof. Roberto Tamassia T.M. Murali 
Note: Computational Geometry Sem. II, 1992-1993  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> G. di Battista, P. Eades and R. Tamassia, </author> <title> "Algorithms for Drawing Graphs: an Annotated bibliography," </title> <type> manuscript. </type>
Reference-contexts: The literature on graph drawing is huge. Many different problems have been tackled and ingeniously solved. The interested reader can refer to the bibliography maintained on this subject by di Battista et al <ref> [1] </ref> to further study this subject.
Reference: [2] <author> B. Becker and G. Hotz, </author> <title> "On The Optimal Layout of Planar Graphs with Fixed Boundary", </title> <journal> SIAM J. Computing, </journal> <volume> vol. 16, no. 5, </volume> <pages> pp. 946-972, </pages> <year> 1987. </year>
Reference-contexts: This algorithm can be modified by adding edges carefully and performing a 13 few more shifts to give convex drawings of triconnected graphs. 5 Layout with Fixed Boundary The next problem (studied by Becker and Hotz <ref> [2] </ref>) we consider comes up in chip layout. The most important criterion here is that chip area should be minimised. It seems natural to model a chip as a graph where nodes of the graph correspond to modules of the chip and edges represent signal nets interconnecting the modules.
Reference: [3] <author> B. Becker and H.G. Osthof, </author> <title> "Layout with Wires of Balanced Length", </title> <journal> Information and Computation, </journal> <volume> vol. 73, </volume> <pages> pp. 45-58, </pages> <year> 1987. </year>
Reference-contexts: This layout is quasiplanar. The authors discuss approximation algorithms to actually construct these optimal layouts. Becker and Osthof <ref> [3] </ref> show that a balanced layout (one in which the maximum length of an edge is minimised) is (c)-bounded and is the convergent of a subsequence of the optimal layouts got by considering f = x p ; p = 2; 3; 4; .
Reference: [4] <author> K. Booth and G. Lueker, </author> <title> "Testing for the Consecutive Ones Property, Interval Graphs, and Graph Planarity Using PQ-Tree Algorithms", </title> <journal> J. of Computer and System Sciences, </journal> <volume> vol. 13, </volume> <pages> pp. 335-379, </pages> <year> 1976. </year>
Reference-contexts: Linear time algorithms for this problem have been developed by Hopcraft and Tarjan [13], Lempel et al [17], Even and Tarjan [9] and Booth and Lueker <ref> [4] </ref>. These and other algorithms can be easily modified to yield a planar representation of the planar graph which is a data structure representing the combinatorial adjacencies between the faces of the planar drawing.
Reference: [5] <author> N. Chiba, T. Yamanouchi, and T. Nishizeki, </author> <title> "Linear Algorithms for Convex Drawings of Planar Graphs", in Progress in Graph Theory, </title> <editor> ed. J.A. Bondy and U.S.R. </editor> <booktitle> Murty, </booktitle> <pages> pp. 153-173, </pages> <publisher> Academic Press, </publisher> <year> 1984. </year>
Reference-contexts: The first algorithm <ref> [5] </ref> produces a convex drawing provided such a drawing exists. This does not produce pleasing figures. The second algorithm [6] tries to draw all three-connected components convex as far as possible. <p> The second algorithm [6] tries to draw all three-connected components convex as far as possible. The third algorithm [21] is a very simple algorithm to draw the graph on the plane given the embedding. 3.1 Producing a Convex Drawing of a Planar Graph Chiba et al <ref> [5, 6] </ref> show how Thomassen's result leads to a linear-time algorithm for the convex drawing of planar graphs. They reduce the convex drawing of G to the convex drawing of several subgraphs of G as follows: The algorithm is informally discussed next. Assume G is biconnected plane graph.
Reference: [6] <author> N. Chiba, K. Onoguchi, and T. Nishizeki, </author> <title> "Drawing Planar Graphs Nicely", </title> <journal> Acta Informatica, </journal> <volume> vol. 22, </volume> <pages> pp. 187-201, </pages> <year> 1985. </year>
Reference-contexts: The first algorithm [5] produces a convex drawing provided such a drawing exists. This does not produce pleasing figures. The second algorithm <ref> [6] </ref> tries to draw all three-connected components convex as far as possible. <p> The second algorithm [6] tries to draw all three-connected components convex as far as possible. The third algorithm [21] is a very simple algorithm to draw the graph on the plane given the embedding. 3.1 Producing a Convex Drawing of a Planar Graph Chiba et al <ref> [5, 6] </ref> show how Thomassen's result leads to a linear-time algorithm for the convex drawing of planar graphs. They reduce the convex drawing of G to the convex drawing of several subgraphs of G as follows: The algorithm is informally discussed next. Assume G is biconnected plane graph. <p> While the first criterion is easily achievable, the other two are often conflicting. The algorithm just discussed achieves the second criterion. Chiba et al <ref> [6] </ref> also give an algorithm which satisfies the three properties as far as possible.
Reference: [7] <author> M. Chrobak and T.H. Payne, </author> <title> "A Linear Time Algorithm for Drawing a Planar Graph on a Grid", </title> <type> Technical Report UCR-CS-90-2, </type> <institution> Dept. of Math. and Comput. Sci., Univ. California, Riverside, </institution> <year> 1990. </year> <month> 20 </month>
Reference-contexts: Hence the algorithm takes O (n log n) time. 4.2 A Linear Time Algorithm for Drawing a Planar Graph on a 2n 4 by n 2 grid de Fraysseix et al posed the question of whether the embedding could be found in linear time. Chrobak and Payne <ref> [7] </ref> answered the question in the affirmative. Instead of using sophisticated data structures for rectangular range searches, they carefully manage and distribute the information needed by the algorithm so that local data is sufficient to find a tentative embedding of a new vertex.
Reference: [8] <author> P. Eades and N. Wormald, </author> <title> "Fixed Edge Length Graph Drawing is NP- hard," </title> <journal> Discrete Applied Mathematics, </journal> <volume> Vol. 28, </volume> <pages> pp. 111-134, </pages> <year> 1990. </year>
Reference-contexts: The proof of this intuitive fact is very mathematical and can be found in the paper. They also show that this optimally balanced layout is quasi (c)-planar. 6 Fixed Edge Length Graph Drawing Eades and Wormald <ref> [8] </ref> study the problem of drawing a graph planar such that all edges have fixed edge lengths. They show that this is NP-hard even when all edge lengths are one and the graph is biconnected.
Reference: [9] <author> S. Even and R.E. Tarjan, </author> <title> "Computing an st-Numbering," </title> <journal> Theoretical Computer Science, </journal> <volume> vol. 2, </volume> <pages> pp. 339-344, </pages> <year> 1976. </year>
Reference-contexts: Linear time algorithms for this problem have been developed by Hopcraft and Tarjan [13], Lempel et al [17], Even and Tarjan <ref> [9] </ref> and Booth and Lueker [4]. These and other algorithms can be easily modified to yield a planar representation of the planar graph which is a data structure representing the combinatorial adjacencies between the faces of the planar drawing.
Reference: [10] <author> I. Fary, </author> <title> "On Straight Lines Representation of Planar Graphs," </title> <journal> Acta Sci. Math. Szeged, </journal> <volume> vol. 11, </volume> <pages> pp. 229-233, </pages> <year> 1948. </year>
Reference-contexts: Szele's conjecture that every planar graph admits a drawing on the plane where all edges are drawn with straight lines was proven by Wagner [27], Fary <ref> [10] </ref> and Stein [23]. These results raise two interesting algorithmic questions how efficiently can a graph be tested for planarity and given that it is planar how efficiently can a planar drawing be found? Kuratowski's characterisation immediately yields a polynomial algorithm for planarity testing. <p> The detection and display of symmetries in planar graphs is discussed in Section 7. An algorithm for minimising the maximum degree while triangulating planar graphs is presented in Section 8. Section 9 concludes. 2 Straight Line Representation of Planar Graphs Wagner [27], Fary <ref> [10] </ref> and Stein [23] proved that a planar graph could be drawn on the plane such that all edges were represented as straight lines. We examine Fary's proof in detail. The resulting embedding is often called a Fary embedding. Let G be the given planar graph.
Reference: [11] <author> H. de Fraysseix, J. Pach, and R. Pollack, </author> <title> "Small Sets Supporting Fary Embeddings of Planar Graphs", </title> <booktitle> Proc. 20th ACM Symp. on Theory of Computing, </booktitle> <pages> pp. 426-433, </pages> <year> 1988. </year>
Reference-contexts: Below we discuss four different algorithms for embedding planar graphs on the grid. Vertices are restricted to be positioned on grid points. 4.1 Layout on the 2n 4 by n 2 grid de Fraysseix et al <ref> [11, 12] </ref> gave the first algorithm to draw a planar graph on the grid. Their O (n log n) time, O (n) space algorithm uses a 2n 4 by n 2 grid where n is the size of the planar graph G.
Reference: [12] <author> H. de Fraysseix, J. Pach, and R. Pollack, </author> <title> "How to Draw a Planar Graph on a Grid," </title> <journal> Combinatorica, </journal> <volume> vol. 10, </volume> <pages> pp. 41-51, </pages> <year> 1990. </year>
Reference-contexts: Below we discuss four different algorithms for embedding planar graphs on the grid. Vertices are restricted to be positioned on grid points. 4.1 Layout on the 2n 4 by n 2 grid de Fraysseix et al <ref> [11, 12] </ref> gave the first algorithm to draw a planar graph on the grid. Their O (n log n) time, O (n) space algorithm uses a 2n 4 by n 2 grid where n is the size of the planar graph G.
Reference: [13] <author> J. Hopcroft and R.E. Tarjan, </author> <title> "Efficient Planarity Testing," </title> <journal> J. ACM, </journal> <volume> vol. 21, no. 4, </volume> <pages> pp. 549-568, </pages> <year> 1974. </year>
Reference-contexts: Linear time algorithms for this problem have been developed by Hopcraft and Tarjan <ref> [13] </ref>, Lempel et al [17], Even and Tarjan [9] and Booth and Lueker [4]. These and other algorithms can be easily modified to yield a planar representation of the planar graph which is a data structure representing the combinatorial adjacencies between the faces of the planar drawing.
Reference: [14] <author> G. Kant, </author> <title> "Drawing Planar Graphs Using the lmc-Ordering," </title> <booktitle> Proc. IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 101-110, </pages> <year> 1992. </year>
Reference: [15] <author> G. Kant and H.L. Bodlaender, </author> <title> "Triangulating Planar Graphs while Minimizing the Maximum Degree,"in Algorithm Theory - SWAT92, </title> <booktitle> (Proc. 3rd Scandinavian Workshop on Algorithm Theory, </booktitle> <address> Helsinki, </address> <month> July </month> <year> 1992), </year> <editor> ed. O. Nurmi E. </editor> <booktitle> Ukkonen, </booktitle> <pages> pp. 258-271, </pages> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> vol. 621, </volume> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: Schnyder then weakens the definition of the barycentric representation and shows how this leads to a more compact drawing on a n 2 by n 2 grid. Details can be found in the paper. 4.4 Drawing Planar Graphs Using the lmc-ordering Kant <ref> [15] </ref> generalises the canonical ordering of de Fraysseix et al and shows how this leads to linear time algorithms for convex drawings of triconnected graphs on a 2n 4 by n 2 grid and for orthogonal drawings of planar graphs with large angle and few bends. <p> The disadvantage is that the process of triangulation may increase the degree of a vertex linearly in the number of vertices. As a result, the drawing is significantly less readable since a high degree results in small angles between adjacent edges. Kant and Bodlaender <ref> [15] </ref> study the problem of triangulating a planar graph while minimising the maximum degree. Let (G) denote the maximum degree of a planar graph G. If G is biconnected, deciding whether G can be triangulated such that (G) K is NP-complete. The problem is clearly in NP.
Reference: [16] <author> C. </author> <title> Kuratowski, "Sur le probleme des courbes gauches en topologie," </title> <journal> Fundamenta Math., </journal> <volume> 15, </volume> <pages> pp. 271-283, </pages> <year> 1930. </year>
Reference-contexts: 1 Introduction Planar graphs are graphs that can be drawn on the plane such that no two distinct edges cross each other. They have been long studied both in the combinatorics and the graph algorithms literature. Kuratowski <ref> [16] </ref> gave the first complete characterisation of planar graphs by showing that a finite graph (one that has a finite number of vertices and edges) is planar unless it has a subgraph isomorphic to K 5 , the complete graph on 5 vertices, or K 3;3 , the complete bipartite graph
Reference: [17] <author> A. Lempel, S. Even, and I. Cederbaum, </author> <title> "An Algorithm for Planarity Testing of Graphs", in Theory of Graphs, </title> <booktitle> Int. Symposium (Rome, </booktitle> <year> 1966), </year> <pages> pp. 215-232, </pages> <publisher> Gordon and Breach, </publisher> <address> New York, </address> <year> 1967. </year>
Reference-contexts: Linear time algorithms for this problem have been developed by Hopcraft and Tarjan [13], Lempel et al <ref> [17] </ref>, Even and Tarjan [9] and Booth and Lueker [4]. These and other algorithms can be easily modified to yield a planar representation of the planar graph which is a data structure representing the combinatorial adjacencies between the faces of the planar drawing.
Reference: [18] <author> J. Manning and M.J. Atallah, </author> <title> "Fast Detection and Display of Symmetry in Out-erplanar Graphs," </title> <type> Technical Report CSD-TR- 606, </type> <institution> Dept. of Computer Sciences, Purdue Univ., West Lafayette, IN, </institution> <year> 1986. </year>
Reference-contexts: Figure 14 bears this out. Manning [20] shows that determining whether a general graph has axial, rotational or central symmetry (with no fixed vertex or one fixed vertex) is NP-complete. The problems of determining the number of such symmetries are #P-complete. Manning and Atallah <ref> [18] </ref> study the problem of detecting and displaying symmetry in outerplanar graphs. Outerplanar graphs are planar graphs where very vertex lies on the external face. The first step is to divide G into biconnected components. It is clear that each such component is outerplanar.
Reference: [19] <author> J. Manning and M.J. Atallah, </author> <title> "Fast Detection and Display of Symmetry in Trees," </title> <type> Congressus Numerantium 64, </type> <pages> pp. 159-168, </pages> <month> Nov. </month> <year> 1988. </year>
Reference-contexts: If the center is a cutvertex then it is not possible to display all symmetries at the same time. Symmetries of these graphs are essentially those of its block-cutvertex tree. Manning and Atallah <ref> [19] </ref> have developed techniques for the detection and display of symmetries in trees. 18 figure. 8 Triangulating Planar Graphs While Minimising the Maximum Degree Many planar graph drawing algorithms operate on triangulated graphs, those where every face has three edges.
Reference: [20] <author> J. Manning, </author> <title> "Computational Complexity of Geometric Symmetry Detection in Graphs," </title> <type> TR CSC-90-1, </type> <institution> Dept. of Computer Science, University of Missouri-Rolla, Rolla, MO, </institution> <year> 1990. </year>
Reference-contexts: Another requirement (which might result in drawings which look more pleasing to the eye) is that symmetries be displayed in the drawing. Figure 14 bears this out. Manning <ref> [20] </ref> shows that determining whether a general graph has axial, rotational or central symmetry (with no fixed vertex or one fixed vertex) is NP-complete. The problems of determining the number of such symmetries are #P-complete. Manning and Atallah [18] study the problem of detecting and displaying symmetry in outerplanar graphs.
Reference: [21] <author> R. </author> <title> Read, "New Methods for Drawing a Planar Graph Given the Cyclic Order of the Edges at Each Vertex," </title> <journal> Congressus Numerantium, </journal> <volume> vol. 56, </volume> <pages> pp. 31-44, </pages> <year> 1987. </year>
Reference-contexts: The first algorithm [5] produces a convex drawing provided such a drawing exists. This does not produce pleasing figures. The second algorithm [6] tries to draw all three-connected components convex as far as possible. The third algorithm <ref> [21] </ref> is a very simple algorithm to draw the graph on the plane given the embedding. 3.1 Producing a Convex Drawing of a Planar Graph Chiba et al [5, 6] show how Thomassen's result leads to a linear-time algorithm for the convex drawing of planar graphs. <p> G 0 is the frame of G. This algorithm also runs in linear time and uses linear space. 3.3 A Simple Algorithm for Drawing a Planar Graph Given the Embedding Read <ref> [21] </ref> presents a very simple algorithm for drawing a planar graph given its embedding. He first assumes that G is triangulated. He denotes a triangulation with n vertices by T p .
Reference: [22] <author> W. Schnyder, </author> <title> "Embedding Planar Graphs on the Grid," </title> <booktitle> Proc. ACM- SIAM Symp. on Discrete Algorithms, </booktitle> <pages> pp. 138-148, </pages> <year> 1990. </year> <month> 21 </month>
Reference-contexts: This obviously leads to a linear time algorithm. 4.3 Layout on the n 2 by n 2 grid Schnyder <ref> [22] </ref> presents an improvement to de Fraysseix et al's result in a completely different direction. He embeds a planar graph on the n 2 by n 2 grid. Incidentally, his algorithm is also linear in time. The algorithm works in two phases on triangulated graphs.
Reference: [23] <author> S.K. Stein, </author> <title> "Convex Maps," </title> <journal> Proc. Amer. Math. Soc., </journal> <volume> vol. 2, </volume> <pages> pp. 464-466, </pages> <year> 1951. </year>
Reference-contexts: Szele's conjecture that every planar graph admits a drawing on the plane where all edges are drawn with straight lines was proven by Wagner [27], Fary [10] and Stein <ref> [23] </ref>. These results raise two interesting algorithmic questions how efficiently can a graph be tested for planarity and given that it is planar how efficiently can a planar drawing be found? Kuratowski's characterisation immediately yields a polynomial algorithm for planarity testing. <p> The detection and display of symmetries in planar graphs is discussed in Section 7. An algorithm for minimising the maximum degree while triangulating planar graphs is presented in Section 8. Section 9 concludes. 2 Straight Line Representation of Planar Graphs Wagner [27], Fary [10] and Stein <ref> [23] </ref> proved that a planar graph could be drawn on the plane such that all edges were represented as straight lines. We examine Fary's proof in detail. The resulting embedding is often called a Fary embedding. Let G be the given planar graph.
Reference: [24] <author> C. Thomassen, </author> <title> "Planarity and Duality of Finite and Infinite Planar Graphs", </title> <journal> J. Combinatorial Theory, Series B, </journal> <volume> vol. 29, </volume> <pages> pp. 244-271, </pages> <year> 1980. </year>
Reference-contexts: This gives the barycentric mapping of G. Thomassen <ref> [24] </ref> gave a strong version of Tutte's result which characterises graphs which have convex drawings completely. Let S be a facial cycle of a biconnected planar graph G and let be a convex representation of S.
Reference: [25] <author> W.T. Tutte, </author> <title> "Convex Representations of Graphs," </title> <journal> Proc. London Math Soc., </journal> <volume> vol. 10, </volume> <pages> pp. 304-320, </pages> <year> 1960. </year>
Reference-contexts: This shows that any planar graph admits a straight-line embedding. A related question that now arises is the characterisation of graphs that admit straight-line embeddings where all faces are convex polygons. See Figure 3. Tutte <ref> [25, 26] </ref> studied this problem. He showed that all triconnected planar graphs (those that have three distinct paths between any two pair of vertices) admit such convex representations. He also showed how solving a system of linear equations determines the actual embedding.
Reference: [26] <author> W.T. Tutte, </author> <title> "How to Draw a Graph," </title> <journal> Proc. London Math Soc., </journal> <volume> vol. 3, no. 13, </volume> <pages> pp. 743-768, </pages> <year> 1963. </year>
Reference-contexts: This shows that any planar graph admits a straight-line embedding. A related question that now arises is the characterisation of graphs that admit straight-line embeddings where all faces are convex polygons. See Figure 3. Tutte <ref> [25, 26] </ref> studied this problem. He showed that all triconnected planar graphs (those that have three distinct paths between any two pair of vertices) admit such convex representations. He also showed how solving a system of linear equations determines the actual embedding.
Reference: [27] <author> K. Wagner, </author> <title> "Bemerkungen zum Vierfarbenproblem," </title> <journal> Jber. Deutsch. Math.-Verein, </journal> <volume> vol. 46, </volume> <pages> pp. 26-32, </pages> <year> 1936. </year> <month> 22 </month>
Reference-contexts: Szele's conjecture that every planar graph admits a drawing on the plane where all edges are drawn with straight lines was proven by Wagner <ref> [27] </ref>, Fary [10] and Stein [23]. These results raise two interesting algorithmic questions how efficiently can a graph be tested for planarity and given that it is planar how efficiently can a planar drawing be found? Kuratowski's characterisation immediately yields a polynomial algorithm for planarity testing. <p> The detection and display of symmetries in planar graphs is discussed in Section 7. An algorithm for minimising the maximum degree while triangulating planar graphs is presented in Section 8. Section 9 concludes. 2 Straight Line Representation of Planar Graphs Wagner <ref> [27] </ref>, Fary [10] and Stein [23] proved that a planar graph could be drawn on the plane such that all edges were represented as straight lines. We examine Fary's proof in detail. The resulting embedding is often called a Fary embedding. Let G be the given planar graph.
References-found: 27

