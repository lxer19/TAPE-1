URL: http://www.cs.umd.edu/users/prabs/rep.ps
Refering-URL: http://www.cs.umd.edu/users/prabs/
Root-URL: 
Title: Quantum Computing A treatise  
Author: Prabhat Kumar 
Date: October 24, 1996  
Abstract: Quantum computing has witnessed a surge of activity recently owing to some very exciting discoveries on both the theoretical and practical fronts. In this overview, we sketch an account of the developments in this scientifically intriguing field, starting in the early 80's when the first questions about the computability of quantum processes were raised, and which led to the formal definitions of a Quantum Computer and a Quantum Complexity Theory. Peter Shor's recent remarkable discovery of quantum algorithms to solve the problems of integer factoring and discrete log computing, which are believed to be extremely hard to solve efficiently on classical computers, is a compelling demonstration of the suspected superiority of quantum computing over the classical model that is in use today. We discuss one of his algorithms and the implications it has for classical cryptography. We discuss some of the latest work in this field which has brought us yet closer to achieving a physical realization of a quantum computer. Whenever it happens, if it happens, it would be yet another revolution in the field of computing, and maybe the biggest one to date.
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> Bennett, Brassard, and Ekert. </editor> <booktitle> Quantum Cryptography. Scientific American, </booktitle> <pages> pages 50-57, </pages> <month> Oct. </month> <year> 1992. </year>
Reference-contexts: This is the property exploited in the design of the quantum key distribution method proposed by Bennett and Brassard in 1984, dubbed the "BB84". We outline the simple strategy presented in <ref> [1] </ref> omitting the subtle proofs involved to demonstrate its high security, for the sake of illustrating the basic idea.
Reference: [2] <author> C. Bennett. </author> <title> Logical reversibility of computation. </title> <journal> IBM J. Res. Develop., </journal> <volume> 17 </volume> <pages> 525-532, </pages> <year> 1973. </year>
Reference-contexts: That BQP PSPACE [3] follows by the straightforward reasoning that a depth first traversal of a quantum computation tree can be accomplished in polynomial space. Bennett <ref> [2] </ref> showed that for any TM T, there is a reversible TM T which computes the same function within a constant factor of running time of T. Deutsch [5] showed that classical reversible TM's are a subclass of Quantum Turing Machines. From the above two results, BPP BQP.
Reference: [3] <author> E. Bernstein and U. Vazirani. </author> <title> Quantum Complexity Theory. </title> <booktitle> Proc. 25th ACM Symp. on Theory of Computation, </booktitle> <pages> pages 11-20, </pages> <year> 1993. </year>
Reference-contexts: This work laid the foundations of a formal model of quantum computing analogous to the well understood classical model, and building on this, Bernstein and Vazirani <ref> [3] </ref> developed a framework for quantum complexity theory again analogous to the solidly developed theory of classical computational complexity theory. Thus attempts to address Dr. <p> Bernstein and Vazirani in <ref> [3] </ref> have laid the foundations of an analogous complexity framework for the model of quantum computation, called Quantum Complexity Theory. In the current and the next sections we discuss their formalism and some complexity results obtained so far. <p> The model itself comprises of an infinite tape and a finite state control, all the actions of the machine being local and governed fully by the finite state control. On any given input, a quantum turing machine (QTM) produces a random sample from a probability distribution. Formally speaking <ref> [3] </ref>, 6 Defn: A Quantum Turing machine (QTM) consists of a finite state set Q, a finite alphabet P , and a quantum finite state control ffi : Q fi fi fi Q fi fL; Rg ! C where ffi (p; ; t; q; d) maps to the amplitude with which <p> As we have seen before, the fixed matrix of any quantum computation (specified by the transition function ffi) has to satisfy the property of unitarity for the computation to be valid. <ref> [3] </ref> have also shown the construction of a Universal Quantum Turing Machine which can simulate any QTM within a polynomial factor of the QTM's running time. This was an improvement over Deutsch's construction [5] which had a worst case exponential slow down. <p> The following complexity results are known BP P; N P P SP ACE From <ref> [3] </ref>, Defn: A language L is in the class BQP, if there exists a QTM with a distinguished `acceptance' tape cell, and a polynomial p, such that given any string x as input, observing the acceptance cell at time p (x) classifies x with respect to L, with a probability at <p> That BQP PSPACE <ref> [3] </ref> follows by the straightforward reasoning that a depth first traversal of a quantum computation tree can be accomplished in polynomial space. Bennett [2] showed that for any TM T, there is a reversible TM T which computes the same function within a constant factor of running time of T. <p> An oracle is a "black box" which computes a function magically within no time, but its internal workings are hidden from the program which is allowed to query it. In <ref> [3] </ref> an oracle problem was presented which can be solved in polynomial time on a QTM but needs super-polynomial time on the Universal Turing Machine.
Reference: [4] <editor> Giles Brassard. </editor> <title> Cryptology Column | Quantum Computing: The End of Classical Cryptography? SIGACT News, </title> <year> 1996. </year>
Reference-contexts: Its an essential requirement of all quantum mechanical steps. An example is due, and it would help to illustrate better some of the concepts discussed above. Here we reproduce the example presented in <ref> [4] </ref> since its really simple and exhibits the phenomenon of quantum interference in an extremely simple setting. We assume as our quantum system a one-bit computer capable 4 of doing quantum computations.
Reference: [5] <author> D. Deutsch. </author> <title> Quantum theory, the Church-Turing principle and the universal quantum computer. </title> <journal> Proc. Roy. Soc. Lond., </journal> <volume> A400:96-117, </volume> <year> 1985. </year>
Reference-contexts: In 1985, Deutsch <ref> [5] </ref> provided a formal definition of a quantum model of computation and a universal quantum computer analogous to the universal Turing machine. <p> In the current and the next sections we discuss their formalism and some complexity results obtained so far. A formal model of a quantum Turing machine was first outlined by Deutsch <ref> [5] </ref>. This model is similar to a classical probabilistic model of computation with the main difference that quantum computability model obeys the laws of quantum probability as opposed to classical probability. <p> This was an improvement over Deutsch's construction <ref> [5] </ref> which had a worst case exponential slow down. <p> Bennett [2] showed that for any TM T, there is a reversible TM T which computes the same function within a constant factor of running time of T. Deutsch <ref> [5] </ref> showed that classical reversible TM's are a subclass of Quantum Turing Machines. From the above two results, BPP BQP. It is not known whether BQP 6= PSPACE and it has been a longstanding open question in complexity theory.
Reference: [6] <author> D. Deutsch and R. Jozsa. </author> <title> Rapid solution of problems by quantum computation. </title> <journal> Proc. Roy. Soc. Lond., </journal> <volume> A439:553-558, </volume> <year> 1992. </year>
Reference: [7] <author> Peter Shor. </author> <title> Algorithms for Quantum Computation: Discrete Logarithms and Factoring. </title> <booktitle> Proc. 35th IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1994. </year>
Reference-contexts: The mathematical complexity of the equations that need to be solved is way beyond the capabilities of modern day supercomputers. And the consequences in the field of computing would be equally big. Recent discoveries of quantum algorithms to solve the problems of integer factoring and discrete log <ref> [7] </ref> (believed to be "very hard" to solve on a classical computer) suggest ever more strongly that a quantum model of computation might be inherently more powerful than a classical model of computation, with a promise to solve many important problems that we cannot hope to solve efficiently on any computer <p> It is wise to mention here that oracle results have been sometimes been misleading in the past and results indicated by oracle problems have been proven to be false in some cases. Another approach taken by Peter Shor <ref> [7] </ref> has been to look for quantum algo 8 rithms to efficiently solve certain problems which are believed to be very hard to solve efficiently on classical machines. Remarkably enough, Dr.
Reference: [8] <editor> D. Simon. </editor> <booktitle> On the Power of Quantum Computation. Proc. 35th IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1994. </year> <month> 15 </month>
Reference-contexts: In [3] an oracle problem was presented which can be solved in polynomial time on a QTM but needs super-polynomial time on the Universal Turing Machine. Simon <ref> [8] </ref> came up with a much simpler oracle construction which takes polynomial time on a Quantum Computer but requires exponential time on a classical computer.
References-found: 8

