URL: http://www.cs.ucsb.edu/~tyang/papers/IPPS96_sweb.ps
Refering-URL: http://www.cs.ucsb.edu/~tyang/papers/
Root-URL: http://www.cs.ucsb.edu
Email: fdandrese, tyang, veho, ibarrag@cs.ucsb.edu  
Title: SWEB: Towards a Scalable World Wide Web Server on Multicomputers  
Author: Daniel Andresen Tao Yang Vegard Holmedahl Oscar H. Ibarra 
Address: Santa Barbara, CA 93106  
Affiliation: Department of Computer Science University of California  
Abstract: We investigate the issues involved in developing a scalable World Wide Web (WWW) server on a cluster of workstations and parallel machines. The objective is to strengthen the processing capabilities of such a server by utilizing the power of multicom-puters to match huge demands in simultaneous access requests from the Internet. We have implemented a system called SWEB on a distributed memory machine, the Meiko CS-2, and networked workstations. The scheduling component of the system actively monitors the usages of CPU, I/O channels and the interconnection network to effectively distribute HTTP requests across processing units to exploit task and I/O parallelism. We present the experimental results on the performance of this system. 
Abstract-found: 1
Intro-found: 1
Reference: [A96] <institution> The Alexandria Digital Library Project, </institution> <note> http://alexandria.sdc.ucsb.edu/ </note>
Reference-contexts: 1 Motivation The Scalable Web server (SWEB) project grew out of the needs of the Alexandria Digital Library (ADL) project at UCSB <ref> [A96] </ref>. Digital library systems, which provide the on-line retrieval and processing of digitized documents through Internet, have increasingly turned into a topic of national importance. The Alexandria Project is focused on the design, implementation, and deployment of a distributed digital library for spatially-indexed information. <p> To expose the system to a broad user community, the next version of the system (available in early 1996) will be connected to the World Wide Web (WWW) using the Hypertext Transport Protocol (HTTP) <ref> [A96] </ref>. Our work is motivated by the fact that the Alexandria digital library WWW server has a potential to become the bottleneck in delivering digitized documents over high-speed Internet. Popular WWW sites such as the Lycos and Y ahoo [LYC95] receive over one million accesses a day.
Reference: [AC95+] <author> D.Andresen, L.Carver, R.Dolin, C.Fischer, J.Frew, M.Goodchild, O.Ibarra, R.Kothuri, M.Larsgaard, B.Manjunath, D.Nebert, J.Simpson, T.Smith, T.Yang, Q.Zheng, </author> <title> The WWW Prototype of the Alexandria Digital Library, </title> <booktitle> Proceedings of ISDL'95: International Symposium on Digital Libraries, </booktitle> <address> Japan August 22 - 25, </address> <year> 1995. </year>
Reference-contexts: The collections of the library currently involve geographically-referenced materials, such as maps, satellite images, digitized aerial photographs, and associated metadata. A rapid prototype system for the Alexandria digital library has already been developed which allows users to browse spatially-indexed maps and images <ref> [AC95+] </ref>. To expose the system to a broad user community, the next version of the system (available in early 1996) will be connected to the World Wide Web (WWW) using the Hypertext Transport Protocol (HTTP) [A96]. <p> The downside is that all requests for a period of time from a DNS server's domain will go to a particular IP address. We have developed the preliminary version of a scalable WWW server (SWEB) <ref> [AC95+] </ref> running on a Meiko CS-2 distributed memory machine and a network of workstations (NOW) such as SUN and DEC machines. Each processing unit is capable of handling a user request following the HTTP protocol.
Reference: [AY95+] <author> D.Andresen, T.Yang, V.Holmedahl, O.Ibarra, SWEB: </author> <title> Towards a Scalable World Wide Web Server on Multicomputers, </title> <institution> Dept. of Computer Science Tech Rpt. TRCS95-17 U.C. Santa Barbara, </institution> <month> Sept., </month> <year> 1995, </year> <note> http://www.cs.ucsb.edu/ Research/rapid sweb/SWEB.html. </note>
Reference-contexts: Then we can show the maximum sustained rps for file fetches is r ( 1 b 1 p d) F : The full analysis is discussed in <ref> [AY95+] </ref>. For example, if b 1 = 5M B=s and b 2 = 4:5M B=s, O 0, p = 6, r fl = 2:88, then the maximum sustained rps is 17.3 for 6 nodes.
Reference: [SHK95] <author> B. A. Shirazi, A. R. Hurson, and K. M. Kavi (Eds), </author> <title> Scheduling and Load Balancing in Parallel and Distributed Systems, </title> <publisher> IEEE CS Press, </publisher> <year> 1995. </year>
Reference-contexts: Our dynamic scheduling scheme is closely related to the previous work on load balancing on distributed systems, for which a collection of papers is available in <ref> [SHK95] </ref>. In these studies, tasks arrivals may temporarily be uneven among processors and the goal of load balancing is to adjust the imbalance between processors by appropriately transferring tasks from overloaded processors to underloaded processors. <p> In a single-faceted scheduling system, a processor can be classified as lightly loaded and heavily loaded based on one parameter, e.g. CPU load. One purpose of such a classification is to update load information only when a classification changes to reduce unnecessary overhead, e.g. <ref> [SHK95] </ref>. In our problem context, it is hard to classify a processor as heavily or lightly loaded since there are several load parameters. A processor could have a light CPU load but its local disk may receive many access requests from the network file system. <p> To avoid this unsynchronized overloading, we conservatively increase the CPU load of p x by . This strategy is found to be effective in <ref> [SHK95] </ref>. We use = 30%. # bytes required net bandwidth This term is used to estimate the time necessary to return the results back to the client over the network.
Reference: [BR96] <author> E. Brewer, </author> <type> Personal communication, </type> <address> http://inktomi.berkeley.edu, Jan., </address> <year> 1996. </year>
Reference-contexts: Numerous other initiatives to create high-performance HTTP servers have been reported. The Inktomi server at UC Berkeley is based on the NOW technology <ref> [BR96] </ref>. NCSA [KBM94] has built a multi-workstation HTTP server based on round-robin domain name resolution (DNS) to assign requests to workstations. The round-robin technique is effective when HTTP requests access HTML information of relatively uniform size and the load and computing powers of workstations are relatively comparable.
Reference: [GDI93] <author> K. Goswami, M. Devarakonda, R. Iyer, </author> <title> Prediction-based Dynamic Load-sharing Heuristics, </title> <journal> IEEE Transactions on Parallel and Distributed Systems , vol. </journal> <volume> 4, no. 6, </volume> <pages> pp. 638-648, </pages> <month> June, </month> <year> 1993. </year>
Reference-contexts: The optimal HTTP request assignment to processors does not solely depend on CPU loads. Thus we need to develop a multi-faceted scheduling scheme that can effectively utilize the system resources by considering the aggregate impact of multiple parameters on system performance. In <ref> [GDI93] </ref>, resource requirements are predicted and suggested to guide the load sharing. They mention multiple factors, but utilize only the CPU factor in predicting response times. The paper is organized as follows: Section 2 gives the background and problem definition.
Reference: [HL95+] <author> J. Hsieh, M. Lin, J. Liu, T. Ruwart, and D. H.C. Du, </author> <title> Performance of A Mass Storage System for Video-On-Demand , Submitted to Journal of Parallel and Distributed Computing , Special issue on Multimedia Processing and Technology. </title>
Reference: [HT95] <author> Hypertext Transfer Protocol(HTTP): </author> <title> A protocol for networked information, </title> <address> http://www.w3.org/hypertext/WWW/Protocols/, June 26, </address> <year> 1995. </year>
Reference-contexts: The URL defines which resource the user wishes to access, the HTML language allows the information to be presented in a platform-independent but still well-formatted manner, and the HTTP protocol is the application-level mechanism for achieving the transfer of information <ref> [HT95] </ref>. A simple HTTP request would typically activate a sequence of events from initiation to completion as shown in Figure 1. First, the client determines the host name from the URL, and uses the local Domain Name System (DNS) server to determine its IP address.
Reference: [LYC95] <author> Lycos Usage: </author> <title> Accesses per Day, </title> <address> http://lycos.cs.cmu.edu/ usage-day.html, </address> <month> June 17, </month> <year> 1995. </year>
Reference-contexts: Our work is motivated by the fact that the Alexandria digital library WWW server has a potential to become the bottleneck in delivering digitized documents over high-speed Internet. Popular WWW sites such as the Lycos and Y ahoo <ref> [LYC95] </ref> receive over one million accesses a day. For WWW-based network information systems such as digital libraries, the servers involve much more intensive I/O and heterogeneous CPU activities.
Reference: [KBM94] <author> E.D. Katz, M. Butler, R. McGrath, </author> <title> A Scalable HTTP Server: the NCSA Prototype, </title> <journal> Computer Networks and ISDN Systems. </journal> <volume> vol. 27, </volume> <year> 1994, </year> <pages> pp. 155-164. </pages>
Reference-contexts: Numerous other initiatives to create high-performance HTTP servers have been reported. The Inktomi server at UC Berkeley is based on the NOW technology [BR96]. NCSA <ref> [KBM94] </ref> has built a multi-workstation HTTP server based on round-robin domain name resolution (DNS) to assign requests to workstations. The round-robin technique is effective when HTTP requests access HTML information of relatively uniform size and the load and computing powers of workstations are relatively comparable. <p> For the address of server S, sends over request r, and receives response f . example, the NCSA has performed a number of tests using high-end workstations, and discovered in their working environment approximately 5-10 rps could be dealt with using the NCSA httpd server <ref> [KBM94] </ref>, which cannot match the current and future loads (e.g. a digital library server). Thus multiple servers are needed for achieving scalable performance. Our overall objective of the system is to reduce and sustain the response time under large numbers of simultaneous requests. <p> The rotation on available workstation network IDs is in a round-robin fashion. This functionality is available in current DNS systems. The major advantages of this technique are simplicity, ease of implementation, and reliability <ref> [KBM94] </ref>. The DNS assigns the requests without consulting dynamically-changing system load information. Then SWEB conducts a further assignment of requests. Each processor in SWEB contains a scheduler and those processors collaborate with each others to exchange system load information. <p> The first experiment was run to determine how many requests per second SWEB could process. This depends on the average file sizes requested and the number of nodes. In <ref> [KBM94] </ref>, it is reported that a high-end workstation running NCSA httpd could fulfill approximately 5 rps. We examine how a one-node NCSA httpd 1.3 server performs, and compare it with the 6-node SWEB on Meiko CS-2 and the 4-node SWEB on NOW.
Reference: [WA95+] <author> R. Wolski, C. Anglano, J. Schopf, F. Berman, </author> <title> Developing Heterogeneous Applications Using Zoom and HeNCE, </title> <booktitle> Proceedings of the Heterogeneous Computing Workshop, </booktitle> <volume> HCW '95, </volume> <pages> pp. 12-21, </pages> <address> Santa Bar-bara, CA, </address> <publisher> IEEE, </publisher> <month> April, </month> <year> 1995. </year>
Reference-contexts: The resulting performance gains show a decided advantage over other approaches such as round-robin. We are currently migrating the system to be the primary server for the ADL and investigating its performance in a heterogeneous environment <ref> [WA95+] </ref>. Acknowledgments This work was supported in part by funding from NSF, ARPA, and NASA under NSF IRI94-11330 and NSF CCR-9409695, and a startup fund from University of California at Santa Barbara.
References-found: 11

