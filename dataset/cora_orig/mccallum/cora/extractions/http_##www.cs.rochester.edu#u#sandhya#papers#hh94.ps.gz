URL: http://www.cs.rochester.edu/u/sandhya/papers/hh94.ps.gz
Refering-URL: http://www.cs.rochester.edu/u/sandhya/papers/
Root-URL: 
Email: sandhya@cs.rice.edu schaffer@cs.rice.edu bwc@bcm.tmc.edu alc@cs.rice.edu -pete@cs.rice.edu  willy@cs.rice.edu  
Title: Parallelization of General Linkage Analysis Problems  
Author: Sandhya Dwarkadas Alejandro A. Schaffer Robert W. Cottingham Jr. Alan L. Cox Peter Keleher Willy Zwaenepoel k Robert W. Cottingham Jr. k 
Note: Address for correspondence:  
Date: November 17, 1993  
Address: Houston  Houston  Houston  Houston  Houston  Houston  One Baylor Plaza, Houston, TX 77030.  
Affiliation: Department of Computer Science Rice University  Department of Computer Science Rice University  Department of Cell Biology Baylor College of Medicine  Department of Computer Science Rice University  Department of Computer Science Rice University  Department of Computer Science Rice University  Department of Cell Biology, Baylor College of Medicine,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> S. H. Blanton, J. R. Heckenlively, A. W. Cottingham, J. Friedman, L. A. Sadler, M. Wagner, L. H. Friedman, and S. P. Daiger. </author> <title> Linkage mapping of autosomal dominant retinitis pigmentosa (RP1) to the pericentric region of human chromosome 8. </title> <journal> Genomics, </journal> <volume> 11 </volume> <pages> 857-869, </pages> <year> 1991. </year>
Reference-contexts: Stephen P. Daiger at the University of Texas Health Science Center at Houston. This pedigree has 7 10 generations with 189 individuals containing 2 marriage loops <ref> [1] </ref>. There are 86 individuals that are unknown at some loci. As shown in [1], this pedigree had to be split into three pieces because computation on the whole family together was prohibitively long. <p> Stephen P. Daiger at the University of Texas Health Science Center at Houston. This pedigree has 7 10 generations with 189 individuals containing 2 marriage loops <ref> [1] </ref>. There are 86 individuals that are unknown at some loci. As shown in [1], this pedigree had to be split into three pieces because computation on the whole family together was prohibitively long.
Reference: [2] <author> R. W. Cottingham Jr., R. M. Idury, and A. A. Schaffer. </author> <title> Faster sequential genetic linkage computations. </title> <journal> American Journal of Human Genetics, </journal> <volume> 53 </volume> <pages> 252-263, </pages> <year> 1993. </year>
Reference-contexts: This paper complements research conducted by two of us together with R. M. Idury in which we significantly sped up the sequential algorithms in LINKAGE <ref> [2] </ref>. We focus on parallelizing the computation for a single recombination fraction vector and for a small number of pedigrees. <p> In her Master's thesis, Vaughan parallelizes LINKMAP for a single recombination fraction vector, but her work focuses on load balancing issues in a heterogeneous computing environment and in the presence of other workloads [23]. Unlike both previous parallel LINKAGE implementations, we start from the faster sequential LINKAGE algorithms <ref> [2] </ref> instead of the algorithms that had previously been distributed in the LINKAGE package. It is important to investigate whether the new LINKAGE algorithms are also amenable to parallel implementation, so that the advantages of better algorithms and parallel computers can be combined. <p> We seek to address three interdisciplinary questions: 1. Is it possible to parallelize linkage computations that have as input only a small number of pedigrees and a small number of initial parameter vectors? 2. Can the new sequential algorithms <ref> [2] </ref> be effectively parallelized? 3. Can good speedups be achieved for long linkage computations on a network of workstations, which is much cheaper and more commonly available than a shared-memory multiprocessor? This paper is organized as follows. <p> We review a few particulars, especially concerning the LINKAGE programs, that are relevant to our parallel implementation. The LINKAGE package contains four related programs LODSCORE, ILINK, LINKMAP, and MLINK; we shall discuss the first three. The improved sequential algorithms in <ref> [2] </ref> are applicable to all the programs. The LODSCORE program searches for a maximum likelihood estimate ^ of the recombination probability. The likelihood is computed with respect to the input pedigree (s). <p> The following summary describes LINKAGE 5.1 [16] and its faster version <ref> [2] </ref>. Given a fixed value of , the outer loop of the likelihood evaluation iterates over all the pedigrees calculating the likelihood for each one. Within a pedigree, the program visits each nuclear family and updates the probabilities of each genotype for each individual. <p> In both of these update situations the algorithm 5 starts with a double nested loop that iterates over the genotypes of the two parents, one loop per parent. One of the improvements made in <ref> [2] </ref> is that in the case where there is only one child, the bulk of the computation can be transformed into two disjoint loops, one on each parent, instead of a double nested loop. A separate gene array is used to accumulate the contributions from each pair of parental genotypes. <p> Such individuals are referred to as unknowns because we do not know their phenotype at some of the loci being studied. The second useful biological fact is that the genotypes can be partitioned into equivalence classes by a relation we call the isozygote relation <ref> [2] </ref>. Two genotypes are isozygotes if at each locus they have the same allele (s). <p> This table stores for each haplotype, the probability that the second parent (the one in the inner loop) passes that haplotype on to a child. This table was introduced in <ref> [2] </ref> to speed up the sequential computation. We applied the idea of sparsity one more time to further improve performance. <p> We use two different network types the commonly available Ethernet networks and the emerging ATM networks. The performance obtained on a network of workstations is then compared to the performance on a shared-memory machine with identical processor power. We use two disease data sets from <ref> [2] </ref> and a new data set: * RP01: data on a large family, UCLA-RP01, with autosomal dominant retini-tis pigmentosa (RP1) from the laboratory of Dr. Stephen P. Daiger at the University of Texas Health Science Center at Houston. <p> Once a set of pedigree information is collected, it is common for geneticists to do many linkage analysis runs on it, changing the set of loci each time. The speedup figures are based on one-processor execution times for the faster version of ILINK used in the tests for <ref> [2] </ref>, but run on a DECstation-5000. Table 1 presents the uniprocessor execution times on the DECstation-5000 workstations. All execution times are reported in seconds.
Reference: [3] <author> S. Dwarkadas, P. Keleher, A. L. Cox, and W. Zwaenepoel. </author> <title> Evaluation of release consistent software distributed shared memory on emerging network technology. </title> <booktitle> In Proceedings of the 20th Annual International Symposium on Computer Architecture, </booktitle> <pages> pages 144-155, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Motivated by the difficulty of writing message passing programs, we have developed a software distributed shared memory (DSM) system for network multicom-puters called TreadMarks [7]. In essence, TreadMarks provides a shared memory abstraction to the programmer, and implements this abstraction efficiently using the underlying message passing system <ref> [8, 3] </ref>. Thus the programmer writes the program as if it were intended for a shared-memory multiprocessor, but the TreadMarks system enables the program to run on a network multicomputer. At the present time, TreadMarks is still under development.
Reference: [4] <author> R. C. Elston and J. Stewart. </author> <title> A general model for the analysis of pedigree data. </title> <booktitle> Human Heredity, </booktitle> <volume> 21 </volume> <pages> 523-542, </pages> <year> 1971. </year>
Reference-contexts: Therefore, we want to parallelize each individual's probability update. We mention as an aside that the strict sequential nature of the updates is specific to the probability update algorithms used in LINKAGE, but only partially inherent in the original update algorithm of Elston and Stewart <ref> [4] </ref>. Elston and Stewart proposed an update order that was strictly bottom-up, which would allow some updates to be done in parallel.
Reference: [5] <author> T. M. Goradia, K. Lange, P. L. Miller, and P. M. Nadkarni. </author> <title> Fast computation of genetic likelihoods on human pedigree data. </title> <booktitle> Human Heredity, </booktitle> <volume> 42 </volume> <pages> 42-62, </pages> <year> 1992. </year>
Reference-contexts: Furthermore, in many disease-location applications the input contains only a small number of pedigrees. There has also been a similar parallel implementation of the MENDEL [13, 14] program <ref> [5] </ref>. In her Master's thesis, Vaughan parallelizes LINKMAP for a single recombination fraction vector, but her work focuses on load balancing issues in a heterogeneous computing environment and in the presence of other workloads [23].
Reference: [6] <author> J. T. Hecht, Y. Wang, B. Connor, S. H. Blanton, and S. P. Daiger. Non-syndromic cleft lip and palate: </author> <title> No evidence of linkage to HLA or factor 13a. </title> <journal> American Journal of Human Genetics, </journal> <volume> 52 </volume> <pages> 1230-1233, </pages> <year> 1993. </year>
Reference-contexts: Jacqueline T. Hecht at the University of Texas Health Science Center at Houston. Diagrams of the families are shown in <ref> [6] </ref>. Subsequent to that paper data was collected on 9 more individuals augmenting 4 of the families. The families include 110 individuals in all. We list for each family, the identifying number given in [6], the number of individuals, the number of generations, and the number of individuals that are unknown <p> Diagrams of the families are shown in <ref> [6] </ref>. Subsequent to that paper data was collected on 9 more individuals augmenting 4 of the families. The families include 110 individuals in all. We list for each family, the identifying number given in [6], the number of individuals, the number of generations, and the number of individuals that are unknown at at least one of the loci we used: [(100,9,2,1) (300,4,2,0) (500,6,2,0) (600,7,3,0) (700,9,3,1) (800,7,3,1) (900,8,3,1) (1000,17,3,3) (1100,22,3,12) (1200,11,2,2) (1400,6,2,3) (1500,4,2,0)].
Reference: [7] <author> P. Keleher, A. L. Cox, S. Dwarkadas, and W. Zwaenepoel. Treadmarks: </author> <title> Distributed shared memory on standard workstations and operating systems. </title> <booktitle> To appear in Proceedings of the 1994 Winter USENIX Conference, </booktitle> <year> 1994. </year> <month> 20 </month>
Reference-contexts: Our parallel implementation is written in a shared-memory programming style. We evaluated our implementation on two different architectures: a shared-memory multiprocessor and a network of workstations. On the network of workstations we used TreadMarks, an experimental distributed shared memory system under development at Rice University <ref> [7] </ref>. Distributed shared memory is a software runtime system that enables processes executing on different workstations to share mem 3 ory, even though the hardware connecting the workstations only provides message passing. <p> Motivated by the difficulty of writing message passing programs, we have developed a software distributed shared memory (DSM) system for network multicom-puters called TreadMarks <ref> [7] </ref>. In essence, TreadMarks provides a shared memory abstraction to the programmer, and implements this abstraction efficiently using the underlying message passing system [8, 3].
Reference: [8] <author> P. Keleher, A. L. Cox, and W. Zwaenepoel. </author> <title> Lazy release consistency for software distributed shared memory. </title> <booktitle> In Proceedings of the 19th Annual International Symposium on Computer Architecture, </booktitle> <pages> pages 13-21, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: Motivated by the difficulty of writing message passing programs, we have developed a software distributed shared memory (DSM) system for network multicom-puters called TreadMarks [7]. In essence, TreadMarks provides a shared memory abstraction to the programmer, and implements this abstraction efficiently using the underlying message passing system <ref> [8, 3] </ref>. Thus the programmer writes the program as if it were intended for a shared-memory multiprocessor, but the TreadMarks system enables the program to run on a network multicomputer. At the present time, TreadMarks is still under development.
Reference: [9] <author> J. M. Lalouel. </author> <title> GEMINI a computer program for optimization of general nonlinear functions. </title> <type> Technical Report 14, </type> <institution> University of Utah, Department of Medical Biophysics and Computing, </institution> <address> Salt Lake City, Utah, </address> <year> 1979. </year>
Reference-contexts: The ILINK program searches for a maximum likelihood estimate of the multilocus vector. Both LODSCORE and ILINK start from a single initial estimate of the 4 recombination fraction, and use an iterative procedure called GEMINI <ref> [9] </ref> to find the maximum likelihood estimate ^ . Like most iterative procedures, GEMINI can only guarantee to find a local optimum and not a global optimum. In contrast, LINKMAP takes multiple values of the vector and computes the likelihood for each one.
Reference: [10] <author> E. S. Lander and P. Green. </author> <title> Construction of multilocus genetic linkage maps in humans. </title> <booktitle> Proc. </booktitle> <institution> Nat. Acad. Sci. USA, </institution> <month> 84 </month> <pages> 2363-2367, </pages> <year> 1987. </year>
Reference-contexts: 1 Introduction Genetic linkage analysis is a statistical technique that uses family pedigree information to map human genes and locate disease genes in the human genome. Several computer packages have been written for linkage computations and most published linkage studies use one of these programs <ref> [20, 21, 16, 15, 17, 11, 10, 13, 14] </ref>. As the ability to collect large family pedigrees with more informative genes has improved, the magnitude of linkage computations that geneticists want to run has increased.
Reference: [11] <author> E. S. Lander, P. Green, J. Abrahamson, A. Barlow, M. J. Daly, S. E. Lin-coln, and L. Newburg. MAPMAKER: </author> <title> An interactive computer package for constructing primary genetic linkage maps of experimental and natural populations. </title> <journal> Genomics, </journal> <volume> 1 </volume> <pages> 174-81, </pages> <year> 1987. </year>
Reference-contexts: 1 Introduction Genetic linkage analysis is a statistical technique that uses family pedigree information to map human genes and locate disease genes in the human genome. Several computer packages have been written for linkage computations and most published linkage studies use one of these programs <ref> [20, 21, 16, 15, 17, 11, 10, 13, 14] </ref>. As the ability to collect large family pedigrees with more informative genes has improved, the magnitude of linkage computations that geneticists want to run has increased.
Reference: [12] <author> K. Lange and T. M. Goradia. </author> <title> An algorithm for automatic genotype elimination. </title> <journal> American Journal of Human Genetics, </journal> <volume> 40 </volume> <pages> 250-256, </pages> <year> 1987. </year>
Reference-contexts: The problem of deciding whether a pair of parental genotypes (i; j) is compatible with the children is different from the problem of genotype elimination as addressed in <ref> [12] </ref> or in the unknown preprocessor program that is part of LINKAGE. The 14 15 distinction can best be illustrated with a trivial one-locus, two-allele, one-child ex-ample. Let the parents be p and q and the child be r.
Reference: [13] <author> K. Lange, D. Weeks, and M. Boehnke. </author> <title> Programs for pedigree analysis: MENDEL, FISHER, </title> <booktitle> and dGene. Genetic Epidemiology, </booktitle> <volume> 5 </volume> <pages> 471-473, </pages> <year> 1988. </year>
Reference-contexts: 1 Introduction Genetic linkage analysis is a statistical technique that uses family pedigree information to map human genes and locate disease genes in the human genome. Several computer packages have been written for linkage computations and most published linkage studies use one of these programs <ref> [20, 21, 16, 15, 17, 11, 10, 13, 14] </ref>. As the ability to collect large family pedigrees with more informative genes has improved, the magnitude of linkage computations that geneticists want to run has increased. <p> Furthermore, in many disease-location applications the input contains only a small number of pedigrees. There has also been a similar parallel implementation of the MENDEL <ref> [13, 14] </ref> program [5]. In her Master's thesis, Vaughan parallelizes LINKMAP for a single recombination fraction vector, but her work focuses on load balancing issues in a heterogeneous computing environment and in the presence of other workloads [23].
Reference: [14] <author> K. Lange and D. E. Weeks. </author> <title> Efficient computation of lod scores genotype elimination, genotype redefinition, and hybrid maximum likelihood algorithms. </title> <journal> Annals of Human Genetics, </journal> <volume> 53 </volume> <pages> 67-83, </pages> <year> 1989. </year>
Reference-contexts: 1 Introduction Genetic linkage analysis is a statistical technique that uses family pedigree information to map human genes and locate disease genes in the human genome. Several computer packages have been written for linkage computations and most published linkage studies use one of these programs <ref> [20, 21, 16, 15, 17, 11, 10, 13, 14] </ref>. As the ability to collect large family pedigrees with more informative genes has improved, the magnitude of linkage computations that geneticists want to run has increased. <p> Furthermore, in many disease-location applications the input contains only a small number of pedigrees. There has also been a similar parallel implementation of the MENDEL <ref> [13, 14] </ref> program [5]. In her Master's thesis, Vaughan parallelizes LINKMAP for a single recombination fraction vector, but her work focuses on load balancing issues in a heterogeneous computing environment and in the presence of other workloads [23].
Reference: [15] <author> G. M. Lathrop and J. M. Lalouel. </author> <title> Easy calculations of lod scores and genetic risks on small computers. </title> <journal> American Journal of Human Genetics, </journal> <volume> 36 </volume> <pages> 460-465, </pages> <year> 1984. </year>
Reference-contexts: 1 Introduction Genetic linkage analysis is a statistical technique that uses family pedigree information to map human genes and locate disease genes in the human genome. Several computer packages have been written for linkage computations and most published linkage studies use one of these programs <ref> [20, 21, 16, 15, 17, 11, 10, 13, 14] </ref>. As the ability to collect large family pedigrees with more informative genes has improved, the magnitude of linkage computations that geneticists want to run has increased. <p> We see two complementary approaches that should be pursued to speed up linkage computations: better algorithms and parallel computers. In this paper we report on a parallel implementation of programs from the LINKAGE <ref> [16, 15, 17] </ref> package, which is a very popular general purpose set of linkage analysis programs. This paper complements research conducted by two of us together with R. M. Idury in which we significantly sped up the sequential algorithms in LINKAGE [2].
Reference: [16] <author> G. M. Lathrop, J. M. Lalouel, C. Julier, and J. Ott. </author> <title> Strategies for multilocus linkage analysis in humans. </title> <booktitle> Proc. </booktitle> <institution> Natl. Acad. Sci. USA, </institution> <month> 81 </month> <pages> 3443-3446, </pages> <month> June </month> <year> 1984. </year>
Reference-contexts: 1 Introduction Genetic linkage analysis is a statistical technique that uses family pedigree information to map human genes and locate disease genes in the human genome. Several computer packages have been written for linkage computations and most published linkage studies use one of these programs <ref> [20, 21, 16, 15, 17, 11, 10, 13, 14] </ref>. As the ability to collect large family pedigrees with more informative genes has improved, the magnitude of linkage computations that geneticists want to run has increased. <p> We see two complementary approaches that should be pursued to speed up linkage computations: better algorithms and parallel computers. In this paper we report on a parallel implementation of programs from the LINKAGE <ref> [16, 15, 17] </ref> package, which is a very popular general purpose set of linkage analysis programs. This paper complements research conducted by two of us together with R. M. Idury in which we significantly sped up the sequential algorithms in LINKAGE [2]. <p> Almost all the code we modified is shared by all the LINKAGE programs. 3 Review of Sequential Likelihood Algorithm The basic structure of the likelihood computation as done in LINKAGE is outlined in the section on Numerical and Computerized Methods in [22]. The following summary describes LINKAGE 5.1 <ref> [16] </ref> and its faster version [2]. Given a fixed value of , the outer loop of the likelihood evaluation iterates over all the pedigrees calculating the likelihood for each one. Within a pedigree, the program visits each nuclear family and updates the probabilities of each genotype for each individual.
Reference: [17] <author> G. M. Lathrop, J. M. Lalouel, C. Julier, and J. Ott. </author> <title> Multilocus linkage analysis in humans: detection of linkage and estimation of recombination. </title> <journal> American Journal of Human Genetics, </journal> <volume> 37 </volume> <pages> 482-498, </pages> <year> 1985. </year>
Reference-contexts: 1 Introduction Genetic linkage analysis is a statistical technique that uses family pedigree information to map human genes and locate disease genes in the human genome. Several computer packages have been written for linkage computations and most published linkage studies use one of these programs <ref> [20, 21, 16, 15, 17, 11, 10, 13, 14] </ref>. As the ability to collect large family pedigrees with more informative genes has improved, the magnitude of linkage computations that geneticists want to run has increased. <p> We see two complementary approaches that should be pursued to speed up linkage computations: better algorithms and parallel computers. In this paper we report on a parallel implementation of programs from the LINKAGE <ref> [16, 15, 17] </ref> package, which is a very popular general purpose set of linkage analysis programs. This paper complements research conducted by two of us together with R. M. Idury in which we significantly sped up the sequential algorithms in LINKAGE [2].
Reference: [18] <author> A. Law, C. W. Richard III, R. W. Cottingham Jr ., G. M. Lathrop, D. R. Cox, and R. M. Myers. </author> <title> Genetic linkage analysis of bipolar affective disorder in an old order amish pedigree. </title> <journal> Human Genetics, </journal> <volume> 88 </volume> <pages> 562-568, </pages> <year> 1992. </year>
Reference-contexts: David R. Cox and Richard M. Myers at the University of California at San Francisco. This pedigree spans 5 generations with 96 individuals and contains 1 marriage loop <ref> [18] </ref>.
Reference: [19] <author> P. L. Miller, P. Nadkarni, J. E. Gelernter, N. Carriero, A. J. Pakstis, and K. K. </author> <title> Kidd. Parallelizing genetic linkage analysis: A case study for applying parallel computation in molecular biology. </title> <journal> Computers and Biomedical Research, </journal> <volume> 24 </volume> <pages> 234-248, </pages> <year> 1991. </year>
Reference-contexts: M. Idury in which we significantly sped up the sequential algorithms in LINKAGE [2]. We focus on parallelizing the computation for a single recombination fraction vector and for a small number of pedigrees. This approach distinguishes our work from a previous parallel implementation of LINKMAP from the LINKAGE package <ref> [19] </ref>, in which likelihood computations on different pedigrees and with different recombination fraction vectors are distributed on different processors. This distribution is not appropriate for the most CPU-intensive of the LINKAGE programs, called ILINK, partly because ILINK has only one starting recombination fraction vector. <p> In contrast, LINKMAP takes multiple values of the vector and computes the likelihood for each one. The computation of the likelihood for each and for each pedigree are essentially independent except for some shared input/output. The parallel implementation of LINKMAP <ref> [19] </ref> takes advantage of this observation and distributes likelihood computations for separate pedigrees and vectors on different processors. The main challenge is to balance the load among the different processors, so that each processor is working most of the time. <p> This effort confirmed our experience that a synthesis of the biology and computer science knowledge relevant to the problem is necessary to make linkage analysis software run much faster. We concur with the authors of <ref> [19] </ref> that to parallelize the LINKAGE programs effectively, the programmer must put explicit parallel instructions in the programs using knowledge of the underlying genetic application domain.
Reference: [20] <author> J. Ott. </author> <title> Estimation of the recombination fraction in human pedigrees- efficient computation of the likelihood for human linkage studies. </title> <journal> American Journal of Human Genetics, </journal> <volume> 26 </volume> <pages> 588-597, </pages> <year> 1974. </year>
Reference-contexts: 1 Introduction Genetic linkage analysis is a statistical technique that uses family pedigree information to map human genes and locate disease genes in the human genome. Several computer packages have been written for linkage computations and most published linkage studies use one of these programs <ref> [20, 21, 16, 15, 17, 11, 10, 13, 14] </ref>. As the ability to collect large family pedigrees with more informative genes has improved, the magnitude of linkage computations that geneticists want to run has increased.
Reference: [21] <author> J. Ott. </author> <title> A computer program for linkage analysis of general human pedigrees. </title> <journal> American Journal of Human Genetics, </journal> <volume> 28 </volume> <pages> 528-29, </pages> <year> 1976. </year>
Reference-contexts: 1 Introduction Genetic linkage analysis is a statistical technique that uses family pedigree information to map human genes and locate disease genes in the human genome. Several computer packages have been written for linkage computations and most published linkage studies use one of these programs <ref> [20, 21, 16, 15, 17, 11, 10, 13, 14] </ref>. As the ability to collect large family pedigrees with more informative genes has improved, the magnitude of linkage computations that geneticists want to run has increased.
Reference: [22] <author> J. Ott. </author> <title> Analysis of Human Genetic Linkage. </title> <publisher> The Johns Hopkins University Press, </publisher> <address> Baltimore and London, </address> <year> 1991. </year> <note> Revised edition. </note>
Reference-contexts: Two genes are said to be linked if the recombination probability between them is less than .5. The recombination probability is denoted by . A thorough treatment of genetic linkage analysis is given in Ott's monograph <ref> [22] </ref>. We review a few particulars, especially concerning the LINKAGE programs, that are relevant to our parallel implementation. The LINKAGE package contains four related programs LODSCORE, ILINK, LINKMAP, and MLINK; we shall discuss the first three. The improved sequential algorithms in [2] are applicable to all the programs. <p> Almost all the code we modified is shared by all the LINKAGE programs. 3 Review of Sequential Likelihood Algorithm The basic structure of the likelihood computation as done in LINKAGE is outlined in the section on Numerical and Computerized Methods in <ref> [22] </ref>. The following summary describes LINKAGE 5.1 [16] and its faster version [2]. Given a fixed value of , the outer loop of the likelihood evaluation iterates over all the pedigrees calculating the likelihood for each one. <p> Thus, one evaluation of the likelihood estimate may include many pedigree traversals. In each traversal each nuclear family update is parallelized as before, resulting in many small pieces of work and large communication overhead. For more details on how LINKAGE handles loops see pages 170-171 of <ref> [22] </ref>. As discussed in the section describing the parallel algorithm, when the size of the reduced iteration rectangle R drops below a threshold, the TreadMarks version performs the computation sequentially to avoid high communication overheads. Although this method reduces communication, it leads to further load imbalance in the TreadMarks version.
Reference: [23] <author> M. S. Vaughan. </author> <title> A distributed approach to human genetic linkage analysis. M.S. </title> <type> Thesis, </type> <institution> Department of Computer Science, Duke University, </institution> <year> 1991. </year> <month> 22 </month>
Reference-contexts: There has also been a similar parallel implementation of the MENDEL [13, 14] program [5]. In her Master's thesis, Vaughan parallelizes LINKMAP for a single recombination fraction vector, but her work focuses on load balancing issues in a heterogeneous computing environment and in the presence of other workloads <ref> [23] </ref>. Unlike both previous parallel LINKAGE implementations, we start from the faster sequential LINKAGE algorithms [2] instead of the algorithms that had previously been distributed in the LINKAGE package.
References-found: 23

