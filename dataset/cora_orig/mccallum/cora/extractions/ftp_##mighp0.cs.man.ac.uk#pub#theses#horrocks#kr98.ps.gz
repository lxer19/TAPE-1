URL: ftp://mighp0.cs.man.ac.uk/pub/theses/horrocks/kr98.ps.gz
Refering-URL: http://www.cs.man.ac.uk/mig/people/horrocks/publications.html
Root-URL: http://www.cs.man.ac.uk
Email: horrocks@cs.man.ac.uk  
Title: Using an Expressive Description Logic: FaCT or Fiction?  
Author: Ian R. Horrocks 
Web: www.cs.man.ac.uk/horrocks  
Address: Manchester M13 9PL, UK  
Affiliation: Medical Informatics Group Department of Computer Science University of Manchester  
Abstract: Description Logics form a family of formalisms closely related to semantic networks but with the distinguishing characteristic that the semantics of the concept description language is formally defined, so that the subsumption relationship between two concept descriptions can be computed by a suitable algorithm. Description Logics have proved useful in a range of applications but their wider acceptance has been hindered by their limited expressiveness and the intractability of their subsumption algorithms. This paper addresses both these issues by describing a sound and complete tableaux subsumption testing algorithm for a relatively expressive Description Logic which, in spite of the logic's worst case complexity, has been shown to perform well in realistic applications. 
Abstract-found: 1
Intro-found: 1
Reference: <editor> L. C. Aiello, J. Doyle, and S. Shapiro, editors. </editor> <booktitle> Principals of Knowledge Representation and Reasoning: Proceedings of the Fifth International Conference (KR'96). </booktitle> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Francisco, CA, </address> <year> 1996. </year>
Reference: <author> A. Artale, N. Guarino, E. Franconi, and L. Pazzi. </author> <title> Part-whole relations in object-centered systems: an overview. </title> <journal> Data and Knowledge Engineering, </journal> <volume> 20:347383, </volume> <year> 1996. </year>
Reference: <author> F. Baader. </author> <title> Augmenting concept languages by transitive closure of roles: An alternative to terminological cycles. </title> <institution> Research Report RR-90-13, Deutsches Forschungszen-trum fur Kunstliche Intelligenz GmbH (DFKI), </institution> <year> 1990. </year>
Reference-contexts: the basis for a terminological classifier, FaCT, which has been developed to demonstrate the feasibility of using the algorithm for subsumption reasoning in realistic applications. 2 TRANSITIVE ROLES Extensions to ALC which support some form of transitive roles include CIQ (Giacomo and Lenzerini 1996), T SL (Schild 1991), ALC + <ref> (Baader 1990) </ref>, ALC R + and ALC (Sattler 1996). Of these, CIQ, T SL and ALC + all support role expressions with transitive or transitive reflexive operators, and from correspondence to propositional dynamic logics their satisfiability problems are known to be EXP TIME-complete (Schild 1991). <p> Cycle detection (blocking) involves comparing sets of concepts, and this is complicated in ALC + by the need to deal with concepts containing role expressions. It can be shown, for example, that identifying equivalent role expressions is itself a PSPACE-complete problem <ref> (Baader 1990) </ref>. 2. It is simpler to deal with cycles once they have been detected, because in the ALCH R + algorithm all cycles lead to a valid cyclical model. <p> A procedure called internalisation <ref> (Baader 1990) </ref> can be used to test the satisfiability of a concept expression D with respect to a terminology T containing an arbitrary set of GCIs fA 1 v B 1 ; : : : ; A n v B n g.
Reference: <author> F. Baader, M. Buchheit, M.A. Jeusfeld, and W. Nutt, </author> <title> editors. Reasoning about structured objects: knowledge representation meets databases. </title> <booktitle> Proceedings of the 3rd Workshop KRDB'96, </booktitle> <year> 1996. </year>
Reference: <editor> F. Baader, E. Franconi, B. Hollunder, B. Nebel, and H.-J. </editor> <title> Profitlich. An empirical analysis of optimization techniques for terminological representation systems or: Making KRIS get a move on. </title> <editor> In B. Nebel, C. Rich, and W. Swartout, editors, </editor> <booktitle> Principals of Knowledge Representation and Reasoning: Proceedings of the Third International Conference (KR'92), </booktitle> <pages> pages 270 281. </pages> <publisher> Morgan-Kaufmann Publishers, </publisher> <address> San Francisco, CA, </address> <year> 1992. </year> <note> Also available as DFKI RR-93-03. </note>
Reference-contexts: Terminological cycles can be dealt with in a much more efficient manner by using lazy unfolding: using the definitions in T to expand concept names in D, but only as required by the progress of the tableau expansion <ref> (Baader et al. 1992) </ref>. When building a tree T, lazy unfolding ensures that if the terminology T contains a primitive definition axiom CN v C, then for any node x in T, CN 2 L (x) ) C 2 L (x). <p> The encoding process gives a unique identifier to each lexically distinct concept expressions which, in conjunction with lazy unfolding and the retention of unfolded identifiers, facilitates early clash detection when an identifier and its negation occur in the same node label <ref> (Baader et al. 1992) </ref>. * Absorptiona technique which eliminates GCIs from a terminology by absorbing them into primitive con cept definition axioms.
Reference: <editor> F. Baader, H.-J. Heinsohn, B. Hollunder, J. Muller, B. Nebel, W. Nutt, and H.-J. </editor> <title> Profitlich. Terminological knowledge representation: A proposal for a terminological logic. </title> <type> Technical Memo TM-90-04, </type> <institution> Deutsches Forschungszentrum fur K unstliche Intelligenz GmbH (DFKI), </institution> <year> 1991. </year>
Reference-contexts: A standard Tarski style model theoretic semantics is used to interpret concept expressions and to justify subsumption inferences <ref> (Baader et al. 1991) </ref>. The meaning of concepts and roles is given by an interpretation I which is a pair ( I ; I ), where I is the domain (a set) and I is an interpretation function. <p> Using the optimised algorithm, FaCT is able to classify the KB in 379s of CPU time, performing a total of 122,695 subsumption tests at an average of 0.003s per test. FaCT's performance contrasts with that of the KRIS system <ref> (Baader and Hollunder 1991) </ref> which had only classified a small proportion (10%) of a simplified version of the KB (with cycles and transitive roles eliminated) after 100 hours of CPU time.
Reference: <author> F. Baader and B. </author> <title> Hollunder. A terminological knowledge representation system with complete inference algorithms. </title> <booktitle> In Processing declarative knowledge: International workshop PDK'91, number 567 in Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 6786, </pages> <address> Berlin, 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: A standard Tarski style model theoretic semantics is used to interpret concept expressions and to justify subsumption inferences <ref> (Baader et al. 1991) </ref>. The meaning of concepts and roles is given by an interpretation I which is a pair ( I ; I ), where I is the domain (a set) and I is an interpretation function. <p> Using the optimised algorithm, FaCT is able to classify the KB in 379s of CPU time, performing a total of 122,695 subsumption tests at an average of 0.003s per test. FaCT's performance contrasts with that of the KRIS system <ref> (Baader and Hollunder 1991) </ref> which had only classified a small proportion (10%) of a simplified version of the KB (with cycles and transitive roles eliminated) after 100 hours of CPU time.
Reference: <author> A. B. Baker. </author> <title> Intelligent Backtracking on Constraint Satisfaction Problems: Experimental and Theoretical Results. </title> <type> PhD thesis, </type> <institution> University of Oregon, </institution> <year> 1995. </year>
Reference-contexts: A similar technique is also used in the KSAT modal K (m) (equivalently ALC (Schild 1991)) satisfiability testing algorithm (Giunchiglia and Sebastiani 1996). * Dependency directed backtrackinga technique adapted from constraint satisfiability problem solving <ref> (Baker 1995) </ref> which addresses the problem of thrashing (large amounts of unproductive backtracking search) caused by inherent unsatisfiability concealed in sub-problems. Backjumping labels concept expressions with a dependency set indicating the branch points on which they depend.
Reference: <author> J. I. Berman, H. H. Moore IV, and J. R. Wright. </author> <title> CLASSIC and PROSE stories: Enabling technologies for knowledge based systems. </title> <journal> AT&T Technical Journal, </journal> <pages> pages 6978, </pages> <year> 1994. </year>
Reference: <author> A. Borgida. </author> <title> Description logics are not just for the flightless-birds: A new look at the utility and foundations of description logics. </title> <type> Technical Report DCS-TR-295, </type> <institution> New Brunswick Department of Computer Science, Rutgers University, </institution> <year> 1992. </year>
Reference-contexts: wider acceptance has been hindered by their limited expressiveness (Doyle and Patil 1991; MacGregor 1991) and the intractability of their subsumption algorithms (Heinsohn et al. 1994; Speel et al. 1995). 1 This paper addresses both these issues by 1 A desire/requirement for sound and complete reasoning is assumed, but see <ref> (Borgida 1992) </ref> for a discussion of this issue. describing a tableaux subsumption testing algorithm for a relatively expressive DL which, in spite of the logic's worst case complexity, has been shown to perform well in realistic applications.
Reference: <author> P. Bresciani, E. Franconi, and S. Tessaris. </author> <title> Implementing and testing expressive description logics: a preliminary report. </title> <editor> In Ellis et al. </editor> <year> (1995), </year> <pages> pages 2839. </pages>
Reference-contexts: FaCT also performs well as a modal logic theorem prover: Table 1 compares FaCT with CRACK <ref> (Bresciani et al. 1995) </ref>, KSAT and KRIS using a suite of benchmark formulae for modal K (Heuerding and Schwendimann 1996).
Reference: <author> M. Buchheit, F. M. Donini, and A. Schaerf. </author> <title> Decidable reasoning in terminological knowledge representation systems. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 1:109 138, </volume> <year> 1993. </year>
Reference-contexts: Assuming descriptive rather than fixed point semantics (Nebel 1990), terminological cycles can easily be dealt with by treating all concept axioms as GCIs <ref> (Buchheit et al. 1993) </ref>. However, this method is highly inefficient because reasoning with GCIs introduces large numbers of disjunctions and is thus very costly.
Reference: <author> M. Davis, G. Logemann, and D. Loveland. </author> <title> A machine program for theorem proving. </title> <journal> Communications of the ACM, </journal> <volume> 5:394397, </volume> <year> 1962. </year>
Reference-contexts: In effect, absorption restricts the application of this disjunction to nodes where it is really required. * Semantic branchinga search technique adapted from the Davis-Putnam-Logemann-Loveland procedure (DPL) commonly use to solve propositional sat-isfiability (SAT) problems <ref> (Davis et al. 1962) </ref>. Semantic branching works by selecting a concept C from one of the unexpanded disjunctions in the label of a node x and searching L (x) [ fCg and L (x) [ f:Cg. Wasted search is avoided because the two branches are strictly disjoint.
Reference: <author> F. M. Donini, M. Lenzerini, D. Nardi, and W. Nutt. </author> <title> The complexity of concept languages. </title> <institution> Research Report RR-95-07, Deutsches Forschungszentrum fur Kunstliche In-telligenz GmbH (DFKI), </institution> <year> 1995. </year>
Reference-contexts: In (Sattler 1996) an algorithm for deciding the satisfiability of ALC R + concept expressions is presented along with a proof of its soundness and completeness. It is also demonstrated that the complexity of the ALC R + satisfiability problem is PSPACE-complete, the same as for ALC <ref> (Donini et al. 1995) </ref>. ALC extends ALC R + by associating each non-transitive role R with its transitive orbit.
Reference: <author> J. Doyle and R. Patil. </author> <title> Two theses of knowledge representation: Language restrictions, taxonomic classification, and the utility of representation services. </title> <journal> Artificial Intelligence, </journal> <volume> 48:261297, </volume> <year> 1991. </year> <editor> Gerard Ellis, Robert A. Levinson, Andrew Fall, and Veron-ica Dahl, editors. </editor> <title> Knowledge Retrieval, Use and Stor age for Efficiency: </title> <booktitle> Proceedings of the First International KRUSE Symposium, </booktitle> <year> 1995. </year>
Reference: <author> G. De Giacomo and M. Lenzerini. </author> <title> TBox and ABox reasoning in expressive description logics. </title> <editor> In Aiello et al. </editor> <year> (1996), </year> <pages> pages 316327. </pages>
Reference: <author> F. Giunchiglia and R. Sebastiani. </author> <title> A SAT-based decision procedure for ALC. </title> <editor> In Aiello et al. </editor> <year> (1996), </year> <pages> pages 304 314. </pages>
Reference-contexts: A similar technique is also used in the KSAT modal K (m) (equivalently ALC (Schild 1991)) satisfiability testing algorithm <ref> (Giunchiglia and Sebastiani 1996) </ref>. * Dependency directed backtrackinga technique adapted from constraint satisfiability problem solving (Baker 1995) which addresses the problem of thrashing (large amounts of unproductive backtracking search) caused by inherent unsatisfiability concealed in sub-problems.
Reference: <author> C. A. Goble, C. Haul, and S. Bechhofer. </author> <title> Describing and classifying multimedia using the description logic GRAIL. </title> <booktitle> In Proceedings of IS&T/SPIE, </booktitle> <volume> vol 2670, </volume> <booktitle> Storage and Retrieval for Still Image and Video Databases fIVg, </booktitle> <pages> pages 132143, </pages> <address> San Jose, California, USA, </address> <year> 1996. </year>
Reference: <author> R. V. Guha and D. B. Lenat. </author> <title> Enabling agents to work together. </title> <journal> Communications of the ACM, </journal> <volume> 37(7):127142, </volume> <year> 1994. </year>
Reference: <author> J. Heinsohn, D. Kudenko, B. Nebel, and H.-J. Profitlich. </author> <title> An empirical analysis of terminological representation systems. </title> <journal> Artificial Intelligence, </journal> <volume> 68:367397, </volume> <year> 1994. </year>
Reference: <author> A. Heuerding and S. Schwendimann. </author> <title> A benchmark method for the propositional modal logics k, kt, </title> <type> s4. Technical report IAM-96-015, </type> <institution> University of Bern, Switzerland, </institution> <year> 1996. </year>
Reference-contexts: FaCT also performs well as a modal logic theorem prover: Table 1 compares FaCT with CRACK (Bresciani et al. 1995), KSAT and KRIS using a suite of benchmark formulae for modal K <ref> (Heuerding and Schwendimann 1996) </ref>.
Reference: <author> B. Hollunder and W. Nutt. </author> <title> Subsumption algorithms for concept languages. </title> <institution> Research Report RR-90-04, Deutsches Forschungszentrum fur K unstliche Intelli-genz GmbH (DFKI), </institution> <year> 1990. </year>
Reference-contexts: Unlike ALCF <ref> (Hollunder and Nutt 1990) </ref>, ALCHf R + does not include support for attribute value map concept forming operators, but it only requires a minor extension to the ALCH R + algorithm.
Reference: <author> I. Horrocks. </author> <title> Optimising Tableaux Decision Procedures for Description Logics. </title> <type> PhD thesis, </type> <institution> University of Manch-ester, </institution> <year> 1997. </year>
Reference-contexts: To improve the performance of the algorithm, a range of optimisations have been employed <ref> (Horrocks 1997) </ref>. These include: * Lexical normalisation and encoding of concept expressionsa technique which takes the hierarchical structure of terminologies to its logical conclusion by lexically normalising and encoding all concept expressions and, recursively, their sub-expressions. <p> (and thus the non-subsumption C 6v D) can be demonstrated by showing that tableaux for C and :D joined at their root nodes result in a valid tableau for C u:D. 6.2 EMPIRICAL EVALUATION The performance of the FaCT system has been evaluated using a variety of empirical testing procedures <ref> (Horrocks 1997) </ref>. When assessing the results of these tests it is important to note the the current system is an experimental prototype written in Common Lisp, and that very little consideration has been given to low-level efficiency issues.
Reference: <author> I. Horrocks, A. Rector, and C. Goble. </author> <title> A description logic based schema for the classification of medical data. </title> <editor> In Baader et al. </editor> <year> (1996), </year> <pages> pages 2428. </pages>
Reference: <author> P. Hors. </author> <title> Description logics to specify the partwhole relation. </title> <booktitle> In Proceedings of the ECAI'94 Workshop on Parts and Wholes: Conceptual PartWhole Relations and Formal Mereology, </booktitle> <pages> pages 103109, </pages> <year> 1994. </year>
Reference: <author> U. Kussner. </author> <title> Applying DL in automatic dialoge interpreting. </title> <editor> In M.-C. Rousset, R. Brachman, F. Donini, E. Fran-coni, I. Horrocks, and A. Levy, editors, </editor> <booktitle> Collected Papers from the International Description Logics Workshop (DL'97), </booktitle> <pages> pages 5458, </pages> <year> 1997. </year>
Reference: <author> A. Y. Levy and M.-C. Rousset. </author> <title> Using description logics to model and reason about views. </title> <editor> In Baader et al. </editor> <year> (1996), </year> <pages> pages 4849. </pages>
Reference-contexts: ALC with transitively closed primitive roles and role inclusion axioms, the combination of which enables a hierarchy of transitive and non-transitive roles to be defineda fundamental requirement of the GALEN projectand allows reasoning with respect to general terminologies (see Section 5), a feature which is also required by some applications <ref> (Levy and Rousset 1996) </ref>. A tableaux satisfiability testing algo-rithm for ALCH R + will be presented, along with a proof of its soundness and completeness, and an extension to the algorithm which supports reasoning with attributes (functional/feature roles) will also be described.
Reference: <author> R. M. MacGregor. </author> <title> The evolving technology of classification-based knowledge representation systems. </title>
Reference: <editor> In J. F. Sowa, editor, </editor> <booktitle> Principals of Semantic Networks: Explorations in the representation of knowledge, chapter 13, </booktitle> <pages> pages 385400. </pages> <publisher> Morgan-Kaufmann, </publisher> <year> 1991. </year>
Reference: <author> E. Mays, R. Weida, R. Dionne, M. Laker, B. White, C. Liang, and F. J. Oles. </author> <title> Scalable and expressive medical terminologies. </title> <booktitle> In Proceedings of the 1996 AMAI Fall Symposium, </booktitle> <year> 1996. </year>
Reference: <author> B. Nebel. </author> <title> Reasoning and Revision in Hybrid Representation Systems. </title> <booktitle> Number 422 in Lecture Notes in Artificial Intelligence. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1990. </year>
Reference-contexts: The properties of U ensure that, in any model constructed by the tableaux algorithm, every individual satisfies M, and thus satisfies each of the GCIs in T . Assuming descriptive rather than fixed point semantics <ref> (Nebel 1990) </ref>, terminological cycles can easily be dealt with by treating all concept axioms as GCIs (Buchheit et al. 1993). However, this method is highly inefficient because reasoning with GCIs introduces large numbers of disjunctions and is thus very costly.
Reference: <author> W. A. Nowlan. </author> <title> Structured methods of information management for medical records. </title> <type> PhD thesis, </type> <institution> University of Manchester, </institution> <year> 1993. </year>
Reference-contexts: However design studies at the outset of the project identified expressive requirements which were satisfied by few if any implemented DL systems <ref> (Nowlan 1993) </ref>, in particular the ability to reason about transitive part-whole, causal and compositional relations (called roles in DLs) (Rector et al. 1997).
Reference: <author> F. Oppacher and E. Suen. HARP: </author> <title> A tableau-based theorem prover. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 4:69100, </volume> <year> 1988. </year>
Reference-contexts: The algorithm can then jump back over intervening branch points without exploring alternative branches. A similar technique was used in the HARP theorem prover <ref> (Oppacher and Suen 1988) </ref>. * Caching and re-using partial modelsa technique which takes advantage of the repetitive structure of the satisfiability problems generated during terminological classification by using cached partial tableaux to demonstrate obvious satisfiability.
Reference: <author> L. Padgham and P. Lambrix. </author> <title> A framework for part of hierarchies in terminological logics. </title> <editor> In J. Doyle, E. Sandewall, and P. Torasso, editors, </editor> <booktitle> Principals of Knowledge Representation and Reasoning: Proceedings of the Fourth International Conference (KR'94), </booktitle> <pages> pages 485496. </pages> <publisher> Morgan-Kaufmann Publishers, </publisher> <address> San Francisco, CA, </address> <year> 1994. </year>
Reference: <author> A. Rector, S. Bechhofer, C. A. Goble, I. Horrocks, W. </author> <title> A. </title>
Reference: <author> Nowlan, and W. D. Solomon. </author> <title> The GRAIL concept mod-elling language for medical terminology. </title> <booktitle> Artificial Intelligence in Medicine, </booktitle> <address> 9:139171, </address> <year> 1997. </year>
Reference: <author> A. Rector and I. Horrocks. </author> <title> Experience building a large, reusable medical ontology using a description logic with transitivity and concept inclusions. </title> <booktitle> In Proceedings of the Workshop on Ontological Engineering, AAAI Spring Symposium (AAAI'97). </booktitle> <publisher> AAAI Press, </publisher> <address> Menlo Park, Cali-fornia, </address> <year> 1997. </year> <note> To appear. </note>
Reference-contexts: However design studies at the outset of the project identified expressive requirements which were satisfied by few if any implemented DL systems (Nowlan 1993), in particular the ability to reason about transitive part-whole, causal and compositional relations (called roles in DLs) <ref> (Rector et al. 1997) </ref>. The importance of reasoning with transitive roles has long been recognised (Hors 1994; Padgham and Lambrix 1994; Artale et al. 1996), and has been identified as a requirement in other application domains, particularly those concerned with complex physically composed objects, e.g., engineering (Sattler 1995).
Reference: <author> A. L. Rector, </author> <title> W A Nowlan, and A Glowinski. Goals for concept representation in the GALEN project. </title> <booktitle> In Proceedings of the 17th Annual Symposium on Computer Applications in Medical Care (SCAMC'93), </booktitle> <pages> pages 414 418, </pages> <address> Washington DC, USA, </address> <year> 1993. </year>
Reference-contexts: An example of such an application is the European GALEN project, which aims to promote the sharing and re-use of medical data by building a large medical terminology ontology which can be used by application designers as a flexible and extensible classification schema <ref> (Rector et al. 1993) </ref>. However design studies at the outset of the project identified expressive requirements which were satisfied by few if any implemented DL systems (Nowlan 1993), in particular the ability to reason about transitive part-whole, causal and compositional relations (called roles in DLs) (Rector et al. 1997).
Reference: <author> U. Sattler. </author> <title> A concept language for engineering applications with partwhole relations. </title> <booktitle> In Proceedings of the International Conference on Description LogicsDL'95, </booktitle> <pages> pages 119123, </pages> <address> Roma, Italy, </address> <year> 1995. </year>
Reference: <author> U. Sattler. </author> <title> A concept language extended with different kinds of transitive roles. </title> <editor> In G. Gorz and S. Holldobler, editors, </editor> <booktitle> 20. Deutsche Jahrestagung f ur K unstliche Intel-ligenz, number 1137 in Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 333345. </pages> <publisher> Springer Verlag, </publisher> <year> 1996. </year>
Reference-contexts: which has been developed to demonstrate the feasibility of using the algorithm for subsumption reasoning in realistic applications. 2 TRANSITIVE ROLES Extensions to ALC which support some form of transitive roles include CIQ (Giacomo and Lenzerini 1996), T SL (Schild 1991), ALC + (Baader 1990), ALC R + and ALC <ref> (Sattler 1996) </ref>. Of these, CIQ, T SL and ALC + all support role expressions with transitive or transitive reflexive operators, and from correspondence to propositional dynamic logics their satisfiability problems are known to be EXP TIME-complete (Schild 1991). <p> The ALC R + and ALC DLs support transitive roles without providing a general transitive closure operator, and were investigated in the hope that a more restricted form of transitive role might lead to a satisfiability problem in a lower complexity class <ref> (Sattler 1996) </ref>. ALC R + augments ALC with transitively closed primitive roles: an ALC R + terminology may include axioms of the form R 2 R + , where R is a role name and R + is the set of transitive roles names in the terminology. In (Sattler 1996) an <p> complexity class <ref> (Sattler 1996) </ref>. ALC R + augments ALC with transitively closed primitive roles: an ALC R + terminology may include axioms of the form R 2 R + , where R is a role name and R + is the set of transitive roles names in the terminology. In (Sattler 1996) an algorithm for deciding the satisfiability of ALC R + concept expressions is presented along with a proof of its soundness and completeness. It is also demonstrated that the complexity of the ALC R + satisfiability problem is PSPACE-complete, the same as for ALC (Donini et al. 1995). <p> The algorithm and proof are extensions of those described for ALC R + <ref> (Sattler 1996) </ref>. 3.1 SYNTAX AND SEMANTICS ALCH R + is the DL obtained by augmenting ALC with transitively closed primitive roles and primitive role introduction axioms.
Reference: <author> K. Schild. </author> <title> A correspondence theory for terminological logics: Preliminary report. </title> <booktitle> In Proceedings of the 12th International Joint Conference on Artificial Intelligence (IJCAI-91), </booktitle> <pages> pages 466471, </pages> <year> 1991. </year>
Reference-contexts: of this algorithm forms the basis for a terminological classifier, FaCT, which has been developed to demonstrate the feasibility of using the algorithm for subsumption reasoning in realistic applications. 2 TRANSITIVE ROLES Extensions to ALC which support some form of transitive roles include CIQ (Giacomo and Lenzerini 1996), T SL <ref> (Schild 1991) </ref>, ALC + (Baader 1990), ALC R + and ALC (Sattler 1996). Of these, CIQ, T SL and ALC + all support role expressions with transitive or transitive reflexive operators, and from correspondence to propositional dynamic logics their satisfiability problems are known to be EXP TIME-complete (Schild 1991). <p> 1996), T SL <ref> (Schild 1991) </ref>, ALC + (Baader 1990), ALC R + and ALC (Sattler 1996). Of these, CIQ, T SL and ALC + all support role expressions with transitive or transitive reflexive operators, and from correspondence to propositional dynamic logics their satisfiability problems are known to be EXP TIME-complete (Schild 1991). The ALC R + and ALC DLs support transitive roles without providing a general transitive closure operator, and were investigated in the hope that a more restricted form of transitive role might lead to a satisfiability problem in a lower complexity class (Sattler 1996). <p> FaCT reasons about concept, role and attribute descriptions, and maintains a concept hierarchy based on the sub-sumption relation. The algorithm is used for subsumption testing in the usual way: C subsumes D iff D u :C is not satisfiable. Correspondences between modal and description logics <ref> (Schild 1991) </ref> mean that FaCT can also be used as a theorem prover for the propositional modal logics K (m) , KT (m) , K4 (m) and S4 (m) . 6.1 OPTIMISATION TECHNIQUES A naive implementation of the algorithm would be of limited value in realistic applications: when trying to classify <p> A similar technique is also used in the KSAT modal K (m) (equivalently ALC <ref> (Schild 1991) </ref>) satisfiability testing algorithm (Giunchiglia and Sebastiani 1996). * Dependency directed backtrackinga technique adapted from constraint satisfiability problem solving (Baker 1995) which addresses the problem of thrashing (large amounts of unproductive backtracking search) caused by inherent unsatisfiability concealed in sub-problems.
Reference: <author> M. Schmidt-Schau and G. Smolka. </author> <title> Attributive concept descriptions with complements. </title> <journal> Artificial Intelligence, </journal> <volume> 48:126, </volume> <year> 1991. </year>
Reference: <author> P.-H. Speel, F. van Raalte, P. E. van der Vet, and N. J. I. </author> <title> Mars. Runtime and memory usage performance of description logics. </title> <editor> In Ellis et al. </editor> <year> (1995), </year> <pages> pages 1327. </pages>
Reference: <author> W. A. Woods and J. G. Schmolze. </author> <title> The KL-ONE family. </title> <journal> Computers and Mathematics with Applications Special Issue on Artificial Intelligence, </journal> <volume> 23(25):133177, </volume> <year> 1992. </year>
Reference-contexts: 1 INTRODUCTION Description Logics (DLs) form a family of formalisms which have grown out of knowledge representation techniques using frames and semantic networks; their distinguishing characteristic is a formally defined semantics which enables the subsumption (kind-of) relationship to be computed by a suitable algorithm <ref> (Woods and Schmolze 1992) </ref>.
References-found: 44

