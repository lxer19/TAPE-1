URL: ftp://ftp.cs.utexas.edu/pub/boyer/cli-reports/100.ps
Refering-URL: ftp://ftp.cs.utexas.edu/pub/boyer/cli-reports/index.html
Root-URL: 
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> David Basin and Matt Kaufmann. </author> <title> "The Boyer-Moore Prover and Nuprl: An Experimental Comparison" Proceedings of Workshop for Basic Research Action, Logical Frameworks. </title> <booktitle> Antibes, </booktitle> <address> France, </address> <month> May, </month> <year> 1990. </year>
Reference-contexts: In order to present a user's perspective on this system we have tried to give an honest account of what transpired in the sessions we had with Nqthm, including some of our missteps. We do 3 See however any of <ref> [14, 15, 1, 16] </ref> for introductions to the use of Nqthm. In fact [16] gives a detailed account of the use of Nqthm and its interactive enhancement to do a non-trivial proof.
Reference: [2] <author> William R. Bevier, Warren A. Hunt, Jr., J Strother Moore, and William D. Young. </author> <title> "An Approach to Systems Verification." </title> <journal> Journal of Automated Reasoning, </journal> <month> November, </month> <year> 1989. </year>
Reference-contexts: and its Pc-Nqthm interactive enhancement (described below), are currently available from Internet host ftp.cli.com: directory /pub/nqthm/nqthm-1992/ for the Nqthm-1992 release, and directory /pub/pc nqthm/pc-nqthm-1992/ for the Pc-Nqthm-1992 release. 3 added to Nqthm (for example first-order quantification, [17]), and on applications, including an entire issue of the Journal of Automated Reasoning <ref> [2] </ref>.
Reference: [3] <author> Robert S. Boyer and J Strother Moore. </author> <title> A Computational Logic. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: 1 Introduction Numerous papers have been written to describe challenge problems solved using the Boyer-Moore theorem prover, Nqthm 1 <ref> [3, 5] </ref>. 2 There are also papers on new tools and functionalities 1 named after a directory on which the system was originally developed 2 This system, and its Pc-Nqthm interactive enhancement (described below), are currently available from Internet host ftp.cli.com: directory /pub/nqthm/nqthm-1992/ for the Nqthm-1992 release, and directory /pub/pc nqthm/pc-nqthm-1992/ <p> To support our focus on user-level perspective, we do not always give an analysis of what the prover did, at least not to the extent that a researcher in automated reasoning might be tempted to give. (Readers who want more of an implementation-level perspective on Nqthm are referred to <ref> [3] </ref>.) Notice that we can get away from the implementor's perspective that is, we can avoid looking too much inside what the prover does because Nqthm gives feedback that is meaningful to users, not just to implementors. The implementor's perspective may be much more common in the automated reasoning literature. <p> We can display the structure of that induction argument as follows; see also <ref> [3] </ref> for a more thorough presentation of this idea.
Reference: [4] <author> Robert S. Boyer and J Strother Moore. "Metafunctions: </author> <title> Proving Them Correct and Using Them Efficiently as New Proof Procedures." In The Correctness Problem in Computer Science, </title> <editor> ed. Robert S. Boyer and J Strother Moore, </editor> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1981. </year>
Reference: [5] <author> Robert S. Boyer and J Strother Moore. </author> <title> A Computational Logic Handbook. </title> <publisher> Academic Press, </publisher> <address> Boston, </address> <year> 1988. </year>
Reference-contexts: 1 Introduction Numerous papers have been written to describe challenge problems solved using the Boyer-Moore theorem prover, Nqthm 1 <ref> [3, 5] </ref>. 2 There are also papers on new tools and functionalities 1 named after a directory on which the system was originally developed 2 This system, and its Pc-Nqthm interactive enhancement (described below), are currently available from Internet host ftp.cli.com: directory /pub/nqthm/nqthm-1992/ for the Nqthm-1992 release, and directory /pub/pc nqthm/pc-nqthm-1992/ <p> They are taken with permission, with some small changes and additions, from [8], which in turn probably took some of its words from the Nqthm "folklore". For further details see <ref> [5] </ref>. The words in the Subsection 2.5 are adapted from [12]. <p> When connected to a specialized front-end for Fortran, the system has also proved the correctness of Fortran implementations of a fast string searching algorithm and a linear time majority vote algorithm. Many other interesting theorems have been proven as well; see <ref> [5] </ref> for a rather lengthy list of applications of the system (with references), also see [12]. We conclude our description of the Nqthm prover by pointing out that at a coarse level, interaction with Nqthm proceeds at the level of events. <p> However, the Nqthm logic does not have quantifiers; in particular, one can not express the preceding statement in that logic. Instead, that logic has an induction principle (stated precisely in Chapter 4 of <ref> [5] </ref>) that 12 serves much the same purpose as the Noetherian induction principle stated informally above. Here is an overview that should suffice for the purposes of this paper; for more details, see [5]. <p> Instead, that logic has an induction principle (stated precisely in Chapter 4 of <ref> [5] </ref>) that 12 serves much the same purpose as the Noetherian induction principle stated informally above. Here is an overview that should suffice for the purposes of this paper; for more details, see [5]. <p> Thus, when the theorem prover applies any techniques outside the realm of simplification to a goal, it means that simplification failed to have any effect on that goal. It follows that the goals stable under simplification are very closely related to the "checkpoints" discussed in Chapter 9 of <ref> [5] </ref>. Intuitively, a checkpoint is a point in an Nqthm proof at which some "daring" transition happens, for example one that can turn a provable goal into one that is not provable (such as generalization). <p> Actually this order is represented in the Nqthm logic by ORD-LESSP, an order on notations for ordinals less than * 0 , see <ref> [5] </ref>) applied 27 to the pair consisting first of the maximum of X, and then of the number of occurrences of its maximum in X. See Point 2 in Appendix A for more details about this point. <p> Fortunately, Nqthm contains very few such idiosyncrasies. After a while we interrupt the DEFN event and submit the form (break-rewrite) which enters the Nqthm tool for inspecting the rewrite stack. This notion is explained amply in <ref> [5] </ref>; here we restrict our explanation to the particular commands that we invoke within this utility. The command path, in response to the prompt ":", yields the following output: : path *(4482) 0. (top) ( 127) 1. Rewriting (EQUAL ...) ( 126) 2. Rewriting (ADD1 ...) ( 125) 3. <p> However, the theorem prover reports that the rule above is a linear rule; actually, 37 as explained in <ref> [5] </ref>, the theorem prover creates a linear rule when the top-level function symbol in the conclusion is LESSP, or even when the conclusion is the negation of such a term. <p> We do not explain FOR here, except to say that it's similar to looping constructs in Lisp and other languages, and is documented of course in <ref> [5] </ref>; we believe that its meaning is reasonably self-evident. <p> Each line of the second table contains an informal description of a built-in object and the page where the object has been first introduced. For further details see <ref> [5] </ref> and [10]; however note that the commands DEFTHEORY, DISABLE-THEORY, ENABLE-THEORY and DO-FILE have been added to Nqthm since the time of publication of [5], and are documented (along with all Nqthm commands) in the "doc/" subdirectory of the Nqthm-1992 release. 111 Nqthm command Syntax Described on pages ADD-AXIOM (ADD-AXIOM name <p> For further details see <ref> [5] </ref> and [10]; however note that the commands DEFTHEORY, DISABLE-THEORY, ENABLE-THEORY and DO-FILE have been added to Nqthm since the time of publication of [5], and are documented (along with all Nqthm commands) in the "doc/" subdirectory of the Nqthm-1992 release. 111 Nqthm command Syntax Described on pages ADD-AXIOM (ADD-AXIOM name types formula) 22 BREAK-LEMMA (BREAK-LEMMA name) 73 BREAK-REWRITE (BREAK-REWRITE) 29 CH (CH number) 23 DEFN (DEFN name arguments body) 10 DEFTHEORY (DEFTHEORY name list-of-names)
Reference: [6] <author> Robert S. Boyer, Matt Kaufmann, and J Strother Moore. </author> <title> "The Boyer-Moore Theorem Prover and Its Interactive Enhancement." </title> <note> (Submitted.) </note>
Reference-contexts: They are taken with permission, with some small changes and additions, from [8], which in turn probably took some of its words from the Nqthm "folklore". For further details see [5]. The words in the Subsection 2.5 are adapted from [12]. See also <ref> [6] </ref> for more about Nqthm and Pc-Nqthm and about applications of these systems, and for a somewhat simpler example of their use than the one presented here. 2.1 The Nqthm Logic The logic of Nqthm (sometimes called the "Boyer-Moore Logic") is a simple quantifier-free fragment of first-order logic resembling in syntax
Reference: [7] <author> Alan Bundy. </author> <title> Talk in "Challenge Problems" section of: "Workshop on the automation of proof by mathematical induction," co-sponsored by MInd and IndUS, July 11-12, </title> <booktitle> 1993; at AAAI-93 Eleventh National Conference on Artificial Intelligence, </booktitle> <address> Washington DC, USA. </address>
Reference-contexts: tutorial paper that focuses on how to use it to solve hard problems and what kind of issues arise in these situations. 3 In this paper we give a tutorial introduction to Nqthm by illustrating how we have used this system on an example suggested at an inductive theorem-proving workshop <ref> [7] </ref>, the Arithmetic-Geometric Mean Theorem.
Reference: [8] <author> Donald I. Good and William D. Young. </author> <title> "Mathematical Methods for Digital Systems Development." In VDM'91 Formal Software Development Methods, </title> <editor> ed. S. Prehn, W.J. Toetenel, </editor> <booktitle> Springer-Verlag Lecture Notes in Computer Science 552, </booktitle> <pages> pp. 406-430, </pages> <year> 1991. </year> <note> Also appears as Technical Report 67, Computational Logic, </note> <institution> Inc., </institution> <month> August, </month> <year> 1991. </year>
Reference-contexts: His success encouraged us to make an attempt. 2 Background on Nqthm, Pc-Nqthm, and Checkpoints The first and the third subsections below describe the Nqthm logic and theorem prover, respectively. They are taken with permission, with some small changes and additions, from <ref> [8] </ref>, which in turn probably took some of its words from the Nqthm "folklore". For further details see [5]. The words in the Subsection 2.5 are adapted from [12].
Reference: [9] <author> Scott D. Johnson and John Nagle. </author> <title> Pascal-F Verifier User's Manual, </title> <type> Version 2. </type> <institution> Ford Aerospace & Communications Corporation, Palo Alto, California, </institution> <year> 1986. </year>
Reference-contexts: There are other introduction to Nqthm. For example, John Cowles has written a brief introduction in the file examples/cowles/intro-eg.events contained in the Nqthm-1992 release. The paper <ref> [9] </ref> provides an introduction to Nqthm as part of a verification system. 4 clean things up just a bit when that significantly improves the exposition, such as introducing the LET construct for readability (though we could have done so in the first place!).
Reference: [10] <author> Matt Kaufmann. </author> <title> "A User's Manual for an Interactive Enhancement to the Boyer-Moore Theorem Prover." </title> <type> Technical Report 19, </type> <institution> Computational Logic, Inc., </institution> <month> May, </month> <year> 1988. </year>
Reference-contexts: The system is described in detail in <ref> [10] </ref>, [11], and [17]; here is a brief introduction. The user enters an interactive loop with the command VERIFY. <p> Each line of the second table contains an informal description of a built-in object and the page where the object has been first introduced. For further details see [5] and <ref> [10] </ref>; however note that the commands DEFTHEORY, DISABLE-THEORY, ENABLE-THEORY and DO-FILE have been added to Nqthm since the time of publication of [5], and are documented (along with all Nqthm commands) in the "doc/" subdirectory of the Nqthm-1992 release. 111 Nqthm command Syntax Described on pages ADD-AXIOM (ADD-AXIOM name types formula)
Reference: [11] <author> Matt Kaufmann. </author> <title> "Addition of Free Variables to the PC-NQTHM Interactive Enhancement of the Boyer-Moore Theorem Prover." </title> <type> Technical Report 42, </type> <institution> Computational Logic, Inc., </institution> <month> March, </month> <year> 1990. </year>
Reference-contexts: The system is described in detail in [10], <ref> [11] </ref>, and [17]; here is a brief introduction. The user enters an interactive loop with the command VERIFY.
Reference: [12] <author> Matt Kaufmann. </author> <title> "Response to FM91 Survey of Formal Methods: Nqthm and Pc-Nqthm." </title> <type> Technical Report 75, </type> <institution> Computational Logic, Inc., </institution> <month> March, </month> <year> 1992. </year>
Reference-contexts: They are taken with permission, with some small changes and additions, from [8], which in turn probably took some of its words from the Nqthm "folklore". For further details see [5]. The words in the Subsection 2.5 are adapted from <ref> [12] </ref>. <p> Many other interesting theorems have been proven as well; see [5] for a rather lengthy list of applications of the system (with references), also see <ref> [12] </ref>. We conclude our description of the Nqthm prover by pointing out that at a coarse level, interaction with Nqthm proceeds at the level of events.
Reference: [13] <author> Matt Kaufmann. </author> <title> "An Assistant for Reading Nqthm Proof Output." </title> <type> Technical Report 85, </type> <institution> Computational Logic, Inc., </institution> <month> November, </month> <year> 1992. </year> <month> 114 </month>
Reference-contexts: Such a rule is proved in Subsection 2.3. A new proof attempt could then proceed past the point of the goal displayed above. During the present proof effort, we employed a tool that we refer to in this paper as the "checkpoint tool". This tool, which is documented in <ref> [13] </ref> 6 , allows the user who is running Nqthm under Gnu emacs [18] to get the cursor to move quickly to a checkpoint, which will be a goal that is stable under simplification. It actually allows one to visit additional checkpoints as well.
Reference: [14] <author> Matt Kaufmann. </author> <title> "An Example in NQTHM: Ramsey's Theorem." Internal Note 100, Computational Logic, </title> <publisher> Inc., </publisher> <month> November, </month> <year> 1988. </year>
Reference-contexts: In order to present a user's perspective on this system we have tried to give an honest account of what transpired in the sessions we had with Nqthm, including some of our missteps. We do 3 See however any of <ref> [14, 15, 1, 16] </ref> for introductions to the use of Nqthm. In fact [16] gives a detailed account of the use of Nqthm and its interactive enhancement to do a non-trivial proof.
Reference: [15] <author> Matt Kaufmann. </author> <title> "An Instructive Example for Beginning Users of the Boyer-Moore Theorem Prover." Internal Note 185, Computational Logic, </title> <publisher> Inc., </publisher> <month> April, </month> <year> 1990. </year>
Reference-contexts: In order to present a user's perspective on this system we have tried to give an honest account of what transpired in the sessions we had with Nqthm, including some of our missteps. We do 3 See however any of <ref> [14, 15, 1, 16] </ref> for introductions to the use of Nqthm. In fact [16] gives a detailed account of the use of Nqthm and its interactive enhancement to do a non-trivial proof.
Reference: [16] <author> Matt Kaufmann. </author> <title> "Generalization in the Presence of Free Variables: A Mechanically-Checked Correctness Proof for One Algorithm." </title> <journal> Journal of Automated Reasoning, </journal> <volume> 7(1991), </volume> <pages> pp. 109-158. </pages>
Reference-contexts: In order to present a user's perspective on this system we have tried to give an honest account of what transpired in the sessions we had with Nqthm, including some of our missteps. We do 3 See however any of <ref> [14, 15, 1, 16] </ref> for introductions to the use of Nqthm. In fact [16] gives a detailed account of the use of Nqthm and its interactive enhancement to do a non-trivial proof. <p> We do 3 See however any of [14, 15, 1, 16] for introductions to the use of Nqthm. In fact <ref> [16] </ref> gives a detailed account of the use of Nqthm and its interactive enhancement to do a non-trivial proof.
Reference: [17] <author> Matt Kaufmann. </author> <title> An extension of the Boyer-Moore theorem prover to support first-order quantification. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 9(3) </volume> <pages> 355-372, </pages> <month> December </month> <year> 1992. </year>
Reference-contexts: named after a directory on which the system was originally developed 2 This system, and its Pc-Nqthm interactive enhancement (described below), are currently available from Internet host ftp.cli.com: directory /pub/nqthm/nqthm-1992/ for the Nqthm-1992 release, and directory /pub/pc nqthm/pc-nqthm-1992/ for the Pc-Nqthm-1992 release. 3 added to Nqthm (for example first-order quantification, <ref> [17] </ref>), and on applications, including an entire issue of the Journal of Automated Reasoning [2]. <p> The system is described in detail in [10], [11], and <ref> [17] </ref>; here is a brief introduction. The user enters an interactive loop with the command VERIFY.
Reference: [18] <author> Richard M. Stallman. </author> <title> GNU EMACS Manual, Sixth Edition. Free Software Foundation, </title> <month> March, </month> <year> 1987. </year> <month> 115 </month>
Reference-contexts: During the present proof effort, we employed a tool that we refer to in this paper as the "checkpoint tool". This tool, which is documented in [13] 6 , allows the user who is running Nqthm under Gnu emacs <ref> [18] </ref> to get the cursor to move quickly to a checkpoint, which will be a goal that is stable under simplification. It actually allows one to visit additional checkpoints as well.
References-found: 18

