URL: http://www.daimi.aau.dk/~pnuern/papers/in-progress/construct/mw98.ps
Refering-URL: http://www.daimi.aau.dk/~pnuern/papers/in-progress/construct/
Root-URL: http://www.daimi.aau.dk
Title: Evolving Hypermedia Middleware Services: Lessons and Observations  Word count: 6908  
Author: Uffe K. Wiil Peter J. Nrnberg 
Keyword: open hypermedia system (OHS), component-based open hypermedia system (CB-OHS), hypermedia middleware, Java RMI, TCP/IP, CORBA, JDBC, Oracle  
Note: Primary contact author: Peter J. Nrnberg (contact information above) Submission category: Full paper  
Address: Niels Bohrs Vej 8 6700 Esbjerg, Denmark  Ny Munkegade 116, Bldg. 540 8000 rhus C, Denmark  
Affiliation: Department of Computer Science Aalborg University Esbjerg  Department of Computer Science Aarhus University  
Email: Email: ukwiil@aue.auc.dk  Email: pnuern@daimi.aau.dk  
Phone: Phone: ++45 7912 7666 Fax: ++45 7545 3643  Phone: ++45 8942 3281 Fax: ++45 8942 3255  
Abstract: In this paper, we consider the evolution of hypermedia system architectures from the monolithic systems of the 1980's to the middleware-oriented component-based open systems of today. We look at the various problems that users and system designers encountered with systems at various stages of this development, focusing particularly on problems that were solved or caused by moving toward a more middleware-oriented approach. Although we cast our discussion in terms of specific hypermedia systems, we believe that many of our observations on the advantages and challenges of our current middleware approach may be helpful to those in other areas of system research. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Akscyn, R. M., McCracken D. L., and Yoder, E. A. </author> <year> 1988. </year> <title> KMS: A Distributed Hypermedia System for Managing Knowledge in Organizations. </title> <journal> Communications of the ACM, </journal> <volume> 31, 7, </volume> <month> (Jul), </month> <pages> 820-835. </pages>
Reference-contexts: It is typically developed for a specific problem domain. For instance, KMS <ref> [1] </ref> is a network based hypermedia system developed to help manage knowledge in organizations. KMS is a successful commercial system that has been and is still being used by a number of commercial companies and academic organizations. <p> In many of these use settings, KMS manages hundreds of thousands or even millions of interlinked information units (called frames in KMS) in a very efficient manner; the response time when following a link is less than a second on average <ref> [1] </ref>. The limitations of monolithic hypermedia systems, however, are well documented. Meyrowitz [15] identifies the needs for using existing legacy applications together with a hypermedia system as well as the ability to link to information residing outside the hypermedia system itself.
Reference: [2] <author> Anderson, K. M., Taylor, R. N., and Whitehead, E. J., Jr. </author> <year> 1997. </year> <title> A Critique of the Open Hypermedia Protocol. </title> <booktitle> In [24]. </booktitle>
Reference-contexts: With respect to interoperability, the Open Hypermedia Systems Working Group (OHSWG) was formed by various OHS researchers as a forum to develop OHS interoperability standards. Currently, the OHSWG has defined a standard interface between link services and applications covering the associative domain <ref> [2, 9] </ref> and is working on defining interface standards for storage (backend) servers. With respect to applicability, system designers are (under the OHSWG umbrella) defining presentation interoperability standards for different kinds of hypermedia structures used in different hypermedia domains, other than just the associative domain.
Reference: [3] <author> Anderson, K. M., Taylor, R. N., and Whitehead, E. J., Jr. </author> <year> 1994. </year> <title> Chimera: Hypertext for Heterogeneous Software Environments. </title> <booktitle> In ACM ECHT '94 Proceedings, </booktitle> <address> (Edinburgh, Scotland, </address> <publisher> Sep), ACM Press, </publisher> <pages> pp. 94-107. </pages>
Reference-contexts: OHSs generally share certain characteristics that allow them to be categorized as middleware services [5]: they meet the requirements of a wide variety of applications, they run on multiple platforms, they are distributed, and they publish communication protocols and APIs. Examples of OHSs are Chimera <ref> [3] </ref>, DHM [11], HB3/SP3 [13], Hyperform [26], and Microcosm [12]. Generally, OHSs can be traced back to either the LSS or HBMS style of hypermedia system. Systems like Chimera and Microcosm descend from LSSs, while DHM, HB3/SP3, and Hyperform descend from HBMSs.
Reference: [4] <author> Berners-Lee, T., Cailliau, R., Luotonen, A., Nielsen, H. F., and Secret, A. </author> <year> 1994. </year> <title> The World Wide Web. </title> <journal> Communications of the ACM, </journal> <volume> 37, 8, </volume> <month> (Aug), </month> <pages> 76-82. </pages>
Reference-contexts: Since the description of Bush's Memex (memory extender) more than fifty years ago [7], hypermedia systems have been built and widely deployed, with the most obvious and successful example to date being the World Wide Web (WWW) <ref> [4] </ref>. Although their motivation remains the same, the architectures of today's advanced hypermedia environments bear little resemblance to the monolithic architectures of the earliest hypermedia systems. <p> In contrast, an open hypermedia system only imposes a specific structure format on its hypermedia-enabled applications. Allowing applications to store content in different formats potentially outside the hypermedia system is a basic requirement for integrating and using legacy applications in an open hypermedia environment [27]. For example, the WWW <ref> [4] </ref> imposes the HTML format on its browsers (HTML embeds structure in the content). From a general software system perspective, the WWW is open, since the server API and the protocol between browsers and servers is published and well defined (the HTTP protocol).
Reference: [5] <author> Bernstein, P. A. </author> <year> 1996. </year> <title> Middleware: A Model for Distributed System Services. </title> <journal> Communications of the ACM, </journal> <volume> 39, 2, </volume> <month> (Feb), </month> <pages> 86-98. </pages>
Reference-contexts: Although their motivation remains the same, the architectures of today's advanced hypermedia environments bear little resemblance to the monolithic architectures of the earliest hypermedia systems. The hypermedia field now casts their discussions in terms of open sets of middleware components <ref> [5] </ref> built on top of structure-aware backends and that serve structural abstractions to open sets of clients. <p> OHSs generally share certain characteristics that allow them to be categorized as middleware services <ref> [5] </ref>: they meet the requirements of a wide variety of applications, they run on multiple platforms, they are distributed, and they publish communication protocols and APIs. Examples of OHSs are Chimera [3], DHM [11], HB3/SP3 [13], Hyperform [26], and Microcosm [12].
Reference: [6] <author> Bolter, J. D., and Joyce, M. </author> <year> 1987. </year> <title> Hypertext and Creative Writing. </title> <booktitle> In ACM Hypertext '87 Proceedings, </booktitle> <address> (Chapel Hill, NC, Nov), </address> <publisher> ACM Press, </publisher> <pages> pp. 41-50. </pages>
Reference-contexts: Since Bush and other early hypermedia pioneers considered the use and presentation of associative structures, many researchers have considered applying hypermedia principles to different domains. Some of these different domains include hypermedia literature (e.g., <ref> [6] </ref>), argumentation support (e.g., [8]), information analysis (e.g., [14]), hypermedia art (e.g., [21]), and taxonomic work (e.g., [19]). Work in all of these domains addresses how people use structure for various tasks, whether those tasks be writing or reading literature, participating in or reviewing a decision process, etc.
Reference: [7] <author> Bush, V. </author> <year> 1945. </year> <title> As We May Think. </title> <journal> Atlantic Monthly, </journal> <volume> 176, </volume> <month> (Jul), </month> <pages> 101-108. </pages>
Reference-contexts: 1 Introduction Hypermedia systems allow people to create, manipulate, and browse structures over data. As long ago as 1945, Vannevar Bush described of information overload and called for better automated support for ubiquitous and idiosyncratic structures like the associations we build and use in our own memories <ref> [7] </ref>. Bush pointed out that the human memory uses such idiosyncratic associative structures to manage and index an incredible amount of information. <p> Since the description of Bush's Memex (memory extender) more than fifty years ago <ref> [7] </ref>, hypermedia systems have been built and widely deployed, with the most obvious and successful example to date being the World Wide Web (WWW) [4]. Although their motivation remains the same, the architectures of today's advanced hypermedia environments bear little resemblance to the monolithic architectures of the earliest hypermedia systems.
Reference: [8] <author> Conklin, J., and Begeman, M. L. </author> <year> 1987. </year> <title> gIBIS: A Hypertext Tool for Team Design Deliberation. </title> <booktitle> In ACM Hypertext '87 Proceedings, </booktitle> <address> (Chapel Hill, NC, Nov), </address> <publisher> ACM Press, </publisher> <pages> pp. 247-251. </pages>
Reference-contexts: Since Bush and other early hypermedia pioneers considered the use and presentation of associative structures, many researchers have considered applying hypermedia principles to different domains. Some of these different domains include hypermedia literature (e.g., [6]), argumentation support (e.g., <ref> [8] </ref>), information analysis (e.g., [14]), hypermedia art (e.g., [21]), and taxonomic work (e.g., [19]). Work in all of these domains addresses how people use structure for various tasks, whether those tasks be writing or reading literature, participating in or reviewing a decision process, etc.
Reference: [9] <author> Davis, H., Lewis, A., and Rizk, A. </author> <year> 1996. </year> <title> OHP: A Draft Proposal for a Standard Open Hypermedia Protocol. </title> <booktitle> In Proceedings of the 2nd Workshop on Open Hypermedia Systems, </booktitle> <address> (Washington, DC, </address> <month> Mar). </month> <type> UCI-ICS Technical Report 96-10, </type> <institution> University of California, </institution> <address> Irvine, </address> <pages> pp. 27-53. </pages>
Reference-contexts: With respect to interoperability, the Open Hypermedia Systems Working Group (OHSWG) was formed by various OHS researchers as a forum to develop OHS interoperability standards. Currently, the OHSWG has defined a standard interface between link services and applications covering the associative domain <ref> [2, 9] </ref> and is working on defining interface standards for storage (backend) servers. With respect to applicability, system designers are (under the OHSWG umbrella) defining presentation interoperability standards for different kinds of hypermedia structures used in different hypermedia domains, other than just the associative domain.
Reference: [10] <author> Davis, H. C., Knight, S., and Hall, W. </author> <year> 1994. </year> <title> Light Hypermedia Link Services: A Study of Third Party Application Integration. </title> <booktitle> In ACM ECHT '94 Proceedings, </booktitle> <address> (Edinburgh, Scotland, </address> <publisher> Sep), ACM Press, </publisher> <pages> pp. 41-50. </pages>
Reference-contexts: A component framework deploys a particular technique for interaction between its components and this is in contrast to the flexible support needed to hypermedia enable a variety of legacy applications <ref> [10, 23] </ref>. The issue of application integration is somewhat awkward. If the middleware service developer had the necessary standards and the application developers used them, then this issue would not exist.
Reference: [11] <author> Grnbk, K., and Trigg, R. H. </author> <year> 1994. </year> <title> Design Issues for a Dexter-based Hypermedia System. </title> <journal> Communications of the ACM, </journal> <volume> 37, 2, </volume> <month> (Feb), </month> <pages> 40-49. </pages>
Reference-contexts: OHSs generally share certain characteristics that allow them to be categorized as middleware services [5]: they meet the requirements of a wide variety of applications, they run on multiple platforms, they are distributed, and they publish communication protocols and APIs. Examples of OHSs are Chimera [3], DHM <ref> [11] </ref>, HB3/SP3 [13], Hyperform [26], and Microcosm [12]. Generally, OHSs can be traced back to either the LSS or HBMS style of hypermedia system. Systems like Chimera and Microcosm descend from LSSs, while DHM, HB3/SP3, and Hyperform descend from HBMSs.
Reference: [12] <author> Hall, W., Davis, H., and Hutchings, G. </author> <year> 1996. </year> <title> Rethinking Hypermedia - The Microcosm Approach. </title> <publisher> Kluwer Academic Publishers. </publisher>
Reference-contexts: Examples of OHSs are Chimera [3], DHM [11], HB3/SP3 [13], Hyperform [26], and Microcosm <ref> [12] </ref>. Generally, OHSs can be traced back to either the LSS or HBMS style of hypermedia system. Systems like Chimera and Microcosm descend from LSSs, while DHM, HB3/SP3, and Hyperform descend from HBMSs.
Reference: [13] <author> Leggett, J. J., and Schnase J. L. </author> <year> 1994. </year> <title> Viewing Dexter with Open Eyes. </title> <journal> Communications of the ACM, </journal> <volume> 34, 2, </volume> <month> (Feb), </month> <pages> 76-86. </pages>
Reference-contexts: OHSs generally share certain characteristics that allow them to be categorized as middleware services [5]: they meet the requirements of a wide variety of applications, they run on multiple platforms, they are distributed, and they publish communication protocols and APIs. Examples of OHSs are Chimera [3], DHM [11], HB3/SP3 <ref> [13] </ref>, Hyperform [26], and Microcosm [12]. Generally, OHSs can be traced back to either the LSS or HBMS style of hypermedia system. Systems like Chimera and Microcosm descend from LSSs, while DHM, HB3/SP3, and Hyperform descend from HBMSs.
Reference: [14] <author> Marshall, C. C., and Shipman, F. M. </author> <year> 1995. </year> <title> Spatial Hypertext: Designing for Change. </title> <journal> Communications of the ACM, </journal> <volume> 38, 8, </volume> <month> (Aug), </month> <pages> 88-97. </pages>
Reference-contexts: Since Bush and other early hypermedia pioneers considered the use and presentation of associative structures, many researchers have considered applying hypermedia principles to different domains. Some of these different domains include hypermedia literature (e.g., [6]), argumentation support (e.g., [8]), information analysis (e.g., <ref> [14] </ref>), hypermedia art (e.g., [21]), and taxonomic work (e.g., [19]). Work in all of these domains addresses how people use structure for various tasks, whether those tasks be writing or reading literature, participating in or reviewing a decision process, etc. <p> The spatial hypermedia project involves researchers from Texas A&M University, XEROX Palo Alto Research Center, Aarhus University and Aalborg University Esbjerg. The focus is to develop a spatial middleware service that combines the achievements of VIKI spatial project <ref> [14] </ref> with the middleware services idea. The dynamic hypermedia project involves researchers from New Jersey Institute of Technology, Aalborg University Esbjerg and Aarhus University.
Reference: [15] <author> Meyrowitz, N. </author> <year> 1989. </year> <title> The Missing Link: Why We're All Doing Hypertext Wrong. </title> <booktitle> In The Society of Text, </booktitle> <publisher> The MIT Press, </publisher> <pages> 107-114. </pages>
Reference-contexts: The limitations of monolithic hypermedia systems, however, are well documented. Meyrowitz <ref> [15] </ref> identifies the needs for using existing legacy applications together with a hypermedia system as well as the ability to link to information residing outside the hypermedia system itself. Meyrowitz envisioned that the hypermedia concept would become as widely available in computer systems as the cut and paste paradigm.
Reference: [16] <author> Nrnberg, P. J., and Leggett J. J. </author> <year> 1997. </year> <title> A Vision for Open Hypermedia Systems. </title> <booktitle> In [24]. </booktitle>
Reference-contexts: All OHSs could implement the associative services interface, while specialized interfaces could be implemented by only those systems that provided the specialized abstractions. 2.4.2 Applicability OHSs generally support only the abstractions described by the earliest hypermedia researchers (i.e., the associative structures described by Bush) <ref> [16] </ref>. Few OHSs claim to provide support for any other problem domain, much less for the integration of an open set of new domains. Since Bush and other early hypermedia pioneers considered the use and presentation of associative structures, many researchers have considered applying hypermedia principles to different domains.
Reference: [17] <author> Nrnberg, P. J., Leggett, J. J., and Schneider, E. R. </author> <year> 1997. </year> <title> As We Should Have Thought. </title> <booktitle> In ACM Hypertext '97 Proceedings, </booktitle> <address> (Southampton, UK, </address> <publisher> Apr), ACM Press, </publisher> <pages> pp. 96-101. </pages>
Reference-contexts: A monolithic system is one in which all aspects of the system (application, link service and store) are realized in a single process. The limitations of monolithic systems were quickly realized and led to a series of improvements. Roughly speaking, the development of hypermedia system architectures occurred in stages <ref> [17] </ref>. In each stage, some functionality or architectural component was abstracted away from the "core" hypermedia system.
Reference: [18] <author> Nrnberg, P. J., Leggett, J. J., Schneider, E. R., and Schnase, J. L. </author> <year> 1996. </year> <title> Hypermedia Operating Systems: A New Paradigm for Computing. </title> <booktitle> In ACM Hypertext '96 Proceedings, </booktitle> <address> (Washington, DC, </address> <publisher> Mar), ACM Press, </publisher> <pages> pp. 194-202. </pages>
Reference-contexts: Thus, HyperDisco services can be customized to support the specific needs of individual applications or application domains. 3.2 HOSS Whereas HyperDisco was developed to support different models of associative hypermedia, HOSS <ref> [18] </ref> was developed specifically to support different kinds of hypermedia domains. It shares much in common with HyperDisco from an architectural point of view. From a component framework perspective, two HOSS features are particularly interesting: the Protocol Definition Compiler and the Generalized Process Template. <p> We consider one example of a 2G CB-OHS below. 4.1 Construct Construct is a new 2G CB-OHSs developed as a merge between the two 1G CB-OHSs mentioned above, namely HOSS <ref> [18] </ref> and HyperDisco [25]. Below, we begin by giving a brief overview of the Construct architectural layers and components. Then, we describe a few projects deploying Construct middleware services.
Reference: [19] <author> Parunak, H. Van Dyke. </author> <year> 1991. </year> <title> Don't Link Me In: Set Based Hypermedia for Taxonomic Reasoning. </title> <booktitle> In ACM Hypertext '91 Proceedings, </booktitle> <address> (San Antonio, TX, Dec), </address> <publisher> ACM Press, </publisher> <pages> pp. 233-242. </pages>
Reference-contexts: Some of these different domains include hypermedia literature (e.g., [6]), argumentation support (e.g., [8]), information analysis (e.g., [14]), hypermedia art (e.g., [21]), and taxonomic work (e.g., <ref> [19] </ref>). Work in all of these domains addresses how people use structure for various tasks, whether those tasks be writing or reading literature, participating in or reviewing a decision process, etc.
Reference: [20] <author> Pearl, A. </author> <year> 1989. </year> <title> Sun's Link Service: A Protocol for Open Linking. </title> <booktitle> In ACM Hypertext '89 Proceedings, </booktitle> <address> (Pittsburgh, PA, Nov), </address> <publisher> ACM Press, </publisher> <pages> pp. 137-146. </pages>
Reference-contexts: Finally, KMS only supports a fixed set of data formats; it is impossible to add a new data model format, e.g., audio. 2.2 ClientServer Systems There are two different common types of clientserver hypermedia systems: those based on "link server systems", or LSSs (e.g., Sun's Link Service <ref> [20] </ref>) and those based on "hyperbase management systems", or HBMSs (e.g., HyperBase [22]). An LSS provides hypermedia structuring facilities to an open set of applications, while an HBMS provides both hypermedia structuring and hypermedia storage facilities to an open set of applications.
Reference: [21] <author> Sawhney, N. Balcom, D., and Smith, I. </author> <year> 1996. </year> <title> HyperCafe: Narrative and Aesthetic Properties of Hypervideo. </title> <booktitle> In ACM Hypertext '96 Proceedings, </booktitle> <address> (Washington, DC, </address> <publisher> Mar), ACM Press, </publisher> <pages> pp. 1-10. </pages>
Reference-contexts: Since Bush and other early hypermedia pioneers considered the use and presentation of associative structures, many researchers have considered applying hypermedia principles to different domains. Some of these different domains include hypermedia literature (e.g., [6]), argumentation support (e.g., [8]), information analysis (e.g., [14]), hypermedia art (e.g., <ref> [21] </ref>), and taxonomic work (e.g., [19]). Work in all of these domains addresses how people use structure for various tasks, whether those tasks be writing or reading literature, participating in or reviewing a decision process, etc.
Reference: [22] <author> Schtt, H. A., and Streitz, N. A. </author> <year> 1990. </year> <title> HyperBase: A Hypermedia Engine Based on a Relational Database Management System. </title> <booktitle> In ECHT '90 Proceedings, </booktitle> <address> (Versailles, France, Nov), </address> <publisher> Cambridge University Press, </publisher> <pages> pp. 95-108. </pages>
Reference-contexts: formats; it is impossible to add a new data model format, e.g., audio. 2.2 ClientServer Systems There are two different common types of clientserver hypermedia systems: those based on "link server systems", or LSSs (e.g., Sun's Link Service [20]) and those based on "hyperbase management systems", or HBMSs (e.g., HyperBase <ref> [22] </ref>). An LSS provides hypermedia structuring facilities to an open set of applications, while an HBMS provides both hypermedia structuring and hypermedia storage facilities to an open set of applications. A clientserver system allows multiple applications to share a common set of abstractions provided by the server.
Reference: [23] <author> Whitehead, E. J. </author> <year> 1997. </year> <title> An Architectural Model for Application Integration in Open Hypermedia Environments. </title> <booktitle> In ACM Hypertext '97 Proceedings, </booktitle> <address> (Southampton, UK, </address> <publisher> Apr), ACM Press, </publisher> <pages> pp. 1-12. </pages>
Reference-contexts: A component framework deploys a particular technique for interaction between its components and this is in contrast to the flexible support needed to hypermedia enable a variety of legacy applications <ref> [10, 23] </ref>. The issue of application integration is somewhat awkward. If the middleware service developer had the necessary standards and the application developers used them, then this issue would not exist.
Reference: [24] <author> Wiil, U. K. (ed.). </author> <year> 1997. </year> <title> Open Hypermedia Systems: Interoperability and Standards. </title> <journal> Special Issue on Open Hypermedia, Journal Of Digital Information, </journal> <volume> 1, 2, </volume> <month> (Nov). </month>
Reference-contexts: These issues are considered in greater depth below. 2.4.1 Interoperability Although OHSs have many fundamental things in common, they still exhibit a great deal of variance <ref> [24] </ref>. For example, different OHSs introduce different hypermedia services (APIs). Although, all OHSs provide associative hypermedia structuring services, their data models vary with respect to the number of endpoints of a link (two or more), whether or not they have a notion of anchor, etc.
Reference: [25] <author> Wiil, U. K. and Leggett, J. J. </author> <year> 1996. </year> <title> The HyperDisco Approach to Open Hypermedia Systems. </title> <booktitle> In ACM Hypertext '96 Proceedings, </booktitle> <address> (Washington, DC, </address> <publisher> Mar), ACM Press, </publisher> <pages> pp. 140-148. </pages>
Reference-contexts: As mentioned above, 1G CB-OHSs generally provided their own proprietary component frameworks. The next two sections consider two 1G CB-OHSs in more detail, with an emphasis on some of the homemade middleware support provided in these systems. 3.1 HyperDisco HyperDisco <ref> [25] </ref> was developed as a layered, extensible and objectoriented open hypermedia middleware service. It provides hypermedia, collaboration, distribution, storage, and integration services to an open set of heterogeneous (legacy) applications. <p> We consider one example of a 2G CB-OHS below. 4.1 Construct Construct is a new 2G CB-OHSs developed as a merge between the two 1G CB-OHSs mentioned above, namely HOSS [18] and HyperDisco <ref> [25] </ref>. Below, we begin by giving a brief overview of the Construct architectural layers and components. Then, we describe a few projects deploying Construct middleware services.
Reference: [26] <author> Wiil, U. K. and Leggett, J. J. </author> <year> 1992. </year> <title> Hyperform: Using Extensibility to Develop Dynamic, Open and Distributed Hypertext Systems. </title> <booktitle> In ACM ECHT '92 Proceedings, </booktitle> <address> (Milan, Italy, Nov), </address> <publisher> ACM Press, </publisher> <pages> pp. 251-261. </pages> <note> [27] sterbye, </note> <author> K., and Wiil, U. K. </author> <year> 1996. </year> <title> The Flag Taxonomy of Open Hypermedia Systems. </title> <booktitle> In ACM Hypertext '96 Proceedings, </booktitle> <address> (Washington, DC, </address> <publisher> Mar), ACM Press, </publisher> <pages> pp. 129-139. </pages>
Reference-contexts: Examples of OHSs are Chimera [3], DHM [11], HB3/SP3 [13], Hyperform <ref> [26] </ref>, and Microcosm [12]. Generally, OHSs can be traced back to either the LSS or HBMS style of hypermedia system. Systems like Chimera and Microcosm descend from LSSs, while DHM, HB3/SP3, and Hyperform descend from HBMSs.
References-found: 26

