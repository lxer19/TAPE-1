URL: http://www.cs.rutgers.edu/~krasheed/aiengJga.ps
Refering-URL: http://athos.rutgers.edu/~shehata/papers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: shehata@cs.rutgers.edu hirsh@cs.rutgers.edu gelsey@cs.rutgers.edu  
Title: A Genetic Algorithm for Continuous Design Space Search  
Author: Khaled Rasheed Haym Hirsh Andrew Gelsey 
Keyword: genetic algorithms, design optimization  
Note: http://www.cs.rutgers.edu/~shehata/papers.html To appear in AI in Engineering  
Address: New Brunswick, NJ 08903 USA  
Affiliation: Computer Science Department Rutgers University  
Abstract: Genetic algorithms (GAs) have been extensively used as a means for performing global optimization in a simple yet reliable manner. However, in some realistic engineering design optimization domains the simple, classical implementation of a GA based on binary encoding and bit mutation and crossover is often inefficient and unable to reach the global optimum. In this paper we describe a GA for continuous design-space optimization that uses new GA operators and strategies tailored to the structure and properties of engineering design domains. Empirical results in the domains of supersonic transport aircraft and supersonic missile inlets demonstrate that the newly formulated GA can be significantly better than the classical GA in both efficiency and reliability. 
Abstract-found: 1
Intro-found: 1
Reference: [ Agogino and Almgren 1987 ] <author> A. M. Agogino and A. S. Almgren. </author> <title> Techniques for integrating qualitative reasoning and symbolic computing. </title> <journal> Engineering Optimization, </journal> <volume> 12 </volume> <pages> 117-135, </pages> <year> 1987. </year>
Reference: [ Bouchard et al. 1988 ] <author> E. E. Bouchard, G. H. Kidwell, and J. E. Rogan. </author> <title> The application of artificial intelligence technology to aeronautical system design. </title> <booktitle> In AIAA/AHS/ASEE Aircraft Design Systems and Operations Meeting, </booktitle> <address> Atlanta, Georgia, </address> <month> September </month> <year> 1988. </year> <month> AIAA-88-4426. </month>
Reference: [ Bouchard 1992 ] <author> E. E. Bouchard. </author> <title> Concepts for a future aircraft design environment. </title> <booktitle> In 1992 Aerospace Design Conference, </booktitle> <address> Irvine, CA, </address> <month> February </month> <year> 1992. </year> <month> AIAA-92-1188. </month>
Reference-contexts: numerical optimization [ Tong et al. 1992, Powell 1990, Powell and Skolnick 1993, Bouchard et al. 1988, Bouchard 1992, Sobieszczanski-Sobieski et al. 1985, Agogino and Almgren 1987, Williams and Cagan 1994, Hoeltzel and Chieng 1987, Cerbone 1992 ] , and although a GA was used in some of these efforts <ref> [ Powell 1990, Bouchard 1992, Powell and Skolnick 1993 ] </ref> , this typically represented the use of an off-the-shelf GA, with no attempt to adapt it to the domain as done in this research.
Reference: [ Cerbone 1992 ] <author> G. Cerbone. </author> <title> Machine learning in engineering: Techniques to speed up numerical optimization. </title> <type> Technical Report 92-30-09, </type> <institution> Oregon State University Department of Computer Science, </institution> <year> 1992. </year> <type> Ph.D. Thesis. </type>
Reference: [ Gelsey et al. 1996 ] <author> Andrew Gelsey, Mark Schwabacher, and Don Smith. </author> <title> Using modeling knowledge to guide design space search. In to appear: </title> <booktitle> Fourth International Conference on Artificial Intelligence in Design '96, </booktitle> <year> 1996. </year>
Reference-contexts: This section discusses our results in these two domains. 3.1 Supersonic Transport Aircraft Design Our first domain concerns the conceptual design of supersonic transport aircraft. We summarize it briefly here; it is described in more detail in <ref> [ Gelsey et al. 1996 ] </ref> .
Reference: [ Gill et al. 1981 ] <author> Philip E. Gill, Walter Murray, and Margaret H. Wright. </author> <title> Practical Optimization. </title> <publisher> Academic Press, </publisher> <address> London ; New York, </address> <year> 1981. </year>
Reference: [ Goldberg 1989 ] <author> David E. Goldberg. </author> <title> Genetic Algorithms in Search, Optimization, and Ma--chine Learning. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> 1989. </year>
Reference-contexts: 1 Introduction Genetic Algorithms (GAs) <ref> [ Goldberg 1989 ] </ref> are search algorithms that mimic the behavior of natural selection.
Reference: [ Haas et al. 1992 ] <author> M. Haas, R. Elmquist, and D. Sobel. </author> <title> NAWC Inlet Design and Analysis (NIDA) Code, </title> <note> Final Report. UTRC Report R92-970037-1, </note> <year> 1992. </year>
Reference-contexts: NIDA was developed at United Technology Research Center (UTRC) as an inlet analysis/design tool <ref> [ Haas et al. 1992 ] </ref> .
Reference: [ Hoeltzel and Chieng 1987 ] <author> D. Hoeltzel and W. Chieng. </author> <title> Statistical machine learning for the cognitive selection of nonlinear programming algorithms in engineering design optimization. </title> <booktitle> In Advances in Design Automation, </booktitle> <address> Boston, MA, </address> <year> 1987. </year>
Reference: [ Janikow and Michalewicz 1991 ] <author> Cezary Janikow and Zbigniew Michalewicz. </author> <title> An experimental comparison of binary and floating point representations in genetic algorithms. </title> <booktitle> In Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> pages 31-36. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year>
Reference-contexts: it is already near it | an advantage usually claimed for gradient-based methods over GAs | without the costly computation of gradients using expensive simulation-based evaluations in high-dimension spaces. 2.3 Shrinking Window Mutation Shrinking window mutation may be viewed as a simplified version of the Dynamic Mutation operator introduced in <ref> [ Janikow and Michalewicz 1991 ] </ref> . Whenever line crossover is performed, the resulting point is not directly introduced to the GA population as a new individual.
Reference: [ Lawrence et al. 1995 ] <author> C. Lawrence, J. Zhou, and A. </author> <title> Tits. User's guide for CFSQP version 2.3: A C code for solving (large scale) constrained nonlinear (minimax) optimization problems, generating iterates satisfying all inequality constraints. </title> <type> Technical Report TR-94-16r1, </type> <institution> Institute for Systems Research, University of Maryland, </institution> <month> August </month> <year> 1995. </year>
Reference-contexts: To calibrate the results of our GA a collection of conventional optimization techniques, representative of most categories of optimization paradigms, were applied to this minimization problem, but they performed more poorly in this domain. The best conventional method was found to be a multistart CFSQP <ref> [ Lawrence et al. 1995 ] </ref> , a state-of-the-art implementation of the Sequential Quadratic Programming method, a quasi-Newton method that solves a nonlinear constrained optimization problem by fitting a sequence of quadratic programs. 1000 multistarts of CFSQP with a total cost of 851,237 iterations failed to reach the global optimum found
Reference: [ More and Wright 1993 ] <author> Jorge J. More and Stephen J. Wright. </author> <title> Optimization Software Guide. </title> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1993. </year>
Reference: [ Papalambros and Wilde 1988 ] <author> P. Papalambros and J. Wilde. </author> <title> Principles of Optimal Design. </title> <publisher> Cambridge University Press, </publisher> <address> New York, NY, </address> <year> 1988. </year>
Reference: [ Peressini et al. 1988 ] <author> Anthony L. Peressini, Francis E. Sullivan, and J. J. Uhl, Jr. </author> <title> The Mathematics of Nonlinear Programming. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1988. </year>
Reference: [ Powell and Skolnick 1993 ] <author> D. Powell and M. Skolnick. </author> <title> Using genetic algorithms in engineering design optimization with non-linear constraints. </title> <booktitle> In Proceedings of the Fifth International Conference on Genetic Algorithms, </booktitle> <pages> pages 424-431, </pages> <institution> University of Illinois at Urbana-Champaign, </institution> <address> July 1993. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: numerical optimization [ Tong et al. 1992, Powell 1990, Powell and Skolnick 1993, Bouchard et al. 1988, Bouchard 1992, Sobieszczanski-Sobieski et al. 1985, Agogino and Almgren 1987, Williams and Cagan 1994, Hoeltzel and Chieng 1987, Cerbone 1992 ] , and although a GA was used in some of these efforts <ref> [ Powell 1990, Bouchard 1992, Powell and Skolnick 1993 ] </ref> , this typically represented the use of an off-the-shelf GA, with no attempt to adapt it to the domain as done in this research.
Reference: [ Powell 1990 ] <author> D. Powell. Inter-GEN: </author> <title> A hybrid approach to engineering design optimization. </title> <type> Technical report, </type> <institution> Rensselaer Polytechnic Institute Department of Computer Science, </institution> <month> December </month> <year> 1990. </year> <type> Ph.D. Thesis. </type>
Reference-contexts: numerical optimization [ Tong et al. 1992, Powell 1990, Powell and Skolnick 1993, Bouchard et al. 1988, Bouchard 1992, Sobieszczanski-Sobieski et al. 1985, Agogino and Almgren 1987, Williams and Cagan 1994, Hoeltzel and Chieng 1987, Cerbone 1992 ] , and although a GA was used in some of these efforts <ref> [ Powell 1990, Bouchard 1992, Powell and Skolnick 1993 ] </ref> , this typically represented the use of an off-the-shelf GA, with no attempt to adapt it to the domain as done in this research.
Reference: [ Sobieszczanski-Sobieski et al. 1985 ] <author> J. Sobieszczanski-Sobieski, B. B. James, and A. R. Dovi. </author> <title> Structural optimization by multilevel decomposition. </title> <journal> AIAA Journal, </journal> <volume> 23(11) </volume> <pages> 1775-1782, </pages> <month> November </month> <year> 1985. </year>
Reference: [ Tong et al. 1992 ] <author> Siu Shing Tong, David Powell, and Sanjay Goel. </author> <title> Integration of artificial intelligence and numerical optimization techniques for the design of complex aerospace systems. </title> <booktitle> In 1992 Aerospace Design Conference, </booktitle> <address> Irvine, CA, </address> <month> February </month> <year> 1992. </year> <month> AIAA-92-1189. </month>
Reference: [ Vanderplaats 1984 ] <author> Garret N. Vanderplaats. </author> <title> Numerical Optimization Techniques for Engineering Design : With Applications. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1984. </year>
Reference: [ Williams and Cagan 1994 ] <author> Brian C. Williams and Jonathan Cagan. </author> <title> Activity analysis: the qualitative analysis of stationary points for optimal reasoning. </title> <booktitle> In Proceedings, 12th National Conference on Artificial Intelligence, </booktitle> <pages> pages 1217-1223, </pages> <address> Seattle, Washington, </address> <month> August </month> <year> 1994. </year>
Reference: [ Wright 1990 ] <author> Alden Wright. </author> <title> Genetic algorithms for real parameter optimization. </title> <booktitle> In The First workshop on the Foundations of Genetic Algorithms and Classifier Systems, </booktitle> <pages> pages 205-218, </pages> <institution> Indiana University, Bloomington, </institution> <address> July 1990. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: More generally, when evaluable points form slab-like regions that are not axis parallel (as was the case in this work) the classical crossover operator may not yield satisfactory results <ref> [ Wright 1990 ] </ref> . A final problem is posed by the sparsity of the evaluable and feasible regions, which causes difficulties for the classical mutation operator. <p> What is innovative about our GA is our recombination operators and our policy for evaluating the fitness of individuals. Our description of these comprises the remainder of this section. 2.1 Line Crossover Line crossover (LC) may be viewed as a generalized version of the linear crossover operator introduced in <ref> [ Wright 1990 ] </ref> . After two candidates for crossover have been selected, crossover is performed by joining a line between the two candidates and choosing a point at random along this line or its extensions from either side.
Reference: [ Zha et al. 1996 ] <author> G.-C. Zha, D. Smith, M. Schwabacher, K. Rasheed, A. Gelsey, and D. Knight. </author> <title> High performance supersonic missile inlet design using automated optimization. </title> <booktitle> In AIAA Symposium on Multidisciplinary Analysis and Optimization '96, </booktitle> <year> 1996. </year>
Reference-contexts: We sumarize it briefly here; it is described in more detail in <ref> [ Zha et al. 1996 ] </ref> . For this problem we have access to two simulators, GASP and NIDA. GASP is a very robust but computationally expensive simulator which requires about one week per simulation.
References-found: 22

