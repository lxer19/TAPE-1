URL: ftp://whitechapel.media.mit.edu/pub/tech-reports/TR-456.ps.Z
Refering-URL: http://www-white.media.mit.edu/cgi-bin/tr_pagemaker/
Root-URL: http://www.media.mit.edu
Email: pinhanez bobick@media.mit.edu  
Title: Fast Constraint Propagation on Specialized Allen Networks and its Application to Action Recognition and Control  
Author: Claudio Pinhanez Aaron Bobick 
Address: Ames St. Cambridge, MA 02139  
Affiliation: 20  
Abstract: M.I.T Media Laboratory Perceptual Computing Section Technical Report No. 456 January 1998 Abstract In this paper we present a specialization of Allen interval networks that permits the rapid determination as to whether a given interval must be occurring at the current point in time. The Allen-closure of the interval network is projected into a 3-valued (past,now,fut) constraint network called a PNF-network. We show that the minimal domain of a PNF-network can be approximately computed in linear time by using arc-consistency. This computation is the key factor in the PNF propagation method of determining, for each instant of time and given information from perceptual sensors, the PNF-state of each interval, that is, happening (now), already happened (past), or has not happened (fut). We show how the computation of PNF-states can support both action recognition and the control of real-time interactive environments in which the actions are described by Allen interval networks.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> James F. Allen. </author> <title> Towards a general theory of action and time. </title> <journal> Artificial Intelligence, </journal> <volume> 23 </volume> <pages> 123-154, </pages> <year> 1984. </year>
Reference-contexts: With this simple information about the intervals of a network we show that is possible to perform human action recognition and control of interactive systems whose temporal structure is described using Allen's temporal relationships <ref> [1] </ref>. Most algorithms for temporal constraint propagation in interval algebra networks are NP-hard [23]. In this paper we describe a method to circumvent this problem that is based on the projection of the Allen interval network into the specialized 3-valued (past,now,fut) constraint network called a PNF-network. <p> fast computation. 2 PNF-Networks An interval algebra network, or simply an IA-network (also called by many authors as an Allen interval network), is a constraint satisfaction network [8] where the variables correspond to time intervals, and the arcs to binary temporal constraints between the intervals expressed using Allen's temporal relationships <ref> [1] </ref>. Allen's algebra employs disjunctions of the 13 possible primitive relationships between two time intervals: the relations equal (e), before (b), meet (m), overlap (o), during (d), start (s), finish (f), and their inverses, ib, im, io, id, is, and if (see [1] for a better definition of those relationships). <p> between the intervals expressed using Allen's temporal relationships <ref> [1] </ref>. Allen's algebra employs disjunctions of the 13 possible primitive relationships between two time intervals: the relations equal (e), before (b), meet (m), overlap (o), during (d), start (s), finish (f), and their inverses, ib, im, io, id, is, and if (see [1] for a better definition of those relationships). IA-networks are normally used in tasks involving planning or scheduling. Using constraint propagation techniques [12] it is NP-hard to determine if there are solutions to the network, i.e., an assignment of a time intervals to each variable satisfying all constraints. <p> The other two detectors, DET:bowl-on-table and DET:bowl-off-table, identify the presence of the bowl on or off the table. By using Allen's representation system it is also possible to infer stronger temporal constraints between the actions by pre-processing the IA-network using Allen's path-consistency algorithm <ref> [1] </ref>. The result of the algorithm is an approximation of the temporal closure of the network, that is, the set of all temporal relations which logically follow from the initial constraints [24]. After the approximate closure is computed, the IA-network is projected into a PNF-network using the algorithm described above.
Reference: [2] <author> James F. Allen and George Ferguson. </author> <title> Actions and events in interval temporal logic. </title> <journal> Journal of Logic and Computation, </journal> <volume> 4(5) </volume> <pages> 531-579, </pages> <year> 1994. </year>
Reference-contexts: However, these systems are unable to cope with most of the complex time patterns of everyday actions which include external events, simultaneous activities, multiple sequencing possibilities, and mutually exclusive intervals <ref> [2] </ref>. For example, Kuniyoshi and Inoue [9] use finite automata to represent actions performing simple actions to teach a robot.
Reference: [3] <author> Matthew Brand, Nuria Oliver, and Alex Pentland. </author> <title> Coupled hidden Markov models for complex action recognition. </title> <booktitle> In Proc. of CVPR'97, </booktitle> <address> Puerto Rico, USA, </address> <year> 1997. </year>
Reference-contexts: The problem here is to determine whether given actions are occurring given the sequence of perceptual sensor values through time. Probabilistic methods for visual action recognition have been proposed in the computer vision community <ref> [3] </ref>. Howeve, we believe that it is important to exploit the fact that logical impossibilities prevent the occurrence of some sequences of sub-actions, and that it is necessary to incorporate such constraints into vision systems designed to recognize human action.
Reference: [4] <author> M. Cecelia Buchanan and Polle T. Zellweger. </author> <title> Automatic temporal layout mechanisms. </title> <booktitle> In Proc. of ACM Multimedia'93, </booktitle> <pages> pages 341-350, </pages> <address> Ahaheim, California, </address> <month> August </month> <year> 1993. </year>
Reference-contexts: In this case, the interval script is in fact the declaration of a graph structure that describes a space of stories and interactions. Using Allen's temporal structure | including mutually exclusive intervals | constitutes an important advance over current languages for scripting interaction, for example, Director, [11], or <ref> [4, 6] </ref>. However, without the PNF propagation method it would be infeasible to run in real-time any interactive application written with interval scripts.
Reference: [5] <author> Rina Dechter, Itay Meiri, and Judea Pearl. </author> <title> Temporal constraint networks. </title> <journal> Artificial Intelligence, </journal> <volume> 49(1-3):225-233, </volume> <month> May </month> <year> 1991. </year>
Reference-contexts: 1 Introduction Unlike previous work on constraint propagation in interval algebra networks <ref> [22, 5, 12] </ref>, we are not interested in the computation of a set of time intervals for each node that is compatible with the temporal constraints. <p> The constraint satisfaction network literature lists many cases where special characteristics of the network reduce the complexity of the problem <ref> [5, 12] </ref>. Presently we are trying to determine whether this conjecture is true. 3 PNF Propagation PNF-restriction deals exclusively with determining feasible options of an action at a given moment of time. <p> Allen's algebra was chosen as the underlying temporal formalism because we consider essential the ability to express mutually exclusive actions; for this reason, we can not use temporal algebras based on relations between endpoints, e.g. <ref> [5, 24] </ref>, in spite of the better performance of the reasoning methods they provide. 3 structure of a "pick-up bowl" action . shown in fig. 1 into a PNF-network.
Reference: [6] <author> Rei Hamakawa and Jun Rekimoto. </author> <title> Object composition and playback models for handling multimedia data. </title> <booktitle> In Proc. of ACM Multimedia'93, </booktitle> <pages> pages 273-281, </pages> <address> Ahaheim, California, </address> <month> August </month> <year> 1993. </year>
Reference-contexts: In this case, the interval script is in fact the declaration of a graph structure that describes a space of stories and interactions. Using Allen's temporal structure | including mutually exclusive intervals | constitutes an important advance over current languages for scripting interaction, for example, Director, [11], or <ref> [4, 6] </ref>. However, without the PNF propagation method it would be infeasible to run in real-time any interactive application written with interval scripts.
Reference: [7] <author> David Israel, John Perry, and Syun Tutiya. </author> <title> Actions and movements. </title> <booktitle> In Proc. of the 12th IJCAI, </booktitle> <pages> pages 1060-1065, </pages> <address> Sydney, Australia, </address> <month> August </month> <year> 1991. </year>
Reference-contexts: Howeve, we believe that it is important to exploit the fact that logical impossibilities prevent the occurrence of some sequences of sub-actions, and that it is necessary to incorporate such constraints into vision systems designed to recognize human action. Some work in the vision community <ref> [9, 13, 21, 7] </ref> has attempted to incorporate logical definitions of action into perceptual mechanisms. However, these systems are unable to cope with most of the complex time patterns of everyday actions which include external events, simultaneous activities, multiple sequencing possibilities, and mutually exclusive intervals [2].
Reference: [8] <author> Vipin Kumar. </author> <title> Algorithms for constraint-satisfaction problems: a survey. </title> <journal> AI Magazine, </journal> <volume> 13 </volume> <pages> 32-44, </pages> <year> 1992. </year>
Reference-contexts: In both cases we believe that PNF propagation provides an interesting compromise between the expressiveness of Allen's temporal relationships and the need for fast computation. 2 PNF-Networks An interval algebra network, or simply an IA-network (also called by many authors as an Allen interval network), is a constraint satisfaction network <ref> [8] </ref> where the variables correspond to time intervals, and the arcs to binary temporal constraints between the intervals expressed using Allen's temporal relationships [1].
Reference: [9] <author> Y. Kuniyoshi and H. Inoue. </author> <title> Qualitative recognition of ongoing human action sequences. </title> <booktitle> In Proc. of IJ-CAI'93, </booktitle> <pages> pages 1600-1609, </pages> <year> 1993. </year>
Reference-contexts: Howeve, we believe that it is important to exploit the fact that logical impossibilities prevent the occurrence of some sequences of sub-actions, and that it is necessary to incorporate such constraints into vision systems designed to recognize human action. Some work in the vision community <ref> [9, 13, 21, 7] </ref> has attempted to incorporate logical definitions of action into perceptual mechanisms. However, these systems are unable to cope with most of the complex time patterns of everyday actions which include external events, simultaneous activities, multiple sequencing possibilities, and mutually exclusive intervals [2]. <p> However, these systems are unable to cope with most of the complex time patterns of everyday actions which include external events, simultaneous activities, multiple sequencing possibilities, and mutually exclusive intervals [2]. For example, Kuniyoshi and Inoue <ref> [9] </ref> use finite automata to represent actions performing simple actions to teach a robot. Implicit in the model is the assumption of strictly sequential sub-actions, which, although adequate for the mapping into robot primitives, seems to be a strong restriction for the representation of generic human actions.
Reference: [10] <author> A. K. Mackworth. </author> <title> Consistency in networks of relations. </title> <journal> Artificial Intelligence, </journal> <volume> 8(1) </volume> <pages> 99-118, </pages> <year> 1977. </year>
Reference-contexts: Computing the minimal domain in constraint satisfaction networks is, in general, a NP-hard problem [22]. In our experiments, we have been employing an arc-consistency algorithm (based on <ref> [10] </ref>) to compute an approximation of the the minimal domain R (W ). It is easy to show that the result of the arc-consistency algorithm is always a conservative approximation to the minimal domain; that is, it contains all the feasible solutions of a constraint satisfaction network.
Reference: [11] <author> MacroMind Inc. Director's User Manual. </author> <year> 1990. </year>
Reference-contexts: In this case, the interval script is in fact the declaration of a graph structure that describes a space of stories and interactions. Using Allen's temporal structure | including mutually exclusive intervals | constitutes an important advance over current languages for scripting interaction, for example, Director, <ref> [11] </ref>, or [4, 6]. However, without the PNF propagation method it would be infeasible to run in real-time any interactive application written with interval scripts.
Reference: [12] <author> Itay Meiri. </author> <title> Combining qualitative and quantitative constraints in temporal reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 87(1-2):343-385, </volume> <month> November </month> <year> 1996. </year>
Reference-contexts: 1 Introduction Unlike previous work on constraint propagation in interval algebra networks <ref> [22, 5, 12] </ref>, we are not interested in the computation of a set of time intervals for each node that is compatible with the temporal constraints. <p> IA-networks are normally used in tasks involving planning or scheduling. Using constraint propagation techniques <ref> [12] </ref> it is NP-hard to determine if there are solutions to the network, i.e., an assignment of a time intervals to each variable satisfying all constraints. Given a variable of an IA-network, a feasible value for the variable is a time interval which belongs to at least one solution. <p> The constraint satisfaction network literature lists many cases where special characteristics of the network reduce the complexity of the problem <ref> [5, 12] </ref>. Presently we are trying to determine whether this conjecture is true. 3 PNF Propagation PNF-restriction deals exclusively with determining feasible options of an action at a given moment of time.
Reference: [13] <author> Hans-Hellmut Nagel. </author> <title> A vision of `vision and language' comprises action: An example from road traffic. </title> <journal> Artificial Intelligence Review, </journal> <volume> 8 </volume> <pages> 189-214, </pages> <year> 1995. </year> <month> 7 </month>
Reference-contexts: Howeve, we believe that it is important to exploit the fact that logical impossibilities prevent the occurrence of some sequences of sub-actions, and that it is necessary to incorporate such constraints into vision systems designed to recognize human action. Some work in the vision community <ref> [9, 13, 21, 7] </ref> has attempted to incorporate logical definitions of action into perceptual mechanisms. However, these systems are unable to cope with most of the complex time patterns of everyday actions which include external events, simultaneous activities, multiple sequencing possibilities, and mutually exclusive intervals [2]. <p> Implicit in the model is the assumption of strictly sequential sub-actions, which, although adequate for the mapping into robot primitives, seems to be a strong restriction for the representation of generic human actions. Similarly, Nagel <ref> [13] </ref> uses transition diagrams to represent driver's maneuvers in a highway but provides no means to represent overlapping activities. Siskind's approach [20, 21] uses an event logic to represent basic actions, temporarily connected using Allen's primitive relationships.
Reference: [14] <author> Claudio S. Pinhanez and Aaron F. Bobick. </author> <title> Approxi--mate world models: Incorporating qualitative and linguistic information into vision systems. </title> <booktitle> In AAAI'96, </booktitle> <pages> pages 1116-1123, </pages> <address> Portland, Oregon, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: The sensed primitives are simple to detect using current computer vision technology; in fact, some of the sequences have been used before in a project involving tracking of people and objects in the domain of a cooking show <ref> [14] </ref>. We also determine the interval where every action and sub-action is actually happening and use the information to evaluate the performance of the action detection method. In this paper we presume perfect sensors; a fault-tolerant extension of these ideas is described in [15]. <p> In [18], Rieger discusses the implementation of such an inference system; in a previous work we have implemented a simpler system able to operate in a specific context of a cooking show domain <ref> [14] </ref>. of the main action and of five sub-actions, each of them with a level of complexity similar to the "pick-up bowl" shown above.
Reference: [15] <author> Claudio S. Pinhanez and Aaron F. Bobick. </author> <title> Human action detection using PNF propagation of temporal constraints. </title> <type> Technical Report 423, </type> <institution> M.I.T. Media Laboratory Perceptual Computing Section, </institution> <month> April </month> <year> 1997. </year>
Reference-contexts: We also determine the interval where every action and sub-action is actually happening and use the information to evaluate the performance of the action detection method. In this paper we presume perfect sensors; a fault-tolerant extension of these ideas is described in <ref> [15] </ref>. We start by examining the results for the detection of the action "pick-up bowl" shown in fig. 4. <p> In <ref> [15] </ref> this example is more extensively analyzed in a discussion about the effects caused by the different temporal relationships between the actions. the previous instant of time on the strength of PNF propagation. <p> We are also developing methods to cope with sensor errors by considering the probability of simultaneous errors and the statistical reliabitility of sensors. A first proposal is discussed in <ref> [15] </ref>. The interval script paradigm is presently being reexamined and improved. In "It/I", the grammar of the scripting language already contained significant improv-ments, including the ability to directly express events, cycles, and to easily construct hierarchies.
Reference: [16] <author> Claudio S. Pinhanez and Aaron F. Bobick. "It/I": </author> <title> A theater play featuring an autonomous computer graphics character. </title> <type> Technical report # 455, </type> <institution> M.I.T. Media Laboratory Perceptual Computing Section, </institution> <month> January </month> <year> 1998. </year>
Reference-contexts: Each of the four scenes of "It/I" uses around 150 intervals, handling information from a 3-camera stereo system monitoring the stage, a MIDI synthesizer, a MIDI light-board, and other smaller sensors. "It/I" was performed six times for a total audience of about 500 people <ref> [16] </ref>. 6 Final Remarks This paper introduces a method | PNF propagation | to efficiently exploit the temporal constraints inherent to human action to increase the detection power of simple sensors and to control interaction. The method is based on the specialization into a PNF-network of IA-networks.
Reference: [17] <author> Claudio S. Pinhanez, Kenji Mase, and Aaron F. Bo-bick. </author> <title> Interval scripts: A design paradigm for story-based interactive systems. </title> <booktitle> In CHI'97, </booktitle> <pages> pages 287-294, </pages> <address> Atlanta, Georgia, </address> <month> March </month> <year> 1997. </year>
Reference-contexts: The rest of this section offers a summary of how the run-time management of an application described by an interval script is accomplished (a better description can be found in <ref> [17] </ref>). 5.1 The Interaction Manager In the interval script paradigm, the designer has two basic tasks: to define the actual routines corresponding to different externals (connectors to real world sensors and actuators) and to determine the relationships between the intervals defined by those externals. interaction manager when running the PNF algorithm. <p> Figure 7 shows pictures taken during the performances. "SingSong" is a 4-minute performance where a clown interacts with four screen-projected singers. The interval script used 300 intervals, controling graphics, a MIDI synthesizer, and a camera (see <ref> [17] </ref> for details). "It/I" is a 30-minute performance, followed by audience interaction, where a machine character, played autonomously by the computer system, taunts and plays with a human character.
Reference: [18] <author> Charles J. Rieger III. </author> <title> Conceptual memory and inference. </title> <booktitle> In Conceptual Information Processing, chapter 5, </booktitle> <pages> pages 157-288. </pages> <publisher> North-Holland, </publisher> <year> 1975. </year>
Reference-contexts: The constraints were designed to resemble the result of an automatic inference system operating on a compact description of the action based on Schank's conceptualizations [19]. In <ref> [18] </ref>, Rieger discusses the implementation of such an inference system; in a previous work we have implemented a simpler system able to operate in a specific context of a cooking show domain [14]. of the main action and of five sub-actions, each of them with a level of complexity similar to
Reference: [19] <author> Roger C. Schank. </author> <title> Conceptual dependency theory. </title> <booktitle> In Conceptual Information Processing, chapter 3, </booktitle> <pages> pages 22-82. </pages> <publisher> North-Holland, </publisher> <year> 1975. </year>
Reference-contexts: The constraints were designed to resemble the result of an automatic inference system operating on a compact description of the action based on Schank's conceptualizations <ref> [19] </ref>.
Reference: [20] <author> Jeffrey Mark Siskind. </author> <title> Naive Physics, Event Perception, Lexical Semantics, and Language Acquisition. </title> <type> PhD thesis, </type> <institution> M.I.T, Dept. of Electrical Engineering and Computer Science, </institution> <month> January </month> <year> 1992. </year>
Reference-contexts: Similarly, Nagel [13] uses transition diagrams to represent driver's maneuvers in a highway but provides no means to represent overlapping activities. Siskind's approach <ref> [20, 21] </ref> uses an event logic to represent basic actions, temporarily connected using Allen's primitive relationships. However, besides being a fully exponential modal logic, the proposed temporal propagation method using spanning intervals is quite inefficient.
Reference: [21] <author> Jeffrey Mark Siskind. </author> <title> Grounding language in perception. </title> <journal> Artificial Intelligence Review, </journal> <volume> 8 </volume> <pages> 371-391, </pages> <year> 1994. </year>
Reference-contexts: Howeve, we believe that it is important to exploit the fact that logical impossibilities prevent the occurrence of some sequences of sub-actions, and that it is necessary to incorporate such constraints into vision systems designed to recognize human action. Some work in the vision community <ref> [9, 13, 21, 7] </ref> has attempted to incorporate logical definitions of action into perceptual mechanisms. However, these systems are unable to cope with most of the complex time patterns of everyday actions which include external events, simultaneous activities, multiple sequencing possibilities, and mutually exclusive intervals [2]. <p> Similarly, Nagel [13] uses transition diagrams to represent driver's maneuvers in a highway but provides no means to represent overlapping activities. Siskind's approach <ref> [20, 21] </ref> uses an event logic to represent basic actions, temporarily connected using Allen's primitive relationships. However, besides being a fully exponential modal logic, the proposed temporal propagation method using spanning intervals is quite inefficient.
Reference: [22] <author> Peter van Beek. </author> <title> Reasoning about qualitative temporal information. </title> <journal> Artificial Intelligence, </journal> <volume> 58(1-3):297-326, </volume> <month> December </month> <year> 1992. </year>
Reference-contexts: 1 Introduction Unlike previous work on constraint propagation in interval algebra networks <ref> [22, 5, 12] </ref>, we are not interested in the computation of a set of time intervals for each node that is compatible with the temporal constraints. <p> Computing the minimal domain in constraint satisfaction networks is, in general, a NP-hard problem <ref> [22] </ref>. In our experiments, we have been employing an arc-consistency algorithm (based on [10]) to compute an approximation of the the minimal domain R (W ).
Reference: [23] <author> Marc Vilain and Henry Kaut. </author> <title> Constraint propagation algorithms for temporal reasoning. </title> <booktitle> In Proc. of AAAI'86, </booktitle> <pages> pages 377-382, </pages> <address> Philadelphia, Pennsylvania, </address> <year> 1986. </year>
Reference-contexts: With this simple information about the intervals of a network we show that is possible to perform human action recognition and control of interactive systems whose temporal structure is described using Allen's temporal relationships [1]. Most algorithms for temporal constraint propagation in interval algebra networks are NP-hard <ref> [23] </ref>. In this paper we describe a method to circumvent this problem that is based on the projection of the Allen interval network into the specialized 3-valued (past,now,fut) constraint network called a PNF-network. <p> The set of all feasible values is called the minimal domain of the variable. Unfortunately, calculating the minimal domain in IA-networks is also NP-hard in the number of constraints <ref> [23] </ref>, preventing their use in most practical problems.
Reference: [24] <author> Marc Vilain, Henry Kautz, and Peter van Beek. </author> <title> Constraint propagation algorithms for temporal reasoning: A revised report. </title> <editor> In Daniel S. Weld and Johan de Kleer, editors, </editor> <booktitle> Readings in Qualitative Reasoning About Physical Systems, </booktitle> <pages> pages 373-381. </pages> <publisher> Morgan Kauf-mann, </publisher> <address> San Mateo, California, </address> <year> 1990. </year> <month> 8 </month>
Reference-contexts: Allen's algebra was chosen as the underlying temporal formalism because we consider essential the ability to express mutually exclusive actions; for this reason, we can not use temporal algebras based on relations between endpoints, e.g. <ref> [5, 24] </ref>, in spite of the better performance of the reasoning methods they provide. 3 structure of a "pick-up bowl" action . shown in fig. 1 into a PNF-network. <p> The result of the algorithm is an approximation of the temporal closure of the network, that is, the set of all temporal relations which logically follow from the initial constraints <ref> [24] </ref>. After the approximate closure is computed, the IA-network is projected into a PNF-network using the algorithm described above. <p> The temporal structure of each action is codified manually into an IA-network. The IA-networks are pre-processed using Allen's path-consistency algorithm (as revised in <ref> [24] </ref>) and then converted into PNF-networks. To test the PNF formulation, we manually extract the values for the sensors by watching a video of the action being performed (see fig. 3).
References-found: 24

