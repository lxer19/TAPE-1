URL: http://www.cs.rpi.edu/~millerj/papers/gdm_thesis.ps.gz
Refering-URL: http://www.cs.rpi.edu/~millerj/ndx.html
Root-URL: http://www.cs.rpi.edu
Title: On GDM's: Geometrically Deformed Models for the Extraction of Closed Shapes from Volume Data  
Author: By James Vradenburg Miller Dr. Michael J. Wozny 
Degree: A Thesis Submitted to the Graduate  in Partial Fulfillment of the Requirements for the Degree of Master of Science Approved:  Thesis Adviser  
Date: December 1990  
Address: Troy, New York  
Affiliation: Faculty of Rensselaer Polytechnic Institute  Rensselaer Polytechnic Institute  
Abstract-found: 0
Intro-found: 1
Reference: [1] <editor> R. Bajcsy and S. </editor> <title> Kovacic. Multiresolution elastic matching. Computer Vision, </title> <journal> Graphics and Image Processing, </journal> (46):1-21, 1989. 
Reference-contexts: for controlling the deformation of a model to fit an object is based upon Breen's work on goal-oriented motion for computer animation [2, 3] (see Section 2.1.1), and reflects a simpler approach to the problems presented by Kass et al. [10], Terzopoulos et al. [19, 20], and Bajcsy et al. <ref> [1] </ref>. These other approaches involve modelling the elastic nature of a curve or surface in order to control the model's deformation. Such models are based on the differential equations of elastic properties. <p> Also, since symmetry seeking models are driven by the gradient of an image, there is the issue of sensitivity to noise that must be addressed. 1.5.8 Deformable Models Model Matching Bajcsy and Kovacic have used elastic deformation to match a known atlas of a brain to a scanned brain <ref> [1] </ref>. Robert Livingston created the brain atlas in 1976 at the University of California in San Diego. The contours of forty-five anatomic structures were manually traced and entered into a database. <p> If a step cannot be completed 9 that will reduce the potential of the vertex point, then the vertex point is not moved. For the purposes of geometrically deformed models, the stepsizes are maintained between <ref> [1/4, 1] </ref> voxels. This allows for rapid changes in the dimensions of the model when it is in a void, as well as fine adjustments in the model when it encounters an element of noise or the boundary of the cavity. This technique will find local minima.
Reference: [2] <author> D.E. Breen. </author> <title> Choreographing goal-oriented motion using cost functions. </title> <booktitle> State-of-the-Art in Computer Animation (Computer Animation `89 Conference Proceedings), </booktitle> <pages> pages 141-151. </pages> <editor> eds N. Magnenat-Thalmann and D. </editor> <publisher> Thalmann (Springer-Verlag, </publisher> <address> Tokyo, </address> <month> June </month> <year> 1989). </year>
Reference-contexts: Finally, the approach draws upon the techniques in the field of mathematical optimization. 1.5 Other Solutions The proposed solution for controlling the deformation of a model to fit an object is based upon Breen's work on goal-oriented motion for computer animation <ref> [2, 3] </ref> (see Section 2.1.1), and reflects a simpler approach to the problems presented by Kass et al. [10], Terzopoulos et al. [19, 20], and Bajcsy et al. [1]. These other approaches involve modelling the elastic nature of a curve or surface in order to control the model's deformation. <p> The constraints that they have developed govern the geometric relationships between objects. Animations are generated either by using time varying constraints, or by setting up an initial configuration that violates the energy constraints. This work provided the motivation for Breen's research on choreographing animations through cost function minimization <ref> [2, 3] </ref>, which is the cornerstone of GDM's. Breen's research focused on defining cost functions that define goal-oriented motion, while Witkin et al.'s research focused on defining energy functions to maintain geometric constraints. 2.1.2 Deformable Models Terzopoulos and Fleischer have developed the mathematics for deforming models in numerous ways [19].
Reference: [3] <author> D.E. Breen. </author> <title> The cost analysis object in the clockworks. </title> <institution> Rensselaer Design Research Center Technical Report TR-88048, RPI, </institution> <year> 1988. </year>
Reference-contexts: Finally, the approach draws upon the techniques in the field of mathematical optimization. 1.5 Other Solutions The proposed solution for controlling the deformation of a model to fit an object is based upon Breen's work on goal-oriented motion for computer animation <ref> [2, 3] </ref> (see Section 2.1.1), and reflects a simpler approach to the problems presented by Kass et al. [10], Terzopoulos et al. [19, 20], and Bajcsy et al. [1]. These other approaches involve modelling the elastic nature of a curve or surface in order to control the model's deformation. <p> The constraints that they have developed govern the geometric relationships between objects. Animations are generated either by using time varying constraints, or by setting up an initial configuration that violates the energy constraints. This work provided the motivation for Breen's research on choreographing animations through cost function minimization <ref> [2, 3] </ref>, which is the cornerstone of GDM's. Breen's research focused on defining cost functions that define goal-oriented motion, while Witkin et al.'s research focused on defining energy functions to maintain geometric constraints. 2.1.2 Deformable Models Terzopoulos and Fleischer have developed the mathematics for deforming models in numerous ways [19].
Reference: [4] <author> J.F. Canny. </author> <title> Finding edges and lines in images. </title> <type> Masters thesis, </type> <institution> Massachusetts Institute of Technology, Cambridge, Massachusetts, </institution> <month> June </month> <year> 1983. </year>
Reference-contexts: The important aspect of this constraint is that it introduces a local minima at boundary events. Operations that identify boundary events include digital gradients [8], the Canny operator <ref> [4] </ref>, and morphological operations [17] (see Sections 3.2.2 and 4.2.2). 2.3.3 Maintaining Topology | T i The final constraint maintains the topological integrity of the model as well as controls the spatial frequency of the model.
Reference: [5] <author> H.E. Cline, W.E. Lorensen, S. Ludke, Crawford C.R., and B.C. Teeter. </author> <title> Two algorithms for the three-dimensional reconstruction of tomograms. </title> <journal> Medical Physics, </journal> <volume> 15(3) </volume> <pages> 320-327, </pages> <year> 1988. </year>
Reference-contexts: The first approach operates on the volume data in its original form. This is the basis for both morphology and volume rendering [15, 17, 16, 6]. The second approach transforms the data into something that is more readily displayed, such as a surface <ref> [9, 12, 7, 13, 5] </ref>. Another technique is to generate models of the scanned objects using the volume data as a measure of the object's current configuration [10, 20, 14] . <p> Once the rendering engines can handle the enormous number of triangles generated, marching cubes' acceptance as a general geometric modeler will increase. 1.5.5 Dividing Cubes Lorensen, Cline, Ludke, Crawford, and Teeter addressed the rendering problem associated with marching cubes by developing dividing cubes <ref> [5] </ref>. The dividing cubes algorithm operates in the same manner as marching cubes, but each voxel through which the surface passes is resampled down to the display resolution. The result is that instead of triangles being generated, points with normals are generated that can be rendered directly. <p> Thus the weights must be chosen to minimize any scale variance in the constraint functions as they are evaluated at 10 3 voxels and at 1 voxel. For 3D GDM's with normal tracking, the deformation potential typically returns a value in the range of <ref> [0, 5] </ref> while the topology constraint typically returns a value in the range of [0, 0.5]. The weights presented in Table 6.2 were derived through experimentation. They aptly compensate for any scale variance in the topology constraint. The image event gain is the only insensitive parameter. <p> The normal tracking deformation potential provides a scale invariant method to perform gross deformations. A vertex is approximately within <ref> [0, 5] </ref> voxels of its focal point, regardless of scale. The 2D GDM's presented in Chapter 5 do not have the luxury of a scale invariant deformation potential. During the 2D GDM process, the focal point deformation potential can easily change by two orders of magnitude.
Reference: [6] <author> R.A Drebin, L. Carpenter, and P. Hanrahan. </author> <title> Volume rendering. </title> <journal> Computer Graphics, </journal> <volume> 22(4) </volume> <pages> 65-74, </pages> <year> 1988. </year>
Reference-contexts: Alternative methods of presenting this crude grey-level representation have focused on two approaches. The first approach operates on the volume data in its original form. This is the basis for both morphology and volume rendering <ref> [15, 17, 16, 6] </ref>. The second approach transforms the data into something that is more readily displayed, such as a surface [9, 12, 7, 13, 5]. <p> The volume rendering technique developed by Drebin, Carpenter, and Hanrahan <ref> [6] </ref> is a probabilistic display technique. Each voxel in a data set is typically a measure of density.
Reference: [7] <author> H. Fuch, Kedem Z.M., and Uselton S.P. </author> <title> Optimal surface reconstruction from planar contours. </title> <journal> Comm. ACM, </journal> 20(10) 693-702, 1977. 
Reference-contexts: The first approach operates on the volume data in its original form. This is the basis for both morphology and volume rendering [15, 17, 16, 6]. The second approach transforms the data into something that is more readily displayed, such as a surface <ref> [9, 12, 7, 13, 5] </ref>. Another technique is to generate models of the scanned objects using the volume data as a measure of the object's current configuration [10, 20, 14] . <p> The remainder of this section will discuss the specifics of the other techniques, which formed the basis of GDM's. 1.5.1 Surface Reconstruction from Planar Contours Fuch, Kedem, and Uselton developed a means of stitching a series of two-dimensional contours together in order to form a three-dimensional surface <ref> [7] </ref>. Their method involved fitting a triangular strip between the individual contours. Each triangle in the strip had two vertices on one contour and the third vertex on the adjacent contour (Figure 1.1).
Reference: [8] <author> R.C. Gonzalez and P. Wintz. </author> <title> Digital Image Processing. </title> <publisher> Addison-Wesley, </publisher> <year> 1987. </year>
Reference-contexts: The important aspect of this constraint is that it introduces a local minima at boundary events. Operations that identify boundary events include digital gradients <ref> [8] </ref>, the Canny operator [4], and morphological operations [17] (see Sections 3.2.2 and 4.2.2). 2.3.3 Maintaining Topology | T i The final constraint maintains the topological integrity of the model as well as controls the spatial frequency of the model.
Reference: [9] <author> G. Herman. </author> <title> A topological proof of a surface tracking algorithm. Computer Vision, </title> <journal> Graphics, and Image Processing, </journal> <volume> 23 </volume> <pages> 162-177, </pages> <year> 1983. </year>
Reference-contexts: The first approach operates on the volume data in its original form. This is the basis for both morphology and volume rendering [15, 17, 16, 6]. The second approach transforms the data into something that is more readily displayed, such as a surface <ref> [9, 12, 7, 13, 5] </ref>. Another technique is to generate models of the scanned objects using the volume data as a measure of the object's current configuration [10, 20, 14] . <p> user of the algorithm only has to identify one point that is inside the object verses a point for every contour in every slice that composes the object. 1.5.3 Surface Tracking Herman, Frieder, and Artzy developed a surface reconstruction algorithm that treats slice data as a collection of three-dimensional voxels <ref> [9] </ref>. This has the previously stated benefit of treating all concavities in the surface the same, regardless of their oreintation. Their method involves first picking a voxel that is on the surface of the object. The model is extracted by following the surface using the voxel data as graph.
Reference: [10] <author> M. Kass, A. Witken, and D. Terzopoulos. Snakes: </author> <title> Active contour models. </title> <journal> International Journal of Computer Vision, </journal> <pages> pages 321-331, </pages> <year> 1988. </year>
Reference-contexts: The second approach transforms the data into something that is more readily displayed, such as a surface [9, 12, 7, 13, 5]. Another technique is to generate models of the scanned objects using the volume data as a measure of the object's current configuration <ref> [10, 20, 14] </ref> . The major motivation for this technique is the ability of current technology to display geometric models rather than three-dimensional scalar fields. The model can then be used for pattern recognition, visualization, or subject to a series of geometric measurements and operations. <p> field of mathematical optimization. 1.5 Other Solutions The proposed solution for controlling the deformation of a model to fit an object is based upon Breen's work on goal-oriented motion for computer animation [2, 3] (see Section 2.1.1), and reflects a simpler approach to the problems presented by Kass et al. <ref> [10] </ref>, Terzopoulos et al. [19, 20], and Bajcsy et al. [1]. These other approaches involve modelling the elastic nature of a curve or surface in order to control the model's deformation. Such models are based on the differential equations of elastic properties. <p> In addition, dividing cube models cannot be scaled for various resolutions since they were generated with a particular display resolution in mind. 1.5.6 Snakes Kass, Witkin, and Terzopoulos have developed an active contour model which they call Snakes <ref> [10] </ref>. A snake is essentially a spline that minimizes the energy associated with the spline. The total energy encompasses the internal energy of the spline, image forces, and external constraints. By minimizing the spline's internal energy, the snake will always remain smooth.
Reference: [11] <author> S. Kirkpatrick, </author> <title> C.D. Gelatt, and M.P. Vecchi. Optimization by simulated annealing. </title> <journal> Science, </journal> <volume> 220(4598) </volume> <pages> 671-680, </pages> <year> 1983. </year>
Reference-contexts: This technique will find local minima. No global minimization techniques such as simulated annealing <ref> [18, 11] </ref> are performed; so global minima are not always found (however, a gradient descent has proven sufficient for the data sets tested). The algorithm actually exploits the fact that only local minima are found, by defining its cost functions to introduce local minima whenever a critical point is crossed.
Reference: [12] <author> W.C. Lin, S.Y. Chen, and C.T. Chen. </author> <title> A new surface interpolation technique for reconstructing 3d objects from serial cross-sections. Computer Vision, </title> <journal> Graphics, and Image Processing, </journal> <volume> 48 </volume> <pages> 124-143, </pages> <year> 1989. </year>
Reference-contexts: The first approach operates on the volume data in its original form. This is the basis for both morphology and volume rendering [15, 17, 16, 6]. The second approach transforms the data into something that is more readily displayed, such as a surface <ref> [9, 12, 7, 13, 5] </ref>. Another technique is to generate models of the scanned objects using the volume data as a measure of the object's current configuration [10, 20, 14] . <p> The complexity of the triangular strip generator increases when it has to stitch two slices together that have a different number of contours. 1.5.2 3D Reconstruction from Serial Cross-Sections Lin, Chen and Chen also developed a means of stitching individual two-dimensional contours together to form a three-dimensional surface <ref> [12] </ref>. Their technique combines spline theory, quadratic variation-based surface interpolation, and dynamic elastic contour interpolation. A two-dimensional contour is extracted from each slice in the data set. Then a series of intermediate contours are created to fill in the interslice spacing.
Reference: [13] <author> W.E. Lorensen and H.E. Cline. </author> <title> Marching cubes: A high resolution 3d surface construction algorithm. </title> <booktitle> Computer Graphics `87 Conference Proceedings, </booktitle> <volume> 21(4) </volume> <pages> 163-169, </pages> <year> 1987. </year>
Reference-contexts: The first approach operates on the volume data in its original form. This is the basis for both morphology and volume rendering [15, 17, 16, 6]. The second approach transforms the data into something that is more readily displayed, such as a surface <ref> [9, 12, 7, 13, 5] </ref>. Another technique is to generate models of the scanned objects using the volume data as a measure of the object's current configuration [10, 20, 14] . <p> Elements of noise and regional shifts in voxel magnitude may result in false surface voxels, or may make following the true surface impossible. 1.5.4 Marching Cubes Lorensen and Cline created an algorithm called marching cubes that has proven useful for generating three-dimensional polygonal surfaces from slice data <ref> [13] </ref>. In their algorithm, a cube is bounded by eight pixels located on two slices (four pixels per slice). Each vertex of the cube is coded as either inside or outside the desired surface depending upon their intensities and some threshold intensity that defines the current surface.
Reference: [14] <author> J.V. Miller, D.E. Breen, and M.J. Wozny. </author> <title> Extracting geometric models through constraint minimization. </title> <booktitle> Visualization `90 Proceedings, </booktitle> <pages> pages 74-82, </pages> <year> 1990. </year>
Reference-contexts: The second approach transforms the data into something that is more readily displayed, such as a surface [9, 12, 7, 13, 5]. Another technique is to generate models of the scanned objects using the volume data as a measure of the object's current configuration <ref> [10, 20, 14] </ref> . The major motivation for this technique is the ability of current technology to display geometric models rather than three-dimensional scalar fields. The model can then be used for pattern recognition, visualization, or subject to a series of geometric measurements and operations.
Reference: [15] <author> J. Serra. </author> <title> Image Analysis and Mathematical Morphology Volume 1. </title> <publisher> Academic Press, </publisher> <year> 1982. </year>
Reference-contexts: Alternative methods of presenting this crude grey-level representation have focused on two approaches. The first approach operates on the volume data in its original form. This is the basis for both morphology and volume rendering <ref> [15, 17, 16, 6] </ref>. The second approach transforms the data into something that is more readily displayed, such as a surface [9, 12, 7, 13, 5]. <p> This constraint coupled with the image event detector is an approximation to the star transform. "The star S (x) at the point x is the set of points y 2 X directly seen from x" <ref> [15] </ref>. The polygonal model extracted will, therefore, consist only of the points in the object that can be seen from the focal point.
Reference: [16] <author> M.M. Skolnick. </author> <title> Application of morphological transformations to the analysis of two-dimensional elec-trophoretic gels of biological material. Computer Vision, </title> <journal> Graphics, and Image Processing, </journal> (35):306-332, 1986. 
Reference-contexts: Alternative methods of presenting this crude grey-level representation have focused on two approaches. The first approach operates on the volume data in its original form. This is the basis for both morphology and volume rendering <ref> [15, 17, 16, 6] </ref>. The second approach transforms the data into something that is more readily displayed, such as a surface [9, 12, 7, 13, 5].
Reference: [17] <author> S.R. Sternberg. </author> <title> Grayscale morphology. Computer Vision, </title> <journal> Graphics, and Image Processing, </journal> (35):333-355, 1986. 
Reference-contexts: Alternative methods of presenting this crude grey-level representation have focused on two approaches. The first approach operates on the volume data in its original form. This is the basis for both morphology and volume rendering <ref> [15, 17, 16, 6] </ref>. The second approach transforms the data into something that is more readily displayed, such as a surface [9, 12, 7, 13, 5]. <p> The important aspect of this constraint is that it introduces a local minima at boundary events. Operations that identify boundary events include digital gradients [8], the Canny operator [4], and morphological operations <ref> [17] </ref> (see Sections 3.2.2 and 4.2.2). 2.3.3 Maintaining Topology | T i The final constraint maintains the topological integrity of the model as well as controls the spatial frequency of the model.
Reference: [18] <author> H.L. Tan, S.B. Gelfand, and E.J. Delp. </author> <title> A cost minimization approach to edge detection using simulated annealing. </title> <institution> Purdue University, Computer Vision and Image Processing Laboratory, School of Electrical Engineering, West Lafayette, Indiana. </institution>
Reference-contexts: This technique will find local minima. No global minimization techniques such as simulated annealing <ref> [18, 11] </ref> are performed; so global minima are not always found (however, a gradient descent has proven sufficient for the data sets tested). The algorithm actually exploits the fact that only local minima are found, by defining its cost functions to introduce local minima whenever a critical point is crossed.
Reference: [19] <author> D. Terzopoulos and K. Fleischer. </author> <title> Deformable models. </title> <journal> The Visual Computer, </journal> <volume> 4 </volume> <pages> 306-311, </pages> <year> 1988. </year>
Reference-contexts: 1.5 Other Solutions The proposed solution for controlling the deformation of a model to fit an object is based upon Breen's work on goal-oriented motion for computer animation [2, 3] (see Section 2.1.1), and reflects a simpler approach to the problems presented by Kass et al. [10], Terzopoulos et al. <ref> [19, 20] </ref>, and Bajcsy et al. [1]. These other approaches involve modelling the elastic nature of a curve or surface in order to control the model's deformation. Such models are based on the differential equations of elastic properties. <p> This approach, as with Snakes, is based on extensive work in deformable models <ref> [19] </ref>. The results from this algorithm are very impressive, as long as the object is indeed symmetrical. If slices of an object were used, then the same technique of elastic deformation could be used in three-dimensions and the assumption of symmetry could be discarded. <p> Breen's research focused on defining cost functions that define goal-oriented motion, while Witkin et al.'s research focused on defining energy functions to maintain geometric constraints. 2.1.2 Deformable Models Terzopoulos and Fleischer have developed the mathematics for deforming models in numerous ways <ref> [19] </ref>. Their methods allow for elastic deformation of a model as well as viscoelastic, plastic and thermoelastic deformations. For an elastically deformed model to maintain its shape, the external forces that originally deformed the model must be applied constantly.
Reference: [20] <author> D. Terzopoulos, A. Witkin, and M. Kass. </author> <title> Symmetry-seeking models and 3d object reconstruction. </title> <journal> Int'l J. Computer Vision, </journal> <volume> 1(3) </volume> <pages> 211-221, </pages> <month> October </month> <year> 1987. </year>
Reference-contexts: The second approach transforms the data into something that is more readily displayed, such as a surface [9, 12, 7, 13, 5]. Another technique is to generate models of the scanned objects using the volume data as a measure of the object's current configuration <ref> [10, 20, 14] </ref> . The major motivation for this technique is the ability of current technology to display geometric models rather than three-dimensional scalar fields. The model can then be used for pattern recognition, visualization, or subject to a series of geometric measurements and operations. <p> 1.5 Other Solutions The proposed solution for controlling the deformation of a model to fit an object is based upon Breen's work on goal-oriented motion for computer animation [2, 3] (see Section 2.1.1), and reflects a simpler approach to the problems presented by Kass et al. [10], Terzopoulos et al. <ref> [19, 20] </ref>, and Bajcsy et al. [1]. These other approaches involve modelling the elastic nature of a curve or surface in order to control the model's deformation. Such models are based on the differential equations of elastic properties. <p> Minimizing the internal energy within a spline surface will require far more computation time than the spline curve. 4 1.5.7 Symmetry-Seeking Models Terzopoulos, Witkin, and Kass have extended the concept of Snakes into three dimensions based on an assumption of symmetry. Symmetry Seeking Models <ref> [20] </ref> derive a three-dimensional shape from a two-dimensional image by assuming the object is symmetrical about some flexible spine. A user draws a curve near the symmetrical axis of the object. This curve is used as the first approximation for the flexible spine.
Reference: [21] <author> M.J. Wennington. </author> <title> Spherical Models. </title> <publisher> Cambridge Univerity Press. </publisher>
Reference-contexts: All vertices added through subsequent global resamplings of the geodesic result in new vertices that are six connected while maintaining the 12 original vertices as five-connected. Figure 4.1 illustrates how one of the triangular faces in an icosahedron can be resampled to form the faces of a geodesic <ref> [21] </ref>. Each edge is bisected to form three new vertices. The new vertices are then connected in order to create four faces from the original face. Since the same operation is performed on all the faces, the new vertices are 19 six connected.
Reference: [22] <author> A. Witkin, K. Fleischer, and A. Barr. </author> <title> Energy constraints on parameterized models. </title> <journal> Computer Graphics, </journal> <volume> 21(4):M1-M2, </volume> <month> July </month> <year> 1987. </year> <month> 51 </month>
Reference-contexts: By minimizing these cost functions, the balloon is expanded while maintaining its topology. 2.1 Constraint Modelling Background 2.1.1 Energy Constraints On Parameterized Models Witkin, Fleischer, and Barr have developed a method for defining geometric constraints between geometric objects in a computer animation <ref> [22] </ref>. The relationships between objects are coded as energy functions that when minimized, enforce the geometric constraints. The constraints that they have developed govern the geometric relationships between objects. Animations are generated either by using time varying constraints, or by setting up an initial configuration that violates the energy constraints.
References-found: 22

