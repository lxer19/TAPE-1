URL: http://ballade.cs.ucla.edu:8080/~kohck/papers/elmorebst/elmorebsttr.ps.Z
Refering-URL: http://ballade.cs.ucla.edu:8080/~kohck/papers/abstract.html
Root-URL: http://www.cs.ucla.edu
Title: Bounded-Skew Clock and Steiner Routing Under Elmore Delay  
Author: Jason Cong, Andrew B. Kahng, Cheng-Kok Koh and C.-W. Albert Tsao 
Note: This work was partially supported by ARPA/CSTO under Contract J-FBI-93-112; NSF MIP-9357582, MIP-9257982 and MIP-922370; a grant from Intel Corporation and a Tan Kah Kee Foundation Postgraduate Scholarship.  
Address: Los Angeles, CA 90024  
Affiliation: Department of Computer Science University of California,  
Abstract: For engineering tradeoffs in zero-skew clock tree routing, for performance-driven Steiner routing, and even for power distribution topology design [31], a bounded-skew routing tree formulation applies. Recent works [10, 19] have studied this problem under the pathlength (linear) delay model, and generalized the DME clock routing construction [2, 5, 13] via the concept of a merging region. However, in practice bounding the pathlength skew does not allow reliable control of actual delay skew, e.g., with respect to the Elmore delay approximation. Thus, in this work we study the minimum-cost bounded-skew routing tree problem under the Elmore delay model. The following are our contributions. * We prove several key properties of the merging region under Elmore delay that is used by our bounded-skew tree construction: (i) the merging region is bounded by well-behaved segments on which the skew values are piecewise-linearly increasing, then constant, then piecewise-linearly decreasing; (ii) the merging region is a convex polygon with at most 4n sides, where n is the number of leaves in the topology; and (iii) the merging region can be constructed in O(n) time. Note that the merging region that we construct is not a complete generalization of the DME merging segment: when detour wiring is needed or when merging regions of subtree roots overlap, our construction may not return a region containing all the minimum-cost merging points. * We develop a tradeoff approach which minimizes total wirelength for any given skew bound under Elmore delay; we call this the Boundary Merging and Embedding (BME) method. This method encompasses extensions of the Extended-DME (Ex-DME, for fixed topology) and Extended-GreedyDME (ExG-DME, for variable topology) methods in [19] from bounded pathlength skew to bounded Elmore delay skew. * We note that the BME strategy, as well as those in previous works, will utilize merging points that are restricted to the boundaries of merging regions. This restriction prevents the skew bound from being fully exploited in the tree cost minimization. We thus develop a new Interior Merging and Embedding (IME) algorithm which employs a sampling strategy and dynamic programming to consider merging points that are interior to, rather than on the boundary of, the merging regions. Experimental results show that our new bounded-skew routing algorithms allow accurate control of Elmore delay skew, and also demonstrate the practical utility of merging points that are strictly interior to the merging regions. Our methods essentially match the best known methods for the extreme cases of zero and infinite skew, and offer smooth cost-skew tradeoffs in between to enable good engineering solutions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. Bakoglu, J. T. Walker and J. D. Meindl, </author> <title> A Symmetric Clock-Distribution Tree and Optimized High-Speed Interconnections for Reduced Clock Skew in ULSI and WSI Circuits, </title> <booktitle> Proc. IEEE ICCD, Port Chester, </booktitle> <year> 1986, </year> <pages> pp. 118-122. </pages>
Reference: [2] <author> K. D. Boese and A. B. Kahng, </author> <title> Zero-Skew Clock Routing Trees With Minimum Wirelength, </title> <booktitle> Proc. IEEE 5th Int'l ASIC Conf., </booktitle> <address> Rochester, </address> <month> September </month> <year> 1992, </year> <pages> pp. </pages> <address> 1.1.1 - 1.1.5. </address>
Reference-contexts: The enabling concept in [10, 19] is that of a merging region, which generalizes the merging segment concept of <ref> [2, 5, 13] </ref> for zero-skew clock trees. Unfortunately, in practice we find that bounding the pathlength skew does not afford any reliable control of the actual delay skew. <p> Then, under the Elmore model the signal delay t (u; v) is given by t (u; v) = e w 2Path (u;v) r w ( c w 2 + C w ). 2.1 The DME Approach The Deferred-Merge Embedding (DME) algorithm, proposed independently in <ref> [13, 5, 2] </ref>, achieves exact zero skew given any delay model for which sink delays are monotone in the length of each edge of the clock tree (e.g., pathlength delay and El-more delay). <p> Since the methods of [10, 19] as well as those we propose below are generalizations of DME, we now review the original DME method and the Greedy-DME variant of Edahiro [14], following notation of <ref> [2, 6] </ref>. We use d (s; t) to denote the Manhattan distance between points s and t; the distance between two pointsets P and Q is d (P; Q) = minfd (p; q)jp 2 P; q 2 Qg. I. The DME Algorithm. <p> II. The Greedy-DME Algorithm. Note that DME requires an input topology. Several works <ref> [2, 5, 14] </ref> have thus studied topology constructions that lead to low-cost routing solutions when DME is applied; the most successful is the Greedy-DME method of Edahiro [14], which determines the topology of the merging tree in a greedy bottom-up fashion. <p> 1 ) min skew (R i+m 0 2 )) fi (Cap (R i ) Cap (R i+m 0 2 ))g + err i [m 0 1; k 0 ] if m 0 &gt; k 0 and k 0 = 2 min i&lt;i 0 m 0 k 0 +i+1 ferr i <ref> [i 0 i + 1; 2] </ref>+ err i 0 [m 0 i 0 + i; k 0 1]g if m 0 &gt; k 0 and k 0 &gt; 2 Proof: For each 1 i m m 0 + 1: Case (i) If m 0 = k 0 , we can select <p> Suppose i 0 is the index of the region after i in the optimal solution S i [m 0 ; k 0 ], then the error of the new staircase between the skews min skew (R i ) and min skew (R i 0 ) is given by err i <ref> [i 0 i + 1; 2] </ref> which is computed in Case (ii). Now, we have to select the optimal solution S i 0 [m 0 i 0 + i; k 0 1] from the regions fR i 0 ; :::; R i+m 0 1 g (Figure 11). <p> Now, we have to select the optimal solution S i 0 [m 0 i 0 + i; k 0 1] from the regions fR i 0 ; :::; R i+m 0 1 g (Figure 11). Note that R i 0 is retained in both sub-solutions S i <ref> [i 0 i + 1; 2] </ref> and S i 0 [m 0 i 0 + i; k 0 1], and i &lt; i 0 m 0 k 0 + i + 1. <p> Therefore, we iterate i 0 from i + 1 to m 0 k 0 + i + 1 and compute the optimal error err i [m 0 ; k 0 ] to be smallest among all the sums of err i <ref> [i 0 i + 1; 2] </ref> and err i 0 [m 0 i 0 + i; k 0 1]. 2 skew-capacitance product term in case (ii) of Eqn. (2). for the error of the optimal solution S i 0 [m 0 i 0 + i; k 0 1] in case (iii) <p> In the following, we assume m &gt; k &gt; 2. We are interested in obtaining the optimal solution S 1 [m; k]. To determine the index of the region after R 1 in the optimal solution, we compute err 1 [m; k] with err 1 <ref> [i; 2] </ref> and err i [m i + 1; k 1] for 1 &lt; i m k + 2. <p> Assuming that k 1 &gt; 2, we again apply case (iii) of Eqn. (2) to solve for err i [m i + 1; k 1] using err i <ref> [i 0 i + 1; 2] </ref> and err i 0 [m i 0 + 1; k 2] for i &lt; i 0 m k + 2. <p> k 0 k, 1 i m k 0 + 1 err i [k 0 ; k 0 ] 0; next i [k 0 ; k 0 ] i + 1; for each m 0 ; i s.t. 2 m 0 m, 1 i m m 0 + 1 err i <ref> [m 0 ; 2] </ref> (min skew (R i+m 0 1 ) min skew (R i+m 0 2 ))fi (Cap (R i ) Cap (R i+m 0 2 )) + err i [m 0 1; 2]; next i [m 0 ; 2] i + m 0 1; for each k 0 s.t. <p> each m 0 ; i s.t. 2 m 0 m, 1 i m m 0 + 1 err i [m 0 ; 2] (min skew (R i+m 0 1 ) min skew (R i+m 0 2 ))fi (Cap (R i ) Cap (R i+m 0 2 )) + err i <ref> [m 0 1; 2] </ref>; next i [m 0 ; 2] i + m 0 1; for each k 0 s.t. 2 &lt; k 0 k for each i s.t. k k 0 + 1 i m k 0 + 1 i 0 i + 1; i [m i 0 + 1; <p> 2 m 0 m, 1 i m m 0 + 1 err i <ref> [m 0 ; 2] </ref> (min skew (R i+m 0 1 ) min skew (R i+m 0 2 ))fi (Cap (R i ) Cap (R i+m 0 2 )) + err i [m 0 1; 2]; next i [m 0 ; 2] i + m 0 1; for each k 0 s.t. 2 &lt; k 0 k for each i s.t. k k 0 + 1 i m k 0 + 1 i 0 i + 1; i [m i 0 + 1; k 0 1]; next i [m <p> i m k 0 + 1 i 0 i + 1; i [m i 0 + 1; k 0 1]; next i [m i + 1;k 0 ] i 0 ; for each i 0 s.t. i + 1 &lt; i 0 m k 0 + 1 if err i <ref> [i 0 i + 1; 2] </ref> + err i 0 [m i 0 + 1; k 0 1] &lt; err i [m i + 1;k 0 ], next i [m i + 1;k 0 ] i 0 ; i 1; S 1 [m; k] fR i g; for k 0 k
Reference: [3] <author> K. D. Boese, A. B. Kahng, B. A. McCoy and G. Robins, </author> <title> Near-Optimal Critical Sink Routing Tree Constructions, </title> <note> to appear in IEEE Trans. on CAD, </note> <year> 1995. </year>
Reference-contexts: On the other hand, Figure 1 (b) demonstrates the accuracy and fidelity of Elmore delay skew to actual skew; cf. <ref> [3] </ref>. While it is possible to convert, e.g., a zero pathlength skew routing into a zero Elmore delay skew routing, via the use of snaking to balance wirelengths [30], such an approach will usually entail over 30% increase in total wirelength.
Reference: [4] <author> M. Borah, R. M. Owens and M. J. Irwin, </author> <title> An Edge-Based Heuristic for Rectilinear Steiner Trees, </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <month> Dec. </month> <year> 1994, </year> <pages> pp. 1563-1568. </pages>
Reference-contexts: In practice, both the subtree cost and most of the topology remain intact. As a result, this version of ExG-DME also very closely matches the best known heuristics for unbounded-skew routing <ref> [4, 21] </ref>. The work of [19] also gives an Extended-Planar-DME method which again matches the best known heuristics [23] when the routing tree must be embeddable on a single layer. <p> Thus, the performance of ExG-DME under both the pathlength and Elmore delay models will be the same. [19] reported that the Steiner trees constructed by ExG-DME average only 0:21% higher cost than those constructed by one of the best known Steiner tree heuristics <ref> [4] </ref>. 4 The Interior Merging and Embedding Method As outlined in the previous section, the construction of a merging region is based on the boundary segments of its children's merging regions: no interior points of the child merging regions are used to construct the new merging regions.
Reference: [5] <author> T.-H. Chao, Y.-C. Hsu and J.-M. Ho, </author> <title> Zero Skew Clock Net Routing, </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1992, </year> <pages> pp. 518-523. </pages> <note> 21 r1 r1 r3 r3 r5 r5 </note>
Reference-contexts: The enabling concept in [10, 19] is that of a merging region, which generalizes the merging segment concept of <ref> [2, 5, 13] </ref> for zero-skew clock trees. Unfortunately, in practice we find that bounding the pathlength skew does not afford any reliable control of the actual delay skew. <p> Then, under the Elmore model the signal delay t (u; v) is given by t (u; v) = e w 2Path (u;v) r w ( c w 2 + C w ). 2.1 The DME Approach The Deferred-Merge Embedding (DME) algorithm, proposed independently in <ref> [13, 5, 2] </ref>, achieves exact zero skew given any delay model for which sink delays are monotone in the length of each edge of the clock tree (e.g., pathlength delay and El-more delay). <p> II. The Greedy-DME Algorithm. Note that DME requires an input topology. Several works <ref> [2, 5, 14] </ref> have thus studied topology constructions that lead to low-cost routing solutions when DME is applied; the most successful is the Greedy-DME method of Edahiro [14], which determines the topology of the merging tree in a greedy bottom-up fashion. <p> The solution is improved by a post-processing local search that adjusts the resulting topology (cf. CL 5 + I6 in [15]). Greedy-DME achieves 20% reduction in wiring cost compared with the methods of <ref> [5] </ref>. 2.2 Previous DME-Based BST Heuristics In generalizing the DME construction to bounded-skew routing, the enabling concept is that of the merging region.
Reference: [6] <author> T.-H. Chao, Y.-C. Hsu, J. M. Ho, K. D. Boese and A. B. Kahng, </author> <title> Zero Skew Clock Routing With Minimum Wirelength, </title> <journal> IEEE Trans. on Circuits and Systems 39(11), </journal> <month> Nov. </month> <year> 1992, </year> <pages> pp. 799-814. </pages>
Reference-contexts: Thus, the zero-skew clock tree and performance-driven routing literatures have seen rapid growth over the past several years; see [22] for a detailed review. Recent works have accomplished exact zero skew under the Elmore delay model <ref> [30, 6, 15] </ref>, and have given new methods for single-layer (planar) clock routing [32, 23, 24]. <p> Since the methods of [10, 19] as well as those we propose below are generalizations of DME, we now review the original DME method and the Greedy-DME variant of Edahiro [14], following notation of <ref> [2, 6] </ref>. We use d (s; t) to denote the Manhattan distance between points s and t; the distance between two pointsets P and Q is d (P; Q) = minfd (p; q)jp 2 P; q 2 Qg. I. The DME Algorithm.
Reference: [7] <author> J. D. Cho and M. Sarrafzadeh, </author> <title> A Buffer Distribution Algorithm for High-Speed Clock Routing, </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1993, </year> <pages> pp. 537-543. </pages>
Reference: [8] <author> J. Chung and C.-K. Cheng, </author> <title> Skew Sensitivity Minimization of Buffered Clock Tree, </title> <booktitle> Proc. IEEE Int'l Conf. on Computer-Aided Design, </booktitle> <year> 1994, </year> <pages> pp. 280-283. </pages>
Reference-contexts: Over the past two years, a number of authors have applied wiresizing optimizations and/or buffer optimizations to minimize phase delay [18, 28, 16, 26, 27, 33, 34], skew sensitivity to process variation <ref> [28, 8, 25] </ref>, and/or power dissipation [28]. The work of [29] developed a clock router that accomplishes specified pin-to-pin delays. Exact zero skew is typically obtained at the expense of increased wiring area and higher power dissipation.
Reference: [9] <author> J. Cong and C.-K. Koh, </author> <title> Simultaneous Driver and Wire Sizing for Performance and Power Optimization, </title> <journal> IEEE Trans. on VLSI Systems, </journal> <month> Dec. </month> <year> 1994, </year> <pages> pp. 408-425. </pages>
Reference-contexts: We are also studying better sampling strategies for speed-up of the IME method. Our final goal is to combine the techniques of BST topology generation with our recent work on optimal sizing of interconnects and drivers <ref> [9, 11] </ref>, and develop a practical clock routing algorithm which carries out simultaneous topology generation, buffer insertion, and wiresizing to achieve bounded skew with minimum power dissipation under various layout constraints.
Reference: [10] <author> J. Cong and C.-K. Koh, </author> <title> Minimum-Cost Bounded-Skew Clock Routing, </title> <booktitle> Proc. IEEE Int'l Symp. on Circuits and Systems, Apr. 1995, </booktitle> <volume> vol. 1, </volume> <pages> pp. 215-218. </pages> <note> Also available as UCLA Computer Science Department Technical Report #950003, </note> <month> Jan. </month> <year> 1995. </year>
Reference-contexts: Construction of a minimum-cost bounded-skew routing tree (BST) is a key underlying optimization. 1 Given these antecedents, two recent works <ref> [10, 19] </ref> have addressed the BST problem, and proposed clock and Steiner global routing algorithms that construct BSTs under the linear, i.e., pathlength, delay model. The enabling concept in [10, 19] is that of a merging region, which generalizes the merging segment concept of [2, 5, 13] for zero-skew clock trees. <p> Construction of a minimum-cost bounded-skew routing tree (BST) is a key underlying optimization. 1 Given these antecedents, two recent works <ref> [10, 19] </ref> have addressed the BST problem, and proposed clock and Steiner global routing algorithms that construct BSTs under the linear, i.e., pathlength, delay model. The enabling concept in [10, 19] is that of a merging region, which generalizes the merging segment concept of [2, 5, 13] for zero-skew clock trees. Unfortunately, in practice we find that bounding the pathlength skew does not afford any reliable control of the actual delay skew. <p> Figure 1 (a) shows HSPICE delay skew against pathlength delay skew for routing trees generated by the ExG-DME algorithm [19] on the r1-5 benchmark clock sink placements. Not only is the correlation poor, In general, not only is the correlation poor, but the pathlength-based BST solutions of <ref> [10, 19] </ref> are simply unable to meet tight skew bounds (of 100ps or less). On the other hand, Figure 1 (b) demonstrates the accuracy and fidelity of Elmore delay skew to actual skew; cf. [3]. <p> We call this the Boundary Merging and Embedding (BME) method, since it merges boundary points of merging regions in the same manner as in <ref> [10, 19] </ref>. <p> Two recent works <ref> [10, 19] </ref> were the first to address the following problem: Minimum-Cost Bounded Skew Routing Tree (BST) Problem: Given a set S = fs 1 ; :::; s n g R 2 of sink locations and a skew bound B, find a routing topology G and a minimum-cost clock tree T G <p> We will consider both this formulation and the BST variant where a fixed topology G has been specified. We do not include clock source location s 0 in our formulation since our methods can transparently accommodate any prescribed s 0 . In <ref> [10, 19] </ref>, the BST problem was solved under the pathlength delay model, i.e., t (s 0 ; s i ) = the sum of edgelengths in the unique s 0 -s i path. <p> For pathlength delay, DME returns the optimal solution, i.e., a tree with minimum cost and minimum source-sink pathlength for any input sink set S and topology G. Since the methods of <ref> [10, 19] </ref> as well as those we propose below are generalizations of DME, we now review the original DME method and the Greedy-DME variant of Edahiro [14], following notation of [2, 6]. <p> In the remainder of this section, we briefly outline some concepts behind the Ex-DME and ExG-DME constructions <ref> [10, 19] </ref>. We defer most of the ideas to Section 3, which in some sense re-develops and generalizes a number of these ideas within the Elmore delay context. The works of [10, 19] showed that under the linear delay model, the merging region for any node is a convex polygon bounded <p> In the remainder of this section, we briefly outline some concepts behind the Ex-DME and ExG-DME constructions <ref> [10, 19] </ref>. We defer most of the ideas to Section 3, which in some sense re-develops and generalizes a number of these ideas within the Elmore delay context. The works of [10, 19] showed that under the linear delay model, the merging region for any node is a convex polygon bounded by Manhattan arcs (i.e., segments with slope +1 or 1) and rectilinear segments (i.e., horizontal or vertical segments). <p> For the case where a fixed topology G has been prescribed, the Extended-DME (Ex-DME) method essentially parallels the original DME construction and is optimal for the limiting cases of zero skew and infinite skew (i.e., the Steiner minimal tree problem with fixed topology G). When the topology is variable, <ref> [10, 19] </ref> propose an Extended-Greedy-DME (ExG-DME) method which again uses the merging region construction, and generates a topology via iterated clustering operations analogous to those of Greedy-DME. The ExG-DME method not only provides a smooth skew-cost tradeoff but also closely matches the best known heuristics for zero-skew routing [15]. <p> The difference from <ref> [10, 19] </ref> lies in the computation of merging regions, i.e., we may execute the previous Ex-DME or ExG-DME strategies to achieve an Elmore delay skew bound simply by substituting the new merging region construction. <p> This is, of course, also the case for the pathlength-based BST algorithms in <ref> [10, 19] </ref>. However, such an approach produces a sub-optimal merging cost when detouring occurs during the merging.
Reference: [11] <author> J. Cong and K.-S. Leung, </author> <title> Optimal Wiresizing Under Elmore Delay Model, </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <month> Mar. </month> <year> 1995, </year> <pages> pp. 321-336. </pages>
Reference-contexts: We are also studying better sampling strategies for speed-up of the IME method. Our final goal is to combine the techniques of BST topology generation with our recent work on optimal sizing of interconnects and drivers <ref> [9, 11] </ref>, and develop a practical clock routing algorithm which carries out simultaneous topology generation, buffer insertion, and wiresizing to achieve bounded skew with minimum power dissipation under various layout constraints.
Reference: [12] <author> J. Cong, A. B. Kahng and G. Robins, </author> <title> Matching-Based Methods for High-Performance Clock Routing, </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> 12(8), </volume> <month> Aug. </month> <year> 1993, </year> <pages> pp. 1157-1169. 22 </pages>
Reference: [13] <author> M. Edahiro, </author> <title> Minimum Skew and Minimum Path Length Routing in VLSI Layout Design, </title> <journal> NEC Research and Development, </journal> <volume> 32(4), </volume> <month> Oct. </month> <year> 1991, </year> <pages> pp. 569-575. </pages>
Reference-contexts: The enabling concept in [10, 19] is that of a merging region, which generalizes the merging segment concept of <ref> [2, 5, 13] </ref> for zero-skew clock trees. Unfortunately, in practice we find that bounding the pathlength skew does not afford any reliable control of the actual delay skew. <p> Then, under the Elmore model the signal delay t (u; v) is given by t (u; v) = e w 2Path (u;v) r w ( c w 2 + C w ). 2.1 The DME Approach The Deferred-Merge Embedding (DME) algorithm, proposed independently in <ref> [13, 5, 2] </ref>, achieves exact zero skew given any delay model for which sink delays are monotone in the length of each edge of the clock tree (e.g., pathlength delay and El-more delay).
Reference: [14] <author> M. Edahiro, </author> <title> Minimum Path-Length Equi-Distant Routing, </title> <booktitle> Proc. IEEE Asia-Pacific Conf. on Circuits and Systems, </booktitle> <month> Dec. </month> <year> 1992, </year> <pages> pp. 41-46. </pages>
Reference-contexts: Since the methods of [10, 19] as well as those we propose below are generalizations of DME, we now review the original DME method and the Greedy-DME variant of Edahiro <ref> [14] </ref>, following notation of [2, 6]. We use d (s; t) to denote the Manhattan distance between points s and t; the distance between two pointsets P and Q is d (P; Q) = minfd (p; q)jp 2 P; q 2 Qg. I. The DME Algorithm. <p> II. The Greedy-DME Algorithm. Note that DME requires an input topology. Several works <ref> [2, 5, 14] </ref> have thus studied topology constructions that lead to low-cost routing solutions when DME is applied; the most successful is the Greedy-DME method of Edahiro [14], which determines the topology of the merging tree in a greedy bottom-up fashion. <p> II. The Greedy-DME Algorithm. Note that DME requires an input topology. Several works [2, 5, 14] have thus studied topology constructions that lead to low-cost routing solutions when DME is applied; the most successful is the Greedy-DME method of Edahiro <ref> [14] </ref>, which determines the topology of the merging tree in a greedy bottom-up fashion. Let K denote a set of merging segments which initially consists of all the sink locations, i.e., K = fms (s i )g.
Reference: [15] <author> M. Edahiro, </author> <title> A Clustering-Based Optimization Algorithm in Zero-Skew Routing, </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <month> Jun. </month> <year> 1993, </year> <pages> pp. 612-616. </pages>
Reference-contexts: Thus, the zero-skew clock tree and performance-driven routing literatures have seen rapid growth over the past several years; see [22] for a detailed review. Recent works have accomplished exact zero skew under the Elmore delay model <ref> [30, 6, 15] </ref>, and have given new methods for single-layer (planar) clock routing [32, 23, 24]. <p> After n 1 operations, K consists of the merging segment for the root of the topology. In <ref> [15] </ref>, O (n logn) time complexity was achieved by finding several nearest-neighbor pairs at once, i.e., the algorithm first constructs a nearest-neighbor graph which maintains the nearest neighbor of each merging segment in K. <p> Via zero-skew merges, jKj=k nearest-neighbor pairs are taken from the graph in non-decreasing order of distance, where k is a constant typically between 2 and 4. The solution is improved by a post-processing local search that adjusts the resulting topology (cf. CL 5 + I6 in <ref> [15] </ref>). Greedy-DME achieves 20% reduction in wiring cost compared with the methods of [5]. 2.2 Previous DME-Based BST Heuristics In generalizing the DME construction to bounded-skew routing, the enabling concept is that of the merging region. <p> The ExG-DME method not only provides a smooth skew-cost tradeoff but also closely matches the best known heuristics for zero-skew routing <ref> [15] </ref>. Notice that in maintaining zero skew, the original DME approach always merges two subtrees at their roots. <p> The benchmark test cases r1-r5 [30] were used to evaluate our algorithms for skew bounds in the range of 0-10ns. Table 1 compares the zero-skew clock routing costs of the best known algorithm (CL+I6 from <ref> [15] </ref>) with the various bounded-skew routing costs obtained by our algorithms. Also included in the Table is the CPU time for both BME and IME. <p> It appears that IME produces better results for larger circuits when the skew bound is large, but at the expense of longer running time. In general, we see a decrease in total wirelength as the skew increases. However, our results do not compare favorably with <ref> [15] </ref> when it comes to zero skew. We believe that this is due to the fact that the CL+I6 algorithm performs local optimization using exhaustive search and calculates an optimum sequence, which we did not implement in our algorithm. The other reason is that [15] used the best result from eight <p> results do not compare favorably with <ref> [15] </ref> when it comes to zero skew. We believe that this is due to the fact that the CL+I6 algorithm performs local optimization using exhaustive search and calculates an optimum sequence, which we did not implement in our algorithm. The other reason is that [15] used the best result from eight different values of the k parameter ranging from 2 to 4 (recall the discussion of the Greedy-DME algorithm in Section 2.1), while we only set one value of the k parameter of [15] to be 1. <p> The other reason is that <ref> [15] </ref> used the best result from eight different values of the k parameter ranging from 2 to 4 (recall the discussion of the Greedy-DME algorithm in Section 2.1), while we only set one value of the k parameter of [15] to be 1. We alo compare the performance of BME and IME using the same topologies, which are generated by BME and IME respectively. The results are shown in Tables 2 and 3. <p> The results are shown in Tables 2 and 3. For the zero-skew bound, IME is equivalent to DME while BME is equivalent to 19 Skew Bound r1 r2 r3 r4 r5 (ps) Wirelengths (CPU time: hr:min:sec) 0 (CL+I6 <ref> [15] </ref>) 1253347 2483754 3193801 6499660 9723726 (IME) 1445555 (00:00:10) 2907593 (00:00:47) 3605778 (00:01:29) 7255455 (00:04:39) *10706940 (00:11:05) (IME) 1274819 (00:03:30) 2526961 (00:09:33) *3060284 (00:14:54) 6751435 (00:40:20) 9896655 (01:08:39) (IME) 1112512 (00:06:06) 2353202 (00:17:33) *2727299 (00:28:44) *5350241 (01:18:07) *8065110 (02:45:30) (IME) 930426 (00:13:18) *1978378 (00:37:30) *2366874 (01:01:34) 4953715 (03:09:16) *7003996 (06:00:21) (IME) <p> The total wire-lengths of BME for different skew bounds are given in Table 1. We mark the cases where IME outperforms BME by *. when compared to the best reported zero-skew solutions (by the CL+I6 algorithm in <ref> [15] </ref>). 6 Conclusion and Future Work In conclusion, we have presented new bounded-skew routing tree approaches under the Elmore delay model. We prove several key properties of the merging regions under the Elmore delay model.
Reference: [16] <author> M. Edahiro, </author> <title> Delay Minimization for Zero-Skew Routing, </title> <booktitle> Proc. IEEE Int'l Conf. on Computer-Aided Design, </booktitle> <year> 1993, </year> <pages> pp. 563-566. </pages>
Reference-contexts: Recent works have accomplished exact zero skew under the Elmore delay model [30, 6, 15], and have given new methods for single-layer (planar) clock routing [32, 23, 24]. Over the past two years, a number of authors have applied wiresizing optimizations and/or buffer optimizations to minimize phase delay <ref> [18, 28, 16, 26, 27, 33, 34] </ref>, skew sensitivity to process variation [28, 8, 25], and/or power dissipation [28]. The work of [29] developed a clock router that accomplishes specified pin-to-pin delays. Exact zero skew is typically obtained at the expense of increased wiring area and higher power dissipation.
Reference: [17] <author> E. G. Friedman, </author> <title> Clock Distribution Design in VLSI Circuits An Overview, </title> <booktitle> Proc. IEEE Int'l Symp. on Circuits and Systems, </booktitle> <year> 1993, </year> <pages> pp. 1475-1478. </pages>
Reference: [18] <author> L. P. P. P. van Ginneken, </author> <title> Buffer Placement in Distributed RC-Tree Networks for Minimal Elmore Delay,, </title> <booktitle> Proc. Int'l Symposium on Circuits and Systems, </booktitle> <year> 1990, </year> <pages> pp 865-868. </pages>
Reference-contexts: Recent works have accomplished exact zero skew under the Elmore delay model [30, 6, 15], and have given new methods for single-layer (planar) clock routing [32, 23, 24]. Over the past two years, a number of authors have applied wiresizing optimizations and/or buffer optimizations to minimize phase delay <ref> [18, 28, 16, 26, 27, 33, 34] </ref>, skew sensitivity to process variation [28, 8, 25], and/or power dissipation [28]. The work of [29] developed a clock router that accomplishes specified pin-to-pin delays. Exact zero skew is typically obtained at the expense of increased wiring area and higher power dissipation.
Reference: [19] <author> J. H. Huang, A. B. Kahng and C.-W. A. Tsao, </author> <title> On the Bounded-SkewRouting Tree Problem, </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <address> San Francisco, </address> <month> Jun. </month> <year> 1995. </year> <pages> pp. 508-513. </pages> <note> Also available as UCLA Computer Science Department Technical Report #940026x, </note> <month> Nov., </month> <year> 1994. </year>
Reference-contexts: Construction of a minimum-cost bounded-skew routing tree (BST) is a key underlying optimization. 1 Given these antecedents, two recent works <ref> [10, 19] </ref> have addressed the BST problem, and proposed clock and Steiner global routing algorithms that construct BSTs under the linear, i.e., pathlength, delay model. The enabling concept in [10, 19] is that of a merging region, which generalizes the merging segment concept of [2, 5, 13] for zero-skew clock trees. <p> Construction of a minimum-cost bounded-skew routing tree (BST) is a key underlying optimization. 1 Given these antecedents, two recent works <ref> [10, 19] </ref> have addressed the BST problem, and proposed clock and Steiner global routing algorithms that construct BSTs under the linear, i.e., pathlength, delay model. The enabling concept in [10, 19] is that of a merging region, which generalizes the merging segment concept of [2, 5, 13] for zero-skew clock trees. Unfortunately, in practice we find that bounding the pathlength skew does not afford any reliable control of the actual delay skew. <p> Unfortunately, in practice we find that bounding the pathlength skew does not afford any reliable control of the actual delay skew. Figure 1 (a) shows HSPICE delay skew against pathlength delay skew for routing trees generated by the ExG-DME algorithm <ref> [19] </ref> on the r1-5 benchmark clock sink placements. Not only is the correlation poor, In general, not only is the correlation poor, but the pathlength-based BST solutions of [10, 19] are simply unable to meet tight skew bounds (of 100ps or less). <p> Figure 1 (a) shows HSPICE delay skew against pathlength delay skew for routing trees generated by the ExG-DME algorithm [19] on the r1-5 benchmark clock sink placements. Not only is the correlation poor, In general, not only is the correlation poor, but the pathlength-based BST solutions of <ref> [10, 19] </ref> are simply unable to meet tight skew bounds (of 100ps or less). On the other hand, Figure 1 (b) demonstrates the accuracy and fidelity of Elmore delay skew to actual skew; cf. [3]. <p> We call this the Boundary Merging and Embedding (BME) method, since it merges boundary points of merging regions in the same manner as in <ref> [10, 19] </ref>. <p> Using our new construction of the merging region under Elmore delay, the BME method can extend Extended-DME (Ex-DME, for fixed topology) and Extended-GreedyDME (ExG-DME, for variable topology) <ref> [19] </ref> from bounded pathlength skew to bounded Elmore delay skew. * Third, we note that the BME strategy, as well as those in previous works, will utilize merging points that are restricted 3 to the boundaries of merging regions. <p> Two recent works <ref> [10, 19] </ref> were the first to address the following problem: Minimum-Cost Bounded Skew Routing Tree (BST) Problem: Given a set S = fs 1 ; :::; s n g R 2 of sink locations and a skew bound B, find a routing topology G and a minimum-cost clock tree T G <p> We will consider both this formulation and the BST variant where a fixed topology G has been specified. We do not include clock source location s 0 in our formulation since our methods can transparently accommodate any prescribed s 0 . In <ref> [10, 19] </ref>, the BST problem was solved under the pathlength delay model, i.e., t (s 0 ; s i ) = the sum of edgelengths in the unique s 0 -s i path. <p> For pathlength delay, DME returns the optimal solution, i.e., a tree with minimum cost and minimum source-sink pathlength for any input sink set S and topology G. Since the methods of <ref> [10, 19] </ref> as well as those we propose below are generalizations of DME, we now review the original DME method and the Greedy-DME variant of Edahiro [14], following notation of [2, 6]. <p> In the remainder of this section, we briefly outline some concepts behind the Ex-DME and ExG-DME constructions <ref> [10, 19] </ref>. We defer most of the ideas to Section 3, which in some sense re-develops and generalizes a number of these ideas within the Elmore delay context. The works of [10, 19] showed that under the linear delay model, the merging region for any node is a convex polygon bounded <p> In the remainder of this section, we briefly outline some concepts behind the Ex-DME and ExG-DME constructions <ref> [10, 19] </ref>. We defer most of the ideas to Section 3, which in some sense re-develops and generalizes a number of these ideas within the Elmore delay context. The works of [10, 19] showed that under the linear delay model, the merging region for any node is a convex polygon bounded by Manhattan arcs (i.e., segments with slope +1 or 1) and rectilinear segments (i.e., horizontal or vertical segments). <p> For the case where a fixed topology G has been prescribed, the Extended-DME (Ex-DME) method essentially parallels the original DME construction and is optimal for the limiting cases of zero skew and infinite skew (i.e., the Steiner minimal tree problem with fixed topology G). When the topology is variable, <ref> [10, 19] </ref> propose an Extended-Greedy-DME (ExG-DME) method which again uses the merging region construction, and generates a topology via iterated clustering operations analogous to those of Greedy-DME. The ExG-DME method not only provides a smooth skew-cost tradeoff but also closely matches the best known heuristics for zero-skew routing [15]. <p> However, when the skew bound is non-zero, the shortest connection between two subtrees is not necessarily at their roots and there is no reason that subtrees cannot be merged at non-root nodes as long as the resulting skew is B. The ExG-DME version of <ref> [19] </ref> exploits the flexibility stemming from allowed non-zero skew B by dynamically re-rooting subtrees as they are merged so that the roots of subtrees (after re-rooting) become closer without much change in the subtree costs. merging cost. (b) Repositioning the root in changing the topology. 6 In Figure 2a, eight sinks <p> Ideally, for large B the subtree topologies should be modified so that the subtree roots are closer (and merging cost is reduced), as in the bottom example. The ExG-DME method of <ref> [19] </ref> adjusts a subtree topology by changing the position of the root as illustrated in Figure 2b; the root can be repositioned as the parent of nodes u and v, where u and v are the endpoints of any edge in the current tree. <p> In practice, both the subtree cost and most of the topology remain intact. As a result, this version of ExG-DME also very closely matches the best known heuristics for unbounded-skew routing [4, 21]. The work of <ref> [19] </ref> also gives an Extended-Planar-DME method which again matches the best known heuristics [23] when the routing tree must be embeddable on a single layer. <p> The difference from <ref> [10, 19] </ref> lies in the computation of merging regions, i.e., we may execute the previous Ex-DME or ExG-DME strategies to achieve an Elmore delay skew bound simply by substituting the new merging region construction. <p> The construction rules for merging regions are similar to those presented in <ref> [19] </ref>, except that the joining segments can be parallel segments with any slopes, i.e., besides Manhattan arcs and rectilinear line segments (see Figure 6). M0 Compute joining segments L a and L b on the boundaries of mr (a) and mr (b). <p> segments l such that l is either the boundary segments of SDR (L a ; L b ) or the horizontal line segments incident to the skew turning points (shown as hollow circles) on L a or L b . otherwise. 3 Similar to the proof of Theorem 1 in <ref> [19] </ref>, we can show that each merging region mr (v) for a node v in topology G is a well-behaved region. <p> When the skew bound B = , then the merging regions constructed under the Elmore delay model will be the same rectangles that are constructed under the pathlength delay model. Thus, the performance of ExG-DME under both the pathlength and Elmore delay models will be the same. <ref> [19] </ref> reported that the Steiner trees constructed by ExG-DME average only 0:21% higher cost than those constructed by one of the best known Steiner tree heuristics [4]. 4 The Interior Merging and Embedding Method As outlined in the previous section, the construction of a merging region is based on the boundary <p> This is, of course, also the case for the pathlength-based BST algorithms in <ref> [10, 19] </ref>. However, such an approach produces a sub-optimal merging cost when detouring occurs during the merging.
Reference: [20] <author> M. A. B. Jackson, A. Srinivasan and E. S. Kuh, </author> <title> Clock Routing for High Performance ICs, </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1990, </year> <pages> pp. 573-579. </pages>
Reference: [21] <author> A. B. Kahng and G. Robins, </author> <title> A New Class of Iterative Steiner Tree Heuristics with Good Performance, </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 11(7), </volume> <month> July </month> <year> 1992, </year> <pages> pp. 893-902. </pages>
Reference-contexts: In practice, both the subtree cost and most of the topology remain intact. As a result, this version of ExG-DME also very closely matches the best known heuristics for unbounded-skew routing <ref> [4, 21] </ref>. The work of [19] also gives an Extended-Planar-DME method which again matches the best known heuristics [23] when the routing tree must be embeddable on a single layer.
Reference: [22] <author> A. B. Kahng and G. Robins, </author> <title> On Optimal Interconnections for VLSI, </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1994. </year>
Reference-contexts: At the same time, routing solutions should have low wiring area to reduce die size and capacitive effects on both performance and power dissipation. Thus, the zero-skew clock tree and performance-driven routing literatures have seen rapid growth over the past several years; see <ref> [22] </ref> for a detailed review. Recent works have accomplished exact zero skew under the Elmore delay model [30, 6, 15], and have given new methods for single-layer (planar) clock routing [32, 23, 24]. <p> Exact zero skew is typically obtained at the expense of increased wiring area and higher power dissipation. In practice, circuits still operate correctly within a given skew tolerance, and indeed exact zero skew is never an actual design requirement <ref> [22] </ref>. The works of Zhu and Dai [33, 34] and Pullela et al. [27] are notable in that they use initial non-zero skew routing solutions which are then wiresized to satisfy a given skew bound.
Reference: [23] <author> A. B. Kahng and C.-W. A. Tsao, Planar-DME: </author> <title> Improved Planar Zero-Skew Clock Routing with Minimum Pathlength Delay, </title> <booktitle> Proc. European Design Automation Conf., </booktitle> <year> 1994, </year> <pages> pp. 440-445. </pages>
Reference-contexts: Thus, the zero-skew clock tree and performance-driven routing literatures have seen rapid growth over the past several years; see [22] for a detailed review. Recent works have accomplished exact zero skew under the Elmore delay model [30, 6, 15], and have given new methods for single-layer (planar) clock routing <ref> [32, 23, 24] </ref>. Over the past two years, a number of authors have applied wiresizing optimizations and/or buffer optimizations to minimize phase delay [18, 28, 16, 26, 27, 33, 34], skew sensitivity to process variation [28, 8, 25], and/or power dissipation [28]. <p> In practice, both the subtree cost and most of the topology remain intact. As a result, this version of ExG-DME also very closely matches the best known heuristics for unbounded-skew routing [4, 21]. The work of [19] also gives an Extended-Planar-DME method which again matches the best known heuristics <ref> [23] </ref> when the routing tree must be embeddable on a single layer.
Reference: [24] <author> A. B. Kahng and C.-W. A. Tsao, </author> <title> Low-Cost Single-Layer Clock Trees with Exact Zero Elmore Delay Skew, </title> <booktitle> Proc. IEEE Int'l Conf. on Computer-Aided Design, </booktitle> <year> 1994, </year> <pages> pp. 213-218. </pages>
Reference-contexts: Thus, the zero-skew clock tree and performance-driven routing literatures have seen rapid growth over the past several years; see [22] for a detailed review. Recent works have accomplished exact zero skew under the Elmore delay model [30, 6, 15], and have given new methods for single-layer (planar) clock routing <ref> [32, 23, 24] </ref>. Over the past two years, a number of authors have applied wiresizing optimizations and/or buffer optimizations to minimize phase delay [18, 28, 16, 26, 27, 33, 34], skew sensitivity to process variation [28, 8, 25], and/or power dissipation [28].
Reference: [25] <author> S. Lin and C. K. Wong, </author> <title> Process-Variation-Tolerant Clock Skew Minimization, </title> <booktitle> Proc. IEEE Int'l Conf. on Computer-Aided Design, </booktitle> <year> 1994, </year> <pages> pp. 284-288. </pages>
Reference-contexts: Over the past two years, a number of authors have applied wiresizing optimizations and/or buffer optimizations to minimize phase delay [18, 28, 16, 26, 27, 33, 34], skew sensitivity to process variation <ref> [28, 8, 25] </ref>, and/or power dissipation [28]. The work of [29] developed a clock router that accomplishes specified pin-to-pin delays. Exact zero skew is typically obtained at the expense of increased wiring area and higher power dissipation.
Reference: [26] <author> N. Menezes, S. Pullela and L. T. Pillage, </author> <title> Skew Reduction in Clock Trees Using Wire Width Optimization, </title> <booktitle> Proc. IEEE Custom Integrated Circuits Conf., </booktitle> <year> 1993. </year>
Reference-contexts: Recent works have accomplished exact zero skew under the Elmore delay model [30, 6, 15], and have given new methods for single-layer (planar) clock routing [32, 23, 24]. Over the past two years, a number of authors have applied wiresizing optimizations and/or buffer optimizations to minimize phase delay <ref> [18, 28, 16, 26, 27, 33, 34] </ref>, skew sensitivity to process variation [28, 8, 25], and/or power dissipation [28]. The work of [29] developed a clock router that accomplishes specified pin-to-pin delays. Exact zero skew is typically obtained at the expense of increased wiring area and higher power dissipation.
Reference: [27] <author> S. Pullela, N. Menezes and L. T. Pillage, </author> <title> Reliable Non-Zero Skew Clock Tree Using Wire Width Optimization, </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1993, </year> <pages> pp. 165-170. </pages>
Reference-contexts: Recent works have accomplished exact zero skew under the Elmore delay model [30, 6, 15], and have given new methods for single-layer (planar) clock routing [32, 23, 24]. Over the past two years, a number of authors have applied wiresizing optimizations and/or buffer optimizations to minimize phase delay <ref> [18, 28, 16, 26, 27, 33, 34] </ref>, skew sensitivity to process variation [28, 8, 25], and/or power dissipation [28]. The work of [29] developed a clock router that accomplishes specified pin-to-pin delays. Exact zero skew is typically obtained at the expense of increased wiring area and higher power dissipation. <p> In practice, circuits still operate correctly within a given skew tolerance, and indeed exact zero skew is never an actual design requirement [22]. The works of Zhu and Dai [33, 34] and Pullela et al. <ref> [27] </ref> are notable in that they use initial non-zero skew routing solutions which are then wiresized to satisfy a given skew bound.
Reference: [28] <author> S. Pullela, N. Menezes, J. Omar and L. Pillage, </author> <title> Skew and Delay Optimization for Reliable Buffered Clock Trees, </title> <booktitle> Proc. IEEE Int'l Conf. on Computer-Aided Design, </booktitle> <year> 1993, </year> <pages> pp. 556-562. </pages>
Reference-contexts: Recent works have accomplished exact zero skew under the Elmore delay model [30, 6, 15], and have given new methods for single-layer (planar) clock routing [32, 23, 24]. Over the past two years, a number of authors have applied wiresizing optimizations and/or buffer optimizations to minimize phase delay <ref> [18, 28, 16, 26, 27, 33, 34] </ref>, skew sensitivity to process variation [28, 8, 25], and/or power dissipation [28]. The work of [29] developed a clock router that accomplishes specified pin-to-pin delays. Exact zero skew is typically obtained at the expense of increased wiring area and higher power dissipation. <p> Over the past two years, a number of authors have applied wiresizing optimizations and/or buffer optimizations to minimize phase delay [18, 28, 16, 26, 27, 33, 34], skew sensitivity to process variation <ref> [28, 8, 25] </ref>, and/or power dissipation [28]. The work of [29] developed a clock router that accomplishes specified pin-to-pin delays. Exact zero skew is typically obtained at the expense of increased wiring area and higher power dissipation. <p> Over the past two years, a number of authors have applied wiresizing optimizations and/or buffer optimizations to minimize phase delay [18, 28, 16, 26, 27, 33, 34], skew sensitivity to process variation [28, 8, 25], and/or power dissipation <ref> [28] </ref>. The work of [29] developed a clock router that accomplishes specified pin-to-pin delays. Exact zero skew is typically obtained at the expense of increased wiring area and higher power dissipation.
Reference: [29] <author> M. Seki, K. Inoue, K. Kato, K. Tsurusaki, S. Fukasawa, H. Sasaki and M. Aizawa, </author> <title> A Specified Delay Accomplishing Clock Router Using Multiple Layers, </title> <booktitle> Proc. IEEE Int'l Conf. on Computer-Aided Design, </booktitle> <year> 1994, </year> <pages> pp. 289-292. </pages>
Reference-contexts: Over the past two years, a number of authors have applied wiresizing optimizations and/or buffer optimizations to minimize phase delay [18, 28, 16, 26, 27, 33, 34], skew sensitivity to process variation [28, 8, 25], and/or power dissipation [28]. The work of <ref> [29] </ref> developed a clock router that accomplishes specified pin-to-pin delays. Exact zero skew is typically obtained at the expense of increased wiring area and higher power dissipation. In practice, circuits still operate correctly within a given skew tolerance, and indeed exact zero skew is never an actual design requirement [22].
Reference: [30] <author> R. S. Tsay, </author> <title> Exact Zero Skew, </title> <booktitle> Proc. IEEE Int'l Conf. on Computer-Aided Design, </booktitle> <year> 1991, </year> <pages> pp. 336-339. </pages>
Reference-contexts: Thus, the zero-skew clock tree and performance-driven routing literatures have seen rapid growth over the past several years; see [22] for a detailed review. Recent works have accomplished exact zero skew under the Elmore delay model <ref> [30, 6, 15] </ref>, and have given new methods for single-layer (planar) clock routing [32, 23, 24]. <p> On the other hand, Figure 1 (b) demonstrates the accuracy and fidelity of Elmore delay skew to actual skew; cf. [3]. While it is possible to convert, e.g., a zero pathlength skew routing into a zero Elmore delay skew routing, via the use of snaking to balance wirelengths <ref> [30] </ref>, such an approach will usually entail over 30% increase in total wirelength. With this in mind, we pursue new approaches to the minimum-cost BST problem under Elmore delay. <p> The benchmark test cases r1-r5 <ref> [30] </ref> were used to evaluate our algorithms for skew bounds in the range of 0-10ns. Table 1 compares the zero-skew clock routing costs of the best known algorithm (CL+I6 from [15]) with the various bounded-skew routing costs obtained by our algorithms. <p> 930426 (00:13:18) *1978378 (00:37:30) *2366874 (01:01:34) 4953715 (03:09:16) *7003996 (06:00:21) (IME) 861561 (00:25:24) 1995665 (01:13:03) *2097784 (02:06:22) *4740962 (06:41:31) *6280007 (13:42:13) (IME) 790285 (00:32:30) *1574153 (02:07:21) *1998007 (03:12:15) 4326234 (10:30:53) *5912472 (24:39:45) Table 1: The cost-skew tradeoff and running time of the BME and IME algorithms for benchmark circuits r1-5 <ref> [30] </ref>. We mark the cases where IME outperforms BME by *. DME only if no detour wiring is required. 5 Thus, IME is expected to have better performance than BME.
Reference: [31] <author> A. Vittal and M. Marek-Sadowska, </author> <title> Power Distribution Topology Design, </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <address> San Francisco, </address> <month> June </month> <year> 1995, </year> <pages> pp. 503-507. </pages>
Reference-contexts: One minor caveat is that the merging region that we construct is not a complete 1 Vittal and Marek-Sadowska <ref> [31] </ref> showed that the minimum-cost BST problem also arises in power distribution topology design. 2 r1 r1 r3 r3 r5 r5 IME algorithm for the r1-5 benchmark clock sink placements. generalization of the DME merging segment: when detour wiring is needed or when merging regions of subtree roots overlap, our construction
Reference: [32] <author> Q. Zhu and W. W.-M. Dai, </author> <title> Perfect-balance planar clock routing with minimal path-length, </title> <booktitle> IEEE Int'l Conf. on Computer-Aided Design, </booktitle> <year> 1992, </year> <pages> pp. 473-476. </pages>
Reference-contexts: Thus, the zero-skew clock tree and performance-driven routing literatures have seen rapid growth over the past several years; see [22] for a detailed review. Recent works have accomplished exact zero skew under the Elmore delay model [30, 6, 15], and have given new methods for single-layer (planar) clock routing <ref> [32, 23, 24] </ref>. Over the past two years, a number of authors have applied wiresizing optimizations and/or buffer optimizations to minimize phase delay [18, 28, 16, 26, 27, 33, 34], skew sensitivity to process variation [28, 8, 25], and/or power dissipation [28].
Reference: [33] <author> Q. Zhu and W.M. Dai, </author> <title> Delay Bounded Minimum Steiner Tree Algorithms for Performance-Driven Routing, </title> <type> UCSC Technical Report UCSC-CRL-93-46, </type> <month> Oct. 10, </month> <year> 1993. </year>
Reference-contexts: Recent works have accomplished exact zero skew under the Elmore delay model [30, 6, 15], and have given new methods for single-layer (planar) clock routing [32, 23, 24]. Over the past two years, a number of authors have applied wiresizing optimizations and/or buffer optimizations to minimize phase delay <ref> [18, 28, 16, 26, 27, 33, 34] </ref>, skew sensitivity to process variation [28, 8, 25], and/or power dissipation [28]. The work of [29] developed a clock router that accomplishes specified pin-to-pin delays. Exact zero skew is typically obtained at the expense of increased wiring area and higher power dissipation. <p> Exact zero skew is typically obtained at the expense of increased wiring area and higher power dissipation. In practice, circuits still operate correctly within a given skew tolerance, and indeed exact zero skew is never an actual design requirement [22]. The works of Zhu and Dai <ref> [33, 34] </ref> and Pullela et al. [27] are notable in that they use initial non-zero skew routing solutions which are then wiresized to satisfy a given skew bound.
Reference: [34] <author> Q. Zhu and W.M. </author> <title> Dai, </title> <type> manuscript, </type> <year> 1994. </year> <month> 23 </month>
Reference-contexts: Recent works have accomplished exact zero skew under the Elmore delay model [30, 6, 15], and have given new methods for single-layer (planar) clock routing [32, 23, 24]. Over the past two years, a number of authors have applied wiresizing optimizations and/or buffer optimizations to minimize phase delay <ref> [18, 28, 16, 26, 27, 33, 34] </ref>, skew sensitivity to process variation [28, 8, 25], and/or power dissipation [28]. The work of [29] developed a clock router that accomplishes specified pin-to-pin delays. Exact zero skew is typically obtained at the expense of increased wiring area and higher power dissipation. <p> Exact zero skew is typically obtained at the expense of increased wiring area and higher power dissipation. In practice, circuits still operate correctly within a given skew tolerance, and indeed exact zero skew is never an actual design requirement [22]. The works of Zhu and Dai <ref> [33, 34] </ref> and Pullela et al. [27] are notable in that they use initial non-zero skew routing solutions which are then wiresized to satisfy a given skew bound.
References-found: 34

