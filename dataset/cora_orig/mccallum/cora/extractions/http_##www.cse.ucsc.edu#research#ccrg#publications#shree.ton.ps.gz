URL: http://www.cse.ucsc.edu/research/ccrg/publications/shree.ton.ps.gz
Refering-URL: http://www.cse.ucsc.edu/research/ccrg/publications.html
Root-URL: http://www.cse.ucsc.edu
Title: A Path-Finding Algorithm for Loop-Free Routing  
Author: J.J. Garcia-Luna-Aceves and Shree Murthy 
Abstract: A loop-free path-finding algorithm (LPA) is presented; this is the first routing algorithm that eliminates the formation of temporary routing loops without the need for internodal synchronization spanning multiple hops or the specification of complete or variable-size path information. Like other previous algorithms, LPA operates by specifying the second-to-last hop and distance to each destination; this feature is used to ensure termination. In addition, LPA uses an inter-neighbor synchronization mechanism to eliminate temporary routing loops. A detailed proof of LPA's correctness and loop-freedom property is presented and its complexity is evaluated. LPA's average performance is compared by simulation with the performance of algorithms representative of the state of the art in distributed routing, namely an ideal link-state (ILS) algorithm, a loop-free algorithm that is based on internodal coordination spanning multiple hops (DUAL) and a path-finding algorithm without the inter-neighbor synchronization mechanism. The simulation results show that LPA is a more scalable alternative than DUAL and ILS in terms of the average number of steps, messages, and operations needed for each algorithm to converge after a topology change. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Bertsekas and R. Gallager, </author> <title> Data Networks, </title> <publisher> Pren tice Hall, </publisher> <address> Inc. </address> <note> Second Edition 1992. </note>
Reference-contexts: 1 Introduction RIP [9] is widely used in internets today. However, it is based on the distributed Bellman-Ford algorithm (DBF) for shortest-path computation <ref> [1] </ref>, which suffers from bouncing effect and counting-to-infinity problems. These problems are overcome in one of three ways in existing Internet routing protocols. OSPF [16] relies on broadcasting complete topology information among routers, and organizes an Internet hierarchically to cope with the overhead incurred with topology broadcast. <p> Therefore S j (G) is loop-free at time t = 0. Let t &gt; 0, and assume that a loop C j (t) is formed when router i makes router a (=s <ref> [1; new] </ref>) its new successor (Figure 6). This implies the path from a to j at time t, denoted by P aj (t), includes P ai (t). Let path P ai (t) consist of a chain of routers fa; s [2; new], ..., ig, as shown in Figure 6.
Reference: [2] <author> R. Albrightson, J.J. Garcia-Luna-Aceves, and J. Boyle, </author> <title> "EIGRP-A Fast Routing Protocol Based on Distance Vectors," </title> <booktitle> Proc. </booktitle> <volume> Networld/Interop 94, </volume> <month> May </month> <year> 1994. </year>
Reference-contexts: OSPF [16] relies on broadcasting complete topology information among routers, and organizes an Internet hierarchically to cope with the overhead incurred with topology broadcast. BGP [12] exchanges distance vectors that specify complete path to destinations. EIGRP <ref> [2] </ref> uses a loop-free routing algorithm called DUAL [5], which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops. <p> This implies the path from a to j at time t, denoted by P aj (t), includes P ai (t). Let path P ai (t) consist of a chain of routers fa; s <ref> [2; new] </ref>, ..., ig, as shown in Figure 6. Router s [k; new] is the kth hop in the path P ai at time t and s [k + 1; new] is its successor at time t.
Reference: [3] <author> C. Cheng, R. Riley, S. P. R Kumar and J. J. Garcia Luna-Aceves, </author> <title> "A Loop-Free Extended Bellman-Ford Routing Protocol without Bouncing Effect", </title> <journal> ACM Computer Comm. Review, Vol.19, </journal> <volume> No.4, </volume> <year> 1989, </year> <pages> pp. 224-236. </pages>
Reference-contexts: BGP [12] exchanges distance vectors that specify complete path to destinations. EIGRP [2] uses a loop-free routing algorithm called DUAL [5], which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops. Recently, distributed shortest-path algorithms <ref> [3, 5, 8, 10, 17, 19] </ref> that utilize information regarding the length and second-to-last hop (predecessor) of the shortest path to each destination have been proposed to eliminate the performance problems of DBF. We call these type of algorithms path-finding algorithms. <p> Lemma 2 shows that this traversal correctly enforces Property 1, without having to traverse an entire implicit path; as the simulation results presented in Section 6 show, this makes LPA considerably more efficient than other prior path finding algorithms <ref> [3, 10, 19] </ref>. 3.6 Handling Topology Changes When router i establishes a link with a neighbor k, it updates its link-cost table and assumes that router k has reported infinite distances to all destinations and has replied to any query for which router i is active; furthermore, if router k is <p> The key differences between LPA and BPFA are that BPFA has no interneighbor coordination to block temporary loops, and each update causes a node to update its entire routing table, just like in other path-finding algorithms <ref> [3, 10] </ref>. A set of counters were used to instrument the simulations. These counters can be reset at various points. When the event queue empties, that is, when the algorithm converges, the values of these counters are printed. <p> Dynamics of LPA is discussed in [20]. 6.3 Comparison with Prior Path-Finding Algorithms LPA is the first path-finding algorithm that provides loop freedom at every instant. Reference <ref> [3] </ref> discusses loop freedom; however, the path finding algorithm presented in that work does not provide loop-free paths at every instant. The approach proposed in [3] relies on each router sending a query to its neighbors with the intended new routing-table entries, and waiting for the neighbors' replies before making the <p> Reference <ref> [3] </ref> discusses loop freedom; however, the path finding algorithm presented in that work does not provide loop-free paths at every instant. The approach proposed in [3] relies on each router sending a query to its neighbors with the intended new routing-table entries, and waiting for the neighbors' replies before making the change. Data packets are held at a router waiting for its neighbors' replies. <p> In contrast, LPA uses fixed-size entries in update messages, because path information is obtained from the predecessor entries. LPA updates routing table entries using Procedure TRT, which ensures that only simple paths are used. This mechanism is similar to those proposed in <ref> [3, 17] </ref>; however, Procedure DT in LPA makes a router check the consistency of predecessor information reported by all its neighbors each time an input event is processed. <p> This mechanism is similar to those proposed in [3, 17]; however, Procedure DT in LPA makes a router check the consistency of predecessor information reported by all its neighbors each time an input event is processed. In contrast, earlier path finding algorithms <ref> [3, 17, 10] </ref> check the consistency of the predecessor information only for the neighbor associated with the input event. <p> In contrast, earlier path finding algorithms [3, 17, 10] check the consistency of the predecessor information only for the neighbor associated with the input event. LPA is more scalable than the algorithms in <ref> [3, 10] </ref>, because LPA updates only those entries of the distance and routing tables that are affected by the input event, rather than the entire tables, using tags similar to those used in [17]. <p> In contrast, the algorithm in [10] uses a breath-first search on the entire distance table each time a router processes an input event; the algorithm reported in <ref> [3] </ref> makes sure that Property 1 is satisfied by all destinations every time an input event is processed, much like BPFA does. 7 Conclusions We have presented and verified the first routing algorithm (LPA) that eliminates the formation of temporary routing table loops without internodal synchronization spanning multiple hops or the
Reference: [4] <author> J. J. Garcia-Luna-Aceves, </author> <title> "A Fail-Safe Routing Al gorithm for Multihop Packet Radio Networks", </title> <booktitle> Proc. IEEE INFOCOM 86, </booktitle> <year> 1986. </year> <title> [5] |, "Loop-free Routing Using Diffusing Computa tions", </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> Vol. 1, No. 1, </volume> <month> Feb, </month> <year> 1993, </year> <pages> pp. </pages> <month> 130-141. </month> <title> [6] |, "Distributed Routing with Labeled Distances", </title> <booktitle> Proc. IEEE INFOCOM 92, Vol.2, </booktitle> <month> May </month> <year> 1992, </year> <pages> pp. 633 643. </pages> <month> [7] |, "LIBRA: </month> <title> A Distributed Routing Algorithm for Large Internets", </title> <booktitle> Proc. IEEE Globecom 92, Vol.3, </booktitle> <month> Dec </month> <year> 1992, </year> <pages> pp. 1465-1471. </pages>
Reference: [8] <author> J. Hagouel, </author> <title> "Issues in Routing for Large and Dy namic Networks," IBM Research Report RC 9942 (No. </title> <type> 44055) Communications, </type> <institution> IBM Thomas J. Watson Re search Center, </institution> <address> Yorktown Heights, New York, </address> <month> April </month> <year> 1983. </year>
Reference-contexts: BGP [12] exchanges distance vectors that specify complete path to destinations. EIGRP [2] uses a loop-free routing algorithm called DUAL [5], which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops. Recently, distributed shortest-path algorithms <ref> [3, 5, 8, 10, 17, 19] </ref> that utilize information regarding the length and second-to-last hop (predecessor) of the shortest path to each destination have been proposed to eliminate the performance problems of DBF. We call these type of algorithms path-finding algorithms.
Reference: [9] <author> C. Hedrick, </author> <title> "Routing Information Protocol," </title> <type> RFC 1058, </type> <month> June </month> <year> 1988. </year>
Reference-contexts: 1 Introduction RIP <ref> [9] </ref> is widely used in internets today. However, it is based on the distributed Bellman-Ford algorithm (DBF) for shortest-path computation [1], which suffers from bouncing effect and counting-to-infinity problems. These problems are overcome in one of three ways in existing Internet routing protocols.
Reference: [10] <author> P.A. Humblet, </author> <title> "Another Adaptive Shortest-Path Al gorithm", </title> <journal> IEEE Trans. Comm., Vol.39, </journal> <volume> No.6, </volume> <month> June </month> <year> 1991, </year> <pages> pp. 995-1003. </pages>
Reference-contexts: BGP [12] exchanges distance vectors that specify complete path to destinations. EIGRP [2] uses a loop-free routing algorithm called DUAL [5], which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops. Recently, distributed shortest-path algorithms <ref> [3, 5, 8, 10, 17, 19] </ref> that utilize information regarding the length and second-to-last hop (predecessor) of the shortest path to each destination have been proposed to eliminate the performance problems of DBF. We call these type of algorithms path-finding algorithms. <p> Lemma 2 shows that this traversal correctly enforces Property 1, without having to traverse an entire implicit path; as the simulation results presented in Section 6 show, this makes LPA considerably more efficient than other prior path finding algorithms <ref> [3, 10, 19] </ref>. 3.6 Handling Topology Changes When router i establishes a link with a neighbor k, it updates its link-cost table and assumes that router k has reported infinite distances to all destinations and has replied to any query for which router i is active; furthermore, if router k is <p> The key differences between LPA and BPFA are that BPFA has no interneighbor coordination to block temporary loops, and each update causes a node to update its entire routing table, just like in other path-finding algorithms <ref> [3, 10] </ref>. A set of counters were used to instrument the simulations. These counters can be reset at various points. When the event queue empties, that is, when the algorithm converges, the values of these counters are printed. <p> This mechanism is similar to those proposed in [3, 17]; however, Procedure DT in LPA makes a router check the consistency of predecessor information reported by all its neighbors each time an input event is processed. In contrast, earlier path finding algorithms <ref> [3, 17, 10] </ref> check the consistency of the predecessor information only for the neighbor associated with the input event. <p> In contrast, earlier path finding algorithms [3, 17, 10] check the consistency of the predecessor information only for the neighbor associated with the input event. LPA is more scalable than the algorithms in <ref> [3, 10] </ref>, because LPA updates only those entries of the distance and routing tables that are affected by the input event, rather than the entire tables, using tags similar to those used in [17]. <p> LPA is more scalable than the algorithms in [3, 10], because LPA updates only those entries of the distance and routing tables that are affected by the input event, rather than the entire tables, using tags similar to those used in [17]. In contrast, the algorithm in <ref> [10] </ref> uses a breath-first search on the entire distance table each time a router processes an input event; the algorithm reported in [3] makes sure that Property 1 is satisfied by all destinations every time an input event is processed, much like BPFA does. 7 Conclusions We have presented and verified
Reference: [11] <author> J.M. Jaffe and F.M. Moss, </author> <title> "A Responsive Routing Algorithm for Computer Networks", </title> <journal> IEEE Trans. Comm., </journal> <volume> Vol.30, </volume> <month> July </month> <year> 1982, </year> <pages> pp. 1758-1762. </pages>
Reference-contexts: N-00014-92-J-1807 and by the Defense Advanced Research Projects Agency (DARPA) under contract F19628-93-C-0175. eliminate the possibility of temporary loops. All the loop-free algorithms reported to date rely on mechanisms that require routers to either synchronize along multiple hops <ref> [5, 11, 15] </ref>, or exchange path information that can include all the routers in the path from source to destination [7]. This paper presents the loop-free path-finding algorithm (LPA) which is the first routing algorithm that is loop-free at every instant and does not use either of these two techniques.
Reference: [12] <author> Y. Rekhter, T. Li, </author> <title> "A Border Gateway Protocol 4 (BGP-4)," Network Working Group Internet Draft, </title> <month> Jan. </month> <year> 1994. </year>
Reference-contexts: These problems are overcome in one of three ways in existing Internet routing protocols. OSPF [16] relies on broadcasting complete topology information among routers, and organizes an Internet hierarchically to cope with the overhead incurred with topology broadcast. BGP <ref> [12] </ref> exchanges distance vectors that specify complete path to destinations. EIGRP [2] uses a loop-free routing algorithm called DUAL [5], which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops.
Reference: [13] <author> G. Malkin, </author> <note> "RIP Version 2 Carrying Additional Information", RFC-1723, </note> <month> Nov. </month> <year> 1994. </year>
Reference-contexts: LPA works correctly when routing information is aggregated (e.g., masks are used to reduce routing-table size) [22] and paves the way towards developing an efficient routing protocol based on LPA for very large internetworks that is as simple as RIPv2 <ref> [13] </ref> and much more efficient than OSPF [16].
Reference: [14] <author> J. </author> <title> McQuillan and D.C. Walden, "The ARPANET De sign Decisions", Computer Networks, </title> <type> Vol.1, </type> <month> August </month> <year> 1977. </year>
Reference: [15] <author> P.M. Merlin and A. Segall, </author> <title> "A Failsafe Distributed Routing Algorithm", </title> <journal> IEEE Trans. Comm., </journal> <volume> Vol.27, </volume> <month> Sept. </month> <year> 1979, </year> <pages> pp. 1280-1288. </pages>
Reference-contexts: N-00014-92-J-1807 and by the Defense Advanced Research Projects Agency (DARPA) under contract F19628-93-C-0175. eliminate the possibility of temporary loops. All the loop-free algorithms reported to date rely on mechanisms that require routers to either synchronize along multiple hops <ref> [5, 11, 15] </ref>, or exchange path information that can include all the routers in the path from source to destination [7]. This paper presents the loop-free path-finding algorithm (LPA) which is the first routing algorithm that is loop-free at every instant and does not use either of these two techniques.
Reference: [16] <author> J. Moy, </author> <note> "OSPF Version 2," RFC 1247, </note> <month> August </month> <year> 1991. </year>
Reference-contexts: 1 Introduction RIP [9] is widely used in internets today. However, it is based on the distributed Bellman-Ford algorithm (DBF) for shortest-path computation [1], which suffers from bouncing effect and counting-to-infinity problems. These problems are overcome in one of three ways in existing Internet routing protocols. OSPF <ref> [16] </ref> relies on broadcasting complete topology information among routers, and organizes an Internet hierarchically to cope with the overhead incurred with topology broadcast. BGP [12] exchanges distance vectors that specify complete path to destinations. <p> This assumption is made for convenience. Reliable message transmission can be easily incorpo rated into the routing protocol (e.g., <ref> [16, 21] </ref>). * All update messages, changes in the link-cost, link failures and link recoveries are processed one at a time in the order in which they occur. When a link fails, the corresponding distance entry in the node's distance and routing tables are marked as infinity. <p> LPA works correctly when routing information is aggregated (e.g., masks are used to reduce routing-table size) [22] and paves the way towards developing an efficient routing protocol based on LPA for very large internetworks that is as simple as RIPv2 [13] and much more efficient than OSPF <ref> [16] </ref>.
Reference: [17] <author> B. Rajagopalan and M. Faiman, </author> <title> "A Responsive Dis tributed Shortest-Path Routing Algorithm within Au tonomous Systems," Internetworking: </title> <journal> Research and Experience, Vol.2, </journal> <volume> No.1, </volume> <month> March </month> <year> 1991, </year> <pages> pp. 51-69. </pages>
Reference-contexts: BGP [12] exchanges distance vectors that specify complete path to destinations. EIGRP [2] uses a loop-free routing algorithm called DUAL [5], which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops. Recently, distributed shortest-path algorithms <ref> [3, 5, 8, 10, 17, 19] </ref> that utilize information regarding the length and second-to-last hop (predecessor) of the shortest path to each destination have been proposed to eliminate the performance problems of DBF. We call these type of algorithms path-finding algorithms. <p> In contrast, LPA uses fixed-size entries in update messages, because path information is obtained from the predecessor entries. LPA updates routing table entries using Procedure TRT, which ensures that only simple paths are used. This mechanism is similar to those proposed in <ref> [3, 17] </ref>; however, Procedure DT in LPA makes a router check the consistency of predecessor information reported by all its neighbors each time an input event is processed. <p> This mechanism is similar to those proposed in [3, 17]; however, Procedure DT in LPA makes a router check the consistency of predecessor information reported by all its neighbors each time an input event is processed. In contrast, earlier path finding algorithms <ref> [3, 17, 10] </ref> check the consistency of the predecessor information only for the neighbor associated with the input event. <p> LPA is more scalable than the algorithms in [3, 10], because LPA updates only those entries of the distance and routing tables that are affected by the input event, rather than the entire tables, using tags similar to those used in <ref> [17] </ref>.
Reference: [18] <author> S. Murthy, </author> <title> "Design and Analysis of Distributed Rout ing Algorithms", </title> <type> Master's Thesis, </type> <institution> University of Cali fornia, Santa Cruz, </institution> <year> 1994. </year>
Reference-contexts: The operation count is incremented when an event occurs. In this paper, we focus on simulation results for the ARPANET topology; similar simulation results for other network topologies appear elsewhere <ref> [18] </ref>. The simulation results for a single resource change are shown in Table 1.

References-found: 15

