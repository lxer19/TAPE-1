URL: http://www.cs.ucc.ie/~dgb/papers/ewcbr3.ps.Z
Refering-URL: http://www.cs.ucc.ie/~dgb/publist.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: A Case Base Similarity Framework  
Author: Hugh R. Osborne and Derek G. Bridge 
Address: York  
Affiliation: University of  
Abstract: Case based systems typically retrieve cases from the case base by applying similarity measures. The measures are usually constructed in an ad hoc manner. This paper presents a theoretical framework for the systematic construction of similarity measures. In addition to paving the way to a design methodology for similarity measures, this systematic approach facilitates the identification of opportunities for par allelisation in case base retrieval.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> A. Aamodt and E. </author> <title> Plaza. Case based reasoning: Foundational issues, methodological variations and system approaches. </title> <journal> AI Communications, </journal> <volume> 7(1) </volume> <pages> 39-59, </pages> <year> 1994. </year>
Reference-contexts: If, on the other hand, only problem descriptions are to be compared, will be designed to ignore other features. Finally, we should note that, in systems in which the case memory is indexed, case base interrogation is often a two-stage process <ref> [13, 1] </ref>: a retrieval step exploits the indexes to restrict computational effort to cases that are similar to the seed on those characteristics encoded as indexes, but the final ranking and case selection requires application of a similarity measure to this retrieved set of cases. <p> than a partial order on cases | i.e. rather than a similarity measure being a function :: fi ! fi ! fi ! bool it will be a function that "scores" cases N 1 :: fi ! fi ! N 1 , or, alternatively, [0;1] :: fi ! fi ! <ref> [0; 1] </ref>. This scoring approach is less general that the one developed in Sect. 2 because the orders defined by the scores are always total; it does not, for example, allow the possibility of incomparable cases. <p> In what follows, functions that carry out this mapping will be denoted as f . Obviously, for numeric valued attributes of cases, f will typically be the identity function, or, if the similarity measures are to return normalised values | i.e. some value in <ref> [0; 1] </ref>, rather than N 1 | a normalising function.
Reference: 2. <author> R. Altermann. </author> <title> Adaptive planning. </title> <journal> Cognitive Science, </journal> <volume> 12 </volume> <pages> 393-421, </pages> <year> 1988. </year>
Reference-contexts: Similarity measure generating functions for trees found in many case based reasoning systems <ref> [2, 6] </ref>. There is, however, no reason why such an algorithm could not be used to define an ordering on graphs, and then apply this ordering in the way presented in this paper. Graphs.
Reference: 3. <author> K.D. Ashley and E.L. Rissland. </author> <title> A case-based approach to modeling legal expertise. </title> <journal> IEEE Expert, </journal> <volume> 3(3) </volume> <pages> 70-77, </pages> <year> 1988. </year>
Reference-contexts: The projection functions might even implement considerable infer-encing [9, 14], perhaps to obtain "deep" features <ref> [3] </ref> from "surface" features. A retrieval request is presented to the system as a pair, consisting of an element, #, of fi and a similarity measure, . The case #, known as the seed will, in combination with the similarity measure, represent the "best possible" case.
Reference: 4. <author> R. Bareiss, J.A. King, J. Ashley, K. Kolodner, B. Porter, and P. Thagard. </author> <title> Panel on "similarity metrics". </title> <booktitle> In Proceedings of DARPA Case Based Reasoning Workshop, </booktitle> <pages> pages 66-84. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1989. </year>
Reference-contexts: However, this form of optimisation can lead to a loss of flexibility [15] as it may be hard or inefficient to access the case base in different ways as might be needed to give more context-sensitivity or to use the case base for multiple tasks <ref> [4] </ref>. The computational approach, on the other hand, will, in its most extreme form, compute similarity "from scratch" on each retrieval.
Reference: 5. <author> R. Barletta and W. Mark. </author> <title> Explanation-based indexing of cases. </title> <booktitle> In Proceedings of AAAI-88, </booktitle> <pages> pages 541-546, </pages> <year> 1988. </year>
Reference-contexts: cases; others ? In: Proceedings of the 3 rd European Workshop on Case-Based Reasoning, EWCBR'96, Advances in Case-Based reasoning, Ian Smith and Boi Faltings (Eds.), Lecture Notes in Artificial Intelligence 1168, Springer Verlag, 1996 might be part of an indexing structure (as, e.g., with the explanations of case applicability in <ref> [5] </ref>). However, even in these systems, the information has to be associated with the case in some fashion, and so we can, without loss of generality, assume that the information can be obtained by applying a projection function to a case.
Reference: 6. <author> M. Brown. </author> <title> A Memory Model for Case Retrieval by Activation Passing. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Manchester, </institution> <year> 1994. </year> <note> Technical Report 94-2-1. </note>
Reference-contexts: Similarity measure generating functions for trees found in many case based reasoning systems <ref> [2, 6] </ref>. There is, however, no reason why such an algorithm could not be used to define an ordering on graphs, and then apply this ordering in the way presented in this paper. Graphs.
Reference: 7. <author> D. K. G. Campbell, H. R. Osborne, A. M. Wood, and D. G. </author> <title> Bridge. Generic operations for CBR in linda. </title> <note> Technical Report (to appear), </note> <institution> Department of Computer Science, University of York, </institution> <year> 1996. </year>
Reference-contexts: A system has been developed that demonstrates the ideas presented [17, 18]. Currently this provides a graphical demonstration of the method. Work is in progress <ref> [7] </ref> at York to develop this into a realistic, efficient system, and to extend the work to cover other knowledge manipulation systems. A An Example A.1 The Case Base Consider the problem of taking a guest out for a meal.
Reference: 8. <author> A.D. Griffiths and D.G. </author> <title> Bridge. Formalising the knowledge content of case memory systems. </title> <editor> In Ian D. Watson, editor, </editor> <booktitle> Progress in Case-Based Reasoning: First United Kingdom Workshop in Case-Based Reasoning, </booktitle> <pages> pages 32-41. </pages> <booktitle> Springer Verlag Lecture Notes in Computer Science; 1020; Lecture Notes in Artificial Intelligence, </booktitle> <year> 1995. </year>
Reference-contexts: There are two possible approaches to this. The first applies to the similarity measures themselves, the second to the process of determining maxima. The first of these will be referred to as a priority (after [23]), the second as a preference (after <ref> [8] </ref>). Priorities.
Reference: 9. <author> T.R. Hinrichs. </author> <title> Problem Solving in Open Worlds: A Case Study in Design. </title> <publisher> Lawrence Erlbaum, </publisher> <year> 1992. </year>
Reference-contexts: While the cases in the example in the appendix are all tuples, and the projection functions the standard projection functions for tuples, a case may be a more complex structure, with correspondingly more complex projection functions. The projection functions might even implement considerable infer-encing <ref> [9, 14] </ref>, perhaps to obtain "deep" features [3] from "surface" features. A retrieval request is presented to the system as a pair, consisting of an element, #, of fi and a similarity measure, .
Reference: 10. <author> P. Klahr and G. Vrooman. </author> <title> Commercialising case based reasoning technology. In I.M. </title> <editor> Graham and R.W. Milne, editors, </editor> <booktitle> Research and Development in Expert Systems VIII, </booktitle> <pages> pages 18-24. </pages> <publisher> Cmabridge University Press, </publisher> <year> 1991. </year>
Reference-contexts: This can be a flexible approach as nothing is hard-coded; it may be more amenable to user manipulation of the similarity measure (as allowed in many case-based reasoning shells, e.g., <ref> [10] </ref>) or even manipulation through some learning process, e.g. [22]; but there may be an efficiency price to be paid. (A "spin-off" of our own work has been the identification of opportunities for paral-lelisation in pure computational approaches using our similarity framework [17], and this may help to make computational approaches
Reference: 11. <author> J.L. Kolodner. </author> <title> Maintaining organization in a dynamic long-term memory. </title> <journal> Cognitive Science, </journal> <volume> 7 </volume> <pages> 243-280, </pages> <year> 1983. </year>
Reference-contexts: The case #, known as the seed will, in combination with the similarity measure, represent the "best possible" case. This is in contrast to the earliest approaches, e.g. <ref> [11] </ref>, in which the seed was the ideal case, and the similarity measure measured the closeness of retrieved cases to this ideal. In the approach taken here, the similarity measure can, for example, include negation, so that distance from, rather than closeness to, the seed becomes the measure of suitability.
Reference: 12. <author> J.L. Kolodner. </author> <title> Judging which is the "best" case for a case-based reasoner, </title> <booktitle> 1989. published as part of [4], </booktitle> <pages> pages 77-81. </pages>
Reference-contexts: what cases are and by allowing similarity measures to apply to any of the features that can be projected from the case, our framework also encompasses proposals that retrieval should be sensitive to aspects of the case other than the problem description (e.g. the adaptability of the solution, as in <ref> [12, 24] </ref>). If, on the other hand, only problem descriptions are to be compared, will be designed to ignore other features.
Reference: 13. <author> J.L. Kolodner. </author> <title> Case Based Reasoning. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference-contexts: If, on the other hand, only problem descriptions are to be compared, will be designed to ignore other features. Finally, we should note that, in systems in which the case memory is indexed, case base interrogation is often a two-stage process <ref> [13, 1] </ref>: a retrieval step exploits the indexes to restrict computational effort to cases that are similar to the seed on those characteristics encoded as indexes, but the final ranking and case selection requires application of a similarity measure to this retrieved set of cases.
Reference: 14. <author> P. Koton. </author> <title> Reasoning about evidence in causal explanations. </title> <booktitle> In Proceedings of AAAI-88, </booktitle> <pages> pages 256-261, </pages> <year> 1988. </year>
Reference-contexts: While the cases in the example in the appendix are all tuples, and the projection functions the standard projection functions for tuples, a case may be a more complex structure, with correspondingly more complex projection functions. The projection functions might even implement considerable infer-encing <ref> [9, 14] </ref>, perhaps to obtain "deep" features [3] from "surface" features. A retrieval request is presented to the system as a pair, consisting of an element, #, of fi and a similarity measure, .
Reference: 15. <author> R. McCartney and K.E. Sanders. </author> <title> The case for cases: A call for purity in case-based reasoning. </title> <booktitle> In Proceedings of AAAI Symposium on CBR, </booktitle> <pages> pages 12-16, </pages> <year> 1990. </year>
Reference-contexts: However, this form of optimisation can lead to a loss of flexibility <ref> [15] </ref> as it may be hard or inefficient to access the case base in different ways as might be needed to give more context-sensitivity or to use the case base for multiple tasks [4].
Reference: 16. <author> P. Myllymaki and H. Tirri. </author> <title> Massively parallel case-based reasoning with probabilistic similarity measures. </title> <editor> In S. Wess, K.D. Althoff, and M.M. Richter, editors, </editor> <booktitle> Proceedings of the 1st European Workshop on Case-Based Reasoning, Lecture Notes in Computer Science No. </booktitle> <volume> 837, </volume> <pages> pages 144-154. </pages> <publisher> Springer Verlag, </publisher> <year> 1994. </year>
Reference-contexts: See also <ref> [16] </ref>.) The two-stage process mentioned above is clearly a compromise between pure representational and pure computational approaches. We repeat that (while our implementational work has focused on computational approaches) our framework is general enough to cover the full spectrum of possibilities.
Reference: 17. <author> Hugh Osborne and Derek Bridge. </author> <title> Parallel retrieval form case bases. </title> <editor> In Ian D. Watson, editor, </editor> <booktitle> Proceedings of the 2nd UK CBR Workshop, </booktitle> <pages> pages 43-54, </pages> <year> 1996. </year>
Reference-contexts: (as allowed in many case-based reasoning shells, e.g., [10]) or even manipulation through some learning process, e.g. [22]; but there may be an efficiency price to be paid. (A "spin-off" of our own work has been the identification of opportunities for paral-lelisation in pure computational approaches using our similarity framework <ref> [17] </ref>, and this may help to make computational approaches more widely usable. See also [16].) The two-stage process mentioned above is clearly a compromise between pure representational and pure computational approaches. <p> The first half of this paper | Sect. 2 | will discuss "ordinal" similarity measures, both defining simple "atomic" similarity measures and introducing methods of combining these to form more complex measures. A model demonstrating some of the results from Sect. 2 has been implemented <ref> [17, 18] </ref>. Section 3 will then consider how the results from Sect. 2 can be applied to "cardinal" similarity measures, and how both types of measure may be combined. <p> The implied loss of efficiency that the use of more flexible similarity measures entails can be compensated for by the opportunities this method offers for parallel evaluation. A system has been developed that demonstrates the ideas presented <ref> [17, 18] </ref>. Currently this provides a graphical demonstration of the method. Work is in progress [7] at York to develop this into a realistic, efficient system, and to extend the work to cover other knowledge manipulation systems.
Reference: 18. <author> Hugh Osborne and Derek Bridge. </author> <title> A formal analysis of case base retrieval. </title> <type> Technical report, </type> <institution> Department of Computer Science, University of York, </institution> <year> 1997. </year>
Reference-contexts: The first half of this paper | Sect. 2 | will discuss "ordinal" similarity measures, both defining simple "atomic" similarity measures and introducing methods of combining these to form more complex measures. A model demonstrating some of the results from Sect. 2 has been implemented <ref> [17, 18] </ref>. Section 3 will then consider how the results from Sect. 2 can be applied to "cardinal" similarity measures, and how both types of measure may be combined. <p> Directed Acyclic Graphs. The functions in Fig. 2 have been defined in such a way that they can easily be adapted to apply to DAGs. Details can be found in <ref> [18] </ref>. The reader should note that graphs are being used in this paper to define distances between elements and seeds. <p> Property (2) ensures that the intersection of the maxima of two relations will be an acceptable approximation of the maxima of the disjunction of those relations. These, and other properties, given in this paper are stated without proof. Proofs are given in <ref> [18] </ref>. A sufficient condition for the inclusion in Prop. 2 to be an equality is that the two relations involved have a degree of consistency in their inverses. <p> The implied loss of efficiency that the use of more flexible similarity measures entails can be compensated for by the opportunities this method offers for parallel evaluation. A system has been developed that demonstrates the ideas presented <ref> [17, 18] </ref>. Currently this provides a graphical demonstration of the method. Work is in progress [7] at York to develop this into a realistic, efficient system, and to extend the work to cover other knowledge manipulation systems.
Reference: 19. <author> B.W. Porter. </author> <title> Similarity assessment: Computation vs. </title> <booktitle> representation. In Proceedings of DARPA Case Based Reasoning Workshop. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1989. </year>
Reference-contexts: From this point of view, our framework encompasses systems of this kind. In passing, we note that at stake here is whether to take a representational or a computational view of similarity <ref> [19] </ref>, or, in Richter's terminology [21], whether the similarity measure is compiled knowledge or knowledge that is interpreted at run-time. In the representational approach, cases reside in a data structure, such as a DAG, where, e.g., proximity in the data structure denotes similarity. <p> This can be of especial value when similarity assessment requires the application of large bodies of domain-specific knowledge: that knowledge will be applied once per case at case base update time, rather than being applied afresh on every retrieval <ref> [19] </ref>. However, this form of optimisation can lead to a loss of flexibility [15] as it may be hard or inefficient to access the case base in different ways as might be needed to give more context-sensitivity or to use the case base for multiple tasks [4]. <p> The same method can be applied to user defined types. A metric should be defined giving the "closeness" of an element to a seed, and this can then be used to define an ordering on that type. Indeed this can be used to implement more representational approaches <ref> [19] </ref>, with the user defined type being some representation of the positioning of a case in a structured case base.
Reference: 20. <editor> M.M. Richter. </editor> <title> Classification and learning of similarity measures. In Proceedings der Jahrestagung der Gesellschaft fur Klassifikation, Studies in Classification, Data Analysis and Knowledge Organisation. </title> <publisher> Springer Verlag, </publisher> <year> 1992. </year>
Reference-contexts: This scoring approach is less general that the one developed in Sect. 2 because the orders defined by the scores are always total; it does not, for example, allow the possibility of incomparable cases. But <ref> [20] </ref> numeric measures may have the advantage of giving cardinal as well as ordinal information to the user.
Reference: 21. <editor> M.M. Richter. </editor> <title> The knowledge content of similarity measures. Invited talk at ICCBR, </title> <address> Sembria, Portugal, </address> <year> 1995. </year>
Reference-contexts: From this point of view, our framework encompasses systems of this kind. In passing, we note that at stake here is whether to take a representational or a computational view of similarity [19], or, in Richter's terminology <ref> [21] </ref>, whether the similarity measure is compiled knowledge or knowledge that is interpreted at run-time. In the representational approach, cases reside in a data structure, such as a DAG, where, e.g., proximity in the data structure denotes similarity. Representational approaches can afford considerable efficiency in retrieval.
Reference: 22. <editor> M.M. Richter and S. Wess. </editor> <title> Similarity, uncertainty and case-based reasoning in PATDEX. In R.S. </title> <editor> Boyer, editor, </editor> <booktitle> Automated Reasoning: Essays in Honour of Noody Bledsoe, </booktitle> <pages> pages 249-265. </pages> <publisher> Kluwer, </publisher> <year> 1991. </year>
Reference-contexts: This can be a flexible approach as nothing is hard-coded; it may be more amenable to user manipulation of the similarity measure (as allowed in many case-based reasoning shells, e.g., [10]) or even manipulation through some learning process, e.g. <ref> [22] </ref>; but there may be an efficiency price to be paid. (A "spin-off" of our own work has been the identification of opportunities for paral-lelisation in pure computational approaches using our similarity framework [17], and this may help to make computational approaches more widely usable.
Reference: 23. <author> M. Ryan. </author> <title> Prioritising preference relations. </title> <editor> In S.J.G. Burn and M.D. Ryan, editors, </editor> <booktitle> Theory and Formal Methods 1993: Proc. Imperial College Department of Computer Science Workshop on Theory and Formal Methods. </booktitle> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: There are two possible approaches to this. The first applies to the similarity measures themselves, the second to the process of determining maxima. The first of these will be referred to as a priority (after <ref> [23] </ref>), the second as a preference (after [8]). Priorities.
Reference: 24. <author> B. Smyth and M. Keane. </author> <title> Adaptation-guided retrieval: Using adaptation knowledge to guide the retrieval of adaptable cases. </title> <booktitle> In Proceedings of the 2nd UK Workshop on CBR, </booktitle> <pages> pages 2-15, </pages> <year> 1996. </year> <title> This article was processed using the L A T E X macro package with LLNCS style </title>
Reference-contexts: what cases are and by allowing similarity measures to apply to any of the features that can be projected from the case, our framework also encompasses proposals that retrieval should be sensitive to aspects of the case other than the problem description (e.g. the adaptability of the solution, as in <ref> [12, 24] </ref>). If, on the other hand, only problem descriptions are to be compared, will be designed to ignore other features.
References-found: 24

