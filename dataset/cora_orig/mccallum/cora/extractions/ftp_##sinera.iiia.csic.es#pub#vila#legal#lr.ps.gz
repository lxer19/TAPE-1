URL: ftp://sinera.iiia.csic.es/pub/vila/legal/lr.ps.gz
Refering-URL: http://www.iiia.csic.es/Reports/1997/IIIA-RR-97.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Time in Automated Legal Reasoning  
Author: Llus Vila Hajime Yoshino 
Keyword: Formalizing law, time, legal reasoning.  
Address: Bellaterra, Catalonia, Spain  Tokyo, Japan  
Affiliation: IIIA CSIC  Meiji Gakuin University  
Abstract: Despite the ubiquity of time and temporal references in legal texts, their formalization has often been disregarded or addressed in an ad hoc manner. We address this issue from the standpoint of the research done in temporal representation and reasoning in AI. We identify the temporal requirements of legal domains and propose a temporal representation framework for legal reasoning independent of (i) the underlying representation language and (ii) the specific legal reasoning application. The approach is currently being used in a rule-based language for an application in commercial law. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Abiteboul and S. Grumbach. </author> <title> A logic-based language for complex objects. </title> <booktitle> In Proc. of the Intl. Conf. on Extending Database Technology, </booktitle> <year> 1988. </year>
Reference-contexts: For example :(t t 0 ) t &gt; t 0 , or t t 0 2 f [3; 5]g t t 0 2 f <ref> [1; 3); (5; +1] </ref>g. Hence negated constraints will be asserted and queried by regular constraint propagation and entailment. Token Sets Some applications require dealing with sets of temporal elements 15 . <p> Thus, we need to refer to the set of all those "benefit period" tokens that are Before . . . Coping with the notion of set requires higher order expressiveness. Some research has been done extending first order languages in this direction <ref> [31, 29, 1, 12, 27, 13] </ref>. We restrict the development here to the context of a token-based approach where the notion of set applies to specifying sets of temporal tokens that satisfy certain conditions.
Reference: [2] <author> J. Allen. </author> <title> Towards a general theory of action and time. </title> <journal> Artificial Intelligence, </journal> <volume> 23 </volume> <pages> 123-154, </pages> <year> 1984. </year>
Reference-contexts: A variation called token arguments [14, 19] uses a third element, the temporal token or token, to link propositions with their times (e.g. effective (o,a,b,...,tt1), begin (tt1)=t1). A token represents a particular temporal instance of a given temporal proposition. The temporal reification approach <ref> [33, 2] </ref> models temporal propositions as logical terms called propositional terms. A propositional term is associated with its relevant times by making them all arguments of a TIP (e.g. Holds (effective (o,a,b,...),[t1,t2])). <p> The Underlying Language Finally all these various temporal elements are integrated within a language which we refer to as the underlying language. As an example, figure 4 shows how Allen's influential temporal logic <ref> [2] </ref> is described using this set of features. <p> We call these atomic formula incidence atoms. Holds Incidence There is a common agreement in the literature about the homogeneity of holding of fluents <ref> [33, 2, 44] </ref>. Since our ontology includes both intants and periods, the holding of a fluent over a period should not constrain its holding at the period endpoints to avoid the divided instant problem [52]. <p> (T T ) ^ i Within period (T T ) _ holds at (T T ) ^ i = instant (T T )) where T T is a variable of the fluent token sort. 16 Occurs Incidence There is no common agreement on the characterization of the occur-rence of events <ref> [2, 44, 19] </ref>. As a matter of fact, no evidence on the need for any specific theory of events is found in practice.
Reference: [3] <author> J. Allen and P. Hayes. </author> <title> A common-sense theory of time. </title> <booktitle> In Proc. IJCAI'85, </booktitle> <pages> pages 528-531, </pages> <year> 1985. </year>
Reference-contexts: The intuitions about the structure of time (such as the type of ordering, bound/unbound, discrete/dense, . . . ) are specified by a set of axioms called the theory of time. A lot of work has been done on the study of theories based on instants [48] and periods <ref> [55, 23, 36, 3] </ref>, on deriving one primitive from the other, and on defining ontologies that combine them [48, 46, 4, 8, 18, 52]. 5 Labels in bold indicate framework components and the ones in italics are either a set of axioms or a set of algorithms based on a set <p> For example :(t t 0 ) t &gt; t 0 , or t t 0 2 f <ref> [3; 5] </ref>g t t 0 2 f [1; 3); (5; +1]g. Hence negated constraints will be asserted and queried by regular constraint propagation and entailment. Token Sets Some applications require dealing with sets of temporal elements 15 .
Reference: [4] <author> J. Allen and P. Hayes. </author> <title> Moments and points in an interval-based temporal logic. </title> <journal> Computational Intelligence, </journal> <volume> 5 </volume> <pages> 225-238, </pages> <year> 1989. </year>
Reference-contexts: A lot of work has been done on the study of theories based on instants [48] and periods [55, 23, 36, 3], on deriving one primitive from the other, and on defining ontologies that combine them <ref> [48, 46, 4, 8, 18, 52] </ref>. 5 Labels in bold indicate framework components and the ones in italics are either a set of axioms or a set of algorithms based on a set of axioms.
Reference: [5] <author> F. Bacchus, J. Tenenberg, and J. Koomen. </author> <title> A non-reified temporal logic. </title> <journal> Artificial Intelligence, </journal> <volume> 52 </volume> <pages> 87-108, </pages> <year> 1991. </year>
Reference-contexts: These are called temporal incidence predicates (TIP). Figure 3 presents an scheme of the various temporal qualification methods proposed in the literature. The most straight forward approach, called temporal arguments <ref> [24, 5] </ref> 8 , proposes introducing time as an additional argument (s) (e.g. effective (o,a,b,...,t1,t2)). A variation called token arguments [14, 19] uses a third element, the temporal token or token, to link propositions with their times (e.g. effective (o,a,b,...,tt1), begin (tt1)=t1). <p> For example :(t t 0 ) t &gt; t 0 , or t t 0 2 f <ref> [3; 5] </ref>g t t 0 2 f [1; 3); (5; +1]g. Hence negated constraints will be asserted and queried by regular constraint propagation and entailment. Token Sets Some applications require dealing with sets of temporal elements 15 .
Reference: [6] <author> T. Bench-Capon, G. Robinson, T. Routen, and M. Sergot. </author> <title> Logic programming for large scale applications in law: A formalization of supplementary benefit legislation. </title> <editor> In Hayes, Michie, and Richards, editors, </editor> <booktitle> Machine Intelligence, </booktitle> <pages> pages 209-260. </pages> <publisher> Oxford Univ. Press, </publisher> <year> 1988. </year> <month> 25 </month>
Reference-contexts: The first is the event calculus (EC) [28], a temporal database management framework specified in PROLOG. Although not specifically intended for legal reasoning, EC has been used in several legal formalizations <ref> [42, 6] </ref>.
Reference: [7] <author> G. Blumsohn. </author> <title> Three Essays on Law and Information in the Law of Damages. Disser--tation Information Service. </title> <publisher> UMI, </publisher> <year> 1991. </year>
Reference-contexts: ubiquitous in legal domains. . . . " Notions related to time are found in major legal areas such as labor law (e.g. the time conditions to compute benefit periods), commercial law (e.g. the time of the information used to establish the validity of agreements or to calculate damages 1 <ref> [7] </ref>), criminal law (e.g. the temporal information known about the various elements involved in the analysis of a criminal case), patent law (e.g. the time constraints formulated in regulations for applying for and obtaining a patent).
Reference: [8] <author> A. Bochman. </author> <title> Concerted instant-interval temporal semantics i: Temporal ontologies. </title> <journal> Notre Dame Journal of Formal Logic, </journal> <volume> 31(3) </volume> <pages> 403-414, </pages> <year> 1990. </year>
Reference-contexts: A lot of work has been done on the study of theories based on instants [48] and periods [55, 23, 36, 3], on deriving one primitive from the other, and on defining ontologies that combine them <ref> [48, 46, 4, 8, 18, 52] </ref>. 5 Labels in bold indicate framework components and the ones in italics are either a set of axioms or a set of algorithms based on a set of axioms.
Reference: [9] <author> C. Brzoska. </author> <title> Temporal logic programming with metric and past operators based on constraint logic programming. </title> <booktitle> In Proc. of IJCAI'93 Workshop on Executable Modal and Temporal Logics, </booktitle> <pages> pages 67-81, </pages> <year> 1993. </year>
Reference-contexts: EXPERT/T processes qualitative constraints using Allen's path-consistency propagation algorithm [38], but no type of metric constraints is supported. Constraint Logic Programming (CLP) looks like the natural formalism to integrate temporal constraints in logic programming. Temporal CLP have been studied in a number of works <ref> [25, 9, 17, 41] </ref>. The temporal CLP language proposed by Schwalb, Vila and Dechter [41] has several similarities with our proposal here.
Reference: [10] <author> E. Bulygin. </author> <title> Time and validity. </title> <editor> In A. Martino, editor, </editor> <booktitle> Deontic Logic, Computational Liguistics and Information Systems, chapter Vol. II, </booktitle> <pages> pages 65-81. </pages> <publisher> North-Holland, </publisher> <year> 1982. </year>
Reference-contexts: This is an issue of current reseach [35, 56] that we do not address here. The Time of Law Law changes over time. New norms are introduced and some existing ones are derogated over time. A proper account of these changes is obviously important to correctly interpret the law <ref> [10, 11] </ref>. This is a fairly open issue in automated legal reasoning. It could be handled by means of a temporal representation that associates time with objects more complex than propositions such as rules or contexts. Our investigation here is restricted to time associated to atomic propositions.
Reference: [11] <author> M. Chemilieu-Gendrau. </author> <title> Le Role du Temps dans la Formation du Droit International. </title> <booktitle> Droit International. </booktitle> <publisher> Editions Pedone, </publisher> <year> 1987. </year>
Reference-contexts: This is an issue of current reseach [35, 56] that we do not address here. The Time of Law Law changes over time. New norms are introduced and some existing ones are derogated over time. A proper account of these changes is obviously important to correctly interpret the law <ref> [10, 11] </ref>. This is a fairly open issue in automated legal reasoning. It could be handled by means of a temporal representation that associates time with objects more complex than propositions such as rules or contexts. Our investigation here is restricted to time associated to atomic propositions.
Reference: [12] <author> W. Chen and D. Warren. </author> <title> C-logic of complex objects. </title> <booktitle> In Proc. of 8th ACM-SIGACT-SIGMOD-SIGART Symposium of Principles of Database Systems, </booktitle> <year> 1989. </year>
Reference-contexts: Thus, we need to refer to the set of all those "benefit period" tokens that are Before . . . Coping with the notion of set requires higher order expressiveness. Some research has been done extending first order languages in this direction <ref> [31, 29, 1, 12, 27, 13] </ref>. We restrict the development here to the context of a token-based approach where the notion of set applies to specifying sets of temporal tokens that satisfy certain conditions.
Reference: [13] <author> D. </author> <title> Chimenti. The IDL system prototype. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 2(1) </volume> <pages> 78-90, </pages> <year> 1990. </year>
Reference-contexts: Thus, we need to refer to the set of all those "benefit period" tokens that are Before . . . Coping with the notion of set requires higher order expressiveness. Some research has been done extending first order languages in this direction <ref> [31, 29, 1, 12, 27, 13] </ref>. We restrict the development here to the context of a token-based approach where the notion of set applies to specifying sets of temporal tokens that satisfy certain conditions.
Reference: [14] <author> T. Dean and D. McDermott. </author> <title> Temporal data base management. </title> <journal> Artificial Intelligence, </journal> <volume> 32:1987, </volume> <year> 1987. </year>
Reference-contexts: Figure 3 presents an scheme of the various temporal qualification methods proposed in the literature. The most straight forward approach, called temporal arguments [24, 5] 8 , proposes introducing time as an additional argument (s) (e.g. effective (o,a,b,...,t1,t2)). A variation called token arguments <ref> [14, 19] </ref> uses a third element, the temporal token or token, to link propositions with their times (e.g. effective (o,a,b,...,tt1), begin (tt1)=t1). A token represents a particular temporal instance of a given temporal proposition. The temporal reification approach [33, 2] models temporal propositions as logical terms called propositional terms. <p> It involves determining a qualifying period (the period during which the person has been employed) and a benefit period (the period during which the person should receive benefits). The following predicate attributes need to be declared: 20 As in the TMM system <ref> [14, 39] </ref> for example. 22 Attributes (insured-person,f...g) Attributes (benefit-period,fwhomg) Attributes (qualifying-period,fwhomg) Attributes (interruption-of-earnings,fwhatg) Attributes (initial-claim,fwhatg) For a proper formalization of the temporal aspects of this act, a granularity of days is fine enough.
Reference: [15] <author> R. Dechter, I. Meiri, and J. Pearl. </author> <title> Temporal constraint networks. </title> <journal> Artificial Intelligence, </journal> <volume> 49 </volume> <pages> 61-95, </pages> <year> 1991. </year>
Reference-contexts: The worst-case time complexity of checking consistency of a set of temporal constraints can at best be linear in the number of relations, but if the indefiniteness of temporal relations is non-convex it is unlikely that the problem will be tractable <ref> [54, 15] </ref>. Fortunately, in most of legal scenarios the ratio number of temporal relations vs. number of temporal propositions is relatively low and the non-convex indefiniteness is small. <p> The formal syntax of the constraints is given in [53]. Temporal constraints processing is done by representing them in a constraint network and applying available efficient techniques for processing different classes of constraints: qualitative point [22, 47, 21, 16], qualitative interval [47] and metric point <ref> [15, 40] </ref>. Also some progress has been achieved in combining metric-point and interval algebra constraints [34, 26].
Reference: [16] <author> J. Delgrande and A. Gupta. </author> <title> A representation for efficient temporal reasoning. </title> <booktitle> In Proc. AAAI'96, </booktitle> <pages> pages 381-388, </pages> <address> Menlo Park, 1996. </address> <publisher> AAAI Press/The MIT Press. </publisher>
Reference-contexts: In unary constraints, one of the timetemrs is alwasys ground. The formal syntax of the constraints is given in [53]. Temporal constraints processing is done by representing them in a constraint network and applying available efficient techniques for processing different classes of constraints: qualitative point <ref> [22, 47, 21, 16] </ref>, qualitative interval [47] and metric point [15, 40]. Also some progress has been achieved in combining metric-point and interval algebra constraints [34, 26].
Reference: [17] <author> T. Fruhwirth. </author> <title> Temporal annotated constraint logic programming. </title> <journal> Journal of Symbolic Computation, </journal> <note> (to appear), </note> <year> 1996. </year>
Reference-contexts: EXPERT/T processes qualitative constraints using Allen's path-consistency propagation algorithm [38], but no type of metric constraints is supported. Constraint Logic Programming (CLP) looks like the natural formalism to integrate temporal constraints in logic programming. Temporal CLP have been studied in a number of works <ref> [25, 9, 17, 41] </ref>. The temporal CLP language proposed by Schwalb, Vila and Dechter [41] has several similarities with our proposal here.
Reference: [18] <author> A. Galton. </author> <title> A critical examination of Allen's theory of action and time. </title> <journal> Artificial Intelligence, </journal> <volume> 42 </volume> <pages> 159-188, </pages> <year> 1990. </year>
Reference-contexts: A lot of work has been done on the study of theories based on instants [48] and periods [55, 23, 36, 3], on deriving one primitive from the other, and on defining ontologies that combine them <ref> [48, 46, 4, 8, 18, 52] </ref>. 5 Labels in bold indicate framework components and the ones in italics are either a set of axioms or a set of algorithms based on a set of axioms.
Reference: [19] <author> A. Galton. </author> <title> Reified temporal theories and how to unreify them. </title> <booktitle> In Proc. IJCAI'91, </booktitle> <pages> pages 1177-1182, </pages> <year> 1991. </year>
Reference-contexts: Figure 3 presents an scheme of the various temporal qualification methods proposed in the literature. The most straight forward approach, called temporal arguments [24, 5] 8 , proposes introducing time as an additional argument (s) (e.g. effective (o,a,b,...,t1,t2)). A variation called token arguments <ref> [14, 19] </ref> uses a third element, the temporal token or token, to link propositions with their times (e.g. effective (o,a,b,...,tt1), begin (tt1)=t1). A token represents a particular temporal instance of a given temporal proposition. The temporal reification approach [33, 2] models temporal propositions as logical terms called propositional terms. <p> (T T ) ^ i Within period (T T ) _ holds at (T T ) ^ i = instant (T T )) where T T is a variable of the fluent token sort. 16 Occurs Incidence There is no common agreement on the characterization of the occur-rence of events <ref> [2, 44, 19] </ref>. As a matter of fact, no evidence on the need for any specific theory of events is found in practice.
Reference: [20] <author> A. Gardner. </author> <title> An Artificial Intelligence Approach to Legal Reasoning. </title> <publisher> MIT Press, </publisher> <year> 1987. </year>
Reference-contexts: Some systems are provided with an ad hoc temporal representation which may range from few built-in functions to a whole temporal subsystem. For example, Gardner <ref> [20] </ref> proposes a system for analysis of contract formation which includes a temporal component. The ontology is composed of time points and time intervals. A distinction is made between events and states (i.e. fluents). Time is treated as another argument.
Reference: [21] <author> A. Gerevini and L. Schubert. </author> <title> Efficient algorithms for qualitative reasoning about time. </title> <journal> Artificial Intelligence, </journal> <volume> 74(3) </volume> <pages> 207-248, </pages> <year> 1995. </year>
Reference-contexts: This together with the temporal units and the allowed temporal constraints determine the temporal constraint class. For instance, the constraint in the above example is a non-convex qualitative interval constraint. A temporal constraint formalism must be provided with a set of specialized temporal constraint satisfaction algorithms <ref> [47, 21, 40] </ref>. Temporal Qualification A central feature is the method employed to abscribe time to temporal propositions. It usually involves a number of newly defined predicates such as Allen's Holds or Shoham's True which express that a given proposition is true at a certain time (s). <p> In unary constraints, one of the timetemrs is alwasys ground. The formal syntax of the constraints is given in [53]. Temporal constraints processing is done by representing them in a constraint network and applying available efficient techniques for processing different classes of constraints: qualitative point <ref> [22, 47, 21, 16] </ref>, qualitative interval [47] and metric point [15, 40]. Also some progress has been achieved in combining metric-point and interval algebra constraints [34, 26].
Reference: [22] <author> M. Ghallab and A. Mounir Alaoui. </author> <title> Managing efficiently temporal relations through indexed spanning trees. </title> <booktitle> In Proc. IJCAI'89, </booktitle> <pages> pages 1297-1303, </pages> <year> 1989. </year> <month> 26 </month>
Reference-contexts: In unary constraints, one of the timetemrs is alwasys ground. The formal syntax of the constraints is given in [53]. Temporal constraints processing is done by representing them in a constraint network and applying available efficient techniques for processing different classes of constraints: qualitative point <ref> [22, 47, 21, 16] </ref>, qualitative interval [47] and metric point [15, 40]. Also some progress has been achieved in combining metric-point and interval algebra constraints [34, 26].
Reference: [23] <editor> C. Hamblin. Instants and intervals. In J. Fraser, editor, </editor> <booktitle> The Study of Time, </booktitle> <pages> pages 325-331. </pages> <publisher> Springer-Verlag, </publisher> <year> 1972. </year>
Reference-contexts: The intuitions about the structure of time (such as the type of ordering, bound/unbound, discrete/dense, . . . ) are specified by a set of axioms called the theory of time. A lot of work has been done on the study of theories based on instants [48] and periods <ref> [55, 23, 36, 3] </ref>, on deriving one primitive from the other, and on defining ontologies that combine them [48, 46, 4, 8, 18, 52]. 5 Labels in bold indicate framework components and the ones in italics are either a set of axioms or a set of algorithms based on a set
Reference: [24] <author> B. A. Haugh. </author> <title> Non-standard semantics for the method of temporal arguments. </title> <booktitle> In Proc. IJCAI'87, </booktitle> <pages> pages 449-454, </pages> <year> 1987. </year>
Reference-contexts: These are called temporal incidence predicates (TIP). Figure 3 presents an scheme of the various temporal qualification methods proposed in the literature. The most straight forward approach, called temporal arguments <ref> [24, 5] </ref> 8 , proposes introducing time as an additional argument (s) (e.g. effective (o,a,b,...,t1,t2)). A variation called token arguments [14, 19] uses a third element, the temporal token or token, to link propositions with their times (e.g. effective (o,a,b,...,tt1), begin (tt1)=t1).
Reference: [25] <author> T. Hrycej. </author> <title> A temporal extension of prolog. </title> <journal> Journal of Logic Programming, </journal> <volume> 15 </volume> <pages> 113-145, </pages> <year> 1993. </year>
Reference-contexts: EXPERT/T processes qualitative constraints using Allen's path-consistency propagation algorithm [38], but no type of metric constraints is supported. Constraint Logic Programming (CLP) looks like the natural formalism to integrate temporal constraints in logic programming. Temporal CLP have been studied in a number of works <ref> [25, 9, 17, 41] </ref>. The temporal CLP language proposed by Schwalb, Vila and Dechter [41] has several similarities with our proposal here.
Reference: [26] <author> H. Kautz and P. Ladkin. </author> <title> Integrating metric and qualitative temporal reasoning. </title> <booktitle> In Proc. AAAI'91, </booktitle> <pages> pages 241-246, </pages> <year> 1991. </year>
Reference-contexts: Also some progress has been achieved in combining metric-point and interval algebra constraints <ref> [34, 26] </ref>. This currently is an area of active research and forthcoming results can be straigh-forwardly integrated within our framework. 4.3 Temporal Qualification: Token Arguments Since repeated temporal references are pervasive in legal domains, temporal qualification methods based on tokens are more adequate.
Reference: [27] <author> M. Kifer and G. Lausen. F-logic: </author> <title> A higher-order language for reasoning about objects. </title> <booktitle> In Proc. of 8th ACM-SIGACT-SIGMOD-SIGART Symposium of Principles of Database Systems, </booktitle> <year> 1989. </year>
Reference-contexts: Thus, we need to refer to the set of all those "benefit period" tokens that are Before . . . Coping with the notion of set requires higher order expressiveness. Some research has been done extending first order languages in this direction <ref> [31, 29, 1, 12, 27, 13] </ref>. We restrict the development here to the context of a token-based approach where the notion of set applies to specifying sets of temporal tokens that satisfy certain conditions.
Reference: [28] <author> R. Kowalski and M. Sergot. </author> <title> A logic-based calculus of events. </title> <journal> New Generation Computing, </journal> <volume> 3, </volume> <year> 1986. </year>
Reference-contexts: In this paper we already went over (i) and (ii). In next section we go over (iii), but before that we analyze two pieces of work that include these three ingredients. The first is the event calculus (EC) <ref> [28] </ref>, a temporal database management framework specified in PROLOG. Although not specifically intended for legal reasoning, EC has been used in several legal formalizations [42, 6].
Reference: [29] <author> G. Kuper. </author> <title> Logic programming with sets. </title> <booktitle> In Proc. of 6th ACM-SIGACT-SIGMOD-SIGART Symposium of Principles of Database Systems, </booktitle> <year> 1987. </year>
Reference-contexts: Thus, we need to refer to the set of all those "benefit period" tokens that are Before . . . Coping with the notion of set requires higher order expressiveness. Some research has been done extending first order languages in this direction <ref> [31, 29, 1, 12, 27, 13] </ref>. We restrict the development here to the context of a token-based approach where the notion of set applies to specifying sets of temporal tokens that satisfy certain conditions.
Reference: [30] <author> E. Mackaay, D. Poulin, J. Fremont, P. Bratley, and C. Deniger. </author> <title> The logic of time in law and legal expert systems. </title> <journal> Ratio Juris, </journal> <volume> 3(2) </volume> <pages> 254-271, </pages> <year> 1990. </year>
Reference-contexts: Ontology Units: Instant, period Relations: f&lt;, =, &gt;g Time Theory Not defined Temporal Constraints Not defined Temporal Qualification For fluents: Temporal reification For events: Token arguments Temporal Incidence Theory TIPs: fholds,holds atg Axioms: holds homogeneity Underlying language PROLOG 9 The second is presented in the context of the Chomexpert system <ref> [30, 38] </ref>, an application on the Canadian Unemployment Insurance Law.
Reference: [31] <author> D. Maier. </author> <title> A logic for objects. </title> <booktitle> In Proc. of the Workshop on Foundations of Deductive Database and Logic Programming, </booktitle> <year> 1986. </year>
Reference-contexts: Thus, we need to refer to the set of all those "benefit period" tokens that are Before . . . Coping with the notion of set requires higher order expressiveness. Some research has been done extending first order languages in this direction <ref> [31, 29, 1, 12, 27, 13] </ref>. We restrict the development here to the context of a token-based approach where the notion of set applies to specifying sets of temporal tokens that satisfy certain conditions.
Reference: [32] <author> L. T. McCarty. </author> <title> Some requirements on an action language for legal discourse (position paper). </title> <booktitle> In Spring Symposium Series'95: Extending Theories of Action, </booktitle> <pages> pages 136-138. </pages> <publisher> AAAI, </publisher> <year> 1995. </year>
Reference-contexts: 1 Introduction Automated legal reasoning systems require a proper formalization of time and temporal information <ref> [43, 32] </ref>. Quoting L. <p> 1 Introduction Automated legal reasoning systems require a proper formalization of time and temporal information [43, 32]. Quoting L. Thorne McCarty <ref> [32] </ref>: ". . . time and action are both ubiquitous in legal domains. . . . " Notions related to time are found in major legal areas such as labor law (e.g. the time conditions to compute benefit periods), commercial law (e.g. the time of the information used to establish the
Reference: [33] <author> D. McDermott. </author> <title> A temporal logic for reasoning about processes and plans. </title> <journal> Cognitive Science, </journal> <volume> 6 </volume> <pages> 101-155, </pages> <year> 1982. </year>
Reference-contexts: A variation called token arguments [14, 19] uses a third element, the temporal token or token, to link propositions with their times (e.g. effective (o,a,b,...,tt1), begin (tt1)=t1). A token represents a particular temporal instance of a given temporal proposition. The temporal reification approach <ref> [33, 2] </ref> models temporal propositions as logical terms called propositional terms. A propositional term is associated with its relevant times by making them all arguments of a TIP (e.g. Holds (effective (o,a,b,...),[t1,t2])). <p> We call these atomic formula incidence atoms. Holds Incidence There is a common agreement in the literature about the homogeneity of holding of fluents <ref> [33, 2, 44] </ref>. Since our ontology includes both intants and periods, the holding of a fluent over a period should not constrain its holding at the period endpoints to avoid the divided instant problem [52].
Reference: [34] <author> I. Meiri. </author> <title> Combining qualitative and quantitative constraints in temporal reasoning. </title> <booktitle> In Proc. AAAI'91, </booktitle> <year> 1991. </year>
Reference-contexts: Also some progress has been achieved in combining metric-point and interval algebra constraints <ref> [34, 26] </ref>. This currently is an area of active research and forthcoming results can be straigh-forwardly integrated within our framework. 4.3 Temporal Qualification: Token Arguments Since repeated temporal references are pervasive in legal domains, temporal qualification methods based on tokens are more adequate.
Reference: [35] <author> R. Morris, W. Shoaf, and L. Khatib. </author> <title> Domain independent temporal reasoning with recurring events. </title> <booktitle> Computational Intelligence, </booktitle> <year> 1994. </year>
Reference-contexts: This is an issue of current reseach <ref> [35, 56] </ref> that we do not address here. The Time of Law Law changes over time. New norms are introduced and some existing ones are derogated over time. A proper account of these changes is obviously important to correctly interpret the law [10, 11].
Reference: [36] <author> W. Newton-Smith. </author> <title> The Structure of Time. </title> <editor> Routledge & Heagan Paul, </editor> <year> 1980. </year>
Reference-contexts: The intuitions about the structure of time (such as the type of ordering, bound/unbound, discrete/dense, . . . ) are specified by a set of axioms called the theory of time. A lot of work has been done on the study of theories based on instants [48] and periods <ref> [55, 23, 36, 3] </ref>, on deriving one primitive from the other, and on defining ontologies that combine them [48, 46, 4, 8, 18, 52]. 5 Labels in bold indicate framework components and the ones in italics are either a set of axioms or a set of algorithms based on a set
Reference: [37] <author> K. Nitta, J. Nagao, and M. Tetsuya. </author> <title> A knowledge representation and inference system for procedural law. </title> <journal> New Generation Computing, </journal> <volume> 5 </volume> <pages> 319-359, </pages> <year> 1988. </year>
Reference-contexts: KRIP-2 <ref> [37] </ref> is a system for legal management and reasoning in patent law whose language supports temporal representation. The ontology is also based on instants and periods, and includes both convex metric and qualitative interval temporal constraints.
Reference: [38] <author> D. Poulin, E. Mackaay, P. Bratley, and J. Fremont. </author> <title> Time server a legal time specialist. </title> <editor> In A. Martino, editor, </editor> <booktitle> Expert Systems in Law, </booktitle> <pages> pages 295-312, </pages> <year> 1992. </year> <month> 27 </month>
Reference-contexts: We find denotations for events that happen at a certain time (e.g. "reach"), objects that have a certain lifetime (e.g. "offer", "withdrawal"), properties that change over time (e.g. "an offer is effective") and temporal relations (e.g. "before or at the same time"). We borrow the second example from <ref> [38] </ref>. Example 2 Next two articles belong to the Canadian Unemployment Insurance Law: Section 9 (1) [. . . ] A benefit period begins on the Sunday of the week in which (a) the interruption of earnings occurs, or (b) the initial claim for benefit is made, whichever the later. <p> Ontology Units: Instant, period Relations: f&lt;, =, &gt;g Time Theory Not defined Temporal Constraints Not defined Temporal Qualification For fluents: Temporal reification For events: Token arguments Temporal Incidence Theory TIPs: fholds,holds atg Axioms: holds homogeneity Underlying language PROLOG 9 The second is presented in the context of the Chomexpert system <ref> [30, 38] </ref>, an application on the Canadian Unemployment Insurance Law. <p> EC does not provide any "machinery" for processing temporal constraints. Although the period primitive is part of the time ontology, period relations and interval algebra constraints (a la Allen) are not supported. EXPERT/T processes qualitative constraints using Allen's path-consistency propagation algorithm <ref> [38] </ref>, but no type of metric constraints is supported. Constraint Logic Programming (CLP) looks like the natural formalism to integrate temporal constraints in logic programming. Temporal CLP have been studied in a number of works [25, 9, 17, 41]. <p> The sequence of rules involved in deriving token tt1.2: concluded (tt2) can be easily recorded and returned as justification. 5.2 Formalizing the Canadian Unemployment Insurance Law Ex ample A key section of the Canadian Unemployment Insurance Law <ref> [38] </ref> is intended to determine whether a person is eligible for benefits or not. It involves determining a qualifying period (the period during which the person has been employed) and a benefit period (the period during which the person should receive benefits).
Reference: [39] <author> B. Schrag and M. Boddy. </author> <title> fi-tmm functional description. </title> <type> Technical report, </type> <institution> Honeywell SRC, </institution> <year> 1991. </year>
Reference-contexts: It involves determining a qualifying period (the period during which the person has been employed) and a benefit period (the period during which the person should receive benefits). The following predicate attributes need to be declared: 20 As in the TMM system <ref> [14, 39] </ref> for example. 22 Attributes (insured-person,f...g) Attributes (benefit-period,fwhomg) Attributes (qualifying-period,fwhomg) Attributes (interruption-of-earnings,fwhatg) Attributes (initial-claim,fwhatg) For a proper formalization of the temporal aspects of this act, a granularity of days is fine enough.
Reference: [40] <author> E. Schwalb and R. Dechter. </author> <title> Processing temporal constraint networks. </title> <journal> Artificial Intelligence, </journal> <note> (to appear), </note> <year> 1997. </year>
Reference-contexts: This together with the temporal units and the allowed temporal constraints determine the temporal constraint class. For instance, the constraint in the above example is a non-convex qualitative interval constraint. A temporal constraint formalism must be provided with a set of specialized temporal constraint satisfaction algorithms <ref> [47, 21, 40] </ref>. Temporal Qualification A central feature is the method employed to abscribe time to temporal propositions. It usually involves a number of newly defined predicates such as Allen's Holds or Shoham's True which express that a given proposition is true at a certain time (s). <p> The formal syntax of the constraints is given in [53]. Temporal constraints processing is done by representing them in a constraint network and applying available efficient techniques for processing different classes of constraints: qualitative point [22, 47, 21, 16], qualitative interval [47] and metric point <ref> [15, 40] </ref>. Also some progress has been achieved in combining metric-point and interval algebra constraints [34, 26].
Reference: [41] <author> E. Schwalb, L. Vila, and R. Dechter. </author> <title> Temporal constraint logic programming. (in preparation), </title> <institution> UC Irvine, </institution> <year> 1996. </year>
Reference-contexts: EXPERT/T processes qualitative constraints using Allen's path-consistency propagation algorithm [38], but no type of metric constraints is supported. Constraint Logic Programming (CLP) looks like the natural formalism to integrate temporal constraints in logic programming. Temporal CLP have been studied in a number of works <ref> [25, 9, 17, 41] </ref>. The temporal CLP language proposed by Schwalb, Vila and Dechter [41] has several similarities with our proposal here. <p> Constraint Logic Programming (CLP) looks like the natural formalism to integrate temporal constraints in logic programming. Temporal CLP have been studied in a number of works [25, 9, 17, 41]. The temporal CLP language proposed by Schwalb, Vila and Dechter <ref> [41] </ref> has several similarities with our proposal here.
Reference: [42] <author> M. Sergot. </author> <title> Representing legislation as logic programs. </title> <editor> In Hayes, Michie, and Richards, editors, </editor> <booktitle> Machine Intelligence, </booktitle> <pages> pages 209-260. </pages> <publisher> Oxford Univ. Press, </publisher> <year> 1988. </year>
Reference-contexts: The first is the event calculus (EC) [28], a temporal database management framework specified in PROLOG. Although not specifically intended for legal reasoning, EC has been used in several legal formalizations <ref> [42, 6] </ref>.
Reference: [43] <author> M. Sergot. </author> <title> Tutorial notes: Using logic for knowledge representation in legal knol-wedge based system. </title> <booktitle> 5th International Conference on Artificial Intelligence in Law, </booktitle> <address> Maryland, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: 1 Introduction Automated legal reasoning systems require a proper formalization of time and temporal information <ref> [43, 32] </ref>. Quoting L. <p> The situation is more surprising if we take into account the intensive research done on temporal reasoning in AI during the past 15 years (see [50] for a survey). This may be due to the fact that, quoting Marek Sergot <ref> [43] </ref> "it looks like a huge topic" or that it requires techniques traditionally disconnected from legal reasoning such as constraint satisfaction. Our goal is to provide a representation framework well-suited to formalizing the temporal aspects of law in its different areas. <p> Several Temporal Levels Some legal applications require distinguishing among different levels of temporal information <ref> [43] </ref>. A common distinction (often made in database systems [45]) is real time (in databases called valid time) vs. belief time (i.e. transaction time). Modularity Since legal domains usually involve knowledge related to various notions such as evidence, belief, intention, obligation, permission, uncertainty, modularity is a central issue.
Reference: [44] <author> Y. Shoham. </author> <title> Temporal logics in AI: Semantical and ontological considerations. </title> <journal> Artificial Intelligence, </journal> <volume> 33 </volume> <pages> 89-104, </pages> <year> 1987. </year>
Reference-contexts: We call these atomic formula incidence atoms. Holds Incidence There is a common agreement in the literature about the homogeneity of holding of fluents <ref> [33, 2, 44] </ref>. Since our ontology includes both intants and periods, the holding of a fluent over a period should not constrain its holding at the period endpoints to avoid the divided instant problem [52]. <p> (T T ) ^ i Within period (T T ) _ holds at (T T ) ^ i = instant (T T )) where T T is a variable of the fluent token sort. 16 Occurs Incidence There is no common agreement on the characterization of the occur-rence of events <ref> [2, 44, 19] </ref>. As a matter of fact, no evidence on the need for any specific theory of events is found in practice.
Reference: [45] <author> A. Tansel, J. Clifford, S. Gadia, S. Jajodia, A. Segev, and R. Snodgrass. </author> <title> Temporal Databases. </title> <publisher> Benjamin/Cummings Publishing, </publisher> <year> 1993. </year>
Reference-contexts: Several Temporal Levels Some legal applications require distinguishing among different levels of temporal information [43]. A common distinction (often made in database systems <ref> [45] </ref>) is real time (in databases called valid time) vs. belief time (i.e. transaction time). Modularity Since legal domains usually involve knowledge related to various notions such as evidence, belief, intention, obligation, permission, uncertainty, modularity is a central issue.
Reference: [46] <author> E. Tsang. </author> <title> Time structures for AI. </title> <booktitle> In Proc. IJCAI'87, </booktitle> <pages> pages 456-461, </pages> <year> 1987. </year>
Reference-contexts: A lot of work has been done on the study of theories based on instants [48] and periods [55, 23, 36, 3], on deriving one primitive from the other, and on defining ontologies that combine them <ref> [48, 46, 4, 8, 18, 52] </ref>. 5 Labels in bold indicate framework components and the ones in italics are either a set of axioms or a set of algorithms based on a set of axioms.
Reference: [47] <author> P. van Beek. </author> <title> Reasoning about qualitative temporal information. </title> <journal> Artificial Intelligence, </journal> <volume> 58 </volume> <pages> 297-326, </pages> <year> 1992. </year>
Reference-contexts: This together with the temporal units and the allowed temporal constraints determine the temporal constraint class. For instance, the constraint in the above example is a non-convex qualitative interval constraint. A temporal constraint formalism must be provided with a set of specialized temporal constraint satisfaction algorithms <ref> [47, 21, 40] </ref>. Temporal Qualification A central feature is the method employed to abscribe time to temporal propositions. It usually involves a number of newly defined predicates such as Allen's Holds or Shoham's True which express that a given proposition is true at a certain time (s). <p> In unary constraints, one of the timetemrs is alwasys ground. The formal syntax of the constraints is given in [53]. Temporal constraints processing is done by representing them in a constraint network and applying available efficient techniques for processing different classes of constraints: qualitative point <ref> [22, 47, 21, 16] </ref>, qualitative interval [47] and metric point [15, 40]. Also some progress has been achieved in combining metric-point and interval algebra constraints [34, 26]. <p> The formal syntax of the constraints is given in [53]. Temporal constraints processing is done by representing them in a constraint network and applying available efficient techniques for processing different classes of constraints: qualitative point [22, 47, 21, 16], qualitative interval <ref> [47] </ref> and metric point [15, 40]. Also some progress has been achieved in combining metric-point and interval algebra constraints [34, 26].
Reference: [48] <author> J. van Benthem. </author> <title> The Logic of Time. </title> <publisher> Kluwer Academic, </publisher> <address> Dordrecht, </address> <year> 1983. </year>
Reference-contexts: The intuitions about the structure of time (such as the type of ordering, bound/unbound, discrete/dense, . . . ) are specified by a set of axioms called the theory of time. A lot of work has been done on the study of theories based on instants <ref> [48] </ref> and periods [55, 23, 36, 3], on deriving one primitive from the other, and on defining ontologies that combine them [48, 46, 4, 8, 18, 52]. 5 Labels in bold indicate framework components and the ones in italics are either a set of axioms or a set of algorithms based <p> A lot of work has been done on the study of theories based on instants [48] and periods [55, 23, 36, 3], on deriving one primitive from the other, and on defining ontologies that combine them <ref> [48, 46, 4, 8, 18, 52] </ref>. 5 Labels in bold indicate framework components and the ones in italics are either a set of axioms or a set of algorithms based on a set of axioms.
Reference: [49] <author> L. Vila. </author> <title> IP: An instant-period-based theory of time. </title> <editor> In R. Rodriguez, editor, </editor> <booktitle> Proc. ECAI'94 Workshop on Spatial and Temporal Reasoning, </booktitle> <year> 1994. </year>
Reference-contexts: Therefore we adopt a discrete model of time which has two consequences. At the ontological level, we add two instant relations that are exclusive of discrete models: Previous, Next: instant fi instant 11 . At the axiomatics level, we take a discrete time theory. It is based on IP <ref> [49] </ref>, a simple instant-period theory that accepts both discrete and dense models, plus few discreteness axioms. Both sets of axioms are given in appendix A. The "Immediate" Relation Immediate is a difficult temporal term to characterize because its meaning may vary from one context to another.
Reference: [50] <author> L. Vila. </author> <title> A survey on temporal reasoning in artificial intelligence. </title> <journal> AI Communications, </journal> <volume> 7(1) </volume> <pages> 4-28, </pages> <month> March </month> <year> 1994. </year>
Reference-contexts: Time is an issue that legal reasoning projects have often disregarded or addressed in an ad hoc manner. The situation is more surprising if we take into account the intensive research done on temporal reasoning in AI during the past 15 years (see <ref> [50] </ref> for a survey). This may be due to the fact that, quoting Marek Sergot [43] "it looks like a huge topic" or that it requires techniques traditionally disconnected from legal reasoning such as constraint satisfaction.
Reference: [51] <author> L. Vila and H. Reichgelt. </author> <title> The token reification approach to temporal reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 83(1) </volume> <pages> 59-74, </pages> <month> May </month> <year> 1996. </year>
Reference-contexts: The temporal reification approach [33, 2] models temporal propositions as logical terms called propositional terms. A propositional term is associated with its relevant times by making them all arguments of a TIP (e.g. Holds (effective (o,a,b,...),[t1,t2])). A variant called token reification <ref> [51] </ref>, proposes first adding time as argument and then reifying (e.g. holds (effective (o,a,b,...,t1,t2))). In this case the propositional term denotes a temporal token. 8 This is the approach classically used in databases. 7 Finally modal approaches introduce a number of temporal modal operators that qualify propositions.
Reference: [52] <author> L. Vila and E. Schwalb. </author> <title> A theory of time and temporal incidence based on instants and periods. </title> <booktitle> In Proc. of the Intl. Workshop on Temporal Representation and Reasoning (TIME'96), </booktitle> <pages> pages 21-28, </pages> <year> 1996. </year>
Reference-contexts: A lot of work has been done on the study of theories based on instants [48] and periods [55, 23, 36, 3], on deriving one primitive from the other, and on defining ontologies that combine them <ref> [48, 46, 4, 8, 18, 52] </ref>. 5 Labels in bold indicate framework components and the ones in italics are either a set of axioms or a set of algorithms based on a set of axioms. <p> Since our ontology includes both intants and periods, the holding of a fluent over a period should not constrain its holding at the period endpoints to avoid the divided instant problem <ref> [52] </ref>.
Reference: [53] <author> L. Vila and H. Yoshino. </author> <title> Time in automated legal reasoning (the long report). </title> <type> Technical Report 96-57, </type> <institution> UC Irvine, </institution> <year> 1996. </year>
Reference-contexts: 7! date * Date predicates, e.g. is holiday : date 7! ft/fg * Date operations, e.g. next holiday : date 7! day * Date transformations, e.g. week of : date 7! week * Date set operations, e.g. nth,latest,shorter of : date-set 7! date A list of them is given in <ref> [53] </ref>. 9 Although the relations are binary, only one of the arguments will be a duration variable. 10 Interpreted functions are also referred as built-in functions or operators. 12 Time Theory Provided with the set of dates as our underlying model of time, the only structural property of time that demands <p> In unary constraints, one of the timetemrs is alwasys ground. The formal syntax of the constraints is given in <ref> [53] </ref>. Temporal constraints processing is done by representing them in a constraint network and applying available efficient techniques for processing different classes of constraints: qualitative point [22, 47, 21, 16], qualitative interval [47] and metric point [15, 40]. <p> Some syntactic sugar for incidence expressions is defined to omit token symbols. The expression TT:become-effective (...) Occurs (TT) instant (TT)=I will be written as Occurs (become-effective (...),I) The formal syntax for incidence atoms is given in <ref> [53] </ref>. 4.5 Underlying Language Our proposal is independent of the underlying language. as long as it is a many-sorted language. Temporal and token sorts will be included.
Reference: [54] <author> M. Vilain, H. Kautz, and P. van Beek. </author> <title> Constraint propagation algorithms for temporal reasoning: A revised report. </title> <editor> In D. S. Weld and J. de Kleer, editors, </editor> <booktitle> Readings on Qualitative Reasoning about Physical Systems, </booktitle> <pages> pages 373-381. </pages> <publisher> Morgan Kauffman, </publisher> <year> 1989. </year>
Reference-contexts: The worst-case time complexity of checking consistency of a set of temporal constraints can at best be linear in the number of relations, but if the indefiniteness of temporal relations is non-convex it is unlikely that the problem will be tractable <ref> [54, 15] </ref>. Fortunately, in most of legal scenarios the ratio number of temporal relations vs. number of temporal propositions is relatively low and the non-convex indefiniteness is small.
Reference: [55] <author> A. Walker. </author> <title> Durees et instants. </title> <journal> Revue Scientifique, </journal> <volume> 85 </volume> <pages> 131-134, </pages> <year> 1948. </year>
Reference-contexts: The intuitions about the structure of time (such as the type of ordering, bound/unbound, discrete/dense, . . . ) are specified by a set of axioms called the theory of time. A lot of work has been done on the study of theories based on instants [48] and periods <ref> [55, 23, 36, 3] </ref>, on deriving one primitive from the other, and on defining ontologies that combine them [48, 46, 4, 8, 18, 52]. 5 Labels in bold indicate framework components and the ones in italics are either a set of axioms or a set of algorithms based on a set
Reference: [56] <author> R. Wetprasit, A. Sattar, and L. Khatib. </author> <title> Reasoning with sequences of events (an extended abstract). </title> <booktitle> In Proc. of the Intl. Workshop on Temporal Representation and Reasoning (TIME'96), </booktitle> <pages> pages 36-38, </pages> <year> 1996. </year>
Reference-contexts: This is an issue of current reseach <ref> [35, 56] </ref> that we do not address here. The Time of Law Law changes over time. New norms are introduced and some existing ones are derogated over time. A proper account of these changes is obviously important to correctly interpret the law [10, 11].
Reference: [57] <author> H. Yoshino. </author> <title> Representation of legal knowledge by compound predicate formula. </title> <editor> In D. T. C. Biagioli, G. Sartor, editor, </editor> <booktitle> Proc. of the Workshop on Legal Application of Logic Programming, </booktitle> <pages> pages 128-137. </pages> <address> ICPL'94, </address> <year> 1994. </year>
Reference-contexts: We call these atomic formula token atoms. To improve readability we emphasize the role of the token argument with some syntactic sugar: instead of offer (c,a,b,...,tt1) (where tt1 is a token term) we shall write 13 The idea behind token arguments is similar to the Compound Predicate Formula approach <ref> [57] </ref> when applied to temporal pieces of information. 14 tt1 : offer (c,a,b,...) A set of functions, called token temporal fuctions 14 , that map tokens to their relevant times is defined.
Reference: [58] <author> H. Yoshino. </author> <title> Representation of legal knowledge by legal flowchart and compound predicate formula. </title> <type> Technical Report TM-1298, </type> <institution> ICOT, </institution> <year> 1994. </year> <month> 29 </month>
References-found: 58

