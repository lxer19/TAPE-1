URL: http://www.cs.princeton.edu/~ras/clean.ps.gz
Refering-URL: http://www.cs.princeton.edu/~ras/
Root-URL: http://www.cs.princeton.edu
Title: Clean: Removing Useless Control Flow  
Date: August 1992  June 1994 June 15, 1994  
Note: Original C code written by Robert Shillner,  Webbed by John Lu,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Preston Briggs. </author> <title> The massively scalar compiler project. </title> <type> Technical Report ONR grant N00014-91-J-1989, </type> <institution> Rice University, </institution> <month> July </month> <year> 1995. </year> <note> Not yet available. </note>
Reference-contexts: the Clean routine 7ci - Unsigned_Int i; Changed = FALSE; Clean (); for (i = 1; Changed && (i &lt; iterations) ; i++) - Block_Order (); Changed = FALSE; Clean (); - 3 Macro referenced in scrap 5c. 7 Chapter 2 Details This chapter assumes familiarity with ILOC, described in <ref> [1] </ref>. The topics relevant to clean are: operations, instructions, blocks, and edges. 2.1 The Clean Routine The routine Clean performs a single postorder pass on the CFG. Transformations that apply to a block as it is being visited are performed.
Reference: [2] <author> David R. Hanson. </author> <title> Fast allocation and deallocation of memory based on object lifetimes. </title> <journal> Software - Practice and Experience, </journal> <volume> 20(1) </volume> <pages> 5-12, </pages> <month> January </month> <year> 1990. </year> <month> 39 </month>
Reference-contexts: If no input file is specified, inputFile will be set to NULL, which tells the function Block Init to use stdin. 2. Read the ILOCinput and construct the CFG, using the shared routine Block Init. 3. Initialize the memory allocation Arena, cleanArena. Arenas are described by Hanson <ref> [2] </ref>. We allocate memory in Arenas rather than using malloc, since this allows us to deallocate large portions of memory quickly and easily.
References-found: 2

