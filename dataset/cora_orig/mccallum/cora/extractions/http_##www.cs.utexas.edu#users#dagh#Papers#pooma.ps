URL: http://www.cs.utexas.edu/users/dagh/Papers/pooma.ps
Refering-URL: http://www.cs.utexas.edu/users/dagh/papers.html
Root-URL: http://www.cs.utexas.edu
Email: fparashar, browneg@cs.utexas.edu  
Title: Object Oriented Programming Abstractions for Parallel Adaptive Mesh-Refinement  Object Oriented Programming Abstractions for Parallel Adaptive Mesh-Refinement  
Author: Manish Parashar and James C. Browne 
Address: Austin  
Affiliation: Department of Computer Sciences University of Texas at  
Note: Extended Abstract submission to POOMA `96  Extented Abstract Contents  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Manish Parashar and James C. Browne, </author> <title> "An Infrastructure for Parallel Adaptive Mesh-Refinement Techniques", </title> <type> Technical report, </type> <institution> Department of Computer Sciences, University of Texas at Austin, </institution> <address> TICAM, </address> <publisher> 2.400 Taylor Hall, </publisher> <address> Austin, TX 78712, </address> <year> 1995, </year> <note> Available via WWW at http://godel.ph.utexas.edu/Members/parashar/toolkit.html. </note>
Reference-contexts: All user-level operations defined on these abstractions are independent of the structure of the dynamic grid or its distribution. Data-partitioning, load-balancing, communications and synchronization operations are transparent to the end user. The programming abstractions have been implemented within DAGH 1 <ref> [1] </ref>, a data-management infrastructure to support parallel adaptive applications. The infrastructure incorporates distributed dynamic data-structures [2] that can efficiently support adaptive grid hierarchies.
Reference: [2] <author> Manish Parashar and James C. Browne, </author> <title> "Distributed Dynamic Data-Structures for Parallel Adaptive Mesh-Refinement", </title> <booktitle> Proceedings of the International Conference for High Performance Computing, </booktitle> <month> Dec. </month> <year> 1995. </year>
Reference-contexts: Data-partitioning, load-balancing, communications and synchronization operations are transparent to the end user. The programming abstractions have been implemented within DAGH 1 [1], a data-management infrastructure to support parallel adaptive applications. The infrastructure incorporates distributed dynamic data-structures <ref> [2] </ref> that can efficiently support adaptive grid hierarchies.
Reference: [3] <author> Manish Parashar and James C. Browne, </author> <title> "On Partitioning Dynamic Adaptive Grid Hierarchies", </title> <booktitle> Proceedings of the 29 th Annual Hawaii International Conference on System Sciences, </booktitle> <month> Jan. </month> <year> 1996. </year>
Reference-contexts: When used in a parallel/distributed environment, the grid hierarchy is partitioned and distributed across the processors and serves as a template for all application variables or grid functions. The locality preserving composite distribution <ref> [3] </ref> based on recursive Space-filling Curves [4] is used to partition the dynamic grid hierarchy.
Reference: [4] <author> Hanan Samet, </author> <title> The Design and Analysis of Spatial Data Structures, </title> <publisher> Addison - Wesley Publishing Company, </publisher> <year> 1989. </year> <institution> Department of Computer Sciences & Center for Relativity * University of Texas at Austin 4.200 Taylor Hall, Austin, </institution> <address> TX 78712-1081 Tel: (512) 471-5513; Fax: (512) 471-8694; parashar@cs.utexas.edu </address>
Reference-contexts: When used in a parallel/distributed environment, the grid hierarchy is partitioned and distributed across the processors and serves as a template for all application variables or grid functions. The locality preserving composite distribution [3] based on recursive Space-filling Curves <ref> [4] </ref> is used to partition the dynamic grid hierarchy.
References-found: 4

