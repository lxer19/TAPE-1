URL: http://compgeom.cs.uiuc.edu/~jeffe/pubs/cdsimple.ps.gz
Refering-URL: http://compgeom.cs.uiuc.edu/~jeffe/pubs/cdsimple.html
Root-URL: http://www.cs.uiuc.edu
Title: Kinetic Collision Detection Between Two Simple Polygons  
Author: Julien Basch Jeff Erickson Leonidas J. Guibas John Hershberger Li Zhang 
Abstract: We design a kinetic data structure for detecting collisions between two simple polygons in motion. In order to do so, we create a planar subdivision of the free space between the two polygons, called the external relative geodesic triangulation, which certifies their disjointness. We show how this subdivision can be maintained as a kinetic data structure when the polygons are moving, and analyze its performance in the kinetic setting. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Basch, L. Guibas, and J. Hershberger. </author> <title> Data structures for mobile data. </title> <booktitle> Proc. 8th ACM-SIAM Sympos. Discrete Algorithms, </booktitle> <pages> pp. 747-756. </pages> <year> 1997. </year>
Reference-contexts: What makes this problem challenging is that the two polygons can be quite intertwined and thus in close proximity in many places at once. We adopt the point of view of kinetic data structures <ref> [1, 6] </ref>, as it is very natural for the collision detection problem. A kinetic data structure, or KDS for short, is built on the idea of maintaining a discrete attribute of objects in motion by animating a proof of its correctness through time. <p> Like the bounds for other kinetic data structures <ref> [1, 5, 6] </ref>, these bounds do not actually require the motion to be algebraic, but only that it satisfy certain combinatorial conditions. However, it is not sufficient to assume that any individual certificate can fail only a constant number of times, as it is for most previous KDSs.
Reference: [2] <author> S. Cameron. </author> <title> Collision detection by four-dimensional intersection testing. </title> <booktitle> Proc. IEEE In-ternat. Conf. Robot. Autom., </booktitle> <pages> pp. 291-302. </pages> <year> 1990. </year>
Reference-contexts: Swept volumes in space or space-time have also been used towards this goal <ref> [2, 8] </ref>. Though time-stepping at equal increments is customary for motion integration, collisions tend to be very irregularly spaced over time. If we know the motion laws of the objects, then it makes sense to try to predict exactly when collisions will happen.
Reference: [3] <author> B. Chazelle, H. Edelsbrunner, M. Grigni, L. Guibas, J. Hershberger, M. Sharir, and J. Snoeyink. </author> <title> Ray shooting in polygons using geodesic triangulations. </title> <journal> Algorithmica 12 </journal> <pages> 54-68, </pages> <year> 1994. </year> <month> 10 </month>
Reference-contexts: More specifically, we maintain a structure containing the relative convex hull [14] of the two polygons. This structure is what we call the external relative geodesic triangulation (ERGT), a planar subdivision combining the idea of the relative convex hull and of the geodesic triangulation of a simple polygon <ref> [3] </ref>. (This latter structure was also used by Mount [9] for the static problem of intersection detection.) The ERGT effectively defines a set of flexible shells surrounding each of the polygons. The space between these shells consists of pseudo-triangles, which are the basic shapes used in our tiling. <p> Observation 2.1. The edges of the ERGT are obtained by superimposing O (log n) pinned geodesic cycles for each polygon, and possibly some inner and outer common tangents of the polygons. The ERGT has a number of properties, which are straightforward generalizations of those of the geodesic triangulation of <ref> [3] </ref>. Consider a node in T P or T Q . It has an associated geodesic, and its two children define two geodesics obtained by pinning an additional vertex.
Reference: [4] <author> D. Eppstein and J. Erickson. </author> <title> Raising roofs, crashing cycles, and playing pool: Applications of a data structure for finding pairwise interactions. </title> <booktitle> Proc. 14th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pp. 58-67. </pages> <year> 1998. </year>
Reference-contexts: If we know the motion laws of the objects, then it makes sense to try to predict exactly when collisions will happen. There have been a few theoretical papers in computational geometry along these lines <ref> [4, 7, 11] </ref>, but their results are not so useful in practice because they use complex data structures and are only applicable for limited types of motion.
Reference: [5] <author> J. Erickson, L. J. Guibas, J. Stolfi, and L. Zhang. </author> <title> Separation-sensitive kinetic collision detection for convex objects. </title> <booktitle> These proceedings, </booktitle> <year> 1998. </year>
Reference-contexts: Like the bounds for other kinetic data structures <ref> [1, 5, 6] </ref>, these bounds do not actually require the motion to be algebraic, but only that it satisfy certain combinatorial conditions. However, it is not sufficient to assume that any individual certificate can fail only a constant number of times, as it is for most previous KDSs. <p> In two dimensions, we would like to integrate the approach presented in this paper with the distance sensitive approach for convex polygons in the companion paper <ref> [5] </ref>, and to generalize the structure to the case of multiple moving polygons. We still do not know whether these ideas can be successfully adapted to three-dimensional non-convex bodies. The most straighforward extension of our ideas to three dimensions leads, unfortunately, to non-polyhedral tilings of the free space.
Reference: [6] <author> L. J. Guibas. </author> <title> Kinetic data structures | A state of the art report. </title> <booktitle> Proc. 3rd Workshop on Algorithmic Foundations of Robotics, </booktitle> <address> p. </address> <note> to appear. </note> <year> 1998. </year>
Reference-contexts: What makes this problem challenging is that the two polygons can be quite intertwined and thus in close proximity in many places at once. We adopt the point of view of kinetic data structures <ref> [1, 6] </ref>, as it is very natural for the collision detection problem. A kinetic data structure, or KDS for short, is built on the idea of maintaining a discrete attribute of objects in motion by animating a proof of its correctness through time. <p> The space between these shells consists of pseudo-triangles, which are the basic shapes used in our tiling. The ERGT can be quickly updated upon certificate failures (it is responsive, as described in <ref> [6] </ref>) and has many other nice properties. For example, as we will see, the number of certificates of our separation proof is related to the size of the minimum link separator for the two polygons [13]. <p> Like the bounds for other kinetic data structures <ref> [1, 5, 6] </ref>, these bounds do not actually require the motion to be algebraic, but only that it satisfy certain combinatorial conditions. However, it is not sufficient to assume that any individual certificate can fail only a constant number of times, as it is for most previous KDSs.
Reference: [7] <author> P. Gupta, R. Janardan, and M. Smid. </author> <title> Fast algorithms for collision and proximity problems involving moving geometric objects. </title> <journal> Comput. Geom. Theory Appl. </journal> <volume> 6 </volume> <pages> 371-391, </pages> <year> 1996. </year>
Reference-contexts: If we know the motion laws of the objects, then it makes sense to try to predict exactly when collisions will happen. There have been a few theoretical papers in computational geometry along these lines <ref> [4, 7, 11] </ref>, but their results are not so useful in practice because they use complex data structures and are only applicable for limited types of motion.
Reference: [8] <author> P. M. Hubbard. </author> <title> Collision detection for interactive graphics applications. </title> <journal> IEEE Trans. Visualization and Computer Graphics 1(3) </journal> <pages> 218-230, </pages> <month> Sept. </month> <year> 1995. </year>
Reference-contexts: Swept volumes in space or space-time have also been used towards this goal <ref> [2, 8] </ref>. Though time-stepping at equal increments is customary for motion integration, collisions tend to be very irregularly spaced over time. If we know the motion laws of the objects, then it makes sense to try to predict exactly when collisions will happen.
Reference: [9] <author> D. M. Mount. </author> <title> Intersection detection and separators for simple polygons. </title> <booktitle> Proc. 8th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pp. 303-311. </pages> <year> 1992. </year>
Reference-contexts: This structure is what we call the external relative geodesic triangulation (ERGT), a planar subdivision combining the idea of the relative convex hull and of the geodesic triangulation of a simple polygon [3]. (This latter structure was also used by Mount <ref> [9] </ref> for the static problem of intersection detection.) The ERGT effectively defines a set of flexible shells surrounding each of the polygons. The space between these shells consists of pseudo-triangles, which are the basic shapes used in our tiling.
Reference: [10] <author> M. K. Ponamgi, D. Manocha, and M. C. Lin. </author> <title> Incremental algorithms for collision detection between general solid models. </title> <booktitle> Proc. ACM Siggraph Sym-pos. Solid Modeling, </booktitle> <pages> pp. 293-304. </pages> <year> 1995. </year>
Reference-contexts: Motion in the physical world is in general continuous over time, and many systems attempt to speed up collision checking by exploiting this temporal coherence, instead of repeating a full collision check ab initio at each time step <ref> [10] </ref>. Swept volumes in space or space-time have also been used towards this goal [2, 8]. Though time-stepping at equal increments is customary for motion integration, collisions tend to be very irregularly spaced over time.
Reference: [11] <author> E. Schomer and C. Thiel. </author> <title> Efficient collision detection for moving polyhedra. </title> <booktitle> Proc. 11th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pp. 51-60. </pages> <year> 1995. </year>
Reference-contexts: If we know the motion laws of the objects, then it makes sense to try to predict exactly when collisions will happen. There have been a few theoretical papers in computational geometry along these lines <ref> [4, 7, 11] </ref>, but their results are not so useful in practice because they use complex data structures and are only applicable for limited types of motion.
Reference: [12] <author> M. Sharir and P. K. Agarwal. </author> <title> Davenport-Schinzel Sequences and Their Geometric Applications. </title> <publisher> Cambridge University Press, </publisher> <address> New York, </address> <year> 1995. </year>
Reference-contexts: The bound now follows from standard lower-envelope results <ref> [12] </ref>. A similar argument applies when p 2 C (b; a)" 0 (a; b), and, with extra care, when the appearing P P edge is between a vertex in C (a; b) and one in C (b; a) " 0 (a; b).
Reference: [13] <author> S. Suri. </author> <title> Minimum link paths in polygons and related problems. </title> <type> Ph.D. thesis, </type> <institution> Dept. Comput. Sci., Johns Hopkins Univ., Baltimore, MD, </institution> <year> 1987. </year>
Reference-contexts: For example, as we will see, the number of certificates of our separation proof is related to the size of the minimum link separator for the two polygons <ref> [13] </ref>. Thus our separation proof automatically adapts to the complexity of the relative placement of the two polygons|from a single separating line when the polygons are far apart to as complex as necessary when they have many points of near contact.
Reference: [14] <author> G. T. Toussaint. </author> <title> Shortest path solves translation separability of polygons. </title> <type> Report SOCS-85.27, </type> <institution> School Comput. Sci., McGill Univ., </institution> <year> 1985. </year>
Reference-contexts: These desiderata are directly related to the compactness, efficiency, and responsiveness of our KDS. We obtain such a tiling by maintaining a moving polygonal line separating the two polygons. More specifically, we maintain a structure containing the relative convex hull <ref> [14] </ref> of the two polygons.
References-found: 14

