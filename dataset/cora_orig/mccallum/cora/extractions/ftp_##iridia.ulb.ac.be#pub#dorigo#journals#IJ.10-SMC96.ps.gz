URL: ftp://iridia.ulb.ac.be/pub/dorigo/journals/IJ.10-SMC96.ps.gz
Refering-URL: http://iridia.ulb.ac.be/dorigo/pub_x_subj.html
Root-URL: 
Email: Email: mdorigo@ulb.ac.be  Email: maniezzo@csr.unibo.it  Email: colorni@elet.polimi.it  
Title: The Ant System: Optimization by a colony of cooperating agents  
Author: Marco Dorigo Member, IEEE, Vittorio Maniezzo and Alberto Colorni 
Web: URL: http://iridia.ulb.ac.be/dorigo/dorigo.html  Vol.26, No.1, pp.113.  
Address: Bruxelles, Avenue Franklin Roosevelt 50, CP 194/6, 1050 Brussels, Belgium.  Milano, Piazza Leonardo da Vinci 32, 20133 Milano, Italy.  Via Sacchi 3, 47023 Cesena, Italy.  Piazza Leonardo da Vinci 32, I-20133 Milano, Italy.  
Affiliation: IRIDIA, Universit Libre de  Politecnico di Milano Artificial Intelligence and Robotics Project, Dipartimento di Elettronica e Informazione, Politecnico di  Dipartimento di Scienze dell'Informazione, Universit di Bologna,  Centro di Teoria dei Sistemi del CNR, Dipartimento di Elettronica e Informazione, Politecnico di Milano,  
Date: 1996, pp.1-13 1  
Note: IEEE Transactions on Systems, Man, and CyberneticsPart B, Vol.26, No.1,  Copyright notice Copyright 1996 Institute of Electrical and Electronics Engineers. Published in the IEEE Transactions on Systems, Man, and Cybernetics, PartB,  By choosing to view this document, you agree to all provisions of the copyright laws protecting it.  
Abstract: An analogy with the way ant colonies function has suggested the definition of a new computational paradigm, which we call Ant System. We propose it as a viable new approach to stochastic combinatorial optimization. The main characteristics of this model are positive feedback, distributed computation, and the use of a constructive greedy heuristic. Positive feedback accounts for rapid discovery of good solutions, distributed computation avoids premature convergence, and the greedy heuristic helps find acceptable solutions in the early stages of the search process. We apply the proposed methodology to the classical Traveling Salesman Problem (TSP), and report simulation results. We also discuss parameter selection and the early setups of the model, and compare it with tabu search and simulated annealing using TSP. To demonstrate the robustness of the approach, we show how the Ant System (AS) can be applied to other optimization problems like the asymmetric traveling salesman, the quadratic assignment and the jobshop scheduling. Finally we discuss the salient characteristics global data structure revision, distributed communication and probabilistic transitions of the AS. This material is posted here with permission of the IEEE. Such permission of the IEEE does not in any way imply IEEE endorsement of any of [company's] products or services. Internal or personal use of this material is permitted. However, permission to reprint/republish this material for advertising or promotional purposes or for creating new collective works for resale or redistribution must be obtained from the IEEE by sending a blank email message to info.pub.permission@ieee.org. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E.H.L.Aarts, J.H.M.Korst, </author> <title> Simulated Annealing and Boltzmann Machines, </title> <publisher> John Wiley, </publisher> <year> 1988. </year> <title> 1 0 Reinforcement of this nature is used by the reproductionselection mechanism in evolutionary algorithms [23], [30], [33]. The main difference is that in evolutionary algorithms it is applied to favor (or disfavor) complete solutions, while in AS it is used to build solutions. </title> <journal> IEEE Transactions on Systems, Man, and CyberneticsPart B, Vol.26, No.1, 1996, </journal> <volume> pp.1-13 2 5 </volume>
Reference-contexts: Comparison with general-purpose heuristics We also compare ant-cycle with other general-purpose heuristics. This comparison is more fair to the AS, which in fact is a general-purpose heuristic, and not a specialized algorithm for the TSP. To run the comparisons, we implemented a Simulated Annealing (SA) <ref> [1] </ref>, and a Tabu Search (TS) [17], [18]; we let each of them run 10 times on the Oliver30 data. SA used the annealing function T (t+1)=aT (t), with a=0.99; TS was implemented with tabu list length varying in the interval [20, 50].
Reference: [2] <author> J.L.Bentley, </author> <title> "Fast Algorithms for Geometric Traveling Salesman Problems," </title> <journal> ORSA Journal on Computing, </journal> <volume> 4 (4), 387411, </volume> <year> 1992. </year>
Reference-contexts: In Fig.9 we present the best tour 4 we found using the experimentally determined optimal set of parameters values for the ant-cycle algorithm, a=1, b=5, r=0.5, Q=100. This tour is of 4 This result is not competitive with results obtained by special-purpose algorithms <ref> [2] </ref>. IEEE Transactions on Systems, Man, and CyberneticsPart B, Vol.26, No.1, 1996, pp.1-13 1 3 length 423.741 and presents two inversions, 21 and 2524, with respect to the best tour published in [34]. 1 3 5 8 11 13 15 17 19 21 24 26 28 Fig. 9.
Reference: [3] <author> H.Bersini, F.J.Varela, </author> <title> "The Immune Recruitment Mechanism: a Selective Evolutionary Strategy," </title> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <publisher> Morgan Kaufmann, </publisher> <address> 520526, </address> <year> 1991. </year>
Reference-contexts: We believe that, especially if we are interested in designing inherently parallel algorithms, observation of natural systems can be an invaluable source of inspiration. Neural networks [32], genetic algorithms [23], evolution strategies [30], [33], immune networks <ref> [3] </ref>, simulated annealing [24] are only some examples of models with a "natural flavor". The main characteristics, which are at least partially shared by members of this class of algorithms, are the use of a natural metaphor, inherent parallelism, stochastic nature, adaptivity, and the use of positive feedback.
Reference: [4] <author> S.C.Boyd, W.R.Pulleyblank, G.Cornuejols, </author> <title> Travel Software Package, </title> <institution> Carleton University, </institution> <year> 1989. </year>
Reference-contexts: VI. Comparison with other heuristics In this section we compare the efficacy of our algorithm to that of other heuristics, both tailored and general-purpose. A. Comparison with TSP-tailored heuristics In this section we compare ant-cycle with the heuristics contained in the package "Travel" <ref> [4] </ref>. This package represents the distances between the cities as an integer matrix and so we implemented an analogous representation in our system 7 .
Reference: [5] <author> R.E.Burkhard, </author> <title> "Quadratic Assignment Problems," </title> <journal> European Journal of Operations Research, </journal> <volume> 15, 283289, </volume> <year> 1984. </year>
Reference-contexts: Experiments were run on IBM-compatible PCs with a 80286 Intel processor, and were stopped after one hour time. The test problems used are those known as Nugent problems [29], Elshafei [15], and Krarup [25]. As can be seen in Table V, the performance of AS was always very good <ref> [5] </ref>. Ant system always found a result within 5% of the best known, while AS with local optimization always found, except for the Nugent 30 problem, the best known solution. This application is described in details in [28]. Table V. Comparison of the AS with other heuristic approaches.
Reference: [6] <author> A.Colorni, M.Dorigo, V.Maniezzo, </author> <title> "Distributed Optimization by Ant Colonies," </title> <booktitle> Proceedings of the First European Conference on Artificial Life, Paris, France, </booktitle> <editor> F.Varela and P.Bourgine (Eds.), </editor> <publisher> Elsevier Publishing, </publisher> <address> 134142, </address> <year> 1991. </year>
Reference-contexts: The values tested were: a-0, 0.5, 1, 2, 5-, b-0, 1, 2, 5-, r-0.3, 0.5, 0.7, 0.9, 0.999- and Q-1, 100, 10000-. Preliminary results, obtained on smallscale problems, have been presented in <ref> [6] </ref>, [7], and [12], [13]; all the tests reported in this section are based, where not IEEE Transactions on Systems, Man, and CyberneticsPart B, Vol.26, No.1, 1996, pp.1-13 9 otherwise stated, on the Oliver30 problem, a 30-cities problem described in [34] 3 . <p> On the other side, both ant-quantity and ant-density use local information. Their search is not directed by any measure of the final result achieved. Therefore, it is not surprising that they gave worse performance results (details can be found in <ref> [6] </ref>). The optimal value r = 0.5 in ant-cycle can be explained by the fact that the algorithm, after using the greedy heuristic to guide search in the early stages of computation, starts exploiting the global information contained in the values t ij of trail.
Reference: [7] <author> A.Colorni, M.Dorigo, V.Maniezzo, </author> <title> "An Investigation of some Properties of an Ant Algorithm," </title> <booktitle> Proceedings of the Parallel Problem Solving from Nature Conference (PPSN 92), </booktitle> <address> Brussels, </address> <publisher> Belgium, </publisher> <editor> R.Mnner and B.Manderick (Eds.), </editor> <publisher> Elsevier Publishing, </publisher> <pages> 509-520, </pages> <year> 1992. </year>
Reference-contexts: The values tested were: a-0, 0.5, 1, 2, 5-, b-0, 1, 2, 5-, r-0.3, 0.5, 0.7, 0.9, 0.999- and Q-1, 100, 10000-. Preliminary results, obtained on smallscale problems, have been presented in [6], <ref> [7] </ref>, and [12], [13]; all the tests reported in this section are based, where not IEEE Transactions on Systems, Man, and CyberneticsPart B, Vol.26, No.1, 1996, pp.1-13 9 otherwise stated, on the Oliver30 problem, a 30-cities problem described in [34] 3 .
Reference: [8] <author> A.Colorni, M.Dorigo, V.Maniezzo, M.Trubian, </author> <title> "Ant system for JobShop Scheduling," </title> <journal> JORBEL - Belgian Journal of Operations Research, Statistics and Computer Science, </journal> <volume> 34, 1, </volume> <pages> 3953. </pages>
Reference-contexts: This approach has been implemented and successfully applied to JSP instances of dimension 10x10 and 10x15 (10 jobs, 15 machines). For each of these problems we always obtained a solution within 10% of the optimum <ref> [8] </ref>, which can be considered a promising result. VIII. Discussion of some AS characteristics A major issue in defining any distributed system is the definition of the communication protocol.
Reference: [9] <author> A.Colorni, M.Dorigo, F.Maffioli, V.Maniezzo, G.Righini, M.Trubian, </author> <title> "Heuristics from Nature for Hard Combinatorial Problems," </title> <note> International Transactions in Operational Research, in press. </note>
Reference: [10] <author> J.L.Deneubourg, J.M.Pasteels, J.C.Verhaeghe, </author> <title> "Probabilistic Behaviour in Ants: a Strategy of Errors?," </title> <journal> Journal of Theoretical Biology, </journal> <volume> 105, 259271, </volume> <year> 1983. </year>
Reference: [11] <author> J.L.Deneubourg, S.Goss, </author> <title> "Collective patterns and decision-making," Ethology, Ecology & Evolution, </title> <journal> Vol.1, </journal> <volume> 295311, </volume> <year> 1989. </year>
Reference: [12] <author> M.Dorigo, </author> <title> Optimization, Learning and Natural Algorithms, </title> <type> Ph.D. Thesis, </type> <institution> Dip. Elettronica e Informazione, Politecnico di Milano, Italy, </institution> <year> 1992. </year>
Reference-contexts: 1 An autocatalytic <ref> [12] </ref>, i.e. positive feedback, process is a process that reinforces itself, in a way that causes very rapid convergence and, if no limitation mechanism exists, leads to explosion. <p> The values tested were: a-0, 0.5, 1, 2, 5-, b-0, 1, 2, 5-, r-0.3, 0.5, 0.7, 0.9, 0.999- and Q-1, 100, 10000-. Preliminary results, obtained on smallscale problems, have been presented in [6], [7], and <ref> [12] </ref>, [13]; all the tests reported in this section are based, where not IEEE Transactions on Systems, Man, and CyberneticsPart B, Vol.26, No.1, 1996, pp.1-13 9 otherwise stated, on the Oliver30 problem, a 30-cities problem described in [34] 3 .
Reference: [13] <author> M.Dorigo, V.Maniezzo, A.Colorni, </author> <title> "Positive feedback as a search strategy," </title> <type> Technical Report n. 91-016, </type> <institution> Politecnico di Milano, </institution> <year> 1991. </year>
Reference-contexts: The values tested were: a-0, 0.5, 1, 2, 5-, b-0, 1, 2, 5-, r-0.3, 0.5, 0.7, 0.9, 0.999- and Q-1, 100, 10000-. Preliminary results, obtained on smallscale problems, have been presented in [6], [7], and [12], <ref> [13] </ref>; all the tests reported in this section are based, where not IEEE Transactions on Systems, Man, and CyberneticsPart B, Vol.26, No.1, 1996, pp.1-13 9 otherwise stated, on the Oliver30 problem, a 30-cities problem described in [34] 3 .
Reference: [14] <author> S.Eilon, T.H.Watson-Gandy, N.Christofides, </author> <title> "Distribution management: mathematical modeling and practical analysis," </title> <journal> Operational Research Quarterly, </journal> <volume> 20, 3753, </volume> <year> 1969. </year>
Reference-contexts: The algorithm finds good values for Oliver30 very quickly and the new optimal value (423.741) after NC=342 cycles. We partially tested the ant-cycle algorithm on the Eilon50 and Eilon75 problems <ref> [14] </ref> with a limited number of runs and with a number of cycles bounded by NC MAX =3000.
Reference: [15] <author> Elshafei A.E., </author> <title> "Hospital Layout as a Quadratic Assignment Problem", </title> <journal> Operational Research Quarterly, </journal> <volume> 28, 167179, </volume> <year> 1977. </year>
Reference-contexts: Experiments were run on IBM-compatible PCs with a 80286 Intel processor, and were stopped after one hour time. The test problems used are those known as Nugent problems [29], Elshafei <ref> [15] </ref>, and Krarup [25]. As can be seen in Table V, the performance of AS was always very good [5]. Ant system always found a result within 5% of the best known, while AS with local optimization always found, except for the Nugent 30 problem, the best known solution.
Reference: [16] <author> M.Fischetti, P.Toth, </author> <title> "An Additive Bounding Procedure for the Asymmetric Travelling Salesman Problem," </title> <journal> Mathematical Programming, </journal> <volume> 53, 173197, </volume> <year> 1992. </year>
Reference-contexts: is more difficult than the TSP; in fact, while symmetric TSP can be solved optimally even on graphs with several thousand nodes, ATSP instances, and particularly ATSP instances where the distance matrix is almost symmetric, can be solved to the optimum only on graphs with a few dozen nodes [26], <ref> [16] </ref>. 8 The name "basic" means the basic heuristic, with no improvement. IEEE Transactions on Systems, Man, and CyberneticsPart B, Vol.26, No.1, 1996, pp.1-13 1 9 The application of the AS to the ATSP is straightforward, as no modifications of the basic algorithm are necessary. <p> The computational complexity of a cycle of the algorithm remains the same as in the TSP application, as the only differences are in the distance and trail matrices which are no longer symmetric. We chose as test problem the RY48P problem <ref> [16] </ref>, a difficult problem instance with a distance distribution that is hard to solve even with tailored heuristics and branch and bound procedures. We ran AS 5 times on it, each time for 4000 cycles.
Reference: [17] <author> F.Glover, </author> <title> "Tabu SearchPart I," </title> <journal> ORSA Journal on Computing, </journal> <volume> 1 (3), 190206, </volume> <year> 1989. </year>
Reference-contexts: This comparison is more fair to the AS, which in fact is a general-purpose heuristic, and not a specialized algorithm for the TSP. To run the comparisons, we implemented a Simulated Annealing (SA) [1], and a Tabu Search (TS) <ref> [17] </ref>, [18]; we let each of them run 10 times on the Oliver30 data. SA used the annealing function T (t+1)=aT (t), with a=0.99; TS was implemented with tabu list length varying in the interval [20, 50].
Reference: [18] <author> F.Glover, </author> <title> "Tabu SearchPart II," </title> <journal> ORSA Journal on Computing, </journal> <volume> 2 (1), 432, </volume> <year> 1990. </year>
Reference-contexts: This comparison is more fair to the AS, which in fact is a general-purpose heuristic, and not a specialized algorithm for the TSP. To run the comparisons, we implemented a Simulated Annealing (SA) [1], and a Tabu Search (TS) [17], <ref> [18] </ref>; we let each of them run 10 times on the Oliver30 data. SA used the annealing function T (t+1)=aT (t), with a=0.99; TS was implemented with tabu list length varying in the interval [20, 50].
Reference: [19] <author> D.E.Goldberg, </author> <title> Genetic Algorithms in Search, Optimization & Machine Learning, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1989. </year> <title> 2 6 Dorigo et al.: Ant System: Optimization by a Colony of Cooperating Agents </title>
Reference-contexts: Elitist strategy We use the term "elitist strategy" (because in some way it resembles the elitist strategy used in genetic algorithms <ref> [19] </ref>) for the modified algorithm in which at every cycle the trail laid on the edges belonging to the best-so-far tour is reinforced more than in the standard version. We added to the trail of each arc of the best tour a quantity e .
Reference: [20] <author> B.Golden, W.Stewart, </author> <title> "Empiric analysis of heuristics," in The Travelling Salesman Problem, </title> <editor> E. L. Lawler, J. K. Lenstra, A. H. G. Rinnooy-Kan, D. B. Shmoys eds., </editor> <address> New York:Wiley, </address> <year> 1985. </year>
Reference-contexts: Conclusions are in Section IX. II. The Ant System In this section we introduce the AS. We decided to use the well-known traveling salesman problem [26] as benchmark, in order to make the comparison with other heuristic approaches easier <ref> [20] </ref>. Although the model definition is influenced by the problem structure, we will show in Section VII that the same approach can be used to solve other optimization problems. <p> Typical run. IEEE Transactions on Systems, Man, and CyberneticsPart B, Vol.26, No.1, 1996, pp.1-13 1 1 The same process can be observed in the graphs of Fig. 6, where the AS was applied to a very simple 10-cities problem (CCA0, from <ref> [20] </ref>), and which depict the effect of ant search on the trail distribution. In the figure the length of the edges is proportional to the distances between the towns; the thickness of the edges is proportional to their trail level. <p> SA used the annealing function T (t+1)=aT (t), with a=0.99; TS was implemented with tabu list length varying in the interval <ref> [20, 50] </ref>. TS and SA, and the AS as well, were allowed to run for 1 hour on a IBM-compatible PC with 80386 Intel processor. The results are presented in Table IV.
Reference: [21] <author> S.Goss, R.Beckers, J.L.Deneubourg, S.Aron, J.M.Pasteels, </author> <title> "How Trail Laying and Trail Following Can Solve Foraging Problems for Ant Colonies," in Behavioural Mechanisms of Food Selection, </title> <editor> R.N.Hughes ed., </editor> <booktitle> NATO-ASI Series, vol. </booktitle> <address> G 20, Berlin:Springer-Verlag, </address> <year> 1990. </year>
Reference: [22] <author> R.L.Graham, E.L.Lawler, J.K.Lenstra, A.H.G.Rinnooy Kan, </author> <title> Optimization and Approximation in Deterministic Sequencing and Scheduling: a Survey, </title> <journal> in Annals of Discrete Mathematics, </journal> <volume> 5, </volume> <pages> 287-326, </pages> <year> 1979. </year>
Reference-contexts: N=|O| is the total number of operations. The problem is to assign the operations to time intervals in such a way that no two jobs are processed at the same time on the same machine and the maximum of the completion times of all operations is minimized <ref> [22] </ref>. To apply the AS to JSP we chose the following representation.
Reference: [23] <editor> J.H.Holland, </editor> <booktitle> Adaptation in Natural and Artificial Systems, </booktitle> <address> Ann Arbor: </address> <publisher> The University of Michigan Press, </publisher> <year> 1975. </year>
Reference-contexts: We believe that, especially if we are interested in designing inherently parallel algorithms, observation of natural systems can be an invaluable source of inspiration. Neural networks [32], genetic algorithms <ref> [23] </ref>, evolution strategies [30], [33], immune networks [3], simulated annealing [24] are only some examples of models with a "natural flavor".
Reference: [24] <author> S.Kirkpatrick, C.D.Gelatt, M.P.Vecchi, </author> <title> "Optimization by Simulated Annealing," </title> <journal> Science, </journal> <volume> 220, 671680, </volume> <year> 1983. </year>
Reference-contexts: We believe that, especially if we are interested in designing inherently parallel algorithms, observation of natural systems can be an invaluable source of inspiration. Neural networks [32], genetic algorithms [23], evolution strategies [30], [33], immune networks [3], simulated annealing <ref> [24] </ref> are only some examples of models with a "natural flavor". The main characteristics, which are at least partially shared by members of this class of algorithms, are the use of a natural metaphor, inherent parallelism, stochastic nature, adaptivity, and the use of positive feedback.
Reference: [25] <author> J. Krarup, </author> <title> P.M. Pruzan, "Computer-aided Layout Design," M a t h e m a t i c a l Programming Study, </title> <type> 9, 8594, </type> <year> 1978. </year>
Reference-contexts: Experiments were run on IBM-compatible PCs with a 80286 Intel processor, and were stopped after one hour time. The test problems used are those known as Nugent problems [29], Elshafei [15], and Krarup <ref> [25] </ref>. As can be seen in Table V, the performance of AS was always very good [5]. Ant system always found a result within 5% of the best known, while AS with local optimization always found, except for the Nugent 30 problem, the best known solution.
Reference: [26] <editor> E.L.Lawler, J.K.Lenstra, A.H.G.Rinnooy-Kan, D.B.Shmoys eds., </editor> <title> The Travelling Salesman Problem, </title> <address> New York:Wiley, </address> <year> 1985. </year>
Reference-contexts: In Section VIII we informally discuss why and how the AS paradigm functions. Conclusions are in Section IX. II. The Ant System In this section we introduce the AS. We decided to use the well-known traveling salesman problem <ref> [26] </ref> as benchmark, in order to make the comparison with other heuristic approaches easier [20]. Although the model definition is influenced by the problem structure, we will show in Section VII that the same approach can be used to solve other optimization problems. <p> ATSP is more difficult than the TSP; in fact, while symmetric TSP can be solved optimally even on graphs with several thousand nodes, ATSP instances, and particularly ATSP instances where the distance matrix is almost symmetric, can be solved to the optimum only on graphs with a few dozen nodes <ref> [26] </ref>, [16]. 8 The name "basic" means the basic heuristic, with no improvement. IEEE Transactions on Systems, Man, and CyberneticsPart B, Vol.26, No.1, 1996, pp.1-13 1 9 The application of the AS to the ATSP is straightforward, as no modifications of the basic algorithm are necessary.
Reference: [27] <author> S.Lin, B.W.Kernighan, </author> <title> "An effective Heuristic Algorithm for the TSP," </title> <journal> Operations Research, </journal> <volume> 21, 498516, </volume> <year> 1973. </year>
Reference-contexts: Comparisons have been carried out also with the Lin-Kernighan <ref> [27] </ref> improvement of the first-column solutions, which has been able to reduce the length of any tour to 420 (or 421, depending on the starting solution provided by the basic algorithms).
Reference: [28] <author> V. Maniezzo, A.Colorni, M.Dorigo, </author> <title> The Ant System Applied to the Quadratic Assignment Problem, </title> <institution> Tech.Rep.IRIDIA/94-28, Universit Libre de Bruxelles, Belgium, </institution> <year> 1994. </year>
Reference-contexts: We compared AS, and a version of the AS to which was added a non deterministic hill climbing procedure, with many other well know heuristics (see <ref> [28] </ref> for more details). Experiments were run on IBM-compatible PCs with a 80286 Intel processor, and were stopped after one hour time. The test problems used are those known as Nugent problems [29], Elshafei [15], and Krarup [25]. <p> Ant system always found a result within 5% of the best known, while AS with local optimization always found, except for the Nugent 30 problem, the best known solution. This application is described in details in <ref> [28] </ref>. Table V. Comparison of the AS with other heuristic approaches. Results are averaged over five runs. Best known results are in bold.
Reference: [29] <author> C.E. Nugent, T.E. Vollmann, J. Ruml, </author> <title> "An Experimental Comparison of Techniques for the Assignment of Facilities to Locations," </title> <journal> Operations Research, </journal> <volume> 16, 150173, </volume> <year> 1968. </year>
Reference-contexts: Experiments were run on IBM-compatible PCs with a 80286 Intel processor, and were stopped after one hour time. The test problems used are those known as Nugent problems <ref> [29] </ref>, Elshafei [15], and Krarup [25]. As can be seen in Table V, the performance of AS was always very good [5].
Reference: [30] <author> I.Rechenberg, </author> <title> Evolutionsstrategie, </title> <address> Fromman-Holzbog, Stuttgart, Germany, </address> <year> 1973. </year>
Reference-contexts: We believe that, especially if we are interested in designing inherently parallel algorithms, observation of natural systems can be an invaluable source of inspiration. Neural networks [32], genetic algorithms [23], evolution strategies <ref> [30] </ref>, [33], immune networks [3], simulated annealing [24] are only some examples of models with a "natural flavor".
Reference: [31] <institution> G.Reinelt, TSPLIB 1.0, Institut fr Mathematik, Universitt Augsburg, Germany, </institution> <year> 1990. </year>
Reference-contexts: This indicates that the ants followed different tours. 7 In this case distances between towns are integer numbers and are computed according to the standard code proposed in <ref> [31] </ref>. 1 8 Dorigo et al.: Ant System: Optimization by a Colony of Cooperating Agents Table III. Performance of the ant-cycle algorithm compared with other approaches.
Reference: [32] <editor> D.E.Rumelhart, J.L.McLelland, </editor> <booktitle> Parallel Distributed Processing: Explorations in the Microstructure of Cogniton, </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press, </publisher> <year> 1986. </year>
Reference-contexts: We believe that, especially if we are interested in designing inherently parallel algorithms, observation of natural systems can be an invaluable source of inspiration. Neural networks <ref> [32] </ref>, genetic algorithms [23], evolution strategies [30], [33], immune networks [3], simulated annealing [24] are only some examples of models with a "natural flavor".
Reference: [33] <author> H.-P. Schwefel, </author> <title> "Evolutionsstrategie und Numerische Optimierung," </title> <type> Ph.D. Thesis, </type> <institution> Technische Universitt Berlin, </institution> <year> 1975. </year> <note> Also available as Numerical Optimization of Computer Models, J.Wiley, </note> <year> 1981. </year>
Reference-contexts: We believe that, especially if we are interested in designing inherently parallel algorithms, observation of natural systems can be an invaluable source of inspiration. Neural networks [32], genetic algorithms [23], evolution strategies [30], <ref> [33] </ref>, immune networks [3], simulated annealing [24] are only some examples of models with a "natural flavor".
Reference: [34] <author> D.Whitley, T.Starkweather, D.Fuquay, </author> <title> "Scheduling Problems and Travelling Salesman: the Genetic Edge Recombination Operator," </title> <booktitle> Proceedings of the Third International Conference on Genetic Algorithms, </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1989. </year>
Reference-contexts: Preliminary results, obtained on smallscale problems, have been presented in [6], [7], and [12], [13]; all the tests reported in this section are based, where not IEEE Transactions on Systems, Man, and CyberneticsPart B, Vol.26, No.1, 1996, pp.1-13 9 otherwise stated, on the Oliver30 problem, a 30-cities problem described in <ref> [34] </ref> 3 . All the tests have been carried out for NC MAX = 5000 cycles and were averaged over ten trials. <p> Note how at the beginning of the run an ant could go from any node to any other (except for tabu list constraints), while at the end the possible choices are significantly reduced. 3 In <ref> [34] </ref> genetic algorithms were applied to solve the Oliver30 problem; they could find a tour of length 424.635. <p> This tour is of 4 This result is not competitive with results obtained by special-purpose algorithms [2]. IEEE Transactions on Systems, Man, and CyberneticsPart B, Vol.26, No.1, 1996, pp.1-13 1 3 length 423.741 and presents two inversions, 21 and 2524, with respect to the best tour published in <ref> [34] </ref>. 1 3 5 8 11 13 15 17 19 21 24 26 28 Fig. 9. The best tour obtained with 342 cycles of the ant-cycle algorithm for the Oliver30 problem (a=1, b=5, r=0.5, Q=100), real length = 423.741, integer length = 420.
References-found: 34

