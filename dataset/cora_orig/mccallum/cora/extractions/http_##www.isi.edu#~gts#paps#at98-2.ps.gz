URL: http://www.isi.edu/~gts/paps/at98-2.ps.gz
Refering-URL: http://www.isi.edu/~gts/CLIQUES/
Root-URL: http://www.isi.edu
Title: Some Open Issues and New Directions in Group Signatures  
Author: Giuseppe Ateniese Gene Tsudik 
Keyword: Public-key Cryptography, Digital Signatures, Group Signatures, Multi-Group Signa tures, Sub-Group Signatures, Coalition Attacks, Revocation.  
Note: Submitted to FC'99 on  work done while visiting  
Address: Via Dodecaneso, 35 4676 Admiralty Way 16146 Genova, Italy Marina Del Rey, CA 90292, USA  
Affiliation: DISI, Universita di Genova USC Information Sciences Institute  USC Information Sciences Institute.  
Email: ateniese@disi.unige.it gts@isi.edu  
Date: September 27, 1998  
Abstract: Group signatures allow any member of a potentially large group to sign on behalf of the group. Group signatures are anonymous and unlinkable for everyone with the exception of a designated group manager who can co-relate signatures and reveal the identity of the actual signer. At the same time, no one (including a group manager) can misattribute a valid group signature. Group signatures are claimed to have many practical applications in e-commerce as well as in military and legal fields. Despite some interesting and eclectic results, group signatures remain confined to academic literature. The focus of this paper is two-fold. First, it discusses certain issues that stand in the way of practical applications of group signatures and uses the example of on recent group signature scheme to illustrate certain problems. Second, this paper (informally) introduces some practical security services that can be constructed using any group signature scheme. Sample realizations of these services are provided. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Boyd. Multi-signatures. </author> <note> In Check this citation!, 1989. 14 </note>
Reference-contexts: One novel and practical service that can be built using group signatures as a primitive is multi-group signatures. (Not to be confused with so-called multi-signatures <ref> [1] </ref>.) Informally, we define a multi-group signature (MGS) as a set of regular group signatures generated by the same entity (signer) who is a member of multiple groups.
Reference: [2] <author> M. Burmester and Y. Desmedt. </author> <title> A secure and efficient conference key distribution system. </title> <booktitle> In Advances in Cryptology - EUROCRYPT, </booktitle> <year> 1994. </year>
Reference-contexts: In our case, r needs to be generated collectively by the sub-group of signers. There are many methods for doing this; one possibility is to run a group Diffie-Hellman key agreement protocol (e.g., <ref> [2] </ref> or [10]) and, as a result, generate a common: g := g r where r = a r 1 r i (modn) and i is the size of the sub-group and each r j is generated at random by the j-th signer.
Reference: [3] <author> J. Camenisch. </author> <title> Efficient and generalized group signatures. </title> <booktitle> In Advances in Cryptology - EURO-CRYPT, </booktitle> <year> 1997. </year>
Reference-contexts: Others require the group manager to contact each member in order to open a signature, i.e., to reveal the identity of the signer. A number of improvements and enhancements followed the initial work. Some notable results are due to Chen/Pedersen [7], Camenisch <ref> [3] </ref>, Petersen [9] and Camenisch/Stadler [4]. In [7], two schemes were proposed providing information theoretic and computational anonymity, respectively. Unfortunately, the proposed scheme allows the group manager to misattribute a signature, i.e., falsely accuse a group member of having signed a message. In [3] an efficient group signature scheme was presented, <p> results are due to Chen/Pedersen [7], Camenisch <ref> [3] </ref>, Petersen [9] and Camenisch/Stadler [4]. In [7], two schemes were proposed providing information theoretic and computational anonymity, respectively. Unfortunately, the proposed scheme allows the group manager to misattribute a signature, i.e., falsely accuse a group member of having signed a message. In [3] an efficient group signature scheme was presented, providing computational anonymity, ability to add (or remove) group members after the initial setup, and the possibility of being generalized by allowing authorized set of group members to sign collectively (appearing to verifiers as a single 1 Note that the above does not <p> Now, whether an MGS scheme can be built out of existing group signature schemes is an entirely separate issue. We have considered several group signature schemes from the literature. Some are not easily converted, e.g., <ref> [3] </ref>. However, at least one scheme, CS97 [4], can be used as building block for a secure MGS scheme. 8 MGS Example We begin with a short overview of the CS97 basic scheme. <p> We should stress that the notion of SGS is very different from that of coalition group signatures as defined by Camenisch in <ref> [3] </ref>. Coalition group signatures are indistinguishable from single-member group signatures by verifiers. Only the group manager can (via OPEN) determine the coalition size and structure. In contrast, in SGS the size of the signing sub-group (or coalition) must be explicit and verifiable by anyone. (As a sidenote, the scheme in [3] <p> <ref> [3] </ref>. Coalition group signatures are indistinguishable from single-member group signatures by verifiers. Only the group manager can (via OPEN) determine the coalition size and structure. In contrast, in SGS the size of the signing sub-group (or coalition) must be explicit and verifiable by anyone. (As a sidenote, the scheme in [3] includes a method for obtaining coalition signatures; however, the coalition structures are fixed a priori by the group manager. This limits the utility of the whole concept.) Consider the following example applications of SGS: * A petition is circulated among members of a certain group.
Reference: [4] <author> J. Camenisch and M. Stadler. </author> <title> Efficient group signature schemes for large groups. </title> <booktitle> In Advances in Cryptology - CRYPTO, </booktitle> <year> 1997. </year>
Reference-contexts: Others require the group manager to contact each member in order to open a signature, i.e., to reveal the identity of the signer. A number of improvements and enhancements followed the initial work. Some notable results are due to Chen/Pedersen [7], Camenisch [3], Petersen [9] and Camenisch/Stadler <ref> [4] </ref>. In [7], two schemes were proposed providing information theoretic and computational anonymity, respectively. Unfortunately, the proposed scheme allows the group manager to misattribute a signature, i.e., falsely accuse a group member of having signed a message. <p> This scheme can be extended to allow the functionality of the group manager to be shared among several entities. The drawbacks include the size of the public key and the signature size (both proportional to group size). As also noted in <ref> [4] </ref>, most previous results exhibit some or all of the following shortcomings: 1. The size of the group public key depends on the size of the group. 2. The length of a group signature depends on the size of the group. 3. <p> Exclusion/revocation of group members requires re-issuing all members' keys and changing the group public key. The state-of-the-art in the field is exemplified by the recent result of Camenisch and Stadler <ref> [4] </ref>. It addresses the first three of the above issues; albeit, at significant cost. <p> There are two ways to invalidate these assumptions. One is by proving that they are false, the other by proving that they are unsuitable for a specific protocol. The latter is the case with one of the assumptions underlying the Camenisch and Stadler's CS97 group signature scheme <ref> [4] </ref>. We briefly present some attacks on CS97 and then propose some simple ways of preventing them. Remark 6.1 The following text describes two attack scenarios. It is necessary to stress that these are not all-out attacks that really break the scheme. <p> A coalition attack occurs when a subset of group members pool together their secrets and generate perfectly valid group signatures. Such signatures have the property that even the group manager is unable to open them. The coalition resistance of Camenisch-Stadler protocol <ref> [4] </ref> is based on the following number-theoretic assumption: Let n and e be RSA-like parameters and a 2 ZZ fl n an element of large multiplicative order both the factors of n such that computing the discrete logarithms to the base a is infeasible. <p> Now, whether an MGS scheme can be built out of existing group signature schemes is an entirely separate issue. We have considered several group signature schemes from the literature. Some are not easily converted, e.g., [3]. However, at least one scheme, CS97 <ref> [4] </ref>, can be used as building block for a secure MGS scheme. 8 MGS Example We begin with a short overview of the CS97 basic scheme. <p> However, we emphasize that this should be done only for SGS; i.e., the structure of other types of group signatures (regular, multi-group) must remain unchanged. The feasibility of SGS schemes is illustrated by a concrete example in the next section. Once again, we use the CS97 <ref> [4] </ref> group signature scheme as our main building block. 10 SGS Example The actual SGS extension is quite trivial. The SETUP, JOIN and OPEN procedures are the same as in CS97. Only SIGN and VERIFY are modified slightly.
Reference: [5] <author> D. Chaum and T. Pedersen. </author> <title> Wallet databases with observers. </title> <booktitle> In Advances in Cryptology - CRYPTO, </booktitle> <year> 1992. </year>
Reference-contexts: More generally, SKEQLOG denotes a noninteractive proof of log g 1 z 1 = log g 2 z 2 . One efficient technique for constructing SKEQLOG is due to Chaum and Pedersen <ref> [5] </ref>. As in CS97, V 1;1 and V 1;2 each demonstrate knowledge of the secret x, i.e., double-discrete logarithm of z 1 and z 2 , respectively (which is x in both cases).
Reference: [6] <author> D. Chaum and E. van Heyst. </author> <title> Group signatures. </title> <booktitle> In Advances in Cryptology - EUROCRYPT, </booktitle> <year> 1991. </year>
Reference-contexts: 1 Introduction Digital signatures are rapidly becoming ubiquitous in many aspects of electronic life. They are used to obtain security services such as authentication, data integrity and non-repudiation. Group digital signatures are a relatively new concept introduced by Chaum and Van Heyst in 1991 <ref> [6] </ref>. A group signature similar to its traditional counterpart allows a signer to demonstrate knowledge of a secret with respect to a specific document. It is also publicly verifiable: anyone in possession of a group public key can validate a group signature. <p> * The size of the group public key Y. * The size of a group signature. * The efficiency of SIGN and VERIFY. * The efficiency of SETUP, OPEN and JOIN. 3 Previous Work The concept of group signatures was introduced and realized by Chaum and Van Heist in 1991 <ref> [6] </ref>. They proposed four schemes of which three provide computational anonymity whereas the fourth provides information-theoretic anonymity. Some of schemes do not allow a group manager to add group members after the initial setup.
Reference: [7] <author> L. Chen and T. Pedersen. </author> <title> On the efficiency of group signatures providing information-theoretic anonymity. </title> <booktitle> In Advances in Cryptology - EUROCRYPT, </booktitle> <year> 1995. </year>
Reference-contexts: Others require the group manager to contact each member in order to open a signature, i.e., to reveal the identity of the signer. A number of improvements and enhancements followed the initial work. Some notable results are due to Chen/Pedersen <ref> [7] </ref>, Camenisch [3], Petersen [9] and Camenisch/Stadler [4]. In [7], two schemes were proposed providing information theoretic and computational anonymity, respectively. Unfortunately, the proposed scheme allows the group manager to misattribute a signature, i.e., falsely accuse a group member of having signed a message. <p> Others require the group manager to contact each member in order to open a signature, i.e., to reveal the identity of the signer. A number of improvements and enhancements followed the initial work. Some notable results are due to Chen/Pedersen <ref> [7] </ref>, Camenisch [3], Petersen [9] and Camenisch/Stadler [4]. In [7], two schemes were proposed providing information theoretic and computational anonymity, respectively. Unfortunately, the proposed scheme allows the group manager to misattribute a signature, i.e., falsely accuse a group member of having signed a message.
Reference: [8] <author> A. Lysyanskaya and Z. Ramzan. </author> <title> Group blind digital signatures. </title> <booktitle> In Financial Cryptography Conference, </booktitle> <year> 1998. </year>
Reference-contexts: More generally, group signatures can be used to conceal organizational structures, e.g,, when a company or a government agency issues a signed statement. They can also be integrated with electronic currency mechanisms (as blind group signatures) <ref> [8] </ref> to provide both anonymity and untraceability of currency issers. Despite appealing features and interesting research papers, group signatures remain in the domain of theoretical results. To this end, the purpose of this paper is twofold.
Reference: [9] <author> H. Petersen. </author> <title> How to convert any digital signature scheme into a group signature scheme. </title> <booktitle> In Security Protocols Workshop, </booktitle> <year> 1997. </year>
Reference-contexts: Others require the group manager to contact each member in order to open a signature, i.e., to reveal the identity of the signer. A number of improvements and enhancements followed the initial work. Some notable results are due to Chen/Pedersen [7], Camenisch [3], Petersen <ref> [9] </ref> and Camenisch/Stadler [4]. In [7], two schemes were proposed providing information theoretic and computational anonymity, respectively. Unfortunately, the proposed scheme allows the group manager to misattribute a signature, i.e., falsely accuse a group member of having signed a message.
Reference: [10] <author> M. Steiner, G. Tsudik, and M. Waidner. </author> <title> Diffie-hellman key distribution extended to groups. </title> <booktitle> In ACM Conference on Computer and Communication Security, </booktitle> <pages> pages 31-37, </pages> <month> March </month> <year> 1996. </year> <month> 15 </month>
Reference-contexts: In our case, r needs to be generated collectively by the sub-group of signers. There are many methods for doing this; one possibility is to run a group Diffie-Hellman key agreement protocol (e.g., [2] or <ref> [10] </ref>) and, as a result, generate a common: g := g r where r = a r 1 r i (modn) and i is the size of the sub-group and each r j is generated at random by the j-th signer.
References-found: 10

