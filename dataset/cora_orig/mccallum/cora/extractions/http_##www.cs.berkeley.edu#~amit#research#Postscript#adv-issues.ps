URL: http://www.cs.berkeley.edu/~amit/research/Postscript/adv-issues.ps
Refering-URL: http://www.cs.berkeley.edu/~amit/research/index.html
Root-URL: http://www.cs.berkeley.edu
Email: amit.gupta@eng.sun.com  
Title: Advance reservations in real-time communication services  
Author: Amit Gupta 
Address: 2600 Casey Avenue UMTV 29-232 Mountain View CA 94043  
Affiliation: Sun Microsystems Laboratories  
Abstract: The Internet research community is actively studying the problem of supporting real-time communication services over internetworks; these real-time services are needed for a variety of new applications, including teleconferencing, distributed seminars, scientific visualization, telemedicine and distributed simulations. Providing real-time quality-of-service (QoS) usually requires allocating resources for these applications, say via RSVP or ST2+; thus, in the face of network congestion, the flows with reservations get priority in using these resources, otherwise the other flows are free to use the available resources. Most of this work in the IETF is being carried out in two Working Groups in the Transport area - RSVP and Integrated Services (intserv). This memo discusses a proposed extension to provide advance reservation service, i.e., the ability to book network resources well in advance of their use by the client applications. For example, under this service paradigm, a user can inform the network, on Monday, that it wants to set up a distributed meeting between his/her offices in New York, Geneva, and Los Angeles for Friday 9am-11am. The network will reserve the resources for the booked time slot along the route(s) computed. Such reservation is similar to the usual practice of reserving seminar rooms and conference halls for traditional seminars and conferences. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Riccardo Bettati, Domenico Ferrari, Amit Gupta, Wendy Heffner, Wingwai Howe, Quyen Nguyen, Mark Moran, and Raj Yavatkar. </author> <title> Connection establishment for multi-party real-time communication. </title> <booktitle> In Proceedings of Fifth International Workshop on Network and Operating Systems Support for Distributed Audio and Video, </booktitle> <address> Durham, NH, </address> <month> April </month> <year> 1994. </year>
Reference-contexts: Consequently, many researchers are currently studying techniques for supporting real-time quality-of-service (QoS) performance, both in the context of the Internet (RSVP [17] and ST2+[4]) as well as in other frameworks (e.g., Tenet Suite 2 <ref> [1] </ref>). With the traditional service interface, at the time the client would like to send data with the desired QoS, the application requests the network to reserve the resources required 1 to obtained the desired QoS. <p> lease the underlying communication infrastructure (links) from the big telcos (for example, AT&T); in this case, these network providers can use the demand estimates to dynamically lease higher/lower bandwidth from the link owners. * Quickness vs scalability trade-off: Traditional network protocols for multi-party real-time communication (including ST2+[4], Tenet Suite 2 <ref> [1] </ref>, and RSVP [17]) have tried to simultaneously satisfy and trade-off among the conflicting goals of speed (quick connection set-up) and scalability (supporting large conferences). With advance reservations, we can design schemes that scale well for large conferences and yet provide very fast set-up for small ones. <p> This speed-up results from the fact that communication overhead (sending messages from node to node) account for a majority of the time spent in multi-party flow set-up <ref> [1] </ref>. 3 Potential problems and pitfalls The previous section described some of the benefits that advance reservations provide to the network service providers as well as the service clients; we now describe some potential problems due to which the network service providers may not want to support advance reservations. * Provisioning
Reference: [2] <author> Robert Braden, David Clark, and Scott Shenker. </author> <title> Integrated services in the internet architecture: an overview. Request for Comments (Informational) RFC 1633, </title> <institution> Internet Engineering Task Force, </institution> <month> June </month> <year> 1994. </year>
Reference-contexts: 1 Introduction The multicasts of audio and video over the MBONE has demonstrated the feasibility as well as the utility of sending digital audio and video over the Internet; these distributed multimedia applications often do not work very well across the Internet because of variable queueing delays and congestion losses <ref> [2] </ref>. Consequently, many researchers are currently studying techniques for supporting real-time quality-of-service (QoS) performance, both in the context of the Internet (RSVP [17] and ST2+[4]) as well as in other frameworks (e.g., Tenet Suite 2 [1]).
Reference: [3] <author> Mikael Degermark, Torsten Kohler, Stephen Pink, and Olov Schelen. </author> <title> Advance reservations for predictive service. </title> <booktitle> In Proceedings of Fifth International Workshop on Network and Operating Systems Support for Distributed Audio and Video, </booktitle> <address> Durham, NH, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: Several researchers have proposed mechanisms for supporting advance reservations <ref> [14, 7, 5, 3] </ref>; in this memo, we do not advocate any particular choice among these different mechanisms. <p> penalty both increase. * Extra computational overhead: The proposed schemes for advance reservations usually divide, at each node, the time domain into variable-size intervals (depending on the start and end times of the various advance requests) and perform resource allocation independently for each interval, and then resolve these resource allocations <ref> [14, 5, 7, 3] </ref>; this raises the concern that supporting advance reservations may dramatically increase the overhead associated with running the resource allocation computations. To some degree, this concern is valid; supporting advance reservations can, in principle, lead to increased computational overhead. <p> multicast path (s); this provides a simple, distributed, scalable solution which gets its high performance from the expensive route computation and resource allocation techniques used in setting up the backbone in advance. 4 Issues and design considerations Various researchers have proposed several techniques for supporting advance reservations of network resources <ref> [14, 7, 5, 3] </ref>; it is interesting to observe that the basic mechanism employed is remarkably similar in these different proposals. The basic idea is that each node separately manages its resources over the future time by dividing the time domain into time-intervals. <p> For example, one concern that arises is that the advance requests may starve out immediate channels (or vice versa) <ref> [7, 3] </ref>. In this case, the network service managers would like to control the amount of resources that the advance requests may be able to reserve.
Reference: [4] <author> L. Delgrossi and L. Berger. </author> <title> Internet stream protocol version 2 (ST2) protocol specification version ST2+. Request for Comments (Standard) RFC 1819, </title> <institution> Internet Engineering Task Force, </institution> <month> August </month> <year> 1995. </year>
Reference: [5] <author> Luca Delgrossi, Sibylle Schaller, Hartmut Wittig, and Lars Wolf. </author> <title> Issues of reserving resources in advance. </title> <booktitle> In Proceedings of Fifth International Workshop on Network and Operating Systems Support for Distributed Audio and Video, </booktitle> <address> Durham, NH, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: Several researchers have proposed mechanisms for supporting advance reservations <ref> [14, 7, 5, 3] </ref>; in this memo, we do not advocate any particular choice among these different mechanisms. <p> penalty both increase. * Extra computational overhead: The proposed schemes for advance reservations usually divide, at each node, the time domain into variable-size intervals (depending on the start and end times of the various advance requests) and perform resource allocation independently for each interval, and then resolve these resource allocations <ref> [14, 5, 7, 3] </ref>; this raises the concern that supporting advance reservations may dramatically increase the overhead associated with running the resource allocation computations. To some degree, this concern is valid; supporting advance reservations can, in principle, lead to increased computational overhead. <p> multicast path (s); this provides a simple, distributed, scalable solution which gets its high performance from the expensive route computation and resource allocation techniques used in setting up the backbone in advance. 4 Issues and design considerations Various researchers have proposed several techniques for supporting advance reservations of network resources <ref> [14, 7, 5, 3] </ref>; it is interesting to observe that the basic mechanism employed is remarkably similar in these different proposals. The basic idea is that each node separately manages its resources over the future time by dividing the time domain into time-intervals.
Reference: [6] <author> Domenico Ferrari. </author> <title> Real-time communication in an internetwork. </title> <journal> Journal of High Speed Networks, </journal> <volume> 1(1) </volume> <pages> 79-103, </pages> <year> 1992. </year>
Reference-contexts: This restriction arises from the overall framework in which these service mechanisms perform resource reservation (and manage related information). These schemes are fully distributed; when a new resource reservation request is received at a network node, the system performs several computations (also referred to as admission control tests <ref> [13, 6, 12] </ref>) to see if it can provide the desired QoS to this new request without violating the promises already made to other flows. Typically, these tests are run against the existing reservations for the "current" time only.
Reference: [7] <author> Domenico Ferrari, Amit Gupta, and Giorgio Ventre. </author> <title> Distributed advance reservation of real-time connections. </title> <booktitle> In Proceedings of Fifth International Workshop on Network and Operating Systems Support for Distributed Audio and Video, </booktitle> <address> Durham, NH, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: Several researchers have proposed mechanisms for supporting advance reservations <ref> [14, 7, 5, 3] </ref>; in this memo, we do not advocate any particular choice among these different mechanisms. <p> With advance reservations, we can design schemes that scale well for large conferences and yet provide very fast set-up for small ones. Large conferences tend to be scheduled in advance <ref> [7, 8] </ref>; primarily because of logistics considerations as well as because the organizers have to reconcile the participants' scheduling constraints when they set the schedule. <p> penalty both increase. * Extra computational overhead: The proposed schemes for advance reservations usually divide, at each node, the time domain into variable-size intervals (depending on the start and end times of the various advance requests) and perform resource allocation independently for each interval, and then resolve these resource allocations <ref> [14, 5, 7, 3] </ref>; this raises the concern that supporting advance reservations may dramatically increase the overhead associated with running the resource allocation computations. To some degree, this concern is valid; supporting advance reservations can, in principle, lead to increased computational overhead. <p> Also, with advance reservations, the overall computational overhead can go down under certain circumstances, as described in <ref> [7] </ref>. * Fault-handling: With advance reservations, the network has to maintain state information much longer; this state may be maintained for a participant even before its first interaction with the network service. This raises concerns about failure-handling how is the state information maintained in the presence of network component failures. <p> multicast path (s); this provides a simple, distributed, scalable solution which gets its high performance from the expensive route computation and resource allocation techniques used in setting up the backbone in advance. 4 Issues and design considerations Various researchers have proposed several techniques for supporting advance reservations of network resources <ref> [14, 7, 5, 3] </ref>; it is interesting to observe that the basic mechanism employed is remarkably similar in these different proposals. The basic idea is that each node separately manages its resources over the future time by dividing the time domain into time-intervals. <p> For example, one concern that arises is that the advance requests may starve out immediate channels (or vice versa) <ref> [7, 3] </ref>. In this case, the network service managers would like to control the amount of resources that the advance requests may be able to reserve. <p> On the whole, it appears that the benefits of supporting advance reservations are well worth the additional resources required for such support. <ref> [7, 10] </ref> present the results of several experiments (simulation as well as an actual implementation) that verify some of these benefits; more experiments are required to verify the other gains described in this memo.
Reference: [8] <author> Amit Gupta. </author> <title> Improved performance for multi-party communication through advance reservations. </title> <booktitle> In Proceedings of Sixth International Workshop on Network and Operating Systems Support for Distributed Audio and Video, </booktitle> <address> Zushi, Japan, </address> <month> April </month> <year> 1996. </year> <month> 12 </month>
Reference-contexts: With advance reservations, we can design schemes that scale well for large conferences and yet provide very fast set-up for small ones. Large conferences tend to be scheduled in advance <ref> [7, 8] </ref>; primarily because of logistics considerations as well as because the organizers have to reconcile the participants' scheduling constraints when they set the schedule. <p> requests, for which the service can run expensive, time-consuming but highly resource-efficient and scalable algorithms for routing and resource reservation and admission control; and immediate requests, for which it can use fast algorithms that need not be very scalable (as the immediate requests will almost always be for small conferences). <ref> [8] </ref> provides a detailed description of these trade-offs. * Better routing: With advance reservations, the network service can significantly im prove the routing quality.
Reference: [9] <author> Amit Gupta and Domenico Ferrari. </author> <title> Resource partitioning for multi-party real-time communication. </title> <type> Technical Report TR-94-061, </type> <institution> International Computer Science Institute, Berkeley, California, </institution> <month> November </month> <year> 1994. </year> <note> Also in IEEE/ACM Transactions on Networking, </note> <month> October </month> <year> 1995. </year>
Reference-contexts: The 4 service provider can then use this information to either set up the semi-static con-figurations (Virtual Path allocations) or similar constructs like CBQ service classes [16], resource partitions <ref> [9] </ref> etc. <p> In this case, the network service managers would like to control the amount of resources that the advance requests may be able to reserve. The resource allocation mechanisms of CBQ [16] or resource partitioning of Tenet Suite 2 <ref> [9] </ref> or Virtual Paths of ATM networks [15] can be used to control the resource allocation in the following manner: we can partition the resources at a server among two classes (to effectively create two virtual sub-servers) and use one class for supporting advance channels and the other for supporting immediate
Reference: [10] <author> Amit Gupta and Domenico Ferrari. </author> <title> Admission control for advance-reserved real-time connections. </title> <booktitle> In Proceedings of IEEE HPCS 95, </booktitle> <address> Mystic, CT, </address> <month> August </month> <year> 1995. </year>
Reference-contexts: On the whole, it appears that the benefits of supporting advance reservations are well worth the additional resources required for such support. <ref> [7, 10] </ref> present the results of several experiments (simulation as well as an actual implementation) that verify some of these benefits; more experiments are required to verify the other gains described in this memo.
Reference: [11] <author> Amit Gupta and Kurt Rothermel. </author> <title> Fault handling for multi-party real-time communication. </title> <type> Technical Report TR-95-059, </type> <institution> International Computer Science Institute, Berkeley, California, </institution> <month> October </month> <year> 1995. </year>
Reference-contexts: system will therefore have access to the stable information to reroute the accepted advance requests around the failed component; if the rerouting fails, it can then inform the client that due to the component failure, the network may not be able to provide the QoS that it promised before. - <ref> [11] </ref> also proposes some mechanisms for handling network component failures in such environments. * Constraints on advance notice period: A request is termed advance request if it is made well in advance of the flow start time, else it is termed an immediate request.
Reference: [12] <author> Sugih Jamin, Scott Shenker, Lixia Zhang, and David Clark. </author> <title> An admission control algorithm for predictive real-time service. </title> <booktitle> In Proceedings of the Third International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <pages> pages 349-356, </pages> <address> San Diego, CA, </address> <month> November </month> <year> 1992. </year>
Reference-contexts: This restriction arises from the overall framework in which these service mechanisms perform resource reservation (and manage related information). These schemes are fully distributed; when a new resource reservation request is received at a network node, the system performs several computations (also referred to as admission control tests <ref> [13, 6, 12] </ref>) to see if it can provide the desired QoS to this new request without violating the promises already made to other flows. Typically, these tests are run against the existing reservations for the "current" time only.
Reference: [13] <author> Abhay Kumar J. Parekh. </author> <title> A Generalized Processor Sharing Approach to Flow Control in Integrated Services Networks. </title> <type> PhD dissertation, </type> <institution> Massachusetts Institute of Technology, </institution> <month> February </month> <year> 1992. </year>
Reference-contexts: This restriction arises from the overall framework in which these service mechanisms perform resource reservation (and manage related information). These schemes are fully distributed; when a new resource reservation request is received at a network node, the system performs several computations (also referred to as admission control tests <ref> [13, 6, 12] </ref>) to see if it can provide the desired QoS to this new request without violating the promises already made to other flows. Typically, these tests are run against the existing reservations for the "current" time only.
Reference: [14] <author> Wilko Reinhardt. </author> <title> Advance reservation of network resources for multimedia applications. </title> <booktitle> In Proceedings of ICAWA 94, </booktitle> <address> Germany, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: Several researchers have proposed mechanisms for supporting advance reservations <ref> [14, 7, 5, 3] </ref>; in this memo, we do not advocate any particular choice among these different mechanisms. <p> penalty both increase. * Extra computational overhead: The proposed schemes for advance reservations usually divide, at each node, the time domain into variable-size intervals (depending on the start and end times of the various advance requests) and perform resource allocation independently for each interval, and then resolve these resource allocations <ref> [14, 5, 7, 3] </ref>; this raises the concern that supporting advance reservations may dramatically increase the overhead associated with running the resource allocation computations. To some degree, this concern is valid; supporting advance reservations can, in principle, lead to increased computational overhead. <p> multicast path (s); this provides a simple, distributed, scalable solution which gets its high performance from the expensive route computation and resource allocation techniques used in setting up the backbone in advance. 4 Issues and design considerations Various researchers have proposed several techniques for supporting advance reservations of network resources <ref> [14, 7, 5, 3] </ref>; it is interesting to observe that the basic mechanism employed is remarkably similar in these different proposals. The basic idea is that each node separately manages its resources over the future time by dividing the time domain into time-intervals.
Reference: [15] <author> Ken-Ichi Sato, Satoru Ohta, and Ikuo Tokizawa. </author> <title> Broadband ATM network architecture based on virtual paths. </title> <journal> IEEE transactions on communications, </journal> <pages> pages 1212-1222, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: In this case, the network service managers would like to control the amount of resources that the advance requests may be able to reserve. The resource allocation mechanisms of CBQ [16] or resource partitioning of Tenet Suite 2 [9] or Virtual Paths of ATM networks <ref> [15] </ref> can be used to control the resource allocation in the following manner: we can partition the resources at a server among two classes (to effectively create two virtual sub-servers) and use one class for supporting advance channels and the other for supporting immediate channels.
Reference: [16] <author> Ian Wakeman, Atanu Ghosh, Jon Crowcroft, Sally Floyd, and Van Jacobson. </author> <title> Implementing real-time packet forwarding policies using streams. </title> <booktitle> In Proceedings of USENIX 1995 Technical Conference, </booktitle> <address> Nashville, TN, </address> <month> January </month> <year> 1995. </year>
Reference-contexts: The 4 service provider can then use this information to either set up the semi-static con-figurations (Virtual Path allocations) or similar constructs like CBQ service classes <ref> [16] </ref>, resource partitions [9] etc. <p> In this case, the network service managers would like to control the amount of resources that the advance requests may be able to reserve. The resource allocation mechanisms of CBQ <ref> [16] </ref> or resource partitioning of Tenet Suite 2 [9] or Virtual Paths of ATM networks [15] can be used to control the resource allocation in the following manner: we can partition the resources at a server among two classes (to effectively create two virtual sub-servers) and use one class for supporting
Reference: [17] <author> Lixia Zhang, Steve Deering, Deborah Estrin, Scott Shenker, and Daniel Zappala. RSVP: </author> <title> A new resource reservation protocol. </title> <journal> IEEE Networks Magazine, </journal> <volume> 31(9) </volume> <pages> 8-18, </pages> <month> September </month> <year> 1993. </year> <month> 13 </month>
Reference-contexts: Consequently, many researchers are currently studying techniques for supporting real-time quality-of-service (QoS) performance, both in the context of the Internet (RSVP <ref> [17] </ref> and ST2+[4]) as well as in other frameworks (e.g., Tenet Suite 2 [1]). With the traditional service interface, at the time the client would like to send data with the desired QoS, the application requests the network to reserve the resources required 1 to obtained the desired QoS. <p> communication infrastructure (links) from the big telcos (for example, AT&T); in this case, these network providers can use the demand estimates to dynamically lease higher/lower bandwidth from the link owners. * Quickness vs scalability trade-off: Traditional network protocols for multi-party real-time communication (including ST2+[4], Tenet Suite 2 [1], and RSVP <ref> [17] </ref>) have tried to simultaneously satisfy and trade-off among the conflicting goals of speed (quick connection set-up) and scalability (supporting large conferences). With advance reservations, we can design schemes that scale well for large conferences and yet provide very fast set-up for small ones. <p> The service providers can choose from several options for recovering advance reserved flows from component failures: The service providers can continue using the end-to-end, soft-state and refresh based approaches as are used in <ref> [17] </ref>. The commercial service providers use stable, fault-reliable systems for storing the billing and charging related information; the advance reserved flow information can also be put on similar stable systems.
References-found: 17

