URL: http://www.csc.ncsu.edu/faculty/riely/papers/97icalp.ps.gz
Refering-URL: http://www.csc.ncsu.edu/faculty/riely/papers.html
Root-URL: http://www.csc.ncsu.edu
Title: Distributed Processes and Location Failures (Extended Abstract)  
Author: James Riely and Matthew Hennessy 
Abstract: Site failure is an essential aspect of distributed systems; nonetheless its effect on programming language semantics remains poorly understood. To model such systems, we define a process calculus in which processes are run at distributed locations. The language provides operators to kill locations, to test the status (dead or alive) of locations, and to spawn processes at remote locations. Using a variation of bisimulation, we provide alternative characterizations of strong and weak barbed congruence for this language, based on an operational semantics that uses configurations to record the status of locations. We then derive a second, symbolic characterization in which configurations are replaced by logical formulae. In the strong case the formulae come from a standard propositional logic, while in the weak case a temporal logic with past time modalities is required. The symbolic characterization establishes that, in principle, barbed congruence for such languages can be checked efficiently using existing techniques. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Samson Abramsky. </author> <title> The lazy lambda calculus. </title> <booktitle> In Research Topics in Functional Programming, </booktitle> <pages> pages 65117. </pages> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: P 0 ; 62 fa; ag Ren c ) L . P [ f ] f () ! L 0 . P 0 [ f ] if L . P ! L 0 . P 0 Similar results have been obtained for lazy and eager functional languages <ref> [1, 14, 7] </ref>, giving further evidence for the reasonableness of this approach.
Reference: [2] <author> Roberto Amadio and Sanjiva Prasad. </author> <title> Localities and failures. </title> <booktitle> In FST-TCS, volume 880 of LNCS. </booktitle> <publisher> Springer, </publisher> <year> 1994. </year>
Reference-contexts: The new semantic equivalences are justified in terms of barbed bisimulations [22]. We also give symbolic characterizations of the new equivalences, which means that they can be investigated using the symbolic methods of [15]. Site failure has also played a role in languages studied in <ref> [2, 4, 12] </ref>. In these papers abstract languages based on Facile [13] or the pi-calculus [19, 5] are studied. The original motivation for this paper was to provide an alternative characterization of barbed equivalence for languages such as these. <p> Although we have not treated value passing or references, we postulate that our results can be extended in a straightforward way to value-passing languages which retain the assumption that all failures are independent, such as the languages in <ref> [2, 4] </ref>. More delicate is the extension to languages such as the distributed join-calculus [12] in which the independence assumption is dropped. In this case the logical language used for symbolic bisimulations must be extended to allow statements about the interdependence of locations; we leave this to future work.
Reference: [3] <author> Roberto Amadio. </author> <title> From a concurrent l-calculus to the p-calculus. </title> <booktitle> In Foundations of Computation Theory, volume 965 of LNCS. </booktitle> <publisher> Springer, </publisher> <year> 1995. </year>
Reference: [4] <author> Roberto Amadio. </author> <title> An asynchronous model of locality, failure, and process mobility. </title> <type> Technical report, </type> <institution> Laboratoire d'Informatique de Marseille, </institution> <year> 1997. </year>
Reference-contexts: The new semantic equivalences are justified in terms of barbed bisimulations [22]. We also give symbolic characterizations of the new equivalences, which means that they can be investigated using the symbolic methods of [15]. Site failure has also played a role in languages studied in <ref> [2, 4, 12] </ref>. In these papers abstract languages based on Facile [13] or the pi-calculus [19, 5] are studied. The original motivation for this paper was to provide an alternative characterization of barbed equivalence for languages such as these. <p> Although we have not treated value passing or references, we postulate that our results can be extended in a straightforward way to value-passing languages which retain the assumption that all failures are independent, such as the languages in <ref> [2, 4] </ref>. More delicate is the extension to languages such as the distributed join-calculus [12] in which the independence assumption is dropped. In this case the logical language used for symbolic bisimulations must be extended to allow statements about the interdependence of locations; we leave this to future work.
Reference: [5] <author> Roberto Amadio, Ilaria Castellani, and Davide Sangiorgi. </author> <title> On bisimulations for the asynchronous p-calculus. </title> <booktitle> In CONCUR96, volume 1119 of LNCS, </booktitle> <pages> pages 147162. </pages> <publisher> Springer, </publisher> <year> 1996. </year>
Reference-contexts: We also give symbolic characterizations of the new equivalences, which means that they can be investigated using the symbolic methods of [15]. Site failure has also played a role in languages studied in [2, 4, 12]. In these papers abstract languages based on Facile [13] or the pi-calculus <ref> [19, 5] </ref> are studied. The original motivation for this paper was to provide an alternative characterization of barbed equivalence for languages such as these.
Reference: [6] <author> J. C. M. Baeten and W. P. Weijland. </author> <title> Process Algebra. </title> <publisher> Cambridge University Press, </publisher> <year> 1990. </year>
Reference: [7] <author> G. Boudol. </author> <title> A lambda calculus for (strict) parallel functions. </title> <journal> Information and Control, </journal> <volume> 108:51 127, </volume> <year> 1994. </year>
Reference-contexts: P 0 ; 62 fa; ag Ren c ) L . P [ f ] f () ! L 0 . P 0 [ f ] if L . P ! L 0 . P 0 Similar results have been obtained for lazy and eager functional languages <ref> [1, 14, 7] </ref>, giving further evidence for the reasonableness of this approach.
Reference: [8] <author> G. Boudol, I. Castellani, M. Hennessy, and A. Kiehn. </author> <title> A theory of processes with localities. </title> <journal> Formal Aspects of Computing, </journal> <volume> 6:165200, </volume> <year> 1994. </year>
Reference-contexts: In this case the logical language used for symbolic bisimulations must be extended to allow statements about the interdependence of locations; we leave this to future work. A number of location-based equivalences already exist in the literature <ref> [8, 9, 20, 10] </ref>; however, none of these theories addresses the possible failure of sites. Their emphasis, rather, is to define a measure of the concurrency or distribution of a process: two processes are deemed equivalent only if, informally, they have the same degree of concurrency.
Reference: [9] <author> I. Castellani. </author> <title> Observing distribution in processes: static and dynamic localities. </title> <journal> International Journal of Foundations of Computer Science, </journal> <volume> 6(6):353393, </volume> <year> 1995. </year>
Reference-contexts: In this case the logical language used for symbolic bisimulations must be extended to allow statements about the interdependence of locations; we leave this to future work. A number of location-based equivalences already exist in the literature <ref> [8, 9, 20, 10] </ref>; however, none of these theories addresses the possible failure of sites. Their emphasis, rather, is to define a measure of the concurrency or distribution of a process: two processes are deemed equivalent only if, informally, they have the same degree of concurrency.
Reference: [10] <author> Flavio Corradini. </author> <title> Space, Time and Nondeterminism in Process Algebras. </title> <type> PhD thesis, </type> <institution> Univer-sitOEa Degli Studi di Roma La Sapienza, </institution> <year> 1996. </year>
Reference-contexts: In this case the logical language used for symbolic bisimulations must be extended to allow statements about the interdependence of locations; we leave this to future work. A number of location-based equivalences already exist in the literature <ref> [8, 9, 20, 10] </ref>; however, none of these theories addresses the possible failure of sites. Their emphasis, rather, is to define a measure of the concurrency or distribution of a process: two processes are deemed equivalent only if, informally, they have the same degree of concurrency.
Reference: [11] <author> C. Fournet and G. Gonthier. </author> <title> The refliexive CHAM and the join-calculus. In POPL94. </title> <publisher> ACM Press, </publisher> <year> 1994. </year>
Reference: [12] <author> C. Fournet, G. Gonthier, J.J. Levy, L. Marganget, and D. Remy. </author> <title> A calculus of mobile agents. </title> <booktitle> In CONCUR96, volume 1119 of LNCS, </booktitle> <pages> pages 406421. </pages> <publisher> Springer, </publisher> <year> 1996. </year>
Reference-contexts: The new semantic equivalences are justified in terms of barbed bisimulations [22]. We also give symbolic characterizations of the new equivalences, which means that they can be investigated using the symbolic methods of [15]. Site failure has also played a role in languages studied in <ref> [2, 4, 12] </ref>. In these papers abstract languages based on Facile [13] or the pi-calculus [19, 5] are studied. The original motivation for this paper was to provide an alternative characterization of barbed equivalence for languages such as these. <p> More delicate is the extension to languages such as the distributed join-calculus <ref> [12] </ref> in which the independence assumption is dropped. In this case the logical language used for symbolic bisimulations must be extended to allow statements about the interdependence of locations; we leave this to future work.
Reference: [13] <author> A. Giacalone, P. Mishra, and S. Prasad. </author> <title> A symmetric integration of concurrent and functional programming. </title> <journal> International Journal of Parallel Programming, </journal> <volume> 18(2):121160, </volume> <year> 1989. </year>
Reference-contexts: We also give symbolic characterizations of the new equivalences, which means that they can be investigated using the symbolic methods of [15]. Site failure has also played a role in languages studied in [2, 4, 12]. In these papers abstract languages based on Facile <ref> [13] </ref> or the pi-calculus [19, 5] are studied. The original motivation for this paper was to provide an alternative characterization of barbed equivalence for languages such as these.
Reference: [14] <author> Andrew D. Gordon. </author> <title> Bisimilarity as a theory of functional programming. </title> <booktitle> In MFPS, volume 1 of ENTCS, </booktitle> <address> http://pigeon.elsevier.nl/mcs/tcs/pc/Menu.html. Elsevier, </address> <year> 1995. </year>
Reference-contexts: P 0 ; 62 fa; ag Ren c ) L . P [ f ] f () ! L 0 . P 0 [ f ] if L . P ! L 0 . P 0 Similar results have been obtained for lazy and eager functional languages <ref> [1, 14, 7] </ref>, giving further evidence for the reasonableness of this approach.
Reference: [15] <author> M. C. B. Hennessy and H. Lin. </author> <title> Symbolic bisimulations. </title> <booktitle> Theoretical Computer Science, </booktitle> <address> 138:353389, </address> <year> 1995. </year>
Reference-contexts: The two transition systems are related by the fact that P ! L P 0 if and only if there exists a p such that P ! p P 0 and L * p. The standard definition of symbolic bisimulation <ref> [15] </ref> requires that we define entailment between formulae, which we do in the standard way: p fl r iff 8L : L * p implies L * r Note that entailment is a preorder on formulae. <p> The new semantic equivalences are justified in terms of barbed bisimulations [22]. We also give symbolic characterizations of the new equivalences, which means that they can be investigated using the symbolic methods of <ref> [15] </ref>. Site failure has also played a role in languages studied in [2, 4, 12]. In these papers abstract languages based on Facile [13] or the pi-calculus [19, 5] are studied.
Reference: [16] <author> C. A. R. Hoare. </author> <title> Communicating Sequential Processes. </title> <publisher> Prentice-Hall, </publisher> <year> 1985. </year>
Reference: [17] <author> Z. Manna and A. Pnueli. </author> <title> The Temporal Logic of Reactive and Concurrent System: Specification. </title> <publisher> Springer, </publisher> <year> 1992. </year>
Reference-contexts: Our solution is to define weak symbolic edges using a past-time temporal logic <ref> [17] </ref>, interpreted over sequences of livesets. A live sequence L is a finite nonempty sequence of livesets hL 1 ; : : : ; L n i, such that for every i between 1 and n 1 there exists a location k such that L i+1 = L i nfkg.
Reference: [18] <author> Robin Milner. </author> <title> Communication and concurrency. </title> <publisher> Prentice-Hall, </publisher> <year> 1989. </year>
Reference-contexts: We now discuss the problem of defining an appropriate semantic equivalence for located processes, based on the transition relation 7!. An obvious possibility is to adapt the bisimulation equivalences of CCS <ref> [18] </ref>. (Strong) CCS-bisimulation is the largest symmetric relation : ccs on configurations such that whenever C : a 7! C 0 there exists a D 0 such that D a 7! D 0 and C 0 : ccs D 0 . <p> In addition, (u) = (u s tt ). fl 5 Conclusions In this paper we have proposed a new semantic theory for distributed systems which takes into account the possibility of failures at sites. This theory is an adaptation of standard bisimulation-based theories <ref> [18] </ref> using an operational semantics for located processes. The new semantic equivalences are justified in terms of barbed bisimulations [22]. We also give symbolic characterizations of the new equivalences, which means that they can be investigated using the symbolic methods of [15].
Reference: [19] <author> Robin Milner, Joachim Parrow, and David Walker. </author> <title> A calculus of mobile processes. </title> <journal> Information and Computation, </journal> <volume> 100(1), </volume> <month> September </month> <year> 1992. </year>
Reference-contexts: We also give symbolic characterizations of the new equivalences, which means that they can be investigated using the symbolic methods of [15]. Site failure has also played a role in languages studied in [2, 4, 12]. In these papers abstract languages based on Facile [13] or the pi-calculus <ref> [19, 5] </ref> are studied. The original motivation for this paper was to provide an alternative characterization of barbed equivalence for languages such as these.
Reference: [20] <author> Ugo Montanari and Daniel Yankelovich. </author> <title> Partial order localities. </title> <booktitle> In ICALP92, volume 623 of LNCS, </booktitle> <pages> pages 617628. </pages> <publisher> Springer, </publisher> <year> 1992. </year>
Reference-contexts: In this case the logical language used for symbolic bisimulations must be extended to allow statements about the interdependence of locations; we leave this to future work. A number of location-based equivalences already exist in the literature <ref> [8, 9, 20, 10] </ref>; however, none of these theories addresses the possible failure of sites. Their emphasis, rather, is to define a measure of the concurrency or distribution of a process: two processes are deemed equivalent only if, informally, they have the same degree of concurrency.
Reference: [21] <author> James Riely and Matthew Hennessy. </author> <title> Distributed processes and location failures. </title> <type> Technical Report 2/97, </type> <institution> University of Sussex, Department of Computer Science, </institution> <address> http://www.cogs. susx.ac.uk, </address> <year> 1997. </year>
Reference: [22] <author> Davide Sangiorgi. </author> <title> Expressing Mobility in Process Algebras: First-Order and Higher-Order Paradigms. </title> <type> PhD thesis, </type> <institution> University of Edinburgh, </institution> <year> 1992. </year> <month> 11 </month>
Reference-contexts: The use of ccs for CCS has been justified in <ref> [22] </ref> by the fact that it coincides with the congruence obtained from a simple notion of observation called barbed bisimulation. 4 Table 1 Transition system with configurations (symmetric rules for j omitted) Act c ) L . (a:p) ` ! L . (p) ` if ` 2 L Spawn c ) <p> This theory is an adaptation of standard bisimulation-based theories [18] using an operational semantics for located processes. The new semantic equivalences are justified in terms of barbed bisimulations <ref> [22] </ref>. We also give symbolic characterizations of the new equivalences, which means that they can be investigated using the symbolic methods of [15]. Site failure has also played a role in languages studied in [2, 4, 12].
References-found: 22

