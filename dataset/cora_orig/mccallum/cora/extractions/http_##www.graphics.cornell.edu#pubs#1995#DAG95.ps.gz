URL: http://www.graphics.cornell.edu/pubs/1995/DAG95.ps.gz
Refering-URL: http://www.graphics.cornell.edu/pubs/1995/DAG95.html
Root-URL: 
Title: Interactive Design of Complex Time-Dependent Lighting  
Author: Julie Dorsey James Arvo Donald Greenberg 
Address: Ithaca, New York 14853  
Affiliation: of Computer Graphics Cornell University  
Note: Time-dependent sequence from Turandot Program  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Airey, J. M., J. H. Rohlf, and F. P. Brooks. </author> <title> Towards Image Realism with Interactive Update Rates in Complex Virtual Building Environments. </title> <journal> Computer Graphics, </journal> <volume> 24(2) </volume> <pages> 41-50, </pages> <month> March </month> <year> 1990. </year>
Reference-contexts: An approach described by Airey et al. involves storing multiple radiosity values at each vertex and interpolating them as a function of time <ref> [1] </ref>. Ray-tracing methods, presented by Buckalew and Fussell [2] and Sequin and Smyrl [11], demonstrate the possibilities for updating lighting intensities by precomputing and storing view-dependent relationships among lights and surfaces in the environment.
Reference: [2] <author> Buckalew, C. and D. Fussell. </author> <title> Illumination Networks: Fast Realistic Rendering with General Reflectance Functions. </title> <journal> Computer Graphics, </journal> <volume> 23(3) </volume> <pages> 89-98, </pages> <month> July </month> <year> 1989. </year>
Reference-contexts: An approach described by Airey et al. involves storing multiple radiosity values at each vertex and interpolating them as a function of time [1]. Ray-tracing methods, presented by Buckalew and Fussell <ref> [2] </ref> and Sequin and Smyrl [11], demonstrate the possibilities for updating lighting intensities by precomputing and storing view-dependent relationships among lights and surfaces in the environment.
Reference: [3] <author> Chen, S. E. </author> <title> Incremental Radiosity: An Extension of Progressive Radiosity to an Interactive Image Synthesis System. </title> <journal> Computer Graphics, </journal> <volume> 24(4) </volume> <pages> 135-144, </pages> <month> Aug. </month> <year> 1990. </year>
Reference-contexts: Finally, the animation/playback itself must be sufficiently fast to realistically portray the proposed design. 1.2 Previous Work in Computer-Assisted Lighting Several methods have been proposed to address the problem of adjusting light intensities in the context of global illumination. The radiosity approaches of Chen <ref> [3] </ref>, George et al. [5] and Puech et al. [9] update a solution by shooting negative light to compensate for changes in lighting or geometry. An approach described by Airey et al. involves storing multiple radiosity values at each vertex and interpolating them as a function of time [1].
Reference: [4] <author> Dorsey, J. O., F. X. Sillion, and D. P. Greenberg. </author> <title> Design and Simulation of Opera Lighting and Projection Effects. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 41-50, </pages> <month> Aug. </month> <year> 1991. </year>
Reference-contexts: One of the central aspects of the stage-lighting design process is the time-dependent component (see <ref> [4] </ref> and cited references). The design must complement such time-dependent phenomena as the motion of performers, the changing focus of attention, and the shifting mood of the plot; in addition, the design must remain precisely synchronized with the music. <p> The lighting is completed by a transformation of the backdrop from orange to blue. This effect is achieved with two scenic projections <ref> [4] </ref> and therefore falls within the domain of intensity variations.
Reference: [5] <author> George, D. W., F. X. Sillion, and D. P. Greenberg. </author> <title> Radiosity Redistribution for Dynamic Environments. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 10(4) </volume> <pages> 26-34, </pages> <month> July </month> <year> 1990. </year>
Reference-contexts: Finally, the animation/playback itself must be sufficiently fast to realistically portray the proposed design. 1.2 Previous Work in Computer-Assisted Lighting Several methods have been proposed to address the problem of adjusting light intensities in the context of global illumination. The radiosity approaches of Chen [3], George et al. <ref> [5] </ref> and Puech et al. [9] update a solution by shooting negative light to compensate for changes in lighting or geometry. An approach described by Airey et al. involves storing multiple radiosity values at each vertex and interpolating them as a function of time [1].
Reference: [6] <author> Golub, G. H. and C. F. Van Loan. </author> <title> Matrix Computations. </title> <publisher> Johns Hopkins, </publisher> <address> Baltimore, MD, </address> <year> 1983. </year>
Reference-contexts: singular value decomposition (SVD) of L obtaining 2 6 6 4 n fi m 7 7 7 = 6 6 6 Q 3 7 7 5 D r fi m (7) where the columns of Q are orthonormal, D is non-singular and diagonal, and the rows of R are orthonormal <ref> [6] </ref>. The decomposition QDR reveals much about the matrix L. First, the rank of L is determined by the number of diagonal entries in D, which are the singular values. <p> This projection is equivalent to performing a least squares approximation of the key settings using the refined images in the pool. The Gram-Schmidt procedure <ref> [6] </ref> is a simple means of computing this approximation and also for filling in the orthogonal component using the coarse solutions.
Reference: [7] <author> Kajiya, J. T. </author> <title> The Rendering Equation. </title> <journal> Computer Graphics, </journal> <volume> 20(4) </volume> <pages> 143-150, </pages> <month> Aug. </month> <year> 1986. </year>
Reference-contexts: This linearity is also enjoyed by all common approximations to the exact G operator, as embodied in global illumination algorithms <ref> [7] </ref>. Note that the summation on the left hand side of Equation 2 entails addition of n source terms, while the summation on the right requires pointwise addition of the resulting solution functions.
Reference: [8] <author> Nimeroff, J., E. Simoncelli, and J. Dorsey. </author> <title> Efficient Re-rendering of Naturally Illuminated Environments. </title> <booktitle> In Proceedings of the Fifth Eurographics Workshop on Rendering (Darmstadt, </booktitle> <address> Germany, </address> <month> June 13-15, </month> <year> 1994), </year> <pages> pages 359-374, </pages> <month> June </month> <year> 1994. </year>
Reference: [9] <author> Puech, C., F. Sillion, and C. Vedel. </author> <title> Improving Interaction with Radiosity-based Lighting Simulation Programs. </title> <journal> Computer Graphics, </journal> <volume> 24(2) </volume> <pages> 51-57, </pages> <month> March </month> <year> 1990. </year>
Reference-contexts: The radiosity approaches of Chen [3], George et al. [5] and Puech et al. <ref> [9] </ref> update a solution by shooting negative light to compensate for changes in lighting or geometry. An approach described by Airey et al. involves storing multiple radiosity values at each vertex and interpolating them as a function of time [1].
Reference: [10] <author> Schoeneman, C., J. Dorsey, B. Smits, J. Arvo, and D. Greenberg. </author> <title> Painting with Light. </title> <journal> Computer Graphics, </journal> <volume> 27(2) </volume> <pages> 143-146, </pages> <month> Aug. </month> <year> 1993. </year>
Reference-contexts: Second, images allow for simpler and faster scaling and addition than do full view-independent radiance functions. Thus, for practical reasons, we will operate on images, although the concepts apply equally well to view-independent radiance functions <ref> [10] </ref>. In this paper we shall assume that each environment is accompanied by a G operator mapping an n-dimensional vector of light bank intensities to an image of the globally illuminated environment.
Reference: [11] <author> Sequin, C. H. and E. K. Smyrl. </author> <title> Parameterized Ray Tracing. </title> <journal> Computer Graphics, </journal> <volume> 23(3) </volume> <pages> 307-314, </pages> <month> July </month> <year> 1989. </year>
Reference-contexts: An approach described by Airey et al. involves storing multiple radiosity values at each vertex and interpolating them as a function of time [1]. Ray-tracing methods, presented by Buckalew and Fussell [2] and Sequin and Smyrl <ref> [11] </ref>, demonstrate the possibilities for updating lighting intensities by precomputing and storing view-dependent relationships among lights and surfaces in the environment. Unfortunately, none of these approaches are suitable for the application addressed here because of the complex geometries and large numbers of lights used for theatrical productions.
Reference: [12] <author> Ward, G. </author> <title> Real Pixels. </title> <editor> In Arvo, J. R., editor, </editor> <title> Graphics Gems II, </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: This implies that G must allow propagation of negative energy through the environment, and that we must allow for negative pixels in the basis images. Consequently, we employ a float ing point format for the basis images <ref> [12] </ref>, which means that all operations on them must be in terms of real pixels. The negative values do not appear in the key im ages, however, as they always correspond to positive settings.
References-found: 12

