URL: ftp://ftp.cs.arizona.edu/people/hiltunen/srds14.ps.Z
Refering-URL: http://www.cs.arizona.edu/cactus/public.html
Root-URL: http://www.cs.arizona.edu
Title: Membership and System Diagnosis  
Author: Matti A. Hiltunen 
Address: Tucson, AZ 85721, USA  
Affiliation: Department of Computer Science University of Arizona  
Abstract: A membership service is a service in a distributed system that maintains and provides information about which sites are functioning and which have failed at any given time. System diagnosis, on the other hand, is a method for detecting faulty processing elements and distributing this information to non-faulty elements. In spite of the apparent similarity of goals, these two fields have been considered separately from their beginnings. In this paper, we attempt to compare these fields and show the fundamental differences and the similarities. We demonstrate that the problems are closely related, with the major differences being the assumptions made about the failure model, the testing methods, and the type of service guarantees provided to the application. Furthermore, we demonstrate that the fields are closely enough related that some algorithms utilized in one field can easily be transformed into algorithms in the other. As examples, we derive new membership algorithms from a distributed system diagnosis algorithm and new system diagnosis algorithms from membership algorithms. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Y. Amir, D. Dolev, S. Kramer, and D. Malki. Transis: </author> <title> A communication sub-system for high availability. </title> <booktitle> In Proceedings of the 22nd International Symposium on Fault-Tolerant Computing, </booktitle> <pages> pages 76-84, </pages> <month> Jul </month> <year> 1992. </year>
Reference-contexts: The component responsible for coordinating the changes, depending on which properties are implemented, usually requires some type of distributed agreement, followed by dissemination of the information to all interested members. The three most typical approaches for information collection, distribution, and agreement are broadcast based (e.g., Consul [35] and Transis <ref> [1] </ref>), coordinator based (e.g., Isis [9] and [40]), and token ring based (e.g., [3, 23]). 2.2 System Diagnosis The so-called PMC model for system diagnosis was introduced in [37]. The model uses a graph G (V,E) to model the system's testing convention.
Reference: [2] <author> Y. Amir, D. Dolev, S. Kramer, and D. Malki. </author> <title> Membership algorithms for multicast communication groups. </title> <booktitle> In Proceedings of the 6th International Workshop on Distributed Algorithms, </booktitle> <pages> pages 292-312, </pages> <month> Nov </month> <year> 1992. </year>
Reference-contexts: Perhaps the most important distinction is whether the underlying communication is synchronous or asynchronous. A number of membership algorithms have been designed for synchronous systems where bounds are placed on network transmission time [17, 20, 26, 31, 44], and for asynchronous systems where no such assumption is made <ref> [2, 3, 21, 34, 38, 40, 41] </ref>. Fun--damentally, the synchrony assumption affects the degree of reliability that can be placed on testing.
Reference: [3] <author> Y. Amir, L. Moser, P. Melliar-Smith, D. Agarwal, and P. Cia-rfella. </author> <title> Fast message ordering and membership using a logical token-passing ring. </title> <booktitle> In Proceedings of the 13th International IEEE Conference on Distributed Computing Systems, </booktitle> <pages> pages 551-560, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Perhaps the most important distinction is whether the underlying communication is synchronous or asynchronous. A number of membership algorithms have been designed for synchronous systems where bounds are placed on network transmission time [17, 20, 26, 31, 44], and for asynchronous systems where no such assumption is made <ref> [2, 3, 21, 34, 38, 40, 41] </ref>. Fun--damentally, the synchrony assumption affects the degree of reliability that can be placed on testing. <p> The service guaranteed by membership algorithms also varies, ranging from ones that offer very weak properties [21, 38] to others such as Isis [8, 9] or Totem <ref> [3] </ref> that guarantee strong properties. <p> The three most typical approaches for information collection, distribution, and agreement are broadcast based (e.g., Consul [35] and Transis [1]), coordinator based (e.g., Isis [9] and [40]), and token ring based (e.g., <ref> [3, 23] </ref>). 2.2 System Diagnosis The so-called PMC model for system diagnosis was introduced in [37]. The model uses a graph G (V,E) to model the system's testing convention. <p> Furthermore, as will be discussed in the following sections, the algorithm could be augmented to provide ordering and other properties. Although the algorithm uses similar ideas as some published membership algorithms for example, using a logical ring structure <ref> [3, 23, 38] </ref> the complete algorithm is different from any of which we are aware. In terms of message complexity it is very attractive.
Reference: [4] <author> M. Barborak, M. Malek, and A. Dahbura. </author> <title> The consensus problem in fault-tolerant computing. </title> <journal> ACM Computing Survey, </journal> <volume> 25(2) </volume> <pages> 171-220, </pages> <month> Jun </month> <year> 1993. </year>
Reference-contexts: In either case, the testing unit evaluates the tested unit as either fault-free or faulty. Numerous papers on system diagnosis have followed examples of recent work fl This work supported in part by the Office of Naval Research under grant N00014-91-J-1015. can be found in <ref> [4, 5, 6, 7, 12, 14, 30, 36, 45] </ref>. The group membership problem is the problem of keeping track of which processes of a distributed computation are functioning and which have failed at any given time. <p> Despite the above efforts, little has been done to compare or contrast these two fields. An important exception is <ref> [4] </ref>, which reviewed the field of system diagnosis thoroughly and compared it to membership. Unfortunately the emphasis was heavily on system diagnosis and the comparison brief. A number of other papers, for example [19, 26], acknowledge the relationship between these problems but do not explore it any further. <p> Fairly strict assumptions are made about the behavior of faulty subunits: all faults are permanent, a fault-free subunit is always able to determine accurately the condition of a subunit it is testing, and no more than t subunits may be faulty. As noted in <ref> [4] </ref>, these assumptions are not necessarily valid or desired in a fault-tolerant, distributed network, and later work has dealt with removing these restrictions. The first problem is supervisor-controlled diagnosis. <p> We make assumptions about how the processors fail (failure model), if the communication is synchronous or asynchronous, and partially dictated by these facts, what kind of fault coverage the tests have and if false detections may occur. In <ref> [4] </ref> the problems of system diagnosis and membership are reviewed and the problems compared. The major difference noted in this paper is that membership algorithms mostly test for failures in the time domain whereas system diagnosis algorithms usually test for failures in the data domain. <p> However, in practical system diagnosis algorithms, such as [7, 14, 45], lack of response is considered a failure, i.e., time domain failures are essentially detected as well. The differences between the service guarantees or possible transformations between membership and system diagnosis algorithms were not addressed in <ref> [4] </ref>. 4 From System Diagnosis to Membership In this section we apply the observations above and show how typical distributed system diagnosis algorithms NEW SELF [25], EVENT SELF [6], and Adaptive DSD [7] can be transformed into membership algorithms.
Reference: [5] <author> P. Berman and A. Pelc. </author> <title> Distributed probabilistic fault-diagnosis for multiprocessor systems. </title> <booktitle> In Proceedings of the 20th International Symposium on Fault-Tolerant Computing, </booktitle> <pages> pages 340 - 346, </pages> <month> Jun </month> <year> 1990. </year>
Reference-contexts: In either case, the testing unit evaluates the tested unit as either fault-free or faulty. Numerous papers on system diagnosis have followed examples of recent work fl This work supported in part by the Office of Naval Research under grant N00014-91-J-1015. can be found in <ref> [4, 5, 6, 7, 12, 14, 30, 36, 45] </ref>. The group membership problem is the problem of keeping track of which processes of a distributed computation are functioning and which have failed at any given time. <p> This system model avoids many of the pitfalls of the PMC model, including the need for the complete tests, the permanent nature of faults, off-line testing, and an upper bound on the number of simultaneously faulty subunits. More recent work on probabilistic diagnosis can be found in <ref> [5, 11, 12, 30, 36] </ref>. 3 Comparison The goal of this paper is to compare membership algorithms with system diagnosis algorithms. Since membership algorithms typically are distributed by nature, we concentrate the comparison on distributed system diagnosis.
Reference: [6] <author> R. Bianchini, K. Goodwin, and D. Nydick. </author> <title> Practical application and implementation of distributed system-level diagnosis theory. </title> <booktitle> In Proceedings of the 20th International Symposium on Fault-Tolerant Computing, </booktitle> <pages> pages 332-339, </pages> <month> Jun </month> <year> 1990. </year>
Reference-contexts: In either case, the testing unit evaluates the tested unit as either fault-free or faulty. Numerous papers on system diagnosis have followed examples of recent work fl This work supported in part by the Office of Naval Research under grant N00014-91-J-1015. can be found in <ref> [4, 5, 6, 7, 12, 14, 30, 36, 45] </ref>. The group membership problem is the problem of keeping track of which processes of a distributed computation are functioning and which have failed at any given time. <p> It is shown that this property requires that any node be tested by at least t p + 1 nodes. For example, D 1t is t p self-diagnosable if t = t p + 1. More recent work on distributed diagnosis can be found in <ref> [6, 7, 14, 43, 45] </ref>. The first attempt at probabilistic diagnosis is in [32], which proposes assigning a reliability to each subunit in the network. This reliability measure is simply the probability of a fault occurring in a given subunit. <p> The differences between the service guarantees or possible transformations between membership and system diagnosis algorithms were not addressed in [4]. 4 From System Diagnosis to Membership In this section we apply the observations above and show how typical distributed system diagnosis algorithms NEW SELF [25], EVENT SELF <ref> [6] </ref>, and Adaptive DSD [7] can be transformed into membership algorithms. The transformation is based on changing the failure class and thereby the testing method. <p> As noted above, D 1t is t p self-diagnosable when t = t p + 1. The theoretically optimal NEW SELF algorithm has been found to be too expensive for practical systems, so a modified algorithm named EVENT SELF was developed <ref> [6] </ref>. The original algorithm requires a high number of diagnostic messages to be forwarded through the network. This message count is significant and can exceed network capacity for testing networks with even a small number of nodes.
Reference: [7] <author> R. Bianchini and R. Buskens. </author> <title> An adaptive distributed system-level diagnosis algorithm and its implementation. </title> <booktitle> In Proceedings of the 21st International Symposium on Fault-Tolerant Computing, </booktitle> <pages> pages 222-229, </pages> <month> Jun </month> <year> 1991. </year>
Reference-contexts: In either case, the testing unit evaluates the tested unit as either fault-free or faulty. Numerous papers on system diagnosis have followed examples of recent work fl This work supported in part by the Office of Naval Research under grant N00014-91-J-1015. can be found in <ref> [4, 5, 6, 7, 12, 14, 30, 36, 45] </ref>. The group membership problem is the problem of keeping track of which processes of a distributed computation are functioning and which have failed at any given time. <p> It is shown that this property requires that any node be tested by at least t p + 1 nodes. For example, D 1t is t p self-diagnosable if t = t p + 1. More recent work on distributed diagnosis can be found in <ref> [6, 7, 14, 43, 45] </ref>. The first attempt at probabilistic diagnosis is in [32], which proposes assigning a reliability to each subunit in the network. This reliability measure is simply the probability of a fault occurring in a given subunit. <p> Traditional system diagnosis algorithms have fixed testing assignments and can therefore tolerate a fixed number of failures, whereas most membership algorithms are prepared to tolerate any number of failures. However, lately this distinction appears to be disappearing since some recent system diagnosis algorithms, for example <ref> [7] </ref>, can tolerate any number of failures. In contrast with most system diagnosis algorithms, membership algorithms acknowledge that the detection mechanism may give false detections especially those designed for asynchronous systems in which it is impossible to tell the difference between a failed processor and a slow communication link. <p> A suggestion was made that techniques from membership algorithms could be used in system diagnosis algorithms to detect time domain failures and similarly techniques from system diagnosis algorithms could be used in membership algorithms to detect failures in the data domain. However, in practical system diagnosis algorithms, such as <ref> [7, 14, 45] </ref>, lack of response is considered a failure, i.e., time domain failures are essentially detected as well. <p> differences between the service guarantees or possible transformations between membership and system diagnosis algorithms were not addressed in [4]. 4 From System Diagnosis to Membership In this section we apply the observations above and show how typical distributed system diagnosis algorithms NEW SELF [25], EVENT SELF [6], and Adaptive DSD <ref> [7] </ref> can be transformed into membership algorithms. The transformation is based on changing the failure class and thereby the testing method. <p> Similar changes can be made to EVENT SELF to derive a new membership algorithm more efficient than the one derived from NEW SELF. 4.2 Adaptive DSD System Diagnosis Algorithm Adaptive DSD <ref> [7] </ref> is a variation of the NEW SELF algorithm where testing assignments change adaptively during the execution of the system diagnosis. Adaptive DSD assumes a distributed network, in which nodes perform tests of other nodes and determine them to be faulty or fault-free. Test results conform to the PMC model. <p> As a result of this process the fault-free processors will form a directed cycle. After N testing rounds every fault-free processor knows about every other fault-free processor in the system. The detailed algorithm and correctness proofs can be found in <ref> [7] </ref>. As noted above, the Adaptive DSD algorithm is optimal in terms of the total number of tests required. The algorithm can be improved, however, with respect to total number of messages and diagnostic latency.
Reference: [8] <author> K. Birman. </author> <title> Replication and fault-tolerance in the ISIS system. </title> <booktitle> In Proceedings of the 10th ACM Symposium on Operating System Principles, </booktitle> <pages> pages 79-86, </pages> <month> Dec </month> <year> 1985. </year>
Reference-contexts: This principle of treating a group of processes as a single entity in order to provide fault-tolerant services was introduced as part of the state machine approach [42], and a number of distributed systems like the Isis system <ref> [8] </ref> provide software support for implementation. Like diagnosis, membership has been extensively studied and a number of papers have been published proposing different algorithms for solving the problem [2, 3, 17, 20, 21, 26, 31, 34, 38, 40, 41, 44]. <p> The service guaranteed by membership algorithms also varies, ranging from ones that offer very weak properties [21, 38] to others such as Isis <ref> [8, 9] </ref> or Totem [3] that guarantee strong properties. <p> Examples of these properties would be total ordering which guarantees that applications on different sites see the membership changes in same order, or virtual synchrony <ref> [8] </ref>, which simplifies the construction of distributed applications that use the state machine approach [42]. Using the classification developed in [24], system diagnosis algorithms usually only provide change detection and agreement properties.
Reference: [9] <author> K. Birman and T. Joseph. </author> <title> Reliable communication in the presence of failures. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 5(1) </volume> <pages> 47-76, </pages> <month> Feb </month> <year> 1987. </year>
Reference-contexts: The service guaranteed by membership algorithms also varies, ranging from ones that offer very weak properties [21, 38] to others such as Isis <ref> [8, 9] </ref> or Totem [3] that guarantee strong properties. <p> is eventually reached in case no failures occur for a long enough time, while a strong property, like virtual synchrony, might specify that messages reflecting membership change events are delivered to the application by the membership layer at every group member at precisely the identical point in the message stream <ref> [9] </ref>. In general, stronger properties make it easier to write distributed applications that rely on the membership service to provide information, whereas weaker properties provide less rigorous guarantees, but are correspondingly cheaper to implement. <p> The three most typical approaches for information collection, distribution, and agreement are broadcast based (e.g., Consul [35] and Transis [1]), coordinator based (e.g., Isis <ref> [9] </ref> and [40]), and token ring based (e.g., [3, 23]). 2.2 System Diagnosis The so-called PMC model for system diagnosis was introduced in [37]. The model uses a graph G (V,E) to model the system's testing convention.
Reference: [10] <author> K. Birman and B. Glade. </author> <title> Consistent failure reporting in reliable communication systems. </title> <type> Technical Report 93-1349, </type> <institution> Department of Computer Science, Cornell University, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: Indeed, it can be shown that in an asynchronous system the failure detection can either be accurate or live but not both <ref> [10] </ref>, where an accurate membership service is one that detects a change only if the change has occurred (no false detections) and a live membership service is one that eventually detects all changes.
Reference: [11] <author> D. Blough, G. Sullivan, and G. </author> <title> Masson. Fault diagnosis for sparsely interconnected multiprocessor systems. </title> <booktitle> In Proceedings of the 19th International Symposium on Fault-Tolerant Computing, </booktitle> <pages> pages 62 - 69, </pages> <month> Jun </month> <year> 1989. </year>
Reference-contexts: This system model avoids many of the pitfalls of the PMC model, including the need for the complete tests, the permanent nature of faults, off-line testing, and an upper bound on the number of simultaneously faulty subunits. More recent work on probabilistic diagnosis can be found in <ref> [5, 11, 12, 30, 36] </ref>. 3 Comparison The goal of this paper is to compare membership algorithms with system diagnosis algorithms. Since membership algorithms typically are distributed by nature, we concentrate the comparison on distributed system diagnosis.
Reference: [12] <author> D. Blough and A. Pelc. </author> <title> Reliable diagnosis and repair in constant-degree multiprocessor systems. </title> <booktitle> In Proceedings of the 20th International Symposium on Fault-Tolerant Computing, </booktitle> <pages> pages 316 - 323, </pages> <month> Jun </month> <year> 1990. </year>
Reference-contexts: In either case, the testing unit evaluates the tested unit as either fault-free or faulty. Numerous papers on system diagnosis have followed examples of recent work fl This work supported in part by the Office of Naval Research under grant N00014-91-J-1015. can be found in <ref> [4, 5, 6, 7, 12, 14, 30, 36, 45] </ref>. The group membership problem is the problem of keeping track of which processes of a distributed computation are functioning and which have failed at any given time. <p> This system model avoids many of the pitfalls of the PMC model, including the need for the complete tests, the permanent nature of faults, off-line testing, and an upper bound on the number of simultaneously faulty subunits. More recent work on probabilistic diagnosis can be found in <ref> [5, 11, 12, 30, 36] </ref>. 3 Comparison The goal of this paper is to compare membership algorithms with system diagnosis algorithms. Since membership algorithms typically are distributed by nature, we concentrate the comparison on distributed system diagnosis.
Reference: [13] <author> M. Blount. </author> <title> Probabilistic treatment of diagnosis in digital systems. </title> <booktitle> In Proceedingsof the 7th International Symposium on Fault-Tolerant Computing, </booktitle> <pages> pages 72 - 77, </pages> <year> 1977. </year>
Reference-contexts: A probabilistically t-diagnosable (p-t-diagnosable) system is defined as one having, for every allowable syndrome, a unique, consistent fault set whose probability of occurrence is greater than p. Assigning a probability of correctness to each test rather than to the subunits themselves is proposed in <ref> [13] </ref>. Procedures are given for determining the probability of correct diagnosis for a particular fault set, and for the entire system. The general problem is to diagnose a system that suffers from intermittent failures and with tests that have imperfect coverage.
Reference: [14] <author> R. Buskens and R. Bianchini. </author> <title> Distributed on-line diagnosis in the presence of arbitrary faults. </title> <booktitle> In Proceedings of the 23rd International Symposium on Fault-Tolerant Computing, </booktitle> <pages> pages 470-479, </pages> <month> Jun </month> <year> 1993. </year>
Reference-contexts: In either case, the testing unit evaluates the tested unit as either fault-free or faulty. Numerous papers on system diagnosis have followed examples of recent work fl This work supported in part by the Office of Naval Research under grant N00014-91-J-1015. can be found in <ref> [4, 5, 6, 7, 12, 14, 30, 36, 45] </ref>. The group membership problem is the problem of keeping track of which processes of a distributed computation are functioning and which have failed at any given time. <p> It is shown that this property requires that any node be tested by at least t p + 1 nodes. For example, D 1t is t p self-diagnosable if t = t p + 1. More recent work on distributed diagnosis can be found in <ref> [6, 7, 14, 43, 45] </ref>. The first attempt at probabilistic diagnosis is in [32], which proposes assigning a reliability to each subunit in the network. This reliability measure is simply the probability of a fault occurring in a given subunit. <p> A suggestion was made that techniques from membership algorithms could be used in system diagnosis algorithms to detect time domain failures and similarly techniques from system diagnosis algorithms could be used in membership algorithms to detect failures in the data domain. However, in practical system diagnosis algorithms, such as <ref> [7, 14, 45] </ref>, lack of response is considered a failure, i.e., time domain failures are essentially detected as well.
Reference: [15] <author> T. Chandra and S. Toueg. </author> <title> Unreliable failure detectors for asynchronous systems. </title> <booktitle> In Proceedings of the 10th ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 325-340, </pages> <month> Aug </month> <year> 1991. </year>
Reference-contexts: Typically, one can identify two components in a membership service: one that is responsible for detecting (or at least raising suspicions about) membership changes, often called a monitor, failure suspector [41], or failure detector <ref> [15, 16] </ref>, and one that is responsible for coordinating the membership views on different processors. The change detection part may be based on a number of different principles.
Reference: [16] <author> T. Chandra, V. Hadzilacos, and S. Toueg. </author> <title> The weakest failure detectors for solving consensus. </title> <booktitle> In Proceedings of the 11th ACM Symposium on Principles of Distributed Computing, </booktitle> <month> Aug </month> <year> 1992. </year>
Reference-contexts: Typically, one can identify two components in a membership service: one that is responsible for detecting (or at least raising suspicions about) membership changes, often called a monitor, failure suspector [41], or failure detector <ref> [15, 16] </ref>, and one that is responsible for coordinating the membership views on different processors. The change detection part may be based on a number of different principles.
Reference: [17] <author> F. Cristian. </author> <title> Reaching agreement on processor-group membership in synchronous distributed systems. </title> <journal> Distributed Computing, </journal> <volume> 4 </volume> <pages> 175-187, </pages> <year> 1991. </year>
Reference-contexts: Perhaps the most important distinction is whether the underlying communication is synchronous or asynchronous. A number of membership algorithms have been designed for synchronous systems where bounds are placed on network transmission time <ref> [17, 20, 26, 31, 44] </ref>, and for asynchronous systems where no such assumption is made [2, 3, 21, 34, 38, 40, 41]. Fun--damentally, the synchrony assumption affects the degree of reliability that can be placed on testing.
Reference: [18] <author> A. Dahbura, K. Sabnani, and L. King. </author> <title> The comparison approach to multiprocessor fault diagnosis. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-36(3):373 - 378, </volume> <month> Mar </month> <year> 1987. </year>
Reference-contexts: The general problem is to diagnose a system that suffers from intermittent failures and with tests that have imperfect coverage. The problem using probabilistic diagnosis under the comparison approach is first studied in <ref> [18] </ref>. This system model avoids many of the pitfalls of the PMC model, including the need for the complete tests, the permanent nature of faults, off-line testing, and an upper bound on the number of simultaneously faulty subunits.
Reference: [19] <author> K. Echtle and M. Leu. </author> <title> Fault-detecting network membership protocols for unknown topologies. </title> <booktitle> In Proceedings of the Fourth International Working Conference on Dependable Computations for Critical Applications, </booktitle> <pages> pages 46-57, </pages> <month> Jan </month> <year> 1994. </year>
Reference-contexts: An important exception is [4], which reviewed the field of system diagnosis thoroughly and compared it to membership. Unfortunately the emphasis was heavily on system diagnosis and the comparison brief. A number of other papers, for example <ref> [19, 26] </ref>, acknowledge the relationship between these problems but do not explore it any further. The purpose of this paper is to contrast these two problems and show that they can be viewed as essentially the same problem with slightly different assumptions.
Reference: [20] <author> P. Ezhilchelvan and R. Lemos. </author> <title> A robust group membership algorithm for distributed real-time system. </title> <booktitle> In Proceedings of the 11th Real-Time Systems Symposium, </booktitle> <pages> pages 173-179, </pages> <month> Dec </month> <year> 1990. </year>
Reference-contexts: Perhaps the most important distinction is whether the underlying communication is synchronous or asynchronous. A number of membership algorithms have been designed for synchronous systems where bounds are placed on network transmission time <ref> [17, 20, 26, 31, 44] </ref>, and for asynchronous systems where no such assumption is made [2, 3, 21, 34, 38, 40, 41]. Fun--damentally, the synchrony assumption affects the degree of reliability that can be placed on testing.
Reference: [21] <author> R. Golding and K. Taylor. </author> <title> Group membership in the epidemic style. </title> <type> Technical Report UCSC-CRL-92-13, </type> <institution> University of California, Santa Cruz, </institution> <month> May </month> <year> 1992. </year>
Reference-contexts: Perhaps the most important distinction is whether the underlying communication is synchronous or asynchronous. A number of membership algorithms have been designed for synchronous systems where bounds are placed on network transmission time [17, 20, 26, 31, 44], and for asynchronous systems where no such assumption is made <ref> [2, 3, 21, 34, 38, 40, 41] </ref>. Fun--damentally, the synchrony assumption affects the degree of reliability that can be placed on testing. <p> The service guaranteed by membership algorithms also varies, ranging from ones that offer very weak properties <ref> [21, 38] </ref> to others such as Isis [8, 9] or Totem [3] that guarantee strong properties.
Reference: [22] <author> S. Hakimi and A. Amin. </author> <title> Characterization of connection assignment of diagnosable systems. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-23(1):86-88, </volume> <month> Jan </month> <year> 1974. </year>
Reference-contexts: Moreover, it is necessary that each subunit be tested by at least t distinct other subunits. In the special case where no two subunits test each other, these necessary conditions are also sufficient for t-diagnosability <ref> [22] </ref>. In addition to the general model, [37] gives a convenient testing subnetwork formulation for t-diagnosable systems that is used widely in later papers.
Reference: [23] <author> M. Hiltunen and R. Schlichting. </author> <title> A configurable membership service. </title> <type> Technical Report 94-37, </type> <institution> Department of Computer Science, University of Arizona, </institution> <address> Tucson, AZ, </address> <year> 1994. </year>
Reference-contexts: The three most typical approaches for information collection, distribution, and agreement are broadcast based (e.g., Consul [35] and Transis [1]), coordinator based (e.g., Isis [9] and [40]), and token ring based (e.g., <ref> [3, 23] </ref>). 2.2 System Diagnosis The so-called PMC model for system diagnosis was introduced in [37]. The model uses a graph G (V,E) to model the system's testing convention. <p> Some membership algorithms include some type of distributed vote that compares local information from different group members about the status of a suspected processor before a failure is declared <ref> [23, 34] </ref>. Even in this case, there is a possibility of false failure detection, so membership algorithms are prepared to deal with this eventuality by forcing a member suspected to have failed to fail before it is allowed to recover and rejoin the group. <p> Furthermore, as will be discussed in the following sections, the algorithm could be augmented to provide ordering and other properties. Although the algorithm uses similar ideas as some published membership algorithms for example, using a logical ring structure <ref> [3, 23, 38] </ref> the complete algorithm is different from any of which we are aware. In terms of message complexity it is very attractive.
Reference: [24] <author> M. Hiltunen and R. Schlichting. </author> <title> Properties of membership services. </title> <booktitle> In Proceedings of the 2nd International Symposium on Autonomous Decentralized Systems, </booktitle> <pages> pages 200-207, </pages> <month> Apr </month> <year> 1995. </year>
Reference-contexts: Furthermore, in order to make it easier for the applications to deal with the environment, a membership service may provide agreement, ordering, and synchronization properties <ref> [24] </ref>. Examples of these properties would be total ordering which guarantees that applications on different sites see the membership changes in same order, or virtual synchrony [8], which simplifies the construction of distributed applications that use the state machine approach [42]. Using the classification developed in [24], system diagnosis algorithms usually <p> ordering, and synchronization properties <ref> [24] </ref>. Examples of these properties would be total ordering which guarantees that applications on different sites see the membership changes in same order, or virtual synchrony [8], which simplifies the construction of distributed applications that use the state machine approach [42]. Using the classification developed in [24], system diagnosis algorithms usually only provide change detection and agreement properties.
Reference: [25] <author> S. Hosseini, J. Kuhl, and S. Reddy. </author> <title> A diagnosis algorithm for distributed computing systems with dynamic failure and repair. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-33(3):223-233, </volume> <month> Mar </month> <year> 1984. </year>
Reference-contexts: The resulting syndrome can be analyzed as in PMC model. More recently, work in the system diagnosis field has concentrated on distributed diagnosis and probabilistic diagnosis. The concept of t p self-diagnosable systems was introduced in <ref> [25] </ref> for distributed systems where there is no central coordinator that executes the diagnosis. <p> The differences between the service guarantees or possible transformations between membership and system diagnosis algorithms were not addressed in [4]. 4 From System Diagnosis to Membership In this section we apply the observations above and show how typical distributed system diagnosis algorithms NEW SELF <ref> [25] </ref>, EVENT SELF [6], and Adaptive DSD [7] can be transformed into membership algorithms. The transformation is based on changing the failure class and thereby the testing method. <p> The last example generates a new membership algorithm that appears to be very competitive with published membership algorithms due to its simplicity and low message and execution overhead. 4.1 NEW SELF System Diagnosis Algorithm NEW SELF <ref> [25] </ref> is one of the first distributed system diagnosis algorithms. It assumes that each processor in the distributed system is capable of testing its neighbors. Correctly operating processors pass on results of these tests to other processors in the network. No assumptions are made about faulty processors.
Reference: [26] <author> H. Kopetz, G. Grunsteidl, and J. Reisinger. </author> <title> Fault-tolerant membership service in a synchronous distributed real-time system. </title> <editor> In A. Avizienis and J. Laprie, editors, </editor> <booktitle> Dependable Computing for Critical Applications, </booktitle> <pages> pages 411-429. </pages> <publisher> Springer-Verlag, </publisher> <address> Vienna, </address> <year> 1991. </year>
Reference-contexts: An important exception is [4], which reviewed the field of system diagnosis thoroughly and compared it to membership. Unfortunately the emphasis was heavily on system diagnosis and the comparison brief. A number of other papers, for example <ref> [19, 26] </ref>, acknowledge the relationship between these problems but do not explore it any further. The purpose of this paper is to contrast these two problems and show that they can be viewed as essentially the same problem with slightly different assumptions. <p> Perhaps the most important distinction is whether the underlying communication is synchronous or asynchronous. A number of membership algorithms have been designed for synchronous systems where bounds are placed on network transmission time <ref> [17, 20, 26, 31, 44] </ref>, and for asynchronous systems where no such assumption is made [2, 3, 21, 34, 38, 40, 41]. Fun--damentally, the synchrony assumption affects the degree of reliability that can be placed on testing.
Reference: [27] <author> L. Lamport. </author> <title> Time, clocks, and the ordering of events in a distributed system. </title> <journal> Communications of ACM, </journal> <volume> 21(7) </volume> <pages> 558-565, </pages> <month> Jul </month> <year> 1978. </year>
Reference-contexts: We also show how the algorithm can be augmented to deal with false failure detections. One option for implementing a total order is to use a leader process like above. Here, however, we outline an implementation that relies on logical clock based times-tamp ordering <ref> [27] </ref>. Assume that the communication between processors is FIFO ordered and that each processor uses its local logical clock to timestamp the information it passes on about failures and recoveries that it has detected.
Reference: [28] <author> L. Lamport, R. Shostak, and M. Pease. </author> <title> The Byzantine generals problem. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 4(3) </volume> <pages> 382-401, </pages> <month> Jul </month> <year> 1982. </year>
Reference-contexts: System diagnosis, on the other hand, seems, in most cases, to deal with a somewhat obscure failure class, namely one that can be detected by whichever test is employed by the system diagnosis algorithm. This failure class is strictly smaller than Byzantine failures <ref> [28] </ref>, since faulty processors suffering from such a failure could fool any test. The best characterization of this failure class is incorrect computation failure, which occurs when a processor fails to produce the correct result in response to the correct inputs [29].
Reference: [29] <author> L. Laranjeira, M. Malek, and R. Jenevein. </author> <title> On tolerating faults in naturally redundant algorithms. </title> <booktitle> In Proceedings of the 10th Symposium on Reliable Distributed Systems, </booktitle> <pages> pages 118-127, </pages> <month> Sep </month> <year> 1991. </year>
Reference-contexts: The best characterization of this failure class is incorrect computation failure, which occurs when a processor fails to produce the correct result in response to the correct inputs <ref> [29] </ref>. Note, however, that if we define the test result to be fail in case no response arrives or the response arrives too late, the failure class employed by most membership algorithms is a subset of that used in system diagnosis.
Reference: [30] <author> J. Lee, H. Youn, and A. Singh. </author> <title> Adaptive voting for faulty (VFF) node scheme for distributed self-diagnosis. </title> <booktitle> In Proceedings of the 23rd International Symposium on Fault-Tolerant Computing, </booktitle> <pages> pages 480-489, </pages> <month> Jun </month> <year> 1993. </year>
Reference-contexts: In either case, the testing unit evaluates the tested unit as either fault-free or faulty. Numerous papers on system diagnosis have followed examples of recent work fl This work supported in part by the Office of Naval Research under grant N00014-91-J-1015. can be found in <ref> [4, 5, 6, 7, 12, 14, 30, 36, 45] </ref>. The group membership problem is the problem of keeping track of which processes of a distributed computation are functioning and which have failed at any given time. <p> This system model avoids many of the pitfalls of the PMC model, including the need for the complete tests, the permanent nature of faults, off-line testing, and an upper bound on the number of simultaneously faulty subunits. More recent work on probabilistic diagnosis can be found in <ref> [5, 11, 12, 30, 36] </ref>. 3 Comparison The goal of this paper is to compare membership algorithms with system diagnosis algorithms. Since membership algorithms typically are distributed by nature, we concentrate the comparison on distributed system diagnosis.
Reference: [31] <author> R. Lemos and P. Ezhilchelvan. </author> <title> Agreement on the group membership in synchronous distributed systems. </title> <booktitle> In Proceedings of the 4th International Workshop on Distributed Algorithms, </booktitle> <month> Sep </month> <year> 1990. </year>
Reference-contexts: Perhaps the most important distinction is whether the underlying communication is synchronous or asynchronous. A number of membership algorithms have been designed for synchronous systems where bounds are placed on network transmission time <ref> [17, 20, 26, 31, 44] </ref>, and for asynchronous systems where no such assumption is made [2, 3, 21, 34, 38, 40, 41]. Fun--damentally, the synchrony assumption affects the degree of reliability that can be placed on testing.
Reference: [32] <author> S. Maheshwari and S. Hakimi. </author> <title> On models for diagnosable systems and probabilistic fault diagnosis. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-25:228-236, </volume> <month> Mar </month> <year> 1976. </year>
Reference-contexts: For example, D 1t is t p self-diagnosable if t = t p + 1. More recent work on distributed diagnosis can be found in [6, 7, 14, 43, 45]. The first attempt at probabilistic diagnosis is in <ref> [32] </ref>, which proposes assigning a reliability to each subunit in the network. This reliability measure is simply the probability of a fault occurring in a given subunit.
Reference: [33] <author> M. Malek. </author> <title> A comparison connection assignment for diagnosis of multiprocessor systems. </title> <booktitle> In Proceedings of the 7th Annual Symposium on Computer Architecture, </booktitle> <pages> pages 31-36, </pages> <year> 1980. </year>
Reference-contexts: For example, when ffi = 1, unit u i tests u i+1 , u i+2 , : : :, u i+t . An interesting variant to the testing used by the PMC model is comparison testing <ref> [33] </ref>. In comparison testing tests are based on comparing computation results of productive tasks from different units in the system. In case the size of the result is too large, a function of the result such as checksum can be used instead.
Reference: [34] <author> S. Mishra, L. Peterson, and R. Schlichting. </author> <title> A membership protocol based on partial order. </title> <editor> In J. Meyer and R. Schlicht-ing, editors, </editor> <booktitle> Dependable Computing for Critical Applications 2, </booktitle> <pages> pages 309-331. </pages> <publisher> Springer-Verlag, </publisher> <address> Vienna, </address> <year> 1992. </year>
Reference-contexts: Perhaps the most important distinction is whether the underlying communication is synchronous or asynchronous. A number of membership algorithms have been designed for synchronous systems where bounds are placed on network transmission time [17, 20, 26, 31, 44], and for asynchronous systems where no such assumption is made <ref> [2, 3, 21, 34, 38, 40, 41] </ref>. Fun--damentally, the synchrony assumption affects the degree of reliability that can be placed on testing. <p> Some membership algorithms include some type of distributed vote that compares local information from different group members about the status of a suspected processor before a failure is declared <ref> [23, 34] </ref>. Even in this case, there is a possibility of false failure detection, so membership algorithms are prepared to deal with this eventuality by forcing a member suspected to have failed to fail before it is allowed to recover and rejoin the group. <p> Many membership algorithms do not explicitly test other members for failures. If an algorithm like this is taken as a starting point, an explicit test must be added. However, if the membership algorithm is such that any member can suspect the failure any other member, for example, Consul <ref> [34] </ref>, implementing corresponding semantics in the system diagnosis algorithm by means of explicit tests may be too expensive for a practical system. As was shown, the validation step can be fairly simple given leader-based information distribution.
Reference: [35] <author> S. Mishra, L. Peterson, and R. Schlichting. </author> <title> Consul: A communication substrate for fault-tolerant distributed programs. </title> <journal> Distributed System Engineering, </journal> <volume> 1 </volume> <pages> 87-103, </pages> <year> 1993. </year>
Reference-contexts: The component responsible for coordinating the changes, depending on which properties are implemented, usually requires some type of distributed agreement, followed by dissemination of the information to all interested members. The three most typical approaches for information collection, distribution, and agreement are broadcast based (e.g., Consul <ref> [35] </ref> and Transis [1]), coordinator based (e.g., Isis [9] and [40]), and token ring based (e.g., [3, 23]). 2.2 System Diagnosis The so-called PMC model for system diagnosis was introduced in [37]. The model uses a graph G (V,E) to model the system's testing convention.
Reference: [36] <author> A. Pelc. </author> <title> Efficient distributed diagnosis in the presence of random faults. </title> <booktitle> In Proceedings of the 23rd International Symposium on Fault-Tolerant Computing, </booktitle> <pages> pages 462 - 469, </pages> <month> Jun </month> <year> 1993. </year>
Reference-contexts: In either case, the testing unit evaluates the tested unit as either fault-free or faulty. Numerous papers on system diagnosis have followed examples of recent work fl This work supported in part by the Office of Naval Research under grant N00014-91-J-1015. can be found in <ref> [4, 5, 6, 7, 12, 14, 30, 36, 45] </ref>. The group membership problem is the problem of keeping track of which processes of a distributed computation are functioning and which have failed at any given time. <p> This system model avoids many of the pitfalls of the PMC model, including the need for the complete tests, the permanent nature of faults, off-line testing, and an upper bound on the number of simultaneously faulty subunits. More recent work on probabilistic diagnosis can be found in <ref> [5, 11, 12, 30, 36] </ref>. 3 Comparison The goal of this paper is to compare membership algorithms with system diagnosis algorithms. Since membership algorithms typically are distributed by nature, we concentrate the comparison on distributed system diagnosis.
Reference: [37] <author> F. Preparata, G. Metze, and R. Chien. </author> <title> On the connection assignment problem of diagnosable systems. </title> <journal> IEEE Transactions on Electronic Computer, </journal> <volume> EC-16(6):848-854, </volume> <month> Dec </month> <year> 1967. </year>
Reference-contexts: The problem becomes especially important with multiprocessors consisting of hundreds, maybe thousands, of processors, or with distributed systems consisting of tens, hundreds, or thousands of computers separated by possibly long physical distances. This problem was first tackled in <ref> [37] </ref>, which initiated the field of system diagnosis. This paper stated that a system operating in a tightly or loosely coupled distributed environment must avoid giving tasks to or using results from faulty processing elements. <p> The three most typical approaches for information collection, distribution, and agreement are broadcast based (e.g., Consul [35] and Transis [1]), coordinator based (e.g., Isis [9] and [40]), and token ring based (e.g., [3, 23]). 2.2 System Diagnosis The so-called PMC model for system diagnosis was introduced in <ref> [37] </ref>. The model uses a graph G (V,E) to model the system's testing convention. Subunits make up the set V, and directed edges in E represent one subunit applying a test to another subunit, i.e., the directed edge (A,B) denotes that A tests B. <p> Moreover, it is necessary that each subunit be tested by at least t distinct other subunits. In the special case where no two subunits test each other, these necessary conditions are also sufficient for t-diagnosability [22]. In addition to the general model, <ref> [37] </ref> gives a convenient testing subnetwork formulation for t-diagnosable systems that is used widely in later papers. <p> P i validates information from all fault-free P j 2 TESTED BY (P i ); 5. P i forwards the validated information and the results of all its tests to TESTERS OF (P i ). A good testing subnetwork for this algorithm is D 1t <ref> [37] </ref>, since it minimizes the required tests and keeps the majority of the tests between local processors. As noted above, D 1t is t p self-diagnosable when t = t p + 1.
Reference: [38] <author> R. Rajkumar, S. Fakhouri, and F. Jahanian. </author> <title> Processor group membership protocols: Specification, </title> <booktitle> design, and implementation. In Proceedings of the 12th IEEE Symposium on Reliable Distributed Systems, </booktitle> <pages> pages 2-11, </pages> <month> Oct </month> <year> 1993. </year>
Reference-contexts: Perhaps the most important distinction is whether the underlying communication is synchronous or asynchronous. A number of membership algorithms have been designed for synchronous systems where bounds are placed on network transmission time [17, 20, 26, 31, 44], and for asynchronous systems where no such assumption is made <ref> [2, 3, 21, 34, 38, 40, 41] </ref>. Fun--damentally, the synchrony assumption affects the degree of reliability that can be placed on testing. <p> The service guaranteed by membership algorithms also varies, ranging from ones that offer very weak properties <ref> [21, 38] </ref> to others such as Isis [8, 9] or Totem [3] that guarantee strong properties. <p> Furthermore, as will be discussed in the following sections, the algorithm could be augmented to provide ordering and other properties. Although the algorithm uses similar ideas as some published membership algorithms for example, using a logical ring structure <ref> [3, 23, 38] </ref> the complete algorithm is different from any of which we are aware. In terms of message complexity it is very attractive. <p> This makes it easier for an application that utilizes the information from the system diagnosis service to deal with failures in the environment. 5.1 Membership Protocol As an example, we take the family of membership protocols consisting of weak, strong, and hybrid described in <ref> [38] </ref>. All the protocols in this family assume an asynchronous communication network and processors that experience only crash failures. The protocols are based on a logical ring where every processor monitors its immediate neighbors by means of heartbeats, i.e., periodic hello messages.
Reference: [39] <author> M. Reiter. </author> <title> A secure group membership protocol. </title> <booktitle> In Proceedings of the 1994 IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 176-189, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: The failure model assumed by membership algorithms is in most cases either fail-stop, crash, or performance failures, although recently some work has been done assuming Byzantine failures <ref> [39] </ref>. System diagnosis, on the other hand, seems, in most cases, to deal with a somewhat obscure failure class, namely one that can be detected by whichever test is employed by the system diagnosis algorithm.
Reference: [40] <author> A. Ricciardi and K. Birman. </author> <title> Using process groups to implement failure detection in asynchronous environments. </title> <booktitle> In Proceedingsof 10th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 341-353, </pages> <month> Aug </month> <year> 1991. </year>
Reference-contexts: Perhaps the most important distinction is whether the underlying communication is synchronous or asynchronous. A number of membership algorithms have been designed for synchronous systems where bounds are placed on network transmission time [17, 20, 26, 31, 44], and for asynchronous systems where no such assumption is made <ref> [2, 3, 21, 34, 38, 40, 41] </ref>. Fun--damentally, the synchrony assumption affects the degree of reliability that can be placed on testing. <p> The three most typical approaches for information collection, distribution, and agreement are broadcast based (e.g., Consul [35] and Transis [1]), coordinator based (e.g., Isis [9] and <ref> [40] </ref>), and token ring based (e.g., [3, 23]). 2.2 System Diagnosis The so-called PMC model for system diagnosis was introduced in [37]. The model uses a graph G (V,E) to model the system's testing convention.
Reference: [41] <author> A. Schiper and A. Ricciardi. </author> <title> Virtually-synchronous communication based on a weak failure suspector. </title> <booktitle> In Proceedings of the 23rd International Conference on Fault-Tolerant Computing, </booktitle> <pages> pages 534-543, </pages> <month> Jun </month> <year> 1993. </year>
Reference-contexts: Perhaps the most important distinction is whether the underlying communication is synchronous or asynchronous. A number of membership algorithms have been designed for synchronous systems where bounds are placed on network transmission time [17, 20, 26, 31, 44], and for asynchronous systems where no such assumption is made <ref> [2, 3, 21, 34, 38, 40, 41] </ref>. Fun--damentally, the synchrony assumption affects the degree of reliability that can be placed on testing. <p> Typically, one can identify two components in a membership service: one that is responsible for detecting (or at least raising suspicions about) membership changes, often called a monitor, failure suspector <ref> [41] </ref>, or failure detector [15, 16], and one that is responsible for coordinating the membership views on different processors. The change detection part may be based on a number of different principles.
Reference: [42] <author> F. Schneider. </author> <title> Implementing fault-tolerant services using the state machine approach: A tutorial. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(4) </volume> <pages> 299-319, </pages> <month> Dec </month> <year> 1990. </year>
Reference-contexts: This principle of treating a group of processes as a single entity in order to provide fault-tolerant services was introduced as part of the state machine approach <ref> [42] </ref>, and a number of distributed systems like the Isis system [8] provide software support for implementation. <p> Examples of these properties would be total ordering which guarantees that applications on different sites see the membership changes in same order, or virtual synchrony [8], which simplifies the construction of distributed applications that use the state machine approach <ref> [42] </ref>. Using the classification developed in [24], system diagnosis algorithms usually only provide change detection and agreement properties.
Reference: [43] <author> A. Somani and V. Agarwal. </author> <title> Distributed syndrome decoding for regular interconnected structures. </title> <booktitle> In Proceedings of the 19th International Symposium on Fault-Tolerant Computing, </booktitle> <pages> pages 70-77, </pages> <month> Jun </month> <year> 1989. </year>
Reference-contexts: It is shown that this property requires that any node be tested by at least t p + 1 nodes. For example, D 1t is t p self-diagnosable if t = t p + 1. More recent work on distributed diagnosis can be found in <ref> [6, 7, 14, 43, 45] </ref>. The first attempt at probabilistic diagnosis is in [32], which proposes assigning a reliability to each subunit in the network. This reliability measure is simply the probability of a fault occurring in a given subunit.
Reference: [44] <author> P. van der Stok, M. Claessen, and D. Alstein. </author> <title> A hierarchical membership protocol for synchronous distributed systems. </title> <editor> In K. Echtle, D. Hammer, and D. Powell, editors, </editor> <booktitle> Proceedings of the 1st European Dependable Computing Conference, </booktitle> <pages> pages 599-616, </pages> <month> Oct </month> <year> 1994. </year>
Reference-contexts: Perhaps the most important distinction is whether the underlying communication is synchronous or asynchronous. A number of membership algorithms have been designed for synchronous systems where bounds are placed on network transmission time <ref> [17, 20, 26, 31, 44] </ref>, and for asynchronous systems where no such assumption is made [2, 3, 21, 34, 38, 40, 41]. Fun--damentally, the synchrony assumption affects the degree of reliability that can be placed on testing.
Reference: [45] <author> C. Walter, M. Hugue, and N. Suri. </author> <title> Continual on-line diagnosis of hybrid faults. </title> <booktitle> In Proceedings of the 4th International Working Conferenceon Dependable Computing for Critical Applications, </booktitle> <pages> pages 150-167, </pages> <month> Jan </month> <year> 1994. </year>
Reference-contexts: In either case, the testing unit evaluates the tested unit as either fault-free or faulty. Numerous papers on system diagnosis have followed examples of recent work fl This work supported in part by the Office of Naval Research under grant N00014-91-J-1015. can be found in <ref> [4, 5, 6, 7, 12, 14, 30, 36, 45] </ref>. The group membership problem is the problem of keeping track of which processes of a distributed computation are functioning and which have failed at any given time. <p> It is shown that this property requires that any node be tested by at least t p + 1 nodes. For example, D 1t is t p self-diagnosable if t = t p + 1. More recent work on distributed diagnosis can be found in <ref> [6, 7, 14, 43, 45] </ref>. The first attempt at probabilistic diagnosis is in [32], which proposes assigning a reliability to each subunit in the network. This reliability measure is simply the probability of a fault occurring in a given subunit. <p> A suggestion was made that techniques from membership algorithms could be used in system diagnosis algorithms to detect time domain failures and similarly techniques from system diagnosis algorithms could be used in membership algorithms to detect failures in the data domain. However, in practical system diagnosis algorithms, such as <ref> [7, 14, 45] </ref>, lack of response is considered a failure, i.e., time domain failures are essentially detected as well.
References-found: 45

