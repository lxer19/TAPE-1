URL: http://www.cs.rice.edu:80/~hristo/costs.ps.Z
Refering-URL: http://www.cs.rice.edu:80/~hristo/publications.html
Root-URL: 
Email: email: hristo@cs.rice.edu  
Title: Partitioning Graphs with Costs and Weights on Vertices: Algorithms and Applications  
Author: Hristo N. Djidjev 
Keyword: commodity flow problems.  
Address: P.O. Box 1892, Houston, TX 77251, USA,  
Affiliation: Department of Computer Science, Rice University,  
Abstract: We prove separator theorems in which the size of the separator is minimized with respect to non-negative vertex costs. We show that for any planar graph G there exists a vertex separator of total vertex cost at most c q P within a constant factor. Moreover such a separator can be found in linear time. This theorem implies a variety of other separation results discussed in the paper. We describe application of our separator theorems to graph embedding problems, graph pebbling, and multi v2V (G) (cost(v)) 2 and that this bound is optimal
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Noga Alon, Paul Seymour, and Robin Thomas. </author> <title> A separator theorem for graphs with an excluded minor and its applications. </title> <booktitle> Proceedings of the 22nd Symp. on Theory of Computing, </booktitle> <pages> pages 293-299, </pages> <year> 1990. </year>
Reference-contexts: Numerous new results on graph separation and many new application have been found since. Separator theorems exist for the class of graphs of bounded genus [6, 10], for the class of chordal graphs [11], for the three-dimensional graphs [24], for the class of graphs that exclude a given minor <ref> [1] </ref>, and for some geometrically defined graphs that include many three dimensional finite element graphs [23, 28]. Separators with special structure have been studied, including simple cycle separators [22, 9] and separators consisting of edges [5]. Leighton and Rao [17] have studies approximation algorithms for constructing separators of minimum size.
Reference: [2] <author> S. Bhatt, F. Chung, T. Leighton, and A. Rosenberg. </author> <title> Optimal simulations of tree machines. </title> <booktitle> In Proc. 27th IEEE Symposium on Foundations of Computer Science (FOCS), </booktitle> <pages> pages 274-282, </pages> <year> 1986. </year> <month> 30 </month>
Reference-contexts: Proof: According to <ref> [3, 2, 25] </ref>, any binary tree can be embedded into any of the above graphs with average dilation O (1) and expansion one. Similar results hold for embedding a planar graph into a linear, a 2-dimensional, or a d-dimensional (d 3) array.
Reference: [3] <author> S. N. Bhatt, F. R. K. Chung, J. W. Hong, F. T. Leighton, and A. L. Rosenberg. </author> <title> Optimal simulations by butterfly networks. </title> <booktitle> In Proc. 20th ACM Symposium on Theory of Computing (STOC), </booktitle> <pages> pages 192-204, </pages> <year> 1988. </year>
Reference-contexts: Proof: According to <ref> [3, 2, 25] </ref>, any binary tree can be embedded into any of the above graphs with average dilation O (1) and expansion one. Similar results hold for embedding a planar graph into a linear, a 2-dimensional, or a d-dimensional (d 3) array.
Reference: [4] <author> S.N. Bhatt and F.T. Leighton. </author> <title> A framework for solving VLSI graph layout problems. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 28 </volume> <pages> 300-343, </pages> <year> 1984. </year>
Reference-contexts: Leighton and Rao [17] have studies approximation algorithms for constructing separators of minimum size. Separator theorems have been used for solving large sparse systems of linear equations [19, 12], for developing algorithms for VLSI layout design <ref> [4, 18] </ref>, for shortest path problems [8], in parallel computing [13], and in computational complexity [21]. Our results. In many applications it is useful to associate costs with the vertices or the edges of the graph.
Reference: [5] <author> Krzystof Diks, Hristo N. Djidjev, Ondrej Sykora, and Imrich Vrto. </author> <title> Edge separators of planar and outerplanar graphs with applications. </title> <journal> J. Algorithms, </journal> <volume> 14 </volume> <pages> 258-279, </pages> <year> 1993. </year>
Reference-contexts: Separators with special structure have been studied, including simple cycle separators [22, 9] and separators consisting of edges <ref> [5] </ref>. Leighton and Rao [17] have studies approximation algorithms for constructing separators of minimum size. <p> Thus the cost cost (C) of C is bounded by cost (C) 1 X 3 O ( N (G)) = O ( N (G)): 4.2 Edge separators In <ref> [5] </ref> it has been proved that any n-vertex planar graph of maximum vertex degree d has a 2=3 edge separator of cardinality O ( p dn). We will show that, using Theorem 1, this result can easily be generalized for the case of graphs with vertex costs. <p> Note that in case of unit costs Theorem 7 yields a bound on the average dilation that is independent of the size of the graph and, by <ref> [5] </ref>, is optimal within a constant factor. As shown below Theorem 7 implies that any planar graph can be embedded into a variety of other important communication structures with a small AWD.
Reference: [6] <author> Hristo N. Djidjev. </author> <title> A separator theorem. Compt. </title> <journal> rend. Acad. bulg. Sci., </journal> <volume> 34 </volume> <pages> 643-645, </pages> <year> 1981. </year>
Reference-contexts: Lipton and Tarjan also described various applications of their separator theorem [21]. Numerous new results on graph separation and many new application have been found since. Separator theorems exist for the class of graphs of bounded genus <ref> [6, 10] </ref>, for the class of chordal graphs [11], for the three-dimensional graphs [24], for the class of graphs that exclude a given minor [1], and for some geometrically defined graphs that include many three dimensional finite element graphs [23, 28]. <p> X (cost (e)) 2 d X (cost (e)) 2 : Since each edge contributes to the cost of exactly two vertices of G, the claimed bound follows. 4.3 Separation of graphs of bounded genus For graphs of bounded genus, one can combine the technique of Section 2 with results from <ref> [6, 10] </ref> to prove separator theorems of the type of Theorems 1 and 4.
Reference: [7] <author> Hristo N. Djidjev and Shankar Venkatesan. </author> <title> Reduced constants for simple cycle graph separation. </title> <journal> Acta Informatica, </journal> <note> 1995, in print. </note>
Reference-contexts: All other steps can be implemented in linear time in a straightforward manner. We note that a more involved proof would yield even a better constant in Theorem 1. For instance, using the techniques of <ref> [7] </ref> we can replace the constant p 8 by 2 and also guarantee that the separator C is a simple cycle, provided the original graph is triangulated. 3 Tightness of the result In this section we will show that Theorem 1 is optimal within a constant factor.
Reference: [8] <author> G.N. Frederickson. </author> <title> Fast algorithms for shortest paths in planar graphs, with applications. </title> <journal> SIAM Journal on Computing, </journal> <volume> 16 </volume> <pages> 1004-1022, </pages> <year> 1987. </year>
Reference-contexts: Leighton and Rao [17] have studies approximation algorithms for constructing separators of minimum size. Separator theorems have been used for solving large sparse systems of linear equations [19, 12], for developing algorithms for VLSI layout design [4, 18], for shortest path problems <ref> [8] </ref>, in parallel computing [13], and in computational complexity [21]. Our results. In many applications it is useful to associate costs with the vertices or the edges of the graph.
Reference: [9] <author> Hillel Gazit and Gary L. Miller. </author> <title> Planar separators and the Euclidean norm. </title> <booktitle> In SIGAL 90, Lecture Notes in Computer Science, </booktitle> <volume> vol. 450, </volume> <pages> pages 338-347. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, Heidelberg, New York, Tokio, </address> <year> 1990. </year>
Reference-contexts: Separators with special structure have been studied, including simple cycle separators <ref> [22, 9] </ref> and separators consisting of edges [5]. Leighton and Rao [17] have studies approximation algorithms for constructing separators of minimum size.
Reference: [10] <author> John R. Gilbert, Joan P. Hutchinson, and Robert E. Tarjan. </author> <title> A separator theorem for graphs of bounded genus. </title> <journal> J. Algorithms, </journal> <volume> 5 </volume> <pages> 391-407, </pages> <year> 1984. </year>
Reference-contexts: Lipton and Tarjan also described various applications of their separator theorem [21]. Numerous new results on graph separation and many new application have been found since. Separator theorems exist for the class of graphs of bounded genus <ref> [6, 10] </ref>, for the class of chordal graphs [11], for the three-dimensional graphs [24], for the class of graphs that exclude a given minor [1], and for some geometrically defined graphs that include many three dimensional finite element graphs [23, 28]. <p> X (cost (e)) 2 d X (cost (e)) 2 : Since each edge contributes to the cost of exactly two vertices of G, the claimed bound follows. 4.3 Separation of graphs of bounded genus For graphs of bounded genus, one can combine the technique of Section 2 with results from <ref> [6, 10] </ref> to prove separator theorems of the type of Theorems 1 and 4. <p> We will use the following lemma, which is an adaptation of a result from <ref> [10] </ref>. 20 Lemma 4.1 Let G be a triangulated graph embedded on a surface of genus g with non-negative vertex weights that sum up to one and non-negative vertex costs. Let T be a steep spanning tree of G of maximum level l max and root rt.
Reference: [11] <author> John R. Gilbert, Donald J. Rose, and Anders Edenbrandt. </author> <title> A separator theorem for chordal graphs. </title> <journal> SIAM Journal on Algebraic and Discrete Methods, </journal> <pages> pages 306-313, </pages> <year> 1984. </year>
Reference-contexts: Lipton and Tarjan also described various applications of their separator theorem [21]. Numerous new results on graph separation and many new application have been found since. Separator theorems exist for the class of graphs of bounded genus [6, 10], for the class of chordal graphs <ref> [11] </ref>, for the three-dimensional graphs [24], for the class of graphs that exclude a given minor [1], and for some geometrically defined graphs that include many three dimensional finite element graphs [23, 28].
Reference: [12] <author> John R. Gilbert and Robert E. Tarjan. </author> <title> The analysis of a nested dissection algorithm. </title> <journal> Numerische Mathematik, </journal> <volume> 50 </volume> <pages> 377-404, </pages> <year> 1987. </year>
Reference-contexts: Separators with special structure have been studied, including simple cycle separators [22, 9] and separators consisting of edges [5]. Leighton and Rao [17] have studies approximation algorithms for constructing separators of minimum size. Separator theorems have been used for solving large sparse systems of linear equations <ref> [19, 12] </ref>, for developing algorithms for VLSI layout design [4, 18], for shortest path problems [8], in parallel computing [13], and in computational complexity [21]. Our results. In many applications it is useful to associate costs with the vertices or the edges of the graph.
Reference: [13] <author> Michael T. Goodrich. </author> <title> Planar separators and parallel polygon triangulation. </title> <booktitle> Proceedings of 24th Symp. on Theory of Computing, </booktitle> <pages> pages 507-516, </pages> <year> 1992. </year>
Reference-contexts: Leighton and Rao [17] have studies approximation algorithms for constructing separators of minimum size. Separator theorems have been used for solving large sparse systems of linear equations [19, 12], for developing algorithms for VLSI layout design [4, 18], for shortest path problems [8], in parallel computing <ref> [13] </ref>, and in computational complexity [21]. Our results. In many applications it is useful to associate costs with the vertices or the edges of the graph.
Reference: [14] <author> Samir Khuller, Balaji Raghavachari, and Neal Young. </author> <title> Designing multi-commodity flow trees. </title> <journal> Information Processing Letters, </journal> <volume> 50 </volume> <pages> 49-55, </pages> <year> 1994. </year> <month> 31 </month>
Reference-contexts: The case where the network is required to be a tree is called the tree congestion problem <ref> [14] </ref>. 28 Formally, let G = (V; E) be a digraph with non-negative real weights (demands) dem (v; w) on its edges. <p> Then load (e) = X dem (v; w): For a general weighted demands digraph G, the tree congestion problem is NP-complete [27]. A polynomial approximation algorithm with a logarithmic approximation factor is described in <ref> [14] </ref>. Seymour and Thomas [27] show that exact solution can be found in polynomial (O (jGj 4 )) time if G is planar and all demands are integers.
Reference: [15] <author> P. Klein, S. Rao, M. Rauch, and S. Subramanian. </author> <title> Faster shortest--path algorithms for planar graphs. </title> <booktitle> In 26th ACM Symp. Theory of Computing, </booktitle> <pages> pages 27-37, </pages> <year> 1994. </year>
Reference-contexts: Choose an arbitrary vertex rt to be the root of T . Run the linear time single source shortest path algorithm from <ref> [15] </ref> on the resulting planar graph, G 0 , with source any vertex rt of G 0 . 3. Define T to be the resulting shortest path tree of G 0 .
Reference: [16] <author> Leighton, Makedon, Plotkin, Stein, Tardos, and Tragoudas. </author> <title> Fast approximation algorithms for multicommodity flow problems. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 50 </volume> <pages> 228-243, </pages> <year> 1995. </year>
Reference-contexts: The total amount of flow through any of the edges should not exceed the capacity of that edge. Approximation algorithms exist that find whether there exists a feasible flow (flow that satisfies the demands and obeys all capacity constraints) <ref> [16] </ref>. We consider a related version of the problem, where given the set of demands, one has to construct a network for which a feasible flow exists and whose maximum edge capacity (called a congestion of the network) is small.
Reference: [17] <author> F. Thomas Leighton and Satish Rao. </author> <title> An approximate max-flow min-cut theorem for uniform multicommodity flow problems with applications to approximation algorithms. </title> <booktitle> In Proceedings of the 29 th IEEE Symposium on the Foundations of Computer Science, </booktitle> <pages> pages 422-431, </pages> <year> 1988. </year>
Reference-contexts: Separators with special structure have been studied, including simple cycle separators [22, 9] and separators consisting of edges [5]. Leighton and Rao <ref> [17] </ref> have studies approximation algorithms for constructing separators of minimum size. Separator theorems have been used for solving large sparse systems of linear equations [19, 12], for developing algorithms for VLSI layout design [4, 18], for shortest path problems [8], in parallel computing [13], and in computational complexity [21].
Reference: [18] <author> C.E. Leiserson. </author> <title> Area efficient VLSI computation. </title> <booktitle> In Foundations of Computing. </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1983. </year>
Reference-contexts: Leighton and Rao [17] have studies approximation algorithms for constructing separators of minimum size. Separator theorems have been used for solving large sparse systems of linear equations [19, 12], for developing algorithms for VLSI layout design <ref> [4, 18] </ref>, for shortest path problems [8], in parallel computing [13], and in computational complexity [21]. Our results. In many applications it is useful to associate costs with the vertices or the edges of the graph.
Reference: [19] <author> Richard J. Lipton, D. J. Rose, and Robert E. Tarjan. </author> <title> Generalized nested dissection. </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 16 </volume> <pages> 346-358, </pages> <year> 1979. </year>
Reference-contexts: Separators with special structure have been studied, including simple cycle separators [22, 9] and separators consisting of edges [5]. Leighton and Rao [17] have studies approximation algorithms for constructing separators of minimum size. Separator theorems have been used for solving large sparse systems of linear equations <ref> [19, 12] </ref>, for developing algorithms for VLSI layout design [4, 18], for shortest path problems [8], in parallel computing [13], and in computational complexity [21]. Our results. In many applications it is useful to associate costs with the vertices or the edges of the graph.
Reference: [20] <author> Richard J. Lipton and Robert E. Tarjan. </author> <title> A separator theorem for planar graphs. </title> <journal> SIAM J. Appl. Math, </journal> <volume> 36 </volume> <pages> 177-189, </pages> <year> 1979. </year>
Reference-contexts: A classic result of Lipton and Tarjan <ref> [20] </ref> states that a separator theorem with f (n) = O ( p n) holds for the class of planar graphs and that such a fl This work is partially supported by National Science Foundation grant CCR-9409191. 1 separator can be found in linear time. <p> Slicing the graph Given a spanning tree T of G, each non-tree edge induces a (unique) simple cycle. We call such cycle a T -cycle. Using Jordan's Curve Theorem, Lipton and Tarjan showed in <ref> [20] </ref> that if G is triangulated, then at least one T -cycle is a weighted 2/3-separator of G.
Reference: [21] <author> Richard J. Lipton and Robert E. Tarjan. </author> <title> Applications of a planar separator theorem. </title> <journal> SIAM Journal on Computing, </journal> <volume> 9 </volume> <pages> 615-627, </pages> <year> 1980. </year>
Reference-contexts: Lipton and Tarjan also described various applications of their separator theorem <ref> [21] </ref>. Numerous new results on graph separation and many new application have been found since. <p> Separator theorems have been used for solving large sparse systems of linear equations [19, 12], for developing algorithms for VLSI layout design [4, 18], for shortest path problems [8], in parallel computing [13], and in computational complexity <ref> [21] </ref>. Our results. In many applications it is useful to associate costs with the vertices or the edges of the graph. <p> The separator can be found in O (n) time. Next we describe a pebbling algorithm based on the method from <ref> [21] </ref>. Let G be an n-vertex planar graph and Q be the sum of the squares of the vertex costs of G. <p> The algorithm has a similar structure to the algorithm from <ref> [21] </ref> and uses an "(n) separators for "(n) = o (1) (instead of 2/3 separators as in Theorem 1). The interested reader is referred to [21] for more details. 5.3 Designing multi-commodity flow trees The multicommodity flow problem is related to optimally routing several different commodities in a network in order <p> The algorithm has a similar structure to the algorithm from <ref> [21] </ref> and uses an "(n) separators for "(n) = o (1) (instead of 2/3 separators as in Theorem 1). The interested reader is referred to [21] for more details. 5.3 Designing multi-commodity flow trees The multicommodity flow problem is related to optimally routing several different commodities in a network in order to satisfy a given set of demands.
Reference: [22] <author> Gary L. Miller. </author> <title> Finding small simple cycle separators for 2-connected planar graphs. </title> <journal> Journal of Computer and System Sciences, </journal> <pages> pages 265-279, </pages> <year> 1986. </year>
Reference-contexts: Separators with special structure have been studied, including simple cycle separators <ref> [22, 9] </ref> and separators consisting of edges [5]. Leighton and Rao [17] have studies approximation algorithms for constructing separators of minimum size.
Reference: [23] <author> Gary L. Miller, Shang-Hua Teng, and Stephen A. Vavasis. </author> <title> A unified geometric approach to graph separators. </title> <booktitle> Proceedings of the 32nd FOCS, </booktitle> <pages> pages 538-547, </pages> <year> 1991. </year>
Reference-contexts: Separator theorems exist for the class of graphs of bounded genus [6, 10], for the class of chordal graphs [11], for the three-dimensional graphs [24], for the class of graphs that exclude a given minor [1], and for some geometrically defined graphs that include many three dimensional finite element graphs <ref> [23, 28] </ref>. Separators with special structure have been studied, including simple cycle separators [22, 9] and separators consisting of edges [5]. Leighton and Rao [17] have studies approximation algorithms for constructing separators of minimum size.
Reference: [24] <author> Gary L. Miller and William Thurston. </author> <title> Separators in two and three dimensions. </title> <booktitle> Proceedings of the 22nd Symp. on Theory of Computing, </booktitle> <pages> pages 300-309, </pages> <year> 1990. </year>
Reference-contexts: Numerous new results on graph separation and many new application have been found since. Separator theorems exist for the class of graphs of bounded genus [6, 10], for the class of chordal graphs [11], for the three-dimensional graphs <ref> [24] </ref>, for the class of graphs that exclude a given minor [1], and for some geometrically defined graphs that include many three dimensional finite element graphs [23, 28]. Separators with special structure have been studied, including simple cycle separators [22, 9] and separators consisting of edges [5].
Reference: [25] <author> B. Monien and H. Sudborough. </author> <title> Comparing interconnection networks. </title> <booktitle> In Symposium on Mathematical Foundations of Computer Science, </booktitle> <volume> volume 320, </volume> <pages> pages 138-153, </pages> <year> 1988. </year>
Reference-contexts: Proof: According to <ref> [3, 2, 25] </ref>, any binary tree can be embedded into any of the above graphs with average dilation O (1) and expansion one. Similar results hold for embedding a planar graph into a linear, a 2-dimensional, or a d-dimensional (d 3) array.
Reference: [26] <author> N. </author> <title> Pippenger. </title> <booktitle> Advances in pebbling. In Annual International Colloquium on Automata, Languages and Programming, </booktitle> <pages> pages 407-417, </pages> <year> 1982. </year> <month> 32 </month>
Reference-contexts: The proofs of these results are similar to the proof of Theorem 7. 25 5.2 Pebbling Pebbling a directed graph is a well studied problem in programming with applications to register allocation and to deriving space-time tradeoffs (see <ref> [26, 29] </ref> for a survey of results). Pebbling is a one-person game that involves placing pebbles on the vertices of a directed acyclic graph G. During any step, one can remove a pebble from a currently pebbled vertex or place a pebble onto a vertex that currently has no pebble.
Reference: [27] <author> P. D. Seymour and R. Thomas. </author> <title> Call routing and the ratcatcher. </title> <journal> Com--binatorica, </journal> <volume> 14 </volume> <pages> 217-241, </pages> <year> 1994. </year>
Reference-contexts: For example, the demands may correspond to the expected volume of phone calls between corresponding pairs of locations and the goal will be to minimize the maximum bandwidth required <ref> [27] </ref>. Such a tree T is called a minimum routing tree. If T is fixed (but not its capacities), one can determine the smallest possible capacity load (e) on any edge e of T as follows. <p> Let E 1 and E 2 be the sets of edges of G with both endpoints in V (T 1 ) and V (T 2 ), respectively. Then load (e) = X dem (v; w): For a general weighted demands digraph G, the tree congestion problem is NP-complete <ref> [27] </ref>. A polynomial approximation algorithm with a logarithmic approximation factor is described in [14]. Seymour and Thomas [27] show that exact solution can be found in polynomial (O (jGj 4 )) time if G is planar and all demands are integers. <p> Then load (e) = X dem (v; w): For a general weighted demands digraph G, the tree congestion problem is NP-complete <ref> [27] </ref>. A polynomial approximation algorithm with a logarithmic approximation factor is described in [14]. Seymour and Thomas [27] show that exact solution can be found in polynomial (O (jGj 4 )) time if G is planar and all demands are integers.
Reference: [28] <author> Shang-Hua Teng. </author> <title> Points, spheres, and separators: A unified geometric approach to graph partitioning. </title> <institution> Ph.D.-Thesis CMU-CS-91-184, Carnegie Mellon University, Pittsburgh, </institution> <year> 1991. </year>
Reference-contexts: Separator theorems exist for the class of graphs of bounded genus [6, 10], for the class of chordal graphs [11], for the three-dimensional graphs [24], for the class of graphs that exclude a given minor [1], and for some geometrically defined graphs that include many three dimensional finite element graphs <ref> [23, 28] </ref>. Separators with special structure have been studied, including simple cycle separators [22, 9] and separators consisting of edges [5]. Leighton and Rao [17] have studies approximation algorithms for constructing separators of minimum size.
Reference: [29] <author> H. Venkateswaran and M. Tompa. </author> <title> A new pebble game that characterizes parallel complexity classes. </title> <journal> SIAM Journal on Computing, </journal> <volume> 18 </volume> <pages> 533-549, </pages> <year> 1989. </year>
Reference-contexts: The proofs of these results are similar to the proof of Theorem 7. 25 5.2 Pebbling Pebbling a directed graph is a well studied problem in programming with applications to register allocation and to deriving space-time tradeoffs (see <ref> [26, 29] </ref> for a survey of results). Pebbling is a one-person game that involves placing pebbles on the vertices of a directed acyclic graph G. During any step, one can remove a pebble from a currently pebbled vertex or place a pebble onto a vertex that currently has no pebble.
References-found: 29

