URL: http://www.bioele.nuee.nagoya-u.ac.jp/wec/papers/files/schwehm.ps.gz
Refering-URL: http://www.bioele.nuee.nagoya-u.ac.jp/wec/papers/p016.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Inference of Stochastic Regular Grammars by Massively Parallel Genetic Algorithms  
Author: Markus Schwehm and Alexander Ost 
Address: Martensstr. 3, D-91058 Erlangen, Germany  
Affiliation: Universitat Erlangen-Nurnberg, IMMD VII  
Abstract: A genetic approach to the inference of stochastic regular grammars from a given finite set of sample words is presented. The goal of the inference problem is not only to find a grammar that covers the given finite sample, but possibly also the infinite language from which the sample was taken (generalization). We propose two different bit-string representation methods for stochastic regular grammars and have a closer look at the objective function. Due to the large complexity of the problem, a massively parallel implementation of genetic algorithms was used. The algorithm was applied to a workload-modeling problem. The results are compared with reference methods like the successor-, k-tail- and k-TLSS-method.
Abstract-found: 1
Intro-found: 1
Reference: <author> W. Dulz and S. </author> <month> Hofman </month> <year> (1992). </year> <title> Grammar-Based Workload Modeling of Communication Systems. </title> <editor> In G. Balbo and G. Serazzi (eds.), </editor> <booktitle> Proc. 5th Int. Conf. Modeling Techniques and Tools for Computer Performance Evaluation, </booktitle> <pages> 16-30. </pages> <address> Amsterdam: </address> <publisher> Elsevier. </publisher>
Reference-contexts: To our knowledge, the problem of inferring stochastic grammars has not yet been considered, although this type of grammars is of specific interest e.g. in the fields of pattern recognition (Fu 1982a) or workload-modeling <ref> (Dulz and Hofman 1992) </ref>. First, some basic concepts are introduced. <p> A more elaborate measure based on the information content of the production rules can be found in <ref> (Dulz and Hofman 1992) </ref>: Definition 4 (Information content) Let h i be the number of occurrences of a symbol a i in a word w over the minimal alphabet fa 0 ; : : : ; a m g.
Reference: <author> K.-S. Fu and T. L. </author> <title> Booth (1975a). Grammatical Inference: Introduction and Survey Part 1. </title> <journal> IEEE Trans. Systems, Man and Cybernetics 5(1) </journal> <pages> 95-111. </pages>
Reference: <author> K.-S. Fu and T. L. </author> <title> Booth (1975b). Grammatical Inference: Introduction and Survey Part 2. </title> <journal> IEEE Trans. Systems, Man and Cybernetics 5(4) </journal> <pages> 409-423. </pages>
Reference: <author> K.-S. </author> <title> Fu (1982a). Syntactical Pattern Recognition and Applications. </title> <address> Englewood Cliffs, N.J.: </address> <publisher> Prentice Hall. </publisher>
Reference-contexts: To our knowledge, the problem of inferring stochastic grammars has not yet been considered, although this type of grammars is of specific interest e.g. in the fields of pattern recognition <ref> (Fu 1982a) </ref> or workload-modeling (Dulz and Hofman 1992). First, some basic concepts are introduced. <p> All of them first construct a regular non-stochastic grammar from a given sample S + , and then determine the production rule probabilities p using Fu's approximation formula <ref> (Fu 1982a) </ref>. 2.1 THE SUCCESSOR-METHOD The successor method was proposed by Garca et al (1987). For each terminal symbol a 2 V T , there is a nonterminal symbol Y a 2 V N .
Reference: <author> K.-S. </author> <title> Fu (1982b). Syntactic Pattern Recognition. </title> <address> New York: </address> <publisher> J. Wiley and Sons. </publisher>
Reference-contexts: Garca and Vidal (1990) describe how to build the corresponding regular grammars. Obviously, L (I k ; F k ; T k ) approaches S + as k grows, and equals S + for k max s2S + (jsj). 2.3 THE k-TAIL-METHOD The k-tail-method presented in <ref> (Fu 1982b) </ref> first constructs the canonical derived Grammar G d of the sample, for which L (G d ) = S + holds. Then nonterminal symbols of this grammar which generate the same subwords u for juj k are put into one equivalence class, giving the k-tail-grammar G k .
Reference: <author> P. Garca, E. Vidal and F. </author> <title> Casacuberta (1987). Local Languages, the Successor Methods, and a Step towards a General Methodology for the Inference of Regular Grammars. </title> <journal> IEEE Trans. Pattern Analysis and Machine Intelligence 9(6) </journal> <pages> 841-845. </pages>
Reference: <author> P. Garca and E. </author> <title> Vidal (1990). Inference of k-Testable Languages in the Strict Sense and Application to Syntactic Pattern Recognition. </title> <journal> IEEE Trans. Pattern Analysis and Machine Intelligence 12(9) </journal> <pages> 920-925. </pages>
Reference: <author> J. H. </author> <booktitle> Holland (1975). Adaption in Natural and Artificial Systems. </booktitle> <address> Ann Arbor: </address> <publisher> University of Michigan Press (2nd printing 1992). </publisher>
Reference-contexts: The package follows Holland's argument, that a low-level (binary) representation yields a better coverage of the search space from a schema-theoretic point of view <ref> (Holland 1975) </ref>. So the package provides the standard low-level operators for crossover and mutation, while selection and replacement are realized by local strate gies due to Manderick and Spiessens (1989). The user must supply a decoding routine for the binary represented individuals and the objective function.
Reference: <author> D. Jones and M. </author> <title> Beltramo (1991). Solving Partitioning Problems with Genetic Algorithms. </title> <editor> In R. K. Belew, L. B. Booker (eds.), </editor> <booktitle> Genetic Algorithms: Proceedings of the fourth International Conference (ICGA4), </booktitle> <pages> 442-449. </pages> <address> San Mateo: </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: So the encoding of grammars is transformed to the encoding of partitions, a problem which has yet been solved by others <ref> (Jones and Beltramo 1991, Snyers 1993) </ref>. The most promising approach for the partitioning problems is presented in (Snyers 1993), where decision trees are used as genotypical representation.
Reference: <author> M. M. </author> <month> Lankhorst </month> <year> (1994). </year> <title> Breeding Grammars: Grammatical Inference with a Genetic Algorithm. </title> <type> Internal Report, </type> <institution> Department of Computer Science, University of Gronin-gen, The Netherlands. </institution>
Reference: <author> B. Manderick and P. </author> <title> Spiessens (1989). Fine-grained parallel genetic algorithm. </title> <editor> In J. D Schaffer (ed.), </editor> <booktitle> Genetic Algorithms: Proceedings of the Third International Conference (ICGA3), </booktitle> <pages> 428-433. </pages> <address> San Mateo: </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> J. Oncina and P. </author> <month> Garca </month> <year> (1992). </year> <title> Inferring Regular Languages in Polynomial Updated Time. </title> <editor> In P. de la Blanca, A. Sanfeliu and E. Vidal (eds.), </editor> <booktitle> Selected Papers from the IVth Spanish Symp. Pattern Recognition and Image Analysis, </booktitle> <pages> 49-61. </pages> <address> Singapore: </address> <publisher> World Scientific. </publisher>
Reference-contexts: It is well known that if S + is structurally complete (i.e., each of G's production rules is involved at least once in generating S + ), then there exists a partitioning ~ of P re (S + ) such that L (P TA (S + )=~) = L (G) <ref> (Oncina and Garca 1992) </ref>. So the encoding of grammars is transformed to the encoding of partitions, a problem which has yet been solved by others (Jones and Beltramo 1991, Snyers 1993).
Reference: <author> P. Prusinkiewicz and A. </author> <title> Lindenmayer (1990). The Algorithmic Beauty of Plants. </title> <address> New York: </address> <publisher> Springer. </publisher>
Reference-contexts: It could also be used as a general description scheme for solutions in genetic search. This comes close to the biological concept of genotypes being recipes for the construction of possible solutions rather than detailed blueprints <ref> (Prusinkiewicz and Lindenmayer 1990) </ref>.
Reference: <author> M. </author> <title> Schwehm (1993). A Massively Parallel Genetic Algorithm on the MasPar MP-1. </title> <editor> In Albrecht R.F., C. R. Reeves and N. C. Steele (eds.), </editor> <booktitle> Proc. Int. Conf. Artificial Neural Nets and Genetic Algorithms, </booktitle> <pages> 502-507. </pages> <publisher> Wien: Springer. </publisher>
Reference-contexts: k max s2S + (jsj) the language L (G k ) equals S + . 3 THE GENETIC ALGORITHM The ideas presented in this paper were implemented using MPGA, a flexible, object-oriented programming environment for massively parallel genetic algorithms running on the array processor MasPar MP-1, with 1024 processing elements <ref> (Schwehm 1993) </ref>. The package follows Holland's argument, that a low-level (binary) representation yields a better coverage of the search space from a schema-theoretic point of view (Holland 1975).
Reference: <author> D. </author> <title> Snyers (1993). Clique Partitioning and Genetic Algorithms. </title> <editor> In Albrecht R.F. , C. R. Reeves and N. C. Steele (eds.), </editor> <booktitle> Proc. Int. Conf. Artificial Neural Nets and Genetic Algorithms, </booktitle> <pages> 352-360. </pages> <publisher> Wien: Springer. </publisher>
Reference-contexts: So the encoding of grammars is transformed to the encoding of partitions, a problem which has yet been solved by others (Jones and Beltramo 1991, Snyers 1993). The most promising approach for the partitioning problems is presented in <ref> (Snyers 1993) </ref>, where decision trees are used as genotypical representation. Since this is a high-level representation which requires elaborate genetic operators and is thus contradictory to the design philosophy of the used genetic algorithm package (see Section 3), it has not been implemented in this framework.
Reference: <author> P. </author> <title> Wyard (1991). Context Free Grammar Induction Using Genetic Algorithms. </title> <editor> In R. K. Belew, L. B. Booker (eds.), </editor> <booktitle> Genetic Algorithms: Proceedings of the Fourth International Conference, </booktitle> <pages> 514-518. </pages> <address> San Mateo: </address> <publisher> Morgan Kauf-mann. </publisher>
Reference: <author> P. </author> <title> Wyard (1994). Representational Issues for Context Free Grammar Induction Using Genetic Algorithms. </title> <editor> In R. C. Carrasco and J. Oncina (eds.), </editor> <booktitle> Proc. 2nd Int. Colloquium on Grammatical Inference and Applications, </booktitle> <pages> 222-235. </pages> <publisher> LNCS 862. Berlin: Springer. </publisher>
Reference: <author> H. Zhou and J. J. </author> <title> Grefenstette (1986). Induction of finite Automata by Genetic Algorithms. </title> <booktitle> In: Proc. 1986 IEEE Int. Conf. Systems, Man and Cybernetics, </booktitle> <pages> 170-174. </pages> <address> New York: </address> <publisher> IEEE press. </publisher>
Reference-contexts: One such problem is the construction of a grammar for a (finite or infinite) language from a given finite subset of this language. To apply genetic algorithms to the so called grammatical inference problem is not new, see for example <ref> (Zhou and Grefenstette 1986, Lankhorst 1994, Wyard 1994) </ref>. To our knowledge, the problem of inferring stochastic grammars has not yet been considered, although this type of grammars is of specific interest e.g. in the fields of pattern recognition (Fu 1982a) or workload-modeling (Dulz and Hofman 1992).
References-found: 18

