URL: http://www.umiacs.umd.edu/users/sarit/Articles/aaai97.ps
Refering-URL: http://www.umiacs.umd.edu/users/sarit/conference.html
Root-URL: 
Title: Negotiation On Data Allocation in Multi-Agent Environments example of a distributed knowledge system is the
Author: Rina Schwartz Sarit Kraus ; 
Keyword: Environment Description  
Note: A specific  NASA Copyright c 1997, American Association for Artificial Intelligence (www.aaai.org). All rights reserved. This material is based upon work supported in part by the NSF under Grant No. IRI-9423967. Rina Schwartz is supported by the Israeli Ministry of Science.  
Address: Ramat-Gan, 52900 Israel  College Park, MD 20742  
Affiliation: 1 Department of Mathematics and Computer Science Bar-Ilan University,  Institute for Advanced Computer Studies University of Maryland,  
Email: fschwart, saritg@macs.biu.ac.il  
Phone: 2  
Abstract: We propose a strategic negotiation model that takes into account the passage of time during the negotiation process itself in order to solve the problem of data allocation in environments with self-motivated servers which have no common interest and no central controller. The model considers situations characterized by complete, as well as incomplete, information. Using this negotiation mechanism, the servers have simple and stable negotiation strategies that result in efficient agreements without delays. We provide heuristics for finding the details of the strategies which depend on the specific settings of the environment, and demonstrate the quality of the heuristics, using simulations. We prove that our methods yield better results than the static allocation policy currently used for data allocation for servers in distributed systems. Negotiation is proposed in Distributed Artificial Intelligence (DAI) as a means for agents to communicate and compromise to reach mutually beneficial agreements. Negotiation is especially beneficial in multi-agent systems (MA), where the agents are self-motivated, and where there is no central controller (Rosenschein & Zlotkin 1994). In (Kraus, Wilkenfeld, & Zlotkin 1995), a strategic model of negotiation (Os-borne & Rubinstein 1990) was developed that takes the passage of time during the negotiation itself into consideration. It provides simple, efficient, and stable strategies for automated negotiators in a broad range of situations. In this paper, we apply and extend the strategic model of negotiation to the problem of data allocation in multi-agent environments. In our application, there are several information servers which are self-motivated but share data, and they negotiate on the allocation of data items. (NASA 1997). It is a distributed system which supports archival data and distribution of data at multiple and independent data centers (called DAACs). The current policy for data allocation in NASA is static: each DAAC specializes in some topics. When new data arrives at a DAAC, the DAAC checks if the data is relevant to one of its topics, and, if so, it uses other criteria, such as storage cost, to decide whether to accept the data and store it in its database. If the data is not relevant to the DAAC, it may forward it to another DAAC whose topics seem more relevant. Previous work on file (data) allocation in distributed systems (e.g., (Dowdy & Foster 1982; Du & Maryanski 1988)) considers systems in which a central decision maker exists, who tries to maximize the performance of the overall system. This assumption is not valid in many cases today, when trying to distribute information among self-motivated servers. We propose the use of negotiation as a solution method for environments with self-motivated servers which have no common interest and no central controller. We applied the strategic model of negotiation to such environments and provided utility functions for the agents. As it turns out, some of the assumptions made in previous negotiation models, e.g., (Kraus, Wilkenfeld, & Zlotkin 1995), are not valid in our situations. This required the adaptation of the negotiation model and finding new stable strategies. Using these strategies, the agents reach efficient agreements without delay. We provide heuristics for finding the details of the strategies, which depend on the specific setting of the environment, and we also demonstrate the heuristics' quality, using simulations. We deal with cases of complete information systems, as well as that of incomplete information. We proved that our methods yield better results than the static allocation policy currently used in such systems. Using negotiation efficiency by self-motivated servers demonstrates the benefits of using a negotiation mechanism in real world, multi-agent environments. In the environment which we consider, there is a set of several (more than two) information servers, denoted 
Abstract-found: 1
Intro-found: 1
Reference: <author> Dowdy, L. W., and Foster, D. V. </author> <year> 1982. </year> <title> Comparative models of the file assignment problem. </title> <booktitle> Computing Survey 14 </booktitle> (2):289-313. 
Reference: <author> Du, X., and Maryanski, F. J. </author> <year> 1988. </year> <title> Data allocation in a dynamically reconfigurable environment. </title> <booktitle> In Proc. of the IEEE Fourth Int. Conf. Data Engineering, </booktitle> <pages> 74-81. </pages>
Reference: <author> Garey, M. R., and Johnson, D. S. </author> <year> 1979. </year> <title> Computers and Intractability: a Guide to the Theory of NP-completeness. </title> <address> New York: </address> <note> Freedman and Comp. </note>
Reference-contexts: In particular, we propose that the designers agree upon classic search methods in order to find a global-optimal solution, which would be better for all the agents than opting out would be. However, we proved, by reduction from the Multiprocessor Scheduling problem <ref> (Garey & Johnson 1979) </ref>, that the problem of finding an allocation maximizing a welfare criterion with restrictions on the servers' utilities is NP-complete. Thus, searching for an optimal solution is not practical in a large system, and the agents should search for suboptimal solutions.
Reference: <author> Haller, H. </author> <year> 1986. </year> <title> Non-cooperative bargaining of n 3 players. </title> <journal> Economics Letters 22 </journal> <pages> 11-13. </pages>
Reference-contexts: Existence of Multiple Equilibria We have proven that for every allocation, S, which is not worse for all agents than is the conflict allocation, there is a profile of strategies in P.E. which results in accepting S in the first period of the negotiation (see also <ref> (Haller 1986) </ref>). We formally state this result in the next theorem.
Reference: <author> Kraus, S.; Wilkenfeld, J.; and Zlotkin, G. </author> <year> 1995. </year> <title> Mul-tiagent negotiation under time constraints. </title> <booktitle> Artificial Intelligence 75(2) </booktitle> <pages> 297-345. </pages>
Reference-contexts: Negotiation is proposed in Distributed Artificial Intelligence (DAI) as a means for agents to communicate and compromise to reach mutually beneficial agreements. Negotiation is especially beneficial in multi-agent systems (MA), where the agents are self-motivated, and where there is no central controller (Rosenschein & Zlotkin 1994). In <ref> (Kraus, Wilkenfeld, & Zlotkin 1995) </ref>, a strategic model of negotiation (Os-borne & Rubinstein 1990) was developed that takes the passage of time during the negotiation itself into consideration. It provides simple, efficient, and stable strategies for automated negotiators in a broad range of situations. <p> We applied the strategic model of negotiation to such environments and provided utility functions for the agents. As it turns out, some of the assumptions made in previous negotiation models, e.g., <ref> (Kraus, Wilkenfeld, & Zlotkin 1995) </ref>, are not valid in our situations. This required the adaptation of the negotiation model and finding new stable strategies. Using these strategies, the agents reach efficient agreements without delay. <p> We will show in the next lemma that, in our case, the relation between the utility of an offer and that of the conflict allocation does not change over time. This is different from the attributes of the model presented in <ref> (Kraus, Wilkenfeld, & Zlotkin 1995) </ref>. <p> In these cases, we proved that an efficient solution will be reached during the first time period, using backward induction <ref> (Kraus, Wilkenfeld, & Zlotkin 1995) </ref>. As mentioned above, in our environment, a bidding mechanism is not applicable. However, when retrieve cost = 0, then bidding mechanisms may be preferred over negotiation mechanisms.
Reference: <author> Minton, S.; Johnston, M. D.; Philips, A. B.; and Laird, P. </author> <year> 1992. </year> <title> Minimizing conflicts: a heuristic repair method for constraint satisfaction and scheduling problems. </title> <booktitle> Artificial Intelligece 58 </booktitle> <pages> 161-205. </pages>
Reference-contexts: For lack of space, we do not present the details of our simulations, but simply discuss briefly the results which were obtained. We tested three methods for finding suboptimal solutions to the problem. The first was a deterministic backtracking algorithm, the second a heuristic repair method <ref> (Minton et al. 1992) </ref> based on a random-restart hill-climbing mechanism, and the third a genetic algorithm (Siegelmann & Frieder 1992). We found that backtracking is the best technique when the number of datasets and servers is relatively small (e.g., 10 datasets and 11 servers).
Reference: <author> Myerson, R. </author> <year> 1979. </year> <title> Incentive compatibility and the bargaining problem. </title> <type> Econometrica 47(1) 61-73. </type> <institution> NASA. </institution> <year> 1997. </year> <note> EOSDIS Home Page. http://www-v0ims.gsfc.nasa.gov/v0ims/index.html. </note>
Reference-contexts: There are several approaches that can be considered for reaching agreements on dataset allocation in an incomplete information environment, for example, a voting protocol, bidding mechanisms (Sandholm 1993), revelation principle mechanisms <ref> (Myerson 1979) </ref>, and negotiation models without revelation steps. None of these models are applicable in our environment, for reasons which cannot be specified here, due to constraints of space. We propose to use a negotiation protocol with a revelation phase, as presented below. The revelation mechanism includes the following steps.
Reference: <author> Nash, J. F. </author> <year> 1953. </year> <title> Two-person cooperative games. </title> <type> Econometrica 21 </type> <pages> 128-140. </pages>
Reference-contexts: Definition 3 A strategy profile is a subgame perfect equilibrium of a model of alternating offers if the strategy profile induces in every subgame a Nash equilibrium <ref> (Nash 1953) </ref> of that subgame.
Reference: <author> Osborne, M. J., and Rubinstein, A. </author> <year> 1990. </year> <title> Bargaining and Markets. </title> <address> California: </address> <publisher> Academic Press. </publisher>
Reference-contexts: We propose a negotiation process for solving these conflicts, whereby all the servers participate in the negotiation, until an agreement is reached concerning the distribution of the datasets among the servers. Mechanism for Negotiation The negotiation protocol is the model of Alternating Offers <ref> (Osborne & Rubinstein 1990) </ref>. As we mentioned above, it is a process that may include several iterations and may even continue forever.
Reference: <author> Rosenschein, J. S., and Zlotkin, G. </author> <year> 1994. </year> <title> Rules of Encounter: Designing Conventions for Automated Negotiation Among Computers. </title> <address> Boston: </address> <publisher> MIT Press. </publisher>
Reference-contexts: Negotiation is proposed in Distributed Artificial Intelligence (DAI) as a means for agents to communicate and compromise to reach mutually beneficial agreements. Negotiation is especially beneficial in multi-agent systems (MA), where the agents are self-motivated, and where there is no central controller <ref> (Rosenschein & Zlotkin 1994) </ref>. In (Kraus, Wilkenfeld, & Zlotkin 1995), a strategic model of negotiation (Os-borne & Rubinstein 1990) was developed that takes the passage of time during the negotiation itself into consideration. It provides simple, efficient, and stable strategies for automated negotiators in a broad range of situations. <p> Then, the designers will provide their agents, in advance, with that mechanism and with the strategies of 4 It is possible to reach such results using other negotiation protocols (e.g., <ref> (Rosenschein & Zlotkin 1994) </ref>).
Reference: <author> Rubinstein, A. </author> <year> 1982. </year> <title> Perfect equilibrium in a bargaining model. </title> <type> Econometrica 50(1) </type> <pages> 97-109. </pages>
Reference-contexts: No designer will benefit by building agents that use any other strategy, and no agent will benefit from deviating from its strategy, given that all the other agents follow them. Subgame Perfect Equilibria We will use the strong notion of (subgame) perfect equilibrium (P.E.) <ref> (Rubinstein 1982) </ref>. A profile of strategies is a perfect equilibrium if in each stage of the negotiation, assuming that all agents, but one, follow their strategies in the profile, the other agent has no better strategy than to follow its own strategy in the profile.
Reference: <author> Sandholm, T. </author> <year> 1993. </year> <title> An implementation of the contract net protocol based on marginal cost calculations. </title> <booktitle> In Proc. of AAAI-93, </booktitle> <pages> 256-262. </pages>
Reference-contexts: There are several approaches that can be considered for reaching agreements on dataset allocation in an incomplete information environment, for example, a voting protocol, bidding mechanisms <ref> (Sandholm 1993) </ref>, revelation principle mechanisms (Myerson 1979), and negotiation models without revelation steps. None of these models are applicable in our environment, for reasons which cannot be specified here, due to constraints of space. We propose to use a negotiation protocol with a revelation phase, as presented below.
Reference: <author> Siegelmann, H., and Frieder, O. </author> <year> 1992. </year> <title> Document allocation in multiprocessor information retrieval systems. </title> <type> Technical Report IA-92-1, </type> <institution> George Mason Univ. </institution>
Reference-contexts: We tested three methods for finding suboptimal solutions to the problem. The first was a deterministic backtracking algorithm, the second a heuristic repair method (Minton et al. 1992) based on a random-restart hill-climbing mechanism, and the third a genetic algorithm <ref> (Siegelmann & Frieder 1992) </ref>. We found that backtracking is the best technique when the number of datasets and servers is relatively small (e.g., 10 datasets and 11 servers). As the number of datasets and servers increases, the performance of hill-climbing and genetic algorithms relative to the backtracking increases.
References-found: 13

