URL: http://www.cs.cornell.edu/home/jgm/papers/jgmorris-ppopp.ps
Refering-URL: http://www.cs.cornell.edu/home/jgm/papers.html
Root-URL: http://www.cs.cornell.edu
Title: Typing first-class continuations in ML. In Conference 1991. Multilisp: A language for concurrent A customizable
Author: B. F. Duba, R. W. Harper, and D. B. MacQueen. [] R. Gabriel and J. McCarthy. R. H. Halstead, Jr. [] S. Jagannathan and J. Philbin. [] S. Jagannathan and J. Philbin. [] D. A. Kranz, R. H. Halstead, Jr., and E. Mohr. Mul-T: [] B. D. Marsh, M. L. Scott, T. J. LeBlanc, and E. P. Markatos. [] R. Milner, M. Tofte, and R. Harper. [] E. Mohr. J. H. Reppy. M. R. Swanson, R. R. Kessler, and G. Lindstrom. [] A. P. Tolmach and A. W. Appel. [] M. Weiser, A. Demers, and C. Hauser. [] J. M. Wing, M. Faehndrich, J. G. Morrisett, and S. Nettles. 
Address: Rep. CS-TR-378-92.  
Affiliation: Princeton Univ. Dept. of Computer Science Tech.  Princeton Univ. Dept. of Computer Science Tech.  
Date: 163-173, Jan.  1988.  7(4):501-538, Oct. 1985.  27(7), July 1992.  345-357, June 1992.  24(7), July 1989.  25(5), Oct. 1991.  Aug. 1987.  Aug. 1991.  293-305, June 1991.  July 1988.  Aug. 1980.  114-122, Dec. 1989.  118, June 1992.  
Note: [16]  Record of the 18th Annual ACM Symposium on Principles of Programming Languages, pages  Qlisp. In J. Kowalik, editor, Parallel Computation and Computers for Artificial Intelligence, pages 63-89. Kluwer Academic Publishers, Boston,  [19]  symbolic computation. ACM Trans. Prog. Lang. Syst.,  In Proc. ACM SIG-PLAN '92 Conference on Programming Language Design and Implementation, pages 55-67, June 1992. Pub lished as SIGPLAN Notices,  In Proc. 1992 ACM Conference on Lisp and Functional Programming, pages  A high-performance parallel Lisp. In ACM SIGPLAN '89 Conference on Programming Language Design and Implementation, pages 81-90, June 1989. Published as SIGPLAN Notices,  In Proc. 13th ACM Symposium on Operating Systems Principles, pages 110-121, Oct. 1991. Published as Operating Systems Review,  [25] J. Miller. MultiScheme: A parallel processing system based on MIT Scheme. PhD thesis, Massachusetts In stitute of Technology,  grams. PhD thesis, Yale University,  [30]  In Proceedings of the ACM SIGPLAN '91 Conference on Programming Language Design and Implementation, pages  [32]  In Proceedings of the 1988 ACM Conference on Lisp and Functional Programming, pages 132-141,  [34] A. P. Tolmach. Debugging Standard ML. PhD thesis, Princeton University, Oct. 1992. Also  In Proc. ACM/ONR Workshop on Parallel and Distributed Debugging, pages 120-131, May 1991. Published as SIGPLAN Notices 26(12), December 1991. Also  Rep. CS-TR-352-91. [36] M. Wand. Continuation-based multiprocessing. In Proceedings of the 1980 LISP Conference, pages 19-28,  In Proceedings of the 12th ACM Symposium on Operating Sys tems Principles, pages  to support transactions. In Proceedings of the ACM SIGPLAN Workshop on ML and its Applications, San Francisco, pages 104  
Abstract: 13] E. C. Cooper and J. G. Morrisett. Adding threads to Standard ML. Technical Report CMU-CS-90-186, School of Computer Science, Carnegie Mellon Univer sity, Dec. 1990. [14] W. P. Crowley, C. P. Hendrickson, and T. E. Rudy. The SIMPLE code. Technical Report UCID 17715, Lawrence Livermore Laboratory, Livermore, CA, Feb. 1978. [15] T. W. Doeppner Jr. Threads: A system for the support of concurrent programming. Technical Report CS-87-11, Department of Computer Science, Brown Univer sity, June 1987. [18] R. Goldman and R. P. Gabriel. Preliminary results with the initial implementation of Qlisp. In Proceedings of the 1988 ACM Conference on Lisp and Functional Pro gramming, pages 143-152, July 1988. [24] D. C. J. Matthews. A distributed concurrent implementation of Standard ML. Technical Report ECS-LFCS-91-174, Laboratory for Foundations of Computer Science, Dept. of Computer Science, University of Edin burgh, Aug. 1991. [28] N. Ramsey. Concurrent programming in ML. Technical Report CS-TR-262-90, Department of Computer Science, Princeton University, Apr. 1990. [29] J. H. Reppy. Asynchronous signals in Standard ML. Technical Report TR 90-1144, Department of Com puter Science, Cornell University, Aug. 1990. [31] J. H. Reppy. High-order Concurrency. PhD thesis, Computer Science Department, Cornell University, Ithaca, NY, Jan. 1992. Also Cornell Univ. Computer Science Dept. Tech. Report 92-1285. [33] D. Tarditi, A. Acharya, and P. Lee. No assembly required: Compiling Standard ML to C. Technical Report CMU-CS-90-187, School of Computer Science, Carnegie Mellon University, Nov. 1990. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Anderson. </author> <title> The performance of spin lock alternatives for shared memory multiprocessors. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 1(1) </volume> <pages> 6-16, </pages> <month> Jan. </month> <year> 1990. </year>
Reference: [2] <author> T. E. Anderson, B. N. Bershad, E. D. Lazowska, and H. M. Levy. </author> <title> Scheduler activations: Effective kernel support for the user-level management of parallelism. </title> <booktitle> In Proc. 13th ACM Symposium on Operating Systems Principles, </booktitle> <pages> pages 95-109, </pages> <month> Oct. </month> <year> 1991. </year>
Reference: [3] <author> A. W. Appel. </author> <title> Garbage collection can be faster than stack allocation. </title> <journal> Information Processing Letters, </journal> <volume> 25(4) </volume> <pages> 275-279, </pages> <month> June </month> <year> 1987. </year>
Reference: [4] <author> A. W. Appel. </author> <title> Simple generational garbage collection and fast allocation. </title> <journal> Software|Practice & Experience, </journal> <volume> 19(2) </volume> <pages> 171-183, </pages> <month> Feb. </month> <year> 1989. </year>
Reference: [5] <author> A. W. Appel. </author> <title> A runtime system. </title> <journal> Journal of Lisp and Symbolic Computation, </journal> <volume> 3(4) </volume> <pages> 343-380, </pages> <month> Nov. </month> <year> 1990. </year>
Reference: [6] <author> A. W. Appel. </author> <title> Compiling with Continuations. </title> <publisher> Cam-bridge University Press, </publisher> <year> 1992. </year>
Reference: [7] <author> A. W. Appel and D. B. MacQueen. </author> <title> Standard ML of New Jersey. </title> <editor> In M. Wirsing, editor, </editor> <booktitle> Third Int'l Symp. on Prog. Lang. Implementation and Logic Programming, </booktitle> <pages> pages 1-13, </pages> <address> New York, Aug. 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference: [8] <author> D. Berry, R. Milner, and D. Turner. </author> <title> A semantics for ML concurrency primitives. </title> <booktitle> In Proceedings of the Nineteenth ACM Symposium on Principles of Programming Languages, </booktitle> <pages> pages 119-129, </pages> <month> Jan. </month> <year> 1992. </year>
Reference: [9] <author> G. Bilardi and A. Nicolau. </author> <title> Adaptive bitonic sorting: An optimal parallel algorithm for shared-memory machines. </title> <journal> SIAM Journal of Computing, </journal> <volume> 18(2) </volume> <pages> 216-228, </pages> <month> Apr. </month> <year> 1989. </year>
Reference: [10] <editor> W. Clinger and J. Rees. </editor> <title> Revised 4 report on the algorithmic language Scheme. LISP Pointers, </title> <address> IV(3):1-55, July-Sep. </address> <year> 1991. </year>
Reference: [11] <author> E. Cooper, R. Harper, and P. Lee. </author> <title> The Fox project: Advanced development of systems software. </title> <type> Technical Report CMU-CS-91-178, </type> <institution> School of Computer Science, Carnegie Mellon University, </institution> <month> Aug. </month> <year> 1991. </year>

References-found: 11

