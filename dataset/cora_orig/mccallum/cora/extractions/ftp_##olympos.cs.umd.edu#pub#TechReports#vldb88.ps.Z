URL: ftp://olympos.cs.umd.edu/pub/TechReports/vldb88.ps.Z
Refering-URL: http://www.cs.umd.edu/~christos/cpub.html
Root-URL: 
Title: Fast Text Access Methods for Optical and Large Magnetic Disks: Designs and Performance Comparison.  
Author: Christos Faloutsos Raphael Chan 
Address: College Park, MD 20742  
Affiliation: Department of Computer Science University of Maryland  
Abstract: High capacity disks, especially optical ones, are commercially available. These disks are ideal for archiving large text data bases. In this work, we examine efficient searching techniques for such applications. We propose a unifying framework, which reveals the similarities between signature files and an inverted file using a hash table. Then, we design methods that combine the ease of insertion of the signature files with the fast retrieval of the inverted files. We develop analytical models for their performance and we verify it through experimentation on a 2.8 Mb data base. The agreement between theory and experimentation is very good. The results show that the proposed methods achieve fast retrieval, they require a modest 10%-30% space overhead, (as opposed to 50%- 300% overhead [13] for the inverted files), and they do not require re-writing; thus, they can handle insertions easily, they permit searches during an insertion and they can be used with write-once optical disks. Using our verified model, the performance predictions for the proposed methods on large data bases (e.g., 250 Mb) are very promising. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Berra, P.B., S.M. Chung, and N.I. Hachem, </author> <title> ``Computer Architecture for a Surrogate File to a Very Large Data/Knowledge Base,'' </title> <journal> IEEE Computer Magazine, </journal> <volume> vol. 20, no. 3, </volume> <pages> pp. 25-32, </pages> <month> March </month> <year> 1987. </year>
Reference-contexts: The proposed methods combine the best of both worlds (signature files and inversion), and can compete against both. Thus, they can be applied in any situation where the traditional SSF have been applied, such as rule indexing in Prolog data bases <ref> [1] </ref>, [23], for formatted attributes [20], [24], or combinations of attributes and text [6] etc.. The proposed methods can also compete against traditional inverted files on magnetic disks, or on erasable optical disks: They give fast responses, for smaller space overhead, allowing searches even during an insertion.
Reference: 2. <author> Christodoulakis, S. and C. Faloutsos, </author> <title> ``Design Considerations for a Message File Server,'' </title> <journal> IEEE Trans. on Software Engineering, </journal> <volume> vol. SE-10, no. 2, </volume> <pages> pp. 201-210, </pages> <month> March </month> <year> 1984. </year>
Reference-contexts: The method is faster than full text scanning but slower than inversion [22] on large data bases. It requires much smaller space overhead than inversion ( ~ ~ 10% <ref> [2] </ref>, as opposed to 50%-300% that inversion requires [13]) and it can handle insertions easily. Signature files typically use superimposed coding [17] to create the signature of a document. A brief description of the method follows; more details are in [5].
Reference: 3. <author> Christodoulakis, S., F. Ho, and M. Theodoridou, </author> <title> ``The Multimedia Object Presentation Manager in MINOS: A Symmetric Approach,'' </title> <booktitle> Proc. ACM SIGMOD, </booktitle> <month> May </month> <year> 1986. </year>
Reference-contexts: 1. Introduction Text retrieval methods have attracted much interest recently <ref> [3, 11, 12, 27, 30] </ref>. One of the main reasons is probably the development of optical disks. Text databases are traditionally large and have archival nature: there are insertions in them, but almost never deletions and updates. These two characteristics make the optical disks the ideal storage medium. <p> Notice that the write-once restriction creates no problems for text databases, exactly because there are seldom deletions and updates. There are numerous applications involving storage and retrieval of textual data: Electronic office filing [30], <ref> [3] </ref>. Computerized libraries. For example, the U.S. Library of Congress has been pursuing the "Optical Disk Pilot Program" [21], [18], where the goal is to digitize the documents and store them on an optical disk. A similar project is carried out at the National Library of Medicine [29].
Reference: 4. <author> Ewing, J., S. Mehrabanzad, S. Sheck, D. Ostroff, and B. Shneiderman, </author> <title> ``An Experimental Comparison of a Mouse and Arrow-jump Keys for an Interactive Encyclopedia,'' </title> <journal> Int. Journal of Man-Machine Studies, </journal> <volume> vol. 24, no. 1, </volume> <pages> pp. 29-45, </pages> <month> Jan. </month> <year> 1986. </year>
Reference-contexts: The U.S. Patent and Trademark Office has been examining electronic storage and retrieval of the recent patents on a system of 200 optical disks. Electronic storage and retrieval of articles from newspapers and magazines. Consumers' data bases, which contain descriptions of products in natural language. Electronic encyclopedias <ref> [4] </ref>, [12]. Indexing of software components to enhance reu sability [26]. All of the above applications require an efficient search method. This is exactly the problem addressed in this work.
Reference: 5. <author> Faloutsos, C., </author> <title> ``Access Methods for Text,'' </title> <journal> ACM Computing Surveys, </journal> <volume> vol. 17, no. 1, </volume> <pages> pp. 49-74, </pages> <month> March </month> <year> 1985. </year>
Reference-contexts: F d = N actual drops false drops We examine single word queries in this paper. General Boolean queries will be examined in the near future. 3. Survey. Text retrieval methods form the following large classes <ref> [5] </ref>: Full text scanning, inversion, and signature files, which we shall focus next. Signature files work as follows: The documents are stored sequentially in the "text file". Their "signatures" (hash-coded bit patterns) are stored sequentially in the "signature file". <p> Signature files typically use superimposed coding [17] to create the signature of a document. A brief description of the method follows; more details are in <ref> [5] </ref>.
Reference: 6. <author> Faloutsos, C., </author> <title> ``Integrated access methods for messages using signature files,'' </title> <booktitle> IFIP WG 8.4 Working Conference on Methods and Tools for Office systems, </booktitle> <pages> pp. 135-157, </pages> <address> Pisa, Italy, </address> <month> October </month> <year> 1986. </year>
Reference-contexts: Thus, they can be applied in any situation where the traditional SSF have been applied, such as rule indexing in Prolog data bases [1], [23], for formatted attributes [20], [24], or combinations of attributes and text <ref> [6] </ref> etc.. The proposed methods can also compete against traditional inverted files on magnetic disks, or on erasable optical disks: They give fast responses, for smaller space overhead, allowing searches even during an insertion. They only suffer from the lack of alphabetical ordering on the words of the vocabulary.
Reference: 7. <author> Faloutsos, C. and R. Chan, </author> <title> ``Fast Text Access Methods for Optical and Large Magnetic Disks: Designs and Performance Comparison,'' </title> <institution> UMIACS-TR-87-66 CS-TR-1958, Univ. of Mary-land, College Park, </institution> <month> Dec. </month> <year> 1987. </year>
Reference-contexts: disk accesses (5.0.1) d R,u =d R,i,u + F d N L disk accesses (5.0.2) For the last three methods, that use compressed bit sliced signatures, we have: d I =D (d R,i,s +1) (5.0.3) Due to space limitations, we omit the details of the derivation of the formulas (see <ref> [7] </ref>). 5.1. Sequential Signature Files (SSF). Overhead. O V = J F N H J R J P J pages (5.1.1) False drop probability. <p> Notice that some of the design parameters are not "fine tuned". The main goal in this section is to validate our analytical model, and not to exhibit the best performance that the methods can achieve. Ways of fine tuning the parameters are discussed in <ref> [7] </ref>. Graphs G6.1-2 compare the theoretical and experimental false drop probability F d and the search time for the index (d R,i,s and d R,i,u ), for CBS. The horizontal axis is the size of the hash table S.
Reference: 8. <author> Faloutsos, C. and S. Christodoulakis, </author> <title> ``Signature Files: An Access Method for Documents and its Analytical Performance Evaluation,'' </title> <journal> ACM Trans. on Office Information Systems, </journal> <volume> vol. 2, no. 4, </volume> <pages> pp. 267-288, </pages> <month> Oct. </month> <year> 1984. </year>
Reference-contexts: Notice that methods that require dynamic rearrangements of the index, such as a B-tree inverted index, can not easily take advantage of such an arrangement, because they will require a large portion of the (already large) index to reside on the magnetic disk. Signature files <ref> [8, 9] </ref> satisfy the insertion and space requirements, but may be slow for large data bases. In order to accelerate their search time, we examine bit-sliced storage of the signature file; in addition, we propose compression of each bit-slice, which achieves even better search times.
Reference: 9. <author> Faloutsos, C. and S. Christodoulakis, </author> <title> ``Description and Performance Analysis of Signature File Methods,'' </title> <journal> ACM TOOIS, </journal> <volume> vol. 5, no. 3, </volume> <pages> pp. 237-257, </pages> <year> 1987. </year>
Reference-contexts: Notice that methods that require dynamic rearrangements of the index, such as a B-tree inverted index, can not easily take advantage of such an arrangement, because they will require a large portion of the (already large) index to reside on the magnetic disk. Signature files <ref> [8, 9] </ref> satisfy the insertion and space requirements, but may be slow for large data bases. In order to accelerate their search time, we examine bit-sliced storage of the signature file; in addition, we propose compression of each bit-slice, which achieves even better search times. <p> The classification of Table T4.1 encompasses all the text retrieval methods that allow false drops. The SSF method is naturally in the entry for row-wise storage, without compression. The VBC method (Variable Bit-block Compression) <ref> [9] </ref> suggests row-wise storage of the bit matrix, followed by compression of each row. There, it was showed that, whenever compression is applied, the best value for m is 1. VBC achieves better false drop probability for the same space overhead than SSF.
Reference: 10. <author> Fujitani, L., </author> <title> ``Laser Optical Disk: The Coming Revolution in On-Line Storage,'' </title> <journal> CACM, </journal> <volume> vol. 27, no. 6, </volume> <pages> pp. 546-554, </pages> <month> June </month> <year> 1984. </year>
Reference-contexts: This research was sponsored partially by the National Science Foundation under the grant DCR-86-16833. recording capacities (of the order of 1 Gigabyte for 12'' platters), low cost ( ~ ~ 300 dollars for a 12'' disk) and long archival life (at least 10 years <ref> [10] </ref>). The proposed methods compete well on all classes of optical disks: the read-only CD-ROMs, the write-once-read-many (WORM) ones, and the erasable ones. They also compete on the traditional magnetic disks, as well.
Reference: 11. <author> Gonnet, </author> <title> G.H., ``Unstructured Data Bases,'' </title> <type> Tech. Report CS-82-09, </type> <institution> Univ. of Waterloo, </institution> <year> 1982. </year>
Reference-contexts: 1. Introduction Text retrieval methods have attracted much interest recently <ref> [3, 11, 12, 27, 30] </ref>. One of the main reasons is probably the development of optical disks. Text databases are traditionally large and have archival nature: there are insertions in them, but almost never deletions and updates. These two characteristics make the optical disks the ideal storage medium.
Reference: 12. <author> Gonnet, G.H. and F.W. Tompa, </author> <title> ``Mind your gram-mar: a new approach to modelling text,'' </title> <booktitle> Proc. of the Thirteenth Int. Conf. on Very Large Data Bases, </booktitle> <pages> pp. 339-346, </pages> <address> Brighton, England, </address> <month> Sept. </month> <pages> 1-4, </pages> <year> 1987. </year>
Reference-contexts: 1. Introduction Text retrieval methods have attracted much interest recently <ref> [3, 11, 12, 27, 30] </ref>. One of the main reasons is probably the development of optical disks. Text databases are traditionally large and have archival nature: there are insertions in them, but almost never deletions and updates. These two characteristics make the optical disks the ideal storage medium. <p> The U.S. Patent and Trademark Office has been examining electronic storage and retrieval of the recent patents on a system of 200 optical disks. Electronic storage and retrieval of articles from newspapers and magazines. Consumers' data bases, which contain descriptions of products in natural language. Electronic encyclopedias [4], <ref> [12] </ref>. Indexing of software components to enhance reu sability [26]. All of the above applications require an efficient search method. This is exactly the problem addressed in this work.
Reference: 13. <author> Haskin, </author> <title> R.L., ``Special-Purpose Processors for Text Retrieval,'' </title> <journal> Database Engineering, </journal> <volume> vol. 4, no. 1, </volume> <pages> pp. 16-29, </pages> <month> Sept. </month> <year> 1981. </year>
Reference-contexts: The method is faster than full text scanning but slower than inversion [22] on large data bases. It requires much smaller space overhead than inversion ( ~ ~ 10% [2], as opposed to 50%-300% that inversion requires <ref> [13] </ref>) and it can handle insertions easily. Signature files typically use superimposed coding [17] to create the signature of a document. A brief description of the method follows; more details are in [5].
Reference: 14. <author> Hollaar, L.A., </author> <title> ``Text Retrieval Computers,'' </title> <journal> IEEE Computer Magazine, </journal> <volume> vol. 12, no. 3, </volume> <pages> pp. 40-50, </pages> <month> March </month> <year> 1979. </year>
Reference-contexts: Computerized libraries. For example, the U.S. Library of Congress has been pursuing the "Optical Disk Pilot Program" [21], [18], where the goal is to digitize the documents and store them on an optical disk. A similar project is carried out at the National Library of Medicine [29]. Automated law <ref> [14] </ref> and patent offices [15]. The U.S. Patent and Trademark Office has been examining electronic storage and retrieval of the recent patents on a system of 200 optical disks. Electronic storage and retrieval of articles from newspapers and magazines. Consumers' data bases, which contain descriptions of products in natural language.
Reference: 15. <author> Hollaar, L.A., K.F. Smith, W.H. Chow, </author> <title> P.A. Emrath, and R.L. Haskin, ``Architecture and Operation of a Large, Full-Text Information-Retrieval System,'' in Advanced Database Machine Architecture, </title> <editor> ed. D.K. </editor> <booktitle> Hsiao, </booktitle> <pages> pp. 256-299, </pages> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1983. </year>
Reference-contexts: Library of Congress has been pursuing the "Optical Disk Pilot Program" [21], [18], where the goal is to digitize the documents and store them on an optical disk. A similar project is carried out at the National Library of Medicine [29]. Automated law [14] and patent offices <ref> [15] </ref>. The U.S. Patent and Trademark Office has been examining electronic storage and retrieval of the recent patents on a system of 200 optical disks. Electronic storage and retrieval of articles from newspapers and magazines. Consumers' data bases, which contain descriptions of products in natural language. Electronic encyclopedias [4], [12]. <p> The idea is that the readers can ignore the newly written items, which will not overwrite the old items in the data base, exactly because no re-writing is necessary. This is very important in archival environments with large insertion and query frequencies, such as the U.S. patent office <ref> [15] </ref>. g The method can work more easily on a WORM disk: Every change on the index will not require re-writing, which is impossible in WORMs.
Reference: 16. <author> Knott, G.D., </author> <title> ``Expandable Open Addressing Hash Table Storage and Retrieval,'' </title> <booktitle> Proc. SIGFIDET, </booktitle> <pages> pp. 187-206, </pages> <address> San Diego, Calif, </address> <year> 1971. </year>
Reference-contexts: They only suffer from the lack of alphabetical ordering on the words of the vocabulary. However, using order preserving hashing functions <ref> [16] </ref>, this disadvantage can be eliminated. Finally, the proposed methods can be used easily on CD-ROMs. There, the whole data base is available during the design time; accurate statistics can be gathered, and the design parameters can be fine-tuned to the specific data base and the specific performance requirements.
Reference: 17. <author> Mooers, C., </author> <title> ``Application of Random Codes to the Gathering of Statistical Information,'' Bulletin 31, </title> <publisher> Zator Co, </publisher> <address> Cambridge, Mass, </address> <year> 1949. </year> <title> based on M.S. </title> <type> thesis, </type> <institution> MIT, </institution> <month> January </month> <year> 1948 </year>
Reference-contexts: It requires much smaller space overhead than inversion ( ~ ~ 10% [2], as opposed to 50%-300% that inversion requires [13]) and it can handle insertions easily. Signature files typically use superimposed coding <ref> [17] </ref> to create the signature of a document. A brief description of the method follows; more details are in [5].
Reference: 18. <author> Nofel, P.J., </author> <title> ``40 Million Hits on Optical Disk,'' </title> <booktitle> Modern Office Technology, </booktitle> <pages> pp. 84-88, </pages> <month> March </month> <year> 1986. </year>
Reference-contexts: There are numerous applications involving storage and retrieval of textual data: Electronic office filing [30], [3]. Computerized libraries. For example, the U.S. Library of Congress has been pursuing the "Optical Disk Pilot Program" [21], <ref> [18] </ref>, where the goal is to digitize the documents and store them on an optical disk. A similar project is carried out at the National Library of Medicine [29]. Automated law [14] and patent offices [15]. The U.S.
Reference: 19. <author> Peterson, J.L., </author> <title> ``Computer Programs for Detecting and Correcting Spelling Errors,'' </title> <journal> CACM, </journal> <volume> vol. 23, no. 12, </volume> <pages> pp. 676-687, </pages> <month> Dec. </month> <year> 1980. </year>
Reference-contexts: The advantages of storing ptr_to_word instead of storing the actual word are two: (1) space is saved (a word from the dictionary is ~ ~ 8 characters long <ref> [19] </ref>), and (2) the records of the intermediate file have fixed length; thus, there is no need for a word delimiter and there is no danger for a word to cross bucket boundaries. Searching is done in a similar way with DCBS. <p> Each paper has L=30 Kb size, with a vocabulary of D = 1000 words (these estimates are based on measurements on actual technical reports). The vocabulary of the collection is pessimistically estimated as V=100,000, which is the vocabulary of the best dictionaries <ref> [19] </ref>. Leaving 50 Mb for the index and other overheads, we have 250 Mb, which can hold 250 Mb / 30 Kb ~ ~ 8,300 = N documents. Graph G6.7 plots the analytical results for this setting.
Reference: 20. <author> Pfaltz, J.L., W.H. Berman, </author> <title> and E.M. Cagley, ``Partial Match Retrieval Using Indexed Descriptor Files,'' </title> <journal> CACM, </journal> <volume> vol. 23, no. 9, </volume> <pages> pp. 522-528, </pages> <month> Sept. </month> <year> 1980. </year>
Reference-contexts: The proposed methods combine the best of both worlds (signature files and inversion), and can compete against both. Thus, they can be applied in any situation where the traditional SSF have been applied, such as rule indexing in Prolog data bases [1], [23], for formatted attributes <ref> [20] </ref>, [24], or combinations of attributes and text [6] etc.. The proposed methods can also compete against traditional inverted files on magnetic disks, or on erasable optical disks: They give fast responses, for smaller space overhead, allowing searches even during an insertion.
Reference: 21. <author> Price, Joseph, </author> <title> ``The Optical Disk Pilot Project At the Library of Congress,'' </title> <journal> Videodisc and Optical Disk, </journal> <volume> vol. 4, no. 6, </volume> <pages> pp. 424-432, </pages> <address> Nov.-Dec. </address> <year> 1984. </year>
Reference-contexts: There are numerous applications involving storage and retrieval of textual data: Electronic office filing [30], [3]. Computerized libraries. For example, the U.S. Library of Congress has been pursuing the "Optical Disk Pilot Program" <ref> [21] </ref>, [18], where the goal is to digitize the documents and store them on an optical disk. A similar project is carried out at the National Library of Medicine [29]. Automated law [14] and patent offices [15]. The U.S.
Reference: 22. <author> Rabitti, F. and J. Zizka, </author> <title> ``Evaluation of Access Methods to Text Documents in Office Systems,'' </title> <booktitle> Proc. 3rd Joint ACM-BCS Symposium on Research and Development in Information Retrieval, </booktitle> <address> Cam-bridge, England, </address> <year> 1984. </year>
Reference-contexts: The rest are either checked (so that the "false drops" are discarded) or they are returned to the user as they are. The method is faster than full text scanning but slower than inversion <ref> [22] </ref> on large data bases. It requires much smaller space overhead than inversion ( ~ ~ 10% [2], as opposed to 50%-300% that inversion requires [13]) and it can handle insertions easily. Signature files typically use superimposed coding [17] to create the signature of a document.
Reference: 23. <author> Ramamohanarao, K. and J. Shepherd, </author> <title> ``A Superimposed Codeword Indexing Scheme for Very Large Prolog Databases,'' </title> <booktitle> Third Intern. Conf. on Logic Programming, </booktitle> <publisher> Springer Verlag, </publisher> <address> London, </address> <year> 1986. </year>
Reference-contexts: The proposed methods combine the best of both worlds (signature files and inversion), and can compete against both. Thus, they can be applied in any situation where the traditional SSF have been applied, such as rule indexing in Prolog data bases [1], <ref> [23] </ref>, for formatted attributes [20], [24], or combinations of attributes and text [6] etc.. The proposed methods can also compete against traditional inverted files on magnetic disks, or on erasable optical disks: They give fast responses, for smaller space overhead, allowing searches even during an insertion.
Reference: 24. <author> Sacks-Davis, R. and K. Ramamohanarao, </author> <title> ``A Two Level Superimposed Coding Scheme for Partial Match Retrieval,'' </title> <journal> Information Systems, </journal> <volume> vol. 8, no. 4, </volume> <pages> pp. 273-280, </pages> <year> 1983. </year>
Reference-contexts: The proposed methods combine the best of both worlds (signature files and inversion), and can compete against both. Thus, they can be applied in any situation where the traditional SSF have been applied, such as rule indexing in Prolog data bases [1], [23], for formatted attributes [20], <ref> [24] </ref>, or combinations of attributes and text [6] etc.. The proposed methods can also compete against traditional inverted files on magnetic disks, or on erasable optical disks: They give fast responses, for smaller space overhead, allowing searches even during an insertion.
Reference: 25. <author> Salton, G. and M.J. McGill, </author> <title> Introduction to Modern Information Retrieval, </title> <publisher> McGraw-Hill, </publisher> <year> 1983. </year>
Reference-contexts: Figure F4.5 Illustration of CBS Thus, the compressed bit files will contain pointers to the appropriate documents (or logical blocks). The set of all the compressed bit files will be called "level 1" or "post-ings file", to agree with the terminology of inverted files <ref> [25] </ref>. The postings file consists of postings buckets, of size B p bytes (B p is a design parameter). Each such bucket contains pointers to the documents in the text file, as well as an extra pointer, to point to an overflow post ings bucket, if necessary.
Reference: 26. <author> Standish, T.A., </author> <title> ``An Essay on Software Reuse,'' </title> <journal> IEEE Trans. on Software Engineering, </journal> <volume> vol. SE-10, no. 5, </volume> <pages> pp. 494-497, </pages> <month> Sept. </month> <year> 1984. </year>
Reference-contexts: Electronic storage and retrieval of articles from newspapers and magazines. Consumers' data bases, which contain descriptions of products in natural language. Electronic encyclopedias [4], [12]. Indexing of software components to enhance reu sability <ref> [26] </ref>. All of the above applications require an efficient search method. This is exactly the problem addressed in this work.
Reference: 27. <author> Stanfill, C. and B. Kahle, </author> <title> ``Parallel Free-Text Search on the Connection Machine System,'' </title> <journal> CACM, </journal> <volume> vol. 29, no. 12, </volume> <pages> pp. 1229-1239, </pages> <month> Dec. </month> <year> 1986. </year>
Reference-contexts: 1. Introduction Text retrieval methods have attracted much interest recently <ref> [3, 11, 12, 27, 30] </ref>. One of the main reasons is probably the development of optical disks. Text databases are traditionally large and have archival nature: there are insertions in them, but almost never deletions and updates. These two characteristics make the optical disks the ideal storage medium.
Reference: 28. <author> Stiassny, S., </author> <title> ``Mathematical Analysis of Various Superimposed Coding Methods,'' </title> <journal> American Documentation, </journal> <volume> vol. 11, no. 2, </volume> <pages> pp. 155-169, </pages> <month> Feb. </month> <year> 1960. </year>
Reference-contexts: Previous analysis showed that, for a given value of F, the optimal value of m is such that this matrix contains "1"'s with probability 50% <ref> [28] </ref>. This is the reason that documents have to be divided into logical blocks: Without logical blocks, a long document would have a signature full of "1"'s, and it would always create a false drop.
Reference: 29. <author> Thoma, G.R., S. Suthasinekul, F.A. Walker, J. Cookson, and M. Rashidian, </author> <title> ``A Prototype System for the Electronic Storage and Retrieval of Document Images,'' </title> <journal> ACM TOOIS, </journal> <volume> vol. 3, no. 3, </volume> <month> July </month> <year> 1985. </year>
Reference-contexts: Computerized libraries. For example, the U.S. Library of Congress has been pursuing the "Optical Disk Pilot Program" [21], [18], where the goal is to digitize the documents and store them on an optical disk. A similar project is carried out at the National Library of Medicine <ref> [29] </ref>. Automated law [14] and patent offices [15]. The U.S. Patent and Trademark Office has been examining electronic storage and retrieval of the recent patents on a system of 200 optical disks. Electronic storage and retrieval of articles from newspapers and magazines.

References-found: 29

