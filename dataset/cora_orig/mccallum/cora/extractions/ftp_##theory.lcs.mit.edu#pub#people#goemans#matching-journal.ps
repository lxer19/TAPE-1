URL: ftp://theory.lcs.mit.edu/pub/people/goemans/matching-journal.ps
Refering-URL: http://theory.lcs.mit.edu/~goemans/
Root-URL: 
Email: dpw@watson.ibm.com  goemans@math.mit.edu  
Phone: (914) 945-1743  (617) 253-2688  
Title: Computational Experience with an Approximation Algorithm on Large-Scale Euclidean Matching Instances Networks/graphs, matchings: experimental analysis
Author: David P. Williamson Michel X. Goemans 
Address: Yorktown Heights, NY 10598  Cambridge, MA 02139  
Affiliation: IBM TJ Watson Research Center  Department of Mathematics MIT  
Note: To appear in ORSA Journal on Computing.  Subject classification:  
Abstract: We consider a 2-approximation algorithm for Euclidean minimum-cost perfect matching instances proposed by the authors in a previous paper. We present computational results for both random and real-world instances having between 1; 000 and 131; 072 vertices. The results indicate that our algorithm generates a matching within 2% of optimal in most cases. In over 1,400 experiments, the algorithm was never more than 4% from optimal. For the purposes of the study, we give a new implementation of the algorithm that uses linear space instead of quadratic space, and appears to run faster in practice. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Applegate and W. Cook. </author> <title> Solving large-scale matching problems. In DIMACS implementation challenge workshop: Algorithms for network flow and matching. </title> <type> DIMACS Technical Report 92-4, </type> <year> 1992. </year>
Reference-contexts: In the basic version of the Euclidean model, the vertices of the problem instance are distributed independently and uniformly in the unit square <ref> [0; 1] </ref> 2 and the Euclidean metric plays the 7 role of cost function. The functionals of interest are typically the values of combinatorial optimization problems (such as the traveling salesman, matching or minimum spanning tree problems) on these randomly distributed points. <p> SP n n = fi T SP almost surely (1) where T SP n denotes the value of the optimal tour on X 1 ; X 2 ; . . . ; X n with the X i 's being an infinite sequence of independently and uniformly distributed vertices from <ref> [0; 1] </ref> 2 . Steele has shown that T SP n = p converges completely to fi T SP rather than almost surely [22]. We should point out that the exact value of fi T SP is not known. <p> The structured examples in Table 1 were taken from the TSPLIB [18]. The number in the problem name indicates the number of vertices in the problem. We attempted to use the same procedure as given in Applegate and Cook <ref> [1] </ref>; namely, if the example contained an odd number of points, we sorted by x and y coordinates, then deleted the last point. We also attempted as much as possible to run the same suite of examples as given in [1]. <p> use the same procedure as given in Applegate and Cook <ref> [1] </ref>; namely, if the example contained an odd number of points, we sorted by x and y coordinates, then deleted the last point. We also attempted as much as possible to run the same suite of examples as given in [1]. The random examples in Tables 2 and 3 were generated on a 2 20 by 2 20 grid using the UNIX random () function. A single seed was used to generate all the instances of a given size.
Reference: [2] <author> D. Avis. </author> <title> A survey of heuristics for the weighted matching problem. </title> <journal> Networks, </journal> <volume> 13 </volume> <pages> 475-493, </pages> <year> 1983. </year>
Reference: [3] <author> J. Beardwood, J. Halton, and J. </author> <title> Hammersley. The shortest path through many points. </title> <booktitle> Proceedings of the Cambridge Philosophical Society, </booktitle> <volume> 55 </volume> <pages> 299-327, </pages> <year> 1959. </year>
Reference-contexts: For a more detailed picture of the field, the reader is referred to [23, 15, 21, 27]. The asymptotic behavior of the value of the traveling salesman problem was first studied in the pioneering paper of Beardwood, Halton and Hammersley <ref> [3] </ref>.
Reference: [4] <author> J. L. Bentley. </author> <title> K-d trees for semi-dynamic point sets. </title> <booktitle> In Proceedings of the 6th Annual ACM Symposium on Computational Geometry, </booktitle> <pages> pages 187-197, </pages> <year> 1990. </year>
Reference-contexts: In order to complete the description of our implementation, we must describe how to find an edge e that represents the nearest neighbor of a component C under addition time. To do this, we use k-d trees of Friedman, Bentley, and Finkel [9] as described in Bentley <ref> [4] </ref>. A k-d tree is a binary tree that corresponds to a partitioning of a given set of points in d-dimensional space; here we use d = 2. <p> Friedman et al. show experimentally that this search takes O (log n) expected time, and Bentley <ref> [4] </ref> gives a bottom-up variation that seems to take O (1) expected time.
Reference: [5] <author> J. L. Bentley. </author> <title> Fast algorithms for geometric traveling salesman problems. </title> <journal> ORSA Journal on Computing, </journal> <volume> 4 </volume> <pages> 387-411, </pages> <year> 1992. </year>
Reference-contexts: This approach is adapted from algorithms for the minimum-cost spanning tree and traveling salesman problems in Bentley and Friedman [6] and Bentley <ref> [5] </ref>. More formally, let l (e) denote the current addition time of edge e = (i; j). <p> Matching (M ) .3103 .0001 .2357 .0127 .2752 .0001 .2052 .0129 Lower bound (D) .3041 .0001 .2298 .0121 .2688 .0001 .1978 .0123 Serpentine [12] .585 .545 Spiral-rack [12] .495 .450 Rectangular [25, 19] .5164 .4288 Strip [25] .474 .436 MST-H [25, 14] .358 - DUST [14] .338 - Greedy <ref> [5] </ref> .385 .47 - Greedy + 2-opt [5] .326 .24 - Table 4: Estimates of matching constants for our approximation algorithm (adjusted for the unit square) and other heuristics. The estimates on Rectangular and Strip are analytically determined. in these parameter estimations. <p> .0127 .2752 .0001 .2052 .0129 Lower bound (D) .3041 .0001 .2298 .0121 .2688 .0001 .1978 .0123 Serpentine [12] .585 .545 Spiral-rack [12] .495 .450 Rectangular [25, 19] .5164 .4288 Strip [25] .474 .436 MST-H [25, 14] .358 - DUST [14] .338 - Greedy <ref> [5] </ref> .385 .47 - Greedy + 2-opt [5] .326 .24 - Table 4: Estimates of matching constants for our approximation algorithm (adjusted for the unit square) and other heuristics. The estimates on Rectangular and Strip are analytically determined. in these parameter estimations. We summarize our findings on the matching parameters in Table 4. <p> Iri, Murota, and Matsui [12], the Rectangle and Strip heuristics of Supowit, Plaisted, and Reingold [25], the MST heuristic of Papadimitriou as given in Supowit et al. (and tested in [14]), the DUST heuristic of Junger and Pulleyblank [14], and two versions of a greedy algorithm as implemented by Bentley <ref> [5] </ref>. All of these heuristics run in O (n log n) time, except for the first two, which require O (n) time, and the last two, which run in O (n log n) observed time. <p> Acknowledgements We are very grateful to David Johnson and David Applegate for their many helpful suggestions. In particular, David Johnson pointed us to the ideas of Bentley and Friedman [6] and Bentley <ref> [5] </ref>. We are also grateful to them for enabling these experiments: most of the experiments were run on a machine at Bell Laboratories. In addition, some early work on the algorithm implementation was performed while the first author was visiting Bell Laboratories.
Reference: [6] <author> J. L. Bentley and J. H. Friedman. </author> <title> Fast algorithms for constructing minimal spanning trees in coordinate spaces. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-27:97-105, </volume> <year> 1978. </year>
Reference-contexts: The main advantage of this implementation is its space efficiency: we need to keep track of the keys of only jCj edges, where C is the set of components. This approach is adapted from algorithms for the minimum-cost spanning tree and traveling salesman problems in Bentley and Friedman <ref> [6] </ref> and Bentley [5]. More formally, let l (e) denote the current addition time of edge e = (i; j). <p> Acknowledgements We are very grateful to David Johnson and David Applegate for their many helpful suggestions. In particular, David Johnson pointed us to the ideas of Bentley and Friedman <ref> [6] </ref> and Bentley [5]. We are also grateful to them for enabling these experiments: most of the experiments were run on a machine at Bell Laboratories. In addition, some early work on the algorithm implementation was performed while the first author was visiting Bell Laboratories.
Reference: [7] <author> J. Edmonds. </author> <title> Maximum matching and a polyhedron with 0,1-vertices. </title> <journal> Journal of Research of the National Bureau of Standards B, </journal> <volume> 69B:125-130, </volume> <year> 1965. </year>
Reference: [8] <author> M. Fredman, D. Johnson, L. McGeoch, and G. Ostheimer. </author> <title> Data structures for traveling salesmen. </title> <booktitle> In Proceedings of the 4th Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 145-154, </pages> <year> 1993. </year>
Reference: [9] <author> J. H. Friedman, J. L. Bentley, and R. A. Finkel. </author> <title> An algorithm for finding best matches in logarithmic expected time. </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> 3 </volume> <pages> 209-226, </pages> <year> 1977. </year>
Reference-contexts: In order to complete the description of our implementation, we must describe how to find an edge e that represents the nearest neighbor of a component C under addition time. To do this, we use k-d trees of Friedman, Bentley, and Finkel <ref> [9] </ref> as described in Bentley [4]. A k-d tree is a binary tree that corresponds to a partitioning of a given set of points in d-dimensional space; here we use d = 2.
Reference: [10] <author> H. N. Gabow, M. X. Goemans, and D. P. Williamson. </author> <title> An efficient approximation algorithm for the survivable network design problem. </title> <booktitle> In Proceedings of the Third MPS Conference on Integer Programming and Combinatorial Optimization, </booktitle> <pages> pages 57-74, </pages> <year> 1993. </year>
Reference-contexts: We select the edge with the smallest addition time in each iteration. This analysis leads to O (n) queue operations per iteration of the algorithm, with O (n) iterations, for an overall running time of O (n 2 log n). Gabow, Goemans, and Williamson <ref> [10] </ref> have shown how this selection step can be implemented in O (n 2 p log log n) time by using many small priority queues. 2 Implementation Description In this section, we describe another implementation of the edge selection step.
Reference: [11] <author> M. X. Goemans and D. P. Williamson. </author> <title> A general approximation technique for constrained forest problems. </title> <journal> SIAM Journal on Computing, </journal> <volume> 24 </volume> <pages> 296-317, </pages> <year> 1995. </year>
Reference-contexts: 1 Review of the algorithm In this section, we review the algorithm of Goemans and Williamson <ref> [11] </ref> and we also briefly indicate an implementation running in O (n 2 log n) time. The algorithm is shown in Figure 1. <p> It can be shown that * 0. Then d (v) is increased by * for all vertices v in odd components, and LB is increased by * times the number of odd components. Goemans and Williamson <ref> [11] </ref> show that choosing the edges in this fashion implicitly constructs a feasible solution to the dual of a linear programming formulation of the matching problem such that the value of the dual solution is LB, and P e2F 0 c e 2 LB. <p> The main problem involved in implementing the algorithm is deciding which edge to select in each iteration. The O (n 2 log n) time algorithm of <ref> [11] </ref> uses a priority queue of edges. Given a notion of time T in the algorithm (starting at zero and advancing by * each iteration), the key value of each edge e = (i; j) is T + p (C p )+p (C q ) .
Reference: [12] <author> M. Iri, K. Murota, and S. Matsui. </author> <title> Heuristics for planar minimum-weight perfect matchings. </title> <journal> Networks, </journal> <volume> 13 </volume> <pages> 67-92, </pages> <year> 1983. </year>
Reference-contexts: Matching (P ) .3154 .0001 .2327 .0150 .2807 .0001 .2038 .0149 Opt. Matching (M ) .3103 .0001 .2357 .0127 .2752 .0001 .2052 .0129 Lower bound (D) .3041 .0001 .2298 .0121 .2688 .0001 .1978 .0123 Serpentine <ref> [12] </ref> .585 .545 Spiral-rack [12] .495 .450 Rectangular [25, 19] .5164 .4288 Strip [25] .474 .436 MST-H [25, 14] .358 - DUST [14] .338 - Greedy [5] .385 .47 - Greedy + 2-opt [5] .326 .24 - Table 4: Estimates of matching constants for our approximation algorithm (adjusted for the unit <p> Matching (P ) .3154 .0001 .2327 .0150 .2807 .0001 .2038 .0149 Opt. Matching (M ) .3103 .0001 .2357 .0127 .2752 .0001 .2052 .0129 Lower bound (D) .3041 .0001 .2298 .0121 .2688 .0001 .1978 .0123 Serpentine <ref> [12] </ref> .585 .545 Spiral-rack [12] .495 .450 Rectangular [25, 19] .5164 .4288 Strip [25] .474 .436 MST-H [25, 14] .358 - DUST [14] .338 - Greedy [5] .385 .47 - Greedy + 2-opt [5] .326 .24 - Table 4: Estimates of matching constants for our approximation algorithm (adjusted for the unit square) and other heuristics. <p> To allow comparisons with our algorithm, we include the fi coefficient of several other Euclidean matching heuristics from the literature, including the Serpentine and Spiral-rack heuristics of Iri, Murota, and Matsui <ref> [12] </ref>, the Rectangle and Strip heuristics of Supowit, Plaisted, and Reingold [25], the MST heuristic of Papadimitriou as given in Supowit et al. (and tested in [14]), the DUST heuristic of Junger and Pulleyblank [14], and two versions of a greedy algorithm as implemented by Bentley [5]. <p> Papadimitriou [16] 15 p Curves are regressions of the data with and without a constant term ff. conjectured that fi M = :35, based on some experiments that had at most 200 vertices. Iri et al. <ref> [12] </ref> noted that their experiments on sizes up to 256 vertices seemed to indicate that :32 fi M :33 (note that this agrees well with our predicted value for this value of n).
Reference: [13] <author> P. Jaillet. </author> <title> Rates of convergence of quasi-additive smooth Euclidean functionals and application to combinatorial optimization problems. </title> <journal> Mathematics of Operations Research, </journal> <volume> 17 </volume> <pages> 964-980, </pages> <year> 1992. </year>
Reference-contexts: Indeed (see Jaillet <ref> [13] </ref>), there exists a constant fl T SP &lt; 9:5 such that, for all n, jE [T SP n ] fi T SP nj fl TSP : Furthermore, it seems likely that there exists a limit ff T SP such that lim n!1 jE [T SP n ] fi TSP nj
Reference: [14] <author> M. Junger and W. Pulleyblank. </author> <title> New primal and dual matching heuristics. </title> <institution> Research Report 91.105, Universitat zu Koln, </institution> <year> 1991. </year> <month> 21 </month>
Reference-contexts: Matching (M ) .3103 .0001 .2357 .0127 .2752 .0001 .2052 .0129 Lower bound (D) .3041 .0001 .2298 .0121 .2688 .0001 .1978 .0123 Serpentine [12] .585 .545 Spiral-rack [12] .495 .450 Rectangular [25, 19] .5164 .4288 Strip [25] .474 .436 MST-H <ref> [25, 14] </ref> .358 - DUST [14] .338 - Greedy [5] .385 .47 - Greedy + 2-opt [5] .326 .24 - Table 4: Estimates of matching constants for our approximation algorithm (adjusted for the unit square) and other heuristics. <p> Matching (M ) .3103 .0001 .2357 .0127 .2752 .0001 .2052 .0129 Lower bound (D) .3041 .0001 .2298 .0121 .2688 .0001 .1978 .0123 Serpentine [12] .585 .545 Spiral-rack [12] .495 .450 Rectangular [25, 19] .5164 .4288 Strip [25] .474 .436 MST-H [25, 14] .358 - DUST <ref> [14] </ref> .338 - Greedy [5] .385 .47 - Greedy + 2-opt [5] .326 .24 - Table 4: Estimates of matching constants for our approximation algorithm (adjusted for the unit square) and other heuristics. The estimates on Rectangular and Strip are analytically determined. in these parameter estimations. <p> include the fi coefficient of several other Euclidean matching heuristics from the literature, including the Serpentine and Spiral-rack heuristics of Iri, Murota, and Matsui [12], the Rectangle and Strip heuristics of Supowit, Plaisted, and Reingold [25], the MST heuristic of Papadimitriou as given in Supowit et al. (and tested in <ref> [14] </ref>), the DUST heuristic of Junger and Pulleyblank [14], and two versions of a greedy algorithm as implemented by Bentley [5]. <p> matching heuristics from the literature, including the Serpentine and Spiral-rack heuristics of Iri, Murota, and Matsui [12], the Rectangle and Strip heuristics of Supowit, Plaisted, and Reingold [25], the MST heuristic of Papadimitriou as given in Supowit et al. (and tested in <ref> [14] </ref>), the DUST heuristic of Junger and Pulleyblank [14], and two versions of a greedy algorithm as implemented by Bentley [5]. All of these heuristics run in O (n log n) time, except for the first two, which require O (n) time, and the last two, which run in O (n log n) observed time.
Reference: [15] <author> R. M. Karp and J. Steele. </author> <title> Probabilistic analysis of heuristics. </title> <editor> In E. Lawler, J. Lenstra, A. R. Kan, and D. Shmoys, editors, </editor> <title> The Traveling Salesman Problem, chapter 6. </title> <publisher> John Wiley and Sons, </publisher> <address> Chichester, </address> <year> 1985. </year>
Reference-contexts: We also indicate results likely to hold, although they have never been proved. For a more detailed picture of the field, the reader is referred to <ref> [23, 15, 21, 27] </ref>. The asymptotic behavior of the value of the traveling salesman problem was first studied in the pioneering paper of Beardwood, Halton and Hammersley [3].
Reference: [16] <author> C. H. Papadimitriou. </author> <title> The probabilistic analysis of matching heuristics. </title> <booktitle> In Proceedings of the 15th Annual Allerton Conference on Communication, Control, and Computing, </booktitle> <pages> pages 368-378, </pages> <year> 1978. </year>
Reference-contexts: For the minimum-cost perfect matching problem and its associated functional M , the asymp totic behavior (1) is known to hold (Papadimitriou <ref> [16] </ref>), and has also been strengthened to complete convergence (Redmond and Yukich [17]). The other results and/or conjectures seem likely to be true as well. <p> We should mention that there have been other efforts to estimate the matching parameter fi M , where the cost of the matching was assumed to be fi M p n, rather than fi M p n + ff M . Papadimitriou <ref> [16] </ref> 15 p Curves are regressions of the data with and without a constant term ff. conjectured that fi M = :35, based on some experiments that had at most 200 vertices.
Reference: [17] <author> C. Redmond and J. Yukich. </author> <title> Limit theorems and rates of convergence for Euclidean functionals. </title> <note> To appear in the Annals of Applied Probability, </note> <year> 1994. </year>
Reference-contexts: For the minimum-cost perfect matching problem and its associated functional M , the asymp totic behavior (1) is known to hold (Papadimitriou [16]), and has also been strengthened to complete convergence (Redmond and Yukich <ref> [17] </ref>). The other results and/or conjectures seem likely to be true as well. From these results and/or conjectures, we shall implicitly assume for our experimental study that, for several functionals L, L n is normally distributed with mean fi L p n + ff L and variance 2 L .
Reference: [18] <author> G. Reinelt. </author> <title> TSPLIB A traveling salesman problem library. </title> <journal> ORSA Journal on Computing, </journal> <volume> 3 </volume> <pages> 376-384, </pages> <year> 1991. </year>
Reference-contexts: Finally, some asymptotic estimates of structural properties of the solutions are given in Table 5. Each of these tables is discussed in the following paragraphs. Some sample runs of the algorithm are shown in Figures 4 to 7. The structured examples in Table 1 were taken from the TSPLIB <ref> [18] </ref>. The number in the problem name indicates the number of vertices in the problem.
Reference: [19] <author> E. Reingold and K. Supowit. </author> <title> Probabilistic analysis of divide-and-conquer heuristics for minimum weighted Euclidean matching. </title> <journal> Networks, </journal> <volume> 13 </volume> <pages> 49-66, </pages> <year> 1983. </year>
Reference-contexts: Matching (P ) .3154 .0001 .2327 .0150 .2807 .0001 .2038 .0149 Opt. Matching (M ) .3103 .0001 .2357 .0127 .2752 .0001 .2052 .0129 Lower bound (D) .3041 .0001 .2298 .0121 .2688 .0001 .1978 .0123 Serpentine [12] .585 .545 Spiral-rack [12] .495 .450 Rectangular <ref> [25, 19] </ref> .5164 .4288 Strip [25] .474 .436 MST-H [25, 14] .358 - DUST [14] .338 - Greedy [5] .385 .47 - Greedy + 2-opt [5] .326 .24 - Table 4: Estimates of matching constants for our approximation algorithm (adjusted for the unit square) and other heuristics.
Reference: [20] <author> W. T. Rhee and M. Talagrand. </author> <title> A sharp deviation inequality for the stochastic traveling salesman problem. </title> <journal> Annals of Probability, </journal> <volume> 17 </volume> <pages> 1-8, </pages> <year> 1989. </year>
Reference-contexts: it seems inevitable that one has a genuine limit, lim n!1 Var T SP n = 2 &gt; 0: It is less certain but (still very likely) that one has a central limit theorem T SP n E [T SP n ] ~ N (0; 2 ): Rhee and Talagrand <ref> [20] </ref> have proved a first step towards this central limit theorem by showing that the tails of T SP n are Gaussian or subGaussian: there exists K such that, for all t, P r (jT SP n E [T SP n ]j &gt; t) Ke t 2 =K : From the
Reference: [21] <author> J. Steele. </author> <title> Notes on probabilistic and worst case analyses of classical problems of combinatorial optimization in Euclidean space. </title> <institution> Lectures given at Cornell University, </institution> <year> 1987. </year>
Reference-contexts: We also indicate results likely to hold, although they have never been proved. For a more detailed picture of the field, the reader is referred to <ref> [23, 15, 21, 27] </ref>. The asymptotic behavior of the value of the traveling salesman problem was first studied in the pioneering paper of Beardwood, Halton and Hammersley [3]. <p> More recently, a careful analysis of the functional has led to the following results and/or conjectures. It is known that Var T SP n is upper bounded by a constant (see Steele [22]): Var T SP n 16 n ). Quoting Steele <ref> [21] </ref>, it seems inevitable that one has a genuine limit, lim n!1 Var T SP n = 2 &gt; 0: It is less certain but (still very likely) that one has a central limit theorem T SP n E [T SP n ] ~ N (0; 2 ): Rhee and Talagrand
Reference: [22] <author> J. M. Steele. </author> <title> Complete convergence of short paths and Karp's algorithm for the TSP. </title> <journal> Mathematics of Operations Research, </journal> <volume> 6 </volume> <pages> 374-378, </pages> <year> 1981. </year>
Reference-contexts: Steele has shown that T SP n = p converges completely to fi T SP rather than almost surely <ref> [22] </ref>. We should point out that the exact value of fi T SP is not known. More recently, a careful analysis of the functional has led to the following results and/or conjectures. It is known that Var T SP n is upper bounded by a constant (see Steele [22]): Var T <p> almost surely <ref> [22] </ref>. We should point out that the exact value of fi T SP is not known. More recently, a careful analysis of the functional has led to the following results and/or conjectures. It is known that Var T SP n is upper bounded by a constant (see Steele [22]): Var T SP n 16 n ).
Reference: [23] <author> J. M. Steele. </author> <title> Subadditive Euclidean functionals and nonlinear growth in geometric probability. </title> <journal> Annals of Probability, </journal> <volume> 9 </volume> <pages> 365-376, </pages> <year> 1981. </year>
Reference-contexts: We also indicate results likely to hold, although they have never been proved. For a more detailed picture of the field, the reader is referred to <ref> [23, 15, 21, 27] </ref>. The asymptotic behavior of the value of the traveling salesman problem was first studied in the pioneering paper of Beardwood, Halton and Hammersley [3]. <p> [T SP n ] fi T SP nj fl TSP : Furthermore, it seems likely that there exists a limit ff T SP such that lim n!1 jE [T SP n ] fi TSP nj = ff TSP : Some of these results also hold for other functionals; see Steele <ref> [23] </ref>, Yukich [27], and the references above. For the minimum-cost perfect matching problem and its associated functional M , the asymp totic behavior (1) is known to hold (Papadimitriou [16]), and has also been strengthened to complete convergence (Redmond and Yukich [17]).
Reference: [24] <author> J. M. Steele, L. A. Shepp, and W. F. Eddy. </author> <title> On the number of leaves of a Euclidean minimal spanning tree. </title> <journal> Journal of Applied Probability, </journal> <volume> 24 </volume> <pages> 809-826, </pages> <year> 1987. </year>
Reference-contexts: We shall denote these additional functionals by F 0 , P (for primal) and D (for dual). Functionals of a more structural nature have also been studied. For example, Steele et al. <ref> [24] </ref> have shown that there exist constants -k such that the number of degree k vertices in a minimum spanning tree divided by n is almost surely equal to -k .
Reference: [25] <author> K. J. Supowit, D. A. Plaisted, and E. M. Reingold. </author> <title> Heuristics for weighted perfect matching. </title> <booktitle> In Proceedings of the 12th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 398-419, </pages> <year> 1980. </year>
Reference-contexts: Matching (P ) .3154 .0001 .2327 .0150 .2807 .0001 .2038 .0149 Opt. Matching (M ) .3103 .0001 .2357 .0127 .2752 .0001 .2052 .0129 Lower bound (D) .3041 .0001 .2298 .0121 .2688 .0001 .1978 .0123 Serpentine [12] .585 .545 Spiral-rack [12] .495 .450 Rectangular <ref> [25, 19] </ref> .5164 .4288 Strip [25] .474 .436 MST-H [25, 14] .358 - DUST [14] .338 - Greedy [5] .385 .47 - Greedy + 2-opt [5] .326 .24 - Table 4: Estimates of matching constants for our approximation algorithm (adjusted for the unit square) and other heuristics. <p> Matching (P ) .3154 .0001 .2327 .0150 .2807 .0001 .2038 .0149 Opt. Matching (M ) .3103 .0001 .2357 .0127 .2752 .0001 .2052 .0129 Lower bound (D) .3041 .0001 .2298 .0121 .2688 .0001 .1978 .0123 Serpentine [12] .585 .545 Spiral-rack [12] .495 .450 Rectangular [25, 19] .5164 .4288 Strip <ref> [25] </ref> .474 .436 MST-H [25, 14] .358 - DUST [14] .338 - Greedy [5] .385 .47 - Greedy + 2-opt [5] .326 .24 - Table 4: Estimates of matching constants for our approximation algorithm (adjusted for the unit square) and other heuristics. <p> Matching (M ) .3103 .0001 .2357 .0127 .2752 .0001 .2052 .0129 Lower bound (D) .3041 .0001 .2298 .0121 .2688 .0001 .1978 .0123 Serpentine [12] .585 .545 Spiral-rack [12] .495 .450 Rectangular [25, 19] .5164 .4288 Strip [25] .474 .436 MST-H <ref> [25, 14] </ref> .358 - DUST [14] .338 - Greedy [5] .385 .47 - Greedy + 2-opt [5] .326 .24 - Table 4: Estimates of matching constants for our approximation algorithm (adjusted for the unit square) and other heuristics. <p> To allow comparisons with our algorithm, we include the fi coefficient of several other Euclidean matching heuristics from the literature, including the Serpentine and Spiral-rack heuristics of Iri, Murota, and Matsui [12], the Rectangle and Strip heuristics of Supowit, Plaisted, and Reingold <ref> [25] </ref>, the MST heuristic of Papadimitriou as given in Supowit et al. (and tested in [14]), the DUST heuristic of Junger and Pulleyblank [14], and two versions of a greedy algorithm as implemented by Bentley [5].
Reference: [26] <author> M. Weber and T. Liebling. </author> <title> Euclidean matchings problems and the metropolis algorithm. </title> <journal> Zeitschrift fur Operations Research, </journal> <volume> 30:A85-A110, </volume> <year> 1986. </year>
Reference-contexts: Iri et al. [12] noted that their experiments on sizes up to 256 vertices seemed to indicate that :32 fi M :33 (note that this agrees well with our predicted value for this value of n). Weber and Liebling <ref> [26] </ref> obtained an estimate fi M :3189; the largest example used in their study was on 1,000 vertices.
Reference: [27] <author> J. Yukich. </author> <title> Quasi-additive Euclidean functionals. </title> <booktitle> To appear in the Proceedings of the workshop Probability and Algorithms, I.M.A., </booktitle> <address> Minneapolis, </address> <year> 1993. </year> <month> 22 </month>
Reference-contexts: We also indicate results likely to hold, although they have never been proved. For a more detailed picture of the field, the reader is referred to <ref> [23, 15, 21, 27] </ref>. The asymptotic behavior of the value of the traveling salesman problem was first studied in the pioneering paper of Beardwood, Halton and Hammersley [3]. <p> n ] fi T SP nj fl TSP : Furthermore, it seems likely that there exists a limit ff T SP such that lim n!1 jE [T SP n ] fi TSP nj = ff TSP : Some of these results also hold for other functionals; see Steele [23], Yukich <ref> [27] </ref>, and the references above. For the minimum-cost perfect matching problem and its associated functional M , the asymp totic behavior (1) is known to hold (Papadimitriou [16]), and has also been strengthened to complete convergence (Redmond and Yukich [17]).
References-found: 27

