URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/93-30.ps.Z
Refering-URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/README.html
Root-URL: 
Email: e-mail: sivak-d@cs.buffalo.edu  
Title: Randomized Local Approximations with applications to the MAX-CLIQUE problem  
Author: R. Bar-Yehuda V. Dabholkar, K. Govindarajan and D. Sivakumar 
Date: August 10, 1993  
Address: Buffalo, NY 14260  
Affiliation: Department of Computer Science, State University of New York at Buffalo,  
Abstract: We present a heuristic scheme for finding a clique of maximum size or weight. Our heuristic scheme uses approximation techniques for the weighted vertex cover problem, due to R. Bar-Yehuda and S. Even [BE85]. The approach is based on the notion of making incremental progress towards finding a clique. At each step of our algorithm, one or more local optimization techniques are attempted, and when these techniques do not make progress, we perform local approximations. In the local approximation step, the algorithm selects a heuristic from a set of heuristics, depending on the characteristics of the graph at that stage. Once a solution is constructed, we attempt to iteratively refine the solution. Randomization plays a key role at various steps of our algorithm. 
Abstract-found: 1
Intro-found: 1
Reference: [ALMSS92] <author> S. Arora, C. Lund, R. Motwani, M. Sudan, M. Szegedy, </author> <title> "Proof Verification and Hardness of Approximation Problems", </title> <booktitle> In Proceedings of the 33rd Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 14-23, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction Finding a clique of maximum size or maximum weight (MAX-CLIQUE) in a graph is a well known NP-hard problem [GJ79]. In fact, results of <ref> [ALMSS92] </ref> indicate that there is an * &gt; 0 such that it is NP-hard to approximate MAX-CLIQUE to within a factor of n * . In this paper, we present a scheme where we combine various heuristics to find cliques of large size or weight.
Reference: [AS92] <author> S. Arora, S. Safra, </author> <title> "Probabilistic Checking of Proofs", </title> <booktitle> In Proceedings of the 33rd Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 2-13, </pages> <year> 1992. </year>
Reference-contexts: As mentioned before, the [BE85] approximation algorithm for the weighted vertex cover problem achieves an approximation ratio of 2 (log log n=2 log n). The ratio is not preserved if we construct an independent set using this algorithm. In fact, Arora and Safra <ref> [AS92] </ref> have proved that no constant ratio is possible, unless P = NP. Nevertheless, we pursue the idea for the following reasons.
Reference: [BE85] <author> R. Bar-Yehuda, S. </author> <title> Even, "A Local-Ratio Theorem For Approximating the Weighted Vertex Cover Problem", </title> <journal> Annals of Discrete Mathematics, </journal> <volume> Vol 25, </volume> <publisher> Elsevier Science Publishers B.V., </publisher> <pages> pages 27-46, </pages> <year> 1985. </year>
Reference-contexts: An appealing property of the vertex cover problem is that there are efficient approximation algorithms for this problem. In particular, R. Bar-Yehuda and S. Even <ref> [BE85] </ref> give an approximation algorithm for the fl On leave from Department of Computer Science, Technion, Haifa, Israel 32000 weighted vertex cover problem that guarantees an approximation ratio no worse than 2 (log log n=2 log n). <p> We argue that for practical inputs, heuristics for the vertex cover problem are useful tools in approximating the maximum independent set, and substantiate our claim in the rest of this paper. Our scheme uses the framework of local optimizations (cf. [NT75]) and local approximations (see, for example, <ref> [BE85] </ref>), together with a number of greedy and randomized heuristics. Briefly described, a local optimization step in an optimization algorithm is one in which a partial solution is found. This partial solution has the property that there is an optimal solution which extends this partial solution. <p> Another example of local approximation for vertex cover is to identify a clique K p in G, and adding to the vertex cover all the p vertices in K p . The attractive characteristic of local approximation is brought out by the following theorem from <ref> [BE85] </ref>: Theorem 1 ([BE85]) Let ^ G be an unweighted graph of ^n vertices, whose optimum vertex cover contains ^c fl vertices. Define ^r = ^n=^c fl . Let A be an approximation algorithm for the vertex cover problem with approximation ratio R A . <p> Eliminating a clique of size p guarantees a local ratio of p=(p 1). 2.3 Motivations Here we briefly describe the reasons why we decided to pursue an approach based on approximating the vertex cover problem. As mentioned before, the <ref> [BE85] </ref> approximation algorithm for the weighted vertex cover problem achieves an approximation ratio of 2 (log log n=2 log n). The ratio is not preserved if we construct an independent set using this algorithm. <p> The ratio is not preserved if we construct an independent set using this algorithm. In fact, Arora and Safra [AS92] have proved that no constant ratio is possible, unless P = NP. Nevertheless, we pursue the idea for the following reasons. First, we note that the approximation ratio in <ref> [BE85] </ref> is based on worst-case analysis, and it is not unreasonable to expect the algorithm to work well in practice, at least for specific families of graphs. Secondly, the vertex cover problem and the independent set problem are natural duals of one another. <p> Nemhauser and L.E. Trotter [NT75]. This technique was used before to obtain the 2 (log log n=2 log n) approximation algorithm for the weighted vertex cover problem <ref> [BE85] </ref>. Algorithm NT Input: G = (V; E), w:V !N + Step 1: Define a bipartite graph B = (V; V 0 ; E B ) where E B = f (u; v 0 )j (u; v) 2 Eg. Step 2: V C B V C fl (B).
Reference: [BE76] <author> B. Bollobas, P.Erdos, </author> <title> "Cliques in Random Graphs", </title> <booktitle> Mathematical Proceedings of the Cambridge Philosophical Society, </booktitle> <volume> Vol 80, </volume> <pages> pages 419-427, </pages> <year> 1976. </year>
Reference-contexts: The entry E (!(G (n; p))) gives the value z (n; p), which is an approximation to the ex pected size of the largest clique in G (n; p) (cf. <ref> [BE76] </ref>).
Reference: [DI93] <institution> DIMACS, NSF Center for Discrete Mathematics and Theoretical Computer Science, Benchmark instances made available by electronic transfer at dimacs.rutgers.edu, Rutgers Univ., </institution> <address> Piscataway, NJ, </address> <year> 1993. </year>
Reference: [GJ79] <author> M.R. Garey, D.S. Johnson, </author> <title> Computers and Intractability A Guide to the Theory of NP-Completeness, W.H. </title> <publisher> Freeman and Co., </publisher> <year> 1979. </year>
Reference-contexts: 1 Introduction Finding a clique of maximum size or maximum weight (MAX-CLIQUE) in a graph is a well known NP-hard problem <ref> [GJ79] </ref>. In fact, results of [ALMSS92] indicate that there is an * &gt; 0 such that it is NP-hard to approximate MAX-CLIQUE to within a factor of n * . In this paper, we present a scheme where we combine various heuristics to find cliques of large size or weight.
Reference: [NT75] <author> G.L. Nemhauser, L.E. Trotter, Jr., </author> <title> "Vertex Packing: Structural Properties and Algorithms", </title> <journal> Mathematical Programming, </journal> <volume> Vol 8, </volume> <pages> pages 232-248, </pages> <year> 1975. </year>
Reference-contexts: We argue that for practical inputs, heuristics for the vertex cover problem are useful tools in approximating the maximum independent set, and substantiate our claim in the rest of this paper. Our scheme uses the framework of local optimizations (cf. <ref> [NT75] </ref>) and local approximations (see, for example, [BE85]), together with a number of greedy and randomized heuristics. Briefly described, a local optimization step in an optimization algorithm is one in which a partial solution is found. <p> In the rest of this paper, we will mostly talk about identifying independent sets in graphs. 3.1 The Nemhauser-Trotter local optimization algorithm Our main technique for performing local optimization is due to G.L. Nemhauser and L.E. Trotter <ref> [NT75] </ref>. This technique was used before to obtain the 2 (log log n=2 log n) approximation algorithm for the weighted vertex cover problem [BE85].
Reference: [Rag90] <author> P. Raghavan, </author> <title> "Lecture Notes on Randomized Algorithms", </title> <type> Research Report, </type> <institution> IBM RC 15340, </institution> <year> 1990. </year>
Reference-contexts: This heuristic is motivated by the idea of randomized rounding, as described in <ref> [Rag90] </ref>, and it exploits the fact that Algorithm NT works well for sparse graphs.
References-found: 8

