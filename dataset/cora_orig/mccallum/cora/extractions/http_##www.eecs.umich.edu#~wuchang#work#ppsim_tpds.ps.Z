URL: http://www.eecs.umich.edu/~wuchang/work/ppsim_tpds.ps.Z
Refering-URL: http://www.eecs.umich.edu/~wuchang/resume.html
Root-URL: http://www.cs.umich.edu
Title: PP-MESS-SIM: A Flexible and Extensible Simulator for Evaluating Multicomputer Networks  
Author: Jennifer Rexford, Wu-chang Feng, James Dolter, and Kang G. Shin 
Keyword: Key words: multicomputers, routers, routing, switching, object-oriented simulation  
Note: Web page:  
Address: Ann Arbor, MI 48109-2122  
Affiliation: Real-Time Computing Laboratory Department of Electrical Engineering and Computer Science The University of Michigan  
Email: E-mail: fjrexford, wuchang, jdolter, kgshing@eecs.umich.edu  
Web: http://www.eecs.umich.edu/RTCL  
Abstract: This paper presents pp-mess-sim, an object-oriented discrete-event simulation environment for evaluating interconnection networks in message-passing systems. The simulator provides a toolbox of various network topologies, communication workloads, routing-switching algorithms, and router models. By carefully defining the boundaries between these modules, pp-mess-sim creates a flexible and extensible environment for evaluating different aspects of network design. The simulator models emerging multicomputer networks that can support multiple routing and switching schemes simultaneously; pp-mess-sim achieves this flexibility by associating routing-switching policies, traffic patterns, and performance metrics with collections of packets, instead of the underlying router model. Besides providing a general framework for evaluating router architectures, pp-mess-sim includes a cycle-level model of the PRC, a programmable router for point-to-point distributed systems. The PRC model captures low-level implementation details, while another high-level model facilitates experimentation with general router design issues. Sample simulation experiments capitalize on this flexibility to compare network architectures under various application workloads. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> W. Athas and C. Seitz, </author> <title> "Multicomputers: Message-passing concurrent computers," </title> <booktitle> IEEE Computer, </booktitle> <pages> pp. 9-24, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: Any opinions, findings, and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the view of the NSF. James Dolter is now a senior engineer at Qualcomm Inc. processing elements <ref> [1, 2] </ref>. Router hardware connects each processing node to the interconnection fabric and manages traffic flowing through the node en route to other nodes. The router architecture greatly affects the ability of the interconnection network to deliver good communication performance to parallel applications.
Reference: [2] <author> X. Zhang, </author> <title> "System effects of interprocessor communication latency in multicomputers," </title> <booktitle> IEEE Micro, </booktitle> <pages> pp. </pages> <address> 12-15,52-55, </address> <month> April </month> <year> 1991. </year>
Reference-contexts: Any opinions, findings, and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the view of the NSF. James Dolter is now a senior engineer at Qualcomm Inc. processing elements <ref> [1, 2] </ref>. Router hardware connects each processing node to the interconnection fabric and manages traffic flowing through the node en route to other nodes. The router architecture greatly affects the ability of the interconnection network to deliver good communication performance to parallel applications. <p> If the outgoing link is busy, virtual cut-through switching buffers the packet, whereas a blocked wormhole packet stalls pending access to the link. While first-generation multicomputers employed packet switching, most contemporary routers utilize cut-through switching for lower latency and reduced buffer space requirements <ref> [2] </ref>. Wormhole switching achieves low latency without requiring packet buffers, but virtual cut-through and packet switching may achieve larger throughput at high loads. Packet size also impacts switching performance, since multicomputer communication often consists of large data transfers, coupled with small request and acknowledgement packets [7].
Reference: [3] <author> J. Dolter, </author> <title> A Programmable Routing Controller Supporting Multi-mode Routing and Switching in Distributed Real-Time Systems. </title> <type> PhD thesis, </type> <institution> University of Michigan, </institution> <month> September </month> <year> 1993. </year>
Reference-contexts: The router architecture greatly affects the ability of the interconnection network to deliver good communication performance to parallel applications. This paper presents pp-mess-sim (point-to-point message simulator), a flexible and extensible simulation environment for evaluating and tuning multicomputer router designs <ref> [3, 4] </ref>. Maximizing system performance requires matching application communication requirements with a suitable network design. While many simulation toolkits can flexibly model local and wide area networks [5], few simulators sufficiently capture the characteristics of emerging multicomputer router architectures. <p> In addition, pp-mess-sim introduces several useful abstractions for representing flow control and resource arbitration within the router models. 4.1 Node Modules The simulator includes a cycle-level model of the PRC <ref> [3, 16] </ref>, a programmable routing controller for point-to-point distributed systems. <p> As a result, several studies have used pp-mess-sim to evaluate the PRC and the v-router models under various routing-switching schemes, network topologies, and application work-loads <ref> [3, 4, 12, 31, 34, 42-44] </ref>. This section presents the results of sample pp-mess-sim experiments that consider the interaction of routing-switching algorithms and communication patterns.
Reference: [4] <author> J. Rexford, J. Dolter, W. Feng, and K. G. Shin, </author> <title> "PP-MESS-SIM: A simulator for evaluating multicomputer interconnection networks," </title> <booktitle> in Proc. Simulation Symposium, </booktitle> <pages> pp. 84-93, </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: The router architecture greatly affects the ability of the interconnection network to deliver good communication performance to parallel applications. This paper presents pp-mess-sim (point-to-point message simulator), a flexible and extensible simulation environment for evaluating and tuning multicomputer router designs <ref> [3, 4] </ref>. Maximizing system performance requires matching application communication requirements with a suitable network design. While many simulation toolkits can flexibly model local and wide area networks [5], few simulators sufficiently capture the characteristics of emerging multicomputer router architectures. <p> As a result, several studies have used pp-mess-sim to evaluate the PRC and the v-router models under various routing-switching schemes, network topologies, and application work-loads <ref> [3, 4, 12, 31, 34, 42-44] </ref>. This section presents the results of sample pp-mess-sim experiments that consider the interaction of routing-switching algorithms and communication patterns. <p> The simulations consider the peak achievable network throughput under virtual cut-through switching and a Poissonian packet arrival process at each node; additional experiments with bursty arrivals demonstrate the ability of adaptive routing algorithms to dissipate traffic bursts <ref> [4, 44] </ref>. Finally, the experiments evaluate 16-word packets in a 16 fi 16 square mesh, but simulations with 64-word packets and torus networks show similar trends [44]. Bit-Complement Traffic This pattern fundamentally congests the center of the network, in both the torus and square mesh topologies.
Reference: [5] <author> A. M. Law and M. G. McComas, </author> <title> "Simulation software for communications networks: The state of the art," </title> <journal> IEEE Communications Magazine, </journal> <pages> pp. 44-50, </pages> <month> March </month> <year> 1994. </year> <title> 2 For more information about the availability of pp-mess-sim, </title> <note> please see our web page at http://www.eecs.umich.edu/RTCL/ 32 </note>
Reference-contexts: This paper presents pp-mess-sim (point-to-point message simulator), a flexible and extensible simulation environment for evaluating and tuning multicomputer router designs [3, 4]. Maximizing system performance requires matching application communication requirements with a suitable network design. While many simulation toolkits can flexibly model local and wide area networks <ref> [5] </ref>, few simulators sufficiently capture the characteristics of emerging multicomputer router architectures. In contrast to LANs/WANs, parallel systems typically employ regular network topologies that facilitate efficient, flexible routing schemes. Tighter coupling between nodes enables network designers to consider more diverse switching schemes and flow-control policies.
Reference: [6] <author> J.-M. Hsu and P. Banerjee, </author> <title> "Performance measurement and trace driven simulation of parallel CAD and numeric applications on a hypercube multicomputer," </title> <journal> IEEE Trans. Parallel and Distributed Systems, </journal> <volume> vol. 3, </volume> <pages> pp. 451-464, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Detailed measurements of multicomputer applications, however, have led to more sophisticated traffic generation models <ref> [6, 7] </ref>. In order to simulate realistic workloads, pp-mess-sim provides a rich set of packet length, interarrival time, and destination node distributions 1 , as shown in Tables 2 and 3. <p> The simulator captures this effect through a most-recently used stack model for selecting destination nodes <ref> [6] </ref>. For example, line 29 of Figure 2 declares a three-element stack for each time-constrained task. Half of the time, a new packet selects its destination from the top of the stack; the second and third destinations in the stack are chosen 20% and 10% of the time, respectively.
Reference: [7] <author> R. Cypher, A. Ho, S. Konstantinidou, and P. Messina, </author> <title> "Architectural requirements of parallel scientific applications with explicit communication," </title> <booktitle> in Proc. Int'l Symposium on Computer Architecture, </booktitle> <pages> pp. 2-13, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Wormhole switching achieves low latency without requiring packet buffers, but virtual cut-through and packet switching may achieve larger throughput at high loads. Packet size also impacts switching performance, since multicomputer communication often consists of large data transfers, coupled with small request and acknowledgement packets <ref> [7] </ref>. A flexible router can accommodate this mixture of traffic by having long packets use wormhole switching to reduce buffer space requirements, while allowing short packets to use virtual cut-through switching to reduce network contention [13]. <p> Detailed measurements of multicomputer applications, however, have led to more sophisticated traffic generation models <ref> [6, 7] </ref>. In order to simulate realistic workloads, pp-mess-sim provides a rich set of packet length, interarrival time, and destination node distributions 1 , as shown in Tables 2 and 3. <p> In Figure 2 (line 15), the best-effort packets use the discrete distribution to generate packet lengths. In this case, 70% of the best-effort packets are short, while the remaining are long; such bimodal distributions are common in multicomputer applications <ref> [7] </ref>. Packet interarrival times also stem from a variety of distributions, as shown in Table 3. For example, in Figure 2, time-constrained tasks create periodic (line 26), fixed-length (line 27) packets, while default best-effort tasks generate packets according to a Poisson process (line 14).
Reference: [8] <author> M. G. Norman and P. Thanisch, </author> <title> "Models of machines and computation for mapping in mul-ticomputers," </title> <journal> ACM Computing Surveys, </journal> <volume> vol. 25, </volume> <pages> pp. 263-302, </pages> <month> September </month> <year> 1993. </year>
Reference: [9] <author> V. M. Lo, S. Rajopadhye, S. Gupta, D. Keldsen, M. A. Mohamed, B. Nitzberg, J. A. Telle, and X. Zhong, "OREGAMI: </author> <title> Tools for mapping parallel computations to parallel architectures," </title> <journal> International Journal of Parallel Programming, </journal> <volume> vol. 20, </volume> <pages> pp. 237-270, </pages> <month> June </month> <year> 1991. </year>
Reference: [10] <author> F. Hady and D. Smitley, </author> <title> "Adaptive vs. non-adaptive routing: An application driven case study," </title> <type> Tech. Rep. </type> <institution> SRC-TR-93-099, Supercomputing Research Center, Bowie, Maryland, </institution> <month> March </month> <year> 1993. </year>
Reference: [11] <author> J. H. Kim and A. A. Chien, </author> <title> "Evaluation of wormhole routed networks under hybrid traffic loads," </title> <booktitle> in Proc. Hawaii Int'l Conf. on System Sciences, </booktitle> <pages> pp. 276-285, </pages> <month> January </month> <year> 1993. </year>
Reference: [12] <author> J. Rexford, J. Dolter, and K. G. Shin, </author> <title> "Hardware support for controlled interaction of guaranteed and best-effort communication," </title> <booktitle> in Proc. Workshop on Parallel and Distributed Real-Time Systems, </booktitle> <pages> pp. 188-193, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: The input grammar includes blocks for selecting the experiment parameters for each of the other pp-mess-sim modules. For example, Figure 2 specifies an 8-ary 2-cube (8 fi 8 torus) network that carries a mixture of time constrained and best-effort traffic, with different traffic patterns, performance metrics, and network policies <ref> [12, 34] </ref>. The input specification file includes "task" blocks to define the communication workload, routing-switching algorithm, and performance metric for each traffic class. <p> As a result, several studies have used pp-mess-sim to evaluate the PRC and the v-router models under various routing-switching schemes, network topologies, and application work-loads <ref> [3, 4, 12, 31, 34, 42-44] </ref>. This section presents the results of sample pp-mess-sim experiments that consider the interaction of routing-switching algorithms and communication patterns. <p> These decentralized queues complicate resource allocation and scheduling, while avoiding the cost of packet buffers in the router. As described in Figure 2, a flexible router can implement packet switching for predictable communication, while permitting best-effort traffic to employ wormhole switching <ref> [12, 34] </ref>. in a 6 fi 6 torus network. Each node injects 64-byte packets with uniform random selection of 26 (a) Average latency (all packets) (b) Latency standard deviation (5-hop packets) destination nodes and dimension-ordered routing.
Reference: [13] <author> S. Konstantinidou, </author> <title> "Segment router: A novel router design for parallel computers," </title> <booktitle> in Symposium on Parallel Algorithms and Architectures, </booktitle> <month> June </month> <year> 1994. </year>
Reference-contexts: A flexible router can accommodate this mixture of traffic by having long packets use wormhole switching to reduce buffer space requirements, while allowing short packets to use virtual cut-through switching to reduce network contention <ref> [13] </ref>. To study these effects, pp-mess-sim supports virtual cut-through, wormhole, and packet switching, as well as hybrids of these schemes [31], each under a variety of routing algorithms. 2.3 Routing The routing algorithm determines which nodes a packet traverses to reach its destination.
Reference: [14] <author> D. Smitley, F. Hady, and D. Burns, </author> <title> "Hnet: A high-performance network evaluation testbed," </title> <type> Tech. Rep. </type> <institution> SRC-TR-91-049, Supercomputing Research Center, Institute for Defense Analyses, </institution> <month> December </month> <year> 1991. </year> <title> [15] nCube Corporation, nCUBE-3: The Scalable Server Platform, </title> <month> March </month> <year> 1995. </year>
Reference: [16] <author> S. Daniel, J. Rexford, J. Dolter, and K. Shin, </author> <title> "A programmable routing controller for flexible communications in point- to-point networks," </title> <booktitle> in Proc. International Conference on Computer Design, </booktitle> <pages> pp. 320-325, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: Section 4 describes how this framework enables the evaluation of a variety of router models. Currently, pp-mess-sim includes a cycle-level model of the programmable routing controller (PRC) <ref> [16] </ref>, a router for point-to-point distributed systems, as well as a general, higher-level router model. The simulator supports a broad spectrum of routing and switching schemes by decoupling them from the router models, as discussed in Section 5. <p> In addition, pp-mess-sim introduces several useful abstractions for representing flow control and resource arbitration within the router models. 4.1 Node Modules The simulator includes a cycle-level model of the PRC <ref> [3, 16] </ref>, a programmable routing controller for point-to-point distributed systems.
Reference: [17] <author> J. Rexford, J. Hall, and K. G. Shin, </author> <title> "A router architecture for real-time point-to-point networks," </title> <booktitle> in Proc. International Symposium on Computer Architecture, </booktitle> <pages> pp. 237-246, </pages> <month> May </month> <year> 1996. </year>
Reference-contexts: For a time-constrained packet, this effectively provides flit-level preemption of best-effort traffic across its entire path through the network. These results motivate a router architecture that tailors its low-level routing, switching, arbitration, queueing, and flow-control policies to the conflicting requirements of time-constrained and best-effort communication <ref> [17] </ref>.
Reference: [18] <author> E. Olk, </author> <title> "PARSE: Simulation of message passing communication networks," </title> <booktitle> in Proc. Simulation Symposium, </booktitle> <pages> pp. 115-1245, </pages> <month> April </month> <year> 1994. </year>
Reference: [19] <author> P. M. Dickens, P. Heidelberger, and D. M. Nicol, </author> <title> "Parallelized network simulators for message-passing parallel programs," </title> <booktitle> in Proc. Int'l Workshop on Modeling, Analysis, Simulation of Computer and Telecommunication Systems, </booktitle> <pages> pp. 72-76, </pages> <year> 1995. </year> <month> 33 </month>
Reference: [20] <author> R. C. Bedichek, "Talisman: </author> <title> Fast and accurate multicomputer simulation," </title> <booktitle> in Proc. ACM SIGMETRICS/Performance, </booktitle> <pages> pp. 14-24, </pages> <month> May </month> <year> 1995. </year>
Reference: [21] <author> P. K. McKinley and C. Trefftz, "MultiSim: </author> <title> A simulation tool for the study of large-scale multiprocessors," </title> <booktitle> in Proc. Int'l Workshop on Modeling, Analysis, Simulation of Computer and Telecommunication Systems, </booktitle> <pages> pp. 57-62, </pages> <month> January </month> <year> 1993. </year>
Reference: [22] <author> J. R. Jump and S. Lakshmanamurthy, "NETSIM: </author> <title> A general-purpose interconnection network simulator," </title> <booktitle> in Proc. Int'l Workshop on Modeling, Analysis, Simulation of Computer and Telecommunication Systems, </booktitle> <pages> pp. 121-125, </pages> <month> January </month> <year> 1993. </year>
Reference: [23] <author> K. Bolding, S.-E. Choi, and M. Fulgham, </author> <title> "The Chaos router simulator." Presentation at Parallel Computer Routing and Communication Workshop, </title> <month> May </month> <year> 1994. </year>
Reference: [24] <author> W. J. Dally, </author> <title> "Performance analysis of k-ary n-cube interconnection networks," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. 39, </volume> <pages> pp. 775-785, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: By defining the connections between processing nodes, the topology determines the number of communication links at each node and how far a packet must travel to reach its destination. This impacts both the complexity of network wiring and the achievable communication bandwidth in the system <ref> [24, 25] </ref>. Depending on the communication workload, the network topology affects how nonuniform traffic patterns, such as hot-spots, form and dissipate over time. Although parallel machines may connect processing nodes in a variety of topologies, many multicomputers have regular, direct networks. <p> Regular topologies simplify packet routing and the placement of application processes in the network; direct networks, consisting of point-to-point links, capitalize on spatial communication locality. Many multicomputers employ the k-ary n-cube family of topologies, with k nodes along each of n dimensions <ref> [24] </ref>. Currently pp-mess-sim supports k-ary n-cube topologies, square meshes, and wrapped hexagonal meshes. A multicomputer can construct logical topologies on top of the physical network by providing multiple virtual channels on each physical link. These logical resources may be employed to prevent communication deadlocks [26] and improve network throughput [27].
Reference: [25] <author> A. Agarwal, </author> <title> "Limits on interconnection network performance," </title> <journal> IEEE Trans. Parallel and Distributed Systems, </journal> <volume> vol. 2, </volume> <pages> pp. 398-412, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: By defining the connections between processing nodes, the topology determines the number of communication links at each node and how far a packet must travel to reach its destination. This impacts both the complexity of network wiring and the achievable communication bandwidth in the system <ref> [24, 25] </ref>. Depending on the communication workload, the network topology affects how nonuniform traffic patterns, such as hot-spots, form and dissipate over time. Although parallel machines may connect processing nodes in a variety of topologies, many multicomputers have regular, direct networks.
Reference: [26] <author> W. J. Dally and C. L. Seitz, </author> <title> "Deadlock-free message routing in multiprocessor interconnection networks," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. C-36, no. 5, </volume> <pages> pp. 547-553, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: Currently pp-mess-sim supports k-ary n-cube topologies, square meshes, and wrapped hexagonal meshes. A multicomputer can construct logical topologies on top of the physical network by providing multiple virtual channels on each physical link. These logical resources may be employed to prevent communication deadlocks <ref> [26] </ref> and improve network throughput [27]. Although virtual channels improve router flexibility, they also affect network speed and implementation complexity [28]; since these trade-offs greatly influence communication performance, pp-mess-sim can vary the number of virtual channels in the network.
Reference: [27] <author> W. Dally, </author> <title> "Virtual-channel flow control," </title> <journal> IEEE Trans. Parallel and Distributed Systems, </journal> <volume> vol. 3, </volume> <pages> pp. 194-205, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: Currently pp-mess-sim supports k-ary n-cube topologies, square meshes, and wrapped hexagonal meshes. A multicomputer can construct logical topologies on top of the physical network by providing multiple virtual channels on each physical link. These logical resources may be employed to prevent communication deadlocks [26] and improve network throughput <ref> [27] </ref>. Although virtual channels improve router flexibility, they also affect network speed and implementation complexity [28]; since these trade-offs greatly influence communication performance, pp-mess-sim can vary the number of virtual channels in the network. <p> For example, wormhole routers typically divide the packets of a message into small flow control units (flits); packets on different virtual channels share the physical bandwidth, based on flit-level link arbitration <ref> [27] </ref>. 3 Simulator Structure As shown in Figure 1, pp-mess-sim's structure reflects the important architectural issues outlined in Section 2. Although network design parameters interact in subtle ways, pp-mess-sim defines clean and powerful interfaces between the main simulation components, without restricting the flexibility of the tool.
Reference: [28] <author> A. A. Chien, </author> <title> "A cost and speed model for k-ary n-cube wormhole routers," </title> <booktitle> in Proc. Hot Interconnects, </booktitle> <month> August </month> <year> 1993. </year>
Reference-contexts: These logical resources may be employed to prevent communication deadlocks [26] and improve network throughput [27]. Although virtual channels improve router flexibility, they also affect network speed and implementation complexity <ref> [28] </ref>; since these trade-offs greatly influence communication performance, pp-mess-sim can vary the number of virtual channels in the network. In addition, multicomputer networks can use virtual channels to separate traffic with different characteristics or performance requirements.
Reference: [29] <author> P. Kermani and L. Kleinrock, </author> <title> "Virtual cut-through: A new computer communication switching technique," </title> <journal> Computer Networks, </journal> <volume> vol. 3, </volume> <pages> pp. 267-286, </pages> <month> September </month> <year> 1979. </year>
Reference-contexts: The switching scheme impacts performance by determining the link and buffer resources a packet consumes at a given node in its route. Traditional packet switching requires incoming packets to buffer completely before transmission to a subsequent node can begin. In contrast, cut-through switching schemes, such as virtual cut-through <ref> [29] </ref> and wormhole [30], try to forward incoming 4 packets directly to an idle output link. If the outgoing link is busy, virtual cut-through switching buffers the packet, whereas a blocked wormhole packet stalls pending access to the link.
Reference: [30] <author> W. J. Dally and C. L. Seitz, </author> <title> "The torus routing chip," </title> <journal> Journal of Distributed Computing, </journal> <volume> vol. 1, no. 3, </volume> <pages> pp. 187-196, </pages> <year> 1986. </year>
Reference-contexts: Traditional packet switching requires incoming packets to buffer completely before transmission to a subsequent node can begin. In contrast, cut-through switching schemes, such as virtual cut-through [29] and wormhole <ref> [30] </ref>, try to forward incoming 4 packets directly to an idle output link. If the outgoing link is busy, virtual cut-through switching buffers the packet, whereas a blocked wormhole packet stalls pending access to the link.
Reference: [31] <author> K. G. Shin and S. Daniel, </author> <title> "Analysis and implementation of hybrid switching," </title> <booktitle> in Proc. International Symposium on Computer Architecture, </booktitle> <pages> pp. 211-219, </pages> <month> June </month> <year> 1995. </year> <note> Extended version to appear in IEEE Trans. on Computers. </note>
Reference-contexts: To study these effects, pp-mess-sim supports virtual cut-through, wormhole, and packet switching, as well as hybrids of these schemes <ref> [31] </ref>, each under a variety of routing algorithms. 2.3 Routing The routing algorithm determines which nodes a packet traverses to reach its destination. Oblivious routing generates a single, deterministic outgoing link for an incoming packet, whereas adaptive schemes can incorporate prevailing network conditions into the routing decision. <p> For example, the h-hop hybrid algorithm in Table 1 allows a blocked packet to stall (using the wait construct) only if the packet spans fewer than h links; otherwise, the blocked packet buffers at the intermediate node, releasing any channel resources <ref> [31] </ref>. <p> As a result, several studies have used pp-mess-sim to evaluate the PRC and the v-router models under various routing-switching schemes, network topologies, and application work-loads <ref> [3, 4, 12, 31, 34, 42-44] </ref>. This section presents the results of sample pp-mess-sim experiments that consider the interaction of routing-switching algorithms and communication patterns. <p> Neither wormhole nor virtual cut-through switching performs best in all situations, suggesting that router designs can incorporate the salient features of the both schemes <ref> [31] </ref>; pp-mess-sim's Ralg support facilitates experimentation with such hybrid algorithms. Mixing Wormhole and Packet Switching Wormhole and packet switching exercise complementary resources in the interconnection network, with wormhole switching reserving virtual channels and packet switching consuming buffers in the router.
Reference: [32] <author> V. Karamcheti and A. A. Chien, </author> <title> "Software overhead in messaging layers: Where does the time go?," </title> <booktitle> in Proc. Int'l Conf. on Architectural Support for Programming Languages and Operating Systems, </booktitle> <pages> pp. 51-60, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: Minimal and non-minimal adaptive routing can reduce end-to-end delay, but out-of-order packet arrival can complicate protocol processing at the receiving node <ref> [32] </ref>. Opportunities for adaptive routing vary depending on the topology, the distance a packet must travel, and the traffic patterns.
Reference: [33] <author> M. G. Hluchyj and M. J. Karol, </author> <title> "Queueing in high-performance packet switching," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 6, </volume> <pages> pp. 1587-1597, </pages> <month> December </month> <year> 1988. </year>
Reference-contexts: A particular router design may queue packets at the input links, the output links, and the interface to the local node. Depending on the structure and placement of these buffers, packets may incur significant queueing delay <ref> [33] </ref>. When several queues vie for a resource, the router invokes an arbitration policy, such as round-robin or a priority-based scheme, to select the winner. The arbitration policy may differentiate between application traffic classes to assign priority to more urgent packets.
Reference: [34] <author> J. Rexford and K. G. Shin, </author> <title> "Support for multiple classes of traffic in multicomputer routers," </title> <booktitle> in Proc. Parallel Computer Routing and Communication Workshop, </booktitle> <pages> pp. 116-130, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: The input grammar includes blocks for selecting the experiment parameters for each of the other pp-mess-sim modules. For example, Figure 2 specifies an 8-ary 2-cube (8 fi 8 torus) network that carries a mixture of time constrained and best-effort traffic, with different traffic patterns, performance metrics, and network policies <ref> [12, 34] </ref>. The input specification file includes "task" blocks to define the communication workload, routing-switching algorithm, and performance metric for each traffic class. <p> As a result, several studies have used pp-mess-sim to evaluate the PRC and the v-router models under various routing-switching schemes, network topologies, and application work-loads <ref> [3, 4, 12, 31, 34, 42-44] </ref>. This section presents the results of sample pp-mess-sim experiments that consider the interaction of routing-switching algorithms and communication patterns. <p> These decentralized queues complicate resource allocation and scheduling, while avoiding the cost of packet buffers in the router. As described in Figure 2, a flexible router can implement packet switching for predictable communication, while permitting best-effort traffic to employ wormhole switching <ref> [12, 34] </ref>. in a 6 fi 6 torus network. Each node injects 64-byte packets with uniform random selection of 26 (a) Average latency (all packets) (b) Latency standard deviation (5-hop packets) destination nodes and dimension-ordered routing. <p> The average latency and predictability of time-constrained packets are largely unaffected by the best-effort load, due to fine-grain arbitration amongst the virtual channels. The router can further reduce the interference of best-effort traffic by imposing priority arbitration amongst the virtual channels <ref> [34] </ref>, as shown in Figure 2. For a time-constrained packet, this effectively provides flit-level preemption of best-effort traffic across its entire path through the network.
Reference: [35] <author> J. Duato, </author> <title> "A new theory of deadlock-free adaptive routing in wormhole networks," </title> <journal> IEEE Trans. Parallel and Distributed Systems, </journal> <pages> pp. 1320-1331, </pages> <month> December </month> <year> 1993. </year> <month> 34 </month>
Reference-contexts: As shown in Table 1, pp-mess-sim includes a variety of oblivious and adaptive routing algorithms for the different switching schemes. The simulator uses Duato's theory <ref> [35] </ref> to construct deadlock-free adaptive routing algorithms under wormhole switching. Each algorithm requires a minimum number of virtual channels for deadlock-free routing; the algorithm uses any additional channels to improve network throughput.
Reference: [36] <author> H. G. Badr and S. Podar, </author> <title> "An optimal shortest-path routing policy for network computers with regular mesh-connected topologies," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. C-38, </volume> <pages> pp. 1362-1370, </pages> <month> October </month> <year> 1989. </year>
Reference-contexts: In addition to these two selection functions, Net can rank outgoing links according to how much further the packet must travel in each direction; this link ordering improves 18 the packet's chance of considering multiple outgoing links at future nodes in its route <ref> [36, 37] </ref>. For example, if a packet is traveling from node (4; 3) to node (6; 10) in a square mesh, the diagonal selection function would recommend traveling in the y-direction, instead of the x-direction, if both links are idle.
Reference: [37] <author> A. L. Davis, "Mayfly: </author> <title> A general-purpose, scalable, </title> <booktitle> parallel processing architecture," Lisp and Symbolic Computation, </booktitle> <volume> vol. 5, </volume> <pages> pp. 7-47, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: In addition to these two selection functions, Net can rank outgoing links according to how much further the packet must travel in each direction; this link ordering improves 18 the packet's chance of considering multiple outgoing links at future nodes in its route <ref> [36, 37] </ref>. For example, if a packet is traveling from node (4; 3) to node (6; 10) in a square mesh, the diagonal selection function would recommend traveling in the y-direction, instead of the x-direction, if both links are idle.
Reference: [38] <author> W. Dally and H. Aoki, </author> <title> "Deadlock-free adaptive routing in multicomputer networks using virtual channels," </title> <journal> IEEE Trans. Parallel and Distributed Systems, </journal> <volume> vol. 4, </volume> <pages> pp. 466-475, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: Another selection function ranks output links according to network congestion, giving preference to links with fewer busy virtual channels <ref> [38] </ref>; this balances traffic load amongst the outgoing links, reducing contention and packet delay. 6.2 Mapping Functions In addition to supporting routing-switching algorithms, Net also insulates the Node and Workload modules from the details of the network topology.
Reference: [39] <author> D. E. Knuth, </author> <booktitle> The Art of Computer Programming, </booktitle> <volume> Vol 2: </volume> <booktitle> Seminumerical Algorithms. </booktitle> <publisher> Addison Wesley, </publisher> <editor> 1st ed., </editor> <year> 1969. </year>
Reference-contexts: While 1 Each task on each node requires access to random number streams to generate packet lengths, interarrival times, and destination nodes. The simulator extends the additive congruential generator (ACG) <ref> [39] </ref> in the GNU libg++ libraries to provide a multi-threaded generator with a separate random number streams for each stochastic process in each task.
Reference: [40] <author> R. Jain, </author> <title> The Art of Computer Systems Performance Analysis. </title> <publisher> John Wiley & Sons, Inc., </publisher> <year> 1991. </year>
Reference-contexts: Starting with a single input seed (e.g., line 40 in Figure 2), pp-mess-sim divides the resulting random number stream into consecutive chunks, assigning a separate chunk to each stochastic process. This significantly reduces correlation between the processes by generating multiple non-overlapping random number streams <ref> [40] </ref>.
Reference: [41] <author> J. Rexford and K. G. Shin, </author> <title> "Shortest-path routing in homogeneous point-to-point netowrks with virtual cut-through switching," </title> <institution> Computer Science and Engineering Technical Report CSE-TR-146-92, University of Michigan, </institution> <month> November </month> <year> 1992. </year>
Reference-contexts: The history collection mechanism also allows for simple extensions for additional performance metrics to study specific research issues. For example, using statistics on packet cut-through history, we have investigated the effects of inter-node dependencies on the performance of cut-through networks by comparing simulation results with analytical models <ref> [41] </ref>. Adding customized entries to the history list can create a fairly detailed list, allowing the collection routines to reconstruct the behavior of the packet and the network. 8 Simulation Experiments The simulator's flexibility enables a broad range of experiments for evaluating multicomputer router designs.
Reference: [42] <author> W. Feng, J. Rexford, A. Mehra, S. Daniel, J. Dolter, and K. Shin, </author> <title> "Architectural support for managing communication in point-to-point distributed systems," </title> <type> Tech. Rep. </type> <institution> CSE-TR-197-94, University of Michigan, </institution> <month> March </month> <year> 1994. </year>
Reference: [43] <author> W. Feng, J. Rexford, S. Daniel, A. Mehra, and K. Shin, </author> <title> "Tailoring routing and switching schemes to application workloads in multicomputer networks," </title> <institution> Computer Science and Engineering Technical Report CSE-TR-239-95, University of Michigan, </institution> <month> May </month> <year> 1995. </year>
Reference: [44] <author> W. Feng and K. G. Shin, </author> <title> "Impact of selection functions on routing algorithm performance in multicomputer networks," </title> <institution> Computer Science and Engineering Technical Report CSE-TR-287-96, University of Michigan, </institution> <month> March </month> <year> 1996. </year> <month> 35 </month>
Reference-contexts: The simulations consider the peak achievable network throughput under virtual cut-through switching and a Poissonian packet arrival process at each node; additional experiments with bursty arrivals demonstrate the ability of adaptive routing algorithms to dissipate traffic bursts <ref> [4, 44] </ref>. Finally, the experiments evaluate 16-word packets in a 16 fi 16 square mesh, but simulations with 64-word packets and torus networks show similar trends [44]. Bit-Complement Traffic This pattern fundamentally congests the center of the network, in both the torus and square mesh topologies. <p> Finally, the experiments evaluate 16-word packets in a 16 fi 16 square mesh, but simulations with 64-word packets and torus networks show similar trends <ref> [44] </ref>. Bit-Complement Traffic This pattern fundamentally congests the center of the network, in both the torus and square mesh topologies.
References-found: 43

