URL: http://www.cs.washington.edu/research/jair/volume8/darwiche98a.ps
Refering-URL: http://www.cs.washington.edu/research/jair/abstracts/darwiche98a.html
Root-URL: 
Email: darwiche@aub.edu.lb  Beirut, Lebanon  
Title: Model-Based Diagnosis using Structured System Descriptions  
Author: Adnan Darwiche 
Address: PO Box 11-236  
Affiliation: Department of Mathematics American University of Beirut  
Note: Journal of Artificial Intelligence Research 8 (1998) 165-222 Submitted 8/97; published 6/98  
Abstract: This paper presents a comprehensive approach for model-based diagnosis which includes proposals for characterizing and computing preferred diagnoses, assuming that the system description is augmented with a system structure (a directed graph explicating the interconnections between system components). Specifically, we first introduce the notion of a consequence, which is a syntactically unconstrained propositional sentence that characterizes all consistency-based diagnoses and show that standard characterizations of diagnoses, such as minimal conflicts, correspond to syntactic variations on a consequence. Second, we propose a new syntactic variation on the consequence known as negation normal form (NNF) and discuss its merits compared to standard variations. Third, we introduce a basic algorithm for computing consequences in NNF given a structured system description. We show that if the system structure does not contain cycles, then there is always a linear-size consequence in NNF which can be computed in linear time. For arbitrary system structures, we show a precise connection between the complexity of computing consequences and the topology of the underlying system structure. Finally, we present an algorithm that enumerates the preferred diagnoses characterized by a consequence. The algorithm is shown to take linear time in the size of the consequence if the preference criterion satisfies some general conditions.
Abstract-found: 1
Intro-found: 1
Reference: <author> Barwise, J. (Ed.). </author> <year> (1977). </year> <title> Handbook of Mathematical Logic. </title> <publisher> North-Holland, Amsterdam. </publisher>
Reference-contexts: Specifically, minimal conflicts correspond to the prime implicates of a consequence and kernel diagnoses correspond to its prime implicants. We adopt a less restrictive syntax of consequences known as negation normal form (NNF) of which prime implicants/implicates are a special case <ref> (Barwise, 1977) </ref>. Although we do not guarantee that our NNF representation of consequences is the most compact, we do offer some guarantees on this representation that cannot be offered with respect to standard representations. 166 Model-Based Diagnosis using Structured-System Descriptions 2. <p> We will follow the same approach except that we will not use conflicts to characterize the set of diagnoses. Instead, we will adopt an equivalent but syntactically different characterization of diagnoses known as negation normal form <ref> (Barwise, 1977) </ref>. Before we discuss this alternate characterization of diagnoses, however, we need to introduce the notion of a consequence which is very useful in putting the different characterizations of diagnoses in perspective. <p> Both of these standard forms, however, are specials cases of negation normal form (NNF) <ref> (Barwise, 1977) </ref>, which we adopt in this paper: Definition 7 (Negation Normal Form) A sentence ff is in negation normal form (NNF) if and only if ff is either a literal; a disjunction W i ff i ; or a conjunction V i ff i where each ff i is in
Reference: <author> Beglez, F., & Fujiwara, H. </author> <year> (1985). </year> <title> A neutral netlist of 10 combinational benchmark circuits and a target translator in FORTRAN. </title> <booktitle> In Proceedings of the IEEE symposium on Circuits and Systems. </booktitle> <address> http://www.cbl.ncsu.edu/www/CBL Docs/iscas85.html. </address>
Reference-contexts: This will lead to a disconnected system structure. In such a case, we have to compute the consequence of each disconnected piece and then conjoin all consequences. 205 Darwiche 1996) for an example which show jointree statistics for the benchmark circuits proposed in <ref> (Beglez & Fujiwara, 1985) </ref>.
Reference: <author> Collins, J. W., & DeCoste, D. </author> <year> (1991). </year> <title> CATMS: An ATMS Which Avoids Label Explosions. </title> <booktitle> In Proc. of AAAI-91, </booktitle> <pages> pp. 281-287. </pages>
Reference: <author> Darwiche, A. </author> <year> (1995). </year> <title> Model-based diagnosis using causal networks. </title> <booktitle> In Proceedings of International Joint Conference on Artificial Intelligence (IJCAI), </booktitle> <pages> pp. 211-217. </pages>
Reference-contexts: 1. Introduction This paper presents a comprehensive approach for characterizing and computing preferred diagnoses when the system description is augmented with a system structure <ref> (Darwiche, 1995) </ref>. A system structure is a directed acyclic graph explicating the interconnections between system components. Adding a system structure to a classical system description (de Kleer, Mackworth, & Reiter, 1992) leads to what we call a structured system description, examples of which are shown in Figures 1 and 2. <p> The approach we present in this paper is based on three main ideas, which address the problems mentioned above: 1. Characterizing diagnoses using negation normal forms: We propose the notion of a consequence which is a syntactically unconstrained propositional sentence that characterizes all consistency-based diagnoses <ref> (Darwiche, 1995, 1997) </ref>. We show that standard characterizations of diagnoses correspond to syntactic restrictions on a consequence. Specifically, minimal conflicts correspond to the prime implicates of a consequence and kernel diagnoses correspond to its prime implicants. <p> Before we discuss this alternate characterization of diagnoses, however, we need to introduce the notion of a consequence which is very useful in putting the different characterizations of diagnoses in perspective. The consequence of an observation is defined formally below <ref> (Darwiche, 1995, 1997) </ref>: Definition 5 (Consequence) Given a system description (P; A; ), the consequence of system observation , written Cons A (), is a sentence satisfying the following properties: 1. Cons A () is an A-sentence; 2. [ fg j= Cons A (); 3.
Reference: <author> Darwiche, A. </author> <year> (1997). </year> <title> A logical notion of conditional independence: Properties and applications. </title> <journal> Artificial Intelligence, </journal> <volume> 97 (1-2), </volume> <pages> 45-82. </pages>
Reference-contexts: The approach, however, is not appropriate as is for the first circuit. We close this section by stressing again that this process of cutting out arcs can lead to a very dramatic reduction in maximal-clique size. Therefore, it should be exploited whenever possible <ref> (Darwiche & Provan, 1997) </ref>. 22. The jointrees after cutting out arcs are computed using the algorithm reported in (Huang & Darwiche, 1996). Model-Based Diagnosis using Structured-System Descriptions Appendix F.
Reference: <author> Darwiche, A. </author> <year> (1998a). </year> <title> Compiling devices: A structure-based approach. </title> <note> In KR98. To appear. </note>
Reference-contexts: In this case, one can always construct a jointree in which (a) each clique contains only a node and its parents in G; and (b) each sepset contains only one 13. This observation is the basis of an approach for compiling devices into parameterized NNFs, which is described in <ref> (Darwiche, 1998a) </ref>. 187 Darwiche 188 Model-Based Diagnosis using Structured-System Descriptions jointree. node. In particular, for each node N in the system structure G, we construct a clique which contains the family of N (that is, fN g [ G N ). <p> Next, it allowed us to incorporate different minimality criteria without having to alter the characterization algorithm. Finally, it inspired a device compilation technique which is discussed in <ref> (Darwiche, 1998a) </ref>. The time and space complexity of our algorithm depends not only on the system topology but also on the system observables. In particular, we have shown that the more observables we have, the easier it is to diagnose a system using our algorithm.
Reference: <author> Darwiche, A. </author> <year> (1998b). </year> <title> Utilizing device non-structural properties in structure-based diagnosis. </title> <booktitle> In Proceedings of the 9 t h International Workshop on Principles of Diagnosis, </booktitle> <pages> pp. 32-39. </pages>
Reference-contexts: We did propose a specific algorithm which utilizes jointrees, but our framework can accommodate other structure-based algorithms (that do not necessarily utilize jointrees) as long as they provide a mechanism for applying the Intersection Corrollary efficiently (see <ref> (Darwiche, 1998b) </ref> for an example). We have decomposed the computation of minimal diagnoses into two independent stages: characterization of diagnoses using consequences and then choosing a minimal subset of them. This separation has at least three advantages.
Reference: <author> Darwiche, A., & Goldszmidt, M. </author> <year> (1994). </year> <title> On the relation between kappa calculus and probabilistic reasoning. </title> <booktitle> In Proceedings of the Tenth Conference on Uncertainty in Artificial Intelligence (UAI), </booktitle> <pages> pp. 145-153. </pages> <month> 27. </month> <title> This follows by transitivity of the property in Equation 1 and because t is an ancestor of . 220 Model-Based Diagnosis using Structured-System Descriptions Darwiche, </title> <editor> A., & Pearl, J. </editor> <year> (1994). </year> <title> Symbolic causal networks. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence (AAAI), </booktitle> <pages> pp. 238-244. </pages>
Reference-contexts: Note that this global consistency is guaranteed given only local conditions on component descriptions. We close this section by noting that a structured system description as defined here is the diagnosis special-case of a symbolic causal network which we introduced elsewhere <ref> (Darwiche & Pearl, 1994) </ref>. 4. Structure-Based Computation of Consequences A main message of the previous section is that composing a system consequence from component consequences is straightforward, as long as we are not concerned about the size of the resulting consequence.
Reference: <author> Darwiche, A., & Provan, G. </author> <year> (1996). </year> <title> Exploiting system structure in model-based diagnosis of discrete-event systems. </title> <booktitle> In Proceedings of the Seventh International Workshop on Principles of Diagnosis, </booktitle> <pages> pp. 95-105. </pages>
Reference-contexts: Therefore, the optimization criterion for constructing jointrees attempts to minimize the atoms on which to perform case analysis when applying the Intersection Corollary, therefore, attempting to minimize the size of the resulting consequence. For a detailed, self-contained discussion on the construction of jointrees, the reader is referred to <ref> (Huang & Darwiche, 1996) </ref>. 4.2 Computing Component Consequences In addition to constructing a jointree and a component assignment, we must compute component consequences before we can compute system consequences. <p> We have experienced this ourselves when we applied this framework to discrete event systems which are typically strongly observed <ref> (Darwiche & Provan, 1996, 1997) </ref>. Even when the system is not strongly observed, Theorem 11 is useful in deciding which observations would be most rewarding computationally. A more dramatic effect of the system observation on complexity is obtained by cutting outgoing arcs of observed nodes from the system structure. <p> We close this section by stressing again that this process of cutting out arcs can lead to a very dramatic reduction in maximal-clique size. Therefore, it should be exploited whenever possible (Darwiche & Provan, 1997). 22. The jointrees after cutting out arcs are computed using the algorithm reported in <ref> (Huang & Darwiche, 1996) </ref>. Model-Based Diagnosis using Structured-System Descriptions Appendix F. Proofs Proof of Theorem 1 Suppose that Cons A () ff 1 _: : :_ff n where each ff i is an A-instantiation.

Reference: <author> Dechter, R. </author> <year> (1992). </year> <title> Constraint networks. </title> <editor> In Shapiro, S. (Ed.), </editor> <booktitle> Encyclopedia of Artificial Intelligence, </booktitle> <pages> pp. 276-285. </pages> <publisher> John Wiley and Sons. </publisher>
Reference: <author> Dechter, R., & Dechter, A. </author> <year> (1996). </year> <title> Structure-driven algorithms for truth maintenance. </title> <journal> Artificial Intelligence, </journal> <volume> 82, </volume> <pages> 1-20. </pages>
Reference-contexts: In fact, there are only a few cliques which have the maximal size or a size close to it as is shown in <ref> (El Fattah & Dechter, 1996) </ref>. This makes the approach reported in this paper appropriate for the last three circuits. The approach, however, is not appropriate as is for the first circuit.
Reference: <author> Dechter, R., & Pearl, J. </author> <year> (1989). </year> <title> Tree clustering for constraint networks. </title> <journal> Artificial Intelligence, </journal> <volume> 38, </volume> <pages> 353-366. </pages>
Reference: <author> Dressler, O., & Farquar, A. </author> <year> (1990). </year> <title> Putting the Problem Solver Back in the Driver's Seat: Contextual Control of the ATMS. </title> <booktitle> In Second AAAI Workshop on Model-Based Reasoning, </booktitle> <pages> pp. 106-112. </pages> <editor> el Ayeb, B., Marquis, P., & Rusinowitch, M. </editor> <year> (1993). </year> <title> Preferring diagnoses by abduction. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 23 (3), </volume> <pages> 792-808. </pages>
Reference: <author> El Fattah, Y., & Dechter, R. </author> <year> (1995). </year> <title> Diagnosing tree-decomposable circuits. </title> <booktitle> In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence (IJCAI-95) Montreal, </booktitle> <address> Quebec, Canada. </address>
Reference-contexts: If a tree system structure is not possible, one should attempt to engineer the structure so as to minimize the size of cliques in its corresponding jointrees. Although tree system structures are computationally easy, non-tree structures are not necessarily hard <ref> (El Fattah & Dechter, 1995) </ref>. In fact, it is possible to obtain a linear complexity even if the system structure is not a tree. Consider for example n-bit adders which are constructed form cascading full adders. These adders have non-tree structures, but it is shown in (El Fattah & Dechter, 1995) <p> are not necessarily hard <ref> (El Fattah & Dechter, 1995) </ref>. In fact, it is possible to obtain a linear complexity even if the system structure is not a tree. Consider for example n-bit adders which are constructed form cascading full adders. These adders have non-tree structures, but it is shown in (El Fattah & Dechter, 1995) that they have jointrees which grow linearly in the number of bits n. Therefore, the consequences corresponding to these systems grow linearly in the number of bits n. 6.
Reference: <author> El Fattah, Y., & Dechter, R. </author> <year> (1996). </year> <title> An evaluation of structural paramters for probabilistic reasoning: Results on benchmark circuits. </title> <booktitle> In Proceedings of the 12th Conference on Uncertainty in Artificial Intelligence (UAI), </booktitle> <pages> pp. 244-251. </pages>
Reference-contexts: In fact, there are only a few cliques which have the maximal size or a size close to it as is shown in <ref> (El Fattah & Dechter, 1996) </ref>. This makes the approach reported in this paper appropriate for the last three circuits. The approach, however, is not appropriate as is for the first circuit.
Reference: <author> Forbus, K. D., & de Kleer, J. </author> <year> (1988). </year> <title> Focusing the ATMS. </title> <booktitle> In Proceedings of the Sixth National Conference on Artificial Intelligence (AAAI), </booktitle> <pages> pp. 193-198. </pages>
Reference: <author> Forbus, K. D., & de Kleer, J. </author> <year> (1993). </year> <title> Building Problem Solvers. </title> <publisher> MIT Press. 221 Darwiche Geffner, </publisher> <editor> H., & Pearl, J. </editor> <year> (1987). </year> <title> An improved constraint-propagation algorithm for diagnosis. </title> <booktitle> In Proceedings of IJCAI, </booktitle> <pages> pp. </pages> <address> 1105-1111 Milan, Italy. </address>
Reference-contexts: Specifically, standard characterizations of diagnoses correspond to the prime implicants/implicates of some propositional sentence. And the number of such implicants/implicates tend to be exponential even for expressions that correspond to simple diagnosis problems. Computationally, this problem manifests as an ATMS label that has an exponential number of environments <ref> (Forbus & de Kleer, 1993) </ref>. This difficulty has led to a body of research on "focusing" the ATMS, which attempts to control the size of ATMS labels (Provan, 1996; de Kleer, 1992; Forbus & de Kleer, 1988; Dressler & Farquar, 1990; Collins & DeCoste, 1991). <p> Therefore, one can use such a criterion to compute "focused" labels that are of reasonable size, yet are good enough to characterize the diagnoses of interest. However, although a standard framework exists for computing ATMS labels <ref> (Forbus & de Kleer, 1993) </ref>, no such framework seems to exist for focusing.
Reference: <author> Goldszmidt, M., & Pearl, J. </author> <year> (1992). </year> <title> Rank-based systems: A simple approach to belief revision, belief update and reasoning about evidence and actions. </title> <booktitle> In Proceedings of the Third Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pp. 661-672. </pages> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <address> San Mateo, California. </address>
Reference: <author> Huang, C., & Darwiche, A. </author> <year> (1996). </year> <title> Inference in belief networks: A procedural guide. </title> <journal> International Journal of Approximate Reasoning, </journal> <volume> 15 (3), </volume> <pages> 225-263. </pages>
Reference-contexts: Therefore, the optimization criterion for constructing jointrees attempts to minimize the atoms on which to perform case analysis when applying the Intersection Corollary, therefore, attempting to minimize the size of the resulting consequence. For a detailed, self-contained discussion on the construction of jointrees, the reader is referred to <ref> (Huang & Darwiche, 1996) </ref>. 4.2 Computing Component Consequences In addition to constructing a jointree and a component assignment, we must compute component consequences before we can compute system consequences. <p> We close this section by stressing again that this process of cutting out arcs can lead to a very dramatic reduction in maximal-clique size. Therefore, it should be exploited whenever possible (Darwiche & Provan, 1997). 22. The jointrees after cutting out arcs are computed using the algorithm reported in <ref> (Huang & Darwiche, 1996) </ref>. Model-Based Diagnosis using Structured-System Descriptions Appendix F. Proofs Proof of Theorem 1 Suppose that Cons A () ff 1 _: : :_ff n where each ff i is an A-instantiation.
Reference: <author> Jensen, F. V., Lauritzen, S., & Olesen, K. </author> <year> (1990). </year> <title> Bayesian updating in recursive graphical models by local computation. </title> <journal> Computational Statistics Quarterly, </journal> <volume> 4, </volume> <pages> 269-282. </pages>
Reference: <author> Provan, G. </author> <year> (1996). </year> <title> A Formal Analysis of Cost Functions for ATMS Focusing. </title> <booktitle> In Proc. Fourth International Symposium on AI and Mathematics Ft. </booktitle> <address> Lauderdale, FL, </address> <month> Jan. 3-5 </month> <year> 1996. </year>
Reference-contexts: We have experienced this ourselves when we applied this framework to discrete event systems which are typically strongly observed <ref> (Darwiche & Provan, 1996, 1997) </ref>. Even when the system is not strongly observed, Theorem 11 is useful in deciding which observations would be most rewarding computationally. A more dramatic effect of the system observation on complexity is obtained by cutting outgoing arcs of observed nodes from the system structure.
Reference: <author> Reiter, R., & de Kleer, J. </author> <year> (1987). </year> <title> Foundations of assumption-based truth maintenance systems: Preliminary report. </title> <booktitle> In Proceedings of AAAI, </booktitle> <pages> pp. 183-188. </pages> <publisher> AAAI. </publisher>
Reference-contexts: We have the following formal definition of a system description, which we adopt in the rest of this paper. The definition is a variation on the standard one provided in <ref> (Reiter, 1987) </ref> and is preceded by some preliminary definitions. Definition 1 Let S be a set of atomic propositions (atoms). An S-literal is a literal whose atom is in S. An S-sentence is a propositional sentence in which each literal is an S-literal.
Reference: <author> Reiter, R. </author> <year> (1987). </year> <title> A theory of diagnosis from first principles. </title> <journal> Artificial Intelligence, </journal> <volume> 32, </volume> <pages> 57-95. </pages>
Reference-contexts: We have the following formal definition of a system description, which we adopt in the rest of this paper. The definition is a variation on the standard one provided in <ref> (Reiter, 1987) </ref> and is preceded by some preliminary definitions. Definition 1 Let S be a set of atomic propositions (atoms). An S-literal is a literal whose atom is in S. An S-sentence is a propositional sentence in which each literal is an S-literal.
Reference: <author> Saraswat, V. A., de Kleer, J., & Raiman, O. </author> <year> (1990). </year> <title> Contributions to a theory of diagnosis. </title> <booktitle> In Working Notes of First International Workshop on Principles of Diagnosis, </booktitle> <pages> pp. 33-38. </pages>
Reference-contexts: The notion of a consequence as we define it in this paper seems to correspond to notions that have appeared previously in the diagnostic literature, but these notions did not prove to be computationally influential. For example, Saraswat et al. define in <ref> (Saraswat, de Kleer, & Raiman, 1990) </ref> a maximally abstract diagnosis, which corresponds to our notion of a consequence. They also prove that a maximally abstract diagnosis characterizes the set of consistency-based diagnoses in the sense of Theorem 1 above.
Reference: <author> Shachter, R., Andersen, S., & Szolovits, P. </author> <year> (1994). </year> <title> Global Conditioning for Probabilistic Inference in Belief Networks. </title> <booktitle> In Proc. Tenth Conference on Uncertainty in AI, </booktitle> <pages> pp. </pages> <address> 514-522 Seattle WA. </address>
Reference-contexts: The result is guaranteed to be a jointree. Figure 11 contains a jointree of a tree system structure. More details on this construction can be found in <ref> (Shachter, Andersen, & Szolovits, 1994) </ref>. Therefore, when the system structure is a tree, the time and space complexity of computing a consequence are exponential only in the size of a family. Because of this result, one should attempt to construct tree system structures whenever possible.
Reference: <author> Spohn, W. </author> <year> (1987). </year> <title> Ordinal conditional functions: A dynamic theory of epistemic states. </title>
Reference: <editor> Causation in Decision, </editor> <title> Belief Change, </title> <editor> and Statistics; W. L. Harper and B. Skyrms, eds., </editor> <volume> 2, </volume> <pages> 105-134. 222 </pages>
References-found: 27

