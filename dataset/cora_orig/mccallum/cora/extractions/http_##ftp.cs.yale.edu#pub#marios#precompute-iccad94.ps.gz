URL: http://ftp.cs.yale.edu/pub/marios/precompute-iccad94.ps.gz
Refering-URL: http://ftp.cs.yale.edu/pub/marios/
Root-URL: http://www.cs.yale.edu
Title: Precomputation-Based Sequential Logic Optimization for Low Power  
Author: Mazhar Alidina Jose Monteiro, Srinivas Devadas Abhijit Ghosh Marios Papaefthymiou 
Address: Cambridge, MA  Sunnyvale, CA  CT  
Affiliation: Department of EECS MIT,  MERL  Department of EE Yale University,  
Abstract: We address the problem of optimizing logic-level sequential circuits for low power. We present a powerful sequential logic optimization method that is based on selectively precomputing the output logic values of the circuit one clock cycle before they are required, and using the precomputed values to reduce internal switching activity in the succeeding clock cycle. We present two different precomputation architectures which exploit this observation. We present an automatic method of synthesizing pre-computation logic so as to achieve maximal reductions in power dissipation. We present experimental results on various sequential circuits. Upto 75% reductions in average switching activity and power dissipation are possible with marginal increases in circuit area and delay. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Alidina. </author> <title> Precomputation-Based Sequential Logic Optimization for Low Power. </title> <type> Master's thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <month> May </month> <year> 1994. </year>
Reference-contexts: A branch and bound algorithm is used to determine the optimal set of inputs maximizing the probability of the g 1 and g 2 functions. This algorithm is shown in pseudo-code in Figure 5 and is described in detail in <ref> [1] </ref>. 3.3.2 Implementing the Logic The Boolean operations of or and universal quantification required in the input selection procedure can be carried out efficiently using reduced, ordered Binary Decision Diagrams (ROBDDs) [4]. We obtain a ROBDD for the g 1 + g 2 function. <p> This algorithm is described in pseudo-code in Figure 6 and is described in detail in <ref> [1] </ref>. Since we are only precomputing a subset of outputs, we may incorrectly evaluate the outputs that we are not precomputing as we disable certain inputs during particular clock cycles. <p> This percentage can be increased to over 45% by using Chn 2i through Y hn 2i. We can additionally use single-cycle precomputation logic (as illustrated in Figure 4) to further reduce switching activity in the &gt; comparator of Figure 7. More examples of this technique can be found in <ref> [1] </ref>. 5 Other Precomputation Architectures In this section, we describe additional precomputation architectures. We first present an architecture that is applicable to all logic circuits and does not require, for instance, that the inputs should be in the observability don't-care set in order to be disabled.
Reference: [2] <author> P. Ashar, S. Devadas, and K. Keutzer. </author> <title> Path-Delay-Fault Testability Properties of Multiplexor-Based Networks. INTEGRATION, </title> <journal> the VLSI Journal, </journal> <volume> 15(1) </volume> <pages> 1-23, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: We obtain a ROBDD for the g 1 + g 2 function. A ROBDD can be converted into a multiplexor-based network (see <ref> [2] </ref>) or into a sum-of-products cover.
Reference: [3] <author> R. Brayton, R. Rudell, A. Sangiovanni-Vincentelli, and A. Wang. </author> <title> MIS: A Multiple-Level Logic Optimization System. </title> <journal> In IEEE Transactions on Computer-Aided Design, </journal> <volume> volume CAD-6, </volume> <pages> pages 1062-1081, </pages> <month> November </month> <year> 1987. </year>
Reference-contexts: We obtain a ROBDD for the g 1 + g 2 function. A ROBDD can be converted into a multiplexor-based network (see [2]) or into a sum-of-products cover. The network or cover can be optimized using standard combinational logic optimization methods that reduce area <ref> [3] </ref> or those that target low power dissipation [12]. 3.4 Multiple-Output Functions In general, we have a multiple-output function f 1 ; ; f m that corresponds to logic block A in Fig ures 2 and 3. All the procedures described thus far can be generalized to the multiple-output case.
Reference: [4] <author> R. Bryant. </author> <title> Graph-Based Algorithms for Boolean Function Manipulation. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-35(8):677-691, </volume> <month> August </month> <year> 1986. </year>
Reference-contexts: This algorithm is shown in pseudo-code in Figure 5 and is described in detail in [1]. 3.3.2 Implementing the Logic The Boolean operations of or and universal quantification required in the input selection procedure can be carried out efficiently using reduced, ordered Binary Decision Diagrams (ROBDDs) <ref> [4] </ref>. We obtain a ROBDD for the g 1 + g 2 function. A ROBDD can be converted into a multiplexor-based network (see [2]) or into a sum-of-products cover.
Reference: [5] <author> A. Chandrakasan, T. Sheng, and R. W. Brodersen. </author> <title> Low Power CMOS Digital Design. </title> <journal> In Journal of Solid State Circuits, </journal> <pages> pages 473-484, </pages> <month> April </month> <year> 1992. </year>
Reference-contexts: Optimization for low power can be applied at many different levels of the design hierarchy. For instance, algorithmic and architectural transformations can trade off throughput, circuit area, and power dissipation <ref> [5] </ref>, and logic optimization methods have been shown to have a significant impact on the power dissipation of combinational logic circuits [12]. In CMOS circuits, the probabilistic average switching activity of a circuit is a good measure of the average power dissipation of the circuit.
Reference: [6] <author> S. Devadas, A. Ghosh, and K. Keutzer. </author> <title> Logic Synthesis. </title> <publisher> McGraw Hill, </publisher> <address> New York, NY, </address> <year> 1994. </year>
Reference-contexts: The arrival time of an input is defined as the time at which the input settles to its steady state value <ref> [6] </ref>.
Reference: [7] <author> A. Ghosh, S. Devadas, K. Keutzer, and J. White. </author> <title> Estimation of Average Switching Activity in Combinational and Sequential Circuits. </title> <booktitle> In Proceedings of the 29 th Design Automation Conference, </booktitle> <pages> pages 253-259, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: Average power dissipation can thus be computed by estimating the average switching activity. Several methods to estimate power dissipation for CMOS combinational circuits have been developed (e.g., <ref> [7, 10] </ref>). More recently, efficient and accurate methods of power dissipation estimation for sequential circuits have been developed [9, 13]. In this work, we are concerned with the problem of optimizing logic-level sequential circuits for low power. <p> We present experimental results on various sequential circuits. For some circuits, 75% reductions in average power dissipation are possible with marginal increases in circuit area and delay. The model we use to relate switching activity to power dissipation can be found in <ref> [7] </ref>. In Section 2 we describe two different precomputation architectures. An algorithm that synthesizes precomputation logic so as to achieve power dissipation reduction is presented in Section 3. In Section 4 we describe a method for multiple-cycle precomputation. <p> All power estimates are in micro-Watts and are computed using the techniques described in <ref> [7] </ref>. A zero delay model and a clock frequency of 20MHz was assumed. The rugged script of sis was used to optimize the precompute logic. Power dissipation decreases for almost all cases.
Reference: [8] <author> J. Monteiro, S. Devadas, and A. Ghosh. </author> <title> Retiming Sequential Circuits for Low Power. </title> <booktitle> In Proceedings of the Int'l Conference on Computer-Aided Design, </booktitle> <pages> pages 398-402, </pages> <month> November </month> <year> 1993. </year>
Reference-contexts: In this work, we are concerned with the problem of optimizing logic-level sequential circuits for low power. Previous work in the area of sequential logic synthesis for low power has focused on state encoding (e.g., fl Currently at AT&T Bell Laboratories, Allentown, PA [11]) and retiming <ref> [8] </ref> algorithms. We present a powerful sequential logic optimization method that is based on selectively precomputing the output logic values of the circuit one clock cycle before they are required, and using the precomputed values to reduce internal switching activity in the succeeding clock cycle.
Reference: [9] <author> J. Monteiro, S. Devadas, and B. Lin. </author> <title> A Methodology for Efficient Estimation of Switching Activity in Sequential Logic Circuits. </title> <booktitle> In Proceedings of the 31 st Design Automation Conference, </booktitle> <pages> pages 12-17, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: Average power dissipation can thus be computed by estimating the average switching activity. Several methods to estimate power dissipation for CMOS combinational circuits have been developed (e.g., [7, 10]). More recently, efficient and accurate methods of power dissipation estimation for sequential circuits have been developed <ref> [9, 13] </ref>. In this work, we are concerned with the problem of optimizing logic-level sequential circuits for low power. Previous work in the area of sequential logic synthesis for low power has focused on state encoding (e.g., fl Currently at AT&T Bell Laboratories, Allentown, PA [11]) and retiming [8] algorithms.
Reference: [10] <author> F. Najm. </author> <title> Transition Density, A Stochastic Measure of Activity in Digital Circuits. </title> <booktitle> In Proceedings of the 28 th Design Automation Conference, </booktitle> <pages> pages 644-649, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: Average power dissipation can thus be computed by estimating the average switching activity. Several methods to estimate power dissipation for CMOS combinational circuits have been developed (e.g., <ref> [7, 10] </ref>). More recently, efficient and accurate methods of power dissipation estimation for sequential circuits have been developed [9, 13]. In this work, we are concerned with the problem of optimizing logic-level sequential circuits for low power.
Reference: [11] <author> K. Roy and S. Prasad. SYCLOP: </author> <title> Synthesis of CMOS Logic for Low Power Applications. </title> <booktitle> In Proceedings of the Int'l Conference on Computer Design: VLSI in Computers and Processors, </booktitle> <pages> pages 464-467, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: In this work, we are concerned with the problem of optimizing logic-level sequential circuits for low power. Previous work in the area of sequential logic synthesis for low power has focused on state encoding (e.g., fl Currently at AT&T Bell Laboratories, Allentown, PA <ref> [11] </ref>) and retiming [8] algorithms. We present a powerful sequential logic optimization method that is based on selectively precomputing the output logic values of the circuit one clock cycle before they are required, and using the precomputed values to reduce internal switching activity in the succeeding clock cycle.
Reference: [12] <author> A. Shen, S. Devadas, A. Ghosh, and K. Keutzer. </author> <title> On Average Power Dissipation and Random Pattern Testability of Combinational Logic Circuits. </title> <booktitle> In Proceedings of the Int'l Conference on Computer-Aided Design, </booktitle> <pages> pages 402-407, </pages> <month> Novem-ber </month> <year> 1992. </year>
Reference-contexts: For instance, algorithmic and architectural transformations can trade off throughput, circuit area, and power dissipation [5], and logic optimization methods have been shown to have a significant impact on the power dissipation of combinational logic circuits <ref> [12] </ref>. In CMOS circuits, the probabilistic average switching activity of a circuit is a good measure of the average power dissipation of the circuit. Average power dissipation can thus be computed by estimating the average switching activity. <p> A ROBDD can be converted into a multiplexor-based network (see [2]) or into a sum-of-products cover. The network or cover can be optimized using standard combinational logic optimization methods that reduce area [3] or those that target low power dissipation <ref> [12] </ref>. 3.4 Multiple-Output Functions In general, we have a multiple-output function f 1 ; ; f m that corresponds to logic block A in Fig ures 2 and 3. All the procedures described thus far can be generalized to the multiple-output case.

References-found: 12

