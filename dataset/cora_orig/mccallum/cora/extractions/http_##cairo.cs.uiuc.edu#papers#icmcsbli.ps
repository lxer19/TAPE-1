URL: http://cairo.cs.uiuc.edu/papers/icmcsbli.ps
Refering-URL: http://cairo.cs.uiuc.edu/papers.html
Root-URL: http://www.cs.uiuc.edu
Email: b-li@cs.uiuc.edu, klara@cs.uiuc.edu  
Title: Dynamic Reconfiguration for Complex Multimedia Applications  
Author: Baochun Li, Klara Nahrstedt 
Affiliation: Department of Computer Science University of Illinois at Urbana-Champaign  
Abstract: Current state-of-the-art distributed multimedia applications require an environment that provides stable Quality of Service (QoS). However, these applications typically run on best-effort heterogeneous platforms, and compete with other applications or connections for end system and network resources, hence suffer from instability and dynamic variations with regards to QoS. In this paper, we present a dynamically reconfigurable middleware control architecture to enhance adaptation awareness of these applications. Our middleware architecture allows for detecting QoS fluctuations in the surrounding environment and signaling optimal control actions to the application. Furthermore, we discuss the design of a core component, the Configurator, that adopts a fuzzy control approach to compute optimal control actions. Preliminary experimental results with a distributed visual tracking application show that our approach is viable and effective in controlling adaptive applications. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Cen, C. Pu, R. Staehli, C. Cowan, and J. Walpole. </author> <title> A Distributed Real-Time MPEG Video Audio Player. </title> <booktitle> Proceedings of the 5th International Workshop on Network and Operating System Support of Digital Audio and Video (NOSSDAV'95), </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: It is implemented using mechanisms such as dynamic re-routing and load balancing. In contrast to our work, it focuses primarily on communication subsystems, while our approach focus on adaptation within user-level applications. Other work <ref> [1] </ref> [2] [20] tries to adapt frame, layering or coding parameters in multimedia flows so that output rate can be varied according to feedback from the network.
Reference: [2] <author> Z. Chen, S. Tan, R. Campbell, and Y. Li. </author> <title> Real Time Video and Audio in the World Wide Web. </title> <booktitle> Proceedings of Fourth International World Wide Web Conference, </booktitle> <year> 1995. </year>
Reference-contexts: It is implemented using mechanisms such as dynamic re-routing and load balancing. In contrast to our work, it focuses primarily on communication subsystems, while our approach focus on adaptation within user-level applications. Other work [1] <ref> [2] </ref> [20] tries to adapt frame, layering or coding parameters in multimedia flows so that output rate can be varied according to feedback from the network.
Reference: [3] <editor> J. DeMeer. </editor> <booktitle> On the Specification of End-to-End QoS Control. Proceedings of 5th International Workshop on Quality of Service '97, </booktitle> <month> May </month> <year> 1997. </year>
Reference-contexts: The application of control theories has been explored in recent work in the area of QoS adaptation. In one paper [18], the application of control theory is suggested as a future research direction to analyze adaptation behavior in wireless environments. In another <ref> [3] </ref>, a control model is proposed for adaptive QoS specification in an end-to-end scenario.
Reference: [4] <author> D. Driankov, H. Hellendoorn, and M. Reinfrank. </author> <title> An Introduction to Fuzzy Control. </title> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: After the defuzzification process, the fuzzy output value directly corresponds to a particular control action within the application. The fuzzy inference engine operates by using the dual concepts of generalized modus ponens and compositional rule of inference <ref> [4] </ref>. For mathematical completeness of the paper, the internal mechanisms of the inference engine are covered in Appendix A. In our preliminary implementation of the fuzzy inference engine, we adopt the C-FLIE inference engine implementation [14] as well as its input format for specifying the rule base and membership functions. <p> Throughput (b) Observed Throughput (c) Parameter-tuning Action: Chopped Image Size (d) Parameter-tuning Action: Chopped Image Size (e) Tracking Precision (f) Tracking Precision Appendix A: Internal Mechanisms in the Fuzzy Inference Engine The fuzzy inference engine operates by using the dual concepts of generalized modus ponens and compositional rule of inference <ref> [4] </ref>. The concept of generalized modus ponens is derived from the operation of modus ponens in binary logic. Modus 12 ponens is the operation to draw a conclusion from two premises.
Reference: [5] <author> G. Franklin and J. Powell. </author> <title> Digital Control of Dynamic Systems. </title> <publisher> Addison-Wesley, </publisher> <year> 1981. </year>
Reference-contexts: the presence of the Adaptation Task, the input resource request rate is the same as the number of throttled resource requests u i (k), which is the generated control values by the Adaptation Task. 4.3 Control Algorithms in Adaptation Tasks In [12] we developed a standard proportional-integral- derivative (PID) control <ref> [5] </ref> 1 as an example of the control algorithms embedded in the Adaptation Task.
Reference: [6] <author> F. Goktas, J. Smith, and R. </author> <title> Bajcsy. Telerobotics over Communication Networks: Control and Networking Issues. </title> <booktitle> 36th IEEE Conference on Decision and Control, </booktitle> <year> 1997. </year>
Reference-contexts: In one paper [18], the application of control theory is suggested as a future research direction to analyze adaptation behavior in wireless environments. In another [3], a control model is proposed for adaptive QoS specification in an end-to-end scenario. In the third example <ref> [6] </ref>, the time variations along the transmission path of a telerobotics system are modeled as disturbances in the proposed perturbed plant model, in which the mobile robot is the target to be controlled.
Reference: [7] <author> A. Hafid and G. Bochmann. </author> <title> Quality of Service Adaptation in Distributed Multimedia Applications. </title> <journal> ACM Springer-Verlag Multimedia Systems Journal, </journal> <volume> 6, </volume> <year> 1998. </year>
Reference-contexts: In [19], the authors proposed a framework for the communication subsystem to provide flexible best-suited services to the applications with different functional features and numerical QoS attributes. Our framework controls 2 the applications to adapt, rather than the communication subsystems. In <ref> [7] </ref>, the authors proposed adaptation at the configuration level, which carries out transparent transition from primary components to alternative components, as well as at the component level, which redistributes resources in different components so that a QoS tradeoff can be made. Similarly, our approach also models applications as different tasks.
Reference: [8] <author> G. Hager and K. Toyama. </author> <title> The XVision System: A General-Purpose Substrate for Portable Real-Time Vision Applications. </title> <booktitle> Computer Vision and Image Understanding, </booktitle> <year> 1997. </year>
Reference-contexts: Based on tracking algorithms implemented in the XVision <ref> [8] </ref> project, we have successfully implemented this application on the Windows NT 4.0 platform in Visual C++ 5.0, using Windows Sockets 2 API for the network transmission.
Reference: [9] <author> J. Huang, Y. Wang, and F. Cao. </author> <title> On developing distributed middleware services for QoS- and criticality-based resource negotiation and adaptation. </title> <journal> Journal of Real-Time Systems, </journal> <year> 1998. </year>
Reference-contexts: In our previous work [12], theoretical proofs are given for various properties applying control theory to model QoS adaptation. Our work is also closely related to and utilizes the knowledge of dynamic resource allocations. In <ref> [9] </ref>, the global resource management system that relies on middleware services as agents to assist resource management and negotiations. In [15], the work focuses on maximizing the utility functions, while keeping QoS received by each application within a feasible range.
Reference: [10] <author> D. Hull, A. Shankar, K. Nahrstedt, and J. Liu. </author> <title> An End-to-End QoS Model and Management Architecture. </title> <booktitle> Proceedings of IEEE Workshop on Middleware for Distributed Real-time Systems and Services, </booktitle> <month> December </month> <year> 1997. </year>
Reference-contexts: A directed edge from task T i to T j indicates that T j uses the output produced by T i . Each task can be uniquely characterized by its input quality, output quality and utilized resources <ref> [10] </ref>. The Task Control Model focuses on one task in the directed acyclic graph, the Target Task.
Reference: [11] <institution> Object Oriented Concepts Inc. ORBacus for C++ and Java. ftp://ftp.ooc.com/pub/OB/3.1/OB-3.1b1.pdf, </institution> <year> 1998. </year>
Reference-contexts: We adopted the C-FILE implementation [14] as our fuzzy inference engine. All middleware components interact among one another and with the application using service enabling platforms such as CORBA. We use ORBacus 2.0.4 <ref> [11] </ref> as our CORBA implementation.
Reference: [12] <author> B. Li and K. Nahrstedt. </author> <title> A Control Theoretical Model for Quality of Service Adaptations. </title> <booktitle> Proceedings of Sixth International Workshop on Quality of Service, </booktitle> <year> 1998. </year>
Reference-contexts: Note that this translation mechanism differs and supersedes the QoS translation between different categories of QoS parameters in the way that it translates the control actions, rather than parameter values. In our previous work <ref> [12] </ref>, we exploited the analogy between a control system and the adaptation behavior, and developed a Task Control Model that gives theoretical results to reason about and prove stability, fairness, and adaptation agility properties of the adaptation behavior. The Adaptor uses the Task Control Model and the results developed in [12] <p> <ref> [12] </ref>, we exploited the analogy between a control system and the adaptation behavior, and developed a Task Control Model that gives theoretical results to reason about and prove stability, fairness, and adaptation agility properties of the adaptation behavior. The Adaptor uses the Task Control Model and the results developed in [12] to make control decisions for individual target applications with a global awareness of resource availability. The complementary work, presented in this paper, focuses on the internal algorithms used in the Configurator, which allow for a single control policy to control applications via different application-specific mechanisms. <p> The rest of this paper is organized as follows. In Section 2, we discuss existing work related to our approach. In Section 3, we give an overview of the middleware control architecture. In Section 4, we review our Task Control Model proposed in our previous work <ref> [12] </ref>, designed for the Adaptor, in the context of a distributed visual tracking application. <p> In the third example [6], the time variations along the transmission path of a telerobotics system are modeled as disturbances in the proposed perturbed plant model, in which the mobile robot is the target to be controlled. In our previous work <ref> [12] </ref>, theoretical proofs are given for various properties applying control theory to model QoS adaptation. Our work is also closely related to and utilizes the knowledge of dynamic resource allocations. In [9], the global resource management system that relies on middleware services as agents to assist resource management and negotiations. <p> results in Section 6. 4 The Task Control Model for Designing Middleware Adaptors In order to control the adaptive behavior of distributed applications with a global awareness of resource availability, so that a fairness property can be achieved, we integrated a Task Control Model as proposed in our previous work <ref> [12] </ref> into the design of our middleware Adaptors. This is complementary to the design of Configurators, which is the focus of this paper. The Adaptors promote global awareness, while Configurators focus on application-specific nonlinear 3 adaptation possibilities. <p> In our scenario, with the presence of the Adaptation Task, the input resource request rate is the same as the number of throttled resource requests u i (k), which is the generated control values by the Adaptation Task. 4.3 Control Algorithms in Adaptation Tasks In <ref> [12] </ref> we developed a standard proportional-integral- derivative (PID) control [5] 1 as an example of the control algorithms embedded in the Adaptation Task.
Reference: [13] <author> C. Parris, G. Ventre, and H. Zhang. </author> <title> Dynamic Management of Guaranteed-Performance Multimedia Connections. </title> <journal> ACM Springer-Verlag Multimedia Systems Journal, </journal> <year> 1994. </year>
Reference-contexts: In Section 6 we present preliminary results with the visual tracking application. Section 7 concludes the paper and discusses future work. 2 Related Work The field of QoS Adaptation in distributed multimedia applications has been studied by various previous work. In <ref> [13] </ref>, a graceful adaptation service dynamically manages the QoS of real-time communications by changing the parameter configurations in the network with no or limited disruption. It is implemented using mechanisms such as dynamic re-routing and load balancing.
Reference: [14] <author> A. Pitsillides, Y. Sekercioglu, and G. Ramamurthy. </author> <title> Effective Control of Traffic Flow in ATM Networks Using Fuzzy Explicit Rate Marking (FERM). </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <year> 1997. </year>
Reference-contexts: The actuators and sensors are functionally similar to the Adaptation Tasks and Observation Tasks in our Adaptors. However, the objectives and domain of operations are notably different. In <ref> [14] </ref>, a fuzzy control approach is used for the purpose of flow control in ATM networks, with linguistic variables being the queue length and the change rate of queue length in each ATM switch. <p> For mathematical completeness of the paper, the internal mechanisms of the inference engine are covered in Appendix A. In our preliminary implementation of the fuzzy inference engine, we adopt the C-FLIE inference engine implementation <ref> [14] </ref> as well as its input format for specifying the rule base and membership functions. We consider the visual tracking application as an example for designing the rule base and membership functions used in the middleware Configurator. <p> Programmed in C++ and Java as middleware components, we implemented the Adaptor, including the Adaptation Task and Observation Task, as well as the internal mechanisms of the Configurator using the Fuzzy Control Model. We adopted the C-FILE implementation <ref> [14] </ref> as our fuzzy inference engine. All middleware components interact among one another and with the application using service enabling platforms such as CORBA. We use ORBacus 2.0.4 [11] as our CORBA implementation.
Reference: [15] <author> R. Rajkumar, C. Lee, J. Lehoczky, and D. Siewiorek. </author> <title> A Resource Allocation Model for QoS Management. </title> <booktitle> 18th IEEE Real-Time System Symposium, </booktitle> <year> 1997. </year> <month> 14 </month>
Reference-contexts: Our work is also closely related to and utilizes the knowledge of dynamic resource allocations. In [9], the global resource management system that relies on middleware services as agents to assist resource management and negotiations. In <ref> [15] </ref>, the work focuses on maximizing the utility functions, while keeping QoS received by each application within a feasible range.
Reference: [16] <author> R. Ribler, H. Simitci, and D. Reed. </author> <title> The AutoPilot Performance-Directed Adaptive Control System. </title> <note> http://www--pablo.cs.uiuc.edu/Publications/publications.htm, 1997. </note>
Reference-contexts: Rich features in the field of fuzzy control systems are also utilized in previous research related to adaptive systems and flow control. In the AutoPilot <ref> [16] </ref> project, a fuzzy logic approach is adopted to design actuators that process sensory data observed from high-performance parallel programs, so that optimal performance can be achieved by adjusting system parameters, such as those in a parallel I/O file system.
Reference: [17] <author> D. Rosu, K. Schwan, S. Yalamanchili, and R. Jha. </author> <title> On Adaptive Resource Allocation for Complex Real-Time Applications. </title> <booktitle> 18th IEEE Real-Time System Symposium, </booktitle> <year> 1997. </year>
Reference-contexts: In [9], the global resource management system that relies on middleware services as agents to assist resource management and negotiations. In [15], the work focuses on maximizing the utility functions, while keeping QoS received by each application within a feasible range. In <ref> [17] </ref>, the authors focus on a multi-machine environment running a single complex application, and the objective is to dynamically change the configuration of the application to adapt to the environment. In comparison, our work focuses on the analysis of the actual adaptation choices, rather than individual or overall utility factors.
Reference: [18] <author> M. Satyanarayanan. </author> <title> Fundamental Challenges in Mobile Computing. </title> <booktitle> Proceedings of the ACM Symposium on Principles of Distributed Computing, </booktitle> <year> 1996. </year>
Reference-contexts: The application of control theories has been explored in recent work in the area of QoS adaptation. In one paper <ref> [18] </ref>, the application of control theory is suggested as a future research direction to analyze adaptation behavior in wireless environments. In another [3], a control model is proposed for adaptive QoS specification in an end-to-end scenario.
Reference: [19] <author> B. Stiller, D. Bauer, G. Caronni, C. Class, C. Conrad, B. Plattner, M. Vogt, and M. Waldvo-gel. </author> <title> Da CaPo++ Communication Support for Distributed Applications. </title> <type> TIK Report No. 25, </type> <institution> ftp://ftp.tik.ee.ethz.ch/pub/publications/TIK-Report25.ps, </institution> <year> 1997. </year>
Reference-contexts: These schemes propose mechanisms for graceful degradation with multimedia data flows, and they do not address the problem of deciding the timing, scale and choices of adaptation actions. In <ref> [19] </ref>, the authors proposed a framework for the communication subsystem to provide flexible best-suited services to the applications with different functional features and numerical QoS attributes. Our framework controls 2 the applications to adapt, rather than the communication subsystems.
Reference: [20] <author> N. Yeadon, F. Garcia, A. Campbell, and D. Hutchison. </author> <title> QoS Adaptation and Flow Filtering in ATM Networks. </title> <booktitle> Proceedings of the Second International Workshop on Multimedia: Advanced Teleservices and High Speed Communication Architectures, </booktitle> <year> 1994. </year> <month> 15 </month>
Reference-contexts: It is implemented using mechanisms such as dynamic re-routing and load balancing. In contrast to our work, it focuses primarily on communication subsystems, while our approach focus on adaptation within user-level applications. Other work [1] [2] <ref> [20] </ref> tries to adapt frame, layering or coding parameters in multimedia flows so that output rate can be varied according to feedback from the network.
References-found: 20

