URL: http://bugle.cs.uiuc.edu/Papers/IEEE_VR.ps.Z
Refering-URL: http://bugle.cs.uiuc.edu/Projects/VR/vr.html
Root-URL: http://www.cs.uiuc.edu
Email: elfordg@cs.uiuc.edu  
Phone: Telephone: (217) 333-3328 FAX: (217) 333-3501  
Title: Virtual Reality and Parallel Systems Performance Analysis  
Author: Daniel A. Reed Keith A. Shields Will H. Scullin Luis F. Tavera Christopher L. Elford freed, shields, scullin, tavera, 
Keyword: parallel computing, performance analysis, adaptive control, virtual reality  
Address: Urbana, Illinois 61801  
Affiliation: Department of Computer Science University of Illinois  
Abstract: Recording and analyzing the dynamics of application program, system software, and hardware interactions are the keys to understanding and tuning the performance of massively parallel fl Supported in part by the Advanced Research Projects Agency under ARPA contracts DAVT63-91-C-0029 and DABT63-93-C-0040, by the National Science Foundation under grants NSF IRI 92-12976, NSF CDA94-01124, and NSF CDA87-22836, by the National Aeronautics and Space Administration under NASA Contract Number NAG-1 613, and by a collaborative research agreement with the Intel Supercomputer Systems Division. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Beshers, C., and Feiner, S. AutoVisual: </author> <title> Rule-Based Design of Interactive Multivariate Visualizations. </title> <journal> IEEE Computer Graphics and Applications 13, </journal> <month> 4 (July </month> <year> 1993), </year> <pages> 41-49. </pages>
Reference-contexts: Our work differs in its generalization of scatterplot matrices to encompass three-dimensional scatterplots and the integration of history lines to show phase behavior. The closest analog to our work within the virtual reality community is Feiner and Besher's work on multi-dimensional data spaces for visualization of financial data. AutoVision <ref> [1] </ref> and it's predecessor, n-Vision [4], use "worlds within worlds" to display N -dimensional data. Both create a hierarchy of three-dimensional displays, where within a display one can recursively nest other displays by selecting a point.
Reference: [2] <author> Cleveland, W. S., and MiGill, M. E., Eds. </author> <title> Dynamic Graphics for Statistics. </title> <publisher> Wadsworth & Brooks/Cole, </publisher> <year> 1988. </year>
Reference-contexts: In consequence, the complementary scientific visualization techniques focus on intuitive renderings of regularly spaced, n-dimensional data sets. In contrast, performance data is irregular in both space and time, and other performance presentation techniques (e.g., those from statistical graphics <ref> [2] </ref>) are more appropriate. Performance measurement generates n metrics for each of the p processors in a parallel system, but the measurement times often depend on loosely correlated event transitions on each processor. <p> As an example, Figure 2 shows an 8-dimensional scatterplot matrix, where the performance data are from a parallel genome sequencing code that involves large amounts of input/output and interprocessor communication. 2 The diagonal of this scatterplot matrix contains box and whisker plots <ref> [2] </ref> of the minimum, mean and quartiles of each metric. read durations) are highly correlated, but others are not (e.g., blocking (synchronous) message send delays and procedure invocation lifetimes). <p> In 6 Recall that this is extension of phase behavior portraits (e.g., as shown in Figure 1) to three dimensions. 27 this case, history lines play the role of brushing <ref> [2] </ref> in statistical graphics | if representatives are clustered in all scattercubes, then the data is clustered in all dimensions. We have found the redundant rotations of non-degenerate cubes to be especially useful. <p> Heath [5] describes an suite of two-dimensional graphics displays for representing dynamic performance data. Cleveland <ref> [2] </ref> is a cogent summary of the statistics community's techniques for visualizing irregular data, Huber [7] describes early experiences with three-dimensional scatter-plots. Our work differs in its generalization of scatterplot matrices to encompass three-dimensional scatterplots and the integration of history lines to show phase behavior.
Reference: [3] <author> Cruz-Neira, C., D.J.Sandin, and DeFanti, T. </author> <title> Surround-Screen Projection-Based Virtual Reality: </title> <booktitle> The Design and Implementation of the CAVE. In SIGGRAPH '93 Proceedings (Aug. </booktitle> <year> 1993), </year> <institution> Association for Computing Machinery. </institution>
Reference-contexts: Currently supported configurations include a simple workstation monitor display, a six degree of freedom tracker and head-mounted display, and the CAVE virtual reality theater <ref> [3] </ref>, whose primary display is a room-sized cube with walls illuminated by high-resolution, rear projection video displays. The workstation environment provides an inexpensive, non-immersive virtual reality. This is adequate for development and testing, but it also effective for simple demonstrations as well.
Reference: [4] <author> Feiner, S., and Beshers, C. </author> <title> Visualizing n-Dimensional Virtual Worlds with n-Vision. </title> <booktitle> In ACM SIGGRAPH Computer Graphics (Mar. 1990), </booktitle> <volume> vol. 24, </volume> <pages> pp. 37-39. </pages>
Reference-contexts: The closest analog to our work within the virtual reality community is Feiner and Besher's work on multi-dimensional data spaces for visualization of financial data. AutoVision [1] and it's predecessor, n-Vision <ref> [4] </ref>, use "worlds within worlds" to display N -dimensional data. Both create a hierarchy of three-dimensional displays, where within a display one can recursively nest other displays by selecting a point.
Reference: [5] <author> Heath, M. T., and Etheridge, J. A. </author> <title> Visualizing the Performance of Parallel Programs. </title> <booktitle> IEEE Software (Sept. </booktitle> <year> 1991), </year> <pages> 29-39. 32 </pages>
Reference-contexts: Heath <ref> [5] </ref> describes an suite of two-dimensional graphics displays for representing dynamic performance data. Cleveland [2] is a cogent summary of the statistics community's techniques for visualizing irregular data, Huber [7] describes early experiences with three-dimensional scatter-plots.
Reference: [6] <author> Huber, J. V., Elford, C. L., Reed, D. A., Chien, A. A., and Blumenthal, D. S. </author> <title> PPFS: A High-Performance Portable Parallel File System. </title> <booktitle> In Proceedings of the 9th ACM International Conference on Supercomputing (to appear 1995). </booktitle>
Reference-contexts: Figure 5 shows the interior of a single scattercube, with the current value of each processor's performance 10 metrics denoted by the location of the octahedra in the three-dimensional metric space. In the figure, the axes represent performance metrics from a parallel input/output library called PPFS <ref> [6] </ref> that supports a client/server model; see PPFS sidebar. <p> These history ribbons are also visible in Figure 4. Begin Sidebar (Portable Parallel File System (PPFS)) The Portable Parallel File System (PPFS) <ref> [6] </ref> is a user-level parallel input/output library that allows applications to control the placement of file data across multiple storage devices, choose caching and prefetch policies, and specify data consistency protocols.
Reference: [7] <author> Huber, P. J. </author> <title> Experiences with Three-Dimensional Scatterplots. In Dynamic Graphics for Statistics, </title> <editor> W. S. Cleveland and M. E. MiGill, Eds. </editor> <publisher> Wadsworth & Brooks/Cole, </publisher> <year> 1988, </year> <pages> pp. 448-453. </pages>
Reference-contexts: Heath [5] describes an suite of two-dimensional graphics displays for representing dynamic performance data. Cleveland [2] is a cogent summary of the statistics community's techniques for visualizing irregular data, Huber <ref> [7] </ref> describes early experiences with three-dimensional scatter-plots. Our work differs in its generalization of scatterplot matrices to encompass three-dimensional scatterplots and the integration of history lines to show phase behavior.
Reference: [8] <author> Needleman, S. B., and Wunsch, C. D. </author> <title> An Efficient Method Applicable to the Search for Similarities in the Amino Acid Sequences of Two Proteins. </title> <journal> Journal of Molecular Biology 48 (1970), </journal> <pages> 444-453. </pages>
Reference-contexts: Because the synthesis methods currently used to determine genetic sequences produce nontrivial numbers of errors, exact string matching algorithms are inappropriate for biological sequences. One approximate sequence matching approach is based on a generalization of the Needle-man, Wunsch, and Sellers (NWS) <ref> [8] </ref> dynamic programming algorithm, with a K-tuple heuristic which prunes the search space to improve performance. 5 With this algorithm, the input sequence is processed against all entries in the genome data base, and the data base entry that results in the highest score is declared the best match to the
Reference: [9] <author> Reed, D. A. </author> <title> Experimental Performance Analysis of Parallel Systems: Techniques and Open Problems. </title> <booktitle> In Proceedings of the 7th International Conference on Modelling Techniques and Tools for Computer Performance Evaluation (May 1994), </booktitle> <pages> pp. 25-51. </pages>
Reference-contexts: Begin Sidebar (Performance Instrumentation) Although a plethora of instrumentation techniques have been both proposed and implemented, all rely on one of four basic instrumentation techniques: profiling, counting, interval timing, or 3 event tracing <ref> [9] </ref>. All strike a different balance between performance data volume, instrumentation overhead, and behavioral detail, and an appropriate choice depends on one's goals and measurement infrastructure. Profiling is the most commonly used instrumentation technique. <p> And, with dynamic file system reconfiguration, the user can interactively explore a large space of possible input/output optimizations during a single application execution. Augmenting PPFS with the Pablo instrumentation library <ref> [9] </ref> has allowed us to capture event traces of internal PPFS state transitions, procedure calls, and input/output output events. <p> Below, we describe the software and hardware infrastructure needed to satisfy these constraints, together with the most salient aspects of their interaction. 3.1 Software Design instrumented using the Pablo 3 performance instrumentation software <ref> [10, 9] </ref>, generates timestamped performance data in the Pablo Self-Describing Data Format (SDDF). A data interface accepts performance data from the parallel system and buffers it for subsequent rendering by the presentation metaphor software. <p> The resulting performance data can be output to either a file for post-mortem analysis or sent directly to Avatar via a Unix socket for real-time analysis. All performance data is described by the Pablo Self-Describing Data Format (SDDF) <ref> [9] </ref>. SDDF shares features of other data meta-formats but has been designed specifically for describing performance data. Because SDDF records are self-describing, the SDDF library can extract records and record fields based on previously parsed record definitions.
Reference: [10] <author> Reed, D. A., Aydt, R. A., Noe, R. J., Roth, P. C., Shields, K. A., Schwartz, B. W., and Tavera, L. F. </author> <title> Scalable Performance Analysis: The Pablo Performance Analysis Environment. </title> <booktitle> In Proceedings of the Scalable Parallel Libraries Conference (1993), </booktitle> <editor> A. Skjellum, Ed., </editor> <publisher> IEEE Computer Society, </publisher> <pages> pp. 104-113. </pages>
Reference-contexts: Below, we describe the software and hardware infrastructure needed to satisfy these constraints, together with the most salient aspects of their interaction. 3.1 Software Design instrumented using the Pablo 3 performance instrumentation software <ref> [10, 9] </ref>, generates timestamped performance data in the Pablo Self-Describing Data Format (SDDF). A data interface accepts performance data from the parallel system and buffers it for subsequent rendering by the presentation metaphor software.
Reference: [11] <author> Robinson, B. H. </author> <title> Midwater Reaseach Methods with MBARI's ROV. </title> <journal> Marine Technology Society Journal 26, </journal> <volume> 4 (1992), </volume> <pages> 32-39. </pages>
Reference-contexts: Finally, because Avatar supports real-time adaptive control, it bears some relation to other telepresence projects (e.g., the MBARI remotely operated vehicle (ROV) <ref> [11] </ref> and the UNC/UCLA nanomanipulator [12]). Avatar differs from both ROV and the nanomanipulator in its focus on abstract, multivariate data rather than a physical system.
Reference: [12] <author> Taylor, R. M., Robinett, W., Chi, V. L., Jr., F. P. B., Wright, W. V., Williams, R. S., and Snyder, E. J. </author> <title> The Nanomanipulator: A Virtual Reality Interface for a Scanning 33 Tunneling Microscope. </title> <booktitle> In Computer Graphics Proceedings, Annual Conference Series (1993), </booktitle> <pages> pp. 127-134. </pages>
Reference-contexts: Finally, because Avatar supports real-time adaptive control, it bears some relation to other telepresence projects (e.g., the MBARI remotely operated vehicle (ROV) [11] and the UNC/UCLA nanomanipulator <ref> [12] </ref>). Avatar differs from both ROV and the nanomanipulator in its focus on abstract, multivariate data rather than a physical system.
Reference: [13] <author> Wenzel, E. M., Wightman, F. L., and Foster, S. H. </author> <title> A Virtual Display System for Conveying Three-dimensional Acoustic Information. </title> <booktitle> In Proceedings of the Human Factors Society (1988), </booktitle> <pages> pp. </pages> <month> 86 - 90. </month> <title> 34 (a) Suboptimal Cache Configuration (b) Optimal Cache Configuration 35 </title>
Reference-contexts: The analog in virtual reality systems is three-dimensional audio <ref> [13] </ref>, which provides the illusion in stereo headphones that a sound emanates from a particular location in space. Spatialized sound can add realism by mimicking the physical world, and in a virtual environment it heightens awareness and increases the number of data presentation options.
References-found: 13

