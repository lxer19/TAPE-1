URL: http://www.it.kth.se/docs/Reports/se/kbse96.ps.Z
Refering-URL: http://www.it.kth.se/docs/Reports/se/
Root-URL: http://www.it.kth.se
Note: 5. Conclusions Acknowledgments The work presented was funded by the Swedish Institute and the Swedish National Board for Technical and Industrial Development (NUTEK) under grant number 93030405-2. Sincere thanks to the anonymous reviewers for their helpful comments. References  
Abstract: We have suggested a general scheme of software visu-alisation based on the usage of three knowledge bases. In this way we obtain a flexibility in changing software models and the representation of software views. We have experimented with the visualisation of software written in the NUT language. This has given us an insight into object-oriented as well as knowledge-based software visual-isation, because the NUT language possesses both properties. If we decide to draw the same OMT-based views for software written in some other object-oriented language, then we only have to change the knowledge about programs. On the other hand, changing a visual view will require modifications both in the knowledge base of drawings and in the knowledge base of mapping. These knowledge bases are quite simple in nature, and the required changes are not difficult to introduce as we have shown in the paper. We advocate that a knowledge-based approach in software visualisation provides better support for modifications and extensions of visualisers. This is achieved by the explicit representation of the knowledge used in the visu-alisation process as well as by the usage of inference instead of method invocation. 1. M. Burnett, A. Goldberg and T. Lewis, editors. Visual Object-Oriented Programming: Concepts and Environments. Manning Publications Co., Greenwich,CT, 1995. 2. T.J. Biggerstaff, B.G. Mitbander and D. E. Webster. Program Understanding And The Concept Assignment Problem. Communications of the ACM, 37(5):72--82, May 1994. 3. P. T. Devanbu. GENOA -- a Customizable, Language and Front-End Independent Code Analyzer. In Proceedings of the Fourteenth International Conference of Software Engineering (ICSE92), pp. 307-319, 1992. 4. G. Di Battista, P. Eades, R. Tamassia, I.G. Tollis. Algorithms for Drawing Graphs: an Annotated Bibliography. Dept. Comput. Sci. Brown Univ., June 1994. 5. J. Grundy, J. Hosking, S. Fenwick and W. Mugridge. Connecting The Pieces. In [1], pages 229--252. 6. M. Himsolt. Comparing and Evaluating Layout Algorithms within GraphEd. Journal of Visual Languages and Computing, vol. 6, no. 3, pp. 255-273, 1995. 7. P.K.Linos and V. Courtois. A Tool For Understanding Object-Oriented Program Dependencies. In Proc. of the 3rd IEEE Workshop on Program Comprehension, 1994. 8. W. Kozaczynski, J. Ning and T. Sarver. Program Concept Recognition. In Proceedings of the Seventh Knowledge-based Software Engineering Conference, pages 216--225, Los Alamitos, CA, 1992. IEEE Computer Society Presss. 9. J. Koskinen, J. Paakki, and A. Salminen. Program Text As Hypertext: Using Program Dependencies For Transient Linking. In Proc. of the 6th Int. Conference on Software Engineering and Knowledge Engineering, SEKE'94-, 1994. 10. M. Lejter, S. Meyers, and S.P. Reiss. Support For Maintaining Object-Oriented Programs. In IEEE Transactions on Software Engineering, 18(12):1045--1052, December 1992. 11. G. C. Murphy, D. Notkin and K. Sullivan. Software Reexion Models: Bridging the Gap Between Source and High-Level Models. In Proceedings of the Third ACM Symposium on the Foundations of Software Engineering (FSE 95). 12. G. Mints, E. Tyugu. Justification of the Structural Synthesis of Programs. In Science of Computer Programming, vol. 2, No.3, pp. 215 - 240, 1982. 13. J. Rumbaugh, M. Blaha, W. Premerlani, F. Eddy, and W. Lorensen. Object-Oriented Modeling and Design. Prentice Hall International, Inc., 1991. 14. P.G. Selfridge and G.T. Heinemean. Graphical Support For Code-Level Software Understanding. In The Ninth Knowledge-based Software Engineering Conference, pages 117-124. IEEE Computer Society Press, 1994. 15. N.C. Shu. Visual Programming. Van Nostrand Reinhold Company, New York, 1988. 16. E.Tyugu. Using Classes as Specifications for Automatic Construction of Programs in the NUT system. In Automated Software Engineering , 1, 315--334, 1994. 17. E. Tyugu. From Object-Oriented to Knowledge-Based Programming (NUT system development experience). In The Tenth Knowledge-based Software Engineering Conference, pages 88--96. IEEE Computer Society Press, 1995. 18. E. Tyugu. Declarative Reection Tools for Agent Shells in NUT. In Proc. of Int. Workshop on Reection. Montreal, August 1995. 19. T. Uustalu. A Modal Justification for Structural Synthesis of Programs in NUT. Technical Report TRITA-IT 96:06, Dept. of Teleinformatics, KTH, Sweden, 1996. 20. N. Wilde and R. Huitt. Maintenance Support for Object-oriented Programs. In IEEE Transactions on Software Engineering, 18(12), December 1992. 21. S. Woods and Q. Yang. Program Understanding as Constraint Satisfaction. In The Tenth Knowledge-based Software Engineering Conference, pages 314--323. IEEE Computer Society Press, 1995. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> M. Burnett, A. Goldberg and T. Lewis, </author> <title> editors. Visual Object-Oriented Programming: Concepts and Environments. </title> <publisher> Manning Publications Co., </publisher> <address> Greenwich,CT, </address> <year> 1995. </year>
Reference: 2. <author> T.J. Biggerstaff, B.G. Mitbander and D. E. Webster. </author> <title> Program Understanding And The Concept Assignment Problem. </title> <journal> Communications of the ACM, </journal> <volume> 37(5):72--82, </volume> <month> May </month> <year> 1994. </year>
Reference: 3. <author> P. T. Devanbu. </author> <title> GENOA -- a Customizable, Language and Front-End Independent Code Analyzer. </title> <booktitle> In Proceedings of the Fourteenth International Conference of Software Engineering (ICSE92), </booktitle> <pages> pp. 307-319, </pages> <year> 1992. </year>
Reference: 4. <author> G. Di Battista, P. Eades, R. Tamassia, I.G. Tollis. </author> <title> Algorithms for Drawing Graphs: an Annotated Bibliography. </title> <institution> Dept. Comput. Sci. Brown Univ., </institution> <month> June </month> <year> 1994. </year>
Reference: 5. <author> J. Grundy, J. Hosking, S. Fenwick and W. Mugridge. </author> <title> Connecting The Pieces. </title> <booktitle> In [1], </booktitle> <pages> pages 229--252. </pages>
Reference: 6. <author> M. Himsolt. </author> <title> Comparing and Evaluating Layout Algorithms within GraphEd. </title> <journal> Journal of Visual Languages and Computing, </journal> <volume> vol. 6, no. 3, </volume> <pages> pp. 255-273, </pages> <year> 1995. </year>
Reference: 7. <author> P.K.Linos and V. Courtois. </author> <title> A Tool For Understanding Object-Oriented Program Dependencies. </title> <booktitle> In Proc. of the 3rd IEEE Workshop on Program Comprehension, </booktitle> <year> 1994. </year>
Reference: 8. <author> W. Kozaczynski, J. Ning and T. Sarver. </author> <title> Program Concept Recognition. </title> <booktitle> In Proceedings of the Seventh Knowledge-based Software Engineering Conference, pages 216--225, </booktitle> <address> Los Alamitos, CA, 1992. </address> <publisher> IEEE Computer Society Presss. </publisher>
Reference: 9. <author> J. Koskinen, J. Paakki, and A. Salminen. </author> <title> Program Text As Hypertext: Using Program Dependencies For Transient Linking. </title> <booktitle> In Proc. of the 6th Int. Conference on Software Engineering and Knowledge Engineering, </booktitle> <address> SEKE'94-, </address> <year> 1994. </year>
Reference: 10. <author> M. Lejter, S. Meyers, and S.P. Reiss. </author> <title> Support For Maintaining Object-Oriented Programs. </title> <journal> In IEEE Transactions on Software Engineering, </journal> <volume> 18(12):1045--1052, </volume> <month> December </month> <year> 1992. </year>
Reference: 11. <author> G. C. Murphy, D. Notkin and K. Sullivan. </author> <title> Software Reexion Models: Bridging the Gap Between Source and High-Level Models. </title> <booktitle> In Proceedings of the Third ACM Symposium on the Foundations of Software Engineering (FSE 95). </booktitle>
Reference: 12. <author> G. Mints, E. Tyugu. </author> <title> Justification of the Structural Synthesis of Programs. </title> <booktitle> In Science of Computer Programming, </booktitle> <volume> vol. 2, No.3, </volume> <pages> pp. 215 - 240, </pages> <year> 1982. </year>
Reference: 13. <author> J. Rumbaugh, M. Blaha, W. Premerlani, F. Eddy, and W. Lorensen. </author> <title> Object-Oriented Modeling and Design. </title> <publisher> Prentice Hall International, Inc., </publisher> <year> 1991. </year>
Reference: 14. <author> P.G. Selfridge and G.T. Heinemean. </author> <title> Graphical Support For Code-Level Software Understanding. </title> <booktitle> In The Ninth Knowledge-based Software Engineering Conference, </booktitle> <pages> pages 117-124. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1994. </year>
Reference: 15. <author> N.C. Shu. </author> <title> Visual Programming. </title> <publisher> Van Nostrand Reinhold Company, </publisher> <address> New York, </address> <year> 1988. </year>
Reference: 16. <author> E.Tyugu. </author> <title> Using Classes as Specifications for Automatic Construction of Programs in the NUT system. </title> <booktitle> In Automated Software Engineering , 1, </booktitle> <address> 315--334, </address> <year> 1994. </year>
Reference: 17. <author> E. Tyugu. </author> <title> From Object-Oriented to Knowledge-Based Programming (NUT system development experience). </title> <booktitle> In The Tenth Knowledge-based Software Engineering Conference, pages 88--96. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1995. </year>
Reference: 18. <author> E. Tyugu. </author> <title> Declarative Reection Tools for Agent Shells in NUT. </title> <booktitle> In Proc. of Int. Workshop on Reection. </booktitle> <address> Montreal, </address> <month> August </month> <year> 1995. </year>
Reference: 19. <author> T. Uustalu. </author> <title> A Modal Justification for Structural Synthesis of Programs in NUT. </title> <type> Technical Report TRITA-IT 96:06, </type> <institution> Dept. of Teleinformatics, KTH, Sweden, </institution> <year> 1996. </year>
Reference: 20. <author> N. Wilde and R. Huitt. </author> <title> Maintenance Support for Object-oriented Programs. </title> <journal> In IEEE Transactions on Software Engineering, </journal> <volume> 18(12), </volume> <month> December </month> <year> 1992. </year>





References-found: 20

