URL: http://www.cs.rice.edu:80/~ychu/ps/adap-8ppsc.ps.gz
Refering-URL: http://www.cs.rice.edu:80/~ychu/papers.html
Root-URL: 
Title: A Data-Parallel Adaptive N -body Method  
Author: Yu Charlie Hu S. Lennart Johnsson Shang-Hua Teng 
Date: March 1997.  
Address: Minneapolis, MN,  
Affiliation: Computing,  
Note: 8th SIAM Conference on Parallel Processing for Scientific  
Abstract: We present a data-parallel formulation of an adaptive version of Anderson's method for N -body particle interactions. Our formulation consists of a storage and computationally efficient array-based representation for the nonuniform hierarchy that models arbitrary particle distributions for the computational procedure. We also present data-parallel implementations (in HPF) of several well known partitioning methods. These partitioning methods balance nodal weights (for computation). We present preliminary experimental results for these partitioning schemes and discuss the complete code for adaptive particle simulations.
Abstract-found: 1
Intro-found: 1
Reference: [2] <author> J. Barnes and P. Hut. </author> <title> A hierarchical O(N log N ) force calculation algorithm. </title> <journal> Nature, </journal> <volume> 324 </volume> <pages> 446-449, </pages> <year> 1986. </year>
Reference-contexts: Hierarchical O (N ) N-body methods have been proposed by Greengard and Rokhlin [7], Zhao [24], Anderson [1], Appel (proven to be of O (N ) in [6]), and Warren and Salmon [23], and O (N log N ) methods have been presented by Barnes and Hut <ref> [2] </ref> and Callahan and Kosaraju [4]. The methods of Appel, and Barnes and Hut, and Callahan and Kosaraju are readily extended to nonuniformly distributed particles. Carrier, Greengard, and Rokhlin [5] presented an adaptive version of the Greengard-Rokhlin method.
Reference: [3] <author> J. A. Board Jr., Z. S. Hakura, W. D. Elliott, D. C. Gray, W. J. Blanke, and J. Leathrum Jr. </author> <title> Scalable implementations of multipole-accelerated algorithms for molecular dynamics. In SHPCC94. </title> <publisher> IEEE CSP, </publisher> <month> May </month> <year> 1994. </year>
Reference-contexts: Nonadaptive versions of the O (N ) methods have also been implemented on parallel machines in both the message-passing and the shared-memory programming models <ref> [3] </ref>. In contrast, due to the more complicated computational structure, little progress has been made on data-parallel implementations of adaptive versions of the O (N ) methods.
Reference: [4] <author> P. B. Callahan and S. R. Kosaraju. </author> <title> A decomposition of multidimensional point sets with applications to k-nearest-neighbors and n-body potential fields. </title> <journal> JACM, </journal> <volume> 42 </volume> <pages> 67-90, </pages> <year> 1995. </year>
Reference-contexts: (N ) N-body methods have been proposed by Greengard and Rokhlin [7], Zhao [24], Anderson [1], Appel (proven to be of O (N ) in [6]), and Warren and Salmon [23], and O (N log N ) methods have been presented by Barnes and Hut [2] and Callahan and Kosaraju <ref> [4] </ref>. The methods of Appel, and Barnes and Hut, and Callahan and Kosaraju are readily extended to nonuniformly distributed particles. Carrier, Greengard, and Rokhlin [5] presented an adaptive version of the Greengard-Rokhlin method. Similar extensions can be made to Anderson's (see Section 2) and Zhao's methods.
Reference: [5] <author> J. Carrier, L. Greengard, and V. Rokhlin. </author> <title> A fast adaptive multipole algorithm for particle simulations. </title> <note> SIAM J. </note> <institution> of Sci. and Stat. Comput., </institution> <month> July </month> <year> 1988. </year>
Reference-contexts: The methods of Appel, and Barnes and Hut, and Callahan and Kosaraju are readily extended to nonuniformly distributed particles. Carrier, Greengard, and Rokhlin <ref> [5] </ref> presented an adaptive version of the Greengard-Rokhlin method. Similar extensions can be made to Anderson's (see Section 2) and Zhao's methods. As particles move close to each other nonuniformly, the arithmetic complexity of these adaptive methods can become superlinear even exceed O (N log N ) for some distributions. <p> In practice, the depth of the hierarchy used in these N -body methods is limited by the machine precision as pointed out in <ref> [5] </ref>, and the above adaptive method retains O (N ) arithmetic complexity, i.e. with a large constant log 2 * in the big-O. Callahan and Kosaraju's formulation requires O (N log N ) operations independent of the particle distribution. Hierarchical N -body methods pose great challenges to parallel implementations.
Reference: [6] <author> K. Esselink. </author> <title> The order of Appel's algorithm. </title> <journal> Information Processing Letter, </journal> <volume> 41 </volume> <pages> 141-147, </pages> <year> 1992. </year>
Reference-contexts: Large-scale N-body simulations have applications in areas such as celestial mechanics, plasma physics, materials science and molecular design. Hierarchical O (N ) N-body methods have been proposed by Greengard and Rokhlin [7], Zhao [24], Anderson [1], Appel (proven to be of O (N ) in <ref> [6] </ref>), and Warren and Salmon [23], and O (N log N ) methods have been presented by Barnes and Hut [2] and Callahan and Kosaraju [4]. The methods of Appel, and Barnes and Hut, and Callahan and Kosaraju are readily extended to nonuniformly distributed particles.
Reference: [7] <author> L. F. Greengard. </author> <title> The rapid evaluation of potential fields in particle systems. </title> <publisher> MIT Press, </publisher> <year> 1988. </year>
Reference-contexts: Large-scale N-body simulations have applications in areas such as celestial mechanics, plasma physics, materials science and molecular design. Hierarchical O (N ) N-body methods have been proposed by Greengard and Rokhlin <ref> [7] </ref>, Zhao [24], Anderson [1], Appel (proven to be of O (N ) in [6]), and Warren and Salmon [23], and O (N log N ) methods have been presented by Barnes and Hut [2] and Callahan and Kosaraju [4]. <p> All O (N ) methods <ref> [7, 1, 24] </ref> share the same computational structure and differ only in the approximate computational elements they use. There are two kinds of computational elements used in O (N ) methods: far-field potential representation and local-field potential representation.
Reference: [8] <author> HPF Forum. </author> <title> High Performance Fortran Language Specification, </title> <note> Version 2.0.ffi, </note> <month> October </month> <year> 1996. </year>
Reference-contexts: In this paper, we present a data-parallel formulation of the adaptive version of Anderson's method. We have developed an implementation in High Performance Fortran (HPF) <ref> [8] </ref>. <p> Using this sampling technique GEO is computationally less demanding than a straight-forward implementation of RSB. A fundamental issue with partitioning unbalanced hierarchies is that the uneven weights associated with the boxes renders partitions with an uneven number of array elements. Ragged arrays are supported in the recently announced HPF-II <ref> [8] </ref>, but no commercial compiler available today supports it.
Reference: [9] <author> Yu Hu and S. Lennart Johnsson. </author> <title> A data parallel implementation of hierarchical N -body methods. </title> <journal> Intl. J. of Supercomput. Appl. and High Perf. Comput., </journal> <volume> 10(1):3 - 40, </volume> <year> 1996. </year> <title> [10] ||-. Implementing O(N ) N-body algorithms efficiently in data-parallel languages. </title> <journal> Journal of Scientific Programming, </journal> <volume> 5(4):337 - 364, </volume> <year> 1996. </year> <title> [11] ||-, and S.-H. Teng. A data parallel implementation of adaptive O(N ) hierarchical N -body methods. </title> <institution> TR-13-96, Harvard University, Division of Applied Sciences, </institution> <month> September </month> <year> 1996. </year>
Reference-contexts: In contrast, due to the more complicated computational structure, little progress has been made on data-parallel implementations of adaptive versions of the O (N ) methods. In our previous work <ref> [9, 10] </ref>, we have shown that efficient scalable code can be produced in data-parallel languages for nonadaptive versions of Anderson's method. In this paper, we present a data-parallel formulation of the adaptive version of Anderson's method. We have developed an implementation in High Performance Fortran (HPF) [8].
Reference: [12] <author> Y. C. Hu, S.-H. Teng, and S. L. Johnsson. </author> <title> A data-parallel implementation of the geometric partitioning algorithm. </title> <booktitle> In Proc. of the 8th SIAM Conf. on Para. Proc. </booktitle> <institution> for Sci. Comput., </institution> <year> 1997. </year>
Reference-contexts: Geometric partitioning (GEO) [14] and a variant (given by Spielman and Teng [19]) of recursive spectral bisection (RSB) [16] both offer guarantees on the quality of the partitions. GEO lends itself to efficient data-parallel implementations, as shown in <ref> [12] </ref>. Extensive use of sampling can be used to reduce the computational complexity without a significant degradation in the quality of the partitions. Using this sampling technique GEO is computationally less demanding than a straight-forward implementation of RSB.
Reference: [13] <author> P. Liu. </author> <title> The parallel implementation of N-body algorithms. </title> <type> PhD thesis, </type> <institution> Yale University, </institution> <year> 1994. </year>
Reference-contexts: Supported by an NSF CAREER award (CCR-9502540), an Alfred P. Sloan Research Fellowship, and an Intel research grant. 1 2 Previous work by Salmon and Warren [17, 22], and Liu and Bhatt <ref> [13] </ref> have shown that the Barnes-Hut method can be implemented efficiently on parallel scalable architectures, using the message-passing programming model. Nonadaptive versions of the O (N ) methods have also been implemented on parallel machines in both the message-passing and the shared-memory programming models [3].
Reference: [14] <author> G. L. Miller, S.-H. Teng, W. Thurston, and S. A. Vavasis. </author> <title> Finite element meshes and geometric separators. </title> <note> SIAM J. Sci. Comput., to appear, </note> <year> 1997. </year>
Reference-contexts: Recent work of Cao, Gilbert, and Teng shows that RRB provides a slightly weaker guarantee on the quality of the partitions than that given by Theorem 4.1. Geometric partitioning (GEO) <ref> [14] </ref> and a variant (given by Spielman and Teng [19]) of recursive spectral bisection (RSB) [16] both offer guarantees on the quality of the partitions. GEO lends itself to efficient data-parallel implementations, as shown in [12].
Reference: [15] <institution> The Portland Group, Inc. </institution> <note> pghpf Reference Manual, Version 2.1, </note> <year> 1996. </year>
Reference-contexts: The communication currently accounts for 60% of the total running time for the 3-D Plummer distribution with one million particles, largely due to the poor performance of the unoptimized gather/scatter run-time system subroutines generated by the pghpf compiler version 2.1 <ref> [15] </ref>. It is expected that an order of magnitude improvement be achieved from highly optimized gather/scatter subroutines. This improvement will improve the overall performance by almost a factor of two.
Reference: [16] <author> A. Pothen, H. D. Simon, and K.-P. Liou. </author> <title> Partitioning sparse matrices with eigenvectors of graphs. </title> <journal> SIAM J. Matrix Anal. Appl., </journal> <volume> 11(3) </volume> <pages> 430-452, </pages> <year> 1990. </year>
Reference-contexts: Recent work of Cao, Gilbert, and Teng shows that RRB provides a slightly weaker guarantee on the quality of the partitions than that given by Theorem 4.1. Geometric partitioning (GEO) [14] and a variant (given by Spielman and Teng [19]) of recursive spectral bisection (RSB) <ref> [16] </ref> both offer guarantees on the quality of the partitions. GEO lends itself to efficient data-parallel implementations, as shown in [12]. Extensive use of sampling can be used to reduce the computational complexity without a significant degradation in the quality of the partitions.
Reference: [17] <author> J. K. Salmon. </author> <title> Parallel Hierarchical N -Body Methods. </title> <type> PhD thesis, </type> <institution> Caltech, </institution> <year> 1990. </year>
Reference-contexts: Supported by an NSF CAREER award (CCR-9502540), an Alfred P. Sloan Research Fellowship, and an Intel research grant. 1 2 Previous work by Salmon and Warren <ref> [17, 22] </ref>, and Liu and Bhatt [13] have shown that the Barnes-Hut method can be implemented efficiently on parallel scalable architectures, using the message-passing programming model. <p> is h, then G can be partitioned into two equal computational weighted subgraphs by removing at most O (h 1=d n 11=d ) boxes. 4.2 Load Balancing and Partitioning Heuristics Previously, orthogonal recursive bisection (ORB) and Morton and Peano-Hilbert ordering have been used to partition particles in the Barnes-Hut method <ref> [17, 22, 18] </ref> and to partition boxes in an adaptive fast multipole method [18]. We have developed an extensive library of partitioning schemes together with their data-parallel implementations in HPF, as summarized in Table 3. We also developed an extension of ORB called rotational recursive bisection (RRB).
Reference: [18] <author> J. Singh, C. Holt, J. Hennessey, and A. Gupta. </author> <title> A parallel adaptive fast multipole method. </title> <booktitle> In Supercomputing'93, </booktitle> <pages> pages 54 - 65, </pages> <year> 1993. </year>
Reference-contexts: is h, then G can be partitioned into two equal computational weighted subgraphs by removing at most O (h 1=d n 11=d ) boxes. 4.2 Load Balancing and Partitioning Heuristics Previously, orthogonal recursive bisection (ORB) and Morton and Peano-Hilbert ordering have been used to partition particles in the Barnes-Hut method <ref> [17, 22, 18] </ref> and to partition boxes in an adaptive fast multipole method [18]. We have developed an extensive library of partitioning schemes together with their data-parallel implementations in HPF, as summarized in Table 3. We also developed an extension of ORB called rotational recursive bisection (RRB). <p> by removing at most O (h 1=d n 11=d ) boxes. 4.2 Load Balancing and Partitioning Heuristics Previously, orthogonal recursive bisection (ORB) and Morton and Peano-Hilbert ordering have been used to partition particles in the Barnes-Hut method [17, 22, 18] and to partition boxes in an adaptive fast multipole method <ref> [18] </ref>. We have developed an extensive library of partitioning schemes together with their data-parallel implementations in HPF, as summarized in Table 3. We also developed an extension of ORB called rotational recursive bisection (RRB).
Reference: [19] <author> D. A. Spielman and S.-H. Teng. </author> <title> Spectral partitioning works: planar graphs and finite element meshes. </title> <booktitle> In 37th Annual Symposium on Foundation of Computer Science, </booktitle> <pages> pages 96-107, </pages> <year> 1996. </year>
Reference-contexts: Recent work of Cao, Gilbert, and Teng shows that RRB provides a slightly weaker guarantee on the quality of the partitions than that given by Theorem 4.1. Geometric partitioning (GEO) [14] and a variant (given by Spielman and Teng <ref> [19] </ref>) of recursive spectral bisection (RSB) [16] both offer guarantees on the quality of the partitions. GEO lends itself to efficient data-parallel implementations, as shown in [12]. Extensive use of sampling can be used to reduce the computational complexity without a significant degradation in the quality of the partitions.
Reference: [20] <author> S.-H. Teng. </author> <title> Provably good partitioning and load balancing algorithms for parallel adaptive n-body simulation. </title> <journal> SIAM J. Scientific Computing, </journal> <note> to appear, </note> <year> 1997. </year>
Reference-contexts: workload + coord. good unknown Morton workload + coord. good unknown Peano-Hilbert workload + coord. good unknown Level-by-level workload + coord. good unknown RRB workload + coord.+adj. good unknown GEO workload + coord.+adj. provably good provably good RSB workload + coord.+adj. provably good provably good The following result of Teng <ref> [20] </ref> gives an upper bound on the amount of interaction between partitions as a function of the height of the N -body graph. Theorem 4.1.
Reference: [21] <institution> Thinking Machines Corp. CMSSL for CM Fortran, </institution> <note> Version 3.1, </note> <year> 1993. </year>
Reference-contexts: Table 4 shows the above measurements for partitioning arrays representing active boxes in List-1 and List-2 interactions. The RSB result is derived from calling the RSB in CMSSL <ref> [21] </ref>, which does not perform weighted partitioning. Table 5 shows the preliminary performance results of our HPF implementation of our adaptive version of Anderson's method on a 16 wide-node IBM SP2.
Reference: [22] <author> M. Warren and J. Salmon. </author> <title> A parallel hashed oct-tree N-body algorithm. </title> <booktitle> In Supercomputing'93, </booktitle> <pages> pages 12 - 21, </pages> <year> 1993. </year>
Reference-contexts: Supported by an NSF CAREER award (CCR-9502540), an Alfred P. Sloan Research Fellowship, and an Intel research grant. 1 2 Previous work by Salmon and Warren <ref> [17, 22] </ref>, and Liu and Bhatt [13] have shown that the Barnes-Hut method can be implemented efficiently on parallel scalable architectures, using the message-passing programming model. <p> is h, then G can be partitioned into two equal computational weighted subgraphs by removing at most O (h 1=d n 11=d ) boxes. 4.2 Load Balancing and Partitioning Heuristics Previously, orthogonal recursive bisection (ORB) and Morton and Peano-Hilbert ordering have been used to partition particles in the Barnes-Hut method <ref> [17, 22, 18] </ref> and to partition boxes in an adaptive fast multipole method [18]. We have developed an extensive library of partitioning schemes together with their data-parallel implementations in HPF, as summarized in Table 3. We also developed an extension of ORB called rotational recursive bisection (RRB).
Reference: [23] <author> M. S. Warren and J. K. Salmon. </author> <title> A portable parallel particle program. </title> <journal> Computer Physics Communications, </journal> <volume> 87, </volume> <year> 1995. </year>
Reference-contexts: Hierarchical O (N ) N-body methods have been proposed by Greengard and Rokhlin [7], Zhao [24], Anderson [1], Appel (proven to be of O (N ) in [6]), and Warren and Salmon <ref> [23] </ref>, and O (N log N ) methods have been presented by Barnes and Hut [2] and Callahan and Kosaraju [4]. The methods of Appel, and Barnes and Hut, and Callahan and Kosaraju are readily extended to nonuniformly distributed particles.
Reference: [24] <author> F. Zhao. </author> <title> An O(N ) algorithm for 3-dimensional N-body simulations. </title> <type> Technical Report AI-TR-995, </type> <institution> AI Lab, MIT, </institution> <year> 1987. </year>
Reference-contexts: Large-scale N-body simulations have applications in areas such as celestial mechanics, plasma physics, materials science and molecular design. Hierarchical O (N ) N-body methods have been proposed by Greengard and Rokhlin [7], Zhao <ref> [24] </ref>, Anderson [1], Appel (proven to be of O (N ) in [6]), and Warren and Salmon [23], and O (N log N ) methods have been presented by Barnes and Hut [2] and Callahan and Kosaraju [4]. <p> All O (N ) methods <ref> [7, 1, 24] </ref> share the same computational structure and differ only in the approximate computational elements they use. There are two kinds of computational elements used in O (N ) methods: far-field potential representation and local-field potential representation.
References-found: 21

