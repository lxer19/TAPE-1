URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/eli/w3/home/papers/HMC-CS-95-01.ps.gz
Refering-URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/eli/w3/home/academic.html
Root-URL: 
Abstract: Origin-Based Fault-Tolerant Routing in the Mesh Ran Libeskind-Hadas Technical Report HMC-CS-95-01 A preliminary version of this paper appears in the Proceedings of the First IEEE Symposium on High Performance Architecture (HPCA '95). This manuscript has been accepted for publication in Future Generation Computer Systems. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Andrew Basile. </author> <title> Optimizing mesh network communication. </title> <note> Senior Honors Thesis in Mathematics, Harvey Mudd College, </note> <year> 1994. </year>
Reference-contexts: It is easily verified that this function achieves its maxima when the origin is placed at one of the four corners of the mesh (negative-first routing or its isomorphs) and is minimized when the origin is at the center of the mesh <ref> [1] </ref>. On the other hand, there is a hot-spot effect at the origin since a message sent between nodes in opposite quadrants must pass through the origin.
Reference: [2] <author> A. Chien and J. Kim. </author> <title> Planar-adaptive routing: Low-cost adaptive networks for multiprocessors. </title> <booktitle> In Proc. of the Int. Symp. on Computer Architecture, </booktitle> <year> 1992. </year> <note> 17 0 1 2 3 4 5 6 7 8 9 10 # of real faults 0 2 4 6 8 10 Average % increase in path length ? ? ? ? ? ? the number of real faults. 18 </note>
Reference-contexts: In this case all the messages along this cycle become permanently blocked. A number of adaptive routing algorithms for the mesh have been proposed <ref> [2, 4, 7, 12] </ref>. Although adaptive algorithms allow some flexibility in routing, the routing restrictions still necessarily limit the number of paths that may be used. Consequently, certain patterns of faulty nodes will cause some messages to become undeliverable. <p> The algorithm proposed by Linder and Harden for n-dimensional meshes requires a number of virtual channels that grows exponentially with n, resulting in a substantial penalty in cost and performance. Moreover, this algorithm is not always able to tolerate multiple faults. Chien and Kim <ref> [2] </ref> proposed an algorithm for fault-tolerant routing in meshes that uses at most 3 virtual channels per physical channel at the expense of being somewhat less adaptive than the algorithm of Linder and Harden. <p> Faulty regions can be made square by an efficient algorithm that first computes the connected components using breadth-first search, fills the bounding rectangle of each component with pseudo-faults, and finally extends each bounding rectangle into a square. Pseudo-faults are also used by Chien and Kim <ref> [2] </ref> in their planar-adaptive routing algorithm. However, the planar-adaptive algorithm requires that all nodes on an edge of the mesh be disabled if a single fault occurs on that edge.
Reference: [3] <author> W. Dally. </author> <title> Virtual channel flow control. </title> <booktitle> In Proc. of the 17th Int. Symp. on Computer Architecture, </booktitle> <pages> pages 60-68, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: The routers are connected by channels according to a particular interconnection topology. Among the most common topologies for multicomputers are low-dimensional meshes. These topologies are scalable and have a number of features that make them particularly amenable to high-performance computing <ref> [3, 11] </ref>. For example, a two-dimensional mesh is used in the Intel Paragon and Touchstone DELTA and a three-dimensional mesh is used in the MIT J-Machine. In order to minimize network latency, the current generation of multicomputers employ the wormhole routing switching strategy [13]. <p> Although virtual channels are less expensive than physical channels, they do incur substantial overhead. A physical channel must be multiplexed to accommodate multiple virtual channels, resulting in a reduction in effective bandwidth. Moreover, each virtual channel requires its own flit buffers and other control hardware <ref> [3] </ref>. The algorithm proposed by Linder and Harden for n-dimensional meshes requires a number of virtual channels that grows exponentially with n, resulting in a substantial penalty in cost and performance. Moreover, this algorithm is not always able to tolerate multiple faults.
Reference: [4] <author> W. Dally and H. Aoki. </author> <title> Deadlock-free adaptive routing in multicomputer networks using virtual channels. </title> <type> Technical report, </type> <institution> Massachusetts Institute of Technology, Laboratory for Computer Science, </institution> <month> Sept. </month> <year> 1990. </year>
Reference-contexts: In this case all the messages along this cycle become permanently blocked. A number of adaptive routing algorithms for the mesh have been proposed <ref> [2, 4, 7, 12] </ref>. Although adaptive algorithms allow some flexibility in routing, the routing restrictions still necessarily limit the number of paths that may be used. Consequently, certain patterns of faulty nodes will cause some messages to become undeliverable.
Reference: [5] <author> W. Dally and C. Seitz. </author> <title> Deadlock-free message routing in multiprocessor interconnection networks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 36(5) </volume> <pages> 547-553, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: Linder and Harden [12] rectified this problem by augmenting the network with additional channels that allow a message to circumvent a single fault. Rather than using multiple physical channels between neighboring processors, this scheme uses virtual channels <ref> [5] </ref> to simulate multiple channels on a single physical channel. Although virtual channels are less expensive than physical channels, they do incur substantial overhead. A physical channel must be multiplexed to accommodate multiple virtual channels, resulting in a reduction in effective bandwidth. <p> Thus, the header reaches the destination in a finite number of steps. 2 Theorem 2 Origin-based routing is deadlock-free. 5 routing. Proof: Dally and Seitz <ref> [5] </ref> have shown that a wormhole routing algorithm is deadlock-free if the channels can be labeled with integers in such that every path allowed by the routing algorithm has the property that its channels have strictly decreasing labels.
Reference: [6] <author> S. Dutt and J. Hayes. </author> <title> Some practical issues in the design of fault-tolerant multiprocessors. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 41(5) </volume> <pages> 588-598, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: When a fault occurs, the host processor (or the distributed protocol) establishes new routing rules for each non-faulty node, each node rolls back its computation to the most recently checkpointed state (assuming that faulty nodes may inject incorrect messages into the network), and computation resumes <ref> [6] </ref>. In order to maintain scalability and to maximize performance, each node may use only a small number of state variables in making routing decisions.
Reference: [7] <author> C. Glass and L. Ni. </author> <title> Adaptive routing in mesh-connected networks. </title> <booktitle> In Proc. 12th Int. Conf. on Distributed Computing Systems, </booktitle> <pages> pages 12-19, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: In this case all the messages along this cycle become permanently blocked. A number of adaptive routing algorithms for the mesh have been proposed <ref> [2, 4, 7, 12] </ref>. Although adaptive algorithms allow some flexibility in routing, the routing restrictions still necessarily limit the number of paths that may be used. Consequently, certain patterns of faulty nodes will cause some messages to become undeliverable. <p> For example, a single fault may require that k 1 non-faulty processors be deactivated, where k is the number of processors in each dimension of the mesh. Glass and Ni [8] proposed a fault-tolerant routing algorithm for meshes that extends their earlier turn-model for adaptive routing <ref> [7] </ref>. Glass and Ni's algorithm is highly adaptive and, in contrast to previous approaches, requires no virtual channels. The routing algorithm tolerates at least n 1 faults in an n-dimensional mesh. <p> First, we note that the negative-first routing algorithm proposed by Glass and Ni <ref> [7] </ref> is, in fact, a special case of origin-based routing where the origin is placed at the southwest corner of the mesh. Second, we observe that origin-based routing allows high adaptivity between most pairs of nodes.
Reference: [8] <author> C. Glass and L. Ni. </author> <title> Fault-tolerant wormhole routing in meshes. </title> <booktitle> In FTCS23, </booktitle> <pages> pages 240-249, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: For example, a single fault may require that k 1 non-faulty processors be deactivated, where k is the number of processors in each dimension of the mesh. Glass and Ni <ref> [8] </ref> proposed a fault-tolerant routing algorithm for meshes that extends their earlier turn-model for adaptive routing [7]. Glass and Ni's algorithm is highly adaptive and, in contrast to previous approaches, requires no virtual channels. The routing algorithm tolerates at least n 1 faults in an n-dimensional mesh. <p> When 10% of the nodes are faulty, for example, on average less than 12% of the non-faulty nodes are disabled with pseudo-faults and all remaining nodes can be used. In contrast, with 10% faulty nodes, the fault-tolerant version of negative-first routing <ref> [8] </ref> is able to ensure deadlock-free routing with probability less than 0:32 in a 10 fi 10 mesh. The fraction of non-faulty nodes disabled by origin-based routing as a function of the number of real faults is given in Figure 7. Next, we examine the performance of fault-tolerant origin-based routing. <p> The fault-tolerant negative-first routing algorithm proposed by Glass and Ni <ref> [8] </ref> also provides fault-tolerance without virtual channels. Negative-first routing and origin-based routing both re-label the channels of the mesh in order to circumvent faulty nodes. Negative-first routing performs re-labeling in a purely local fashion, resulting in fast and simple reconfiguration.
Reference: [9] <author> J. Hastad, T. Leighton, and M. Newman. </author> <title> Reconfiguring a hypercube in the presence of faults. </title> <booktitle> In Proc. 19th ACM Symp. Theory of Computing, </booktitle> <pages> pages 274-284, </pages> <year> 1987. </year>
Reference-contexts: The algorithm is described in Subsection 4.1. Subsection 4.2 describes extensions to the algorithm that increase its fault-tolerance and performance. 4.1 Fault-Tolerant Origin-Based Routing We assume that node faults are total: neither the processor nor the router at a faulty node can be used <ref> [9] </ref>. In the interest of simplicity, faulty channels are not considered separately, but instead can be modeled by introducing faults at the endpoints of each faulty channel.
Reference: [10] <author> J. Kuhl and S. Reddy. </author> <title> Distributed fault-tolerance for large multiprocessor systems. </title> <booktitle> In Proc. 7th Int. Symp. on Computer Architecture, </booktitle> <pages> pages 23-30, </pages> <month> May </month> <year> 1980. </year>
Reference-contexts: In the interest of simplicity, faulty channels are not considered separately, but instead can be modeled by introducing faults at the endpoints of each faulty channel. In addition, in the interest of simplifying our discussion, we assume that all node faults are detected using a built-in self-test mechanism <ref> [10] </ref> and that the reconfiguration process is controlled by a central host processor (although the techniques described here can be implemented by a distributed algorithm as well). Finally, we assume that faults can occur at any time.
Reference: [11] <author> F. T. Leighton. </author> <title> Parallel Algorithms and Architectures: Arrays, Trees, and Hypercubes. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year>
Reference-contexts: The routers are connected by channels according to a particular interconnection topology. Among the most common topologies for multicomputers are low-dimensional meshes. These topologies are scalable and have a number of features that make them particularly amenable to high-performance computing <ref> [3, 11] </ref>. For example, a two-dimensional mesh is used in the Intel Paragon and Touchstone DELTA and a three-dimensional mesh is used in the MIT J-Machine. In order to minimize network latency, the current generation of multicomputers employ the wormhole routing switching strategy [13].
Reference: [12] <author> D. Linder and J. Harden. </author> <title> An adaptive and fault tolerant wormhole routing strategy in k-ary n-cubes. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 40 </volume> <pages> 2-12, </pages> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: In this case all the messages along this cycle become permanently blocked. A number of adaptive routing algorithms for the mesh have been proposed <ref> [2, 4, 7, 12] </ref>. Although adaptive algorithms allow some flexibility in routing, the routing restrictions still necessarily limit the number of paths that may be used. Consequently, certain patterns of faulty nodes will cause some messages to become undeliverable. <p> These algorithms use the inherent fault-tolerance provided by adaptive routing. However, adaptive routing alone is not sufficient for fault-tolerance, because without additional information, a message may be routed along a path which is eventually blocked by faults. Linder and Harden <ref> [12] </ref> rectified this problem by augmenting the network with additional channels that allow a message to circumvent a single fault. Rather than using multiple physical channels between neighboring processors, this scheme uses virtual channels [5] to simulate multiple channels on a single physical channel.
Reference: [13] <author> L. Ni and P. McKinley. </author> <title> A survey of wormhole routing techniques in direct networks. </title> <journal> IEEE Computer, </journal> <volume> 26(2) </volume> <pages> 62-76, </pages> <month> Feb. </month> <year> 1993. </year> <month> 19 </month>
Reference-contexts: For example, a two-dimensional mesh is used in the Intel Paragon and Touchstone DELTA and a three-dimensional mesh is used in the MIT J-Machine. In order to minimize network latency, the current generation of multicomputers employ the wormhole routing switching strategy <ref> [13] </ref>. Wormhole routing divides each packet to be sent through the network into a number of constant size components or flits. The header flit contains the routing information for the message and leads the remaining flits through the network to the destination processor.
References-found: 13

