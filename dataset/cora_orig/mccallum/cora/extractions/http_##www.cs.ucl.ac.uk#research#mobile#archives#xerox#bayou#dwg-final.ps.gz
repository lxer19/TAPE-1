URL: http://www.cs.ucl.ac.uk/research/mobile/archives/xerox/bayou/dwg-final.ps.gz
Refering-URL: http://www.cs.ucl.ac.uk/research/mobile/archives/xerox/bayou/
Root-URL: http://www.cs.ucl.ac.uk
Email: contact: theimer@parc.xerox.com  
Title: Dealing with Tentative Data Values in Disconnected Work Groups  
Author: Marvin Theimer, Alan Demers, Karin Petersen, Mike Spreitzer, Douglas Terry, Brent Welch 
Address: Palo Alto, California 94304 U.S.A.  
Affiliation: Computer Science Laboratory Xerox Palo Alto Research Center  
Abstract: This paper describes a problem of weakly-consistent replicated data systems used in support of disconnected groups of people. The problem concerns actions and updates derived from tentative data updates that are ultimately determined to be in conict. While some such actions and updates can be automatically resolved, many require human intervention. Furthermore, although some file and database systems support internal conict detection and resolution, derived actions may be external to those systems, implying that human users must ensure that proper consistency is maintained between independent components of the system. The entire problem becomes exascerbated when disconnected work groups are taken into account, where tentative data values may be seen and acted upon by multiple people. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. A. Bernstein and N. Goodman. </author> <title> An algorithm for concur-rency control and recovery in replicated distributed databases. </title> <journal> ACM Transactions on Database Systems 9(4):596 615, </journal> <month> December </month> <year> 1984. </year>
Reference-contexts: Characteristics of a Solution The challenge represented by the problems we have described is primarily a practical rather than a theoretical one. The database community has long understood about conicts between serializable transactions in replicated data systems <ref> [1] </ref>, optimistic concurrency control and cascading transaction aborts [2], and compensating actions for the externally-performed operations of aborted transactions [3].
Reference: [2] <author> S. Davidson, H. Garcia-Molina, and D. Skeen. </author> <title> Consistency in a partitioned network: </title> <booktitle> A survey . ACM Computing Sur veys 17(3) </booktitle> <pages> 341-370, </pages> <month> September </month> <year> 1985. </year>
Reference-contexts: Characteristics of a Solution The challenge represented by the problems we have described is primarily a practical rather than a theoretical one. The database community has long understood about conicts between serializable transactions in replicated data systems [1], optimistic concurrency control and cascading transaction aborts <ref> [2] </ref>, and compensating actions for the externally-performed operations of aborted transactions [3].
Reference: [3] <author> J. Gray and A. Reuter. </author> <title> Transaction processing: concepts and techniques, </title> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference-contexts: The database community has long understood about conicts between serializable transactions in replicated data systems [1], optimistic concurrency control and cascading transaction aborts [2], and compensating actions for the externally-performed operations of aborted transactions <ref> [3] </ref>.
Reference: [4] <author> R.G. Guy, J.S. Heidemann, W. Mak, T.W. Page, Jr., G.J. Popek, and D. Rothmeier. </author> <title> Implementation of the Ficus replicated file system. </title> <booktitle> USENIX Conference Proceedings, </booktitle> <pages> pages 63-71, </pages> <publisher> USENIX, </publisher> <month> June </month> <year> 1990. </year>
Reference: [5] <author> J. S. Heidemann, T. W. Page, R. G. Guy, and G. J. Popek. </author> <title> Primarily disconnected operation: Experiences with Ficus. </title> <booktitle> Proceedings Second Workshop on the Management of Replicated Data, </booktitle> <address> Monterey, California, </address> <month> November </month> <year> 1992, </year> <pages> pages 2-5. </pages>
Reference: [6] <author> L. Kalwell Jr., S. Beckhardt, T. Halvorsen, R. Ozzie, and I. Greif. </author> <title> Replicated document management in a group communication system. </title> <booktitle> Proceedings Conference on Computer-Supported Cooperative Work, </booktitle> <address> Portland, Oregon, </address> <month> September </month> <year> 1988. </year>
Reference-contexts: 1. Conict Detection and Resolution In a world containing mobile computer users who can communicate with each other only part of the time, there is growing interest in disconnected operation and in weakly-consistent replicated data. This can be seen from the success of systems such as Lotus Notes <ref> [6] </ref>, Coda [7][11], and Ficus [4][5]. Some of these systems ignore the issue of conicting, concurrent updates to data; others support some form of conict detection and even automatic con-ict resolution in certain cases. However, none of them deals with the problem in its full generality.
Reference: [7] <author> J. J. Kistler and M. Satyanarayanan. </author> <title> Disconnected operation in the Coda file system. </title> <journal> ACM Transactions on Computer Systems 10(1): </journal> <pages> 3-25, </pages> <month> February </month> <year> 1992. </year>
Reference: [8] <author> P. Kumar and M. Satyanarayanan. </author> <title> Supporting application-specific resolution in an optimistically replicated file system. </title> <booktitle> Proceedings IEEE Workshop on Workstation Operat ing Systems, </booktitle> <address> Napa, California, </address> <month> October </month> <year> 1993, </year> <pages> pages 66-70. </pages>
Reference: [9] <author> Q. Lu and M. Satyanarayanan. </author> <title> Isolation-only transactions for mobile computing. </title> <booktitle> ACM Operating Systems Review 28(2) </booktitle> <pages> 81-87, </pages> <month> April </month> <year> 1994. </year>
Reference: [10] <author> P. Reiher, J. Heidemann, D. Ratner, G. Skinner, and G. Popek. </author> <title> Resolving file conicts in the Ficus file system. </title> <booktitle> Proceedings Summer USENIX Conference, </booktitle> <month> June </month> <year> 1994, </year> <pages> pages 183-195. </pages>
Reference: [11] <author> M. Satyanarayanan, J.J. Kistler, P. Kumar, </author> <title> M.E. Okasaki, E.H. Siegel, and D.C. Steere. Coda: a highly available f ile system for a distributed workstation environment. </title> <journal> IEEE Transactions on Computers 39(4) </journal> <pages> 447-459, </pages> <month> April </month> <year> 1990. </year>
References-found: 11

