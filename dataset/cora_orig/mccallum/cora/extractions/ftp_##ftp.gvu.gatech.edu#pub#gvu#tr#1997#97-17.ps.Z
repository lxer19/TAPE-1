URL: ftp://ftp.gvu.gatech.edu/pub/gvu/tr/1997/97-17.ps.Z
Refering-URL: http://www.cs.gatech.edu/gvu/reports/1997/
Root-URL: 
Email: fabowd, jmankoffg@cc.gatech.edu  
Title: Domisilica: Providing Ubiquitous Access to the Home  
Author: Jen Mankoff and Gregory D. Abowd 
Keyword: Computing in the home, ubiquitous computing, dynamically generated interfaces, multimodal interfaces  
Address: 801 Atlantic Drive Atlanta, GA 30332-0280  
Affiliation: Graphics, Visualization and Usability Center College of Computing Georgia Institute of Technology  
Abstract: The Domisilica project is exploring future computing environments centered around the home. We envision a future in which objects in the home, such as appliances and rooms, are enhanced with computational capabilities that make them accessible away from the home. Our approach has been to add computational power to real world objects located in the home, and to provide a centralized model of the home which can be used to integrate a wide variety of services and is accessible remotely. This paper focuses on issues of interface modes and accessibility which arose as we developed Domisilica. These include extending the affordances of real world objects to provide new services, providing remote access through a variety of connections both impoverished and broad, and providing universal access for all types of people including people with disabilities, children, and older adults. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Cebus. </author> <note> Available at http://www.cebus.com/. </note>
Reference-contexts: Systems like CEBus <ref> [1] </ref> and X10 [2] can be used for control activities. Domisilica provides support for communication and inventory management as well.
Reference: 2. <author> X10. </author> <note> Available at http://www.hometeam.com/x10.shtml. Also see ftp://ftp.scruz.net/users/cichlid/public/x10faq. </note>
Reference-contexts: Systems like CEBus [1] and X10 <ref> [2] </ref> can be used for control activities. Domisilica provides support for communication and inventory management as well.
Reference: 3. <author> P. Curtis and D. A. Nichols. </author> <title> Muds grow up: Social virtual reality in the real world. </title> <booktitle> In Proceedings of IEEE Computer Conference '94, pages 193200. IEEE, </booktitle> <year> 1994. </year>
Reference-contexts: Figure 2 provides an overview of the system. The database is a MOO <ref> [3] </ref>, running on the LambdaMOO Server. It contains a model of the home, but also includes virtual data which has no real world correspondence (this is what we need to build interfaces to in the home), even though it may be associated with specific appliances, etc. <p> The server can also open outbound socket connections to other programs when necessary. The Java toolkit provides support for building interactors for 2 a MOO is object-oriented, extensible database built to support shared computing with a powerful real world metaphor. <ref> [3] </ref> objects in the database (which generally correspond to devices, places, or services in the home). It also supports a communication protocol for requesting information and receiving events from the MOO.
Reference: 4. <author> W. K. Edwards and E. D. Mynatt. </author> <title> An architecture for transforming graphical interfaces. </title> <booktitle> In Proceedings of UIST '94, </booktitle> <pages> pages 3947. </pages> <publisher> ACM, </publisher> <year> 1994. </year>
Reference-contexts: As an alternative, we have chosen to build the input and output into the augmented device. This type of interface is exemplified by the work of Ishii et. al in graspable user interfaces and tangible bits [9, 7]. Much of the research done in supporting disabled users <ref> [10, 17, 4, 16] </ref> is very applicable to Domisilica. Work involving blind users can support both our goal of universal access, and can also be applied to the development of non-visual interfaces such as phone-based access. <p> The Dual project [17] provides a way of generating both a visual and non-visual interface to the same application in an integrated fashion, while Mercator <ref> [4] </ref> automatically generates an audio interface from an X-based GUI. Emacspeak [16], similar to Dual, can present both visual (text-based) and non-visual interfaces simultaneously. Domisilica follows the philosophy of Dual: that non GUI interfaces are best developed independently with metaphors appropriate to the medium. <p> It also supports a communication protocol for requesting information and receiving events from the MOO. The GUI aspects of the package are built on top of SubArctic [8]. (SubArctic, like Mercator <ref> [4] </ref> can generate audio interfaces, but the preferred method for non-visual access is via the conversational, text-only interface automatically provided by the MOO).
Reference: 5. <author> S. Feiner, B. MacIntyre, and D. Sellgmann. </author> <title> Knowledge-based augmented reality. </title> <journal> Communications of the ACM, </journal> <volume> 36(7):5361, </volume> <month> July </month> <year> 1993. </year>
Reference-contexts: The ParcTab/Pad ubiquitous computing project [20] involves adding new computing objects to the environment rather than extending already existing objects into the computing world. Fitzmaurice [6] describes a portable, personal palmtop display which can be used to view augmented aspects of real world objects, and Feiner et. al <ref> [5] </ref> use a wearable display to show virtual information overlayed on real objects. While these are a valid approaches, they require the user to carry the interface. As an alternative, we have chosen to build the input and output into the augmented device.
Reference: 6. <author> G. W. Fitzmaurice. </author> <title> Situated information spaces and spatially aware palmtop computers. </title> <journal> Communications of the ACM, </journal> <volume> 36(7):3949, </volume> <month> July </month> <year> 1993. </year>
Reference-contexts: Both the ubiquitous computing community and many en-trepreneuring technophiles have explored ways of adding new computing power throughout our physical environments. (See the July 1993 CACM (titled Back to the Real World).) Augmented reality <ref> [22, 6, 19, 21] </ref>, represents one approach to giving users access to new services and information. The DigitalDesk project [21] is a good example of how the af-fordances of paper can be extended to provide new services. <p> The DigitalDesk project [21] is a good example of how the af-fordances of paper can be extended to provide new services. The ParcTab/Pad ubiquitous computing project [20] involves adding new computing objects to the environment rather than extending already existing objects into the computing world. Fitzmaurice <ref> [6] </ref> describes a portable, personal palmtop display which can be used to view augmented aspects of real world objects, and Feiner et. al [5] use a wearable display to show virtual information overlayed on real objects. While these are a valid approaches, they require the user to carry the interface.
Reference: 7. <author> G. W. Fitzmaurice, H. Ishii, and W. Buxton. Bricks: </author> <title> Laying the foundations for graspable user interfaces. </title> <booktitle> In Proceedings of CHI '95, </booktitle> <pages> pages 442449. </pages> <publisher> ACM, </publisher> <year> 1995. </year>
Reference-contexts: As an alternative, we have chosen to build the input and output into the augmented device. This type of interface is exemplified by the work of Ishii et. al in graspable user interfaces and tangible bits <ref> [9, 7] </ref>. Much of the research done in supporting disabled users [10, 17, 4, 16] is very applicable to Domisilica. Work involving blind users can support both our goal of universal access, and can also be applied to the development of non-visual interfaces such as phone-based access.
Reference: 8. <author> S. Hudson and I. Smith. </author> <note> Subarctic user's manual. Available at http://www.cc.gatech.edu/gvu/ui/sub arctic/ sub arctic/doc/users manual.html. </note>
Reference-contexts: It also supports a communication protocol for requesting information and receiving events from the MOO. The GUI aspects of the package are built on top of SubArctic <ref> [8] </ref>. (SubArctic, like Mercator [4] can generate audio interfaces, but the preferred method for non-visual access is via the conversational, text-only interface automatically provided by the MOO).
Reference: 9. <author> H. Ishii and B. Ullmer. </author> <title> Tangible bits: Towards seamless interfaces between people, bits and atoms. </title> <booktitle> In Proceedings of CHI '97, </booktitle> <pages> pages 234241. </pages> <publisher> ACM, </publisher> <year> 1997. </year>
Reference-contexts: As an alternative, we have chosen to build the input and output into the augmented device. This type of interface is exemplified by the work of Ishii et. al in graspable user interfaces and tangible bits <ref> [9, 7] </ref>. Much of the research done in supporting disabled users [10, 17, 4, 16] is very applicable to Domisilica. Work involving blind users can support both our goal of universal access, and can also be applied to the development of non-visual interfaces such as phone-based access. <p> PROVIDING ACCESS TO COMPUTATIONALLY ENHANCED REAL WORLD OBJECTS Once real world objects have been computationally enhanced (extended into the computing world), their user interfaces must also be enhanced. This task has two parts: on location access in which we follow the approach of Ishii et. al. <ref> [9] </ref>; and remote access, which draws on research done for the Jupiter project and on the PALplates project. Both types of access must support users of all ages and abilities. A home must be both safe (secure) and accessible to any potential (and valid) users.
Reference: 10. <author> T. G. Kieninger. </author> <title> The growing up of hyperbraille an office workspace for blind people. </title> <booktitle> In Proceedings of UIST '96, </booktitle> <pages> pages 6773. </pages> <publisher> ACM, </publisher> <year> 1996. </year>
Reference-contexts: As an alternative, we have chosen to build the input and output into the augmented device. This type of interface is exemplified by the work of Ishii et. al in graspable user interfaces and tangible bits [9, 7]. Much of the research done in supporting disabled users <ref> [10, 17, 4, 16] </ref> is very applicable to Domisilica. Work involving blind users can support both our goal of universal access, and can also be applied to the development of non-visual interfaces such as phone-based access. <p> Interfaces are just a view of the properties of objects (data) plus interactors for accessing their functionality. One very important aspect of this work is that different interfaces present the user with a metaphor tailored for the modality of interaction <ref> [17, 23, 10] </ref>. We have a slight advantage here over other applications; there is an obvious semantic metaphor that holds the system together: the mapping to the real world (rooms in a house containing various appliances). This metaphor is used by our version of a Window Manager or Application Manager.
Reference: 11. <author> R. Kraut, W. Scherlis, T. Mukhopadhyay, J. Manning, and S. Kiesler. </author> <title> The homenet field trial of residential internet services. </title> <journal> Communications of the ACM, </journal> <volume> 39(12):5563, </volume> <month> December </month> <year> 1996. </year>
Reference-contexts: While people have studied computing in the home <ref> [18, 11] </ref>, the focus has generally been on technologies imported from the office place (such as email, the Web, and computer-centric tasks like word-processing). One exception to this is the Neural Network House [13], a home which manages climate control and learns about its user's habits over time.
Reference: 12. <author> J. Mankoff and B. Schilit. </author> <title> Supporting knowledge workers beyond the desktop with palplates. </title> <booktitle> In Proceedings of CHI '97, </booktitle> <pages> pages 550551. </pages> <publisher> ACM, </publisher> <year> 1997. </year>
Reference-contexts: After discussing these toolkits, we conclude with a section on future work. RELATED WORK This work grew from the PALplates project <ref> [12] </ref> (done at FX-PAL) which consists of a remotely accessible model of a real space (an office place) and objects in that office. PALplates only supported one mode of interaction (a GUI interface).
Reference: 13. <author> M. C. Mozer, R. H. Dodier, M. Anderson, L. Vid-mar, R. F. C. III, and D. Miller. </author> <title> The neural network house: An overview. </title> <type> Technical report, </type> <institution> University of Colorado, </institution> <year> 1996. </year> <note> Available at http://boulder.colorado.edu/ lucky/projects/House/house-overview.ps. </note>
Reference-contexts: While people have studied computing in the home [18, 11], the focus has generally been on technologies imported from the office place (such as email, the Web, and computer-centric tasks like word-processing). One exception to this is the Neural Network House <ref> [13] </ref>, a home which manages climate control and learns about its user's habits over time. While this research explores a climate control service in depth, it does not address the interface issues we are contending with.
Reference: 14. <author> D. A. Nichols, P. Curtis, M. Dixon, and J. Lamping. High-latency, </author> <title> low-bandwidth windowing in the jupiter collaboration system. </title> <booktitle> In Proceedings of UIST '95, </booktitle> <pages> pages 111120. </pages> <publisher> ACM, </publisher> <year> 1995. </year>
Reference-contexts: PALplates only supported one mode of interaction (a GUI interface). Touch screen terminals were placed around the office in order to provide access to new services on location. Another project which helped to guide our initial approach was the Jupiter project <ref> [14] </ref>, which implements remote access from home to real world office spaces. <p> Concurrency and Events : Although all of the current users support multiple users, our current concurrency model is very naive. We plan to build a more robust system modeled on that of Jupiter <ref> [14] </ref>. We also plan to build a more sophisticated event handler by integrating real world events into the SubArctic user-interface event model.
Reference: 15. <author> D. Norman. </author> <title> Psychology of Everyday Things. </title> <publisher> Basic Books, </publisher> <year> 1988. </year>
Reference-contexts: Both types of access must support users of all ages and abilities. A home must be both safe (secure) and accessible to any potential (and valid) users. On Location Access The basic goal in local access is to extend the affordances of real world objects <ref> [15] </ref> whenever possible to support their enhanced functionality. For example, in order to allow people to view and leave electronic notes on the door of their refrigerator, it makes sense to embed a touch screen or pen-operated display in that door.
Reference: 16. <author> T. Raman. </author> <title> Emacspeak a speech interface. </title> <booktitle> In Proceedings of CHI '96, </booktitle> <pages> pages 6671. </pages> <publisher> ACM, </publisher> <year> 1996. </year>
Reference-contexts: As an alternative, we have chosen to build the input and output into the augmented device. This type of interface is exemplified by the work of Ishii et. al in graspable user interfaces and tangible bits [9, 7]. Much of the research done in supporting disabled users <ref> [10, 17, 4, 16] </ref> is very applicable to Domisilica. Work involving blind users can support both our goal of universal access, and can also be applied to the development of non-visual interfaces such as phone-based access. <p> The Dual project [17] provides a way of generating both a visual and non-visual interface to the same application in an integrated fashion, while Mercator [4] automatically generates an audio interface from an X-based GUI. Emacspeak <ref> [16] </ref>, similar to Dual, can present both visual (text-based) and non-visual interfaces simultaneously. Domisilica follows the philosophy of Dual: that non GUI interfaces are best developed independently with metaphors appropriate to the medium. <p> This is useful in noninteractive situations for announcements and monitoring, and can be combined with other modes of input such as a keyboard for full interactivity. Audio output has been integrated with a system used by blind users called Emacspeak <ref> [16] </ref>. FUTURE WORK AND CONCLUSIONS We see potential for expansion of many different aspects of Domisilica in the future.
Reference: 17. <author> A. Savidis and C. Stephanidis. </author> <title> Developing dual user interfaces for integrating blind and sighted users: the homer uims. </title> <booktitle> In Proceedings of CHI '95, </booktitle> <pages> pages 106 113. </pages> <publisher> ACM, </publisher> <year> 1995. </year>
Reference-contexts: As an alternative, we have chosen to build the input and output into the augmented device. This type of interface is exemplified by the work of Ishii et. al in graspable user interfaces and tangible bits [9, 7]. Much of the research done in supporting disabled users <ref> [10, 17, 4, 16] </ref> is very applicable to Domisilica. Work involving blind users can support both our goal of universal access, and can also be applied to the development of non-visual interfaces such as phone-based access. <p> Much of the research done in supporting disabled users [10, 17, 4, 16] is very applicable to Domisilica. Work involving blind users can support both our goal of universal access, and can also be applied to the development of non-visual interfaces such as phone-based access. The Dual project <ref> [17] </ref> provides a way of generating both a visual and non-visual interface to the same application in an integrated fashion, while Mercator [4] automatically generates an audio interface from an X-based GUI. Emacspeak [16], similar to Dual, can present both visual (text-based) and non-visual interfaces simultaneously. <p> However, it can be greatly simplified, if we begin to separate interface from functionality and to support development of multiple interfaces by encapsulating non-modality-specific interface features in common computational objects (see Dual <ref> [17] </ref>). This approach is facilitated by the fact that all of our functionality is stored in a database (MOO objects are programmable, so in addition to storing data, they store functionality). Interfaces are just a view of the properties of objects (data) plus interactors for accessing their functionality. <p> Interfaces are just a view of the properties of objects (data) plus interactors for accessing their functionality. One very important aspect of this work is that different interfaces present the user with a metaphor tailored for the modality of interaction <ref> [17, 23, 10] </ref>. We have a slight advantage here over other applications; there is an obvious semantic metaphor that holds the system together: the mapping to the real world (rooms in a house containing various appliances). This metaphor is used by our version of a Window Manager or Application Manager.
Reference: 18. <author> A. Venkatesh. </author> <title> Computers and other interactive technologies for the home. </title> <journal> Communications of the ACM, </journal> <volume> 39(12):4754, </volume> <month> December </month> <year> 1996. </year>
Reference-contexts: While people have studied computing in the home <ref> [18, 11] </ref>, the focus has generally been on technologies imported from the office place (such as email, the Web, and computer-centric tasks like word-processing). One exception to this is the Neural Network House [13], a home which manages climate control and learns about its user's habits over time.
Reference: 19. <author> M. Weiser. </author> <booktitle> The computer for the 21st century. </booktitle> <publisher> Scientific American, </publisher> <address> 265(3):94104, </address> <year> 1991. </year>
Reference-contexts: Both the ubiquitous computing community and many en-trepreneuring technophiles have explored ways of adding new computing power throughout our physical environments. (See the July 1993 CACM (titled Back to the Real World).) Augmented reality <ref> [22, 6, 19, 21] </ref>, represents one approach to giving users access to new services and information. The DigitalDesk project [21] is a good example of how the af-fordances of paper can be extended to provide new services.
Reference: 20. <author> M. Weiser. </author> <title> Some computer science issues in ubiquitous computing. </title> <journal> Communications of the ACM, </journal> <volume> 36(7):7583, </volume> <month> July </month> <year> 1993. </year>
Reference-contexts: The DigitalDesk project [21] is a good example of how the af-fordances of paper can be extended to provide new services. The ParcTab/Pad ubiquitous computing project <ref> [20] </ref> involves adding new computing objects to the environment rather than extending already existing objects into the computing world.
Reference: 21. <author> P. Wellner. </author> <title> Interacting with paper on the digitaldesk. </title> <journal> Communications of the ACM, </journal> <volume> 36(7):8796, </volume> <month> July </month> <year> 1993. </year>
Reference-contexts: Both the ubiquitous computing community and many en-trepreneuring technophiles have explored ways of adding new computing power throughout our physical environments. (See the July 1993 CACM (titled Back to the Real World).) Augmented reality <ref> [22, 6, 19, 21] </ref>, represents one approach to giving users access to new services and information. The DigitalDesk project [21] is a good example of how the af-fordances of paper can be extended to provide new services. <p> The DigitalDesk project <ref> [21] </ref> is a good example of how the af-fordances of paper can be extended to provide new services. The ParcTab/Pad ubiquitous computing project [20] involves adding new computing objects to the environment rather than extending already existing objects into the computing world.
Reference: 22. <author> P. Wellner, W. Mackay, and R. Gold. </author> <title> Computer-augmented environments: Back to the real world. </title> <journal> Communications of the ACM, </journal> <volume> 36(7):2426, </volume> <month> July </month> <year> 1993. </year>
Reference-contexts: Both the ubiquitous computing community and many en-trepreneuring technophiles have explored ways of adding new computing power throughout our physical environments. (See the July 1993 CACM (titled Back to the Real World).) Augmented reality <ref> [22, 6, 19, 21] </ref>, represents one approach to giving users access to new services and information. The DigitalDesk project [21] is a good example of how the af-fordances of paper can be extended to provide new services.
Reference: 23. <author> N. Yankelovich, G.-A. Levow, and M. Marx. </author> <title> Designing speechacts: Issues in speech user interfaces. </title> <booktitle> In Proceedings of CHI '95, </booktitle> <pages> pages 369376. </pages> <publisher> ACM, </publisher> <year> 1995. </year>
Reference-contexts: Interfaces are just a view of the properties of objects (data) plus interactors for accessing their functionality. One very important aspect of this work is that different interfaces present the user with a metaphor tailored for the modality of interaction <ref> [17, 23, 10] </ref>. We have a slight advantage here over other applications; there is an obvious semantic metaphor that holds the system together: the mapping to the real world (rooms in a house containing various appliances). This metaphor is used by our version of a Window Manager or Application Manager.
References-found: 23

