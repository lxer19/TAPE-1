URL: ftp://ftp.cs.virginia.edu/pub/techreports/CS-93-65.ps.Z
Refering-URL: ftp://ftp.cs.virginia.edu/pub/techreports/README.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Deadlock Properties of Queueing Networks with Finite Capacities and Multiple Routing Chains  
Author: Jorg Liebeherr Ian F. Akyildiz 
Note: This work was supported by the National Science Foundation under Grant No. CCR-90-11981.  
Address: Charlottesville, VA 22903  Atlanta, GA 30332  
Affiliation: Department of Computer Science University of Virginia  School of Electrical and Computer Engineering Georgia Institute of Technology  
Abstract: Blocking in queueing network models with finite capacities can lead to deadlock situations. In this paper, deadlock properties are investigated in queueing networks with multiple routing chains. The necessary and sufficient conditions for deadlock-free queueing networks with blocking are provided. An optimization algorithm is presented for finding deadlock-free capacity assignments with the least total capacity. The optimization algorithm maps the queueing network into a directed graph and obtains the deadlock freedom conditions from a specified subset of cycles in the directed graph. In certain network topologies, the number of deadlock freedom conditions can be large, thus, making any optimization computationally expensive. For a special class of topologies, so-called tandem networks, it is shown that a minimal capacity assignment can be directly obtained without running an optimization algorithm. Here, the solution to the minimal capacity assignment takes advantage of the regular topology of tandem networks. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> I. F. Akyildiz and H. G. Perros (Editors). </editor> <title> Queueing Networks with Finite Capacity Queues. </title> <journal> Special Issue of Performance Evaluation, </journal> <volume> 10(4), </volume> <year> 1989. </year>
Reference-contexts: The set of rules that dictate when a station becomes blocked or unblocked is commonly referred as the blocking mechanism. In this work, we consider the so-called blocking-after-service or BAS mechanism, also referred to as Type 1 or manufacturing blocking mechanism <ref> [1] </ref>. In BAS, a job which has completed service at a station i and attempts to proceed to station j must find an empty buffer space in station j. <p> Our work can be extended in several directions. In our study, we assume the most common blocking mechanism, i.e., blocking-after-service or BAS. Many systems are more realistically modeled with different blocking mechanisms, e.g., blocking-before-service or repeated-service <ref> [1] </ref>. For these blocking mechanisms, deadlock freedom conditions different from the conditions in this study must be found. We also assume that all stations have a single server, and that each routing chain has a separate buffer at a station.
Reference: [2] <author> I. F. Akyildiz and J. Liebeherr. </author> <title> Optimal Deadlock Free Buffer Allocation in Multiple Chain Blocking Networks of Queues. </title> <booktitle> In Proc. IFIP TC7/WG 7.3 International Conference on Performance of Distributed Systems and Integrated Communication Networks, </booktitle> <pages> pages 217-236, </pages> <address> Kyoto, Japan, </address> <year> 1991. </year>
Reference-contexts: Rather, motivated by Lemma 1, we are interested in only those cycles which correspond to set ~ C as given in Lemma 1, that is, a maximal subset of cycles where no cycle is fully contained in another cycle. In <ref> [2] </ref>, we present an efficient algorithm which finds the subset ~ C of relevant buffer cycles. 4.2 Optimization From the set of buffer cycles as obtained in Subsection 4.1 we can generate the maximal subset of buffer cycles ~ C that must be examined for deadlock freedom of the queueing network.
Reference: [3] <author> B. Johnson. </author> <title> Finding All the Elementary Circuits in a Directed Graph. </title> <journal> SIAM Journal on Computing, </journal> <volume> 4(1):77 - 84, </volume> <year> 1975. </year>
Reference-contexts: Proof: The proof follows immediately from the definition of a buffer cycle in Definition 1 and the construction of the directed graph. 2 The cycles in the directed graph can be obtained with any cycle-finding algorithm for directed graphs <ref> [3] </ref>. Note that with Lemma 1 we do not need to find all cycles in G .
Reference: [4] <author> S. Kundu and I. F. Akyildiz. </author> <title> Deadlock Free Buffer Allocation in Closed Queueing Networks. Queueing Systems, </title> <address> 4(1):47 - 56, </address> <year> 1989. </year>
Reference-contexts: In this study, we take a preventive approach to deadlocks and derive deadlock freedom conditions for finite capacity queueing networks with BAS blocking and multiple routing chains. For queueing networks with a single routing chain, Kundu and Akyildiz <ref> [4] </ref> proved that a network is deadlock-free if the number of jobs in the network is less than the capacity of the directed cycle with minimal waiting room. <p> On the other hand, the job in the server of station 2 cannot enter buffer B 11 , since B 11 is full. Thus, a deadlock situation occurs, even though the conditions for deadlock freedom in <ref> [4] </ref> are satisfied for each routing chain in isolation. We show that deadlock situations in multiple-chain queueing networks always occur in so-called buffer cycles. A buffer cycle is a cyclic sequence of buffers in the networks where the buffers may belong to different routing chains.
Reference: [5] <author> J. Liebeherr. </author> <title> Performance Evaluation of Synchronized Systems. </title> <type> PhD thesis, </type> <institution> Georgia Institute of Technology, College of Computing, </institution> <year> 1991. </year>
Reference-contexts: ; B 5 1 ; B 8 3 ; B 10 3 ; B 3 3 ) C 11 = (B 4 2 ; B 5 1 ; B 10 2 ; B 3 3 ) 3 More examples of minimal capacity assignment for various network topologies are given in <ref> [5] </ref>. 10 C 13 = (B 4 2 ; B 5 2 ; B 8 3 ; B 10 3 ; B 9 2 ; B 3 2 ) C 15 = (B 4 2 ; B 10 1 ; B 3 3 ) C 17 = (B 4 2 ;
Reference: [6] <author> J. Liebeherr. </author> <title> Deadlock-Free Buffer Allocations in Blocking Networks with Tandem Sequences. </title> <booktitle> In Proc. 2nd Workshop on Queueing Networks with Finite Capacities, </booktitle> <pages> pages 41 - 54. </pages> <publisher> North-Holland, </publisher> <year> 1993. </year>
Reference: [7] <author> R. O. Onvural. </author> <title> Survey of Closed Queueing Networks with Blocking. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(2) </volume> <pages> 83-121, </pages> <year> 1990. </year>
Reference: [8] <author> L. </author> <title> Schrage. Linear, Integer, and Quadratic Programming with LINDO. </title> <publisher> The Scientific Press, </publisher> <address> Third Edition, </address> <year> 1986. </year> <month> 30 </month>
Reference-contexts: heuristic X X fl (B ir ) 36 37 175 175 8 8 fl (B 4 2 ) 10 10 4 4 3 3 fl (B 6 3 ) 7 9 122 122 0 0 Table 1: Results for Example. 4 The optimizations were solved with the programming package LINDO <ref> [8] </ref> 11 5 Deadlock-Free Capacity Assignments in Tandem Networks The computational complexity of the capacity assignment algorithm presented in Section 4 increases with the size of ~ C, the maximal subset of cycles where no buffer cycle is contained in another cycle.
References-found: 8

