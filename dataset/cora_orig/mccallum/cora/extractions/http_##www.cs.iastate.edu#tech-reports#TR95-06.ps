URL: http://www.cs.iastate.edu/tech-reports/TR95-06.ps
Refering-URL: http://www.cs.iastate.edu/tech-reports/catalog.html
Root-URL: http://www.cs.iastate.edu
Title: Linear-Time Algorithms for Parametric Minimum Spanning Tree Problems on Planar Graphs  
Author: David Fern andez-Baca and Giora Slutzki 
Address: Ames, IA 50011  
Affiliation: Department of Computer Science, Iowa State University,  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [AgFe92] <author> R. Agarwala and D. Fernandez-Baca. </author> <title> Weighted multidimensional search and its application to convex optimization. </title> <type> DIMACS Technical Report 92-51, </type> <month> November, </month> <year> 1992. </year> <note> To appear in SIAM J. Comput. </note>
Reference-contexts: The maximization algorithm discussed above can be used to improve the efficiency of an algorithm for solving the Lagrangian dual of the minimum spanning tree problem with a fixed number of side constraints <ref> [AgFe92, CMV89] </ref>. The algorithm given in [AgFe92] specializes to a O (n log d n) algorithm for planar graphs, where d is the number of side constraints; using the algorithm described here, we are able to reduce the running time to O (n log d1 n). <p> The maximization algorithm discussed above can be used to improve the efficiency of an algorithm for solving the Lagrangian dual of the minimum spanning tree problem with a fixed number of side constraints [AgFe92, CMV89]. The algorithm given in <ref> [AgFe92] </ref> specializes to a O (n log d n) algorithm for planar graphs, where d is the number of side constraints; using the algorithm described here, we are able to reduce the running time to O (n log d1 n).
Reference: [AKS83] <author> M. Ajtai, J. Komlos, and E. Szemeredi. </author> <title> Sorting in c log n parallel steps. </title> <journal> Combinatorica, </journal> <volume> 3 </volume> <month> 1-19 </month> <year> (1983). </year>
Reference-contexts: Our MRST algorithm is influenced by Frederickson's work. It is a departure from Megiddo's algorithm for general graphs in that it does not use sorting at a global level, and hence does not need to depend on the AKS sorting network <ref> [AKS83] </ref>, whose large constants of proportionality make it impractical. Our algorithm simulates a new (non-parametric) minimum spanning tree algorithm that takes advantage of planarity to view the input graph at different levels of refinement (a technique similar to that used by Frederickson for computing shortest paths [Fre85b]).
Reference: [AMO92] <author> R.K. Ahuja, T.L. Magnanti, and J.B. Orlin. </author> <title> Network Flows: Theory, Algorithms, and Applications. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1992. </year>
Reference-contexts: We note that the maximization algorithm also leads to a new linear-time algorithm for solving the planar minimum spanning problem with one degree constraint, using a formulation given by Ahuja, Magnanti, and Orlin <ref> [AMO92] </ref>. An algorithm for this problem on general graphs, which specializes to a linear-time algorithm for planar graphs, was given by Gabow and Tarjan [GaTa84].
Reference: [Bat68] <author> K.E. Batcher. </author> <title> Sorting networks and their applications. </title> <booktitle> In Proc. AFIPS Spring Joint Summer Computer Conf., </booktitle> <volume> Vol. 32, </volume> <pages> pp. 307-314. 21 </pages>
Reference-contexts: Cole et al. have described a much simpler algorithm whose running time is O (s log 4 s) when a O (log 2 s)-depth sorter, such as Batcher's <ref> [Bat68] </ref>, is used. It is easy to verify that by using the simpler O (s log 4 s) algorithm, one can obtain a new MRST algorithm whose running time is still linear. 5 Discussion The MRST algorithm can easily be adapted to yield linear-time algorithms for two closely related problems.
Reference: [CEGS92] <author> B. Chazelle, H. Edelsbrunner, L. Guibas, and M. Sharir. </author> <title> Diameter, width, closest line pair, and parametric searching. </title> <booktitle> In Proceedings of the 8th Annual ACM Symposium on Computational Geometry, </booktitle> <pages> pp. </pages> <month> 120- 129 </month> <year> (1992). </year>
Reference-contexts: Parametric search has been the subject of a considerable amount of research in recent times because of its numerous applications to optimization and computational geometry <ref> [CoMe93, Tol93a, CEGS92, MaSc93] </ref>. In the context of optimization problems such as MRST, the application of Megiddo's technique tends to follow a common pattern.
Reference: [CMV89] <author> P.M. Camerini, F. Maffioli, and C. Vercellis. </author> <title> Multi-constrained ma-troidal knapsack problems. </title> <booktitle> Mathematical Programming 45 </booktitle> <month> 211-231 </month> <year> (1989). </year>
Reference-contexts: The number a e represents the cost of building link e, while b e represents the time required to build that link. The goal is to find a tree that minimizes the ratio of total cost over construction time. Other applications of MRST are given elsewhere <ref> [CMV89, Meg83] </ref>. <p> The first problem, which arises in certain types of sensitivity analysis [Gus83], is finding the next breakpoint of Z (); i.e., given a real number 1 find the smallest fl &gt; 1 such that fl is a breakpoint of Z (). The second problem, which arises in Lagrangian relaxation <ref> [CMV89] </ref>, is to find a maximizer fl of Z (); i.e., find a fl such that Z ( fl ) = max Z (). The algorithms for these problems are nearly identical to the MRST algorithm, except for the oracle. <p> The maximization algorithm discussed above can be used to improve the efficiency of an algorithm for solving the Lagrangian dual of the minimum spanning tree problem with a fixed number of side constraints <ref> [AgFe92, CMV89] </ref>. The algorithm given in [AgFe92] specializes to a O (n log d n) algorithm for planar graphs, where d is the number of side constraints; using the algorithm described here, we are able to reduce the running time to O (n log d1 n).
Reference: [CoMe93] <author> E. Cohen and N. Megiddo. </author> <title> Maximizing concave functions in fixed dimension. In Complexity in Numerical Computations, P.M. </title> <editor> Pardalos, ed., </editor> <publisher> World Scientific Press 1993. </publisher>
Reference-contexts: Parametric search has been the subject of a considerable amount of research in recent times because of its numerous applications to optimization and computational geometry <ref> [CoMe93, Tol93a, CEGS92, MaSc93] </ref>. In the context of optimization problems such as MRST, the application of Megiddo's technique tends to follow a common pattern. <p> If so, 0 fl ; 20 otherwise, 0 &gt; fl . For the problem of maximizing Z, 0 fl if the slope of Z at 0 is positive <ref> [CoMe93] </ref>. Thus, in both problems the situation is analogous to minimum ratio optimization: the oracle requires an evaluation of Z ( 0 ) plus additional work that is O (1).
Reference: [Cole87] <author> R. Cole. </author> <title> Slowing down sorting networks to obtain faster sorting algorithms. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 34(1) </volume> <pages> 200-208, </pages> <year> 1987. </year>
Reference-contexts: To achieve our results we have developed a new linear-time planar minimum spanning tree algorithm based on graph decomposition and graph reduction. The best known MRST algorithm for arbitrary graphs, due to Cole <ref> [Cole87] </ref>, is an application of Megiddo's method of parametric search [Meg79, Meg83]. Like other algorithms for the problem (including ours), Cole's relies on the equivalence between MRST and the following parametric search problem [Cha77]. <p> The polylogarithmic slowdown in going from non-parametric to parametric algorithms remains even when using Cole's technique <ref> [Cole87] </ref>. The slowdown is largely a consequence of treating the oracle as a black box.
Reference: [Cha77] <author> R. Chandrasekaran. </author> <title> Minimal ratio spanning trees. </title> <journal> Networks, </journal> <volume> 7: </volume> <month> 335-342 </month> <year> (1977). </year>
Reference-contexts: 1 Introduction Suppose we are given an undirected graph G where each edge e has two weights a e and b e ; the b e 's are assumed to be either all negative or all positive. The minimum ratio spanning tree problem (MRST) <ref> [Cha77] </ref> is to find a spanning tree T of G such that the ratio P P e2T b e is minimized. One application of MRST arises in the design of communication networks. <p> The best known MRST algorithm for arbitrary graphs, due to Cole [Cole87], is an application of Megiddo's method of parametric search [Meg79, Meg83]. Like other algorithms for the problem (including ours), Cole's relies on the equivalence between MRST and the following parametric search problem <ref> [Cha77] </ref>. Associate with each edge e 2 G a linear weight function w e () = a e b e and let Z () denote the weight of the minimum spanning tree relative to the weights w e (). The problem is to find the root fl of Z ().
Reference: [ChTa76] <author> D. Cheriton and R.E. Tarjan. </author> <title> Finding minimum spanning trees. </title> <journal> SIAM J. Comput., </journal> <volume> 5 </volume> <month> 724-742 </month> <year> (1976). </year>
Reference-contexts: For planar graphs, a minimum spanning tree can be constructed in O (n) time <ref> [ChTa76] </ref> (see also Section 3), leading to a O (n log n) MRST algorithm. Parametric search has been the subject of a considerable amount of research in recent times because of its numerous applications to optimization and computational geometry [CoMe93, Tol93a, CEGS92, MaSc93]. <p> In the context of MRST, we need an algorithm that evaluates Z () for any fixed ; i.e., an algorithm for finding minimum spanning trees in planar graphs. As we stated earlier, Cheriton and Tarjan have devised a O (n) time algorithm for this purpose <ref> [ChTa76] </ref>; unfortunately, it is not clear how to use it directly to devise an efficient MRST procedure. In this section, we give a new linear-time (non-parametric) minimum spanning tree algorithm for planar graphs that relies on multilevel divisions and the idea of graph reduction.
Reference: [CLR90] <author> T.H. Cormen, C.E. Leiserson, and R.L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1990. </year>
Reference-contexts: Hence, each execution of step 11 adds O (r i =r i+1 ) values to L A , implying that, in step 12 jLj = O @ r i r i 3=4 1 0 nr i 3=4 1 Using standard techniques <ref> [CLR90] </ref>, we can generate all the new points in I 0 in O (log jS A (I 0 )j) time per point, at the expense of O (jS A (I 0 )j log jS A (I 0 )j) preprocessing time, for a total running time of O (jS A (I 0
Reference: [CSSS89] <author> R. Cole, J.S. Salowe, W.L. Steiger, and E. Szemeredi. </author> <title> An optimal-time algorithm for slope selection. </title> <journal> SIAM J. Comput., </journal> <volume> 18 </volume> <month> 792-810 </month> <year> (1989). </year>
Reference-contexts: That is, return a set of p s 1 -values that split the set of intersection points into p s equal sized subsets (to within 1). The subroutine Sqrt-Quantiles can be implemented using a procedure by Cole et al. <ref> [CSSS89] </ref>, which, given s distinct lines, finds the intersection point with the kth smallest -coordinate in (optimal) O (s log s) time. The quantiles we need can be found with O ( p s) calls to Cole et al.'s algorithm. The required time is O (s 3=2 log s). <p> The analysis can be easily modified to handle the case where they are not.) Theorem 4.4 The minimum ratio spanning tree problem can be solved in linear time for planar graphs. Before concluding this section, we should note that Cole et al.'s algorithm <ref> [CSSS89] </ref>, which is used extensively in Sqrt-Quantiles, uses the AKS sorting network, which makes it impractical. Cole et al. have described a much simpler algorithm whose running time is O (s log 4 s) when a O (log 2 s)-depth sorter, such as Batcher's [Bat68], is used.
Reference: [FeSl94] <author> D. Fernandez-Baca and G. Slutzki. </author> <title> Optimal parametric search on graphs of bounded tree-width. </title> <booktitle> In Proc. 4th Scandinavian Workshop on Algorithm Theory, </booktitle> <pages> pp. 155-166, </pages> <publisher> LNCS 824, Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: Subsequently it was shown that a large class of parametric optimization problems can be solved in linear time for graphs of bounded tree-width <ref> [FeSl94] </ref>. Our MRST algorithm is influenced by Frederickson's work. <p> The subintervals can be represented so as to allow O (log jL B j) = O (log r i+1 ) access time if, for example, we use balanced binary search trees (see <ref> [FeSl94] </ref> for one way of doing this). We should note that a binary search tree representation also allows efficient updates, a fact that shall be used by the search algorithm.
Reference: [FeWi91] <author> D. Fernandez-Baca and M.A. Williams. </author> <title> On matroids and hierarchical graphs. </title> <booktitle> Information Processing Letters 38 (1991), </booktitle> <pages> 117-121. </pages>
Reference-contexts: Our algorithm works in linear time for any family of graphs that admit a linear-time decomposition into regions with a sublinear number of boundary vertices and where spanning trees can be computed in linear time. Using additional ideas <ref> [FeWi91] </ref>, it also extends to other parametric problems associated with matroids on graphs whose circuits are defined to be subgraphs homeomorphic from some finite set of graphs [Mat79]. Another member of this family is the parametric minimum spanning pseudoforest problem [GaTa88].
Reference: [Fre85b] <author> G.N. Frederickson. </author> <title> Fast algorithms for shortest paths in planar graphs, with applications. </title> <journal> SIAM J. Comput. </journal> <volume> 16 </volume> <month> 1004-1022 </month> <year> (1985). </year>
Reference-contexts: Our algorithm simulates a new (non-parametric) minimum spanning tree algorithm that takes advantage of planarity to view the input graph at different levels of refinement (a technique similar to that used by Frederickson for computing shortest paths <ref> [Fre85b] </ref>). The structure of the non-parametric algorithm allows us to construct a sequence of successively faster oracles as the simulation unfolds. In the process, we will identify and contract an increasingly larger set of essential edges; i.e., edges that must be included in any minimum spanning tree at fl . <p> The same idea can be used for other parametric spanning tree problems, as discussed in Section 5. 3 2 Multilevel divisions of planar graphs Our non-parametric planar minimum spanning tree algorithm relies on an idea by Frederickson <ref> [Fre85b] </ref>, who described an algorithm that uses Lipton and Tarjan's planar separator theorem [LiTa79] to build a division of a planar graph G into regions. Each region has two types of vertices, boundary vertices and interior vertices. <p> Each region has two types of vertices, boundary vertices and interior vertices. Every interior vertex is contained in exactly one region and is adjacent only to vertices within that region. Boundary vertices are shared between at least two regions. Frederickson <ref> [Fre85b] </ref> showed that, for every positive integer r, G has an r-division, i.e., a division with fi (n=r) regions of O (r) vertices and O ( p r) boundary vertices each. <p> It is straightforward to verify that there are O (r i =r i+1 ) r i+1 -regions within every r i -region and that the total number of r i -regions is O (n=r i ) <ref> [Fre85b] </ref>. Lemma 2.1 For any given integers r 1 &gt; r 2 &gt; : : : &gt; r k , where r 1 n and r k 1, a multilevel division of G can be constructed in O (n+n P k p time. <p> Proof. We use a result by Goodrich [Goo93] to show that after a one-time-only O (n) preprocessing step, an r-division can be constructed in O (n log r= p time. The r-division is built using a two-step procedure by Frederickson <ref> [Fre85b] </ref> that uses the planar separator theorem [LiTa79]. <p> The same procedure is applied recursively to any region with more than r vertices, resulting in a division of G into fi (n=r) regions with no more than r vertices each and a total of O (n= p r) boundary vertices <ref> [Fre85b] </ref>. In the second step, the following operation is repeated until it no longer applies. Find a planar separator in any region R with more than p boundary vertices and use it to split R into subregions.
Reference: [Fre90] <author> G.N. Frederickson. </author> <title> Optimal algorithms for partitioning trees and locating p-centers in trees. </title> <type> Technical Report CSD-TR 1029, </type> <institution> Department of Computer Science, Purdue University, </institution> <month> October </month> <year> 1990. </year>
Reference-contexts: The polylogarithmic slowdown in going from non-parametric to parametric algorithms remains even when using Cole's technique [Cole87]. The slowdown is largely a consequence of treating the oracle as a black box. Frederickson <ref> [Fre90] </ref> observed that, as the search progresses, it is sometimes possible to compile information that can speed up subsequent oracle calls and used this idea to devise linear-time algorithms for a variety of location problems on trees.
Reference: [FrWi90] <author> M. Fredman and D. Willard. </author> <title> Trans-dichotomous algorithms for minimum spanning trees and shortest paths. </title> <booktitle> In Proc. 31st Annual IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1990, </year> <pages> pp. 719-725. </pages>
Reference-contexts: Faster MRST algorithms can be obtained either by using Karger, Klein, and Tarjan's O (m) randomized minimum spanning tree algorithm [KKT94], or Fredman and Willard's deterministic O (m)-time minimum spanning tree algorithm, which operates under a less restrictive model of computation <ref> [FrWi90] </ref>. For planar graphs, a minimum spanning tree can be constructed in O (n) time [ChTa76] (see also Section 3), leading to a O (n log n) MRST algorithm.
Reference: [GaTa84] <author> H.N. Gabow and R.E. Tarjan. </author> <title> Efficient algorithms for a family of ma-troid intersection problems. </title> <journal> J. Algorithms, </journal> <volume> 5 </volume> <month> 80-131 </month> <year> (1984). </year>
Reference-contexts: An algorithm for this problem on general graphs, which specializes to a linear-time algorithm for planar graphs, was given by Gabow and Tarjan <ref> [GaTa84] </ref>. Our algorithm works in linear time for any family of graphs that admit a linear-time decomposition into regions with a sublinear number of boundary vertices and where spanning trees can be computed in linear time.
Reference: [GaTa88] <author> H.N. Gabow and R.E. Tarjan. </author> <title> A linear-time algorithm for finding a minimum spanning pseudoforest. </title> <journal> Information Processing Letters, </journal> <volume> 27(5) </volume> <month> 259-263 </month> <year> (1988). </year>
Reference-contexts: Using additional ideas [FeWi91], it also extends to other parametric problems associated with matroids on graphs whose circuits are defined to be subgraphs homeomorphic from some finite set of graphs [Mat79]. Another member of this family is the parametric minimum spanning pseudoforest problem <ref> [GaTa88] </ref>.
Reference: [GGST86] <author> H.N. Gabow, Z. Galil, T. Spencer, and R.E. Tarjan. </author> <title> Efficient algorithms for finding minimum spanning trees in undirected and directed graphs. </title> <journal> Com-binatorica, </journal> <volume> 6 </volume> <month> 109-122 </month> <year> (1986). </year>
Reference-contexts: The best deterministic minimum spanning tree algorithm achieves T MST (n; m) = O (m log fi (m; n)) <ref> [GGST86] </ref>, resulting in a O (m log fi (m; n) log n) for the general minimum ratio spanning tree problem.
Reference: [Goo93] <author> M.T. Goodrich. </author> <title> Planar separators and parallel polygon triangulation. </title> <type> Manuscript. </type> <note> A preliminary version appeared in Proceedings of the 24th Annual Symposium on Theory of Computing, </note> <year> 1992, </year> <pages> pp. 507-516. </pages>
Reference-contexts: Note: A similar result is claimed by Klein et al. [KRRS94]; we include a proof for completeness. Proof. We use a result by Goodrich <ref> [Goo93] </ref> to show that after a one-time-only O (n) preprocessing step, an r-division can be constructed in O (n log r= p time. The r-division is built using a two-step procedure by Frederickson [Fre85b] that uses the planar separator theorem [LiTa79]. <p> For this, let the n 0 boundary vertices have weight 1=n 0 , and let interior vertices have weight zero. The key to implementing Frederickson's algorithm efficiently is to find the required separators quickly. Given O (n) preprocessing time, an algorithm by Goodrich <ref> [Goo93] </ref> builds a data structure that allows one to compute a separator (weighted or not) in O ( p n log n) time. Within the same time bound, similar data structures can be set up for each region defined by the separator [Goo93]. <p> O (n) preprocessing time, an algorithm by Goodrich <ref> [Goo93] </ref> builds a data structure that allows one to compute a separator (weighted or not) in O ( p n log n) time. Within the same time bound, similar data structures can be set up for each region defined by the separator [Goo93].
Reference: [Gus83] <author> D. Gusfield. </author> <title> Parametric combinatorial computing and a problem in program module allocation. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 30(3) </volume> <month> 551-563 </month> <year> (1983). </year>
Reference-contexts: In what follows, it is not necessary to assume that the b e 's are all positive or all negative. The first problem, which arises in certain types of sensitivity analysis <ref> [Gus83] </ref>, is finding the next breakpoint of Z (); i.e., given a real number 1 find the smallest fl &gt; 1 such that fl is a breakpoint of Z (). <p> The algorithms for these problems are nearly identical to the MRST algorithm, except for the oracle. For the first problem, given a value 0 , the oracle must determine whether the solution that is optimal at 1 is the same as the one that is optimal at 0 <ref> [Gus83] </ref>. If so, 0 fl ; 20 otherwise, 0 &gt; fl . For the problem of maximizing Z, 0 fl if the slope of Z at 0 is positive [CoMe93].
Reference: [KKT94] <author> D.R. Karger, P.N. Klein, and R.E. Tarjan. </author> <title> A randomized linear-time algorithm for finding minimum spanning trees. </title> <type> Manuscript. </type> <note> A preliminary version appeared in STOC 94. </note>
Reference-contexts: Faster MRST algorithms can be obtained either by using Karger, Klein, and Tarjan's O (m) randomized minimum spanning tree algorithm <ref> [KKT94] </ref>, or Fredman and Willard's deterministic O (m)-time minimum spanning tree algorithm, which operates under a less restrictive model of computation [FrWi90]. For planar graphs, a minimum spanning tree can be constructed in O (n) time [ChTa76] (see also Section 3), leading to a O (n log n) MRST algorithm.
Reference: [KRRS94] <author> Klein, S. Rao, M. Rauch, and S. Subramanian. </author> <title> Faster shortest-path algorithms for planar graphs. </title> <booktitle> In Proc. STOC 94. </booktitle>
Reference-contexts: If we choose r k = fi and r i = fir i+1 , 1 i k 1, for some constant fi &gt; 1, the total time is O (n). Note: A similar result is claimed by Klein et al. <ref> [KRRS94] </ref>; we include a proof for completeness. Proof. We use a result by Goodrich [Goo93] to show that after a one-time-only O (n) preprocessing step, an r-division can be constructed in O (n log r= p time.
Reference: [Kru56] <author> J.B. Kruskal. </author> <title> On the shortest spanning tree of a graph and the traveling salesman problem. </title> <journal> Proc. Amer. Math. Soc., </journal> <volume> 7 </volume> <month> 48-50 </month> <year> (1956). </year>
Reference-contexts: We will show, however, that a linear-time minimum spanning tree algorithm can be obtained even when a slower minimum spanning tree algorithm (e.g., Kruskal's <ref> [Kru56, Tar83] </ref>) is used in that step. Lemma 3.2 Let G be a graph and let G 0 be the graph obtained from G by calling Reduce (A; C), for some region A of G.
Reference: [Len87] <author> T. Lengauer. </author> <title> Efficient algorithms for finding minimum spanning forests in hierarchically defined graphs. </title> <journal> J. Algorithms, </journal> <volume> 8 </volume> <month> 260-284 </month> <year> (1987). </year>
Reference-contexts: Reduce also returns the total cost C of the edges it contracts, these being the edges that participate in every minimum spanning tree of G 2 . The procedure is essentially the same as an algorithm by Lengauer <ref> [Len87] </ref>; in its description, we will write that an edge e is contractible if * it has a degree-one endpoint that is not a boundary vertex, or * it shares a degree-two non-boundary vertex with another edge f such that cost (e) cost (f ). <p> The size bound on the reduction of G [A] and the fact that Reduce's deletions and contractions can be done in time linear in the number of vertices and edges were proved by Lengauer <ref> [Len87] </ref>. <p> Then, every edge in the minimum spanning tree T 0 of G 0 is in a minimum spanning tree of G. Moreover, the cost of a minimum spanning tree for G equals cost (T 0 ) + C. Proof. Using well-known properties of minimum spanning trees <ref> [Len87, Tar83] </ref>, one can show that every contractible edge is essential, as it is included in every minimum spanning tree of G, and that every discarded edge is nonessential in that it participates in no minimum spanning tree of the graph.
Reference: [LiTa79] <author> R.J. Lipton and R.E. Tarjan. </author> <title> A separator theorem for planar graphs. </title> <journal> SIAM J. Appl. Math, </journal> <volume> 36 </volume> <month> 177-189 </month> <year> (1979). </year>
Reference-contexts: The same idea can be used for other parametric spanning tree problems, as discussed in Section 5. 3 2 Multilevel divisions of planar graphs Our non-parametric planar minimum spanning tree algorithm relies on an idea by Frederickson [Fre85b], who described an algorithm that uses Lipton and Tarjan's planar separator theorem <ref> [LiTa79] </ref> to build a division of a planar graph G into regions. Each region has two types of vertices, boundary vertices and interior vertices. Every interior vertex is contained in exactly one region and is adjacent only to vertices within that region. <p> Proof. We use a result by Goodrich [Goo93] to show that after a one-time-only O (n) preprocessing step, an r-division can be constructed in O (n log r= p time. The r-division is built using a two-step procedure by Frederickson [Fre85b] that uses the planar separator theorem <ref> [LiTa79] </ref>.
Reference: [MaSc93] <author> J. Matousek and O. Schwartzkopf. </author> <title> A deterministic algorithm for the three-dimensional diameter problem. </title> <booktitle> In Proceedings of 25th Annual Symposium on Theory of Computing, </booktitle> <pages> pp. </pages> <month> 478-484 </month> <year> (1993). </year>
Reference-contexts: Parametric search has been the subject of a considerable amount of research in recent times because of its numerous applications to optimization and computational geometry <ref> [CoMe93, Tol93a, CEGS92, MaSc93] </ref>. In the context of optimization problems such as MRST, the application of Megiddo's technique tends to follow a common pattern.
Reference: [Mat79] <author> L.R. Matthews. </author> <title> Infinite subgraphs as matroid circuits. </title> <journal> Journal of Combinatorial Theory, Series B, </journal> <volume> 27 (1979), </volume> <pages> 260-273. </pages>
Reference-contexts: Using additional ideas [FeWi91], it also extends to other parametric problems associated with matroids on graphs whose circuits are defined to be subgraphs homeomorphic from some finite set of graphs <ref> [Mat79] </ref>. Another member of this family is the parametric minimum spanning pseudoforest problem [GaTa88].
Reference: [Meg79] <author> N. Megiddo. </author> <title> Combinatorial optimization with rational objective functions. </title> <journal> Math. Oper. Res., </journal> <volume> 4 </volume> <month> 414-424 </month> <year> (1979). </year>
Reference-contexts: To achieve our results we have developed a new linear-time planar minimum spanning tree algorithm based on graph decomposition and graph reduction. The best known MRST algorithm for arbitrary graphs, due to Cole [Cole87], is an application of Megiddo's method of parametric search <ref> [Meg79, Meg83] </ref>. Like other algorithms for the problem (including ours), Cole's relies on the equivalence between MRST and the following parametric search problem [Cha77]. <p> Thus, in order to make the search efficient, we must control the size of this interval; this is accomplished using an oracle, a procedure that can determine the position of any given value 0 with respect to fl <ref> [Meg79, Meg83] </ref>. One of the key features of our algorithm is the way in which the oracle and the lifting steps interact. <p> As a result, Z () is a piecewise-linear concave function <ref> [Meg79] </ref>, and, assuming the b e 's are nonnegative, the slope of every segment of Z () will be nonpositive. We thus have three possibilities [Meg83]: * Z ( 0 ) = 0. Then, 0 = fl * Z ( 0 ) &gt; 0.
Reference: [Meg83] <author> N. Megiddo. </author> <title> Applying parallel computation algorithms in the design of serial algorithms. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 30(4) </volume> <pages> 852-865, </pages> <year> 1983. </year>
Reference-contexts: The number a e represents the cost of building link e, while b e represents the time required to build that link. The goal is to find a tree that minimizes the ratio of total cost over construction time. Other applications of MRST are given elsewhere <ref> [CMV89, Meg83] </ref>. <p> To achieve our results we have developed a new linear-time planar minimum spanning tree algorithm based on graph decomposition and graph reduction. The best known MRST algorithm for arbitrary graphs, due to Cole [Cole87], is an application of Megiddo's method of parametric search <ref> [Meg79, Meg83] </ref>. Like other algorithms for the problem (including ours), Cole's relies on the equivalence between MRST and the following parametric search problem [Cha77]. <p> Thus, in order to make the search efficient, we must control the size of this interval; this is accomplished using an oracle, a procedure that can determine the position of any given value 0 with respect to fl <ref> [Meg79, Meg83] </ref>. One of the key features of our algorithm is the way in which the oracle and the lifting steps interact. <p> L I, a number s, and an oracle Oracle, return an interval I 0 I such that fl 2 I 0 and jL " I 0 j s, and discard every point in L lying outside of I 0 . 14 Narrow is implemented using a standard technique (see, e.g., <ref> [Meg83] </ref>): Choose a median element of L and apply Oracle to it; depending on the outcome of the call, either resolve all elements of L larger than the median or all elements smaller than the median. <p> As a result, Z () is a piecewise-linear concave function [Meg79], and, assuming the b e 's are nonnegative, the slope of every segment of Z () will be nonpositive. We thus have three possibilities <ref> [Meg83] </ref>: * Z ( 0 ) = 0. Then, 0 = fl * Z ( 0 ) &gt; 0. Then, 0 &lt; fl . 18 * Z ( 0 ) &lt; 0. Then, 0 &gt; fl .
Reference: [Tar83] <author> R.E. Tarjan. </author> <title> Data Structures and Network Algorithms. </title> <institution> Society for Industrial and Applied Mathematics, </institution> <year> 1983. </year>
Reference-contexts: We will show, however, that a linear-time minimum spanning tree algorithm can be obtained even when a slower minimum spanning tree algorithm (e.g., Kruskal's <ref> [Kru56, Tar83] </ref>) is used in that step. Lemma 3.2 Let G be a graph and let G 0 be the graph obtained from G by calling Reduce (A; C), for some region A of G. <p> Then, every edge in the minimum spanning tree T 0 of G 0 is in a minimum spanning tree of G. Moreover, the cost of a minimum spanning tree for G equals cost (T 0 ) + C. Proof. Using well-known properties of minimum spanning trees <ref> [Len87, Tar83] </ref>, one can show that every contractible edge is essential, as it is included in every minimum spanning tree of G, and that every discarded edge is nonessential in that it participates in no minimum spanning tree of the graph.
Reference: [Tol93a] <author> S. Toledo. </author> <title> Maximizing non-linear convex functions in fixed dimension. In Complexity in Numerical Computations, </title> <type> P.M. Pardalos, </type> <note> ed., World Scientific Press 1993. A preliminary version appeared in FOCS 92. 23 </note>
Reference-contexts: Parametric search has been the subject of a considerable amount of research in recent times because of its numerous applications to optimization and computational geometry <ref> [CoMe93, Tol93a, CEGS92, MaSc93] </ref>. In the context of optimization problems such as MRST, the application of Megiddo's technique tends to follow a common pattern.
References-found: 33

