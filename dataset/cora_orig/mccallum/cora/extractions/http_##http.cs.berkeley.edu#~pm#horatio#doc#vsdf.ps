URL: http://http.cs.berkeley.edu/~pm/horatio/doc/vsdf.ps
Refering-URL: http://http.cs.berkeley.edu/~pm/horatio/html/sfm/index.html
Root-URL: http://www.cs.berkeley.edu
Email: Email pm@cs.berkeley.edu  
Title: The Variable State Dimension Filter  
Author: Philip F. McLauchlan, 
Address: Berkeley, CA 94720-2016, USA.  
Affiliation: EECS Computer Science Division, University of California at Berkeley,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Y. Bar-Shalom and T. E. Fortmann. </author> <title> Tracking and Data Association. </title> <publisher> Academic Press, </publisher> <year> 1988. </year>
Reference-contexts: Thus scene shape, camera pose for each image and camera calibration are to be recovered. Simplified versions of the VSDF for the above and other examples can then be easily derived. 2 Notation We shall use the state-vector/covariance notation as used for recursive filtering in <ref> [1] </ref>. We partition the state vector x of unknown parameters into three parts: x = @ x d 1 where 1. x f contains the calibration parameters of the camera (s), which are assumed to be constant. <p> It dynamically mixes Gauss-Newton and gradient-descent techniques. We shall develop the L-M algorithm for a simple case in our notation, which is derived from filtering theory <ref> [1] </ref>, and then show how in our particular case the computation may be accelerated.
Reference: [2] <author> G. H. Golub and C. F. van Loan. </author> <title> Matrix Computations. </title> <publisher> The John Hopkins University Press, </publisher> <address> Baltimore, MD, </address> <year> 1989. </year>
Reference-contexts: Obviously B must be a square matrix. A small set of elementary in-place matrix operations are employed to implement the core of the VSDF algorithm. These operations are as follows:- 2 1. Cholesky factorization A Chol (A). It is trivial to implement in-place Cholesky <ref> [2] </ref>, simply by ordering the calculations appropriately. If the input matrix is stored as a packed symmetric matrix, e.g. by storing only its lower triangle, then the result is an element by element replacement. 2.
Reference: [3] <author> R.I. </author> <title> Hartley. Euclidean reconstruction from uncalibrated views. </title> <booktitle> In Applications of Invariance in Computer Vision, </booktitle> <pages> pages 237-256. </pages> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: Here we shall present the VSDF in detail, and demonstrate how to implement some simple algorithms using it. The VSDF is a batch/recursive estimation algorithm. The first few images are combined using a standard batch algorithm (Levenberg-Marquardt) similar to the approaches used in photogrammetry <ref> [9, 3] </ref>. Subsequently updates for new image data are performed recursively. Recursive methods are essential for online robotic applications, but also we have found that an initial batch process is necessary to stabilise the subsequent recursive computation. <p> This is similar to the photogrammetric methods of solving the so-called "normal equations" [9] and also the algorithm used by Hartley in 3D projective scene reconstruction <ref> [3] </ref>. It is the most usual version used in our own research, because we typically use the VSDF in batch mode only for a small number of images, before switching to recursive mode. Firstly we update ^ x f .
Reference: [4] <author> P. F. McLauchlan. </author> <title> An efficient algorithm for recursively adjusting photogrammetric measurements. </title> <booktitle> In Optical 3-D Measurement Techniques III, </booktitle> <pages> pages 108-116. Wichmann, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: 1 Introduction The variable state dimension filter (VSDF) has been developed <ref> [6, 5, 4, ?] </ref> for a variety of camera calibration and scene reconstruction applications. It is designed as a statistical tool for efficiently combining data from multiple images, without any assumptions concerning scene geometry or camera/scene motion. <p> Calibration of a camera mounted on a pan/tilt platform [6]. 2. 3D reconstruction of a scene up to a projective, affine or similarity transformation, under different assumptions concerning the imaging geometry [5]. 3. Calibration of a camera mounted on a robot arm, combined with metric reconstruction of the scene <ref> [4] </ref>. 4. Calibration of a stereo head/eye platform under varying vergence angles [?]. We shall consider here the most general case of 3D reconstruction, where all parameters necessary for the computation, including camera calibration parameters, are to be recovered.
Reference: [5] <author> P.F. McLauchlan and D.W. Murray. </author> <title> A unifying framework for structure and motion recovery from image sequences. </title> <booktitle> In Proc. 5th Int'l Conf. on Computer Vision, </booktitle> <address> Boston, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: 1 Introduction The variable state dimension filter (VSDF) has been developed <ref> [6, 5, 4, ?] </ref> for a variety of camera calibration and scene reconstruction applications. It is designed as a statistical tool for efficiently combining data from multiple images, without any assumptions concerning scene geometry or camera/scene motion. <p> We have demonstrated in previous work how the VSDF can be used for the following special cases: 1. Calibration of a camera mounted on a pan/tilt platform [6]. 2. 3D reconstruction of a scene up to a projective, affine or similarity transformation, under different assumptions concerning the imaging geometry <ref> [5] </ref>. 3. Calibration of a camera mounted on a robot arm, combined with metric reconstruction of the scene [4]. 4. Calibration of a stereo head/eye platform under varying vergence angles [?]. <p> We select a temporal window k w , and ignore blocks of matrices A dd , A df and A dl older than k w frames. The value k w = 0 corresponds to the "Simple" update mode in <ref> [5] </ref>, and k w = 1 corresponds to the "VSDF" update mode. Thus we encapsulate these special cases into a general scheme for controlling how large a history of frames to use when updating. Larger values for k w improve accuracy at the expense of speed. <p> The horizontal and vertical focal lengths are 300 and 400 units respectively. Gaussian noise with standard deviation 1 pixel has been added. The plots for k w = 0 and k w = 1 nearly coincide, bearing out the conclusion in <ref> [5] </ref> that there is little difference between the accuracy of projective reconstructions 11 values of temporal window size k w , the accuracy of recursive reconstruction improves. n k w = 0 k w = 1 k w = 10 k w = 25 Direct 20 16.62 17.30 37.76 195.50 18.62
Reference: [6] <author> P.F. McLauchlan and D.W. Murray. </author> <title> Active camera calibration for a Head-Eye platform using the variable State-Dimension filter. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 18(1) </volume> <pages> 15-22, </pages> <year> 1996. </year>
Reference-contexts: 1 Introduction The variable state dimension filter (VSDF) has been developed <ref> [6, 5, 4, ?] </ref> for a variety of camera calibration and scene reconstruction applications. It is designed as a statistical tool for efficiently combining data from multiple images, without any assumptions concerning scene geometry or camera/scene motion. <p> We have demonstrated in previous work how the VSDF can be used for the following special cases: 1. Calibration of a camera mounted on a pan/tilt platform <ref> [6] </ref>. 2. 3D reconstruction of a scene up to a projective, affine or similarity transformation, under different assumptions concerning the imaging geometry [5]. 3. Calibration of a camera mounted on a robot arm, combined with metric reconstruction of the scene [4]. 4.
Reference: [7] <author> P.A.Beardsley, A.Zisserman, and D.W.Murray. </author> <title> Sequential updating of projective and affine struc-ture from motion. </title> <journal> International Journal of Computer Vision, </journal> <volume> 23(3), </volume> <year> 1997. </year>
Reference-contexts: R ci (k) 1 H l ci (k); for i = 1; : : : ; n: A typical approach in recursive reconstruction is to have Kalman filters estimating the structure of each feature, with the motion estimates being computed separately from the image data and the previous structure estimates <ref> [10, 7] </ref>. This approach is equivalent to setting k w = 0 in the VSDF, i.e. ignoring old data when computing the motion estimates. In the VSDF we can achieve higher accuracy by setting k w to some non-zero value.
Reference: [8] <author> W.H. Press, B.P. Flannery, S.A. Teukolsky, and W.T. Vetterling. </author> <title> Numerical Recipes in C. </title> <publisher> Cam-bridge University Press, </publisher> <year> 1988. </year>
Reference-contexts: by the VSDF, due to the block-diagonal structure of the matrices A dd and C in Eq 2, being composed of the blocks A dd (1); : : : ; A dd (k) and C 1 ; : : :; C n respectively. 3.1 The Levenberg-Marquardt algorithm The Levenberg-Marquardt algorithm <ref> [8] </ref> is a general minimization algorithm for the case when derivatives of the objective function are known. It dynamically mixes Gauss-Newton and gradient-descent techniques. <p> This version is a generalization of Levenberg-Marquardt as it is normally presented (e.g. <ref> [8] </ref>) in that we incorporate vector measurements with covariances, rather than scalar measurements with variances, and incorporate prior knowledge in the form of the initial covariance matrix P 0 .
Reference: [9] <editor> C.C. Slama, C. Theurer, and S.W. Henriksen, editors. </editor> <title> Manual of Photogrammetry. </title> <journal> American Society of Photogrammetry, </journal> <year> 1980. </year>
Reference-contexts: Here we shall present the VSDF in detail, and demonstrate how to implement some simple algorithms using it. The VSDF is a batch/recursive estimation algorithm. The first few images are combined using a standard batch algorithm (Levenberg-Marquardt) similar to the approaches used in photogrammetry <ref> [9, 3] </ref>. Subsequently updates for new image data are performed recursively. Recursive methods are essential for online robotic applications, but also we have found that an initial batch process is necessary to stabilise the subsequent recursive computation. <p> Using the corrections computed for x f and x d and the block-diagonal shape of A ll will allow the correction for x l to be computed in linear time with n. This is similar to the photogrammetric methods of solving the so-called "normal equations" <ref> [9] </ref> and also the algorithm used by Hartley in 3D projective scene reconstruction [3]. It is the most usual version used in our own research, because we typically use the VSDF in batch mode only for a small number of images, before switching to recursive mode.
Reference: [10] <author> S. M. Smith. ASSET-2: </author> <title> Real-Time Motion Segmentation and Shape Tracking. </title> <booktitle> In Proc. 5th Int'l Conf. on Computer Vision, Boston, </booktitle> <pages> pages 237-244, </pages> <year> 1995. </year>
Reference-contexts: R ci (k) 1 H l ci (k); for i = 1; : : : ; n: A typical approach in recursive reconstruction is to have Kalman filters estimating the structure of each feature, with the motion estimates being computed separately from the image data and the previous structure estimates <ref> [10, 7] </ref>. This approach is equivalent to setting k w = 0 in the VSDF, i.e. ignoring old data when computing the motion estimates. In the VSDF we can achieve higher accuracy by setting k w to some non-zero value.
References-found: 10

