URL: http://www.cs.cornell.edu/home/migod/papers/mmp.ps
Refering-URL: http://www.cs.cornell.edu/home/migod/papersIndex.html
Root-URL: 
Title: Formal Specification in Metamorphic Programming  
Author: David A. Penny, Richard C. Holt, Michael W. Godfrey 
Address: Toronto  
Affiliation: Department of Computer Science University of  
Abstract: Formal specification methods have not been embraced wholeheartedly by the software development industry. We believe that a large part of industry's reluctance is due to semantic gaps that are encountered when attempting to integrate formal specification with other stages of the software development process. Semantic gaps necessitate a dramatic shift in a programmer's mode of thought, and undergoing many such shifts during the development of a software system is inefficient. We identify semantic gaps in the software development process and show how they can be minimized by an approach called metamorphic programming that operates in-the-large and in-the-small. The main contribution that metamorphic programming makes to formal specification is to clarify the ways in which specifications can be merged smoothly into the software development lifecycle. 
Abstract-found: 1
Intro-found: 1
Reference: [Bjorner90] <editor> D. Bjorner, C. A. R. Hoare and H. Langmaack (eds.), </editor> <booktitle> VDM '90: VDM and Z Formal Methods in Software Development Proc. of the Third International Symposium of VDM Europe 1990, </booktitle> <address> Kiel FRG, </address> <publisher> Springer-Verlag LNCS #428, </publisher> <month> April </month> <year> 1990. </year>
Reference: [CIP-87] <author> The Munich Project CIP Volume 2: </author> <title> The Program Transformation System CIP-S, </title> <publisher> Springer-Verlag LNCS #292, </publisher> <year> 1987. </year>
Reference: [Coad90] <author> Peter Coad and Edward Your-don, </author> <title> Object-Oriented Analysis, </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs NJ, </address> <year> 1990. </year>
Reference: [DeMan90] <author> Jozef De Man, </author> <title> "Making Languages More Powerful by Removing Limitations", </title> <booktitle> Proc. of ACM SIGSOFT International Workshop on Formal Methods in Software Development, ACM Software Engineering Notes, </booktitle> <volume> vol. 15, no. 4, </volume> <month> September </month> <year> 1990. </year>
Reference: [DiGiovanni90] <author> R. Di Giovanni and P. L. Iachini, </author> <title> "HOOD and Z for the Development of Complex Software Systems", </title> <note> in [Bjorner et al 90]. </note>
Reference: [Genesereth87] <author> Michael R. Genesereth and N. Nilsson, </author> <booktitle> Logical Foundations of Artificial Intelligence, </booktitle> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos CA, </address> <year> 1987. </year> <month> - 20 </month> - 
Reference: [Godfrey88] <author> Michael W. Godfrey, </author> <title> Toward Formal Specification of Operating System Modules, M.Sc. </title> <type> thesis, </type> <institution> Dept. of Computer Science, Univ. of Toronto, </institution> <month> May </month> <year> 1988. </year>
Reference: [Godfrey90] <author> Michael W. Godfrey and Richard C. Holt, </author> <title> "Spectur A Specification Language for the Programmer", </title> <type> Technical Report CSRI-241, </type> <institution> Univ. of Toronto, </institution> <month> June </month> <year> 1990. </year>
Reference: [Goldberg89] <author> A. Goldberg and D. Robson, </author> <title> Smalltalk-80: The Language, </title> <publisher> Addison-Wesley, </publisher> <address> Reading MA, </address> <year> 1989. </year>
Reference: [Guttag85] <author> J. V. Guttag, J. J. Horning, and J. M. Wing, </author> <title> "Larch in Five Easy Pieces", </title> <type> Technical Report 5, </type> <institution> Digital Equipment Corporation Systems Research Center, </institution> <month> July </month> <year> 1985. </year>
Reference: [Hehner84] <author> E. C. R. Hehner, </author> <title> "Predicative Programming, parts 1 and 2", </title> <journal> Communications of the ACM, </journal> <volume> vol. 27, no. 2, </volume> <month> February </month> <year> 1984. </year>
Reference: [Holt88a] <author> R. C. Holt and J. R. Cordy, </author> <title> "The Turing Programming Language", </title> <journal> Communications of the ACM, </journal> <volume> vol. 31, no. 12, </volume> <month> December </month> <year> 1988. </year>
Reference: [Holt88b] <author> R. C. Holt, P. A. Matthews, J. A. Rosselet, and J. R. Cordy, </author> <title> The Turing Programming Language: Design and Definition, </title> <publisher> Prentice Hall International, </publisher> <year> 1988. </year>
Reference: [Holt91] <author> R. C. Holt, Terry Stanhope and George Lausman, </author> <title> "Object Oriented Computing: Looking Forward to Year 2000", </title> <type> ITRC Tech. Report TR-9101, </type> <institution> Information Technology Research Centre, Univ. of Toronto, </institution> <month> April </month> <year> 1991. </year>
Reference: [ISPW-4-88] <editor> Proc. </editor> <booktitle> of the Fourth International Software Process Workshop ACM SIGSOFT Engineering Notes, </booktitle> <volume> vol. 14, no. 4, </volume> <month> June </month> <year> 1988. </year>
Reference-contexts: Software Development Environment Most professional software developers make extensive use of support tools, and there is a large amount of work in progress to integrate tools into software development environments <ref> [ISPW-4-88] </ref>. For formal specifications to be used widely in software development, they must be supported by tools that are well-integrated into these environments. The metamorphic approach to programming provides a basis for accomplishing this integration.
Reference: [IWSCM-2-89] <editor> Proc. </editor> <booktitle> of the Second International Workshop on Software Configuration Management, ACM SIGSOFT Engineering Notes, </booktitle> <volume> vol. 17, no. 7, </volume> <month> November </month> <year> 1989. </year>
Reference-contexts: Structural discontinuities are a particularly pernicious form of semantic gap, and a key goal of metamorphic programming in-the-large is to minimize them. Of the many problems to be solved in programming in-the-large - 16 - The decomposition of the MiniTunis operating system. ([ISPW-4-88], <ref> [IWSCM-2-89] </ref>), we shall concentrate on this particular one, and its relationship to formal specifications. structure of the MiniTunis operating system, which is a model operating system used primarily for teaching about operating systems. MiniTunis [Penny 88] is essentially a simplified variant of UNIX.
Reference: [Jones90] <author> C. B. Jones, </author> <title> Systematic Software Development Using VDM, Second Edition, </title> <publisher> Prentice Hall International, </publisher> <year> 1990. </year>
Reference: [Meyer85] <author> B. Meyer, </author> <title> "On Formalism in Specification", </title> <journal> IEEE Software, </journal> <volume> vol. 2, no. 1, </volume> <month> January </month> <year> 1985. </year>
Reference: [Morgan84] <author> C. Morgan and B. Sufrin, </author> <title> "Specification of the UNIX Filing System", </title> <journal> IEEE Trans. on Software Engineering, </journal> <volume> vol. 10, no. 2, </volume> <month> March </month> <year> 1984, </year> <pages> pp 128-142. </pages>
Reference: [Morgan90] <author> Carroll Morgan, </author> <title> Programming from Specifications, </title> <publisher> Prentice Hall International, </publisher> <year> 1990. </year>
Reference: [Neumann89] <author> Peter G. Neumann, </author> <title> "Flaws in Specifications and What To Do About Them", </title> <booktitle> Proc. of the Fifth International Workshop on Software Specification and Design, ACM SIGSOFT Engineering Notes, </booktitle> <volume> vol. 14, no. 3, </volume> <month> May </month> <year> 1989. </year>
Reference: [Parnas86] <author> David L. Parnas and Paul C. Clements, </author> <title> "A Rational Design Process: How and Why to Fake it", </title> <journal> IEEE Trans. on Software Engineering, </journal> <volume> vol. SE-12, no. 2, </volume> <month> February </month> <year> 1986. </year>
Reference: [Penny88] <author> David A. Penny and Richard C. Holt, </author> <title> "The Concurrent Programming of Operating Systems using the Turing Plus Language", Course Notes, </title> <institution> Dept. of Computer Science, Univ. of Toronto, </institution> <year> 1988. </year>
Reference: [Stephenson90] <author> C. Stephenson and R. C. Holt, </author> <booktitle> "Changing Trends in High School Programming", Educational Computing Organization of Ontario Output, </booktitle> <volume> vol. 11, no. 2, </volume> <month> July </month> <year> 1990. </year>
Reference: [Spivey89] <author> J. M. Spivey, </author> <title> The Z Notation: A Reference Manual, </title> <publisher> Prentice Hall International, </publisher> <year> 1989. </year>
Reference: [Wing90] <author> Jeannette M. Wing, </author> <title> "A Specifier's Introduction to Formal Methods", </title> <journal> IEEE Computer, </journal> <volume> vol. 23, no. 9, </volume> <month> September </month> <year> 1990. </year>
References-found: 26

