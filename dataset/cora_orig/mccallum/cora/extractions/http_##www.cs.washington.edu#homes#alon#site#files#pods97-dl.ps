URL: http://www.cs.washington.edu/homes/alon/site/files/pods97-dl.ps
Refering-URL: http://www.cs.washington.edu/homes/alon/site/PaperAbstractPresentation_bib23.html
Root-URL: 
Email: beeri@cs.huji.ac.il  levy@research.att.com  mcr@lri.lri.fr  
Title: Rewriting Queries Using Views in Description Logics  
Author: Catriel Beeri Alon Y. Levy Marie-Christine Rousset 
Address: Jerusalem, Israel  Murray Hill, NJ  Orsay, France  
Affiliation: Hebrew University Institute of Computer Science,  AI Principles Research Department AT&T Labs  L.R.I. U.R.A C.N.R.S University of Paris-Sud  
Abstract: The problem of rewriting queries using views is to find a query expression that uses only a set of views V and is equivalent to (or maximally contained in) a given query Q. Rewriting queries using views is important for query optimization and for applications such as information integration and data warehousing. Description logics are a family of logics that were developed for modeling complex hierarchical structures, and can also be viewed as a query language with an interesting tradeoff between complexity and expressive power. We consider the problem of rewriting queries using views expressed in description logics and conjunctive queries over description logics. We show that if the view definitions do not contain existential variables, then it is always possible to find a rewriting that is a union of conjunctive queries, and furthermore, this rewriting produces the maximal set of answers possible from the views. If the views have existential variables, the rewriting may be recursive. We present an algorithm for producing a recursive rewriting, that is guaranteed to be a maximal one when the underlying database forms a tree of constants. We show that in general, it is not always be possible to find a maximal rewriting. 
Abstract-found: 1
Intro-found: 1
Reference: [AKS96] <author> Yigal Arens, Craig A. Knoblock, and Wei-Min Shen. </author> <title> Query reformulation for dynamic information integration. </title> <journal> International Journal on Intelligent and Cooperative Information Systems, </journal> <volume> (6) </volume> 2/3:99-130, June 1996. 
Reference-contexts: Several systems based on DL's have been built (e.g., classic [BBM + 91], loom [Mac88], back [Pet91], kris [BH91]), and they have been used in several applications such as configuration management [WWB + 93] natural language processing [WAF + 93]), and information integration <ref> [LRO96, AKS96] </ref>. There are two perspectives on the use of description logics in database systems. The first is the use of description logics as a data modeling language.
Reference: [BBM + 91] <author> R. J. Brachman, A. Borgida, D. L. McGuinness, P. F. Patel-Schneider, and L. A. Resnick. </author> <title> Living with classic: When and how to use a kl-one-like language. </title> <editor> In John Sowa, editor, </editor> <booktitle> Principles of Semantic Networks, </booktitle> <pages> pages 401-456. </pages> <publisher> Morgan Kauf-mann, </publisher> <address> San Mateo, CA, </address> <year> 1991. </year>
Reference-contexts: Several systems based on DL's have been built (e.g., classic <ref> [BBM + 91] </ref>, loom [Mac88], back [Pet91], kris [BH91]), and they have been used in several applications such as configuration management [WWB + 93] natural language processing [WAF + 93]), and information integration [LRO96, AKS96]. There are two perspectives on the use of description logics in database systems.
Reference: [BDS93] <author> Martin Buchheit, Francesco M. Donini, and Andrea Schaerf. </author> <title> Decidable reasoning in terminological knowledge representation systems. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 1 </volume> <pages> 109-138, </pages> <year> 1993. </year>
Reference-contexts: The questions of de-cidability and complexity of subsumption in different description logics have been studied extensively in the description logic literature. In particular, algorithms and complexity results for subsumption in Classic are given in [BPS94], and for ALCN R in <ref> [BDS93] </ref>. Description Logic Systems: A description logic system provides two main services, based on the formal semantics of the underlying description logic. First, it provides algorithms for testing subsumption between concepts. <p> The bounds of [LMSS95] or the containment algorithms used there do not apply in the cases considered here. The theorems we describe below provide the applicable bounds. To test the candidate rewritings we use algorithms for subsumption and for knowledge-base satisfiability developed for description logics <ref> [BPS94, BDS93] </ref>. Furthermore, since the rewritings are unions of conjunctive queries, we can use the algorithm for containment of non-recursive datalog programs over ALCN R terminologies [LR96a], to test whether the maximally-contained rewriting is also an equivalent rewriting. <p> Consequently, subsumption algorithms alone are not sufficient to test query containment. The following theorem establishes a bound on the size of the rewriting of the query using the views. Given a conjunctive query using the views, the algorithm of Buchheit et al. <ref> [BDS93] </ref> can be used to check whether it is contained in the query. Theorem 3.3: Let Q be a query of the form q (X) : C (X) where C is a description in core-Classic. <p> atoms. 2 In order to check whether a conjunctive query Q 0 using V is contained in the query, we consider the sub-goals of Q 0 as a database and check whether the head of Q is entailed from that database using a slight modification of the algorithm described in <ref> [BDS93] </ref>. The crux of the proof is based on showing that if the query can be entailed, then it can be entailed by a database of bounded size, where the bound depends only on the terminology and the size of the query.
Reference: [BH91] <author> F. Baader and B. </author> <title> Hollunder. A terminological knowledge representation system with complete inference algorithm. </title> <booktitle> In In Proceedings of the Workshop on Processing Declarative Knowledge, PDK-91, Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 67-86. </pages> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: Several systems based on DL's have been built (e.g., classic [BBM + 91], loom [Mac88], back [Pet91], kris <ref> [BH91] </ref>), and they have been used in several applications such as configuration management [WWB + 93] natural language processing [WAF + 93]), and information integration [LRO96, AKS96]. There are two perspectives on the use of description logics in database systems. <p> We now define formally the syntax and semantics of the description logics considered in this paper. We consider two description logics: (1) ALCN R, which is the most expressive description logic underlying an implemented system <ref> [BH91] </ref>, and (2) a subset of the Classic description logic, which is the most powerful description logic in which subsumption is known to be polynomial, and is used in several large-scale applications (e.g., [WWB + 93]).
Reference: [Bor95] <author> Alex Borgida. </author> <title> Description logics in data management. </title> <journal> IEEE Trans. on Know. and Data Engineering, </journal> <volume> 7(5) </volume> <pages> 671-682, </pages> <year> 1995. </year>
Reference-contexts: While data modeling has been a traditional research area in databases, a substantial part of this research, with the exception of research on database design, has concentrated on methodology rather than on algorithmic issues. In contrast, algorithmic issues have been the focus of the work on description logics. Borgida <ref> [Bor95] </ref> surveys this use of DL's. An alternative perspective of a DL is as a query language. This perspective is especially useful when DL's are used in applications such as data warehousing and integration of information from distributed and heterogeneous data sources.
Reference: [Bor96] <author> Alex Borgida. </author> <title> On the relative expressiveness of description logics and predicate logics. </title> <journal> Artificial Intelligence, </journal> <volume> 82 </volume> <pages> 353-367, </pages> <year> 1996. </year>
Reference-contexts: DL's vary mainly in the constructors they contain, that allow to define such conditions at various levels of complexity. The semantics of DL's follows that of first order logic with equality. Furthermore, it is known that most description logics can be translated into first-order logic with three variable symbols <ref> [Bor96] </ref>. Varying the set of constructors allowed in a DL enables to easily tailor a description logic with a desired tradeoff between expressiveness and complexity.
Reference: [BPS94] <author> Alexander Borgida and Peter Patel-Schneider. </author> <title> A semantics and complete algorithm for subsumption in the CLASSIC description logic. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 1 </volume> <pages> 277-308, </pages> <year> 1994. </year>
Reference-contexts: The questions of de-cidability and complexity of subsumption in different description logics have been studied extensively in the description logic literature. In particular, algorithms and complexity results for subsumption in Classic are given in <ref> [BPS94] </ref>, and for ALCN R in [BDS93]. Description Logic Systems: A description logic system provides two main services, based on the formal semantics of the underlying description logic. First, it provides algorithms for testing subsumption between concepts. <p> The bounds of [LMSS95] or the containment algorithms used there do not apply in the cases considered here. The theorems we describe below provide the applicable bounds. To test the candidate rewritings we use algorithms for subsumption and for knowledge-base satisfiability developed for description logics <ref> [BPS94, BDS93] </ref>. Furthermore, since the rewritings are unions of conjunctive queries, we can use the algorithm for containment of non-recursive datalog programs over ALCN R terminologies [LR96a], to test whether the maximally-contained rewriting is also an equivalent rewriting. <p> As the following theorem shows, the complexity results of inference in description logics heavily depend on the unique-names assumption. In particular, if we remove this assumption from core-Classic, reasoning becomes NP-complete, whereas it is polynomial with the unique names assumption <ref> [BPS94] </ref>. Theorem 4.1: Let T be a core-Classic terminology, and let G be a set of atoms for the concepts and roles appearing in T . <p> Note that the third and fifth rules are semantic rules. To check the premises of these rules we need to check entailment of a disjunction of atoms from a set of facts. We can use a modification of the algorithm of <ref> [BPS94] </ref> for this entailment check. The point to note is that the complexity of checking the premises does not depend on the size of S, but only on the number of constants involved in the premise of the rule.
Reference: [CKPS95] <author> Surajit Chaudhuri, Ravi Krishna--murthy, Spyros Potamianos, and Kyuseok Shim. </author> <title> Optimizing queries with materialized views. </title> <booktitle> In Proceedings of International Conference on Data Engineering, </booktitle> <year> 1995. </year>
Reference-contexts: Rewriting queries using views is important for several database applications. Originally, the problem has been considered fl The work of this author was supported by a grant from the Israel Science Foundation. for the purpose of query optimization <ref> [YL87, KB94, CKPS95] </ref>. More recently, rewriting queries using views has been used for information integration [LRO96, LRU96, Ull97], view adaptation and data warehouses [GMR95], and maintaining physical data independence [TSI94]. <p> More recently, rewriting queries using views has been used for information integration [LRO96, LRU96, Ull97], view adaptation and data warehouses [GMR95], and maintaining physical data independence [TSI94]. The rewriting problem has been considered for some classes of relational queries [YL87, LMSS95, Qia96], queries over multisets <ref> [CKPS95] </ref>, queries with aggregation [SDJL96], object-oriented query languages [FRV96] and recursive queries [DG97]. Description logics are a family of logics that were developed for modeling complex hierarchical structures. A description logic (DL) deals with unary predicates (referred to as concepts), representing sets of objects, and binary predicates (called roles).
Reference: [DG97] <author> Oliver M. Duschka and Michael R. Gene-sereth. </author> <title> Answering recursive queries using views. </title> <booktitle> In Proceedings of the 16th ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, </booktitle> <address> Tucson, Arizona., </address> <year> 1997. </year>
Reference-contexts: The rewriting problem has been considered for some classes of relational queries [YL87, LMSS95, Qia96], queries over multisets [CKPS95], queries with aggregation [SDJL96], object-oriented query languages [FRV96] and recursive queries <ref> [DG97] </ref>. Description logics are a family of logics that were developed for modeling complex hierarchical structures. A description logic (DL) deals with unary predicates (referred to as concepts), representing sets of objects, and binary predicates (called roles).
Reference: [FRV96] <author> Daniela Florescu, Louiqa Rashid, and Patrick Valduriez. </author> <title> Answering queries using OQL view expressions. In Workshop on Materialized Views, </title> <booktitle> in cooperation with ACM SIGMOD, </booktitle> <address> Montreal, Canada, </address> <year> 1996. </year>
Reference-contexts: The rewriting problem has been considered for some classes of relational queries [YL87, LMSS95, Qia96], queries over multisets [CKPS95], queries with aggregation [SDJL96], object-oriented query languages <ref> [FRV96] </ref> and recursive queries [DG97]. Description logics are a family of logics that were developed for modeling complex hierarchical structures. A description logic (DL) deals with unary predicates (referred to as concepts), representing sets of objects, and binary predicates (called roles).
Reference: [GMR95] <author> Ashish Gupta, Inderpal Singh Mumick, and Kenneth A. Ross. </author> <title> Adapting materialized views after redefinitions. </title> <booktitle> In Proceedings of SIGMOD-95, </booktitle> <year> 1995. </year>
Reference-contexts: More recently, rewriting queries using views has been used for information integration [LRO96, LRU96, Ull97], view adaptation and data warehouses <ref> [GMR95] </ref>, and maintaining physical data independence [TSI94]. The rewriting problem has been considered for some classes of relational queries [YL87, LMSS95, Qia96], queries over multisets [CKPS95], queries with aggregation [SDJL96], object-oriented query languages [FRV96] and recursive queries [DG97].
Reference: [KB94] <author> Arthur M. Keller and Julie Basu. </author> <title> A predicate-based caching scheme for client-server database architectures. </title> <booktitle> In Proceedings of PDIS-94, </booktitle> <year> 1994. </year>
Reference-contexts: Rewriting queries using views is important for several database applications. Originally, the problem has been considered fl The work of this author was supported by a grant from the Israel Science Foundation. for the purpose of query optimization <ref> [YL87, KB94, CKPS95] </ref>. More recently, rewriting queries using views has been used for information integration [LRO96, LRU96, Ull97], view adaptation and data warehouses [GMR95], and maintaining physical data independence [TSI94].
Reference: [LMSS95] <author> Alon Y. Levy, Alberto O. Mendelzon, Yehoshua Sagiv, and Divesh Srivastava. </author> <title> Answering queries using views. </title> <booktitle> In Proceedings of the 14th ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, </booktitle> <address> San Jose, CA, </address> <year> 1995. </year>
Reference-contexts: More recently, rewriting queries using views has been used for information integration [LRO96, LRU96, Ull97], view adaptation and data warehouses [GMR95], and maintaining physical data independence [TSI94]. The rewriting problem has been considered for some classes of relational queries <ref> [YL87, LMSS95, Qia96] </ref>, queries over multisets [CKPS95], queries with aggregation [SDJL96], object-oriented query languages [FRV96] and recursive queries [DG97]. Description logics are a family of logics that were developed for modeling complex hierarchical structures. <p> In the cases we consider here we show that the maximally-contained rewriting is always a union of conjunctive queries. Hence, we are able to follow the general approach of <ref> [LMSS95] </ref>, which first provides a bound on the size of the conjunctive queries needed in the rewriting of the query, and then tests the candidate rewritings using algorithms for query containment. The bounds of [LMSS95] or the containment algorithms used there do not apply in the cases considered here. <p> Hence, we are able to follow the general approach of <ref> [LMSS95] </ref>, which first provides a bound on the size of the conjunctive queries needed in the rewriting of the query, and then tests the candidate rewritings using algorithms for query containment. The bounds of [LMSS95] or the containment algorithms used there do not apply in the cases considered here. The theorems we describe below provide the applicable bounds. To test the candidate rewritings we use algorithms for subsumption and for knowledge-base satisfiability developed for description logics [BPS94, BDS93].
Reference: [LR96a] <author> Alon Y. Levy and Marie-Christine Rous-set. CARIN: </author> <title> a representation language integrating rules and description logics. </title> <booktitle> In Proceedings of the European Conference on Artificial Intelligence, </booktitle> <address> Budapest, Hungary, </address> <year> 1996. </year>
Reference-contexts: In fact, the restriction of DL's to unary and binary predicates yields new cases for which containment is decidable, whereas it is undecidable without this restriction. Recently, containment algorithms for a query language combining datalog and DL's, carin, has been developed <ref> [LR96a, LR96b] </ref>. In order to use description logics to express views and/or rewritings, we have to consider view definitions and queries that are conjunctive queries, where the relations may be complex concepts defined by constructors of description logics. <p> Furthermore, the closed world assumption is not made in such systems. Consequently, evaluating a conjunctive query is much more involved than evaluating a conjunctive query from a completely specified interpretation <ref> [LR96a] </ref>. 3. there does not exist a query P that also only uses only the views V, such that P is contained in Q, and Q 0 is contained but not equivalent to P . <p> To test the candidate rewritings we use algorithms for subsumption and for knowledge-base satisfiability developed for description logics [BPS94, BDS93]. Furthermore, since the rewritings are unions of conjunctive queries, we can use the algorithm for containment of non-recursive datalog programs over ALCN R terminologies <ref> [LR96a] </ref>, to test whether the maximally-contained rewriting is also an equivalent rewriting. We begin with the simple but common case in which both the queries and the views are concept queries. In fact, the result for this case applies to the wider class of ALCN R queries.
Reference: [LR96b] <author> Alon Y. Levy and Marie-Christine Rous-set. </author> <title> The limits on combining recursive horn rules and description logics. </title> <booktitle> In Proceedings of the AAAI Thirteenth National Conference on Artificial Intelligence, </booktitle> <year> 1996. </year>
Reference-contexts: In fact, the restriction of DL's to unary and binary predicates yields new cases for which containment is decidable, whereas it is undecidable without this restriction. Recently, containment algorithms for a query language combining datalog and DL's, carin, has been developed <ref> [LR96a, LR96b] </ref>. In order to use description logics to express views and/or rewritings, we have to consider view definitions and queries that are conjunctive queries, where the relations may be complex concepts defined by constructors of description logics.
Reference: [LRO96] <author> Alon Y. Levy, Anand Rajaraman, and Joann J. Ordille. </author> <title> Querying heterogeneous information sources using source descriptions. </title> <booktitle> In Proceedings of the 22nd VLDB Conference, </booktitle> <address> Bombay, India., </address> <year> 1996. </year>
Reference-contexts: Originally, the problem has been considered fl The work of this author was supported by a grant from the Israel Science Foundation. for the purpose of query optimization [YL87, KB94, CKPS95]. More recently, rewriting queries using views has been used for information integration <ref> [LRO96, LRU96, Ull97] </ref>, view adaptation and data warehouses [GMR95], and maintaining physical data independence [TSI94]. The rewriting problem has been considered for some classes of relational queries [YL87, LMSS95, Qia96], queries over multisets [CKPS95], queries with aggregation [SDJL96], object-oriented query languages [FRV96] and recursive queries [DG97]. <p> Several systems based on DL's have been built (e.g., classic [BBM + 91], loom [Mac88], back [Pet91], kris [BH91]), and they have been used in several applications such as configuration management [WWB + 93] natural language processing [WAF + 93]), and information integration <ref> [LRO96, AKS96] </ref>. There are two perspectives on the use of description logics in database systems. The first is the use of description logics as a data modeling language. <p> In these applications, database systems need to maintain and reason about large collections of views (or more generally, data descriptions), and reason about their differences and similarities. For example, the Information Manifold system <ref> [LRO96] </ref> represents the contents of information sources as conjunctive queries over concepts and roles in the Classic DL. When viewed as a query language, the subsumption problem of DL's corresponds to the problem of query containment, which is a core tool for many of the tasks required in these applications.
Reference: [LRU96] <author> Alon Y. Levy, Anand Rajaraman, and Jeffrey D. Ullman. </author> <title> Answering queries using limited external processors. </title> <booktitle> In Proceedings of the 15th ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, </booktitle> <address> Montreal, Canada, </address> <year> 1996. </year>
Reference-contexts: Originally, the problem has been considered fl The work of this author was supported by a grant from the Israel Science Foundation. for the purpose of query optimization [YL87, KB94, CKPS95]. More recently, rewriting queries using views has been used for information integration <ref> [LRO96, LRU96, Ull97] </ref>, view adaptation and data warehouses [GMR95], and maintaining physical data independence [TSI94]. The rewriting problem has been considered for some classes of relational queries [YL87, LMSS95, Qia96], queries over multisets [CKPS95], queries with aggregation [SDJL96], object-oriented query languages [FRV96] and recursive queries [DG97].
Reference: [Mac88] <author> R. M. MacGregor. </author> <title> A deductive pattern matcher. </title> <booktitle> In Proceedings of the Seventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 403-408, </pages> <year> 1988. </year>
Reference-contexts: Several systems based on DL's have been built (e.g., classic [BBM + 91], loom <ref> [Mac88] </ref>, back [Pet91], kris [BH91]), and they have been used in several applications such as configuration management [WWB + 93] natural language processing [WAF + 93]), and information integration [LRO96, AKS96]. There are two perspectives on the use of description logics in database systems.
Reference: [Pet91] <author> C. Petalson. </author> <title> The BACK system : an overview. </title> <journal> In Proceedings of the SIGART bulletin, </journal> <volume> volume 2(3), </volume> <pages> pages 114-119, </pages> <year> 1991. </year>
Reference-contexts: Several systems based on DL's have been built (e.g., classic [BBM + 91], loom [Mac88], back <ref> [Pet91] </ref>, kris [BH91]), and they have been used in several applications such as configuration management [WWB + 93] natural language processing [WAF + 93]), and information integration [LRO96, AKS96]. There are two perspectives on the use of description logics in database systems.
Reference: [Qia96] <author> Xiaolei Qian. </author> <title> Query folding. </title> <booktitle> In Proceedings of the 12th International Conference on Data Engineering, </booktitle> <address> New Orleans, LA, </address> <pages> pages 48-55, </pages> <year> 1996. </year>
Reference-contexts: More recently, rewriting queries using views has been used for information integration [LRO96, LRU96, Ull97], view adaptation and data warehouses [GMR95], and maintaining physical data independence [TSI94]. The rewriting problem has been considered for some classes of relational queries <ref> [YL87, LMSS95, Qia96] </ref>, queries over multisets [CKPS95], queries with aggregation [SDJL96], object-oriented query languages [FRV96] and recursive queries [DG97]. Description logics are a family of logics that were developed for modeling complex hierarchical structures.
Reference: [SDJL96] <author> Divesh Srivastava, Shaul Dar, H. V. Ja-gadish, and Alon Y. Levy. </author> <title> Answering SQL queries using materialized views. </title> <booktitle> In Proceedings of VLDB, </booktitle> <year> 1996. </year>
Reference-contexts: More recently, rewriting queries using views has been used for information integration [LRO96, LRU96, Ull97], view adaptation and data warehouses [GMR95], and maintaining physical data independence [TSI94]. The rewriting problem has been considered for some classes of relational queries [YL87, LMSS95, Qia96], queries over multisets [CKPS95], queries with aggregation <ref> [SDJL96] </ref>, object-oriented query languages [FRV96] and recursive queries [DG97]. Description logics are a family of logics that were developed for modeling complex hierarchical structures. A description logic (DL) deals with unary predicates (referred to as concepts), representing sets of objects, and binary predicates (called roles).
Reference: [TSI94] <author> Odysseas G. Tsatalos, Marvin H. Solomon, and Yannis E. Ioannidis. </author> <title> The GMAP: A versatile tool for physical data independence. </title> <booktitle> In Proceedings of the 20th International VLDB Conference, Santiago, Chile, </booktitle> <pages> pages 367-378, </pages> <year> 1994. </year>
Reference-contexts: More recently, rewriting queries using views has been used for information integration [LRO96, LRU96, Ull97], view adaptation and data warehouses [GMR95], and maintaining physical data independence <ref> [TSI94] </ref>. The rewriting problem has been considered for some classes of relational queries [YL87, LMSS95, Qia96], queries over multisets [CKPS95], queries with aggregation [SDJL96], object-oriented query languages [FRV96] and recursive queries [DG97]. Description logics are a family of logics that were developed for modeling complex hierarchical structures.
Reference: [Ull97] <author> Jeffrey D. Ullman. </author> <title> Information integration using logical views. </title> <booktitle> In Proceedings of the International Conference on Database Theory, </booktitle> <year> 1997. </year>
Reference-contexts: Originally, the problem has been considered fl The work of this author was supported by a grant from the Israel Science Foundation. for the purpose of query optimization [YL87, KB94, CKPS95]. More recently, rewriting queries using views has been used for information integration <ref> [LRO96, LRU96, Ull97] </ref>, view adaptation and data warehouses [GMR95], and maintaining physical data independence [TSI94]. The rewriting problem has been considered for some classes of relational queries [YL87, LMSS95, Qia96], queries over multisets [CKPS95], queries with aggregation [SDJL96], object-oriented query languages [FRV96] and recursive queries [DG97].
Reference: [WAF + 93] <author> W. Wahlster, E. Andre, W. Finkler, H.J. Profitlich, and T. Rist. </author> <title> Plan-based integration of natural language and graphics generation. </title> <journal> Artificial Intelligence, </journal> <volume> 63(1-2):387-428, </volume> <year> 1993. </year>
Reference-contexts: Several systems based on DL's have been built (e.g., classic [BBM + 91], loom [Mac88], back [Pet91], kris [BH91]), and they have been used in several applications such as configuration management [WWB + 93] natural language processing <ref> [WAF + 93] </ref>), and information integration [LRO96, AKS96]. There are two perspectives on the use of description logics in database systems. The first is the use of description logics as a data modeling language.
Reference: [WWB + 93] <author> J.R Wright, E.S. Weixelbaum, K. Brown, G.T Vesonder, S.R Palmer, J.I Berman, and H.H Moore. </author> <title> A knowledge-based con-figurator that supports sales, engineering and manufacturing at AT&T network systems. </title> <booktitle> In Proceedings of the Conference on Innnovative Applications of Artificial Intelligence Conference, </booktitle> <pages> pages 183-193, </pages> <year> 1993. </year>
Reference-contexts: Several systems based on DL's have been built (e.g., classic [BBM + 91], loom [Mac88], back [Pet91], kris [BH91]), and they have been used in several applications such as configuration management <ref> [WWB + 93] </ref> natural language processing [WAF + 93]), and information integration [LRO96, AKS96]. There are two perspectives on the use of description logics in database systems. The first is the use of description logics as a data modeling language. <p> two description logics: (1) ALCN R, which is the most expressive description logic underlying an implemented system [BH91], and (2) a subset of the Classic description logic, which is the most powerful description logic in which subsumption is known to be polynomial, and is used in several large-scale applications (e.g., <ref> [WWB + 93] </ref>).
Reference: [YL87] <author> H. Z. Yang and P. A. Larson. </author> <title> Query transformation for PSJ-queries. </title> <booktitle> In Proceedings of the 13th International VLDB Conference, </booktitle> <pages> pages 245-254, </pages> <year> 1987. </year>
Reference-contexts: Rewriting queries using views is important for several database applications. Originally, the problem has been considered fl The work of this author was supported by a grant from the Israel Science Foundation. for the purpose of query optimization <ref> [YL87, KB94, CKPS95] </ref>. More recently, rewriting queries using views has been used for information integration [LRO96, LRU96, Ull97], view adaptation and data warehouses [GMR95], and maintaining physical data independence [TSI94]. <p> More recently, rewriting queries using views has been used for information integration [LRO96, LRU96, Ull97], view adaptation and data warehouses [GMR95], and maintaining physical data independence [TSI94]. The rewriting problem has been considered for some classes of relational queries <ref> [YL87, LMSS95, Qia96] </ref>, queries over multisets [CKPS95], queries with aggregation [SDJL96], object-oriented query languages [FRV96] and recursive queries [DG97]. Description logics are a family of logics that were developed for modeling complex hierarchical structures.
References-found: 26

