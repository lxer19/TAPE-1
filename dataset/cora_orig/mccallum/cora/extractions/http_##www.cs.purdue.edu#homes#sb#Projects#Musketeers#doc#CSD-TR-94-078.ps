URL: http://www.cs.purdue.edu/homes/sb/Projects/Musketeers/doc/CSD-TR-94-078.ps
Refering-URL: http://www.cs.purdue.edu/homes/sb/reports/LIST.html
Root-URL: http://www.cs.purdue.edu
Title: A Study of Intrusion of a Software Trace System in the Execution of Parallel Programs  
Author: Kuei Yu Wang 
Date: February 1995  
Abstract: The level of intrusion of this monitoring system depends upon the overhead of gathering the data associated with each event and the amount of data. An intrusive system will increase drastically the execution time of the parallel program and will alter the behavior of the parallel programs we want to observe. We describe a monitoring system based on software probes inserted into a parallel program. In our system as in many other cases, a significant level of intrusion is caused by the act of storing the trace buffers on some external device, because (a) the limited I/O bandwidth of parallel systems, (b) the high latency of I/O operations, and (c) the contention for I/O devices and the interconnects. Several choices to reduce the level of the intrusion, by selecting the size for the trace buffers, by choosing the mechanism for transporting the trace buffers to the I/O devices are discussed in this paper. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Bailey, E.Barszcz, J.Barton, D.Browning, R.Carter, L.Dagum, R.Fatoohi, S.Fineberg, P.Frederickson, T.Lasinski, R.Schreiber, H.Simon, </author> <title> V.Venkatakrishnan and S.Weeratunga "The NAS Parallel Benchmarks". </title> <type> RNR Technical Report RNR-94-007, </type> <month> March </month> <year> 1994. </year>
Reference-contexts: operations (compute-I/O overlap). 2 gopen is a global synchronization operation which all nodes in the application have to participate. 12 5 Execution Time of NAS Integer Sort Benchmark: Class A and Class B The NAS Integer Sort (IS) benchmark tests a sorting operation that is important in "particle method" codes <ref> [1] </ref>. This type of application is similar to "particle in cell" applications of physics, wherein particles are assigned to cells and may drift out. The sorting operation is used to reassign particles to the appropriate cells. This benchmark tests both integer computation speed and communication performance.
Reference: [2] <author> Intel Corporation, </author> <title> Paragon T M OSF/1 User's Guide, Inter Supercomputer Systems Division, </title> <institution> Beaverton, Oregon, </institution> <year> 1993. </year>
Reference-contexts: The effect of I/O node contention is noticeable (increasing the execution time by more than 100%) for parallel programs running on 64 nodes or more. 3 The Environment A distributed memory MIMD system like the Intel Paragon <ref> [2] </ref> consists of a number of compute, I/O and service nodes connected by interconnection network, the interconnect. The I/O nodes manage the system's disk and tape drives, network connections, and other I/O facilities. <p> Processes on compute nodes access the I/O facilities using standard OSF/1 system calls, just as if they were directly connected to the I/O facilities. The Paragon OSF/1 operating system supports three file system types <ref> [2] </ref>: UFS UNIX File System, the standard file system type for OSF/1. NFS Network File System, a file system type that represents a file system on another computer on the network. PFS Parallel File System, a file system that is optimized for access by parallel processes.
Reference: [3] <author> A.D. Malony, D.A. Reed, </author> <title> and D.C. Rudolph, "Integrating Performance, Data Collection, Analysis and Visualization." In: Performance Instrumentation and Visualization, </title> <editor> (M. Simmons, R. Koskela, eds.), </editor> <publisher> Addison Wesley, </publisher> <pages> 289 pages, </pages> <year> 1990. </year>
Reference-contexts: This is a fundamental law of physics (see Heisenberg's uncertainty principle) and monitoring the execution of a parallel program cannot be made totally unobtrusive even when specialized hardware support is available [5], <ref> [3] </ref>. In this report, we describe a monitoring system based on software probes inserted into a parallel program.
Reference: [4] <author> Message Passing Interface Forum. </author> <title> "MPI: A Message Passing Interface Standard." </title> <institution> Technical Report Computer Science Department Technical Report CS-94-230, University of Tennessee, Knoxville, TN, </institution> <month> May 5 </month> <year> 1994. </year>
Reference-contexts: The Parallel I/O (PIO) approach, a variant of BF, writes trace data to the Parallel File System (PFS) using double buffering mechanism and asynchronous I/O operations. A prototype using the MPI (Message Passing Interface) <ref> [4] </ref> and the Nx communication library providing inter-partition communnication is investigated. In the following subsections, we discuss the issues involved in each approach.
Reference: [5] <author> S.R.Sarukkai and A.D.Malony. </author> <title> Perturbation Analysis of High Level Instrumentation for SPMD Programs. </title> <booktitle> Proceedings of the 4th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming, </booktitle> <address> San Diego, CA, </address> <month> May </month> <year> 1993, </year> <pages> pp. 44-53. </pages>
Reference-contexts: This is a fundamental law of physics (see Heisenberg's uncertainty principle) and monitoring the execution of a parallel program cannot be made totally unobtrusive even when specialized hardware support is available <ref> [5] </ref>, [3]. In this report, we describe a monitoring system based on software probes inserted into a parallel program.
Reference: [6] <author> K.Y. Wang and D.C.Marinescu, </author> <title> "Correlation of the paging activity of the individual node programs in the SPMD execution mode". </title> <booktitle> Proceedings of the 28th Hawaii International Conference on System Sciences, Jan. 1995, </booktitle> <volume> vol 1, </volume> <pages> pp. 61-71 18 </pages>
Reference-contexts: Several choices to reduce the level of the intrusion, by selecting the size for the trace buffers, by choosing the mechanism for transporting the trace buffers to the I/O devices are discussed in this paper. 2 The Trace System The trace system is an event-driven parallel profiling library <ref> [6] </ref> which monitors and profiles the execution of parallel programs on the Paragon T M XP/S system running the OSF/1 Mach Operating System. The parallel profiling library is linked to the program to be profiled.
References-found: 6

