URL: http://eksl-www.cs.umass.edu/papers/schmill-aa98.ps
Refering-URL: http://www-eksl.cs.umass.edu/~schmill/pubs.html
Root-URL: 
Email: fschmill,mtr,cohen,utgoffg@cs.umass.edu  
Title: Learning What Is Relevant to the Effects of Actions for a Mobile Robot  
Author: Matthew D. Schmill, Michael T. Rosenstein, Paul R. Cohen, and Paul Utgoff 
Address: LGRC, Box 34610  
Affiliation: Experimental Knowledge Systems Laboratory Department of Computer Science,  
Abstract: We have developed a learning mechanism that allows robots to discover the conditional effects of their actions. Based on sensorimotor experience, this mechanism permits a robot to explore its environment and observe effects of its actions. These observations are used to learn a context operator difference table, a structure that relates circumstances (context) and actions (operators) to effects on the environment. From the context operator difference table, one can extract a relatively small set of state variables, which simplifies the problem of learning policies for complex activities. We demonstrate results with the Pioneer 1 mobile robot. 
Abstract-found: 1
Intro-found: 1
Reference: [COAB96] <author> Paul R. Cohen, Tim Oates, Marc S. Atkin, and Carole R. Beal. </author> <title> Building a baby. </title> <booktitle> In Proceedings of the Eighteenth Annual Conference of the Cognitive Science Society, </booktitle> <pages> pages 518-522, </pages> <year> 1996. </year>
Reference-contexts: We outline the entire strategy in order to show the role of CODTs. Influenced by the interactionist philosophy of Mark John-son and George Lakoff [Lak84, Joh87], the developmental psychology of Jean Mandler [Man92], and our previous work in the Baby project <ref> [COAB96] </ref>, we are using Pioneer 1 robots to implement a theory of the origins of knowledge. The theory says that conceptual systems (or ontologies) are grounded in activity and that classes and concepts are essentially in-teractionist.
Reference: [Coh95] <author> Paul R. Cohen. </author> <title> Empirical Methods for Artificial Intelligence. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, </address> <year> 1995. </year>
Reference-contexts: To test whether trees built by the CODT generation algorithm are stable, we ran an incremental cross-validation procedure on the observations <ref> [Coh95] </ref>. We have roughly 150 observations for each of the four primitive actions| move (x), turn (x), gripper-up, gripper-down. It is a simple matter to select a subset of these observations at random and build a CODT for that subset. <p> Consistent misclassification of effects must be attributed to noise in the environment or to trees that do not adequately capture relevant factors. We must live with noise, and strive for accurate trees. Again using the incremental cross-validation procedure described in <ref> [Coh95] </ref>, we measured the predictive accuracy of the CODT entries for each action-state pair as the size of the training set increased from 5 observations to 115. Two typical learning curves are shown in Figure 3.
Reference: [Joh87] <author> Mark Johnson. </author> <title> The Body in the Mind. </title> <publisher> University of Chicago Press, </publisher> <year> 1987. </year>
Reference-contexts: Thus CODTs are part of a divide-and-conquer strategy for learning robot control strategies. We outline the entire strategy in order to show the role of CODTs. Influenced by the interactionist philosophy of Mark John-son and George Lakoff <ref> [Lak84, Joh87] </ref>, the developmental psychology of Jean Mandler [Man92], and our previous work in the Baby project [COAB96], we are using Pioneer 1 robots to implement a theory of the origins of knowledge.
Reference: [JS97] <author> David Jensen and Matthew D. Schmill. </author> <title> Adjusting for multiple comparisons in decision tree pruning. </title> <booktitle> In Proceedings of the Third International Conference on Knowledge Discovery and Data Mining, </booktitle> <pages> pages 195-198, </pages> <year> 1997. </year>
Reference-contexts: The trees in CODTs are built by an algorithm called TBA that uses bonferroni adjustments to guard against over-fitting <ref> [JS97] </ref>. We developed TBA originally to test a statistical theory of overfitting, but the algorithm is especially important for the current application. The whole point of CODTs is to find small subsets of context variables that are sufficient to predict context dependent effects of actions. <p> Decision tree algorithms that overfit (and all but TBA do) will produce subsets of context variables that are larger than they need to be. Overfitting-avoidance schemes other than TBA's do not in general fix this problem <ref> [JS97] </ref>; thus TBA is necessary to fulfill the promise of CODTs. Unfortunately, TBA is not an incremental algorithm, so observations are processed in batches. Currently, TBA is employed on a fixed schedule to rebuild the CODT trees whenever 20 observations are waiting for processing.
Reference: [KJ89] <author> S. Kotz and N.L. Johnson, </author> <title> editors. Encyclopedia of Statistical Sciences. </title> <publisher> Wiley, </publisher> <address> New York, </address> <pages> 1982-1989. </pages>
Reference-contexts: Finally, the t statistic is compared to the t distribution with n 1 + n 2 4 degrees of freedom to see whether the hypothesis of equal slope should be rejected <ref> [KJ89] </ref>. In our experiments, n 1 = n 2 = 10, because each slope is based on ten observations. 2.2 Generating CODT Entries The sensor monitor provides a fast, incremental way to classify the observed effects of its actions. The next step is to generate CODT entries.
Reference: [Lak84] <author> George Lakoff. Women, </author> <title> Fire, and Dangerous Things. </title> <publisher> University of Chicago Press, </publisher> <year> 1984. </year>
Reference-contexts: Thus CODTs are part of a divide-and-conquer strategy for learning robot control strategies. We outline the entire strategy in order to show the role of CODTs. Influenced by the interactionist philosophy of Mark John-son and George Lakoff <ref> [Lak84, Joh87] </ref>, the developmental psychology of Jean Mandler [Man92], and our previous work in the Baby project [COAB96], we are using Pioneer 1 robots to implement a theory of the origins of knowledge.
Reference: [Man92] <author> Jean M. Mandler. </author> <title> How to build a baby: II. Conceptual primitives. </title> <journal> Psychological Review, </journal> <volume> 99(4) </volume> <pages> 587-604, </pages> <year> 1992. </year>
Reference-contexts: Thus CODTs are part of a divide-and-conquer strategy for learning robot control strategies. We outline the entire strategy in order to show the role of CODTs. Influenced by the interactionist philosophy of Mark John-son and George Lakoff [Lak84, Joh87], the developmental psychology of Jean Mandler <ref> [Man92] </ref>, and our previous work in the Baby project [COAB96], we are using Pioneer 1 robots to implement a theory of the origins of knowledge. The theory says that conceptual systems (or ontologies) are grounded in activity and that classes and concepts are essentially in-teractionist.
Reference: [NS63] <author> Allen Newell and H.A. Simon. </author> <title> GPS: A program that simulates human thought. </title> <editor> In E. A. Feigenbaum and J. Feldman, editors, </editor> <booktitle> Computers and Thought, </booktitle> <pages> pages 279-293. </pages> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1963. </year> <pages> 6 7 </pages>
Reference-contexts: This is exactly the knowledge provided by CODTs, which identify the context variables that are relevant to the effects of actions. Only those variables need be included in the state space for learning an activity. 2 Context Operator Difference Tables Operator difference tables, familiar to students of means-ends analysis <ref> [NS63] </ref>, have actions on one axis and state variables on the other, and the cells contain symbols, such as `+', `', or functions, which represent the unconditional effects of the actions on the variables. Context operator difference tables (CODTs) represent the conditional effects of actions.
References-found: 8

