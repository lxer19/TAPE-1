URL: http://cwis.usc.edu/dept/ATRIUM/Papers/Integrating_Software_Repositories.ps
Refering-URL: http://cwis.usc.edu/dept/ATRIUM/index.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: A Hypertext System for Integrating Heterogeneous, Autonomous Software Repositories  
Author: John Noll and Walt Scacchi 
Address: Los Angeles, CA 90089-1421  
Affiliation: Information and Operations Management Dept. University of Southern California  
Abstract: Hypertext is a simple concept for organizing information into a graph structure of linked container objects. This paper examines issues involved in applying hypertext concepts to the integration of heterogeneous, autonomous software repositories, and presents a solution called the Distributed Hypertext System (DHT). Based on a hypertext data model and client-server architecture, DHT features powerful modeling capabilities, integration of heterogeneous, preexisting repositories, update with concur-rency control, and full local autonomy. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Evan W. Adams, Masahiro Honda, and Terrence C. Miller. </author> <title> Object management in a CASE environment. </title> <booktitle> In Proceedings of the 11th International Conference on Software Engineering. The Association for Computing Machinery, </booktitle> <year> 1989. </year>
Reference-contexts: Each programming environment has its own mechanisms for storing dependency relationships, function cross references ("tags"), and versions. Thus, the global analysis tools will 1 System Concurrency Collections Granularity Query Versioning SoftBench [7] optimistic directories a file no tool-level b AtFS [19] locks c directories file attr. d yes NSE <ref> [1] </ref> copy-edit-merge directories file no yes SLCSE [29] via dbms e no record dml f yes PMDB [25] locks no record attr. no Aspect [5] locks no record dml yes AD/Cycle [21] locks trees record, file dml tool-level NuMil [22] via dbms directories file dml yes Atherton [24] versions directories object
Reference: [2] <author> Kenneth M. Anderson, Richard N. Tay-lor, and E. James Whitehead, Jr,. </author> <title> Hypertext for heterogeneous software environments. </title> <type> Technical report, </type> <institution> University of California, Irvine, </institution> <year> 1993. </year>
Reference-contexts: For the most part these are based on a single, centralized repository architecture. In contrast, systems such as PROXHY [17] and Chimera <ref> [2] </ref> seek to move away from this position. These two systems enable linking among objects from diverse sources. Subsequently, links are managed by the hypertext system, while nodes are managed by individual applications.
Reference: [3] <author> Gerard Boudier, Ferdinando Gallo, Regis Minot, and Ian Thomas. </author> <title> An overview of PCTE and PCTE+. </title> <booktitle> In SIGSOFT '88: Proceedings of the Third ACM SIGSOFT/SIGPLAN Software Engineering Symposium on Practical Software Development Environments, </booktitle> <address> Boston. </address> <institution> The Association for Computing Machinery, </institution> <year> 1988. </year>
Reference-contexts: record dml f yes PMDB [25] locks no record attr. no Aspect [5] locks no record dml yes AD/Cycle [21] locks trees record, file dml tool-level NuMil [22] via dbms directories file dml yes Atherton [24] versions directories object attr. yes Triton [15] optimistic complex objects object no no PCTE/OMS <ref> [3] </ref> locks trees file no yes CAIS-A [5] nested trans. directories file no ? PGRAPHITE [30] optimistic collection primitive types no no a "Directories" refers to hierarchical containers of objects or other directories. b Tool-level versioning implements versioning through tools built on top of the repository layer. c "Locks" refers to
Reference: [4] <author> M. W. Bright, A. R. Hurson, and Simin H. Pakzad. </author> <title> A taxonomy and current issues in multidatabase systems. </title> <booktitle> IEEE Computer, </booktitle> <month> March </month> <year> 1992. </year>
Reference-contexts: Heterogeneous Database Management Systems. HDBMSs provide query-oriented access to data stored in heterogeneous component databases. There are three broad classes of such systems <ref> [4] </ref>: global schema multidatabases, in which applications access data through a single unified schema [9, 12, 26]. federated databases, wherein import schemas are used to provide access to external data through the existing local database schema [16, 13]; and mul-tidatabase language systems, that retrieve data by posing queries directly to participating
Reference: [5] <author> Alan W. Brown. </author> <title> Database Support for Software Engineering. </title> <publisher> Halstead Press (John Wiley and Sons), </publisher> <year> 1989. </year>
Reference-contexts: 1 System Concurrency Collections Granularity Query Versioning SoftBench [7] optimistic directories a file no tool-level b AtFS [19] locks c directories file attr. d yes NSE [1] copy-edit-merge directories file no yes SLCSE [29] via dbms e no record dml f yes PMDB [25] locks no record attr. no Aspect <ref> [5] </ref> locks no record dml yes AD/Cycle [21] locks trees record, file dml tool-level NuMil [22] via dbms directories file dml yes Atherton [24] versions directories object attr. yes Triton [15] optimistic complex objects object no no PCTE/OMS [3] locks trees file no yes CAIS-A [5] nested trans. directories file no <p> no record attr. no Aspect <ref> [5] </ref> locks no record dml yes AD/Cycle [21] locks trees record, file dml tool-level NuMil [22] via dbms directories file dml yes Atherton [24] versions directories object attr. yes Triton [15] optimistic complex objects object no no PCTE/OMS [3] locks trees file no yes CAIS-A [5] nested trans. directories file no ? PGRAPHITE [30] optimistic collection primitive types no no a "Directories" refers to hierarchical containers of objects or other directories. b Tool-level versioning implements versioning through tools built on top of the repository layer. c "Locks" refers to the "check-out" style of long duration locking
Reference: [6] <author> Omran A. Bukhres, Jiansan Chen, Weimin Du, Ahmed K. Elmagarmid, and Robert Pezzoli. </author> <title> Interbase: An execution environment for heterogeneous software systems. </title> <journal> Computer, </journal> <volume> 26(8) </volume> <pages> 57-68, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: access data through a single unified schema [9, 12, 26]. federated databases, wherein import schemas are used to provide access to external data through the existing local database schema [16, 13]; and mul-tidatabase language systems, that retrieve data by posing queries directly to participating databases using a multidatabase query language <ref> [20, 6] </ref>. They main difference between heterogeneous databases and DHT is the style of access. Heterogeneous databases provide query oriented access, with the accompanying requirement for query processors, sched-ulers, and local translators for the global query language.
Reference: [7] <author> M. H. Cagan. </author> <title> The HP SoftBench environment: An architecture for a new generation of software tools. </title> <journal> The Hewlett-Packard Journal, </journal> <volume> 41(3), </volume> <month> June </month> <year> 1990. </year>
Reference-contexts: Despite the logical centralization afforded by a shared filesystem, there is still considerable heterogeneity present. Each programming environment has its own mechanisms for storing dependency relationships, function cross references ("tags"), and versions. Thus, the global analysis tools will 1 System Concurrency Collections Granularity Query Versioning SoftBench <ref> [7] </ref> optimistic directories a file no tool-level b AtFS [19] locks c directories file attr. d yes NSE [1] copy-edit-merge directories file no yes SLCSE [29] via dbms e no record dml f yes PMDB [25] locks no record attr. no Aspect [5] locks no record dml yes AD/Cycle [21] locks
Reference: [8] <author> Brad Campbell and Joseph M. Good-man. </author> <title> HAM: A general purpose hypertext abstract machine. </title> <journal> Communications of the ACM, </journal> <volume> 31(7), </volume> <month> July </month> <year> 1988. </year>
Reference-contexts: We discuss these next. Versioning. Since participating repositories may not have native support for version-ing, it is a difficult issue to address. There are three possible alternatives for versioning in hypertext (figure 3): An object identifier (oid) can refer to all of the versions together, as in HAM <ref> [8] </ref>. In this case, a link to the object can refer to any version of the object. Alternately, an oid can refer to the most recent version. In this case a link always points to the current version of an object. <p> In contrast, DHT objects are accessed primarily by navigation, which requires a much simpler local interface, and less capability from the component repositories. Hypertext. A number of research projects have applied hypertext to software object management, including the Hypertext Abstract Machine (HAM) <ref> [8] </ref>, the Documents Integration Facility (DIF) [14], and HyperCASE [11]. For the most part these are based on a single, centralized repository architecture. In contrast, systems such as PROXHY [17] and Chimera [2] seek to move away from this position. These two systems enable linking among objects from diverse sources.
Reference: [9] <author> Chin-Wan Chung. DATAPLEX: </author> <title> An access to heterogeneous distributed databases. </title> <journal> Communications of the ACM, </journal> <volume> 33(1) </volume> <pages> 70-79, </pages> <month> January </month> <year> 1990. </year>
Reference-contexts: Heterogeneous Database Management Systems. HDBMSs provide query-oriented access to data stored in heterogeneous component databases. There are three broad classes of such systems [4]: global schema multidatabases, in which applications access data through a single unified schema <ref> [9, 12, 26] </ref>. federated databases, wherein import schemas are used to provide access to external data through the existing local database schema [16, 13]; and mul-tidatabase language systems, that retrieve data by posing queries directly to participating databases using a multidatabase query language [20, 6].
Reference: [10] <author> Jeff Conklin. </author> <title> Hypertext: An introduction and survey. </title> <journal> Computer, </journal> <volume> 20(9) </volume> <pages> 17-41, </pages> <month> September </month> <year> 1987. </year> <month> 9 </month>
Reference-contexts: and interoperability rather than data integration. 5 Discussion and Observations Conklin describes the "essence" of hypertext as a combination of three components: a data access method based on navigation; a representation scheme similar to 7 a semantic net; and an interface modality incorporating browsing by direct manipulation of link anchors <ref> [10] </ref>.
Reference: [11] <author> Jacob L. Cybulski and Karl Reed. </author> <title> A hy-pertext based software-engineering environment. </title> <journal> IEEE Software, </journal> <month> March </month> <year> 1992. </year>
Reference-contexts: Hypertext. A number of research projects have applied hypertext to software object management, including the Hypertext Abstract Machine (HAM) [8], the Documents Integration Facility (DIF) [14], and HyperCASE <ref> [11] </ref>. For the most part these are based on a single, centralized repository architecture. In contrast, systems such as PROXHY [17] and Chimera [2] seek to move away from this position. These two systems enable linking among objects from diverse sources.
Reference: [12] <author> Umeshwar Dayal and Hai-Yann Hwang. </author> <title> View definition and generalization for database integration in a multidatabase system. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> SE-10(6):628-644, </volume> <month> Novem-ber </month> <year> 1984. </year>
Reference-contexts: Heterogeneous Database Management Systems. HDBMSs provide query-oriented access to data stored in heterogeneous component databases. There are three broad classes of such systems [4]: global schema multidatabases, in which applications access data through a single unified schema <ref> [9, 12, 26] </ref>. federated databases, wherein import schemas are used to provide access to external data through the existing local database schema [16, 13]; and mul-tidatabase language systems, that retrieve data by posing queries directly to participating databases using a multidatabase query language [20, 6].
Reference: [13] <author> D. Fang, J. Hammer, D. McLeod, and A. Si. Remote-exchange: </author> <title> An approach to controlled sharing among autonomous, heterogenous database systems. </title> <booktitle> In Proceedings of the IEEE Spring Compcon, </booktitle> <address> San Francisco. </address> <publisher> IEEE, </publisher> <month> Febru-ary </month> <year> 1991. </year>
Reference-contexts: The problem has three aspects: Heterogeneity McLeod and colleagues define the "spectrum of heterogeneity" for databases, comprised of several facets: data model, schema, object comparability, data format, and storage manager <ref> [13] </ref>. This is equally applicable to software repositories. We find a variety of data models, from file-oriented to relational to object-oriented. Likewise, schema and object comparability are problems: one person's module is another's subsystem; dependency relationships may be called by different names, such as "derived-from", "depends-on", etc. <p> There are three broad classes of such systems [4]: global schema multidatabases, in which applications access data through a single unified schema [9, 12, 26]. federated databases, wherein import schemas are used to provide access to external data through the existing local database schema <ref> [16, 13] </ref>; and mul-tidatabase language systems, that retrieve data by posing queries directly to participating databases using a multidatabase query language [20, 6]. They main difference between heterogeneous databases and DHT is the style of access.
Reference: [14] <author> Pankaj K. Garg and Walt Scacchi. </author> <title> A hypertext system for software life cycle documents. </title> <journal> IEEE Software, </journal> <volume> 7(3) </volume> <pages> 90-99, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: In contrast, DHT objects are accessed primarily by navigation, which requires a much simpler local interface, and less capability from the component repositories. Hypertext. A number of research projects have applied hypertext to software object management, including the Hypertext Abstract Machine (HAM) [8], the Documents Integration Facility (DIF) <ref> [14] </ref>, and HyperCASE [11]. For the most part these are based on a single, centralized repository architecture. In contrast, systems such as PROXHY [17] and Chimera [2] seek to move away from this position. These two systems enable linking among objects from diverse sources.
Reference: [15] <author> Dennis Heimbigner. </author> <title> Experiences with an object manager for a process-centered environment. </title> <type> Technical Report CU-CS-484-92, </type> <institution> University of Colorado at Boulder, </institution> <year> 1992. </year>
Reference-contexts: no yes SLCSE [29] via dbms e no record dml f yes PMDB [25] locks no record attr. no Aspect [5] locks no record dml yes AD/Cycle [21] locks trees record, file dml tool-level NuMil [22] via dbms directories file dml yes Atherton [24] versions directories object attr. yes Triton <ref> [15] </ref> optimistic complex objects object no no PCTE/OMS [3] locks trees file no yes CAIS-A [5] nested trans. directories file no ? PGRAPHITE [30] optimistic collection primitive types no no a "Directories" refers to hierarchical containers of objects or other directories. b Tool-level versioning implements versioning through tools built on top
Reference: [16] <author> Dennis Heimbigner and Dennis McLeod. </author> <title> A federated architecture for information management. </title> <journal> ACM Transactions on Office Information Systems, </journal> <volume> 3(3), </volume> <month> July </month> <year> 1985. </year>
Reference-contexts: There are three broad classes of such systems [4]: global schema multidatabases, in which applications access data through a single unified schema [9, 12, 26]. federated databases, wherein import schemas are used to provide access to external data through the existing local database schema <ref> [16, 13] </ref>; and mul-tidatabase language systems, that retrieve data by posing queries directly to participating databases using a multidatabase query language [20, 6]. They main difference between heterogeneous databases and DHT is the style of access.
Reference: [17] <author> Charles J. Kacmar and John J. Leggett. PROXHY: </author> <title> A process-oriented extensible hypertext architecture. </title> <journal> ACM Transactions on Information Systems, </journal> <volume> 9(4) </volume> <pages> 399-420, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: Hypertext. A number of research projects have applied hypertext to software object management, including the Hypertext Abstract Machine (HAM) [8], the Documents Integration Facility (DIF) [14], and HyperCASE [11]. For the most part these are based on a single, centralized repository architecture. In contrast, systems such as PROXHY <ref> [17] </ref> and Chimera [2] seek to move away from this position. These two systems enable linking among objects from diverse sources. Subsequently, links are managed by the hypertext system, while nodes are managed by individual applications.
Reference: [18] <author> Henry F. Korth and Abraham Sil-bershatz. </author> <title> Database System Concepts. </title> <publisher> McGraw-Hill, </publisher> <year> 1986. </year>
Reference-contexts: As discussed in Section 2, DHT operations apply to single objects, and can be performed by one server without coordination with other servers. The DHT architecture exploits this feature to provide a form of timestamp concurrency control <ref> [18, pp. 380-383] </ref> designed to prevent "lost updates". 6 When a client reads an object, the server returns a timestamp along with the object data; this timestamp is used to determine whether subsequent updates conflict. The client includes the timestamp with any subsequent update requests on the object.
Reference: [19] <author> Andreas Lampen and Axel Mahler. </author> <title> An object base for attributed software objects. </title> <booktitle> In Proceedings of the EUUG Autumn '88 Conference, London. Euro-pean UNIX Users Group, </booktitle> <month> October </month> <year> 1988. </year>
Reference-contexts: Each programming environment has its own mechanisms for storing dependency relationships, function cross references ("tags"), and versions. Thus, the global analysis tools will 1 System Concurrency Collections Granularity Query Versioning SoftBench [7] optimistic directories a file no tool-level b AtFS <ref> [19] </ref> locks c directories file attr. d yes NSE [1] copy-edit-merge directories file no yes SLCSE [29] via dbms e no record dml f yes PMDB [25] locks no record attr. no Aspect [5] locks no record dml yes AD/Cycle [21] locks trees record, file dml tool-level NuMil [22] via dbms
Reference: [20] <author> Witold Litwin and Abdelaziz Abdellatif. </author> <title> An overview of the multi-database manipulation language MDSL. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 75(5) </volume> <pages> 621-631, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: access data through a single unified schema [9, 12, 26]. federated databases, wherein import schemas are used to provide access to external data through the existing local database schema [16, 13]; and mul-tidatabase language systems, that retrieve data by posing queries directly to participating databases using a multidatabase query language <ref> [20, 6] </ref>. They main difference between heterogeneous databases and DHT is the style of access. Heterogeneous databases provide query oriented access, with the accompanying requirement for query processors, sched-ulers, and local translators for the global query language.
Reference: [21] <author> V. J. Mercurio, B. F. Meyers, A. M. Nis-bet, and G. Radin. </author> <title> AD/Cycle strategy and architecture. </title> <journal> IBM Systems Journal, </journal> <volume> 29(2) </volume> <pages> 170-187, </pages> <year> 1990. </year>
Reference-contexts: SoftBench [7] optimistic directories a file no tool-level b AtFS [19] locks c directories file attr. d yes NSE [1] copy-edit-merge directories file no yes SLCSE [29] via dbms e no record dml f yes PMDB [25] locks no record attr. no Aspect [5] locks no record dml yes AD/Cycle <ref> [21] </ref> locks trees record, file dml tool-level NuMil [22] via dbms directories file dml yes Atherton [24] versions directories object attr. yes Triton [15] optimistic complex objects object no no PCTE/OMS [3] locks trees file no yes CAIS-A [5] nested trans. directories file no ? PGRAPHITE [30] optimistic collection primitive types
Reference: [22] <author> K. Naryanaswamy and Walt Scacchi. </author> <title> A database foundation to support software systems evolution. </title> <journal> The Journal of Systems and Software, </journal> <volume> 7(1) </volume> <pages> 37-49, </pages> <month> March </month> <year> 1987. </year>
Reference-contexts: b AtFS [19] locks c directories file attr. d yes NSE [1] copy-edit-merge directories file no yes SLCSE [29] via dbms e no record dml f yes PMDB [25] locks no record attr. no Aspect [5] locks no record dml yes AD/Cycle [21] locks trees record, file dml tool-level NuMil <ref> [22] </ref> via dbms directories file dml yes Atherton [24] versions directories object attr. yes Triton [15] optimistic complex objects object no no PCTE/OMS [3] locks trees file no yes CAIS-A [5] nested trans. directories file no ? PGRAPHITE [30] optimistic collection primitive types no no a "Directories" refers to hierarchical containers
Reference: [23] <author> John Noll and Walt Scacchi. </author> <title> Integrating diverse information repositories: A distributed hypertext approach. </title> <journal> IEEE Computer, </journal> <volume> 24(12) </volume> <pages> 38-45, </pages> <month> Decem-ber </month> <year> 1991. </year>
Reference-contexts: A more detailed description of an earlier version of DHT can be found in <ref> [23] </ref>. However, this report highlights refinements and enhancements incorporated into DHT in its current version. Architecture. The DHT architecture is based on a client-server model.
Reference: [24] <author> William Paseman. </author> <title> Architecture of the Atherton software BackPlane. </title> <booktitle> In Proceedings of 1989 ACM SIGMOD Workshop on Software CAD Databases. The Association for Computing Machinery, </booktitle> <year> 1989. </year>
Reference-contexts: d yes NSE [1] copy-edit-merge directories file no yes SLCSE [29] via dbms e no record dml f yes PMDB [25] locks no record attr. no Aspect [5] locks no record dml yes AD/Cycle [21] locks trees record, file dml tool-level NuMil [22] via dbms directories file dml yes Atherton <ref> [24] </ref> versions directories object attr. yes Triton [15] optimistic complex objects object no no PCTE/OMS [3] locks trees file no yes CAIS-A [5] nested trans. directories file no ? PGRAPHITE [30] optimistic collection primitive types no no a "Directories" refers to hierarchical containers of objects or other directories. b Tool-level versioning
Reference: [25] <author> Maria H. Penedo and E. Don Stuckle. </author> <title> PMDB-a project master database for software engineering environments. </title> <booktitle> In Proceedings of the 8th International Conference on Software Engineering. IEEE, </booktitle> <month> August </month> <year> 1985. </year>
Reference-contexts: Thus, the global analysis tools will 1 System Concurrency Collections Granularity Query Versioning SoftBench [7] optimistic directories a file no tool-level b AtFS [19] locks c directories file attr. d yes NSE [1] copy-edit-merge directories file no yes SLCSE [29] via dbms e no record dml f yes PMDB <ref> [25] </ref> locks no record attr. no Aspect [5] locks no record dml yes AD/Cycle [21] locks trees record, file dml tool-level NuMil [22] via dbms directories file dml yes Atherton [24] versions directories object attr. yes Triton [15] optimistic complex objects object no no PCTE/OMS [3] locks trees file no yes
Reference: [26] <author> Ming-Chien Shan. </author> <title> Unified access in a heterogeneous information environment. </title> <journal> IEEE Office Knowledge Engineering, </journal> <volume> 3(2), </volume> <month> August </month> <year> 1989. </year>
Reference-contexts: Heterogeneous Database Management Systems. HDBMSs provide query-oriented access to data stored in heterogeneous component databases. There are three broad classes of such systems [4]: global schema multidatabases, in which applications access data through a single unified schema <ref> [9, 12, 26] </ref>. federated databases, wherein import schemas are used to provide access to external data through the existing local database schema [16, 13]; and mul-tidatabase language systems, that retrieve data by posing queries directly to participating databases using a multidatabase query language [20, 6].
Reference: [27] <author> B.R. Shatz. Telesophy: </author> <title> A system for manipulating the knowledge in a community. </title> <booktitle> In Proc. Globecom 87, </booktitle> <pages> pages 1181-1186, </pages> <address> New York, </address> <month> Sept. </month> <year> 1987. </year> <institution> The Association for Computing Machinery. </institution>
Reference-contexts: Transparency Schatz <ref> [27] </ref> defines three types of transparency: type transparency, the ability to apply the same operations to any type object; location transparency, the ability to access remote objects in the same manner as local objects; and scale transparency, the ability of a system to perform as well with one million as with
Reference: [28] <author> Amit P. Sheth and James A. Larson. </author> <title> Federated database systems for managing distributed, heterogeneous, and au 10 tonomous databases. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(3), </volume> <month> September </month> <year> 1990. </year>
Reference-contexts: can specify its own data model, schema, storage manager, applications, etc; execution autonomy is the ability of a repository to dictate who has access to what objects, in what fashion; association autonomy refers to the freedom of a repository to choose with what other repositories, if any, it will cooperate <ref> [28] </ref>. <p> From the repository viewpoint, the gateway process can be just another application. Note that the gateway process is equivalent to a combination of transforming and accessing processor components of the federated database architecture reference model described by Sheth and Larson <ref> [28] </ref>. The style of access implemented, however, is navigational rather than query-oriented, as discussed later in section 4. A request-response style communica database. tion protocol implements the operations specified in the DHT data model (see section 2), and includes provisions for locating servers and authenticating and encrypting messages. Data Model.
Reference: [29] <author> Tom Strelich. </author> <title> The software life cycle support environment (SLCSE) a computer based framework for developing software systems. </title> <booktitle> In SIGSOFT '88: Proceedings of the Third ACM SIG-SOFT/SIGPLAN Software Engineering Symposium on Practical Software Development Environments, </booktitle> <address> Boston. </address> <institution> The Association for Computing Machinery, </institution> <year> 1988. </year>
Reference-contexts: Thus, the global analysis tools will 1 System Concurrency Collections Granularity Query Versioning SoftBench [7] optimistic directories a file no tool-level b AtFS [19] locks c directories file attr. d yes NSE [1] copy-edit-merge directories file no yes SLCSE <ref> [29] </ref> via dbms e no record dml f yes PMDB [25] locks no record attr. no Aspect [5] locks no record dml yes AD/Cycle [21] locks trees record, file dml tool-level NuMil [22] via dbms directories file dml yes Atherton [24] versions directories object attr. yes Triton [15] optimistic complex objects
Reference: [30] <author> Jack C. Wileden, Alexander L. Wolf, Charles D. Fisher, and Peri L.Tarr. PGRAPHITE: </author> <title> an experiment in persistent typed object management. </title> <booktitle> In SIGSOFT '88: Proceedings of the Third ACM SIGSOFT/SIGPLAN Software Engineering Symposium on Practical Software Development Environments, </booktitle> <address> Boston. </address> <institution> The Association for Computing Machinery, </institution> <year> 1988. </year> <month> 11 </month>
Reference-contexts: record dml yes AD/Cycle [21] locks trees record, file dml tool-level NuMil [22] via dbms directories file dml yes Atherton [24] versions directories object attr. yes Triton [15] optimistic complex objects object no no PCTE/OMS [3] locks trees file no yes CAIS-A [5] nested trans. directories file no ? PGRAPHITE <ref> [30] </ref> optimistic collection primitive types no no a "Directories" refers to hierarchical containers of objects or other directories. b Tool-level versioning implements versioning through tools built on top of the repository layer. c "Locks" refers to the "check-out" style of long duration locking used by RCS. d "Attr." refers to searching
References-found: 30

