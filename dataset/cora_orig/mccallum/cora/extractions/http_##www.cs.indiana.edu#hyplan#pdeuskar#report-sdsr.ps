URL: http://www.cs.indiana.edu/hyplan/pdeuskar/report-sdsr.ps
Refering-URL: http://www.cs.indiana.edu/hyplan/pdeuskar/resume.html
Root-URL: http://www.cs.indiana.edu
Email: fpdeuskar, cshetty@cs.indiana.edug  
Title: Secure Distributed Storage and Retrieval B649 Topics in Distributed Systems  
Author: Prafulla Deuskar and Chandrashekhar Shetty 
Date: 25 April, 1998  
Abstract: This report describes the design and implementation of a distributed data storage retrieval facility (Hydra) partially based on the model proposed in [Gar97]. Hydra stores a file by distributing it across various servers. The file is split using information dispersal such that even if some servers fail the file can be recreated. We do not use threshold cryptography for signatures instead we depend on the client knowing the public keys of all the servers. The present implementation makes use of an off-line certification authority (whose role can be easily extended). MD5 hash functions are used to fingerprint the various shares of the file. We have implemented this system on top of Java(http://java.sun.com) using Java Remote Method Invocation and Java Native Interface. 
Abstract-found: 1
Intro-found: 1
Reference: [AIJ] <author> Juan A. Garay Arun Iyengar, Robert Cahn and Charanjit Jutla. </author> <title> Design and implementation of a secure distributed data repository. </title>
Reference-contexts: The original requirements include integrity and confidentiality. The solution described in [Gar97] makes use of threshold cryptographic techniques and "blinding" to achieve this. In the implementation of <ref> [AIJ] </ref> they don't have confidentiality. In the next section we describe the system architecture of our implementation. After that in section 3 we present analysis of the vulnerability, performance and improvements possible on this system. In section 4 we describe some specific details of the code installation, running and files.
Reference: [Gar97] <editor> Secure distributed storage and retrieval, </editor> <booktitle> number 1320 in Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997. </year> <month> 12 </month>
Reference-contexts: 1 Introduction <ref> [Gar97] </ref> describes a design of a Secure information storage and retrieval system which allows some servers to malfunction and also guarantees integrity and confidentiality. In this report we describe a partial implementation of the same model. <p> The problem is that we have to store information in a distributed manner such that even if some servers start behaving maliciously or they break down we can still go ahead and retrieve the file. The original requirements include integrity and confidentiality. The solution described in <ref> [Gar97] </ref> makes use of threshold cryptographic techniques and "blinding" to achieve this. In the implementation of [AIJ] they don't have confidentiality. In the next section we describe the system architecture of our implementation. <p> Apart from that denial of service might cause a lot of extra messages being sent by the servers among themselves. * known key attack A big win of the model proposed in <ref> [Gar97] </ref> is that it uses threshold cryptography for secrecy and signing. Since the private key of the user is partially distributed among all servers an attacker has to break all servers to impersonate a user. In our system this is not possible.
References-found: 2

