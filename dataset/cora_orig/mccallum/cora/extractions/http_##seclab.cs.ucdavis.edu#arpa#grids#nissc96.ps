URL: http://seclab.cs.ucdavis.edu/arpa/grids/nissc96.ps
Refering-URL: http://seclab.cs.ucdavis.edu/~stanifor/
Root-URL: http://www.cs.ucdavis.edu
Email: email: &lt;lastname&gt;@cs.ucdavis.edu  
Title: GrIDS-A GRAPH BASED INTRUSION DETECTION SYSTEM FOR LARGE NETWORKS  
Author: S. Staniford-Chen, S. Cheung, R. Crawford, M. Dilger, J. Frank, J. Hoagland, K. Levitt, C. Wee, R. Yip, D. Zerkle 
Keyword: Intrusion detection, networks, information warfare, computer security, graphs.  
Address: Davis, CA 95616  
Affiliation: Department of Computer Science, University of California, Davis,  
Abstract: There is widespread concern that large-scale malicious attacks on computer networks could cause serious disruption to network services. We present the design of GrIDS (Graph-Based Intrusion Detection System). GrIDS collects data about activity on computers and network traffic between them. It aggregates this information into activity graphs which reveal the causal structure of network activity. This allows large-scale automated or co-ordinated attacks to be detected in near real-time. In addition, GrIDS allows network administrators to state policies specifying which users may use particular services of individual hosts or groups of hosts. By analyzing the characteristics of the activity graphs, GrIDS detects and reports violations of the stated policy. GrIDS uses a hierarchical reduction scheme for the graph construction, which allows it to scale to large networks. An early prototype of GrIDS has successfully detected a worm attack. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Eichin and J. Rochis. </author> <title> With microscope and tweezers: An analysis of the Internet worm of November 1988. </title> <booktitle> IEEE Symposium on Research in Security and Privacy, </booktitle> <year> 1989. </year>
Reference-contexts: A large scale attack on these networks can cripple important world-wide Internet operations. The Internet Worm of 1988 caused the Internet to be unavailable for about five days <ref> [1] </ref>. Seven years later, there is no system to detect or analyze such a problem on an Internet-wide scale. The development of a secure infrastructure to defend the Internet and other networks is a major challenge. In this paper, we present the design of the Graph-based Intrusion Detection System (GrIDS).
Reference: [2] <author> James P. Anderson. </author> <title> Computer security threat monitoring and surveillance. </title> <type> Technical report, </type> <address> James P. Anderson Co., Fort Washington, PA, </address> <year> 1980. </year>
Reference-contexts: Section 2.6 outlines the policy language. Section 2.7 covers some limitations of GrIDS. Finally, Section 3 presents conclusions and discusses future work. 1.1 Previous Work The field of intrusion detection began with a report by Anderson <ref> [2] </ref> followed by Denning's well-known paper that became the foundation for IDES [3]. A recent review of the field is available [4] that gives more detail than we can provide here.
Reference: [3] <author> Dorothy E. Denning. </author> <title> An intrusion detection model. </title> <booktitle> In Proceedings of the IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 118-131, </pages> <year> 1986. </year>
Reference-contexts: Section 2.6 outlines the policy language. Section 2.7 covers some limitations of GrIDS. Finally, Section 3 presents conclusions and discusses future work. 1.1 Previous Work The field of intrusion detection began with a report by Anderson [2] followed by Denning's well-known paper that became the foundation for IDES <ref> [3] </ref>. A recent review of the field is available [4] that gives more detail than we can provide here. Early systems were designed to detect attacks upon a single host (e.g., IDES (later NIDES) [5, 6] and MIDAS [7]).
Reference: [4] <author> B. Mukherjee, L.T. Heberlein, and K.N. Levitt. </author> <title> Network intrusion detection. </title> <journal> IEEE Network, </journal> <volume> 8 </volume> <pages> 26-41, </pages> <month> May-June </month> <year> 1994. </year>
Reference-contexts: Finally, Section 3 presents conclusions and discusses future work. 1.1 Previous Work The field of intrusion detection began with a report by Anderson [2] followed by Denning's well-known paper that became the foundation for IDES [3]. A recent review of the field is available <ref> [4] </ref> that gives more detail than we can provide here. Early systems were designed to detect attacks upon a single host (e.g., IDES (later NIDES) [5, 6] and MIDAS [7]).
Reference: [5] <author> T. Lunt et al. IDES: </author> <title> The enhanced prototype. </title> <type> Technical report, </type> <institution> SRI International, Computer Science Lab, </institution> <month> October </month> <year> 1988. </year>
Reference-contexts: A recent review of the field is available [4] that gives more detail than we can provide here. Early systems were designed to detect attacks upon a single host (e.g., IDES (later NIDES) <ref> [5, 6] </ref> and MIDAS [7]). Although they could collect reports on a single local area network (LAN), these systems did not aggregate information on a wider scale. Later systems considered the role of networks.
Reference: [6] <author> D. Anderson, T. Frivold, and A. Valdes. </author> <title> Next-generation intrusion detection expert system (NIDES). </title> <type> Technical Report SRI-CSL-95-07, </type> <institution> SRI International, Computer Science Lab, </institution> <month> May </month> <year> 1995. </year>
Reference-contexts: A recent review of the field is available [4] that gives more detail than we can provide here. Early systems were designed to detect attacks upon a single host (e.g., IDES (later NIDES) <ref> [5, 6] </ref> and MIDAS [7]). Although they could collect reports on a single local area network (LAN), these systems did not aggregate information on a wider scale. Later systems considered the role of networks.
Reference: [7] <author> M. Sebring et al. </author> <title> Expert systems in intrusion detection: A case study. </title> <booktitle> Proceedings of the 11th National Computer Security Conference, </booktitle> <year> 1988. </year>
Reference-contexts: A recent review of the field is available [4] that gives more detail than we can provide here. Early systems were designed to detect attacks upon a single host (e.g., IDES (later NIDES) [5, 6] and MIDAS <ref> [7] </ref>). Although they could collect reports on a single local area network (LAN), these systems did not aggregate information on a wider scale. Later systems considered the role of networks.
Reference: [8] <author> L. T. Heberlein et al. </author> <title> A network security monitor. </title> <booktitle> Proceedings of the IEEE Symposium on Research in Security and Privacy, </booktitle> <year> 1990. </year>
Reference-contexts: Later systems considered the role of networks. The Network Security Monitor (now called Network Intrusion Detector or NID) looked for evidence of intrusions by passively monitoring a single LAN <ref> [8] </ref>. NADIR [9] and DIDS [10] collect and aggregate audit data from a number of hosts to detect co-ordinated attacks against a set of hosts.
Reference: [9] <author> K. Jackson, D. DuBois, and C. Stallings. </author> <title> An expert system application for network intrusion detection. </title> <booktitle> Proceedings of the 14th Department of Energy Computer Security Group Conference, </booktitle> <year> 1991. </year>
Reference-contexts: Later systems considered the role of networks. The Network Security Monitor (now called Network Intrusion Detector or NID) looked for evidence of intrusions by passively monitoring a single LAN [8]. NADIR <ref> [9] </ref> and DIDS [10] collect and aggregate audit data from a number of hosts to detect co-ordinated attacks against a set of hosts.
Reference: [10] <editor> S. Snapp et al. DIDS motivation, </editor> <title> architecture and an early prototype. </title> <booktitle> Proceedings of COMP-CON, </booktitle> <year> 1991. </year>
Reference-contexts: Later systems considered the role of networks. The Network Security Monitor (now called Network Intrusion Detector or NID) looked for evidence of intrusions by passively monitoring a single LAN [8]. NADIR [9] and DIDS <ref> [10] </ref> collect and aggregate audit data from a number of hosts to detect co-ordinated attacks against a set of hosts.
Reference: [11] <author> D. Seely. </author> <title> A tour of the worm. </title> <journal> IEEE Trans. on Soft. Eng., </journal> <month> November </month> <year> 1991. </year>
Reference-contexts: The combined nature of the distributed attack is only apparent if the attack is traced back to the same source, or if features of the attacks are similar. To detect such coordinated activity, an IDS must correlate sessions across several hosts and possibly across several distributed detectors. Seely <ref> [11] </ref> defines a worm as "a program that propagates itself across a network using resources on one machine to attack other machines." The best known worm attack is the Internet worm of 1988 which infected thousands of hosts throughout the Internet, rendering many of them unusable.
Reference: [12] <author> Computer Security Research Group. </author> <title> The Design of GrIDS: A Graph-Based Intrusion Detection System. </title> <type> Technical report, </type> <institution> UC Davis Department of Computer Science, Davis, Califor-nia, </institution> <note> in preparation. </note>
Reference-contexts: Firstly, we present a simple example to illustrate the main concept. Next, we discuss the architecture and components that make up the distributed system. Then we give a more detailed description of how these components operate to detect intrusions. For a complete account, refer to <ref> [12] </ref>. 2.1 Detecting a Worm GrIDS constructs activity graphs which represent hosts and activity in a network. Let us take the tracking of a worm as a simple example of building such an activity graph. <p> However, the OHS is only involved in changes to the topology of GrIDS, not in its routine operation. Hence, this limitation is not pressing. We now outline how a transaction on the scenario depicted in Figure 4 would be carried out. Full details can be obtained from <ref> [12] </ref>. In the following, we use the notation S C to refer to the software manager at C, M C to refer to the module controller on the machine on which S C is running, and similarly for the other departments.
Reference: [13] <author> Steven McCanne, B. Jacobsen, and Craig Leres. Tcpdump. </author> <month> ftp://ftp.ee.lbl.gov. </month>
Reference-contexts: To verify our design concept, a basic implementation of this algorithm (which we christened Early Bird) was built. While it would be premature to quantitatively evaluate this version, the code was tested for several weeks on our LAN with tcp-wrapper <ref> [13] </ref> data as input. It was not difficult to tune the software to detect a worm or sweep attack within seconds but produce only one or two false alarms per day from normal user traffic. 2.2 Architecture and Parent contains Left and Right.
References-found: 13

