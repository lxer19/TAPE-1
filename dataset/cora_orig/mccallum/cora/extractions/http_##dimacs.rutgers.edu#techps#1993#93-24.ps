URL: http://dimacs.rutgers.edu/techps/1993/93-24.ps
Refering-URL: http://dimacs.rutgers.edu/TechnicalReports/1993.html
Root-URL: http://www.cs.rutgers.edu
Email: Email: gjchang@cc.nctu.edu.tw  Email: satyan@abp.lcs.mit.edu.  
Title: Weighted Independent Perfect Domination on Cocomparability Graphs  
Author: by Gerard J. Chang ; C. Pandu Rangan and Satyan R. Coorg 
Note: 0208-M009-050. 2 DIMACS permanent member. 3 Current address:  DIMACS is a cooperative project of Rutgers University, Princeton University, AT&T Bell Laboratories and Bellcore. DIMACS is an NSF Science and Technology Center, funded under contract STC-91-19999; and also receives support from the New Jersey Commission on Science and Technology.  
Address: Hsinchu 30050, Taiwan Republic of China  Maras 600 036, India  Cambridge, MA 02139.  
Affiliation: Department of Applied Mathematics National Chiao Tung University  Department of Computer Science and Engineering Indian Institute of Technology  Laboratory for Computer Science, MIT,  
Abstract: DIMACS Technical Report April 1993 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> K. Arvind and C. Pandu Rangan, </author> <title> Efficient algorithms for domination problems on cocomparability graphs, </title> <type> Technical Report TR-TCS-90-18 (1990), </type> <institution> Department of Computer Science and Engineering, Indian Institute of Technology, Madras. </institution>
Reference-contexts: Domination and its three variants on cocomparability graphs have been studied by Kratsch and Stewart [14] and Arvind and Pandu Rangan <ref> [1] </ref>. <p> The following vertex ordering methodology is of particular interest &gt;from our point of view. Theorem 5 ([18]) A graph G = (V; E) is an interval graph if and only if it has an interval ordering, i.e., its vertex set V can be ordered into <ref> [1; 2; : : : ; n] </ref> such that i &lt; j &lt; k and (i; k) 2 E imply (j; k) 2 E: (IO) Note that an interval ordering is a cocomparability ordering. The property (IO) implies that N [v] contains precisely all vertices between low [v] and v.
Reference: 2. <author> D. W. Bange, A. E. Barkauskas, and P. T. Slater, </author> <title> Efficient dominating sets in graphs, Applications of Discrete Mathematics, </title> <editor> R. D. Ringeisen and F. S. Roberts, eds., </editor> <publisher> SIAM, Philad. </publisher> <pages> (1988)189-199. </pages>
Reference-contexts: Yen [22] gave NP-complete results of these variants in bipartite graphs and chordal graphs, except for connected domination in chordal graphs. She also gave linear time algorithms for these variants in trees, block graphs, and series-parallel graphs. Independent perfect domination was called efficient domination by Bange, Barkauskas, and Slater <ref> [2] </ref>, who proved that the efficient domination problem is - 2 - NP-complete for general graphs and gave a linear time algorithm for the problem on trees. If we consider the application of perfect domination to coding theory, Biggs [6] studied perfect d-codes. <p> The following vertex ordering methodology is of particular interest &gt;from our point of view. Theorem 5 ([18]) A graph G = (V; E) is an interval graph if and only if it has an interval ordering, i.e., its vertex set V can be ordered into <ref> [1; 2; : : : ; n] </ref> such that i &lt; j &lt; k and (i; k) 2 E imply (j; k) 2 E: (IO) Note that an interval ordering is a cocomparability ordering. The property (IO) implies that N [v] contains precisely all vertices between low [v] and v.
Reference: 3. <author> A. A. Bertossi, </author> <title> Total domination in interval graphs, </title> <journal> Inform. </journal> <note> Processing Letters 23 (1986) 131-134. </note>
Reference-contexts: Korte and Mohring [13] simplified the operations on a PQ-tree. Simon [19], Hsu and Ma [11], and Hsu [10] designed new algorithms without using PQ-trees. Domination and its variants in interval graphs have been studied extensively <ref> [3, 4, 5, 12, 16, 17, 18, 21] </ref>. The following vertex ordering methodology is of particular interest &gt;from our point of view.
Reference: 4. <author> A. A. Bertossi, </author> <title> On the domatic number of interval graph, </title> <journal> Inform. </journal> <note> Processing Letters 28 (1988) 275-280. - 9 </note> - 
Reference-contexts: Korte and Mohring [13] simplified the operations on a PQ-tree. Simon [19], Hsu and Ma [11], and Hsu [10] designed new algorithms without using PQ-trees. Domination and its variants in interval graphs have been studied extensively <ref> [3, 4, 5, 12, 16, 17, 18, 21] </ref>. The following vertex ordering methodology is of particular interest &gt;from our point of view.
Reference: 5. <author> A. A. Bertossi and A. Gori, </author> <title> Total domination and irredundance in weighted interval graphs, </title> <journal> SIAM J. Disc. Math. </journal> <month> 1 </month> <year> (1988) </year> <month> 317-327. </month>
Reference-contexts: Korte and Mohring [13] simplified the operations on a PQ-tree. Simon [19], Hsu and Ma [11], and Hsu [10] designed new algorithms without using PQ-trees. Domination and its variants in interval graphs have been studied extensively <ref> [3, 4, 5, 12, 16, 17, 18, 21] </ref>. The following vertex ordering methodology is of particular interest &gt;from our point of view.
Reference: 6. <author> N. Biggs, </author> <title> Perfect codes in graphs, </title> <journal> J. Comb. Theory, Series B 15 (1973) 289-296. </journal>
Reference-contexts: If we consider the application of perfect domination to coding theory, Biggs <ref> [6] </ref> studied perfect d-codes. A perfect d-code of a graph G = (V; E) is a vertex set C such that every vertex v 2 V is within distance d of exactly one vertex in D.
Reference: 7. <author> K. S. Booth and G. S. Lueker, </author> <title> Testing for the consecutive ones property, interval graphs, and graph planarity sing PQ-tree Algorithms, </title> <institution> J. Comput. Syst. Sci. </institution> <month> 13 </month> <year> (1976) </year> <month> 335-379. </month>
Reference-contexts: Interval graphs have many applications to the real world (see [9]). One of the most basic problems in the study of interval graphs is the problem of recognizing these graphs. Booth and Lueker <ref> [7] </ref> gave a linear time algorithm for recognizing an interval graph using PQ-trees. Korte and Mohring [13] simplified the operations on a PQ-tree. Simon [19], Hsu and Ma [11], and Hsu [10] designed new algorithms without using PQ-trees.
Reference: 8. <author> D. Coppersmith and S. Winograd, </author> <title> Matrix multiplication via arithmetic progression, </title> <booktitle> Proceedings 19th Annual ACM Sysposium on Theory of Computing (1987) 1-6. </booktitle>
Reference-contexts: Then N [u] " N [v] = ; if and only if b ij = 0. If we pre-calculate AA, then condition (C3) of step 5 can be checked in a constant time. Thus, the fastest known algorithm for matrix multiplication to date (see <ref> [8] </ref>) gives us the following theorem. - 7 - Theorem 4 Algorithm WIPD can be implemented in O (jV j 2:37 ) time. 3 Interval Graphs An interval graph is a graph each of whose vertices can be associated with an interval in the real line so that two vertices are
Reference: 9. <author> M. C. Golumbic, </author> <title> Algorithmic Graph Theory and Perfect Graphs, </title> <publisher> Academic Press, </publisher> <address> New York (1980). </address>
Reference-contexts: Interval graphs have many applications to the real world (see <ref> [9] </ref>). One of the most basic problems in the study of interval graphs is the problem of recognizing these graphs. Booth and Lueker [7] gave a linear time algorithm for recognizing an interval graph using PQ-trees. Korte and Mohring [13] simplified the operations on a PQ-tree.
Reference: 10. <author> W. L. Hsu, </author> <title> A simple test for interval graphs, (1991), </title> <type> preprint. </type>
Reference-contexts: Booth and Lueker [7] gave a linear time algorithm for recognizing an interval graph using PQ-trees. Korte and Mohring [13] simplified the operations on a PQ-tree. Simon [19], Hsu and Ma [11], and Hsu <ref> [10] </ref> designed new algorithms without using PQ-trees. Domination and its variants in interval graphs have been studied extensively [3, 4, 5, 12, 16, 17, 18, 21]. The following vertex ordering methodology is of particular interest &gt;from our point of view.
Reference: 11. <author> W. L. Hsu and T. H. Ma, </author> <title> Substitution decomposition on chordal graphs and applications, </title> <booktitle> Lecture Notes in Computer Science 557 (1991) 52-60. </booktitle>
Reference-contexts: Booth and Lueker [7] gave a linear time algorithm for recognizing an interval graph using PQ-trees. Korte and Mohring [13] simplified the operations on a PQ-tree. Simon [19], Hsu and Ma <ref> [11] </ref>, and Hsu [10] designed new algorithms without using PQ-trees. Domination and its variants in interval graphs have been studied extensively [3, 4, 5, 12, 16, 17, 18, 21]. The following vertex ordering methodology is of particular interest &gt;from our point of view.
Reference: 12. <author> J. K. Keil, </author> <title> Total domination in interval graphs, </title> <journal> Inform. </journal> <note> Processing Letters 22 (1986) 171-174. </note>
Reference-contexts: Korte and Mohring [13] simplified the operations on a PQ-tree. Simon [19], Hsu and Ma [11], and Hsu [10] designed new algorithms without using PQ-trees. Domination and its variants in interval graphs have been studied extensively <ref> [3, 4, 5, 12, 16, 17, 18, 21] </ref>. The following vertex ordering methodology is of particular interest &gt;from our point of view.
Reference: 13. <author> N. Korte and R. H. Mohring, </author> <title> An incremental linear-time algorithm for recognizing interval graphs, </title> <journal> SIAM J. Comput. </journal> <month> 18 </month> <year> (1989) </year> <month> 68-81. </month>
Reference-contexts: Interval graphs have many applications to the real world (see [9]). One of the most basic problems in the study of interval graphs is the problem of recognizing these graphs. Booth and Lueker [7] gave a linear time algorithm for recognizing an interval graph using PQ-trees. Korte and Mohring <ref> [13] </ref> simplified the operations on a PQ-tree. Simon [19], Hsu and Ma [11], and Hsu [10] designed new algorithms without using PQ-trees. Domination and its variants in interval graphs have been studied extensively [3, 4, 5, 12, 16, 17, 18, 21].
Reference: 14. <author> D. Kratsch and L. Stewart, </author> <title> Domination on cocomparability graphs, (1989), </title> <type> preprint. </type>
Reference-contexts: Domination and its three variants on cocomparability graphs have been studied by Kratsch and Stewart <ref> [14] </ref> and Arvind and Pandu Rangan [1].
Reference: 15. <author> M. Livingston and Q. F. Stout, </author> <title> Perfect dominating sets, </title> <note> Congressus Numerantium 79 (1990) 187-203. </note>
Reference-contexts: A perfect d-code of a graph G = (V; E) is a vertex set C such that every vertex v 2 V is within distance d of exactly one vertex in D. In conjunction with the study of the interconnection networks used in parallel computers, Livingston and Stout <ref> [15] </ref> studied perfect d-dominating sets, which are precisely the perfect d-codes. The concept of independent perfect domination in this paper is the same concept as their perfect 1-domination.
Reference: 16. <author> T. L. Lu, P. H. Ho and G. J. Chang, </author> <title> The domatic number problem in interval graphs, </title> <journal> SIAM J. Disc. Math. </journal> <volume> 3 (1990) 531-536. </volume> - <pages> 10 </pages> - 
Reference-contexts: Korte and Mohring [13] simplified the operations on a PQ-tree. Simon [19], Hsu and Ma [11], and Hsu [10] designed new algorithms without using PQ-trees. Domination and its variants in interval graphs have been studied extensively <ref> [3, 4, 5, 12, 16, 17, 18, 21] </ref>. The following vertex ordering methodology is of particular interest &gt;from our point of view.
Reference: 17. <author> G. Ramalingam and C. Pandu Rangan, </author> <title> Total domination in interval graphs revisited, </title> <journal> Inform. </journal> <note> Processing Letters 27 (1988) 17-21. </note>
Reference-contexts: Korte and Mohring [13] simplified the operations on a PQ-tree. Simon [19], Hsu and Ma [11], and Hsu [10] designed new algorithms without using PQ-trees. Domination and its variants in interval graphs have been studied extensively <ref> [3, 4, 5, 12, 16, 17, 18, 21] </ref>. The following vertex ordering methodology is of particular interest &gt;from our point of view.
Reference: 18. <author> G. Ramalingam and C. Pandu Rangan, </author> <title> A unified approach to domination problems on interval graphs, </title> <journal> Inform. </journal> <note> Processing Letters 27 (1988) 271-274. </note>
Reference-contexts: Korte and Mohring [13] simplified the operations on a PQ-tree. Simon [19], Hsu and Ma [11], and Hsu [10] designed new algorithms without using PQ-trees. Domination and its variants in interval graphs have been studied extensively <ref> [3, 4, 5, 12, 16, 17, 18, 21] </ref>. The following vertex ordering methodology is of particular interest &gt;from our point of view.
Reference: 19. <author> K. Simon, </author> <title> A new simple linear algorithms to recognize interval graphs, </title> <booktitle> Lecture Notes in Computer Science 553 (1991) 289-308. </booktitle>
Reference-contexts: One of the most basic problems in the study of interval graphs is the problem of recognizing these graphs. Booth and Lueker [7] gave a linear time algorithm for recognizing an interval graph using PQ-trees. Korte and Mohring [13] simplified the operations on a PQ-tree. Simon <ref> [19] </ref>, Hsu and Ma [11], and Hsu [10] designed new algorithms without using PQ-trees. Domination and its variants in interval graphs have been studied extensively [3, 4, 5, 12, 16, 17, 18, 21]. The following vertex ordering methodology is of particular interest &gt;from our point of view.
Reference: 20. <author> J. Spinrad, </author> <title> Transitive orientation in (n 2 ) time, </title> <booktitle> 15th STOC Proceedings (1983) 457-466. </booktitle>
Reference-contexts: a transitive ordering, - 3 - i.e., an ordering of V into 1; 2; : : : ; n such that i &lt; j &lt; k; (i; j) 2 E; and (j; k) 2 E imply (i; k) 2 E: (TO) There is an O (jV j 2 ) algorithm <ref> [20] </ref> to test if a graph is a comparability graph. In the case of a positive answer, the algorithm produces a transitive ordering.
Reference: 21. <author> A. Srinivasa Rao and C. Pandu Rangan, </author> <title> Linear algorithm for domatic number problem on interval graphs, </title> <journal> Inform. </journal> <note> Processing Letters 33 (1989/90) 29-33. </note>
Reference-contexts: Korte and Mohring [13] simplified the operations on a PQ-tree. Simon [19], Hsu and Ma [11], and Hsu [10] designed new algorithms without using PQ-trees. Domination and its variants in interval graphs have been studied extensively <ref> [3, 4, 5, 12, 16, 17, 18, 21] </ref>. The following vertex ordering methodology is of particular interest &gt;from our point of view.
Reference: 22. <author> C. C. Yen, </author> <title> Algorithmic Aspects of Perfect Domination, </title> <type> Ph. D thesis, </type> <institution> Institute of Information Science, National Tsing Hua University, Taiwan (1992). </institution>
Reference-contexts: Yen and Lee [23] proved that the perfect domination problem is NP-complete for bipartite graphs and chordal graphs. They also gave linear time algorithms for the weighted perfect domination problem on trees [23] and series-parallel graphs [24]. Yen <ref> [22] </ref> considered the following variants of perfect domination. A perfect dominating set D is independent, connected, or total if the subgraph G [D] induced by D has no edge, is connected, or has no isolated vertex, respectively. Yen [22] gave NP-complete results of these variants in bipartite graphs and chordal graphs, <p> Yen <ref> [22] </ref> considered the following variants of perfect domination. A perfect dominating set D is independent, connected, or total if the subgraph G [D] induced by D has no edge, is connected, or has no isolated vertex, respectively. Yen [22] gave NP-complete results of these variants in bipartite graphs and chordal graphs, except for connected domination in chordal graphs. She also gave linear time algorithms for these variants in trees, block graphs, and series-parallel graphs.
Reference: 23. <author> C. C. Yen and R. C. T. Lee, </author> <title> The weighted perfect domination problem, </title> <journal> Inform. </journal> <note> Processing Letters 35 (1990) 295-299. </note>
Reference-contexts: Note that the perfect domination problem is just the weighted perfect domination problem with c (v) = 1 for each vertex v and c (e) = 0 for each edge e. Yen and Lee <ref> [23] </ref> proved that the perfect domination problem is NP-complete for bipartite graphs and chordal graphs. They also gave linear time algorithms for the weighted perfect domination problem on trees [23] and series-parallel graphs [24]. Yen [22] considered the following variants of perfect domination. <p> Yen and Lee <ref> [23] </ref> proved that the perfect domination problem is NP-complete for bipartite graphs and chordal graphs. They also gave linear time algorithms for the weighted perfect domination problem on trees [23] and series-parallel graphs [24]. Yen [22] considered the following variants of perfect domination. A perfect dominating set D is independent, connected, or total if the subgraph G [D] induced by D has no edge, is connected, or has no isolated vertex, respectively.
Reference: 24. <author> C. C. Yen and R. C. T. Lee, </author> <title> A linear time algorithm to solve the weighted perfect domination problem in series-parallel graphs, </title> <note> European J. Operational Research (1992), to appear. </note>
Reference-contexts: Yen and Lee [23] proved that the perfect domination problem is NP-complete for bipartite graphs and chordal graphs. They also gave linear time algorithms for the weighted perfect domination problem on trees [23] and series-parallel graphs <ref> [24] </ref>. Yen [22] considered the following variants of perfect domination. A perfect dominating set D is independent, connected, or total if the subgraph G [D] induced by D has no edge, is connected, or has no isolated vertex, respectively.
References-found: 24

