URL: ftp://ftp.cs.umd.edu/pub/cim/papers/ISR_TR_94-11.ps
Refering-URL: http://www.cs.umd.edu/~nau/publications.html
Root-URL: 
Email: skgupta@src.umd.edu  regli@cs.umd.edu  nau@cs.umd.edu  
Title: Integrating DFM with CAD through Design Critiquing  
Author: Satyandra K. Gupta William C. Regli Dana S. Nau 
Keyword: design for manufacturability, design critiquing, manufacturability analysis, feature based modeling, multi-agent coordination.  
Note: Accepted for publication Concurrent Engineering: Research and Applications, Volume 2, Number 2. Also available as CS-TR-3330, UMIACS-TR-94-96,  
Address: College Park, MD 20742 USA  TR94-11.  
Affiliation: Mechanical Engineering Department Institute for Systems Research  Computer Science Department Institute for Systems Research  Computer Science Department Institute for Systems Research Institute for Advanced Computer Studies  University of Maryland  ISR  
Abstract: The increasing focus on design for manufacturability (DFM) in research in concurrent engineering and engineering design is expanding the scope of traditional design activities in order to identify and eliminate manufacturing problems during the design stage. Manufacturing a product generally involves many different kinds of manufacturing activities, each having different characteristics. A design that is good for one kind of activity may not be good for another; for example, a design that is easy to assemble may not be easy to machine. One obstacle to DFM is the difficulty involved in building a single system that can handle the various manufacturing domains relevant to a design. In this paper we propose an architecture for integrating CAD with DFM. As the designer creates a design multiple critiquing systems analyze its manufacturability with respect to different manufacturing domains such as machining, fixturing, assembly, and inspection. Using this analysis, each critiquing system offers advice about potential ways of improving the design and an integration module mediates conflicts among the different critiquing systems in order to provide feedback to improve the overall design. We anticipate that this approach can be used to build a multi-domain environment that will allow designers to create higher-quality products that can be more economically manufactured. This will reduce the need for redesign and reduce product cost and lead time. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> R. Bakerjian, editor. </editor> <booktitle> Design for Manufacturability, volume 6 of Tool and Manufacturing Enginners Handbook. Society of Manufacturing Engineers, </booktitle> <year> 1992. </year>
Reference-contexts: The availability of such tools has become a driving force for research in concurrent engineering and engineering design. As the advantages of concurrent engineering are being realized, more downstream activities associated with the various life-cycle demands of the product are being considered during the design phase <ref> [1, 5, 20] </ref>. The design for manufacturability (DFM) methodology has been established as an effective way to avoid manufacturing problems. In DFM all of the design goals and manufacturing constraints are considered simultaneously and analyzed over the life cycle of a product.
Reference: [2] <author> T. Bardasz and I. Zeid. </author> <title> Cognitive models of memory for mechanical design problems. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 24(6) </volume> <pages> 327-342, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: Ideally one would like a system which takes customer needs as input and automatically designs a suitable product. 4 There are no general solutions to this kind of design automation. However, several attempts have been made to achieve such automation in specific domains (e.g., certain types of mechanical designs <ref> [2, 25] </ref>). Design problems are of varying difficulty. For example, a simple design problem is the selection of standard components; for this type of problem a considerable level of automation has been achieved.
Reference: [3] <author> Tien-Chien Chang. </author> <title> Expert Process Planning for Manufacturing. </title> <publisher> Addison-Wesley Publishing Co., </publisher> <year> 1990. </year>
Reference-contexts: Conditions that introduce precedence constraints can be stored as manufacturing constraints for the particular domain; whether these conditions are applicable will often depend on relationships among the feature instances in the feature model. Furthermore, manufacturing resources and the physical limitations of manufacturing processes can also be modeled as constraints <ref> [3] </ref>. They can be classified into two categories: 1. Strict Constraints: If any strict constraint is violated the proposed design cannot be manufactured. An example of these constraint includes restriction on the various tolerances: excessively tight tolerances cannot be achieved. 2.
Reference: [4] <author> S. H. Chuang and M. R. Henderson. </author> <title> Three-dimensional shape pattern recognition using vertex classification and the vertex-edge graph. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 22(6) </volume> <pages> 377-387, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: This step requires coming up with a domain-specific representation of the design, using manufacturing features appropriate to the domain at hand. Much previous work has been done on design interpretation for machining <ref> [4, 15, 17, 18, 26] </ref>. A presentation of a generic framework for achieving design understanding for a multiple critiquing environment is beyond the scope of this paper.
Reference: [5] <author> M.R. Cutkosky, R.S. Engelmore, R.E. Fikes, M.R. Genesereth, T.R. Gruber, W.S. Mark, J.M. Tenen-baum, and J.C. Weber. </author> <title> PACT: An experiment in integrating concurrent engineering systems. </title> <journal> IEEE Computer, </journal> <volume> 26(1) </volume> <pages> 28-37, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: The availability of such tools has become a driving force for research in concurrent engineering and engineering design. As the advantages of concurrent engineering are being realized, more downstream activities associated with the various life-cycle demands of the product are being considered during the design phase <ref> [1, 5, 20] </ref>. The design for manufacturability (DFM) methodology has been established as an effective way to avoid manufacturing problems. In DFM all of the design goals and manufacturing constraints are considered simultaneously and analyzed over the life cycle of a product.
Reference: [6] <author> D. Das, S.K. Gupta, and D.S. Nau. </author> <title> Reducing setup cost by automated generation of redesign suggestions. </title> <booktitle> In ASME Computers in Engineering Conference, </booktitle> <year> 1994. </year> <note> To appear. </note>
Reference-contexts: For example, we use both of these techniques in the approach we are developing for automatically generating design changes to reduce the setup cost for machined parts <ref> [6] </ref>.
Reference: [7] <author> Bianca Falcidieno and Franca Giannini. </author> <title> Automatic recognition and representation of shape-based features in a geometric modeling system. Computer Vision, </title> <journal> Graphics, and Image Processing, </journal> <volume> 48 </volume> <pages> 93-123, </pages> <year> 1989. </year>
Reference-contexts: For example, it may be possible to machine a given design in several different ways, each corresponding to a different collection of machining features. Each such collection of features is an example of a feature model. The term feature model has come to mean different things to different researchers <ref> [7, 17, 21] </ref>. In our work, a feature model is a single, domain-specific representation of a design. Informally, a feature model is a collection of feature instances that provide a description of a design with respect to some manufacturing domain.
Reference: [8] <author> R. Gadh, E.L. Gursoz, M.A. Hall, F.B. Prinz, and A.M. Sudhalkar. </author> <title> Feature abstraction in a knowledge-based critique of design. </title> <journal> Manufacturing Review, </journal> <volume> 4(2) </volume> <pages> 115-125, </pages> <year> 1991. </year>
Reference-contexts: Research is already underway to develop design critiquing and advisory systems for different types of domain-dependent issues which need to be addressed in the design phase <ref> [8, 10, 13, 14, 24] </ref>.
Reference: [9] <author> Satyandra K. Gupta, Thomas R. Kramer, Dana S. Nau, William C. Regli, and Guangming Zhang. </author> <title> Building MRSEV models for CAM applications. </title> <type> Technical Report ISR TR93-84, </type> <institution> The University of Maryland, </institution> <month> December </month> <year> 1993. </year> <note> Accepted for publication in Advances in Engineering Software. 15 </note>
Reference-contexts: For each manufacturing domain, we use domain-specific features to represent the relationship between design attributes and manufacturing activities. For the purpose of design critiquing, it is beneficial to employ features that correspond directly to manufacturing operations. In previous work <ref> [9, 11, 21] </ref>, we worked on the problem of manufacturability evaluation for machined parts describable using a PDES/STEP-based class of features. In this paper, we are attempting to ensure that the manufacturing processes, feature classes, and evaluation and feedback criteria are not tied to any specific manufacturing domain. <p> More specific details on the implementation can be found in <ref> [9, 21] </ref>.
Reference: [10] <author> S.K. Gupta and D.S. Nau. </author> <title> A systematic approach for analyzing the manufacturability of machined parts. </title> <booktitle> Computer Aided Design, </booktitle> <year> 1994. </year> <note> To appear. </note>
Reference-contexts: Research is already underway to develop design critiquing and advisory systems for different types of domain-dependent issues which need to be addressed in the design phase <ref> [8, 10, 13, 14, 24] </ref>. <p> Below these steps are described in more detail: 1. Examine precedence constraints. The first step is to determine precedence constraints on the order in which the features are to be created during manufacturing. In the case of machining, accessibility <ref> [10] </ref>, tolerance-datum dependencies, setup [12] and other types of interactions among features in the feature model will introduce precedence constraints requiring that some of them be machined before or after other features in the model. <p> Our previous work on identifying precedence constraints for machining operations can be found in <ref> [10, 11] </ref>. If these constraints are not cyclic, then there are one or more possible orders in which the features can be manufactured. However, if some of the precedence constraints form a cycle, then there is no way that the features can be created. <p> We have addressed these issues in our previous work on tolerance estimation in the machining domain <ref> [10, 19] </ref>. 3. Formulate Ratings and Diagnostics. For this step, there are two possibilities: (a) If problems were found during the above steps, then perform diagnostics to determine which design attributes are responsible for the problems. If possible, suggest modifications to the design that will eliminate these problems.
Reference: [11] <author> S.K. Gupta, D.S. Nau, W.C. Regli, and G. Zhang. </author> <title> A methodology for systematic generation and evaluation of alternative operation plans. </title> <editor> In Jami J. Shah, Martti M antyl a, and Dana S. Nau, editors, </editor> <booktitle> Advances in Feature Based Manufacturing, </booktitle> <pages> pages 161-184. </pages> <publisher> Elsevier Science Publishers, </publisher> <year> 1994. </year>
Reference-contexts: For each manufacturing domain, we use domain-specific features to represent the relationship between design attributes and manufacturing activities. For the purpose of design critiquing, it is beneficial to employ features that correspond directly to manufacturing operations. In previous work <ref> [9, 11, 21] </ref>, we worked on the problem of manufacturability evaluation for machined parts describable using a PDES/STEP-based class of features. In this paper, we are attempting to ensure that the manufacturing processes, feature classes, and evaluation and feedback criteria are not tied to any specific manufacturing domain. <p> Our previous work on identifying precedence constraints for machining operations can be found in <ref> [10, 11] </ref>. If these constraints are not cyclic, then there are one or more possible orders in which the features can be manufactured. However, if some of the precedence constraints form a cycle, then there is no way that the features can be created.
Reference: [12] <author> C. C. Hayes and P. Wright. </author> <title> Automatic process planning: using feature interaction to guide search. </title> <journal> Journal of Manufacturing Systems, </journal> <volume> 8(1) </volume> <pages> 1-15, </pages> <year> 1989. </year>
Reference-contexts: Below these steps are described in more detail: 1. Examine precedence constraints. The first step is to determine precedence constraints on the order in which the features are to be created during manufacturing. In the case of machining, accessibility [10], tolerance-datum dependencies, setup <ref> [12] </ref> and other types of interactions among features in the feature model will introduce precedence constraints requiring that some of them be machined before or after other features in the model. Our previous work on identifying precedence constraints for machining operations can be found in [10, 11].
Reference: [13] <author> W. Hsu, C.S.G. Lee, and S. F. Su. </author> <title> Feedback approach to design for assembly by evaluation of assembly plan. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 25(7) </volume> <pages> 395-409, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: Research is already underway to develop design critiquing and advisory systems for different types of domain-dependent issues which need to be addressed in the design phase <ref> [8, 10, 13, 14, 24] </ref>.
Reference: [14] <author> M. J. Jakiela and P. Y. Papalambros. </author> <title> Concurrent engineering with suggestion-making cad systems: Result of initial users tests. </title> <booktitle> In ASME Design Automation Conference, volume DE-Vol. 66, </booktitle> <address> Montreal, Canada, </address> <month> September </month> <year> 1989. </year>
Reference-contexts: Research is already underway to develop design critiquing and advisory systems for different types of domain-dependent issues which need to be addressed in the design phase <ref> [8, 10, 13, 14, 24] </ref>.
Reference: [15] <author> S. Joshi and T. C. Chang. </author> <title> Graph-based heurisitcs for recognition of machined features from a 3D solid model. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 20(2) </volume> <pages> 58-66, </pages> <month> March </month> <year> 1988. </year>
Reference-contexts: This step requires coming up with a domain-specific representation of the design, using manufacturing features appropriate to the domain at hand. Much previous work has been done on design interpretation for machining <ref> [4, 15, 17, 18, 26] </ref>. A presentation of a generic framework for achieving design understanding for a multiple critiquing environment is beyond the scope of this paper.
Reference: [16] <author> Thomas R. Kramer. </author> <title> A library of material removal shape element volumes (MRSEVs). </title> <type> Technical Report NISTIR 4809, </type> <institution> The National Institute of Standards and Technology, Gaithersburg, MD 20899, </institution> <month> March </month> <year> 1992. </year>
Reference-contexts: In the machining domain, we have used this methodology to build a proof-of-concept implementation of the system for feature recognition and generation of alternatives for a subset of the class of machinable features definable as MRSEVs (a STEP-based feature library developed by Kramer <ref> [16] </ref>). More specific details on the implementation can be found in [9, 21].
Reference: [17] <author> Timo Laakko and Martti M antyl a. </author> <title> Feature modelling by incremental feature recognition. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 25(8) </volume> <pages> 479-492, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: This step requires coming up with a domain-specific representation of the design, using manufacturing features appropriate to the domain at hand. Much previous work has been done on design interpretation for machining <ref> [4, 15, 17, 18, 26] </ref>. A presentation of a generic framework for achieving design understanding for a multiple critiquing environment is beyond the scope of this paper. <p> For example, it may be possible to machine a given design in several different ways, each corresponding to a different collection of machining features. Each such collection of features is an example of a feature model. The term feature model has come to mean different things to different researchers <ref> [7, 17, 21] </ref>. In our work, a feature model is a single, domain-specific representation of a design. Informally, a feature model is a collection of feature instances that provide a description of a design with respect to some manufacturing domain.
Reference: [18] <author> M. Marefat and R. L. Kashyap. </author> <title> Geometric reasoning for recognition of three-dimensional object features. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 12(10) </volume> <pages> 949-965, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: This step requires coming up with a domain-specific representation of the design, using manufacturing features appropriate to the domain at hand. Much previous work has been done on design interpretation for machining <ref> [4, 15, 17, 18, 26] </ref>. A presentation of a generic framework for achieving design understanding for a multiple critiquing environment is beyond the scope of this paper.
Reference: [19] <author> D. S. Nau, G. Zhang, and S. K. Gupta. </author> <title> Generation and evaluation of alternative operation sequences. </title> <editor> In A. R. Thangaraj, A. Bagchi, M. Ajanappa, and D. K. Anand, editors, </editor> <title> Quality Assurance through Integration of Manufacturing Processes and Systems, </title> <booktitle> ASME Winter Annual Meeting, </booktitle> <volume> volume PED-Vol. 56, </volume> <pages> pages 93-108, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: We have addressed these issues in our previous work on tolerance estimation in the machining domain <ref> [10, 19] </ref>. 3. Formulate Ratings and Diagnostics. For this step, there are two possibilities: (a) If problems were found during the above steps, then perform diagnostics to determine which design attributes are responsible for the problems. If possible, suggest modifications to the design that will eliminate these problems.
Reference: [20] <author> N.P.Suh. </author> <title> Design axiom and quality control. </title> <journal> Robotics and Computer Integrated Manufacturing, </journal> 9(4/5):367-376, 1992. 
Reference-contexts: The availability of such tools has become a driving force for research in concurrent engineering and engineering design. As the advantages of concurrent engineering are being realized, more downstream activities associated with the various life-cycle demands of the product are being considered during the design phase <ref> [1, 5, 20] </ref>. The design for manufacturability (DFM) methodology has been established as an effective way to avoid manufacturing problems. In DFM all of the design goals and manufacturing constraints are considered simultaneously and analyzed over the life cycle of a product.
Reference: [21] <author> William C. Regli and Dana S. Nau. </author> <title> Recognition of volumetric features from CAD models: Problem formalization and algorithms. </title> <type> Technical Report TR 93-41, </type> <institution> The University of Maryland, Institute for Systems Research, College Park, MD 20742, USA, </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: For each manufacturing domain, we use domain-specific features to represent the relationship between design attributes and manufacturing activities. For the purpose of design critiquing, it is beneficial to employ features that correspond directly to manufacturing operations. In previous work <ref> [9, 11, 21] </ref>, we worked on the problem of manufacturability evaluation for machined parts describable using a PDES/STEP-based class of features. In this paper, we are attempting to ensure that the manufacturing processes, feature classes, and evaluation and feedback criteria are not tied to any specific manufacturing domain. <p> For example, it may be possible to machine a given design in several different ways, each corresponding to a different collection of machining features. Each such collection of features is an example of a feature model. The term feature model has come to mean different things to different researchers <ref> [7, 17, 21] </ref>. In our work, a feature model is a single, domain-specific representation of a design. Informally, a feature model is a collection of feature instances that provide a description of a design with respect to some manufacturing domain. <p> More specific details on the implementation can be found in <ref> [9, 21] </ref>.
Reference: [22] <author> Jami J. Shah. </author> <title> Assessment of features technology. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 23(5) </volume> <pages> 331-343, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: At present, the standard is still evolving and there is no definitive structure for representing and exchanging all the relevant information for the many manufacturing domains for which one would desire a critiquing system. A discussion of the STEP Form Features model can be found in <ref> [22, 23] </ref>. In each manufacturing domain, there may be more than one way of realizing the design attributes. Correspondingly, there may be more than one way to describe the design in terms of the features available in each manufacturing domain.
Reference: [23] <author> Jami J. Shah. </author> <title> Experimental investigation of the STEP form-feature information model. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 23(4) </volume> <pages> 282-296, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: At present, the standard is still evolving and there is no definitive structure for representing and exchanging all the relevant information for the many manufacturing domains for which one would desire a critiquing system. A discussion of the STEP Form Features model can be found in <ref> [22, 23] </ref>. In each manufacturing domain, there may be more than one way of realizing the design attributes. Correspondingly, there may be more than one way to describe the design in terms of the features available in each manufacturing domain.
Reference: [24] <author> B.G. Silverman and T.M Mezher. </author> <title> Expert critics in engineering design: Lessons learned and research needs. </title> <journal> AI magazine, </journal> <volume> 13(1) </volume> <pages> 45-62, </pages> <year> 1992. </year>
Reference-contexts: Research is already underway to develop design critiquing and advisory systems for different types of domain-dependent issues which need to be addressed in the design phase <ref> [8, 10, 13, 14, 24] </ref>.
Reference: [25] <author> R. H. Sturges, K. O'Shaughnessy, and R. G. Reed. </author> <title> A systematic approach to conceptual design. Concurrent Engineering: </title> <journal> Research And Applications, </journal> <volume> 1(2) </volume> <pages> 93-105, </pages> <year> 1993. </year> <month> 16 </month>
Reference-contexts: Ideally one would like a system which takes customer needs as input and automatically designs a suitable product. 4 There are no general solutions to this kind of design automation. However, several attempts have been made to achieve such automation in specific domains (e.g., certain types of mechanical designs <ref> [2, 25] </ref>). Design problems are of varying difficulty. For example, a simple design problem is the selection of standard components; for this type of problem a considerable level of automation has been achieved.
Reference: [26] <author> J. H. Vandenbrande and A. A. G. Requicha. </author> <title> Spatial reasoning for the automatic recognition of machinable features in solid models. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 15(12):1269, </volume> <month> December </month> <year> 1993. </year>
Reference-contexts: This step requires coming up with a domain-specific representation of the design, using manufacturing features appropriate to the domain at hand. Much previous work has been done on design interpretation for machining <ref> [4, 15, 17, 18, 26] </ref>. A presentation of a generic framework for achieving design understanding for a multiple critiquing environment is beyond the scope of this paper.
Reference: [27] <author> W. Winchell. </author> <title> Realistic Cost Estimating for Manufacturing. </title> <booktitle> Society of Manufacturing Engineers, </booktitle> <year> 1989. </year> <month> 17 </month>
Reference-contexts: Manufacturing time and cost are universal measures which can be estimated for manufacturing operations across many different manufacturing domains. Extensive research has been done to estimate the time and cost associated with various kinds of manufacturing operations <ref> [27] </ref>. To compute the manufacturability rating, any combination of manufacturing cost and time can be used. The relative weights assigned to cost and time would depend upon the policy of the company using such a design critiquing system.
References-found: 27

