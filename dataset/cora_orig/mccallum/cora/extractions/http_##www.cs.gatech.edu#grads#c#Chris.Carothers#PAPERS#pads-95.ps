URL: http://www.cs.gatech.edu/grads/c/Chris.Carothers/PAPERS/pads-95.ps
Refering-URL: http://www.cs.gatech.edu/grads/c/Chris.Carothers/homepage.html
Root-URL: 
Title: A Case Study in Simulating PCS Networks Using Time Warp  
Author: Christopher D. Carothers and Richard M. Fujimoto Yi-Bing Lin 
Note: Appeared in 9 th Workshop on Parallel and Distributed Simulation (PADS '95)  
Address: Atlanta, Georgia 30332  Morristown, New Jersey 07962  
Affiliation: College of Computing Georgia Institute of Technology  Bellcore  
Abstract: There has been rapid growth in the demand for mobile communications over the past few years. This has led to intensive research and development efforts for complex PCS (personal communication service) networks. Capacity planning and performance modeling is necessary to maintain a high quality of service to the mobile subscriber while minimizing cost to the PCS provider. The need for flexible analysis tools and the high computational requirements of large PCS network simulations make it an excellent candidate for parallel simulation. Here, we describe our experiences in developing two PCS simulation models on a general purpose distributed simulation platform based on the Time Warp mechanism. These models utilize two widely used approaches to simulating PCS networks: (i) the call-initiated and (ii) the portable-initiated models. We discuss design decisions that were made in mapping these models to the Time Warp executive, and characterize the workloads resulting from these models in terms of factors such as communication locality and computation granularity. We then present performance measurements for their execution on a network of workstations. These measurements indicate that the call-initiated model generally outperforms the portable initiated model, but is not able to capture phenomenon such as the busy line effect. Moreover, these studies indicate that the high locality in large-scale PCS network simulations make them well-suited for execution on general purpose parallel and distributed simulation platforms. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Brown. </author> <title> Calendar queues: A fast O(1) priority queue implementation for the simulation event set problem. </title> <journal> Communications of the ACM, </journal> <volume> 31(10) </volume> <pages> 1220-1227, </pages> <month> Oct. </month> <year> 1988. </year>
Reference-contexts: It is anticipated that most simulations will contain far more entities than processors, so each processor will typically contain hundreds or thousands of entities (LPs). A priority queue data structure called the calendar queue <ref> [1] </ref> is used in each processor to select the next entity to execute. The processor's scheduler always selects the entity containing the smallest timestamped event as the next one for execution. Each entity includes a linear list to hold the unprocessed events (method invocations) scheduled for that entity.
Reference: [2] <author> C. D. Carothers, R. M. Fujimoto, Y-B. Lin, and P. </author> <title> England. Distributed Simulation of Large-Scale PCS Networks. </title> <booktitle> In 2 nd International Workshop on Modeling, Analysis, and Simulation of Computer and Telecommunication Systems, </booktitle> <pages> pages 2-6. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> Feburary </month> <year> 1994. </year>
Reference-contexts: Because of the large computational requirements and the need for flexibility, PCS network models are a good candidate for a parallel simulation [8]. The impact of varying PCS simulation parameters on the Time Warp mechanism is investigated in <ref> [2] </ref>. This paper extends that work and examines our experiences in executing PCS simulation models on a distributed Time Warp system.
Reference: [3] <author> Cox, D. C. </author> <title> Personal Communications A Viewpoint. </title> <journal> IEEE Communications Magazine, </journal> <volume> 128(11), </volume> <year> 1990. </year>
Reference-contexts: 1 Introduction A personal communication service (PCS) network <ref> [3] </ref> provides wireless communication services for nomadic users. The service area of a PCS network is populated with a set of geographically distributed transmitters/receivers called radio ports.
Reference: [4] <author> R. M. Fujimoto. </author> <title> Parallel discrete event simulation. </title> <journal> Com munications of the ACM, </journal> <volume> 33(10) </volume> <pages> 30-53, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: The synchronization mechanism must ensure that each LP processes events in timestamp order in order to prevent events in the simulated future from affecting those in the past. The synchronization issue has been widely studied (e.g., see <ref> [4, 6, 13, 16] </ref>). The Time Warp mechanism uses a detection-and-recovery protocol to synchronize the computation. <p> The synchronization issue has been widely studied (e.g., see [4, 6, 13, 16]). The Time Warp mechanism uses a detection-and-recovery protocol to synchronize the computation. For a more detailed discussion of the Time Warp mechanism we refer the reader to <ref> [4, 10] </ref>. 3.2 Implementing the PCS Models A natural way to map both PCS models to a general purpose, sequential simulator would be to realize each Call/Portable as a simulation process and Cells as state variables.
Reference: [5] <author> R. M. Fujimoto. </author> <title> Performance of Time Warp under synthetic workloads. </title> <booktitle> In Proceedings of the SCS Multiconfer-ence on Distributed Simulation, </booktitle> <pages> pages 23-28, </pages> <year> 1990. </year>
Reference-contexts: As previously stated, lookahead determines how far into the simulated future an LP can predict future events. In <ref> [5] </ref> it was shown that lookahead can significantly affect the performance of Time Warp simulators with small message densities. However, since both PCS models contain very large message densities, the impact of lookahead on system performance may not be as large.
Reference: [6] <author> R. M. Fujimoto and D. M. Nicol. </author> <title> State of the art in parallel simulation. </title> <booktitle> In 1992 Winter Simulation Conference Proceedings, </booktitle> <pages> pages 122-127, </pages> <month> December </month> <year> 1992. </year>
Reference-contexts: The synchronization mechanism must ensure that each LP processes events in timestamp order in order to prevent events in the simulated future from affecting those in the past. The synchronization issue has been widely studied (e.g., see <ref> [4, 6, 13, 16] </ref>). The Time Warp mechanism uses a detection-and-recovery protocol to synchronize the computation.
Reference: [7] <author> A. Geist, A. Beguelin, J. Dongarra, W. Jian, R. Manchek, and V. Sunderam. </author> <title> Pvm 3 user's guide and reference manual. </title> <type> Technical Report TM-12187, </type> <institution> Oak Ridge National Laboratory, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: Communications between processors is implemented using PVM 3.2 (Parallel Virtual Machine), a message passing system for heterogeneous collections of networked computers <ref> [7] </ref>. In addition to PVM's default routing of messages, PVM will route messages directly between application processes by setting up a TCP/IP connection between each enrolled application, thus bypassing the PVM daemons at both the sending and receiving host.
Reference: [8] <author> A. G. Greenburg, B. D. Lubachevsky, and D. M. Nicol. </author> <title> Efficient Massively Parallel Simulation of Dynamic Channel Assignment Schemes for Wireless Communications. </title> <booktitle> In 8 th Workshop on Parallel and Distributed Simulation, </booktitle> <volume> volume 24. </volume> <pages> SCS, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: Further, such large simulation programs may require more memory than is available on a single machine. Because of the large computational requirements and the need for flexibility, PCS network models are a good candidate for a parallel simulation <ref> [8] </ref>. The impact of varying PCS simulation parameters on the Time Warp mechanism is investigated in [2]. This paper extends that work and examines our experiences in executing PCS simulation models on a distributed Time Warp system.
Reference: [9] <author> J. C-I Chuang. </author> <title> Performance issues and algorithms for dynamic channel assignment. </title> <journal> IEEE J. Select. Areas Com-mun., </journal> <year> 1993. </year>
Reference-contexts: In particular, we will discuss our approach to mapping the PCS models to the distributed simulator, characteristics of the workload model that impact the efficiency of the distributed simulator, and the performance of the system that was developed. Most PCS models fall into two types of models: call-initiated <ref> [9, 17] </ref> or portable-initiate [19, 12]. In this study, we will consider both types of models. These models are described in section 2. Section 3 describes design decisions that were made to map the models to a Time Warp based distributed simulation environment.
Reference: [10] <author> D. R. Jefferson. </author> <title> Virtual time. </title> <journal> ACM TOPLAS, </journal> <volume> 7(3) </volume> <pages> 404-425, </pages> <month> July </month> <year> 1985. </year>
Reference-contexts: The synchronization issue has been widely studied (e.g., see [4, 6, 13, 16]). The Time Warp mechanism uses a detection-and-recovery protocol to synchronize the computation. For a more detailed discussion of the Time Warp mechanism we refer the reader to <ref> [4, 10] </ref>. 3.2 Implementing the PCS Models A natural way to map both PCS models to a general purpose, sequential simulator would be to realize each Call/Portable as a simulation process and Cells as state variables.
Reference: [11] <author> Kuek, S.S., and Wong, W.C. </author> <title> Ordered Dynamic Channel Assignment Scheme with Reassignment in Highway Microcells. </title> <journal> IEEE Trans. Veh. Technol., </journal> <volume> 41(3) </volume> <pages> 271-277, </pages> <year> 1992. </year>
Reference-contexts: However, analytic models are often not sufficiently general or flexible because they must make simplifying assumptions about the system parameters to make the analysis tractable. For example, the blocking probability of a fixed channel assignment PCS network can be modeled analytically using the Erlang-B system <ref> [11, 20] </ref>. However, the Erlang-B system is only appropriate for predicting the blocking probability p b when the number of portables is much larger than the number of available channels, resulting in a p b that is much greater than 1%. <p> channel assignment PCS network (a network where the radio channels used in each cell are static and the number of channels per cell is constant) cannot be easily modified to study other aspects of a PCS network such as the effect of call hand-off [17] and dynamic channel assignment 1 <ref> [11, 20] </ref> on call blocking statistics. Now because discrete event simulation provides a general, flexible framework for evaluating system models, large high-capacity personal communication services (PCS) networks models are an excellent candidate for simulation. In a PCS simulation, the network is usually represented by hexagonal or square cells. <p> In a PCS simulation, the network is usually represented by hexagonal or square cells. Ideally, PCS simulation experiments should model large networks containing thousands of cells. However, due to limited computing resources, most stud ies only examine small-scale networks containing fewer than 50 cells <ref> [11, 20] </ref>, and output statistics of the boundary cells are usually discarded to avoid the boundary effect. Lin and Mak [12] showed that this approach may lead to biased output statistics, and suggest using a large network with a wrap-around topology to achieve reliable simulation results.
Reference: [12] <author> Lin, Y.-B., and Mak, V.K. </author> <title> On Simulating a Large-Scale Personal Communications Services Network. </title> <note> To appear in ACM TOMACS, </note> <year> 1993. </year>
Reference-contexts: However, due to limited computing resources, most stud ies only examine small-scale networks containing fewer than 50 cells [11, 20], and output statistics of the boundary cells are usually discarded to avoid the boundary effect. Lin and Mak <ref> [12] </ref> showed that this approach may lead to biased output statistics, and suggest using a large network with a wrap-around topology to achieve reliable simulation results. To illustrate the impact of network size, consider the following portable initiated simulation model using a fixed channel assignment scheme. <p> Most PCS models fall into two types of models: call-initiated [9, 17] or portable-initiate <ref> [19, 12] </ref>. In this study, we will consider both types of models. These models are described in section 2. Section 3 describes design decisions that were made to map the models to a Time Warp based distributed simulation environment.
Reference: [13] <author> J. Misra. </author> <title> Distributed-discrete event simulation. </title> <journal> ACM Computing Surveys, </journal> <volume> 18(1) </volume> <pages> 39-65, </pages> <month> March </month> <year> 1986. </year>
Reference-contexts: The synchronization mechanism must ensure that each LP processes events in timestamp order in order to prevent events in the simulated future from affecting those in the past. The synchronization issue has been widely studied (e.g., see <ref> [4, 6, 13, 16] </ref>). The Time Warp mechanism uses a detection-and-recovery protocol to synchronize the computation.
Reference: [14] <author> D. M. Nicol. </author> <title> Parallel discrete-event simulation of FCFS stochastic queueing networks. </title> <journal> SIGPLAN Notices, </journal> <volume> 23(9) </volume> <pages> 124-137, </pages> <month> September </month> <year> 1988. </year>
Reference-contexts: Because timestamps for determining call interarrivals, call completions and mobility are exponentially distributed, both model implementations will have a lookahead of 0 in the worst case. Lookahead can be improved by pre-computing portions of the computation for future events <ref> [14] </ref>. For the PCS models discussed in this study, it is possible to pre-compute call completion times, which should result in an increase in the average looka-head of the simulation. However, this improvement reduces the extensibility of the simulation implementation to incorporate new features added to the simulation model.
Reference: [15] <author> David M. Nicol. </author> <title> Performance bounds on parallel self-initiating discrete-event simulations. </title> <journal> ACM TOMACS, </journal> <volume> 1(1) </volume> <pages> 24-50, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: Accordingly, because each Cell LP determines its own Call arrivals and sends messages to itself, this simulation is self-initiating. This impacts the performance of the distributed simulation, as will be discussed later. For a detailed analysis of the performance bounds for self-initiating simulations, we refer the reader to <ref> [15] </ref>. The portable-initiated simulation is similar to the call-initiated Model. During initialization, each Cell sends itself an initial event that invokes the StartUp method. Upon processing the StartUp method, each Cell will initialize and schedule some fixed number of messages, each containing a Portable.
Reference: [16] <author> R. Richter and J. C. Walrand. </author> <title> Distributed simulation of discrete event systems. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 77(1) </volume> <pages> 99-113, </pages> <month> January </month> <year> 1989. </year>
Reference-contexts: The synchronization mechanism must ensure that each LP processes events in timestamp order in order to prevent events in the simulated future from affecting those in the past. The synchronization issue has been widely studied (e.g., see <ref> [4, 6, 13, 16] </ref>). The Time Warp mechanism uses a detection-and-recovery protocol to synchronize the computation.
Reference: [17] <author> Tekinary, S., and Jabbari, B. </author> <title> A Measurement Based Prioritization Scheme for Handovers in Cellular and Micro-cellular Networks. </title> <journal> IEEE J. Sel. Areas Comm., </journal> <month> October </month> <year> 1992. </year>
Reference-contexts: an analytic model for a fixed channel assignment PCS network (a network where the radio channels used in each cell are static and the number of channels per cell is constant) cannot be easily modified to study other aspects of a PCS network such as the effect of call hand-off <ref> [17] </ref> and dynamic channel assignment 1 [11, 20] on call blocking statistics. Now because discrete event simulation provides a general, flexible framework for evaluating system models, large high-capacity personal communication services (PCS) networks models are an excellent candidate for simulation. <p> In particular, we will discuss our approach to mapping the PCS models to the distributed simulator, characteristics of the workload model that impact the efficiency of the distributed simulator, and the performance of the system that was developed. Most PCS models fall into two types of models: call-initiated <ref> [9, 17] </ref> or portable-initiate [19, 12]. In this study, we will consider both types of models. These models are described in section 2. Section 3 describes design decisions that were made to map the models to a Time Warp based distributed simulation environment.
Reference: [18] <author> F. Wieland, L. Hawley, A. Feinberg, M. DiLorento, L. Blume, P. Reiher, B. Beckman, P. Hontalas, S. Bel-lenot, and D. R. Jefferson. </author> <title> Distributed combat simulation and Time Warp: The model and its performance. </title> <booktitle> In Proceedings of the SCS Multiconference on Distributed Simulation, </booktitle> <volume> volume 21, </volume> <pages> pages 14-20. </pages> <booktitle> SCS Simulation Series, </booktitle> <month> March </month> <year> 1989. </year>
Reference-contexts: The cost is prohibitive in a distributed environment where communications are very expensive. In order to avoid sharing state between LPs, we realized Cells as LPs but Calls/Portables as timestamped messages that travel among the Cell LPs. Mapping Cells to LPs is a standard technique used in other applications <ref> [18] </ref>. Mapping Call and Portables to timestamped messages is a reasonable approach from a modeling perspective when viewed from the model flowcharts (Figures 2 and 3). In both models when a call (portable) arrives, channel availability must be determined.
Reference: [19] <author> Wong, W. C. </author> <title> Packet Reservation Multiple Access in a Metropolitan Microcellular Radio Environment. </title> <journal> IEEE J. Sel. Areas Comm., </journal> <volume> 11(6) </volume> <pages> 918-925, </pages> <year> 1993. </year>
Reference-contexts: The experiments assume that the expected number of portables in a cell is N . A portable resides in a cell for a period of time t (in this paper, t has an exponential distribution with mean 1 , as proposed in <ref> [19] </ref>), then moves to one of the four neighboring cells with equal probability. The call arrivals to a portable form a Poisson process with the arrival rate . The call holding times have an exponential distribution with mean 1 . <p> Most PCS models fall into two types of models: call-initiated [9, 17] or portable-initiate <ref> [19, 12] </ref>. In this study, we will consider both types of models. These models are described in section 2. Section 3 describes design decisions that were made to map the models to a Time Warp based distributed simulation environment.
Reference: [20] <author> Zhang, M., and Yum, T.-S. </author> <title> Comparisons of Channel-Assignment Strategies in Cellular Mobile Telephone Sys tems. </title> <journal> IEEE Trans. Veh. Technol., </journal> <volume> 38(4) </volume> <pages> 211-215, </pages> <year> 1989. </year> <month> 8 </month>
Reference-contexts: However, analytic models are often not sufficiently general or flexible because they must make simplifying assumptions about the system parameters to make the analysis tractable. For example, the blocking probability of a fixed channel assignment PCS network can be modeled analytically using the Erlang-B system <ref> [11, 20] </ref>. However, the Erlang-B system is only appropriate for predicting the blocking probability p b when the number of portables is much larger than the number of available channels, resulting in a p b that is much greater than 1%. <p> channel assignment PCS network (a network where the radio channels used in each cell are static and the number of channels per cell is constant) cannot be easily modified to study other aspects of a PCS network such as the effect of call hand-off [17] and dynamic channel assignment 1 <ref> [11, 20] </ref> on call blocking statistics. Now because discrete event simulation provides a general, flexible framework for evaluating system models, large high-capacity personal communication services (PCS) networks models are an excellent candidate for simulation. In a PCS simulation, the network is usually represented by hexagonal or square cells. <p> In a PCS simulation, the network is usually represented by hexagonal or square cells. Ideally, PCS simulation experiments should model large networks containing thousands of cells. However, due to limited computing resources, most stud ies only examine small-scale networks containing fewer than 50 cells <ref> [11, 20] </ref>, and output statistics of the boundary cells are usually discarded to avoid the boundary effect. Lin and Mak [12] showed that this approach may lead to biased output statistics, and suggest using a large network with a wrap-around topology to achieve reliable simulation results.
References-found: 20

