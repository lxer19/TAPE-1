URL: http://www-sal.cs.uiuc.edu/~nachum/papers/debug-ppr.ps.gz
Refering-URL: http://sal.cs.uiuc.edu/~nachum/papers/
Root-URL: http://www.cs.uiuc.edu
Title: Logical Debugging  
Author: YUH-JENG LEE NACHUM DERSHOWITZ 
Address: Code CS/Le Monterey, CA 93943  1304 W Springfield Ave. Urbana, IL 61801  
Affiliation: Computer Science Department Naval Postgraduate School  Department of Computer Science University of Illinois  
Abstract: Logic programming offers a distinctive feature that is rarely met by other traditional programming languages: namely, one can use logic for both specification and computation. We present a methodology for reasoning about logic programs and their specifications. This methodology can be applied to program debugging as well as program synthesis. We focus on the use of executable specifications to generate test cases for bug discovery, locate bugs when test data cause a program to fail, and guide deductive and inductive bug correction. The behavior of the automated debugger is demonstrated through several examples. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Adam, A., Laurent, J.-P. </author> <year> (1980). </year> <title> Laura, a system to debug student programs. </title> <journal> Artificial Intelligence, </journal> <volume> 15 </volume> <pages> 75-122. </pages>
Reference: <author> Apt, K. R., van Emden, M. H. </author> <year> (1982). </year> <title> Contributions to the theory of logic programming. </title>
Reference: <author> J. </author> <booktitle> of the Association for Computing Machinery, </booktitle> <volume> 29 </volume> <pages> 841-862. </pages>
Reference: <author> Barstow, D., Duffey, R., Smoliar, S., Vestal, S. </author> <year> (1982). </year> <title> An automatic programming system to support an experimental science. </title> <booktitle> In Sixth International Conference on Software Engineering, </booktitle> <pages> pages 360-366. </pages>
Reference-contexts: Given the current state of technology, however, such an automatic programming system is still remote for general software production. Nontheless, by restricting the problem domain of such a system, it is possible to apply such technology and build systems for practical applications. The system described in <ref> (Barstow et al. 1982) </ref> deals with a class of numerical software for scientific processing and has allowed the client scientists both greater flexibility in their ability to specify program behavior and much more rapid program development to establish the validity of that behavior.
Reference: <author> Clark, K. L. </author> <year> (1981). </year> <title> The synthesis and verification of logic programs. </title> <type> Research Report DOC 81/36, </type> <institution> Department of Computing, Imperial College, </institution> <address> London, England. </address>
Reference: <author> Clocksin, W. F., Mellish, C. S. </author> <year> (1987). </year> <title> Programming in Prolog. </title> <publisher> Springer-Verlag, </publisher> <address> New York, third edition. </address>
Reference: <author> Darlington, J., Field, A. J., Pull, H. </author> <year> (1986). </year> <title> The unification of functional and logic languages. </title> <editor> In DeGroot, D., Lindstrom, G., editors, </editor> <title> Logic Programming: Functions, Relations, </title> <booktitle> and Equations, </booktitle> <pages> pages 37-70. </pages> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ. </address>
Reference-contexts: Gerhart & Yelowitz (1976)). To obtain the desired effect, it is sometimes necessary to use impure features, i.e., non-logical control structures, of Prolog. 6 More expressive languages, e.g., Eqlog (Goguen & Meseguer (1986)), Hope with unification <ref> (Darlington et al. 1986) </ref>, and Rite (Josephson & Dershowitz (1986)) may be even more suitable for specifications. 4.2 Generation of Test Cases Executable specifications of a program not only compute the desired output, but also generate useful test cases for that program, provided that axioms for primitive predicates are supplied.
Reference: <author> Dershowitz, N., Jouannaud, J.-P. </author> <year> (1990). </year> <title> Rewrite systems. </title> <editor> In van Leeuwen, J., editor, </editor> <booktitle> Handbook of Theoretical Computer Science B: Formal Methods and Semantics, chapter 6, </booktitle> <pages> pages 243-320. </pages> <publisher> North-Holland, Amsterdam. </publisher>
Reference: <author> Dershowitz, N. </author> <year> (1983). </year> <title> The Evolution of Programs. </title> <publisher> Birkhauser, </publisher> <address> Boston, MA. </address>
Reference: <author> Dershowitz, N. </author> <year> (1985). </year> <title> Synthetic programming. </title> <journal> Artificial Intelligence, </journal> <volume> 25 </volume> <pages> 323-373. </pages>
Reference: <editor> Fuchi, K., Furukawa, K. </editor> <booktitle> (1986). The role of logic programming in the fifth generation computer project. In Third International Conference on Logic Programming, </booktitle> <pages> pages 1-24, </pages> <address> London, United Kingdom. </address>
Reference: <author> Gerhart, S. L., Yelowitz, L. </author> <year> (1976). </year> <title> Observations of fallibility in applications of modern programming methodologies. </title> <journal> IEEE Transactions on Software Engineering, SE-2(3):195-207. </journal>
Reference: <author> Goguen, J. A., Meseguer, J. </author> <year> (1986). </year> <title> EQLOG: Equality, types, and generic modules for logic programming. </title> <editor> In Lindstrom, D. D. G., editor, </editor> <title> Logic Programming: Relations, Functions, and Equations. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ. </address>
Reference: <author> Hoare, C. A. R. </author> <year> (1969). </year> <title> An axiomatic basis for computer programming. </title> <journal> Communications of the ACM, </journal> <volume> 12(10) </volume> <pages> 576-583. </pages>
Reference: <author> Hogger, C. J. </author> <year> (1981). </year> <title> Derivation of logic programs. </title> <journal> J. of the Association for Computing Machinery, </journal> <volume> 28(2) </volume> <pages> 372-392. </pages>
Reference: <author> Huntbach, M. M. </author> <year> (1986). </year> <title> An improved version of shapiro's Model Inference System. </title> <editor> In Shapiro, E., editor, </editor> <booktitle> Proceedings of the Third International Conference on Logic Programming, </booktitle> <pages> pages 180-187, </pages> <address> London, UK. </address> <note> Springer-Verlag. available as Vol. 225, Lecture Notes in Computer Science, Springer-Verlag. 36 Johnson, </note> <author> W. L., Soloway, E. </author> <year> (1985). </year> <title> PROUST: Knowledge-based program understanding. </title> <journal> IEEE Transactions on Software Engineering, SE-11(3):267-275. </journal>
Reference: <author> Josephson, N. A., Dershowitz, N. </author> <year> (1986). </year> <title> An implementation of narrowing: The rite way. </title> <booktitle> In Proceedings of the IEEE Symposium on Logic Programming, </booktitle> <pages> pages 187-197, </pages> <address> Salt Lake City, UT. </address>
Reference: <author> Katz, S. M., Manna, Z. </author> <year> (1975). </year> <title> Towards automatic debugging of programs. </title> <booktitle> In Proceedings of the International Conference on Reliable Software, </booktitle> <pages> pages 143-155, </pages> <address> Los Angeles, CA. </address>
Reference: <author> Katz, S., Manna, Z. </author> <year> (1976). </year> <title> Logical analysis of programs. </title> <journal> Communications of the ACM, </journal> <volume> 19(4) </volume> <pages> 188-206. </pages>
Reference: <author> Kowalski, R. A., van Emden, M. H. </author> <year> (1976). </year> <title> The semantics of predicate logic as a programming language. </title> <journal> J. of the Association for Computing Machinery, </journal> <volume> 23 </volume> <pages> 733-742. </pages>
Reference: <author> Kowalski, R. A. </author> <year> (1974). </year> <title> Predicate logic as programming language. </title> <booktitle> In Proceedings of the IFIP Congress, </booktitle> <pages> pages 569-574, </pages> <address> Amsterdam, The Netherlands. </address>
Reference: <author> Kowalski, R. </author> <year> (1985). </year> <title> The relation between logic programming and logic specification. In Hoare, </title> <editor> C. A. R., Shepherdson, editors, </editor> <booktitle> Mathematical Logic and Programming Languages. Prentice/Hall International, </booktitle> <address> Englewood Cliffs, NJ. </address>
Reference: <author> Liskov, B. H., Berzins, V. </author> <year> (1986). </year> <title> An appraisal of program specifications. </title> <editor> In Gehani, N., McGettrick, A., editors, </editor> <booktitle> Software Specification Techniques, </booktitle> <pages> pages 3-23. </pages> <publisher> Addison-Wesley. </publisher>
Reference: <author> Lloyd, J. W. </author> <year> (1984). </year> <title> Foundations of Logic Programming. </title> <publisher> Springer-Verlag, </publisher> <address> New York. </address>
Reference: <author> Lloyd, J. W. </author> <year> (1987). </year> <title> Declarative error diagnosis. </title> <journal> New Generation Computing, </journal> <volume> 5 </volume> <pages> 133-154. </pages>
Reference: <author> Loveland, D. W. </author> <year> (1978). </year> <title> Automated Theorem Proving: A Logical Basis. </title> <publisher> North-Holland, </publisher> <address> New York. </address>
Reference: <author> Manna, Z., Waldinger, R. J. </author> <year> (1980). </year> <title> A deductive approach to program synthesis. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 2(1) </volume> <pages> 90-121. </pages>
Reference: <author> Murray, W. R. </author> <year> (1986). </year> <title> Automatic Program Debugging for Intelligent Tutoring Systems. </title> <type> PhD thesis, </type> <institution> The University of Texas at Austin, Austin, Texas. </institution>
Reference: <author> Myers, G. J. </author> <year> (1979). </year> <title> The Art of Software Testing. </title> <publisher> Wiley, </publisher> <address> New York. </address>
Reference: <author> Pereira, L. M. </author> <year> (1986). </year> <title> Rational debugging in logic programming. </title> <booktitle> In Proceedings of the Third International Conference on Logic Programming, </booktitle> <pages> pages 203-210, </pages> <address> London, United Kingdom. </address> <note> available as Vol. 225, Lecture Notes in Computer Science, Springer-Verlag. </note>
Reference: <author> Plaisted, D. A. </author> <year> (1984). </year> <title> An efficient bug location algorithm. </title> <booktitle> In Proceedings of the Second International Logic Programming Conference, </booktitle> <pages> pages 151-157, </pages> <institution> Uppsala, Sweden. </institution>
Reference: <author> Renner, S. A. </author> <year> (1991). </year> <title> Logical Error Diagnosis. </title> <type> PhD thesis, </type> <institution> University of Illinois, Urbana. </institution>
Reference: <author> Robinson, J. A. </author> <year> (1965). </year> <title> A machine-oriented logic based on the resolution principle. </title> <journal> J. of the Association for Computing Machinery, </journal> <volume> 12(1) </volume> <pages> 23-41. </pages> <note> 37 Ruth, </note> <author> G. </author> <year> (1976). </year> <title> Intelligent program analysis. </title> <journal> Artificial Intelligence, </journal> <volume> 7 </volume> <pages> 65-85. </pages>
Reference: <author> Seviora, R. E. </author> <year> (1987). </year> <title> Knowledge-based program debugging systems. </title> <journal> IEEE Software, </journal> <pages> pages 20-32. </pages>
Reference: <author> Shapiro, E. Y. </author> <year> (1983). </year> <title> Algorithmic Program Debugging. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA. </address>
Reference: <author> Smith, D. R. </author> <year> (1982). </year> <title> Derived preconditions and their use in program synthesis. </title> <booktitle> In Proceedings of the Sixth Conference on Automated Deduction, </booktitle> <pages> pages 172-193, </pages> <address> New York, NY. </address>
Reference: <author> Waldinger, R. J., Levitt, K. N. </author> <year> (1974). </year> <title> Reasoning about programs. </title> <journal> Artificial Intelligence, </journal> <volume> 5(3) </volume> <pages> 235-316. </pages>
References-found: 37

