URL: http://www.cs.princeton.edu/~csserra/thesis.ps
Refering-URL: http://www.cs.princeton.edu/~csserra/
Root-URL: http://www.cs.princeton.edu
Title: Bridging SUIF and Zephyr: A Compiler Infrastructure Interchange  
Author: Christopher S. Serra 
Date: May 5, 1997  
Affiliation: Princeton University  
Abstract: fl I pledge my honor that this thesis represents my own work in accordance with University regulations. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Andrew W. Appel. </author> <title> Modern Compiler Implementation. February, </title> <booktitle> 1997. </booktitle> <address> New York: </address> <publisher> Cambridge University Press. </publisher>
Reference: [2] <institution> Stanford Compiler Group. </institution> <address> The SUIF Library. Stanford University, </address> <year> 1994. </year> <month> 17 </month>
Reference-contexts: The rest of the SUIF system, the so-called "kernel", consists of the actual IR imple 8 mentation (in C++) and an accompanying library that provides functionality for modifying and debugging SUIF data. The details of the kernel are described in the SUIF Library manual <ref> [2] </ref>. A brief description of the SUIF IR (minus the library) appears below. 3.1 Primitives The SUIF IR allows for the representation of both high- and low-level program 1 information, by using two levels of tree data structures. High-level structure is expressed in language-independent abstract syntax trees (ASTs).
References-found: 2

