URL: http://www.cs.cmu.edu/afs/cs/project/jair/pub/volume5/yip96a.ps.Z
Refering-URL: http://www.cs.washington.edu/research/jair/abstracts/yip96a.html
Root-URL: 
Email: yip@martigny.ai.mit.edu  fz@cis.ohio-state.edu  
Title: Spatial Aggregation: Theory and Applications  
Author: Kenneth Yip Feng Zhao 
Address: 545 Technology Square Cambridge, MA 02139 USA  Columbus, OH 43210 USA  
Affiliation: MIT Artificial Intelligence Laboratory,  Department of Computer and Information Science, The Ohio State University  
Note: Journal of Artificial Intelligence Research 5 (1996) 1-26 Submitted 12/95; published 8/96  
Abstract: Visual thinking plays an important role in scientific reasoning. Based on the research in automating diverse reasoning tasks about dynamical systems, nonlinear controllers, kinematic mechanisms, and fluid motion, we have identified a style of visual thinking, imagistic reasoning. Imagistic reasoning organizes computations around image-like, analogue representations so that perceptual and symbolic operations can be brought to bear to infer structure and behavior. Programs incorporating imagistic reasoning have been shown to perform at an expert level in domains that defy current analytic or numerical methods. We have developed a computational paradigm, spatial aggregation, to unify the description of a class of imagistic problem solvers. A program written in this paradigm has the following properties. It takes a continuous field and optional objective functions as input, and produces high-level descriptions of structure, behavior, or control actions. It computes a multi-layer of intermediate representations, called spatial aggregates, by forming equivalence classes and adjacency relations. It employs a small set of generic operators such as aggregation, classification, and localization to perform bidirectional mapping between the information-rich field and successively more abstract spatial aggregates. It uses a data structure, the neighborhood graph, as a common interface to modularize computations. To illustrate our theory, we describe the computational structure of three implemented problem solvers - kam, maps, and hipair | in terms of the spatial aggregation generic operators by mixing and matching a library of commonly used routines.
Abstract-found: 1
Intro-found: 1
Reference: <author> Bailey-Kellogg, C., Zhao, F., & Yip, K. </author> <year> (1996). </year> <title> Spatial aggregation: language and applications. </title> <note> In Proceedings of AAAI. To appear. </note>
Reference: <author> Bradley, E. </author> <year> (1992). </year> <title> Taming chaotic circuits. </title> <type> Tech. rep. </type> <institution> AI-TR-1388, MIT Artificial Intelligence Lab. </institution>
Reference: <author> Chandrasekaran, B., & Narayanan, N. </author> <year> (1990). </year> <title> Towards a theory of commonsense visual reasoning. </title> <editor> In Nori, K., & Madhavan, C. (Eds.), </editor> <booktitle> Foundations of Software Technology and Theoretical Computer Science. </booktitle> <publisher> Springer. </publisher>
Reference: <author> DeKleer, J., & Brown, J. </author> <year> (1984). </year> <title> A qualitative physics based on confluences. </title> <journal> Artificial Intelligence, </journal> <volume> 24. </volume>
Reference-contexts: central computational problem is the efficient transformation of a pointwise field description of a physical system into economical symbolic abstractions well suited for explaining the structure and behavior of the system. 2 Figure 1 illustrates how the field ontology relates to the other commonly used ontologies in Qualitative Physics: device <ref> (DeKleer & Brown, 1984) </ref>, process (Forbus, 1984), and constraint (Kuipers, 1986). To be useful, the symbolic descriptions must impose a conceptual structure on the system so that the complexity of the system can be understood in terms of well-defined parts and subparts and interactions among them.
Reference: <author> Forbus, K. </author> <year> (1984). </year> <title> Qualitative process theory. </title> <journal> Artificial Intelligence, </journal> <volume> 24. </volume>
Reference-contexts: efficient transformation of a pointwise field description of a physical system into economical symbolic abstractions well suited for explaining the structure and behavior of the system. 2 Figure 1 illustrates how the field ontology relates to the other commonly used ontologies in Qualitative Physics: device (DeKleer & Brown, 1984), process <ref> (Forbus, 1984) </ref>, and constraint (Kuipers, 1986). To be useful, the symbolic descriptions must impose a conceptual structure on the system so that the complexity of the system can be understood in terms of well-defined parts and subparts and interactions among them.
Reference: <author> Forbus, K., Nielsen, P., & Faltings, B. </author> <year> (1991). </year> <title> Qualitative spatial reasoning: the CLOCK project. </title> <journal> Artificial Intelligence, </journal> <volume> 51. </volume>
Reference: <author> Funt, B. </author> <year> (1980). </year> <title> Problem solving with diagrammatic representations. </title> <journal> Artificial Intelligence, </journal> <volume> 13. </volume>
Reference-contexts: The second line of work concerns analogue simulations in naive physics. Funt's whisper program is the first AI program that uses primarily perceptual primitives to predict dynamical events in a simple blocks world <ref> (Funt, 1980) </ref>. Arguing that the commonsense predictions of solid or fluid behavior cannot possibly depend on the solution of complicated equations, Gardin and Meltzer (1989) proposed a "molecular" simulation of strings and fluids.
Reference: <author> Gardin, F., & Meltzer, B. </author> <year> (1989). </year> <title> Analogical representations of naive physics. </title> <journal> Artificial Intelligence, </journal> <volume> 38. </volume>
Reference: <author> Gelernter, H. </author> <year> (1963). </year> <title> Realization of a geometry-theorem proving machine. </title> <booktitle> In Computers and Thought. </booktitle> <publisher> McGraw-Hill. </publisher>
Reference: <author> Gelsey, A. </author> <year> (1995). </year> <title> Automated reasoning about machines. </title> <journal> Artificial Intelligence, </journal> <volume> 74. </volume>
Reference: <author> Glasgow, J. </author> <year> (1993). </year> <title> The imagery debate revisited: a computational perspective. </title> <journal> Computational Intelligence. </journal>
Reference: <author> Joskowicz, L., & Sacks, E. </author> <year> (1991). </year> <title> Computational kinematics. </title> <journal> Artificial Intelligence, </journal> <volume> 51, </volume> <pages> 381-416. </pages>
Reference-contexts: These problem solvers have been designed to perform tasks in many different domains: control and interpretation of numerical experiments (Yip, 1991; Nishida & et al., 1991; Zhao, 1994), kinematics analysis of mechanisms <ref> (Joskowicz & Sacks, 1991) </ref>, design of controllers (Zhao, 1995; Bradley, 1992), analysis of seismic data (Junker & Braunschweug, 1995), and reasoning about fluid motion (Yip, 1995). However, there are important commonalities underlying them. <p> We isolate a set of generic operators aggregate, classify, re-describe, and search which correspond to the important conceptual pieces common to a class of imagistic problem solvers such as kam (Yip, 1991), maps (Zhao, 1994), and hipair <ref> (Joskowicz & Sacks, 1991) </ref>. The next section discusses these operators in detail. Section 4 illustrates the use of these operators in a rational reconstruction of three implemented computer programs. 3. The Language of Spatial Aggregation We present a language for describing computational processes organized around spatial aggregates. <p> The dimension of the new object is one higher than that of the object. 6. convolve (object mask) performs pointwise convolution with the given mask. 4. Examples of Spatial Aggregation In this section, we describe the architecture of three implemented systems kam (Yip, 1991), maps (Zhao, 1994), and hipair <ref> (Joskowicz & Sacks, 1991) </ref> in terms of the spatial aggregation framework. Although these programs are designed for different tasks, their computations share a strikingly similar pattern: These programs construct spatial objects, and interpret them via multi-layers of abstraction by object aggregation, classification, and re-description.
Reference: <author> Junker, U., & Braunschweug, B. </author> <year> (1995). </year> <title> History-based interpretation of finite element simulations of seismic wave fields. </title> <booktitle> In Proceedings of IJCAI. </booktitle>
Reference-contexts: These problem solvers have been designed to perform tasks in many different domains: control and interpretation of numerical experiments (Yip, 1991; Nishida & et al., 1991; Zhao, 1994), kinematics analysis of mechanisms (Joskowicz & Sacks, 1991), design of controllers (Zhao, 1995; Bradley, 1992), analysis of seismic data <ref> (Junker & Braunschweug, 1995) </ref>, and reasoning about fluid motion (Yip, 1995). However, there are important commonalities underlying them. In this paper, we present a framework to provide a unified description of this class of problem solvers.
Reference: <author> Kosslyn, S. M. </author> <year> (1994). </year> <title> Image and Brain: the resolution of the imagery debate. </title> <publisher> MIT Press. </publisher>
Reference: <author> Kuipers, B. </author> <year> (1986). </year> <title> Qualitative simulation. </title> <journal> Artificial Intelligence, </journal> <volume> 29. </volume>
Reference-contexts: pointwise field description of a physical system into economical symbolic abstractions well suited for explaining the structure and behavior of the system. 2 Figure 1 illustrates how the field ontology relates to the other commonly used ontologies in Qualitative Physics: device (DeKleer & Brown, 1984), process (Forbus, 1984), and constraint <ref> (Kuipers, 1986) </ref>. To be useful, the symbolic descriptions must impose a conceptual structure on the system so that the complexity of the system can be understood in terms of well-defined parts and subparts and interactions among them. The relevant parts and interactions are often abstract global properties of the field.
Reference: <author> Kuipers, B., & Levitt, T. </author> <year> (1988). </year> <title> Navigation and mapping in large-scale space. </title> <journal> AI Magazine, </journal> <volume> 9(2). </volume>
Reference: <author> Yip & Zhao Larkin, J., & Simon, H. </author> <year> (1987). </year> <title> Why a diagram is (sometimes) worth ten thousand words. </title> <journal> Cognitive Science, </journal> <volume> 11. </volume>
Reference: <author> Nevins, A. </author> <year> (1975). </year> <title> Plane geometry theorem proving using forward chaining. </title> <journal> Artificial Intelligence, </journal> <volume> 6. </volume>
Reference-contexts: The first line of work investigates how diagram-like representations aid heuristic search. Gelernter (1963) used diagrams in his geometry theorem prover to prune goals that are obviously false. Nevins' geometry theorem prover constrained forward deduction to conclude facts about objects explicitly depicted in the diagrams <ref> (Nevins, 1975) </ref>. Stallman and Sussman (1977) exploited the connectivity and locality of lumped-parameter model to guide forward reasoning and implement symbolic constraint propagation.
Reference: <author> Nishida, T., & et al. </author> <year> (1991). </year> <title> Automated phase portrait analysis by integrating qualitative and quantitative analysis. </title> <booktitle> In Proceedings of AAAI. </booktitle>
Reference: <author> Stallman, R., & Sussman, G. J. </author> <year> (1977). </year> <title> Forward reasoning and dependency-directed backtracking in a system for computer-aided circuit analysis. </title> <journal> Artificial Intelligence, </journal> <volume> 9. </volume>
Reference: <author> Ullman, S. </author> <year> (1984). </year> <title> Visual routines. </title> <journal> Cognition, </journal> <volume> 18. </volume>
Reference-contexts: Given an instantaneous configuration, predict its possible short-term behaviors. * Infer behavioral descriptions. Explain and summarize the evolution of objects by a set of domain-specific interaction rules. 2.1 Requirements of imagistic reasoning Partly motivated by Ullman's theory of visual analysis <ref> (Ullman, 1984) </ref>, we find desirable the following general requirements on imagistic reasoning: * Abstractness. The problem solver should be able to find objects defined by abstract global properties. * Open-endedness.
Reference: <author> Yip, K. M. </author> <year> (1991). </year> <title> KAM: A system for intelligently guiding numerical experimentation by computer. </title> <publisher> MIT Press. </publisher>
Reference-contexts: We isolate a set of generic operators aggregate, classify, re-describe, and search which correspond to the important conceptual pieces common to a class of imagistic problem solvers such as kam <ref> (Yip, 1991) </ref>, maps (Zhao, 1994), and hipair (Joskowicz & Sacks, 1991). The next section discusses these operators in detail. Section 4 illustrates the use of these operators in a rational reconstruction of three implemented computer programs. 3. <p> The dimension of the new object is one higher than that of the object. 6. convolve (object mask) performs pointwise convolution with the given mask. 4. Examples of Spatial Aggregation In this section, we describe the architecture of three implemented systems kam <ref> (Yip, 1991) </ref>, maps (Zhao, 1994), and hipair (Joskowicz & Sacks, 1991) in terms of the spatial aggregation framework.
Reference: <author> Yip, K. M. </author> <year> (1995). </year> <title> Reasoning about fluid motion: finding structures. </title> <booktitle> In Proceedings of IJCAI. </booktitle>
Reference-contexts: to perform tasks in many different domains: control and interpretation of numerical experiments (Yip, 1991; Nishida & et al., 1991; Zhao, 1994), kinematics analysis of mechanisms (Joskowicz & Sacks, 1991), design of controllers (Zhao, 1995; Bradley, 1992), analysis of seismic data (Junker & Braunschweug, 1995), and reasoning about fluid motion <ref> (Yip, 1995) </ref>. However, there are important commonalities underlying them. In this paper, we present a framework to provide a unified description of this class of problem solvers. Our framework consists of three ideas: * The field ontology: The input is a field, a mapping from one continuum to another.
Reference: <author> Zhao, F. </author> <year> (1994). </year> <title> Extracting and representing qualitative behaviors of complex systems in phase spaces. </title> <booktitle> Artificial Intelligence, </booktitle> <pages> 69(1-2), 51-92. </pages>
Reference-contexts: We isolate a set of generic operators aggregate, classify, re-describe, and search which correspond to the important conceptual pieces common to a class of imagistic problem solvers such as kam (Yip, 1991), maps <ref> (Zhao, 1994) </ref>, and hipair (Joskowicz & Sacks, 1991). The next section discusses these operators in detail. Section 4 illustrates the use of these operators in a rational reconstruction of three implemented computer programs. 3. <p> The dimension of the new object is one higher than that of the object. 6. convolve (object mask) performs pointwise convolution with the given mask. 4. Examples of Spatial Aggregation In this section, we describe the architecture of three implemented systems kam (Yip, 1991), maps <ref> (Zhao, 1994) </ref>, and hipair (Joskowicz & Sacks, 1991) in terms of the spatial aggregation framework. Although these programs are designed for different tasks, their computations share a strikingly similar pattern: These programs construct spatial objects, and interpret them via multi-layers of abstraction by object aggregation, classification, and re-description.
Reference: <author> Zhao, F. </author> <year> (1995). </year> <title> Intelligent simulation in designing complex dynamical control systems. </title> <editor> In Tzafestas, & Verbruggen (Eds.), </editor> <booktitle> Artificial intelligence in industrial decision making, control, and automation. </booktitle> <publisher> Kluwer Academic Publishers. </publisher> <pages> 26 </pages>
References-found: 25

