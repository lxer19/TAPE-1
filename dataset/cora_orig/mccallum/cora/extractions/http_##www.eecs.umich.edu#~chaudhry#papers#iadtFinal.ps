URL: http://www.eecs.umich.edu/~chaudhry/papers/iadtFinal.ps
Refering-URL: http://www.eecs.umich.edu/~chaudhry/publications.html
Root-URL: http://www.eecs.umich.edu
Email: email: -chaudhry, moyne-@umich.edu, rundenst@cs.wpi.edu  
Title: A FORMAL MODEL FOR RULE INHERITANCE AND OVERRIDING IN ACTIVE OBJECT-ORIENTED DATABASES  
Author: Nauman A. Chaudhry James R. Moyne Elke A. Rundensteiner 
Address: Ann Arbor, MI 48109  Worcester, MA 01609  
Affiliation: +Dept. of Elect. Eng. Comp. Science, The University of Michigan,  *Computer Science Department, Worcester Polytechnic Institute,  
Abstract: The concept of inheritance is among the most important features of object-oriented databases (OODBs). However, no general treatment of rule inheritance and overriding has been undertaken for active OODBs. Such treatment is conspicuously missing for rules that are defined over multiple classes, even though most active OODBs support the definition of such rules. In this paper, we fill this gap by developing a formal model for rule inheritance and overriding in active OODBs. We identify important features required in an active OODB model, such as support for rule inheritance and rule overriding, and provision of the notion of syntactic compatibility. We then define a formal model for active rules by adapting the concept of multi-methods to define inheritance and overriding of active rules. We extend the notion of syntactic compatibility to active rules and show how it can be elegantly enforced in our formal model. The support for rule inheritance in our model is uniformly applicable to all active rules, including those that span multiple classes. 
Abstract-found: 1
Intro-found: 1
Reference: [Abiteboul+ 95] <author> S. Abiteboul, R. Hull, V. Vianu, </author> <title> Foundations of Databases, </title> <publisher> Addison-Wesley, </publisher> <year> 1995. </year>
Reference-contexts: With the above formulation, we are then able to define the notions of syntactic compatibility for active rules. 4 A FORMAL MODEL FOR ACTIVE RULE INHERITANCE We now develop a formal model for rule inheritance in active OODBs. As our base model, we adapt the object model presented in <ref> [Abiteboul+ 95] </ref>. We then add appropriate constructs to this model to define active rule inheritance. 4.1 PASSIVE SCHEMA Our base data model includes values and objects. A value has a type. This type is recursively definable from atomic types and the set and tuple type constructors. <p> To ensure type safety, the legal subtyping relationships defined here correspond to the GOM model defined in [Kemper & Moerkotte 94] and not the ones presented in <ref> [Abiteboul+ 95] </ref>. 4.2.1 SOME USEFUL DEFINITIONS Class Vectors: To simplify the presentation of our model, we will use to represent a list/vector of classes c 1 , . . ., c n .
Reference: [Bertino+ 97] <editor> E. Bertino, et. al., </editor> <title> Trigger Inheritance and Overriding in Active Object Database Systems, </title> <booktitle> Proc. of DOOD, </booktitle> <year> 1997. </year>
Reference: [Castagna 95] <author> G. Castagna, </author> <title> Covariance and Contravari-ance: Conict without a Cause, </title> <journal> ACM TOPLAS, </journal> <volume> 17, 3, </volume> <month> May </month> <year> 1995, </year> <pages> 431-447. </pages>
Reference-contexts: Thus for each rule definition, the interface consists of the formal types of the classes on which the rule definition can be activated, and the type of the parameters that can be passed to the rule definition. By adapting the definition of compatibility for multi-methods <ref> [Castagna 95] </ref>, we can see that signature compatibility requires that in all overridings of a rule r the class vector c a a a c' c c' a a' a' a should become more specific (i.e., covariant) and the parameter overriding can only be made less specific (i.e., contravariant).
Reference: [Ceri+ 96] <author> S. Ceri, et. al., </author> <title> Active Rule Management in Chimera, </title> <editor> in J. Widom and S. Ceri (eds.), </editor> <title> Active Database Systems: Triggers and Rules for Advanced Database Processing, </title> <publisher> Morgan Kaufmann Publishers Inc., </publisher> <year> 1996. </year>
Reference: [Chakravarthy+ 95] <author> S. Chakravarthy, et. al., </author> <title> ECA Rule Integration into an OODBMS: </title> <booktitle> Architecture and Implementation, Proc. of 11th ICDE, </booktitle> <year> 1995, </year> <pages> 341-348. </pages>
Reference: [Chambers 92] <author> C. Chambers, </author> <title> Object-Oriented Multi-Methods in Cecil, </title> <booktitle> Proc. of ECOOP, </booktitle> <year> 1992, </year> <pages> 33-56. </pages>
Reference-contexts: In multi-methods, multiple arguments to a message can be used in method dispatch <ref> [Chambers 92] </ref>. The programmer can define a number of methods with arguments that are more specific than the arguments of a more general method with the same name.
Reference: [Chaudhry+ 97] <author> N. Chaudhry, J. Moyne, E. Rundensteiner, </author> <title> Active Controller: Utilizing Active Databases for Implementing Multi-Step Control of Semiconductor Manufacturing, </title> <type> Technical Report, </type> <institution> Dept. of EECS, The University of Michigan. </institution>
Reference: [Collet+ 94] <author> C. Collet, et.al., </author> <title> NAOS - Efficient and Modular Reactive Capabilities in an Object-Oriented Database System, </title> <booktitle> Proc. of 20th Int. VLDB, </booktitle> <year> 1994, </year> <pages> 132-143. </pages>
Reference: [Geppert+ 95] <author> A. Geppert, et. al., </author> <title> Architecture and Implementation of the Active Object-Oriented Database Management System SAMOS, </title> <type> Technical Report 95.29, </type> <institution> Institut fur Informatik, Universitat Zurich, Switzerland. </institution>
Reference: [Kappel+ 94] <author> G. Kappel, et. al., </author> <title> TriGS - Making a Passive Object-Oriented Database System Active, Journal of Object-Oriented Programming, </title> <booktitle> July-August 1994, </booktitle> <pages> 40-63. </pages>
Reference: [Kemper & Moerkotte 94] <author> A. Kemper and G. Moerkotte, </author> <title> Object-Oriented Database Management: </title> <booktitle> Applications in Engineering and Computer Science, </booktitle> <publisher> Prentice Hall, </publisher> <year> 1994. </year>
Reference-contexts: To ensure type safety, the legal subtyping relationships defined here correspond to the GOM model defined in <ref> [Kemper & Moerkotte 94] </ref> and not the ones presented in [Abiteboul+ 95]. 4.2.1 SOME USEFUL DEFINITIONS Class Vectors: To simplify the presentation of our model, we will use to represent a list/vector of classes c 1 , . . ., c n .
Reference: [Lieuwen+ 96] <author> D. Lieuwen, et. al., </author> <title> The Ode Active Database: Trigger Semantics and Implementation, </title> <booktitle> Proc. of 12th IEEE ICDE, </booktitle> <year> 1996, </year> <pages> 412-420. </pages>
Reference: [Paton+ 93] <author> N. Paton, et. al., </author> <title> Dimensions Of Active Behaviour, </title> <booktitle> Proc. of Rules in Database Systems, </booktitle> <year> 1993, </year> <pages> 40-57. </pages>
Reference-contexts: A comprehensive survey of various dimensions in providing active database functionality is given in <ref> [Paton+ 93] </ref>. Various systems use different choices for these dimensions resulting in very divergent rule models. Since many of these dimensions are mutually exclusive, we now (informally) state choices in the rule model that we will formalize in Section 4: Rules are defined externally to a class.
Reference: [Taivalsaari 96] <author> A. Taivalsaari, </author> <title> On the Notion of Inheritance, </title> <journal> ACM Computing Surveys, </journal> <volume> 28, 3, </volume> <month> September, </month> <year> 1996, </year> <pages> 438-479. </pages>
Reference: [Wegner & Zdonik 88] <author> P. Wegner and S. Zdonik, </author> <title> Inheritance as an Incremental Modification Mechanism or What Like is and Isnt Like, </title> <booktitle> Proc. of ECOOP, </booktitle> <year> 1988, </year> <pages> 55-77. </pages>
Reference: [Zimmermann+ 96] <author> J. Zimmermann, et. al., </author> <title> Design, Implementation and Management of Rules in an Active Database System, </title> <booktitle> Proc. of DEXA, </booktitle> <year> 1996, </year> <pages> 422-435. </pages> <address> c' c </address>
References-found: 16

