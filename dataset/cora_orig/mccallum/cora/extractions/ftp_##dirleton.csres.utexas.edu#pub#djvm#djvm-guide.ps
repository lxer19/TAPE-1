URL: ftp://dirleton.csres.utexas.edu/pub/djvm/djvm-guide.ps
Refering-URL: http://www.cli.com/software/djvm/index.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Guide to The dJVM Model Version 0.5 Alpha DRAFT  
Author: Richard M. Cohen 
Note: (C) Copyright 1996, 1997, Computational Logic, Inc., all rights reserved. Draft Version 0.5 Alpha  
Date: May 12, 1997  May 12, 1997 17:07  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: <institution> References </institution>
Reference: [Bevier, 1995] <author> William R. Bevier. </author> <title> Tools for describing typed data structures in acl2. </title> <type> Technical report, </type> <institution> Computational Logic, Inc., </institution> <month> September </month> <year> 1995. </year>
Reference: [Kaufmann and Moore, 1994] <author> Matt Kaufmann and J Strother Moore. </author> <title> Design goals of acl2. </title> <type> Technical Report 101, </type> <institution> Computational Logic, Inc., </institution> <month> August </month> <year> 1994. </year>
Reference: [Kaufmann and Moore, 1996] <author> M. Kaufmann and J S. Moore. ACL2: </author> <title> An Industrial Strength Version of Nqthm. </title> <booktitle> In Proceedings of the Eleventh Annual Conference on Computer Assurance (COMPASS-96), </booktitle> <pages> pages 23-34. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> June </month> <year> 1996. </year> <note> Revised version to appear in IEEE Trans. on Software Engineering, </note> <year> 1997. </year>
Reference: [R.S. Boyer, 1991] <author> J S. Moore R.S. Boyer, M.J. Kaufmann. </author> <title> A short note on some advantages of acl2. </title> <type> Technical Report 215, </type> <institution> Computational Logic, Inc., </institution> <year> 1991. </year>
Reference: [Steele Jr., 1984] <author> Guy L. Steele Jr. </author> <title> Common LISP: The Language. </title> <publisher> Digital Press, </publisher> <year> 1984. </year> <note> 39 Draft Version 0.5 Alpha May 12, 1997 - 17:07 </note>
Reference-contexts: 12, 1997 - 17:07 2 OVERVIEW OF RUNNING THE MODEL * Interfaces * Throwing and handling exceptions * Dynamic loading of classes * Concurrency, multithreading, and synchronization * Floating Point data and operations 2 Overview of Running the Model The model is defined in the ACL2 dialect of Common Lisp <ref> [Steele Jr., 1984] </ref>. An pre-built executable image for Solaris 2 systems is available. (See section B, page 38.) The top-level of the model is a defensive interpreter for the Java Virtual Machine bytecodes. This interpreter will run JVM bytecoded methods defined in symbolic representations of Java class class files.
References-found: 6

