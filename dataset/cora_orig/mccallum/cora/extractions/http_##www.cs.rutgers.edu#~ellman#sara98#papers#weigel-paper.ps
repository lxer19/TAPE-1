URL: http://www.cs.rutgers.edu/~ellman/sara98/papers/weigel-paper.ps
Refering-URL: http://www.cs.rutgers.edu/~ellman/sara98/papers/
Root-URL: http://www.cs.rutgers.edu
Title: On Reformulation of Constraint Satisfaction Problems (Extended Version)  
Author: Rainer Weigel, Christian Bliek and Boi V. Faltings 
Keyword: Constraint-Based Reasoning  
Address: IN-Ecublens, CH-1015 Lausanne, Switzerland  
Affiliation: Artificial Intelligence Laboratory Swiss Federal Institute of Technology in Lausanne (EPFL)  
Abstract: The performance of constraint based problem solving depends crucially on the problem representation. The same problem may be easy or difficult to solve depending on the way we formulate it. In this paper, we study reformulations of discrete constraint satisfaction problems (CSPs). We present a technique to transform a CSP P into its Boolean form, which allows us to find different reformulations of P . We identify a new class of tractable CSPs and present sufficient conditions for detecting solvability and unsolvability of a CSP in linear time. Finally we introduce the notion of fault tolerance of solutions, and show how the Boolean form can be used to find them. 
Abstract-found: 1
Intro-found: 1
Reference: [ 1 ] <author> B. Selman, H. Kautz and D. McAllester, </author> <title> `Ten Challenges in Propositional Reasoning and Search', </title> <booktitle> in Proc. of the 16 th IJCAI, </booktitle> <pages> pp. 50-54, </pages> <address> Nagoya, Japan, </address> <year> (1997). </year>
Reference-contexts: 1 Introduction Performance of problem solving depends crucially on the problem representation. The same problem may be easy or difficult to solve depending on the way we describe it. Recently, the problem of obtaining and comparing different problem encodings was raised as an AI challenge in <ref> [ 1 ] </ref> .
Reference: [ 2 ] <author> B.M.W. Cheng, J.H.M. Lee, and J.C.K Wu, </author> <title> `Speeding up constraint propagation by redundant modeling', </title> <booktitle> in Second International Conference on Principles and Practice of Constraint Programming, </booktitle> <pages> pp. 91-103, </pages> <year> (1996). </year>
Reference-contexts: That is, the uniqueness constraints with connections fR 1 :i; ::; R 4 :ig for i = 1; : : : ; 4. Cheng et al. proposed in <ref> [ 2 ] </ref> redundant modelling as an approach for increasing the pruning in the constraint solving process. This approach is based on the idea that different models of the same problem can be combined with channelling constraints, and that the combined model allows more pruning than a single one. <p> Thus redundant modelling with channelling constraints and combing formulations via the Boolean form are equivalent with respect to pruning because exactly the same constraints are available in both formulations. However, with the Boolean form, we can explain that the additional pruning reported in <ref> [ 2 ] </ref> is due to redundant uniqueness constraints coming from different reformulations. Thus one can argue that redundant modelling corresponds to adding redundant constraints in the Boolean formulation.
Reference: [ 3 ] <author> Berthe Y. Choueiry, </author> <title> Abstraction Methods for Resource Allocation, </title> <type> Ph.D. dissertation, </type> <institution> Swiss Federal Institute of Technology in Lausanne, </institution> <year> 1994. </year>
Reference-contexts: If P 0 is unsolvable, then P is unsolvable, and we decide the unsolvability of P in linear time. The idea of relaxing constraints can be applied to resource allocation problems: Resource Allocation (RA) Problems: Resource Allocation (RA) problems can be defined as follows (see <ref> [ 3 ] </ref> ): "Given a set of tasks with fixed endpoints, and given, for each task a set of resources that can carry out the task, assign one resource to each of the tasks such that no resource is assigned to two different tasks at the same time".
Reference: [ 4 ] <author> Berthe Y. Choueiry and Guevara Noubir, </author> <title> `Using complete no-good sets to build a disjunctive decomposition scheme for discrete constraint satisfaction problems', </title> <booktitle> in FLAIRS'97, </booktitle> <pages> pp. 40-46, </pages> <address> Daytona Beach, FL, </address> <year> (1997). </year>
Reference-contexts: Each subgraph is an interval graph because of the underlying interval graph of the problem RA 4 . Thus one can see that the resulting graph is always an interval graph. Note that this was already described by B.Y. Choueiry in <ref> [ 4 ] </ref> . She called the resulting graph the co-microstructure and derived a disjunctive decomposition scheme based on the maximal cliques of the interval graph.
Reference: [ 5 ] <author> J. de Kleer, </author> <title> `A Comparison of Assumption-Based Truth Maintenance and Constraint Satisfaction', </title> <booktitle> in Proc. of the 11 th IJCAI, </booktitle> <pages> pp. 290-296, </pages> <address> Detroit, MI, </address> <year> (1989). </year>
Reference-contexts: The constraint graph of the Boolean form Remark: The formulation of the Boolean CSP is similar to the formulation of a CSP as an integer linear programming problem as described in [ 17 ] and also close to a CSP encoding in an ATMS system <ref> [ 5 ] </ref> . Example: The 4-queens problem is that of finding possibilities to place 4 queens on a chessboard so that no two queens can attack each other. A representation ROW is a formulation with 4 variables each of which corresponds to a row of the chessboard.
Reference: [ 6 ] <author> Eugene C. Freuder, </author> <title> `Constraint solving techniques', in Constraint Programming of series F: Computer and Sytems Sciences, </title> <editor> eds., E. Tyngu B. Mayoh and J. Penjaen, </editor> <booktitle> 51-74, NATO ASI Series, </booktitle> <year> (1992). </year>
Reference-contexts: The problem P is in fact a meta CSP <ref> [ 6 ] </ref> obtained by clustering the nodes of each clique in the clique cover. Note that in general building a meta CSP is exponential in the size of the subprob-lems, because the number of solutions in a subproblem can be exponential.
Reference: [ 7 ] <author> Eugene C. Freuder and Daniel Sabin, </author> <title> `Interchangeability Supports Abstraction and Reformulation for Multi-Dimensional Constraint Satisfaction', </title> <booktitle> in Proc. of AAAI-96, </booktitle> <pages> pp. 191-196, </pages> <address> Portland,, </address> <year> (1996). </year>
Reference-contexts: This limits of course the reformulations one can obtain using our approach, but at the same time distinguishes our approach from other types of reformulations. Reformulations based on interchangeability described in <ref> [ 7 ] </ref> for example cannot be obtained by finding different clique covers. If two problems P 1 and P 2 are induced by different clique covers of G bb , then we say that P 1 is a reformulation of P 2, and vice versa.
Reference: [ 8 ] <author> F. Gavril, </author> <title> `Algorithms for minimum coloring, maximum clique, minimum covering by cliques, and maximum independent set of a chordal graph', </title> <journal> SIAM J. Comput., </journal> <pages> 1-2, </pages> <year> (1972). </year>
Reference-contexts: We conclude that a stable set of size n of G bb is a solution of P . Since G bb is triangulated, we can find a maximum stable set of G bb (P ) in linear time by Gavril's theorem <ref> [ 8 ] </ref> . 2 With the theorem above we have identified a new tractable class of CSPs. However, constraint problems with a triangulated constraint graph G bb are rare. We can use Theorem 2 to derive sufficient conditions for a CSP P to be solvable. <p> However, constraint problems with a triangulated constraint graph G bb are rare. We can use Theorem 2 to derive sufficient conditions for a CSP P to be solvable. The idea is to triangulate the constraint graph G bb (P ) in linear time <ref> [ 8 ] </ref> . An edge added by the triangulation means that the pair of Boolean variables connected by the edge is made incompatible. Thus the problem P 0 obtained by triangulating G bb (P ) contains more incompatibility, and is thus more constrained than P .
Reference: [ 9 ] <author> Philippe Jegou, </author> <title> `Decomposition of domains based on the micro-structure of Finite Constraint-Satisfaction Problems', </title> <booktitle> in Proc. of AAAI-93, </booktitle> <pages> pp. 731-736, </pages> <address> Washington, DC, </address> <year> (1993). </year>
Reference-contexts: We know from <ref> [ 9 ] </ref> that for a solvable problem P the maximum clique size !() is always equal to the number of variables in P . Let ff (G bb ) denote the stability number 3 and k (G bb ) the clique cover number of G bb .
Reference: [ 10 ] <author> Richard E. Korf, </author> <title> `Toward a model of representation changes', </title> <journal> Artificial Intelligence, </journal> <volume> 14, </volume> <pages> 41-78, </pages> <year> (1980). </year>
Reference-contexts: Example: A classic "chestnut" for reformulation is the problem of tiling a mutilated checkerboard with dominoes with two opposite corner cut out as discussed for example in <ref> [ 15; 12; 10 ] </ref> . It is for example impossible to cover the board shown in Fig. 1 with dominoes. This is because a domino covers a square of each colour, but there are 30 black squares and 32 white squares.
Reference: [ 11 ] <author> David Lesaint, </author> <title> `Maximal Sets of Solutions for Constraint Satisfaction Problems', </title> <booktitle> in Proc. of the 11 th ECAI, </booktitle> <pages> pp. 110-114, </pages> <address> Amesterdam, The Netherlands, </address> <year> (1994). </year>
Reference-contexts: With such a form one can for example enumerate the maximal cross product representation of solution sets, which is closely related to the maximal consistent decision described in <ref> [ 11 ] </ref> . 6 Conclusion In this paper we presented an algorithm to transform a CSP P into its Boolean form. This Boolean form was then used to find reformulations of P . Reformulations, as defined here, differ with each other only in redundant constraints.
Reference: [ 12 ] <author> J. McCarthy. </author> <title> A tough nut for proof procedures. AI Project Memo 16, </title> <institution> Stanford University, </institution> <month> July </month> <year> 1964. </year> <note> available at http://www-formal.stanford.edu/jmc/nut.html. </note>
Reference-contexts: Example: A classic "chestnut" for reformulation is the problem of tiling a mutilated checkerboard with dominoes with two opposite corner cut out as discussed for example in <ref> [ 15; 12; 10 ] </ref> . It is for example impossible to cover the board shown in Fig. 1 with dominoes. This is because a domino covers a square of each colour, but there are 30 black squares and 32 white squares.
Reference: [ 13 ] <author> D.S. Johnson M.R. Garey, </author> <title> Computers and Intractability: A Guide to the Theory of NP-completeness., </title> <publisher> Freeman, </publisher> <address> San Francisco, CA, </address> <year> 1978. </year>
Reference-contexts: Thus we end up with a clique cover of size 6 for a problem where 7 queens must be placed. Approximations: Unfortunately, the usefulness of the theorem is limited in practice, since calculating k (G) is known to be NP-complete for an arbitrary graph <ref> [ 13 ] </ref> . In the next theorem we describe a class of CSPs where k (G bb ) and ff (G bb ) can be calculated in linear time. Theorem 2 Let P be a binary CSP with n variables.
Reference: [ 14 ] <author> B. </author> <title> Nadel, `Representation selection for constraint satisfaction: A case study using n-queens', </title> <journal> IEEE Expert, </journal> <volume> 5(3), </volume> <pages> 16-23, </pages> <year> (1990). </year>
Reference-contexts: An example where the clique cover size is large compared to n, and where we could not find a situation during search were the counting constraint allows additional pruning is the diagonal representation of the n-queens problem <ref> [ 14 ] </ref> . This formulation is obtained by clustering the "main diagonal" variables R i :i for i = 1 : : : n and those variables which correspond to the upper and lower down sloping diagonals.
Reference: [ 15 ] <author> Allen Newell, </author> <title> `Limitations of the current stock of ideas about problem solving.', in Electronic handling of information, </title> <editor> ed., Allen Kent a.o.., </editor> <publisher> Spartan books, </publisher> <address> 1965, Washington, DC, </address> <year> (1965). </year>
Reference-contexts: Example: A classic "chestnut" for reformulation is the problem of tiling a mutilated checkerboard with dominoes with two opposite corner cut out as discussed for example in <ref> [ 15; 12; 10 ] </ref> . It is for example impossible to cover the board shown in Fig. 1 with dominoes. This is because a domino covers a square of each colour, but there are 30 black squares and 32 white squares.
Reference: [ 16 ] <author> P.M. Dearing, D.R. Shier, </author> <title> D.D. Warner, `Maximal chordal sugraphs', </title> <journal> Discrete Applied Mathematics., </journal> <volume> 20, </volume> <pages> 181-190, </pages> <year> (1988). </year>
Reference-contexts: Instead of adding edges in order to obtain a triangulated graph G bb (P 0 ), one can also remove edges from the graph to find a maximal triangulated subgraph G bb (P ). This can be done with the algorithm MaxChord <ref> [ 16 ] </ref> , which can be implemented in O (jEj) where is the maximum degree of any vertex in G. Again, since G bb (P 0 ) is now triangulated, we can enumerate a solution P 0 in linear time.
Reference: [ 17 ] <author> Igor Rivin and Ramin Zabih, </author> <title> `An Algebraic Approach to Constraint Satisfaction Problems', </title> <booktitle> in Proc. of the 11 th IJCAI, </booktitle> <pages> pp. 285-289, </pages> <address> Detroit, MI, </address> <year> (1989). </year>
Reference-contexts: The constraint graph of the Boolean form Remark: The formulation of the Boolean CSP is similar to the formulation of a CSP as an integer linear programming problem as described in <ref> [ 17 ] </ref> and also close to a CSP encoding in an ATMS system [ 5 ] . Example: The 4-queens problem is that of finding possibilities to place 4 queens on a chessboard so that no two queens can attack each other.
References-found: 17

