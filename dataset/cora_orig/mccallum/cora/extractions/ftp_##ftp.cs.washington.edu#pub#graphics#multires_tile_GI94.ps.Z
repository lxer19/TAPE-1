URL: ftp://ftp.cs.washington.edu/pub/graphics/multires_tile_GI94.ps.Z
Refering-URL: http://www.cs.washington.edu/research/projects/grail2/www/pub/abstracts.html
Root-URL: 
Title: Multiresolution Tiling  
Author: David Meyers 
Keyword: Key Words: Surface reconstruction, tiling, meshes, multireso lution analysis, wavelets.  
Address: Seattle, Washington 98195  
Affiliation: Department of Computer Science and Engineering University of Washington  
Abstract: This paper describes an efficient method for constructing a tiling between a pair of planar contours. The problem is of interest in a number of domains, including medical imaging, biological research and geological reconstructions. Our method, based on ideas from multiresolution analysis and wavelets, requires O(n) space and appears to require O(n logn) time for average inputs, compared to the O(n 2 ) space and O(n 2 logn) time required by the optimizing algorithm of Fuchs, Kedem and Uselton [4]. The results computed by our algorithm are in many cases nearly the same as those of the optimizing algorithm, but at a small fraction of the computational cost. The performance improvement makes the algorithm usable for large contours in an interactive system. The use of multiresolution analysis provides an efficient mechanism for data compression by discarding wavelet coefficients smaller than a threshold value during reconstruction. The amount of detail lost can be controlled by appropriate choice of the threshold value. The use of lower resolution approximations to the original contours yields significant savings in the time required to display a reconstructed object, and in the space required to store it. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H.N. Christiansen and T.W. </author> <title> Sederberg. Conversion of complex contour line definitions into polygonal element mosaics. </title> <journal> Computer Graphics, </journal> <volume> 12(2) </volume> <pages> 187-192, </pages> <month> August </month> <year> 1978. </year>
Reference-contexts: In this case, the multiresolution algorithm connected 6 of 7 indentations, compared to 5 of 7 connected by the optimizing algorithm. We computed tilings for the contours shown in Figure 1 using the linear-time "greedy" methods of Ganapathy and Den-nehy [5] and of Christiansen and Sederberg <ref> [1] </ref>. Both methods construct a tiling beginning from a start vertex on each contour. They sequentially advance along either the upper or lower contour, connecting the current vertex on one contour to the next vertex on the other.
Reference: [2] <author> Charles K. Chui. </author> <title> An Introduction To Wavelets. </title> <publisher> Academic Press, Inc., </publisher> <year> 1992. </year>
Reference-contexts: Our algorithm uses O (n) space and what appears to be O (n logn) time. Although we do not prove this time bound, we show experimental results that support it. 2 Multiresolution Analysis This section provides a brief introduction to multiresolution analysis and wavelets. The reader is referred to <ref> [2] </ref> and [7] for a more detailed treatment. In the following, the notation x n is used to denote a discrete signal consisting of 2 n samples (x n 2 n 1 ).
Reference: [3] <author> Tony D. DeRose, Michael Lounsbery, and Joe Warren. </author> <title> Mul-tiresolution analysis for surfaces of arbitrary topological type. </title> <type> Technical Report 93-10-05, </type> <institution> University of Washing-ton, Dept. of Computer Science and Engineering, </institution> <year> 1993. </year>
Reference-contexts: For the wavelet function (x) we use the single knot wavelet of DeRose, Lounsbery and Warren <ref> [3] </ref>. To obtain (x), first define (x) to be the projection of (2x 1) 2 V 1 into V 0 . Then define (x) as (x) = (2x 1) (x): This definition of (x) has an unfortunate consequence: (x) has infinite support. <p> This modification has the consequence that (x) is no longer orthogonal to V 0 . One implication of this loss of orthogonality is that the sequence c n1 is no longer the best least squares approximation to c n (see <ref> [3] </ref> for more detail). By appropriately choosing the number of nonzero terms in the projection of (2x 1) into V 0 , orthogonality can be approached as closely as desired. Another approach to the problem of infinite support is to truncate an infinite se quence.
Reference: [4] <author> H. Fuchs, Z.M. Kedem, and S.P. Uselton. </author> <title> Optimal surface reconstruction from planar contours. </title> <journal> Communications of the ACM, </journal> 20(10) 693-702, October 1977. 
Reference-contexts: Numerous methods have been devised to solve the tiling problem. A method that computes a tiling optimal with respect to a certain class of goal functions was devised by Keppel [6], and later improved by Fuchs, Kedem and Uselton <ref> [4] </ref>. The goal function assigns a cost to each triangle of the tiling, and minimizes the total cost over the triangles in the tiling. In part because of the computational cost of their algorithm, numerous other methods have been devised that do not perform a global optimization. <p> A discussion of some of the methods can be found in [8]. This paper describes a new method for solving the tiling problem that represents a significant improvement in both space and time when compared to the algorithm of Fuchs, Kedem and Usel-ton <ref> [4] </ref>. Their algorithm requires O (n 2 logn) time and O (n 2 ) space to construct a tiling for a pair of contours each of size n. In many cases, this performance is acceptable. <p> The algorithm we describe uses methods from multiresolution analysis to reduce the size of the contours, then uses the optimizing tiling algorithm of Fuchs, Kedem and Uselton <ref> [4] </ref> to construct an optimal tiling for the reduced problem size, and finally uses mul-tiresolution reconstruction and local optimization to construct a final tiling. Our algorithm uses O (n) space and what appears to be O (n logn) time. <p> These low resolution contours are tiled using the optimizing method of Fuchs, Kedem and Uselton <ref> [4] </ref>. Detail is then added to the low-resolution tiling by adding wavelets, inserting edges at newly added vertices, and improving the tiling by local edge swapping. <p> An optimal tiling is computed for the base-case using the algorithm of Fuchs, Kedem and Uselton <ref> [4] </ref> in step 2 of our algorithm. The size of this base-case needs to be chosen to balance overall execution time and quality of the resulting tiling. Since the base-case is of constant size, its tiling can be computed in constant time. <p> Since the base-case is of constant size, its tiling can be computed in constant time. The smallest possible base-case is a pair of quadrilaterals. Reducing the original contours to this size should result in the maximum speedup of the multiresolution tiling method over that of <ref> [4] </ref>. However, the quality of tiling constructed is likely to depend on how different the shape of the base-case is from that of the original contours. <p> The low-resolution version requires significantly less space to store, and less time to display. tilings shown in Figure 3. 5 Conclusions We have described a multiresolution approach to improving the performance of a well-known optimizing algorithm for solving the tiling problem, that of Fuchs, Kedem and Uselton <ref> [4] </ref>. A problem with all known tiling algorithms is that they can produce unacceptable tilings. For that reason, a practical system for reconstructing surfaces from contours must be interactive. The computational cost of the optimizing algorithm has caused implementors of practical systems to use linear-time "greedy" methods.
Reference: [5] <author> S. Ganapathy and T.G. Dennehy. </author> <title> A new general triangulation method for planar contours. </title> <journal> Computer Graphics, </journal> <volume> 16(3) </volume> <pages> 69-75, </pages> <month> July </month> <year> 1982. </year>
Reference-contexts: In this case, the multiresolution algorithm connected 6 of 7 indentations, compared to 5 of 7 connected by the optimizing algorithm. We computed tilings for the contours shown in Figure 1 using the linear-time "greedy" methods of Ganapathy and Den-nehy <ref> [5] </ref> and of Christiansen and Sederberg [1]. Both methods construct a tiling beginning from a start vertex on each contour. They sequentially advance along either the upper or lower contour, connecting the current vertex on one contour to the next vertex on the other.
Reference: [6] <author> E. Keppel. </author> <title> Approximating complex surfaces by triangulation of contour lines. </title> <journal> IBM J. Res. Develop., </journal> <volume> 19 </volume> <pages> 2-11, </pages> <month> Jan-uary </month> <year> 1975. </year>
Reference-contexts: Numerous methods have been devised to solve the tiling problem. A method that computes a tiling optimal with respect to a certain class of goal functions was devised by Keppel <ref> [6] </ref>, and later improved by Fuchs, Kedem and Uselton [4]. The goal function assigns a cost to each triangle of the tiling, and minimizes the total cost over the triangles in the tiling.
Reference: [7] <author> Stephane Mallat. </author> <title> A theory for multiresolution signal decomposition: The wavelet representation. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 11(7) </volume> <pages> 674-693, </pages> <month> July </month> <year> 1989. </year>
Reference-contexts: Although we do not prove this time bound, we show experimental results that support it. 2 Multiresolution Analysis This section provides a brief introduction to multiresolution analysis and wavelets. The reader is referred to [2] and <ref> [7] </ref> for a more detailed treatment. In the following, the notation x n is used to denote a discrete signal consisting of 2 n samples (x n 2 n 1 ). <p> Use of the filter-bank outlined above makes it possible to compute the wavelet trans formation in linear time if the analysis and synthesis filters are of finite width (or support). The multiresolution analysis framework developed by Mallat <ref> [7] </ref> provides a particularly convenient framework for understanding the relationship between the analysis and synthesis filters mentioned above.
Reference: [8] <author> David Meyers, Shelley Skinner, and Kenneth Sloan. </author> <title> Surfaces from contours. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 11(3) </volume> <pages> 228-258, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: 1 Introduction Reconstruction of surfaces from a set of planar contours such as those shown in Figure 1 is an important problem in medical and biological research, geology, and other areas. The problem can be broken into several subproblems <ref> [8] </ref>, one of which, the tiling problem, is the subject of this paper. <p> In part because of the computational cost of their algorithm, numerous other methods have been devised that do not perform a global optimization. A discussion of some of the methods can be found in <ref> [8] </ref>. This paper describes a new method for solving the tiling problem that represents a significant improvement in both space and time when compared to the algorithm of Fuchs, Kedem and Usel-ton [4].
Reference: [9] <author> Joseph O'Rourke and Vinita Subramanian. </author> <title> On reconstructing polyhedra from parallel slices. </title> <type> Technical Report TR # 008, </type> <institution> Smith College Department of Computer Science, </institution> <address> Northampton, MA 01063, </address> <month> June 20, </month> <year> 1991. </year>
Reference-contexts: In Figure 2, the upper left shows a pair of contours and and the lower right shows a solution to the tiling problem for those contours. To be a valid solution to the tiling problem , the polyhedron constructed must be simple. O'Rourke and Subramanian <ref> [9] </ref> have shown that such a solution is not always possible. They demonstrated that if the shapes of the contours differ sufficiently, no simple polyhedron can be constructed subject to the above restrictions.
References-found: 9

