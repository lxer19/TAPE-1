URL: http://www.win.tue.nl/cs/pa/rikvdw/papers/Ernst97.ps.gz
Refering-URL: http://www.win.tue.nl/cs/pa/rikvdw/bibl.html
Root-URL: http://www.win.tue.nl
Title: how code compression can save space and total time in some important real-world scenarios. A
Author: m p r e s s i o n Jens Ernst William Evans Christopher W. Steven Lucco Microsoft Todd A. Proebsting 
Affiliation: University of Arizona  University of Arizona  Fraser Microsoft Research  University of Arizona  
Note: C o d e C o  Measurements that show  that is roughly the same size as gzipped x86 programs and can be interpreted without decompression. It can also be compiled to high-quality machine code at 2.5 megabytes  
Abstract: Current research in compiler optimization counts mainly CPU time and perhaps the first cache level or two. This view has been important but is becoming myopic, at least from a systemwide viewpoint, as the ratio of network and disk speeds to CPU speeds grows exponentially. For example, we have seen the CPU idle for most of the time during paging, so compressing pages can increase total performance even though the CPU must decompress or interpret the page contents. Another profile shows that many functions are called just once, so reduced paging could pay for their interpretation overhead. This paper describes: For correspondence: -jens,todd,will-@cs.arizona.edu, Dept of Computer Science, Gould Simpson Building, Tucson, AZ 85721. -cwfraser, steveluc-@microsoft.com, One Microsoft Way, Redmond, WA 98052. Originally published in Proceedings of the ACM SIGPLAN97 Conference on Programming Language Design and Implementation (PLDI):xxx-yyy. Copyright 1997 by the Association for Computing Machinery, Inc. Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, to republish, to post on servers, or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from Publications Dept, ACM Inc., fax +1 (212) 869-0481, or permissions@acm.org. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Timothy C. Bell, John G. Cleary, and Ian H. Witten. </author> <title> Text Compression. </title> <publisher> Prentice Hall, </publisher> <year> 1990. </year>
Reference: <author> Jon Louis Bentley, Daniel D. Sleator, Robert E. Tarjan, and Victor K. Wei. </author> <title> A locally adaptive data compression scheme. </title> <journal> Communications of the ACM 29(4) </journal> <pages> 520-540, 4/86. </pages>
Reference: <author> Peter Elias. </author> <title> Interval and recency rank source coding: Two online adaptive variable-length schemes. </title> <journal> IEEE Transactions on Information Theory IT-33(1), </journal> <year> 1987. </year>
Reference: <author> M. Franz and T. Kistler. </author> <title> Slim binaries. </title> <type> TR 96-24, </type> <institution> Dept of Information and Computer Science, University of California, Irvine, </institution> <note> 6/96. Also http://www.ics.uci.edu/~oberon/research.html and to appear in Communications of the ACM. </note>
Reference: <author> M. Franz. </author> <title> Adaptive compression of syntax trees and iterative dynamic code optimization: Two basic technologies for mobile-object systems. </title> <type> TR 97-04, </type> <institution> Dept of Information and Computer Science, University of California, Irvine, </institution> <month> 2/97. </month>
Reference: <author> Christopher W. Fraser and David R. Hanson. </author> <title> A Retargetable C Compiler: Design and Implementation. </title> <publisher> Addison Wesley Long-man, </publisher> <year> 1995. </year>
Reference: <author> Christopher W. Fraser and Todd A. Proebsting. </author> <title> Custom instruction sets for code compression. </title> <note> http://www.cs.arizona.edu/people/todd/papers/pldi2.ps, 10/95. </note>
Reference: <author> T. Kistler and M. Franz. </author> <title> A tree-based alternative to Java byte-codes; TR 96-58, </title> <institution> Dept of Information and Computer Science, University of California, Irvine, </institution> <month> 12/96. </month>
Reference: <author> A. Lempel and J. Ziv. </author> <title> On the complexity of finite sequences. </title> <journal> IEEE Transactions on Information Theory 22(1) </journal> <pages> 75-81, 1/76. </pages>
Reference: <author> Ali-Reza Adl-Tabatabai, Geoff Langdale, Steven Lucco and Rob-ert Wahbe. </author> <title> Efficient and language-independent mobile programs. </title> <booktitle> PLDI96: </booktitle> <pages> 127-136, 6/96. </pages>
Reference: <author> Todd A. Proebsting. </author> <title> Optimizing an ANSI C interpreter with su-peroperators, </title> <journal> POPL'95:322-332, </journal> <volume> 1/95. </volume>
Reference: <author> Ian H. Witten, Radford M. Neal, and John G. Cleary. </author> <title> Arithmetic coding for data compression. </title> <journal> Communications of the ACM 30(6) </journal> <pages> 520-540, 6/87. </pages>
Reference: <author> Tong Lai Yu. </author> <title> Data compression for PC software distribution. </title> <journal> Software-Practice & Experience 26(11) </journal> <pages> 1181-1195, 11/96. </pages>
Reference: <author> J. Ziv and A. Lempel. </author> <title> Compression of individual sequences via variable-rate coding. </title> <journal> IEEE Transactions on Information Theory 24(5) </journal> <pages> 530-536, 9/78. </pages>
References-found: 14

