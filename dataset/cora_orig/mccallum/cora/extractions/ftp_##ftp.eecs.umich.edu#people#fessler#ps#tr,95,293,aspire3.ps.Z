URL: ftp://ftp.eecs.umich.edu/people/fessler/ps/tr,95,293,aspire3.ps.Z
Refering-URL: http://www.eecs.umich.edu/~fessler/aspire/index.html
Root-URL: http://www.cs.umich.edu
Title: ASPIRE 3.0 USER'S GUIDE: A SPARSE ITERATIVE RECONSTRUCTION LIBRARY  
Author: Jeffrey A. Fessler 
Date: July 1995 Revised August 7, 1998  
Address: Ann Arbor, Michigan 48109  
Affiliation: COMMUNICATIONS SIGNAL PROCESSING LABORATORY Department of Electrical Engineering and Computer Science The University of Michigan  
Abstract: Technical Report No. 293 Approved for public release; distribution unlimited. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. A. Fessler and W. L. Rogers, </author> <title> Uniform quadratic penalties cause nonuniform image resolution (and sometimes vice versa), </title> <booktitle> in Proc. IEEE Nuc. Sci. Symp. Med. Im. Conf., </booktitle> <volume> volume 4, </volume> <pages> pp. </pages> <address> 19151919, </address> <year> 1994. </year>
Reference-contexts: The basic idea is that the local impulse response of penalized likelihood methods is approximately [G 0 G + fiR] 1 G 0 p where p is the (noiseless) projection of a point source at some location <ref> [1] </ref>, [2]. What you need to do is compute the local impulse response given above (using ASPIRE 3.0) for several values of fi. Each computation gives an image which looks like a small bump [2]. You calculate your favorite measure of resolution of these bumps (e.g. <p> You calculate your favorite measure of resolution of these bumps (e.g. FWHM), thereby producing a table relating fi to FWHM. In subsequent studies then, you simply decide what resolution appeals to you, and then look up fi from the table. This only works with my modified penalty <ref> [1] </ref>, [2], by the way, not with the conventional penalties in the literature. ASPIRE 3.0 August 7, 1998 7 A. <p> VIII. INITIAL IMAGE Any iterative reconstruction method needs an initial guess. For penalized-likelihood methods, an FBP image with the appropriate spatial resolution <ref> [1] </ref>, [2], [3] is an ideal choice. (For unregularized methods, a uniform image is used conventionally.) A. <p> quadratic penalty ((x) = x 2 =2), with a 1st-order neighborhood, with fi = 2 6 , and with the conventional choice for w jk . 4,quad,2,b2info would be the quadratic penalty with a 2nd-order neighborhood, with fi = 2 4 , and with the w jk modified as in <ref> [1] </ref>, [2] to yield nearly uniform resolution. I recommend using that modified penalty (and you must if you want the fi tabulation against resolution to work). There are more complicated functions implemented and partially implemented. Please discuss with me if interested.
Reference: [2] <author> J. A. Fessler and W. L. Rogers, </author> <title> Spatial resolution properties of penalized-likelihood image reconstruction methods: </title> <journal> Space-invariant tomographs, IEEE Tr. Im. Proc., </journal> <volume> vol. 5, no. 9, </volume> <pages> pp. 134658, </pages> <month> September </month> <year> 1996. </year>
Reference-contexts: The basic idea is that the local impulse response of penalized likelihood methods is approximately [G 0 G + fiR] 1 G 0 p where p is the (noiseless) projection of a point source at some location [1], <ref> [2] </ref>. What you need to do is compute the local impulse response given above (using ASPIRE 3.0) for several values of fi. Each computation gives an image which looks like a small bump [2]. You calculate your favorite measure of resolution of these bumps (e.g. <p> G 0 p where p is the (noiseless) projection of a point source at some location [1], <ref> [2] </ref>. What you need to do is compute the local impulse response given above (using ASPIRE 3.0) for several values of fi. Each computation gives an image which looks like a small bump [2]. You calculate your favorite measure of resolution of these bumps (e.g. FWHM), thereby producing a table relating fi to FWHM. In subsequent studies then, you simply decide what resolution appeals to you, and then look up fi from the table. This only works with my modified penalty [1], [2], by <p> bump <ref> [2] </ref>. You calculate your favorite measure of resolution of these bumps (e.g. FWHM), thereby producing a table relating fi to FWHM. In subsequent studies then, you simply decide what resolution appeals to you, and then look up fi from the table. This only works with my modified penalty [1], [2], by the way, not with the conventional penalties in the literature. ASPIRE 3.0 August 7, 1998 7 A. <p> compute projections of a point source: p = Ge j : At least for spatially-invariant systems and for a pixel j not too close to the image edge, we can compute [G 0 G + fiR] 1 G 0 Ge j (1) to within a very close approximation using FFT's <ref> [2] </ref>. ASPIRE 3.0 includes programs that do most of the work for you. <p> The following command makes a symmetric version: op psfsym gtgsym.fld gtgraw.fld Then type op psfpls psf.fld - gtg.fld -6 1 which will compute a Fourier-based approximation to (1) for fi = 2 6 and for R corresponding to a quadratic penalty with a 1st-order neighborhood (horizontal and diagonal neighbors only) <ref> [2] </ref>. You can change the 1 to a 2 for a 2nd-order neighborhood, but you probably will not see much difference (in the final reconstructed image), at least for quadratic penalties. The op psfpls program above will print out the FWHM for the PSF saved in psf.fld. <p> VIII. INITIAL IMAGE Any iterative reconstruction method needs an initial guess. For penalized-likelihood methods, an FBP image with the appropriate spatial resolution [1], <ref> [2] </ref>, [3] is an ideal choice. (For unregularized methods, a uniform image is used conventionally.) A. <p> penalty ((x) = x 2 =2), with a 1st-order neighborhood, with fi = 2 6 , and with the conventional choice for w jk . 4,quad,2,b2info would be the quadratic penalty with a 2nd-order neighborhood, with fi = 2 4 , and with the w jk modified as in [1], <ref> [2] </ref> to yield nearly uniform resolution. I recommend using that modified penalty (and you must if you want the fi tabulation against resolution to work). There are more complicated functions implemented and partially implemented. Please discuss with me if interested.
Reference: [3] <author> J. A. Fessler, </author> <title> Resolution properties of regularized image reconstruction methods, </title> <type> Technical Report 297, </type> <institution> Comm. and Sign. Proc. Lab., Dept. of EECS, Univ. of Michigan, </institution> <address> Ann Arbor, MI, 48109-2122, </address> <month> August </month> <year> 1995. </year>
Reference-contexts: VIII. INITIAL IMAGE Any iterative reconstruction method needs an initial guess. For penalized-likelihood methods, an FBP image with the appropriate spatial resolution [1], [2], <ref> [3] </ref> is an ideal choice. (For unregularized methods, a uniform image is used conventionally.) A.
Reference: [4] <author> J. A. Fessler, </author> <title> Penalized weighted least-squares image reconstruction for positron emission tomography, </title> <journal> IEEE Tr. Med. Im., </journal> <volume> vol. 13, no. 2, </volume> <pages> pp. 290300, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: A complete PWLS objective looks like: () = 2 (y G) 0 diagfu i g (y G) n 0 1 (y G) + fiR (); where the u i are weights (inverse of the variance of Y i , see <ref> [4] </ref>) and vn 1 is a vector whose purpose might be explained in a future paper. For now just assume n 1 = 0. If you type i pwls2 you will get the syntax of how to minimize this . <p> Here is what each argument means. * out is the name of the output image file. * init is the name of the initial image file. The default is a uniform image, but I highly recommend FBP (corrected by Chang for SPECT), for convergence rate reasons detailed in [5], <ref> [4] </ref>. * pivot is the input sinogram y, typically corrected for attenuation, scatter, randoms, etc. (The statistical effects are accounted for in the weights u i [4].) ASPIRE 3.0 August 7, 1998 10 * nder1 is u. Default is 0. * nder2 is the sinogram-sized set of u i 's. <p> The default is a uniform image, but I highly recommend FBP (corrected by Chang for SPECT), for convergence rate reasons detailed in [5], <ref> [4] </ref>. * pivot is the input sinogram y, typically corrected for attenuation, scatter, randoms, etc. (The statistical effects are accounted for in the weights u i [4].) ASPIRE 3.0 August 7, 1998 10 * nder1 is u. Default is 0. * nder2 is the sinogram-sized set of u i 's. Default is u i = 1, which is uniform weighting. (Not recommended: see figures in [4]!) See appendix of [4] for details on computing u i . <p> (The statistical effects are accounted for in the weights u i <ref> [4] </ref>.) ASPIRE 3.0 August 7, 1998 10 * nder1 is u. Default is 0. * nder2 is the sinogram-sized set of u i 's. Default is u i = 1, which is uniform weighting. (Not recommended: see figures in [4]!) See appendix of [4] for details on computing u i . * wtf is the name of the weight file containing the system matrix G (or in the SPECT case, the modified G that includes attenuation). * mask is not documented. <p> accounted for in the weights u i <ref> [4] </ref>.) ASPIRE 3.0 August 7, 1998 10 * nder1 is u. Default is 0. * nder2 is the sinogram-sized set of u i 's. Default is u i = 1, which is uniform weighting. (Not recommended: see figures in [4]!) See appendix of [4] for details on computing u i . * wtf is the name of the weight file containing the system matrix G (or in the SPECT case, the modified G that includes attenuation). * mask is not documented. <p> Usually you will just have one algorithm. For example, @2@cg,diag@-6,quad,2,-@10@ca,0.6,raster1,@-6,quad,1,- means 2 iterations of conjugate gradient with a diagonal preconditioner [6] (other preconditioners may be documented later), followed by 10 iterations of coordinate ascent using the conventional raster scan ordering, and the under-relaxation parameter of successive over-relaxation 5 <ref> [4] </ref> is ! = 0:6. <p> If you are using simulated data with no randoms or scatter, then just use a small number like 1e-5 for backscale and the effect should be negligible. D. Preprocessing for PWLS: Emission Case As explained in <ref> [4] </ref>, the PWLS objective is for pre-processed data.
Reference: [5] <author> K. Sauer and C. Bouman, </author> <title> A local update strategy for iterative reconstruction from projections, </title> <journal> IEEE Tr. Sig. Proc., </journal> <volume> vol. 41, no. 2, </volume> <pages> pp. 534548, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: Here is what each argument means. * out is the name of the output image file. * init is the name of the initial image file. The default is a uniform image, but I highly recommend FBP (corrected by Chang for SPECT), for convergence rate reasons detailed in <ref> [5] </ref>, [4]. * pivot is the input sinogram y, typically corrected for attenuation, scatter, randoms, etc. (The statistical effects are accounted for in the weights u i [4].) ASPIRE 3.0 August 7, 1998 10 * nder1 is u.
Reference: [6] <author> S. D. Booth and J. A. Fessler, </author> <title> Combined diagonal/Fourier preconditioning methods for image reconstruction in emission tomography, </title> <booktitle> in Proc. IEEE Intl. Conf. on Image Processing, </booktitle> <volume> volume 2, </volume> <pages> pp. 4414, </pages> <year> 1995. </year>
Reference-contexts: Usually you will just have one algorithm. For example, @2@cg,diag@-6,quad,2,-@10@ca,0.6,raster1,@-6,quad,1,- means 2 iterations of conjugate gradient with a diagonal preconditioner <ref> [6] </ref> (other preconditioners may be documented later), followed by 10 iterations of coordinate ascent using the conventional raster scan ordering, and the under-relaxation parameter of successive over-relaxation 5 [4] is ! = 0:6.
Reference: [7] <author> J. A. Fessler, E. P. Ficaro, N. H. Clinthorne, and K. Lange, </author> <title> Fast parallelizable algorithms for transmission image reconstruction, </title> <booktitle> in Proc. IEEE Nuc. Sci. Symp. Med. Im. Conf., </booktitle> <volume> volume 3, </volume> <pages> pp. 134650, </pages> <year> 1995. </year>
Reference-contexts: I recommend estimating by maximizing a penalized-likelihood objective. The fastest algorithm I know for performing this maximization is a grouped coordinate-ascent algorithm <ref> [7] </ref>, [8], which is the only one I will document here. <p> The method argument has the same syntax as for PWLS. The only algorithm currently supported is ga,fd,1,3,3. This will be explained in a future paper (hopefully at NSS-MIC 1995) <ref> [7] </ref>, [8]. All of the penalty choices given for PWLS should work here. C.
Reference: [8] <author> J. A. Fessler, E. P. Ficaro, N. H. Clinthorne, and K. Lange, </author> <title> Grouped-coordinateascent algorithms for penalized-likelihoodtransmission image reconstruction, </title> <journal> IEEE Tr. Med. Im., </journal> <volume> vol. 16, no. 2, </volume> <pages> pp. 16675, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: I recommend estimating by maximizing a penalized-likelihood objective. The fastest algorithm I know for performing this maximization is a grouped coordinate-ascent algorithm [7], <ref> [8] </ref>, which is the only one I will document here. <p> The method argument has the same syntax as for PWLS. The only algorithm currently supported is ga,fd,1,3,3. This will be explained in a future paper (hopefully at NSS-MIC 1995) [7], <ref> [8] </ref>. All of the penalty choices given for PWLS should work here. C.
Reference: [9] <author> J. A. Fessler and A. O. Hero, </author> <title> Penalized maximum-likelihood image reconstruction using space-alternating generalized EM algorithms, </title> <journal> IEEE Tr. Im. Proc., </journal> <volume> vol. 4, no. 10, </volume> <pages> pp. 141729, </pages> <month> October </month> <year> 1995. </year> <note> Most of my papers are available on WWW: http://www.engin.umich.edu/fessler. Fig. 1. Strip integral. </note>
Reference-contexts: I recommend estimating by maximizing a penalized-likelihood objective. The fastest algorithm I know for performing this maximization is the PML-SAGE-3 algorithm <ref> [9] </ref>, which I will document here along with the hideously slow ML-EM algorithm for comparison. <p> There are two algorithms implemented: em,1 is the standard ML-EM-1 algorithm (which is unregularized, so just use a for the penalty, i.e. @30@ml,1@- would be the method argument for the ubiquitous 30 iterations of ML-EM. The other option is sage,3,raster1 which is the PML-SAGE-3 algorithm <ref> [9] </ref>, for which the following penalties are currently implemented: quad,1,- quad,1,b2info I recommend the 2nd choice since it gives more uniform resolution, and works with the fi tabulation. There may also be nonquadratic penaltiesask me if interested. This implementation assumes that r i &gt; 0.
References-found: 9

