URL: ftp://ftp.cse.ucsc.edu/pub/hsnlab/ATMForum98-0290.ps.Z
Refering-URL: http://www.cse.ucsc.edu/~lampros/papers.html
Root-URL: http://www.cse.ucsc.edu
Email: e-mail: lamprosk@bell-labs.com  e-mail: varma@cse.ucsc.edu  e-mail: kkrama@research.att.com  
Phone: Phone: (732) 949-6881,  Phone: (408) 459-3505,  Phone: (973) 360-8766,  
Title: ATM Forum Document Number: 98-0290 TITLE: Improving TCP/IP Performance over ATM's ABR Service with Explicit
Author: K. K. Ramakrishnan, 
Date: April 1998  
Address: Holmdel, NJ 07733  Santa Cruz, CA 95064  Florham Park, NJ 07932  
Affiliation: Laboratories  Anujan Varma, Computer Engineering Department University of California at Santa Cruz  AT&T Labs Research  
Note: SOURCE: Lampros Kalampoukas, Bell  DATE:  NOTICE: This document has been prepared to  Working Group. This document is offered by the University of California and AT&T  and is not a binding proposal on either the University of California system or AT&T. Any requirements stated herein are subject to change in form and content after more study. UC Santa Cruz and AT&T reserve the right to add to, amend, or withdraw the statements contained herein.  
Abstract: This contribution applies to environments where non-rate-controlled network segments (such as Ethernet LANs or IP subnets) are interconnected through a rate-controlled ATM virtual circuit. When a window-based protocol, such as TCP, is used as the end-to-end transport protocol, the switches or routers at the edges of the ATM segment may accumulate large queues, resulting in buffer overflows, reduced throughput, and unfairness. In this contribution, we introduce and evaluate an explicit feedback scheme, called Explicit Window Adaptation based on modifying the receiver's advertised window in TCP acknowledgments returning to the source. The scheme is easy to implement in an edge router or switch, and does not require knowledge of network delays or maintenance of per-flow state. Results from simulations with a wide range of traffic scenarios show that this explicit window adaptation scheme can control the buffer occupancy efficiently at the edge device, and results in significant improvements in packet loss rate, fairness, and throughput. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Floyd and V. Jacobson, </author> <title> "Random Early Detection gateways for congestion avoidance," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 1, no. 4, </volume> <pages> pp. 397-413, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: The objective of this contribution is to propose a scheme for controlling congestion in the edge routers or switches in such an environment and evaluate its performance. One approach to control congestion in the edge router is to employ an intelligent packet-discard policy such as Random Early Detection (RED) <ref> [1] </ref>, so that congestion can be signaled to the TCP sources early. Another discard policy that has been shown to work well with TCP is Drop-from-Front, which drops the packets at the head of the FIFO queue in the router when the buffer becomes full [2].
Reference: [2] <author> T. V. Lakshman, A. Neidhardt, and T. J. Ott, </author> <title> "The drop from front strategy in TCP and in TCP over ATM," </title> <booktitle> in Proc. of IEEE INFOCOM'96, </booktitle> <volume> vol. 3, </volume> <pages> pp. 1242-50, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: Another discard policy that has been shown to work well with TCP is Drop-from-Front, which drops the packets at the head of the FIFO queue in the router when the buffer becomes full <ref> [2] </ref>. This approach, however, may still cause back-to-back losses and unfairness. Both RED and Drop-from-Front are generic solutions with the potential of improving the efficiency and fairness of networks with TCP-controlled traffic, without being tied to a specific network technology.
Reference: [3] <author> R. Cole, D. Shur, and C. Villamizar, </author> <title> "IP over ATM: A framework document," Request for Comments (RFC): </title> <year> 1932, </year> <month> April </month> <year> 1996. </year> <month> 13 </month>
Reference-contexts: For IP over ATM we assume the framework described in RFC-1932 <ref> [3] </ref>. According to this framework, a single VC is set up for carrying ABR traffic between a source and a destination system. TCP connections destined to different IP networks will be carried over separate VCs.
Reference: [4] <author> D. Mitra, </author> <title> "Asymptotically optimal design of congestion control for high speed data networks," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 40, no. 2, </volume> <pages> pp. 301-311, </pages> <month> February </month> <year> 1992. </year>
Reference-contexts: Any further increase of the window size contributes only to increased queueing delay, not improved throughput. Optimal setting of the window size at the source has been analytically shown to require knowledge of the RTT and the bandwidth-delay product of the network <ref> [4] </ref>. Such information is usually not available at either the source or the network elements.
Reference: [5] <author> A. K. Choudhury and E. L. Hahne, </author> <title> "Dynamic queue length thresholds in a shared memory ATM switch," </title> <booktitle> in Proc. of IEEE INFOCOM'96, </booktitle> <volume> vol. 2, </volume> <pages> pp. 679-87, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: The computed feedback is a function of the free buffer space at the AAP. In that sense it is similar to the idea proposed by Choudhury and Hahne <ref> [5] </ref> for controlling dynamic buffer thresholds in a shared-memory switch. In our case, however, 3 the feedback computed is used to adapt the TCP window maintained at the sources in order to limit packet losses in the AAP's buffer.
Reference: [6] <author> V. Jacobson, </author> <title> "Congestion avoidance and control," </title> <booktitle> in Proc. of ACM SIGCOMM'88, </booktitle> <pages> pp. 314-329, </pages> <year> 1988. </year>
Reference-contexts: We used the OPNET modeling tool for all the simulations. The TCP model is based on the Reno version. It supports the congestion control mechanism described by Jacobson <ref> [6] </ref>, exponential back-off, enhanced round-trip time (RTT) estimation based on both the mean and the variance of the measured RTT, and the fast retransmit and fast recovery mechanisms.
Reference: [7] <author> L. Kalampoukas, A. Varma, and K. K. Ramakrishnan, </author> <title> "Explicit Window Adaptation: A method to enhance TCP performance," </title> <type> Tech. Rep. </type> <institution> UCSC-CRL-97-21, University of California, Santa Cruz, </institution> <year> 1997. </year> <title> (retrievable from: </title> <address> ftp.cse.ucsc.edu or http://www.cse.ucsc.edu). 14 </address>
Reference-contexts: A complete evaluation of the Explicit Window Adaptation scheme can be found in <ref> [7] </ref>. 3.1 Performance with small IP delays We begin the evaluation of the scheme by first using a simple traffic scenario. In this scenario, a total of ten connections open simultaneously at time t = 0 and remain active for 10 seconds.
References-found: 7

