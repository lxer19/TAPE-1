URL: http://www.cs.washington.edu/homes/alon/site/files/ijcai93.ps.Z
Refering-URL: http://www.cs.washington.edu/homes/alon/site/PaperAbstractPresentation_bib11.html
Root-URL: 
Email: (levy@cs.stanford.edu)  (sagiv@cs.huji.ac.il)  
Title: Exploiting Irrelevance Reasoning to Guide Problem Solving  
Author: Alon Y. Levy Yehoshua Sagiv 
Address: Stanford, California 94305  Jerusalem, Israel  
Affiliation: Dept. of Computer Science Stanford University  Dept. of Computer Science Hebrew University  
Abstract: Identifying that parts of a knowledge base (KB) are irrelevant to a specific query is a powerful method of controlling search during problem solving. However, finding methods of such irrelevance reasoning and analyzing their utility are open problems. We present a framework based on a proof-theoretic analysis of irrelevance that enables us to address these problems. Within the framework, we focus on a class of strong-irrelevance claims and show that they have several desirable properties. For example, in the context of Horn-rule theories, we show that strong-irrelevance claims can be derived efficiently either by examining the KB or as logical consequences of other strong-irrelevance claims. An important aspect is that our algorithms reason about irrelevance using only a small part of the KB. Consequently, the reasoning is efficient and the derived irrelevance claims are independent of changes to other parts of the KB.
Abstract-found: 1
Intro-found: 1
Reference: [ Elkan, 1990 ] <author> Elkan, </author> <title> Charles 1990. Independence of logic database queries and updates. </title> <booktitle> In Proceedings of the 9th ACM Symp. on Principles of Database Systems. </booktitle> <pages> 154-160. </pages>
Reference-contexts: of [ Subramanian, 1989 ] are instances of weak irrelevance; in particular, although her definitions are not in terms of derivations, the main definition of [ Subrama-nian, 1989 ] is equivalent to W I (; ; ; DI 3 ; D ( )). 6 The definition of update independence in <ref> [ Elkan, 1990 ] </ref> is equivalent to W I (; ; ; DI 1 ; D ( )) (see [ Levy and Sagiv, 1993 ] ).
Reference: [ Etzioni, 1990 ] <author> Etzioni, </author> <title> Oren 1990. Why prodigy/ebl works. </title> <booktitle> In Proceedings of AAAI-90. </booktitle>
Reference-contexts: The query tree encodes the space of possible derivations of the query. Recently, the question of finding optimal methods to search that space has received a lot of attention [ Smith, 1986, Greiner, 1991 ] ; a related issue is analyzing the utility of techniques in explanation-based learning <ref> [ Etzioni, 1990, Greiner and Jurisica, 1992 ] </ref> . Much of this work requires a graph-like representation of the search space under consideration.
Reference: [ Gardenfors, 1978 ] <author> Gardenfors, </author> <title> Peter 1978. On the logic of relevance. </title> <booktitle> In Sythese. </booktitle> <pages> (37) pp. 351-367. </pages>
Reference-contexts: It should be noted that our analysis is not an attempt to formalize the common-sense notion of irrelevance or argue for properties of such a notion (as done, for example, by <ref> [ Gardenfors, 1978 ] </ref> ). Our goal is to utilize the notion of irrelevance to speed inference and, therefore, we analyze the ways in which irrelevance can arise in inference.
Reference: [ Greiner and Jurisica, 1992 ] <author> Greiner, Russell and Jurisica, </author> <title> Igor 1992. A statistical approach to solving the ebl utility problem. </title> <booktitle> In Proceedings of AAAI-92. </booktitle>
Reference-contexts: The query tree encodes the space of possible derivations of the query. Recently, the question of finding optimal methods to search that space has received a lot of attention [ Smith, 1986, Greiner, 1991 ] ; a related issue is analyzing the utility of techniques in explanation-based learning <ref> [ Etzioni, 1990, Greiner and Jurisica, 1992 ] </ref> . Much of this work requires a graph-like representation of the search space under consideration.
Reference: [ Greiner, 1991 ] <author> Greiner, </author> <title> Russell 1991. Finding optimal derivation strategies in a redundant knowledge base. </title> <journal> In Artificial Intelligence. </journal> <volume> Vol. </volume> <pages> 50 (1) pp. 95-116. </pages>
Reference-contexts: The query tree encodes the space of possible derivations of the query. Recently, the question of finding optimal methods to search that space has received a lot of attention <ref> [ Smith, 1986, Greiner, 1991 ] </ref> ; a related issue is analyzing the utility of techniques in explanation-based learning [ Etzioni, 1990, Greiner and Jurisica, 1992 ] . Much of this work requires a graph-like representation of the search space under consideration.
Reference: [ Levy and Sagiv, 1992 ] <author> Levy, Alon Y. and Sagiv, </author> <title> Yehoshua 1992. Constraints and redundancy in datalog. </title> <booktitle> In The Proceedings of the 11th ACM Symp. on Principles of Database Systems. </booktitle>
Reference-contexts: The main difficulty in irrelevance reasoning is to find properties satisfied by all possible derivations of a given query. To do so, we use a powerful tool, the query tree, first introduced in <ref> [ Levy and Sagiv, 1992 ] </ref> . The query tree encodes finitely all possible derivations of the query (even when rules are re cursive). <p> The definition of irrelevance given in [ Srivastava and Ramakrishnan, 1992 ] is equivalent to SI (; ; ; DI 1 ; D ( )). In <ref> [ Levy and Sagiv, 1992 ] </ref> , we discuss strong irrelevance with respect to the set D 0 of minimal derivations. Several properties can be shown for classes of definitions in the space, mostly distinguishing between weak and strong irrelevance. Here, we mention only two of them. <p> Algorithms that find some weakly-irrelevant formulas, but may fail to identify all of them, are described by [ Sagiv and Yan-nakakis, 1981 ] and [ Sagiv, 1988 ] . For strong irrelevance, the situation is much better. In <ref> [ Levy and Sagiv, 1992 ] </ref> , we have shown that strong irrelevance is decidable for function-free Horn rules and interpreted predicates. <p> In Section 3.2, we will describe an algorithm for deriving logical conclusions from irrelevance claims given by the user. The algorithm uses a powerful tool, called the query tree, first introduced in <ref> [ Levy and Sagiv, 1992 ] </ref> . Below, we briefly describe some aspects of query trees. 3.1 The Query Tree There are several difficulties in deriving irrelevance claims. First, we need to establish properties of the set of all derivations of the query without enumerating them. <p> We must be able to determine when two sentences in the constraint language are equivalent. Furthermore, there must be a finite number of non-equivalent sentences when the number of variables is fixed. For full details, see <ref> [ Levy and Sagiv, 1992 ] </ref> . goodP ath (x; y) f100 &lt; x &lt; y &lt; 170; y &gt; 150g r 1 ( ( ( ( ( ( ( ( ( ( ( badP oint (x) f100 &lt; x &lt; 170g goodP oint (y) f150 &lt; y &lt; 170g path <p> By refining the labels of nodes in the tree, the query tree can also be made to encode precisely the set of minimal derivations of the query (see <ref> [ Levy and Sagiv, 1992 ] </ref> ) and the set of all derivations when some of the EDB literals appear negated (see [ Levy et al., 1993 ] ). The complexity of building the tree (and therefore of deriving SI) is linear in the number of rules in P.
Reference: [ Levy and Sagiv, 1993 ] <author> Levy, Alon Y. and Sagiv, </author> <title> Yehoshua 1993. Queries independent of updates. </title> <type> Technical Report, </type> <institution> KSL, Stanford University. </institution>
Reference-contexts: of derivations, the main definition of [ Subrama-nian, 1989 ] is equivalent to W I (; ; ; DI 3 ; D ( )). 6 The definition of update independence in [ Elkan, 1990 ] is equivalent to W I (; ; ; DI 1 ; D ( )) (see <ref> [ Levy and Sagiv, 1993 ] </ref> ). The definition of irrelevance given in [ Srivastava and Ramakrishnan, 1992 ] is equivalent to SI (; ; ; DI 1 ; D ( )).
Reference: [ Levy et al., 1993 ] <author> Levy, Alon Y.; Mumick, Inderpal Singh; Sagiv, Yehoshua; and Shmueli, </author> <title> Oded 1993. Equivalence, query-reachability and satisfiability in datalog extensions. </title> <booktitle> In Proceedings of the 12th ACM Symp. on Principles of Database Systems. </booktitle>
Reference-contexts: By refining the labels of nodes in the tree, the query tree can also be made to encode precisely the set of minimal derivations of the query (see [ Levy and Sagiv, 1992 ] ) and the set of all derivations when some of the EDB literals appear negated (see <ref> [ Levy et al., 1993 ] </ref> ). The complexity of building the tree (and therefore of deriving SI) is linear in the number of rules in P. It may be exponential in the arity of predicates.
Reference: [ Levy, 1993 ] <author> Levy, Alon Y. </author> <year> 1993. </year> <title> Irrelevance Reasoning in Knowledge Base Systems. </title> <type> Ph.D. Dissertation, </type> <institution> Stanford University, Stanford, </institution> <address> CA. </address>
Reference-contexts: X is called the subject of the irrelevance claim. In this paper, we discuss the case in which X is a formula or set of formulas. Other irrelevance subjects such as objects, predicates and distinctions between predicates are discussed in <ref> [ Levy, 1993 ] </ref> . In order for a definition of irrelevance to be useful, it should give us information that could be used effectively. <p> Several properties can be shown for classes of definitions in the space, mostly distinguishing between weak and strong irrelevance. Here, we mention only two of them. For full details, see <ref> [ Levy, 1993 ] </ref> . Observation 2.3 : Closure under union. When a system needs to determine whether it can use all the irrelevance claims it has, or whether using certain ones will falsify others, it needs to know whether they are closed under union of their subjects. <p> We tested the impact of removing irrelevant facts for over 20 sets of queries taken from four domains. Space limitations preclude the presentation of the complete results. Table 1 presents a set of representative results. More detailed results can be found in <ref> [ Levy, 1993 ] </ref> . Rows 1 & 2 use the rules given in Example 3.2. Rows 3-6 are taken from a travel KB (using real airline data).
Reference: [ Minton, 1988 ] <author> Minton, </author> <title> Steve 1988. Quantitative results concerning the utility of explanation based learning. </title> <booktitle> In Proceedings of AAAI-88. </booktitle>
Reference-contexts: In Example 2.2, adding the rule AttendClass (x; y) ^ (y 200) ) CanT A (x; y) may speed the solving of some queries. The utility of adding such rules is a subject of ongoing research (e.g., <ref> [ Minton, 1988 ] </ref> ). For strong irrelevance, savings are guaranteed for many cases.
Reference: [ Pearl, 1988 ] <author> Pearl, </author> <title> Judea 1988. Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference. </title> <publisher> Mor-gan Kaufmann Publishers, Inc., </publisher> <address> San Mateo, California. </address>
Reference-contexts: Effective use of irrelevance reasoning requires a formal understanding of the issues involved in such reasoning, as has been done in the context of probabilistic reasoning <ref> [ Pearl, 1988 ] </ref> . The work of [ Subramanian, 1989 ] presented a framework for stating irrelevance claims, and raised several issues concerning irrelevance reasoning. However, two issues remain largely open. The first is to find efficient methods for automatically deriving irrelevance claims.
Reference: [ Rombauer and Rombauer-Becker, 1975 ] <author> Rombauer, Irma S. and Rombauer-Becker, </author> <title> Marion 1975. Joy of Cooking. </title> <publisher> Bobbs Merrill Company Inc., </publisher> <address> N.Y.C., N.Y. </address>
Reference: [ Russell, 1985 ] <author> Russell, </author> <title> Stuart 1985. The complete guide to MRS. </title> <type> Technical Report KSL-85-12, </type> <institution> Department of Computer Science, Stanford University, Stanford, </institution> <address> CA. </address>
Reference-contexts: We presented a general framework for stating knowledge about irrelevance and reasoning with it. We concentrated on the class of strong-irrelevance claims 11 The performance of our backward chainer compared favorably with that of Epikit (a commercial implementation of MRS <ref> [ Russell, 1985 ] </ref> ).
Reference: [ Sagiv and Yannakakis, 1981 ] <author> Sagiv, Y. and Yannakakis, M. </author> <year> 1981. </year> <title> Equivalence among relational expressions with the union and difference operators. </title> <journal> In J. ACM 27:4 pp. </journal> <pages> 633-655. </pages>
Reference: [ Sagiv, 1988 ] <author> Sagiv, </author> <title> Yehoshua 1988. Optimizing datalog programs. </title> <editor> In Minker, Jack, editor 1988, </editor> <booktitle> Foundations of Deductive Databases and Logic Programming. </booktitle> <publisher> Morgan Kauf-mann, </publisher> <address> Los Altos, CA. </address> <pages> 659-698. </pages>
Reference-contexts: This result is proved by a reduction from the rule-redundancy problem [ Shmueli, 1987 ] . Algorithms that find some weakly-irrelevant formulas, but may fail to identify all of them, are described by [ Sagiv and Yan-nakakis, 1981 ] and <ref> [ Sagiv, 1988 ] </ref> . For strong irrelevance, the situation is much better. In [ Levy and Sagiv, 1992 ] , we have shown that strong irrelevance is decidable for function-free Horn rules and interpreted predicates.
Reference: [ Shmueli, 1987 ] <author> Shmueli, </author> <title> Oded 1987. Decidability and expressiveness aspects of logic queries. </title> <booktitle> In Proceedings of the 6th ACM Symposium on Principles of Database Systems. </booktitle>
Reference-contexts: This result is proved by a reduction from the rule-redundancy problem <ref> [ Shmueli, 1987 ] </ref> . Algorithms that find some weakly-irrelevant formulas, but may fail to identify all of them, are described by [ Sagiv and Yan-nakakis, 1981 ] and [ Sagiv, 1988 ] . For strong irrelevance, the situation is much better. <p> Determining whether I ) SI (; q; 0 ; DI 2 ; D (q)) is undecidable. The theorem is proved by a reduction from the rule-redundancy problem <ref> [ Shmueli, 1987 ] </ref> . 3.3 The Utility of Relevance Reasoning Removing strongly-irrelevant formulas (i.e., rules and ground facts) effectively prunes many useless paths that a problem solver (such as a backward chainer) has to pursue.
Reference: [ Smith, 1986 ] <author> Smith, David 1986. </author> <title> Controlling Inference. </title> <type> Ph.D. Dissertation, </type> <institution> Stanford Univesity, Stanford, </institution> <note> CA. </note> [ <author> Srivastava and Ramakrishnan, 1992 ] Srivastava, Divesh and Ramakrishnan, </author> <title> Raghu 1992. Pushing constraint selections. </title> <booktitle> In Proceedings of the 11th ACM Symp. on Principles of Database Systems, </booktitle> <address> San Diego, CA. </address>
Reference-contexts: The query tree encodes the space of possible derivations of the query. Recently, the question of finding optimal methods to search that space has received a lot of attention <ref> [ Smith, 1986, Greiner, 1991 ] </ref> ; a related issue is analyzing the utility of techniques in explanation-based learning [ Etzioni, 1990, Greiner and Jurisica, 1992 ] . Much of this work requires a graph-like representation of the search space under consideration.
Reference: [ Subramanian and Genesereth, 1987 ] <author> Subramanian, D. and Genesereth, </author> <title> M.R. 1987. The relevance of irrelevance. </title> <booktitle> In Proceedings of IJCAI-87. </booktitle>
Reference-contexts: The specific definitions considered by Subramanian fall under weak irrelevance in our framework. Subramanian defined the class of computational-irrelevance claims to be claims that lead to computational savings. Our class of strong irrelevance is a prime example of computational irrelevance. It should be noted that <ref> [ Subramanian and Genesereth, 1987 ] </ref> discusses a definition of strong irrelevance, but it is a variation on weak irrelevance and is not an instance of computational irrelevance. The query tree encodes the space of possible derivations of the query.
Reference: [ Subramanian, 1989 ] <author> Subramanian, </author> <month> Devika </month> <year> 1989. </year> <title> A Theory of Justified Reformulations. </title> <type> Ph.D. Dissertation, </type> <institution> Stanford University, Stanford, </institution> <address> CA. </address>
Reference-contexts: Effective use of irrelevance reasoning requires a formal understanding of the issues involved in such reasoning, as has been done in the context of probabilistic reasoning [ Pearl, 1988 ] . The work of <ref> [ Subramanian, 1989 ] </ref> presented a framework for stating irrelevance claims, and raised several issues concerning irrelevance reasoning. However, two issues remain largely open. The first is to find efficient methods for automatically deriving irrelevance claims. <p> Specifically, we analyze irrelevance in a proof-theoretic setting by considering the possible derivations (or more generally, paths) that an inference mechanism can pursue in answering a query. In contrast, the analysis of <ref> [ Subramanian, 1989 ] </ref> is meta-theoretic, i.e., it considers only the formulas in the KB, not the possible derivations of the query. Consequently, we are able to make finer distinctions than those made in Subrama-nian's framework. Definitions in the space vary along two axes. <p> The space encompasses several definitions of irrelevance and related notions discussed in the past. The definitions of <ref> [ Subramanian, 1989 ] </ref> are instances of weak irrelevance; in particular, although her definitions are not in terms of derivations, the main definition of [ Subrama-nian, 1989 ] is equivalent to W I (; ; ; DI 3 ; D ( )). 6 The definition of update independence in [ Elkan, <p> Consequently, our methods are especially effective for KBs that contain many ground facts. Our analysis of irrelevance can be viewed as a refinement of the analysis in <ref> [ Subramanian, 1989 ] </ref> . The specific definitions considered by Subramanian fall under weak irrelevance in our framework. Subramanian defined the class of computational-irrelevance claims to be claims that lead to computational savings. Our class of strong irrelevance is a prime example of computational irrelevance.
References-found: 19

