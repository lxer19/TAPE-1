URL: http://www.cs.duke.edu/~pankaj/papers/nonholo-moderate.ps.gz
Refering-URL: http://www.cs.duke.edu/CGC/papers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Motion Planning for a Steering-Constrained Point Robot through Moderate Obstacles  
Author: Pankaj K. Agarwal Prabhakar Raghavan Hisao Tamaki 
Abstract: Most mobile robots use steering mechanisms to guide their motion. Such mechanisms have stops that constrain the rate at which the robot can change its direction. We study a point robot in the plane subject to such constraints, in the presence of a class of obstacles we call moderate obstacles. We consider the case in which the robot has a reverse gear that allows it to back up, as well as the case when it does not. All our algorithms run in polynomial time and produce paths whose lengths are either optimal or within an additive constant of optimal.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Barraquand and J-C. Latombe. </author> <title> Nonholonomic mobile robots and optimal maneuvering. </title> <journal> Revue d'Intelligence Artificielle, </journal> <volume> 3 </volume> <pages> 77-103, </pages> <year> 1989. </year>
Reference-contexts: P 3 ) tangent to C 4 , and let Q 1 = C 4 [U; V ]. Obviously kQ 1 k kP 3 [ 3 ; V ]k + kP [ 1 ; U ]k. Next, let Q 0 be the path (not necessarily smooth) P 0 1 <ref> [X 0 ; 1 ] </ref> ffi P 1 3 [rev ( 3 ); rev (U )], and let Q 2 be the optimal, feasible path from X 0 to rev (U ) that is homotopic to Q 0 | Q 0 initially follows C 0 in the counterclockwise direction, and then, <p> We construct a new path P 0 from P by replacing P [X 0 ; V ] with Q 2 ffi Q 1 . It is easily seen that P 0 is feasible. Finally, kQ 2 ffi Q 1 k = kQ 2 k + kQ 1 k 1 <ref> [X 0 ; 1 ] </ref>k + kP 3 [Z 2 ; 3 ]k + kP [U; Z 2 ]k + kP [ 1 ; U ]k + kP 3 [ 3 ; V ]k Hence P 0 is shorter than P .
Reference: [2] <author> J. Barraquand and J-C. Latombe. </author> <title> Nonholonomic multibody mobile robots: controllability and motion planning in the presence of obstacles. </title> <journal> Algorithmica, </journal> <volume> 10 </volume> <pages> 121-155, </pages> <year> 1993. </year>
Reference: [3] <author> X. Bui, J. Boissonnat, P. Soueres, and J. Leblond. </author> <title> Shortest path synthesis for Dubins non-holonomic robot. </title> <booktitle> Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <year> 1994. </year>
Reference-contexts: It is easily seen that P 0 is feasible. Finally, kQ 2 ffi Q 1 k = kQ 2 k + kQ 1 k 1 [X 0 ; 1 ]k + kP 3 <ref> [Z 2 ; 3 ] </ref>k + kP [U; Z 2 ]k + kP [ 1 ; U ]k + kP 3 [ 3 ; V ]k Hence P 0 is shorter than P .
Reference: [4] <author> J. Boissonnat, A. Cerezo, and J. Leblond. </author> <title> Shortest paths of bounded curvature in the plane. </title> <booktitle> Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <year> 1992. </year>
Reference-contexts: Reeds and Shepp [32] extended this obstacle-free characterization to robots that are allowed to make reversals. (Boissonnat et al. <ref> [4] </ref> gave an alternative proof for both cases, using ideas from control theory.) For robots that must contend with polygonal obstacles, Fortune and Wilfong [12] gave a 2 poly (n;m) -time algorithm, where n is the total number of vertices in the polygons defining the obstacles, and m the maximum number <p> It is easy to see that perturbation (a) is indeed length-reducing as long as the length of the C-segment in the middle is at most . Readers are referred to <ref> [4, 11] </ref> for perturbation (d) (we remark that in Lemma 6 below we give an elementary geometric proof of the claim that perturbation (d) is length-reducing). We formalize perturbations (b) and (c) in Lemma 7 below, in a generalized form to be used later.
Reference: [5] <author> J. Canny. </author> <title> Some algebraic and geometric configurations in PSPACE. </title> <booktitle> In Proc. 20th Annu. ACM Sympos. Theory Comput., </booktitle> <pages> pages 460-467, </pages> <year> 1988. </year>
Reference-contexts: This problem is known to be PSPACE-complete <ref> [5, 33] </ref>, and efficient algorithms have been developed for several special cases [36]. Most of these algorithms, however, do not take into account the kinodynamic constraints (for instance, velocity/acceleration bounds, curvature bounds), the so called nonholonomic constraints, of a real robot imposed by its physical limitations.
Reference: [6] <author> J. Canny, B. Donald, J. Reif, and P. Xavier. </author> <title> On the complexity of kinodynamic planning. </title> <booktitle> In Proc. 29th Symp. on Foundations of Computer Science, </booktitle> <year> 1988. </year>
Reference-contexts: For a scene with n obstacle vertices, his algorithm preprocesses the scene in time O (m 2 (n 2 + log m)), following which queries are answered in time O (m 2 ). Other, more general, dynamic constraints are considered in <ref> [6, 7, 10, 29, 35] </ref>. This paper is organized as follows. In Section 2 we formalize our notation (some of which are borrowed from the paper by Fortune and Wilfong [12]), define our model, and state our 2 main results.
Reference: [7] <author> J. Canny, A. Rege, and J. Reif. </author> <title> An exact algorithm for kinodynamic planning in the plane. </title> <journal> Discrete Comput. Geom., </journal> <volume> 6 </volume> <pages> 461-484, </pages> <year> 1991. </year>
Reference-contexts: For a scene with n obstacle vertices, his algorithm preprocesses the scene in time O (m 2 (n 2 + log m)), following which queries are answered in time O (m 2 ). Other, more general, dynamic constraints are considered in <ref> [6, 7, 10, 29, 35] </ref>. This paper is organized as follows. In Section 2 we formalize our notation (some of which are borrowed from the paper by Fortune and Wilfong [12]), define our model, and state our 2 main results.
Reference: [8] <author> J. Canny and J. Reif. </author> <title> New lower bound techniques for robot motion planning. </title> <booktitle> In Proc. 28th Symp. on Theory of Computing, </booktitle> <pages> pages 49-60, </pages> <year> 1987. </year>
Reference: [9] <author> E. Cockayne and G. Hall. </author> <title> Plane motion of a particle subject to curvature constraints. </title> <journal> SIAM J. Control, </journal> <volume> 43 </volume> <pages> 197-220, </pages> <year> 1975. </year> <month> 43 </month>
Reference: [10] <author> B. Donald and P. Xavier. </author> <title> Near-optimal kinodynamic planning for robots with coupled dynamics bounds. </title> <booktitle> In IEEE Int. Symp. on Intelligent Controls, </booktitle> <year> 1989. </year>
Reference-contexts: For a scene with n obstacle vertices, his algorithm preprocesses the scene in time O (m 2 (n 2 + log m)), following which queries are answered in time O (m 2 ). Other, more general, dynamic constraints are considered in <ref> [6, 7, 10, 29, 35] </ref>. This paper is organized as follows. In Section 2 we formalize our notation (some of which are borrowed from the paper by Fortune and Wilfong [12]), define our model, and state our 2 main results.
Reference: [11] <author> L.E. Dubins. </author> <title> On curves of minimal length with a constraint on average curvature and with prescribed initial and terminal positions and tangents. </title> <journal> American Journal of Mathematics, </journal> <volume> 79 </volume> <pages> 497-516, </pages> <year> 1957. </year>
Reference-contexts: We present efficient algorithms for computing optimal, or near-optimal, collision-free paths for B in presence of moderate obstacles. Roughly speaking an obstacle is moderate if it is convex and the curvature of its boundary is bounded by 1. Dubins <ref> [11] </ref> considered this problem in the absence of obstacles, with the further restriction that the robot is not equipped with a reverse gear, so that it can never back up. <p> Suppose, for example, that a path P consists of a C-segment, an L-segment, and a C-segment in this order. Following Dubins <ref> [11] </ref> convention, we say that P is of type CLC. This notation is generalized to an arbitrary sequence of O-/C-/L-segments. 3.1 Scenes without obstacles We first consider optimal paths in an obstacle-free scene. Dubins [11] gave the following characterization of optimal paths. Theorem 3 (Dubins [11]) Any optimal path is of <p> Following Dubins <ref> [11] </ref> convention, we say that P is of type CLC. This notation is generalized to an arbitrary sequence of O-/C-/L-segments. 3.1 Scenes without obstacles We first consider optimal paths in an obstacle-free scene. Dubins [11] gave the following characterization of optimal paths. Theorem 3 (Dubins [11]) Any optimal path is of type CCC or CLC, or a substring thereof. We briefly sketch his proof and rederive some of his key lemmas because we need to generalize them for later use. <p> Following Dubins <ref> [11] </ref> convention, we say that P is of type CLC. This notation is generalized to an arbitrary sequence of O-/C-/L-segments. 3.1 Scenes without obstacles We first consider optimal paths in an obstacle-free scene. Dubins [11] gave the following characterization of optimal paths. Theorem 3 (Dubins [11]) Any optimal path is of type CCC or CLC, or a substring thereof. We briefly sketch his proof and rederive some of his key lemmas because we need to generalize them for later use. Sketch: The proof proceeds in two parts. <p> Sketch: The proof proceeds in two parts. He first establishes that if P is an optimal path whose length is bounded by a small constant (say, =8), then P must be of type CLC or a substring thereof (Proposition 5.12 of <ref> [11] </ref>). Since a subpath of an optimal path itself is an optimal path, this implies that any optimal path is a finite sequence of C- and L-segments. <p> It is easy to see that perturbation (a) is indeed length-reducing as long as the length of the C-segment in the middle is at most . Readers are referred to <ref> [4, 11] </ref> for perturbation (d) (we remark that in Lemma 6 below we give an elementary geometric proof of the claim that perturbation (d) is length-reducing). We formalize perturbations (b) and (c) in Lemma 7 below, in a generalized form to be used later. <p> We formalize perturbations (b) and (c) in Lemma 7 below, in a generalized form to be used later. The proof of this lemma uses essentially the same argument as Dubins <ref> [11] </ref>. Q 2 P 3 U P 2 Z P 1 W Lemma 4 (Dubins [11]) A path of type LCL, CCL, or LCC cannot be an optimal path. 7 Proof: The claim is easy to prove if the length of the middle C-segment is at most | there is an <p> We formalize perturbations (b) and (c) in Lemma 7 below, in a generalized form to be used later. The proof of this lemma uses essentially the same argument as Dubins <ref> [11] </ref>. Q 2 P 3 U P 2 Z P 1 W Lemma 4 (Dubins [11]) A path of type LCL, CCL, or LCC cannot be an optimal path. 7 Proof: The claim is easy to prove if the length of the middle C-segment is at most | there is an obvious perturbation of the path (shown in Figure 3 (a)) that reduces the length while <p> We can, however, still obtain the equality (3), and then apply Lemma 5. 2 We now eliminate the possibility of an optimal path of type CCCC. Our proof is purely geometric and more intuitive than the analytic proof of Dubins. Lemma 7 (Dubins <ref> [11] </ref>) A path of type CCCC cannot be an optimal path. Proof: Let P be a moderate path of type CCCC. We define the perturbation shown in Figure 3 (d) formally, and show that its length is less than that of P .
Reference: [12] <author> S. Fortune and G. Wilfong. </author> <title> Planning constrained motion. </title> <booktitle> In Annals of Math. and Art. Intell., </booktitle> <pages> pages 21-82, </pages> <year> 1991. </year>
Reference-contexts: Reeds and Shepp [32] extended this obstacle-free characterization to robots that are allowed to make reversals. (Boissonnat et al. [4] gave an alternative proof for both cases, using ideas from control theory.) For robots that must contend with polygonal obstacles, Fortune and Wilfong <ref> [12] </ref> gave a 2 poly (n;m) -time algorithm, where n is the total number of vertices in the polygons defining the obstacles, and m the maximum number of bits required to specify any vertex of obstacles; their algorithm only decides whether a path is feasible, without necessarily finding one. <p> Other, more general, dynamic constraints are considered in [6, 7, 10, 29, 35]. This paper is organized as follows. In Section 2 we formalize our notation (some of which are borrowed from the paper by Fortune and Wilfong <ref> [12] </ref>), define our model, and state our 2 main results. Section 3 deals with the case when B is not allowed to make reversals, and Section 4 deals when B is allowed to make reversals. <p> Note that kQ 1 k = kP 1 k ; kQ 0 On the other hand, by Lemma 5, kQ 0 0 k + : This completes the proof of the lemma. 2 3.2 Scenes with moderate obstacles In the presence of (arbitrary) obstacles, Fortune and Wilfong <ref> [12] </ref> and Jacobs and Canny [16] observe that any subpath of an optimal path is a Dubins path if the subpath does not touch any obstacle except at the endpoints. Thus, any optimal path is a finite sequence of C-, L-, or O-segments.
Reference: [13] <author> T. Fraichard. </author> <title> Smooth trajectory planning for a car in a structured world. </title> <booktitle> In Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 318-323, </pages> <year> 1991. </year>
Reference-contexts: A moderate scene is a collection of disjoint moderate obstacles. See Figure 2 for an example. (This scene may resemble streets and traffic islands; indeed, algorithms for driving a steering-constrained robot through streets are the focus of a substantial European research initiative <ref> [13] </ref>.) The size of a scene is the total number of edges in its obstacles. A (composite or forward) path is feasible if it is moderate and does not intersect the interior of any obstacle in the scene.
Reference: [14] <author> M Fredman and R. Tarjan. </author> <title> Fibonacci heaps and their uses in improved network optimization. </title> <booktitle> 34 </booktitle> <pages> 596-615, </pages> <year> 1987. </year> <note> J. ACM </note>
Reference-contexts: Hence, we can compute in O (n 2 log n + (1=") log (1=")) time all feasible edges of E 2 . Finally, we compute an S-F shortest path in G, in time O ((n 2 + 1=") log (n + 1=")), using the algorithm by Fredman and Tarjan <ref> [14] </ref>. The running time can be improved to O (n 2 log n + (1=") log (1=")) using Theorem 9 and Lemma 22, as follows.
Reference: [15] <author> J. Hopcroft, J. Schwartz, and M. Sharir, </author> <title> editors. Planning, Geometry, and Complexity of Robot Motion. </title> <publisher> Ablex Publishing Corp., </publisher> <address> Norwood, New Jersy, </address> <year> 1984. </year>
Reference: [16] <author> P. Jacobs and J. Canny. </author> <title> Planning smooth paths for mobile robots. </title> <booktitle> In Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 2-7, </pages> <year> 1989. </year>
Reference-contexts: Jacobs and Canny <ref> [16] </ref> gave an O (n 3 log n + (n + L) 2 =ffi 2 )-time algorithm that finds an approximate shortest path provided the shortest path is ffi-robust, where L is the total edge length of the obstacles. <p> kQ 1 k = kP 1 k ; kQ 0 On the other hand, by Lemma 5, kQ 0 0 k + : This completes the proof of the lemma. 2 3.2 Scenes with moderate obstacles In the presence of (arbitrary) obstacles, Fortune and Wilfong [12] and Jacobs and Canny <ref> [16] </ref> observe that any subpath of an optimal path is a Dubins path if the subpath does not touch any obstacle except at the endpoints. Thus, any optimal path is a finite sequence of C-, L-, or O-segments.
Reference: [17] <author> P. Jacobs, J-P. Laumond, and M. Taix. </author> <title> Efficient motion planners for nonholonomic mobile robots. </title> <booktitle> In Proceedings of the IEEE/RSJ International Workshop on Intelligent Robots and Systems, </booktitle> <pages> pages 1229-1235, </pages> <year> 1991. </year>
Reference: [18] <author> K. Kedem, R. Livne, J. Pach, and M. Sharir. </author> <title> On the union of Jordan regions and collision-free translational motion amidst polygonal obstacles, </title> <journal> Discrete Comput. Geom., </journal> <volume> 1 </volume> <pages> 59-71, </pages> <year> 1986. </year>
Reference-contexts: This implies that k 6, as at most 6 unit-radius discs with pairwise disjoint interiors can intersect a unit-radius disc. Since the obstacles are pairwise disjoint, a result of Kedem et al. <ref> [18] </ref> implies that the boundaries of any pair of O fl i 's intersect in at most two points.
Reference: [19] <author> V. Kostov and E. Degtiariova-Kostova. </author> <title> Suboptimal paths in the problem of a planar motion with bounded curvature. </title> <type> Tech. </type> <institution> Rept. 2051, INRIA, Sophia-Antipolis, </institution> <year> 1993. </year>
Reference: [20] <author> V. Kostov and E. Degtiariova-Kostova. </author> <title> The planar motion with bounded derivative of the curvature and its suboptimal paths. </title> <type> Tech. </type> <institution> Rept. 2189, INRIA, Sophia-Antipolis, </institution> <year> 1994. </year>
Reference: [21] <author> J-C. Latombe. </author> <title> A fast path-planner for a car-like indoor mobile robot. </title> <booktitle> In Proceedings of the 9th National Conference on Artificial Intelligence, </booktitle> <pages> pages 659-665, </pages> <year> 1991. </year>
Reference-contexts: This is not necessarily true if the robot has to obey nonholonomic constraints. In nonholonomic motion planning, a placement is not enough to describe the robot. Instead, a robot is completely described by its state, which consists of the k parameters and their derivatives (see <ref> [21] </ref> for a more detailed discussion), which makes the problem significantly harder. In this paper, we study the path planning problem for a point robot B whose path is constrained to have curvature at most 1. B may or may not be equipped with a reverse gear.
Reference: [22] <author> J-C. Latombe. </author> <title> Robot Motion Planning. </title> <address> Kluwer-Academic, Boston, </address> <year> 1991. </year>
Reference-contexts: 1 Introduction The motion-planning (or path planning) problem involves planning a collision-free path for a robot moving amid obstacles. This is one of the main problems in robotics, and it has been widely studied (see, e.g., the book by Latombe <ref> [22] </ref> and the survey paper by Schwartz and Sharir [36]). <p> The curvature constraint corresponds naturally to constraints imposed by stops on the steering mechanism found in virtually every real-world robot; see e.g., <ref> [22] </ref>. We present efficient algorithms for computing optimal, or near-optimal, collision-free paths for B in presence of moderate obstacles. Roughly speaking an obstacle is moderate if it is convex and the curvature of its boundary is bounded by 1.
Reference: [23] <author> J.P. Laumond. </author> <title> Finding collision free smooth trajectories for a nonholonomic mobile robot. </title> <booktitle> In Proc. 10th Int. Joint Conf. on Artificial Intelligence, </booktitle> <pages> pages 1120-1123, </pages> <year> 1987. </year>
Reference: [24] <author> J-P. Laumond and T. Simeon. </author> <title> Motion planning for a two degrees of freedom mobile robot with towing. </title> <type> Technical Report 89148, </type> <institution> LAAS/CNRS, Toulouse, </institution> <year> 1989. </year>
Reference-contexts: It may be possible to pose this problem with a restriction on the total number of reversals; allowing arbitrarily many reversals reduces the problem to the unconstrained case. In the robotics literature the following approach to steering-constrained motion planning is frequently described <ref> [24, 25] </ref>: first use a conventional (unconstrained) path planner to generate a tentative path and then use heuristics to "round" this path into a topologically equivalent path that meets the curvature constraint.
Reference: [25] <author> J-P. Laumond, M. Taix, and P. Jacobs. </author> <title> A motion planner for car-like robots based on a global/local approach. </title> <booktitle> In Proceedings of the IEEE/RSJ International Workshop on Intelligent Robots and Systems, </booktitle> <pages> pages 765-773, </pages> <year> 1990. </year>
Reference-contexts: It may be possible to pose this problem with a restriction on the total number of reversals; allowing arbitrarily many reversals reduces the problem to the unconstrained case. In the robotics literature the following approach to steering-constrained motion planning is frequently described <ref> [24, 25] </ref>: first use a conventional (unconstrained) path planner to generate a tentative path and then use heuristics to "round" this path into a topologically equivalent path that meets the curvature constraint.
Reference: [26] <author> J-P. Laumond. </author> <title> Finding collision-free smooth trajectories for a non-holonomic mobile robot. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1120-1123, </pages> <year> 1987. </year>
Reference: [27] <author> B. Mirtich and J. Canny. </author> <title> Using skeletons for nonholonomic path planning among obstacles. </title> <booktitle> In Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 2533-2540, </pages> <year> 1992. </year>
Reference: [28] <author> Y. Nakamura and R. Mukherjee. </author> <title> Nonholonomic path planning and automation. </title> <booktitle> In Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 1050-1055, </pages> <year> 1989. </year>
Reference: [29] <author> C. O'Dunlaing. </author> <title> Motion planning with inertial constraints. </title> <journal> Algorithmica, </journal> <volume> 2 </volume> <pages> 431-475, </pages> <year> 1987. </year>
Reference-contexts: For a scene with n obstacle vertices, his algorithm preprocesses the scene in time O (m 2 (n 2 + log m)), following which queries are answered in time O (m 2 ). Other, more general, dynamic constraints are considered in <ref> [6, 7, 10, 29, 35] </ref>. This paper is organized as follows. In Section 2 we formalize our notation (some of which are borrowed from the paper by Fortune and Wilfong [12]), define our model, and state our 2 main results.
Reference: [30] <author> C.H. Papadimitriou and M. Yannakakis. </author> <title> Shortest paths without a map. </title> <journal> Theoretical Computer Science, </journal> <volume> 84 </volume> <pages> 127-150, </pages> <year> 1991. </year>
Reference-contexts: Consider our problem in the setting of online navigation <ref> [30] </ref>: the robot learns about each obstacle only when it can see the obstacle.
Reference: [31] <author> F. Preparata and M. Shamos, </author> <title> Computational Geometry: An Introduction, </title> <publisher> Springer Verlag, </publisher> <address> Heidelberg, </address> <year> 1985 </year>
Reference-contexts: See Figure 1 for examples of forward, backward, and composite paths. Finally, a few words about the model of computation. Our algorithms work under the arithmetic model of computation common in computational geometry <ref> [31] </ref>, i.e., we assume infinite precision arithmetic operations.
Reference: [32] <author> J.A. Reeds and L.A. Shepp. </author> <title> Optimal paths for a car that goes both forwards and backwards. </title> <journal> Pacific Journal of Mathematics, </journal> <volume> 145 </volume> <pages> 367-393, </pages> <year> 1990. </year>
Reference-contexts: His characterization shows that the shortest path from any start position to any final position consists of at most 3 segments, each of which is either a straight line or an arc of a unit-radius circle. Reeds and Shepp <ref> [32] </ref> extended this obstacle-free characterization to robots that are allowed to make reversals. (Boissonnat et al. [4] gave an alternative proof for both cases, using ideas from control theory.) For robots that must contend with polygonal obstacles, Fortune and Wilfong [12] gave a 2 poly (n;m) -time algorithm, where n is
Reference: [33] <author> J. H. Reif. </author> <title> Complexity of the generalized movers problem. </title> <editor> In J. Hopcroft, J. Schwartz, and M. Sharir, editors, </editor> <title> Planning, Geometry and Complexity of Robot Motion, </title> <address> pages 267-281. </address> <publisher> Ablex Pub. Corp., </publisher> <address> Norwood, NJ, </address> <year> 1987. </year>
Reference-contexts: This problem is known to be PSPACE-complete <ref> [5, 33] </ref>, and efficient algorithms have been developed for several special cases [36]. Most of these algorithms, however, do not take into account the kinodynamic constraints (for instance, velocity/acceleration bounds, curvature bounds), the so called nonholonomic constraints, of a real robot imposed by its physical limitations.
Reference: [34] <author> J. H. Reif and M. Sharir. </author> <title> Motion planning in the presence of moving obstacles. </title> <booktitle> In Proc. 26th Annu. IEEE Sympos. Found. Comput. Sci., </booktitle> <pages> pages 144-154, </pages> <year> 1985. </year>
Reference: [35] <author> J.H. Reif and S.R. Tate. </author> <title> Approximate kinodynamic planning using L 2 -norm dynamic bounds. </title> <journal> Computers Math. Applic., </journal> <volume> 27(5) </volume> <pages> 29-44, </pages> <year> 1994. </year>
Reference-contexts: For a scene with n obstacle vertices, his algorithm preprocesses the scene in time O (m 2 (n 2 + log m)), following which queries are answered in time O (m 2 ). Other, more general, dynamic constraints are considered in <ref> [6, 7, 10, 29, 35] </ref>. This paper is organized as follows. In Section 2 we formalize our notation (some of which are borrowed from the paper by Fortune and Wilfong [12]), define our model, and state our 2 main results.
Reference: [36] <author> J.T. Schwartz and M. Sharir. </author> <title> Algorithmic motion planning in robotics. </title> <editor> In J. Van Leeuwen, editor, </editor> <booktitle> Algorithms and Complexity, volume A of Handbook of Theoretical Computer Science, </booktitle> <pages> pages 391-430. </pages> <publisher> Elsevier, </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: 1 Introduction The motion-planning (or path planning) problem involves planning a collision-free path for a robot moving amid obstacles. This is one of the main problems in robotics, and it has been widely studied (see, e.g., the book by Latombe [22] and the survey paper by Schwartz and Sharir <ref> [36] </ref>). In the simplest form of the motion planning, given a moving robot B, a set of obstacles O, and a pair of placements I and F of B; we wish to find a continuous, collision-free path for B from I to F . <p> This problem is known to be PSPACE-complete [5, 33], and efficient algorithms have been developed for several special cases <ref> [36] </ref>. Most of these algorithms, however, do not take into account the kinodynamic constraints (for instance, velocity/acceleration bounds, curvature bounds), the so called nonholonomic constraints, of a real robot imposed by its physical limitations.
Reference: [37] <author> M. Sharir. </author> <title> On k-sets in arrangements of curves and surfaces, </title> <journal> Discrete Comput. Geom., </journal> <volume> 6 (1991), </volume> <pages> 593-613. </pages>
Reference-contexts: Since the obstacles are pairwise disjoint, a result of Kedem et al. [18] implies that the boundaries of any pair of O fl i 's intersect in at most two points. Plugging this observation and the above claim to a result of Sharir <ref> [37] </ref>, one can show that the number of intersection points between the boundaries of expanded obstacles is O (n), which proves the lemma.
Reference: [38] <author> H. Wang and P. Agarwal. </author> <title> Approximation algorithms for shortest paths with bounded curvature, </title> <type> manuscript. </type>
Reference-contexts: The running time was recently improved by Wang and Agarwal to O ((n 2 =ffi 2 ) log n) <ref> [38] </ref>. (Informally, a path is ffi-robust if perturbations of any point of the path by ffi | in distance or in angle | do not violate the feasibility of the path.) Wilfong [39] studies a restriction in which the robot must stay on one of m line-segments (thought of as "lanes"),
Reference: [39] <author> G. Wilfong. </author> <title> Motion planning for an autonomous vehicle. </title> <booktitle> In Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 529-533, </pages> <year> 1988. </year>
Reference-contexts: running time was recently improved by Wang and Agarwal to O ((n 2 =ffi 2 ) log n) [38]. (Informally, a path is ffi-robust if perturbations of any point of the path by ffi | in distance or in angle | do not violate the feasibility of the path.) Wilfong <ref> [39] </ref> studies a restriction in which the robot must stay on one of m line-segments (thought of as "lanes"), except to turn between lanes.
Reference: [40] <author> G. Wilfong. </author> <title> Shortest paths for autonomous vehicles. </title> <booktitle> In Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 15-20, </pages> <year> 1989. </year> <month> 45 </month>
References-found: 40

