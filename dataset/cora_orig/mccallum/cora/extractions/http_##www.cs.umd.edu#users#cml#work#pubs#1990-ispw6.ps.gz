URL: http://www.cs.umd.edu/users/cml/work/pubs/1990-ispw6.ps.gz
Refering-URL: http://www.cs.umd.edu/users/cml/work/pubs/
Root-URL: 
Email: E-mail address: dieter@cs.umd.edu  
Phone: Phone: (301) 405-2707 Telefax: (301) 405-6707  
Title: A MVP-L1 Solution for the Software-Process Modeling Problem  
Author: Christopher M. Lott and H. Dieter Rombach 
Address: College Park, Maryland 20742  
Affiliation: Department of Computer Science and Institute for Advanced Computer Studies University of Maryland  
Date: October 1990  
Note: Presented at ISPW-6, Hakodate, Japan,  
Abstract: This paper contains a solution to the Software Process Modeling Example Problem in MVP-L1, intended for presentation and discussion at the 6th International Software Process Workshop in Hakodate, Japan, in October 1990. MVP-L1 is a prototype process modeling language developed as part of the MVP project at the University of Maryland. The discussion of the MVP-L1 solution is preceded by a brief introduction to the MVP modeling philosophy and the language MVP-L1 itself. z Funding for this project has been provided in part by the National Science Foundation (grant CCR-9057874).
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Victor R. Basili and H. Dieter Rombach. </author> <title> The TAME Project: Towards improvement-oriented software environments. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> SE-14(6):758-773, </volume> <month> June </month> <year> 1988. </year>
Reference-contexts: 1 MVP Process Modeling Philosophy As part of the TAME project at the University of Maryland, we have developed an improvement-oriented software environment model <ref> [1] </ref>: We distinguish between three major project activities: * Planning: The selection and/or creation of explicit product, process, and quality models and their integration into a project plan best suited to achieve the project goals in the given project environment.
Reference: [2] <author> H. Dieter Rombach. </author> <title> An experimental process modeling language: Lessons learned from modeling a maintenance environment. </title> <booktitle> In Proceedings of the Conference on Software Maintenance. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <month> October </month> <year> 1989. </year>
Reference-contexts: encourage reuse of these plans. * Support the tailorability of process models. * Support the use of process models for execution guidance and coordination of tasks in a project. 2 The Process Modeling Language MVP-L1 At the University of Maryland we have developed the prototype process modeling language MVP-L1 (references <ref> [3, 2, 4] </ref>) describe a very early version of this language). In order to understand the example of Section 3 and 4, it is important to understand that MVP-L1 is static and oriented towards process-modeling-in-the-large.
Reference: [3] <author> H. Dieter Rombach. </author> <title> A specification framework for software processes: Formal specification and derivation of information base requirements. </title> <booktitle> In Proceedings of the 4 th International Software Process Workshop, </booktitle> <pages> pages 85-90, </pages> <year> 1989. </year> <note> Appeared as ACM SIGSoft Software Engineering Notes14(4), </note> <month> June </month> <year> 1989. </year>
Reference-contexts: encourage reuse of these plans. * Support the tailorability of process models. * Support the use of process models for execution guidance and coordination of tasks in a project. 2 The Process Modeling Language MVP-L1 At the University of Maryland we have developed the prototype process modeling language MVP-L1 (references <ref> [3, 2, 4] </ref>) describe a very early version of this language). In order to understand the example of Section 3 and 4, it is important to understand that MVP-L1 is static and oriented towards process-modeling-in-the-large.
Reference: [4] <author> H. Dieter Rombach and Leo Mark. </author> <title> Software process and product specifications: A basis for generating customized software engineering information bases. </title> <booktitle> In Proceedings of the 22 nd Annual Hawaii International Conference on System Sciences, </booktitle> <volume> volume II, </volume> <pages> pages 165-174. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> January </month> <year> 1989. </year> <month> 31 </month>
Reference-contexts: encourage reuse of these plans. * Support the tailorability of process models. * Support the use of process models for execution guidance and coordination of tasks in a project. 2 The Process Modeling Language MVP-L1 At the University of Maryland we have developed the prototype process modeling language MVP-L1 (references <ref> [3, 2, 4] </ref>) describe a very early version of this language). In order to understand the example of Section 3 and 4, it is important to understand that MVP-L1 is static and oriented towards process-modeling-in-the-large.
References-found: 4

