URL: http://http.cs.berkeley.edu/~kozyraki/project/cs294-7/proj/paper.ps
Refering-URL: http://http.cs.berkeley.edu/~kozyraki/project/cs294-7/
Root-URL: 
Email: kozyraki@cs.berkeley.edu  
Title: Implementation Alternatives for N-choose-K Switches for Programmable Interconnects  
Author: Christoforos E. Kozyrakis 
Abstract: N-choose-K switches are used in programmable interconnects as input switches for LUTs or in hierarchical interconnection schemes. In this work, we design a number of switches in order to examine different structural and implementation alternatives. We discover that using the depopulated switch structure and keeping the configuration memory centralized in a encoded fashion lead to significant area benefits in most cases. While using two-ported DRAM is the most area efficient way to achieve full reconfiguration functionality, single-ported DRAM and SRAM can be interesting alternatives in certain cases. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Aditya et al. </author> <title> Routing Architectures for Hierarchical Field Programmable Gate Arrays. </title> <booktitle> In Proceedings of the 1994 IEEE International Conference on Computer Design, </booktitle> <month> October </month> <year> 1996. </year>
Reference-contexts: The first one is as LUT input switches, used to connect the K inputs of a LUT to certain of the N wires of the channel which physically converges upon it. The second use is within hierarchical array organizations, like those discussed in <ref> [1] </ref>. In this case such a switch is employed to interconnect the channels of two hierarchy levels and each connection can be in either direction. The goal of this work is to examine and compare the implementation/design of alternatives for such switches.
Reference: [2] <author> A. DeHon. </author> <title> Entropy, Counting, and Programmable Interconnect. </title> <type> Transit Note 121, </type> <institution> MIT Artificial Intelligence Laboratory, </institution> <month> September </month> <year> 1995. </year>
Reference: [3] <author> A. DeHon. </author> <title> Reconfigurable Architectures for General-Purpose Computing. </title> <institution> AI Techni-calReport 1586, MIT Artificial Intelligence Laboratory, </institution> <month> October </month> <year> 1996. </year>
Reference-contexts: 1 Introduction Programmable interconnect is the dominant factor of area and delay in configurable devices <ref> [3] </ref>. This results from the required flexibility, the significant number of interconnected elements and the area necessary for storing and managing configurations.
Reference: [4] <author> M. Katevenis et al. </author> <title> Datapath Design for RISC. </title> <booktitle> In Proceedings of the Conference on Advanced Research in VLSI, </booktitle> <month> January </month> <year> 1982. </year>
Reference-contexts: Using these two blocks, we implemented N choose-K for the two values of C, both for the regular and depopulated structure. In the case of the depopulated switch, instead of using the layout implied by figure 2, we employed a variance of the crossbar shifter introduced in RISC I <ref> [4] </ref>. In this rectangular scheme, presented in figure 5, the inputs are propagated in a diagonal fashion and, therefore, the actual size of the switching fabric is reduced to K (N K + 1), instead of N K.
Reference: [5] <author> J. Rabaey. </author> <title> Digital Integrated Circuits: A Design Perspective. </title> <publisher> Prentice Hall, </publisher> <year> 1996. </year>
Reference-contexts: Several alternatives also exist for the structure of the configuration memory. Several SRAM and DRAM cells can be used for the memory core. Our basic implementation used a two-ported (two bit lines) 3T-DRAM cell <ref> [5] </ref>. The effective size of this cell is 9:4m x 7:9m. Figure 8 presents the schematic view of a memory column with this cell. Both read and write bit lines are precharged.
Reference: [6] <author> S. Singh et al. </author> <title> The Effect of Logic Block Architecture on FPGA Performance. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <month> March </month> <year> 1992. </year>
Reference-contexts: The first case is interesting for switches used at the inputs of LUT, as 4-input LUTs have been identified to be the optimal decision both in terms of delay and area in most cases <ref> [6] </ref>. Here N represents the channel width. One can notice that area grows linearly with N, as expected. Yet for C=2, the slope is much steeper, i.e. the area increases with N much faster.
Reference: [7] <editor> E. Tau et al. </editor> <booktitle> DPGA Implementation. In Proceedings of the Third Canadian Workshop on Field-Programmable Devices, </booktitle> <month> May </month> <year> 1995. </year> <title> of N for K=4 (up) and K=N/2+1 (bottom). </title>
Reference: [8] <editor> S. Trimberger et al. A Time-Multiplexed FPGA. </editor> <booktitle> In Proceedings of the Symposium on Field-Programmable Custom Computing Machines, </booktitle> <month> April </month> <year> 1997. </year>
Reference-contexts: Given the increasing capacity of integrated circuits, the trend for using more simpler computing elements in configurable devices [10], instead of fewer complex, and the trend for storing multiple configurations within the array <ref> [8] </ref>, the importance of area and delay efficient interconnect structures will become even bigger. In this work we examine one of the components for programmable interconnect structures, the N-choose-K switch, presented in Figure 1.
Reference: [9] <author> Xilinx. </author> <title> XC4000 Series Field Programmable Gate Arrays. </title> <publisher> Datasheet. </publisher>
Reference-contexts: A final issue to keep in mind is the way the switch is programmed. In traditional FPGAs, all configuration bits are connected in a shift register fashion <ref> [9] </ref>. This requires minimum control and number of wires for reconfiguration, but also leads to extremely large reconfiguration delay. In addition, all configuration bits have to be updated or read on every context switch. For future reconfigurable devices, higher reconfiguration speed and flexibility will be desired.
Reference: [10] <author> Xilinx. </author> <title> XC6200 Field Programmable Gate Arrays. </title> <address> Datasheet, v1.8, </address> <year> 1997. </year> <title> 9 single-ported DRAM as a function of N, for K=4 and C=4 (left) or C=16 (right). Areas are normalized to that of similar switches with two-ported DRAM. single-ported DRAM as a function of N, for K=N/2+1 and C=4 (left) or C=16 (right). Areas are normalized to that of the similar switches with two-ported DRAM. </title> <booktitle> 10 DRAM for K=4. </booktitle> <pages> 11 </pages>
Reference-contexts: This results from the required flexibility, the significant number of interconnected elements and the area necessary for storing and managing configurations. Given the increasing capacity of integrated circuits, the trend for using more simpler computing elements in configurable devices <ref> [10] </ref>, instead of fewer complex, and the trend for storing multiple configurations within the array [8], the importance of area and delay efficient interconnect structures will become even bigger. In this work we examine one of the components for programmable interconnect structures, the N-choose-K switch, presented in Figure 1.
References-found: 10

