URL: ftp://cl-ftp.dfki.uni-sb.de/pub/papers/local/coli.ps.Z
Refering-URL: http://cl-www.dfki.uni-sb.de/cl/papers/cl-abstracts.html
Root-URL: 
Email: hnamei@dfki.uni-sb.de  
Title: disco An HPSG-based NLP System and its Application for Appointment Scheduling Project Note powerful and
Author: Hans Uszkoreit, Rolf Backofen, Stephan Busemann, Abdel Kader Diagne, Elizabeth A. Hinkelman, Walter Kasper, Bernd Kiefer, Hans-Ulrich Krieger, Klaus Netter, Gunter Neumann, Stephan Oepen, Stephen P. Spackman 
Note: a  
Address: Stuhlsatzenhausweg 3, 66123 Saarbrucken, Germany  
Affiliation: German Research Center for Artificial Intelligence (DFKI)  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Hiyan Alshawi, </author> <title> editor. The Core Language Engine. ACL-MIT Press Series in Natural Language Processing. </title> <publisher> MIT Press, </publisher> <address> Cambridge MA., </address> <year> 1992. </year>
Reference-contexts: Many others have decided to settle for a compromise between high-level description and efficient processing by strongly constraining their formalisms. The resulting formalisms are usually much closer to PROLOG and do not contain a powerful multiple-inheritance type system; e.g. the Core Language Engine (CLE) of SRI Cambridge <ref> [1] </ref>, its derivative the GEMINI system of SRI International in Menlo Park, the LKP of SIEMENS in Munich [3]. As a consequence of their design philosophy, these systems usually do not feature a powerful development platform.
Reference: [2] <author> Rolf Backofen and Christoph Weyers. </author> <title> UDiNe|A Feature Constraint Solver with Distributed Disjunction and Classical Negation. </title> <type> Technical report, </type> <institution> DFKI, Saarbrucken, Germany, </institution> <year> 1994. </year> <month> Forthcoming. </month>
Reference-contexts: Constraint Solver UDiNe is a feature constraint solver capable of dealing with distributed disjunctions over arbitrary structures, negative coreferences, full negation, and functional and relational constraints. It is the first (and to our knowledge the only) implemented feature constraint solver that integrates both full negation and distributed disjunctions <ref> [2] </ref>. UDiNe does not use distributed disjunction only as a tool for efficient processing. It also forms part of the input syntax, which allows for very compact representation of the input data.
Reference: [3] <author> Hans-Ulrich Block. </author> <title> Compiling Trace & Unification Grammar. </title> <editor> In Tomek Strzalkowski, editor, </editor> <booktitle> Reversible Grammar in Natural language Processing, </booktitle> <pages> pages 155-174. </pages> <publisher> Kluwer Academic Press, </publisher> <address> London, </address> <year> 1994. </year>
Reference-contexts: The resulting formalisms are usually much closer to PROLOG and do not contain a powerful multiple-inheritance type system; e.g. the Core Language Engine (CLE) of SRI Cambridge [1], its derivative the GEMINI system of SRI International in Menlo Park, the LKP of SIEMENS in Munich <ref> [3] </ref>. As a consequence of their design philosophy, these systems usually do not feature a powerful development platform. Only a few groups have continued to work in high-level formalisms driven by the expectation that better processing methods for these formalisms can be developed. Our work belongs in this category.
Reference: [4] <author> Stephan Busemann. </author> <title> The SeReal System: putting semantic-head-driven generation to the limits. </title> <type> Technical document, </type> <institution> DFKI, Saarbrucken, Germany, </institution> <year> 1994. </year> <month> Forthcoming. </month>
Reference-contexts: With differing parameter settings instances of the parser module are used in the X2MorF and surface speech act recognition modules as well. Generator Surface generation in disco is performed with the SeReal (Sentence Realization) system <ref> [4] </ref>, which is based on the semantic-head-driven algorithm by Shieber et al. SeReal takes a T DL semantic sentence representation as its input and can deliver all derivations for the input admitted by the grammar. Efficient lexical access is achieved by having the lexicon indexed according to semantic predicates.
Reference: [5] <author> Elizabeth A. Hinkelman and Stephen P. Spack-man. </author> <title> Abductive Speech Act Recognition, Corporate Agents and the Cosma System. </title> <editor> In W.J. Black et al., editor, </editor> <title> Abduction, Beliefs and Context: </title> <booktitle> Proceedings of the Second ESPRIT PLUS Workshop in Computational Pragmatics. </booktitle> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: The assignments of illocutionary force take into account syntactic features, a marking of per-formative verbs and assignments of fixed illocutionary force to relevant idiomatic expressions. Recently inference-based dialogue facilities using a quasi-modal logic for multiagent belief and goal attribution <ref> [5] </ref> have been added to the system. Incoming surface speech act structures are subjected to anaphora and reference resolution, translated into a frame-based action representation, and disambiguated using inferential context.
Reference: [6] <author> Bernd Kiefer and Oliver Scherf. </author> <title> Gimme More HQ Parsers. The Generic Parser Class of DISCO. </title> <type> Technical report, </type> <institution> DFKI, Saarbrucken, Germany, </institution> <year> 1994. </year> <month> Forthcoming. </month>
Reference-contexts: In addition to the separate modules for parsing and generation, we also experiment with a uniform reversible processing module based on generalized Earley deduction. Parser The parser is a bidirectional bottom-up chart parser which operates on a context-free backbone implicitly contained in the grammar <ref> [6] </ref>. The parser can be parameterized according to various processing strategies (e.g. breadth first, preference of certain rules etc.). Moreover, it is possible to specify the processing order for the daughters of individual rules. An elaborate statistics component supports the grammar developer in tuning these control strategies.
Reference: [7] <author> Bernd Kiefer, Klaus Netter, and K. Vijay-Shanker. </author> <title> Compilation of HPSG to TAG. </title> <type> Research report, </type> <institution> DF-KI, Saarbrucken, Germany, </institution> <year> 1994. </year> <month> Forthcoming. </month>
Reference-contexts: The ordering of disjuncts is useful when the system is supposed to find only the best result (s), which is the case for any reasonably practical NL application. An extension of UDiNe has been implemented that exploits distributed disjunctions for preference-based backtracking. Compilation of HPSG into Lexicalized TAG <ref> [7] </ref> describes an approach for compiling HPSG into lexicalized feature-based TAG. Besides our hope to achieve more efficient processing, we want to gain a better understanding of the correlation between HPSG and TAG.
Reference: [8] <author> Hans-Ulrich Krieger and Ulrich Schafer. </author> <month> TDL </month> | 
Reference-contexts: The modules are connected via a flexible interface to allow for mutual control. Type System T DL is a powerful typed feature-based language and inference system, specifically suited for highly lexicalized grammars <ref> [8] </ref> (in this volume). Type definitions in T DL consist of type constraints and feature constraints over the standard boolean con-nectives ^, _, and :. The operators are generalized in that they can connect feature descriptions, coreference tags (logical variables) and types.
References-found: 8

