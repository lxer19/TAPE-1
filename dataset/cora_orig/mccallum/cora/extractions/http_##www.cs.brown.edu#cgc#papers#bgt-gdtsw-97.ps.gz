URL: http://www.cs.brown.edu/cgc/papers/bgt-gdtsw-97.ps.gz
Refering-URL: http://www.cs.brown.edu/people/rt/papers/recent-papers/recent-papers.html
Root-URL: http://www.cs.brown.edu
Email: fssb,ag,rtg@cs.brown.edu  
Title: A Graph Drawing and Translation Service on the WWW*  
Author: Stina Bridgeman, Ashim Garg and Roberto Tamassia 
Address: Providence, RI 02912-1910, USA  
Affiliation: Department of Computer Science Brown University  
Abstract: Both practitioners and researchers can take better advantage of the latest developments in graph drawing if implementations of graph drawing algorithms are made available on the WWW. We envision a graph drawing and translation service for the WWW with dual objectives: drawing user-specified graphs, and translating graph-descriptions and graph drawings from one format to another. As a first step toward realizing this vision, we have developed a prototype service which is avail able at http://loki.cs.brown.edu:8081/graphserver/home.html.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> L. Buti, G. Di Battista, G. Liotta, E. Tassinari, F. Vargiu, and L. Vismara. GD-workbench: </author> <title> a system for prototyping and testing graph drawing algorithms. </title> <booktitle> Graph Drawing (Proc. GD '95). LNCS, </booktitle> <volume> 1027 </volume> <pages> 76-87, </pages> <year> 1996. </year> <editor> F. J. Brandenburg, </editor> <publisher> Ed. </publisher>
Reference-contexts: It is very flexible in the sense that it allows the users to define their own keywords. GDS, Tom Sawyer, and MALF are minor variations of the formats used by GIOTTO [9], the Tom Sawyer Graph Layout Toolkit, and GD-Workbench <ref> [1] </ref>, respectively. Gnuplot, mif and fig are the formats of gnuplot, Frame Maker and xfig, respectively. Graph Drawer. The graph drawer accepts as input the name of a graph drawing algorithm and a graph described in the algorithm's input format, and constructs a drawing of the graph using the algorithm.
Reference: 2. <author> G. Di Battista, A. Garg, G. Liotta, R. Tamassia, E. Tassinari, and F. Vargiu. </author> <title> An experimental comparison of four graph drawing algorithms. </title> <journal> Comput. Geom. Theory Appl., </journal> <note> 1996. to appear. </note>
Reference-contexts: GIOTTO [9] is a general-purpose drawing algorithm based on the planariza-tion approach and a bend-minimization method [8]. In addition to the original implementation of GIOTTO, we offer a variation of it called GIOTTOwith-labels, which expands the vertices to accommodate labels. PAIRS <ref> [2] </ref> is our implementation of the algorithm of [6], which uses st-numberings. Planarizer is not actually a drawing algorithm: it is the first step of GIOTTO, which constructs a planar embedding of the input graph by replacing crossings (if any) with dummy vertices.
Reference: 3. <author> M. Himsolt. GML: </author> <title> Graph Modelling Language. </title> <type> Manuscript, </type> <institution> Universitat Passau, </institution> <address> Innstrae 33, 94030 Passau, Germany, </address> <year> 1996. </year> <note> Available at http://www.uni-passau.de/~himsolt/Graphlet/GML. </note>
Reference-contexts: By making implementations of graph drawing algorithms available on the WWW, we can help both practitioners and researchers to use the latest technological innovations. This, however, also requires tackling the problem of the over-abundance of formats for describing graphs and drawings. While there are efforts in this direction <ref> [3] </ref>, there is still no single universally-accepted format. Therefore, researchers typically define their own formats when implementing an algorithm. <p> the graph into some other format (presumably a text format), which is displayed in a browser window and can then be saved using the browser's own "Save As" mechanism. 4 Future Work There are several directions for further work on the service: Adding support for new formats such as GML <ref> [3] </ref>. Adding new algorithms. We plan to start with implementations already avail able freely on the Web.
Reference: 4. <author> E. Koutsofios and S. </author> <title> North. Drawing graphs with dot. </title> <type> Technical report, </type> <institution> AT&T Bell Laboratories, </institution> <address> Murray Hill, NJ., </address> <year> 1995. </year> <note> dot user's manual. Available at http://www.research.att.com/dist/drawdag. </note>
Reference-contexts: A bibliography (and URLs) of many implementations is maintained by Georg Sander at http://www.cs.uni-sb.de/ RW/users/sander/html/gstools.html. Stephen North has designed a service (visit http://www.research.att.com/dist/drawdag/mail server for details) that accepts a graph sent to it by email and returns, also by email, a drawing constructed using dot <ref> [4] </ref>. This service also maintains a data base consisting of the graphs sent to it by the users [5]. We have developed a prototype graph drawing and translation service on the WWW.
Reference: 5. <author> S. </author> <title> North. 5114 directed graphs, 1995. </title> <type> Manuscript. </type> <note> Available at ftp.research.att.com/dist/drawdag. </note>
Reference-contexts: Stephen North has designed a service (visit http://www.research.att.com/dist/drawdag/mail server for details) that accepts a graph sent to it by email and returns, also by email, a drawing constructed using dot [4]. This service also maintains a data base consisting of the graphs sent to it by the users <ref> [5] </ref>. We have developed a prototype graph drawing and translation service on the WWW. To the best of our knowledge, there is no other translation service over the WWW, and the closest approximation to a WWW graph drawing service is the email service provided by Stephen North.
Reference: 6. <author> A. Papakostas and I. G. Tollis. </author> <title> Improved algorithms and bounds for orthogonal drawings. </title> <booktitle> Graph Drawing (Proc. GD '94). LNCS, </booktitle> <volume> 894 </volume> <pages> 40-51, </pages> <year> 1995. </year>
Reference-contexts: GIOTTO [9] is a general-purpose drawing algorithm based on the planariza-tion approach and a bend-minimization method [8]. In addition to the original implementation of GIOTTO, we offer a variation of it called GIOTTOwith-labels, which expands the vertices to accommodate labels. PAIRS [2] is our implementation of the algorithm of <ref> [6] </ref>, which uses st-numberings. Planarizer is not actually a drawing algorithm: it is the first step of GIOTTO, which constructs a planar embedding of the input graph by replacing crossings (if any) with dummy vertices.
Reference: 7. <author> S. Singh. </author> <title> Documentation for Paren-to-GDS. </title> <type> Manuscript, </type> <institution> Dept. of Comp. Sci., Brown University, </institution> <year> 1991. </year>
Reference-contexts: Our prototype service currently supports the following input formats: parenthetic, GDS, Tom Sawyer, and MALF, and the following output formats: parenthetic, GDS, postscript, GIF, gnuplot, mif, fig and MALF. The parenthetic format <ref> [7] </ref> consists of nested lists of keyword-value pairs enclosed by parentheses. It is very flexible in the sense that it allows the users to define their own keywords.
Reference: 8. <author> R. Tamassia. </author> <title> On embedding a graph in the grid with the minimum number of bends. </title> <journal> SIAM J. Comput., </journal> <volume> 16(3) </volume> <pages> 421-444, </pages> <year> 1987. </year>
Reference-contexts: Currently we support the following three algorithms: GIOTTO, PAIRS, and Planarizer. GIOTTO [9] is a general-purpose drawing algorithm based on the planariza-tion approach and a bend-minimization method <ref> [8] </ref>. In addition to the original implementation of GIOTTO, we offer a variation of it called GIOTTOwith-labels, which expands the vertices to accommodate labels. PAIRS [2] is our implementation of the algorithm of [6], which uses st-numberings.
Reference: 9. <author> R. Tamassia, G. Di Battista, and C. Batini. </author> <title> Automatic graph drawing and readability of diagrams. </title> <journal> IEEE Trans. Syst. Man Cybern., </journal> <volume> SMC-18(1):61-79, </volume> <year> 1988. </year> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: The parenthetic format [7] consists of nested lists of keyword-value pairs enclosed by parentheses. It is very flexible in the sense that it allows the users to define their own keywords. GDS, Tom Sawyer, and MALF are minor variations of the formats used by GIOTTO <ref> [9] </ref>, the Tom Sawyer Graph Layout Toolkit, and GD-Workbench [1], respectively. Gnuplot, mif and fig are the formats of gnuplot, Frame Maker and xfig, respectively. Graph Drawer. <p> Graph Drawer. The graph drawer accepts as input the name of a graph drawing algorithm and a graph described in the algorithm's input format, and constructs a drawing of the graph using the algorithm. Currently we support the following three algorithms: GIOTTO, PAIRS, and Planarizer. GIOTTO <ref> [9] </ref> is a general-purpose drawing algorithm based on the planariza-tion approach and a bend-minimization method [8]. In addition to the original implementation of GIOTTO, we offer a variation of it called GIOTTOwith-labels, which expands the vertices to accommodate labels.
References-found: 9

