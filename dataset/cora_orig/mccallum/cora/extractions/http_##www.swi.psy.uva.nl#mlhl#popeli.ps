URL: http://www.swi.psy.uva.nl/mlhl/popeli.ps
Refering-URL: http://www.swi.psy.uva.nl/mlhl/programme.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: Email: popel@fi.muni.cz  
Title: T W iM a tutoring system with ILP features  
Author: Lubo Popelnsk 
Address: Botanick 68a, CZ 602 00 Brno Czech Republic  
Affiliation: Department of Computing Science Faculty of Informatics, Masaryk University  
Abstract: A T W iM system for tutoring logic programming is described. T W iM assists students who know basics of Prolog language to learn list processing predicates. It is written in Prolog and employs W iM learner [3, 8]. If a student's answer is incorrect, the student may ask the system for hints. An instance of the intended program that is not covered by the student answer is one of hints. The student may, too, type an example (positive or negative). Afterwards T W iM revises the student's program, employing W iM , and displays a new solution. Next, the student itself has to decide if the new solution is correct. Each hint, depending on its kind, decreases the student's evaluation.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Demlov M., tpnkov O.: </author> <title> Mathematical Curriculum and AI. </title> <booktitle> Proceedings of the SEFI-MWG Conf. "Teaching Mathematics for Industry", Prague 1994, </booktitle> <pages> 53-60 </pages>
Reference-contexts: In contrast to that, students who want (or have to) work with T W iM , described in this paper, need to have elementary knowledge of logic as well as a basic knowledge of Prolog. This requirement is in full compliance with curriculum plans <ref> [1] </ref> in most technically oriented branches of study, too.
Reference: 2. <author> Dominkov P.: </author> <title> Prolog Tutor. </title> <type> Master thesis, </type> <institution> Faculty of Informatics, Masaryk University Brno, </institution> <note> 1995 (in Czech) </note>
Reference-contexts: 1 Tutoring logic programming In the undergraduate course of logic programming at Faculty of Informatics MU, LP T utor <ref> [10, 2] </ref> is used, rather for fun than for another reason. As LP T utor is intended for students with no background of computer science, the prott is really as mentioned.
Reference: 3. <author> Flener P., Popelnsk L. tpnkov O.: </author> <title> ILP and Automatic Programming: Towards three approaches. </title> <booktitle> Proc. of 4th Workshop on Inductive Logic Programming (ILP'94), </booktitle> <address> Bad Hone, Germany, </address> <year> 1994. </year>
Reference-contexts: In the following section we trst briey describe W iM ILP learner. An example session follows in Section 4. In Section 5 a cross-fertilisation of tutoring and ILP is discussed. 3 W iM W iM <ref> [3, 11, 8] </ref>, a program for synthesis of closed Horn clauses from a small example set, further elaborates the approach of M IS [12] and M arkus [5].
Reference: 4. <author> Gouldson D., Reeves S., Bornat R.: </author> <title> A review of Several Programs for the Teaching of Logic. </title> <journal> The Computer Journal, </journal> <volume> Vol. 36, No. </volume> <year> 4,1993. </year>
Reference: 5. <author> Grobelnik M.: </author> <title> Induction of Prolog programs with Markus. </title> <booktitle> In Deville Y.(ed.) Proceedings of LOPSTR'93. Workshops in Computing Series, </booktitle> <pages> pages 57-63,Springer-Verlag, </pages> <year> 1994. </year>
Reference-contexts: In Section 5 a cross-fertilisation of tutoring and ILP is discussed. 3 W iM W iM [3, 11, 8], a program for synthesis of closed Horn clauses from a small example set, further elaborates the approach of M IS [12] and M arkus <ref> [5] </ref>. It works in top-down manner starting from the most general program and specifying it until all positive example and no negative example is covered and uses shifting of bias.
Reference: 6. <author> Horek D.: </author> <title> Intelligent Tutor For Logic. </title> <type> Master thesis, </type> <institution> Faculty of Informatics, Masaryk University Brno, </institution> <note> 1995 (in Czech) </note>
Reference-contexts: T W iM has been testing since beginning this summer semester on 2 groups of students (18 and 14) with a dierent level of skills. 2 Description of T W iM The trst version of T W iM has been described in <ref> [6] </ref>. The current version has better interface to W iM ILP learner so that it can exploit most of W iM capabilities (no doubts about suering from learner drawbacks).
Reference: 7. <author> Muggleton S., De Raedt L.: </author> <title> Inductive Logic Programming: Theory And Methods. </title> <journal> J. Logic Programming 1994:19,20:629-679. </journal>
Reference: 8. <author> Lavra N. et al: </author> <title> ILPNET repositories on WWW: Inductive Logic Programming systems, datasets and bibliography. </title> <journal> AI Communications Vol.9, </journal> <volume> No.4, </volume> <year> 1996, </year> <pages> pp. 157-206 </pages>
Reference-contexts: In the following section we trst briey describe W iM ILP learner. An example session follows in Section 4. In Section 5 a cross-fertilisation of tutoring and ILP is discussed. 3 W iM W iM <ref> [3, 11, 8] </ref>, a program for synthesis of closed Horn clauses from a small example set, further elaborates the approach of M IS [12] and M arkus [5].
Reference: 9. <author> Ling Ch.X.: </author> <title> Logic Program Synthesis from Good Examples. </title> <booktitle> Proceedings of ILP'91 Viana de Castelo 1991 , pp. </booktitle> <pages> 4157. </pages>
Reference-contexts: to answer in this project, are Does a natural example set (from point of view a human/teacher) exist for a given predicate? How does it depend on complexity of the target predicate and on the level of student knowledge (i.e. quality of the oracle)? What variant of basic representative sets <ref> [9] </ref> is a good approximation of a natural example set? It seems that interactive ILP systems should be able to learn a target predicate from the natural example set and learn more eciently than from others.
Reference: 10. <author> Payne J.: </author> <title> The Logic Programming Tutor. </title> <publisher> Kluwer Academic Publishers, University of Oxford 1992. </publisher>
Reference-contexts: 1 Tutoring logic programming In the undergraduate course of logic programming at Faculty of Informatics MU, LP T utor <ref> [10, 2] </ref> is used, rather for fun than for another reason. As LP T utor is intended for students with no background of computer science, the prott is really as mentioned.
Reference: 11. <author> Popelnsk L.: </author> <title> Towards Program Synthesis From A Small Example Set. </title> <booktitle> In: Proceedings of SOFSEM'94. </booktitle>
Reference-contexts: In the following section we trst briey describe W iM ILP learner. An example session follows in Section 4. In Section 5 a cross-fertilisation of tutoring and ILP is discussed. 3 W iM W iM <ref> [3, 11, 8] </ref>, a program for synthesis of closed Horn clauses from a small example set, further elaborates the approach of M IS [12] and M arkus [5].
Reference: 12. <author> Shapiro Y.: </author> <title> Algorithmic Program Debugging. </title> <publisher> MIT Press, </publisher> <year> 1983. </year>
Reference-contexts: An example session follows in Section 4. In Section 5 a cross-fertilisation of tutoring and ILP is discussed. 3 W iM W iM [3, 11, 8], a program for synthesis of closed Horn clauses from a small example set, further elaborates the approach of M IS <ref> [12] </ref> and M arkus [5]. It works in top-down manner starting from the most general program and specifying it until all positive example and no negative example is covered and uses shifting of bias.
References-found: 12

