URL: http://www.cse.ogi.edu/~walpole/papers/mobicom97.ps
Refering-URL: http://www.cse.ogi.edu/~walpole/publications.html
Root-URL: http://www.cse.ogi.edu
Email: jinouye@cse.ogi.edu jrb@cs.pdx.edu walpole@cse.ogi.edu  
Title: Dynamic Network Reconfiguration Support for Mobile Computers  
Author: Jon Inouye Jim Binkley Jonathan Walpole 
Affiliation: Oregon Graduate Institute Portland State University Oregon Graduate Institute Beaverton, Oregon Portland, Oregon Beaverton, Oregon  
Abstract: Hot swapping technology combined with pervasive heterogeneous networks empowers mobile laptop users to select the best network device for their current environment. Unfortunately, the majority of system software remains customizedfor a particular network configuration, and assumes that many characteristics associated with the network environment remain invariant over the runtime of the software. Mobility causes changes in the environment and nullifies many of these assumptions. This leads to severe loss in system functionality when resources are lost, and failure to benefit when resources are gained. This paper describes Physical Media Independence (PMI), an architecture for dynamically diverse network interface management. PMI addresses three issues concerning dynamic network configuration. First, a model for device availability is proposed to accurately determine when a network device is operational. Second, a structured methodology is used to construct adapters that reconfigure the system when the set of available devices change. The methodology breaks traditional layering using a meta-interface to pass events and information among layers, allowing each layer to adapt in a manner best suited to it. Third, we examine the effect of transparent and non-transparent reconfiguration operations on a variety of applications. We find that adaptive, resource intensive applications behave more efficiently when informed of device availability events. We compare the functionality of an adaptive application running on top of a adaptive operating system (OS) with and without cross-layer notifications. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> BAKER, M. G., ZHAO, X., CHESHIRE, S., AND STONE, J. </author> <title> Supporting Mobility in MosquitoNet. </title> <booktitle> In Proceedings of the 1996 USENIX Technical Conference (San Diego, </booktitle> <address> CA, </address> <month> January </month> <year> 1996). </year>
Reference-contexts: So a PPP connection might only be initiated when the last LAN card is removed from a system and an application is attempting to send data without finding an available interface. 8 Related Work Our project goals are very similar to those of Stanford's MosquitoNet <ref> [1] </ref> project and Berkeley's Infopad [20] and Daedalus [14] projects. While these groups have focused more on Mobile IP implementations than dynamic reconfiguration policies, they do address many issues that we ignore, such as assumptions about wireless network characteristics and handoff policies.
Reference: [2] <author> BALAKRISHNAN, H., SESHAN, S., AMIR, E., AND KATZ, R. H. </author> <title> Improving TCP/IP Performance over Wireless Networks. </title> <booktitle> In Proceedings of the First Annual International Conference on Mobile Computing and Networking (Berkeley, </booktitle> <address> Cal-ifornia, </address> <month> November </month> <year> 1995), </year> <pages> pp. 2-11. </pages>
Reference-contexts: While these groups have focused more on Mobile IP implementations than dynamic reconfiguration policies, they do address many issues that we ignore, such as assumptions about wireless network characteristics and handoff policies. Daedalus has developed a snoop protocol that provides significantly better TCP performance over lossy wireless networks <ref> [2] </ref>. Stemm's thesis mentions ongoing work toward policies for supporting vertical handoffs that determine when to pass an IP address from one type of interface to another [26]. Multiple interfaces are not available at any point in time, just the best interface which is selected according to a specified policy.
Reference: [3] <author> C ACERES, R., AND IFTODE, L. </author> <title> Improving the Performance of Reliable Transport Protocols in Mobile Computing Environments. </title> <journal> IEEE Journal of Selected Areas in Communications 13, </journal> <month> 5 (June </month> <year> 1995), </year> <pages> 850-857. </pages>
Reference-contexts: We intend to reset local retransmission timers that have begun exponential backoff because of disconnection and use Caceres and Iftode's triple ack hack <ref> [3] </ref> where multiple acknowl-edgements are sent to the correspondent host to encourage the remote TCP state machine to enter fast retransmit and recovery mode. We allow application-level adaptation through the use of a pseudo-device driver.
Reference: [4] <author> CEN, S., PU, C., STAEHLI, R., COWAN, C., AND WALPOLE, J. </author> <title> A Distributed Real-Time MPEG Video Audio Player. </title> <booktitle> In Proceedings of the Fifth International Workshop on Network and Operating System Support of Digital Audio and Video (NOSSDAV '95) (Durham, </booktitle> <address> New Hampshire, </address> <month> April </month> <year> 1995), </year> <pages> pp. 151-162. </pages>
Reference-contexts: None of the choices is optimal for all cases, and the correct decision probably requires user input about the characteristics (ttl, bandwidth, security, etc.) of the stream. 6.4 Streaming UDP For unicast UDP we selected vcr, a real-time distributed MPEG video player <ref> [4] </ref> that we adapted to use our notification mechanism [11]. This video client resides on MH while the video server runs on a workstation attached to the Ethernet network. <p> We use the term microlanguages [24] to describe domain-specific languages (DSL) focused on describing application assumptions in a manner meaningful to the application, but also transformable to a DSL more meaningful to a lower layer. For example, vcr uses software feedback <ref> [4] </ref> to monitor the bandwidth between itself and the video server. While the device layer has no understanding of path characteristics, it does understand link-layer characteristics.
Reference: [5] <author> CHESHIRE, S., AND BAKER, M. G. </author> <title> Internet Mobility 4x4. </title> <booktitle> In Proceedings of the ACM SIGCOMM'96 Conference (Stanford University, </booktitle> <address> CA, </address> <month> August </month> <year> 1996), </year> <pages> pp. 318-329. </pages>
Reference-contexts: For example, the loss of an interface might migrate the IP address to another available interface, using the available interface's IP address as a co-located care-of-address. This raises some interesting routing policy issues as described by Cheshire <ref> [5] </ref>. Normal routing policies using met-rics related to hop counts may be inappropriate for selecting network routes where path connectivity, cost, and power management are important concerns. One of MosquitoNet's goals is to allow applications to specify their requirements and let the routing policy select the most appropriate delivery mechanism.
Reference: [6] <author> COSTALES, B., AND ALLMAN, E. sendmail, </author> <title> second ed. </title> <publisher> O'Reilly and Associates, </publisher> <year> 1997. </year>
Reference-contexts: Another useful aspect of dynamic reconfiguration not demonstrated by our set of applications is the ability to hibernate a network-dependent application during periods of disconnection. For example, rather than polling the mail queue every 30 minutes while disconnected, sendmail <ref> [6] </ref> might register interest in being notified when the set of available devices becomes empty. On receiving the notification sendmail ceases polling and registers an interest in being notified when the set becomes non-empty. After receiving this notification, sendmail checks the queue and delivers any outstanding mail messages.
Reference: [7] <author> DEERING, S. </author> <title> Host extensions for IP multicasting. Network Working Group Request for Comments: </title> <type> 1112, </type> <month> August </month> <year> 1989. </year>
Reference-contexts: it increases the latency in propagating notifications. 3.1 Network-Layer Adaptation The IP network layer creates two forms of bindings to interfaces: multicast groups and route table entries. 4 IP multicast groups are bound to interfaces, allowing interfaces to participate in group management (IGMP) communication between host interfaces and mul-ticast routers <ref> [7] </ref>. If an interface is removed, the system must decide what to do with the groups attached to that interface.
Reference: [8] <author> DEERING, S. </author> <title> ICMP Router Discovery Messages. Network Working Group Request for Comments: </title> <type> 1256, </type> <month> Septem-ber </month> <year> 1991. </year>
Reference-contexts: Those that do have no standard programming interface to communicate this information to higher layers and usually end up logging warnings to the system console. Guarding NetNamed. Network names are invalidated when migrating to a new network. There are many mechanisms for discovering this including receiving ICMP router advertisements <ref> [8] </ref>, Mobile IP beacons [22], querying DHCP [9] servers, or receiving user input. These guards will most likely live within network-layer entities and must propagate their events down to the device manager.
Reference: [9] <author> DROMS, R. </author> <title> Dynamic Host Configuration Protocol. Network Working Group Request for Comments: </title> <type> 2131, </type> <month> April </month> <year> 1997. </year> <month> 9 </month>
Reference-contexts: Guarding NetNamed. Network names are invalidated when migrating to a new network. There are many mechanisms for discovering this including receiving ICMP router advertisements [8], Mobile IP beacons [22], querying DHCP <ref> [9] </ref> servers, or receiving user input. These guards will most likely live within network-layer entities and must propagate their events down to the device manager. From an opposite viewpoint, the device manager must be able to upcall network-layer entities to acquire a network name. Guarding Powered.
Reference: [10] <author> HALFHILL, T. R. </author> <title> Transforming the PC: Plug and Play. </title> <journal> Byte (September 1994), </journal> <pages> 78-94. </pages>
Reference-contexts: In this section, we focus on the mechanisms needed to monitor our device characteristics. Guarding Present. We depend on the existence of hot swapping support within the operating system, such as Windows Plug-and-Play <ref> [10] </ref>, or hardware interfaces, such as those provided provided by PCMCIA [18]. Guarding Connected. The most logical place to guard this property is the device driver. More advanced driver interfaces are beginning to support this type of functionality.
Reference: [11] <author> INOUYE, J., CEN, S., PU, C., AND WALPOLE, J. </author> <title> System Support for Mobile Multimedia Applications. </title> <booktitle> In Proceedings of the 7th International Workshop on Network and Operating Systems Support for Digital Audio and Video (NOSSDAV 97) (St. </booktitle> <address> Louis, Missouri, </address> <month> May </month> <year> 1997), </year> <pages> pp. 143-154. </pages>
Reference-contexts: of the choices is optimal for all cases, and the correct decision probably requires user input about the characteristics (ttl, bandwidth, security, etc.) of the stream. 6.4 Streaming UDP For unicast UDP we selected vcr, a real-time distributed MPEG video player [4] that we adapted to use our notification mechanism <ref> [11] </ref>. This video client resides on MH while the video server runs on a workstation attached to the Ethernet network.
Reference: [12] <author> INTEL CORPORATION. </author> <title> Advanced Power Management (APM) BIOS Interface Specification, </title> <editor> 1.2 ed., </editor> <month> February </month> <year> 1996. </year> <note> Available at URL http://www.intel.com/IAL/powermgm/. </note>
Reference-contexts: Guarding Powered. Power is becoming an increasingly important resource. We assume the existence of some form of power management module that is responsible for allocating and deallocating power resources in a system. While APM <ref> [12] </ref> provides a few basic mechanisms for power management, it does not provide any power management policies or ability to monitor the power usage of network devices. <p> The disadvantages of choosing FreeBSD are the alpha nature of the PC card and APM <ref> [12] </ref> support. The FreeBSD network code is derived from 4.4BSD [17] and is documented thoroughly in [31]. mostly outside the kernel.
Reference: [13] <author> JOSEPH, A. D., DELESPINASSE, A. F., TAUBER, J. A., GIF-FORD, D. K., AND KAASHOEK, M. F. </author> <title> Rover: A Toolkit for Mobile Information Access. </title> <booktitle> In Proceedings of the Fifteenth ACM Symposium on Operating System Principles (Copper Mountain Resort, </booktitle> <address> Colorado, </address> <month> December </month> <year> 1995), </year> <pages> pp. 156-171. </pages>
Reference-contexts: Rather than depend on mobility support within the operating system, these applications are designed to work in environments with intermittent connectivity or low bandwidth. POP mailers 8 enable users to retrieve mail during periods of connectivity and read mail after disconnection. Application-level toolkits such as Rover <ref> [13] </ref> and Wit [29] allow existing applications to be re-engineered for mobility. We believe adaptive applications will perform more efficiently if they cooperate with the operating system. This was reinforced by our experiences developing vcr. CMU's Odyssey architecture also supports application-aware applications [25].
Reference: [14] <author> KATZ, R. </author> <title> Adaptation and Mobility in Wireless Information Systems. </title> <journal> IEEE Personal Communications Magazine 1, </journal> <volume> 1 (1995), </volume> <pages> 6-17. </pages>
Reference-contexts: connection might only be initiated when the last LAN card is removed from a system and an application is attempting to send data without finding an available interface. 8 Related Work Our project goals are very similar to those of Stanford's MosquitoNet [1] project and Berkeley's Infopad [20] and Daedalus <ref> [14] </ref> projects. While these groups have focused more on Mobile IP implementations than dynamic reconfiguration policies, they do address many issues that we ignore, such as assumptions about wireless network characteristics and handoff policies.
Reference: [15] <author> MCCANNE, S., AND JACOBSON, V. </author> <title> The BSD Packet Filter: </title>
Reference-contexts: If no valid reply is received from the multicast request, pulse 4 model cdpd device `tun0' label `AT&T CDPD' data 1024 5 model airfone device `tun0' label `GTE Airfone' circuit connection 627 60 328 connection limit 1500 enters the disconnect and uses the Berkeley Packet Filter (BPF) <ref> [15] </ref> to promiscuously listen for all ICMP echo replies. This allows the implementation to distinguish between link-level disconnections (no response at all) and network migrations (responses with incorrect destination link layer addresses). Bad packets refer to packets with incorrect destination link-level addresses.
References-found: 15

