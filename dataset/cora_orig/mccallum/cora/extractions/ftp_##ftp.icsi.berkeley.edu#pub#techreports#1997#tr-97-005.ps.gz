URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1997/tr-97-005.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1997.html
Root-URL: http://www.icsi.berkeley.edu
Title: Mapping Conceptual Geographic Models onto DBMS Data Models  
Author: Agnes Voisard Beno^t David 
Address: I 1947 Center St. Suite 600 Berkeley, California 94704-1198  2 Avenue Pasteur, BP 68, F-94160 Saint-Mande, France  
Affiliation: INTERNATIONAL COMPUTER SCIENCE INSTITUTE  Institut Geographique National,  
Pubnum: TR-97-005  
Email: Benoit.David@ign.fr  
Phone: (510) 643-9153 FAX (510) 643-7684  
Date: March 1997  
Abstract: We study the representation and manipulation of geographic information in a database management system (DBMS). The conceptual geographic model that we use as a basis hinges on a complex object model, whose set and tuple constructors make it efficient for defining not only collections of geographic objects but also relationships between them. In addition, it allows easy manipulation of non-basic types such as spatial data types. We investigate the mapping of our reference model onto major commercial DBMS models, namely a relational model extended to abstract data types (ADT) and an object-oriented model. Our analysis shows the strengths and limits of the two model types for handling highly structured data with spatial components. fl Institut fur Informatik, Freie Universitat Berlin, D-14195 Berlin, Germany, voisard@inf.fu-berlin.de
Abstract-found: 1
Intro-found: 1
Reference: [AB86] <author> S. Abiteboul and N. Bidoit. </author> <title> Non First Normal Form Relations: An Algebra Allowing Data Restructuring. </title> <journal> Journal of Computer and System Sciences, </journal> <year> 1986. </year> <title> Extended abstract in Proc. </title> <booktitle> ACM SIGACT-SIGMOD Symp. on Principles of Database Systems, </booktitle> <year> 1984. </year>
Reference-contexts: Complex objects are obtained from atomic objects using the set and tuple constructors. These can be applied arbitrarily deep, contrary to the relational model, where each of them is used only once, or even to non-first normal form models such as Verso <ref> [Ver86, AB86] </ref>, NF2 [JS82], where they have to be alternated.
Reference: [AB95] <author> S. Abiteboul and C. Beeri. </author> <title> On the power of languages for the manipulation of complex objects. </title> <journal> The VLDB Journal, </journal> <volume> 4(4) </volume> <pages> 727-794, </pages> <year> 1995. </year>
Reference-contexts: Many existing conceptual models, such as the entity-relationship model [Che76, Mar88], its recent extensions [EN89], or IFO [AH87], could serve as a basis to express a geographic model. In this paper we take as an underlying model the complex object model of <ref> [AB95] </ref>. This model offers all the features required for geographic information handling, both at the representation level (powerful information structuring) and at the manipulation level (existence of an algebra and of high level operators). <p> A complex object model such as <ref> [AB95] </ref> is well-suited for this problem. Complex objects are obtained from atomic objects using the set and tuple constructors. <p> Our approach consisted in studying the mapping of a general geographic model onto DBMS data models. We first presented our reference model, i.e., a way of representing geographic objects, their spatial part (spatial ADT), and of manipulating them through general map operations. As an underlying database model, we chose <ref> [AB95] </ref> because of its power for representing and manipulating complex (geographic) objects.
Reference: [AH87] <author> S. Abiteboul and R. Hull. </author> <title> IFO: A formal semantic database model. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 12(4) </volume> <pages> 525-565, </pages> <month> December </month> <year> 1987. </year>
Reference-contexts: Many existing conceptual models, such as the entity-relationship model [Che76, Mar88], its recent extensions [EN89], or IFO <ref> [AH87] </ref>, could serve as a basis to express a geographic model. In this paper we take as an underlying model the complex object model of [AB95].
Reference: [BBKV87] <author> F. Bancilhon, T. Briggs, S. Khoshafian, and P. Valduriez. </author> <title> FAD, a Powerful and Simple Database Language. </title> <booktitle> In Proc. Conf. on Very Large Data Bases (VLDB), </booktitle> <address> Brighton, </address> <year> 1987. </year> <month> 28 </month>
Reference-contexts: The complex object model we use is of great interest in this context although it does not consider object identity like other complex object models do (e.g., FAD <ref> [BBKV87] </ref> and all the true object-oriented models). Nevertheless, we believe that this concept is not essential for what we want to show, namely simple geographic data modeling (i.e., data structuring and querying, and no update). <p> Hence, when using this simple although powerful underlying model, operations must be described case by case, as we did above. We could have chosen other attractive base models in the domain of complex objects, as for instance FAD <ref> [BBKV87] </ref>. In this approach, the user is provided with the possibility of defining the abstraction of functions and predicates, which allows to express anonymous functions (denoted by fun x y ....), which can be used in turn as argument to other functions.
Reference: [BDK91] <editor> F. Bancilhon, C. Delobel, and P. Kanellakis, editors. </editor> <title> Building an Object--Oriented Database System: </title> <publisher> The Story of O 2 . Morgan Kaufmann, </publisher> <address> San Mateo, California, </address> <year> 1991. </year>
Reference-contexts: It is necessary to define "a set of spatial ADT" either as a class or as a value in a OODBMS that makes a difference between object and value (such as O 2 <ref> [BDK91] </ref>). Let us take as an example the case of O 2 , which has a clean data model and which was used as a basis for several other proposals [SV92, GS93a, DRSM93].
Reference: [Che76] <author> P. P. Chen. </author> <title> The entity relationship model toward an unified view of data. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 1(1):9, </volume> <month> March </month> <year> 1976. </year> <note> Reprinted in M. </note> <author> Stonebraker, </author> <title> Readings in Database Sys., </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1988. </year>
Reference-contexts: Following our operator classification, we discuss their advantages and drawbacks while implementing a geographic model with full functionalities. 2 A Conceptual Geographic Model The goal of this section is to present a conceptual geographic model independent of any database representation. Many existing conceptual models, such as the entity-relationship model <ref> [Che76, Mar88] </ref>, its recent extensions [EN89], or IFO [AH87], could serve as a basis to express a geographic model. In this paper we take as an underlying model the complex object model of [AB95].
Reference: [Cou92] <author> H. Couclelis. </author> <title> People Manipulate Objects (but Cultivate Fields): Beyond the Raster-Vector Debate in GIS. </title> <booktitle> Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, 639, </address> <year> 1992. </year>
Reference-contexts: Nevertheless, we believe that this concept is not essential for what we want to show, namely simple geographic data modeling (i.e., data structuring and querying, and no update). In GIS, it is common to make the distinction between space-based (or field-based) and feature-based (or entity-based) models <ref> [Cou92] </ref>. In the first case, the entities of interest are regions within the space; attributes (such as temperature or elevation) are associated with them. In the latter case, the primary objects are geographic entities with which is associated a spatial attribute.
Reference: [CW85] <author> L. Cardelli and P. Wegner. </author> <title> On Understanding Types, Data Abstractions and Polymorphism. </title> <journal> ACM Computing Survey, </journal> <volume> 17(4) </volume> <pages> 471-522, </pages> <year> 1985. </year>
Reference-contexts: At implementation time, one can define spatial indexes on spatial ADTs. In this paper, we do not elaborate on the notion of ADT in general. For more information on this topic see <ref> [CW85, LZ74, SRG83, Sto86] </ref>. A spatial object is an instance of a spatial type. It can have 0 (point), 1 (line) or 2 (zone) dimensions. In [DV93], we compared different definitions of spatial ADT and proposed one based on spatial values (heterogeneous geometric figure).
Reference: [Dav91] <author> B. David. </author> <title> Modeling, Representing and Managing Geographic Information: An Extended Relational Approach. </title> <type> Ph.D. thesis, </type> <institution> University of Paris VI, </institution> <year> 1991. </year> <note> In French. </note>
Reference-contexts: A higher level, the map level, is constituted of geographic objects, and a lower level, the geometric level, corresponds to the spatial components of geographic objects. General operations on maps (e.g., map overlay) use low level operations on the geometry (e.g., intersection). In recent approaches <ref> [Gut88b, SV89, GN90, GNT91, Dav91, GS93a] </ref>, the geometric level corresponds to the definition of spatial abstract data types (ADTs). Some of this work [Gut88b, Dav91] is based on the relational model extended to abstract data types. <p> General operations on maps (e.g., map overlay) use low level operations on the geometry (e.g., intersection). In recent approaches [Gut88b, SV89, GN90, GNT91, Dav91, GS93a], the geometric level corresponds to the definition of spatial abstract data types (ADTs). Some of this work <ref> [Gut88b, Dav91] </ref> is based on the relational model extended to abstract data types. It suffers from several drawbacks, including poorness of data structures, embedding of geometric operations in high level operations, and lack of flexibility.
Reference: [DRSM93] <author> B. David, L. Raynal, G. Schorter, and V. Mansart. GeO2: </author> <title> Why Objects in a Geographical DBMS? In D. Abel and B.C. Ooi, </title> <editor> editors, </editor> <booktitle> Advances in Spatial Databases (SSD'93), </booktitle> <pages> pages 264-276. </pages> <booktitle> Lecture Notes in Computer Science No. </booktitle> <volume> 692, </volume> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1993. </year>
Reference-contexts: Let us take as an example the case of O 2 , which has a clean data model and which was used as a basis for several other proposals <ref> [SV92, GS93a, DRSM93] </ref>.
Reference: [DV93] <author> B. David and A. Voisard. </author> <title> A Unified Approach to Geographic Data Modeling. </title> <type> Technical Report 9316, </type> <institution> University of Munich (LMU), </institution> <year> 1993. </year> <note> available at http://www.inf.fu-berlin.de/ voisard/pub.html. </note>
Reference-contexts: In this paper, we do not elaborate on the notion of ADT in general. For more information on this topic see [CW85, LZ74, SRG83, Sto86]. A spatial object is an instance of a spatial type. It can have 0 (point), 1 (line) or 2 (zone) dimensions. In <ref> [DV93] </ref>, we compared different definitions of spatial ADT and proposed one based on spatial values (heterogeneous geometric figure). Common geometric operations (union and intersection) and topological operations (interior and closure) can be applied on this type. We assume that the Spatial type above follows the same definition. <p> In <ref> [DV93] </ref>, this approach was chosen and two cases of intersection were defined, a geographic intersection that preserved dimensions and a regular geometric intersection.
Reference: [EF89] <author> M. Egenhofer and A. Frank. </author> <title> Object-Oriented Modeling in GIS: Inheritance and Propagation. </title> <booktitle> In Proc. </booktitle> <volume> Auto-Carto 9, </volume> <pages> pages 588-598, </pages> <year> 1989. </year>
Reference-contexts: The representation of geographic objects above permits to associate a geometry with only atomic objects. One then avoids duplicating the geometry of (complex) objects which can be inferred using the propagation mechanism <ref> [EF89] </ref> from the geometry of objects that compose them (possible recursion). Other attributes such as population may be propagated within such nested maps using the same mechanism. In the state-counties partition, the geometry and the population only appear at the lowest level, i.e., at the county level.
Reference: [EF91] <author> M. J. Egenhofer and R. D. Franzosa. </author> <title> Point-set Topological Spatial Relations. </title> <journal> International Journal of Geographical Information Systems, </journal> <volume> 5(2) </volume> <pages> 161-174, </pages> <year> 1991. </year>
Reference-contexts: Common geometric operations (union and intersection) and topological operations (interior and closure) can be applied on this type. We assume that the Spatial type above follows the same definition. Of course, this is only a possible spatial model. Other spatial models such as raster or topological <ref> [EFJ90, EF91] </ref> are also widely used. 2.3.1 Defining spatial types Defining spatial types means defining both their structures and the operations applicable to them. Nevertheless, it is a challenging task as it must meet at least the following criteria: 1. Visibility of the internal structure of ADT and encapsulation.
Reference: [EF92] <author> M. Egenhofer and A. Frank. </author> <title> Object-Oriented Modeling for GIS. </title> <journal> Journal of the Urban and Regional Information Systems Association, </journal> <volume> 4(2), </volume> <year> 1992. </year>
Reference-contexts: In the GIS community, some experiments were made to implement a GIS, or part of, on top of OODBMS such as O 2 [SV92], or ObjectStore [GR93]. Embedding typical GIS features within a so-called object-oriented GIS was studied as well <ref> [EF92] </ref>. For more information regarding the use of object-oriented system to handle geographic data, see [EF92, GL93, Wor94]. 3.4.1 Defining spatial ADTs and operator classes Operations of both Class I and Class III can be expressed using the general programming language of an OODBMS. <p> Embedding typical GIS features within a so-called object-oriented GIS was studied as well [EF92]. For more information regarding the use of object-oriented system to handle geographic data, see <ref> [EF92, GL93, Wor94] </ref>. 3.4.1 Defining spatial ADTs and operator classes Operations of both Class I and Class III can be expressed using the general programming language of an OODBMS.
Reference: [EFJ90] <author> M. J. Egenhofer, A. U. Frank, and J. P. Jackson. </author> <title> A topological data model for spatial databases. </title> <editor> In A. Buchmann, O. Gunther, T. R. Smith, and Y.-F. Wang, editors, </editor> <booktitle> Proceedings of the 1st Symposium SSD on Design and Implementation of Large Spatial Databases, volume 409 of LNCS, </booktitle> <pages> pages 271-286, </pages> <address> Berlin, </address> <year> 1990. </year>
Reference-contexts: Common geometric operations (union and intersection) and topological operations (interior and closure) can be applied on this type. We assume that the Spatial type above follows the same definition. Of course, this is only a possible spatial model. Other spatial models such as raster or topological <ref> [EFJ90, EF91] </ref> are also widely used. 2.3.1 Defining spatial types Defining spatial types means defining both their structures and the operations applicable to them. Nevertheless, it is a challenging task as it must meet at least the following criteria: 1. Visibility of the internal structure of ADT and encapsulation.
Reference: [EN89] <author> R. Elmasri and S. Navathe. </author> <title> Fundamentals of Database Systems. </title> <address> Ben-jamins/Cummings, Redwood City, </address> <year> 1989. </year>
Reference-contexts: Many existing conceptual models, such as the entity-relationship model [Che76, Mar88], its recent extensions <ref> [EN89] </ref>, or IFO [AH87], could serve as a basis to express a geographic model. In this paper we take as an underlying model the complex object model of [AB95].
Reference: [ESR89] <author> Inc. </author> <title> ESRI. ARC/INFO Network User's Guide, </title> <year> 1989. </year>
Reference-contexts: Therefore one must be able to specify such an input, which is feasible in our model by applying composition of functions. As another example, take the allocate function, which is a common function on networks in 13 GIS (see for instance <ref> [ESR89] </ref>). The allocate function takes a network consisting of edges and nodes and a set of centers as arguments. Its purpose is to allocate each edge and node of the network to a center by considering a resource demand.
Reference: [GCK + 89] <author> G. Gardarin, J.P. Cheiney, G. Kiernan, D. Pastre, and H. Stora. </author> <title> Managing Complex Objects in an Extensible Relational DBMS. </title> <booktitle> In Proc. Conf. on Very Large Data Bases (VLDB), </booktitle> <year> 1989. </year> <month> 29 </month>
Reference-contexts: Such a mapping is realized both ways in the interface between the two modules. 3.3 Relational DBMS extended to ADTs There have been several proposals to extend the original relational model with abstract data types <ref> [SRG83, SR86, Sto86, GCK + 89] </ref>. This facility has often been used to add a spatial data type within a relational DBMS. ADT enable user-defined operations from Class I, but only from the first subclass "ADT x ADT and ADT" (Class I.a). <p> The two last subclasses of operations (i.e., classes I.c and I.d) cannot be expressed either in query languages such as SQL. Most of the Class II algebraic operators are part of the relational algebra. In an 20 extended-relational system such as Sabrina-Objet <ref> [GCK + 89] </ref>, it is possible to use any func-tion or predicate in the operators. Some operators such as nest or unnest do not fit into the relational context, and we will see below that a query such as Query 4 cannot be expressed. <p> This drawback of the relational approach is particularly regrettable since many geographic operators such as shortest path have to be expressed as specific operators. GeoSabrina [LPV93] is built on top of an extended relational system <ref> [GCK + 89] </ref>. In this system, Class I.a operations are defined as (regular) ADT functions, Class I.b operations are considered as aggregate functions, and operations of Class I.c, Class I.d, and Class III cannot be implemented.
Reference: [GL93] <author> O. Gunther and J. Lamberts. </author> <title> Object-Oriented Techniques for the Management of Geographical and Environmental Data. </title> <journal> The Computer Journal, </journal> <volume> 37(1) </volume> <pages> 16-25,, </pages> <year> 1993. </year>
Reference-contexts: Embedding typical GIS features within a so-called object-oriented GIS was studied as well [EF92]. For more information regarding the use of object-oriented system to handle geographic data, see <ref> [EF92, GL93, Wor94] </ref>. 3.4.1 Defining spatial ADTs and operator classes Operations of both Class I and Class III can be expressed using the general programming language of an OODBMS.
Reference: [GN90] <author> M. Gargano and E. Nardelli. </author> <title> A Logical Data Model for Integrated Geographical Databases. </title> <editor> In Raymond T. Ng, Peter A.; Ramamoorthy, C.V.; Seifert, Laurence C.; Yeh, editor, </editor> <booktitle> Proceedings of the First International Conference on Systems Integration, </booktitle> <pages> pages 473-481, </pages> <address> Morristown, NJ, April 1990. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: A higher level, the map level, is constituted of geographic objects, and a lower level, the geometric level, corresponds to the spatial components of geographic objects. General operations on maps (e.g., map overlay) use low level operations on the geometry (e.g., intersection). In recent approaches <ref> [Gut88b, SV89, GN90, GNT91, Dav91, GS93a] </ref>, the geometric level corresponds to the definition of spatial abstract data types (ADTs). Some of this work [Gut88b, Dav91] is based on the relational model extended to abstract data types.
Reference: [GNT91] <author> M. Gargano, E. Nardelli, and M. Talamo. </author> <title> Abstract Data Types for the Logical Modeling of Complex Data. </title> <journal> Information Systems, </journal> <volume> 16(5), </volume> <year> 1991. </year>
Reference-contexts: Project on MainSpokenLanguage and Geometry and nest on Geometry: States'': f County':[MainSpokenLanguage, G:fGeometryg]g 3. Apply union-set to set G (G' union-set (G)): States'': f County'':[MainSpokenLanguage, G']g. In <ref> [SV89, GNT91, GS93a] </ref>, a somehow comparable operation called fusion is proposed. Its semantics are slightly different since the union of the geometry of geographic objects is applied if they have the same value for a given attribute. <p> A higher level, the map level, is constituted of geographic objects, and a lower level, the geometric level, corresponds to the spatial components of geographic objects. General operations on maps (e.g., map overlay) use low level operations on the geometry (e.g., intersection). In recent approaches <ref> [Gut88b, SV89, GN90, GNT91, Dav91, GS93a] </ref>, the geometric level corresponds to the definition of spatial abstract data types (ADTs). Some of this work [Gut88b, Dav91] is based on the relational model extended to abstract data types.
Reference: [GR93] <author> O. Gunther and W.-F. Riekert. </author> <title> The Design of GODOT: An Object-Oriented Geographic Information System. </title> <journal> IEEE Data Eng. Bull., </journal> <volume> 16(3):4, </volume> <month> September </month> <year> 1993. </year>
Reference-contexts: In the GIS community, some experiments were made to implement a GIS, or part of, on top of OODBMS such as O 2 [SV92], or ObjectStore <ref> [GR93] </ref>. Embedding typical GIS features within a so-called object-oriented GIS was studied as well [EF92].
Reference: [GS93a] <author> R.H. Guting and M. Schneider. </author> <title> Realm-Based Spatial Data Types: The ROSE Algebra. </title> <type> Technical Report 141, </type> <institution> Fern Universitat, Hagen, Germany, </institution> <year> 1993. </year>
Reference-contexts: Some of them can be found in <ref> [SV89, GS93a] </ref>. The corresponding figures are placed at the end of this paper. For each operation we give its signature, in which map is the type thematic-map described in Section 2.2 and Ai a collection of alphanumeric attributes. <p> Project on MainSpokenLanguage and Geometry and nest on Geometry: States'': f County':[MainSpokenLanguage, G:fGeometryg]g 3. Apply union-set to set G (G' union-set (G)): States'': f County'':[MainSpokenLanguage, G']g. In <ref> [SV89, GNT91, GS93a] </ref>, a somehow comparable operation called fusion is proposed. Its semantics are slightly different since the union of the geometry of geographic objects is applied if they have the same value for a given attribute. <p> Hence we see a need to combine general operators and user-defined functions. As far as previous approaches are concerned, note that the operations above were not all treated in [SV89] as it was not the focus of this approach. In <ref> [GS93a] </ref>, only a particular case of the merger operation, the fusion, is considered, and queries 1 and 4 are treated using specific operators introduced for this particular purpose. 3 Implementing Conceptual Geographic Models in a DBMS We now address the problem of defining a logical model that corresponds to the conceptual <p> Then, merging Class III and Class II leads to a DBMS too specific. In the same way, it is now well known <ref> [SV92, GS93a] </ref> that Class I has to be independent from Class II for efficiency. It could be implemented by a specific geometric library. One crucial problem is the communication between these modules, i.e. the combination of the three categories of operators. In a consistent framework all operators can be combined. <p> Let us take as an example the case of O 2 , which has a clean data model and which was used as a basis for several other proposals <ref> [SV92, GS93a, DRSM93] </ref>. <p> A higher level, the map level, is constituted of geographic objects, and a lower level, the geometric level, corresponds to the spatial components of geographic objects. General operations on maps (e.g., map overlay) use low level operations on the geometry (e.g., intersection). In recent approaches <ref> [Gut88b, SV89, GN90, GNT91, Dav91, GS93a] </ref>, the geometric level corresponds to the definition of spatial abstract data types (ADTs). Some of this work [Gut88b, Dav91] is based on the relational model extended to abstract data types.
Reference: [GS93b] <author> R.H. Guting and M. Schneider. Realms: </author> <title> A Foundation for Spatial Data Types in Database Systems. </title> <editor> In D. Abel and B.C. Ooi, editors, </editor> <booktitle> Advances in Spatial Databases (SSD'93). Lecture Notes in Computer Science No. </booktitle> <volume> 692, </volume> <publisher> Springer Ver-lag, </publisher> <address> Berlin, </address> <year> 1993. </year>
Reference-contexts: In the latter case, the primary objects are geographic entities with which is associated a spatial attribute. Recent work has been done to integrate both approaches, as for instance in <ref> [GS93b, HT96] </ref>. These approaches are based on a mapping of conceptual geographic models onto geometric layers. The model proposed in this paper belongs to the latter category, hence we focus on "conceptual" geographic entities. This section starts with a description of our base complex object model.
Reference: [GS95] <author> R.H. Guting and M. Schneider. </author> <title> Implementation of the ROSE Algebra: Efficient Algorithms for Realm-Based Spatial Data Types. </title> <editor> In M. Egenhofer and J. Herrings, editors, </editor> <booktitle> Advances in Spatial Databases (SSD'95). Lecture Notes in Computer Science No. </booktitle> <volume> 951, </volume> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1995. </year>
Reference-contexts: Examples include the computation of the center of a set of points, the Voronoi diagram, or the shortest distance between spatial objects. For more information about spatial operations the reader is referred to [Peu84, KW87, Gut88b, LT92], and for a description of geometric algorithms to <ref> [PS85, GS95] </ref>. 2.4 Examples of enduser operations We now give several examples of simple operations that an enduser is likely to apply to maps. Some of them can be found in [SV89, GS93a]. The corresponding figures are placed at the end of this paper.
Reference: [Gut88a] <author> R. H. Guting. </author> <title> Modeling Non-Standard Database Systems by Many-Sorted Algebras. </title> <type> Technical Report 255, </type> <institution> Universitat Dortmund, Germany, </institution> <year> 1988. </year>
Reference-contexts: In <ref> [Gut88a] </ref>, operators 17 are divided into six major groups. The classification criterion is different from ours as it corresponds to their type of output in a relational environment. Our approach is orthogonal to the one of [Gut88a] and is oriented towards the study of geographic DBMS extensibility. <p> In <ref> [Gut88a] </ref>, operators 17 are divided into six major groups. The classification criterion is different from ours as it corresponds to their type of output in a relational environment. Our approach is orthogonal to the one of [Gut88a] and is oriented towards the study of geographic DBMS extensibility. More precisely, our three classes are the following: 1. Class I: User-defined functions . We take as examples operators on spatial ADT, but this class applies to any (nonstandard) data type.
Reference: [Gut88b] <author> R.H. Guting. </author> <title> Geo-Relational Algebra : A Model and Query Language for Geometric Database Systems. </title> <booktitle> In Conf. on Extending Database Technology (EDBT '88), </booktitle> <pages> pages 506-527, </pages> <year> 1988. </year>
Reference-contexts: Examples include the computation of the center of a set of points, the Voronoi diagram, or the shortest distance between spatial objects. For more information about spatial operations the reader is referred to <ref> [Peu84, KW87, Gut88b, LT92] </ref>, and for a description of geometric algorithms to [PS85, GS95]. 2.4 Examples of enduser operations We now give several examples of simple operations that an enduser is likely to apply to maps. Some of them can be found in [SV89, GS93a]. <p> A higher level, the map level, is constituted of geographic objects, and a lower level, the geometric level, corresponds to the spatial components of geographic objects. General operations on maps (e.g., map overlay) use low level operations on the geometry (e.g., intersection). In recent approaches <ref> [Gut88b, SV89, GN90, GNT91, Dav91, GS93a] </ref>, the geometric level corresponds to the definition of spatial abstract data types (ADTs). Some of this work [Gut88b, Dav91] is based on the relational model extended to abstract data types. <p> General operations on maps (e.g., map overlay) use low level operations on the geometry (e.g., intersection). In recent approaches [Gut88b, SV89, GN90, GNT91, Dav91, GS93a], the geometric level corresponds to the definition of spatial abstract data types (ADTs). Some of this work <ref> [Gut88b, Dav91] </ref> is based on the relational model extended to abstract data types. It suffers from several drawbacks, including poorness of data structures, embedding of geometric operations in high level operations, and lack of flexibility.
Reference: [Gut89] <author> R.H. Guting. </author> <title> Gral: An Extensible Relational Database System for Geometric Applications. </title> <booktitle> In Proc. Conf. on Very Large Data Bases (VLDB), </booktitle> <year> 1989. </year>
Reference-contexts: GeoSabrina [LPV93] is built on top of an extended relational system [GCK + 89]. In this system, Class I.a operations are defined as (regular) ADT functions, Class I.b operations are considered as aggregate functions, and operations of Class I.c, Class I.d, and Class III cannot be implemented. Gral <ref> [Gut89] </ref> is based on an extended-relational approach that allows the designer to add new executable operators. <p> As far as calls to specific operators (Query 2) are concerned, SQL alone is not sufficient. However, a query of that type can be expressed in an algebraic language (e.g., in Gral <ref> [Gut89] </ref>) although such a solution may lead to interfaces difficult to use. Finally, O 2 SQL allows to embed both set handling and calls to specific operators in a unified way.
Reference: [Gut93] <author> R.H. Guting. </author> <title> Second-Order Signature: A Tool for Specifying Data Models, Query Processing and Optimization. </title> <booktitle> In Proc. ACM-SIGMOD Conf., </booktitle> <year> 1993. </year>
Reference-contexts: introduction of an Object Model Interface that allows one to make the connection between a geographic model and a database model. However, this solution may seem complex as 2 it requires second-order signatures <ref> [Gut93] </ref>. We will show that operations on maps can be expressed in a simple manner if some general features are provided in the underlying database framework. This paper is organized as follows.
Reference: [Gut94a] <author> R. H. Guting. </author> <title> An Introduction to Spatial Database Systems. </title> <journal> The VLDB Journal, </journal> <volume> 3(4) </volume> <pages> 357-399, </pages> <year> 1994. </year>
Reference: [Gut94b] <author> R. H. Guting. GraphDB: </author> <title> A Data Model and Query Language for Graphs in Database. </title> <booktitle> In Proc. Conf. on Very Large Data Bases (VLDB), </booktitle> <year> 1994. </year> <month> 30 </month>
Reference-contexts: Then the query execution consists in calling the shortest path algorithm on the network (external function), with the two end-points. We do not want to elaborate on graphs here: the reader will find in <ref> [Gut94b] </ref> an approach for embedding graphs in databases, together with algorithms.
Reference: [HT96] <author> T. Hadzilacos and N. Tryfona. </author> <title> Logical Data Modeling for Geographic Databases. </title> <journal> Int. Journal on Geographical Information Systems (IJGIS), </journal> <year> 1996. </year>
Reference-contexts: In the latter case, the primary objects are geographic entities with which is associated a spatial attribute. Recent work has been done to integrate both approaches, as for instance in <ref> [GS93b, HT96] </ref>. These approaches are based on a mapping of conceptual geographic models onto geometric layers. The model proposed in this paper belongs to the latter category, hence we focus on "conceptual" geographic entities. This section starts with a description of our base complex object model.
Reference: [JKO + 89] <author> S.-J. Jiang, H. Kitagawa, N. Ohbo, I. Susuki, and Y. Fujiwara. </author> <title> Abstract Data Types in Graphics Databases. </title> <editor> In T. L. Kunii, editor, </editor> <booktitle> Proc. IFIP Conf. on Visual Database Systems, B.V. </booktitle> <publisher> (North-Holland), </publisher> <address> 1989. </address> <publisher> Elsevier Science Publishers. </publisher>
Reference-contexts: A general spatial type was defined as a geometric union of 0-, 1- and 2- dimensional figures, which can easily be implemented by ADT (such as in <ref> [JKO + 89] </ref> in the closely-related domain of graphics databases) or object-oriented classes. 3. Independence of the type w.r.t. the DBMS data model. This concerns the use of particular features of a DBMS in the (encapsulated) ADT definition, that might lead to models lacking genericity.
Reference: [JS82] <author> B. Jaeschke and H.-J. Schek. </author> <title> Remarks on the Algebra of Non First Normal Form Relations. </title> <booktitle> In Proc. ACM SIGACT-SIGMOD Symp. on Principles of Database Systems, </booktitle> <year> 1982. </year>
Reference-contexts: Complex objects are obtained from atomic objects using the set and tuple constructors. These can be applied arbitrarily deep, contrary to the relational model, where each of them is used only once, or even to non-first normal form models such as Verso [Ver86, AB86], NF2 <ref> [JS82] </ref>, where they have to be alternated. This interesting feature allows one to express compositions of geographic objects in an elegant way, which is not the case for most of the geographic models already proposed (for that matter, the model of [SV89] can be seen as an "extended relational model"). <p> The parameter given to the replace operation is called the replace specification. The effect of replace is: replace &lt; f &gt; (m) = ff (t)jt 2 m ^ f (t) is defined g. The nest and unnest operators of N1NF algebras <ref> [JS82, Ver86] </ref>, suitable to gather several values of the same type in a single set (case of the nest), is not part of the algebra, but Abiteboul and Beeri show their simulation using replace, rename and select. 4 2.2 A model based on geographic entities In the following, we define a
Reference: [KW87] <author> A. Kemper and M. Wallrath. </author> <title> An analysis of Geometric Modeling in Database Systems. </title> <journal> ACM Computing Surveys, </journal> 1987(1) 48-91, 1987. 
Reference-contexts: Examples include the computation of the center of a set of points, the Voronoi diagram, or the shortest distance between spatial objects. For more information about spatial operations the reader is referred to <ref> [Peu84, KW87, Gut88b, LT92] </ref>, and for a description of geometric algorithms to [PS85, GS95]. 2.4 Examples of enduser operations We now give several examples of simple operations that an enduser is likely to apply to maps. Some of them can be found in [SV89, GS93a].
Reference: [Len93] <author> H.-J. Lenz. </author> <title> M3-Database Design: Micro-, Macro- and Metadata Modeling. </title> <editor> In F. Faulbaum, editor, </editor> <booktitle> SoftStat'93; Avances in Statistical Software, </booktitle> <address> Stuttgart, </address> <year> 1993. </year>
Reference: [LPV93] <author> T. Larue, D. Pastre, and Y. Viemont. </author> <title> Strong Integration of Spatial Domains and Operators in a Relational Database Systems. </title> <editor> In D. Abel and B.C. Ooi, editors, </editor> <booktitle> Advances in Spatial Databases (SSD'93), </booktitle> <pages> pages 53-72. </pages> <booktitle> Lecture Notes in Computer Science No. </booktitle> <volume> 692, </volume> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1993. </year>
Reference-contexts: This drawback of the relational approach is particularly regrettable since many geographic operators such as shortest path have to be expressed as specific operators. GeoSabrina <ref> [LPV93] </ref> is built on top of an extended relational system [GCK + 89]. In this system, Class I.a operations are defined as (regular) ADT functions, Class I.b operations are considered as aggregate functions, and operations of Class I.c, Class I.d, and Class III cannot be implemented.
Reference: [LT92] <author> R. Laurini and T. Thompson. </author> <title> Fundamentals of Spatial Information Systems. The A.P.I.C. Series, Number 37. </title> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: Examples include the computation of the center of a set of points, the Voronoi diagram, or the shortest distance between spatial objects. For more information about spatial operations the reader is referred to <ref> [Peu84, KW87, Gut88b, LT92] </ref>, and for a description of geometric algorithms to [PS85, GS95]. 2.4 Examples of enduser operations We now give several examples of simple operations that an enduser is likely to apply to maps. Some of them can be found in [SV89, GS93a].
Reference: [LZ74] <author> B. Liskov and S. Zilles. </author> <title> Programming with Abstract Data Types. </title> <journal> ACM SIG-PLAN Notices, </journal> <year> 1974. </year>
Reference-contexts: At implementation time, one can define spatial indexes on spatial ADTs. In this paper, we do not elaborate on the notion of ADT in general. For more information on this topic see <ref> [CW85, LZ74, SRG83, Sto86] </ref>. A spatial object is an instance of a spatial type. It can have 0 (point), 1 (line) or 2 (zone) dimensions. In [DV93], we compared different definitions of spatial ADT and proposed one based on spatial values (heterogeneous geometric figure).
Reference: [Mar88] <author> S. T. </author> <month> March, </month> <title> editor. Entity-Relationship Approach. </title> <booktitle> Proc. of the Entity-Relationship conference, </booktitle> <publisher> North-Holland, </publisher> <address> N-H, </address> <year> 1988. </year>
Reference-contexts: Following our operator classification, we discuss their advantages and drawbacks while implementing a geographic model with full functionalities. 2 A Conceptual Geographic Model The goal of this section is to present a conceptual geographic model independent of any database representation. Many existing conceptual models, such as the entity-relationship model <ref> [Che76, Mar88] </ref>, its recent extensions [EN89], or IFO [AH87], could serve as a basis to express a geographic model. In this paper we take as an underlying model the complex object model of [AB95].
Reference: [Mic91] <author> Z. Michalewicz. </author> <title> Statistical and Scientific Databases. </title> <publisher> Ellis Horwood Publishers, </publisher> <address> London, </address> <year> 1991. </year>
Reference: [O2T93] <author> O2Technology. </author> <title> The O 2 User Manual, version 4.3. </title> <type> Technical report, </type> <institution> O 2 Technology, </institution> <address> Versailles, </address> <year> 1993. </year>
Reference-contexts: (class I.d): function voronoi (arg: set (spatial)): set (spatial); * A function that computes the shortest path (class III): function shortestpath (begin: spatial, end: spatial, network:set (tuple (edge:spatial, weight:real))): set (spatial); 3.4.2 Data representation The schemas defined in Section 2 can be expressed directly in the O 2 definition language <ref> [O2T93] </ref> by using the tuple and set constructors. <p> As we will see further, the major difference of the two models concerns data manipulation at the map level. 3.4.3 Expressing queries We now use the O 2 SQL language <ref> [O2T93] </ref> in order to express the queries of Section 2. O 2 SQL is a database query language whose syntax is close to SQL standard. It was a basis for defining OQL, the new SQL-like standard query language proposed in 1994 by ODMG (the OODBMS vendors consortium).
Reference: [OH86] <author> S. Osborne and T. </author> <title> Heaven. The Design of a Relational Database System with Abstract Data Types for Domains. </title> <journal> ACM. Trans. on Software Engineering, </journal> <volume> 11(3) </volume> <pages> 357-373, </pages> <year> 1986. </year>
Reference-contexts: Specific algebraic operators (Class III) cannot be generally introduced in extended-relational systems, but some systems can handle them by coupling the DBMS with a programming language (e.g., RAD <ref> [OH86] </ref> and its transformation operations). This drawback of the relational approach is particularly regrettable since many geographic operators such as shortest path have to be expressed as specific operators. GeoSabrina [LPV93] is built on top of an extended relational system [GCK + 89].
Reference: [Peu84] <author> D.J. Peuquet. </author> <title> A Conceptual Framework and Comparison of Spatial Data Models. </title> <journal> Cartographica, </journal> <volume> 21(4) </volume> <pages> 66-113, </pages> <year> 1984. </year>
Reference-contexts: Examples include the computation of the center of a set of points, the Voronoi diagram, or the shortest distance between spatial objects. For more information about spatial operations the reader is referred to <ref> [Peu84, KW87, Gut88b, LT92] </ref>, and for a description of geometric algorithms to [PS85, GS95]. 2.4 Examples of enduser operations We now give several examples of simple operations that an enduser is likely to apply to maps. Some of them can be found in [SV89, GS93a].
Reference: [PS85] <author> F. P. Preparata and M. I. Shamos. </author> <title> Computational Geometry: An Introduction. </title> <publisher> Springer Verlag, </publisher> <address> Berlin, </address> <year> 1985. </year> <month> 31 </month>
Reference-contexts: Examples include the computation of the center of a set of points, the Voronoi diagram, or the shortest distance between spatial objects. For more information about spatial operations the reader is referred to [Peu84, KW87, Gut88b, LT92], and for a description of geometric algorithms to <ref> [PS85, GS95] </ref>. 2.4 Examples of enduser operations We now give several examples of simple operations that an enduser is likely to apply to maps. Some of them can be found in [SV89, GS93a]. The corresponding figures are placed at the end of this paper.
Reference: [RS95] <author> P. Rigaux and M. Scholl. </author> <title> Multi-Scale Partitions: Application to Spatial and Statistical Databases. </title> <editor> In M. Egenhofer and J. Herrings, editors, </editor> <booktitle> Advances in Spatial Databases (SSD'95), </booktitle> <pages> pages 170-184. </pages> <booktitle> Lecture Notes in Computer Science No. </booktitle> <volume> 951, </volume> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1995. </year>
Reference: [SR86] <author> M. Stonebraker and L. A. Rowe. </author> <title> The Design of POSTGRES. </title> <booktitle> In Proc. ACM SIGACT-SIGMOD, </booktitle> <pages> pages 340-355, </pages> <year> 1986. </year>
Reference-contexts: Such a mapping is realized both ways in the interface between the two modules. 3.3 Relational DBMS extended to ADTs There have been several proposals to extend the original relational model with abstract data types <ref> [SRG83, SR86, Sto86, GCK + 89] </ref>. This facility has often been used to add a spatial data type within a relational DBMS. ADT enable user-defined operations from Class I, but only from the first subclass "ADT x ADT and ADT" (Class I.a).
Reference: [SRG83] <author> M. Stonebraker, B. Rubenstein, and A. Guttman. </author> <title> Application and Abstract Data Types and Abstract Indices to CAD Databases. </title> <booktitle> In Proc. of the Annual Meeting Database Week, </booktitle> <pages> pages 107-113, </pages> <year> 1983. </year>
Reference-contexts: At implementation time, one can define spatial indexes on spatial ADTs. In this paper, we do not elaborate on the notion of ADT in general. For more information on this topic see <ref> [CW85, LZ74, SRG83, Sto86] </ref>. A spatial object is an instance of a spatial type. It can have 0 (point), 1 (line) or 2 (zone) dimensions. In [DV93], we compared different definitions of spatial ADT and proposed one based on spatial values (heterogeneous geometric figure). <p> Such a mapping is realized both ways in the interface between the two modules. 3.3 Relational DBMS extended to ADTs There have been several proposals to extend the original relational model with abstract data types <ref> [SRG83, SR86, Sto86, GCK + 89] </ref>. This facility has often been used to add a spatial data type within a relational DBMS. ADT enable user-defined operations from Class I, but only from the first subclass "ADT x ADT and ADT" (Class I.a).
Reference: [Sto86] <author> M. Stonebraker. </author> <title> Inclusion of New Types in Relational Data Base Systems. </title> <booktitle> In Proc. Intl. Conf. on Data Engineering, </booktitle> <pages> pages 262-269, </pages> <year> 1986. </year>
Reference-contexts: At implementation time, one can define spatial indexes on spatial ADTs. In this paper, we do not elaborate on the notion of ADT in general. For more information on this topic see <ref> [CW85, LZ74, SRG83, Sto86] </ref>. A spatial object is an instance of a spatial type. It can have 0 (point), 1 (line) or 2 (zone) dimensions. In [DV93], we compared different definitions of spatial ADT and proposed one based on spatial values (heterogeneous geometric figure). <p> Such a mapping is realized both ways in the interface between the two modules. 3.3 Relational DBMS extended to ADTs There have been several proposals to extend the original relational model with abstract data types <ref> [SRG83, SR86, Sto86, GCK + 89] </ref>. This facility has often been used to add a spatial data type within a relational DBMS. ADT enable user-defined operations from Class I, but only from the first subclass "ADT x ADT and ADT" (Class I.a).
Reference: [SV89] <author> M. Scholl and A. Voisard. </author> <title> Thematic Map Modeling. </title> <booktitle> In Design and Implementation of Large Spatial Databases (SSD'89), </booktitle> <pages> pages 167-192. </pages> <booktitle> Lecture Notes in Computer Science No. </booktitle> <volume> 409, </volume> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1989. </year>
Reference-contexts: This interesting feature allows one to express compositions of geographic objects in an elegant way, which is not the case for most of the geographic models already proposed (for that matter, the model of <ref> [SV89] </ref> can be seen as an "extended relational model"). Abiteboul and Beeri assume a finite set of domain names and an infinite set of names, called attributes. Elements of the domains are called atomic values. <p> Independence of the type w.r.t. the DBMS data model. This concerns the use of particular features of a DBMS in the (encapsulated) ADT definition, that might lead to models lacking genericity. An example is <ref> [SV89] </ref>, where the set constructor appears at the geometric level (a region is defined as being either an elementary region or a set of elementary regions, in order to meet the requirement on closure). 2.3.2 Operations on spatial ADT: A classification Trying to give an exhaustive list of ADT operations is <p> Some of them can be found in <ref> [SV89, GS93a] </ref>. The corresponding figures are placed at the end of this paper. For each operation we give its signature, in which map is the type thematic-map described in Section 2.2 and Ai a collection of alphanumeric attributes. <p> In Figure 5, the area is a rectangle drawn on the screen by the user. But the argument could have any shape, for instance a circle. Consider the following query <ref> [SV89] </ref>: "Get all countries located less than 100 kilometers from a given point". The windowing of the initial map with circle of radius 100 kilometers and center given by the user is performed. <p> Project on MainSpokenLanguage and Geometry and nest on Geometry: States'': f County':[MainSpokenLanguage, G:fGeometryg]g 3. Apply union-set to set G (G' union-set (G)): States'': f County'':[MainSpokenLanguage, G']g. In <ref> [SV89, GNT91, GS93a] </ref>, a somehow comparable operation called fusion is proposed. Its semantics are slightly different since the union of the geometry of geographic objects is applied if they have the same value for a given attribute. <p> Hence we see a need to combine general operators and user-defined functions. As far as previous approaches are concerned, note that the operations above were not all treated in <ref> [SV89] </ref> as it was not the focus of this approach. <p> A higher level, the map level, is constituted of geographic objects, and a lower level, the geometric level, corresponds to the spatial components of geographic objects. General operations on maps (e.g., map overlay) use low level operations on the geometry (e.g., intersection). In recent approaches <ref> [Gut88b, SV89, GN90, GNT91, Dav91, GS93a] </ref>, the geometric level corresponds to the definition of spatial abstract data types (ADTs). Some of this work [Gut88b, Dav91] is based on the relational model extended to abstract data types. <p> Some of this work [Gut88b, Dav91] is based on the relational model extended to abstract data types. It suffers from several drawbacks, including poorness of data structures, embedding of geometric operations in high level operations, and lack of flexibility. The thematic-map model of <ref> [SV89] </ref> is based on a complex object model and emphasizes the separation between map level and geometric level. The originality of this approach is the association of the geometric operations with the data model through general constructs.
Reference: [SV92] <author> M. Scholl and A. Voisard. </author> <title> Object-Oriented Database Systems for Geographic Applications: An Experiment with O 2 , 1992. </title> <booktitle> in [53], </booktitle> <pages> pp. 585-618. </pages>
Reference-contexts: Then, merging Class III and Class II leads to a DBMS too specific. In the same way, it is now well known <ref> [SV92, GS93a] </ref> that Class I has to be independent from Class II for efficiency. It could be implemented by a specific geometric library. One crucial problem is the communication between these modules, i.e. the combination of the three categories of operators. In a consistent framework all operators can be combined. <p> In the GIS community, some experiments were made to implement a GIS, or part of, on top of OODBMS such as O 2 <ref> [SV92] </ref>, or ObjectStore [GR93]. Embedding typical GIS features within a so-called object-oriented GIS was studied as well [EF92]. <p> Let us take as an example the case of O 2 , which has a clean data model and which was used as a basis for several other proposals <ref> [SV92, GS93a, DRSM93] </ref>.
Reference: [SVP + 96] <author> M. Scholl, A. Voisard, J.-P. Peloux, L. Raynal, and P. </author> <month> Rigaux. </month> <institution> Systemes de Ges-tion de Bases de Donnees Geographiques. </institution> <address> Specificites. </address> <publisher> International Thomson Publishing, </publisher> <address> Paris, France, </address> <year> 1996. </year> <note> In French. </note>
Reference: [Til80] <author> R. B. Tilove. </author> <title> Set Membership Classification: A Unified Approach to Geometric Intersection Problems. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-29(10), </volume> <year> 1980. </year>
Reference-contexts: (dimension 1) can be either a line segment (dimension 1) or a set of isolated points (dimension 0) or even the union of these two, One may surmount this problem by defining a different intersection operation such that it preserves the dimension of its operands (as the regularized intersection in <ref> [Til80] </ref>). In [DV93], this approach was chosen and two cases of intersection were defined, a geographic intersection that preserved dimensions and a regular geometric intersection.
Reference: [Ull88] <author> J.D. Ullman. </author> <booktitle> Principles of Database and Knowledge-Base Systems, </booktitle> <volume> volume 1. </volume> <publisher> Computer Science Press, </publisher> <year> 1988. </year>
Reference-contexts: One crucial problem is the communication between these modules, i.e. the combination of the three categories of operators. In a consistent framework all operators can be combined. For instance, map overlay is a combination of join and geometric intersection. More precisely, it is nothing other than a -join <ref> [Ull88] </ref> with the geometric intersection test as the predicate. Class II belongs to the DBMS kernel. Take for instance Class I and the decompose operation, which takes a region and returns its non-connected parts in a set.
Reference: [Ver86] <author> J. Verso. VERSO: </author> <title> A Database Machine Based on non-1NF Relations. </title> <type> Technical Report 523, </type> <institution> INRIA, </institution> <year> 1986. </year>
Reference-contexts: Complex objects are obtained from atomic objects using the set and tuple constructors. These can be applied arbitrarily deep, contrary to the relational model, where each of them is used only once, or even to non-first normal form models such as Verso <ref> [Ver86, AB86] </ref>, NF2 [JS82], where they have to be alternated. <p> The parameter given to the replace operation is called the replace specification. The effect of replace is: replace &lt; f &gt; (m) = ff (t)jt 2 m ^ f (t) is defined g. The nest and unnest operators of N1NF algebras <ref> [JS82, Ver86] </ref>, suitable to gather several values of the same type in a single set (case of the nest), is not part of the algebra, but Abiteboul and Beeri show their simulation using replace, rename and select. 4 2.2 A model based on geographic entities In the following, we define a
Reference: [Wor94] <author> M. Worboys. </author> <title> Object-Oriented Approaches to Geo-Referenced Information. </title> <journal> Int. Journal on Geographical Information Systems (IJGIS), </journal> <volume> 8(4), </volume> <year> 1994. </year> <month> 32 </month>
Reference-contexts: Embedding typical GIS features within a so-called object-oriented GIS was studied as well [EF92]. For more information regarding the use of object-oriented system to handle geographic data, see <ref> [EF92, GL93, Wor94] </ref>. 3.4.1 Defining spatial ADTs and operator classes Operations of both Class I and Class III can be expressed using the general programming language of an OODBMS.
References-found: 56

