URL: http://mml.cs.ucla.edu/~santos/isjournal98.ps
Refering-URL: http://mml.cs.ucla.edu/~santos/
Root-URL: http://www.cs.ucla.edu
Title: A Parallel Disk Storage System for Realtime Multimedia Applications  
Author: Richard Muntz, Jose Renato Santos, Steven Berson 
Affiliation: UCLA Computer Science Department  
Date: 1998)  
Note: (To appear in International Journal of Intelligent Systems, special issue on Multimedia Computing Systems,  
Abstract: We describe the design and implementation of the RIO (Randomized I/O) multimedia object server which manages a set of parallel disks and supports real-time throughput and statistical delay guarantees. This storage subsystem was implemented as part of a multimedia information server which supports multiple concurrent applications such as video on demand and 3D interactive virtual worlds. We discuss the principal issues and innovations involved in the design and implementation of the RIO storage system, and present experimental performance results measured on a prototype implementation. A multimedia data server must be ready to handle a variety of realtime object types (video, audio, 3D interactive virtual worlds, etc.) as well as a non realtime workload component. Achieving simultaneously (1) high utilization and (2) low latency with a high degree of certainty is the challenge. Our prototype system provides a statistical guarantee of quality of service. Our experimental results show that it is possible to achieve a very small probability of exceeding a deadline (less than 10 6 ), with a relatively high disk utilization (70% to 99%, in terms of fraction of the maximum disk capacity) , together with a relatively small delay bound (on the order of 0.5 sec. to 1.5 sec ), using contemporary disks. These results were achieved using random allocation of disk blocks and replication in conjunction with online load balancing.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Y. Azar, A.Z. Broder, A.R. Karlin, E.Upfal, </author> <title> "Balanced Allocations", </title> <booktitle> Proc. 26th Annual ACM Symposium on the Theory of Computing (STOC 94), </booktitle> <pages> pp. 593-602, </pages> <year> 1994 </year> <month> 37 </month>
Reference: [2] <author> S. Berson, L. Golubchik and R.R. </author> <title> Muntz "Fault Tolerant Design of Video-on-Demand Storage Servers" SIGMOD 95, </title> <journal> pp. </journal> <pages> 364-375, </pages> <year> 1995. </year>
Reference: [3] <author> S. Berson, R. Muntz, W. Wong, </author> <title> "Randomized Data Allocation for Real-time Disk I/O", </title> <booktitle> Compcon 96, </booktitle> <address> pp.286-90, </address> <year> 1996. </year>
Reference: [4] <author> Birk, Y., "Track-Pairing: </author> <title> A Novel Data Layout for VOD Servers with Multi-Zone-Recording Disks", </title> <booktitle> Proceedings of IEEE International Conference on Multimedia Computing and Systems, </booktitle> <pages> pp. 248-255, </pages> <month> May </month> <year> 1995. </year>
Reference: [5] <author> J. Bucklew, </author> <title> Large Deviation techniques in Decision, Simulation, and Estimation, </title> <address> New York, </address> <publisher> Wiley, </publisher> <year> 1990. </year>
Reference-contexts: The H-BIND model [20] for example leads to bounds on the mean and variance of the number of accesses for a given interval length. Then using the Central Limit Theorem or Cramer's bound <ref> [5] </ref> one can estimate the probability that the actual number of requests in a T length interval will exceed a given number, N . We have adopted this method for admission control. A second modification to the system model concerns the distribution of disk accesses to the individual disks.
Reference: [6] <author> E. Chang, A. Zakhor, </author> <title> "Variable Bit Rate MPEG Video Storage on Parallel Disk Arrays", 1st International. Workshop on Community Networking: Integrated Multimedia Services to the Home, </title> <publisher> IEEE Press, </publisher> <pages> pp. 127-137, </pages> <year> 1994. </year>
Reference-contexts: This limits the use of this type of system in supporting different types of media objects such as MPEG1 and MPEG2 video, sound, etc. Also a single video may have a variable bit rate (VBR) when encoded using MPEG or other similar compression techniques. Schemes using variable size blocks <ref> [6] </ref> or a variable number of blocks per cycle per stream [32] have been proposed but, due to space limitations we are not able to discuss them in any detail. How to provide VCR functionality on this type of system is also an issue.
Reference: [7] <author> Chen, L.T., Rotem,D., </author> <title> "Declustering Objects for Visualization", </title> <booktitle> VLDB 1993, Dublin, Ireland, </booktitle> <pages> pp. 85-96, </pages> <year> 1993. </year>
Reference: [8] <author> A.L. Chervenak, A.A. Patterson, R.H. Katz, </author> <title> "Choosing the Best Storage System for Video Service", </title> <booktitle> ACM Multimedia 95, </booktitle> <address> pp.109-119, </address> <year> 1995. </year>
Reference: [9] <author> T. Chiueh, </author> <title> R.H. Katz "Multi-Resolution Video Representation for Parallel Disk Arrays", </title> <booktitle> ACM Multimedia 93, </booktitle> <pages> pp. 401-9, </pages> <year> 1993. </year>
Reference-contexts: In addition, providing VCR features such as Pause, Fast Forward and Rewind, also reduces the predictability of a stream I/O access pattern. Finally, multi resolution encoding schemes such as are found in the MPEG standards complicate data layout and I/O scheduling <ref> [9] </ref>. New multimedia applications, such as 3D interactive virtual worlds, have I/O patterns much less predictable than video or audio. In a 3D interactive virtual world application the user navigates through large 3D graphic models at variable speed and along user controlled paths. <p> Generally this is accomplished by use of alternative representations of objects which have less resolution and are smaller. This also implies a different access pattern to the data depending on whether there is a transient overload condition or not. This can be complex to deal with effectively <ref> [9] </ref> in a striping system but it poses no special problem to RIO since the pattern of accesses continues to be random. Random data allocation, on the other hand can not provide absolute realtime guarantees.
Reference: [10] <author> Funkhauser, T., Sequin, C., Teller, S., </author> <title> "Management of Large Amounts of Data in Interactive Building Walkthroughs", </title> <booktitle> ACM SIGGRAPH Proc. of the 1992 Symposium on Interactive 3D Graphics, </booktitle> <year> 1992. </year>
Reference-contexts: The access pattern to storage objects thus depends on the speeds and paths selected by the user, which makes prediction imperfect at best. 3D virtual world models have been used for different applications such as architectural building design <ref> [10] </ref>, urban city models [18], scientific visualization [19][12], 2 etc.; and will be increasingly common in the future.
Reference: [11] <author> D.L. Eager, E.D. Lazowska, J. Zahorjan, </author> <title> "Adaptive Load Sharing in Homogeneous Distributed Systems", </title> <journal> IEEE Trans. on Software Engineering, </journal> <pages> pp. 662-675, </pages> <year> 1986. </year>
Reference-contexts: Thus bandwidth, rather than storage capacity, will increasingly be the more critical resource. The routing of requests for replicated blocks to the least loaded disks is easily mapped to a problem that has been studied in the computer science literature for load balancing in distributed systems <ref> [11] </ref>. There it is often referred to as "random probing". Rather than disk accesses and disks, the problem is normally expressed in terms of tasks and processing nodes.
Reference: [12] <author> W. Gekelman, D. Leneman, J. Maggs, </author> <title> "Experimental Observation of Alfven Wave Cones", </title> <journal> Physics of Plasmas, </journal> <volume> 1, pp.3775-3783, </volume> <year> 1994. </year>
Reference: [13] <author> Gemmell, D., Vin, H., Kandlur, D., Rangan, V., Rowe, L., </author> <title> "Multimedia Storage Servers: A Tutorial", </title> <journal> IEEE Computer, </journal> <volume> pp.40-49, </volume> <month> May </month> <year> 1995. </year> <month> 38 </month>
Reference: [14] <author> E. Grochowski, </author> <title> R.F. Hoyt "Future Trends in Hard Disk Drives", </title> <journal> IEEE Transactions on Magnetics, </journal> <volume> Vol. 32, No. 3, </volume> <month> May </month> <year> 1996. </year>
Reference-contexts: (More sophisticated schemes which estimate the actual service times, etc. were studied and found to yield little improvement over this simple scheme.) The use of replication is partially motivated by the technological trends in magnetic disks which suggests that storage capacity is increasing faster than access rates or transmission rates <ref> [14] </ref>. Thus bandwidth, rather than storage capacity, will increasingly be the more critical resource. The routing of requests for replicated blocks to the least loaded disks is easily mapped to a problem that has been studied in the computer science literature for load balancing in distributed systems [11]. <p> The cost, for having better load balancing and increased disk bandwidth utilization is the use of extra storage space. Current disk technology trends, shows that storage capacity is growing faster than bandwidth <ref> [14] </ref>. We thus believe that disk bandwidth will be the bottleneck for multimedia applications, specially if a large number of streams (users) needs to be supported.
Reference: [15] <author> J Hsieh, M. Lin,J.C.L. Liu, D.H.C Du, </author> <title> "Performance of a Mass Storage System for Video-On-Demand". </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> Vol. 30, No. 2, pp.147-67, </volume> <month> Nov. </month> <year> 1995. </year>
Reference-contexts: The great advantage of striping is that it decouples storage capacity from disk bandwidth, since each object uses the bandwidth of all disks and thus disk overloading due to skew in object popularity is not an issue.[8] [31] <ref> [15] </ref> [33] A common approach to scheduling requests when objects are striped over all disks, is to process requests 8 in cycles of constant duration synchronized across all disks. In each cycle, each active stream accesses a single block on a particular disk.
Reference: [16] <author> H. Hsiao, </author> <title> D.J. Dewitt, "Chained Declustering: A New Availability Strategy for Multiprocessor Database Machines", </title> <booktitle> Proc. of Data Engineering, </booktitle> <pages> pp 456-65, </pages> <year> 1990. </year>
Reference-contexts: Imposing constraints on where data can be replicated can improve fault tolerance by allowing the system to survive multiple disk failures. However these same constraints can reduce the capacity for short term load balancing. One such replication scheme is chained declustering <ref> [16] </ref>, where data whose primary copy is stored in a given disk i is replicated only in the next logically consecutive disk i + 1. This scheme allows multiple disk failure, provided only that no two failures occur on logically consecutive disks.
Reference: [17] <author> K. Jeffay, D.F. Stanat, C.U. Martel, </author> <title> "On Non-preemptive Scheduling of Periodic and Sporadic Tasks", </title> <booktitle> Proc. of Real-time Systems Symp., </booktitle> <address> pp.129-139, </address> <month> Dec. </month> <year> 1991. </year>
Reference-contexts: The EDF algorithm is optimum in the sense that if there exists a feasible schedule where no request misses its deadline then scheduling the requests according to the EDF policy will guarantee that no request misses its deadline. Later, Jeffay et. all <ref> [17] </ref> extended this result and showed that the EDF policy is also optimal for periodic and sporadic tasks which are not preemptable. However, these results assume a work conserving server which is clearly not the case for disk I/O.
Reference: [18] <author> Jepson, W., Liggett, R., Friedman, S., </author> <title> "Virtual Modeling of Urban Environments", Presence: </title> <booktitle> Teleoperators and Virtual Environments, </booktitle> <volume> Vol. 5, </volume> <publisher> No.1, MIT Press, </publisher> <year> 1996. </year>
Reference-contexts: The access pattern to storage objects thus depends on the speeds and paths selected by the user, which makes prediction imperfect at best. 3D virtual world models have been used for different applications such as architectural building design [10], urban city models <ref> [18] </ref>, scientific visualization [19][12], 2 etc.; and will be increasingly common in the future.
Reference: [19] <author> W. Karplus, </author> <title> M.R. Harreld, "The Role of Virtual Environments in Clinical Medicine: Scientific Visualization", </title> <booktitle> Proc. First Joint Conference of International Simulation Societies (CISS), </booktitle> <address> Zurich, Switzerland, </address> <pages> pp. 13-17, </pages> <month> September </month> <year> 1994. </year>
Reference: [20] <author> E. W. Knightly, "H-BIND: </author> <title> A New Approach to Providing Statistical Performance Guarantees to VBR Traffic", </title> <booktitle> Proc. of IEEE INFOCOM, </booktitle> <year> 1996. </year>
Reference-contexts: First, with respect to admission control, we have to consider the manner in which session traffic is characterized and how 12 that characterization can be used to make the guarantee that no more than N disk accesses will be required in any T length interval. The H-BIND model <ref> [20] </ref> for example leads to bounds on the mean and variance of the number of accesses for a given interval length.
Reference: [21] <author> C.L. Liu, J.W. Layland, </author> <title> "Scheduling Algorithms for Multiprogramming in a Hard Real-time Environment" journal of ACM, </title> <type> pp 46-61, </type> <year> 1973. </year>
Reference-contexts: Liu & Layland <ref> [21] </ref> showed that for a set of preemptable tasks generating periodic requests, an optimal scheduling policy is the EDF (Earliest Deadline First) algorithm, that schedules requests in the order of their deadlines possibly preempting requests being serviced when a request with an earlier deadline arrives.
Reference: [22] <author> Miller, E.L., Katz, </author> <title> R.H., "RAMA: Easy Access to a High-Bandwidth Massively Parallel File System", </title> <booktitle> USENIX 95, </booktitle> <pages> pp. 59-70, </pages> <year> 1995. </year>
Reference-contexts: Our solution to control these short term variations is to use partial replication and an on-line, shortest-queue scheduling algorithm as discussed later in this section. Random data allocation has been proposed for non real-time system such as RAMA parallel file system proposed by Miller and Katz <ref> [22] </ref>. However, random data allocation is not considered in almost any real-time system for multimedia applications , with the exception of the work of Tewari et all [30]. They propose a video server with random placement of data blocks on disks.
Reference: [23] <author> M.D. Mitzenmacher, </author> <title> "The Power of Two Choices in Randomized Load Balancing", </title> <type> PhD Dissertation, </type> <institution> University of California at Berkeley, Computer Science Department, </institution> <year> 1996. </year>
Reference-contexts: The mapping of this problem to our parallel disk subsystem is clear. Disk requests are the 13 tasks and random disk block allocation with random replication is equivalent to randomly probing for the least loaded server. The most recent work related to this problem is that of Mitzenmacher <ref> [23] </ref> which has a detailed analysis of several variations of a multi-server queuing model in which customers can randomly probe d servers and join the one with the shortest queue. <p> Our experimental results confirm that replicating data on multiple disks can significantly reduce the variation of individual disks loads, providing a more balanced and efficient system. However there are significant differences between our system and the models analyzed in <ref> [23] </ref> with respect to service time distributions, arrival processes, etc. Since we require accuracy on the tail of the response time distribution we resorted to simulation and measurement. Models, however, are useful for configuration planning and a first order approximation of the delay bounds that can be guaranteed.
Reference: [24] <author> R. Muntz, J. C-S. Lui, </author> <title> "Performance Analysis of Disk Arrays Under Failure", </title> <booktitle> Proc. VLDB, </booktitle> <address> Brisbane, Australia, </address> <pages> pp. 162-173, </pages> <year> 1990. </year>
Reference-contexts: In this approach, the total number D of disks in the system are divided into N A disk arrays with D A = D=N A disks each. Each disk array is a RAID level 5 [25] with parity group declustering <ref> [24] </ref> that stores data on parity groups of size G distributed on G different disks (G 1 data blocks and 1 parity block; G D A ). A fraction ff of the data blocks is then randomly replicated across all disks of the system.
Reference: [25] <author> D.A. Patterson, G. Gibson, R.H. Katz, </author> <title> "A Case for Redundant Arrays of Inexpensive Disks (RAID)", </title> <booktitle> SIGMOD 88, </booktitle> <address> pp.109-116, </address> <year> 1988. </year>
Reference-contexts: However in order to provide tolerance to disk failures we need to consider alternative schemes. There are basically two approaches; one is to use full replication and the other is to use parity groups such as used in RAID schemes <ref> [25] </ref>. One possibility is to use RAID subsystems to provide fault tolerance and partial replication of data blocks to provide load balance. In this approach, the total number D of disks in the system are divided into N A disk arrays with D A = D=N A disks each. <p> In this approach, the total number D of disks in the system are divided into N A disk arrays with D A = D=N A disks each. Each disk array is a RAID level 5 <ref> [25] </ref> with parity group declustering [24] that stores data on parity groups of size G distributed on G different disks (G 1 data blocks and 1 parity block; G D A ). A fraction ff of the data blocks is then randomly replicated across all disks of the system.
Reference: [26] <author> Reddy, A.L.N., Wyllie, J., </author> <title> "Disk Scheduling in a Multimedia I/O System", </title> <booktitle> ACM Multimedia 93, </booktitle> <pages> pp. 225-233, </pages> <year> 1993. </year>
Reference: [27] <author> Ruemmler, C., Wilkes, J., </author> <title> "An Introduction to Disk Driving Modeling", </title> <booktitle> IEEE Computer, </booktitle> <month> pp17--28,March </month> <year> 1994. </year>
Reference-contexts: These parameters were obtained experimentally as in <ref> [27] </ref> [34]. The disk layout, including number of zones, number of heads, sector size, number of cylinders per zone, track size per zone, and track skew factor per zone, were obtained from information on the disk (s) using SCSI commands.
Reference: [28] <author> J.R. Santos, R. </author> <title> Muntz "Design of the RIO (Randomized I/O) Storage Server", </title> <type> UCLA CSD Technical Report, </type> <month> Jun </month> <year> 1997. </year>
Reference: [29] <author> M. Seltzer, P. Chen, J. Ousterhout, </author> <title> "Disk Scheduling Revisited" USENIX Winter 90, </title> <address> pp.313-324, </address> <year> 1990. </year>
Reference: [30] <author> R. Tewari, R. Mukherjee, </author> <title> D.M. Dias, H.M. Vin, </title> <booktitle> "Design and Performance Tradeoffs in Clustered Video Servers" Proceedings of the International Conference on Multimedia Computing and Systems,Los Alami-tos, </booktitle> <address> CA, </address> <publisher> IEEE Comput. Soc.Press, </publisher> <pages> pp. 144-50, </pages> <year> 1996. </year>
Reference-contexts: Random data allocation has been proposed for non real-time system such as RAMA parallel file system proposed by Miller and Katz [22]. However, random data allocation is not considered in almost any real-time system for multimedia applications , with the exception of the work of Tewari et all <ref> [30] </ref>. They propose a video server with random placement of data blocks on disks. However, they do not consider data block replication and do not address the problem of short range load imbalance 2 .
Reference: [31] <author> F.A. Tobagi, J. Pang, R. Baird, M. Gang, </author> <title> "Streaming RAID A Disk Management System For Video Files" ACM Multimedia 93, </title> <address> pp.393-400, </address> <year> 1993. </year>
Reference-contexts: The great advantage of striping is that it decouples storage capacity from disk bandwidth, since each object uses the bandwidth of all disks and thus disk overloading due to skew in object popularity is not an issue.[8] <ref> [31] </ref> [15] [33] A common approach to scheduling requests when objects are striped over all disks, is to process requests 8 in cycles of constant duration synchronized across all disks. In each cycle, each active stream accesses a single block on a particular disk.
Reference: [32] <author> H. Vin, S. Rao, P. Goyal, </author> <title> "Optimizing the Placement of Multimedia Objects on Disk Arrays", </title> <booktitle> Proc. International. Conf. on Multimedia Computing and Systems, </booktitle> <publisher> IEEE Press, </publisher> <pages> pp. 158-165, </pages> <year> 1995. </year>
Reference-contexts: Also a single video may have a variable bit rate (VBR) when encoded using MPEG or other similar compression techniques. Schemes using variable size blocks [6] or a variable number of blocks per cycle per stream <ref> [32] </ref> have been proposed but, due to space limitations we are not able to discuss them in any detail. How to provide VCR functionality on this type of system is also an issue.
Reference: [33] <author> J.L. Wolf, P.S. Yu, H. Shachnai, </author> <title> "DASD Dancing: A Disk Load Balancing Optimization Scheme for Video-on-Demand Computer SYSTEMS". </title> <booktitle> SIGMETRICS 1995,pp.157-166, </booktitle> <year> 1995. </year>
Reference-contexts: The great advantage of striping is that it decouples storage capacity from disk bandwidth, since each object uses the bandwidth of all disks and thus disk overloading due to skew in object popularity is not an issue.[8] [31] [15] <ref> [33] </ref> A common approach to scheduling requests when objects are striped over all disks, is to process requests 8 in cycles of constant duration synchronized across all disks. In each cycle, each active stream accesses a single block on a particular disk.
Reference: [34] <author> B.L. Worthington, G.R. Ganger, Y.N. Patt, J. Wilkes, </author> <title> "On-Line Extraction of SCSI Disk Drive Parameters" SIGMETRICS 95, </title> <address> pp.146-156, </address> <year> 1995. </year>
Reference-contexts: These parameters were obtained experimentally as in [27] <ref> [34] </ref>. The disk layout, including number of zones, number of heads, sector size, number of cylinders per zone, track size per zone, and track skew factor per zone, were obtained from information on the disk (s) using SCSI commands.
Reference: [35] <author> P. Yu, M. Chen and D. Kandlur, </author> <title> "Design and Analysis of a Grouped Sweeping Scheme for Multimedia Storage Management", </title> <address> NOSSDAV'92, pp.44-55, </address> <year> 1992. </year> <month> 40 </month>
References-found: 35

