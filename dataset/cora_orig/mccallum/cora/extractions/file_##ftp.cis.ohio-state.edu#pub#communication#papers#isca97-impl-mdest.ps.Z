URL: file://ftp.cis.ohio-state.edu/pub/communication/papers/isca97-impl-mdest.ps.Z
Refering-URL: http://www.cis.ohio-state.edu/~panda/wormhole_pub.html
Root-URL: 
Email: stunkel@watson.ibm.com fsivaram,pandag@cis.ohio-state.edu  
Title: Implementing Multidestination Worms in Switch-Based Parallel Systems: Architectural Alternatives and their Impact  
Author: Craig B. Stunkel Rajeev Sivaram Dhabaleswar K. Panda P. O. 
Address: Yorktown Heights, NY 10598 Columbus, OH 43210  
Affiliation: IBM T. J. Watson Research Center Dept. of Computer and Information Science  Box 218 The Ohio State University  
Note: To appear in the Proceedings of the 24th ACM Annual International Symposium on Computer Architecture (ISCA '97), June 1997, Denver, Colorado.  
Abstract: Multidestination message passing has been proposed as an attractive mechanism for efficiently implementing multicast and other collective operations on direct networks. However, applying this mechanism to switch-based parallel systems is non-trivial. In this paper we propose alternative switch architectures with differing buffer organizations to implement multidestination worms on switch-based parallel systems. First, we discuss issues related to such implementation (deadlock-freedom, replication mechanisms, header encoding, and routing). Next, we demonstrate how an existing central-buffer-based switch architecture supporting unicast message passing can be enhanced to accommodate multidestination message passing. Similarly, implementing multidestination worms on an input-buffer-based switch architecture is discussed. Both of these implementations are evaluated against each other as well as against a software-based scheme using the central buffer organization. Simulation experiments under a range of traffic (multiple mul-ticast, bimodal, varying degree of multicast, and message length) and system size are used for evaluation. The study demonstrates the superiority of the central-buffer-based switch architecture. It also indicates that under bimodal traffic the central-buffer-based hardware multicast implementation affects background unicast traffic less adversely compared to a software-based multicast implementation. Thus, multidestination message passing can easily be applied to switch-based parallel systems to deliver good collective communication performance. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> ANDREWS, J. B., BECKMANN, C. J., AND POULSEN, D. K. </author> <title> Notification and multicast networks for synchronization and coherence. </title> <journal> Journal of Parallel and Distributed Computing 15 (Aug. 1992), </journal> <volume> 332 350. </volume>
Reference-contexts: The architectures proposed in the current paper allow multicast for packets as large as the buffer size at the switches and the technique works well for both long and short messages. An-drews et al. <ref> [1] </ref> have proposed a method for tree based multicast using bit-string encoding in the context of dance-hall architectures. However this work only focuses on store and forward networks and short message lengths. Some parallel systems like the CM-5 [16], Meiko CS2 [4] etc. provide facilities for multicasting.
Reference: [2] <author> BALA, V., BRUCK, J., CYPHER, R., ELUSTONDO, P., HO, A., HO, C.-T., KIPNIS, S., AND SNIR, M. </author> <title> CCL: A Portable and Tunable Collective Communication Library for Scalable Parallel Computers. </title> <booktitle> In Proceedings of the International Parallel Processing Symposium (1994). </booktitle>
Reference-contexts: All of these systems are fl This research is supported in part by NSF Grant MIP-9309627, NSF Career Award MIP-9502294 and an IBM Cooperative Fellowship. being used to support either the distributed-memory or distributed-shared memory programming paradigms. For efficient support of either paradigm, these systems require fast collective communication <ref> [2, 20] </ref> support, as defined by the Message Passing Interface (MPI) Standard, from the underlying communication subsystem. Among the set of collective communication operations, broadcast and multicast are fundamental and they are used in several other operations like barrier synchronization and reduction [25].
Reference: [3] <author> BARNETT, M., PAYNE, D. G., AND DE GEIJN, R. V. </author> <title> Optimal Broadcasting in Mesh-Connected Architectures. </title> <type> Tech. Rep. </type> <institution> TR91-38, Dept. of Computer Science, Universityof Texas at Austin, </institution> <month> Dec </month> <year> 1991. </year>
Reference-contexts: Thus, it is essential to reduce latency of broadcast and multicast operations on these systems to achieve high performance parallel computation. Many software schemes have been recently proposed in the literature to efficiently implement broadcast and multicast in wormhole-routed k-ary n-cube networks <ref> [3, 21] </ref>, multistage interconnection networks [38], and irregular networks [14]. All of these schemes use point-to-point (unicast) message passing and require multiple contention-free phases to achieve fast broadcast and mul-ticast. For multicasting to d destinations, these schemes typically require dlog 2 (d + 1)e communication phases.
Reference: [4] <author> BEECROFT, J., HOMEWOOD, M., AND MCLAREN, M. </author> <title> Meiko CS-2 Interconnect Elan-Elite Design. </title> <note> Parallel Computing 20 (Nov 1994), 16271638. </note>
Reference-contexts: This switching technique is being used with a wide variety of topologies. Examples include k-ary n-cube networks (Cray T3D [7], Intel Paragon [11], Ncube [10]), fat-tree networks (CM-5 [16], Meiko CS2 <ref> [4] </ref>), and multistage interconnection networks (IBM SP1/SP2 [35, 36]). All of these systems are fl This research is supported in part by NSF Grant MIP-9309627, NSF Career Award MIP-9502294 and an IBM Cooperative Fellowship. being used to support either the distributed-memory or distributed-shared memory programming paradigms. <p> Firstly, it does not require the costly feedback architecture required under synchronous replication. Secondly, it is more efficient because blocked branches don't block other branches (in fact, there is no dependence across branches). Finally, many current day switches already provide for relatively large buffers at the switches <ref> [4, 36] </ref> making the satis faction of the deadlock-freedom requirement under asynchronous replication easier. In this paper we present two alternative implementations of multidestination worms with asynchronous replication. The two implementations differ primarily in the way they guarantee that an arriving multidestination worm can eventually be completely buffered. <p> An-drews et al. [1] have proposed a method for tree based multicast using bit-string encoding in the context of dance-hall architectures. However this work only focuses on store and forward networks and short message lengths. Some parallel systems like the CM-5 [16], Meiko CS2 <ref> [4] </ref> etc. provide facilities for multicasting. However, the CM-5 uses a separate network for multicast operations and only one multicast is allowed in this network at any given time. Data-less multicasts or eurekas are supported in the Cray T3E [31] in the same network used for normal data communication.
Reference: [5] <author> CHIANG, C. M., AND NI, L. M. </author> <title> Multi-Address Encoding for Mul-ticast. </title> <booktitle> In Proceedings of the Parallel Computer Routing and Communication Workshop (May 1994), </booktitle> <pages> pp. 146160. </pages>
Reference-contexts: These schemes differ in the following characteristics: size of the header required for encoding, knowledge required at the switches about the system topology, complexity and speed of the decoding logic required at the switches, and the multicast sets that can be covered using these schemes <ref> [5, 32] </ref>. It must be emphasized that the encoding and decoding mechanism used for routing a multidestination worm is independent of the scheme adopted for replicating a multidestination worm at a switch. In [32] we have proposed a multiport encoding scheme for mul-tidestination worms. <p> Thus, a single phase implementation may be preferable in such systems, perhaps at a slight additional decoding logic cost. One form of header encoding that accomplishes multicast to arbitrary multicast destination sets in a single communication phase is bit-string encoding <ref> [5, 27] </ref>. The encoding consists of N bits where N is the system size, with a `1' bit in the ith bit position indicating that processor i is a multicast destination.
Reference: [6] <author> CHIANG, C. M., AND NI, L. M. </author> <title> Deadlock-Free Multi-Head Wormhole Routing. </title> <booktitle> In Proceedings of the First High Performance Computing-Asia (1995). </booktitle>
Reference-contexts: introduce the concept of multidestination worms in the context of switch-based parallel systems and discuss some of the issues to be considered in implementing them. 3 Issues in Implementing Multidestination Worms The path-based multicast proposed for direct networks [18, 26] has been shown to lead to deadlock in unidirectional MINs <ref> [6] </ref>. Even without this constraint, path-based multicast is highly inefficient because the network has to be traversed multiple times, and flits of the message have to be copied and forwarded by the network interface associated with the nodes. <p> Thus any branch of the multidestination worm that is blocked can block all other branches. This replication mechanism was originally proposed in the context of pure wormhole routing and is susceptible to deadlock. Furthermore it requires some kind of feedback architecture to ensure that the flits proceed in lock-step <ref> [6] </ref>. Asynchronous replication [6, 27] is an alternative mechanism that allows flits of a multidestination worm to be forwarded to the subset of requested output ports that the worm successfully reserves. <p> This replication mechanism was originally proposed in the context of pure wormhole routing and is susceptible to deadlock. Furthermore it requires some kind of feedback architecture to ensure that the flits proceed in lock-step [6]. Asynchronous replication <ref> [6, 27] </ref> is an alternative mechanism that allows flits of a multidestination worm to be forwarded to the subset of requested output ports that the worm successfully reserves. <p> Even this method of replication is susceptible to deadlock. To prevent deadlock under synchronous replication, deadlock avoidance schemes have been proposed that arbitrate between mul-tidestination packets at a switch to prevent cyclic wait <ref> [6] </ref>. To prevent deadlock under asynchronous replication, switches must be equipped with buffers large enough to store the largest packet in the system. <p> Kesavan and Panda [15] have studied the problem of multiple multicast for meshes using both software based and hardware path based multicasts. In the context of switch based parallel systems, Chiang and Ni have proposed a method for synchronous replication of multides-tination worms <ref> [6] </ref> adopting a deadlock avoidance scheme at the switches. A somewhat related multicasting technique proposed in the context of DSM systems based on direct networks is the tree based multicasting scheme proposed in [19]. Instead of guaranteeing freedom from deadlock, a deadlock recovery scheme is proposed that prunes blocked branches.
Reference: [7] <author> CRAY RESEARCH, INC. </author> <title> Cray T3D System Architecture Overview, </title> <year> 1993. </year>
Reference-contexts: 1 Introduction The wormhole-routing switching technique is the current trend in building parallel systems due to inherent advantages such as low-latency communication and reduced communication hardware overhead [9, 23]. This switching technique is being used with a wide variety of topologies. Examples include k-ary n-cube networks (Cray T3D <ref> [7] </ref>, Intel Paragon [11], Ncube [10]), fat-tree networks (CM-5 [16], Meiko CS2 [4]), and multistage interconnection networks (IBM SP1/SP2 [35, 36]). <p> For multicasting to d destinations, these schemes typically require dlog 2 (d + 1)e communication phases. Since the ratio of communication start-up time to propagation time is quite high on current parallel systems <ref> [7, 11, 35] </ref>, such a software-based unicast message-passing approach leads to very high latency for broadcast and multicast operations. In addition, under hybrid unicast and multicast traffic, the software-based approach leads to low throughput from the network.
Reference: [8] <author> DAI, D., AND PANDA, D. K. </author> <title> Reducing Cache Invalidation Overheads in Wormhole DSMs Using Multidestination Message Passing. </title> <booktitle> In International Conference on Parallel Processing (Chicago, </booktitle> <address> IL, </address> <month> Aug </month> <year> 1996), </year> <pages> pp. </pages> <month> I:138145. </month>
Reference-contexts: This is because with cache invalidation only the source node has information about the destination set <ref> [8] </ref>. Thus, a single phase implementation may be preferable in such systems, perhaps at a slight additional decoding logic cost. One form of header encoding that accomplishes multicast to arbitrary multicast destination sets in a single communication phase is bit-string encoding [5, 27].
Reference: [9] <author> DALLY, W. J., AND SEITZ, C. L. </author> <title> Deadlock-Free Message Routing in Multiprocessor Interconnection Networks. </title> <journal> IEEE Transactions on Computers (May 1987), </journal> <volume> 547553. </volume>
Reference-contexts: 1 Introduction The wormhole-routing switching technique is the current trend in building parallel systems due to inherent advantages such as low-latency communication and reduced communication hardware overhead <ref> [9, 23] </ref>. This switching technique is being used with a wide variety of topologies. Examples include k-ary n-cube networks (Cray T3D [7], Intel Paragon [11], Ncube [10]), fat-tree networks (CM-5 [16], Meiko CS2 [4]), and multistage interconnection networks (IBM SP1/SP2 [35, 36]).
Reference: [10] <author> DUZETT, B., AND BUCK, R. </author> <title> An Overview of the Ncube-3 Supercomputer. </title> <booktitle> In Proceedings of the Frontiers of Massively Parallel Computation (1992), </booktitle> <pages> pp. 458464. </pages>
Reference-contexts: This switching technique is being used with a wide variety of topologies. Examples include k-ary n-cube networks (Cray T3D [7], Intel Paragon [11], Ncube <ref> [10] </ref>), fat-tree networks (CM-5 [16], Meiko CS2 [4]), and multistage interconnection networks (IBM SP1/SP2 [35, 36]).
Reference: [11] <author> INTEL CORPORATION. </author> <title> Paragon XP/S Product Overview, </title> <year> 1991. </year>
Reference-contexts: This switching technique is being used with a wide variety of topologies. Examples include k-ary n-cube networks (Cray T3D [7], Intel Paragon <ref> [11] </ref>, Ncube [10]), fat-tree networks (CM-5 [16], Meiko CS2 [4]), and multistage interconnection networks (IBM SP1/SP2 [35, 36]). <p> For multicasting to d destinations, these schemes typically require dlog 2 (d + 1)e communication phases. Since the ratio of communication start-up time to propagation time is quite high on current parallel systems <ref> [7, 11, 35] </ref>, such a software-based unicast message-passing approach leads to very high latency for broadcast and multicast operations. In addition, under hybrid unicast and multicast traffic, the software-based approach leads to low throughput from the network.
Reference: [12] <author> KATEVENIS, M., VATSOLAKI, P., AND EFTHYMIOU, A. </author> <title> Pipelined Memory Shared Buffer for VLSI Switches. </title> <booktitle> In Proceedings of ACM SIGCOMM (August 1995), </booktitle> <pages> pp. 3948. </pages>
Reference-contexts: Alternatively the pipelined memory outlined in <ref> [12] </ref> may also serve the same purpose. Interested readers are requested to refer to [33] for further details on the approaches using the flit-wide RAMs and the register pipeline.
Reference: [13] <author> KERMANI, P., AND KLEINROCK, L. </author> <title> Virtual Cut-Through: A New Computer Communications Switching Technique. </title> <booktitle> Computer Networks 3, </booktitle> <address> 4 (Sept. </address> <year> 1979), </year> <month> 267286. </month>
Reference-contexts: Deadlock is prevented if the switches can guarantee that a packet accepted for transmission can be eventually completely buffered at the switch [32], a requirement that is weaker than virtual cut-through <ref> [13] </ref>. Asynchronous replication may be preferred for a practical implementation due to the following reasons. Firstly, it does not require the costly feedback architecture required under synchronous replication. Secondly, it is more efficient because blocked branches don't block other branches (in fact, there is no dependence across branches).
Reference: [14] <author> KESAVAN, R., BONDALAPATI, K., AND PANDA, D. K. </author> <title> Multicast on Irregular Switch-based Networks with Wormhole Routing. </title> <booktitle> In Proceedings of the International Symposium on High Performance Computer Architecture (HPCA-3) (1997), </booktitle> <pages> pp. 4857. </pages>
Reference-contexts: Many software schemes have been recently proposed in the literature to efficiently implement broadcast and multicast in wormhole-routed k-ary n-cube networks [3, 21], multistage interconnection networks [38], and irregular networks <ref> [14] </ref>. All of these schemes use point-to-point (unicast) message passing and require multiple contention-free phases to achieve fast broadcast and mul-ticast. For multicasting to d destinations, these schemes typically require dlog 2 (d + 1)e communication phases.
Reference: [15] <author> KESAVAN, R., AND PANDA, D. K. </author> <title> Minimizing Node Contention in Multiple Multicast on Wormhole k-ary n-cube Networks. </title> <booktitle> In Proceedings of the International Conference on Parallel Processing (Chicago, </booktitle> <address> IL, </address> <month> Aug </month> <year> 1996), </year> <pages> pp. </pages> <month> I:188195. </month>
Reference-contexts: As mentioned before, a path based model was proposed for multicasting on two dimensional mesh networks by Lin and Ni [18, 17]. This work was extended to a Base Routing Conformed Path (BRCP) model by Panda et al. [26] applicable to any k-ary n-cube network. Kesavan and Panda <ref> [15] </ref> have studied the problem of multiple multicast for meshes using both software based and hardware path based multicasts. In the context of switch based parallel systems, Chiang and Ni have proposed a method for synchronous replication of multides-tination worms [6] adopting a deadlock avoidance scheme at the switches.
Reference: [16] <author> LEISERSON, C. E., ET AL. </author> <title> The Network Architecture of the Connection Machine CM-5. </title> <booktitle> In Proceedings of the ACM Symposium on Parallel Algorithms and Architectures (1992), </booktitle> <pages> pp. 272285. </pages>
Reference-contexts: This switching technique is being used with a wide variety of topologies. Examples include k-ary n-cube networks (Cray T3D [7], Intel Paragon [11], Ncube [10]), fat-tree networks (CM-5 <ref> [16] </ref>, Meiko CS2 [4]), and multistage interconnection networks (IBM SP1/SP2 [35, 36]). All of these systems are fl This research is supported in part by NSF Grant MIP-9309627, NSF Career Award MIP-9502294 and an IBM Cooperative Fellowship. being used to support either the distributed-memory or distributed-shared memory programming paradigms. <p> Communication and synchronization issues on parallel systems based on regular interconnects have been studied quite extensively. Architectures using unidirectional multistage interconnection networks (MINs) and bidirectional MINs (bidi-MINs) or fat-tree networks <ref> [16, 29] </ref> fall into this category. In such networks, the regular pattern of interconnection between switches allows for simple routing functions to be defined for routing messages between nodes. In unidirectional MINs, messages must traverse all switch stages to reach the destination processors. <p> An-drews et al. [1] have proposed a method for tree based multicast using bit-string encoding in the context of dance-hall architectures. However this work only focuses on store and forward networks and short message lengths. Some parallel systems like the CM-5 <ref> [16] </ref>, Meiko CS2 [4] etc. provide facilities for multicasting. However, the CM-5 uses a separate network for multicast operations and only one multicast is allowed in this network at any given time.
Reference: [17] <author> LIN, X., K.MCKINLEY, P., AND NI, L. M. </author> <title> Deadlock free multi-cast wormhole routing in 2-D mesh multicomputers. </title> <journal> IEEE Trans. on Parallel and Distributed Systems 5, </journal> <month> 8 (Aug. </month> <year> 1994), </year> <month> 793804. </month>
Reference-contexts: As mentioned before, a path based model was proposed for multicasting on two dimensional mesh networks by Lin and Ni <ref> [18, 17] </ref>. This work was extended to a Base Routing Conformed Path (BRCP) model by Panda et al. [26] applicable to any k-ary n-cube network. Kesavan and Panda [15] have studied the problem of multiple multicast for meshes using both software based and hardware path based multicasts.
Reference: [18] <author> LIN, X., AND NI, L. M. </author> <title> Deadlock-free Multicast Wormhole Routing in Multicomputer Networks. </title> <booktitle> In Proceedings of the International Symposium on Computer Architecture (1991), </booktitle> <pages> pp. 116124. </pages>
Reference-contexts: This is due to increased network contention because of multi-phase implementation of a multicast. Such performance degradation has forced researchers and designers of parallel systems to investigate hardware support for multicast [22]. A new concept, multidestination wormhole message passing, has been introduced recently <ref> [18, 26] </ref> for efficient implementation of collective communication operations using a fewer number of communication phases. Unlike a unicast message which has a single destination, such a mechanism allows a message to have multiple destinations. <p> These worms get routed on the data network together with the unicast messages. Using such worms it has been shown that broadcast and multicast operations on k-ary n-cube networks with different routing schemes (e-cube, adaptive, Hamiltonian, etc.) can be implemented with significantly reduced latency <ref> [18, 26] </ref> compared to unicast-based schemes. This mechanism and the associated schemes were specifically developed for direct networks with k-ary n-cube topologies in mind and thus cannot be easily extended to switch-based systems. <p> In the next section, we introduce the concept of multidestination worms in the context of switch-based parallel systems and discuss some of the issues to be considered in implementing them. 3 Issues in Implementing Multidestination Worms The path-based multicast proposed for direct networks <ref> [18, 26] </ref> has been shown to lead to deadlock in unidirectional MINs [6]. Even without this constraint, path-based multicast is highly inefficient because the network has to be traversed multiple times, and flits of the message have to be copied and forwarded by the network interface associated with the nodes. <p> As mentioned before, a path based model was proposed for multicasting on two dimensional mesh networks by Lin and Ni <ref> [18, 17] </ref>. This work was extended to a Base Routing Conformed Path (BRCP) model by Panda et al. [26] applicable to any k-ary n-cube network. Kesavan and Panda [15] have studied the problem of multiple multicast for meshes using both software based and hardware path based multicasts.
Reference: [19] <author> MALUMBRES, M. P., DUATO, J., AND TORELLAS, J. </author> <title> An Efficient Implementation of Tree-Based Multicast Routing for Distributed Shared-Memory Multiprocessors. </title> <booktitle> In Proceedings of the Eighth IEEE Symposium on Parallel and Distributed Processing (New Orleans, </booktitle> <address> LA, </address> <month> October </month> <year> 1996), </year> <pages> pp. 186189. </pages>
Reference-contexts: A somewhat related multicasting technique proposed in the context of DSM systems based on direct networks is the tree based multicasting scheme proposed in <ref> [19] </ref>. Instead of guaranteeing freedom from deadlock, a deadlock recovery scheme is proposed that prunes blocked branches. This method is effective only for short messages as prevalent in a distributed shared memory system.
Reference: [20] <author> MCKINLEY, P. K., AND ROBINSON, D. F. </author> <title> Collective Communication in Wormhole-Routed Massively Parallel Computers. </title> <note> IEEE Computer (Dec 1995), 3950. </note>
Reference-contexts: All of these systems are fl This research is supported in part by NSF Grant MIP-9309627, NSF Career Award MIP-9502294 and an IBM Cooperative Fellowship. being used to support either the distributed-memory or distributed-shared memory programming paradigms. For efficient support of either paradigm, these systems require fast collective communication <ref> [2, 20] </ref> support, as defined by the Message Passing Interface (MPI) Standard, from the underlying communication subsystem. Among the set of collective communication operations, broadcast and multicast are fundamental and they are used in several other operations like barrier synchronization and reduction [25].
Reference: [21] <author> MCKINLEY, P. K., XU, H., ESFAHANIAN, A.-H., AND NI, L. M. </author> <title> Unicast-based Multicast Communication in Wormhole-routed Networks. </title> <journal> IEEE Transactions on Parallel and Distributed Systems 5, </journal> <note> 12 (Dec 1994), 12521265. </note>
Reference-contexts: Thus, it is essential to reduce latency of broadcast and multicast operations on these systems to achieve high performance parallel computation. Many software schemes have been recently proposed in the literature to efficiently implement broadcast and multicast in wormhole-routed k-ary n-cube networks <ref> [3, 21] </ref>, multistage interconnection networks [38], and irregular networks [14]. All of these schemes use point-to-point (unicast) message passing and require multiple contention-free phases to achieve fast broadcast and mul-ticast. For multicasting to d destinations, these schemes typically require dlog 2 (d + 1)e communication phases.
Reference: [22] <author> NI, L. </author> <title> Should Scalable Parallel Computers Support Efficient Hardware Multicasting? In ICPP Workshop on Challenges for Parallel Processing (1995), </title> <journal> pp. </journal> <volume> 27. </volume>
Reference-contexts: In addition, under hybrid unicast and multicast traffic, the software-based approach leads to low throughput from the network. This is due to increased network contention because of multi-phase implementation of a multicast. Such performance degradation has forced researchers and designers of parallel systems to investigate hardware support for multicast <ref> [22] </ref>. A new concept, multidestination wormhole message passing, has been introduced recently [18, 26] for efficient implementation of collective communication operations using a fewer number of communication phases. Unlike a unicast message which has a single destination, such a mechanism allows a message to have multiple destinations.
Reference: [23] <author> NI, L., AND MCKINLEY, P. K. </author> <title> A Survey of Wormhole Routing Techniques in Direct Networks. </title> <journal> IEEE Computer (Feb. </journal> <year> 1993), </year> <month> 6276. </month>
Reference-contexts: 1 Introduction The wormhole-routing switching technique is the current trend in building parallel systems due to inherent advantages such as low-latency communication and reduced communication hardware overhead <ref> [9, 23] </ref>. This switching technique is being used with a wide variety of topologies. Examples include k-ary n-cube networks (Cray T3D [7], Intel Paragon [11], Ncube [10]), fat-tree networks (CM-5 [16], Meiko CS2 [4]), and multistage interconnection networks (IBM SP1/SP2 [35, 36]).
Reference: [24] <author> NUPAIROJ, N., AND NI, L. M. </author> <title> Performance Metrics and Measurement Techniques of Collective Communication Services. </title> <booktitle> In First International Workshop on Communication and Architectural Support for Network-Based Parallel Computing (CANPC '97), Lecture Notes in Computer Science 1199 (February 1997), </booktitle> <pages> pp. 212226. </pages>
Reference-contexts: The definition of multicast latency is problematic: latency can be defined as (a) the latency of the last received message of the mul-ticast, or (b) as average of the latencies of each received message of the multicast. Nupairoj and Ni <ref> [24] </ref> argue that (a) is the more important term in assessing message-passing collective communication performance. In another example, shared-memory systems multicasts might be used for cache line invalidations to multiple destinations, and the source must wait for the last received (and acknowledged) invalidation before modifying the cache line.
Reference: [25] <author> PANDA, D. K. </author> <title> Issues in Designing Efficient and Practical Algorithms for Collective Communication in Wormhole-Routed Systems. </title> <booktitle> In ICPP Workshop on Challenges for Parallel Processing (1995), </booktitle> <pages> pp. 815. </pages>
Reference-contexts: Among the set of collective communication operations, broadcast and multicast are fundamental and they are used in several other operations like barrier synchronization and reduction <ref> [25] </ref>. Thus, it is essential to reduce latency of broadcast and multicast operations on these systems to achieve high performance parallel computation.
Reference: [26] <author> PANDA, D. K., SINGAL, S., AND PRABHAKARAN, P. </author> <title> Multidesti-nation Message Passing Mechanism Conforming to Base Wormhole Routing Scheme. </title> <booktitle> In Proceedings of the Parallel Computer Routing and Communication Workshop (1994), </booktitle> <pages> pp. 131145. </pages>
Reference-contexts: This is due to increased network contention because of multi-phase implementation of a multicast. Such performance degradation has forced researchers and designers of parallel systems to investigate hardware support for multicast [22]. A new concept, multidestination wormhole message passing, has been introduced recently <ref> [18, 26] </ref> for efficient implementation of collective communication operations using a fewer number of communication phases. Unlike a unicast message which has a single destination, such a mechanism allows a message to have multiple destinations. <p> These worms get routed on the data network together with the unicast messages. Using such worms it has been shown that broadcast and multicast operations on k-ary n-cube networks with different routing schemes (e-cube, adaptive, Hamiltonian, etc.) can be implemented with significantly reduced latency <ref> [18, 26] </ref> compared to unicast-based schemes. This mechanism and the associated schemes were specifically developed for direct networks with k-ary n-cube topologies in mind and thus cannot be easily extended to switch-based systems. <p> In the next section, we introduce the concept of multidestination worms in the context of switch-based parallel systems and discuss some of the issues to be considered in implementing them. 3 Issues in Implementing Multidestination Worms The path-based multicast proposed for direct networks <ref> [18, 26] </ref> has been shown to lead to deadlock in unidirectional MINs [6]. Even without this constraint, path-based multicast is highly inefficient because the network has to be traversed multiple times, and flits of the message have to be copied and forwarded by the network interface associated with the nodes. <p> As mentioned before, a path based model was proposed for multicasting on two dimensional mesh networks by Lin and Ni [18, 17]. This work was extended to a Base Routing Conformed Path (BRCP) model by Panda et al. <ref> [26] </ref> applicable to any k-ary n-cube network. Kesavan and Panda [15] have studied the problem of multiple multicast for meshes using both software based and hardware path based multicasts.
Reference: [27] <author> PANDA, D. K., AND SIVARAM, R. </author> <title> Fast Broadcast and Multicast in Wormhole Multistage Networks with Multidestination Worms. </title> <type> Tech. Rep. </type> <institution> OSU-CISRC-4/95-TR21, Dept. of Computer and Information Science, The Ohio State University, </institution> <month> April </month> <year> 1995. </year>
Reference-contexts: This replication mechanism was originally proposed in the context of pure wormhole routing and is susceptible to deadlock. Furthermore it requires some kind of feedback architecture to ensure that the flits proceed in lock-step [6]. Asynchronous replication <ref> [6, 27] </ref> is an alternative mechanism that allows flits of a multidestination worm to be forwarded to the subset of requested output ports that the worm successfully reserves. <p> Thus, a single phase implementation may be preferable in such systems, perhaps at a slight additional decoding logic cost. One form of header encoding that accomplishes multicast to arbitrary multicast destination sets in a single communication phase is bit-string encoding <ref> [5, 27] </ref>. The encoding consists of N bits where N is the system size, with a `1' bit in the ith bit position indicating that processor i is a multicast destination. <p> To decode a bit-string encoded header a switch must possess knowledge about the processors that can be reached through each of its output ports. This reachability information <ref> [27] </ref> can be encoded using a similar N bit string for each output port with `1' bits denoting processors that are reachable via the output port. Such an N -bit string is associated with each output port. <p> Alternatively a multidestination worm could just travel to the LCA stage and then cover all the destinations by replicating on the way back <ref> [27] </ref>. Since the same set of destinations can be reached from any switch in the LCA stage, choice exists in both methods for determining the path taken upto the LCA stageone can decide to deterministically route messages to the LCA stage or to make the choice adaptively.
Reference: [28] <author> QIAO, W., AND NI, L. M. </author> <title> Adaptive Routing in Irregular Networks Using Cut-Through Switches. </title> <booktitle> In Proceedings of the International Conference on Parallel Processing (Chicago, </booktitle> <address> IL, </address> <month> Aug </month> <year> 1996), </year> <pages> pp. </pages> <address> I:52 60. </address>
Reference-contexts: Another class of switch-based parallel system that is becoming popular is networks of workstations (NOWs/COWs). These systems typically consist of workstations interconnected with switches in irregular topologies. Deadlock free routing of messages in such networks is a challenging problem <ref> [28, 30] </ref>. Figure 1 (c) shows an example of an irregular network of workstations. The schemes and designs proposed in this paper are applicable to all categories of switch-based parallel systems. However, for performance comparisons we restrict ourselves to bidirectional MIN topologies.
Reference: [29] <author> SCHERSON, I. D., AND CHIEN, C.-H. </author> <title> Least common ancestor networks. </title> <booktitle> In Proc. 7th Int. Parallel Processing Symp. </booktitle> <year> (1993), </year> <pages> pp. 507 513. </pages>
Reference-contexts: Communication and synchronization issues on parallel systems based on regular interconnects have been studied quite extensively. Architectures using unidirectional multistage interconnection networks (MINs) and bidirectional MINs (bidi-MINs) or fat-tree networks <ref> [16, 29] </ref> fall into this category. In such networks, the regular pattern of interconnection between switches allows for simple routing functions to be defined for routing messages between nodes. In unidirectional MINs, messages must traverse all switch stages to reach the destination processors. <p> In networks like the bidi-MINs, there exists considerable choice in the way a multidestination message can get routed. A multidestination message could replicate downwards on its forward path while going to the least common ancestor (LCA) <ref> [29] </ref> stage of the source and destinations and then cover the remaining destinations by replicating on the way back from the LCA stage 1 . Alternatively a multidestination worm could just travel to the LCA stage and then cover all the destinations by replicating on the way back [27].
Reference: [30] <author> SCHROEDER, M. D., ET AL. Autonet: </author> <title> A High-speed, Self-configuring Local Area Network Using Point-to-point Links. </title> <type> Tech. Rep. </type> <note> SRC research report 59, </note> <month> DEC, Apr </month> <year> 1990. </year>
Reference-contexts: Another class of switch-based parallel system that is becoming popular is networks of workstations (NOWs/COWs). These systems typically consist of workstations interconnected with switches in irregular topologies. Deadlock free routing of messages in such networks is a challenging problem <ref> [28, 30] </ref>. Figure 1 (c) shows an example of an irregular network of workstations. The schemes and designs proposed in this paper are applicable to all categories of switch-based parallel systems. However, for performance comparisons we restrict ourselves to bidirectional MIN topologies. <p> For irregular topologies, routing can be performed much like the routing described for bidi-MINs by assuming a tree structure superimposed on the irregular network. Such tree structures are typically used in irregular networks to provide deadlock-free routing of unicast messages. For example, in the up*/down* <ref> [30] </ref> routing algorithm, a tree structure is imposed on the networks and links are uniquely identified as `up' links or `down' links depending on whether they take you closer or farther away from the root.
Reference: [31] <author> SCOTT, S. L. </author> <title> Synchronization and communication in the T3E multiprocessor. </title> <booktitle> In ASPLOS-VII (Sept. </booktitle> <year> 1996). </year>
Reference-contexts: Some parallel systems like the CM-5 [16], Meiko CS2 [4] etc. provide facilities for multicasting. However, the CM-5 uses a separate network for multicast operations and only one multicast is allowed in this network at any given time. Data-less multicasts or eurekas are supported in the Cray T3E <ref> [31] </ref> in the same network used for normal data communication. Using data-less multicast packets avoids the deadlock scenarios outlined in this paper and the solution does not extend to multicast of data packets.
Reference: [32] <author> SIVARAM, R., PANDA, D. K., AND STUNKEL, C. B. </author> <title> Efficient Broadcast and Multicast on Multistage Interconnection Networks using Multiport Encoding. </title> <booktitle> In Proceedings of the 8th IEEE Symposium on Parallel and Distributed Processing (Oct 1996), </booktitle> <pages> pp. 3645. </pages>
Reference-contexts: This mechanism and the associated schemes were specifically developed for direct networks with k-ary n-cube topologies in mind and thus cannot be easily extended to switch-based systems. In our recent work <ref> [32, 33] </ref>, we have extended the multidesti-nation message passing concept to multistage interconnection networks. This extension involves a new concept called multiport en coding and an asynchronous replication mechanism at the input buffers of a switch to implement deadlock-free multicast. <p> In this work, it has been shown that the latency of a single multicast/broadcast operation can be reduced up to a factor of 4 compared to the software-based scheme using unicast messages. The results in <ref> [32] </ref> show the proof-of-concept of multidestina-tion message passing in MINs. However, the paper does not explore other architectural alternatives and their impact. For example, the IBM SP2 [36] uses a central-buffer-based buffer organization in a switch for unicast message passing, and this potentially provides a powerful basis for worm replication. <p> However, the paper does not explore other architectural alternatives and their impact. For example, the IBM SP2 [36] uses a central-buffer-based buffer organization in a switch for unicast message passing, and this potentially provides a powerful basis for worm replication. Similarly, the multiport-based encoding in <ref> [32] </ref> allows a multicast to be implemented in multiple phases. Even though this approach requires fewer phases than the unicast-based software scheme, a challenging problem is to implement multicast in even fewer phases using better encoding schemes. <p> To prevent deadlock under asynchronous replication, switches must be equipped with buffers large enough to store the largest packet in the system. Deadlock is prevented if the switches can guarantee that a packet accepted for transmission can be eventually completely buffered at the switch <ref> [32] </ref>, a requirement that is weaker than virtual cut-through [13]. Asynchronous replication may be preferred for a practical implementation due to the following reasons. Firstly, it does not require the costly feedback architecture required under synchronous replication. <p> These schemes differ in the following characteristics: size of the header required for encoding, knowledge required at the switches about the system topology, complexity and speed of the decoding logic required at the switches, and the multicast sets that can be covered using these schemes <ref> [5, 32] </ref>. It must be emphasized that the encoding and decoding mechanism used for routing a multidestination worm is independent of the scheme adopted for replicating a multidestination worm at a switch. In [32] we have proposed a multiport encoding scheme for mul-tidestination worms. <p> It must be emphasized that the encoding and decoding mechanism used for routing a multidestination worm is independent of the scheme adopted for replicating a multidestination worm at a switch. In <ref> [32] </ref> we have proposed a multiport encoding scheme for mul-tidestination worms. This encoding mechanism allows extremely simple decoding logic at the switches. In addition, switches are not required to know the topology of the MIN network.
Reference: [33] <author> SIVARAM, R., PANDA, D. K., AND STUNKEL, C. B. </author> <title> Efficient Broadcast and Multicast on Multistage Interconnection Networks using Multiport Encoding. </title> <type> Tech. Rep. </type> <institution> OSU-CISRC-3/96-TR15, The Ohio State University, </institution> <month> March </month> <year> 1996. </year>
Reference-contexts: This mechanism and the associated schemes were specifically developed for direct networks with k-ary n-cube topologies in mind and thus cannot be easily extended to switch-based systems. In our recent work <ref> [32, 33] </ref>, we have extended the multidesti-nation message passing concept to multistage interconnection networks. This extension involves a new concept called multiport en coding and an asynchronous replication mechanism at the input buffers of a switch to implement deadlock-free multicast. <p> This would require a chunk-wide crossbar in a naive implementation, which would increase the wiring complexity within the switch chip. To alleviate this problem we have proposed alternative implementations which perform as well as an implementation with a chunk-wide crossbar <ref> [33] </ref>. <p> Alternatively the pipelined memory outlined in [12] may also serve the same purpose. Interested readers are requested to refer to <ref> [33] </ref> for further details on the approaches using the flit-wide RAMs and the register pipeline.
Reference: [34] <author> SIVARAM, R., STUNKEL, C. B., AND PANDA, D. K. </author> <title> A Reliable Hardware Barrier Synchronization Scheme. </title> <booktitle> In Proceedings of the 11th IEEE International Parallel Processing Symposium (April 1997). </booktitle>
Reference-contexts: We are currently studying the impact of enhancements to the switch architecture to support reliable barrier synchronization <ref> [34] </ref>. The relative performance of such a scheme compared to an efficient software-based scheme in terms of absolute barrier latency and in terms of their impact on other network traffic is being evaluated. We are also studying the the impact of hot spot traffic and other traffic patterns.
Reference: [35] <author> STUNKEL, C. B., SHEA, D., GRICE, D. G., HOCHSCHILD, P. H., AND TSAO, M. </author> <title> The SP1 High Performance Switch. </title> <booktitle> In Scalable High Performance Computing Conference (1994), </booktitle> <pages> pp. 150157. </pages>
Reference-contexts: This switching technique is being used with a wide variety of topologies. Examples include k-ary n-cube networks (Cray T3D [7], Intel Paragon [11], Ncube [10]), fat-tree networks (CM-5 [16], Meiko CS2 [4]), and multistage interconnection networks (IBM SP1/SP2 <ref> [35, 36] </ref>). All of these systems are fl This research is supported in part by NSF Grant MIP-9309627, NSF Career Award MIP-9502294 and an IBM Cooperative Fellowship. being used to support either the distributed-memory or distributed-shared memory programming paradigms. <p> For multicasting to d destinations, these schemes typically require dlog 2 (d + 1)e communication phases. Since the ratio of communication start-up time to propagation time is quite high on current parallel systems <ref> [7, 11, 35] </ref>, such a software-based unicast message-passing approach leads to very high latency for broadcast and multicast operations. In addition, under hybrid unicast and multicast traffic, the software-based approach leads to low throughput from the network.
Reference: [36] <author> STUNKEL, C. B., SHEA, D. G., ABALI, B., ET AL. </author> <title> The SP2 High-Performance Switch. </title> <journal> IBM System Journal 34, </journal> <volume> 2 (1995), </volume> <pages> 185204. </pages>
Reference-contexts: This switching technique is being used with a wide variety of topologies. Examples include k-ary n-cube networks (Cray T3D [7], Intel Paragon [11], Ncube [10]), fat-tree networks (CM-5 [16], Meiko CS2 [4]), and multistage interconnection networks (IBM SP1/SP2 <ref> [35, 36] </ref>). All of these systems are fl This research is supported in part by NSF Grant MIP-9309627, NSF Career Award MIP-9502294 and an IBM Cooperative Fellowship. being used to support either the distributed-memory or distributed-shared memory programming paradigms. <p> The results in [32] show the proof-of-concept of multidestina-tion message passing in MINs. However, the paper does not explore other architectural alternatives and their impact. For example, the IBM SP2 <ref> [36] </ref> uses a central-buffer-based buffer organization in a switch for unicast message passing, and this potentially provides a powerful basis for worm replication. Similarly, the multiport-based encoding in [32] allows a multicast to be implemented in multiple phases. <p> Firstly, it does not require the costly feedback architecture required under synchronous replication. Secondly, it is more efficient because blocked branches don't block other branches (in fact, there is no dependence across branches). Finally, many current day switches already provide for relatively large buffers at the switches <ref> [4, 36] </ref> making the satis faction of the deadlock-freedom requirement under asynchronous replication easier. In this paper we present two alternative implementations of multidestination worms with asynchronous replication. The two implementations differ primarily in the way they guarantee that an arriving multidestination worm can eventually be completely buffered. <p> The two implementations differ primarily in the way they guarantee that an arriving multidestination worm can eventually be completely buffered. One of the implementations uses a central-buffer-based switch architecture. This architecture uses an output queuing technique similar to the ones used in switches of the IBM SP2 <ref> [36] </ref> for unicast message passing. The other implementation uses an input-buffer-based switch architecture. Detailed designs to implement multidestination worms on these two switch architectures are discussed in Section 4 and 5 respectively. <p> We first describe an output buffer based switch architecture very similar to the high performance switch in the IBM SP2 <ref> [36] </ref>. <p> The central buffer approach is significantly more complex, thus it is not worth considering unless it is expected to provide better performance. It is well-known that shared central buffers provide superior performance for most unicast traffic <ref> [37, 36] </ref>. The central buffer based architecture provides a dynamically-shared resource for input and output ports. In contrast, the input buffer implementation statically and evenly divides the available storage among the input ports. <p> link contention among the unicast messages of a software multicast. 7.1 Simulation parameters and methodology The default performance parameters and the central buffer model were based roughly on a contemporary switch: the SP Switch of the IBM RS/6000 SP systems which is a successor to the SP2 High Performance Switch <ref> [36] </ref>. Each switch in these systems has 8 input ports and 8 output ports, where input and output ports are typically paired and connected to another switch's input/output port pair over a bidirectional link.
Reference: [37] <author> TAMIR, Y., AND FRAZIER, G. L. </author> <title> High-performance multi-queue buffers for VLSI communication switches. </title> <booktitle> In Proc. 15st Ann. Int. Symp. on Computer Architecture (May 1988), </booktitle> <pages> pp. 343354. </pages>
Reference-contexts: The central buffer approach is significantly more complex, thus it is not worth considering unless it is expected to provide better performance. It is well-known that shared central buffers provide superior performance for most unicast traffic <ref> [37, 36] </ref>. The central buffer based architecture provides a dynamically-shared resource for input and output ports. In contrast, the input buffer implementation statically and evenly divides the available storage among the input ports.
Reference: [38] <author> XU, H., GUI, Y.-D., AND NI, L. M. </author> <title> Optimal Software Multicast in Wormhole-Routed Multistage Networks. </title> <booktitle> In Proceedings of the Supercomputing Conference (1994), </booktitle> <pages> pp. 703712. 12 </pages>
Reference-contexts: Thus, it is essential to reduce latency of broadcast and multicast operations on these systems to achieve high performance parallel computation. Many software schemes have been recently proposed in the literature to efficiently implement broadcast and multicast in wormhole-routed k-ary n-cube networks [3, 21], multistage interconnection networks <ref> [38] </ref>, and irregular networks [14]. All of these schemes use point-to-point (unicast) message passing and require multiple contention-free phases to achieve fast broadcast and mul-ticast. For multicasting to d destinations, these schemes typically require dlog 2 (d + 1)e communication phases. <p> To judge hardware multicasting versus software multicasting methods, we also implemented the binomial tree-based U-Min algorithm <ref> [38] </ref> that eliminates link contention among the unicast messages of a software multicast. 7.1 Simulation parameters and methodology The default performance parameters and the central buffer model were based roughly on a contemporary switch: the SP Switch of the IBM RS/6000 SP systems which is a successor to the SP2 High
References-found: 38

