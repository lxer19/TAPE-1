URL: http://www.cs.jhu.edu/~salzberg/morgan.ps.gz
Refering-URL: http://www.cs.jhu.edu/~salzberg/
Root-URL: http://www.cs.jhu.edu
Title: A Decision Tree System for Finding Genes in DNA  
Author: Steven Salzberg Arthur L. Delcher Kenneth H. Fasman John Henderson 
Keyword: gene finding, decision trees, dynamic programming, Markov models.  
Address: MD  Baltimore, MD 21210.  320 Charles St., Cambridge, MA 02141.  Baltimore, MD 21218. Email: jhn  
Affiliation: Department of Computer Science, Johns Hopkins University, Baltimore,  Department of Computer Science, Loyola College of Maryland,  Whitehead Institute/MIT Center for Genome Research,  Department of Computer Science, Johns Hopkins University,  
Note: Corresponding author.  
Email: Email: salzberg@cs.jhu.edu.  Email: delcher@cs.loyola.edu.  Email: ken@genome.wi.mit.edu.  drsn@cs.jhu.edu.  
Phone: 21218. Phone: 410-516-8438. Fax: 410-516-6134.  
Abstract: MORGAN is an integrated system for finding genes in vertebrate DNA sequences. MORGAN uses a variety of techniques to accomplish this task, the most distinctive of which is a decision tree classifier. The decision tree system is combined with new methods for identifying start codons, donor sites, and acceptor sites, and these are brought together in a frame-sensitive dynamic programming algorithm that finds the optimal segmentation of a DNA sequence into coding and noncoding regions (exons and introns). The optimal segmentation is dependent on a separate scoring function that takes a subsequence and assigns to it a score reflecting the probability that the sequence is an exon. The scoring functions in MORGAN are sets of decision trees that are combined to give a probability estimate. Experimental results on a database of 570 vertebrate DNA sequences show that MORGAN has excellent performance by many different measures. On a separate test set, it achieves an overall accuracy of 95%, with a correlation coefficient of 0.78 and a sensitivity and specificity for coding bases of 83% and 79%. In addition, MORGAN identifies 58% of coding exons exactly; i.e., both the beginning and end of the coding regions are predicted correctly. This paper describes the MORGAN system, including its decision tree routines and the algorithms for site recognition, and its performance on a benchmark database of vertebrate DNA. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Breiman, L., J. Friedman, R. Olshen, and C. </author> <title> Stone (1984). Classification and Regression Trees. </title> <publisher> Wadsworth Internatl. Group. </publisher>
Reference: <author> Burset, M. and R. </author> <month> Guigo </month> <year> (1996). </year> <title> Evaluation of gene structure prediction programs. </title> <booktitle> Genomics 34 (3), </booktitle> <pages> 353-367. </pages>
Reference-contexts: runs hundreds of times faster than an algorithm that computes a score at every location in the sequence. 6 Data and Methods For our experiments, we used a database of 570 vertebrate sequences that was created by Burset and Guigo, who used it to benchmark seven major gene finding systems <ref> (Burset and Guigo 1996) </ref>. This database has now been used as a benchmark in several additional studies, and thus provides a good basis for comparison among gene finders. <p> To place these numbers in context, Table 3 compares some of the summary accuracy numbers with results reported using other gene-finders on this same data. Results are shown for MORGAN on the 114 sequences in the test set. Burset and Guigo <ref> (Burset and Guigo 1996) </ref> compared all the major gene finders available to them on the complete vertebrate data set. <p> In the table, results on VEIL are taken from (Henderson et al. 1997), results on Genie and FGENEH come from (Reese et al. 1997), and results on the remaining systems come from <ref> (Burset and Guigo 1996) </ref>. VEIL's results are reported as a 5-fold cross validation where none of the test data overlapped the training data. Genie was trained on a database containing human sequences only, of which 122 sequences are contained in the 570 sequence vertebrate database.
Reference: <author> Fickett, J. and C.-S. </author> <title> Tung (1992). Assessment of protein coding measures. </title> <journal> Nucleic Acids Research 20 (24), </journal> <pages> 6441-6450. </pages>
Reference-contexts: S. Salzberg et al. 5 subsequence as it is passed to the tree. Features used here included in-frame hexamer frequency (Snyder and Stormo 1995), Fickett's asymmetry measure <ref> (Fickett and Tung 1992) </ref>, and the scores given to the donor and acceptor sites by our Markov models (described below). A set of feature values is calculated for each subsequence to be classified. <p> The position asymmetry statistic <ref> (Fickett and Tung 1992) </ref> counts the frequency of each base in each of the three codon positions.
Reference: <author> Guigo, R., S. Knudsen, N. Drake, and T. </author> <title> Smith (1992). Prediction of gene structure. </title>
Reference-contexts: A number of algorithms have been developed for this problem and implemented as systems that are in widespread use today. These systems include GRAIL (Xu et al. 1994; Xu et al. 1996), GeneID <ref> (Guigo et al. 1992) </ref>, GeneParser (Snyder and Stormo 1993; Snyder and Stormo 1995), VEIL (Henderson et al. 1997), Genie (Kulp et al. 1996), FGENEH (Solovyev et al. 1994), and SORFIND (Hutchinson and Hayden 1992). <p> Salzberg et al. 7 for donor and acceptor sites (Senapathy et al. 1990; Mount et al. 1992; Mount et al. 1995). These matrices, or similar ones based on different data sets, are used for scoring signals in the gene-finding systems GeneID <ref> (Guigo et al. 1992) </ref> and GeneParser (Snyder and Stormo 1995). There does not appear to be any good consensus pattern around stop sites, and no one has yet developed a way of identifying them other than by looking for stop codons.
Reference: <author> J. </author> <booktitle> Molecular Biology 226, </booktitle> <pages> 141-157. </pages>
Reference: <author> Henderson, J., S. Salzberg, and K. </author> <month> Fasman </month> <year> (1997). </year> <title> Finding genes in human DNA with a hidden Markov model. </title> <note> Journal of Computational Biology . to appear. </note>
Reference-contexts: A number of algorithms have been developed for this problem and implemented as systems that are in widespread use today. These systems include GRAIL (Xu et al. 1994; Xu et al. 1996), GeneID (Guigo et al. 1992), GeneParser (Snyder and Stormo 1993; Snyder and Stormo 1995), VEIL <ref> (Henderson et al. 1997) </ref>, Genie (Kulp et al. 1996), FGENEH (Solovyev et al. 1994), and SORFIND (Hutchinson and Hayden 1992). Although none of these programs completely solve the gene finding problem, most perform fairly well and are vital tools for sequence analysis. <p> Nonetheless, this study provides an important benchmark that has already become a standard. More recently, two new gene finders have been applied to the same data set. Genie (Reese et al. 1997) and VEIL <ref> (Henderson et al. 1997) </ref> are both based on hidden Markov models (HMMs). VEIL is a "pure" HMM, while Genie is a generalized HMM: a hybrid of neural network classifiers and HMMs. In the table, results on VEIL are taken from (Henderson et al. 1997), results on Genie and FGENEH come from <p> Genie (Reese et al. 1997) and VEIL <ref> (Henderson et al. 1997) </ref> are both based on hidden Markov models (HMMs). VEIL is a "pure" HMM, while Genie is a generalized HMM: a hybrid of neural network classifiers and HMMs. In the table, results on VEIL are taken from (Henderson et al. 1997), results on Genie and FGENEH come from (Reese et al. 1997), and results on the remaining systems come from (Burset and Guigo 1996). VEIL's results are reported as a 5-fold cross validation where none of the test data overlapped the training data.
Reference: <author> Hutchinson, G. and M. </author> <title> Hayden (1992). The prediction of exons through an analysis of spliceable open reading frames. </title> <journal> Nucleic Acids Research 20, </journal> <pages> 3453-3462. </pages>
Reference-contexts: These systems include GRAIL (Xu et al. 1994; Xu et al. 1996), GeneID (Guigo et al. 1992), GeneParser (Snyder and Stormo 1993; Snyder and Stormo 1995), VEIL (Henderson et al. 1997), Genie (Kulp et al. 1996), FGENEH (Solovyev et al. 1994), and SORFIND <ref> (Hutchinson and Hayden 1992) </ref>. Although none of these programs completely solve the gene finding problem, most perform fairly well and are vital tools for sequence analysis. Research on gene finding involves making continual improvements to these systems as well as developing completely new approaches.
Reference: <author> Kozak, M. </author> <year> (1987). </year> <title> An analysis of 5'-noncoding sequences from 699 vertebrate messenger RNAs. </title> <journal> Nucleic Acids Research 15 (20), </journal> <pages> 8125-8148. </pages>
Reference: <author> Kozak, M. </author> <year> (1992). </year> <title> A consideration of alternative models for the initiation of translation in eukaryotes. Critical Reviews in Biochemistry and Molecular Biology 27, </title> <type> 385-402. </type>
Reference: <author> Kulp, D., D. Haussler, M. G. Reese, and F. H. </author> <month> Eeckman </month> <year> (1996). </year> <title> A generalized hidden Markov model for the recognition of human genes in DNA. </title> <booktitle> In ISMB-96: Proc. Fourth Internatl. Conf. Intelligent Systems for Molecular Biology, </booktitle> <address> Menlo Park, CA, </address> <pages> pp. 134-141. </pages> <publisher> AAAI Press. </publisher>
Reference-contexts: These systems include GRAIL (Xu et al. 1994; Xu et al. 1996), GeneID (Guigo et al. 1992), GeneParser (Snyder and Stormo 1993; Snyder and Stormo 1995), VEIL (Henderson et al. 1997), Genie <ref> (Kulp et al. 1996) </ref>, FGENEH (Solovyev et al. 1994), and SORFIND (Hutchinson and Hayden 1992). Although none of these programs completely solve the gene finding problem, most perform fairly well and are vital tools for sequence analysis.
Reference: <author> S. Salzberg et al. 25 Mount, S. </author> <year> (1996, </year> <month> 22 March). </month> <title> AT-AC introns: An ATtACk on dogma. </title> <booktitle> Science 271 (5256), </booktitle> <pages> 1690-1692. </pages>
Reference: <author> Mount, S., C. Burks, G. Hertz, G. Stormo, O. White, and C. </author> <title> Fields (1992). Splicing signals in Drosophila: intron size, information content, and consensus sequences. </title> <journal> Nucleic Acids Research 20, </journal> <pages> 4255-4262. </pages>
Reference: <author> Mount, S., X. Peng, and E. Meier (1995, </author> <month> October). </month> <title> Some nasty little facts to bear in mind when predicting splice sites. In Gene-Finding and Gene Structure Prediction Workshop, </title> <address> Philadelphia, PA. </address>
Reference: <author> Murthy, S. K., S. Kasif, and S. Salzberg (1994, </author> <month> August). </month> <title> A system for induction of oblique decision trees. </title> <journal> Journal of Artificial Intelligence Research 2, </journal> <pages> 1-33. </pages>
Reference-contexts: Hidden Markov Models (Reese et al. 1997; Henderson et al. 1997) in contrast, use a probabilistic approach. The decision tree software in MORGAN is based on the OC1 decision tree system <ref> (Murthy et al. 1994) </ref> 2 . OC1 is a randomized decision tree system that can produce a different decision tree each time it is run, even when the training set is unchanged.
Reference: <author> Quinlan, J. R. </author> <year> (1993). </year> <title> C4.5: Programs for Machine Learning. </title> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann Publishers. </publisher>
Reference: <author> Reese, M., F. Eeckman, D. Kulp, and D. </author> <title> Haussler (1997). Improved splice site detection in Genie. </title> <booktitle> In RECOMB 97, </booktitle> <pages> pp. 232-240. </pages> <publisher> ACM Press. </publisher>
Reference-contexts: Recently, Reese et al. <ref> (Reese et al. 1997) </ref> also showed that using conditional probabilities to recognize donor and acceptor sites significantly improved the gene-finding abilities of Genie, a generalized HMM system. <p> Nonetheless, this study provides an important benchmark that has already become a standard. More recently, two new gene finders have been applied to the same data set. Genie <ref> (Reese et al. 1997) </ref> and VEIL (Henderson et al. 1997) are both based on hidden Markov models (HMMs). VEIL is a "pure" HMM, while Genie is a generalized HMM: a hybrid of neural network classifiers and HMMs. <p> VEIL is a "pure" HMM, while Genie is a generalized HMM: a hybrid of neural network classifiers and HMMs. In the table, results on VEIL are taken from (Henderson et al. 1997), results on Genie and FGENEH come from <ref> (Reese et al. 1997) </ref>, and results on the remaining systems come from (Burset and Guigo 1996). VEIL's results are reported as a 5-fold cross validation where none of the test data overlapped the training data.
Reference: <author> Salzberg, S. </author> <year> (1995). </year> <title> Locating protein coding regions in human DNA using a decision tree algorithm. </title> <journal> Journal of Computational Biology 2 (3), </journal> <pages> 473-485. </pages>
Reference-contexts: In a recent study, we found that decision trees can accurately distinguish between coding and noncoding DNA for sequences as short as 54 base pairs (bp) <ref> (Salzberg 1995) </ref>. In that study, we addressed the task of distinguishing between subsequences that are either entirely coding or entirely noncoding. The full gene finding problem is more complex, and has been posed variously as a parsing problem, a probabilistic reasoning problem, and a classification problem.
Reference: <author> Salzberg, S. </author> <year> (1997). </year> <title> A method for identifying splice sites and translational start sites in eukaryotic mRNA. </title> <note> Computer Applications in the Biosciences (CABIOS). to appear. </note>
Reference-contexts: s j ), the prior probability, is just the product of the priors of all the bases appearing in the subsequence. (Note: this prior can also be computed using conditional probabilities.) This conditional probability scoring function produces better discrimination thresholds than the standard position matrix, as we have shown elsewhere <ref> (Salzberg 1997) </ref>. Recently, Reese et al. (Reese et al. 1997) also showed that using conditional probabilities to recognize donor and acceptor sites significantly improved the gene-finding abilities of Genie, a generalized HMM system.
Reference: <author> Sankoff, D. </author> <year> (1992). </year> <title> Efficient optimal decomposition of a sequence into disjoint regions, each matched to some template in an inventory. </title> <booktitle> Mathematical Biosciences 111, </booktitle> <pages> 279-293. </pages>
Reference-contexts: It has also been used for partitioning amino acid sequences <ref> (Sankoff 1992) </ref> and many other applications. The DP formulation of Wu (Wu 1996) is most similar to ours, in that it is the only other formulation that explicitly considers all possible reading frames. The input to our dynamic programming algorithm is a complete genomic DNA sequence.
Reference: <author> Senapathy, P., M. Shapiro, and N. </author> <title> Harris (1990). Splice junctions, branch points, and exons: sequence statistics, identification, and applications to genome project. </title> <booktitle> Methods in Enzymology 183, </booktitle> <pages> 252-278. </pages>
Reference: <author> S. Salzberg et al. 26 Snyder, E. E. and G. D. </author> <month> Stormo </month> <year> (1993). </year> <title> Identification of coding regions in genomic DNA sequences: An application of dynamic programming and neural networks. </title> <journal> Nucleic Acids Research 21 (3), </journal> <pages> 607-613. </pages>
Reference: <author> Snyder, E. E. and G. D. </author> <month> Stormo </month> <year> (1995). </year> <title> Identification of coding regions in genomic DNA. </title> <journal> Journal of Molecular Biology 248, </journal> <pages> 1-18. </pages>
Reference-contexts: The internal nodes of the tree represent feature values that are tested for each 2 The OC1 system is available on the Web at http://www.cs.jhu.edu/labs/compbio/home.html and at ftp://ftp.cs.jhu.edu/pub/oc1. S. Salzberg et al. 5 subsequence as it is passed to the tree. Features used here included in-frame hexamer frequency <ref> (Snyder and Stormo 1995) </ref>, Fickett's asymmetry measure (Fickett and Tung 1992), and the scores given to the donor and acceptor sites by our Markov models (described below). A set of feature values is calculated for each subsequence to be classified. <p> Salzberg et al. 7 for donor and acceptor sites (Senapathy et al. 1990; Mount et al. 1992; Mount et al. 1995). These matrices, or similar ones based on different data sets, are used for scoring signals in the gene-finding systems GeneID (Guigo et al. 1992) and GeneParser <ref> (Snyder and Stormo 1995) </ref>. There does not appear to be any good consensus pattern around stop sites, and no one has yet developed a way of identifying them other than by looking for stop codons. <p> From the output of MORGAN, one can directly deduce the amino acid sequence of the protein encoded by the putative gene. The basic DP formulation can be expressed straightforwardly with the help of a matrix D [t; n]. (This notation is similar to that used by Snyder and Stormo <ref> (Snyder and Stormo 1995) </ref>.) D [t; n] will keep the score of the optimal parse of a sequence S ending in a subsequence of type t at location n. <p> These previous optimal parses are found in the appropriate entry of matrix D. The score P is normalized by multiplying it by the length of the sequence. Thus the algorithm will maximize the score per base for the whole sequence. This differs from previous formulations, notably GeneParser <ref> (Snyder and Stormo 1995) </ref>, that multiply probabilities instead. (For efficiency, they first convert the probability scores to log likelihoods and then add them together.) The problem with multiplying probabilities is that parses containing more exons will always score lower, even if the exons themselves get high scores. <p> The in-frame hexamer statistic captures the relative likelihood of particular hexamers occurring in coding versus noncoding sequence. For a subsequence from i to j, this measure is defined (using the same formulation as in GeneParser <ref> (Snyder and Stormo 1995) </ref>) as IF 6 (i; j) = max &gt; &gt; &gt; &gt; &gt; &lt; P P P where f k is the frequency of the hexamer from a table of in-frame hexamers computed over the coding regions in the training set, and F k is the frequency of
Reference: <author> Solovyev, V., A. Salamov, and C. </author> <title> Lawrence (1994). Predicting internal exons by oligonucleotide composition and discriminant analysis of spliceable open reading frames. </title> <journal> Nucleic Acids Res. </journal> <volume> 22, </volume> <pages> 5156-5163. </pages>
Reference-contexts: These systems include GRAIL (Xu et al. 1994; Xu et al. 1996), GeneID (Guigo et al. 1992), GeneParser (Snyder and Stormo 1993; Snyder and Stormo 1995), VEIL (Henderson et al. 1997), Genie (Kulp et al. 1996), FGENEH <ref> (Solovyev et al. 1994) </ref>, and SORFIND (Hutchinson and Hayden 1992). Although none of these programs completely solve the gene finding problem, most perform fairly well and are vital tools for sequence analysis. Research on gene finding involves making continual improvements to these systems as well as developing completely new approaches.
Reference: <author> Wu, T. </author> <year> (1996). </year> <title> A segment-based dynamic programming algorithm for predicting gene structure. </title> <editor> J. </editor> <booktitle> Computational Biology 3 (3), </booktitle> <pages> 375-394. </pages>
Reference-contexts: It has also been used for partitioning amino acid sequences (Sankoff 1992) and many other applications. The DP formulation of Wu <ref> (Wu 1996) </ref> is most similar to ours, in that it is the only other formulation that explicitly considers all possible reading frames. The input to our dynamic programming algorithm is a complete genomic DNA sequence. <p> For this reason, at every location n, we keep a separate score for each of the three reading frames. The importance of keeping separate optimal scores for each frame has also been emphasized by Wu <ref> (Wu 1996) </ref>. 5.2 Assumptions and constraints There are a number of inter-region constraints and assumptions that can be made for the gene-finding problem, and many of these were incorporated into our system.
Reference: <author> Xu, Y., R. Mural, J. Einstein, M. Shah, and E. </author> <title> Uberbacher (1996). Grail: A multi-agent neural network system for gene identification. </title> <booktitle> Proc. of the IEEE 84 (10), </booktitle> <pages> 1544-1552. </pages>
Reference: <author> Xu, Y., R. Mural, and E. </author> <title> Uberbacher (1994). Constructing gene models from accurately predicted exons: an application of dynamic programming. </title> <booktitle> Computer Applications in the Biosciences (CABIOS) 10 (6), </booktitle> <pages> 613-623. </pages>
Reference-contexts: The full gene finding problem is more complex, and has been posed variously as a parsing problem, a probabilistic reasoning problem, and a classification problem. The coding recognition module of GRAIL <ref> (Xu et al. 1994) </ref> (a neural net classifier trained using the back propagation algorithm) is an example of the classifier approach. Hidden Markov Models (Reese et al. 1997; Henderson et al. 1997) in contrast, use a probabilistic approach. <p> Dynamic programming has been used as the framework for other gene-finding systems, notably GeneParser (Snyder and Stormo 1993; Snyder and Stormo 1995) and GRAIL <ref> (Xu et al. 1994) </ref>, both of which use DP in combination with a feedforward neural network. It has also been used for partitioning amino acid sequences (Sankoff 1992) and many other applications.
Reference: <author> S. Salzberg et al. </author> <title> 27 Data Set # Genes Total Bases Coding Bases # Exons Training 454 2,282,825 360,792 2,146 Test 114 607,924 83,085 499 Non-homologous Test 97 566,962 75,972 453 Table 1: Composition of the training and test sets used for the experiments with MORGAN. </title>



Reference: <author> S. Salzberg et al. </author> <title> 31 the best previous site for each one, and marks it with a pointer, shown as an arrow in the figure. For example, acceptor sites have pointers back to donor sites, indicating candidate introns. Donor sites can have pointers back to previous start sites or acceptor sites, indicating initial and internal exons. The ends of each solid arrow in the figure mark potential exons, while the ends of the dotted arrows indicate potential introns. The optimal parse at each stop site can be found by tracing the pointers back to a start codon. </title>
References-found: 28

