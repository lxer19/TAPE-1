URL: http://www.cs.ubc.ca/spider/snoeyink/papers/nosep.ps.gz
Refering-URL: http://www.cs.duke.edu/~jeffe/compgeom/code.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Computing Common Tangents Without a Separating Line  
Author: David Kirkpatrick Jack Snoeyink 
Keyword: Computational Geometry, Analysis of Algorithms  
Address: 201-2366 Main Mall, Vancouver, BC V6T 1Z2 Canada  
Affiliation: Department of Computer Science, University of British Columbia  
Abstract: Given two disjoint convex polygons in standard representations, one can compute outer common tangents in logarithmic time without first obtaining a separating line. If the polygons are not disjoint, there is an additional factor of the logarithm of the intersection or union size, whichever is smaller. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Bernard Chazelle and Leonidas J. Guibas. </author> <title> Visibility and intersection problems in plane geometry. </title> <journal> Discrete & Computational Geometry, </journal> <volume> 4 </volume> <pages> 551-581, </pages> <year> 1989. </year>
Reference-contexts: Second, Overmars and van Leeuwen's data structure has been adapted for other purposes that do not have a vertical bias|including implicit storage of arrangements [4, 5], ray shooting <ref> [1] </ref>, etc.|so that an affirmative answer simplifies and speeds up these applications by a constant factor. Third, it is natural to look for common tangents in situations where no separating line exists.
Reference: [2] <author> David P. Dobkin and David G. Kirkpatrick. </author> <title> Determining the separation of preprocessed polyhedra: A unified approach. </title> <booktitle> In Seventeenth International Colloquium on Automata, Languages and Programming, number 443 in Lecture Notes in Computer Science, </booktitle> <pages> pages 400-413. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: Because one can compute a separating line for disjoint polygons in logarithmic time|by finding the shortest segment joining them [3] or using hierarchical representations <ref> [2, 6] </ref>|the Overmars/van Leeuwen algorithm gives a complete solution. For three reasons, however, it is still interesting to ask whether a common tangent can be computed without the knowledge of the separator.
Reference: [3] <author> H. Edelsbrunner. </author> <title> Computing the extreme distances between two convex polygons. </title> <journal> Journal of Algorithms, </journal> <volume> 6 </volume> <pages> 213-224, </pages> <year> 1985. </year>
Reference-contexts: Because one can compute a separating line for disjoint polygons in logarithmic time|by finding the shortest segment joining them <ref> [3] </ref> or using hierarchical representations [2, 6]|the Overmars/van Leeuwen algorithm gives a complete solution. For three reasons, however, it is still interesting to ask whether a common tangent can be computed without the knowledge of the separator.
Reference: [4] <author> Herbert Edelsbrunner, Leonidas Guibas, John Hershberger, Raimund Seidel, Micha Sharir, Jack Snoeyink, and Emo Welzl. </author> <title> Implicitly representing arrangements of lines or segments. </title> <journal> Discrete & Computational Geometry, </journal> <volume> 4 </volume> <pages> 433-466, </pages> <year> 1989. </year>
Reference-contexts: Second, Overmars and van Leeuwen's data structure has been adapted for other purposes that do not have a vertical bias|including implicit storage of arrangements <ref> [4, 5] </ref>, ray shooting [1], etc.|so that an affirmative answer simplifies and speeds up these applications by a constant factor. Third, it is natural to look for common tangents in situations where no separating line exists.
Reference: [5] <author> Leo Guibas, John Hershberger, and Jack Snoeyink. </author> <title> Compact interval trees: A data structure for convex hulls. </title> <journal> International Journal of Computational Geometry & Applications, </journal> <volume> 1(1) </volume> <pages> 1-22, </pages> <year> 1991. </year>
Reference-contexts: For three reasons, however, it is still interesting to ask whether a common tangent can be computed without the knowledge of the separator. First, there are common tangent problems (and intersection problems, which are their duals) that cannot be solved by one level of binary search. Guibas et al. <ref> [5] </ref> have shown that to compute an outer common tangent to intersecting polygons P and Q requires (log 2 n) time, even if points in P Q and Q P are given. <p> Second, Overmars and van Leeuwen's data structure has been adapted for other purposes that do not have a vertical bias|including implicit storage of arrangements <ref> [4, 5] </ref>, ray shooting [1], etc.|so that an affirmative answer simplifies and speeds up these applications by a constant factor. Third, it is natural to look for common tangents in situations where no separating line exists.
Reference: [6] <author> David Kirkpatrick and Jack Snoeyink. </author> <title> Tentative prune-and-search for computing Voronoi vertices. </title> <booktitle> In Proceedings of the Ninth Annual ACM Symposium on Computational Geometry, </booktitle> <pages> pages 133-142, </pages> <year> 1993. </year>
Reference-contexts: Because one can compute a separating line for disjoint polygons in logarithmic time|by finding the shortest segment joining them [3] or using hierarchical representations <ref> [2, 6] </ref>|the Overmars/van Leeuwen algorithm gives a complete solution. For three reasons, however, it is still interesting to ask whether a common tangent can be computed without the knowledge of the separator. <p> Third, it is natural to look for common tangents in situations where no separating line exists. In the next section, we show that tangents for disjoint convex polygons can be computed in logarithmic time by using a tentative prune-and-search technique <ref> [6] </ref>. C code is given in an appendix. The approach is much like Overmars and van Leeuwen's [7]|starting with lists of vertices for P and for Q that are known to contain the tangent vertices, attempt to discard half of some list by doing a constant-time local test.
Reference: [7] <author> M. Overmars and J. van Leeuwen. </author> <title> Maintenance of configurations in the plane. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 23 </volume> <pages> 166-204, </pages> <year> 1981. </year>
Reference-contexts: Overmars and van Leeuwen <ref> [7] </ref>, as part of a data structure for dynamic convex hulls, gave a logarithmic-time algorithm for the special case in which P and Q have a known vertical separating line.
Reference: [8] <author> Jorge Stolfi. </author> <title> Oriented projective geometry: A framework for geometric computations. </title> <publisher> Academic Press, </publisher> <year> 1991. </year> <month> 6 </month>
Reference-contexts: For a detailed treatment of signed homogeneous coordinates see Stolfi <ref> [8] </ref>. Suppose that there are candidates remaining on P : that (P.tent; P.end ] contains more than one index. Choose mid to be a median index in (P.tent; P.end ]. We are going to consider making P.end = mid or P.tent = mid.
References-found: 8

