URL: http://www.cs.man.ac.uk/~tessaris/DL/docs/ECAI96/carin.ps.gz
Refering-URL: http://www.cs.man.ac.uk/~tessaris/DL/papers.html
Root-URL: http://www.cs.man.ac.uk
Title: CARIN: A Representation Language Combining Horn Rules and Description Logics  
Author: Alon Y. Levy and Marie-Christine Rousset 
Abstract: We describe CARIN, a novel family of representation languages, which integrate the expressive power of Horn rules and of description logics. We address the key issue in designing such a language, namely, providing a sound and complete inference procedure. We identify existential entailment as a core problem in reasoning in CARIN, and describe an existential entailment algorithm for CARIN languages whose description logic component is ALCN R. This algorithm entails several important results for reasoning in CARIN, most notably: (1) a sound and complete inference procedure for non recursive CARIN-ALCN R, and (2) an algorithm for determining rule subsumption over ALCN R. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Andreas Abecker and Holger Wache, </author> <title> `A layer architecture for the integration of rules, inheritance, and constraints', </title> <booktitle> in ICLP 94 post conference workshop on the Integration of Declarative Paradigms, </booktitle> <year> (1994). </year>
Reference-contexts: The expressive power of CARIN has been key to the development of the Information Manifold system that combines information from multiple sources on the World Wide Web [14]. Several other works have discussed the integration of Horn rules and description logics. Some works (e.g., AL-log [11], TaxLog <ref> [1] </ref>, LIFE [2] or [17]) had the goal of using a description logic or other object-oriented component as a typing language on the variables already appearing in the rules (which could also be recursive). In those works, only unary predicates from the description logics are allowed in the rules.
Reference: [2] <author> Hasan Ait-Kaci and Andreas Podelski, </author> <title> `Towards the meaning of LIFE', </title> <booktitle> in Proceedings of the 3rd International Symposium on Programming Language Implementation and Logic Programming, </booktitle> <year> (1991). </year>
Reference-contexts: The expressive power of CARIN has been key to the development of the Information Manifold system that combines information from multiple sources on the World Wide Web [14]. Several other works have discussed the integration of Horn rules and description logics. Some works (e.g., AL-log [11], TaxLog [1], LIFE <ref> [2] </ref> or [17]) had the goal of using a description logic or other object-oriented component as a typing language on the variables already appearing in the rules (which could also be recursive). In those works, only unary predicates from the description logics are allowed in the rules.
Reference: [3] <author> F. Baader and B. </author> <title> Hollunder, `A terminological knowledge representation system with complete inference algorithm', </title> <booktitle> in In Proceedings of the Workshop on Processing Declarative Knowledge, PDK-91, Lecture Notes in Artificial Intelligence, </booktitle> <pages> pp. 67-86. </pages> <publisher> Springer-Verlag, </publisher> <year> (1991). </year>
Reference-contexts: In contrast, description logics are a family of representation languages that have been designed especially to model rich hierarchies. The computational and expressive properties of description logics have been extensively studied. Several systems have been built based on description logics (e.g., CLASSIC [5], LOOM [15], BACK [18], KRIS <ref> [3] </ref>), they have been used in several applications (e.g., [20, 19]). A description logic is a subset of first order logic with equality that contains only unary relations, representing sets of objects in the domain (referred to as concepts) and binary relations (called roles). <p> We describe an existential entailment algorithm for CARIN rules in which the description logic is ALCN R [8], which is the most expressive decidable implemented description logic <ref> [3] </ref>. This existential entailment algorithm entails several important results. First, it provides a sound and complete inference procedure for CARIN knowledge bases in which the Horn rules are not recursive and the description logic used is ALCN R.
Reference: [4] <author> Alexander Borgida, </author> <title> `On the relationship between description logic and predicate logic', </title> <booktitle> in Proceedings of CIKM-94, </booktitle> <year> (1994). </year>
Reference-contexts: Much of the research in description logics has concentrated on algorithms for determining subsumption relations between classes, and for checking membership of an object in a class. In general, the expressive powers of Horn-rules and descriptions logics are uncomparable (i.e., one does not subsume the other) <ref> [4] </ref>. Naturally, many applications would significantly benefit from having the expressive power of both formalisms. This has been the driving force behind previous work on designing hybrid languages (e.g.,[6, 11, 2]).
Reference: [5] <author> R. J. Brachman, A. Borgida, D. L. McGuinness, P. F. Patel-Schneider, and L. A. Resnick, </author> <title> `Living with CLASSIC: When and how to use a KL-ONE-like language', in Principles of Semantic Networks, </title> <editor> ed., John Sowa, </editor> <address> 401-456, </address> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> (1991). </year>
Reference-contexts: In contrast, description logics are a family of representation languages that have been designed especially to model rich hierarchies. The computational and expressive properties of description logics have been extensively studied. Several systems have been built based on description logics (e.g., CLASSIC <ref> [5] </ref>, LOOM [15], BACK [18], KRIS [3]), they have been used in several applications (e.g., [20, 19]). A description logic is a subset of first order logic with equality that contains only unary relations, representing sets of objects in the domain (referred to as concepts) and binary relations (called roles). <p> These approaches are either incomplete or guarantee only refutation completeness. A different approach to integrating rules and description logics is to add rules as an additional constructor (e.g., (CLASSIC <ref> [5] </ref>, BACK [18], LOOM [15]). These works allowed only rules of a restricted form: C (x) ) D (x), where C and D are concepts. Furthermore, the rules are generally not integrated in subsumption inferences but they are just used to derive additional knowledge about concept instances.
Reference: [6] <author> Ronald J. Brachman, Victoria P. Gilbert, and Hector J. Levesque, </author> <title> `An essential hybrid reasoning system: Knowledge and symbol level accounts of KRYPTON', </title> <booktitle> in Proceedings of IJCAI-85, </booktitle> <year> (1985). </year>
Reference-contexts: In those works, only unary predicates from the description logics are allowed in the rules. Other works (e.g., <ref> [6, 13] </ref>) considered a more tight integration of the two formalisms, which is more in the spirit of CARIN, e.g, KRYPTON [6] combined an assertional component (more expressive than Horn rules) with a less expressive description logic than ALCN R. <p> In those works, only unary predicates from the description logics are allowed in the rules. Other works (e.g., [6, 13]) considered a more tight integration of the two formalisms, which is more in the spirit of CARIN, e.g, KRYPTON <ref> [6] </ref> combined an assertional component (more expressive than Horn rules) with a less expressive description logic than ALCN R. The reasoning engine was modified by either adding resolution steps to consider the inferences sanctioned by the terminological component, or by modifying the unification operation underlying the resolution engine.
Reference: [7] <author> M. Buchheit, M. Jeusfeld, W. Nutt, and M. Staudt, </author> <title> `Subsumption between queries to object-orienteddatabases', </title> <journal> Information Systems, </journal> <volume> 19(1), </volume> <pages> 33-54, </pages> <year> (1994). </year>
Reference-contexts: Finally, Theorem 1 also entails an algorithm for subsumption of conjunctive queries over ALCN R. Such an algorithm is a key component for query optimization (e.g., <ref> [7] </ref>). The problem of query sub-sumption is the following. Definition 4.1: Let Q 1 and Q 2 be two conjunctive queries whose atoms contain concepts and roles that are defined in an ALCN R terminology T .
Reference: [8] <author> Martin Buchheit, Francesco M. Donini, and Andrea Schaerf, </author> <title> `Decidable reasoning in terminological knowledge representation systems', </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 1, </volume> <pages> 109-138, </pages> <year> (1993). </year>
Reference-contexts: Informally, the existential entailment problem is to decide whether a set of ground facts and a terminology entails the union of the antecedents of a set of rules. We describe an existential entailment algorithm for CARIN rules in which the description logic is ALCN R <ref> [8] </ref>, which is the most expressive decidable implemented description logic [3]. This existential entailment algorithm entails several important results. First, it provides a sound and complete inference procedure for CARIN knowledge bases in which the Horn rules are not recursive and the description logic used is ALCN R. <p> Description logics vary in the set of constructors they allow, and consequently in the complexity of determining class subsumption. In this paper we consider CARIN languages in which the description logic component is any subset of the rather expressive language ALCN R <ref> [8] </ref>, c fl 1996 A. Levy and M.C. Rousset ECAI 96. 12th European Conference on Artificial Intelligence Edited by W. Wahlster Published in 1996 by John Wiley & Sons, Ltd. and we allow terminological cycles. <p> As for the complexity bound, it should be noted that the complement of the existential entailment problem is harder than the ALCN R-satisfiability problem considered in <ref> [8] </ref>, for which a nondeterministic exponential time algorithm was given. The existential entailment problem forms the core of several reasoning problems in CARIN. In particular, Theorem 1 implies the following results: Corollary 4.1: Let KB be an CARIN-ALCN R knowledge base whose Horn rules are not recursive. <p> That is, the algorithm will terminate if a CARIN-ALCN R knowledge base is not satisfiable, but may not terminate otherwise. 5 Existential Entailment Algorithm for ALC N R Our algorithm is based on the technique of constraint systems, also used in <ref> [8] </ref> for a satisfiability checking of ALCN R knowledge bases. Informally, in our setting, a constraint system represents a set of models of fi [ T . <p> The important property of completions is that checking whether entailment of Q 1 _ : : : _ Q n can be done by checking whether it is satisfied in one constructable canonical model of the completion. We first illustrate the use of constraint systems (e.g., as used in <ref> [8] </ref>) with an example. Consider the terminology T consisting of the single inclusion C v 9R:C, and fi = C (a). <p> Levy and M.C. Rousset The key point in using constraint systems is to decide when to terminate the construction. In the above example, we illustrated the termination condition used in <ref> [8] </ref>, which was designed especially to check satisfiability of an ALCN R knowledge base. The subtle point in the algorithm is that when building the canonical model, fillers to the blocked variables have to be assigned. Above, a filler for role R had to be assigned to v 2 . <p> For example, if the query Q were 9 x R (x; x), it would be satisfied in the canonical model, even though it is not entailed by S 4 . Therefore, the key point in which our algorithm differs from that of <ref> [8] </ref> is that we develop a termination condition that depends on the query, and that guarantees that the resulting canonical model is sufficient for checking the entailment of the query. <p> Finally, it is important to emphasize that the existential entailment problem cannot be reduced to a satisfiabil-ity problem of an ALCN R knowledge base, because the negation of the query cannot be expressed in an ALCN R knowledge base. Therefore, the algorithm in <ref> [8] </ref> does not suffice. Formally, a constraint system is a non-empty set of constraints of the form s : C, sP t, 8x:x : C, and s 6 : = t, where C is a concept and P is a role name. <p> The last set of constraints enforces that in every completion S, S j= C (v) or S j= :C (v) for every object v. This is required in order to use constraint systems for entailment as opposed to satisfiability. The algorithm applies the propagation rules described in <ref> [8] </ref> to the constraint system S fi . A constraint system is said to be a completion when no propagation rule applies to it. Two of the propagation rules are generating rules because they add new variables to the constraint system. <p> The key point developing our algorithm based on constraint systems (and where we differ from the algorithm in <ref> [8] </ref>) is the definition of blocked variables and canonical models, on which we now elaborate.
Reference: [9] <author> Hans-Jurgen Burckert, </author> <title> `A resolution principle for constrained logics', </title> <journal> Artificial Intelligence, </journal> <volume> 66, </volume> <pages> 235-271, </pages> <year> (1994). </year>
Reference-contexts: In particular, it provides the first algorithm for answering arbitrary conjunctive queries over an ALCN R knowledge base. Second, our result provides an algorithm for rule subsumption over ALCN R. Finally, our existential entailment algorithm can be combined with the constrained-resolution algorithm described by Burckert <ref> [9] </ref> to yield a refutation complete SLD-resolution algorithm for recursive CARIN-ALCN R. 2 Description Logics A description logic contains unary relations (called concepts) which represent classes of objects in the domain and binary relations (called roles) which describe relationships between objects. Concepts and roles can be either primitive or complex. <p> The problem of determining whether Q 1 is subsumed by Q 2 is decidable in time doubly exponential in the size of Q 1 ; Q 2 and T . As noted by Burckert 3 the existential entailment algorithm can be combined with constrained SLD-resolution <ref> [9] </ref> to provide a goal directed backward chaining algorithm on arbitrary CARIN-ALCN R rules. Note that this procedure will yield a refutation complete procedure for CARIN-ALCN R.
Reference: [10] <author> T. Catarci and M. Lenzerini, </author> <title> `Representing and using interschema knowledge in cooperative information systems', </title> <journal> Journal of Intelligent and Cooperative Information Systems, </journal> <year> (1993). </year>
Reference-contexts: Naturally, many applications would significantly benefit from having the expressive power of both formalisms. This has been the driving force behind previous work on designing hybrid languages (e.g.,[6, 11, 2]). Two prime examples of such applications are information gathering from multiple sources <ref> [10, 14] </ref>, where we require the expressive power of both formalisms in order to model descriptions of information sources, and the problem of modeling of complex 1 AT&T Bell Laboratories, levy@research.att.com 2 L.R.I.
Reference: [11] <author> Francesco M. Donini, Maurizio Lenzerini, Daniele Nardi, and Andrea Schaerf, </author> <title> `A hybrid system with datalog and concept languages', </title> <booktitle> in Trends in Artificial Intelligence, volume LNAI 549, </booktitle> <publisher> Springer Verlag, </publisher> <year> (1991). </year>
Reference-contexts: The semantics of CARIN is derived naturally from the semantics of its component languages. The key problem in developing such a hybrid language is designing a sound and complete inference procedure for answering queries in the language. As observed in <ref> [11] </ref> for an even simpler language than CARIN, applying standard Horn rule inference procedures (e.g., SLD resolution) to CARIN rules is sound, but not complete. <p> The example with A 2 showed that a KB may entail the union of the antecedents of two rules without entailing either of them. These problems have also been observed in <ref> [11] </ref>, even when role predicates were not allowed in the rules. Therefore, the process of instantiating a single rule needs to be replaced by an algorithm that decides whether a set of ground facts and a terminology entails the union of the antecedents of a set of Horn rules. <p> The expressive power of CARIN has been key to the development of the Information Manifold system that combines information from multiple sources on the World Wide Web [14]. Several other works have discussed the integration of Horn rules and description logics. Some works (e.g., AL-log <ref> [11] </ref>, TaxLog [1], LIFE [2] or [17]) had the goal of using a description logic or other object-oriented component as a typing language on the variables already appearing in the rules (which could also be recursive).
Reference: [12] <author> Brian Falkenhainer and Ken Forbus, </author> <title> `Compositional modeling: Finding the right model for the job', </title> <journal> Artificial Intelligence, </journal> <volume> 51, </volume> <pages> 95-143, </pages> <year> (1991). </year>
Reference-contexts: U.R.A C.N.R.S, University of Paris-Sud, mcr@lri.lri.fr physical devices <ref> [12] </ref>, in which we need to model both the structural aspects of a device (which are best modeled by a description logic), and its behavior aspects (which are naturally modeled using Horn rules).
Reference: [13] <author> Philipp Hanschke and Knut Hinkelman. </author> <title> Combining terminological and rule-based reasoning for abstraction processes. </title> <type> DFKI Report, </type> <year> 1992. </year>
Reference-contexts: In those works, only unary predicates from the description logics are allowed in the rules. Other works (e.g., <ref> [6, 13] </ref>) considered a more tight integration of the two formalisms, which is more in the spirit of CARIN, e.g, KRYPTON [6] combined an assertional component (more expressive than Horn rules) with a less expressive description logic than ALCN R.
Reference: [14] <author> Alon Y. Levy, Divesh Srivastava, and Thomas Kirk, </author> <title> `Data model and query evaluation in global information systems', </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 5 (2), </volume> <month> (September </month> <year> 1995). </year>
Reference-contexts: Naturally, many applications would significantly benefit from having the expressive power of both formalisms. This has been the driving force behind previous work on designing hybrid languages (e.g.,[6, 11, 2]). Two prime examples of such applications are information gathering from multiple sources <ref> [10, 14] </ref>, where we require the expressive power of both formalisms in order to model descriptions of information sources, and the problem of modeling of complex 1 AT&T Bell Laboratories, levy@research.att.com 2 L.R.I. <p> The expressive power of CARIN has been key to the development of the Information Manifold system that combines information from multiple sources on the World Wide Web <ref> [14] </ref>. Several other works have discussed the integration of Horn rules and description logics.
Reference: [15] <author> R. M. MacGregor, </author> <title> `A deductive pattern matcher', </title> <booktitle> in Proceedings of AAAI-88, </booktitle> <year> (1988). </year>
Reference-contexts: In contrast, description logics are a family of representation languages that have been designed especially to model rich hierarchies. The computational and expressive properties of description logics have been extensively studied. Several systems have been built based on description logics (e.g., CLASSIC [5], LOOM <ref> [15] </ref>, BACK [18], KRIS [3]), they have been used in several applications (e.g., [20, 19]). A description logic is a subset of first order logic with equality that contains only unary relations, representing sets of objects in the domain (referred to as concepts) and binary relations (called roles). <p> These approaches are either incomplete or guarantee only refutation completeness. A different approach to integrating rules and description logics is to add rules as an additional constructor (e.g., (CLASSIC [5], BACK [18], LOOM <ref> [15] </ref>). These works allowed only rules of a restricted form: C (x) ) D (x), where C and D are concepts. Furthermore, the rules are generally not integrated in subsumption inferences but they are just used to derive additional knowledge about concept instances.
Reference: [16] <author> Robert M. MacGregor, </author> <title> `A description classifier for the predicate calculus', </title> <booktitle> in Proceedings of AAAI-94, </booktitle> <year> (1994). </year>
Reference-contexts: These works allowed only rules of a restricted form: C (x) ) D (x), where C and D are concepts. Furthermore, the rules are generally not integrated in subsumption inferences but they are just used to derive additional knowledge about concept instances. MacGregor <ref> [16] </ref> and Yen [21] describe algorithms for determining rule-specificity and classification of arbitrary predicates in LOOM, which are an instance of the existential entailment problem described here. However, since subsumption in LOOM is undecidable, their algorithms are not complete either.
Reference: [17] <author> Margarida Mamede and Luis Monteiro, </author> <title> `A constraint logic programming scheme for taxonomic reasoning', </title> <booktitle> in Proceedings of the International Conference on Logic Programming, </booktitle> <pages> pp. 255-269, </pages> <year> (1992). </year>
Reference-contexts: Several other works have discussed the integration of Horn rules and description logics. Some works (e.g., AL-log [11], TaxLog [1], LIFE [2] or <ref> [17] </ref>) had the goal of using a description logic or other object-oriented component as a typing language on the variables already appearing in the rules (which could also be recursive). In those works, only unary predicates from the description logics are allowed in the rules.
Reference: [18] <author> C. Petalson, </author> <title> `The BACK system : an overview', </title> <journal> in Proceedings of the SIGART bulletin, </journal> <volume> volume 2(3), </volume> <pages> pp. 114-119, </pages> <year> (1991). </year>
Reference-contexts: In contrast, description logics are a family of representation languages that have been designed especially to model rich hierarchies. The computational and expressive properties of description logics have been extensively studied. Several systems have been built based on description logics (e.g., CLASSIC [5], LOOM [15], BACK <ref> [18] </ref>, KRIS [3]), they have been used in several applications (e.g., [20, 19]). A description logic is a subset of first order logic with equality that contains only unary relations, representing sets of objects in the domain (referred to as concepts) and binary relations (called roles). <p> These approaches are either incomplete or guarantee only refutation completeness. A different approach to integrating rules and description logics is to add rules as an additional constructor (e.g., (CLASSIC [5], BACK <ref> [18] </ref>, LOOM [15]). These works allowed only rules of a restricted form: C (x) ) D (x), where C and D are concepts. Furthermore, the rules are generally not integrated in subsumption inferences but they are just used to derive additional knowledge about concept instances.
Reference: [19] <author> W. Wahlster, E. Andre, W. Finkler, H.J. Profitlich, and T. Rist, </author> <title> `Plan-based integration of natural language and graphics generation', </title> <booktitle> Artificial Intelligence, </booktitle> <pages> 63(1-2), 387-428, </pages> <year> (1993). </year>
Reference-contexts: The computational and expressive properties of description logics have been extensively studied. Several systems have been built based on description logics (e.g., CLASSIC [5], LOOM [15], BACK [18], KRIS [3]), they have been used in several applications (e.g., <ref> [20, 19] </ref>). A description logic is a subset of first order logic with equality that contains only unary relations, representing sets of objects in the domain (referred to as concepts) and binary relations (called roles).
Reference: [20] <author> J.R Wright, E.S. Weixelbaum, K. Brown, G.T Vesonder, S.R Palmer, J.I Berman, and H.H Moore, </author> <title> `A knowledge-based configurator that supports sales, engineering and manufacturing at AT&T network systems', </title> <booktitle> in Proceedings of IAAI-93, </booktitle> <year> (1993). </year>
Reference-contexts: The computational and expressive properties of description logics have been extensively studied. Several systems have been built based on description logics (e.g., CLASSIC [5], LOOM [15], BACK [18], KRIS [3]), they have been used in several applications (e.g., <ref> [20, 19] </ref>). A description logic is a subset of first order logic with equality that contains only unary relations, representing sets of objects in the domain (referred to as concepts) and binary relations (called roles).
Reference: [21] <author> John Yen, </author> <title> `A principled approach to reasoning about the specificity of rules', </title> <booktitle> in Proceedings of AAAI-90, </booktitle> <year> (1990). </year> <title> 5 A. Levy and M.C. </title> <type> Rousset </type>
Reference-contexts: These works allowed only rules of a restricted form: C (x) ) D (x), where C and D are concepts. Furthermore, the rules are generally not integrated in subsumption inferences but they are just used to derive additional knowledge about concept instances. MacGregor [16] and Yen <ref> [21] </ref> describe algorithms for determining rule-specificity and classification of arbitrary predicates in LOOM, which are an instance of the existential entailment problem described here. However, since subsumption in LOOM is undecidable, their algorithms are not complete either.
References-found: 21

