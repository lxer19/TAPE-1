URL: http://burton.cs.ucla.edu/tech-docs/gfouque.ps
Refering-URL: http://burton.cs.ucla.edu/tech-docs/gfouque/gfouque.html
Root-URL: http://www.cs.ucla.edu
Email: fgfouque, wwc, henrickg@cs.ucla.edu  
Title: A Case-Based Reasoning Approach for Associative Query Answering  
Author: Gilles Fouque, Wesley W. Chu, and Henrick Yau 
Address: Los Angeles Los Angeles, CA 90024  
Affiliation: Computer Science Department University of California,  
Abstract: Traditional DBMS only retrieves data that perfectly match the user query and also requires the user to know the detailed database schema. Often, it is desirable to obtain additional relevant information to a query. In this paper, we present a method to provide useful information to the user that he does not explicitly asked for. Such domain specific knowledge associated to a given query depends on each user's goal and knowledge. Thus, we propose using the Case Based Reasoning paradigm to integrate past user experience and the current goal in order to guide the association. Useful associations are incrementally acquired from observations of past experiences and adapted to answer the current user query. A prototype of the associative query answering system using the proposed method has been implemented on top of the cooperative database system, CoBase, at UCLA. Our preliminary experimental results reveal that it is a feasible and scalable method for association control.
Abstract-found: 1
Intro-found: 1
Reference: [CC92] <author> W.W. Chu and Q. Chen. </author> <title> Neighborhood and Associative Query Answering. </title> <journal> Intelligent Information Systems, </journal> <volume> 1(3-4):355-382, </volume> <year> 1992. </year>
Reference-contexts: It provides a precise and applicable knowledge representation. Associative query answering is accomplished through tracing the dependencies between data distributed in multiple subjects. In such a framework, the knowledge base and database layers can be maintained independently <ref> [CC92] </ref>. 3.2 Association control Since association is a transitive process depending on user type and goal, it needs control for selection termination. In the previous example, we assumed that such association control was available. Otherwise, all the related subjects in the DB-pattern-KB framework would be selected for association.
Reference: [CC94] <author> W. Chu and K. Chiang. </author> <title> Abstraction of High Level Concepts from Numerical Values in Databases. </title> <booktitle> In Proceedings of AAAI Workshop on Knowledge Discovery in Databases, </booktitle> <address> Seattle, </address> <year> 1994. </year>
Reference-contexts: Selection and ranking of associated attributes: the similarity between the attribute values of the selected similar cases and the user query is computed from their correlation in pairwise TAH's for symbolic attributes [MC93] or from their relative difference for numeric attributes <ref> [CC94] </ref>. Associations are extracted from new attributes of the cases associated with the set of similar cases. Based on the user type, irrelevant associated attributes are filtered out. The selected cases for association are ranked by their usefulness ( 4).
Reference: [CD91] <author> F. Cuppens and R. Demolombe. </author> <title> Extending Answer to Neighbor Entities in a Cooperative Answering Context. </title> <booktitle> Decision Support System, </booktitle> <pages> pages 1-11, </pages> <year> 1991. </year>
Reference: [CHF92] <author> M.A. Casanova, A.S. Hemerly, and A.L. Furtado. </author> <title> A Declarative Conceptual Modelling Language: Description and Example Applications. </title> <booktitle> In Proceedings of 4th International Conference on Advanced Information Systems Engineering, </booktitle> <pages> pages 589-611, </pages> <address> Manchester, UK, </address> <year> 1992. </year>
Reference: [CMB93] <author> W.W. Chu, M. Merzbacher, and L. Berkovich. </author> <booktitle> The Design and Implementation of CoBase. In Proceedings of SIGMOD 93, </booktitle> <pages> pages 517-522, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Cooperative databases extend the traditional database query languages by providing new operators ("near-to", "similar-to") and by providing explanation of the relaxation process and quality of the answers <ref> [CMB93] </ref>. In this paper, we focus on a specific aspect of cooperative databases: the inclusion of information not explicitly asked by the user but relevant to his query. <p> Then, we discuss CBR learning from user feedback. Finally, we present our CBR implementation. 2 Example of Associative Query Answering Let us consider the following query: "List all airports in Tunisia with runway length approximately equal to 10.000 feet" The answers provided by CoBase <ref> [CMB93] </ref> with approximate operators are: Airport Name Runway Length in Feet Jerba 10171.00 Monastir 9700.00 Tunis 10500.00 It would be desirable to provide additional relevant information, even when not requested in the query. Further, this additional information depends on user type. <p> Active cases are used during the selection process, and the passive cases are are kept in the Case Memory as irrelevant cases. Updates of the Case Memory are applied to all cases. 5 Implementation The association facility has been implemented on top of the cooperative database system CoBase <ref> [CMB93] </ref>. A predefined set of generic user models [MP92] is used. The association algorithm can be divided into three processes (Figure 4): Selection of similar cases: query conditions are extracted as indexing features from the user query by its select and where clauses.
Reference: [FM93] <author> G. Fouque and S. Matwin. </author> <title> A Case-Based Approach to Software Reuse. </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 2(2) </volume> <pages> 165-197, </pages> <year> 1993. </year>
Reference-contexts: A Case--Based Reasoner [RS89] is used to store, index, select, and adapt this experience and while learning from previous system successes and failures <ref> [FM93] </ref>. In this paper, we first present an example of associative query answering, followed by a presentation of the association system architecture. Then, we discuss CBR learning from user feedback.
Reference: [MC93] <author> M. Merzbacher and W.W. Chu. </author> <title> Pattern-based clustering for database attribute values. </title> <booktitle> In Proceedings of AAAI Workshop on Knowledge Discovery in Databases, </booktitle> <address> Washington, D.C., </address> <year> 1993. </year>
Reference-contexts: This knowledge is represented in the Type Abstraction Hierarchies (TAH) where attribute values are clustered depending on a nearness function represented as a correlation measure <ref> [MC93] </ref>. <p> Selection and ranking of associated attributes: the similarity between the attribute values of the selected similar cases and the user query is computed from their correlation in pairwise TAH's for symbolic attributes <ref> [MC93] </ref> or from their relative difference for numeric attributes [CC94]. Associations are extracted from new attributes of the cases associated with the set of similar cases. Based on the user type, irrelevant associated attributes are filtered out. The selected cases for association are ranked by their usefulness ( 4).
Reference: [MP92] <author> J.D. Moore and C.L. Paris. </author> <title> Exploiting User Feedback to Compensate for the Unreliability of User Models. </title> <booktitle> User Modeling and User-Adapted Interaction, </booktitle> <volume> 2(4) </volume> <pages> 287-330, </pages> <year> 1992. </year>
Reference-contexts: Updates of the Case Memory are applied to all cases. 5 Implementation The association facility has been implemented on top of the cooperative database system CoBase [CMB93]. A predefined set of generic user models <ref> [MP92] </ref> is used. The association algorithm can be divided into three processes (Figure 4): Selection of similar cases: query conditions are extracted as indexing features from the user query by its select and where clauses.
Reference: [RS89] <editor> C.K. Riesbeck and R.S. Schank. </editor> <title> Inside Case-Based Reasoning. </title> <publisher> Lawrence Erlbaum Associates, </publisher> <address> Hillsdale, N.J., </address> <year> 1989. </year>
Reference-contexts: The query context is based on the analysis of the user's previous experience: his previous ? This work is supported by DARPA contract N00174-91-C-0107 searches, and the ability of the system to infer his successive goals. A Case--Based Reasoner <ref> [RS89] </ref> is used to store, index, select, and adapt this experience and while learning from previous system successes and failures [FM93]. In this paper, we first present an example of associative query answering, followed by a presentation of the association system architecture. Then, we discuss CBR learning from user feedback.
Reference: [SB90] <author> G. Salton and C. Buckley. </author> <title> Improving Retrieval Performance by Relevance Feedback. </title> <journal> Journal of the American Society for Information Science, </journal> <volume> 41(4) </volume> <pages> 288-297, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: j ; a k ; a)f (W n (C i ! C j ; a k ; a); ff (a; p); W (a k ; a)) Equations ( 6) and ( 7) are adapted from IR formulas in the vector processing environment to modify the initial query from user feedback <ref> [SB90] </ref>. The choice of the learning function depends on the application, the number of cases in the Case Memory, the attribute distribution in the Case Memory, the desired accuracy, and the efficiency of associations. A good learning function should stabilize the Case Memory after a certain training period.
Reference: [SM83] <author> G. Salton and M.J. McGill. </author> <title> Introduction to Modern Information Retrieval. </title> <address> NcGraaw-Hill, New York, </address> <year> 1983. </year> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: A threshold can be used based on a maximum number of association links or on a minimum association weight to limit the number of associated attributes. 4 Learning from user feedback User feedback is crucial for systems to understand the difference between the user query and the user information needs <ref> [SM83] </ref>. The user selects the associated attributes based on its relevancy to his problem. The unselected associated attributes are considered irrelevant. Such user feedback is used by the CBR to update the association weights.
References-found: 11

