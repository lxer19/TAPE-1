URL: ftp://ftp.fas.sfu.ca/pub/cs/han/kdd/hdb98.ps
Refering-URL: http://fas.sfu.ca/cs/research/groups/DB/sections/publication/kdd/kdd.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Dealing with Semantic Heterogeneity by Generalization-Based Data Mining Techniques  
Author: Jiawei Han Raymond T. Ng Yongjian Fu Son K. Dao 
Affiliation: (Simon Fraser University)  (University of British Columbia)  (University of Missouri Rolla)  (Hughes Research Laboratories)  
Abstract: Data mining, or knowledge discovery from databases, may play an important role at the construction of cooperative information systems. A major challenge for building cooperative information systems is the semantic heterogeneity problem. Methods for schema analysis, transformation, and integration have been investigated for providing a good tool to handle this problem. However, schema level analysis may sometimes be too general to solve the problem. Data level analysis, i.e., the analysis of database contents, should be taken into serious consideration. Data mining provides a powerful tool to view database contents at a high abstraction level and transform low-level heterogeneous data into high-level homogeneous information. We discuss the necessity of data mining in cooperative information systems and study the methods for construction and maintenance of multiple-layer databases and intelligent query answering using generalization-based data mining techniques.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Agrawal, S. Ghosh, T. Imielinski, B. Iyer, and A. Swami. </author> <title> An interval classifier for database mining applications. </title> <booktitle> In Proc. 18th Int. Conf. Very Large Data Bases, </booktitle> <pages> pages 560-573, </pages> <address> Vancouver, Canada, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: Furthermore, a given concept hierarchy can be adjusted dynamically based on the analysis of the statistical distribution of the relevant data sets [13]. 3.2 Generalization of Simple Numerical Values Generalization of numerical attributes can be performed similarly but in a more automatic way by the examination of data distribution characteristics <ref> [1, 9, 5] </ref>. In many cases, it may not require any predefined concept hierarchies. For example, the household income of buyers can be clustered into several groups, such as fbelow 30K, 30K-50K, 50K-70K, over 70Kg, according to a relatively uniform data distribution criteria or using some statistical cluster analysis tools.
Reference: [2] <author> W. W. Chu and Q. Chen. </author> <title> Neighborhood and associative query answering. </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 1 </volume> <pages> 355-382, </pages> <year> 1992. </year>
Reference-contexts: $250k-$300k returned, associated with an explanation that the returned information is for the range of $250k-$300k instead of $280k-$300k to avoid misunderstanding. 2 5.2 Cooperative Query Answering Since an MLDB stores general database information in higher layers, many techniques investigated in previous researches into cooperative query answering in (single-layer) databases <ref> [17, 3, 2, 10, 16] </ref> can be extended effectively to cooperative query answering in MLDBs. The following reasoning may convince us that an MLDB may greatly facilitate cooperative query answering. <p> The following reasoning may convince us that an MLDB may greatly facilitate cooperative query answering. Many cooperative query answering techniques need certain kinds of generalization <ref> [2, 11] </ref>; whereas different kinds of frequently used generalizations are performed and stored in the high layers of an MLDB. Also, they often need to compare the "neighborhood" information [3, 2]. The generalized neighborhood tuples are usually stored in the same high layer relations, ready for comparison and investigation. <p> Many cooperative query answering techniques need certain kinds of generalization [2, 11]; whereas different kinds of frequently used generalizations are performed and stored in the high layers of an MLDB. Also, they often need to compare the "neighborhood" information <ref> [3, 2] </ref>. The generalized neighborhood tuples are usually stored in the same high layer relations, ready for comparison and investigation. Moreover, they often need to summarize answer-related information, associated with data statistics or certain aggregations [2, 26]. <p> Also, they often need to compare the "neighborhood" information [3, 2]. The generalized neighborhood tuples are usually stored in the same high layer relations, ready for comparison and investigation. Moreover, they often need to summarize answer-related information, associated with data statistics or certain aggregations <ref> [2, 26] </ref>. Interestingly, a higher layer relation not only presents the generalized tuples but also the counts of the identical tuples or other computed aggregation values (such as sum, average, etc.). Such high-level information with counts conveys important information for data summarization and statistical data investigation.
Reference: [3] <author> F. Cuppens and R. Demolombe. </author> <title> Extending answers to neighbor entities in a cooperative answering context. </title> <booktitle> Decision Support Systems, </booktitle> <volume> 7 </volume> <pages> 1-11, </pages> <year> 1991. </year>
Reference-contexts: $250k-$300k returned, associated with an explanation that the returned information is for the range of $250k-$300k instead of $280k-$300k to avoid misunderstanding. 2 5.2 Cooperative Query Answering Since an MLDB stores general database information in higher layers, many techniques investigated in previous researches into cooperative query answering in (single-layer) databases <ref> [17, 3, 2, 10, 16] </ref> can be extended effectively to cooperative query answering in MLDBs. The following reasoning may convince us that an MLDB may greatly facilitate cooperative query answering. <p> Many cooperative query answering techniques need certain kinds of generalization [2, 11]; whereas different kinds of frequently used generalizations are performed and stored in the high layers of an MLDB. Also, they often need to compare the "neighborhood" information <ref> [3, 2] </ref>. The generalized neighborhood tuples are usually stored in the same high layer relations, ready for comparison and investigation. Moreover, they often need to summarize answer-related information, associated with data statistics or certain aggregations [2, 26].
Reference: [4] <author> S. Dao and B. Perry. </author> <title> Applying a data miner to heterogeneous schema integration. </title> <booktitle> In Proc. First Int. Conf. on Knowledge Discovery and Data Mining, </booktitle> <pages> pages 63-68, </pages> <address> Montreal, Canada, </address> <month> Aug. </month> <year> 1995. </year>
Reference-contexts: The diversity of data and the difficulty of understanding the meaning of the data poses great challenges to cooperating multiple databases based on their information contents <ref> [4] </ref>. It is difficult to communicate among databases based on the low-level heterogeneous database contents, such as concrete course or grade information in a university database. However, their corresponding high level concepts, such as general course information or grade distribution, could be less heterogeneous and easier to communicate. <p> In this chapter, we study the relationships between data mining and cooperating heterogeneous databases. The data mining methods discussed in this chapter are confined to those for data generalization, summarization, and characterization <ref> [12, 4, 15] </ref>, and methods for the construction of multiple-layer databases. We also explore its potential for supporting heterogeneous databases. The chapter is organized as follows. In Section 2, the concept of a multiple-layer database (MLDB) is introduced.
Reference: [5] <author> B. de Ville. </author> <title> Applying statistical knowledge to database analysis and knowledge base construction. </title> <booktitle> In Proc. 6th Conference on Artificial Intelligence Applications, </booktitle> <pages> pages 30-36, </pages> <address> Santa Barbara, CA, </address> <year> 1990. </year>
Reference-contexts: Furthermore, a given concept hierarchy can be adjusted dynamically based on the analysis of the statistical distribution of the relevant data sets [13]. 3.2 Generalization of Simple Numerical Values Generalization of numerical attributes can be performed similarly but in a more automatic way by the examination of data distribution characteristics <ref> [1, 9, 5] </ref>. In many cases, it may not require any predefined concept hierarchies. For example, the household income of buyers can be clustered into several groups, such as fbelow 30K, 30K-50K, 50K-70K, over 70Kg, according to a relatively uniform data distribution criteria or using some statistical cluster analysis tools.
Reference: [6] <editor> A. Elmagarmid and C. Pu (editors). </editor> <title> Special issue on heterogeneous databases. </title> <journal> ACM Computing Survey, </journal> <volume> 22, </volume> <year> 1990. </year>
Reference-contexts: 1 Introduction The study of heterogeneous databases, or cooperative database systems, has been an active research area for the past decade. Most studies focus on issues such as architectural design, schema trans lation, schema integration, and transaction control <ref> [6, 21] </ref>. As the name implies, a key challenge of heterogeneous databases is how to deal with the semantic heterogeneity presented by the multiple autonomous databases. Techniques for schema analysis, translation, and integration attempt to solve the semantic heterogeneity problem at the schema level.
Reference: [7] <author> M. Ester, H.-P. Kriegel, and X. Xu. </author> <title> Knowledge discovery in large spatial databases: Focusing techniques for efficient class identification. </title> <booktitle> In Proc. 4th Int. Symp. on Large Spatial Databases (SSD'95), </booktitle> <pages> pages 67-82, </pages> <address> Portland, Maine, </address> <month> August </month> <year> 1995. </year>
Reference-contexts: See [18] for a more detailed comparison of these methods. Also see [20] for the CLARANS clustering algorithm designed specifically for data mining. CLARANS and other recently developed database-oriented partitioning methods, such as <ref> [7, 28] </ref>, are directly applicable to clustering numerical values into groups. 3.3 Generalization of Structured Data A set-valued attribute may be of homogeneous or heterogeneous types.
Reference: [8] <author> U. M. Fayyad, G. Piatetsky-Shapiro, P. Smyth, and R. Uthurusamy. </author> <title> Advances in Knowledge Discovery and Data Mining. </title> <publisher> AAAI/MIT Press, </publisher> <year> 1996. </year>
Reference-contexts: The above analysis demonstrates why, apart from schema level analysis, data level analysis, i.e., the analysis of database contents, is valuable for solving the semantic heterogeneity problem. Many techniques in data mining <ref> [8] </ref> provide powerful means to view database contents at a high concept level (i.e., a high level of abstraction) and to transform low-level heterogeneous data into high-level homogeneous information. In this chapter, we study the relationships between data mining and cooperating heterogeneous databases.
Reference: [9] <author> D. Fisher. </author> <title> Improving inference through conceptual clustering. </title> <booktitle> In Proc. 1987 AAAI Conf., </booktitle> <pages> pages 461-465, </pages> <address> Seattle, Washington, </address> <month> July </month> <year> 1987. </year>
Reference-contexts: Furthermore, a given concept hierarchy can be adjusted dynamically based on the analysis of the statistical distribution of the relevant data sets [13]. 3.2 Generalization of Simple Numerical Values Generalization of numerical attributes can be performed similarly but in a more automatic way by the examination of data distribution characteristics <ref> [1, 9, 5] </ref>. In many cases, it may not require any predefined concept hierarchies. For example, the household income of buyers can be clustered into several groups, such as fbelow 30K, 30K-50K, 50K-70K, over 70Kg, according to a relatively uniform data distribution criteria or using some statistical cluster analysis tools.
Reference: [10] <author> T. Gaasterland. </author> <title> Restricting query relaxation through user constraints. </title> <booktitle> In Proc. 1st Int. Conf. Cooperative Information Systems, </booktitle> <pages> pages 359-366, </pages> <address> Toronto, Canada, </address> <year> 1993. </year>
Reference-contexts: $250k-$300k returned, associated with an explanation that the returned information is for the range of $250k-$300k instead of $280k-$300k to avoid misunderstanding. 2 5.2 Cooperative Query Answering Since an MLDB stores general database information in higher layers, many techniques investigated in previous researches into cooperative query answering in (single-layer) databases <ref> [17, 3, 2, 10, 16] </ref> can be extended effectively to cooperative query answering in MLDBs. The following reasoning may convince us that an MLDB may greatly facilitate cooperative query answering.
Reference: [11] <author> T. Gaasterland, P. Godgrey, and J. Minker. </author> <title> Relaxation as a platform for cooperative answering. </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 1 </volume> <pages> 293-321, </pages> <year> 1992. </year>
Reference-contexts: The following reasoning may convince us that an MLDB may greatly facilitate cooperative query answering. Many cooperative query answering techniques need certain kinds of generalization <ref> [2, 11] </ref>; whereas different kinds of frequently used generalizations are performed and stored in the high layers of an MLDB. Also, they often need to compare the "neighborhood" information [3, 2]. The generalized neighborhood tuples are usually stored in the same high layer relations, ready for comparison and investigation.
Reference: [12] <author> J. Han, Y. Cai, and N. Cercone. </author> <title> Data-driven discovery of quantitative rules in relational databases. </title> <journal> IEEE Trans. Knowledge and Data Engineering, </journal> <volume> 5 </volume> <pages> 29-40, </pages> <year> 1993. </year>
Reference-contexts: In this chapter, we study the relationships between data mining and cooperating heterogeneous databases. The data mining methods discussed in this chapter are confined to those for data generalization, summarization, and characterization <ref> [12, 4, 15] </ref>, and methods for the construction of multiple-layer databases. We also explore its potential for supporting heterogeneous databases. The chapter is organized as follows. In Section 2, the concept of a multiple-layer database (MLDB) is introduced. <p> Generalization is performed by removing a set of less-interested attributes, substituting the concepts in one or a set of attributes by their corresponding higher level concepts <ref> [12, 14] </ref>, performing aggregation or approximation on certain attributes, etc. <p> Otherwise, it is called information-preserving join. 4.2 An MLDB Construction Algorithm Based on the previous discussion, the construction of an MLDB can be summarized into the following algorithm, which is similar to attribute-oriented generalization in knowledge discovery in databases <ref> [12, 14] </ref>. Algorithm 1 Construction of an MLDB. Input: A relational database, a set of concept hierarchies, and a set of frequently referenced at tributes and frequently used query patterns. Output: A multiple-layer database. Method. An MLDB is constructed in the following steps. 1. <p> Obviously, the frequently referenced attributes should be preserved in higher layers, and the frequently referenced concept levels of these attributes should be considered as the candidate concept levels in the construction of higher layers. Steps 2 and 3 are performed in a way similar to attribute-oriented induction, studied previously <ref> [12, 14] </ref>.
Reference: [13] <author> J. Han and Y. Fu. </author> <title> Dynamic generation and refinement of concept hierarchies for knowledge discovery in databases. </title> <booktitle> In Proc. AAAI'94 Workshop on Knowledge Discovery in Databases (KDD'94), </booktitle> <pages> pages 157-168, </pages> <address> Seattle, WA, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: Furthermore, a given concept hierarchy can be adjusted dynamically based on the analysis of the statistical distribution of the relevant data sets <ref> [13] </ref>. 3.2 Generalization of Simple Numerical Values Generalization of numerical attributes can be performed similarly but in a more automatic way by the examination of data distribution characteristics [1, 9, 5]. In many cases, it may not require any predefined concept hierarchies.
Reference: [14] <author> J. Han and Y. Fu. </author> <title> Exploration of the power of attribute-oriented induction in data mining. In U.M. </title> <editor> Fayyad, G. Piatetsky-Shapiro, P. Smyth, and R. Uthurusamy, editors, </editor> <booktitle> Advances in Knowledge Discovery and Data Mining, </booktitle> <pages> pages 399-421. </pages> <publisher> AAAI/MIT Press, </publisher> <year> 1996. </year>
Reference-contexts: Generalization is performed by removing a set of less-interested attributes, substituting the concepts in one or a set of attributes by their corresponding higher level concepts <ref> [12, 14] </ref>, performing aggregation or approximation on certain attributes, etc. <p> Otherwise, it is called information-preserving join. 4.2 An MLDB Construction Algorithm Based on the previous discussion, the construction of an MLDB can be summarized into the following algorithm, which is similar to attribute-oriented generalization in knowledge discovery in databases <ref> [12, 14] </ref>. Algorithm 1 Construction of an MLDB. Input: A relational database, a set of concept hierarchies, and a set of frequently referenced at tributes and frequently used query patterns. Output: A multiple-layer database. Method. An MLDB is constructed in the following steps. 1. <p> Obviously, the frequently referenced attributes should be preserved in higher layers, and the frequently referenced concept levels of these attributes should be considered as the candidate concept levels in the construction of higher layers. Steps 2 and 3 are performed in a way similar to attribute-oriented induction, studied previously <ref> [12, 14] </ref>.
Reference: [15] <author> J. Han, Y. Fu, W. Wang, J. Chiang, W. Gong, K. Koperski, D. Li, Y. Lu, A. Rajan, N. Ste-fanovic, B. Xia, and O. R. Zaiane. </author> <title> DBMiner: A system for mining knowledge in large relational databases. </title> <booktitle> In Proc. 1996 Int'l Conf. on Data Mining and Knowledge Discovery (KDD'96), </booktitle> <pages> pages 250-255, </pages> <address> Portland, Oregon, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: In this chapter, we study the relationships between data mining and cooperating heterogeneous databases. The data mining methods discussed in this chapter are confined to those for data generalization, summarization, and characterization <ref> [12, 4, 15] </ref>, and methods for the construction of multiple-layer databases. We also explore its potential for supporting heterogeneous databases. The chapter is organized as follows. In Section 2, the concept of a multiple-layer database (MLDB) is introduced.
Reference: [16] <author> J. Han, Y. Huang, N. Cercone, and Y. Fu. </author> <title> Intelligent query answering by knowledge discovery techniques. </title> <journal> IEEE Trans. Knowledge and Data Engineering, </journal> <volume> 8 </volume> <pages> 373-390, </pages> <year> 1996. </year>
Reference-contexts: $250k-$300k returned, associated with an explanation that the returned information is for the range of $250k-$300k instead of $280k-$300k to avoid misunderstanding. 2 5.2 Cooperative Query Answering Since an MLDB stores general database information in higher layers, many techniques investigated in previous researches into cooperative query answering in (single-layer) databases <ref> [17, 3, 2, 10, 16] </ref> can be extended effectively to cooperative query answering in MLDBs. The following reasoning may convince us that an MLDB may greatly facilitate cooperative query answering.
Reference: [17] <author> T. Imielinski. </author> <title> Intelligent query answering in rule based systems. </title> <journal> J. Logic Programming, </journal> <volume> 4:229--257, </volume> <year> 1987. </year>
Reference-contexts: $250k-$300k returned, associated with an explanation that the returned information is for the range of $250k-$300k instead of $280k-$300k to avoid misunderstanding. 2 5.2 Cooperative Query Answering Since an MLDB stores general database information in higher layers, many techniques investigated in previous researches into cooperative query answering in (single-layer) databases <ref> [17, 3, 2, 10, 16] </ref> can be extended effectively to cooperative query answering in MLDBs. The following reasoning may convince us that an MLDB may greatly facilitate cooperative query answering.
Reference: [18] <author> L. Kaufman and P. J. Rousseeuw. </author> <title> Finding Groups in Data: an Introduction to Cluster Analysis. </title> <publisher> John Wiley & Sons, </publisher> <year> 1990. </year>
Reference-contexts: In each step, a cluster is chosen and split up into two. This process continues until n clusters are produced. While hierarchical methods have been successfully applied to many biological applications (e.g., for producing taxonomies of animals and plants <ref> [18] </ref>), hierarchical methods are not useful in grouping simple numerical values into ranges. In contrast, given the number k of partitions to be found, a partitioning method tries to find the best k partitions 1 of the n objects. <p> Because of this property, developing partitioning methods has been one of the main focuses of cluster analysis research. Indeed, many partitioning methods have been developed, some based on k-means, some on k-medoid, some on fuzzy analysis, etc. See <ref> [18] </ref> for a more detailed comparison of these methods. Also see [20] for the CLARANS clustering algorithm designed specifically for data mining.
Reference: [19] <author> H. F. Korth and A. Silberschatz. </author> <title> Database System Concepts, </title> <publisher> 2ed. McGraw-Hill, </publisher> <year> 1991. </year>
Reference-contexts: Similar to many extended relational databases, a route map can be represented by an extended E-R (entity-relationship) diagram [24], in which the entities and relationships at layer-0 (the original database) can be represented in a conventional E-R diagram <ref> [19] </ref>; whereas generalization is represented by a double-line arrow pointed from the generalizing entity (or relationship) to the generalized entity (or relationship). For example, house 0 is a higher layer entity generalized from a lower layer entity house, as shown in Fig. 1. <p> It is represented as a generalization from a relationship obtained by joining one entity and one relationship in the route map (Fig. 1). Since an extended E-R database can be easily mapped into an extended relational one <ref> [19] </ref>, our discussion assumes such mappings and still adopts the terminologies from an extended relational model. A generalization path is created for each high layer relation to represent how the relation is obtained in the generalization.
Reference: [20] <author> R. Ng and J. Han. </author> <title> Efficient and effective clustering method for spatial data mining. </title> <booktitle> In Proc. 1994 Int. Conf. Very Large Data Bases, </booktitle> <pages> pages 144-155, </pages> <address> Santiago, Chile, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: Because of this property, developing partitioning methods has been one of the main focuses of cluster analysis research. Indeed, many partitioning methods have been developed, some based on k-means, some on k-medoid, some on fuzzy analysis, etc. See [18] for a more detailed comparison of these methods. Also see <ref> [20] </ref> for the CLARANS clustering algorithm designed specifically for data mining. CLARANS and other recently developed database-oriented partitioning methods, such as [7, 28], are directly applicable to clustering numerical values into groups. 3.3 Generalization of Structured Data A set-valued attribute may be of homogeneous or heterogeneous types.
Reference: [21] <author> H. Schek, A. Sheth, and B. </author> <title> Czejdo (editors). Interoperability in multidatabase systems. </title> <booktitle> In Proc. Third International Workshop on Research Issues in Data Engineering, </booktitle> <month> April </month> <year> 1993. </year>
Reference-contexts: 1 Introduction The study of heterogeneous databases, or cooperative database systems, has been an active research area for the past decade. Most studies focus on issues such as architectural design, schema trans lation, schema integration, and transaction control <ref> [6, 21] </ref>. As the name implies, a key challenge of heterogeneous databases is how to deal with the semantic heterogeneity presented by the multiple autonomous databases. Techniques for schema analysis, translation, and integration attempt to solve the semantic heterogeneity problem at the schema level.
Reference: [22] <author> A. P. Sheth and J. A. Larson. </author> <title> Federated database systems for managing distributed, heterogeneous, and autonomous databases. </title> <journal> ACM Comput. Surv., </journal> <volume> 22 </volume> <pages> 183-236, </pages> <year> 1990. </year>
Reference-contexts: Techniques for schema analysis, translation, and integration attempt to solve the semantic heterogeneity problem at the schema level. That is to say, the solution to the problem is based on finding schemas (e.g., federated schemas in <ref> [22] </ref>) that all databases involved can agree upon and can relate (i.e., translate) to. However, based on our observation, schema-level analysis may only touch one aspect of the semantic heterogeneity problem.
Reference: [23] <author> C. Shum and R. Muntz. </author> <title> An information-theoretic study on aggregate responses. </title> <booktitle> In Proc. 14th Int. Conf. Very Large Data Bases, </booktitle> <pages> pages 479-490, </pages> <address> Los Angeles, USA, </address> <month> August </month> <year> 1988. </year>
Reference-contexts: 1 Partitions here are defined in the usual way: each object is assigned to exactly one group. 3.4 Aggregation and Approximation as a Means of Generalization Besides concept tree ascension (i.e., replacing concepts by their corresponding higher level concepts in a concept hierarchy) and structured data summarization, aggregation and approximation <ref> [23] </ref> should be considered as an important means of generalization, which is especially useful for generalization of attributes with large sets of values, complex structures, spatial or multimedia data, etc. Take spatial data as an example.
Reference: [24] <author> T. J. Teorey, D. Yang, and J. P. Fry. </author> <title> A logical design methodology for relational databases using the extended entity-relationship model. </title> <journal> ACM Comput. Surv., </journal> <volume> 18 </volume> <pages> 197-222, </pages> <year> 1986. </year>
Reference-contexts: A set of generalization paths, each of which shows how a higher layer relation is generalized from one or a set of lower layer relations. Similar to many extended relational databases, a route map can be represented by an extended E-R (entity-relationship) diagram <ref> [24] </ref>, in which the entities and relationships at layer-0 (the original database) can be represented in a conventional E-R diagram [19]; whereas generalization is represented by a double-line arrow pointed from the generalizing entity (or relationship) to the generalized entity (or relationship).
Reference: [25] <author> S.V. Vrbsky and J. W. S. Liu. </author> <title> An object-oriented query processor that returns monotonically improving answers. </title> <booktitle> In Proc. 7th IEEE Conf. on Data Engineering, </booktitle> <pages> pages 472-481, </pages> <address> Kobe, Japan, </address> <month> April </month> <year> 1991. </year>
Reference-contexts: It facilitates progressive query refinement, from general information browsing to specific data retrieval. Such a process represents a top-down information searching process, which matches human's reasoning and learning process naturally, thus provides a cooperative process for step-by-step information exploration <ref> [25, 27] </ref>. Example 5 A query like "what kind of houses can be bought with $300k in the Vancouver area?" can be answered using an MLDB efficiently and effectively. Here we examine several ways to answer this query using the MLDB constructed in Example 1. 1.
Reference: [26] <author> C. Wittemann and H. Kunst. </author> <title> Intelligent assistance in flexible decisions. </title> <booktitle> In Proc. 1st Int. Conf. Cooperative Information Systems, </booktitle> <pages> pages 377-381, </pages> <address> Toronto, Canada, </address> <year> 1993. </year>
Reference-contexts: Also, they often need to compare the "neighborhood" information [3, 2]. The generalized neighborhood tuples are usually stored in the same high layer relations, ready for comparison and investigation. Moreover, they often need to summarize answer-related information, associated with data statistics or certain aggregations <ref> [2, 26] </ref>. Interestingly, a higher layer relation not only presents the generalized tuples but also the counts of the identical tuples or other computed aggregation values (such as sum, average, etc.). Such high-level information with counts conveys important information for data summarization and statistical data investigation.
Reference: [27] <author> M.F. Wolf. </author> <title> Successful integration of databases, knowledge-based systems, and human judgement. </title> <booktitle> In Proc. 1st Int. Conf. Cooperative Information Systems, </booktitle> <pages> pages 154-162, </pages> <address> Toronto, Canada, </address> <year> 1993. </year>
Reference-contexts: It facilitates progressive query refinement, from general information browsing to specific data retrieval. Such a process represents a top-down information searching process, which matches human's reasoning and learning process naturally, thus provides a cooperative process for step-by-step information exploration <ref> [25, 27] </ref>. Example 5 A query like "what kind of houses can be bought with $300k in the Vancouver area?" can be answered using an MLDB efficiently and effectively. Here we examine several ways to answer this query using the MLDB constructed in Example 1. 1.
Reference: [28] <author> T. Zhang, R. Ramakrishnan, and M. Livny. </author> <title> BIRCH: an efficient data clustering method for very large databases. </title> <booktitle> In Proc. 1996 ACM-SIGMOD Int. Conf. Management of Data, </booktitle> <pages> pages 103-114, </pages> <address> Montreal, Canada, </address> <month> June </month> <year> 1996. </year>
Reference-contexts: See [18] for a more detailed comparison of these methods. Also see [20] for the CLARANS clustering algorithm designed specifically for data mining. CLARANS and other recently developed database-oriented partitioning methods, such as <ref> [7, 28] </ref>, are directly applicable to clustering numerical values into groups. 3.3 Generalization of Structured Data A set-valued attribute may be of homogeneous or heterogeneous types.
References-found: 28

