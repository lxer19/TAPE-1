URL: http://www.cs.man.ac.uk/~tessaris/DL/docs/misc/mdla.ps.gz
Refering-URL: http://www.cs.man.ac.uk/~tessaris/DL/papers.html
Root-URL: http://www.cs.man.ac.uk
Email: email: ohlbach@dcs.kcl.ac.uk  email: koehler@informatik.uni-freiburg.de  
Title: Modal Logics, Description Logics and Arithmetic Reasoning  
Author: Hans Jurgen Ohlbach Jana Koehler 
Keyword: Key words: modal logic, description logic, combination of inference systems, mathematical programming  
Address: King's College London, Strand, London WC2R 2LS,  Albert-Ludwigs-Universitat, Am Flughafen 17, 79110 Freiburg, Germany,  
Affiliation: Dept. of Computer Science,  Institut fur Informatik,  
Abstract: We introduce mathematical programming and atomic decomposition as the basic modal (T-Box) inference techniques for a large class of modal and description logics. The class of description logics suitable for the proposed methods is strong on the arithmetical side. In particular there may be complex arithmetical conditions on sets of accessible worlds (role fillers). The atomic decomposition technique can deal with set constructors for modal parameters (role terms) and parameter (role) hierarchies specified in full propositional logic. Besides the standard modal operators, a number of other constructors can be added in a relatively straightforward way. Examples are graded modalities (qualified number restrictions) and also generalized quantifiers like `most', `n%', `more' and `many'. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> W. Ackermann. </author> <title> Untersuchung uber das Eliminationsproblem der mathematischen Logik. </title> <journal> Mathematische Annalen, </journal> <volume> 110 </volume> <pages> 390-413, </pages> <year> 1935. </year>
Reference-contexts: In the propositional case, elimination of the existentially quantified p amounts to generating all resolvents with p in the clause form of A R . The resolvents represent all consequences of p and therefore p is no longer necessary <ref> [1] </ref>. This way one can have large databases of Boolean axioms, but for the actual problem at hand, the atomic decomposition takes into account only the relevant Boolean variables.
Reference: [2] <author> F. Baader and B. Hollunder. KRIS: </author> <title> Knowledge representation and inference system. </title> <journal> SIGART Bulletin, </journal> <volume> 2(2) </volume> <pages> 8-15, </pages> <year> 1991. </year>
Reference-contexts: Therefore the modal 2-operator was called the necessitation operator [11,12]. Description logics, on the other hand, are late descendants of Minski's frames [18] and Brachman's KL-ONE [6]. They come in a variety of different versions, e.g. ALC [24], CLASSIC [7], KRIS <ref> [2] </ref>, LOOM [17] and even in class-based object oriented formalisms [10]. Common to most of them is the separation of a description logic database into a so-called T-Box (terminological box) and a so-called A-Box (assertional box). The T-Box contains specifications of concepts and roles.
Reference: [3] <author> F. Baader and P. Hanschke. </author> <title> A scheme for integrating concrete domains into concept languages. </title> <editor> In John Mylopolous and Ray Reiter, editors, </editor> <booktitle> Proc. of IJCAI 91, </booktitle> <pages> pages 452-457. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year>
Reference-contexts: car ^ cubic-capacity = 500 jhas-cylinderj: (11) (500er is the set of cars with cubic capacity of 500 cc per cylinder.) If only numeric features occur in the arithmetic part then DL arc89 is almost like Baader and Hanschke's ALC (D), ALC with the concrete domain D = real numbers <ref> [3] </ref>. The difference is our treatment of the existential quantifier, which introduces a numeric constraint for the role fillers. Therefore the consistency and subsumption checking algorithms are very different.
Reference: [4] <author> F. Baader and U. Sattler. </author> <title> Description logics with symbolic number restrictions. </title> <editor> In W. Wahlster, editor, </editor> <booktitle> Proceedings of the Twelfth European Conference on Artificial Intelligence (ECAI-96), </booktitle> <pages> pages 283-287. </pages> <publisher> John Wiley & Sons Ltd, </publisher> <year> 1996. </year> <note> An extended version has appeared as Technical Report LTCS-96-03. </note>
Reference-contexts: We have not yet investigated how this language extension fits into our approach. It is certainly not straightforward because consistency is undecidable in this language <ref> [4] </ref>. 8.2 Other Functional Roles Functional roles which have exactly (or at most) one role filler can be defined using arithmetic constraints and the universal quantifier. jhas-namej = 1 ^ 8 has-name:name specifies a functional role has-name mapping objects to objects in the set name. 31 Thus, functional roles can be
Reference: [5] <author> F. Baader and U. Sattler. </author> <title> Description logics with concrete domains and aggregation. </title> <editor> In H. Prade, editor, </editor> <booktitle> Proceedings of the 13th European Conference on Artificial Intelligence (ECAI-98), </booktitle> <pages> pages 336-340. </pages> <publisher> John Wiley & Sons Ltd, </publisher> <year> 1998. </year>
Reference-contexts: For example the representation of `the set of people with more grandchildren than children' requires an expression like jhas-child; has-childj jhas-childj or a kind of aggregation functions which can lead to undecidability <ref> [5] </ref>. 6 Concept Formulae with Existential Quantifiers The existential quantifier 9 r: postulates the existence of an r-role filler in the concept .
Reference: [6] <author> R. Brachman and J. Schmolze. </author> <title> An overview of the KL-ONE knowledge representation system. </title> <journal> Cognitive Science, </journal> <volume> 9(2) </volume> <pages> 171-216, </pages> <year> 1985. </year>
Reference-contexts: Modal logics were introduced to distinguish between formulae which are true just by chance, and formulae which are necessarily true. Therefore the modal 2-operator was called the necessitation operator [11,12]. Description logics, on the other hand, are late descendants of Minski's frames [18] and Brachman's KL-ONE <ref> [6] </ref>. They come in a variety of different versions, e.g. ALC [24], CLASSIC [7], KRIS [2], LOOM [17] and even in class-based object oriented formalisms [10].
Reference: [7] <author> R. J. Brachman, D. L. McGuinness, P. F. Patel-Schneider, L. A. Resnick, and A. Borgida. </author> <title> Living with CLASSIC: When and how to use a KL-ONE-like language. </title> <editor> In J. Sowa, editor, </editor> <booktitle> Principles of Semantic Networks, </booktitle> <pages> pages 401-456. </pages> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, Calif., </address> <year> 1991. </year>
Reference-contexts: Therefore the modal 2-operator was called the necessitation operator [11,12]. Description logics, on the other hand, are late descendants of Minski's frames [18] and Brachman's KL-ONE [6]. They come in a variety of different versions, e.g. ALC [24], CLASSIC <ref> [7] </ref>, KRIS [2], LOOM [17] and even in class-based object oriented formalisms [10]. Common to most of them is the separation of a description logic database into a so-called T-Box (terminological box) and a so-called A-Box (assertional box). The T-Box contains specifications of concepts and roles.
Reference: [8] <author> D. Calvanese. </author> <title> Finite model reasoning in description logics. </title> <booktitle> In Proc. of the 5th Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR-96), </booktitle> <pages> pages 292-303. </pages> <publisher> Morgan Kaufmann, </publisher> <address> Los Alto, </address> <year> 1996. </year> <month> 35 </month>
Reference: [9] <author> D. Calvanese and M. Lenzerini. </author> <title> Making object-oriented schemas more expressive. </title> <booktitle> In Proc. of PODS'94, </booktitle> <pages> pages 243-254. </pages> <publisher> ACM press and Addison Wesley, </publisher> <year> 1994. </year>
Reference: [10] <author> D. Calvanese, M. Lenzerini, and D. </author> <title> Nardi A unified framework for class based representation formalisms In J. </title> <editor> Doyle, E. Sandewall, and P. Torasso, editors, </editor> <booktitle> Proc. of the 4th Int. Conf. on the Principles of Knowledge Representation and Reasoning (KR-94), </booktitle> <pages> pages 109-120, </pages> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, </address> <year> 1994. </year>
Reference-contexts: Description logics, on the other hand, are late descendants of Minski's frames [18] and Brachman's KL-ONE [6]. They come in a variety of different versions, e.g. ALC [24], CLASSIC [7], KRIS [2], LOOM [17] and even in class-based object oriented formalisms <ref> [10] </ref>. Common to most of them is the separation of a description logic database into a so-called T-Box (terminological box) and a so-called A-Box (assertional box). The T-Box contains specifications of concepts and roles.
Reference: [11] <author> B. F. Chellas. </author> <title> Modal Logic: An Introduction. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1980. </year>
Reference: [12] <author> A. Chargov and M. Zakharayaschev. </author> <title> Modal Logic, </title> <booktitle> volume 35 of Oxford Logic Guides. </booktitle> <publisher> Oxford University Press, </publisher> <year> 1997. </year>
Reference: [13] <author> M. Davis. </author> <title> Hilbert's tenth problem is undecidable. </title> <journal> American Mathematical Monthly, </journal> <volume> 80 </volume> <pages> 233-269, </pages> <year> 1973. </year>
Reference-contexts: Most of them can solve systems of linear equations and in-equations. In this case only addition, subtraction and multiplication with numbers is allowed. More advanced systems also allow for certain non-linear terms. The general non-linear Diophantine equation problem, however, is undecidable (Hilbert's 10th problem <ref> [13] </ref>). Therefore the arithmetic language should not be too expressive.
Reference: [14] <author> F. Donini, M. Lenzerini, D. Nardi, and W. Nutt. </author> <title> The complexity of concept languages. </title> <note> Research Report DFKI-RR-95-07, DFKI, </note> <year> 1995. </year>
Reference-contexts: Since most of them are decidable, they represent proper fragments of FOL, but they are usually more expressive than propositional logic. Much effort has been invested in recent years to explore the borderline between propositional logic and FOL by investigating various versions of description logics, see <ref> [14] </ref> for a good summary of recent results. 2 In the Description Logic literature one usually finds subsumption to be defined as the converse of implication. This contradicts the common understanding of `subsumes' and the definition in classical logic.
Reference: [15] <author> D. M. Gabbay and H. J. Ohlbach. </author> <title> Quantifier elimination in second-order predicate logic. </title> <editor> In B. Nebel, C. Rich, and W. Swartout, editors, </editor> <booktitle> Principles of Knowledge Representation and Reasoning (KR92), </booktitle> <pages> pages 425-435. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year>
Reference-contexts: Boolean variables are implicitly existentially quantified. That means A R is in fact short for 9p A R if p does not occur in '. A R is a conjunction of propositional formulae, and therefore the existentially quantified p can be eliminated using a quantifier elimination procedure <ref> [15] </ref>. The result is some formula A R 0 which is equivalent to 9p A R , but does not contain p. In the propositional case, elimination of the existentially quantified p amounts to generating all resolvents with p in the clause form of A R .
Reference: [16] <author> I. Horrocks and U. Sattler. </author> <title> A description logic with transitive and converse roles and role hierarchies. </title> <booktitle> In Proceedings of the International Workshop on Description Logics, </booktitle> <address> Povo - Trento, Italy, </address> <year> 1998. </year> <pages> IRST. </pages>
Reference-contexts: The has-part relation, for example, which is very useful in technical domains, is transitive <ref> [16] </ref>. The algorithms presented above depend very much on the fact that the quantifiers 8 r:' and 9 r: over ordinary role terms with no special properties define levels of role fillers, which correspond to the syntactic structure of nested role terms.
Reference: [17] <author> R. MacGregor. </author> <title> A description classifier for the predicate calculus. </title> <booktitle> In Proceedings AAAI-94, </booktitle> <pages> pages 213-220. </pages> <publisher> Morgan Kaufmann, </publisher> <address> San Francisco, </address> <year> 1994. </year>
Reference-contexts: Therefore the modal 2-operator was called the necessitation operator [11,12]. Description logics, on the other hand, are late descendants of Minski's frames [18] and Brachman's KL-ONE [6]. They come in a variety of different versions, e.g. ALC [24], CLASSIC [7], KRIS [2], LOOM <ref> [17] </ref> and even in class-based object oriented formalisms [10]. Common to most of them is the separation of a description logic database into a so-called T-Box (terminological box) and a so-called A-Box (assertional box). The T-Box contains specifications of concepts and roles.
Reference: [18] <author> M. Minsky. </author> <title> A framework for representing knowledge. </title> <editor> In R. J. Brachman and H. J. Levesque, editors, </editor> <booktitle> Reprinted in Readings in Kwowledge Representation, </booktitle> <pages> pages 245-262. </pages> <publisher> Morgan Kaufmann, </publisher> <address> San Francisco, </address> <year> 1990. </year>
Reference-contexts: Modal logics were introduced to distinguish between formulae which are true just by chance, and formulae which are necessarily true. Therefore the modal 2-operator was called the necessitation operator [11,12]. Description logics, on the other hand, are late descendants of Minski's frames <ref> [18] </ref> and Brachman's KL-ONE [6]. They come in a variety of different versions, e.g. ALC [24], CLASSIC [7], KRIS [2], LOOM [17] and even in class-based object oriented formalisms [10].
Reference: [19] <author> B. Nebel. </author> <title> Reasoning and Revision in Hybrid Representation Systems, </title> <booktitle> volume 422 of Lecture Notes in Artificial Intelligence. </booktitle> <publisher> Springer Verlag, </publisher> <year> 1990. </year>
Reference-contexts: Case b) is a consequence of the induction hypothesis. 2 Example 19 Let us illustrate the subsumption checking procedure with an example taken from <ref> [19] </ref>, page 80.
Reference: [20] <author> B. Nebel. </author> <title> Terminological cycles: Semantics and computational properties. </title> <editor> In J.F. Sowa, editor, </editor> <booktitle> Principles of Semantic Networks, </booktitle> <pages> pages 331-361. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year>
Reference: [21] <author> H. J. Ohlbach and J. Koehler. </author> <title> How to extend a formal system with a Boolean Algebra component. </title> <editor> In P. H. Schmidt W. Bibel, editor, </editor> <booktitle> Automated Deduction. </booktitle>
Reference-contexts: then the arithmetic system also should be able to deal with disjunctions of equations and in-equations. 1.1 Atomic Decomposition In the main part of the paper we show how the consistency and the subsump-tion problem of concept formulae can be mapped to equation solving problems. 5 The atomic decomposition technique <ref> [21] </ref> plays a key role in this process. Since the technique is not widely known, we give a brief overview. Atomic decomposition exploits the possibility to decompose finite sets of sets into mutually disjoint atomic components. <p> We obtain x cs 2 ^ x cd 3 ) x cs + x cd 5: (8) which is trivial to check. In <ref> [21] </ref> this idea was developed into a general methodology for augmenting formal systems with a Boolean algebra component. The general methodology works for formal systems whose language has a notion of (existentially quantified) variables. A typical example is a mathematical programming system for solving equations and in-equations. <p> The details can be found in <ref> [21] </ref>. The presentation of the method is independent of any particular application in description logics. 2.1 Syntax of the Languages Involved We need 3 components in the syntax.
References-found: 21

