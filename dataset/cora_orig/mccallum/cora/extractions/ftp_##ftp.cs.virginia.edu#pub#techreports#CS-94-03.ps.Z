URL: ftp://ftp.cs.virginia.edu/pub/techreports/CS-94-03.ps.Z
Refering-URL: ftp://ftp.cs.virginia.edu/pub/techreports/README.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Optimal Rectilinear Steiner Tree Routing in the Presence of Obstacles  
Author: Joseph L. Ganley and James P. Cohoon 
Date: 1993.  
Note: Submitted to IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems,  
Address: Charlottesville, Virginia 22903  
Affiliation: Department of Computer Science University of Virginia  
Abstract: This paper presents a new model for VLSI routing in the presence of obstacles, that transforms any routing instance from a geometric problem into a graph problem. It is the first model that allows computation of optimal obstacle-avoiding rectilinear Steiner trees in time corresponding to the instance size (the number of terminals and obstacle border segments) rather than the size of the routing area. For the most common multi-terminal critical nets|those with three or four terminals|we observe that optimal trees can be computed as efficiently as good heuristic trees, and present algorithms that do so. For nets with five or more terminals, we present algorithms that heuristically compute obstacle-avoiding Steiner trees. Analysis and experimental results demonstrate that the model and algorithms work well in both theory and practice. Also presented are several theoretical results: a derivation of the Steiner ratio for obstacle-avoiding rectilinear Steiner trees, and complexity results for two special cases of the problem. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. E. Beasley, </author> <title> A heuristic for Euclidean and rectilinear Steiner problems, </title> <journal> European Journal of Operational Research, </journal> <volume> 58 (1992), </volume> <pages> pp. 284-292. </pages>
Reference-contexts: For the OARST problem, greedy 3-Steinerization (henceforth called G3S ) has time complexity O (k 2 n). For K = 4, greedy Steinerization is similar to the algorithm of Beasley <ref> [1] </ref>, though Beasley's algorithm computes a new MST at each iteration rather than locally modifying the current MST. For the OARST problem, greedy 4-Steinerization (henceforth, G4S ) has time complexity O (k 3 n 2 ).
Reference: [2] <author> J. L. Bentley and T. Ottmann, </author> <title> Algorithms for reporting and counting geometric intersections, </title> <journal> IEEE Transactions on Computers, </journal> <volume> 28 (1979), </volume> <pages> pp. 643-647. </pages>
Reference-contexts: The intersections of the escape segments are then computed. Since the escape segments are generated in sorted order, the intersections of the escape segments are determined in O (m + n) time, where n is the number of intersections <ref> [2] </ref>. If there are m escape segments, then n is O (m 2 ) in the worst case (if all the horizontal escape segments intersect all the vertical escape segments).
Reference: [3] <author> T. Chao and Y. Hsu, </author> <title> Rectilinear Steiner tree construction by local and global refinement, </title> <booktitle> in Proceedings of the International Conference on Computer-Aided Design, </booktitle> <year> 1990, </year> <pages> pp. 432-435. </pages>
Reference-contexts: For K = 3, greedy Steinerization is an oft-repeated idea whose genesis is unclear. For the standard RST problem, Richards (see Hwang, Richards, and Winter [16]) first investigated 3-Steinerization in this greedy form, and more complex variants appear in Chao and Hsu <ref> [3] </ref>, Lee, Bose, and Hwang [19] and Smith, Lee, and Liebman [24]; these and others are summarized in Hwang, Richards, and Winter [16]. For the OARST problem, greedy 3-Steinerization (henceforth called G3S ) has time complexity O (k 2 n).
Reference: [4] <author> C. Chiang, M. Sarrafzadeh, and C. K. Wong, </author> <title> An algorithm for exact rectilinear Steiner trees for switchbox with obstacles, </title> <journal> IEEE Transactions on Circuits and Systems, </journal> <volume> 39 (1992), </volume> <pages> pp. 446-455. </pages>
Reference: [5] <author> J. P. Cohoon and D. S. Richards, </author> <title> Optimal two-terminal ff-fi wire routing, Integration: </title> <journal> the VLSI Journal, </journal> <volume> 6 (1988), </volume> <pages> pp. 35-57. </pages>
Reference-contexts: Later, Hightower [15] devised a technique called line search routing (LSR) with much lower space demands, but LSR is a heuristic, i.e. it produces suboptimal solutions. Later still, Cohoon and Richards <ref> [5] </ref> devised the first algorithm that optimally routes two-terminal nets in the presence of obstacles, in time corresponding to the size of the routing instance rather than to the routing area. Lee, Yang, and Wong [18] survey algorithms for two-terminal routing in the presence of obstacles. <p> One such routing is depicted in Figure 1 (d) (note that the routing in that figure includes one Steiner point, depicted as an open circle). These escape segments were first described by Cohoon and Richards for an optimal two-terminal interconnection technique called line intersection routing <ref> [5] </ref>. The escape segments are Figure 1: The escape graph (see text). 2 a generalization of the line search escape segments used by Hightower's line search routing heuristic [15]. To describe the escape graph, we appeal to an analogy to interstate highway travel. An obstacle corresponds to a city. <p> These segments are also maximal in a manner similar to the highway escape segments. The dashed segments shown in Figure 1 (c) are the escape segments for the instance depicted in Figure 1 (a). It has been shown that escape segments suffice for optimal routing of two-terminal nets <ref> [5] </ref>. We now proceed to show that there is an optimal routing for any net with k &gt; 2 terminals, that uses only escape segments 1 . Theorem 1 If an instance of the OARST problem is solvable, then there is an optimal solution composed only of escape segments. <p> First, horizontal and vertical line sweeps of the boundary segments of the obstacles are performed to construct the escape segments <ref> [5] </ref>. The sweeps are done in O (m log m) time, where m is the number of obstacle boundary segments. The horizontal sweep at a given x-coordinate is achieved by performing a binary search to determine the endpoints of the potential escape segment associated with the current boundary segment. <p> This determination is done in constant time per escape segment by examining the line sweep information for the previous and successor line sweep locations <ref> [5] </ref>. The processing of a vertical sweep is performed in an analogous manner. The intersections of the escape segments are then computed.
Reference: [6] <author> S. E. Dreyfus and R. A. Wagner, </author> <title> The Steiner problem in graphs, Networks, </title> <booktitle> 1 (1972), </booktitle> <pages> pp. 195-207. </pages>
Reference: [7] <author> R. E. Erickson, C. L. Monma, and A. F. Veinott Jr., </author> <title> Send-and-split method for minimum-concave-cost network flows, </title> <journal> Mathematics of Operations Research, </journal> <volume> 12 (1987), </volume> <pages> pp. 634-664. </pages>
Reference: [8] <author> G. N. Frederickson, </author> <title> Fast algorithms for shortest paths in planar graphs with applications, </title> <journal> SIAM Journal on Computing, </journal> <volume> 16 (1987), </volume> <pages> pp. 1004-1022. </pages>
Reference-contexts: Since the escape graph is planar, all-pairs shortest paths information can be computed in O (n 2 ) time <ref> [8] </ref>; this information will also be used later in the computation of Steiner trees. The second test is the dimension reduction test described by Yang and Wing [26] for the standard RST problem. <p> Since the escape graph is planar, all-pairs shortest paths can be computed in O (n 2 ) time by the algorithm of Fred-erickson <ref> [8] </ref>. Similar observations can be made for four-terminal nets.
Reference: [9] <author> J. L. Ganley and J. P. Cohoon, </author> <title> A faster dynamic programming algorithm for exact rectilinear Steiner minimal trees, </title> <booktitle> in Proceedings of the Fourth Great Lakes Symposium on VLSI, </booktitle> <year> 1994. </year>
Reference-contexts: This suggests that no polynomial-time algorithm can solve the RST problem exactly. Nonetheless, exponential-time algorithms have been devised that can solve the RST problem exactly for small instances in reasonable time <ref> [9, 23, 25] </ref>, as have many efficient polynomial-time heuristics (see Hwang, Richards, and Winter [16]) that produce good suboptimal solutions. The time complexity of the vast majority of these algorithms is a function of size of the instance, not of the routing area as in maze routing algorithms.
Reference: [10] <author> M. R. Garey and D. S. Johnson, </author> <title> The rectilinear Steiner tree problem is NP-complete, </title> <journal> SIAM Journal of Applied Mathematics, </journal> <volume> 32 (1977), </volume> <pages> pp. 826-834. </pages>
Reference-contexts: Other variants can produce optimal routing solutions, but still require time and space corresponding to the size of the routing area. Even in the absence of obstacles, multi-terminal routing corresponds to the rectilinear Steiner tree (RST) problem, which is NP-complete <ref> [10] </ref>. This suggests that no polynomial-time algorithm can solve the RST problem exactly.
Reference: [11] <author> S. Guha and I. Suzuki, </author> <title> Proximity problems and the Voronoi diagram on a rectilinear plane with rectangular obstacles, </title> <booktitle> in Proceedings of the Thirteenth Conference on Foundations of Software Technology and Theoretical Computer Science, </booktitle> <year> 1993. </year>
Reference-contexts: These results demonstrate that the escape graph model is a viable alternative to previous methods for multi-terminal routing in the presence of obstacles. Of course, many interesting avenues of further research remain. In particular, Guha and Suzuki <ref> [11] </ref> present algorithms that compute the rectilinear Voronoi diagram for a set of points in the presence of rectangular obstacles, and algorithms that solve a number of problems, including minimum spanning tree, within this domain.
Reference: [12] <author> S. L. Hakimi, </author> <title> Steiner's problem in graphs and its implications, Networks, </title> <booktitle> 1 (1971), </booktitle> <pages> pp. 113-133. </pages>
Reference-contexts: The shortest tree seen is returned as the optimal tree. This computation incurs a time complexity of O (n 2 ), dominated by checking the H topology. These algorithms are similar to Hakimi's spanning tree enumeration algorithm <ref> [12] </ref>; however, identifying and examining the various topologies explicitly has tremendous dividends. For example, a straightforward implementation of Hakimi's spanning tree enumeration algorithm using a minimum spanning tree algorithm is many times slower than our explicit enumeration algorithms.
Reference: [13] <author> M. Hanan, </author> <title> On Steiner's problem with rectilinear distance, </title> <journal> SIAM Journal of Applied Mathematics, </journal> <volume> 14 (1966), </volume> <pages> pp. 255-265. </pages>
Reference-contexts: No such algorithms have existed previously for computing RSTs in the presence of obstacles, a problem that we refer to as the obstacle-avoiding rectilinear Steiner tree (OARST) problem. Here, we present a theorem, analogous to Hanan's theorem <ref> [13] </ref> for the standard RST 1 problem, that transforms an instance of the OARST problem to a graph problem whose size is a function of the input size, i.e. the number of terminals and obstacle border segments, rather than the routing area. <p> This completes the case analysis. We have shown that every solvable instance of the OARST problem has an optimal solution composed only of escape segments. 2 Theorem 1 can be used similarly to Hanan's well-known theorem <ref> [13] </ref> for the standard RST problem, to construct a graph representation of a routing instance from its geometric description. The vertices of the graph are the terminals and the points at which the escape segments intersect (which are potential Steiner points). <p> In practice, of course, their performance is rarely that bad. 7 Summary We have proven a theorem (Theorem 1) that reduces any instance of the obstacle-avoiding rectilinear Steiner tree problem to a graph problem, analogous to Hanan's theorem <ref> [13] </ref> for the standard rectilinear Steiner tree problem. This theorem enables com 7 putation of optimal OARSTs in time corresponding to the size of the instance rather than to the routing area.
Reference: [14] <author> N. Hasan, G. Vijayan, and C. K. Wong, </author> <title> A neighborhood improvement algorithm for rectilinear Steiner trees, </title> <booktitle> in Proceedings of the International Conference on Circuits and Systems, </booktitle> <year> 1990, </year> <pages> pp. 2869-2872. </pages>
Reference-contexts: For the OARST problem, greedy 4-Steinerization (henceforth, G4S ) has time complexity O (k 3 n 2 ). We can speed up Steinerization heuristics by a batching trick similar to the heuristic of Hasan, Vi-jayan, and Wong <ref> [14] </ref> for the standard RST problem. In their neighborhood Steinerization heuristic, each vertex v is assigned a weight that is the amount of improvement over the MST that is gained by Steiner-izing v and its neighbors.
Reference: [15] <author> D. W. Hightower, </author> <title> A solution to the line-routing problem on the continuous plane, </title> <booktitle> in Proceedings of the Sixth Design Automation Workshop, </booktitle> <year> 1969, </year> <pages> pp. 1-24. </pages>
Reference-contexts: At the time, these demands were reasonable, but presently the routing area of typical VLSI instances is quite large. Later, Hightower <ref> [15] </ref> devised a technique called line search routing (LSR) with much lower space demands, but LSR is a heuristic, i.e. it produces suboptimal solutions. <p> These escape segments were first described by Cohoon and Richards for an optimal two-terminal interconnection technique called line intersection routing [5]. The escape segments are Figure 1: The escape graph (see text). 2 a generalization of the line search escape segments used by Hightower's line search routing heuristic <ref> [15] </ref>. To describe the escape graph, we appeal to an analogy to interstate highway travel. An obstacle corresponds to a city.
Reference: [16] <author> F. K. Hwang, D. S. Richards, and P. Winter, </author> <title> The Steiner Tree Problem, </title> <publisher> North-Holland, </publisher> <address> Amsterdam, Netherlands, </address> <year> 1992. </year> <month> 8 </month>
Reference-contexts: This suggests that no polynomial-time algorithm can solve the RST problem exactly. Nonetheless, exponential-time algorithms have been devised that can solve the RST problem exactly for small instances in reasonable time [9, 23, 25], as have many efficient polynomial-time heuristics (see Hwang, Richards, and Winter <ref> [16] </ref>) that produce good suboptimal solutions. The time complexity of the vast majority of these algorithms is a function of size of the instance, not of the routing area as in maze routing algorithms. <p> The Steiner points introduced by the Steinerization are candidates for further Steinerization in later iterations. For K = 3, greedy Steinerization is an oft-repeated idea whose genesis is unclear. For the standard RST problem, Richards (see Hwang, Richards, and Winter <ref> [16] </ref>) first investigated 3-Steinerization in this greedy form, and more complex variants appear in Chao and Hsu [3], Lee, Bose, and Hwang [19] and Smith, Lee, and Liebman [24]; these and others are summarized in Hwang, Richards, and Winter [16]. <p> For the standard RST problem, Richards (see Hwang, Richards, and Winter <ref> [16] </ref>) first investigated 3-Steinerization in this greedy form, and more complex variants appear in Chao and Hsu [3], Lee, Bose, and Hwang [19] and Smith, Lee, and Liebman [24]; these and others are summarized in Hwang, Richards, and Winter [16]. For the OARST problem, greedy 3-Steinerization (henceforth called G3S ) has time complexity O (k 2 n). For K = 4, greedy Steinerization is similar to the algorithm of Beasley [1], though Beasley's algorithm computes a new MST at each iteration rather than locally modifying the current MST. <p> For the standard RST problem, the average improvement of optimal RSTs over the minimum spanning tree is roughly 12% (see Hwang, Richards, and Winter <ref> [16] </ref>). For the instances of the OARST problem tested here, this value is between 9:5% and 10:5%. Thus, the improvement values in Table 4 should not be compared with those reported in the literature for standard RST heuristics.
Reference: [17] <author> C. Y. Lee, </author> <title> An algorithm for path connections and its applications, </title> <journal> IRE Transactions on Electronic Computers, </journal> <volume> 10 (1961), </volume> <pages> pp. 346-365. </pages>
Reference-contexts: Typically, this routing is performed in the presence of obstacles that the wires of the net must not intersect, such as logic cells and wires in previously routed nets. This problem has been well-studied for the case of two-terminal nets. Initially, Lee <ref> [17] </ref> and Moore [21] independently devised the technique of maze routing for optimally routing two-terminal nets in what were then reasonably-sized problem instances.
Reference: [18] <author> D. T. Lee, C. D. Yang, and C. K. Wong, </author> <title> Rectilinear paths among rectilinear obstacles, </title> <type> Technical Report 92-AC-123, </type> <institution> Department of Electrical Engineering and Computer Science, Northwestern University, </institution> <address> Evanston, IL, </address> <month> Septem-ber </month> <year> 1992. </year>
Reference-contexts: Later still, Cohoon and Richards [5] devised the first algorithm that optimally routes two-terminal nets in the presence of obstacles, in time corresponding to the size of the routing instance rather than to the routing area. Lee, Yang, and Wong <ref> [18] </ref> survey algorithms for two-terminal routing in the presence of obstacles. The problem of routing a multi-terminal net in the presence of obstacles has received substantially less attention.
Reference: [19] <author> J. H. Lee, N. K. Bose, and F. K. Hwang, </author> <title> Use of Steiner's problem in suboptimal routing in rectilinear metric, </title> <journal> IEEE Transactions on Circuits and Systems, </journal> <year> (1976), </year> <pages> pp. 470-476. </pages>
Reference-contexts: For K = 3, greedy Steinerization is an oft-repeated idea whose genesis is unclear. For the standard RST problem, Richards (see Hwang, Richards, and Winter [16]) first investigated 3-Steinerization in this greedy form, and more complex variants appear in Chao and Hsu [3], Lee, Bose, and Hwang <ref> [19] </ref> and Smith, Lee, and Liebman [24]; these and others are summarized in Hwang, Richards, and Winter [16]. For the OARST problem, greedy 3-Steinerization (henceforth called G3S ) has time complexity O (k 2 n).
Reference: [20] <author> S. Mirayala, J. Hashmi, and N. Sherwani, </author> <title> Switchbox Steiner tree problem in presence of obstacles, </title> <booktitle> in Proceedings of the International Conference on Computer-Aided Design, </booktitle> <year> 1991, </year> <pages> pp. 536-539. </pages>
Reference: [21] <author> E. F. Moore, </author> <title> Shortest path through a maze, </title> <institution> Annals of the Computational Laboratory of Harvard University, </institution> <month> 30 </month> <year> (1959), </year> <pages> pp. 285-292. </pages>
Reference-contexts: Typically, this routing is performed in the presence of obstacles that the wires of the net must not intersect, such as logic cells and wires in previously routed nets. This problem has been well-studied for the case of two-terminal nets. Initially, Lee [17] and Moore <ref> [21] </ref> independently devised the technique of maze routing for optimally routing two-terminal nets in what were then reasonably-sized problem instances.
Reference: [22] <author> B. T. Preas, </author> <title> Benchmarks for cell-based layout systems, </title> <booktitle> in Proceedings of the Twenty-fourth Design Automation Conference, </booktitle> <year> 1987, </year> <pages> pp. 319-320. </pages>
Reference-contexts: A folk theorem of VLSI routing is that most nets contain four or fewer terminals. In an effort to verify this claim, we examine the SIGDA Benchmark Suite <ref> [22] </ref>. Table 1 shows the distribution of terminals per net in the benchmark instance Primary 1. As can be seen in the table, three- and four-terminal nets comprise just over one-third of the total nets.
Reference: [23] <author> J. S. Salowe and D. M. Warme, </author> <title> An exact rectilinear Steiner tree algorithm, </title> <booktitle> in Proceedings of the International Conference on Computer Design, </booktitle> <year> 1993, </year> <pages> pp. 472-475. </pages>
Reference-contexts: This suggests that no polynomial-time algorithm can solve the RST problem exactly. Nonetheless, exponential-time algorithms have been devised that can solve the RST problem exactly for small instances in reasonable time <ref> [9, 23, 25] </ref>, as have many efficient polynomial-time heuristics (see Hwang, Richards, and Winter [16]) that produce good suboptimal solutions. The time complexity of the vast majority of these algorithms is a function of size of the instance, not of the routing area as in maze routing algorithms.
Reference: [24] <author> J. M. Smith, D. T. Lee, and J. S. Liebman, </author> <title> An O(n log n) heuristic algorithm for the rectilinear Steiner minimal tree problem, </title> <journal> Engineering Optimization, </journal> <volume> 4 (1980), </volume> <pages> pp. 179-192. </pages>
Reference-contexts: For the standard RST problem, Richards (see Hwang, Richards, and Winter [16]) first investigated 3-Steinerization in this greedy form, and more complex variants appear in Chao and Hsu [3], Lee, Bose, and Hwang [19] and Smith, Lee, and Liebman <ref> [24] </ref>; these and others are summarized in Hwang, Richards, and Winter [16]. For the OARST problem, greedy 3-Steinerization (henceforth called G3S ) has time complexity O (k 2 n).
Reference: [25] <author> C. D. Thomborson, B. Alpern, and L. Carter, </author> <title> Rectilinear Steiner tree minimization on a workstation, </title> <booktitle> in Proceedings of the DI-MACS Workshop on Computational Support for Discrete Mathematics, </booktitle> <year> 1992. </year>
Reference-contexts: This suggests that no polynomial-time algorithm can solve the RST problem exactly. Nonetheless, exponential-time algorithms have been devised that can solve the RST problem exactly for small instances in reasonable time <ref> [9, 23, 25] </ref>, as have many efficient polynomial-time heuristics (see Hwang, Richards, and Winter [16]) that produce good suboptimal solutions. The time complexity of the vast majority of these algorithms is a function of size of the instance, not of the routing area as in maze routing algorithms.
Reference: [26] <author> Y. Y. Yang and O. Wing, </author> <title> Optimal and suboptimal solution algorithms for the wiring problem, </title> <booktitle> in Proceedings of the IEEE International Symposium on Circuit Theory, </booktitle> <year> 1972, </year> <pages> pp. 154-158. </pages>
Reference-contexts: Since the escape graph is planar, all-pairs shortest paths information can be computed in O (n 2 ) time [8]; this information will also be used later in the computation of Steiner trees. The second test is the dimension reduction test described by Yang and Wing <ref> [26] </ref> for the standard RST problem.
References-found: 26

