URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1992/tr-92-080.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1992.html
Root-URL: http://www.icsi.berkeley.edu
Title: q  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> E. Allender. </author> <title> A note on the power of threshold circuts. </title> <booktitle> In Proc. 30 IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 580-584, </pages> <year> 1989. </year>
Reference-contexts: Threshold circuits have been shown to be surprisingly powerful. It is implicit in work by Beame, Cook and Hoover [4] that integer division can be carried out by polynomial size threshold circuits of constant depth. Allender <ref> [1] </ref> (inspired by Toda [23]) shows that any function in can be computed by depth three majority circuits of quasi-polynomial size. Yao [27] extends this to all of (see also [5]). There are some strong lower bounds for majority circuits of very small depth.
Reference: [2] <author> N. Alon and R. B. Boppana. </author> <title> The monotone circuit complexity of boolean functions. </title> <journal> Combinatorica, </journal> <volume> 7 </volume> <pages> 1-22, </pages> <year> 1987. </year>
Reference-contexts: This is a constructive version of Theorem 7.8 from [9]. <ref> [2] </ref>: We will prove the inclusion. That it is strict follows from the fact that parity is in [2]n. Assume n 100, smaller inputs are handled by writing the function on disjuntive normal form.
Reference: [3] <author> N. Alon and J. Bruck. </author> <title> Explicit constructions of depth-2 majority circuits for comparison and addition. </title> <type> Technical Report RJ 8300 (75661), </type> <institution> IBM Research Division, </institution> <month> August </month> <year> 1991. </year> <note> To appear in SIAM J. Disc. Math.. </note>
Reference-contexts: In [20] Siu and Bruck gave a non-constructive proof that depth d threshold circuits can be simulated by depth 2d + 1 majority circuits. Alon and Bruck gave a uniform construction in <ref> [3] </ref> achieving this. Goldmann, H-astad, and Razborov showed in [9] that any function computed by a depth d, polynomial-size threshold circuit is computable by a depth d + 1, polynomial-size majority circuit (note that for d = 1; 2 this is optimal).
Reference: [4] <author> P. W. Beame, S. A. Cook, and H. J. </author> <title> Hoover. Log depth circuits for division and related problems. </title> <booktitle> In Proc. 25 IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 1-6, </pages> <year> 1984. </year>
Reference-contexts: This only leads to a polynomial increase in the number of wires. Hence, depth d polynomial size majority circuits are equivalent to depth d polynomial size, small weight threshold circuits. Threshold circuits have been shown to be surprisingly powerful. It is implicit in work by Beame, Cook and Hoover <ref> [4] </ref> that integer division can be carried out by polynomial size threshold circuits of constant depth. Allender [1] (inspired by Toda [23]) shows that any function in can be computed by depth three majority circuits of quasi-polynomial size. Yao [27] extends this to all of (see also [5]).
Reference: [5] <author> R. Beigel and J. Tarui. </author> <booktitle> On ACC. In Proc. 32 IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 783-792, </pages> <year> 1991. </year> <month> 10 </month>
Reference-contexts: Allender [1] (inspired by Toda [23]) shows that any function in can be computed by depth three majority circuits of quasi-polynomial size. Yao [27] extends this to all of (see also <ref> [5] </ref>). There are some strong lower bounds for majority circuits of very small depth.
Reference: [6] <author> J. Bruck. </author> <title> Harmonic analysis of polynomial threshold functions. </title> <journal> SIAM J. Disc. Math., </journal> <volume> 3(2) </volume> <pages> 168-177, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: The lower bound nearly matches the upper bound in Theorem 2. The size of a circuit is the number of wires. We use the following notation from <ref> [6] </ref>. * [d] is the class of functions computable by depth d polynomial-size threshold circuits. * [d] is the class of functions computable by depth d polynomial-size threshold circuits with polynomially bounded integer weights. We define the following operator. The operator is defined as follows.
Reference: [7] <author> J. Bruck and R. Smolensky. </author> <title> Polynomial threshold functions, AC 0 functions and spectral norms. </title> <booktitle> In Proc. 31 IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 632-641, </pages> <year> 1990. </year>
Reference: [8] <author> A. Chandra, L. Stockmeyer, and U. Vishkin. </author> <title> Constant depth reducibility. </title> <journal> SIAM J. Comp., </journal> <volume> 13 </volume> <pages> 423-439, </pages> <year> 1984. </year>
Reference-contexts: Also, it was recently shown that depth 2, polynomial-size threshold circuits are more powerful than depth 2, polynomial-size, small-weight threshold circuits [9]. On the other hand, it was proved by Chandra, Stockmeyer, and Vishkin <ref> [8] </ref> that addition of n binary encoded integers can be performed by constant depth majority circuits (see also [17]). This implies that depth d, polynomial-size threshold circuits can be simulated by depth O (d), polynomial-size, small-weight threshold circuits.
Reference: [9] <author> M. Goldmann, J. H-astad, and A. Razborov. </author> <title> Majority gates vs. general weighted threshold gates. </title> <booktitle> In Proc. 7 Annual Structure in Complexity Theory Conference, </booktitle> <pages> pages 2-13, </pages> <year> 1992. </year> <note> To appear in Computational Complexity. </note>
Reference-contexts: It is well known that a single threshold gate is strictly more powerful than a single small-weight threshold gate. Also, it was recently shown that depth 2, polynomial-size threshold circuits are more powerful than depth 2, polynomial-size, small-weight threshold circuits <ref> [9] </ref>. On the other hand, it was proved by Chandra, Stockmeyer, and Vishkin [8] that addition of n binary encoded integers can be performed by constant depth majority circuits (see also [17]). <p> In [20] Siu and Bruck gave a non-constructive proof that depth d threshold circuits can be simulated by depth 2d + 1 majority circuits. Alon and Bruck gave a uniform construction in [3] achieving this. Goldmann, H-astad, and Razborov showed in <ref> [9] </ref> that any function computed by a depth d, polynomial-size threshold circuit is computable by a depth d + 1, polynomial-size majority circuit (note that for d = 1; 2 this is optimal). Two open questions were posed in [9]: Can one make an explicit construction, and can one make it <p> Goldmann, H-astad, and Razborov showed in <ref> [9] </ref> that any function computed by a depth d, polynomial-size threshold circuit is computable by a depth d + 1, polynomial-size majority circuit (note that for d = 1; 2 this is optimal). Two open questions were posed in [9]: Can one make an explicit construction, and can one make it work also for non-constant depth? ([9] uses a probablilistic argument, and the blowup in size is super-polynomial if the depth depends on the number of variables.) We give positive answers to 1 both questions. <p> This was done in <ref> [9] </ref> by considering ffF (x) for a randomly chosen integer ff 2 f1; 2; : : :; 2 2n g. Since ff &gt; 0 one has F (x) = ffF (x). It was shown that for any x, the approximator would compute ffF (x) correctly with high probability. <p> In our case the probability space is small enough that we may take the average over all possible choices of parameter values. We will modify the construction. Just like in <ref> [9] </ref> we will use a multiplier ff, but it will be much smaller. For a random ff, the probability of a truncation error is small. <p> This is a constructive version of Theorem 7.8 from <ref> [9] </ref>. [2]: We will prove the inclusion. That it is strict follows from the fact that parity is in [2]n. Assume n 100, smaller inputs are handled by writing the function on disjuntive normal form. <p> We will now generalize this to show that a depth d, polynomial-size, threshold circuit can be simulated by a depth d + 1, polynomial-size, majority circuit. In <ref> [9] </ref> Goldmann, H-astad, and Razborov introduced a circuit class that mixes small and large weights. [d] is the class of functions computable by depth d, polynomial-size, circuits where the top gate has polynomially bounded weights. We will show the following theorem.
Reference: [10] <author> A. Hajnal, W. Maass, P. Pudlak, M. Szegedy, and G. Turan. </author> <title> Threshold circuits of bounded depth. </title> <booktitle> In Proc. 28 IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 99-110, </pages> <year> 1987. </year>
Reference-contexts: Allender [1] (inspired by Toda [23]) shows that any function in can be computed by depth three majority circuits of quasi-polynomial size. Yao [27] extends this to all of (see also [5]). There are some strong lower bounds for majority circuits of very small depth. Hajnal <ref> [10] </ref> prove exponetial lower bounds on the size of depth two majority circuits computing "inner product mod 2." These results were extended in [12] to depth three majority circuits where the gates on the bottom level have very small fanin, and recently superpolynomial bounds were proved for depth three majority circuits <p> If one considers threshold circuits with arbitrary weights, even less is known. There is no super-linear lower bound for depth two threshold circuits computing some function in . As we mentioned above, such bounds exist for majority circuits <ref> [10] </ref>. It is therefore interesting to explore the power of large weights in threshold circuits. It is well known that a single threshold gate is strictly more powerful than a single small-weight threshold gate.
Reference: [11] <author> J. H-astad. </author> <title> On the size of weights for threshold gates. </title> <type> Manuscript, </type> <year> 1992. </year>
Reference-contexts: Then f (x) can be written as f (x) = w 0 + 1 where for all i = 0; : : : ; n, w i 2 and jw i j 2 n (n + 1) (n+1)=2 : A recent result by H-astad <ref> [11] </ref> gives a lower bound on the weights required for a particular threshold function. The lower bound nearly matches the upper bound in Theorem 2. The size of a circuit is the number of wires.
Reference: [12] <author> J. H-astad and M. Goldmann. </author> <title> On the power of small-depth threshold circuits. </title> <journal> Computational Complexity, </journal> <volume> 1(2) </volume> <pages> 113-129, </pages> <year> 1991. </year>
Reference-contexts: Yao [27] extends this to all of (see also [5]). There are some strong lower bounds for majority circuits of very small depth. Hajnal [10] prove exponetial lower bounds on the size of depth two majority circuits computing "inner product mod 2." These results were extended in <ref> [12] </ref> to depth three majority circuits where the gates on the bottom level have very small fanin, and recently superpolynomial bounds were proved for depth three majority circuits where the gates on the bottom level are arbitrary gates of fan-in n 1* [19].
Reference: [13] <author> S. Muroga. </author> <title> Threshold Logic and its Applications. </title> <publisher> Wiley-Interscience, </publisher> <year> 1971. </year>
Reference-contexts: We assume that the argument to the sign function is nonzero for all x 2 1; 1 n . The following well known result by Muroga <ref> [13] </ref> gives a bound on the magnitude of the weights. [[13, Theorem 9.3.2.1]] Let f (x) be an arbitrary n-variable threshold function.
Reference: [14] <author> P. Orponen. </author> <title> Neural networks and complexity theory. </title> <booktitle> In Proc. 17 International Symposium on Mathematical Foundations of Computer Science, </booktitle> <pages> pages 50-61. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year> <note> Lecture Notes in Computer Science 629. </note>
Reference: [15] <author> I. Parberry. </author> <title> A primer on the complexity theory of neural networks. </title> <booktitle> In Formal Techniques in Artificial Intelligence: A Sourcebook. </booktitle> <publisher> Elsevier, </publisher> <year> 1990. </year>
Reference: [16] <author> I. Parberry and G. Schnitger. </author> <title> Parallel computation with threshold functions. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 36(3) </volume> <pages> 278-302, </pages> <month> June </month> <year> 1988. </year>
Reference: [17] <author> N. Pippenger. </author> <title> The complexity of computation by networks. </title> <journal> IBM J. of Research and Development, </journal> <volume> 31(2) </volume> <pages> 235-243, </pages> <month> March </month> <year> 1987. </year>
Reference-contexts: On the other hand, it was proved by Chandra, Stockmeyer, and Vishkin [8] that addition of n binary encoded integers can be performed by constant depth majority circuits (see also <ref> [17] </ref>). This implies that depth d, polynomial-size threshold circuits can be simulated by depth O (d), polynomial-size, small-weight threshold circuits. In [20] Siu and Bruck gave a non-constructive proof that depth d threshold circuits can be simulated by depth 2d + 1 majority circuits.
Reference: [18] <author> A. A. Razborov. </author> <title> On small depth threshold circuits. </title> <booktitle> In Proc. 3 Scandinavian Workshop on Algorithm Theory, </booktitle> <pages> pages 42-52. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year> <note> Lecture Notes in Computer Science 621. </note>
Reference-contexts: For a thourough survey of complexity theoretic results on threshold circuits, see <ref> [18] </ref> 2 Preliminaries It will be convenient to work over 1; 1 rather than 0; 1. An n-variable Boolean function thus maps 1; 1 n to 1; 1. This is a simple transformation, and does not affect the power of threshold gates.
Reference: [19] <author> A. A. Razborov and A. Wigderson. </author> <title> n (log n) lower bounds on the size of depth 3 threshold circuits with AND gates at the bottom. </title> <type> Manuscript, </type> <year> 1992. </year>
Reference-contexts: product mod 2." These results were extended in [12] to depth three majority circuits where the gates on the bottom level have very small fanin, and recently superpolynomial bounds were proved for depth three majority circuits where the gates on the bottom level are arbitrary gates of fan-in n 1* <ref> [19] </ref>. For depth three majority circuits with no extra restrictions, no super-linear lower bounds are known. If one considers threshold circuits with arbitrary weights, even less is known. There is no super-linear lower bound for depth two threshold circuits computing some function in .
Reference: [20] <author> K. Y. Siu and J. Bruck. </author> <title> On the power of threshold circuits with small weights. </title> <journal> SIAM J. Disc. Math., </journal> <volume> 4 </volume> <pages> 423-435, </pages> <year> 1991. </year>
Reference-contexts: This implies that depth d, polynomial-size threshold circuits can be simulated by depth O (d), polynomial-size, small-weight threshold circuits. In <ref> [20] </ref> Siu and Bruck gave a non-constructive proof that depth d threshold circuits can be simulated by depth 2d + 1 majority circuits. Alon and Bruck gave a uniform construction in [3] achieving this.
Reference: [21] <author> K. Y. Siu, J. Bruck, T. Kailath, and T. Hofmeister. </author> <title> Depth-efficient neural networks for division and related problems. </title> <type> Technical Report RJ 7946, </type> <institution> IBM Research Division, </institution> <month> January </month> <year> 1991. </year> <note> To appear in IEEE Trans. Information Theory. 11 </note>
Reference: [22] <author> K. Y. Siu and V. Roychowdhury. </author> <title> On optimal depth threshold circuits for multiplication and related problems. </title> <type> Manuscript, </type> <year> 1992. </year>
Reference-contexts: By Theorem 2, this is always possible. 9 6 Conclusions and Open Problems Our results entail the first explicit constructions for the optimal depth, polynomial size majority circuits for the number of basic functions including, among others, powering (depth 2), integer multiplication and integer division (depth 3), see <ref> [22] </ref>. More generally, our results entail the uniformity of the classes of majority circuits simulating the corresponding classes of threshold circuits. (We address this question in the full version of this paper.) We conclude with the list of open problems: 1.
Reference: [23] <author> S. </author> <title> Toda. </title> <booktitle> On the computational power of P P and P . In Proc. 30 IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 514-519, </pages> <year> 1989. </year>
Reference-contexts: Threshold circuits have been shown to be surprisingly powerful. It is implicit in work by Beame, Cook and Hoover [4] that integer division can be carried out by polynomial size threshold circuits of constant depth. Allender [1] (inspired by Toda <ref> [23] </ref>) shows that any function in can be computed by depth three majority circuits of quasi-polynomial size. Yao [27] extends this to all of (see also [5]). There are some strong lower bounds for majority circuits of very small depth.
Reference: [24] <author> J. Toran. </author> <title> An oracle characterization of the counting hierarchies. </title> <booktitle> In Proc. 3 Annual Structure in Complexity Theory Conference, </booktitle> <pages> pages 213-223, </pages> <year> 1988. </year>
Reference: [25] <author> J. Toran. </author> <title> A combinatorial technique for separating counting complexity classes. </title> <booktitle> In Proc. 16 International Colloquium on Automata, Languages and Programming, </booktitle> <pages> pages 732-744. </pages> <publisher> Springer-Verlag, </publisher> <year> 1989. </year> <note> Lecture Notes in Computer Science 372. </note>
Reference: [26] <author> K. W. Wagner. </author> <title> The complexity of combinatorial problems with succinct input representation. </title> <journal> Acta Informatica, </journal> <volume> 23 </volume> <pages> 325-356, </pages> <year> 1986. </year>
Reference: [27] <author> A. C. Yao. </author> <title> On ACC and threshold circuits. </title> <booktitle> In Proc. 31 IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 619-627, </pages> <year> 1990. </year> <month> 12 </month>
Reference-contexts: It is implicit in work by Beame, Cook and Hoover [4] that integer division can be carried out by polynomial size threshold circuits of constant depth. Allender [1] (inspired by Toda [23]) shows that any function in can be computed by depth three majority circuits of quasi-polynomial size. Yao <ref> [27] </ref> extends this to all of (see also [5]). There are some strong lower bounds for majority circuits of very small depth.
References-found: 27

