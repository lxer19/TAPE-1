URL: http://iamwww.unibe.ch/~rvswww/Publikationen/TechReports/iam-92-015.ps.gz
Refering-URL: http://iamwww.unibe.ch/~rvswww/Publikationen/index.html
Root-URL: 
Email: hogrefe@iam.unibe.ch, leue@iam.unibe.ch  
Title: Specifying Real-Time Requirements for Communication Protocols 1  
Author: Dieter Hogrefe Stefan Leue 
Note: 1 Also submitted for publication. 2 The work of this author was supported by the Swiss National Fund.  
Date: July 1992  
Address: Langgassstrasse 51 CH-3012 Bern, Switzerland  
Affiliation: University of Berne Institute for Informatics and Applied Mathematics  
Pubnum: IAM 92-015  
Abstract-found: 0
Intro-found: 1
Reference: [BHS91] <author> Ferenc Belina, Dieter Hogrefe, and Amardeo Sarma. </author> <title> SDL with Applications from Protocol Specification. </title> <publisher> Prentice Hall International, </publisher> <year> 1991. </year>
Reference: [FP88] <author> S. R. Faulk and D. L. Parnas. </author> <title> On synchronisation in hard-real-time systems. </title> <journal> Communications of the ACM, </journal> <volume> 31(3) </volume> <pages> 274-287, </pages> <month> mar </month> <year> 1988. </year>
Reference: [GHL + 92] <author> J. Grabowski, D. Hogrefe, P. Ladkin, S. Leue, and R. Nahm. </author> <title> Conformance testing a tool for the generation of test cases. Project Report, project contract no. </title> <type> 233, </type> <institution> funded by Swiss PTT, University of Berne, </institution> <month> may </month> <year> 1992. </year>
Reference: [Hen91] <author> Thomas A. Henzinger. </author> <title> The Temporal Specification and Verification of Real-Time Systems. </title> <type> Report no. </type> <institution> STAN-CS-91-1380, Stanford University, Department of Computer Science, </institution> <month> aug </month> <year> 1991. </year>
Reference-contexts: The semantics are as usual, for a definition we refer the reader to [MP90]. Real-Time Temporal Logic Real-Time extended temporal logic has been suggested in various places as a suitable tool for the specification of real-time systems (see for example <ref> [Hen91] </ref>, [Koy89] and [Ost89]). We apply a variant of these logics called metrical temporal logic (MTL) to our example 2 . PTL is a proper subset of MTL. <p> For a complete formal definition of the syntax and semantics of MTL we refer the reader to <ref> [Hen91, chapter 3.4] </ref> 14 initiator will issue a IDISind SP only if preceded by a the reception of a CC or a DR PDU. 2 (ta (?ICON req) 2 t (ta (!IDISind) 3 (ta (?CC) _ ta (?DR)))) We call this requirement a temporal safety requirement. <p> On these grounds we will devise one or more suitable specification styles for the specification of high performance protocols. 1 For verification and validation see for example <ref> [Hen91] </ref>, for testing see for example [RG89]. 17
Reference: [Hog91] <author> Dieter Hogrefe. </author> <title> OSI formal specification case study: The INRES protocol and service. </title> <type> Technical Report IAM-91-012, </type> <institution> University of Berne, </institution> <year> 1991. </year>
Reference: [Koy89] <author> Ron Koymans. </author> <title> Specifying Message Passing and Time-Critical Systems with Temporal Logic. </title> <type> PhD thesis, </type> <institution> Technical University of Eindhoven, </institution> <year> 1989. </year>
Reference-contexts: The semantics are as usual, for a definition we refer the reader to [MP90]. Real-Time Temporal Logic Real-Time extended temporal logic has been suggested in various places as a suitable tool for the specification of real-time systems (see for example [Hen91], <ref> [Koy89] </ref> and [Ost89]). We apply a variant of these logics called metrical temporal logic (MTL) to our example 2 . PTL is a proper subset of MTL.
Reference: [LL92a] <author> P. B. Ladkin and S. Leue. </author> <title> An analysis of message sequence charts. </title> <type> Technical Report IAM 92-013, </type> <institution> University of Berne, Institute for Informatics and Applied Mathematics, </institution> <year> 1992. </year> <note> Also submitted for publication. </note>
Reference-contexts: Real-time constraints As already mentioned we previously introduced an operational model as semantics for MSC specifications. In this model we translate MSCs to global state automata which generate all possible interleavings of the communication events specified by an MSC specification. In <ref> [LL92a] </ref> we showed how temporal logic is well suited to specify liveness properties for MSC specifications. We will now suggest a temporal logic based method to specify real-time properties for MSCs. We will first informally introduce some terminology which is in much more detail explained in [LL92a]. <p> In <ref> [LL92a] </ref> we showed how temporal logic is well suited to specify liveness properties for MSC specifications. We will now suggest a temporal logic based method to specify real-time properties for MSCs. We will first informally introduce some terminology which is in much more detail explained in [LL92a]. Computations and state predicates The global state automaton S which we obtain from the MSC specification transits between global system states 1 .
Reference: [LL92b] <author> P. B. Ladkin and S. Leue. </author> <title> An automaton interpretation of message sequence charts. </title> <type> Technical Report IAM 92-012, </type> <institution> University of Berne, Institute for Infor-matics and Applied Mathematics, </institution> <year> 1992. </year> <note> Also submitted for publication. </note>
Reference-contexts: MSCs focus on the description of the message and control flow of the considered processes, data and real-time aspects are not directly specified. In previous work ([GHL + 92], <ref> [LL92b] </ref>) we formalised this method by providing an automaton semantics. We also showed how additional safety and liveness properties for the specified systems could be formulated by the application of temporal logic (see [LL92b]). <p> In previous work ([GHL + 92], <ref> [LL92b] </ref>) we formalised this method by providing an automaton semantics. We also showed how additional safety and liveness properties for the specified systems could be formulated by the application of temporal logic (see [LL92b]). We will now present a specification of the considered INRES example and we will thereafter use real-time extended temporal logic to specifiy the required real-time behaviour.
Reference: [LV90] <author> P. B. Ladkin and F. H. Vogt. </author> <title> Proceedings of the Berkeley workshop on temporal and real-time specification. </title> <type> Technical Report TR-90-060, </type> <institution> International Computer Science Institute, Berkeley, California, </institution> <year> 1990. </year>
Reference: [MP90] <author> Z. Manna and A. Pnueli. </author> <title> A hierarchy of temporal properties. </title> <booktitle> In Proceedings of the 9th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 377-408. </pages> <publisher> ACM Press, </publisher> <month> aug </month> <year> 1990. </year> <month> 18 </month>
Reference-contexts: We define the state predicate ta (a) to be true at position i if a is taken at that position. Propositional Temporal Logic. We define a Propositional Temporal Logic (PTL) in the usual way, following <ref> [MP90] </ref>. The language has the state predicate ta (a) as its only basic assertion, includes the Boolean connectives (we use just : and _ for simplicity), and the temporal operators 3 (eventually), 2 (henceforth) and S (since). <p> As syntactic abbreviations we introduce the notations 2p 4 4 = true S p. The semantics are as usual, for a definition we refer the reader to <ref> [MP90] </ref>. Real-Time Temporal Logic Real-Time extended temporal logic has been suggested in various places as a suitable tool for the specification of real-time systems (see for example [Hen91], [Koy89] and [Ost89]). We apply a variant of these logics called metrical temporal logic (MTL) to our example 2 .
Reference: [MP91] <author> Z. Manna and A. Pnueli. </author> <title> The Temporal Logic of Reactive and Concurrent Systems, volume 1, Specification. </title> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: Computations and state predicates The global state automaton S which we obtain from the MSC specification transits between global system states 1 . Its transitions are 1 Manna and Pnueli use the term Basic Transition System in <ref> [MP91] </ref> to describe these systems. 13 labeled by the systems communication events, for a message of type p we denote the corresponding send event by !p and the receive event by ?p. Communication in MSCs is asynchronous, therefore sending and receiving are distinct events.
Reference: [Ost89] <author> J. S. Ostroff. </author> <title> Real-time temporal logic decision procedures. </title> <booktitle> In IEEE Real-Time systems Symposium, </booktitle> <pages> pages 92-101, </pages> <year> 1989. </year>
Reference-contexts: The semantics are as usual, for a definition we refer the reader to [MP90]. Real-Time Temporal Logic Real-Time extended temporal logic has been suggested in various places as a suitable tool for the specification of real-time systems (see for example [Hen91], [Koy89] and <ref> [Ost89] </ref>). We apply a variant of these logics called metrical temporal logic (MTL) to our example 2 . PTL is a proper subset of MTL.
Reference: [QAF90] <author> J. Quemada, A. Azcorra, and D. Frutos. TIC: </author> <title> A timed calculous for LOTOS. </title> <editor> In S. T. Vuong, editor, </editor> <booktitle> IFIP Formal Description Techniques, II, </booktitle> <pages> pages 195-209. </pages> <publisher> Elsevier Science Publishers B. V. (North Holland), </publisher> <year> 1990. </year>
Reference: [RG89] <author> Rami R. Razouk and Michael M. Gorlick. </author> <title> A real-time interval logic for reasoning about executions of real-time programs. </title> <booktitle> In Proceedings of the ACM SIGSOFT'89 Third Symposium on Software Testing, Analysis and Verification, </booktitle> <pages> pages 10-19, </pages> <month> dec </month> <year> 1989. </year>
Reference-contexts: On these grounds we will devise one or more suitable specification styles for the specification of high performance protocols. 1 For verification and validation see for example [Hen91], for testing see for example <ref> [RG89] </ref>. 17
Reference: [vHTZ90] <author> Wilfried H. P. van Hulzen, Paul A. J. Tilanus, and Han Zuidweg. </author> <title> Lotos extended with clocks. </title> <editor> In S. T. Vuong, editor, </editor> <booktitle> Formal Description Techniques, II, </booktitle> <pages> pages 179-191. </pages> <publisher> Elsevier Science Publishers B. V. (North-Holland), </publisher> <year> 1990. </year>
Reference-contexts: introduction of clocks it becomes possible to measure durations between ordered, but not necessarily immediately successive events and to influence the occurrence of events. In Clock Extended LOTOS or CELOTOS as it is called in <ref> [vHTZ90] </ref> two (predefined) data types are required, one for clock identifiers and one for durations.
Reference: [XI92] <author> CCITT SG XI. </author> <title> Recommendation Z.100: Specification and Description Technique. CCITT, </title> <booktitle> 1992. </booktitle> <address> Geneva. </address> <month> 19 </month>
References-found: 16

