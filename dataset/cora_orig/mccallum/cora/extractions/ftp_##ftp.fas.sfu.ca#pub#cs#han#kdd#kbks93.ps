URL: ftp://ftp.fas.sfu.ca/pub/cs/han/kdd/kbks93.ps
Refering-URL: http://fas.sfu.ca/cs/research/groups/DB/sections/publication/kdd/kdd.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: (han@cs.sfu.ca)  (nishio@ise.eng.osaka-u.ac.jp)  (kawano@kuamp.kyoto-u.ac.jp)  
Title: Knowledge Discovery in Object-Oriented and Active Databases  
Author: Jiawei Han Shojiro Nishio Hiroyuki Kawano 
Address: Burnaby, BC, Canada V5A 1S6  Osaka 565, Japan  Kyoto 606, Japan  
Affiliation: School of Computing Science, Simon Fraser University,  Department of Information Systems Engineering, Osaka University,  Department of Applied Math. and Physics, Kyoto University,  
Abstract: Knowledge discovery in databases (or data mining), which extracts interesting knowledge from large databases, represents an important direction in the development of data- and knowledge- base systems. With fruitful research results on knowledge discovery in relational databases and the emerging trend in the development of object-oriented and active database systems, it is natural to investigate knowledge discovery in object-oriented and active databases. This paper overviews the mechanisms for knowledge discovery in object-oriented and active database systems, with an emphasis on the techniques for generalization of complex data objects, methods, class hierarchies and dynamically evolving data, and on the integration of knowledge discovery mechanisms with production control processes. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Anand and G. Kahn. </author> <title> Oppotunity explorer: Navigating large databases using knowledge discovery templates. </title> <booktitle> In Proc. AAAI-93 Workshop on Knowledge Discovery in Databases, </booktitle> <pages> pages 45-51, </pages> <address> Washington DC, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: A number of knowledge discovery systems/prototypes have been constructed and experimented on medium to large databases, such as DBLEARN [10], INLEN [11], KDW+ [19], EXPLORA [13], FortyNiner [24], Opportunity Explorer <ref> [1] </ref>, Datalogic/R [25], Knowledge-Seeker [5], etc. With increasing R&D activities on KDD, many technically mature KDD systems will emerge in the near future. Most of the recent developments are focused on knowledge discovery in relational databases. There are still many research issues on knowledge discov ery in complex databases.
Reference: [2] <author> M. Atkinson, F. Bancilhon, D. DeWitt, K. Dit-trich, D. Maier, and S. Zdonik. </author> <title> The object-oriented database systems manifesto. </title> <editor> In W. Kim, J.-M. Nico-las, and S. Nishio, editors, </editor> <booktitle> Deductive and Object-Oriented Databases, </booktitle> <pages> pages 223-240. </pages> <publisher> Elsevier Science, </publisher> <year> 1990. </year>
Reference-contexts: Object-oriented data models and systems <ref> [2, 3, 12] </ref> embody rich data structures and semantics in the construction of complex databases, such as complex data objects, class hierarchies, property inheritance, methods and active data, etc.
Reference: [3] <author> F. Bancilhon, C. Delobel, and P. Kanellakis. </author> <title> Building an Object-Oriented Database System: The story of O2. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year>
Reference-contexts: With the emerging trend in the development of new database systems, such as object-oriented and active databases, for advanced database applications <ref> [12, 3] </ref>, fl The research of the first author was supported in part by the grants from the Natural Sciences and Engineering Research Council of Canada and the Centre for Systems Science of Simon Fraser University, that of the second author was supported in part by the Ministry of Education, Science <p> Object-oriented data models and systems <ref> [2, 3, 12] </ref> embody rich data structures and semantics in the construction of complex databases, such as complex data objects, class hierarchies, property inheritance, methods and active data, etc.
Reference: [4] <author> C. Beeri and T. Milo. </author> <title> A model for active object-oriented database. </title> <booktitle> In Proc. 17th Int. Conf. Very Large Data Bases, </booktitle> <pages> pages 337-349, </pages> <address> Barcelona, Spain, </address> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: The prompt, real-time, and intelligent reactions to the changes of the environment, can be dealt with by application of active database technology <ref> [4, 15, 8] </ref> for automatic and prompt reaction and control of the environment. 4.1 Learning current status, stable and evolution rules in dynamic environ ments In a dynamic environment, the status of a system changes with time.
Reference: [5] <author> B. de Ville. </author> <title> Applying statistical knowledge to database analysis and knowledge base construction. </title> <booktitle> In Proc. 6th Conference on Artificial Intelligence Applications, </booktitle> <pages> pages 30-36, </pages> <address> Santa Barbara, CA, </address> <year> 1990. </year>
Reference-contexts: A number of knowledge discovery systems/prototypes have been constructed and experimented on medium to large databases, such as DBLEARN [10], INLEN [11], KDW+ [19], EXPLORA [13], FortyNiner [24], Opportunity Explorer [1], Datalogic/R [25], Knowledge-Seeker <ref> [5] </ref>, etc. With increasing R&D activities on KDD, many technically mature KDD systems will emerge in the near future. Most of the recent developments are focused on knowledge discovery in relational databases. There are still many research issues on knowledge discov ery in complex databases.
Reference: [6] <author> D. Fisher. </author> <title> Improving inference through conceptual clustering. </title> <booktitle> In Proc. 1987 AAAI Conf., </booktitle> <pages> pages 461-465, </pages> <address> Seattle, Washington, </address> <month> July </month> <year> 1987. </year>
Reference-contexts: Both concept hierarchies can be obtained by dynamic adjustment of a given concept hierarchy based on the analysis of the statistical distribution of the relevant data sets. Generalization on numerical attributes can be performed similarly but in a more automatic way by the examination of data distribution characteristics <ref> [6] </ref>. In many cases, it may not require any predefined concept hierarchies.
Reference: [7] <author> W. J. Frawley, G. Piatetsky-Shapiro, and C. J. Matheus. </author> <title> Knowledge discovery in databases: An overview. </title> <editor> In G. Piatetsky-Shapiro and W. J. Fraw-ley, editors, </editor> <booktitle> Knowledge Discovery in Databases, </booktitle> <pages> pages 1-27. </pages> <publisher> AAAI/MIT Press, </publisher> <year> 1991. </year>
Reference-contexts: 1 Introduction With rapid growth in the amount of information stored in databases, the development of effective and efficient tools for knowledge discovery in databases (KDD, or data/knowledge mining) has become an increasingly important task in both database and machine learning researches <ref> [21, 7, 22] </ref>. In the past several years, fruitful research has been conducted on knowledge discovery in relational databases, with some experimental systems constructed and tested in large databases [7, 11, 19, 10]. <p> In the past several years, fruitful research has been conducted on knowledge discovery in relational databases, with some experimental systems constructed and tested in large databases <ref> [7, 11, 19, 10] </ref>. <p> The discovery of clear and concise relationships or regularities among the collected data, can be handled by a knowledge discovery technique which performs efficient and effective data generalization to discover useful knowledge or regularity from the collected information <ref> [18, 21, 7] </ref>. 3. <p> The availability of generalization operators and knowledge discovery tools will substantially enhance the power and increase the flexibility of data and knowledge-base systems. As an emerging field, knowledge discovery in database has not only attracted wide attention in research communities <ref> [21, 7, 22] </ref> but also shown its high promise in industrial applications. A number of knowledge discovery systems/prototypes have been constructed and experimented on medium to large databases, such as DBLEARN [10], INLEN [11], KDW+ [19], EXPLORA [13], FortyNiner [24], Opportunity Explorer [1], Datalogic/R [25], Knowledge-Seeker [5], etc.
Reference: [8] <author> N.H. Gehani, H. V. Jagadish, and O. Shmueli. </author> <title> Composite event specification in active databases: Model and implementation. </title> <booktitle> In Proc. 18th Int. Conf. Very Large Data Bases, </booktitle> <pages> pages 327-338, </pages> <address> Vancouver, Canada, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: The prompt, real-time, and intelligent reactions to the changes of the environment, can be dealt with by application of active database technology <ref> [4, 15, 8] </ref> for automatic and prompt reaction and control of the environment. 4.1 Learning current status, stable and evolution rules in dynamic environ ments In a dynamic environment, the status of a system changes with time.
Reference: [9] <author> M. Genesereth and N. Nilsson. </author> <booktitle> Logical Foundations of Artificial Intelligence. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1987. </year>
Reference-contexts: Undoubtedly, learning-from-examples <ref> [16, 9] </ref> should be an important strategy for knowledge discovery in databases. Most learning-from-examples algorithms partition the set of examples into positive and negative sets and perform generalization using the positive data and specialization using the negative ones [16].
Reference: [10] <author> J. Han, Y. Cai, N. Cercone, and Y. Huang. </author> <title> DBLEARN: A knowledge discovery system for databases. </title> <booktitle> In Proc. 1st Int. Conf. on Information and Knowledge Management, </booktitle> <pages> pages 473-481, </pages> <address> Baltimore, Maryland, </address> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: In the past several years, fruitful research has been conducted on knowledge discovery in relational databases, with some experimental systems constructed and tested in large databases <ref> [7, 11, 19, 10] </ref>. <p> The class generated by the application of a generalization operator is called the resulting class, R. An attribute-oriented induction method, developed in the study of knowledge discovery in relational databases <ref> [10] </ref>, can be extended to OODBs. The method is briefly outlined as follows. First, a set of generalization operators are selected and applied to an attribute in the working class without considering the inter-relationships among different attributes before the concepts in each attribute are generalized to a desired level. <p> Attribute-oriented induction, which considers the attribute inter-relationships only when the data has been generalized into a relatively small set, will substantially reduce the computational complexity of a database learning process. 3.1 An attribute-oriented induction method In general, we have the following basic techniques for attribute-oriented induction <ref> [10] </ref> in OODBs. Technique 1 (Data focusing) Generalization should be performed only on the set of data which are relevant to the learning request. Technique 2 (Fine granularity generalization) Generalization should be considered on the smallest decomposable components (or attributes) of the relevant data objects. <p> Technique 7 (Class generalization control) Generalization on a prime generalized class is performed until the number of distinct generalized objects in the resulting class is no greater than a prespecified class threshold. Alternative 2 takes the set of generalized objects and maps them into a generalized feature table <ref> [10] </ref>. <p> As an emerging field, knowledge discovery in database has not only attracted wide attention in research communities [21, 7, 22] but also shown its high promise in industrial applications. A number of knowledge discovery systems/prototypes have been constructed and experimented on medium to large databases, such as DBLEARN <ref> [10] </ref>, INLEN [11], KDW+ [19], EXPLORA [13], FortyNiner [24], Opportunity Explorer [1], Datalogic/R [25], Knowledge-Seeker [5], etc. With increasing R&D activities on KDD, many technically mature KDD systems will emerge in the near future. Most of the recent developments are focused on knowledge discovery in relational databases.
Reference: [11] <author> K. A. Kaufman, R. S. Michalski, and L. Kerschberg. </author> <title> Mining for knowledge in databases: Goals and general description of the INLEN system. </title> <editor> In G. Piatetsky-Shapiro and W. J. Frawley, editors, </editor> <booktitle> Knowledge Discovery in Databases, </booktitle> <pages> pages 449-462. </pages> <publisher> AAAI/MIT Press, </publisher> <year> 1991. </year>
Reference-contexts: In the past several years, fruitful research has been conducted on knowledge discovery in relational databases, with some experimental systems constructed and tested in large databases <ref> [7, 11, 19, 10] </ref>. <p> A number of knowledge discovery systems/prototypes have been constructed and experimented on medium to large databases, such as DBLEARN [10], INLEN <ref> [11] </ref>, KDW+ [19], EXPLORA [13], FortyNiner [24], Opportunity Explorer [1], Datalogic/R [25], Knowledge-Seeker [5], etc. With increasing R&D activities on KDD, many technically mature KDD systems will emerge in the near future. Most of the recent developments are focused on knowledge discovery in relational databases. <p> Finally, software development and experimentation should be performed on the proposed mechanisms to verify and improve the proposed techniques and compare them with other related, promising proposals <ref> [11, 18, 13, 24] </ref>.
Reference: [12] <author> W. Kim. </author> <title> Introduction to Object-Oriented Databases. </title> <publisher> The MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: With the emerging trend in the development of new database systems, such as object-oriented and active databases, for advanced database applications <ref> [12, 3] </ref>, fl The research of the first author was supported in part by the grants from the Natural Sciences and Engineering Research Council of Canada and the Centre for Systems Science of Simon Fraser University, that of the second author was supported in part by the Ministry of Education, Science <p> Object-oriented data models and systems <ref> [2, 3, 12] </ref> embody rich data structures and semantics in the construction of complex databases, such as complex data objects, class hierarchies, property inheritance, methods and active data, etc.
Reference: [13] <author> W. Kloesgen. </author> <title> Problems for knowledge discovery in databases and their treatment in the statistics interpreter explora. </title> <journal> Int. J. Intell. Syst., </journal> <volume> 7 </volume> <pages> 649-73, </pages> <year> 1992. </year>
Reference-contexts: A number of knowledge discovery systems/prototypes have been constructed and experimented on medium to large databases, such as DBLEARN [10], INLEN [11], KDW+ [19], EXPLORA <ref> [13] </ref>, FortyNiner [24], Opportunity Explorer [1], Datalogic/R [25], Knowledge-Seeker [5], etc. With increasing R&D activities on KDD, many technically mature KDD systems will emerge in the near future. Most of the recent developments are focused on knowledge discovery in relational databases. <p> Finally, software development and experimentation should be performed on the proposed mechanisms to verify and improve the proposed techniques and compare them with other related, promising proposals <ref> [11, 18, 13, 24] </ref>.
Reference: [14] <author> M. Manago and Y. Kodratoff. </author> <title> Induction of decision trees from complex structured data. </title> <editor> In G. Piatetsky-Shapiro and W. J. Frawley, editors, </editor> <booktitle> Knowledge Discovery in Databases, </booktitle> <pages> pages 289-306. </pages> <publisher> AAAI/MIT Press, </publisher> <year> 1991. </year>
Reference-contexts: This not only brings the power and flexibility to the system but also adds complexity to the implementation techniques, including the development of knowledge discovery mechanisms <ref> [14] </ref>. Active database techniques react to the changes of environments or production processes automatically by referencing database data and triggering appropriate actions.
Reference: [15] <author> D.R. McCarthy and U. Dayal. </author> <title> The architecture of an active database management system. </title> <booktitle> In Proc. 1989 ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 215-24, </pages> <address> Portland, OR, </address> <month> June </month> <year> 1989. </year>
Reference-contexts: The prompt, real-time, and intelligent reactions to the changes of the environment, can be dealt with by application of active database technology <ref> [4, 15, 8] </ref> for automatic and prompt reaction and control of the environment. 4.1 Learning current status, stable and evolution rules in dynamic environ ments In a dynamic environment, the status of a system changes with time.
Reference: [16] <author> R. S. Michalski. </author> <title> A theory and methodology of inductive learning. </title> <editor> In Michalski et. al., editor, </editor> <booktitle> Machine Learning: An Artificial Intelligence Approach, </booktitle> <volume> Vol. 1, </volume> <pages> pages 83-134. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1983. </year>
Reference-contexts: Undoubtedly, learning-from-examples <ref> [16, 9] </ref> should be an important strategy for knowledge discovery in databases. Most learning-from-examples algorithms partition the set of examples into positive and negative sets and perform generalization using the positive data and specialization using the negative ones [16]. <p> Undoubtedly, learning-from-examples [16, 9] should be an important strategy for knowledge discovery in databases. Most learning-from-examples algorithms partition the set of examples into positive and negative sets and perform generalization using the positive data and specialization using the negative ones <ref> [16] </ref>. Unfortunately, a database does not usually store negative data explicitly, and thus no explicitly specified negative examples can be used for specialization. Therefore, a database induction process relies mainly on generalization, which should be performed cautiously to avoid over-generalization. <p> If there is a large set of distinct values in an attribute but there is no generalization operator for it, the attribute should be removed. Thus, we have Technique 3 which corresponds to the generalization rule, dropping conditions, in learning-from-examples <ref> [16] </ref>. The generalization of an attribute value using a selected generalization operator makes the object covers more cases than the original one and thus generalizes the concept. Thus, we have Technique 4 which corresponds to the generalization rule, climbing generalization trees, in learning-from-examples [16]. <p> the generalization rule, dropping conditions, in learning-from-examples <ref> [16] </ref>. The generalization of an attribute value using a selected generalization operator makes the object covers more cases than the original one and thus generalizes the concept. Thus, we have Technique 4 which corresponds to the generalization rule, climbing generalization trees, in learning-from-examples [16]. Technique 5 is based on the merge of identical tuples.
Reference: [17] <author> S. Nishio, H. Kawano, and J. Han. </author> <title> Knowledge discovery in object-oriented databases: The first step. </title> <booktitle> In Proc. AAAI-93 Workshop on knowledge discovery in databases, </booktitle> <pages> pages 186-198, </pages> <address> Washington, DC, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: The worst-case time complexity of Steps 2 & 3 in Algorithm 1 is O (n log (n)) where n is the number of data objects relevant to the learning request <ref> [17] </ref>. Therefore, it is a fairly efficient algorithm for knowledge extraction in large databases.
Reference: [18] <author> G. Piatetsky-Shapiro and W. J. Frawley. </author> <title> Knowledge Discovery in Databases. </title> <publisher> AAAI/MIT Press, </publisher> <year> 1991. </year>
Reference-contexts: The discovery of clear and concise relationships or regularities among the collected data, can be handled by a knowledge discovery technique which performs efficient and effective data generalization to discover useful knowledge or regularity from the collected information <ref> [18, 21, 7] </ref>. 3. <p> Finally, software development and experimentation should be performed on the proposed mechanisms to verify and improve the proposed techniques and compare them with other related, promising proposals <ref> [11, 18, 13, 24] </ref>.
Reference: [19] <author> G. Piatetsky-Shapiro and C.J. Matheus. </author> <title> Knowledge discovery workbench for exploring business databases. </title> <booktitle> In 7(7), </booktitle> <pages> pages 675-686, </pages> <year> 1992. </year>
Reference-contexts: In the past several years, fruitful research has been conducted on knowledge discovery in relational databases, with some experimental systems constructed and tested in large databases <ref> [7, 11, 19, 10] </ref>. <p> A number of knowledge discovery systems/prototypes have been constructed and experimented on medium to large databases, such as DBLEARN [10], INLEN [11], KDW+ <ref> [19] </ref>, EXPLORA [13], FortyNiner [24], Opportunity Explorer [1], Datalogic/R [25], Knowledge-Seeker [5], etc. With increasing R&D activities on KDD, many technically mature KDD systems will emerge in the near future. Most of the recent developments are focused on knowledge discovery in relational databases.
Reference: [20] <author> R.L. Read, D.S. Fussell, and A. Silberschatz. </author> <title> A multi-resolution relational data model. </title> <booktitle> In Proc. 18th Int. Conf. Very Large Data Bases, </booktitle> <pages> pages 139-150, </pages> <address> Van-couver, Canada, </address> <month> Aug. </month> <year> 1992. </year>
Reference-contexts: There are still many research issues on knowledge discov ery in complex databases. The construction of effi-cient and effective generalization operators for complex structured or unstructured data, such as hypertext and multimedia data, the construction of a multi-resolution model for object-oriented and active databases <ref> [20] </ref> for browsing database contents and answer interesting queries at high concept levels are interesting topics for future research. Finally, software development and experimentation should be performed on the proposed mechanisms to verify and improve the proposed techniques and compare them with other related, promising proposals [11, 18, 13, 24].
Reference: [21] <author> A. Silberschatz, M. Stonebraker, and J. D. Ullman. </author> <title> Database systems: Achievements and opportunities. </title> <journal> Comm. ACM, </journal> <volume> 34 </volume> <pages> 94-109, </pages> <year> 1991. </year>
Reference-contexts: 1 Introduction With rapid growth in the amount of information stored in databases, the development of effective and efficient tools for knowledge discovery in databases (KDD, or data/knowledge mining) has become an increasingly important task in both database and machine learning researches <ref> [21, 7, 22] </ref>. In the past several years, fruitful research has been conducted on knowledge discovery in relational databases, with some experimental systems constructed and tested in large databases [7, 11, 19, 10]. <p> The discovery of clear and concise relationships or regularities among the collected data, can be handled by a knowledge discovery technique which performs efficient and effective data generalization to discover useful knowledge or regularity from the collected information <ref> [18, 21, 7] </ref>. 3. <p> The availability of generalization operators and knowledge discovery tools will substantially enhance the power and increase the flexibility of data and knowledge-base systems. As an emerging field, knowledge discovery in database has not only attracted wide attention in research communities <ref> [21, 7, 22] </ref> but also shown its high promise in industrial applications. A number of knowledge discovery systems/prototypes have been constructed and experimented on medium to large databases, such as DBLEARN [10], INLEN [11], KDW+ [19], EXPLORA [13], FortyNiner [24], Opportunity Explorer [1], Datalogic/R [25], Knowledge-Seeker [5], etc.
Reference: [22] <author> M. Stonebraker, R. Agrawal, U. Dayal, E. Neuhold, and A. Reuter. </author> <title> DBMS research at a crossroads: The vienna update. </title> <booktitle> In Proc. 19th Int. Conf. Very Large Data Bases, </booktitle> <pages> pages 688-692, </pages> <address> Dublin, Ireland, </address> <month> Aug. </month> <year> 1993. </year>
Reference-contexts: 1 Introduction With rapid growth in the amount of information stored in databases, the development of effective and efficient tools for knowledge discovery in databases (KDD, or data/knowledge mining) has become an increasingly important task in both database and machine learning researches <ref> [21, 7, 22] </ref>. In the past several years, fruitful research has been conducted on knowledge discovery in relational databases, with some experimental systems constructed and tested in large databases [7, 11, 19, 10]. <p> The availability of generalization operators and knowledge discovery tools will substantially enhance the power and increase the flexibility of data and knowledge-base systems. As an emerging field, knowledge discovery in database has not only attracted wide attention in research communities <ref> [21, 7, 22] </ref> but also shown its high promise in industrial applications. A number of knowledge discovery systems/prototypes have been constructed and experimented on medium to large databases, such as DBLEARN [10], INLEN [11], KDW+ [19], EXPLORA [13], FortyNiner [24], Opportunity Explorer [1], Datalogic/R [25], Knowledge-Seeker [5], etc.
Reference: [23] <author> S. B. Zdonik. </author> <title> Incremental database systems: Database from the ground up. </title> <booktitle> In Proc. 1993 ACM-SIGMOD Conf. Management of Data, </booktitle> <pages> pages 408-412, </pages> <address> Washing-ton, DC, </address> <month> May </month> <year> 1993. </year>
Reference-contexts: Furthermore, knowledge discovery will benefit generalization on complex data objects, schema formation and schema evolution in OODBs <ref> [23] </ref>, generalized triggering and step-by-step refined discovery in active databases, etc. the changing of an environment by incorporation of knowledge discovery and active database techniques: First, the status of an environment is collected into a database by a data sampling process. <p> Moreover, since object-oriented database consists of rich and complex structures, and such structures may evolve constantly in the life span of a database system, an important application of knowledge discovery in OODBs is at schema formation and schema evolution in object-oriented databases <ref> [23] </ref>. By knowledge discovery, a characteristic rule may partition a database into several different cases, and a discriminant rule may distinguish one class of data from others. This often forms a basis for partitioning data into different classes.
Reference: [24] <author> R. Zembowicz and J.M. _ Zytkow. </author> <title> Testing the existence of functional relationship in data. </title> <booktitle> In Proc. AAAI-93 Workshop on Knowledge Discovery in Databases, </booktitle> <pages> pages 102-111, </pages> <address> Washington DC, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: A number of knowledge discovery systems/prototypes have been constructed and experimented on medium to large databases, such as DBLEARN [10], INLEN [11], KDW+ [19], EXPLORA [13], FortyNiner <ref> [24] </ref>, Opportunity Explorer [1], Datalogic/R [25], Knowledge-Seeker [5], etc. With increasing R&D activities on KDD, many technically mature KDD systems will emerge in the near future. Most of the recent developments are focused on knowledge discovery in relational databases. <p> Finally, software development and experimentation should be performed on the proposed mechanisms to verify and improve the proposed techniques and compare them with other related, promising proposals <ref> [11, 18, 13, 24] </ref>.
Reference: [25] <author> W. Ziarko, R. Golan, and D. Edwards. </author> <title> An application of Datalogic/R knowledge discovery tool to identify strong predictive rules in stock market data. </title> <booktitle> In Proc. AAAI-93 Workshop on Knowledge Discovery in Databases, </booktitle> <pages> pages 93-101, </pages> <address> Washington DC, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: A number of knowledge discovery systems/prototypes have been constructed and experimented on medium to large databases, such as DBLEARN [10], INLEN [11], KDW+ [19], EXPLORA [13], FortyNiner [24], Opportunity Explorer [1], Datalogic/R <ref> [25] </ref>, Knowledge-Seeker [5], etc. With increasing R&D activities on KDD, many technically mature KDD systems will emerge in the near future. Most of the recent developments are focused on knowledge discovery in relational databases. There are still many research issues on knowledge discov ery in complex databases.
References-found: 25

