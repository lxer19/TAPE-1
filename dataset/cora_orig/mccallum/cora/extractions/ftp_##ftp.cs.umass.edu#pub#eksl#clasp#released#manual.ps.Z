URL: ftp://ftp.cs.umass.edu/pub/eksl/clasp/released/manual.ps.Z
Refering-URL: http://eksl-www.cs.umass.edu/research/clip-clasp-details.html
Root-URL: 
Title: Common Lisp Analytical Statistics Package: User Manual  with contributions by  
Author: Scott D. Anderson David L. Westbrook Matthew Schmill Adam Carlson David M. Hart Paul R. Cohen David A. Fisher 
Date: January 17, 1995  1994, 1990  
Note: Clasp Version 1.4.2 Clip Version 1.4  c  This work was supported by a University Research Initiative grant, ONR N00014-86-K-0764, and by ARPA/Rome Laboratory under contracts F30602-91-C-0076 and F30602-93-C-0100.  
Address: Box 34610 Amherst, Massachusetts 01003-4610  Amherst, Massachusetts.  
Affiliation: Experimental Knowledge Systems Laboratory Computer Science Department, LGRC University of Massachusetts  Department of Computer Science, University of Massachusetts,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> George W. Bohrnstedt and David Knoke. </author> <title> Statistics for Social Data Analysis. </title> <editor> F. E. </editor> <publisher> Peacock Publishers, </publisher> <address> Itasca, Illinois, </address> <note> second edition, </note> <year> 1988. </year>
Reference-contexts: The following options are recognized: 2.2. IMPLEMENTATION 7 :system-name string naming system [2] :system-version function or form which handles the arguments of the experiment and returns a string which denotes the version of the system a <ref> [1] </ref> :start-system function or form that handles the experiment variables and arguments of the experiment; this function is called during the experiment loop to begin execution of the system; when it returns the trial is considered to be completed [2] :reset-system same as :start-system; this function will be called during the <p> experiment variables and arguments of the experiment; this function is called during the experiment loop to begin execution of the system; when it returns the trial is considered to be completed [2] :reset-system same as :start-system; this function will be called during the experiment loop before the system is started; <ref> [1] </ref> :stop-system same arg handling as :start-system; this function can be used to execute code when a trial is shutdown; it is most useful when instrumenting multiprocessing systems where other processes need to be terminated [1] :schedule-function function or form that handles the lambda list (function time period name) and optionally <p> :start-system; this function will be called during the experiment loop before the system is started; <ref> [1] </ref> :stop-system same arg handling as :start-system; this function can be used to execute code when a trial is shutdown; it is most useful when instrumenting multiprocessing systems where other processes need to be terminated [1] :schedule-function function or form that handles the lambda list (function time period name) and optionally returns a data-structure which represents the event; used to provide access to the simula tor's event-scheduling mechanism [3] :deactivate-scheduled-function function or form that handles one arg, namely the data structure returned by the schedule-function function; <p> (function time period name) and optionally returns a data-structure which represents the event; used to provide access to the simula tor's event-scheduling mechanism [3] :deactivate-scheduled-function function or form that handles one arg, namely the data structure returned by the schedule-function function; used to provide access to the simulator's event-scheduling mechanism <ref> [1] </ref> :timestamp a function or a list of (&lt;function-name&gt; &lt;clip-name&gt;) where function should return the current time in units specified by :seconds-per-time-unit [3] :seconds-per-time-unit the number of seconds in 1 simulator time quantum (default is 1) [3] Keywords marked [1] are optional; Keywords marked [2] are required, and keywords marked [3] <p> schedule-function function; used to provide access to the simulator's event-scheduling mechanism <ref> [1] </ref> :timestamp a function or a list of (&lt;function-name&gt; &lt;clip-name&gt;) where function should return the current time in units specified by :seconds-per-time-unit [3] :seconds-per-time-unit the number of seconds in 1 simulator time quantum (default is 1) [3] Keywords marked [1] are optional; Keywords marked [2] are required, and keywords marked [3] are required when using time-series clips a Functions must accept the formal arguments specified in define-experiment and the actual arguments specified in a call to run-experiment. Forms can refer to the arguments lexically. <p> The graph at the left shows how q maps onto the data values, x i . In either case, the way to think about the quantile is as a function from the quantile q 2 <ref> [0; 1] </ref> to the indices of the data, i 2 [0; n 1], where n is the number of sample items. This makes sense because the actual data values have little influence on the quantile; their relative ranks matter more. <p> A.1.2 Cumulative The cumulative distribution function (CDF) of a random variable X is defined as F (x) = Pr (X x). As such, the CDF maps from the domain of the random variable to the interval <ref> [0; 1] </ref>. The quantile function is simply the inverse of the CDF! For example, we know that if X has a standard normal distribution, Pr (X&lt; 1:96) = 0:025, so 1:96 is the q = 0:025 quantile of the standard normal. <p> Thus, we only have two variables, x and y. We will give the computational formulas we implemented. The main references we used are Devore [4], Freund [5], and Bohrnstedt and Knoke <ref> [1] </ref>. The linear regression statistics can be calculated from just six summary statistics of the original data. Since authors use different notation for the regression statistics and the summary statistics, we have also decided to invent our own notation.
Reference: [2] <author> James V. Bradley. </author> <title> Distribution-Free Statistical Tests. </title> <publisher> Prentice-Hall, Inc., </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1968. </year>
Reference-contexts: The following options are recognized: 2.2. IMPLEMENTATION 7 :system-name string naming system <ref> [2] </ref> :system-version function or form which handles the arguments of the experiment and returns a string which denotes the version of the system a [1] :start-system function or form that handles the experiment variables and arguments of the experiment; this function is called during the experiment loop to begin execution of <p> returns a string which denotes the version of the system a [1] :start-system function or form that handles the experiment variables and arguments of the experiment; this function is called during the experiment loop to begin execution of the system; when it returns the trial is considered to be completed <ref> [2] </ref> :reset-system same as :start-system; this function will be called during the experiment loop before the system is started; [1] :stop-system same arg handling as :start-system; this function can be used to execute code when a trial is shutdown; it is most useful when instrumenting multiprocessing systems where other processes need <p> access to the simulator's event-scheduling mechanism [1] :timestamp a function or a list of (&lt;function-name&gt; &lt;clip-name&gt;) where function should return the current time in units specified by :seconds-per-time-unit [3] :seconds-per-time-unit the number of seconds in 1 simulator time quantum (default is 1) [3] Keywords marked [1] are optional; Keywords marked <ref> [2] </ref> are required, and keywords marked [3] are required when using time-series clips a Functions must accept the formal arguments specified in define-experiment and the actual arguments specified in a call to run-experiment. Forms can refer to the arguments lexically. <p> James Bradley has an excellent book on non-parametric statistics <ref> [2] </ref>. Bootstrap statistics also avoid making distributional assumptions, but they retain the absolute magnitudes of the data. They substitute computation for analysis and tables, essentially by computing tables as necessary. Bootstrap statistics are even more widely applicable than non-parametric statistics because there is no reliance on precomputed tables.
Reference: [3] <author> Paul R. Cohen. </author> <booktitle> Empirical Methods in Artificial Intelligence. </booktitle> <publisher> MIT Press, forthcoming. </publisher>
Reference-contexts: is shutdown; it is most useful when instrumenting multiprocessing systems where other processes need to be terminated [1] :schedule-function function or form that handles the lambda list (function time period name) and optionally returns a data-structure which represents the event; used to provide access to the simula tor's event-scheduling mechanism <ref> [3] </ref> :deactivate-scheduled-function function or form that handles one arg, namely the data structure returned by the schedule-function function; used to provide access to the simulator's event-scheduling mechanism [1] :timestamp a function or a list of (&lt;function-name&gt; &lt;clip-name&gt;) where function should return the current time in units specified by :seconds-per-time-unit [3] :seconds-per-time-unit <p> mechanism <ref> [3] </ref> :deactivate-scheduled-function function or form that handles one arg, namely the data structure returned by the schedule-function function; used to provide access to the simulator's event-scheduling mechanism [1] :timestamp a function or a list of (&lt;function-name&gt; &lt;clip-name&gt;) where function should return the current time in units specified by :seconds-per-time-unit [3] :seconds-per-time-unit the number of seconds in 1 simulator time quantum (default is 1) [3] Keywords marked [1] are optional; Keywords marked [2] are required, and keywords marked [3] are required when using time-series clips a Functions must accept the formal arguments specified in define-experiment and the actual arguments specified in <p> returned by the schedule-function function; used to provide access to the simulator's event-scheduling mechanism [1] :timestamp a function or a list of (&lt;function-name&gt; &lt;clip-name&gt;) where function should return the current time in units specified by :seconds-per-time-unit <ref> [3] </ref> :seconds-per-time-unit the number of seconds in 1 simulator time quantum (default is 1) [3] Keywords marked [1] are optional; Keywords marked [2] are required, and keywords marked [3] are required when using time-series clips a Functions must accept the formal arguments specified in define-experiment and the actual arguments specified in a call to run-experiment. Forms can refer to the arguments lexically. <p> [1] :timestamp a function or a list of (&lt;function-name&gt; &lt;clip-name&gt;) where function should return the current time in units specified by :seconds-per-time-unit <ref> [3] </ref> :seconds-per-time-unit the number of seconds in 1 simulator time quantum (default is 1) [3] Keywords marked [1] are optional; Keywords marked [2] are required, and keywords marked [3] are required when using time-series clips a Functions must accept the formal arguments specified in define-experiment and the actual arguments specified in a call to run-experiment. Forms can refer to the arguments lexically. <p> They substitute computation for analysis and tables, essentially by computing tables as necessary. Bootstrap statistics are even more widely applicable than non-parametric statistics because there is no reliance on precomputed tables. They are, however, very computation-intensive. A much more detailed discussion may be found in Cohen's primer <ref> [3] </ref>. This section will briefly review the test statistics that are implemented in Clasp and their uses. 5.2.1 Confidence Intervals Descriptive statistics of the sample are often used to estimate the equivalent statistic on the population.
Reference: [4] <author> Jay L. Devore. </author> <title> Probability and Statistics for Engineering and the Sciences. </title> <publisher> Brooks/Cole Publishing Company, </publisher> <address> Monterey, California, first edition, </address> <year> 1982. </year>
Reference-contexts: Two good general texts are Statistical Reasoning 58 CHAPTER 5. STATISTICS in Psychology and Education by Edward W. Minium [9] and Probability and Statistics for Engineering and the Sciences, by Jay L. Devore <ref> [4] </ref>. Test statistics fall into several categories: parametric, non-parametric, and bootstrap, each of which is most applicable for certain specific types of problems. <p> This section is devoted to the special case of linear regression in which we fit a line to bivariate data. Thus, we only have two variables, x and y. We will give the computational formulas we implemented. The main references we used are Devore <ref> [4] </ref>, Freund [5], and Bohrnstedt and Knoke [1]. The linear regression statistics can be calculated from just six summary statistics of the original data. Since authors use different notation for the regression statistics and the summary statistics, we have also decided to invent our own notation.
Reference: [5] <author> John E. Freund. </author> <title> Modern Elementary Statistics. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, seventh edition, </address> <year> 1988. </year>
Reference-contexts: All we need to do is split the data into q and 1q. But there are other valid ways of viewing the quantile, which lead to other ways of dividing the data. As Freund says in his discussion of quartiles, "there is ample room for arbitrariness" <ref> [5, p. 52] </ref>. x 0 x 1 x 2 x 3 x 4 Consider the preceding five-element sample, which we will use throughout our discussion of quantiles. Clearly, x 2 is the median. <p> This section is devoted to the special case of linear regression in which we fit a line to bivariate data. Thus, we only have two variables, x and y. We will give the computational formulas we implemented. The main references we used are Devore [4], Freund <ref> [5] </ref>, and Bohrnstedt and Knoke [1]. The linear regression statistics can be calculated from just six summary statistics of the original data. Since authors use different notation for the regression statistics and the summary statistics, we have also decided to invent our own notation.
Reference: [6] <author> David M. Hart and Paul R. Cohen. </author> <title> Predicting and explaining success and task duration in the phoenix planner. </title> <booktitle> In Proceedings of the First International Conference on AI Planning Systems, </booktitle> <pages> pages 106-115. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year>
Reference-contexts: We give some background on the Phoenix system and on the experiment design to help the reader better interpret the experiment definition that follows. For more detail on the experiment and its results see Hart & Cohen, 1992 <ref> [6] </ref>. The Phoenix System Phoenix is a multi-agent planning system that fights simulated forest-fires. The simulation uses terrain, elevation, and feature data from Yellowstone National Park and a model of fire spread from the National Wildlife Coordinating Group Fireline Handbook (National Wildlife Coordinating Group 1985).
Reference: [7] <author> Adele E. Howe and Paul R. Cohen. </author> <title> Responding to environmental change. In DARPA Workshop on Innovative Approaches to Planning, </title> <journal> Scheduling and Control, </journal> <pages> pages 85-92. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1990. </year>
Reference-contexts: Once a plan is set into motion, any number of problems might arise that require the Fireboss's intervention. The types of problems and mechanisms for handling them are described in Howe & Cohen, 1990 <ref> [7] </ref>, but one is of particular interest here: As bulldozers build fireline, the Fireboss compares their progress to expected progress. If their actual progress falls too far below expectations, a plan failure occurs, and (under the experiment scenario described here) a new plan is generated.
Reference: [8] <author> Geoffrey Keppel. </author> <title> Design and Analysis: A Researchers Handbook. </title> <publisher> Prentice-Hall, </publisher> <address> En-glewood Cliffs, NJ, seventh edition, </address> <year> 1973. </year>
Reference-contexts: The reference used is <ref> [8] </ref>. A.4 Linear Regression Linear regression fits a linear model to the data using a least squares fit. If the linear model has more than one independent (x) variable, we will call it multiple linear regression.
Reference: [9] <author> Edward W. Minium. </author> <title> Statistical Reasoning in Psychology and Education. </title> <publisher> John Wiley and Sons, </publisher> <year> 1978. </year>
Reference-contexts: This chapter cannot explain all of these statistical tests in detail, but there are many excellent statistics texts available. Two good general texts are Statistical Reasoning 58 CHAPTER 5. STATISTICS in Psychology and Education by Edward W. Minium <ref> [9] </ref> and Probability and Statistics for Engineering and the Sciences, by Jay L. Devore [4]. Test statistics fall into several categories: parametric, non-parametric, and bootstrap, each of which is most applicable for certain specific types of problems.
Reference: [10] <author> Elazar J. Pedhazur. </author> <title> Multiple Regression in Behavioral Research. </title> <publisher> Holt, Rinehart and Winston, </publisher> <year> 1973. </year>
Reference-contexts: the result of this multiplication contains the summed squares of the individual variables along the diagonal, with P 0 = X 0 , and the cross products along the off diagonals. y This discussion is a condensation of chapters 2 and 3 from Pedhazur's book, Multiple Regression in Behavioral Research <ref> [10] </ref>. z Although we still provide this method, it is obsolete, the primary method for computing Multiple Regression can be found in Section A.5.2. A.6.
Reference: [11] <author> William H. Press, Brian P. Flannery, Saul A. Teukolsky, and William T. Vetterling. </author> <title> Numerical Recipes in C: </title> <booktitle> The Art of Scientific Computing. </booktitle> <publisher> Cambridge University Press, </publisher> <year> 1988. </year>
Reference-contexts: Finally, there are some functions that calculate combinatorial probabilities, such as the binomial. Most of the following functions are implemented from Numerical Recipes in C <ref> [11] </ref>.

References-found: 11

