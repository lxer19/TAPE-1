URL: http://www.cs.jhu.edu/labs/cgc/workshop/S200.ps
Refering-URL: http://www.cs.jhu.edu/labs/cgc/cgc_conf.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: fdyhsu, latombe, rajeevg@cs.stanford.edu  
Title: Path Planning and Expansive Configuration Spaces  
Author: David Hsu Jean-Claude Latombe Rajeev Motwani 
Address: Stanford, CA 94305  
Affiliation: Department of Computer Science Stanford University  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> J. Barraquand and J.-C. Latombe. </author> <title> Robot motion planning: A distributed representation approach. </title> <journal> The Int. J. of Robotics Research, </journal> <volume> 10(6) </volume> <pages> 628-649, </pages> <year> 1991. </year>
Reference-contexts: Recently, randomization has been successfully applied to devise efficient planners. One planner <ref> [1] </ref> searches for a path by following the negated gradient of an artificial potential field constructed over the configuration space. It uses random walks to escape local minima of the potential function.
Reference: [2] <author> L. Kavraki and J.-C. Latombe. </author> <title> Randomized preprocessing of cofigurations space for fast path planning. </title> <booktitle> In Proc. IEEE Int. Conf. on Robotics and Automation, </booktitle> <pages> pages 2138-2139, </pages> <year> 1994. </year>
Reference-contexts: Recently, randomization has been successfully applied to devise efficient planners. One planner [1] searches for a path by following the negated gradient of an artificial potential field constructed over the configuration space. It uses random walks to escape local minima of the potential function. Another planner <ref> [2] </ref> builds a roadmap of the configuration space via random sampling and tries to construct a path between any two input configurations by connecting them to the roadmap. This planner is particularly suitable for problems where multiple path-planning queries have to be answered in the same environment.
Reference: [3] <author> L. Kavraki, J.-C. Latombe, R. Motwani, and P. Raghavan. </author> <title> Randomized query processing in robot path planning. </title> <booktitle> In ACM Symposium on Theory of Computing, </booktitle> <pages> pages 353-362, </pages> <year> 1995. </year>
Reference-contexts: Attempts have been made to provide theoretical justification for the observed success of these planners. In [4], potential field planners are analyzed based on the study of Markov chains and diffusion processes. In <ref> [3] </ref>, the probabilistic convergence rate of a variant of the roadmap planner is estimated under an assumption called *-goodness of the configuration space. Unfortunately this variant assumes that a complete planner is available to be invoked to improve the connectivity of the roadmap. This assumption is clearly not realistic.
Reference: [4] <author> F. Lamiroux and J. P. Laumond. </author> <title> On the expected complexity of random path planning. </title> <booktitle> In Proc. IEEE Int. Conf. on Robotics and Automation, </booktitle> <year> 1996. </year>
Reference-contexts: These planners have demonstrated good performance empirically, but are usually not complete. They only achieve probabilistic completeness, i.e., that they find a path with high probability whenever one exists. Attempts have been made to provide theoretical justification for the observed success of these planners. In <ref> [4] </ref>, potential field planners are analyzed based on the study of Markov chains and diffusion processes. In [3], the probabilistic convergence rate of a variant of the roadmap planner is estimated under an assumption called *-goodness of the configuration space.
Reference: [5] <author> J.-C. Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1991. </year> <month> 2 </month>
Reference-contexts: 1 Introduction Path planning is an important problem in robotics <ref> [5] </ref>. Given the geometry of a robot and obstacles, the planner is required to generate a collision-free path between an initial and a goal configuration.
References-found: 5

