URL: http://bugle.cs.uiuc.edu/Papers/WWW.ps.Z
Refering-URL: http://bugle.cs.uiuc.edu/Pablo.html
Root-URL: http://www.cs.uiuc.edu
Title: User Access Patterns to NCSA's World Wide Web Server  
Author: Thomas T. Kwan Robert E. McGrath Daniel A. Reed 
Address: Urbana, Illinois 61801  
Affiliation: National Center for Supercomputing Applications Department of Computer Science University of Illinois  
Abstract: The World Wide Web (WWW) server at the National Center for Supercomputing Applications (NCSA) is one of the most heavily accessed WWW servers in the world. To increase our understanding of how users access this server and to provide a basis for assessing server and system software optimizations, we analyzed NCSA's server logs for multiple weeks that span across a five month period. This paper presents the results of that analysis and discusses the implications for server design and extensibility. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Albitz, P., and Liu, C. </author> <title> DNS and BIND in a Nutshell. </title> <publisher> O'Reilly and Associates, </publisher> <year> 1992. </year>
Reference-contexts: Data-type specific caching algorithms are one potential solution. 2.4 Round-Robin Domain Name System The third and final component of the NCSA scalable WWW server is a modified network name resolver based on the Berkeley Internet Name Domain 3 (BIND) code <ref> [1] </ref>. The existing BIND 4.9.2 code has a "round-robin" option that can associate a single domain name with several IP addresses. In response to requests, these addresses are distributed using a simple rotation algorithm. Unfortunately, this rotation conflicted with extant software at NCSA.
Reference: [2] <author> Berners-Lee, T., Cailliau, R., Groff, J., and Pollermann, B. </author> <title> World-Wide Web: The Information Universe. </title> <journal> Electronic Networking: Research, Applications, and Policy 1, </journal> <volume> 2 (1992), </volume> <pages> 52-58. </pages>
Reference-contexts: 1 Introduction The recent explosion of interest in the World Wide Web (WWW) <ref> [3, 2] </ref> can be traced to the distribution of the CERN (European Laboratory for Particle Physics in Geneva, Switzerland) and NCSA (National Center for Supercomputing Applications) servers and WWW client browsers.
Reference: [3] <author> Berners-Lee, T., Cailliau, R., Luotonen, A., Nielsen, H., and Secret, A. </author> <title> The WorldWide Web. </title> <journal> Communications of the ACM 37, </journal> <month> 8 (Aug. </month> <year> 1994), </year> <pages> 76-82. </pages>
Reference-contexts: 1 Introduction The recent explosion of interest in the World Wide Web (WWW) <ref> [3, 2] </ref> can be traced to the distribution of the CERN (European Laboratory for Particle Physics in Geneva, Switzerland) and NCSA (National Center for Supercomputing Applications) servers and WWW client browsers.
Reference: [4] <author> Braun, H.-W., and Claffy, K. </author> <title> Web Traffic Characterization: an Assessment of the Impact of Caching Documents from NCSA's Web Server. </title> <booktitle> In Proceedings of Second International WWW Conference (October 1994), </booktitle> <pages> pp. 1007-1027. </pages>
Reference-contexts: Simple put, WWW servers must become more adaptive and intelligent. The first step on this path is understanding extant access patterns and responses. Based on this understanding, one can then develop more efficient and intelligent server and system file caching and prefetching strategies. Recently, Braun and Claffy <ref> [4] </ref> analyzed the requests from two days of NCSA server logs and investigated the efficacy of remotely caching NCSA documents. In this paper, we augment their work with a more comprehensive view of NCSA's WWW service by analyzing five months of server logs from 1994.
Reference: [5] <author> File, J. </author> <title> Web Server Activity: Total Connections, </title> <note> 1994. http://www.ncsa.uiuc.edu/SDG/Presentations/ Stats/WebServer.html. </note>
Reference-contexts: At the same time, the WWW servers at NCSA have experienced explosive growth in traffic, from one million requests per week in February 1994, to two million per week in June 1994, three million per week in September 1994, and approaching four million per week in December 1994 <ref> [5] </ref>. To support continued growth, WWW servers must manage a potentially multi-gigabyte data base of multimedia information, while concurrently serving multiple request streams. This places demands on the servers' underlying operating system and file system that lie far outside today's normal operating regime. <p> At NCSA, the traffic has grown from one million requests per week in February 1994 to nearly four million per week in December 1994 <ref> [5] </ref>, with little prospect of a decline in the grow rate. Shortly after NCSA's WWW server was established, it became clear that the volume of WWW traffic would stress operating systems and network implementations in ways not originally envisioned by their designers.
Reference: [6] <author> Katz, E. D., Butler, M., and McGrath, </author> <note> R. </note>
Reference-contexts: To meet increasing demand, NCSA will continue to add servers as needed. Below, we briefly describe each of the three server components. For additional details on the server architecture, see Katz et al <ref> [6] </ref>. 2.2 The Servers and the Network The NCSA WWW server architecture is flexible enough to accommodate most Unix systems as component servers. The only requirements are that the system function as an Andrew File System (AFS) client and support TCP/IP. <p> In response to requests, these addresses are distributed using a simple rotation algorithm. Unfortunately, this rotation conflicted with extant software at NCSA. For this reason, NCSA modified BIND to only rotate specific addresses, namely those of the WWW servers; see <ref> [6] </ref> for details. 2 The modified domain name system (DNS) allows a domain name with more than one associated IP address to be specified as "round-robin." Each incoming request for the address of a round-robin domain name is satisfied with the next IP address on the list in a simple rotation.
References-found: 6

