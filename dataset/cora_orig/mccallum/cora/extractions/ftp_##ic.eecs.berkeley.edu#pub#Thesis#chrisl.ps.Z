URL: ftp://ic.eecs.berkeley.edu/pub/Thesis/chrisl.ps.Z
Refering-URL: http://www-cad.eecs.berkeley.edu/Respep/Research/Thesis/thesis.html
Root-URL: http://www.cs.berkeley.edu
Title: Estimation Techniques to Guide Low-Power Resynthesis Algorithms for Combinational Random CMOS Logic  
Author: by Christopher Kevin Lennard 
Degree: M.S. (University of California, Berkeley) 1992 A dissertation submitted in partial satisfaction of the requirements for the degree of Doctor of Philosophy in Engineering-Electrical Engineering and Computer Sciences in the GRADUATE DIVISION of the UNIVERSITY of CALIFORNIA at BERKELEY Committee in charge: Professor A. Richard Newton, Chair Professor Jan Rabaey Professor Henry Helson  
Date: 1989  1995  
Address: Melbourne)  
Affiliation: B.E.E. (University of  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> S. B. Akers. </author> <title> Binary Decision Diagrams. </title> <journal> In IEEE Transactions on Computers, </journal> <volume> Vol. C-27, </volume> <pages> pages 509-516, </pages> <month> June </month> <year> 1978. </year>
Reference-contexts: From the construction of output functions for this network, the transition probabilities are computed. This analysis uses ordered Binary Decision Diagrams (BDDs) to represent the functionality. The BDD is an implicit graph-based functional representation <ref> [1] </ref> which is provably canonical when an ordering is applied to the variables [4]. This representation has been found empirically to be efficient for network synthesis. However, the complexity of full symbolic analysis for power estimation is still too high for use on large industrial networks.
Reference: [2] <author> R. I. Bahar, G. D. Hactel, E. Macii, F. Somenzi. </author> <title> A Symbolic Method to Reduce Power Consumption of Circuits Containing False Paths. </title> <booktitle> In Proceedings of the Int'l Conference on Computer-Aided Design, </booktitle> <pages> pages 368-371, </pages> <month> November </month> <year> 1994. </year>
Reference-contexts: That is, nodes for which the functionality alone is not sufficient to filter out spurious dynamic activity. This is useful information to guide synthesis tools and most synthesis routines are tested using simulators based upon this simple timing model (e.g. [20], [10], <ref> [2] </ref>, [22], [24]). This timing model for gate behavior is used throughout this dissertation. <p> No work specifically accounts for the influence synthesis techniques have upon spurious dynamic activity, as addressed in this dissertation. The most straight forward approach to the reduction of power are those which do not perform functional manipulation. These include the technology mapping (e.g. [22], [24], [14]) and gate resizing <ref> [2] </ref> techniques. All of the technology mapping routines are dynamic programming optimization strategies for tree networks. At each branch in the tree, the optimal solution can be found using the optimal solutions for the leaves. <p> Similar to the mapping techniques, however, proposed gate resizing algorithms have not 16 taken into account the effect that a change in path delays can have upon transition activity throughout the network. In private communication with Iris Bahar, author of <ref> [2] </ref>, this effect was claimed to account for several network optimizations which were less fruitful than expected. There have been several attempts at logic restructuring for low-power. <p> The data on this graph is generated from a series of statistical tests for input probabilities p 2 f0:1; 0:2; 0:3; 0:4g with jI p j chosen randomly from <ref> [2; 10] </ref> and j' I p j from [0; jI p j]. The bounding technique is clearly sufficiently accurate for use when the total error is small. <p> In Case (iii) (Case (iv)) there is a change in state from 1 ! 0 (0 ! 1). The change in state may be assumed to occur before or after the activity interval, so during the activity interval t 2 <ref> [0; 2] </ref> the 107 function is approximated by considering both the previous and next state. That is, the signal is assumed equally likely to be a logic 1 or logic 0 during the activity interval.
Reference: [3] <author> R. K. Brayton, R. Rudell, A. Sangiovanni-Vincentelli, A. R. Wang. </author> <title> MIS: A Multiple-Level Optimization System. </title> <journal> In IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems, </journal> <volume> Vol. CAD-6, No. 6, </volume> <pages> pages 1062-1081, </pages> <month> November </month> <year> 1987. </year>
Reference-contexts: The first step in the procedure is the extraction of a set of common subexpressions which minimizes a specific cost function. For example, the optimization for area attempts to minimize the literal count by maximizing logic sharing <ref> [3] </ref>, the optimization for speed attempts to reduce logic depth and gate loading on the longest paths [21]. This step is followed by mapping onto the specific gate library.
Reference: [4] <author> R. E. Bryant. </author> <title> Graph-Based Algorithms for Boolean Function Manipulation. </title> <journal> In IEEE Transactions on Computers, </journal> <volume> Vol. C-35, No. 8, </volume> <pages> pages 677-691, </pages> <month> August </month> <year> 1986. </year>
Reference-contexts: From the construction of output functions for this network, the transition probabilities are computed. This analysis uses ordered Binary Decision Diagrams (BDDs) to represent the functionality. The BDD is an implicit graph-based functional representation [1] which is provably canonical when an ordering is applied to the variables <ref> [4] </ref>. This representation has been found empirically to be efficient for network synthesis. However, the complexity of full symbolic analysis for power estimation is still too high for use on large industrial networks.
Reference: [5] <author> R. Burch, F. Najm, P. Yang, and T. </author> <title> Trick. McPOWER: A Monte Carlo Approach to Power Estimation. </title> <booktitle> In Proceedings of the Int'l Conference on Computer-Aided Design, </booktitle> <pages> pages 90-97, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: Consequently, information concerning only the half-way crossing can be used to estimate timing quite well. This timing model is used in a large number of power estimators, the simulators described in <ref> [5] </ref> [7] [15] [23] being four highly regarded examples. <p> They can essentially be divided into three categories: * Symbolic Analysis. [7] * Probabilistic Analysis. [15] [23] * Statistical Analysis. <ref> [5] </ref> [11] Symbolic analysis is a technique which obtains an exact result for transition activity given the simple timing model for gate behavior. All gates have a delay which is an element of the rationals, so there exists a non-zero largest common divisor, d GCD , for these delays. <p> Random input vectors are selected and applied to the input of the network. The power computed in the simulation is then added to that of previous tests and averaged. The routine stops when the average network power converges to within a certain variance. The Monte-Carlo simulation method of <ref> [5] </ref> has demonstrated quite rapid empirical convergence properties. The advantage of these techniques is their simplicity and their ability to easily be modified to handle more complex gate models. However, the average network power is the sum of the averages for every node in the network. <p> The complexity of the estimation increases with the accuracy of this information. There have been many techniques developed to explore this tradeoff including exact symbolic simulation [7], probability approximation heuristics ([15], [23]) and statistical Monte Carlo approaches <ref> [5] </ref>. Comparison of the accuracy/complexity of the methods suggests that significant reduction in error can be achieved over simplistic methods (such as assuming fully independent transition activity) with a small increase in complexity, but absolute accuracy comes at a high price as illustrated conceptually in Fig. 2.1.
Reference: [6] <author> A. P. Chandrakasan, M. Potkonjak, R. Mehra, J. Rabaey, R. W. Broderson. </author> <title> Optimizing Power Using Transformations. </title> <journal> In IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems, </journal> <volume> Vol. 14, No. 1, </volume> <pages> pages 1-20, </pages> <month> January </month> <year> 1995. </year>
Reference-contexts: These functions vary significantly between applications. There is a large body of work completed in the area of optimization of structured logic for reduced power consumption. These techniques reduce the number of power-hungry operations by optimizing the representation of arithmetic expressions. This is summarized extensively in <ref> [6] </ref>. The optimization of synchronous random logic has two major phases: state encoding and implementation of the combinational logic block.
Reference: [7] <author> A. Ghosh, S. Devadas, K. Keutzer, and J. White. </author> <title> Estimation of Average Switching Activity in Combinational and Sequential Circuits. </title> <booktitle> In Proceedings of the 29 th Design Automation Conference, </booktitle> <pages> pages 253-259, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: Consequently, information concerning only the half-way crossing can be used to estimate timing quite well. This timing model is used in a large number of power estimators, the simulators described in [5] <ref> [7] </ref> [15] [23] being four highly regarded examples. The limited behavioral information contained in a timing model of a gate can result in an error in predicting the total transition count and transition timing at a node in a network when input transition arrival times are similar but not simultaneous. <p> They can essentially be divided into three categories: * Symbolic Analysis. <ref> [7] </ref> * Probabilistic Analysis. [15] [23] * Statistical Analysis. [5] [11] Symbolic analysis is a technique which obtains an exact result for transition activity given the simple timing model for gate behavior. <p> For example, with a gate of delay d, if no input transition occurs at time t then there can be no output transition at time (t + d). This estimation strategy was 11 first proposed in <ref> [7] </ref>. The timed functionality is obtained by constructing a network with an output representing the functionality each node for every timing interval. The outputs representing adjacent time intervals for the same node are then XOR'ed together. <p> From the results in this paper 12 it is claimed that an error of less than 4% in the estimation of average network power and speedup of about a factor of 10 can be obtained relative to the exact symbolic simulation tool of <ref> [7] </ref>. There are no computationally inexpensive probabilistic analysis techniques which can account for input correlation exactly. Exact correlation requires accurate information regarding network functionality over all time. If such data were available, then this technique would be comparable to symbolic analysis in its complexity. <p> The complexity of the estimation increases with the accuracy of this information. There have been many techniques developed to explore this tradeoff including exact symbolic simulation <ref> [7] </ref>, probability approximation heuristics ([15], [23]) and statistical Monte Carlo approaches [5]. <p> Estimation schemes which associate time and functionality at every time point for any input vector are at level A 1 ; t 1 A (e.g. <ref> [7] </ref>). Notice that there are four shaded regions in Fig. 2.4. These regions dictate what are viable combinations of activity and timing abstractions. Any timing abstraction can be combined with an activity abstraction from the same region or below (lower abstraction). <p> A change in functionality using random selections of BDD cubes mimics the form of functional change likely in resynthesis in so far as eliminating functional changes which require major network reconfiguration. Full symbolic simulation of the circuit using a technique based on the principles outlined in <ref> [7] </ref> is performed before and after each modification. This allows a direct comparison between actual change in power and that which the estimator predicts. <p> In both cases, the theory presented is generalized to multiple input gates using a pairwise correlation assumption. It is shown that the concept of transmission and generation is only useful under the conditions where time is very coarsely discretized. When time is discretized as recommended in <ref> [7] </ref> for sufficient accuracy of power estimation, the transmission/generation estimation technique is unable to detect optimality. This implies that delay bounds are insufficient measures for computing delay sensitivity.
Reference: [8] <author> L. Glasser and D. Dobberpuhl. </author> <title> The Design and Analysis of VLSI Circuits. </title> <publisher> Addison-Wesley, </publisher> <year> 1985. </year> <month> 132 </month>
Reference-contexts: The energy consumption of a CMOS circuit is directly related to the switching activity when this simplified model of energy consumption is used. For a well-designed gate, the above assumptions are reasonable <ref> [8] </ref>.
Reference: [9] <author> D. Hodges and H. G. Jackson. </author> <title> Analysis and Design of Digital Integrated Circuits. </title> <publisher> McGraw Hill, </publisher> <year> 1988. </year>
Reference-contexts: This implies that, to first order, the dynamic behavior of a CMOS gate can be described by a lumped capacitance model <ref> [9] </ref>. The transitors in a CMOS gate are then modeled as ideal voltage controlled current sources driven by a capacitively loaded input signals. Even for this simpler model, the complexity of computing the average power consumption is extremely high.
Reference: [10] <author> S. Iman, M. Pedram. </author> <title> Multi-Level Network Optimization for Low Power. </title> <booktitle> In Proceedings of the Int'l Conference on Computer-Aided Design, </booktitle> <pages> pages 372-377, </pages> <month> November </month> <year> 1994. </year>
Reference-contexts: That is, nodes for which the functionality alone is not sufficient to filter out spurious dynamic activity. This is useful information to guide synthesis tools and most synthesis routines are tested using simulators based upon this simple timing model (e.g. [20], <ref> [10] </ref>, [2], [22], [24]). This timing model for gate behavior is used throughout this dissertation. <p> There is also a heuristic for the minimization of spurious dynamic activity based on collapsing sections of the network with short paths. These two-level functions when technology-mapped generally evaluate slower than multi-level representations. This tends to balance paths throughout the network. A recent publication <ref> [10] </ref> extracts subexpressions according to output activity of a subexpression but also according to the primary input variable support required to implement the function. The Don't Care set is used to find a support which has minimal switching activity. <p> It is possible to restrict the construction of the ODC in such a way as to guarantee that a local resynthesis step does not detrimentally influence the TFO <ref> [10] </ref>. However, this may not not desirable. For example, consider the situation depicted in Fig. 3.2. The node m has been selected for resynthesis. This node is the input to nodes p and q within a network. <p> More generally, it may be stated that the problem with a functional restriction technique such as that of Iman et. al. <ref> [10] </ref> is that it does not take into account the relative changes in power throughout the TFO, so cannot predict the likelihood that a local change in functionality is globally beneficial, even if that change does not influence all TFO nodes in a beneficial way. <p> The data on this graph is generated from a series of statistical tests for input probabilities p 2 f0:1; 0:2; 0:3; 0:4g with jI p j chosen randomly from <ref> [2; 10] </ref> and j' I p j from [0; jI p j]. The bounding technique is clearly sufficiently accurate for use when the total error is small.
Reference: [11] <author> M. W. Kallu. ENPOWER: </author> <title> A Vector-Driven Power Estimating Tool for CMOS Logic Circuits. </title> <type> Masters Thesis, </type> <institution> U.C. Berkeley, </institution> <month> December </month> <year> 1993. </year>
Reference-contexts: The empirical evidence presented in <ref> [11] </ref> supports this observation. This motivates the necessity to develop an understanding of considerations important to optimization of the combinational logic block of a sequential network. <p> However, as shown in Fig. 1.5, the best this technique can do is bound the possible signal delay. Either the earlier or later two output transitions of the NAND gate could be assumed non-plausible and so be filtered out. An empirical study performed in <ref> [11] </ref> for a vector-driven power simulator shows that varying the filtering approach in this way can alter the power estimate by up to 10%. In general, estimation of average power using the timing model described previously does not perform inertial delay filtering. <p> They can essentially be divided into three categories: * Symbolic Analysis. [7] * Probabilistic Analysis. [15] [23] * Statistical Analysis. [5] <ref> [11] </ref> Symbolic analysis is a technique which obtains an exact result for transition activity given the simple timing model for gate behavior. All gates have a delay which is an element of the rationals, so there exists a non-zero largest common divisor, d GCD , for these delays.
Reference: [12] <author> P. Landman. </author> <title> Low-Power Architectural Design Methodologies. </title> <type> Ph.D. Dissertation, </type> <note> ERL Memo. No. </note> <institution> M94/62, U.C. Berkeley, </institution> <month> August </month> <year> 1994. </year>
Reference-contexts: For the work presented in this dissertation, it is assumed that the architecture (for example, parallel or 3 serial processing, degree of data path pipelining, etc.), technology and power supply have been chosen (e.g. <ref> [12] </ref>). In particular, fully-static Complementary MOS (CMOS) logic is the technology assumed. This logic is the most common technology used in micro-processor and prototype ASIC designs. The properties which make this logic so prevalent are its high immunity to noise, robustness and ease of design and small dc power consumption.
Reference: [13] <author> C. K. Lennard, A. R. </author> <title> Newton. An Estimation Technique to Guide Low Power Resynthesis Algorithms. </title> <booktitle> In Proceedings of the Int'l Symposium on Low Power Design, </booktitle> <pages> pages 227-232, </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: In the latter part of this chapter, Sec. 3.5 and Sec. 3.6, the two simplifying approximations are removed from the theory and a tradeoff between method accuracy and complexity presented. This extends the work first presented by this author in <ref> [13] </ref>.
Reference: [14] <author> B. Lin and H. De Man. </author> <title> Low-Power Driven Technology Mapping under Timing Constraints. </title> <booktitle> In Proceedings of the Int'l Workshop on Logic Synthesis (IWLS-93), </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: No work specifically accounts for the influence synthesis techniques have upon spurious dynamic activity, as addressed in this dissertation. The most straight forward approach to the reduction of power are those which do not perform functional manipulation. These include the technology mapping (e.g. [22], [24], <ref> [14] </ref>) and gate resizing [2] techniques. All of the technology mapping routines are dynamic programming optimization strategies for tree networks. At each branch in the tree, the optimal solution can be found using the optimal solutions for the leaves.
Reference: [15] <author> F. Najm. </author> <title> Transition Density, A Stochastic Measure of Activity in Digital Circuits. </title> <booktitle> In Proceedings of the 28 th Design Automation Conference, </booktitle> <pages> pages 644-649, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: Consequently, information concerning only the half-way crossing can be used to estimate timing quite well. This timing model is used in a large number of power estimators, the simulators described in [5] [7] <ref> [15] </ref> [23] being four highly regarded examples. The limited behavioral information contained in a timing model of a gate can result in an error in predicting the total transition count and transition timing at a node in a network when input transition arrival times are similar but not simultaneous. <p> They can essentially be divided into three categories: * Symbolic Analysis. [7] * Probabilistic Analysis. <ref> [15] </ref> [23] * Statistical Analysis. [5] [11] Symbolic analysis is a technique which obtains an exact result for transition activity given the simple timing model for gate behavior. <p> There have been several estimation techniques proposed which account for input correlation with varying degrees of accuracy. The work of <ref> [15] </ref> models waveforms as independent strict sense stationary ergodic processes. They suggest a partitioning of a network into tightly interconnected modules. Inside these modules, their waveform model is invalid so more complex estimation strategies must be used. <p> For example, an estimation scheme based purely upon the amount of activity at the inputs to a node (therefore neglecting correlation) and an approximation of all transition times is at activity abstraction level A 3 , timing abstraction level t 3 (e.g. <ref> [15] </ref>). Estimation schemes which associate time and functionality at every time point for any input vector are at level A 1 ; t 1 A (e.g. [7]). Notice that there are four shaded regions in Fig. 2.4. These regions dictate what are viable combinations of activity and timing abstractions. <p> The estimation strategy outlined in Chap. 3 is able to predict the expected change in functional power to a very high degree of accuracy, even in a circuit with arbitrary node input correlations. The work of <ref> [15] </ref> and [23] has demonstrated the need for estimation to consider such correlations so it is desirable to have a strategy for estimating changes in the amount of spurious activity alone. This result can then be concatenated with the functional activity estimator.
Reference: [16] <author> K. Roy, S. C. Prasad. </author> <title> Circuit Activity Based Logic Synthesis for Low-Power Reliable Operations. </title> <journal> In IEEE Transactions on VLSI Systems, </journal> <volume> Vol. 1, No. 4, </volume> <pages> pages 503-513, </pages> <month> December </month> <year> 1993. </year>
Reference-contexts: In general these algorithms are based upon very simple heuristics for estimating the power consumption within a logic block before that block is technology mapped. The reported reduction in power has been small in all cases, around 10 to 20%. In the work reported in <ref> [16] </ref>, sub-expression extraction is performed using the simple heuristic of maximizing logic sharing while minimizing the input loading for inputs with high switching activity. In [20], subex-pressions are extracted according to their probability of evaluating high.
Reference: [17] <author> H. Savoj. </author> <title> Don't Cares in Multi-Level Network Optimization. </title> <type> Ph.D. Dissertation, </type> <note> ERL Memo. No. </note> <institution> M92/122, U.C. Berkeley, </institution> <month> October </month> <year> 1992. </year>
Reference-contexts: However, the ODC sets in most networks are typically very large and have been shown to provide significant synthesis freedom for improved optimality during synthesis for area <ref> [17] </ref> and speed [21]. It is therefore desirable to be able to make use of this in synthesis 15 for low-power. The research results presented in this dissertation relate to the prediction of when a locally optimum decision translates to a globally optimum solution in synthesis for low-power.
Reference: [18] <author> H. Savoj, R. K. Brayton. </author> <title> The Use of Observability and External Don't Cares for the Simplification of Multi-Level Networks. </title> <booktitle> In Proceedings of the 28 th Design Automation Conference, </booktitle> <pages> pages 297-301, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: how the levels of abstraction are related to the prediction of the global effects of resynthesis on power dissipation, and how the testing was made complete for the work in this dissertation. 24 2.2 Resynthesis for Low-Power Resynthesis procedures generally use compatible subsets of the Observability Don't Care (ODC) set <ref> [18] </ref> during global optimization. The ODC allows the function of a node to be altered without the change being observable at the output, while the compatibility permits synthesis of separate sections of the network without one modification affecting another. <p> In general, the technique outlined can be applied within the subset of the Boolean space described by each class. This generalization is presented at the end of this section. The construction of a compatible set of ODC subsets requires that a node input ordering be established <ref> [18] </ref>. A node input ordering which maximizes the ODC subsets for the most highly non-optimal nodes maximizes resynthesis flexibility. However, the non-optimality of a network region is a combination of both the resynthesis flexibility, and the expected gain obtained if that region of the network is resynthesized. <p> The iterations would continue until no further improvement occurs. 61 3.6.2 Ordering the Compatible DC Set Construction Subsets of the ODC subsets used to resynthesize the nodes identified as nonoptimal need to be maximized and compatible. This implies an ODC construction similar to Savoj et al. <ref> [18] </ref>. The input ordering presented in that work is a partial order implied by parsing the network structure in reverse topological order. This ensures that the ODC is calculated at a node only after the ODC has been computed at all its TFO nodes, thereby ensuring a maximal construction. <p> Consider the example of Fig. 3.18. The nodes are labeled in reverse topological order of the ODC construction, the edges numbered with respect to the input ordering applied to each node. In the left-hand figure, the node processing order is used to determine the input ordering as proposed in <ref> [18] </ref>. When the ODC is computed at a node, it `calls' the construction of the ODC contribution from each output then takes the logical product of these functions. In this example, node 6 has been identified as being the most highly 62 non-optimal, therefore most desirable for resynthesis. <p> The ODC at this node is then the logical product of all these functions. The ODC contributions from each fanin will then be maximal in the same way as defined in <ref> [18] </ref>. To optimize the resynthesis flexibility the node input ordering needs to be based upon: * Non-Optimality. The greater the expected gain for resynthesizing a node, the higher priority it should be assigned in the node input ordering. * Proximity.
Reference: [19] <author> E. M. Sentovich, K. J. Singh, L. Lavagno, C. Moon, R. Murgai, A. Saldanha, H. Savoj, P. R. Stephan, R. K. Brayton, A. Sangiovanni-Vincentelli. </author> <title> SIS: A System for Sequential Circuit Synthesis. </title> <note> ERL Memo. No. </note> <institution> M92/41, U.C. Berkeley, </institution> <month> May </month> <year> 1992. </year> <month> 133 </month>
Reference-contexts: These intermediate nodes are chosen by iteratively stepping back in levels from the test node until the onset/offset BDD representations explicitly contain 10 or more cubes. These BDD's are fairly small and are optimally ordered for compactness using the standard BDD variable ordering techniques offered in SIS <ref> [19] </ref>. A change in functionality using random selections of BDD cubes mimics the form of functional change likely in resynthesis in so far as eliminating functional changes which require major network reconfiguration. <p> Fifteen circuits from the ISCAS '89 [25] benchmark set were examined in this experiment. They varied in size from 187 to 1005 literals. The circuits were initially mapped into the msu gate library and optimized using script.rugged <ref> [19] </ref> within SIS. In Tab. 3.1 the results for functional activity change estimation are presented. The first two columns are the form of the statistic. The first column indicates whether the change in power local to the resynthesized node was decreased or increased. <p> After balancing, the network is simulated again and the total change in power is compared to that estimated by the FCDS method. Both tests were performed on networks from the ISCAS '89 benchmark set, first optimized with script.rugged <ref> [19] </ref> and mapped to the msu.genlib gate library. The arbitrary gate delay model is used for the power simulation. The absolute accuracy of the FCDS model is presented in Fig. 4.10.
Reference: [20] <author> A. Shen, S. Devadas, A. Ghosh, and K. Keutzer. </author> <title> On Average Power Dissipation and Random Pattern Testability of Combinational Logic Circuits. </title> <booktitle> In Proceedings of the Int'l Conference on Computer-Aided Design, </booktitle> <pages> pages 402-407, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: Study of combinational random logic synthesis for low-power is a relatively recent pursuit (the earliest papers addressing the problem were published in 1992, such as <ref> [20] </ref>). Any decision which is made to improve optimality depends upon accurate estimation of the influence of a synthesis decision upon network power. <p> That is, nodes for which the functionality alone is not sufficient to filter out spurious dynamic activity. This is useful information to guide synthesis tools and most synthesis routines are tested using simulators based upon this simple timing model (e.g. <ref> [20] </ref>, [10], [2], [22], [24]). This timing model for gate behavior is used throughout this dissertation. <p> The reported reduction in power has been small in all cases, around 10 to 20%. In the work reported in [16], sub-expression extraction is performed using the simple heuristic of maximizing logic sharing while minimizing the input loading for inputs with high switching activity. In <ref> [20] </ref>, subex-pressions are extracted according to their probability of evaluating high. The functional transition activity is given by: 2 (1 p)p for a signal with probability p of evaluating high, so better candidate subexpressions have p far from 0.5. <p> The program based upon this algorithm was run on several networks from the ISCAS '89 benchmark set [25]. The networks were first synthesized for low-power using a technique similar to that presented by A. Shen et al. <ref> [20] </ref>. The buffer insertion experiment was then run on these low-power synthesized circuits, and these results are presented in Tab. 4.1.
Reference: [21] <author> K. J. Singh, A. Wang, R. K. Brayton, A. Sangiovanni-Vincentelli. </author> <title> Timing Optimization of Combinational Circuits. </title> <booktitle> In Proceedings of the Int'l Conference on Computer-Aided Design, </booktitle> <pages> pages 282-285, </pages> <month> November </month> <year> 1988. </year>
Reference-contexts: The behavior description for these three simple models relative to an inverter is illustrated in Fig. 1.4. The timing model is simple, but has also demonstrated itself to be sufficiently accurate for synthesis which optimizes network speed <ref> [21] </ref>. The accuracy is a property of the fact that a gate can be viewed as an open-loop amplifier with extremely high gain. When an input transition passes the input sensitivity point, the gate quickly limits to maximum current drive which will charge or discharge the output capacitance. <p> For example, the optimization for area attempts to minimize the literal count by maximizing logic sharing [3], the optimization for speed attempts to reduce logic depth and gate loading on the longest paths <ref> [21] </ref>. This step is followed by mapping onto the specific gate library. An example of this procedure for area optimization of a simple function mapped to a library of two-input gates is also presented in Fig. 1.6. <p> However, the ODC sets in most networks are typically very large and have been shown to provide significant synthesis freedom for improved optimality during synthesis for area [17] and speed <ref> [21] </ref>. It is therefore desirable to be able to make use of this in synthesis 15 for low-power. The research results presented in this dissertation relate to the prediction of when a locally optimum decision translates to a globally optimum solution in synthesis for low-power.
Reference: [22] <author> V. Tiwari, P. Ashar, and S. Malik. </author> <title> Technology Mapping for Low Power. </title> <booktitle> In Proceedings of the 30 th Design Automation Conference, </booktitle> <pages> pages 74-79, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: That is, nodes for which the functionality alone is not sufficient to filter out spurious dynamic activity. This is useful information to guide synthesis tools and most synthesis routines are tested using simulators based upon this simple timing model (e.g. [20], [10], [2], <ref> [22] </ref>, [24]). This timing model for gate behavior is used throughout this dissertation. <p> No work specifically accounts for the influence synthesis techniques have upon spurious dynamic activity, as addressed in this dissertation. The most straight forward approach to the reduction of power are those which do not perform functional manipulation. These include the technology mapping (e.g. <ref> [22] </ref>, [24], [14]) and gate resizing [2] techniques. All of the technology mapping routines are dynamic programming optimization strategies for tree networks. At each branch in the tree, the optimal solution can be found using the optimal solutions for the leaves.
Reference: [23] <author> C-Y. Tsui, M. Pedram, A. M. Despain. </author> <title> Efficient Estimation of Dynamic Power Consumption under a Real Delay Model. </title> <booktitle> In Proceedings of the Int'l Conference on Computer-Aided Design, </booktitle> <pages> pages 224-228, </pages> <month> November </month> <year> 1993. </year>
Reference-contexts: Consequently, information concerning only the half-way crossing can be used to estimate timing quite well. This timing model is used in a large number of power estimators, the simulators described in [5] [7] [15] <ref> [23] </ref> being four highly regarded examples. The limited behavioral information contained in a timing model of a gate can result in an error in predicting the total transition count and transition timing at a node in a network when input transition arrival times are similar but not simultaneous. <p> They can essentially be divided into three categories: * Symbolic Analysis. [7] * Probabilistic Analysis. [15] <ref> [23] </ref> * Statistical Analysis. [5] [11] Symbolic analysis is a technique which obtains an exact result for transition activity given the simple timing model for gate behavior. <p> Inside these modules, their waveform model is invalid so more complex estimation strategies must be used. They found that most networks easily partition into small modules which are very well suited to the independence assumption. The estimation strategy proposed in <ref> [23] </ref> can be applied within networks with high correlation between internal nodes. In this case, the steady-state functional correlation between nodes in the network is computed. This correlation is assumed over all time during dynamic transition activity. <p> The complexity of the estimation increases with the accuracy of this information. There have been many techniques developed to explore this tradeoff including exact symbolic simulation [7], probability approximation heuristics ([15], <ref> [23] </ref>) and statistical Monte Carlo approaches [5]. <p> The estimation strategy outlined in Chap. 3 is able to predict the expected change in functional power to a very high degree of accuracy, even in a circuit with arbitrary node input correlations. The work of [15] and <ref> [23] </ref> has demonstrated the need for estimation to consider such correlations so it is desirable to have a strategy for estimating changes in the amount of spurious activity alone. This result can then be concatenated with the functional activity estimator.
Reference: [24] <author> C-Y. Tsui, M. Pedram, and A. M. Despain. </author> <title> Technology Decomposition and Mapping Targeting Low Power Dissipation. </title> <booktitle> In Proceedings of the 30 th Design Automation Conference, </booktitle> <pages> pages 68-73, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: That is, nodes for which the functionality alone is not sufficient to filter out spurious dynamic activity. This is useful information to guide synthesis tools and most synthesis routines are tested using simulators based upon this simple timing model (e.g. [20], [10], [2], [22], <ref> [24] </ref>). This timing model for gate behavior is used throughout this dissertation. <p> No work specifically accounts for the influence synthesis techniques have upon spurious dynamic activity, as addressed in this dissertation. The most straight forward approach to the reduction of power are those which do not perform functional manipulation. These include the technology mapping (e.g. [22], <ref> [24] </ref>, [14]) and gate resizing [2] techniques. All of the technology mapping routines are dynamic programming optimization strategies for tree networks. At each branch in the tree, the optimal solution can be found using the optimal solutions for the leaves.
Reference: [25] <author> S. Yang. </author> <title> Logic Synthesis and Optimization Benchmarks User Guide Version 3.0. </title> <type> MCNC Technical Report, </type> <institution> Research Triangle Park, NC, </institution> <month> January </month> <year> 1991. </year>
Reference-contexts: Accuracy of the estimator relative to the actual change in power demonstrates the suitability of the theory for use in computing sensitivity of the TFO to node activity changes. Fifteen circuits from the ISCAS '89 <ref> [25] </ref> benchmark set were examined in this experiment. They varied in size from 187 to 1005 literals. The circuits were initially mapped into the msu gate library and optimized using script.rugged [19] within SIS. In Tab. 3.1 the results for functional activity change estimation are presented. <p> Their cost is therefore accounted for at their time of 77 insertion and this does not influence the accuracy of earlier decisions. The program based upon this algorithm was run on several networks from the ISCAS '89 benchmark set <ref> [25] </ref>. The networks were first synthesized for low-power using a technique similar to that presented by A. Shen et al. [20]. The buffer insertion experiment was then run on these low-power synthesized circuits, and these results are presented in Tab. 4.1.
References-found: 25

