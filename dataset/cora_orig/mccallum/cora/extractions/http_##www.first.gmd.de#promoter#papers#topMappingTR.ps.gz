URL: http://www.first.gmd.de/promoter/papers/topMappingTR.ps.gz
Refering-URL: http://www.first.gmd.de/promoter/papers/index.html
Root-URL: 
Title: Irregular Data Structures  
Author: Matthias Besch Hans Werner Pohl 
Address: Berlin, Germany  
Affiliation: RWCP Massively Parallel Systems GMD Laboratory  
Abstract: Most present mapping algorithms dealing with irregular data structures perform general graph partitioning heuristics. Most often, the performance is not sufficient for large-scale scientific applications. Especially where adaptive refinement algorithms are involved, mapping and remapping has to be done very efficiently. We present a new, fast mapping heuristic (balanced hypersphere tessellation) which is basically a generalization of vector quantization and is applicable to multipartitioning arbitrarily high-dimensional and irregular domains. Its efficiency derives mainly from the exploitation of topographic properties of the problem domain. We compare the quality and performance of our approach with the classical Kerninghan&Lin heuristic and spectral bisection based on the Lanczos algorithm. This report is an extended version of a paper being accepted at the EuroPar96 conference in Lyon, France, August 1996 with the title: Topographic Data Mapping by Balanced Hypersphere Tessellation Topographic Data Mapping of * This work is supported by the Real World Computing Partnership, Japan Technical Report May 1996 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. J. Berger, S. H. Bokhari: </author> <title> A Partitioning Strategy for Nonuniform Problems on Multiprocessors, </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. C-36, no. 5, 1997 401 8261239 16842125 2594 2994 3420 3843 4278 4745 8 b time N P N P time 2 1 </volume>
Reference: [2] <author> M. Besch, H. W. Pohl: </author> <title> Flexible Data Parallel Training of Neural Networks Using MIMD-Computers, </title> <booktitle> Proc. of the Euromicro Workshop on Parallel and Distributed Processing, </booktitle> <address> San Remo, Italy, </address> <month> Jan. </month> <pages> 25-27, </pages> <year> 1995 </year>
Reference-contexts: In PROMOTER, we avoid this expensive transformation process. 2 The geometrical information is explicitly given by means of user-defined and problem-adequate embeddings in d-dimensional index spaces. 3 1. For an explicit application of logarithmic trees on communication algorithms see e.g. <ref> [2] </ref>. <p> Moreover, because of its learning algorithm in batch mode, BHT is an excellent candidate for parallel execution on distributed-memory computers, as demonstrated in <ref> [2] </ref> for the more general case of neural-network simulation. Unlike the approach presented in [7], where load balancing and the Kohonen learning algorithm are separate processes, in BHT load balancing is an integral component of vector quantization.
Reference: [3] <author> N. Chrisochoides, C. E. Houstis, S. K. Kortesis, E. N. Houstis, J. R. Rice: </author> <title> Automatic load balanced partitioning strategies for PDE computations, </title> <booktitle> Proc. of the Int. Conf. on Supercomputing, </booktitle> <publisher> ACM Press, </publisher> <address> New Yorck, </address> <pages> pp. 99-107, </pages> <year> 1989 </year>
Reference: [4] <author> N. P. Chrisochoides, C. E. Houstis, E. N. Houstis: </author> <title> Geometry Based Mapping Strategies of PDE Computations, </title> <booktitle> Proc. of the 5th Int. Conf. on Supercomputing, </booktitle> <pages> pp. 115-127, </pages> <address> Cologne, Germany, </address> <publisher> ACM publications, </publisher> <year> 1991 </year>
Reference: [5] <author> N. Chrisochoides, E. Houstis, J. Rice: </author> <title> Mapping Algorithms and Software Environment for Data Parallel PDE Iterative Solvers, </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> no. 21, </volume> <pages> pp. 75-95, </pages> <year> 1994 </year>
Reference: [6] <author> R. Van Driessche, D. Roose: </author> <title> An improved spectral bisection algorithm and its application to dynamic load balancing, </title> <journal> Parallel Computing, </journal> <volume> no. 21, </volume> <pages> pp. 29-48, </pages> <year> 1995 </year>
Reference: [7] <author> M. Dormanns, H.-U. Heiss: </author> <title> Partitioning and Mapping of Large FEM-Graphs by Self-Organization, </title> <booktitle> Proc. of the Euromicro Workshop on Parallel and Distributed Processing, </booktitle> <address> San Remo, Italy, </address> <month> Jan. </month> <pages> 25-27, </pages> <year> 1995 </year>
Reference-contexts: A more general method, based on a Kohonen neural network algorithm overlaid with an additional load-balancing process, is described in <ref> [7] </ref>. Hybrid approaches supplement the objective function of a general graph-based algorithm with some geometric metric, as for example in [3][5]. Since we want to support irregular data structures and communication patterns which may be embedded in high-dimensional index spaces, simple block-decomposition techniques with rectangular subdomains are not sufficient. <p> Moreover, because of its learning algorithm in batch mode, BHT is an excellent candidate for parallel execution on distributed-memory computers, as demonstrated in [2] for the more general case of neural-network simulation. Unlike the approach presented in <ref> [7] </ref>, where load balancing and the Kohonen learning algorithm are separate processes, in BHT load balancing is an integral component of vector quantization. Since BHT does not rely on recursive bipartition, an arbitrary number of partitions is supported.
Reference: [8] <author> G. C. Fox: </author> <title> A graphical approach to load balancing and sparse matrix vector multiplication on the hypercube, Numerical Algorithms for Modern Parallel Computers, </title> <editor> M. Schultz (Ed.), </editor> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1988 </year>
Reference: [9] <author> K. Fukunaga, S. Yamada, H. S. Stone, T. Kasai: </author> <title> A Representation of Hypergraphs in the Euclidean Space, </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. C-33, no. 4, </volume> <year> 1984 </year>
Reference: [10] <author> M. Garey, D. Johnson, L. Stockmeyer, </author> <title> Some simplified NP-complete graph problems, </title> <journal> Theoretical Computer Science, </journal> <volume> no. 1, </volume> <pages> pp. 237-267, </pages> <year> 1976 </year>
Reference-contexts: The aim of (data) mapping is thus twofold: the partitioning of spatial data structures and the placement of the partitions data points on processors (assignment). Finding an optimal solution for the mapping problem is a complex optimization problem which is known to be NP-complete <ref> [10] </ref>. Yet in practice heuristics providing good suboptimal solutions are generally sufficient for efficient processing of parallel computation. A well-known drawback of distributed-memory computers is their complexity and the difficulty of programming them.
Reference: [11] <author> J. Gerlach, G. Heber, A. Schramm: </author> <title> Programming Parallel Finite Element Methods in PROMOTER, submitted for publication, </title> <booktitle> International EUROSIM Conference, </booktitle> <address> Delft, The Netherlands, </address> <year> 1996 </year>
Reference-contexts: By way of an example, let us have a look at an irregularly decomposed triangle of a 2d-finite-element mesh which is embedded in a three-dimensional index space as depicted in Z Z 3 triangles <ref> [11] </ref>. In order to describe the data dependencies between the triangles (or the corner points of the triangles, respectively), i.e. to define logical communication operators, an index space of , i.e. six-dimensional, is required. <p> Thus we need an algorithm for partitioning arbitrarily high-dimensional and arbitrarily shaped, irregular domains. The second feature we address is applicability to dynamic mapping and load-balancing strategies to support adaptive refinement algorithms as presented in <ref> [11] </ref>, for example. We will take a brief look at this in Section 4.4. The common idea behind all five algorithms is the division into an initial cut by a regular hypersurface, and a second refinement phase optimizing this cut w.r.t. communication costs between these partitions if necessary.
Reference: [12] <author> W. K. Giloi, U. Brning, W. Schrder-Preikschat:MANNA: </author> <title> Prototype of a Distributed Memory Architecture With Maximized Sustained Performance, </title> <booktitle> Proc. Euromicro PDP96 Workshop 1996, </booktitle> <publisher> IEEE-CS Press </publisher>
Reference-contexts: By way of an example, a commonly used measure is the processor distance measured in hops. In hierarchical multistage communication networks based on the crossbar technology, as used in the Manna <ref> [12] </ref> or the IBM SP2, has a constant value for each pair of nodes within a cluster.
Reference: [13] <author> W. K. Giloi, A. Schramm: </author> <title> PROMOTER An Application-oriented Programming Model for Massive Parallelism, </title> <editor> W. K. Giloi, S. Jhnichen, B. Shriver (eds.), </editor> <booktitle> Massively Parallel Programming Models, Proc. Internat. MPPM Conference, </booktitle> <address> Berlin, Sept. 1993, </address> <publisher> IEEE-CS Press, </publisher> <year> 1993 </year>
Reference: [14] <author> W. K. Giloi, M. Kessler, A. Schramm: </author> <title> PROMOTER : A High Level, </title> <booktitle> Object-Parallel Programming Language, Proc. Internat. Conf. on High Performance Computing, </booktitle> <address> New Delhi, India, </address> <month> Dec. </month> <year> 1995 </year>
Reference: [15] <author> J. Hertz, A. Krogh, R. Palmer: </author> <title> Introduction to the theory of neural computation, </title> <publisher> Addison Wesley, </publisher> <year> 1991 </year>
Reference-contexts: In the PROMOTER terminology the concept of topologies is used for defining both distributed types and communication operators. A topology is a subset of an due to some user-defined constraints. 1. For the sake of clarity, however, we do not discuss this in the present context. See <ref> [15] </ref> and [18] for a depiction of topology -preserving feature mapping. Z L C y ( ) k 7 embedding the quotient graph in the processor graph and can be resolved by one of the general graph-based mapping algorithms explicitly using . <p> A cluster is the set of data points that are closer to than to any other , where is called the representative or prototype of the cluster : We perform the clustering with the help of vector quantization using a simple winner-takes-all competitive learning procedure <ref> [15] </ref>.
Reference: [16] <author> B. W. Kerninghan, S. Lin: </author> <title> An efficient heuristic procedure for partitioning graphs, </title> <journal> The Bell System Technical Journal, </journal> <pages> pp. 291-307, </pages> <month> Feb. </month> <year> 1970 </year>
Reference-contexts: The BHT approach along with four closely related methods is presented in Section 4. Finally, in Section 5 we provide some performance results and compare the Z Z l (2 0 0), , l l : refinement level 4 quality and efficiency of BHT with the classical Kerninghan&Lin heuristic <ref> [16] </ref> and spectral bisection based on the Lanczos algorithm [22]. 2 Data Mapping In this section, we define the data-mapping problem and give a mathematical formulation of the objective functions. <p> Figures 1, 6, 9, and 10 give some small examples. Table 1 compares the quality of balanced hypersphere tessellation with the classical Kerninghan&Lin <ref> [16] </ref> heuristic and spectral bisection based on the Lanczos algorithm using the cut weight, i.e. the number of partition cuts, as a measure of quality. As a stop criterion for BHT we used a maximal load imbalance ratio of .
Reference: [17] <author> N. Mansour, G. Fox: </author> <title> Allocating data to multicomputer nodes by physical optimization algorithms for loosely synchronous computations, </title> <journal> Concurrency: Practice and Experience, </journal> <volume> vol. 4, no. 7, </volume> <pages> pp. 557-574, </pages> <month> Oct. </month> <year> 1992 </year> <month> 2 2 </month>
Reference: [18] <author> T. Martinez, K. Schulten: </author> <title> Competitive Hebbian Rule Forms Delaunay Triangulations, Perfect Topology Preserving Maps, and Discrete Models of Manifolds, Theoretical Biophysics, </title> <type> Technical Report UIUC-BI-TB-93-04, </type> <institution> The Beckman Institute, University of Illinois, </institution> <year> 1993 </year>
Reference-contexts: In the PROMOTER terminology the concept of topologies is used for defining both distributed types and communication operators. A topology is a subset of an due to some user-defined constraints. 1. For the sake of clarity, however, we do not discuss this in the present context. See [15] and <ref> [18] </ref> for a depiction of topology -preserving feature mapping. Z L C y ( ) k 7 embedding the quotient graph in the processor graph and can be resolved by one of the general graph-based mapping algorithms explicitly using . <p> Both forms are not very interesting for the mapping problem on their own, it is their correlation that is decisive. Our definition of neighbourhood is boroughed from the notion of Voronoi tessellation and its twin, the Delaunay triangulation. In e.g. <ref> [18] </ref>, a Voronoi tessellation is used as a clustering technique in which the centre of each polyhedron is the representative of its corresponding cluster. Here, we proceed the other way round. <p> These algorithms, and the order in which they are presented in the following subsections, largely reect how we arrived at the solution described in Section 4.4. 1. We took the term second-order Voronoi polyhedron from <ref> [18] </ref> which can also be referred to for some related proves.
Reference: [19] <author> A. Pothen, H. D. Simon, K.-P. Liou: </author> <title> Partitioning sparse matrices with eigenvectors of graphs, </title> <journal> SIAM J. Matrix Anal., </journal> <volume> no. 11, </volume> <pages> pp. 430-452, </pages> <year> 1990 </year>
Reference: [20] <author> P. Sadayappan, F. Ercal: </author> <title> Nearest-Neighbour Mapping of Finite Element Graphs onto Processor Meshes, </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. C-36, no. 12, </volume> <year> 1987 </year>
Reference: [21] <author> A. Schramm: </author> <title> Irregular Applications in PROMOTER, </title> <editor> W. K. Giloi, S. Jhnichen, B. Shriver (eds.), </editor> <booktitle> Massively Parallel Programming Models, Proc. Internat. MPPM Conference, </booktitle> <address> Berlin, Oct. 1995, </address> <publisher> IEEE-CS Press, </publisher> <year> 1995 </year>
Reference-contexts: A communication operator between distributed operands of irregular domains is simply regarded as a generalization of a vector-matrix product to arbitrary dimensions <ref> [21] </ref>. By way of an example, let us have a look at an irregularly decomposed triangle of a 2d-finite-element mesh which is embedded in a three-dimensional index space as depicted in Z Z 3 triangles [11].
Reference: [22] <author> H. D. Simon: </author> <title> Partitioning of unstructured problems for parallel processing, </title> <booktitle> Proc. Conference on Parallel Methods on Large Scale Structural Analysis and Physics Applications, </booktitle> <publisher> Pergammon Press, </publisher> <year> 1991 </year>
Reference-contexts: Finally, in Section 5 we provide some performance results and compare the Z Z l (2 0 0), , l l : refinement level 4 quality and efficiency of BHT with the classical Kerninghan&Lin heuristic [16] and spectral bisection based on the Lanczos algorithm <ref> [22] </ref>. 2 Data Mapping In this section, we define the data-mapping problem and give a mathematical formulation of the objective functions.
Reference: [23] <author> G. P. Trabado, E.L. Zapata: </author> <title> Exploiting Locality on parallel Irregular Problem Computations, </title> <booktitle> Proc. of the Euromicro Workshop on Parallel and Distributed Processing, </booktitle> <address> San Remo, Italy, </address> <month> Jan. </month> <pages> 25-27, </pages> <year> 1995 </year>
Reference: [24] <author> C. Walshaw, M. Cross, M. G. Everett: </author> <title> A Parallelisable Algorithm for Optimizing Unstructured Mesh Partitions, </title> <institution> Mathematics Research Report, University of Greenwich, </institution> <address> London, </address> <year> 1995 </year>
Reference: [25] <author> R. D. Williams: </author> <title> Performance of dynamic load balancing algorithms for unstructured mesh calculations, </title> <journal> Concurrency: Practice and Experience, </journal> <volume> vol. 3, no. 5, </volume> <pages> pp. 457-481, </pages> <month> Oct. </month> <year> 1991 </year>
References-found: 25

