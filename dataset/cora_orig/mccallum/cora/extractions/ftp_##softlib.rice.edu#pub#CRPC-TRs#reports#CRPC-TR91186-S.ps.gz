URL: ftp://softlib.rice.edu/pub/CRPC-TRs/reports/CRPC-TR91186-S.ps.gz
Refering-URL: http://www.crpc.rice.edu/CRPC/softlib/TRs_online.html
Root-URL: 
Title: Hierarchical Tree-Structures as Adaptive Meshes  
Author: David J. Edelsohn 
Note: From International Journal of Modern Physics C  
Date: November 1991  
Address: P.O. Box 1892 Houston, TX 77251-1892  
Affiliation: Center for Research on Parallel Computation Rice University  
Pubnum: CRPC-TR91186  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> A. Almgren. </author> <title> A fast adaptive vortex method using local correction. </title> <type> Technical Report 527, </type> <institution> Center for Pure and Applied Mathematics, U.C. Berkeley, </institution> <month> June </month> <year> 1991. </year> <type> Ph.D. Thesis. </type>
Reference-contexts: Berger, Colella, and Oliger have pioneered application of this method to hyperbolic partial differential equations [5, 6]. Almgren recently has extended AMR for multigrid to an MLC implementation <ref> [1] </ref>. Adaptive mesh refinement traditionally has been limited to rectangular regions. Mc-Cormick and Quinlan have extended their very robust, inherently conservative adaptive mesh multilevel algorithm called Asynchronous Fast Adaptive Composite (AFAC) [14] to relax non-rectangular sub-regions directly between two grid levels. <p> In the Poisson case, the locality stems from the regularity of harmonic functions which allow accurate approximation of parent-child relationships. the smooth, far-field solution by low-order representations <ref> [1] </ref>. Barnes-Hut requires the locality of the tree not just as a framework for the algorithm but to provide the ability to selectively descend into sub-cubes as needed during the computation allowing Salmon to create "locally essential" datasets per processor [15].
Reference: [2] <author> C.R. Anderson. </author> <title> An implementation of the fast multipole method without mul-tipoles. </title> <journal> SIAM J. Sci. Stat. Comput., </journal> <volume> 13, </volume> <year> 1992. </year>
Reference-contexts: Anderson utilizes the multigrid framework as a basis for communication in his FMM implementation which substitutes Poisson integrals for spherical harmonic multipole expansions <ref> [2] </ref>. 3 Tree as Grid We propose that the exact same hierarchical structure used by particle-based methods now may be effectively utilized in adaptive mesh refinement implementation. <p> Locality is common to and useful for many loosely synchronous parallel algorithms [9]. This union of hierarchies provides opportunities beyond similar programming structure <ref> [2, 13] </ref>: it allows easier synthesis of combined particle and mesh algorithms and allows hierarchy-building developments to benefit both simulation methods.
Reference: [3] <author> A. Appel. </author> <title> An efficient program for many-body simulation. </title> <journal> SIAM J. Sci. Stat. Comput., </journal> <volume> 6, </volume> <year> 1985. </year>
Reference-contexts: Binary trees which subdivide the volume with planes chosen to evenly divide the number of particles instead of the space also have been used <ref> [3] </ref>; a single bifurcation separates two particles spaced arbitrarily close together while the oct-tree would require arbitrarily many sub-cubes refining one particular region.
Reference: [4] <author> J. Barnes and P. Hut. </author> <title> A hierarchical O(N log N) force-calculation algorithm. </title> <journal> Nature, </journal> <volume> 324, </volume> <year> 1986. </year>
Reference-contexts: AFAC provides special benefits for parallel implementations because the various levels in a single multigrid cycle may be scheduled in any convenient order and combined at the end of the cycle instead of the traditional, sequentially-ordered V-cycle. In the particle-based solver regime, the Barnes-Hut <ref> [4] </ref> method utilizes an adaptive tree to store information about one particle or the collective information about particles in the sub-cubes.
Reference: [5] <author> M.J. Berger and P. Colella. </author> <title> Local adaptive mesh refinement for shock hydrodynamics. </title> <journal> Journal of Computational Physics, </journal> <volume> 82, </volume> <year> 1989. </year>
Reference-contexts: Unlike finite-element and finite-volume algorithms which deform a single grid by shifting or adding vertices, adaptive mesh refinement (AMR) algorithms simply overlay regions of interest with increasingly fine rectangular meshes. Berger, Colella, and Oliger have pioneered application of this method to hyperbolic partial differential equations <ref> [5, 6] </ref>. Almgren recently has extended AMR for multigrid to an MLC implementation [1]. Adaptive mesh refinement traditionally has been limited to rectangular regions.
Reference: [6] <author> M.J. Berger and J. Oliger. </author> <title> Adaptive mesh refinement for hyperbolic partial differential equations. </title> <journal> Journal of Computational Physics, </journal> <volume> 54, </volume> <year> 1984. </year>
Reference-contexts: Unlike finite-element and finite-volume algorithms which deform a single grid by shifting or adding vertices, adaptive mesh refinement (AMR) algorithms simply overlay regions of interest with increasingly fine rectangular meshes. Berger, Colella, and Oliger have pioneered application of this method to hyperbolic partial differential equations <ref> [5, 6] </ref>. Almgren recently has extended AMR for multigrid to an MLC implementation [1]. Adaptive mesh refinement traditionally has been limited to rectangular regions.
Reference: [7] <author> A. Brandt. </author> <title> Multi-level adaptive solutions to boundary value problems. </title> <journal> Mathematics of Computation, </journal> <volume> 31, </volume> <year> 1977. </year>
Reference-contexts: All of these algorithms are discussed extensively by Hockney and Eastwood [12]. A newer type of grid-based solver for dis-cretized equations classified as a multilevel or multigrid method has been in development for over a decade <ref> [7, 8] </ref>. Frequently the algorithm utilizes a hierarchy of rectangular meshes on which a traditional relaxation scheme may be applied, but multiscale methods have expanded beyond any particular type of solver or even grids, per se.
Reference: [8] <author> W. Briggs. </author> <title> A Multigrid Tutorial. </title> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1987. </year>
Reference-contexts: All of these algorithms are discussed extensively by Hockney and Eastwood [12]. A newer type of grid-based solver for dis-cretized equations classified as a multilevel or multigrid method has been in development for over a decade <ref> [7, 8] </ref>. Frequently the algorithm utilizes a hierarchy of rectangular meshes on which a traditional relaxation scheme may be applied, but multiscale methods have expanded beyond any particular type of solver or even grids, per se.
Reference: [9] <editor> G.C. Fox et al. </editor> <title> Solving Problems on Concurrent Processors. </title> <publisher> Prentice Hall, </publisher> <address> New Jersey, </address> <year> 1988. </year>
Reference-contexts: Locality is common to and useful for many loosely synchronous parallel algorithms <ref> [9] </ref>. This union of hierarchies provides opportunities beyond similar programming structure [2, 13]: it allows easier synthesis of combined particle and mesh algorithms and allows hierarchy-building developments to benefit both simulation methods.
Reference: [10] <author> L. </author> <title> Greengard. </title> <journal> Private communications, </journal> <year> 1991. </year>
Reference-contexts: Initial implementations sorted the particles into groups on a fixed level of the tree with the hierarchical pyramid structure providing the communication network used to combine and re-propagate the multipole-calculated potential. Recent enhancements include adaptive refinement of the hierarchy creating structures similar to a Barnes-Hut tree <ref> [10] </ref>. Both Katzenelson and Anderson have noted the applicability of a variety of "tree algo 3 rithms" to the N-body problem. Katzenelson utilizes the common structure of the Barnes-Hut and FMM algorithms to study how this problem can be mapped to a variety of parallel computer designs [13].
Reference: [11] <author> L. </author> <title> Greengard and V.I. Rokhlin. A fast algorithm for particle simulations. </title> <journal> Journal of Compuational Physics, </journal> <volume> 87, </volume> <year> 1987. </year>
Reference-contexts: By utilizing combined information instead of the individual data at the terminal node of each branch, the algorithm requires O (N log N ) operations. The Fast Multipole Method (FMM) developed by Greengard and Rokhlin <ref> [11] </ref> utilizes new techniques to quickly compute and combine the multipole approximations in O (N ) operations. Initial implementations sorted the particles into groups on a fixed level of the tree with the hierarchical pyramid structure providing the communication network used to combine and re-propagate the multipole-calculated potential.
Reference: [12] <author> R.W. Hockney and J.W. Eastwood. </author> <title> Computer Simulations Using Particles. Adam Hilger, </title> <address> New York, </address> <year> 1981. </year>
Reference-contexts: All of these algorithms are discussed extensively by Hockney and Eastwood <ref> [12] </ref>. A newer type of grid-based solver for dis-cretized equations classified as a multilevel or multigrid method has been in development for over a decade [7, 8].
Reference: [13] <author> J. Katzenelson. </author> <title> Computational structure of the N-body problem. </title> <journal> SIAM J. Sci. Stat. Comput., </journal> <volume> 10, </volume> <year> 1989. </year>
Reference-contexts: Both Katzenelson and Anderson have noted the applicability of a variety of "tree algo 3 rithms" to the N-body problem. Katzenelson utilizes the common structure of the Barnes-Hut and FMM algorithms to study how this problem can be mapped to a variety of parallel computer designs <ref> [13] </ref>. <p> Locality is common to and useful for many loosely synchronous parallel algorithms [9]. This union of hierarchies provides opportunities beyond similar programming structure <ref> [2, 13] </ref>: it allows easier synthesis of combined particle and mesh algorithms and allows hierarchy-building developments to benefit both simulation methods.
Reference: [14] <author> S. McCormick and D. Quinlan. </author> <title> Asynchronous multilevel adaptive methods for solving partial differential equations on multiprocessors. </title> <journal> Parallel Computing, </journal> <volume> 12, </volume> <year> 1989. </year>
Reference-contexts: Almgren recently has extended AMR for multigrid to an MLC implementation [1]. Adaptive mesh refinement traditionally has been limited to rectangular regions. Mc-Cormick and Quinlan have extended their very robust, inherently conservative adaptive mesh multilevel algorithm called Asynchronous Fast Adaptive Composite (AFAC) <ref> [14] </ref> to relax non-rectangular sub-regions directly between two grid levels. The algorithm is a true mul tiscale solver not limited to relaxation-type solvers.
Reference: [15] <author> J. Salmon. </author> <title> Parallel hierarchical N-body methods. </title> <type> Technical Report 90-14, </type> <institution> Center for Research on Parallel Computation, Caltech, </institution> <month> December </month> <year> 1990. </year>
Reference-contexts: Barnes-Hut requires the locality of the tree not just as a framework for the algorithm but to provide the ability to selectively descend into sub-cubes as needed during the computation allowing Salmon to create "locally essential" datasets per processor <ref> [15] </ref>. Locality is common to and useful for many loosely synchronous parallel algorithms [9]. This union of hierarchies provides opportunities beyond similar programming structure [2, 13]: it allows easier synthesis of combined particle and mesh algorithms and allows hierarchy-building developments to benefit both simulation methods. <p> The parallel implementation of the Barnes-Hut code by Salmon <ref> [15] </ref>, including domain decomposition and tree construc 4 small, two-dimensional Barnes-Hut tree containing 32 particles. tion, provides insights applicable to adaptive mesh refinement on massively-parallel multiple instruction multiple data (MIMD) computers.
Reference: [16] <author> J. Salmon and M. Warren. </author> <title> Skeletons from the treecode closet. </title> <journal> Journal of Computational Physics, </journal> <note> 1993. submitted. </note>
Reference-contexts: If the Method of Local Corrections is incorporated to provide greater accuracy for local interactions, the neighboring regions requiring correction can utilize the Barnes-Hut test of opening-angle or the Salmon test of cumulative error contribution <ref> [16] </ref> instead of a direct proximity calculation. The correction can be calculated using a multipole expansion instead of the direct particle-particle interaction which improves efficiency for the worst-case scenario of dense clusters.
Reference: [17] <author> H. Samet. </author> <title> An overview of hierarchical spatial data structures. </title> <booktitle> In Proceedings of the Fifth Israeli Symposium on Artificial Intelligence, Vision, and Pattern Recognition, </booktitle> <pages> pages 331-351, </pages> <address> Tel Aviv, Israel, </address> <month> December </month> <year> 1988. </year>
Reference-contexts: An additional advantage of the oct-tree over the binary tree (recursive bisection) for dividing space is evident when combining particle and mesh algorithms: the spatially divided oct-tree allows for easy alignment with a mesh while the the binary tree does not easily overlay a mesh or another tree <ref> [17] </ref>. The parallel implementation of the Barnes-Hut code by Salmon [15], including domain decomposition and tree construc 4 small, two-dimensional Barnes-Hut tree containing 32 particles. tion, provides insights applicable to adaptive mesh refinement on massively-parallel multiple instruction multiple data (MIMD) computers.
Reference: [18] <author> H. Samet. </author> <title> The Design and Analysis of Spatial Data Structures. </title> <publisher> Addison-Wesley, </publisher> <address> Massachusetts, </address> <year> 1990. </year> <month> 7 </month>
Reference-contexts: Not only does spatially sorting the particles into a tree-type data structure provide an efficient database for individual and collective particle information <ref> [18] </ref>, but the various algorithms require and utilize the hierarchical grouping of particles and combined information to calculate the force on each particle from the multipole moments in O (N log N ) operations or less.
References-found: 18

