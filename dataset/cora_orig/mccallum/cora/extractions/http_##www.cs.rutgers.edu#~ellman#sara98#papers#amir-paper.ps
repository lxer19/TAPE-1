URL: http://www.cs.rutgers.edu/~ellman/sara98/papers/amir-paper.ps
Refering-URL: http://www.cs.rutgers.edu/~ellman/sara98/papers/
Root-URL: http://www.cs.rutgers.edu
Email: eyala@cs.stanford.edu  
Title: Toward a Formalization of Elaboration Tolerance: Adding and Deleting Axioms  
Author: Eyal Amir 
Web: http://www-formal.stanford.edu/eyal  
Address: Gates 2A Stanford University, Stanford, CA 94305-9020, USA  
Affiliation: Department of Computer Science,  
Abstract: When creating a knowledge base, a knowledge engineer faces design and modeling choices. The decisions taken may later affect the evolution of the knowledge base. Indeed, when new knowledge needs to be integrated, the knowledge base may have to undergo some rewriting and redesign, in order to incorporate the new information. Creating the Knowledge Base such that future changes are made easier is a major concern of the knowledge engineer. We refer to the ease of change as Elaboration Tolerance. In order to implement and evaluate Elaboration Tolerance in formal systems, it is necessary to give a formal definition and to provide evaluation tools. These definition and tools constitute the major contribution of this paper. We propose a formal definition for one aspect of the problem of Elaboration and supply tools for comparing Knowledge Bases with respect to their Elaboration Tolerance. These definitions approximate the problem of Elaboration from below. We supply examples illustrating the intuitions captured by these definitions and tools. We then demonstrate the use of these definitions and tools by applying them to examples of language expansion and monotonic versus nonmonotonic reasoning, and examine the limits of the approach. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Alchourron, C. E.; Gardenfors, P.; and Makinson, D. </author> <year> 1985. </year> <title> On the logic of theory change: Partial meet contraction and revision functions. </title> <journal> Journal of Symbolic Logic 50 </journal> <pages> 510-530. </pages>
Reference-contexts: Belief Revision is the process that a logical theory T goes through when we wish to incorporate some new information ' (see <ref> (Alchourron, Gardenfors, & Makinson 1985) </ref>, (Katsuno & Mendelzon 1991), (Lehmann 1995), (Antoniou 1997)).
Reference: <author> Amir, E. </author> <year> 1997. </year> <note> Machinery for elaborating action - Preliminary Report. In NRAC-97' and in http://www-formal.stanford.edu/eyal/nmr/machinery-ea.ps. </note>
Reference-contexts: It attributes the creation of Nonmonotonic Reasoning techniques to Elaboration Tolerance. (Shana-han 1996) further discusses Elaboration Tolerance and shows how the desire for Elaboration Tolerance invigo-rates major portions of the Knowledge Representation endeavor. (Costello 1997) and <ref> (Amir 1997) </ref> showed how different theories of action relate with respect to certain elaborations. Other relevant material is (Giunchiglia & Walsh 1992) and the work on abstraction. This work is relevant in supplying both elaborations (reverse abstractions 1 ) and translation functions (used in comparing systems).
Reference: <author> Antoniou, G. </author> <year> 1997. </year> <title> Nonmonotonic Reasoning. </title> <address> Cam-bridge, Massachusetts: </address> <publisher> MIT Press. </publisher>
Reference-contexts: Belief Revision is the process that a logical theory T goes through when we wish to incorporate some new information ' (see (Alchourron, Gardenfors, & Makinson 1985), (Katsuno & Mendelzon 1991), (Lehmann 1995), <ref> (Antoniou 1997) </ref>).
Reference: <author> Brachman, R., and Levesque, H. </author> <year> 1985. </year> <title> Readings in Knowledge Representation. </title> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Coming up with a complete characterization of the set of possible tricks one might pull seems like an open-ended task. These "tricks" may include design decisions like Object-Oriented design (e.g., using Frames (see (Minsky 1975) and <ref> (Brachman & Levesque 1985) </ref>)), but may also include simple aggregations such as the one demonstrated in the example just described.
Reference: <author> Costello, T. </author> <year> 1997. </year> <title> Beyond minimizing change. </title> <booktitle> In Proceedings of AAAI-97. </booktitle>
Reference-contexts: It attributes the creation of Nonmonotonic Reasoning techniques to Elaboration Tolerance. (Shana-han 1996) further discusses Elaboration Tolerance and shows how the desire for Elaboration Tolerance invigo-rates major portions of the Knowledge Representation endeavor. <ref> (Costello 1997) </ref> and (Amir 1997) showed how different theories of action relate with respect to certain elaborations. Other relevant material is (Giunchiglia & Walsh 1992) and the work on abstraction. This work is relevant in supplying both elaborations (reverse abstractions 1 ) and translation functions (used in comparing systems).
Reference: <author> Fagin, R.; Ullman, J. D.; and Vardi, M. Y. </author> <year> 1983. </year> <title> On the semantics of updates in databases. </title> <booktitle> In Proceedings of the Second ACM SIGACT-SIGMOD Symposium on Principles of Database Systems, </booktitle> <pages> 352-365. </pages>
Reference-contexts: In our exposition of Elaboration Tolerance we explicitly allowed our base theory to be nonmonotonic. Last, the work on syntactic forms of Belief Revision (e.g., (Nebel 1991)) focused on Theory Base Change <ref> (Fagin, Ullman, & Vardi 1983) </ref> and the information that can be elicited from the syntactic form of the theory (mainly in the sense that axioms have a special stance among the sentences of the theory).
Reference: <author> Giunchiglia, F., and Walsh, T. </author> <year> 1992. </year> <title> A theory of abstraction. </title> <journal> Artificial Intelligence 57(2-3):323-389. </journal>
Reference-contexts: Other relevant material is <ref> (Giunchiglia & Walsh 1992) </ref> and the work on abstraction. This work is relevant in supplying both elaborations (reverse abstractions 1 ) and translation functions (used in comparing systems). In contrast to these discussions, we try to define a region on which some formal work can be done. <p> To compare two systems, we first have to translate them to some "common ground". Somewhat similar to the approach taken by <ref> (Giunchiglia & Walsh 1992) </ref>, we first define a translation between two formal systems ((Giunchiglia & Walsh 1992) call their function an abstraction function, but this name is not necessar ily appropriate in our context).
Reference: <author> Katsuno, H., and Mendelzon, A. O. </author> <year> 1991. </year> <title> Propositional knowledge base revision and minimal change. </title> <journal> Artificial Intelligence 52(KRR-TR-90-3):263-294. </journal>
Reference-contexts: Belief Revision is the process that a logical theory T goes through when we wish to incorporate some new information ' (see (Alchourron, Gardenfors, & Makinson 1985), <ref> (Katsuno & Mendelzon 1991) </ref>, (Lehmann 1995), (Antoniou 1997)).
Reference: <author> Lehmann, D. </author> <year> 1995. </year> <title> Belief revision, revised. </title> <booktitle> In IJCAI-95, </booktitle> <pages> 1534-1540. </pages>
Reference-contexts: Belief Revision is the process that a logical theory T goes through when we wish to incorporate some new information ' (see (Alchourron, Gardenfors, & Makinson 1985), (Katsuno & Mendelzon 1991), <ref> (Lehmann 1995) </ref>, (Antoniou 1997)).
Reference: <author> McCarthy, J. </author> <year> 1980. </year> <title> Circumscription|A Form of Non-Monotonic Reasoning. </title> <booktitle> Artificial Intelligence 13 </booktitle> <pages> 27-39. </pages> <note> Reprinted in (McCarthy 1990). </note>
Reference-contexts: (9) The system is 0 = hL; j~ C ; f (9)gi, where j~ C ' () Circ [; P reconditions; L] ` ' Here, Circ [A; P ; Q] is the circumscription formula A (P; Q) ^ 8pq [A (p; q) ) :(p &lt; P )], as defined in <ref> (McCarthy 1980) </ref>, which intuitively says that P is minimized even at the price of changing Q. In our context, that means (intuitively) that the proposition P reconditions take the truth value FALSE, unless it "must" be TRUE.
Reference: <author> McCarthy, J. </author> <year> 1988. </year> <journal> Mathematical logic in artificial intelligence. </journal> <volume> Daedalus 117(1) </volume> <pages> 297-311. </pages>
Reference-contexts: 1 Introduction The notion of Elaboration Tolerance was proposed by McCarthy <ref> (McCarthy 1988) </ref> for the problem of extending a logical theory, with the intuition that a logical system should have the ability to absorb additions the way Natural Language allows.
Reference: <author> McCarthy, J. </author> <year> 1990. </year> <title> Formalization of common sense, papers by John McCarthy edited by V. Lifschitz. </title> <publisher> Ablex. </publisher>
Reference: <author> McCarthy, J. </author> <year> 1998. </year> <note> Elaboration Tolerance. In CommonSense '98 and in McCarthy's web page http://www-formal.stanford.edu/jmc/elaboration.html. </note>
Reference-contexts: Finally, we show that there is no one most elaboration-tolerant system. A few authors have informally discussed Elaboration Tolerance in the past. <ref> (McCarthy 1998) </ref> gives some examples and discusses intuitions of Elaboration Tolerance.
Reference: <author> Minsky, M. </author> <year> 1975. </year> <title> A framework for representing knowledge. </title> <publisher> Winston. </publisher>
Reference-contexts: Coming up with a complete characterization of the set of possible tricks one might pull seems like an open-ended task. These "tricks" may include design decisions like Object-Oriented design (e.g., using Frames (see <ref> (Minsky 1975) </ref> and (Brachman & Levesque 1985))), but may also include simple aggregations such as the one demonstrated in the example just described.
Reference: <author> Moore, R. C. </author> <year> 1987. </year> <title> Possible-world semantics for autoepistemic logic. </title> <editor> In Ginsberg, M., ed., </editor> <booktitle> Readings in nonmonotonic reasoning. </booktitle> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann. </publisher> <pages> 137-142. </pages>
Reference-contexts: The same results can be stated for the nonmonotonic systems of Default Logic (Reiter 1980), Autoepistemic Logic <ref> (Moore 1987) </ref> and possibly others, but for simplicity, we restrict ourselves and discuss only the case of Circumscription. Let 1 = hL 1 ; `; 1 i, with L 1 a propositional language, ` the propositional entailment and 1 a set of axioms in L 1 .
Reference: <author> Nebel, B. </author> <year> 1991. </year> <title> Belief revision and default reasoning: syntax-based approaches. </title> <booktitle> In kr91. </booktitle> <address> SF: </address> <publisher> MK. </publisher> <pages> 417-428. </pages>
Reference-contexts: In our exposition of Elaboration Tolerance we explicitly allowed our base theory to be nonmonotonic. Last, the work on syntactic forms of Belief Revision (e.g., <ref> (Nebel 1991) </ref>) focused on Theory Base Change (Fagin, Ullman, & Vardi 1983) and the information that can be elicited from the syntactic form of the theory (mainly in the sense that axioms have a special stance among the sentences of the theory).
Reference: <author> Reiter, R. </author> <year> 1980. </year> <title> A Logic for Default Reasoning. </title> <booktitle> Artificial Intelligence 13 (1-2):81-132. </booktitle>
Reference-contexts: The same results can be stated for the nonmonotonic systems of Default Logic <ref> (Reiter 1980) </ref>, Autoepistemic Logic (Moore 1987) and possibly others, but for simplicity, we restrict ourselves and discuss only the case of Circumscription.
Reference: <author> Shanahan, M. P. </author> <year> 1996. </year> <title> Robotics and the common sense informatic situation. </title> <booktitle> In Proceedings ECAI 96, </booktitle> <pages> 684-688. </pages>
Reference: <author> Shoenfield, J. R. </author> <year> 1967. </year> <title> Mathematical Logic. </title> <publisher> Duke University: Addison-Wesley. </publisher>
Reference-contexts: We restrict our discussion to knowledge bases that are Axiomatic Formal Systems. In later sections we will see the reason we need such a broad definition. Definition 2.1 (From <ref> (Shoenfield 1967) </ref>) An Axiomatic Formal System is a triple hL; j~; i where L is the language, is the set of axioms and j~ is the inference relation 2 of .
References-found: 19

