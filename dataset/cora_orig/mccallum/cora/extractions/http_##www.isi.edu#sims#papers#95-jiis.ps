URL: http://www.isi.edu/sims/papers/95-jiis.ps
Refering-URL: http://www.isi.edu/~knoblock/
Root-URL: 
Title: Query Reformulation for Dynamic Information Integration  Editor:  
Author: YIGAL ARENS, CRAIG A. KNOBLOCK, AND WEI-MIN SHEN farens, knoblock, 
Keyword: Information integration, multidatabase systems, query reformulation, heterogeneous databases.  
Address: 4676 Admiralty Way Marina del Rey, CA 90292  
Affiliation: Information Sciences Institute and Department of Computer Science University of Southern California  
Note: 1-38 c Kluwer Academic Publishers, Boston. Manufactured in The Netherlands.  
Email: sheng@isi.edu  
Date: Received June 15, 1995  
Abstract: The standard approach to integrating heterogeneous information sources is to build a global schema that relates all of the information in the different sources, and to pose queries directly against it. The problem is that schema integration is usually difficult, and as soon as any of the information sources change or a new source is added, the process may have to be repeated. The SIMS system uses an alternative approach. A domain model of the application domain is created, establishing a fixed vocabulary for describing data sets in the domain. Using this language, each available information source is described. Queries to SIMS against the collection of available information sources are posed using terms from the domain model, and reformulation operators are employed to dynamically select an appropriate set of information sources and to determine how to integrate the available information to satisfy a query. This approach results in a system that is more flexible than existing ones, more easily scalable, and able to respond dynamically to newly available or unexpectedly missing information sources. This paper describes the query reformulation process in SIMS and the operators used in it. We provide precise definitions of the reformulation operators and explain the rationale behind choosing the specific ones SIMS uses. We have demonstrated the feasibility and effectiveness of this approach by applying SIMS in the domains of transportation planning and medical trauma care. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Rafi Ahmed, Philippe De Smedt, Weimin Du, William Kent, Mohammad A. Ketabchi, Witold A. Litwin, Abbas Rafii, and Ming Chien Shan. </author> <title> The Pegasus heterogenous multi-database system. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 19-27, </pages> <year> 1991. </year>
Reference-contexts: The combination of semantic modeling and dynamic reformulation of queries provides a much more flexible and easily extensible interface to a possibly changing collection of information sources. The situation is similar with multidatabase systems such as Pegasus <ref> [1] </ref> and UniSQL [16]. Pegasus addresses the semantic heterogeneity problem primarily by requiring users/administrators to write specific programs that will reconcile semantic differences. Pegasus does have one kind of reformulation strategy that is similar to SIMS', in which a superclass can be specialized into a collection of its subclasses.
Reference: 2. <author> Yigal Arens, Chin Chee, Chun-Nan Hsu, Hoh In, and Craig A. Knoblock. </author> <title> Query processing in an information mediator. In Proceedings of the ARPA / Rome Laboratory Knowledge-Based Planning and Scheduling Initiative, </title> <address> Tucson, AZ, </address> <year> 1994. </year>
Reference-contexts: SIMS can even replan if an information source is discovered to be unavailable during the process of executing a plan that was created under the assumption that the source was available. There are four basic components to query-processing in SIMS <ref> [2] </ref>. These are: * Query reformulation This component identifies the sources of information that are required in order to answer a query and determines how data from them must be combined to produce precisely what the user requested.
Reference: 3. <author> Yigal Arens, Chin Y. Chee, Chun-Nan Hsu, and Craig A. Knoblock. </author> <title> Retrieving and integrating data from multiple information sources. </title> <journal> International Journal on Intelligent and Cooperative Information Systems, </journal> <volume> 2(2) </volume> <pages> 127-158, </pages> <year> 1993. </year> <month> 37 </month>
Reference-contexts: This is done by reformulating the 3 user's query expressed in domain terms into queries to specific information sources. This subtask of SIMS is the subject of this paper. An early version of the query reformulation process in SIMS was briefly described in <ref> [3] </ref>. This paper refines those early ideas, presents the detailed specification of the reformulation operators, and describes the search process. * Query access planning The second component constructs a plan for retrieval of the information requested by the reformulated query (and hence, by the original query). <p> On the other hand, the system would not even attempt to reformulate that portion of the query if there were at least one database that contained all of the required information about ports. In earlier versions of SIMS <ref> [3] </ref>, the system would completely reformulate a domain query into an information-source query before generating the query access plan. In that case, the system would search for a reformulation of the query that required the smallest number of reformulation operators.
Reference: 4. <author> Anthony Barrett, Keith Golden, Scott Penberthy, and Daniel Weld. </author> <note> UCPOP user's manual (version 2.0). Technical Report 93-09-06, </note> <institution> Department of Computer Science and Engineering, University of Washington, </institution> <year> 1993. </year>
Reference-contexts: Both the data manipulation operators and the query 25 reformulation operators are specified in a general operator language and are used in a general-purpose planner called sage [18], which is built on the ucpop <ref> [4] </ref> planning system. The advantage of integrating the query planning and reformulation process is that the system can now generate estimates on the cost of processing partially constructed plans. This information is used within a branch-and-bound search to find the lowest cost plan to implement a query.
Reference: 5. <author> R. J. Brachman, A. Borgida, D. L. McGuinness, P. F. Patel-Schneider, and L. A. Resnick. </author> <title> Living with classic: When and how to use a kl-one-like language. </title> <editor> In John Sowa, editor, </editor> <booktitle> Principles of Semantic Networks, </booktitle> <pages> pages 401-456. </pages> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1991. </year>
Reference-contexts: The Information Manifold [22], like SIMS, provides an approach to dynamically integrating information sources. The system also uses a knowledge representation system (Classic <ref> [5] </ref>) to integrate the various information sources. Their approach provides an interesting alternative to the one presented in this paper.
Reference: 6. <author> R.J. Brachman and J.G. Schmolze. </author> <title> An overview of the kl-one knowledge representation system. </title> <journal> Cognitive Science, </journal> <volume> 9(2) </volume> <pages> 171-216, </pages> <year> 1985. </year>
Reference-contexts: The example has been simplified from the actual domain in order to provide a short, self-contained description of a model. The domain model is described in the Loom language [23], which is a member of the KL-ONE family of knowledge representation systems <ref> [6] </ref>. The basic objects in Loom are classes (also called concepts), which define a set of related instances, and roles, which define the attributes of a class.
Reference: 7. <author> Waiman Cheung. </author> <title> The Model-assisted Global Query System. </title> <type> PhD thesis, </type> <institution> Computer Science Department, Rensselaer Polytechnic Institute, </institution> <address> Troy, NY, </address> <year> 1991. </year>
Reference-contexts: In SIMS, source selection is integrated into query access planning, so SIMS will attempt to minimize the overall cost of a query and not just the number of sources accessed. The Model-assisted Global Querying System (MGQS) <ref> [7] </ref> shares with SIMS the goal of providing users with access to multiple heterogeneous databases while insulating them from the details of the underlying sources of data.
Reference: 8. <author> Christine Collet, Michael N. Huhns, and Wei-Min Shen. </author> <title> Resource integration using a large knowledge base in Carnot. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 55-62, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: Despite differences in focus, 34 Raschid et al. will have to handle the same type of problems SIMS does. However, at this time their system still assumes a relatively straightforward correspondence between the data organization in the different databases, and handles only relatively simple queries. The Carnot system <ref> [8] </ref>, [14], similar to SIMS, integrates heterogeneous databases using a knowledge representation system (CYC [20]). Carnot uses a knowledge base to build a set of articulation axioms that describe how to map between the tables and columns in the databases and the concepts in the domain model.
Reference: 9. <author> Jean Gallier, Paliath Narendran, David Plaisted, Stan Raatz, and Wayne Synder. </author> <title> An algorithm for finding canonical sets of ground rewrite rules in polynomial time. </title> <journal> Journal of the ACM, </journal> <volume> 40(1) </volume> <pages> 1-16, </pages> <year> 1993. </year>
Reference-contexts: To the extent that reformulations are performed in MGQS, they are predefined, determined by relationships expressed in the domain model. They are not dynamic in the sense of SIMS' reformulations. The SIMS approach bears a superficial similarity to equational rewriting, e.g., <ref> [9] </ref>. However, our rewrite rules are not equations in the sense used by such systems. The SIMS equivalent of the right-hand side of an equation is not a formula in the representation language we are using it is a search strategy.
Reference: 10. <author> Chun-Nan Hsu and Craig A. Knoblock. </author> <title> Reformulating query plans for multidatabase systems. </title> <booktitle> In Proceedings of the Second International Conference on Information and Knowledge Management, </booktitle> <address> Washington, D.C., 1993. </address> <publisher> ACM. </publisher>
Reference-contexts: We have extended semantic query optimization techniques to support multidatabase queries and have developed an approach to learn the rules for the optimization process. See <ref> [10] </ref>, [11], [12], [13] for details. * Execution Finally, the fourth component executes the optimized query plan. SIMS executes queries against the appropriate information sources (doing so in parallel when possible), transfers data, constructs a response to the user, and returns it.
Reference: 11. <author> Chun-Nan Hsu and Craig A. Knoblock. </author> <title> Rule induction for semantic query optimization. </title> <booktitle> In Proceedings of the Eleventh International Conference on Machine Learning, </booktitle> <address> New Brunswick, NJ, </address> <year> 1994. </year>
Reference-contexts: We have extended semantic query optimization techniques to support multidatabase queries and have developed an approach to learn the rules for the optimization process. See [10], <ref> [11] </ref>, [12], [13] for details. * Execution Finally, the fourth component executes the optimized query plan. SIMS executes queries against the appropriate information sources (doing so in parallel when possible), transfers data, constructs a response to the user, and returns it.
Reference: 12. <author> Chun-Nan Hsu and Craig A. Knoblock. </author> <title> Estimating the robustness of discovered knowledge. </title> <booktitle> In Proceedings of the First International Conference on Knowledge Discovery and Data Mining, </booktitle> <address> Menlo Park, CA, 1995. </address> <publisher> AAAI Press. </publisher>
Reference-contexts: We have extended semantic query optimization techniques to support multidatabase queries and have developed an approach to learn the rules for the optimization process. See [10], [11], <ref> [12] </ref>, [13] for details. * Execution Finally, the fourth component executes the optimized query plan. SIMS executes queries against the appropriate information sources (doing so in parallel when possible), transfers data, constructs a response to the user, and returns it.
Reference: 13. <author> Chun-Nan Hsu and Craig A. Knoblock. </author> <title> Using inductive learning to generate rules for semantic query optimization. </title> <editor> In Gregory Piatetsky-Shapiro and Usama Fayyad, editors, </editor> <booktitle> Advances in Knowledge Discovery and Data Mining, chapter 17. </booktitle> <publisher> MIT Press, </publisher> <year> 1995. </year>
Reference-contexts: We have extended semantic query optimization techniques to support multidatabase queries and have developed an approach to learn the rules for the optimization process. See [10], [11], [12], <ref> [13] </ref> for details. * Execution Finally, the fourth component executes the optimized query plan. SIMS executes queries against the appropriate information sources (doing so in parallel when possible), transfers data, constructs a response to the user, and returns it.
Reference: 14. <author> M.N. Huhns, N. Jacobs, T. Ksiezyk, W.M. Shen, M.P. Singh, and P.E. Cannata. </author> <title> Integrating enterprise information models in Carnot. </title> <booktitle> In Proceedings of 1993 International Conference on Intelligent and Cooperative Information Systems, </booktitle> <address> Rotterdam, Holland, </address> <month> May </month> <year> 1993. </year>
Reference-contexts: Despite differences in focus, 34 Raschid et al. will have to handle the same type of problems SIMS does. However, at this time their system still assumes a relatively straightforward correspondence between the data organization in the different databases, and handles only relatively simple queries. The Carnot system [8], <ref> [14] </ref>, similar to SIMS, integrates heterogeneous databases using a knowledge representation system (CYC [20]). Carnot uses a knowledge base to build a set of articulation axioms that describe how to map between the tables and columns in the databases and the concepts in the domain model.
Reference: 15. <author> InterSystems, </author> <title> Cambridge, MA. Open M/SQL Server User Guide, </title> <address> RDBMS E.3 edition, </address> <year> 1993. </year>
Reference-contexts: Non-Relational Databases Although we believe that the SIMS approach is applicable to other information sources, in its current implementation SIMS deals only with Oracle relational databases, MUMPS databases (through an MSQL <ref> [15] </ref> wrapper), Loom knowledge bases, and programs that can be called within our computational environment to generate data. The extension of SIMS to OODBs and flat files would appear to be straightforward, and is planned in the near future. 33 7.
Reference: 16. <author> Won Kim and Jungyun Seo. </author> <title> Classifying schematic and data heterogeneity in multidatabase systems. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 12-18, </pages> <year> 1991. </year>
Reference-contexts: The combination of semantic modeling and dynamic reformulation of queries provides a much more flexible and easily extensible interface to a possibly changing collection of information sources. The situation is similar with multidatabase systems such as Pegasus [1] and UniSQL <ref> [16] </ref>. Pegasus addresses the semantic heterogeneity problem primarily by requiring users/administrators to write specific programs that will reconcile semantic differences. Pegasus does have one kind of reformulation strategy that is similar to SIMS', in which a superclass can be specialized into a collection of its subclasses.
Reference: 17. <author> Craig A. Knoblock. </author> <title> Generating parallel execution plans with a partial-order planner. </title> <booktitle> In Proceedings of the Second International Conference on Artificial Intelligence Planning Systems, </booktitle> <address> Chicago, IL, </address> <year> 1994. </year>
Reference-contexts: The plan involves steps such as sending a specific query to some information source, moving data from one source to another, joining results from different informa tion sources, and temporarily storing partial results. See <ref> [17] </ref>, [18] for details. * Semantic query-plan optimization The third component exploits learned knowledge about the contents of databases to perform semantic query optimization. We have extended semantic query optimization techniques to support multidatabase queries and have developed an approach to learn the rules for the optimization process.
Reference: 18. <author> Craig A. Knoblock. </author> <title> Planning, executing, </title> <booktitle> sensing, and replanning for information gathering. In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, </booktitle> <address> Montreal, Canada, </address> <year> 1995. </year>
Reference-contexts: The plan involves steps such as sending a specific query to some information source, moving data from one source to another, joining results from different informa tion sources, and temporarily storing partial results. See [17], <ref> [18] </ref> for details. * Semantic query-plan optimization The third component exploits learned knowledge about the contents of databases to perform semantic query optimization. We have extended semantic query optimization techniques to support multidatabase queries and have developed an approach to learn the rules for the optimization process. <p> In the current version of SIMS, reformulation and query access planning are tightly integrated. This means that the system reformulates queries and generates the query access plan all within the same search process <ref> [18] </ref>. The SIMS query planning process is described in [18] and will only be briefly reviewed here in order to describe how query reformulation fits within query planning. Traditional query processors determine the operations and the ordering on the operations for producing the requested set of data. <p> In the current version of SIMS, reformulation and query access planning are tightly integrated. This means that the system reformulates queries and generates the query access plan all within the same search process <ref> [18] </ref>. The SIMS query planning process is described in [18] and will only be briefly reviewed here in order to describe how query reformulation fits within query planning. Traditional query processors determine the operations and the ordering on the operations for producing the requested set of data. <p> Both the data manipulation operators and the query 25 reformulation operators are specified in a general operator language and are used in a general-purpose planner called sage <ref> [18] </ref>, which is built on the ucpop [4] planning system. The advantage of integrating the query planning and reformulation process is that the system can now generate estimates on the cost of processing partially constructed plans.
Reference: 19. <author> Terry Landers and Ronni L. Rosenberg. </author> <title> An overview of Multibase. </title> <editor> In H.J. Schneider, editor, </editor> <booktitle> Distributed Data Bases. </booktitle> <publisher> North-Holland, </publisher> <year> 1982. </year>
Reference-contexts: However, building a tightly coupled federated system requires constructing a global schema for the databases to be combined. A given query would then always be mapped to the same combination of queries to the underlying databases. An example of this is the work on Multibase <ref> [19] </ref>, where the basic goals are the same as those of SIMS, but the mapping between the global schema and the local schemas is hard wired.
Reference: 20. <author> D. Lenat and R.V. Guha. </author> <title> Building Large Knowledge-Based Systems: Representation and Inference in the Cyc Project. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1990. </year>
Reference-contexts: However, at this time their system still assumes a relatively straightforward correspondence between the data organization in the different databases, and handles only relatively simple queries. The Carnot system [8], [14], similar to SIMS, integrates heterogeneous databases using a knowledge representation system (CYC <ref> [20] </ref>). Carnot uses a knowledge base to build a set of articulation axioms that describe how to map between the tables and columns in the databases and the concepts in the domain model.
Reference: 21. <author> Alon Y. Levy, Alberto O. Mendelzon, Yehoshua Sagiv, and Divesh Srivastava. </author> <title> Answering queries using views. </title> <booktitle> In Proceedings of the 14th ACM Symposium on Principles of Database Systems, </booktitle> <address> San Jose, CA, </address> <year> 1995. </year>
Reference-contexts: This attempts to insure no loss of expressive power. The functionality supported by the following two operators is roughly equivalent to that available in <ref> [21] </ref>. Levy et al. treat the problem as one of integrating materialized relations each could represent an information source into a view represented by a query. This work shows that the complexity of the problem is NP-complete (or worse in the case of a more expressive language). 3.3. <p> Instead of using an object model (as in SIMS) for integrating the various information sources, they use an object-relational model, which is essentially the relational model with an object hierarchy on the relations. Their approach to integration is based on view integration <ref> [21] </ref>, and it provides functionality that is equivalent to the operators for reformulating the minimal model in SIMS. However, without extending their modeling and/or processing, they cannot perform the other operators for traversing the augmented domain model (i.e., the substitution and infer-equivalence operators).
Reference: 22. <author> Alon Y. Levy, Divesh Srivastava, and Thomas Kirk. </author> <title> Data model and query evaluation in global information systems. </title> <journal> Journal of Intelligent Information Systems, </journal> <year> 1995. </year>
Reference-contexts: In contrast, the domain model in SIMS is an integral part of the system, allowing SIMS to combine information sources dynamically and in novel ways not anticipated at design time. The Information Manifold <ref> [22] </ref>, like SIMS, provides an approach to dynamically integrating information sources. The system also uses a knowledge representation system (Classic [5]) to integrate the various information sources. Their approach provides an interesting alternative to the one presented in this paper.
Reference: 23. <author> Robert MacGregor. </author> <title> The evolving technology of classification-based knowledge representation systems. </title> <editor> In John Sowa, editor, </editor> <booktitle> Principles of Semantic Networks: Explorations in the Representation of Knowledge. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1990. </year>
Reference-contexts: The example has been simplified from the actual domain in order to provide a short, self-contained description of a model. The domain model is described in the Loom language <ref> [23] </ref>, which is a member of the KL-ONE family of knowledge representation systems [6]. The basic objects in Loom are classes (also called concepts), which define a set of related instances, and roles, which define the attributes of a class.
Reference: 24. <author> Donald P. McKay, Timothy W. Finin, and Anthony O'Hare. </author> <title> The intelligent database interface: Integrating AI and database systems. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence, </booktitle> <address> Boston, MA, </address> <year> 1990. </year> <month> 38 </month>
Reference-contexts: The problem of translating this query into a query appropriate for the given information source and executing them against the source is handled by a wrapper. In this case the queries must be translated into SQL. We use the Loom Interface Manager (LIM) <ref> [24] </ref>, [25] to perform this translation and execute the queries against an Oracle database. 5. Experimental Results The SIMS system has been tested and used in several real-world information integration applications, including trauma care information management and transportation information integration.
Reference: 25. <author> Jon A. Pastor, Donald P. McKay, and Timothy W. Finin. View-concepts: </author> <title> Knowledge-based access to databases. </title> <booktitle> In Proceedings of the First International Conference on Information and Knowledge Management, </booktitle> <pages> pages 84-91, </pages> <address> Baltimore, MD, </address> <year> 1992. </year>
Reference-contexts: The problem of translating this query into a query appropriate for the given information source and executing them against the source is handled by a wrapper. In this case the queries must be translated into SQL. We use the Loom Interface Manager (LIM) [24], <ref> [25] </ref> to perform this translation and execute the queries against an Oracle database. 5. Experimental Results The SIMS system has been tested and used in several real-world information integration applications, including trauma care information management and transportation information integration. In this section, we give a detailed description of the latter.
Reference: 26. <author> Louiqa Raschid, Yahui Chang, and Bonnie J. Dorr. </author> <title> Query transformation techniques for interoperable query processing in cooperative information systems. </title> <booktitle> In Proceedings of the 2nd International Conference on Cooperative Information Systems (CoopIS-94), </booktitle> <address> Toronto, Canada, </address> <year> 1994. </year>
Reference-contexts: In SIMS we attempt to address this n 2 problem by providing a single reference vocabulary (the domain model) with which to describe each new information source independently of the others. Raschid et al. <ref> [26] </ref> provide an interesting alternative approach to interoperability among heterogeneous databases, specifically dealing with relational and object databases. Their system deals with mapping queries against one local schema to queries against the local schema of another database.
Reference: 27. <author> M.P. Reddy, B.E. Prasad, and P.G. Reddy. </author> <title> Query processing in heterogeneous distributed database management systems. </title> <editor> In Amar Gupta, editor, </editor> <booktitle> Integration of Information Systems: Bridging Heterogeneous Databases, </booktitle> <pages> pages 264-277. </pages> <publisher> IEEE Press, </publisher> <address> NY, </address> <year> 1989. </year>
Reference-contexts: The extension of SIMS to OODBs and flat files would appear to be straightforward, and is planned in the near future. 33 7. Related Work There are a variety of approaches to handling distributed, heterogeneous, and autonomous databases <ref> [27] </ref>, [29]. Of these approaches, the tightly coupled federated systems are the most closely related to SIMS in that they attempt to support total integration of all information sources in the sense that SIMS provides.
Reference: 28. <author> P. Griffiths Selinger, M.M. Astrahan, D.D. Chamberlin, R.A. Lorie, and T.G. Price. </author> <title> Access path selection in a relational database management system. </title> <booktitle> In Artificial Intelligence and Databases, </booktitle> <pages> pages 511-522. </pages> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, CA, </address> <year> 1988. </year>
Reference-contexts: These estimates can then be used to estimate the overall cost of each query plan, which is used to guide the search process. This approach is more efficient than other approaches to query processing that enumerate the set of possible query plans and then compare their costs <ref> [28] </ref>. 4.2.
Reference: 29. <author> Amit P. Sheth and James A. Larson. </author> <title> Federated database systems for managing distributed, heterogeneous, and autonomous databases. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(3) </volume> <pages> 183-236, </pages> <year> 1990. </year>
Reference-contexts: The extension of SIMS to OODBs and flat files would appear to be straightforward, and is planned in the near future. 33 7. Related Work There are a variety of approaches to handling distributed, heterogeneous, and autonomous databases [27], <ref> [29] </ref>. Of these approaches, the tightly coupled federated systems are the most closely related to SIMS in that they attempt to support total integration of all information sources in the sense that SIMS provides.
Reference: 30. <author> Michael Siegel. </author> <title> A metadata approach to resolving semantic conflicts. </title> <booktitle> In Proceedings of the 17th International Conference on Very Large Data Bases, </booktitle> <pages> pages 133-145, </pages> <address> Barcelona, Spain, </address> <year> 1991. </year>
Reference-contexts: It should be noted that the problem of obtaining such mappings is a complex one in many cases <ref> [30] </ref>. 6.3.
Reference: 31. <author> Sheila Tejada and Craig A. Knoblock. </author> <title> Mapping a relational query language into a knowledge representation query language. </title> <type> Technical report, </type> <institution> Information Sciences Institute, University of Southern California, </institution> <year> 1995. </year>
Reference-contexts: As pointed out 12 above, this cannot always be guaranteed. However, in dealing with a relational database whose query language is SQL, we can rely on the fact that all of the SQL constructs can be expressed in Loom <ref> [31] </ref>. Thus, it is enough to make sure that the schema of the database and its information source model "mirror" each other; every database relation will have a corresponding information source model concept, and every attribute will have a corresponding role on that concept (Cf. Figure 2).
Reference: 32. <author> D. Woelk, W.M. Shen, M.N. Huhns, and P. Cannata. </author> <title> Model driven enterprise information management in Carnot. In Enterprise Integration Modeling: </title> <booktitle> Proceedings of the First International Conference, </booktitle> <year> 1992. </year>
Reference-contexts: Although queries can be made against the domain concepts used in the axioms, as well as the integrated columns and tables <ref> [32] </ref>, the knowledge base itself is no longer used in the processing. In contrast, the domain model in SIMS is an integral part of the system, allowing SIMS to combine information sources dynamically and in novel ways not anticipated at design time.
References-found: 32

