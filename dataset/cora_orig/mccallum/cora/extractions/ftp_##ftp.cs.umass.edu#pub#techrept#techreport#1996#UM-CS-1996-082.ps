URL: ftp://ftp.cs.umass.edu/pub/techrept/techreport/1996/UM-CS-1996-082.ps
Refering-URL: http://dis.cs.umass.edu/~wagner/pubs.html
Root-URL: 
Email: Email: wagner@cs.umass.edu  Email: garveyaj@plu.edu  Email: lesser@cs.umass.edu  
Title: Satisficing Evaluation Functions: The Heart of the New Design-to-Criteria Paradigm  
Author: Thomas Wagner Alan Garvey Victor Lesser 
Date: November 16, 1996  
Address: Amherst, MA 01003  Tacoma, WA 98447  Amherst, MA 01003  
Affiliation: Computer Science Department University of Massachusetts  Computer Science Department Pacific Lutheran University  Computer Science Department University of Massachusetts  UMass Computer Science  
Pubnum: Technical Report 1996-82  
Abstract: Design-to-Criteria scheduling is the process of custom tailoring a way to achieve a high-level task, via actions described in a TMS model of the task, to fit a particular client's quality, cost, and duration criteria or needs. At the heart of the Design-to-Criteria paradigm is the ability to determine how well a particular schedule, or schedule abstraction, fits a set of design criteria. The process of measuring "goodness" of schedules or alternatives and determining which items are best is called evaluation. Working to meet criteria is ubiquitous in the Design-to-Criteria scheduling system and consequently evaluation is used at every turn. The new evaluation functions operate to determine a principled measurement of goodness based on relativity and proportionality. Relativity is important because the objective is to make satisficing choices and the goodness of one option is relative to the other possible options. Proportionality is a major concern because we do not want different quality, cost, and duration scales to skew the evaluation mechanism and because the client's criteria is described in a relative/proportionalistic fashion. The new evaluation functions are paired with a new criteria specification metaphor, importance sliders. The slider metaphor enables clients, users or other systems, to define the relative importance of quality, cost, and duration with respect to three classes of concerns: raw goodness, thresholds and limits, and uncertainty. fl This material is based upon work supported by the National Science Foundation under Grant No. IRI-9523419, the Department of the Navy, Office of the Chief of Naval Research, under Grant No. N00014-95-1-1198, and via a subcontract from Boeing Helicopter which is being supported by DARPA under the RaDEO program (contract number 70NANB6H0074). The content of the information does not necessarily reflect the position or the policy of the Government, National Science Foundation, or Boeing Helicopter and no official endorsement should be inferred. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Keith S. Decker. </author> <title> TMS: A framework for analysis and design of coordination mechanisms. </title> <editor> In G. O'Hare and N. Jennings, editors, </editor> <booktitle> Foundations of Distributed Artificial Intelligence, chapter 16. </booktitle> <publisher> Wiley Inter-Science, </publisher> <year> 1995. </year> <month> Forthcoming. </month>
Reference-contexts: 1 Introduction TMS (Task Analysis, Environment Modeling, and Simulation) <ref> [1, 2, 3] </ref> is a task modeling framework used to describe and reason about complex problem solving processes. The model explicitly represents different alternative approaches to achieving a task, how they interact, and the quality, cost, and duration trade-offs of different actions.
Reference: [2] <author> Keith S. Decker and Victor R. Lesser. </author> <title> Quantitative modeling of complex computational task environments. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 217-224, </pages> <address> Washington, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: 1 Introduction TMS (Task Analysis, Environment Modeling, and Simulation) <ref> [1, 2, 3] </ref> is a task modeling framework used to describe and reason about complex problem solving processes. The model explicitly represents different alternative approaches to achieving a task, how they interact, and the quality, cost, and duration trade-offs of different actions.
Reference: [3] <author> Keith S. Decker and Victor R. Lesser. </author> <title> Quantitative modeling of complex environments. </title> <journal> International Journal of Intelligent Systems in Accounting, Finance, and Management, </journal> <volume> 2(4) </volume> <pages> 215-234, </pages> <month> December </month> <year> 1993. </year> <title> Special issue on "Mathematical and Computational Models of Organizations: Models and Characteristics of Agent Behavior". </title>
Reference-contexts: 1 Introduction TMS (Task Analysis, Environment Modeling, and Simulation) <ref> [1, 2, 3] </ref> is a task modeling framework used to describe and reason about complex problem solving processes. The model explicitly represents different alternative approaches to achieving a task, how they interact, and the quality, cost, and duration trade-offs of different actions.
Reference: [4] <author> Alan Garvey, Keith Decker, and Victor Lesser. </author> <title> A negotiation-based interface between a real-time scheduler and a decision-maker. </title> <booktitle> In AAAI Workshop on Models of Conflict Management, </booktitle> <address> Seattle, </address> <year> 1994. </year> <note> Also UMASS CS TR-94-08. </note>
Reference-contexts: Run-time interaction <ref> [4] </ref> between the client and the scheduler, or, from another viewpoint, interaction between the criteria specification mechanism and the evaluation functions could control and refine satisficing activities and handle problems involving hard constraints.
Reference: [5] <author> Alan Garvey and Victor Lesser. </author> <title> Design-to-time real-time scheduling. </title> <journal> IEEE Transactions on Systems, Man and Cybernetics, </journal> <volume> 23(6) </volume> <pages> 1491-1502, </pages> <year> 1993. </year>
Reference-contexts: It is also used to determine what alternatives to turn into schedules and to decide which completed schedule best satisfices to meet the criteria. The main predecessor to Design-to-Criteria, Design-to-Time <ref> [5, 6, 7] </ref>, focuses on quality/time trade-offs in a heuristic fashion. While heuristics still play a role in Design-to-Criteria, the design specifications or evaluation criteria that describe the desired quality, cost, and duration trade-offs are used at every major decision point.
Reference: [6] <author> Alan Garvey and Victor Lesser. </author> <title> Design-to-time scheduling with uncertainty. </title> <type> CS Technical Report 95-03, </type> <institution> University of Massachusetts, </institution> <year> 1995. </year>
Reference-contexts: It is also used to determine what alternatives to turn into schedules and to decide which completed schedule best satisfices to meet the criteria. The main predecessor to Design-to-Criteria, Design-to-Time <ref> [5, 6, 7] </ref>, focuses on quality/time trade-offs in a heuristic fashion. While heuristics still play a role in Design-to-Criteria, the design specifications or evaluation criteria that describe the desired quality, cost, and duration trade-offs are used at every major decision point.
Reference: [7] <author> Alan Garvey and Victor Lesser. </author> <title> Representing and scheduling satisficing tasks. In Swaminathan Natarajan, editor, </title> <journal> Imprecise and Approximate Computation, </journal> <pages> pages 23-34. </pages> <publisher> Kluwer Academic Publishers, Norwell, </publisher> <address> MA, </address> <year> 1995. </year>
Reference-contexts: It is also used to determine what alternatives to turn into schedules and to decide which completed schedule best satisfices to meet the criteria. The main predecessor to Design-to-Criteria, Design-to-Time <ref> [5, 6, 7] </ref>, focuses on quality/time trade-offs in a heuristic fashion. While heuristics still play a role in Design-to-Criteria, the design specifications or evaluation criteria that describe the desired quality, cost, and duration trade-offs are used at every major decision point.
Reference: [8] <author> Thomas Wagner, Victor Lesser, and Alan Garvey. </author> <title> Design-to-criteria scheduling for intermittent processing. </title> <institution> In UMASS Department of Computer Science Technical Report TR-1996-81, </institution> <month> November, </month> <year> 1996. </year> <month> 17 </month>
Reference-contexts: The model explicitly represents different alternative approaches to achieving a task, how they interact, and the quality, cost, and duration trade-offs of different actions. Design-to-Criteria <ref> [8] </ref> scheduling is the process of custom tailoring a way to achieve the high-level task, via the actions described in the model, to fit a particular client's quality, cost, and duration criteria or needs.
References-found: 8

