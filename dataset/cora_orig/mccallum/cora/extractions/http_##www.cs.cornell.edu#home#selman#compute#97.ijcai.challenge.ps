URL: http://www.cs.cornell.edu/home/selman/compute/97.ijcai.challenge.ps
Refering-URL: http://www.cs.cornell.edu/home/selman/compute/index.html
Root-URL: http://www.cs.brown.edu/
Email: fselman, kautz, dmacg@research.att.com  
Title: Ten Challenges in Propositional Reasoning and Search  
Author: Bart Selman, Henry Kautz, and David McAllester 
Web: http://www.research.att.com/~selman/challenge  
Address: 600 Mountain Avenue Murray Hill, NJ 07974  
Affiliation: AT&T Laboratories  
Abstract: The past several years have seen much progress in the area of propositional reasoning and sat-isfiability testing. There is a growing consensus by researchers on the key technical challenges that need to be addressed in order to maintain this momentum. This paper outlines concrete technical challenges in the core areas of systematic search, stochastic search, problem encodings, and criteria for evaluating progress in this area.
Abstract-found: 1
Intro-found: 1
Reference: <author> Blum, A. and Furst, </author> <title> M.L. (1995). Fast planning through planning graph analysis. </title> <booktitle> Proc. IJCAI-95, </booktitle> <address> Canada. </address>
Reference: <author> Boufkhad, Y. </author> <title> (1996) Aspects probabilistes et algorithmiques du probleme de satisfiabilite. </title> <type> Ph.D. Thesis, </type> <institution> Univ. of Paris, </institution> <year> 1996. </year>
Reference: <author> Cook, S. and Mitchell, D., </author> <title> Finding Hard Instances of the Satisfiability Problem: A Survey. </title> <journal> DIMACS Series in Discr. Math. and Theoretical Comp. </journal> <note> Sci.. (to appear) Crawford, </note> <author> J.M. and Auton, L.D. </author> <title> (1993) Experimental results on the cross-over point in satisfiability problems. </title> <note> AAAI-93 (1993) 21-27. (Ext. version in Artif. </note> <author> Intel.) Crawford, J. and Baker, A.B. </author> <year> (1994). </year> <title> Experimental results on the application of satisfiability algorithms to scheduling problems. </title> <booktitle> Proc. AAAI-94, </booktitle> <address> Seattle, WA. </address>
Reference: <author> Crawford, J.M. , Ginsberg, M., Luks, E., and Roy, A. </author> <year> (1996). </year> <booktitle> Proc. </booktitle> <address> KR-96, Boston, MA, </address> <pages> 148-158. </pages>
Reference: <author> Chvatal, V. and Szemeredi, E. </author> <year> (1988). </year> <title> Many hard examples for resolution. </title> <journal> J. of the ACM, </journal> <month> 35(4) </month> <year> (1988) </year> <month> 759-208. </month>
Reference: <author> Davis, M. and Putnam, H. </author> <title> (1960) A computing procedure for quantification theory. </title> <journal> J. of the ACM, </journal> <note> 7 (1960). </note> <author> de la Tour, T. and Demri, S. </author> <year> (1995). </year> <title> On the complexity fo extending ground resolution with symmetry rules. </title> <booktitle> Proc. IJCAI-95, </booktitle> <address> Montreal, Canada, </address> <pages> 289-295. </pages>
Reference: <author> Dubois, O., Andre, P., Boufkhad, Y., and Carlier, J. </author> <title> SAT versus UNSAT. </title> <journal> DIMACS Series in Discr. Math. and Theoretical Comp. Sci., </journal> <volume> Vol. 26, </volume> <year> 1996, </year> <pages> 415-433. </pages>
Reference: <author> Fujita, M., Slaney, J., and Bennett, F. </author> <year> (1993). </year> <title> Automatic Generation of Results in Finite Algebra Proc. </title> <booktitle> IJCAI, </booktitle> <year> 1993. </year>
Reference-contexts: As discussed in the introduction, there has been significant recent progress along this front. Examples include classical constraint-based planning (Blum and Furst 1995; Kautz and Sel-man 1996), problems in finite algebra <ref> (Fujita et al. 1993) </ref>, verification of hardware and software, scheduling (Craw-ford and Baker 1994), circuit synthesis and diagnosis (Larrabee 1992), and many other domains. Experience has shown that different encodings of the same problem can have vastly different computational properties.
Reference: <author> Ginsberg, M. </author> <year> (1995). </year> <booktitle> First Intl. Workshop on AI&OR. </booktitle> <address> Tim berline, Oregon, OR (1995). </address>
Reference-contexts: Copyright 1997 International Joint Conference on Artificial Intelligence. Progress has been spurred by the interaction of researchers in AI, operations research, and theory, in making available benchmark problems (DIMACS, see Trick and Johnson 1996), holding joint workshops <ref> (Ginsberg 1995) </ref>, and sharing algorithms and code. There is a growing consensus, however, that certain key technical challenges must be addressed in order to continue to increase the range of problems that can be practically solved.
Reference: <author> Haken, A. </author> <year> (1985). </year> <title> The intractability of resolution. </title> <note> Theoret ical Computer Science 39 (1985) 297-308. </note>
Reference: <author> Hooker, J.N. </author> <year> (1988). </year> <title> Hooker, J.N., Resolution vs. cutting plane solution of inference problems: Some computational experience. </title> <type> Oper. </type> <institution> Res. Letter, </institution> <month> 7(1) </month> <year> (1988) </year> <month> 1-7. </month>
Reference-contexts: Our next challenge is the use of integer programming techniques in solving SAT problems. It is straightforward to translate SAT problems into 0-1 integer programming problems <ref> (Hooker 1988) </ref>, and thus it has been argued that integer programming techniques should be useful for propositional reasoning. In fact, however, this has not been shown to be the case.
Reference: <author> Johnson, D. </author> <year> (1996). </year> <title> Experimental Analysis of Algorithms: The Good, the Bad, and the Ugly. </title> <booktitle> Invited Lecture, AAAI-96, </booktitle> <address> Portland, OR. </address> <note> See also http://www.research.att.com/ dsj/papers/exper.ps. </note>
Reference-contexts: This paper appears in the Proceedings of the Fifteenth International Joint Conference on Artificial Intelligence (IJCAI-97), NAGOYA, Aichi, Japan, 1997. Copyright 1997 International Joint Conference on Artificial Intelligence. Progress has been spurred by the interaction of researchers in AI, operations research, and theory, in making available benchmark problems <ref> (DIMACS, see Trick and Johnson 1996) </ref>, holding joint workshops (Ginsberg 1995), and sharing algorithms and code. There is a growing consensus, however, that certain key technical challenges must be addressed in order to continue to increase the range of problems that can be practically solved. <p> These include the DI-MACS collection, which was used as a testbed for a large number of algorithms as reported in <ref> (Trick and Johnson 1996) </ref>; a collection of circuit diagnosis problems encoded as SAT (Larrabee 1992); the planning problems Kautz and Selman (1996) devised for their SATPLAN system; hardware and software verification problems from the model checking community; and others. <p> This may be adjusted for machine speed, but it is not sufficient to only report certain characteristics of the execution, such as "number of nodes expanded" <ref> (Johnson 1996) </ref>. There are many ways to shift the computational effort in search algorithms | for example, to visit fewer nodes by doing more work at each node | and an objective evaluation must consider the entire picture. <p> It is important to show the limits of the proposed method, that is, where it becomes highly exponential or otherwise fails. Often methods that look good on small instances break down on larger ones <ref> (Johnson 1996) </ref>. 3 Challenging SAT Problems We shall begin the list of challenges by citing two specific open SAT problems. <p> A generator for these hard random problem instances can be found at the DIMACS benchmark archive <ref> (Trick and Johnson 1996) </ref>. CHALLENGE 1: (1-2 yrs) Prove that a hard 700 variable random 3-SAT formula is unsatisfiable. The second challenge problem is satisfiable. It is an encoding of a 32-bit parity problem, that appears in the DIMACS benchmark set. <p> However, there is the concern that we may be reaching a point where this is no longer the case, and that of the simple random distributions now used for testing may be driving us in the wrong direction in our research <ref> (Johnson 1996) </ref>. Therefore we present a final challenge, which if answered would provide vital tools for ensuring progress in this field. CHALLENGE 10: (2-5 yrs) Develop a generator for problem instances that have computational properties that are more similar to real-world instances.
Reference: <author> Larrabee, T. </author> <title> (1992) Efficient generation of test patterns using Boolean satisfiability, </title> <journal> IEEE Trans. on CAD, </journal> <volume> vol 11, </volume> <year> 1992, </year> <pages> pp 4-15. </pages>
Reference-contexts: These include the DI-MACS collection, which was used as a testbed for a large number of algorithms as reported in (Trick and Johnson 1996); a collection of circuit diagnosis problems encoded as SAT <ref> (Larrabee 1992) </ref>; the planning problems Kautz and Selman (1996) devised for their SATPLAN system; hardware and software verification problems from the model checking community; and others. All these collections have the property that published papers exist specifying the best known algorithms and running times for solving each of their instances. <p> As discussed in the introduction, there has been significant recent progress along this front. Examples include classical constraint-based planning (Blum and Furst 1995; Kautz and Sel-man 1996), problems in finite algebra (Fujita et al. 1993), verification of hardware and software, scheduling (Craw-ford and Baker 1994), circuit synthesis and diagnosis <ref> (Larrabee 1992) </ref>, and many other domains. Experience has shown that different encodings of the same problem can have vastly different computational properties. For example, in planning, "causal" encodings appear to be harder to solve than "state-based" encodings.
Reference: <author> Kautz, H. and Selman, B. </author> <title> (1992) Planning as Satisfiability. </title> <booktitle> Proceedings ECAI-92, </booktitle> <address> Vienna, Austria, </address> <year> 1992, </year> <pages> 359-363. </pages>
Reference: <author> Kautz, H. and Selman, B. </author> <title> (1996) Pushing the envelope: planning, propositional logic, and stochastic search. </title> <booktitle> Proc. AAAI-96, </booktitle> <address> Portland, OR, </address> <year> 1996. </year>
Reference-contexts: In such a comparison it is usually not possible to outperform the specialized algorithms (although it is sometimes possible, see for example <ref> (Kautz and Sel-man 1996) </ref>), but one should provide evidence that solving the encoded problem with general purpose Boolean satisfiability procedures is at least competitive.
Reference: <author> Mazure, B. Sais, L. Gregoire E. </author> <year> (1996). </year> <title> Boosting complete techniques thanks to local search methods. </title> <journal> Proc. Math & AI, </journal> <year> 1996. </year>
Reference: <author> Mitchell, D., Selman, B., and Levesque, H.J. </author> <title> (1992) Hard and easy distributions of SAT problems. </title> <booktitle> Proc. AAAI-92, </booktitle> <address> San Jose, CA (1992) 459-465. </address>
Reference: <author> Papadimitriou, C.H. </author> <year> (1993). </year> <title> Computational Complexity. </title> <publisher> Addison Wesley, </publisher> <year> 1993. </year>
Reference: <author> Selman, B. , Kautz, H., and Cohen, B. </author> <year> (1994). </year> <title> Noise Strategies for Local Search. </title> <booktitle> Proc. AAAI-94, </booktitle> <address> Seattle, WA, </address> <year> 1994, </year> <pages> 337-343. </pages>
Reference: <author> Selman, B., Levesque, H.J., and Mitchell, D. </author> <title> (1992) A new method for solving hard satisfiability problems. </title> <booktitle> Proc. AAAI-92, </booktitle> <address> San Jose, CA, </address> <pages> 440-446. </pages>
Reference: <editor> Trick, M. and Johnson, D. (Eds.) </editor> <title> (1996) Cliques, Coloring and Satisfiability, </title> <booktitle> DIMACS Series in Discrete Mathematics and Theoretical Computer Science, </booktitle> <volume> vol. </volume> <pages> 26. </pages> <note> For benchmarks, see URL: http://dimacs.rutgers.edu/Challenges/index.html. </note>
Reference-contexts: This paper appears in the Proceedings of the Fifteenth International Joint Conference on Artificial Intelligence (IJCAI-97), NAGOYA, Aichi, Japan, 1997. Copyright 1997 International Joint Conference on Artificial Intelligence. Progress has been spurred by the interaction of researchers in AI, operations research, and theory, in making available benchmark problems <ref> (DIMACS, see Trick and Johnson 1996) </ref>, holding joint workshops (Ginsberg 1995), and sharing algorithms and code. There is a growing consensus, however, that certain key technical challenges must be addressed in order to continue to increase the range of problems that can be practically solved. <p> These include the DI-MACS collection, which was used as a testbed for a large number of algorithms as reported in <ref> (Trick and Johnson 1996) </ref>; a collection of circuit diagnosis problems encoded as SAT (Larrabee 1992); the planning problems Kautz and Selman (1996) devised for their SATPLAN system; hardware and software verification problems from the model checking community; and others. <p> A generator for these hard random problem instances can be found at the DIMACS benchmark archive <ref> (Trick and Johnson 1996) </ref>. CHALLENGE 1: (1-2 yrs) Prove that a hard 700 variable random 3-SAT formula is unsatisfiable. The second challenge problem is satisfiable. It is an encoding of a 32-bit parity problem, that appears in the DIMACS benchmark set.
Reference: <author> Williams, B.C. and Nayak, P. </author> <title> (1996) A model-based approach to reactive self-configuring systems. </title> <booktitle> Proceedings AAAI-96, </booktitle> <address> Portland, OR. </address> <pages> 971-978. </pages>
References-found: 22

