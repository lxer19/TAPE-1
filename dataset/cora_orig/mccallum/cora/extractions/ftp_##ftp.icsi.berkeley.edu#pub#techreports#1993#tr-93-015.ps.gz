URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1993/tr-93-015.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1993.html
Root-URL: http://www.icsi.berkeley.edu
Email: -amit,moran-@cs.Berkeley.EDU  
Title: Channel Groups A Unifying Abstraction for Specifying Inter-stream Relationships  
Author: Amit Gupta and Mark Moran 
Date: March 1993  
Address: TR- 93-015  
Affiliation: Tenet Group University of California at Berkeley, International Computer Science Institute  
Abstract: A single distributed application typically requires setting up a number of real-time connections, or channels. Current schemes usually assume that different channels are independent, when in reality, important relationships often exist between them. We introduce a new abstraction called channel groups that allows network clients to describe these relationships explicitly to the network service provider. For example, by describing sharing relationships between channels, the network client enables the network to share resource allocations among related channelslowering the cost and improving the scalability of communication. In addition, specification of other relationships, such as inter-stream synchronization, disjoint-path routing, relative dropping priorities, and simultaneous establishment provide a richer, more efficient service. Channel groups provide a unifying abstraction and an easily-extensible interface for specifying these and other relationships. This report presents a general description of the channel group abstraction and demonstrates its usefulness in describing several types of inter-stream relationships. 
Abstract-found: 1
Intro-found: 1
Reference: [Adam93] <author> J. Adam, </author> <title> Special Report: Interactive Multimedia, </title> <journal> IEEE Spectrum, </journal> <month> (Mar. </month> <year> 1993), </year> <pages> pp. 22-39. </pages>
Reference-contexts: 1. Introduction The increasing speed and connectivity of computer networks and the improvement of workstation capabilities are enabling a new class of distributed multimedia applications. (See e.g. <ref> [Adam93] </ref>, [GruFec91]). The large amounts of data that can be stored in a high-speed, wide-area network and the real-time networking requirements of interactive distributed multimedia applications favor a proactive approach to network management, instead of the more traditional reactive approach used in current data networks.
Reference: [Anderson90] <author> D. Anderson, </author> <title> Meta-scheduling for Distributed Continuous Media, </title> <type> Technical Report UCB/CSD 90/599, </type> <institution> University of California, Berkeley, </institution> <address> CA (Oct 1990) </address>
Reference-contexts: However, the clients may wish to specify some ordering in this degradation. 13 based on a time-stamping model while we plan to build related parameters channel groups on the basis of jitter-controlled channels. The strands of Rangan and Vin [RanVin91] and the ropes of the Berkeley DASH project <ref> [Anderson90] </ref> are also similar to bundles. Campbell et al. describe an orchestration service for coordinating multiple related transport virtual circuits in [CaCoGaHu92]. They say that the reason why they employ the term orchestration rather than synchronization is because cross-stream relationships may encompass more than just temporal coordination.
Reference: [BanMah91] <author> A. Banerjea, B. Mah, </author> <title> The Real-Time Channel Administration Protocol, </title> <booktitle> Proc. 2nd Int. Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <month> (Nov. </month> <year> 1991). </year>
Reference-contexts: The suite is a set of communication protocols designed to provide real-time communication (i.e. with performance guarantees) in a packet-switching internetwork. We discuss the changes planned in this suite for supporting the additional functionality that can be specified by using channel groups. The Real-time Channel Administration Protocol (RCAP) <ref> [BanMah91] </ref> handles connection-level channel management for the protocol suite in response to requests from application programs. During channel establishment, RCAP performs the admission control tests. Supporting channel groups requires RCAP to manage group membership information.
Reference: [CaCoGaHu92] <author> A. Campbell, G. Coulson, F. Garcia, D. Hutchison, </author> <title> A Continuous Media Transport and Orchestration Service, </title> <booktitle> Proceedings of SigComm 92, </booktitle> <address> Baltimore MD (Aug 1992) </address>
Reference-contexts: The strands of Rangan and Vin [RanVin91] and the ropes of the Berkeley DASH project [Anderson90] are also similar to bundles. Campbell et al. describe an orchestration service for coordinating multiple related transport virtual circuits in <ref> [CaCoGaHu92] </ref>. They say that the reason why they employ the term orchestration rather than synchronization is because cross-stream relationships may encompass more than just temporal coordination. However, they limit themselves to the cross-stream relationships at the transport layer.
Reference: [CaSaCo92] <author> C. Carmo, P. Sannes, J. Courtiat, </author> <title> Basic Synchronization Concepts in Multimedia Systems, </title> <booktitle> Proceedings of 3rd Int. Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> San Diego CA (Nov 1992) 15 </address>
Reference-contexts: The second reason for allowing clients to specify inter-channel relationships is to improve the service provided by the network. For example, it is generally agreed that clients should have some method of indicating streams that should be synchronized on playout at the receiver (e.g. <ref> [CaSaCo92] </ref>). In general, such relationships are specified via ad hoc additions to the client-service interface. For example, in the case of inter-stream synchronization, channels are often grouped together into larger units (e.g. bundles in [CaSaCo92]). <p> have some method of indicating streams that should be synchronized on playout at the receiver (e.g. <ref> [CaSaCo92] </ref>). In general, such relationships are specified via ad hoc additions to the client-service interface. For example, in the case of inter-stream synchronization, channels are often grouped together into larger units (e.g. bundles in [CaSaCo92]). While this method is convenient for specifying synchronization, other methods would have to be introduced to specify other inter-channel relationships 2 .
Reference: [ClShZh92] <author> D. Clark, S. Shenker, L. Zhang, </author> <title> Supporting Real-time Applications in an Integrated Services Packet Network: Architecture and Mechanism, </title> <booktitle> Proceedings of Sigcomm 92, </booktitle> <address> Baltimore MD (Aug 1992) </address>
Reference-contexts: It is widely accepted that in order to provide real-time performance guarantees, some kind of admission control is necessary in order to control network load (see, e.g., [FeBaZh92], <ref> [ClShZh92] </ref>, [GuAhNa91], [HyLaPa92]). Admission control schemes necessarily require characterization of future traffic. Current real-time systems usually treat traffic on different channels 1 as independent when determining their resource requirements, which may result in over-allocation of resources. <p> If it fails to do so, the conference will be rejected. This result is also valid for predictive service <ref> [ClShZh92] </ref> where the admission control [JaShZh92] is based on the client-specified traffic for the new channels. 5 This example illustrates what we refer to as the resource sharing relationship. <p> Another difference is that in RSVP, the number of sources sending to a destination is limited by active filtering within the network. In contrast, channel groups specify relationships that does not require actions to be taken by the network. In the predicted service <ref> [ClShZh92] </ref>, [JaShZh92], [Zhang93], classes are used for QoS specification. Also, considerable work has been done by Van Jacobson and Sally Floyd in partitioning the network resources between paying organizational entities and/or application classes [Floyd93].
Reference: [EsDePa92] <author> J. Escobar, D. Deutsch, C. Partridge, </author> <title> Flow Synchronization Protocol, </title> <booktitle> Proceedings of Globecom 92, </booktitle> <address> Orlando FL (Dec 1992) </address>
Reference-contexts: For instance, relationships dealing with routing would be supported at the network layer, while those dealing with related parameters may be supported at higher levels. The choice depends on the specific network architecture. Similar arguments have been made by Escobar et al. in <ref> [EsDePa92] </ref>. 4 relationships while imposing as few limitations and as little semantics on that specification as possible. The interface is extensible as new relationships can be supported without changing the existing primitives by adding new primitives or by using new parameter values for existing primitives. <p> The ow specification designers view the ow specification as simply specifying the traffic and some QoS requirements; the other features of channel setup are handled using other mechanisms which lie outside the scope of the ow specification <ref> [EsDePa92] </ref>, [Partridge93]. However, we feel that the ow specification 14 should be extended to address these important inter-ow properties.
Reference: [FeBaZh92] <author> D. Ferrari, A. Banerjea, H. Zhang, </author> <title> Network support for multimedia - A Discussion of the Tenet approach, </title> <type> Technical report TR-92-072, </type> <institution> International Computer Science Institute, </institution> <address> Berkeley CA (Nov 1992) </address>
Reference-contexts: It is widely accepted that in order to provide real-time performance guarantees, some kind of admission control is necessary in order to control network load (see, e.g., <ref> [FeBaZh92] </ref>, [ClShZh92], [GuAhNa91], [HyLaPa92]). Admission control schemes necessarily require characterization of future traffic. Current real-time systems usually treat traffic on different channels 1 as independent when determining their resource requirements, which may result in over-allocation of resources. <p> The protocol issues are discussed in this section in the context of the Tenet real-time networking protocols described in <ref> [FeBaZh92] </ref>. A key requirement in the design of our client-service interface is that it include provisions for dynamic changes in group membership. A client informs the network about the channels and the groups it requires.
Reference: [Floyd93] <author> S. Floyd, </author> <type> personal communication (Jan-Feb 1993). </type>
Reference-contexts: In the predicted service [ClShZh92], [JaShZh92], [Zhang93], classes are used for QoS specification. Also, considerable work has been done by Van Jacobson and Sally Floyd in partitioning the network resources between paying organizational entities and/or application classes <ref> [Floyd93] </ref>. At first glance, the class mechanism looks like a special form of group relationship and the network partitioning scheme looks like resource sharing channel groups. However, the similarities are very superficial and the work is very different.
Reference: [GruFec91] <author> J. Grudin, L. Feczko, </author> <title> Special Section on Computer-Supported Cooperative Work, </title> <journal> Communications of the ACM, </journal> <month> December </month> <year> 1991, </year> <pages> pp. 30-90. </pages>
Reference-contexts: 1. Introduction The increasing speed and connectivity of computer networks and the improvement of workstation capabilities are enabling a new class of distributed multimedia applications. (See e.g. [Adam93], <ref> [GruFec91] </ref>). The large amounts of data that can be stored in a high-speed, wide-area network and the real-time networking requirements of interactive distributed multimedia applications favor a proactive approach to network management, instead of the more traditional reactive approach used in current data networks.
Reference: [GuAhNa91] <author> R. Guerin, H. Ahmadi and M. Naghshineh, </author> <title> Equivalent Capacity and Its Application to Bandwidth Allocation in High-Speed Networks, </title> <journal> IEEE J. Select. Areas Commun., </journal> <month> September </month> <year> 1991. </year>
Reference-contexts: It is widely accepted that in order to provide real-time performance guarantees, some kind of admission control is necessary in order to control network load (see, e.g., [FeBaZh92], [ClShZh92], <ref> [GuAhNa91] </ref>, [HyLaPa92]). Admission control schemes necessarily require characterization of future traffic. Current real-time systems usually treat traffic on different channels 1 as independent when determining their resource requirements, which may result in over-allocation of resources.
Reference: [HPNRR92] <institution> Integrated Services Packet Network Architecture Development, Xerox PARC, High Performance Networking Research Report (Dec. </institution> <year> 1992) </year>
Reference-contexts: It is not clear whether they have any mechanisms for linking QoS degradations. A close parallel can be drawn between the resource sharing relationship and the Resource ReSerVation Protocol (RSVP) described in <ref> [HPNRR92] </ref>, and the resource sharing in [MorGus92]. RSVP supports M x N multicasts and allows each receiver to specify the number of sources to be simultaneously transmitting to it. However, the discussion in [HPNRR92] as well as [MorGus92] is restricted to the resource sharing aspect of the channel group abstraction, though <p> parallel can be drawn between the resource sharing relationship and the Resource ReSerVation Protocol (RSVP) described in <ref> [HPNRR92] </ref>, and the resource sharing in [MorGus92]. RSVP supports M x N multicasts and allows each receiver to specify the number of sources to be simultaneously transmitting to it. However, the discussion in [HPNRR92] as well as [MorGus92] is restricted to the resource sharing aspect of the channel group abstraction, though the resource sharing relationship is not clearly defined. Another difference is that in RSVP, the number of sources sending to a destination is limited by active filtering within the network.
Reference: [HyLaPa92] <author> J. Hyman, A. Lazar, G. Pacifici, </author> <title> Joint Scheduling and Admission Control for ATS-Based Switching Nodes, </title> <booktitle> Proceedings of Sigcomm 92, </booktitle> <address> Baltimore MD (Aug 1992) </address>
Reference-contexts: It is widely accepted that in order to provide real-time performance guarantees, some kind of admission control is necessary in order to control network load (see, e.g., [FeBaZh92], [ClShZh92], [GuAhNa91], <ref> [HyLaPa92] </ref>). Admission control schemes necessarily require characterization of future traffic. Current real-time systems usually treat traffic on different channels 1 as independent when determining their resource requirements, which may result in over-allocation of resources.
Reference: [JaShZh92] <author> S. Jamin, S. Shenker, L. Zhang, </author> <title> An Admission Control Algorithm for Predictive Real-Time Service, </title> <booktitle> Proceedings of 3rd Int. Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> San Diego CA (Nov 1992) </address>
Reference-contexts: Current real-time systems usually treat traffic on different channels 1 as independent when determining their resource requirements, which may result in over-allocation of resources. This limitation may be overcome, in part, by using measurements over aggregations of channels, as in the predictive service <ref> [JaShZh92] </ref>, to determine the resource requirements. <p> If it fails to do so, the conference will be rejected. This result is also valid for predictive service [ClShZh92] where the admission control <ref> [JaShZh92] </ref> is based on the client-specified traffic for the new channels. 5 This example illustrates what we refer to as the resource sharing relationship. <p> Another difference is that in RSVP, the number of sources sending to a destination is limited by active filtering within the network. In contrast, channel groups specify relationships that does not require actions to be taken by the network. In the predicted service [ClShZh92], <ref> [JaShZh92] </ref>, [Zhang93], classes are used for QoS specification. Also, considerable work has been done by Van Jacobson and Sally Floyd in partitioning the network resources between paying organizational entities and/or application classes [Floyd93].
Reference: [Knightly92] <author> E. Knightly, </author> <title> Galileo: An Object-Oriented Simulator for Real-time Networks, </title> <institution> M.S. Project, University of California, </institution> <address> Berkeley CA (Dec 92) </address>
Reference-contexts: This dependence has a significant impact on the dynamic changes in group membership. We are looking into the different aspects of the parameterized relationships. We are currently extending Galileo <ref> [Knightly92] </ref>, a simulator for real-time networks, to include support for channel groups. The experiments planned include comparing the usefulness of the different specifications of the resource sharing relationship. Experiments have also been planned to evaluate the usefulness of the related parameters relationship. 7.
Reference: [MorGus92] <author> M. Moran, R. Gusella, </author> <title> Network Support for Interactive Multimedia, </title> <booktitle> Proceedings of 3rd Int. Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> San Diego CA (Nov 1992) </address>
Reference-contexts: It is not clear whether they have any mechanisms for linking QoS degradations. A close parallel can be drawn between the resource sharing relationship and the Resource ReSerVation Protocol (RSVP) described in [HPNRR92], and the resource sharing in <ref> [MorGus92] </ref>. RSVP supports M x N multicasts and allows each receiver to specify the number of sources to be simultaneously transmitting to it. However, the discussion in [HPNRR92] as well as [MorGus92] is restricted to the resource sharing aspect of the channel group abstraction, though the resource sharing relationship is not <p> between the resource sharing relationship and the Resource ReSerVation Protocol (RSVP) described in [HPNRR92], and the resource sharing in <ref> [MorGus92] </ref>. RSVP supports M x N multicasts and allows each receiver to specify the number of sources to be simultaneously transmitting to it. However, the discussion in [HPNRR92] as well as [MorGus92] is restricted to the resource sharing aspect of the channel group abstraction, though the resource sharing relationship is not clearly defined. Another difference is that in RSVP, the number of sources sending to a destination is limited by active filtering within the network.
Reference: [Partridge93] <author> C. Partridge, </author> <title> personal communication (Jan 1993) </title>
Reference-contexts: The ow specification designers view the ow specification as simply specifying the traffic and some QoS requirements; the other features of channel setup are handled using other mechanisms which lie outside the scope of the ow specification [EsDePa92], <ref> [Partridge93] </ref>. However, we feel that the ow specification 14 should be extended to address these important inter-ow properties.
Reference: [Partridge92] <author> C. Partridge, </author> <title> A Proposed Flow Specification, Request For Comments, Network Working Group, </title> <note> RFC 1363 (Sep 1992) </note>
Reference-contexts: Another interesting idea concerns using the channel group information as directives for channel routing. RFC 1363 proposes a ow specification, whose goal is to be able to describe any ow requirement <ref> [Partridge92] </ref>. Unfortunately, this ow specification does not include any support for describing the relationships that may exist between different ows.
Reference: [RanVin91] <author> V. Rangan, H. Vin, </author> <title> Designing File Systems for Digital Video and Audio, </title> <booktitle> Proceedings of the 13th ACM Symposium on Operating Systems Principles, </booktitle> <address> Monterey CA (Oct 1991) </address>
Reference-contexts: However, the clients may wish to specify some ordering in this degradation. 13 based on a time-stamping model while we plan to build related parameters channel groups on the basis of jitter-controlled channels. The strands of Rangan and Vin <ref> [RanVin91] </ref> and the ropes of the Berkeley DASH project [Anderson90] are also similar to bundles. Campbell et al. describe an orchestration service for coordinating multiple related transport virtual circuits in [CaCoGaHu92].
Reference: [ZhVeFe92] <author> H. Zhang, D. Verma and D. Ferrari, </author> <title> Design and Implementation of the Real-Time Internet Protocol, </title> <booktitle> IEEE Workshop on the Architecture and Implementation of High Performance Communication Subsystems, </booktitle> <address> Tuscon AZ (Feb 1992) </address>
Reference-contexts: Supporting channel groups requires RCAP to manage group membership information. We are modifying RCAP to be a layered control protocol stack for the second generation protocol suite. The new RCAP will provide support for channel groups. The Real-time Internet Protocol (RTIP) <ref> [ZhVeFe92] </ref> provides a simplex, connection-oriented, guaranteed performance, unreliable, sequenced packet delivery service. It occupies a place analogous to IP in the Internet protocol suite. RTIP does not require any change for supporting channel groups per se.
Reference: [Zhang93] <author> L. Zhang, </author> <type> personal communication (Jan-Mar 1993) </type>
Reference-contexts: Another difference is that in RSVP, the number of sources sending to a destination is limited by active filtering within the network. In contrast, channel groups specify relationships that does not require actions to be taken by the network. In the predicted service [ClShZh92], [JaShZh92], <ref> [Zhang93] </ref>, classes are used for QoS specification. Also, considerable work has been done by Van Jacobson and Sally Floyd in partitioning the network resources between paying organizational entities and/or application classes [Floyd93].
References-found: 21

