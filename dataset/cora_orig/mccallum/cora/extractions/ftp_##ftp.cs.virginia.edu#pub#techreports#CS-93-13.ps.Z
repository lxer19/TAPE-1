URL: ftp://ftp.cs.virginia.edu/pub/techreports/CS-93-13.ps.Z
Refering-URL: ftp://ftp.cs.virginia.edu/pub/techreports/README.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Easy to Use Object-Oriented Parallel Programming with Mentat, Application of Parallel Object-Oriented Environment and Toolkit
Author: A. S. Grimshaw, [] A. S. Grimshaw, E. Loyot Jr., and J. Weissman, Mentat [] A. S. Grimshaw, W. Timothy Strayer, and [] Rafael C. Gonzales and Paul Wintz, [] M. J. Quinn, 
Keyword: Figure 11 Stenciler Speedup Curve Availability  Narayan, Dynamic, Object-Oriented Parallel Processing,  
Address: TR 91-32, 1991.  Reading, Mass., 1991.  Reading, Mass., 1987.  
Affiliation: University of Virginia, Computer Science  
Note: 6. Summary and Future Work  Mentat is available via anonymous FTP for Sun 3, Sun 4, SGI, iPSC/2, and iPSC/860. Paragon, CM-5 and RS6000 versions are expected in Summer 1993. The Stenciler code and related documentation will also be available by the time of the conference (July 1993). For further information, send email to mentat@Virginia.edu. Acknowledgments 7. References [1]  IEEE Computer, pp. 39-51,  Programming Language (MPL) Reference Manual,  to appear in IEEE Parallel and Distributed Technology: Systems and Applications,  [4] Proceedings of the First Annual Object-Oriented Numerics Conference, April 1993. [5] J.F. Macfarlane, et al,  [6] B. Stroustrup, The C++ Programming Language, 2nd ed. Addison-Wesley,  Digital Image Processing, 2nd ed. Addison-Wesley,  Computers, McGraw-Hill Book Company, New York, 1987.  
Pubnum: report,  
Email: Padmini  
Date: May, 1993.  May 1993.  September 1992.  
Abstract: processors and then declining marginal return from the addition of more processors. This phenomenon is caused by two factors. First, computation granularity decreases as the problem is broken into smaller and smaller pieces, causing synchronization and communication to become a larger percentage of execution time. Second, time spent executing code that is inherently sequential, such as file I/O, increases as a percentage of total run time. We would expect that this decline in performance would be less pronounced with larger problem sizes or a more computationally expensive stencil function. Overall, the convolution example performed better because its computation granularity is significantly greater than for the PDE solver. When we began developing our framework for stencil algorithms, we had several goals in mind: (1) the environment should be easy to use for the application developer, facilitating rapid development of new stencil applications, (2) the framework should provide as much built-in functionality as possible to exploit the similarities among stencil algorithms and to reduce the effort needed by the programmer, (3) the framework should encourage code re-use wherever possible, (4) the programs generated must exploit the parallelism inherent in stencil algorithms and perform adequately, and (5) the code developed should be portable. The Stenciler class hierarchy meets these goals. The object-oriented framework and especially the built-in functions provided in the base class support the goals of ease of use, built-in code for common tasks, and code re-use. The parallel environment of the Mentat system provides the basis for exploiting the data parallelism natural to stencil algorithms. Performance results show that the programs produced using the Stenciler framework are capable of high performance. Finally, the Mentat environment provides an environment for easily porting user code from one environment to another. The results are encouraging, but there are a number of areas where our approach can be improved and extended. The class interface and hierarchy still needs some clarification and revision. These improvements will become apparent as our experience with using this approach increases. We plan to port the Stenciler class and sample implementation code to a broader range of hardware platforms. We also would like to extend the domain of problems that can be supported using our general approach by creating higher dimensional stencil class hierarchies and applying the same technique to other classes of algorithms. Finally, we would like to extend the model of our base classes to include encapsulation of scheduling and problem decomposition decision information to facilitate better performance while keeping the details away from the user. We would like to thank Mike DeLong for his help with the mathematics behind the Jacobi iteration PDE solver. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. S. Grimshaw, </author> <title> Easy to Use Object-Oriented Parallel Programming with Mentat, </title> <booktitle> IEEE Computer, </booktitle> <pages> pp. 39-51, </pages> <month> May, </month> <year> 1993. </year>
Reference: [2] <author> A. S. Grimshaw, E. Loyot Jr., and J. Weissman, </author> <title> Mentat Programming Language (MPL) Reference Manual, </title> <institution> University of Virginia, Computer Science TR 91-32, </institution> <year> 1991. </year>
Reference: [3] <author> A. S. Grimshaw, W. Timothy Strayer, and Padmini Narayan, </author> <title> Dynamic, </title> <booktitle> Object-Oriented Parallel Processing, to appear in IEEE Parallel and Distributed Technology: Systems and Applications, </booktitle> <month> May </month> <year> 1993. </year>
Reference: [4] <institution> Proceedings of the First Annual Object-Oriented Numerics Conference, </institution> <month> April </month> <year> 1993. </year>
Reference: [5] <author> J.F. Macfarlane, et al, </author> <title> Application of Parallel Object-Oriented Environment and Toolkit (POET) to Combustion Problems, </title> <type> Sandia report, </type> <month> September </month> <year> 1992. </year>
Reference: [6] <author> B. Stroustrup, </author> <title> The C++ Programming Language, 2nd ed. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> 1991. </year>
Reference: [7] <author> Rafael C. Gonzales and Paul Wintz, </author> <title> Digital Image Processing, 2nd ed. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> 1987. </year>

References-found: 7

