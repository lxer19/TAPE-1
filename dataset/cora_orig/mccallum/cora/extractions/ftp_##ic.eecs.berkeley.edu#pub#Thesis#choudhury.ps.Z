URL: ftp://ic.eecs.berkeley.edu/pub/Thesis/choudhury.ps.Z
Refering-URL: http://www-cad.eecs.berkeley.edu/Respep/Research/Thesis/thesis.html
Root-URL: http://www.cs.berkeley.edu
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> R.J. Bowman and D.J. </author> <title> Lane "A knowledge-based System for Analog Integrated Circuit Design," </title> <booktitle> Proc. IEEE International Conference on Computer-Aided Design,pp. </booktitle> <pages> 210-212, </pages> <year> 1985 </year>
Reference-contexts: A survey of knowledge-based synthesis systems which have addressed this problem is now provided. Then, analytical approaches 29 for solving this problem are discussed. Synthesis by knowledge-based hierarchical decomposition of circuits was reported in <ref> [1] </ref>. This work presented the PROSAIC system which synthesizes CMOS operational amplifiers. This system stores analog circuits as a hierarchy of circuits. Synthesis is performed by first decomposing the design into independent sub-circuits until the level of complexity can be handled by the designer or the system.
Reference: [2] <author> W.J. Helms and K.C. Russellet al.,` </author> <title> "A Switched Capacitor Filter Compiler" Proc. </title> <booktitle> IEEE Custom Integrated Circuits Conference, </booktitle> <year> 1986, </year> <pages> pp. 125-128. </pages>
Reference-contexts: For DC convergence, before simulation, initial node voltages are obtained from a simulation of a slightly modified circuit topology which has much better dc convergence properties. A switched-capacitor filter compiler has been reported in <ref> [2] </ref>. It is capable of designing Butterworth, Chebyschev, Cauer, and Thompson filter classes of low pass, high pass, band pass, and band elimination types. The program automatically calculates the poles and zeros of a normalized version of the requested filter type from the high-level specifications.
Reference: [3] <author> F.M. El-Turkey and R.A. Nordin "BLADES: </author> <title> An Expert System for Analog Circuit Design," </title> <booktitle> Proc. IEEE International Symposium on Circuits and Systems,pp. </booktitle> <pages> 552-555, </pages> <year> 1986 </year>
Reference-contexts: Electrical constraints arising from interconnections between the sub-circuits are considered and necessary alterations made to the subcircuits. Overall circuit performance is evaluated and if it does not satisfy the specifications, the sequence of steps described is repeated. After PROSAIC, an expert system BLADES using subcircuit experts was reported in <ref> [3] </ref>. The system works based on circuit partitioning, and use of subcircuits as standard building blocks. The system has a general design manager which talks to a number of subcircuit experts, which are specialists in particular subcircuit designs.
Reference: [4] <author> R. Harjani, R.A. </author> <title> Rutenbar and L.R. Carley, "A Prototype Framework for Knowledge-Based Analog Circuit Synthesis," </title> <booktitle> Proc. 24th ACM/IEEE Design Automation Conference,pp. </booktitle> <pages> 42-49, </pages> <year> 1987 </year>
Reference-contexts: The NPN current source knowledge base in turn has 15 types of designs ranging from "Widlar" current source to a bandgap reference current source. Knowledge-based approach with a planning mechanism was then reported in <ref> [4] </ref>, which presents the OASIS system synthesizing CMOS operational amplifiers from performance specifications and process parameters. In this framework analog circuit topologies are represented by a hierarchy of functional blocks. Each functional block has a fixed number of alternate realizations.
Reference: [5] <author> H.Y. Koh, C.H. Sequin, and P.R. Gray, </author> <title> "Automatic Synthesis of Operational Amplifiers Based on Analytic Circuit Models" Proc. </title> <journal> IEEE ICCAD, </journal> <year> 1987, </year> <pages> pp. 548-551. </pages>
Reference-contexts: Analytical approach to synthesis is an alternate approach as mentioned earlier. Two systems based on analytical approach for opamps and switch-cap filters are now described. In <ref> [5] </ref>, OPASYN, a synthesizer for CMOS operational amplifiers is reported. This system has a topology database, an optimization module, an interface to the circuit simulator SPICE and a parameter update module.
Reference: [6] <author> M.G. Degrauwe, O. Nys, E. Dijkstra, J. Rijmenants, S. Bitz, B.L.A.G. Goffart, E.A. Vittoz, S. Cserveny, C. Meixenberger, G.V.D. Stappen and H. J. Oguey, "IDAC: </author> <title> An Interactive Design Tool for Analog CMOS Circuits" Proc. </title> <journal> IEEE Journal of Solid State Circuits Vol. SC-22, </journal> <volume> No. 6, </volume> <month> Dec. </month> <year> 1987, </year> <pages> pp. 1106-1116. </pages>
Reference-contexts: Like the approaches described above, the following work uses knowledge base for synthesis, but chooses one among a set of fixed circuit topologies, rather than relying on hierarchical decomposition to obtain the circuit. The IDAC system reported in <ref> [6] </ref> can synthesize a wide range of analog CMOS circuits such as transconductance amplifiers, operational amplifiers, low-noise BIMOS amplifiers, voltage and current references, quartz oscillators, comparators, and oversampled A/D converters including their digital decimation filters. The user specifies the technology, the desired building-block specifications and the design options.
Reference: [7] <author> E. Berkcan, M. d'Abreu and W. </author> <title> Laughton et al.,"Analog compilation based on successive decompositions", </title> <booktitle> Proc. ACM/IEEE Design Automation Conference 1988, </booktitle> <pages> pp. 369-376. </pages>
Reference-contexts: The three systems reported above rely on a hierarchical style of synthesizing circuits based on decomposition of the circuit specifications into those of components using knowledge embedded in the system. The following work also uses successive decomposition of specifications but uses macromodelling for more efficient modelling. In <ref> [7] </ref>, analog compilation based on successive decompositions of high level specifications and physical assembly requirements into those of lower level subblocks and devices is reported, the driving applications being High Voltage ASICs. The decomposition is driven by template knowledge.
Reference: [8] <author> G.D. Hachtel, M.R. Lightner and H.J. Kelly, </author> <title> "Application of the Optimization program AOP to the Design of Memory Circuits", </title> <journal> IEEE Transactions on Circuits and Systems, </journal> <month> June </month> <year> 1975, </year> <pages> pp. 496-503. </pages>
Reference-contexts: In gradient-based optimization, the gradients of the performance functions are evaluated either using finite-difference or using numerical sensitivity capability of the simulator. Several circuit optimiz-ers have been reported in the literature, some of which are described below. The AOP circuit optimizer <ref> [8] </ref> is based on the circuit simulator ASTAP [9] with adjoint sensitivity analysis capability. The multiple objective functions and constraints in optimization are combined into one cost function, with the constraints formulated as penalty terms.
Reference: [9] <institution> ASTAP Advanced Statistical Analysis Program. IBM Program Product Document SH20-1118-0 edition, </institution> <year> 1973. </year> <month> 166 </month>
Reference-contexts: In gradient-based optimization, the gradients of the performance functions are evaluated either using finite-difference or using numerical sensitivity capability of the simulator. Several circuit optimiz-ers have been reported in the literature, some of which are described below. The AOP circuit optimizer [8] is based on the circuit simulator ASTAP <ref> [9] </ref> with adjoint sensitivity analysis capability. The multiple objective functions and constraints in optimization are combined into one cost function, with the constraints formulated as penalty terms.
Reference: [10] <author> G.D. Hachtel and P. </author> <title> Zug "Circuit Design and Optimization System," </title> - <type> User's guide Technical Report, </type> <institution> IBM Yorktown Research Facility, </institution> <year> 1981 </year>
Reference-contexts: The multiple objective functions and constraints in optimization are combined into one cost function, with the constraints formulated as penalty terms. This program was used to minimize the memory cycle of a read-only memory cell. 33 APLSTAP <ref> [10] </ref> is an interactive optimizer using the simulator ASTAP. It uses interactive linear programming and presents to the user linear prediction of circuit performance at the solution of each LP step. DELIGHT.SPICE [11] and ECSTASY [12] are circuit optimizers based circuit simulators SPICE2 and SPICE3 respectively.
Reference: [11] <author> W.T. Nye, D. Riley, A.Sangiovanni-Vincentelli and A.L. Tits, "DELIGHT.SPICE: </author> <title> An optimization-Based System for the Design of Integrated Circuits and Systems," </title> <journal> IEEE Trans. on CAD, </journal> <volume> Vol. 7, No. 4, </volume> <month> Apr. </month> <year> 1988, </year> <pages> pp. 501-519. </pages>
Reference-contexts: Sensitivities can be computed much more efficiently and accurately, compared to perturbation method by using direct or adjoint techniques of sensitivity computation. Sensitivity analysis (except possibly the adjoint transient sensitivity analysis) is supported in standard circuit simulators such as SPICE3 [38], SPICE2 <ref> [11] </ref> and TISPICE [40]. 1 However, as mentioned earlier, only critical parasitics will be automatically detected and finally considered. 12 A brief description of the direct method of sensitivity computation in SPICE is now provided. For more detailed description refer to [38][11]. <p> This program was used to minimize the memory cycle of a read-only memory cell. 33 APLSTAP [10] is an interactive optimizer using the simulator ASTAP. It uses interactive linear programming and presents to the user linear prediction of circuit performance at the solution of each LP step. DELIGHT.SPICE <ref> [11] </ref> and ECSTASY [12] are circuit optimizers based circuit simulators SPICE2 and SPICE3 respectively. They use nonlinear gradient-based optimization methods for circuit optimization. ECSTASY also has a controlled random search algorithm.
Reference: [12] <author> J. Shyu and A. Sangiovanni-Vincentelli "ECSTASY: </author> <title> A New Environment for IC Design Optimization" Proc. </title> <booktitle> IEEE International Conference on Computer-Aided Design, </booktitle> <year> 1988, </year> <pages> pp. 484-487. </pages>
Reference-contexts: It uses interactive linear programming and presents to the user linear prediction of circuit performance at the solution of each LP step. DELIGHT.SPICE [11] and ECSTASY <ref> [12] </ref> are circuit optimizers based circuit simulators SPICE2 and SPICE3 respectively. They use nonlinear gradient-based optimization methods for circuit optimization. ECSTASY also has a controlled random search algorithm.
Reference: [13] <author> C.D. Kimble, A.E. Dunlop, G.F. Gross, V.L. Hein M.Y. Luong, K.J. Stern and E.J. Swanson, </author> <title> "Autorouted Analog VLSI," </title> <booktitle> Proc. IEEE Custom Integrated Circuits Conference, </booktitle> <year> 1985, </year> <pages> pp. 72-78. </pages>
Reference-contexts: Early work on layout synthesis was carried out at AT&T. A standard-cell placement strategy to eliminate coupling between zero-swing-sensitive nets and large-swing-insensitive nets has been described in <ref> [13] </ref>.
Reference: [14] <author> P.E. Allen, E.R. Macaluso, S.F. Bily and A. Nedungadi, "AID2: </author> <title> An Automated Analog IC Design System" Proc. </title> <booktitle> IEEE Custom Integrated Circuits Conference, </booktitle> <year> 1985, </year> <pages> pp. 498-501. </pages>
Reference-contexts: The tools which perform this task are called circuit optimizers. First, a survey of work on circuit-synthesis systems is provided. Then a brief survey of previous work on general-purpose circuit optimizers will be provided. 3.1.1 Synthesis systems AID2, which is an automated analog IC design system <ref> [14] </ref> was one of the first systems to be reported for analog design. It uses module compilers to produce fixed and programmable (parametrized) cells, which are then placed and routed in a standard cell layout system. Automatic synthesis of switched-capacitor filters [14] and of successive approximation A/D and D/A converters [15] <p> AID2, which is an automated analog IC design system <ref> [14] </ref> was one of the first systems to be reported for analog design. It uses module compilers to produce fixed and programmable (parametrized) cells, which are then placed and routed in a standard cell layout system. Automatic synthesis of switched-capacitor filters [14] and of successive approximation A/D and D/A converters [15] were reported. Examples of parametrized cells are capacitor arrays and resistor strings, which are programmable with respect to the number of bits decoded by each in an A/D converter.
Reference: [15] <author> P.E. Allen and P.R. </author> <title> Barton "A Silicon Compiler for Successive A/D and D/A Converters" Proc. </title> <booktitle> IEEE Custom Integrated Circuits Conference, </booktitle> <year> 1986, </year> <pages> pp. 552-555. </pages>
Reference-contexts: It uses module compilers to produce fixed and programmable (parametrized) cells, which are then placed and routed in a standard cell layout system. Automatic synthesis of switched-capacitor filters [14] and of successive approximation A/D and D/A converters <ref> [15] </ref> were reported. Examples of parametrized cells are capacitor arrays and resistor strings, which are programmable with respect to the number of bits decoded by each in an A/D converter. Interconnections between these cells are defined by a program which translates high-level specifications into predefined circuit description.
Reference: [16] <author> H. Yaghutiel, A. Sangiovanni-Vincentelli, and P.R. Gray, </author> <title> "A Methodology for Automated Layout of Switched-Capacitor Filters," </title> <booktitle> Proc. IEEE International Conference on Computer-Aided Design, </booktitle> <pages> pp. 444-447, </pages> <year> 1986 </year>
Reference-contexts: ADORE, a program for layout synthesis of SC filters is reported in <ref> [16] </ref>. The floor-plan consists of an array of capacitors located in between an array of operational amplifiers and an array of switches. The opamps are chosen from a standard cell library. The switches and capacitor arrays are automatically generated to suit the high-level specifications on the filter. <p> The nominal frequency response of an SC filter is designed to depend on these ratios only, to the first order. The placement and global routing for the layout of the filter was generated using the program ADORE <ref> [16] </ref>. The program follows a standard-cell type of placement. It places all the modules in three rows, switches in the top row, opamps in the bottom row, and capacitors in the middle row. There is a channel available for routing above each row. <p> In that case, the interconnect in one of the layers can be shifted to the third layer for a short length, and use a grounded plate in the intermediate layer to shield the crossover (for more detailed description of crossover shielding, refer to <ref> [16] </ref>). Shielding should be done only when it is not possible to meet performance constraints without it, since shielding requires additional ground wires to be brought to the shielding site, and hence increases the area occupied by the chip. Also, it increases the capacitive loading of neighboring lines. <p> If the above condition for avoiding the crossover is not satisfied, then each unavoidable crossover between the two specific nets has to be shielded. This is possible when three layers of interconnects are available <ref> [16] </ref>. For example, when the horizontal and vertical segments in the channel are routed in MET1 and MET2, then the interconnect in MET1 can be shifted for a short length to POLY in the vicinity of the crossover, and a grounded MET1 plate used to shield the crossover. <p> The placement was generated by the program ADORE <ref> [16] </ref>. A constraint of 0.01 dB on the 123 ripple of the frequency response was specified (this number was chosen following a procedure 124 described in Section 4.8, so that it is small compared to the nominal ripple). Constraints on the critical capacitances were generated by the constraint generator PARCAR.
Reference: [17] <author> J. Tronteli, L. Tronteli, T. Pletersek, G. Shenton, M. Robinson, K. Floyd, and C. </author> <title> Jungo et al.,"Expert System for automated mixed analog/digital layout compilation" Proc. </title> <booktitle> IEEE Custom Integrated Circuits Conference, </booktitle> <year> 1987, </year> <pages> pp. 165-167. </pages>
Reference-contexts: Minimization of a cost function with no reference to performance functions of the circuit does not guarantee satisfaction of performance constraints. The works reported below use expert systems to perform analog layout automation. In <ref> [17] </ref>, a methodology for automatic layout design based on partitioning of the analog circuit into functional blocks consisting of library cells is presented.
Reference: [18] <author> J. Rijmenants, J.B. Litsios, T.R. Schwarz and M.G.R. Degrauwe "ILAC: </author> <title> An Automated Layout Tool for Analog CMOS Circuits" IEEE Jor IEEE Journal of Solid State Circuits Vol. </title> <type> 24, no.2, </type> <institution> pp.436-442, </institution> <month> April </month> <year> 1989. </year>
Reference-contexts: Hence putting the sensitive nets in alternate channels does not completely solve the problem. After the AT&T work, several other approaches have been reported which provide more flexibility to the designer during layout design. To illustrate this, overview of two systems: ILAC and ANAGRAM, are now provided. ILAC <ref> [18] </ref>, is a layout tool which automatically generates the geometrical layout of analog CMOS leaf cells from netlist information and user-specified constraints on cell bounds and input/output locations.
Reference: [19] <author> H.Y. Koh, C.H. Sequin, and P.R. Gray, </author> <title> "Automatic Layout Generation for CMOS Operational Amplifiers" Proc. </title> <journal> IEEE ICCAD, </journal> <year> 1988, </year> <pages> pp. 548-551. </pages>
Reference-contexts: This program is able to synthesize layout comparable in quality to manual design. However, since standard cells are used for opamps, the program has cannot adapt to scaling of technology. The layout generator of the opamp synthesis program OPASYN <ref> [19] </ref> has parametrized leaf cell generators for single mosfets, transistor pairs and capacitors. For each of the circuit topologies in the data base, a circuit-dependent slicing tree is used for the floorplanning of blocks based on the knowledge obtained from designers.
Reference: [20] <author> D. Garrod, R.A. </author> <title> Rutenbar and L.R. Carley, "Automatic Layout of Custom Integrated Circuits in ANAGRAM," </title> <booktitle> Proc. IEEE ICCAD, </booktitle> <month> Nov. </month> <year> 1988, </year> <pages> pp. 544-547. </pages>
Reference-contexts: The placement and routing are performed at the symbolic level. A compactor is then used to obtain the physical layout. ANAGRAM, a tool for full-custom layout of analog cells using macro-cell design style is reported in <ref> [20] </ref>. KOAN/ANAGRAM II which is an improved version of ANAGRAM is reported in [37]. KOAN is a simulated-annealing-based placer. The placement algorithm allows nonslicing structure and has constrained move sets to handle symmetry and device matching.
Reference: [21] <author> M. Kayal, S. Piguet, M. Declercq, and B. Hochet et al.,"SALIM: </author> <title> A Layout Generation Tool for Analog ICs" Proc. </title> <booktitle> IEEE Custom Integrated Circuits Conference, </booktitle> <year> 1988, </year> <pages> pp. </pages> <address> 7.5.1-7.5.4. </address> <month> 167 </month>
Reference-contexts: Placement of macrocells is performed interactively, and the I/O peripherals are added automatically. Maximum values of interconnection parasitics (resistances and capacitances) can be assigned for the autorouter. A 16-bit angular shaft encoder chip has been designed using this system in less than 2 weeks. SALIM <ref> [21] </ref>, a layout generation tool for analog ICs, uses a combination of algorithmic and rule-based approach. The layout generation is a bottom-up process, in which initially a grouping is performed by identifying elementary functions called structures such as differential pairs, current mirrors.
Reference: [22] <author> D.J. Chen, J.C. Lee and B.J. Sheu, </author> <title> "SLAM: A Smart Analog Module Generator for Mixed Analog-Digital VLSI Design" Proc. </title> <booktitle> IEEE International Conference on Computer Design 1989, </booktitle> <pages> pp. 24-27 </pages>
Reference-contexts: Placement is obtained using a force-directed algorithm, followed by global routing and detailed channel routing. Rules are used to handle analog-specific constraints during placement and routing. A new environment is reported which can merge procedural languages and inference rules. SLAM, an analog module generator reported in <ref> [22] </ref> proceeds through three steps (a) circuit primitive recognition, (b) critical net analysis, (c) placement and routing. In the first step, in addition to basic circuit nodes, four critical analog circuit nodes are specially recognized : high-impedance nodes, diode-connected nodes, source-coupled nodes and current-mirror nodes.
Reference: [23] <author> J.L. Burns and A.R. </author> <title> Newton, "SPARCS: A new Constraint-Based IC Symbolic Layout Spacer," </title> <booktitle> Proc. IEEE Custom Integrated Circuits Conference, </booktitle> <month> May </month> <year> 1986, </year> <pages> pp. 534-539 </pages>
Reference-contexts: Moreover, symbolic layout makes the layout technology-independent. A spacer is also used to obtain a compact layout from another layout which is not densely packed (this is why spacing is also called compaction). Several spacers such as FLOSS [87], STICKS [89], CABBAGE [90],SPARCS <ref> [23] </ref> have been reported in the literature. Most of the existing compacters are based on the one-dimensional approach, i.e. they decompose the two-dimensional compaction problem into two one-dimensional problems. <p> Although in this approach, parasitics can be controlled by increasing or decreasing weights, there is no way to directly control performance degradation of the circuits directly. Compaction considering symmetry constraints has been reported in SPARCS <ref> [23] </ref>, CAMELEON [24] and in [25]. A special type of constraint called "active constraint" is used 42 in [23] based on a graph-theoretic perturbation method to force the relative spacing between one pair of components to be the same as the relative spacing between the other pair. <p> Compaction considering symmetry constraints has been reported in SPARCS <ref> [23] </ref>, CAMELEON [24] and in [25]. A special type of constraint called "active constraint" is used 42 in [23] based on a graph-theoretic perturbation method to force the relative spacing between one pair of components to be the same as the relative spacing between the other pair.
Reference: [24] <author> L. Rijnders, P. Six and H.J. </author> <title> DeMan "Design of a Process-Tolerant Cell Library for Regular Structures Using Symbolic Layout and Hierarchical Compaction," </title> <journal> IEEE J. of Solid-State Circuits, </journal> <volume> Vol. 23, No. 3, </volume> <year> 1988, </year> <pages> pp. 714-721. </pages>
Reference-contexts: Although in this approach, parasitics can be controlled by increasing or decreasing weights, there is no way to directly control performance degradation of the circuits directly. Compaction considering symmetry constraints has been reported in SPARCS [23], CAMELEON <ref> [24] </ref> and in [25]. A special type of constraint called "active constraint" is used 42 in [23] based on a graph-theoretic perturbation method to force the relative spacing between one pair of components to be the same as the relative spacing between the other pair. <p> A "class constraint" based on Integer Linear Programming is used in <ref> [24] </ref>, and a combination of graph-based and linear programming method is used in [25]. However, these approaches do not handle other constraints like parasitic constraints, which may impose constraints on lengths and relative separation of specific nets.
Reference: [25] <author> R. Okuda, T. Sato, H. Onodera and K. Tamaru, </author> <title> "An Efficient Algorithm for Layout Compaction Problem with Symmetry Constraints," </title> <booktitle> Proc. </booktitle> <address> ICCAD, </address> <month> Nov. </month> <year> 1989, </year> <pages> pp. 148-151. </pages>
Reference-contexts: Although in this approach, parasitics can be controlled by increasing or decreasing weights, there is no way to directly control performance degradation of the circuits directly. Compaction considering symmetry constraints has been reported in SPARCS [23], CAMELEON [24] and in <ref> [25] </ref>. A special type of constraint called "active constraint" is used 42 in [23] based on a graph-theoretic perturbation method to force the relative spacing between one pair of components to be the same as the relative spacing between the other pair. <p> A "class constraint" based on Integer Linear Programming is used in [24], and a combination of graph-based and linear programming method is used in <ref> [25] </ref>. However, these approaches do not handle other constraints like parasitic constraints, which may impose constraints on lengths and relative separation of specific nets.
Reference: [26] <author> M. Kawakita and T. </author> <title> Watanabe "Analog Layout Compaction with Clean-up Function" Proc. </title> <journal> Transactions of IEICE, </journal> <volume> Vol. </volume> <editor> E71 No.12, pp.1243-1252, </editor> <month> Dec </month> <year> 1988. </year>
Reference-contexts: A "class constraint" based on Integer Linear Programming is used in [24], and a combination of graph-based and linear programming method is used in [25]. However, these approaches do not handle other constraints like parasitic constraints, which may impose constraints on lengths and relative separation of specific nets. In <ref> [26] </ref>, compaction has been reported, which can handle various layout specifications important for analog circuits such as placing devices closely or at some distance, preventing certain pairs of wires from crossing each other, and maintaining specified net structures.
Reference: [27] <author> M. Mogaki, N. Kato, Y. Chikami, N. Yamada and Y. </author> <title> Kobayashi "An Automatic Layout System for Analog LSI's" Proc. </title> <journal> IEEE ICCAD, </journal> <month> Nov. </month> <year> 1989, </year> <pages> pp. 450-453. </pages>
Reference-contexts: Matching constraints derived from topology information are also handled during placement and routing. Fabricated chips designed using this system has been reported. LADIES, an automatic layout system for analog LSI's is reported in <ref> [27] </ref>. An initial layout is obtained based on a clustering algorithm for placement. During clustering, virtual nets with positive weights are created between elements to be placed together and with negative weights created between elements to be placed far apart. Gridless river routing is performed net-by-net after global routing.
Reference: [28] <author> R.S. Gyurcsik and J.-C. Jeen, </author> <title> "A Generalized Approach to Routing Mixed Analog and Digital Signal Nets in a Channel," </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> Vol 24, No. 2, </volume> <month> Apr. </month> <year> 1989, </year> <pages> pp. 436-442. </pages>
Reference-contexts: About 80 percent of all printed circuit board designs, 50 percent of all full-custom integrated circuit design and 10 percent of all application-specific integrated circuits (ASICs) presently contain mixed analog and digital functions <ref> [28] </ref>. <p> Moreover, parasitic constraints are not handled well in these approaches. 3.2.3 Layout Tools Several layout tools have been reported tools such as routers and compactors, which can be used as components in analog layout systems. An algorithm for two-layer gridless channel-routing of mixed analog/digital nets is reported in <ref> [28] </ref>. The channel-routing problem is represented by a vertical-constraint graph. The algorithm controls the net crossovers between mutually sensitive nets by appropriate arrangement of horizontal segments which is reflected as directed edges in the graph. <p> available for channel routing is a a high-resistivity/capacity layer (such as POLY), and there is a requirement that a specific net has to be routed in only the low-resistivity/capacity layer, then it is possible to satisfy that constraint if that net does not cross any other net as noted in <ref> [28] </ref>. This can be achieved by imposing the crossover constraint between that net and all other nets. using the methodology described in Section 5.3.2.
Reference: [29] <author> E. Malavasi, M. Chilanti and R. Guerrieri, </author> <title> "A General Router for Analog Layout" Proc. </title> <booktitle> of Compeuro, </booktitle> <year> 1989, </year> <pages> pp. 549-551. </pages>
Reference-contexts: Double-width lines are used to avoid voltage drops due to parasitic resistances. A postprocess puts shield lines in specific positions. This approach like the previous one cannot keep routing parasitics under specified bounds. Moreover, matching of parasitics is not handled. RoAD <ref> [29] </ref> is an area router for analog layouts which uses a modified version of Lee's algorithm. It can perform symmetrical routing for differential architectures. Control can be exercised over parasitic resistances, capacitances and coupling capacitances by a set of user specified weights. <p> Enrico Malavasi of University of Padova Italy, and hence only an overview of the work is provided here. For a more detailed description, refer to [93]. A constraint-driven framework involving the area router RoAD <ref> [29] </ref> and the constraint generator PARCAR described in Chaptersec:algo has been developed. Area routing is inherently cost-function driven as described in Section 2.4.2. In this work, a methodology 127 was developed in which the cost function of area routing is controlled by the performance constraints of the circuit.
Reference: [30] <author> S.K. Hong and P.E. Allen, </author> <title> "Performance-Driven Analog Layout Compiler" Proc. </title> <booktitle> IEEE International Symposium on Circuits and Systems, </booktitle> <month> May </month> <year> 1990, </year> <pages> pp. 835-838. </pages>
Reference-contexts: It is difficult to satisfy the performance constraints of an analog circuit by relying on a set of rules. Some recent layout systems have reported new contributions in the placement arena. Three such systems are reported. A sensitivity-based automatic layout compiler has been reported in <ref> [30] </ref>, at the same time as the first report of this doctoral work [31]. It models the layout interconnect parasitics as equivalent circuits of RC networks. The sensitivity of the performance with respect to layout interconnect parasitics is analyzed.
Reference: [31] <author> U. Choudhury and A. Sangiovanni-Vincentelli, </author> <title> "Use of Performance Sensitivities in Routing of Analog Circuits," </title> <booktitle> Proc. International Symposium on Circuits and Systems, </booktitle> <month> May </month> <year> 1990, </year> <month> pp.348-351. </month>
Reference-contexts: Some recent layout systems have reported new contributions in the placement arena. Three such systems are reported. A sensitivity-based automatic layout compiler has been reported in [30], at the same time as the first report of this doctoral work <ref> [31] </ref>. It models the layout interconnect parasitics as equivalent circuits of RC networks. The sensitivity of the performance with respect to layout interconnect parasitics is analyzed. Partitions for placement are then based on circuit structure, results of the sensitivity analysis and the boundary conditions.
Reference: [32] <author> M. Itoh and H. Mori, </author> <title> "A Layout Generating and Editing System for Analog LSIs," </title> <booktitle> Proc. IEEE International Symposium on Circuits and Systems, </booktitle> <year> 1990, </year> <pages> pp. 843-846. </pages>
Reference-contexts: ALE, a layout generating and editing system for analog LSIs has been reported in <ref> [32] </ref>. The layout generator generates the layout preserving the relative positions of device 40 cells and wires. Hence physical constraints in the circuit diagram are reflected in the layout. A two-layer maze-running algorithm is used for routing.
Reference: [33] <author> S. Piguet, F. Rahali, M. Kayal, E. Zysman and M. </author> <title> Declercq , "A New Routing Method for Full Custom Analog IC's" Proc. </title> <booktitle> Custom Integrated Circuits Conference 1990, </booktitle> <pages> pp. </pages> <month> 27.7.1-27.7.4 </month>
Reference-contexts: However, this work does not address the issue of how the bounds on parasitics can be obtained. Moreover, use is not made of shield nets to control coupling and symmetrical routing is not handled. A routing methodology is reported in <ref> [33] </ref> which consists of two parts: (a) symbolic routing and (b) detailed routing. During symbolic routing, relative positions of wires are determined, whereas during detailed routing, actual positions are determined from technology information. Nets are classified into various categories (high-sensitivity, low-sensitivity, 41 noisy, power supply, bias).
Reference: [34] <author> Y. Shiraishi, M. Kimura, K. Kobayashi, T. Hino and M. Seriuchi and M. </author> <title> Kusaoke "A High-Packing Density Module Generator for Bipolar Analog LSIs"Proc. </title> <journal> IEEE ICCAD, </journal> <year> 1990, </year> <pages> pp. 194-197. 168 </pages>
Reference-contexts: Hence physical constraints in the circuit diagram are reflected in the layout. A two-layer maze-running algorithm is used for routing. The layout editor has interactive tools such as cell merging tool and the cell form modification tool. In <ref> [34] </ref> a layout generator for bipolar analog LSI has been reported. A placement algorithm is reported which determines cell positions based on the relative positions of devices in the input circuit diagram.
Reference: [35] <author> I. Harada, H. Kitazawa and T. Kaneko, </author> <title> "A Routing System for Mixed A/D Standard Cell LSI's" Proc. </title> <journal> IEEE ICCAD, </journal> <year> 1990, </year> <pages> pp. 378-381. </pages>
Reference-contexts: To match certain parasitics additional stubs are used. However, this approach cannot keep the routing parasitics under any specified bounds, as constraints are handled at the symbolic level. Global and detailed channel routing to minimize crosstalk noise between signal lines is reported in <ref> [35] </ref>. Signals nets are classified into four groups: (a) high impedance analog (most sensitive), (b) low impedance analog (less sensitive), (c) analog/digital (e.g. digital control signals affecting the analog cells) (d) other digital nets (most insensitive). Nets are given priority based on the category they belong to.
Reference: [36] <author> G. Jusuf, P.R. Gray and A. </author> <booktitle> Sangiovanni-Vincentelli,"CADICS-Cyclic Analog-to-Digital Converter Synthesis" Proc. IEEE ICCAD, </booktitle> <year> 1990, </year> <pages> pp. 286-289. </pages>
Reference-contexts: However, since it uses a fixed topology for the placement of layout components, optimization in area is limited. Since the routing is carried out by essentially a digital router, the analog constraints are not handled completely. CADICS, a technology-independent synthesis tool for cyclic A/D converters was reported in <ref> [36] </ref>. This tool is capable of synthesizing A/D converters in a broad range of 35 sampling rate, resolution and silicon area without using any standard cells. Depending on the specifications, a particular netlist module generator is first chosen. Individual blocks are then optimized to meet the specifications.
Reference: [37] <editor> J.M. Cohn, D.J. Garrod, R.A. Rutenbar and L.R. Carley, "KOAN/ANAGRAMII: </editor> <title> New Tools for Device-Level Analog Placement and Routing", </title> <journal> IEEE Journal of Solid State Circuits, March 1991, </journal> <volume> vol. 26, </volume> <pages> pp. 330-342 </pages>
Reference-contexts: The placement and routing are performed at the symbolic level. A compactor is then used to obtain the physical layout. ANAGRAM, a tool for full-custom layout of analog cells using macro-cell design style is reported in [20]. KOAN/ANAGRAM II which is an improved version of ANAGRAM is reported in <ref> [37] </ref>. KOAN is a simulated-annealing-based placer. The placement algorithm allows nonslicing structure and has constrained move sets to handle symmetry and device matching. Suitable device merging and abutment are performed during placement to reduce layout area and parasitics.
Reference: [38] <author> U. Choudhury, </author> <title> "Sensitivity Computation in SPICE3," </title> <type> Masters Thesis, </type> <institution> U.C. Berkeley, </institution> <month> Dec </month> <year> 1988. </year>
Reference-contexts: Sensitivities can be computed much more efficiently and accurately, compared to perturbation method by using direct or adjoint techniques of sensitivity computation. Sensitivity analysis (except possibly the adjoint transient sensitivity analysis) is supported in standard circuit simulators such as SPICE3 <ref> [38] </ref>, SPICE2 [11] and TISPICE [40]. 1 However, as mentioned earlier, only critical parasitics will be automatically detected and finally considered. 12 A brief description of the direct method of sensitivity computation in SPICE is now provided. For more detailed description refer to [38][11].
Reference: [39] <author> T.H. Nguyen and H. </author> <title> Guo "Performance Sensitivity Computation for Interconnect Par-asitics" EECS 244 project report, </title> <institution> U.C. Berkeley, </institution> <month> Dec </month> <year> 1990. </year>
Reference-contexts: For transient sensitivity computation adjoint method involves substantial amount of additional computations and is extremely difficult to implement. Circuit simulators such as SPICE compute sensitivities of circuit variables (node voltages and branch currents). Hence, intermediate calculations have to be performed to compute the sensitivities of the performance functions <ref> [39] </ref>. This process is illustrated for three typical performance functions of analog circuits, the unity-gain bandwidth, the phase margin and the slew rate.
Reference: [40] <author> D.E. Hocevar and P. Yang, </author> <title> "Practical Issues for Implementing Transient Sensitivity Computation," </title> <booktitle> Proc. IEEE ICCAD, </booktitle> <year> 1984, </year> <pages> pp. </pages> <month> 1-3. </month> <title> [41] "The Switched Capacitor Network Simulator SWAP Reference Manual,", Silvar-Lisco, Release 2.0, </title> <month> Nov. </month> <year> 1983. </year>
Reference-contexts: Sensitivities can be computed much more efficiently and accurately, compared to perturbation method by using direct or adjoint techniques of sensitivity computation. Sensitivity analysis (except possibly the adjoint transient sensitivity analysis) is supported in standard circuit simulators such as SPICE3 [38], SPICE2 [11] and TISPICE <ref> [40] </ref>. 1 However, as mentioned earlier, only critical parasitics will be automatically detected and finally considered. 12 A brief description of the direct method of sensitivity computation in SPICE is now provided. For more detailed description refer to [38][11].
Reference: [42] <editor> S.W. Director and R.A. Rohrer, </editor> <title> "The Generalized Adjoint Network Sensitivities," </title> <journal> IEEE Trans. Circuit Theory, </journal> <volume> Vol CT-16, </volume> <month> Aug </month> <year> 1969, </year> <pages> pp. 318-323. </pages>
Reference-contexts: In SPICE3, the additional CPU time required for each parameter is about 8% for transient sensitivity, 4% for ac sensitivity and 1% for DC sensitivity. When the number of parameters is large, the direct method of sensitivity computation can be expensive. The adjoint technique <ref> [42] </ref> can be preferred in that case. In the adjoint method, sensitivities of one circuit variable is computed at a time, but with respect to all the parameters of interest. <p> For example, if capacitances are considered then capacitances to ground from all nodes, and coupling capacitances between all possible pairs of nodes will be considered. If the adjoint technique of sensitivity analysis <ref> [42] </ref> is used, the analysis time will be almost independent of the number of parasitics considered.
Reference: [43] <author> C.M. </author> <title> Sakkas "Potential Distribution and Multi-Terminal DC Resistance Computation for LSI Technology", </title> <journal> IBM Journal of Research and Development, </journal> <volume> Vol. 23, No. 6, </volume> <month> November </month> <year> 1979. </year>
Reference-contexts: As a result the resistance changes with frequency. Resistance of an interconnect is also affected by the presence of discontinuities like bends, vias etc. The numerical computation of the resistance of general structures using finite-element technique is reported in <ref> [43] </ref>. 2.3.2 Capacitances Capacitance computation is more complicated than resistance computation, because of the capacitive coupling between interconnects. As the widths of interconnection lines are scaled down, the thickness is either kept constant or scaled by a much smaller factor to limit resistance.
Reference: [44] <author> M.V. Schneider, </author> <title> "Microstrip lines for Microwave integrated circuits" Bell Syst. </title> <journal> Tech. J., </journal> <volume> vol. 48, no 5, </volume> <month> May </month> <year> 1969, </year> <note> p. 1421. </note>
Reference: [45] <author> H.A. Wheeler, </author> <title> "Transmission line Properties of a sheet on a plane" IEEE Trans. </title> <journal> Microwave Theory Tech.,vol. MTT-25, </journal> <volume> no, </volume> <month> 8 Aug. </month> <note> 1977 p. 631. </note>
Reference: [46] <author> W.H. </author> <title> Chang, </title> <journal> "Analytical IC Metal-Line Capacitance Formulas" IEEE Trans. on Microwave Theory and Techniques, </journal> <volume> Vol. MTT-24, </volume> <month> Sep. </month> <year> 1976, </year> <pages> pp. 608-611, </pages> <note> also Vol. MTT-25, </note> <month> pp.712 August </month> <year> 1977 </year>
Reference-contexts: These simulators can be easily interfaced to the model generator CAPMOD. 6.6 Results The accuracy of the numerical simulator in the model generator was verified by comparing the capacitance evaluated by the numerical simulation with Chang's analytical expression <ref> [46] </ref> available for a single line over a ground plane in a uniform dielectric. They agreed within 5%. More accuracy can be achieved by refining the mesh in the numerical simulator at the cost of higher CPU time.
Reference: [47] <author> M.I. Elmasry, </author> <title> "Capacitance Calculation in MOSFET VLSI" IEEE Electron Device Lett.,vol.EDL-3, </title> <year> 1981, </year> <month> pp.6-7. </month>
Reference: [48] <author> C.P. Yuan and T.N. </author> <title> Trick, "A simple formula for the estimation of the capacitance of two-dimensional interconnects in VLSI circuits," </title> <journal> IEEE Electron Device Lett.,vol.EDL-3, 1982, pp.391-393. </journal> <volume> 169 </volume>
Reference: [49] <author> T. Sakurai and K. Tamaru, </author> <title> "Simple formulas for two- and three-dimensional capacitances," </title> <journal> IEEE Trans. Electron Devices ,vol.ED-30, </journal> <year> 1983, </year> <month> pp.183-185. </month>
Reference-contexts: Sakurai and Tamaru Model <ref> [49] </ref>: c = *[1:15 fl (w=h) + 2:8 fl (t=h) ] (2.19) This model has an accuracy of about 6% for 0:3 &lt; w=h &lt; 30 and 0:3 &lt; t=h &lt; 30.
Reference: [50] <author> N. Meijs and J.T. Fokkema, </author> <title> "VLSI circuit reconstruction from mask topology," </title> <journal> Integration, </journal> <volume> vol. 2,no. 2, </volume> <year> 1984, </year> <month> pp.85-119. </month>
Reference-contexts: Sakurai and Tamaru Model [49]: c = *[1:15 fl (w=h) + 2:8 fl (t=h) ] (2.19) This model has an accuracy of about 6% for 0:3 &lt; w=h &lt; 30 and 0:3 &lt; t=h &lt; 30. Meijs and Fokkema model <ref> [50] </ref>: c = *[(w=h) + 0:77 + 1:06 (t=h) + 1:06 (t=h) ] (2.20) This model has an accuracy of about 2% for w=h &gt; 1 and 0:1 &lt; t=h &lt; 4, and of about 6% for w=h &gt; 0:3; t=h &lt; 10.
Reference: [51] <author> K.C. Gupta, R. Garg and R. </author> <title> Chadha, </title> <booktitle> "Computer Aided Design of Microwave Circuits," </booktitle> <address> Norwood, MA: Artech House. </address> <year> 1981 </year> <month> pp.76-79. </month>
Reference-contexts: Besides a line-to-ground capacitance for each interconnect, there also exists a coupling capacitance between any two lines. This coupling is strong when lines run parallel to each other or cross each other. Analytical expression for line-to-line coupling capacitance of adjacent parallel lines is reported <ref> [51] </ref>. Expressions for coupling capacitances tend to be very complicated. 18 Let us consider a general multiconductor configuration consisting of N intercon nects (an example of a multiconductor configuration is shown in Fig. 2.4 which has N parallel lines). <p> Analytical models have been suggested previously for line-to-ground capacitance of a single line over a ground plane [55]. Capacitance models for a coupled pair of microstrip lines over a single layer of dielectric have been reported in the microwave literature <ref> [51] </ref>. Empirical models for capacitances have also been developed recently at TI [52], HP [53] and possibly other organizations.
Reference: [52] <author> J. Chern, </author> <title> Texas Instruments, Dallas, </title> <type> Private Communication. </type>
Reference-contexts: Capacitance models for a coupled pair of microstrip lines over a single layer of dielectric have been reported in the microwave literature [51]. Empirical models for capacitances have also been developed recently at TI <ref> [52] </ref>, HP [53] and possibly other organizations. However, to obtain an analytical model, it is usually necessary to make certain assumptions about the process (such as the number of dielectric interfaces in the process and the range of interest for each parameter in the model).
Reference: [53] <author> B. Donecker, </author> <title> Hewlett-Packard, Santa Rosa, </title> <type> Private Communication. </type>
Reference-contexts: Capacitance models for a coupled pair of microstrip lines over a single layer of dielectric have been reported in the microwave literature [51]. Empirical models for capacitances have also been developed recently at TI [52], HP <ref> [53] </ref> and possibly other organizations. However, to obtain an analytical model, it is usually necessary to make certain assumptions about the process (such as the number of dielectric interfaces in the process and the range of interest for each parameter in the model).
Reference: [54] <author> T.J. Rivlin, </author> <title> "An Introduction to the Approximation of Functions", </title> <publisher> Blaisdell Publishing Company, </publisher> <year> 1969, </year> <pages> pp. 42. </pages> <address> Norwood, MA: Artech House. </address> <year> 1981 </year> <month> pp.76-79. </month>
Reference-contexts: Then the problem is to determine the coefficients of a polynomial with a fixed number of terms. How these degrees can be increased automatically from the lowest possible values in an iterative fashion (till the desired accuracy is achieved) will be described later. A curve-fitting technique described in <ref> [54] </ref> is followed for obtaining the coefficients. The procedure is briefly discussed here for completeness. Let the capacitance be denoted by C, and the transformed design parameters be denoted by p i ; i = 1; ; N p .
Reference: [55] <author> E. Barke, </author> <title> "Line-to-Ground Capacitance Calculation for VLSI: A Comparison," </title> <journal> IEEE Transactions on Computer-Aided Design 1976, </journal> <volume> Vol. 7, No. 2, </volume> <month> Feb. </month> <year> 1988, </year> <pages> pp. 295-298. </pages>
Reference-contexts: However, these methods usually involve very high computational cost, and are not meant for repeated use in large layouts. 17 Several analytical expressions have been suggested for the line-to-ground capacitance of a single-line configuration [44]-[50]. A comparison of the various models is provided in <ref> [55] </ref>. Two of the empirically obtained models are included here. <p> They are also quite convenient for the layout designers, when layout is synthesized manually. Analytical models have been suggested previously for line-to-ground capacitance of a single line over a ground plane <ref> [55] </ref>. Capacitance models for a coupled pair of microstrip lines over a single layer of dielectric have been reported in the microwave literature [51]. Empirical models for capacitances have also been developed recently at TI [52], HP [53] and possibly other organizations.
Reference: [56] <author> A. E. Ruehli and P.A. Brennan, </author> <title> "Efficient Capacitance Calculations for Three Dimensional Multiconductor Systems," </title> <journal> IEEE Trans. Microwave Theory Tech. </journal> <volume> MTT-21, </volume> <year> 1973, </year> <pages> pp. 76-82. </pages>
Reference: [57] <author> P.E. Cottrell and E.M. Buturla, </author> <title> "VLSI Wiring Capacitance," </title> <journal> Proc. IBM Journal of Research and Development, </journal> <year> 1985, </year> <pages> pp. 277-287. </pages>
Reference: [58] <author> R.H. Uebbing and M. </author> <title> Fukumma, </title> <journal> "Process-Based Three-Dimensional Capacitance Simulation-TRICEPS" IEEE Transactions on CAD, </journal> <volume> Vol. CAD-5, No. 1, </volume> <month> Jan. </month> <year> 1986, </year> <pages> pp. 215-998. </pages>
Reference-contexts: The conductors 153 have rectangular cross section, and the dielectric layers are stratified (interfaces are planes parallel to each other). This assumption is made due to the limitations of the experimental finite-difference field simulator currently being used. Sophisticated field-simulation packages have been reported <ref> [58] </ref>, which are capable of analyzing more complicated configurations.
Reference: [59] <author> A. Seidel et.al. </author> , <title> "CAPCAL-A 3-D Capacitance Solver for Support of CAD systems," </title> <journal> IEEE Trans. on CAD, </journal> <volume> Vol. 7, No. 5, </volume> <month> May. </month> <year> 1988, </year> <pages> pp. 556. </pages>
Reference: [60] <author> Z. Ning and P. M. Dewilde , "SPIDER: </author> <title> Capacitance Modelling for VLSI Interconnections," </title> <journal> IEEE Trans. on CAD, </journal> <volume> Vol. 7, No. 12, </volume> <month> Dec. </month> <year> 1988, </year> <pages> pp. 1221-1228. </pages>
Reference: [61] <author> P. M. Dewilde and Z. </author> <title> Ning , "Models for Large Integrated Circuits," </title> <publisher> Kluwer Academic Publishers 1990. </publisher>
Reference: [62] <author> R. Guerrieri and A. Sangiovanni-Vincentelli, </author> <title> "Three-Dimensional Capacitance Evaluation on a Connection Machine" IEEE Trans. </title> <journal> on CAD, </journal> <volume> Vol. 7, </volume> <year> 1988, </year> <pages> pp. 1125-1133. </pages>
Reference: [63] <author> K. Nabors and J. </author> <title> White , "A Fast Multipole Algorithm for Capacitance Extraction of Complex 3-D Geometries," </title> <booktitle> Proc. Custom Integrated Circuits Conference 1989 </booktitle>
Reference: [64] <author> C. Wei, R. F. Harrington, J.R. Mautz and T.K.Sarkar, </author> <title> "Multiconductor transmission lines in multilayered dielectric media," </title> <journal> IEEE Trans. Microwave Theory Tech. </journal> <volume> vol. MTT-32, </volume> <month> Apr. </month> <year> 1984, </year> <pages> pp. 439-450. 170 </pages>
Reference-contexts: Let the medium in which the conductors are present be nonmagnetic, a valid assumption for integrated circuits. Let C 0 be the capacitance matrix for the multiconductor configuration with all the dielectric replaced by air. There exists a relationship between the inductance matrix and the capacitance matrix C 0 <ref> [64] </ref>. [L] = 0 * 0 [C 0 ] 1 (2.31) where 0 and * 0 are respectively the permeability and permittivity of air.
Reference: [65] <author> A. E. Ruehli, </author> <title> "Inductance Calculation in a Complex Integrated Circuit Environment". </title> <journal> IBM Journal of Research and Development, </journal> <year> 1972, </year> <pages> pp. 470-481. </pages>
Reference-contexts: Inductance computation taking into account the current distribution inside the conductors is reported in [67]. Numerical techniques can be applied to compute accurately the inductances of three-dimensional structures <ref> [65] </ref> A detailed survey of numerical computation of interconnection parasitics is provided in [66]. 2.4 Automatic Physical Design Automatic placement and routing form the backbone of computer-aided physical design.
Reference: [66] <author> A. E. Ruehli, </author> <title> "Survey of Computer-Aided Electrical Analysis of Integrated Circuit Interconnections". </title> <journal> IBM Journal of Research and Development, </journal> <volume> Vol. 23, No. 6, </volume> <month> Nov. </month> <year> 1979, </year> <pages> pp. 626-639. </pages>
Reference-contexts: Inductance computation taking into account the current distribution inside the conductors is reported in [67]. Numerical techniques can be applied to compute accurately the inductances of three-dimensional structures [65] A detailed survey of numerical computation of interconnection parasitics is provided in <ref> [66] </ref>. 2.4 Automatic Physical Design Automatic placement and routing form the backbone of computer-aided physical design. Only a brief review of traditional automatic physical design which has been used 21 for digital VLSI will be provided in this chapter. <p> The accuracy of the numerical methods can be controlled by choosing the mesh sizes. Moreover, numerical simulations can be used to predict the capacitances of future technologies which do not exist yet. Numerical simulation can be performed using finite-difference, finite-element or integral equation techniques <ref> [66] </ref>. Finite-difference technique is used in the model generator CAPMOD since this scheme is relatively easy to implement and the discretization requires a mesh generation procedure that is easier to automate than in other schemes such as the finite-element method.
Reference: [67] <author> W.T. Weeks, L.L. Wu, M.F. McAllister and A.Singh, </author> <title> "Resistive and Inductive Skin Effect in Rectangular Conductors," </title> <journal> IBM Journal of Research and Development, </journal> <volume> Vol. 23, No. 6, </volume> <month> Nov. </month> <year> 1979, </year> <pages> pp. 626-639. </pages>
Reference-contexts: However, the assumption made while deriving the relation above is that the current in each conductor is on the surface which is a good approximation for high frequencies. Inductance computation taking into account the current distribution inside the conductors is reported in <ref> [67] </ref>. Numerical techniques can be applied to compute accurately the inductances of three-dimensional structures [65] A detailed survey of numerical computation of interconnection parasitics is provided in [66]. 2.4 Automatic Physical Design Automatic placement and routing form the backbone of computer-aided physical design.
Reference: [68] <author> A. Sangiovanni-Vincentelli, </author> <title> "Automatic Layout of Integrated Circuits," Design Systems for VLSI circuits, Logic Synthesis and Silicon Compilation, </title> <publisher> Martinus Nijhoff Publishers, </publisher> <year> 1987, </year> <pages> pp. 113-195. </pages>
Reference-contexts: For example, in Fig. 2.6, channels 1,2,3,4 and 5 can be routed in the this order, but region 6 would have fixed pins on all four sides and hence has to be routed using an area router. The nonslicing-structure-based layout can be formed using several methods <ref> [68] </ref>, such as the greedy clustering approach, force-directed methods, eigen-value methods and simulated annealing.
Reference: [69] <author> T. Ohtuski(editor), </author> <title> "Layout Design and Verification," </title> <publisher> North Holland, </publisher> <year> 1986 </year>
Reference: [70] <author> L. Stockmeyer, </author> <title> "Optimal Orientations of Cells in Slicing Floor-Plan Design", </title> <journal> Information and Control vol. </journal> <volume> 59, </volume> <pages> pp. 91-101, </pages> <year> 1983. </year>
Reference-contexts: For example, in Fig. 2.5 (b), the three channels (1, 2 and 3) corresponding to the three slices in Fig. 2.5 (a) are shown. Moreover, given the relative positions of the modules in the form of a slicing structure, there are algorithms to find optimal orientation <ref> [70] </ref> and shape [71] of each block. A nonslicing-structure-based layout (example shown in Fig. 2.6 is more general and may provide some area saving over the slicing-structure-based layout. However, it may not be possible to route completely the layout using a channel router.
Reference: [71] <author> R. Otten, </author> <title> "Layout Compilation," Design Systems for VLSI ckts, Logic Synthesis and Silicon Compilation, </title> <publisher> Martinus Nijhoff Publishers, </publisher> <year> 1987, </year> <pages> pp. 439-472. </pages>
Reference-contexts: For example, in Fig. 2.5 (b), the three channels (1, 2 and 3) corresponding to the three slices in Fig. 2.5 (a) are shown. Moreover, given the relative positions of the modules in the form of a slicing structure, there are algorithms to find optimal orientation [70] and shape <ref> [71] </ref> of each block. A nonslicing-structure-based layout (example shown in Fig. 2.6 is more general and may provide some area saving over the slicing-structure-based layout. However, it may not be possible to route completely the layout using a channel router.
Reference: [72] <author> M. A. Breuer, </author> <title> "Min-Cut Placement," </title> <journal> J. Des. Automat. Fault Tolerant Comput., </journal> <pages> pp. 343-362, </pages> <month> Oct. </month> <year> 1977. </year>
Reference-contexts: An example of a slicing structure is shown in Fig. 2.5 (a). In this layout there are three slices (1, 2 and 3). A slicing structure-based layout can be obtained by using the min-cut method proposed in <ref> [72] </ref> for printed circuit 2 There is no polynomial-time algorithm known to solve this problem 22 boards, gate arrays and standard cells and in [73] for macro cells. This method is based on recursive application of a bi-partitioning algorithm such as the Kerninghan-Lin Partitioning algorithm [74].
Reference: [73] <author> U. Lauther, </author> <title> "A Min-Cut Placement Algorithm for General Cell Assemblies Based on a Graph Representation", </title> <journal> Journal of Digital Systems Vol. </journal> <volume> IV, Issue 1, </volume> <pages> pp. 21-34, </pages> <year> 1980. </year>
Reference-contexts: In this layout there are three slices (1, 2 and 3). A slicing structure-based layout can be obtained by using the min-cut method proposed in [72] for printed circuit 2 There is no polynomial-time algorithm known to solve this problem 22 boards, gate arrays and standard cells and in <ref> [73] </ref> for macro cells. This method is based on recursive application of a bi-partitioning algorithm such as the Kerninghan-Lin Partitioning algorithm [74]. Simulated Annealing [75] can also be used to optimize the placement for a slicing structure.
Reference: [74] <author> B. Kernighan and S. Lin, </author> <title> "An Efficient Heuristic Procedure for Partitioning Graphs", </title> <journal> Bell Systems Technical Journal. </journal> <volume> vol. 49, no. 2, </volume> <pages> pp. 291-307, </pages> <month> Feb. </month> <year> 1970. </year>
Reference-contexts: This method is based on recursive application of a bi-partitioning algorithm such as the Kerninghan-Lin Partitioning algorithm <ref> [74] </ref>. Simulated Annealing [75] can also be used to optimize the placement for a slicing structure. One of the advantages of having a slicing structure is that the layout can be completely routed using channel routers, which have enjoyed popularity for VLSI.
Reference: [75] <author> S. Kirkpatrick, </author> <title> C.D. Gelatt and M.P. Vecchi, "Optimization by Simulated Annealing", </title> <journal> Science, </journal> <volume> Vol. 220, N.4598, </volume> <pages> pp. 671-680, </pages> <month> May </month> <year> 1983. </year>
Reference-contexts: This method is based on recursive application of a bi-partitioning algorithm such as the Kerninghan-Lin Partitioning algorithm [74]. Simulated Annealing <ref> [75] </ref> can also be used to optimize the placement for a slicing structure. One of the advantages of having a slicing structure is that the layout can be completely routed using channel routers, which have enjoyed popularity for VLSI.
Reference: [76] <author> C. Sechen and A. Sangiovanni-Vincentelli "Timber Wolf: </author> <title> A placement System for Integrated Circuits", </title> <journal> Journal of Solid-State Circuits, </journal> <month> May </month> <year> 1985 </year>
Reference-contexts: However, performing global routing along with placement is expensive. Another approach to obtain an estimate of the area is by expanding each edge of a component by an amount proportional to the number of pins on that edge <ref> [76] </ref>. The placement of blocks can be categorized into two broad classes (a) slicing structures (b) non-slicing structures. In a slicing-structure-based placement, the positions of blocks can be visualized to be obtained by successively slicing the layout. An example of a slicing structure is shown in Fig. 2.5 (a). <p> The nonslicing-structure-based layout can be formed using several methods [68], such as the greedy clustering approach, force-directed methods, eigen-value methods and simulated annealing. The Timber Wolf system <ref> [76] </ref> using simulated annealing produces placement of excellent quality, although it is CPU intensive. 23 2.4.2 Routing Given a set of components and their pin positions, routing is the problem of realizing the interconnections in minimum area.
Reference: [77] <author> A. Hashimoto and J. Stevens, </author> <title> "Wire Routing by Optimizing Channel Assignment within Large Apertures," </title> <booktitle> Proc. 8th Design Automation Workshop, </booktitle> <year> 1971, </year> <pages> pp. 155-169. </pages>
Reference-contexts: There are two broad categories of routing algorithms: (a) Channel Routing (b) Area Routing. In channel routing, first proposed in <ref> [77] </ref>, the routing problem is decomposed into smaller problems of routing rectangular regions called channels. The routing region can be completely broken into channels for a slicing structure based layout as mentioned before.
Reference: [78] <author> W.M. Dai, T. Asano, </author> <title> and E.S. Kuh, "Routing Region Definition and Ordering Scheme for Building Block Layout", </title> <journal> IEEE Trans. Computer-Aided Design vol. </journal> <volume> CAD-4, </volume> <pages> pp. 189-197, </pages> <month> July </month> <year> 1985. </year>
Reference-contexts: After global routing, the individual channels have to be routed in a particular order <ref> [78] </ref> to complete the detailed routing. As an example, in Figure 2.5, channels 2 and 24 3 have to be routed before channel 1. In grid-based channel routing, the routing region is subdivided into rows or tracks and columns as shown in Fig. 2.7.
Reference: [79] <author> T. Yoshimura and E.S. Kuh, </author> <title> "Efficient Algorithms for Channel Routing", </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <pages> pp. 25-36, </pages> <month> Jan </month> <year> 1982 </year> <month> 171 </month>
Reference: [80] <author> R. Rivest and C. Fiduccia, </author> <title> "A Greedy Channel Router", </title> <booktitle> Proc. 19th Design Automation Conference, </booktitle> <pages> pp. 418-424, </pages> <year> 1982. </year>
Reference: [81] <author> M. Burstein and R. Pelavin, </author> <title> "Hierarchical Wire Routing", </title> <journal> IEEE. Trans. on Computer-Aided Design pp. </journal> <pages> 223-234, </pages> <month> Oct. </month> <year> 1983. </year>
Reference: [82] <author> J. Reed, A. Sangiovanni-Vincentelli and M. </author> <title> Santomauro "A New Symbolic Channel Router: </title> <journal> YACR2," IEEE Trans. on CAD Vol. CAD-4, </journal> <volume> No.3, </volume> <month> July </month> <year> 1985, </year> <pages> pp. 208-219. </pages>
Reference-contexts: each net to the sink node (since all the horizontal segments have to be placed below the top edge and above the bottom edge at least at the minimum allowed 1 This can be achieved either by inserting horizontal jogs [94] or using a maze router as a post-processing step <ref> [82] </ref>. 95 separation). The channel-routing problem is then formulated as directing the undirected edges to minimize the longest directed path in the graph from the source to the sink node. This physically means determining the relative positions of the horizontal segments of the nets to minimize the channel height. <p> (n 2 ) = 0, but due to one or more vertical constraints, the conditions of Lemma 5.1 are not satisfied, then one may direct the necessary edge to avoid crossover, even if that forms a cycle and break the cycle afterwards using a maze router as is done in <ref> [82] </ref>. It is to be noted that, the necessary condition for avoiding the crossover between two nets is the same as that for routing the two nets in the same layer.
Reference: [83] <author> C. Y. </author> <title> Lee "An algorithm for path connections and its Application", </title> <journal> IRE Trans. Electron. Comp. </journal> <pages> pp. 346-365, </pages> <month> Sep. </month> <year> 1961. </year>
Reference-contexts: Area routing is a more general form of routing. In this form of routing, the routing region can be any irregular shape and can have obstacles and pins at arbitrary positions. Many area routers are based on some modified version of Lee-Moore maze algorithm <ref> [83] </ref>. The routing region is represented in the form of a grid. The router routes one net at a time along the grid. Given two pins to be connected, in the Lee-Moore algorithm a wave is propagated from the source pin till it hits the destination pin.
Reference: [84] <author> H. Shin and A. Sangiovanni-Vincentelli, "MIGHTY: </author> <title> A Rip-up and Re-route Detailed Router", </title> <booktitle> Proc. of International Conference on Computer-Aided Design, </booktitle> <month> Nov. </month> <year> 1986, </year> <pages> pp. 2-5. </pages>
Reference-contexts: The routed net is treated as an obstacle for routing the next net. A good net ordering is important for successful routing. Area routing may often involve ripping-up some or all nets at any stage and rerouting. The router MIGHTY <ref> [84] </ref> is based on an incremental routing technique. It modifies the connections already implemented to allow bad interconnections to find a better implementation. Some area routers use the line search algorithm [85]. <p> The sensitivity of the performance with respect to layout interconnect parasitics is analyzed. Partitions for placement are then based on circuit structure, results of the sensitivity analysis and the boundary conditions. Routing is then performed with the MIGHTY <ref> [84] </ref> program. However, in this approach , the constraints imposed are qualitative in nature and no quantification of performance degradation is done.
Reference: [85] <author> D.W. Hightower, </author> <title> "A solution to Line-Routing Problem on the Continuous Plane" Proc. </title> <booktitle> 6th Design Automation Workshop, </booktitle> <year> 1969, </year> <pages> pp. 1-24. </pages>
Reference-contexts: Area routing may often involve ripping-up some or all nets at any stage and rerouting. The router MIGHTY [84] is based on an incremental routing technique. It modifies the connections already implemented to allow bad interconnections to find a better implementation. Some area routers use the line search algorithm <ref> [85] </ref>. This is a gridless algorithm in which horizontal and vertical lines are expanded from both the pins (to be connected). If the lines originating from the two pins do not intersect because of obstacles, lines are expanded again from the points they hit the obstacles.
Reference: [86] <author> D. Braun, J. Burns, S. Devadas, H.K. Ma, K. Mayaram, F. Romeo and A. Sangiovanni-Vincentelli "Chameleon: </author> <title> A New Multi-Layer Channel Router", </title> <booktitle> Proc. of 23rd Design Automation Conference, </booktitle> <year> 1986, </year> <pages> pp. 495-502. </pages>
Reference-contexts: Area routing on the other hand may be useful while routing very irregular geometries when channels can not be easily defined. Many of the new technologies employ more than two layers of interconnects to realize denser integration. Two-layer channel algorithms can be generalized to handle multi layers of interconnects <ref> [86] </ref>. But, for sufficiently large number of layers there may not be any need for assigning channels for routing, as the area over the cells may be sufficient to accomodate the interconnections.
Reference: [87] <author> Y. E. Cho, A.J. Korenjak, and D.E. Stockton, "FLOSS: </author> <title> An approach to Automated Layout for High-Volume Designs", </title> <booktitle> Proc. of 14th Design Automation Conference, </booktitle> <month> June </month> <year> 1977, </year> <pages> pp. 138-141. </pages>
Reference-contexts: Moreover, symbolic layout makes the layout technology-independent. A spacer is also used to obtain a compact layout from another layout which is not densely packed (this is why spacing is also called compaction). Several spacers such as FLOSS <ref> [87] </ref>, STICKS [89], CABBAGE [90],SPARCS [23] have been reported in the literature. Most of the existing compacters are based on the one-dimensional approach, i.e. they decompose the two-dimensional compaction problem into two one-dimensional problems.
Reference: [88] <author> R. P. Larsen, </author> <title> "Computer-Aided Preliminary Layout Design of Customized MOS Arrays," </title> <journal> IEEE Transactions on Computers,Vol. C-20, </journal> <volume> No. 5, </volume> <month> May </month> <year> 1971, </year> <pages> pp. 512-523. </pages>
Reference-contexts: A spacer is used along with a symbolic layout system <ref> [88] </ref> to obtain a mask-level layout. This way, prior to spacing, the layout can be completely designed at the symbolic level substantially reducing the complexity of the data to be maintained. Moreover, symbolic layout makes the layout technology-independent.
Reference: [89] <author> J. D. Williams, </author> <title> "STICKS: A graphical compiler for high level LSI design", </title> <booktitle> AFIPS Conference Proceedings, </booktitle> <volume> vol. 47, </volume> <month> June </month> <year> 1978, </year> <pages> pp. 289-295. </pages>
Reference-contexts: Moreover, symbolic layout makes the layout technology-independent. A spacer is also used to obtain a compact layout from another layout which is not densely packed (this is why spacing is also called compaction). Several spacers such as FLOSS [87], STICKS <ref> [89] </ref>, CABBAGE [90],SPARCS [23] have been reported in the literature. Most of the existing compacters are based on the one-dimensional approach, i.e. they decompose the two-dimensional compaction problem into two one-dimensional problems.
Reference: [90] <author> M. Y. Hsueh and D.O. </author> <title> Pederson "Computer-Aided Layout of LSI circuit Building-Blocks", </title> <booktitle> Proc. of IEEE International Symposium on Circuits and Systems", </booktitle> <month> June </month> <year> 1979, </year> <month> pp.474-477. </month>
Reference: [91] <author> M. Schlag, Y.Z. Liao and C.K. </author> <title> Wong "An Algorithm for Optimal Two-Dimensional Compaction of VLSI layouts," Integration VLSI Journal 1, </title> <booktitle> 1983, </booktitle> <pages> pp. 197-209. </pages>
Reference-contexts: There have been attempts to compact both x and y dimensions of the layout at the same time. This may cause more area saving as more degrees of freedom are exploited. However, it can be CPU intensive. Two-dimensional compaction using Boolean variables and functions is reported in <ref> [91] </ref> and using zone-refining is reported in ZORRO [92]. 27 Chapter 3 Previous Work in Analog Design Automation The synthesis process for analog circuits can be subdivided into two main tasks: (a) circuit synthesis and (b) layout synthesis.
Reference: [92] <author> H. Shin, A. Sangiovanni-Vincentelli and C. Sequin, </author> <title> "Two-Dimensional Compaction by Zone Refining", </title> <booktitle> Proc. 23rd ACM/IEEE Design Automation Conference. </booktitle> <pages> pp. 115-122, </pages> <month> June </month> <year> 1986 </year> <month> 172 </month>
Reference-contexts: This may cause more area saving as more degrees of freedom are exploited. However, it can be CPU intensive. Two-dimensional compaction using Boolean variables and functions is reported in [91] and using zone-refining is reported in ZORRO <ref> [92] </ref>. 27 Chapter 3 Previous Work in Analog Design Automation The synthesis process for analog circuits can be subdivided into two main tasks: (a) circuit synthesis and (b) layout synthesis. Circuit synthesis systems generate an electrical circuit which satisfies a set of high-level performance specifications.
Reference: [93] <author> E.Malavasi, U. Choudhury and A. Sangiovanni-Vincentelli, </author> <title> "A Routing Methodology for Analog Integrated Circuits," </title> <booktitle> Proc. IEEE International Conference on Computer-Aided Design, </booktitle> <month> Nov. </month> <year> 1990, </year> <pages> pp. 202-205. </pages>
Reference-contexts: In the normal mode, PARCAR can be interfaced to any layout tool which can meet bounding and matching constraints on parasitics. A constraint-driven area router RoAD has been interfaced to PARCAR in this mode <ref> [93] </ref>. The placement information in this mode has to be provided in OCT format. A special mode has been developed in which the program has been interfaced to a constraint-driven channel router ART described in Chapter 5. <p> Details of this process are included in Appendix 4.11. When running in the normal mode with the constraint-driven area router RoAD <ref> [93] </ref>, a special interface program is used to perform this task. The maximum values for parasitics are used along with the worst-case sensitivities to select the critical parasitics (Section 4.6.2). The bounding constraints on these critical parasitics are then generated using the algorithm presented in Section 4.6.4. <p> Sensitivities with respect to matched parasitics have been computed taking the matching constraints into account. Bounding constraints were generated on 47 coupling capacitances. The opamp has been routed by the constraint-driven area router RoAD <ref> [93] </ref>. Five of the bounding constraints as well as the actual capacitances after routing are shown in Table 7. More detailed results regarding the constraint-driven area routing are provided in [93]. net1 net2 ugb sensitivity 12 13 5.5 kHz/fF 10 13 2.75 kHz/fF 12 0 1.4 kHz/fF Table 4: Sensitivities of <p> Bounding constraints were generated on 47 coupling capacitances. The opamp has been routed by the constraint-driven area router RoAD <ref> [93] </ref>. Five of the bounding constraints as well as the actual capacitances after routing are shown in Table 7. More detailed results regarding the constraint-driven area routing are provided in [93]. net1 net2 ugb sensitivity 12 13 5.5 kHz/fF 10 13 2.75 kHz/fF 12 0 1.4 kHz/fF Table 4: Sensitivities of unity-gain-bandwidth w.r.t five of the most sensitive capacitances. net1 net2 pm sensitivity 14 15 0.015 deg/fF 10 15 0.0075 deg/fF 14 0 0.0038 deg/fF Table 5: Sensitivities of phase margin <p> The vertical segments of the shield net are connections to shield plates used to shield the crossovers which could not be avoided by the channel router. These connections have been achieved using the constraint-driven maze router ROAD <ref> [93] </ref>. The channel height increases by about 50% due to the presence of the constraints. However, for analog circuits, the chip area is usually dominated by devices, and hence this increase is not significant. <p> Enrico Malavasi of University of Padova Italy, and hence only an overview of the work is provided here. For a more detailed description, refer to <ref> [93] </ref>. A constraint-driven framework involving the area router RoAD [29] and the constraint generator PARCAR described in Chaptersec:algo has been developed. Area routing is inherently cost-function driven as described in Section 2.4.2.
Reference: [94] <author> D. Deutsch, </author> <title> "A Dogleg Channel Router," </title> <booktitle> Proc. 13th Design Automation Conference, </booktitle> <year> 1976, </year> <pages> pp. 425-433. </pages>
Reference-contexts: net, and a directed edge from the node associated with each net to the sink node (since all the horizontal segments have to be placed below the top edge and above the bottom edge at least at the minimum allowed 1 This can be achieved either by inserting horizontal jogs <ref> [94] </ref> or using a maze router as a post-processing step [82]. 95 separation). The channel-routing problem is then formulated as directing the undirected edges to minimize the longest directed path in the graph from the source to the sink node.
Reference: [95] <author> H.H. Chen and E.S. Kuh, "Glitter: </author> <title> A Gridless Variable-Width Channel Router," </title> <journal> IEEE Transactions on CAD, </journal> <volume> Vol. CAD-5, No. 4, </volume> <month> Oct. </month> <year> 1986, </year> <pages> pp. 459-465. </pages>
Reference-contexts: If a floating pin is specified on an edge it implies that the net associated with that pin crosses that edge, but the actual position of the crossing will be determined during routing. In the gridless approach as described in <ref> [95] </ref>, the channel-routing problem is represented by a vertical-constraint graph, which contains a node for each horizontal segment of a net (subnet). Horizontal and vertical segments are usually assigned to different layers. <p> The longest directed path from the source node to the sink node in the VC graph hence determines the channel height. Since this problem is NP-complete, a heuristic algorithm is used to minimize the channel height as described in detail in <ref> [95] </ref>. A more general formulation can be developed for the problem when the top and bottom edges are irregular [95]. <p> Since this problem is NP-complete, a heuristic algorithm is used to minimize the channel height as described in detail in <ref> [95] </ref>. A more general formulation can be developed for the problem when the top and bottom edges are irregular [95]. If the x-axis is assumed to be parallel to the top/bottom edges of the channel, then the local density at any x-position in the channel is the sum of the effective widths (actual width + minimum allowed net-to-net spacing) of all the horizontal segments passing through that position. <p> This can be achieved by using a gridless channel routing algorithm as described in <ref> [95] </ref> which directs the undirected arcs to find a nearly optimal placement of the horizontal segments to minimize channel height. Since the algorithm is similar to that presented in [95], it is not described here. <p> This can be achieved by using a gridless channel routing algorithm as described in <ref> [95] </ref> which directs the undirected arcs to find a nearly optimal placement of the horizontal segments to minimize channel height. Since the algorithm is similar to that presented in [95], it is not described here. <p> After all the parasitic constraints are imposed on the VC graph, there can still be some undirected edges. As mentioned earlier, they are directed in a manner similar to that described in <ref> [95] </ref>, and this procedure is referred to as direct remaining edges (). The overall algorithm for meeting the bounds on coupling capacitances now follows.
Reference: [96] <author> E. Malavasi, </author> <title> "A User Interface for Performance Constraint Specification" EECS 219 Project Report, </title> <institution> U.C. Berkeley, </institution> <month> Dec </month> <year> 1991. </year>
Reference-contexts: This can be done by choosing one or more among a set of standard specifications such as gain, bandwidth, phase margin etc. If a performance function which is not supported by the program is to be defined, then a special interface can be used <ref> [96] </ref> in which the performance functions are described procedurally. The constraints on the performance functions of interest are then specified as maximum allowed changes from their nominal values in either positive or negative or both directions (due to interconnect parasitics).
Reference: [97] <author> A.R. Alvarez, B.L. Abdi, D.L. Young, H.D. Weed, J. Teplik, and E.R. Herald, </author> <title> "Application of statistical design and response surface methods to computer-aided VLSI device design," </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> vol. CAD-7, </volume> <pages> pp. 272-288, </pages> <month> Feb. </month> <year> 1988. </year>
Reference: [98] <author> K.K. </author> <title> Low and S.W. Director, "An efficient methodology for building macromodels of IC fabrication processes," </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> vol. CAD-8, </volume> <pages> pp. 1299-1313, </pages> <month> Dec. </month> <year> 1989. </year>
Reference: [99] <editor> T.K. Yu, S.M. Kang, I.N. Hajj, and T.N. Trick, </editor> <title> "Statistical performance modelling and parametric yield estimation of MOS VLSI," </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> vol. CAD-6, </volume> <pages> pp. 1013-1022, </pages> <month> Nov. </month> <year> 1987. </year>
Reference: [100] <author> T.K. Yu, S.M. Kang, J. Sacks, and W.J. Welch, </author> <title> "Parametric yield optimization of MOS integrated circuits by statistical by statistical modelling circuit performances," </title> <type> Technical Report No. 27, </type> <institution> Dept. of Statistics, University of Illinois, Champaign, </institution> <month> July </month> <year> 1989. </year>
Reference: [101] <author> J. Sacks, W.J. Welch, T.J. Mitchell, </author> <title> and H.P. Wynn, "Design and analysis of computer experiments," </title> <journal> Statistical Science Nov. </journal> <year> 1989. </year>
Reference: [102] <author> L. </author> <title> Milor,"Fault-driven Analog Testing" Ph.D. </title> <type> dissertation, Chapter 3, </type> <institution> Dept. of Electrical Engineering, U.C. Berkeley, </institution> <month> May. </month> <year> 1992. </year>
Reference: [103] <author> A. Casotto, F. Romeo and A. Sangiovanni-Vincentelli, </author> <title> "A Parallel Simulated Annealing Algorithm for the Placement of Macro-Cells," </title> <journal> IEEE Trans. on CAD Vol. CAD-6, </journal> <volume> No. 5, </volume> <month> Sep. </month> <year> 1987, </year> <pages> pp. 838-847. </pages>
Reference-contexts: For a detailed description refer to [104]. Simulated annealing has been chosen as the placement algorithm as it produces good-quality layout. Although it is time-consuming, for analog circuits, number of layout components is usually small. The simulated annealing algorithm in the placer PUPPY <ref> [103] </ref> originally targeted towards digital circuits, has been modified to deal with the parasitic constraints. An additional term in the cost function is used which reflects the violation in performance constraints.
Reference: [104] <author> E. Charbon, E. Malavasi, U. Choudhury, A. Casotto and A. Sangiovanni-Vincentelli, </author> <title> "A Constraint-Driven Placement Methodology for Analog Integrated Circuits," </title> <booktitle> accepted in IEEE Custom Integrated Circuits Conference, </booktitle> <year> 1992. </year> <month> 173 </month>
Reference-contexts: Edoardo Charbon of U.C. Berkeley and again an overview will be provided here. For a detailed description refer to <ref> [104] </ref>. Simulated annealing has been chosen as the placement algorithm as it produces good-quality layout. Although it is time-consuming, for analog circuits, number of layout components is usually small.
Reference: [105] <author> M. Marek-Sadowska and T.T. Tarng, </author> <title> "Single-Layer Routing for VLSI: Analysis and Algorithms," </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> vol. CAD-2, no. 4, </volume> <pages> pp. 246-259, </pages> <month> Oct. </month> <year> 1983. </year> <month> 174 </month>
Reference-contexts: There has been some work in developing algorithms for checking the positions of fixed pins in a layout to make sure that the routing can be achieved on a single layer. Such algorithms have been described in <ref> [105] </ref> which also includes other related references. However, it is not possible to directly apply such algorithms to the case one is interested here, since the channel has floating pins on the left and right edges.
References-found: 104

