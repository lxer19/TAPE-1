URL: http://www.cs.rpi.edu/~flaherje/ode3.ps
Refering-URL: http://www.cs.rpi.edu/~flaherje/index6.html
Root-URL: http://www.cs.rpi.edu
Phone: (3.1.2)  
Title: Chapter 3 One-Step Methods 3.1 Introduction The explicit and implicit Euler methods for solving the
Author: n (t n hy (t n h k (k) (t n f (t n (t n (..a) Differentiating (..) (t n [f t f (t n ;(t n [f t f f (t n ;(t n (..b) 
Address: n1 O(h k+1  
Affiliation: (t  
Note: (t  
Date: (0) 0 (3.1.1)  
Pubnum: 0 f(t;  
Abstract: have an O(h) global error which is too low to make them of much practical value. With such a low order of accuracy, they will be susceptible to round off error accumulation. Additionally, the region of absolute stability of the explicit Euler method is too small. Thus, we seek higher-order methods which should provide greater accuracy than either the explicit or implicit Euler methods for the same step size. Unfortunately, there is generally a trade off between accuracy and stability and we will typically obtain one at the expense of the other. Since we were successful in using Taylor's series to derive a method, let us proceed along the same lines, this time retaining terms of O(h k ). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Abromowitz and I. </author> <title> Stegun. Handbook of Mathematical Functions. </title> <publisher> Dover, </publisher> <address> New York, </address> <year> 1995. </year>
Reference-contexts: The solution u (t n1 + h) may be used as the initial condition y n for the next time step. Usually, the collocation points t n1 + c i h are such that c i 2 <ref> [0; 1] </ref>, i = 1; 2; : : : ; s, but this need not be the case [6, 10, 20]. <p> The maximum-order coefficients identified above are the roots of the s th-degree Legendre polynomial scaled to the interval (0; 1). The first six Legendre polynomials are listed in Table 3.3.2. Additional polynomials and their roots appear in Abromowitz and Stegun <ref> [1] </ref>, Chapter 22. Example 3.3.6. According to Table 3.3.2, the roots of P 2 (x) are x 1;2 = 1= p [1; 1]. <p> The first six Legendre polynomials are listed in Table 3.3.2. Additional polynomials and their roots appear in Abromowitz and Stegun [1], Chapter 22. Example 3.3.6. According to Table 3.3.2, the roots of P 2 (x) are x 1;2 = 1= p <ref> [1; 1] </ref>. <p> The first six Legendre polynomials are listed in Table 3.3.2. Additional polynomials and their roots appear in Abromowitz and Stegun [1], Chapter 22. Example 3.3.6. According to Table 3.3.2, the roots of P 2 (x) are x 1;2 = 1= p [1; 1]. Mapping these to <ref> [0; 1] </ref> by the linear transformation o = (1 + x)=2, we obtain the collocation points for the maximal-order two-stage method as c 1 = 2 1 3 1 (1 + p ): Since this is our first experience with these techniques, let us verify our results by a direct evaluation <p> Such excellent stability and accuracy properties makes these methods very popular for solving stiff systems. The Radau polynomial of degree s on 1 x 1 is R s (x) = P s (x) 2s 1 The roots of R s transformed to <ref> [0; 1] </ref> (using o = (1 + x)=2) are the c i , i + 1; 2; : : : ; s. All values of c i , i = 1; 2; : : : ; s, are on (0; 1] with, as designed, c s = 1. <p> Problems 1. Verify that (3.3.17d) is correct when f (t; y) = ay with a a constant. 2. Consider the method y n = y n1 + h [(1 )f (t n1 ; y n1 ) + f (t n ; y n )] with 2 <ref> [0; 1] </ref>. The method corresponds to the Euler method with = 0, the trapezoidal rule with = 1=2, and the backward Euler method and when = 1. 2.1. Write the Runge-Kutta tableau for this method. 2.2. For what values of is the method A-stable? Justify your answer. 3.
Reference: [2] <author> R. Alexander. </author> <title> Diagonally implicit runge-kutta methods for stiff o.d.e.'s. </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 14 </volume> <pages> 1006-1021, </pages> <year> 1977. </year>
Reference-contexts: The implicit midpoint rule (3.3.2) is a one-stage, second-order DIRK method. We'll examine a two-stage DIRK method momentarily, but first we note that the maximum order of an s-stage DIRK method is s + 1 <ref> [2] </ref>. Example 3.3.5. A two-stage DIRK formula has the tableau c 1 a 11 0 b 1 b 2 and it could be of third order.
Reference: [3] <author> U.M. </author> <title> Ascher and L.R. Petzold. Computer Methods for Ordinary Differential Equations and Differential-Algebraic Equations. </title> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1998. </year>
Reference-contexts: Fortunately, the derivation is adequately demonstrated by the second-order methods presented in Section 3.1 and, for the most part, we will not need to present detailed derivations of higher-order methods. There are three one-parameter families of three-stage, third-order explicit Runge-Kutta methods <ref> [3, 16] </ref>. However, the most popular explicit methods are of order four.
Reference: [4] <author> R.L. Burden and J.D. Faires. </author> <title> Numerical Analysis. </title> <address> PWS-Kent, Boston, fifth edition, </address> <year> 1993. </year>
Reference-contexts: We should select the collocation points c i , i = 1; 2; : : : ; s, to maximize the order p of the quadrature rule (3.3.18). We'll review some of the details describing the derivation of (3.3.18). Additional material appears in most elementary numerical analysis texts <ref> [4] </ref>.
Reference: [5] <author> K. Burrage. </author> <title> A special family of runge-kutta methods for solving stiff differential equations. </title> <journal> BIT, </journal> <volume> 18:22 - 41, </volume> <year> 1978. </year>
Reference-contexts: ) = ff 0 + ff 1 o + : : : + ff r1 o r1 + O (o r ): d P d (x) 1 x 3 5 7 + 3 5 x 5 10x 3 21 Table 3.3.2: Legendre polynomials P d (x) of degree d 2 <ref> [0; 5] </ref> on 1 x 1. <p> They still have excellent A- and L-stability properties and, perhaps, offer a computational advantage. A SIRK method is one where the coefficient matrix A has a single s-fold real eigenvalue. These collocation methods were Originally developed by Butcher [9] and have been subsequently extended <ref> [5, 10, 6, 20] </ref>. Collocating, as described, leads to the system (3.3.12-3.3.15). The intermediate solutions Y i , i = 1; 2; : : : ; s, have the vector form specified by (3.2.9d) with the elements of A given by (3.3.15a). <p> The linearized system (3.3.9) is easily solved in the transformed variables. (A similar transformation also works with Radau methods [17].) Butcher [9] and Burrage <ref> [5] </ref> show that it is possible to find A-stable SIRK methods for s 8. These methods are also L-stable with the exception of the seven-stage method. Problems 1. Verify that (3.3.17d) is correct when f (t; y) = ay with a a constant. 2.
Reference: [6] <author> K. Burrage, J.C. Butcher, and R.H. Chipman. </author> <title> An implementation of singly-implicit runge-kutta methods. </title> <journal> BIT, </journal> <volume> 20:326 - 340, </volume> <year> 1980. </year>
Reference-contexts: Usually, the collocation points t n1 + c i h are such that c i 2 [0; 1], i = 1; 2; : : : ; s, but this need not be the case <ref> [6, 10, 20] </ref>. <p> They still have excellent A- and L-stability properties and, perhaps, offer a computational advantage. A SIRK method is one where the coefficient matrix A has a single s-fold real eigenvalue. These collocation methods were Originally developed by Butcher [9] and have been subsequently extended <ref> [5, 10, 6, 20] </ref>. Collocating, as described, leads to the system (3.3.12-3.3.15). The intermediate solutions Y i , i = 1; 2; : : : ; s, have the vector form specified by (3.2.9d) with the elements of A given by (3.3.15a). <p> We will postpone a comparison of methods for these problems until examining multistep methods in Chapter 5. At this time, we'll note that software based on fifth-, seventh- and ninth-order Radau methods [17] has done extremely well when solving stiff IVPs. The STRIDE software <ref> [6] </ref> based on SIRK methods has been successful, but less so than the Radau methods. Problems 1.
Reference: [7] <author> J.C. Butcher. </author> <title> Implicit runge-kutta processes. </title> <journal> Maths. Comp., </journal> <volume> 18 </volume> <pages> 50-64, </pages> <year> 1964. </year>
Reference-contexts: Necessary order conditions for s-stage implicit Runge-Kutta methods are given by (3.2.5c, 3.2.7) (with sufficient conditions given in Hairer et al. [16], Section II.2). A condition on the maximum possible order follows. Theorem 3.3.1. The maximum order of an implicit s-stage Runge-Kutta method is 2s. 18 Proof. cf. Butcher <ref> [7] </ref>. The derivations of implicit Runge-Kutta methods follow those for explicit methods. We'll derive the simplest method and then give a few more examples. Example 3.3.1. <p> Theorem 3.3.2. There is one and only one 2s-order s-stage implicit Runge-Kutta for mula and it corresponds to the (s; s) Pade approximation. Proof. cf. Butcher <ref> [7] </ref>. We'll be able to construct several implicit Runge-Kutta methods having unbounded absolute-stability regions. We'll want to characterize these methods according to their behavior as jzj ! 1 and this requires some additional notions of stability. Definition 3.3.2.
Reference: [8] <author> J.C. Butcher. </author> <title> On the attainable order of runge-kutta methods. </title> <journal> Maths. Comp., </journal> <volume> 19:408 - 417, </volume> <year> 1965. </year>
Reference-contexts: Our limited experience with Runge-Kutta methods would suggest that the number of function evaluations increases linearly with the order of the method. Unfortunately, Butcher <ref> [8] </ref> showed that this is not the case. Some key results are summarized in Table 3.2.1. The popularity of the four-stage, fourth-order Runge-Kutta methods are now clear. From Table 3.2.1, we see that a fifth order Runge-Kutta method requires an additional two function evaluations per step. Additionally, Butcher [8] showed that <p> Unfortunately, Butcher <ref> [8] </ref> showed that this is not the case. Some key results are summarized in Table 3.2.1. The popularity of the four-stage, fourth-order Runge-Kutta methods are now clear. From Table 3.2.1, we see that a fifth order Runge-Kutta method requires an additional two function evaluations per step. Additionally, Butcher [8] showed that an explicit s-stage Runge-Kutta method will have an order of at least s 2. Although Runge-Kutta formulas are tedious to derive, we can make a few general observations. An order one formula must be exact when the solution of the ODE is a linear polynomial.
Reference: [9] <author> J.C. Butcher. </author> <title> On the implementation of implicit runge-kutta methods. </title> <journal> BIT, </journal> <volume> 16:237 - 240, </volume> <year> 1976. </year>
Reference-contexts: They still have excellent A- and L-stability properties and, perhaps, offer a computational advantage. A SIRK method is one where the coefficient matrix A has a single s-fold real eigenvalue. These collocation methods were Originally developed by Butcher <ref> [9] </ref> and have been subsequently extended [5, 10, 6, 20]. Collocating, as described, leads to the system (3.3.12-3.3.15). The intermediate solutions Y i , i = 1; 2; : : : ; s, have the vector form specified by (3.2.9d) with the elements of A given by (3.3.15a). <p> 1 , we obtain T 1 Y = y n T 1 l + hT 1 ATT 1 f where Y, l, A, and f are, respectively, given by (3.2.6a-c) and f = 6 6 f (t n1 + c 1 h) . . . 3 7 5 Let Butcher <ref> [9] </ref> chose the collocation points c i = ff i , i = 1; 2; : : : ; s, where i is the i th root of the s th-degree Laguerre polynomial L s (t) and ff is chosen so that the numerical method has favorable stability properties. butcher also <p> The linearized system (3.3.9) is easily solved in the transformed variables. (A similar transformation also works with Radau methods [17].) Butcher <ref> [9] </ref> and Burrage [5] show that it is possible to find A-stable SIRK methods for s 8. These methods are also L-stable with the exception of the seven-stage method. Problems 1. Verify that (3.3.17d) is correct when f (t; y) = ay with a a constant. 2.
Reference: [10] <author> J.C. Butcher. </author> <title> A transformed implicit runge-kutta method. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 26:731 - 738, </volume> <year> 1979. </year>
Reference-contexts: Usually, the collocation points t n1 + c i h are such that c i 2 [0; 1], i = 1; 2; : : : ; s, but this need not be the case <ref> [6, 10, 20] </ref>. <p> They still have excellent A- and L-stability properties and, perhaps, offer a computational advantage. A SIRK method is one where the coefficient matrix A has a single s-fold real eigenvalue. These collocation methods were Originally developed by Butcher [9] and have been subsequently extended <ref> [5, 10, 6, 20] </ref>. Collocating, as described, leads to the system (3.3.12-3.3.15). The intermediate solutions Y i , i = 1; 2; : : : ; s, have the vector form specified by (3.2.9d) with the elements of A given by (3.3.15a).
Reference: [11] <author> J.C. Butcher. </author> <title> The Numerical Analysis of Ordinary Differential Equations. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1987. </year>
Reference-contexts: This, as noted, is a tedious operation. Butcher developed a method of simplifying the work by constructing rooted trees that present the order conditions in a graphical way. They are discussed in many texts (e.g., <ref> [11, 16] </ref>); however, they are still complex and we will not pursue them here.
Reference: [12] <author> J.R. Dormand and P.J. Prince. </author> <title> A family of embedded runge-kutta formulae. </title> <journal> J. Comput. Appl. Math., </journal> <volume> 6:19 - 26, </volume> <year> 1980. </year>
Reference-contexts: Their fourth- and fifth-order pair is slightly different than the one presented here. Example 3.5.5. Dormand and Prince <ref> [12] </ref> develop another fourth- and fifth-order pair that has been designed to minimize the error coefficient of the higher-order method so that it may be used with local extrapolation.
Reference: [13] <author> B.L. Ehle. </author> <title> High order a-stable methods for numerical solution of systems of differential equations. </title> <journal> BIT, </journal> <volume> 8 </volume> <pages> 276-278, </pages> <year> 1968. </year>
Reference-contexts: Theorem 3.3.3. Methods that lead to a diagonal or one of the first two sub-diagonals of the Pade table for e z are A-stable. Proof. The proof appears in Ehle <ref> [13] </ref>. Without introducing additional properties of Pade approximations, we'll make some observations using the results of Table 3.3.1. 1. We have shown that the regions of absolute stability of the backward Euler method and the midpoint rule include the entire left-half of the h plane; hence, they are A-stable. 2.
Reference: [14] <author> E. Fehlberg. </author> <title> Klassische runge-kutta formeln vierter und niedrigerer ordnung mit schrittweiten-kontrolle und ihre andwendung auf warmeleitungs-probleme. </title> <journal> Computing, </journal> <volume> 6 </volume> <pages> 61-71, </pages> <year> 1970. </year>
Reference-contexts: Fehlberg <ref> [14] </ref> constructed pairs of explicit Runge-Kutta formulas for non-stiff problems.
Reference: [15] <author> C.W. Gear. </author> <title> Numerical Initial Value Problems in Ordinary Differential Equations. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, </address> <year> 1971. </year>
Reference-contexts: The intermediate solution ^y n1=2 is computed at t n + h=2 in the first (predictor) step and this value is used to generate an approximate slope f (t n + h=2; ^y n1=2 ) for use in the second (corrector) Euler step. According to Gear <ref> [15] </ref>, this method has been called the Euler-Cauchy, improved polygon, Heun, or modified Euler method. Since there seems to be some disagreement about its name and because of its similarity to midpoint rule integration, we'll call it the midpoint rule predictor-corrector. 2. <p> Example 3.3.2. The two-stage method having maximal order four presented in the following tableau was developed by Hammer and Hollingsworth [18]. 1 p 6 4 4 3 1 p 6 4 + 3 1 1 1 This method is derived in Gear <ref> [15] </ref>, Section 2.5. Example 3.3.3. Let us examine the region of absolute stability of the implicit midpoint rule (3.3.2). <p> While automatic variation of the step size is easy with one-step methods, it is very difficult to compute global error measures. A priori bounds, such as (3.4.11), tend to be too conservative and, hence, use very small step sizes (cf. [16], Section II.3). Other more accurate procedures (cf. <ref> [15] </ref>, pp. 13-14) tend to be computationally expensive. Controlling a 42 measure of the local (or local discretization) error, on the other hand, is fairly straight forward and this is the approach that we shall study in this section.
Reference: [16] <author> E. Hairer, S.P. Norsett, and G. Wanner. </author> <title> Solving Ordinary Differential Equations I: Nonstiff Problems. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <note> second edition, </note> <year> 1993. </year>
Reference-contexts: Fortunately, the derivation is adequately demonstrated by the second-order methods presented in Section 3.1 and, for the most part, we will not need to present detailed derivations of higher-order methods. There are three one-parameter families of three-stage, third-order explicit Runge-Kutta methods <ref> [3, 16] </ref>. However, the most popular explicit methods are of order four. <p> + h i=1 or i=1 If we also require the intermediate solutions Y i to be first order, then the use of (3.2.3b) with Y i = t n1 + c i h gives c i = j=1 This condition does not have to be satisfied for low-order Runge-Kutta methods <ref> [16] </ref>; however, its satisfaction simplifies the task of obtaining order conditions for higher-order methods. Methods that satisfy (3.2.5b) also treat autonomous and non-autonomous systems in a symmetric manner (Problem 1). We can continue this process to higher orders. <p> This, as noted, is a tedious operation. Butcher developed a method of simplifying the work by constructing rooted trees that present the order conditions in a graphical way. They are discussed in many texts (e.g., <ref> [11, 16] </ref>); however, they are still complex and we will not pursue them here. <p> Although conditions (3.2.5) and (3.2.7) are only necessary for a method to be of order p, they are sufficient in many cases. The actual number of conditions for a Runge-Kutta method of order p are presented in Table 3.2.2 <ref> [16] </ref>. These results assume that (3.2.5b) has been satisfied. Order, p 1 2 3 4 5 6 7 8 9 10 No. of Conds. 1 2 4 8 17 37 85 200 486 1205 Table 3.2.2: The number of conditions for a Runge-Kutta method of order p [16]. Theorem 3.2.1. <p> in Table 3.2.2 <ref> [16] </ref>. These results assume that (3.2.5b) has been satisfied. Order, p 1 2 3 4 5 6 7 8 9 10 No. of Conds. 1 2 4 8 17 37 85 200 486 1205 Table 3.2.2: The number of conditions for a Runge-Kutta method of order p [16]. Theorem 3.2.1. The necessary and sufficient conditions for a Runge-Kutta method (3.2.3) to be of second order are (3.2.5c), l = 1; 2, and (3.2.7), k = 2. If (3.2.5b) is satisfied then (3.2.5), k = 1; 2, are necessary and sufficient for second-order accuracy. Proof. <p> Hence, once again, we turn to implicit methods as a means of enlarging the region of absolute stability. Necessary order conditions for s-stage implicit Runge-Kutta methods are given by (3.2.5c, 3.2.7) (with sufficient conditions given in Hairer et al. <ref> [16] </ref>, Section II.2). A condition on the maximum possible order follows. Theorem 3.3.1. The maximum order of an implicit s-stage Runge-Kutta method is 2s. 18 Proof. cf. Butcher [7]. The derivations of implicit Runge-Kutta methods follow those for explicit methods. <p> Hairer et al. <ref> [16] </ref>, Section II.2, additionally show that our necessary conditions for third-order accuracy are also sufficient in this case. The computation of Y 1 can be recognized as the backward Euler method for one-third of the time step h. <p> The order conditions (3.3.15) are related to the previous conditions (3.2.5c, 3.2.7) (cf. <ref> [16] </ref>, Section II.7). 30 Proof. <p> The proof of the converse follows the same arguments (cf. <ref> [16] </ref>, Section II.7). Now, we might ask if there is an optimal way of selecting the collocation points. Appropriate strategies would select them so that accuracy and/or stability are maximized. Let's handle accuracy first. The following theorems discuss relevant accuracy issues. <p> Remark 3. The parameter oe identifies the time that the initial conditions are applied in (3.3.17a). A prime, as usual, denotes t differentiation. Remark 4. Observe that y (t) = x (t; 0; y 0 ). 31 Proof. cf. Hairer et al. <ref> [16] </ref>, Section I.14, and Problem 1. Theorem 3.3.5 makes it easy for us to associate the collocation error with a quadrature error as indicated below. Theorem 3.3.6. <p> We'll omit this detail which is proven in Hairer et al. <ref> [16] </ref>, Section II.7. Thus, jy (t n ) u (t n )j ^ Ch p+1 (3.3.19) and the collocation method (3.3.12) is of order p. 32 At last, our task is clear. <p> While automatic variation of the step size is easy with one-step methods, it is very difficult to compute global error measures. A priori bounds, such as (3.4.11), tend to be too conservative and, hence, use very small step sizes (cf. <ref> [16] </ref>, Section II.3). Other more accurate procedures (cf. [15], pp. 13-14) tend to be computationally expensive. Controlling a 42 measure of the local (or local discretization) error, on the other hand, is fairly straight forward and this is the approach that we shall study in this section. <p> k i , i = 1; 2; : : : ; 6, the solutions are calculated as y 4 25 k 1 + 2565 2197 k 4 5 and n = y n1 + h [ 135 6656 k 3 + 56430 9 k 5 + 55 Hairer et al. <ref> [16] </ref>, Section II.4 give several Fehlberg formulas. Their fourth- and fifth-order pair is slightly different than the one presented here. Example 3.5.5. <p> The exact solution of this problem is y 1 (t) = e sin t 2 : Hairer et al. <ref> [16] </ref> solved the problem on 0 t 5 using tolerances ranging from 10 7 to 10 3 . The results presented in Figure 3.5.2 compare the base 10 logarithms of the maximum global error and the number of function evaluations. <p> The several methods that are not identified in Figure 3.5.2 are the more traditional formulas, including the classical Runge-Kutta method (solid line). All of these are listed in Hairer et al. <ref> [16] </ref>, Section II.1. "Fehlberg's method" is the fourth- and fifth-order pair given in Example 3.5.4. The "Dormand-Prince" method is the fourth- and fifth-order pair of Example 3.5.5. "Butcher's method" is the sixth-order seven-stage formula shown in Table 3.5.1. It is the only formula that is beyond fourth or fifth order.
Reference: [17] <author> E. Hairer and G. Wanner. </author> <title> Solving Ordinary Differential Equations II: Stiff and Differential Algebraic Problems. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1991. </year>
Reference-contexts: The choice c 1 = 0 leads to methods with bounded regions of absolute stability. Thus, the methods of choice have c s = 1. They correspond to the subdiagonal Pade approximations and are, hence, A-and L-stable (Theorem 3.3.3). They have orders of p = 2s 1 <ref> [17] </ref>, Section IV.5. Such excellent stability and accuracy properties makes these methods very popular for solving stiff systems. <p> The linearized system (3.3.9) is easily solved in the transformed variables. (A similar transformation also works with Radau methods <ref> [17] </ref>.) Butcher [9] and Burrage [5] show that it is possible to find A-stable SIRK methods for s 8. These methods are also L-stable with the exception of the seven-stage method. Problems 1. Verify that (3.3.17d) is correct when f (t; y) = ay with a a constant. 2. <p> We will postpone a comparison of methods for these problems until examining multistep methods in Chapter 5. At this time, we'll note that software based on fifth-, seventh- and ninth-order Radau methods <ref> [17] </ref> has done extremely well when solving stiff IVPs. The STRIDE software [6] based on SIRK methods has been successful, but less so than the Radau methods. Problems 1.
Reference: [18] <author> P.C. Hammer and J.W. Hollingsworth. </author> <title> Trapezoidal methods of approximating solutions of differential equations. </title> <journal> Math. Tables Aids Comp., </journal> <volume> 9 </volume> <pages> 92-96, </pages> <year> 1955. </year>
Reference-contexts: However, formulas (3.3.2a) and (3.3.2b) are coupled and must be solved simultaneously rather than sequentially. Example 3.3.2. The two-stage method having maximal order four presented in the following tableau was developed by Hammer and Hollingsworth <ref> [18] </ref>. 1 p 6 4 4 3 1 p 6 4 + 3 1 1 1 This method is derived in Gear [15], Section 2.5. Example 3.3.3. Let us examine the region of absolute stability of the implicit midpoint rule (3.3.2).
Reference: [19] <author> E. Isaacson and H.B. Keller. </author> <title> Analysis of Numerical Methods. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1966. </year>
Reference-contexts: Alternatively, and equivalently, the quadrature rule can be designed to integrate polynomials exactly to as high a degree as possible. The actual series expansion is complicated by the fact that ^ F (s) is evaluated at (o ) in (3.3.21b). Isaacson and Keller <ref> [19] </ref> provide additional details on this matter; however, we'll sidestep the subtleties by assuming that all derivatives of (o ) are bounded so that ^ F (s) has an expansion in powers of o of the form ^ F (s) (o ) = ff 0 + ff 1 o + :
Reference: [20] <author> P.K. Moore and J.E. Flaherty. </author> <title> High-order adaptive finite element-singly implicit runga-kutta methods for parabolic differential equations. </title> <journal> BIT, </journal> <volume> 33 </volume> <pages> 309-331, </pages> <year> 1993. </year>
Reference-contexts: Usually, the collocation points t n1 + c i h are such that c i 2 [0; 1], i = 1; 2; : : : ; s, but this need not be the case <ref> [6, 10, 20] </ref>. <p> They still have excellent A- and L-stability properties and, perhaps, offer a computational advantage. A SIRK method is one where the coefficient matrix A has a single s-fold real eigenvalue. These collocation methods were Originally developed by Butcher [9] and have been subsequently extended <ref> [5, 10, 6, 20] </ref>. Collocating, as described, leads to the system (3.3.12-3.3.15). The intermediate solutions Y i , i = 1; 2; : : : ; s, have the vector form specified by (3.2.9d) with the elements of A given by (3.3.15a). <p> As indicated in Figure 3.5.1, we will concentrate on step changing algorithms without changing the order of the method. Techniques that automatically vary the order of the method with the step size are more difficult and are not generally used with Runge-Kutta methods (cf., however, Moore and Flaherty <ref> [20] </ref>). For vector IVPs (3.5.1b), we will measure the "size" of the solution or error estimate by using a vector norm. Many such metrics are possible.
Reference: [21] <author> C. </author> <title> Runge. Uber die numerishce aufl osung von differentialgleichungen. </title> <journal> Math. Ann., </journal> <volume> 46:167 - 178, </volume> <pages> 1895. </pages>
Reference-contexts: Neglecting the local error term and generalizing the method to the interval t n1 &lt; t t n yields y n = y n1 + hf (t n1 + h=2): Runge <ref> [21] </ref> sought to extend this idea to true differential equations having the form of (3.1.1). Thus, we might consider y n = y n1 + hf (t n h=2; y n1=2 ) as an extension of the simple midpoint rule to (3.1.1).
References-found: 21

