URL: http://www.cs.umn.edu/Users/dept/users/du/papers/virlab.ps
Refering-URL: http://www.cs.umn.edu/Users/dept/users/du/papers/
Root-URL: http://www.cs.umn.edu
Email: fylee,wma,dug@cs.umn.edu  jschnepf@cs.csbsju.edu  
Title: Creating a Virtual Network Laboratory  
Author: Yen-Jen Lee, Wei-hsiu Ma, and David H.C. Du James A. Schnepf 
Keyword: Collaboratory, Virtual Laboratory, Internet, WWW, Java, Network Analyzer, Ethernet, ATM, HIPPI, Fibre Channel  
Address: Minneapolis, Minnesota 55455  Collegeville, Minnesota 56321  
Affiliation: Distributed Multimedia Research Center Department of Computer Science University of Minnesota  Department of Computer Science College of St. Benedict/St. John's University  
Abstract: Networking technologies have entered an unprecedented era after the explosive growth of the Internet and the roll-out of high speed networks. This paper addresses the concept of using existing multimedia and computer networking technologies to create a remotely accessible, virtual network laboratory that can expand student access and eliminate many of the time, geographical, and cost constraints that currently exist. The authors propose a framework for constructing lab modules for a virtual network laboratory. A prototype has been developed for a series of Java-based modules that allow students to access and interact with the virtual laboratory databases and physical networking devices in a user-friendly manner. It provides a demonstration of networking concepts by using the developed materials in new courses at each of the participating universities. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> James E. Baker, Isabel F. Cruz, Giuseppe Liotta, and Roberto Tamassia. </author> <title> A New Model for Algorithm Animation Over the WWW. ACM Computing Surveys, </title> <booktitle> 27(4) </booktitle> <pages> 568-572, </pages> <month> December </month> <year> 1995. </year>
Reference-contexts: Other areas of science and engineering deciplines are also undertaking this route to address electronic educational components, grant scale collaborative work and sharing of unique scientific instrumentation. The Mocha model <ref> [1] </ref> provides algorithm animation using WWW and Java [2] to assist the algorithm designers and students to understand algorithms by visually following their step-by-step execution and demonstration. Mocha is very close to our goal in promoting the use of distributed interactive platform-neutral multimedia applications over the Web for education.
Reference: [2] <author> Marc A. Hamilton. </author> <title> Java and the Shift to Net-Centric Computing. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 31-39, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Other areas of science and engineering deciplines are also undertaking this route to address electronic educational components, grant scale collaborative work and sharing of unique scientific instrumentation. The Mocha model [1] provides algorithm animation using WWW and Java <ref> [2] </ref> to assist the algorithm designers and students to understand algorithms by visually following their step-by-step execution and demonstration. Mocha is very close to our goal in promoting the use of distributed interactive platform-neutral multimedia applications over the Web for education. <p> In each of these stages, we will develop a collection of multimedia learning modules using Java <ref> [2] </ref>, an object-oriented programming language. We will center (but not limit) these modules on the series of instructional lab exercises we have developed for the B.I.N, program.
Reference: [3] <author> Richard T. Kouzes, James D. Myers, and William A. Wulf. Collaboratories: </author> <title> Doing Science on the Internet. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 40-46, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Mocha is very close to our goal in promoting the use of distributed interactive platform-neutral multimedia applications over the Web for education. Collaboratory <ref> [3] </ref> coins the term by a prototype implementation that provides a loosely integrated set of Internet capabilities that appear as extensions to the Web to start or join multitool collaborative sessions. Madefast [4] is an early example of collaborative work by defense contractors using WWW.
Reference: [4] <author> Mark R. Cutkosky, Jay M. Tenenbaum, and Jay Glicksman. Madefast: </author> <title> Collaborative Engineering over the Internet. </title> <journal> Communications of the ACM, </journal> <volume> 39(9) </volume> <pages> 78-87, </pages> <month> September </month> <year> 1996. </year>
Reference-contexts: Collaboratory [3] coins the term by a prototype implementation that provides a loosely integrated set of Internet capabilities that appear as extensions to the Web to start or join multitool collaborative sessions. Madefast <ref> [4] </ref> is an early example of collaborative work by defense contractors using WWW. They have been developing Internet-based tools, services, protocols, and design methodologies that will allow contractors to compose teams of specialists from different locations and organizations as project needs arise, and to achive results.
Reference: [5] <author> Mart Molle and Greg Watson. </author> <title> 100Base-T/IEEE 802.12/Packet Switching. </title> <journal> IEEE Communications Magazine, </journal> <volume> 34(8) </volume> <pages> 64-73, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: The seamless integration of WWW and Java enables a platform-neutral implementation of the system modules. Remote invocation of the laboratory modules is transparent to end users. The following modules are planned for development: * a NetSniffer module that supports a variety of networking standards (including: Shared Ethernet, Switched Ethernet <ref> [5] </ref>, Token Ring, FDDI, ATM [6], HIPPI [7], and Fibre Channel [8, 9]), * a NetConfig module that allows a network design to be configured and tested in the virtual lab, and * a NetLoad module that allows captured network traffic patterns to be run on the system designs created by
Reference: [6] <author> Ronald J. Vetter. </author> <title> ATM Concepts, Architectures, and Protocols. </title> <journal> Communications of the ACM, </journal> <volume> 38(2) </volume> <pages> 30-38, </pages> <month> February </month> <year> 1995. </year>
Reference-contexts: Remote invocation of the laboratory modules is transparent to end users. The following modules are planned for development: * a NetSniffer module that supports a variety of networking standards (including: Shared Ethernet, Switched Ethernet [5], Token Ring, FDDI, ATM <ref> [6] </ref>, HIPPI [7], and Fibre Channel [8, 9]), * a NetConfig module that allows a network design to be configured and tested in the virtual lab, and * a NetLoad module that allows captured network traffic patterns to be run on the system designs created by NetConfig.
Reference: [7] <author> Don Tolmie and John Renwick. </author> <title> HIPPI: Smplicity Yields Success. </title> <journal> IEEE Network, </journal> <pages> pages 28-32, </pages> <month> January </month> <year> 1993. </year> <month> 19 </month>
Reference-contexts: Remote invocation of the laboratory modules is transparent to end users. The following modules are planned for development: * a NetSniffer module that supports a variety of networking standards (including: Shared Ethernet, Switched Ethernet [5], Token Ring, FDDI, ATM [6], HIPPI <ref> [7] </ref>, and Fibre Channel [8, 9]), * a NetConfig module that allows a network design to be configured and tested in the virtual lab, and * a NetLoad module that allows captured network traffic patterns to be run on the system designs created by NetConfig.
Reference: [8] <author> Clint Jurgens. </author> <title> Fbre Channel: A Connection to the Future. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 88-90, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: Remote invocation of the laboratory modules is transparent to end users. The following modules are planned for development: * a NetSniffer module that supports a variety of networking standards (including: Shared Ethernet, Switched Ethernet [5], Token Ring, FDDI, ATM [6], HIPPI [7], and Fibre Channel <ref> [8, 9] </ref>), * a NetConfig module that allows a network design to be configured and tested in the virtual lab, and * a NetLoad module that allows captured network traffic patterns to be run on the system designs created by NetConfig.
Reference: [9] <author> Martin W. Sachs and Anujan Varma. </author> <title> Fibre Channel and Related Standards. </title> <journal> IEEE Communications Magazine, </journal> <volume> 34(8) </volume> <pages> 40-50, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Remote invocation of the laboratory modules is transparent to end users. The following modules are planned for development: * a NetSniffer module that supports a variety of networking standards (including: Shared Ethernet, Switched Ethernet [5], Token Ring, FDDI, ATM [6], HIPPI [7], and Fibre Channel <ref> [8, 9] </ref>), * a NetConfig module that allows a network design to be configured and tested in the virtual lab, and * a NetLoad module that allows captured network traffic patterns to be run on the system designs created by NetConfig.
Reference: [10] <institution> Network General Corporation. Expert Sniffer Network Analyzer Operations. Network General Corporation, </institution> <year> 1992. </year>
Reference-contexts: Development work can be done on a variety of platforms, and tests can be conducted over the Internet and Web following this design methodology. Users of the developed modules will perceive a working environment as it is physically present. 7 3 Protocol Analyzer A protocol analyzer such as Sniffer <ref> [10] </ref> (which is, in general, a network analyzer with built-in expert system) or Packetman [11] is an indispensable tool to capture and diagnose the bits and bytes going across the network. The analyzer serves several purposes which are directly applicable to a production network for network application developers and operators.
Reference: [11] <author> Bradley Williamson. </author> <title> Packetman v1.2 User Manual. </title> <institution> School of Computing, Curtin University of Technology, Perth, Western Australia, </institution> <year> 1995. </year> <note> Available via ftp://ftp.cs.curtin.edu.au/pub/netman/. </note>
Reference-contexts: Users of the developed modules will perceive a working environment as it is physically present. 7 3 Protocol Analyzer A protocol analyzer such as Sniffer [10] (which is, in general, a network analyzer with built-in expert system) or Packetman <ref> [11] </ref> is an indispensable tool to capture and diagnose the bits and bytes going across the network. The analyzer serves several purposes which are directly applicable to a production network for network application developers and operators. First, communication protocol headers are decomposed into individual fields with high-level annotations.
Reference: [12] <author> Hewlett-Packard Company. Netperf: </author> <title> A Network Performance Benchmark, Revision 2.1. Information Networks Division, </title> <publisher> Hewlett-Packard Company, </publisher> <year> 1996. </year> <note> Available via http://www.cup.hp.com/netperf/NetperfPage.html. 20 </note>
Reference-contexts: The students can access different networks with various protocols or traffic patterns in a virtual environment. Different protocols and networks, have different characteristics. Some benchmark programs, such as Netperf <ref> [12] </ref>, can be used to measure the network throughput under multiple protocols. Netperf provides tests for TCP streams, UDP streams, Fore ATM API streams, etc. The features of different protocols have different effects on the performance of the same network. Some protocols are reliable and others are not.
References-found: 12

