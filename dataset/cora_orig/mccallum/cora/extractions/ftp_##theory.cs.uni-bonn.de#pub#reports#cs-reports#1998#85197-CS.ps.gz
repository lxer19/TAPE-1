URL: ftp://theory.cs.uni-bonn.de/pub/reports/cs-reports/1998/85197-CS.ps.gz
Refering-URL: http://cs.uni-bonn.de/info5/publications/CS-1998-en.html
Root-URL: http://cs.uni-bonn.de
Email: email:golin@cs.ust.hk  Email: larmore@cs.unlv.edu.  
Title: Optimal Prefix-Free Codes for Unequal Letter Costs: Dynamic Programming with the Monge Property  
Author: Phil Bradford Mordecai J. Golin Lawrence L. Larmore Wojciech Rytter 
Address: 66123 Saarbruecken, Germany Hong Kong UST, Clear Water Bay, Kowloon, Hong Kong.  Nevada, Las Vegas, NV 89154-4019.  
Affiliation: Department of Computer Science, Bonn University, Germany Max-Planck-Institut fur Informatik,  Department of Computer Science, University of  Department of Computer Science, University of Liverpool. of Computer Science, Bonn Univer sity.  
Note: This work was partially done by the last two authors while visiting  This research partially supported by HK RGC CERG grant 652/95E  Research supported by NSF grant CCR-9503441. -Instytut Informatyki, Uniwersytet Warszawski, Banacha 2, 02-097 Warszawa, Poland, and  
Abstract: In this paper we discuss a variation of the classical Huffman coding problem: finding optimal prefix-free codes for unequal letter costs. Our problem consists of finding a minimal cost prefix-free code in which the encoding alphabet consists of unequal cost (length) letters, with lengths ff and fi. The most efficient algorithm known previously required O(n 2+max(ff;fi) ) time to construct such a minimal-cost set of n codewords. In this paper we provide an O(n max(ff;fi) ) time algorithm. Our improvement comes from the use of a more sophisticated modeling of the problem combined with the observation that the problem possesses a "Monge property" and that the SMAWK algorithm on monotone matrices can therefore be applied. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Julia Abrahams, </author> <title> "Code and Parse Trees for Lossless Source Encoding," </title> <address> Sequences'97, </address> <year> (1997). </year>
Reference-contexts: Despite the similarity, the case of unequal letter costs is much harder then the classical Huffman problem; no polynomial time algorithm is known for general letter costs, despite a rich literature on the problem, e.g., <ref> [1, 7] </ref>. However there are known polynomial time algorithms when ff and fi are integer constants [7].
Reference: [2] <author> Doris Altenkamp and Kurt Mehlhorn, </author> <title> "Codes: Unequal Probabilities, Unequal Letter Costs," </title> <journal> J. Assoc. Comput. Mach. </journal> <month> 27 (3) (July </month> <year> 1980), </year> <pages> 412-427. </pages>
Reference-contexts: by Karp [9] in 1961 who solved the problem by reduction to integer linear programming, yielding an algorithm exponential in both n and fi: Since that time there has been much work on various aspects of the problem such as; bounding the cost of the optimal tree, Altenkamp and Mehlhorn <ref> [2] </ref>, Kapoor and Reingold [8] and Savari [15]; the restriction to the special case when all of the weights are equal, Cot [5], Perl Gary and Even [14], and Choi and Golin [4]; and approximating the optimal solution, Gilbert [6].
Reference: [3] <author> A. Aggarwal, M. Klawe, S. Moran, P. Shor, and R. Wilber, </author> <title> Geometric applications of a matrix-searching algorithm, </title> <booktitle> Algorithmica 2 (1987), </booktitle> <pages> pp. 195-208. </pages>
Reference-contexts: The first attack permits reducing the search space in which optimal trees are searched for. The second shows how, surprisingly, monotone-matrix concepts, e.g., the Monge property [13] and the SMAWK algorithm <ref> [3] </ref> can be utilized. <p> An n fi m matrix A is defined to be totally monotone if every 2 fi 2 submatrix of A is monotone. The smawk algorithm <ref> [3] </ref> takes as its input a function which computes the entries of an n fi m totally monotone matrix A and gives as output a non-decreasing function f , where 1 f (i) m for 1 i n, such that A i;f (i) is the minimum value of row i of
Reference: [4] <author> Siu-Ngan Choi and M. Golin, </author> <title> "Lopsided trees: Algorithms, Analyses and Applications," Automata, </title> <booktitle> Languages and Programming, Proceedings of the 23rd International Colloquium on Automata, Languages, and Programming (ICALP 96): </booktitle>
Reference-contexts: on various aspects of the problem such as; bounding the cost of the optimal tree, Altenkamp and Mehlhorn [2], Kapoor and Reingold [8] and Savari [15]; the restriction to the special case when all of the weights are equal, Cot [5], Perl Gary and Even [14], and Choi and Golin <ref> [4] </ref>; and approximating the optimal solution, Gilbert [6]. Despite all of these efforts it is still, surprisingly, not even known whether the basic problem is polynomial-time solvable or in N P -complete.
Reference: [5] <author> N. Cot, </author> <title> "A linear-time ordering procedure with applications to variable length encoding," </title> <booktitle> Proc. 8th Annual Princeton Conference on Information Sciences and Systems, </booktitle> <year> (1974), </year> <pages> pp. 460-463. </pages>
Reference-contexts: and fi: Since that time there has been much work on various aspects of the problem such as; bounding the cost of the optimal tree, Altenkamp and Mehlhorn [2], Kapoor and Reingold [8] and Savari [15]; the restriction to the special case when all of the weights are equal, Cot <ref> [5] </ref>, Perl Gary and Even [14], and Choi and Golin [4]; and approximating the optimal solution, Gilbert [6]. Despite all of these efforts it is still, surprisingly, not even known whether the basic problem is polynomial-time solvable or in N P -complete.
Reference: [6] <author> E. N. Gilbert, </author> <title> "Coding with Digits of Unequal Costs," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> 41 (1995). </volume> <pages> 16 </pages>
Reference-contexts: as; bounding the cost of the optimal tree, Altenkamp and Mehlhorn [2], Kapoor and Reingold [8] and Savari [15]; the restriction to the special case when all of the weights are equal, Cot [5], Perl Gary and Even [14], and Choi and Golin [4]; and approximating the optimal solution, Gilbert <ref> [6] </ref>. Despite all of these efforts it is still, surprisingly, not even known whether the basic problem is polynomial-time solvable or in N P -complete.
Reference: [7] <author> M. Golin and G. </author> <title> Rote, "A Dynamic Programming Algorithm for Constructing Optimal Prefix-Free Codes for Unequal Letter Costs," </title> <booktitle> Proceedings of the 22nd International Colloquium on Automata Languages and Programming (ICALP '95), </booktitle> <month> (July </month> <year> 1995) </year> <month> 256-267. </month> <note> Expanded version to appear in IEEE Trans. Inform. Theory. </note>
Reference-contexts: Despite the similarity, the case of unequal letter costs is much harder then the classical Huffman problem; no polynomial time algorithm is known for general letter costs, despite a rich literature on the problem, e.g., <ref> [1, 7] </ref>. However there are known polynomial time algorithms when ff and fi are integer constants [7]. <p> However there are known polynomial time algorithms when ff and fi are integer constants <ref> [7] </ref>. <p> Despite all of these efforts it is still, surprisingly, not even known whether the basic problem is polynomial-time solvable or in N P -complete. The only technique other than Karp's for solving the problem is due to Golin and Rote <ref> [7] </ref> who describe an O (n fi+2 )-time dynamic programming algorithm that constructs the tree in a top-down fashion. <p> The first attack permits reducing the search space in which optimal trees are searched for. The second shows how, surprisingly, monotone-matrix concepts, e.g., the Monge property [13] and the SMAWK algorithm [3] can be utilized. Combining these two attacks improves the running time of of <ref> [7] </ref> by a factor of O (n 2 ) down to O (n fi ): 2 Our approach requires a better understanding of the combinatorics of lopsided trees; to achieve this we also introduce the new crucial concept of characteristic sequences.
Reference: [8] <author> Sanjiv Kapoor and Edward Reingold, </author> <title> "Optimum Lopsided Binary Trees," </title> <journal> Journal of the Association for Computing Machinery 36 (3) (July 1989), </journal> <pages> 573-590. </pages>
Reference-contexts: 1961 who solved the problem by reduction to integer linear programming, yielding an algorithm exponential in both n and fi: Since that time there has been much work on various aspects of the problem such as; bounding the cost of the optimal tree, Altenkamp and Mehlhorn [2], Kapoor and Reingold <ref> [8] </ref> and Savari [15]; the restriction to the special case when all of the weights are equal, Cot [5], Perl Gary and Even [14], and Choi and Golin [4]; and approximating the optimal solution, Gilbert [6].
Reference: [9] <author> R. M. Karp, </author> <title> "Minimum-Redundancy Coding for the Discrete Noiseless Channel," </title> <journal> IRE Transactions on Information Theory, </journal> <month> 7 </month> <year> (1961) </year> <month> 27-39. </month>
Reference-contexts: However there are known polynomial time algorithms when ff and fi are integer constants [7]. The problem of finding the minimum cost tree in this case was first studied by Karp <ref> [9] </ref> in 1961 who solved the problem by reduction to integer linear programming, yielding an algorithm exponential in both n and fi: Since that time there has been much work on various aspects of the problem such as; bounding the cost of the optimal tree, Altenkamp and Mehlhorn [2], Kapoor and <p> weighted external path length of the tree is cost (T; P ) = P i p i depth (T; v i ): Given P; the problem that we wish to solve is to construct a labeled tree T that minimizes cost (T; P ): As was pointed out quite early <ref> [9] </ref> this problem is equivalent to finding a minimal cost prefix-free code in which the encoding alphabet consists of two (or generally, more) unequal cost (length) letters, of lengths ff and fi.
Reference: [10] <author> Abraham Lempel, Shimon Even, and Martin Cohen, </author> <title> "An Algorithm for Optimal Prefix Parsing of a Noiseless and Memoryless Channel," </title> <journal> IEEE Transactions on Information Theory, </journal> <month> IT-19(2) (March </month> <year> 1973), </year> <pages> 208-214. </pages>
Reference: [11] <author> L. L. Larmore, T. Przytycka, W. Rytter, </author> <title> Parallel computation of optimal alphabetic trees, </title> <publisher> SPAA93. </publisher>
Reference-contexts: Proof: The case where fi = 1 requires an exceptional proof, because the proof below fails if the sequence ffi is a 0-tuple. However, that case is already proved in <ref> [11] </ref>. Thus, we assume fi 2. In this extended abstract we actually only show how to calculate the cost of the shortest path. Transforming this calculation into the construction of the actual path uses standard dynamic programming backtracking techniques that we will leave to the reader.
Reference: [12] <author> K. Mehlhorn, </author> <title> "An Efficient Algorithm for Constructing Optimal Prefix Codes," </title> <journal> IEEE Trans. Inform. </journal> <note> Theory , IT-26 (1980) 513-517. </note>
Reference: [13] <author> G. Monge, Deblai et remblai, </author> <title> Memoires de l' Academie des Sciences, </title> <booktitle> Paris, </booktitle> <pages> (1781) pp. 666-704. </pages>
Reference-contexts: The first attack permits reducing the search space in which optimal trees are searched for. The second shows how, surprisingly, monotone-matrix concepts, e.g., the Monge property <ref> [13] </ref> and the SMAWK algorithm [3] can be utilized. <p> Our algorithm obviously cannot construct the entire graph since it is too large. Instead we use the fact that, looked at in the right way, our problem possesses a Monge property. A 2-dimensional matrix A is defined to be a Monge matrix <ref> [13] </ref> if for all i; j in range A (i; j) + A (i + 1; j + 1) A (i; j + 1) + A (i + 1; j) (13) Now let ffi = (i 1 ; i 2 ; : : : ; i fi1 ) be any monotonic
Reference: [14] <author> Y. Perl, M. R. Garey, and S. </author> <title> Even, "Efficient generation of optimal prefix code: Equiprobable words using unequal cost letters," </title> <journal> Journal of the Association for Computing Machinery 22 (2) (April 1975), </journal> <pages> 202-214, </pages>
Reference-contexts: there has been much work on various aspects of the problem such as; bounding the cost of the optimal tree, Altenkamp and Mehlhorn [2], Kapoor and Reingold [8] and Savari [15]; the restriction to the special case when all of the weights are equal, Cot [5], Perl Gary and Even <ref> [14] </ref>, and Choi and Golin [4]; and approximating the optimal solution, Gilbert [6]. Despite all of these efforts it is still, surprisingly, not even known whether the basic problem is polynomial-time solvable or in N P -complete.
Reference: [15] <author> Serap A. Savari, </author> <title> "Some Notes on Varn Coding," </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 40 (1) (Jan. </volume> <year> 1994), </year> <pages> 181-186. </pages>
Reference-contexts: the problem by reduction to integer linear programming, yielding an algorithm exponential in both n and fi: Since that time there has been much work on various aspects of the problem such as; bounding the cost of the optimal tree, Altenkamp and Mehlhorn [2], Kapoor and Reingold [8] and Savari <ref> [15] </ref>; the restriction to the special case when all of the weights are equal, Cot [5], Perl Gary and Even [14], and Choi and Golin [4]; and approximating the optimal solution, Gilbert [6].
Reference: [16] <author> Robert Sedgewick, </author> <title> Algorithms, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass.. </address> <year> (1984). </year> <month> 17 </month>
References-found: 16

