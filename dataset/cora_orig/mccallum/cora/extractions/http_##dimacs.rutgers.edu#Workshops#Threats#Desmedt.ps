URL: http://dimacs.rutgers.edu/Workshops/Threats/Desmedt.ps
Refering-URL: http://dimacs.rutgers.edu/Workshops/Threats/program.html
Root-URL: http://www.cs.rutgers.edu
Email: m.burmester@rhbnc.ac.uk  desmedt@cs.uwm.edu  kaba@ippi.ac.msk.su  
Title: A network security threat in general (even when cryptography is used)  
Author: Mike Burmester a Yvo Desmedt b Gregory Kabatianski c 
Address: Egham, Surrey TW20 OEX, U.K.,  Milwaukee, P.O. Box 784, WI 53201 Milwaukee,  Ermolovoy 19, Moscow, GSP-4, Russia,  
Affiliation: a Information Security Group, Department of Mathematics, Royal Holloway, University of London,  b Center for Cryptography, Computer and Network Security, Dept. EE and CS, Univ. of Wisconsin  c Inst. for Problems of Information Transmission, Russian Academy of Sciences,  
Abstract: The emphasis on cryptography in modern books (e.g. [3]) seems to suggest that (if combined with network reliability and anti-jamming techniques) it can guarantee network security. We dispute this by presenting an attack against any network which has been protected using conventional cryptographic techniques and in which there are nodes that do not know the network graph. For the sake of simplicity we assume that nodes in a network share a secret key with their neighbors and that a conventional cryptosystem is used to protect authenticity of messages. If a node n i is a neighbor of a node n j , we assume from now on that all traffic between n i and n j will be authenticated using the common secret key. If a node n i is not a neighbor of a node n j then the nodes n i and n j must rely on intermediate nodes to exchange authenticated messages (we do not worry about privacy in this paper). However, if insiders may be dishonest then the receiver, n j , cannot trust that the message will indeed be authentic even though it is claimed to be. If we assume that at maximum u nodes will be dishonest the theory of network reliability tells us that if the network is 2u + 1 vertex connected 1 , the sender will always succeed in having at least u + 1 identical messages (with the same sequence number) delivered to the receiver through disjoint paths. This seems to indicate that the receiver can use a majority vote to decide that the message is authentic, or not. We will see that in an adversarial scenario this result from network reliability does not necessarily carry over. First of all we observe that nodes should not be allowed to use pseudonyms since otherwise they might be able to create paths which seem disjoint when in fact these are not. Secondly, it is also easy to see that messages must contain as information the path that these have supposedly followed. Indeed, otherwise the receiver is not able to verify that these messages come from disjoint paths. If the sending node knows the network graph, then it can easily compute [1] disjoint paths and replicate sending the message via these paths appending each time to the message the path it 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. </author> <title> Even. Graph algorithms. </title> <publisher> Computer science press, </publisher> <address> Rockville, Maryland, </address> <year> 1979. </year>
Reference: [2] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <address> San Francisco, </address> <year> 1979. </year>
Reference-contexts: It seems hard for the receiver to conclude whether the message is authentic or not. Indeed, detecting authentic messages corresponds to the NP-complete Set Packing problem and detecting non-authentic messages to the NP-complete Hitting Set problem <ref> [2] </ref>. However, since we know that the paths will be restricted to one or the other form (the number of bad users is guranteed at most u), it is not obvious to conclude whether our problem is NP-complete. The best algorithm we know to decide authenticity uses exhaustive search.
Reference: [3] <author> C. Kaufman, R. Perlman, and M. Speciner. </author> <title> Network Security. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1995. </year> <title> 2 If the receiving node knows the network graph, it can use the same deterministic algorithm [1] to find the exact same disjoint paths as the sender has found and eliminate all incoming messages (with the same sequence number) that have arrived through other paths. </title> <type> 2 </type>
References-found: 3

