URL: www.cs.bilkent.edu.tr/~oulusoy/dexa.ps.Z
Refering-URL: 
Root-URL: 
Title: INVOLVING FUZZY CONCEPTS IN ACTIVE MOBILE DATABASES  
Author: Yucel Saygin, Ozgur Ulusoy 
Keyword: Key words: Active databases, mobile databases, rule execution, fuzzy databases, fuzzy triggers, fuzzy rule execution.  
Address: 06533, TURKEY  
Affiliation: Department of Computer Engineering and Information Science, Bilkent University, Ankara  
Abstract: Current needs of industry required the development of advanced database models like mobile databases, active databases, and fuzzy databases. Fuzzy concepts are adapted to the field of databases in order to deal with ambiguous, uncertain data. Fuzziness comes into picture in mobile databases especially with moving objects. Incorporating fuzziness into rules would improve the effectiveness of active databases. Rules can be utilized in mobile databases to form a more powerful system, namely an active mobile database. In this paper we investigate the ways in which the concepts developed for fuzzy systems can be integrated to active mobile databases. 
Abstract-found: 1
Intro-found: 1
Reference: [BKPW97] <author> Tarik Bouaziz, Janne Karvonen, Anton Pesonen, and Antoni Wolski. </author> <title> Design and implementation of tempo fuzzy triggers. </title> <booktitle> In Lecture Notes in Computer Science, </booktitle> <volume> volume 1308, </volume> <pages> pages 91-100, </pages> <address> Toulouse, Fran, September 1997. </address> <publisher> Springer. </publisher>
Reference-contexts: To the best of our knowledge, only a research group in VTT (Finland) has worked on fuzzy triggers [BW96], [BW97], <ref> [BKPW97] </ref>. In [BKPW97], a Condition-Action (CA) fuzzy trigger is proposed which means that fuzziness is introduced to the CA part of an ECA rule. In a later work [BW97], the concept of CA trigger is extended to a fuzzy ECA rule by introducing the notion of fuzzy events. <p> To the best of our knowledge, only a research group in VTT (Finland) has worked on fuzzy triggers [BW96], [BW97], <ref> [BKPW97] </ref>. In [BKPW97], a Condition-Action (CA) fuzzy trigger is proposed which means that fuzziness is introduced to the CA part of an ECA rule. In a later work [BW97], the concept of CA trigger is extended to a fuzzy ECA rule by introducing the notion of fuzzy events. <p> Upon the signaling of the fuzzy event, the corresponding rules are fired and their conditions (which are fuzzy predicates on the database) are checked. The action of a rule may be started to execute depending on the result of condition evaluation. The methods discussed in [BW97] and <ref> [BKPW97] </ref> try to incorporate fuzzi-ness into the event and condition of a rule. In this paper, we deal with the rules belonging to particular fuzzy sets, together with the coupling modes and scheduling of rules.
Reference: [BP82] <author> B. Buckles and F. Petry. </author> <title> A fuzzy model for relational databases. </title> <journal> International Journal of Fuzzy Sets and Systems, </journal> <volume> 7 </volume> <pages> 213-226, </pages> <year> 1982. </year>
Reference-contexts: Fuzzy database models generally adopt the relational database model as their base since it has a well established theoretical framework. One approach by Buckles and Petry incorporates fuzziness into relational database model by replacing the ordinary equivalence relation by the notion of similarity <ref> [BP82] </ref>. Similarity relationships are constructed to allow the comparison of linguistic terms like 1 10 20 30 40 age Fig. 1. Membership function of the fuzzy set young. young, old, middle-aged in a particular domain.
Reference: [Buc94] <author> Alejandro Buchmann. </author> <title> Active Object Systems. </title> <editor> In Asuman Dogac, M. Tamer Ozsu, Alex Biliris, and Timos Sellis, editors, </editor> <booktitle> Advances in Object-Oriented Database Systems, </booktitle> <pages> pages 201-224. </pages> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: The rest of this section is devoted to the detailed discussion of our approach. 4.1 Fuzzy Events Different events and their categorization together with composite events are explained in [GGD94], [CM91], and <ref> [Buc94] </ref>. Among these references, the most comprehensive event set and composition semantics are provided in [Buc94]. Primitive events are categorized in [Buc94] as: method execution events, state transition events, temporal events, transaction and flow-control events, and abstract events. Method execution events are raised when the specified methods are executed. <p> The rest of this section is devoted to the detailed discussion of our approach. 4.1 Fuzzy Events Different events and their categorization together with composite events are explained in [GGD94], [CM91], and <ref> [Buc94] </ref>. Among these references, the most comprehensive event set and composition semantics are provided in [Buc94]. Primitive events are categorized in [Buc94] as: method execution events, state transition events, temporal events, transaction and flow-control events, and abstract events. Method execution events are raised when the specified methods are executed. <p> this section is devoted to the detailed discussion of our approach. 4.1 Fuzzy Events Different events and their categorization together with composite events are explained in [GGD94], [CM91], and <ref> [Buc94] </ref>. Among these references, the most comprehensive event set and composition semantics are provided in [Buc94]. Primitive events are categorized in [Buc94] as: method execution events, state transition events, temporal events, transaction and flow-control events, and abstract events. Method execution events are raised when the specified methods are executed. State transition events are signaled when the corresponding state changes occur in the database, for example location updates of moving objects. <p> Membership degree of crisp events is taken as one. Primitive events can be combined to form composite events. Composition of primitive events can be done with different event constructors, like conjunction, disjunction, closure, sequence, history, and negation <ref> [Buc94] </ref>, [GGD94], [CM91]. Disjunction of two events E 1 and E 2 is raised when one of E 1 , or E 2 is raised.
Reference: [BW96] <author> Tarik Bouaziz and Antoni Wolski. </author> <title> Incorporating fuzzy inference into database triggers. </title> <type> Technical report, </type> <institution> VTT Information Technology, </institution> <address> P.O. Box 1201, </address> <month> November </month> <year> 1996. </year>
Reference-contexts: To the best of our knowledge, only a research group in VTT (Finland) has worked on fuzzy triggers <ref> [BW96] </ref>, [BW97], [BKPW97]. In [BKPW97], a Condition-Action (CA) fuzzy trigger is proposed which means that fuzziness is introduced to the CA part of an ECA rule. In a later work [BW97], the concept of CA trigger is extended to a fuzzy ECA rule by introducing the notion of fuzzy events.
Reference: [BW97] <author> Tarik Bouaziz and Antoni Wolski. </author> <title> Applying fuzzy events to appoxiamte reasoning in active databases. </title> <booktitle> In Proc. Sixth IEEE International Conference on Fuzzy Systems(FUZZ-IEEE'97), </booktitle> <address> Barcelona, Catalonia, Spain, </address> <month> July </month> <year> 1997. </year>
Reference-contexts: To the best of our knowledge, only a research group in VTT (Finland) has worked on fuzzy triggers [BW96], <ref> [BW97] </ref>, [BKPW97]. In [BKPW97], a Condition-Action (CA) fuzzy trigger is proposed which means that fuzziness is introduced to the CA part of an ECA rule. In a later work [BW97], the concept of CA trigger is extended to a fuzzy ECA rule by introducing the notion of fuzzy events. <p> To the best of our knowledge, only a research group in VTT (Finland) has worked on fuzzy triggers [BW96], <ref> [BW97] </ref>, [BKPW97]. In [BKPW97], a Condition-Action (CA) fuzzy trigger is proposed which means that fuzziness is introduced to the CA part of an ECA rule. In a later work [BW97], the concept of CA trigger is extended to a fuzzy ECA rule by introducing the notion of fuzzy events. <p> Max-min inference method is applied to the rule set to determine the truth value of the fuzzy predicates. In fuzzy ECA rules, an event may fire a set of rules. Fuzzy events are defined as fuzzy sets and use linguistic hedges like high, low, and strong <ref> [BW97] </ref>. Formally a primitive fuzzy event is represented as a tuple &lt; e c ; e f &gt; where e c is a crisp event, and e f is a fuzzy event predicate. <p> The output of the membership function is called the event match factor, and the fuzzy event is signaled only if the event match factor is greater than zero <ref> [BW97] </ref>. Upon the signaling of the fuzzy event, the corresponding rules are fired and their conditions (which are fuzzy predicates on the database) are checked. The action of a rule may be started to execute depending on the result of condition evaluation. The methods discussed in [BW97] and [BKPW97] try to <p> is greater than zero <ref> [BW97] </ref>. Upon the signaling of the fuzzy event, the corresponding rules are fired and their conditions (which are fuzzy predicates on the database) are checked. The action of a rule may be started to execute depending on the result of condition evaluation. The methods discussed in [BW97] and [BKPW97] try to incorporate fuzzi-ness into the event and condition of a rule. In this paper, we deal with the rules belonging to particular fuzzy sets, together with the coupling modes and scheduling of rules. <p> Events belonging to a scenario are fuzzy events as described in Section 4.1. Event signaling is done by considering the membership degree of the event parameter in the fuzzy event. The fuzzy event structure described in <ref> [BW97] </ref> is utilized where a primitive event is a tuple, e :&lt; e c ; e f &gt;, consisting of a crisp part e c which is the crisp parameter coming from the system and a fuzzy part e f which denotes the fuzzy event set.
Reference: [CM91] <author> S. Chakravarthy and D. Mishra. </author> <title> An event specification language (snoop) for active databases and its detection. </title> <type> Technical report, </type> <institution> University of Florida at Gainesville, </institution> <month> September </month> <year> 1991. </year>
Reference-contexts: The rest of this section is devoted to the detailed discussion of our approach. 4.1 Fuzzy Events Different events and their categorization together with composite events are explained in [GGD94], <ref> [CM91] </ref>, and [Buc94]. Among these references, the most comprehensive event set and composition semantics are provided in [Buc94]. Primitive events are categorized in [Buc94] as: method execution events, state transition events, temporal events, transaction and flow-control events, and abstract events. <p> Membership degree of crisp events is taken as one. Primitive events can be combined to form composite events. Composition of primitive events can be done with different event constructors, like conjunction, disjunction, closure, sequence, history, and negation [Buc94], [GGD94], <ref> [CM91] </ref>. Disjunction of two events E 1 and E 2 is raised when one of E 1 , or E 2 is raised. Conjunction of two events E 1 and E 2 is raised when both E 1 and E 2 have occurred, regardless of the order of occurrence.
Reference: [Day88] <author> Umeshwar Dayal. </author> <title> Active Database Management Systems. </title> <booktitle> In Proceedings of the Third International Conference on Data and Knowledge Bases, </booktitle> <pages> pages 150-169, </pages> <address> Jerusalem, </address> <month> June </month> <year> 1988. </year>
Reference-contexts: Fuzzy concepts are incorporated to the field of databases in order to support queries closer to the natural language and to model data which is inherently fuzzy. An active database management system (ADBMS) allows users to specify actions to be executed when specific events are signaled <ref> [Day88] </ref>. In order for a conventional database management system to react to certain events, it should be incorporated with rules. <p> There are three basic coupling modes: immediate, deferred, and detached (or decoupled) <ref> [Day88] </ref>. If the condition is specified to be evaluated in immediate mode, then it is executed right after the triggering operation that caused the event to be raised.
Reference: [GGD94] <author> Stella Gatziu, Andreas Geppert, and Klaus R. Dittrich. </author> <title> The samos active dbms prototype. </title> <type> Technical report, </type> <institution> Institut fur Informatik, Universitat Zurich, </institution> <month> October </month> <year> 1994. </year>
Reference-contexts: The rest of this section is devoted to the detailed discussion of our approach. 4.1 Fuzzy Events Different events and their categorization together with composite events are explained in <ref> [GGD94] </ref>, [CM91], and [Buc94]. Among these references, the most comprehensive event set and composition semantics are provided in [Buc94]. Primitive events are categorized in [Buc94] as: method execution events, state transition events, temporal events, transaction and flow-control events, and abstract events. <p> Membership degree of crisp events is taken as one. Primitive events can be combined to form composite events. Composition of primitive events can be done with different event constructors, like conjunction, disjunction, closure, sequence, history, and negation [Buc94], <ref> [GGD94] </ref>, [CM91]. Disjunction of two events E 1 and E 2 is raised when one of E 1 , or E 2 is raised. Conjunction of two events E 1 and E 2 is raised when both E 1 and E 2 have occurred, regardless of the order of occurrence.
Reference: [IB94] <author> Tomasz Imielinski and B. R. Badrinath. </author> <title> Mobile wireless computing: </title> <booktitle> Challenges in datata management. Communications of the ACM, </booktitle> <pages> pages 19-27, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: FIXED NETWORK MSS MSS MSS MSS ... ... MH MH MH: Mobile Host MSS : Mobile Support Station MH Cell#i Cell#j ... Fig. 2. A general architecture of a mobile computing system A typical architecture for mobile computing systems which is inspired from <ref> [IB94] </ref> is depicted in Figure 2. In this architecture, there is a fixed network of Mobile Support Stations (MSSs). Mobile Hosts (MHs) are the computers which are portable and capable of mobile communication. Each MH is associated with a MSS and MHs are connected to MSSs via wireless links.
Reference: [KF88] <author> George J. Klir and Tina A. Folger. </author> <title> Fuzzy Sets, Uncertainty and Information. </title> <publisher> Prentice Hall, </publisher> <year> 1988. </year>
Reference-contexts: Relative temporal events can also be modified in order to convert them to fuzzy relative temporal events. Calculating the membership degrees of fuzzy temporal events can be done using the membership functions of the fuzzy terms and the concept of fuzzy numbers which is explained in more detail in <ref> [KF88] </ref>. Membership degree of crisp events is taken as one. Primitive events can be combined to form composite events. Composition of primitive events can be done with different event constructors, like conjunction, disjunction, closure, sequence, history, and negation [Buc94], [GGD94], [CM91]. <p> We define the credibility of a condition as the truth value of the fuzzy predicate or the combination of the fuzzy predicates. Determination of the truth values of the fuzzy predicates is explained in <ref> [KF88] </ref>. A high credibility implies immediate or detached coupling mode and a low credibility implies deferred coupling mode in case the coupling modes are not specified ex-plicitly.
Reference: [MB96] <author> S. Morton and O. Bukhres. </author> <title> Mobile transaction recovery in distributed medical databases. </title> <booktitle> In LASTED Eighth International Conference on Parallel and Distributed Computing and Systems, </booktitle> <year> 1996. </year>
Reference-contexts: One such application in military is the management and control of vehicles in a battlefield environment [MB97], [MBM96]. In health, an active mobile computing system can be designed to reach the patients' previous records in the hospital from the moving ambulances <ref> [MB96] </ref>. FIXED NETWORK MSS MSS MSS MSS ... ... MH MH MH: Mobile Host MSS : Mobile Support Station MH Cell#i Cell#j ... Fig. 2. A general architecture of a mobile computing system A typical architecture for mobile computing systems which is inspired from [IB94] is depicted in Figure 2.
Reference: [MB97] <author> S. Morton and O. Bukhres. </author> <title> Mobile computing in military ambulatory care. </title> <booktitle> In The 10th IEEE Symposium on Computer-Based Medical Systems(CBMS'97), </booktitle> <year> 1997. </year>
Reference-contexts: One such application in military is the management and control of vehicles in a battlefield environment <ref> [MB97] </ref>, [MBM96]. In health, an active mobile computing system can be designed to reach the patients' previous records in the hospital from the moving ambulances [MB96]. FIXED NETWORK MSS MSS MSS MSS ... ... MH MH MH: Mobile Host MSS : Mobile Support Station MH Cell#i Cell#j ... Fig. 2.
Reference: [MBM96] <author> S. Morton, O. Bukhres, and M. Mossman. </author> <title> Mobile computing architecture for a battlefield environment. </title> <booktitle> In International Symposium on Cooperative Database Systems for Advanced Applications, </booktitle> <year> 1996. </year>
Reference-contexts: One such application in military is the management and control of vehicles in a battlefield environment [MB97], <ref> [MBM96] </ref>. In health, an active mobile computing system can be designed to reach the patients' previous records in the hospital from the moving ambulances [MB96]. FIXED NETWORK MSS MSS MSS MSS ... ... MH MH MH: Mobile Host MSS : Mobile Support Station MH Cell#i Cell#j ... Fig. 2.
Reference: [Zad65] <author> L.A. Zadeh. </author> <title> Fuzzy sets. </title> <journal> Information and Control, </journal> <volume> 8 </volume> <pages> 338-353, </pages> <year> 1965. </year> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: Fuzzy database theory is based on the concepts of fuzzy sets and fuzzy logic which we discuss in the following. The theory of fuzzy sets was introduced by Zadeh <ref> [Zad65] </ref>.
References-found: 14

