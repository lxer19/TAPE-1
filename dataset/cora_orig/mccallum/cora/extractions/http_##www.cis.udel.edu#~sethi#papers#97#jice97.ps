URL: http://www.cis.udel.edu/~sethi/papers/97/jice97.ps
Refering-URL: http://www.cis.udel.edu/~sethi/netman/qos.html
Root-URL: http://www.cis.udel.edu
Title: Blocked and Free Access Real-Time Splitting Protocols  
Author: Michael J. Markowski Adarshpal S. Sethi 
Note: To appear in Journal of Integrated Computer-Aided Engineering, Special Issue on Real-Time Engineering Systems  
Date: July 29, 1997  (1997).  
Address: Newark, Delaware, USA  
Affiliation: University of Delaware Department of Computer and Information Sciences  
Abstract: Addressing the challenge of packet transmission in a wireless soft real-time system, we present five splitting protocols that take packet deadlines into account. With them, connectionless service with real-time QoS guarantees at the MAC layer can be offered. Three protocols are blocked access and two are free access algorithms. Mathematical models are developed and results compared with simulations. As is the case with non real-time splitting algorithms, the blocked access versions offer higher success rates than the free access versions. We further show that of the two best performing blocked access protocols, under moderate to heavy loads, the Sliding Partition CRA outperforms the Two Cell CRA.
Abstract-found: 1
Intro-found: 1
Reference: <author> Abramson, N. </author> <year> (1970), </year> <title> "Another Alternative for Computer Communications", </title> <booktitle> Proceedings of the Fall Joint Computer Conference, AFIPS Conference, </booktitle> <volume> Vol. 37, </volume> <pages> 281-285. </pages>
Reference-contexts: It is not new hardware technology that is needed, but new channel access techniques. 2 Background The most popular random access MAC techniques are Aloha <ref> (Abramson 1970, Abramson 1985) </ref> and Ethernet (Metcalfe & Boggs 1976) or variants of them. Their shortcoming in the real-time environment is clear: collisions result in a random transmission order of involved packets.
Reference: <author> Abramson, N. </author> <year> (1985), </year> <title> "Development of ALOHANET", </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 5(2), </volume> <pages> 28-42. </pages>
Reference: <author> Arvind, K. </author> <year> (1991), </year> <title> Protocols for Distributed Real-Time Systems, </title> <type> PhD thesis, </type> <institution> University of Massachusetts, </institution> <address> Amherst, MA. </address>
Reference: <author> Bertsekas, D. & Gallager, R. </author> <year> (1992), </year> <title> Data Networks, second edn, </title> <publisher> Prentice Hall. </publisher>
Reference-contexts: The analysis must consider both this lag, and, based on the packet arrival process, the number of packets expected to arrive while the CRI is ongoing. Because the lag can become large when the intensity of the arrival process is high, windows are used, as first introduced by Gallager <ref> (Bertsekas & Gallager 1992) </ref>. With large lags, it is likely that when a CRI completes, it will be immediately followed by a collision.
Reference: <author> Capetanakis, J. </author> <year> (1979a), </year> <title> "Generalized TDMA: The Multiple Access Tree Protocol", </title> <journal> IEEE Transactions on Communications, </journal> <volume> 27(10), </volume> <pages> 1476-1484. </pages>
Reference: <author> Capetanakis, J. </author> <year> (1979b), </year> <title> "Tree Algorithms for Packet Broadcast Channels", </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 25(5), </volume> <pages> 505-515. </pages>
Reference: <author> Gallager, R. G. </author> <year> (1978), </year> <title> "Conflict Resolution in Random Access Broadcast Networks", </title> <booktitle> Proceedings of the AFOSR Workshop in Communications Theory Applications, </booktitle> <pages> 74-76. </pages>
Reference-contexts: This continues recursively on both sets of packets, so that a high multiplicity collision will result in a large number of subwindows. The splitting variable is the coin toss outcome, and the splitting method is a fully recursive one. Gallager <ref> (Gallager 1978, Bertsekas & Gallager 1992) </ref> and, independently, Tsybakov & Mikhailov (1980) improved on the fully recursive algorithm in a number of ways. In this algorithm, that we name GTM again using surname initials, the splitting variable is queue arrival time. The splitting method uses a sliding partition. <p> And after the left half transmission is a non-collision, the CRA is applied to the right half. This is similar to, but not quite the same as, the improvement made to the original CTM CRA by Gallager <ref> (Gallager 1978) </ref>(Bertsekas & Gallager 1992) and Tsybakov & Mikhailov (1980) that yielded the GTM CRA. In the ternary feedback GTM algorithm, after a successful transmission in the left half, the remaining right half is ignored. The window slides beyond the now resolved left half, and begins anew.
Reference: <author> Gallager, R. G. </author> <year> (1996), </year> <title> Discrete Stochastic Processes, </title> <publisher> Kluwer Academic Publishers. </publisher>
Reference-contexts: We combine this with the splitting methodologies used by the algorithms described above to develop new splitting protocols for real-time use. Random access MAC algorithms, real-time or not, can often be characterized and analyzed with regenerative processes <ref> (Gallager 1996) </ref>. In the protocols we present, one "cycle" of the system can be thought of as the amount of time to resolve channel contention by some number of nodes.
Reference: <author> Georgiadis, L., Merakos, L. F. & Papantoni-Kazakos, P. </author> <year> (1987), </year> <title> "A Method for the Delay Analysis of Random Multiple-Access Algorithms Whose Delay Process is Regenerative", </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> SAC-5(6), </volume> <pages> 1051-1062. </pages>
Reference-contexts: We also conducted simulation studies of each protocol using Opnet (Mil 3, Inc. 1996), a network simulation package. The simulator models the system as an infinite user population, thus offering more conservative performance results than the finite user case <ref> (Paterakis, Georgiadis & Papatoni-Kazakos 1987) </ref>. Each simulation was run with 0.95 probability that the fraction of successful transmissions was within 0:005 of the steady state value. Input traffic rates, in units of packets/slot, ranged from 0.050 to 0.600 in increments of 0.01.
Reference: <author> Markowski, M. J. & Sethi, A. S. </author> <year> (1995), </year> <title> "Analysis of a Soft Real-Time Protocol", </title> <type> Technical Report 96-02, </type> <institution> Dept. of Computer and Information Sciences, University of Delaware, Newark, DE. </institution>
Reference-contexts: While Paterakis et al. studied a specific protocol's performance for initial deadlines of up to 30 slots, Panwar, Towsley & Armoni (1993) use the value iteration method to find the optimal splitting algorithm for fixed initial deadlines of up to 4 slots. In <ref> (Markowski & Sethi 1995) </ref>, we extended the technique of Paterakis et al. to analyze a somewhat more complex protocol but still used fixed initial deadlines. We included consideration of varying initial deadlines in (Markowski & Sethi 1996).
Reference: <author> Markowski, M. J. & Sethi, A. S. </author> <year> (1996), </year> <title> "Evaluation of Wireless Soft Real-Time Protocols", </title> <booktitle> IEEE Proceedings Real-Time Technology and Applications Symposium, </booktitle> <address> Boston, MA, </address> <pages> 139-146. </pages>
Reference-contexts: In (Markowski & Sethi 1995), we extended the technique of Paterakis et al. to analyze a somewhat more complex protocol but still used fixed initial deadlines. We included consideration of varying initial deadlines in <ref> (Markowski & Sethi 1996) </ref>. Here, we present a more efficient technique than in (Markowski & Sethi 1996) for the case of varying initial deadlines, and apply it to the analysis of three blocked access protocols. <p> In (Markowski & Sethi 1995), we extended the technique of Paterakis et al. to analyze a somewhat more complex protocol but still used fixed initial deadlines. We included consideration of varying initial deadlines in <ref> (Markowski & Sethi 1996) </ref>. Here, we present a more efficient technique than in (Markowski & Sethi 1996) for the case of varying initial deadlines, and apply it to the analysis of three blocked access protocols.
Reference: <author> Massey, J. </author> <year> (1981), </year> <title> "Collision Resolution Algorithms and Random Access Communications", </title> <editor> I. G. Longo, ed., </editor> <title> Multi-User Communication Systems, CISM Courses and Lectures, </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <pages> 73-137. </pages>
Reference: <author> Metcalfe, R. M. & Boggs, D. R. </author> <year> (1976), </year> <title> "Ethernet: Distributed Packet Switching for Local Computer Networks", </title> <journal> Communications of the ACM, </journal> <pages> 395-404. </pages> <address> Mil 3, </address> <publisher> Inc. </publisher> <address> (1996), "Opnet Modeler, v3.0". Washington, DC. </address>
Reference-contexts: It is not new hardware technology that is needed, but new channel access techniques. 2 Background The most popular random access MAC techniques are Aloha (Abramson 1970, Abramson 1985) and Ethernet <ref> (Metcalfe & Boggs 1976) </ref> or variants of them. Their shortcoming in the real-time environment is clear: collisions result in a random transmission order of involved packets. Since this offers potentially unbounded access times at worst, and transmission scheduling ignoring time constraints at best, it is undesirable in real-time settings.
Reference: <author> Molle, M. L. & Kleinrock, L. </author> <year> (1985), </year> <title> "Virtual Time CSMA: Why Two Clocks are Better Than One", </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-33(9), </volume> <pages> 919-933. </pages>
Reference: <author> Panwar, S. S., Towsley, D. & Armoni, Y. </author> <year> (1993), </year> <title> "Collision Resolution Algorithms for a Time-Constrained Multiaccess Channel", </title> <journal> IEEE Transactions on Communications, </journal> <volume> 41(7), </volume> <pages> 1023-1026. </pages> <address> 38 Papantoni-Kazakos, P. </address> <year> (1992), </year> <title> "Multiple-Access Algorithms for a System with Mixed Traffic: High and Low Priority", </title> <journal> IEEE Transactions on Communications, </journal> <volume> 40(3), </volume> <pages> 541-555. </pages>
Reference: <author> Paterakis, M., Georgiadis, L. & Papantoni-Kazakos, P. </author> <year> (1989), </year> <title> "Full Sensing Window Random-Access Algorithm for Messages With Strict Delay Constraints", </title> <journal> Algorithmica, </journal> <volume> 4, </volume> <pages> 318-328. </pages>
Reference: <author> Paterakis, M., Georgiadis, L. & Papatoni-Kazakos, P. </author> <year> (1987), </year> <title> "On the Relation Between the Finite and the Infinite Population Models for a Class of RAA's", </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-35(11), </volume> <pages> 1239-1240. </pages>
Reference-contexts: We also conducted simulation studies of each protocol using Opnet (Mil 3, Inc. 1996), a network simulation package. The simulator models the system as an infinite user population, thus offering more conservative performance results than the finite user case <ref> (Paterakis, Georgiadis & Papatoni-Kazakos 1987) </ref>. Each simulation was run with 0.95 probability that the fraction of successful transmissions was within 0:005 of the steady state value. Input traffic rates, in units of packets/slot, ranged from 0.050 to 0.600 in increments of 0.01.
Reference: <author> Ramamritham, K. & Zhao, W. </author> <year> (1987), </year> <title> "Virtual Time CSMA Protocols for Hard Real-time Communication", </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 13(8), </volume> <pages> 938-952. </pages>
Reference: <author> Tsybakov, B. & Mikhailov, V. </author> <year> (1978), </year> <title> "Free Synchronous Packet Access in a Broadcast Channel with Feedback", </title> <journal> Problemy Peredachi Informassi, </journal> <volume> 14(4), </volume> <pages> 259-280. </pages>
Reference: <author> Tsybakov, B. & Mikhailov, V. </author> <year> (1980), </year> <title> "Random Multiple Access of Packets: Part-and-Try Algorithm", </title> <journal> Problemy Peredachi Informassi, </journal> <volume> 16(4), </volume> <pages> 65-79. </pages>
Reference: <author> Wong, E. </author> <year> (1964), </year> <title> "A Linear Search Problem", </title> <journal> SIAM Review, </journal> <volume> 6(2), </volume> <pages> 168-174. </pages>
Reference: <author> Zhao, W., Stankovic, J. A. & Ramamritham, K. </author> <year> (1990), </year> <title> "A Window Protocol for Transmission of Time-Constrained Messages", </title> <journal> IEEE Transactions on Computers, </journal> <volume> 39(9), </volume> <pages> 1186-1203. 39 </pages>
References-found: 22

