URL: http://www.cs.utah.edu/~sci/publications/mesh96.ps.Z
Refering-URL: http://www.cs.utah.edu/~sci/projects/visualization.html
Root-URL: 
Title: MeshView: A Tool for Exploring 3D Unstructured Tetrahedral Meshes  
Author: Carole S. Gitlin and Christopher R. Johnson Autometric, Incorporated 
Keyword: mesh visualization, unstructured grids, analysis  
Address: Salt Lake City, UT 84112.  
Affiliation: Department of Computer Science University of Utah,  
Email: Email: cgitlin@autometric.com  E-Mail: crj@cs.utah.edu  
Phone: 2  
Web: Web: http://www.cs.utah.edu/ ~sci/  
Abstract: We have developed a visualization module, MeshView, for viewing large-scale 3D unstructured tetrahedral finite element meshes. The module includes two different approaches for visualization and analysis, plus the capability to edit meshes after the researcher has analyzed the mesh and located problem areas. The first approach offers various real-time interactive manipulation options for visualizing the geometry of the mesh. The second approach provides interactive histograms for displaying quantitative data about the elements and their neighbors. Finally, there are several editing options that allow the user to add nodes and delete elements or nodes from the mesh.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Hammond and R. Schreiber, </author> <title> "Mapping unstructured grid problems to the connection machine.", in Unstructured Scientific Computation on Scalable Multiprocessors, </title> <editor> P. Mehrotra, J. Saltaz, and R. Voigt, </editor> <booktitle> Eds., </booktitle> <pages> pp. 11-30. </pages> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: As such, mesh visualization is important for studying these sets and for assessing solution accuracy, checking geometrical integrity, identifying missing and/or distorted elements, and interactively editing the mesh. Furthermore, with adaptive mesh refinement and derefinement methods that alter the structure of the mesh, <ref> [1, 2, 3, 4] </ref> it is especially helpful to visualize the changes taking place as an area of the mesh is altered. It is important for the researcher to be able to verify visually and to isolate the (de)refinement.
Reference: [2] <author> A. Shostko and R. Lohner, </author> <title> "Three-dimensional parallel unstructured grid generation", </title> <booktitle> AIAA, </booktitle> <year> 1994. </year>
Reference-contexts: As such, mesh visualization is important for studying these sets and for assessing solution accuracy, checking geometrical integrity, identifying missing and/or distorted elements, and interactively editing the mesh. Furthermore, with adaptive mesh refinement and derefinement methods that alter the structure of the mesh, <ref> [1, 2, 3, 4] </ref> it is especially helpful to visualize the changes taking place as an area of the mesh is altered. It is important for the researcher to be able to verify visually and to isolate the (de)refinement.
Reference: [3] <author> C.R. Johnson and R.S. MacLeod, </author> <title> "Nonuniform spatial mesh adaption using a posteriori error estimate: Applications to forward and inverse problems.", </title> <journal> Applied Numerical Mathematics, </journal> <volume> vol. 14, </volume> <pages> pp. 311-326, </pages> <year> 1994. </year>
Reference-contexts: As such, mesh visualization is important for studying these sets and for assessing solution accuracy, checking geometrical integrity, identifying missing and/or distorted elements, and interactively editing the mesh. Furthermore, with adaptive mesh refinement and derefinement methods that alter the structure of the mesh, <ref> [1, 2, 3, 4] </ref> it is especially helpful to visualize the changes taking place as an area of the mesh is altered. It is important for the researcher to be able to verify visually and to isolate the (de)refinement.
Reference: [4] <author> F. Yu and C.R. Johnson, </author> <title> "An automatic adaptive refinement and derefinement method.", </title> <booktitle> in Proceedings of the 14th IMACS World Congress, </booktitle> <year> 1994, </year> <pages> pp. 1555-1557. </pages>
Reference-contexts: As such, mesh visualization is important for studying these sets and for assessing solution accuracy, checking geometrical integrity, identifying missing and/or distorted elements, and interactively editing the mesh. Furthermore, with adaptive mesh refinement and derefinement methods that alter the structure of the mesh, <ref> [1, 2, 3, 4] </ref> it is especially helpful to visualize the changes taking place as an area of the mesh is altered. It is important for the researcher to be able to verify visually and to isolate the (de)refinement.
Reference: [5] <author> D. Speray and S. Kennon, </author> <title> "Volume probes: Interactive data exploration on arbitrary grids", </title> <journal> Computer Graphics, </journal> <volume> vol. 24, no. 5, </volume> <pages> pp. 5-12, </pages> <year> 1990. </year>
Reference-contexts: The computational mesh is usually one of two types, structured or unstructured. Other types of meshes are hybrids of these two distinct forms. In structured meshes, the polyhedral elements are of a uniform shape on a Cartesian grid that may be mapped through linear and nonlinear transformations <ref> [5] </ref>. Therefore, it is simple, provided that the mesh is not too dense, to identify the shape and position of elements. A researcher can visualize the geometry and underlying structure using traditional graphical techniques, comprising rotation, translation, scaling, and clipping planes. <p> Volume rendering, however, is used primarily to view the solution of a finite element approximation and is not as useful in analyzing the actual mesh used in the approximation. The two more analytical approaches are planar slicing and graphical analysis tools. With planar slicing <ref> [5] </ref>, a plane cuts through the finite element mesh, and then the contours of the elements are displayed on the slice.
Reference: [6] <author> C.R. Johnson, R.S. MacLeod, and M.A. Matheson, </author> <title> "Computer simulations reveal complexity of electrical activity in the human thorax", </title> <journal> Comp. in Physics, </journal> <volume> vol. 6, no. 3, </volume> <pages> pp. 230-237, </pages> <month> May/June </month> <year> 1992. </year>
Reference-contexts: Fig. 1 shows examples of regular and irregular unstructured tetrahedral meshes, both rendered with the MeshView program, while Fig. 2 shows the unstructured mesh we use for computing the bioelectric fields within a large-scale model of the human thorax, the project that gave rise to our new visualization module <ref> [6, 7] </ref>. Although people have spent years researching ways to create meshes and the numerical methods used to approximate numerical solutions to the governing boundary value problems associated with the science and engineering problem at hand, little work has been done in the visual analysis of such meshes until 1990.
Reference: [7] <author> C.R. Johnson, R.S. MacLeod, and M.A. Matheson, </author> <title> "Computational medicine: Bioelectric field problems", </title> <booktitle> IEEE COMPUTER, </booktitle> <pages> pp. 59-67, </pages> <month> Oct., </month> <year> 1993. </year>
Reference-contexts: Fig. 1 shows examples of regular and irregular unstructured tetrahedral meshes, both rendered with the MeshView program, while Fig. 2 shows the unstructured mesh we use for computing the bioelectric fields within a large-scale model of the human thorax, the project that gave rise to our new visualization module <ref> [6, 7] </ref>. Although people have spent years researching ways to create meshes and the numerical methods used to approximate numerical solutions to the governing boundary value problems associated with the science and engineering problem at hand, little work has been done in the visual analysis of such meshes until 1990.
Reference: [8] <author> E.S. Brugger, A. Leibee, and J.W. </author> <title> Long, MeshTV User's Manual, </title> <institution> Lawrence Livermore National Laboratory, </institution> <month> May </month> <year> 1994. </year>
Reference-contexts: There is ongoing work by several different groups on graphical analysis tools <ref> [8, 9] </ref>. These tools allow the user to interact with complex meshes and to pull out important quantitative information about the mesh and the elements of the mesh. However, for our needs, we found deficiencies in all of these programs.
Reference: [9] <author> R. Rainsberger, </author> <title> TrueGrid User's Manual, </title> <publisher> XYZ Scientific, </publisher> <year> 1990. </year>
Reference-contexts: There is ongoing work by several different groups on graphical analysis tools <ref> [8, 9] </ref>. These tools allow the user to interact with complex meshes and to pull out important quantitative information about the mesh and the elements of the mesh. However, for our needs, we found deficiencies in all of these programs.
Reference: [10] <author> C.R. Johnson and S.G. Parker, </author> <title> "A computational steering model applied to problems in medicine", </title> <booktitle> in Supercomputing '94. </booktitle> <year> 1994, </year> <pages> pp. 540-549, </pages> <publisher> IEEE Press. </publisher>
Reference-contexts: MeshView contains a suite of options to provide the user with interactive control for mesh visualization. The module is part of a data-flow based computational steering system, SCIRun, used for the interactive solution and visualization of science and engineering problems <ref> [10, 11] </ref>. We present two different approaches to mesh visualization. The first approach provides visualization tools that allow the user to explore the mesh visually and therefore can enhance the understanding of spatial relationships. For this exploration, we have developed two different techniques. <p> The user is able to verify the integrity of the mesh, isolate and correct problem areas, and gain a better understanding of the mesh as a whole. 3 Implementation MeshView is a graphical analysis tool that is one module within a larger computational steering program, SCIRun <ref> [10] </ref>. SCIRun is written in C++, TCL/Tk [17], and OpenGL. It currently runs on Silicon Graphics (SGI) and SUN workstations. SCIRun is a dataflow program that allows the user to solve interactively computational problems and visualize them.
Reference: [11] <author> C.R. Johnson and S.G. Parker, </author> <title> "Applications in computational medicine using SCIRun: A computational steering programming environment", in Supercomputer, </title> <booktitle> 1995, </booktitle> <pages> pp. 2-19. </pages>
Reference-contexts: MeshView contains a suite of options to provide the user with interactive control for mesh visualization. The module is part of a data-flow based computational steering system, SCIRun, used for the interactive solution and visualization of science and engineering problems <ref> [10, 11] </ref>. We present two different approaches to mesh visualization. The first approach provides visualization tools that allow the user to explore the mesh visually and therefore can enhance the understanding of spatial relationships. For this exploration, we have developed two different techniques.
Reference: [12] <author> D. Kahaner, C. Moler, and S. Nash, </author> <title> Numerical Methods and Software, </title> <publisher> Prentice Hall, </publisher> <year> 1989. </year>
Reference-contexts: The condition number is a measure of how close the matrix is to being singular. The condition number is the reciprocal of the relative distance from the matrix to the set of singular matrices <ref> [12] </ref>. Matrices with large condition numbers are said to be ill-conditioned [13]. The ideal problem conditioning occurs for orthogonal matrices that have (A) 1, while an ill-conditioned matrix will have (A) 1. <p> The 1 norm is defined as k A k 1 = max n X j a ij j : (2) The size of the condition number is an inherent property of the matrix and is proportional to the size of the matrix or the number of degrees of freedom <ref> [12] </ref>. Additionally, the number of degrees of freedom is proportional to the mesh refinement, which is based on the volume of the elements [14].
Reference: [13] <author> G.H. Golub and C.F. Van Loan, </author> <title> Matrix Computations, </title> <publisher> Johns Hopkins University Press, </publisher> <address> 2nd edition, </address> <year> 1990. </year> <title> Table 3: Timings (in seconds) for calculating measures. </title> <note> Elements Volume Aspect Ratio Size v Neighbor 477 0.10 / 0.12 0.05 / 0.11 0.05 / 0.07 32594 2.79 / 5.54 2.39 / 5.34 1.94 / 4.32 98810 9.05 / 18.07 8.32 / 17.23 6.66 / 13.86 Table 4: Timings (in seconds) for editing. Elements Adding a node Deleting a node 477 0.07 / 0.13 0.23 / 0.53 32594 4.03 / 8.40 18.2 / 43.1 98810 13.9 / 28.4 69 / 134 </note>
Reference-contexts: The condition number is a measure of how close the matrix is to being singular. The condition number is the reciprocal of the relative distance from the matrix to the set of singular matrices [12]. Matrices with large condition numbers are said to be ill-conditioned <ref> [13] </ref>. The ideal problem conditioning occurs for orthogonal matrices that have (A) 1, while an ill-conditioned matrix will have (A) 1.
Reference: [14] <author> C.R. Johnson, </author> <title> Advanced Methods in Scientific Computing, </title> <institution> Department of Computer Science, </institution> <year> 1995, </year> <note> Lecture Notes. </note>
Reference-contexts: Additionally, the number of degrees of freedom is proportional to the mesh refinement, which is based on the volume of the elements <ref> [14] </ref>. While a quantitative relationship between the range to look at. condition number and the range of volumes within an unstructured tetrahedral mesh is still an open problem, it should be clear that there is a correspondence between the two.
Reference: [15] <author> O. Bertrand, </author> <title> "3D finite element method in brain electrical activity studies", in Biomagnetic Localization and 3D Modeling, </title> <editor> J. Nenonen, H.M. Rajala, and T. Katila, </editor> <booktitle> Eds., </booktitle> <pages> pp. 154-171. </pages> <institution> Helsinki University of Technology, </institution> <year> 1991. </year>
Reference-contexts: Users can use the histogram to isolate elements with "bad" aspect ratios. One formula for the aspect ratio of a tetrahedron is p 2 k , where k is the diameter of the sphere circumscribed about the tetrahedron and h k is the maximum distance between two vertices <ref> [15] </ref>. Fig. 5 shows a histogram of the aspect ratios of a mesh with approximately 10,000 nodes and 30,000 elements.
Reference: [16] <author> D.F. Watson, </author> <title> "Computing the n-dimensional Delaunay Tesselation with applications to Voronoi polytopes", </title> <journal> Computer Journal, </journal> <volume> vol. 24, no. 2, </volume> <pages> pp. 167-172, </pages> <year> 1981. </year>
Reference-contexts: The program allows the user to specify an element that needs editing, and will then add a new node at the centroid of the node. To re-tetrahedralize the mesh, the program simply sends the new point and the existing mesh to a procedure that implements Watson's algorithm <ref> [16] </ref>. field simulations. Shown here is a cutaway of the thorax, the heart surface and the electric current flow lines for a simulation of internal cardiac defibrillation.
Reference: [17] <author> J.K. Ousterhout, </author> <title> Tcl and the Tk Toolkit, </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: SCIRun is written in C++, TCL/Tk <ref> [17] </ref>, and OpenGL. It currently runs on Silicon Graphics (SGI) and SUN workstations. SCIRun is a dataflow program that allows the user to solve interactively computational problems and visualize them.
References-found: 17

