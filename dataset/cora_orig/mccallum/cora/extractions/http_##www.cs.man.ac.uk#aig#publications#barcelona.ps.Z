URL: http://www.cs.man.ac.uk/aig/publications/barcelona.ps.Z
Refering-URL: http://www.cs.man.ac.uk/aig/staff/roger/webrefs.html
Root-URL: http://www.cs.man.ac.uk
Title: Design Issues for Virtual Reality Systems  
Author: Roger Hubbold, Alan Murta, Adrian West, Toby Howard 
Address: Oxford Road, Manchester M13 9PL, UK  
Affiliation: Advanced Interfaces Group Department of Computer Science, University of Manchester  
Abstract: In this paper we describe a number of issues which are central to the design of a software architecture for a distributed, generic, virtual reality system. These include support for diverse and demanding applications, the management of time to provide high-quality interaction with tightly controlled closed-loop feedback, and the need for continuity of the experience presented to the user. These issues are being addressed in the design of a generic VR system called AVIARY. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A.J. West, T.L.J. Howard, R.J. Hubbold, A.D. Murta, D.N. Snowdon, and D.A. Butler. </author> <title> AVIARY A Generic Virtual Reality Interface for Real Applications. </title> <editor> In R.A. Earnshaw, M.A. Gigante, and H. Jones, editors, </editor> <booktitle> Virtual Reality Systems, chapter 15, </booktitle> <pages> pages 213-236. </pages> <publisher> Academic Press, </publisher> <month> March </month> <year> 1993. </year>
Reference-contexts: In the Advanced Interfaces Group at the University of Manchester we have been addressing this area. The prototype AVIARY system deals with some of the software architecture issues and is described elsewhere <ref> [1, 2, 3, 4] </ref>. In 1993 we established a VR laboratory in which to conduct experiments and to explore the application of VR techniques to real-world applications. Details can be found on the world-wide web at http://www.cs.man.ac.uk/aig/aig.html. <p> Whilst this approach is useful in smaller systems, for more ambitious environments it is rather limited and difficult to manage. The diversity of applications for which VR seems appropriate suggests that a variety of world models are required <ref> [1] </ref>. It is not possible to provide all features within a single world, not only due to the contradictions that would ensue, but also because of the performance implications of such an approach. <p> since it allows greater flexibility in the handling of virtual time (allowing multiple rates of flow within the system, for example), and separates world behaviour from specific performance-related metrics imposed by the underlying hardware. 5 The AVIARY system AVIARY is the generic VR support environment being developed by our group <ref> [1, 2] </ref>. This system provides a basis for us to explore many of the design issues addressed within this paper. The AVIARY system supports: A hierarchical world model constructed using object-oriented methods.
Reference: [2] <author> David N. Snowdon, Adrian J. West, and Toby L. J. Howard. </author> <title> Towards the Next Generation of Human-Computer Interface. </title> <booktitle> In Informatique'93: Interface to Real & Virtual Worlds, </booktitle> <pages> pages 399-408, </pages> <month> March </month> <year> 1993. </year>
Reference-contexts: In the Advanced Interfaces Group at the University of Manchester we have been addressing this area. The prototype AVIARY system deals with some of the software architecture issues and is described elsewhere <ref> [1, 2, 3, 4] </ref>. In 1993 we established a VR laboratory in which to conduct experiments and to explore the application of VR techniques to real-world applications. Details can be found on the world-wide web at http://www.cs.man.ac.uk/aig/aig.html. <p> since it allows greater flexibility in the handling of virtual time (allowing multiple rates of flow within the system, for example), and separates world behaviour from specific performance-related metrics imposed by the underlying hardware. 5 The AVIARY system AVIARY is the generic VR support environment being developed by our group <ref> [1, 2] </ref>. This system provides a basis for us to explore many of the design issues addressed within this paper. The AVIARY system supports: A hierarchical world model constructed using object-oriented methods.
Reference: [3] <author> D.N. Snowdon and A.J. West. AVIARY: </author> <title> Design Issues for Future Large-Scale Virtual Environments. </title> <journal> Presence, </journal> <volume> 3(4) </volume> <pages> 288-308, </pages> <year> 1994. </year>
Reference-contexts: In the Advanced Interfaces Group at the University of Manchester we have been addressing this area. The prototype AVIARY system deals with some of the software architecture issues and is described elsewhere <ref> [1, 2, 3, 4] </ref>. In 1993 we established a VR laboratory in which to conduct experiments and to explore the application of VR techniques to real-world applications. Details can be found on the world-wide web at http://www.cs.man.ac.uk/aig/aig.html.
Reference: [4] <author> David N. Snowdon and Adrian J. West. </author> <title> The AVIARY VR System: A Prototype Implementation. </title> <booktitle> In 6th ERCIM Workshop, </booktitle> <month> June </month> <year> 1994. </year>
Reference-contexts: In the Advanced Interfaces Group at the University of Manchester we have been addressing this area. The prototype AVIARY system deals with some of the software architecture issues and is described elsewhere <ref> [1, 2, 3, 4] </ref>. In 1993 we established a VR laboratory in which to conduct experiments and to explore the application of VR techniques to real-world applications. Details can be found on the world-wide web at http://www.cs.man.ac.uk/aig/aig.html.
Reference: [5] <author> George G. Robertson, Jock D. Mackinlay, and Stuart K. Card. </author> <title> Cone trees: Animated 3D visualizations of hierarchical information. </title> <journal> Communications of the ACM, </journal> <volume> 34(2) </volume> <pages> 189-194, </pages> <month> February </month> <year> 1991. </year>
Reference-contexts: More important is the creation of an environment in which the user remains comfortable and well oriented. In some cases this may demand real-time response, but in others it may be more important to maintain a sense of continuity <ref> [5] </ref>. We are used to dealing with a real world in which some actions may take a finite time to complete. Thus, when calling a lift, we do not necessarily expect that the lift will arrive instantaneously.
Reference: [6] <author> Roy S. Kalawsky. </author> <title> The Science of Virtual Reality and Virtual Environments. </title> <publisher> Addison-Wesley, </publisher> <year> 1993. </year>
Reference-contexts: Thus, a key issue for any immersive VR system is that of the `closed loop' feedback time for tracking the user's movements for both head and limbs <ref> [6] </ref>. Most low-cost VR systems are woefully inadequate in this respect, which is the primary reason that many VR demonstrations portray very simple models. Rapid feedback during navigation is central to the tight coupling of users' actions to the system's response.
Reference: [7] <institution> Silicon Graphics Inc., </institution> <address> 2011 N. Shoreline Boulevard, Mountain View, CA 94043, U.S.A. </address> <publisher> Workstation Product Documentation. </publisher>
Reference-contexts: support of these must be a central goal of our research. 3.1 Animation rates for high-performance workstations To understand better the issue of scene complexity and its effect on animation, we have considered the rendering speeds of current high-performance 3D workstations, such as the Silicon Graphics VGXT and Reality Engine <ref> [7] </ref>, and the Evans and Sutherland Freedom Graphics Series for Sun workstations [8]. The usual way manufacturers quote rendering performance is in terms of some number of notional triangles, quadrilaterals (or triangle or quadrilateral strips), with various shading options (flat, Gouraud, Phong etc.).
Reference: [8] <institution> Evans and Sutherland Design Systems Division, </institution> <address> 580 Arapeen Drive, Salt Lake City, Utah 84108, U.S.A. </address> <institution> Freedom Graphics System. </institution>
Reference-contexts: Animation rates for high-performance workstations To understand better the issue of scene complexity and its effect on animation, we have considered the rendering speeds of current high-performance 3D workstations, such as the Silicon Graphics VGXT and Reality Engine [7], and the Evans and Sutherland Freedom Graphics Series for Sun workstations <ref> [8] </ref>. The usual way manufacturers quote rendering performance is in terms of some number of notional triangles, quadrilaterals (or triangle or quadrilateral strips), with various shading options (flat, Gouraud, Phong etc.). Impressive rates, in the order of 1 million or more triangles per second can be achieved in theory.
Reference: [9] <author> CADCentre Ltd, </author> <title> High Cross, </title> <address> Madingley Road, Cambridge CB3 0HB. </address> <month> PDMS, </month> <title> Piping Design Management System. </title>
Reference-contexts: Generous though this may sound, in many applications it is inadequate. In one application we are studying, 3D CAD models contain as many as 800,000 primitives <ref> [9, 10] </ref>. These primitives include shapes such as planes, boxes, cylinders, spheres, and cones. Some of these generate many polygons, taking us three orders of magnitude beyond the 10,000 triangle limit for a 20 Hz display rate.
Reference: [10] <author> R.J. </author> <title> Hubbold and N.P. McPhater. The use of virtual reality for training process plant operatives. In Proceedings of EPSRC Conference on Virtual Reality and Rapid Protoyping for Engineering (James A. </title> <editor> Powell (Ed)), </editor> <booktitle> EPSRC Information Technology Awareness in Engineering, DRAL, </booktitle> <pages> pages 31-41, </pages> <month> January </month> <year> 1995. </year>
Reference-contexts: Generous though this may sound, in many applications it is inadequate. In one application we are studying, 3D CAD models contain as many as 800,000 primitives <ref> [9, 10] </ref>. These primitives include shapes such as planes, boxes, cylinders, spheres, and cones. Some of these generate many polygons, taking us three orders of magnitude beyond the 10,000 triangle limit for a 20 Hz display rate.
Reference: [11] <author> Seth J. Teller and Pat Hanrahan. </author> <title> Global visibility algorithms for illumination com-putations. </title> <booktitle> In Proc. ACM SIGGRAPH '93, </booktitle> <pages> pages 239-246, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: However, solutions to this are frequently specific to particular applications and to particular hardware platforms [14]. This issue is closely related 1 Since the original version of this paper was presented, there have been several developments in the area of culling and level-of-detail algorithms. See <ref> [11, 12, 13] </ref> for example. to the problem of hidden surface removal, and experience with this suggests that the use of application knowledge is a major factor in solving it effectively.
Reference: [12] <author> Seth J. Teller and Carlo H. Sequin. </author> <title> Visibility preprocessing for interactive walk-throughs. </title> <booktitle> In Proc. ACM SIGGRAPH '91, </booktitle> <pages> pages 61-69, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: However, solutions to this are frequently specific to particular applications and to particular hardware platforms [14]. This issue is closely related 1 Since the original version of this paper was presented, there have been several developments in the area of culling and level-of-detail algorithms. See <ref> [11, 12, 13] </ref> for example. to the problem of hidden surface removal, and experience with this suggests that the use of application knowledge is a major factor in solving it effectively.
Reference: [13] <author> John Rohlf and James Helman. IRIS performer: </author> <title> A high performance multiprocessing toolkit for real-time 3D graphics. </title> <editor> In Andrew Glassner, editor, </editor> <booktitle> Proceedings of SIGGRAPH '94 (Orlando, </booktitle> <address> Florida, </address> <month> July 24-29, </month> <year> 1994), </year> <booktitle> Computer Graphics Proceedings, Annual Conference Series, </booktitle> <pages> pages 381-395. </pages> <publisher> ACM SIGGRAPH, ACM Press, </publisher> <month> July </month> <year> 1994. </year> <note> ISBN 0-89791-667-0. </note>
Reference-contexts: However, solutions to this are frequently specific to particular applications and to particular hardware platforms [14]. This issue is closely related 1 Since the original version of this paper was presented, there have been several developments in the area of culling and level-of-detail algorithms. See <ref> [11, 12, 13] </ref> for example. to the problem of hidden surface removal, and experience with this suggests that the use of application knowledge is a major factor in solving it effectively.
Reference: [14] <institution> Silicon Graphics Inc., </institution> <address> 2011 N. Shoreline Boulevard, Mountain View, CA 94043, U.S.A. </address> <note> Iris Performer reference manual. </note>
Reference-contexts: However, solutions to this are frequently specific to particular applications and to particular hardware platforms <ref> [14] </ref>. This issue is closely related 1 Since the original version of this paper was presented, there have been several developments in the area of culling and level-of-detail algorithms. <p> Additionally, levels of detail usually applied as texture maps can be made dependent on the distance of the observer from each surface. Mipmaps offer one way to introduce greater detail as the observer moves closer to a surface <ref> [18, 14] </ref>. * With finite element models, we can use connectivity information in the element data structures to quickly determine a subset of potentially visible element faces.
Reference: [15] <author> John M. Airey, John H. Rohlf, and Frederick P. Brooks Jr. </author> <title> Towards image realism with interactive update rates in complex virtual building environments. </title> <journal> ACM Computer Graphics, </journal> <volume> 24(2) </volume> <pages> 41-50, </pages> <month> March </month> <year> 1990. </year>
Reference-contexts: Thus, if we know that the walls are solid, we need only display objects visible within the room, and perhaps a further subset visible through open doors or windows <ref> [15] </ref>. * In flight simulators it is common to employ a pre-processing step, based on binary space partition (BSP) trees and backface culling, in order to determine in a view-independent way those objects which are potentially visible from different viewpoints.
Reference: [16] <author> I.E. Sutherland, R.F. Sproull, and R.A. Schumacker. </author> <title> A characterisation of ten hidden-surface algorithms. </title> <journal> ACM Computing Surveys, </journal> <volume> 6(1) </volume> <pages> 1-55, </pages> <month> March </month> <year> 1974. </year>
Reference-contexts: Then, at runtime, only the subset of potentially visible objects requires processing, selected according to the real viewpoint <ref> [16, 17] </ref>. Additionally, levels of detail usually applied as texture maps can be made dependent on the distance of the observer from each surface.
Reference: [17] <author> Henry Fuchs. </author> <title> On visible surface generation by a priori tree structures. </title> <journal> ACM Computer Graphics, </journal> <volume> 14(3) </volume> <pages> 124-133, </pages> <month> July </month> <year> 1980. </year>
Reference-contexts: Then, at runtime, only the subset of potentially visible objects requires processing, selected according to the real viewpoint <ref> [16, 17] </ref>. Additionally, levels of detail usually applied as texture maps can be made dependent on the distance of the observer from each surface.
Reference: [18] <author> Lance Williams. </author> <title> Pyramidal parametrics. </title> <journal> ACM Computer Graphics, </journal> <volume> 17(3) </volume> <pages> 1-11, </pages> <month> July </month> <year> 1983. </year>
Reference-contexts: Additionally, levels of detail usually applied as texture maps can be made dependent on the distance of the observer from each surface. Mipmaps offer one way to introduce greater detail as the observer moves closer to a surface <ref> [18, 14] </ref>. * With finite element models, we can use connectivity information in the element data structures to quickly determine a subset of potentially visible element faces.
Reference: [19] <author> R. </author> <title> Held. Correlation and decorrelation between visual displays and motor output. In Motion sickness, visual displays, and armoured vehicle design. Aberdeen Proving Ground, </title> <institution> Maryland, Ballistic Research Laboratory, </institution> <year> 1990. </year>
Reference-contexts: As a result, input handling, simulation and rendering all occur within effectively different time-frames. This creates two problems: the skew in action and observation can be perceptually disturbing to the user <ref> [19] </ref>, and the lack of a global frame of reference may impair the integrity of the world simulation.
Reference: [20] <author> Martin Friedmann, Thad Starner, and Alex Pentland. </author> <title> Device synchronization using an optimal linear filter. </title> <editor> In R.A. Earnshaw, M.A. Gigante, and H. Jones, editors, </editor> <booktitle> Virtual Reality Systems, chapter 9, </booktitle> <pages> pages 119-132. </pages> <publisher> Academic Press, </publisher> <month> March </month> <year> 1993. </year>
Reference-contexts: One method which is currently used to tackle the cognitive skew problem is to use pre-dictive algorithms to calculate the location and motion of input sensors at some small temporal offset in the future in order to bring sensor time in-step with simulation or rendering completion time <ref> [20] </ref>. This has been shown to be more acceptable to the human perceptual system, although the shortfalls of this method can become apparent when the user is drawn to the temporal discrepancies (by hand-clapping in the real and virtual world, for example).
Reference: [21] <author> S.K. Card, T.P. Moran, and A. Newell. </author> <title> The Psychology of Human-Computer Interaction. </title> <publisher> Lawrence Erlbaum Associates, Publishers, </publisher> <address> Hillsdale, New Jersey, </address> <year> 1983. </year>
Reference-contexts: The only completely effective solution to this problem is to keep accumulated latencies below the minimum which can be perceived (around 25 msec for interactive tasks <ref> [21] </ref>), and this should become less of an issue as VR technologies improve. The rational handling of time within a simulated environment is a more difficult issue.
Reference: [22] <author> T. Little. </author> <title> Managing time in multimedia. </title> <editor> In J. Rosenberg, editor, </editor> <booktitle> SIGGRAPH '91 Panel Proceedings. ACM, </booktitle> <year> 1991. </year>
Reference-contexts: Some groundwork in this area has already been undertaken in the multimedia field, in which time-augmented Petri nets are used to assess synchronisation problems in the delivery of multimedia presentations <ref> [22] </ref>. Many existing VR systems are somewhat restrictive in their support for temporal management, and simply coordinate events with respect to some specific aspect of the VR platform, such as frame delivery rates.
Reference: [23] <author> T.L.J. Howard, W.T. Hewitt, R.J. Hubbold, and K.M. Wyrwas. </author> <title> A Practical Introduction to PHIGS and PHIGS PLUS. </title> <publisher> Addison-Wesley, </publisher> <address> Wokingham, England, </address> <year> 1991. </year>
Reference-contexts: Distributed graphics processing. The need for high-performance means that dedicated graphics hardware is required. In order to minimise communication in a distributed environment we use retained mode graphics, with picture information held in a local display list (or structure) store. For example, the prototype AVIARY system uses PHIGS <ref> [23] </ref> for the graphics. This allows small changes, such as altering a viewpoint, to be communicated very efficiently, but runs counter to the direct mode graphics used by many workstations.
Reference: [24] <author> Steven Frank, Henry Burkhardt, and James Rothnie. </author> <title> The KSR1: bridging the gap between shared memory and MPPs. </title> <booktitle> In Proceedings of Compcon93, </booktitle> <pages> pages 285-294, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: We are fortunate in having access to a 64-processor Kendall Square Research KSR1 a parallel, vir tual shared-memory computer <ref> [24] </ref>. This machine has 2 gigabytes of memory, an inter--processor communication speed of 1 gigabyte per second, and a theoretical peak computation rate of 2.4 gigaflops. This raw power is allowing us to explore computation-ally demanding applications such as scientific simulation and visualization, and medical imaging.
References-found: 24

