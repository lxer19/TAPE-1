URL: http://www.cs.panam.edu/~meng/unix-home/TechRep/TR94-19.ps.gz
Refering-URL: http://www.cs.panam.edu/~meng/unix-home/TechRep/
Root-URL: http://www.cs.panam.edu
Title: Interrupt Protocol Processing in the -kernel  
Author: Mats Bj orkman 
Address: Tucson, AZ 85721  
Affiliation: Department of Computer Science The University of Arizona  
Note: June  
Date: TR 94-19  27, 1994  
Abstract: On many modern processors, context switches are costly in terms of latency. In this report, we argue that latency caused by kernel thread scheduling for incoming network messages can be avoided in a number of common situations, where instead the interrupt handler itself can perform the necessary protocol processing. For processors with high context switch costs, this can give a significant performance improvement. To support our argumentation, we present an implementation of the x-kernel communication protocol execution environment that exploits this execution paradigm. We present measurements on DECstations and on the Intel Paragon, showing the performance gain to expect when performing protocol processing in the interrupt handler. 
Abstract-found: 1
Intro-found: 1
Reference: [BALL90] <author> B. Bershad, T. Anderson, E. Lazowska and H. Levy. </author> <title> Lightweight Remote Procedure Call, </title> <journal> In ACM Transactions on Computer Systems, </journal> <volume> vol 8 no 1, </volume> <pages> pp 37-55, </pages> <month> February </month> <year> 1990. </year>
Reference: [DBRD91] <author> R. Draves, B. Bershad, R. Rashid and R. Dean. </author> <title> Using Continuations to Implement Thread Management and Continuation in Operating Systems, </title> <booktitle> In Proc. 13th ACM Symposium on Operating Systems Principles, </booktitle> <pages> pp 122-136, </pages> <month> October </month> <year> 1991. </year>
Reference: [ECGS92] <author> T. von Eicken, D. Culler, S.C. Goldstein and K.E. Schauser. </author> <title> Active Messages: a Mechanism for Integrated Communication and Computation, </title> <booktitle> In Proc. of ACM XXX, </booktitle> <pages> pp 256-266, </pages> <year> 1992. </year>
Reference-contexts: Of course, the sending of a reply should not block if it is to be performed during interrupt handling. Active messages is an example of this kind of communication. Active messages is a communication mechanism that allows for efficient protocol processing <ref> [ECGS92] </ref>. The basic idea is that every incoming message carries a pointer to the handler that should be executed as a result of the message reception.
Reference: [HuPe91] <author> N. Hutchinson and L. Peterson. </author> <title> The x-kernel: An Architecture for Implementing Network Protocols , In IEEE Trans. </title> <booktitle> on Software Engineering, </booktitle> <month> Jan. </month> <year> 1991. </year> <month> 11 </month>
Reference-contexts: We have performed a number of experiments with interrupt handler protocol processing in the x-kernel environment. The x-kernel is a protocol execution environment developed at the University of Arizona <ref> [HuPe91] </ref>. It is a self-contained execution environment in which protocols can be implemented in a uniform, yet efficient way. The x-kernel provides the protocol implementer with a set of uniform interfaces to other protocols and to operating system services likely to be used by a protocol implementer.
References-found: 4

