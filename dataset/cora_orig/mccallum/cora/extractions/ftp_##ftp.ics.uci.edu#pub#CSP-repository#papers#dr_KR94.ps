URL: ftp://ftp.ics.uci.edu/pub/CSP-repository/papers/dr_KR94.ps
Refering-URL: 
Root-URL: 
Email: dechter@ics.uci.edu  irinar@ics.uci.edu  
Title: Directional Resolution: The Davis-Putnam Procedure, Revisited  
Author: Rina Dechter Irina Rish 
Keyword: Putnam procedure.  
Address: Irvine  Irvine  
Affiliation: Information and Computer Science University of California,  Information and Computer Science University of California,  
Abstract: The paper presents algorithm directional resolution, a variation on the original Davis-Putnam algorithm, and analyzes its worst-case behavior as a function of the topological structure of the theories. The notions of induced width and diversity are shown to play a key role in bounding the complexity of the procedure. The importance of our analysis lies in highlighting structure-based tractable classes of satisfiability and in providing theoretical guarantees on the time and space complexity of the algorithm. Contrary to previous assessments, we show that for many theories directional resolution could be an effective procedure. Our empirical tests confirm theoretical prediction, showing that on problems with special structures, like chains, directional resolution greatly outperforms one of the most effective satisfiability algorithm known to date, namely the popular Davis 
Abstract-found: 1
Intro-found: 1
Reference: [Arnborg et al., 1987] <author> S. Arnborg, D.G. Corneil and A. Proskurowski, </author> <title> "Complexity of finding embedding in a k-tree", </title> <journal> SIAM Journal of Algebraic Discrete Methods, </journal> <volume> 8(2), </volume> <year> 1987, </year> <pages> pp. 177-184. </pages>
Reference-contexts: Note that this deduction implicitly assumes that the algorithm eliminates duplicate clauses. 2 It is known that if a graph is embedded in a k-tree its induced width is bounded by k <ref> [Arnborg et al., 1987] </ref>. The definition is recursive. Definition 3: (k-trees) Step 1: A clique of size k is a k-tree. <p> ' is a formula whose interaction graph can be embedded in a k-tree then there is an ordering d such that the time complexity of directional resolution on that ordering is O (n 2 k+1 ). 2 Finding an ordering yielding the smallest induced width of a graph is NP-hard <ref> [Arnborg et al., 1987] </ref>. However, any ordering d yields a simple bound, wfl (d), of wfl. Consequently, when given a theory and its interaction graph, we will try to find an ordering that yields the smallest width possible. Several heuristic or-derings are available (see [Bertele and Brioshi, 1972]). <p> Similarly we also connected the n independent subtheories into a tree structure. The obtained results were similar to those on chains, so we report only the result on chains. We experimented also with random embeddings in k-trees <ref> [Arnborg et al., 1987] </ref>. However, we were unable to generate hard instances with more than few deadends. Consequently, the performance of both DR and DP-backtracking was similarly efficient. We measured CPU time for all algorithms, and the number of deadends for DP-backtracking as characteristics of problems' difficulty.
Reference: [Bertele and Brioshi, 1972] <author> U. Bertele and F. Brioschi, </author> <title> Nonserial Dynamic Programming, </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1972. </year>
Reference-contexts: However, any ordering d yields a simple bound, wfl (d), of wfl. Consequently, when given a theory and its interaction graph, we will try to find an ordering that yields the smallest width possible. Several heuristic or-derings are available (see <ref> [Bertele and Brioshi, 1972] </ref>). <p> Backjumping also outperforms DR. 7 Related work and conclusions Directional resolution belongs to a family of elimination algorithms first analyzed for optimization tasks in dynamic programming <ref> [Bertele and Brioshi, 1972] </ref> and later used in constraint satisfaction [Seidel, 1981, Dechter and Pearl, 1987] and in belief networks [Lauritzen and Spigelholter, 1988].
Reference: [Ben-Eliyahu and Dechter, 1991] <author> R. Ben-Eliyahu and R. Dechter, </author> <title> "Default logic, propositional logic and constraints", </title> <booktitle> in Proceedings of the National Conference on Artificial Intelligence (AAAI-91), </booktitle> <address> July 1991, Anaheim, CA, </address> <pages> pp. 379-385. </pages>
Reference-contexts: variables in each 20 experiments per each point Number of clauses CPU time (log scale) chains: static min-diversity ordering Since propositional satisfiability is a special case of constraint satisfaction, the induced-width bound could be obtained by mapping a propositional formula into the relational framework of a constraint satisfaction problem (see <ref> [Ben-Eliyahu and Dechter, 1991] </ref>), and applying and applying adaptive consistency, the elimination algorithm tailored for constraint satisfaction problems [Dechter and Pearl, 1987, Seidel, 1981]. We have recently shown, however, that this kind of pair wise elimination operation as performed by directional resolution is more effective.
Reference: [Crawford and Auton, 1993] <author> J. Crawford and L. Au-ton, </author> <title> "Experimental results on the crossover point in satisfiability problems", </title> <booktitle> in Proceedings of AAAI-93, </booktitle> <year> 1993, </year> <pages> pp 21-27. </pages>
Reference-contexts: Algorithm bounded directional resolution parallels algorithms for directional k-consistency in constraint satisfaction problems [Dechter and Pearl, 1987]. 6 Experimental evaluation DP-backtracking has been implemented in C language as a variant of the Davis-Putnam procedure (see Figure 6). It has been augmented with the 2-literal clause heuristic proposed in <ref> [Crawford and Auton, 1993] </ref> which prefers a variable that would cause the largest number of unit propagations. The number of possible unit propagations is approximated by the number of 2-literal clauses in which the variables appear. The modified version significantly outperforms DP-backtracking without this heuristic [Crawford and Auton, 1993]. <p> 2-literal clause heuristic proposed in <ref> [Crawford and Auton, 1993] </ref> which prefers a variable that would cause the largest number of unit propagations. The number of possible unit propagations is approximated by the number of 2-literal clauses in which the variables appear. The modified version significantly outperforms DP-backtracking without this heuristic [Crawford and Auton, 1993]. In order to find a solution following DR we ran DP-backtracking using the reverse ordering of variables used by DR, but without the 2-literal clause heuristic. The reason is that we wanted to fix the order of variables. <p> All the experiments before used min-diversity ordering. When experimenting with different orderings (input and min-width) we observed similar results (Figure 9b,c). We also experimented a little with the actual code of tableau <ref> [Crawford and Auton, 1993] </ref>, Crawford and Auton's implementation of Davis-Putnam procedure with various heuristics. We observed a similar be-haviour on chain problems. Although some problem instances hard for our version of DP-backtracking were easy for tableau, others were extremely difficult for both algorithms.
Reference: [Davis et al., 1962] <author> M. Davis, G. Logemann and D. Loveland, </author> <title> "A machine program for theorem proving", </title> <journal> Communications of the ACM, </journal> <volume> 5, </volume> <year> 1962, </year> <pages> pp. 394-397. </pages>
Reference-contexts: This fl This work was partially supported by NSF grant IRI-9157636, by Air Force Office of Scientific Research grant AFOSR 900136, by Toshiba of America, and by a Xerox grant. competing algorithm, proposed in 1962 by Davis, Lo-gemann, and Loveland <ref> [Davis et al., 1962] </ref>, searches through the space of possible truth assignments while performing unit resolution until quiesience at each step. We will refer to the first algorithm as DP elimination and to the second as DP backtracking. The latter was presented in [Davis et al., 1962] as a minor syntactic <p> in 1962 by Davis, Lo-gemann, and Loveland <ref> [Davis et al., 1962] </ref>, searches through the space of possible truth assignments while performing unit resolution until quiesience at each step. We will refer to the first algorithm as DP elimination and to the second as DP backtracking. The latter was presented in [Davis et al., 1962] as a minor syntactic change to the first: the elimination rule (rule III in [Davis and Putnam, 1960]) in DP-elimination was replaced by the splitting rule (rule III 0 in [Davis et al., 1962]) in order to avoid the memory explosion encountered when empirically testing DP-elimination. <p> The latter was presented in <ref> [Davis et al., 1962] </ref> as a minor syntactic change to the first: the elimination rule (rule III in [Davis and Putnam, 1960]) in DP-elimination was replaced by the splitting rule (rule III 0 in [Davis et al., 1962]) in order to avoid the memory explosion encountered when empirically testing DP-elimination. By refraining from an explicit analysis of this exchange (beyond the short comment on memory explosion), the authors of [Davis et al., 1962] may have left the impression that the two algorithms are basically identical. <p> and Putnam, 1960]) in DP-elimination was replaced by the splitting rule (rule III 0 in <ref> [Davis et al., 1962] </ref>) in order to avoid the memory explosion encountered when empirically testing DP-elimination. By refraining from an explicit analysis of this exchange (beyond the short comment on memory explosion), the authors of [Davis et al., 1962] may have left the impression that the two algorithms are basically identical. Indeed, from then on, most work on the Davis-Putnam procedure quotes the backtracking version [Goldberg et al., 1982, Selman, 1992], wrongly suggesting that this is the algorithm presented in [Davis and Putnam, 1960]. <p> Third, we present a new parameter, called diversity, that gives rise to new tractable classes. On the empirical side, we qualify prior empirical tests in <ref> [Davis et al., 1962] </ref> by showing that for uniform random propositional theories DP-backtracking outperforms DP-elimination by far.
Reference: [Davis and Putnam, 1960] <author> M. Davis and H. Putnam, </author> <title> "A computing procedure for quantification theory", </title> <journal> Journal of the ACM, </journal> <volume> 7, </volume> <year> 1960, </year> <pages> pp. 201-215. </pages>
Reference-contexts: 1 Introduction In 1960, Davis and Putnam <ref> [Davis and Putnam, 1960] </ref> presented their resolution algorithm. They proved that a restricted amount of resolution, if performed systematically along some order of the atomic formulas, is sufficient for deciding satisfiability. <p> We will refer to the first algorithm as DP elimination and to the second as DP backtracking. The latter was presented in [Davis et al., 1962] as a minor syntactic change to the first: the elimination rule (rule III in <ref> [Davis and Putnam, 1960] </ref>) in DP-elimination was replaced by the splitting rule (rule III 0 in [Davis et al., 1962]) in order to avoid the memory explosion encountered when empirically testing DP-elimination. <p> Indeed, from then on, most work on the Davis-Putnam procedure quotes the backtracking version [Goldberg et al., 1982, Selman, 1992], wrongly suggesting that this is the algorithm presented in <ref> [Davis and Putnam, 1960] </ref>. In this paper, we wish to "revive" the DP-elimination algorithm by studying its virtues theoretically and by subjecting it to a more extensive empirical testing. <p> A clause is positive if it contains only positive literals and is negative if it contains negative literals only. A k-cnf formula is one whose clauses are all of length k or less. 3 DP-elimination Directional Resolution The DP-elimination <ref> [Davis and Putnam, 1960] </ref> is an ordering-based restricted resolution that can be described as follows. Given an arbitrary ordering of the propositional variables, we assign to each clause the index of the highest ordered literal in that clause. <p> Such a clause, if existed, would not have allowed the partial model q 1 ; :::; q i , thus leading to a contradiction. 2 Corollary 1 : <ref> [Davis and Putnam, 1960] </ref> A theory has a non-empty directional extension iff it is satisfiable. 2 Clearly, the effectiveness of directional resolution both for satisfiability and for subsequent query processing depends on the the size of its output theory E d (').
Reference: [Dechter and Pearl, 1987] <author> R. Dechter and J. Pearl, </author> <title> "Network-based heuristics for constraint satisfaction problems", </title> <journal> in Artificial Intelligence, </journal> <volume> 34, </volume> <year> 1987, </year> <pages> pp. 1-38. </pages>
Reference-contexts: Second, we offset the known worst-case exponential complexities [Galil, 1977, Goerdt, 1992] by showing that the algorithm is tractable for many of the known tractable classes for satisfiability (e.g., 2-cnf s and Horn clauses) and for constraint satisfaction problems <ref> [Dechter and Pearl, 1987, Dechter and Pearl, 1991] </ref> (e.g., causal theories and theories having a bounded induced width). Third, we present a new parameter, called diversity, that gives rise to new tractable classes. <p> The size of this parent set is the width of A relative to d. The width w (d) of an ordering d is the maximum width of nodes along the ordering, and the width w of a graph is the minimal width of all its orderings <ref> [Freuder, 1982, Dechter and Pearl, 1987] </ref>. <p> The algorithm records clauses of size k or less when k is a constant. Consequently, its complexity is polynomial in k. Algorithm bounded directional resolution parallels algorithms for directional k-consistency in constraint satisfaction problems <ref> [Dechter and Pearl, 1987] </ref>. 6 Experimental evaluation DP-backtracking has been implemented in C language as a variant of the Davis-Putnam procedure (see Figure 6). <p> Backjumping also outperforms DR. 7 Related work and conclusions Directional resolution belongs to a family of elimination algorithms first analyzed for optimization tasks in dynamic programming [Bertele and Brioshi, 1972] and later used in constraint satisfaction <ref> [Seidel, 1981, Dechter and Pearl, 1987] </ref> and in belief networks [Lauritzen and Spigelholter, 1988]. The complexity of all these elimination algorithms can be bounded as a function of the induced width wfl of the undirected graph characteristic of each problem instance. <p> ordering Since propositional satisfiability is a special case of constraint satisfaction, the induced-width bound could be obtained by mapping a propositional formula into the relational framework of a constraint satisfaction problem (see [Ben-Eliyahu and Dechter, 1991]), and applying and applying adaptive consistency, the elimination algorithm tailored for constraint satisfaction problems <ref> [Dechter and Pearl, 1987, Seidel, 1981] </ref>. We have recently shown, however, that this kind of pair wise elimination operation as performed by directional resolution is more effective.
Reference: [Dechter and Pearl, 1991] <author> R. Dechter and J. Pearl, </author> <title> "Directed constraint networks: A relational framework for causal models", </title> <booktitle> in Proceedings of the Twelfth International Joint Conference on Artificial Intelligence (IJCAI-91), </booktitle> <address> Sidney, Australia, </address> <month> August </month> <year> 1991, </year> <pages> pp. 1164-1170. </pages>
Reference-contexts: Second, we offset the known worst-case exponential complexities [Galil, 1977, Goerdt, 1992] by showing that the algorithm is tractable for many of the known tractable classes for satisfiability (e.g., 2-cnf s and Horn clauses) and for constraint satisfaction problems <ref> [Dechter and Pearl, 1987, Dechter and Pearl, 1991] </ref> (e.g., causal theories and theories having a bounded induced width). Third, we present a new parameter, called diversity, that gives rise to new tractable classes. <p> Note that the diversity of theories in example 3 along the natural ordering, is 1. Zero-diversity theories generalize the notion of causal theories defined for general networks of multivalued relations <ref> [Dechter and Pearl, 1991] </ref>. According to the definition, theories specified in the form of cnfs would correspond to causal if there is an ordering of the symbols such that each bucket contains only one clause. Therefore, a causal cnf theory has zero-diversity.
Reference: [Dechter, 1990] <author> R. Dechter, </author> <title> "Enhancement schemes for constraint processing: Backjumping, learning and cutset decomposition", </title> <journal> Artificial Intelligence, </journal> <volume> 41, </volume> <year> 1990, </year> <pages> 273-312. </pages>
Reference-contexts: Not knowing the structure hurts DP-backtracking. Choosing the right ordering would help but this may be hard to recognize without some preprocessing. Other variants of backtracking that are capable of exploiting the structure like backjumping <ref> [Dechter, 1990] </ref> would avoid useless re-instantiation of variables sometimes performed by DP-backtracking . Experiments with backjumping on the same chain instances as used in Table 2 showed that all the problems that were hard for DP-backtracking were quite easy for backjumping (see Figure 10).
Reference: [Even et al., 1976] <author> S. Even, A. Itai, and A. Shamir, </author> <title> "On the complexity of timetable and multi-commodity flow", </title> <journal> SIAM Journal on Computing, </journal> <volume> 5, </volume> <year> 1976, </year> <pages> 691-703. </pages>
Reference-contexts: Clearly, this algorithm is not the most effective one for satisfiability of 2-cnfs. Satisfiability for these theories can be decided in linear time <ref> [Even et al., 1976] </ref>. However, as noted earlier, DR achieves more than satisfiability, it compiles a theory that allows model generation in linear time.
Reference: [Freuder, 1982] <author> E.C. Freuder, </author> <title> "A sufficient condition for backtrack-free search", </title> <journal> Journal of the ACM, </journal> <volume> 29, </volume> <year> 1982, </year> <pages> 24-32. </pages>
Reference-contexts: The size of this parent set is the width of A relative to d. The width w (d) of an ordering d is the maximum width of nodes along the ordering, and the width w of a graph is the minimal width of all its orderings <ref> [Freuder, 1982, Dechter and Pearl, 1987] </ref>.
Reference: [Galil, 1977] <author> Z. Galil, </author> <title> "On the complexity of regular resolution and the Davis-Putnam procedure", </title> <booktitle> Theoretical Computer Science 4, </booktitle> <year> 1977, </year> <pages> 23-46. </pages>
Reference-contexts: They proved that a restricted amount of resolution, if performed systematically along some order of the atomic formulas, is sufficient for deciding satisfiability. This algorithm, in its original form, has received limited attention, and analyses of its performance have emphasized its worst-case exponential behavior <ref> [Galil, 1977, Goerdt, 1992] </ref>, while neglecting its virtues. This happened, in our view, because the algorithm was immediately overshadowed by a competitor with nearly the same name: The Davis-Putnam Procedure. <p> First, we show that, in addition to determining satisfiability, the algorithm generates an equivalent theory that facilitates model generation and query processing. Consequently, it may be better viewed as a knowledge compilation algorithm. Second, we offset the known worst-case exponential complexities <ref> [Galil, 1977, Goerdt, 1992] </ref> by showing that the algorithm is tractable for many of the known tractable classes for satisfiability (e.g., 2-cnf s and Horn clauses) and for constraint satisfaction problems [Dechter and Pearl, 1987, Dechter and Pearl, 1991] (e.g., causal theories and theories having a bounded induced width).
Reference: [Goerdt, 1992] <author> A. Goerdt, </author> <title> "Davis-Putnam resolution versus unrestricted resolution", </title> <journal> Annals of Mathematics and Artificial Intelligence, </journal> <volume> 6, </volume> <year> 1992, </year> <pages> 169-184. </pages>
Reference-contexts: They proved that a restricted amount of resolution, if performed systematically along some order of the atomic formulas, is sufficient for deciding satisfiability. This algorithm, in its original form, has received limited attention, and analyses of its performance have emphasized its worst-case exponential behavior <ref> [Galil, 1977, Goerdt, 1992] </ref>, while neglecting its virtues. This happened, in our view, because the algorithm was immediately overshadowed by a competitor with nearly the same name: The Davis-Putnam Procedure. <p> First, we show that, in addition to determining satisfiability, the algorithm generates an equivalent theory that facilitates model generation and query processing. Consequently, it may be better viewed as a knowledge compilation algorithm. Second, we offset the known worst-case exponential complexities <ref> [Galil, 1977, Goerdt, 1992] </ref> by showing that the algorithm is tractable for many of the known tractable classes for satisfiability (e.g., 2-cnf s and Horn clauses) and for constraint satisfaction problems [Dechter and Pearl, 1987, Dechter and Pearl, 1991] (e.g., causal theories and theories having a bounded induced width).
Reference: [Goldberg et al., 1982] <author> A. Goldberg, P. Purdom and C. Brown, </author> <title> "Average time analysis of simplified Davis-Putnam procedures", </title> <journal> Information Processing Letters, </journal> <volume> 15, </volume> <year> 1982, </year> <pages> 72-75. </pages>
Reference-contexts: By refraining from an explicit analysis of this exchange (beyond the short comment on memory explosion), the authors of [Davis et al., 1962] may have left the impression that the two algorithms are basically identical. Indeed, from then on, most work on the Davis-Putnam procedure quotes the backtracking version <ref> [Goldberg et al., 1982, Selman, 1992] </ref>, wrongly suggesting that this is the algorithm presented in [Davis and Putnam, 1960]. In this paper, we wish to "revive" the DP-elimination algorithm by studying its virtues theoretically and by subjecting it to a more extensive empirical testing.
Reference: [McAllester] <author> D. McAllester, </author> <title> Private communication </title>
Reference-contexts: When incorporating this dynamic-ordering variation to directional resolution, satisfiability will be determined polynomi-ally (for Horn theories) if the algorithm terminates once no unit clauses are available. However, executing the algorithm to full completion may result in long output theories <ref> [McAllester] </ref>. We now show that definite Horn theories of zero diversity can be given a simple graph interpretation, yielding a more accurate estimate of the extension's size for definite and Horn theories. One may question the usefulness of this exercise since satisfiability is not a problem for Horn theories.
Reference: [Mitchell et al., 1992] <author> D. Mitchell, B. Selman and H. Levesque, </author> <title> "Hard and Easy Distributions of SAT Problems", </title> <booktitle> in Proceedings of AAAI-92, </booktitle> <year> 1992. </year>
Reference-contexts: Several random generators were used in order to test the algorithms over problems with different structure. To generate uniform k-cnfs we used the generator proposed by <ref> [Mitchell et al., 1992] </ref> taking as input the number of variables n, the number of clauses m, and the number of literals per clause k. We generate each clause randomly choosing k variables from the set of n variables and by determining the polarity of each literal with probability 0.5.
Reference: [Seidel, 1981] <author> R. Seidel, </author> <title> "A new method for solving constraint satisfaction problems", </title> <booktitle> in Proceedings of the Seventh international joint conference on Artificial Intelligence (IJCAI-81), </booktitle> <address> Vancouver, Canada, </address> <month> August </month> <year> 1981, </year> <pages> pp. 338-342. </pages>
Reference-contexts: Backjumping also outperforms DR. 7 Related work and conclusions Directional resolution belongs to a family of elimination algorithms first analyzed for optimization tasks in dynamic programming [Bertele and Brioshi, 1972] and later used in constraint satisfaction <ref> [Seidel, 1981, Dechter and Pearl, 1987] </ref> and in belief networks [Lauritzen and Spigelholter, 1988]. The complexity of all these elimination algorithms can be bounded as a function of the induced width wfl of the undirected graph characteristic of each problem instance. <p> ordering Since propositional satisfiability is a special case of constraint satisfaction, the induced-width bound could be obtained by mapping a propositional formula into the relational framework of a constraint satisfaction problem (see [Ben-Eliyahu and Dechter, 1991]), and applying and applying adaptive consistency, the elimination algorithm tailored for constraint satisfaction problems <ref> [Dechter and Pearl, 1987, Seidel, 1981] </ref>. We have recently shown, however, that this kind of pair wise elimination operation as performed by directional resolution is more effective.
Reference: [Selman, 1992] <author> B. Selman, H. Levesque and D. Mitchell, </author> <title> "A new method for solving hard satisfi-ability problems", </title> <booktitle> in Proceedings of the Tenth National Conference on Artificial Intelligence (AAAI-92), </booktitle> <address> San Jose, CA, </address> <month> July </month> <year> 1992. </year>
Reference-contexts: By refraining from an explicit analysis of this exchange (beyond the short comment on memory explosion), the authors of [Davis et al., 1962] may have left the impression that the two algorithms are basically identical. Indeed, from then on, most work on the Davis-Putnam procedure quotes the backtracking version <ref> [Goldberg et al., 1982, Selman, 1992] </ref>, wrongly suggesting that this is the algorithm presented in [Davis and Putnam, 1960]. In this paper, we wish to "revive" the DP-elimination algorithm by studying its virtues theoretically and by subjecting it to a more extensive empirical testing.
Reference: [Lauritzen and Spigelholter, 1988] <author> S.L. Lauritzen and D.J. Spigelholter, </author> <title> "Local computations with probabilities on graphical structures and their applications to expert systems", </title> <journal> Journal of the Royal Statistical Society, Series, B, </journal> <volume> 50, </volume> <year> 1988, </year> <pages> pp. 65-74. </pages> <editor> [Van Beek and Dechter, 1993] P. van Beek and R. </editor> <title> Dechter. On the minimality and decomposability of row-convex constraint networks, </title> <month> June, </month> <year> 1993. </year> <note> Submitted manuscript. </note> <author> [Van Beek and Dechter, 1993] P. van Beek and R. Dechter. </author> <title> Constraint tightness vs global consistency November, </title> <note> 1993. Submitted manuscript. </note>
Reference-contexts: Backjumping also outperforms DR. 7 Related work and conclusions Directional resolution belongs to a family of elimination algorithms first analyzed for optimization tasks in dynamic programming [Bertele and Brioshi, 1972] and later used in constraint satisfaction [Seidel, 1981, Dechter and Pearl, 1987] and in belief networks <ref> [Lauritzen and Spigelholter, 1988] </ref>. The complexity of all these elimination algorithms can be bounded as a function of the induced width wfl of the undirected graph characteristic of each problem instance.
References-found: 19

