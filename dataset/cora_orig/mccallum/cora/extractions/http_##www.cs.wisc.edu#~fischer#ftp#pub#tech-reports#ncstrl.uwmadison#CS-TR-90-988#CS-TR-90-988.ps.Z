URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/CS-TR-90-988/CS-TR-90-988.ps.Z
Refering-URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/CS-TR-90-988/
Root-URL: http://www.cs.wisc.edu
Title: Case-Based Reasoning with Noisy Case Boundaries: An Application in Molecular Biology  
Author: Jude W. Shavlik 
Abstract: University of Wisconsin Computer Sciences Technical Report 988 (Decemember 1990) 
Abstract-found: 1
Intro-found: 1
Reference: [Alberts88] <author> B. M. Alberts, </author> <title> Mapping and Sequencing the Human Genome, </title> <publisher> National Academy Press, </publisher> <address> Washington, D.C., </address> <year> 1988. </year>
Reference-contexts: We will return to the topic of reading frames later they play a major role in this paper because they determine case boundaries. The Human Genome Project <ref> [Alberts88] </ref> is a massive, world-wide research project that has the goal of determining the sequence of human DNA and locating all the genes within it. The genomes of several other scientifically important species are also being sought. <p> Sequencing is estimated to have an error rate of 1% <ref> [Alberts88] </ref>; the wrong nucleotide can be recorded or, more disastrously, an extra nucleotide can be inserted or an existing one can be missed. As further explained later, these insertions and deletions greatly affect the translation process, due to the triplet nature of the genetic code.
Reference: [Ashley90] <author> K. Ashley, </author> <title> Modeling Legal Argument, </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1990. </year>
Reference-contexts: This style of AI problem solving has been successfully applied to a wide range of problems including cooking [Hammond90], predicting the structure of proteins [Zhang89], medical reasoning [Porter90], and legal reasoning <ref> [Ashley90] </ref>. Given a new problem to solve, the initial step a case-based reasoner takes is to recall relevant cases from its memory. Since it is unlikely the current situation is completely identical to a previous one, some sort of partial matching is needed.
Reference: [Bilofsky88] <author> H. S. Bilofsky and C. Burks, </author> <title> "The GenBank Genetic Sequence Data Bank," </title> <journal> Nucleic Acids Research 16, </journal> <year> (1988), </year> <pages> pp. 1861-1864 </pages> . 
Reference-contexts: The computational methods this paper presents are designed to locate genes and be robust in the presence of frameshift errors. There are several international databases that store biological sequence data, most notably Genbank <ref> [Bilofsky88] </ref> and Protein Information Resource (PIR) [George86]. These databases store "cases": complete genes (GenBank) and complete proteins (PIR).
Reference: [DARPA89] <author> DARPA, </author> <booktitle> Proceedings of the Case-Based Reasoning Workshop, </booktitle> <publisher> Morgan-Kaufmann, </publisher> <address> Los Altos, CA, </address> <month> May </month> <year> 1989. </year>
Reference-contexts: INTRODUCTION Recently, there has been substantial attention given to case-based approaches to intelligent reasoning <ref> [DARPA89] </ref>. This paradigm, which also goes by the names of memory-based reasoning [Stanfill86] and instance-based reasoning [Kibler87], relies on memory of previous cases to solve current problems.
Reference: [Dayhoff78] <author> M. O. Dayhoff, </author> <title> Atlas of Protein Sequence and Structure, </title> <booktitle> National Biomedical Research Foundation, </booktitle> <address> Wash., D. C., </address> <year> 1978. </year>
Reference-contexts: We convert to proteins, rather than directly matching DNA to GenBank entries, because only partial matches to amino acids are biologically well-defined; BLAST uses the PAM 120 matrix <ref> [Dayhoff78] </ref> to define the similarity between two amino acids. Also, due to the genetic code's degeneracy and the different codon-usage patterns of various species, vastly different DNA sequences may lead to quite similar protein sequences.
Reference: [George86] <author> D. G. George, W. C. Barker and L. T. Hunt, </author> <title> "The Protein Identification Resource," </title> <journal> Nucleic Acids Research 14, </journal> <year> (1986), </year> <pages> pp. 11-15. </pages>
Reference-contexts: The computational methods this paper presents are designed to locate genes and be robust in the presence of frameshift errors. There are several international databases that store biological sequence data, most notably Genbank [Bilofsky88] and Protein Information Resource (PIR) <ref> [George86] </ref>. These databases store "cases": complete genes (GenBank) and complete proteins (PIR). A number of researchers have developed "case-based" algorithms that partially match DNA subsequences (or the corresponding amino-acid sequences) to these databases (e.g., [Lipman85, Myers90]); however, their methods all suffer from being extremely sensitive to frameshift errors.
Reference: [Golumbic88] <author> M. C. Golumbic and P. L. Hammer, </author> <title> "Stability in Circular Arc Graphs," </title> <journal> Journal of Algorithms 9, </journal> <year> (1988), </year> <pages> pp. 314-330. </pages>
Reference-contexts: Page 8 Case-Based Reasoning with Noisy Case Boundaries weights are one, can be solved in O (N log N) steps <ref> [Golumbic88, Masuda88] </ref>, and preliminary work by Wisconsin computer science graduate student J. Meidanis has shown that an O (N log N) algorithm is also possible for the general case.
Reference: [Gribskov84] <author> M. Gribskov, J. Devereux and R. R. Burgess, </author> <title> "The Codon Preference Plot: Graphical Analysis of Protein Coding Sequences and Prediction of Gene Expression," </title> <journal> Nucleic Acids Research 12, </journal> <year> (1984), </year> <pages> pp. </pages> <month> 539-549. </month> <title> Page 9 Case-Based Reasoning with Noisy Case Boundaries </title>
Reference-contexts: Research along the lines of the first approach includes <ref> [Gribskov84, Staden82] </ref>. Approach two has also been investigated [Lapedes89, Noordewier90, Stormo82, Towell90]. CONCLUSION We have presented a case-based approach to gene finding that is robust in the presence of errors both in the input data and in the case libraries.
Reference: [Hammond90] <author> K. J. Hammond, </author> <title> "Explaining and Repairing Plans that Fail," </title> <booktitle> Artificial Intelligence 45, </booktitle> <month> 1-2 </month> <year> (1990), </year> <pages> pp. 173-228. </pages>
Reference-contexts: This style of AI problem solving has been successfully applied to a wide range of problems including cooking <ref> [Hammond90] </ref>, predicting the structure of proteins [Zhang89], medical reasoning [Porter90], and legal reasoning [Ashley90]. Given a new problem to solve, the initial step a case-based reasoner takes is to recall relevant cases from its memory.
Reference: [Kibler87] <author> D. Kibler and D. W. Aha, </author> <title> "Learning Representative Exemplars of Concepts: An Initial Case Study," </title> <booktitle> Proceedings of the Fourth International Workshop on Machine Learning, </booktitle> <address> Irvine, CA, </address> <month> June </month> <year> 1987, </year> <pages> pp. 24-30. </pages>
Reference-contexts: INTRODUCTION Recently, there has been substantial attention given to case-based approaches to intelligent reasoning [DARPA89]. This paradigm, which also goes by the names of memory-based reasoning [Stanfill86] and instance-based reasoning <ref> [Kibler87] </ref>, relies on memory of previous cases to solve current problems. In contrast to more traditional approaches which create solutions from "scratch" by reasoning from "first principles", case-based problem solvers retrieve similar episodes from the past and use them to closely guide the solution to the current task.
Reference: [Kolodner84] <author> J. L. Kolodner, </author> <title> Retrieval and Organizational Strategies in Conceptual Memory, </title> <publisher> Lawrence Erlbaum and Associates, </publisher> <address> Hillsdale, NJ, </address> <year> 1984. </year>
Reference-contexts: Since it is unlikely the current situation is completely identical to a previous one, some sort of partial matching is needed. Often this involves selecting some cues and using these to index into memory <ref> [Kolodner84] </ref>. However, this presupposes that the case-based reasoner is somehow given a well-defined current situation one where the "boundaries" of the current case are cleanly defined. Unfortunately, the real-world is often "continuous", and the problem of accurately parsing experience into discrete cases is extremely challenging.
Reference: [Lapedes89] <author> A. Lapedes, C. Barnes, C. Burks, R. Farber and K. Sirotkin, </author> <title> "Application of Neural Networks and Other Machine Learning Algorithms to DNA Sequence Analysis," Computers and DNA, </title> <booktitle> SFI Studies in the Sciences of Complexity VII, (1989), </booktitle> <publisher> Addison-Wesley. </publisher>
Reference-contexts: Several basic approaches are being investigated within the AI and related communities: (1) Development of algorithms that perform similarity matches to known genes (i.e., case-based reasoning) [Lipman85, Myers90, this paper]. Case-Based Reasoning with Noisy Case Boundaries (2) Using machine learning to learn the general characteristics of genes <ref> [Lapedes89, Noordewier90, Stormo82, Towell90] </ref>. (3) Creating grammars that can be used to recognize genes [Searls88, Searls89]. This remainder of this article presents an approach that falls into the first category. <p> Research along the lines of the first approach includes [Gribskov84, Staden82]. Approach two has also been investigated <ref> [Lapedes89, Noordewier90, Stormo82, Towell90] </ref>. CONCLUSION We have presented a case-based approach to gene finding that is robust in the presence of errors both in the input data and in the case libraries.
Reference: [Lipman85] <author> D. J. Lipman and W. R. Pearson, </author> <title> "Rapid and Sensitive Protein Similarity Searches," </title> <booktitle> Science 227, </booktitle> <year> (1985), </year> <pages> pp. 1435-1441. </pages>
Reference-contexts: Several basic approaches are being investigated within the AI and related communities: (1) Development of algorithms that perform similarity matches to known genes (i.e., case-based reasoning) <ref> [Lipman85, Myers90, this paper] </ref>. Case-Based Reasoning with Noisy Case Boundaries (2) Using machine learning to learn the general characteristics of genes [Lapedes89, Noordewier90, Stormo82, Towell90]. (3) Creating grammars that can be used to recognize genes [Searls88, Searls89]. <p> These databases store "cases": complete genes (GenBank) and complete proteins (PIR). A number of researchers have developed "case-based" algorithms that partially match DNA subsequences (or the corresponding amino-acid sequences) to these databases (e.g., <ref> [Lipman85, Myers90] </ref>); however, their methods all suffer from being extremely sensitive to frameshift errors. These previous approaches do an excellent job of matching in the presence of substitution errors mistaking an A for a C, say. In fact, one of their primary strengths is that they can find homologous matches.
Reference: [Masuda88] <author> S. Masuda and K. Nakajima, </author> <title> "An Optimal Algorithm for Finding a Maximum Independent Set of a Circular Arc Graph," </title> <journal> Society for Industrial and Applied Mathematics Journal of Computing 17, </journal> <year> (1988), </year> <pages> pp. 41-52. </pages>
Reference-contexts: Page 8 Case-Based Reasoning with Noisy Case Boundaries weights are one, can be solved in O (N log N) steps <ref> [Golumbic88, Masuda88] </ref>, and preliminary work by Wisconsin computer science graduate student J. Meidanis has shown that an O (N log N) algorithm is also possible for the general case.
Reference: [Myers90] <author> E. W. Myers, W. Miller, S. F. Altschul, W. Gish and D. Lipman, </author> <title> "Basic Local Alignment Search Tool," </title> <journal> Journal Molecular Biology 214, </journal> <year> (1990). </year>
Reference-contexts: Several basic approaches are being investigated within the AI and related communities: (1) Development of algorithms that perform similarity matches to known genes (i.e., case-based reasoning) <ref> [Lipman85, Myers90, this paper] </ref>. Case-Based Reasoning with Noisy Case Boundaries (2) Using machine learning to learn the general characteristics of genes [Lapedes89, Noordewier90, Stormo82, Towell90]. (3) Creating grammars that can be used to recognize genes [Searls88, Searls89]. <p> These databases store "cases": complete genes (GenBank) and complete proteins (PIR). A number of researchers have developed "case-based" algorithms that partially match DNA subsequences (or the corresponding amino-acid sequences) to these databases (e.g., <ref> [Lipman85, Myers90] </ref>); however, their methods all suffer from being extremely sensitive to frameshift errors. These previous approaches do an excellent job of matching in the presence of substitution errors mistaking an A for a C, say. In fact, one of their primary strengths is that they can find homologous matches. <p> For these conditions, a new case-matching algorithm is needed. A CASE-BASED GENE FINDING ALGORITHM We have developed a case-based algorithm for gene finding that is robust in the presence of frameshift errors. Our FIND-IT algorithm builds on the BLAST similarity-search program <ref> [Myers90] </ref>. BLAST efficiently produces approximate matches, but these matches do not extend across frameshift errors. The FIND-IT method described below coherently combines partial matches (to a given protein) in different reading frames, thereby overcoming missing and extra nucleotides in sequenced DNA. Table 2 describes our algorithm. <p> No minimal length is required to be considered an ORF; because sequencing errors may have introduced false STOP codons, no stretch of DNA is discarded. (2) Translate each ORF into a amin-acid sequence and apply BLAST <ref> [Myers90] </ref> to produce partial matches (with gaps) to the Protein Information Resource (PIR) database.
Reference: [Noordewier90] <author> M. O. Noordewier, G. G. Towell and J. W. Shavlik, </author> <title> "Training Knowledge-Based Neural Networks to Recognize Genes in DNA Sequences," </title> <booktitle> IEEE Conference on Neural Information Processing Systems, </booktitle> <address> Denver, CO, </address> <year> 1990. </year>
Reference-contexts: Several basic approaches are being investigated within the AI and related communities: (1) Development of algorithms that perform similarity matches to known genes (i.e., case-based reasoning) [Lipman85, Myers90, this paper]. Case-Based Reasoning with Noisy Case Boundaries (2) Using machine learning to learn the general characteristics of genes <ref> [Lapedes89, Noordewier90, Stormo82, Towell90] </ref>. (3) Creating grammars that can be used to recognize genes [Searls88, Searls89]. This remainder of this article presents an approach that falls into the first category. <p> Research along the lines of the first approach includes [Gribskov84, Staden82]. Approach two has also been investigated <ref> [Lapedes89, Noordewier90, Stormo82, Towell90] </ref>. CONCLUSION We have presented a case-based approach to gene finding that is robust in the presence of errors both in the input data and in the case libraries.
Reference: [Porter90] <author> B. W. Porter, R. Bariess and R. C. Holte, </author> <title> "Concept learning and Heuristic Classification in Weak-Theory Domains," </title> <booktitle> Artificial Intelligence 45, </booktitle> <month> 1-2 </month> <year> (1990), </year> <pages> pp. 229-264. </pages>
Reference-contexts: This style of AI problem solving has been successfully applied to a wide range of problems including cooking [Hammond90], predicting the structure of proteins [Zhang89], medical reasoning <ref> [Porter90] </ref>, and legal reasoning [Ashley90]. Given a new problem to solve, the initial step a case-based reasoner takes is to recall relevant cases from its memory. Since it is unlikely the current situation is completely identical to a previous one, some sort of partial matching is needed.
Reference: [Redmond89] <author> M. </author> <title> Redmond, "Learning from Others' Experience: Creating Cases from Examples," </title> <booktitle> Proceedings of the Second Case-Based Reasoning Workshop, </booktitle> <address> Pensacola Beach, FL, </address> <month> May </month> <year> 1989, </year> <pages> pp. 309-312. </pages>
Reference-contexts: Unfortunately, the real-world is often "continuous", and the problem of accurately parsing experience into discrete cases is extremely challenging. This largely unaddressed task (one exception is <ref> [Redmond89] </ref>) is made even more complicated when one's sensors for measuring the world are noisy. Even if one had a good idea of what constitutes the boundaries of a case, noise may easily blur these signals.
Reference: [Searls88] <author> D. B. </author> <title> Searls, "Representing Genetic Information with Formal Grammars," </title> <booktitle> Proceedings of the Seventh National Conference on Artificial Intelligence, </booktitle> <address> St. Paul, MN, </address> <month> August </month> <year> 1988, </year> <pages> pp. 386-391. </pages>
Reference-contexts: Case-Based Reasoning with Noisy Case Boundaries (2) Using machine learning to learn the general characteristics of genes [Lapedes89, Noordewier90, Stormo82, Towell90]. (3) Creating grammars that can be used to recognize genes <ref> [Searls88, Searls89] </ref>. This remainder of this article presents an approach that falls into the first category. A BRIEF INTRODUCTION TO MOLECULAR BIOLOGY Since this paper describes an AI application in molecular biology, a brief introduction to genes and proteins appears in this section.
Reference: [Searls89] <author> D. B. </author> <title> Searls, "Investigating the Linguistics of DNA with Definite Clause Grammars," </title> <booktitle> Proceedings of the North American Conference on Logic Programming, </booktitle> <year> 1989, </year> <pages> pp. 189-208. </pages>
Reference-contexts: Case-Based Reasoning with Noisy Case Boundaries (2) Using machine learning to learn the general characteristics of genes [Lapedes89, Noordewier90, Stormo82, Towell90]. (3) Creating grammars that can be used to recognize genes <ref> [Searls88, Searls89] </ref>. This remainder of this article presents an approach that falls into the first category. A BRIEF INTRODUCTION TO MOLECULAR BIOLOGY Since this paper describes an AI application in molecular biology, a brief introduction to genes and proteins appears in this section.
Reference: [Staden82] <author> R. Staden and A. D. </author> <title> McLachan, </title> <journal> Nucleic Acids Research 10, </journal> <year> (1982), </year> <pages> pp. 141-156. </pages>
Reference-contexts: Research along the lines of the first approach includes <ref> [Gribskov84, Staden82] </ref>. Approach two has also been investigated [Lapedes89, Noordewier90, Stormo82, Towell90]. CONCLUSION We have presented a case-based approach to gene finding that is robust in the presence of errors both in the input data and in the case libraries.
Reference: [Stanfill86] <author> C. Stanfill and D. Waltz, </author> <title> "Toward Memory-Based Reasoning," </title> <journal> Communications of the Association for Computing Machinery 29, </journal> <volume> 12 (1986), </volume> <pages> pp. 1213-1228. </pages>
Reference-contexts: INTRODUCTION Recently, there has been substantial attention given to case-based approaches to intelligent reasoning [DARPA89]. This paradigm, which also goes by the names of memory-based reasoning <ref> [Stanfill86] </ref> and instance-based reasoning [Kibler87], relies on memory of previous cases to solve current problems.
Reference: [Stormo82] <author> G. D. Stormo, T. D. Schneider, L. M. Gold and A. Ehrenfeucht, </author> <title> "Use of the 'Perceptron' Algorithm to Distinguish Translational Initiation Sites," </title> <journal> Nucleic Acids Research 10, </journal> <year> (1982), </year> <pages> pp. 2997-3010. </pages>
Reference-contexts: Several basic approaches are being investigated within the AI and related communities: (1) Development of algorithms that perform similarity matches to known genes (i.e., case-based reasoning) [Lipman85, Myers90, this paper]. Case-Based Reasoning with Noisy Case Boundaries (2) Using machine learning to learn the general characteristics of genes <ref> [Lapedes89, Noordewier90, Stormo82, Towell90] </ref>. (3) Creating grammars that can be used to recognize genes [Searls88, Searls89]. This remainder of this article presents an approach that falls into the first category. <p> Research along the lines of the first approach includes [Gribskov84, Staden82]. Approach two has also been investigated <ref> [Lapedes89, Noordewier90, Stormo82, Towell90] </ref>. CONCLUSION We have presented a case-based approach to gene finding that is robust in the presence of errors both in the input data and in the case libraries.
Reference: [Towell90] <author> G. G. Towell, J. W. Shavlik and M. O. Noordewier, </author> <title> "Refinement of Approximate Domain Theories by Knowledge-Based Artificial Neural Networks," </title> <booktitle> Proceedings of the Eighth National Conference on Artificial Intelligence, </booktitle> <address> Boston, MA, </address> <month> July </month> <year> 1990. </year>
Reference-contexts: Several basic approaches are being investigated within the AI and related communities: (1) Development of algorithms that perform similarity matches to known genes (i.e., case-based reasoning) [Lipman85, Myers90, this paper]. Case-Based Reasoning with Noisy Case Boundaries (2) Using machine learning to learn the general characteristics of genes <ref> [Lapedes89, Noordewier90, Stormo82, Towell90] </ref>. (3) Creating grammars that can be used to recognize genes [Searls88, Searls89]. This remainder of this article presents an approach that falls into the first category. <p> A hypothetical gene and its translation into a protein. Gene: |AGC|ATG|CAA|TAG| Protein: | S | M | Q | STOP hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh it is sequenced by Blattner's laboratory. Unfortunately, there is no absolute START codon; this makes gene finding a non-trivial task. (See <ref> [Towell90] </ref> for a discussion on applying machine learning techniques to find a signal that indicates the start of a gene.) The remainder of this paper describes a case-based approach to gene finding, one that works in the presence of "noisy" DNA sequences. <p> We are undertaking two complementary approaches. One involves performing robust similarity matches with known protein sequences (this paper), while the second involves detecting DNA segments that have the general characteristics of genes (see <ref> [Towell90] </ref>). Our long-term aim is to assign a function to all regions of the "anonymous" DNA produced by the Wisconsin sequencing project. <p> of which involve neural-network learning, that either (1) identify regions of DNA that have the same general, "global" statistics of known genes or (2) locate stretches of DNA that are known to "signal" some biological activity (e.g. promoter regions bind the protein that initiates transcription, which is followed by translation <ref> [Towell90] </ref>). Research along the lines of the first approach includes [Gribskov84, Staden82]. Approach two has also been investigated [Lapedes89, Noordewier90, Stormo82, Towell90]. CONCLUSION We have presented a case-based approach to gene finding that is robust in the presence of errors both in the input data and in the case libraries. <p> Research along the lines of the first approach includes [Gribskov84, Staden82]. Approach two has also been investigated <ref> [Lapedes89, Noordewier90, Stormo82, Towell90] </ref>. CONCLUSION We have presented a case-based approach to gene finding that is robust in the presence of errors both in the input data and in the case libraries.
Reference: [Watson53] <author> J. D. Watson and F. H. C. Crick, </author> " <title> "Molecular Structure in Nucleic Acids: A Structure for Deoxyribose Nucleic Acid"," </title> <booktitle> Nature 171, </booktitle> <year> (1953), </year> <pages> pp. 737-738. </pages>
Reference-contexts: An A in one sequence is paired with a T on the other; G and C are similarly paired. This pairing forms the basis of cell replication, and its discovery by Watson and Crick in 1953 revolutionized biology <ref> [Watson53] </ref>. However, replication is not addressed in this paper, and the reader can think of DNA as a single, linear sequence (whose complement or reverse strand can easily be calculated when needed).
Reference: [Watson87] <author> J. D. Watson, N. H. Hopkins, J. W. Roberts, J. A. Steitz and A. M. Weiner, </author> <title> The Molecular Biology of the Gene, </title> <address> Benjamin-Cummings, Menlo Park, CA, </address> <year> 1987. </year>
Reference-contexts: Sufficient detail is included so that the non-biologist can understand the rest of the paper; further information can be found in textbooks such as <ref> [Watson87] </ref>. DNA is a linear sequence from the alphabet A, G, T, C-; each of these four letters is called a nucleotide (or base). Human DNA is estimated to contain 310 9 nucleotides, while the common intestinal bacteria E. coli contains about 510 6 bases.
Reference: [Zhang89] <author> X. Zhang and D. Waltz, </author> <title> "Protein Structure Prediction using Memory-Based Reasoning," </title> <booktitle> Proceedings of the Second Case-Based Reasoning Workshop, </booktitle> <address> Pensacola Beach, FL, </address> <month> May </month> <year> 1989, </year> <pages> pp. 351-355. Page 10 </pages>
Reference-contexts: This style of AI problem solving has been successfully applied to a wide range of problems including cooking [Hammond90], predicting the structure of proteins <ref> [Zhang89] </ref>, medical reasoning [Porter90], and legal reasoning [Ashley90]. Given a new problem to solve, the initial step a case-based reasoner takes is to recall relevant cases from its memory. Since it is unlikely the current situation is completely identical to a previous one, some sort of partial matching is needed.
References-found: 27

