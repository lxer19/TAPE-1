URL: http://ftp.cs.yale.edu/pub/technical-reports/tr1020.ps.gz
Refering-URL: http://ftp.cs.yale.edu/pub/technical-reports/
Root-URL: http://www.cs.yale.edu
Title: Exact Learning of -DNF Formulas with Malicious Membership Queries  
Author: Dana Angluin 
Note: This research was supported by the National Science Foundation, grant CCR-9213881.  
Date: March 1994  
Affiliation: Yale University Department of Computer Science  
Pubnum: YALEU/DCS/TR-1020  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> D. Angluin, L. Hellerstein, and M. Karpinski. </author> <title> Learning read-once formulas with queries. </title> <journal> J. ACM, </journal> <volume> 40 </volume> <pages> 185-210, </pages> <year> 1993. </year>
Reference-contexts: malicious membership queries can cope as well with malicious don't knows by assigning an arbitrary answer to the vectors answered with "I don't know", but the converse is not necessarily true. 3 Warm-up There is a polynomial-time algorithm for learning general boolean -formulas using equivalence queries and (error-free) membership queries <ref> [1] </ref>. In the special case of -DNF formulas the algorithm can be considerably simplified. We review the simpler version here, since it is the basis of the algorithm we present. Let f be the target -DNF formula.
Reference: [2] <author> D. Angluin and M. Krikis. </author> <title> Malicious membership queries and exceptions. </title> <type> Technical Report YALEU/DCS/TR-1019, </type> <institution> Yale University Department of Computer Science, </institution> <month> March </month> <year> 1994. </year>
Reference-contexts: 1 Introduction We continue the investigation begun by Angluin and Krikis <ref> [2] </ref> concerning the effects of errors in the answers to membership queries in the model of equivalence queries and malicious membership queries. <p> We expect to be able to generalize this algorithm to learn the class of -DNF formulas with exceptions (see <ref> [2] </ref> for definitions.) 2 Preliminaries Let n be any natural number. We denote by B n the set f0; 1g n of boolean n-vectors. The i-th coordinate of a vector y 2 B n is denoted y [i].
Reference: [3] <author> N. H. Bshouty, T. R. Hancock, and L. Hellerstein. </author> <title> Learning arithmetic read-once formulas. </title> <booktitle> In Proc. 24th Annu. ACM Sympos. Theory Comput., </booktitle> <pages> pages 370-381. </pages> <publisher> ACM Press, </publisher> <address> New York, NY, </address> <year> 1992. </year>
Reference-contexts: There have been a number of ingenious algorithms to learn read-once or -formulas over various bases using equivalence queries and membership queries (or substitutions) <ref> [3, 4, 5] </ref>. These concept classes are typically not closed under finite exceptions, and therefore are not covered by the general transformation found by Angluin and Krikis.
Reference: [4] <author> N. H. Bshouty, T. R. Hancock, and L. Hellerstein. </author> <title> Learning Boolean read-once formulas with arbitrary symmetric and constant fan-in gates. </title> <booktitle> In Proc. 5th Annu. Workshop on Comput. Learning Theory, </booktitle> <pages> pages 1-15. </pages> <publisher> ACM Press, </publisher> <address> New York, NY, </address> <year> 1992. </year>
Reference-contexts: There have been a number of ingenious algorithms to learn read-once or -formulas over various bases using equivalence queries and membership queries (or substitutions) <ref> [3, 4, 5] </ref>. These concept classes are typically not closed under finite exceptions, and therefore are not covered by the general transformation found by Angluin and Krikis.
Reference: [5] <author> V. Raghavan and D. Wilkins. </author> <title> Learning -branching programs with queries. </title> <booktitle> In Proc. 6th Annu. Workshop on Comput. Learning Theory, </booktitle> <pages> pages 27-36. </pages> <publisher> ACM Press, </publisher> <address> New York, NY, </address> <year> 1993. </year>
Reference-contexts: There have been a number of ingenious algorithms to learn read-once or -formulas over various bases using equivalence queries and membership queries (or substitutions) <ref> [3, 4, 5] </ref>. These concept classes are typically not closed under finite exceptions, and therefore are not covered by the general transformation found by Angluin and Krikis.
Reference: [6] <author> L. G. Valiant and G. J. Brebner. </author> <title> Universal schemes for parallel communication. </title> <booktitle> In Proceedings of the Thirteenth Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 263-277. </pages> <institution> Association for Computing Machinery, </institution> <year> 1981. </year> <month> 15 </month>
Reference-contexts: At this point we need an upper bound on the number of walks that come within 10 distance 2 of a specified walk. A simplified version of a proof of Valiant and Brebner <ref> [6] </ref> suffices. We analyze the situation in which a random walk i is constructed as described above from every n-bit vector, so there are 2 n walks. The upper bounds we give hold also in the case that walks are constructed only from the points in S.
References-found: 6

