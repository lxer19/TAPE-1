URL: ftp://ftp.dai.ed.ac.uk/pub/user/chrisg/max-problem-in-GP.for_submission_to_gp-96.ps.gz
Refering-URL: http://www.cs.bham.ac.uk/~wbl/biblio/gp-bibliography.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: fchrisg,peterg@aisb.ed.ac.uk  
Phone: Tel: +44 (0)131 650 2715  
Title: The MAX Problem for Genetic Programming Highlighting an Adverse Interaction between the Crossover Operator and
Author: Chris Gathercole and Peter Ross 
Keyword: Category: Genetic Programming  
Address: 80 South Bridge Edinburgh EH1 1HN U.K.  
Affiliation: Department of Artificial Intelligence University of Edinburgh  
Abstract: The Crossover operator is common to most implementations of Genetic Programming (GP). Another, usually unavoidable, factor is some form of restriction on the size of trees in the GP population. This paper concentrates on the interaction between the Crossover operator and a restriction on tree depth demonstrated by the MAX problem, which involves returning the largest possible value for given function and terminal sets. Some characteristics and inadequacies of Crossover in `normal' use are highlighted and discussed. Subtree discovery and movement takes place mostly near the leaf nodes, with nodes near the root left untouched. Diversity drops quickly to zero near the root node in the tree population. GP is then unable to create `fitter' trees via the crossover operator, leaving a Mutation operator as the only common, but ineffective, route to discovery of `fitter' trees. 
Abstract-found: 1
Intro-found: 1
Reference: [Blickle & Thiele 94] <author> Tobias Blickle and Lothar Thiele. </author> <title> Genetic programming and redundancy. </title> <editor> In J. Hopf, editor, </editor> <booktitle> Genetic Algorithms within the Framework of Evolutionary Computation (Workshop at KI-94, Saarbrucken), </booktitle> <pages> pages 33-38. </pages> <institution> Max-Planck-Institut fur Informatik (MPI-I-94-241), </institution> <year> 1994. </year>
Reference-contexts: This restriction is imposed since it is impractical from the point of view of CPU and memory usage to allow a GP's trees to grow unbounded, as they would otherwise do <ref> [Blickle & Thiele 94] </ref>. A consequence of this restriction on tree size is that the crossover operator may no longer be able to swap all possible pairs of subtrees between two parents and still produce `legal' trees.
Reference: [D'haeseleer 94] <author> P. D'haeseleer. </author> <title> Context preserving crossover in genetic programming. </title> <booktitle> In Proceedings of the 1994 IEEE World Congress on Computational Intelligence, </booktitle> <volume> volume 1, </volume> <pages> pages 256-261. </pages> <publisher> IEEE Press, </publisher> <year> 1994. </year>
Reference-contexts: Several other investigations have focused in some way on Crossover in GP. Some of those are: [Rosca 95] which looks at causality in GP, relating the changes in the structure of GP trees with changes in the properties of the trees, <ref> [D'haeseleer 94] </ref> which looks at context preserving crossover in GP, attempting to ensure that swapped subtrees will still be effective, and [O'Reilly & Oppacher 95] which looks at hybrids of operators such as Crossover and Hill Climbing.
Reference: [Koza 92] <author> J.R. Koza. </author> <title> Genetic Programming: on the Programming of Computers by means of Natural Selection. </title> <publisher> MIT Press, </publisher> <address> Cam-bridge, MA, </address> <year> 1992. </year>
Reference-contexts: The optimal tree for MAX-depth-D-f*,/gf0.9g, shown in Figure 1, has a different structure from the optimal tree for the MAX-depth-D-f*,+gfng problems. Most of the tree layers consist of an unbalanced mix of the two functions. 3 Crossover in GP The standard Crossover operator <ref> [Koza 92] </ref>, in an ideal GP implementation, given two parent trees, can bring a subtree from anywhere in one parent tree and swap it with a subtree anywhere in the other parent tree, to produce two new child trees containing a mixture of genetic information from both parent trees.
Reference: [O'Reilly & Oppacher 95] <author> Una-May O'Reilly and Franz Oppacher. </author> <title> Hybridized crossover-based search techniques for program discovery. </title> <type> Technical Report 95-02-007, </type> <institution> Santa Fe Institute, </institution> <year> 1995. </year>
Reference-contexts: Some of those are: [Rosca 95] which looks at causality in GP, relating the changes in the structure of GP trees with changes in the properties of the trees, [D'haeseleer 94] which looks at context preserving crossover in GP, attempting to ensure that swapped subtrees will still be effective, and <ref> [O'Reilly & Oppacher 95] </ref> which looks at hybrids of operators such as Crossover and Hill Climbing.
Reference: [Rosca 95] <author> Justinian P. Rosca. </author> <title> AN ANALYSIS OF HIERARCHICAL GENETIC PROGRAMMING. </title> <type> Technical Report 566, </type> <institution> University of Rochester, </institution> <year> 1995. </year>
Reference-contexts: Another problem associated with restricting the number of tree nodes is that it becomes more difficult to calculate in advance what are the optimal trees. Several other investigations have focused in some way on Crossover in GP. Some of those are: <ref> [Rosca 95] </ref> which looks at causality in GP, relating the changes in the structure of GP trees with changes in the properties of the trees, [D'haeseleer 94] which looks at context preserving crossover in GP, attempting to ensure that swapped subtrees will still be effective, and [O'Reilly & Oppacher 95] which
Reference: [Ryan 94] <editor> Conor Ryan. Pygmies and civil servants. In Kenneth E. Kinn-ear, Jr., editor, </editor> <booktitle> Advances in Genetic Programming, chapter 11. </booktitle> <publisher> MIT Press, </publisher> <year> 1994. </year> <month> 10 </month>
Reference-contexts: Ostensibly an easy problem for GP to solve, the MAX problem highlights some inadequacies of the Crossover operator in `normal' use, where loss of diversity in the population leads to premature (and irreversible) convergence onto sub-optimal solutions. Such premature convergence is a common difficulty experienced with GP <ref> [Ryan 94] </ref>. 2 The MAX Problem for GP The MAX problem can be stated as MAX-depth-D-fFunction Setg-fTerminal Setg.
References-found: 6

