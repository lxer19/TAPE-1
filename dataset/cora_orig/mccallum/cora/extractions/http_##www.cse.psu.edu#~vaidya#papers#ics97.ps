URL: http://www.cse.psu.edu/~vaidya/papers/ics97.ps
Refering-URL: http://www.cse.psu.edu/~vaidya/publications.html
Root-URL: http://www.cse.psu.edu
Email: E-mail: fvaidya, anand, dasg@cse.psu.edu  
Title: Performance Benefits of Virtual Channels and Adaptive Routing: An Application-Driven Study  
Author: Aniruddha S. Vaidya Anand Sivasubramaniam Chita R. Das 
Address: Park, PA 16802  
Affiliation: Department of Computer Science and Engineering The Pennsylvania State University University  
Abstract: Recent research on multiprocessor interconnection networks has primarily focussed on wormhole switching, virtual channel flow control and routing algorithms. These architectural features are aimed at enhancing the network performance by reducing the network latency, which in turn should improve the overall system performance. Many research results support this design philosophy by claiming significant reduction in average message latency. However, these conclusions are drawn using synthetic workloads that may not necessarily capture the behavior of real applications. In this paper, we have used parallel applications for a closer examination of the network behavior. In particular, the performance benefit from enhancing a 2-D mesh with virtual channels (VCs) and a routing algorithm (oblivious or fully adaptive) is examined with five shared memory applications using an execution-driven simulator, SPASM. In order to analyze the performance implications in greater detail, we also consider other parameters that have a direct bearing on network traffic. These are the number of processors used to solve a problem, problem size and memory consistency model. Simulation results show that VCs can reduce the network latency to varying degrees depending on the application. Similar gain is possible with a fully adaptive routing algorithm compared to the oblivious routing. However, with respect to the overall execution time, the performance benefit using these enhancements is negligible. Moreover, this benefit is negated when we consider the cost of implementing the VCs. These results suggest that the performance rewards may not justify the cost of these enhancements. Rather, we need to emphasize on improving the raw network bandwidth by simpler and improved router designs. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. J. Anderson and J. C. Setubal. </author> <title> On the Parallel Implementation of Goldberg's Maximum Flow Algorithm. </title> <booktitle> In Proceedings of the Fourth Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 168177, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: The allocation of columns to processors is done dynamically. Communication is involved in fetching all the required columns to the processor working on a given task. Hence, the communication patterns for Cholesky are not regular. Maxflow: The Maxflow <ref> [1] </ref> application finds the maximum flow from a source to a sink, in a directed graph. Each processor accesses a local work queue for tasks to perform. These may in turn generate new tasks, which are added to this local work queue.
Reference: [2] <author> K. Aoyama and A. A. Chien. </author> <title> The Cost of Adaptivity and Virtual Lanes in a Wormhole Router. </title> <journal> Journal of VLSI Design, </journal> <volume> 2(4):315333, </volume> <year> 1995. </year>
Reference-contexts: above network architectural features under two different consistency models: sequential consistency (SC) and release consistency (RC). * We investigate whether the performance benefits seen from the above are justified in terms of the cost of these features that of slowdown in network cycle time using a cost model presented in <ref> [2] </ref>. * We study how applications stand to benefit from increased router speeds due to simplistic router designs. * Finally, we investigate the reasons for why increased network performance does not necessarily translate into benefits in application execution times and how some of the problems may be alleviated. <p> Further, our results suggest that the performance rewards may not justify the cost of these enhancements unless an application is highly communication intensive and potentially scaling poorly. Our study also confirm the fears expressed in <ref> [2] </ref> that applications lose the moderate performance advantage of increased number of VCs if the cost for router slowdown due to VCs is considered. <p> However, these architectural enhancements to network routers indeed increase their complexity. Current methods for implementing these features in routers indicate that this complexity also exacts a price that of slowdown in router speeds. Aoyama and Chien <ref> [2] </ref> compare the cost of adding VCs and also that of various adaptive routing algorithms for wormhole switched routers. These costs come from the additional delay introduced into the critical path determining the router speed. <p> This indicates that the benefits of increased number of VCs and adaptivity in routing cannot compensate for the loss in performance due to slower speed of the router. These results thus tend to confirm the fears expressed by Aoyama and Chien in <ref> [2] </ref>. The cost of the VCs can be compensated only if the network latency due to additional VCs decreases at least by the corresponding amount (2530 % per VC). However, for scalable applications, as used in this paper, this improvement is unlikely to occur.
Reference: [3] <author> D. Bailey et al. </author> <title> The NAS Parallel Benchmarks. </title> <journal> International Journal of Supercomputer Applications, </journal> <volume> 5(3):6373, </volume> <year> 1991. </year>
Reference-contexts: The middle phase is the only phase involving communication in which the cyclic layout of data is changed to a blocked layout using an all-to-all communication step. IS: IS is an Integer Sort kernel drawn from the NAS suite <ref> [3] </ref> that uses bucket sort to rank a list of integers. This application also has a regular communication pattern. The input data is equally partitioned among the processors. Each processor maintains local buckets for the chunk of the input list that is allocated to it.
Reference: [4] <author> R. V. Boppana and S. Chalasani. </author> <title> A Comparison of Adaptive Wormhole Routing Algorithms. </title> <booktitle> In Proc. Intl. Symp. on Computer Architecture, </booktitle> <pages> pages 351360, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Research results show that low-dimensional networks such as k-ary n-cubes and meshes with wormhole switching and virtual channel flow control can provide the needed performance [12]. In addition, adaptivity in message routing can boost the network performance further <ref> [15, 18, 16, 13, 9, 5, 19, 4] </ref>. Many of these research ideas have found their way into contemporary commercial systems.
Reference: [5] <author> Y. M. Boura and C. R. Das. </author> <title> Efficient Fully Adaptive Wormhole Routing in n-dimensional Meshes. </title> <booktitle> In Proc. Intl. Conf. on Distributed Computing Systems, </booktitle> <pages> pages 589596, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: Research results show that low-dimensional networks such as k-ary n-cubes and meshes with wormhole switching and virtual channel flow control can provide the needed performance [12]. In addition, adaptivity in message routing can boost the network performance further <ref> [15, 18, 16, 13, 9, 5, 19, 4] </ref>. Many of these research ideas have found their way into contemporary commercial systems.
Reference: [6] <author> E. A. Brewer, C. N. Dellarocas, A. Colbrook, and W. E. Weihl. </author> <title> PROTEUS : A high-performance parallel-architecture simulator. </title> <type> Technical Report MIT-LCS-TR-516, </type> <institution> Mas-sachusetts Institute of Technology, </institution> <address> Cambridge, MA 02139, </address> <month> September </month> <year> 1991. </year>
Reference-contexts: SPASM can simulate a range of message-passing and shared memory platforms [24]. As with several recent simulators <ref> [6, 14] </ref>, SPASM does not simulate the details of the instruction execution. Instead, it only simulates instructions that may potentially involve network access such as LOADs/STOREs, and synchronization calls. The rest of the instructions execute at the speed of the native processor.
Reference: [7] <author> D. C. Burger and D. A. Wood. </author> <title> Accuracy vs. Performance in Parallel Simulation of Interconnection Networks. </title> <booktitle> In Proc. Intl. Symp. Parallel Processing, </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: These assumptions are sufficiently accurate when the objective is to minimize the communication required. By making these assumptions, performance evaluation of the system can be simplified and speeded-up. However, performance results obtained using these models maybe suspect when used to evaluate system/application performance with various parallel workloads <ref> [7] </ref>. Interconnection network designers have a more network-centric viewpoint. From this viewpoint, improving the network performance is critical. Network topology, switching mechanism, routing, flow control, and communication workload, together determine the network performance.
Reference: [8] <author> J. Carbonaro and F. Verhoorn. Cavallino: </author> <title> The Teraflops Router and NIC. </title> <booktitle> In Proc. Symp. High Performance Interconnects (Hot Interconnects 4), </booktitle> <pages> pages 157160, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: In addition, adaptivity in message routing can boost the network performance further [15, 18, 16, 13, 9, 5, 19, 4]. Many of these research ideas have found their way into contemporary commercial systems. For example, the Cray T3E router [21], the Intel Cavallino router <ref> [8] </ref>, and the SGI SPIDER routing chip [17] are routers for direct networks and use wormhole switching, and virtual channel flow control. All of these routers use four VCs and oblivious routing, while the T3E router has adaptive routing capability. <p> In such networks, deep flit buffers help in transfer of flits between routers without the need for external links to be synchronized with or run at the same speed as the usually slower internal router clocks, thus helping overall network bandwidth to be high <ref> [8] </ref>. We present results for 1 to 8 flit buffers per VC, in Fig. 5. The results are reported for 16 processors with oblivious routing and 1 VC. The execution times do not show the benefit of deeper flit buffers, except for Maxflow. <p> Also, we do not associate any additional penalty for adaptivity. This is because modern wormhole routers use on-router lookup table based approaches for routing <ref> [21, 17, 8] </ref>, which reduces the cost of crossbar control to a small constant independent of the routing algorithm. However, these routers in majority, do not make dynamically adaptive routing decisions, though the tables can be reprogrammed to use alternate routing. <p> However, deep flit buffers are necessary due to non-synchronous clocking among routers in practical interconnection networks implementations, as well as due to the difference in clock rates between exter nal links and internal router logic in current routers <ref> [21, 8] </ref>. * Only a fraction of the modest gains in network latency due to VCs and adaptivity are passed on to the application performance, if at all! This is due to a combination of various causes mentioned in Section 4.5. * When the performance improvement due to VCs is weighed
Reference: [9] <author> A. A. Chien and J. H. Kim. </author> <title> Planar-Adaptive Routing: Low-cost Adaptive Networks for Multiprocessors. </title> <journal> Journal of the ACM, </journal> <pages> pages 91123, </pages> <month> January </month> <year> 1995. </year>
Reference-contexts: Research results show that low-dimensional networks such as k-ary n-cubes and meshes with wormhole switching and virtual channel flow control can provide the needed performance [12]. In addition, adaptivity in message routing can boost the network performance further <ref> [15, 18, 16, 13, 9, 5, 19, 4] </ref>. Many of these research ideas have found their way into contemporary commercial systems.
Reference: [10] <author> S. S. Chodnekar, V. Srinivasan, A. S. Vaidya, A. Sivasubra-maniam, and C. R. Das. </author> <title> Towards a Communication Characterization Methodology for Parallel Applications. </title> <booktitle> In Proc. Third Intl. Symp. High Performance Computer Architecture (HPCA-3), </booktitle> <pages> pages 310319, </pages> <month> February </month> <year> 1997. </year>
Reference-contexts: Using the communication characterization methodology presented in our earlier research <ref> [10] </ref>, we simulate the execution of a suite of shared memory applications on our detailed network simulator implemented on SPASM [24].
Reference: [11] <author> R. Cypher, A. Ho, S. Konstantinidou, and P. Messina. </author> <title> Architectural requirements of parallel scientific applications with explicit communication. </title> <booktitle> In Proceedings of the 20th Annual International Symposium on Computer Architecture, </booktitle> <pages> pages 2 13, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: We use this new viewpoint in our study to get rid of the drawbacks of the earlier ones, yet combining their strengths. Performance analyses of parallel systems with application benchmarks have been studied by a few researchers <ref> [22, 11] </ref>. But, none of these studies have investigated the network performance in particular. To our knowledge, the only reported work that has used parallel benchmarks to study network performance is by Kumar and Bhuyan [20].
Reference: [12] <author> W. J. Dally. </author> <title> Virtual-Channel Flow Control. </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <volume> 3(2):194205, </volume> <month> May </month> <year> 1992. </year>
Reference-contexts: Until recently, network research has primarily focussed on the first four parameters to optimize network latency and throughput. Research results show that low-dimensional networks such as k-ary n-cubes and meshes with wormhole switching and virtual channel flow control can provide the needed performance <ref> [12] </ref>. In addition, adaptivity in message routing can boost the network performance further [15, 18, 16, 13, 9, 5, 19, 4]. Many of these research ideas have found their way into contemporary commercial systems.
Reference: [13] <author> W. J. Dally and C. L. Seitz. </author> <title> Deadlock-Free Message Routing in Multiprocessor Interconnection Networks. </title> <journal> IEEE Trans. on Computers, </journal> <volume> C36(5):547553, </volume> <month> May </month> <year> 1987. </year>
Reference-contexts: Research results show that low-dimensional networks such as k-ary n-cubes and meshes with wormhole switching and virtual channel flow control can provide the needed performance [12]. In addition, adaptivity in message routing can boost the network performance further <ref> [15, 18, 16, 13, 9, 5, 19, 4] </ref>. Many of these research ideas have found their way into contemporary commercial systems.
Reference: [14] <author> H. Davis, S. R. Goldschmidt, and J. L. Hennessy. </author> <title> Multiprocessor Simulation and Tracing Using Tango. </title> <booktitle> In Proceedings of the 1991 International Conference on Parallel Processing, pages II 99107, </booktitle> <year> 1991. </year>
Reference-contexts: SPASM can simulate a range of message-passing and shared memory platforms [24]. As with several recent simulators <ref> [6, 14] </ref>, SPASM does not simulate the details of the instruction execution. Instead, it only simulates instructions that may potentially involve network access such as LOADs/STOREs, and synchronization calls. The rest of the instructions execute at the speed of the native processor.
Reference: [15] <author> J. Duato. </author> <title> A New Theory of Deadlock-Free Adaptive Routing in Wormhole Networks. </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <volume> 4(12):13201331, </volume> <month> December </month> <year> 1993. </year>
Reference-contexts: Research results show that low-dimensional networks such as k-ary n-cubes and meshes with wormhole switching and virtual channel flow control can provide the needed performance [12]. In addition, adaptivity in message routing can boost the network performance further <ref> [15, 18, 16, 13, 9, 5, 19, 4] </ref>. Many of these research ideas have found their way into contemporary commercial systems. <p> These are the number (1, 2, 4) of Virtual Channels (VCs), routing algorithm (oblivious, fully adaptive), number of flit buffers per virtual channel (1, 4, 8), and the network cycle time. Duato's fully adaptive algorithm is simulated here <ref> [15] </ref>. Note that a minimum of 2 VCs are required to implement a fully adaptive routing algorithm on a mesh network.
Reference: [16] <author> M. L. Fulgham and L. Snyder. </author> <title> Performance of Chaos and Oblivous Routers under Non-Uniform Traffic. </title> <type> Technical Report UWCSE930601, </type> <institution> Department of Computer Science and Engineering, University of Washington, </institution> <address> Seattle, WA 98195, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: Research results show that low-dimensional networks such as k-ary n-cubes and meshes with wormhole switching and virtual channel flow control can provide the needed performance [12]. In addition, adaptivity in message routing can boost the network performance further <ref> [15, 18, 16, 13, 9, 5, 19, 4] </ref>. Many of these research ideas have found their way into contemporary commercial systems. <p> Typical synthetic environments have assumed that the temporal distribution is exponential, the spatial distribution is uniform or a few select localized communication patterns <ref> [16] </ref>, and the message size is a fixed number of bytes. Such workloads may not necessarily mimic the real world behavior.
Reference: [17] <author> M. Galles. </author> <title> Scalable Pipelined Interconnect for Distributed Endpoint Routing : The SGI SPIDER Chip. </title> <booktitle> In Proc. Symp. High Performance Interconnects (Hot Interconnects 4), </booktitle> <pages> pages 141146, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Many of these research ideas have found their way into contemporary commercial systems. For example, the Cray T3E router [21], the Intel Cavallino router [8], and the SGI SPIDER routing chip <ref> [17] </ref> are routers for direct networks and use wormhole switching, and virtual channel flow control. All of these routers use four VCs and oblivious routing, while the T3E router has adaptive routing capability. <p> Also, we do not associate any additional penalty for adaptivity. This is because modern wormhole routers use on-router lookup table based approaches for routing <ref> [21, 17, 8] </ref>, which reduces the cost of crossbar control to a small constant independent of the routing algorithm. However, these routers in majority, do not make dynamically adaptive routing decisions, though the tables can be reprogrammed to use alternate routing.
Reference: [18] <author> C. J. Glass and L. M. Ni. </author> <title> A Turn Model for Adaptive Routing. </title> <booktitle> In Proc. Intl. Symp. on Computer Architecture, </booktitle> <pages> pages 278 287, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: Research results show that low-dimensional networks such as k-ary n-cubes and meshes with wormhole switching and virtual channel flow control can provide the needed performance [12]. In addition, adaptivity in message routing can boost the network performance further <ref> [15, 18, 16, 13, 9, 5, 19, 4] </ref>. Many of these research ideas have found their way into contemporary commercial systems. <p> Our results are not applicable to such environments. We have investigated benefits of adaptivity for a routing algorithm which requires additional VCs. Partially adaptive routing without additional VCs <ref> [18] </ref> might provide low cost benefits of adaptivity. Most importantly improving the performance of routers through architectural enhancements is likely to provide lasting payoffs.
Reference: [19] <author> L. Gravano, G. D. Pifarre, P. E. Berman, and J. L. C. Sanz. </author> <title> Adaptive Deadlock and Livelock-Free Routing with All Minimal Paths in Torus Networks. </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <volume> 5(12):12331251, </volume> <month> December </month> <year> 1994. </year>
Reference-contexts: Research results show that low-dimensional networks such as k-ary n-cubes and meshes with wormhole switching and virtual channel flow control can provide the needed performance [12]. In addition, adaptivity in message routing can boost the network performance further <ref> [15, 18, 16, 13, 9, 5, 19, 4] </ref>. Many of these research ideas have found their way into contemporary commercial systems.
Reference: [20] <author> A. Kumar and L. N. Bhuyan. </author> <title> Evaluating Virtual Channels for Cache-Coherent Shared-Memory Multiprocessors. </title> <booktitle> In Proc. 10th ACM Intl. Conf. on Supercomputing, </booktitle> <month> May </month> <year> 1996. </year>
Reference-contexts: But, none of these studies have investigated the network performance in particular. To our knowledge, the only reported work that has used parallel benchmarks to study network performance is by Kumar and Bhuyan <ref> [20] </ref>. They have used five shared memory benchmarks to analyze the impact of VCs and oblivious routing in a torus. <p> Unlike <ref> [20] </ref>, this study is carried out accounting for factors which determine application scalability, such as the number of processor required and the application problem size. * We also study the benefits of the above network architectural features under two different consistency models: sequential consistency (SC) and release consistency (RC). * We <p> Consequently, VCs and adaptive routing algorithms, which attempt to lower the network contention and not the raw network latency, do not show substantial saving in execution time. Thus, our results are in direct contrast with the results presented in <ref> [20] </ref>, where applications with small and fixed problem sizes running on a fairly large and fixed number of processors were shown to benefit significantly from increased number of VCs and flit buffers. <p> Finally, section 4.5 discusses why the reduction in network latency for most network enhancements is not reflected in execution time. 4.1 Impact of Virtual Channels and Routing Algorithms In a related study, Kumar and Bhuyan <ref> [20] </ref> have shown performance improvements for applications with the addition of VCs and flit buffers. But some of their performance graphs clearly indicate that a significant component of the overall execution time is spent in communication.
Reference: [21] <author> S. L. Scott and G. M. Thorson. </author> <title> The Cray T3E Network: Adaptive Routing in a High Performance 3D Torus. </title> <booktitle> In Proc. Symp. High Performance Interconnects (Hot Interconnects 4), </booktitle> <pages> pages 147156, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: In addition, adaptivity in message routing can boost the network performance further [15, 18, 16, 13, 9, 5, 19, 4]. Many of these research ideas have found their way into contemporary commercial systems. For example, the Cray T3E router <ref> [21] </ref>, the Intel Cavallino router [8], and the SGI SPIDER routing chip [17] are routers for direct networks and use wormhole switching, and virtual channel flow control. All of these routers use four VCs and oblivious routing, while the T3E router has adaptive routing capability. <p> Also, we do not associate any additional penalty for adaptivity. This is because modern wormhole routers use on-router lookup table based approaches for routing <ref> [21, 17, 8] </ref>, which reduces the cost of crossbar control to a small constant independent of the routing algorithm. However, these routers in majority, do not make dynamically adaptive routing decisions, though the tables can be reprogrammed to use alternate routing. <p> However, deep flit buffers are necessary due to non-synchronous clocking among routers in practical interconnection networks implementations, as well as due to the difference in clock rates between exter nal links and internal router logic in current routers <ref> [21, 8] </ref>. * Only a fraction of the modest gains in network latency due to VCs and adaptivity are passed on to the application performance, if at all! This is due to a combination of various causes mentioned in Section 4.5. * When the performance improvement due to VCs is weighed
Reference: [22] <author> J. P. Singh, E. Rothberg, and A. Gupta. </author> <title> Modeling Communication in Parallel Algorithms: A Fruitful Interaction between Theory and Systems ? In Proc. </title> <booktitle> Sixth Annual ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <year> 1994. </year>
Reference-contexts: We use this new viewpoint in our study to get rid of the drawbacks of the earlier ones, yet combining their strengths. Performance analyses of parallel systems with application benchmarks have been studied by a few researchers <ref> [22, 11] </ref>. But, none of these studies have investigated the network performance in particular. To our knowledge, the only reported work that has used parallel benchmarks to study network performance is by Kumar and Bhuyan [20].
Reference: [23] <author> J. P. Singh, W.-D. Weber, and A. Gupta. </author> <title> SPLASH: Stan-ford Parallel Applications for Shared-Memory. </title> <type> Technical Report CSL-TR-91-469, </type> <institution> Computer Systems Laboratory, Stan-ford University, </institution> <year> 1991. </year>
Reference-contexts: The buckets are then merged using a logarithmic reduce operation and propagated back to the individual processors. Each processor then uses the merged buckets to calculate the rank of an element in its chunk of the input list. Cholesky: Cholesky is an application drawn from the SPLASH benchmark suite <ref> [23] </ref>. This application performs a Cholesky factorization of a sparse positive definite matrix. The sparse nature of the matrix results in an algorithm with a data-dependent dynamic access pattern. <p> Each task involves read and write accesses to shared data, which generate network traffic. The local queues of all processors interact via a global queue for load balancing. Most of the time is spent in data movement. The application exhibits dynamic data-dependent access patterns. NBody: The NBody <ref> [23] </ref> application simulates over time the movement of bodies due to the gravitational forces exerted on one another, given some set of initial conditions. The parallel implementation statically allocates a set of bodies to each processor and goes through three phases for each simulated time step.
Reference: [24] <author> A. Sivasubramaniam, A. Singla, U. Ramachandran, and H. Venkateswaran. </author> <title> An Approach to Scalability Study of Shared Memory Parallel Systems. </title> <booktitle> In Proceedings of the ACM SIGMETRICS 1994 Conference on Measurement and Modeling of Computer Systems, </booktitle> <pages> pages 171180, </pages> <month> May </month> <year> 1994. </year> <month> 8 </month>
Reference-contexts: Using the communication characterization methodology presented in our earlier research [10], we simulate the execution of a suite of shared memory applications on our detailed network simulator implemented on SPASM <ref> [24] </ref>. The network simulator allows us to study the impact of VCs, and routing algorithms (deterministic and adaptive) on the network latency experienced by a message as well as on the overall execution time. <p> The results from our evaluation studies and their discussion are presented in Section 4. Finally, Section 5 collates the contributions of this paper. 2 Performance Evaluation Approach Our approach uses an execution-driven simulation system <ref> [24] </ref> for studying the network performance under application workloads. A schematic diagram of this system is shown in Fig. 1. <p> SPASM can simulate a range of message-passing and shared memory platforms <ref> [24] </ref>. As with several recent simulators [6, 14], SPASM does not simulate the details of the instruction execution. Instead, it only simulates instructions that may potentially involve network access such as LOADs/STOREs, and synchronization calls. The rest of the instructions execute at the speed of the native processor. <p> Note that a minimum of 2 VCs are required to implement a fully adaptive routing algorithm on a mesh network. Hence, the adaptive algorithm is simulated with 2 and 4 VCs. 3.2 Parallel Applications A brief description of the applications used in this study is given below. 1D-FFT: 1D-FFT <ref> [24] </ref> implements a 1-dimensional complex Fast Fourier Transform. Each processor works on an assigned portion of the data space that is equally partitioned. There are three main phases in the execution. In the first and last phase, the processors perform the radix-2 Butterfly computation, which is an entirely local operation.
References-found: 24

