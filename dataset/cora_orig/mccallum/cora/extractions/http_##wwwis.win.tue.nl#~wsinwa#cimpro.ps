URL: http://wwwis.win.tue.nl/~wsinwa/cimpro.ps
Refering-URL: http://wwwis.win.tue.nl/~wsinwa/publications.html
Root-URL: http://www.win.tue.nl
Title: Modelling and Analysis of Production Systems Using a Petri Net Based Approach  
Author: W.M.P. van der Aalst 
Address: The Netherlands  
Affiliation: Department of Mathematics and Computing Science Eindhoven University of Technology  
Abstract: The complexity of the design and control problems encountered in modern production systems is increasing. Therefore, we propose a new approach to the modelling and analysis of these systems. This approach is based on timed coloured Petri nets extended with a hierarchy concept. These nets allow for a representation which is close to the problem situation, i.e. it is possible to model the production system in a natural manner. This representation can be used as a starting point for various kinds of analysis. In a sense, the Petri net representation serves as an interface between the problem situation and the method(s) of analysis. This paper shows that timed coloured Petri nets are suitable for the modelling and analysis of complex production systems. The paper particularly addresses concepts to facilitate the modelling of production processes in a systematic manner. Compared to the usual algorithmic approaches (where the emphasis is on the analysis process rather than the modelling process), our approach is characterized by a number of salient qualities. First of all, our approach provides an integrated perspective for all kinds of logistic flows, i.e. flows of goods, capacity resources, information and control are modelled using the same concepts. Secondly, our approach is characterized by the fact that during the modelling process the user is not shackled by the techniques which are going to be used to analyse the model. On the one hand, modelling in terms of timed coloured Petri nets is marked by a high degree of freedom. On the other hand, many analysis methods can be used. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> W.M.P. van der Aalst. </author> <title> Logistics: a Systems Oriented Approach. </title> <booktitle> In Proceedings of the third International Working Conference on Dynamic Modelling of Information Systems, </booktitle> <pages> pages 169-189, </pages> <address> Noordwijkerhout, the Netherlands, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: To cope with this problem we will structure production systems by giving a classification of the flows and elementary systems inside a production system. This classification is closely related to our `systems view of logistics' described in Aalst <ref> [1, 2, 3] </ref>. 1 Bakkenist Management Consultants, Wisselwerking 46, 1112 XR, Diemen, The Netherlands. be interpreted as "is subtype of". For example, the flow of goods is a subtype of the flow of resources. Resources are the physical or abstract objects in a system. We distinguish between goods and means.
Reference: 2. <author> W.M.P. van der Aalst. </author> <title> Modelling and Analysis of Complex Logistic Systems. </title> <editor> In H.J. Pels and J.C. Wortmann, editors, </editor> <title> Integration in Production Management Systems, </title> <journal> volume B-7 of IFIP Transactions, </journal> <pages> pages 277-292. </pages> <publisher> Elsevier Science Publishers, </publisher> <address> Amsterdam, </address> <year> 1992. </year>
Reference-contexts: To cope with this problem we will structure production systems by giving a classification of the flows and elementary systems inside a production system. This classification is closely related to our `systems view of logistics' described in Aalst <ref> [1, 2, 3] </ref>. 1 Bakkenist Management Consultants, Wisselwerking 46, 1112 XR, Diemen, The Netherlands. be interpreted as "is subtype of". For example, the flow of goods is a subtype of the flow of resources. Resources are the physical or abstract objects in a system. We distinguish between goods and means.
Reference: 3. <author> W.M.P. van der Aalst. </author> <title> Timed coloured Petri nets and their application to logistics. </title> <type> PhD thesis, </type> <institution> Eindhoven University of Technology, Eindhoven, </institution> <year> 1992. </year>
Reference-contexts: At one level we want to give a simple description of the system (without having to consider all the details). At another level we want to specify a more detailed behaviour. For a more elaborate discussion on hierarchy constructs, the reader is referred to Jensen [12], van der Aalst <ref> [3, 6] </ref> and van Hee [9]. Language and Tools In the remainder of this paper we will refer to Petri nets extended with `colour', `time' and `hierarchy' as high-level Petri nets. Only a few high-level Petri net models (i.e. hierarchical timed coloured Petri net models) have been proposed in literature. <p> To cope with this problem we will structure production systems by giving a classification of the flows and elementary systems inside a production system. This classification is closely related to our `systems view of logistics' described in Aalst <ref> [1, 2, 3] </ref>. 1 Bakkenist Management Consultants, Wisselwerking 46, 1112 XR, Diemen, The Netherlands. be interpreted as "is subtype of". For example, the flow of goods is a subtype of the flow of resources. Resources are the physical or abstract objects in a system. We distinguish between goods and means. <p> Essential is the fact that their relationship is not based on equality. Interactions between masters and slaves are often used for: real-time production control, production planning, inventory control, inventory planning, etc. For the moment this classification is self-explanatory. See <ref> [3] </ref> for a more detailed description of these flows in the context of logistics. Client/server interactions are based on the equality of both parties involved. An alternative term for client/server interactions is `coordination'. In this case there are requests and responses instead of commands and status reports. <p> Using this approach we have also modelled typical control structures encountered in the field of logistics. This way we showed that it is possible to express the recent developments in logistics (JIT, MRP, BSC, Kanban), see <ref> [3] </ref>. In this section we have shown how production systems can be structured. In fact it is the beginning of a reference model for production systems (see also Biemans [8]). <p> An Overview of Analysis Approaches Direct analysis simulation - (reduced) reachability graphs [4] Indirect analysis (a) Without supplying additional information Classical Petri nets - coverability trees [16, 17, 19] linear algebraic techniques [16, 19, 20] e.g. place and transition invariants reduction techniques [16] Timed Petri nets - (reduced) reachability graphs <ref> [3, 7] </ref> cycle times [16, 20] Stochastic Petri nets Markovian analysis [14] Coloured Petri nets occurrence graphs [12, 13] linear algebraic techniques [12, 13] e.g. place and transition invariants reduction techniques [21] (b) By adding extra information Linear optimization problems [15] linear programming (e.g. the simplex method) integer programming (e.g. relaxation,
Reference: 4. <author> W.M.P. van der Aalst. </author> <title> Interval Timed Coloured Petri Nets and their Analysis. </title> <editor> In M. Aj-mone Marsan, editor, </editor> <booktitle> Application and Theory of Petri Nets 1993, volume 691 of Lecture Notes in Computer Science, </booktitle> <pages> pages 453-472. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1993. </year>
Reference-contexts: In this paper we distinguish between direct analysis and indirect analysis. TABLE 1 An Overview of Analysis Approaches Direct analysis simulation - (reduced) reachability graphs <ref> [4] </ref> Indirect analysis (a) Without supplying additional information Classical Petri nets - coverability trees [16, 17, 19] linear algebraic techniques [16, 19, 20] e.g. place and transition invariants reduction techniques [16] Timed Petri nets - (reduced) reachability graphs [3, 7] cycle times [16, 20] Stochastic Petri nets Markovian analysis [14] Coloured
Reference: 5. <author> W.M.P. van der Aalst and A.W. Waltmans. </author> <title> Modelling Flexible Manufacturing Systems with EXSPECT. </title> <editor> In B. Schmidt, editor, </editor> <booktitle> Proceedings of the 1990 European Simulation Multiconference, </booktitle> <pages> pages 330-338, </pages> <address> Nurnberg, </address> <month> June </month> <year> 1990. </year> <institution> Simulation Councils Inc. </institution>
Reference: 6. <author> W.M.P. van der Aalst and A.W. Waltmans. </author> <title> Modelling logistic systems with EXSPECT. </title> <editor> In H.G. Sol and K.M. van Hee, editors, </editor> <booktitle> Dynamic Modelling of Information Systems, </booktitle> <pages> pages 269-288. </pages> <publisher> Elsevier Science Publishers, </publisher> <address> Amsterdam, </address> <year> 1991. </year>
Reference-contexts: At one level we want to give a simple description of the system (without having to consider all the details). At another level we want to specify a more detailed behaviour. For a more elaborate discussion on hierarchy constructs, the reader is referred to Jensen [12], van der Aalst <ref> [3, 6] </ref> and van Hee [9]. Language and Tools In the remainder of this paper we will refer to Petri nets extended with `colour', `time' and `hierarchy' as high-level Petri nets. Only a few high-level Petri net models (i.e. hierarchical timed coloured Petri net models) have been proposed in literature.
Reference: 7. <author> B. Berthomieu and M. Diaz. </author> <title> Modelling and verification of time dependent systems using Time Petri Nets. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 17(3) </volume> <pages> 259-273, </pages> <month> March </month> <year> 1991. </year>
Reference-contexts: An Overview of Analysis Approaches Direct analysis simulation - (reduced) reachability graphs [4] Indirect analysis (a) Without supplying additional information Classical Petri nets - coverability trees [16, 17, 19] linear algebraic techniques [16, 19, 20] e.g. place and transition invariants reduction techniques [16] Timed Petri nets - (reduced) reachability graphs <ref> [3, 7] </ref> cycle times [16, 20] Stochastic Petri nets Markovian analysis [14] Coloured Petri nets occurrence graphs [12, 13] linear algebraic techniques [12, 13] e.g. place and transition invariants reduction techniques [21] (b) By adding extra information Linear optimization problems [15] linear programming (e.g. the simplex method) integer programming (e.g. relaxation,
Reference: 8. <author> F.P.M. Biemans. </author> <title> Manufacturing Planning and Control: a reference model, </title> <booktitle> volume 10 of Manufacturing Research and Technology. </booktitle> <publisher> Elsevier Science Publishers, </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: This way we showed that it is possible to express the recent developments in logistics (JIT, MRP, BSC, Kanban), see [3]. In this section we have shown how production systems can be structured. In fact it is the beginning of a reference model for production systems (see also Biemans <ref> [8] </ref>). Based on such a reference model, we can develop a domain specific library composed of typical building blocks (i.e. subsystems) encountered in production systems.
Reference: 9. <author> K.M. van Hee. </author> <title> Information System Engineering: a Formal Approach. </title> <publisher> Cambridge University Press, </publisher> <year> 1994. </year>
Reference-contexts: At another level we want to specify a more detailed behaviour. For a more elaborate discussion on hierarchy constructs, the reader is referred to Jensen [12], van der Aalst [3, 6] and van Hee <ref> [9] </ref>. Language and Tools In the remainder of this paper we will refer to Petri nets extended with `colour', `time' and `hierarchy' as high-level Petri nets. Only a few high-level Petri net models (i.e. hierarchical timed coloured Petri net models) have been proposed in literature.
Reference: 10. <author> K.M. van Hee, L.J. Somers, and M. Voorhoeve. </author> <title> Executable specifications for distributed information systems. </title> <editor> In E.D. Falkenberg and P. Lindgreen, editors, </editor> <booktitle> Proceedings of the IFIP TC 8 / WG 8.1 Working Conference on Information System Concepts: An In-depth Analysis, </booktitle> <pages> pages 139-156, </pages> <address> Namur, Belgium, 1989. </address> <publisher> Elsevier Science Publishers, Amsterdam. </publisher>
Reference: 11. <author> K.M. van Hee, L.J. Somers, and M. Voorhoeve. </author> <title> A Modelling Environment for Decision Support Systems. </title> <booktitle> Decision Support Systems, </booktitle> <volume> 7(3) </volume> <pages> 241-251, </pages> <month> August </month> <year> 1991. </year>
Reference: 12. <author> K. Jensen. </author> <title> Coloured Petri Nets: A High Level Language for System Design and Analysis. </title> <editor> In G. Rozenberg, editor, </editor> <booktitle> Advances in Petri Nets 1990, volume 483 of Lecture Notes in Computer Science, </booktitle> <pages> pages 342-416. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1990. </year>
Reference-contexts: At one level we want to give a simple description of the system (without having to consider all the details). At another level we want to specify a more detailed behaviour. For a more elaborate discussion on hierarchy constructs, the reader is referred to Jensen <ref> [12] </ref>, van der Aalst [3, 6] and van Hee [9]. Language and Tools In the remainder of this paper we will refer to Petri nets extended with `colour', `time' and `hierarchy' as high-level Petri nets. <p> supplying additional information Classical Petri nets - coverability trees [16, 17, 19] linear algebraic techniques [16, 19, 20] e.g. place and transition invariants reduction techniques [16] Timed Petri nets - (reduced) reachability graphs [3, 7] cycle times [16, 20] Stochastic Petri nets Markovian analysis [14] Coloured Petri nets occurrence graphs <ref> [12, 13] </ref> linear algebraic techniques [12, 13] e.g. place and transition invariants reduction techniques [21] (b) By adding extra information Linear optimization problems [15] linear programming (e.g. the simplex method) integer programming (e.g. relaxation, branch-and-bound) Dynamic programming problems [15] Network models [15] Queueing networks [15] product form solution Direct analysis means <p> nets - coverability trees [16, 17, 19] linear algebraic techniques [16, 19, 20] e.g. place and transition invariants reduction techniques [16] Timed Petri nets - (reduced) reachability graphs [3, 7] cycle times [16, 20] Stochastic Petri nets Markovian analysis [14] Coloured Petri nets occurrence graphs <ref> [12, 13] </ref> linear algebraic techniques [12, 13] e.g. place and transition invariants reduction techniques [21] (b) By adding extra information Linear optimization problems [15] linear programming (e.g. the simplex method) integer programming (e.g. relaxation, branch-and-bound) Dynamic programming problems [15] Network models [15] Queueing networks [15] product form solution Direct analysis means that the high-level Petri net
Reference: 13. <author> K. Jensen. </author> <title> Coloured Petri Nets. Basic concepts, analysis methods and practical use. </title> <booktitle> EATCS monographs on Theoretical Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1992. </year>
Reference-contexts: supplying additional information Classical Petri nets - coverability trees [16, 17, 19] linear algebraic techniques [16, 19, 20] e.g. place and transition invariants reduction techniques [16] Timed Petri nets - (reduced) reachability graphs [3, 7] cycle times [16, 20] Stochastic Petri nets Markovian analysis [14] Coloured Petri nets occurrence graphs <ref> [12, 13] </ref> linear algebraic techniques [12, 13] e.g. place and transition invariants reduction techniques [21] (b) By adding extra information Linear optimization problems [15] linear programming (e.g. the simplex method) integer programming (e.g. relaxation, branch-and-bound) Dynamic programming problems [15] Network models [15] Queueing networks [15] product form solution Direct analysis means <p> nets - coverability trees [16, 17, 19] linear algebraic techniques [16, 19, 20] e.g. place and transition invariants reduction techniques [16] Timed Petri nets - (reduced) reachability graphs [3, 7] cycle times [16, 20] Stochastic Petri nets Markovian analysis [14] Coloured Petri nets occurrence graphs <ref> [12, 13] </ref> linear algebraic techniques [12, 13] e.g. place and transition invariants reduction techniques [21] (b) By adding extra information Linear optimization problems [15] linear programming (e.g. the simplex method) integer programming (e.g. relaxation, branch-and-bound) Dynamic programming problems [15] Network models [15] Queueing networks [15] product form solution Direct analysis means that the high-level Petri net
Reference: 14. <author> M. Ajmone Marsan, G. Balbo, and G. Conte. </author> <title> A Class of Generalised Stochastic Petri Nets for the Performance Evaluation of Multiprocessor Systems. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 2(2) </volume> <pages> 93-122, </pages> <month> May </month> <year> 1984. </year>
Reference-contexts: graphs [4] Indirect analysis (a) Without supplying additional information Classical Petri nets - coverability trees [16, 17, 19] linear algebraic techniques [16, 19, 20] e.g. place and transition invariants reduction techniques [16] Timed Petri nets - (reduced) reachability graphs [3, 7] cycle times [16, 20] Stochastic Petri nets Markovian analysis <ref> [14] </ref> Coloured Petri nets occurrence graphs [12, 13] linear algebraic techniques [12, 13] e.g. place and transition invariants reduction techniques [21] (b) By adding extra information Linear optimization problems [15] linear programming (e.g. the simplex method) integer programming (e.g. relaxation, branch-and-bound) Dynamic programming problems [15] Network models [15] Queueing networks [15]
Reference: 15. <author> J.J. Moder and S.E. Elmaghraby. </author> <title> Handbook of Operations Research : foundations and fundamentals. </title> <publisher> Van Nostrand Reinhold,New York, </publisher> <year> 1978. </year>
Reference-contexts: reduction techniques [16] Timed Petri nets - (reduced) reachability graphs [3, 7] cycle times [16, 20] Stochastic Petri nets Markovian analysis [14] Coloured Petri nets occurrence graphs [12, 13] linear algebraic techniques [12, 13] e.g. place and transition invariants reduction techniques [21] (b) By adding extra information Linear optimization problems <ref> [15] </ref> linear programming (e.g. the simplex method) integer programming (e.g. relaxation, branch-and-bound) Dynamic programming problems [15] Network models [15] Queueing networks [15] product form solution Direct analysis means that the high-level Petri net is analysed without transforming it into another model suitable for a specific analysis method. <p> 20] Stochastic Petri nets Markovian analysis [14] Coloured Petri nets occurrence graphs [12, 13] linear algebraic techniques [12, 13] e.g. place and transition invariants reduction techniques [21] (b) By adding extra information Linear optimization problems <ref> [15] </ref> linear programming (e.g. the simplex method) integer programming (e.g. relaxation, branch-and-bound) Dynamic programming problems [15] Network models [15] Queueing networks [15] product form solution Direct analysis means that the high-level Petri net is analysed without transforming it into another model suitable for a specific analysis method. Examples of direct analysis are simulation and the construction of the (reduced) reachability graph. <p> nets Markovian analysis [14] Coloured Petri nets occurrence graphs [12, 13] linear algebraic techniques [12, 13] e.g. place and transition invariants reduction techniques [21] (b) By adding extra information Linear optimization problems <ref> [15] </ref> linear programming (e.g. the simplex method) integer programming (e.g. relaxation, branch-and-bound) Dynamic programming problems [15] Network models [15] Queueing networks [15] product form solution Direct analysis means that the high-level Petri net is analysed without transforming it into another model suitable for a specific analysis method. Examples of direct analysis are simulation and the construction of the (reduced) reachability graph. <p> [14] Coloured Petri nets occurrence graphs [12, 13] linear algebraic techniques [12, 13] e.g. place and transition invariants reduction techniques [21] (b) By adding extra information Linear optimization problems <ref> [15] </ref> linear programming (e.g. the simplex method) integer programming (e.g. relaxation, branch-and-bound) Dynamic programming problems [15] Network models [15] Queueing networks [15] product form solution Direct analysis means that the high-level Petri net is analysed without transforming it into another model suitable for a specific analysis method. Examples of direct analysis are simulation and the construction of the (reduced) reachability graph.
Reference: 16. <author> T. Murata. </author> <title> Petri Nets: Properties, Analysis and Applications. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 77(4) </volume> <pages> 541-580, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: Since then the use and study of Petri nets has increased considerably. For a review of the history of Petri nets and an extensive bibliography the reader is referred to Murata <ref> [16] </ref>. The classical Petri net is a directed bipartite graph with two node types called called places and transitions. The nodes are connected via directed arcs. Connections between two nodes of the same type are not allowed. <p> The classical Petri net model has been used in many application areas, e.g. communication protocols, flexible manufacturing systems and distributed information systems (see Murata <ref> [16] </ref>). However, Petri nets describing real systems tend to be complex and extremely large. To solve these problems, many authors propose extensions of the basic Petri net model. We propose three extensions; `colour', `time' and `hierarchy'. <p> In this paper we distinguish between direct analysis and indirect analysis. TABLE 1 An Overview of Analysis Approaches Direct analysis simulation - (reduced) reachability graphs [4] Indirect analysis (a) Without supplying additional information Classical Petri nets - coverability trees <ref> [16, 17, 19] </ref> linear algebraic techniques [16, 19, 20] e.g. place and transition invariants reduction techniques [16] Timed Petri nets - (reduced) reachability graphs [3, 7] cycle times [16, 20] Stochastic Petri nets Markovian analysis [14] Coloured Petri nets occurrence graphs [12, 13] linear algebraic techniques [12, 13] e.g. place and <p> In this paper we distinguish between direct analysis and indirect analysis. TABLE 1 An Overview of Analysis Approaches Direct analysis simulation - (reduced) reachability graphs [4] Indirect analysis (a) Without supplying additional information Classical Petri nets - coverability trees [16, 17, 19] linear algebraic techniques <ref> [16, 19, 20] </ref> e.g. place and transition invariants reduction techniques [16] Timed Petri nets - (reduced) reachability graphs [3, 7] cycle times [16, 20] Stochastic Petri nets Markovian analysis [14] Coloured Petri nets occurrence graphs [12, 13] linear algebraic techniques [12, 13] e.g. place and transition invariants reduction techniques [21] (b) <p> TABLE 1 An Overview of Analysis Approaches Direct analysis simulation - (reduced) reachability graphs [4] Indirect analysis (a) Without supplying additional information Classical Petri nets - coverability trees [16, 17, 19] linear algebraic techniques [16, 19, 20] e.g. place and transition invariants reduction techniques <ref> [16] </ref> Timed Petri nets - (reduced) reachability graphs [3, 7] cycle times [16, 20] Stochastic Petri nets Markovian analysis [14] Coloured Petri nets occurrence graphs [12, 13] linear algebraic techniques [12, 13] e.g. place and transition invariants reduction techniques [21] (b) By adding extra information Linear optimization problems [15] linear programming <p> Approaches Direct analysis simulation - (reduced) reachability graphs [4] Indirect analysis (a) Without supplying additional information Classical Petri nets - coverability trees [16, 17, 19] linear algebraic techniques [16, 19, 20] e.g. place and transition invariants reduction techniques [16] Timed Petri nets - (reduced) reachability graphs [3, 7] cycle times <ref> [16, 20] </ref> Stochastic Petri nets Markovian analysis [14] Coloured Petri nets occurrence graphs [12, 13] linear algebraic techniques [12, 13] e.g. place and transition invariants reduction techniques [21] (b) By adding extra information Linear optimization problems [15] linear programming (e.g. the simplex method) integer programming (e.g. relaxation, branch-and-bound) Dynamic programming problems
Reference: 17. <author> J.L. Peterson. </author> <title> Petri net theory and the modeling of systems. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, </address> <year> 1981. </year>
Reference-contexts: In this paper we distinguish between direct analysis and indirect analysis. TABLE 1 An Overview of Analysis Approaches Direct analysis simulation - (reduced) reachability graphs [4] Indirect analysis (a) Without supplying additional information Classical Petri nets - coverability trees <ref> [16, 17, 19] </ref> linear algebraic techniques [16, 19, 20] e.g. place and transition invariants reduction techniques [16] Timed Petri nets - (reduced) reachability graphs [3, 7] cycle times [16, 20] Stochastic Petri nets Markovian analysis [14] Coloured Petri nets occurrence graphs [12, 13] linear algebraic techniques [12, 13] e.g. place and
Reference: 18. <institution> C.A. Petri. Kommunikation mit Automaten. </institution> <type> PhD thesis, </type> <institution> Institut fur instrumentelle Mathematik, Bonn, </institution> <year> 1962. </year>
Reference: 19. <author> W. Reisig. </author> <title> Petri nets: an introduction, </title> <booktitle> volume 4 of Monographs in theoretical computer science : an EATCS series. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1985. </year>
Reference-contexts: In this paper we distinguish between direct analysis and indirect analysis. TABLE 1 An Overview of Analysis Approaches Direct analysis simulation - (reduced) reachability graphs [4] Indirect analysis (a) Without supplying additional information Classical Petri nets - coverability trees <ref> [16, 17, 19] </ref> linear algebraic techniques [16, 19, 20] e.g. place and transition invariants reduction techniques [16] Timed Petri nets - (reduced) reachability graphs [3, 7] cycle times [16, 20] Stochastic Petri nets Markovian analysis [14] Coloured Petri nets occurrence graphs [12, 13] linear algebraic techniques [12, 13] e.g. place and <p> In this paper we distinguish between direct analysis and indirect analysis. TABLE 1 An Overview of Analysis Approaches Direct analysis simulation - (reduced) reachability graphs [4] Indirect analysis (a) Without supplying additional information Classical Petri nets - coverability trees [16, 17, 19] linear algebraic techniques <ref> [16, 19, 20] </ref> e.g. place and transition invariants reduction techniques [16] Timed Petri nets - (reduced) reachability graphs [3, 7] cycle times [16, 20] Stochastic Petri nets Markovian analysis [14] Coloured Petri nets occurrence graphs [12, 13] linear algebraic techniques [12, 13] e.g. place and transition invariants reduction techniques [21] (b)
Reference: 20. <author> M. Silva and R. Valette. </author> <title> Petri Nets and Flexible Manufacturing. </title> <editor> In G. Rozenberg, editor, </editor> <booktitle> Advances in Petri Nets 1989, volume 424 of Lecture Notes in Computer Science, </booktitle> <pages> pages 274-417. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1990. </year>
Reference-contexts: In this paper we distinguish between direct analysis and indirect analysis. TABLE 1 An Overview of Analysis Approaches Direct analysis simulation - (reduced) reachability graphs [4] Indirect analysis (a) Without supplying additional information Classical Petri nets - coverability trees [16, 17, 19] linear algebraic techniques <ref> [16, 19, 20] </ref> e.g. place and transition invariants reduction techniques [16] Timed Petri nets - (reduced) reachability graphs [3, 7] cycle times [16, 20] Stochastic Petri nets Markovian analysis [14] Coloured Petri nets occurrence graphs [12, 13] linear algebraic techniques [12, 13] e.g. place and transition invariants reduction techniques [21] (b) <p> Approaches Direct analysis simulation - (reduced) reachability graphs [4] Indirect analysis (a) Without supplying additional information Classical Petri nets - coverability trees [16, 17, 19] linear algebraic techniques [16, 19, 20] e.g. place and transition invariants reduction techniques [16] Timed Petri nets - (reduced) reachability graphs [3, 7] cycle times <ref> [16, 20] </ref> Stochastic Petri nets Markovian analysis [14] Coloured Petri nets occurrence graphs [12, 13] linear algebraic techniques [12, 13] e.g. place and transition invariants reduction techniques [21] (b) By adding extra information Linear optimization problems [15] linear programming (e.g. the simplex method) integer programming (e.g. relaxation, branch-and-bound) Dynamic programming problems
Reference: 21. <author> A. Valmari. </author> <title> Stubborn sets for reduced state space generation. </title> <booktitle> In Proceedings of the 10th International Conference on Applications and Theory of Petri Nets, </booktitle> <address> Bonn, </address> <month> June </month> <year> 1989. </year>
Reference-contexts: techniques [16, 19, 20] e.g. place and transition invariants reduction techniques [16] Timed Petri nets - (reduced) reachability graphs [3, 7] cycle times [16, 20] Stochastic Petri nets Markovian analysis [14] Coloured Petri nets occurrence graphs [12, 13] linear algebraic techniques [12, 13] e.g. place and transition invariants reduction techniques <ref> [21] </ref> (b) By adding extra information Linear optimization problems [15] linear programming (e.g. the simplex method) integer programming (e.g. relaxation, branch-and-bound) Dynamic programming problems [15] Network models [15] Queueing networks [15] product form solution Direct analysis means that the high-level Petri net is analysed without transforming it into another model suitable
Reference: 22. <author> J. Wessels. </author> <title> Tools for the Interfacing between Dynamical Problems within Decision Support Systems. </title> <type> COSOR-memorandum 91-29, </type> <institution> Eindhoven University of Technology, Eindhoven, </institution> <year> 1991. </year>
References-found: 22

