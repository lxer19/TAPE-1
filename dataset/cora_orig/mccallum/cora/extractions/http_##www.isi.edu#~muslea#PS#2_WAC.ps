URL: http://www.isi.edu/~muslea/PS/2_WAC.ps
Refering-URL: http://www.isi.edu/~muslea/papers.html
Root-URL: http://www.isi.edu
Email: muslea@isi.edu  
Title: A GENERAL-PURPOSE AI PLANNING SYSTEM BASED ON THE GENETIC PROGRAMMING PARADIGM  
Author: Ion Muslea 
Keyword: AI planning, genetic programming, conjunctive goals  
Address: California  
Affiliation: Computer Science Department Information Sciences Institute University of Southern  
Abstract: In this paper we describe SYNERGY, which is a general-purpose AI planning system that is based on the genetic programming paradigm. Rather than reasoning about the planning world, SYNERGY uses selection, mutation, recombination and fitness measure to generate linear plans that solve conjunctive goals. We ran SYNERGY on several domains, and the experimental results show that our planner solves problem instances that are up to two orders of magnitude larger than the ones solved by UCPOP. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Ambite, J.L., Knoblock, C. </author> <title> "Planning by Rewriting: Efficiently Generating High-Quality Plans." </title> <booktitle> In Proceedings of AAAI-97 706-713, </booktitle> <year> 1997. </year>
Reference-contexts: More recently, we witnessed the occurrence of the stochastic planners, which trade in the completeness of the planner for the speed up of the search process (e.g., SatPlan [7] or PBR <ref> [1] </ref> are at least one order of magnitude faster than the classic planning systems). In this paper we present SYNERGY, which is a general-purpose, stochastic AI planner based on the genetic programming paradigm [9].
Reference: 2. <author> Chapman, D. </author> <title> "Planning for Conjunctive Goals." </title> <booktitle> Artif. Intell. </booktitle> <month> 32 </month> <year> (1987) </year> <month> 333-377. </month>
Reference-contexts: INTRODUCTION Artificial intelligence (AI) planning is known to be an extremely hard problem (see <ref> [2] </ref>), and it is generally accepted that most non-trivial planning problems are at least NP-complete. In order to cope with the combinatorial explosion of the search problem, AI researchers proposed a wide variety of solutions, from search control rules [3] to hierarchical planning [8] to skeletal planning [5].
Reference: 3. <author> Etzioni, O. </author> <title> "Acquiring search-control knowledge via static analysis". </title> <booktitle> Artif. Intell. </booktitle> <month> 62 </month> <year> (1993) </year> <month> 255-302. </month>
Reference-contexts: In order to cope with the combinatorial explosion of the search problem, AI researchers proposed a wide variety of solutions, from search control rules <ref> [3] </ref> to hierarchical planning [8] to skeletal planning [5].
Reference: 4. <author> Fikes, R., Nilsson, N. </author> <title> "STRIPS: A New Approach to the Application of Theorem Proving to Problem Solving." </title> <booktitle> Artif. Intell. </booktitle> <month> 2 </month> <year> (1971) </year> <month> 189-208. </month>
Reference-contexts: But while SATPLAN turns the planning problem into a SAT problem, SYNERGY converts it into a GP problem (see Figure 1). Most AI planners define the planning actions in a declarative, STRIPS-like manner <ref> [4] </ref>. In contrast, SYNERGY requires a procedural description of the planning operators.
Reference: 5. <author> Friedland P., Imasaki, Y. </author> <title> "The Concept and Implementation of Skeletal Plans." </title> <editor> J. </editor> <booktitle> of Automated Reasoning 1 (1985), </booktitle> <pages> 161-208. </pages>
Reference-contexts: In order to cope with the combinatorial explosion of the search problem, AI researchers proposed a wide variety of solutions, from search control rules [3] to hierarchical planning [8] to skeletal planning <ref> [5] </ref>. More recently, we witnessed the occurrence of the stochastic planners, which trade in the completeness of the planner for the speed up of the search process (e.g., SatPlan [7] or PBR [1] are at least one order of magnitude faster than the classic planning systems).
Reference: 6. <author> Handley, S. </author> <title> "The Automatic Generation of Plans for a Mobile Robot via Genetic Programming with Automatically Defined Functions." Advances in Genetic Programming. Edited by K. </title> <editor> E. Kinnear Jr. </editor> <publisher> MIT Press, </publisher> <pages> 391-407, </pages> <year> 1994. </year>
Reference-contexts: It is important to note that other authors who solved AI planning problems based on the GP paradigm <ref> [6, 9, 11] </ref> did not have to solve the strongly-typed problem (STP) because of the particular nature of the planning problems considered. For instance, Handley solves the robot navigation problem by defining a GP encoding that uses only terminals.
Reference: 7. <author> Kautz, H., Selman, B. </author> <title> "Pushing the Envelope: Planning, Propositional Logic, </title> <booktitle> and Stochastic Search" Proceedings of AAAI-96 1194-1201, </booktitle> <year> 1996. </year>
Reference-contexts: More recently, we witnessed the occurrence of the stochastic planners, which trade in the completeness of the planner for the speed up of the search process (e.g., SatPlan <ref> [7] </ref> or PBR [1] are at least one order of magnitude faster than the classic planning systems). In this paper we present SYNERGY, which is a general-purpose, stochastic AI planner based on the genetic programming paradigm [9]. <p> AI PLANNING AS GENETIC PROGRAMMING In order to solve an AI planning problem, SYNERGY uses an approach similar to the one described in <ref> [7] </ref>: it converts the given problem-instance A to an equivalent problem-instance B of a different nature, it solves B based on a stochastic algorithm, and it converts the result of B to a solution for A.
Reference: 8. <author> Knoblock, C. </author> <title> "Search Reduction in Hierarchical Problem Solving." </title> <booktitle> Proceedings of the National Conference on Artificial Intelligence 686-691, </booktitle> <year> 1991. </year>
Reference-contexts: In order to cope with the combinatorial explosion of the search problem, AI researchers proposed a wide variety of solutions, from search control rules [3] to hierarchical planning <ref> [8] </ref> to skeletal planning [5]. More recently, we witnessed the occurrence of the stochastic planners, which trade in the completeness of the planner for the speed up of the search process (e.g., SatPlan [7] or PBR [1] are at least one order of magnitude faster than the classic planning systems).
Reference: 9. <editor> Koza, J. </editor> <booktitle> Genetic Programming II. </booktitle> <publisher> MIT Press 1994. </publisher>
Reference-contexts: In this paper we present SYNERGY, which is a general-purpose, stochastic AI planner based on the genetic programming paradigm <ref> [9] </ref>. Genetic programming (GP) is an automatic programming technique that uses evolution-like operations (e.g., reproduction, mutation, and cross-over) to generate and manipulate computer programs. <p> On one hand, planning operators are strongly-typed in the sense that each argument of an operator must be of a well-defined, preestablished type. On the other hand, GP functions are typeless and rely on the closure property <ref> [9] </ref>, which ensures that any value returned by a function or terminal represents a valid argument for any function in the function set. <p> It is important to note that other authors who solved AI planning problems based on the GP paradigm <ref> [6, 9, 11] </ref> did not have to solve the strongly-typed problem (STP) because of the particular nature of the planning problems considered. For instance, Handley solves the robot navigation problem by defining a GP encoding that uses only terminals. <p> For instance, Handley solves the robot navigation problem by defining a GP encoding that uses only terminals. Similarly, the versions of the blocks world problem solved in <ref> [9, 11] </ref> deal with a single domain concept (i.e., the BLOCK concept), and, consequently, there is no need to verify the type of the objects handled by the operators.
Reference: 10. <author> Sacerdoti, E. </author> <title> "The Nonlinear Nature of Plans." </title> <booktitle> Advanced Papers of the Fourth International Conference on Artificial Intelligence (IJCAI-75) 204-214, </booktitle> <year> 1975. </year>
Reference: 11. <author> Spector, L. </author> <title> "Genetic Programming and AI Planning Systems." </title> <booktitle> Proceedings of Twelfth National Conference of Artificial Intelligence 1329-1334, </booktitle> <year> 1994. </year>
Reference-contexts: It is important to note that other authors who solved AI planning problems based on the GP paradigm <ref> [6, 9, 11] </ref> did not have to solve the strongly-typed problem (STP) because of the particular nature of the planning problems considered. For instance, Handley solves the robot navigation problem by defining a GP encoding that uses only terminals. <p> For instance, Handley solves the robot navigation problem by defining a GP encoding that uses only terminals. Similarly, the versions of the blocks world problem solved in <ref> [9, 11] </ref> deal with a single domain concept (i.e., the BLOCK concept), and, consequently, there is no need to verify the type of the objects handled by the operators.
References-found: 11

