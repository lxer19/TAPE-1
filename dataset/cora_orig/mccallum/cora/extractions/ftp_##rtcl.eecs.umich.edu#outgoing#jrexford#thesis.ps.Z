URL: ftp://rtcl.eecs.umich.edu/outgoing/jrexford/thesis.ps.Z
Refering-URL: http://www.eecs.umich.edu/~jrexford/
Root-URL: http://www.cs.umich.edu
Title: Tailoring Router Architectures to Performance Requirements in Cut-Through Networks  
Author: by Jennifer Rexford Professor Kang G. Shin, Chair Associate Professor Richard B. Brown 
Degree: A dissertation submitted in partial fulfillment of the requirements for the degree of Doctor of Philosophy (Computer Science and Engineering) in The  Doctoral Committee:  Associate Professor Farnam Jahanian Professor Toby Teorey  
Date: 1996  
Affiliation: University of Michigan  
Abstract-found: 0
Intro-found: 1
Reference: <institution> 82 BIBLIOGRAPHY </institution>
Reference-contexts: In addition, researchers are investigating the use of cut-through routers as building blocks for constructing larger ATM (asynchronous transfer mode) switches for use in large-scale networks <ref> [82, 123, 124] </ref>. Compared to traditional parallel machines, high-speed switches and local area networks impose a wide range of communication characteristics and performance requirements on multicomputer routers. In addition, multicomputer components are increasingly used for multimedia and real-time applications, such as scientific visualization, process control, and video-on-demand servers. <p> Other work extends this M/M/1 analysis to consider delivery-time distributions [41] and fixed-length packets [1]. Extensions of virtual cut-through switching address specific error recovery mechanisms [58] and partial cut-throughs [1, 124]. In addition, using virtual cut-through switching within multistage ATM switches introduces new communication characteristics and performance requirements <ref> [82, 123, 124] </ref>, including bursty traffic with delay constraints. However, these analytical models do not address the impact of routing algorithms on cut-through switching performance.
Reference: [1] <author> S. Abraham and K. Padmanabhan, </author> <title> "Performance of multicomputer networks under pin-out constraints," </title> <journal> Journal of Distributed Computing, </journal> <pages> pp. 237-248, </pages> <year> 1991. </year>
Reference-contexts: Performance evaluation of cut-through schemes began with the work in [65], which presented a mean-value analysis of end-to-end latency for virtual cut-through switching under oblivious routing, derived from a queueing theory model for packet-switched networks. Other work extends this M/M/1 analysis to consider delivery-time distributions [41] and fixed-length packets <ref> [1] </ref>. Extensions of virtual cut-through switching address specific error recovery mechanisms [58] and partial cut-throughs [1, 124]. In addition, using virtual cut-through switching within multistage ATM switches introduces new communication characteristics and performance requirements [82, 123, 124], including bursty traffic with delay constraints. <p> Other work extends this M/M/1 analysis to consider delivery-time distributions [41] and fixed-length packets [1]. Extensions of virtual cut-through switching address specific error recovery mechanisms [58] and partial cut-throughs <ref> [1, 124] </ref>. In addition, using virtual cut-through switching within multistage ATM switches introduces new communication characteristics and performance requirements [82, 123, 124], including bursty traffic with delay constraints. However, these analytical models do not address the impact of routing algorithms on cut-through switching performance. <p> Let ff equal the likelihood of traveling in the preferred direction. The packet travels in the alternate direction only when the preferred link is busy and the alternative link is idle, so 1 ff = (1 ); since 2 <ref> [0; 1] </ref>, ff 3=4, ensuring that packets travel in the preferred directions at least three-fourths of the time.
Reference: [2] <author> A. Agarwal, </author> <title> "Limits on interconnection network performance," </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> vol. 2, no. 4, </volume> <pages> pp. 398-412, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: As a result, the choice of a topology impacts both the complexity of network wiring and the achievable communication bandwidth in the system <ref> [2, 33] </ref>. Mul-ticomputer networks vary from bus or ring topologies to fully-connected configurations, as shown in Figure 2.1. <p> As shown in Figure 3.7, the benefit of dimension-order routing becomes more significant for larger values of h, since packets travel through more nodes in each direction, changing dimensions only once <ref> [2, 106] </ref>. In contrast, Figure 3.6 (b) shows little difference between the dimension-ordered and random selection functions under adaptive routing, since the extra routing flexibility is sufficient to resolve these link conflicts.
Reference: [3] <author> J. D. Allen, P. T. Gaughan, D. E. Schimmel, and S. Yalamanchili, "Ariadne: </author> <title> An adaptive router for fault-tolerant multicomputers," </title> <booktitle> in Proceedings of the International Symposium on Computer Architecture, </booktitle> <pages> pp. 278-288, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: requires only one virtual channel per link to avoid deadlock, as in the Caltech Mesh Routing chip; the Network Design Frame 9 Router Topology Routing V-chans Arbitration iPSC/2 Direct-Connect [89] hypercube e-cube 1 | NCube 6400 [45] hypercube e-cube 1 | Virtual Channel Router [56] hypercube e-cube 2 fair Ariadne <ref> [3] </ref> 2-D torus adaptive 3 fair Table 2.2: Pipelined circuit-switched routers and the Message-Driven Processor include a second virtual channel to separate user and system messages (at different priority levels). In contrast, the torus topologies require two virtual channels per link, coupled with e-cube routing, to prevent communication deadlocks.
Reference: [4] <author> K. Aoyama and A. Chien, </author> <title> "Cost of adaptivity and virtual lanes in a wormhole router," </title> <journal> Journal of VLSI Design, </journal> <volume> vol. 2, no. 4, </volume> <pages> pp. 315-333, </pages> <year> 1995. </year>
Reference-contexts: In the last few years, researchers have proposed a wide variety of minimal and non-minimal adaptive routing algorithms, with different degrees of adaptivity and implementation com 6 plexity <ref> [4, 17, 46, 53, 87, 98] </ref>. When a routing algorithm must select from multiple output links at a node, the actual route chosen depends on a selection function that determines the order in which the algorithm considers these candidate links. <p> Although virtual channels improve router flexibility, they also affect network speed and implementation complexity, since each virtual channel requires arbitration logic as well as a small flit buffer <ref> [4] </ref>. 2.2.5 Buffer Architecture and Link Arbitration Careful selection of a routing algorithm reduces packet contention, improving a packet's chance of cutting through intermediate nodes. However, if two incoming packets route to the same outgoing link, one packet must be blocked and incur delay. <p> Although adding more virtual channels can improve priority resolution, this also incurs increased latency 53 overhead and implementation complexity for the router <ref> [4] </ref>. In addition, the router must enforce the multiple priority levels at its injection and reception ports to avoid unpredictable stalling at the network entry and exit points. Providing separate buffers for each priority level is effective for coarse-grain priority assignment, but this approach incurs significant cost for fine-grain resolution. <p> The router could improve best-effort performance by implementing adaptive wormhole routing, with additional virtual channels to avoid deadlock, at the expense of increased implementation complexity <ref> [4, 87] </ref>. In particular, non-minimal adaptive routing would enable best-effort packets to circumvent links with a heavy load of time-constrained traffic. 6.1.4 Buffer Architecture The real-time router includes a packet memory for storing time-constrained traffic awaiting access to the outgoing links; in contrast, blocked best-effort packets stall in the network.
Reference: [5] <author> C. M. Aras, J. F. Kurose, D. S. Reeves, and H. Schulzrinne, </author> <title> "Real-time communication in packet-switched networks," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 82, no. 1, </volume> <pages> pp. 122-139, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: However, most multicomputer routers implement demand-driven, round-robin arbitration to divide bandwidth fairly amongst the competing traffic. Other arbitration policies, such as fair queueing algorithms, dispense bandwidth in proportion to a set of weights <ref> [5, 125, 126] </ref>. These schemes ensure a minimum bandwidth to each channel, independent of the traffic on other channels. 2.3 Cut-Through Router Designs 2.3.1 Wormhole Routers Many contemporary research and commercial routers employ wormhole switching or pipelined circuit switching, as shown in Table 2.1 and Table 2.2. <p> Additionally, the design should not unduly penalize the performance of best-effort packets. Research in networking considers techniques for the effective mixing of multiple traffic classes in a communication fabric <ref> [5, 9] </ref>. However, the design trade-offs for parallel machines differ significantly from those in a heterogeneous, distributed environment. The shorter, wider communication links in most parallel machines result in much lower packet transmission delays, compared to distributed systems. <p> Providing separate buffers for each priority level is effective for coarse-grain priority assignment, but this approach incurs significant cost for fine-grain resolution. With packet queues at each node, the router can effectively utilize fine-grain priorities, such as deadlines, to assign access to output links <ref> [5, 63] </ref>. By buffering packets at each node, packet switching enables the router to schedule traffic to provide latency or bandwidth guarantees [63], as shown by the router architecture in Chapter 6. For example, suppose a time-constrained packet enters an intermediate node well in advance of its deadline. <p> Ultimately, bounding worst-case latency requires prior reservation of link and buffer resources, based on the application's anticipated traffic load <ref> [5, 125, 126] </ref>. Under this traffic contract, the network can provide end-to-end performance guarantees through effective link-scheduling and buffer-allocation policies. This chapter presents a real-time router design that handles a wide range of throughput and delay requirements by implementing the real-time channel [63] abstraction for packet scheduling. <p> Admitting a new connection, and selecting a multi-hop route with suitable local delay parameters, is a computationally-intensive procedure <ref> [5, 63, 129] </ref>. Fortunately, channel establishment typically does not impose tight timing constraints; in most cases, the network can create the required channels before data transfer commences. To permit a single-chip solution, the real-time router relegates these non-real-time operations to the protocol software.
Reference: [6] <author> K. Arvind, K. Ramamritham, and J. A. Stankovic, </author> <title> "A local area network architecture for communication in distributed real-time systems," </title> <journal> Journal of Real-Time Systems, </journal> <volume> vol. 3, no. 2, </volume> <pages> pp. 115-147, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: Real-time applications typically handle a mixture of time-constrained and best-effort communication, where time-constrained packets require bounds on latency and throughput, while best-effort traffic settles for good average performance <ref> [6, 54, 112, 113] </ref>. Based on simulation experiments, Chapter 5 proposes effective techniques for mixing the time-constrained and best-effort packets without sacrificing the performance goals of either traffic class.
Reference: [7] <author> W. Athas and C. Seitz, </author> <title> "Multicomputers: Message-passing concurrent computers," </title> <journal> IEEE Computer Magazine, </journal> <pages> pp. 9-24, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: On the other hand, a blocked wormhole packet stalls in the network, holding the earlier links in its route until the outgoing link becomes free. Although first-generation multicomputers employed packet switching, most contemporary research and commercial routers utilize cut-through switching for lower latency and reduced buffer space requirements <ref> [7, 99, 127] </ref>. For example, the Intel iPSC/1, nCube/3200, and Ametek/14 implemented store-and-forward packet switching, with each processing node interrupting application tasks to buffer and forward incoming packets [127].
Reference: [8] <author> H. G. Badr and S. Podar, </author> <title> "An optimal shortest-path routing policy for network computers with regular mesh-connected topologies," </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. C-38, no. 10, </volume> <pages> pp. 1362-1370, </pages> <month> October </month> <year> 1989. </year>
Reference-contexts: This link ordering improves the packet's chance of considering multiple outgoing links at future nodes in its route <ref> [8, 39] </ref>. <p> Nodes (i; j) with i &lt; x and j &lt; y have two outgoing links on minimal paths to the destination node, as shown in Figure 3.3. These internal nodes have greater routing flexibility than the remaining border nodes <ref> [8] </ref>. The next section analyzes various adaptive routing algorithms by deriving S n (x;y) = P [packet visits n internal nodes]; n = 0; 1; : : : h 1 in traveling x hops in the x-direction and y-hops in the y-direction, where h = x + y.
Reference: [9] <author> J. J. Bae and T. Suda, </author> <title> "Survey of traffic control schemes and protocols in ATM networks," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 79, no. 2, </volume> <pages> pp. 170-189, </pages> <month> February </month> <year> 1991. </year>
Reference-contexts: Additionally, the design should not unduly penalize the performance of best-effort packets. Research in networking considers techniques for the effective mixing of multiple traffic classes in a communication fabric <ref> [5, 9] </ref>. However, the design trade-offs for parallel machines differ significantly from those in a heterogeneous, distributed environment. The shorter, wider communication links in most parallel machines result in much lower packet transmission delays, compared to distributed systems.
Reference: [10] <author> S. Balakrishnan and F. Ozguner, </author> <title> "Providing message delivery guarantees in pipelined flit-buffered multiprocessor networks," </title> <booktitle> in Proceedings of the Real-Time Technology and Applications Symposium, </booktitle> <pages> pp. 120-129, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: As a result, real-time and multimedia applications must under-utilize the network to achieve predictable performance. To address this problem, several recent projects consider new router architectures that can guarantee end-to-end communication performance in multicomputer networks <ref> [10, 69, 77, 83, 91, 108, 119, 122] </ref>. 1.2 Structure of the Thesis This thesis presents effective techniques for the design and evaluation of router architectures that accommodate the performance requirements of emerging multicomputer applications.
Reference: [11] <author> R. C. Bedichek, "Talisman: </author> <title> Fast and accurate multicomputer simulation," </title> <booktitle> in Proceedings of ACM SIGMETRICS/Performance, </booktitle> <pages> pp. 14-24, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: To overcome these limitations, several researchers have developed mul-ticomputer simulators in the past few years. In contrast to toolkits for evaluating local and wide area networks [75], these simulators attempt to capture the unique characteristics of multicomputer applications and interconnection networks. Execution-driven simulators <ref> [11, 40, 93] </ref> typically model the instruction-level operation of applications on particular parallel machines. Other simulation tools emphasize multicomputer network architectures, allowing users to evaluate routing algorithms and switching schemes under various synthetic traffic patterns [16, 62, 81].
Reference: [12] <author> F. Blitzer, </author> <title> "Militarized touchtone program," </title> <booktitle> in Proceedings of the IEEE National Aerospace and Electronics Conference, </booktitle> <pages> pp. 137-143, </pages> <year> 1993. </year> <month> 83 </month>
Reference-contexts: In addition, multicomputer components are increasingly used for multimedia and real-time applications, such as scientific visualization, process control, and video-on-demand servers. These applications require predictable communication performance, in addition to low latency and high throughput. Initially, real-time multicomputer applications have employed existing interconnection networks, such as the Intel Paragon <ref> [12, 52] </ref> and the nCube/3 [20], with no explicit support for time-constrained communication. However, on many existing multicomputer systems, worst-case packet latency can theoret 2 ically be as large as several days [69]. As a result, real-time and multimedia applications must under-utilize the network to achieve predictable performance.
Reference: [13] <author> M. A. Blumrich, K. Li, R. Alpert, C. Dubnicki, E. W. Felten, and J. Sandberg, </author> <title> "Vir--tual memory mapped network interface for the SHRIMP multicomputer," </title> <booktitle> in Proceedings of the International Symposium on Computer Architecture, </booktitle> <pages> pp. 142-153, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: Still, wormhole and virtual cut-through switching are viable options in more homogeneous, tightly-coupled domains, such as workstation clusters and high-speed switch designs. As a result, several new systems incorporate multicomputer routers to achieve low-latency, high-bandwidth communication in local area networks. The Atomic [24] and Shrimp <ref> [13] </ref> research projects demonstrate the power of this paradigm, which has been incorporated in commercial products such as Sun Microsystem's S-Connect [88] and Myri-com's Myrinet [14].
Reference: [14] <author> N. Boden, D. Cohen, R. Felderman, A. Kulawik, C. Seitz, J. Seizovic, and W.-K. Su, "Myrinet: </author> <title> A gigabit-per-second local area network," </title> <booktitle> IEEE Micro, </booktitle> <pages> pp. 29-36, </pages> <month> February </month> <year> 1995. </year>
Reference-contexts: As a result, several new systems incorporate multicomputer routers to achieve low-latency, high-bandwidth communication in local area networks. The Atomic [24] and Shrimp [13] research projects demonstrate the power of this paradigm, which has been incorporated in commercial products such as Sun Microsystem's S-Connect [88] and Myri-com's Myrinet <ref> [14] </ref>. In addition, researchers are investigating the use of cut-through routers as building blocks for constructing larger ATM (asynchronous transfer mode) switches for use in large-scale networks [82, 123, 124].
Reference: [15] <author> K. Bolding, S.-C. Cheung, S.-E. Choi, C. Ebeling, S. Hassoun, T. A. Ngo, and R. Wille, </author> <title> "The Chaos router chip: Design and implementation of an adaptive router," </title> <booktitle> in Proceedings of the IFIP International Conference on VLSI, </booktitle> <pages> pp. 311-320, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: While the DEC AN1 has flexible routing support, FIFO input buffers limit network performance, since a blocked head-of-line packet prohibits other traffic from utilizing idle output links. In contrast, the ComCoBB 10 Router Topology Routing Queueing Mayfly Post-Office [39] wrapped hexagonal adaptive shared output Chaos Router <ref> [15] </ref> 2-D torus non-minimal adaptive shared pool DEC AN1 [94] flexible table look-up, adaptive input ComCoBB [116] flexible table look-up partitioned input Artic Router [18] multistage static input pools Table 2.3: Virtual cut-through routers switch avoids head-of-line blocking by separating packets destined for different output links.
Reference: [16] <author> K. Bolding, S.-E. Choi, and M. Fulgham. </author> <title> The Chaos Router Simulator. Presentation at the Parallel Computer Routing and Communication Workshop, </title> <month> May </month> <year> 1994. </year>
Reference-contexts: Execution-driven simulators [11, 40, 93] typically model the instruction-level operation of applications on particular parallel machines. Other simulation tools emphasize multicomputer network architectures, allowing users to evaluate routing algorithms and switching schemes under various synthetic traffic patterns <ref> [16, 62, 81] </ref>. However, these simulators do not capture the subtle relationship between router architecture and application communication requirements.
Reference: [17] <author> R. Boppana and S. Chalasani, </author> <title> "A comparison of adaptive wormhole routing algorithms," </title> <booktitle> in Proceedings of the International Symposium on Computer Architecture, </booktitle> <pages> pp. 351-360, </pages> <year> 1993. </year>
Reference-contexts: Also, parallel algorithms introduce specific non-uniform traffic patterns. For example, many scientific applications generate communication workloads that correspond to the matrix-transpose (dimension-reversal), bit-complement, and bit-reversal permutations [23, 32, 66, 98]. Other application communication constructs, such as synchronization or multicast operations, may induce hot-spots of heavily-utilized nodes and links <ref> [17, 36, 98] </ref>. 2.2 Multicomputer Interconnection Networks 2.2.1 Network Topology By defining the connections between processing nodes, the network topology determines the number of communication links at each node and how far a packet must travel to reach its destination [47, 100]. <p> In the last few years, researchers have proposed a wide variety of minimal and non-minimal adaptive routing algorithms, with different degrees of adaptivity and implementation com 6 plexity <ref> [4, 17, 46, 53, 87, 98] </ref>. When a routing algorithm must select from multiple output links at a node, the actual route chosen depends on a selection function that determines the order in which the algorithm considers these candidate links. <p> Additional virtual channels permit the construction of adaptive routing algorithms with deadlock-avoidance guarantees [44]; typically, the more flexible adaptive routing algorithms require more virtual channels to prevent deadlock <ref> [17, 87, 98] </ref>. Multicomputer networks can also use virtual channels to logically segregate traffic with different characteristics or performance requirements. For example, a router could employ separate virtual channels to separate short and long packets [67, 68, 73] or control and data packets [30, 35].
Reference: [18] <author> G. A. Boughton, </author> <title> "Artic routing chip," </title> <booktitle> in Proceedings of the Parallel Computer Routing and Communication Workshop, </booktitle> <pages> pp. 310-317, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: In contrast, the ComCoBB 10 Router Topology Routing Queueing Mayfly Post-Office [39] wrapped hexagonal adaptive shared output Chaos Router [15] 2-D torus non-minimal adaptive shared pool DEC AN1 [94] flexible table look-up, adaptive input ComCoBB [116] flexible table look-up partitioned input Artic Router <ref> [18] </ref> multistage static input pools Table 2.3: Virtual cut-through routers switch avoids head-of-line blocking by separating packets destined for different output links. While each input link has a single packet buffer, this memory includes a separate logical FIFO for each output link [116].
Reference: [19] <author> P. E. Boyer, F. M. Guillemin, M. J. Servel, and J.-P. Coudreuse, </author> <title> "Spacing cells protects and enhances utilization of ATM network links," </title> <journal> IEEE Network Magazine, </journal> <pages> pp. 38-49, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: As a result, packet size determines the acceptable worst-case scheduling delay, limiting both the maximum number of time-constrained packets and the size of the sorting keys [96]; to facilitate a single-chip solution, our design efficiently handles a moderate number of packets. Since packet sorting can introduce considerable hardware complexity <ref> [19, 22, 79, 96, 105, 121] </ref>, particularly when connections have a wide range of delay and bandwidth parameters, the real-time router shares the scheduling logic amongst the early and on-time packets headed for any of the five outgoing ports.
Reference: [20] <author> R. Buck, </author> <title> "The Oracle media server for nCUBE massively parallel system," </title> <booktitle> in Proceedings of the International Parallel Processing Symposium, </booktitle> <pages> pp. 670-673, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: These applications require predictable communication performance, in addition to low latency and high throughput. Initially, real-time multicomputer applications have employed existing interconnection networks, such as the Intel Paragon [12, 52] and the nCube/3 <ref> [20] </ref>, with no explicit support for time-constrained communication. However, on many existing multicomputer systems, worst-case packet latency can theoret 2 ically be as large as several days [69]. As a result, real-time and multimedia applications must under-utilize the network to achieve predictable performance.
Reference: [21] <author> P. J. Burke, </author> <title> "The output of a queueing system," </title> <journal> Operations Research, </journal> <volume> vol. 4, </volume> <pages> pp. 699-704, </pages> <year> 1956. </year>
Reference-contexts: Under this assumption, a mixture of sources with Poisson arrivals produces a Poissonian output stream for the link <ref> [21] </ref>; this link, in turn, forms the traffic source for an input link to an adjacent node. With sufficient randomization of packet routes, the Poissonian traffic permits a product-form solution that separately analyzes each link in a packet's route, by Jackson's theorem [60].
Reference: [22] <author> H. J. Chao, </author> <title> "A novel architecture for queue management in the ATM network," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 9, no. 7, </volume> <pages> pp. 1110-1118, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: As a result, packet size determines the acceptable worst-case scheduling delay, limiting both the maximum number of time-constrained packets and the size of the sorting keys [96]; to facilitate a single-chip solution, our design efficiently handles a moderate number of packets. Since packet sorting can introduce considerable hardware complexity <ref> [19, 22, 79, 96, 105, 121] </ref>, particularly when connections have a wide range of delay and bandwidth parameters, the real-time router shares the scheduling logic amongst the early and on-time packets headed for any of the five outgoing ports.
Reference: [23] <author> S. Chittor and R. Enbody, </author> <title> "Performance evaluation of mesh-connected wormhole-routed networks for interprocessor communication in multicomputers," </title> <booktitle> in Supercomputing, </booktitle> <pages> pp. 647-656, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: In addition, many applications exhibit temporal locality, where a node sends several messages to the same destination over a small time interval. Also, parallel algorithms introduce specific non-uniform traffic patterns. For example, many scientific applications generate communication workloads that correspond to the matrix-transpose (dimension-reversal), bit-complement, and bit-reversal permutations <ref> [23, 32, 66, 98] </ref>.
Reference: [24] <author> D. Cohen, G. G. Finn, R. Felderman, and A. DeSchon, </author> <title> "The use of message-based multicomputer components to construct gigabit networks," </title> <journal> Computer Communication Review, </journal> <volume> vol. 23, no. 3, </volume> <pages> pp. 32-44, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: Still, wormhole and virtual cut-through switching are viable options in more homogeneous, tightly-coupled domains, such as workstation clusters and high-speed switch designs. As a result, several new systems incorporate multicomputer routers to achieve low-latency, high-bandwidth communication in local area networks. The Atomic <ref> [24] </ref> and Shrimp [13] research projects demonstrate the power of this paradigm, which has been incorporated in commercial products such as Sun Microsystem's S-Connect [88] and Myri-com's Myrinet [14]. <p> flexibility, the next chapter investigates router architectures that tailor routing-switching policies and arbitration schemes to address the requirements of emerging real-time applications. 49 CHAPTER 5 SWITCHING POLICIES IN REAL-TIME MULTICOMPUTERS Although multicomputer router design has traditionally emphasized providing low-latency communication, modern parallel applications require additional services from the interconnection network <ref> [24, 27] </ref>. Multimedia and real-time applications, such as scientific visualization and process control, necessitate control over throughput, worst-case latency, and delay variance (jitter) [51, 122]. While time-constrained traffic necessitates deterministic or probabilistic bounds on throughput or end-to-end delay, best-effort service often suffices for the remaining traffic.
Reference: [25] <institution> Cray T3D System Architecture Overview, Cray Research, Inc., </institution> <year> 1993. </year>
Reference-contexts: Keeping with this trend, companies like Intel, IBM, Thinking Machines, and Cray Research developed new multicomputer systems based on wormhole-switched networks <ref> [25, 59, 76, 85, 95, 114, 115] </ref> during the first half of the 1990s. Similarly, most research multicomputer networks employ virtual cut-through or wormhole switching, or hybrid schemes, as discussed in Chapter 2.
Reference: [26] <author> R. L. Cruz, </author> <title> "A calculus for network delay, part I: Network elements in isolation," </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> vol. 37, no. 1, </volume> <pages> pp. 114-131, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: To permit some variation from purely periodic traffic, a connection can generate a burst of up to B max messages in excess of the periodic restriction I min . Together, these three parameters form a linear bounded arrival process <ref> [26] </ref> that governs a connection's traffic generation at the source node. End-to-end delay bound: In addition to these traffic parameters, a connection has a bound D on end-to-end message delay, based on the minimum message spacing I min .
Reference: [27] <author> R. Cypher, A. Ho, S. Konstantinidou, and P. Messina, </author> <title> "Architectural requirements of parallel scientific applications with explicit communication," </title> <booktitle> in Proceedings of the International Symposium on Computer Architecture, </booktitle> <pages> pp. 2-13, </pages> <month> May </month> <year> 1993. </year> <month> 84 </month>
Reference-contexts: Parallel applications generate a wide range of communication workloads depending on the application's granularity and mapping across multiple nodes, as well as the policies employed by the interconnection network. Scientific computations, parallel databases, and real-time applications generate distinct distributions for message/packet lengths, interar-rival times, and target destination nodes <ref> [27, 57, 77, 107] </ref>. Multi-user systems exacerbate these effects since different applications may run simultaneously; these applications may execute on different parts of the network or even time-share the same processing elements. <p> This assumption was made, in part, due to the analytical tractability of such models and the lack of more 4 realistic data. However, detailed measurements of multicomputer applications have led to more sophisticated message generation models. In particular, recent studies show that applications typically generate bursty network traffic <ref> [27, 57] </ref>, due to multi-packet messages and fine-grain interaction between cooperating nodes. Similarly, many parallel applications invoke multicast operations that send a message to a collection of destination nodes, injecting multiple copies of each packet into the interconnection network. These traffic models have significant impact on network design and evaluation. <p> Although fixed-length packets or exponentially-distributed lengths simplify analytic performance models, recent studies show that real multicomputer applications often generate a mixture of large data transfers and small request/acknowledgement packets <ref> [27, 57] </ref>. Without careful support in the router architecture, these bimodal length distributions can seriously degrade average latency by forcing short packets to queue behind long packets for access to link and buffer resources [67]. <p> Each virtual channel has enough buffer space to store a small packet, while longer packets spread across multiple nodes. Since multicom-puter applications typically generate a mixture of short and long packets <ref> [27, 67] </ref>, router support for these two traffic classes can significantly improve performance. Short packets incur large end-to-end latency when forced to wait behind long packets for access to the network links [49, 67]. <p> flexibility, the next chapter investigates router architectures that tailor routing-switching policies and arbitration schemes to address the requirements of emerging real-time applications. 49 CHAPTER 5 SWITCHING POLICIES IN REAL-TIME MULTICOMPUTERS Although multicomputer router design has traditionally emphasized providing low-latency communication, modern parallel applications require additional services from the interconnection network <ref> [24, 27] </ref>. Multimedia and real-time applications, such as scientific visualization and process control, necessitate control over throughput, worst-case latency, and delay variance (jitter) [51, 122]. While time-constrained traffic necessitates deterministic or probabilistic bounds on throughput or end-to-end delay, best-effort service often suffices for the remaining traffic.
Reference: [28] <author> W. J. Dally and C. L. Seitz, </author> <title> "The torus routing chip," </title> <journal> Journal of Distributed Com--puting, </journal> <volume> vol. 1, no. 3, </volume> <pages> pp. 187-196, </pages> <year> 1986. </year>
Reference-contexts: Traditional packet switching requires an arriving packet to buffer completely before transmission to a subsequent node can begin. In contrast, cut-through switching schemes, such as virtual cut-through [65] and wormhole <ref> [28] </ref> switching, attempt to directly forward the incoming packet to an idle output link. If the packet encounters a busy outgoing link, virtual cut-through 1 switching buffers the packet. <p> Even in the absence of network congestion, packet switching incurs delay proportional to the product of packet size and the length of the route. In contrast, cut-through switching schemes, such as virtual cut-through [65] and wormhole <ref> [28] </ref> switching, try to forward an in-transit packet directly to an idle output link, based on the routing header and prevailing network conditions. <p> scheme places a first-in first-out (FIFO) queue at each input link to store packets unable 8 Router Topology Routing V-chans Arbitration Mesh Routing Chip [110] 2-D mesh e-cube 1 | Network Design Frame [30] 2-D mesh e-cube 2 priority Message-Driven Processor [35] 3-D mesh e-cube 2 priority Torus Routing Chip <ref> [28] </ref> 2-D torus e-cube 2 fair Reliable Router [34] 2-D mesh adaptive 5 fair IMS C104 Switch [117] flexible interval routing, 1 | universal routing Table 2.1: Wormhole routers to access their chosen output link.
Reference: [29] <author> W. J. Dally and C. L. Seitz, </author> <title> "Deadlock-free message routing in multiprocessor interconnection networks," </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. C-36, no. 5, </volume> <pages> pp. 547-553, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: By supporting multiple virtual channels on each link, a router can allow incoming traffic to bypass stalled packets on different virtual channels. This can substantially improve the achievable network throughput of wormhole switching. In addition, virtual channels play an important role in avoiding packet deadlocks, particularly in wormhole networks <ref> [29, 87] </ref>. Deadlock arises when a chain of packets stall in the network, with each packet blocking the forward progress of another packet. A router can preclude such circular dependencies by restricting the order in which packets can access virtual channels. <p> However, in a torus topology a chain of blocked packets can halt all forward progress in a particular row or column of the network. To avoid potential packet deadlocks, the router can divide each link into two virtual channels and break the circular dependencies in the underlying topology <ref> [29] </ref>. Additional virtual channels permit the construction of adaptive routing algorithms with deadlock-avoidance guarantees [44]; typically, the more flexible adaptive routing algorithms require more virtual channels to prevent deadlock [17, 87, 98]. Multicomputer networks can also use virtual channels to logically segregate traffic with different characteristics or performance requirements. <p> Virtual cut-through and packet switching utilize one virtual channel for each physical link and store buffered packets in output queues in the router. Wormhole packets employ deadlock-free routing on a pair of virtual channels <ref> [29] </ref> with demand-driven, round-robin arbitration amongst the virtual channels; each virtual channel can hold a single 51 flit pending access to the output link. Even with this small amount of memory resources, wormhole switching performs well at low loads, slightly outperforming virtual cut-through switching. <p> In contrast, best-effort traffic does not require resource reservation along packet routes. Instead, the real-time router implements dimension-ordered routing, a shortest-path scheme that completely routes a packet in the x-direction before proceeding in the y-direction to the destination. Dimension-ordered routing avoids packet deadlock in a square mesh <ref> [29] </ref> and also facilitates an efficient implementation based on x and y offsets in the packet header, as shown in Figure 6.4 (b); the offsets reach zero when the packet has arrived at its destination node.
Reference: [30] <author> W. J. Dally and P. Song, </author> <title> "Design of a self-timed VLSI multicomputer communication controller," </title> <booktitle> in Proceedings of the IEEE International Conference on Computer Design, </booktitle> <pages> pp. 230-234, </pages> <year> 1987. </year>
Reference-contexts: Multicomputer networks can also use virtual channels to logically segregate traffic with different characteristics or performance requirements. For example, a router could employ separate virtual channels to separate short and long packets [67, 68, 73] or control and data packets <ref> [30, 35] </ref>. By assigning separate logical resources to each set of packets, the router effectively limits the interaction between the traffic classes. This can improve performance by limiting the number of long data packets that can receive service ahead of a short control packet. <p> The simplest buffering scheme places a first-in first-out (FIFO) queue at each input link to store packets unable 8 Router Topology Routing V-chans Arbitration Mesh Routing Chip [110] 2-D mesh e-cube 1 | Network Design Frame <ref> [30] </ref> 2-D mesh e-cube 2 priority Message-Driven Processor [35] 3-D mesh e-cube 2 priority Torus Routing Chip [28] 2-D torus e-cube 2 fair Reliable Router [34] 2-D mesh adaptive 5 fair IMS C104 Switch [117] flexible interval routing, 1 | universal routing Table 2.1: Wormhole routers to access their chosen output <p> In this approach, the router divides each physical link into multiple virtual channels, where some virtual channels carry best-effort packets and the rest accept only time-constrained traffic. Virtual channels provide an effective mechanism for reducing the interaction between packets while still allowing traffic to share network bandwidth <ref> [30, 35, 43, 73, 95] </ref>. Exporting the virtual channel abstraction to the injection and reception ports further prevents intrusion between packets at the network entry and exit points [43, 67, 95].
Reference: [31] <author> W. Dally, </author> <title> "Virtual-channel flow control," </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> vol. 3, no. 2, </volume> <pages> pp. 194-205, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: The router can amortize this overhead by temporarily maintaining the channel reservations, since subsequent packets may reuse the route in the near future [56]. 2.2.4 Virtual Channels For additional routing and switching flexibility, a multicomputer can extend its underlying physical topology by dividing each link into multiple virtual channels <ref> [31] </ref>. Although the router allocates these logical links on a per-packet basis, each link interleaves its virtual channels at the flit level. As a result, the link can service any virtual channel that has a flit to send, as long as the downstream router has sufficient buffer space. <p> The simplest approach statically assigns link bandwidth to each queue or virtual channel, but demand-driven arbitration schemes better utilize the available network bandwidth. Priority-based schemes may improve performance by favoring longer queues or packets with stricter end-to-end delay requirements <ref> [31, 77, 120] </ref>. However, most multicomputer routers implement demand-driven, round-robin arbitration to divide bandwidth fairly amongst the competing traffic. Other arbitration policies, such as fair queueing algorithms, dispense bandwidth in proportion to a set of weights [5, 125, 126]. <p> The oblivious dimension-order routing algorithm uses the extra virtual channel to reduce contention between packets traveling on the same link <ref> [31] </ref>. Contrary to intuition, oblivious routing consistently outperforms adaptive routing in node (c; d) to communicate with node (7 c; 7 d). As a result, all packets must eventually cross both the middle row and the middle column of the mesh, irrespective of the routing algorithm. <p> In contrast, a blocked wormhole packet stalls in the network, effectively dilating its length until its outgoing channel becomes available. As a result, wormhole networks typically utilize only a fraction of the available network bandwidth <ref> [31, 86] </ref>, as seen by the early saturation of the wormhole plot in Figure 5.1. At higher loads, this effect enables packet switching to outperform wormhole switching, even though packet switching introduces buffering delay at each hop in a packet's route. <p> At higher loads, this effect enables packet switching to outperform wormhole switching, even though packet switching introduces buffering delay at each hop in a packet's route. Although including additional virtual channels can improve the throughput of a wormhole network <ref> [31] </ref>, channel contention still creates dependencies amongst packets spanning multiple nodes. The sensitivity of wormhole networks to slight changes in load, including short communication bursts [32], complicates the use of wormhole switching for time-constrained traffic. <p> Demand-driven arbitration for access to the physical links, while important for low average latency, complicates the effort to export a predictable flit or packet service rate to a static or run-time scheduling algorithm. Although adding virtual channels can reduce contention <ref> [31] </ref>, and hence average latency, additional virtual channels also increase the potential variability in the number of flits awaiting access to each physical link, further complicating the flit service rate. <p> These decentralized queues complicate packet scheduling. Still, a wormhole router can influence resource allocation through its virtual channel reservation and arbitration policies. Priority assignment of virtual channels to incoming packets improves predictability; adaptive arbitration policies can further reduce variability by basing flit bandwidth allocation on packet deadlines or priority <ref> [31, 77, 78, 120] </ref>. While assigning priorities to virtual channels provides some control over packet scheduling, this ties priority resolution to the number of virtual channels.
Reference: [32] <author> W. Dally and H. Aoki, </author> <title> "Deadlock-free adaptive routing in multicomputer networks using virtual channels," </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> vol. 4, no. 4, </volume> <pages> pp. 466-475, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: In addition, many applications exhibit temporal locality, where a node sends several messages to the same destination over a small time interval. Also, parallel algorithms introduce specific non-uniform traffic patterns. For example, many scientific applications generate communication workloads that correspond to the matrix-transpose (dimension-reversal), bit-complement, and bit-reversal permutations <ref> [23, 32, 66, 98] </ref>. <p> In addition to these two options, and the random selection function, Net can rank outgoing links according to network congestion, giving preference to links with fewer busy virtual channels <ref> [32] </ref>; this balances traffic load amongst the outgoing links, reducing contention and packet delay. In addition to supporting routing-switching algorithms, Net also insulates the Node and Workload modules from the details of the network topology. <p> Although including additional virtual channels can improve the throughput of a wormhole network [31], channel contention still creates dependencies amongst packets spanning multiple nodes. The sensitivity of wormhole networks to slight changes in load, including short communication bursts <ref> [32] </ref>, complicates the use of wormhole switching for time-constrained traffic. Still, wormhole switching is particularly well-suited to best-effort packets, due to its low latency and minimal buffer space requirements.
Reference: [33] <author> W. J. Dally, </author> <title> "Performance analysis of k-ary n-cube interconnection networks," </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. 39, no. 6, </volume> <pages> pp. 775-785, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: As a result, the choice of a topology impacts both the complexity of network wiring and the achievable communication bandwidth in the system <ref> [2, 33] </ref>. Mul-ticomputer networks vary from bus or ring topologies to fully-connected configurations, as shown in Figure 2.1. <p> Most existing multicomputers have direct networks, which consist of point-to-point links, while other indirect networks connect processors through multiple stages of switches. Many systems employ the k-ary n-cube family of topologies, with k nodes along each of n dimensions <ref> [33] </ref>; Figures 2.1 (b) and 2.1 (f ) show a 6-ary 1-cube and a 4-ary 2-cube, respectively. 5 To restrict wiring complexity, some systems omit the wrap-around links in each dimension, turning a homogeneous toroidal topology into a mesh network, such as the 4fi4 square mesh in Figure 2.1 (e).
Reference: [34] <author> W. J. Dally, L. R. Dennison, D. Harris, K. Kan, and T. Zanthopoulos, </author> <title> "The reliable router: A reliable and high-performance communication substrate for parallel computers," </title> <booktitle> in Proceedings of the Parallel Computer Routing and Communication Workshop, </booktitle> <pages> pp. 241-255, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: each input link to store packets unable 8 Router Topology Routing V-chans Arbitration Mesh Routing Chip [110] 2-D mesh e-cube 1 | Network Design Frame [30] 2-D mesh e-cube 2 priority Message-Driven Processor [35] 3-D mesh e-cube 2 priority Torus Routing Chip [28] 2-D torus e-cube 2 fair Reliable Router <ref> [34] </ref> 2-D mesh adaptive 5 fair IMS C104 Switch [117] flexible interval routing, 1 | universal routing Table 2.1: Wormhole routers to access their chosen output link.
Reference: [35] <author> W. J. Dally, J. A. S. Fiske, J. S. Keen, R. A. Lethin, M. D. Noakes, P. R. Nuth, R. E. Davison, and G. A. Fyler, </author> <title> "The Message-Driven Processor: A multicomputer processing node with efficient mechanisms," </title> <booktitle> IEEE Micro, </booktitle> <pages> pp. 23-39, </pages> <month> April </month> <year> 1992. </year>
Reference-contexts: Multicomputer networks can also use virtual channels to logically segregate traffic with different characteristics or performance requirements. For example, a router could employ separate virtual channels to separate short and long packets [67, 68, 73] or control and data packets <ref> [30, 35] </ref>. By assigning separate logical resources to each set of packets, the router effectively limits the interaction between the traffic classes. This can improve performance by limiting the number of long data packets that can receive service ahead of a short control packet. <p> The simplest buffering scheme places a first-in first-out (FIFO) queue at each input link to store packets unable 8 Router Topology Routing V-chans Arbitration Mesh Routing Chip [110] 2-D mesh e-cube 1 | Network Design Frame [30] 2-D mesh e-cube 2 priority Message-Driven Processor <ref> [35] </ref> 3-D mesh e-cube 2 priority Torus Routing Chip [28] 2-D torus e-cube 2 fair Reliable Router [34] 2-D mesh adaptive 5 fair IMS C104 Switch [117] flexible interval routing, 1 | universal routing Table 2.1: Wormhole routers to access their chosen output link. <p> In this approach, the router divides each physical link into multiple virtual channels, where some virtual channels carry best-effort packets and the rest accept only time-constrained traffic. Virtual channels provide an effective mechanism for reducing the interaction between packets while still allowing traffic to share network bandwidth <ref> [30, 35, 43, 73, 95] </ref>. Exporting the virtual channel abstraction to the injection and reception ports further prevents intrusion between packets at the network entry and exit points [43, 67, 95].
Reference: [36] <author> S. Dandamudi and D. Eager, </author> <title> "Hot-spot contention in binary hypercube networks," </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. 41, no. 2, </volume> <pages> pp. 239-244, </pages> <month> February </month> <year> 1992. </year>
Reference-contexts: Also, parallel algorithms introduce specific non-uniform traffic patterns. For example, many scientific applications generate communication workloads that correspond to the matrix-transpose (dimension-reversal), bit-complement, and bit-reversal permutations [23, 32, 66, 98]. Other application communication constructs, such as synchronization or multicast operations, may induce hot-spots of heavily-utilized nodes and links <ref> [17, 36, 98] </ref>. 2.2 Multicomputer Interconnection Networks 2.2.1 Network Topology By defining the connections between processing nodes, the network topology determines the number of communication links at each node and how far a packet must travel to reach its destination [47, 100].
Reference: [37] <author> S. Daniel, </author> <title> Flexible Router Architectures for Point-to-Point Networks, </title> <type> PhD thesis, </type> <institution> University of Michigan, </institution> <month> May </month> <year> 1996. </year>
Reference-contexts: For example, the Programmable Routing Controller (PRC) <ref> [37, 38, 42, 43, 103] </ref>, shown in Figure 5.3, is designed to implement programmable routing-switching schemes for best-effort traffic, while facilitating host control over scheduling and resource allocation for time-constrained communication. <p> The PRC architecture has been implemented as an application-specific integrated circuit using the Verilog hardware description language and the Epoch silicon compiler <ref> [37, 38] </ref>. The router coordinates bidirectional communication with up to four neighboring nodes, with three virtual channels on each unidirectional link, with transparent support for times-tamping and CRC (cyclic redundancy code) error detection.
Reference: [38] <author> S. Daniel, J. Rexford, J. Dolter, and K. Shin, </author> <title> "A programmable routing controller for flexible communications in point-to-point networks," </title> <booktitle> in Proceedings of the IEEE International Conference on Computer Design, </booktitle> <pages> pp. 320-325, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: This enables the PRC to implement wormhole, virtual cut-through, 11 Router Topology Routing V-chans Queueing Cray T3D Router [90] 3-D torus e-cube 4 input Segment Router [73] | | 2 shared output IBM Vulcan [114] multistage static 1 shared output PRC <ref> [38] </ref> flexible programmable 3 software-controlled Table 2.4: Hybrid cut-through routers and packet switching, as well as hybrid schemes, each under variety of routing algorithms. In addition, the router can support multiple routing-switching schemes simultaneously , as discussed further in Section 5.2.2. <p> With a careful selection of routing-switching policies, coupled with fine-grain link arbitration, multicomputer routers can provide low average latency for best-effort packets without compromising the pre 50 dictability of time-constrained communication [103, 107]. To realize this scheme, the chapter considers the design and evaluation of a Programmable Routing Controller <ref> [38, 42, 103] </ref> that can implement packet switching for time-constrained traffic and wormhole switching for best-effort packets, with separate virtual channels for each traffic class. <p> For example, the Programmable Routing Controller (PRC) <ref> [37, 38, 42, 43, 103] </ref>, shown in Figure 5.3, is designed to implement programmable routing-switching schemes for best-effort traffic, while facilitating host control over scheduling and resource allocation for time-constrained communication. <p> The PRC architecture has been implemented as an application-specific integrated circuit using the Verilog hardware description language and the Epoch silicon compiler <ref> [37, 38] </ref>. The router coordinates bidirectional communication with up to four neighboring nodes, with three virtual channels on each unidirectional link, with transparent support for times-tamping and CRC (cyclic redundancy code) error detection.
Reference: [39] <author> A. L. Davis, "Mayfly: </author> <title> A general-purpose, scalable, </title> <booktitle> parallel processing architecture," Lisp and Symbolic Computation, </booktitle> <volume> vol. 5, no. 1/2, </volume> <pages> pp. 7-47, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: This link ordering improves the packet's chance of considering multiple outgoing links at future nodes in its route <ref> [8, 39] </ref>. <p> While the DEC AN1 has flexible routing support, FIFO input buffers limit network performance, since a blocked head-of-line packet prohibits other traffic from utilizing idle output links. In contrast, the ComCoBB 10 Router Topology Routing Queueing Mayfly Post-Office <ref> [39] </ref> wrapped hexagonal adaptive shared output Chaos Router [15] 2-D torus non-minimal adaptive shared pool DEC AN1 [94] flexible table look-up, adaptive input ComCoBB [116] flexible table look-up partitioned input Artic Router [18] multistage static input pools Table 2.3: Virtual cut-through routers switch avoids head-of-line blocking by separating packets destined for
Reference: [40] <author> P. M. Dickens, P. Heidelberger, and D. M. Nicol, </author> <title> "Parallelized network simulators for message-passing parallel programs," </title> <booktitle> in Proceedings of the International Workshop on Modeling, Analysis, and Simulation of Computer and Telecommunication Systems, </booktitle> <pages> pp. 72-76, </pages> <year> 1995. </year>
Reference-contexts: To overcome these limitations, several researchers have developed mul-ticomputer simulators in the past few years. In contrast to toolkits for evaluating local and wide area networks [75], these simulators attempt to capture the unique characteristics of multicomputer applications and interconnection networks. Execution-driven simulators <ref> [11, 40, 93] </ref> typically model the instruction-level operation of applications on particular parallel machines. Other simulation tools emphasize multicomputer network architectures, allowing users to evaluate routing algorithms and switching schemes under various synthetic traffic patterns [16, 62, 81].
Reference: [41] <author> J. W. Dolter, P. Ramanathan, and K. G. Shin, </author> <title> "Performance analysis of virtual cut-through switching in HARTS: A hexagonal mesh multicomputer," </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. 40, no. 6, </volume> <pages> pp. 669-680, </pages> <month> June </month> <year> 1991. </year> <month> 85 </month>
Reference-contexts: Performance evaluation of cut-through schemes began with the work in [65], which presented a mean-value analysis of end-to-end latency for virtual cut-through switching under oblivious routing, derived from a queueing theory model for packet-switched networks. Other work extends this M/M/1 analysis to consider delivery-time distributions <ref> [41] </ref> and fixed-length packets [1]. Extensions of virtual cut-through switching address specific error recovery mechanisms [58] and partial cut-throughs [1, 124]. In addition, using virtual cut-through switching within multistage ATM switches introduces new communication characteristics and performance requirements [82, 123, 124], including bursty traffic with delay constraints.
Reference: [42] <author> J. Dolter, </author> <title> A Programmable Routing Controller Supporting Multi-Mode Routing and Switching in Distributed Real-Time Systems, </title> <type> PhD thesis, </type> <institution> University of Michigan, </institution> <month> September </month> <year> 1993. </year>
Reference-contexts: To address the traffic patterns and performance requirements of modern multicomputer networks, this chapter presents a flexible router model and simulation environment that can evaluate systems that tailor network policies to application communication workloads. The pp-mess-sim (point-to-point message simulator) environment provides an extensible, object-oriented framework for evaluating multicomputer routers <ref> [42, 102, 104] </ref>. Implemented in C++, pp-mess-sim separates its major components into different classes, representing the network topology, application workloads, routing-switching algorithms, and the router architecture. <p> In particular, recent research work exploits the simulator's ability to model networks that support multiple routing-switching schemes simultaneously [48-50, 103, 104, 107]. In addition to experiments with the v-router Node model [50, 102, 104, 107], pp-mess-sim has been instrumental in evaluating the Programmable Routing Controller <ref> [42, 48, 49, 103, 111] </ref>, described further in Chapter 5. The simulator's flexibility and extensibility stem from a careful definition of the Net, Workload, Ralg, and Node modules, as shown in Figure 4.1. <p> With a careful selection of routing-switching policies, coupled with fine-grain link arbitration, multicomputer routers can provide low average latency for best-effort packets without compromising the pre 50 dictability of time-constrained communication [103, 107]. To realize this scheme, the chapter considers the design and evaluation of a Programmable Routing Controller <ref> [38, 42, 103] </ref> that can implement packet switching for time-constrained traffic and wormhole switching for best-effort packets, with separate virtual channels for each traffic class. <p> For example, the Programmable Routing Controller (PRC) <ref> [37, 38, 42, 43, 103] </ref>, shown in Figure 5.3, is designed to implement programmable routing-switching schemes for best-effort traffic, while facilitating host control over scheduling and resource allocation for time-constrained communication.
Reference: [43] <author> J. Dolter, S. Daniel, A. Mehra, J. Rexford, W. Feng, and K. Shin, "SPIDER: </author> <title> Flexible and efficient communication support for point-to-point distributed systems," </title> <booktitle> in Proceedings of the International Conference on Distributed Computing Systems, </booktitle> <pages> pp. 574-580, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: In this approach, the router divides each physical link into multiple virtual channels, where some virtual channels carry best-effort packets and the rest accept only time-constrained traffic. Virtual channels provide an effective mechanism for reducing the interaction between packets while still allowing traffic to share network bandwidth <ref> [30, 35, 43, 73, 95] </ref>. Exporting the virtual channel abstraction to the injection and reception ports further prevents intrusion between packets at the network entry and exit points [43, 67, 95]. <p> Virtual channels provide an effective mechanism for reducing the interaction between packets while still allowing traffic to share network bandwidth [30, 35, 43, 73, 95]. Exporting the virtual channel abstraction to the injection and reception ports further prevents intrusion between packets at the network entry and exit points <ref> [43, 67, 95] </ref>. This ensures that time-constrained and best-effort traffic have separate logical resources through the entire path from the source to the destination node. <p> For example, the Programmable Routing Controller (PRC) <ref> [37, 38, 42, 43, 103] </ref>, shown in Figure 5.3, is designed to implement programmable routing-switching schemes for best-effort traffic, while facilitating host control over scheduling and resource allocation for time-constrained communication.
Reference: [44] <author> J. Duato, </author> <title> "A new theory of deadlock-free adaptive routing in wormhole networks," </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <pages> pp. 1320-1331, </pages> <month> December </month> <year> 1993. </year>
Reference-contexts: To avoid potential packet deadlocks, the router can divide each link into two virtual channels and break the circular dependencies in the underlying topology [29]. Additional virtual channels permit the construction of adaptive routing algorithms with deadlock-avoidance guarantees <ref> [44] </ref>; typically, the more flexible adaptive routing algorithms require more virtual channels to prevent deadlock [17, 87, 98]. Multicomputer networks can also use virtual channels to logically segregate traffic with different characteristics or performance requirements. <p> The Ralg instructions can also implement various routing algorithms by generating different lists of candidate virtual channels. As shown in Table 4.1, pp-mess-sim includes several oblivious and adaptive routing algorithms for the different switching schemes. The simulator uses Duato's theory <ref> [44] </ref> to construct deadlock-free adaptive routing algorithms under wormhole switching. <p> The plots compare the performance of oblivious and adaptive routing under wormhole switching and the dimension-ordered selection function; experiments with virtual cut-through switching show the same qualitative trends. The adaptive algorithm is a fully-adaptive minimal-path routing scheme that requires two virtual channels per link to prevent network deadlocks <ref> [44] </ref>; in these experiments, both routing algorithms employ a 45 (a) Poisson arrival process (b) Bursty arrival process bit-complement traffic pair of virtual channels to enable fair performance comparisons. The oblivious dimension-order routing algorithm uses the extra virtual channel to reduce contention between packets traveling on the same link [31].
Reference: [45] <author> T. H. Dunigan, </author> <title> "Performance of the Intel iPSC/860 and Ncube 6400 hypercubes," </title> <journal> Parallel Computing, </journal> <volume> vol. 17, no. 10/11, </volume> <pages> pp. 1285-1302, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: Due to advances in VLSI technology, these commercial vendors were able to incorporate dedicated router hardware for cut-through switching in subsequent multicomputer systems, such as the iPSC/2 [89], nCube/6400 <ref> [45] </ref>, and Ametek/2010 [109], during the late 1980s. Keeping with this trend, companies like Intel, IBM, Thinking Machines, and Cray Research developed new multicomputer systems based on wormhole-switched networks [25, 59, 76, 85, 95, 114, 115] during the first half of the 1990s. <p> With dimension-ordered routing and an unwrapped mesh topology, a router requires only one virtual channel per link to avoid deadlock, as in the Caltech Mesh Routing chip; the Network Design Frame 9 Router Topology Routing V-chans Arbitration iPSC/2 Direct-Connect [89] hypercube e-cube 1 | NCube 6400 <ref> [45] </ref> hypercube e-cube 1 | Virtual Channel Router [56] hypercube e-cube 2 fair Ariadne [3] 2-D torus adaptive 3 fair Table 2.2: Pipelined circuit-switched routers and the Message-Driven Processor include a second virtual channel to separate user and system messages (at different priority levels).
Reference: [46] <author> S. Felperin, L. Gravano, G. Pirarre, and J. Sanz, </author> <title> "Routing techniques for massively parallel communication," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 79, no. 4, </volume> <pages> pp. 488-503, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: In the last few years, researchers have proposed a wide variety of minimal and non-minimal adaptive routing algorithms, with different degrees of adaptivity and implementation com 6 plexity <ref> [4, 17, 46, 53, 87, 98] </ref>. When a routing algorithm must select from multiple output links at a node, the actual route chosen depends on a selection function that determines the order in which the algorithm considers these candidate links.
Reference: [47] <author> T.-Y. Feng, </author> <title> "A survey of interconnection networks," </title> <journal> IEEE Computer Magazine, </journal> <volume> vol. 14, no. 12, </volume> <pages> pp. 12-27, </pages> <month> December </month> <year> 1981. </year>
Reference-contexts: multicast operations, may induce hot-spots of heavily-utilized nodes and links [17, 36, 98]. 2.2 Multicomputer Interconnection Networks 2.2.1 Network Topology By defining the connections between processing nodes, the network topology determines the number of communication links at each node and how far a packet must travel to reach its destination <ref> [47, 100] </ref>. As a result, the choice of a topology impacts both the complexity of network wiring and the achievable communication bandwidth in the system [2, 33]. Mul-ticomputer networks vary from bus or ring topologies to fully-connected configurations, as shown in Figure 2.1.
Reference: [48] <author> W. Feng, J. Rexford, S. Daniel, A. Mehra, and K. Shin, </author> <title> "Tailoring routing and switching schemes to application workloads in multicomputer networks," </title> <institution> Computer Science and Engineering Technical Report CSE-TR-239-95, University of Michigan, </institution> <month> May </month> <year> 1995. </year>
Reference-contexts: In particular, recent research work exploits the simulator's ability to model networks that support multiple routing-switching schemes simultaneously [48-50, 103, 104, 107]. In addition to experiments with the v-router Node model [50, 102, 104, 107], pp-mess-sim has been instrumental in evaluating the Programmable Routing Controller <ref> [42, 48, 49, 103, 111] </ref>, described further in Chapter 5. The simulator's flexibility and extensibility stem from a careful definition of the Net, Workload, Ralg, and Node modules, as shown in Figure 4.1.
Reference: [49] <author> W. Feng, J. Rexford, A. Mehra, S. Daniel, J. Dolter, and K. Shin, </author> <title> "Architectural support for managing communication in point-to-point distributed systems," </title> <type> Technical Report CSE-TR-197-94, </type> <institution> University of Michigan, </institution> <month> March </month> <year> 1994. </year>
Reference-contexts: Since multicom-puter applications typically generate a mixture of short and long packets [27, 67], router support for these two traffic classes can significantly improve performance. Short packets incur large end-to-end latency when forced to wait behind long packets for access to the network links <ref> [49, 67] </ref>. The Segment router addresses this problem by assigning the two traffic classes to separate virtual channels with different switching schemes; long packets use wormhole switching to limit buffer-space requirements, while short packets use virtual cut-through switching to reduce channel contention. <p> In particular, recent research work exploits the simulator's ability to model networks that support multiple routing-switching schemes simultaneously [48-50, 103, 104, 107]. In addition to experiments with the v-router Node model [50, 102, 104, 107], pp-mess-sim has been instrumental in evaluating the Programmable Routing Controller <ref> [42, 48, 49, 103, 111] </ref>, described further in Chapter 5. The simulator's flexibility and extensibility stem from a careful definition of the Net, Workload, Ralg, and Node modules, as shown in Figure 4.1.
Reference: [50] <author> W. Feng and K. Shin, </author> <title> "Impact of selection functions on routing algorithm performance in multicomputer networks," </title> <institution> Computer Science and Engineering Technical Report CSE-TR-287-96, University of Michigan, </institution> <month> March </month> <year> 1996. </year>
Reference-contexts: This link ordering improves the packet's chance of considering multiple outgoing links at future nodes in its route [8, 39]. Communication performance can be extremely sensitive to how the selection function interacts with the application workload to create traffic patterns in the interconnection network <ref> [50, 104] </ref>. 2.2.3 Switching Scheme The switching scheme impacts performance by determining the link and buffer resources a packet consumes at a given node in its route. Traditionally, multi-hop networks employ either a circuit-switched or store-and-forward model of communication. <p> The adaptive algorithm helps dissipate bursts by capitalizing on multiple paths between each source and destination, thus reducing the queueing delay at the sending node. 4.5.2 Tailoring Experiment The simulator's Ralg instructions and Net selection functions enable multi-factor experiments that study the interaction of routing algorithms and selection functions <ref> [50, 105] </ref>. For routers which support multiple routing schemes, these results can serve as a guide for selecting an appropriate routing algorithm based on the application workload. In a multi-user environment, where multiple applications execute at the same time, supporting multiple routing schemes simultaneously can significantly improve performance. <p> In particular, recent research work exploits the simulator's ability to model networks that support multiple routing-switching schemes simultaneously [48-50, 103, 104, 107]. In addition to experiments with the v-router Node model <ref> [50, 102, 104, 107] </ref>, pp-mess-sim has been instrumental in evaluating the Programmable Routing Controller [42, 48, 49, 103, 111], described further in Chapter 5. The simulator's flexibility and extensibility stem from a careful definition of the Net, Workload, Ralg, and Node modules, as shown in Figure 4.1.
Reference: [51] <author> D. Ferrari, </author> <title> "Client requirements for real-time communication services," </title> <journal> IEEE Communication Magazine, </journal> <pages> pp. 65-72, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: Multimedia and real-time applications, such as scientific visualization and process control, necessitate control over throughput, worst-case latency, and delay variance (jitter) <ref> [51, 122] </ref>. While time-constrained traffic necessitates deterministic or probabilistic bounds on throughput or end-to-end delay, best-effort service often suffices for the remaining traffic. For example, control or audio/video messages may mandate explicit performance guarantees, while data transfer may tolerate delay variability in exchange for improved average latency.
Reference: [52] <author> R. Games, A. Kanevsky, P. Krupp, and L. Monk, </author> <title> "Real-time communications scheduling for massively parallel processors," </title> <booktitle> in Proceedings of the Real-Time Technology and Applications Symposium, </booktitle> <pages> pp. 76-85, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: In addition, multicomputer components are increasingly used for multimedia and real-time applications, such as scientific visualization, process control, and video-on-demand servers. These applications require predictable communication performance, in addition to low latency and high throughput. Initially, real-time multicomputer applications have employed existing interconnection networks, such as the Intel Paragon <ref> [12, 52] </ref> and the nCube/3 [20], with no explicit support for time-constrained communication. However, on many existing multicomputer systems, worst-case packet latency can theoret 2 ically be as large as several days [69]. As a result, real-time and multimedia applications must under-utilize the network to achieve predictable performance.
Reference: [53] <author> P. Gaughan and S. Yalamanchili, </author> <title> "Adaptive routing protocols for hypercube interconnection networks," </title> <journal> IEEE Computer Magazine, </journal> <pages> pp. 12-23, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: In the last few years, researchers have proposed a wide variety of minimal and non-minimal adaptive routing algorithms, with different degrees of adaptivity and implementation com 6 plexity <ref> [4, 17, 46, 53, 87, 98] </ref>. When a routing algorithm must select from multiple output links at a node, the actual route chosen depends on a selection function that determines the order in which the algorithm considers these candidate links.
Reference: [54] <author> A. Gupta and D. Ferrari, </author> <title> "Resource partitioning for real-time communication," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 3, no. 5, </volume> <pages> pp. 501-508, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: Real-time applications typically handle a mixture of time-constrained and best-effort communication, where time-constrained packets require bounds on latency and throughput, while best-effort traffic settles for good average performance <ref> [6, 54, 112, 113] </ref>. Based on simulation experiments, Chapter 5 proposes effective techniques for mixing the time-constrained and best-effort packets without sacrificing the performance goals of either traffic class.
Reference: [55] <author> M. G. Hluchyj and M. J. Karol, </author> <title> "Queueing in high-performance packet switching," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 6, no. 9, </volume> <pages> pp. 1587-1597, </pages> <month> December </month> <year> 1988. </year> <month> 86 </month>
Reference-contexts: Unfortunately, a blocked packet at the head of an input FIFO detains any other packets in that buffer, even if the routing algorithm would assign these packets to other (possibly idle) output links. This head-of-line blocking significantly reduces achievable network throughput <ref> [55, 92, 116] </ref>. Alternatives to input queueing avoid this artificial contention at the expense of increased hardware complexity. Partitioned input-queueing replaces the single input FIFO with multiple queues to separate traffic destined for different outgoing links [92, 116].
Reference: [56] <author> J.-M. Hsu and P. Banerjee, </author> <title> "Hardware support for message routing in a distributed memory multicomputer," </title> <booktitle> in Proceedings of the International Conference on Parallel Processing, </booktitle> <pages> pp. </pages> <address> I-508-I-515, </address> <year> 1990. </year>
Reference-contexts: However, reserving the packet's path in advance incurs additional overhead, particularly in a lightly-loaded network. The router can amortize this overhead by temporarily maintaining the channel reservations, since subsequent packets may reuse the route in the near future <ref> [56] </ref>. 2.2.4 Virtual Channels For additional routing and switching flexibility, a multicomputer can extend its underlying physical topology by dividing each link into multiple virtual channels [31]. Although the router allocates these logical links on a per-packet basis, each link interleaves its virtual channels at the flit level. <p> an unwrapped mesh topology, a router requires only one virtual channel per link to avoid deadlock, as in the Caltech Mesh Routing chip; the Network Design Frame 9 Router Topology Routing V-chans Arbitration iPSC/2 Direct-Connect [89] hypercube e-cube 1 | NCube 6400 [45] hypercube e-cube 1 | Virtual Channel Router <ref> [56] </ref> hypercube e-cube 2 fair Ariadne [3] 2-D torus adaptive 3 fair Table 2.2: Pipelined circuit-switched routers and the Message-Driven Processor include a second virtual channel to separate user and system messages (at different priority levels).
Reference: [57] <author> J.-M. Hsu and P. Banerjee, </author> <title> "Performance measurement and trace driven simulation of parallel CAD and numeric applications on a hypercube multicomputer," </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> vol. 3, no. 4, </volume> <pages> pp. 451-464, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Parallel applications generate a wide range of communication workloads depending on the application's granularity and mapping across multiple nodes, as well as the policies employed by the interconnection network. Scientific computations, parallel databases, and real-time applications generate distinct distributions for message/packet lengths, interar-rival times, and target destination nodes <ref> [27, 57, 77, 107] </ref>. Multi-user systems exacerbate these effects since different applications may run simultaneously; these applications may execute on different parts of the network or even time-share the same processing elements. <p> This assumption was made, in part, due to the analytical tractability of such models and the lack of more 4 realistic data. However, detailed measurements of multicomputer applications have led to more sophisticated message generation models. In particular, recent studies show that applications typically generate bursty network traffic <ref> [27, 57] </ref>, due to multi-packet messages and fine-grain interaction between cooperating nodes. Similarly, many parallel applications invoke multicast operations that send a message to a collection of destination nodes, injecting multiple copies of each packet into the interconnection network. These traffic models have significant impact on network design and evaluation. <p> Although fixed-length packets or exponentially-distributed lengths simplify analytic performance models, recent studies show that real multicomputer applications often generate a mixture of large data transfers and small request/acknowledgement packets <ref> [27, 57] </ref>. Without careful support in the router architecture, these bimodal length distributions can seriously degrade average latency by forcing short packets to queue behind long packets for access to link and buffer resources [67]. <p> This experiment considers bursty traffic, in contrast to the traditional Poissonian packet arrival process in Figure 4.12 (a). The source nodes generate bursty traffic using a two-stage normal distribution of packet interarrivals <ref> [57] </ref>. Packet interarrivals stem from two independent normal distributions, with different means, as shown in Table 4.2 (a); sources randomly select 80% of interarrivals from the distribution with the small mean.
Reference: [58] <author> M. Ilyas and H. T. Mouftah, </author> <title> "Towards performance improvement of cut-through switching in computer networks," </title> <journal> Performance Evaluation, </journal> <volume> vol. 6, </volume> <pages> pp. 125-133, </pages> <month> July </month> <year> 1986. </year>
Reference-contexts: Other work extends this M/M/1 analysis to consider delivery-time distributions [41] and fixed-length packets [1]. Extensions of virtual cut-through switching address specific error recovery mechanisms <ref> [58] </ref> and partial cut-throughs [1, 124]. In addition, using virtual cut-through switching within multistage ATM switches introduces new communication characteristics and performance requirements [82, 123, 124], including bursty traffic with delay constraints. However, these analytical models do not address the impact of routing algorithms on cut-through switching performance.
Reference: [59] <institution> Paragon XP/S Product Overview, Intel Corporation, </institution> <year> 1991. </year>
Reference-contexts: Keeping with this trend, companies like Intel, IBM, Thinking Machines, and Cray Research developed new multicomputer systems based on wormhole-switched networks <ref> [25, 59, 76, 85, 95, 114, 115] </ref> during the first half of the 1990s. Similarly, most research multicomputer networks employ virtual cut-through or wormhole switching, or hybrid schemes, as discussed in Chapter 2.
Reference: [60] <author> J. R. Jackson, </author> <title> "Networks of waiting lines," </title> <journal> Operations Research, </journal> <volume> vol. 5, no. 4, </volume> <pages> pp. 518-521, </pages> <month> August </month> <year> 1957. </year>
Reference-contexts: With sufficient randomization of packet routes, the Poissonian traffic permits a product-form solution that separately analyzes each link in a packet's route, by Jackson's theorem <ref> [60] </ref>. Since the network links are independent, a packet traveling h hops has h 1 independent opportunities to cut through intermediate nodes, resulting in a binomial distribution for the number of cut-throughs [65].
Reference: [61] <author> R. Jain, </author> <title> The Art of Computer Systems Performance Analysis, </title> <publisher> John Wiley & Sons, Inc., </publisher> <year> 1991. </year>
Reference-contexts: Starting with a single input seed (e.g., line 44 in Figure 4.2), pp-mess-sim divides the resulting random number stream into consecutive chunks, assigning a separate chunk to each stochastic process. This significantly reduces correlation between the processes by generating multiple nonoverlapping random number streams <ref> [61] </ref>. <p> Figure 5.2 (a) shows the coefficient of variation for packet latency for the three switching schemes, where the coefficient of variation measures the ratio of the standard deviation to the mean <ref> [61] </ref>. Since latency characteristics vary depending on the distance between source-destination pairs, the graph shows results only for packets traveling a fixed distance in the network. While each source generates traffic with uniform random selection of destination nodes, data collection for Figure 5.2 includes only packets traveling exactly five hops.
Reference: [62] <author> J. R. Jump and S. Lakshmanamurthy, "NETSIM: </author> <title> A general-purpose interconnection network simulator," </title> <booktitle> in Proceedings of the International Workshop on Modeling, Analysis, and Simulation of Computer and Telecommunication Systems, </booktitle> <pages> pp. 121-125, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: Execution-driven simulators [11, 40, 93] typically model the instruction-level operation of applications on particular parallel machines. Other simulation tools emphasize multicomputer network architectures, allowing users to evaluate routing algorithms and switching schemes under various synthetic traffic patterns <ref> [16, 62, 81] </ref>. However, these simulators do not capture the subtle relationship between router architecture and application communication requirements.
Reference: [63] <author> D. D. Kandlur, K. G. Shin, and D. Ferrari, </author> <title> "Real-time communication in multihop networks," </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> vol. 5, no. 10, </volume> <pages> pp. 1044-1056, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: Providing separate buffers for each priority level is effective for coarse-grain priority assignment, but this approach incurs significant cost for fine-grain resolution. With packet queues at each node, the router can effectively utilize fine-grain priorities, such as deadlines, to assign access to output links <ref> [5, 63] </ref>. By buffering packets at each node, packet switching enables the router to schedule traffic to provide latency or bandwidth guarantees [63], as shown by the router architecture in Chapter 6. For example, suppose a time-constrained packet enters an intermediate node well in advance of its deadline. <p> With packet queues at each node, the router can effectively utilize fine-grain priorities, such as deadlines, to assign access to output links [5, 63]. By buffering packets at each node, packet switching enables the router to schedule traffic to provide latency or bandwidth guarantees <ref> [63] </ref>, as shown by the router architecture in Chapter 6. For example, suppose a time-constrained packet enters an intermediate node well in advance of its deadline. The router may wish to detain this packet, even if its outgoing link is available, to avoid unexpectedly overloading the subsequent node. <p> Under this traffic contract, the network can provide end-to-end performance guarantees through effective link-scheduling and buffer-allocation policies. This chapter presents a real-time router design that handles a wide range of throughput and delay requirements by implementing the real-time channel <ref> [63] </ref> abstraction for packet scheduling. <p> The real-time channel model <ref> [63] </ref> provides a useful abstraction for bounding end-to-end network delay for time-constrained packets, under certain application traffic characteristics, without compromising the performance of best-effort packets. Traffic parameters: A real-time channel is a unidirectional virtual connection that traverses one or more network links. <p> Per-hop delay bounds: The network does not admit a new connection unless it can reserve sufficient buffer and bandwidth resources without violating the requirements of existing connections <ref> [63, 129] </ref>. A connection establishment procedure decomposes the connection's end-to-end delay bound D into local delay bounds d j for each hop in its route such that d j I min and P j d j D. <p> Buffer requirements: By postponing the transmission of early time-constrained traffic, the link scheduler avoids overloading the buffer space at the downstream node <ref> [63, 125] </ref>. If the first two scheduling queues are empty, the link can transmit early time-constrained traffic from Queue 3, as long as these messages are within a small distance h 0 of their logical arrival time; Figure 6.6 summarizes the router's link-scheduling algorithm. <p> Admitting a new connection, and selecting a multi-hop route with suitable local delay parameters, is a computationally-intensive procedure <ref> [5, 63, 129] </ref>. Fortunately, channel establishment typically does not impose tight timing constraints; in most cases, the network can create the required channels before data transfer commences. To permit a single-chip solution, the real-time router relegates these non-real-time operations to the protocol software.
Reference: [64] <author> V. Karamcheti and A. A. Chien, </author> <title> "Software overhead in messaging layers: Where does the time go?," </title> <booktitle> in Proceedings of the International Conference on Architectural Support for Programming Languages and Operating Systems, </booktitle> <pages> pp. 51-60, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: Under adaptive routing, packets from a single message may follow different paths through the network; this can cause out-of-order packet arrival, which complicates message processing at the destination node <ref> [64] </ref>. Opportunities for adaptive routing vary depending on the underlying topology and communication pattern. Although most oblivious routing algorithms generate only minimum-hop routes between the source and destination nodes, some adaptive schemes consider non-minimal routes in the hope of circumventing congested or faulty links.
Reference: [65] <author> P. Kermani and L. Kleinrock, </author> <title> "Virtual cut-through: A new computer communication switching technique," </title> <journal> Computer Networks, </journal> <volume> vol. 3, no. 4, </volume> <pages> pp. 267-286, </pages> <month> September </month> <year> 1979. </year>
Reference-contexts: Traditional packet switching requires an arriving packet to buffer completely before transmission to a subsequent node can begin. In contrast, cut-through switching schemes, such as virtual cut-through <ref> [65] </ref> and wormhole [28] switching, attempt to directly forward the incoming packet to an idle output link. If the packet encounters a busy outgoing link, virtual cut-through 1 switching buffers the packet. <p> Even in the absence of network congestion, packet switching incurs delay proportional to the product of packet size and the length of the route. In contrast, cut-through switching schemes, such as virtual cut-through <ref> [65] </ref> and wormhole [28] switching, try to forward an in-transit packet directly to an idle output link, based on the routing header and prevailing network conditions. <p> Simulation studies can characterize the effects of these assumptions to determine when analytical models overestimate or underestimate actual router performance. Performance evaluation of cut-through schemes began with the work in <ref> [65] </ref>, which presented a mean-value analysis of end-to-end latency for virtual cut-through switching under oblivious routing, derived from a queueing theory model for packet-switched networks. Other work extends this M/M/1 analysis to consider delivery-time distributions [41] and fixed-length packets [1]. <p> Since the network links are independent, a packet traveling h hops has h 1 independent opportunities to cut through intermediate nodes, resulting in a binomial distribution for the number of cut-throughs <ref> [65] </ref>. Based on this binomial distribution, analytical models can determine other higher-level metrics, such as average latency or delivery-time distributions, for cut-through networks. For example, a packet traveling h hops has average delay h` p c (h 1)`; where &lt; 1 is link utilization [65]. <p> distribution for the number of cut-throughs <ref> [65] </ref>. Based on this binomial distribution, analytical models can determine other higher-level metrics, such as average latency or delivery-time distributions, for cut-through networks. For example, a packet traveling h hops has average delay h` p c (h 1)`; where &lt; 1 is link utilization [65]. The first term is the average delay in a packet-switched network, where the packet encounters h independent M/M/1 queues, each with mean service rate 1=`; in an M/M/1 queue, customers spend average time `=(1 ) in the system [71].
Reference: [66] <author> J. H. Kim and A. A. Chien, </author> <title> "An evaluation of planar-adaptive routing (PAR)," </title> <booktitle> in Proceedings of the International Symposium on Parallel and Distributed Processing, </booktitle> <year> 1992. </year>
Reference-contexts: In addition, many applications exhibit temporal locality, where a node sends several messages to the same destination over a small time interval. Also, parallel algorithms introduce specific non-uniform traffic patterns. For example, many scientific applications generate communication workloads that correspond to the matrix-transpose (dimension-reversal), bit-complement, and bit-reversal permutations <ref> [23, 32, 66, 98] </ref>.
Reference: [67] <author> J. H. Kim and A. A. Chien, </author> <title> "Evaluation of wormhole routed networks under hybrid traffic loads," </title> <booktitle> in Proceedings of the Hawaii International Conference on System Sciences, </booktitle> <pages> pp. 276-285, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: Without careful support in the router architecture, these bimodal length distributions can seriously degrade average latency by forcing short packets to queue behind long packets for access to link and buffer resources <ref> [67] </ref>. In addition, the presence of large packets can introduce greater variability in end-to-end communication delay, particularly for short packets [68]. Message/packet destination distributions vary a great deal depending on the network topology and the application's mapping onto different processing elements. <p> Multicomputer networks can also use virtual channels to logically segregate traffic with different characteristics or performance requirements. For example, a router could employ separate virtual channels to separate short and long packets <ref> [67, 68, 73] </ref> or control and data packets [30, 35]. By assigning separate logical resources to each set of packets, the router effectively limits the interaction between the traffic classes. <p> Each virtual channel has enough buffer space to store a small packet, while longer packets spread across multiple nodes. Since multicom-puter applications typically generate a mixture of short and long packets <ref> [27, 67] </ref>, router support for these two traffic classes can significantly improve performance. Short packets incur large end-to-end latency when forced to wait behind long packets for access to the network links [49, 67]. <p> Since multicom-puter applications typically generate a mixture of short and long packets [27, 67], router support for these two traffic classes can significantly improve performance. Short packets incur large end-to-end latency when forced to wait behind long packets for access to the network links <ref> [49, 67] </ref>. The Segment router addresses this problem by assigning the two traffic classes to separate virtual channels with different switching schemes; long packets use wormhole switching to limit buffer-space requirements, while short packets use virtual cut-through switching to reduce channel contention. <p> Virtual channels provide an effective mechanism for reducing the interaction between packets while still allowing traffic to share network bandwidth [30, 35, 43, 73, 95]. Exporting the virtual channel abstraction to the injection and reception ports further prevents intrusion between packets at the network entry and exit points <ref> [43, 67, 95] </ref>. This ensures that time-constrained and best-effort traffic have separate logical resources through the entire path from the source to the destination node.
Reference: [68] <author> J. H. Kim and A. A. Chien, </author> <title> "The impact of packetization in wormhole-routed networks," </title> <booktitle> in Proceedings of Parallel Architectures and Languages, Europe, </booktitle> <year> 1993. </year>
Reference-contexts: In addition, the presence of large packets can introduce greater variability in end-to-end communication delay, particularly for short packets <ref> [68] </ref>. Message/packet destination distributions vary a great deal depending on the network topology and the application's mapping onto different processing elements. Although many analytical and simulation studies evaluate a uniform random distribution of destination nodes, this model does not accurately represent the traffic patterns that arise in many multicomputer applications. <p> Multicomputer networks can also use virtual channels to logically segregate traffic with different characteristics or performance requirements. For example, a router could employ separate virtual channels to separate short and long packets <ref> [67, 68, 73] </ref> or control and data packets [30, 35]. By assigning separate logical resources to each set of packets, the router effectively limits the interaction between the traffic classes.
Reference: [69] <author> J. H. Kim and A. A. Chien, </author> <title> "Rotated combined queueing (RCQ)," </title> <booktitle> in Proceedings of the International Symposium on Computer Architecture, </booktitle> <pages> pp. 226-236, </pages> <month> May </month> <year> 1996. </year>
Reference-contexts: Initially, real-time multicomputer applications have employed existing interconnection networks, such as the Intel Paragon [12, 52] and the nCube/3 [20], with no explicit support for time-constrained communication. However, on many existing multicomputer systems, worst-case packet latency can theoret 2 ically be as large as several days <ref> [69] </ref>. As a result, real-time and multimedia applications must under-utilize the network to achieve predictable performance. <p> As a result, real-time and multimedia applications must under-utilize the network to achieve predictable performance. To address this problem, several recent projects consider new router architectures that can guarantee end-to-end communication performance in multicomputer networks <ref> [10, 69, 77, 83, 91, 108, 119, 122] </ref>. 1.2 Structure of the Thesis This thesis presents effective techniques for the design and evaluation of router architectures that accommodate the performance requirements of emerging multicomputer applications.
Reference: [70] <author> L. Kleinrock, </author> <title> Communication Nets: Stochastic Message Flow and Delay, </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1964. </year> <month> 87 </month>
Reference-contexts: With sufficient mixing of traffic from different sources, Kleinrock's independence assumption enables the analysis to decouple the packet length and interarrival distributions at each node <ref> [70] </ref>. In effect, a packet receives a new length at each node in its route, permitting the analysis to model the network links as independent exponential servers operating at rate 1=`, where ` is the average packet length. <p> oblivious routing (a) Random oblivious routing (b) Dimension-ordered oblivious routing 26 3.4.2 Traffic Mixing In addition, modern cut-through networks typically employ low-dimensional topologies that limit the mixing of incoming traffic streams; a larger number of incoming and outgoing links would ensure more traffic mixing, reducing the dependencies between adjacent nodes <ref> [70] </ref>. Figure 3.11 illustrates this effect by comparing cut-through correlation in three k-ary n-cube topologies with different dimensions n. The graph plots the difference P [cut-through j cut-through on previous hop] P [cut-through j buffering on previous hop] for packets traveling 6 hops in the simulated networks.
Reference: [71] <author> L. Kleinrock, </author> <title> Queueing systems, volume I: Theory, </title> <publisher> John Wiley & Sons, </publisher> <year> 1975. </year>
Reference-contexts: the number of candidate output links a packet can consider at each node in its route. 3.1.1 Queueing Theory As in packet-switched networks, an M/M/1 model can accurately represent the service queue at each link, if queue size is not restricted and packet lengths and interarrival times are exponentially distributed <ref> [71] </ref>; in this framework, each source node generates packets as a Poisson process with rate , as shown in Table 3.1. With sufficient mixing of traffic from different sources, Kleinrock's independence assumption enables the analysis to decouple the packet length and interarrival distributions at each node [70]. <p> The first term is the average delay in a packet-switched network, where the packet encounters h independent M/M/1 queues, each with mean service rate 1=`; in an M/M/1 queue, customers spend average time `=(1 ) in the system <ref> [71] </ref>. The second term captures the performance benefit of employing cut-through switching.
Reference: [72] <author> D. E. Knuth, </author> <booktitle> The Art of Computer Programming, </booktitle> <volume> Vol 2: </volume> <booktitle> Seminumerical Algorithms, </booktitle> <publisher> Addison Wesley, </publisher> <year> 1969. </year>
Reference-contexts: Flexible task specification and mapping, combined with diverse traffic models, 1 Each task on each node requires access to random number streams to generate packet lengths, interar-rival times, and destination nodes. The simulator extends the additive congruential generator (ACG) <ref> [72] </ref> in the GNU libg++ libraries to provide a multi-threaded generator with a separate random number streams for each stochastic process in each task.
Reference: [73] <author> S. Konstantinidou, </author> <title> "Segment router: A novel router design for parallel computers," </title> <booktitle> in Proceedings of the Symposium on Parallel Algorithms and Architectures, </booktitle> <month> June </month> <year> 1994. </year>
Reference-contexts: Multicomputer networks can also use virtual channels to logically segregate traffic with different characteristics or performance requirements. For example, a router could employ separate virtual channels to separate short and long packets <ref> [67, 68, 73] </ref> or control and data packets [30, 35]. By assigning separate logical resources to each set of packets, the router effectively limits the interaction between the traffic classes. <p> These processors execute low-level routing-switching algorithms, tailored to the application traffic patterns. This enables the PRC to implement wormhole, virtual cut-through, 11 Router Topology Routing V-chans Queueing Cray T3D Router [90] 3-D torus e-cube 4 input Segment Router <ref> [73] </ref> | | 2 shared output IBM Vulcan [114] multistage static 1 shared output PRC [38] flexible programmable 3 software-controlled Table 2.4: Hybrid cut-through routers and packet switching, as well as hybrid schemes, each under variety of routing algorithms. <p> In this approach, the router divides each physical link into multiple virtual channels, where some virtual channels carry best-effort packets and the rest accept only time-constrained traffic. Virtual channels provide an effective mechanism for reducing the interaction between packets while still allowing traffic to share network bandwidth <ref> [30, 35, 43, 73, 95] </ref>. Exporting the virtual channel abstraction to the injection and reception ports further prevents intrusion between packets at the network entry and exit points [43, 67, 95].
Reference: [74] <author> S. Konstantinidou and L. Synder, </author> <title> "The Chaos router," </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. 43, no. 12, </volume> <pages> pp. 1386-1397, </pages> <month> December </month> <year> 1994. </year>
Reference-contexts: Deflecting packets from their ultimate destination can cause livelock , where a packet continually travels in the network without reaching its destination, but Chaos routing is probabilistically livelock-free <ref> [74] </ref>. Other virtual cut-through routers allow flexible construction of routing algorithms and network topologies through routing tables. The DEC AN1 switch has an adjustable routing table. When faulty links or nodes change the underlying network topology, this software automatically reconfigures each switch's routing table.
Reference: [75] <author> A. M. Law and M. G. McComas, </author> <title> "Simulation software for communications networks: The state of the art," </title> <journal> IEEE Communication Magazine, </journal> <pages> pp. 44-50, </pages> <month> March </month> <year> 1994. </year>
Reference-contexts: To overcome these limitations, several researchers have developed mul-ticomputer simulators in the past few years. In contrast to toolkits for evaluating local and wide area networks <ref> [75] </ref>, these simulators attempt to capture the unique characteristics of multicomputer applications and interconnection networks. Execution-driven simulators [11, 40, 93] typically model the instruction-level operation of applications on particular parallel machines.
Reference: [76] <author> C. Leiserson, Z. Abuhamdeh, D. Douglas, C. Feynman, M. Ganmukhi, J. Hill, W. D. Hillis, B. Kuszmaul, M. St. Pierre, D. Wells, M. Wong, S.-W. Yang, and R. Zak, </author> <title> "The network architecture of the connection machine CM-5," </title> <booktitle> in Proceedings of the Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pp. 272-285, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: Keeping with this trend, companies like Intel, IBM, Thinking Machines, and Cray Research developed new multicomputer systems based on wormhole-switched networks <ref> [25, 59, 76, 85, 95, 114, 115] </ref> during the first half of the 1990s. Similarly, most research multicomputer networks employ virtual cut-through or wormhole switching, or hybrid schemes, as discussed in Chapter 2.
Reference: [77] <author> J.-P. Li and M. W. </author> <title> Mutka, "Priority based real-time communication for large scale wormhole networks," </title> <booktitle> in Proceedings of the International Parallel Processing Symposium, </booktitle> <pages> pp. 433-438, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: As a result, real-time and multimedia applications must under-utilize the network to achieve predictable performance. To address this problem, several recent projects consider new router architectures that can guarantee end-to-end communication performance in multicomputer networks <ref> [10, 69, 77, 83, 91, 108, 119, 122] </ref>. 1.2 Structure of the Thesis This thesis presents effective techniques for the design and evaluation of router architectures that accommodate the performance requirements of emerging multicomputer applications. <p> Parallel applications generate a wide range of communication workloads depending on the application's granularity and mapping across multiple nodes, as well as the policies employed by the interconnection network. Scientific computations, parallel databases, and real-time applications generate distinct distributions for message/packet lengths, interar-rival times, and target destination nodes <ref> [27, 57, 77, 107] </ref>. Multi-user systems exacerbate these effects since different applications may run simultaneously; these applications may execute on different parts of the network or even time-share the same processing elements. <p> The simplest approach statically assigns link bandwidth to each queue or virtual channel, but demand-driven arbitration schemes better utilize the available network bandwidth. Priority-based schemes may improve performance by favoring longer queues or packets with stricter end-to-end delay requirements <ref> [31, 77, 120] </ref>. However, most multicomputer routers implement demand-driven, round-robin arbitration to divide bandwidth fairly amongst the competing traffic. Other arbitration policies, such as fair queueing algorithms, dispense bandwidth in proportion to a set of weights [5, 125, 126]. <p> These decentralized queues complicate packet scheduling. Still, a wormhole router can influence resource allocation through its virtual channel reservation and arbitration policies. Priority assignment of virtual channels to incoming packets improves predictability; adaptive arbitration policies can further reduce variability by basing flit bandwidth allocation on packet deadlines or priority <ref> [31, 77, 78, 120] </ref>. While assigning priorities to virtual channels provides some control over packet scheduling, this ties priority resolution to the number of virtual channels.
Reference: [78] <author> J.-P. Li and M. W. </author> <title> Mutka, "Real-time virtual channel flow control," </title> <booktitle> in Proceedings of the Phoenix Conference on Computers and Communication, </booktitle> <pages> pp. 97-103, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: These decentralized queues complicate packet scheduling. Still, a wormhole router can influence resource allocation through its virtual channel reservation and arbitration policies. Priority assignment of virtual channels to incoming packets improves predictability; adaptive arbitration policies can further reduce variability by basing flit bandwidth allocation on packet deadlines or priority <ref> [31, 77, 78, 120] </ref>. While assigning priorities to virtual channels provides some control over packet scheduling, this ties priority resolution to the number of virtual channels.
Reference: [79] <author> J. Liebeherr and D. Wrege, </author> <title> "Versatile packet multiplexer for quality-of-service networks," </title> <booktitle> in Proceedings of the IEEE International Symposium on High Performance Distributed Computing, </booktitle> <pages> pp. 148-155, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: As a result, packet size determines the acceptable worst-case scheduling delay, limiting both the maximum number of time-constrained packets and the size of the sorting keys [96]; to facilitate a single-chip solution, our design efficiently handles a moderate number of packets. Since packet sorting can introduce considerable hardware complexity <ref> [19, 22, 79, 96, 105, 121] </ref>, particularly when connections have a wide range of delay and bandwidth parameters, the real-time router shares the scheduling logic amongst the early and on-time packets headed for any of the five outgoing ports. <p> Future work can investigate other mechanisms for reducing the cost of the scheduling logic, including schemes that relax the accuracy of packet sorting to permit a cheaper and faster design <ref> [79, 101] </ref>. Such approximate schemes may prove necessary for implementing real-time packet scheduling algorithms in emerging high-speed networks. 6.5 Conclusion Parallel real-time applications impose diverse communication requirements on the underlying interconnection network.
Reference: [80] <author> C. L. Liu and J. W. Layland, </author> <title> "Scheduling algorithms for multiprogramming in a hard real-time environment," </title> <journal> Journal of the ACM, </journal> <volume> vol. 20, no. 1, </volume> <pages> pp. 46-61, </pages> <month> January </month> <year> 1973. </year>
Reference-contexts: Run-time link scheduling: Each link schedules time-constrained traffic based on logical arrival times and deadlines in order to bound message delay without exceeding the reserved buffer space at intermediate nodes. The scheduler, which employs a multi-class variation of the earliest due-date algorithm <ref> [80] </ref>, gives highest priority to time-constrained messages that have reached their logical arrival time (i.e., ` j (m i ) t), transmitting the message with the smallest deadline ` j (m i ) + d j , as shown in Table 6.2.
Reference: [81] <author> P. K. McKinley and C. Trefftz, "MultiSim: </author> <title> A simulation tool for the study of large-scale multiprocessors," </title> <booktitle> in Proceedings of the International Workshop on Modeling, Analysis, and Simulation of Computer and Telecommunication Systems, </booktitle> <pages> pp. 57-62, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: Execution-driven simulators [11, 40, 93] typically model the instruction-level operation of applications on particular parallel machines. Other simulation tools emphasize multicomputer network architectures, allowing users to evaluate routing algorithms and switching schemes under various synthetic traffic patterns <ref> [16, 62, 81] </ref>. However, these simulators do not capture the subtle relationship between router architecture and application communication requirements.
Reference: [82] <author> T. D. Morris and H. G. Perros, </author> <title> "Approximate analysis of a discrete-time tandem network of cut-through queues with blocking and bursty traffic," </title> <journal> Performance Evaluation, </journal> <volume> vol. 17, no. 3, </volume> <pages> pp. 207-223, </pages> <year> 1993. </year>
Reference-contexts: In addition, researchers are investigating the use of cut-through routers as building blocks for constructing larger ATM (asynchronous transfer mode) switches for use in large-scale networks <ref> [82, 123, 124] </ref>. Compared to traditional parallel machines, high-speed switches and local area networks impose a wide range of communication characteristics and performance requirements on multicomputer routers. In addition, multicomputer components are increasingly used for multimedia and real-time applications, such as scientific visualization, process control, and video-on-demand servers. <p> Other work extends this M/M/1 analysis to consider delivery-time distributions [41] and fixed-length packets [1]. Extensions of virtual cut-through switching address specific error recovery mechanisms [58] and partial cut-throughs [1, 124]. In addition, using virtual cut-through switching within multistage ATM switches introduces new communication characteristics and performance requirements <ref> [82, 123, 124] </ref>, including bursty traffic with delay constraints. However, these analytical models do not address the impact of routing algorithms on cut-through switching performance.
Reference: [83] <author> M. W. </author> <title> Mutka, "Using rate monotonic scheduling technology for real-time communications in a wormhole network," </title> <booktitle> in Proceedings of the IEEE Workshop on Parallel and Distributed Real-Time Systems, </booktitle> <pages> pp. 194-199, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: As a result, real-time and multimedia applications must under-utilize the network to achieve predictable performance. To address this problem, several recent projects consider new router architectures that can guarantee end-to-end communication performance in multicomputer networks <ref> [10, 69, 77, 83, 91, 108, 119, 122] </ref>. 1.2 Structure of the Thesis This thesis presents effective techniques for the design and evaluation of router architectures that accommodate the performance requirements of emerging multicomputer applications.
Reference: [84] <author> W. A. Najjar, A. Lagman, S. Sur, and P. K. Srimani, </author> <title> "Modeling adaptive routing in k-ary n-cube networks," </title> <booktitle> in Proceedings of the International Workshop on Modeling, Analysis, and Simulation of Computer and Telecommunication Systems, </booktitle> <pages> pp. 120-125, </pages> <year> 1994. </year> <title> [85] nCUBE-3: The Scalable Server Platform, </title> <publisher> nCube Corporation, </publisher> <month> March </month> <year> 1995. </year> <month> 88 </month>
Reference-contexts: The probability P 2 depends on the routing algorithm, as well as the relative position of the source and destination nodes; although an empirical approach can tabulate P 2 for a specific topology and routing algorithm <ref> [84] </ref>, analytical expressions allow efficient prediction of communication performance, particularly in large networks. 3.1.3 Traffic Pattern To study uniform traffic loads, we assume that a source node is equally likely to communicate with any destinations that are h hops away; this hop-uniform traffic pattern generates rings of destination nodes within a
Reference: [86] <author> J. Ngai and C. Seitz, </author> <title> "A framework for adaptive routing in multicomputer networks," </title> <booktitle> in Proceedings of the Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pp. 1-9, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: In contrast, a blocked wormhole packet stalls in the network, effectively dilating its length until its outgoing channel becomes available. As a result, wormhole networks typically utilize only a fraction of the available network bandwidth <ref> [31, 86] </ref>, as seen by the early saturation of the wormhole plot in Figure 5.1. At higher loads, this effect enables packet switching to outperform wormhole switching, even though packet switching introduces buffering delay at each hop in a packet's route.
Reference: [87] <author> L. Ni and P. McKinley, </author> <title> "A survey of wormhole routing techniques in direct networks," </title> <journal> IEEE Computer Magazine, </journal> <pages> pp. 62-76, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: In the last few years, researchers have proposed a wide variety of minimal and non-minimal adaptive routing algorithms, with different degrees of adaptivity and implementation com 6 plexity <ref> [4, 17, 46, 53, 87, 98] </ref>. When a routing algorithm must select from multiple output links at a node, the actual route chosen depends on a selection function that determines the order in which the algorithm considers these candidate links. <p> By supporting multiple virtual channels on each link, a router can allow incoming traffic to bypass stalled packets on different virtual channels. This can substantially improve the achievable network throughput of wormhole switching. In addition, virtual channels play an important role in avoiding packet deadlocks, particularly in wormhole networks <ref> [29, 87] </ref>. Deadlock arises when a chain of packets stall in the network, with each packet blocking the forward progress of another packet. A router can preclude such circular dependencies by restricting the order in which packets can access virtual channels. <p> Additional virtual channels permit the construction of adaptive routing algorithms with deadlock-avoidance guarantees [44]; typically, the more flexible adaptive routing algorithms require more virtual channels to prevent deadlock <ref> [17, 87, 98] </ref>. Multicomputer networks can also use virtual channels to logically segregate traffic with different characteristics or performance requirements. For example, a router could employ separate virtual channels to separate short and long packets [67, 68, 73] or control and data packets [30, 35]. <p> The router could improve best-effort performance by implementing adaptive wormhole routing, with additional virtual channels to avoid deadlock, at the expense of increased implementation complexity <ref> [4, 87] </ref>. In particular, non-minimal adaptive routing would enable best-effort packets to circumvent links with a heavy load of time-constrained traffic. 6.1.4 Buffer Architecture The real-time router includes a packet memory for storing time-constrained traffic awaiting access to the outgoing links; in contrast, blocked best-effort packets stall in the network.
Reference: [88] <author> A. Nowatzyk, M. Browne, E. Kelly, and M. Parkin, "S-connect: </author> <title> From networks of workstations to supercomputer performance," </title> <booktitle> in Proceedings of the International Symposium on Computer Architecture, </booktitle> <pages> pp. 71-82, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: As a result, several new systems incorporate multicomputer routers to achieve low-latency, high-bandwidth communication in local area networks. The Atomic [24] and Shrimp [13] research projects demonstrate the power of this paradigm, which has been incorporated in commercial products such as Sun Microsystem's S-Connect <ref> [88] </ref> and Myri-com's Myrinet [14]. In addition, researchers are investigating the use of cut-through routers as building blocks for constructing larger ATM (asynchronous transfer mode) switches for use in large-scale networks [82, 123, 124].
Reference: [89] <author> S. F. </author> <title> Nugent, </title> <booktitle> "The iPSC/2 direct-connect communications technology," in Proceedings of Hypercube Concurrent Computers and Applications, </booktitle> <pages> pp. 51-60, </pages> <month> January </month> <year> 1988. </year>
Reference-contexts: Due to advances in VLSI technology, these commercial vendors were able to incorporate dedicated router hardware for cut-through switching in subsequent multicomputer systems, such as the iPSC/2 <ref> [89] </ref>, nCube/6400 [45], and Ametek/2010 [109], during the late 1980s. Keeping with this trend, companies like Intel, IBM, Thinking Machines, and Cray Research developed new multicomputer systems based on wormhole-switched networks [25, 59, 76, 85, 95, 114, 115] during the first half of the 1990s. <p> With dimension-ordered routing and an unwrapped mesh topology, a router requires only one virtual channel per link to avoid deadlock, as in the Caltech Mesh Routing chip; the Network Design Frame 9 Router Topology Routing V-chans Arbitration iPSC/2 Direct-Connect <ref> [89] </ref> hypercube e-cube 1 | NCube 6400 [45] hypercube e-cube 1 | Virtual Channel Router [56] hypercube e-cube 2 fair Ariadne [3] 2-D torus adaptive 3 fair Table 2.2: Pipelined circuit-switched routers and the Message-Driven Processor include a second virtual channel to separate user and system messages (at different priority levels).
Reference: [90] <author> W. Oed, </author> <title> The Cray Research Massively Parallel Processor System: Cray T3D, </title> <month> Novem-ber </month> <year> 1993. </year>
Reference-contexts: These processors execute low-level routing-switching algorithms, tailored to the application traffic patterns. This enables the PRC to implement wormhole, virtual cut-through, 11 Router Topology Routing V-chans Queueing Cray T3D Router <ref> [90] </ref> 3-D torus e-cube 4 input Segment Router [73] | | 2 shared output IBM Vulcan [114] multistage static 1 shared output PRC [38] flexible programmable 3 software-controlled Table 2.4: Hybrid cut-through routers and packet switching, as well as hybrid schemes, each under variety of routing algorithms.
Reference: [91] <author> Y. Ofek and M. Yung, </author> <title> "The integrated MetaNet architecture: A switch-based multimedia LAN for parallel computing and real-time traffic," </title> <booktitle> in Proceedings of IEEE INFOCOM, </booktitle> <pages> pp. 802-811, </pages> <year> 1994. </year>
Reference-contexts: As a result, real-time and multimedia applications must under-utilize the network to achieve predictable performance. To address this problem, several recent projects consider new router architectures that can guarantee end-to-end communication performance in multicomputer networks <ref> [10, 69, 77, 83, 91, 108, 119, 122] </ref>. 1.2 Structure of the Thesis This thesis presents effective techniques for the design and evaluation of router architectures that accommodate the performance requirements of emerging multicomputer applications.
Reference: [92] <author> Y. Oie, T. Suda, M. Murata, D. Kolson, and H. Miyahara, </author> <title> "Survey of switching techniques in high-speed networks and their performance," </title> <booktitle> in Proceedings of IEEE INFOCOM, </booktitle> <pages> pp. 1242-1251, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: Unfortunately, a blocked packet at the head of an input FIFO detains any other packets in that buffer, even if the routing algorithm would assign these packets to other (possibly idle) output links. This head-of-line blocking significantly reduces achievable network throughput <ref> [55, 92, 116] </ref>. Alternatives to input queueing avoid this artificial contention at the expense of increased hardware complexity. Partitioned input-queueing replaces the single input FIFO with multiple queues to separate traffic destined for different outgoing links [92, 116]. <p> This head-of-line blocking significantly reduces achievable network throughput [55, 92, 116]. Alternatives to input queueing avoid this artificial contention at the expense of increased hardware complexity. Partitioned input-queueing replaces the single input FIFO with multiple queues to separate traffic destined for different outgoing links <ref> [92, 116] </ref>. In contrast, output queueing places packet buffers at the outgoing links, requiring the buffers to simultaneously accept packets from multiple input links. The router may provide separate buffers for each output queue or allow the outgoing links to share a central packet memory.
Reference: [93] <author> E. Olk, </author> <title> "PARSE: Simulation of message passing communication networks," </title> <booktitle> in Proceedings of the Annual Simulation Symposium, </booktitle> <pages> pp. 115-1245, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: To overcome these limitations, several researchers have developed mul-ticomputer simulators in the past few years. In contrast to toolkits for evaluating local and wide area networks [75], these simulators attempt to capture the unique characteristics of multicomputer applications and interconnection networks. Execution-driven simulators <ref> [11, 40, 93] </ref> typically model the instruction-level operation of applications on particular parallel machines. Other simulation tools emphasize multicomputer network architectures, allowing users to evaluate routing algorithms and switching schemes under various synthetic traffic patterns [16, 62, 81].
Reference: [94] <author> S. S. Owicki and A. R. Karlin, </author> <booktitle> "Factors in the performance of the AN1 computer network," in Proceedings of ACM SIGMETRICS, </booktitle> <pages> pp. 167-180, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: In contrast, the ComCoBB 10 Router Topology Routing Queueing Mayfly Post-Office [39] wrapped hexagonal adaptive shared output Chaos Router [15] 2-D torus non-minimal adaptive shared pool DEC AN1 <ref> [94] </ref> flexible table look-up, adaptive input ComCoBB [116] flexible table look-up partitioned input Artic Router [18] multistage static input pools Table 2.3: Virtual cut-through routers switch avoids head-of-line blocking by separating packets destined for different output links.
Reference: [95] <author> C. Peterson, J. Sutton, and P. Wiley, </author> <title> "iWarp: A 100-MOPS LIW microprocessor for multicomputers," </title> <booktitle> IEEE Micro, </booktitle> <pages> pp. </pages> <address> 26-29,81-87, </address> <month> June </month> <year> 1991. </year>
Reference-contexts: Keeping with this trend, companies like Intel, IBM, Thinking Machines, and Cray Research developed new multicomputer systems based on wormhole-switched networks <ref> [25, 59, 76, 85, 95, 114, 115] </ref> during the first half of the 1990s. Similarly, most research multicomputer networks employ virtual cut-through or wormhole switching, or hybrid schemes, as discussed in Chapter 2. <p> In this approach, the router divides each physical link into multiple virtual channels, where some virtual channels carry best-effort packets and the rest accept only time-constrained traffic. Virtual channels provide an effective mechanism for reducing the interaction between packets while still allowing traffic to share network bandwidth <ref> [30, 35, 43, 73, 95] </ref>. Exporting the virtual channel abstraction to the injection and reception ports further prevents intrusion between packets at the network entry and exit points [43, 67, 95]. <p> Virtual channels provide an effective mechanism for reducing the interaction between packets while still allowing traffic to share network bandwidth [30, 35, 43, 73, 95]. Exporting the virtual channel abstraction to the injection and reception ports further prevents intrusion between packets at the network entry and exit points <ref> [43, 67, 95] </ref>. This ensures that time-constrained and best-effort traffic have separate logical resources through the entire path from the source to the destination node.
Reference: [96] <author> D. Picker and R. D. Fellman, </author> <title> "Scaling and performance of a priority packet queue for real-time applications," </title> <booktitle> in Proceedings of the Real-Time Systems Symposium, </booktitle> <pages> pp. 56-62, </pages> <month> December </month> <year> 1994. </year>
Reference-contexts: To maximize link utilization and channel admissability, the router overlaps run-time communication scheduling with packet transmission on each of the five output ports. As a result, packet size determines the acceptable worst-case scheduling delay, limiting both the maximum number of time-constrained packets and the size of the sorting keys <ref> [96] </ref>; to facilitate a single-chip solution, our design efficiently handles a moderate number of packets. <p> As a result, packet size determines the acceptable worst-case scheduling delay, limiting both the maximum number of time-constrained packets and the size of the sorting keys [96]; to facilitate a single-chip solution, our design efficiently handles a moderate number of packets. Since packet sorting can introduce considerable hardware complexity <ref> [19, 22, 79, 96, 105, 121] </ref>, particularly when connections have a wide range of delay and bandwidth parameters, the real-time router shares the scheduling logic amongst the early and on-time packets headed for any of the five outgoing ports.
Reference: [97] <author> R. S. Raji, </author> <title> "Smart networks for control," </title> <journal> IEEE Spectrum, </journal> <volume> vol. 31, no. 6, </volume> <pages> pp. 49-55, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: In most real-time systems, time-constrained communication consists of 10-20 byte exchanges of command or status information <ref> [97] </ref>. Consequently, our design restricts time-constrained traffic to small, fixed-size packets, as shown in Table 6.1; this bounds network access latency and buffering delay while simplifying memory allocation in the router. To ensure predictable consumption of link and buffer resources, time-constrained traffic employs store-and-forward packet switching.
Reference: [98] <author> S. Ramany and D. Eager, </author> <title> "The interaction between virtual channel flow control and adaptive routing in wormhole networks," </title> <booktitle> in Proceedings of the International Conference on Supercomputing, </booktitle> <pages> pp. 136-145, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: In addition, many applications exhibit temporal locality, where a node sends several messages to the same destination over a small time interval. Also, parallel algorithms introduce specific non-uniform traffic patterns. For example, many scientific applications generate communication workloads that correspond to the matrix-transpose (dimension-reversal), bit-complement, and bit-reversal permutations <ref> [23, 32, 66, 98] </ref>. <p> Also, parallel algorithms introduce specific non-uniform traffic patterns. For example, many scientific applications generate communication workloads that correspond to the matrix-transpose (dimension-reversal), bit-complement, and bit-reversal permutations [23, 32, 66, 98]. Other application communication constructs, such as synchronization or multicast operations, may induce hot-spots of heavily-utilized nodes and links <ref> [17, 36, 98] </ref>. 2.2 Multicomputer Interconnection Networks 2.2.1 Network Topology By defining the connections between processing nodes, the network topology determines the number of communication links at each node and how far a packet must travel to reach its destination [47, 100]. <p> In the last few years, researchers have proposed a wide variety of minimal and non-minimal adaptive routing algorithms, with different degrees of adaptivity and implementation com 6 plexity <ref> [4, 17, 46, 53, 87, 98] </ref>. When a routing algorithm must select from multiple output links at a node, the actual route chosen depends on a selection function that determines the order in which the algorithm considers these candidate links. <p> Additional virtual channels permit the construction of adaptive routing algorithms with deadlock-avoidance guarantees [44]; typically, the more flexible adaptive routing algorithms require more virtual channels to prevent deadlock <ref> [17, 87, 98] </ref>. Multicomputer networks can also use virtual channels to logically segregate traffic with different characteristics or performance requirements. For example, a router could employ separate virtual channels to separate short and long packets [67, 68, 73] or control and data packets [30, 35].
Reference: [99] <author> D. Reed and R. Fujimoto, </author> <title> Multicomputer Networks: Message-Based Parallel Processing, </title> <publisher> MIT Press, </publisher> <year> 1987. </year>
Reference-contexts: On the other hand, a blocked wormhole packet stalls in the network, holding the earlier links in its route until the outgoing link becomes free. Although first-generation multicomputers employed packet switching, most contemporary research and commercial routers utilize cut-through switching for lower latency and reduced buffer space requirements <ref> [7, 99, 127] </ref>. For example, the Intel iPSC/1, nCube/3200, and Ametek/14 implemented store-and-forward packet switching, with each processing node interrupting application tasks to buffer and forward incoming packets [127].
Reference: [100] <author> D. A. Reed and D. C. Grunwald, </author> <title> "The performance of multicomputer interconnection networks," </title> <journal> IEEE Computer Magazine, </journal> <volume> vol. 20, no. 6, </volume> <pages> pp. 63-73, </pages> <month> June </month> <year> 1987. </year>
Reference-contexts: multicast operations, may induce hot-spots of heavily-utilized nodes and links [17, 36, 98]. 2.2 Multicomputer Interconnection Networks 2.2.1 Network Topology By defining the connections between processing nodes, the network topology determines the number of communication links at each node and how far a packet must travel to reach its destination <ref> [47, 100] </ref>. As a result, the choice of a topology impacts both the complexity of network wiring and the achievable communication bandwidth in the system [2, 33]. Mul-ticomputer networks vary from bus or ring topologies to fully-connected configurations, as shown in Figure 2.1.
Reference: [101] <author> J. Rexford, F. Bonomi, A. Greenberg, and A. Wong, </author> <title> "Scalable architectures for integrated traffic shaping and link scheduling in high-speed ATM switches," </title> <journal> in submission to IEEE Journal on Selected Areas in Communications, </journal> <month> May </month> <year> 1996. </year> <month> 89 </month>
Reference-contexts: Future work can investigate other mechanisms for reducing the cost of the scheduling logic, including schemes that relax the accuracy of packet sorting to permit a cheaper and faster design <ref> [79, 101] </ref>. Such approximate schemes may prove necessary for implementing real-time packet scheduling algorithms in emerging high-speed networks. 6.5 Conclusion Parallel real-time applications impose diverse communication requirements on the underlying interconnection network.
Reference: [102] <author> J. Rexford, J. Dolter, W. Feng, and K. G. Shin, </author> <title> "PP-MESS-SIM: A simulator for evaluating multicomputer interconnection networks," </title> <booktitle> in Proceedings of the Annual Simulation Symposium, </booktitle> <pages> pp. 84-93, </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: To address the traffic patterns and performance requirements of modern multicomputer networks, this chapter presents a flexible router model and simulation environment that can evaluate systems that tailor network policies to application communication workloads. The pp-mess-sim (point-to-point message simulator) environment provides an extensible, object-oriented framework for evaluating multicomputer routers <ref> [42, 102, 104] </ref>. Implemented in C++, pp-mess-sim separates its major components into different classes, representing the network topology, application workloads, routing-switching algorithms, and the router architecture. <p> These timing details are completely encapsulated in the Node, allowing other models to include additional simulation events to capture internal delays without affecting the routing-switching algorithms in the Ralg class <ref> [102] </ref>. 4.3.3 Routing-Switching Algorithms Using the Ralg instruction set, pp-mess-sim can easily incorporate additional routing algorithms and switching schemes, without altering the Node models. <p> In particular, recent research work exploits the simulator's ability to model networks that support multiple routing-switching schemes simultaneously [48-50, 103, 104, 107]. In addition to experiments with the v-router Node model <ref> [50, 102, 104, 107] </ref>, pp-mess-sim has been instrumental in evaluating the Programmable Routing Controller [42, 48, 49, 103, 111], described further in Chapter 5. The simulator's flexibility and extensibility stem from a careful definition of the Net, Workload, Ralg, and Node modules, as shown in Figure 4.1. <p> the routing engines can tailor the low-level communication policies of each virtual channel to address the requirements of best-effort and time-constrained traffic. 5.3 Performance Evaluation of Traffic Mixing The pp-mess-sim environment includes a cycle-level model of the PRC that captures the details of flow control, resource arbitration, and microcode execution <ref> [102, 104] </ref>. Experiments with the PRC model show that segregating best-effort wormhole traffic from time-constrained packet-switched traffic can accommodate the performance requirements of both classes.
Reference: [103] <author> J. Rexford, J. Dolter, and K. G. Shin, </author> <title> "Hardware support for controlled interaction of guaranteed and best-effort communication," </title> <booktitle> in Proceedings of the IEEE Workshop on Parallel and Distributed Real-Time Systems, </booktitle> <pages> pp. 188-193, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: As a result, several studies have used pp-mess-sim 48 to evaluate Node models under various routing-switching schemes, network topolo-gies, and application workloads. In particular, recent research work exploits the simulator's ability to model networks that support multiple routing-switching schemes simultaneously <ref> [48-50, 103, 104, 107] </ref>. In addition to experiments with the v-router Node model [50, 102, 104, 107], pp-mess-sim has been instrumental in evaluating the Programmable Routing Controller [42, 48, 49, 103, 111], described further in Chapter 5. <p> In particular, recent research work exploits the simulator's ability to model networks that support multiple routing-switching schemes simultaneously [48-50, 103, 104, 107]. In addition to experiments with the v-router Node model [50, 102, 104, 107], pp-mess-sim has been instrumental in evaluating the Programmable Routing Controller <ref> [42, 48, 49, 103, 111] </ref>, described further in Chapter 5. The simulator's flexibility and extensibility stem from a careful definition of the Net, Workload, Ralg, and Node modules, as shown in Figure 4.1. <p> With a careful selection of routing-switching policies, coupled with fine-grain link arbitration, multicomputer routers can provide low average latency for best-effort packets without compromising the pre 50 dictability of time-constrained communication <ref> [103, 107] </ref>. To realize this scheme, the chapter considers the design and evaluation of a Programmable Routing Controller [38, 42, 103] that can implement packet switching for time-constrained traffic and wormhole switching for best-effort packets, with separate virtual channels for each traffic class. <p> With a careful selection of routing-switching policies, coupled with fine-grain link arbitration, multicomputer routers can provide low average latency for best-effort packets without compromising the pre 50 dictability of time-constrained communication [103, 107]. To realize this scheme, the chapter considers the design and evaluation of a Programmable Routing Controller <ref> [38, 42, 103] </ref> that can implement packet switching for time-constrained traffic and wormhole switching for best-effort packets, with separate virtual channels for each traffic class. <p> For example, the Programmable Routing Controller (PRC) <ref> [37, 38, 42, 43, 103] </ref>, shown in Figure 5.3, is designed to implement programmable routing-switching schemes for best-effort traffic, while facilitating host control over scheduling and resource allocation for time-constrained communication.
Reference: [104] <author> J. Rexford, W. Feng, J. Dolter, and K. G. Shin, </author> <title> "PP-MESS-SIM: A flexible and extensible simulator for evaluating multicomputer networks," </title> <note> to appear in IEEE Transactions on Parallel and Distributed Systems. </note>
Reference-contexts: This link ordering improves the packet's chance of considering multiple outgoing links at future nodes in its route [8, 39]. Communication performance can be extremely sensitive to how the selection function interacts with the application workload to create traffic patterns in the interconnection network <ref> [50, 104] </ref>. 2.2.3 Switching Scheme The switching scheme impacts performance by determining the link and buffer resources a packet consumes at a given node in its route. Traditionally, multi-hop networks employ either a circuit-switched or store-and-forward model of communication. <p> To address the traffic patterns and performance requirements of modern multicomputer networks, this chapter presents a flexible router model and simulation environment that can evaluate systems that tailor network policies to application communication workloads. The pp-mess-sim (point-to-point message simulator) environment provides an extensible, object-oriented framework for evaluating multicomputer routers <ref> [42, 102, 104] </ref>. Implemented in C++, pp-mess-sim separates its major components into different classes, representing the network topology, application workloads, routing-switching algorithms, and the router architecture. <p> As a result, several studies have used pp-mess-sim 48 to evaluate Node models under various routing-switching schemes, network topolo-gies, and application workloads. In particular, recent research work exploits the simulator's ability to model networks that support multiple routing-switching schemes simultaneously <ref> [48-50, 103, 104, 107] </ref>. In addition to experiments with the v-router Node model [50, 102, 104, 107], pp-mess-sim has been instrumental in evaluating the Programmable Routing Controller [42, 48, 49, 103, 111], described further in Chapter 5. <p> In particular, recent research work exploits the simulator's ability to model networks that support multiple routing-switching schemes simultaneously [48-50, 103, 104, 107]. In addition to experiments with the v-router Node model <ref> [50, 102, 104, 107] </ref>, pp-mess-sim has been instrumental in evaluating the Programmable Routing Controller [42, 48, 49, 103, 111], described further in Chapter 5. The simulator's flexibility and extensibility stem from a careful definition of the Net, Workload, Ralg, and Node modules, as shown in Figure 4.1. <p> the routing engines can tailor the low-level communication policies of each virtual channel to address the requirements of best-effort and time-constrained traffic. 5.3 Performance Evaluation of Traffic Mixing The pp-mess-sim environment includes a cycle-level model of the PRC that captures the details of flow control, resource arbitration, and microcode execution <ref> [102, 104] </ref>. Experiments with the PRC model show that segregating best-effort wormhole traffic from time-constrained packet-switched traffic can accommodate the performance requirements of both classes.
Reference: [105] <author> J. Rexford, A. Greenberg, and F. Bonomi, </author> <title> "Hardware-efficient fair queueing architectures for high-speed networks," </title> <booktitle> in Proceedings of IEEE INFOCOM, </booktitle> <month> March </month> <year> 1996. </year>
Reference-contexts: The adaptive algorithm helps dissipate bursts by capitalizing on multiple paths between each source and destination, thus reducing the queueing delay at the sending node. 4.5.2 Tailoring Experiment The simulator's Ralg instructions and Net selection functions enable multi-factor experiments that study the interaction of routing algorithms and selection functions <ref> [50, 105] </ref>. For routers which support multiple routing schemes, these results can serve as a guide for selecting an appropriate routing algorithm based on the application workload. In a multi-user environment, where multiple applications execute at the same time, supporting multiple routing schemes simultaneously can significantly improve performance. <p> As a result, packet size determines the acceptable worst-case scheduling delay, limiting both the maximum number of time-constrained packets and the size of the sorting keys [96]; to facilitate a single-chip solution, our design efficiently handles a moderate number of packets. Since packet sorting can introduce considerable hardware complexity <ref> [19, 22, 79, 96, 105, 121] </ref>, particularly when connections have a wide range of delay and bandwidth parameters, the real-time router shares the scheduling logic amongst the early and on-time packets headed for any of the five outgoing ports.
Reference: [106] <author> J. Rexford and K. G. Shin, </author> <title> "Shortest-path routing in homogeneous point-to-point networks with virtual cut-through switching," </title> <institution> Computer Science and Engineering Technical Report CSE-TR-146-92, University of Michigan, </institution> <month> November </month> <year> 1992. </year>
Reference-contexts: As shown in Figure 3.7, the benefit of dimension-order routing becomes more significant for larger values of h, since packets travel through more nodes in each direction, changing dimensions only once <ref> [2, 106] </ref>. In contrast, Figure 3.6 (b) shows little difference between the dimension-ordered and random selection functions under adaptive routing, since the extra routing flexibility is sufficient to resolve these link conflicts. <p> This, in turn, translates into greater variability in end-to-end packet latency <ref> [106] </ref>, even for an idealized router model. A closer look at the simulation data reveals the cause of this variability. Figure 3.10 (a) shows the packet cut-through probability, conditioned on the switching decision at the packet's previous hop.
Reference: [107] <author> J. Rexford and K. G. Shin, </author> <title> "Support for multiple classes of traffic in multicomputer routers," </title> <booktitle> in Proceedings of the Parallel Computer Routing and Communication Workshop, </booktitle> <pages> pp. 116-130, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: Parallel applications generate a wide range of communication workloads depending on the application's granularity and mapping across multiple nodes, as well as the policies employed by the interconnection network. Scientific computations, parallel databases, and real-time applications generate distinct distributions for message/packet lengths, interar-rival times, and target destination nodes <ref> [27, 57, 77, 107] </ref>. Multi-user systems exacerbate these effects since different applications may run simultaneously; these applications may execute on different parts of the network or even time-share the same processing elements. <p> As a result, several studies have used pp-mess-sim 48 to evaluate Node models under various routing-switching schemes, network topolo-gies, and application workloads. In particular, recent research work exploits the simulator's ability to model networks that support multiple routing-switching schemes simultaneously <ref> [48-50, 103, 104, 107] </ref>. In addition to experiments with the v-router Node model [50, 102, 104, 107], pp-mess-sim has been instrumental in evaluating the Programmable Routing Controller [42, 48, 49, 103, 111], described further in Chapter 5. <p> In particular, recent research work exploits the simulator's ability to model networks that support multiple routing-switching schemes simultaneously [48-50, 103, 104, 107]. In addition to experiments with the v-router Node model <ref> [50, 102, 104, 107] </ref>, pp-mess-sim has been instrumental in evaluating the Programmable Routing Controller [42, 48, 49, 103, 111], described further in Chapter 5. The simulator's flexibility and extensibility stem from a careful definition of the Net, Workload, Ralg, and Node modules, as shown in Figure 4.1. <p> With a careful selection of routing-switching policies, coupled with fine-grain link arbitration, multicomputer routers can provide low average latency for best-effort packets without compromising the pre 50 dictability of time-constrained communication <ref> [103, 107] </ref>. To realize this scheme, the chapter considers the design and evaluation of a Programmable Routing Controller [38, 42, 103] that can implement packet switching for time-constrained traffic and wormhole switching for best-effort packets, with separate virtual channels for each traffic class.
Reference: [108] <author> A. Saha, </author> <title> "Simulator for real-time parallel processing architectures," </title> <booktitle> in Proceedings of the Annual Simulation Symposium, </booktitle> <pages> pp. 74-83, </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: As a result, real-time and multimedia applications must under-utilize the network to achieve predictable performance. To address this problem, several recent projects consider new router architectures that can guarantee end-to-end communication performance in multicomputer networks <ref> [10, 69, 77, 83, 91, 108, 119, 122] </ref>. 1.2 Structure of the Thesis This thesis presents effective techniques for the design and evaluation of router architectures that accommodate the performance requirements of emerging multicomputer applications.
Reference: [109] <author> C. L. Seitz, W. C. Athas, C. M. Flaig, A. J. Martin, J. Seizovic, C. S. Steele, and W.-K. Su, </author> <booktitle> "The architecture and programming of the Ametek series 2010 multicomputer," in Proceedings of Hypercube Concurrent Computers and Applications, </booktitle> <pages> pp. 33-36, </pages> <month> January </month> <year> 1988. </year>
Reference-contexts: Due to advances in VLSI technology, these commercial vendors were able to incorporate dedicated router hardware for cut-through switching in subsequent multicomputer systems, such as the iPSC/2 [89], nCube/6400 [45], and Ametek/2010 <ref> [109] </ref>, during the late 1980s. Keeping with this trend, companies like Intel, IBM, Thinking Machines, and Cray Research developed new multicomputer systems based on wormhole-switched networks [25, 59, 76, 85, 95, 114, 115] during the first half of the 1990s.
Reference: [110] <author> C. L. Seitz and W. Su, </author> <title> "A family of routing and communication chips based on the Mosaic," </title> <booktitle> in Proceedings of the Symposium on Integrated Systems, </booktitle> <year> 1993. </year>
Reference-contexts: However, if two incoming packets route to the same outgoing link, one packet must be blocked and incur delay. The simplest buffering scheme places a first-in first-out (FIFO) queue at each input link to store packets unable 8 Router Topology Routing V-chans Arbitration Mesh Routing Chip <ref> [110] </ref> 2-D mesh e-cube 1 | Network Design Frame [30] 2-D mesh e-cube 2 priority Message-Driven Processor [35] 3-D mesh e-cube 2 priority Torus Routing Chip [28] 2-D torus e-cube 2 fair Reliable Router [34] 2-D mesh adaptive 5 fair IMS C104 Switch [117] flexible interval routing, 1 | universal routing
Reference: [111] <author> K. G. Shin and S. Daniel, </author> <title> "Analysis and implementation of hybrid switching," </title> <booktitle> in Proceedings of the International Symposium on Computer Architecture, </booktitle> <pages> pp. 211-219, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: For example, the h-hop hybrid algorithm in Table 4.1 allows a blocked packet to stall (using the wait construct) only if the packet spans fewer than h links; otherwise, the blocked packet buffers at the intermediate node, releasing any channel resources <ref> [111] </ref>. This algorithm limits channel contention, while still restricting the use of packet buffers. The Ralg instructions can also implement various routing algorithms by generating different lists of candidate virtual channels. As shown in Table 4.1, pp-mess-sim includes several oblivious and adaptive routing algorithms for the different switching schemes. <p> In particular, recent research work exploits the simulator's ability to model networks that support multiple routing-switching schemes simultaneously [48-50, 103, 104, 107]. In addition to experiments with the v-router Node model [50, 102, 104, 107], pp-mess-sim has been instrumental in evaluating the Programmable Routing Controller <ref> [42, 48, 49, 103, 111] </ref>, described further in Chapter 5. The simulator's flexibility and extensibility stem from a careful definition of the Net, Workload, Ralg, and Node modules, as shown in Figure 4.1.
Reference: [112] <author> K. G. Shin and Q. Zheng, </author> <title> "Mixed time-constrained and non-time-constrained communications in local area networks," </title> <journal> IEEE Transactions on Communications, </journal> <pages> pp. 1668-1676, </pages> <month> November </month> <year> 1993. </year>
Reference-contexts: Real-time applications typically handle a mixture of time-constrained and best-effort communication, where time-constrained packets require bounds on latency and throughput, while best-effort traffic settles for good average performance <ref> [6, 54, 112, 113] </ref>. Based on simulation experiments, Chapter 5 proposes effective techniques for mixing the time-constrained and best-effort packets without sacrificing the performance goals of either traffic class.
Reference: [113] <author> J. A. Stankovic, </author> <title> "Distributed real-time computing: The next generation," </title> <type> Technical Report COINS 92-01, </type> <institution> University of Massachusetts, Amherst, </institution> <month> January </month> <year> 1992. </year>
Reference-contexts: Real-time applications typically handle a mixture of time-constrained and best-effort communication, where time-constrained packets require bounds on latency and throughput, while best-effort traffic settles for good average performance <ref> [6, 54, 112, 113] </ref>. Based on simulation experiments, Chapter 5 proposes effective techniques for mixing the time-constrained and best-effort packets without sacrificing the performance goals of either traffic class.
Reference: [114] <author> C. Stunkel et al., </author> <title> "SP2 high-performance switch," </title> <journal> IBM Systems Journal, </journal> <volume> vol. 34, no. 2, </volume> <pages> pp. 185-204, </pages> <year> 1995. </year>
Reference-contexts: Keeping with this trend, companies like Intel, IBM, Thinking Machines, and Cray Research developed new multicomputer systems based on wormhole-switched networks <ref> [25, 59, 76, 85, 95, 114, 115] </ref> during the first half of the 1990s. Similarly, most research multicomputer networks employ virtual cut-through or wormhole switching, or hybrid schemes, as discussed in Chapter 2. <p> These processors execute low-level routing-switching algorithms, tailored to the application traffic patterns. This enables the PRC to implement wormhole, virtual cut-through, 11 Router Topology Routing V-chans Queueing Cray T3D Router [90] 3-D torus e-cube 4 input Segment Router [73] | | 2 shared output IBM Vulcan <ref> [114] </ref> multistage static 1 shared output PRC [38] flexible programmable 3 software-controlled Table 2.4: Hybrid cut-through routers and packet switching, as well as hybrid schemes, each under variety of routing algorithms. In addition, the router can support multiple routing-switching schemes simultaneously , as discussed further in Section 5.2.2.
Reference: [115] <author> D. Talia, </author> <title> "Message-routing systems for transputer-based multicomputers," </title> <booktitle> IEEE Micro, </booktitle> <pages> pp. 62-72, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Keeping with this trend, companies like Intel, IBM, Thinking Machines, and Cray Research developed new multicomputer systems based on wormhole-switched networks <ref> [25, 59, 76, 85, 95, 114, 115] </ref> during the first half of the 1990s. Similarly, most research multicomputer networks employ virtual cut-through or wormhole switching, or hybrid schemes, as discussed in Chapter 2.
Reference: [116] <author> Y. Tamir and G. Frazier, </author> <title> "Dynamically-allocated multi-queue buffers for VLSI communication switches," </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. 41, no. 6, </volume> <pages> pp. 725-737, </pages> <month> June </month> <year> 1992. </year> <month> 90 </month>
Reference-contexts: Unfortunately, a blocked packet at the head of an input FIFO detains any other packets in that buffer, even if the routing algorithm would assign these packets to other (possibly idle) output links. This head-of-line blocking significantly reduces achievable network throughput <ref> [55, 92, 116] </ref>. Alternatives to input queueing avoid this artificial contention at the expense of increased hardware complexity. Partitioned input-queueing replaces the single input FIFO with multiple queues to separate traffic destined for different outgoing links [92, 116]. <p> This head-of-line blocking significantly reduces achievable network throughput [55, 92, 116]. Alternatives to input queueing avoid this artificial contention at the expense of increased hardware complexity. Partitioned input-queueing replaces the single input FIFO with multiple queues to separate traffic destined for different outgoing links <ref> [92, 116] </ref>. In contrast, output queueing places packet buffers at the outgoing links, requiring the buffers to simultaneously accept packets from multiple input links. The router may provide separate buffers for each output queue or allow the outgoing links to share a central packet memory. <p> In contrast, the ComCoBB 10 Router Topology Routing Queueing Mayfly Post-Office [39] wrapped hexagonal adaptive shared output Chaos Router [15] 2-D torus non-minimal adaptive shared pool DEC AN1 [94] flexible table look-up, adaptive input ComCoBB <ref> [116] </ref> flexible table look-up partitioned input Artic Router [18] multistage static input pools Table 2.3: Virtual cut-through routers switch avoids head-of-line blocking by separating packets destined for different output links. While each input link has a single packet buffer, this memory includes a separate logical FIFO for each output link [116]. <p> <ref> [116] </ref> flexible table look-up partitioned input Artic Router [18] multistage static input pools Table 2.3: Virtual cut-through routers switch avoids head-of-line blocking by separating packets destined for different output links. While each input link has a single packet buffer, this memory includes a separate logical FIFO for each output link [116]. Instead of constructing separate logical queues, the Artic routing chip allows every buffered packet to contend for access to the output links. Since each Artic input link can buffer at most three packets, the implementation connects each packet buffer to a crossbar port.
Reference: [117] <author> P. Thompson, </author> <title> "Concurrent interconnect for parallel systems," </title> <journal> The Computer Journal, </journal> <volume> vol. 36, no. 8, </volume> <pages> pp. 778-784, </pages> <year> 1993. </year>
Reference-contexts: Topology Routing V-chans Arbitration Mesh Routing Chip [110] 2-D mesh e-cube 1 | Network Design Frame [30] 2-D mesh e-cube 2 priority Message-Driven Processor [35] 3-D mesh e-cube 2 priority Torus Routing Chip [28] 2-D torus e-cube 2 fair Reliable Router [34] 2-D mesh adaptive 5 fair IMS C104 Switch <ref> [117] </ref> flexible interval routing, 1 | universal routing Table 2.1: Wormhole routers to access their chosen output link.
Reference: [118] <author> F. A. Tobagi, </author> <title> "Fast packet switch architectures for broadband integrated services digital networks," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 78, no. 1, </volume> <pages> pp. 133-167, </pages> <month> January </month> <year> 1990. </year>
Reference-contexts: The router queues time-constrained packets at the output ports to avoid the throughput limitations of input queueing <ref> [118] </ref>; this permits each output link to select a packet for transmission amongst all time-constrained traffic buffered in the router. The reception port and 65 four output links share a single packet memory to maximize usage of the available buffer space. <p> Similarly, each port includes two small flit buffers to permit continuous transmission of wormhole packets in the absence of link contention. Similar to many shared-memory switches in high-speed networks <ref> [118] </ref>, the router maintains a pool of unused memory locations to assign to arriving time-constrained packets. Initially, this idle-address FIFO includes every location in the memory. An incoming packet retrieves an address from this FIFO; upon packet departure, the router returns the location to the idle-address pool.
Reference: [119] <author> K. Toda, K. Nishida, E. Takahashi, N. Michell, and Y. Yamaguchi, </author> <title> "Design and implementation of a priority forwarding router chip for real-time interconnection networks," </title> <journal> International Journal of Mini and Microcomputers, </journal> <volume> vol. 17, no. 1, </volume> <pages> pp. 42-51, </pages> <year> 1995. </year>
Reference-contexts: As a result, real-time and multimedia applications must under-utilize the network to achieve predictable performance. To address this problem, several recent projects consider new router architectures that can guarantee end-to-end communication performance in multicomputer networks <ref> [10, 69, 77, 83, 91, 108, 119, 122] </ref>. 1.2 Structure of the Thesis This thesis presents effective techniques for the design and evaluation of router architectures that accommodate the performance requirements of emerging multicomputer applications.
Reference: [120] <author> B. Tsai and K. G. Shin, </author> <title> "Sequencing of concurrent communication traffic in a mesh multicomputer with virtual channels," </title> <booktitle> in Proceedings of the International Conference on Parallel Processing, </booktitle> <pages> pp. </pages> <address> I-126-I-133, </address> <month> August </month> <year> 1994. </year>
Reference-contexts: The simplest approach statically assigns link bandwidth to each queue or virtual channel, but demand-driven arbitration schemes better utilize the available network bandwidth. Priority-based schemes may improve performance by favoring longer queues or packets with stricter end-to-end delay requirements <ref> [31, 77, 120] </ref>. However, most multicomputer routers implement demand-driven, round-robin arbitration to divide bandwidth fairly amongst the competing traffic. Other arbitration policies, such as fair queueing algorithms, dispense bandwidth in proportion to a set of weights [5, 125, 126]. <p> These decentralized queues complicate packet scheduling. Still, a wormhole router can influence resource allocation through its virtual channel reservation and arbitration policies. Priority assignment of virtual channels to incoming packets improves predictability; adaptive arbitration policies can further reduce variability by basing flit bandwidth allocation on packet deadlines or priority <ref> [31, 77, 78, 120] </ref>. While assigning priorities to virtual channels provides some control over packet scheduling, this ties priority resolution to the number of virtual channels.
Reference: [121] <author> E. Wallmeier and T. Worster, </author> <title> "The Spacing Policer, an algorithm for efficient peak bit rate control in ATM networks," </title> <booktitle> in Proceedings of the International Switching Symposium, </booktitle> <pages> pp. 22-26, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: As a result, packet size determines the acceptable worst-case scheduling delay, limiting both the maximum number of time-constrained packets and the size of the sorting keys [96]; to facilitate a single-chip solution, our design efficiently handles a moderate number of packets. Since packet sorting can introduce considerable hardware complexity <ref> [19, 22, 79, 96, 105, 121] </ref>, particularly when connections have a wide range of delay and bandwidth parameters, the real-time router shares the scheduling logic amongst the early and on-time packets headed for any of the five outgoing ports.
Reference: [122] <author> L. R. Welch and K. </author> <title> Toda, "Architectural support for real-time systems: Issues and trade-offs," </title> <booktitle> in Proceedings of the International Workshop on Real-Time Computing Systems and Applications, </booktitle> <pages> pp. 145-152, </pages> <month> December </month> <year> 1994. </year>
Reference-contexts: As a result, real-time and multimedia applications must under-utilize the network to achieve predictable performance. To address this problem, several recent projects consider new router architectures that can guarantee end-to-end communication performance in multicomputer networks <ref> [10, 69, 77, 83, 91, 108, 119, 122] </ref>. 1.2 Structure of the Thesis This thesis presents effective techniques for the design and evaluation of router architectures that accommodate the performance requirements of emerging multicomputer applications. <p> Multimedia and real-time applications, such as scientific visualization and process control, necessitate control over throughput, worst-case latency, and delay variance (jitter) <ref> [51, 122] </ref>. While time-constrained traffic necessitates deterministic or probabilistic bounds on throughput or end-to-end delay, best-effort service often suffices for the remaining traffic. For example, control or audio/video messages may mandate explicit performance guarantees, while data transfer may tolerate delay variability in exchange for improved average latency.
Reference: [123] <author> I. Widjaja, A. Leon-Garcia, and H. T. Mouftah, </author> <title> "The effect of cut-through switching on the performance of buffered Banyan networks," </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> vol. 26, </volume> <pages> pp. 139-159, </pages> <year> 1993. </year>
Reference-contexts: In addition, researchers are investigating the use of cut-through routers as building blocks for constructing larger ATM (asynchronous transfer mode) switches for use in large-scale networks <ref> [82, 123, 124] </ref>. Compared to traditional parallel machines, high-speed switches and local area networks impose a wide range of communication characteristics and performance requirements on multicomputer routers. In addition, multicomputer components are increasingly used for multimedia and real-time applications, such as scientific visualization, process control, and video-on-demand servers. <p> Other work extends this M/M/1 analysis to consider delivery-time distributions [41] and fixed-length packets [1]. Extensions of virtual cut-through switching address specific error recovery mechanisms [58] and partial cut-throughs [1, 124]. In addition, using virtual cut-through switching within multistage ATM switches introduces new communication characteristics and performance requirements <ref> [82, 123, 124] </ref>, including bursty traffic with delay constraints. However, these analytical models do not address the impact of routing algorithms on cut-through switching performance.
Reference: [124] <author> Y. S. Youn and C. K. </author> <title> Un, "Performance analysis of an integrated voice/data cut-through switching network," </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> vol. 21, no. 1, </volume> <pages> pp. 41-51, </pages> <year> 1991. </year>
Reference-contexts: In addition, researchers are investigating the use of cut-through routers as building blocks for constructing larger ATM (asynchronous transfer mode) switches for use in large-scale networks <ref> [82, 123, 124] </ref>. Compared to traditional parallel machines, high-speed switches and local area networks impose a wide range of communication characteristics and performance requirements on multicomputer routers. In addition, multicomputer components are increasingly used for multimedia and real-time applications, such as scientific visualization, process control, and video-on-demand servers. <p> Other work extends this M/M/1 analysis to consider delivery-time distributions [41] and fixed-length packets [1]. Extensions of virtual cut-through switching address specific error recovery mechanisms [58] and partial cut-throughs <ref> [1, 124] </ref>. In addition, using virtual cut-through switching within multistage ATM switches introduces new communication characteristics and performance requirements [82, 123, 124], including bursty traffic with delay constraints. However, these analytical models do not address the impact of routing algorithms on cut-through switching performance. <p> Other work extends this M/M/1 analysis to consider delivery-time distributions [41] and fixed-length packets [1]. Extensions of virtual cut-through switching address specific error recovery mechanisms [58] and partial cut-throughs [1, 124]. In addition, using virtual cut-through switching within multistage ATM switches introduces new communication characteristics and performance requirements <ref> [82, 123, 124] </ref>, including bursty traffic with delay constraints. However, these analytical models do not address the impact of routing algorithms on cut-through switching performance.
Reference: [125] <author> H. Zhang, </author> <title> "Providing end-to-end performance guarantees using non-work-conserving disciplines," </title> <journal> Computer Communications, </journal> <volume> vol. 18, no. 10, </volume> <pages> pp. 769-781, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: However, most multicomputer routers implement demand-driven, round-robin arbitration to divide bandwidth fairly amongst the competing traffic. Other arbitration policies, such as fair queueing algorithms, dispense bandwidth in proportion to a set of weights <ref> [5, 125, 126] </ref>. These schemes ensure a minimum bandwidth to each channel, independent of the traffic on other channels. 2.3 Cut-Through Router Designs 2.3.1 Wormhole Routers Many contemporary research and commercial routers employ wormhole switching or pipelined circuit switching, as shown in Table 2.1 and Table 2.2. <p> Ultimately, bounding worst-case latency requires prior reservation of link and buffer resources, based on the application's anticipated traffic load <ref> [5, 125, 126] </ref>. Under this traffic contract, the network can provide end-to-end performance guarantees through effective link-scheduling and buffer-allocation policies. This chapter presents a real-time router design that handles a wide range of throughput and delay requirements by implementing the real-time channel [63] abstraction for packet scheduling. <p> A real-time channel is a unidirectional virtual connection between two nodes, with a source traffic specification and end-to-end delay bound; separate parameters for delay and bandwidth permit the model to accommodate a wider range and larger number of connections than other disciplines <ref> [125] </ref>, at the expense of increased implementation complexity. At run-time, the network guarantees end-to-end performance through a combination of bandwidth regulation and deadline-based packet scheduling at each link, as shown in Figure 6.1. <p> Buffer requirements: By postponing the transmission of early time-constrained traffic, the link scheduler avoids overloading the buffer space at the downstream node <ref> [63, 125] </ref>. If the first two scheduling queues are empty, the link can transmit early time-constrained traffic from Queue 3, as long as these messages are within a small distance h 0 of their logical arrival time; Figure 6.6 summarizes the router's link-scheduling algorithm.
Reference: [126] <author> H. Zhang, </author> <title> "Service disciplines for guaranteed performance service in packet-switching networks," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 83, no. 10, </volume> <pages> pp. 1374-1396, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: However, most multicomputer routers implement demand-driven, round-robin arbitration to divide bandwidth fairly amongst the competing traffic. Other arbitration policies, such as fair queueing algorithms, dispense bandwidth in proportion to a set of weights <ref> [5, 125, 126] </ref>. These schemes ensure a minimum bandwidth to each channel, independent of the traffic on other channels. 2.3 Cut-Through Router Designs 2.3.1 Wormhole Routers Many contemporary research and commercial routers employ wormhole switching or pipelined circuit switching, as shown in Table 2.1 and Table 2.2. <p> Ultimately, bounding worst-case latency requires prior reservation of link and buffer resources, based on the application's anticipated traffic load <ref> [5, 125, 126] </ref>. Under this traffic contract, the network can provide end-to-end performance guarantees through effective link-scheduling and buffer-allocation policies. This chapter presents a real-time router design that handles a wide range of throughput and delay requirements by implementing the real-time channel [63] abstraction for packet scheduling.
Reference: [127] <author> X. Zhang, </author> <title> "System effects of interprocessor communication latency in multicomput-ers," </title> <booktitle> IEEE Micro, </booktitle> <pages> pp. 12-15, 52-55, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: On the other hand, a blocked wormhole packet stalls in the network, holding the earlier links in its route until the outgoing link becomes free. Although first-generation multicomputers employed packet switching, most contemporary research and commercial routers utilize cut-through switching for lower latency and reduced buffer space requirements <ref> [7, 99, 127] </ref>. For example, the Intel iPSC/1, nCube/3200, and Ametek/14 implemented store-and-forward packet switching, with each processing node interrupting application tasks to buffer and forward incoming packets [127]. <p> For example, the Intel iPSC/1, nCube/3200, and Ametek/14 implemented store-and-forward packet switching, with each processing node interrupting application tasks to buffer and forward incoming packets <ref> [127] </ref>. Due to advances in VLSI technology, these commercial vendors were able to incorporate dedicated router hardware for cut-through switching in subsequent multicomputer systems, such as the iPSC/2 [89], nCube/6400 [45], and Ametek/2010 [109], during the late 1980s. <p> As a result, most contemporary routers utilize cut-through switching for lower latency and reduced buffer space requirements <ref> [127] </ref>. If the outgoing link is busy, virtual cut-through switching buffers the packet, effectively degrading to packet switching. In contrast, a blocked wormhole packet stalls pending access to the outgoing link.
Reference: [128] <author> Q. Zheng, K. G. Shin, and C. Chen, </author> <title> "Real-time communication in ATM," </title> <booktitle> in Proceedings of the Annual Conference on Local Computer Networks, </booktitle> <pages> pp. 156-164, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: Alternatively, the router could store additional information in the connection table to compute ` j (m i ) from a packet's actual arrival time and the logical arrival time of the connection's previous packet <ref> [128] </ref>; however, this approach would require the router to periodically refresh this connection state to correctly handle the effects of clock rollover. In addition to the connection table, the router maintains a separate horizon parameter h for each outgoing port.
Reference: [129] <author> Q. Zheng and K. G. Shin, </author> <title> "On the ability of establishing real-time channels in point-to-point packet-switched networks," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 42, no. </volume> <pages> 2-4, pp. 1096-1105, </pages> <month> February/March/April </month> <year> 1994. </year> <month> 91 </month>
Reference-contexts: Per-hop delay bounds: The network does not admit a new connection unless it can reserve sufficient buffer and bandwidth resources without violating the requirements of existing connections <ref> [63, 129] </ref>. A connection establishment procedure decomposes the connection's end-to-end delay bound D into local delay bounds d j for each hop in its route such that d j I min and P j d j D. <p> Admitting a new connection, and selecting a multi-hop route with suitable local delay parameters, is a computationally-intensive procedure <ref> [5, 63, 129] </ref>. Fortunately, channel establishment typically does not impose tight timing constraints; in most cases, the network can create the required channels before data transfer commences. To permit a single-chip solution, the real-time router relegates these non-real-time operations to the protocol software.
References-found: 129

