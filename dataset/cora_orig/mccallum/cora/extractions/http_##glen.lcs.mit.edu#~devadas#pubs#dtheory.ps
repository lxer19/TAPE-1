URL: http://glen.lcs.mit.edu/~devadas/pubs/dtheory.ps
Refering-URL: http://glen.lcs.mit.edu/~devadas/pubs/test.html
Root-URL: 
Title: Synthesis of Robust Delay-Fault Testable Circuits: Theory  
Author: Srinivas Devadas Kurt Keutzer 
Address: Cambridge  Murray Hill  
Affiliation: Department of Electrical Engineering and Computer Science Massachusetts Institute of Technology,  Computing Systems Research Laboratory AT&T Bell Laboratories,  
Abstract: Correct operation of synchronous digital circuits requires propagation delays of all sensitizable paths in the circuit to be smaller than a specified limit. Physical defects and processing variations in integrated circuits can affect the temporal behavior of a circuit without altering the logical behavior. These defects are called delay faults. In order to design, and especially to synthesize, highly or completely delay-fault testable circuits, one has to fully understand the sources of untestability. Ideally this requires the determination of necessary and sufficient conditions for delay-fault testability. Synthesis procedures that produce testable logic realizations by satisfying sufficient conditions for delay-fault testability can then be based on this understanding. There is often an area/performance overhead associated with these procedures, but an understanding of both the sufficiency conditions and the techniques of logic optimization can alleviate the overhead by minimally constraining the optimization to achieve full testability. In this paper we give a comprehensive theoretical framework for the analysis and synthesis of delay-fault testable combinational logic circuits. In particular, we provide necessary and sufficient conditions for a combinational logic network to be completely robustly path-delay-fault testable. We begin with two-level circuits and give a necessary and sufficient condition for robust path-delay-fault testability in terms of the well known concepts of primality, irredundancy and essential vertices. We then apply these notions to multilevel circuits to arrive at a necessary and sufficient condition for multilevel implementations. We also generalize these results to multiple-output functions. We show that algebraic factorization retains the robust path-delay-fault testability of a two-level circuit and this naturally suggests a synthesis procedure for multilevel robustly path-delay-fault testable circuits. We switch focus to a less restrictive though common model of delay faults, namely, gate-delay-faults. We give a necessary and sufficient condition for two-level and multilevel functions to be completely robustly gate-delay-fault testable. We show that constrained algebraic factorization in a multilevel synthesis procedure retains the complete robust gate-delay-fault testability of a two-level network. We present preliminary experimental results using these synthesis techniques. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. B. Armstrong. </author> <title> On Finding a Nearly Minimal Set of Fault Detection Tests for Combinational Logic Nets. </title> <journal> IEEE Transactions on Computers, </journal> <volume> EC-15(2):66-73, </volume> <month> February </month> <year> 1966. </year>
Reference-contexts: We therefore wish to extend the results of Section 4 to multilevel implementations and derive necessary and sufficient conditions for a multilevel circuit to be robustly path-delay-fault testable. To aid in our analysis our approach is to use an alternative representation of a multilevel circuit developed by Armstrong <ref> [1] </ref> called the equivalent normal form or ENF. <p> As before, no Boolean reductions are made in reducing E h to sum-of-products form. In Figure 1 we show a circuit based on Figure 2 in <ref> [1] </ref>. The final ENF expression for primary output M is: M = e f5;9g b f5;9g a f1;4;5;9g + b f5;9g c f2;3;4;5;9g d f3;4;5;9g e f5;9g + a f1;4;6;8;9g c f2;3;4;6;8;9g b f7;8;9g This ENF has been derived using the rules for the and and or gates given above.
Reference: [2] <author> R. Brayton, R. Rudell, A. Sangiovanni-Vincentelli, and A. Wang. </author> <title> MIS: A Multiple-Level Logic Optimization System. </title> <journal> IEEE Transactions on Computer-Aided Design of Integrated Circuits, </journal> <volume> CAD-6(6):1062-1081, </volume> <month> November </month> <year> 1987. </year>
Reference-contexts: On the other hand these conditions do not bring to light any global circuit properties latent in robust path-delay-fault testable circuits and as a result using these conditions we found it difficult to show how robust path-delay-fault testability is retained by non-trivial circuit transformations. We show that algebraic factorization <ref> [2] </ref> retains the path-delay-fault testability of a two-level circuit. We then switch our focus to the less stringent gate-delay-fault model. We give a necessary and sufficient condition for two-level and multilevel functions to be completely robustly gate-delay-fault testable. <p> On the other hand, path sensitization algorithms like those described in [23] use a 5-valued logic to efficiently generate robust tests directly from a multilevel circuit. 6.4 Synthesis Considerations The restructuring of logic equations in multilevel logic optimizers like MIS <ref> [2] </ref> is performed using techniques such as cube extraction, kernel extraction and algebraic resubstitution. If a circuit C 0 is created from a circuit C by repeated application of these restructuring operations, then we call C 0 an algebraic factorization of C. The following definitions have been taken from [14]. <p> Unconstrained multilevel optimization implies that the initial two-level network was multiple-output minimized and Boolean factorization was used during logic optimization. Algebraic factorization was used on the circuits produced by the single-output minimization (Table 2). A modified version of the program mis <ref> [2] </ref> was used in both cases. As can be seen, the literal counts are comparable, but significantly higher testabilities can be achieved via 27 algebraic factorization. In several cases, the use of Boolean factorization in a heuristic logic optim-ization strategy adversely affects literal counts.
Reference: [3] <author> M. A. Breuer and A. D. Friedman. </author> <title> Diagnosis and Reliable Design of Digital Systems. </title> <publisher> Computer Science Press, </publisher> <year> 1976. </year>
Reference-contexts: Similarly if a single fault is stuck-at-0 untestable then the edge (net) in the circuit associated with that fault can be replaced by a constant 0. For a fuller treatment of testing terminology, see <ref> [3] </ref> [11]. 3.3 Timing/Delay Testing In this section we introduce terminology that will allow us to discuss timing issues as well as fault models for temporal behavior. We will introduce a number of terms, but hopefully the resultant clarity regarding the concepts will be worth the price.
Reference: [4] <author> G. L. Craig. </author> <title> Stuck-Open Fault Testability in Combinational Networks. </title> <type> In Ph.D thesis, </type> <institution> University of Wisconsin at Madison, </institution> <year> 1987. </year>
Reference-contexts: Preliminary experimental results are presented in Section 8. 2 Related Work Because of the sense of growing importance of delay-fault testing there has been a great deal of recent research activity on the delay-fault model and we will only discuss that work that directly relates to synthesis procedures. In <ref> [4] </ref> conditions for robust testing in the stuck-open fault model are examined and circuit transformations that enhance testability in that model are given. A synthesis procedure for ensuring multifault testability is given in [14]. <p> However, Touati and Watanabe [32] have given a two-level circuit that is prime and irredundant which contains a prime whose only relatively essential vertex is, in fact, distance-2 from the OF F -set. This same function is given as Figure 2-4 in <ref> [4] </ref>. Thus, as was the case for robust path-delay-fault testability modified covering strategies that satisfy necessary conditions for gate-delay-fault testability are required. <p> Additional thanks are due to Sudhakar Reddy for pointing us to the work described in <ref> [4] </ref>. This work was supported in part by the Defense Advanced Research Projects Agency under contract N00014-87-K-0825.
Reference: [5] <author> S. Devadas and K. Keutzer. </author> <title> Boolean Minimization and Algebraic Factorization Procedures for Fully Testable Sequential Machines. </title> <booktitle> In Proceedings of the Int'l Conference on Computer-Aided Design, </booktitle> <pages> pages 208-211, </pages> <month> November </month> <year> 1989. </year>
Reference-contexts: As is shown in [14], if a combinational circuit is multifault testable then this property is retained through unconstrained algebraic factorization. But, if the property of the initial circuit is weaker, such as the sequential single-stuck-at-fault testability, then a constrained algebraic factorization procedure is required <ref> [5] </ref> [8]. Consider the two-level circuit shown in Figure 2 (a). All four gates are robustly testable for gate delay faults. However, when the algebraic factor ab is extracted from the cube abc, the circuit is no longer robustly gate-delay-fault testable.
Reference: [6] <author> S. Devadas and K. Keutzer. </author> <title> Necessary and Sufficient Conditions for Robust Delay-Fault Testability of Logic Circuits. </title> <booktitle> In Sixth MIT Conference on Advanced Research on VLSI, </booktitle> <pages> pages 221-238, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: A heuristic procedure targeting the removal of reconvergent fanout structures to enhance path-delay-fault testability was given in [29] and a more deterministic procedure for removing untestable path-delay-faults was presented in [27]. Preliminary versions of this work were presented in [10] and in <ref> [6] </ref>. A similar line of work was independently pursued in [26] where necessary and sufficient conditions for general robust path-delay-fault testability are derived. Using these derived conditions an extended algebraic factorization procedure is shown to retain general robust path-delay-fault testability.
Reference: [7] <author> S. Devadas and K. Keutzer. </author> <title> Synthesis and Optimization Procedures for Robustly Delay-Fault Testable Logic Circuits. </title> <booktitle> In Proceedings of the 27 th Design Automation Conference, </booktitle> <pages> pages 221-227, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: We therefore defer a full treatment of these to a companion paper [9] and a preliminary version of the results of that paper has been published <ref> [7] </ref>. Basic definitions are presented in Section 3. In Sections 4 and 5, we deal with path and gate-delay-fault testability of two-level circuits, respectively. Conditions for path and gate-delay-fault testability in multilevel implementations are the subject of Sections 6 and 7, respectively. <p> This same function is given as Figure 2-4 in [4]. Thus, as was the case for robust path-delay-fault testability modified covering strategies that satisfy necessary conditions for gate-delay-fault testability are required. Such a procedure is presented in <ref> [7, 9] </ref>. 13 6 Path-Delay-Fault Testable Circuits with Multilevel Logic Imple- mentations 6.1 Introduction While the results derived for two-level circuits were of interest, multilevel circuits are of much greater utility. <p> As an aside, it is interesting to note that explicit ENF computation and analysis is possible for combinational circuits of significant size. These include virtually all multilevel circuits that have been synthesized from two-level representations (c.f. Section 8). Furthermore, the synthesis methodology of <ref> [7, 9] </ref> which is based on the theory developed here, only requires ENF computation and analysis for small subcircuits. <p> The direct application of these techniques to a particular design will depend on the predominance of register bounded control structures, such as in many telecommunications circuits [16], over arithmetic structures. Techniques for the synthesis of non-flattenable regular structures, such as adders and comparators, are presented in <ref> [7] </ref>. 6.5 Conditions for Multiple-Output Functions The conditions in the previous section are easily generalized to multiple-output functions. <p> More general and efficient synthesis procedures, based on the theory presented in this paper, that can be used for significantly larger circuits have been developed <ref> [7, 9] </ref>. These procedures have been used to synthesize non-flattenable circuits, with over 5000 gates, to be completely robustly path-delay-fault testable. 9 Conclusions In this paper we gave a comprehensive theoretical framework for the analysis and synthesis of delay-fault testable combinational logic circuits.
Reference: [8] <author> S. Devadas and K. Keutzer. </author> <title> A Unified Approach to the Synthesis of Fully Testable Sequential Machines. </title> <booktitle> In IEEE Transactions on Computer-Aided Design, </booktitle> <pages> pages 39-50, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: As is shown in [14], if a combinational circuit is multifault testable then this property is retained through unconstrained algebraic factorization. But, if the property of the initial circuit is weaker, such as the sequential single-stuck-at-fault testability, then a constrained algebraic factorization procedure is required [5] <ref> [8] </ref>. Consider the two-level circuit shown in Figure 2 (a). All four gates are robustly testable for gate delay faults. However, when the algebraic factor ab is extracted from the cube abc, the circuit is no longer robustly gate-delay-fault testable. The algebraically factored circuit is shown in Figure 2 (b).
Reference: [9] <author> S. Devadas and K. Keutzer. </author> <title> Synthesis of Robust Delay-fault Testable Circuits: </title> <journal> Practice. </journal> <volume> 11 </volume> <pages> 277-300, </pages> <month> March </month> <year> 1992. </year> <month> 29 </month>
Reference-contexts: We therefore defer a full treatment of these to a companion paper <ref> [9] </ref> and a preliminary version of the results of that paper has been published [7]. Basic definitions are presented in Section 3. In Sections 4 and 5, we deal with path and gate-delay-fault testability of two-level circuits, respectively. <p> Proof: We consider the single-output circuit corresponding to output O in C and apply Theorem 4.1 to obtain the above result. 5 Gate-Delay-Fault Testable Circuits with Two-Level Logic Imple mentations 5.1 Introduction There exist Boolean functions for which no two-level circuit implementation is robustly delay-fault testable <ref> [9] </ref>. Gate-delay-fault testability represents an alternative testability criterion for such functions. <p> This same function is given as Figure 2-4 in [4]. Thus, as was the case for robust path-delay-fault testability modified covering strategies that satisfy necessary conditions for gate-delay-fault testability are required. Such a procedure is presented in <ref> [7, 9] </ref>. 13 6 Path-Delay-Fault Testable Circuits with Multilevel Logic Imple- mentations 6.1 Introduction While the results derived for two-level circuits were of interest, multilevel circuits are of much greater utility. <p> As an aside, it is interesting to note that explicit ENF computation and analysis is possible for combinational circuits of significant size. These include virtually all multilevel circuits that have been synthesized from two-level representations (c.f. Section 8). Furthermore, the synthesis methodology of <ref> [7, 9] </ref> which is based on the theory developed here, only requires ENF computation and analysis for small subcircuits. <p> More general and efficient synthesis procedures, based on the theory presented in this paper, that can be used for significantly larger circuits have been developed <ref> [7, 9] </ref>. These procedures have been used to synthesize non-flattenable circuits, with over 5000 gates, to be completely robustly path-delay-fault testable. 9 Conclusions In this paper we gave a comprehensive theoretical framework for the analysis and synthesis of delay-fault testable combinational logic circuits. <p> contribution to the area of delay testing and for the insights it gives into properties of combinational logic circuits, we are especially excited by the potential for practical application of these results, and we have implemented procedures for synthesizing delay-fault testable circuits based on the theory developed in this paper <ref> [9] </ref>. 10 Acknowledgements Thanks to Robert Brayton, Sharad Malik, Alex Saldanha, Sudhakar Reddy and Alberto Sangiovanni-Vincentelli for interesting discussions on logic synthesis and testability.
Reference: [10] <author> S. Devadas, K. Keutzer, and A. R. </author> <title> Newton. New Trends in Testing and Verification. </title> <booktitle> In Tutorial Notes: Int'l Conference on Computer-Aided Design, </booktitle> <month> November </month> <year> 1989. </year>
Reference-contexts: A heuristic procedure targeting the removal of reconvergent fanout structures to enhance path-delay-fault testability was given in [29] and a more deterministic procedure for removing untestable path-delay-faults was presented in [27]. Preliminary versions of this work were presented in <ref> [10] </ref> and in [6]. A similar line of work was independently pursued in [26] where necessary and sufficient conditions for general robust path-delay-fault testability are derived. Using these derived conditions an extended algebraic factorization procedure is shown to retain general robust path-delay-fault testability.
Reference: [11] <author> H. Fujiwara. </author> <title> Logic Testing and Design for Testability. </title> <publisher> MIT Press, </publisher> <address> Cambridge MA, </address> <year> 1985. </year>
Reference-contexts: Similarly if a single fault is stuck-at-0 untestable then the edge (net) in the circuit associated with that fault can be replaced by a constant 0. For a fuller treatment of testing terminology, see [3] <ref> [11] </ref>. 3.3 Timing/Delay Testing In this section we introduce terminology that will allow us to discuss timing issues as well as fault models for temporal behavior. We will introduce a number of terms, but hopefully the resultant clarity regarding the concepts will be worth the price.
Reference: [12] <author> C. T. Glover and M. R. Mercer. </author> <title> A Method of Delay Fault Test Generation. </title> <booktitle> In Proceedings of the 25 th Design Automation Conference, </booktitle> <pages> pages 90-95, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: Furthermore, most circuits are not completely robustly path delay-fault testable. Automatic test pattern generators have been proposed for both kinds of delay fault models (e.g. [22], [24], [23], [15], <ref> [12] </ref>). In order to have a high degree of confidence in delay tests, it is also valuable that the tests be valid under arbitrary delays in the circuit, and not be invalidated due to hazards (causing glitches in the output). <p> Nevertheless, when a set of test patterns for delay-fault tests is not arrived at as a by-product of the synthesis process, we suggest the use of traditional automatic test-pattern generation methods (e.g. <ref> [12, 23] </ref>) and not the use of ENF analysis for arriving at the desired test-pattern set. 6.2 Conditions for Single-Output Functions Armstrong developed the ENF to describe the conditions under which a single stuck-at fault is propagated from the input of a circuit to its outputs.
Reference: [13] <author> C. T. Glover and M. R. Mercer. </author> <title> A Deterministic Approach to Adjacency Testing for Delay Faults. </title> <booktitle> In Proceedings of the 26 th Design Automation Conference, </booktitle> <pages> pages 351-356, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: A synthesis procedure for ensuring multifault testability is given in [14]. The determination of necessary and sufficient conditions for nonrobust, adjacency gate-delay-fault testability are given in <ref> [13] </ref>, i.e. conditions for gate-delay-fault testability with the constraint that the applied vector pair differ in a single bit. The path-delay-fault model was introduced in [31] and a number of properties relating to path-delay-faults are stated there.
Reference: [14] <author> G. D. Hachtel, R. M. Jacoby, K. Keutzer, and C. R. Morrison. </author> <title> On Properties of Algebraic Transformations and the Synthesis of Multifault-Irredundant Circuits. </title> <booktitle> In IEEE Transactions on Computer-Aided Design, </booktitle> <pages> pages 313-321, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: In [4] conditions for robust testing in the stuck-open fault model are examined and circuit transformations that enhance testability in that model are given. A synthesis procedure for ensuring multifault testability is given in <ref> [14] </ref>. The determination of necessary and sufficient conditions for nonrobust, adjacency gate-delay-fault testability are given in [13], i.e. conditions for gate-delay-fault testability with the constraint that the applied vector pair differ in a single bit. <p> If a circuit C 0 is created from a circuit C by repeated application of these restructuring operations, then we call C 0 an algebraic factorization of C. The following definitions have been taken from <ref> [14] </ref>. Two cubes are syntactically equivalent iff they are identical as sets of literals. Two covers are syntactically equivalent iff they are identical as sets of cubes. <p> Then A is robustly path-delay-fault testable. Proof: The key observation is that the ENF expression for A, E A is precisely C, with the addition of tags on the literals. This property of algebraic factorizations is called syntactic identity under flattening in <ref> [14] </ref> and is described in detail there. As C is robustly path-delay-fault testable, E A obeys the sufficiency requirements of Theorem 6.1. Thus A is robustly-path-delay fault testable. For example, let C = abc+abd+abc+abd. The circuit C is robustly path-delay-fault testable. Let A = (ab + ab)(c + d). <p> However, a constrained algebraic factorization procedure is required to retain gate-delay-fault testability in a multilevel circuit. This is analogous to the situation with single-stuck-at-fault testability and multi-stuck-at-fault testability. As is shown in <ref> [14] </ref>, if a combinational circuit is multifault testable then this property is retained through unconstrained algebraic factorization. But, if the property of the initial circuit is weaker, such as the sequential single-stuck-at-fault testability, then a constrained algebraic factorization procedure is required [5] [8].
Reference: [15] <author> T. Hayashi, K. Hatayama, K. Sato, and T. Natabe. </author> <title> A Delay Test Generator for LSI Logic. </title> <booktitle> In Proceedings of the 14 th Fault Tolerant Computing Symposium, </booktitle> <pages> pages 146-149, </pages> <month> June </month> <year> 1984. </year>
Reference-contexts: Furthermore, most circuits are not completely robustly path delay-fault testable. Automatic test pattern generators have been proposed for both kinds of delay fault models (e.g. [22], [24], [23], <ref> [15] </ref>, [12]). In order to have a high degree of confidence in delay tests, it is also valuable that the tests be valid under arbitrary delays in the circuit, and not be invalidated due to hazards (causing glitches in the output).
Reference: [16] <author> K. Keutzer. </author> <title> Three Competing Design Methodologies for ASICS: Architectural Synthesis, Logic Synthesis and Module Generation. </title> <booktitle> In Proceedings of the 26 th Design Automation Conference, </booktitle> <pages> pages 308-313. </pages> <address> ACM/IEEE, </address> <month> June </month> <year> 1989. </year>
Reference-contexts: The direct application of these techniques to a particular design will depend on the predominance of register bounded control structures, such as in many telecommunications circuits <ref> [16] </ref>, over arithmetic structures. Techniques for the synthesis of non-flattenable regular structures, such as adders and comparators, are presented in [7]. 6.5 Conditions for Multiple-Output Functions The conditions in the previous section are easily generalized to multiple-output functions.
Reference: [17] <author> S. Kundu. </author> <title> Design of Multioutput CMOS Combinational Circuits for Robust Testability. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 8(11) </volume> <pages> 1222-1226, </pages> <month> November </month> <year> 1989. </year>
Reference-contexts: The existence of a vector pair &lt; v 1 ; v 2 &gt; as above was also shown to be a sufficiency condition for robustly testing pFET TSOP faults at the output gate of an irredundant two-level circuit in the proof of Lemma 2 in <ref> [17] </ref>. 4.3 Conditions for Multiple-Output Functions The conditions of the previous section can be generalized to multiple-output two-level circuits. For multiple-output circuits we have very stringent requirements because we must verify that every path from an input to an output is robustly delay-fault testable.
Reference: [18] <author> S. Kundu and S. M. Reddy. </author> <title> On the Design of Robust Testable CMOS Combinational Logic Circuits. </title> <booktitle> In Proceedings of the Fault Tolerant Computing Symposium, </booktitle> <pages> pages 220-225, </pages> <year> 1988. </year>
Reference-contexts: The path-delay-fault model was introduced in [31] and a number of properties relating to path-delay-faults are stated there. Design procedures that guarantee completely robustly path-delay-fault testable, multilevel circuits using unate decomposition techniques from two-level circuits were presented in <ref> [18, 19] </ref>. A heuristic procedure targeting the removal of reconvergent fanout structures to enhance path-delay-fault testability was given in [29] and a more deterministic procedure for removing untestable path-delay-faults was presented in [27]. Preliminary versions of this work were presented in [10] and in [6].
Reference: [19] <author> S. Kundu, S. M. Reddy, and N. K. Jha. </author> <title> On the Design of Robust Multiple Fault Testable CMOS Combinational Logic Circuits. </title> <booktitle> In Proceedings of the Int'l Conference on Computer-Aided Design, </booktitle> <pages> pages 240-243, </pages> <month> November </month> <year> 1988. </year>
Reference-contexts: The path-delay-fault model was introduced in [31] and a number of properties relating to path-delay-faults are stated there. Design procedures that guarantee completely robustly path-delay-fault testable, multilevel circuits using unate decomposition techniques from two-level circuits were presented in <ref> [18, 19] </ref>. A heuristic procedure targeting the removal of reconvergent fanout structures to enhance path-delay-fault testability was given in [29] and a more deterministic procedure for removing untestable path-delay-faults was presented in [27]. Preliminary versions of this work were presented in [10] and in [6].
Reference: [20] <author> Y. Levendel and P. R. Menon. </author> <title> Transition Faults in Combinational Circuits: Input Transition Test Generation and Fault Simulation. </title> <booktitle> In Proceedings of the 16 th Fault Tolerant Computing Symposium, </booktitle> <pages> pages 278-283, </pages> <month> June </month> <year> 1985. </year>
Reference-contexts: Physical defects in integrated circuits can sometimes degrade circuit performance without altering the logic functionality. These faults are called delay faults. There are two main delay fault models, namely, the gate-delay model <ref> [20] </ref> [34] [28] and the path-delay-model [31] [23]. Under the gate-delay model, the fault delays a transition at a single node in the circuit. Under the path-delay-model, a fault is said to have occurred if the propagation delay along a path in the circuit is greater than the specified limit. <p> Each single gate-delay-fault is assumed to be so catastrophic as to cause a delay along any path to any output <ref> [20] </ref>. In this paper we call a robust test for a gate-delay-fault a test which is valid under 7 arbitrary delays and is not invalidated by glitches, hazards or races.
Reference: [21] <author> W-N Li, S. M. Reddy, and S. Sahni. </author> <title> On Path Selection in Combinational Logic Circuits. </title> <booktitle> In IEEE Transactions on Computer-Aided Design, </booktitle> <pages> pages 56-63, </pages> <month> January </month> <year> 1989. </year> <month> 30 </month>
Reference-contexts: An obstacle to path-delay-fault testing is the potentially large vector sets required to test each path in robust manner. To address this problem a subset of paths may be chosen. These may include delay critical paths [31] or paths which cover all gates or nets in the circuit <ref> [21] </ref>. A remaining important barrier in the practical application of robust delay-fault testing is that robust testing currently requires a more expensive (non-standard) scan structure, such as that described in [24], and this means that the advantages of robust delay-fault testing must be weighed against the additional cost.
Reference: [22] <author> C. C. Liaw, S. Y. Su, and Y. K. Malaiya. </author> <title> Test Generation for Delay Faults Using the Stuck-at Fault Test Set. </title> <booktitle> In Proceedings of the Int'l Test Conference, </booktitle> <pages> pages 167-175, </pages> <month> November </month> <year> 1980. </year>
Reference-contexts: Furthermore, most circuits are not completely robustly path delay-fault testable. Automatic test pattern generators have been proposed for both kinds of delay fault models (e.g. <ref> [22] </ref>, [24], [23], [15], [12]). In order to have a high degree of confidence in delay tests, it is also valuable that the tests be valid under arbitrary delays in the circuit, and not be invalidated due to hazards (causing glitches in the output).
Reference: [23] <author> C. J. Lin and S. M. Reddy. </author> <title> On Delay Fault Testing in Logic Circuits. </title> <booktitle> In IEEE Transactions on Computer-Aided Design, </booktitle> <pages> pages 694-703, </pages> <month> September </month> <year> 1987. </year>
Reference-contexts: Physical defects in integrated circuits can sometimes degrade circuit performance without altering the logic functionality. These faults are called delay faults. There are two main delay fault models, namely, the gate-delay model [20] [34] [28] and the path-delay-model [31] <ref> [23] </ref>. Under the gate-delay model, the fault delays a transition at a single node in the circuit. Under the path-delay-model, a fault is said to have occurred if the propagation delay along a path in the circuit is greater than the specified limit. <p> Furthermore, most circuits are not completely robustly path delay-fault testable. Automatic test pattern generators have been proposed for both kinds of delay fault models (e.g. [22], [24], <ref> [23] </ref>, [15], [12]). In order to have a high degree of confidence in delay tests, it is also valuable that the tests be valid under arbitrary delays in the circuit, and not be invalidated due to hazards (causing glitches in the output). <p> While a high degree of such robust delay-fault coverage is desirable, a number of problems are associated with testing robustly in delay fault models. Due to these relatively stringent design requirements, it appears that an unacceptably large fraction of faults in circuits being designed today are not robustly testable <ref> [23] </ref>, and the primary focus of this paper is to address this problem. An obstacle to path-delay-fault testing is the potentially large vector sets required to test each path in robust manner. To address this problem a subset of paths may be chosen. <p> We then apply these notions to multilevel circuits to arrive at a similar condition for multilevel implementations. We generalize these results to multiple-output functions. Necessary and sufficient conditions for robust path-delay-fault testability were given in <ref> [23] </ref>. These conditions were motivated by the desire to develop automatic test-pattern generation procedures for robust path-delay-faults and were entirely adequate for that purpose. <p> Nevertheless, when a set of test patterns for delay-fault tests is not arrived at as a by-product of the synthesis process, we suggest the use of traditional automatic test-pattern generation methods (e.g. <ref> [12, 23] </ref>) and not the use of ENF analysis for arriving at the desired test-pattern set. 6.2 Conditions for Single-Output Functions Armstrong developed the ENF to describe the conditions under which a single stuck-at fault is propagated from the input of a circuit to its outputs. <p> The ENF of a circuit contains information about all the paths in a circuit, and hence given the ENF a two-valued logic suffices to generate a robust test for a path in an arbitrary multilevel circuit. On the other hand, path sensitization algorithms like those described in <ref> [23] </ref> use a 5-valued logic to efficiently generate robust tests directly from a multilevel circuit. 6.4 Synthesis Considerations The restructuring of logic equations in multilevel logic optimizers like MIS [2] is performed using techniques such as cube extraction, kernel extraction and algebraic resubstitution.
Reference: [24] <author> Y. K. Malaiya and R. Narayanswamy. </author> <title> Testing for Timing Failures in Synchronous Sequential Integrated Circuits. </title> <booktitle> In Proceedings of the Int'l Test Conference, </booktitle> <pages> pages 560-571, </pages> <month> October </month> <year> 1983. </year>
Reference-contexts: Furthermore, most circuits are not completely robustly path delay-fault testable. Automatic test pattern generators have been proposed for both kinds of delay fault models (e.g. [22], <ref> [24] </ref>, [23], [15], [12]). In order to have a high degree of confidence in delay tests, it is also valuable that the tests be valid under arbitrary delays in the circuit, and not be invalidated due to hazards (causing glitches in the output). <p> These may include delay critical paths [31] or paths which cover all gates or nets in the circuit [21]. A remaining important barrier in the practical application of robust delay-fault testing is that robust testing currently requires a more expensive (non-standard) scan structure, such as that described in <ref> [24] </ref>, and this means that the advantages of robust delay-fault testing must be weighed against the additional cost. Nevertheless, for many applications, quality and reliability are rising in importance and the relative importance of area, particularly in pad-limited designs, is decreasing.
Reference: [25] <author> E. J. McCluskey. </author> <title> Transients in Combinational Logic Circuits. </title> <editor> In R. H. Willson and W. C. Mann, editors, </editor> <booktitle> Redundancy Techniques for Computing Systems, </booktitle> <pages> pages 9-46. </pages> <publisher> Spartan Books, </publisher> <year> 1962. </year>
Reference-contexts: Similar representations were used in [33] for the analysis of hazards in asynchronous circuits and in <ref> [25] </ref> for the analysis of transients in circuits. We will define ENF more formally below.
Reference: [26] <author> A. Pramanick and S. Reddy. </author> <title> On The Design of Path Delay Fault Testable Combinational Circuits. </title> <booktitle> In Proceedings of the 20 th Fault Tolerant Computing Symposium, </booktitle> <pages> pages 374-381, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: Preliminary versions of this work were presented in [10] and in [6]. A similar line of work was independently pursued in <ref> [26] </ref> where necessary and sufficient conditions for general robust path-delay-fault testability are derived. Using these derived conditions an extended algebraic factorization procedure is shown to retain general robust path-delay-fault testability. <p> Such tests were called restricted delay test pairs in [30] and single-path propagation hazard-free robust tests in <ref> [26] </ref>. In the latter reference a complete taxonomy of path-delay-fault tests are given. Because we will only be dealing only with robust path-delay-faults we use this abbreviated term without ambiguity.
Reference: [27] <author> A. Pramanick, S. Reddy, and S. Sengupta. </author> <title> Synthesis of Combinational Logic Circuits for Path Delay Fault Testability. </title> <booktitle> In Int'l Symposium on Circuits and Systems, </booktitle> <pages> pages 3105-3108, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: A heuristic procedure targeting the removal of reconvergent fanout structures to enhance path-delay-fault testability was given in [29] and a more deterministic procedure for removing untestable path-delay-faults was presented in <ref> [27] </ref>. Preliminary versions of this work were presented in [10] and in [6]. A similar line of work was independently pursued in [26] where necessary and sufficient conditions for general robust path-delay-fault testability are derived.
Reference: [28] <author> J. Rajski and H. Cox. </author> <title> A Method of Test Generation and Fault Diagnosis in Very Large Circuits. </title> <booktitle> In Proceedings of the Int'l Test Conference, </booktitle> <pages> pages 932-943, </pages> <month> September </month> <year> 1987. </year>
Reference-contexts: Physical defects in integrated circuits can sometimes degrade circuit performance without altering the logic functionality. These faults are called delay faults. There are two main delay fault models, namely, the gate-delay model [20] [34] <ref> [28] </ref> and the path-delay-model [31] [23]. Under the gate-delay model, the fault delays a transition at a single node in the circuit. Under the path-delay-model, a fault is said to have occurred if the propagation delay along a path in the circuit is greater than the specified limit.
Reference: [29] <author> K. Roy, K. De, J. A. Abraham, and S. Lusky. </author> <title> Synthesis of Delay Fault Testable Combinational Logic. </title> <booktitle> In Proceedings of the Int'l Conference on Computer-Aided Design, </booktitle> <pages> pages 418-421, </pages> <month> November </month> <year> 1989. </year>
Reference-contexts: Design procedures that guarantee completely robustly path-delay-fault testable, multilevel circuits using unate decomposition techniques from two-level circuits were presented in [18, 19]. A heuristic procedure targeting the removal of reconvergent fanout structures to enhance path-delay-fault testability was given in <ref> [29] </ref> and a more deterministic procedure for removing untestable path-delay-faults was presented in [27]. Preliminary versions of this work were presented in [10] and in [6]. A similar line of work was independently pursued in [26] where necessary and sufficient conditions for general robust path-delay-fault testability are derived.
Reference: [30] <author> J. Savir and W. H. Anney. </author> <title> Random Pattern Testability of Delay Faults. </title> <booktitle> In Proceedings of the International Test Conference, </booktitle> <pages> pages 263-273, </pages> <month> October </month> <year> 1986. </year>
Reference-contexts: In this paper we call a robust test for a path-delay-fault on a path , a test which single event sensitizes and is therefore valid under arbitrary delays and is not invalidated by glitches, hazards or races. Such tests were called restricted delay test pairs in <ref> [30] </ref> and single-path propagation hazard-free robust tests in [26]. In the latter reference a complete taxonomy of path-delay-fault tests are given. Because we will only be dealing only with robust path-delay-faults we use this abbreviated term without ambiguity.
Reference: [31] <author> G. L. Smith. </author> <title> A Model for Delay Faults Based on Paths. </title> <booktitle> In Proceedings of the Int'l Test Conference, </booktitle> <pages> pages 342-349, </pages> <month> September </month> <year> 1985. </year>
Reference-contexts: Physical defects in integrated circuits can sometimes degrade circuit performance without altering the logic functionality. These faults are called delay faults. There are two main delay fault models, namely, the gate-delay model [20] [34] [28] and the path-delay-model <ref> [31] </ref> [23]. Under the gate-delay model, the fault delays a transition at a single node in the circuit. Under the path-delay-model, a fault is said to have occurred if the propagation delay along a path in the circuit is greater than the specified limit. <p> An obstacle to path-delay-fault testing is the potentially large vector sets required to test each path in robust manner. To address this problem a subset of paths may be chosen. These may include delay critical paths <ref> [31] </ref> or paths which cover all gates or nets in the circuit [21]. <p> The determination of necessary and sufficient conditions for nonrobust, adjacency gate-delay-fault testability are given in [13], i.e. conditions for gate-delay-fault testability with the constraint that the applied vector pair differ in a single bit. The path-delay-fault model was introduced in <ref> [31] </ref> and a number of properties relating to path-delay-faults are stated there. Design procedures that guarantee completely robustly path-delay-fault testable, multilevel circuits using unate decomposition techniques from two-level circuits were presented in [18, 19]. <p> A circuit has a path-delay-fault iff there exists a path from a primary input to a primary output via a set of gates and nets such that a primary input event is slow to propagate along the path to the primary output <ref> [31] </ref>. In this paper we call a robust test for a path-delay-fault on a path , a test which single event sensitizes and is therefore valid under arbitrary delays and is not invalidated by glitches, hazards or races. <p> To accomplish this all other side-inputs along must have the same values on both v 1 and v 2 . One thing that will help ensure this is that we will only change the value of a single variable in &lt; v 1 ; v 2 &gt; <ref> [31] </ref>. But simply changing only one variable will not be sufficient: One particular type of cube in the ENF requires special attention. In the cube a f1;4;6;8;9g d f3;4;6;8;9g d f7;8;9g in the ENF expression M , the literal d appears twice.
Reference: [32] <author> H. Touati and Y. Watanabe. </author> <type> personal communication, </type> <year> 1989. </year>
Reference-contexts: This would imply that each prime in the cover contains an relatively essential vertex that is distance-1 from the OF F -set. However, Touati and Watanabe <ref> [32] </ref> have given a two-level circuit that is prime and irredundant which contains a prime whose only relatively essential vertex is, in fact, distance-2 from the OF F -set. This same function is given as Figure 2-4 in [4].
Reference: [33] <author> S. H. Unger. </author> <title> Asynchronous Sequential Switching Circuits. </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1969. </year> <month> 31 </month>
Reference-contexts: Similar representations were used in <ref> [33] </ref> for the analysis of hazards in asynchronous circuits and in [25] for the analysis of transients in circuits. We will define ENF more formally below.

References-found: 33

