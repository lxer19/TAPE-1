URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/Web/People/ph/flat.ps.gz
Refering-URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/Web/People/ph/index.html
Root-URL: 
Title: Radiosity in Flatland  
Author: Paul S. Heckbert 
Keyword: integral equation, adaptive mesh, finite element method, discontinuity, shadow, global illumination, diffuse interreflection, thermal radiation.  
Address: Julianalaan 132, 2628 BL Delft, Netherlands  
Affiliation: Department of Technical Mathematics Informatics, Delft University of Technology,  
Abstract: The radiosity method for the simulation of interreflection of light between diffuse surfaces is such a common image synthesis technique that its derivation is worthy of study. We here examine the radios-ity method in a two dimensional, flatland world. It is shown that the radiosity method is a simple finite element method for the solution of the integral equation governing global illumination. These two-dimensional studies help explain the radiosity method in general and suggest a number of improvements to existing algorithms. In particular, radiosity solutions can be improved using a priori discontinuity meshing, placing mesh boundaries on discontinuities such as shadow edges. When discontinuity meshing is used along with piecewise-linear approximations instead of the current piecewise-constant approximations, the accuracy of radiosity simulations can be greatly increased. 
Abstract-found: 1
Intro-found: 1
Reference: [Baum et al. 91] <author> Daniel R. Baum, Stephen Mann, Kevin P. Smith, and James M. Winget. </author> <title> Making radiosity usable: Automatic preprocessing and meshing techniques for the generation of accurate radiosity solutions. </title> <booktitle> Computer Graphics (SIGGRAPH '91 Proceedings), </booktitle> <volume> 25(4) </volume> <pages> 51-60, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: Meshing Early research in radiosity focused on the computation of form factors and efficient solution of the system of equations, but the issue of meshing or discretization of surfaces was little discussed; until recently it has remained a black art and a manual process for the most part <ref> [Baum et al. 91] </ref>. 8 (dots are element nodes). Right: Mesh resolves discontinuity. caused by the critical line through endpoints p and q. Discontinuity meshing is an approach to meshing that attempts to accurately resolve the most significant discontinuities in the solution by optimal positioning of element boundaries.
Reference: [Becker et al. 81] <author> Eric B. Becker, Graham F. Cary, and J. Tinsley Oden. </author> <title> Finite Elements: An Introduction, volume 1. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1981. </year>
Reference-contexts: The simplest basis functions are the box and hat (triangle) functions, which give rise to piecewise constant and piecewise linear approximations, respectively. The pieces of the approximation are respectively called constant elements and linear elements. Such approximations are the foundation of the finite element method <ref> [Becker et al. 81] </ref>. Of course, it is an approximation to assume that a function in this function space will solve the integral equation.
Reference: [Campbell91] <author> A. T. Campbell, III. </author> <title> Modeling Global Diffuse Illumination for Image Synthesis. </title> <type> PhD thesis, </type> <institution> CS Dept, University of Texas at Austin, </institution> <month> Dec. </month> <year> 1991. </year> <note> Tech. Report TR-91-39. </note>
Reference: [Campbell-Fussell90] <author> A. T. Campbell, III and Donald S. Fussell. </author> <title> Adaptive mesh generation for global diffuse illumination. </title> <booktitle> Computer Graphics (SIGGRAPH '90 Proceedings), </booktitle> <volume> 24(4) </volume> <pages> 155-164, </pages> <month> Aug. </month> <year> 1990. </year>
Reference: [Cohen et al. 86] <author> Michael F. Cohen, Donald P. Greenberg, David S. Immel, and Philip J. Brock. </author> <title> An efficient radiosity approach for realistic image synthesis. </title> <journal> IEEE Computer Graphics and Applications, </journal> <pages> pages 26-35, </pages> <month> Mar. </month> <year> 1986. </year>
Reference-contexts: The simplest radiosity methods perform meshing, the subdivision of surfaces into elements, in a simple, uniform manner, but this results in jaggy shadow boundaries and other artifacts. Better meshes can be created by user intervention, by a posteriori methods that refine the mesh after solution <ref> [Cohen et al. 86] </ref>, or by a priori techniques that create the mesh before solution [Campbell-Fussell90,Baum et al. 91,Heckbert-Winget91,Heckbert91,Lischinski et al. 91,Campbell91].
Reference: [Cohen et al. 88] <author> Michael F. Cohen, Shenchang Eric Chen, John R. Wallace, and Donald P. Greenberg. </author> <title> A progressive refinement approach to fast radiosity image generation. </title> <booktitle> Computer Graphics (SIGGRAPH '88 Proceedings), </booktitle> <volume> 22(4) </volume> <pages> 75-84, </pages> <month> Aug. </month> <year> 1988. </year>
Reference-contexts: This does not seem to be possible in 3-D. In the radiosity method, the system of equations is usually solved either by constructing the matrices explicitly and solving with Gauss-Seidel iteration [Golub-Van Loan89], or with the progressive radiosity algorithm that interleaves form factor computation and system solving steps <ref> [Cohen et al. 88] </ref>. The latter method can be viewed as an iterative method for solving linear systems that computes one column of the matrix at a time. matrices.
Reference: [Cohen-Greenberg85] <author> Michael F. Cohen and Donald P. Greenberg. </author> <title> The hemi-cube: A radiosity solution for complex environments. </title> <booktitle> Computer Graphics (SIGGRAPH '85 Proceedings), </booktitle> <volume> 19(3) </volume> <pages> 31-40, </pages> <month> July </month> <year> 1985. </year>
Reference-contexts: This is the same system of equations as is used in the radiosity method, where A = I K. In radiosity programs, form factors are typically computed using a hemicube <ref> [Cohen-Greenberg85] </ref> or ray tracing [Wallace et al. 89]. These can be viewed as numerical methods for approximating the integrals in (1), using visible surface algorithms from computer graphics to point-sample the visibility function v. In flatland, it is possible to compute form factors analytically [Heckbert91].
Reference: [Delves-Mohamed85] <author> L. M. Delves and J. L. Mohamed. </author> <title> Computational methods for integral equations. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, U.K., </address> <year> 1985. </year>
Reference-contexts: This Neumann series converges if the norm of the integral operator is less than 1 <ref> [Delves-Mohamed85] </ref>. Integral Equation for Radiosity in Flatland, Part 2 We can now apply integral equation techniques to the understanding of radiosity. <p> options: one much choose a mesh and basis functions, constraint and integration methods to reduce the problem to a linear system of equations, a system solution method, and reconstruction technique. 6 Numerical Solution of Integral Equations The collocation method is one of the simplest numerical techniques for solving integral equations <ref> [Delves-Mohamed85] </ref>. First, the exact solution b (s) is approximated by a linear combination of basis functions: ^ b (s) = i=1 where b i are the unknown coefficients and W i are the chosen basis functions.
Reference: [Edelsbrunner et al. 83] <author> Herbert Edelsbrunner, Mark H. Overmars, and Derick Wood. </author> <title> Graphics in flatland: A case study. </title> <booktitle> Advances in Computing Research, </booktitle> <volume> 1 </volume> <pages> 35-59, </pages> <year> 1983. </year>
Reference-contexts: The above algorithm, implemented straightforwardly, has O (m 3 ) time cost. Alternatively, visibility can be determined by applying an O (m log m) radial sweepline perspective visibility 9 algorithm <ref> [Edelsbrunner et al. 83] </ref> at both endpoints of each edge, yielding an O (m 2 log m) algorithm. Implementation A program has been implemented to simulate radiosity in flatland which allows a choice of element degree and meshing technique.
Reference: [Foley et al. 90] <author> James D. Foley, Andries van Dam, Steven K. Feiner, and John F. Hughes. </author> <title> Computer Graphics: </title> <booktitle> Principles and Practice, 2nd ed. </booktitle> <publisher> Addison-Wesley, </publisher> <address> Reading MA, </address> <year> 1990. </year>
Reference-contexts: In other words, the Gouraud approximation is computed as a post-process to the piecewise-constant approximation, by interpolation and extrapolation between neighboring elements. We call them Gouraud elements by analogy with the computer graphics shading technique <ref> [Foley et al. 90] </ref>. Gouraud elements are the most commonly used approximation technique in existing radiosity algorithms. To measure error objectively, we use the following error norm.
Reference: [Golub-Van Loan89] <author> Gene H. Golub and Charles F. Van Loan. </author> <title> Matrix Computations. </title> <publisher> Johns Hopkins University Press, </publisher> <address> Baltimore, MD, </address> <year> 1989. </year>
Reference-contexts: In flatland, it is possible to compute form factors analytically [Heckbert91]. This does not seem to be possible in 3-D. In the radiosity method, the system of equations is usually solved either by constructing the matrices explicitly and solving with Gauss-Seidel iteration <ref> [Golub-Van Loan89] </ref>, or with the progressive radiosity algorithm that interleaves form factor computation and system solving steps [Cohen et al. 88]. The latter method can be viewed as an iterative method for solving linear systems that computes one column of the matrix at a time. matrices.
Reference: [Goral et al. 84] <author> Cindy M. Goral, Kenneth E. Torrance, Donald P. Greenberg, and Bennett Battaile. </author> <title> Modeling the interaction of light between diffuse surfaces. </title> <booktitle> Computer Graphics (SIGGRAPH '84 Proceedings), </booktitle> <volume> 18(3) </volume> <pages> 213-222, </pages> <month> July </month> <year> 1984. </year>
Reference: [Hanrahan et al. 91] <author> Pat Hanrahan, David Salzman, and Larry Aupperle. </author> <title> A rapid hierarchical radiosity algorithm. </title> <booktitle> Computer Graphics (SIGGRAPH '91 Proceedings), </booktitle> <volume> 25(4) </volume> <pages> 197-206, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: Another improvement is to vary the mesh resolution according to the range of the interaction: nearby elements need a fine mesh but a coarse mesh suffices for distant elements <ref> [Hanrahan et al. 91] </ref>.
Reference: [Heckbert91] <author> Paul S. Heckbert. </author> <title> Simulating Global Illumination Using Adaptive Meshing. </title> <type> PhD thesis, </type> <institution> CS Division, UC Berkeley, </institution> <month> June </month> <year> 1991. </year> <type> Tech. Report UCB/CSD 91/636. </type>
Reference-contexts: If there are no occlusions in a scene then there are no discontinuities due to changes in visibility. It can easily be proven that an upper bound on the number of discontinuities of degree i in a scene of m edges is (2m) i+1 <ref> [Heckbert91] </ref>. In practice, the number is usually far smaller than this upper bound because of parallel edges and occlusion. One consequence of the above is that the total number of discontinuities of various degrees in the radiosity function can be infinite. <p> These can be viewed as numerical methods for approximating the integrals in (1), using visible surface algorithms from computer graphics to point-sample the visibility function v. In flatland, it is possible to compute form factors analytically <ref> [Heckbert91] </ref>. This does not seem to be possible in 3-D. <p> To simulate colors, samples at red, green, and blue wavelengths are used. The systems of linear equations are solved independently for each band. The program solves for radiosities using a collocation formulation with analytic form factors (no numerical integration) and either constant or linear elements <ref> [Heckbert91] </ref>. Either uniform (equispaced) or discontinuity meshing can be used. The latter places element nodes at all D 1 critical points and then creates a uniform mesh inbetween. Critical points on the m edges are found with the O (m 3 ) ray tracing algorithm described above.
Reference: [Heckbert92] <author> Paul S. Heckbert. </author> <title> Discontinuity meshing for radiosity. </title> <editor> In Alan Chalmers and Derek Paddon, editors, </editor> <booktitle> Third Eurographics Workshop on Rendering, </booktitle> <pages> pages 203-216, </pages> <address> Bristol, UK, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: With this discontinuity meshing, mesh boundaries are placed on significant discontinuities. Using linear elements and discontinuity meshing, one experiment in flatland achieved a 60-fold reduction in CPU time and memory use relative to standard methods. The discontinuity meshing ideas developed here have recently been generalized to 3-D scenes <ref> [Heckbert92] </ref>. This research has suggested a number of ideas for future research: one would like to find the combination of approximations and algorithms that gives the most accurate final result in the least time.
Reference: [Heckbert-Winget91] <author> Paul S. Heckbert and James M. Winget. </author> <title> Finite element methods for global illumination. </title> <type> Technical report, </type> <institution> CS Division, UC Berkeley, </institution> <month> July </month> <year> 1991. </year> <note> UCB/CSD 91/643. </note>
Reference-contexts: Now that we have examined some of the properties of radiosity functions, we turn to approximation algorithms. 3 Algorithms for Radiosity in Flatland There are a variety of finite element methods for solving the integral equation governing radiosity <ref> [Heckbert-Winget91] </ref>.
Reference: [Jerri85] <author> Abdul J. Jerri. </author> <title> Introduction to Integral Equations with Applications. </title> <publisher> Dekker, </publisher> <address> New York, </address> <year> 1985. </year>
Reference: [Kajiya86] <author> James T. Kajiya. </author> <title> The rendering equation. </title> <booktitle> Computer Graphics (SIGGRAPH '86 Proceedings), </booktitle> <volume> 20(4) </volume> <pages> 143-150, </pages> <month> Aug. </month> <year> 1986. </year>
Reference-contexts: Ray tracing simulates light transport by tracing the paths of photons through the scene in one of two directions: either from the lights into the scene or from the eye into the scene. With the addition of Monte Carlo techniques, it is possible to simulate diffuse interreflection <ref> [Kajiya86] </ref>. Radiosity methods were first developed for the simulation of thermal radiation in mechanical engineering [Sparrow63], and were later extended and optimized for the simulation of complex scenes in computer graphics [Goral et al. 84,Nishita-Nakamae85,Cohen-Greenberg85,Cohen et al. 88]. <p> + h (s) 0 o v b (s 0 ) Integral equations similar to this have appeared in the thermal radiation literature [ Ozisik73], in computer vision [Koenderink-van Doorn83], where it has been called the mutual illumination equation, and in computer graphics, where it has been called the rendering equation <ref> [Kajiya86] </ref>. We digress briefly to discuss integral equations in general. 4 Integral Equations Integral equations are analogous to differential equations except that they involve integrals of functions instead of derivatives. <p> The Neumann series here has a simple physical interpretation: the ith term (K i e)(s) is the light that reaches the point s after exactly i `hops' <ref> [Kajiya86] </ref>. The ith partial sum of the Neumann series b (i) = e + Ke + K 2 e + + K i e is the light that reaches point s in i hops or fewer.
Reference: [Koenderink-van Doorn83] <author> J. J. Koenderink and A. J. van Doorn. </author> <title> Geometrical modes as a general method to treat diffuse interreflections in radiometry. </title> <journal> J. Opt. Soc. Am., </journal> <volume> 73(6) </volume> <pages> 843-850, </pages> <month> June </month> <year> 1983. </year>
Reference-contexts: scene, so the interreflection in diffuse, opaque, flatland scenes is described by the following integral equation [ Ozisik73,Heckbert91]: b (s) = e (s) + h (s) 0 o v b (s 0 ) Integral equations similar to this have appeared in the thermal radiation literature [ Ozisik73], in computer vision <ref> [Koenderink-van Doorn83] </ref>, where it has been called the mutual illumination equation, and in computer graphics, where it has been called the rendering equation [Kajiya86].
Reference: [Lischinski et al. 91] <author> Dani Lischinski, Filippo Tampieri, and Donald P. Greenberg. </author> <title> Improving sampling and reconstruction techniques for radiosity. </title> <type> Technical report, </type> <institution> CS Dept., Cornell U., </institution> <month> Aug. </month> <year> 1991. </year> <type> TR 91-1202. </type>
Reference: [Nishita-Nakamae85] <author> Tomoyuki Nishita and Eihachiro Nakamae. </author> <title> Continuous tone representation of 3-D objects taking account of shadows and interreflection. </title> <booktitle> Computer Graphics (SIGGRAPH '85 Proceedings), </booktitle> <volume> 19(3) </volume> <pages> 23-30, </pages> <month> July </month> <year> 1985. </year> <month> 13 </month>
Reference: [ Ozisik73] <author> Necati M. Ozisik. </author> <title> Radiative Transfer and Interactions with Conduction and Convection. </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1973. </year>
Reference-contexts: the other edges in the scene, so the interreflection in diffuse, opaque, flatland scenes is described by the following integral equation [ Ozisik73,Heckbert91]: b (s) = e (s) + h (s) 0 o v b (s 0 ) Integral equations similar to this have appeared in the thermal radiation literature <ref> [ Ozisik73] </ref>, in computer vision [Koenderink-van Doorn83], where it has been called the mutual illumination equation, and in computer graphics, where it has been called the rendering equation [Kajiya86].
Reference: [Preparata-Shamos85] <author> Franco Preparata and Michael I. Shamos. </author> <title> Computational Geometry. </title> <publisher> Springer Verlag, </publisher> <year> 1985. </year>
Reference-contexts: The most important discontinuities to resolve are D 0 . D 0 discontinuities come from intersecting edges or from the projection of silhouette points from point light sources. Intersecting edges can be found in O (m log m) time, <ref> [Preparata-Shamos85] </ref>. These intersection points are marked as D 0 critical points (points at which a D 0 discontinuity could occur). If constant elements are being used, then only D 0 discontinuities need be found, and we can stop here.
Reference: [Sparrow63] <author> Ephraim M. </author> <title> Sparrow. On the calculation of radiant interchange between surfaces. </title> <editor> In Warren Ibele, editor, </editor> <booktitle> Modern Developments in Heat Transfer, </booktitle> <address> New York, 1963. </address> <publisher> Academic Press. </publisher>
Reference-contexts: With the addition of Monte Carlo techniques, it is possible to simulate diffuse interreflection [Kajiya86]. Radiosity methods were first developed for the simulation of thermal radiation in mechanical engineering <ref> [Sparrow63] </ref>, and were later extended and optimized for the simulation of complex scenes in computer graphics [Goral et al. 84,Nishita-Nakamae85,Cohen-Greenberg85,Cohen et al. 88].
Reference: [Tampieri-Lischinski91] <author> Filippo Tampieri and Dani Lischinski. </author> <title> The constant radiosity assumption syndrome. </title> <booktitle> In Second Eurographics Workshop on Rendering, </booktitle> <address> Barcelona, Spain, </address> <month> May </month> <year> 1991. </year>
Reference-contexts: Radiosity as an Approximation Method The radiosity algorithm, as it is used in the computer graphics field, can be derived and explained quite clearly in the context of these numerical methods. The radiosity method typically assumes, for the interreflection simulation, that each polygonal element has a constant radiosity <ref> [Tampieri-Lischinski91] </ref>. This corresponds to a mesh with constant elements.
Reference: [Wallace et al. 89] <author> John R. Wallace, Kells A. Elmquist, and Eric A. Haines. </author> <title> A ray tracing algorithm for progressive radiosity. </title> <booktitle> Computer Graphics (SIGGRAPH '89 Proceedings), </booktitle> <volume> 23(3) </volume> <pages> 315-324, </pages> <month> July </month> <year> 1989. </year> <title> 14 at bottom. Scene consists of a white emitter (at left), a brown reflector (at bottom) and a polygonal reflector with one red edge, one green edge, and all other edges white. Note color bleeding along the edge between the red and green neighbors. Graphs show red, green, and blue radiosity as a function of arc length along counterclockwise traversal of polygons. </title>
Reference-contexts: This is the same system of equations as is used in the radiosity method, where A = I K. In radiosity programs, form factors are typically computed using a hemicube [Cohen-Greenberg85] or ray tracing <ref> [Wallace et al. 89] </ref>. These can be viewed as numerical methods for approximating the integrals in (1), using visible surface algorithms from computer graphics to point-sample the visibility function v. In flatland, it is possible to compute form factors analytically [Heckbert91]. This does not seem to be possible in 3-D.
References-found: 26

