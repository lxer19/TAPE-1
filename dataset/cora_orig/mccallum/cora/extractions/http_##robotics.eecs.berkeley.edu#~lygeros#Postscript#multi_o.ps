URL: http://robotics.eecs.berkeley.edu/~lygeros/Postscript/multi_o.ps
Refering-URL: http://robotics.eecs.berkeley.edu/~lygeros/Publications/multi_objective.html
Root-URL: 
Email: lygeros, clairet, sastry@eecs.berkeley.edu  
Title: Multiobjective Hybrid Controller Synthesis  
Author: John Lygeros, Claire Tomlin and Shankar Sastry 
Address: Berkeley, CA 94720  
Affiliation: Intelligent Machines and Robotics Laboratory University of California, Berkeley  
Abstract: The problem of systematically synthesizing hybrid controllers that satisfy multiple requirements is considered. We present a technique, based on the principles of optimal control, for determining the class of least restrictive controllers that satisfy the most important requirement (which we refer to as safety). The system performance with respect to the lower priority requirement (which we refer to as efficiency) can then be optimized within this class. We motivate our approach by three examples, one purely discrete (the problem of reachability in finite automata) one hybrid (the steam boiler problem) and one primarily continuous (a flight vehicle management system).
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> J. Lygeros, </author> <title> Hierarchical Hybrid Control of Large Scale Systems. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering, University of California, Berkeley, </institution> <year> 1996. </year>
Reference-contexts: The resulting controller will typically be hybrid (even if the plant dynamics are purely continuous) as it involves switching between the safe and efficient controllers. Our analysis is based on the hybrid system model introduced in <ref> [1] </ref>, which is outlined in Section 2. The theoretical framework (presented in Section 3) is motivated by three examples. The first is purely discrete and involves the control of finite automata. The second is the well known steam boiler benchmark problem [2]. <p> Output Evolution: for all t 2 t , y (t) = h (q (t); x (t); u (t)). It can be shown <ref> [1] </ref> that the definitions introduced here are rich enough to model continuous dynamical systems, finite state systems, rectangular automata, autonomous jumps, controlled jumps, etc. <p> Note that the set E summarizes the information contained in the invariants, the transition guards and the transition reset relations that appear in the hybrid models of [3, 4, 5]. A number of operations can be defined on hybrid dynamical systems <ref> [1] </ref>. Here we restrict our attention to just one, called interconnection, which allows us to form new hybrid systems out of collections of existing ones.
Reference: 2. <author> T. A. Henzinger and H. Wong-Toi, </author> <title> "Using HyTech to synthesize control parameters for a steam boiler," in Formal Methods for Industrial Applications: Specifying and Programming the Steam Boiler Control, </title> <publisher> LNCS, Springer Verlag, </publisher> <year> 1996. </year>
Reference-contexts: The theoretical framework (presented in Section 3) is motivated by three examples. The first is purely discrete and involves the control of finite automata. The second is the well known steam boiler benchmark problem <ref> [2] </ref>. This is a hybrid problem in that a continuous process (the level of water in the boiler) is to be controlled using discrete controls (pumps being switched on and off). <p> In this special case the * construction is not necessary. 5 The Steam Boiler Our analysis of the steam boiler problem is based on the description of <ref> [2] </ref>, which is simpler than the original specification of [11] in that the effect of faults on the system is not considered. The steam boiler consists of a tank containing water and a heating element that causes the water to boil and escape as steam. <p> The requirement is that the water level remains between two values M 1 and M 2 . We will use three hybrid automata to describe the system, one for the boiler and one for each of the pumps. The specification of <ref> [2] </ref> also includes a valve that, together with the pumps, can be used to bring the water level to a desirable initial condition before the heating element is turned on and the boiling starts. <p> The physical properties of the boiler impose the bounds r (t) 2 [0; W ] and d (t) 2 [U 2 ; U 1 ] for all t. Following <ref> [2] </ref> the dynamics are given by: f B (x B ; u B ) = _p 1 + _p 2 r [ u B 2 U B Note that the set E does not allow any discrete jumps of the state.
Reference: 3. <author> R. Alur, C. Courcoubetis, T. A. Henzinger, and P. H. Ho, </author> <title> "Hybrid automaton: An algorithmic approach to the specification and verification of hybrid systems," in Hybrid System, no. </title> <booktitle> 736 in LNCS, </booktitle> <pages> pp. 209-229, </pages> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Hybrid automata are convenient abstractions of systems with phased operation and they appear extensively in the literature <ref> [3, 4, 5, 6] </ref>. The model we consider will be similar to models used primarily in computer science; we take an input/output approach, along the lines of the reactive module paradigm [7]. For an overview of hybrid models from the dynamical systems point of view see [8]. <p> Note that the set E summarizes the information contained in the invariants, the transition guards and the transition reset relations that appear in the hybrid models of <ref> [3, 4, 5] </ref>. A number of operations can be defined on hybrid dynamical systems [1]. Here we restrict our attention to just one, called interconnection, which allows us to form new hybrid systems out of collections of existing ones.
Reference: 4. <author> A. Deshpande, </author> <title> Control of Hybrid Systems. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering, University of California, Berkeley, </institution> <year> 1994. </year>
Reference-contexts: Hybrid automata are convenient abstractions of systems with phased operation and they appear extensively in the literature <ref> [3, 4, 5, 6] </ref>. The model we consider will be similar to models used primarily in computer science; we take an input/output approach, along the lines of the reactive module paradigm [7]. For an overview of hybrid models from the dynamical systems point of view see [8]. <p> Note that the set E summarizes the information contained in the invariants, the transition guards and the transition reset relations that appear in the hybrid models of <ref> [3, 4, 5] </ref>. A number of operations can be defined on hybrid dynamical systems [1]. Here we restrict our attention to just one, called interconnection, which allows us to form new hybrid systems out of collections of existing ones.
Reference: 5. <author> A. Puri, </author> <title> Theory of Hybrid Systems and Discrete Event Systems. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering, University of California, Berkeley, </institution> <year> 1995. </year>
Reference-contexts: Hybrid automata are convenient abstractions of systems with phased operation and they appear extensively in the literature <ref> [3, 4, 5, 6] </ref>. The model we consider will be similar to models used primarily in computer science; we take an input/output approach, along the lines of the reactive module paradigm [7]. For an overview of hybrid models from the dynamical systems point of view see [8]. <p> Note that the set E summarizes the information contained in the invariants, the transition guards and the transition reset relations that appear in the hybrid models of <ref> [3, 4, 5] </ref>. A number of operations can be defined on hybrid dynamical systems [1]. Here we restrict our attention to just one, called interconnection, which allows us to form new hybrid systems out of collections of existing ones. <p> In the set up [10], uncontrollable events are given "priority" over controllable ones, in the sense that they can always take place independent of the action of the controller. To capture this effect (and motivated by a discussion in <ref> [5] </ref>) we assume that the evolution of the system takes place in rounds where a controllable event is followed by an uncontrollable one.
Reference: 6. <author> N. Lynch, R. Segala, F. Vaandrager, and H. Weinberg, </author> <title> "Hybrid I/O automata," in Hybrid Systems III, no. </title> <booktitle> 1066 in LNCS, </booktitle> <pages> pp. 496-510, </pages> <publisher> Springer Verlag, </publisher> <year> 1996. </year>
Reference-contexts: Hybrid automata are convenient abstractions of systems with phased operation and they appear extensively in the literature <ref> [3, 4, 5, 6] </ref>. The model we consider will be similar to models used primarily in computer science; we take an input/output approach, along the lines of the reactive module paradigm [7]. For an overview of hybrid models from the dynamical systems point of view see [8].
Reference: 7. <author> R. Alur and T. A. Henzinger, </author> <title> Computer-Aided Verification. </title> <note> 1996. to appear. </note>
Reference-contexts: Hybrid automata are convenient abstractions of systems with phased operation and they appear extensively in the literature [3, 4, 5, 6]. The model we consider will be similar to models used primarily in computer science; we take an input/output approach, along the lines of the reactive module paradigm <ref> [7] </ref>. For an overview of hybrid models from the dynamical systems point of view see [8]. We consider a finite collection of variables of two distinct kinds, discrete and continuous. A variable is called discrete if it takes values in a countable set and it is called continuous otherwise.
Reference: 8. <author> M. S. Branicky, </author> <title> Control of Hybrid Systems. </title> <type> PhD thesis, </type> <institution> Massacussets Institute of Technology, </institution> <year> 1994. </year>
Reference-contexts: The model we consider will be similar to models used primarily in computer science; we take an input/output approach, along the lines of the reactive module paradigm [7]. For an overview of hybrid models from the dynamical systems point of view see <ref> [8] </ref>. We consider a finite collection of variables of two distinct kinds, discrete and continuous. A variable is called discrete if it takes values in a countable set and it is called continuous otherwise. We will assume no special algebraic structure for the values of the discrete variables.
Reference: 9. <author> J. Lygeros, D. N. Godbole, and S. Sastry, </author> <title> "Optimal control approach to multia-gent, hierarchical system verification," </title> <booktitle> in IFAC World Congress, </booktitle> <year> 1996. </year>
Reference-contexts: The verification problem also reduces to a pair of optimal control problems. For further discussion of this special case the reader is referred to <ref> [9] </ref>. 4 Reachability in Finite Automata Consider a standard, deterministic finite automaton G = (Q; ; ffi; Q 0 ) where Q is a finite set of states, a finite set of events, ffi : Q fi ! Q a transition relation and Q 0 Q a set of initial states.
Reference: 10. <author> P. J. G. Ramadge and W. M. Wonham, </author> <title> "The control of discrete event dynamical systems," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. Vol.77, no. 1, </volume> <pages> pp. 81-98, </pages> <year> 1989. </year>
Reference-contexts: Let L (G) denote the string of events (language) generated/accepted by G. Following <ref> [10] </ref> we assume that the set of events is partitioned into two disjoint subsets, = u [ c , where the events in c are controllable (in the sense that they can be disabled) while the events in u are uncontrollable. <p> For our example we will only consider how reachability questions can be addressed using the techniques of Section 3. We first cast the finite automaton G into the modeling formalism of Section 2. In the set up <ref> [10] </ref>, uncontrollable events are given "priority" over controllable ones, in the sense that they can always take place independent of the action of the controller.
Reference: 11. <author> J.-R. </author> <title> Abrial, "The steam-boiler control specification problem," in Formal Methods for Industrial Applications: Specifying and Programming the Steam Boiler Control, </title> <publisher> LNCS, Springer Verlag, </publisher> <year> 1996. </year>
Reference-contexts: In this special case the * construction is not necessary. 5 The Steam Boiler Our analysis of the steam boiler problem is based on the description of [2], which is simpler than the original specification of <ref> [11] </ref> in that the effect of faults on the system is not considered. The steam boiler consists of a tank containing water and a heating element that causes the water to boil and escape as steam.
Reference: 12. <author> C. S. Hynes and L. Sherry, </author> <title> "Synthesis from design requirements of a hybrid system for transport aircraft longitudinal control." </title> <type> (preprint), </type> <institution> NASA Ames Research Center, </institution> <year> 1996. </year> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: ; 0) u 1 = 0 u 2 = 0 if w M 2 and r minf^r (T 1 ; 0); ^r (0; T 2 )g 6 Flight Vehicle Management System The flight vehicle management system (FVMS) example is based on the dynamic aircraft equations and the design specification of <ref> [12] </ref>. The equations model the speed and the flight path angle dynamics of a commercial aircraft in still air. <p> Within Modes 2 and 3 there are two submodes depending on whether T = T min (idle thrust) or T = T max (maximum thrust). Safety dictates that V and fl must remain within specified limits. For ease of presentation we simplify this safety envelope, S, of <ref> [12] </ref> to S = f (V; fl)j (V min V V max ) ^ (fl min fl fl max )g, where V min ; V max ; fl min ; fl max are constants.
References-found: 12

