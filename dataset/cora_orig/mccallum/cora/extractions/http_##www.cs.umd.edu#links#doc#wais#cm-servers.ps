URL: http://www.cs.umd.edu/links/doc/wais/cm-servers.ps
Refering-URL: http://www.cs.umd.edu/faq/doc_no_nfs.html
Root-URL: 
Abstract: Today most text is stored in electronic form at one point or another in its life. It is then perhaps surprising that computers have made relatively little impact on how it is stored and retrieved, but such is the case. The Wide Area Information Server project (WAIS) seeks to alleviate this problem by making text databases widely accessible via a common user interface and wide area networking. The ultimate success of the effort depends, in part, on the availability of high-performance text search engines. Such engines can be implemented on massively parallel machines, using either signature file or inverted file database structures. Inverted files are particularly appealing, and permit databases as large as 8192 Gigabytes to be searched in under 15 seconds, using currently available hardware 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Kahle, B. & Medlar, A. </author> <year> (1991). </year> <title> An information system for corporate users: Wide Area Information Servers. </title> <type> Technical report TMC-199. </type> <institution> Cambridge MA: Thinking Machines Corporation. </institution>
Reference: [2] <author> Salton, G. (Ed.). </author> <year> (1971). </year> <title> The Smart System --- Experiments in automatic document processing. </title> <address> Englewood Cliffs, NJ: </address> <publisher> Prentice-Hall. </publisher>
Reference: [3] <author> Rocchio, J.J., Jr. </author> <year> (1971). </year> <title> Relevance feedback in information retrieval. </title> <editor> In G. Salton (Ed.), </editor> <title> The Smart System - Experiments in automatic document processing. </title> <address> Englewood Cliffs, NJ: </address> <publisher> Prentice-Hall. </publisher>
Reference: [4] <author> Stanfill, C. & Kahle, B. </author> <year> (1986). </year> <title> Parallel free-text search on the Connection Machine system. </title> <journal> Communications of the ACM, </journal> <volume> 29(12), </volume> <pages> 1229-1239. </pages>
Reference: [5] <author> Pogue, C. & Willet, P. </author> <year> (1987). </year> <title> Use of text signatures for document retrieval in a highly parallel environment. </title> <journal> Parallel Computing, </journal> <volume> 4, </volume> <pages> 259-268. </pages>
Reference: [6] <author> Hillis, D. </author> <year> (1985). </year> <title> The Connection Machine. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference-contexts: Signature files have a number of advantages, namely: 1) the probe operation is very fast, particularly on SIMD machines constructed from bitserial processors (e.g. the Connection Machine models CM-1 and CM-2 <ref> [6] </ref>, the Goodyear MPP [7] and the DAP [8]; and 2) the signature file is much smaller than the full text.The degree of compression depends on the acceptable error rate in the probe step, with 30% being possible for systems having error rates on the order of .
Reference: [7] <author> Batcher, K.E. </author> <year> (1980). </year> <title> Design of a massively parallel processor . IEEE Transactions on Computing, </title> <booktitle> C-29(9), </booktitle> <pages> 836-840. </pages>
Reference-contexts: Signature files have a number of advantages, namely: 1) the probe operation is very fast, particularly on SIMD machines constructed from bitserial processors (e.g. the Connection Machine models CM-1 and CM-2 [6], the Goodyear MPP <ref> [7] </ref> and the DAP [8]; and 2) the signature file is much smaller than the full text.The degree of compression depends on the acceptable error rate in the probe step, with 30% being possible for systems having error rates on the order of .
Reference: [8] <author> Flanders, </author> <title> P.M., </title> <address> Hunt, D.J., Reddaway, S.F., & Parkinson, D. </address> <year> (1977). </year> <title> Efficient high speed computing with the distributed array processor. </title> <editor> In D.JU. Kuck, D.H. Lawrie, & A.H. Sameh (Eds.), </editor> <title> High speed computing and algorithm organization (pp. </title> <address> 113-127). New York: </address> <publisher> Academic Press. </publisher>
Reference-contexts: Signature files have a number of advantages, namely: 1) the probe operation is very fast, particularly on SIMD machines constructed from bitserial processors (e.g. the Connection Machine models CM-1 and CM-2 [6], the Goodyear MPP [7] and the DAP <ref> [8] </ref>; and 2) the signature file is much smaller than the full text.The degree of compression depends on the acceptable error rate in the probe step, with 30% being possible for systems having error rates on the order of .
Reference: [9] <author> Croft, B. </author> <year> (1988). </year> <title> Implementing ranking strategies using text signatures. </title> <journal> ACM Transactions on Office Information Systems 6(1), </journal> <pages> 42-62. </pages>
Reference: [10] <author> Salton, G. & Buckley, C. </author> <year> (1987). </year> <title> Parallel text search methods. </title> <journal> Communications of the ACM, </journal> <volume> 31(2), </volume> <pages> 202-215. </pages>
Reference: [11] <author> Stone, H. </author> <year> (1987). </year> <title> Parallel querying of lar ge databases: A case study. </title> <booktitle> Computer, </booktitle> <month> 20(10), </month> <pages> 11-21. </pages>
Reference-contexts: only represent the presence or absence of a word; other infor 1.2 10 mation, such as its position and the number of times it occurred will necessarily be lost [9][10]; and 2) that there is no effective strategy for searching databases which are too large to fit in main memory <ref> [11] </ref>. Nevertheless, such systems are capable of delivering high performance for databases as lar ge as 25 Gigabytes. Main memory systems of this sort are a good choice for heavily accessed databases where the high performance translates into a high throughput. B.
Reference: [12] <author> Stanfill, C., Thau, R., & Waltz, D. </author> <year> (1989, </year> <month> June). </month> <title> A parallel indexed algorithm for information retrieval. </title> <booktitle> Paper presented at the International Conference on Research and Development in Information Retrieval. </booktitle> <address> Cambridge, MA. </address>
Reference-contexts: In the simplest parallel inverted f ile structure, the postings are distributed arbitrarily across the processors and, at query time, sent to the processor containing the appropriate mailbox <ref> [12] </ref>. In a more complex f ile structure, called a partitioned posting file, the postings are stored on disk in such a way that they will, when read into the machine s memory, be in the same processor as their mailbox [13].
Reference: [13] <author> Stanfill, C., & Thau, R. </author> <year> (1991). </year> <booktitle> Information retrieval on the Connection Machine: 1 to 8192 gigabytes. Information Processing and Management 27(4), </booktitle> <pages> 285-310. </pages>
Reference-contexts: In a more complex f ile structure, called a partitioned posting file, the postings are stored on disk in such a way that they will, when read into the machine s memory, be in the same processor as their mailbox <ref> [13] </ref>. The later file structure is somewhat faster than the former, as it involves no interproces-sor communication, but building this file structure is more dif ficult. <p> A full discussion of the performance characteristics of parallel database servers is beyond the scope of this paper; the interested reader is referred to <ref> [13] </ref>. T able 1, taken from the referenced paper, summarizes the performance characteristics of various systems having between 1.5 and 8192 Gigabytes of data. TABLE 1 PERFORMANCE OF CM-2 FOR VARIOUS DATABASE SIZES. TIMES IN SECONDS, 10-TERM QUERIES.
References-found: 13

