URL: file://ftp.cs.ubc.ca/pub/local/vista/paper.ps
Refering-URL: http://www.cs.ubc.ca/nest/lci/vista/vista.html
Root-URL: 
Email: fpope,loweg@cs.ubc.ca  
Title: Vista: A Software Environment for Computer Vision Research  
Author: Arthur R. Pope David G. Lowe 
Address: Vancouver, B.C., Canada V6T 1Z4  
Affiliation: Department of Computer Science, University of British Columbia  
Note: Published in CVPR'94. 1  
Abstract: Vista is a software environment supporting the modular implementation and execution of computer vision algorithms. Because it is extensible, portable, and freely available, Vista is an appropriate medium for the exchange of standard implementations of algorithms. This paper, an overview of Vista, describes its file format, its data abstraction, its conventions for UNIX filter programs and library routines, and its user interface toolkit. Unlike systems that are designed principally to support image processing, Vista provides for the easy creation and use of arbitrary data types, such as are needed for many areas of computer vision research. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. M. Haralick, </author> <title> Computer vision theory: </title> <booktitle> The lack thereof, CVGIP 36 (1986), </booktitle> <pages> pp. 372-386. </pages>
Reference-contexts: 1 Introduction As a science concerned with creating artificial systems, computer vision ought to emphasize the evaluation and comparison of alternative methods <ref> [1] </ref> [2]. It should be simple to compose large systems from components created by other researchers. That this is seldom done is partly due to the lack of a suitable, common software environment. Without a common environment, implementations and data can be exchanged only with great difficulty.
Reference: [2] <author> K. Price, </author> <title> Anything you can do, I can do better (no you can't): </title> : : , <booktitle> CVGIP 36 (1986), </booktitle> <pages> pp. 387-391. </pages>
Reference-contexts: 1 Introduction As a science concerned with creating artificial systems, computer vision ought to emphasize the evaluation and comparison of alternative methods [1] <ref> [2] </ref>. It should be simple to compose large systems from components created by other researchers. That this is seldom done is partly due to the lack of a suitable, common software environment. Without a common environment, implementations and data can be exchanged only with great difficulty.
Reference: [3] <author> J. Rasure, D. Argiro, T. Sauer, and C. Williams, </author> <title> Visual language and software development environment for image processing, </title> <booktitle> Int. J. of Imaging Systems and Technology 2 (1990), </booktitle> <pages> pp. 183-199. </pages>
Reference-contexts: Moreover, extensions like these should not require modifications to existing software. Several existing software environments provide some support for computer vision research, yet fail to meet all of the requirements stated above. Often these environments focus too narrowly on image processing (e.g., Khoros <ref> [3] </ref> and LaboImage [4]); while providing excellent support for image manipulation, they make few provisions for storing and manipulating other kinds of information (e.g., edge vectors). <p> Some environments must be purchased, which limits the ability to distribute code developed within them (e.g., HIPS [5], HVision [6], and KBVision [7]), or they bear copyrights restricting how code may be copied, modified, and redistributed, which limits their extensibility (e.g., Khoros <ref> [3] </ref>). One promising system, the ARPA Image Understanding Environment [8], remains under development. Faced with these shortcomings, we began three years ago to develop a new environment whose particular goals were to support computer vision research and to foster the exchange of research products.
Reference: [4] <author> A. Jacot-Descombes, M. Rupp, and T. Pun, LaboImage: </author> <title> A portable window-based environment for research in image processing and analysis, </title> <booktitle> in SPIE Proc. </booktitle> <volume> Vol 1659: </volume> <booktitle> Image Processing and Interchange: Implementation and Systems (1992), </booktitle> <pages> pp. 331-340. </pages>
Reference-contexts: Moreover, extensions like these should not require modifications to existing software. Several existing software environments provide some support for computer vision research, yet fail to meet all of the requirements stated above. Often these environments focus too narrowly on image processing (e.g., Khoros [3] and LaboImage <ref> [4] </ref>); while providing excellent support for image manipulation, they make few provisions for storing and manipulating other kinds of information (e.g., edge vectors).
Reference: [5] <author> M. S. Landy, Y. Cohen, and G. Sperling, </author> <title> HIPS: A Unix-based image processing system, </title> <booktitle> CVGIP 25 (1984), </booktitle> <pages> pp. 331-347. </pages>
Reference-contexts: Some environments must be purchased, which limits the ability to distribute code developed within them (e.g., HIPS <ref> [5] </ref>, HVision [6], and KBVision [7]), or they bear copyrights restricting how code may be copied, modified, and redistributed, which limits their extensibility (e.g., Khoros [3]). One promising system, the ARPA Image Understanding Environment [8], remains under development.
Reference: [6] <author> P. Hallinan, M. Nitzberg, and G. Gordon, </author> <title> The HVision Package: Image Processing Software at the Harvard Robotics Lab, </title> <institution> Harvard Univ. Robotics Lab. </institution> <type> Tech. Rep. </type> <pages> 88-1, </pages> <month> Jan. </month> <year> 1990. </year>
Reference-contexts: Some environments must be purchased, which limits the ability to distribute code developed within them (e.g., HIPS [5], HVision <ref> [6] </ref>, and KBVision [7]), or they bear copyrights restricting how code may be copied, modified, and redistributed, which limits their extensibility (e.g., Khoros [3]). One promising system, the ARPA Image Understanding Environment [8], remains under development.
Reference: [7] <editor> KBVision, </editor> <booktitle> Amerinex Artificial Intelligence, </booktitle> <publisher> Inc., </publisher> <address> Amherst, Mass. </address> <note> Software. </note>
Reference-contexts: Some environments must be purchased, which limits the ability to distribute code developed within them (e.g., HIPS [5], HVision [6], and KBVision <ref> [7] </ref>), or they bear copyrights restricting how code may be copied, modified, and redistributed, which limits their extensibility (e.g., Khoros [3]). One promising system, the ARPA Image Understanding Environment [8], remains under development.
Reference: [8] <author> J. Mundy, </author> <title> The Image Understanding Environment program, </title> <booktitle> In Proc. CVPR (1992), </booktitle> <pages> pp. 406-416. </pages>
Reference-contexts: One promising system, the ARPA Image Understanding Environment <ref> [8] </ref>, remains under development. Faced with these shortcomings, we began three years ago to develop a new environment whose particular goals were to support computer vision research and to foster the exchange of research products. That environment, Vista, is the subject of this paper.
Reference: [9] <author> J. Poskanzer, PBMPLUS, </author> <month> Dec. </month> <year> 1991. </year> <note> Software available on Internet. </note>
Reference-contexts: Consequently, existing software does not need to be modified whenever custom attributes are employed. Although Vista's image representation is unique, it is easily mapped to other formats. Vista includes software for translating images in both directions between Vista's format and Portable Pixmap (PPM) format. The PBMPLUS package <ref> [9] </ref> can be used to reach a large variety of other formats from PPM format. 4 Using Vista programs Most of Vista's data manipulation operations are available in the form of UNIX filter programs. Following the UNIX philosophy, each program is designed to perform just one particular task well.
References-found: 9

