URL: http://www.cs.man.ac.uk/~tessaris/DL/docs/IJCAI95/degiacomo-lenzerini.ps.Z
Refering-URL: http://www.cs.man.ac.uk/~tessaris/DL/papers.html
Root-URL: http://www.cs.man.ac.uk
Email: fdegiacomo,lenzerinig@assi.dis.uniroma1.it  
Title: What's in an Aggregate: Foundations for Description Logics with Tuples and Sets  
Author: Giuseppe De Giacomo and Maurizio Lenzerini 
Address: Via Salaria 113, I-00198 Roma, Italia  
Affiliation: Dipartimento di Informatica e Sistemistica Universita di Roma "La Sapienza"  
Abstract: Based on the research done in the last decade, attempts have been made to propose description logics as unifying formalisms for the various class-based representation languages used in different areas. These attempts have made apparent that sound, complete, and decidable description logics still suffer from several limitations, regarding modeling classes of aggregate objects, expressing general inclusion axioms, and the ability of navigating links between classes. In this paper we make description logics accomplish the necessary leap in order to become suitable for the new challenging applications they are faced with. In particular, we propose a powerful description logic overcoming the above limitations and we show that its reasoning tasks are decidable in worst case exponential time. 
Abstract-found: 1
Intro-found: 1
Reference: [ Baader, 1991 ] <author> F. Baader. </author> <title> Augmenting concept languages by transitive closure of roles: An alternative to terminological cycles. </title> <booktitle> In Proc. of IJCAI-91 1991. </booktitle>
Reference: [ Bergamaschi and Sartori, 1992 ] <author> S. Bergamaschi and C. Sartori. </author> <title> On taxonomic reasoning in conceptual design. </title> <journal> ACM Trans. on Database Systems, </journal> <volume> 17(3) </volume> <pages> 385-422, </pages> <year> 1992. </year>
Reference: [ Borgida, 1992 ] <author> A. Borgida. </author> <title> From type systems to knowledge representation: Natural semantics specifications for description logics. </title> <journal> J. of Intelligent and Cooperative Information Systems, </journal> <volume> 1(1) </volume> <pages> 93-126, </pages> <year> 1992. </year>
Reference: [ Brachman and Levesque, 1985 ] <author> R. J. Brachman and H. J. Levesque. </author> <title> Readings in Knowledge Representation. </title> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, </address> <year> 1985. </year>
Reference: [ Brachman, 1977 ] <author> R. J. Brachman. </author> <title> What's in a concept: Structural foundations for semantic networks. </title> <journal> International Journal of Man-Machine Studies, </journal> <volume> 9(2) </volume> <pages> 127-152, </pages> <year> 1977. </year>
Reference-contexts: 1 Introduction Description logics are AI formalisms that allow one to represent domain knowledge by focusing on classes of objects <ref> [ Brachman, 1977 ] </ref> and their relationships [ Woods, 1975 ] , and by offering specialized inferences on the class structure.
Reference: [ Brodie and Ridjanovic, 1984 ] <author> M. L. Brodie and D. Rid-janovic. </author> <title> On the design and specification of database transactions. </title> <booktitle> In On Conceptual Modelling, </booktitle> <pages> pages 277-306. </pages> <publisher> Springer-Verlag, </publisher> <year> 1984. </year>
Reference-contexts: This makes it clear that Nary relations can be modeled as classes whose instances are aggregates. An instance aggregate is an abstraction of a group of other objects belonging to a certain class <ref> [ Brodie and Ridjanovic, 1984 ] </ref> . A typical example of such an aggregate is a team, which can be seen as a group of players. Like any other description logics, CAT S allows one to form complex classes by applying suitable constructors to both simple and aggregate classes.
Reference: [ Buchheit et al., 1993 ] <author> M. Buchheit, F. M. Donini, and A. Schaerf. </author> <title> Decidable reasoning in terminological knowledge representation systems. </title> <journal> J. of Artificial Intelligence Research, </journal> <volume> 1 </volume> <pages> 109-138, </pages> <year> 1993. </year>
Reference-contexts: Relationship with other formalisms It is easy to see that we obtain CIQ from CAT S by simply ignoring tuples, sets, and basic links (other than atomic ones). As another example of description logic supporting general inclusion assertions, the logic ALCN R, studied in <ref> [ Buchheit et al., 1993 ] </ref> , can be obtained from CAT S by ignoring tuples, sets, complex links, the (a 1 a 2 ) constructs, and by allowing only basic links of the form b 1 " b 2 , and number restrictions of the form ( k b.&gt;).
Reference: [ Calvanese et al., 1994 ] <author> D. Calvanese, M. Lenzerini, and D. Nardi. </author> <title> A unified framework for class based representation formalisms. </title> <booktitle> In Proc. of KR-94, </booktitle> <pages> pages 109-120, </pages> <year> 1994. </year>
Reference-contexts: One main issue still remains to be addressed, namely, the possibility of adding to CAT S suitable constructs for expressing finiteness of nested aggregates, and, correspondingly, suitable techniques for reasoning in finite models (in the style of <ref> [ Calvanese et al., 1994 ] </ref> ). This will be the subject of further research.
Reference: [ Catarci and Lenzerini, 1993 ] <author> T. Catarci and M. Lenz-erini. </author> <title> Representing and using interschema knowledge in cooperative information systems. </title> <journal> J. of Intelligent and Cooperative Information Systems, </journal> <volume> 2(4) </volume> <pages> 375-398, </pages> <year> 1993. </year>
Reference-contexts: One consequence of this property is that N-ary relations are not supported (an exception is the logic proposed in [ Schmolze, 1989 ] , for which no complete decision procedure was proposed). In fact, N-ary relations have been shown to be important in several contexts (see <ref> [ Catarci and Lenzerini, 1993 ] </ref> ), especially in databases and in natural language. For example, exam is correctly modeled as a ternary relation over student, professor and course. Note that supporting N-ary relations means that the logic offers suitable mechanisms for their definition and their characterization.
Reference: [ De Giacomo and Lenzerini, 1995 ] <author> G. De Giacomo and M. Lenzerini. </author> <title> Enhanced propositional dynamic logic for reasoning about concurrent actions (extended abstract). </title> <booktitle> In Working Notes of the AAAI 1995 Spring Symposium on Extending Theories of Action: Formal and Practical Applications, </booktitle> <year> 1995. </year>
Reference-contexts: As a final observation, we would like to note that CAT S can also be used for expressing knowledge bases that go beyond classes and links. In <ref> [ De Giacomo and Lenzerini, 1995 ] </ref> , we show that a weak version of CAT S can be used as a sort of monotonic propositional situation calculus extended with complex and concurrent actions. Roughly speaking, states are modeled by elementary objects, and atomic actions are modeled by atomic links.
Reference: [ De Giacomo and Lenzerini, 1994 ] <author> G. De Giacomo and M. Lenzerini. </author> <title> Boosting the correspondence between description logics and propositional dynamic logics. </title> <booktitle> In Proc. of AAAI-94, </booktitle> <pages> pages 205-212, </pages> <year> 1994. </year>
Reference-contexts: Starting with atomic concepts and atomic roles, which are concepts and roles described simply by a name, complex concepts and roles can be build by means of suitable constructors. In the following, we focus on the description logic CIF studied in <ref> [ De Giacomo and Lenzerini, 1994 ] </ref> , whose language has the following syntax: C ::= A j C 1 u C 2 j :C j 8R.C j ( 1 P ) j ( 1 P ) where A denotes an atomic concept, C (possibly with subscript) a generic concept, P <p> It is well known that all basic reasoning tasks can be (linearly) reformulated as logical implication in a TBox. 2 In <ref> [ De Giacomo and Lenzerini, 1994 ] </ref> , it is shown that logical implication in CIF TBoxes, is an EXPTIME-complete problem. This result was devised in the setting of the correspondence between description logics and propositional dynamic logics, originally pointed out in [ Schild, 1991 ] . <p> This is basically due to the ability of expressing reflexive-transitive closure of roles, together with the "connected model property", i.e. if a TBox has a model, it has a model which is connected (see <ref> [ Schild, 1991; De Giacomo and Lenzerini, 1994 ] </ref> ). 3 We assume that integers are coded in unary. language of CAT S has the following syntax (n; k 1): C ::= A j o (U 1 ; : : : ; U n ) j O (C; U 1 ;
Reference: [ Nebel, 1991 ] <author> B. Nebel. </author> <title> Terminological cycles: Semantics and computational properties. </title> <booktitle> In Principles of Semantic Networks, </booktitle> <pages> pages 331-361. </pages> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, </address> <year> 1991. </year>
Reference: [ Piza et al., 1992 ] <author> B. Piza, K. D. Schewe, and J. W. Schmidt. </author> <title> Term subsumption with type constructors. </title> <booktitle> In Proc. of CIKM-92, </booktitle> <pages> pages 449-456, </pages> <year> 1992. </year>
Reference: [ Schild, 1991 ] <author> K. Schild. </author> <title> A correspondence theory for terminological logics: Preliminary report. </title> <booktitle> In Proc. of IJCAI-91, </booktitle> <pages> pages 466-471, </pages> <year> 1991. </year>
Reference-contexts: This result was devised in the setting of the correspondence between description logics and propositional dynamic logics, originally pointed out in <ref> [ Schild, 1991 ] </ref> . One consequence is that logical implication in CIF can be decided by means of the decision procedures designed for satisfiability checking in dynamic logics. <p> This is basically due to the ability of expressing reflexive-transitive closure of roles, together with the "connected model property", i.e. if a TBox has a model, it has a model which is connected (see <ref> [ Schild, 1991; De Giacomo and Lenzerini, 1994 ] </ref> ). 3 We assume that integers are coded in unary. language of CAT S has the following syntax (n; k 1): C ::= A j o (U 1 ; : : : ; U n ) j O (C; U 1 ;
Reference: [ Schmolze, 1989 ] <author> J. G. Schmolze. </author> <title> Terminological knowledge representation systems supporting n-ary terms. </title> <booktitle> In Proc. of KR-89, </booktitle> <pages> pages 432-443, </pages> <year> 1989. </year>
Reference-contexts: One consequence of this property is that N-ary relations are not supported (an exception is the logic proposed in <ref> [ Schmolze, 1989 ] </ref> , for which no complete decision procedure was proposed). In fact, N-ary relations have been shown to be important in several contexts (see [ Catarci and Lenzerini, 1993 ] ), especially in databases and in natural language. <p> Also the formalism in <ref> [ Schmolze, 1989 ] </ref> supporting N-ary terms can be easily expressed in our logic. More generally, it can be shown the vast majority of decidable description logics proposed in the literature are captured by CAT S.
Reference: [ Schreiber et al., 1993 ] <author> G. Schreiber, B. Wielinga, and J. Breuker. KADS: </author> <title> A principled approach to knowledge-based system development. </title> <publisher> Academic Press, </publisher> <year> 1993. </year>
Reference: [ Smith and Smith, 1977 ] <author> J. M. Smith and D. C. P. Smith. </author> <title> Database abstractions: Aggregation and generalization. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 2(2) </volume> <pages> 105-133, </pages> <year> 1977. </year>
Reference-contexts: There are two types of aggregates: property aggregates and instance aggregates. A property aggregate is an abstraction for an object that is considered as an aggregation of other objects, one for each attribute belonging to a specified set <ref> [ Smith and Smith, 1977 ] </ref> . A typical example of such an aggregate is a date, which is seen as an aggregation of three objects, one for the attribute day, one for the attribute month, and one for the attribute year.
Reference: [ Woods and Schmolze, 1992 ] <author> W. A. Woods and J. G. Schmolze. </author> <title> The KL-ONE family. </title> <booktitle> In Semantic Networks in Artificial Intelligence, </booktitle> <pages> pages 133-178. </pages> <publisher> Perga-mon Press, </publisher> <year> 1992. </year>
Reference-contexts: The research developed in the last decade offers a quite complete picture of several issues related to the expressive power of the logics and the computational complexity of the reasoning tasks (see <ref> [ Woods and Schmolze, 1992 ] </ref> ). <p> Exceptions are, for example, [ Nebel, 1991; Baader, 1991; Schild, 1991; De Giacomo and Lenzerini, 1994; Buchheit et al., 1993 ] . An important outcome of this research is that reasoning with axioms is computationally hard, even for the simplest description logics (weaker than F L <ref> [ Woods and Schmolze, 1992 ] </ref> ). All these works, however, limit their attention to axioms on concepts, and do not consider the problem of expressing inclusion axioms on relations. * Relationships between classes are generally described by means of poor representation mechanisms. <p> The ability of stating cardinality constraints of general forms on relationships. The possibility of conceiving a relationship like a set, thus applying set theoretic operators on them (including the notorious role value map <ref> [ Woods and Schmolze, 1992 ] </ref> ). The aim of the present work is to devise a description logic, called CAT S, that finally addresses the above issues. The basic ingredients of CAT S are classes and links.
Reference: [ Woods, 1975 ] <author> W. A. Woods. </author> <title> What's in a link: Foundations for semantic networks. </title> <booktitle> In Representation and Understanding: Studies in Cognitive Science, </booktitle> <pages> pages 35-82. </pages> <publisher> Academic Press, </publisher> <year> 1975. </year>
Reference-contexts: 1 Introduction Description logics are AI formalisms that allow one to represent domain knowledge by focusing on classes of objects [ Brachman, 1977 ] and their relationships <ref> [ Woods, 1975 ] </ref> , and by offering specialized inferences on the class structure.
References-found: 19

