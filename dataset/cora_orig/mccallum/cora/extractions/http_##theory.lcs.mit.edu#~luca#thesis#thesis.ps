URL: http://theory.lcs.mit.edu/~luca/thesis/thesis.ps
Refering-URL: http://theory.lcs.mit.edu/~luca/thesis/
Root-URL: 
Title: Reductions and (Non-)Approximability  
Author: Luca Trevisan 
Degree: Dottorato di Ricerca in  
Affiliation: Universit a degli Studi di Roma "La Sapienza"  Informatica  
Pubnum: IX-97-7  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Adams, D. </author> <title> The Hitchhiker's Guide to the Galaxy. </title> <publisher> Harmony Books, </publisher> <year> 1980. </year>
Reference-contexts: has free bit complexity f (where f is a real) if for any input x and any random string R, there are at most 2 f set of answers a such that (x; R; a) is an accepting configuration for V ; * V has soundness s (where s 2 <ref> [0; 1] </ref> is a real) if, for any x 2 N , ACC [V (x)] s; * V has completeness c (where c 2 [0; 1] is a real) if, for any x 2 Y , ACC [V (x)] c. <p> 2 f set of answers a such that (x; R; a) is an accepting configuration for V ; * V has soundness s (where s 2 <ref> [0; 1] </ref> is a real) if, for any x 2 N , ACC [V (x)] s; * V has completeness c (where c 2 [0; 1] is a real) if, for any x 2 Y , ACC [V (x)] c. We note that the number of free bits cannot exceed the number of query bits. <p> There is another which states that this has already happened. (D. Adams <ref> [1] </ref>) The first goal of this chapter is to define an approximation preserving reducibility that can be used for as many approximation classes as possible and such that all reductions that have appeared in the literature still hold. <p> Moreover, the running time of t 1 and t 2 is polynomial for every fixed r. Theorem 3.50 An APX problem A is APX-complete if and only if it is linearly additive and a constant r 0 exists such that A r 0 is NPF NP <ref> [1] </ref> -hard. Proof: Let A be an r A -approximable APX-complete problem. From the proof of Proposition 3.43 a constant r 0 exists such that A r 0 is hard for NPF NP [1] . <p> is linearly additive and a constant r 0 exists such that A r 0 is NPF NP <ref> [1] </ref> -hard. Proof: Let A be an r A -approximable APX-complete problem. From the proof of Proposition 3.43 a constant r 0 exists such that A r 0 is hard for NPF NP [1] . In order to prove the linear additivity, fix any r &gt; 1 and let x 1 ; : : :; x k be instances of A. <p> That is, A is linearly additive with fi = fl=c. Conversely, let A be a linearly additive APX problem such that A r 0 is NPF NP <ref> [1] </ref> -hard for some r 0 and let B be an r B -approximable problem. <p> Each of these questions is reducible to A r 0 , since any NP problem can be constructively solved by an NPF NP <ref> [1] </ref> function. From linear additivity, it follows that r 0 -approximating c=(r1) instances of A is reducible to (1 + fi (r 0 1)(r 1)=c)-approximating a single instance of A. <p> Structural Results Nicer Characterization of Complete Problems. The characterizations of polyAPX and APX-complete problems given in Section 3.4 are not as natural as one would like them to be. In particular, for polyAPX-complete problems it would be nicer to have as conditions the NPF NP <ref> [1] </ref> -hardness of A n " for some " &gt; 0 and then a combinatorial property analogous to self-improvability. Even better, having only the hardness of A 2 and then use to the self-improvability to boost the gap, as is done in practice for Max Clique.
Reference: [2] <author> Adams, D. </author> <title> The Restaurant at the End of the Universe. </title> <publisher> Pan Books, </publisher> <year> 1980. </year>
Reference-contexts: At the moment of writing this dissertation, the best PCP construction with few query and free bits is the following. Theorem 2.23 (H-astad [80]) For any constant " &gt; 0, NP FPCP 1";:5+" <ref> [log; 2; 3] </ref>. As a consequence, it is NP-hard to 1.166-approximate Min Vertex Cover. 2.4 Query Complexity In this section we review a few definitions and results about complexity classes defined in terms of bounded queries to an NP oracle. <p> Adams <ref> [2] </ref>) This chapter introduces a series of general methods for developing stronger approximation-preserving reductions and thus infer improved non-approximability results. Our attention is focussed on constraint satisfaction problems (see Section 2.1). Recall that, besides Max Sat and its restrictions/generalizations, several other problems admit such kind of a formalization. <p> The above theorem has implications for probabilistically checkable proofs. Using the well known reduction from constraint satisfaction problems to probabilistically checkable proofs, Theorem 4.19 implies the following the orem. Theorem 4.20 For any " &gt; 0, constants c and s exist such that NP PCP c;s <ref> [log; 2] </ref> and c=s &gt; 10=9 ".
Reference: [3] <author> Alimonti, P. </author> <title> Non-oblivious local search for graphs and hypergraphs coloring problems. </title> <booktitle> In Proceedings of the 21th Workshop on Graph-Theoretic Concepts in Computer Science (1995), </booktitle> <publisher> LNCS 1017, Springer-Verlag, </publisher> <pages> pp. 167-180. </pages>
Reference-contexts: At the moment of writing this dissertation, the best PCP construction with few query and free bits is the following. Theorem 2.23 (H-astad [80]) For any constant " &gt; 0, NP FPCP 1";:5+" <ref> [log; 2; 3] </ref>. As a consequence, it is NP-hard to 1.166-approximate Min Vertex Cover. 2.4 Query Complexity In this section we review a few definitions and results about complexity classes defined in terms of bounded queries to an NP oracle. <p> We use ideas from [50]. For any 1=2 s &lt; c 1 let Gap 3Sat c;s be the following promise problem: given a 3SAT formula ' with m clauses, reject if opt (') sm and accept if opt (') cm. This problem is in PCP c;s <ref> [log; 3] </ref> (a proof is an assignment, the verifier picks a random clause and accepts iff the clause is satisfied by the assignment) and thus in PCP (log; 1) = P. <p> Corollary 4.32 There exists a polynomial time 2:7214-approximate algorithm for Max Weight 3CSP. Corollary 4.33 PCP c;s <ref> [log; 3] </ref> P provided that c=s &gt; 2:7214. 4.4 Lower Bounds for Gadget Constructions In this section we shall show that some of the gadget constructions mentioned in this paper and in [25] are optimal, and we shall prove lower bounds for some other gadget constructions.
Reference: [4] <author> Alon, N., and Spencer, J. </author> <title> The Probabilistic Method. </title> <publisher> Wiley Interscience, </publisher> <year> 1992. </year>
Reference-contexts: E [m ('; t R )] (1 p)a + (1 (1 p) k+1 )m l (1=r)opt (') where the last inequality is due to the bound (3.6). Using the method of conditional expectation <ref> [4] </ref> (see also [135]) we can find in linear time an assignment t such that m ('; t ) m ('; t R ). <p> The expected measure of such a cut is clearly equal to P (u;v)2E !(u; v)(p u q v + q u p v ). Using the method of conditional probabilities (see e.g. <ref> [4] </ref>), a cut with measure not smaller than this expectation can be constructed in polynomial time. * Claim 4.58 Given a cut ^ C in ^ G, we can construct in polynomial time a cut C for G such that m (G; !; C) m ( ^ G; ^ C)(1 12ffi)=(1 <p> 0 (x i k ) = b k gj jfC 2 red (C j ) : ^t 0 satisfies Cgj (1 + ")w j And thus we have that E [m ('; t R )] m ( ^'; ^t 0 )=(1 + ") : Using the method of conditional expectation <ref> [4] </ref>, given a probability distribution over the variable of ' of average measure m R it is possible to find in polynomial time an assignment of measure at least m R .
Reference: [5] <author> Arora, S. </author> <title> Probabilistic Checking of Proofs and Hardness of Approximation Problems. </title> <type> PhD thesis, </type> <institution> University of California at Berkeley, </institution> <year> 1994. </year>
Reference-contexts: The enterprising reader may want to have a look at the actual proof of the PCP Theorem: a full proof is contained in Sudan's thesis [130] and in Arora's one <ref> [5] </ref>. Arora and Lund [8] give a very clear account (with proofs) on how to use the PCP Theorem to prove non-approximability results. The latest non-approximability results are mentioned (with the exception of very recent ones) in a survey by Bellare [24].
Reference: [6] <author> Arora, S. </author> <title> Reductions, codes, </title> <booktitle> PCP's and inapproximability. In Proceedings of the 36th IEEE Symposium on Foundations of Computer Science (1995), </booktitle> <pages> pp. 404-413. </pages>
Reference-contexts: On the other hand it is NP-hard to color it with less than 5 colors [100]. It is a widespread believing that it is hard to use even O (log n) colors, but it would be a good improvement even to prove hardness within any fixed constant. Arora <ref> [6] </ref> shows that "current techniques" do not suffice for that. He proves similar bounds for Max Clique and Min Vertex Cover. However H-astad's [78] " free bit verifier (developed with exciting new techniques) beats Arora's bound for Max Clique. Perhaps the coloring bounds can be beaten as well. Removing weights.
Reference: [7] <author> Arora, S. </author> <title> Polynomial time approximation schemes for Euclidean TSP and other geometric problems. </title> <booktitle> In Proceedings of the 37th IEEE Symposium on Foundations of Computer Science (1996), </booktitle> <pages> pp. 2-11. </pages>
Reference-contexts: Such reduction has been found using a general technique that has been developed with a focus on the hardness of approximation (see Section 4.3). 3. Arora <ref> [7] </ref>, in a recent breakthrough result, showed that the Min TSP is r-approximable for any r &gt; 1 in the important special case when the cities lie in the plane. His first approach with the problem was to try to prove hardness of approximation.
Reference: [8] <author> Arora, S., and Lund, C. </author> <title> Hardness of approximations. In Approximation Algorithms for NP-hard Problems (1996), </title> <publisher> PWS Publishing. </publisher>
Reference-contexts: The enterprising reader may want to have a look at the actual proof of the PCP Theorem: a full proof is contained in Sudan's thesis [130] and in Arora's one [5]. Arora and Lund <ref> [8] </ref> give a very clear account (with proofs) on how to use the PCP Theorem to prove non-approximability results. The latest non-approximability results are mentioned (with the exception of very recent ones) in a survey by Bellare [24].
Reference: [9] <author> Arora, S., Lund, C., Motwani, R., Sudan, M., and Szegedy, M. </author> <title> Proof verification and hardness of approximation problems. </title> <booktitle> In Proceedings of the 33rd IEEE Symposium on Foundations of Computer Science (1992), </booktitle> <pages> pp. 14-23. </pages>
Reference-contexts: Sudan and Szegedy observed that if NP = PCP (log n; 1), then Max SNP is not contained in PTAS (unless P = NP). In a short while, the NP = PCP (log n; 1) result was established by Arora, Lund, Motwani, Sudan and Szegedy <ref> [9] </ref>: this result is now known as the PCP Theorem. Besides the application to Max SNP-hard problems, the PCP Theorem also implies that it is NP-hard to approximate Max Clique within n c , for some c &gt; 0. <p> HISTORY 7 On the other hand, the amazing power of PCP techniques has given new momentum to structural approximation theory. Tight Non-approximability Results All of the non-approximability results obtained from the first version of the PCP Theorem <ref> [9] </ref> have an existential flavour: for example there are positive constants c 1 and c 2 such that Max Sat cannot be approximated within 1 + c 1 and Max Clique cannot be approximated within n c 2 , but there were no explicit estimations of the constants. <p> Once the computations of the verifier are encoded using small CNF formulae (as originally done in <ref> [9] </ref>), the non-approximability result implied for Max Sat can be computed as a function of the size of the CNF formulae and of the soundness probability. The hardness proved in [26] was 94=93. <p> The FGLSS reduction [61] and the reduction in <ref> [9] </ref> are paradigmatic in this respect. Finding the Best Possible Gadgets Constraint satisfaction problems are generalizations of the Max Sat problem. <p> Hardness results for maximization constraint satisfaction problems use a reduction by local replacement from the verifier of the PCP Theorem. This is a standard approach for Max Sat (essentially dating back to <ref> [9] </ref>) but has been introduced only recently for other problems, by Bellare, Goldreich and Sudan [25]. To capture different reductions in a unified framework they formalize the notion of gadget that is used in local replacement reductions. <p> PCP c;s [r; q] is the union of FPCP c;s [r; f; q] for all f q. Using the above notation (introduced in [25] and slightly different from the one of [10]), we can state the PCP Theorem as follows. Theorem 2.21 (PCP Theorem <ref> [10, 9] </ref>) A constant q exists such that NP PCP 1;1=2 [log; q] : Sometimes we shall also use the short-hand notation PCP (r (n); q (n)) def Note that the constants 2=3 and 1=3 are arbitrarily chosen, that is, for any fixed c and s with 0 &lt; s &lt; <p> Lemma 3.27 PCP (log n; 1) = P if and only if Max 3Sat admits a non-constructive PTAS. Proof: The "if" part is a restating of the standard reduction from PCP verifiers to Max 3Sat (see <ref> [9] </ref>). The other direction is more interesting. We use ideas from [50]. For any 1=2 s &lt; c 1 let Gap 3Sat c;s be the following promise problem: given a 3SAT formula ' with m clauses, reject if opt (') sm and accept if opt (') cm.
Reference: [10] <author> Arora, S., and Safra, S. </author> <title> Probabilistic checking of proofs; a new characterization of NP. </title> <booktitle> In Proceedings of the 33rd IEEE Symposium on Foundations of Computer Science (1992), </booktitle> <pages> pp. 2-13. </pages>
Reference-contexts: The connection between proof checking and approximation was also pioneered in a paper by Condon [43]. After that, progress was fast. In a seminal paper, Arora and Safra <ref> [10] </ref> noted that to improve the FGLSS result it was not necessary to bound the running time of the verifier but only the number of random bits and the number of query bits that it uses. <p> PCP c;s [r; q] is the union of FPCP c;s [r; f; q] for all f q. Using the above notation (introduced in [25] and slightly different from the one of <ref> [10] </ref>), we can state the PCP Theorem as follows. <p> PCP c;s [r; q] is the union of FPCP c;s [r; f; q] for all f q. Using the above notation (introduced in [25] and slightly different from the one of [10]), we can state the PCP Theorem as follows. Theorem 2.21 (PCP Theorem <ref> [10, 9] </ref>) A constant q exists such that NP PCP 1;1=2 [log; q] : Sometimes we shall also use the short-hand notation PCP (r (n); q (n)) def Note that the constants 2=3 and 1=3 are arbitrarily chosen, that is, for any fixed c and s with 0 &lt; s &lt;
Reference: [11] <author> Arora, S., and Sudan, M. </author> <title> Improved low degree testing and its applications. </title> <booktitle> In Proceedings of the 29th ACM Symposium on Theory of Computing (1997), </booktitle> <pages> pp. 485-495. </pages>
Reference-contexts: From the reduction technique of Khanna et al. [102] and the recent hardness result for Min Set Cover by Raz and Safra [126] (see also a similar independent result by Arora and Sudan <ref> [11] </ref>), it follows that Min Set Cover, Min Dominating Set and Min Hitting Set are logAPX PB-complete under E-reductions.
Reference: [12] <author> Asano, T., Ono, T., and Hirata, T. </author> <title> Approximation algorithms for the maximum sat-isfiability problem. </title> <booktitle> In Proceedings of the 5th Scandinavian Workshop on Algorithm Theory (1996), </booktitle> <publisher> LNCS 1097, Springer-Verlag, </publisher> <pages> pp. 100-111. </pages>
Reference-contexts: The best result that could be obtained previously, by combining the techniques of [74, 75] and the bound of [60], was 1:299. (see also the 1:301-approximation algorithm in the paper of Ono, Hirata and Asano <ref> [12] </ref>). Similarly, we construct a gadget reducing Max 3CSP to Max 2Sat and, using Feige and Goemans' algorithm, we obtain a 2:721-approximate algorithm for Max 3CSP. The best previous result for this problem was 4 [131]. Our results, and some related ones, are summarized in Table 1.1. <p> It was 74=73 in [25], and would be 22=21 " in light of H-astad's results. The previous best published analysis of a Max 3Sat approximation algorithm gave a 1:301 approximation factor <ref> [12] </ref>; a slightly better bound of 1:2499 could be obtained adapting the techniques of Goemans and Williamson [75]. The previous best approximation factor achievable for Max 3CSP was 4 [131]. The only previous lower bound on gadget construction is by Bellare, Goldreich and Sudan [25].
Reference: [13] <author> Ausiello, G., Crescenzi, P., and Protasi, M. </author> <title> Approximate solution of NP optimization problems. </title> <booktitle> Theoretical Computer Science 150, 1 (1995), </booktitle> <pages> 1-55. </pages>
Reference-contexts: Good accounts on the first attempts at developing approximation-preserving reductions and completeness in approximation classes are a survey by Bruschi, Joseph and Young [37], Kann's PhD thesis [92], and a more recent survey by Ausiello, Crescenzi and Protasi <ref> [13] </ref>. Max SNP-completeness theory is treated very broadly in Papadim-itriou's book on computational complexity [120]. In particular, several Max SNP-completeness proofs that are only sketched in [123] are fully spelled out (and sometimes simplified) in [120].
Reference: [14] <author> Ausiello, G., D'Atri, A., and Protasi, M. </author> <title> Structure preserving reductions among convex optimization problems. </title> <journal> Journal of Computer and System Sciences 21 (1980), </journal> <pages> 136-153. 96 BIBLIOGRAPHY </pages>
Reference-contexts: A paper by Paz and Moran [124] was perhaps the first one to introduce the idea of approximation-preserving reducibilities, but they did not find complete problems in approximation classes. Ausiello, D'Atri and Protasi <ref> [14] </ref> also define a notion of reducibility among optimization problems. Their reduction preserves a lot of structure of the problem (not only the approximability properties). Again, the issue of completeness was not addressed in their paper. Krentel [107] was the first to prove completeness results in classes of optimization problems.
Reference: [15] <author> Babai, L. </author> <title> Trading group theory for randomness. </title> <booktitle> In Proceedings of the 17th ACM Symposium on Theory of Computing (1985), </booktitle> <pages> pp. 421-429. </pages> <note> See also [18]. </note>
Reference-contexts: The idea of extending this model allowing randomness and interaction was introduced independently and simultaneously by Babai <ref> [15] </ref> and by Goldwasser, Micali and Rackoff [76]. The class of languages admitting such randomized interactive proof systems was called IP.
Reference: [16] <author> Babai, L., Fortnow, L., Levin, L., and Szegedy, M. </author> <title> Checking computations in polylog-arithmic time. </title> <booktitle> In Proceedings of the 23rd ACM Symposium on Theory of Computing (1991), </booktitle> <pages> pp. 21-31. </pages>
Reference-contexts: The next logical step was to scale down the theorem and proving that any NP language has membership proofs checkable in polylogarithmic time. This was done by Babai, Fortnow, Levin and Szegedy <ref> [16] </ref>. Almost simultaneously, Feige, Goldwasser, Lovasz, Safra and Szegedy [61] gave an improved proof checking system for NP (running in O (log n log log n) time) and discovered (invented?) the reduction that was to revolutionize the field of approximation.
Reference: [17] <author> Babai, L., Fortnow, L., and Lund, C. </author> <title> Non-deterministic exponential time has two-prover interactive protocols. </title> <booktitle> Computational Complexity 1 (1991), </booktitle> <pages> 3-40. </pages> <note> Preliminary version in Proc. of FOCS'90. </note>
Reference-contexts: However there is no conceptual difference. 6 CHAPTER 1. INTRODUCTION breakthrough, Lund, Fortnow, Karloff and Nisan [115] proved that IP contains the polynomial-time hierarchy. Shortly thereafter, Shamir [128] proved that IP is equal to PSPACE and Babai, Fortnow and Lund <ref> [17] </ref> proved that MIP equals NEXP. The latter result was particularly astonishing: it means that for any language admitting exponentially long membership proofs, such proofs can be verified in polynomial time with low error probability.
Reference: [18] <author> Babai, L., and Moran, S. </author> <title> Arthur-Merlin games: a randomized proof system, and a hierarchy of complexity classes. </title> <journal> Journal of Computer and System Sciences 36 (1988), </journal> <pages> 254-276. </pages>
Reference: [19] <author> Baker, B. </author> <title> Approximation algorithms for NP-complete problems on planar graphs. </title> <journal> Journal of the ACM 41, </journal> <volume> 1 (1994), </volume> <pages> 153-180. </pages>
Reference-contexts: We will use our reduction technique to develop linear-time approximation schemes for both problems. The approximation schemes we describe are a composition of the reductions of Section 3.3.1 and of the linear time PTAS's for Max kSat and Max k-CSP that are implied by the techniques of <ref> [19, 85, 101] </ref>. We recall the definition of planar instance of a constraint satisfaction problem. Definition 3.30 (Incidence Graph) Let F be a (possibly infinite) constraint family. Let ' be an instance of Max Weight F over variable set X. <p> (h+1) (m + n)) = O (m + n). * Theorem 3.37 For fixed " &gt; 0, Max Planar k-CSP admits an (1 + ")-approximate linear time algorithm, Proof:[Sketch] Follows from Theorem 3.36 using the construction outlined in the first part of the proof of [101, Theorem 1] (see also <ref> [19, Theorem 1] </ref>). * Hunt et al. [85] proved the following related result.
Reference: [20] <author> Balc azar, J., D az, J., and Gabarr o, J. </author> <title> Structural Complexity I. </title> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: Bierce [31]) We assume the reader to be familiar with the basic concepts of computational complexity theory. For the definitions of most of the complexity classes used in this thesis we refer the reader to one of the books on the subject (see, for example, <ref> [70, 20, 36, 120] </ref>). In this chapter we will review the definitions of a few approximation-preserving reducibilities, some facts about PCP's and query complexity, and we will define the problems that are mentioned throughout the thesis.
Reference: [21] <author> Beherendt, T., Compton, K., and Gr adel, E. </author> <title> Optimization problems: expressibility, approximation properties and expected asymptotic growth of optimal solutions. </title> <booktitle> In Proceedings of the 6th Workshop of Computer Science and Logic (1993), </booktitle> <publisher> LNCS 702, Springer-Verlag, </publisher> <pages> pp. 43-60. </pages>
Reference-contexts: Kolaitis and Thakur performed a thorough investigation of syntactic classes [105] and extended the approach to minimization problems [106]. Further research exploited the expressive power of logical formalisms in this setting, considering also fixed points (see e.g. <ref> [21] </ref>). 1.1.3 1991-1993: The PCP Connection The extended research activity spread after Papadimitriou and Yannakakis' work produced several results relating the hardness of problems one with the other, but not with standard complexity theoretic notions.
Reference: [22] <author> Beigel, R. </author> <title> Bounded queries to SAT and the boolean hierarchy. </title> <booktitle> Theoretical Computer Science 84 (1991), </booktitle> <pages> 199-223. </pages>
Reference-contexts: Proposition 3.43 For any APX-complete problem A, QH AQH (A). Proof: Let L 2 QH, then L 2 P NP [h] for some h. It is well known (see, for instance, <ref> [22] </ref>) that L can be reduced to the problem of answering k = 2 h1 non-adaptive queries to NP.
Reference: [23] <author> Bellare, M. </author> <title> Interactive proofs and approximation: Reductions from two provers in one round. </title> <journal> In Proceedings of the 2nd IEEE Israel Symposium on Theory of Computing and Systems (1993). </journal> <note> Preliminary version in IBM Research Report RC17969 (1992). </note>
Reference-contexts: Their reductions are not from the verifier of the PCP Theorem, but from the slightly different model of two-provers one-round proof systems [109, 64] (Bellare <ref> [23] </ref> was perhaps the first to explore the connection between such proof systems and approximation problems). 1.1.4 Contemporary Results The development of new results in this field unfolded at an amazing pace in the last three years. Even very recent surveys are slightly outdated [24, 94].
Reference: [24] <author> Bellare, M. </author> <title> Proof checking and approximation: Towards tight results. </title> <journal> Sigact News 27, </journal> <month> 1 </month> <year> (1996). </year>
Reference-contexts: Even very recent surveys are slightly outdated <ref> [24, 94] </ref>. Improved non-approximability results are perhaps the most striking recent achievements. They have been obtained using more and more refined versions of the PCP Theorem, as well as finding better reductions. Recently, tight non-approximability results have been established for a series of important optimization problems. 1.1. <p> Arora and Lund [8] give a very clear account (with proofs) on how to use the PCP Theorem to prove non-approximability results. The latest non-approximability results are mentioned (with the exception of very recent ones) in a survey by Bellare <ref> [24] </ref>. The historical sections in the monograph by Bellare, Goldreich and Sudan [25] contain detailed and very complete accounts on the sequence of improvements that culminated in current non-approximability results. 1.2 The Results of This Thesis We now give an overview of the original results presented in this thesis. <p> A hardness result that uses Theorem 2.22 and a PCP verifier with perfect completeness cannot be better than 3=2 " (this is because a verifier with perfect completeness has to use at least log 3 free bits, see [25] and the discussion in <ref> [24] </ref>). Current bets are that the right threshold is 2, and significantly new ideas are needed to achieve such a hardness results. Non-approximability Result for Practical Problems. There is no known explicit non-approximability result for metric Min TSP, Min Steiner Tree and shortest common super-sequence.
Reference: [25] <author> Bellare, M., Goldreich, O., and Sudan, M. </author> <title> Free bits, PCP's and non-approximability towards tight results (4th version). </title> <type> Tech. Rep. </type> <address> TR95-24, </address> <booktitle> Electronic Colloquium on Computational Complexity, </booktitle> <year> 1996. </year> <note> Preliminary version in Proc. of FOCS'95. </note>
Reference-contexts: Bellare and Sudan showed that 3 + " amortized free bits are sufficient, and thus Max Clique is hard to approximate within n 1=4" . Bellare, Goldreich and Sudan <ref> [25] </ref> gave a system using 2 + " amortized free bits, then H-astad showed that 1 + " are sufficient [79], and, eventually, that " amortized free bits are sufficient [78]. Thus, for any " &gt; 0, it is hard to approximate Max Clique to within n 1" . <p> The hardness proved in [26] was 94=93. Further improvements were obtained using the same approach, but starting with a better version of the PCP Theorem (i.e. with simpler computation and/or with better soundness). Bellare and Sudan [27] proved a 73=72 hard factor, while Bellare, Goldreich and Sudan <ref> [25] </ref> arrived at 27=26: the current best result (perhaps tight) is 8=7 " by H-astad [80]. 8 CHAPTER 1. INTRODUCTION The Structural Revival A new spate of results of structural flavour has recently come up stimulated by the PCP Theorem and its powerful corollaries. <p> The latest non-approximability results are mentioned (with the exception of very recent ones) in a survey by Bellare [24]. The historical sections in the monograph by Bellare, Goldreich and Sudan <ref> [25] </ref> contain detailed and very complete accounts on the sequence of improvements that culminated in current non-approximability results. 1.2 The Results of This Thesis We now give an overview of the original results presented in this thesis. <p> Hardness results for maximization constraint satisfaction problems use a reduction by local replacement from the verifier of the PCP Theorem. This is a standard approach for Max Sat (essentially dating back to [9]) but has been introduced only recently for other problems, by Bellare, Goldreich and Sudan <ref> [25] </ref>. To capture different reductions in a unified framework they formalize the notion of gadget that is used in local replacement reductions. Informally speaking, a gadget is a combinatorial structure that converts a constraint of an optimization problem into constraints of another problem. <p> Even if the notion of a gadget has been formalized only recently, it arose in NP-completeness proofs already in the 70s. An example of a gadget matching the formal definition of <ref> [25] </ref> appears in the 1976 proof that Max 2Sat is NP-complete [71]. Bellare, Goldreich and Sudan also associate a cost to gadgets: the less costly is the gadget, the better is the reduction (and the implied non-approximability result). <p> For this reason, it is desirable to have lower bounds on the cost of certain gadgets, to understand if it is possible to improve known construction or if they are the best possible. The issue of lower bounds for gadgets' costs was raised in <ref> [25] </ref>. Additionally, a great deal of trickery is required in the construction (discovery?) of these combinatorial objects, and the work has to be done, essentially from scratch, every time a new PCP 1.2. <p> Additionally, a great deal of trickery is required in the construction (discovery?) of these combinatorial objects, and the work has to be done, essentially from scratch, every time a new PCP 1.2. THE RESULTS OF THIS THESIS 13 Problem Hard factor Best approximation Max 2Sat 1:047 <ref> [25, 80] </ref> 1:074 [60] Max Sat 1:142 [80] 1:319 [74, 75] Max DiCut 1:083 (1:055 [25, 80]) 1:169 [60] Max 2CSP 1:111 (1:047 [25, 80]) 1:169 [60] Min Vertex Cover 1:166 [80] 2 [73] Table 1.1: Positive and negative approximability results for some constraint satisfaction problems. <p> THE RESULTS OF THIS THESIS 13 Problem Hard factor Best approximation Max 2Sat 1:047 <ref> [25, 80] </ref> 1:074 [60] Max Sat 1:142 [80] 1:319 [74, 75] Max DiCut 1:083 (1:055 [25, 80]) 1:169 [60] Max 2CSP 1:111 (1:047 [25, 80]) 1:169 [60] Min Vertex Cover 1:166 [80] 2 [73] Table 1.1: Positive and negative approximability results for some constraint satisfaction problems. <p> THE RESULTS OF THIS THESIS 13 Problem Hard factor Best approximation Max 2Sat 1:047 <ref> [25, 80] </ref> 1:074 [60] Max Sat 1:142 [80] 1:319 [74, 75] Max DiCut 1:083 (1:055 [25, 80]) 1:169 [60] Max 2CSP 1:111 (1:047 [25, 80]) 1:169 [60] Min Vertex Cover 1:166 [80] 2 [73] Table 1.1: Positive and negative approximability results for some constraint satisfaction problems. <p> We report in bold our results, and in brackets the numbers that could be achievable without using the results of this thesis. verifier is developed that uses a different kind of test. For example, the verifier described in the first and the second version of <ref> [25] </ref> is different from the verifier described in the third and the fourth version. New gadgets had to be developed to prove hardness results using the new verifier. We completely resolve such problems by giving a linear-programming (LP) based technique for automatically finding provably optimum gadgets. <p> To find the best possible gadget implementing a certain reduction we just feed some data into a program and we wait for the answer. Our technique proves that the known gadgets for Max 2Sat and Max 3Sat (introduced in <ref> [25] </ref>) are the best possible. The gadget for Max Cut is not optimum, and we find a computer-constructed optimum one, thus giving an improved non-approximability result for Max Cut. We also present optimum gadgets (and improved hardness) for Max DiCut and Max 2CSP. <p> We also present optimum gadgets (and improved hardness) for Max DiCut and Max 2CSP. Our results were developed when the best PCP verifier on the market was the BGS one <ref> [25] </ref>. Using their verifier and our reduction, we proved that Max Cut (respectively, Max DiCut) was hard to approximate within 61=60 (respectively, 45=44): for both problems, the hardness established in [25] was 72=71. Using H-astad's verifier [80], we prove hardness within 17=16 " (respectively, 13=12"). <p> Our results were developed when the best PCP verifier on the market was the BGS one <ref> [25] </ref>. Using their verifier and our reduction, we proved that Max Cut (respectively, Max DiCut) was hard to approximate within 61=60 (respectively, 45=44): for both problems, the hardness established in [25] was 72=71. Using H-astad's verifier [80], we prove hardness within 17=16 " (respectively, 13=12"). Using H-astad verifier in combination with the BGS gadgets would have yielded hardness within 19=18 " for both problems. Obtaining better reductions between problems can also yield improved approximation algorithms for some problems. <p> Alternatively, one can say that repetition of clauses or multiple edges are admitted. The best algorithm for such problems work equally well in the non-weighted and the weighted version (even if the weights are not polynomially bounded). For the Max Cut problem in simple graphs, Bellare, Goldreich and Sudan <ref> [25] </ref> prove a hardness result using a reduction form the weighted version of the problem. Their "weight removing" reduction makes the hardness result worse: applying it to our hardness result for Max Cut would yield, roughly, a 1:02 hardness for simple Max Cut. <p> The generalization to other constraint satisfaction problems requires the introduction (and the explicit construction) of mixing sets of tuples. The Vertex Cover Problem The first explicit non-approximability result for Min Vertex Cover is due to Bellare, Goldre-ich and Sudan <ref> [25] </ref>: they use the FGLSS reduction combined with the standard reduction from 1.2. THE RESULTS OF THIS THESIS 15 Max Clique to Min Vertex Cover. They proved a 17=16 hardness result improved to 7=6 " by H-astad [80]. <p> Theorem 2.18 ([123]) Max 3Sat is Max SNP-complete under L-reductions. 22 CHAPTER 2. BACKGROUND 2.3 PCP and the Hardness of Approximation In what follows, we summarize the main definitions and a few results from the theory of probabilistically checkable proofs. Our exposition follows <ref> [25] </ref>. A promise problem is a pair (Y; N ) of disjoint sets of strings from some fixed alphabet (we can assume without loss of generality = f0; 1g). <p> PCP c;s [r; q] is the union of FPCP c;s [r; f; q] for all f q. Using the above notation (introduced in <ref> [25] </ref> and slightly different from the one of [10]), we can state the PCP Theorem as follows. <p> The following theorem shows that the existence of efficient verifiers for any NP problem implies a non-approximability result for Min Vertex Cover. 2.4. QUERY COMPLEXITY 23 Theorem 2.22 (Non-approximability of Min Vertex Cover <ref> [61, 25] </ref>) Let us assume that NP FPCP c;s [log; f; q]. <p> Recall that, besides Max Sat and its restrictions/generalizations, several other problems admit such kind of a formalization. Non-approximability results for those problems are proved using local-replacement reductions from the verifier of the PCP Theorem. The notion of "gadget", formalized by Bellare, Goldreich and Su-dan <ref> [25] </ref>, captures the way such reductions work. We introduce a general technique that allows to find automatically (i.e. by running a computer program) the best possible gadget reducing a computation of a verifier to a given constraint satisfaction problem. <p> We also show how to make a positive use of gadgets, presenting improved approximation algorithms for Max 3Sat and Max 3CSP based on gadget reductions to Max 2Sat. The non-approximability results that we prove (as well as those for Max Sat, Max 2Sat, and other problems <ref> [25, 80] </ref>) hold only for the weighted version. We give a technique to extend those results to the non-weighted version. The Min Vertex Cover problem does not seemingly fit this framework of constraint satisfaction problems. <p> Our interest in gadget construction, and in the PC and RMBC families (that, contrary to the other one, do not yield natural constraint satisfaction problems) originally arose from the following result by Bellare, Goldreich and Sudan. Lemma 4.2 <ref> [25] </ref> For any family F , if there exist ff-gadgets reducing all the elements of PC to F and fi-gadgets reducing all the elements of RMBC to F, then for any fl &gt; 0, Max F is hard to approximate to within 1 + :15 :6ff+:4fi:15 fl. <p> A gadget over 7 variables can thus be identified with the vector (w 1 ; : : :; w 98 ) of the weights of the constraints. Since in <ref> [25] </ref> it is shown that an 11-gadget exists reducing PC 0 to 2SAT, it follows that in an optimum gadget no constraint will have a weight larger than 11. <p> An optimal LP solution yields an optimal ff-gadget (one where ff is as small as possible). In particular, (LP1) has optimal solution ff = 11, proving the optimality of the <ref> [25] </ref> gadget. 4.2 Non-approximability Results Using Gadgets We give gadgets reducing elements of PC to Cut, DiCut, and 2CSP. <p> Following <ref> [25] </ref>, we generalize the definition. 4.2. NON-APPROXIMABILITY RESULTS USING GADGETS 61 is always 0 is labelled 0. Definition 4.10 A gadget with auxiliary constant 0 is a gadget as previously defined, except that (4.1-4.4) are only required to hold when y 1 = 0. <p> Corollary 4.32 There exists a polynomial time 2:7214-approximate algorithm for Max Weight 3CSP. Corollary 4.33 PCP c;s [log; 3] P provided that c=s &gt; 2:7214. 4.4 Lower Bounds for Gadget Constructions In this section we shall show that some of the gadget constructions mentioned in this paper and in <ref> [25] </ref> are optimal, and we shall prove lower bounds for some other gadget constructions. The following result is useful to prove lower bounds for the RMBC family. <p> We don't know if there is any way of producing a simple reduction from, say, PC 0 to Max Cut that beats the gadget bound. A positive answer would imply a furtherly improved non-approximability result for Max Cut. 4.4.5 Free bits vs. Max Sat In <ref> [25] </ref> it has been shown that one can prove a hardness result for Min Vertex Cover using Lemma 4.2 and constructing appropriate gadgets. <p> Indeed, the definition of gadget can be easily adapted to deal with the syntactic structure of Min Vertex Cover (even if we gave the definition only for maximization problems). However, a stronger hardness result is proved in <ref> [25] </ref> in a different way: they note that the general reduction defined in [61] from PCP verifiers to Max Clique can be also seen as a reduction from PCP verifiers to Min Vertex Cover, and the efficiency of such reduction depends only on the free bit complexity of the verifier. <p> In this section, we will mainly deal with the unweighted and the polynomially bounded weighted version of these two problems. The following two lemmas can be proved by using arguments similar to the reduction between Max Clique and zero-free bit PCP given in <ref> [25] </ref> and the reduction between zero-free bit PCP and Max Clique implicitly given in [61], respectively. 2 Lemma 4.67 Min Vertex Cover 1 AP Min Sat. Proof: Let G = (V; E) be a graph. Fix an arbitrary total order in V (e.g. lexicographic order). <p> Bellare, Goldreich and Sudan <ref> [25] </ref> were the first to propose a concrete definition, that is also accompanied by a cost. Khanna and Sudan [103] gave a definition that is a bit more formal and that is identical to Definition 4.1 except that they do not consider weights. <p> Theorems 4.27 and 4.28 are from [131]. With reference to Theorem 4.20, the previous larger gap between the completeness and soundness achievable reading two bits was obtained starting from the hardness of Max 2Sat. It was 74=73 in <ref> [25] </ref>, and would be 22=21 " in light of H-astad's results. The previous best published analysis of a Max 3Sat approximation algorithm gave a 1:301 approximation factor [12]; a slightly better bound of 1:2499 could be obtained adapting the techniques of Goemans and Williamson [75]. <p> The previous best approximation factor achievable for Max 3CSP was 4 [131]. The only previous lower bound on gadget construction is by Bellare, Goldreich and Sudan <ref> [25] </ref>. They prove that if an ff-gadget exists reducing PC 0 to E3SAT, and the total weight of the clauses of the gadget is ff, then ff 4. They use probabilistic arguments. <p> They use probabilistic arguments. Reductions of weighted problems to their non-weighted versions are from a joint paper with Pierluigi Crescenzi and Riccardo Silvestri [49]. There is no comparable previous result, except for Max Weight Cut: Bellare, Goldreich and Sudan <ref> [25] </ref> give a reduction where each weighted edge of (integer) weight w is replaced by w length-three disjoint paths. w auxiliary vertices are introduced. The reduction works as a 3-gadget and considerably worsens non-approximability results. <p> A hardness result that uses Theorem 2.22 and a PCP verifier with perfect completeness cannot be better than 3=2 " (this is because a verifier with perfect completeness has to use at least log 3 free bits, see <ref> [25] </ref> and the discussion in [24]). Current bets are that the right threshold is 2, and significantly new ideas are needed to achieve such a hardness results. Non-approximability Result for Practical Problems. There is no known explicit non-approximability result for metric Min TSP, Min Steiner Tree and shortest common super-sequence.
Reference: [26] <author> Bellare, M., Goldwasser, S., Lund, C., and Russell, A. </author> <title> Efficient probabilistically checkable proofs and applications to approximation. </title> <booktitle> In Proceedings of the 25th ACM Symposium on Theory of Computing (1993), </booktitle> <pages> pp. 294-304. </pages> <note> See also the errata sheet in Proc of STOC'94. </note>
Reference-contexts: An optimized proof of the PCP Theorem was proved by Bellare, Goldwasser, Lund and Rus-sel <ref> [26] </ref>. Their result implies that Max Clique is hard to approximate within n 1=30" for any " &gt; 0 (from now on, " will always denote some arbitrarily small positive constant). Progress on the constant was fast. <p> The first explicit non-approximability result for Max Sat was established by Bellare, Gold-wasser, Lund and Russel <ref> [26] </ref>. They gave a proof of the PCP Theorem with an explicit description of the computations performed by the verifier and an explicit bound on the probability of accepting wrong proofs (also known as the soundness probability); correct proofs are accepted with probability one. <p> Once the computations of the verifier are encoded using small CNF formulae (as originally done in [9]), the non-approximability result implied for Max Sat can be computed as a function of the size of the CNF formulae and of the soundness probability. The hardness proved in <ref> [26] </ref> was 94=93. Further improvements were obtained using the same approach, but starting with a better version of the PCP Theorem (i.e. with simpler computation and/or with better soundness).
Reference: [27] <author> Bellare, M., and Sudan, M. </author> <title> Improved non-approximability results. </title> <booktitle> In Proceedings of the 26th ACM Symposium on Theory of Computing (1994), </booktitle> <pages> pp. 184-193. </pages>
Reference-contexts: This new idea implied an n 1=15" hardness result for Max Clique. Yet another refinement was proposed by Bellare and Sudan <ref> [27] </ref>, who introduced the notion of amortized free bits: a verifier uses f amortized free bits if it uses f free bits, accepts with probability one correct proofs, accepts with probability at most s wrong proofs, and f = f = log (1=s). <p> The hardness proved in [26] was 94=93. Further improvements were obtained using the same approach, but starting with a better version of the PCP Theorem (i.e. with simpler computation and/or with better soundness). Bellare and Sudan <ref> [27] </ref> proved a 73=72 hard factor, while Bellare, Goldreich and Sudan [25] arrived at 27=26: the current best result (perhaps tight) is 8=7 " by H-astad [80]. 8 CHAPTER 1.
Reference: [28] <author> Berman, P., and Fujito, T. </author> <title> On the approximation properties of the independent set problem in degree 3 graphs. </title> <booktitle> In Proceedings of the 4th Workshop on Algorithms and Data Structures (1995), </booktitle> <publisher> LNCS 955, Springer-Verlag, </publisher> <pages> pp. 449-460. </pages>
Reference-contexts: The reduction from PCP verifiers with low free bit complexity to Min Vertex Cover in bounded degree graph is from a joint paper with Andrea Clementi [42]. Previous results include the Max SNP-hardness of Min Vertex Cover in graphs of maximum degree 4 [123] and 3 <ref> [28] </ref>. 90 CHAPTER 4. TIGHT REDUCTIONS Chapter 5 Conclusions and Open Questions Plan, v.t. To bother about the best method of accom plishing an accidental result. (A. Bierce [31]) This thesis dealt with the hardness of combinatorial approximation problems. Structural results, non-approximability results and algorithmic results have been presented.
Reference: [29] <author> Berman, P., and Schnitger, G. </author> <title> On the complexity of approximating the independent set problem. </title> <booktitle> Information and Computation 96 (1992), </booktitle> <pages> 77-94. </pages> <note> Preliminary version in Proc. of STACS'89. BIBLIOGRAPHY 97 </note>
Reference-contexts: Interestingly, the APX-completeness of several natural problems has been recently established building on a previously proved non-approximability result. Thus, completeness followed from non-approximability instead of vice-versa. We will come back to this fact in the next section. More recently, other completeness results were obtained by Berman and Schnitger <ref> [29] </ref>, and Kann [93] in classes of problems with polynomially bounded measure function. The most influential work of this period was by Papadimitriou and Yannakakis [123], where a radically new approach was taken. <p> Papadimitriou and M. Yannakakis) The success of this approach was immediate and widespread. Other Max SNP-hard problems were soon discovered, including the restriction of Min TSP to metric spaces [122], Min Steiner Tree [30], Shortest Common Superstring [33], and Multiway Cut [52]. In related research Berman and Schnitger <ref> [29] </ref> proved that if Max SNP problems do not have a randomized PTAS, then Max Clique is hard to approximate within n c , for some c &gt; 0. Their result is proved using randomized graph product. <p> Progress on the constant was fast. The non-approximability result for Max Clique was obtained by developing a PCP verifier for NP that only queries 29 bits, and using a result of Zuckerman [136] (based on the randomized graph product technique of <ref> [29] </ref>) stating that if NP languages can be checked by querying q bits, then Max Clique is hard to approximate within n 1=(q+1)" . Subsequently, Feige and Kilian [62] observed that a more refined parameter than query complexity could be used. <p> STRUCTURE IN APPROXIMATION CLASSES 3.2 Completeness 3.2.1 NPO-complete problems In this section, we will prove that there are natural problems that are complete for the classes NPO and NPO PB. Previously, completeness results have been obtained just for Max NPO, Min NPO, Max PB, and Min PB <ref> [47, 118, 29, 93] </ref>. One example of such a result is the following theorem. <p> Theorem 3.18 Max PB 0 1 Programming and Min PB 0 1 Programming are NPO PB-complete. Proof: Max PB 0 1 Programming is known to be Max PB-complete <ref> [29] </ref> and Min PB 0 1 Programming is known to be Min PB-complete [93]. Thus we just have to show that there are AP-reductions from Min PB 0 1 Programming to Max PB 0 1 Programming and from Max PB 0 1 Programming to Min PB 0 1 Programming.
Reference: [30] <author> Bern, M., and Plassmann, P. </author> <title> The Steiner tree problem with edge lengths 1 and 2. </title> <booktitle> Information Processing Letters 32 (1989), </booktitle> <pages> 171-176. </pages>
Reference-contexts: Papadimitriou and M. Yannakakis) The success of this approach was immediate and widespread. Other Max SNP-hard problems were soon discovered, including the restriction of Min TSP to metric spaces [122], Min Steiner Tree <ref> [30] </ref>, Shortest Common Superstring [33], and Multiway Cut [52]. In related research Berman and Schnitger [29] proved that if Max SNP problems do not have a randomized PTAS, then Max Clique is hard to approximate within n c , for some c &gt; 0. <p> This problem is also APX-complete even if the degree is bounded by three. The bounded degree restriction of Min Vertex Cover is also used for proving APX-completeness of other problems, including shortest common superstring and Min Steiner Tree <ref> [33, 30] </ref>. The APX-completeness proof for Min Vertex Cover-B uses a reduction from Max 3Sat. The hardness factor becomes much worse in the reduction (roughly 200 times). <p> Gadget reductions cannot (seemingly) be used since such problems lack a clean logical definition. The APX-completeness of Min Steiner Tree is proved using a reduction from Min Vertex Cover in bounded-degree graphs <ref> [30] </ref> (actually, sparse graphs are good enough). To have a reasonable bound for this problem, an explicit hardness result is needed for, say Min Vertex Cover-4 or Min Vertex Cover-10. It is not clear how to get for this problems a bound close to the one guaranteed by Theorem 2.22.
Reference: [31] <author> Bierce, A. </author> <title> The Devil's Dictionary. </title> <publisher> Neale Publishing, </publisher> <year> 1911. </year>
Reference-contexts: INTRODUCTION Chapter 2 Background Symbol, n. Something that is supposed to typify or stand for something else. (: : : ) We cannot stop making them, but we can give them a name to conceal our helplessness. (A. Bierce <ref> [31] </ref>) We assume the reader to be familiar with the basic concepts of computational complexity theory. For the definitions of most of the complexity classes used in this thesis we refer the reader to one of the books on the subject (see, for example, [70, 20, 36, 120]). <p> Previous results include the Max SNP-hardness of Min Vertex Cover in graphs of maximum degree 4 [123] and 3 [28]. 90 CHAPTER 4. TIGHT REDUCTIONS Chapter 5 Conclusions and Open Questions Plan, v.t. To bother about the best method of accom plishing an accidental result. (A. Bierce <ref> [31] </ref>) This thesis dealt with the hardness of combinatorial approximation problems. Structural results, non-approximability results and algorithmic results have been presented. Unifying themes were the use of new types of approximation-preserving reducibilities, designed to overcome inherent limitations of previously known ones.
Reference: [32] <author> Blum, A., and Karger, D. </author> <title> An ~ O(n 3=14 ) coloring algorithm for 3-colorable graphs. </title> <journal> Information Processing Letters 61, </journal> <volume> 1 (1997), </volume> <pages> 49-53. </pages>
Reference-contexts: Coloring. Given a graph G and the promise that it is 3-colorable, it is possible to color it with n 0:2143 colors <ref> [95, 32] </ref>. On the other hand it is NP-hard to color it with less than 5 colors [100]. It is a widespread believing that it is hard to use even O (log n) colors, but it would be a good improvement even to prove hardness within any fixed constant.
Reference: [33] <author> Blum, A., Li, M., Tromp, J., and Yannakakis, M. </author> <title> Linear approximation of shortest superstrings. </title> <journal> Journal of the ACM 41, </journal> <volume> 4 (1994), </volume> <pages> 630-647. </pages>
Reference-contexts: Papadimitriou and M. Yannakakis) The success of this approach was immediate and widespread. Other Max SNP-hard problems were soon discovered, including the restriction of Min TSP to metric spaces [122], Min Steiner Tree [30], Shortest Common Superstring <ref> [33] </ref>, and Multiway Cut [52]. In related research Berman and Schnitger [29] proved that if Max SNP problems do not have a randomized PTAS, then Max Clique is hard to approximate within n c , for some c &gt; 0. Their result is proved using randomized graph product. <p> This problem is also APX-complete even if the degree is bounded by three. The bounded degree restriction of Min Vertex Cover is also used for proving APX-completeness of other problems, including shortest common superstring and Min Steiner Tree <ref> [33, 30] </ref>. The APX-completeness proof for Min Vertex Cover-B uses a reduction from Max 3Sat. The hardness factor becomes much worse in the reduction (roughly 200 times).
Reference: [34] <author> Bodlaender, H. </author> <title> Some classes of graphs with bounded treewidth. </title> <journal> Bulletin of the EATCS 36 (1988), </journal> <pages> 116-126. </pages>
Reference: [35] <author> Bodlaender, H. </author> <title> A linear time algorithm for finding tree-decompositions of small treewidth. </title> <booktitle> In Proceedings of the 25th ACM Symposium on Theory of Computing (1993), </booktitle> <pages> pp. 226-234. </pages>
Reference: [36] <author> Bovet, D., and Crescenzi, P. </author> <title> Introduction to the Theory of Complexity. </title> <publisher> Prentice Hall, </publisher> <year> 1993. </year>
Reference-contexts: Bierce [31]) We assume the reader to be familiar with the basic concepts of computational complexity theory. For the definitions of most of the complexity classes used in this thesis we refer the reader to one of the books on the subject (see, for example, <ref> [70, 20, 36, 120] </ref>). In this chapter we will review the definitions of a few approximation-preserving reducibilities, some facts about PCP's and query complexity, and we will define the problems that are mentioned throughout the thesis.
Reference: [37] <author> Bruschi, D., Joseph, D., and Young, P. </author> <title> A structural overview of NP optimization problems. </title> <booktitle> In Proceedings of Optimal Algorithms (1989), </booktitle> <publisher> LNCS 401, Springer-Verlag. </publisher>
Reference-contexts: Good accounts on the first attempts at developing approximation-preserving reductions and completeness in approximation classes are a survey by Bruschi, Joseph and Young <ref> [37] </ref>, Kann's PhD thesis [92], and a more recent survey by Ausiello, Crescenzi and Protasi [13]. Max SNP-completeness theory is treated very broadly in Papadim-itriou's book on computational complexity [120].
Reference: [38] <author> Cai, J., Gundermann, T., Hartmanis, J., Hemachandra, L., Swelson, V., Wagner, K., and Wechsung, G. </author> <title> The boolean hierarchy I: Structural properties. </title> <journal> SIAM Journal on Computing 17, </journal> <volume> 6 (1988), </volume> <pages> 1232-1252. </pages>
Reference-contexts: The class QH (for Query Hierarchy) is equal to the union S q1 P NP [q] . We also let P NP def = P NP [n O (1) ] . The query hierarchy equals the boolean hierarchy, that has been the object of extensive studies (see <ref> [38] </ref> and the references therein). Here we are interested in separation results for query complexity classes. The following result is due to Kadin. Theorem 2.25 ([90, 91]) If a constant q exists such that QH = P NP [q] ; then the polynomial-time hierarchy collapses. 24 CHAPTER 2.
Reference: [39] <author> Chang, R. </author> <title> A machine model for NP-approximation problems and the revenge of the boolean hierarchy. </title> <note> Bulletin of the EATCS 54 (1994). </note>
Reference-contexts: The importance of these results is twofold: they give new insights into the structure of complete problems for approximation classes and they reconcile the approach based on standard computation models with the approach based on the computation model for approximation proposed in <ref> [39] </ref>. As a final observation, our results can be seen as extensions of a result of [102] in which general sufficient (but not necessary) conditions for APX-completeness are proved. <p> It is worth observing that, in general, an approximate solution, even though not very helpful, cannot be computed with less than a logarithmic number of queries <ref> [39] </ref>. Proposition 3.41 For any problem A in APX, AQH (A) QH. Proof: Assume that A is a maximization problem (the proof for minimization problems is similar). Let T be an r-approximate algorithm for A, for some r &gt; 1, and let L 2 P A for some &gt; 1. <p> Theorem 3.44 For any APX-complete problem A, AQH (A) = QH. An alternative approach to relate query complexity and approximability is to define bounded query classes of multivalued functions and then "place" approximation problems into such classes. This approach has been introduced by Chang <ref> [39] </ref>. We shall give a full characterization of problems complete for polyAPX and for APX, respectively, in terms of hardness of the corresponding approximation problems in Chang's classes and of suitably defined combinatorial properties. 50 CHAPTER 3. STRUCTURE IN APPROXIMATION CLASSES Definition 3.45 ([39]) NPF NP [q (n)] is the class <p> at most q (n) queries to an NP oracle in the entire computation tree. 2 In order to talk about hardness with respect to these classes we will use the following reducibility which is an extension of both metric reducibility [90] and one-query reducibility [48] and has been introduced in <ref> [39] </ref>. Definition 3.46 (MV reducibility) Let F and G be two partial multi-valued functions. <p> It is then sufficient to prove that A 2 is hard for NPF NP [log log n+O (1)] . From the poly-APX-completeness of A we have that Max Clique AP A: let ff be the constant of this reduction. From Theorem 12 of <ref> [39] </ref> we have that any function F in NPF NP [log log n+O (1)] many-one reduces to Max Clique 1+ff . From the definition of AP-reducibility, we also have that Max Clique 1+ff mv A 2 so that F many-one reduces to A 2 . <p> From the proof of Theorem 12 of <ref> [39] </ref> it follows that this function is NPF NP [log log n+O (1)] -complete. <p> In [46] we extended their approach allowing to measure the complexity of generating (instead of evaluating) approximate solutions. The classes NPF NP [] were introduced in a survey paper by Chang <ref> [39] </ref>, as a means of restating the results of a preliminary version of [46]. 56 CHAPTER 3.
Reference: [40] <author> Chang, R. </author> <title> On the query complexity of clique size and maximum satisfiability. </title> <journal> Journal of Computer and System Sciences 53, </journal> <volume> 2 (1996), </volume> <pages> 298-313. </pages> <note> Preliminary version in Proc. of Structures'94. </note>
Reference-contexts: The KMSV reduction technique transforms several hardness results into completeness results and definitely collapses the approach based on logical definability with standard complexity classes. Unfortunately, it only works inside polynomially bounded approximation classes. In a different line of research, Chang, Gasarch and Lund <ref> [41, 40] </ref> use the PCP Theorem to investigate the query complexity of approximation problems. For example, H-astad's result implies that it is NP-hard to approximate Max Sat within a 1:142 factor. <p> We don't known how to prove our results (2) without using query complexity, and it is strange that such an esoteric complexity-theoretic concept has something to do with a basic algorithmic property like self-improvability. The third result solves an open question raised by Chang <ref> [40] </ref>. Technical Contributions. We extend the query complexity approach to deal with the problem of computing an approximate solution for an optimization problem. Previous results [41, 40] dealt with the problem of approximately evaluating the optimum. <p> The third result solves an open question raised by Chang [40]. Technical Contributions. We extend the query complexity approach to deal with the problem of computing an approximate solution for an optimization problem. Previous results <ref> [41, 40] </ref> dealt with the problem of approximately evaluating the optimum. <p> As a final observation, our results can be seen as extensions of a result of [102] in which general sufficient (but not necessary) conditions for APX-completeness are proved. We apply our query complexity results proving the existence of natural APX-intermediate problems, solving an open question of Chang <ref> [40] </ref> about the approximability of Max Clique, and proving that the Min Set Cover problem is not self-improvable (all the results assume that the polynomial hierarchy does not collapse). 3.1 Reducibilities In this section we shall define a new approximation preserving reducibility. <p> to do the derandomization, and a (1 + " 0 )-approximate solution for ' 0 can be found in NC using Theorem 3.38. * 3.4 Query Complexity The query-complexity of the "non-constructive" approximation of several NP-hard optimization problems has been studied and classified using classes of functions PF NP [] <ref> [40, 41] </ref>. However, this approach cannot be applied to analyze the complexity of "constructing" approximate solutions. To overcome this limitation, we use a novel approach that basically consists of considering how helpful is an approximation algorithm for a given optimization problem to solve decision problems. <p> can then partition the interval [m; rm] into blog rc + 1 subintervals [m; m); [m; 2 m); : : :; [ blog rc1 m; blog rc m]; [ blog rc m; rm]; and start looking for the subinterval containing the optimum value (a similar technique has been used in <ref> [40, 41] </ref>). This can clearly be done using blog rc + 1 queries to an NP-complete oracle. One more query is sufficient to know whether a feasible solution y exists whose value lies in that interval and such that g (x; y) = 1. <p> where MC stands for Max Clique [107], and from the fact that if a constant k exists such that P NP [log log n+k] = P NP [log n] ; then the polynomial-time hierarchy collapses (see Theorem 2.26), it follows the next result that solves an open question posed in <ref> [40] </ref>. Informally, this result states that it is not possible to reduce the problem of finding a maximum clique to the problem of finding a 2-approximate clique (unless the polynomial-time hierarchy collapses). Theorem 3.56 If P MC 1 P MC 2 then the polynomial-time hierarchy collapses. 3.6. <p> The proof of Theorem 3.36 is folklore and has been explained to me by Sanjeev Khanna. The study of query complexity as a yardstick for the hardness of approximation problems was initiated by Chang, Gasarch and Lund <ref> [41, 40] </ref>. In [46] we extended their approach allowing to measure the complexity of generating (instead of evaluating) approximate solutions. The classes NPF NP [] were introduced in a survey paper by Chang [39], as a means of restating the results of a preliminary version of [46]. 56 CHAPTER 3.
Reference: [41] <author> Chang, R., Gasarch, W. I., and Lund, C. </author> <title> On bounded queries and approximation. </title> <journal> SIAM Journal on Computing 26, </journal> <volume> 1 (1997), </volume> <pages> 188-209. </pages> <note> Preliminary version in Proc. of FOCS'93. </note>
Reference-contexts: The KMSV reduction technique transforms several hardness results into completeness results and definitely collapses the approach based on logical definability with standard complexity classes. Unfortunately, it only works inside polynomially bounded approximation classes. In a different line of research, Chang, Gasarch and Lund <ref> [41, 40] </ref> use the PCP Theorem to investigate the query complexity of approximation problems. For example, H-astad's result implies that it is NP-hard to approximate Max Sat within a 1:142 factor. <p> The third result solves an open question raised by Chang [40]. Technical Contributions. We extend the query complexity approach to deal with the problem of computing an approximate solution for an optimization problem. Previous results <ref> [41, 40] </ref> dealt with the problem of approximately evaluating the optimum. <p> to do the derandomization, and a (1 + " 0 )-approximate solution for ' 0 can be found in NC using Theorem 3.38. * 3.4 Query Complexity The query-complexity of the "non-constructive" approximation of several NP-hard optimization problems has been studied and classified using classes of functions PF NP [] <ref> [40, 41] </ref>. However, this approach cannot be applied to analyze the complexity of "constructing" approximate solutions. To overcome this limitation, we use a novel approach that basically consists of considering how helpful is an approximation algorithm for a given optimization problem to solve decision problems. <p> can then partition the interval [m; rm] into blog rc + 1 subintervals [m; m); [m; 2 m); : : :; [ blog rc1 m; blog rc m]; [ blog rc m; rm]; and start looking for the subinterval containing the optimum value (a similar technique has been used in <ref> [40, 41] </ref>). This can clearly be done using blog rc + 1 queries to an NP-complete oracle. One more query is sufficient to know whether a feasible solution y exists whose value lies in that interval and such that g (x; y) = 1. <p> The proof of Theorem 3.36 is folklore and has been explained to me by Sanjeev Khanna. The study of query complexity as a yardstick for the hardness of approximation problems was initiated by Chang, Gasarch and Lund <ref> [41, 40] </ref>. In [46] we extended their approach allowing to measure the complexity of generating (instead of evaluating) approximate solutions. The classes NPF NP [] were introduced in a survey paper by Chang [39], as a means of restating the results of a preliminary version of [46]. 56 CHAPTER 3.
Reference: [42] <author> Clementi, A., and Trevisan, L. </author> <title> Improved non-approximability results for vertex cover with density constraints. </title> <booktitle> In Proceedings of 2nd Computing and Combinatorics Conference (1996), </booktitle> <publisher> LNCS 1090, Springer-Verlag, </publisher> <pages> pp. 333-342. </pages>
Reference-contexts: The reduction from PCP verifiers with low free bit complexity to Min Vertex Cover in bounded degree graph is from a joint paper with Andrea Clementi <ref> [42] </ref>. Previous results include the Max SNP-hardness of Min Vertex Cover in graphs of maximum degree 4 [123] and 3 [28]. 90 CHAPTER 4. TIGHT REDUCTIONS Chapter 5 Conclusions and Open Questions Plan, v.t. To bother about the best method of accom plishing an accidental result. (A.
Reference: [43] <author> Condon, A. </author> <title> The complexity of the max-word problem and the power of one-way interactive proof systems. </title> <booktitle> Computational Complexity 3 (1993), </booktitle> <pages> 292-305. </pages> <note> Preliminary version in Proc. of STACS91. </note>
Reference-contexts: Assuming that NP has no subexponential algorithms, it turns out that Max Clique is hard to approximate to within 2 log 1" n for any " &gt; 0. The connection between proof checking and approximation was also pioneered in a paper by Condon <ref> [43] </ref>. After that, progress was fast. In a seminal paper, Arora and Safra [10] noted that to improve the FGLSS result it was not necessary to bound the running time of the verifier but only the number of random bits and the number of query bits that it uses.
Reference: [44] <author> Cook, S. </author> <title> The complexity of theorem proving procedures. </title> <booktitle> In Proceedings of the 3rd ACM Symposium on Theory of Computing (1971), </booktitle> <pages> pp. 151-158. </pages>
Reference-contexts: On the other hand, for the majority of interesting problems, including the Min TSP, there seemed to be no way to efficiently find optimum solutions. Eventually, the theory of NP-completeness <ref> [44, 97, 111] </ref> came up giving an explanation to this phenomenon and providing a unified framework to deal with the intractability of optimization problems. <p> following non-deterministic polynomial-time algorithm. begin finput: x 2 I A g compute m x by using the r-approximate algorithm for B and the L-reduction from A to B; guess y 2 sol A (x); if m A (x; y) m x then accept else reject; end; By applying Cook's reduction <ref> [44] </ref> to the above algorithm, it easily follows that, for any x 2 I A , a satisfiable Boolean formula ' x can be constructed in polynomial time in the length of x so that any satisfying assignment for ' x encodes a solution of x whose measure is at least <p> For any i = 0; : : : ; k 1, let us consider the NP problem of deciding whether opt A (x) r i n t A (x). Using the proof of Cook's Theorem <ref> [44] </ref>, we can find a boolean formula ' i such that given a truth assignment t i that satisfies ' i we can compute in polynomial time a solution y 2 sol A (x) such that m A (x; y) r i n t A (x). <p> 2 ; fl)-OR disperser (and thus an (n 1 ; n 2 ; ")-switcher) and its maximum degree is O ((n 1 + n 2 )=n 2 " 2 ). * 4.8 Attributions and Related Works Gadgets arose in NP-completeness proofs starting with the original works of Cook and Karp <ref> [44, 97] </ref>. Bellare, Goldreich and Sudan [25] were the first to propose a concrete definition, that is also accompanied by a cost. Khanna and Sudan [103] gave a definition that is a bit more formal and that is identical to Definition 4.1 except that they do not consider weights.
Reference: [45] <author> Crescenzi, P., and Kann, V. </author> <title> A compendium of NP optimization problems. </title> <type> Tech. Rep. TR SI-95/02, </type> <institution> Universita di Roma "La Sapienza", Dipartimento di Scienze dell'Informazione, </institution> <year> 1995. </year> <note> Updated on-line version is available at the URL http://www.nada.kth.se/~viggo/problemlist/compendium.html. </note>
Reference-contexts: Moreover, if Q is a class of functions, then PF NP [Q] = S 2.5 Definition of the Problems Here we give the definitions of all the problems that are mentioned in the thesis. Following the format of the compendium of Crescenzi and Kann <ref> [45] </ref>, we define for every problem the set of instances, the set of feasible solutions for a given instance and the objective function.
Reference: [46] <author> Crescenzi, P., Kann, V., Silvestri, R., and Trevisan, L. </author> <title> Structure in approximation classes. </title> <booktitle> In Proceedings of the 1st Combinatorics and Computing Conference (1995), </booktitle> <publisher> LNCS 959, Springer-Verlag, </publisher> <pages> pp. 539-548. 98 BIBLIOGRAPHY </pages>
Reference-contexts: The comparison of different previous definitions of approximation-preserving reducibilities, the definition of AP-reducibility and the completeness results in NPO and NPO PB are from a joint paper with Pierluigi Crescenzi, Viggo Kann and Riccardo Silvestri <ref> [46] </ref>. The results of Section 3.3 have been obtained jointly with Pierluigi Crescenzi [51]. Lemma 3.28 has been proved in [50] using the PCP Theorem. The PCP-free proof given here is from [51]. <p> The proof of Theorem 3.36 is folklore and has been explained to me by Sanjeev Khanna. The study of query complexity as a yardstick for the hardness of approximation problems was initiated by Chang, Gasarch and Lund [41, 40]. In <ref> [46] </ref> we extended their approach allowing to measure the complexity of generating (instead of evaluating) approximate solutions. The classes NPF NP [] were introduced in a survey paper by Chang [39], as a means of restating the results of a preliminary version of [46]. 56 CHAPTER 3. <p> In <ref> [46] </ref> we extended their approach allowing to measure the complexity of generating (instead of evaluating) approximate solutions. The classes NPF NP [] were introduced in a survey paper by Chang [39], as a means of restating the results of a preliminary version of [46]. 56 CHAPTER 3.
Reference: [47] <author> Crescenzi, P., and Panconesi, A. </author> <title> Completeness in approximation classes. </title> <booktitle> Information and Computation 93 (1991), </booktitle> <pages> 241-262. </pages> <note> Preliminary version in Proc. of FCT'89. </note>
Reference-contexts: The seminal work of Orponen and Manilla [118] defined approximation-preserving reducibilities and contained completeness results in Min NPO 4 . For the first time, it was observed that a completeness result in an approximation class (under an approximation-preserving reducibility) implies a non-approximability result. Crescenzi and Panconesi <ref> [47] </ref> extended this idea to other classes, and gave completeness results in Max NPO and APX. Completeness in APX is a particularly interesting notion. <p> Once the first APX-completeness result is established, one has only to use reductions to prove more completeness results. Unfortunately, the APX-complete problem described in <ref> [47] </ref> is artificial, and no natural complete problem had since been found for a long time. Interestingly, the APX-completeness of several natural problems has been recently established building on a previously proved non-approximability result. Thus, completeness followed from non-approximability instead of vice-versa. <p> More dramatically, the closure of Max SNP under L-reductions con tains non-approximable problems. Both results are proved assuming P 6= NP " co-NP. 2. Max Sat is not APX-complete under E-reductions (used by Khanna et al. [102]) nor under P-reductions (used by Crescenzi and Panconesi <ref> [47] </ref>), unless P NP = P NP [O (log n)] (a fairly unlikely event). 3. Max Sat is not even APX PB-complete under L-reductions (unless P = NP). The first result contradicts a wide-spread belief. <p> STRUCTURE IN APPROXIMATION CLASSES 3.2 Completeness 3.2.1 NPO-complete problems In this section, we will prove that there are natural problems that are complete for the classes NPO and NPO PB. Previously, completeness results have been obtained just for Max NPO, Min NPO, Max PB, and Min PB <ref> [47, 118, 29, 93] </ref>. One example of such a result is the following theorem. <p> Motivated by this result, we introduced the PTAS-reducibility and we used it to prove the APX-completeness of Max 3Sat. The latter result was obtained by combining a less general version of Theorem 3.22, the results of Khanna et al. and a result of Crescenzi and Panconesi <ref> [47] </ref>. The proof of Theorem 3.21 and the version of Theorem 3.22 given in this chapter are new.
Reference: [48] <author> Crescenzi, P., and Silvestri, R. </author> <title> Relative complexity of evaluating the optimum cost and constructing the optimum for maximization problems. </title> <booktitle> Information Processing Letters 33 (1990), </booktitle> <pages> 221-226. </pages>
Reference-contexts: nondeterministic polynomial-time Turing machines which ask at most q (n) queries to an NP oracle in the entire computation tree. 2 In order to talk about hardness with respect to these classes we will use the following reducibility which is an extension of both metric reducibility [90] and one-query reducibility <ref> [48] </ref> and has been introduced in [39]. Definition 3.46 (MV reducibility) Let F and G be two partial multi-valued functions.
Reference: [49] <author> Crescenzi, P., Silvestri, R., and Trevisan, L. </author> <title> To weight or not to weight: </title> <booktitle> Where is the question? In Proceedings of the 4th IEEE Israel Symposium on Theory of Computing and Systems (1996), </booktitle> <pages> pp. 68-77. </pages>
Reference-contexts: They use probabilistic arguments. Reductions of weighted problems to their non-weighted versions are from a joint paper with Pierluigi Crescenzi and Riccardo Silvestri <ref> [49] </ref>. There is no comparable previous result, except for Max Weight Cut: Bellare, Goldreich and Sudan [25] give a reduction where each weighted edge of (integer) weight w is replaced by w length-three disjoint paths. w auxiliary vertices are introduced. <p> The reduction works as a 3-gadget and considerably worsens non-approximability results. There was no previous result for Max Weight Sat versus Max Simple Sat and Max Weight 2SAT versus Max Simple 2SAT. In the same paper <ref> [49] </ref> we also proved the equivalence between Min Sat and Min Vertex Cover (also independently obtained in [117, 82]) and between them and their weighted versions.
Reference: [50] <author> Crescenzi, P., and Trevisan, L. </author> <title> On approximation scheme preserving reducibility and its applications. </title> <booktitle> In Proceedings of 14th Conference on Foundations of Software Technology and Theoretical Computer Science (1994), </booktitle> <publisher> LNCS 880, Springer-Verlag, </publisher> <pages> pp. 330-341. </pages>
Reference-contexts: For fixed r &gt; 1, the running time of T (x; r) is polynomial in jxj. Non-constructive approximation for minimization problems is defined similarly. Note that if a problem is in PTAS then it admits a non-constructive PTAS, but the converse is not necessarily true (see <ref> [50] </ref>). Lemma 3.27 PCP (log n; 1) = P if and only if Max 3Sat admits a non-constructive PTAS. Proof: The "if" part is a restating of the standard reduction from PCP verifiers to Max 3Sat (see [9]). The other direction is more interesting. We use ideas from [50]. <p> true (see <ref> [50] </ref>). Lemma 3.27 PCP (log n; 1) = P if and only if Max 3Sat admits a non-constructive PTAS. Proof: The "if" part is a restating of the standard reduction from PCP verifiers to Max 3Sat (see [9]). The other direction is more interesting. We use ideas from [50]. For any 1=2 s &lt; c 1 let Gap 3Sat c;s be the following promise problem: given a 3SAT formula ' with m clauses, reject if opt (') sm and accept if opt (') cm. <p> The idea of "scaling weights" to avoid the restriction to polynomially bounded classes was also suggested. In a joint work with Pierluigi Crescenzi <ref> [50] </ref> we restricted our attention to APX, and we proved that the APX PB-completeness of Max 3Sat could not be extended to an APX-completeness result using known definitions of approximation preserving reducibility (Proposition 3.10). <p> The results of Section 3.3 have been obtained jointly with Pierluigi Crescenzi [51]. Lemma 3.28 has been proved in <ref> [50] </ref> using the PCP Theorem. The PCP-free proof given here is from [51]. Polynomial time approximation schemes for a large variety of planar constraint satisfaction problems have been developed by Khanna and Motwani [101].
Reference: [51] <author> Crescenzi, P., and Trevisan, L. </author> <title> MAX NP-completeness made easy. </title> <type> Manuscript, </type> <year> 1996. </year>
Reference-contexts: The comparison of different previous definitions of approximation-preserving reducibilities, the definition of AP-reducibility and the completeness results in NPO and NPO PB are from a joint paper with Pierluigi Crescenzi, Viggo Kann and Riccardo Silvestri [46]. The results of Section 3.3 have been obtained jointly with Pierluigi Crescenzi <ref> [51] </ref>. Lemma 3.28 has been proved in [50] using the PCP Theorem. The PCP-free proof given here is from [51]. Polynomial time approximation schemes for a large variety of planar constraint satisfaction problems have been developed by Khanna and Motwani [101]. <p> The results of Section 3.3 have been obtained jointly with Pierluigi Crescenzi <ref> [51] </ref>. Lemma 3.28 has been proved in [50] using the PCP Theorem. The PCP-free proof given here is from [51]. Polynomial time approximation schemes for a large variety of planar constraint satisfaction problems have been developed by Khanna and Motwani [101]. Hunt et al. [85] developed NC approximation schemes for planar constraint satisfaction problems were each constraint depends on at most a constant number of variables.
Reference: [52] <author> Dahlhaus, E., Johnson, D., Papadimitriou, C., Seymour, P., and Yannakakis, M. </author> <title> The complexity of multi-way cuts. </title> <journal> SIAM Journal on Computing 23 (1994), </journal> <pages> 864-894. </pages>
Reference-contexts: Papadimitriou and M. Yannakakis) The success of this approach was immediate and widespread. Other Max SNP-hard problems were soon discovered, including the restriction of Min TSP to metric spaces [122], Min Steiner Tree [30], Shortest Common Superstring [33], and Multiway Cut <ref> [52] </ref>. In related research Berman and Schnitger [29] proved that if Max SNP problems do not have a randomized PTAS, then Max Clique is hard to approximate within n c , for some c &gt; 0. Their result is proved using randomized graph product.
Reference: [53] <author> Davenport, H. </author> <title> Multiplicative Number Theory. </title> <publisher> Springer-Verlag, </publisher> <year> 1980. </year> <note> Second Edition. </note>
Reference-contexts: MIXING GRAPHS, MIXING SETS AND SWITCHERS 85 Theorem 4.79 (Prime Numbers Theorem) If b and c are co-prime, then lim b;c (n) = '(b) The above theorem is due to Dirichlet, Hadamard, and de la Vallee Poussin, and a proof can be found in <ref> [53] </ref>. Let now l b;c (n) be the smallest prime p n such that p c (mod b).
Reference: [54] <author> Dijkstra, E. </author> <title> A note on two problems in connexion with graphs. </title> <booktitle> Numeriske Mathematik 1 (1959), </booktitle> <pages> 269-271. </pages>
Reference-contexts: Nevertheless, for some problems, clever algorithms can be found that efficiently 1 compute an optimum solution. Some of these algorithms were among the best early achievements of algorithmics: Kruskal's algorithm for finding a minimum cost spanning tree [108], Dijkstra's algorithm for finding shortest paths in a graph <ref> [54] </ref>, Edmond and Karp's version of Ford and Fulkerson's algorithm for maximum flow [65, 55], and so on. On the other hand, for the majority of interesting problems, including the Min TSP, there seemed to be no way to efficiently find optimum solutions.
Reference: [55] <author> Edmonds, J., and Karp, R. </author> <title> Theoretical improvements in algorithmic efficiency for network flow problem. </title> <journal> Journal of the ACM 19, </journal> <volume> 2 (1972), </volume> <pages> 248-264. </pages>
Reference-contexts: Some of these algorithms were among the best early achievements of algorithmics: Kruskal's algorithm for finding a minimum cost spanning tree [108], Dijkstra's algorithm for finding shortest paths in a graph [54], Edmond and Karp's version of Ford and Fulkerson's algorithm for maximum flow <ref> [65, 55] </ref>, and so on. On the other hand, for the majority of interesting problems, including the Min TSP, there seemed to be no way to efficiently find optimum solutions.
Reference: [56] <author> Even, G., Naor, J., Rao, S., and Schieber, B. </author> <title> Divide-and conquer approximation algorithms via spreading metrics. </title> <booktitle> In Proceedings of the 36th IEEE Symposium on Foundations of Computer Science (1995), </booktitle> <pages> pp. 62-71. </pages>
Reference-contexts: For example Min Edge Deletion Bipartite Subgraph, that is O (log n)-approximable using the approximate max-flow min-cut theorem [110, 72, 112], and Min Feedback Vertex Set, Min Linear Arrangment, Min Clause Deletion 2SAT, that are O (log n log log n)-approximable using the spreading metric approach <ref> [57, 56] </ref>. The Min Linear Arrangment problem is not even known to be Max SNP-hard.
Reference: [57] <author> Even, G., Naor, J., Schieber, B., and Sudan, M. </author> <title> Approximating minimum feedback sets and multicuts in directed graphs. </title> <booktitle> In Proceedings of the 4th Conference on Integer Programming and Combinatorial Optimization (1995), </booktitle> <pages> pp. 14-28. </pages>
Reference-contexts: For example Min Edge Deletion Bipartite Subgraph, that is O (log n)-approximable using the approximate max-flow min-cut theorem [110, 72, 112], and Min Feedback Vertex Set, Min Linear Arrangment, Min Clause Deletion 2SAT, that are O (log n log log n)-approximable using the spreading metric approach <ref> [57, 56] </ref>. The Min Linear Arrangment problem is not even known to be Max SNP-hard.
Reference: [58] <author> Fagin, R. </author> <title> Generalized first-order spectra and polynomial-time recognizable sets. </title> <booktitle> In SIAM-AMS Proceedings (1974), </booktitle> <pages> pp. 43-73. </pages>
Reference-contexts: Instead of searching for complete problems in natural (compu-tationally defined) approximation classes, they focused on natural problems and found a reasonable class where these problems are complete. Their starting point is Fagin's <ref> [58] </ref> logical characterization of NP. They obtained a class of APX optimization problems by introducing a notion of optimization in Fagin's characterization, and called this class Max NP. It captures several problems, including Max Sat, but they could not find a complete problem.
Reference: [59] <author> Feige, U. </author> <title> A threshold of ln n for approximating set cover. </title> <booktitle> In Proceedings of the 28th ACM Symposium on Theory of Computing (1996), </booktitle> <pages> pp. 314-318. </pages>
Reference-contexts: Their result heavily builds upon the " amortized free bits verifier by H-astad. The tight result for Min Set Cover is by Feige <ref> [59] </ref>, who proved that it is hard to approximate this problem to within (1 ") ln n, matching the positive result by Johnson [88]. The first explicit non-approximability result for Max Sat was established by Bellare, Gold-wasser, Lund and Russel [26].
Reference: [60] <author> Feige, U., and Goemans, M. </author> <title> Approximating the value of two provers proof systems, with applications to MAX 2SAT and MAX DICUT. </title> <booktitle> In Proceedings of the 3rd IEEE Israel Symposium on Theory of Computing and Systems (1995), </booktitle> <pages> pp. 182-189. </pages>
Reference-contexts: Feige and Lovasz [64] use semidefinite programming relaxations of optimization problems to investigate the power of two-provers one-round probabilistic proof systems. Probabilistic proof systems are at the core of almost all non-approximability results of the literature. Feige and Goemans <ref> [60] </ref> used the same relaxations to give the best known approximation algorithms for Max DiCut 3 and Max 2Sat. 2. The best known approximation algorithm for Max 3Sat uses a reduction to Max 2Sat, and then applies the previously mentioned Feige and Goemans' algorithm. <p> Additionally, a great deal of trickery is required in the construction (discovery?) of these combinatorial objects, and the work has to be done, essentially from scratch, every time a new PCP 1.2. THE RESULTS OF THIS THESIS 13 Problem Hard factor Best approximation Max 2Sat 1:047 [25, 80] 1:074 <ref> [60] </ref> Max Sat 1:142 [80] 1:319 [74, 75] Max DiCut 1:083 (1:055 [25, 80]) 1:169 [60] Max 2CSP 1:111 (1:047 [25, 80]) 1:169 [60] Min Vertex Cover 1:166 [80] 2 [73] Table 1.1: Positive and negative approximability results for some constraint satisfaction problems. <p> THE RESULTS OF THIS THESIS 13 Problem Hard factor Best approximation Max 2Sat 1:047 [25, 80] 1:074 <ref> [60] </ref> Max Sat 1:142 [80] 1:319 [74, 75] Max DiCut 1:083 (1:055 [25, 80]) 1:169 [60] Max 2CSP 1:111 (1:047 [25, 80]) 1:169 [60] Min Vertex Cover 1:166 [80] 2 [73] Table 1.1: Positive and negative approximability results for some constraint satisfaction problems. <p> THE RESULTS OF THIS THESIS 13 Problem Hard factor Best approximation Max 2Sat 1:047 [25, 80] 1:074 <ref> [60] </ref> Max Sat 1:142 [80] 1:319 [74, 75] Max DiCut 1:083 (1:055 [25, 80]) 1:169 [60] Max 2CSP 1:111 (1:047 [25, 80]) 1:169 [60] Min Vertex Cover 1:166 [80] 2 [73] Table 1.1: Positive and negative approximability results for some constraint satisfaction problems. <p> It is remarkable that the gadget that we obtain is twice better than the gadget of the Max 2Sat NP-completeness result of [71]. Using this new reduction in combination with a technique of Goemans and Williamson [75] and the 1:074-approximation algorithm for Max 2Sat due to Feige and Goemans <ref> [60] </ref>, we obtain a 1:249-approximation algorithm for Max 3Sat. The best result that could be obtained previously, by combining the techniques of [74, 75] and the bound of [60], was 1:299. (see also the 1:301-approximation algorithm in the paper of Ono, Hirata and Asano [12]). <p> in combination with a technique of Goemans and Williamson [75] and the 1:074-approximation algorithm for Max 2Sat due to Feige and Goemans <ref> [60] </ref>, we obtain a 1:249-approximation algorithm for Max 3Sat. The best result that could be obtained previously, by combining the techniques of [74, 75] and the bound of [60], was 1:299. (see also the 1:301-approximation algorithm in the paper of Ono, Hirata and Asano [12]). Similarly, we construct a gadget reducing Max 3CSP to Max 2Sat and, using Feige and Goemans' algorithm, we obtain a 2:721-approximate algorithm for Max 3CSP. <p> Theorem 4.19 For every fl &gt; 0, Max 2CSP is hard to approximate to within 10=9 fl. Max Weight 2CSP can be approximated within 1:169 <ref> [60] </ref>. The above theorem has implications for probabilistically checkable proofs. Using the well known reduction from constraint satisfaction problems to probabilistically checkable proofs, Theorem 4.19 implies the following the orem. <p> Lemma 4.22 <ref> [60] </ref> There exists a polynomial-time (:976; :931) approximation algorithm for Max Weight 2SAT. 4.3.1 The Max 3Sat problem In this section we show how to derive an improved approximation algorithm for Max Weight 3SAT. <p> By restricting techniques in [75] from Max Weight Sat to Max Weight 3SAT and using a 1:074-approximation algorithm for Max Weight 2SAT due to Feige and Goemans <ref> [60] </ref>, one can obtain a 1:299-approximation algorithm for Max Weight 3SAT.
Reference: [61] <author> Feige, U., Goldwasser, S., Lov asz, L., Safra, S., and Szegedy, M. </author> <title> Interactive proofs and the hardness of approximating cliques. </title> <journal> Journal of the ACM 43, </journal> <volume> 2 (1996), </volume> <pages> 268-292. </pages> <note> Preliminary version in Proc. of FOCS91. </note>
Reference-contexts: The next logical step was to scale down the theorem and proving that any NP language has membership proofs checkable in polylogarithmic time. This was done by Babai, Fortnow, Levin and Szegedy [16]. Almost simultaneously, Feige, Goldwasser, Lovasz, Safra and Szegedy <ref> [61] </ref> gave an improved proof checking system for NP (running in O (log n log log n) time) and discovered (invented?) the reduction that was to revolutionize the field of approximation. <p> The FGLSS reduction <ref> [61] </ref> and the reduction in [9] are paradigmatic in this respect. Finding the Best Possible Gadgets Constraint satisfaction problems are generalizations of the Max Sat problem. <p> The following theorem shows that the existence of efficient verifiers for any NP problem implies a non-approximability result for Min Vertex Cover. 2.4. QUERY COMPLEXITY 23 Theorem 2.22 (Non-approximability of Min Vertex Cover <ref> [61, 25] </ref>) Let us assume that NP FPCP c;s [log; f; q]. <p> Then we put an edge between u and v if and only if u and v are not consistent. It is possible to show (see <ref> [61] </ref>) that there is an independent set in G ' with at least k nodes if and only if there exists a proof for ' that makes the verifier accept at least k times over r (i.e. with probability k=r). <p> However, a stronger hardness result is proved in [25] in a different way: they note that the general reduction defined in <ref> [61] </ref> from PCP verifiers to Max Clique can be also seen as a reduction from PCP verifiers to Min Vertex Cover, and the efficiency of such reduction depends only on the free bit complexity of the verifier. <p> The following two lemmas can be proved by using arguments similar to the reduction between Max Clique and zero-free bit PCP given in [25] and the reduction between zero-free bit PCP and Max Clique implicitly given in <ref> [61] </ref>, respectively. 2 Lemma 4.67 Min Vertex Cover 1 AP Min Sat. Proof: Let G = (V; E) be a graph. Fix an arbitrary total order in V (e.g. lexicographic order). We define an instance of Min Sat as follows.
Reference: [62] <author> Feige, U., and Kilian, J. </author> <title> Two prover protocols low error at affordable rates. </title> <booktitle> In Proceedings of the 26th ACM Symposium on Theory of Computing (1994), </booktitle> <pages> pp. 172-183. </pages>
Reference-contexts: Subsequently, Feige and Kilian <ref> [62] </ref> observed that a more refined parameter than query complexity could be used. If a verifier uses f free bits then Max Clique is hard to approximate within n 1=(f+1)" .
Reference: [63] <author> Feige, U., and Kilian, J. </author> <title> Zero knowledge and the chromatic number. </title> <booktitle> In Proceedings of the 11th IEEE Conference on Computational Complexity (1996). </booktitle> <address> BIBLIOGRAPHY 99 </address>
Reference-contexts: Thus, for any " &gt; 0, it is hard to approximate Max Clique to within n 1" . Similar continuous improvements were developed for Min Node Coloring. To make a long story short, the final (tight) result by Feige and Kilian <ref> [63] </ref> is that, for any " &gt; 0, it is hard to approximate Min Node Coloring to within n 1" . Their result heavily builds upon the " amortized free bits verifier by H-astad.
Reference: [64] <author> Feige, U., and Lov asz, L. </author> <title> Two-prover one round proof systems: Their power and their problems. </title> <booktitle> In Proceedings of the 24th ACM Symposium on Theory of Computing (1992), </booktitle> <pages> pp. 733-741. </pages>
Reference-contexts: The two areas are richly interconnected, and it happens that techniques and results developed to prove hardness results end up giving improved approximation algorithms. We list a few recent examples of such interaction (in chronological order). 1. Feige and Lovasz <ref> [64] </ref> use semidefinite programming relaxations of optimization problems to investigate the power of two-provers one-round probabilistic proof systems. Probabilistic proof systems are at the core of almost all non-approximability results of the literature. <p> Their reductions are not from the verifier of the PCP Theorem, but from the slightly different model of two-provers one-round proof systems <ref> [109, 64] </ref> (Bellare [23] was perhaps the first to explore the connection between such proof systems and approximation problems). 1.1.4 Contemporary Results The development of new results in this field unfolded at an amazing pace in the last three years. Even very recent surveys are slightly outdated [24, 94].
Reference: [65] <author> Ford, L., and Fulkerson, D. </author> <title> Flows in Networks. </title> <publisher> Princeton University Press, </publisher> <year> 1962. </year>
Reference-contexts: Some of these algorithms were among the best early achievements of algorithmics: Kruskal's algorithm for finding a minimum cost spanning tree [108], Dijkstra's algorithm for finding shortest paths in a graph [54], Edmond and Karp's version of Ford and Fulkerson's algorithm for maximum flow <ref> [65, 55] </ref>, and so on. On the other hand, for the majority of interesting problems, including the Min TSP, there seemed to be no way to efficiently find optimum solutions.
Reference: [66] <author> Fortnow, L., Rompel, J., and Sipser, M. </author> <title> On the power of multi-prover interactive protocols. </title> <booktitle> In Proceedings of the 3th IEEE Conference on Structure in Complexity Theory (1988), </booktitle> <pages> pp. 156-161. </pages>
Reference-contexts: Ben-Or, Goldwasser, Kilian and Wigderson considered an extension of the model where the verifier interacts with two (or even more) provers (who do not communicate one with the other); the languages admitting such extravagant proof systems form the class MIP. Fortnow, Rompel and Sipser <ref> [66] </ref> gave an alternative characterization of MIP: a MIP language admits (exponentially long) proofs that can be checked by a polynomial time randomized verifier 5 .
Reference: [67] <author> F urer, M., and Raghavachari, B. </author> <title> Approximating the minimum degree spanning tree to within one from the optimal degree. </title> <booktitle> In Proceedings of the 3rd ACM-SIAM Symposium on Discrete Algorithms (1992), </booktitle> <pages> pp. 317-324. </pages>
Reference-contexts: If Min Bin Packing is APX-complete, then from Proposition 3.43 it follows that QH P NP [h] . From Theorem 2.25 we thus have the collapse of the polynomial-time hierarchy. The proofs for Min Degree Spanning Tree and Min Edge Coloring are identical and use the results of <ref> [84, 67] </ref>. * Observe that the previous result does not seem to be obtainable by using the hypothesis P 6= NP, as shown by the following theorem. Theorem 3.53 If NP = co-NP then Min Bin Packing is APX-complete.
Reference: [68] <author> Garey, M., and Johnson, D. </author> <title> The complexity of near-optimal graph coloring. </title> <journal> Journal of the ACM 23 (1976), </journal> <pages> 43-49. </pages>
Reference-contexts: Sahni and Gonzalez [127] used a "gap explosion" technique to prove that Min TSP, is not in APX. This technique only works in a very few cases. The most interesting result of this period, which is due to Garey and Johnson <ref> [68] </ref>, is the fact that Min Node Coloring cannot be r-approximated for r &lt; 2. Their result starts from the NP-completeness of 3-coloring (that already implies a 4=3 " hardness) and then they increase the gap using graph product, a technique whose power has been recently widely exploited.
Reference: [69] <author> Garey, M., and Johnson, D. </author> <title> Strong NP-completeness results: motivation, examples, and implications. </title> <journal> Journal of the ACM 25 (1978), </journal> <pages> 499-508. </pages>
Reference-contexts: A considerable research activity was directed towards overcoming this inconvenience by dealing with modified (restricted) versions of NP-completeness. A successful attempt was the introduction of strong NP-completeness due to Garey and John-son <ref> [69] </ref>. When a problem is strongly NP-hard (and a couple of technical conditions hold), then it is not in FPTAS, unless P = NP. Within a few year, proofs of strong NP-completeness (when possible) became standard in complexity papers.
Reference: [70] <author> Garey, M., and Johnson, D. </author> <title> Computers and Intractability: a Guide to the Theory of NP-Completeness. </title> <publisher> Freeman, </publisher> <year> 1979. </year>
Reference-contexts: Eventually, the theory of NP-completeness [44, 97, 111] came up giving an explanation to this phenomenon and providing a unified framework to deal with the intractability of optimization problems. In a short while, hundreds of NP-completeness results were discovered (see <ref> [70] </ref> for a survey of the field as it was in 1979), and it is estimated that now a few thousands NP-complete problems are known, most of them being (decision versions of ) optimization problems. <p> latter cannot be many-one reduced to the former, unless P = NP. 1.1.5 Further Reading Essentially all the earliest non-approximability results (including the strong NP-completeness theory, the 2 " hardness result for Min Node Coloring, and the hardness of Min TSP) are surveyed in the book of Garey and Johnson <ref> [70] </ref>. Good accounts on the first attempts at developing approximation-preserving reductions and completeness in approximation classes are a survey by Bruschi, Joseph and Young [37], Kann's PhD thesis [92], and a more recent survey by Ausiello, Crescenzi and Protasi [13]. <p> Bierce [31]) We assume the reader to be familiar with the basic concepts of computational complexity theory. For the definitions of most of the complexity classes used in this thesis we refer the reader to one of the books on the subject (see, for example, <ref> [70, 20, 36, 120] </ref>). In this chapter we will review the definitions of a few approximation-preserving reducibilities, some facts about PCP's and query complexity, and we will define the problems that are mentioned throughout the thesis. <p> Theorem 3.48 A polyAPX problem A is polyAPX-complete if and only if it is self-improvable and A r 0 is NPF NP [log log n+O (1)] -hard for some r 0 &gt; 1. Proof: Let A be a polyAPX-complete problem. Since Max Clique is self-improvable <ref> [70] </ref> and poly-APX-complete [102] and since the equivalence with respect to the AP-reducibility preserves the self-improvability property (see [119]), we have that A is self-improvable. It is then sufficient to prove that A 2 is hard for NPF NP [log log n+O (1)] .
Reference: [71] <author> Garey, M. R., Johnson, D. S., and Stockmeyer, L. </author> <title> Some simplified NP-complete graph problems. </title> <booktitle> Theoretical Computer Science 1 (1976), </booktitle> <pages> 237-267. </pages>
Reference-contexts: Even if the notion of a gadget has been formalized only recently, it arose in NP-completeness proofs already in the 70s. An example of a gadget matching the formal definition of [25] appears in the 1976 proof that Max 2Sat is NP-complete <ref> [71] </ref>. Bellare, Goldreich and Sudan also associate a cost to gadgets: the less costly is the gadget, the better is the reduction (and the implied non-approximability result). It follows that an improved construction of a gadget yields an improved non-approximability result. <p> We illustrate the point by constructing a gadget reducing Max 3Sat to Max 2Sat. It is remarkable that the gadget that we obtain is twice better than the gadget of the Max 2Sat NP-completeness result of <ref> [71] </ref>. Using this new reduction in combination with a technique of Goemans and Williamson [75] and the 1:074-approximation algorithm for Max 2Sat due to Feige and Goemans [60], we obtain a 1:249-approximation algorithm for Max 3Sat. <p> 3 _ :y; :x 3 _ y; where every clause except the last has weight 1=2, and the last clause has weight 1. * We remark that a 7-gadget reducing (x 1 _ x 2 _ x 3 ) to 2SAT was found by Garey, Johnson and Stockmayer in 1976 <ref> [71] </ref>. Combining Lemmas 4.22, 4.23 and 4.25 we get a 1:249-approximation algorithm. Theorem 4.26 There exists a polynomial-time 1:249-approximation algorithm for Max Weight 3SAT. 4.3.2 The Max 3CSP problem We now turn to the Max Weight 3CSP problem.
Reference: [72] <author> Garg, N., Vazirani, V., and Yannakakis, M. </author> <title> Approximate max-flow min-(multi)cut theorems and their applications. </title> <journal> SIAM Journal on Computing 25, </journal> <volume> 2 (1996), </volume> <pages> 235-251. </pages> <note> Preliminary version in Proc. of STOC'93. </note>
Reference-contexts: There is a large class of minimization problems that can be approximated within poly (log n) factors and that (at most) are only known to be Max SNP-hard. For example Min Edge Deletion Bipartite Subgraph, that is O (log n)-approximable using the approximate max-flow min-cut theorem <ref> [110, 72, 112] </ref>, and Min Feedback Vertex Set, Min Linear Arrangment, Min Clause Deletion 2SAT, that are O (log n log log n)-approximable using the spreading metric approach [57, 56]. The Min Linear Arrangment problem is not even known to be Max SNP-hard.
Reference: [73] <author> Gavril, F. </author> <note> Manuscript cited in [70], </note> <year> 1974. </year>
Reference-contexts: THE RESULTS OF THIS THESIS 13 Problem Hard factor Best approximation Max 2Sat 1:047 [25, 80] 1:074 [60] Max Sat 1:142 [80] 1:319 [74, 75] Max DiCut 1:083 (1:055 [25, 80]) 1:169 [60] Max 2CSP 1:111 (1:047 [25, 80]) 1:169 [60] Min Vertex Cover 1:166 [80] 2 <ref> [73] </ref> Table 1.1: Positive and negative approximability results for some constraint satisfaction problems. We report in bold our results, and in brackets the numbers that could be achievable without using the results of this thesis. verifier is developed that uses a different kind of test.
Reference: [74] <author> Goemans, M., and Williamson, D. </author> <title> New 3/4-approximation algorithms for the maximum satisfiability problem. </title> <note> SIAM Journal on Discrete Mathematics 7, 4 (1994), 656-666. Preliminary version in Proc. of IPCO'93. </note>
Reference-contexts: Technical Contributions. The idea of probabilistically combining different solutions has been used in the design of approximation algorithms (e.g. in <ref> [74] </ref>) but we use it for the first time to develop an approximation-preserving reduction. The Max NP-completeness of Max 3Sat is an easy corollary of its APX-completeness, but our reduction has both a structural and an algorithmic relevance due to the fact that it does not use PCP machinery. <p> THE RESULTS OF THIS THESIS 13 Problem Hard factor Best approximation Max 2Sat 1:047 [25, 80] 1:074 [60] Max Sat 1:142 [80] 1:319 <ref> [74, 75] </ref> Max DiCut 1:083 (1:055 [25, 80]) 1:169 [60] Max 2CSP 1:111 (1:047 [25, 80]) 1:169 [60] Min Vertex Cover 1:166 [80] 2 [73] Table 1.1: Positive and negative approximability results for some constraint satisfaction problems. <p> Using this new reduction in combination with a technique of Goemans and Williamson [75] and the 1:074-approximation algorithm for Max 2Sat due to Feige and Goemans [60], we obtain a 1:249-approximation algorithm for Max 3Sat. The best result that could be obtained previously, by combining the techniques of <ref> [74, 75] </ref> and the bound of [60], was 1:299. (see also the 1:301-approximation algorithm in the paper of Ono, Hirata and Asano [12]). Similarly, we construct a gadget reducing Max 3CSP to Max 2Sat and, using Feige and Goemans' algorithm, we obtain a 2:721-approximate algorithm for Max 3CSP.
Reference: [75] <author> Goemans, M., and Williamson, D. </author> <title> Improved approximation algorithms for maximum cut and satisfiability problems using semidefinite programming. </title> <journal> Journal of the ACM 42, </journal> <volume> 6 (1995), </volume> <pages> 1115-1145. </pages> <note> Preliminary version in Proc. of STOC'94. </note>
Reference-contexts: THE RESULTS OF THIS THESIS 13 Problem Hard factor Best approximation Max 2Sat 1:047 [25, 80] 1:074 [60] Max Sat 1:142 [80] 1:319 <ref> [74, 75] </ref> Max DiCut 1:083 (1:055 [25, 80]) 1:169 [60] Max 2CSP 1:111 (1:047 [25, 80]) 1:169 [60] Min Vertex Cover 1:166 [80] 2 [73] Table 1.1: Positive and negative approximability results for some constraint satisfaction problems. <p> It is remarkable that the gadget that we obtain is twice better than the gadget of the Max 2Sat NP-completeness result of [71]. Using this new reduction in combination with a technique of Goemans and Williamson <ref> [75] </ref> and the 1:074-approximation algorithm for Max 2Sat due to Feige and Goemans [60], we obtain a 1:249-approximation algorithm for Max 3Sat. <p> Using this new reduction in combination with a technique of Goemans and Williamson [75] and the 1:074-approximation algorithm for Max 2Sat due to Feige and Goemans [60], we obtain a 1:249-approximation algorithm for Max 3Sat. The best result that could be obtained previously, by combining the techniques of <ref> [74, 75] </ref> and the bound of [60], was 1:299. (see also the 1:301-approximation algorithm in the paper of Ono, Hirata and Asano [12]). Similarly, we construct a gadget reducing Max 3CSP to Max 2Sat and, using Feige and Goemans' algorithm, we obtain a 2:721-approximate algorithm for Max 3CSP. <p> Observe that, by construction, an r-approximate solution for x ' is indeed an optimum solution provided that r &lt; 3=2. Let T be a 4/3-approximate algorithm for Max Sat <ref> [135, 75] </ref>. The reduction from Max Sat to Min Bin Packing is defined as follows: f ('; r) = t 1 ('); g ('; y; r) = T (') if r 4=3; t 2 (t 1 ('); y) otherwise. <p> Lemma 4.22 [60] There exists a polynomial-time (:976; :931) approximation algorithm for Max Weight 2SAT. 4.3.1 The Max 3Sat problem In this section we show how to derive an improved approximation algorithm for Max Weight 3SAT. By restricting techniques in <ref> [75] </ref> from Max Weight Sat to Max Weight 3SAT and using a 1:074-approximation algorithm for Max Weight 2SAT due to Feige and Goemans [60], one can obtain a 1:299-approximation algorithm for Max Weight 3SAT. The basic idea of [75] is to reduce each clause of length 3 to the three possible <p> By restricting techniques in <ref> [75] </ref> from Max Weight Sat to Max Weight 3SAT and using a 1:074-approximation algorithm for Max Weight 2SAT due to Feige and Goemans [60], one can obtain a 1:299-approximation algorithm for Max Weight 3SAT. The basic idea of [75] is to reduce each clause of length 3 to the three possible subclauses of length 2, give each new length 2 clause one-third the original weight, and then apply an approximation algorithm for Max Weight 2SAT. <p> Indeed, the two problems just differ on a finite number of instances. * 4.7 Mixing Graphs, Mixing Sets and Switchers 4.7.1 Construction of Mixing Graphs We first recall the following folklore result about the mixing properties of expander graphs. Lemma 4.77 (see e.g. <ref> [75] </ref>) Let G = (V; E) be a d-regular graph, let be an upper bound on the absolute values of all the eigenvalues, save the biggest one, of the adjacency matrix of G, let A and B be any two disjoint sets of nodes, then fi fi d jAjjBj fi fi <p> It was 74=73 in [25], and would be 22=21 " in light of H-astad's results. The previous best published analysis of a Max 3Sat approximation algorithm gave a 1:301 approximation factor [12]; a slightly better bound of 1:2499 could be obtained adapting the techniques of Goemans and Williamson <ref> [75] </ref>. The previous best approximation factor achievable for Max 3CSP was 4 [131]. The only previous lower bound on gadget construction is by Bellare, Goldreich and Sudan [25]. <p> A reduction from Max Weight Sat to Max Weight Sat without unary constraints (but also from Max Weight 3SAT to Max Weight 3SAT without unary constraints) would have algorithmic relevance since unary constraints are a bottleneck in the approximation analyses in <ref> [75] </ref> and in Section 4.3. 94 CHAPTER 5. CONCLUSIONS AND OPEN QUESTIONS
Reference: [76] <author> Goldwasser, S., Micali, S., and Rackoff, C. </author> <title> The knowledge complexity of interactive proof systems. </title> <journal> SIAM Journal on Computing 18, </journal> <volume> 1 (1989), </volume> <pages> 186-208. </pages> <note> Preliminary version in Proc of STOC'85. </note>
Reference-contexts: The idea of extending this model allowing randomness and interaction was introduced independently and simultaneously by Babai [15] and by Goldwasser, Micali and Rackoff <ref> [76] </ref>. The class of languages admitting such randomized interactive proof systems was called IP.
Reference: [77] <author> Graham, R. </author> <title> Bounds for certain multiprocessing anomalies. </title> <journal> Bell System Technology Journal 45 (1966), </journal> <pages> 1563-1581. </pages>
Reference-contexts: HISTORY 3 1.1 History 1.1.1 1973-1986: Scattered Results Approximation algorithms are a very natural way of coping with the hardness of optimization problems, and, even without using such terminology, they arose in the area of Operations Research. Already in 1966, a paper by Graham <ref> [77] </ref> addressed the issue of a worst-case analysis of the solutions provided by a heuristic algorithm for a scheduling problem. The formal definition of approximation algorithm and performance ratio is due to a pioneering paper by Johnson [88].
Reference: [78] <author> H -astad, J. </author> <booktitle> Clique is hard to approximate within n 1" . In Proceedings of the 37th IEEE Symposium on Foundations of Computer Science (1996), </booktitle> <pages> pp. 627-636. </pages>
Reference-contexts: Bellare, Goldreich and Sudan [25] gave a system using 2 + " amortized free bits, then H-astad showed that 1 + " are sufficient [79], and, eventually, that " amortized free bits are sufficient <ref> [78] </ref>. Thus, for any " &gt; 0, it is hard to approximate Max Clique to within n 1" . Similar continuous improvements were developed for Min Node Coloring. <p> The following constraints arise in the construction of verifiers with low free bit complexity <ref> [79, 78] </ref>. <p> Arora [6] shows that "current techniques" do not suffice for that. He proves similar bounds for Max Clique and Min Vertex Cover. However H-astad's <ref> [78] </ref> " free bit verifier (developed with exciting new techniques) beats Arora's bound for Max Clique. Perhaps the coloring bounds can be beaten as well. Removing weights.
Reference: [79] <author> H -astad, J. </author> <title> Testing of the long code and hardness for clique. </title> <booktitle> In Proceedings of the 28th ACM Symposium on Theory of Computing (1996), </booktitle> <pages> pp. 11-19. </pages>
Reference-contexts: Bellare and Sudan showed that 3 + " amortized free bits are sufficient, and thus Max Clique is hard to approximate within n 1=4" . Bellare, Goldreich and Sudan [25] gave a system using 2 + " amortized free bits, then H-astad showed that 1 + " are sufficient <ref> [79] </ref>, and, eventually, that " amortized free bits are sufficient [78]. Thus, for any " &gt; 0, it is hard to approximate Max Clique to within n 1" . Similar continuous improvements were developed for Min Node Coloring. <p> The following constraints arise in the construction of verifiers with low free bit complexity <ref> [79, 78] </ref>.
Reference: [80] <author> H -astad, J. </author> <title> Some optimal inapproximability results. </title> <booktitle> In Proceedings of the 29th ACM Symposium on Theory of Computing (1997), </booktitle> <pages> pp. 1-10. 100 BIBLIOGRAPHY </pages>
Reference-contexts: Bellare and Sudan [27] proved a 73=72 hard factor, while Bellare, Goldreich and Sudan [25] arrived at 27=26: the current best result (perhaps tight) is 8=7 " by H-astad <ref> [80] </ref>. 8 CHAPTER 1. INTRODUCTION The Structural Revival A new spate of results of structural flavour has recently come up stimulated by the PCP Theorem and its powerful corollaries. <p> Additionally, a great deal of trickery is required in the construction (discovery?) of these combinatorial objects, and the work has to be done, essentially from scratch, every time a new PCP 1.2. THE RESULTS OF THIS THESIS 13 Problem Hard factor Best approximation Max 2Sat 1:047 <ref> [25, 80] </ref> 1:074 [60] Max Sat 1:142 [80] 1:319 [74, 75] Max DiCut 1:083 (1:055 [25, 80]) 1:169 [60] Max 2CSP 1:111 (1:047 [25, 80]) 1:169 [60] Min Vertex Cover 1:166 [80] 2 [73] Table 1.1: Positive and negative approximability results for some constraint satisfaction problems. <p> THE RESULTS OF THIS THESIS 13 Problem Hard factor Best approximation Max 2Sat 1:047 [25, 80] 1:074 [60] Max Sat 1:142 <ref> [80] </ref> 1:319 [74, 75] Max DiCut 1:083 (1:055 [25, 80]) 1:169 [60] Max 2CSP 1:111 (1:047 [25, 80]) 1:169 [60] Min Vertex Cover 1:166 [80] 2 [73] Table 1.1: Positive and negative approximability results for some constraint satisfaction problems. <p> THE RESULTS OF THIS THESIS 13 Problem Hard factor Best approximation Max 2Sat 1:047 <ref> [25, 80] </ref> 1:074 [60] Max Sat 1:142 [80] 1:319 [74, 75] Max DiCut 1:083 (1:055 [25, 80]) 1:169 [60] Max 2CSP 1:111 (1:047 [25, 80]) 1:169 [60] Min Vertex Cover 1:166 [80] 2 [73] Table 1.1: Positive and negative approximability results for some constraint satisfaction problems. <p> THE RESULTS OF THIS THESIS 13 Problem Hard factor Best approximation Max 2Sat 1:047 <ref> [25, 80] </ref> 1:074 [60] Max Sat 1:142 [80] 1:319 [74, 75] Max DiCut 1:083 (1:055 [25, 80]) 1:169 [60] Max 2CSP 1:111 (1:047 [25, 80]) 1:169 [60] Min Vertex Cover 1:166 [80] 2 [73] Table 1.1: Positive and negative approximability results for some constraint satisfaction problems. <p> THE RESULTS OF THIS THESIS 13 Problem Hard factor Best approximation Max 2Sat 1:047 [25, 80] 1:074 [60] Max Sat 1:142 <ref> [80] </ref> 1:319 [74, 75] Max DiCut 1:083 (1:055 [25, 80]) 1:169 [60] Max 2CSP 1:111 (1:047 [25, 80]) 1:169 [60] Min Vertex Cover 1:166 [80] 2 [73] Table 1.1: Positive and negative approximability results for some constraint satisfaction problems. We report in bold our results, and in brackets the numbers that could be achievable without using the results of this thesis. verifier is developed that uses a different kind of test. <p> Using their verifier and our reduction, we proved that Max Cut (respectively, Max DiCut) was hard to approximate within 61=60 (respectively, 45=44): for both problems, the hardness established in [25] was 72=71. Using H-astad's verifier <ref> [80] </ref>, we prove hardness within 17=16 " (respectively, 13=12"). Using H-astad verifier in combination with the BGS gadgets would have yielded hardness within 19=18 " for both problems. Obtaining better reductions between problems can also yield improved approximation algorithms for some problems. <p> THE RESULTS OF THIS THESIS 15 Max Clique to Min Vertex Cover. They proved a 17=16 hardness result improved to 7=6 " by H-astad <ref> [80] </ref>. We show that Min Vertex Cover can be seen as a minimization constraint satisfaction problem: it is equivalent to a problem known as Min Sat (this result has been independently discovered in [117] and in [82]). <p> At the moment of writing this dissertation, the best PCP construction with few query and free bits is the following. Theorem 2.23 (H-astad <ref> [80] </ref>) For any constant " &gt; 0, NP FPCP 1";:5+" [log; 2; 3]. As a consequence, it is NP-hard to 1.166-approximate Min Vertex Cover. 2.4 Query Complexity In this section we review a few definitions and results about complexity classes defined in terms of bounded queries to an NP oracle. <p> We also show how to make a positive use of gadgets, presenting improved approximation algorithms for Max 3Sat and Max 3CSP based on gadget reductions to Max 2Sat. The non-approximability results that we prove (as well as those for Max Sat, Max 2Sat, and other problems <ref> [25, 80] </ref>) hold only for the weighted version. We give a technique to extend those results to the non-weighted version. The Min Vertex Cover problem does not seemingly fit this framework of constraint satisfaction problems. <p> The current best starting point for non-approximability results is by now the following result by H-astad. Lemma 4.3 <ref> [80] </ref> For any family F, if there exists an ff 0 -gadget reducing PC 0 to F and an ff 1 - gadget reducing PC 1 to F, then for any fl &gt; 0, Max F is hard to approximate to within 1 + 1 Gadget constructions reducing RMBC members to <p> To get a hardness result for Max Cut, we first need the following lemma, which is a very minor modification of Lemma 4.3. Lemma 4.11 <ref> [80] </ref> For the constraint family Cut, if there exists an ff 0 -gadget with constant 0 reducing PC 0 to Cut and an ff 1 -gadget with constant 0 reducing PC 1 to Cut, then for any fl &gt; 0, Max Cut is NP-hard to approximate to within 1 + 1 <p> We do not know whether, for any of the following problems, the weighted version is AP-equivalent to the unweighted one: Min Set Cover, Min Linear Arrangment, Min Feedback Vertex Set, Min Clause Deletion 2SAT. Non-approximability Results to be Improved Tight results to come. H-astad <ref> [80] </ref> proves that it is hard to approximate Max 3Sat to within 8=7 "; the best positive result (see Section 4.3) says that a 5=4 approximation is possible. A tight result is in sight, and it may well be that the right threshold is 8=7.
Reference: [81] <author> Hemaspaandra, L. </author> <title> Complexity theory column 5: the not-ready-for-prime-time conjectures. </title> <journal> SIGACT News (1994). </journal>
Reference-contexts: The possibility that P NP = P NP [O (logn)] seems to be quite unlikely and, even if this event is currently not yet related to any other collapse in structural complexity theory, it is conjectured that it implies the collapse of the polynomial-time hierarchy <ref> [81, 133] </ref>. 3.1.3 The AP-reducibility The above mentioned drawback of the E-reducibility is due to the fact that an E-reduction preserves optimum values. Indeed, the linear relation between the performance ratios seems to be too restrictive.
Reference: [82] <author> Hochbaum, D. </author> <title> A framework for half integrality and 2-approximations with applications to feasible cut and minimum satisfiability. </title> <type> Manuscript, </type> <year> 1996. </year>
Reference-contexts: They proved a 17=16 hardness result improved to 7=6 " by H-astad [80]. We show that Min Vertex Cover can be seen as a minimization constraint satisfaction problem: it is equivalent to a problem known as Min Sat (this result has been independently discovered in [117] and in <ref> [82] </ref>). This equivalence provides an improved approximation algorithm and a new hardness result for Min Sat. As for the previously mentioned maximization problems, we are interested in comparing weighted and non-weighted versions of Min Vertex Cover and Min Sat. <p> There was no previous result for Max Weight Sat versus Max Simple Sat and Max Weight 2SAT versus Max Simple 2SAT. In the same paper [49] we also proved the equivalence between Min Sat and Min Vertex Cover (also independently obtained in <ref> [117, 82] </ref>) and between them and their weighted versions. The reduction from PCP verifiers with low free bit complexity to Min Vertex Cover in bounded degree graph is from a joint paper with Andrea Clementi [42].
Reference: [83] <author> Hochbaum, D., and Shmoys, D. </author> <title> A best possible heuristic for the k-center problem. </title> <journal> Mathematics of Operations Research 10, </journal> <volume> 2 (1985), </volume> <pages> 180-184. </pages>
Reference-contexts: A few non-approximability results can be proved with this technique, but they are in general quite weak. An interesting exception is the k-center problem studied by Hochbaum and Shmoys <ref> [83] </ref>. Such problem can be 2-approximated, and the technique described above shows that performance ratios smaller than 2 are NP-hard.
Reference: [84] <author> Holyer, I. </author> <title> The NP-completeness of edge-coloring. </title> <journal> SIAM Journal on Computing 10 (1981), </journal> <pages> 718-720. </pages>
Reference-contexts: If Min Bin Packing is APX-complete, then from Proposition 3.43 it follows that QH P NP [h] . From Theorem 2.25 we thus have the collapse of the polynomial-time hierarchy. The proofs for Min Degree Spanning Tree and Min Edge Coloring are identical and use the results of <ref> [84, 67] </ref>. * Observe that the previous result does not seem to be obtainable by using the hypothesis P 6= NP, as shown by the following theorem. Theorem 3.53 If NP = co-NP then Min Bin Packing is APX-complete.
Reference: [85] <author> Hunt III, H. B., Marathe, M., Radhakrishnan, V., Ravi, S., Rosenkrantz, D., and Stearns, R. </author> <title> Approximation schemes using L-reductions. </title> <booktitle> In Proceedings of 14th Conference on Foundations of Software Technology and Theoretical Computer Science (1994), </booktitle> <publisher> LNCS 880, Springer-Verlag, </publisher> <pages> pp. 342-353. </pages>
Reference-contexts: We will use our reduction technique to develop linear-time approximation schemes for both problems. The approximation schemes we describe are a composition of the reductions of Section 3.3.1 and of the linear time PTAS's for Max kSat and Max k-CSP that are implied by the techniques of <ref> [19, 85, 101] </ref>. We recall the definition of planar instance of a constraint satisfaction problem. Definition 3.30 (Incidence Graph) Let F be a (possibly infinite) constraint family. Let ' be an instance of Max Weight F over variable set X. <p> + n). * Theorem 3.37 For fixed " &gt; 0, Max Planar k-CSP admits an (1 + ")-approximate linear time algorithm, Proof:[Sketch] Follows from Theorem 3.36 using the construction outlined in the first part of the proof of [101, Theorem 1] (see also [19, Theorem 1]). * Hunt et al. <ref> [85] </ref> proved the following related result. <p> Lemma 3.28 has been proved in [50] using the PCP Theorem. The PCP-free proof given here is from [51]. Polynomial time approximation schemes for a large variety of planar constraint satisfaction problems have been developed by Khanna and Motwani [101]. Hunt et al. <ref> [85] </ref> developed NC approximation schemes for planar constraint satisfaction problems were each constraint depends on at most a constant number of variables. We give the first NC approximation schemes for constraint satisfaction problems over an infinite constraint family, as well as the first linear-time algorithms for this kind of problems. <p> Khanna and Sudan [103] gave a definition that is a bit more formal and that is identical to Definition 4.1 except that they do not consider weights. Constraint satisfaction problems are somehow implicit in [123]; definitions similar to ours have been given by Hunt et al. <ref> [85] </ref> and by Khanna and Sudan [103]. The use of linear programming to find optimum gadgets, the analysis of the Max Weight 3SAT and Max Weight 3CSP algorithms and the lower bounds using duality are from a joint paper with Greg Sorkin, Madhu Sudan and David Williamson [132].
Reference: [86] <author> Ibarra, O. H., and Kim, C. E. </author> <title> Fast approximation for the knapsack and sum of subset problems. </title> <journal> Journal of the ACM 22 (1975), </journal> <pages> 463-468. </pages>
Reference-contexts: Proof: Recall that from the results of [107] it follows that P NP P MK , where MK stands for Max Knapsack, moreover it is well-known that Max Knapsack belongs to PTAS, and then to APX <ref> [86] </ref>. If A is a -maximum in APX then Max Knapsack A, so that P NP P MK 1 P A (since is optimum preserving). We will now show that P A P NP [O (logn)] .
Reference: [87] <author> Impagliazzo, R., and Naor, M. </author> <title> Decision trees and downward closures. </title> <booktitle> In Proceedings of the 3th IEEE Conference on Structure in Complexity Theory (1988), </booktitle> <pages> pp. 29-38. </pages>
Reference-contexts: Moreover, in <ref> [87] </ref> it is shown that the latter hypothesis is somewhat intermediate between P 6= NP " co-NP and P 6= NP. Corollary 3.2 The L-reducibility does not preserve membership in APX unless P = NP " co-NP.
Reference: [88] <author> Johnson, D. </author> <title> Approximation algorithms for combinatorial problems. </title> <journal> Journal of Computer and System Sciences 9 (1974), </journal> <pages> 256-278. </pages>
Reference-contexts: Already in 1966, a paper by Graham [77] addressed the issue of a worst-case analysis of the solutions provided by a heuristic algorithm for a scheduling problem. The formal definition of approximation algorithm and performance ratio is due to a pioneering paper by Johnson <ref> [88] </ref>. In his paper, Johnson hinted at the relevance of non-approximability results, he presented a 2-approximate algorithm for Max Sat, a (1 + ln n)-approximate algorithm for Min Set Cover, and noted the failure of most intuitive ways of approximating Max Clique and Min Node Coloring. <p> Their result heavily builds upon the " amortized free bits verifier by H-astad. The tight result for Min Set Cover is by Feige [59], who proved that it is hard to approximate this problem to within (1 ") ln n, matching the positive result by Johnson <ref> [88] </ref>. The first explicit non-approximability result for Max Sat was established by Bellare, Gold-wasser, Lund and Russel [26].
Reference: [89] <author> Johnson, D. </author> <title> The NP-completeness column: An ongoing guide. </title> <booktitle> Journal of Algorithms 13 (1992), </booktitle> <pages> 502-524. </pages>
Reference-contexts: Interactive proof systems and probabilistically checkable proofs are a fascinating field, and a very complicated one: thus it is an ideal terrain for surveys. An enjoyable account on the meaning of the PCP Theorem and on its applications to approximation theory is given by Johnson <ref> [89] </ref>. The enterprising reader may want to have a look at the actual proof of the PCP Theorem: a full proof is contained in Sudan's thesis [130] and in Arora's one [5].
Reference: [90] <author> Kadin, J. </author> <title> The polynomial time hierarchy collapses if the boolean hierarchy collapses. </title> <journal> SIAM Journal of Computing 17, </journal> <volume> 6 (1988), </volume> <pages> 1263-1282. </pages>
Reference-contexts: multi-valued functions computable by nondeterministic polynomial-time Turing machines which ask at most q (n) queries to an NP oracle in the entire computation tree. 2 In order to talk about hardness with respect to these classes we will use the following reducibility which is an extension of both metric reducibility <ref> [90] </ref> and one-query reducibility [48] and has been introduced in [39]. Definition 3.46 (MV reducibility) Let F and G be two partial multi-valued functions.
Reference: [91] <author> Kadin, J. </author> <title> Erratum: The polynomial time hierarchy collapses if the boolean hierarchy collapses. </title> <journal> SIAM Journal on Computing 20, </journal> <volume> 2 (1990), </volume> <pages> 404. </pages>
Reference: [92] <author> Kann, V. </author> <title> On the Approximability of NP-Complete Optimization Problems. </title> <type> PhD thesis, </type> <institution> Department of Numerical Analysis and Computing Science, Royal Institute of Technology, Stockholm, </institution> <year> 1992. </year>
Reference-contexts: Good accounts on the first attempts at developing approximation-preserving reductions and completeness in approximation classes are a survey by Bruschi, Joseph and Young [37], Kann's PhD thesis <ref> [92] </ref>, and a more recent survey by Ausiello, Crescenzi and Protasi [13]. Max SNP-completeness theory is treated very broadly in Papadim-itriou's book on computational complexity [120]. In particular, several Max SNP-completeness proofs that are only sketched in [123] are fully spelled out (and sometimes simplified) in [120].
Reference: [93] <author> Kann, V. </author> <title> Polynomially bounded minimization problems which are hard to approximate. </title> <journal> Nordic Journal of Computing 1 (1994), </journal> <pages> 317-331. </pages> <note> Preliminary version in Proc. of ICALP'93. </note>
Reference-contexts: Thus, completeness followed from non-approximability instead of vice-versa. We will come back to this fact in the next section. More recently, other completeness results were obtained by Berman and Schnitger [29], and Kann <ref> [93] </ref> in classes of problems with polynomially bounded measure function. The most influential work of this period was by Papadimitriou and Yannakakis [123], where a radically new approach was taken. <p> STRUCTURE IN APPROXIMATION CLASSES 3.2 Completeness 3.2.1 NPO-complete problems In this section, we will prove that there are natural problems that are complete for the classes NPO and NPO PB. Previously, completeness results have been obtained just for Max NPO, Min NPO, Max PB, and Min PB <ref> [47, 118, 29, 93] </ref>. One example of such a result is the following theorem. <p> Theorem 3.18 Max PB 0 1 Programming and Min PB 0 1 Programming are NPO PB-complete. Proof: Max PB 0 1 Programming is known to be Max PB-complete [29] and Min PB 0 1 Programming is known to be Min PB-complete <ref> [93] </ref>. Thus we just have to show that there are AP-reductions from Min PB 0 1 Programming to Max PB 0 1 Programming and from Max PB 0 1 Programming to Min PB 0 1 Programming. Both reductions use exactly the same construction.
Reference: [94] <author> Kann, V., and Panconesi, A. </author> <title> Hardness of Approximation. Annotated bibliographies in combinatorial optimization, </title> <note> 1996. To appear. </note>
Reference-contexts: Even very recent surveys are slightly outdated <ref> [24, 94] </ref>. Improved non-approximability results are perhaps the most striking recent achievements. They have been obtained using more and more refined versions of the PCP Theorem, as well as finding better reductions. Recently, tight non-approximability results have been established for a series of important optimization problems. 1.1.
Reference: [95] <author> Karger, D., Motwani, R., and Sudan, M. </author> <title> Approximate graph coloring by semidefinite programming. </title> <booktitle> In Proceedings of the 35th IEEE Symposium on Foundations of Computer Science (1994), </booktitle> <pages> pp. 2-13. </pages>
Reference-contexts: Coloring. Given a graph G and the promise that it is 3-colorable, it is possible to color it with n 0:2143 colors <ref> [95, 32] </ref>. On the other hand it is NP-hard to color it with less than 5 colors [100]. It is a widespread believing that it is hard to use even O (log n) colors, but it would be a good improvement even to prove hardness within any fixed constant.
Reference: [96] <author> Karmakar, N., and Karp, R. </author> <title> An efficient approximation scheme for the one-dimensional bin packing problem. </title> <booktitle> In Proceedings of the 23th IEEE Symposium on Foundations of Computer Science (1982), </booktitle> <pages> pp. 312-320. </pages>
Reference-contexts: Theorem 3.52 If the polynomial-time hierarchy does not collapse, then Min Bin Packing, Min Degree Spanning Tree, and Min Edge Coloring are APX-intermediate. Proof: From Proposition 3.51 and from the fact that Min Bin Packing is in APTAS <ref> [96] </ref>, it follows that AQH (Min Bin Packing) P NP [h] for a given h. If Min Bin Packing is APX-complete, then from Proposition 3.43 it follows that QH P NP [h] . From Theorem 2.25 we thus have the collapse of the polynomial-time hierarchy.
Reference: [97] <author> Karp, R. </author> <title> Reducibility among combinatorial problems. In Complexity of Computer Computations, </title> <editor> R. Miller and J. Thatcher, Eds. </editor> <publisher> Plenum Press, </publisher> <year> 1972, </year> <pages> pp. 85-103. BIBLIOGRAPHY 101 </pages>
Reference-contexts: On the other hand, for the majority of interesting problems, including the Min TSP, there seemed to be no way to efficiently find optimum solutions. Eventually, the theory of NP-completeness <ref> [44, 97, 111] </ref> came up giving an explanation to this phenomenon and providing a unified framework to deal with the intractability of optimization problems. <p> 2 ; fl)-OR disperser (and thus an (n 1 ; n 2 ; ")-switcher) and its maximum degree is O ((n 1 + n 2 )=n 2 " 2 ). * 4.8 Attributions and Related Works Gadgets arose in NP-completeness proofs starting with the original works of Cook and Karp <ref> [44, 97] </ref>. Bellare, Goldreich and Sudan [25] were the first to propose a concrete definition, that is also accompanied by a cost. Khanna and Sudan [103] gave a definition that is a bit more formal and that is identical to Definition 4.1 except that they do not consider weights.
Reference: [98] <author> Karp, R., and Lipton, R. </author> <title> Some connections between nonuniform and uniform complexity classes. </title> <booktitle> In Proceedings of the 21th IEEE Symposium on Foundations of Computer Science (1980), </booktitle> <pages> pp. 302-309. </pages>
Reference-contexts: We have a variable y ~a; ~ b for any ~a 2 f0; 1g 3 and any ~ b 2 f0; 1g 4 , plus additional variables ^y ~a;b (~a) for any ~a : PC (~a) = 1. The formulation is maximize P subject to P P 8j 2 <ref> [98] </ref> ~a; ~ b y ~a; ~ b C j (~a; ~ b) ~a:PC (~a)=1 ^y ~a;b (~a) C j (~a; b (~a)) (8~a : PC (~a) = 1) ^y ~a;b (~a) 0 (DUAL1) There exists a feasible solution for (DUAL1) whose cost is 11. * Corollary 4.36 If is an <p> Thus, instead of a polynomial-time reduction we use a P/poly reduction, and this allows us to prove hardness results under the hypothesis that NP 6 P/poly. * Recall that if NP P/poly then the polynomial hierarchy collapses <ref> [98] </ref>. Our techniques also yield results regarding the approximability of the Min Vertex Cover problem on graphs having a non-linear number of edges.
Reference: [99] <author> Khanna, S. </author> <type> Personal Communication, </type> <year> 1996. </year>
Reference: [100] <author> Khanna, S., Linial, N., and Safra, S. </author> <title> On the hardness of approximating the chromatic number. </title> <booktitle> In Proceedings of the 2nd IEEE Israel Symposium on Theory of Computing and Systems (1993), </booktitle> <pages> pp. 250-260. </pages>
Reference-contexts: Coloring. Given a graph G and the promise that it is 3-colorable, it is possible to color it with n 0:2143 colors [95, 32]. On the other hand it is NP-hard to color it with less than 5 colors <ref> [100] </ref>. It is a widespread believing that it is hard to use even O (log n) colors, but it would be a good improvement even to prove hardness within any fixed constant. Arora [6] shows that "current techniques" do not suffice for that.
Reference: [101] <author> Khanna, S., and Motwani, R. </author> <title> Towards a syntactic characterization of PTAS. </title> <booktitle> In Proceedings of the 28th ACM Symposium on Theory of Computing (1996), </booktitle> <pages> pp. 329-337. </pages>
Reference-contexts: We will use our reduction technique to develop linear-time approximation schemes for both problems. The approximation schemes we describe are a composition of the reductions of Section 3.3.1 and of the linear time PTAS's for Max kSat and Max k-CSP that are implied by the techniques of <ref> [19, 85, 101] </ref>. We recall the definition of planar instance of a constraint satisfaction problem. Definition 3.30 (Incidence Graph) Let F be a (possibly infinite) constraint family. Let ' be an instance of Max Weight F over variable set X. <p> For a constraint family F, Max Planar F is the restriction of Max F to instances whose incidence graph is planar. We will be particularly interested in Max Planar k-CSP, Max Planar Sat, and Max Planar GSAT-B. Khanna and Motwani <ref> [101] </ref> prove that the latter two problems have a PTAS that computes (1 + ")-approximate solutions in time is O (n 1=" ). <p> We use the fact that the techniques of Khanna and Motwani yield linear-time PTAS's when specialized to Max kSat and Max k-CSP. We give a sketch of this latter result. We first give some definitions; we follow the exposition of <ref> [101] </ref>. Definition 3.31 (Tree Decomposition) A tree decomposition of a graph G = (V; E) is a 2-tuple (fX (i) : i 2 Ig; T = (I; F )) such that: 3.3. <p> n) = O (2 k (h+1) (m + n)) = O (m + n). * Theorem 3.37 For fixed " &gt; 0, Max Planar k-CSP admits an (1 + ")-approximate linear time algorithm, Proof:[Sketch] Follows from Theorem 3.36 using the construction outlined in the first part of the proof of <ref> [101, Theorem 1] </ref> (see also [19, Theorem 1]). * Hunt et al. [85] proved the following related result. <p> Lemma 3.28 has been proved in [50] using the PCP Theorem. The PCP-free proof given here is from [51]. Polynomial time approximation schemes for a large variety of planar constraint satisfaction problems have been developed by Khanna and Motwani <ref> [101] </ref>. Hunt et al. [85] developed NC approximation schemes for planar constraint satisfaction problems were each constraint depends on at most a constant number of variables. <p> Algorithmic Applications Approximation Schemes. Our reduction technique described in Section 3.3 implies efficient PTAS's for the planar versions of Max Sat and Max GSAT-B. Khanna and Motwani <ref> [101] </ref> gave approximation schemes for a larger class of logically defined problems: we don't know if an improved reduction can yield an approximation scheme for other problems as well. Unary Constraints.
Reference: [102] <author> Khanna, S., Motwani, R., Sudan, M., and Vazirani, U. </author> <title> On syntactic versus computational views of approximability. </title> <booktitle> In Proceedings of the 35th IEEE Symposium on Foundations of Computer Science (1994), </booktitle> <pages> pp. 819-830. </pages>
Reference-contexts: INTRODUCTION The Structural Revival A new spate of results of structural flavour has recently come up stimulated by the PCP Theorem and its powerful corollaries. Khanna, Motwani, Sudan, and Vazirani <ref> [102] </ref> use the PCP Theorem to prove that Max 3Sat is complete for APX PB (the restriction of APX to problems with polynomially bounded objective function). <p> A lot of (sometimes artificial) classes were necessary to see them as completeness results. The work of Khanna, Motwani, Sudan and Vazirani <ref> [102] </ref> unified most of these classes; however we already mentioned the fact that their work does not extend beyond polynomially bounded classes. Additionally, in some classes one was forced to distinguish between maximization and minimization problems: there were Max NPO-complete and Min NPO-complete problems but not any NPO-complete problems. <p> The L-reduction used by Papadimitriou and Yannakakis [123] does not preserve constant-factor approximability. More dramatically, the closure of Max SNP under L-reductions con tains non-approximable problems. Both results are proved assuming P 6= NP " co-NP. 2. Max Sat is not APX-complete under E-reductions (used by Khanna et al. <ref> [102] </ref>) nor under P-reductions (used by Crescenzi and Panconesi [47]), unless P NP = P NP [O (log n)] (a fairly unlikely event). 3. Max Sat is not even APX PB-complete under L-reductions (unless P = NP). The first result contradicts a wide-spread belief. <p> L-reducibility preserves approximation in a somehow strange 2.2. APPROXIMATION-PRESERVING REDUCIBILITIES 21 way, putting separate constraints on the optima and on the additive errors of the two problems. The E-reducibility (for error reducibility) introduced by Khanna et al. <ref> [102] </ref>, instead, imposes a linear relation directly between the performance ratios. Definition 2.14 (E-reducibility) Let A and B be two NPO problems. <p> As a final observation, our results can be seen as extensions of a result of <ref> [102] </ref> in which general sufficient (but not necessary) conditions for APX-completeness are proved. <p> From the above discussion it follows that (f E ; g E ; ff E ) is an E-reduction from A to B. * Khanna et al. <ref> [102] </ref>, have shown that Max 3Sat is APX PB-complete with respect to the E-reducibility. Using Theorem 3.3 and the fact that Max 3Sat is in Max SNP [123], lots of new completeness and hardness results can be inferred from the literature. <p> To this aim, we first quote the following result from <ref> [102] </ref> that follows from the proof of the PCP theorem. <p> Since A was an arbitrary maximization problem in APX, it follows that Max 3Sat is APX complete. * We proved the APX-completeness of Max 3Sat from scratch to demonstrate the power of the AP-reducibility: the above proof is slightly easier then the APX PB-completeness proof appeared in <ref> [102] </ref>. Khanna et al. [102] partition the interval [t A (x); r A t A (x)] into a polynomial (instead that constant) number of subintervals, and then a few calculations are needed to show that an approximation for the Max 3Sat instance yields an approximation for problem A. <p> A was an arbitrary maximization problem in APX, it follows that Max 3Sat is APX complete. * We proved the APX-completeness of Max 3Sat from scratch to demonstrate the power of the AP-reducibility: the above proof is slightly easier then the APX PB-completeness proof appeared in <ref> [102] </ref>. Khanna et al. [102] partition the interval [t A (x); r A t A (x)] into a polynomial (instead that constant) number of subintervals, and then a few calculations are needed to show that an approximation for the Max 3Sat instance yields an approximation for problem A. <p> Then A is C-complete under AP-reductions. Khanna et al. <ref> [102] </ref> proved that Max Clique and Min Node Coloring are polyAPX PB-complete under E-reductions. From the reduction technique of Khanna et al. [102] and the recent hardness result for Min Set Cover by Raz and Safra [126] (see also a similar independent result by Arora and Sudan [11]), it follows that <p> Then A is C-complete under AP-reductions. Khanna et al. <ref> [102] </ref> proved that Max Clique and Min Node Coloring are polyAPX PB-complete under E-reductions. From the reduction technique of Khanna et al. [102] and the recent hardness result for Min Set Cover by Raz and Safra [126] (see also a similar independent result by Arora and Sudan [11]), it follows that Min Set Cover, Min Dominating Set and Min Hitting Set are logAPX PB-complete under E-reductions. <p> Theorem 3.48 A polyAPX problem A is polyAPX-complete if and only if it is self-improvable and A r 0 is NPF NP [log log n+O (1)] -hard for some r 0 &gt; 1. Proof: Let A be a polyAPX-complete problem. Since Max Clique is self-improvable [70] and poly-APX-complete <ref> [102] </ref> and since the equivalence with respect to the AP-reducibility preserves the self-improvability property (see [119]), we have that A is self-improvable. It is then sufficient to prove that A 2 is hard for NPF NP [log log n+O (1)] . <p> Theorem 3.56 If P MC 1 P MC 2 then the polynomial-time hierarchy collapses. 3.6. ATTRIBUTIONS AND RELATED WORKS 55 3.6 Attributions and Related Works The starting point of the results of this chapter has been a preliminary version of <ref> [102] </ref>, where the E-reducibility was defined and completeness results in polynomially bounded approximation classes were proved. The idea of "scaling weights" to avoid the restriction to polynomially bounded classes was also suggested.
Reference: [103] <author> Khanna, S., and Sudan, M. </author> <title> The optimization complexity of constraint satisfaction problems. </title> <type> Tech. Rep. </type> <address> TR96-028, </address> <booktitle> Electronic Colloquium on Computational Complexity, </booktitle> <year> 1996. </year> <note> See also [104]. </note>
Reference-contexts: Bellare, Goldreich and Sudan [25] were the first to propose a concrete definition, that is also accompanied by a cost. Khanna and Sudan <ref> [103] </ref> gave a definition that is a bit more formal and that is identical to Definition 4.1 except that they do not consider weights. Constraint satisfaction problems are somehow implicit in [123]; definitions similar to ours have been given by Hunt et al. [85] and by Khanna and Sudan [103]. <p> Sudan <ref> [103] </ref> gave a definition that is a bit more formal and that is identical to Definition 4.1 except that they do not consider weights. Constraint satisfaction problems are somehow implicit in [123]; definitions similar to ours have been given by Hunt et al. [85] and by Khanna and Sudan [103]. The use of linear programming to find optimum gadgets, the analysis of the Max Weight 3SAT and Max Weight 3CSP algorithms and the lower bounds using duality are from a joint paper with Greg Sorkin, Madhu Sudan and David Williamson [132]. Theorems 4.27 and 4.28 are from [131].
Reference: [104] <author> Khanna, S., Sudan, M., and Williamson, D. </author> <title> A complete classification of the approxima-bility of maximization problems derived from boolean constraint satisfaction. </title> <booktitle> In Proceedings of the 29th ACM Symposium on Theory of Computing (1997), </booktitle> <pages> pp. 11-20. </pages>
Reference: [105] <author> Kolaitis, P., and Thakur, M. </author> <title> Logical definability of NP optimization problems. </title> <booktitle> Information and Computation 115, 2 (1994), </booktitle> <pages> 321-353. </pages>
Reference-contexts: Panconesi and Ranjan [119] proved that Max Clique is not in Max SNP and defined a class where Max Clique is complete. Kolaitis and Thakur performed a thorough investigation of syntactic classes <ref> [105] </ref> and extended the approach to minimization problems [106]. <p> Clearly, the following inclusions hold: FPTAS PTAS APTAS APX log-APX poly-APX exp-APX NPO: It is also easy to see that these inclusions are strict if and only if P 6= NP. We refer to [123] (see also <ref> [105] </ref>) for a formal definition of Max NP and Max SNP. We here give informal but equivalent definitions.
Reference: [106] <author> Kolaitis, P., and Thakur, M. </author> <title> Approximation properties of NP minimization classes. </title> <journal> Journal of Computer and System Sciences 50 (1995), </journal> <pages> 391-411. </pages> <note> Preliminary version in Proc. of Structures91. </note>
Reference-contexts: Panconesi and Ranjan [119] proved that Max Clique is not in Max SNP and defined a class where Max Clique is complete. Kolaitis and Thakur performed a thorough investigation of syntactic classes [105] and extended the approach to minimization problems <ref> [106] </ref>.
Reference: [107] <author> Krentel, M. </author> <title> The complexity of optimization problems. </title> <journal> Journal of Computer and System Sciences 36 (1988), </journal> <pages> 490-509. </pages>
Reference-contexts: Ausiello, D'Atri and Protasi [14] also define a notion of reducibility among optimization problems. Their reduction preserves a lot of structure of the problem (not only the approximability properties). Again, the issue of completeness was not addressed in their paper. Krentel <ref> [107] </ref> was the first to prove completeness results in classes of optimization problems. The focus of his research was on the hardness of computing optimum solutions to optimization problems, and so the reduction he defined is not approximation-preserving. <p> INTRODUCTION also preserve the hardness of computing optimum solutions. This is, perhaps, an inheritage of the old approaches based on NP-completeness. As proved by Krentel <ref> [107] </ref>, problems that are easier to approximate can be more difficult to solve optimally. Technical Contributions. We use advanced tools from structural complexity theory, not used before in the analysis of approximation-preserving reductions. <p> Proposition 3.10 If an optimum preserving preorder exists in NPO such that a polynomially bounded problem A is a -maximum in APX then P NP = P NP [O (log n)] . Proof: Recall that from the results of <ref> [107] </ref> it follows that P NP P MK , where MK stands for Max Knapsack, moreover it is well-known that Max Knapsack belongs to PTAS, and then to APX [86]. <p> Lemma 3.55 For any NPO PB problem A and for any r &gt; 1, P A r P NP [log log n+O (1)] . From this lemma, from the fact that P NP [log n] is contained in P MC 1 where MC stands for Max Clique <ref> [107] </ref>, and from the fact that if a constant k exists such that P NP [log log n+k] = P NP [log n] ; then the polynomial-time hierarchy collapses (see Theorem 2.26), it follows the next result that solves an open question posed in [40].
Reference: [108] <author> Kruskal, J. </author> <title> On the shortest spanning subtree of a graph and the traveling salesman problem. </title> <booktitle> Proceedings of the AMS 7 (1956), </booktitle> <pages> 48-50. </pages>
Reference-contexts: Nevertheless, for some problems, clever algorithms can be found that efficiently 1 compute an optimum solution. Some of these algorithms were among the best early achievements of algorithmics: Kruskal's algorithm for finding a minimum cost spanning tree <ref> [108] </ref>, Dijkstra's algorithm for finding shortest paths in a graph [54], Edmond and Karp's version of Ford and Fulkerson's algorithm for maximum flow [65, 55], and so on.
Reference: [109] <author> Lapidot, D., and Shamir, A. </author> <title> Fully parallelized multi prover protocols for NEXPTIME. </title> <booktitle> In Proceedings of the 32nd IEEE Symposium on Foundations of Computer Science (1991), </booktitle> <pages> pp. 13-18. </pages>
Reference-contexts: Their reductions are not from the verifier of the PCP Theorem, but from the slightly different model of two-provers one-round proof systems <ref> [109, 64] </ref> (Bellare [23] was perhaps the first to explore the connection between such proof systems and approximation problems). 1.1.4 Contemporary Results The development of new results in this field unfolded at an amazing pace in the last three years. Even very recent surveys are slightly outdated [24, 94].
Reference: [110] <author> Leighton, F., and Rao, S. </author> <title> An approximate max-flow min-cut theorem for uniform multi-commodity flow problems with applications to approximation algorithms. </title> <booktitle> In Proceedings of the 29th IEEE Symposium on Foundations of Computer Science (1988), </booktitle> <pages> pp. 422-431. </pages>
Reference-contexts: There is a large class of minimization problems that can be approximated within poly (log n) factors and that (at most) are only known to be Max SNP-hard. For example Min Edge Deletion Bipartite Subgraph, that is O (log n)-approximable using the approximate max-flow min-cut theorem <ref> [110, 72, 112] </ref>, and Min Feedback Vertex Set, Min Linear Arrangment, Min Clause Deletion 2SAT, that are O (log n log log n)-approximable using the spreading metric approach [57, 56]. The Min Linear Arrangment problem is not even known to be Max SNP-hard.
Reference: [111] <author> Levin, L. A. </author> <title> Universal search problems. </title> <booktitle> Problemi Peredachi Informatsii 9 (1973), </booktitle> <pages> 265-266. </pages>
Reference-contexts: On the other hand, for the majority of interesting problems, including the Min TSP, there seemed to be no way to efficiently find optimum solutions. Eventually, the theory of NP-completeness <ref> [44, 97, 111] </ref> came up giving an explanation to this phenomenon and providing a unified framework to deal with the intractability of optimization problems.
Reference: [112] <author> Linial, N., London, E., and Rabinovich, Y. </author> <title> The geometry of graphs and some of its algorithmic applications. </title> <journal> Combinatorica 15, </journal> <volume> 2 (1995), </volume> <pages> 215-245. </pages>
Reference-contexts: There is a large class of minimization problems that can be approximated within poly (log n) factors and that (at most) are only known to be Max SNP-hard. For example Min Edge Deletion Bipartite Subgraph, that is O (log n)-approximable using the approximate max-flow min-cut theorem <ref> [110, 72, 112] </ref>, and Min Feedback Vertex Set, Min Linear Arrangment, Min Clause Deletion 2SAT, that are O (log n log log n)-approximable using the spreading metric approach [57, 56]. The Min Linear Arrangment problem is not even known to be Max SNP-hard.
Reference: [113] <author> Long, T. </author> <title> On fl-reducibility versus polynomial time many-one reducibility. </title> <booktitle> Theoretical Computer Science 14 (1981), </booktitle> <pages> 91-101. </pages>
Reference-contexts: Moreover, it is easy to see that A L-reduces to B via f x:x, g xy:y, ff = 1, and fi = 1. * Observe that in <ref> [113] </ref> it is shown that the third statement of the above theorem holds if and only if the fl-reducibility is different from the many-one reducibility. Moreover, in [87] it is shown that the latter hypothesis is somewhat intermediate between P 6= NP " co-NP and P 6= NP.
Reference: [114] <author> Lubotzky, A., Phillips, R., and Sarnak, P. </author> <title> Ramanujan graphs. </title> <booktitle> Combinatorica 8 (1988), </booktitle> <pages> 261-277. 102 BIBLIOGRAPHY </pages>
Reference-contexts: with n nodes, where n 1 + n 2 n 4 (n 1 + n 2 ), and 512 (n 1 + n 2 )=n 2 fl 2 &lt; d 2048 (n 1 + n 2 )=n 2 fl 2 (such a graph exists and is constructible in polynomial time <ref> [114] </ref>). The second largest eigenvalue of G is at most 2 d 1.
Reference: [115] <author> Lund, C., Fortnow, L., Karloff, H., and Nisan, N. </author> <title> Algebraic methods for interactive proof systems. </title> <journal> Journal of the ACM 39, </journal> <volume> 4 (1992), </volume> <pages> 859-868. </pages> <note> Preliminary version in Proc of FOCS'90. </note>
Reference-contexts: These new models were supposed to be only slightly more powerful than NP, until, in a major 5 The FRS terminology was actually slightly different; they referred to oracles rather than to proofs. However there is no conceptual difference. 6 CHAPTER 1. INTRODUCTION breakthrough, Lund, Fortnow, Karloff and Nisan <ref> [115] </ref> proved that IP contains the polynomial-time hierarchy. Shortly thereafter, Shamir [128] proved that IP is equal to PSPACE and Babai, Fortnow and Lund [17] proved that MIP equals NEXP.
Reference: [116] <author> Lund, C., and Yannakakis, M. </author> <title> On the hardness of approximating minimization problems. </title> <journal> Journal of the ACM 41 (1994), </journal> <pages> 960-981. </pages> <note> Preliminary version in Proc. of STOC'93. </note>
Reference-contexts: Other optimization problems were then shown to be related to proof-checking, and a whole bunch of long-standing open questions were rapidly solved one after the other. In particular, Lund and Yannakakis <ref> [116] </ref> proved a 1 4 log n) lower bound for the approximability of Min Set Cover (almost matching Johnson's approximation algorithm) and an n c lower bound for Min Node Coloring, for some c &gt; 0.
Reference: [117] <author> Marathe, M., and Ravi, S. </author> <title> On approximation algorithms for the minimum satisfiability problem. </title> <journal> Information Processing Letters 58, </journal> <volume> 1 (1996), </volume> <pages> 23-29. </pages>
Reference-contexts: They proved a 17=16 hardness result improved to 7=6 " by H-astad [80]. We show that Min Vertex Cover can be seen as a minimization constraint satisfaction problem: it is equivalent to a problem known as Min Sat (this result has been independently discovered in <ref> [117] </ref> and in [82]). This equivalence provides an improved approximation algorithm and a new hardness result for Min Sat. As for the previously mentioned maximization problems, we are interested in comparing weighted and non-weighted versions of Min Vertex Cover and Min Sat. <p> There was no previous result for Max Weight Sat versus Max Simple Sat and Max Weight 2SAT versus Max Simple 2SAT. In the same paper [49] we also proved the equivalence between Min Sat and Min Vertex Cover (also independently obtained in <ref> [117, 82] </ref>) and between them and their weighted versions. The reduction from PCP verifiers with low free bit complexity to Min Vertex Cover in bounded degree graph is from a joint paper with Andrea Clementi [42].
Reference: [118] <author> Orponen, P., and Mannila, H. </author> <title> On approximation preserving reductions: complete problems and robust measures. </title> <type> Tech. Rep. </type> <institution> C-1987-28, Department of Computer Science, University of Helsinki, </institution> <year> 1987. </year>
Reference-contexts: We will elaborate later on this point and on how it is related to the correct definition of approximation-preserving reducibility. The seminal work of Orponen and Manilla <ref> [118] </ref> defined approximation-preserving reducibilities and contained completeness results in Min NPO 4 . For the first time, it was observed that a completeness result in an approximation class (under an approximation-preserving reducibility) implies a non-approximability result. <p> Approximation preserving reducibilities are defined by imposing some relation between the performance ratios of y 0 and g (x; y 0 ). The strictest notion of approximation preserving reducibilities is the S-reducibility (for strict reducibility) introduced by Orponen and Manilla <ref> [118] </ref>. Definition 2.12 (S-reducibility) Let A and B be two NPO problems. <p> Hence, the E-reducibility not only preserves membership in PTAS but also membership in expAPX, polyAPX, logAPX, and APX. Other reducibilities appearing in the literature are the P-reducibility (for PTAS-preserving reducibility) and the A-reducibility (for APX-preserving reducibility) defined by Crescenzi and Pan-conesi [123] (similar reducibilities are also defined in <ref> [118] </ref>). Definition 2.15 (P-reducibility) Let A and B be two NPO problems. <p> STRUCTURE IN APPROXIMATION CLASSES 3.2 Completeness 3.2.1 NPO-complete problems In this section, we will prove that there are natural problems that are complete for the classes NPO and NPO PB. Previously, completeness results have been obtained just for Max NPO, Min NPO, Max PB, and Min PB <ref> [47, 118, 29, 93] </ref>. One example of such a result is the following theorem.
Reference: [119] <author> Panconesi, A., and Ranjan, D. </author> <title> Quantifiers and approximations. </title> <booktitle> Theoretical Computer Science 107 (1993), </booktitle> <pages> 145-163. </pages> <note> Preliminary version in Proc. of STOC'90. </note>
Reference-contexts: Their result is proved using randomized graph product. The approach of syntactically defining approximation classes with natural complete problems was furtherly explored in a series of papers. Panconesi and Ranjan <ref> [119] </ref> proved that Max Clique is not in Max SNP and defined a class where Max Clique is complete. Kolaitis and Thakur performed a thorough investigation of syntactic classes [105] and extended the approach to minimization problems [106]. <p> The combinatorial property used to characterize polyAPX-complete problems is the well-known self-improvability (see, for instance, <ref> [119] </ref>). <p> Proof: Let A be a polyAPX-complete problem. Since Max Clique is self-improvable [70] and poly-APX-complete [102] and since the equivalence with respect to the AP-reducibility preserves the self-improvability property (see <ref> [119] </ref>), we have that A is self-improvable. It is then sufficient to prove that A 2 is hard for NPF NP [log log n+O (1)] . From the poly-APX-completeness of A we have that Max Clique AP A: let ff be the constant of this reduction.
Reference: [120] <author> Papadimitriou, C. </author> <title> Computational Complexity. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: Max SNP-completeness theory is treated very broadly in Papadim-itriou's book on computational complexity <ref> [120] </ref>. In particular, several Max SNP-completeness proofs that are only sketched in [123] are fully spelled out (and sometimes simplified) in [120]. Interactive proof systems and probabilistically checkable proofs are a fascinating field, and a very complicated one: thus it is an ideal terrain for surveys. <p> Max SNP-completeness theory is treated very broadly in Papadim-itriou's book on computational complexity <ref> [120] </ref>. In particular, several Max SNP-completeness proofs that are only sketched in [123] are fully spelled out (and sometimes simplified) in [120]. Interactive proof systems and probabilistically checkable proofs are a fascinating field, and a very complicated one: thus it is an ideal terrain for surveys. An enjoyable account on the meaning of the PCP Theorem and on its applications to approximation theory is given by Johnson [89]. <p> Bierce [31]) We assume the reader to be familiar with the basic concepts of computational complexity theory. For the definitions of most of the complexity classes used in this thesis we refer the reader to one of the books on the subject (see, for example, <ref> [70, 20, 36, 120] </ref>). In this chapter we will review the definitions of a few approximation-preserving reducibilities, some facts about PCP's and query complexity, and we will define the problems that are mentioned throughout the thesis. <p> it is possible to L-reduce the maximization problem B defined in the last part of the proof of the previous theorem to Max 3Sat: this implies that the closure of Max SNP with respect to the L-reducibility is not included in APX, contrary to what is commonly believed (e.g. see <ref> [120, Page 314] </ref>). 3.1.2 The E-reducibility Since the E-reducibility preserves membership in APX, we have that NPO problems should exist which are L-reducible to each other but not E-reducible. However, the following result shows that within the class APX the E-reducibility is just a generalization of the L-reducibility.
Reference: [121] <author> Papadimitriou, C., and Yannakakis, M. </author> <title> On limited nondeterminism and the complexity of the VC dimension. </title> <booktitle> In Proceedings of the 8th IEEE Conference on Structure in Complexity Theory (1993), </booktitle> <pages> pp. 305-312. </pages>
Reference-contexts: Regarding the relevance of introducing new classes to capture the complexity of not-understood problems, we wish to quote two beautiful paragraphs from [123] and <ref> [121] </ref> about the nature of complexity classes and the reason why they are worth being defined.
Reference: [122] <author> Papadimitriou, C., and Yannakakis, M. </author> <title> The travelling salesman problem with distances one and two. </title> <booktitle> Mathematics of Operations Research 18 (1993), </booktitle> <pages> 1-11. </pages>
Reference-contexts: Papadimitriou and M. Yannakakis) The success of this approach was immediate and widespread. Other Max SNP-hard problems were soon discovered, including the restriction of Min TSP to metric spaces <ref> [122] </ref>, Min Steiner Tree [30], Shortest Common Superstring [33], and Multiway Cut [52]. In related research Berman and Schnitger [29] proved that if Max SNP problems do not have a randomized PTAS, then Max Clique is hard to approximate within n c , for some c &gt; 0.
Reference: [123] <author> Papadimitriou, C. H., and Yannakakis, M. </author> <title> Optimization, approximation, and complexity classes. </title> <journal> Journal of Computer and System Sciences 43 (1991), </journal> <pages> 425-440. </pages> <note> Preliminary version in Proc. of STOC'88. </note>
Reference-contexts: Introduction Once more, we have decreased the number of open questions in the field without, alas, increasing much the number of answers! (C.H. Papadimitriou and M. Yannakakis <ref> [123] </ref>) In a combinatorial optimization problem, one is given an instance to which a finite set of feasible solutions is associated. <p> We will come back to this fact in the next section. More recently, other completeness results were obtained by Berman and Schnitger [29], and Kann [93] in classes of problems with polynomially bounded measure function. The most influential work of this period was by Papadimitriou and Yannakakis <ref> [123] </ref>, where a radically new approach was taken. Instead of searching for complete problems in natural (compu-tationally defined) approximation classes, they focused on natural problems and found a reasonable class where these problems are complete. Their starting point is Fagin's [58] logical characterization of NP. <p> Regarding the relevance of introducing new classes to capture the complexity of not-understood problems, we wish to quote two beautiful paragraphs from <ref> [123] </ref> and [121] about the nature of complexity classes and the reason why they are worth being defined. <p> Max SNP-completeness theory is treated very broadly in Papadim-itriou's book on computational complexity [120]. In particular, several Max SNP-completeness proofs that are only sketched in <ref> [123] </ref> are fully spelled out (and sometimes simplified) in [120]. Interactive proof systems and probabilistically checkable proofs are a fascinating field, and a very complicated one: thus it is an ideal terrain for surveys. <p> We develop a systematic study of the properties of known approximation-preserving reducibil-ities. We prove that the lack of unified completeness results in a few natural classes is due to inherent limitations of known reducibilities. In particular, we prove that 1. The L-reduction used by Papadimitriou and Yannakakis <ref> [123] </ref> does not preserve constant-factor approximability. More dramatically, the closure of Max SNP under L-reductions con tains non-approximable problems. Both results are proved assuming P 6= NP " co-NP. 2. <p> From a structural point of view, the Max NP-completeness of Max 3Sat means that Max NP problems are no harder to approximate than Max SNP ones. The definition of Max NP (see Section 2.1 and <ref> [123] </ref>) involves a richer logical structure than Max SNP, and the PCP reduction does not clearly explain how come it is possible to get rid of this additional structure. <p> Clearly, the following inclusions hold: FPTAS PTAS APTAS APX log-APX poly-APX exp-APX NPO: It is also easy to see that these inclusions are strict if and only if P 6= NP. We refer to <ref> [123] </ref> (see also [105]) for a formal definition of Max NP and Max SNP. We here give informal but equivalent definitions. <p> In Section 4.6.1 we shall see an S-reduction between Min Vertex Cover and Min Sat. It is straightforward to check that S-reducibility is transitive and that it preserves membership in PTAS and in APX. The L-reducibility (for linear reducibility) introduced by Papadimitriou and Yannakakis <ref> [123] </ref> is often the most practical reducibility to use in order to show that a problem is at least as hard to approximate as another one. Definition 2.13 (L-reducibility) Let A and B be two NPO problems. <p> g; ff; fi) is an L-reduction from A to B then, for any x 2 I A and for any y 2 sol B (f (x)), we have that E A (x; g (x; y)) fffiE B (f (x); y); so that if B 2 PTAS then A 2 PTAS <ref> [123] </ref>. The above inequality also implies that if A is a minimization problem and an r-approximate algorithm for B exists, then a (1 + fffi (r 1))- approximate algorithm for A exists. L-reducibility preserves approximation in a somehow strange 2.2. <p> Hence, the E-reducibility not only preserves membership in PTAS but also membership in expAPX, polyAPX, logAPX, and APX. Other reducibilities appearing in the literature are the P-reducibility (for PTAS-preserving reducibility) and the A-reducibility (for APX-preserving reducibility) defined by Crescenzi and Pan-conesi <ref> [123] </ref> (similar reducibilities are also defined in [118]). Definition 2.15 (P-reducibility) Let A and B be two NPO problems. <p> Corollary 3.2 The L-reducibility does not preserve membership in APX unless P = NP " co-NP. In other words, there is strong evidence that, even though the L-reducibility is suitable for proving completeness results within classes contained in APX (such as Max SNP <ref> [123] </ref>), this reducibility cannot be used to define the notion of completeness for classes beyond APX. Moreover, it cannot be blindly used to obtain positive results, that is, to prove the existence of approximation algorithms via reductions. <p> Using Theorem 3.3 and the fact that Max 3Sat is in Max SNP <ref> [123] </ref>, lots of new completeness and hardness results can be inferred from the literature. Corollary 3.4 If an NPO problem A is Max SNP-hard with respect to the L-reducibility, then it is APX PB-hard with respect to the E-reducibility. <p> Proof: For any B, we give a PTAS-reduction from Max GSAT-B to Max 3Sat: this reduction will be the composition of the reduction from Max GSAT-B to Max kB-CSP given in Lemma 3.25 and of the standard reduction from Max kB-CSP to Max 3Sat <ref> [123] </ref>. In the first reduction, k is not fixed but depends on the approximation factor that we want to preserve. This is not in contradiction with the definition of PTAS-reduction. For any k, the Max k-CSP problem is in 3.3. <p> For any k, the Max k-CSP problem is in 3.3. A PCP-FREE COMPLETENESS RESULT 45 Max SNP, and thus a PTAS-reduction (f k ; g k ; c k ) exists from Max k-CSP to Max 3Sat. An inspection of the results of <ref> [123] </ref> ensures that actually a single triple of functions (f; g; c) exist such that for any k (f (; ; k); g (; ; ; k); c (; k)) is a PTAS-reduction. Let ' be an instance of Max GSAT-B, r &gt; 1. <p> Khanna and Sudan [103] gave a definition that is a bit more formal and that is identical to Definition 4.1 except that they do not consider weights. Constraint satisfaction problems are somehow implicit in <ref> [123] </ref>; definitions similar to ours have been given by Hunt et al. [85] and by Khanna and Sudan [103]. <p> The reduction from PCP verifiers with low free bit complexity to Min Vertex Cover in bounded degree graph is from a joint paper with Andrea Clementi [42]. Previous results include the Max SNP-hardness of Min Vertex Cover in graphs of maximum degree 4 <ref> [123] </ref> and 3 [28]. 90 CHAPTER 4. TIGHT REDUCTIONS Chapter 5 Conclusions and Open Questions Plan, v.t. To bother about the best method of accom plishing an accidental result. (A. Bierce [31]) This thesis dealt with the hardness of combinatorial approximation problems.
Reference: [124] <author> Paz, A., and Moran, S. </author> <title> Non deterministic polynomial optimization problems and their approximation. </title> <booktitle> Theoretical Computer Science 15 (1981), </booktitle> <pages> 251-277. </pages>
Reference-contexts: The idea of defining notions of reducibility directly on optimization problems had already been conceived in the early 1980s in two pioneering papers. A paper by Paz and Moran <ref> [124] </ref> was perhaps the first one to introduce the idea of approximation-preserving reducibilities, but they did not find complete problems in approximation classes. Ausiello, D'Atri and Protasi [14] also define a notion of reducibility among optimization problems.
Reference: [125] <author> Queyranne, M. </author> <title> Bounds for assembly line balancing heuristics. </title> <booktitle> Operations Research 33 (1985), </booktitle> <pages> 1353-1359. </pages>
Reference-contexts: Without loss of generality, we can assume that the U i s are pairwise disjoint and that, for any i, P (U; s; ) be an instance of Min Ordered Bin Packing defined as follows (a similar construction has been used in <ref> [125] </ref>). 1. U = i=1 U i [ fv 1 ; : : : ; v k1 g where the v i s are new items. 2.
Reference: [126] <author> Raz, R., and Safra, S. </author> <title> A sub-constant error-probability low-degree test, and a sub-constant error-probability PCP characterization of NP. </title> <booktitle> In Proceedings of the 29th ACM Symposium on Theory of Computing (1997), </booktitle> <pages> pp. 475-484. </pages>
Reference-contexts: Then A is C-complete under AP-reductions. Khanna et al. [102] proved that Max Clique and Min Node Coloring are polyAPX PB-complete under E-reductions. From the reduction technique of Khanna et al. [102] and the recent hardness result for Min Set Cover by Raz and Safra <ref> [126] </ref> (see also a similar independent result by Arora and Sudan [11]), it follows that Min Set Cover, Min Dominating Set and Min Hitting Set are logAPX PB-complete under E-reductions.
Reference: [127] <author> Sahni, S., and Gonzalez, T. </author> <title> P-complete approximation problems. </title> <journal> Journal of the ACM 23 (1976), </journal> <pages> 555-565. </pages>
Reference-contexts: For several interesting problems, such as Max Clique, Min Vertex Cover, and Max 3Sat, this approach is useless, since for fixed k one can tell in polynomial time if the optimum is larger than k or not. Sahni and Gonzalez <ref> [127] </ref> used a "gap explosion" technique to prove that Min TSP, is not in APX. This technique only works in a very few cases.
Reference: [128] <author> Shamir, A. </author> <title> IP = PSPACE. </title> <journal> Journal of the ACM 39, </journal> <volume> 4 (1992), </volume> <pages> 869-877. </pages> <note> Preliminary version in Proc of FOCS'90. </note>
Reference-contexts: However there is no conceptual difference. 6 CHAPTER 1. INTRODUCTION breakthrough, Lund, Fortnow, Karloff and Nisan [115] proved that IP contains the polynomial-time hierarchy. Shortly thereafter, Shamir <ref> [128] </ref> proved that IP is equal to PSPACE and Babai, Fortnow and Lund [17] proved that MIP equals NEXP. The latter result was particularly astonishing: it means that for any language admitting exponentially long membership proofs, such proofs can be verified in polynomial time with low error probability.
Reference: [129] <author> Sipser, M. Expanders, </author> <title> randomness or time vs. space. </title> <booktitle> In Proceedings of the 1st IEEE Conference on Structure in Complexity Theory (1986), </booktitle> <publisher> Springer Verlag. </publisher>
Reference-contexts: This turns out to be an expansion property: switchers are indeed a generalization of OR dispersers. Definition 4.80 (OR disperser <ref> [129] </ref>) An (n 1 ; n 2 ; ")-disperser is a bipartite graph G = (V 1 ; V 2 ; E) such that jV 1 j = n 1 , jV 2 j = n 2 , and for any subsets A V 1 , B V 2 such that
Reference: [130] <author> Sudan, M. </author> <title> Efficient Checking of Polynomials and Proofs and the Hardness of Approximation Problems. </title> <publisher> ACM Distinguished Theses, LNCS 1001, Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: An enjoyable account on the meaning of the PCP Theorem and on its applications to approximation theory is given by Johnson [89]. The enterprising reader may want to have a look at the actual proof of the PCP Theorem: a full proof is contained in Sudan's thesis <ref> [130] </ref> and in Arora's one [5]. Arora and Lund [8] give a very clear account (with proofs) on how to use the PCP Theorem to prove non-approximability results. The latest non-approximability results are mentioned (with the exception of very recent ones) in a survey by Bellare [24].
Reference: [131] <author> Trevisan, L. </author> <title> Positive linear programming, parallel approximation, </title> <booktitle> and PCP's. In Proceedings of the 4th European Symposium on Algorithms (1996), </booktitle> <publisher> LNCS 1136, Springer-Verlag, </publisher> <pages> pp. 62-75. BIBLIOGRAPHY 103 </pages>
Reference-contexts: Similarly, we construct a gadget reducing Max 3CSP to Max 2Sat and, using Feige and Goemans' algorithm, we obtain a 2:721-approximate algorithm for Max 3CSP. The best previous result for this problem was 4 <ref> [131] </ref>. Our results, and some related ones, are summarized in Table 1.1. Finally, the LP formulation allows us to prove lower bounds by hand using dual analysis. We demonstrate this technique in a couple of cases where an automatic analysis is not possible (since 14 CHAPTER 1. <p> The use of linear programming to find optimum gadgets, the analysis of the Max Weight 3SAT and Max Weight 3CSP algorithms and the lower bounds using duality are from a joint paper with Greg Sorkin, Madhu Sudan and David Williamson [132]. Theorems 4.27 and 4.28 are from <ref> [131] </ref>. With reference to Theorem 4.20, the previous larger gap between the completeness and soundness achievable reading two bits was obtained starting from the hardness of Max 2Sat. It was 74=73 in [25], and would be 22=21 " in light of H-astad's results. <p> The previous best published analysis of a Max 3Sat approximation algorithm gave a 1:301 approximation factor [12]; a slightly better bound of 1:2499 could be obtained adapting the techniques of Goemans and Williamson [75]. The previous best approximation factor achievable for Max 3CSP was 4 <ref> [131] </ref>. The only previous lower bound on gadget construction is by Bellare, Goldreich and Sudan [25]. They prove that if an ff-gadget exists reducing PC 0 to E3SAT, and the total weight of the clauses of the gadget is ff, then ff 4. They use probabilistic arguments.
Reference: [132] <author> Trevisan, L., Sorkin, G., Sudan, M., and Williamson, D. Gadgets, </author> <title> approximation, and linear programming. </title> <booktitle> In Proceedings of the 37th IEEE Symposium on Foundations of Computer Science (1996), </booktitle> <pages> pp. 617-626. </pages>
Reference-contexts: The use of linear programming to find optimum gadgets, the analysis of the Max Weight 3SAT and Max Weight 3CSP algorithms and the lower bounds using duality are from a joint paper with Greg Sorkin, Madhu Sudan and David Williamson <ref> [132] </ref>. Theorems 4.27 and 4.28 are from [131]. With reference to Theorem 4.20, the previous larger gap between the completeness and soundness achievable reading two bits was obtained starting from the hardness of Max 2Sat. It was 74=73 in [25], and would be 22=21 " in light of H-astad's results.
Reference: [133] <author> Wagner, K. </author> <title> Bounded query computations. </title> <booktitle> In Proceedings of 3rd Structure in Complexity Theory Conference (1988), </booktitle> <pages> pp. 260-277. </pages>
Reference-contexts: The possibility that P NP = P NP [O (logn)] seems to be quite unlikely and, even if this event is currently not yet related to any other collapse in structural complexity theory, it is conjectured that it implies the collapse of the polynomial-time hierarchy <ref> [81, 133] </ref>. 3.1.3 The AP-reducibility The above mentioned drawback of the E-reducibility is due to the fact that an E-reduction preserves optimum values. Indeed, the linear relation between the performance ratios seems to be too restrictive.
Reference: [134] <author> Wee, T., and Magazine, J. </author> <title> Assembly line balancing as generalized bin packing. </title> <journal> Operations Research Letters 1 (1982), </journal> <pages> 56-58. </pages>
Reference-contexts: The optimum measure thus is at most 4k 1 so that any (1 + 1=(4k))-approximate solution is an optimum solution. Since Min Ordered Bin Packing belongs to APX <ref> [134] </ref> and A is APX-complete, then an AP-reduction (f 1 ; g 1 ; ff) exists from Min Ordered Bin Packing to A.
Reference: [135] <author> Yannakakis, M. </author> <title> On the approximation of maximum satisfiability. </title> <note> Journal of Algorithms 17 (1994), 475-502. Preliminary version in Proc. of SODA'92. </note>
Reference-contexts: E [m ('; t R )] (1 p)a + (1 (1 p) k+1 )m l (1=r)opt (') where the last inequality is due to the bound (3.6). Using the method of conditional expectation [4] (see also <ref> [135] </ref>) we can find in linear time an assignment t such that m ('; t ) m ('; t R ). <p> Observe that, by construction, an r-approximate solution for x ' is indeed an optimum solution provided that r &lt; 3=2. Let T be a 4/3-approximate algorithm for Max Sat <ref> [135, 75] </ref>. The reduction from Max Sat to Min Bin Packing is defined as follows: f ('; r) = t 1 ('); g ('; y; r) = T (') if r 4=3; t 2 (t 1 ('); y) otherwise. <p> Proof: The only non-trivial result is for Max Simple 2SAT (since 2SAT contains unary constraints). We use a result of Yannakakis <ref> [135] </ref> who proved that Max Weight 2SAT 1 AP Max Weight E2SAT. Thus we have that, for any ff &gt; 1, Max Weight 2SAT 1 AP Max Weight E2SAT ff AP Max Simple E2SAT : * The following corollary contains a small sample of the results implied by Theorem 4.62.

References-found: 135

