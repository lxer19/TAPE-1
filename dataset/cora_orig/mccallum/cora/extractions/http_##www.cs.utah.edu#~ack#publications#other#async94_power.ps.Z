URL: http://www.cs.utah.edu/~ack/publications/other/async94_power.ps.Z
Refering-URL: http://www.cs.utah.edu/~ack/publications/other.html
Root-URL: 
Email: (pkudva@cs.utah.edu)  VENKATESH AKELLA (akella@eecs.ucdavis.edu)  
Title: A Technique for Estimating Power in Self-timed Asynchronous Circuits  
Author: PRABHAKAR KUDVA 
Keyword: power, self-timed circuits, asynchronous systems  
Address: Salt Lake City, Utah 84112  Davis, CA 95616  
Affiliation: Dept. of Computer Science University of Utah  Dept. of Electrical Engineering and Computer Science University of California  
Abstract: In this paper we investigate the problem of estimating power consumption in a asynchronous (clockless) circuit. Specifically, we will integrate and extend recent works [7, 22] developed for the power estimation of synchronous circuits to self-timed circuits. A Petri net based abstraction for self-timed circuits is used to the derive algorithms for power estimation. The analysis is performed on the embedded discrete time Markov chain in the reachability graph of the Petri net. The technique developed is suitable to obtain quick power consumption estimates for architectural level optimizations. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Ajmone Marsan, G. B., and Conte, G. </author> <title> Performance Models of Multiprocessor Systems. </title> <publisher> The MIT Press, </publisher> <year> 1986. </year>
Reference-contexts: A detailed discussion of the discrete-time Markov chains can be found in the classic text by Feller [9] and their relationship to stochastic Petri nets are described in <ref> [1, 20] </ref>. The strongly connected components of the state space (when viewed as a directed graph) are the classes of the Markov Chain. The condensed graph with one vertex for each class is a directed acyclic graph with one root.
Reference: 2. <author> Akella, V. </author> <title> An Integrated Framework for the Automatic Synthesis of Efficient Self-Timed Circuits from Behavioral Specifications. </title> <type> PhD thesis, </type> <institution> Dept. of Computer Science, University of Utah, </institution> <address> Salt Lake City, UT 84112, </address> <year> 1992. </year>
Reference-contexts: We use the netlist generated by the SHILPA <ref> [2] </ref> compiler. From the netlists we build the Petri net models for the circuits. Before using the GTPN tool to conduct Markov chain analysis we need to annotate the Petri net transitions with delay and energy annotations.
Reference: 3. <author> Akella, V., and Gopalakrishnan, G. SHILPA: </author> <title> A high-level synthesis system for self-timed circuits. </title> <booktitle> In Proc. International Conf. Computer-Aided Design (ICCAD) (Nov. 1992), </booktitle> <publisher> IEEE Computer Society Press, </publisher> <pages> pp. 587-591. </pages>
Reference-contexts: experimental results Circuit Petri Net SPICE Time for Petri Net Power Est. (mW) Power Est. (mW) Est. (s) QR42 1.72 1.57 0.13 ICCAD1 3.2 3.47 0.18 CNT7 1.80 1.70 0.18 The examples considered include the QR42 (four-phase to two-phase) converter, a narrow two phase to four phase converter [6], ICCAD1 <ref> [3] </ref> which is a micropipeline state with some data processing, CNT7 and CNT5 [16] which are counters. Portions of a DCT processor [16] were also used to determine the accuracy of the techniques developed.
Reference: 4. <author> Alidina, M., Monteiro, J., and aand Abhijit Ghosh, S. D. </author> <title> Precomputation-based sequential logic optimization for low power sequential logic circuits. </title> <booktitle> In 1994 International Workshop on Low Power Design (Apr. </booktitle> <year> 1994). </year>
Reference-contexts: In this paper we show that, if one chooses a proper abstraction for the asynchronous circuits to accommodate the notion of a cycle of activity, then the recent work of Devadas et. al [7], Ghosh-Devadas et. al. [10], Monteiro-Devadas et al. [21] and Alidina-Monteiro-Devadas et al. <ref> [4] </ref> in the context of synchronous circuits, can be used to derive accurate algorithms for the problem of power estimation in self-timed circuits. First, we present a suitable framework to describe netlists of self-timed circuits using Petri nets.
Reference: 5. <author> Beerel, P. A., Hsieh, C.-T., and Wadekar, S. </author> <title> Estimation of energy consumption in speed-independent control circuits. </title> <booktitle> In 1995 International Workshop on Low Power Design (Apr. </booktitle> <year> 1995). </year>
Reference-contexts: More accurate estimation methods were given in our work [14] for self-timed circuits which more recently has been developed further for STG based circuits by Beerel et. al. <ref> [5] </ref>. The objective of this paper is to study the problem of estimation of power in a class of asynchronous circuits called self-timed circuits [18]. This forces us to revisit the foundations of self-timed circuits as described by Seitz [18]. <p> More recently, work presented in the paper has also been succesfully applied to STG based controller circuits <ref> [5] </ref>. As far as we know this is the first serious attempt in the area of quantitative analysis of the power consumption of self-timed circuits. We plan to use this tool and methodology to study the architecture-level optimizations of self-timed circuits.
Reference: 6. <author> Brunvand, E. </author> <title> Translating Concurrent Communicating Programs into Asynchronous Circuits. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon University, </institution> <year> 1991. </year>
Reference-contexts: Table of experimental results Circuit Petri Net SPICE Time for Petri Net Power Est. (mW) Power Est. (mW) Est. (s) QR42 1.72 1.57 0.13 ICCAD1 3.2 3.47 0.18 CNT7 1.80 1.70 0.18 The examples considered include the QR42 (four-phase to two-phase) converter, a narrow two phase to four phase converter <ref> [6] </ref>, ICCAD1 [3] which is a micropipeline state with some data processing, CNT7 and CNT5 [16] which are counters. Portions of a DCT processor [16] were also used to determine the accuracy of the techniques developed.
Reference: 7. <author> Devadas, S., Keutzer, K., and White, J. </author> <title> Estimation of power dissipation in cmos combinational circuits. </title> <booktitle> In Proc. Custom Integrated Circuits Conference (May 1990), </booktitle> <pages> pp. </pages> <month> 19.7.1-19.7.6. </month>
Reference-contexts: In this paper we show that, if one chooses a proper abstraction for the asynchronous circuits to accommodate the notion of a cycle of activity, then the recent work of Devadas et. al <ref> [7] </ref>, Ghosh-Devadas et. al. [10], Monteiro-Devadas et al. [21] and Alidina-Monteiro-Devadas et al. [4] in the context of synchronous circuits, can be used to derive accurate algorithms for the problem of power estimation in self-timed circuits. <p> Techniques to measure the average power per clock cycle in synchronous CMOS circuits, based on an estimate of the switching activity in a circuit were presented in the past [10, 22]. Techniques for measuring worst-case power for CMOS combinational circuits was presented in <ref> [7] </ref>. For self-timed circuits, we propose the following solution. We derive a high-level abstraction (Petri net) of the circuit in question. This captures the control flow of the circuit, which in turn indicates where power is consumed (as discussed above).
Reference: 8. <author> Dill, D. L., Nowick, S. M., and Sproull, R. F. </author> <title> Specification and automatic verification of self-timed queues. </title> <type> Tech. Rep. </type> <institution> CSL-TR-89-387, Computer Systems Laboratory, Stanford University, </institution> <month> Aug. </month> <year> 1989. </year>
Reference-contexts: The combinational logic block shown has data inputs and produces the sel signal as an output. 2.1 Petri net Representation of Self-timed Circuits As observed by several researchers in the past <ref> [19, 8] </ref> a self-timed circuit can be represented by a Petri net 1 . We describe each circuit element by a Petri net and express the complete circuit as a structural composition of the Petri nets corresponding to the individual components.
Reference: 9. <author> Feller, W. </author> <title> An Introduction to Probability Theory and its Applications. </title> <publisher> John Wiley and Sons, </publisher> <year> 1957. </year>
Reference-contexts: The following is a sketch of some of the relevant terminology and theorems of Markov Chain theory useful to understand our approach. A detailed discussion of the discrete-time Markov chains can be found in the classic text by Feller <ref> [9] </ref> and their relationship to stochastic Petri nets are described in [1, 20]. The strongly connected components of the state space (when viewed as a directed graph) are the classes of the Markov Chain. <p> This can be proved quite easily in the following manner. The liveness requirement on our circuits, results in Petri nets and in turn the Markov chains which are irreducible. It can be shown that an irreducible Markov chain has exactly one class. (details can be found in <ref> [9] </ref> for example) In a Petri net, we are interested in the long run (or "steady state") behavior. Once absorbed in a particular recurrent class, the the long run probability distribution over the states in the recurrent class needs to be computed [9]. <p> exactly one class. (details can be found in <ref> [9] </ref> for example) In a Petri net, we are interested in the long run (or "steady state") behavior. Once absorbed in a particular recurrent class, the the long run probability distribution over the states in the recurrent class needs to be computed [9].
Reference: 10. <author> Ghosh, A., Devadas, S., Keutzer, K., and White, J. </author> <title> Estimation of switching activity in combinational and sequential circuits. </title> <booktitle> In Proc. ACM/IEEE 29th Design Automation Conference (June 1992), </booktitle> <pages> pp. 253-259. </pages>
Reference-contexts: In order to be able to design low power asynchronous circuits, one needs a mathematical model and estimation technique so as to decide between various circuit and architectural possibilities quickly. Such techniques have been extensively researched in synchronous circuits <ref> [15, 10, 22] </ref>. In the area of asynchronous circuits, there has been a need for systematic methods for estimating energy consumption in asynchronous circuits. Techniques have been proposed more recently such as those of Berkel [25, 26] where broad requirements for such a technique were brought out. <p> In this paper we show that, if one chooses a proper abstraction for the asynchronous circuits to accommodate the notion of a cycle of activity, then the recent work of Devadas et. al [7], Ghosh-Devadas et. al. <ref> [10] </ref>, Monteiro-Devadas et al. [21] and Alidina-Monteiro-Devadas et al. [4] in the context of synchronous circuits, can be used to derive accurate algorithms for the problem of power estimation in self-timed circuits. First, we present a suitable framework to describe netlists of self-timed circuits using Petri nets. <p> This makes it difficult to use the algorithms developed for synchronous circuits directly. Techniques to measure the average power per clock cycle in synchronous CMOS circuits, based on an estimate of the switching activity in a circuit were presented in the past <ref> [10, 22] </ref>. Techniques for measuring worst-case power for CMOS combinational circuits was presented in [7]. For self-timed circuits, we propose the following solution. We derive a high-level abstraction (Petri net) of the circuit in question. <p> We define a notion of invocation of a module and use it to estimate the average input/output activity at the terminals of the module by adapting the equations developed by Ghosh-Devadas et. al <ref> [10] </ref>. We will present techniques for estimating the average-case power based on the notion of long run time of the recurrence classes in Petri nets. The key ingredient for this process to work is the ability to accurately annotate the transitions in the Petri net with the corresponding power consumed. <p> For the control elements, we can measure the power exactly given the circuit interconnection topology. The DBs and PBs as we will show shortly are basically combinational circuits with parallel delay lines. So, we intend to use the techniques of Ghosh-Devadas et. al. <ref> [10] </ref> to get the estimates of power consumed for DBs and PBs. 1.2 Outline of the Paper In Section 2 we present a quick introduction to self-timed circuits and their Petri net representation and the main assumptions in our work. <p> If the gate is part of a synchronous digital system controlled by a global clock, it follows that the average power dissipated by the gate is given by <ref> [10] </ref>: P avg = 0:5 fi V 2 dd fi C load fi f fi E (transitions) (1) In equation 1, P avg denotes the average power, C load is the load capacitance, V dd is the supply voltage, f is the frequency of the global clock, and E (transitions) is <p> Methods to obtain E (transitions) are given in detail in <ref> [10, 22] </ref>. 3.1 Switching Energy in CBs In this section we will show how we annotate the CB transition with the energy consumed per ouput transition (or switching). As discussed before, CBs are usually implemented using pre-defined macromodules. <p> Similarly, E select in the PB indicates the energy consumed in the SELECT element when the req signal is followed by either a T ack/F ack as shown in the same figure. Next we show how the work of Ghosh-Devadas et.al <ref> [10] </ref> is adapted to obtained estimates for 8 E invocation of the combinational portion of a PB/DB 2 . In this paper, we will be concerned only with static combinational circuits. For static combinational blocks, in general, ergodicity is assumed and the primary inputs are assumed to be uncorrelated. <p> In this paper, we will be concerned only with static combinational circuits. For static combinational blocks, in general, ergodicity is assumed and the primary inputs are assumed to be uncorrelated. The key difference in the case of self-timed circuits compared to the techniques developed in <ref> [10] </ref> is the use of invocations to compute switching probabilities instead of clock cycles. For static CMOS combinational logic, the gate output can change only if the Boolean function implemented evaluates differently when the inputs change. <p> For static probabilities, we rewrite the equation in <ref> [10] </ref> for the probability that input i j is one at a given time, denoted p one j : j = lim P N N and for transition probabilities, we rewrite the equation in [10] as: p 10 N!1 k=1 i j (k)i j (k + 1) (6) In equations 5 <p> For static probabilities, we rewrite the equation in <ref> [10] </ref> for the probability that input i j is one at a given time, denoted p one j : j = lim P N N and for transition probabilities, we rewrite the equation in [10] as: p 10 N!1 k=1 i j (k)i j (k + 1) (6) In equations 5 and 6 N denotes the number of invocations of the module in question. <p> The disjoint cover for the above equation as discussed in <ref> [10] </ref> (i 1 (N ):i 2 (N ))(i 1 (N + 1)) _ (i 1 (N )):(i 1 (N + 1):i 2 (N + 1)) _ Both static and transition probabilities are used to compute D (transitions) for static logic circuits, as can be seen from the expression for the probability <p> 1):i 2 (N + 1)) _ Both static and transition probabilities are used to compute D (transitions) for static logic circuits, as can be seen from the expression for the probability for the disjoint cover for the and gate evaluates to a 1, 2 We repeat the relevant portions of <ref> [10] </ref> to make this paper self-contained and easily readable 9 p 10 2 + p 11 2 + p 01 2 + p 11 2 which for this example is also D (transitions). In this section, we have developed techniques to estimating the energy consumption in DB, PB and CB.
Reference: 11. <author> Holliday, M., and Vernon, M. </author> <title> The GTPN analyzer: Numerical methods and user interface. </title> <journal> IEEE Comp Soc. </journal> <note> 1986 Call Joint Computer Conference (Nov. </note> <year> 1986). </year>
Reference-contexts: The fact that P j2R j = 1 corresponds to the fact that the set of states R is a recurrent class, i.e., once execution enters R, it does not leave R. Both P ij and P i are obtained from the underlying state graph of the Petri net <ref> [11] </ref>.
Reference: 12. <author> Holliday, M., and Vernon, M. </author> <title> A generalized timed petri net model for performance analysis. </title> <journal> IEEE Transactions on Software Engineering 13 (Dec. </journal> <year> 1987), </year> <pages> 1297-1310. </pages>
Reference-contexts: A discussion of these steps is given in the next section. 4 Algorithm for Power Estimation from Petri net Descriptions Given an annotated Petri net, we now present algorithms to give an estimate of the average power consumed (we will define this). We use the GTPN system presented by <ref> [12] </ref> for generating a reachability graph and for analyzing the embedded discrete-time Markov chain. 4.1 Modeling Petri nets with GTPN In this section, we first present the GTPN formalism and show how the Petri nets derived from self-timed circuits (discussed in Section 2.1) can be modeled in GTPN. <p> This will involve extending the GTPN formalism to include energy and delay annotations. We review the basics of Markov chain analysis and present equations to derive the average case power consumption of self-timed circuits in terms of the embedded discrete-time Markov chain underlying our Petri net models. A GTPN <ref> [12] </ref> is a Petri net which has been augmented to include a set of firing durations (D), a set of firing frequencies (F ), and a possibly empty set of resources (R) associated with each transition.
Reference: 13. <author> Kessels, J., van Berkel, K., Burgess, R., Roncken, M., and Schalij, F. </author> <title> An error decoder for the compact disc player as an example of VLSI programming. </title> <type> Tech. rep., </type> <institution> Philips Research Laboratories, Eindhoven, </institution> <address> The Netherlands. </address> <month> 17 </month>
Reference-contexts: Most designers in the area have largely focused on taking advantage of the properties of asynchronous circuits to design low-power VLSI circuits such as low power error corrector <ref> [13] </ref>, processor [23] and interface circuits [17]. In designing for low power, there is a need for an estimation technique that gives us the ability to experiment with different architectural transformations. Such a technique should be able to provide quick and reasonably accurate estimates for the power consumed.
Reference: 14. <author> Kudva, P., and Akella, V. </author> <title> A technique for estimating power in self-timed asynchronous circuits. </title> <booktitle> In Proc. International Symposium on Advanced Research in Asynchronous Circuits and Systems (Nov. </booktitle> <year> 1994), </year> <pages> pp. 166-175. </pages>
Reference-contexts: Techniques have been proposed more recently such as those of Berkel [25, 26] where broad requirements for such a technique were brought out. More accurate estimation methods were given in our work <ref> [14] </ref> for self-timed circuits which more recently has been developed further for STG based circuits by Beerel et. al. [5]. The objective of this paper is to study the problem of estimation of power in a class of asynchronous circuits called self-timed circuits [18].
Reference: 15. <author> Landman, P. E. </author> <title> Low-power architectural design methodologies. </title> <type> Tech. rep., Ph.D Thesis, </type> <institution> ERL, University of California, Berkeley, </institution> <year> 1994. </year>
Reference-contexts: In order to be able to design low power asynchronous circuits, one needs a mathematical model and estimation technique so as to decide between various circuit and architectural possibilities quickly. Such techniques have been extensively researched in synchronous circuits <ref> [15, 10, 22] </ref>. In the area of asynchronous circuits, there has been a need for systematic methods for estimating energy consumption in asynchronous circuits. Techniques have been proposed more recently such as those of Berkel [25, 26] where broad requirements for such a technique were brought out.
Reference: 16. <author> Lipsher, J. B. </author> <title> The asynchronous discrete cosine transform core. </title> <type> Master's thesis, </type> <institution> Department of Electrical and Computer Engineering, University of California, Davis, </institution> <month> Sept. </month> <year> 1994. </year>
Reference-contexts: Power Est. (mW) Est. (s) QR42 1.72 1.57 0.13 ICCAD1 3.2 3.47 0.18 CNT7 1.80 1.70 0.18 The examples considered include the QR42 (four-phase to two-phase) converter, a narrow two phase to four phase converter [6], ICCAD1 [3] which is a micropipeline state with some data processing, CNT7 and CNT5 <ref> [16] </ref> which are counters. Portions of a DCT processor [16] were also used to determine the accuracy of the techniques developed. <p> ICCAD1 3.2 3.47 0.18 CNT7 1.80 1.70 0.18 The examples considered include the QR42 (four-phase to two-phase) converter, a narrow two phase to four phase converter [6], ICCAD1 [3] which is a micropipeline state with some data processing, CNT7 and CNT5 <ref> [16] </ref> which are counters. Portions of a DCT processor [16] were also used to determine the accuracy of the techniques developed. These examples were chosen as representative examples in the absence of a benchmark for asynchronous circuits which include processing (although benchmarks for controllers exist, benchmarks for large systems involving computation are not available).
Reference: 17. <author> Marshall, A., Coates, B., and Siegel, P. </author> <title> Designing an asynchronous communications chip. </title> <booktitle> IEEE Design & Test of Computers 11, 2 (1994), </booktitle> <pages> 8-21. </pages>
Reference-contexts: Most designers in the area have largely focused on taking advantage of the properties of asynchronous circuits to design low-power VLSI circuits such as low power error corrector [13], processor [23] and interface circuits <ref> [17] </ref>. In designing for low power, there is a need for an estimation technique that gives us the ability to experiment with different architectural transformations. Such a technique should be able to provide quick and reasonably accurate estimates for the power consumed.
Reference: 18. <author> Mead, C. A., and Conway, L. </author> <title> An Introduction to VLSI Systems. </title> <publisher> Addison Wesley, </publisher> <year> 1980. </year> <note> Chapter 7, entitled "System Timing". </note>
Reference-contexts: The objective of this paper is to study the problem of estimation of power in a class of asynchronous circuits called self-timed circuits <ref> [18] </ref>. This forces us to revisit the foundations of self-timed circuits as described by Seitz [18]. Self-timed circuits are based on the abstraction of decoupling functionality (computational aspects) from timing, i.e., in a self-timed circuit, one focuses on the computation locally and different computational elements synchronize by local handshaking. <p> The objective of this paper is to study the problem of estimation of power in a class of asynchronous circuits called self-timed circuits <ref> [18] </ref>. This forces us to revisit the foundations of self-timed circuits as described by Seitz [18]. Self-timed circuits are based on the abstraction of decoupling functionality (computational aspects) from timing, i.e., in a self-timed circuit, one focuses on the computation locally and different computational elements synchronize by local handshaking. There are no global synchronizing signals. <p> A self-timed circuit is a legal <ref> [18] </ref> interconnection of self-timed elements. We assume two-phase transition signaling where up-going and down-going transition of a signal have 3 the same meaning and assume that one-wire-per-bit of data with data-bundling assumption, i.e., the data is assumed to be valid at all the receivers before the corresponding control signal arrives.
Reference: 19. <author> Misunas, D. </author> <title> Petri nets and speed independent design. </title> <journal> Communications of the ACM 16, </journal> <month> 8 (Aug. </month> <year> 1973), </year> <pages> 474-481. </pages>
Reference-contexts: The combinational logic block shown has data inputs and produces the sel signal as an output. 2.1 Petri net Representation of Self-timed Circuits As observed by several researchers in the past <ref> [19, 8] </ref> a self-timed circuit can be represented by a Petri net 1 . We describe each circuit element by a Petri net and express the complete circuit as a structural composition of the Petri nets corresponding to the individual components.
Reference: 20. <author> Molloy, M. K. </author> <title> Performance analysis using stochastic petri nets. </title> <journal> IEEE Transactions on Computers C-31 (1982), </journal> <pages> 417-423. </pages>
Reference-contexts: A detailed discussion of the discrete-time Markov chains can be found in the classic text by Feller [9] and their relationship to stochastic Petri nets are described in <ref> [1, 20] </ref>. The strongly connected components of the state space (when viewed as a directed graph) are the classes of the Markov Chain. The condensed graph with one vertex for each class is a directed acyclic graph with one root.
Reference: 21. <author> Monteiro, J., Devadas, S., Lin, B., Tsui, C.-Y., and Pedram, M. </author> <title> Exact and approximate methods of switching activity estimation in sequential logic circuits. </title> <booktitle> In 1994 International Workshop on Low Power Design (Apr. </booktitle> <year> 1994). </year>
Reference-contexts: In this paper we show that, if one chooses a proper abstraction for the asynchronous circuits to accommodate the notion of a cycle of activity, then the recent work of Devadas et. al [7], Ghosh-Devadas et. al. [10], Monteiro-Devadas et al. <ref> [21] </ref> and Alidina-Monteiro-Devadas et al. [4] in the context of synchronous circuits, can be used to derive accurate algorithms for the problem of power estimation in self-timed circuits. First, we present a suitable framework to describe netlists of self-timed circuits using Petri nets.
Reference: 22. <author> Najm, F. N. </author> <title> Transition density, a stochastic measure of activity in digital circuits. </title> <booktitle> In Proc. ACM/IEEE 28th Design Automation Conference (June 1991), </booktitle> <pages> pp. 644-649. </pages>
Reference-contexts: In order to be able to design low power asynchronous circuits, one needs a mathematical model and estimation technique so as to decide between various circuit and architectural possibilities quickly. Such techniques have been extensively researched in synchronous circuits <ref> [15, 10, 22] </ref>. In the area of asynchronous circuits, there has been a need for systematic methods for estimating energy consumption in asynchronous circuits. Techniques have been proposed more recently such as those of Berkel [25, 26] where broad requirements for such a technique were brought out. <p> This makes it difficult to use the algorithms developed for synchronous circuits directly. Techniques to measure the average power per clock cycle in synchronous CMOS circuits, based on an estimate of the switching activity in a circuit were presented in the past <ref> [10, 22] </ref>. Techniques for measuring worst-case power for CMOS combinational circuits was presented in [7]. For self-timed circuits, we propose the following solution. We derive a high-level abstraction (Petri net) of the circuit in question. <p> Methods to obtain E (transitions) are given in detail in <ref> [10, 22] </ref>. 3.1 Switching Energy in CBs In this section we will show how we annotate the CB transition with the energy consumed per ouput transition (or switching). As discussed before, CBs are usually implemented using pre-defined macromodules.
Reference: 23. <author> Paver, N. C. </author> <title> The Design and Implementation of an Asynchronous Microprocessor. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Manchester, </institution> <month> June </month> <year> 1994. </year>
Reference-contexts: Most designers in the area have largely focused on taking advantage of the properties of asynchronous circuits to design low-power VLSI circuits such as low power error corrector [13], processor <ref> [23] </ref> and interface circuits [17]. In designing for low power, there is a need for an estimation technique that gives us the ability to experiment with different architectural transformations. Such a technique should be able to provide quick and reasonably accurate estimates for the power consumed. <p> Although the work in this paper is restricted to transition signaling and macromodule based self-timed circuits, the ideas here can be easily ported to a large class of self-timed asynchronous circuits that can 16 be partitioned into data, control, and data-dependent control blocks and modeled as Petri nets <ref> [24, 23] </ref>. More recently, work presented in the paper has also been succesfully applied to STG based controller circuits [5]. As far as we know this is the first serious attempt in the area of quantitative analysis of the power consumption of self-timed circuits.
Reference: 24. <author> Sutherland, I. Micropipelines. </author> <note> Communications of the ACM (June 1989). The 1988 ACM Turing Award Lecture. 25. </note> <author> van Berkel, K. </author> <title> VLSI programming of a modulo-N counter with constant response time and constant power. In Asynchronous Design Methodologies (1993), </title> <editor> S. Furber and M. Edwards, Eds., </editor> <volume> vol. </volume> <booktitle> A-28 of IFIP Transactions, </booktitle> <publisher> Elsevier Science Publishers, </publisher> <pages> pp. 1-11. </pages> <note> 26. </note> <author> van Berkel, K., Burgess, R., Kessels, J., Peeters, A., Roncken, M., and Schalij, F. </author> <title> Asynchronous circuits for low power: A DCC error corrector. </title> <booktitle> IEEE Design & Test of Computers 11, 2 (1994), </booktitle> <pages> 22-32. </pages>
Reference-contexts: As introduced earlier, the circuits can be logically partitioned into control elements (CB), datapath modules (DB) and data-dependent control modules (PB). Examples of primitive CBs include XOR, Muller C element, CALL module <ref> [24] </ref>. Models for the DB and PB are given in Figure 1. DB represents the datapath of the circuit and can be modeled as a combinational circuit with a parallel delay line to implement the self-timed interface. <p> Let's illustrate the intuition behind the composition scheme with a simple example shown in Figure 3. The circuit depicts a stage of a Sutherland-style micropipeline stage <ref> [24] </ref>. It consists of a PB to check the parity of incoming data, an adder and a register which are DBs, and an XOR and a C element which are part of the CB. The operation of the stage is as follows. <p> Although the work in this paper is restricted to transition signaling and macromodule based self-timed circuits, the ideas here can be easily ported to a large class of self-timed asynchronous circuits that can 16 be partitioned into data, control, and data-dependent control blocks and modeled as Petri nets <ref> [24, 23] </ref>. More recently, work presented in the paper has also been succesfully applied to STG based controller circuits [5]. As far as we know this is the first serious attempt in the area of quantitative analysis of the power consumption of self-timed circuits.
References-found: 24

