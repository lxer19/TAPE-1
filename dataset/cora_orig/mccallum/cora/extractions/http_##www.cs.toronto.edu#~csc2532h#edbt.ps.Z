URL: http://www.cs.toronto.edu/~csc2532h/edbt.ps.Z
Refering-URL: http://www.cs.toronto.edu/~csc2532h/
Root-URL: http://www.cs.toronto.edu
Title: On Formalizing Database Updates: Preliminary Report  
Author: Raymond Reiter 
Address: M5S 1A4, Canada  
Affiliation: Department of Computer Science and the Canadian Institute for Advanced Research, University of Toronto, Toronto, Ont.  
Abstract: We address the problem of formalizing the evolution of a database under the effect of an arbitrary sequence of update transactions. We do so by appealing to a first order representation language called the situation calculus, which is a standard approach in artificial intelligence to the formalization of planning problems. We formalize database transactions in exactly the same way as actions in the artificial intelligence planning domain. This leads to a database version of the frame problem in artificial intelligence. We provide a solution to the frame problem for a special, but substantial, class of update transactions. We next briefly describe some of the results obtained within this axiomatization. Specifically, we provide procedures for determining whether a given sequence of update transactions is legal, and for query evaluation in an updated database. These procedures have the nice property that they appeal to theorem-proving only with respect to the initial database state. We also address the problem of proving properties true in all states of the database. It turns out that mathematical induction is required for this task, and we formulate a number of suitable induction axioms. Among those properties of database states that we wish to prove are the standard database notions of static and dynamic integrity constraints. In our setting, these emerge as inductive entailments of the database. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> A. Borgida, J. Mylopoulos, and J. Schmidt. </author> <title> The TaxisDL software description language. </title> <type> Technical report, </type> <institution> Department of Computer Science, University of Toronto, </institution> <year> 1991. </year>
Reference-contexts: While the frame problem has been recognized in the setting of database transaction processing, notably by Borgida, Mylopoulos and Schmidt <ref> [1] </ref>, it has not received any systematic treatment in the database literature. Neither is its importance widely recognized. The fact is, no adequate theory of database evolution will be possible without confronting the frame problem head-on.
Reference: 2. <author> R. Fagin, J.D. Ullman, and M.Y. Vardi. </author> <title> Updating logical databases. </title> <booktitle> In Proceedings of the ACM Symposium on Principles of Database Systems, </booktitle> <month> April </month> <year> 1983. </year>
Reference-contexts: 1 Introduction Our concern in this paper is with formalizing the evolution of a database under arbitrary sequences of update transactions. A wide variety of proposals for this exist in the literature (e.g. Grahne [4], Katsuno and Mendelzon [8], Winslett [17], Fagin, Ullman and Vardi <ref> [2] </ref>, Ginsberg and Smith [3], Guessoum and Lloyd [5, 6], Manchanda and Warren [9]). In this paper, we advance a substantially different proposal.
Reference: 3. <author> M.L. Ginsberg and D.E. Smith. </author> <title> Reasoning about actions I: A possible worlds approach. </title> <journal> Artificial Intelligence, </journal> <volume> 35 </volume> <pages> 165-195, </pages> <year> 1988. </year>
Reference-contexts: 1 Introduction Our concern in this paper is with formalizing the evolution of a database under arbitrary sequences of update transactions. A wide variety of proposals for this exist in the literature (e.g. Grahne [4], Katsuno and Mendelzon [8], Winslett [17], Fagin, Ullman and Vardi [2], Ginsberg and Smith <ref> [3] </ref>, Guessoum and Lloyd [5, 6], Manchanda and Warren [9]). In this paper, we advance a substantially different proposal.
Reference: 4. <author> G. Grahne. </author> <title> Updates and counterfactuals. </title> <editor> In J. Allen, R. Fikes, and E. Sandewall, editors, </editor> <booktitle> Proceedings of the Second International Conference on Principles of Knowledge Representation and Reasoning (KR'91), </booktitle> <pages> pages 269-276, </pages> <address> Los Altos, CA, 1991. </address> <publisher> Morgan Kaufmann Publishers, Inc. </publisher>
Reference-contexts: 1 Introduction Our concern in this paper is with formalizing the evolution of a database under arbitrary sequences of update transactions. A wide variety of proposals for this exist in the literature (e.g. Grahne <ref> [4] </ref>, Katsuno and Mendelzon [8], Winslett [17], Fagin, Ullman and Vardi [2], Ginsberg and Smith [3], Guessoum and Lloyd [5, 6], Manchanda and Warren [9]). In this paper, we advance a substantially different proposal.
Reference: 5. <author> A. Guessoum and J.W. Lloyd. </author> <title> Updating knowledge bases. </title> <journal> New Generation Computing, </journal> <volume> 8(1) </volume> <pages> 71-89, </pages> <year> 1990. </year> <note> 8 See (Reiter [15]) for more details. </note>
Reference-contexts: A wide variety of proposals for this exist in the literature (e.g. Grahne [4], Katsuno and Mendelzon [8], Winslett [17], Fagin, Ullman and Vardi [2], Ginsberg and Smith [3], Guessoum and Lloyd <ref> [5, 6] </ref>, Manchanda and Warren [9]). In this paper, we advance a substantially different proposal.
Reference: 6. <author> A. Guessoum and J.W. Lloyd. </author> <title> Updating knowledge bases II. </title> <type> Technical report, </type> <institution> University of Bristol, </institution> <year> 1991. </year> <note> To appear. </note>
Reference-contexts: A wide variety of proposals for this exist in the literature (e.g. Grahne [4], Katsuno and Mendelzon [8], Winslett [17], Fagin, Ullman and Vardi [2], Ginsberg and Smith [3], Guessoum and Lloyd <ref> [5, 6] </ref>, Manchanda and Warren [9]). In this paper, we advance a substantially different proposal.
Reference: 7. <author> A. R. Haas. </author> <title> The case for domain-specific frame axioms. </title> <editor> In F. M. Brown, editor, </editor> <booktitle> The frame problem in artificial intelligence. Proceedings of the 1987 workshop, </booktitle> <pages> pages 343-348, </pages> <address> Los Altos, California, 1987. </address> <publisher> Morgan Kaufmann Publishers, Inc. </publisher>
Reference-contexts: It is possible to extend the theory of this paper to include indeterminate transactions by appealing to a simple idea for dealing with the frame problem due to Haas <ref> [7] </ref>, as elaborated by Schubert [16]. Acknowledgments Many of my colleagues provided important conceptual and technical advice.
Reference: 8. <author> H. Katsuno and A.O. Mendelzon. </author> <title> On the difference between updating a knowledge base and revising it. </title> <editor> In J. Allen, R. Fikes, and E. Sandewall, editors, </editor> <booktitle> Proceedings of the Second International Conference on Principles of Knowledge Representation and Reasoning (KR'91), </booktitle> <pages> pages 387-394, </pages> <address> Los Altos, CA, 1991. </address> <publisher> Morgan Kaufmann Publishers, Inc. </publisher>
Reference-contexts: 1 Introduction Our concern in this paper is with formalizing the evolution of a database under arbitrary sequences of update transactions. A wide variety of proposals for this exist in the literature (e.g. Grahne [4], Katsuno and Mendelzon <ref> [8] </ref>, Winslett [17], Fagin, Ullman and Vardi [2], Ginsberg and Smith [3], Guessoum and Lloyd [5, 6], Manchanda and Warren [9]). In this paper, we advance a substantially different proposal.
Reference: 9. <author> S. Manchanda and D.S. Warren. </author> <title> A logic-based language for database updates. </title> <editor> In J. Minker, editor, </editor> <booktitle> Foundations of Deductive Databases and Logic Programming, </booktitle> <pages> pages 363-394. </pages> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <address> Los Altos, CA, </address> <year> 1988. </year>
Reference-contexts: A wide variety of proposals for this exist in the literature (e.g. Grahne [4], Katsuno and Mendelzon [8], Winslett [17], Fagin, Ullman and Vardi [2], Ginsberg and Smith [3], Guessoum and Lloyd [5, 6], Manchanda and Warren <ref> [9] </ref>). In this paper, we advance a substantially different proposal.
Reference: 10. <author> J. McCarthy. </author> <title> Programs with common sense. </title> <editor> In M. Minsky, editor, </editor> <booktitle> Semantic Information Processing, </booktitle> <pages> pages 403-418. </pages> <publisher> The MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1968. </year>
Reference-contexts: Finally, in Section 5, we briefly describe our principal results in this approach to a theory of updates. 2 Preliminaries: The Situation Calculus and the Frame Problem The situation calculus (McCarthy <ref> [10] </ref>) is a first order language designed to represent dynamically changing worlds in which all such changes are the result of named actions. The world is conceived as being in some state s, and this state can change only in consequence of some agent (human, robot, nature) performing an action.
Reference: 11. <author> J. McCarthy and P. Hayes. </author> <title> Some philosophical problems from the standpoint of artificial intelligence. </title> <editor> In B. Meltzer and D. Michie, editors, </editor> <booktitle> Machine Intelligence 4, </booktitle> <pages> pages 463-502. </pages> <publisher> Edinburgh University Press, Edinburgh, </publisher> <address> Scotland, </address> <year> 1969. </year>
Reference-contexts: oss (drop (r; x); s) ^ f ragile (x) oe broken (x; do (drop (r; x); s)): A robot repairing an object causes it not to be broken: P oss (repair (r; x); s) oe :broken (x; do (repair (r; x); s)): As has been long recognized (McCarthy and Hayes <ref> [11] </ref>), axioms other than effect axioms are required for formalizing dynamic worlds. These are called frame axioms, and they specify the action invariants of the domain, i.e., those fluents unaffected by the performance of an action.
Reference: 12. <editor> J. Minker, editor. </editor> <booktitle> Foundations of Deductive Databases and Logic Programming. </booktitle> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <address> Los Altos, CA, </address> <year> 1988. </year>
Reference-contexts: is therefore possible to pose and answer historical queries, for example "Did Mary ever get a raise?" Logic Programming Implementation: It seems that our approach to database updates can be implemented in a fairly straightforward way as a logic program, thereby directly complementing the logic programming perspective on databases (Minker <ref> [12] </ref>). Indeterminate Transactions: A limitation of our formalism is that it requires all transactions to be determinate, by which we mean that in the presence of complete information about the initial database state a transaction completely determines the resulting state.
Reference: 13. <author> R. Reiter. </author> <title> What should a database know? Journal of Logic Programming. </title> <note> to appear. </note>
Reference-contexts: (a; s); do (a; s))] ^ oe (8s; s 0 ):S 0 s ^ s s 0 oe R (s; s 0 ): (Reiter [15]) provides a number of examples of integrity constraints and their verification using these induction axioms. 7 This definition should be contrasted with those in Reiter <ref> [14, 13] </ref>. It seems that there is not a unitary concept of integrity constraint in database theory, and that there are many subtleties involved. 6 Conclusions and Extensions Database transactions have long been treated procedurally.
Reference: 14. <author> R. Reiter. </author> <title> Towards a logical reconstruction of relational database theory. In M.L. </title> <editor> Brodie, J. Mylopoulos, and J.W. Schmidt, editors, </editor> <booktitle> On Conceptual Modelling: Perspectives from Artificial Intelligence, Databases and Programming Languages, </booktitle> <pages> pages 191-233. </pages> <publisher> Springer, </publisher> <address> New York, </address> <year> 1984. </year>
Reference-contexts: (a; s); do (a; s))] ^ oe (8s; s 0 ):S 0 s ^ s s 0 oe R (s; s 0 ): (Reiter [15]) provides a number of examples of integrity constraints and their verification using these induction axioms. 7 This definition should be contrasted with those in Reiter <ref> [14, 13] </ref>. It seems that there is not a unitary concept of integrity constraint in database theory, and that there are many subtleties involved. 6 Conclusions and Extensions Database transactions have long been treated procedurally.
Reference: 15. <author> R. Reiter. </author> <title> On specifying database updates. </title> <type> Technical report, </type> <institution> Department of Computer Science, University of Toronto, </institution> <note> in preparation. </note>
Reference-contexts: The full details may be found in (Reiter <ref> [15] </ref>). 5.1 Legal Transaction Sequences Not all transaction sequences need be legal. For example, the sequence drop (Sue; C100); change (Bill; C100; 60) would be illegal if the drop transaction was impossible in the initial database state, i.e. if P oss (drop (Sue; C100); S 0 ) was false. <p> is legal wrt D iff D uns [ D unt [ D S 0 j= R o 1 ;...;o n : 5 Theorem 1 informs us that legality testing reduces to first order theorem proving in the initial database D S 0 together with unique names axioms. 5 See (Reiter <ref> [15] </ref>) for a description of how to compute R o 1 ;...;o n . 5.2 Query Evaluation Notice that in our formalization of update transactions in the situation calculus, all updates are virtual; the database is never physically changed. <p> As it happens, defining requires a second order axiom, the details of which we omit here. A definition is given in (Reiter <ref> [15] </ref>). 6 Recall that D uns and D unt denote the unique names axioms for states and unique names axioms for transactionss, respectively (Section 4), and D S 0 denotes the axioms true of the initial database state. Examples of integrity constraints 1. <p> In <ref> [15] </ref>, we justify the following second order axiom of induction suitable for proving properties of states s in the situation calculus, whenever S 0 s. (8W ):W (S 0 ) ^ [(8a; s):P oss (a; s) ^ S 0 s ^ W (s) oe W (do (a; s))] This is our <p> (S 0 ; S 0 ) ^ [(8a; s; s 0 ):P oss (a; s) ^ S 0 s ^ R (s; s) oe R (do (a; s); do (a; s))] ^ oe (8s; s 0 ):S 0 s ^ s s 0 oe R (s; s 0 ): (Reiter <ref> [15] </ref>) provides a number of examples of integrity constraints and their verification using these induction axioms. 7 This definition should be contrasted with those in Reiter [14, 13].
Reference: 16. <author> L.K. Schubert. </author> <title> Monotonic solution of the frame problem in the situation calculus: an efficient method for worlds with fully specified actions. In H.E. </title> <editor> Kyberg, R.P. Loui, and G.N. Carlson, editors, </editor> <booktitle> Knowledge Representation and Defeasible Reasoning, </booktitle> <pages> pages 23-67. </pages> <publisher> Kluwer Academic Press, </publisher> <year> 1990. </year>
Reference-contexts: It is possible to extend the theory of this paper to include indeterminate transactions by appealing to a simple idea for dealing with the frame problem due to Haas [7], as elaborated by Schubert <ref> [16] </ref>. Acknowledgments Many of my colleagues provided important conceptual and technical advice.
Reference: 17. <author> M. Winslett. </author> <title> Reasoning about action using a possible models approach. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 89-93. </pages> <booktitle> American Association for Artificial Intelligence, </booktitle> <year> 1988. </year> <title> This article was processed using the L a T E X macro package with LMAMULT style </title>
Reference-contexts: 1 Introduction Our concern in this paper is with formalizing the evolution of a database under arbitrary sequences of update transactions. A wide variety of proposals for this exist in the literature (e.g. Grahne [4], Katsuno and Mendelzon [8], Winslett <ref> [17] </ref>, Fagin, Ullman and Vardi [2], Ginsberg and Smith [3], Guessoum and Lloyd [5, 6], Manchanda and Warren [9]). In this paper, we advance a substantially different proposal.
References-found: 17

