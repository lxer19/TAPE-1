URL: http://www.cs.utexas.edu/users/plaxton/ps/1993/jcss.ps
Refering-URL: http://www.cs.utexas.edu/users/plaxton/html/abc.html
Root-URL: 
Title: Deterministic Sorting in Nearly Logarithmic Time on the Hypercube and Related Computers  
Author: Robert Cypher C. Greg Plaxton 
Note: Supported by an NSERC postdoctoral fellowship, and DARPA contracts N00014-87-K-825 and N00014 89-J-1988.  
Date: March 5, 1996  
Address: 650 Harry Rd. San Jose, CA 95120  545 Technology Square Cambridge, MA 02139  
Affiliation: IBM Almaden Research Center  MIT Laboratory for Computer Science  
Abstract: This paper presents a deterministic sorting algorithm, called Sharesort, that sorts n records on an n-processor hypercube, shu*e-exchange, or cube-connected cycles in O(log n (log log n) 2 ) time in the worst case. The algorithm requires only a constant amount of storage at each processor. The fastest previous deterministic algorithm for this problem was Batcher's bitonic sort, which runs in O(log 2 n) time. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Ajtai, J. Komlos, and E. Szemeredi. </author> <title> Sorting in c log n parallel steps. </title> <journal> Combinatorica, </journal> <volume> 3 </volume> <pages> 1-19, </pages> <year> 1983. </year>
Reference-contexts: More recently, Leighton [9] exhibited a bounded-degree, O (log n)-time sorting network based on the O (log n)-depth sorting circuit of Ajtai, Komlos and Szemeredi <ref> [1] </ref>. However, no efficient emulation of Leighton's sorting network is known for the hypercube, and it has been shown that such an emulation requires (log 2 n) time on the shu*e-exchange or cube-connected cycles [6].
Reference: [2] <author> A. D. Aleksandrov, A. N. Kolmogorov, and M. A. Lavrent'ev. </author> <title> Mathematics: Its Content, Methods and Meaning. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1963. </year>
Reference-contexts: Running time: O (a). Algorithm CalcPrime (a) 1. Each processor calculates c = da=2e locally. Note that the desired prime p is in the range 2 c &lt; p &lt; 2 c+1 <ref> [2] </ref>. Running time: O (1). 2. Simulate a subcube of 2 2c+1 processors, viewed as forming a two-dimensional array with 2 c rows and 2 c+1 columns.
Reference: [3] <author> K. E. Batcher. </author> <title> Sorting networks and their applications. </title> <booktitle> In Proceedings of the AFIPS Spring Joint Computer Conference, </booktitle> <volume> vol. 32, </volume> <pages> pages 307-314, </pages> <year> 1968. </year>
Reference-contexts: 1 Introduction Given n records distributed uniformly over the n processors of some fixed interconnection network, the sorting problem is to route the record with the ith largest associated key to processor i, 0 i &lt; n. One of the earliest parallel sorting algorithms is Batcher's bitonic sort <ref> [3] </ref>, which runs in O (log 2 n) time on the hypercube [10], shu*e-exchange [17], and cube-connected cycles [14]. More recently, Leighton [9] exhibited a bounded-degree, O (log n)-time sorting network based on the O (log n)-depth sorting circuit of Ajtai, Komlos and Szemeredi [1]. <p> Sharesort belongs to the class of "bottom-up" sorting algorithms based on the principle of recursive merging. Another member of this class is bitonic sort <ref> [3] </ref>. The bitonic sorting algorithm proceeds by splitting the input list into two equal-sized sublists, sorting these sublists recursively and in parallel, and then merging the resulting pair of sorted sublists.
Reference: [4] <author> R. Cole and C. K. Yap. </author> <title> A parallel median algorithm. </title> <journal> IPL, </journal> <volume> 20 </volume> <pages> 137-139, </pages> <year> 1985. </year>
Reference-contexts: Currently, the asymptotically fastest selection algorithm known for cube-type computers is based on the O ((log log n) 2 ) selection algorithm devised by Cole and Yap for the parallel comparison model <ref> [4] </ref>, and runs in O (log n log log n) time [13].
Reference: [5] <author> R. E. Cypher. </author> <title> Efficient Communication in Massively Parallel Computers. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Washington, </institution> <month> August </month> <year> 1989. </year>
Reference-contexts: However, it has been shown that this complication can always be managed in time proportional to the running time of the shu*e-exchange implementation <ref> [5] </ref>. Our bounds on the running time of Sharesort also apply to the butterfly topology (with or without "wrap-around" connections), which is closely related to the cube-connected cycles. The following technical lemma will be useful in analyzing the running times of several subroutines.
Reference: [6] <author> R. E. Cypher. </author> <title> Theoretical aspects of VLSI pin limitations. </title> <journal> SIAM Journal on Computing, </journal> <volume> 22 </volume> <pages> 58-63, </pages> <year> 1993. </year>
Reference-contexts: However, no efficient emulation of Leighton's sorting network is known for the hypercube, and it has been shown that such an emulation requires (log 2 n) time on the shu*e-exchange or cube-connected cycles <ref> [6] </ref>. Hence, for these networks the problem of closing the gap between the trivial (log n) lower bound and the O (log 2 n) upper bound remained open.
Reference: [7] <author> R. E. Cypher and C. G. Plaxton. </author> <title> Deterministic sorting in nearly logarithmic time on the hypercube and related computers. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 47 </volume> <pages> 501-548, </pages> <year> 1993. </year>
Reference-contexts: The conference version of this paper listed a number of extensions and applications of the Sharesort algorithm, and stated that the details would appear in the full version of the paper <ref> [7] </ref>. Instead, these additional results will appear in a separate paper.
Reference: [8] <author> J. P. Fishburn and R. A. Finkel. </author> <title> Quotient networks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-31:288-295, </volume> <year> 1982. </year>
Reference-contexts: Finally, it is possible to efficiently simulate a large parallel computer with a small one. Specifically, for any constant c, an n processor hypercube, shu*e-exchange, or cube-connected cycles can simulate a cn processor machine of the same topology with only a constant factor slowdown <ref> [8] </ref>. 3 The Top-Level Routine This section defines the top-level routine of the Sharesort algorithm. Sharesort belongs to the class of "bottom-up" sorting algorithms based on the principle of recursive merging. Another member of this class is bitonic sort [3].
Reference: [9] <author> F. T. Leighton. </author> <title> Tight bounds on the complexity of parallel sorting. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-34:344-354, </volume> <year> 1985. </year>
Reference-contexts: One of the earliest parallel sorting algorithms is Batcher's bitonic sort [3], which runs in O (log 2 n) time on the hypercube [10], shu*e-exchange [17], and cube-connected cycles [14]. More recently, Leighton <ref> [9] </ref> exhibited a bounded-degree, O (log n)-time sorting network based on the O (log n)-depth sorting circuit of Ajtai, Komlos and Szemeredi [1].
Reference: [10] <author> D. Nassimi and S. Sahni. </author> <title> Data broadcasting in SIMD computers. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-30:101-107, </volume> <year> 1981. </year>
Reference-contexts: One of the earliest parallel sorting algorithms is Batcher's bitonic sort [3], which runs in O (log 2 n) time on the hypercube <ref> [10] </ref>, shu*e-exchange [17], and cube-connected cycles [14]. More recently, Leighton [9] exhibited a bounded-degree, O (log n)-time sorting network based on the O (log n)-depth sorting circuit of Ajtai, Komlos and Szemeredi [1]. <p> It will be assumed that the communication links are arranged in a hypercube <ref> [10] </ref>, shu*e-exchange [10, 17], or cube-connected cycles [14] topology. In a hypercube, each processor x is connected to the log n processors which have binary representations that differ from x in exactly one bit position. <p> It will be assumed that the communication links are arranged in a hypercube [10], shu*e-exchange <ref> [10, 17] </ref>, or cube-connected cycles [14] topology. In a hypercube, each processor x is connected to the log n processors which have binary representations that differ from x in exactly one bit position. <p> Each record has associated with it a destination address in the range 0 through n 1, with the restriction that the destination addresses form a monotonically increasing sequence. The monotone routing algorithm sends each of the m records to its destination address within the array <ref> [10] </ref>. <p> Bit-Permute-Complement (BPC) routing performs a permutation of n records where the destination addresses are calculated by permuting and complementing the bits of the source addresses [11]. Broadcasting copies a record from one processor to all n processors <ref> [10] </ref>. Bitonic merging is the basic operation underlying Batcher's bitonic sort. Given two sorted lists, each of length at most n, this operation merges them into a single sorted list. A BPC route must be used to reverse one of the two lists before the merge can be performed.
Reference: [11] <author> D. Nassimi and S. Sahni. </author> <title> A self routing Benes network and parallel permutation algorithms. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-30:332-340, </volume> <year> 1981. </year>
Reference-contexts: Bit-Permute-Complement (BPC) routing performs a permutation of n records where the destination addresses are calculated by permuting and complementing the bits of the source addresses <ref> [11] </ref>. Broadcasting copies a record from one processor to all n processors [10]. Bitonic merging is the basic operation underlying Batcher's bitonic sort. Given two sorted lists, each of length at most n, this operation merges them into a single sorted list.
Reference: [12] <author> D. Nassimi and S. Sahni. </author> <title> Parallel permutation and sorting algorithms and a new generalized connection network. </title> <journal> JACM, </journal> <volume> 29 </volume> <pages> 642-667, </pages> <year> 1982. </year>
Reference-contexts: The cost of these monotone routes is O (d 0 ). Sparse enumeration sort is a useful sorting technique when the number of records to be sorted, n, is much smaller than the number of processors available, p <ref> [12] </ref>. Sparse enumeration sort runs in O (log n log p= log (p=n)) time. Finally, it is possible to efficiently simulate a large parallel computer with a small one.
Reference: [13] <author> C. G. Plaxton. </author> <title> Efficient Computation on Sparse Interconnection Networks. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, Stanford University, </institution> <month> September </month> <year> 1989. </year>
Reference-contexts: Currently, the asymptotically fastest selection algorithm known for cube-type computers is based on the O ((log log n) 2 ) selection algorithm devised by Cole and Yap for the parallel comparison model [4], and runs in O (log n log log n) time <ref> [13] </ref>. If the input consists of n 1* sorted sublists of length n * for some constant * &gt; 0, algorithm FindSplitters () can be used to perform O (n * 0 ) evenly-spaced selections in O (log n) time, for 12 any constant * 0 &lt; *.
Reference: [14] <author> F. P. Preparata and J. Vuillemin. </author> <title> The cube-connected cycles: A versatile network for parallel computation. </title> <journal> Communications of the ACM, </journal> <volume> 24 </volume> <pages> 300-309, </pages> <year> 1981. </year>
Reference-contexts: One of the earliest parallel sorting algorithms is Batcher's bitonic sort [3], which runs in O (log 2 n) time on the hypercube [10], shu*e-exchange [17], and cube-connected cycles <ref> [14] </ref>. More recently, Leighton [9] exhibited a bounded-degree, O (log n)-time sorting network based on the O (log n)-depth sorting circuit of Ajtai, Komlos and Szemeredi [1]. <p> It will be assumed that the communication links are arranged in a hypercube [10], shu*e-exchange [10, 17], or cube-connected cycles <ref> [14] </ref> topology. In a hypercube, each processor x is connected to the log n processors which have binary representations that differ from x in exactly one bit position. <p> The binary representation of x e is obtained from the binary representation of x by complementing the least significant bit. The reader is referred to the paper by Preparata and Vuillemin <ref> [14] </ref> for the definition of the cube-connected cycles. The parallel computer will be used to sort a set of records. A record has a constant number of word-sized fields, one of which is a key. The relative order of the keys determines the sorted order of the records.
Reference: [15] <author> J. H. Reif and L. G. Valiant. </author> <title> A logarithmic time sort for linear size networks. </title> <journal> JACM, </journal> <volume> 34 </volume> <pages> 60-76, </pages> <year> 1987. </year>
Reference-contexts: Hence, for these networks the problem of closing the gap between the trivial (log n) lower bound and the O (log 2 n) upper bound remained open. A noteworthy breakthrough was provided by the randomized Flashsort algorithm of Reif and Valiant <ref> [15] </ref>, which sorts every possible input permutation with high probability in O (log n) time on a cube-connected cycles. In contrast, this work is the first to narrow the gap in terms of worst case, deterministic complexity.
Reference: [16] <author> J. T. Schwartz. </author> <title> Ultracomputers. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 2 </volume> <pages> 484-521, </pages> <year> 1980. </year>
Reference-contexts: input an associative binary operator ff and an array A = A 0 ; : : : ; A n1 , and return the n values ff (A 0 ; ff (A 1 ; : : : ; ff (A i1 ; A i ))) where 0 i &lt; n <ref> [16] </ref>. One special type of prefix operation is the segmented prefix operation in which the input array A is divided into groups of adjacent elements and a prefix operation is applied in parallel within each of the groups.
Reference: [17] <author> H. S. Stone. </author> <title> Parallel processing with the perfect shu*e. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-20:153-161, </volume> <year> 1971. </year> <month> 45 </month>
Reference-contexts: One of the earliest parallel sorting algorithms is Batcher's bitonic sort [3], which runs in O (log 2 n) time on the hypercube [10], shu*e-exchange <ref> [17] </ref>, and cube-connected cycles [14]. More recently, Leighton [9] exhibited a bounded-degree, O (log n)-time sorting network based on the O (log n)-depth sorting circuit of Ajtai, Komlos and Szemeredi [1]. <p> It will be assumed that the communication links are arranged in a hypercube [10], shu*e-exchange <ref> [10, 17] </ref>, or cube-connected cycles [14] topology. In a hypercube, each processor x is connected to the log n processors which have binary representations that differ from x in exactly one bit position.
References-found: 17

