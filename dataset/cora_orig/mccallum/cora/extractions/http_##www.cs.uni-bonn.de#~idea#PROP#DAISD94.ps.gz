URL: http://www.cs.uni-bonn.de/~idea/PROP/DAISD94.ps.gz
Refering-URL: http://www.cs.uni-bonn.de/~idea/PROP/publications.html
Root-URL: http://cs.uni-bonn.de
Email: fulrike,rainerg@informatik.uni-bonn.de  
Title: Update Propagation in Chimera, an Active DOOD Language  
Author: Ulrike Griefahn Rainer Manthey 
Address: Romerstr. 164 D-53117 Bonn, Germany  
Affiliation: Department of Computer Science University of Bonn  
Abstract: Propagating updates is an important task to be performed within many database services such as integrity checking, maintenance of materialized views, and condition monitoring. This paper is concerned with the propagation of updates in an active DOOD language. The approach proposed is to make use of Chimera triggers for computing induced updates. It will be shown how a subset of Chimera's deductive rules can be compiled to update propagation triggers. In its expressiveness the rule set considered corresponds to that of Datalog with sets and negation. Using triggers for implementing update propagation has the advantage that no special component has to be implemented as a trigger mechanism has to exist anyway. In this paper we will not propose new techniques for computing induced updates but will transfer the techniques | well-known for the relational model | to the object-oriented case. 
Abstract-found: 1
Intro-found: 1
Reference: [CM93] <author> Stefano Ceri and Rainer Manthey. </author> <title> Consolidated specification of Chimera (CL and CM). </title> <type> Technical Report IDEA.DE.2P.006.01, </type> <institution> Politecnico di Milano, Milan, Italy, </institution> <month> November </month> <year> 1993. </year> <title> ESPRIT project P6333 (IDEA). </title>
Reference-contexts: Chimera, the language we deal with in this paper, is a novel database language which has been designed within the context of the ESPRIT project P6333 (IDEA), <ref> [CM93] </ref>. Chimera is based on a conceptual model which provides object-oriented modeling facilities. It includes data definition commands, declarative queries, procedural primitives for database manipulations, as well as deductive rules for the definition of derived data and constraints, and active rules for reactive processing. <p> In the following we will not introduce the full syntax of Chimera, but restrict ourselves to the subset required in the remaining sections. A complete specification of Chimera can be found in <ref> [CM93] </ref>. As this paper is concerned with update propagation due to the presence of derived attributes the Chimera subset required includes essentially object classes, views, and triggers. 2.1 Object Classes and Views The definition of an object class in Chimera is composed of two sections: signature and implementation.
Reference: [CW90] <author> Stefano Ceri and Jennifer Widom. </author> <title> Deriving production rules for constraint maintenance. </title> <editor> In Dennis McLeod, Ron Sacks-Davis, and Hans Schek, editors, </editor> <booktitle> Proceedings of the 16th Conference on Very Large Databases, </booktitle> <address> Brisbane, Australia, </address> <pages> pages 566-577, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: The result of update propagation may then be used in subsequent steps for other purposes. The only other approach we know, which makes use of active rules for propagating updates, is the one proposed by Ceri and Widom in the context of the Starburst production rule system, <ref> [CW90, CW91, CW92] </ref>. Other approaches to relational update propagation compile passive rules into passive propagation rules activated by means of queries, [Kuc91, Oli91, VBK91, UO92]. The internal events method by Olive and Urpi explicitly addresses attribute modifications rather than reducing them to combinations of deletions and insertions as Ceri-Widom do.
Reference: [CW91] <author> Stefano Ceri and Jennifer Widom. </author> <title> Deriving production rules for incremental view maintenance. </title> <editor> In Lohman et al. </editor> <booktitle> [LSC91], </booktitle> <pages> pages 577-589. </pages>
Reference-contexts: The result of update propagation may then be used in subsequent steps for other purposes. The only other approach we know, which makes use of active rules for propagating updates, is the one proposed by Ceri and Widom in the context of the Starburst production rule system, <ref> [CW90, CW91, CW92] </ref>. Other approaches to relational update propagation compile passive rules into passive propagation rules activated by means of queries, [Kuc91, Oli91, VBK91, UO92]. The internal events method by Olive and Urpi explicitly addresses attribute modifications rather than reducing them to combinations of deletions and insertions as Ceri-Widom do. <p> Our approach makes use of Chimera triggers for computing induced database changes. Propagating updates by means of triggers has already been proposed by <ref> [CW91, CW92] </ref> for the relational data model, but is new in the context of object-oriented languages. Using triggers for computing induced updates has the advantage that no new component has to be implemented as the already existing trigger mechanism can be employed for this purpose.
Reference: [CW92] <author> Stefano Ceri and Jennifer Widom. </author> <title> Deriving incremental production rules for deductive data. </title> <type> Technical Report RJ 9071 (80884), </type> <institution> IBM Research Division, </institution> <month> May </month> <year> 1992. </year>
Reference-contexts: The result of update propagation may then be used in subsequent steps for other purposes. The only other approach we know, which makes use of active rules for propagating updates, is the one proposed by Ceri and Widom in the context of the Starburst production rule system, <ref> [CW90, CW91, CW92] </ref>. Other approaches to relational update propagation compile passive rules into passive propagation rules activated by means of queries, [Kuc91, Oli91, VBK91, UO92]. The internal events method by Olive and Urpi explicitly addresses attribute modifications rather than reducing them to combinations of deletions and insertions as Ceri-Widom do. <p> Problems with stratification will arise, if we employ delta classes within condition evaluation in order to gain more efficiency. Furthermore, if the materialization of derived attributes is intended, the delta classes (in this case the partially materialized attributes) should be applied for condition evaluation. The authors of <ref> [CW92] </ref> overcome this problem by specifying priorities between triggers (corresponding to the strata of the original rule set) in order to control the sequence of trigger executions. 6 Conclusion In this paper we present our first results on update propagation in an active DOOD language. <p> Our approach makes use of Chimera triggers for computing induced database changes. Propagating updates by means of triggers has already been proposed by <ref> [CW91, CW92] </ref> for the relational data model, but is new in the context of object-oriented languages. Using triggers for computing induced updates has the advantage that no new component has to be implemented as the already existing trigger mechanism can be employed for this purpose.
Reference: [Dec86] <author> Hendrik Decker. </author> <title> Integrity enforcement on deductive databases. </title> <editor> In Larry Kerschberg, editor, </editor> <booktitle> Proceedings from the 1st International Conference on Expert Database Sys tems, </booktitle> <address> Charleston, South Carolina, </address> <pages> pages 381-395. </pages> <publisher> The Benjamin/Cummings Pub--lishing Company, Inc., </publisher> <month> April </month> <year> 1986. </year>
Reference: [ECL93] <institution> ECL i PS e User Manual (ECRC Common Logic Programming System). Munich, ECRC GmbH, </institution> <month> March </month> <year> 1993. </year>
Reference-contexts: The method presented in this paper has been implemented within the context of the IDEA project based on the ECRC Common Logic Programming System ECL i PS e <ref> [ECL93] </ref>, a persistent Prolog system.
Reference: [FPT94] <author> Piero Fraternali, G. Psila, and L. Tanca. </author> <title> A framework for the design of active rule semantics and its application to Chimera. </title> <type> Technical Report IDEA.DE.2P.007.02, </type> <institution> Politecnico di Milano, Milan, Italy, </institution> <month> May </month> <year> 1994. </year> <title> ESPRIT project P6333 (IDEA). </title>
Reference-contexts: As these options are not yet important for the propagation of updates, we omit further details on this topic. A detailed description of Chimera triggers and their behavior can be found in <ref> [FPT94] </ref>. 2.4 Running Example of this Paper In order to demonstrate the propagation of updates in Chimera, we have chosen a peculiar family tree, the members of which are scientists. Each scientist is essentially described by his name, his supervisor, and the year of his graduation.
Reference: [HD92] <author> John Harrison and Suzanne Wagner Dietrich. </author> <title> Towards an incremental condition evaluation strategy for active deductive databases. </title> <booktitle> In Proceedings of the 3rd Aus-tralian DB Conference, </booktitle> <address> Melbourne, Australia, </address> <pages> pages 81-95, </pages> <month> February </month> <year> 1992. </year>
Reference: [HD93] <author> John V. Harrison and Suzanne Wagner Dietrich. </author> <title> Integrating active and deductive rules. </title> <editor> In Norman W. Paton and M. Howard Williams, editors, </editor> <booktitle> Proceedings of the 1st International Workshop On Rules In Database Systems. </booktitle> <institution> Department and Computing and Electrical Engineering, Heriot-Watt University, </institution> <address> Riccarton, </address> <publisher> Edinburgh, Springer Verlag, </publisher> <month> August </month> <year> 1993. </year>
Reference-contexts: It should be mentioned that several papers have been addressing a related, but different problem, namely update propagation for efficient condition monitoring in active databases (e. g., <ref> [RCB89, HD93] </ref>). They are propagating updates in order to support reactive processing, while our goal is to employ active rules for implementing update propagation. Note, that in this paper update propagation is investigated for a subset of Chimera deductive rules.
Reference: [Kuc91] <author> Volker Kuchenhoff. </author> <title> On the efficient computation of the difference between consecutive database states. </title> <editor> In Claude Delobel, Michael Kifer, and Yoshifumi Masunaga, editors, </editor> <booktitle> Proceedings of the 2nd International Conference on Deductive and Object-Oriented Databases, Munich, Germnay, number 566 in Lecture Notes in Computer Science, </booktitle> <pages> pages 478-502. </pages> <publisher> Springer Verlag, </publisher> <month> December </month> <year> 1991. </year>
Reference-contexts: Other approaches to relational update propagation compile passive rules into passive propagation rules activated by means of queries, <ref> [Kuc91, Oli91, VBK91, UO92] </ref>. The internal events method by Olive and Urpi explicitly addresses attribute modifications rather than reducing them to combinations of deletions and insertions as Ceri-Widom do. By doing so, they are already tackling one of the new problems arising in an object-oriented context.
Reference: [LSC91] <editor> Guy M. Lohman, Amilcar Sernadas, and Rafael Camps, editors. </editor> <booktitle> Proceedings of the 17th Conference on Very Large Data Bases, </booktitle> <address> Barcelona, Spain, </address> <month> September </month> <year> 1991. </year>
Reference: [Oli91] <author> Antoni Olive. </author> <title> Integrity constraints checking in deductive databases. </title> <editor> In Lohman et al. </editor> <booktitle> [LSC91], </booktitle> <pages> pages 513-523. </pages>
Reference-contexts: Other approaches to relational update propagation compile passive rules into passive propagation rules activated by means of queries, <ref> [Kuc91, Oli91, VBK91, UO92] </ref>. The internal events method by Olive and Urpi explicitly addresses attribute modifications rather than reducing them to combinations of deletions and insertions as Ceri-Widom do. By doing so, they are already tackling one of the new problems arising in an object-oriented context.
Reference: [RCB89] <author> Arnon Rosenthal, Sharma Chakravarthy, and Barbara Blaustein. </author> <title> Situation monitoring for active databases. </title> <booktitle> In Proceedings of the 15th Conference on Very Large Data Bases, </booktitle> <address> Amsterdam, </address> <publisher> Holland, </publisher> <pages> pages 455-464, </pages> <year> 1989. </year>
Reference-contexts: It should be mentioned that several papers have been addressing a related, but different problem, namely update propagation for efficient condition monitoring in active databases (e. g., <ref> [RCB89, HD93] </ref>). They are propagating updates in order to support reactive processing, while our goal is to employ active rules for implementing update propagation. Note, that in this paper update propagation is investigated for a subset of Chimera deductive rules.
Reference: [UO92] <author> Toni Urpi and Antoni Olive. </author> <title> A method for change computation in deductive databases. </title> <editor> In Li-Yan Yuan, editor, </editor> <booktitle> Proceedings of the 18th International Conference on Very Large Data Bases, </booktitle> <address> Vancouver, Canada, </address> <pages> pages 225-237, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: Other approaches to relational update propagation compile passive rules into passive propagation rules activated by means of queries, <ref> [Kuc91, Oli91, VBK91, UO92] </ref>. The internal events method by Olive and Urpi explicitly addresses attribute modifications rather than reducing them to combinations of deletions and insertions as Ceri-Widom do. By doing so, they are already tackling one of the new problems arising in an object-oriented context.
Reference: [VBK91] <author> Laurent Vieille, Petra Bayer, and Volker Kuchenhoff. </author> <title> Integrity checking and materialized views handling by update propagation in the EKS-V1 system. </title> <type> Technical Report TR-KB-35, </type> <institution> ECRC, </institution> <month> June </month> <year> 1991. </year>
Reference-contexts: Other approaches to relational update propagation compile passive rules into passive propagation rules activated by means of queries, <ref> [Kuc91, Oli91, VBK91, UO92] </ref>. The internal events method by Olive and Urpi explicitly addresses attribute modifications rather than reducing them to combinations of deletions and insertions as Ceri-Widom do. By doing so, they are already tackling one of the new problems arising in an object-oriented context.
References-found: 15

