URL: http://www.isi.edu/natural-language/mt/aaai94-postedit.ps
Refering-URL: http://www.isi.edu/natural-language/GAZELLE.html
Root-URL: 
Email: knight,chander @isi.edu  
Title: f g a an the Abstract adaptive general Automated Postediting of Documents Automated Postediting Article
Author: Kevin Knight and Ishwar Chander 
Address: Admiralty Way Marina del Rey, CA 90292  
Affiliation: 4676  
Note: Most of this text must be postedited by hand  is tedious work, but its automation has not received much research attention.  Improving  
Abstract: Anyone who has postedited a technical report or thesis written by a non-native speaker of English knows the potential of an automated poste-diting system. For the case of MT-generated text, we argue for the construction of postediting modules that are portable across MT systems, as an alternative to hardcoding improvements inside any one system. As an example, we have built a complete self-contained postediting module for the task of article selection ( , , ) for English noun phrases. This is a notoriously difficult problem for Japanese-English MT. Our system contains over 200,000 rules derived automatically from online text resources. We report on learning algorithms, accuracy, and comparisons with human performance. USC/Information Sciences Institute Fully automatic, high-quality translation is still an elusive goal for broad-coverage natural language processors. Current machine translation (MT) systems usually employ a human posteditor to transform the MT output into usable, quality text. If the posteditor can do this transformation in less time than it takes to translate from scratch, then the MT system is economically viable. Many commercial systems exist on this principle. are detachable and independent of any particular MT system. Figure 1 shows this distinction. The advantage of detachable posteditors is that they are portable across MT systems. They accomplish their tasks without reference to the internal algorithms and representations of particular systems. With portability comes leverage: one piece of coded linguistic analysis can be used to improve the quality of many automatic translators. Furthermore, postediting modules can clean up text generated by humans (whose internal algorithms are unknown). Texts that are imperfectly scanned by optical character readers (OCR) are also grist for automated postediting. We envision two types of postediting modules. One type is , the other . The rest of this section briefly discusses what the former type would look like; the remainder of the paper describes a posteditor of the latter type that has been designed, built, and tested. The idea of an adaptive posteditor is that an automatic program can watch a human postedit documents, see which errors crop up over and over (these will be different for any given system/domain pair), and begin to emulate what the human is doing. As yet, no adaptive posteditors, portable across systems and domains, have been built for MT. One place to start would be a large corpus of "pre-postedited" text aligned with corresponding postedited text. Statistical machine translation techniques could then be applied to learn the mapping. One would hope that such techniques would have an easier time learning to translate bad English to good English than, say, Japanese to good English. A general posteditor must be useful for improving text produced by a wide variety of MT systems and nonnative speakers and should operate equally across all domains. While working on Japanese-English translation within the PANGLOSS project (Nirenburg & Frederking 1994; Knight & Luk 1994), we have constructed an automatic posteditor for inserting articles ( , , and ) into English text. Several factors mo 
Abstract-found: 1
Intro-found: 0
Reference: <editor> et al. </editor> <booktitle> some/any zero a/an the some/any zero this that a an the Classification and Regression Trees Computational Linguistics Proceedings of the Eleventh National Conference on Artificial Intelligence AAAI Fall Symposium on Probabilistic Approaches to Natural Language Proceedings of the 21st ACL AAAI-94 International Journal of Lexicography ARPA Human Language Technology Workshop Machine Learning </booktitle>
References-found: 1

