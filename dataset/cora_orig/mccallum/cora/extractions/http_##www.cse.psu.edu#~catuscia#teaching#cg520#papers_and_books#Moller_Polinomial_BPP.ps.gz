URL: http://www.cse.psu.edu/~catuscia/teaching/cg520/papers_and_books/Moller_Polinomial_BPP.ps.gz
Refering-URL: http://www.cse.psu.edu/~catuscia/teaching/cg520/papers_and_books/
Root-URL: http://www.cse.psu.edu
Title: A polynomial-time algorithm for deciding bisimulation equivalence of normed Basic Parallel Processes  
Author: Yoram Hirshfeld Mark Jerrum Faron Moller 
Note: The first author is currently visiting the  The second author is a Nuffield Foundation Science Research Fellow, and is supported in part by grant GR/F 90363 of the UK Science and Engineering Research Council, and by Esprit Working Group No. 7097, "RAND." The third author is supported by Esprit Basic Research Action No. 7166, "CONCUR2."  
Address: Israel  United Kingdom  Kista, Sweden  Edinburgh.  
Affiliation: School of Mathematics and Computer Science Tel Aviv University  Department of Computer Science University of Edinburgh  Swedish Institute of Computer Science  Department of Computer Science, University of  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. C. M. Baeten, J. A. Bergstra and J. W. Klop. </author> <title> Decidability of bisimulation equivalence for processes generating context-free languages. </title> <booktitle> In Proceedings of PARLE 87, </booktitle> <editor> J. W. de Bakker, A. J. Nijman, P. C. Treleaven (eds), </editor> <booktitle> Lecture Notes in Computer Science 259, </booktitle> <pages> pp 93-114, </pages> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference-contexts: The notion of bisimulation equivalence was introduced by Park [13] as a notion of behavioural equivalence between concurrent systems, and has been intensively studied in the intervening years; see <ref> [1, 2, 3, 4, 5, 6, 7, 9, 10, 12] </ref> for just some of the work in this area which is relevent to our present study. Bisimulation equivalence plays an important role in algebraic theories of concurrency, such as that of Milner [11].
Reference: [2] <author> S. Christensen, Y. Hirshfeld and F. Moller. </author> <title> Decomposability, decidability and axiomatisability for bisimulation equivalence on basic parallel processes. </title> <booktitle> In Proceedings of LICS 93. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1993. </year>
Reference-contexts: The notion of bisimulation equivalence was introduced by Park [13] as a notion of behavioural equivalence between concurrent systems, and has been intensively studied in the intervening years; see <ref> [1, 2, 3, 4, 5, 6, 7, 9, 10, 12] </ref> for just some of the work in this area which is relevent to our present study. Bisimulation equivalence plays an important role in algebraic theories of concurrency, such as that of Milner [11]. <p> If it is possible from any process to reach the empty process through some sequence of transitions, we say the system is normed. Christensen, Hirshfeld, and Moller <ref> [2] </ref> have demonstrated that bisimulation equivalence is decidable for normed BPP. Since the state space (all multisets of elementary processes) is infinite, the issue of decidability is a real one. <p> Our proof relies heavily on the fact that normed processes (i.e., processes with finite norm) are uniquely decomposable into prime processes. The following result was obtained (in a slightly more general setting) by Christensen, Hirshfeld, and Moller <ref> [2] </ref>. The proof is quite straightforward, and we repeat it here in the interest of making the article self contained.
Reference: [3] <author> S. Christensen, Y. Hirshfeld and F. Moller. </author> <title> Bisimulation equivalence is decidable for basic parallel processes. </title> <booktitle> In Proceedings of CONCUR 93, </booktitle> <editor> E. Best (ed), </editor> <booktitle> Lecture Notes in Computer Science 715, </booktitle> <pages> pp 143-157, </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: The notion of bisimulation equivalence was introduced by Park [13] as a notion of behavioural equivalence between concurrent systems, and has been intensively studied in the intervening years; see <ref> [1, 2, 3, 4, 5, 6, 7, 9, 10, 12] </ref> for just some of the work in this area which is relevent to our present study. Bisimulation equivalence plays an important role in algebraic theories of concurrency, such as that of Milner [11]. <p> In this article we present (see Theorem 2) the first polynomial-time algorithm for deciding bisimulation equivalence for normed BPP: indeed the first decision procedure for this problem with any 2 quantified time bound. More recently Christensen, Hirshfeld, and Moller <ref> [3] </ref> were able to prove decidability of this problem without the assumption that processes are normed. However, the algorithm we present here uses the notion of norm in an essential way, and there is no obvious way to adapt it to the general case.
Reference: [4] <author> S. Christensen, H. Huttel and C. Stirling. </author> <title> Bisimulation equivalence is decidable for all context-free processes. </title> <booktitle> In Proceedings of CONCUR 92, </booktitle> <editor> W. R. Cleaveland (ed.), </editor> <booktitle> Lecture Notes in Computer Science 630, </booktitle> <pages> pp 138-147. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: The notion of bisimulation equivalence was introduced by Park [13] as a notion of behavioural equivalence between concurrent systems, and has been intensively studied in the intervening years; see <ref> [1, 2, 3, 4, 5, 6, 7, 9, 10, 12] </ref> for just some of the work in this area which is relevent to our present study. Bisimulation equivalence plays an important role in algebraic theories of concurrency, such as that of Milner [11]. <p> Basic Process Algebra (BPA) is, roughly, the non-commutative analogue of BPP. Interestingly, different techniques seem to be necessary in the two cases. As with BPP, this problem remains decidable when the norm condition is dropped (see Chris-tensen, Huttel and Stirling <ref> [4] </ref>), but again no polynomial-time decision procedure is known. 2 Notation and basic facts Let be a context-free grammar in Greibach normal form with variables V = fX 1 ; : : : ; X n g and terminals A. 1 For reasons that will become apparent presently, we sometimes refer
Reference: [5] <author> J. F. Groote. </author> <title> A short proof of the decidability of bisimulation for normed BPA processes, </title> <journal> Information Processing Letters 42, </journal> <pages> pp 167-171, </pages> <year> 1991. </year>
Reference-contexts: The notion of bisimulation equivalence was introduced by Park [13] as a notion of behavioural equivalence between concurrent systems, and has been intensively studied in the intervening years; see <ref> [1, 2, 3, 4, 5, 6, 7, 9, 10, 12] </ref> for just some of the work in this area which is relevent to our present study. Bisimulation equivalence plays an important role in algebraic theories of concurrency, such as that of Milner [11].
Reference: [6] <author> Y. Hirshfeld, </author> <title> Petri nets and the equivalence problem. </title> <note> To appear in Proceedings of CSL 93 (Karl Meinke, </note> <editor> ed.), </editor> <booktitle> Springer Lecture Notes in Computer Science. </booktitle> <pages> 10 </pages>
Reference-contexts: The notion of bisimulation equivalence was introduced by Park [13] as a notion of behavioural equivalence between concurrent systems, and has been intensively studied in the intervening years; see <ref> [1, 2, 3, 4, 5, 6, 7, 9, 10, 12] </ref> for just some of the work in this area which is relevent to our present study. Bisimulation equivalence plays an important role in algebraic theories of concurrency, such as that of Milner [11]. <p> Indeed, the somewhat related question of language equivalence of context-free grammars has long been known to be undecidable [8], while the more closely related question of deciding "trace equivalence" for normed BPP was recently shown to be undecidable by Hirshfeld <ref> [6] </ref>. The time complexity of the decision procedure of Christensen et al. is not known to be bounded by any primitive recursive function.
Reference: [7] <author> Y. Hirshfeld, M. Jerrum, and F. Moller, </author> <title> A polynomial algorithm for deciding bisimilarity of normed context-free processes, </title> <institution> Research Report R94:08, Swedish Institute of Computer Science, Kista, Sweden, </institution> <month> March </month> <year> 1994. </year>
Reference-contexts: The notion of bisimulation equivalence was introduced by Park [13] as a notion of behavioural equivalence between concurrent systems, and has been intensively studied in the intervening years; see <ref> [1, 2, 3, 4, 5, 6, 7, 9, 10, 12] </ref> for just some of the work in this area which is relevent to our present study. Bisimulation equivalence plays an important role in algebraic theories of concurrency, such as that of Milner [11]. <p> The result presented here complements a recent result by the authors to the effect that bisimulation equivalence for "normed BPA" is decidable in polynomial time <ref> [7] </ref>. Basic Process Algebra (BPA) is, roughly, the non-commutative analogue of BPP. Interestingly, different techniques seem to be necessary in the two cases.
Reference: [8] <author> J. E. Hopcroft and J. D. Ullman. </author> <title> Introduction to Automata Theory, Languages, and Computation, </title> <publisher> Addison Wesley, </publisher> <year> 1979. </year>
Reference-contexts: Since the state space (all multisets of elementary processes) is infinite, the issue of decidability is a real one. Indeed, the somewhat related question of language equivalence of context-free grammars has long been known to be undecidable <ref> [8] </ref>, while the more closely related question of deciding "trace equivalence" for normed BPP was recently shown to be undecidable by Hirshfeld [6]. The time complexity of the decision procedure of Christensen et al. is not known to be bounded by any primitive recursive function.
Reference: [9] <author> H. Huttel and C. Stirling. </author> <title> Actions speak louder than words: proving bisimilarity for context-free processes. </title> <booktitle> In Proceedings of LICS 91, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <pages> pp 376-386, </pages> <year> 1991. </year>
Reference-contexts: The notion of bisimulation equivalence was introduced by Park [13] as a notion of behavioural equivalence between concurrent systems, and has been intensively studied in the intervening years; see <ref> [1, 2, 3, 4, 5, 6, 7, 9, 10, 12] </ref> for just some of the work in this area which is relevent to our present study. Bisimulation equivalence plays an important role in algebraic theories of concurrency, such as that of Milner [11].
Reference: [10] <author> D. T. Huynh and L. Tian. </author> <booktitle> Deciding bisimilarity of normed context-free processes is in P 2 , Journal of Theoretical Computer Science 123, </booktitle> <pages> pp 183-197, </pages> <year> 1994. </year>
Reference-contexts: The notion of bisimulation equivalence was introduced by Park [13] as a notion of behavioural equivalence between concurrent systems, and has been intensively studied in the intervening years; see <ref> [1, 2, 3, 4, 5, 6, 7, 9, 10, 12] </ref> for just some of the work in this area which is relevent to our present study. Bisimulation equivalence plays an important role in algebraic theories of concurrency, such as that of Milner [11].
Reference: [11] <author> R. Milner. </author> <title> Communication and Concurrency, </title> <publisher> Prentice Hall, </publisher> <year> 1989. </year>
Reference-contexts: Bisimulation equivalence plays an important role in algebraic theories of concurrency, such as that of Milner <ref> [11] </ref>. <p> Process fi cannot match this transition, since it cannot increase the exponent b j without decreasing some exponent to the right of b j . This contradicts minimality of the counterexample, and the assumption that ff and fi are bisimilar. 2 In the language CCS of Milner <ref> [11] </ref>, this "inactive process" is denoted 0; the different symbols merely reflect the fact that we have chosen a multiplicative notation instead of an additive one. 3 Note that norm ff = norm fi, since ff fi. 4 Case II.
Reference: [12] <author> R. Milner and F. Moller, </author> <title> Unique decomposition of processes, </title> <journal> Journal of Theo retical Computer Science 107, </journal> <pages> pp 357-363, </pages> <year> 1993. </year>
Reference-contexts: The notion of bisimulation equivalence was introduced by Park [13] as a notion of behavioural equivalence between concurrent systems, and has been intensively studied in the intervening years; see <ref> [1, 2, 3, 4, 5, 6, 7, 9, 10, 12] </ref> for just some of the work in this area which is relevent to our present study. Bisimulation equivalence plays an important role in algebraic theories of concurrency, such as that of Milner [11].
Reference: [13] <author> D. M. R. Park. </author> <title> Concurrency and Automata on Infinite Sequences. </title> <booktitle> Lecture Notes in Computer Science 104, </booktitle> <pages> pp 168-183, </pages> <publisher> Springer Verlag, </publisher> <year> 1981. </year> <month> 11 </month>
Reference-contexts: The notion of bisimulation equivalence was introduced by Park <ref> [13] </ref> as a notion of behavioural equivalence between concurrent systems, and has been intensively studied in the intervening years; see [1, 2, 3, 4, 5, 6, 7, 9, 10, 12] for just some of the work in this area which is relevent to our present study.
References-found: 13

