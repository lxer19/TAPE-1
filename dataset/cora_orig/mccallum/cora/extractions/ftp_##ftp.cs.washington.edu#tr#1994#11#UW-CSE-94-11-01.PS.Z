URL: ftp://ftp.cs.washington.edu/tr/1994/11/UW-CSE-94-11-01.PS.Z
Refering-URL: http://www.cs.washington.edu/homes/fix/papers/
Root-URL: 
Title: Optimal One-Way Sorting on a One-Dimensional Sub-Bus Array  
Author: James D. Fix Richard E. Ladner 
Abstract: The problem of sorting on a one-dimensional sub-bus array of processors is addressed. A one-dimensional sub-bus array has a bus connecting the processors which can be segmented into sub-buses on which an active processor can broadcast. The sub-bus broadcast capability is implemented on the MasPar MP-1 and MP-2 parallel computers. The sub-bus broadcast operation makes possible a new class of parallel sorting algorithms which can be characterized by parallel insertion steps. We restrict our attention to the class of sorting methods where parallel insertion steps are in the same direction, say left. For this class of one-way sorting strategies we prove a lower bound and give two strategies, the left greedy sort and the left adaptive insertion sort, both of which achieve the lower bound. Because our parallel insertion model is quite general, it is not necessarily the case that a sorting strategy in the model can be efficiently implemented on a real sub-bus array of processors. The left greedy sort cannot be efficiently implemented, but the left adaptive insertion sort can be efficiently implemented. The two sorting strategies have different properties and each is interesting in its own right. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Blank. </author> <title> The MasPar MP-1 architecture. </title> <booktitle> Proceedings of COMPCON Spring 90 The Thirty-Fifth IEEE Computer Society International Conference, </booktitle> <pages> pp. 20-24, </pages> <month> February </month> <year> 1990. </year>
Reference-contexts: For many applications, sorting problem sizes are large enough to warrant the need for efficient sorting algorithms for massively parallel machines. A popular architecture for parallel computers is the two-dimensional array or mesh of processors such as the MasPar MP-1 and MP-2 <ref> [1] </ref>, and the Intel Paragon. The problem of sorting on a mesh of processors has been well studied [5, 6, 7]. However, most of the sorting techniques for meshes assume that a processor can only communicate with its nearest neighbors.
Reference: [2] <author> A. Condon, R. E. Ladner, J. Lampe, and R. Sinha. </author> <title> Complexity of sub-bus mesh computations. </title> <type> Technical Report 93-04-15, </type> <institution> University of Washington, Department of Computer Science and Engineering, </institution> <year> 1993. </year> <note> To appear in SIAM Journal on Computing. </note>
Reference-contexts: In the left greedy sorting strategy, each processor has to determine if its value is smaller than the value at all higher numbered processors. This task could be performed by a parallel suffix minimum operation, but such an operation requires log n steps on the one-dimensional sub-bus mesh <ref> [2] </ref>. A logarithmic number of sub-bus steps per left insertion step implies that the left-only greedy algorithm is unsuitable for practice. We have discovered an optimal left-only sorting strategy, the left adaptive insertion sorting strategy, which is implementable in a constant number of sub-bus operations per left insertion step.
Reference: [3] <author> D. E. Knuth. </author> <booktitle> The Art of Computer Programming: Fundamental Algorithms, </booktitle> <volume> volume 1. </volume> <publisher> Addison-Wesley, </publisher> <year> 1969. </year>
Reference-contexts: k=1 = n! n1 X m k (n)] 1 n1 X (k + 1)!(k + 1) nk1 1 n X k!k nk : As it happens, the expression 1 n! k=0 k!k nk can be approximated very closely as p n 3 fi (n 1 Knuth Vol. 1, pages 112-117 <ref> [3] </ref>). Combining this fact with the previous two theorems we have: 1 2 4 5 3 6 7 9 8 + Theorem 4.3.
Reference: [4] <author> D. E. Knuth. </author> <title> The Art of Computer Programming: Sorting and Searching, volume 3. </title> <publisher> Addison-Wesley, </publisher> <year> 1973. </year>
Reference-contexts: 1 Introduction Sorting is a fundamental problem in computation. It has been well studied in many forms (see Knuth <ref> [4] </ref>, for example) and occurs as a sub-problem of a variety of algorithms and applications. For many applications, sorting problem sizes are large enough to warrant the need for efficient sorting algorithms for massively parallel machines. <p> The set of inversions and the number of inversions of a permutation are useful measures of order within a permutation, and have been applied to the analysis of sequential sorting <ref> [4] </ref>. The only permutation with no inversions is the sorted permutation. Define the left greedy step for as a left insertion step where the set of active processors is G L () = fi j for all j &gt; i; [j] &gt; [i]g [ f0g.
Reference: [5] <author> F. T. Leighton. </author> <title> Introduction to Parallel Algorithms and Architectures: Arrays, Trees, Hypercubes. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year>
Reference-contexts: A popular architecture for parallel computers is the two-dimensional array or mesh of processors such as the MasPar MP-1 and MP-2 [1], and the Intel Paragon. The problem of sorting on a mesh of processors has been well studied <ref> [5, 6, 7] </ref>. However, most of the sorting techniques for meshes assume that a processor can only communicate with its nearest neighbors. However, modern mesh computers, such as the MasPar MP-1 and MP-2 allow for broadcast along rows and columns. <p> A basic building block of most two-dimensional mesh sorting algorithms is the one-dimensional algorithm called odd-even transposition sort described in Leighton's book <ref> [5] </ref>. Odd-even transposition sort resembles a parallel "bubble sort". It involves successively comparing and exchanging values between odd/even neighbors and even/odd neighbors until the values are in order.
Reference: [6] <author> I. Scherson, S. Sen, and A. Shamir. Shear-sort: </author> <title> A true two-dimensional sorting technique for VLSI networks. </title> <booktitle> In IEEE-ACM International Conference on Parallel Processing, </booktitle> <pages> pages 903-908, </pages> <year> 1986. </year>
Reference-contexts: A popular architecture for parallel computers is the two-dimensional array or mesh of processors such as the MasPar MP-1 and MP-2 [1], and the Intel Paragon. The problem of sorting on a mesh of processors has been well studied <ref> [5, 6, 7] </ref>. However, most of the sorting techniques for meshes assume that a processor can only communicate with its nearest neighbors. However, modern mesh computers, such as the MasPar MP-1 and MP-2 allow for broadcast along rows and columns.
Reference: [7] <author> C. Schnorr and A. Shamir. </author> <title> An optimal sorting algorithm for mesh connected computers. </title> <booktitle> In Proceedings of the 18th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 255-263, </pages> <year> 1986. </year>
Reference-contexts: A popular architecture for parallel computers is the two-dimensional array or mesh of processors such as the MasPar MP-1 and MP-2 [1], and the Intel Paragon. The problem of sorting on a mesh of processors has been well studied <ref> [5, 6, 7] </ref>. However, most of the sorting techniques for meshes assume that a processor can only communicate with its nearest neighbors. However, modern mesh computers, such as the MasPar MP-1 and MP-2 allow for broadcast along rows and columns.
References-found: 7

