URL: http://www.cs.huji.ac.il/papers/IP/voronoi-pami.ps.gz
Refering-URL: http://www.cs.huji.ac.il/papers/IP/index.html
Root-URL: 
Title: Linear Time Euclidean Distance Transform Algorithms  
Author: Heinz Breu Joseph Gil David Kirkpatrick Michael Werman 
Abstract: Two linear time (and hence asymptotically optimal) algorithms for computing the Euclidean distance transform of a two-dimensional binary image are presented. The algorithms are based on the construction and regular sampling of the Voronoi diagram whose sites consist of the unit (feature) pixels in the image. The first algorithm, which is of primarily theoretical interest, constructs the complete Voronoi diagram. The second, more practical, algorithm constructs the Voronoi diagram where it intersects the horizontal lines passing through the image pixel centres. Extensions to higher dimensional images and to other distance functions are also discussed.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Ahuja. </author> <title> Dot pattern processing using Voronoi polygons as neighborhoods. </title> <booktitle> In Proc. 5th Internat. Conf. Pattern Recogn., </booktitle> <pages> pages 1122-1127, </pages> <address> Miami Beach, FL, </address> <year> 1980. </year>
Reference-contexts: that, at least in their explicit forms, both transforms require at least linear time for their computation. 1 Distance and nearest-neighbour transforms have for a considerable time been recognized as important sources and encodings of metric information associated with images in digital picture processing, pattern recognition, robotics and related applications <ref> [17, 13, 2, 1, 10, 6, 11] </ref>. Such transforms were first introduced by Rosenfeld and Pfaltz [18, 19] and have been the focus of an extensive literature (cf. [13, 16]). The most natural metric for computing distance in most applications is the Euclidean metric. <p> If we take note of the fact that (i) the sites consist of a subset of some n by m array of pixels and (ii) it suffices to construct the Voronoi diagram restricted to the rectangle <ref> [1; n] </ref> fi [1; m], then we can ignore the structure of the subset and partition the array instead (by splitting it in half along its longest dimension). <p> If we take note of the fact that (i) the sites consist of a subset of some n by m array of pixels and (ii) it suffices to construct the Voronoi diagram restricted to the rectangle [1; n] fi <ref> [1; m] </ref>, then we can ignore the structure of the subset and partition the array instead (by splitting it in half along its longest dimension). <p> Any terms that have r as a factor vanish. This gives the following equivalent function. 9 than n points in Candidates, and each point is added and removed from L at most once. Note that L can be implemented as a stack. Algorithm: Create L from Candidates. L <ref> [1] </ref> Candidates [1] L [2] Candidates [2] k 2; l 3; c jCandidatesj while l c do w Candidates [l] while k 2 and Remove (L [k 1]; L [k]; w; r) do k k 1 k k + 1; l l + 1 od Note that the inner loop removes <p> This gives the following equivalent function. 9 than n points in Candidates, and each point is added and removed from L at most once. Note that L can be implemented as a stack. Algorithm: Create L from Candidates. L <ref> [1] </ref> Candidates [1] L [2] Candidates [2] k 2; l 3; c jCandidatesj while l c do w Candidates [l] while k 2 and Remove (L [k 1]; L [k]; w; r) do k k 1 k k + 1; l l + 1 od Note that the inner loop removes points from
Reference: [2] <author> C. Arcelli and G. Sanniti de Baja. </author> <title> Computing Voronoi diagrams in digital pictures. </title> <journal> Pattern Recognition Letters, </journal> <pages> pages 383-389, </pages> <year> 1986. </year>
Reference-contexts: that, at least in their explicit forms, both transforms require at least linear time for their computation. 1 Distance and nearest-neighbour transforms have for a considerable time been recognized as important sources and encodings of metric information associated with images in digital picture processing, pattern recognition, robotics and related applications <ref> [17, 13, 2, 1, 10, 6, 11] </ref>. Such transforms were first introduced by Rosenfeld and Pfaltz [18, 19] and have been the focus of an extensive literature (cf. [13, 16]). The most natural metric for computing distance in most applications is the Euclidean metric. <p> This gives the following equivalent function. 9 than n points in Candidates, and each point is added and removed from L at most once. Note that L can be implemented as a stack. Algorithm: Create L from Candidates. L [1] Candidates [1] L <ref> [2] </ref> Candidates [2] k 2; l 3; c jCandidatesj while l c do w Candidates [l] while k 2 and Remove (L [k 1]; L [k]; w; r) do k k 1 k k + 1; l l + 1 od Note that the inner loop removes points from the top <p> This gives the following equivalent function. 9 than n points in Candidates, and each point is added and removed from L at most once. Note that L can be implemented as a stack. Algorithm: Create L from Candidates. L [1] Candidates [1] L <ref> [2] </ref> Candidates [2] k 2; l 3; c jCandidatesj while l c do w Candidates [l] while k 2 and Remove (L [k 1]; L [k]; w; r) do k k 1 k k + 1; l l + 1 od Note that the inner loop removes points from the top of L <p> Theorem 1 Algorithm "Create L from Candidates" is correct. Proof: Following initialization, Invariant 1 (specifically, V F "R = V Candidates " R) is an immediate consequence of Observation 1. Invariant 2 (specifically, C L L <ref> [2] </ref> " R = (( d L [1]L [2]):x; 1)) is an immediate consequence of Observation 2. At the conclusion of the algorithm l = c + 1, and hence V F " R = V L " R, by Invariant 1.
Reference: [3] <author> G. Borgefors. </author> <title> Distance transformations in arbitrary dimensions. Computer Vision, </title> <journal> Graphics and Image Processing, </journal> <volume> 27 </volume> <pages> 321-345, </pages> <year> 1984. </year>
Reference-contexts: We are in the process of conducting emperical evaluations of these algorithms; these results will be reported elsewhere. Our results raise several related questions the most interesting of which seems to be whether or not the algorithms can be generalized to work on three and higher dimensional images (cf. <ref> [3] </ref> for motivation and related work). In fact, it turns out that a natural (but nontrivial) generalization provides a linear time algorithm for Euclidean distance transforms of rectilinear images in all fixed dimensions.
Reference: [4] <author> G. Borgefors. </author> <title> Distance transformations in digital images. Computer Vision, </title> <journal> Graphics and Image Processing, </journal> <volume> 34 </volume> <pages> 344-371, </pages> <year> 1986. </year>
Reference-contexts: The most natural metric for computing distance in most applications is the Euclidean metric. However, the lack of efficient algorithms for computing the Euclidean distance transform has led many researchers to define and use other metrics (such as city-block, chessboard or chamfer <ref> [8, 22, 4] </ref>), or approximations to the exact Euclidean distance transform [7, 4, 5, 22]. While other metrics lend themselves to efficient algorithms, they do so at the expense of being dependent on the orientation of the coordinate system used for representing the image. <p> However, the lack of efficient algorithms for computing the Euclidean distance transform has led many researchers to define and use other metrics (such as city-block, chessboard or chamfer [8, 22, 4]), or approximations to the exact Euclidean distance transform <ref> [7, 4, 5, 22] </ref>. While other metrics lend themselves to efficient algorithms, they do so at the expense of being dependent on the orientation of the coordinate system used for representing the image. <p> While other metrics lend themselves to efficient algorithms, they do so at the expense of being dependent on the orientation of the coordinate system used for representing the image. To quote Borgefors <ref> [4] </ref>, "If the Euclidean distance transform could be easily computed there would be no need for approximations". <p> Non-trivial approaches to the construction of (approximate) Euclidean distance transforms involve the propagation of distance information from pixels to neighbouring pixels. Methods vary on the size and shape of the neighbourhood, and the order in which pixels are processed. In one family of algorithms (cf. <ref> [4, 7] </ref>), each pixel p consults, perhaps repeatedly, with other pixels in a typically small neighbourhood of p, and bases its updated transform value on those of its neighbours.
Reference: [5] <author> G. Borgefors. </author> <title> A new distance transformation approximating the Eu-clidean distance. </title> <booktitle> Proc. International Joint Conf. on Pattern Recognition, </booktitle> <pages> pages 336-338, </pages> <year> 1986. </year> <month> 11 </month>
Reference-contexts: However, the lack of efficient algorithms for computing the Euclidean distance transform has led many researchers to define and use other metrics (such as city-block, chessboard or chamfer [8, 22, 4]), or approximations to the exact Euclidean distance transform <ref> [7, 4, 5, 22] </ref>. While other metrics lend themselves to efficient algorithms, they do so at the expense of being dependent on the orientation of the coordinate system used for representing the image.
Reference: [6] <author> K. L. Clarkson. </author> <title> Approximation algorithms for shortest path motion plan-ning. </title> <booktitle> In Proc. 19th Annu. ACM Sympos. Theory Comput., </booktitle> <pages> pages 56-65, </pages> <year> 1987. </year>
Reference-contexts: that, at least in their explicit forms, both transforms require at least linear time for their computation. 1 Distance and nearest-neighbour transforms have for a considerable time been recognized as important sources and encodings of metric information associated with images in digital picture processing, pattern recognition, robotics and related applications <ref> [17, 13, 2, 1, 10, 6, 11] </ref>. Such transforms were first introduced by Rosenfeld and Pfaltz [18, 19] and have been the focus of an extensive literature (cf. [13, 16]). The most natural metric for computing distance in most applications is the Euclidean metric.
Reference: [7] <author> P.E. Danielson. </author> <title> Euclidean distance mapping. </title> <booktitle> Comp. Graph. and Image Proc., </booktitle> <volume> 14 </volume> <pages> 227-248, </pages> <year> 1980. </year>
Reference-contexts: However, the lack of efficient algorithms for computing the Euclidean distance transform has led many researchers to define and use other metrics (such as city-block, chessboard or chamfer [8, 22, 4]), or approximations to the exact Euclidean distance transform <ref> [7, 4, 5, 22] </ref>. While other metrics lend themselves to efficient algorithms, they do so at the expense of being dependent on the orientation of the coordinate system used for representing the image. <p> Non-trivial approaches to the construction of (approximate) Euclidean distance transforms involve the propagation of distance information from pixels to neighbouring pixels. Methods vary on the size and shape of the neighbourhood, and the order in which pixels are processed. In one family of algorithms (cf. <ref> [4, 7] </ref>), each pixel p consults, perhaps repeatedly, with other pixels in a typically small neighbourhood of p, and bases its updated transform value on those of its neighbours. <p> In the worst case this may involve a number of iterations proportional to the image perimeter (O (maxfn; mg)), but this is offset by the fact that individual pixels are processed in parallel. Danielsson <ref> [7] </ref> describes a sequential nearest-neighbour transform algorithm 2 of the above type, and shows that it is accurate to within one pixel, that is, the identified neighbour may be up to one pixel further away than the true nearest neighbour.
Reference: [8] <author> P.P. Das and P.P. Chakrabarti. </author> <title> Distance functions in digital geometry. </title> <journal> Information Sciences, </journal> <volume> 42 </volume> <pages> 113-136, </pages> <year> 1987. </year>
Reference-contexts: The most natural metric for computing distance in most applications is the Euclidean metric. However, the lack of efficient algorithms for computing the Euclidean distance transform has led many researchers to define and use other metrics (such as city-block, chessboard or chamfer <ref> [8, 22, 4] </ref>), or approximations to the exact Euclidean distance transform [7, 4, 5, 22]. While other metrics lend themselves to efficient algorithms, they do so at the expense of being dependent on the orientation of the coordinate system used for representing the image.
Reference: [9] <author> G. L. </author> <title> Dirichlet. Uber die Reduktion der positiven quadratischen Formen mit drei unbestimmten ganzen Zahlen. </title> <journal> J. Reine Angew. Math., </journal> <volume> 40 </volume> <pages> 209-227, 1850. </pages>
Reference-contexts: The first algorithm, which is of primarily theoretical interest, constructs the complete Voronoi diagram. The second, more practical, algorithm constructs the Voronoi diagram where it intersects the horizontal lines passing through the image pixel centres. The Voronoi diagram <ref> [20, 9] </ref> of a set of sites S = fh 1 ; : : : ; h s g, denoted V S , consists of s disjoint Voronoi cells fC S h 1 ; : : : ; C S h s g, where C S h (or simply C h
Reference: [10] <author> J. Fairfield. </author> <title> Segmenting dot patterns by Voronoi diagram concavity. </title> <journal> IEEE Trans. Pattern Anal. Mach. Intell., </journal> <volume> PAMI-32:104-110, </volume> <year> 1983. </year>
Reference-contexts: that, at least in their explicit forms, both transforms require at least linear time for their computation. 1 Distance and nearest-neighbour transforms have for a considerable time been recognized as important sources and encodings of metric information associated with images in digital picture processing, pattern recognition, robotics and related applications <ref> [17, 13, 2, 1, 10, 6, 11] </ref>. Such transforms were first introduced by Rosenfeld and Pfaltz [18, 19] and have been the focus of an extensive literature (cf. [13, 16]). The most natural metric for computing distance in most applications is the Euclidean metric.
Reference: [11] <author> F. Klein and O. Kubler. </author> <title> Euclidean distance transformations and model-guided image interpretation. </title> <journal> Pattern Recognition Letters, </journal> <volume> 5 </volume> <pages> 19-29, </pages> <year> 1987. </year>
Reference-contexts: that, at least in their explicit forms, both transforms require at least linear time for their computation. 1 Distance and nearest-neighbour transforms have for a considerable time been recognized as important sources and encodings of metric information associated with images in digital picture processing, pattern recognition, robotics and related applications <ref> [17, 13, 2, 1, 10, 6, 11] </ref>. Such transforms were first introduced by Rosenfeld and Pfaltz [18, 19] and have been the focus of an extensive literature (cf. [13, 16]). The most natural metric for computing distance in most applications is the Euclidean metric.
Reference: [12] <author> M.N. Kolountzakis and K.N. Kutulakos. </author> <title> Fast computation of the Eu-clidean distance map for binary images. </title> <journal> Information Processing Letters, </journal> <volume> 43 </volume> <pages> 181-184, </pages> <year> 1992. </year>
Reference-contexts: While certain heuristics apply, even in the most abstract setting, to reduce the cost on typical images, the worst-case cost for an n by m image is fi (nm minfn; mg). Recently an O (nm log (nm)) time algorithm for computing the exact Euclidean distance transform was proposed <ref> [12] </ref>. This algorithm can be viewed as a special instance of Paglieroni's algorithm, in which properties of the Euclidean metric are exploited.
Reference: [13] <author> D.W. Paglieroni. </author> <title> Distance transforms. </title> <booktitle> Computer Vision, Graphics and Image Processing:Graphical Models and Image Processing, </booktitle> <volume> 54 </volume> <pages> 56-74, </pages> <year> 1992. </year>
Reference-contexts: that, at least in their explicit forms, both transforms require at least linear time for their computation. 1 Distance and nearest-neighbour transforms have for a considerable time been recognized as important sources and encodings of metric information associated with images in digital picture processing, pattern recognition, robotics and related applications <ref> [17, 13, 2, 1, 10, 6, 11] </ref>. Such transforms were first introduced by Rosenfeld and Pfaltz [18, 19] and have been the focus of an extensive literature (cf. [13, 16]). The most natural metric for computing distance in most applications is the Euclidean metric. <p> Such transforms were first introduced by Rosenfeld and Pfaltz [18, 19] and have been the focus of an extensive literature (cf. <ref> [13, 16] </ref>). The most natural metric for computing distance in most applications is the Euclidean metric. <p> In short, the transform is first constructed using the distance function in one lower dimension (say, restricted to the pixels in a given row of the image) and then this intermediate result is used in a second phase to construct the full two-dimensional transform. Paglieroni <ref> [14, 13] </ref> abstracts this approach, showing that it is applicable to a broad class of distance functions, including Euclidean distance. <p> Similar results (including algorithms that are optimal to within logarithmic factors) hold for a broad class of distance functions satisfying axioms similar to those set out by Paglieroni <ref> [13] </ref>. Like the algorithm of Section 3, these more general algorithms lend themselves to parallel implementation and can be implemented with sublinear auxiliary storage. A more extensive paper detailing these results is in preparation.
Reference: [14] <author> D.W. Paglieroni. </author> <title> A unified distance transform algorithm and architecture. </title> <journal> Machine Vision and Applications, </journal> <volume> 5 </volume> <pages> 47-55, </pages> <year> 1992. </year>
Reference-contexts: In short, the transform is first constructed using the distance function in one lower dimension (say, restricted to the pixels in a given row of the image) and then this intermediate result is used in a second phase to construct the full two-dimensional transform. Paglieroni <ref> [14, 13] </ref> abstracts this approach, showing that it is applicable to a broad class of distance functions, including Euclidean distance.
Reference: [15] <author> F. P. Preparata and M. I. Shamos. </author> <title> Computational Geometry: an Introduction. </title> <publisher> Springer-Verlag, </publisher> <address> New York, NY, </address> <year> 1985. </year>
Reference-contexts: We note, however, that the discreteness and regularity of the inputs and outputs do play an essential role in the detailed design of the algorithms, and in their analysis. In fact, it is well known (cf. <ref> [15] </ref>) that linear algorithms do not exist for determining, for each of an arbitrary set of query points, the closest of an arbitrary collection of sites. 2 Transform based on Complete Voronoi Di agram Construction Determining the nearest among s arbitrary sites for each of q arbitrary query points requires, in <p> In fact, these bounds are realized by familiar algorithms for constructing and querying Voronoi diagrams (cf. <ref> [15] </ref>). For our application this gives an immediate O (nm log (nm)) time nearest-neighbour transform algorithm, since the number of pixels (and hence the number of both sites and query points) is O (nm). <p> Our objective, in the remainder of this section, is to demonstrate that this time complexity can be reduced to O (nm) by exploiting the fact that both sites and query points are subsets of a two-dimensional pixel array. 4 2.1 Voronoi diagrams of pixel subsets A familiar approach (cf. <ref> [15] </ref>) to the construction of Voronoi diagrams is divide and conquer: (linearly) separate the sites into two subsets, recursively construct the Voronoi diagrams of the subsets, and "merge" the resulting diagrams into the Voronoi diagram of the full set.
Reference: [16] <author> I. Ragnemalm. </author> <title> Neighborhoods for distance transformations using ordered propagation. </title> <booktitle> Computer Vision, Graphics and Image Processing: Image Understanding, </booktitle> <volume> 56 </volume> <pages> 399-409, </pages> <year> 1992. </year>
Reference-contexts: Such transforms were first introduced by Rosenfeld and Pfaltz [18, 19] and have been the focus of an extensive literature (cf. <ref> [13, 16] </ref>). The most natural metric for computing distance in most applications is the Euclidean metric. <p> An alternative approach that does not lend itself as readily to parallel implementation, involves simulating a wavefront emanating from all feature pixels (cf. <ref> [16] </ref> and references therein). The idea here is to have certain pixels (those on the current wavefront) inform their neighbours so that the latter can update their distance transform values, and possibly join the wavefront. <p> Algorithms of this type differ in their strategies for updating the wavefront. In fact, the scan-based algorithms can be viewed as a kind of wavefront approach as well. The wavefront approach suffers from the same inherent discretization error discussed above. Despite this, Ragnemalm <ref> [16] </ref> claims that it is possible to simulate Yamada's error-free algorithm using an O (nm) time sequential wavefront algorithm. However, no proof of this assertion is provided (other than experimental "verification"). Yet another approach, again pioneered by Rosenfeld and Pfaltz [18], is based on the idea of dimensionality reduction.
Reference: [17] <author> A. Rosenfeld and A.C. Kak. </author> <title> Digital Picture Processing. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <note> second edition, </note> <year> 1978. </year>
Reference-contexts: that, at least in their explicit forms, both transforms require at least linear time for their computation. 1 Distance and nearest-neighbour transforms have for a considerable time been recognized as important sources and encodings of metric information associated with images in digital picture processing, pattern recognition, robotics and related applications <ref> [17, 13, 2, 1, 10, 6, 11] </ref>. Such transforms were first introduced by Rosenfeld and Pfaltz [18, 19] and have been the focus of an extensive literature (cf. [13, 16]). The most natural metric for computing distance in most applications is the Euclidean metric.
Reference: [18] <author> A. Rosenfeld and J. Pfaltz. </author> <title> Sequential operations in digital picture processing. </title> <journal> Journal of the ACM, </journal> <volume> 13 </volume> <pages> 471-494, </pages> <year> 1966. </year>
Reference-contexts: Such transforms were first introduced by Rosenfeld and Pfaltz <ref> [18, 19] </ref> and have been the focus of an extensive literature (cf. [13, 16]). The most natural metric for computing distance in most applications is the Euclidean metric. <p> Despite this, Ragnemalm [16] claims that it is possible to simulate Yamada's error-free algorithm using an O (nm) time sequential wavefront algorithm. However, no proof of this assertion is provided (other than experimental "verification"). Yet another approach, again pioneered by Rosenfeld and Pfaltz <ref> [18] </ref>, is based on the idea of dimensionality reduction.
Reference: [19] <author> A. Rosenfeld and J. Pfaltz. </author> <title> Distance functions on digital pictures. </title> <journal> Pattern Recognition, </journal> <volume> 1 </volume> <pages> 33-61, </pages> <year> 1968. </year> <month> 12 </month>
Reference-contexts: Such transforms were first introduced by Rosenfeld and Pfaltz <ref> [18, 19] </ref> and have been the focus of an extensive literature (cf. [13, 16]). The most natural metric for computing distance in most applications is the Euclidean metric.
Reference: [20] <author> M. G. </author> <title> Voronoi. Nouvelles applications des parametres continus a la theorie des formes quadratiques. </title> <journal> J. Reine Angew. Math., </journal> <volume> 134 </volume> <pages> 198-287, </pages> <year> 1908. </year>
Reference-contexts: The first algorithm, which is of primarily theoretical interest, constructs the complete Voronoi diagram. The second, more practical, algorithm constructs the Voronoi diagram where it intersects the horizontal lines passing through the image pixel centres. The Voronoi diagram <ref> [20, 9] </ref> of a set of sites S = fh 1 ; : : : ; h s g, denoted V S , consists of s disjoint Voronoi cells fC S h 1 ; : : : ; C S h s g, where C S h (or simply C h
Reference: [21] <author> H. Yamada. </author> <title> Complete Euclidean distance transformation by parallel operation. </title> <booktitle> In Proc. 7th Int. Conf. on Pattern Recognit., </booktitle> <pages> pages 69-71, </pages> <address> Montreal, Canada, </address> <year> 1984. </year>
Reference-contexts: Thus, to minimize cost, sequential algorithms typically use a constant (independent of the image size) sized neighbourhood and a constant number of iterations often structured to process pixels in some kind of scan order. Parallel implementations of this approach (cf. <ref> [21] </ref>) repeatedly update the transform value until it stabilizes (i.e., until a parallel round brings no change). In the worst case this may involve a number of iterations proportional to the image perimeter (O (maxfn; mg)), but this is offset by the fact that individual pixels are processed in parallel. <p> Danielsson also argues that errors of this magnitude are inevitable with algorithms of this type (due essentially to discontinuities arising from the discretization of the continuous nearest-neighbour transform). Yamada <ref> [21] </ref> shows that parallel implementations are not subject to the same inherent approximation errors. Yamada proves that with a suitably large (in fact, eight element) neighbourhood, one can exploit the difference between propagation distance and Euclidean distance to overcome the problems arising from discretization.
Reference: [22] <author> M. Yamashita and T. Ibaraki. </author> <title> Distances defined by neighborhood sequences. </title> <journal> Pattern Recognition, </journal> <volume> 19 </volume> <pages> 237-246, </pages> <year> 1986. </year> <month> 13 </month>
Reference-contexts: The most natural metric for computing distance in most applications is the Euclidean metric. However, the lack of efficient algorithms for computing the Euclidean distance transform has led many researchers to define and use other metrics (such as city-block, chessboard or chamfer <ref> [8, 22, 4] </ref>), or approximations to the exact Euclidean distance transform [7, 4, 5, 22]. While other metrics lend themselves to efficient algorithms, they do so at the expense of being dependent on the orientation of the coordinate system used for representing the image. <p> However, the lack of efficient algorithms for computing the Euclidean distance transform has led many researchers to define and use other metrics (such as city-block, chessboard or chamfer [8, 22, 4]), or approximations to the exact Euclidean distance transform <ref> [7, 4, 5, 22] </ref>. While other metrics lend themselves to efficient algorithms, they do so at the expense of being dependent on the orientation of the coordinate system used for representing the image.
References-found: 22

