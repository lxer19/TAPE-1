URL: http://www.isi.edu:80/people/johnh/PAPERS/Heidemann98f.ps.gz
Refering-URL: http://www.isi.edu:80/people/johnh/PAPERS/Heidemann98f.html
Root-URL: http://www.isi.edu
Title: Multi-way Rendezvous in the Web  
Author: John Heidemann Wenhui Zhao 
Date: December 4, 1998  
Affiliation: University of Southern California/Information Science Institute  
Abstract: Web Rendezvous is the meeting of information publisher and subscriber, allowing the subscriber to create and maintain a list of links (indices) to publishers' pages. Rendezvous is difficult because pages may move and unauthorized publishers may seek to add their pages to the index (spamming). Current rendezvous approaches are work-intensive or restricted to very limited domains. We provide a taxonomy of web rendezvous methods. We identify automated methods which allow a subscriber to maintain an index of many pages with only a fixed amount of effort. Our methods leverage existing web search engines to be robust to page movement, and use encryption to prevent index spamming. We have designed and implemented two different rendezvous methods; we summarize our experience using them, finding that we can securely track index changes in a few days with publisher support, and eventually even without publisher support. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Nikos Drakos Alberto Aimar, James Casey and etc. </author> <title> Weblinker a tool for managing WWW cross-references. </title> <journal> Computer Network and ISDN systems, </journal> 28(1&2):99-107, Dec 1995. 
Reference-contexts: As URN systems are developed and standardized, we expect them to provide stable names to web objects WebLinker is a similar scheme which uses Local Resource Names (LRNs) as the logical name of object within a site <ref> [1] </ref>. All references to the objects of the site are through the LRNs. When an object is accessed, the LRNs is resolved by a linker server residing on that site. LRNs provide logical name to objects in one site.
Reference: [2] <author> Keith Andrews, Frank Kappe, and Hermann Mau-rer. </author> <title> Serving information to the web with Hyper-G. </title> <booktitle> In Proceedings of the Third International World Wide Web Conference, </booktitle> <address> Darmstadt, Ger-many, </address> <month> April </month> <year> 1995. </year> <title> In Computer Networks and ISDN Systems, </title> <type> 27(1995). </type>
Reference-contexts: There is no extra work in construction of the name server in our Web Rendezvous model. The Hyper-G system from University of Technology, Graz, Austria has a superficially similar architecture to the World Wide Web: servers provide documents to client browser <ref> [2] </ref>. Unlike WWW client, Hyper-G clients talk to a single Hyper-G server for the entire ses sion. If information from remote server is needed, local server fetch the object and passes it to the client. Each Hyper-G server maintains its own document management system.
Reference: [3] <author> T. Berners-Lee, R. Fielding, and L. Masinter. </author> <title> Uniform resource identifiers (URI): Generic syntax. RFC 2396, Internet Request For Comments, </title> <month> August </month> <year> 1998. </year>
Reference-contexts: The Internet Engineering Task Force (IETF) has been working on the issue of devising a general naming scheme for Internet resources. They introduce a global-unique, location-independent naming scheme, Uniform Resource Names (URNs) <ref> [3] </ref>. URNs separate object identification from location with the goal of providing persistent logical names for objects.
Reference: [4] <author> CPAN. </author> <title> Comprehensive perl archive network. </title> <address> http://feenix.metronet.com/perl/CPAN.html. </address>
Reference-contexts: However when the subscriber moves, he has to find a way to notify all publishers. Finally, CGI programs are somewhat difficult to install and maintain in many environments. An example of the CGI approach can be seen in the Comprehensive Perl Archive Network (CPAN <ref> [4] </ref>). It employs passwords and thus linear subscriber work, but it is otherwise quite powerful. 3.2 Keyword Search Keyword search is the action of subscriber searching for some keywords to find the location of publishers. The keyword is chosen by the subscriber independently. Publishers are not involved in keyword search.
Reference: [5] <author> Roy T. Fielding. </author> <title> Maintining distributed hypertext infostructures: Welcome to MOMspider's web. </title> <booktitle> In Proceedings of the First International World Wide Web Conference, </booktitle> <address> Geneva, Switzerland, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: MOM-Spider uses robot to traverse all links in a web site <ref> [5] </ref>. Broken links are reported to the maintainer. The broken link detectors only detects broken links automatically. Fixing the broken links still need to be done manually. 6.2 Persistent Names There are a number of research groups investigating the issue of providing a Persistent Names for Internet resources.
Reference: [6] <author> Roy T. Fielding, E. James, Jr. Whitehead, Ken-neth M. Anderson, Gregory A. Bolcer, Peyman Oreizy, and Richard N. Taylor. </author> <title> Web-based development of complex information products. </title> <journal> Communications of the ACM, </journal> <volume> 41(8) </volume> <pages> 84-92, </pages> <month> August </month> <year> 1998. </year>
Reference-contexts: Without care, the quality of the index will quickly degrade as more and more links are broken. This is an example of the notification problem identified by Fielding <ref> [6] </ref>. This paper examines the problem of index creation and maintenance. We view this problem as arranging a rendezvous between information publishers (the creators of the pages pointed to by the index) and the subscriber (the index creator), as shown in Figure 1.
Reference: [7] <author> Armando Fox, Steven D. Gribble, Yatin Chawathe, Eric A. Brewer, and Paul Gau-thier. </author> <title> Cluster-based scalable network services. </title> <booktitle> In Proceedings of the 16th Symposium on Operating Systems Principles, </booktitle> <pages> pages 78-91, </pages> <address> St. Malo, France, </address> <month> October </month> <year> 1997. </year> <note> ACM. </note>
Reference-contexts: Finally, engines return inconsistent results because they are optimized for output to humans rather than other programs. Some search engines such as Inktomi's Hot-Bot intentionally return partial results to achieve high availability or load balance <ref> [7] </ref>. For most humans, 100 hits quickly are more valuable than 200 hits in minutes or the message "cannot process your request". Fortunately, secure rendezvous mechanisms can work around the later two problems.
Reference: [8] <author> John Heidemann. </author> <note> Www::search. http://www.isi.edu/lsam/tools /WWW SEARCH/index.html, </note> <month> October </month> <year> 1996. </year>
Reference-contexts: We have not implemented magic word search with public keys. 5 4 Implementation Our implementation consists of several programs for the publisher and subscriber and a library for interacting with search engines. Our implementation is in Perl with calls to PGP for encryption. We use the WWW::Search library <ref> [8] </ref> to interact with web search engines. WWW::Search provides a Perl API to querying web search engines. A common front-end drives searches, while separate back-ends interact with 24 different search engines (as of November 1998). 4.1 Keyword Rendezvous Our keyword-based rendezvous is provided by the program AutoSearch.
Reference: [9] <author> D. B. Ingham, S. J. Caughey, and M. C. Little. </author> <title> Fixing the broken-link problem: The W3Objects approach. </title> <booktitle> In Proceedings of the Fifth International World Wide Web Conference, </booktitle> <pages> pages 1255-1268, </pages> <address> Paris, France, </address> <month> May </month> <year> 1996. </year>
Reference-contexts: In W3Object Model, web resource are represented as W3Object which encapsulate internal state and well defined behavior <ref> [9] </ref>. Accessing W3Object is through the interface. W3Reference, a first-class referencing object, is used for addressing. W3Reference contains the location of an object. Referential integrity is guaranteed by forward referencing. An object is replaced with a forward reference at migration time|invocation can be redirected through the forward reference.
Reference: [10] <author> F. Kappe. </author> <title> A scalable architecture for maintaining referential integrity in distributed information system. </title> <type> Technical report, </type> <institution> Graz University of Technology, Austria, </institution> <year> 1995. </year> <month> ftp://ftp.iicm.tu-graz.ac.at/pub/papers/p-flood.pdf. </month>
Reference-contexts: The referential integrity between local resource is achieved by updating or deleting links to a resource when it is removed. Referential integrity for remote resources is maintained by propagating update information to remote servers using a flooding algorithm <ref> [10] </ref>. The update information contains deletion or migration of objects and creation or deletion of links. All Hyper-G server are involved in the remote server update mechanism since the information is broadcast to all servers. The network traffic is proportional to the number of servers.
Reference: [11] <author> Steve Lawrence and C. Lee Giles. </author> <title> Searching the world wide web. </title> <journal> Science, </journal> <volume> 280 </volume> <pages> 98-100, </pages> <month> 3 April </month> <year> 1998. </year>
Reference-contexts: With many pages in the web, engines cannot immediately fetch new pages to index, and even with page data they likely stage updates to the index database. Lawrence and Giles present several reasons search engines are slow to purge stale pages <ref> [11] </ref>. Finally, engines return inconsistent results because they are optimized for output to humans rather than other programs. Some search engines such as Inktomi's Hot-Bot intentionally return partial results to achieve high availability or load balance [7].
Reference: [12] <author> PURL. </author> <title> Persistent uinform resource locator. </title> <note> http://purl.oclc.org. 10 </note>
Reference-contexts: LRNs provide logical name to objects in one site. However if the site moves to a different server, the LRNs can not be resolved correctly. The site needs a URN as a logical name. Persistent Uniform Resource Locator (PURL) is another scheme to augment URLs <ref> [12] </ref>. Instead of pointing directly to the physical location of an Internet Resource, a PURL points to a intermediate resolution service. The resolution service return the actual URL associated with the PURL to the client. The client can then continue the Web transaction in normal fashion.
References-found: 12

