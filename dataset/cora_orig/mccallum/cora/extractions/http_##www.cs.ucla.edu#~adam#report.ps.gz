URL: http://www.cs.ucla.edu/~adam/report.ps.gz
Refering-URL: http://www.cs.ucla.edu/~adam/mash.html
Root-URL: http://www.cs.ucla.edu
Email: adam@cs.ucla.edu  lijun@cs.ucla.edu  tong@cs.ucla.edu  
Title: MASH: The Multicasting Archie Server Hierarchy  
Author: Adam Rosenstein Jun Li Si Yuan Tong 
Abstract: The archie[1] system is a replicated, centralized directory server for all Anonymous FTP sites in the Internet. This centralized approach has not scaled well. The march[2] system provides an alternate solution, using IP Multicast to distribute directory queries directly to FTP hosts. march suffers from highly redundant broadcast messages during expanding-disc search. We propose a solution to the problem of mul-ticast flooding during expanding-disc searches by utilizing an automatically-configured hierarchy of query servers. This system, dubbed MASH, confines the mul-ticast flooding primarily to those nodes at the frontier of each new search radius. We provide a mechanism and protocol for building a self-organizing, two-level hierarchy of MASH servers. We also provide an experimental implementation built on march[5]. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Emtage and P. Deutsch. "Archie: </author> <title> An electronic directory service for the Internet." </title> <booktitle> Proceedings of the Winter 1992 Usenix Conference, </booktitle> <pages> pages 93-110, </pages> <month> January, </month> <year> 1992. </year>
Reference-contexts: In Section 3 we describe the MASH approach and compare it to the related work. Section 4 describes the dynamic self-organizing group formation algorithm. In Section 5, we discuss our implementation of MASH. Finally, we conclude with a short, reflective summary. 2 Related Work 2.1 archie In 1992, archie <ref> [1] </ref> was created to provide an easy way to find where files are stored on the Internet. archie is a service which collects directory information from a large set of FTP servers and makes this information available to archie clients, via a query/response mechanism.
Reference: [2] <author> Kashima, Hiroaki, et. al. </author> <title> "Searching Internet Resources Using IP Multicast." </title> <address> INET '95, </address> <month> August, </month> <year> 1995. </year>
Reference-contexts: These servers would ideally be located at the actual sources of the directory information (e.g. one directory server at each anonymous FTP site). There is, at least, one such implementation, called march <ref> [2] </ref>. march is a multicasting distributed directory database system which relies on a single multicast address for all directory servers. It uses TTL scope-limiting to constrain the impact of individual queries. By iteratively expanding the TTL, a march client finds the closest (topographically speaking) FTP site containing the requested information.
Reference: [3] <author> Rovers, Perry. </author> <note> "Anonymous FTP Frequently Asked Questions List." Copyright 1993-1995, Perry Rovers. FTP Host: rtfm.mit.edu, Directory: /pub/usenet/news.answers/ftp-list/faq. </note>
Reference-contexts: While this interface is adequate for users who know which servers contain the sought-after information, it fails to address the problem of locating a particular file amongst the more than 2,500 anonymous FTP servers currently listed in the Anonymous FTP FAQ <ref> [3] </ref>. This paper presents a new approach allowing a user to search the directory information of all the anonymous FTP servers without requiring a server to centrally collect the information before-hand. <p> Because each of the 2,500+ FTP sites produces complete directory listings ranging from 2 kilobytes to 25 megabytes in size <ref> [3] </ref>, archie servers are heavyweight database servers. The problems with archie's approach are: * The directory information is disbursed but archie is centralized. Thus, it is costly for a central archie server to frequently probe so many FTP sites, or to do so frequently enough to ensure consistently up-to-date information. <p> Consequentially, the information in archie servers is frequently out-of-date, and incomplete. * Because information must be centrally collected, there can only be a few archie servers for a feasible implementation (public archie servers currently number 38, worldwide <ref> [3] </ref>). Therefore, the query/response system has a bottleneck at the server. 2.2 Multicasting IP Multicast, first proposed by Deering, et al. [4] is a mechanism by which packets may be efficiently routed from one source to many destinations.
Reference: [4] <author> Deering, S. </author> <title> "Host Extensions for IP Multicast-ing." Request for Comments 1112, </title> <month> August </month> <year> 1989. </year>
Reference-contexts: Therefore, the query/response system has a bottleneck at the server. 2.2 Multicasting IP Multicast, first proposed by Deering, et al. <ref> [4] </ref> is a mechanism by which packets may be efficiently routed from one source to many destinations. Other than the efficiency with which queries may be distributed to many destinations simultaneously, there are two other advantages afforded by multicast for this application: 1.
Reference: [5] <author> Rosenstein, Li, and Tong. </author> <title> "The Multicasting Archie Server Hierarchy." Project Home-Page. </title> <address> URL: http://www.cs.ucla.edu/~adam/mash.html. [6] "ns-2: </address> <institution> The LBNL Network Simulator," Lawrence Berkeley National Laboratory, </institution> <note> URL: http://www-nrg.ee.lbl.gov/ns/#version2 </note>
Reference-contexts: Because database queries are routed to parents before they reach children, having the largest, most prominent FTP sites become MASH parents makes sense. 5 MASH | An Implementation The MASH prototype <ref> [5] </ref> was built directly on top of march, using code from the latter to deal with client queries, establish multicast and unicast communications, and filter duplicated client queries. The client software itself is almost completely unchanged from march. <p> When complete, the ns-2 simulation results will be made available on the web <ref> [5] </ref>. 6.2 Further Observations on the MASH Paradigm MASH uses a hierarchical approach with group self-organizing capability to implement the recovery of distributed directory information. We recognize that this paradigm can be extended to recovery of other similar, distributed information.
References-found: 5

