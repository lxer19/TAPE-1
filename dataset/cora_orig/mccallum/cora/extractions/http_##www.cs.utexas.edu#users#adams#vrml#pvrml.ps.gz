URL: http://www.cs.utexas.edu/users/adams/vrml/pvrml.ps.gz
Refering-URL: http://www.cs.utexas.edu/users/adams/vrml/index.html
Root-URL: http://www.cs.utexas.edu
Title: Progressive VRML  
Author: Isaac Sheldon, Adam Seligman, Damon Hastings 
Date: December 9, 1996  
Abstract-found: 0
Intro-found: 1
Reference: [Cam] <institution> Emilio Camahort. Current research at the University of Texas at Austin, Computer Sciences Department. </institution>
Reference-contexts: A naive example of radiometric modeling would be an object projected onto its bounding box. Affine transformations of the images can be generated for different views <ref> [Cam] </ref>. To employ these different approaches in a coherent manner, we must have some metric for comparing the quality of their representations for a given data cost. A radiometric error measure of the rendered object can be used to determine the appropriate generalization technique. <p> A radiometric error measure of the rendered object can be used to determine the appropriate generalization technique. Work is currently being done on such radiometric error measures here at UT-Austin <ref> [Cam] </ref>. A binary file format and file-level compression may be also employed on top of our rearranged scene without modification to those approaches.
Reference: [CDP95] <author> Frederic Cazals, George Drettakis, and Claude Puech. </author> <title> Filtering, clustering and hierarchy construction: a new solution for ray-tracing complex scenes. </title> <booktitle> In Eurographics '95, </booktitle> <volume> volume 14, </volume> <year> 1995. </year>
Reference-contexts: This document identifies one of the key shortcomings of VRML, the lack of a guarantee that a VRML scene is progressive. We propose a solution that transforms an arbitrary VRML scene into one that is progressive. We employ a technique known as hierarchical uniform grids <ref> [CDP95] </ref> (HUG) to achieve this goal. The progressive structure generated by this algorithm reflects the semantics of objects within the scene, which allows for generalization and refinement. Our approach adds a processing step at scene creation time, but does not require any VRML client modification.
Reference: [Hop96] <author> Hughes Hoppe. </author> <title> Progressive meshes. </title> <booktitle> In Proceedings of SIGGRAPH'96 (New Orleans, </booktitle> <address> LA, </address> <month> August 4-9, </month> <year> 1996). </year> <booktitle> In Computer Graphics Proceedings, Annual Series. ACM SIGGRAPH, </booktitle> <year> 1996. </year>
Reference-contexts: Hoppes' Progressive Mesh paper is an excellent approach to this subject. Hoppes' mesh representation requires no additional storage space over a traditional, non-progressive representation, and prefixes of the data yield an excellent visual approximation of the final shape <ref> [Hop96] </ref>. Another approach to object generalization is the radiometric approach. A radiometric model of an object stores radiometric information-images-rather than geometric information. Image-based rendering is a hot area of graphics research at the present time.
Reference: [PM93] <author> William B. Pennebaker and Joan L. Mitchell. </author> <title> JPEG Still Image Data Compression Standard. </title> <publisher> Van Norstrand Reinhold, </publisher> <year> 1993. </year>
Reference-contexts: Progressive JPEG bases the information transfer on the discrete cosine transform (DCT) encoding of the image. The DCT encoding enables the transfer of the most important visual information first, and then adds finer detail <ref> [PM93] </ref>. The progressive VRML files we create form an excellent basis for scene refinement. Recall that refinement is the ability for a VRML viewer to request higher-quality representations of objects. Even a good progressive VRML scene will be slow to display if objects contain a lot of data.
Reference: [Tau96] <author> Gabriel Taubin. </author> <title> The ibm/apple/paragraph vrml 2.0 compressed binary format, </title> <type> draft 2. </type> <note> http://www.rs6000.ibm.com/vrml/binary/, October 1996. </note>
Reference-contexts: Several techniques are available to speed VRML file transmission. An obvious approach is compression. This technique, also applicable to HTML pages and other data formats, requires only minor client and server side modifications. Another approach is a binary file format, using opcodes instead of ASCII node names <ref> [Tau96] </ref>. File-level compression might then be applied to the binary file. We observe that VRML files with large amounts of numerical vertex data (IndexedFaceSet nodes) may not achieve much useful compression over the conversion to binary storage.
Reference: [VRM96] <institution> The virtual reality modeling language specification, </institution> <note> version 2.0. http://vag.vrml.org/VRML2.0/FINAL/spec/index.html, August 1996. 6 </note>
Reference-contexts: VRML is essentially the ASCII scene-description format of OI. The syntax of VRML 2.0 has diverged from the syntax of VRML 1.0 and OI, but the overall scope still ties closely to a subset of OI. Our treatment of VRML is based on the VRML 2.0 specification <ref> [VRM96] </ref>. 3 Progression and Refinement for VRML Bandwidth constraints on the Internet motivate our research. Even visually simple VRML scenes may contain large amounts of data, because the size of a VRML file is a function of geometric complexity, independent of scale.
References-found: 6

