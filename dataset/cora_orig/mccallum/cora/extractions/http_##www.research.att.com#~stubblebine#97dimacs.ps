URL: http://www.research.att.com/~stubblebine/97dimacs.ps
Refering-URL: http://www.research.att.com/~stubblebine/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: On Searching for Known and Chosen Cipher Pairs Using the NRL Protocol Analyzer  
Author: Stuart G. Stubblebine Catherine A. Meadows 
Affiliation: AT&T Labs-Research  Naval Research Laboratory  
Abstract: Formal methods have been successfully applied to exceedingly abstract system specifications to verify high level security properties such as authentication, key exchange, and fail-safe revocation. Furthermore, considerable research exists on evaluating particular ciphers and secure hash functions used to implement high level security properties. However, verifying that less abstract system specifications satisfy low level security properties has been largely impractical. This is evidenced by innumerable system vulnerabilities where high level properties are not attained due to failed assumptions of low level properties. This paper presents ongoing work on investigating known and chosen ciphertext pairs using the NRL Protocol Analyzer. We give a formal characterization of known and chosen pairs, and map it to the NRL Protocol Analyzer model. We also describe the use of the Analyzer to rediscover attacks on an early version of the ESP protocol, and show how our experience in using it has led us to refine our model. This was the first use of the Analyzer to model protocols at such a low level of abstraction.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Atkinson. </author> <title> IP encapsulating security payload (ESP). Request for Comments (Proposed Standard) RFC 1827, </title> <institution> Internet Engineering Task Force, </institution> <month> August </month> <year> 1995. </year>
Reference-contexts: discovery of these spurious attacks helped us to identify an error both in our specification and in our requirements. 3.4 Analysis of the IP Encapsulating Security Protocol In this section we describe the current state of our analysis of an early version of the IP Encapsulating Security Protocol or ESP <ref> [1, 8] </ref>. ESP is the protocol of the Internet security architecture for securing IP [2]. It describes formats and transforms for encryption and decryption of data. <p> It describes formats and transforms for encryption and decryption of data. We selected ESP because its use of CBC mode caused Bellovin to notice a number of possible attacks when it was used under certain system configurations <ref> [1, 8] </ref>. As we mentioned in the last section, our specification of the protocol has an error in it.
Reference: [2] <author> R. Atkinson. </author> <title> Security architecture for the internet protocol. Request for Comments (Proposed Standard) RFC 1825, </title> <institution> Internet Engineering Task Force, </institution> <month> August </month> <year> 1995. </year>
Reference-contexts: ESP is the protocol of the Internet security architecture for securing IP <ref> [2] </ref>. It describes formats and transforms for encryption and decryption of data. We selected ESP because its use of CBC mode caused Bellovin to notice a number of possible attacks when it was used under certain system configurations [1, 8].
Reference: [3] <author> S. M. Bellovin, </author> <title> Problem Areas for the IP Security Protocols, </title> <booktitle> Proceedings of the Sixth Usenix UNIX Security Symposium, </booktitle> <address> San Jose, CA, </address> <month> July, </month> <year> 1996. </year>
Reference-contexts: The dishonest user could then truncate the encrypted message at H1, and pass it off as a message with header H1, using the last block of the encrypted H2 as the IV. Bellovin describes a similar attack in <ref> [3] </ref>. b. If the intruder resides at host A, she could learn a message M1 intended for another user U at the same host A as follows. First she would need to find out the host B originating the message. <p> The host would then decrypt the entire message, and return the decrypted M1' to the intruder. Part of M1' could be garbled, but thanks to the self-healing properties of cipher block chaining, the remainder would be readable. Bellovin describes this attack in <ref> [3] </ref>. 3.4.2 The Specification In order to see whether the Analyzer could find attacks like this, we modeled a protocol along the line of Bellovin's scenario. In order to make the analysis tractable, we assumed packets were only four blocks long. We modeled two types of headers. <p> B decrypts the apparent first part of the message, and accepts that as the header. 5. B decrypts the apparent rest of the message, and accepts that as the message from E. Bellovin describes a similar attack in <ref> [3] </ref>. In his attack a a legitimate message M2 is sent from U1 to U2. The intruder constructs a message M1, and then cuts off the portions after the headers on M1 and M2. The last portion of M1 is appended to the first part of M2.
Reference: [4] <author> C. Meadows, </author> <title> A System for the Specification and Verification of Key Management Protocols, </title> <booktitle> Proceedings of the 1991 IEEE Computer Society Symposium in Research in Security and Privacy, </booktitle> <month> May </month> <year> 1991. </year>
Reference-contexts: In some cases the flaws had not been discovered before. Examples of protocols the Analyzer has been used to examine are the Simmons Selective Broadcast Protocol [5], the Burns-Mitchell Ticket Granting Protocol <ref> [4] </ref>, the Needham Schroeder public key protocol [7]. A description of the Analyzer is given in [6]. Most of the protocols to which the Analyzer has been applied are specified at a higher degree of abstraction than the protocols we will be looking at in this paper.
Reference: [5] <author> C. Meadows, </author> <title> Applying Formal Methods to the Analysis of a Key Management Protocol, </title> <journal> The Journal of Computer Security, </journal> <volume> 1992:1,1, </volume> <month> Jan, </month> <year> 1992. </year>
Reference-contexts: The Analyzer has been applied to a number of different cryptographic protocols, and has found flaws in several. In some cases the flaws had not been discovered before. Examples of protocols the Analyzer has been used to examine are the Simmons Selective Broadcast Protocol <ref> [5] </ref>, the Burns-Mitchell Ticket Granting Protocol [4], the Needham Schroeder public key protocol [7]. A description of the Analyzer is given in [6].
Reference: [6] <author> C. Meadows, </author> <title> The NRL Protocol Analyzer: An Overview, </title> <journal> J. Logic Programming, 1996:19, </journal> <volume> 20 </volume> <pages> 1-679, </pages> <publisher> Elsevier Science, </publisher> <address> New York, NY, </address> <year> 1996. </year>
Reference-contexts: In this paper we give a formal characterization of chosen and known text. We also give a theory and method for system specification and analysis for chosen and known text. We present some automated techniques using and available tool, the NRL Protocol Analyzer <ref> [6] </ref>. We discuss the relationship between these techniques and the theory. Finally, we give some examples using our technique to re-discover known attacks. fl AT&T Labs-Research, Rm B235, 180 Park Ave., Florham Park, NJ 07974, USA. Email: stubblebine@research.att.com y Naval Research Laboratory, Code 5543, Washington DC 20375, USA. <p> In some cases the flaws had not been discovered before. Examples of protocols the Analyzer has been used to examine are the Simmons Selective Broadcast Protocol [5], the Burns-Mitchell Ticket Granting Protocol [4], the Needham Schroeder public key protocol [7]. A description of the Analyzer is given in <ref> [6] </ref>. Most of the protocols to which the Analyzer has been applied are specified at a higher degree of abstraction than the protocols we will be looking at in this paper.
Reference: [7] <author> Catherine Meadows, </author> <title> Analyzing the Needham-Schroeder Public-Key Protocol: A Comparison of Two Approaches, Computer Security - ESORICS 96, </title> <publisher> Springer-Verlag, </publisher> <month> September </month> <year> 1996, </year> <pages> pp. 365-364. </pages>
Reference-contexts: In some cases the flaws had not been discovered before. Examples of protocols the Analyzer has been used to examine are the Simmons Selective Broadcast Protocol [5], the Burns-Mitchell Ticket Granting Protocol [4], the Needham Schroeder public key protocol <ref> [7] </ref>. A description of the Analyzer is given in [6]. Most of the protocols to which the Analyzer has been applied are specified at a higher degree of abstraction than the protocols we will be looking at in this paper.
Reference: [8] <author> P. Metzger, P. Karn, and W. Simpson. </author> <title> The ESP DES-CBC transform. Request for Comments (Proposed Standard) RFC 1829, </title> <institution> Internet Engineering Task Force, </institution> <month> August </month> <year> 1995. </year>
Reference-contexts: discovery of these spurious attacks helped us to identify an error both in our specification and in our requirements. 3.4 Analysis of the IP Encapsulating Security Protocol In this section we describe the current state of our analysis of an early version of the IP Encapsulating Security Protocol or ESP <ref> [1, 8] </ref>. ESP is the protocol of the Internet security architecture for securing IP [2]. It describes formats and transforms for encryption and decryption of data. <p> It describes formats and transforms for encryption and decryption of data. We selected ESP because its use of CBC mode caused Bellovin to notice a number of possible attacks when it was used under certain system configurations <ref> [1, 8] </ref>. As we mentioned in the last section, our specification of the protocol has an error in it.
Reference: [9] <author> S. Stubblebine and V. Gligor, </author> <title> Protocol Design for Integrity Protection, </title> <booktitle> IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <address> Oakland, CA, </address> <month> May, </month> <year> 1993, </year> <pages> pp. 41-53. </pages>
Reference-contexts: This is mainly because the degree of abstraction at which the problem occurs is at a somewhat lower level than that usually handled by most of the existing applications of formal methods of cryptographic protocols. However, as the work of Stubblebine and Gligor <ref> [9, 10] </ref> has shown us, it is possible to apply formal techniques even at the level at which splicing and message decomposition occur and obtain meaningful results. Analysis of chosen- and known- text is difficult since analysis is tedious and complex.
Reference: [10] <author> S. Stubblebine and V. Gligor, </author> <title> On Message Integrity in Cryptographic Protocols, </title> <booktitle> IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <address> Oakland, CA, </address> <month> May, </month> <year> 1992, </year> <pages> pp. 85-104. </pages>
Reference-contexts: This is mainly because the degree of abstraction at which the problem occurs is at a somewhat lower level than that usually handled by most of the existing applications of formal methods of cryptographic protocols. However, as the work of Stubblebine and Gligor <ref> [9, 10] </ref> has shown us, it is possible to apply formal techniques even at the level at which splicing and message decomposition occur and obtain meaningful results. Analysis of chosen- and known- text is difficult since analysis is tedious and complex.
Reference: [11] <author> V. L. Voydock and S. T. Kent, </author> <title> Security Mechanisms In High- Level Network Protocols, </title> <journal> Computing Surveys, </journal> <volume> vol. 15, no. 2, </volume> <month> June </month> <year> 1983. </year> <month> 9 </month>
Reference-contexts: The problem is compounded when the same key is used for different protocols. Guidance on how to avoid chosen- and known- text attacks has been in the literature for many years <ref> [11] </ref>. However, attacks based on chosen- and known- text continue to be a problem even in security protocols designed and reviewed by teams of security experts.
References-found: 11

