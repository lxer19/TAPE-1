URL: http://www.cs.dartmouth.edu/~beej/research/papers/per_ns_to_ted.ps
Refering-URL: http://www.cs.dartmouth.edu/~beej/research/pubs.html
Root-URL: http://www.cs.dartmouth.edu
Email: fbeej,nicolg@cs.dartmouth.edu  
Title: Transformation of ns TCP Models to TeD  
Author: Brian J. Premore David M. Nicol 
Address: College, Hanover, NH 03755  
Affiliation: Department of Computer Science Dartmouth  
Abstract: This paper considers problems that arise when transforming TCP models developed using the ns simulator, to the TeD meta-language. The raison d'^etre for this project is to evaluate the potential of TeD as the target of an automated simulation model transformation system, so as to exploit the considerable existing modeling work that has already been conducted using ns. By transforming ns models to TeD we hope to provide high performance parallel simulation to detailed and accurate network models. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P.J. Ashenden. </author> <title> The Designer's Guide to VHDL. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Fransico, CA, </address> <year> 1996. </year>
Reference-contexts: These channels are mapped to define the (static) network topology. The object-oriented structure of TeD also allows for entities to contain components which are themselves entities. For example, node entities might have an array of agent sub-entities which model TCP specifics. TeD follows the VHDL <ref> [1] </ref> language in that for each entity, at least one architecture must be defined which specifies that entity's behavioral model. The architecture defines the state of the entity (variables to be used during the simulation), and its behavior (which includes how it will respond to events that it receives).
Reference: [2] <author> A.L. Poplawski and D.M. Nicol. Nops: </author> <title> A conservative process-oriented simulator for TeD. </title> <booktitle> In Proceedings of the 1998 Workshop on Parallel and Distributed Simulation. </booktitle> <publisher> IEEE Press, </publisher> <month> June </month> <year> 1998. </year> <note> to appear. </note>
Reference-contexts: To allow this, we are developing Nops (pronounced "No-ops"), a fully process-oriented, conservatively parallel simulator as a target for a relaxed version of TeD <ref> [2] </ref>. Early experiences with Nops indicate that on large models it can provide a high degree of performance, and is capable of supporting the added functionality we require.
Reference: [3] <author> B.J. Premore, D.M. Nicol, and X. Liu. </author> <title> A critique of the telecommunications description language. </title> <type> Technical Report PCS-TR96-299, </type> <institution> Dartmouth College, </institution> <year> 1996. </year>
Reference-contexts: Nevertheless, the difficulties encountered mapping ns to TeD show us that while TeD can be suitable for developing new models (as evidenced by the other papers in this issue), its limitations make impractical a number of ways we'd like to use it <ref> [3] </ref>. Model transformation is one such; support for direct execution of protocol code is another. Such cases are characterized by the need to accept as given some computational model, and to support the direct expression of that model in the TeD syntax. At present TeD's restrictions confound such support.
References-found: 3

