URL: ftp://ftp.cse.cuhk.edu.hk/pub/techreports/96/tr-96-11.ps.gz
Refering-URL: ftp://ftp.cs.cuhk.hk/pub/techreports/README.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: E-mail:lcai@cs.cuhk.edu.hk  
Title: On Spanning 2-Trees in a Graph  
Author: Leizhen Cai 
Keyword: Key words: Graph theory and algorithm, locally-connected spanning tree, spanning k-tree, spanning tree, tree 2-spanner.  
Note: This work was partially supported by a Direct Grant for Research from the  and an Earmarked Research Grant from the Research Grants Council  
Date: August 21, 1996  
Address: Shatin, New Territories, Hong Kong  
Affiliation: Department of Computer Science and Engineering The Chinese University of Hong Kong  Chinese University of Hong Kong  of Hong Kong.  
Abstract: A k-tree is either a complete graph on k vertices or a graph T that contains a vertex whose neighbourhood in T induces a complete graph on k vertices and whose removal results in a k-tree. A subgraph of a graph is a spanning k-tree if it is a k-tree and contains every vertex of the graph. This paper is concerned with spanning 2-trees in a graph. It is shown that spanning 2-trees have close connections with two special types of spanning trees: locally-connected spanning trees (A locally-connected spanning tree of a graph G is a spanning tree such that for every vertex v of T the neighbourhood of v in T induces a connected subgraph in G) and tree 2-spanners (A tree 2-spanner of a graph G is a spanning tree such that for every edge of G not in T the distance in T between the two ends of the edge is two). An approximation algorithm is presented for finding a minimum-weight spanning 2-tree in a weighted complete graph, whose asymptotic performance ratio is at most 2 when edge weights satisfy the triangle inequality, and at most (3 + 4 3)=6 1:655 when the graph is a complete Euclidean graph on a set of points in the plane. It is also shown that for any two fixed integers k &gt; k 0 1, it is NP-complete to determine, given a graph G and a spanning k 0 -tree T of G, whether G has a spanning k-tree that contains T . p
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M.W. Bern. </author> <title> Network design problems: Steiner trees and spanning k-trees. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <year> 1987. </year>
Reference-contexts: Unlike graphs containing spanning trees, graphs that contain spanning k-trees, k 2, do not have "good" characterizations. In fact, Bern <ref> [1] </ref> showed that, for any fixed integer k 2, it is NP-complete to determine whether a given graph contains a spanning k-tree. Later, Cai and Maffray [5] strengthened his result by showing that the problem remains NP-complete for degree-bounded graphs, split graphs, and planar graphs (for k = 2). <p> It is well known that a minimum spanning tree in a weighted graph can be found efficiently [8, 10]. On the other hand, it is NP-hard to find a minimum spanning 2-tree, even for weighted complete graphs <ref> [1] </ref> and for weighted plane triangulations [5]. We now consider approximation algorithms for the minimum Spanning 2-Trees 8 spanning 2-tree problem. Here we are concerned with finding a spanning 2-tree in a weighted complete graph G whose weight is close to the weight of a minimum spanning 2-tree. <p> Since G can be constructed in polynomial time, we would then have a polynomial-time algorithm to determine whether a graph contains a spanning 2-tree, a contradiction to the assumption that P 6= N P since the spanning 2-tree problem is NP-complete <ref> [1] </ref>. Spanning 2-Trees 9 In spite of the negative result in Theorem 1.3, the proposed algorithm performs well for complete graphs possessing certain properties. <p> Furthermore, while the recognition of the last family is NP-complete <ref> [1, 5] </ref>, the first family can be recognized in linear time [3, 4]. 2.
Reference: [2] <author> J.A. Bondy and U.S.R. Murty. </author> <title> Graph Theory with Applications. </title> <publisher> North-Holland, </publisher> <address> New York, </address> <year> 1976. </year>
Reference-contexts: We also propose some open problems (x6). Graphs in this paper are finite undirected simple graphs. We use the notation and terminology of Bondy and Murty <ref> [2] </ref> for graph theory and of Garey and Johnson [9] for complexity. In particular, V (G) and E (G), respectively, denote the vertex and edge sets of a graph G. The neighbourhood of a vertex v in G is denoted by N G (v).
Reference: [3] <author> L. Cai. </author> <title> Tree Spanners: Spanning Trees that Approximate Distances. </title> <type> Ph.D. dissertation (Technical Report 260/92), </type> <institution> Department of Computer Science, University of Toronto, Canada, </institution> <year> 1992. </year>
Reference-contexts: Furthermore, while the recognition of the last family is NP-complete [1, 5], the first family can be recognized in linear time <ref> [3, 4] </ref>. 2. Does every plane triangulation contain a spanning 2-tree? It is easy to see that every hamiltonian plane triangulation contains a spanning 2-tree, which consists of a Hamilton cycle and all edges that lie in the interior region of the Hamilton cycle.
Reference: [4] <author> L. Cai and D.G. Corneil. </author> <title> Tree spanners. </title> <journal> SIAM J. Discrete Math., </journal> <volume> 8(3) </volume> <pages> 359-387, </pages> <year> 1995. </year>
Reference-contexts: Therefore one of u; v; w has degree two. If w is of degree two, then fu; vg is a 2-cut of G 0 since jV (G 0 )j 5. By Lemma 4.1 in <ref> [4] </ref> (Let G be a 2-connected graph, and let T be an arbitrary tree 2-spanner of G. Then for every 2-cut fu; vg of G, uv 2 E (T ).), uv belongs to T 0 , a contradiction. Therefore one of u and v must be of degree two. <p> Furthermore, while the recognition of the last family is NP-complete [1, 5], the first family can be recognized in linear time <ref> [3, 4] </ref>. 2. Does every plane triangulation contain a spanning 2-tree? It is easy to see that every hamiltonian plane triangulation contains a spanning 2-tree, which consists of a Hamilton cycle and all edges that lie in the interior region of the Hamilton cycle.
Reference: [5] <author> L. Cai and F. Maffray. </author> <title> On the SPANNING k-TREE problem. </title> <journal> Disc. Appl. Math., </journal> <volume> 44 </volume> <pages> 139-156, </pages> <year> 1993. </year> <note> Spanning 2-Trees 16 </note>
Reference-contexts: Unlike graphs containing spanning trees, graphs that contain spanning k-trees, k 2, do not have "good" characterizations. In fact, Bern [1] showed that, for any fixed integer k 2, it is NP-complete to determine whether a given graph contains a spanning k-tree. Later, Cai and Maffray <ref> [5] </ref> strengthened his result by showing that the problem remains NP-complete for degree-bounded graphs, split graphs, and planar graphs (for k = 2). On the other hand, they provided efficient algorithms for finding spanning k-trees in interval graphs and split-comparability graphs. In this paper, we focus on spanning 2-trees. <p> It is well known that a minimum spanning tree in a weighted graph can be found efficiently [8, 10]. On the other hand, it is NP-hard to find a minimum spanning 2-tree, even for weighted complete graphs [1] and for weighted plane triangulations <ref> [5] </ref>. We now consider approximation algorithms for the minimum Spanning 2-Trees 8 spanning 2-tree problem. Here we are concerned with finding a spanning 2-tree in a weighted complete graph G whose weight is close to the weight of a minimum spanning 2-tree. <p> Thus S 00 = S fl + K for some spanning subgraph S fl of G. It follows from a result of Cai and Maffray (Lemma 2.3 in <ref> [5] </ref>: G contains a spanning k-tree iff G + K i contains a spanning (k + i)-tree.) that S fl is a spanning 2-tree of G. Since T is a spanning subgraph of G that is contained in S 00 , T is contained in S fl . <p> Furthermore, while the recognition of the last family is NP-complete <ref> [1, 5] </ref>, the first family can be recognized in linear time [3, 4]. 2.
Reference: [6] <author> D.Z. Du and F.K. Hwang. </author> <title> A proof of the Gilbert-Pollak conjecture on the Steiner ratio. </title> <journal> Algorithmica, </journal> <volume> 7 </volume> <pages> 121-135, </pages> <year> 1992. </year>
Reference-contexts: Because T fl v is a Steiner tree for the set of points corresponding to N T (v), we have w (T v ) p w (T fl by the Steiner ratio <ref> [6] </ref>. Let I (T ) denote the set of internal vertices of T .
Reference: [7] <author> A.M. Farley. </author> <title> Networks immune to isolated failures. </title> <journal> Networks, </journal> <volume> 11 </volume> <pages> 255-268, </pages> <year> 1981. </year>
Reference-contexts: For instance, the existence of a spanning 2-tree in a communication network is crucial to the reliability of the network when isolated failures of sites and lines occur; in fact, it guarantees that such failures will not affect the communication among operative sites <ref> [7] </ref>. Unlike graphs containing spanning trees, graphs that contain spanning k-trees, k 2, do not have "good" characterizations. In fact, Bern [1] showed that, for any fixed integer k 2, it is NP-complete to determine whether a given graph contains a spanning k-tree. <p> Let I (T ) be the set of internal vertices of T . For each internal vertex v of T , let T v be the minimum spanning tree of G [N T (v)] constructed by the algorithm. We use an algorithm of Farley <ref> [7] </ref> to construct another spanning 2-tree S 0 of G and use w (S 0 ) to provide an upper bound for w (S). Arbitrarily choose a vertex r of T , and make T into a rooted tree with root r.
Reference: [8] <author> H.N. Gabow, Z. Galil, T.H. Spencer, and R.E. Tarjan. </author> <title> Efficient algorithms for finding minimum spanning trees in undirected and directed graphs. </title> <journal> Combinatorica, </journal> <volume> 6 </volume> (2):109-122, 1986. 
Reference-contexts: It is well known that a minimum spanning tree in a weighted graph can be found efficiently <ref> [8, 10] </ref>. On the other hand, it is NP-hard to find a minimum spanning 2-tree, even for weighted complete graphs [1] and for weighted plane triangulations [5]. We now consider approximation algorithms for the minimum Spanning 2-Trees 8 spanning 2-tree problem.
Reference: [9] <author> M.R. Garey and D.S. Johnson. </author> <title> Computers and Intractability : A Guide to the Theory of NP-completeness. W.H. </title> <publisher> Freeman, </publisher> <address> San Fransisco, </address> <year> 1979. </year>
Reference-contexts: We also propose some open problems (x6). Graphs in this paper are finite undirected simple graphs. We use the notation and terminology of Bondy and Murty [2] for graph theory and of Garey and Johnson <ref> [9] </ref> for complexity. In particular, V (G) and E (G), respectively, denote the vertex and edge sets of a graph G. The neighbourhood of a vertex v in G is denoted by N G (v). <p> The above construction allows us to force an edge e to appear in every spanning 2-tree of a graph. Hereafter, we will refer to the above construction as "to force an edge e", and the new vertex f (e) as a forcing vertex. We now transform 3SAT ([LO2] in <ref> [9] </ref>) to the problem. Recall that an instance (U; C) of 3SAT consists of a set U of n distinct variables and a collection C of m clauses over U where each clause contains exactly three distinct literals over U . Let (U; C) be an arbitrary instance of 3SAT.
Reference: [10] <author> R.E. Tarjan. </author> <title> Data Structures and Network Algorithms. </title> <publisher> SIAM, </publisher> <address> Philadel-phia, </address> <year> 1983. </year>
Reference-contexts: An excellent expose on how to utilize various spanning trees to obtain efficient algorithms can be found in a monograph by Tarjan <ref> [10] </ref>. As a generalization of a tree, a k-tree is defined recursively to be either a complete graph on k vertices or a graph T that contains a vertex whose neigh-bourhood in T induces a complete graph on k vertices and whose removal results in a k-tree. <p> It is well known that a minimum spanning tree in a weighted graph can be found efficiently <ref> [8, 10] </ref>. On the other hand, it is NP-hard to find a minimum spanning 2-tree, even for weighted complete graphs [1] and for weighted plane triangulations [5]. We now consider approximation algorithms for the minimum Spanning 2-Trees 8 spanning 2-tree problem. <p> Furthermore, we can implement the algorithm to run in O (jV (G)j 3 ) time by using Prim's algorithm <ref> [10] </ref>. Of course, S is normally not a minimum spanning 2-tree.
References-found: 10

