URL: http://www.isi.edu:80/people/johnh/PAPERS/Huang98b.ps.gz
Refering-URL: http://www.isi.edu:80/people/johnh/PAPERS/Huang98b.html
Root-URL: http://www.isi.edu
Title: Large-scale Simulations: Selective Abstraction Approach to the Study of Multicast Protocols  
Author: Polly Huang, Deborah Estrin, John Heidemann 
Keyword: Abstraction Techniques, Packet Network Simulation, Simulation Scalability, Multicast Simulation, Protocol Evaluation  
Address: 4676 Admiralty Way, Suite 1001 Marina del Rey, CA 90291  
Affiliation: USC/Information Science Institute University of Southern California  
Note: Enabling  
Email: -huang, estrin, johnh-@isi.edu  
Phone: Phone: (310)822-1511 ext. -222, 253, 708 Fax: (310)823-6714  
Abstract: USC-CS Technical Report 98-667, January 1998 Abstract Due to the complexity and scale of the current Internet, large-scale simulations are an increasingly important tool to evaluate network protocol design. Parallel and distributed simulation is one appropriate approach to the simulation scalability problem, but it can require expensive hardware and have high overhead. In this study, we investigate a complimentary solution to large-scale simulation - simulation abstraction. Just as a custom simulator includes only details necessary for the task at hand, we show how a general simulator can support configurable levels of detail for different simulations. We develop two abstraction techniques, centralized computation and abstract packet distribution, to abstract network and transport layer protocols. We demonstrate these techniques in multicast simulations and derives centralized multicast and abstract multicast distribution (session multicast). We show that our abstraction techniques each help to gain one order of magnitude in performance improvement (from tens to hundreds to thousands of nodes). Although abstraction simulations are not identical to more detailed simulations, we show that in many cases these differences are small. We show that these differences result in minimal changes in the conclusions drawn from simulations in reliable multicast simulations. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Roger McHaney, </author> <title> Computer Simulation A Practical Perspective, </title> <publisher> Academic Press Inc., </publisher> <year> 1991 </year>
Reference: 2. <author> Bruno R. Preiss, Ian D. MacIntyre, and Wayne M. Loucks, </author> <title> On the Tradeoff between Time and Space in Optimistic Parallel Discrete-Event Simulation, </title> <booktitle> In Proceedings of. 1992 Workshop on Parallel and Distributed Simulation, </booktitle> <pages> pages 33-42, </pages> <address> Newport Beach, CA, </address> <month> January </month> <year> 1992. </year> <institution> Society for Computer Simulation </institution>
Reference: 3. <author> James F. Ohi and Bruno Richard Preiss, </author> <title> Parallel Instance Discrete-Event Simulation Using a Vector Uniprocessor, </title> <booktitle> In Proceedings of. 1991 Winter Simulation Conference., </booktitle> <pages> pages 93-601, </pages> <address> Phoenix, AZ, </address> <month> December </month> <year> 1991. </year> <institution> Society for Computer Simulation </institution>
Reference: 4. <author> Jayadev Misra, </author> <title> Distributed Discrete-Event Simulation, </title> <journal> ACM Computing Surveys, </journal> <volume> Vol. 18 No. 1, </volume> <month> March </month> <year> 1986, </year> <pages> pp. 39-65 </pages>
Reference: 5. <author> David R. Jefferson, </author> <title> Virtual Time, </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> Vol. 3 No. 40, </volume> <month> July </month> <year> 1985, </year> <pages> pp. 404-425 </pages>
Reference: 6. <author> K. M. Chandy and Jayadev Misra, </author> <title> Asynchronous Distributed Simulation via a Sequence of Parallel Computations, </title> <journal> Communications of the ACM, </journal> <volume> Vol 24 No. 11, </volume> <month> April </month> <year> 1981, </year> <pages> pp. 198-205 </pages>
Reference: 7. <author> Rajie L. Bagrodia and WenToh Liao, Maisie: </author> <title> A Language for the Design of Efficient Discrete-Event Simulations, </title> <journal> IEEE Transactions of Software Engineering, </journal> <volume> Vol. 20 No. 4, </volume> <month> April </month> <year> 1994, </year> <pages> pp. 225-238 </pages>
Reference: 8. <institution> Scalable Self-Organizing Simulation (S3), </institution> <note> Web Page http://www.dimacs.rutgers.edu/Projects/Simulati ons/darpa/ </note>
Reference: 9. <institution> DARPA Global Mobile (GloMo) Information Systems program, </institution> <note> Web Page http://glomo.sri.com/glomo/ </note>
Reference: 10. <institution> The REAL Network Simulator, </institution> <note> Web Page http://www.cs.cornell.edu/skeshav/real/overview. html </note>
Reference: 11. <author> Jong-Suk Ahn and Peter B. Danzig, </author> <title> Speedup vs. Simulation Granularity, </title> <type> Technical Report, </type> <institution> USC CS TR92-528, University of Southern California </institution>
Reference-contexts: Various scheduling algorithms and event queue structures (e.g., calendar queue, heap, and hybrid event list) have been proposed to speed up sequential simulation. Unfortunately, they do not scale to the number of events (packets) triggered by a complex and large-scale network like the current Internet. Ahn and Danzig estimated <ref> [11] </ref> that five minutes of activity on a network the size of todays Internet would require gigabytes of real memory and months of computation on todays 100 MIP uniprocessors. An alternative to sequential simulation is parallel and distributed simulation. <p> Although parallel and distributed simulation is useful when large computers are available, alternative techniques such as abstraction are also needed to make very large scale simulations. Ahn and Danzig <ref> [11] </ref> proposed to abstract packet streams (Flowsim) for packet network simulations and proved that Flowsim could be adjusted to the desired simulation granularity and help to study flow and congestion control algorithms more efficiently. However, Flowsim only abstracts one aspect of network simulation.
Reference: 12. <author> D. Schwetman, </author> <title> Hybrid Simulation Models of Computer Systems, </title> <journal> Communication of the ACM, </journal> <month> September </month> <year> 1978 </year>
Reference-contexts: However, Flowsim only abstracts one aspect of network simulation. We present two other abstraction techniques and hope to generalized them for a wider range of network protocols. In hybrid simulation models <ref> [12] </ref>, both discrete-event simulation and analytic techniques are combined to produce efficient yet accurate system models. There are examples of using hybrid simulations on hypothetical computer systems. Discrete-event simulation is used to model the arrival and activation of jobs, and a centralserver queuing network models the use of system processors.
Reference: 13. <author> D. Waitzman, S. Deering, and C. Partridge, </author> <title> Distance Vector Multicast Routing Protocol, </title> <address> RFC1075, </address> <month> November </month> <year> 1988 </year>
Reference: 14. <author> Estrin, D. Farinacci, A. Helmy, V. Jacobson, and L. Wei, </author> <title> Protocol Independent Multicast - Dense Mode (PIM-DM): Protocol Specification, Proposed Experimental RFC, </title> <month> September </month> <year> 1996 </year>
Reference-contexts: Current Internet multicast protocols transfer information along distribution trees rooted at the group sources and spanning the group members. Various multicast routing protocols establish these multicast trees in different ways: broadcast and prune (e.g., DVMRP [13]and PIM-DM <ref> [14] </ref>), membership advertisement (e.g., MOSPF [22,23]), and rendezvous-based (e.g., CBT [15], PIM-SM [16-21], and BGMP [35]). Broadcast and prune multicast routing protocols flood data packets all over the network and then prune back branches that do not have members.
Reference: 15. <author> A. J. Ballardie, P. F. Francis, and J. Crowcroft, </author> <title> Core Based Trees, </title> <booktitle> In Proceedings of the ACM SIGCOMM, </booktitle> <address> San Francisco, </address> <year> 1993 </year>
Reference-contexts: Current Internet multicast protocols transfer information along distribution trees rooted at the group sources and spanning the group members. Various multicast routing protocols establish these multicast trees in different ways: broadcast and prune (e.g., DVMRP [13]and PIM-DM [14]), membership advertisement (e.g., MOSPF [22,23]), and rendezvous-based (e.g., CBT <ref> [15] </ref>, PIM-SM [16-21], and BGMP [35]). Broadcast and prune multicast routing protocols flood data packets all over the network and then prune back branches that do not have members. They are suitable for groups with dense member distribution, and, thus, also called dense mode multicast routing protocols.
Reference: 16. <author> S. Deering, D. Estrin, D. Farinacci, M. Handley, A. Helmy, V. Jacobson, C. Liu, P. Sharma, D. Thaler, and L. Wei, </author> <title> Protocol Independent Multicast - Sparse Mode (PIM-SM): Motivation and Architecture, Proposed Experimental RFC, </title> <month> September </month> <year> 1996 </year>
Reference: 17. <author> S. Deering, D. Estrin, D. Farinacci, V. Jacobson, C. Liu, and L. Wei, </author> <title> An Architecture for Wide-Area Multicast Routing. </title> <booktitle> In Proceedings of the ACM SIGCOMM, </booktitle> <address> London 1994 </address>
Reference: 18. <author> S. Deering, D. Estrin, D. Farinacci, V. Jacobson, C. Liu, and L. Wei, </author> <title> The PIM Architecture for Wide-Area Multicast Routing. </title> <journal> ACM Transactions on Networks, </journal> <month> April </month> <year> 1994 </year>
Reference: 19. <author> D. Estrin, D. Farinacci, A. Helmy, D. Thaler, S. Deering, M. Handley, V. Jacobson, C. Liu, P. Sharma, and L. Wei, </author> <title> Protocol Independent Multicast - Sparse Mode (PIM-SM): Protocol Specification, Proposed Experimental RFC, </title> <month> September </month> <year> 1996 </year>
Reference: 20. <author> S. Deering, D. Estrin, D. Farinacci, V. Jacobson, C. Liu, L. Wei, P. Sharma, and A. Helmy, </author> <title> Protocol Independent Multicast - Sparse Mode (PIM-SM): Protocol Specification, </title> <type> Internet Draft, </type> <month> December </month> <year> 1995 </year>
Reference: 21. <author> Deborah Estrin, Mark Handley, Ahmed Helmy, Polly Huang, David Thaler, </author> <title> A Dynamic Bootstrap Mechanism for Rendezvous-based Multicast Routing, </title> <type> Technical Report USC CS TR97-644, </type> <institution> University of Southern California, </institution> <year> 1997 </year>
Reference: 22. <author> J. Moy, MOSPF: </author> <title> Analysis and Experience, </title> <address> RFC1585, </address> <month> March </month> <year> 1994 </year>
Reference: 23. <author> J. Moy, </author> <title> Multicast Extensions to OSPF, </title> <address> RFC1584, </address> <month> March </month> <year> 1994 </year>
Reference: 24. <author> E. Zegura, K. Calvert, and M. Donahoo, </author> <title> A Quantitative Comparison of Graph-based Models for Internet Topology, </title> <note> To Appear in Transactions on Networking, </note> <year> 1997 </year>
Reference-contexts: Several member agents may coexist in the same node. In addition, the number of links increases proportionally to the number of nodes to maintain a constant degree of connectivity 1.77, and, using GT-ITM (Georgia Tech - Internetwork Topology Model) <ref> [24] </ref>, we are able to create random transitstub topologies that are closer to the real world network structure. In the second set of simulations, the number of nodes and groups are fixed to 300 and 30, and, for each of these 30 groups, 10 to 50 members are selected randomly.
Reference: 25. <author> Steven McCanne and Sally Floyd, </author> <note> UCB/LBNL/VINT Network Simulator - ns 12 (version 2), http://www-mash.CS.Berkeley.EDU/ns/ </note>
Reference-contexts: However, modeling is often intractable with todays large networks and complex traffic patterns, so researchers have turned increasingly to simulation. In order to evaluate wide-area protocols with thousands of nodes, we must be able to perform large-scale simulations. General purpose network simulators (such as ns-2 <ref> [25] </ref>) make simulation easier by capturing characteristics of real network components and providing a modular programming environment, often composed by links, nodes and existing protocol suites.
Reference: 26. <author> Sally Floyd, Van Jacobson, Steven McCanne, Ching-Gung Liu, and Lixia Zhang, </author> <title> A Reliable Multicast Framework for Lightweight Sessions and Application Level Framing, </title> <type> Extended Report, LBNL Technical Report, </type> <pages> pages 1-37, </pages> <month> September </month> <year> 1995, </year> <note> also submitted for publication in IEEE/ACM Transactions on Networking. </note>
Reference-contexts: To determine if the differences caused by abstraction would affect the end-results of a real protocol study, this section examines SRM timer behavior (previously explored in <ref> [26, 31-34] </ref>) with both detailed and abstract simulations. 5.1. SRM Mechanism SRM (Scalable Reliable Multicast) [26] is a reliable multicast transport protocol. Each member detects losses individually and issues multicast requests for retransmission per loss. <p> To determine if the differences caused by abstraction would affect the end-results of a real protocol study, this section examines SRM timer behavior (previously explored in [26, 31-34]) with both detailed and abstract simulations. 5.1. SRM Mechanism SRM (Scalable Reliable Multicast) <ref> [26] </ref> is a reliable multicast transport protocol. Each member detects losses individually and issues multicast requests for retransmission per loss. Any member who successfully receives the packets may multicast a retransmission to recover losses for the requesting node.
Reference: 27. <author> S. Armstrong, A Freier, and K. Marzullo, </author> <title> Multicast Transport Protocol, </title> <address> RFC1301, </address> <month> February </month> <year> 1992 </year>
Reference: 28. <author> John C. Lin and Sanjoy Paul, RMTP: </author> <title> A Reliable Multicast Transport Protocol, </title> <booktitle> Proceedings of IEEE INFOCOM 96, </booktitle> <pages> pp. 1414-1424, </pages> <month> April </month> <year> 1996 </year>
Reference: 29. <author> R. Yavatkar, J. Griffioen, and M. Sudan, </author> <title> A Reliable Dissemination Protocol for Interactive Collaborative Applications, </title> <booktitle> Proceedings of ACM Multimedia 95, </booktitle> <year> 1995 </year>
Reference: 30. <author> D. Mills, </author> <title> Network Time Protocol (v3), </title> <type> RFC 1305, </type> <month> April </month> <year> 1992, </year> <note> Obsoletes RFC 1119 </note>
Reference: 31. <author> Ching-Gung Liu, </author> <title> A Scalable Reliable Multicast Protocol, </title> <type> PhD. Dissertation Proposal, </type> <month> September </month> <year> 1996 </year>
Reference: 32. <author> Ching-Gung Liu, Deborah Estrin, Scott Shenker, and Lixia Zhang, </author> <title> Local Error Recovery in SRM: Comparison of Two Approaches, </title> <note> Submitted for Publication in IEEE/ACM Transactions on Networking, </note> <month> February </month> <year> 1997 </year>
Reference: 33. <author> Puneet Sharma, Deborah Estrin, Sally Floyd, and Lixia Zhang, </author> <title> Scalable Session Messages in SRM, </title> <note> Submitted for Publication, </note> <institution> http://netweb.usc.edu/vint/papers/ssession.ps, University of Southern California, </institution> <month> August, </month> <year> 1997 </year>
Reference: 34. <author> Kannan Varadhan, Deborah Estrin, and Sally Floyd, </author> <title> Impact of Network Dynamics on End-to-End Protocols: Case Studies in Reliable Multicast, </title> <booktitle> Submitted for Review to the Third IEEE symposium on Computers and Communications, </booktitle> <institution> http://netweb.usc.edu/vint/papers/dynamics.ps, University of Southern California, </institution> <month> August, </month> <year> 1997 </year>
Reference: 35. <author> D. Thaler, D. Estrin, and D. Meyer, </author> <title> Border Gateway Multicast Protocol (BGMP): Protocol Specification, </title> <type> Internet Draft, </type> <institution> IDMR Working Group, draft-ietf-idmr-gum-01.txt, </institution> <month> October, </month> <year> 1997 </year>
Reference-contexts: Various multicast routing protocols establish these multicast trees in different ways: broadcast and prune (e.g., DVMRP [13]and PIM-DM [14]), membership advertisement (e.g., MOSPF [22,23]), and rendezvous-based (e.g., CBT [15], PIM-SM [16-21], and BGMP <ref> [35] </ref>). Broadcast and prune multicast routing protocols flood data packets all over the network and then prune back branches that do not have members. They are suitable for groups with dense member distribution, and, thus, also called dense mode multicast routing protocols.
References-found: 35

