URL: ftp://ftp.cs.toronto.edu/pub/cogrob/minker.ps.Z
Refering-URL: 
Root-URL: 
Email: jpinto@ing.puc.cl  reiter@ai.toronto.edu  
Title: Reasoning about Time in the Situation Calculus.  
Author: Javier Pinto Raymond Reiter 
Note: (e.g., Allen [1], Kowalski and Sergot [6]).  
Address: Casilla 306, Santiago 22, Chile  Toronto, Canada M5S 1A4  
Affiliation: Depto. de Ciencia de la Computacion Pontificia Universidad Catolica de Chile  Dept. of Computer Science University of Toronto  
Abstract: We extend the ontology of the situation calculus to provide for the representation of time and event occurrences. We do this by defining a time line corresponding to a sequence of situations (called actual situations) beginning with the initial situation. Actual situations are totally ordered and the actions that lead to different actual situations are said to have occurred. This exension to the situation calculus permits one to express truths about the state of the world at different times. For example, we can state that at some point in the future certain fluent will be true. We can also express constraints on the occurrences of events, for example, that after releasing a cup, it will eventually hit the floor. Our version of the situation calculus subsumes other temporal logics. In particular, we show that the modal Temporal Logic of Concurrency [4] can be embedded in the extended situation calculus. Our extension can also realize the essential features of other first order proposals for reasoning about time commonly used for AI purposes 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Allen, J. F. </author> <title> Towards a general theory of action and time. </title> <booktitle> Artificial Intelligence 23 (1984), </booktitle> <pages> 123-154. </pages>
Reference-contexts: There is no obvious way to represent such temporal information in the "classical" situation calculus. On the other hand, knowledge of this kind can be expressed very easily in some linear temporal logics (e.g., <ref> [1, 21] </ref>). For example, in such logics, one can write sentences of the form holdsAt (F; T ) to express that fluent F is true at time T , and occurs (A; T ), meaning that the action A has occurred (or will occur) at time T . <p> The path so identified describes the world's true evolution. Modal temporal logics (e.g., [4]) are often encountered as alternatives to first order linear time logics like those in <ref> [1, 6] </ref>. In [11], McCarthy and Hayes conjecture that the expressive power of modal logics can be gained without the use of modalities using an ordinary truth-functional logic. Their proposal was to identify each "possible world" with a situation in a situation calculus language. <p> The expanded ontology for the situation calculus provides the essential features of the event calculus of Kowalski and Sergot [6], which in turn appears to be a variant of Allen's temporal logic <ref> [1] </ref>. See [16] for details. 2.3 On Actions with Durations. In the previous section we formalized a notion of a time line within the situation calculus by identifying it with a connected path in the tree of situations. <p> This is not a serious limitation since we can achieve the effect of a deadlock by introducing a Wait action with no effects. 5 Conclusions and Future Research. 5.1 What Has Been Achieved? * The standard alternatives to the situation calculus in the AI literature (e.g., Allen <ref> [1] </ref>, Kowal-ski and Sergot [6]) are linear time theories which provide for the representation of event occurrences and fluent truths at time t.
Reference: [2] <author> Davis, E. </author> <title> Axiomatizing qualitative process theory. </title> <booktitle> In Proceedings of the Third International Conference on Principles of Knowledge Representation and Reasoning (KR'92) (1992), </booktitle> <editor> C. R. B. Nebel and W. Swartout, Eds., </editor> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <pages> pp. 177-188. </pages>
Reference-contexts: within the extended situation calculus, we will be able to describe processes like: "If I provide a continuous supply of heat to a pot of water, the water will eventually boil." A language of this sort is necessary for formally specifying systems that reason about physical processes, as in (Davis <ref> [2] </ref>). * Planning with external events. Conventional planning techniques assume that all actions are under the agent's control. The possibility of an agent exploiting external events in its plans needs to be addressed. * Time and complex events. The approach of this paper supposes that all events are primitive.
Reference: [3] <author> Gelfond, M., Lifschitz, V., and Rabinov, A. </author> <title> What are the Limitations of the Situation Calculus? In Working Notes, </title> <booktitle> AAAI Spring Symposium Series. Symposium:Logical Formalization of Commonsense Reasoning. </booktitle> <month> (Mar. </month> <year> 1991), </year> <pages> pp. 59-69. </pages>
Reference-contexts: Although the situation calculus [11] is by now a standard formalism in AI for representing and reasoning about actions and their effects, it does not yet provide a very rich temporal ontology. There have been a few earlier proposals to add some temporal features to the situation calculus (e.g., <ref> [3, 20] </ref>), but these have not gone as far as one would like. <p> Therefore, we can model a restricted form of concurrency in which actions with durations occur concurrently as long as their starting and ending points don't coincide. This latter restriction can be eliminated by allowing for concurrent actions in the language of the situation calculus (see Gelfond et al. <ref> [3] </ref>, Miller and Shanahan [12], Lin and Shoham [9] or Pinto [15] for examples on how to deal with concurrency in the situation calculus). 3 Some Applications. Explaining Observations. <p> The axiomatization of this paper assumes non-concurrent, discrete events. These limitations need to be removed, perhaps by appealing to ideas of Lin and Shoham [9] and Gelfond, Lifschitz and Rabinov <ref> [3] </ref>. * Foundations for reasoning about physical processes.
Reference: [4] <author> Goldblatt, R. </author> <title> Logics of Time and Computation. </title> <publisher> CSLI, </publisher> <year> 1987. </year>
Reference-contexts: We present a formalization of the situation calculus enriched with a predicate actual that identifies a path of situations starting in S 0 (the initial situation). The path so identified describes the world's true evolution. Modal temporal logics (e.g., <ref> [4] </ref>) are often encountered as alternatives to first order linear time logics like those in [1, 6]. In [11], McCarthy and Hayes conjecture that the expressive power of modal logics can be gained without the use of modalities using an ordinary truth-functional logic. <p> Their proposal was to identify each "possible world" with a situation in a situation calculus language. In this paper, we pursue this suggestion, and show how the modal temporal logic of concurrency <ref> [4] </ref> can be embedded in the situation calculus. We do this by identifying the possible worlds with a fixed infinite branch of states in the situation calculus tree of states. This embedding shows that this modal logic is strictly less expressive than the extended situation calculus we propose. <p> Moreover, we retain the property that actions are first class citizens in the situation calculus, something that modal temporal logics lack. 4.1 The Temporal Logic. The Temporal Logic of Concurrency (TL for short) <ref> [4] </ref> is a propositional modal logic, in which the "possible worlds" are temporally ordered states. <p> M j= i A means that A is true in the state i ; M j= A means that A is true in every state. For a complete definition of the j= i relation see <ref> [4, p.72] </ref>.
Reference: [5] <author> J. de Kleer, Mackworth, A., and Reiter, R. </author> <title> Characterizing Diagnoses. </title> <booktitle> In Proceedings of the eighth National Conference on Artificial Intelligence (AAAI-90) (1990), </booktitle> <pages> pp. 324-330. </pages>
Reference-contexts: This provides the potential for integrating results in hardware specification (e.g., [10]), with research in fault diagnosis <ref> [5] </ref>. Among other things, this could lead to a rich theory of diagnosis for dynamic systems. 5.2 Future Research. * Enriched event ontologies. The axiomatization of this paper assumes non-concurrent, discrete events.
Reference: [6] <author> Kowalski, R., and Sergot, M. </author> <title> A logic-based calculus of events. </title> <booktitle> New Generation Computing 4 (1986), </booktitle> <pages> 67-95. </pages>
Reference-contexts: The path so identified describes the world's true evolution. Modal temporal logics (e.g., [4]) are often encountered as alternatives to first order linear time logics like those in <ref> [1, 6] </ref>. In [11], McCarthy and Hayes conjecture that the expressive power of modal logics can be gained without the use of modalities using an ordinary truth-functional logic. Their proposal was to identify each "possible world" with a situation in a situation calculus language. <p> (s 2 ) s 1 &lt; s 2 _ s 2 &lt; s 1 _ s 1 = s 2 : We also introduce a notion of time, which will allow us to establish a direct relationship between the situation calculus and linear temporal logics (e.g., the calculus of events <ref> [6] </ref>). Intuitively, each situation has a starting time and an ending time. During the time span of a situation no fluents change truth values 5 . <p> Unfortunately, we do not have an adequate account of hypothetical reasoning in the situation calculus, so we are postponing defining a fully general during (t; s) until we do. The expanded ontology for the situation calculus provides the essential features of the event calculus of Kowalski and Sergot <ref> [6] </ref>, which in turn appears to be a variant of Allen's temporal logic [1]. See [16] for details. 2.3 On Actions with Durations. <p> is not a serious limitation since we can achieve the effect of a deadlock by introducing a Wait action with no effects. 5 Conclusions and Future Research. 5.1 What Has Been Achieved? * The standard alternatives to the situation calculus in the AI literature (e.g., Allen [1], Kowal-ski and Sergot <ref> [6] </ref>) are linear time theories which provide for the representation of event occurrences and fluent truths at time t.
Reference: [7] <author> Kr oger, F. </author> <title> Temporal Logic of Programs, </title> <booktitle> vol. 8 of EATCS Monographs on Theoretical Computer Science. </booktitle> <publisher> Springer Verlag, </publisher> <year> 1987. </year>
Reference-contexts: preserve the action-based ontology of the situation calculus; conventional temporal logics do not provide for actions and their effects in their ontologies. 11 * All application domains for which temporal logics have been used can be studied within the framework of the extended situation calculus (e.g., semantics of programming languages <ref> [7] </ref>, reasoning about digital circuits [14, 10], modelling of concurrency [17], etc.). This provides the potential for integrating results in hardware specification (e.g., [10]), with research in fault diagnosis [5].
Reference: [8] <author> Lin, F., and Shoham, Y. </author> <title> Provably Correct Theories of Action (preliminary report). </title> <booktitle> In Proceedings of the ninth National Conference on Artificial Intelligence (AAAI-91) (1991), </booktitle> <pages> pp. 349-354. </pages>
Reference-contexts: not the primary focus of this paper, we will assume that either we have a complete monotonic specification of the theory of action (e.g., using Reiter's successor state axioms [18] to complete the set of effect axioms (14)); or some non-monotonic mechanism to complete the theory (e.g., Lin and Shoham <ref> [8] </ref>). 2.2 An Actual Path of Situations. So far, we have introduced axioms that allow for the specification of what is true and what truths change along different paths that start in the initial situation S 0 .
Reference: [9] <author> Lin, F., and Shoham, Y. </author> <title> Concurrent Actions in the Situation Calculus. </title> <booktitle> In Working Notes of the 4th International Workshop on Nonmonotonic Reasoning (1992), </booktitle> <pages> pp. 133-138. </pages>
Reference-contexts: This latter restriction can be eliminated by allowing for concurrent actions in the language of the situation calculus (see Gelfond et al. [3], Miller and Shanahan [12], Lin and Shoham <ref> [9] </ref> or Pinto [15] for examples on how to deal with concurrency in the situation calculus). 3 Some Applications. Explaining Observations. <p> Among other things, this could lead to a rich theory of diagnosis for dynamic systems. 5.2 Future Research. * Enriched event ontologies. The axiomatization of this paper assumes non-concurrent, discrete events. These limitations need to be removed, perhaps by appealing to ideas of Lin and Shoham <ref> [9] </ref> and Gelfond, Lifschitz and Rabinov [3]. * Foundations for reasoning about physical processes.
Reference: [10] <author> Maruyama, F., and Fujita, M. </author> <title> Hardware Verification. </title> <booktitle> IEEE Computer (February 1985), </booktitle> <pages> 22-32. </pages>
Reference-contexts: the situation calculus; conventional temporal logics do not provide for actions and their effects in their ontologies. 11 * All application domains for which temporal logics have been used can be studied within the framework of the extended situation calculus (e.g., semantics of programming languages [7], reasoning about digital circuits <ref> [14, 10] </ref>, modelling of concurrency [17], etc.). This provides the potential for integrating results in hardware specification (e.g., [10]), with research in fault diagnosis [5]. Among other things, this could lead to a rich theory of diagnosis for dynamic systems. 5.2 Future Research. * Enriched event ontologies. <p> This provides the potential for integrating results in hardware specification (e.g., <ref> [10] </ref>), with research in fault diagnosis [5]. Among other things, this could lead to a rich theory of diagnosis for dynamic systems. 5.2 Future Research. * Enriched event ontologies. The axiomatization of this paper assumes non-concurrent, discrete events.
Reference: [11] <author> McCarthy, J., and Hayes, P. J. </author> <title> Some philosophical problems from the standpoint of artificial intelligence. </title> <booktitle> In Machine Intelligence 4, </booktitle> <editor> B. Meltzer and D. Michie, Eds. </editor> <publisher> Edinburgh University Press, Edinburgh, </publisher> <address> Scotland, </address> <year> 1969, </year> <pages> pp. 463-502. </pages>
Reference-contexts: 1 Introduction and Motivation. Although the situation calculus <ref> [11] </ref> is by now a standard formalism in AI for representing and reasoning about actions and their effects, it does not yet provide a very rich temporal ontology. <p> The path so identified describes the world's true evolution. Modal temporal logics (e.g., [4]) are often encountered as alternatives to first order linear time logics like those in [1, 6]. In <ref> [11] </ref>, McCarthy and Hayes conjecture that the expressive power of modal logics can be gained without the use of modalities using an ordinary truth-functional logic. Their proposal was to identify each "possible world" with a situation in a situation calculus language. <p> If this is not desired, simply leave the intervening action occurrences open: occurs (GoesU p; s) (9 s 0 ):s &lt; s 0 ^ occurs (ComesDown; s 0 ): 4 The Situation Calculus and Modal Temporal Log ics. In <ref> [11] </ref>, McCarthy and Hayes argue, without proof, that the expressive power of modal logics can be gained without the use of modalities using an ordinary truth-functional logic. The proposal is to identify each "possible world" with a situation in a situation calculus language. <p> Moreover, as we show in [16], our axioms lead to a logic programming implementation with comparable computational properties to those of the event calculus. * We have confirmed the intuitions of McCarthy and Hayes <ref> [11] </ref> that the situation calculus is at least as expressive as modal temporal logics. This we did by providing a translation of the logic TL into the extended situation calculus.
Reference: [12] <author> Miller, R., and Shanahan, M. </author> <title> Narratives in the situation calculus. </title> <type> Tech. rep., </type> <institution> Imperial College, Department of Computing, </institution> <year> 1993. </year>
Reference-contexts: This latter restriction can be eliminated by allowing for concurrent actions in the language of the situation calculus (see Gelfond et al. [3], Miller and Shanahan <ref> [12] </ref>, Lin and Shoham [9] or Pinto [15] for examples on how to deal with concurrency in the situation calculus). 3 Some Applications. Explaining Observations.
Reference: [13] <author> Moore, R. C. </author> <title> A formal Theory of Knowledge and Action. In Formal Theories of the Commonsense World, </title> <editor> J. B. Hobbs and R. C. Moore, Eds. </editor> <publisher> Ablex Publishing Corp., </publisher> <address> Norwood, New Jersey, </address> <year> 1985, </year> <journal> ch. </journal> <volume> 9, </volume> <pages> pp. 319-358. </pages>
Reference-contexts: The advantage of performing this embedding is that the expressiveness of the temporal logic is preserved, while avoiding the use of "mixed logics", in much the same way as does Moore <ref> [13] </ref> in providing an embedding of logics of knowledge into the situation calculus. Moreover, we retain the property that actions are first class citizens in the situation calculus, something that modal temporal logics lack. 4.1 The Temporal Logic. <p> This we did by providing a translation of the logic TL into the extended situation calculus. This avoids the problem of "mixed logics", in much the same way as does Moore <ref> [13] </ref> in providing an embedding of logics of knowledge into the situation calculus.
Reference: [14] <author> Moszkowski, B. </author> <title> Reasoning About Digital Circuits. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, Stanford University, </institution> <year> 1983. </year>
Reference-contexts: the situation calculus; conventional temporal logics do not provide for actions and their effects in their ontologies. 11 * All application domains for which temporal logics have been used can be studied within the framework of the extended situation calculus (e.g., semantics of programming languages [7], reasoning about digital circuits <ref> [14, 10] </ref>, modelling of concurrency [17], etc.). This provides the potential for integrating results in hardware specification (e.g., [10]), with research in fault diagnosis [5]. Among other things, this could lead to a rich theory of diagnosis for dynamic systems. 5.2 Future Research. * Enriched event ontologies.
Reference: [15] <author> Pinto, J. </author> <title> Temporal Reasoning in the Situation Calculus. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Toronto, Toronto, </institution> <address> Ontario, Canada, </address> <month> Feb. </month> <year> 1994. </year> <month> 15 </month>
Reference-contexts: This latter restriction can be eliminated by allowing for concurrent actions in the language of the situation calculus (see Gelfond et al. [3], Miller and Shanahan [12], Lin and Shoham [9] or Pinto <ref> [15] </ref> for examples on how to deal with concurrency in the situation calculus). 3 Some Applications. Explaining Observations.
Reference: [16] <author> Pinto, J., and Reiter, R. </author> <title> Temporal reasoning in logic programming: A case for the situation calculus. </title> <booktitle> In Proceedings of the Tenth International Conference on Logic Programming (Budapest, </booktitle> <month> June </month> <year> 1993). </year>
Reference-contexts: The expanded ontology for the situation calculus provides the essential features of the event calculus of Kowalski and Sergot [6], which in turn appears to be a variant of Allen's temporal logic [1]. See <ref> [16] </ref> for details. 2.3 On Actions with Durations. In the previous section we formalized a notion of a time line within the situation calculus by identifying it with a connected path in the tree of situations. <p> We have shown how, with a minimal change to its ontology, the situation calculus can realize the essential features of these alternatives, without sacrificing its capacity for deductive planning and hypothetical reasoning provided by its branching state structure. * As we discuss in <ref> [16] </ref>, there is a close correspondence between our enriched situation calculus and the calculus of events of Kowalski and Sergot. <p> One advantage of this is the clean semantics provided by our axiomatization, in contrast to the event calculus's reliance on the negation as failure feature of logic programming, whose semantics is not well understood. Moreover, as we show in <ref> [16] </ref>, our axioms lead to a logic programming implementation with comparable computational properties to those of the event calculus. * We have confirmed the intuitions of McCarthy and Hayes [11] that the situation calculus is at least as expressive as modal temporal logics.
Reference: [17] <author> Pnueli, A. </author> <title> The temporal semantics of concurrent programs. </title> <booktitle> Theoretical Computer Science 13 (1981), </booktitle> <pages> 45-60. </pages>
Reference-contexts: logics do not provide for actions and their effects in their ontologies. 11 * All application domains for which temporal logics have been used can be studied within the framework of the extended situation calculus (e.g., semantics of programming languages [7], reasoning about digital circuits [14, 10], modelling of concurrency <ref> [17] </ref>, etc.). This provides the potential for integrating results in hardware specification (e.g., [10]), with research in fault diagnosis [5]. Among other things, this could lead to a rich theory of diagnosis for dynamic systems. 5.2 Future Research. * Enriched event ontologies.
Reference: [18] <author> Reiter, R. </author> <title> The Frame Problem in the Situation Calculus: A Simple Solution (sometimes) and a completeness result for goal regression. </title> <booktitle> Artificial Intelligence and Mathematical Theory of Computation: Papers in Honor of John McCarthy. </booktitle> <publisher> Academic Press, </publisher> <address> San Diego, CA, </address> <year> 1991, </year> <pages> pp. 359-380. </pages>
Reference-contexts: Since the frame and ramification problems are not the primary focus of this paper, we will assume that either we have a complete monotonic specification of the theory of action (e.g., using Reiter's successor state axioms <ref> [18] </ref> to complete the set of effect axioms (14)); or some non-monotonic mechanism to complete the theory (e.g., Lin and Shoham [8]). 2.2 An Actual Path of Situations. <p> m ) ^ actual (S m ): However, we observe some time later that the car is no longer parked: actual (S e ) ^ :holds (P arked; S e ) ^ S m &lt; S e : Furthermore, assume that our theory includes the following successor state axiom (Reiter <ref> [18] </ref>): P oss (a; s) holds (P arked; do (a; s)) [holds (P arked; s) ^ a 6= Steal ^ a 6= T owAway] _ a = P ark: Then, the following is a consequence of our axioms: (9 s):(S m s &lt; S e ) ^ [occurs (Steal; s) _
Reference: [19] <author> Reiter, R. </author> <title> Proving Properties of States in the Situation Calculus. </title> <booktitle> Artificial Intelligence 64, 2 (1993), </booktitle> <pages> 337-351. </pages>
Reference-contexts: See Reiter <ref> [19] </ref> for examples of the need for, and use of, induction in the situation calculus.
Reference: [20] <author> Schubert, L. </author> <title> Monotonic solution of the frame problem in the situation calculus: an efficient method for worlds with fully specified actions. In Knowledge Representation and Defeasible Reasoning, </title> <editor> H. Kyberg, R. Loui, and G. Carlson, Eds. </editor> <publisher> Kluwer Academic Press, </publisher> <year> 1990, </year> <pages> pp. 23-67. </pages>
Reference-contexts: Although the situation calculus [11] is by now a standard formalism in AI for representing and reasoning about actions and their effects, it does not yet provide a very rich temporal ontology. There have been a few earlier proposals to add some temporal features to the situation calculus (e.g., <ref> [3, 20] </ref>), but these have not gone as far as one would like.
Reference: [21] <author> Shanahan, M. </author> <title> A circumscriptive calculus of events. </title> <type> Tech. rep., </type> <institution> Imperial College, Department of Computing, </institution> <year> 1992. </year>
Reference-contexts: There is no obvious way to represent such temporal information in the "classical" situation calculus. On the other hand, knowledge of this kind can be expressed very easily in some linear temporal logics (e.g., <ref> [1, 21] </ref>). For example, in such logics, one can write sentences of the form holdsAt (F; T ) to express that fluent F is true at time T , and occurs (A; T ), meaning that the action A has occurred (or will occur) at time T .
Reference: [22] <author> Shanahan, M. </author> <title> Explanation in the situation calculus. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI-93) (1993). To appear. </booktitle> <pages> 16 </pages>
Reference-contexts: a 6= T owAway] _ a = P ark: Then, the following is a consequence of our axioms: (9 s):(S m s &lt; S e ) ^ [occurs (Steal; s) _ occurs (T owAway; s)]: The issue of explaining observations in a similar framework is also addressed by Shanahan in <ref> [22] </ref>. Behavioural Constraints. It is possible to express behavioural constraints for agents. For example: "Never cross the street against a red light:" holds (Red; s) :occurs (Cross; s): "If you drink, don't drive:" :occurs (Drive; do (Drink; s)): We also have a natural notion of prevention.
References-found: 22

