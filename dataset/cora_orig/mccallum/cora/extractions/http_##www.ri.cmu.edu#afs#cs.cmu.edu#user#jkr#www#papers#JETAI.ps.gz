URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/jkr/www/papers/JETAI.ps.gz
Refering-URL: http://www.ri.cmu.edu/afs/cs/project/alv/member/www/projects/DAMN.html
Root-URL: 
Title: Abstract  
Keyword: mobile robots, distributed architecture, behaviors, voting, arbitration, command fusion  
Abstract: An architecture is presented in which distributed task-achieving modules, or behaviors, cooperatively determine a mobile robots path by voting for each of various possible actions. An arbiter then performs command fusion and selects that action which best satisfies the prioritized goals of the system, as expressed by these votes, without the need to average commands. Command fusion allows multiple goals and constraints to be considered simultaneously. Examples of implemented systems are given, and future research directions in command fusion are discussed. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Arkin, R. </author> <year> (1987), </year> <title> Motor Schema Based Navigation for a Mobile Robot: An Approach to Programming by Behavior, </title> <booktitle> in Proceedings of the International Conference on Robotics and Automation. </booktitle>
Reference-contexts: Although all votes must pass through the command arbiter before an action is taken, the function provided by the arbiter is fairly simple and does not represent the centralized bottleneck of more traditional systems. While the Motor Schema framework <ref> (Arkin, 1987) </ref> also offers a means of fusing commands from multiple behaviors, it suffers from the well known problem of local minima in potential fields.
Reference: <author> Albus, J., McCain, H. & Lumia, R. </author> <year> (1987), </year> <title> NASA/NBS Standard Reference Model for Telerobot Control System Architecture (NASREM), </title> <type> NBS Tech. Note 1235, </type> <institution> Gaithersburg, MD. </institution>
Reference: <author> Brooks, R. </author> <year> (1986), </year> <title> A Robust Layered Control System for a Mobile Robot, </title> <journal> IEEE Journal of Robotics and Automation vol. RA-2, </journal> <volume> no. 1, </volume> <pages> pp. 14-23, </pages> <month> April </month> <year> 1986. </year>
Reference-contexts: DAMN is a behavior-based architecture similar in some regards to reactive systems such as the Subsumption Architecture <ref> (Brooks, 1986) </ref>. <p> In some architectures, this is achieved by having priorities assigned to each behavior; of all the behaviors issuing commands, the one with the highest priority is in control and the rest are ignored. In the Subsumption Architecture <ref> (Brooks, 1986) </ref>, this prioritization is implicit in the wiring of behavior modules; a higher-level behavior can override the output of a lower-level behavior via an inhibition link. <p> Safety Behaviors A basic need for any mobile robot system is the ability to avoid situations hazardous to itself or to other objects in its environment. Therefore, an important part of DAMN is its first level of competence <ref> (Brooks, 1986) </ref>, which consists of behaviors designed to provide vehicle safety.
Reference: <author> Brooks, R. </author> <year> (1993), </year> <title> Intelligence Without Reason, </title> <booktitle> in Proceedings of the International Joint Conference on Artificial Intelligence. </booktitle>
Reference: <author> Daily, M., Harris, J., Keirsey, D., Olin, K., Payton, D., Reiser, K., Rosenblatt, J., Tseng, D. and Wong, V. </author> <year> (1988), </year> <title> Autonomous Cross-Country Navigation with the ALV, </title> <booktitle> in IEEE Conference on Robotics and Automation, </booktitle> <address> Philadelphia, PA, </address> <month> April, </month> <year> 1988. </year> <note> (Also appears in DARPA Knowledge Based Planning Workshop, December, 1987 pp 20-1 to 20-10). </note>
Reference: <author> Kamada, H., Naoi, S. & Goto, T. </author> <year> (1990), </year> <title> A Compact Navigation System Using Image Processing and Fuzzy Control, </title> <booktitle> IEEE Southeastcon, </booktitle> <address> New Orleans, </address> <month> April 1-4, </month> <note> 1990 Kay, </note> <author> J., Thorpe, C. </author> <year> (1993), </year> <title> STRIPE Supervised Telerobotics Using Incremental Polygonal Earth Geometry. </title> <booktitle> In Proc. Intelligent Autonomous Systems Conference. </booktitle>
Reference-contexts: Path Smoothness Another general measure of the quality of the path is the smoothness with which it is controlled. Integrating the squared derivative of curvature along the vehicles actual path provides a measure of smoothness that can be applied to the architecture <ref> (Kamada, Naoi & Goto, 1990) </ref>, and the derivative of acceleration, or jerk, provides a measure of smoothness in the vehicles speed as well as steering.
Reference: <author> Keirsey, D.M., Payton, D.W. & Rosenblatt, J.K. </author> <year> (1988), </year> <title> Autonomous Navigation in Cross-Country Terrain, </title> <booktitle> in Proceedings of Image Understanding Workshop, </booktitle> <address> Cambridge, MA, </address> <month> April, </month> <year> 1988. </year>
Reference-contexts: Subgoals The Goal Seeking behavior is one way to provide this capability. This simple behavior directs the vehicle toward a series of goal points specified in global coordinates either by the user (Langer, Rosenblatt & Hebert, 1994) or by a map-based planner <ref> (Keirsey, Payton & Rosenblatt, 1988) </ref>. The desired turn radius is transformed into a series of votes by applying a Gaussian whose peak is at the desired turn radius and which tapers off as the difference between this turn radius and a prospective turn command increases.
Reference: <author> Langer, D., Rosenblatt, J. &. Hebert, M. </author> <year> (1994), </year> <title> A Behavior-Based System For Off-Road Navigation, </title> <journal> in IEEE Journal of Robotics and Automation, </journal> <volume> vol. 10, no. 6, </volume> <pages> pp. </pages> <month> 776-782, </month> <title> December 1994; (also appears as An Integrated System For Autonomous Off-Road Navigation, </title> <booktitle> in the Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <address> San Diego, </address> <month> May </month> <year> 1994). </year>
Reference-contexts: Subgoals The Goal Seeking behavior is one way to provide this capability. This simple behavior directs the vehicle toward a series of goal points specified in global coordinates either by the user <ref> (Langer, Rosenblatt & Hebert, 1994) </ref> or by a map-based planner (Keirsey, Payton & Rosenblatt, 1988). <p> The maximum vehicle speed was 2 meters/second in this experiment. A more detailed description of the experimental system can be found in <ref> (Langer, Rosenblatt & Hebert, 1994) </ref>. outputs from the behaviors. The first section of the figure shows the path of the vehicle as it travels around a set of obstacle points, and the distribution of votes for each of the behaviors and for the arbiter along that path.
Reference: <author> Lee, C. </author> <year> (1990), </year> <title> Fuzzy Logic in Control Systems: Fuzzy Logic Controller -- Parts I & II, </title> <journal> IEEE Transactions on Systems, Man and Cybernetics, </journal> <volume> Vol 20 No 2, </volume> <month> March/April </month> <year> 1990. </year>
Reference: <author> Maes, P. </author> <year> (1991), </year> <title> A Bottom-Up Mechanism for Action Selection in an Artificial Creature, in Adaptive Behavior: From Animals to Animats, edited by S. </title> <editor> Wilson and J-A Meijer, </editor> <publisher> MIT Press. </publisher>
Reference-contexts: The lowest level of the hierarchical architecture developed at the Hughes Research Labs also consists of a similar distributed control mechanism; a centralized blackboard is used for arbitration and communications purposes; priorities are explicit and can be changed dynamically (Payton, 1986). In <ref> (Maes, 1991) </ref>, behavior selection is achieved via activation and inhibition links in what is effectively a winner-take-all network. In these architectures, the satisfaction of multiple, possibly conicting goals is achieved by having one behaviors commands completely override anothers. <p> The mode manager changes behavior weights according to a precomputed schedule, but adaptive techniques such as those in <ref> (Maes, 1991) </ref> are necessary for dealing with a wider variety of situations and for fully autonomous control.
Reference: <author> Nilsson, N. </author> <year> (1980), </year> <booktitle> Principles of Artificial Intelligence, </booktitle> <publisher> Tioga Pub. Co., </publisher> <address> Palo Alto, Calif. </address>
Reference-contexts: Dynamic Programming Some more sophisticated map-based planning techniques have also been integrated and used within the DAMN framework. These planners use dynamic programming techniques based on the A* search algorithm <ref> (Nilsson, 1980) </ref> to determine an optimal global path.
Reference: <author> Nilsson, N. </author> <year> (1984), </year> <title> Shakey the Robot, </title> <type> SRI Tech. Note 323, </type> <institution> Menlo Park, Calif. </institution>
Reference-contexts: It must allow for purposeful goal-oriented behavior yet retain the ability to respond to potentially dangerous situations in real-time while maintaining enough speed to be useful. The earliest work in robot control architectures attempted to reason by manipulating abstract symbols using only pure logic <ref> (Nilsson, 1984) </ref>. The limitations of this top-down AI approach led to a new generation of architectures designed in a bottom-up fashion to provide greater reactivity to the robots surroundings, but sacrificed generality and the ability to reason about the systems own intentions and goals.
Reference: <author> Payton, D. </author> <year> (1986), </year> <title> An Architecture for Reexive Autonomous Vehicle Control, </title> <booktitle> in IEEE International Conference on Robotics and Automation, </booktitle> <address> San Francisco, CA, </address> <month> April 7-10, </month> <year> 1986, </year> <pages> pp. 1838-1845. </pages>
Reference-contexts: The lowest level of the hierarchical architecture developed at the Hughes Research Labs also consists of a similar distributed control mechanism; a centralized blackboard is used for arbitration and communications purposes; priorities are explicit and can be changed dynamically <ref> (Payton, 1986) </ref>. In (Maes, 1991), behavior selection is achieved via activation and inhibition links in what is effectively a winner-take-all network. In these architectures, the satisfaction of multiple, possibly conicting goals is achieved by having one behaviors commands completely override anothers.
Reference: <author> Payton, D. </author> <year> (1990), </year> <title> Internalized Plans: A Representation for Action Resources, </title> <booktitle> Robotics and Autonomous Systems, </booktitle> <volume> 6(1), </volume> <year> 1990, </year> <pages> pp. </pages> <month> 89-103. </month> <title> (Also in Designing Autonomous Agents, </title> <editor> ed. Pattie Maes, </editor> <publisher> MIT Press, </publisher> <address> Cambridge, Mass. </address> <year> 1991, </year> <pages> pp. 89-103.) </pages> <note> Payton, </note> <author> D., Rosenblatt, J. & Keirsey, D. </author> <year> (1990), </year> <title> Plan Guided Reaction. </title> <journal> IEEE Transactions on Systems Man and Cybernetics, </journal> <volume> 20(6), </volume> <pages> pp. 1370-1382. </pages>
Reference-contexts: While such an approach provides aspects of both deliberative planning and reactive control, the top-down nature of hierarchical structures tends to overly restrict the lower levels <ref> (Payton, Rosenblatt & Keirsey, 1990) </ref>. In hierarchical architectures, each layer controls the layer beneath it and assumes that its commands will be executed as expected. <p> A distributed architecture has several advantages over a centralized one, including greater reactivity, exibility, and robustness <ref> (Payton, Rosenblatt & Keirsey, 1990) </ref>. <p> During execution, this grid may be indexed by the current vehicle position to yield a path towards the goal which is optimal based on the information available in the map at that time. intermediate goal heading The Internalized Plans <ref> (Payton, 1990) </ref> approach uses a detailed map to perform an A* search from the goal (s) back toward the start point to create a Gradient Field towards the goal. The type and slope of the terrain, among other factors, is used to estimate the cost of traversal between grid cells.
Reference: <author> Payton, D., Keirsey, D., Kimble, D., Krozel, J. & Rosenblatt, J. </author> <year> (1993), </year> <title> Do Whatever Works: A Robust Approach to Fault-Tolerant Autonomous Control, </title> <journal> Journal of Applied Intelligence, </journal> <volume> Volume 3, </volume> <pages> pp 226-250. </pages>
Reference-contexts: The vote weights of each behavior can also be modified by messages sent to the arbiter from a mode manager module. It can reconfigure the weights according to whatever top-down planning considerations it may have, and potentially could use bottom-up information about the effectiveness and relevance of a behavior <ref> (Payton et al, 1993) </ref>. Different modes of operation that exclude some behaviors can be constructed by setting the weights those behaviors to 0.
Reference: <author> Pearl, J. </author> <year> (1988), </year> <title> Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference, </title> <publisher> Morgan Kaufmann Publishers. </publisher>
Reference-contexts: If we assign a utility measure U (c) for each possible consequence of an action, then the expected utility for an action a is: where P (c|a,e) is the probability distribution of the consequence configuration c, conditioned upon selecting action a and observing evidence e <ref> (Pearl, 1988) </ref>. Thus, if we can define these utilities and probabilities, we can then apply the Maximum Expected Utility (MEU) criterion to select the optimal action based on our current information.
Reference: <author> Pomerleau, D. </author> <year> (1992), </year> <title> Neural Network Perception for Mobile Robot Guidance, </title> <type> Ph.D. dissertation, Carnegie-Mellon Technical Report CMU-CS-92-115. </type>
Reference-contexts: The ALVINN road following system is an artificial neural network that is trained, using backpropagation, to associate preprocessed low resolution input images with the appropriate output steering commands <ref> (Pomerleau, 1992) </ref>. In the case of ALVINN, creating a behavior that independently evaluated each arc was relatively straightforward.
Reference: <author> Rosenblatt, J. </author> <year> (1995), </year> <title> DAMN: A Distributed Architecture for Mobile Navigation, </title> <booktitle> in proceedings of the 1995 AAAI Spring Symposium on Lessons Learned from Implemented Software Architectures for Physical Agents, </booktitle> <editor> H. Hexmoor & D. Kortenkamp (Eds.), </editor> <address> Menlo Park, CA: </address> <publisher> AAAI Press. </publisher>
Reference: <author> Rosenblatt, J. & Payton, D. </author> <year> (1989), </year> <title> A Fine-Grained Alternative to the Subsumption Architecture for Mobile Robot Control. </title> <booktitle> in Proc. of the IEEE/INNS International Joint Conference on Neural Networks, Washington DC, </booktitle> <volume> vol. 2, </volume> <pages> pp. 317-324, </pages> <note> June 1989 (also appears in 1989 AAAI Spring Symposium Series). </note>
Reference-contexts: A compromise between behaviors cannot be achieved in such an all-or-nothing scenario; whenever one behaviors output is inhibited by another, the information and knowledge represented by that behavior is completely lost to the system <ref> (Rosenblatt & Payton, 1989) </ref>. DAMN Arbiters In order to allow multiple considerations to affect vehicle actions concurrently, DAMN uses a scheme where each behavior votes for or against each of a set of possible vehicle actions (Rosenblatt & Payton, 1989). <p> the information and knowledge represented by that behavior is completely lost to the system <ref> (Rosenblatt & Payton, 1989) </ref>. DAMN Arbiters In order to allow multiple considerations to affect vehicle actions concurrently, DAMN uses a scheme where each behavior votes for or against each of a set of possible vehicle actions (Rosenblatt & Payton, 1989). An arbiter then performs command fusion to select the most appropriate action. Although all votes must pass through the command arbiter before an action is taken, the function provided by the arbiter is fairly simple and does not represent the centralized bottleneck of more traditional systems.
Reference: <author> Rosenblatt, J. & Thorpe, C. </author> <year> (1995), </year> <title> Combining Multiple Goals in a Behavior-Based Architecture, </title> <booktitle> to appear in proceedings of 1995 International Conference on Intelligent Robots and Systems (IROS), </booktitle> <address> Pittsburgh, PA, </address> <month> August 7-9, </month> <year> 1995. </year>
Reference: <author> Rosenschein, S. & Kaelbling, L. </author> <year> (1986), </year> <title> The Synthesis of Digital Machines with Provable Epistemic Properties. </title> <booktitle> in proceedings Theoretical Aspects of Reasoning about Knowledge. </booktitle> <pages> pp 83-98. </pages>
Reference-contexts: In the Subsumption Architecture (Brooks, 1986), this prioritization is implicit in the wiring of behavior modules; a higher-level behavior can override the output of a lower-level behavior via an inhibition link. In the Gapps architecture <ref> (Rosenschein & Kaelbling, 1986) </ref>, such priorities are compiled into a mediator which combines inputs from the behaviors through a combinatorial logic circuit which yields the system output; as in the Subsumption Architecture, behaviors consist of finite state automata.
Reference: <author> Simmons, R., Lin, L.J., Fedor, C. </author> <title> (1990) Autonomous Task Control for Mobile Robots, </title> <booktitle> in Proc. IEEE Symposium on Intelligent Control, </booktitle> <address> Philadelphia, PA, </address> <month> September </month> <year> 1990. </year>
Reference-contexts: In hierarchical architectures, each layer controls the layer beneath it and assumes that its commands will be executed as expected. Since expectations are not always met, there is a need to monitor the progress of desired actions and to report failures as they occur <ref> (Simmons, Lin & Fedor, 1990) </ref>. In an unstructured, unknown, or dynamic environment, this approach introduces complexities and inefficiencies which could be avoided if higher level modules participated in the decision-making process without assuming that their commands will be strictly followed.
Reference: <author> Stentz, A. </author> <year> (1993), </year> <title> Optimal and Efficient Path Planning for Unknown and Dynamic Environments, </title> <type> Carnegie-Mellon Technical Report CMU-RI-TR-93-20. </type>
Reference-contexts: The D* planner <ref> (Stentz, 1993) </ref> also creates a grid with backpointers that represent information on how best to reach the goal from any location in the map.
Reference: <author> Stentz, A. & Hebert, M. </author> <year> (1994), </year> <title> A Complete Navigation System for Goal Acquisition in Unknown Environments, </title> <type> Carnegie-Mellon Technical Report CMU-RI-TR-94-7. </type>
Reference: <author> Thorpe, C., Amidi, O., Gowdy, J., Hebert, M. & Pomerleau, D. </author> <year> (1991), </year> <title> Integrating Position Measurement and Image Understanding for Autonomous Vehicle Navigation. </title> <booktitle> Proc. Workshop on High Precision Navigation, </booktitle> <publisher> Springer-Verlag Publisher. </publisher>
Reference-contexts: A Mode Manager was developed at the Hughes Research Labs to be used with DAMN for this purpose, and at CMU Annotated Maps were integrated with DAMN to provide this capability <ref> (Thorpe et al, 1991) </ref>. <p> Action, has been implemented using road following, cross-country navigation, and teleoperation behaviors; they have all been run together with the obstacle avoidance behavior to provide various forms of generating purposeful action ACTION Road Following Cross-Country Teleoperation GOALS Subgoals Gradient Fields D* SAFETY Vehicle Dynamics Obstacle Avoidance Auxiliary while maintaining safety <ref> (Thorpe et al, 1991) </ref>. The third level of competence is comprised of the various map-based goal-seeking behaviors. Cross-country behaviors have been combined with goal-oriented behaviors to produce directed off-road navigation (Keirsey, Payton & Rosenblatt, 1988; Stentz, 1993).
Reference: <author> Yen, J. & Puger, N. </author> <year> (1992), </year> <title> A Fuzzy Logic Based Robot Navigation System, </title> <booktitle> AAAI Fall Symposium. </booktitle>
Reference-contexts: This is similar to defuzzification in Fuzzy Logic systems (Zadeh, 1973; Lee, 1990; Kamada, Naoi & Goto, 1990); indeed an architecture has been implemented which recasts DAMN into a Fuzzy Logic framework <ref> (Yen and Puger, 1992) </ref>. The arbitration process used in DAMN is illustrated in received, (c) a weighted sum of those votes is computed, nd (d), the summed votes are smoothed and interpolated to produce the resulting command sent to the vehicle controller.
Reference: <author> Zadeh, L. </author> <year> (1973), </year> <title> Outline of a New Approach to the Analysis of Complex Systems and Decision Processes, </title> <journal> IEEE Transactions on Systems, Man and Cybernetics, </journal> <volume> Vol 3 No 1, </volume> <month> January </month> <year> 1973 </year>
References-found: 27

