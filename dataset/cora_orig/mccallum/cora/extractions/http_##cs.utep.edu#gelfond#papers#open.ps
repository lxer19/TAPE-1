URL: http://cs.utep.edu/gelfond/papers/open.ps
Refering-URL: http://cs.utep.edu/gelfond/gelfond.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: mgelfond@cs.ep.utexas.edu  halina@ucrengr.ucr.edu  
Title: Reasoning in Open Domains  
Author: Michael Gelfond Halina Przymusinska 
Address: El Paso, Texas 79968  Pomona, Ca. 91768  
Affiliation: Computer Science Department University of Texas at El Paso  Computer Science Department California State University  
Abstract: In this paper we modify the semantics of epistemic specifications (and hence the answer set semantics of extended logic program and disjunctive databases) to allow for reasoning in the absence of domain-closure assumption. This modification increases the expressive power of the language and allows one to explicitly state the domain-closure and other assumptions about the domain of discourse in the language of epistemic specifications. The power of the language is demonstrated by way of examples. In particular we show how open domain assumption can be used to formalize default reasoning in the presence of anonymous exceptions to defaults. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Maarten van Emden and Robert Kowalski. </author> <title> The semantics of predicate logic as a programming language. </title> <journal> Journal of the ACM, </journal> <volume> 23(4) </volume> <pages> 733-742, </pages> <year> 1976. </year>
Reference-contexts: To illustrate this point let us consider the following simple example from the literature: Example 8. Consider a positive logic program: P a and a query Q = 8xP x. Under the domain-closure assumption the semantics of this program is given by its least Herbrand model <ref> [1] </ref>, and hence 's answer to a query Q will be yes. However, if we add to an apparently unrelated fact Rb, the answer of the new program fl to the same query Q becomes no.
Reference: [2] <author> David Etherington, Sarit Kraus, and David Perlis. </author> <title> Nonmonotonicity and the scope of reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 52(3) </volume> <pages> 221-261, </pages> <year> 1991. </year>
Reference-contexts: As another example of applicability of the new semantics to knowledge representation we discuss a possible solution to the problem of anonymous extensions to defaults <ref> [2] </ref>. <p> For instance, a natural circumscriptive formalization minimizing the set of nonflying birds allowing other predicates to vary implies that there are no penguins, etc. An interesting discussion of this and related problems can be found in <ref> [2] </ref>. 6 The example can be easily coded in the language of epistemic 6 It is important to notice that some of the criticism from [2] is based on the understanding of nonmonotonic reasoning as " reasoning that can reach conclusions that are specifications. <p> An interesting discussion of this and related problems can be found in <ref> [2] </ref>. 6 The example can be easily coded in the language of epistemic 6 It is important to notice that some of the criticism from [2] is based on the understanding of nonmonotonic reasoning as " reasoning that can reach conclusions that are specifications. One possible way of doing it is given by axioms (1) - (5) below. 1. <p> This is different from the epistemic view of this paper, according to which all conclusions of epistemic theory must be "strictly" entailed. From this standpoint some of the conclusions viewed as unintuitive <ref> [2] </ref> are to be expected and blamed on inadequate collection of axioms formalizing the problem and not on the formalism itself.
Reference: [3] <author> Michael Gelfond. </author> <title> Epistemic semantics for disjunctive databases. Preprint, ILPS Workshop on Disjunctive Logic Programs, </title> <address> San Diego, Ca., </address> <year> 1991. </year>
Reference-contexts: In this case all pairs of individuals not specified as identical are assumed to be different. To express this assumption we follow the approach from <ref> [3] </ref> and introduce a new binary predicate symbol E which stands for equality.
Reference: [4] <author> Michael Gelfond. </author> <title> Strong introspection. </title> <booktitle> In Proc. AAAI-91, </booktitle> <pages> pages 386-391, </pages> <year> 1991. </year>
Reference-contexts: 1 Introduction Epistemic specifications were introduced in <ref> [4] </ref> as a tool for knowledge representation. They can be viewed as a generalization of "extended disjunctive databases" from [6] capable of expressing powerful forms of introspection. <p> Even though the assumption is undoubtedly useful for a broad range of applications there are cases when it does not properly reflect the properties of the domain of discourse. In this paper we modify the semantics of epistemic specifications from <ref> [4] </ref> (and hence the answer set semantics of extended logic program and disjunctive databases) to allow for reasoning 1 in the absence of domain-closure assumption. <p> F &G iff M j= F and M j= G M j= 9xF iff there is a ground term t from L such that M j= F (t) M j= :F iff M =j F 1 This can be viewed as a further development of the program started in [5], <ref> [4] </ref> where the language of general logic programs has been expended to explicitly express the closed world assumption. <p> Consider again the rules from Example 2 and expand them by two more rules 3. :P x :MP x 4. :Qx :MQx expressing the closed world assumptions for predicates P and Q <ref> [4] </ref>. <p> We also showed how the existence of unknown elements can be used to solve the problem of representing anonymous exten sions to defaults. This, together with previous work in [6], <ref> [4] </ref>, etc. shows the power of logic programming based formalisms as a tool for knowledge representation. 6 Acknowledgments We would like to thank Vladimir Lifschitz, Tom Costello and Bonnie Traylor for useful comments on the form and content of this paper.
Reference: [5] <author> Michael Gelfond and Vladimir Lifschitz. </author> <title> Logic programs with classical negation. </title> <editor> In David Warren and Peter Szeredi, editors, </editor> <booktitle> Logic Programming: Proc. of the Seventh Int'l Conf., </booktitle> <pages> pages 579-597, </pages> <year> 1990. </year>
Reference-contexts: j= F &G iff M j= F and M j= G M j= 9xF iff there is a ground term t from L such that M j= F (t) M j= :F iff M =j F 1 This can be viewed as a further development of the program started in <ref> [5] </ref>, [4] where the language of general logic programs has been expended to explicitly express the closed world assumption.
Reference: [6] <author> Michael Gelfond and Vladimir Lifschitz. </author> <title> Classical negation in logic programs and disjunctive databases. </title> <journal> New Generation Computing, </journal> <pages> pages 365-387, </pages> <year> 1991. </year>
Reference-contexts: 1 Introduction Epistemic specifications were introduced in [4] as a tool for knowledge representation. They can be viewed as a generalization of "extended disjunctive databases" from <ref> [6] </ref> capable of expressing powerful forms of introspection. The semantics of an epistemic specification has been given via the notion of a world view of a collection of vivid theories about the world [8] which can be built by a rational reasoner on the instructions from . <p> We also showed how the existence of unknown elements can be used to solve the problem of representing anonymous exten sions to defaults. This, together with previous work in <ref> [6] </ref>, [4], etc. shows the power of logic programming based formalisms as a tool for knowledge representation. 6 Acknowledgments We would like to thank Vladimir Lifschitz, Tom Costello and Bonnie Traylor for useful comments on the form and content of this paper.
Reference: [7] <author> Michael Gelfond, Halina Przymusinska, and Teodor Przymusinski. </author> <title> On the relationship between cwa, minimal model, and minimal her-brand model semantics. </title> <journal> International Journal of Intelligent Systems, </journal> <volume> 5(5) </volume> <pages> 549-565, </pages> <year> 1990. </year>
Reference-contexts: At the same time the semantics from [11] do not diverge too far from the least Herbrand model semantics. In fact, these two semantics are equivalent for existential queries <ref> [7] </ref>. 7 Our paper can be viewed as an extension of the approach from [11] to epistemic specifications.
Reference: [8] <author> Hector Levesque. </author> <title> Making believers out of computers. </title> <journal> Artificial Intelligence, </journal> <volume> 30:81 - 108, </volume> <year> 1986. </year>
Reference-contexts: They can be viewed as a generalization of "extended disjunctive databases" from [6] capable of expressing powerful forms of introspection. The semantics of an epistemic specification has been given via the notion of a world view of a collection of vivid theories about the world <ref> [8] </ref> which can be built by a rational reasoner on the instructions from .
Reference: [9] <author> Vladimir Lifschitz. </author> <title> On open defaults. </title> <editor> In John Lloyd, editor, </editor> <booktitle> Computational Logic: Symposium Proceedings, </booktitle> <pages> pages 80-95. </pages> <publisher> Springer, </publisher> <year> 1990. </year>
Reference-contexts: This leads to some technical complications but at the same time allows us to define a predicate H which, together with the use of the rules with empty heads is the basic tool for formalization of the domain-closure and other assumptions. <ref> [9] </ref> is another recent paper closely related to the subject of our work. It suggests a variant of Reiter's default logic aimed at formalization of reasoning about domains without domain-closure assumption. In this paper V. <p> Such a preference appears somewhat arbitrary. Unless open or closed domain assumptions are stated explicitly, unknown seems to be more intuitive answer to Q. p (a) It is easy to see that :p (b) is a consequence of according to our semantics while, as mentioned in <ref> [9] </ref>, it is not an F -consequence of . The difference seems to be primarily in the treatment of the relationship between defaults and equality. The application of the default (represented by the second rule) is prohibited in [9] because a can be equal to b while in our case the <p> is a consequence of according to our semantics while, as mentioned in <ref> [9] </ref>, it is not an F -consequence of . The difference seems to be primarily in the treatment of the relationship between defaults and equality. The application of the default (represented by the second rule) is prohibited in [9] because a can be equal to b while in our case the default is applied, which allows us to derive that a and b are different. 5 Conclusions In this paper we modified the semantics of epistemic specifications to allow reasoning in the absence of domain-closure assumption.
Reference: [10] <author> John McCarthy. </author> <title> Applications of circumscription to formalizing common sense knowledge. </title> <journal> Artificial Intelligence, </journal> <volume> 26(3) </volume> <pages> 89-116, </pages> <year> 1986. </year>
Reference-contexts: It may be interesting to look for classes of specifications and/or queries for which E 5 is redundant. 3.3 Anonymous exceptions to defaults Let us now consider a classical flying birds example <ref> [10] </ref>, in which we are told that penguins are birds that do not fly, that birds normally fly, and that Tweety is a bird. The example served as a testing ground for various nonmonotonic formalisms.
Reference: [11] <author> Teodor Przymusinski. </author> <title> On the declarative and procedural semantics of logic programs. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 5 </volume> <pages> 167-205, </pages> <year> 1989. </year>
Reference-contexts: This allows us to avoid the universal query problem under proper definition of an answer to a query both and fl answer unknown to Q. At the same time the semantics from <ref> [11] </ref> do not diverge too far from the least Herbrand model semantics. In fact, these two semantics are equivalent for existential queries [7]. 7 Our paper can be viewed as an extension of the approach from [11] to epistemic specifications. <p> At the same time the semantics from <ref> [11] </ref> do not diverge too far from the least Herbrand model semantics. In fact, these two semantics are equivalent for existential queries [7]. 7 Our paper can be viewed as an extension of the approach from [11] to epistemic specifications. It is worth noting that even in the language of extended logic programs the presence of classical negation stresses the non-classical character of the connective and forces us to abandon the classical notion of model as the basis for the semantics of logic program. <p> The corresponding consequence relation is "ideologically" similar to ours. There are, however, some important technical differences between the two. Consider, for instance an extended logic program : 7 T. Przymusinski's approach is not limited to positive programs. In <ref> [11] </ref> it is extended to perfect model semantics, etc. Another solution of universal query problem is suggested in [14]. It is based on the assumption that the language of any logic program contains infinitely many constants not appearing in it explicitly.
Reference: [12] <author> Raymond Reiter. </author> <title> On closed world data bases. </title> <editor> In Herve Gallaire and Jack Minker, editors, </editor> <booktitle> Logic and Data Bases, </booktitle> <pages> pages 119-140. </pages> <publisher> Plenum Press, </publisher> <address> New York, </address> <year> 1978. </year>
Reference-contexts: This allows us to conclude, say, that a is not a professor without concluding that there are no professors except m and n. 3.2 Unique name assumption. The unique name assumption <ref> [12] </ref> is normally used in settings when one can assume that all the relevant information about the equality of individuals has been specified. In this case all pairs of individuals not specified as identical are assumed to be different.
Reference: [13] <author> Raymond Reiter. </author> <title> Equality and domain closure in first-order databases. </title> <journal> JACM, </journal> <volume> 27 </volume> <pages> 235-249, </pages> <year> 1980. </year>
Reference-contexts: Equating a specification with the set of its ground instances which occurs during the first step was justified by the domain closure assumption <ref> [13] </ref> which asserts that all objects in the domain of discourse have names in the language of . Even though the assumption is undoubtedly useful for a broad range of applications there are cases when it does not properly reflect the properties of the domain of discourse.
Reference: [14] <author> Kenneth Ross. </author> <title> A procedural semantics for well founded negation in logic programming. </title> <booktitle> In Proc. of the eighth Symposium on Principles of Database Systems, </booktitle> <pages> pages 22-34, </pages> <year> 1989. </year>
Reference-contexts: There are, however, some important technical differences between the two. Consider, for instance an extended logic program : 7 T. Przymusinski's approach is not limited to positive programs. In [11] it is extended to perfect model semantics, etc. Another solution of universal query problem is suggested in <ref> [14] </ref>. It is based on the assumption that the language of any logic program contains infinitely many constants not appearing in it explicitly. Under this semantics, both programs and fl answer no to the query Q, which, in a sense, amounts to preferring open domains over the closed ones.
References-found: 14

