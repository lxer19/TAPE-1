URL: ftp://theory.lcs.mit.edu/pub/people/goemans/survey.ps
Refering-URL: http://theory.lcs.mit.edu/~goemans/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: C H A P T E R THE PRIMAL-DUAL METHOD FOR APPROXIMATION ALGORITHMS AND ITS
Author: Michel X. Goemans David P. Williamson Albert W. Tucker 
Note: To appear in: Approximation Algorithms, D. Hochbaum, ed.  Dedicated to the memory of  
Abstract: The primal-dual method is a standard tool in the design of algorithms for combinatorial optimization problems. This chapter shows how the primal-dual method can be modified to provide good approximation algorithms for a wide variety of NP-hard problems. We concentrate on results from recent research applying the primal-dual method to problems in network design. 
Abstract-found: 1
Intro-found: 1
Reference: [AABV95] <author> B. Awerbuch, Y. Azar, A. Blum, and S. Vempala. </author> <title> Improved approximation guarantees for minimum-weight k-trees and prize-collecting salesmen. </title> <booktitle> In Proceedings of the 27th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 277-283, </pages> <year> 1995. </year>
Reference-contexts: This 4.8 EXTENSIONS 45 2-approximation algorithm has been used for deriving approximation algorithms for more complex problems; see <ref> [BCC + 94, GK96, AABV95, BRV95] </ref>. 4.8.3 VERTEX CONNECTIVITY PROBLEMS So far all network design problems discussed have involved finding minimum-cost subgraphs with certain edge-connectivity properties. However, the primal-dual method can also be applied to some vertex-connectivity problems.
Reference: [AG94] <author> M. Aggarwal and N. Garg. </author> <title> A scaling technique for better network design. </title> <booktitle> In Proceedings of the 5th Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 233-240, </pages> <year> 1994. </year>
Reference: [AKR95] <author> A. Agrawal, P. Klein, and R. Ravi. </author> <title> When trees collide: An approximation algorithm for the generalized Steiner problem on networks. </title> <journal> SIAM Journal on Computing, </journal> <volume> 24 </volume> <pages> 440-456, </pages> <year> 1995. </year>
Reference-contexts: This line of research started with a paper by Agrawal, Klein, and Ravi <ref> [AKR95] </ref>, who introduced a powerful modification of the basic method. Our survey will focus mostly on these problems and results. <p> Once this is in place, it becomes quite simple to apply these algorithms and proofs to a variety of problems, such as the vertex cover problem [BYE81], the edge covering problem [GW94a], the minimum-weight perfect matching problem [GW95a], the survivable network design problem <ref> [AKR95, WGMV95] </ref>, the prize-collecting traveling salesman problem [GW95a], and the minimum multicut problem in trees [GVY93b]. <p> In the context of approximation algorithms for network design problems, this uniform increase rule on minimal violated sets was first used by Agrawal, Klein, and Ravi <ref> [AKR95] </ref> without reference to linear programming; its use was broadened and the linear programming made explicit in a paper of the authors [GW95a]. <p> In this case, the primal-dual algorithm we have presented simulates an algorithm of Agrawal, Klein, and Ravi <ref> [AKR95] </ref>. Their algorithm was the first approximation algorithm for this problem 4.6 0-1 PROPER FUNCTIONS 31 and has motivated much of the authors' research in this area. When p = 1, the problem reduces to the classical Steiner tree problem.
Reference: [Bal89] <author> E. Balas. </author> <title> The prize collecting traveling salesman problem. </title> <journal> Networks, </journal> <volume> 19 </volume> <pages> 621-636, </pages> <year> 1989. </year>
Reference-contexts: The version of the prize-collecting TSP is a special case of a more general problem introduced by Balas <ref> [Bal89] </ref>. The prize-collecting Steiner tree 42 CHAPTER 4 PRIMAL-DUAL METHOD FOR APPROXIMATION problem is defined analogously; one needs to find a tree containing the root r which minimizes the sum of the cost of the edges of the tree plus the penalties of the vertices not spanned.
Reference: [BCC + 94] <author> A. Blum, P. Chalasani, D. Coppersmith, W. Pulleyblank, P. Raghavan, and M. Sudan. </author> <title> The minimum latency problem. </title> <booktitle> In Proceedings of the 26th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 163-171, </pages> <year> 1994. </year>
Reference-contexts: This 4.8 EXTENSIONS 45 2-approximation algorithm has been used for deriving approximation algorithms for more complex problems; see <ref> [BCC + 94, GK96, AABV95, BRV95] </ref>. 4.8.3 VERTEX CONNECTIVITY PROBLEMS So far all network design problems discussed have involved finding minimum-cost subgraphs with certain edge-connectivity properties. However, the primal-dual method can also be applied to some vertex-connectivity problems.
Reference: [BGSLW93] <author> D. Bienstock, M. X. Goemans, D. Simchi-Levi, and D. Williamson. </author> <title> A note on the prize collecting traveling salesman problem. </title> <journal> Mathematical Programming, </journal> <volume> 59 </volume> <pages> 413-420, </pages> <year> 1993. </year>
Reference-contexts: The first approximation algorithms for these problems were given by Bienstock, Goemans, Simchi-Levi, and Williamson <ref> [BGSLW93] </ref>: they gave a 5/2-approximation algorithm for the TSP version (assuming the triangle inequality) and a 3-approximation algorithm for the Steiner tree version. The 2-approximation algorithms that we describe here are due to the authors [GW95a].
Reference: [Bir46] <author> G. Birkhoff. </author> <title> Tres observaciones sobre el algebra lineal. </title> <institution> Revista Facultad de Ciencias Exactas, Puras y Aplicadas Universidad Nacional de Tucuman, Serie A, </institution> <month> 5 </month> <pages> 147-151, </pages> <year> 1946. </year>
Reference-contexts: This problem can be formulated as the following integer program: Min e2E subject to: X x ab = 1 a 2 A a:(a;b)2E x e 2 f0; 1g e 2 E: It is well-known that the LP relaxation of this integer program has integer solutions as extreme points (Birkhoff <ref> [Bir46] </ref>, von Neumann [vN53]), so we can drop the integrality constraints and replace them with x e 0.
Reference: [BMMN94] <author> M. Ball, T. L. Magnanti, C. L. Monma, and G. L. Nemhauser. </author> <title> Network Models. </title> <booktitle> Handbooks in Operations Research and Management Science. </booktitle> <publisher> North-Holland, </publisher> <year> 1994. </year>
Reference-contexts: Network design problems arise from many sources, including the design of various transportation systems (such as highways and mass-transit systems), as well as telephone and computer networks. We direct the reader to the book edited by Ball et al. <ref> [BMMN94] </ref> for a broad overview of network design problems, models, and algorithms. For the most part, our survey will concentrate on network design problems on undirected graphs G = (V; E) with nonnegative edge costs c e .
Reference: [BMW89] <author> A. Balakrishnan, T. L. Magnanti, and R. Wong. </author> <title> A dual-ascent procedure for large-scale uncapacitated network design. </title> <journal> Operations Research, </journal> <volume> 37 </volume> <pages> 716-740, </pages> <year> 1989. </year> <title> 48 CHAPTER 4 PRIMAL-DUAL METHOD FOR APPROXIMATION </title>
Reference-contexts: See for example the work of Erlenkotter [Erl78] for the facility location problem, Wong [Won84] for the Steiner tree problem, Balakrishnan, Magnanti and Wong <ref> [BMW89] </ref> for the fixed-charge network design problem, or the recent Ph.D. thesis of Raghavan [Rag94]. The main question now is whether the simple primal-dual algorithm described in Figure 4.1 produces a solution of small cost.
Reference: [BRV95] <author> A. Blum, R. Ravi, and S. Vempala. </author> <title> A constant-factor approximation algorithm for the k-MST problem. </title> <type> Manuscript, </type> <year> 1995. </year>
Reference-contexts: This 4.8 EXTENSIONS 45 2-approximation algorithm has been used for deriving approximation algorithms for more complex problems; see <ref> [BCC + 94, GK96, AABV95, BRV95] </ref>. 4.8.3 VERTEX CONNECTIVITY PROBLEMS So far all network design problems discussed have involved finding minimum-cost subgraphs with certain edge-connectivity properties. However, the primal-dual method can also be applied to some vertex-connectivity problems. <p> EXERCISE 4.23 Show that the algorithm of Figure 4.10 returns a tree such that the sum of the cost of the edges plus twice the sum of the penalties of the vertices not visited is at most twice the cost of the optimum solution. For an application, see <ref> [GK96, BRV95] </ref>.
Reference: [BT95] <author> D. Bertsimas and C.-P. Teo. </author> <title> From valid inequalities to heuristics: A unified view of primal-dual approximation algorithms in covering problems. </title> <booktitle> In Proceedings of the 6th Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 102-111, </pages> <year> 1995. </year>
Reference-contexts: The use of valid inequalities in this primal-dual framework is also considered in Bertsimas and Teo <ref> [BT95] </ref>. We would like to point out that the bound given in Theorem 4.2 is tight in the following sense.
Reference: [BYE81] <author> R. Bar-Yehuda and S. </author> <title> Even. A linear time approximation algorithm for the weighted vertex cover problem. </title> <journal> Journal of Algorithms, </journal> <volume> 2 </volume> <pages> 198-203, </pages> <year> 1981. </year>
Reference-contexts: Many of the approximation algorithms with an LP-based analysis can be viewed as primal-dual, but the first truly primal-dual approximation algorithm in which the integer primal and the dual solutions are constructed at the same time is the algorithm of Bar-Yehuda and Even <ref> [BYE81] </ref> for the vertex cover problem. In the past few years, the power of the primal-dual method has become apparent through a sequence of papers developing this technique for network design problems [AKR95, GW95a, SVY92, KR93, WGMV95, GGW93, AG94, GGP + 94, GW94a, RW95]. <p> Once this is in place, it becomes quite simple to apply these algorithms and proofs to a variety of problems, such as the vertex cover problem <ref> [BYE81] </ref>, the edge covering problem [GW94a], the minimum-weight perfect matching problem [GW95a], the survivable network design problem [AKR95, WGMV95], the prize-collecting traveling salesman problem [GW95a], and the minimum multicut problem in trees [GVY93b]. <p> Conditions (4.4) certainly hold if we choose ff to be the largest cardinality of any set T i : ff = max p i=1 jT i j. This ff-approximation algorithm for the general hitting set problem was discovered by Bar-Yehuda and Even <ref> [BYE81] </ref>; the analysis appeared previously in a paper of Hochbaum [Hoc82], who gave an ff-approximation algorithm using an optimal dual solution. In the special case of the vertex cover problem, every T i has cardinality two and therefore the algorithm is a 2-approximation algorithm.
Reference: [CFN77] <author> G. Cornuejols, M. L. Fisher, and G. L. Nemhauser. </author> <title> Location of bank accounts to optimize float: An analytical study of exact and approximate algorithms. </title> <journal> Management Science, </journal> <volume> 23 </volume> <pages> 789-810, </pages> <year> 1977. </year>
Reference-contexts: Linear programming has long been used to design and analyze approximation algorithms for NP-hard problems, particularly for problems which can be naturally formulated as integer programs. Several approximation algorithms from the seventies use linear programming (LP) in their analysis (see <ref> [Chv79, Lov75, CFN77] </ref>, for example). A 1980 paper by Wolsey [Wol80] highlighted the use of linear programming, and showed that several previously known approximation algorithms could be analyzed using linear programming, including Christofides' algorithm for the TSP [Chr76] and Johnson et al.'s bin packing algorithms [JDU + 74].
Reference: [Chr76] <author> N. Christofides. </author> <title> Worst case analysis of a new heuristic for the traveling salesman problem. </title> <type> Report 388, </type> <institution> Graduate School of Industrial Administration, Carnegie-Mellon University, </institution> <address> Pittsburgh, PA, </address> <year> 1976. </year>
Reference-contexts: A 1980 paper by Wolsey [Wol80] highlighted the use of linear programming, and showed that several previously known approximation algorithms could be analyzed using linear programming, including Christofides' algorithm for the TSP <ref> [Chr76] </ref> and Johnson et al.'s bin packing algorithms [JDU + 74]. In the eighties, several papers appeared which used the optimum solution of a linear program to derive an integer solution; the most common technique given rounds fractional solutions to integer solutions.
Reference: [Chv79] <author> V. Chvatal. </author> <title> A greedy heuristic for the set-covering problem. </title> <journal> Mathematics of Operations Research, </journal> <volume> 4 </volume> <pages> 233-235, </pages> <year> 1979. </year>
Reference-contexts: Linear programming has long been used to design and analyze approximation algorithms for NP-hard problems, particularly for problems which can be naturally formulated as integer programs. Several approximation algorithms from the seventies use linear programming (LP) in their analysis (see <ref> [Chv79, Lov75, CFN77] </ref>, for example). A 1980 paper by Wolsey [Wol80] highlighted the use of linear programming, and showed that several previously known approximation algorithms could be analyzed using linear programming, including Christofides' algorithm for the TSP [Chr76] and Johnson et al.'s bin packing algorithms [JDU + 74]. <p> Thus the primal-dual algorithm yields a 2-approximation algorithm for this problem. It is interesting to observe that another primal-dual algorithm for the hitting set problem (or the set cover problem) due to Chvatal <ref> [Chv79] </ref> (see Chapter 3) gives a performance guarantee of 3 2 for the edge-covering problem. 4.5.2 LOWER-CAPACITATED PARTITIONING PROBLEMS In the lower-capacitated partitioning problems, we wish to find a minimum-cost set of edges that partitions the vertices into trees, paths, or cycles such that each tree, path, or cycle has at
Reference: [Chv83] <author> V. Chvatal. </author> <title> Linear Programming. W.H. </title> <publisher> Freeman and Company, </publisher> <address> New York, NY, </address> <year> 1983. </year>
Reference-contexts: We refer the reader unfamiliar with the basic theorems and terminology of linear programming to introductions in Chvatal <ref> [Chv83] </ref> or Strang [Str88, Ch. 8]. For a more detailed description of the primal-dual method for polynomial-time combinatorial optimization problems, see Papadimitriou and Steiglitz [PS82].
Reference: [CP80] <author> G. Cornuejols and W. Pulleyblank. </author> <title> A matching problem with side constraints. </title> <journal> Discrete Mathematics, </journal> <volume> 29 </volume> <pages> 135-159, </pages> <year> 1980. </year>
Reference-contexts: When k = 3, the lower-capacitated cycle partitioning problem is also known as the binary two-matching problem; when k = 4, it is also known as the triangle-free binary two-matching problem. The lower-capacitated cycle partitioning problem is NP-complete for k 5 (Papadimitriou in Cornuejols and Pulleyblank <ref> [CP80] </ref> for k 6 and Vornberger [Vor79] for k = 5), polynomially solvable for k = 2 or 3 (Edmonds and Johnson [EJ70]), while its complexity for k = 4 is open.
Reference: [DFF56] <author> G. B. Dantzig, L. R. Ford, and D. R. Fulkerson. </author> <title> A primal-dual algorithm for linear programs. </title> <editor> In H. W. Kuhn and A. W. Tucker, editors, </editor> <booktitle> Linear Inequalities and Related Systems, </booktitle> <pages> pages 171-181. </pages> <publisher> Princeton University Press, </publisher> <address> Princeton, NJ, </address> <year> 1956. </year>
Reference-contexts: Many of these ideas and tools are still in use today, 1 2 CHAPTER 4 PRIMAL-DUAL METHOD FOR APPROXIMATION and form the bedrock of our understanding of combinatorial optimization. One of these tools is the primal-dual method. It was proposed by Dantzig, Ford, and Fulkerson <ref> [DFF56] </ref> as another means of solving linear programs. Ironically, their inspiration came from combinatorial optimization. In the early 1930s, Egervary [Ege31] proved a min-max relation for the assignment problem (or the minimum-cost bipartite perfect matching problem) by reducing it to a known min-max result for maximum cardinality matchings.
Reference: [Dij59] <author> E. W. Dijkstra. </author> <title> A note on two problems in connexion with graphs. </title> <journal> Numerische Mathematik, </journal> <volume> 1 </volume> <pages> 269-271, </pages> <year> 1959. </year>
Reference-contexts: The main feature of the primal-dual method is that it allows a weighted optimization problem to be reduced to a purely combinatorial, unweighted problem. Most of the fundamental algorithms in combinatorial optimization either use the method or can be understood in terms of it, including Dijkstra's shortest path algorithm <ref> [Dij59] </ref>, Ford and Fulk-erson's network flow algorithm [FF56], Edmonds' non-bipartite matching algorithm [Edm65] and, of course, Kuhn's assignment algorithm. The primal-dual method as described above has been used to solve problems that can be modelled as linear programs; the method simply leads to efficient polynomial-time algorithms for solving these problems. <p> We show that each of these design rules is implicit in several long-known primal-dual algorithms that solve network design problems exactly, namely Dijkstra's shortest s-t path algorithm <ref> [Dij59] </ref>, Edmonds' minimum-cost branching algorithm [Edm67], and Kruskal's minimum spanning tree algorithm [Kru56]. The generic algorithms reduce to these exact algorithms for these problems. The survey is structured as follows. <p> All these special cases, except for the vertex cover problem, are known to be polynomially solvable. Dijkstra's algorithm <ref> [Dij59] </ref> solves the shortest path problem, Edmonds' algorithm [Edm67] solves the minimum-cost arborescence problem, while Kruskal's greedy algorithm [Kru56] solves the minimum spanning tree problem. <p> Also, for k =2 S, l (k) simply becomes min (l (k); l (j) + c jk ). By now, the reader must have realized that the l (:) values are simply the labels in Dijkstra's algorithm <ref> [Dij59] </ref> for the shortest path problem. Keeping track of the a (:) values is thus not necessary in this case, but will be useful in more sophisticated uses of the primal-dual method.
Reference: [Edm65] <author> J. Edmonds. </author> <title> Maximum matching and a polyhedron with 0,1-vertices. </title> <journal> Journal of Research of the National Bureau of Standards B, </journal> <volume> 69B:125-130, </volume> <year> 1965. </year>
Reference-contexts: Most of the fundamental algorithms in combinatorial optimization either use the method or can be understood in terms of it, including Dijkstra's shortest path algorithm [Dij59], Ford and Fulk-erson's network flow algorithm [FF56], Edmonds' non-bipartite matching algorithm <ref> [Edm65] </ref> and, of course, Kuhn's assignment algorithm. The primal-dual method as described above has been used to solve problems that can be modelled as linear programs; the method simply leads to efficient polynomial-time algorithms for solving these problems. <p> This problem can be solved in polynomial time by a primal-dual algorithm discovered by Ed-monds <ref> [Edm65] </ref>. The fastest strongly polynomial time implementation of Ed-monds' algorithm is due to Gabow [Gab90]. Its running time is O (n (m +n log n)).
Reference: [Edm67] <author> J. Edmonds. </author> <title> Optimum branchings. </title> <journal> Journal of Research of the National Bureau of Standards B, </journal> <volume> 71B:233-240, </volume> <year> 1967. </year>
Reference-contexts: We show that each of these design rules is implicit in several long-known primal-dual algorithms that solve network design problems exactly, namely Dijkstra's shortest s-t path algorithm [Dij59], Edmonds' minimum-cost branching algorithm <ref> [Edm67] </ref>, and Kruskal's minimum spanning tree algorithm [Kru56]. The generic algorithms reduce to these exact algorithms for these problems. The survey is structured as follows. In the next section, we review the classical primal-dual method for solving linear programs and optimization problems that can be modelled as linear programs. <p> All these special cases, except for the vertex cover problem, are known to be polynomially solvable. Dijkstra's algorithm [Dij59] solves the shortest path problem, Edmonds' algorithm <ref> [Edm67] </ref> solves the minimum-cost arborescence problem, while Kruskal's greedy algorithm [Kru56] solves the minimum spanning tree problem. <p> Thus the parameter fi is equal to 1, and the primal-dual algorithm delivers an optimum solution. This elegant algorithm is due to Edmonds <ref> [Edm67] </ref>. We should point out that in the case of the arborescence problem, deleting the edges in reverse is crucial (while this was not the case for the shortest path problem). <p> The algorithm therefore constructs a single dual solution proving optimality for any root. This observation was made by Edmonds <ref> [Edm67] </ref>. Another application of this variant of the primal-dual algorithm will be discussed in Section 4.5. Our final design rule comes from considering the minimum spanning tree problem and the associated greedy algorithm due to Kruskal [Kru56].
Reference: [Ege31] <author> E. </author> <title> Egervary. </title> <journal> Matrixok kombinatorius tujajdonsagairol. Matematikai es Fizikai Lapok, </journal> <volume> 38 </volume> <pages> 16-28, </pages> <year> 1931. </year>
Reference-contexts: One of these tools is the primal-dual method. It was proposed by Dantzig, Ford, and Fulkerson [DFF56] as another means of solving linear programs. Ironically, their inspiration came from combinatorial optimization. In the early 1930s, Egervary <ref> [Ege31] </ref> proved a min-max relation for the assignment problem (or the minimum-cost bipartite perfect matching problem) by reducing it to a known min-max result for maximum cardinality matchings. This lead Kuhn to propose his primal-dual "Hungarian Method" for solving the assignment problem [Kuh55], which then inspired Dantzig, Ford, and Fulkerson.
Reference: [EJ70] <author> J. Edmonds and E. Johnson. </author> <title> Matching: A well-solved class of integer linear programs. </title> <editor> In R. Guy, H. Hanani, N. Sauer, and J. Schonheim, editors, </editor> <booktitle> Proceedings of the Calgary International Conference on Combinatorial Structures and Their Applications, </booktitle> <pages> pages 82-92. </pages> <publisher> Gordon and Breach, </publisher> <year> 1970. </year>
Reference-contexts: The lower-capacitated cycle partitioning problem is NP-complete for k 5 (Papadimitriou in Cornuejols and Pulleyblank [CP80] for k 6 and Vornberger [Vor79] for k = 5), polynomially solvable for k = 2 or 3 (Edmonds and Johnson <ref> [EJ70] </ref>), while its complexity for k = 4 is open. Imielinska, Kalantari, and Khachiyan [IKK93] have shown that the lower-capacitated tree partitioning problem is NP-complete for k 4, even if the edge costs obey the triangle inequality.
Reference: [EJ73] <author> J. Edmonds and E. L. Johnson. </author> <title> Matching, Euler tours and the Chinese postman. </title> <journal> Mathematical Programming, </journal> <volume> 5 </volume> <pages> 88-124, </pages> <year> 1973. </year>
Reference-contexts: Edmonds and Johnson <ref> [EJ73] </ref> have shown that the T -join problem can be solved in polynomial time. The problem corresponds to the proper function f with f (S) = 1 if jS " T j is odd and 0 otherwise.
Reference: [Erl78] <author> D. Erlenkotter. </author> <title> A dual-based procedure fo uncapacitated facility location. </title> <journal> Operations Research, </journal> <volume> 26 </volume> <pages> 992-1009, </pages> <year> 1978. </year>
Reference-contexts: This does not affect the algorithm. 4.3 THE PRIMAL-DUAL METHOD FOR APPROXIMATION ALGORITHMS 11 The primal-dual method as described is also referred to as a dual-ascent algorithm. See for example the work of Erlenkotter <ref> [Erl78] </ref> for the facility location problem, Wong [Won84] for the Steiner tree problem, Balakrishnan, Magnanti and Wong [BMW89] for the fixed-charge network design problem, or the recent Ph.D. thesis of Raghavan [Rag94].
Reference: [FF56] <author> L. R. Ford and D. R. Fulkerson. </author> <title> Maximal flow through a network. </title> <journal> Canadian Journal of Mathematics, </journal> <volume> 8 </volume> <pages> 399-404, </pages> <year> 1956. </year> <note> REFERENCES 49 </note>
Reference-contexts: Most of the fundamental algorithms in combinatorial optimization either use the method or can be understood in terms of it, including Dijkstra's shortest path algorithm [Dij59], Ford and Fulk-erson's network flow algorithm <ref> [FF56] </ref>, Edmonds' non-bipartite matching algorithm [Edm65] and, of course, Kuhn's assignment algorithm. The primal-dual method as described above has been used to solve problems that can be modelled as linear programs; the method simply leads to efficient polynomial-time algorithms for solving these problems.
Reference: [Gab90] <author> H. N. Gabow. </author> <title> Data structures for weighted matching and nearest common ancestors with linking. </title> <booktitle> In Proceedings of the 1st Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 434-443, </pages> <year> 1990. </year>
Reference-contexts: This problem can be solved in polynomial time by a primal-dual algorithm discovered by Ed-monds [Edm65]. The fastest strongly polynomial time implementation of Ed-monds' algorithm is due to Gabow <ref> [Gab90] </ref>. Its running time is O (n (m +n log n)). For integral costs bounded by C, the best weakly polynomial algorithm runs in O (m nff (m; n) logn log nC) time and is due to Gabow and Tarjan [GT91].
Reference: [GGP + 94] <author> M. Goemans, A. Goldberg, S. Plotkin, D. Shmoys, E. Tardos, and D. Williamson. </author> <title> Improved approximation algorithms for network design problems. </title> <booktitle> In Proceedings of the 5th Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 223-232, </pages> <year> 1994. </year>
Reference-contexts: We will give a 2H (f max )-approximation algorithm for any proper function f , where f max = max S f (S) and H (k) = 1 + 1 k ln k. The results presented in this section were initially given in <ref> [WGMV95, GGW93, GGP + 94] </ref>. The main application of an algorithm for general proper functions is the survivable network design problem, as discussed in Section 4.4. As we previously observed, this problem can be modelled by (IP ) with the function f (S) = max i2S;j =2S r ij .
Reference: [GGW93] <author> H. N. Gabow, M. X. Goemans, and D. P. Williamson. </author> <title> An efficient approximation algorithm for the survivable network design problem. </title> <booktitle> In Proceedings of the Third MPS Conference on Integer Programming and Combinatorial Optimization, </booktitle> <pages> pages 57-74, </pages> <year> 1993. </year>
Reference-contexts: This is the original implementation as proposed by the authors in [GW95a]. Faster implementations have been proposed by Klein [Kle94] and Gabow, Goemans and Williamson <ref> [GGW93] </ref>. Even for 0-1 functions obeying maximality, the parameter fl of Theorem 4.4 can be arbitrarily large. For example, consider the problem of finding a tree of minimum cost containing a given vertex s and having at least k vertices. <p> We will give a 2H (f max )-approximation algorithm for any proper function f , where f max = max S f (S) and H (k) = 1 + 1 k ln k. The results presented in this section were initially given in <ref> [WGMV95, GGW93, GGP + 94] </ref>. The main application of an algorithm for general proper functions is the survivable network design problem, as discussed in Section 4.4. As we previously observed, this problem can be modelled by (IP ) with the function f (S) = max i2S;j =2S r ij . <p> Nevertheless, for the uncrossable functions generated by our algorithm, it is possible to find these minimal violated sets in polynomial time by using minimum cut computations. We refer the reader to Williamson et al. [WGMV95], Gabow et al. <ref> [GGW93] </ref>, Williamson [Wil93] and to Exercise 4.19 for details. Williamson et al. [WGMV95] have shown that the algorithm of Figure 4.4 is a 2-approximation algorithm for any uncrossable function; it runs in polynomial time given a polynomial-time algorithm to compute h and the minimal violated sets. <p> Prove that F is feasible if and only if the jV j 1 cuts induced by the Gomory-Hu cut equivalent tree [GH61] of F have the required number of edges <ref> [GGW93] </ref>. EXERCISE 4.18 Consider the uncrossable function h p defined in phase p of the algorithm of Figure 4.9. <p> EXERCISE 4.19 Using Exercises 4.17-4.18, show how to find the minimal violated sets for the uncrossable function h p of the algorithm of Figure 4.9 40 CHAPTER 4 PRIMAL-DUAL METHOD FOR APPROXIMATION in polynomial time. More efficient solutions to this exercise can be found in <ref> [WGMV95, GGW93, Wil93] </ref>. EXERCISE 4.20 Prove Theorem 4.8.
Reference: [GH61] <author> R. Gomory and T. Hu. </author> <title> Multi-terminal network flows. </title> <journal> SIAM Journal of Applied Mathematics, </journal> <volume> 9 </volume> <pages> 551-570, </pages> <year> 1961. </year>
Reference-contexts: Given a general proper function f , consider the problem of checking the feasibility of a set F of edges. Prove that F is feasible if and only if the jV j 1 cuts induced by the Gomory-Hu cut equivalent tree <ref> [GH61] </ref> of F have the required number of edges [GGW93]. EXERCISE 4.18 Consider the uncrossable function h p defined in phase p of the algorithm of Figure 4.9.
Reference: [GK96] <author> M. X. Goemans and J. M. Kleinberg. </author> <title> Improved approximation algorithms for the minimum latency problem. </title> <booktitle> To appear in the Proceedings of the Seventh Annual Symposium on Discrete Algorithms, </booktitle> <year> 1996. </year>
Reference-contexts: This 4.8 EXTENSIONS 45 2-approximation algorithm has been used for deriving approximation algorithms for more complex problems; see <ref> [BCC + 94, GK96, AABV95, BRV95] </ref>. 4.8.3 VERTEX CONNECTIVITY PROBLEMS So far all network design problems discussed have involved finding minimum-cost subgraphs with certain edge-connectivity properties. However, the primal-dual method can also be applied to some vertex-connectivity problems. <p> EXERCISE 4.23 Show that the algorithm of Figure 4.10 returns a tree such that the sum of the cost of the edges plus twice the sum of the penalties of the vertices not visited is at most twice the cost of the optimum solution. For an application, see <ref> [GK96, BRV95] </ref>.
Reference: [GLS88] <author> M. Grotschel, L. Lovasz, and A. Schrijver. </author> <title> Geometric Algorithms and Combinatorial Optimization. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1988. </year>
Reference-contexts: The problem can be solved in polynomial time via a reduction to the minimum-weight perfect matching 4.5 DOWNWARDS MONOTONE FUNCTIONS 25 problem (see Grotschel, Lovasz, and Schrijver <ref> [GLS88, p. 259] </ref>). The problem can be modelled by the downwards monotone function f (S) = 1 iff jSj = 1. Thus the primal-dual algorithm yields a 2-approximation algorithm for this problem.
Reference: [GMS94] <author> M. Grotschel, C. L. Monma, and M. Stoer. </author> <title> Design of survivable networks. </title> <booktitle> In Handbook in Operations Research and Management Science. </booktitle> <publisher> North-Holland, </publisher> <year> 1994. </year>
Reference-contexts: The survivable network design problem is used to model a problem in the design of fiber-optic telephone networks <ref> [GMS94, Sto92] </ref>. It finds the minimum-cost network such that nodes i and j will still be connected even if r ij 1 edges of the network fail.
Reference: [GT91] <author> H. N. Gabow and R. E. Tarjan. </author> <title> Faster scaling algorithms for general graph-matching problems. </title> <journal> Journal of the ACM, </journal> <volume> 38 </volume> <pages> 815-853, </pages> <year> 1991. </year>
Reference-contexts: Its running time is O (n (m +n log n)). For integral costs bounded by C, the best weakly polynomial algorithm runs in O (m nff (m; n) logn log nC) time and is due to Gabow and Tarjan <ref> [GT91] </ref>. These algorithms are fairly complicated and, in fact, time-consuming for large instances that arise in practice. This motivated the search for faster approximation algorithms. Reingold and Tarjan [RT81] have shown that the greedy procedure has a tight performance guarantee of 4 3 n 0:585 for general nonnegative cost functions. <p> Supowit, Plaisted and Reingold [SPR80] and Plaisted [Pla84] have proposed an O (min (n 2 logn; m log 2 n)) time approximation algorithm for instances that obey the triangle inequality. Their algorithm has a tight performance guarantee of 2 log 3 (1:5n). As shown by Gabow and Tarjan <ref> [GT91] </ref>, an exact scaling algorithm for the maximum-weight matching problem can be used to obtain an (1 + 1=n a )- approximation algorithm (a 0) for the minimum-weight perfect matching problem.
Reference: [GVY93a] <author> N. Garg, V. Vazirani, and M. Yannakakis. </author> <title> Primal-dual approximation algorithms for integral flow and multicut in trees, with applications to matching and set cover. </title> <booktitle> In Proceedings of the 20th International Colloquium on Automata, Languages and Programming, </booktitle> <year> 1993. </year> <note> To appear in Algorithmica under the title "Primal-dual approximation algorithms for integral flow and multicut in trees". </note>
Reference-contexts: In this section, we show that the method can be applied to other problems as well. 4.8.1 MINIMUM MULTICUT IN TREES The primal-dual method can be applied to problems that are not network design problems. For example, Garg, Vazirani, and Yannakakis <ref> [GVY93a] </ref> have given a primal-dual 2-approximation algorithm for the problem of finding a minimum multicut in a tree. <p> Then, among the violated sets T i , we choose a set that maximizes d i . The resulting algorithm is the algorithm proposed by Garg et al. <ref> [GVY93a] </ref>. THEOREM 4.10 The algorithm given in Figure 4.2 is a 2-approximation algorithm for the minimum multicut problem in trees. Proof. We will apply Theorem 4.1.
Reference: [GVY93b] <author> N. Garg, V. V. Vazirani, and M. Yannakakis. </author> <title> Approximate max-flow min-(multi)cut theorems and their applications. </title> <booktitle> In Proceedings of the 25th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 698-707, </pages> <year> 1993. </year>
Reference-contexts: simple to apply these algorithms and proofs to a variety of problems, such as the vertex cover problem [BYE81], the edge covering problem [GW94a], the minimum-weight perfect matching problem [GW95a], the survivable network design problem [AKR95, WGMV95], the prize-collecting traveling salesman problem [GW95a], and the minimum multicut problem in trees <ref> [GVY93b] </ref>. We show that each of these design rules is implicit in several long-known primal-dual algorithms that solve network design problems exactly, namely Dijkstra's shortest s-t path algorithm [Dij59], Edmonds' minimum-cost branching algorithm [Edm67], and Kruskal's minimum spanning tree algorithm [Kru56].
Reference: [GW94a] <author> M. X. Goemans and D. P. Williamson. </author> <title> .878-approximation algorithms for MAX CUT and MAX 2SAT. </title> <booktitle> In Proceedings of the 26th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 422-431, </pages> <year> 1994. </year>
Reference-contexts: Once this is in place, it becomes quite simple to apply these algorithms and proofs to a variety of problems, such as the vertex cover problem [BYE81], the edge covering problem <ref> [GW94a] </ref>, the minimum-weight perfect matching problem [GW95a], the survivable network design problem [AKR95, WGMV95], the prize-collecting traveling salesman problem [GW95a], and the minimum multicut problem in trees [GVY93b].
Reference: [GW94b] <author> M. X. Goemans and D. P. Williamson. </author> <title> Approximating minimum-cost graph problems with spanning tree edges. </title> <journal> Operations Research Letters, </journal> <volume> 16 </volume> <pages> 183-189, </pages> <year> 1994. </year>
Reference-contexts: Imielinska, Kalantari, and Khachiyan [IKK93] showed how to select a subset of the edges of a minimum spanning tree to get a 2-approximation algorithm for the tree partitioning problem and a 4-approximation algorithm for the cycle partitioning problem. A subsequent paper of the authors <ref> [GW94b] </ref> showed how spanning tree edges could be used for any downwards monotone function. 4.5.3 LOCATION-DESIGN AND LOCATION-ROUTING PROBLEMS The primal-dual method can be used to solve a problem in network design and vehicle routing. Many problems of this type require two levels of decisions. <p> The authors have generalized this algorithm to a 2-approximation algorithm for downwards monotone functions f : 2 V ! N for the integer program (IP ) with the constraint x e 2 N <ref> [GW94b] </ref>. EXERCISE 4.7 Show that the performance guarantee in the statement of Theorem 4.5 can be improved to 2 1=l where l = jfv : f (fvg) = 1gj.
Reference: [GW95a] <author> M. X. Goemans and D. P. Williamson. </author> <title> A general approximation technique for constrained forest problems. </title> <journal> SIAM Journal on Computing, </journal> <volume> 24 </volume> <pages> 296-317, </pages> <year> 1995. </year>
Reference-contexts: Once this is in place, it becomes quite simple to apply these algorithms and proofs to a variety of problems, such as the vertex cover problem [BYE81], the edge covering problem [GW94a], the minimum-weight perfect matching problem <ref> [GW95a] </ref>, the survivable network design problem [AKR95, WGMV95], the prize-collecting traveling salesman problem [GW95a], and the minimum multicut problem in trees [GVY93b]. <p> Once this is in place, it becomes quite simple to apply these algorithms and proofs to a variety of problems, such as the vertex cover problem [BYE81], the edge covering problem [GW94a], the minimum-weight perfect matching problem <ref> [GW95a] </ref>, the survivable network design problem [AKR95, WGMV95], the prize-collecting traveling salesman problem [GW95a], and the minimum multicut problem in trees [GVY93b]. We show that each of these design rules is implicit in several long-known primal-dual algorithms that solve network design problems exactly, namely Dijkstra's shortest s-t path algorithm [Dij59], Edmonds' minimum-cost branching algorithm [Edm67], and Kruskal's minimum spanning tree algorithm [Kru56]. <p> In the context of approximation algorithms for network design problems, this uniform increase rule on minimal violated sets was first used by Agrawal, Klein, and Ravi [AKR95] without reference to linear programming; its use was broadened and the linear programming made explicit in a paper of the authors <ref> [GW95a] </ref>. <p> Keeping only the smallest edge between two components, one derives a running time of O (n 2 logn) for all queue operations and this is the overall running time of the algorithm. This is the original implementation as proposed by the authors in <ref> [GW95a] </ref>. Faster implementations have been proposed by Klein [Kle94] and Gabow, Goemans and Williamson [GGW93]. Even for 0-1 functions obeying maximality, the parameter fl of Theorem 4.4 can be arbitrarily large. <p> This illustrates one of the benefits of the primal-dual method: the dual lower bound can be used to prove stronger results. A paper of the authors <ref> [GW95a] </ref> provided the first 2-approximation algorithms for these problems. Imielinska, Kalantari, and Khachiyan [IKK93] showed how to select a subset of the edges of a minimum spanning tree to get a 2-approximation algorithm for the tree partitioning problem and a 4-approximation algorithm for the cycle partitioning problem. <p> It encompasses very diverse problems such as the shortest path problem, the minimum-weight T -join problem, the generalized Steiner tree problem, or the point-to-point connection problem. Later in this section, we elaborate on some of these applications. The work described in this section appeared in <ref> [GW95a] </ref>, the first paper of the authors on the use of the primal-dual method for network design problems. As with downwards monotone functions, the primal-dual algorithm described in Figure 4.5 is a 2-approximation algorithm. <p> The 2-approximation algorithms that we describe here are due to the authors <ref> [GW95a] </ref>. We first concentrate on deriving a 2-approximation algorithm for the prize-collecting Steiner tree problem; we will then show how a 2-approximation algorithm for the prize-collecting TSP can be derived from it.
Reference: [GW95b] <author> M. X. Goemans and D. P. Williamson. </author> <title> Primal-dual approximation algorithms for feedback problems in planar graphs. </title> <type> Manuscript, </type> <year> 1995. </year> <title> 50 CHAPTER 4 PRIMAL-DUAL METHOD FOR APPROXIMATION </title>
Reference-contexts: Indeed, primal-dual techniques have also been applied to derive approximation algorithms for other problems, such as the feedback vertex set problem (see Chapter 9) or some of its variants in planar graphs <ref> [GW95b] </ref>. For network design problems, the moral of the chapter is that two design rules are very important. First, one should grow uniformly the dual variables corresponding to the minimal violated sets. Secondly, one should delete unnecessary edges in a reverse order before the solution is output.
Reference: [Hoc82] <author> D. S. Hochbaum. </author> <title> Approximation algorithms for the set covering and vertex cover problems. </title> <journal> SIAM Journal on Computing, </journal> <volume> 11 </volume> <pages> 555-556, </pages> <year> 1982. </year>
Reference-contexts: In the eighties, several papers appeared which used the optimum solution of a linear program to derive an integer solution; the most common technique given rounds fractional solutions to integer solutions. The reader can 4.1 INTRODUCTION 3 find examples of deterministic rounding and other techniques (as in <ref> [Hoc82] </ref>) in Chapter 3 of this book, while randomized rounding [RT87] is presented in Chapter 11. <p> This ff-approximation algorithm for the general hitting set problem was discovered by Bar-Yehuda and Even [BYE81]; the analysis appeared previously in a paper of Hochbaum <ref> [Hoc82] </ref>, who gave an ff-approximation algorithm using an optimal dual solution. In the special case of the vertex cover problem, every T i has cardinality two and therefore the algorithm is a 2-approximation algorithm.
Reference: [IKK93] <author> C. Imielinska, B. Kalantari, and L. Khachiyan. </author> <title> A greedy heuristic for a minimum-weight forest problem. </title> <journal> Operations Research Letters, </journal> <volume> 14 </volume> <pages> 65-71, </pages> <year> 1993. </year>
Reference-contexts: Imielinska, Kalantari, and Khachiyan <ref> [IKK93] </ref> have shown that the lower-capacitated tree partitioning problem is NP-complete for k 4, even if the edge costs obey the triangle inequality. <p> This illustrates one of the benefits of the primal-dual method: the dual lower bound can be used to prove stronger results. A paper of the authors [GW95a] provided the first 2-approximation algorithms for these problems. Imielinska, Kalantari, and Khachiyan <ref> [IKK93] </ref> showed how to select a subset of the edges of a minimum spanning tree to get a 2-approximation algorithm for the tree partitioning problem and a 4-approximation algorithm for the cycle partitioning problem. <p> Using the notation developed in the previous section, this reduces to v2H d v 2jW j, which was proved above. This proves that the algorithm of 28 CHAPTER 4 PRIMAL-DUAL METHOD FOR APPROXIMATION Further variations on the algorithm also yield 2-approximation algorithms. Imielinska et al. <ref> [IKK93] </ref> give a 2-approximation algorithm for the lower capaci-tated tree problem that selects appropriate edges of a minimum spanning tree in order of increasing cost, rather than deleting edges in order of decreasing cost.
Reference: [JDU + 74] <author> D. Johnson, A. Demers, J. Ullman, M. Garey, and R. Graham. </author> <title> Worst-case performance bounds for simple one-dimensional packing problems. </title> <journal> SIAM Journal on Computing, </journal> <volume> 3 </volume> <pages> 299-325, </pages> <year> 1974. </year>
Reference-contexts: A 1980 paper by Wolsey [Wol80] highlighted the use of linear programming, and showed that several previously known approximation algorithms could be analyzed using linear programming, including Christofides' algorithm for the TSP [Chr76] and Johnson et al.'s bin packing algorithms <ref> [JDU + 74] </ref>. In the eighties, several papers appeared which used the optimum solution of a linear program to derive an integer solution; the most common technique given rounds fractional solutions to integer solutions.
Reference: [JP91] <author> M. Junger and W. Pulleyblank. </author> <title> New primal and dual matching heuristics. </title> <institution> Research Report 91.105, Universitat zu Koln, </institution> <year> 1991. </year>
Reference-contexts: This algorithm has a performance guarantee of 2 2 n . Often the vertices of matching instances are given as points in the plane; the cost of an edge is then the Euclidean distance between its endpoints. Junger and Pulleyblank <ref> [JP91] </ref> have observed that the dual variables of matching problems in this case correspond nicely to "moats" around sets of points. That is, a dual variable y S corresponds to a region of the plane of width y S surrounding the vertices of S.
Reference: [Kle94] <author> P. N. Klein. </author> <title> A data structure for bicategories, with application to speeding up an approximation algorithm. </title> <journal> Information Processing Letters, </journal> <volume> 52 </volume> <pages> 303-307, </pages> <year> 1994. </year>
Reference-contexts: This is the original implementation as proposed by the authors in [GW95a]. Faster implementations have been proposed by Klein <ref> [Kle94] </ref> and Gabow, Goemans and Williamson [GGW93]. Even for 0-1 functions obeying maximality, the parameter fl of Theorem 4.4 can be arbitrarily large. For example, consider the problem of finding a tree of minimum cost containing a given vertex s and having at least k vertices.
Reference: [KR93] <author> P. Klein and R. Ravi. </author> <title> When cycles collapse: A general approximation technique for constrained two-connectivity problems. </title> <booktitle> In Proceedings of the Third MPS Conference on Integer Programming and Combinatorial Optimization, </booktitle> <pages> pages 39-55, </pages> <year> 1993. </year> <note> Also appears as Brown University Technical Report CS-92-30. </note>
Reference-contexts: The use of the reverse delete step will also be crucial in the design of approximation algorithms for network design problems described in the following sections; in this context, this idea was first used by Klein and Ravi <ref> [KR93] </ref> and Saran, Vazirani, and Young [SVY92]. Several variants of the primal-dual algorithm described in Figure 4.2 can be designed, without affecting the proof technique for the performance guarantee. <p> The algorithm for general proper functions is formalized in in many graph algorithms; in terms of primal-dual approximation algorithms it was first used by Klein and Ravi <ref> [KR93] </ref> and Saran et al. [SVY92].
Reference: [Kru56] <author> J. Kruskal. </author> <title> On the shortest spanning subtree of a graph and the traveling salesman problem. </title> <journal> Proceedings of the American Mathematical Society, </journal> <volume> 7 </volume> <pages> 48-50, </pages> <year> 1956. </year>
Reference-contexts: We show that each of these design rules is implicit in several long-known primal-dual algorithms that solve network design problems exactly, namely Dijkstra's shortest s-t path algorithm [Dij59], Edmonds' minimum-cost branching algorithm [Edm67], and Kruskal's minimum spanning tree algorithm <ref> [Kru56] </ref>. The generic algorithms reduce to these exact algorithms for these problems. The survey is structured as follows. In the next section, we review the classical primal-dual method for solving linear programs and optimization problems that can be modelled as linear programs. <p> All these special cases, except for the vertex cover problem, are known to be polynomially solvable. Dijkstra's algorithm [Dij59] solves the shortest path problem, Edmonds' algorithm [Edm67] solves the minimum-cost arborescence problem, while Kruskal's greedy algorithm <ref> [Kru56] </ref> solves the minimum spanning tree problem. For many special cases (again excluding the vertex cover problem), the number of sets to hit is exponential in the size of the instance; we will see shortly that this does not lead to any difficulties. <p> This observation was made by Edmonds [Edm67]. Another application of this variant of the primal-dual algorithm will be discussed in Section 4.5. Our final design rule comes from considering the minimum spanning tree problem and the associated greedy algorithm due to Kruskal <ref> [Kru56] </ref>. In the case of the minimum spanning tree problem, the violation oracle with minimal violated set rule can be implemented by first computing the connected components of (V; A) and, if there are k components where k &gt; 1, by selecting any such component, say S.
Reference: [Kuh55] <author> H. W. Kuhn. </author> <title> The Hungarian method for the assignment problem. </title> <journal> Naval Research Logistics Quarterly, </journal> <volume> 2 </volume> <pages> 83-97, </pages> <year> 1955. </year>
Reference-contexts: In the early 1930s, Egervary [Ege31] proved a min-max relation for the assignment problem (or the minimum-cost bipartite perfect matching problem) by reducing it to a known min-max result for maximum cardinality matchings. This lead Kuhn to propose his primal-dual "Hungarian Method" for solving the assignment problem <ref> [Kuh55] </ref>, which then inspired Dantzig, Ford, and Fulkerson. Although the primal-dual method in its original form has not survived as an algorithm for linear programming, it has found widespread use as a means of devising algorithms for problems in combinatorial optimization.
Reference: [Lap88] <author> G. </author> <title> Laporte. Location-routing problems. </title> <editor> In B. L. Golden and A. A. Assad, editors, </editor> <title> Vehicle routing: </title> <booktitle> Methods and studies, </booktitle> <pages> pages 163-197. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1988. </year>
Reference-contexts: There is typically a set of possible locations and a fixed cost is associated with each of them. Once the locations of the depots are decided, the second level deals with the design or routing per se. These problems are called location-design or location-routing problems (Laporte <ref> [Lap88] </ref>). The algorithm can be applied to one of the simplest location-routing problems. <p> Once the locations of the depots are decided, the second level deals with the design or routing per se. These problems are called location-design or location-routing problems (Laporte [Lap88]). The algorithm can be applied to one of the simplest location-routing problems. In this problem (Laporte et al. <ref> [LNP83, Lap88] </ref>), we need to select depots among a subset D of vertices of a graph G = (V; E) and cover all vertices in V with a set of cycles, each containing a selected depot.
Reference: [LMSL92] <author> C.-L. Li, S. T. McCormick, and D. Simchi-Levi. </author> <title> The point-to-point delivery and connection problems: Complexity and algorithms. </title> <journal> Discrete Applied Mathematics, </journal> <volume> 36 </volume> <pages> 267-292, </pages> <year> 1992. </year>
Reference-contexts: : :; c p g of sources and a set D = fd 1 ; : : :; d p g of destinations in a graph G = (V; E) and we need to find a minimum-cost set F of edges such that each source-destination pair is connected in F <ref> [LMSL92] </ref>. This problem arises in the context of circuit switching and VLSI design. The fixed destination case in which c i is required to be connected to d i is a special case of the generalized Steiner tree problem where T i = fc i ; d i g. <p> Observe that every moat is intersected by exactly one edge of the matching, implying that the matching and the dual solution (or moat packing) are both optimal. 34 CHAPTER 4 PRIMAL-DUAL METHOD FOR APPROXIMATION problem is NP-complete <ref> [LMSL92] </ref>.
Reference: [LNP83] <author> G. Laporte, Y. Nobert, and P. Pelletier. </author> <title> Hamiltonian location problems. </title> <journal> European Journal of Operations Research, </journal> <volume> 12 </volume> <pages> 82-89, </pages> <year> 1983. </year>
Reference-contexts: Once the locations of the depots are decided, the second level deals with the design or routing per se. These problems are called location-design or location-routing problems (Laporte [Lap88]). The algorithm can be applied to one of the simplest location-routing problems. In this problem (Laporte et al. <ref> [LNP83, Lap88] </ref>), we need to select depots among a subset D of vertices of a graph G = (V; E) and cover all vertices in V with a set of cycles, each containing a selected depot.
Reference: [Lov75] <author> L. Lovasz. </author> <title> On the ratio of optimal integral and fractional covers. </title> <journal> Discrete Mathematics, </journal> <volume> 13 </volume> <pages> 383-390, </pages> <year> 1975. </year>
Reference-contexts: Linear programming has long been used to design and analyze approximation algorithms for NP-hard problems, particularly for problems which can be naturally formulated as integer programs. Several approximation algorithms from the seventies use linear programming (LP) in their analysis (see <ref> [Chv79, Lov75, CFN77] </ref>, for example). A 1980 paper by Wolsey [Wol80] highlighted the use of linear programming, and showed that several previously known approximation algorithms could be analyzed using linear programming, including Christofides' algorithm for the TSP [Chr76] and Johnson et al.'s bin packing algorithms [JDU + 74].
Reference: [MSDM96] <author> M. Mihail, D. Shallcross, N. Dean, and M. Mostrel. </author> <title> A commercial application of survivable network design: ITP/INPLANS CCS network topology analyzer. </title> <booktitle> To appear in the Proceedings of the Seventh Annual Symposium on Discrete Algorithms, </booktitle> <year> 1996. </year>
Reference-contexts: Although they did no rigorous testing, they report that the algorithm does well in practice, coming within a few percent of the expected optimal solution <ref> [MSDM96] </ref>. In this chapter, we have shown the power of the primal-dual method for designing approximation algorithms for a wide variety of problems.
Reference: [Nic66] <author> T. Nicholson. </author> <title> Finding the shortest route between two points in a network. </title> <journal> Computer Journal, </journal> <volume> 9 </volume> <pages> 275-280, </pages> <year> 1966. </year>
Reference-contexts: When jT j = 2, the T -join problem reduces to the shortest path problem. The primal-dual algorithm for 0-1 proper functions in this case reduces to a variant of Dijkstra's algorithm that uses bidirectional search (Nicholson <ref> [Nic66] </ref>). 4.6.3 THE MINIMUM-WEIGHT PERFECT MATCHING PROBLEM The minimum-weight perfect matching problem is the problem of finding a minimum-cost set of non-adjacent edges that cover all vertices. This problem can be solved in polynomial time by a primal-dual algorithm discovered by Ed-monds [Edm65].
Reference: [Pla84] <author> D. A. Plaisted. </author> <title> Heuristic matching for graphs satisfying the triangle inequality. </title> <journal> Journal of Algorithms, </journal> <volume> 5 </volume> <pages> 163-179, </pages> <year> 1984. </year>
Reference-contexts: This motivated the search for faster approximation algorithms. Reingold and Tarjan [RT81] have shown that the greedy procedure has a tight performance guarantee of 4 3 n 0:585 for general nonnegative cost functions. Supowit, Plaisted and Reingold [SPR80] and Plaisted <ref> [Pla84] </ref> have proposed an O (min (n 2 logn; m log 2 n)) time approximation algorithm for instances that obey the triangle inequality. Their algorithm has a tight performance guarantee of 2 log 3 (1:5n).
Reference: [PS82] <author> C. H. Papadimitriou and K. Steiglitz. </author> <title> Combinatorial Optimization: Algorithms and Complexity. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1982. </year>
Reference-contexts: We refer the reader unfamiliar with the basic theorems and terminology of linear programming to introductions in Chvatal [Chv83] or Strang [Str88, Ch. 8]. For a more detailed description of the primal-dual method for polynomial-time combinatorial optimization problems, see Papadimitriou and Steiglitz <ref> [PS82] </ref>. Consider the linear program Min c T x subject to: Ax b and its dual Max b T y subject to: A T y c where A 2 Q mfin , c; x 2 Q n , b; y 2 Q m , and T denotes the transpose.
Reference: [Rag94] <author> S. Raghavan. </author> <title> Formulations and algorithms for network design problems with connectivity requirements. </title> <type> PhD thesis, </type> <institution> MIT, </institution> <year> 1994. </year> <note> REFERENCES 51 </note>
Reference-contexts: See for example the work of Erlenkotter [Erl78] for the facility location problem, Wong [Won84] for the Steiner tree problem, Balakrishnan, Magnanti and Wong [BMW89] for the fixed-charge network design problem, or the recent Ph.D. thesis of Raghavan <ref> [Rag94] </ref>. The main question now is whether the simple primal-dual algorithm described in Figure 4.1 produces a solution of small cost.
Reference: [RT81] <author> E. M. Reingold and R. E. Tarjan. </author> <title> On a greedy heuristic for complete matching. </title> <journal> SIAM Journal on Computing, </journal> <volume> 10 </volume> <pages> 676-681, </pages> <year> 1981. </year>
Reference-contexts: These algorithms are fairly complicated and, in fact, time-consuming for large instances that arise in practice. This motivated the search for faster approximation algorithms. Reingold and Tarjan <ref> [RT81] </ref> have shown that the greedy procedure has a tight performance guarantee of 4 3 n 0:585 for general nonnegative cost functions.
Reference: [RT87] <author> P. Raghavan and C. Thompson. </author> <title> Randomized rounding: a technique for provably good algorithms and algorithmic proofs. </title> <journal> Combinatorica, </journal> <volume> 7 </volume> <pages> 365-374, </pages> <year> 1987. </year>
Reference-contexts: The reader can 4.1 INTRODUCTION 3 find examples of deterministic rounding and other techniques (as in [Hoc82]) in Chapter 3 of this book, while randomized rounding <ref> [RT87] </ref> is presented in Chapter 11. In the primal-dual method for approximation algorithms, an approximate solution to the problem and a feasible solution to the dual of an LP relaxation are constructed simultaneously; the performance guarantee is proved by comparing the values of both solutions.
Reference: [RW95] <author> R. Ravi and D. Williamson. </author> <title> An approximation algorithm for minimum-cost vertex-connectivity problems. </title> <booktitle> In Proceedings of the 6th Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 332-341, </pages> <year> 1995. </year> <note> To appear in Algorithmica. </note>
Reference-contexts: However, the primal-dual method can also be applied to some vertex-connectivity problems. Ravi and Williamson <ref> [RW95] </ref> have shown that the primal-dual method gives a 2H (k)- approximation algorithm for the minimum-cost k-vertex-connected subgraph problem, in which one must find a minimum-cost set of edges such that there are at least k vertex-disjoint paths between any pair of vertices.
Reference: [SPR80] <author> K. J. Supowit, D. A. Plaisted, and E. M. Reingold. </author> <title> Heuristics for weighted perfect matching. </title> <booktitle> In Proceedings of the 12th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 398-419, </pages> <year> 1980. </year>
Reference-contexts: This motivated the search for faster approximation algorithms. Reingold and Tarjan [RT81] have shown that the greedy procedure has a tight performance guarantee of 4 3 n 0:585 for general nonnegative cost functions. Supowit, Plaisted and Reingold <ref> [SPR80] </ref> and Plaisted [Pla84] have proposed an O (min (n 2 logn; m log 2 n)) time approximation algorithm for instances that obey the triangle inequality. Their algorithm has a tight performance guarantee of 2 log 3 (1:5n).
Reference: [Sto92] <author> M. Stoer. </author> <title> Design of Survivable Networks, </title> <booktitle> volume 1531 of Lecture Notes in Mathematics. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: The survivable network design problem is used to model a problem in the design of fiber-optic telephone networks <ref> [GMS94, Sto92] </ref>. It finds the minimum-cost network such that nodes i and j will still be connected even if r ij 1 edges of the network fail.
Reference: [Str88] <author> G. Strang. </author> <title> Linear Algebra and its Applications. </title> <publisher> Harcourt Brace Jovanovich, </publisher> <address> San Diego, CA, Third edition, </address> <year> 1988. </year>
Reference-contexts: We refer the reader unfamiliar with the basic theorems and terminology of linear programming to introductions in Chvatal [Chv83] or Strang <ref> [Str88, Ch. 8] </ref>. For a more detailed description of the primal-dual method for polynomial-time combinatorial optimization problems, see Papadimitriou and Steiglitz [PS82].
Reference: [SVY92] <author> H. Saran, V. Vazirani, and N. Young. </author> <title> A primal-dual approach to approximation algorithms for network Steiner problems. </title> <booktitle> In Proceedings of Indo-US workshop on Cooperative Research in Computer Science, </booktitle> <pages> pages 166-168, </pages> <year> 1992. </year>
Reference-contexts: The use of the reverse delete step will also be crucial in the design of approximation algorithms for network design problems described in the following sections; in this context, this idea was first used by Klein and Ravi [KR93] and Saran, Vazirani, and Young <ref> [SVY92] </ref>. Several variants of the primal-dual algorithm described in Figure 4.2 can be designed, without affecting the proof technique for the performance guarantee. One useful variant is to allow the algorithm to increase the dual variable of a set which does not need to be hit. <p> The algorithm for general proper functions is formalized in in many graph algorithms; in terms of primal-dual approximation algorithms it was first used by Klein and Ravi [KR93] and Saran et al. <ref> [SVY92] </ref>.
Reference: [Tar75] <author> R. E. Tarjan. </author> <title> Efficiency of a good but not linear set union algorithm. </title> <journal> Journal of the ACM, </journal> <volume> 22 </volume> <pages> 215-225, </pages> <year> 1975. </year>
Reference-contexts: The algorithm can be implemented quite easily. The connected components can be maintained as a union-find structure of vertices. Then all merging take at most O (nff (n; n)) time overall, where ff is the inverse Acker-mann function and n is the number of vertices <ref> [Tar75] </ref>. To determine which edge to add to A, we can maintain a priority queue of edges, where the key of an edge is its addition time a (e).
Reference: [Vai91] <author> P. Vaidya. </author> <type> Personal communication, </type> <year> 1991. </year>
Reference-contexts: Moreover, if the original exact algorithm runs in O (f (m; n) log C) time, the resulting approximation algorithm runs in O (m p n log n + (1 + a)f (m; n) logn). Vaidya <ref> [Vai91] </ref> obtains a (3 + 2*)-approximation algorithm for minimum-weight perfect matching instances satisfying the triangle inequality. His algorithm runs in O (n 2 log 2:5 n log (1=*)) time.
Reference: [vN53] <author> J. von Neumann. </author> <title> A certain zero-sum two-person game equivalent to the optimal assignment problem. </title> <editor> In H. W. Kuhn and A. W. Tucker, editors, </editor> <title> Contributions to the Theory of Games, </title> <booktitle> II, </booktitle> <pages> pages 5-12. </pages> <publisher> Princeton University Press, </publisher> <address> Princeton, NJ, </address> <year> 1953. </year>
Reference-contexts: can be formulated as the following integer program: Min e2E subject to: X x ab = 1 a 2 A a:(a;b)2E x e 2 f0; 1g e 2 E: It is well-known that the LP relaxation of this integer program has integer solutions as extreme points (Birkhoff [Bir46], von Neumann <ref> [vN53] </ref>), so we can drop the integrality constraints and replace them with x e 0.
Reference: [Vor79] <author> O. Vornberger. </author> <title> Complexity of path problems in graphs. </title> <type> PhD thesis, </type> <institution> Universitat-GH-Paderborn, </institution> <year> 1979. </year>
Reference-contexts: The lower-capacitated cycle partitioning problem is NP-complete for k 5 (Papadimitriou in Cornuejols and Pulleyblank [CP80] for k 6 and Vornberger <ref> [Vor79] </ref> for k = 5), polynomially solvable for k = 2 or 3 (Edmonds and Johnson [EJ70]), while its complexity for k = 4 is open.
Reference: [Wei94] <author> J. Wein. Personal communcation, </author> <year> 1994. </year>
Reference-contexts: They consider both random and real-world instances having between 1; 000 and 131; 072 vertices. The results indicate that the algorithm generates a matching within 2% of optimal in most cases. In over 1,400 experiments, the algorithm was never more than 4% from optimal. Hu and Wein <ref> [Wei94] </ref> implemented the algorithm for the generalized Steiner tree problem, and found that the algorithm was usually within 5% of optimal. Because of the difficulty of finding the optimal solution in this case, their instances had at most 64 vertices.
Reference: [WG94] <author> D. P. Williamson and M. X. Goemans. </author> <title> Computational experience with an approximation algorithm on large-scale Euclidean matching instances. </title> <booktitle> In Proceedings of the 5th Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 355-364, </pages> <year> 1994. </year> <note> To appear in ORSA Journal on Computing. </note>
Reference-contexts: The good news is that the studies of the primal-dual method performed thus far show that it seems to perform very well in practice, at least on some problems. The authors <ref> [WG94] </ref> report computational results with the 2-approximation algorithm for the minimum-weight perfect matching problem under the triangle inequality. They consider both random and real-world instances having between 1; 000 and 131; 072 vertices. The results indicate that the algorithm generates a matching within 2% of optimal in most cases.
Reference: [WGMV95] <author> D. P. Williamson, M. X. Goemans, M. Mihail, and V. V. Vazirani. </author> <title> An approximation algorithm for general graph connectivity problems. </title> <journal> Combinatorica, </journal> <volume> 15 </volume> <pages> 435-454, </pages> <year> 1995. </year>
Reference-contexts: Once this is in place, it becomes quite simple to apply these algorithms and proofs to a variety of problems, such as the vertex cover problem [BYE81], the edge covering problem [GW94a], the minimum-weight perfect matching problem [GW95a], the survivable network design problem <ref> [AKR95, WGMV95] </ref>, the prize-collecting traveling salesman problem [GW95a], and the minimum multicut problem in trees [GVY93b]. <p> We will give a 2H (f max )-approximation algorithm for any proper function f , where f max = max S f (S) and H (k) = 1 + 1 k ln k. The results presented in this section were initially given in <ref> [WGMV95, GGW93, GGP + 94] </ref>. The main application of an algorithm for general proper functions is the survivable network design problem, as discussed in Section 4.4. As we previously observed, this problem can be modelled by (IP ) with the function f (S) = max i2S;j =2S r ij . <p> Nevertheless, for the uncrossable functions generated by our algorithm, it is possible to find these minimal violated sets in polynomial time by using minimum cut computations. We refer the reader to Williamson et al. <ref> [WGMV95] </ref>, Gabow et al. [GGW93], Williamson [Wil93] and to Exercise 4.19 for details. Williamson et al. [WGMV95] have shown that the algorithm of Figure 4.4 is a 2-approximation algorithm for any uncrossable function; it runs in polynomial time given a polynomial-time algorithm to compute h and the minimal violated sets. <p> We refer the reader to Williamson et al. <ref> [WGMV95] </ref>, Gabow et al. [GGW93], Williamson [Wil93] and to Exercise 4.19 for details. Williamson et al. [WGMV95] have shown that the algorithm of Figure 4.4 is a 2-approximation algorithm for any uncrossable function; it runs in polynomial time given a polynomial-time algorithm to compute h and the minimal violated sets. <p> EXERCISE 4.19 Using Exercises 4.17-4.18, show how to find the minimal violated sets for the uncrossable function h p of the algorithm of Figure 4.9 40 CHAPTER 4 PRIMAL-DUAL METHOD FOR APPROXIMATION in polynomial time. More efficient solutions to this exercise can be found in <ref> [WGMV95, GGW93, Wil93] </ref>. EXERCISE 4.20 Prove Theorem 4.8.
Reference: [Wil93] <author> D. P. Williamson. </author> <title> On the design of approximation algorithms for a class of graph problems. </title> <type> PhD thesis, </type> <institution> MIT, </institution> <address> Cambridge, MA, </address> <month> September </month> <year> 1993. </year> <note> Also appears as Tech Report MIT/LCS/TR-584. </note>
Reference-contexts: Nevertheless, for the uncrossable functions generated by our algorithm, it is possible to find these minimal violated sets in polynomial time by using minimum cut computations. We refer the reader to Williamson et al. [WGMV95], Gabow et al. [GGW93], Williamson <ref> [Wil93] </ref> and to Exercise 4.19 for details. Williamson et al. [WGMV95] have shown that the algorithm of Figure 4.4 is a 2-approximation algorithm for any uncrossable function; it runs in polynomial time given a polynomial-time algorithm to compute h and the minimal violated sets. <p> EXERCISE 4.19 Using Exercises 4.17-4.18, show how to find the minimal violated sets for the uncrossable function h p of the algorithm of Figure 4.9 40 CHAPTER 4 PRIMAL-DUAL METHOD FOR APPROXIMATION in polynomial time. More efficient solutions to this exercise can be found in <ref> [WGMV95, GGW93, Wil93] </ref>. EXERCISE 4.20 Prove Theorem 4.8.
Reference: [Win87] <author> P. Winter. </author> <title> Steiner problem in networks: a survey. </title> <journal> Networks, </journal> <volume> 17 </volume> <pages> 129-167, </pages> <year> 1987. </year>
Reference-contexts: When p = 1, the problem reduces to the classical Steiner tree problem. For a long time, the best approximation algorithm for this problem had a performance guarantee of (2 2 k ) (for a survey, see Winter <ref> [Win87] </ref>) but, recently, Zelikovsky [Zel93] obtained an 11 6 approximation algorithm.
Reference: [Wol80] <author> L. A. Wolsey. </author> <title> Heuristic analysis, linear programming and branch and bound. </title> <journal> Mathematical Programming Study, </journal> <volume> 13 </volume> <pages> 121-134, </pages> <year> 1980. </year> <title> 52 CHAPTER 4 PRIMAL-DUAL METHOD FOR APPROXIMATION </title>
Reference-contexts: Several approximation algorithms from the seventies use linear programming (LP) in their analysis (see [Chv79, Lov75, CFN77], for example). A 1980 paper by Wolsey <ref> [Wol80] </ref> highlighted the use of linear programming, and showed that several previously known approximation algorithms could be analyzed using linear programming, including Christofides' algorithm for the TSP [Chr76] and Johnson et al.'s bin packing algorithms [JDU + 74].
Reference: [Won84] <author> R. Wong. </author> <title> A dual ascent approach for Steiner tree problems on a directed graph. </title> <journal> Mathematical Programming, </journal> <volume> 28 </volume> <pages> 271-287, </pages> <year> 1984. </year>
Reference-contexts: This does not affect the algorithm. 4.3 THE PRIMAL-DUAL METHOD FOR APPROXIMATION ALGORITHMS 11 The primal-dual method as described is also referred to as a dual-ascent algorithm. See for example the work of Erlenkotter [Erl78] for the facility location problem, Wong <ref> [Won84] </ref> for the Steiner tree problem, Balakrishnan, Magnanti and Wong [BMW89] for the fixed-charge network design problem, or the recent Ph.D. thesis of Raghavan [Rag94]. The main question now is whether the simple primal-dual algorithm described in Figure 4.1 produces a solution of small cost.

References-found: 75

