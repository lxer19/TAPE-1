URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/CS-TR-95-1269/CS-TR-95-1269.ps.Z
Refering-URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/CS-TR-95-1269/
Root-URL: http://www.cs.wisc.edu
Title: Using the SHORE Object-Oriented Database/File System Paradigm for Information Retrieval  
Author: Bradley S. Rubin Jeffrey F. Naughton 
Abstract: The SHORE (Scaleable Heterogeneous Object REpository) persistent object store under development at the University of Wisconsin-Madison is a hybrid of OODBMS and file system technologies. A primary goal of the SHORE project is to provide a system that facilitates the construction of high functionality data servers for a wide variety of applications. In this paper, we evaluate the suitability of the SHORE system for supporting the implementation of an information retrieval server. Our experience with our implementation of a prototype multimedia information server, Chrysalis, demonstrates that overall the SHORE persistent object store functionality is better suited to supporting the construction of an information retrieval server than the traditional alternatives of file systems, relational database systems, or even current OODBMS. Chrysalis is the first major SHORE application, so this paper also serves as an experience guide for other potential SHORE applications.
Abstract-found: 1
Intro-found: 1
Reference: [Bar93] <editor> D. Barbara, et al. </editor> <booktitle> The Gold mailer. In Proceedings of the International Conference on Data Engineering, </booktitle> <year> 1993. </year>
Reference-contexts: The Semantic File System (SFS) from MIT [Gif91], the Gold mailer project from Matsushita Information Technology Laboratories (MITL) <ref> [Bar93] </ref>, and the project described by Yan and Annevelink [YA94] also share some common characteristics with Chrysalis, In INQUERY/Mneme, document posting lists are stored in an OODB, while the actual documents and the hash table index are stored in a UNIX file system.
Reference: [Bro94a] <author> E. Brown, et al. </author> <title> Fast incremental indexing for full-text information retrieval. </title> <booktitle> In Proceedings of the 20th Very Large Database Conference, </booktitle> <year> 1994. </year>
Reference-contexts: document for manipulation, they are given a UNIX shell prompt and can execute any UNIX command or application program against the document. 3 2.2 Related Work In this paper, we refer to two other implementations of information retrieval applications on object-oriented databases, the INQUERY/Mneme project from the University of Massachusetts <ref> [Bro94a, Bro94b] </ref>, and the Rufus project from IBM Almaden Research Center [Mes91, Sho93]. <p> But today, it is awkward to manipulate objects in both environments. A unified shell capability would be a useful improvement. The INQUERY/Mneme project <ref> [Bro94a, Bro94b] </ref> has demonstrated that storing information retrieval meta-data in an OODB can improve performance over a file system-based implementation, due to more sophisticated buffer management.
Reference: [Bro94b] <author> E. Brown, et al. </author> <title> Supporting full-text information retrieval with a persistent object store. </title> <booktitle> In Proceedings of the 4th International Conference on Extending Database Technology, </booktitle> <pages> pages 365-378, </pages> <year> 1994. </year>
Reference-contexts: document for manipulation, they are given a UNIX shell prompt and can execute any UNIX command or application program against the document. 3 2.2 Related Work In this paper, we refer to two other implementations of information retrieval applications on object-oriented databases, the INQUERY/Mneme project from the University of Massachusetts <ref> [Bro94a, Bro94b] </ref>, and the Rufus project from IBM Almaden Research Center [Mes91, Sho93]. <p> But today, it is awkward to manipulate objects in both environments. A unified shell capability would be a useful improvement. The INQUERY/Mneme project <ref> [Bro94a, Bro94b] </ref> has demonstrated that storing information retrieval meta-data in an OODB can improve performance over a file system-based implementation, due to more sophisticated buffer management.
Reference: [Cat94] <author> R. Cattell. </author> <title> The Object Database Standard: ODMG-93 (Release 1.1). </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1994. </year> <month> 15 </month>
Reference-contexts: The type interface specification is via a language called SDL, which is closely related to the ODMG IDL language <ref> [Cat94] </ref>. SHORE automatically stores the object type along with the object. Method interfaces are also specified in SDL, and their implementation can be in several languages (initially C++). All objects have a globally unique, never reused, 16-byte object identifier (OID).
Reference: [CDF + 94] <author> Michael J. Carey, David J. DeWitt, Michael J. Franklin, Nancy E. Hall, Mark McAuliffe, Jeffrey F. Naughton, Daniel T. Schuh, Marvin H. Solomon, C. K. Tan, Odysseas Tsatalos, Seth White, and Michael J. Zwilling. </author> <title> Shoring up persistent applications. </title> <booktitle> In Proceedings of the 1994 ACM-SIGMOD Conference on the Management of Data, </booktitle> <address> Minneapolis, MN, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: We discuss this in more detail, and add our general conclusions and plans for future work, in Section 5. 2 Background and Related Work 2.1 SHORE and Chrysalis SHORE <ref> [CDF + 94] </ref> combines the features of an object-oriented database (persistent objects, abstract data types, inheritance, associative data access, transaction management, concurrency control, recovery, indexing, and object caching) with the features of a distributed file system (hierarchical namespace, files, directories, links, location transparency, and access control).
Reference: [Dod82] <author> D. J. Dodds. </author> <title> Reducing dictionary size by using a hashing technique. </title> <journal> Communications of the ACM, </journal> <pages> pages 368-370, </pages> <month> June </month> <year> 1982. </year>
Reference-contexts: The conflation process reduces related words to common stem (i.e.. computes, computer, computation all conflate to "comput"). The hash table entries do not contain the word itself, but a hashed, 16-bit version of the word. This check hash technique is described by <ref> [Dod82] </ref>. There is potential for false hits with this technique, but previous analysis showed that 16-bits yield an error rate of only 0.01% with 70% hash table loading. The hash table contains pointers (OIDs) to corresponding posting list objects.
Reference: [FBY92] <author> W. Frakes and R. Baeza-Yates. </author> <title> Information Retrieval: data structures and algorithms. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1992. </year>
Reference-contexts: Another example of this combined OODB/Distributed File System paradigm is OdeFS from AT&T [Geh94]. Chrysalis is an information retrieval application implementing the vector space model of retrieval <ref> [FBY92, Sal89] </ref>. We developed Chrysalis to allow us to explore the implications of building information retrieval systems using the SHORE paradigm. <p> The system uses a full-text index of the document contents. This index consists of a hash table object, which is used to store a representation of each significant word (after stoplist and conflation processing <ref> [FBY92] </ref>), with a pointer to a posting list object. The posting list contains a count of how many times the word appears in each document. <p> There is an object called HashTable which stores a hashed form of the significant document words. It has the pathname /IR/HashTable in the SHORE namespace. Words are considered significant after passing through a stoplist test and a Porter conflation algorithm <ref> [FBY92, Por80] </ref>. The conflation process reduces related words to common stem (i.e.. computes, computer, computation all conflate to "comput"). The hash table entries do not contain the word itself, but a hashed, 16-bit version of the word. This check hash technique is described by [Dod82].
Reference: [Geh94] <author> N. Gehani, et al. OdeFS: </author> <title> a file system interface to an object-oriented database. </title> <booktitle> In Proceedings of the 20th Very Large Database Conference, </booktitle> <year> 1994. </year>
Reference-contexts: Another example of this combined OODB/Distributed File System paradigm is OdeFS from AT&T <ref> [Geh94] </ref>. Chrysalis is an information retrieval application implementing the vector space model of retrieval [FBY92, Sal89]. We developed Chrysalis to allow us to explore the implications of building information retrieval systems using the SHORE paradigm.
Reference: [Gif91] <author> D. Gifford, et al. </author> <title> Semantic file systems. </title> <booktitle> In ACM SIGOPS Operating Systems Review, </booktitle> <pages> pages 16-25, </pages> <year> 1991. </year>
Reference-contexts: The Semantic File System (SFS) from MIT <ref> [Gif91] </ref>, the Gold mailer project from Matsushita Information Technology Laboratories (MITL) [Bar93], and the project described by Yan and Annevelink [YA94] also share some common characteristics with Chrysalis, In INQUERY/Mneme, document posting lists are stored in an OODB, while the actual documents and the hash table index are stored in a
Reference: [Mes91] <author> E. Messigner, et al. </author> <title> Rufus: the information sponge. </title> <type> Technical Report RJ8294, </type> <institution> IBM, </institution> <month> August </month> <year> 1991. </year>
Reference-contexts: can execute any UNIX command or application program against the document. 3 2.2 Related Work In this paper, we refer to two other implementations of information retrieval applications on object-oriented databases, the INQUERY/Mneme project from the University of Massachusetts [Bro94a, Bro94b], and the Rufus project from IBM Almaden Research Center <ref> [Mes91, Sho93] </ref>.
Reference: [Por80] <author> M. F. Porter. </author> <title> An algorithm for suffix stripping. </title> <booktitle> Program, </booktitle> <pages> pages 130-137, </pages> <month> July </month> <year> 1980. </year>
Reference-contexts: There is an object called HashTable which stores a hashed form of the significant document words. It has the pathname /IR/HashTable in the SHORE namespace. Words are considered significant after passing through a stoplist test and a Porter conflation algorithm <ref> [FBY92, Por80] </ref>. The conflation process reduces related words to common stem (i.e.. computes, computer, computation all conflate to "comput"). The hash table entries do not contain the word itself, but a hashed, 16-bit version of the word. This check hash technique is described by [Dod82].
Reference: [Sal89] <author> G. Salton. </author> <title> Automatic Text Processing: the Transformation, Analysis, and Retrieval of Information by Computer. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1989. </year>
Reference-contexts: Another example of this combined OODB/Distributed File System paradigm is OdeFS from AT&T [Geh94]. Chrysalis is an information retrieval application implementing the vector space model of retrieval <ref> [FBY92, Sal89] </ref>. We developed Chrysalis to allow us to explore the implications of building information retrieval systems using the SHORE paradigm.
Reference: [Sho93] <author> K. Shoens. </author> <title> The Rufus system: information organization for semi-structured data. </title> <booktitle> In Proceedings of the 19th Very Large Database Conference, </booktitle> <year> 1993. </year>
Reference-contexts: can execute any UNIX command or application program against the document. 3 2.2 Related Work In this paper, we refer to two other implementations of information retrieval applications on object-oriented databases, the INQUERY/Mneme project from the University of Massachusetts [Bro94a, Bro94b], and the Rufus project from IBM Almaden Research Center <ref> [Mes91, Sho93] </ref>.
Reference: [YA94] <author> Tak W. Yan and Jurgen Annevelink. </author> <title> Integrating a structured text retrieval system with an object-oriented database system. </title> <booktitle> In Proceddings of the 20th VLDB Conference, </booktitle> <pages> pages 740-749, </pages> <year> 1994. </year>
Reference-contexts: The Semantic File System (SFS) from MIT [Gif91], the Gold mailer project from Matsushita Information Technology Laboratories (MITL) [Bar93], and the project described by Yan and Annevelink <ref> [YA94] </ref> also share some common characteristics with Chrysalis, In INQUERY/Mneme, document posting lists are stored in an OODB, while the actual documents and the hash table index are stored in a UNIX file system. <p> Currently, Chrysalis supports ASCII text, mail, net news, Wisconsin technical reports, images, audio, and MPEG movies. Other document types are easily added by writing the interface in SDL and the methods in C++, inheriting from other existing objects where appropriate. Yan and Annevelink <ref> [YA94] </ref> describe a similar hierarchy, with extensions to finer granularity parts of documents, like paragraphs and sentences. For example, a Mail object is defined by the SDL given in Figure 3.
References-found: 14

