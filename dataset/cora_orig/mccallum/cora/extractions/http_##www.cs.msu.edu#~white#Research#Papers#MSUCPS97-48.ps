URL: http://www.cs.msu.edu/~white/Research/Papers/MSUCPS97-48.ps
Refering-URL: http://www.cs.msu.edu/~white/Research/
Root-URL: http://www.cs.msu.edu
Title: Candidate Subcircuit Generation to Facilitate Identification of High-Level Components in Logic Circuits problem of generating
Author: Jennifer L. White, Travis E. Doom Greg Chisholm Anthony S. Wojcik, Moon-Jung Chung 
Note: This report discusses the  can be examined [1].  
Address: East Lansing, MI  
Affiliation: Decision and Information Sciences Division Department of Computer Science Argonne National Laboratory Michigan State University Argonne, IL  
Abstract: Recovering the design of a circuit involves raising the level of abstraction from a flat netlist to a more easily understood modular level. Efficient algorithms exist to locate gate clusters (subcircuits) that are syntactically equivalent to known modules, but such technology will fail to match semantically equivalent subcircuits that differ in implementation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Doom and A.S.Wojcik, </author> <title> "Semantic matching for design recovery," </title> <type> Tech. Rep. </type> <note> Submitted for Publication, </note> <institution> Michigan State University, East Lansing, Michigan, </institution> <month> October </month> <year> 1997. </year>
Reference-contexts: This method will locate all high level modules by generating all possible modules, represented by candidate subcircuits within the circuit. A Boolean matching technique can then be applied to the candidate subcircuit and the module to which it may be semantically equivalent <ref> [1] </ref>. This report discusses the method used to generate all candidate subcircuits of the circuit. The number of subgraphs within a directed graph is exponential, and generating all of them is not a problem that can be solved in polynomial time.
Reference: [2] <author> Z. Peng, </author> <title> "Automated transformation of algorithms into register-transfer level implementations," </title> <journal> IEEE Transactions on Computer Aided Design of Integrated Circuits and Systems, </journal> <volume> vol. 13, </volume> <pages> pp. 150 - 165, </pages> <month> February </month> <year> 1994. </year>
Reference-contexts: 1 Introduction A common problem within design automation is the transformation of design specifications to an actual hardware implementation <ref> [2] </ref>. A less explored problem is design recovery, moving from a gate level description to a modular specification that is more easily understood by a human engineer.
Reference: [3] <author> C. E. Miles Ohlrich et al., "Subgemini: </author> <title> Identifying subcircuits using a fast subgraph isomor-phism algorithm," </title> <journal> pp. </journal> <volume> 31 - 37, </volume> <publisher> ACM Press, </publisher> <month> June </month> <year> 1993. </year>
Reference-contexts: This approach has been explored, and an algorithm, subGemini, has been developed that performs syntactic matching in linear time on the number of gates in the original circuit. <ref> [3] </ref>. However, this is not always sufficient to effectively recover the circuit design. If the designers of the circuit chose not to use a standard implementation of a certain module, it will not be identified. Syntactic techniques can only find exact matches against a known set of library modules.
Reference: [4] <author> C. Alpert and A. Kahng, </author> <title> "Recent directions in netlist partitioning: A survey," Integration: </title> <journal> the VLSI Journal, pp. </journal> <volume> 1 - 81, </volume> <year> 1995. </year>
Reference-contexts: Improvements are discussed in Section 5 to allow larger ciruits to be handled within reasonable time. 2 Preliminaries Many graph partitioning algorithms have been modified specifically to operate upon circuit nets <ref> [4] </ref>. The goal of these algorithms is generally "to divide a system specification into clusters such that the number of inter-cluster connections is minimized" for use in circuit board layout design. Although they appear similar, there are several factors which distinguish the candidate subcircuit generation problem from the partitioning problem.
Reference: [5] <author> N. Christofides, </author> <title> Graph Theory: An Algorithmic Approach. </title> <publisher> Academic Press Inc., </publisher> <year> 1975. </year> <month> 13 </month>
Reference-contexts: The term circuit is used frequently and refers to a digital circuit, not a circuit within a graph. When referring to the graph representing a circuit or subcircuit, its gates are referred to as nodes, and its connections as arcs <ref> [5] </ref>. As a cluster of gates is formed, it is referred to as a subgraph until it is known that all of its constituent gates are fully specified, at which point it will be referred to as a valid subcircuit.
Reference: [6] <author> K. McElvain, </author> <title> "Lgsynth93 benchmark set: </title> <note> Version 4.0." Available via ftp from mcnc.mcnc.org:ftp/pub/benchmark/LGSynth93, </note> <month> May </month> <year> 1993. </year>
Reference-contexts: These experiments were run on a Sun Sparc Ultra 1 Model 140 with 64 MB of main memory and 251 MB of virtul memory. The operating system is Solaris 2.5.1. The last two experiments (z4ml and x2) are taken from the LogicSynth 93 Benchmark Suite <ref> [6] </ref>. 11 Original Connection Unique Candidate Circuit Gates Connections Ratio Subgraphs Subcircuits 1-bit Adder 8 10 1.25 114 18 2-bit Adder 15 20 1.333 3408 66 3-bit Adder 22 30 1.363 98922 174 z4ml 30 42 1.4 N/A 560 1: Nave 2: Valid 3: Ordered Desired Circuit Subgraphs CPU time Subcircuits
Reference: [7] <author> T. Doom, J. White, G. Chisholm, and A. S. Wojcik, </author> <title> "The identification of high-level entities in combinational circuits," </title> <type> Tech. Rep. </type> <note> Submitted for Publication, </note> <institution> Division of Information Science, Argonne National Laboratories, </institution> <month> October </month> <year> 1997. </year> <month> 14 </month>
Reference-contexts: Regardless of which heuristic is applied, it is anticipated that the limiting of unreasonable subcircuit generation will allow extremely large circuits to be explored. This work has allowed the development of a tool that can locate subcircuits that are semantically equivalent to known high level modules <ref> [7] </ref>. The semantic matching currently handles only combinational circuits, though the candidate subcircuit generation will generate both combinational and sequential subcircuits. With the knowledge provided by this tool, it is anticipated that flat netlists will be raised to a level of abstraction to facilitate circuit redesign.
References-found: 7

