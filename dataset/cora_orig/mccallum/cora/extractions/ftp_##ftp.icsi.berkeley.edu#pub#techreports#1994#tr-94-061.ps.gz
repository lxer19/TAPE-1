URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1994/tr-94-061.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1994.html
Root-URL: http://www.icsi.berkeley.edu
Email: famit,ferrarig@tenet.berkeley.edu  
Title: Resource partitioning for multi-party real-time communication  
Phone: (510) 643-9153 FAX (510) 643-7684  
Author: Amit Gupta and Domenico Ferrari 
Date: November 1994  
Address: I 1947 Center St. Suite 600 Berkeley, California 94704-1198  TR-94-061  
Affiliation: INTERNATIONAL COMPUTER SCIENCE INSTITUTE  Tenet Group University of California at Berkeley, International Computer Science Institute  
Abstract: For real-time communication services to achieve widespread usage, it is important that the network's management be allowed to control the services effectively. An important management capability concerns resource partitioning, i.e., distributing the different resources available at any given server (network node or link) among a number of partitions, where the admission control and establishment computations for a given connection need to consider only the connections in the same partition, and are completely independent of the connections accepted in other partitions. Resource partitioning is useful for a number of applications, including the creation of virtual private subnetworks, and of mechanisms for advance reservation of real-time network services, fast establishment of real-time connections, and mobile computing with real-time communication. In previous work, we presented a scheme for resource partitioning in a guaranteed performance networking environment with EDD-based packet scheduling disciplines. We now present the results of our continuing research, giving admission control tests for resource partitioning for two additional scheduling disciplines, FIFO and RCSP, as well. We also simulate our resource partitioning scheme in a multi-party application scenario. Our simulations confirm that resource fragmentation losses due to resource partitioning are small, and that resource partitioning reduces the admission control computation overhead. A somewhat surprising result from the simulation experiments is that, under circumstances that arise naturally in multi-party communication scenarios, resource partitioning results in higher overall connection acceptance rate. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> David Clark, Scott Shenker, and Lixia Zhang. </author> <title> Supporting real-time applications in an integrated services packet network: Architecture and mechanism. </title> <booktitle> In Proceedings of ACM SIGCOMM'92, </booktitle> <pages> pages 14-26, </pages> <address> Baltimore, Maryland, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: 1 Introduction The increasing speed of computer networks and the improvement of workstation capabilities are enabling a new class of distributed applications, those involving multimedia data. It is widely believed that these applications should be supported in the general framework of real-time communication <ref> [1, 3, 13, 14, 15, 16] </ref>, which provides predictable performance (e.g., end-to-end delay bounds for data delivery); typically, the clients negotiate with the network service provider to obtain a desired Quality of Service (QoS), which the provider guarantees. <p> A number of schemes and protocols have been proposed to provide real-time communication services. Most of the schemes are connection-oriented, and reserve resources (bandwidth, buffers, and so on) along the route of a real-time connection <ref> [1, 3, 11] </ref>. QoS guarantees cannot be provided if the network does not check for saturation before accepting new channels. Thus, the network must perform admission control to ensure that the guarantees are met. <p> The CBQ scheme has been designed for bandwidth distribution to non-real-time traffic (and for non-guaranteed schemes like predicted service <ref> [1] </ref>). CBQ modifies the packet scheduling policy to manage and distribute the short-term resource usage. In its current form, it cannot provide partitioning for guaranteed-performance communication. Our scheme is designed for real-time traffic, implements resource partitioning at channel establishment time, and does not require any changes in per-packet scheduling.
Reference: [2] <author> Domenico Ferrari. </author> <title> Real-time communication in an internetwork. </title> <journal> Journal of High Speed Networks, </journal> <volume> 1(1) </volume> <pages> 79-103, </pages> <year> 1992. </year>
Reference-contexts: To complete this general description, we only have to mention two special aspects of data transfers: scheduling and distributed rate-control. Most scheduling policies can be used for real-time communication under fairly liberal conditions, and can coexist within the same network and along the same channel <ref> [2] </ref>; our partitioning scheme applies to such a mixed scheduling situation, as long as the appropriate admission tests are used in each server.
Reference: [3] <author> Domenico Ferrari, Anindo Banerjea, and Hui Zhang. </author> <title> Network support for multimedia: a discussion of the Tenet approach. </title> <booktitle> Computer Networks and ISDN Systems, </booktitle> <pages> pages 1267-1280, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: 1 Introduction The increasing speed of computer networks and the improvement of workstation capabilities are enabling a new class of distributed applications, those involving multimedia data. It is widely believed that these applications should be supported in the general framework of real-time communication <ref> [1, 3, 13, 14, 15, 16] </ref>, which provides predictable performance (e.g., end-to-end delay bounds for data delivery); typically, the clients negotiate with the network service provider to obtain a desired Quality of Service (QoS), which the provider guarantees. <p> A number of schemes and protocols have been proposed to provide real-time communication services. Most of the schemes are connection-oriented, and reserve resources (bandwidth, buffers, and so on) along the route of a real-time connection <ref> [1, 3, 11] </ref>. QoS guarantees cannot be provided if the network does not check for saturation before accepting new channels. Thus, the network must perform admission control to ensure that the guarantees are met. <p> We discuss implementation issues in Section 5, and conclude this paper with a brief review of related work in Section 6. 2 Background In this paper, we illustrate our approach to network resource partitioning in the framework of the Tenet real-time communication protocols <ref> [3] </ref>. Our previous paper [4] describes the relevant aspects of the Tenet protocols; in this discussion, we limit ourselves to discussing a few of their salient features.
Reference: [4] <author> Domenico Ferrari and Amit Gupta. </author> <title> Resource partitioning in real-time communication. </title> <booktitle> In Proceedings of IEEE Symposium on Global Data Networking, </booktitle> <pages> pages 128-135, </pages> <address> Cairo, Egypt, </address> <month> December </month> <year> 1993. </year>
Reference-contexts: A fraction of the network's resources may be kept for non-real-time traffic. Other resource partitioning applications include advance reservations of resources for real-time channels [5], fast establishment of real-time connections, and support for mobile computing. The reader is referred to <ref> [4] </ref> for a more detailed description of these applications. However, many important concerns remain regarding resource partitioning: for instance, whether we can design efficient mechanisms for resource reservation, and whether these mechanisms can be designed for different scheduling disciplines and admission control procedures. The efficiency concern encompasses two related issues. <p> In a previous paper <ref> [4] </ref>, we described a resource partitioning technique for networks with EDD-based packet scheduling disciplines. In this paper, we present the results of our continuing work, including resource partitioning techniques for two additional scheduling disciplines, FIFO and RCSP [17]. <p> We discuss implementation issues in Section 5, and conclude this paper with a brief review of related work in Section 6. 2 Background In this paper, we illustrate our approach to network resource partitioning in the framework of the Tenet real-time communication protocols [3]. Our previous paper <ref> [4] </ref> describes the relevant aspects of the Tenet protocols; in this discussion, we limit ourselves to discussing a few of their salient features. <p> Also, rate control, either at the periphery of the network or in all of its nodes, is needed to protect well-behaving channels from the misbehavior of faulty or malicious sources, and from the occasional bunching of packets on a channel due to traffic fluctuations. In our previous work <ref> [4] </ref>, we described the admission control tests for EDD-based scheduling disciplines. <p> We previously showed that this goal can be reached for EDD-based packet scheduling disciplines <ref> [4] </ref>. In this section, we also present admission tests for two more scheduling disciplines, FIFO and RCSP, and describe the simple changes to be made to the respective admission control tests for supporting resource partitioning. <p> Note that, to be accepted, a request for a new channel must pass also a buffer space test in each server <ref> [4] </ref>. This test is very easy to derive, and will be omitted for the sake of brevity throughout our discussion. 3.1 Resource partitioning in an EDD server In this section, we describe the admission control tests for an EDD server, with and without resource partitioning. <p> We will limit this description to stating the admission control tests; the interested reader can find the proofs for these admission control tests for EDD servers with and without resource partitioning in <ref> [4] </ref> and [6] respectively. <p> Note that, for EDD servers, there is also a bandwidth test, whose adoption to the partitioning case is, however, trivial and will not be described here. The interested reader can find it in <ref> [4] </ref>. 3.2 Resource partitioning in a FIFO server We now describe the admission control test for a FIFO server without resource partitioning. In a FIFO server, all real-time connections are assigned the same local delay bound, say d.
Reference: [5] <author> Domenico Ferrari, Amit Gupta, and Giorgio Ventre. </author> <title> Advance reservations for real-time communication. </title> <type> Unpublished, </type> <year> 1994. </year>
Reference-contexts: The network's management can keep a small fraction of resources for management and fault-handling traffic. A fraction of the network's resources may be kept for non-real-time traffic. Other resource partitioning applications include advance reservations of resources for real-time channels <ref> [5] </ref>, fast establishment of real-time connections, and support for mobile computing. The reader is referred to [4] for a more detailed description of these applications. <p> We considered the case where the conference requests were all served by one partition, while the unicast connection requests were served by the other partition. This segregation is a natural consequence of some aspects of multi-party communication, for instance advance reservation requirements <ref> [5] </ref>. <p> This segregation of requests (conferences vs. isolated connections) happens naturally in multi-party communication environments where the conferences are scheduled well in advance, and the advance reservation requests use a separate partition <ref> [5] </ref>. * Computational overhead In the graph in Figure 6, we observe again that resource partitioning reduces the overall computational overhead in the admission control process. 14 5 Implementation In the Tenet protocol suites, the Real-time Channel Administration Protocol (RCAP) [12] performs resource reservation and admission control for real-time connections.
Reference: [6] <author> Domenico Ferrari and Dinesh Verma. </author> <title> A scheme for real-time channel establishment in wide-area networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 8(3) </volume> <pages> 368-379, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: The traffic bounds may be described in terms of a number of different traffic specification models, including leaky bucket, Xmin-Xave-I <ref> [6] </ref>, and so on. The client also specifies the desired quality of service in terms of bounds on several performance indices: these indices include end-to-end delay, delay jitter (i.e., variation), loss rate, and the probabilities that these bounds will be met. <p> We will limit this description to stating the admission control tests; the interested reader can find the proofs for these admission control tests for EDD servers with and without resource partitioning in [4] and <ref> [6] </ref> respectively. <p> In the simulations, we used the EDD scheduling discipline <ref> [6] </ref>, in which admission control tests at a node take O (n) time, where n is the number of resource allocations (where an allocation is a resource reservation for a channel, or for a group of channels) existing at that server.
Reference: [7] <author> Sally Floyd. </author> <title> Link-sharing and resource management models for packet networks. </title> <type> Unpublished, </type> <month> September </month> <year> 1993. </year>
Reference-contexts: We are now designing public-key-encryption based techniques for access control, which we will incorporate later in Suite 2. 6 Related Work To our knowledge, only one other scheme, the CBQ scheme, has been proposed for network resource partitioning <ref> [7] </ref>. The primary motivation of CBQ is to provide a service in which the virtual subnetworks are used by the network's managers to control and equitably distribute the available bandwidth among different organizations.
Reference: [8] <author> Amit Gupta, Wendy Heffner, Mark Moran, and Clemens Szyperski. </author> <title> Multi-party real-time communication in computer networks. </title> <booktitle> In Collected abstracts of 4th International Workshop on Network and Operating Systems Support for Digital Audio and Video, </booktitle> <pages> pages 37-39, </pages> <address> Lancaster, UK, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: For simplicity, we also limit our description to unicast connections, though our resource partitioning techniques apply also to a multicast environment such as the one supported by the new generation of Tenet protocols now being developed <ref> [8] </ref>. 2 The Tenet protocols are based on a network-layer abstraction, the real-time chan-nel, characterized by traffic and performance bounds specified by the client. The traffic bounds may be described in terms of a number of different traffic specification models, including leaky bucket, Xmin-Xave-I [6], and so on. <p> We ran these simulations on Galileo [10], an object-oriented real-time network simulator. Our goal was to make the experiments as realistic as possible, so that we could confidently predict the behavior of our implementation of resource partitioning in the Tenet Protocol Suite 2 <ref> [8] </ref>. For example, we used the NSFNET backbone network topology in our simulations (see Figure 2). We assumed that the rate of each link was 45 Mbps, the propagation delay along the diameter was 40 ms, and that we could allocate up to 80% of the resources for real-time communication.
Reference: [9] <author> Amit Gupta, Winnie Howe, Mark Moran, and Quyen Nguyen. </author> <title> Resource sharing in multi-party realtime communication. </title> <booktitle> In To appear in Proceedings of INFO-COM 95, </booktitle> <address> Boston, MA, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: Here, some requests were for simplex unicast connections; the others were for conferences, where the participants could share resources <ref> [9] </ref>. We considered the case where the conference requests were all served by one partition, while the unicast connection requests were served by the other partition. This segregation is a natural consequence of some aspects of multi-party communication, for instance advance reservation requirements [5]. <p> The first partition is for unicast connections. without resource partitioning). This phenomenon is easily explained in the following manner. First, resource allocation requests have varying efficiencies in using resources. In particular, with resource sharing, the resource requirements do not increase with allocation requests for additional channels <ref> [9] </ref>; this implies that conference requests are more efficient in using resources than isolated connections.
Reference: [10] <author> E. W. Knightly and G. Ventre. </author> <title> Galileo: a tool for simulation and analysis of real-time networks. </title> <booktitle> In Proceedings of IEEE 1993 International Conference on Network Protocols, </booktitle> <pages> pages 264-271, </pages> <address> San Francisco, CA, </address> <month> October </month> <year> 1993. </year> <month> 18 </month>
Reference-contexts: In the second set, we ran simulations of resource requests for multi-party communication, including distributed video-conferences. In this section, we describe the simulation scenario, the workload, and the results obtained with these experiments. We ran these simulations on Galileo <ref> [10] </ref>, an object-oriented real-time network simulator. Our goal was to make the experiments as realistic as possible, so that we could confidently predict the behavior of our implementation of resource partitioning in the Tenet Protocol Suite 2 [8].
Reference: [11] <author> A. Lazar and C. Pacifici. </author> <title> Control of resources in broadband networks with quality of service guarantees. </title> <journal> IEEE Communication Magazine, </journal> <pages> pages 66-73, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: A number of schemes and protocols have been proposed to provide real-time communication services. Most of the schemes are connection-oriented, and reserve resources (bandwidth, buffers, and so on) along the route of a real-time connection <ref> [1, 3, 11] </ref>. QoS guarantees cannot be provided if the network does not check for saturation before accepting new channels. Thus, the network must perform admission control to ensure that the guarantees are met.
Reference: [12] <author> Bruce Mah. </author> <title> A mechanism for administration of real-time channels. </title> <type> Master's thesis, Tech. Report UCB/CSD-93-735, </type> <institution> University of California, Berkeley, </institution> <address> CA, </address> <month> March </month> <year> 1993. </year>
Reference-contexts: advance, and the advance reservation requests use a separate partition [5]. * Computational overhead In the graph in Figure 6, we observe again that resource partitioning reduces the overall computational overhead in the admission control process. 14 5 Implementation In the Tenet protocol suites, the Real-time Channel Administration Protocol (RCAP) <ref> [12] </ref> performs resource reservation and admission control for real-time connections.
Reference: [13] <author> Mark Moran and Riccardo Gusella. </author> <title> System support for efficient dynamically-configurable multi-party interactive multimedia applications. </title> <booktitle> In Proceedings of Thrid International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <pages> pages 143-156, </pages> <address> San Diego, CA, </address> <month> November </month> <year> 1992. </year>
Reference-contexts: 1 Introduction The increasing speed of computer networks and the improvement of workstation capabilities are enabling a new class of distributed applications, those involving multimedia data. It is widely believed that these applications should be supported in the general framework of real-time communication <ref> [1, 3, 13, 14, 15, 16] </ref>, which provides predictable performance (e.g., end-to-end delay bounds for data delivery); typically, the clients negotiate with the network service provider to obtain a desired Quality of Service (QoS), which the provider guarantees.
Reference: [14] <author> Abhay Kumar J. Parekh. </author> <title> A Generalized Processor Sharing Approach to Flow Control in Integrated Services Networks. </title> <type> PhD dissertation, </type> <institution> Massachusetts Institute of Technology, </institution> <month> February </month> <year> 1992. </year>
Reference-contexts: 1 Introduction The increasing speed of computer networks and the improvement of workstation capabilities are enabling a new class of distributed applications, those involving multimedia data. It is widely believed that these applications should be supported in the general framework of real-time communication <ref> [1, 3, 13, 14, 15, 16] </ref>, which provides predictable performance (e.g., end-to-end delay bounds for data delivery); typically, the clients negotiate with the network service provider to obtain a desired Quality of Service (QoS), which the provider guarantees.
Reference: [15] <author> Craig Partridge and Stephen Pink. </author> <title> An implementation of the revised internet stream protocol (ST-2). </title> <journal> In Journal of Internetworking Research and Experience, </journal> <pages> pages 27-54, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction The increasing speed of computer networks and the improvement of workstation capabilities are enabling a new class of distributed applications, those involving multimedia data. It is widely believed that these applications should be supported in the general framework of real-time communication <ref> [1, 3, 13, 14, 15, 16] </ref>, which provides predictable performance (e.g., end-to-end delay bounds for data delivery); typically, the clients negotiate with the network service provider to obtain a desired Quality of Service (QoS), which the provider guarantees.
Reference: [16] <author> Jean Ramaekers and Giorgio Ventre. </author> <title> Client-network interaction in a real-time communication environment. </title> <booktitle> In Proceedings of GLOBECOMM '92, </booktitle> <pages> pages 1140-1144, </pages> <address> Orlando, Florida, </address> <month> December </month> <year> 1992. </year>
Reference-contexts: 1 Introduction The increasing speed of computer networks and the improvement of workstation capabilities are enabling a new class of distributed applications, those involving multimedia data. It is widely believed that these applications should be supported in the general framework of real-time communication <ref> [1, 3, 13, 14, 15, 16] </ref>, which provides predictable performance (e.g., end-to-end delay bounds for data delivery); typically, the clients negotiate with the network service provider to obtain a desired Quality of Service (QoS), which the provider guarantees.
Reference: [17] <author> Hui Zhang and Domenico Ferrari. </author> <title> Rate-controlled static priority queueing. </title> <booktitle> In Proceedings of IEEE INFOCOM'93, </booktitle> <pages> pages 227-236, </pages> <address> San Francisco, California, </address> <month> April </month> <year> 1993. </year> <month> 19 </month>
Reference-contexts: In a previous paper [4], we described a resource partitioning technique for networks with EDD-based packet scheduling disciplines. In this paper, we present the results of our continuing work, including resource partitioning techniques for two additional scheduling disciplines, FIFO and RCSP <ref> [17] </ref>. Thus, we show that our resource partitioning techniques are general, and apply to many scheduling disciplines. <p> In our previous work [4], we described the admission control tests for EDD-based scheduling disciplines. In the next section, we re-state these tests, and also present partition-based admission control tests for two more scheduling disciplines, FIFO and the new Rate-Controlled Static Priority (RCSP) policy <ref> [17] </ref>. 3 3 Resource partitioning tests What parts of an admission control algorithm do we need to modify to make network resources partitionable? Our ideal objective is to subdivide a network (or, more generally, an internetwork) into a certain number of virtual networks (or internetworks), each one of which can be <p> Q.E.D. 3.3 Resource partitioning in an RCSP server 3.3.1 A brief introduction to RCSP The interested reader can find a detailed description of RCSP in <ref> [17] </ref>; here, we present a simplified description of the discipline. Figure 1 shows an RCSP server for a node with a single output link; additional links can be added by replicating the scheduler portion of the server. <p> We will not rigorously prove this RCSP admission control tests here; the interested reader can find the proof in <ref> [17] </ref>. In practice, the terms P Xmin i e fl Smax i + Smax fl can be incrementally re-computed each time a new connection is accepted or torn down. This leads to fast, O (P ) admission control tests for RCSP, where P is the number of priority levels.
References-found: 17

