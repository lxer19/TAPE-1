URL: ftp://dsp.jpl.nasa.gov/pub/payman/tcas9701.ps.gz
Refering-URL: http://www.ph.tn.tudelft.nl/PRInfo/reports/msg00365.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: Email: [payman,marks]@ee.washington.edu  Email: seho@neopath.com  Email: tpc@eece.unm.edu  Email: jai@atc.boeing.com  
Title: Pointer Adaptation and Pruning of Min-Max Fuzzy Inference and Estimation  
Author: Payman Arabshahi Robert J. Marks II Seho Oh T.P. Caudell J.J. Choi 
Note: Earlier versions of this work were published in [19] and [24]  
Address: Box 352500  Seattle, WA 98195-2500  827 154th Avenue NE Redmond, WA 98052  Albuquerque, NM 87131-1356  P.O. Box 24346, 7L-44 Seattle, WA 98124  
Affiliation: Dept. of Electrical Eng.,  University of Washington  Neopath Inc.  Dept. of Electrical Computer Eng. University of New Mexico  Boeing Computer Services Research and Technology  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> L.A. Zadeh, </author> <title> "Outline of a new approach to the analysis of complex systems and decision Processes," </title> <journal> IEEE Trans. Syst., Man, Cybern., </journal> <volume> vol. SMC-3, </volume> <pages> pp. 28-44, </pages> <year> 1973. </year>
Reference-contexts: In his now classic paper on the foundations of fuzzy systems and decision processes <ref> [1] </ref> Zadeh takes issue with this point of view in his statement of the principle of incompatibility, stating that: As the complexity of a system increases, our ability to make precise and yet significant statements about its behavior diminishes until a threshold is reached beyond which precision and significance (or relevance) <p> We provide a brief discussion of relevant topics of fuzzy systems and control here to motivate our approach. 1.1 Fuzzy Sets A fuzzy subset A of a universal set X is characterized by a membership function A (x) which assigns a real number in the closed interval <ref> [0; 1] </ref> to every element of X [4]. <p> There are a number of different ways to implement the fuzzy inference engine. Among the very first such proposed techniques is that due to Mamdani [11], who describes the inference engine in terms of a fuzzy relation matrix and uses the compositional rule of inference <ref> [1] </ref> to arrive at the output fuzzy set for a given input fuzzy set. The output fuzzy set is subsequently defuzzified to arrive at a crisp control action. Other techniques include sum-product and threshold inference. <p> A list follows. The Fuzzifier The fuzzifier in Fig. 1 maps the input onto the continuous interval <ref> [0; 1] </ref> and has the following parameters: 1. The number of membership functions. 2. <p> The Inference Engine The inference engine is the system "decision maker" and determines how the system interprets the fuzzy linguistics. Its parameters are those of the aggregation operators which provide interpretation of connectives "And" and "Or". An example of a parameterized union operator is the Yager union [17]: min <ref> [1; (a w + b w ) 1=w ] </ref>; where the inputs are membership values a and b, and the parameter w ranges over (0; 1). 4 The Defuzzifier The defuzzification stage maps fuzzy consequents into crisp output values. Its design requires choice of 1. <p> Other algorithms such as random search and conjugate gradient descent can be used in tuning such parameters as well. 4 lim w!1 min <ref> [1; (a w + b w ) 1=w ] </ref> = max (a; b) * Pruning the number of input and output membership functions (see Sec- tion 4, and [14, 24]). * Adapting the shape of membership functions (see footnote 3 above). * Adaptation of And/Or aggregation operators. <p> Here we have: t (x 1 ; x 2 ) = sin (x 1 ) cos (x 2 ) (8) The rule table (Table 1) is generated by partioning the domain of t (x 1 ; x 2 ), f (x 1 ; x 2 ) j x 1 2 <ref> [1; 1] </ref>; x 2 2 [1; 1]g into 64 (8 fi 8) regions and assigning a fuzzy membership function to each region in accordance to the values of t (x 1 ; x 2 ) in that region. <p> 1 ; x 2 ) = sin (x 1 ) cos (x 2 ) (8) The rule table (Table 1) is generated by partioning the domain of t (x 1 ; x 2 ), f (x 1 ; x 2 ) j x 1 2 <ref> [1; 1] </ref>; x 2 2 [1; 1]g into 64 (8 fi 8) regions and assigning a fuzzy membership function to each region in accordance to the values of t (x 1 ; x 2 ) in that region. <p> In our example, for l = 1; 2, the index i = 1; 2; 8 and for l = 3, the index i = 1; 2; 6; q = 1; 2, and: i l <ref> [1] </ref>) 2 l [2]) 2 (17) For instance m 7 2 [1] would represent parameter number 1 (of 2) of membership function number 7 (of 8) of the variable x 2 . <p> In our example, for l = 1; 2, the index i = 1; 2; 8 and for l = 3, the index i = 1; 2; 6; q = 1; 2, and: i l <ref> [1] </ref>) 2 l [2]) 2 (17) For instance m 7 2 [1] would represent parameter number 1 (of 2) of membership function number 7 (of 8) of the variable x 2 . <p> For our estimation problem, using Gaussian membership functions, there are two parameters to adapt. These are the mean (m i l <ref> [1] </ref>), and the variance (m i l [2]). <p> Likewise, the performance of fuzzy inference can be improved through the adaptation and pruning of membership functions. The number of If-Then rules is also correspondingly reduced. Assume that the center of mass of i 1 (membership function i of input vari able x 1 ) is m i 1 <ref> [1] </ref> and the dispersion (spread) of i 1 is parameterized by m i 1 [2]. The parameter m i 1 [2] is also proportional to the area of i 1 . <p> Herein, we will assume all linguistic variables are scaled to the universe Herein, we will assume all linguistic variables are scaled to the universe of dis course on the interval <ref> [1; 1] </ref>. Gaussian membership functions of the form (x) = exp x m 2 # will be used throughout (m m l 1 [1], and m l 1 [2]). of discourse on the interval [1; 1]. <p> Gaussian membership functions of the form (x) = exp x m 2 # will be used throughout (m m l 1 <ref> [1] </ref>, and m l 1 [2]). of discourse on the interval [1; 1]. Gaussian membership functions of the form (x) = exp x m 2 # will be used throughout (m m l 1 [1], and m l 4.1 Membership Function Fusion Fusion of two membership functions occurs when they become <p> will assume all linguistic variables are scaled to the universe of dis course on the interval <ref> [1; 1] </ref>. Gaussian membership functions of the form (x) = exp x m 2 # will be used throughout (m m l 1 [1], and m l 1 [2]). of discourse on the interval [1; 1]. Gaussian membership functions of the form (x) = exp x m 2 # will be used throughout (m m l 1 [1], and m l 4.1 Membership Function Fusion Fusion of two membership functions occurs when they become sufficiently close to each other. <p> form (x) = exp x m 2 # will be used throughout (m m l 1 <ref> [1] </ref>, and m l 1 [2]). of discourse on the interval [1; 1]. Gaussian membership functions of the form (x) = exp x m 2 # will be used throughout (m m l 1 [1], and m l 4.1 Membership Function Fusion Fusion of two membership functions occurs when they become sufficiently close to each other. Annihilation occurs when a membership function becomes sufficiently narrow. <p> The target rule table is shown in Table 4. Using a universe of discourse on <ref> [1; 1] </ref>, the membership functions are indexed from 1 for large negative numbers upward. The largest index corresponds to large positive numbers. A total of 500 training data points were randomly generated from these target functions.
Reference: [2] <editor> M. Sugeno (ed.), </editor> <booktitle> Industrial Applications of Fuzzy Control. </booktitle> <address> New York: </address> <publisher> North-Holland, </publisher> <year> 1985. </year>
Reference-contexts: Consequently, over the years a number of alternative control schemes, for instance techniques employing neural networks or fuzzy sets, have been proposed and implemented <ref> [2, 3] </ref>. <p> In our example, for l = 1; 2, the index i = 1; 2; 8 and for l = 3, the index i = 1; 2; 6; q = 1; 2, and: i l [1]) 2 l <ref> [2] </ref>) 2 (17) For instance m 7 2 [1] would represent parameter number 1 (of 2) of membership function number 7 (of 8) of the variable x 2 . <p> For our estimation problem, using Gaussian membership functions, there are two parameters to adapt. These are the mean (m i l [1]), and the variance (m i l <ref> [2] </ref>). We thus have: @ i @m i = i (x m i (m i @ i @m i = i (x m i (m i 3.2 Results We present here results of the application of this technique to the estimation problem discussed in Section 3. <p> The number of If-Then rules is also correspondingly reduced. Assume that the center of mass of i 1 (membership function i of input vari able x 1 ) is m i 1 [1] and the dispersion (spread) of i 1 is parameterized by m i 1 <ref> [2] </ref>. The parameter m i 1 [2] is also proportional to the area of i 1 . <p> Assume that the center of mass of i 1 (membership function i of input vari able x 1 ) is m i 1 [1] and the dispersion (spread) of i 1 is parameterized by m i 1 <ref> [2] </ref>. The parameter m i 1 [2] is also proportional to the area of i 1 . <p> Gaussian membership functions of the form (x) = exp x m 2 # will be used throughout (m m l 1 [1], and m l 1 <ref> [2] </ref>). of discourse on the interval [1; 1].
Reference: [3] <author> T. Miller (ed.), </author> <title> Neural Networks for Control. </title> <publisher> Cambridge: MIT press, </publisher> <year> 1990. </year>
Reference-contexts: Consequently, over the years a number of alternative control schemes, for instance techniques employing neural networks or fuzzy sets, have been proposed and implemented <ref> [2, 3] </ref>.
Reference: [4] <author> L.A. Zadeh, </author> <title> "Fuzzy sets," </title> <journal> Inform. Contr., </journal> <volume> vol. 8, </volume> <pages> pp. 338-353, </pages> <year> 1965. </year>
Reference-contexts: discussion of relevant topics of fuzzy systems and control here to motivate our approach. 1.1 Fuzzy Sets A fuzzy subset A of a universal set X is characterized by a membership function A (x) which assigns a real number in the closed interval [0; 1] to every element of X <ref> [4] </ref>.
Reference: [5] <author> G. Klir and T. Folger, </author> <title> Fuzzy Sets, Uncertainty, </title> <booktitle> and Information. </booktitle> <address> Engle-wood Cliffs, N.J.: </address> <publisher> Prentice Hall, </publisher> <year> 1988. </year>
Reference-contexts: These operations are not unique. Other operators for performing fuzzy intersection, union, and complementation exist <ref> [5] </ref>. However the min and max operations are special in the sense that they are the only continuous and idempotent fuzzy set intersection and union operators respectively [5]. 1.2 Fuzzy Inference Fuzzy inference is based on the concept of the fuzzy conditional statement: If A Then B, or, for short A <p> These operations are not unique. Other operators for performing fuzzy intersection, union, and complementation exist <ref> [5] </ref>. However the min and max operations are special in the sense that they are the only continuous and idempotent fuzzy set intersection and union operators respectively [5]. 1.2 Fuzzy Inference Fuzzy inference is based on the concept of the fuzzy conditional statement: If A Then B, or, for short A ) B, where the antecedent A and the consequent B are fuzzy sets. A general fuzzy inference system consists of three parts (see Fig. 1). <p> k ff k m Z k Z k P : (28) Although we will use min-max inference, the pruning procedure described below can be applied to other fuzzy inference methods, wherein, for example, alternate forms of defuzzification are used or intersections and unions other than min and max are employed <ref> [5, 27] </ref>. Herein, we will assume all linguistic variables are scaled to the universe Herein, we will assume all linguistic variables are scaled to the universe of dis course on the interval [1; 1].
Reference: [6] <author> T.J. Procyk and E.H. Mamdani, </author> <title> "A linguistic self-organizing process controller," </title> <journal> Automatica, </journal> <volume> vol. 15, </volume> <pages> pp. 15-30, </pages> <year> 1979. </year>
Reference-contexts: This is followed by the defuzzification stage resulting in a crisp output. The rule base is typically crafted by an expert; though self organizing procedures have been suggested <ref> [6, 7, 8, 9, 10, 11, 12, 13, 14, 15] </ref>. There are a number of different ways to implement the fuzzy inference engine. <p> All of these parameters can be adaptively adjusted by monitoring a certain target performance measure in a supervised learning environment. Over the years numerous techniques for adaptation of fuzzy membership functions, rule bases, and aggregation operators have been proposed. These techniques include: * Procyk and Mamdani's self-organizing process controller <ref> [6] </ref> which consid ered the issue of rule generation and adaptation. * Numerous methods involving the performing of steepest descent on the centroid and dispersion parameters of input and output membership functions [18, 19, 20, 21, 22, 23].
Reference: [7] <author> C. Batur and V. Kasparian, </author> <title> "Self-organizing model based expert controller", </title> <booktitle> Proc. IEEE Int. Conf. on Systems Engineering, </booktitle> <address> Fairborn, OH, </address> <pages> pp. 411-414, </pages> <month> Aug. </month> <year> 1989. </year>
Reference-contexts: This is followed by the defuzzification stage resulting in a crisp output. The rule base is typically crafted by an expert; though self organizing procedures have been suggested <ref> [6, 7, 8, 9, 10, 11, 12, 13, 14, 15] </ref>. There are a number of different ways to implement the fuzzy inference engine.
Reference: [8] <author> G. Langari and M. Tomizuka, </author> <title> "Self organizing fuzzy linguistic control with application to arc welding", </title> <booktitle> Proc. IEEE Int. Workshop on Intelligent Robots & Systems, Ibaraki, Japan, </booktitle> <volume> vol. 2, </volume> <pages> pp. 1007-1014, </pages> <month> July </month> <year> 1990. </year>
Reference-contexts: This is followed by the defuzzification stage resulting in a crisp output. The rule base is typically crafted by an expert; though self organizing procedures have been suggested <ref> [6, 7, 8, 9, 10, 11, 12, 13, 14, 15] </ref>. There are a number of different ways to implement the fuzzy inference engine.
Reference: [9] <author> D.A. Linkens and M.F. Abbod, </author> <title> "Self-organizing fuzzy logic control for real-time processes", </title> <booktitle> Proc. IEE Int. Conf. on Control, </booktitle> <address> Edinburgh, UK, </address> <pages> pp. 971-976, </pages> <month> March </month> <year> 1991. </year>
Reference-contexts: This is followed by the defuzzification stage resulting in a crisp output. The rule base is typically crafted by an expert; though self organizing procedures have been suggested <ref> [6, 7, 8, 9, 10, 11, 12, 13, 14, 15] </ref>. There are a number of different ways to implement the fuzzy inference engine.
Reference: [10] <author> D.A. Linkens and M.F. Abbod, </author> <title> "Fast, self-organizing control for industrial processes", Algorithms and Architectures for Real-Time Control: </title> <booktitle> Proc. IFAC Workshop, Bangor, UK, </booktitle> <pages> pp. 153-157, </pages> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: This is followed by the defuzzification stage resulting in a crisp output. The rule base is typically crafted by an expert; though self organizing procedures have been suggested <ref> [6, 7, 8, 9, 10, 11, 12, 13, 14, 15] </ref>. There are a number of different ways to implement the fuzzy inference engine.
Reference: [11] <author> E.H. Mamdani and S. Assilian, </author> <title> "An experiment in Linguistic synthesis with a fuzzy logic controller," </title> <journal> Int. J. Man-Mach. Stud., </journal> <volume> vol. 7, </volume> <pages> pp. 1-13, </pages> <year> 1974. </year>
Reference-contexts: This is followed by the defuzzification stage resulting in a crisp output. The rule base is typically crafted by an expert; though self organizing procedures have been suggested <ref> [6, 7, 8, 9, 10, 11, 12, 13, 14, 15] </ref>. There are a number of different ways to implement the fuzzy inference engine. <p> There are a number of different ways to implement the fuzzy inference engine. Among the very first such proposed techniques is that due to Mamdani <ref> [11] </ref>, who describes the inference engine in terms of a fuzzy relation matrix and uses the compositional rule of inference [1] to arrive at the output fuzzy set for a given input fuzzy set. The output fuzzy set is subsequently defuzzified to arrive at a crisp control action.
Reference: [12] <author> N. Vijeh, </author> <title> "Self organizing fuzzy logic control of a level control rig", </title> <booktitle> Proc. 2nd IEEE Int. Conf. on Fuzzy Systems, </booktitle> <address> San Francisco, CA, </address> <pages> pp. 303-308, </pages> <month> March </month> <year> 1993. </year>
Reference-contexts: This is followed by the defuzzification stage resulting in a crisp output. The rule base is typically crafted by an expert; though self organizing procedures have been suggested <ref> [6, 7, 8, 9, 10, 11, 12, 13, 14, 15] </ref>. There are a number of different ways to implement the fuzzy inference engine.
Reference: [13] <author> L.X. Wang and J.M. Mendel, </author> <title> "Generating fuzzy rules by learning from examples", </title> <booktitle> Proc. 1991 IEEE Int. Symposium on Intelligent Control, Ar-lington, VA, </booktitle> <pages> pp. 263-268, </pages> <month> Aug. </month> <year> 1991. </year>
Reference-contexts: This is followed by the defuzzification stage resulting in a crisp output. The rule base is typically crafted by an expert; though self organizing procedures have been suggested <ref> [6, 7, 8, 9, 10, 11, 12, 13, 14, 15] </ref>. There are a number of different ways to implement the fuzzy inference engine.
Reference: [14] <author> L.X. Wang and J.M. Mendel, </author> <title> "Generating fuzzy rules by learning from examples", </title> <journal> IEEE Trans. Syst., Man, Cybern., </journal> <volume> vol. 22, no. 6, </volume> <pages> pp. 1414-1427, </pages> <year> 1992. </year>
Reference-contexts: This is followed by the defuzzification stage resulting in a crisp output. The rule base is typically crafted by an expert; though self organizing procedures have been suggested <ref> [6, 7, 8, 9, 10, 11, 12, 13, 14, 15] </ref>. There are a number of different ways to implement the fuzzy inference engine. <p> algorithms such as random search and conjugate gradient descent can be used in tuning such parameters as well. 4 lim w!1 min [1; (a w + b w ) 1=w ] = max (a; b) * Pruning the number of input and output membership functions (see Sec- tion 4, and <ref> [14, 24] </ref>). * Adapting the shape of membership functions (see footnote 3 above). * Adaptation of And/Or aggregation operators. This could occur when the expert designing the rule base is satisfied with both the cardinality and shape of membership functions, as well as the setting up of rules (see [25]).
Reference: [15] <author> T. Yamaguchi, T. Takagi, and T. Mita, </author> <title> "Self-organizing control using fuzzy neural networks", </title> <journal> Int. J. Control, </journal> <volume> vol. 56, no. 2, </volume> <pages> pp. 415-439, </pages> <year> 1992. </year> <month> 18 </month>
Reference-contexts: This is followed by the defuzzification stage resulting in a crisp output. The rule base is typically crafted by an expert; though self organizing procedures have been suggested <ref> [6, 7, 8, 9, 10, 11, 12, 13, 14, 15] </ref>. There are a number of different ways to implement the fuzzy inference engine.
Reference: [16] <author> D. Driankov, H. Hellendoorn, and M. Reinfrank, </author> <title> An Introduction to Fuzzy Control, </title> <address> New York: </address> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: The output fuzzy set is subsequently defuzzified to arrive at a crisp control action. Other techniques include sum-product and threshold inference. A review of these is given by Driankov et. al. <ref> [16] </ref>. 1.3 Adaptation in Fuzzy Inference Systems All of the stages of the fuzzy inference system are affected by the choice of certain parameters. A list follows. The Fuzzifier The fuzzifier in Fig. 1 maps the input onto the continuous interval [0; 1] and has the following parameters: 1.
Reference: [17] <author> R.R. Yager, </author> <title> "On a general class of fuzzy connectives", </title> <journal> Fuzzy Sets and Systems, </journal> <volume> vol. 4, </volume> <pages> pp. 235-242, </pages> <year> 1980. </year>
Reference-contexts: The Inference Engine The inference engine is the system "decision maker" and determines how the system interprets the fuzzy linguistics. Its parameters are those of the aggregation operators which provide interpretation of connectives "And" and "Or". An example of a parameterized union operator is the Yager union <ref> [17] </ref>: min [1; (a w + b w ) 1=w ]; where the inputs are membership values a and b, and the parameter w ranges over (0; 1). 4 The Defuzzifier The defuzzification stage maps fuzzy consequents into crisp output values. Its design requires choice of 1.
Reference: [18] <author> C.T. Lin and C.S.G. Lee, </author> <title> "Neural network based fuzzy logic control and decision system", </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. 40, no. 12, </volume> <pages> pp. 1320-1336, </pages> <year> 1991. </year>
Reference-contexts: These techniques include: * Procyk and Mamdani's self-organizing process controller [6] which consid ered the issue of rule generation and adaptation. * Numerous methods involving the performing of steepest descent on the centroid and dispersion parameters of input and output membership functions <ref> [18, 19, 20, 21, 22, 23] </ref>. <p> Use of neural networks to perform this adaptation has been proposed by Lee et al. <ref> [18] </ref>. Other techniques proposed can be found in [20]- [23]. Our method more closely parallels that proposed by Nomura, Hayashi and Wakami [22].
Reference: [19] <author> R.J. Marks II, S. Oh, P. Arabshahi, T.P. Caudell, J.J. Choi and B.J. Song, </author> <title> "Steepest descent adaptation of min-max fuzzy If-Then rules", </title> <booktitle> Proc. Int. Joint Conf. on Neural Networks, </booktitle> <address> Beijing, China, </address> <year> 1992. </year>
Reference-contexts: These techniques include: * Procyk and Mamdani's self-organizing process controller [6] which consid ered the issue of rule generation and adaptation. * Numerous methods involving the performing of steepest descent on the centroid and dispersion parameters of input and output membership functions <ref> [18, 19, 20, 21, 22, 23] </ref>.
Reference: [20] <author> Y. Hayashi, E. Czogala, and J.J. Buckley, </author> <title> "Fuzzy neural controller", </title> <booktitle> Proc. 1st IEEE Int. Conf. on Fuzzy Systems, </booktitle> <address> San Diego, CA, </address> <pages> pp. 197-202, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: These techniques include: * Procyk and Mamdani's self-organizing process controller [6] which consid ered the issue of rule generation and adaptation. * Numerous methods involving the performing of steepest descent on the centroid and dispersion parameters of input and output membership functions <ref> [18, 19, 20, 21, 22, 23] </ref>. <p> Use of neural networks to perform this adaptation has been proposed by Lee et al. [18]. Other techniques proposed can be found in <ref> [20] </ref>- [23]. Our method more closely parallels that proposed by Nomura, Hayashi and Wakami [22]. In their work, membership functions are parameterized and steepest descent is performed with respect to each parameter using an error criterion, in order to obtain the set of parameters minimizing the error.
Reference: [21] <author> J.S.R. Jang, </author> <title> "Fuzzy controller design without domain experts", </title> <booktitle> Proc. 1st IEEE Int. Conf. on Fuzzy Systems, </booktitle> <address> San Diego, CA, </address> <pages> pp. 289-296, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: These techniques include: * Procyk and Mamdani's self-organizing process controller [6] which consid ered the issue of rule generation and adaptation. * Numerous methods involving the performing of steepest descent on the centroid and dispersion parameters of input and output membership functions <ref> [18, 19, 20, 21, 22, 23] </ref>.
Reference: [22] <author> H. Nomura, I. Hayashi and N. Wakami, </author> <title> "A learning method of fuzzy inference by descent method", </title> <booktitle> Proc. 1st IEEE Int. Conf. on Fuzzy Systems, </booktitle> <address> San Diego, CA, </address> <pages> pp. 485-491, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: These techniques include: * Procyk and Mamdani's self-organizing process controller [6] which consid ered the issue of rule generation and adaptation. * Numerous methods involving the performing of steepest descent on the centroid and dispersion parameters of input and output membership functions <ref> [18, 19, 20, 21, 22, 23] </ref>. <p> Use of neural networks to perform this adaptation has been proposed by Lee et al. [18]. Other techniques proposed can be found in [20]- [23]. Our method more closely parallels that proposed by Nomura, Hayashi and Wakami <ref> [22] </ref>. In their work, membership functions are parameterized and steepest descent is performed with respect to each parameter using an error criterion, in order to obtain the set of parameters minimizing the error.
Reference: [23] <author> L.X. Wang and J.M. Mendel, </author> <title> "Back-propagation fuzzy system as nonlinear dynamic system identifiers", </title> <booktitle> Proc. 1st IEEE Int. Conf. on Fuzzy Systems, </booktitle> <address> San Diego, CA, </address> <pages> pp. 1409-1418, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: These techniques include: * Procyk and Mamdani's self-organizing process controller [6] which consid ered the issue of rule generation and adaptation. * Numerous methods involving the performing of steepest descent on the centroid and dispersion parameters of input and output membership functions <ref> [18, 19, 20, 21, 22, 23] </ref>. <p> Use of neural networks to perform this adaptation has been proposed by Lee et al. [18]. Other techniques proposed can be found in [20]- <ref> [23] </ref>. Our method more closely parallels that proposed by Nomura, Hayashi and Wakami [22]. In their work, membership functions are parameterized and steepest descent is performed with respect to each parameter using an error criterion, in order to obtain the set of parameters minimizing the error.
Reference: [24] <author> B.G. Song., R.J. Marks II, S. Oh, P. </author> <title> Arabshahi and T.P. Caudell, "Adaptive membership function fusion and annihilation in fuzzy if-then rules", </title> <booktitle> Proc. 2nd IEEE Int. Conf. on Fuzzy Systems, </booktitle> <address> San Francisco, CA, </address> <pages> pp. 961-967, </pages> <month> March </month> <year> 1993. </year>
Reference-contexts: algorithms such as random search and conjugate gradient descent can be used in tuning such parameters as well. 4 lim w!1 min [1; (a w + b w ) 1=w ] = max (a; b) * Pruning the number of input and output membership functions (see Sec- tion 4, and <ref> [14, 24] </ref>). * Adapting the shape of membership functions (see footnote 3 above). * Adaptation of And/Or aggregation operators. This could occur when the expert designing the rule base is satisfied with both the cardinality and shape of membership functions, as well as the setting up of rules (see [25]).
Reference: [25] <author> P. Arabshahi, R.J. Marks II, and R. Reed, </author> <title> "Adaptation of Fuzzy Inferenc-ing: A Survey," </title> <booktitle> in Learning and Adaptive Systems, (Proc. IEEE/Nagoya University Workshop), </booktitle> <address> Nagoya, Japan, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: This could occur when the expert designing the rule base is satisfied with both the cardinality and shape of membership functions, as well as the setting up of rules (see <ref> [25] </ref>). A bibliography of these techniques is available [25]. In the next section we provide the necessary mathematical background for understanding the pointer adaptation process, which is considered in Section 3. We describe the adaptation process and demonstrate via a number of examples. <p> This could occur when the expert designing the rule base is satisfied with both the cardinality and shape of membership functions, as well as the setting up of rules (see <ref> [25] </ref>). A bibliography of these techniques is available [25]. In the next section we provide the necessary mathematical background for understanding the pointer adaptation process, which is considered in Section 3. We describe the adaptation process and demonstrate via a number of examples.
Reference: [26] <author> R. Reed, R.J. Marks II, and S. Oh, </author> <title> "Similarities of Error Regularization, Sigmoid Gain Scaling, Target Smoothing, and Training with Jitter", </title> <journal> IEEE Trans. Neural Networks, </journal> <volume> vol. 6, no. 3, </volume> <pages> pp. 529-538, </pages> <year> 1995. </year>
Reference-contexts: Alternately, if a membership function becomes too narrow, it can be totally deleted. In either case, the fuzzy decision process is pruned. In artificial neural networks, pruning neurons from hidden layers can improve the performance of the neural network <ref> [26] </ref>. Likewise, the performance of fuzzy inference can be improved through the adaptation and pruning of membership functions. The number of If-Then rules is also correspondingly reduced.
Reference: [27] <author> T. Terano, K. Asai and M. Sugeno, </author> <title> Fuzzy Systems Theory and its Applications, </title> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: k ff k m Z k Z k P : (28) Although we will use min-max inference, the pruning procedure described below can be applied to other fuzzy inference methods, wherein, for example, alternate forms of defuzzification are used or intersections and unions other than min and max are employed <ref> [5, 27] </ref>. Herein, we will assume all linguistic variables are scaled to the universe Herein, we will assume all linguistic variables are scaled to the universe of dis course on the interval [1; 1].

References-found: 27

