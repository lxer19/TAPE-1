URL: http://www-cse.ucsd.edu/users/crosin/icgasub.ps
Refering-URL: http://www-cse.ucsd.edu/users/crosin/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: crosin@cs.ucsd.edu  roberth@sdd.hp.com  wehart@cs.sandia.gov  rik@cs.ucsd.edu  
Title: A Comparison of Global and Local Search Methods in Drug Docking  
Author: Christopher D. Rosin R. Scott Halliday William E. Hart Richard K. Belew 
Address: San Diego  San Diego  
Affiliation: University of California,  Hewlett Packard  Sandia National Labs  University of California,  
Abstract: Molecular docking software makes computational predictions of the interaction of molecules. This can be useful, for example, in evaluating the binding of candidate drug molecules to a target molecule from a virus. In the Autodock docking software [11], a physical model is used to evaluate the energy of candidate docked configurations, and heuristic search is used to minimize this energy. Previous versions of Autodock used simulated annealing to do this heuristic search. We evaluate the use of the genetic algorithm with local search in Autodock. We investigate several GA-local search (GA-LS) hybrids and compare results with those obtained from simulated annealing. This comparison is done in terms of optimization success, and absolute success in finding the true physical docked configuration. We use these results to test the energy function and evaluate the success of the application.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Clark, D.E., and Westhead, D.R. </author> <year> (1996). </year> <title> "Evolutionary algorithms in computer-aided molecular design." </title> <journal> Journal of Computer-Aided Molecular Design 10 </journal> <pages> 337-358. </pages>
Reference-contexts: More recent efforts often employ an energy function such as that described for Autodock, and use heuristic search to minimize energy. The genetic algorithm is becoming a popular choice for the heuristic search method in docking applications; see <ref> [1] </ref> for references. Earlier versions of Autodock used simulated annealing for heuristic optimization [11, 4].
Reference: [2] <author> Freund, R.J., and Wilson, W.J. </author> <year> (1997). </year> <title> Statistical Methods. </title> <publisher> Academic Press. </publisher>
Reference-contexts: The nonparametric Kruskal-Wallis test was used to verify that there exist significant differences among the optimization methods (at the 5% level), in both energy and RMSD, for each test case. A directional post hoc comparison was used to locate these significant differences at the 5% level of significance <ref> [2] </ref>. This rank-based test gives an indication of which of two compared methods would be most likely to give the better result if a single run of each was performed. The significant differences in energy and RMSD are shown in Tables 2 and 3.
Reference: [3] <author> Goodsell, D.S., Lauble, H., Stout, C.D., and Olson, A.J. </author> <year> (1993). </year> <title> "Automated Docking in Crystallography: Analysis of the Substrates of Aconitase." Proteins: Structure, Function, </title> <booktitle> and Genetics 17 </booktitle> <pages> 1-10. </pages>
Reference-contexts: The genetic algorithm is becoming a popular choice for the heuristic search method in docking applications; see [1] for references. Earlier versions of Autodock used simulated annealing for heuristic optimization [11, 4]. There have been several successful applications of Autodock with simulated annealing <ref> [3, 9, 15, 14] </ref>, and it is a good testbed for comparison with the genetic algorithm because of the effort that has gone into optimizing simulated annealing parameters.
Reference: [4] <author> Goodsell, D.S., and Olson, A.J. </author> <year> (1990). </year> <title> "Automated Docking of Substrates to Proteins by Simulated Annealing." Proteins: Structure, Function, </title> <booktitle> and Genetics 8 </booktitle> <pages> 195-202. </pages>
Reference-contexts: Based on the success of docking, and the resulting docked configuration, designers can refine the drug molecule. 1.1 Autodock Autodock docks small flexible substrate molecules to large rigid macromolecules (such as proteins) <ref> [4, 11] </ref>. A candi date docking gives specific positions and orientations for the protein and small molecule. Autodock uses an approximate physical model to compute the free energy of a candidate docking, and uses a heuristic search to minimize this energy. <p> The genetic algorithm is becoming a popular choice for the heuristic search method in docking applications; see [1] for references. Earlier versions of Autodock used simulated annealing for heuristic optimization <ref> [11, 4] </ref>. There have been several successful applications of Autodock with simulated annealing [3, 9, 15, 14], and it is a good testbed for comparison with the genetic algorithm because of the effort that has gone into optimizing simulated annealing parameters.
Reference: [5] <author> Hart, W.E. </author> <year> (1994). </year> <title> Adaptive Global Optimization with Local Search. </title> <type> PhD thesis, </type> <institution> Computer Science & Engineering Department University of Califor-nia, </institution> <address> San Diego. ftp://ftp.cs.sandia.gov/pub/papers/ wehart/thesis.ps.gz </address>
Reference-contexts: A preliminary comparison of genetic algorithms and simulated annealing in Autodock appears in <ref> [5] </ref>. 2 Global and Local Search Methods Docking is a difficult optimization problem, and successful search requires efficient local search of each attractor basin, as well as effective global sampling across the entire range of possible docking orientations. <p> Our previous work [6] leads us to use Lamarckian GA-LS hybrids for the experiments presented here. In a GA-LS hybrid, mutation plays a somewhat different role than it does in a GA without explicit local search <ref> [5] </ref>. Without an explicit local search operator, it must be the mutation operator that makes small, refining moves that are not efficiently made using crossover and selection alone. With an explicit local search operator, however, the local-refinement requirement becomes unnecessary. <p> Mutation is still necessary for its other role in the GA: replacing alleles that might have disappeared. With only this function, mutation can take on a more exploratory role. Following Hart, we use Cauchy deviates for mutations in our GA-LS hybrids <ref> [5] </ref>. Cauchy deviates are a compromise between radical jumps to completely arbitrary sections of the solution space and exploring the local richness of the current point. There are good reasons to believe that global-local search hybrids may perform better on optimization problems than either type separately [5, 7]. <p> Cauchy deviates are a compromise between radical jumps to completely arbitrary sections of the solution space and exploring the local richness of the current point. There are good reasons to believe that global-local search hybrids may perform better on optimization problems than either type separately <ref> [5, 7] </ref>. This is due in part to the smoothing performed by local search. Global search methods are good at identifying promising areas of the solution space, while local search methods do well at refining a good solution. <p> Following Hart <ref> [5] </ref>, we use a Solis & Wets local search algorithm in our GA-LS hybrid. This local search algorithm is a randomized hillclimber with an adaptive step size. Each step starts with a current point x. <p> This would make gradient-based local search a poor choice for Autodock. 2.3 Genetic Algorithm and Global-Local Search Hybrids We combine both GA and local search techniques into hybrids which perform a generation of the GA followed (at some frequency) by (some number of iterations of) local search <ref> [5] </ref>. The GA-LS hybrids here are Lamarckian. We have previously illustrated how applying local search to a small fraction of the population can sometimes improve the efficiency of GA-LS hybrids [5]. <p> hybrids which perform a generation of the GA followed (at some frequency) by (some number of iterations of) local search <ref> [5] </ref>. The GA-LS hybrids here are Lamarckian. We have previously illustrated how applying local search to a small fraction of the population can sometimes improve the efficiency of GA-LS hybrids [5]. <p> Since each gene is real-valued, the standard bit-flip type mutation is no longer appropriate. In this implementation, mutation is performed by adding a Cauchy deviate to the particular gene to be mutated <ref> [5] </ref>. The Cauchy distribution has the form: C (x; ff; fi) = fi 2 + (x ff) 2 3 Test Methods and Experiments A test suite of six cases was used in all of the experiments. Each test case consists of a macromolecule and a small substrate molecule.
Reference: [6] <author> Hart, W.E., and Belew, R.K. </author> <year> (1996). </year> <title> "Optimization with Genetic Algorithm Hybrids that Use Local Searches." </title> <editor> In R.K. Belew and M. Mitchell, editors, </editor> <booktitle> Adaptive Individuals in Evolving Populations, </booktitle> <pages> pp. 483-496. </pages> <publisher> Addison-Wesley. </publisher>
Reference-contexts: This requires the use of a (biologically unrealistic!) mapping from the "acquired, phenotypic" end-point of local search back to the genetic representation used by the GA. In Autodock, the GA and local search operate on the same representation, so this mapping is trivial. Our previous work <ref> [6] </ref> leads us to use Lamarckian GA-LS hybrids for the experiments presented here. In a GA-LS hybrid, mutation plays a somewhat different role than it does in a GA without explicit local search [5].
Reference: [7] <author> Hart, W.E., Kammeyer, T.E., and Belew, R.K. </author> <year> (1994). </year> <title> "The Role of Development in Genetic Algorithms." </title> <editor> In D. Whitley and M. Vose, editors, </editor> <booktitle> Foundations of Genetic Algorithms III, </booktitle> <pages> pp. 315-332. </pages> <publisher> Morgan Kaufman. </publisher>
Reference-contexts: Cauchy deviates are a compromise between radical jumps to completely arbitrary sections of the solution space and exploring the local richness of the current point. There are good reasons to believe that global-local search hybrids may perform better on optimization problems than either type separately <ref> [5, 7] </ref>. This is due in part to the smoothing performed by local search. Global search methods are good at identifying promising areas of the solution space, while local search methods do well at refining a good solution.
Reference: [8] <author> Kuntz, I.D., Blaney, J.M., Oatley, S.J., Langridge, R., and Ferrin, T.E. </author> <year> (1982). </year> <title> "A Geometric Approach to Macromolecule-Ligand Interactions." </title> <journal> Journal of Molecular Biology 161 </journal> <pages> 269-288. </pages>
Reference-contexts: This makes Autodock an important computational tool in the initial stages of drug design. 1.2 Prior Work Molecular docking has received much attention in computational biology. The DOCK program <ref> [8] </ref> was one of the first approaches to this problem, and current versions of it are still used. It attempts to find binding sites based on physical properties of the docking molecules, without doing a complete heuristic search of possible docked configurations.
Reference: [9] <author> Lunney, E.A., Hagen, S.E. et al. </author> <year> (1994). </year> <title> "A Novel Nonpeptide HIV-1 Protease Inhibitor: Elucidation of the Binding Mode and its Application in the Design of Related Analogs." </title> <journal> Journal of Medicinal Chemistry 37 </journal> <pages> 2664-2677. </pages>
Reference-contexts: The genetic algorithm is becoming a popular choice for the heuristic search method in docking applications; see [1] for references. Earlier versions of Autodock used simulated annealing for heuristic optimization [11, 4]. There have been several successful applications of Autodock with simulated annealing <ref> [3, 9, 15, 14] </ref>, and it is a good testbed for comparison with the genetic algorithm because of the effort that has gone into optimizing simulated annealing parameters.
Reference: [10] <author> MOPAC quantum chemistry software. </author> <title> Available from Quantum Chemistry Program Exchange, </title> <institution> Indiana University. </institution>
Reference-contexts: Partial charges are required to calculate electrostatic interaction potentials, but these partial charges can be computed from the structure with molecular modelling software such as MOPAC <ref> [10] </ref>. So, it is possible to use Autodock to test many candidate small molecules against a single target protein, after obtaining the structure of this protein experimentally.
Reference: [11] <author> Morris, G.M., Goodsell, D.S., Huey, R., and Ol-son, A.J. </author> <year> (1996). </year> <title> "Distributed Automated Docking of Flexible Ligands to Proteins: </title> <booktitle> Parallel Applications of Autodock 2.4." The Journal of Computer-Aided Molecular Design 10 </booktitle> <pages> 293-304. </pages>
Reference-contexts: Based on the success of docking, and the resulting docked configuration, designers can refine the drug molecule. 1.1 Autodock Autodock docks small flexible substrate molecules to large rigid macromolecules (such as proteins) <ref> [4, 11] </ref>. A candi date docking gives specific positions and orientations for the protein and small molecule. Autodock uses an approximate physical model to compute the free energy of a candidate docking, and uses a heuristic search to minimize this energy. <p> The genetic algorithm is becoming a popular choice for the heuristic search method in docking applications; see [1] for references. Earlier versions of Autodock used simulated annealing for heuristic optimization <ref> [11, 4] </ref>. There have been several successful applications of Autodock with simulated annealing [3, 9, 15, 14], and it is a good testbed for comparison with the genetic algorithm because of the effort that has gone into optimizing simulated annealing parameters. <p> Each cycle begins with the lowest-energy configuration from the previous cycle. Translational maximum step sizes are reduced from 3.0 to 0.2 angstroms linearly during from first cycle to last cycle, and angle maximum step sizes are similarly reduced from 24 to 5 degrees during the run <ref> [11] </ref>. 2.2 Solis and Wets' Algorithm Solis and Wets describe a class of local and global search algorithms [13] with proofs of convergence in the limit of infinite search time. Following Hart [5], we use a Solis & Wets local search algorithm in our GA-LS hybrid. <p> Each test case consists of a macromolecule and a small substrate molecule. The salient features of the six test cases are summarized in Table 1. The different test cases were selected to test various aspects of the energy function <ref> [11] </ref>. The number of torsions is very important because it sets the dimensionality of the search space. The representation used in each experiment consisted of a triple of Cartesian coordinates, a four dimensional quaternion, and the torsions. So, the dimensionality of the search space is 7+(number of torsions). <p> We are currently looking at using a genetic algorithm for this outer loop. Acknowledgements Garrett Morris, David Goodsell, Ruth Huey and Arthur Olson wrote the simulated annealing version of Autodock at the Scripps Research Institute, and did the SA runs used in this paper <ref> [11] </ref>.
Reference: [12] <author> Olson, A.J., Goodsell, D.S., Morris, G.M., and Huey, R. </author> <year> (1995). </year> <title> Autodock User Guide: Automated Docking of Flexible Ligands to Receptors, </title> <type> Version 2.4. </type> <institution> Scripps Research Institute, Department of Molecular Biology. </institution> <address> http://www.scripps.edu/pub/olson-web/doc/ autodock/documentation.html </address>
Reference-contexts: C 12 and C 6 are chosen appropriately for the atom types involved in the pairwise interaction (for example, carbon with nitrogen or hydrogen with oxygen); see <ref> [12] </ref> for details. Hydrogen bonds use a longer-range 12-10 potential. Finally, an additional contribution is added for electrostatic interac 1 tions. Due to bond asymmetries, atoms in a molecule act as if they have partial charges. Electrostatic potentials are based on these partial charges.
Reference: [13] <author> Solis, F.J., and Wets, R.J-B. </author> <year> (1981). </year> <title> "Minimization by Random Search Techniques." </title> <journal> Mathematical Operations Research 6 </journal> <pages> 19-30. </pages>
Reference-contexts: sizes are reduced from 3.0 to 0.2 angstroms linearly during from first cycle to last cycle, and angle maximum step sizes are similarly reduced from 24 to 5 degrees during the run [11]. 2.2 Solis and Wets' Algorithm Solis and Wets describe a class of local and global search algorithms <ref> [13] </ref> with proofs of convergence in the limit of infinite search time. Following Hart [5], we use a Solis & Wets local search algorithm in our GA-LS hybrid. This local search algorithm is a randomized hillclimber with an adaptive step size. Each step starts with a current point x.
Reference: [14] <author> Stoddard, B.L., and Koshland, D.E. </author> <year> (1992). </year> <title> "Prediction of the Structure of a Receptor-Protein Complex Using a Binary Docking Method." </title> <booktitle> Nature 358 </booktitle> <pages> 774-776. </pages>
Reference-contexts: The genetic algorithm is becoming a popular choice for the heuristic search method in docking applications; see [1] for references. Earlier versions of Autodock used simulated annealing for heuristic optimization [11, 4]. There have been several successful applications of Autodock with simulated annealing <ref> [3, 9, 15, 14] </ref>, and it is a good testbed for comparison with the genetic algorithm because of the effort that has gone into optimizing simulated annealing parameters.
Reference: [15] <author> Vara Prasad, J.V.N., </author> <title> Para, K.S. </title> <editor> et al. </editor> <year> (1994). </year> <title> "Novel Series of Achiral, Low Molecular Weight, </title> <journal> and Potent HIV-1 Protease Inhibitors." Journal of the American Chemical Society 116 </journal> <pages> 6989-6990. </pages> <address> 7 2cpp 3ptb 2mcp 1stp 1hvr 4hmg 8 </address>
Reference-contexts: The genetic algorithm is becoming a popular choice for the heuristic search method in docking applications; see [1] for references. Earlier versions of Autodock used simulated annealing for heuristic optimization [11, 4]. There have been several successful applications of Autodock with simulated annealing <ref> [3, 9, 15, 14] </ref>, and it is a good testbed for comparison with the genetic algorithm because of the effort that has gone into optimizing simulated annealing parameters.
References-found: 15

