URL: http://www-ai.ijs.si/DarkoZupanic/cp95wsf.ps
Refering-URL: http://www-ai.ijs.si/DarkoZupanic/home.html
Root-URL: 
Email: E-mail: darko.zupanic@ijs.si  
Phone: Phone: (+386)(61) 1773745, Fax: (+386)(61) 12581038  
Title: Optimal solution for a real-life job scheduling problem Cost k (1) where P artCost is
Author: Darko Zupanic artCost cost(i; val j &lt; M inCost l X B. Neumann. 
Note: P  References  In Proceedings of the Tenth European Conference on Artificial Intelligence, pages 603-607,  and ICL-ITC, 1994 Project  the Third Electrotechnical and Computer Science Conference, pages 67-70, Portoroz, Slovenia, 1994. Slovenia Section IEEE.  
Address: Jamova 39, 61000 Ljubljana, Slovenia  Vienna, Austria, 1992.  
Affiliation: Jozef Stefan Institute, Department for Intelligent Systems  ECRC  
Abstract: A scheduling problem can be simply described as a set of constraints within which an optimal schedule solution must be found. Using a Constraint Logic Programming (CLP) approach a difficult real-life example problem of job scheduling was successfully solved. The scheduling problem is concerned with optimizing energy consumption in a production unit of a textile factory. The problem can be divided into two parts. First, there are work environment constraints that determine the admissible schedule solutions. And second, once we have these admissible schedule solutions, we search for an optimal schedule solution according to some optimisation criteria. The optimal problem solution was obtained by exhaustive search in a substantially constrainted space of admissible solutions. The exhaustive search was possible because of using different techniques for space pruning. The scheduling problem is formulated and solved in the CLP system ECL i PS e [ ECRC and ICL-ITC, 1994 ] and therefore uses its potentials. The size of the search space was still too large to perform exhaustive search. In addition, we implemented an intelligent enumeration method which highly decrease the size of the search space and actually enable the exhaustive search. The intelligent enumeration method uses the depth-first search strategy. The idea is based on the evaluation of a cost function after each step of the solution construction. Instead of comparing the cost of a partial solution to the cost of a best solution so far, the comparison is made to the cost of a best solution so far subtracted by a predicted cost of the rest of the partial solution. The predicted cost is computed from the costs of each part of the solution gathered in the first phase of the method. Each variable X i (i = 1; 2; :::; n) has a domain D i and attached constraints C i . For each of the variables' values we can compute contribution to the cost: Cost ij = cost(i; val j ); val j 2 D i according to C i . Next, from 8i; j : Cost i = min(Cost ij ) we get CostInf o = [Cost 1 ; Cost 2 ; :::; Cost n ] For each variable separated from the others the minimal contribution to the cost is evaluated. Therefore the optimal cost of the schedule can not be less than sum of the Cost i . The solution construction step is started by selecting of the variable X i . If the condition The efficiency of search space pruning with the intelligent enumeration method depends on the difference between the predicted cost and the actual cost of the solution parts. The difference can be minimized by introducing additional levels between single variables and all variables at once. Therefore, the composition of the variables into groups is introduced. These groups can be further composed into next level groups and so on. Using the group costs in the sum from (1) contributes to the better space pruning (it means that we made better prediction). Using constraints, we have succeeded to reduce the entire search space from 10 49 possible solutions to 10 5 admissible solutions. The optimal result of 560 kWh energy over the fixed limit is better than the currently best known result [ Filipic, 1992; Zupanic, 1994 ] . In the first place, the enumeration method did not use any additional information. After twelve hours (Sun Sparc 10) we interrupted the test. The enumeration method covered 1 64 of the search space. The second part of our experiment used intelligent enumeration method. In the cost information gathering phase each startup variable appears only autonomously. After 17 seconds of gathering the cost information the whole enumeration process took 9 hours. Finally, we grouped the variables on two levels. The gathering of the cost information took 616 seconds. With the assist of this cost information the time of the enumeration was reduced to 703 seconds. 
Abstract-found: 1
Intro-found: 0
Reference: [ Filipic, 1992 ] <author> Bogdan Filipic. </author> <title> Enhancing genetic search to schedule a production unit. </title> <booktitle> In Proceedings of the Tenth European Conference on Artificial Intelligence, </booktitle> <pages> pages 603-607, </pages> <address> Vienna, Austria, 1992. </address> <publisher> B. Neumann. </publisher>
Reference: [ ECRC and ICL-ITC, 1994 ] <author> Project Team. </author> <title> ECL i PS e 3.4, ECRC Common Logic Programming System. User Manual, </title> <month> January </month> <year> 1994, </year> <title> c flInternational Computers Limited and ECRC GmbH 1992. </title>
Reference: [ Zupanic, 1994 ] <author> Darko Zupanic. </author> <title> Solving a job scheduling problem with CLP. </title> <booktitle> In Proceedings of the Third Electrotechnical and Computer Science Conference, </booktitle> <pages> pages 67-70, </pages> <note> Portoroz, Slovenia, 1994. Slovenia Section IEEE. </note>
References-found: 3

