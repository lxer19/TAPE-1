URL: http://kirmes.inferenzsysteme.informatik.th-darmstadt.de/~giesl/system_description.ps
Refering-URL: http://www.inferenzsysteme.informatik.tu-darmstadt.de/~giesl/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: Email: giesl@inferenzsysteme.informatik.th-darmstadt.de  
Title: POLO A System for Termination Proofs using Polynomial Orderings  
Author: Jurgen Giesl 
Address: Alexanderstr. 10, 64283 Darmstadt, Germany  
Affiliation: FB Informatik, Technische Hochschule Darmstadt,  
Abstract: POLO is a system for both semi-automatic and fully automated termination proofs of term rewriting systems using polynomial orderings. In this paper we describe the system's user interface and illustrate its performance with some examples.
Abstract-found: 1
Intro-found: 1
Reference: [ACM84] <author> D. S. Arnon, G. E. Collins & S. McCallum. </author> <title> Cylindrical Algebraic Decomposition I. </title> <journal> SIAM Journal of Computing, </journal> <volume> 13(4): </volume> <pages> 865-877, </pages> <year> 1984. </year>
Reference-contexts: f and g have the same arity and f precedes g in the list of declared function symbols, then f gets more time than g. 2.5 The modified Collins algorithm As described in [Gie95a], [Gie95b] the solutions can also be computed using an incomplete modification of Collins' decision algorithm [Col75], <ref> [ACM84] </ref>. To choose this method you have to enter the command C in the "change method" mode of the system. Again there are several parameters you can inspect and change.
Reference: [Bel84] <author> F. Bellegarde. </author> <title> Rewriting Systems on FP Expressions that reduce the Number of Sequences they yield. </title> <booktitle> Symposium on LISP and Functional Programming, ACM, </booktitle> <address> Austin, TX, </address> <year> 1984. </year>
Reference-contexts: Boolean Ring 2 S TESTING 0.4 sec. [Hsi82], [BL87, p. 152] (2 1 0), 20 sec. Neutral Elements Distributivity S TESTING 0.4 sec. [Pau84], [Ste91, Example 8.13] (2 1 0), 20 sec. Plus S TESTING 0.6 sec. (2 1 0), 20 sec. Endomorphism Associativity V TESTING 0.1 sec. <ref> [Bel84] </ref>, [BL87] ( = 2, (2 1 0), 20 sec. Endomorphism Associativity S TESTING 0.8 sec. [Bel84], [BL87] (2 1 0), 20 sec. Endomorphism Associativity V COLLINS 35.5 sec. [Bel84], [BL87] ( = 2) 40 sec., 1/3, :neg., rat. <p> Neutral Elements Distributivity S TESTING 0.4 sec. [Pau84], [Ste91, Example 8.13] (2 1 0), 20 sec. Plus S TESTING 0.6 sec. (2 1 0), 20 sec. Endomorphism Associativity V TESTING 0.1 sec. <ref> [Bel84] </ref>, [BL87] ( = 2, (2 1 0), 20 sec. Endomorphism Associativity S TESTING 0.8 sec. [Bel84], [BL87] (2 1 0), 20 sec. Endomorphism Associativity V COLLINS 35.5 sec. [Bel84], [BL87] ( = 2) 40 sec., 1/3, :neg., rat. Distributivity Associativity S TESTING 1.9 sec. [Der87, p. 78] (2 1 0), 20 sec. <p> Plus S TESTING 0.6 sec. (2 1 0), 20 sec. Endomorphism Associativity V TESTING 0.1 sec. <ref> [Bel84] </ref>, [BL87] ( = 2, (2 1 0), 20 sec. Endomorphism Associativity S TESTING 0.8 sec. [Bel84], [BL87] (2 1 0), 20 sec. Endomorphism Associativity V COLLINS 35.5 sec. [Bel84], [BL87] ( = 2) 40 sec., 1/3, :neg., rat. Distributivity Associativity S TESTING 1.9 sec. [Der87, p. 78] (2 1 0), 20 sec.
Reference: [BL87] <author> A. Ben Cherifa & P. Lescanne. </author> <title> Termination of Rewriting Systems by Polynomial Interpretations and its Implementation. </title> <booktitle> Science of Computer Programming, </booktitle> <volume> 9(2) </volume> <pages> 137-159, </pages> <year> 1987. </year>
Reference-contexts: Stack 1 TESTING 0.1 sec. [DJ90, p. 253] (2 1 0), 20 sec. Boolean Ring 1 S TESTING 0.3 sec. [HD83], [Der87, p. 102] (2 1 0), 20 sec. Boolean Ring 2 S TESTING 0.4 sec. [Hsi82], <ref> [BL87, p. 152] </ref> (2 1 0), 20 sec. Neutral Elements Distributivity S TESTING 0.4 sec. [Pau84], [Ste91, Example 8.13] (2 1 0), 20 sec. Plus S TESTING 0.6 sec. (2 1 0), 20 sec. Endomorphism Associativity V TESTING 0.1 sec. [Bel84], [BL87] ( = 2, (2 1 0), 20 sec. <p> Boolean Ring 2 S TESTING 0.4 sec. [Hsi82], [BL87, p. 152] (2 1 0), 20 sec. Neutral Elements Distributivity S TESTING 0.4 sec. [Pau84], [Ste91, Example 8.13] (2 1 0), 20 sec. Plus S TESTING 0.6 sec. (2 1 0), 20 sec. Endomorphism Associativity V TESTING 0.1 sec. [Bel84], <ref> [BL87] </ref> ( = 2, (2 1 0), 20 sec. Endomorphism Associativity S TESTING 0.8 sec. [Bel84], [BL87] (2 1 0), 20 sec. Endomorphism Associativity V COLLINS 35.5 sec. [Bel84], [BL87] ( = 2) 40 sec., 1/3, :neg., rat. <p> Neutral Elements Distributivity S TESTING 0.4 sec. [Pau84], [Ste91, Example 8.13] (2 1 0), 20 sec. Plus S TESTING 0.6 sec. (2 1 0), 20 sec. Endomorphism Associativity V TESTING 0.1 sec. [Bel84], <ref> [BL87] </ref> ( = 2, (2 1 0), 20 sec. Endomorphism Associativity S TESTING 0.8 sec. [Bel84], [BL87] (2 1 0), 20 sec. Endomorphism Associativity V COLLINS 35.5 sec. [Bel84], [BL87] ( = 2) 40 sec., 1/3, :neg., rat. Distributivity Associativity S TESTING 1.9 sec. [Der87, p. 78] (2 1 0), 20 sec. <p> Plus S TESTING 0.6 sec. (2 1 0), 20 sec. Endomorphism Associativity V TESTING 0.1 sec. [Bel84], <ref> [BL87] </ref> ( = 2, (2 1 0), 20 sec. Endomorphism Associativity S TESTING 0.8 sec. [Bel84], [BL87] (2 1 0), 20 sec. Endomorphism Associativity V COLLINS 35.5 sec. [Bel84], [BL87] ( = 2) 40 sec., 1/3, :neg., rat. Distributivity Associativity S TESTING 1.9 sec. [Der87, p. 78] (2 1 0), 20 sec. <p> Symbolic Differentiation F TESTING 0.6 sec. [Knu73], [Der87, p. 79] (1 0), 20 sec. Symbolic Differentiation long F TESTING 0.2 sec. [Knu73], [Der87, p. 79] (2 1 0), 20 sec. Groups F TESTING 0.9 sec. [Hue80], <ref> [BL87, p. 151] </ref> (2 1 0), 20 sec. Taussky Group F TESTING 5.5 sec. [KB70], [BL87, p. 155], [Ste91, Example 8.4] (2 1 0), 20 sec. <p> Symbolic Differentiation long F TESTING 0.2 sec. [Knu73], [Der87, p. 79] (2 1 0), 20 sec. Groups F TESTING 0.9 sec. [Hue80], [BL87, p. 151] (2 1 0), 20 sec. Taussky Group F TESTING 5.5 sec. [KB70], <ref> [BL87, p. 155] </ref>, [Ste91, Example 8.4] (2 1 0), 20 sec.
Reference: [Col75] <author> G. E. Collins. </author> <title> Quantifier Elimination for Real Closed Fields by Cylindrical Algebraic Decomposition. </title> <booktitle> In Proc. 2nd GI Conf. on Automata Theory and Formal Languages, </booktitle> <address> Kaiserslautern, Germany, </address> <year> 1975. </year>
Reference-contexts: if f and g have the same arity and f precedes g in the list of declared function symbols, then f gets more time than g. 2.5 The modified Collins algorithm As described in [Gie95a], [Gie95b] the solutions can also be computed using an incomplete modification of Collins' decision algorithm <ref> [Col75] </ref>, [ACM84]. To choose this method you have to enter the command C in the "change method" mode of the system. Again there are several parameters you can inspect and change.
Reference: [Der87] <author> N. Dershowitz. </author> <title> Termination of Rewriting. </title> <journal> Journal of Symbolic Computation, </journal> <volume> 3(1, </volume> 2):69-115, 1987. 
Reference-contexts: Flatten S TESTING 0.8 sec. (2 1 0), 20 sec. Flatten V COLLINS 20.4 sec. ( = 2, nil = 2) 40 sec., 1/3, :neg., rat. Stack 1 TESTING 0.1 sec. [DJ90, p. 253] (2 1 0), 20 sec. Boolean Ring 1 S TESTING 0.3 sec. [HD83], <ref> [Der87, p. 102] </ref> (2 1 0), 20 sec. Boolean Ring 2 S TESTING 0.4 sec. [Hsi82], [BL87, p. 152] (2 1 0), 20 sec. Neutral Elements Distributivity S TESTING 0.4 sec. [Pau84], [Ste91, Example 8.13] (2 1 0), 20 sec. Plus S TESTING 0.6 sec. (2 1 0), 20 sec. <p> Endomorphism Associativity S TESTING 0.8 sec. [Bel84], [BL87] (2 1 0), 20 sec. Endomorphism Associativity V COLLINS 35.5 sec. [Bel84], [BL87] ( = 2) 40 sec., 1/3, :neg., rat. Distributivity Associativity S TESTING 1.9 sec. <ref> [Der87, p. 78] </ref> (2 1 0), 20 sec. Distributivity Associativity V COLLINS 25.1 sec. [Der87, p. 78] ( = 2, 40 sec., 1/3, :neg., :rat. plus (x; y) = v + vx + vy) 14 File Approach Method Time Binomial Coefficients S TESTING 1.6 sec. [Ste91, Example 8.8], [Ste92, Example 13] <p> Endomorphism Associativity S TESTING 0.8 sec. [Bel84], [BL87] (2 1 0), 20 sec. Endomorphism Associativity V COLLINS 35.5 sec. [Bel84], [BL87] ( = 2) 40 sec., 1/3, :neg., rat. Distributivity Associativity S TESTING 1.9 sec. <ref> [Der87, p. 78] </ref> (2 1 0), 20 sec. Distributivity Associativity V COLLINS 25.1 sec. [Der87, p. 78] ( = 2, 40 sec., 1/3, :neg., :rat. plus (x; y) = v + vx + vy) 14 File Approach Method Time Binomial Coefficients S TESTING 1.6 sec. [Ste91, Example 8.8], [Ste92, Example 13] (2 1 0), 20 sec. <p> Boolean Ring 3 F TESTING 2.6 sec. [Ste91, Example 8.5] (2 1 0), 20 sec. Reverse F TESTING 1.7 sec. [Ste91, Example 8.6] (2 1 0), 20 sec. Symbolic Differentiation F TESTING 3.4 sec. [Knu73], <ref> [Der87, p. 79] </ref> (2 1 0), 20 sec. Symbolic Differentiation F TESTING 0.6 sec. [Knu73], [Der87, p. 79] (1 0), 20 sec. Symbolic Differentiation long F TESTING 0.2 sec. [Knu73], [Der87, p. 79] (2 1 0), 20 sec. <p> Reverse F TESTING 1.7 sec. [Ste91, Example 8.6] (2 1 0), 20 sec. Symbolic Differentiation F TESTING 3.4 sec. [Knu73], <ref> [Der87, p. 79] </ref> (2 1 0), 20 sec. Symbolic Differentiation F TESTING 0.6 sec. [Knu73], [Der87, p. 79] (1 0), 20 sec. Symbolic Differentiation long F TESTING 0.2 sec. [Knu73], [Der87, p. 79] (2 1 0), 20 sec. Groups F TESTING 0.9 sec. [Hue80], [BL87, p. 151] (2 1 0), 20 sec. <p> Symbolic Differentiation F TESTING 3.4 sec. [Knu73], <ref> [Der87, p. 79] </ref> (2 1 0), 20 sec. Symbolic Differentiation F TESTING 0.6 sec. [Knu73], [Der87, p. 79] (1 0), 20 sec. Symbolic Differentiation long F TESTING 0.2 sec. [Knu73], [Der87, p. 79] (2 1 0), 20 sec. Groups F TESTING 0.9 sec. [Hue80], [BL87, p. 151] (2 1 0), 20 sec. Taussky Group F TESTING 5.5 sec. [KB70], [BL87, p. 155], [Ste91, Example 8.4] (2 1 0), 20 sec. <p> Table 1: Experiments run with POLO. 15 Note that a manual termination proof of these term rewriting systems is not at all trivial. Proving termination of Symbolic Differentiation was one of the problems on a qualifying exam given at Carnegie-Mellon University in 1967 <ref> [Der87] </ref>. The POLO system can also be used for term rewriting systems which require non simple-mixed polynomial orderings (such as Taussky Group [KB70]) or for systems where a polynomial ordering with coefficients different from 2, 1, 0 is needed (e.g. Fibonacci Group [Ste91, Example 8.2]).
Reference: [DJ90] <author> N. Dershowitz & J.-P. Jouannaud. </author> <title> Rewrite Systems. </title> <booktitle> Handbook of Theoretical Comp. Science, </booktitle> <editor> J. van Leuwen, Ed., </editor> <volume> vol. </volume> <editor> B, ch. </editor> <volume> 6, </volume> <pages> pp. 243-320, </pages> <publisher> Elsevier, </publisher> <year> 1990. </year>
Reference-contexts: Flatten 1 TESTING 0.04 sec. (2 1 0), 20 sec. Flatten S TESTING 0.8 sec. (2 1 0), 20 sec. Flatten V COLLINS 20.4 sec. ( = 2, nil = 2) 40 sec., 1/3, :neg., rat. Stack 1 TESTING 0.1 sec. <ref> [DJ90, p. 253] </ref> (2 1 0), 20 sec. Boolean Ring 1 S TESTING 0.3 sec. [HD83], [Der87, p. 102] (2 1 0), 20 sec. Boolean Ring 2 S TESTING 0.4 sec. [Hsi82], [BL87, p. 152] (2 1 0), 20 sec.
Reference: [Gie95a] <author> J. Giesl. </author> <title> Generating Polynomial Orderings for Termination Proofs. </title> <booktitle> In Proc. 6th Int. Conf. Rewriting Techniques and Applications, </booktitle> <address> Kaiserslautern, Germany, </address> <year> 1995. </year>
Reference-contexts: 1 Introduction In <ref> [Gie95a] </ref> and [Gie95b] we presented a method for automated termination proofs of term rewriting systems using polynomial orderings. This technique has been implemented in the POLO system. It runs under Common Lisp and is available by anonymous ftp from kirmes.inferenzsysteme.informatik. th-darmstadt.de under pub/termination. <p> Function symbols with a small arity get more time than those with higher arity and if f and g have the same arity and f precedes g in the list of declared function symbols, then f gets more time than g. 2.5 The modified Collins algorithm As described in <ref> [Gie95a] </ref>, [Gie95b] the solutions can also be computed using an incomplete modification of Collins' decision algorithm [Col75], [ACM84]. To choose this method you have to enter the command C in the "change method" mode of the system. Again there are several parameters you can inspect and change. <p> If all numerical coefficients of the actual polynomial interpretation and all possible solutions for the variable coefficients are integers, then the system uses the termination criterion of theorem 2 in [Gie95b]. Otherwise the termination criterion of theorem 3 in [Gie95b] (i.e. theorem 1 in <ref> [Gie95a] </ref>) is used. 3 Experimental Results In this section we illustrate the performance of the POLO system with some examples. Table 1 summarizes these results (run on a Sun SPARC-2). <p> If used in such a semi-automatic way POLO is extremely powerful (more efficient and slightly more powerful than all preceding systems, cf. <ref> [Gie95a] </ref>, [Gie95b]). Moreover, POLO can also be used to determine the values of variable coefficients. If the number of unknown coefficients is not too high, then it is likely that a solution will be found quickly. <p> For most of the commonly used term rewriting systems the TESTING method with the coefficients (2 1 0) will suffice. Efficient application of this method is only possible, because the technique in <ref> [Gie95a] </ref>, [Gie95b] makes the test whether the trs is compatible with a certain polynomial ordering trivial. If there are only few variable coefficients and a solution with commonly used values cannot be found, then it is possible to use the modified incomplete COLLINS method to search for an instantiation. <p> Now the polynomial interpretation must also be extended for this function symbol. For the soundness of the incomplete COLLINS method the elimination of rule variables in the technique of <ref> [Gie95a] </ref>, [Gie95b] is necessary. The POLO system is only a prototype which may be refined in future implementations. Nevertheless it demonstrates how the method in [Gie95a], [Gie95b] leads to an efficient, powerful and easy to implement algorithm which can be used in both a semi-automatic and a fully automated way. 16 <p> For the soundness of the incomplete COLLINS method the elimination of rule variables in the technique of <ref> [Gie95a] </ref>, [Gie95b] is necessary. The POLO system is only a prototype which may be refined in future implementations. Nevertheless it demonstrates how the method in [Gie95a], [Gie95b] leads to an efficient, powerful and easy to implement algorithm which can be used in both a semi-automatic and a fully automated way. 16 A Example Files A.1 Nested Function Symbols f (f (x)) -&gt; g (g (x)), functions: f, g. ================================================================= Nested Function Symbols (Steinbach 91, Example 8.1)
Reference: [Gie95b] <author> J. Giesl. </author> <title> Generating Polynomial Orderings for Termination Proofs (Extended Version). </title> <type> Technical Report IBN 95/23, </type> <institution> Technische Hochschule Darmstadt, Germany. </institution> <note> Available by anonymous ftp from kirmes.inferenzsysteme.informatik.th-darmstadt.de under pub/termination. </note>
Reference-contexts: 1 Introduction In [Gie95a] and <ref> [Gie95b] </ref> we presented a method for automated termination proofs of term rewriting systems using polynomial orderings. This technique has been implemented in the POLO system. It runs under Common Lisp and is available by anonymous ftp from kirmes.inferenzsysteme.informatik. th-darmstadt.de under pub/termination. <p> Function symbols with a small arity get more time than those with higher arity and if f and g have the same arity and f precedes g in the list of declared function symbols, then f gets more time than g. 2.5 The modified Collins algorithm As described in [Gie95a], <ref> [Gie95b] </ref> the solutions can also be computed using an incomplete modification of Collins' decision algorithm [Col75], [ACM84]. To choose this method you have to enter the command C in the "change method" mode of the system. Again there are several parameters you can inspect and change. <p> If all numerical coefficients of the actual polynomial interpretation and all possible solutions for the variable coefficients are integers, then the system uses the termination criterion of theorem 2 in <ref> [Gie95b] </ref>. Otherwise the termination criterion of theorem 3 in [Gie95b] (i.e. theorem 1 in [Gie95a]) is used. 3 Experimental Results In this section we illustrate the performance of the POLO system with some examples. Table 1 summarizes these results (run on a Sun SPARC-2). <p> If all numerical coefficients of the actual polynomial interpretation and all possible solutions for the variable coefficients are integers, then the system uses the termination criterion of theorem 2 in <ref> [Gie95b] </ref>. Otherwise the termination criterion of theorem 3 in [Gie95b] (i.e. theorem 1 in [Gie95a]) is used. 3 Experimental Results In this section we illustrate the performance of the POLO system with some examples. Table 1 summarizes these results (run on a Sun SPARC-2). <p> If used in such a semi-automatic way POLO is extremely powerful (more efficient and slightly more powerful than all preceding systems, cf. [Gie95a], <ref> [Gie95b] </ref>). Moreover, POLO can also be used to determine the values of variable coefficients. If the number of unknown coefficients is not too high, then it is likely that a solution will be found quickly. <p> For most of the commonly used term rewriting systems the TESTING method with the coefficients (2 1 0) will suffice. Efficient application of this method is only possible, because the technique in [Gie95a], <ref> [Gie95b] </ref> makes the test whether the trs is compatible with a certain polynomial ordering trivial. If there are only few variable coefficients and a solution with commonly used values cannot be found, then it is possible to use the modified incomplete COLLINS method to search for an instantiation. <p> Now the polynomial interpretation must also be extended for this function symbol. For the soundness of the incomplete COLLINS method the elimination of rule variables in the technique of [Gie95a], <ref> [Gie95b] </ref> is necessary. The POLO system is only a prototype which may be refined in future implementations. Nevertheless it demonstrates how the method in [Gie95a], [Gie95b] leads to an efficient, powerful and easy to implement algorithm which can be used in both a semi-automatic and a fully automated way. 16 A <p> For the soundness of the incomplete COLLINS method the elimination of rule variables in the technique of [Gie95a], <ref> [Gie95b] </ref> is necessary. The POLO system is only a prototype which may be refined in future implementations. Nevertheless it demonstrates how the method in [Gie95a], [Gie95b] leads to an efficient, powerful and easy to implement algorithm which can be used in both a semi-automatic and a fully automated way. 16 A Example Files A.1 Nested Function Symbols f (f (x)) -&gt; g (g (x)), functions: f, g. ================================================================= Nested Function Symbols (Steinbach 91, Example 8.1) A.2
Reference: [Hue80] <author> G. Huet. </author> <title> Confluent Reductions: Abstract Properties and Applications to Term Rewriting Systems. </title> <journal> Journal of the ACM 27(4) </journal> <pages> 797-821, </pages> <year> 1980. </year>
Reference-contexts: Symbolic Differentiation F TESTING 0.6 sec. [Knu73], [Der87, p. 79] (1 0), 20 sec. Symbolic Differentiation long F TESTING 0.2 sec. [Knu73], [Der87, p. 79] (2 1 0), 20 sec. Groups F TESTING 0.9 sec. <ref> [Hue80] </ref>, [BL87, p. 151] (2 1 0), 20 sec. Taussky Group F TESTING 5.5 sec. [KB70], [BL87, p. 155], [Ste91, Example 8.4] (2 1 0), 20 sec.
Reference: [Hsi82] <author> J. Hsiang. </author> <title> Topics in Automated Theorem Proving and Program Generation, </title> <type> PhD Thesis, </type> <institution> University of Illinois, </institution> <year> 1982. </year>
Reference-contexts: Stack 1 TESTING 0.1 sec. [DJ90, p. 253] (2 1 0), 20 sec. Boolean Ring 1 S TESTING 0.3 sec. [HD83], [Der87, p. 102] (2 1 0), 20 sec. Boolean Ring 2 S TESTING 0.4 sec. <ref> [Hsi82] </ref>, [BL87, p. 152] (2 1 0), 20 sec. Neutral Elements Distributivity S TESTING 0.4 sec. [Pau84], [Ste91, Example 8.13] (2 1 0), 20 sec. Plus S TESTING 0.6 sec. (2 1 0), 20 sec.
Reference: [HD83] <author> J. Hsiang & N. Dershowitz. </author> <title> Rewrite Methods for Clausal and Non-Clausal Theorem Proving. </title> <booktitle> In Proc. 10th EATCS Int. Colloquium on Automata, Languages and Programming, </booktitle> <address> Barcelona, Spain, </address> <year> 1983. </year> <month> 26 </month>
Reference-contexts: Flatten S TESTING 0.8 sec. (2 1 0), 20 sec. Flatten V COLLINS 20.4 sec. ( = 2, nil = 2) 40 sec., 1/3, :neg., rat. Stack 1 TESTING 0.1 sec. [DJ90, p. 253] (2 1 0), 20 sec. Boolean Ring 1 S TESTING 0.3 sec. <ref> [HD83] </ref>, [Der87, p. 102] (2 1 0), 20 sec. Boolean Ring 2 S TESTING 0.4 sec. [Hsi82], [BL87, p. 152] (2 1 0), 20 sec. Neutral Elements Distributivity S TESTING 0.4 sec. [Pau84], [Ste91, Example 8.13] (2 1 0), 20 sec.
Reference: [KB70] <author> D. E. Knuth & P. B. Bendix. </author> <title> Simple Word Problems in Universal Algebras. Computational Problems in Abstract Algebra, </title> <editor> J. Leech, ed., </editor> <publisher> Pergamon Press, </publisher> <pages> pp. 263-297, </pages> <year> 1970. </year>
Reference-contexts: Symbolic Differentiation long F TESTING 0.2 sec. [Knu73], [Der87, p. 79] (2 1 0), 20 sec. Groups F TESTING 0.9 sec. [Hue80], [BL87, p. 151] (2 1 0), 20 sec. Taussky Group F TESTING 5.5 sec. <ref> [KB70] </ref>, [BL87, p. 155], [Ste91, Example 8.4] (2 1 0), 20 sec. <p> Proving termination of Symbolic Differentiation was one of the problems on a qualifying exam given at Carnegie-Mellon University in 1967 [Der87]. The POLO system can also be used for term rewriting systems which require non simple-mixed polynomial orderings (such as Taussky Group <ref> [KB70] </ref>) or for systems where a polynomial ordering with coefficients different from 2, 1, 0 is needed (e.g. Fibonacci Group [Ste91, Example 8.2]).
Reference: [Knu73] <author> D. E. Knuth. </author> <title> Fundamental Algorithms. </title> <booktitle> In The Art of Computer Programming, </booktitle> <volume> vol. 1, </volume> <booktitle> 2nd edn. </booktitle> <address> Reading, MA. </address> <publisher> Addison-Wesley. </publisher> <year> 1973. </year>
Reference-contexts: Running Example F TESTING 0.2 sec. [Mid89], [Ste91, Example 6.1] (2 1 0), 20 sec. Boolean Ring 3 F TESTING 2.6 sec. [Ste91, Example 8.5] (2 1 0), 20 sec. Reverse F TESTING 1.7 sec. [Ste91, Example 8.6] (2 1 0), 20 sec. Symbolic Differentiation F TESTING 3.4 sec. <ref> [Knu73] </ref>, [Der87, p. 79] (2 1 0), 20 sec. Symbolic Differentiation F TESTING 0.6 sec. [Knu73], [Der87, p. 79] (1 0), 20 sec. Symbolic Differentiation long F TESTING 0.2 sec. [Knu73], [Der87, p. 79] (2 1 0), 20 sec. <p> Boolean Ring 3 F TESTING 2.6 sec. [Ste91, Example 8.5] (2 1 0), 20 sec. Reverse F TESTING 1.7 sec. [Ste91, Example 8.6] (2 1 0), 20 sec. Symbolic Differentiation F TESTING 3.4 sec. <ref> [Knu73] </ref>, [Der87, p. 79] (2 1 0), 20 sec. Symbolic Differentiation F TESTING 0.6 sec. [Knu73], [Der87, p. 79] (1 0), 20 sec. Symbolic Differentiation long F TESTING 0.2 sec. [Knu73], [Der87, p. 79] (2 1 0), 20 sec. Groups F TESTING 0.9 sec. [Hue80], [BL87, p. 151] (2 1 0), 20 sec. <p> Reverse F TESTING 1.7 sec. [Ste91, Example 8.6] (2 1 0), 20 sec. Symbolic Differentiation F TESTING 3.4 sec. <ref> [Knu73] </ref>, [Der87, p. 79] (2 1 0), 20 sec. Symbolic Differentiation F TESTING 0.6 sec. [Knu73], [Der87, p. 79] (1 0), 20 sec. Symbolic Differentiation long F TESTING 0.2 sec. [Knu73], [Der87, p. 79] (2 1 0), 20 sec. Groups F TESTING 0.9 sec. [Hue80], [BL87, p. 151] (2 1 0), 20 sec. Taussky Group F TESTING 5.5 sec. [KB70], [BL87, p. 155], [Ste91, Example 8.4] (2 1 0), 20 sec.
Reference: [Mid89] <author> A. Middeldorp. </author> <title> A Sufficient Condition for the Termination of the Direct Sum of Term Rewriting Systems. </title> <booktitle> In Proc. 4th Annual Symposium on Logic in Computer Science, </booktitle> <address> Pacific Grove, CA, </address> <year> 1989. </year>
Reference-contexts: Running Example F TESTING 0.2 sec. <ref> [Mid89] </ref>, [Ste91, Example 6.1] (2 1 0), 20 sec. Boolean Ring 3 F TESTING 2.6 sec. [Ste91, Example 8.5] (2 1 0), 20 sec. Reverse F TESTING 1.7 sec. [Ste91, Example 8.6] (2 1 0), 20 sec.
Reference: [Pau84] <author> E. Paul. </author> <title> Proof by Induction in Equational Theories with Relations between Constructors. </title> <booktitle> In Proc. 9th Colloquium on Trees in Algebra and Programming, </booktitle> <address> Bordeaux, France, </address> <year> 1984. </year>
Reference-contexts: Boolean Ring 1 S TESTING 0.3 sec. [HD83], [Der87, p. 102] (2 1 0), 20 sec. Boolean Ring 2 S TESTING 0.4 sec. [Hsi82], [BL87, p. 152] (2 1 0), 20 sec. Neutral Elements Distributivity S TESTING 0.4 sec. <ref> [Pau84] </ref>, [Ste91, Example 8.13] (2 1 0), 20 sec. Plus S TESTING 0.6 sec. (2 1 0), 20 sec. Endomorphism Associativity V TESTING 0.1 sec. [Bel84], [BL87] ( = 2, (2 1 0), 20 sec. Endomorphism Associativity S TESTING 0.8 sec. [Bel84], [BL87] (2 1 0), 20 sec.
Reference: [Ste91] <author> J. Steinbach. </author> <title> Termination Proofs of Rewriting Systems | Heuristics for Generating Polynomial Orderings. </title> <institution> SEKI-Report SR-91-14, Univ. Kaiserslautern, Germany, </institution> <year> 1991. </year>
Reference-contexts: For instance, for Running Example we took the approach used by Steinbach in his system for the generation of polynomial orderings <ref> [Ste91] </ref> and for Symbolic Differentiation we set the values of constants to 2. 13 File Approach Method Time Nested Function Symbols 1 TESTING 0.03 sec. [Ste91, Example 8.1] (2 1 0), 20 sec. Nested Function Symbols S TESTING 0.9 sec. [Ste91, Example 8.1] (2 1 0), 20 sec. <p> For instance, for Running Example we took the approach used by Steinbach in his system for the generation of polynomial orderings [Ste91] and for Symbolic Differentiation we set the values of constants to 2. 13 File Approach Method Time Nested Function Symbols 1 TESTING 0.03 sec. <ref> [Ste91, Example 8.1] </ref> (2 1 0), 20 sec. Nested Function Symbols S TESTING 0.9 sec. [Ste91, Example 8.1] (2 1 0), 20 sec. Nested Function Symbols 1 COLLINS 19.8 sec. [Ste91, Example 8.1] 40 sec., 1/3, :neg., rat. Flatten 1 TESTING 0.04 sec. (2 1 0), 20 sec. <p> Steinbach in his system for the generation of polynomial orderings [Ste91] and for Symbolic Differentiation we set the values of constants to 2. 13 File Approach Method Time Nested Function Symbols 1 TESTING 0.03 sec. <ref> [Ste91, Example 8.1] </ref> (2 1 0), 20 sec. Nested Function Symbols S TESTING 0.9 sec. [Ste91, Example 8.1] (2 1 0), 20 sec. Nested Function Symbols 1 COLLINS 19.8 sec. [Ste91, Example 8.1] 40 sec., 1/3, :neg., rat. Flatten 1 TESTING 0.04 sec. (2 1 0), 20 sec. Flatten S TESTING 0.8 sec. (2 1 0), 20 sec. <p> we set the values of constants to 2. 13 File Approach Method Time Nested Function Symbols 1 TESTING 0.03 sec. <ref> [Ste91, Example 8.1] </ref> (2 1 0), 20 sec. Nested Function Symbols S TESTING 0.9 sec. [Ste91, Example 8.1] (2 1 0), 20 sec. Nested Function Symbols 1 COLLINS 19.8 sec. [Ste91, Example 8.1] 40 sec., 1/3, :neg., rat. Flatten 1 TESTING 0.04 sec. (2 1 0), 20 sec. Flatten S TESTING 0.8 sec. (2 1 0), 20 sec. Flatten V COLLINS 20.4 sec. ( = 2, nil = 2) 40 sec., 1/3, :neg., rat. <p> Boolean Ring 1 S TESTING 0.3 sec. [HD83], [Der87, p. 102] (2 1 0), 20 sec. Boolean Ring 2 S TESTING 0.4 sec. [Hsi82], [BL87, p. 152] (2 1 0), 20 sec. Neutral Elements Distributivity S TESTING 0.4 sec. [Pau84], <ref> [Ste91, Example 8.13] </ref> (2 1 0), 20 sec. Plus S TESTING 0.6 sec. (2 1 0), 20 sec. Endomorphism Associativity V TESTING 0.1 sec. [Bel84], [BL87] ( = 2, (2 1 0), 20 sec. Endomorphism Associativity S TESTING 0.8 sec. [Bel84], [BL87] (2 1 0), 20 sec. <p> Distributivity Associativity V COLLINS 25.1 sec. [Der87, p. 78] ( = 2, 40 sec., 1/3, :neg., :rat. plus (x; y) = v + vx + vy) 14 File Approach Method Time Binomial Coefficients S TESTING 1.6 sec. <ref> [Ste91, Example 8.8] </ref>, [Ste92, Example 13] (2 1 0), 20 sec. Running Example F TESTING 0.2 sec. [Mid89], [Ste91, Example 6.1] (2 1 0), 20 sec. Boolean Ring 3 F TESTING 2.6 sec. [Ste91, Example 8.5] (2 1 0), 20 sec. <p> Running Example F TESTING 0.2 sec. [Mid89], <ref> [Ste91, Example 6.1] </ref> (2 1 0), 20 sec. Boolean Ring 3 F TESTING 2.6 sec. [Ste91, Example 8.5] (2 1 0), 20 sec. Reverse F TESTING 1.7 sec. [Ste91, Example 8.6] (2 1 0), 20 sec. <p> Running Example F TESTING 0.2 sec. [Mid89], [Ste91, Example 6.1] (2 1 0), 20 sec. Boolean Ring 3 F TESTING 2.6 sec. <ref> [Ste91, Example 8.5] </ref> (2 1 0), 20 sec. Reverse F TESTING 1.7 sec. [Ste91, Example 8.6] (2 1 0), 20 sec. Symbolic Differentiation F TESTING 3.4 sec. [Knu73], [Der87, p. 79] (2 1 0), 20 sec. Symbolic Differentiation F TESTING 0.6 sec. [Knu73], [Der87, p. 79] (1 0), 20 sec. <p> Running Example F TESTING 0.2 sec. [Mid89], [Ste91, Example 6.1] (2 1 0), 20 sec. Boolean Ring 3 F TESTING 2.6 sec. [Ste91, Example 8.5] (2 1 0), 20 sec. Reverse F TESTING 1.7 sec. <ref> [Ste91, Example 8.6] </ref> (2 1 0), 20 sec. Symbolic Differentiation F TESTING 3.4 sec. [Knu73], [Der87, p. 79] (2 1 0), 20 sec. Symbolic Differentiation F TESTING 0.6 sec. [Knu73], [Der87, p. 79] (1 0), 20 sec. <p> Symbolic Differentiation long F TESTING 0.2 sec. [Knu73], [Der87, p. 79] (2 1 0), 20 sec. Groups F TESTING 0.9 sec. [Hue80], [BL87, p. 151] (2 1 0), 20 sec. Taussky Group F TESTING 5.5 sec. [KB70], [BL87, p. 155], <ref> [Ste91, Example 8.4] </ref> (2 1 0), 20 sec. Fibonacci Group V TESTING 4.8 sec. [Ste91, Example 8.2] ( = 0, (4 2 1 0), 20 sec. comb (x; y) = vx + vy) Fibonacci Group F TESTING 0.3 sec. [Ste91, Example 8.2] (4 2 1 0), 20 sec. <p> Groups F TESTING 0.9 sec. [Hue80], [BL87, p. 151] (2 1 0), 20 sec. Taussky Group F TESTING 5.5 sec. [KB70], [BL87, p. 155], [Ste91, Example 8.4] (2 1 0), 20 sec. Fibonacci Group V TESTING 4.8 sec. <ref> [Ste91, Example 8.2] </ref> ( = 0, (4 2 1 0), 20 sec. comb (x; y) = vx + vy) Fibonacci Group F TESTING 0.3 sec. [Ste91, Example 8.2] (4 2 1 0), 20 sec. Fibonacci Group F TESTING 0.8 sec. [Ste91, Example 8.2] (4 3 2 1 0), 20 sec. <p> Taussky Group F TESTING 5.5 sec. [KB70], [BL87, p. 155], [Ste91, Example 8.4] (2 1 0), 20 sec. Fibonacci Group V TESTING 4.8 sec. <ref> [Ste91, Example 8.2] </ref> ( = 0, (4 2 1 0), 20 sec. comb (x; y) = vx + vy) Fibonacci Group F TESTING 0.3 sec. [Ste91, Example 8.2] (4 2 1 0), 20 sec. Fibonacci Group F TESTING 0.8 sec. [Ste91, Example 8.2] (4 3 2 1 0), 20 sec. Fibonacci Group F COLLINS 8.1 sec. [Ste91, Example 8.2] 40 sec., 1/3, :neg., rat. Negative Coefficient F TESTING 0.01 sec. (2 1 0), 20 sec. <p> Fibonacci Group V TESTING 4.8 sec. <ref> [Ste91, Example 8.2] </ref> ( = 0, (4 2 1 0), 20 sec. comb (x; y) = vx + vy) Fibonacci Group F TESTING 0.3 sec. [Ste91, Example 8.2] (4 2 1 0), 20 sec. Fibonacci Group F TESTING 0.8 sec. [Ste91, Example 8.2] (4 3 2 1 0), 20 sec. Fibonacci Group F COLLINS 8.1 sec. [Ste91, Example 8.2] 40 sec., 1/3, :neg., rat. Negative Coefficient F TESTING 0.01 sec. (2 1 0), 20 sec. <p> (4 2 1 0), 20 sec. comb (x; y) = vx + vy) Fibonacci Group F TESTING 0.3 sec. <ref> [Ste91, Example 8.2] </ref> (4 2 1 0), 20 sec. Fibonacci Group F TESTING 0.8 sec. [Ste91, Example 8.2] (4 3 2 1 0), 20 sec. Fibonacci Group F COLLINS 8.1 sec. [Ste91, Example 8.2] 40 sec., 1/3, :neg., rat. Negative Coefficient F TESTING 0.01 sec. (2 1 0), 20 sec. Negative Coefficient V TESTING 7.3 sec. (plus (x; y) = x + y) (2 1 0), 20 sec. <p> The POLO system can also be used for term rewriting systems which require non simple-mixed polynomial orderings (such as Taussky Group [KB70]) or for systems where a polynomial ordering with coefficients different from 2, 1, 0 is needed (e.g. Fibonacci Group <ref> [Ste91, Example 8.2] </ref>). For such examples the use of the COLLINS method may be useful, especially if one already knows the polynomials associated with certain function symbols and searches polynomials for the remaining function symbols.
Reference: [Ste92] <author> J. Steinbach. </author> <title> Proving Polynomials Positive. </title> <booktitle> In Proc. 12th Conf. on Foundations of Software Technology and Theoretical Computer Science, </booktitle> <address> New Delhi, India, </address> <year> 1992. </year> <month> 27 </month>
Reference-contexts: Distributivity Associativity V COLLINS 25.1 sec. [Der87, p. 78] ( = 2, 40 sec., 1/3, :neg., :rat. plus (x; y) = v + vx + vy) 14 File Approach Method Time Binomial Coefficients S TESTING 1.6 sec. [Ste91, Example 8.8], <ref> [Ste92, Example 13] </ref> (2 1 0), 20 sec. Running Example F TESTING 0.2 sec. [Mid89], [Ste91, Example 6.1] (2 1 0), 20 sec. Boolean Ring 3 F TESTING 2.6 sec. [Ste91, Example 8.5] (2 1 0), 20 sec.
References-found: 17

