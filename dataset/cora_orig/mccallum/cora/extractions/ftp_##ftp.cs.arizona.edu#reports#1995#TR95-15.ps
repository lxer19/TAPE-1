URL: ftp://ftp.cs.arizona.edu/reports/1995/TR95-15.ps
Refering-URL: http://www.cs.arizona.edu/research/reports.html
Root-URL: http://www.cs.arizona.edu
Title: Evolving an Implementation of a Network Level Security Protocol  
Author: Hilarie Orman 
Date: 24, 1996  
Note: January  
Address: TR 95 15  Tucson, AZ 85721  
Affiliation: University of Arizona 2  Department of Computer Science The University of Arizona  
Abstract: While the importance of developing software for privacy and authentication on the Internet can hardly be gainsaid today, the process of bringing standards to fruition can be a long and arduous one. We have used prototyping methods to track the efforts of the Internet Engineering Task Force network security group (IPSEC), concentrating on the software challenges and advantages posed by the standards. As a result, we have some observations and useful guidelines for current and future developers of secure networking software. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Atkinson. </author> <title> Security architecture for the internet protocol. </title> <type> RFC 1825, 1826, 1827, </type> <month> August </month> <year> 1995. </year>
Reference-contexts: The proposed standards which have finally emerged as RFC's 1825-1827 <ref> [1] </ref>, with several related RFC's defining related cryptographic processing [5] (we will refer to the collection of RFC's as the IPSEC protocol). In addition, we have tracked evolution of a key exchange protocol, Photuris, currently an Internet draft [10].
Reference: [2] <institution> American national standard data encryption standard. Technical Report ANSI X3.92-1981, American National Standards Institute (ANSI), </institution> <month> December </month> <year> 1980. </year>
Reference-contexts: The statelessness attribute was a limitation on module placement; with no state information available, DES in CBC mode <ref> [2] </ref> (or MD5 ), could not determine where a block of encrypted data began or ended, and unless surrounding protocols preserved block boundaries, decryption could not occur.
Reference: [3] <author> N. Hutchinson, L. Peterson, S. O'Malley, E. Menze, and H. Orman. </author> <title> The x-Kernel Programmer's Manual (version 3.2). </title> <institution> Computer Science Department, University of Arizona, Tucson, Arizona, </institution> <month> January </month> <year> 1992. </year>
Reference-contexts: security protocol is only one piece of a larger picture: choice and use of data protection transforms, key exchange and management, identification and authentication mechanisms, and application level interfaces. 3 Initial Architecture At the outset of our work, we had a software architecture for developing and combining network protocol modules <ref> [3] </ref>. The architecture defines the control paths for message processing in a directed acyclic graph (DAG) of protocol instances. The structure subsumes purely layered approaches and has been used to implement highly efficient protocol structures that are general and semantically rich [8].
Reference: [4] <author> G. Kim, H. Orman, and S. O'Malley. </author> <title> Rlogin and an example of a composable security policy. </title> <booktitle> In Proceedings of the 1995 Usenix Security Symposium, </booktitle> <month> June </month> <year> 1995. </year>
Reference-contexts: This allowed us to make minor extensions to rlogin to take advantage of the security information available from the network layer, and to use that information to authenticate IP addresses and to protect passwords <ref> [4] </ref>. The experience was valuable; it validated our software structure (we added fewer than 20 lines of C code changes to support rlogin), and it indicated the value of network level packet protection; previous work with Kerberos [6], protected data by modifying each application.
Reference: [5] <author> P. Metzger and W. Simpson. </author> <title> Encryption and authentication transforms for the internet protocol. </title> <type> RFC 1828, 1829, 1851, </type> <month> August </month> <year> 1995. </year>
Reference-contexts: The proposed standards which have finally emerged as RFC's 1825-1827 [1], with several related RFC's defining related cryptographic processing <ref> [5] </ref> (we will refer to the collection of RFC's as the IPSEC protocol). In addition, we have tracked evolution of a key exchange protocol, Photuris, currently an Internet draft [10].
Reference: [6] <author> S. P. Miller, B. C. Neuman, J. I. Schiller, and J. H. Salzer. </author> <title> Kerberos authentication and authorization system. </title> <type> Technical Report Project Athena Technical Plan, </type> <institution> Section E.2.1, Massachusetts Institute of Technology, </institution> <month> April </month> <year> 1987. </year>
Reference-contexts: The experience was valuable; it validated our software structure (we added fewer than 20 lines of C code changes to support rlogin), and it indicated the value of network level packet protection; previous work with Kerberos <ref> [6] </ref>, protected data by modifying each application. The network layer scheme seemed to offer similar protection with less effort. 5 Implementing the Standard As the draft standards took shape, we took on the task of building the scaffolding for the architecture the parts that were unique to IPSEC.
Reference: [7] <author> S. O'Malley, T. Proebsting, and A. Montz. </author> <title> Universal stub compiler. </title> <booktitle> In Proceedings of the SIGCOMM '94 Symposium, </booktitle> <month> Aug </month> <year> 1994. </year>
Reference-contexts: Operations for add data to and deleting data from messages are available, and these can translate transparently and efficiently into and out of network byte order <ref> [7] </ref>. 2 3.1 Simple Network Data Protection Our initial experiments with adding cryptographic protections to a protocol graph were quite successful in the sense that they required no interface extensions and introduced a new capability into the protocol suites.
Reference: [8] <author> H. Orman, E. M. III, S. O'Malley, and L. Peterson. </author> <title> A fast and general implementation of mach ipc in a network. </title> <booktitle> In Proceedings of the 3rd Usenix Mach Conference, </booktitle> <pages> pages 75-88, </pages> <month> Apr </month> <year> 1993. </year>
Reference-contexts: The architecture defines the control paths for message processing in a directed acyclic graph (DAG) of protocol instances. The structure subsumes purely layered approaches and has been used to implement highly efficient protocol structures that are general and semantically rich <ref> [8] </ref>.
Reference: [9] <author> H. Orman, S. O'Malley, R. Schroeppel, and D. Schwartz. </author> <title> Paving the road to network security, or the value of small cobblestones. </title> <booktitle> In Proceedings of the 1994 Internet Society Symposium on Network and Distributed System Security, </booktitle> <month> Feb </month> <year> 1994. </year>
Reference-contexts: code that is both efficient and constructed for high assurance analysis. * Highly flexible control structure for message processing * Nearly typeless modules * Generalized storage management Network security software is made of many small pieces comprising a large system; in our earlier work on implementing Kerberos in small modules <ref> [9] </ref>, we worked with a mature protocol one with no uncertainty in data types or message processing. In contrast, for the IPSEC protocol, only one thing was certain at the outset: that the network level data would be subject to some form of cryptographic protection.
Reference: [10] <author> W. Simpson and P. Karn. </author> <title> The photuris session key management protocol. </title> <type> ietf draft, </type> <note> ftp from nic.merit.edu/documents/internet-drafts/draft-ietf-ipsec-photuris-06.txt, </note> <month> August </month> <year> 1995. </year> <month> 10 </month>
Reference-contexts: The proposed standards which have finally emerged as RFC's 1825-1827 [1], with several related RFC's defining related cryptographic processing [5] (we will refer to the collection of RFC's as the IPSEC protocol). In addition, we have tracked evolution of a key exchange protocol, Photuris, currently an Internet draft <ref> [10] </ref>. The Internet development effort coincided with our own research into using highly modular software for network security services, and one of our tracks of effort centered on the IETF definition of network layer security. <p> For our purposes, having a basis for authentication between IP addresses is sufficient. The protocol is independent of the basis of authentication, that responsibility being delegated to the key establishment protocol, which can be either some form of out-of-band secure distribution or a protocol such as Photuris <ref> [10] </ref>. 2.1 Our Goals The question we wanted to examine was whether there was a a uniform interface between protocol modules that was sufficient and efficient for building complex network security systems.
References-found: 10

