URL: ftp://ftp.cc.gatech.edu/pub/gvu/tr/1996/96-19.ps.Z
Refering-URL: http://www.cs.gatech.edu/gvu/reports/1996/
Root-URL: 
Email: E-mail: stasko@cc.gatech.edu  
Title: Using Student-Built Algorithm Animations as Learning Aids  
Author: John T. Stasko 
Address: Atlanta, GA 30332-0280  
Affiliation: Graphics, Visualization, and Usability Center College of Computing Georgia Institute of Technology  
Abstract: Technical Report GIT-GVU-96-19 August 1996 Abstract The typical application of algorithm animation to assist instruction involves students viewing already prepared animations. An alternative strategy is to have the students themselves construct animations of algorithms. The Samba algorithm animation tool fosters such student-built animations. Samba was used in an undergraduate algorithms course in which students constructed algorithm animations as regular class assignments. This article describes Samba and documents our experiences using it in the algorithms course. Student reaction to the animation assignments was very positive, and the students appeared to learn the pertinent algorithms extremely well. 
Abstract-found: 1
Intro-found: 1
Reference: [BCS96] <author> Michael D. Byrne, Richard Catrambone, and John T. Stasko. </author> <title> Do algorithm animations aid learning? Technical Report GIT-GVU-96-18, Graphics, Visualization, </title> <institution> and Usability Center, Georgia Institute of Technology, </institution> <address> Atlanta, GA, </address> <month> August </month> <year> 1996. </year> <title> 2 An interesting note from our experiences is that the "best" students in class via traditional measures usually create the "best" animations. </title> <type> 12 </type>
Reference-contexts: Correspondingly, recent research has been conducted to empirically evaluate the pedagogical value of students viewing and interacting with prepared algorithm animations. Results have ranged from positive [LBS94] to relatively little benefit from the animations <ref> [SBL93, BCS96] </ref>. In virtually all of these studies, the pure numbers (direction) of the results have favored the animations, however. Unfortunately, in the majority, the positive result for the animation was small and not statistically significant.
Reference: [BK91] <author> Jon L. Bentley and Brian W. Kernighan. </author> <title> A system for algorithm animation. </title> <journal> Computing Systems, </journal> <volume> 4(1), </volume> <month> Winter </month> <year> 1991. </year>
Reference-contexts: Samba uses ideas and experience from all of this prior research. For a good summary of different algorithm animation and software visualization systems, see [PBS93]. In terms of similar approaches, Samba follows most closely the ANIM system by Bentley and Kernighan <ref> [BK91] </ref>. ANIM's focus contrasted with other peer systems such as BALSA and TANGO in that it provided a much more limited graphical vocabulary, but was accordingly simpler to learn and use. ANIM utilized an ascii file with simple scripting language directives as input.
Reference: [Bro88a] <author> Marc H. Brown. </author> <title> Exploring algorithms using Balsa-II. </title> <journal> Computer, </journal> <volume> 21(5) </volume> <pages> 14-36, </pages> <month> May </month> <year> 1988. </year>
Reference-contexts: A number of algorithm animation systems have been built over the last ten years. Just a few of the better known and more widely used systems include BALSA <ref> [Bro88a] </ref>, Tango [Sta90], Zeus [Bro91], and AACE [Glo92]. These systems typically have been used to create animations to accompany a lecture in an electronic classroom, or to prepare animations for students to observe and interact with outside the classroom.
Reference: [Bro88b] <author> Marc H. Brown. </author> <title> Perspectives on algorithm animation. </title> <booktitle> In Proceedings of the ACM SIGCHI '88 Conference on Human Factors in Computing Systems, </booktitle> <pages> pages 33-38, </pages> <address> Washington D.C., </address> <month> May </month> <year> 1988. </year>
Reference-contexts: When the program executes, these print statements will be output in an order corresponding to the execution and will comprise a trace of the program's operations. The print statment annotations correspond to the interesting events <ref> [Bro88b] </ref> often used in algorithm animation systems.
Reference: [Bro91] <author> Marc H. Brown. ZEUS: </author> <title> A system for algorithm animation and multi-view editing. </title> <booktitle> In Proceedings of the 1991 IEEE Workshop on Visual Languages, </booktitle> <pages> pages 4-9, </pages> <address> Kobe Japan, </address> <month> October </month> <year> 1991. </year>
Reference-contexts: A number of algorithm animation systems have been built over the last ten years. Just a few of the better known and more widely used systems include BALSA [Bro88a], Tango [Sta90], Zeus <ref> [Bro91] </ref>, and AACE [Glo92]. These systems typically have been used to create animations to accompany a lecture in an electronic classroom, or to prepare animations for students to observe and interact with outside the classroom.
Reference: [For93] <author> Lindsey Ford. </author> <title> Goofy animation specification. Unpublished Report from the University of Exeter, </title> <address> Exeter, U.K., </address> <year> 1993. </year>
Reference-contexts: Samba follows this approach and simply provides a richer graphical vocabulary including primitives for smooth animation. The Goofy system by Ford provides an ascii command language on top of the Polka system as Samba does <ref> [For93] </ref>. Goofy is a richer, more complex language than Samba, however. It supports more of the base Polka functionality, even including timing parameters in commands. Samba does not include such functionality in order to make its language easier to understand and use.
Reference: [Glo92] <author> Peter A. Gloor. </author> <title> AACE algorithm animation for computer science education. </title> <booktitle> In Proceedings of the 1992 IEEE Workshop on Visual Languages, </booktitle> <pages> pages 25-31, </pages> <address> Seattle, WA, </address> <month> September </month> <year> 1992. </year>
Reference-contexts: A number of algorithm animation systems have been built over the last ten years. Just a few of the better known and more widely used systems include BALSA [Bro88a], Tango [Sta90], Zeus [Bro91], and AACE <ref> [Glo92] </ref>. These systems typically have been used to create animations to accompany a lecture in an electronic classroom, or to prepare animations for students to observe and interact with outside the classroom.
Reference: [Har94] <author> Stephen J. </author> <title> Hartley. Animating operating systems algorithms with XTANGO. </title> <booktitle> In Proceedings of the 1994 ACM SIGCSE Technical Symposium, </booktitle> <pages> pages 344-348, </pages> <address> Phoenix, AZ, </address> <month> March </month> <year> 1994. </year>
Reference-contexts: One possible explanation for this enhanced understanding is that students simply spent 1 Instructors at other schools have used Samba and its predecessor system, animator, in this manner. Most noteworthy is use by Hartley <ref> [Har94] </ref>. 11 a great deal of time working with these algorithms, much more so than on algorithms not given animation assignments. Certainly, that is true.
Reference: [LBS94] <author> Andrea W. Lawrence, Albert M. Badre, and John T. Stasko. </author> <title> Empirically evaluating the use of animations to teach algorithms. </title> <booktitle> In Proceedings of the 1994 IEEE Symposium on Visual Languages, </booktitle> <pages> pages 48-54, </pages> <address> St. Louis, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: Correspondingly, recent research has been conducted to empirically evaluate the pedagogical value of students viewing and interacting with prepared algorithm animations. Results have ranged from positive <ref> [LBS94] </ref> to relatively little benefit from the animations [SBL93, BCS96]. In virtually all of these studies, the pure numbers (direction) of the results have favored the animations, however. Unfortunately, in the majority, the positive result for the animation was small and not statistically significant.
Reference: [Nap90] <author> Thomas L. Naps. </author> <title> Algorithm visualization in computer science laboratories. </title> <booktitle> In Proceedings of the 21st SIGCSE Technical Symposium on Computer Science Education, </booktitle> <pages> pages 105-110, </pages> <address> Washington, DC, </address> <month> February </month> <year> 1990. </year>
Reference-contexts: We are not aware of similar educational applications of other algorithm animation systems as done with Samba, i.e., having students construct the algorithm animations themselves. 1 Other software visualization technology has been effectively utilized in educational settings, however. For instance, Naps utilizes the GAIGS system for laboratory visualization exercises <ref> [Nap90] </ref>. GAIGS produces views of data structures, and students use GAIGS to analyze algorithms, compare algorithm methodologies, and to suggest improvements in algorithms. 5 Discussion After using the student-built animations for three classes, what stands out the most is how much the students enjoyed the animations.
Reference: [PBS93] <author> Blaine A. Price, Ronald M. Baecker, and Ian S. </author> <title> Small. A principled taxonomy of software visualization. </title> <journal> Journal of Visual Languages and Computing, </journal> <volume> 4(3) </volume> <pages> 211-266, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: Samba uses ideas and experience from all of this prior research. For a good summary of different algorithm animation and software visualization systems, see <ref> [PBS93] </ref>. In terms of similar approaches, Samba follows most closely the ANIM system by Bentley and Kernighan [BK91]. ANIM's focus contrasted with other peer systems such as BALSA and TANGO in that it provided a much more limited graphical vocabulary, but was accordingly simpler to learn and use.
Reference: [SBL93] <author> John Stasko, Albert Badre, and Clayton Lewis. </author> <title> Do algorithm animations assist learning? an empirical study and analysis. </title> <booktitle> In Proceedings of the INTERCHI '93 Conference on Human Factors in Computing Systems, </booktitle> <pages> pages 61-66, </pages> <address> Amsterdam, Netherlands, </address> <month> April </month> <year> 1993. </year>
Reference-contexts: Correspondingly, recent research has been conducted to empirically evaluate the pedagogical value of students viewing and interacting with prepared algorithm animations. Results have ranged from positive [LBS94] to relatively little benefit from the animations <ref> [SBL93, BCS96] </ref>. In virtually all of these studies, the pure numbers (direction) of the results have favored the animations, however. Unfortunately, in the majority, the positive result for the animation was small and not statistically significant.
Reference: [SK93] <author> John T. Stasko and Eileen Kraemer. </author> <title> A methodology for building application-specific visualizations of parallel programs. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 18(2) </volume> <pages> 258-264, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: The Samba command set continualy evolves too. A 2 new command is added given sufficient request for some new functionality, as long as the primary goal of simplicity is not compromised. Samba is actually just an application program of the Polka algorithm animation system and environment <ref> [SK93] </ref>. Samba provides a simpler, more accessible front-end to Polka, which requires C++ programming and has a steeper learning curve. Samba supports about 90% of the base functionality available in Polka. Figure 1 presents an overview of the architecture of the environment.
Reference: [Sta90] <author> John T. Stasko. </author> <title> TANGO: A framework and system for algorithm animation. </title> <journal> Computer, </journal> <volume> 23(9) </volume> <pages> 27-39, </pages> <month> September </month> <year> 1990. </year> <month> 13 </month>
Reference-contexts: A number of algorithm animation systems have been built over the last ten years. Just a few of the better known and more widely used systems include BALSA [Bro88a], Tango <ref> [Sta90] </ref>, Zeus [Bro91], and AACE [Glo92]. These systems typically have been used to create animations to accompany a lecture in an electronic classroom, or to prepare animations for students to observe and interact with outside the classroom. <p> The move command by default interpolates 20 intermediate frames to traverse the distance specified in the command. These continuous motions assist viewers to monitor the animation and track changes in the display <ref> [Sta90] </ref>. Samba allows animation designers to utilize multiple animation views (windows) to illustrate an algorithm. A viewdef command with a trailing view name instantiates a new animation window.
References-found: 14

