URL: http://www.cs.purdue.edu/homes/jing/clisrv.ps
Refering-URL: http://www.cs.purdue.edu/homes/jing/mobile.html
Root-URL: http://www.cs.purdue.edu
Email: fake,jing,furukawag@cs.purdue.edu  
Title: Wireless Client/Server Computing for Personal Information Services and Applications  
Author: Ahmed Elmagarmid Jin Jing Tetsuya Furukawa 
Address: West Lafayette, IN 47907 USA  
Affiliation: Department of Computer Sciences Purdue University  
Abstract: We are witnessing a profound change in the global information infrastructure that has the potential to fundamentally impact many facets of our life. An important aspect of the evolving infrastructure is the seamless, ubiquitous wireless connectivity which engenders continuous interactions between people and interconnected computers. A challenging area of future ubiquitous wireless computing is the area of providing mobile users with integrated Personal Information Services and Applications (PISA). In this paper, a wireless client/server computing architecture will be discussed for the delivery of PISA. Data management issues such as transactional services and cache consistency will be examined under this architecture. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Alonso and H. Korth. </author> <booktitle> Database issues in nomadic computing. In Proceedings of the ACM SIGMOD Conference on Management of Data, </booktitle> <pages> pages 388-392, </pages> <year> 1993. </year>
Reference-contexts: 1 Introduction Data management in mobile computing environments has recently become an area of increased interest to the database community <ref> [5, 1, 2] </ref>. In future mobile computing environments, a large number of users carrying low-power palmtop machines will access information over wireless channels anywhere and at any time.
Reference: [2] <author> D. Barbara and T. Imielinski. Sleepers and workaholics: </author> <title> Caching strategies for mobile environments. </title> <booktitle> In Proceedings of the ACM SIGMOD Conference on Management of Data, </booktitle> <pages> pages 1-12, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction Data management in mobile computing environments has recently become an area of increased interest to the database community <ref> [5, 1, 2] </ref>. In future mobile computing environments, a large number of users carrying low-power palmtop machines will access information over wireless channels anywhere and at any time. <p> Also, in a wireless environment, mobile clients usually have weak or little transmission capability because of limited battery power while stationary servers have powerful broadcast transmitters. Therefore, both callback and detection approach employed in the traditional client-server architecture are not be readily applicable to mobile environments. In <ref> [2] </ref>, Barbara and Imielinski proposed an approach to the problem of invalidating caches in mobile environments. In this approach, a server periodically broadcasts an invalidation report that reports the data items which have been changed. <p> The scalability feature is important because the large invalidation report will waste precious wireless bandwidth and increase latency for client cache verification. Specifically, these scalable algorithms should be well suited for applications such as "information feed" application domains. These existing algorithms in <ref> [2] </ref> are effective for a client in terms of a low ratio of false invalidation (to total invalidation), only if the client has not disconnected for a period that exceeds an algorithm-specified parameter or if the number of updated items during the period is not greater than an algorithm-specified parameter (see
Reference: [3] <author> A. K. Elmagarmid, J. Jing, and O. Bukhres. </author> <title> An efficient and reliable reservation algorithm for mobile transactions. </title> <type> Technical Report CSD-TR-95-018, </type> <institution> Department of Computer Science, Purdue University, </institution> <year> 1995. </year> <booktitle> Appeared in shorter form in Proceedings of the 4th International Conference on Information and Knowledge Management (CIKM'95). </booktitle>
Reference-contexts: Note that we assume that all data are partitioned or replicated among the distributed database servers so that the same database services could be supported in the distributed environments. In <ref> [7, 3] </ref>, we illustrate that, in some cases, neither transaction log transfers nor global commitment is needed for the transactional service handoff processing. <p> A prototype of the transactional service for mobile hosts is currently being implemented on the Coda file system [10, 12] to support continued services in a disconnection mode. The service handoff issue with the distributed data server architecture have been discussed <ref> [6, 11, 7, 3] </ref>. 3.2 Cache Consistency In a wireless client/server computing environment, caching of frequently-accessed data items is an important technique that will reduce contention on the narrow bandwidth wireless channels. The cached data can help to improve query response time and to support disconnected or weakly connected operations.
Reference: [4] <author> G. Forman and J. Zahorjan. </author> <title> The challenges of mobile computing. </title> <journal> IEEE Computer, </journal> <volume> 27 </volume> <pages> 38-47, </pages> <year> 1994. </year>
Reference-contexts: If the mobile users are geographically localized and move infrequently, the architecture may be sufficient to support PISA. However, current market and technology trends project rapid increases in the number of mobile users with intelligent mobile computing and communication devices <ref> [9, 4] </ref>. These users will have increased demand for nationwide or worldwide delivery of PISA. If these trends evolve as projected, the centralized architecture will become inviable, largely because possible computing and communication bottleneck at the central site.
Reference: [5] <author> T. Imielinski and B. R. Badrinath. </author> <title> Wireless mobile computing : Challenges in data management. </title> <journal> Communication of ACM, </journal> <volume> 37(10), </volume> <year> 1994. </year>
Reference-contexts: 1 Introduction Data management in mobile computing environments has recently become an area of increased interest to the database community <ref> [5, 1, 2] </ref>. In future mobile computing environments, a large number of users carrying low-power palmtop machines will access information over wireless channels anywhere and at any time.
Reference: [6] <author> R. Jain and N. Krishnakumar. </author> <title> Service handoffs and virtual mobility for delivery of personal information services to mobile users. </title> <type> Technical Report TM-24696, </type> <institution> Bell-core, </institution> <month> Dec. </month> <year> 1994. </year>
Reference-contexts: In future mobile computing environments, a large number of users carrying low-power palmtop machines will access information over wireless channels anywhere and at any time. An example of future mobile environments is the so called Personal Communication Services (PCS) network, though it is still far from being final <ref> [9, 6] </ref>. The PCS network is expected to be based on current cellular network architecture. <p> The applications and services provided by the future PCS network, called Personal Information Services and Applications (PISA), will include personalized financial and stock market information, electronic magazines, travel information, mobile shopping and banking, and electronic mail services <ref> [9, 6] </ref>. An important and challenging area of mobile computing is the design of architectures and protocols for providing mobile users with PISA. In the future PCS network environment, mobile users connect to information servers or other users through either wireless or wired connections. <p> The different types of architectures depend on both the information structure supported by the servers and the mobility of client hosts. A framework of these alternatives is illustrated in Figure 1. In <ref> [6] </ref>, the architectures of information servers for the delivery of PISA in mobile environments are summarized as the following: * centralized architecture; * multiple independent servers architecture; * distributed server architecture. In a centralized architecture, a central site stores and processes personalized information for mobile users via a PCS network. <p> To support detection of update conflicts, dependency checks are neces sary. 3.1.3 Service Handoffs We first briefly discuss how the usual PCS call handoff mechanism can be extended to support virtual mobility of servers for transactional services (A detail discussion about this issue can be found in <ref> [6] </ref>). We then discuss the difference between the transactional service handoffs and non-transactional service handoffs. <p> A prototype of the transactional service for mobile hosts is currently being implemented on the Coda file system [10, 12] to support continued services in a disconnection mode. The service handoff issue with the distributed data server architecture have been discussed <ref> [6, 11, 7, 3] </ref>. 3.2 Cache Consistency In a wireless client/server computing environment, caching of frequently-accessed data items is an important technique that will reduce contention on the narrow bandwidth wireless channels. The cached data can help to improve query response time and to support disconnected or weakly connected operations.
Reference: [7] <author> J. Jing, O. Bukhres, and A. Elmagarmid. </author> <title> Distributed lock management for mobile transactions. </title> <booktitle> In Proc. of the 15th International Conference on Distributed Computing Systems, </booktitle> <address> Vancouver, Canada, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: Note that we assume that all data are partitioned or replicated among the distributed database servers so that the same database services could be supported in the distributed environments. In <ref> [7, 3] </ref>, we illustrate that, in some cases, neither transaction log transfers nor global commitment is needed for the transactional service handoff processing. <p> A prototype of the transactional service for mobile hosts is currently being implemented on the Coda file system [10, 12] to support continued services in a disconnection mode. The service handoff issue with the distributed data server architecture have been discussed <ref> [6, 11, 7, 3] </ref>. 3.2 Cache Consistency In a wireless client/server computing environment, caching of frequently-accessed data items is an important technique that will reduce contention on the narrow bandwidth wireless channels. The cached data can help to improve query response time and to support disconnected or weakly connected operations.
Reference: [8] <author> J. Jing, O. Bukhres, A. Elmagarmid, and R. Alonso. Bit-sequences: </author> <title> A cache invalidation algorithm in mobile environments. </title> <type> Technical Report CSD-TR-94-074, </type> <institution> Department of Computer Science, Purdue University, </institution> <year> 1994. </year>
Reference-contexts: are effective for a client in terms of a low ratio of false invalidation (to total invalidation), only if the client has not disconnected for a period that exceeds an algorithm-specified parameter or if the number of updated items during the period is not greater than an algorithm-specified parameter (see <ref> [8] </ref> for detail). The scalability issue has been addressed in [8]. 4 Summary The rapidly expanding technologies of wireless communications and personal computing introduces an entirely new computing environment called mobile computing. <p> ratio of false invalidation (to total invalidation), only if the client has not disconnected for a period that exceeds an algorithm-specified parameter or if the number of updated items during the period is not greater than an algorithm-specified parameter (see <ref> [8] </ref> for detail). The scalability issue has been addressed in [8]. 4 Summary The rapidly expanding technologies of wireless communications and personal computing introduces an entirely new computing environment called mobile computing. The concept, approaches, and methodology in traditional information systems need to be reexamined in order to fit the new computing environment.
Reference: [9] <author> R. H. Katz. </author> <title> Adaptation and mobility in wireless information systems. </title> <journal> IEEE Personal Communications, </journal> <volume> 1 </volume> <pages> 6-17, </pages> <year> 1994. </year>
Reference-contexts: In future mobile computing environments, a large number of users carrying low-power palmtop machines will access information over wireless channels anywhere and at any time. An example of future mobile environments is the so called Personal Communication Services (PCS) network, though it is still far from being final <ref> [9, 6] </ref>. The PCS network is expected to be based on current cellular network architecture. <p> The applications and services provided by the future PCS network, called Personal Information Services and Applications (PISA), will include personalized financial and stock market information, electronic magazines, travel information, mobile shopping and banking, and electronic mail services <ref> [9, 6] </ref>. An important and challenging area of mobile computing is the design of architectures and protocols for providing mobile users with PISA. In the future PCS network environment, mobile users connect to information servers or other users through either wireless or wired connections. <p> If the mobile users are geographically localized and move infrequently, the architecture may be sufficient to support PISA. However, current market and technology trends project rapid increases in the number of mobile users with intelligent mobile computing and communication devices <ref> [9, 4] </ref>. These users will have increased demand for nationwide or worldwide delivery of PISA. If these trends evolve as projected, the centralized architecture will become inviable, largely because possible computing and communication bottleneck at the central site.
Reference: [10] <author> J. Kistler and M. Satyanaranyanan. </author> <title> Disconnected Operation in the Coda File System. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 10(1), </volume> <month> February </month> <year> 1992. </year>
Reference-contexts: Therefore, the deferred log updates for commutative operations can be utilized to reduce message cost for distributed log managment for mobile transactions. A prototype of the transactional service for mobile hosts is currently being implemented on the Coda file system <ref> [10, 12] </ref> to support continued services in a disconnection mode.
Reference: [11] <author> N. Krishnakumar and R. Jain. </author> <title> Protocols for maintaining inventory databases and user service profiles in mobile sales applications. </title> <booktitle> In Proceedings of the Mobidata Workshop, </booktitle> <institution> Rutgers University, </institution> <month> Nov. </month> <year> 1994. </year>
Reference-contexts: A prototype of the transactional service for mobile hosts is currently being implemented on the Coda file system [10, 12] to support continued services in a disconnection mode. The service handoff issue with the distributed data server architecture have been discussed <ref> [6, 11, 7, 3] </ref>. 3.2 Cache Consistency In a wireless client/server computing environment, caching of frequently-accessed data items is an important technique that will reduce contention on the narrow bandwidth wireless channels. The cached data can help to improve query response time and to support disconnected or weakly connected operations.
Reference: [12] <author> Q. Lu and M. Satyanaranyanan. </author> <title> Isolation-only transactions for mobile computing. </title> <journal> ACM Operating Systems Review, </journal> <volume> 28(3), </volume> <month> July </month> <year> 1994. </year>
Reference-contexts: Therefore, the deferred log updates for commutative operations can be utilized to reduce message cost for distributed log managment for mobile transactions. A prototype of the transactional service for mobile hosts is currently being implemented on the Coda file system <ref> [10, 12] </ref> to support continued services in a disconnection mode.
References-found: 12

