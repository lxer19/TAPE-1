URL: http://www-cad.eecs.berkeley.edu/HomePages/sanghavi/publications/iwls93Paper.ps
Refering-URL: http://www-cad.eecs.berkeley.edu/HomePages/sanghavi/publications/publications.html
Root-URL: http://www.cs.berkeley.edu
Title: ESPRESSO-SIGNATURE: A New Exact Minimizer for Logic Functions  
Author: Patrick C. McGeer Jagesh V. Sanghavi Robert K. Brayton Alberto L. Sangiovanni-vincentelli 
Affiliation: Fujitsu Research Department of Electrical Engineering and Computer Sciences, University of California Berkeley  
Note: This research supported by  
Date: April 30, 1996  
Abstract: We present a new algorithm for exact two-level logic optimization. We represent a set of primes by the cube of their intersection. Therefore, the unique set of sets of primes which forms the covering problem can be implicitly represented by a set of cubes which forms a minimum canonical cover. We obtain the minimum canonical cover starting from any initial cover and then derive the table covering problem. The method is effective; it improves on the runtime and memory usage of ESPRESSO-EXACT by average factors of 1.78 and 1.2x respectively on the 114 of 134 benchmark examples that could be completed by ESPRESSO-EXACT. Of the remaining 20 hard problems, we solve 14 exactly. For 3 of the remaining 6 we derive the covering table but the covering problem could not be solved exactly. The remaining 3 remains intractable for the moment. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. Bartlett, R. Brayton, G. Hachtel, R. Jacoby, C. Morrison, R. Rudell, A. Sangiovanni-Vincentelli, and A. Wang. </author> <title> Multi-level logic minimization using implicit don't cares. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 7(6) </volume> <pages> 723-740, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: We can expect this problem to grow worse. Two-level logic optimization appears in many guises; it is often used as a subprogram in multilevel synthesis. In this application, very large don't-care sets are the rule <ref> [1, 8] </ref>; we can expect a very large number of primes, most of which will not appear in any minimal cover.
Reference: [2] <author> R. Brayton, G. Hachtel, C. McMullen, and A. Sangiovanni-Vincentelli. </author> <title> Logic Minimization Algorithms for VLSI Synthesis. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1984. </year>
Reference-contexts: Most research concentrated on improving each step, not on revising the basic procedure [14, 5]. Efficient methods to generate the set of all primes were discovered [6, 13]. An elegant method of formulating the set-covering problem was devised and improved set covering algorithms were developed <ref> [2] </ref>. In 1987, Rudell combined and improved the procedures for prime generation and set covering formulation with improved techniques to solve the set-covering problem in the program ESPRESSO-EXACT [15, 14]. <p> Both of these problems can be solved using the concept of the blocking function <ref> [2] </ref>. In the following discussion we shall assume that b is a reduced cube obtained by adding literals to the original signature cube c. <p> The pruning technique corresponds to reducing the maximum possible number of minterms that need to be visited for a given signature cube c. The first technique is to "shrink" the signature cube c. We employ the REDUCE operation of the ESPRESSO-II <ref> [2] </ref> on the signature cube c. It should be noted that signature cube d corresponding to the reduced cube of the cube c (d = (REDUCE (c))) may be smaller than c. The essentiality test is then for the signature cube d. The following theorem justifies this action.
Reference: [3] <author> M. Cieselski, S. Yang, and M. Perkowski. </author> <title> Multiple-valued minimization based on graph coloring. </title> <booktitle> In International Conference on Computer Design, </booktitle> <year> 1989. </year>
Reference-contexts: Generate the primes p k 2 P m for each P m 2 P min . 3. Find a minimum set cover of P min . The first step was initiated by two insights also found in the work of Perkowski and colleagues <ref> [3, 9, 10, 11] </ref>. The first insight is that one can represent a set of primes fully by their intersection in the sense that given this cube it is possible to uniquely regenerate the set; for example, the set of primes fyzw; xzwg is fully described by the cube fxyzwg.
Reference: [4] <author> O. Coudert and J.-C. Madre. </author> <title> A new implicit graph-based prime and essential prime computation technique. </title> <editor> In T. Sasao, editor, </editor> <title> Logic Synthesis and Optimization. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1992. </year>
Reference-contexts: Out of the 20 hard examples, ESPRESSO-EXACT fails on 17 due to too many primes and the other three due to failure to solve the covering problem exactly. Indeed, Coudert and Madre <ref> [4] </ref> report that some have more than a trillion primes. Despite this, the Essential Signature Set (number of primes of the reduced covering problem) for many of these is small. We have solved 14 out of 17 problems exactly. <p> The results are reported in figure 5. In the table given in figure 5, we report the name, number of inputs and outputs, number of terms in the input problem, number of primes <ref> [4] </ref>, number of essential primes, number of essential signature cubes (number of sets or rows of the final covering problem), number of primes in some essential signature set (number of columns of the final covering problem), the size of the minimum solution where known and the computation time on a DECstation
Reference: [5] <author> M. Dagenais, V. Agarwal, and N. Rumin. Mcboole: </author> <title> a new procedure for exact logic minimization. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 5(1) </volume> <pages> 229-238, </pages> <month> January </month> <year> 1986. </year>
Reference-contexts: The possibility of a large number of primes of F (many of which appear in no minimal cover of F ); and 3. The complexity of solving the covering problem. Most research concentrated on improving each step, not on revising the basic procedure <ref> [14, 5] </ref>. Efficient methods to generate the set of all primes were discovered [6, 13]. An elegant method of formulating the set-covering problem was devised and improved set covering algorithms were developed [2].
Reference: [6] <author> S. J. Hong, R. G. Cain, and D. L. Ostapko. </author> <title> MINI: A heuristic approach to logic minimization. </title> <journal> IBM Journal of Research and Development, </journal> <year> 1974. </year>
Reference-contexts: The complexity of solving the covering problem. Most research concentrated on improving each step, not on revising the basic procedure [14, 5]. Efficient methods to generate the set of all primes were discovered <ref> [6, 13] </ref>. An elegant method of formulating the set-covering problem was devised and improved set covering algorithms were developed [2]. In 1987, Rudell combined and improved the procedures for prime generation and set covering formulation with improved techniques to solve the set-covering problem in the program ESPRESSO-EXACT [15, 14].
Reference: [7] <author> E. J. McCluskey. </author> <title> Minimization of boolean functions. </title> <journal> Bell System Technical Journal, </journal> <year> 1956. </year>
Reference-contexts: Apparently, this problem was first considered by Shannon in 1949 [17]. In the 1950's, Karnaugh introduced the map method; seminal algorithms were given by Quine [12] and McCluskey <ref> [7] </ref> leading to the Quine-McCluskey procedure. The three basic steps of this procedure are: 1. Generate all the maximal terms (primes) of F . 2. For each on-set point m, find the set of primes P m containing m. 3.
Reference: [8] <author> Patrick C. McGeer and Robert K. Brayton. </author> <title> The observability don't-care set and its approximations. </title> <booktitle> In The Proceedings of International Conference on Computer Design, </booktitle> <pages> pages 45-48, </pages> <year> 1990. </year>
Reference-contexts: We can expect this problem to grow worse. Two-level logic optimization appears in many guises; it is often used as a subprogram in multilevel synthesis. In this application, very large don't-care sets are the rule <ref> [1, 8] </ref>; we can expect a very large number of primes, most of which will not appear in any minimal cover.
Reference: [9] <author> L. Nguyen, M. Perkowski, and N. Goldstein. </author> <title> Palmini fast boolean minimizer for personal computers. </title> <booktitle> In The Proceedings of Design Automation Conference, </booktitle> <pages> pages 615-621, </pages> <month> July </month> <year> 1987. </year>
Reference-contexts: Generate the primes p k 2 P m for each P m 2 P min . 3. Find a minimum set cover of P min . The first step was initiated by two insights also found in the work of Perkowski and colleagues <ref> [3, 9, 10, 11] </ref>. The first insight is that one can represent a set of primes fully by their intersection in the sense that given this cube it is possible to uniquely regenerate the set; for example, the set of primes fyzw; xzwg is fully described by the cube fxyzwg. <p> Further, we will give an algorithm to obtain P min from any initial cover of F and a test for essentiality of a set of primes which can be expressed as a test on the cube of its intersection. In <ref> [9] </ref>, the concept of minimal implicants was introduced as any cube obtained by intersecting all the primes which cover a given minterm. In addition, the subset of these which are maximal was called the set of nonredundant minimal implicants (NMI).
Reference: [10] <author> M. Perkowski and N. Goldstein. </author> <title> Private communication. </title> <type> Technical report, </type> <year> 1983. </year>
Reference-contexts: Generate the primes p k 2 P m for each P m 2 P min . 3. Find a minimum set cover of P min . The first step was initiated by two insights also found in the work of Perkowski and colleagues <ref> [3, 9, 10, 11] </ref>. The first insight is that one can represent a set of primes fully by their intersection in the sense that given this cube it is possible to uniquely regenerate the set; for example, the set of primes fyzw; xzwg is fully described by the cube fxyzwg.
Reference: [11] <author> M. Perkowski, P. Wu, and K. Pirkl. Kuai-exact: </author> <title> a new approach for multi-valued logic minimization in VLSI synthesis. </title> <booktitle> In IEEE International Symposium on Circuits and Systems, </booktitle> <year> 1989. </year>
Reference-contexts: Generate the primes p k 2 P m for each P m 2 P min . 3. Find a minimum set cover of P min . The first step was initiated by two insights also found in the work of Perkowski and colleagues <ref> [3, 9, 10, 11] </ref>. The first insight is that one can represent a set of primes fully by their intersection in the sense that given this cube it is possible to uniquely regenerate the set; for example, the set of primes fyzw; xzwg is fully described by the cube fxyzwg.
Reference: [12] <author> W. Quine. </author> <title> The problem of simplifying truth functions. </title> <journal> American Mathematical Monthly, </journal> <year> 1952. </year>
Reference-contexts: Apparently, this problem was first considered by Shannon in 1949 [17]. In the 1950's, Karnaugh introduced the map method; seminal algorithms were given by Quine <ref> [12] </ref> and McCluskey [7] leading to the Quine-McCluskey procedure. The three basic steps of this procedure are: 1. Generate all the maximal terms (primes) of F . 2. For each on-set point m, find the set of primes P m containing m. 3.
Reference: [13] <author> Bernd Reusch and Lothar Detering. </author> <title> On the generation of prime implicants. Ann. les Societatis Mathe-maticae Polonae, Series IV, </title> <journal> Fundamenta Informaticae II, </journal> <pages> pages 167-186, </pages> <year> 1979. </year>
Reference-contexts: The complexity of solving the covering problem. Most research concentrated on improving each step, not on revising the basic procedure [14, 5]. Efficient methods to generate the set of all primes were discovered <ref> [6, 13] </ref>. An elegant method of formulating the set-covering problem was devised and improved set covering algorithms were developed [2]. In 1987, Rudell combined and improved the procedures for prime generation and set covering formulation with improved techniques to solve the set-covering problem in the program ESPRESSO-EXACT [15, 14].
Reference: [14] <author> R. L. Rudell. </author> <title> Logic Synthesis for VLSI Design. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering and Computer Science, University of California at Berkeley, </institution> <year> 1989. </year> <month> 13 </month>
Reference-contexts: The possibility of a large number of primes of F (many of which appear in no minimal cover of F ); and 3. The complexity of solving the covering problem. Most research concentrated on improving each step, not on revising the basic procedure <ref> [14, 5] </ref>. Efficient methods to generate the set of all primes were discovered [6, 13]. An elegant method of formulating the set-covering problem was devised and improved set covering algorithms were developed [2]. <p> An elegant method of formulating the set-covering problem was devised and improved set covering algorithms were developed [2]. In 1987, Rudell combined and improved the procedures for prime generation and set covering formulation with improved techniques to solve the set-covering problem in the program ESPRESSO-EXACT <ref> [15, 14] </ref>. ESPRESSO-EXACT was able to find a minimum solution for 114 out of 134 circuits of an extensive suite of benchmark examples. Rudell's extensive experimental work points the way for improvement in the basic Quine-McCluskey procedure. It demonstrates that the bottleneck is the generation of all the primes. <p> Rudell's extensive experimental work points the way for improvement in the basic Quine-McCluskey procedure. It demonstrates that the bottleneck is the generation of all the primes. The data in <ref> [14] </ref> shows that many circuits had a very large number of primes, often several orders of magnitude more than the minimum solution. Of the 20 hard examples on which ESPRESSO-EXACT failed, 17 had too many primes to be generated in 10 hours on a 1 MIP machine. <p> Note that the technique for generating the reduced covering table based on the modified multivalued tautology algorithm can in the worst case generate all the minterms as rows resulting in the full prime implicant table <ref> [14] </ref>. In our case, we will always obtain the largest cubes of F + D that can be covered by the set of primes in the minimum formulation as the rows of the reduced covering table. <p> The covering problem is solved exactly using efficient branch and bound technique <ref> [14] </ref>. 6 Experimental Results The algorithms described in the paper are implemented in ESPRESSO-SIGNATURE. The experiments on the ESPRESSO benchmark suite were performed on a DECstation 5000. <p> The average memory requirement for ESPRESSO-EXACT is 1279Kbytes and for ESPRESSO-SIGNATURE is 1070Kbytes. We also report results on 20 hard examples in the ESPRESSO benchmark suite <ref> [14] </ref> and 3 additional hard examples (EX1010,TEST2,TEST3) in the extended suite. Out of the 20 hard examples, ESPRESSO-EXACT fails on 17 due to too many primes and the other three due to failure to solve the covering problem exactly.
Reference: [15] <author> R. L. Rudell and A. L. Sangiovanni-Vincentelli. </author> <title> Multiple-valued minimization for PLA optimization. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 6(5) </volume> <pages> 727-750, </pages> <month> September </month> <year> 1987. </year> <title> [16] same authors. A new exact minimizer for two-level logic synthesis. </title> <editor> In T. Sasao, editor, </editor> <title> New Trends in Logic Synthesis and Optimization. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1992. </year>
Reference-contexts: An elegant method of formulating the set-covering problem was devised and improved set covering algorithms were developed [2]. In 1987, Rudell combined and improved the procedures for prime generation and set covering formulation with improved techniques to solve the set-covering problem in the program ESPRESSO-EXACT <ref> [15, 14] </ref>. ESPRESSO-EXACT was able to find a minimum solution for 114 out of 134 circuits of an extensive suite of benchmark examples. Rudell's extensive experimental work points the way for improvement in the basic Quine-McCluskey procedure. It demonstrates that the bottleneck is the generation of all the primes.
Reference: [17] <author> C. E. Shannon. </author> <title> The synthesis of two-terminal switching function. </title> <journal> Bell System Technical Journal, </journal> <year> 1949. </year> <month> 14 </month>
Reference-contexts: Apparently, this problem was first considered by Shannon in 1949 <ref> [17] </ref>. In the 1950's, Karnaugh introduced the map method; seminal algorithms were given by Quine [12] and McCluskey [7] leading to the Quine-McCluskey procedure. The three basic steps of this procedure are: 1. Generate all the maximal terms (primes) of F . 2.
References-found: 16

