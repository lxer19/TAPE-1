URL: ftp://dimacs.rutgers.edu/pub/dimacs/TechnicalReports/TechReports/1997/97-40.ps.gz
Refering-URL: http://dimacs.rutgers.edu/TechnicalReports/1997.html
Root-URL: http://www.cs.rutgers.edu
Email: allender@cs.rutgers.edu.  beals@math.arizona.edu  ogihara@cs.rochester.edu  
Title: complexity of matrix rank and feasible systems of linear equations 1  
Author: by Eric Allender ; Robert Beals Mitsunori Ogihara 
Address: Piscataway, New Jersey 08855  Tucson, AZ 85712  Rochester, NY, 14627  
Affiliation: Dept. of Computer Science Rutgers University  Department of Mathematics University of Arizona  Department of Computer Science University of Rochester  scholar at the Institute of Mathematical Sciences, Madras, India, and at the Wilhelm-Schickard Institut fur Informatik, Universitat Tubingen  
Note: The  Theory of Computing. 2 Permanent Member 3 Supported in part by NSF grant CCR-9509603. Part of this work was done while a visiting  (supported by DFG grant TU 7/117-1). 4 Research conducted while visiting IAS and DIMACS and supported in part by an NSF Mathemat ical Sciences Postdoctoral Fellowship. DIMACS is a partnership of Rutgers University, Princeton University, AT&T Labs, Bellcore, and Bell Labs. DIMACS is an NSF Science and Technology Center, funded under contract STC-91-19999; and also receives support from the New Jersey Commission on Science and Technology.  
Abstract: DIMACS Technical Report 97-40 September 1997 
Abstract-found: 1
Intro-found: 1
Reference: [AO96] <author> E. Allender and M. Ogihara, </author> <title> Relationships among PL, #L, and the determinant. RAIRO Theoretical Information and Application, </title> <booktitle> 30 (1996), </booktitle> <pages> 1-21. </pages>
Reference-contexts: requires uniform TC 0 circuits of size greater than 2 log O (1) n , if and only if there is oracle separating PSPACE from CH. - 2 - 6.5], Toda [To91, Theorem 2.1], and Damm [Da91]. (See also [MV97] and [Va92, Theorem 2]; further discussion may be found in <ref> [AO96] </ref>.) Theorem 1.1 A function f is in GapL iff f is logspace many-one reducible to the determinant. It follows immediately from this characterization that a complete problem for PL is the set of integer matrices whose determinant is positive (originally proved by [Ju85]). <p> a problem as checking if the determinant is exactly equal to zero, and it is equally immediate from the foregoing that the set of singular matrices is complete for the complexity class C = L. (C = L can be defined in any of a number of equivalent ways; see <ref> [AO96] </ref>. <p> Logspace versions of the counting hierarchy were considered in <ref> [AO96] </ref>. Although the hierarchies defined in terms of C = P, PP, and #P all coincide with CH, there seems to be little reason to believe that the hierarchies defined in terms of C = L, PL, and #L are equal. It was shown in [AO96] that these hierarchies correspond exactly <p> counting hierarchy were considered in <ref> [AO96] </ref>. Although the hierarchies defined in terms of C = P, PP, and #P all coincide with CH, there seems to be little reason to believe that the hierarchies defined in terms of C = L, PL, and #L are equal. It was shown in [AO96] that these hierarchies correspond exactly to AC 0 reducibility, in the following sense 2 : * The Exact Counting Logspace Hierarchy = C = L C = L = AC 0 (C = L) = the class of problems AC 0 -reducible to the set of singular integer matrices. * <p> is zero is in C = L. (For details, see [To91].) * Hence, the preceding discussion shows that the problem of determining if the rank is at most r is logspace conjunctive-truth-table reducible to a problem in C = L. * C = L is closed under logspace conjunctive-truth-table reductions <ref> [AO96] </ref>. 2 2.1.1 A few comments regarding previous work Von zur Gathen [vzG93] considers the problem INDEPENDENCE (given a set of vectors decide if they linearly independent), and specifically asks if INDEPENDENCE is reducible to SINGULAR (the set of singular matrices). <p> considered by Santha and Tan differ from those of [vzG93] in at least two respects: (1) unbounded fan-in AND gates are explicitly allowed, and (2) no path from input to output can encounter more than one oracle gate. (Thus these reductions are what are called AC 0 1 reductions in <ref> [AO96] </ref> and elsewhere.) The classes they study are DET (which would be called AC 0 1 (#L) in our notational scheme), and V -DET (which by definition is AC 0 1 (C = L), and which we show coincides with the exact counting logspace hierarchy).
Reference: [BGW96] <author> L. Babai, A. G al, and A. Wigderson, </author> <title> Superpolynomial lower bounds for monotone span programs. </title> <type> DIMACS Technical Report 96-37. </type>
Reference-contexts: languages reducible to the set of singular matrices via non-uniform AC 0 or NC 1 reductions. 2.5 Span Programs and the Matching Problem The span program formalism was used recently in showing that, for every natural number k, the Perfect Matching problem is in the complexity class Mod k L/poly <ref> [BGW96] </ref>. (That is, they show that, for every prime p, there are polynomial-size span programs over GF [p] recognizing the Perfect Matching problem.) Vinay [Vi97] has pointed out that Perfect Matching - 14 - is also in the class co-C = L/poly, via essentially the same argument.
Reference: [Ba91] <author> J. Balc azar, </author> <title> Adaptive logspace and depth-bounded reducibilities. </title> <booktitle> In Proceedings of the sixth Conference on Structure in Complexity Theory, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1991, </year> <pages> 240-254. </pages>
Reference-contexts: Similarly, one defines "conjunctive truth table reducibility" (ctt reductions). A more general type of reduction is the following. An NC 1 1 reduction <ref> [Ba91] </ref> is a uniform sequence of circuits fC n g of size n O (1) and depth O (log n), consisting of fan-in two AND and OR gates, NOT gates, and "oracle gates", with the property that no path from input to output goes through more than one oracle gate.
Reference: [BCH86] <author> P. Beame, S. Cook, and H. J. </author> <title> Hoover, Log depth circuits for division and related problems. </title> <journal> SIAM Journal on Computing 15 (1996), </journal> <pages> 994-1003. </pages>
Reference-contexts: This can be encoded as a many-one reduction to IFSLE.) This reduction works as long as p is at most polynomially large. Thus a P-uniform NC 1 reduction can use Chinese Remaindering to compute the exact value of the determinant <ref> [BCH86] </ref>. This shows that #L is P-uniform NC 1 -reducible to IFSLE.
Reference: [Be95] <author> R. Beigel and B. Fu, </author> <title> Circuits over PP and PL. </title> <booktitle> To appear in Proceedings of the 12th Conference on Computational Complexity, </booktitle> <year> 1997. </year>
Reference-contexts: Recall that this hierarchy is the class of problems AC 0 -reducible to the determinant. Is NC 1 (PL) = AC 0 (PL)? (This question has recently been answered, in the affirmative, by Beigel and Fu <ref> [Be95] </ref>, who also show that NC 1 (PP) = AC 0 (PP).) Acknowledgments We wish to thank E. Kaltofen and L. Fortnow for insightful comments related to this paper. Dieter van Melkebeek gave useful feedback on an earlier draft.
Reference: [Be84] <author> S. Berkowitz, </author> <title> On computing the determinant in small parallel time using a small number of processors. </title> <booktitle> Information Processing Letters 18 (1984), </booktitle> <pages> 147-150. </pages>
Reference-contexts: This, in turn is no more difficult than iterated matrix multiplication, as can be seen from the work of Berkowitz <ref> [Be84] </ref>. Theorem 2.1 [Be84] Given an r-by-r matrix B, there is a logspace-computable reduction that constructs a sequence of m-by-m matrices D i such that the coefficients c 0 ; c 1 ; :::; c r of the characteristic polynomial of B appear in positions (1; r + 1); :::; (1; <p> This, in turn is no more difficult than iterated matrix multiplication, as can be seen from the work of Berkowitz <ref> [Be84] </ref>. Theorem 2.1 [Be84] Given an r-by-r matrix B, there is a logspace-computable reduction that constructs a sequence of m-by-m matrices D i such that the coefficients c 0 ; c 1 ; :::; c r of the characteristic polynomial of B appear in positions (1; r + 1); :::; (1; 1) of the
Reference: [BDHM92] <author> G. Buntrock, C. Damm, U. Hertrampf, and C. Meinel, </author> <title> Structure and importance of Logspace-MOD Class. </title> <booktitle> Mathematical Systems Theory 25 (1992), </booktitle> <pages> 223-237. </pages>
Reference-contexts: In the arithmetic case, however, this remains unknown (even in the case when F is the field of rational numbers). Buntrock et al. <ref> [BDHM92] </ref> studied algebraic problems over GF [p] for prime p. The proof of Theorem 10 in [BDHM92] states that, over the ring of integers, computation of the determinant is NC 1 -reducible to computation of the rank of a matrix, while in fact this remains an open question. (However, what is <p> In the arithmetic case, however, this remains unknown (even in the case when F is the field of rational numbers). Buntrock et al. <ref> [BDHM92] </ref> studied algebraic problems over GF [p] for prime p. The proof of Theorem 10 in [BDHM92] states that, over the ring of integers, computation of the determinant is NC 1 -reducible to computation of the rank of a matrix, while in fact this remains an open question. (However, what is needed for the applications in [BDHM92] is that these problems are interreducible over GF [p k <p> The proof of Theorem 10 in <ref> [BDHM92] </ref> states that, over the ring of integers, computation of the determinant is NC 1 -reducible to computation of the rank of a matrix, while in fact this remains an open question. (However, what is needed for the applications in [BDHM92] is that these problems are interreducible over GF [p k ], which is true.
Reference: [CGH*88] <author> J-Y Cai, T. Gundermann, J. Hartmanis, L. Hemachandra, V. Sewel-son, K. Wagner, and G. Wechsung, </author> <title> The Boolean Hierarchy I: Structural Properties. </title> <journal> SIAM Journal on Computing 17 (1988), </journal> <pages> 1232-1252. </pages>
Reference-contexts: In order to classify the problem of verifying the rank, it is necessary to define some additional complexity classes. It is not known if C = L is closed under complement. Thus, just as has been done with complexity classes such as NP <ref> [CGH*88, CGH*89] </ref>, one can define the Boolean Hierarchy over C = L, defined as the class of languages that can be formed by taking Boolean combinations - 9 - of languages in C = L.
Reference: [CGH*89] <author> J-Y Cai, T. Gundermann, J. Hartmanis, L. Hemachandra, V. Sewel-son, K. Wagner, and G. Wechsung, </author> <title> The Boolean Hierarchy II: </title> <journal> Applications. SIAM Journal on Computing 18 (1989), </journal> <pages> 95-111. </pages>
Reference-contexts: In order to classify the problem of verifying the rank, it is necessary to define some additional complexity classes. It is not known if C = L is closed under complement. Thus, just as has been done with complexity classes such as NP <ref> [CGH*88, CGH*89] </ref>, one can define the Boolean Hierarchy over C = L, defined as the class of languages that can be formed by taking Boolean combinations - 9 - of languages in C = L.
Reference: [Co85] <author> S. Cook, </author> <title> A taxonomy of problems with fast parallel algorithms. </title> <booktitle> Information and Control 64 (1985), </booktitle> <pages> 2-22. </pages>
Reference-contexts: Note that all of these classes contain NL and are contained in TC 1 (and hence are contained in NC 2 ). Ogihara [Og96] recently proved that the PL hierarchy collapses to PL. AC 0 reducibility is a restricted form of the NC 1 reducibility defined and studied in <ref> [Co85] </ref>.
Reference: [Da91] <author> C. Damm, </author> <title> DET = L #L ? Informatik-Preprint 8, </title> <institution> Fachbereich Informatik der Humboldt-Universitat zu Berlin, </institution> <year> 1991. </year>
Reference-contexts: [Vi91, Theorem 1 More precisely, there is a language in uniform NC 1 that requires uniform TC 0 circuits of size greater than 2 log O (1) n , if and only if there is oracle separating PSPACE from CH. - 2 - 6.5], Toda [To91, Theorem 2.1], and Damm <ref> [Da91] </ref>. (See also [MV97] and [Va92, Theorem 2]; further discussion may be found in [AO96].) Theorem 1.1 A function f is in GapL iff f is logspace many-one reducible to the determinant.
Reference: [FFK] <author> S. Fenner, L. Fortnow, and S. Kurtz, </author> <title> Gap-definable counting classes. </title> <journal> Journal of Computer and System Sciences 48 (1994), </journal> <pages> 116-148. </pages>
Reference-contexts: In proving results about the complexity of PP and #P and related classes, it has often proved more convenient to use the related class of functions GapP <ref> [FFK] </ref>, which is the set of functions that can be expressed as the difference of two #P functions. One final complexity class related to CH needs to be defined.
Reference: [FSS84] <author> M. Furst, J. Saxe, and M. Sipser, </author> <title> Parity, circuits, and the polynomial-time hierarchy. </title> <booktitle> Mathematical Systems Theory 17 (1984), </booktitle> <pages> 13-27. </pages>
Reference-contexts: Using the analogous correspondence between constant-depth circuits and the polynomial hierarchy established by <ref> [FSS84] </ref>, it is known that constructing an oracle separating PSPACE from CH is essentially the same problem as showing that NC 1 properly contains TC 0 (the class of problems computable by constant-depth threshold circuits of polynomial size). 1 Similarly, the important question of whether or not the TC 0 hierarchy
Reference: [vzG93] <author> J. von zur Gathen, </author> <title> Parallel linear algebra. In Synthesis of Parallel Algorithms, </title> <editor> ed. J. Reif. </editor> <publisher> Morgan Kaufmann, </publisher> <year> 1993, </year> <pages> 574-615. - 19 </pages> - 
Reference-contexts: We refer the reader to the excellent survey article by von zur Gathen <ref> [vzG93] </ref> for more detailed coverage. <p> In particular, this reduction has the property that the entries of the D i 's are either taken from B or taken from the constants 1; 0; +1; thus the reduction is also a reduction in the sense of <ref> [vzG93] </ref>, and it is also a projection in the sense of [Va79]. There is also a reduction going the other way: iterated matrix multiplication is no more difficult than the determinant. <p> H such that entry (a; b) of Q As in Theorem 2.1, in addition to the entries of D i , the constants we need are only 1; 0; +1, thus, this reduction holds for matrices over any ring with unity, and it is a reduction in the sense of <ref> [vzG93] </ref>, and a projection in the sense of [Va79]. <p> As is explained in <ref> [vzG93] </ref>, the following statements are equivalent: 1. rank (A) k, 2. rank (A 0 ) 2k, 3. rank (B) 2k, 4. algebraic:rank (B) 2k (i.e., rank (B 2n ) 2k), 5. the first 2n 2k coefficients of the characteristic polynomial of B are all zero, and 6. the first 2n 2k <p> A polynomial in K (y) of degree at most d 1 can be represented by a d-by-d Toeplitz matrix (see <ref> [vzG93] </ref>), and the zero element in K (y) corresponds to the all-zero matrix. <p> Thus, for the particular case of integer matrices we have the following proposition, which in some sense is implicit in <ref> [vzG93] </ref> (see also [ST94]): - 7 - Proposition 2.5 The set f (M; r) j M 2 Z nfin and rank (M ) &lt; rg is complete for C = L. Proof: Hardness for C = L follows from Theorem 1.1 (even for the case r = n). <p> Hence, the preceding discussion shows that the problem of determining if the rank is at most r is logspace conjunctive-truth-table reducible to a problem in C = L. * C = L is closed under logspace conjunctive-truth-table reductions [AO96]. 2 2.1.1 A few comments regarding previous work Von zur Gathen <ref> [vzG93] </ref> considers the problem INDEPENDENCE (given a set of vectors decide if they linearly independent), and specifically asks if INDEPENDENCE is reducible to SINGULAR (the set of singular matrices). <p> For rational matrices, these problems are easily seen to be complete for co-C = L and for C = L, respectively, so von zur Gathen's question in that setting can be viewed as asking if C = L is closed under complement. However, in <ref> [vzG93] </ref> von zur Gathen is more interested in working in the algebraic setting over a given field F , and his notion of "reduction" is more restrictive than logspace reducibilities. More precisely, the reductions in [vzG93] are computed by constant-depth circuits with unbounded fan-in OR and + gates, fan-in two AND <p> However, in <ref> [vzG93] </ref> von zur Gathen is more interested in working in the algebraic setting over a given field F , and his notion of "reduction" is more restrictive than logspace reducibilities. More precisely, the reductions in [vzG93] are computed by constant-depth circuits with unbounded fan-in OR and + gates, fan-in two AND and fi gates, and (unbounded fan-in) oracle gates. It is not made clear in [vzG93] if NOT gates are also to be allowed. <p> More precisely, the reductions in <ref> [vzG93] </ref> are computed by constant-depth circuits with unbounded fan-in OR and + gates, fan-in two AND and fi gates, and (unbounded fan-in) oracle gates. It is not made clear in [vzG93] if NOT gates are also to be allowed. If NOT gates are allowed, then the restriction of bounded fan-in AND gates can be side-stepped using unbounded fan-in OR gates, via DeMorgan's laws. On the other hand, some of the reductions in [vzG93] (such as in Theorem 13.8) explicitly make use <p> It is not made clear in <ref> [vzG93] </ref> if NOT gates are also to be allowed. If NOT gates are allowed, then the restriction of bounded fan-in AND gates can be side-stepped using unbounded fan-in OR gates, via DeMorgan's laws. On the other hand, some of the reductions in [vzG93] (such as in Theorem 13.8) explicitly make use of NOT gates. Without using NOT gates at all, INDEPENDENCE F (the subscript F indicates the language is the "field F "-version) is clearly many-one reducible to the question of whether a matrix has rank greater than r. <p> Since each of these values can be represented as the determinant of a matrix (again, using a reduction in the sense of <ref> [vzG93] </ref>, it follows that even without using NOT gates, INDEPENDENCE F is reducible to the complement of SINGULAR F using a reduction in the sense of [vzG93]. <p> Since each of these values can be represented as the determinant of a matrix (again, using a reduction in the sense of <ref> [vzG93] </ref>, it follows that even without using NOT gates, INDEPENDENCE F is reducible to the complement of SINGULAR F using a reduction in the sense of [vzG93]. <p> SING.NONSING F (consisting of two matrices, the first of which is singular, the - 8 - second nonsingular), and thus the reduction given in our Lemma 2.10 shows that all problems in RANK F are reducible to INDEPENDENCE F and to RANK F , answering questions listed as open in <ref> [vzG93] </ref>. If NOT gates are not allowed, the situation remains unclear. Santha and Tan [ST94] also considered complexity classes defined in terms of reducibility to problems in linear algebra over some field F . The reducibilities considered by Santha and Tan differ from those of [vzG93] in at least two respects: <p> questions listed as open in <ref> [vzG93] </ref>. If NOT gates are not allowed, the situation remains unclear. Santha and Tan [ST94] also considered complexity classes defined in terms of reducibility to problems in linear algebra over some field F . The reducibilities considered by Santha and Tan differ from those of [vzG93] in at least two respects: (1) unbounded fan-in AND gates are explicitly allowed, and (2) no path from input to output can encounter more than one oracle gate. (Thus these reductions are what are called AC 0 1 reductions in [AO96] and elsewhere.) The classes they study are DET (which
Reference: [Gi95] <author> M. Giesbrecht, </author> <title> Fast computation of the Smith normal form of an integer matrix. </title> <booktitle> In Proceedings of the International Symposium on Symbolic and Algebraic Computation, </booktitle> <publisher> ACM Press, </publisher> <year> 1995, </year> <pages> 110-118. </pages>
Reference-contexts: This problem is at least as hard as determining if two integers are relatively prime, since the equation ax + by = 1 has an integer solution iff (a; b) = 1. In fact, Kaltofen [Ka95] has pointed out to us that recent work by Giesbrecht <ref> [Gi95] </ref> can be used to show that IFSLE is RNC-equivalent to the problem of determining if GCD (x 1 ; : : : ; x n ) = GCD (y 1 ; : : : ; y n ).
Reference: [Gi77] <author> J. Gill, </author> <title> Computational complexity of probabilistic Turing machines. </title> <journal> SIAM Journal on Computing 6 (1977), </journal> <pages> 675-695. </pages>
Reference-contexts: the notation used later, and thus we start by explaining this side of things. 1.1 Complexity Classes for Counting and Enumeration The counting hierarchy (sometimes denoted CH) is the complexity class PP [ PP PP [ PP PP PP [ : : :. (Here, PP is unbounded-error probabilistic polynomial time <ref> [Gi77] </ref>.) Although the counting hierarchy was originally defined in order to classify the complexity of various problems [Wa86], another reason to study CH comes from the connection with threshold circuits.
Reference: [Go96] <author> G. Gottlob, </author> <title> Collapsing Oracle-Tape Hierarchies. </title> <booktitle> In Proceedings of the 10th Conference on Computational Complexity, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1996, </year> <pages> 33-42. </pages>
Reference-contexts: In particular, there is a superficial resemblance between our result showing NC 1 (C = L) = L C = L , and the result of [Og95] that NC 1 (C = P) is equal to L C = P . Also, Gottlob <ref> [Go96] </ref> has recently studied the question of which classes C satisfy AC 0 (C) = L C . (Our results imply that C = L has this property.) However the techniques of [Og95, Go96] do not carry over to complexity classes with small space bounds such as C = L, and <p> Also, Gottlob [Go96] has recently studied the question of which classes C satisfy AC 0 (C) = L C . (Our results imply that C = L has this property.) However the techniques of <ref> [Og95, Go96] </ref> do not carry over to complexity classes with small space bounds such as C = L, and thus our proofs are correspondingly more complex. 2 Complexity of Problems in Linear Algebra We will focus mainly on the following problems concerning integer matrices: verifying that the rank of a matrix
Reference: [IMR80] <author> O. Ibarra, S. Moran, and L. Rosier, </author> <title> A note on the parallel complexity of computing the rank of order n matrices. </title> <note> Information Processing Letters 11 (1980), 162. </note>
Reference: [Im88] <author> N. Immerman, </author> <title> Nondeterministic space is closed under complementation. </title> <journal> SIAM Journal on Computing 17, </journal> <year> 1988, </year> <pages> 935-938. </pages>
Reference-contexts: Just as the complementation results of <ref> [Im88, Sz88, NT95] </ref> have led to useful insights, we believe that a positive answer to this question would be extremely interesting. Does the #L hierarchy collapse? Given the collapse of the other two logspace counting hierarchies, it is tempting to guess that this hierarchy also collapses.
Reference: [Ju85] <author> H. Jung, </author> <title> On probabilistic time and space. </title> <booktitle> In Proceedings of the 12th International Conference on Automata, Languages, and Programming, Lecture Notes in Computer Science 194, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1985, </year> <pages> 310-317. </pages>
Reference-contexts: It follows immediately from this characterization that a complete problem for PL is the set of integer matrices whose determinant is positive (originally proved by <ref> [Ju85] </ref>).
Reference: [Ka95] <author> E. Kaltofen, </author> <type> personal communication. </type>
Reference-contexts: This problem is at least as hard as determining if two integers are relatively prime, since the equation ax + by = 1 has an integer solution iff (a; b) = 1. In fact, Kaltofen <ref> [Ka95] </ref> has pointed out to us that recent work by Giesbrecht [Gi95] can be used to show that IFSLE is RNC-equivalent to the problem of determining if GCD (x 1 ; : : : ; x n ) = GCD (y 1 ; : : : ; y n ).
Reference: [KUW86] <author> R. Karp and E. Upfal and A. Wigderson, </author> <title> Construction a perfect matching is in random NC. </title> <booktitle> Combinatorica 6 (1986), </booktitle> <pages> 35-48. </pages>
Reference-contexts: The Perfect Matching problem is one of the few important problems that has resisted all such attempts at being pigeonholed in this way. The problem is hard for NL. The reduction from 0-1 Network Flow to Perfect Matching given by Karp, Upfal, and Wigderson <ref> [KUW86] </ref> can be modified to show that the Directed Connectivity problem is reducible to the Perfect Matching problem. Since it is in Mod k L for all k (at least nonuniformly), it seems unlikely to be complete for any of the Mod k L classes.
Reference: [KW93] <author> M. Karchmer and A. Wigderson, </author> <title> On Span Programs. </title> <booktitle> In Proceedings of the 8th Conference on Structure in Complexity Theory, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1993, </year> <pages> 102-111. </pages>
Reference-contexts: We further show that NC 1 (C = L) = L C = L , and that this class consists of exactly those languages with logspace uniform span programs over the rationals (cf. <ref> [KW93] </ref>). We show that testing feasibility of a system of linear equations is complete for this hierarchy. Another complete problem for this class is computing the rank of a matrix (or even determining the low order bit of the rank). <p> Then (A; i; b) is in Comp.RANK if and only if W j2S (A; j) 2 Ver.RANK. The result now follows by Lemma 2.11 and Theorem 2.6. 2 2.4 Span programs The span program model of computation was introduced by Karchmer and Wigderson <ref> [KW93] </ref>. <p> In particular, it is an important characteristic of the span program model in the non-uniform setting that the only measure of interest is the number of vectors (and the size of each vector is not counted). For instance, it is shown in <ref> [KW93] </ref> that if "small" span programs exist for a problem, then span programs having a certain very restricted form must exist but this restricted form uses vectors of exponential length. It is an important aspect of span programs that having extremely long vectors does not provide additional computational power.
Reference: [L79] <author> L. Lov asz, </author> <title> On determinants, matchings, and random algorithms. In Fundamentals of Computation Theory 2, </title> <editor> ed. L. Budach. Akademia-Verlag, </editor> <address> Berlin, </address> <year> 1979, </year> <pages> 565-574. </pages>
Reference-contexts: Let us sketch the details here; the main ideas stem from the work of <ref> [T47, L79, S80] </ref>. Given the adjacency matrix of a graph, replace the 1's in the matrix with indeterminates and negated indeterminates, to obtain the Tutte matrix for the graph.
Reference: [MV97] <author> M. Mahajan and V. Vinay, </author> <title> A combinatorial algorithm for the determinant. </title> <booktitle> In Proceedings of the ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <publisher> ACM Press, </publisher> <year> 1997. </year>
Reference-contexts: More precisely, there is a language in uniform NC 1 that requires uniform TC 0 circuits of size greater than 2 log O (1) n , if and only if there is oracle separating PSPACE from CH. - 2 - 6.5], Toda [To91, Theorem 2.1], and Damm [Da91]. (See also <ref> [MV97] </ref> and [Va92, Theorem 2]; further discussion may be found in [AO96].) Theorem 1.1 A function f is in GapL iff f is logspace many-one reducible to the determinant.
Reference: [M87] <author> K. Mulmuley, </author> <title> A fast parallel algorithm to compute the rank of a matrix over an arbitrary field. </title> <booktitle> Combinatorica 7 (1987), </booktitle> <pages> 101-104. </pages>
Reference-contexts: M the jth coordinate of vector v i in f (M ) is either 0; 1; 1; or M k;l , and this depends only on (r; i; j). (Again, this holds for any ring with unity.) Let us now review some aspects of Mulmuley's algorithm for computing the rank <ref> [M87] </ref>.
Reference: [NT95] <author> N. Nisan and A. Ta-Shma, </author> <title> Symmetric logspace is closed under complement. </title> <journal> Chicago Journal on Theoretical Computer Science, </journal> <note> 1995, article 1. </note>
Reference-contexts: Just as the complementation results of <ref> [Im88, Sz88, NT95] </ref> have led to useful insights, we believe that a positive answer to this question would be extremely interesting. Does the #L hierarchy collapse? Given the collapse of the other two logspace counting hierarchies, it is tempting to guess that this hierarchy also collapses.
Reference: [Og95] <author> M. Ogihara, </author> <title> Equivalence of NC k and AC k1 closures of NP and other classes. </title> <booktitle> Information and Computation 120 (1995), </booktitle> <pages> 55-58. - 20 </pages> - 
Reference-contexts: In particular, there is a superficial resemblance between our result showing NC 1 (C = L) = L C = L , and the result of <ref> [Og95] </ref> that NC 1 (C = P) is equal to L C = P . <p> Also, Gottlob [Go96] has recently studied the question of which classes C satisfy AC 0 (C) = L C . (Our results imply that C = L has this property.) However the techniques of <ref> [Og95, Go96] </ref> do not carry over to complexity classes with small space bounds such as C = L, and thus our proofs are correspondingly more complex. 2 Complexity of Problems in Linear Algebra We will focus mainly on the following problems concerning integer matrices: verifying that the rank of a matrix
Reference: [Og96] <author> M. Ogihara, </author> <title> The PL Hierarchy collapses. </title> <booktitle> In Proceedings of the 28th Symposium on Theory of Computing, </booktitle> <publisher> ACM Press, </publisher> <year> 1996, </year> <pages> 84-88. </pages>
Reference-contexts: Note that all of these classes contain NL and are contained in TC 1 (and hence are contained in NC 2 ). Ogihara <ref> [Og96] </ref> recently proved that the PL hierarchy collapses to PL. AC 0 reducibility is a restricted form of the NC 1 reducibility defined and studied in [Co85].
Reference: [RST] <author> W. Ruzzo, J. Simon, and M. Tompa, </author> <title> Space-bounded hierarchies and probabilistic computation. </title> <journal> Journal of Computer and System Sciences 28, </journal> <year> 1984, </year> <pages> 216-230. </pages>
Reference-contexts: We use the "Ruzzo-Simon-Tompa" access mechanism <ref> [RST] </ref>, which dictates that a nondeterministic Turing machine must behave deterministically while writing on its oracle tape. <p> One consequence of using this definition is that we may assume without loss of generality that the list of queries asked by the machine depends only on the input x and does not depend on the answers given by the oracle <ref> [RST] </ref>. The correspondence with AC 0 reducibility helps justify this choice. - 3 - 1.3 Main results We show that the exact counting logspace hierarchy collapses to L C = L .
Reference: [ST94] <author> M. Santha and S. Tan, </author> <title> Verifying the determinant. </title> <booktitle> In Proceedings of the 5th Symposium on Algorithms and Computation, Lecture Notes in Computer Science 834, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> 65-73. </pages>
Reference-contexts: In contrast, verifying that a matrix has a particular rank is complete for a level of the Boolean hierarchy over C = L. This is the first time that the complexity of these well-studied problems in linear algebra has been so precisely characterized. (Santha and Tan <ref> [ST94] </ref> studied these same computational problems using a coarser notion of reducibility that blurred the distinctions between the various levels of the exact counting logspace hierarchy and the Boolean hierarchy over C = L. The emphasis in [ST94] is on exploring the apparent difference in the complexity of such problems as <p> well-studied problems in linear algebra has been so precisely characterized. (Santha and Tan <ref> [ST94] </ref> studied these same computational problems using a coarser notion of reducibility that blurred the distinctions between the various levels of the exact counting logspace hierarchy and the Boolean hierarchy over C = L. The emphasis in [ST94] is on exploring the apparent difference in the complexity of such problems as verifying det (M ) = a and verifying that M 1 = A, although the complexity of computing the determinant is equivalent to that of matrix inversion.) It should be noticed that there are several other classes <p> Thus, for the particular case of integer matrices we have the following proposition, which in some sense is implicit in [vzG93] (see also <ref> [ST94] </ref>): - 7 - Proposition 2.5 The set f (M; r) j M 2 Z nfin and rank (M ) &lt; rg is complete for C = L. Proof: Hardness for C = L follows from Theorem 1.1 (even for the case r = n). <p> If NOT gates are not allowed, the situation remains unclear. Santha and Tan <ref> [ST94] </ref> also considered complexity classes defined in terms of reducibility to problems in linear algebra over some field F . <p> Our results show that in the Boolean model, for reductions to the problem V -DET , restriction (2) in the reducibilities of Santha and Tan <ref> [ST94] </ref> is redundant; the same class of problems results if this restriction is dropped. In the arithmetic case, however, this remains unknown (even in the case when F is the field of rational numbers). Buntrock et al. [BDHM92] studied algebraic problems over GF [p] for prime p.
Reference: [S80] <author> J. Schwartz, </author> <title> Fast probabilistic algorithms for verification of polynomial identities. </title> <journal> Journal of the ACM 27 (1980), </journal> <pages> 701-717. </pages>
Reference-contexts: Let us sketch the details here; the main ideas stem from the work of <ref> [T47, L79, S80] </ref>. Given the adjacency matrix of a graph, replace the 1's in the matrix with indeterminates and negated indeterminates, to obtain the Tutte matrix for the graph.
Reference: [Sz88] <author> R. Szelepcs enyi, </author> <title> The method of forced enumeration for nondeterministic automata. </title> <journal> Acta Informatica 26 (1988), </journal> <pages> 279-284. </pages>
Reference-contexts: Just as the complementation results of <ref> [Im88, Sz88, NT95] </ref> have led to useful insights, we believe that a positive answer to this question would be extremely interesting. Does the #L hierarchy collapse? Given the collapse of the other two logspace counting hierarchies, it is tempting to guess that this hierarchy also collapses.
Reference: [To91] <author> S. </author> <title> Toda, Counting problems computationally equivalent to the determinant. </title> <type> Technical Report CSIM 91-07, </type> <institution> Department of Computer Science and Information Mathematics, University of Electro-Communications, </institution> <address> Tokyo, </address> <year> 1991. </year>
Reference-contexts: is essentially shown by Vinay [Vi91, Theorem 1 More precisely, there is a language in uniform NC 1 that requires uniform TC 0 circuits of size greater than 2 log O (1) n , if and only if there is oracle separating PSPACE from CH. - 2 - 6.5], Toda <ref> [To91, Theorem 2.1] </ref>, and Damm [Da91]. (See also [MV97] and [Va92, Theorem 2]; further discussion may be found in [AO96].) Theorem 1.1 A function f is in GapL iff f is logspace many-one reducible to the determinant. <p> There is also a reduction going the other way: iterated matrix multiplication is no more difficult than the determinant. The following construction goes back at least to [Va79] and the exposition below is similar to that in <ref> [To91] </ref>. - 5 - Proposition 2.2 There is a logspace-computable function that takes as input a sequence of matrices D i and numbers (a; b), and produces as output a matrix H such that entry (a; b) of Q As in Theorem 2.1, in addition to the entries of D i <p> Thus det (H) is simply the sum (over all paths from vertex a in the first column to vertex b in the last column) of the product of the labels on the edges on that path, as desired. (We remark that a slightly more complicated construction given in <ref> [To91] </ref> provides a projection that does not make use of the constant 1, by introducing cycle covers corresponding to odd permutations.) 2 Corollary 2.3 There is a logspace-computable function f such that if M is a matrix of full rank, then so is f (M ), and if M is a <p> Containment in C = L follows from the preceding discussion, along with the following observations: * The problem of taking integer matrices D l and indices i; j and determining if entry i; j of l D l is zero is in C = L. (For details, see <ref> [To91] </ref>.) * Hence, the preceding discussion shows that the problem of determining if the rank is at most r is logspace conjunctive-truth-table reducible to a problem in C = L. * C = L is closed under logspace conjunctive-truth-table reductions [AO96]. 2 2.1.1 A few comments regarding previous work Von zur <p> Then A is logspace many-one reducible to the set of singular matrices over the rationals. In fact, this reduction has the properties outlined in Corollary 2.4. Thus (since the set of singular matrices is complete for C = L under projections <ref> [To91] </ref>), we have that there is a logspace-computable f such that f (x) is a system of linear equations of the form M y = b such that 1. x 2 A if and only if M y = b is feasible. 2. b is the vector (1; 0; 0; :
Reference: [T47] <author> W. Tutte, </author> <title> The factorization of linear graphs. </title> <journal> Journal of the London Mathematics Society 22 (1947), </journal> <pages> 107-111. </pages>
Reference-contexts: Let us sketch the details here; the main ideas stem from the work of <ref> [T47, L79, S80] </ref>. Given the adjacency matrix of a graph, replace the 1's in the matrix with indeterminates and negated indeterminates, to obtain the Tutte matrix for the graph.
Reference: [Va79] <author> L. Valiant, </author> <title> Completeness classes in algebra. </title> <booktitle> In Proceedings of the 11th Symposium on Theory of Computing, </booktitle> <publisher> ACM Press, </publisher> <year> 1979, </year> <pages> 249-261. </pages>
Reference-contexts: In particular, this reduction has the property that the entries of the D i 's are either taken from B or taken from the constants 1; 0; +1; thus the reduction is also a reduction in the sense of [vzG93], and it is also a projection in the sense of <ref> [Va79] </ref>. There is also a reduction going the other way: iterated matrix multiplication is no more difficult than the determinant. The following construction goes back at least to [Va79] and the exposition below is similar to that in [To91]. - 5 - Proposition 2.2 There is a logspace-computable function that takes <p> thus the reduction is also a reduction in the sense of [vzG93], and it is also a projection in the sense of <ref> [Va79] </ref>. There is also a reduction going the other way: iterated matrix multiplication is no more difficult than the determinant. The following construction goes back at least to [Va79] and the exposition below is similar to that in [To91]. - 5 - Proposition 2.2 There is a logspace-computable function that takes as input a sequence of matrices D i and numbers (a; b), and produces as output a matrix H such that entry (a; b) of Q As in <p> As in Theorem 2.1, in addition to the entries of D i , the constants we need are only 1; 0; +1, thus, this reduction holds for matrices over any ring with unity, and it is a reduction in the sense of [vzG93], and a projection in the sense of <ref> [Va79] </ref>. Proof: Consider each matrix D i to be a bipartite graph on vertices arranged into two columns, where entry c in position (k; m) denotes an edge labeled c from vertex k in the first column to vertex m in the second column.
Reference: [Va92] <author> L. Valiant, </author> <title> Why is Boolean complexity theory difficult? In Boolean Function Complexity, </title> <editor> ed. M. Paterson. </editor> <booktitle> London Mathematical Society Lecture Notes Series 169, </booktitle> <publisher> Cambridge University Press, </publisher> <year> 1992, </year> <pages> 84-94. </pages>
Reference-contexts: there is a language in uniform NC 1 that requires uniform TC 0 circuits of size greater than 2 log O (1) n , if and only if there is oracle separating PSPACE from CH. - 2 - 6.5], Toda [To91, Theorem 2.1], and Damm [Da91]. (See also [MV97] and <ref> [Va92, Theorem 2] </ref>; further discussion may be found in [AO96].) Theorem 1.1 A function f is in GapL iff f is logspace many-one reducible to the determinant.
Reference: [Vi91] <author> V. Vinay, </author> <title> Counting auxiliary pushdown automata and semi-unbounded arithmetic circuits. </title> <booktitle> In Proceedings of the 6th Conference on Structure in Complexity Theory, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1991, </year> <pages> 270-284. </pages>
Reference: [Vi97] <author> V. </author> <title> Vinay, </title> <type> personal communication. </type>
Reference-contexts: span program formalism was used recently in showing that, for every natural number k, the Perfect Matching problem is in the complexity class Mod k L/poly [BGW96]. (That is, they show that, for every prime p, there are polynomial-size span programs over GF [p] recognizing the Perfect Matching problem.) Vinay <ref> [Vi97] </ref> has pointed out that Perfect Matching - 14 - is also in the class co-C = L/poly, via essentially the same argument. Let us sketch the details here; the main ideas stem from the work of [T47, L79, S80].
Reference: [Wa86] <author> K. Wagner, </author> <title> The complexity of combinatorial problems with succinct input representation. </title> <journal> Acta Informatica 23 (1986), </journal> <pages> 325-356. </pages>
Reference-contexts: for Counting and Enumeration The counting hierarchy (sometimes denoted CH) is the complexity class PP [ PP PP [ PP PP PP [ : : :. (Here, PP is unbounded-error probabilistic polynomial time [Gi77].) Although the counting hierarchy was originally defined in order to classify the complexity of various problems <ref> [Wa86] </ref>, another reason to study CH comes from the connection with threshold circuits. <p> One final complexity class related to CH needs to be defined. A number of authors (beginning with <ref> [Wa86] </ref>) have studied the class now called C = P (the set of all languages A with the property that there is an f in GapP such that x 2 A , f (x) = 0).
Reference: [Wi94] <author> A. Wigderson, NL/poly L/poly. </author> <booktitle> In Proceedings of the 9th Conference on Structure in Complexity Theory, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1994, </year> <pages> 59-62. </pages>
Reference-contexts: However, the assumption that C = L is not contained in Mod k L does not have much intuitive clout. It is known that NL is contained in the Mod k L/poly classes <ref> [Wi94] </ref>, and it is natural to ask if similar techniques might also apply to C = L. 3 Collapse of the hierarchy In this section we prove the collapse of the C = L hierarchy, by showing that L C = L = NC 1 (C = L).
References-found: 41

