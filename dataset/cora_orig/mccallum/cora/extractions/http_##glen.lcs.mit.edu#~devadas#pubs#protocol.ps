URL: http://glen.lcs.mit.edu/~devadas/pubs/protocol.ps
Refering-URL: http://glen.lcs.mit.edu/~devadas/pubs/low-power.html
Root-URL: 
Title: A Low Power, Low Bandwidth Protocol for Remote Wireless Terminals  
Author: George Hadjiyiannis Anantha Chandrakasan Srinivas Devadas 
Address: Cambridge  Cambridge  Cambridge  
Affiliation: Department of EECS MIT,  Department of EECS MIT,  Department of EECS MIT,  
Abstract: We present a low bandwidth protocol for wireless multi-media terminals targeted towards low power consumption on the terminal side. With the widespread use of portable computing devices, low power has become a major design criterion. One way of minimizing power consumption is to perform all tasks, other than managing hardware for the display and input, on a stationary workstation and exchange information between that workstation and the portable terminal via a wireless link. A protocol for such a system that emphasizes low bandwidth and low power requirements is presented herein. Such a protocol should address the issue of noisy wireless channels. We describe error correction and retransmission methods capable of dealing with burst error noise up to BERs of 10 3 . The final average bandwidth required is 140Kbits/sec for 8-bit color applications. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Weiser. </author> <title> Some Computer Science Issues in Ubiquitous Computing. </title> <journal> Communications of the ACM, </journal> <volume> 36(7) </volume> <pages> 75-84, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: The major trend in recent years has been for users to demand easier access to computers. Personal workstations have not fully satisfied this need and portable computing has become a focus of considerable attention. Various researchers (e.g., Mark Weiser at Xerox PARC <ref> [1] </ref>), intend to take this even further until computers are so common place and so much in tune with human needs that their users are not even aware of them. This notion has been termed "ubiquitous computing"[1].
Reference: [2] <author> Anantha P. Chandrakasan. </author> <title> Low Power CMOS Design. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <year> 1994. </year>
Reference-contexts: Reducing f reduces the rate at which these units operate. Reducing V increases propagation delays which forces a reduction in maximum f <ref> [2] </ref>. <p> reduce the power of a computational device by any significant amount 3 will result in lower throughput from that device. 1.2 The Stationary Cycle Server Model An interesting way to work around the power/throughput tradeoff has been used by both the Xerox PARC group and the InfoPad group at Berkeley <ref> [3, 2] </ref>. The portable computer (hereafter called the terminal) can do just enough work to manage the input and output devices and defer all other computation to a separate cycle server (hereafter called the stationary cycle server or just cycle server for short). <p> Given that the best way of reducing power 4 For comparison's sake, that is not much more than the power consumed by one of the LEDs on a standard keyboard or portable. 4 is reducing the supply voltage which causes a system slowdown <ref> [2] </ref>, the fact that the protocol could be decoded in hardware was a particularly important feature. However, the computationally cheap protocol turned out to have some side effects.
Reference: [3] <author> A. Chandrakasan et al. </author> <title> A Low-Power Chipset for a Portable Multimedia I/O Terminal. </title> <journal> Journal of Solid State Circuits, </journal> <volume> 29(12) </volume> <pages> 1415-1428, </pages> <month> December </month> <year> 1994. </year>
Reference-contexts: reduce the power of a computational device by any significant amount 3 will result in lower throughput from that device. 1.2 The Stationary Cycle Server Model An interesting way to work around the power/throughput tradeoff has been used by both the Xerox PARC group and the InfoPad group at Berkeley <ref> [3, 2] </ref>. The portable computer (hereafter called the terminal) can do just enough work to manage the input and output devices and defer all other computation to a separate cycle server (hereafter called the stationary cycle server or just cycle server for short). <p> of sending all the symbols for each packet in a string, you send the first of each of N packets first, then the second symbol of each packet and so on. 12 InfoPad showed that, while such errors create a less pleasing display to the user, it is nonetheless acceptable <ref> [3, 4] </ref>. There was no reason to incur the large overhead of error correction just to protect the pixel data. We decided to use the same, two-level encoding scheme that the InfoPad project used.
Reference: [4] <author> George Hadjiyiannis. </author> <title> A Low Power, Low Bandwidth Protocol for Remote Wireless Terminals. </title> <type> Master's thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <month> August </month> <year> 1995. </year> <month> 22 </month>
Reference-contexts: Memory Requirement It is necessary to keep the memory requirements of the terminal to a minimum <ref> [4] </ref>. Therefore, both the size of the code that will need to run on the terminal hardware, and the amount of state it needs to save, must be kept minimal. <p> of sending all the symbols for each packet in a string, you send the first of each of N packets first, then the second symbol of each packet and so on. 12 InfoPad showed that, while such errors create a less pleasing display to the user, it is nonetheless acceptable <ref> [3, 4] </ref>. There was no reason to incur the large overhead of error correction just to protect the pixel data. We decided to use the same, two-level encoding scheme that the InfoPad project used.
Reference: [5] <author> R. W. Scheifler. </author> <title> X Window System Protocol, X Consortium Standard, </title> <type> X Version 11, Release 6. </type> , <month> March </month> <year> 1994. </year>
Reference-contexts: Colormap Entries These are the entries in the table (colormap) that translate the 8-bit value of a pixel to an actual RGB value that can be displayed by the hardware. The following operations are available to the communication protocol: Basic X protocol operations <ref> [5] </ref> The X protocol defines 16 operations by which the new drawing primitive can be combined with the existing contents of the frame-buffer to yield the final image. All 16 are supported by the communication protocol.
Reference: [6] <author> H. Imai. </author> <title> Essentials of Error-Control Coding Techniques. </title> <publisher> Academic Press, </publisher> <year> 1990. </year>
Reference-contexts: The final choice was a Reed-Solomon code that works on 4-bit symbols, encodes 9 symbols to 15, and detects and corrects 3 simultaneous errors <ref> [6, 7] </ref>. The main advantages of this code that lead to its final use are listed below: Immunity to Burst Mode Noise It requires bursts of noise at least as long as 10 bits before the code will fail to correct the errors.
Reference: [7] <author> J. F. </author> <title> MacWilliams. The Theory of Error Correcting Codes. </title> <publisher> North-Holland Publishing, </publisher> <year> 1978. </year>
Reference-contexts: The final choice was a Reed-Solomon code that works on 4-bit symbols, encodes 9 symbols to 15, and detects and corrects 3 simultaneous errors <ref> [6, 7] </ref>. The main advantages of this code that lead to its final use are listed below: Immunity to Burst Mode Noise It requires bursts of noise at least as long as 10 bits before the code will fail to correct the errors.
Reference: [8] <author> Symbolics Documentation. </author> <title> Networks and I/O. </title> , <month> February </month> <year> 1984. </year>
Reference-contexts: The reason for this is that if one were to acknowledge requests in both directions, both directions would need timeouts in case the ACKs get corrupted. Using symmetric acknowledgments is particularly complex <ref> [8] </ref>, while the consequences of asymmetric acknowledgments were not serious enough to justify the extra complexity. In fact, the reason why we did not use finer grain acknowledgments is that packet level acknowledgments require a symmetric acknowledgment scheme 17 .

References-found: 8

