URL: http://www-rfcc.cse.uconn.edu/www/Publications/Papers/McCartneyExecuting.ps
Refering-URL: http://www-rfcc.cse.uconn.edu/www/Cookie.html
Root-URL: 
Email: E-mail: robert@cse.uconn.edu wurst@cse.uconn.edu  
Title: EXECUTING CASE-BASED PLANS  
Author: Robert McCartney and Karl R. Wurst 
Address: Storrs, CT 06269-3155  
Affiliation: Department of Computer Science and Engineering University of Connecticut  
Abstract: In this paper we present the design and implementa tion of defarge, a real-time execution monitor designed to be part of an integrated case-based planning system. We discuss the role of such a monitor, its internal representation and control structure, and how this was implemented to be efficient enough for real time operation. 
Abstract-found: 1
Intro-found: 1
Reference: [Alterman, 1986] <author> Richard Alterman. </author> <title> An adaptive planner. </title> <booktitle> In Proceedings of the fifth national conference on artificial intelligence, </booktitle> <pages> pages 65-69, </pages> <address> Philadelphia, PA, </address> <month> August </month> <year> 1986. </year>
Reference-contexts: Although that work used simulated execution, it made clear the underlying assumptions of non-projection and the role of the execution record in learning. Alterman's adaptive planner <ref> [Alterman, 1986] </ref> discussed the use of execution-time repairs during plan execution based on experience. There is a good deal of recent work on integrating plan ning and execution, particularly as a response to uncertainty.
Reference: [Ambros-Ingerson and Steel, 1988] <author> Jose A. Ambros-Ingerson and Sam Steel. </author> <title> Integrating planning, execution, </title> <booktitle> and monitoring.. In Proceedings of the seventh national conference on artificial intelligence, </booktitle> <pages> pages 83-88, </pages> <address> Minneapolis, MN, </address> <month> August </month> <year> 1988. </year>
Reference-contexts: The ipem system <ref> [Ambros-Ingerson and Steel, 1988] </ref>, extends the hierarchical planning model to include monitoring and execution. Although the approach is more flexible than ours, its reliance on hierarchical planning bodes ill for its performance.
Reference: [Davis, 1990] <author> Ernest Davis. </author> <title> Representations of Com-monsense Knowledge. </title> <publisher> Morgan-Kauffmann Publishers, Inc., </publisher> <address> San Mateo, CA, </address> <year> 1990. </year>
Reference-contexts: The representation of plans and episodes is based on intervals of time <ref> [Davis, 1990] </ref>, such as some action being performed for a certain duration, or some fact holding over a certain interval.
Reference: [Firby, 1989] <author> R. James Firby. </author> <title> Adaptive execution in complex dynamic worlds.. </title> <type> PhD Thesis, </type> <institution> Department of Computer Science, Yale University, </institution> <year> 1989. </year>
Reference-contexts: Alterman's adaptive planner [Alterman, 1986] discussed the use of execution-time repairs during plan execution based on experience. There is a good deal of recent work on integrating plan ning and execution, particularly as a response to uncertainty. Firby's robot planner <ref> [Firby, 1989] </ref> employs an execution system that chooses how to implement tasks in the plan based on the state of the world at execution time; the choice mechanism is set at execu tion time in "reactive action packages." A similarity between this and our work is the way computational effort (generating
Reference: [Georgeff and Lansky, 1987] <author> Michael P Georgeff and Amy L. Lansky. </author> <title> Reactive reasoning and planning.. </title> <booktitle> In Proceedings of the sixth national conference on artificial intelligence, </booktitle> <pages> pages 677-682, </pages> <address> Seattle, WA, </address> <month> July </month> <year> 1987. </year>
Reference: [Hammond, 1989] <author> Kristian J. Hammond. </author> <title> Case-based planning: Viewing Planning as a memory task. </title> <booktitle> Perspectives in Artificial Intelligence Series, </booktitle> <publisher> Academic Press, </publisher> <address> San Diego, CA, </address> <year> 1989. </year>
Reference-contexts: This work is done after execution is complete, however, so could be done off-line as long as the appropriate information is available. 6 RELATED WORK The underlying model for integrated case-based planning and execution used here is modeled on chef <ref> [Hammond, 1989] </ref>. Although that work used simulated execution, it made clear the underlying assumptions of non-projection and the role of the execution record in learning. Alterman's adaptive planner [Alterman, 1986] discussed the use of execution-time repairs during plan execution based on experience.
Reference: [McCartney, 1990] <author> Robert McCartney. </author> <title> Reasoning directly from cases in a case-based planner. </title> <booktitle> In Proceedings of the 12th annual conference of the Cognitive Science Society, </booktitle> <pages> pages 101-108, </pages> <address> Cam-bridge, MA, </address> <month> July </month> <year> 1990. </year>
Reference-contexts: The system we present here, defarge, is designed to monitor executions as a part of the cookie system, a system that plans and prepares meals <ref> [McCartney, 1990] </ref>. Efficiency is of paramount concern: real-time operation is computationally demanding, especially if we want to support execution time plan repairs. <p> Detailed scheduling information is available as a side-effect of the detail inherent in case-based plans based on episodes <ref> [McCartney, 1990] </ref>|tasks are scheduled to occur at the same time in which they occurred in the original episode. In addition, we add the explicit temporal dependencies from the plan.
References-found: 7

