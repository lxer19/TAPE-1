URL: http://www.cs.princeton.edu/~liv/papers/icdcs94.ps
Refering-URL: http://www.cs.princeton.edu/~liv/papers/papers.html
Root-URL: http://www.cs.princeton.edu
Email: ramon@mitl.research.panasonic.com liv@cs.princeton.edu  
Title: The Effects of Mobility on Reliable Transport Protocols  
Author: Ramon Caceres Liviu Iftode 
Address: Way, Third Floor Princeton University Princeton, NJ 08540, USA Princeton, NJ 08544, USA  
Affiliation: Matsushita Information Technology Lab Department of Computer Science 2 Research  
Abstract: We explore the effects of host motion on the performance of active transport-level connections. Motion causes increased delays and packet losses while the network learns how to route data to a host's new location. Reliable transport protocols interpret these delays and losses as signs of network congestion. They consequently throttle their transmissions, further degrading performance. We quantify this degradation through measurements of protocol behavior in a wireless networking testbed. We show how current retransmission policies introduce unacceptably long pauses in communication (800 milliseconds and longer), and propose an end-to-end fast retransmission scheme that can reduce these pauses to levels more suitable for human interaction (200 milliseconds). Our work demonstrates that reliable transport protocols must be made aware of mobility, and suggests how to adapt these protocols to mobile computing environments. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Accetta, R. Baron, W. Bolosky, D. Golub, R. Rashid, A. Tevanian, and M. Young. </author> <title> Mach: A new kernel foundation for UNIX development. </title> <booktitle> Proc. of the USENIX 1986 Summer Conference, </booktitle> <month> July </month> <year> 1986. </year>
Reference-contexts: They run the 4.3BSD-Tahoe version of TCP from the University of California at Berkeley, Mobile IP software from Columbia University [6], and the Mach 3.0 micro-kernel and Unix server (MK77/UX37) from Carnegie Mellon University <ref> [1] </ref>. 2.1 Cellular handoff procedures Each MSS defines one cell and is responsible for the MHs in its cell. It acts as the default gateway for those MHs, routing packets that originate in an MH from the wireless to the wired part of the network.
Reference: [2] <author> B. R. Badrinath, A. Bakre, T. Imielinski, and R. Marantz. </author> <title> Handling mobile clients: A case for indirect interaction. </title> <booktitle> Proc. of IEEE WWOS-IV, </booktitle> <month> October </month> <year> 1993. </year>
Reference-contexts: It shows how waits for TCP's retransmission timeouts cause pauses in communication that last 0.8 seconds and longer after each cell crossing. Other researchers have called attention to the long pauses caused by TCP's exponential backoff policy <ref> [2, 6, 8] </ref>, but to our knowledge this is the first systematic treatment of this problem. This paper also describes how using TCP's fast retransmission mechanism can reduce these pauses to 0.2 seconds.
Reference: [3] <author> S. Deering and M. Weiser. </author> <title> Private communication. </title> <note> Xerox PARC, </note> <month> October </month> <year> 1993. </year>
Reference-contexts: When motion is mistaken for congestion, these procedures result in significant throughput losses and unacceptable interactive delays for active connections. The degradation is readily apparent, for example, to users of emerging ubiquitous computing environ-ments <ref> [3] </ref>. This paper quantifies the effects of motion on throughput and delay, identifies the factors that contribute to the loss of performance, and suggests an end-to-end approach for alleviating the problem.
Reference: [4] <author> A. DeSimone, M. C. Chuah, and O. C. Yue. </author> <title> Throughput performance of transport-layer protocols over wireless LANs. </title> <booktitle> In Proc. of Globecom '93, </booktitle> <month> December </month> <year> 1993. </year>
Reference-contexts: However, recent research shows that, under certain packet loss conditions, competing retransmission strategies in the link and transport layers can interact to reduce end-to-end throughput while increasing link utilization <ref> [4] </ref>. Alternative techniques such as selective retransmissions at the transport layer may prove more effective than link-layer retransmissions. Proc. of the 14th ICDCS, June, 1994 8 We wanted to isolate the effects of motion across cell boundaries from the effects of transmission errors.
Reference: [5] <author> D. Duchamp and N. F. Reynolds. </author> <title> Measured performance of a wireless LAN. </title> <booktitle> In Proc. of the 17th IEEE Conf. on Local Computer Networks, </booktitle> <month> September </month> <year> 1992. </year>
Reference-contexts: A separate measurement study found that WaveLAN exhibited excellent packet capture rates (over 99%) in an indoor environment <ref> [5] </ref>. However, in our environment, packet loss frequency varies widely even across short distances and depends on such factors as the positions of antennas in a room. Such problems are common in wireless communication because wireless media are vulnerable to ambient noise and multipath interference.
Reference: [6] <author> J. Ioannidis and G. Q. Maquire Jr. </author> <title> The design and implementation of a mobile internetworking architecture. </title> <booktitle> Proc. of the USENIX 1993 Winter Conference, </booktitle> <month> January </month> <year> 1993. </year>
Reference-contexts: It shows how waits for TCP's retransmission timeouts cause pauses in communication that last 0.8 seconds and longer after each cell crossing. Other researchers have called attention to the long pauses caused by TCP's exponential backoff policy <ref> [2, 6, 8] </ref>, but to our knowledge this is the first systematic treatment of this problem. This paper also describes how using TCP's fast retransmission mechanism can reduce these pauses to 0.2 seconds. <p> All hosts and support stations are IBM PC-compatible machines equipped with 50-MHz i486 processors, 330-Mbyte hard disks, 16 Mbytes of memory, and the necessary network interface hardware. They run the 4.3BSD-Tahoe version of TCP from the University of California at Berkeley, Mobile IP software from Columbia University <ref> [6] </ref>, and the Mach 3.0 micro-kernel and Unix server (MK77/UX37) from Carnegie Mellon University [1]. 2.1 Cellular handoff procedures Each MSS defines one cell and is responsible for the MHs in its cell. <p> Finally, the new MSS acknowledges the completion of the handoff to the MH. Further details of this protocol are found in <ref> [6] </ref>. 2.2 Methodology In our experiments, we initiate a reliable data transfer over a TCP connection between an MH and an SH, we cause the MH to cross cell boundaries while the connection is active, and we measure the performance of the connection.
Reference: [7] <author> V. Jacobson. </author> <title> Congestion avoidance and control. </title> <booktitle> Proc. of ACM SIGCOMM '88, </booktitle> <month> August </month> <year> 1988. </year>
Reference-contexts: If the current delay is longer than the average by more than twice the expected deviation, TCP assumes that the packet was lost. In response, TCP retransmits the lost packet and initiates congestion control procedures to give the network a chance to recover <ref> [7] </ref>. First, TCP drops the transmission window size to reduce the amount of data in transit through the network. Second, it activates the slow-start algorithm to restrict the rate at which the window grows to previous levels. <p> Proc. of the 14th ICDCS, June, 1994 5 3.4 Slow recovery As shown in Figure 4, the congestion window does not immediately return to its previous level after a cell crossing. Rather, it rises gradually once transport-level communication resumes. TCP's slow-start algorithm <ref> [7] </ref> is responsible for this behavior. The slow recovery after each handoff contributes to the loss of throughput discussed earlier, but only moderately. Our measurements show that the algorithm throttles transmissions for approximately 1 second after communication resumes.
Reference: [8] <author> A. Myles and D. Skellern. </author> <title> Comparison of mobile host protocols for IP. </title> <journal> Journal of Internetworking Research and Experience, </journal> <volume> 4(4), </volume> <month> December </month> <year> 1993. </year>
Reference-contexts: It shows how waits for TCP's retransmission timeouts cause pauses in communication that last 0.8 seconds and longer after each cell crossing. Other researchers have called attention to the long pauses caused by TCP's exponential backoff policy <ref> [2, 6, 8] </ref>, but to our knowledge this is the first systematic treatment of this problem. This paper also describes how using TCP's fast retransmission mechanism can reduce these pauses to 0.2 seconds.
Reference: [9] <author> J. Postel. </author> <title> Transmission control protocol. Request for Comments 793, </title> <year> 1981. </year>
Reference-contexts: They adapt to prevailing end-to-end delay conditions throughout the life of a connection, and interpret unexpected increases in delay as packet losses caused by congestion. In response to perceived losses, protocols like the Transmission Control Protocol (TCP) <ref> [9] </ref> aggressively slow their transmission to allow the network to recover. These congestion control policies have proven beneficial in improving the overall performance of networks like the Internet. The premise underlying these policies, that packet losses are largely due to congestion, is correct for existing networks.
Reference: [10] <author> J. H. Saltzer, D. P. Reed, and D. D. Clark. </author> <title> End-to-end arguments in system design. </title> <booktitle> Proc. of the 2nd International Conference on Distributed Computing Systems, </booktitle> <month> April </month> <year> 1981. </year>
Reference-contexts: Location information adds important functionality to distributed systems. It is therefore worthwhile to investigate ways to alleviate the effects of motion across non-overlapping cells. 4.1 Fast retransmissions An attractive end-to-end solution <ref> [10] </ref> is for the transport protocol to resume communication as soon Proc. of the 14th ICDCS, June, 1994 6 as handoffs complete, thereby avoiding the long waits for retransmission timeouts. Modern TCP implementations already perform similar fast retransmissions when a transmitter receives duplicate acknowledge-ments from a remote receiver.
Reference: [11] <author> B. Shneiderman. </author> <title> Designing the User Interface. </title> <publisher> Addison-Wesley, </publisher> <year> 1987. </year> <booktitle> Proc. of the 14th ICDCS, </booktitle> <month> June, </month> <year> 1994 </year> <month> 9 </month>
Reference-contexts: Studies of human factors indicate that people perceive interactive response to be "bad" if it takes longer than 100-200 milliseconds <ref> [11] </ref>. As discussed above and shown in Figures 3, 4, 5, and 6, transport-level communication comes to a halt for 800 milliseconds or longer after non-overlapping cell crossings. Furthermore, these pauses grow exponentially with growing rendezvous delays due to TCP's exponential retransmission backoff policy.
References-found: 11

