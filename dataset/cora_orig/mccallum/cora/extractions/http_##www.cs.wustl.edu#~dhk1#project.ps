URL: http://www.cs.wustl.edu/~dhk1/project.ps
Refering-URL: http://www.cs.wustl.edu/~dhk1/research.html
Root-URL: 
Title: Interpreting User Specification to Extract and Format Data Contained in HL7 Messages  
Author: David H. Kafrissen 
Date: May 31, 1996  
Abstract: HL7 (Health Level Seven) is a standard for electronic data exchange in healthcare environments. This standard can be viewed as syntax specification without semantics for a language. Since syntax and semantics are generally coupled in applications, individual medical institutions build their own implementations of the HL7 language to parse and format incoming HL7 messages. Our application allows users to specify actions to be performed on individual HL7 messages received from HL7 clients. This decouples interpretation of HL7 messages (i.e. semantics) from their parsing (i.e. syntax). This paper presents our approach to building this application and summarizes its success in actual use. There are two major divisions in this application. The first is the parser for the HL7 language. In building our parser we performed some formal transformations on the HL7 language by writing a grammar. Most, if not all applications that use the HL7 language written by individual medical institutions are ad hoc. The second is a small language (The TreeWalker Language) in which users can specify extraction and formation of data. This application was used on actual patient data supplied from Barnes and Jewish hospitals. The data was translated into SQL statements that was loaded into a database at the medical school named "Informatics Clinical Database."
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> Health Level Seven Inc., editor. </editor> <title> Health Level Seven An Application protocol for electronic data exchange in healthcare environments. Health Level Seven Inc., </title> <address> Chicago Illinios, </address> <year> 1990. </year> <month> 16 </month>
Reference-contexts: statements ')' | ATOM '(' statements ')' ; statements : statement | statements statement ; : '$' ATOM ; atom : ATOM '[' NUMBER ']' | ATOM ; tree_nav : atom | tree_nav '.' atom ; B Use of specification Language User specification print ( "We will add " AddExp.Number <ref> [1] </ref> " and " AddExp.Number [2] endl) The parse tree looks like input AddExp Number NUMBER&lt;123&gt; Plus PLUS&lt;&gt; Number NUMBER&lt;200&gt; The output is We will add 123 and 200 14 C An Example HL7 Message MSH|^~"&|RADIS1||DMCRES||1994050216163360||ORU^R01|1994050216163360|D|2.2 |964||AL|AL MSA|AA|msgCtrlId PID|||N00803||RADIOLOGY^INPATIENT^SIX||19520606|F||A||||||||003555|| PV1||I|N77^7714^01|||||||OB| OBR|1|003555.0015.001^DMCRES|0000000566^RADIS1|37953^CT CHEST^L| ||199405021545|||||||||||||0000763||||A999|P|||| ||R/O TUMOR|202300^BAKER^MARK^E|| |01^LOCHLEAR, JUDY| OBX||TX|FIND^FINDINGS^L|1|This is a test
References-found: 1

