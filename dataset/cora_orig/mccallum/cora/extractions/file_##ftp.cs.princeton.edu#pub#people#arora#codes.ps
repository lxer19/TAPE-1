URL: file://ftp.cs.princeton.edu/pub/people/arora/codes.ps
Refering-URL: http://www.cs.princeton.edu/~arora/publist.html
Root-URL: http://www.cs.princeton.edu
Title: Reductions, Codes, PCPs, and Inapproximability  
Author: Sanjeev Arora 
Affiliation: Princeton University  
Abstract: Many recent results show the hardness of approximating NP-hard functions. We formalize, in a very simple way, what these results involve: a code-like Levin reduction. Assuming a well-known complexity assumption, we show that such reductions cannot prove the NP-hardness of the following problems, where * is any positive fraction: (i) achieving an approximation ra tio n 1=2+* for Clique, (ii) achieving an approximation ratio 1:5 + * for Vertex Cover, and (iii) coloring a 3-colorable graph with O(log n) colors. In fact, we explain why current reductions cannot prove the NP-hardness of coloring 3-colorable graphs with 9 colors. Our formalization of a code-like reduction, together with our justification of why such reductions are natural, also clarifies why current proofs of inapproxima-bility results use error-correcting codes. 
Abstract-found: 1
Intro-found: 1
Reference: [AR88] <author> E. Allender and R. Rubinstein. </author> <title> P-printable sets. </title> <journal> SIAM J. Computing 17 </journal> <pages> 1193-1202. </pages> <year> 1988. </year>
Reference-contexts: Now we show that if the conjecture NP 6= few P is true, then this cannot always happen. Allender's class few P <ref> [AR88] </ref> contains every language that is accepted by an NP machine with at most polynomially many accepting branches. (This class is a generalization of Valiant's clas s UP [Val76], which contains every language that is accepted by an NP machine with at most one accepting branch.) It is conjectured that NP
Reference: [AFWZ93] <author> N. Alon, U. Feige, A. Wigderson, and D. Zuckerman. </author> <title> Derandomized graph products. </title> <type> Manuscript, </type> <year> 1993. </year>
Reference-contexts: Now use "randomized graph-products" [BS89]: Pick poly (n) random subsets S 1 ; S 2 ; : : : of vertices in f 0 ('), where each set is of size log n. (For convenience we describe the construction as randomized; it can be deran-domized <ref> [AFWZ93] </ref>.) Construct a graph f 00 (') with one vertex for each subset. Connect S i ; S j with an edge iff S i [S j is a clique in f 0 (').
Reference: [AL95] <author> S. Arora and C. Lund. </author> <title> Hardness of approximations. Survey chapter to appear in a book on Approximation Algorithms, </title> <address> D. Hochbaum, ed.. </address> <note> Available from the authors., </note> <year> 1995. </year>
Reference-contexts: In general, all transformations which involve graph products seem to preserve the code-like property; see Section 4.2.1. 4.2 Why are current reductions code like? Existing inapproximability results are code-like because they all follow 1 (see e.g., <ref> [AL95] </ref>) in a fairly simple way | sometimes using Raz's parallel repetition theorem [Raz94] | from the statement NP = PCP (log n; 1). And the only known proof of NP = PCP (log n; 1) has a "code-like" nature, as defined below.
Reference: [ALM + 92] <author> S. Arora, C. Lund, R. Motwani, M. Sudan, and M. Szegedy. </author> <title> Proof verification and intractability of approximation problems. </title> <booktitle> In Proc. 33rd IEEE FOCS, </booktitle> <pages> pp 13-22, </pages> <year> 1992. </year>
Reference-contexts: There has been great progress in nailing down the exact approximation ratio for which approximation becomes hard. For instance, in the case of Clique, this ratio has gone from 2 log 1ffi n to n 1=3+* in four years <ref> [FGL + 91, AS92, ALM + 92, BGLR93, FK94, BS94, BGS95] </ref>. Chromatic Number has seen simi lar progress [LY93b, KLS93, BS94, BGS95, F 94]. In the case of Set Cover, we now even know a threshold result. <p> By showing that code-like Levin reductions conform to standard intuitions about reductions, this paper also hopes to clarify the issue of why recent inapproximability results use error-correcting codes. Such codes play an important role in proving new probabilistic characterizations of NP, such as NP = PCP (log n; 1) <ref> [AS92, ALM + 92] </ref>, which underlie recent inapproximability results. No formal justification had earlier been given for why (or if) this coding-theoretic approach is a natural way to prove inapproximabil-ity results. <p> Then in Section 4.2.1 we illustrate, using Clique as an example, how this code-like nature then becomes part of other inapproximability results. The statement NP = PCP (log n; 1) is equivalent <ref> [ALM + 92] </ref> to the existence of a polynomial-time reduction f from SAT to MAX-3SAT that, for some fixed constant * &gt; 0, behaves as follows. ' 2 SAT ) MAX-3SAT (f (')) = 1 (Here MAX-3SAT (f (')) denotes the maximum fraction of clauses in ' that can be simultaneously
Reference: [AS92] <author> S. Arora and S. Safra. </author> <title> Probabilistic checking of proofs: A new characterization of NP. </title> <booktitle> In Proc. 33rd IEEE FOCS, </booktitle> <pages> pp 2-13, </pages> <year> 1992. </year>
Reference-contexts: There has been great progress in nailing down the exact approximation ratio for which approximation becomes hard. For instance, in the case of Clique, this ratio has gone from 2 log 1ffi n to n 1=3+* in four years <ref> [FGL + 91, AS92, ALM + 92, BGLR93, FK94, BS94, BGS95] </ref>. Chromatic Number has seen simi lar progress [LY93b, KLS93, BS94, BGS95, F 94]. In the case of Set Cover, we now even know a threshold result. <p> By showing that code-like Levin reductions conform to standard intuitions about reductions, this paper also hopes to clarify the issue of why recent inapproximability results use error-correcting codes. Such codes play an important role in proving new probabilistic characterizations of NP, such as NP = PCP (log n; 1) <ref> [AS92, ALM + 92] </ref>, which underlie recent inapproximability results. No formal justification had earlier been given for why (or if) this coding-theoretic approach is a natural way to prove inapproximabil-ity results.
Reference: [BFLS] <author> L. Babai and L. Fortnow and L. Levin and M. Szegedy. </author> <title> Checking Computations in Poly-logarithmic Time. </title> <booktitle> In STOC 1991, </booktitle> <pages> pp 21-31. </pages>
Reference: [BGLR93] <author> M. Bellare, S. Goldwasser, C. Lund, and A. Russell. </author> <title> Efficient multi-prover interactive proofs with applications to approximation problems. </title> <booktitle> In Proc. 25th ACM STOC, </booktitle> <pages> pp 113-131, </pages> <year> 1993. </year>
Reference-contexts: There has been great progress in nailing down the exact approximation ratio for which approximation becomes hard. For instance, in the case of Clique, this ratio has gone from 2 log 1ffi n to n 1=3+* in four years <ref> [FGL + 91, AS92, ALM + 92, BGLR93, FK94, BS94, BGS95] </ref>. Chromatic Number has seen simi lar progress [LY93b, KLS93, BS94, BGS95, F 94]. In the case of Set Cover, we now even know a threshold result. <p> Chromatic Number has seen simi lar progress [LY93b, KLS93, BS94, BGS95, F 94]. In the case of Set Cover, we now even know a threshold result. Feige [Fei95b], improving upon the work of <ref> [LY93b, BGLR93] </ref>, recently showed that achieving a ratio (1 *)ln n for Set Cover is hard for any fixed * &gt; 0, whereas a well-known polynomial-time algorithm ([Joh74, Lov75]) achieves a ratio 1 + ln n.
Reference: [BGS95] <author> M. Bellare, O. Goldreich, and M. </author> <title> Sudan. </title> <booktitle> These proceedings. </booktitle>
Reference-contexts: There has been great progress in nailing down the exact approximation ratio for which approximation becomes hard. For instance, in the case of Clique, this ratio has gone from 2 log 1ffi n to n 1=3+* in four years <ref> [FGL + 91, AS92, ALM + 92, BGLR93, FK94, BS94, BGS95] </ref>. Chromatic Number has seen simi lar progress [LY93b, KLS93, BS94, BGS95, F 94]. In the case of Set Cover, we now even know a threshold result. <p> For instance, in the case of Clique, this ratio has gone from 2 log 1ffi n to n 1=3+* in four years [FGL + 91, AS92, ALM + 92, BGLR93, FK94, BS94, BGS95]. Chromatic Number has seen simi lar progress <ref> [LY93b, KLS93, BS94, BGS95, F 94] </ref>. In the case of Set Cover, we now even know a threshold result. <p> We provide the following justification: in Problem Performance of best Best Hardness Limits of Code-like poly-time algorithm Result Reductions (this paper) Clique O (n= log 2 n)[BH92] n 1=3* <ref> [BGS95] </ref> n 1=2+* Chromatic Number O (n= log 3 n) [BH92] n 1=5* [F 94] n 1=2+* Coloring 3-color- Uses O (n 0:25 ) 5 colors Cannot prove O (log n) able graphs colors [KMS94] required colors are required Vertex Cover 2 o (1) [Hoc82] 1:01 ([PY91, BGS95]) 1:5 + * <p> The last column shows hardness results that are beyond the reach of current techniques (as shown in this paper). approximability results use codes to make reductions code-like. Comparison with related work. We summarise here the work of Bellare, Goldreich and Sudan <ref> [BGS95] </ref>, specifically, the part in which they study the inherent limitations of current techniques in the context of Clique. They describe their work in terms of free bits, but we state it in in the graph-theoretic language of this paper (the two terminologies are equivalent; see Section 4.1). <p> This parameter was first defined in [FK94], and then refined in <ref> [BS94, BGS95] </ref>. Reducing the parameter to a real number b is equivalent to giving a sequence of reductions from SAT to the promise problem RCLIQUE (b; *), one for every * &gt; 0. <p> The other side is an easy subcase of a more general transformation in <ref> [BGS95] </ref>.) Definition 4 For b; * &gt; 0, the RCLIQUE (b; *) problem is a subcase of the clique problem defined by the following conditions on the input: (i) the graph has K 1+b+* vertices for some K. (ii) the vertices can be partitioned into N = K 1+* disjoint independent <p> has K 1+b+* vertices for some K. (ii) the vertices can be partitioned into N = K 1+* disjoint independent sets of size K b , and this partition is given with the input. (iii) The clique number is guaranteed to be either ex actly N or &lt; N=K. (Note: <ref> [BGS95] </ref> define a variant of RCLIQUE in which the clique number in the first case is N (1 1=K) instead of N . <p> Lastly, to justify our choice for the term "code-like reduction," we show | heavily using the main result of <ref> [BGS95] </ref> | that every code-like Levin reduction to Clique (and not just reductions that involve the free bit parameter) can be viewed as giving rise to graphs in which a large set of cliques form an error-correcting code. <p> Proposition 8 Any code-like Levin reduction that proves the hardness of approximating Clique within a factor n 1 1+b can be turned into a code-like Levin (probabilistic) reduction to RCLIQUE (b *; *) for every * &gt; 0. The proof of the proposition involves using the <ref> [BGS95] </ref> transformation, and observing that it preserves the code-like property. <p> PCP (log n; 1) just as a "black box" does not lead to the best possible inapproximability result for problems such as Clique, only to a result in the "right ballpark." Proving the best result has involved looking at the proof of NP = PCP (log n; 1); see e.g. <ref> [BS94, BGS95] </ref>. 4.2.1 The Clique Reduction Now we explain how to prove the inapproximability result for Clique, focussing upon how the code-like nature transfers from the MAX-3SAT reduction into the code-like of the Clique reduction.
Reference: [BH92] <author> R. Boppana and M. Halldorsson. </author> <title> Approximating maximum independent sets by excluding subgraphs. </title> <journal> BIT, </journal> <volume> 32 </volume> <pages> 180-196, </pages> <year> 1992. </year>
Reference-contexts: We provide the following justification: in Problem Performance of best Best Hardness Limits of Code-like poly-time algorithm Result Reductions (this paper) Clique O (n= log 2 n)<ref> [BH92] </ref> n 1=3* [BGS95] n 1=2+* Chromatic Number O (n= log 3 n) [BH92] n 1=5* [F 94] n 1=2+* Coloring 3-color- Uses O (n 0:25 ) 5 colors Cannot prove O (log n) able graphs colors [KMS94] required colors are required Vertex Cover 2 o (1) [Hoc82] 1:01 ([PY91, BGS95]) 1:5 + * Table 1: Summary of known approximation properties of some well-known
Reference: [Blu91] <author> A. L. Blum. </author> <title> Algorithms for approximate graph coloring. </title> <type> PhD thesis, </type> <institution> MIT, </institution> <year> 1991. </year>
Reference-contexts: To motivate this result, we recall a folk-theorem (cf. <ref> [Blu91] </ref>): Any reduction that shows the hardness of coloring a K-colorable graph with K 2 log n colors also shows the hardness of finding, in a graph with ff n=K, an independent set of size n=K 2 .
Reference: [BS89] <author> P. Berman and G. Schnitger. </author> <title> On the complexity of approximating the independent set problem. </title> <booktitle> In Proceedings of 7th STACS, </booktitle> <pages> pp 256-267. </pages> <note> LNCS 349, </note> <year> 1989. </year>
Reference-contexts: Further, if f was a code-like reduction to MAX-3SAT, then f 0 is a code-like reduction to Clique: cliques of size l that correspond to different satisfying assignments of ' intersect in fewer than l (1 *) vertices. Now use "randomized graph-products" <ref> [BS89] </ref>: Pick poly (n) random subsets S 1 ; S 2 ; : : : of vertices in f 0 ('), where each set is of size log n. (For convenience we describe the construction as randomized; it can be deran-domized [AFWZ93].) Construct a graph f 00 (') with one vertex
Reference: [BS94] <author> M. Bellare and M. Sudan. </author> <title> Improved non-approximability results. </title> <booktitle> In Proc. 26th ACM STOC, </booktitle> <pages> pp 184-193, </pages> <year> 1994. </year>
Reference-contexts: There has been great progress in nailing down the exact approximation ratio for which approximation becomes hard. For instance, in the case of Clique, this ratio has gone from 2 log 1ffi n to n 1=3+* in four years <ref> [FGL + 91, AS92, ALM + 92, BGLR93, FK94, BS94, BGS95] </ref>. Chromatic Number has seen simi lar progress [LY93b, KLS93, BS94, BGS95, F 94]. In the case of Set Cover, we now even know a threshold result. <p> For instance, in the case of Clique, this ratio has gone from 2 log 1ffi n to n 1=3+* in four years [FGL + 91, AS92, ALM + 92, BGLR93, FK94, BS94, BGS95]. Chromatic Number has seen simi lar progress <ref> [LY93b, KLS93, BS94, BGS95, F 94] </ref>. In the case of Set Cover, we now even know a threshold result. <p> This parameter was first defined in [FK94], and then refined in <ref> [BS94, BGS95] </ref>. Reducing the parameter to a real number b is equivalent to giving a sequence of reductions from SAT to the promise problem RCLIQUE (b; *), one for every * &gt; 0. <p> PCP (log n; 1) just as a "black box" does not lead to the best possible inapproximability result for problems such as Clique, only to a result in the "right ballpark." Proving the best result has involved looking at the proof of NP = PCP (log n; 1); see e.g. <ref> [BS94, BGS95] </ref>. 4.2.1 The Clique Reduction Now we explain how to prove the inapproximability result for Clique, focussing upon how the code-like nature transfers from the MAX-3SAT reduction into the code-like of the Clique reduction.
Reference: [Bus86] <author> S. Buss. </author> <title> Bounded Arithmetic. </title> <type> bibliopolis, </type> <institution> Napoli, </institution> <year> 1986. </year>
Reference: [Coo71] <author> S. Cook. </author> <title> The complexity of theorem-proving procedures. </title> <booktitle> In Proc. 3rd ACM STOC, </booktitle> <pages> pp 151-158, </pages> <year> 1971. </year>
Reference: [CRS93] <author> S. Chari, P. Rohatgi, and A. Srinivasan. </author> <title> Randomness-optimal unique element isolation, with applications to perfect matching and related problems. </title> <booktitle> In Proc. 25th ACM STOC, </booktitle> <pages> pp 458 -467, </pages> <year> 1993. </year>
Reference: [F 94] <author> M. Furer. </author> <title> Improved hardness results for approximating the chromatic number. </title> <type> Manuscript, </type> <month> August </month> <year> 1994, 1994. </year>
Reference-contexts: For instance, in the case of Clique, this ratio has gone from 2 log 1ffi n to n 1=3+* in four years [FGL + 91, AS92, ALM + 92, BGLR93, FK94, BS94, BGS95]. Chromatic Number has seen simi lar progress <ref> [LY93b, KLS93, BS94, BGS95, F 94] </ref>. In the case of Set Cover, we now even know a threshold result. <p> We provide the following justification: in Problem Performance of best Best Hardness Limits of Code-like poly-time algorithm Result Reductions (this paper) Clique O (n= log 2 n)[BH92] n 1=3* [BGS95] n 1=2+* Chromatic Number O (n= log 3 n) [BH92] n 1=5* <ref> [F 94] </ref> n 1=2+* Coloring 3-color- Uses O (n 0:25 ) 5 colors Cannot prove O (log n) able graphs colors [KMS94] required colors are required Vertex Cover 2 o (1) [Hoc82] 1:01 ([PY91, BGS95]) 1:5 + * Table 1: Summary of known approximation properties of some well-known problems. <p> The reason is <ref> [LY93b, KLS93, F 94] </ref> that they are actually reductions to independent set (to which Theorem 6 also applies). They use the following fact: If (G); ff (G) denote, respectively, the chromatic number and independent set number of graph G, then (G) jV (G)j=ff (G).
Reference: [Fei95a] <author> U. Feige. </author> <title> Randomized graph products and the Lovasz theta function. </title> <booktitle> In Proc. 27th ACM STOC, </booktitle> <year> 1995. </year> <note> to appear. </note>
Reference-contexts: Research supported by NSF CAREER award CCR-9502747. algorithmic result for Clique | to achieve, say, a ratio n 1* for some fixed * &gt; 0 | were recently dashed by the results in <ref> [Fei95a] </ref>, which show that the Lovasz function does not help in this task.) As Table 1 shows, a similar gap between algorithmic results and hardness results exists for Vertex Cover and Chromatic Number. (Further, most MAX-SNP hard problems [PY91] display a gap similar to Vertex Cover's.) But given the ingeniousness of
Reference: [Fei95b] <author> U. Feige. </author> <title> Set cover has a theshold at ln n. </title> <type> Unpublished Manuscript, </type> <year> 1995. </year>
Reference-contexts: Chromatic Number has seen simi lar progress [LY93b, KLS93, BS94, BGS95, F 94]. In the case of Set Cover, we now even know a threshold result. Feige <ref> [Fei95b] </ref>, improving upon the work of [LY93b, BGLR93], recently showed that achieving a ratio (1 *)ln n for Set Cover is hard for any fixed * &gt; 0, whereas a well-known polynomial-time algorithm ([Joh74, Lov75]) achieves a ratio 1 + ln n.
Reference: [FGL + 91] <author> U. Feige, S. Goldwasser, L. Lovasz, S. Safra, and M. Szegedy. </author> <title> Approximating clique is almost NP-complete. </title> <booktitle> In Proc. 32nd IEEE FOCS, </booktitle> <pages> pp 2-12, </pages> <year> 1991. </year>
Reference-contexts: There has been great progress in nailing down the exact approximation ratio for which approximation becomes hard. For instance, in the case of Clique, this ratio has gone from 2 log 1ffi n to n 1=3+* in four years <ref> [FGL + 91, AS92, ALM + 92, BGLR93, FK94, BS94, BGS95] </ref>. Chromatic Number has seen simi lar progress [LY93b, KLS93, BS94, BGS95, F 94]. In the case of Set Cover, we now even know a threshold result. <p> The problem RCLIQUE (b; *) is defined next. (Note that one side of the equivalence between free bits and reductions to RCLIQUE follows from the definition of free bits and a now-standard reduction in <ref> [FGL + 91] </ref>.
Reference: [FK94] <author> U. Feige and J. Kilian. </author> <title> Two prover protocols-low error at affordable rates. </title> <booktitle> In Proc. 26th ACM STOC, </booktitle> <pages> pp 172-183, </pages> <year> 1994. </year>
Reference-contexts: There has been great progress in nailing down the exact approximation ratio for which approximation becomes hard. For instance, in the case of Clique, this ratio has gone from 2 log 1ffi n to n 1=3+* in four years <ref> [FGL + 91, AS92, ALM + 92, BGLR93, FK94, BS94, BGS95] </ref>. Chromatic Number has seen simi lar progress [LY93b, KLS93, BS94, BGS95, F 94]. In the case of Set Cover, we now even know a threshold result. <p> This parameter was first defined in <ref> [FK94] </ref>, and then refined in [BS94, BGS95]. Reducing the parameter to a real number b is equivalent to giving a sequence of reductions from SAT to the promise problem RCLIQUE (b; *), one for every * &gt; 0.
Reference: [GJ79] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability: a guide to the theory of NP-completeness. </title> <editor> W. H. </editor> <publisher> Freeman, </publisher> <year> 1979. </year>
Reference-contexts: The gap produced by the reduction, denoted fi, is the ratio K=K 0 (measured as a function of the size of the new instance f (')). Do reductions need to be Levin? Certainly, all those in <ref> [GJ79] </ref> are, as are all those used in recent inapprox-imability results. Typically, the Levin-ness is never demonstrated explicitly, but falls out of the proof of the reduction's correctness. <p> For simplicity, we only describe how to prove the hardness of approx imating clique number within a factor n ffi for some fixed ffi &gt; 0. Let f (') be the instance of MAX-3SAT obtained from the reduction in Equation 2. Reduce it to clique using the idea in <ref> [GJ79] </ref>: Produce a graph f 0 (') containing a vertex for each literal appearing in f ('). Connect every pair of vertices with an edge, unless if they "contradict" each other (i.e., they represent some variable x i and its negation x i ), or belong to the same clause.
Reference: [Hoc82] <author> D. Hochbaum. </author> <title> Approximation algorithms for set covering and vertex cover problems. </title> <journal> SIAM Journal of Computing, </journal> <volume> 11 </volume> <pages> 555-556, </pages> <year> 1982. </year>
Reference-contexts: (n= log 2 n)[BH92] n 1=3* [BGS95] n 1=2+* Chromatic Number O (n= log 3 n) [BH92] n 1=5* [F 94] n 1=2+* Coloring 3-color- Uses O (n 0:25 ) 5 colors Cannot prove O (log n) able graphs colors [KMS94] required colors are required Vertex Cover 2 o (1) <ref> [Hoc82] </ref> 1:01 ([PY91, BGS95]) 1:5 + * Table 1: Summary of known approximation properties of some well-known problems. The last column shows hardness results that are beyond the reach of current techniques (as shown in this paper). approximability results use codes to make reductions code-like. Comparison with related work.
Reference: [Joh74] <author> D. S. Johnson. </author> <title> Approximation algorithms for combinatorial problems. </title> <journal> JCSS, </journal> <volume> 9 </volume> <pages> 256-278, </pages> <year> 1974. </year>
Reference: [Kar72] <author> R. M. Karp. </author> <title> Reducibility among combinatorial problems. </title> <editor> In Miller and Thatcher, editors, </editor> <booktitle> Complexity of Computer Computations, </booktitle> <pages> pp 85-103. </pages> <publisher> Plenum Press, </publisher> <year> 1972. </year>
Reference: [KLS93] <author> S. Khanna, N. Linial, and S. Safra. </author> <title> On the hardness of approximating the chromatic number. </title> <booktitle> In Proc. 2nd ISTCS, </booktitle> <pages> pp 250-260. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1993. </year>
Reference-contexts: For instance, in the case of Clique, this ratio has gone from 2 log 1ffi n to n 1=3+* in four years [FGL + 91, AS92, ALM + 92, BGLR93, FK94, BS94, BGS95]. Chromatic Number has seen simi lar progress <ref> [LY93b, KLS93, BS94, BGS95, F 94] </ref>. In the case of Set Cover, we now even know a threshold result. <p> The reason is <ref> [LY93b, KLS93, F 94] </ref> that they are actually reductions to independent set (to which Theorem 6 also applies). They use the following fact: If (G); ff (G) denote, respectively, the chromatic number and independent set number of graph G, then (G) jV (G)j=ff (G).
Reference: [KMS94] <author> D. Karger, R. Motwani, and M. Sudan. </author> <title> Graph coloring through semi-definite programming. </title> <booktitle> In Proc. 35th IEEE FOCS, </booktitle> <year> 1994. </year>
Reference-contexts: of Code-like poly-time algorithm Result Reductions (this paper) Clique O (n= log 2 n)[BH92] n 1=3* [BGS95] n 1=2+* Chromatic Number O (n= log 3 n) [BH92] n 1=5* [F 94] n 1=2+* Coloring 3-color- Uses O (n 0:25 ) 5 colors Cannot prove O (log n) able graphs colors <ref> [KMS94] </ref> required colors are required Vertex Cover 2 o (1) [Hoc82] 1:01 ([PY91, BGS95]) 1:5 + * Table 1: Summary of known approximation properties of some well-known problems.
Reference: [Lev73] <author> L. Levin. </author> <title> Universal'nye perebornye zadachi (universal search problems : in Russian). </title> <journal> Problemy Peredachi Informatsii, </journal> <volume> 9(3) </volume> <pages> 265-266, </pages> <year> 1973. </year> <title> See also the appendix of "A survey of Russian approaches to Perebor (Brute force Search) Algorithms," </title> <editor> by B. A. Trakhtenbrot, </editor> <booktitle> Annals of the History of Computing: </booktitle> <address> 6:4 384-400, </address> <year> 1984. </year>
Reference-contexts: But in actual practice, the proof of the reduction's correctness ends up doing more: it defines a polynomial-time map from witnesses to witnesses. We call reductions with such associated maps Levin reductions, since they were first explicitly defined in <ref> [Lev73] </ref>. (In Section 7.1 of the appendix we give a formal reason why known reductions are Levin.) In fact, in all known reductions the forward map from witnesses to witnesses is injective: different wit nesses map to different witnesses.
Reference: [Lov75] <author> L. Lovasz. </author> <title> On the ratio of optimal integral and fractional covers. </title> <journal> Discrete Math, </journal> <volume> 13 </volume> <pages> 383-390, </pages> <year> 1975. </year>
Reference: [LY93a] <author> C. Lund and M. Yannakakis. </author> <title> The approxima tion of maximum subgraph problems. </title> <booktitle> In Proc. ICALP, </booktitle> <pages> pp 40-51, </pages> <year> 1993. </year>
Reference-contexts: The impossibility result for Clique also extends | although we don't discuss it in this abstract | with almost no modification to maximum subgraph problems discussed in <ref> [LY93a] </ref>. We suspect that it will extend to many other problems. On the other hand, there are problems for which code-like reductions suffice to prove threshold results. For instance, Feige's result on Set-Cover uses such reductions.
Reference: [LY93b] <author> C. Lund and M. Yannakakis. </author> <title> On the hardness of approximating minimization problems. </title> <booktitle> In Proc. 25th ACM STOC, </booktitle> <pages> pp 286-293, </pages> <year> 1993. </year>
Reference-contexts: For instance, in the case of Clique, this ratio has gone from 2 log 1ffi n to n 1=3+* in four years [FGL + 91, AS92, ALM + 92, BGLR93, FK94, BS94, BGS95]. Chromatic Number has seen simi lar progress <ref> [LY93b, KLS93, BS94, BGS95, F 94] </ref>. In the case of Set Cover, we now even know a threshold result. <p> Chromatic Number has seen simi lar progress [LY93b, KLS93, BS94, BGS95, F 94]. In the case of Set Cover, we now even know a threshold result. Feige [Fei95b], improving upon the work of <ref> [LY93b, BGLR93] </ref>, recently showed that achieving a ratio (1 *)ln n for Set Cover is hard for any fixed * &gt; 0, whereas a well-known polynomial-time algorithm ([Joh74, Lov75]) achieves a ratio 1 + ln n. <p> The reason is <ref> [LY93b, KLS93, F 94] </ref> that they are actually reductions to independent set (to which Theorem 6 also applies). They use the following fact: If (G); ff (G) denote, respectively, the chromatic number and independent set number of graph G, then (G) jV (G)j=ff (G).
Reference: [MVV87] <author> K. Mulmuley, U. V. Vazirani, and V. V. Vazi rani. </author> <title> Matching is as easy as matrix inversion. </title> <journal> Combinatorica, </journal> <volume> 7(1) </volume> <pages> 105-113, </pages> <year> 1987. </year>
Reference: [PY91] <author> C. Papadimitriou and M. Yannakakis. </author> <title> Op timization, approximation and complexity classes. </title> <journal> JCSS, </journal> <volume> 43 </volume> <pages> 425-440, </pages> <year> 1991. </year> <note> Preliminary Version in Proc. ACM STOC, </note> <year> 1988. </year>
Reference-contexts: fixed * &gt; 0 | were recently dashed by the results in [Fei95a], which show that the Lovasz function does not help in this task.) As Table 1 shows, a similar gap between algorithmic results and hardness results exists for Vertex Cover and Chromatic Number. (Further, most MAX-SNP hard problems <ref> [PY91] </ref> display a gap similar to Vertex Cover's.) But given the ingeniousness of the constructions used already in the hardness results, there might seem no a priori reason why further improvements could not lead to threshold results for these problems, particularly in view of Feige's threshold result for Set Cover. <p> Notes: (i) The reader can check (reasoning along the lines of Example 1) that such reductions are quite "natural." (ii) The "code-like" has a more intuitive restatement once we transform the 3CNF formula <ref> [PY91] </ref> such that every variable occurs exactly 5 times. Then there is some * 0 &gt; 0 such that h (s 1 ) and h (s 2 ) differ in * 0 fraction of the variables.
Reference: [Raz] <author> R. </author> <title> Raz. </title> <type> personal communication. </type>
Reference: [Razb] <author> A. A. Razborov. </author> <type> personal communication. </type>
Reference: [Raz94] <author> R. Raz. </author> <title> A parallel repetition theorem. </title> <booktitle> Proc. ACM STOC 1995pp </booktitle>
Reference-contexts: In general, all transformations which involve graph products seem to preserve the code-like property; see Section 4.2.1. 4.2 Why are current reductions code like? Existing inapproximability results are code-like because they all follow 1 (see e.g., [AL95]) in a fairly simple way | sometimes using Raz's parallel repetition theorem <ref> [Raz94] </ref> | from the statement NP = PCP (log n; 1). And the only known proof of NP = PCP (log n; 1) has a "code-like" nature, as defined below.
Reference: [R90] <author> J. Rompel. </author> <title> One-way functions are Necessary and Sufficient for Secure Signatures. </title> <booktitle> Proc. ACM STOC 1990, </booktitle> <pages> pp 387-394. </pages>
Reference-contexts: Witness intractable functions exist if one-way functions exist. The reason is that one-way functions can be used to construct signature schemes secure against chosen plaintext attack <ref> [R90] </ref>. For such a signature scheme and a public key k, let p n be the polynomial-time algorithm that verifies, given x, whether it is a message that has been signed using key k. By defini tion of the signature scheme, p n is witness intractable.
Reference: [Val76] <author> L. G. Valiant. </author> <title> Relative complexity of checking and evaluating. </title> <journal> IPL, </journal> <volume> 5 </volume> <pages> 20-23, </pages> <year> 1976. </year>
Reference-contexts: Allender's class few P [AR88] contains every language that is accepted by an NP machine with at most polynomially many accepting branches. (This class is a generalization of Valiant's clas s UP <ref> [Val76] </ref>, which contains every language that is accepted by an NP machine with at most one accepting branch.) It is conjectured that NP 6= f ewP. Notice, P f ewP, so NP 6= fewP ) P 6= NP.
Reference: [vL91] <author> J. H. van Lint. </author> <title> Introduction to Coding Theory, 2nd Ed., Chapter 5. </title> <publisher> Springer Verlag, </publisher> <address> Heidel berg, </address> <year> 1991. </year>
Reference: [VV86] <author> L. G. Valiant and V. V. Vazirani. </author> <title> NP is as easy as detecting unique solutions. </title> <journal> TCS, </journal> <volume> 47 </volume> <pages> 85-93, </pages> <year> 1986. </year>
Reference-contexts: The witness intractability of p implies that g (h (s)) = s. 2 2.2 Relevance of NP 6= f ewP Recall from Definition 1 that the forward witness transformation h is allowed to be a partial map. (Such a map occurs for example in the well-known Valiant-Vazirani reduction <ref> [VV86] </ref>.) Thus h could conceivably be defined only on very few (say, polynomially many) satisfying assignments. Now we show that if the conjecture NP 6= few P is true, then this cannot always happen. <p> with ! n * , maps uniquely satisfiable formulae (i.e. those with a unique satisfying assignment) to graphs with ! n 1* , and all other satisfiable formulae to graphs with n * &lt; ! &lt; n 1* . (ii) Given any boolean formula, map it using the Valiant-Vazirani reduction <ref> [VV86] </ref> to another boolean formula, and then use reduction f 1 to map it to clique. By the known property of the [VV86] reduction, the composite reduction always maps unsatisfiable formulae to graphs with ! n * . <p> , and all other satisfiable formulae to graphs with n * &lt; ! &lt; n 1* . (ii) Given any boolean formula, map it using the Valiant-Vazirani reduction <ref> [VV86] </ref> to another boolean formula, and then use reduction f 1 to map it to clique. By the known property of the [VV86] reduction, the composite reduction always maps unsatisfiable formulae to graphs with ! n * . But given a satisfiable formula, with probability 1=n it produces a graph with ! n 1* .
References-found: 39

