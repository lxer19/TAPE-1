URL: http://www.cs.umn.edu/Users/dept/users/siva/Papers/PS/networks_94.ps
Refering-URL: http://www.cs.umn.edu/Users/dept/users/siva/Papers/PS/
Root-URL: http://www.cs.umn.edu
Title: Experimental Evaluation of a Partitioning Algorithm for the Steiner Tree Problem in R 2 and
Author: Sivakumar Ravada and Alan T. Sherman 
Keyword: Approximation algorithms, combinatorial optimization, distributed algorithms, Eu clidean Steiner minimum tree problem (ESMT), experimental evaluation of algorithms, geometric Steiner minimum tree problem (GSMT), graph algorithms, partitioning algorithms, post-processing heuristics.  
Note: TR CS-93-12  
Date: June 23, 1993  
Address: Baltimore, Maryland 21228-5398  
Affiliation: Computer Science Department University of Maryland Baltimore County  
Abstract: We experimentally evaluate sequential and distributed implementations of an approximation partitioning algorithm by Kalpakis and Sherman for the Geometric Steiner Minimum Tree Problem (GSMT) in R d for d = 2; 3. Our implementations incorporate an improved method for combining the subproblems, and single and double edge-reduction techniques to eliminate unnecessary Steiner points created by the partitioning process. Results show that these refinements are crucial in practice to produce high-quality results. Moreover, with these refinements, the partitioning algorithm is an effective practical heuristic, which in less time finds solutions roughly comparable with those computed by Smith's Algorithm. The partitioning algorithm depends on a parameter t through which the user can trade off time for solution quality. To solve each of the subproblems of size at most t, we apply Smith's Algorithm, the only other Steiner tree algorithm known for R 3 under the Euclidean norm. Using uniformly generated point sets in the d-cube [0; 100] d , we compare the running time and solution quality for the partitioning algorithm for various values of t against that of Smith's Algorithm applied to the entire input. We also estimate the constant factor in the 1 + O(t 1=d(d1) ) asymptotic performance bound proven by Kalpakis and Sherman and find that it is less than one. With d = 2 on input sets of 25 points, our sequential implementation with t = 7 typically found within 6 seconds a Steiner tree within 1% of the cost (342) of that computed by Smith's Algorithm in 20 seconds. At t = 13 and using approximately 15 seconds, our sequential implementation typically found Steiner trees within 0.1% of this cost. Similarly, with d = 3 on input sets of 60 points, our distributed implementation with t = 10 typically found within 22 seconds a Steiner tree within 1% of the cost (1059) of that computed by Smith's Algorithm in 200 seconds. At t = 31 and using approximately 108 seconds, our distributed implementation usually found slightly better Steiner trees than did Smith's Algorithm.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Balakrishnan and N. R. Patel. </author> <title> Problem reduction methods and a tree generation algorithm for the Steiner network problem. </title> <journal> Networks, </journal> <volume> 17 </volume> <pages> 65-85, </pages> <year> 1987. </year>
Reference-contexts: Kalpakis and Sherman recommend that Algorithm 1 be refined by incorporating post-processing heuristics described by Balakrishnan and Patel <ref> [1] </ref> and by using an improved method for combining the subproblems. We implement both of these refinements, including single and double edge reduction post-processing heuristics. We call the resulting algorithm Algorithm 2. <p> Thus, using Prim's algorithm, the time to carry out Step 3 in Algorithm 2 increases from O (n lg n) to O (n 2 ). Edge-Reduction Heuristics In Step 4 we implement the following two edge-reduction heuristics described by Balakrishnan and Patel <ref> [1] </ref>. Each of these heuristics performs a local optimization of T AP R in linear time in the number of edges in T AP R . 1. Single edge reduction.
Reference: [2] <author> W. M. Boyce. </author> <title> An improved program for the full Steiner tree problem. </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> 3(4) </volume> <pages> 359-385, </pages> <month> December </month> <year> 1977. </year>
Reference-contexts: All three of these algorithms stem from an idea by Melzak [8]. Additional exact ESMT algorithms have been proposed in 1977 by Boyce <ref> [2] </ref>, and in 1990 by Trietsch and Hwang [11].
Reference: [3] <author> E. J. Cockayne and D. E. Hewgill. </author> <title> Improved computation of plane Steiner minimal trees. </title> <journal> Algo-rithmica, </journal> 7(2/3):219-229, 1992. 
Reference-contexts: For example, in 1972 Cockayne and Schiller [4] reported experiments using an exact ESMT algorithm on up to n 10 terminals. Experiments with other exact ESMT algorithms have been reported in 1985 by Winter [12] with n 15, and in 1992 by Cockayne and Hewgill <ref> [3] </ref> with n 30. All three of these algorithms stem from an idea by Melzak [8]. Additional exact ESMT algorithms have been proposed in 1977 by Boyce [2], and in 1990 by Trietsch and Hwang [11].
Reference: [4] <author> E. J. Cockayne and D. G. Schiller. </author> <title> Computation of Steiner minimal trees. </title> <editor> In Welsh and Woddall, editors, </editor> <booktitle> Combinatorics, </booktitle> <pages> pages 53-71. </pages> <institution> Inst. Math. Appl., </institution> <year> 1972. </year>
Reference-contexts: All other implementations of GSMT algorithms for the Euclidean norm of which we are aware provide solutions only to the ESMT problem|GSMT restricted to R 2 under the Euclidean norm. For example, in 1972 Cockayne and Schiller <ref> [4] </ref> reported experiments using an exact ESMT algorithm on up to n 10 terminals. Experiments with other exact ESMT algorithms have been reported in 1985 by Winter [12] with n 15, and in 1992 by Cockayne and Hewgill [3] with n 30.
Reference: [5] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> MIT Press and McGraw Hill, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1990. </year>
Reference-contexts: To control the running time of Algorithms 1 and 2, for each subproblem in Step 2, we terminate Smith's algorithm after a specified amount of time, as given by a control parameter t . To compute minimum spanning trees, for simplicity we use Prim's algorithm <ref> [5] </ref>, implementing the underlying priority queue as a binary heap in Algorithm 1 and as a linear array in Algorithm 2. 1 Throughout let lg = log 2 .
Reference: [6] <author> K. Kalpakis and A. T. Sherman. </author> <title> Probabilistic analysis of an enhanced partitioning algorithm for the Steiner tree problem in R d , July 1992 (revised May 1993). </title> <note> Submitted to Networks. [Preliminary versions appear as Technical Report CS-TR-2936/UMIACS-TR-92-83, </note> <institution> University of Maryland College Park, </institution> <note> July 1992; and as Technical Report TR CS-92-10, </note> <institution> Computer Science Department, University of Maryland Baltimore County, </institution> <month> July </month> <year> 1992.] </year>
Reference-contexts: 1 Introduction Kalpakis and Sherman <ref> [6, 7] </ref> present and probabilistically analyze a deterministic partitioning approximation algorithm for the Steiner minimum tree problem in R d for any dimension d 2. <p> refinement, the time to compute a minimum spanning tree in Step 3 of Algorithm 2 increases from T MST (V; E) to T MST (V; V 2 ), where E 2 O (V ) and jV j (2 d+2 + 1)n, as shown in Corollary 1 by Kalpakis and Sherman <ref> [6] </ref>. Thus, using Prim's algorithm, the time to carry out Step 3 in Algorithm 2 increases from O (n lg n) to O (n 2 ). Edge-Reduction Heuristics In Step 4 we implement the following two edge-reduction heuristics described by Balakrishnan and Patel [1].
Reference: [7] <author> K. Kalpakis and A. T. Sherman. </author> <title> Probabilistic analysis of an enhanced partitioning algorithm for the Steiner tree problem in R d . In P. </title> <editor> V. Dooren and M. Spong, editors, </editor> <booktitle> Proceedings of the 13th Annual Allerton Conference on Communication, Control, and Computing, </booktitle> <pages> pages 553-564. </pages> <institution> University of Illinois at Urbana-Champaign, </institution> <year> 1992. </year>
Reference-contexts: 1 Introduction Kalpakis and Sherman <ref> [6, 7] </ref> present and probabilistically analyze a deterministic partitioning approximation algorithm for the Steiner minimum tree problem in R d for any dimension d 2.
Reference: [8] <author> Z. A. Melzak. </author> <title> On the problem of Steiner. </title> <journal> Canadian Mathematical Bulletin, </journal> <volume> 4(2) </volume> <pages> 143-148, </pages> <month> May </month> <year> 1961. </year>
Reference-contexts: Experiments with other exact ESMT algorithms have been reported in 1985 by Winter [12] with n 15, and in 1992 by Cockayne and Hewgill [3] with n 30. All three of these algorithms stem from an idea by Melzak <ref> [8] </ref>. Additional exact ESMT algorithms have been proposed in 1977 by Boyce [2], and in 1990 by Trietsch and Hwang [11].
Reference: [9] <author> J. M. Smith, D. T. Lee, and J. S. Liebman. </author> <title> An O(N lg N ) heuristic for Steiner minimal tree problems on the Euclidean metric. </title> <journal> Networks, </journal> <volume> 11 </volume> <pages> 23-29, </pages> <year> 1981. </year>
Reference-contexts: All three of these algorithms stem from an idea by Melzak [8]. Additional exact ESMT algorithms have been proposed in 1977 by Boyce [2], and in 1990 by Trietsch and Hwang [11]. In addition, in 1981, Smith, Lee, and Liebman <ref> [9] </ref> presented experimental work with their O (n lg n) approxima Ravada and Sherman, Experimental evaluation of a Steiner tree algorithm|June 23, 1993 2 tion ESMT algorithm. 1 We did not experiment with these implementations because they were not available to us and because they do not work for d =
Reference: [10] <author> W. D. Smith. </author> <title> How to find Steiner minimal trees in Euclidean d-space. </title> <journal> Algorithmica, </journal> 7(2/3):137-177, 1992. 
Reference-contexts: Throughout, we select the input terminals at random, independently with a uniform distribution over the d-cube [0; 100] d . The only other experimental evaluation of any GSMT algorithm in R 3 of which we are aware is by Smith <ref> [10] </ref>, who in 1992 presented an exact iterative-improvement algorithm. We shall call this algorithm Smith's Algorithm. Smith's Algorithm works for all d 2 and can be used as an approximation algorithm by terminating it whenever desired.
Reference: [11] <author> D. Triesch and F. Hwang. </author> <title> An improved algorithm for Steiner trees. </title> <journal> SIAM Journal on Applied Mathematics, </journal> <volume> 50(1) </volume> <pages> 244-263, </pages> <month> February </month> <year> 1990. </year>
Reference-contexts: All three of these algorithms stem from an idea by Melzak [8]. Additional exact ESMT algorithms have been proposed in 1977 by Boyce [2], and in 1990 by Trietsch and Hwang <ref> [11] </ref>.
Reference: [12] <author> P. Winter. </author> <title> An algorithm for the Steiner problem in the Euclidean plane. </title> <journal> Networks, </journal> <volume> 15 </volume> <pages> 323-345, </pages> <year> 1985. </year>
Reference-contexts: For example, in 1972 Cockayne and Schiller [4] reported experiments using an exact ESMT algorithm on up to n 10 terminals. Experiments with other exact ESMT algorithms have been reported in 1985 by Winter <ref> [12] </ref> with n 15, and in 1992 by Cockayne and Hewgill [3] with n 30. All three of these algorithms stem from an idea by Melzak [8]. Additional exact ESMT algorithms have been proposed in 1977 by Boyce [2], and in 1990 by Trietsch and Hwang [11].
References-found: 12

