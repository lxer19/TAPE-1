URL: ftp://ftp.cs.rochester.edu/pub/papers/ai/98.Core-Schubert.FLAIRS.ps.gz
Refering-URL: http://www.cs.rochester.edu/u/mcore/papers.html
Root-URL: 
Email: mcore,schubert@cs.rochester.edu  
Title: Implementing Parser Metarules that Handle Speech Repairs and Other Disruptions in mixed-initiative dialogs. Whether a
Author: Mark G. Core and Lenhart K. Schubert 
Keyword: Motivation Repairs and other interruptions of phrase structure  
Note: (such as backchannel acknowledgments) are common  Copyright c fl1998, American Association for Artificial Intelligence (http://www.aaai.org). All rights reserved.  
Address: Rochester, NY 14627  
Affiliation: Department of Computer Science University of Rochester  
Abstract: Mixed-initiative dialogs often contain interruptions in phrase structure such as repairs and backchannel responses. Phrase structure as traditionally defined does not accommodate such phenomena, so it is not surprising that phrase structure parsers are ill-equipped to handle them. This paper presents metarules that specify how the instantiations of phrase structure rules may be restarted or interrupted, with allowance for interleaved speech. In the case of interleaved speech or backchannel responses, the metarules allow syntactically separate constituents to interleave or to straddle each other. In the case of repairs, the metarules operate on the reparandum (what is being repaired) and alteration (the correction) to build parallel phrase structure trees: one with the reparandum and one with the alteration. Consider the partial utterance, take the ban- um the oranges. The repair metarule would build two VPs, one being take the ban- and the other being take the oranges. The introduction of metarules simplifies the notion of an utterance since a sentence interrupted by an acknowledgment such as okay can still be treated as a single utterance formed around the interrupting acknowledgment. Together, metarules and phrase structure rules specify the structures that should be accommodated by a parser for mixed initiative dialogs. A dialog parser should also maintain a dialog chart that stores the results of syntactic and semantic analysis of all the dialog seen so far. This dialog chart will be a shared resource eliminating the need for maintenance of a separate representation of dialog structure by a dialog manager. This paper presents metarules that license certain extra-grammatical, interleaved structures. The first version of these metarules was presented in (Core & Schubert 1997); however, experience working with the rules has produced the revisions presented here. Metarules either allow the parser to skip over certain material (parsing this material separately) or in the case of repairs, construct alternative representations (one for the erroneous material and one for the correction). Treating repairs and other disruptions of phrase structure as extra-grammatical simplifies the definition of "utterance" since interruptions do not necessarily end an utterance. We will use the term "utterance" to refer informally to a sentence or a single phrase (question answer) uttered by a speaker, allowing for repairs and acknowledgments. Traditionally, dialog systems have only accepted one uninterrupted utterance at a time. The parsers of these systems send an utterance's logical form to some kind of dialog manager, a higher-level reasoning module that guides the system. There has been little if any discussion on how this logical form would encode any repairs in the utterance and how it could be extended to handle interleaved utterances. Dialog parsing metarules allow the chart of a dialog parser to contain parallel syntactic structures (what was first said and its correction) in the case of repairs, and interleaved syntactic structures in the case of interruptions. Instead of sending off this chart after an utterance is processed, it makes sense to treat the dialog chart as a shared resource between the dialog manager and parser in order to save communication costs. After each utterance, the chart would not be erased but rather appended, creating a record of the dialog for the dialog manager. The dialog chart could also serve as a place for the parser to mark interruptions such as okay as possible acknowledgments, and with the help of syntactic clues, mark interrogative, imperative, and declarative utterances as possible questions, suggestions, requests, and informs. For more details 
Abstract-found: 1
Intro-found: 1
Reference: <author> Bear, J.; Dowding, J.; and Shriberg, E. </author> <year> 1992. </year> <title> Integrating multiple knowledge sources for detection and correction of repairs in human-computer dialog. </title> <booktitle> In Proc. of the 30th annual meeting of the Association for Computational Linguistics (ACL-92), </booktitle> <pages> 56-63. </pages>
Reference-contexts: Bear 3 So even though the syntactic parallelism measures used in finding reparandum beginnings are relevant to finding reparandum end points, we do not discuss this here. et al. <ref> (Bear, Dowding, & Shriberg 1992) </ref> used pat-tern matching to identify likely repairs, then ran their parser on the string around the potential repair with and without the reparandum removed in order to establish grammaticality based on whether these strings comprised phrases.
Reference: <author> Core, M. G., and Schubert, L. K. </author> <year> 1997. </year> <title> Handling speech repairs and other disruptions through parser metarules. Technical Report SS-97-04, </title> <booktitle> American Association for Artificial Intelligence (AAAI), </booktitle> <address> 445 Burgess Drive, Menlo Park CA 94025. </address>
Reference: <author> Heeman, P., and Allen, J. </author> <year> 1995. </year> <title> the TRAINS 93 dialogues. </title> <type> TRAINS Technical Note 94-2, </type> <institution> Department of Computer Science, University of Rochester, Rochester, </institution> <address> NY 14627-0226. </address>
Reference: <author> Heeman, P. A. </author> <year> 1997. </year> <title> Speech Repairs, Intonational Boundaries and Discourse Markers: Modeling Speakers' Utterances in Spoken Dialog. </title> <type> Ph.D. Dissertation, </type> <institution> Department of Computer Science, University of Rochester. </institution>
Reference-contexts: 1 The terms editing term, reparandum, and alteration are used here as in <ref> (Heeman 1997) </ref>. by the repair metarule. XP is a possibly broken constituent ending with Z L . It corresponds to what the speaker started to say before the correction. There may be more than one possible XP as people's speech is ambiguous especially when ended abruptly. <p> In addition, they tested the well-formedness of the utterances remaining after various potential reparanda were removed. These tests used a language model called an adjacency matrix that specified what lexical categories could follow one another. Detecting Repairs As pointed out in <ref> (Heeman 1997) </ref>, neither editing terms, word fragments, nor prosodic clues by themselves are a reliable signal for speech repairs. <p> They used a decision tree to combine evidence from these sources to achieve 83.4% recall and 93.9% precision in detecting and isolating speech repairs. <ref> (Heeman 1997) </ref> describes a statistical model that assigns part of speech tags and identifies speech repairs based on the context of previous editing terms (I mean, um), boundary tones, pauses, and the previous words and their categories. <p> These results appear low when compared to (Nakatani & Hirschberg 1993); however Nakatani and Hirschberg used test utterances having at least one repair while Heeman did not remove sentences with no speech repairs from the test set. Finding Repairs and Utterance Boundaries The currently most successful speech repair correctors, <ref> (Heeman 1997) </ref> and (Nakatani & Hirschberg 1993), operate as preprocessing routines before parsing. A dialog parser should enable better detection of syntactic disruptions that indicate repairs, since it has a record of the possible phrase structures in the input.
Reference: <author> Hindle, D. </author> <year> 1983. </year> <title> Deterministic parsing of syntactic non-fluencies. </title> <booktitle> In Proc. of the 21st annual meeting of the Association for Computational Linguistics (ACL-83), </booktitle> <pages> 123-128. </pages>
Reference-contexts: Other research focused on repair detection since prosodic and grammatical clues by themselves are inadequate detectors of speech repairs. Isolating the Repair <ref> (Hindle 1983) </ref> used pattern matching and grammatical information to flag repairs once they were detected. The pattern matching was a preprocessing step to flag repeated segments of text (separated by an editing term such as okay) as repairs.
Reference: <author> Kikui, G., and Morimoto, T. </author> <year> 1994. </year> <title> Similarity-based identification of repairs in Japanese spoken language. </title> <booktitle> In Proceedings of the 3rd International Conference on Spoken Language Processing (ICSLP-94), </booktitle> <pages> 915-918. </pages>
Reference-contexts: The point of this work was to use parallel structures to identify the start of the reparandum assuming that the end was marked by an editing term. <ref> (Kikui & Morimoto 1994) </ref> also concentrated on finding a reparandum start. They used an algorithm originally designed for analyzing coordinate structures to find a reparandum and alteration with the most matching words/parts of speech. In addition, they tested the well-formedness of the utterances remaining after various potential reparanda were removed.
Reference: <author> Levelt, W. J. M. </author> <year> 1983. </year> <title> Monitoring and self-repair in speech. </title> <booktitle> Cognitive Science 14 </booktitle> <pages> 41-104. </pages>
Reference-contexts: There is also a strong tendency for Z i and Z' i to be of the same type as well as for Levelt's rule <ref> (Levelt 1983) </ref> to hold: if Z is suitably completed then Z and Z' should form an allowable coordinate structure. The reason the definition of the repair metarule is somewhat vague is that there are exceptions to the above tendencies.
Reference: <author> Nakatani, C., and Hirschberg, J. </author> <year> 1993. </year> <title> A speech-first model for repair detection and correction. </title> <booktitle> In Proc. of the 31st annual meeting of the Association for Computational Linguistics (ACL-93), </booktitle> <pages> 46-53. </pages>
Reference-contexts: This approach performed well on the 37 test cases but it remains to be seen how it would do on more data. To identify repairs, Nakatani and Hirschberg <ref> (Nakatani & Hirschberg 1993) </ref> used a variety of cues such as the existence of an editing term or word fragment, word repetition, and changes in speech signal energy and fundamental frequency. <p> Using these approaches gives a recall of 76.79% and precision of 86.66% on repair detection and 65.85% recall and 74.32% precision on correction. These results appear low when compared to <ref> (Nakatani & Hirschberg 1993) </ref>; however Nakatani and Hirschberg used test utterances having at least one repair while Heeman did not remove sentences with no speech repairs from the test set. Finding Repairs and Utterance Boundaries The currently most successful speech repair correctors, (Heeman 1997) and (Nakatani & Hirschberg 1993), operate as <p> appear low when compared to <ref> (Nakatani & Hirschberg 1993) </ref>; however Nakatani and Hirschberg used test utterances having at least one repair while Heeman did not remove sentences with no speech repairs from the test set. Finding Repairs and Utterance Boundaries The currently most successful speech repair correctors, (Heeman 1997) and (Nakatani & Hirschberg 1993), operate as preprocessing routines before parsing. A dialog parser should enable better detection of syntactic disruptions that indicate repairs, since it has a record of the possible phrase structures in the input.
References-found: 8

