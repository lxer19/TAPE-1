URL: http://www.cs.caltech.edu/~arvo/papers/kernel.ps
Refering-URL: 
Root-URL: 
Title: The Ray Tracing Kernel  
Author: David Kirk* and James Arvo, 
Note: *current address:  
Address: 330 Billerica, Chelmsford, MA 01824, USA.  256-80, Pasadena, CA 91125, USA  
Affiliation: Apollo Computer, Inc.,  California Institute of Technology, Computer Science  
Abstract: We describe a methodology for implementing a ray tracer which provides both a convenient testbed for developing new algorithms and a way to exploit the growing number of acceleration techniques. These benefits are a natural consequence of a collection of data abstractions called the ray tracing kernel. By defining an object in a broad sense, the kernel allows a single abstraction to encapsulate a wide spectrum of concepts including geometric primitives, acceleration techniques, CSG operators, and object transformations. Through hierarchical nesting of instances of these objects we are able to construct and efficiently render complex environments. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> James Arvo and David Kirk. </author> <title> Fast ray tracing by ray classification. </title> <journal> Computer Graphics, </journal> <volume> 21(4) </volume> <pages> 55-64, </pages> <month> July </month> <year> 1987. </year>
Reference-contexts: The exterior of this attraction is seen in the distance in Figures 2 and 3. There are approximately 10,000 object instances in the park environment, not including the fractal mountains. Though this can no longer be considered a "large" database in view of the models reported in <ref> [1] </ref> and [17] containing millions of objects, it nonetheless represents a significant challenge for creating a several-minute ray traced animation sequence. "Fair Play" required almost 3,000 unique anti-aliased frames at 512x384 pixel resolution. <p> The low-level bounding box hierarchies were also a way of grouping repeated sub-structures into objects which could be instanced without replicating all the data. Concurrently with the movie production we developed and tested a new acceleration technique <ref> [1] </ref>. This was integrated almost effortlessly into the ray tracer as another aggregate object indistinguishable from the others. Therefore, we were able to immediately substitute the new aggregate object for the top level uniform grid.
Reference: [2] <author> A. H. Barr. </author> <title> Global and local deformations of solid primitives. </title> <journal> Computer Graphics, </journal> <volume> 18(3) </volume> <pages> 21-30, </pages> <month> July </month> <year> 1984. </year>
Reference: [3] <author> Christian Bouville. </author> <title> Bounding ellipsoids for ray-fractal intersection. </title> <journal> Computer Graphics, </journal> <volume> 19(3) </volume> <pages> 45-51, </pages> <month> July </month> <year> 1985. </year>
Reference: [4] <author> Robert L. Cook. </author> <title> Shade trees. </title> <journal> Computer Graphics, </journal> <volume> 18(3) </volume> <pages> 223-231, </pages> <month> July </month> <year> 1984. </year>
Reference-contexts: For greater generality we allow a variety of shaders to be used in the rendering of a single environment. The value of this practice is made clear in <ref> [4] </ref>. We note that the flexibility of the "shade trees" described therein could be embodied within one of potentially many shaders accessed through the kernel. Aggregate objects are free to impose different policies for application of shaders and surface properties, or attributes, to their children.
Reference: [5] <author> Robert L. Cook, Thomas Porter, and Loren Carpenter. </author> <title> Distributed ray tracing. </title> <journal> Computer Graphics, </journal> <volume> 18(3) </volume> <pages> 137-145, </pages> <month> July </month> <year> 1984. </year>
Reference-contexts: A shader is an encapsulation of an illumination model and, in the context of ray tracing, it is the agent which creates creates a ray tree by casting rays in directions determined by the laws of reflection and refraction [21] or determined stochastically <ref> [5] </ref>. For greater generality we allow a variety of shaders to be used in the rendering of a single environment. The value of this practice is made clear in [4].
Reference: [6] <author> F. C. Crow. </author> <title> A more flexible image generation environment. </title> <journal> Computer Graphics, </journal> <volume> 16(3) </volume> <pages> 9-18, </pages> <month> July </month> <year> 1982. </year>
Reference: [7] <author> Akira Fujimoto and Takayuki Tanaka. </author> <title> ARTS: Accelerated ray-tracing system. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 6(4) </volume> <pages> 16-26, </pages> <month> April </month> <year> 1986. </year>
Reference-contexts: The organization of the amusement park environment suggested three very natural levels of detail: I) The entire park, consisting of rides, trees, and mountains, II) The individual rides, and III) small but detailed elements of the rides, such as the horses on a merry-go-round. Clearly a single uniform grid <ref> [7] </ref> would not have performed well here because of the scale involved. Large numbers of primitive objects would have been collected in a small number of voxels.
Reference: [8] <author> Andrew Glassner. </author> <title> Space subdivision for fast ray tracing. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 4(10) </volume> <pages> 15-22, </pages> <month> October </month> <year> 1984. </year>
Reference: [9] <author> Adele Goldberg and David Robinson. </author> <title> Smalltalk-80, the Language and its Implementation. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1983. </year>
Reference-contexts: By transforming rays "going in" and data such as normals, points, and bounds "going out," these objects implement the well-known technique for transforming objects by inverse transforming the rays instead. This is applicable for all affine transformations. This approach has many of the features of object oriented programming <ref> [9] </ref>. In particular, each object has a private memory which can only be manipulated through its set of operations, and all of the objects from a single class share the same interface. However, the kernel as we have defined it provides no mechanism for inheritance from one class to another.
Reference: [10] <author> R. A. Hall and D. P. Greenberg. </author> <title> A testbed for realistic image synthesis. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 3(10) </volume> <pages> 10-20, </pages> <month> November </month> <year> 1983. </year>
Reference: [11] <author> James T. Kajiya. </author> <title> New techniques for ray tracing procedurally defined objects. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 2(3) </volume> <pages> 161-181, </pages> <month> July </month> <year> 1983. </year>
Reference: [12] <author> Timothy L. Kay and James Kajiya. </author> <title> Ray tracing complex scenes. </title> <journal> Computer Graphics, </journal> <volume> 20(4) </volume> <pages> 269-278, </pages> <month> August </month> <year> 1986. </year>
Reference-contexts: Making this uniform allows all shaders to be applied to all objects. The "type" argument selects which bounding volume is to be returned an, in some cases contains additional data (e.g. plane-set normals <ref> [12] </ref>). Aggregate objects may require any or all of these bounding volumes for a child and may perform a wide variety of operations on them.
Reference: [13] <author> M. Ohta and M. Maekawa. </author> <title> Ray coherence theorem and constant time ray tracing algorithm. </title> <editor> In T. Kunii, editor, </editor> <booktitle> Computer Graphics 1987, </booktitle> <pages> pages 303-314. </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1987. </year> <booktitle> Proceedings of CG International `87. </booktitle>
Reference: [14] <author> S. D. Roth. </author> <title> Ray casting for modeling solids. </title> <journal> Computer Graphics and Image Processing, </journal> <volume> 18 </volume> <pages> 109-144, </pages> <year> 1982. </year>
Reference: [15] <author> Steve Rubin and Turner Whitted. </author> <title> A three-dimensional representation for fast rendering of complex scenes. </title> <journal> Computer Graphics, </journal> <volume> 14(3) </volume> <pages> 110-116, </pages> <month> July </month> <year> 1980. </year>
Reference: [16] <author> M. Sciulli, J. Arvo, M. White, J. Gilby, D. Kirk, K. Lefebvre, M. Marderosian, G. Hawks, A. Topeka, P. Toohil, A. Coppola, R. Palmer, P. Neal, C. Scofield, M. Shebell, C. Bremser, E. Peters, J. Francis, S. Reber, N. Ben-ovich, E. Wunderlich, G. Rose, N. Zawistowski, O. Lathrop, V. Odryna, R. Morrison, J. Graber, A. Lopez, T. Crane, J. Bowbeer, S. Costello, J. Beck, J. Parsons, D. Penfield, G. Odryna, M. Duhamel, L. Leary, F. Cozza, M. Pok-lemba, A. Markuvitz, M. Allard, R. O'Neal, and B. Hashizume. </author> <title> Fair play. </title> <booktitle> Apollo Computer, </booktitle> <year> 1987. </year> <title> A production of the Midnight Movie Group. </title>
Reference-contexts: The shell must assume the burden of copying objects and concatenating modeling transforms when these objects are instanced. Applications As an example of the benefits of the kernel we describe a 2.75 minute animated film entitled "Fair Play" <ref> [16] </ref> which was rendered using a ray tracer built upon the kernel concept. The environment consisted of an amusement park with a number of fairly detailed rides and attractions. Also included were trees, a fractal landscape, and two characters whom we follow through the park.
Reference: [17] <author> John M. Snyder and Alan H. Barr. </author> <title> Ray tracing complex models containing surface tessellations. </title> <journal> Computer Graphics, </journal> <volume> 21(4) </volume> <pages> 119-128, </pages> <month> July </month> <year> 1987. </year>
Reference-contexts: For example, we can combine any of the acceleration techniques listed in the introduction into 4 a meta hierarchy for ray tracing a single environ-ment. Though Snyder and Barr <ref> [17] </ref> described a restricted form of this nesting, the ray tracing kernel allows any aggregate object to be the child of any other aggregate object. The nested aggregate appears essentially as a bounding volume and intersection technique to its parent and is therefore handled as easily as a primitive object. <p> The exterior of this attraction is seen in the distance in Figures 2 and 3. There are approximately 10,000 object instances in the park environment, not including the fractal mountains. Though this can no longer be considered a "large" database in view of the models reported in [1] and <ref> [17] </ref> containing millions of objects, it nonetheless represents a significant challenge for creating a several-minute ray traced animation sequence. "Fair Play" required almost 3,000 unique anti-aliased frames at 512x384 pixel resolution.
Reference: [18] <author> Daniel L. Toth. </author> <title> On ray tracing parametric surfaces. </title> <journal> Computer Graphics, </journal> <volume> 19(3) </volume> <pages> 171-179, </pages> <year> 1985. </year>
Reference: [19] <author> J. J. van Wijk. </author> <title> Ray tracing objects defined by sweeping planar cubic splines. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 3(3) </volume> <pages> 223-237, </pages> <month> July </month> <year> 1984. </year>
Reference: [20] <author> Hank Weghorst, Gary Hooper, and Donald Greenberg. </author> <title> Improved computational methods for ray tracing. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 3(1) </volume> <pages> 52-69, </pages> <month> January </month> <year> 1984. </year>
Reference: [21] <author> Turner Whitted. </author> <title> An improved illumination model for shaded display. </title> <journal> Communications of the ACM, </journal> <volume> 32(6) </volume> <pages> 343-349, </pages> <month> June </month> <year> 1980. </year>
Reference-contexts: A shader is an encapsulation of an illumination model and, in the context of ray tracing, it is the agent which creates creates a ray tree by casting rays in directions determined by the laws of reflection and refraction <ref> [21] </ref> or determined stochastically [5]. For greater generality we allow a variety of shaders to be used in the rendering of a single environment. The value of this practice is made clear in [4].
Reference: [22] <author> Turner Whitted and David M. Weimer. </author> <title> A software testbed for the development of 3D raster graphics systems. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 1(1) </volume> <pages> 43-58, </pages> <month> January </month> <year> 1982. </year> <month> 8 </month>
References-found: 22

