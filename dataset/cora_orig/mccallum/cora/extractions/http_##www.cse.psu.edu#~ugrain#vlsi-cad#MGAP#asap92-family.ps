URL: http://www.cse.psu.edu/~ugrain/vlsi-cad/MGAP/asap92-family.ps
Refering-URL: http://www.cse.psu.edu/~ugrain/publications.html
Root-URL: 
Note: Copyright c fl1994 IEEE. All rights reserved. By choosing to view this document, you agree to all provisions of the copyright laws protecting it.  
Abstract: Personal use of this material is permitted. However, permission to reprint/republish this material for advertising or promotional purposes or for creating new collective works for resale or redistribution must be obtained from the IEEE. For information on obtaining permission, send a blank email message to info.pub.permission@ieee.org.
Abstract-found: 1
Intro-found: 1
Reference: [Bat74] <author> K. E. Batcher. </author> <title> STARAN Parallel Processor System Hardware. </title> <booktitle> In Proc. AFIPS NCC, </booktitle> <pages> pages 405-410, </pages> <year> 1974. </year>
Reference-contexts: Also, VLSI implementation details for a processing cell of the Mux-Based architecture, and its basic operations, are given. 2.1 Associative micro-architecture Architectures based on associative memories (also called content addressable memories) have been popular on and off for the last thirty years <ref> [Bat74, Fos76, WT82, SCNW88] </ref>. However, unlike other associative memory processors, we use a two-dimensional interconnect and a physically compact memory structure in our micro-grained array architecture. Our two-dimensional distributed logic architecture consists of a N fi N square array of processors which are content addressable memory digit cells [OI91].
Reference: [Bat80] <author> K. E. Batcher. </author> <title> Design of a Massively Parallel Processor. </title> <journal> IEEE Trans. on Comps., </journal> <volume> 29(9) </volume> <pages> 836-840, </pages> <month> Sep. </month> <year> 1980. </year>
Reference-contexts: Any attempt to increase flexibility usually increases processor complexity and, thereby, decreases granularity. All the systems which are based on the philosophy of massive parallelism through fine granularity (like the MPP and the Connection Machine 1) are beset by this problem <ref> [Bat80, BCe88, Hil86] </ref> and there is an obvious need for a fine grained and yet flexible system. We have developed three micro-grained VLSI architectures which are flexible and yet retain their fine granularity [OI91, IO92]. All three architectures are based upon very simple processors which are essentially just memory cells.
Reference: [BCe88] <author> S. Borkar, R. Cohn, and et.al. </author> <title> iWARP: An Integrated Solution to High-Speed Parallel Processing. </title> <booktitle> In Supercomputing '88, </booktitle> <pages> pages 330-339, </pages> <month> Nov. </month> <year> 1988. </year>
Reference-contexts: Any attempt to increase flexibility usually increases processor complexity and, thereby, decreases granularity. All the systems which are based on the philosophy of massive parallelism through fine granularity (like the MPP and the Connection Machine 1) are beset by this problem <ref> [Bat80, BCe88, Hil86] </ref> and there is an obvious need for a fine grained and yet flexible system. We have developed three micro-grained VLSI architectures which are flexible and yet retain their fine granularity [OI91, IO92]. All three architectures are based upon very simple processors which are essentially just memory cells.
Reference: [CB92] <author> C. E. Cox and W. E Blanz. </author> <title> GANGLION-A Fast Field-Programmable Gate Array Implementation of a Connectionist Classifier. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> 27(3) </volume> <pages> 288-299, </pages> <month> Mar. </month> <year> 1992. </year>
Reference-contexts: Recent work on building massively parallel fine grained architectures include the CAL project [KG90, GK89], the PADDI project [CR91], and the GANGLION project <ref> [CB92] </ref>. The CAL approach is to custom configure hardware for a given application thereby achieving very good compatability between hardware and the application. There is no addressable storage memory in the CAL cell making it more difficult to reuse data.
Reference: [CR91] <author> D. C. Chen and J. Rabaey. PADDI: </author> <title> Programmable Arithmetic Devices For Digital Signal Processing. </title> <booktitle> In VLSI Signal Processing IV, </booktitle> <pages> pages 240-249. </pages> <publisher> IEEE Press, </publisher> <year> 1991. </year>
Reference-contexts: Recent work on building massively parallel fine grained architectures include the CAL project [KG90, GK89], the PADDI project <ref> [CR91] </ref>, and the GANGLION project [CB92]. The CAL approach is to custom configure hardware for a given application thereby achieving very good compatability between hardware and the application. There is no addressable storage memory in the CAL cell making it more difficult to reuse data.
Reference: [Fos76] <author> C. C. Foster. </author> <title> Content Addressable Processors. </title> <publisher> Van Nostrand Reinhold, </publisher> <year> 1976. </year>
Reference-contexts: Also, VLSI implementation details for a processing cell of the Mux-Based architecture, and its basic operations, are given. 2.1 Associative micro-architecture Architectures based on associative memories (also called content addressable memories) have been popular on and off for the last thirty years <ref> [Bat74, Fos76, WT82, SCNW88] </ref>. However, unlike other associative memory processors, we use a two-dimensional interconnect and a physically compact memory structure in our micro-grained array architecture. Our two-dimensional distributed logic architecture consists of a N fi N square array of processors which are content addressable memory digit cells [OI91].
Reference: [GF90] <author> F. Gustafsson and G. Flodman. </author> <title> Multi Chip Modules for Telecom Applications. </title> <booktitle> In Proc. 8th Intl. Electron. Manuf. Tech. Symp., </booktitle> <year> 1990. </year>
Reference-contexts: In the second stage of prototyping, the whole processor array will be placed on an MCM (Multi Chip Module) [JTB91]. Using current hybrid technology <ref> [GF90, NMM89] </ref>, it is possible to reduce the layout area four-fold, by using MCMs. By layout area we mean both I/O density and chip density. In fact the chip density can be increased by about 20 times, but the I/O density can only be increased four fold. <p> An 16 fi 8 array is equivalent to 64K digit processors, which is comparable in size to the Connection Machine. The other advantages of mounting our CMOS processor chips on an MCM are that the propagation delay is decreased three fold and the capacitive load is also decreased <ref> [GF90] </ref>. 4 Algorithm development and future work As we have shown in [IO92], all algorithms that can be computed efficiently on SIMD machines, can be computed on our Mux-based micro-grained architecture efficiently.
Reference: [GK89] <author> J. Gray and T. Kean. </author> <title> Configurable Hardware: A New Paradigm for Computation. </title> <booktitle> In Advanced Research in VLSI, Proceedings of the Decennial Caltech Conference on VLSI, </booktitle> <pages> pages 5-16, </pages> <month> March </month> <year> 1989. </year>
Reference-contexts: Hence, overall, the processing cells of the micro-grained architecture are much smaller than the cells of the CM-1 and, as a consequence, many more of them will fit on a given VLSI chip. Recent work on building massively parallel fine grained architectures include the CAL project <ref> [KG90, GK89] </ref>, the PADDI project [CR91], and the GANGLION project [CB92]. The CAL approach is to custom configure hardware for a given application thereby achieving very good compatability between hardware and the application. There is no addressable storage memory in the CAL cell making it more difficult to reuse data.
Reference: [Hil86] <author> W. D. Hillis. </author> <title> The Connection Machine. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1986. </year>
Reference-contexts: Any attempt to increase flexibility usually increases processor complexity and, thereby, decreases granularity. All the systems which are based on the philosophy of massive parallelism through fine granularity (like the MPP and the Connection Machine 1) are beset by this problem <ref> [Bat80, BCe88, Hil86] </ref> and there is an obvious need for a fine grained and yet flexible system. We have developed three micro-grained VLSI architectures which are flexible and yet retain their fine granularity [OI91, IO92]. All three architectures are based upon very simple processors which are essentially just memory cells. <p> This would increase the efficiency of the architecture for certain types of problems at the expense of increased wiring area. It is enlighting to compare our micro-grained processor to the Connection Machine 1 (CM-1) <ref> [Hil86] </ref>. The CM-1 is (on chip) a two dimensional processor array. A fixed, nearest neighbor interconnect is used. Each CM1 cell consists of a small storage RAM memory and two function ROM memories. The function memories can be used to compute any three input function.
Reference: [IO87] <author> M. J. Irwin and R. M. Owens. </author> <title> Digit Pipelined Arithmetic as Illustrated by the Paste-Up System. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 61-73, </pages> <month> Apr. </month> <year> 1987. </year>
Reference-contexts: For greater speed and scalability, the arithmetic operations assume that a redundant number system is being used. The p digit numbers are drawn from a radix 4, fully redundant, fixed point number system <ref> [IO87] </ref>. Since a digit is represented in two's complement format, each digit requires three bits of storage. For most arithmetic operations each digit of the number is contained in a unique digit cell of the word cell. <p> Note that since we have required that js i j &lt; 3; the second step can be performed carry free <ref> [IO87] </ref>. The first step can be computed in 14 cycles in the following manner: * One cycle is needed to set the interconnection configuration as illustrated in figure 6.
Reference: [IO92] <author> M. J. Irwin and R. M. Owens. </author> <title> A Micro-Grained VLSI Signal Processor. </title> <booktitle> In ICASSP-92, </booktitle> <pages> pages 641-644, </pages> <month> Mar. </month> <year> 1992. </year>
Reference-contexts: We have developed three micro-grained VLSI architectures which are flexible and yet retain their fine granularity <ref> [OI91, IO92] </ref>. All three architectures are based upon very simple processors which are essentially just memory cells. They are put together using nearest neighbor interconnect. The first micro-grained architecture is a two-dimensional, distributed, associative processor in which each processor is basically an associative memory cell. <p> In the third architecture we replace each function multiplexer by an eight-bit function RAM. All three architectures employ a base 4 maximally redundant number system for arithmetic operations. We have shown how a large number of algorithms can be efficiently computed on these architecture <ref> [OI91, IO92, OIB] </ref>. In the next section we describe the three architectures and some of the algorithms. The proposed prototyping system is described in section 2. <p> The basic operations supported by the associative processor array and their corresponding command counts are shown in table 1. All of our algorithms for this architecture are based upon these operations. For a more detailed explanation of these operations for the mux and RAM based micro-grained architectures see <ref> [IO92] </ref>, and also [OIB]. Building on the procedures for simple arithmetic and data movement operations shown in table 1, algorithms for filtering, edge detection, and finding connected components can be developed by simply modifying known algorithms for SIMD mesh architectures. <p> The other advantages of mounting our CMOS processor chips on an MCM are that the propagation delay is decreased three fold and the capacitive load is also decreased [GF90]. 4 Algorithm development and future work As we have shown in <ref> [IO92] </ref>, all algorithms that can be computed efficiently on SIMD machines, can be computed on our Mux-based micro-grained architecture efficiently. Efficient algorithms for sorting, transpose, permutations and signal processing algorithms like the 2D-FFT and image compression will be developed for the micro-grained architectures.
Reference: [IOK + 91] <author> M. J. Irwin, R. M. Owens, T. P. Kelliher, K.-K. Leung, and M. Vishwanath. </author> <title> The Arithmetic Cube II: A Second Generation VLSI DSP Processor. </title> <booktitle> In ICASSP-91, </booktitle> <pages> pages 1125-1128, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: The vehicle will be a Sun-4 style 9Ufi400mm VME board. The prototyping system will function as a slave processor of the SPARC host. All communication will occur across the VME bus. We have gained useful experience in system design of this nature, as the AC II <ref> [IOK + 91, KWOI90] </ref> board was, similarly, a 9Ufi400mm VME slave device. One of the architectural cornerstones of this prototyping system is its flexibility. Its design will be general enough so that it will serve the needs of the micro-grained processors and similar processors yet to be designed.
Reference: [JTB91] <author> W. R. Johnson, R. K. F. Teng, and J. W. Balde, </author> <title> editors. Multichip Modules: System Advantages, Major Constructions and Materials Technologies. </title> <publisher> IEEE Press, </publisher> <year> 1991. </year>
Reference-contexts: In the second stage of prototyping, the whole processor array will be placed on an MCM (Multi Chip Module) <ref> [JTB91] </ref>. Using current hybrid technology [GF90, NMM89], it is possible to reduce the layout area four-fold, by using MCMs. By layout area we mean both I/O density and chip density.
Reference: [KG90] <author> T. Kean and J. Gray. </author> <title> Configurable Hardware: Two Case Studies of Micro-Grain Computation. </title> <journal> Journal of VLSI Signal Processing, </journal> <volume> 2(1) </volume> <pages> 9-16, </pages> <month> Sept. </month> <year> 1990. </year>
Reference-contexts: Hence, overall, the processing cells of the micro-grained architecture are much smaller than the cells of the CM-1 and, as a consequence, many more of them will fit on a given VLSI chip. Recent work on building massively parallel fine grained architectures include the CAL project <ref> [KG90, GK89] </ref>, the PADDI project [CR91], and the GANGLION project [CB92]. The CAL approach is to custom configure hardware for a given application thereby achieving very good compatability between hardware and the application. There is no addressable storage memory in the CAL cell making it more difficult to reuse data.
Reference: [KWOI90] <author> T. P. Kelliher, C.-M. Wu, R. M. Owens, and M. J. Irwin. </author> <title> The Design of the Arithmetic Cube II. </title> <booktitle> In VLSI Signal Processing IV, </booktitle> <pages> pages 95-105, </pages> <month> Nov. </month> <year> 1990. </year>
Reference-contexts: The vehicle will be a Sun-4 style 9Ufi400mm VME board. The prototyping system will function as a slave processor of the SPARC host. All communication will occur across the VME bus. We have gained useful experience in system design of this nature, as the AC II <ref> [IOK + 91, KWOI90] </ref> board was, similarly, a 9Ufi400mm VME slave device. One of the architectural cornerstones of this prototyping system is its flexibility. Its design will be general enough so that it will serve the needs of the micro-grained processors and similar processors yet to be designed.
Reference: [NCM90] <author> NSF-CISE-MIPS. </author> <title> Report on the Workshop on Field Programmable Gate Arrays in the University. </title> <address> Washington, DC, </address> <month> Jan. </month> <year> 1990. </year>
Reference-contexts: The design of the Mux-based and RAM-based micro-grained digit processors was inspired by our interest in deriving architectures suitable for solving 2-D signal and image processing problems. The architectures of several commercially available programmable logic devices (PLD's) <ref> [NCM90, Xil86] </ref> also had some influence on our design. While the designs of the processing cells of our architecture and PLD's are similar, the typical PLD has a more general communication structure. As explained in the next section, the data interconnects for our processor are limited to nearest neighbor.
Reference: [NMM89] <author> V. K. Nagesh, D. Miller, and L. Moresco. </author> <title> A Comparitive Study of Interconnect Technologies. </title> <booktitle> In Proc. 9th Intl. Electron. Packaging Conf., </booktitle> <pages> pages 199-208, </pages> <year> 1989. </year> <note> Vol. 1. </note>
Reference-contexts: In the second stage of prototyping, the whole processor array will be placed on an MCM (Multi Chip Module) [JTB91]. Using current hybrid technology <ref> [GF90, NMM89] </ref>, it is possible to reduce the layout area four-fold, by using MCMs. By layout area we mean both I/O density and chip density. In fact the chip density can be increased by about 20 times, but the I/O density can only be increased four fold.
Reference: [OI91] <author> R. M. Owens and M. J. Irwin. </author> <title> A Two-Dimensional, Distributed Logic Processor. </title> <journal> IEEE Trans. on Comps., </journal> <volume> 40(10) </volume> <pages> 1094-1101, </pages> <month> Oct. </month> <year> 1991. </year>
Reference-contexts: We have developed three micro-grained VLSI architectures which are flexible and yet retain their fine granularity <ref> [OI91, IO92] </ref>. All three architectures are based upon very simple processors which are essentially just memory cells. They are put together using nearest neighbor interconnect. The first micro-grained architecture is a two-dimensional, distributed, associative processor in which each processor is basically an associative memory cell. <p> In the third architecture we replace each function multiplexer by an eight-bit function RAM. All three architectures employ a base 4 maximally redundant number system for arithmetic operations. We have shown how a large number of algorithms can be efficiently computed on these architecture <ref> [OI91, IO92, OIB] </ref>. In the next section we describe the three architectures and some of the algorithms. The proposed prototyping system is described in section 2. <p> However, unlike other associative memory processors, we use a two-dimensional interconnect and a physically compact memory structure in our micro-grained array architecture. Our two-dimensional distributed logic architecture consists of a N fi N square array of processors which are content addressable memory digit cells <ref> [OI91] </ref>. Each digit cell is made up of twenty-five bit cells as shown in figure 1.
Reference: [OIB] <author> R. M. Owens, M. J. Irwin, and R. S. Bajwa. </author> <title> A Micro-Grained VLSI Signal Processing System. </title> <note> In preparation. </note>
Reference-contexts: In the third architecture we replace each function multiplexer by an eight-bit function RAM. All three architectures employ a base 4 maximally redundant number system for arithmetic operations. We have shown how a large number of algorithms can be efficiently computed on these architecture <ref> [OI91, IO92, OIB] </ref>. In the next section we describe the three architectures and some of the algorithms. The proposed prototyping system is described in section 2. <p> All of our algorithms for this architecture are based upon these operations. For a more detailed explanation of these operations for the mux and RAM based micro-grained architectures see [IO92], and also <ref> [OIB] </ref>. Building on the procedures for simple arithmetic and data movement operations shown in table 1, algorithms for filtering, edge detection, and finding connected components can be developed by simply modifying known algorithms for SIMD mesh architectures.
Reference: [OIKW92] <author> R. M. Owens, M. J. Irwin, T. P. Kelliher, and C.-M. Wu. </author> <title> The Arithmetic Cube: A Highly Parallel VLSI DSP Architecture. Under revision, </title> <month> Apr. </month> <year> 1992. </year>
Reference-contexts: Fig. 9. Block diagram of the I/O memories. 3.3 The array controller The control of the processor array and the I/O memories will be orchestrated by a microse-quencer and control store memory. The organization will be similar to that which we used in the AC II <ref> [OIKW92] </ref>. The control memory shall consist of both ROM and RAM. The ROM will contain "kernel" and power-up routines. The RAM will be downloaded from the host with programs customized for each processor array architecture and problem instance.
Reference: [SCNW88] <author> D. Shu, L.-W. Chow, J. Nash, and C. Weems. </author> <title> A Content Addressable Bit-Serial Associative Processor. </title> <booktitle> In VLSI Signal Processing III, </booktitle> <pages> pages 120-128. </pages> <publisher> IEEE Press, </publisher> <year> 1988. </year>
Reference-contexts: Also, VLSI implementation details for a processing cell of the Mux-Based architecture, and its basic operations, are given. 2.1 Associative micro-architecture Architectures based on associative memories (also called content addressable memories) have been popular on and off for the last thirty years <ref> [Bat74, Fos76, WT82, SCNW88] </ref>. However, unlike other associative memory processors, we use a two-dimensional interconnect and a physically compact memory structure in our micro-grained array architecture. Our two-dimensional distributed logic architecture consists of a N fi N square array of processors which are content addressable memory digit cells [OI91].
Reference: [WT82] <author> C. Weems and T. Titanic. </author> <title> A VLSI Based Content Addressable Parallel Array Processor. </title> <booktitle> In Proc. Intl. Conf. on Circuits and Components, </booktitle> <pages> pages 236-239, </pages> <year> 1982. </year>
Reference-contexts: Also, VLSI implementation details for a processing cell of the Mux-Based architecture, and its basic operations, are given. 2.1 Associative micro-architecture Architectures based on associative memories (also called content addressable memories) have been popular on and off for the last thirty years <ref> [Bat74, Fos76, WT82, SCNW88] </ref>. However, unlike other associative memory processors, we use a two-dimensional interconnect and a physically compact memory structure in our micro-grained array architecture. Our two-dimensional distributed logic architecture consists of a N fi N square array of processors which are content addressable memory digit cells [OI91].
Reference: [Xil86] <author> Xilinx, Inc. </author> <title> The Programmable Gate Array Design Handbook. </title> <publisher> Xilinx, Inc., </publisher> <address> San Jose, CA, </address> <year> 1986. </year>
Reference-contexts: The design of the Mux-based and RAM-based micro-grained digit processors was inspired by our interest in deriving architectures suitable for solving 2-D signal and image processing problems. The architectures of several commercially available programmable logic devices (PLD's) <ref> [NCM90, Xil86] </ref> also had some influence on our design. While the designs of the processing cells of our architecture and PLD's are similar, the typical PLD has a more general communication structure. As explained in the next section, the data interconnects for our processor are limited to nearest neighbor.
References-found: 23

