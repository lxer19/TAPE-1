URL: http://www.ai.univie.ac.at/ilp_kdd/blockeel.ps.gz
Refering-URL: http://www.ai.univie.ac.at/ilp_kdd/schedule.html
Root-URL: 
Email: e-mail: fHendrik.Blockeel, Luc.DeRaedtg@cs.kuleuven.ac.be  
Title: Relational Knowledge Discovery in Databases  
Author: Hendrik Blockeel and Luc De Raedt 
Date: June 7, 1996  
Address: Celestijnenlaan 200A 3001 Heverlee  
Affiliation: Katholieke Universiteit Leuven Department of Computer Science  
Abstract: In this paper, we indicate some possible applications of ILP or similar techniques in the knowledge discovery field, and then discuss several methods for adapting and linking ILP-systems to relational database systems. The proposed methods range from "pure ILP" to "based on techniques originating in ILP". We show that it is both easy and advantageous to adapt ILP-systems in this way.
Abstract-found: 1
Intro-found: 1
Reference: [ De Raedt and Dehaspe, 1995 ] <author> L. De Raedt and L. Dehaspe. </author> <title> Clausal discovery. </title> <publisher> Forthcoming, </publisher> <year> 1995. </year>
Reference-contexts: Every clause describes the data in some way, and the set of all valid clauses forms a maximally informative description of the data. ILP systems using this 3 setting exist (e.g. Claudien <ref> [ De Raedt and Dehaspe, 1995 ] </ref> , icl [ De Raedt and Van Laer, 1995 ] ) but are far less numerous than systems using the classical setting. There is a straightforward relationship between finding an intensional definition for a relation, and classification of tuples. <p> The closed world assumption has to be made in this case. Recently, however, more attention has been given to ILP systems that learn from positive examples only (this is often called learning in a non-monotonic setting; see for instance <ref> [ De Raedt and Dehaspe, 1995 ] </ref> ). These systems are the ones for which the analogy holds best. 4 3.2 A link to databases at the Prolog level As they work with a logical representation, many ILP systems are implemented in Prolog (e.g. <p> non-monotonic setting; see for instance <ref> [ De Raedt and Dehaspe, 1995 ] </ref> ). These systems are the ones for which the analogy holds best. 4 3.2 A link to databases at the Prolog level As they work with a logical representation, many ILP systems are implemented in Prolog (e.g. Claudien [ De Raedt and Dehaspe, 1995 ] , icl [ De Raedt and Van Laer, 1995 ] ), or, when they are implemented in another language, use libraries that implement many features of a Prolog system (e.g. [ Muggleton, 1995 ] ).
Reference: [ De Raedt and Van Laer, 1995 ] <author> L. De Raedt and W. Van Laer. </author> <title> Inductive constraint logic. </title> <booktitle> In Proceedings of the 5th Workshop on Algorithmic Learning Theory, Lecture Notes in Artificial Intelligence. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: Every clause describes the data in some way, and the set of all valid clauses forms a maximally informative description of the data. ILP systems using this 3 setting exist (e.g. Claudien [ De Raedt and Dehaspe, 1995 ] , icl <ref> [ De Raedt and Van Laer, 1995 ] </ref> ) but are far less numerous than systems using the classical setting. There is a straightforward relationship between finding an intensional definition for a relation, and classification of tuples. <p> These systems are the ones for which the analogy holds best. 4 3.2 A link to databases at the Prolog level As they work with a logical representation, many ILP systems are implemented in Prolog (e.g. Claudien [ De Raedt and Dehaspe, 1995 ] , icl <ref> [ De Raedt and Van Laer, 1995 ] </ref> ), or, when they are implemented in another language, use libraries that implement many features of a Prolog system (e.g. [ Muggleton, 1995 ] ). Some Prolog systems can be linked to relational databases.
Reference: [ Dehaspe and De Raedt, 1995 ] <author> L. Dehaspe and L. De Raedt. DLAB: </author> <title> a declarative language bias for concept learning and knowledge discovery engines. </title> <type> Technical Report CW-214, </type> <institution> Department of Computer Science, Katholieke Universiteit Leuven, </institution> <month> October </month> <year> 1995. </year>
Reference-contexts: More elaborate language specifications could be based on those used in ILP systems (e.g. D lab <ref> [ Dehaspe and De Raedt, 1995 ] </ref> ), but there will probably be enough differences to justify some specific research on, for instance, language specifications for SQL. * The search space is expected to be organized differently than the clausal logic search spaces.
Reference: [ Elmasri and Navathe, 1989 ] <author> R. Elmasri and S. B. Navathe. </author> <title> Fundamentals of Database Systems. </title> <publisher> The Benjamin/Cummings Publishing Company, </publisher> <address> 2nd edition, </address> <year> 1989. </year>
Reference-contexts: These results can be found in most standard works on database theory, e.g. <ref> [ Elmasri and Navathe, 1989 ] </ref> .
Reference: [ Fayyad and Uthurusamy, 1995 ] <editor> U. M. Fayyad and R. Uthurusamy, editors. </editor> <booktitle> Proceedings of the First International Conference on Knowledge Discovery and Data Mining. </booktitle> <publisher> AAAI Press, </publisher> <month> August </month> <year> 1995. </year>
Reference-contexts: As a database typically contains more than one relation, it seems clear that a lot of interesting rules are simply not considered when using propositional techniques. Nevertheless, research in the data mining community has focused mainly on these techniques (see e.g. <ref> [ Fayyad and Uthurusamy, 1995 ] </ref> ). Finding inter-relation rules can sometimes be simulated by computing the universal relation (i.e. joining all the relations into one relation), but this may be a very costly operation, and the universal relation can be very large.
Reference: [ Kietz and Wrobel, 1992 ] <author> J-U. Kietz and S. Wrobel. </author> <title> Controlling the complexity of learning in logic through syntactic and task-oriented models. </title> <editor> In S. Mug-gleton, editor, </editor> <booktitle> Inductive logic programming, </booktitle> <pages> pages 335-359. </pages> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: Discovery systems exploiting this property already exist; see e.g. [ Lindner, 1994; Lindner and Morik, 1995 ] , where a coupling between the ILP-system RDT <ref> [ Kietz and Wrobel, 1992 ] </ref> and the Oracle database system is described. The resulting RDT/DB system makes use of SQL-queries akin to those given further in this paper. Recently, a preliminary version of a coupling between Claudien and Oracle has also been implemented.
Reference: [ Lindner and Morik, 1995 ] <author> G. Lindner and K. Morik. </author> <title> Coupling a relational learning algorithm with a database system. </title> <editor> In Y. Kodratoff, G. Nakhaeizadeh, and C. Taylor, editors, </editor> <booktitle> Workshop Notes of the MLnet Familiarization Workshop on Statistics, Machine Learning and Knowledge Discovery in Databases, </booktitle> <pages> pages 163-168, </pages> <year> 1995. </year>
Reference-contexts: Discovery systems exploiting this property already exist; see e.g. <ref> [ Lindner, 1994; Lindner and Morik, 1995 ] </ref> , where a coupling between the ILP-system RDT [ Kietz and Wrobel, 1992 ] and the Oracle database system is described. The resulting RDT/DB system makes use of SQL-queries akin to those given further in this paper.
Reference: [ Lindner, 1994 ] <author> G. Lindner. </author> <title> Anwendung des lernverfahrens RDT auf eine rela-tionele datenbank. </title> <type> Master's thesis, </type> <institution> Universitat Dortmund, </institution> <month> August </month> <year> 1994. </year> <note> In German. </note>
Reference-contexts: Discovery systems exploiting this property already exist; see e.g. <ref> [ Lindner, 1994; Lindner and Morik, 1995 ] </ref> , where a coupling between the ILP-system RDT [ Kietz and Wrobel, 1992 ] and the Oracle database system is described. The resulting RDT/DB system makes use of SQL-queries akin to those given further in this paper.
Reference: [ Muggleton, 1995 ] <author> S. Muggleton. </author> <title> Inverse entailment and progol. </title> <journal> New Generation Computing, </journal> <volume> 13, </volume> <year> 1995. </year>
Reference-contexts: Most ILP systems (e.g. Progol <ref> [ Muggleton, 1995 ] </ref> , FOIL [ Quinlan, 1993 ] ) use this setting. Another setting is what we call characteristic ILP. Clauses are induced that are valid for the given data; this means that there should not exist a substitution for which the clause is false. <p> Claudien [ De Raedt and Dehaspe, 1995 ] , icl [ De Raedt and Van Laer, 1995 ] ), or, when they are implemented in another language, use libraries that implement many features of a Prolog system (e.g. <ref> [ Muggleton, 1995 ] </ref> ). Some Prolog systems can be linked to relational databases. This means that part of the knowledge base is not read from a Prolog file, but is assumed to be in the database to which the Prolog system is linked.
Reference: [ Paredaens, 1978 ] <author> J. Paredaens. </author> <title> On the expressive power of the relational algebra. </title> <journal> Information Processing Letters, </journal> <volume> 7(2) </volume> <pages> 107-111, </pages> <month> February </month> <year> 1978. </year> <month> 13 </month>
Reference-contexts: A theoretical answer to whether R can at all be expressed in terms of a set of relations R using the relational algebra, was given years ago, see for instance <ref> [ Paredaens, 1978 ] </ref> . However, there does not seem to be an easy way of computing the answer to this question (i.e. one that is significantly faster than just trying to find such an expression and eventually failing if none exists). <p> These results can be found in most standard works on database theory, e.g. [ Elmasri and Navathe, 1989 ] . Several operators are defined in the relational algebra, but it can be proven that they can all be defined using the following five operators (see also <ref> [ Paredaens, 1978 ] </ref> ): * the cartesian product of two relations (R fi S) * the union of two relations having the same arity (R [ S) * the projection of a relation on certain attributes ( i 1 ;:::;i n (R)) * the selection from a relation of those
Reference: [ Quinlan, 1993 ] <author> J.R. Quinlan. </author> <title> FOIL: A midterm report. </title> <editor> In P. Brazdil, editor, </editor> <booktitle> Proceedings of the 6th European Conference on Machine Learning, Lecture Notes in Artificial Intelligence. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1993. </year> <month> 14 </month>
Reference-contexts: Most ILP systems (e.g. Progol [ Muggleton, 1995 ] , FOIL <ref> [ Quinlan, 1993 ] </ref> ) use this setting. Another setting is what we call characteristic ILP. Clauses are induced that are valid for the given data; this means that there should not exist a substitution for which the clause is false.
References-found: 11

