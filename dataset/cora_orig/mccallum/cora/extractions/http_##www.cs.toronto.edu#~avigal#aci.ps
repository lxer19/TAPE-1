URL: http://www.cs.toronto.edu/~avigal/aci.ps
Refering-URL: http://www.cs.toronto.edu/~avigal/publications.html
Root-URL: http://www.cs.toronto.edu
Title: A Temporal Database with Data Dependencies: a Key to Computer Integrated Manufacturing  
Author: Dov Dori, Avigdor Gal, Opher Etzion 
Keyword: Computer Integrated Manufacturing, temporal databases, active databases, decision support systems.  
Address: Haifa 32000, Israel  
Affiliation: Information Systems Engineering Department Faculty of Industrial Engineering and Management Technion Israel Institute of Technology  
Abstract: We propose a temporal database scheme with data dependencies which supports complex tasks, such as version control and configuration management in computer integrated manufacturing (CIM). This architecture adds functionality to the CIM database, thereby reducing the programming effort required outside the database. The database correctness is maintained even after introducing engineering changes. A case study shows that the proposed scheme also supports automated decision making for shop-floor control. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> ISO CD 10303-1. </author> <title> Product data representation and exchange part 1: Overview and fundamental principles. International Organization for Standardization, </title> <type> subcommittee 4, </type> <year> 1991. </year>
Reference-contexts: Since enterprises are expected to last for long periods of time, support of the temporal aspect is vital in any such model. Developing a complete product description in a natural format is one of the goals of the PDES/STEP effort <ref> [1] </ref>. The standard is subdivided into separate International Standards called Parts, which include geometric and topological representation, materials, tolerances, etc. STEP uses the EXPRESS data definition language as a tool for providing object-oriented, integrated views of product data. <p> The value, t d and t v of the derived state-elements are derived from the state-elements of Current-Consumption-Ratio, as shown in Section 3.2. (s 0 1)=f 6:0; ft x = Sep: 1 1995; 8:02am; t d = Sep: 1 1995; 8:00am; t v = <ref> [Sep: 1 1995 8:00am; 1] </ref>gg (s 0 3)=f 6:5; value ft x = Sep: 1 1995; 9:05am; t d = Sep: 1 1995; 9:00am; t v = [Sep: 1 1995 9:00am; 1]gg temporal extension The derivation (d4) calculates the total order value for a clients' orders. <p> Section 3.2. (s 0 1)=f 6:0; ft x = Sep: 1 1995; 8:02am; t d = Sep: 1 1995; 8:00am; t v = [Sep: 1 1995 8:00am; 1]gg (s 0 3)=f 6:5; value ft x = Sep: 1 1995; 9:05am; t d = Sep: 1 1995; 9:00am; t v = <ref> [Sep: 1 1995 9:00am; 1] </ref>gg temporal extension The derivation (d4) calculates the total order value for a clients' orders. The calculation depends on whether or not the payment for the order is made on time.
Reference: [2] <author> T. Abbod, K. Brown, and H. Noble. </author> <title> Providing time-related constraints for conventional database systems. </title> <booktitle> In Proceedings of the 13th International Conference on VLDB, </booktitle> <pages> pages 167-175, </pages> <address> Brighton, </address> <year> 1987. </year>
Reference-contexts: Other models, including [4], [39] and [49], also enforce a single value for each time point. Consequently, a mechanism to handle simultaneous values is either disabled or applied in an unnatural manner. Several works, including [28], <ref> [2] </ref>, [45], [50], [13] and [37], have investigated aspects of temporal active databases. In [28], a limited active framework was introduced, in which past states that are not explicitly stored, can be inferred from the current state, using ground rules. Integrity constraints that vary with time are discussed in [2]. <p> [28], <ref> [2] </ref>, [45], [50], [13] and [37], have investigated aspects of temporal active databases. In [28], a limited active framework was introduced, in which past states that are not explicitly stored, can be inferred from the current state, using ground rules. Integrity constraints that vary with time are discussed in [2]. The OSAM*/T, presented in [45], is an object-based temporal knowledge representation model that combines update rules with temporal characteristics, extending the object-oriented model OSAM* [46]. Rules in OSAM*/T are used to capture temporal semantics beyond the valid start and end times of a value.
Reference: [3] <author> S. Abiteboul. </author> <title> Update, the new frontier. </title> <booktitle> In Lecture Notes on Computer Science, </booktitle> <volume> 326, </volume> <pages> pages 1-18. </pages> <publisher> Springer Verlag, </publisher> <year> 1988. </year>
Reference-contexts: However, current CIM systems usually employ traditional databases, in which much of the system's required functionality is carried out by procedural, third generation languages. For complex applications, procedural programming tends to be tedious, time consuming and difficult to verify <ref> [3] </ref>. The gap between the complexity of CIM systems on one hand, and the limited abilities of traditional database models on the other hand, requires a massive translation process from real life to a computerized application when a set of conventional programming tools is used.
Reference: [4] <author> G. Ariav. </author> <title> A temporally oriented data model. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 11(4) </volume> <pages> 499-527, </pages> <month> December </month> <year> 1986. </year> <month> 29 </month>
Reference-contexts: For example, in [40], the valid time of a new value for a data item is derived by subtracting all existing valid times for that data item from the user defined valid time. Other models, including <ref> [4] </ref>, [39] and [49], also enforce a single value for each time point. Consequently, a mechanism to handle simultaneous values is either disabled or applied in an unnatural manner. Several works, including [28], [2], [45], [50], [13] and [37], have investigated aspects of temporal active databases.
Reference: [5] <author> F. Bancilhon. </author> <title> Object-oriented database systems. </title> <booktitle> In ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, </booktitle> <pages> pages 152-162, </pages> <year> 1988. </year>
Reference-contexts: Classes in the database scheme are interconnected by structural relations: generalizations (e.g., Company/Person is a generalization of Customer and Supplier) and aggregations (e.g., the class Product may be 1 The approach taken here is an object-oriented database approach <ref> [5] </ref>.
Reference: [6] <author> R.E. Bennett. </author> <title> Justifying the acquisition of automated equipment. </title> <institution> Management Accounting (US), </institution> <year> 1987. </year> <pages> pages 39-46. </pages>
Reference-contexts: We show how temporal databases can serve this purpose. 1.2 Related work The lack of a unified approach that spans across the technological building blocks of a CIM system makes their management and integration into an existing organization a highly complex task <ref> [6] </ref>; [22]. Some examples of attempts to model CIM systems follow. SofTech's Structured Analysis and Design Technique (SADT), later extended to the IDEF0, models tasks of the organization as functions transforming input into output via a control mechanism [43].
Reference: [7] <author> D. Botzer. </author> <title> Active database optimization. </title> <type> Master's thesis, </type> <institution> Technion-Israel Institute of Technology, </institution> <month> Sep </month> <year> 1992. </year>
Reference-contexts: Since the model does not "know" about the logic of the action part, it is impossible to reason about the transitive closure of an event, that is, to foresee all the consequences of an update. This hampers the analysis of the application behaviour and its optimization [24], [38], <ref> [7] </ref>. 3. The semantics of the ECA model does not impose an inherently consistent execution model. Therefore, contradicting rules may co-exist, and the relationships and interactions among rules and mutual effect of rules on each other may not always be predictable.
Reference: [8] <author> U.S. Chakravarthy. </author> <title> Rule management and evaluation: An active DBMS perspective. </title> <journal> ACM SIGMOD Record, </journal> <volume> 18(3) </volume> <pages> 20-28, </pages> <month> Sep </month> <year> 1989. </year>
Reference-contexts: The active database research area comprises languages and tools, designed to provide the database with the ability to detect events and activate operations in response. The following points have motivated the establishment of active databases <ref> [8] </ref>. * support of event-driven operations, especially in time-constrained applications, such as process control, network management and battle control; * maintenance of derived data and views; and * consistency enforcement, i.e., enforcement of data interchange and configuration management. <p> A prominent paradigm in active databases is Event-Condition-Action (ECA), proposed in the HiPaC 5 project <ref> [8] </ref>. <p> However, the active part of the model is based on imperative programming and lacks proper mechanisms to support database consistency. 7 Other works, including <ref> [8] </ref>, [21], and [10], add temporal events to active databases, but do handle temporal conditions or temporal actions. These works have a common drawback which stems from the fact that the functionality provided by active databases extended with temporal events is a subset of the functionality of temporal active databases.
Reference: [9] <author> J. Clifford and A. Crocker. </author> <title> The historical relational data model (hrdm) and algebra based on lifespans. </title> <booktitle> In Proceedings of the International Conference on Data Engineering, </booktitle> <pages> pages 528-537, </pages> <month> Feb </month> <year> 1987. </year>
Reference-contexts: Such a database sup-ports rules and can control the flow of data in response to rules' activation. The concept of data dependencies was defined in [24] and within the PARDES project [15] and its extension TAPUZ [16]. Temporal semantics was dealt with in works on temporal databases, including <ref> [9] </ref>, [40], [19], [32], [45], [42], and [33]. Temporal databases provide temporal support at the system level, relieving users from the need to explicitly model the temporal effect. Novice users can use time defaults, instead of specifying the temporal elements that are associated with every data item.
Reference: [10] <author> D. Dey, T.M. Barron, and V.C. Storey. </author> <title> Events in representation of temporal data. </title> <booktitle> In Proceedings of the Workshop on Information Technologies & Systems (WITS), </booktitle> <pages> pages 241-253, </pages> <month> Dec </month> <year> 1992. </year>
Reference-contexts: However, the active part of the model is based on imperative programming and lacks proper mechanisms to support database consistency. 7 Other works, including [8], [21], and <ref> [10] </ref>, add temporal events to active databases, but do handle temporal conditions or temporal actions. These works have a common drawback which stems from the fact that the functionality provided by active databases extended with temporal events is a subset of the functionality of temporal active databases.
Reference: [11] <author> D. Dori. </author> <title> Object-process analysis: Maintaining the balance between system structure and behavior. </title> <journal> Journal of Logic and Computation, </journal> <volume> 5(93-30):1-23, </volume> <year> 1995. </year>
Reference: [12] <author> G. Doumeingts. </author> <title> Grai integrated method: A methodology to implement cim in the enterprise. </title> <editor> In A.W. Scheer, editor, </editor> <booktitle> Proceedings of Workshop on Implementing CIM, </booktitle> <pages> pages 39-46, Saarbrucken, </pages> <year> 1987. </year>
Reference-contexts: This system represents inputs, outputs and controllers at a level of graphical labels, with no underlying information structures or database functionalities. The GRAI approach <ref> [12] </ref> comprises tools for identifying decisions and the associated control horizons and frequencies. It examines physical and managerial activities and the information required to model particular decisions. Each of these systems consider only a single main aspect of the organization requirements (decision making in GRAI, and information structure in IDEF0).
Reference: [13] <author> M.L. Edara and S.K. Gadia. </author> <title> Updates and incremental recomputation of active relational expressions in temporal databases. </title> <booktitle> In Proceedings of the International Workshop on an Infrastructure for Temporal Database, </booktitle> <address> Arlington,TX, </address> <month> June </month> <year> 1993. </year>
Reference-contexts: Other models, including [4], [39] and [49], also enforce a single value for each time point. Consequently, a mechanism to handle simultaneous values is either disabled or applied in an unnatural manner. Several works, including [28], [2], [45], [50], <ref> [13] </ref> and [37], have investigated aspects of temporal active databases. In [28], a limited active framework was introduced, in which past states that are not explicitly stored, can be inferred from the current state, using ground rules. Integrity constraints that vary with time are discussed in [2].
Reference: [14] <author> O. Etzion. </author> <title> Active handling of incomplete or exceptional information in database systems. </title> <booktitle> In Proceedings of the Workshop on Information Technologies & Systems (WITS), </booktitle> <pages> pages 46-60, </pages> <month> Dec </month> <year> 1991. </year>
Reference-contexts: A constraint enforcement is a data-driven activity, i.e., when one of the participating variables in a constraint is modified, the constraint validity is evaluated, and if the constraint is violated, an exception handler is invoked <ref> [14] </ref>. Two constraint examples follows. 1. (c1) Inventory-Levels.Minimal Inventory-Levels.Maximal The constraint (c1) restricts the upper/lower bounds on the different inventory levels. 2. (c2) Inventory-Levels.Current Inventory-Levels.Maximal An update that either increases Inventory-Levels.Current or decreases Inventory-levels.Maximal acti vates the constraint (c2) to restore the database consistency.
Reference: [15] <author> O. Etzion. </author> <title> PARDES | a data-driven oriented active database model. </title> <booktitle> SIGMOD RECORD, </booktitle> <volume> 22(1) </volume> <pages> 7-14, </pages> <month> Mar </month> <year> 1993. </year>
Reference-contexts: Such a database sup-ports rules and can control the flow of data in response to rules' activation. The concept of data dependencies was defined in [24] and within the PARDES project <ref> [15] </ref> and its extension TAPUZ [16]. Temporal semantics was dealt with in works on temporal databases, including [9], [40], [19], [32], [45], [42], and [33]. Temporal databases provide temporal support at the system level, relieving users from the need to explicitly model the temporal effect. <p> We assume an append-only database, in which changes can be introduced to data and meta-data (including data dependencies). Each one of these changes can be either retroactive or proactive. Data dependencies are presented by using invariants <ref> [15] </ref>. Invariants are consistency assertions that the database should maintain at all times. For example, the invariant Total-Price := sum (Quantity * Price-Per-Unit) states that a modification of an order quantity or a part quantity requires re-computation of the total order price.
Reference: [16] <author> O. Etzion. Tapuz: </author> <title> an information repository approach to active database applications. </title> <type> Technical Report ISE-TR-94-2, </type> <institution> Technion-Israel Institute of Technology, </institution> <month> Dec </month> <year> 1994. </year>
Reference-contexts: Such a database sup-ports rules and can control the flow of data in response to rules' activation. The concept of data dependencies was defined in [24] and within the PARDES project [15] and its extension TAPUZ <ref> [16] </ref>. Temporal semantics was dealt with in works on temporal databases, including [9], [40], [19], [32], [45], [42], and [33]. Temporal databases provide temporal support at the system level, relieving users from the need to explicitly model the temporal effect.
Reference: [17] <author> O. Etzion, D. Dori, and S.Y. Nof. </author> <title> Active coordination of cim multi database system. </title> <journal> International Journal of Computer Integrated Manufacturing, </journal> <volume> 8(2) </volume> <pages> 116-125, </pages> <year> 1995. </year> <month> 30 </month>
Reference-contexts: The lack of a common language for the different objects in CIM is one of the obstacles on the way to achieving a comprehensive CIM system. Recent work <ref> [17] </ref> has used data inter-dependencies to construct a coordinator as a tool for satisfying the cooperation requirement. A coordinator is a database that uses a global data dictionary of the data and its organization in different machines to allow transparent access to each data item on any machine. <p> Database operations are transparently translated by the coordinator to the "language" of the appropriate machine. In this paper we use a temporal database and data dependencies to extend the support of CIM applications discussed in <ref> [17] </ref>. The database supports the following three features, which are demonstrated in the CIM domain. 1. Simultaneous values: To trace and audit knowledge that was available in the past, we need to maintain historical knowledge along with the current knowledge.
Reference: [18] <author> O. Etzion, A. Gal, and A. Segev. </author> <title> Temporal active databases. </title> <booktitle> In Proceedings of the International Workshop on an Infrastructure for Temporal Database, </booktitle> <month> June </month> <year> 1993. </year>
Reference-contexts: We present and demonstrate the main principles of temporal representation, which is further discussed in <ref> [18] </ref>. 3.1 Time Perspectives As argued in [41], more than one type of time is needed to be associated with a variable's value to record its behavior over time. A basic set of time types consists of the following three time definitions. <p> This time type may be implemented by using a transaction commit time, i.e., the time point at which a transaction is (successfully) terminated. Decision Time (t d ) the time at which a data item's value was decided in the database's domain of discourse <ref> [18] </ref>. This time point denotes the time at which an event occurred, or the time at which a decision was made. For example, if a new Price-Per-Unit was set for a product, t d would be the time point of the decision regarding the new price.
Reference: [19] <author> S.K. Gadia. </author> <title> The role of temporal elements in temporal databases. </title> <journal> Data Engineering Bulletin, </journal> <volume> 7 </volume> <pages> 197-203, </pages> <year> 1988. </year>
Reference-contexts: The concept of data dependencies was defined in [24] and within the PARDES project [15] and its extension TAPUZ [16]. Temporal semantics was dealt with in works on temporal databases, including [9], [40], <ref> [19] </ref>, [32], [45], [42], and [33]. Temporal databases provide temporal support at the system level, relieving users from the need to explicitly model the temporal effect. Novice users can use time defaults, instead of specifying the temporal elements that are associated with every data item. <p> Valid Time (t v ) the set of time points at which the data item is considered to be true in the modeled reality. The valid time is expressed using a temporal element <ref> [19] </ref>, which is a time-point or an interval [t s , t e ], where t s and t e are the interval start and end times, respectively, or a collection of intervals and/or time-points. 17 The relationships among the various time types are expressed by two constraints. 1. t s
Reference: [20] <author> A. Gal, O. Etzion, and A. Segev. </author> <title> Representation of highly-complex knowledge in a database. </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 3(2) </volume> <pages> 185-203, </pages> <month> Mar </month> <year> 1994. </year>
Reference-contexts: To exemplify the use of state-elements, we show below a variable state with three state-elements of the variable Current-Consumption-Ratio of Bolt, as assembled for Double-Disk-Flange. 2 Other attributes of information regarding the datum source, validity, accessibility, etc., can be added to a state-element. These extensions are discussed in <ref> [20] </ref>. 18 STATE ELEMENT VALUE TEMPORAL EXTENSION 1..M PROPERTY VARIABLE VARIABLE STATE LEGEND: OBJECT CLASS AGGREGATION RELATION (s1)=f 6; ft x = Sep: 1 1995; 8:02am; t d = Sep: 1 1995; 8:00am; t v = [Sep: 1 1995 8:00am; 1)gg (s3)=f 6; value ft x = Sep: 1 1995; 9:05am;
Reference: [21] <author> N. Gehani, H.V. Jagadish, and O. Shmueli. </author> <title> Composite event specification in active databases. </title> <booktitle> In International Conference on Very Large Databases, </booktitle> <address> Vancouver, Canada, </address> <month> Aug </month> <year> 1992. </year>
Reference-contexts: However, the active part of the model is based on imperative programming and lacks proper mechanisms to support database consistency. 7 Other works, including [8], <ref> [21] </ref>, and [10], add temporal events to active databases, but do handle temporal conditions or temporal actions. These works have a common drawback which stems from the fact that the functionality provided by active databases extended with temporal events is a subset of the functionality of temporal active databases.
Reference: [22] <author> R.H. Hayes and R. Jaikumar. </author> <title> Manufacturing's crisis: New technologies, obsolete organizations. </title> <booktitle> Harvard Business Review, </booktitle> <pages> pages 77-85, </pages> <month> Sep </month> <year> 1988. </year>
Reference-contexts: We show how temporal databases can serve this purpose. 1.2 Related work The lack of a unified approach that spans across the technological building blocks of a CIM system makes their management and integration into an existing organization a highly complex task [6]; <ref> [22] </ref>. Some examples of attempts to model CIM systems follow. SofTech's Structured Analysis and Design Technique (SADT), later extended to the IDEF0, models tasks of the organization as functions transforming input into output via a control mechanism [43].
Reference: [23] <author> F. Hillier and J. Liberman. </author> <booktitle> Introduction to Operating Research, </booktitle> <pages> pages 369-382. </pages> <publisher> McGraw-Hill Publishing Company, </publisher> <address> fifth edition, </address> <year> 1990. </year>
Reference-contexts: The second number is the consumption ratio, i.e., the running average number of parts actually required for assembly of a single product due to fallout in the manufacturing process. The consumption ratio is a derived information, updated and refined over time. A PERT network <ref> [23] </ref> for manufacturing the product can be automatically extracted from the knowledge about the nodes in the product tree.
Reference: [24] <author> S. Hudson and R. King. CACTIS: </author> <title> A database system for specification functionality defined data. </title> <booktitle> In Proceedings of the IEEE OOBDS Workshop, </booktitle> <pages> pages 26-37, </pages> <month> Sep </month> <year> 1986. </year>
Reference-contexts: Since the model does not "know" about the logic of the action part, it is impossible to reason about the transitive closure of an event, that is, to foresee all the consequences of an update. This hampers the analysis of the application behaviour and its optimization <ref> [24] </ref>, [38], [7]. 3. The semantics of the ECA model does not impose an inherently consistent execution model. Therefore, contradicting rules may co-exist, and the relationships and interactions among rules and mutual effect of rules on each other may not always be predictable. <p> Such a database sup-ports rules and can control the flow of data in response to rules' activation. The concept of data dependencies was defined in <ref> [24] </ref> and within the PARDES project [15] and its extension TAPUZ [16]. Temporal semantics was dealt with in works on temporal databases, including [9], [40], [19], [32], [45], [42], and [33].
Reference: [25] <author> H.R. Jorysz and F.B. Vernadat. </author> <title> Cim-osa part 1: Total enterprise modelling and function view. </title> <journal> Journal of CIM, </journal> <volume> 3(3 and </volume> 4):144-156, 1990. 
Reference-contexts: For example, the IDEM system [48], which is a case-driven tool, pays little attention to data, which is the main constituent of database systems. This is a source of problems, such as incorrect presentation of data items and overly complex representation of certain activities. CIM-OSA <ref> [25] </ref>, [26] is an open-systems architecture which defines an integrated methodology to support all phases of a CIM system life-cycle, from requirements specification, through system design, implementation, and operation to maintenance.
Reference: [26] <author> H.R. Jorysz and F.B. Vernadat. </author> <title> Cim-osa part 2: Information view. </title> <journal> Journal of CIM, </journal> <volume> 3(3 and </volume> 4):157-167, 1990. 
Reference-contexts: For example, the IDEM system [48], which is a case-driven tool, pays little attention to data, which is the main constituent of database systems. This is a source of problems, such as incorrect presentation of data items and overly complex representation of certain activities. CIM-OSA [25], <ref> [26] </ref> is an open-systems architecture which defines an integrated methodology to support all phases of a CIM system life-cycle, from requirements specification, through system design, implementation, and operation to maintenance.
Reference: [27] <author> S. Joshi and T.C. Chang. </author> <title> Graph-based heuristics for recognition of machined features from a 3-D solid model. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 20(2) </volume> <pages> 58-66, </pages> <year> 1987. </year>
Reference-contexts: All three types of product representations must be coherent: changing the product definition in one of them must be reflected in the others. Two possible ways to achieve coherence is to use feature extraction [30], <ref> [27] </ref> and feature definition language [29]. An Engineering drawing is a 2-D description of a product or of part (s) of a product. An engineering drawing is either a manufacturing drawing or an assembly drawing.
Reference: [28] <author> M.R. </author> <title> Klopprogge and P.C. Lockemann. Modeling information preserving databases; consequences of the concept of time. </title> <booktitle> In Proceedings of the International Conference of VLDB, </booktitle> <address> Florance, Italy, </address> <year> 1983. </year>
Reference-contexts: Other models, including [4], [39] and [49], also enforce a single value for each time point. Consequently, a mechanism to handle simultaneous values is either disabled or applied in an unnatural manner. Several works, including <ref> [28] </ref>, [2], [45], [50], [13] and [37], have investigated aspects of temporal active databases. In [28], a limited active framework was introduced, in which past states that are not explicitly stored, can be inferred from the current state, using ground rules. <p> Consequently, a mechanism to handle simultaneous values is either disabled or applied in an unnatural manner. Several works, including <ref> [28] </ref>, [2], [45], [50], [13] and [37], have investigated aspects of temporal active databases. In [28], a limited active framework was introduced, in which past states that are not explicitly stored, can be inferred from the current state, using ground rules. Integrity constraints that vary with time are discussed in [2].
Reference: [29] <author> T. Laakko and M. Mantyla. </author> <title> A new feature recognition algorithm. </title> <booktitle> In Proceedings of Computer Applications in Production and Engineering (CAPE '91), </booktitle> <pages> pages 369-376, </pages> <address> Amsterdam, </address> <month> Sep </month> <year> 1991. </year> <pages> Elsevier. </pages>
Reference-contexts: All three types of product representations must be coherent: changing the product definition in one of them must be reflected in the others. Two possible ways to achieve coherence is to use feature extraction [30], [27] and feature definition language <ref> [29] </ref>. An Engineering drawing is a 2-D description of a product or of part (s) of a product. An engineering drawing is either a manufacturing drawing or an assembly drawing.
Reference: [30] <author> Y.C. Lee and K.S. Fu. </author> <title> Machine understanding of CSG: Extraction and unification of manufacturing features. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 7(1) </volume> <pages> 20-32, </pages> <year> 1987. </year>
Reference-contexts: All three types of product representations must be coherent: changing the product definition in one of them must be reflected in the others. Two possible ways to achieve coherence is to use feature extraction <ref> [30] </ref>, [27] and feature definition language [29]. An Engineering drawing is a 2-D description of a product or of part (s) of a product. An engineering drawing is either a manufacturing drawing or an assembly drawing.
Reference: [31] <author> Y. Monden. </author> <title> Toyota production system: Practical approach to production management. </title> <institution> American Institute of Industrial Engineering, Atlanta, Georgia, </institution> <year> 1983. </year> <month> 31 </month>
Reference-contexts: Hence, simultaneous values of a number of versions need to be maintained. This approach can advance the production of multi-version products, analogous to the advances that have been achieved in areas such as production management <ref> [31] </ref>. The use of simultaneous values would facilitate the adoption of a product to the needs of specific customers, rather than using the conventional version method.
Reference: [32] <author> S.B. Navathe and R. Ahmed. </author> <title> A temporal relational model and a query language. </title> <journal> Information Sciences, </journal> <volume> 49 </volume> <pages> 147-175, </pages> <year> 1989. </year>
Reference-contexts: The concept of data dependencies was defined in [24] and within the PARDES project [15] and its extension TAPUZ [16]. Temporal semantics was dealt with in works on temporal databases, including [9], [40], [19], <ref> [32] </ref>, [45], [42], and [33]. Temporal databases provide temporal support at the system level, relieving users from the need to explicitly model the temporal effect. Novice users can use time defaults, instead of specifying the temporal elements that are associated with every data item.
Reference: [33] <author> N. Pissinou. </author> <title> Towards an infrastructure for temporal databases|A workshop report. </title> <booktitle> ACM SIGMOD Record, </booktitle> <address> 23(1):35, </address> <year> 1994. </year>
Reference-contexts: The concept of data dependencies was defined in [24] and within the PARDES project [15] and its extension TAPUZ [16]. Temporal semantics was dealt with in works on temporal databases, including [9], [40], [19], [32], [45], [42], and <ref> [33] </ref>. Temporal databases provide temporal support at the system level, relieving users from the need to explicitly model the temporal effect. Novice users can use time defaults, instead of specifying the temporal elements that are associated with every data item.
Reference: [34] <author> D. Plexousakis. </author> <title> An ontology and a possible-worlds semantics for telos. </title> <type> Technical Report KRR-TR-90-7, </type> <institution> University of Toronto, </institution> <month> Sep </month> <year> 1990. </year>
Reference-contexts: The term 1 stands for the fact that the value of the upper bound of the time interval is believed to hold forever <ref> [34] </ref>, yet it can be modified. An interval of the type [t 1 ; t 2 ) contains the time point t 1 but not t 2 . The default settings can change from one application to another.
Reference: [35] <author> P. Ranky. </author> <title> Computer-Integrated Manufacturing. </title> <publisher> Prentice-Hall, </publisher> <year> 1986. </year>
Reference: [36] <author> E. Rose and A. Segev. </author> <title> Toodm-a temporal, object-oriented data model with temporal constraints. </title> <booktitle> In Proceedings of the International Conference on the Entity-Relationship Approach, </booktitle> <pages> pages 205-229, </pages> <address> San Mateo, California, </address> <year> 1991. </year>
Reference-contexts: For example, we can issue a query of the form: what was the value of Current--Consumption-Ration of Bolt as assembled for Double-Disk-Flange on Sep. 1 1995 at 8:15am, as seen from a viewpoint t &lt;Sep. 1 1995 at 8:30am. Many temporal models (e.g., <ref> [36] </ref>) classify this type of real world changes as corrections, thereby blurring the distinction between changes in data referencing the real world model and corrections of erroneous values that were inserted into the database as a result of typographical or other errors.
Reference: [37] <author> N.L. Sarda. HSQL: </author> <title> Historical query language. In Temporal Databases, </title> <booktitle> chapter 5, </booktitle> <pages> pages 110-140. </pages> <publisher> The Benjamin/Commings Publishing Company, Inc., </publisher> <address> Redwood City, CA., </address> <year> 1993. </year>
Reference-contexts: Other models, including [4], [39] and [49], also enforce a single value for each time point. Consequently, a mechanism to handle simultaneous values is either disabled or applied in an unnatural manner. Several works, including [28], [2], [45], [50], [13] and <ref> [37] </ref>, have investigated aspects of temporal active databases. In [28], a limited active framework was introduced, in which past states that are not explicitly stored, can be inferred from the current state, using ground rules. Integrity constraints that vary with time are discussed in [2].
Reference: [38] <author> A. Segev and J.L. Zaho. </author> <title> Data management for large rule systems. </title> <booktitle> In proceedings of VLDB 91, </booktitle> <year> 1991. </year>
Reference-contexts: Since the model does not "know" about the logic of the action part, it is impossible to reason about the transitive closure of an event, that is, to foresee all the consequences of an update. This hampers the analysis of the application behaviour and its optimization [24], <ref> [38] </ref>, [7]. 3. The semantics of the ECA model does not impose an inherently consistent execution model. Therefore, contradicting rules may co-exist, and the relationships and interactions among rules and mutual effect of rules on each other may not always be predictable.
Reference: [39] <author> A. Shoshani and K. Kawagoe. </author> <title> Temporal data management. </title> <booktitle> In Proceedings of the International Conference of VLDB, </booktitle> <pages> pages 79-88, </pages> <month> Aug </month> <year> 1986. </year>
Reference-contexts: For example, in [40], the valid time of a new value for a data item is derived by subtracting all existing valid times for that data item from the user defined valid time. Other models, including [4], <ref> [39] </ref> and [49], also enforce a single value for each time point. Consequently, a mechanism to handle simultaneous values is either disabled or applied in an unnatural manner. Several works, including [28], [2], [45], [50], [13] and [37], have investigated aspects of temporal active databases.
Reference: [40] <author> R. Snodgrass. </author> <title> The temporal query language TQUEL. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 12(2) </volume> <pages> 247-298, </pages> <month> June </month> <year> 1987. </year>
Reference-contexts: Such a database sup-ports rules and can control the flow of data in response to rules' activation. The concept of data dependencies was defined in [24] and within the PARDES project [15] and its extension TAPUZ [16]. Temporal semantics was dealt with in works on temporal databases, including [9], <ref> [40] </ref>, [19], [32], [45], [42], and [33]. Temporal databases provide temporal support at the system level, relieving users from the need to explicitly model the temporal effect. Novice users can use time defaults, instead of specifying the temporal elements that are associated with every data item. <p> The ability to update simultaneous values results in new features of both update and retrieval operations in temporal databases. Most of the research in this area has focused on the structural semantics, using limited update protocols. For example, in <ref> [40] </ref>, the valid time of a new value for a data item is derived by subtracting all existing valid times for that data item from the user defined valid time. Other models, including [4], [39] and [49], also enforce a single value for each time point.
Reference: [41] <author> R. Snodgrass and I. Ahn. </author> <title> Temporal databases. </title> <journal> IEEE Computer, </journal> <volume> 19 </volume> <pages> 35-42, </pages> <month> Sep </month> <year> 1986. </year>
Reference-contexts: We present and demonstrate the main principles of temporal representation, which is further discussed in [18]. 3.1 Time Perspectives As argued in <ref> [41] </ref>, more than one type of time is needed to be associated with a variable's value to record its behavior over time. A basic set of time types consists of the following three time definitions.
Reference: [42] <author> R. Snodgrass et al. </author> <title> TSQL2 language specification. </title> <journal> ACM SIGMOD Record, </journal> <volume> 23(1) </volume> <pages> 65-86, </pages> <month> Mar </month> <year> 1994. </year>
Reference-contexts: The concept of data dependencies was defined in [24] and within the PARDES project [15] and its extension TAPUZ [16]. Temporal semantics was dealt with in works on temporal databases, including [9], [40], [19], [32], [45], <ref> [42] </ref>, and [33]. Temporal databases provide temporal support at the system level, relieving users from the need to explicitly model the temporal effect. Novice users can use time defaults, instead of specifying the temporal elements that are associated with every data item.
Reference: [43] <institution> Meta Software. </institution> <note> Design/idef user's manual, </note> <year> 1990. </year>
Reference-contexts: Some examples of attempts to model CIM systems follow. SofTech's Structured Analysis and Design Technique (SADT), later extended to the IDEF0, models tasks of the organization as functions transforming input into output via a control mechanism <ref> [43] </ref>. This system represents inputs, outputs and controllers at a level of graphical labels, with no underlying information structures or database functionalities. The GRAI approach [12] comprises tools for identifying decisions and the associated control horizons and frequencies.
Reference: [44] <author> S.Y.W. Su. </author> <title> Modeling integrated manufacturing data with sam*. </title> <journal> IEEE Computer, </journal> <volume> 19 </volume> <pages> 34-49, </pages> <year> 1986. </year>
Reference-contexts: Corrections result in overwrites or deletions, resulting in possible loss of information. The temporal update uses a restricted update protocol. The information modeling and analysis methodology defined for CIM-OSA is largely based on a predecessor of the OSAM*/T, called the SAM* model <ref> [44] </ref>. It is possible to extend the CIM-OSA's information modeling to include rules and some temporal elements from OSAM*/T, but the notions of simultaneous values and data dependencies would still not be supported.
Reference: [45] <author> S.Y.W. Su and H.M. Chen. </author> <title> A temporal knowledge representation model OSAM*/T and its query language OQL/T. </title> <booktitle> In Proceedings of the International Conference on VLDB, </booktitle> <year> 1991. </year>
Reference-contexts: The concept of data dependencies was defined in [24] and within the PARDES project [15] and its extension TAPUZ [16]. Temporal semantics was dealt with in works on temporal databases, including [9], [40], [19], [32], <ref> [45] </ref>, [42], and [33]. Temporal databases provide temporal support at the system level, relieving users from the need to explicitly model the temporal effect. Novice users can use time defaults, instead of specifying the temporal elements that are associated with every data item. <p> Other models, including [4], [39] and [49], also enforce a single value for each time point. Consequently, a mechanism to handle simultaneous values is either disabled or applied in an unnatural manner. Several works, including [28], [2], <ref> [45] </ref>, [50], [13] and [37], have investigated aspects of temporal active databases. In [28], a limited active framework was introduced, in which past states that are not explicitly stored, can be inferred from the current state, using ground rules. Integrity constraints that vary with time are discussed in [2]. <p> In [28], a limited active framework was introduced, in which past states that are not explicitly stored, can be inferred from the current state, using ground rules. Integrity constraints that vary with time are discussed in [2]. The OSAM*/T, presented in <ref> [45] </ref>, is an object-based temporal knowledge representation model that combines update rules with temporal characteristics, extending the object-oriented model OSAM* [46]. Rules in OSAM*/T are used to capture temporal semantics beyond the valid start and end times of a value.
Reference: [46] <author> S.Y.W. Su, H. Lam, and V. Krishnamurthy. </author> <title> An object-oriented semantic association model (OSAM*). </title> <editor> In S.T. Kumera et al., editors, </editor> <booktitle> AI: Manufacturing Theory and Practice, chapter 17. </booktitle> <address> Norcross, GA, </address> <year> 1989. </year>
Reference-contexts: Integrity constraints that vary with time are discussed in [2]. The OSAM*/T, presented in [45], is an object-based temporal knowledge representation model that combines update rules with temporal characteristics, extending the object-oriented model OSAM* <ref> [46] </ref>. Rules in OSAM*/T are used to capture temporal semantics beyond the valid start and end times of a value. Corrections result in overwrites or deletions, resulting in possible loss of information. The temporal update uses a restricted update protocol.
Reference: [47] <editor> S.D. Urban et al. </editor> <title> A heterogeneous, active database architecture for engineering data management. </title> <journal> International Journal of CIM, </journal> <volume> 7(5) </volume> <pages> 276-293, </pages> <year> 1994. </year> <month> 32 </month>
Reference-contexts: Therefore, contradicting rules may co-exist, and the relationships and interactions among rules and mutual effect of rules on each other may not always be predictable. A heterogeneous, active database architecture for engineering data management was proposed in <ref> [47] </ref>. The active element is based on the ECA approach, and thus suffers from its aforementioned shortcomings.
Reference: [48] <author> W. Wang, K. Popplewell, and R. Bell. </author> <title> An integrated multi-view system description approach to ap-proximate factory modelling. </title> <journal> Journal of CIM, </journal> <volume> 6(3) </volume> <pages> 165-174, </pages> <year> 1993. </year>
Reference-contexts: blocks meet the needs of a CIM system at the level of loosely connected "islands of automation." Consequently, such integration has no unifying methodology that can "challenge the old-fashioned ways of management thinking and practice in many manufacturing organizations, and thereafter assist in constructing flexible structures and formulating competitive strategies" <ref> [48] </ref>. <p> Other aspects are either omitted or dealt with partially. 4 Consequently, a variety of tools are needed to satisfy the entire spectrum of organizational requirements. Attempts to develop multi-faceted systems have not managed to cover all the functionalities required for CIM systems. For example, the IDEM system <ref> [48] </ref>, which is a case-driven tool, pays little attention to data, which is the main constituent of database systems. This is a source of problems, such as incorrect presentation of data items and overly complex representation of certain activities.
Reference: [49] <author> G. Wiederhold, S. Jajodia, and W. Litwin. </author> <title> Dealing with granularity of time in temporal databases. </title> <editor> In R. Anderson et al., editors, </editor> <booktitle> Lecture Notes in Computer Science 498, </booktitle> <pages> pages 124-140. </pages> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: For example, in [40], the valid time of a new value for a data item is derived by subtracting all existing valid times for that data item from the user defined valid time. Other models, including [4], [39] and <ref> [49] </ref>, also enforce a single value for each time point. Consequently, a mechanism to handle simultaneous values is either disabled or applied in an unnatural manner. Several works, including [28], [2], [45], [50], [13] and [37], have investigated aspects of temporal active databases.
Reference: [50] <author> G.T.J. Wuu. SERQL: </author> <title> An ER query language supporting temporal data retrieval. </title> <booktitle> In The Proceedings of the 10th International Pheonix Conference on Computers and Communications, </booktitle> <month> Mar </month> <year> 1991. </year> <month> 33 </month>
Reference-contexts: Other models, including [4], [39] and [49], also enforce a single value for each time point. Consequently, a mechanism to handle simultaneous values is either disabled or applied in an unnatural manner. Several works, including [28], [2], [45], <ref> [50] </ref>, [13] and [37], have investigated aspects of temporal active databases. In [28], a limited active framework was introduced, in which past states that are not explicitly stored, can be inferred from the current state, using ground rules. Integrity constraints that vary with time are discussed in [2]. <p> It is possible to extend the CIM-OSA's information modeling to include rules and some temporal elements from OSAM*/T, but the notions of simultaneous values and data dependencies would still not be supported. The planning database model, presented in <ref> [50] </ref>, is based on the Extended Entity-Relationship (EER) model, in which the database components change states as a result of external events.
References-found: 50

