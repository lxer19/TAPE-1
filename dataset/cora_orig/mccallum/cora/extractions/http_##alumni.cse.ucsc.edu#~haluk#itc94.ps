URL: http://alumni.cse.ucsc.edu/~haluk/itc94.ps
Refering-URL: http://alumni.cse.ucsc.edu/~haluk/publications.html
Root-URL: http://www.cse.ucsc.edu
Title: Fastpath: A Path-Delay Test Generator for Standard Scan Designs  
Author: Bill Underwood Wai-On Law Sungho Kang Haluk Konuk 
Address: Santa Cruz  
Affiliation: Semiconductor Systems Design Technology Dept. of Electrical Eng. Computer Eng. Dept. Motorola, Inc. Yonsei University UC at  
Abstract: While previous approaches assume enhanced scan designs or cannot guarantee robustness, Fastpath generates robust path-delay tests for standard scan designs including functionally-described blocks. Preliminary results show effective and memory-efficient operation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Pramanick and S. M. Reddy, </author> <title> "On the Detection of Delay Faults," </title> <booktitle> in Proc. </booktitle> <address> ITC, </address> <year> 1988, </year> <pages> pp. 845-856. </pages>
Reference: [2] <author> K-T. Cheng, S. Devadas and K. Keutzer, </author> <title> "Delay-Fault Test Generation and Synthesis for Testability Under A Standard Scan Design Methodology," </title> <journal> in IEEE Trans. CAD, </journal> <month> Aug. </month> <year> 1993, </year> <pages> pp. 1217-1231. </pages>
Reference-contexts: Tests for a path delay fault that do not meet the requirements of a robust test are called non-robust tests. We wish to distinguish two sub-types of non-robust tests. The type of non-robust test that results from "an approximate method for generating robust tests" <ref> [2] </ref> we shall refer to as a strong non-robust test (SNR). <p> The traditional approach for generating tests for sequential circuits, whether for stuck faults [14,15] or for path-delay faults [2,10,11], begins with the last time frame and proceeds backward in time, and we also adopt this reverse time processing approach. Cheng, Devadas and Keutzer <ref> [2] </ref> have noted that a procedure operating on a single time frame cannot guarantee robust tests since a circuit element that has the same logic value for both time frames cannot be guaranteed to be hazard-free. We use the large set of logic values mentioned earlier, to guarantee robustness.
Reference: [3] <author> M. Schulz, F. Fink and K. Fuchs, </author> <title> "Parallel Pattern Fault Simulation of Path Delay Faults," </title> <booktitle> in Proc. DAC, </booktitle> <year> 1989, </year> <pages> pp. 357-363. </pages>
Reference-contexts: We wish to distinguish two sub-types of non-robust tests. The type of non-robust test that results from "an approximate method for generating robust tests" [2] we shall refer to as a strong non-robust test (SNR). Schulz, Fink and Fuchs <ref> [3] </ref> have used an approach to non-robust tests that requires that the values in the second clock cycle be the same as those for the robust test, while the only required value for the first clock cycle is the initial value at the head of the path.
Reference: [4] <author> M. Smith, </author> <title> "Adaptation of a Switch Level Model for Digital Circuits Utilizing Steering Logic," </title> <booktitle> in Proc. DAC, </booktitle> <year> 1985, </year> <pages> pp. 586-589. </pages>
Reference: [5] <author> E. -S. Park and M. R. Mercer, </author> <title> "Robust and Nonro-bust Tests for Path Delay Faults in a Combinational Circuit," </title> <booktitle> in Proc. </booktitle> <address> ITC, </address> <year> 1987, </year> <pages> pp. 1027-1034. </pages>
Reference: [6] <author> S. M. Reddy, C. Lin and S. Patil, </author> <title> "An Automatic Test Pattern Generator for the Detection of Path Delay Faults," </title> <booktitle> in Proc. </booktitle> <address> ICCAD, </address> <year> 1987, </year> <pages> pp. 284-287. </pages>
Reference: [7] <author> C. Lin and S. M. Reddy, </author> <title> "On Delay Fault Testing in Logic Circuits," </title> <journal> in IEEE Trans. on CAD, </journal> <month> Sep. </month> <year> 1987, </year> <pages> pp. 694-703. </pages>
Reference: [8] <author> C. T. Glover and M. R. Mercer, </author> <title> "A Method of Delay Fault Test Generation," </title> <booktitle> in Proc. DAC, </booktitle> <year> 1988, </year> <pages> pp. 90-95. </pages>
Reference: [9] <author> A. Pramanick and S. M. Reddy, </author> <title> "On Multiple Path Propagating Tests for Path Delay Faults," </title> <booktitle> in Proc. </booktitle> <address> ITC, </address> <year> 1991, </year> <pages> pp. 393-402. </pages>
Reference: [10] <author> K-T. Cheng, S. Devadas and K. Keutzer, </author> <title> "Partial Enhanced-Scan Approach to Robust Delay-Fault Test Generation for Sequential Circuits," </title> <booktitle> in Proc. </booktitle> <address> ITC, </address> <year> 1991, </year> <pages> pp. 403-410. </pages>
Reference: [11] <author> K-T. Cheng, S. Devadas and K. Keutzer, </author> <title> "Robust Delay-Fault Test Generation and Synthesis for Testability Under A Standard Scan Design Methodology," </title> <booktitle> in Proc. DAC, </booktitle> <year> 1991, </year> <pages> pp. 80-86. </pages>
Reference: [12] <author> B. Underwood, S. Kang and W. </author> <title> Law, "A Path-Delay Test Generator for Large VLSI Circuits," </title> <booktitle> in Proc. International Conference on VLSI and CAD, </booktitle> <year> 1993, </year> <pages> pp. 368-371. </pages>
Reference: [13] <author> K. Fuchs, H. Wittmann and K. Antreich, </author> <title> "Fast Test Pattern Generation for All Path Delay Faults Considering Various Test Classes," </title> <booktitle> in Proc. </booktitle> <address> ETC, </address> <year> 1993, </year> <pages> pp. 89-98. </pages>
Reference-contexts: XNOR gates BUFFERs, INVERTERs NMOS / PMOS / CMOS (unidirectional transistors) WIREs, tristate BUFFERs/INVERTERs AND-OR/OR-AND gates (4 types) AND-OR-INVERTER gates (4 types) OR-AND-INVERTER gates (4 types) 2-to-1 MUXes, 4-to-1 MUXes AND with some inverted inputs (3 types) OR with some inverted inputs (5 types) Custom Logic Blocks has been shown <ref> [13] </ref> that QQ logic values are required to form a complete set for this problem.
Reference: [14] <author> W-T. Cheng, </author> <title> "The Back Algorithm for Sequential Test Generation," </title> <booktitle> in Proc. ICCD, </booktitle> <year> 1988, </year> <pages> pp. 66-69. </pages>
Reference: [15] <author> R. Marlett, "EBT: </author> <title> A Comprehensive Test Generation Technique for Highly Sequential Circuits," </title> <booktitle> in Proc. DAC, </booktitle> <year> 1978, </year> <pages> pp. 335-339. </pages>
Reference: [16] <author> A. Ghosh, S. Devadas and A. </author> <title> Newton, "Test Generation for Highly Sequential Circuits," </title> <booktitle> in Proc. </booktitle> <address> ICCAD, </address> <year> 1989, </year> <pages> pp. 362-365. </pages>
Reference-contexts: We use the large set of logic values mentioned earlier, to guarantee robustness. The step of state transition between two time frames has been a focus of much work in test generation and design verification and has been approached in a variety of ways. Steed <ref> [16] </ref> and Dsteed [2,10,11] make use of the input combinations that set the inputs of sequential devices to logic one (ON-set) or logic zero (OFF-set) to guide the search process through state transitions.
Reference: [17] <author> H. Cho, S. Jeong, F. Somenzi and C. Pixley, </author> <title> "Synchronizing Sequences and Symbolic Traversal Techniques in Test Generation," in Journal of Electronic Testing: </title> <booktitle> Theory and Applications, </booktitle> <year> 1993, </year> <pages> pp. 19-31. </pages>
Reference-contexts: There is an obvious advantage in efficiency of the state space search, with the significant disadvantage of additional memory usage. Some test generation <ref> [17] </ref> and formal verification [18] techniques have used an approach based on binary decision diagrams (BDDs) to enumerate the complete set of possible state transitions for a sequential circuit.
Reference: [18] <author> C. Pixley and G. Biehl, </author> <title> "Calculating Resetability and Reset Sequences," </title> <booktitle> in Proc. </booktitle> <address> ICCAD, </address> <year> 1991, </year> <pages> pp. 376-379. </pages>
Reference-contexts: There is an obvious advantage in efficiency of the state space search, with the significant disadvantage of additional memory usage. Some test generation [17] and formal verification <ref> [18] </ref> techniques have used an approach based on binary decision diagrams (BDDs) to enumerate the complete set of possible state transitions for a sequential circuit.
Reference: [19] <author> F. Brglez, D. Bryan and K. Kozminski, </author> <title> "Combinational Profiles of Sequential Benchmark Circuits," </title> <booktitle> in Proc. </booktitle> <address> ISCAS, </address> <year> 1989, </year> <pages> pp. 1929-1934. </pages>
Reference: [20] <author> S. Kang, W. Law and B. Underwood, </author> <title> "Path-Delay Fault Simulation for a Standard Scan Design Method-olgy," </title> <booktitle> in Proc. ICCD, </booktitle> <year> 1994. </year>
Reference-contexts: Circuit Flip-flops Gates Custom Blocks Paths s1238 18 508 0 1000 s1494 6 647 0 1000 s9234 228 5597 0 1000 s15850 597 9772 0 1000 s38417 1636 22179 0 1000 BIU 880 4391 2179 106 ICU 362 1824 835 109 OPU 3160 36318 9835 379 Motorola path-delay fault simulator <ref> [20] </ref>. The figures for CPU time and memory usage for our program and for Dsteed [2,10,11] are given in Table 8. Dsteed is the only known path-delay test generator for standard scan designs.
References-found: 20

