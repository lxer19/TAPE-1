URL: http://www.acm.org/jacm/papers/jacm917.ps
Refering-URL: http://www.acm.org/jacm/Current.html
Root-URL: 
Email: Email karger@mit.edu.  (rajeev@cs.stanford.edu).  Email madhu@lcs.mit.edu.  
Title: Approximate Graph Coloring by Semidefinite Programming  
Author: David Karger Rajeev Motwani Madhu Sudan 
Note: karger. Supported by a Hertz Foundation Graduate Fellowship; by NSF Young Investigator Award CCR-9357849, with matching funds from IBM, Schlumberger Foundation, Shell Foundation and Xerox Corporation; and by NSF Career Award CCR-9624239  Supported by an Alfred P. Sloan Research Fellowship, an IBM Faculty Development Award, and NSF Young Investigator Award CCR-9357849, with matching funds from IBM, Mitsubishi, Schlumberger Foundation, Shell Foundation, and Xerox Corporation.  Work done when this author was at IBM's Thomas J.  
Web: URL http://theory.lcs.mit.edu  
Address: Cambridge, MA 02139.  Stanford, CA 94305  Cambridge, MA 02139.  Yorktown Heights, NY 10598.  
Affiliation: MIT Laboratory for Computer Science,  Department of Computer Science, Stanford University,  MIT Laboratory for Computer Science,  Watson Research Center,  
Abstract: We consider the problem of coloring k-colorable graphs with the fewest possible colors. We present a randomized polynomial time algorithm which colors a 3-colorable graph on n vertices with minfO( 1=3 log 1=2 log n); O(n 1=4 log 1=2 n)g colors where is the maximum degree of any vertex. Besides giving the best known approximation ratio in terms of n, this marks the first non-trivial approximation result as a function of the maximum degree . This result can be generalized to k-colorable graphs to obtain a coloring using minfO( 12=k log 1=2 log n); O(n 13=(k+1) log 1=2 n)g colors. Our results are inspired by the recent work of Goemans and Williamson who used an algorithm for semidefinite optimization problems, which generalize linear programs, to obtain improved approximations for the MAX CUT and MAX 2-SAT problems. An intriguing outcome of our work is a duality relationship established between the value of the optimum solution to our semidefinite program and the Lovasz #-function. We show lower bounds on the gap between the optimum solution of our semidefinite program and the actual chromatic number; by duality this also demonstrates interesting new facts about the #-function. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Aldous. </author> <title> Probability Approximations via the Poisson Clumping Heuristic. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1989. </year>
Reference: [2] <author> F. Alizadeh. </author> <title> Interior point methods in semidefinite programming with applications to combinatorial optimization. </title> <booktitle> In Proceedings of the 2nd MPS Conference on Integer Programming and Combinatorial Optimization, </booktitle> <institution> Carnegie-Mellon University, </institution> <year> 1992. </year> <note> To appear in SIAM Journal on Optimization. </note>
Reference-contexts: Besides giving the best known approximations in terms of n, our results are the first non-trivial approximations given in terms of . Our results are based on the recent work of Goemans and Williamson [21] who used an algorithm for semidefinite optimization problems (cf. <ref> [23, 2] </ref>) to obtain improved approximations for the MAX CUT and MAX 2-SAT problems. <p> This means there is a solution to the above semidefinite program with ff = 1=(k1). The ellipsoid method or other interior point based methods <ref> [23, 2] </ref> can be employed to find a feasible solution where the value of the objective is at most 1=(k 1) + ffi in time polynomial in n and log 1=ffi. <p> It follows from the definition that the strict vector chromatic number of any graph is lower bounded by the vector chromatic number. Theorem 8.1 The strict vector chromatic number of G is equal to #(G). Proof: The dual of our strict vector coloring semidefinite program is as follows (cf. <ref> [2] </ref>): maximize X where fp ij g is positive semidefinite subject to X p ij 1 p ij = 0 for (i; j) =2 E and i 6= j By duality, the value of this SDP is 1=(k 1) where k is the strict vector chromatic number.
Reference: [3] <author> N. Alon. </author> <type> Personal Communication, </type> <month> August </month> <year> 1994. </year>
Reference-contexts: Independent of our results, Szegedy [41] has also shown that a similar construction yields graphs with vector chromatic number at most 3 but which are not colorable using n 0:05 colors. Notice that the exponent obtained from his result is better than the one in Section 9. Alon <ref> [3] </ref> has obtained a slight improvement over Szegedy's bound by using an interesting variant of the Kneser graph construction. Finally, the main algorithm presented here has been derandomized in a recent work of Mahajan and Ramesh [35].
Reference: [4] <author> N. Alon and N. Kahale. </author> <title> A spectral technique for coloring random 3-colorable graphs. </title> <booktitle> In Proceedings of the Twenty-Sixth ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 346-353, </pages> <year> 1994. </year>
Reference-contexts: We show lower bounds on the gap between the optimum solution of our semidefinite program and the actual chromatic number; by duality this also demonstrates interesting new facts about the #-function. Alon and Kahale <ref> [4] </ref> use related techniques to devise a polynomial time algorithm for 3-coloring random graphs drawn from a "hard" distribution on the space of all 3-colorable graphs.
Reference: [5] <author> N. Alon and N. Kahale. </author> <title> Approximating the independence number via the Theta function. </title> <type> Manuscript, </type> <year> 1995. </year>
Reference-contexts: Thus no simple modification of the # function is likely to provide a much better approximation guarantee. In related results, Alon and Kahale <ref> [5] </ref> have also been able to use the semidefinite programming technique in conjunction with our techniques to obtain algorithms for computing bounds on the clique number of a graph with linear-sized cliques, improving upon some results due to Boppana and Halldorsson [10].
Reference: [6] <author> S. Arora, C. Lund, R. Motwani, M. Sudan and M. Szegedy. </author> <title> Proof Verification and Hardness of Approximation Problems. </title> <booktitle> In Proceedings 33rd Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp. 14-23, </pages> <year> 1992. </year> <month> 15 </month>
Reference-contexts: Recent results in the hardness of approximations indicate that it may be not possible to substantially improve the results described above. Lund and Yannakakis [34] used the results of Arora, Lund, Motwani, Sudan, and Szegedy <ref> [6] </ref> and Feige, Goldwasser, Lovasz, Safra, and Szegedy [17] to show that there exists a (small) constant * &gt; 0 such that no polynomial time algorithm can approximate the chromatic number of a graph to within a ratio of n * unless P = NP.
Reference: [7] <author> M. Bellare and M. Sudan. </author> <title> Improved Non-approximability Results. </title> <booktitle> In Proceedings of the Twenty-Sixth ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 184-193, </pages> <year> 1994. </year>
Reference: [8] <author> C. Berge. </author> <title> Graphs and Hypergraphs. </title> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1973. </year>
Reference-contexts: Determining the chromatic number of a graph is known to be NP-hard (cf. [20]). Besides its theoretical significance as a canonical NP-hard problem, graph coloring arises naturally in a variety of applications such as register allocation [11, 12, 13] and timetable/examination scheduling <ref> [8, 43] </ref>. In many applications which can be formulated as graph coloring problems, it suffices to find an approximately optimum graph coloring|a coloring of the graph with a small though non-optimum number of colors.
Reference: [9] <author> A. Blum. </author> <title> New approximation algorithms for graph coloring. </title> <journal> Journal of the ACM, </journal> <volume> 41 </volume> <pages> 470-516, </pages> <year> 1994. </year>
Reference-contexts: Wigderson [42] improved this bound by giving an elegant algorithm which uses O (n 11=(k1) ) colors to legally color a k-colorable graph. Subsequently, other polynomial time algorithms were provided by Blum <ref> [9] </ref> which use O (n 3=8 log 8=5 n) colors to legally color an n-vertex 3-colorable graph. This result generalizes to coloring a k-colorable graph with O (n 11=(k4=3) log 8=5 n) colors. <p> The bound just described is (marginally) weaker than the guarantee of a O (n 0:375 ) coloring due to Blum <ref> [9] </ref>. We now improve this result by constructing a semicoloring with fewer colors. 7 Rounding via Vector Projections In this section we start by proving the following more powerful version of Theorem 6.2. A simple application of Wigderson's technique to this algorithm yields our final coloring algorithm.
Reference: [10] <author> R.B. Boppana and M.M. Halldorsson. </author> <title> Approximating maximum independent sets by excluding subgraphs. </title> <journal> BIT, </journal> <volume> 32 </volume> <pages> 180-196, </pages> <year> 1992. </year>
Reference-contexts: In related results, Alon and Kahale [5] have also been able to use the semidefinite programming technique in conjunction with our techniques to obtain algorithms for computing bounds on the clique number of a graph with linear-sized cliques, improving upon some results due to Boppana and Halldorsson <ref> [10] </ref>. Independent of our results, Szegedy [41] has also shown that a similar construction yields graphs with vector chromatic number at most 3 but which are not colorable using n 0:05 colors. Notice that the exponent obtained from his result is better than the one in Section 9.
Reference: [11] <author> P. Briggs, K.D. Cooper, K. Kennedy, and L. Torczon. </author> <title> Coloring heuristics for register allocation. </title> <booktitle> In Proceedings of the SIGPLAN 89 Conference on Programming Language Design and Implementation, </booktitle> <pages> pp. 275-274, </pages> <year> 1989. </year>
Reference-contexts: Determining the chromatic number of a graph is known to be NP-hard (cf. [20]). Besides its theoretical significance as a canonical NP-hard problem, graph coloring arises naturally in a variety of applications such as register allocation <ref> [11, 12, 13] </ref> and timetable/examination scheduling [8, 43]. In many applications which can be formulated as graph coloring problems, it suffices to find an approximately optimum graph coloring|a coloring of the graph with a small though non-optimum number of colors.
Reference: [12] <author> G.J. Chaitin. </author> <title> Register allocation and spilling via graph coloring. </title> <booktitle> In Proceedings of the SIG-PLAN 89 Conference on Compiler Construction, </booktitle> <pages> pp. 98-101, </pages> <year> 1982. </year>
Reference-contexts: Determining the chromatic number of a graph is known to be NP-hard (cf. [20]). Besides its theoretical significance as a canonical NP-hard problem, graph coloring arises naturally in a variety of applications such as register allocation <ref> [11, 12, 13] </ref> and timetable/examination scheduling [8, 43]. In many applications which can be formulated as graph coloring problems, it suffices to find an approximately optimum graph coloring|a coloring of the graph with a small though non-optimum number of colors.
Reference: [13] <author> G.J. Chaitin, M.A. Auslander, A.K. Chandra, J. Cocke, M.E. Hopkins, and P.W. Markstein. </author> <title> Register allocation via coloring. </title> <journal> Computer Languages, </journal> <volume> 6 </volume> <pages> 47-57, </pages> <year> 1981. </year>
Reference-contexts: Determining the chromatic number of a graph is known to be NP-hard (cf. [20]). Besides its theoretical significance as a canonical NP-hard problem, graph coloring arises naturally in a variety of applications such as register allocation <ref> [11, 12, 13] </ref> and timetable/examination scheduling [8, 43]. In many applications which can be formulated as graph coloring problems, it suffices to find an approximately optimum graph coloring|a coloring of the graph with a small though non-optimum number of colors.
Reference: [14] <author> William Feller. </author> <title> An Introduction to Probability Theory and Its Applications. </title> <publisher> John Wiley & Sons, </publisher> <address> New York, </address> <year> 1968. </year>
Reference-contexts: It is easy to verify that this distribution is spherically symmetric, in that the direction specified by the vector r is uniformly distributed. (Refer to Feller <ref> [14, v. II] </ref>, Knuth [31, v. 2], and Renyi [39] for further details about the higher dimensional normal distribution.) Subsequently, the phrase "random d-dimensional vector" will always denote a vector chosen from the d-dimensional standard normal distribution. <p> A crucial property of the normal distribution which motivates its use in our algorithm is the following theorem paraphrased from Renyi [39] (see also Section III.4 of Feller <ref> [14, v. II] </ref>). 7 Theorem 7.2 (Theorem IV.16.3 [39]) Let r = (r 1 ; : : : ; r n ) be a random n-dimensional vector.
Reference: [15] <author> P. Frankl and V. Rodl. </author> <title> Forbidden Intersections. </title> <journal> Transactions of the American Mathematical Society, </journal> <volume> 300 </volume> <pages> 259-286, </pages> <year> 1994. </year>
Reference: [16] <author> U. Feige. </author> <title> Randomized graph products, chromatic numbers, </title> <booktitle> and the Lovasz theta-function. In Proceedings of the 27th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 635-640, </pages> <year> 1995. </year>
Reference-contexts: However, this is far from achieving the bound conjectured above and subsequent to our work, two results have ended up answering this question negatively. Feige <ref> [16] </ref> has shown that for every * &gt; 0, there exist families of graphs for which (G) &gt; #(G)n 1* . Interestingly, families of graphs exhibited in Feige's work use the construction of Section 9 as a starting point.
Reference: [17] <author> U. Feige, S. Goldwasser, L. Lovasz, S. Safra, and M. Szegedy. </author> <title> Interactive proofs and the hardness of approximating cliques. </title> <journal> em Journal of the ACM, </journal> <volume> 43(2) </volume> <pages> 268-292, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: Recent results in the hardness of approximations indicate that it may be not possible to substantially improve the results described above. Lund and Yannakakis [34] used the results of Arora, Lund, Motwani, Sudan, and Szegedy [6] and Feige, Goldwasser, Lovasz, Safra, and Szegedy <ref> [17] </ref> to show that there exists a (small) constant * &gt; 0 such that no polynomial time algorithm can approximate the chromatic number of a graph to within a ratio of n * unless P = NP.
Reference: [18] <author> U. Feige and J. Kilian. </author> <title> Zero knowledge and chromatic number. </title> <booktitle> In Proceedings of the 11th Annual Conference on Structure in Complexity Theory, </booktitle> <year> 1996. </year>
Reference-contexts: The current hardness result for the approximation of the chromatic number is due to Feige and Kilian <ref> [18] </ref> and H-astad [26], who show that approximating it to within n 1ffi , for any ffi &gt; 0, would imply NP=RP (RP is the class of probabilistic polynomial time algorithms making one-sided error). <p> Interestingly, families of graphs exhibited in Feige's work use the construction of Section 9 as a starting point. Even more conclusively, the results of H-astad [26] and Feige and Kilian <ref> [18] </ref> have shown that no polynomial time computable function approximates the clique number or chromatic number to within factors of n 1* , unless NP=RP. Thus no simple modification of the # function is likely to provide a much better approximation guarantee.
Reference: [19] <author> A. Frieze and M. Jerrum. </author> <title> Improved approximation algorithms for MAX k-CUT and MAX BISECTION. </title> <type> Manuscript, </type> <month> June </month> <year> 1994. </year>
Reference-contexts: Our results can be viewed as generalizing the MAX CUT approximation 1 algorithm of Goemans and Williamson to the problem of finding an approximate CUT COVER. In fact, our techniques also lead to improved approximations for the MAX k-CUT problem <ref> [19] </ref>. We also establish a duality relationship between the value of the optimum solution to our semidefinite program and the Lovasz #-function [23, 24, 33]. <p> Alon and Kahale [4] use related techniques to devise a polynomial time algorithm for 3-coloring random graphs drawn from a "hard" distribution on the space of all 3-colorable graphs. Recently, Frieze and Jerrum <ref> [19] </ref> have used a semidefinite programming formulation and randomized rounding strategy essentially the same as ours to obtain improved approximations for the MAX k-CUT problem with large values of k.
Reference: [20] <author> Michael R. Garey and David S. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. W.H. </title> <publisher> Freeman, </publisher> <year> 1979. </year>
Reference-contexts: The minimum number of colors needed for such a coloring is called the chromatic number of G, and is usually denoted by (G). Determining the chromatic number of a graph is known to be NP-hard (cf. <ref> [20] </ref>). Besides its theoretical significance as a canonical NP-hard problem, graph coloring arises naturally in a variety of applications such as register allocation [11, 12, 13] and timetable/examination scheduling [8, 43].
Reference: [21] <author> Michel X. Goemans and David P. Williamson. </author> <title> Improved approximation algorithms for maximum cut and satisfiability problems. </title> <journal> Journal of the ACM, </journal> <volume> 42 </volume> <pages> 1115-1145, </pages> <year> 1995. </year>
Reference-contexts: Besides giving the best known approximations in terms of n, our results are the first non-trivial approximations given in terms of . Our results are based on the recent work of Goemans and Williamson <ref> [21] </ref> who used an algorithm for semidefinite optimization problems (cf. [23, 2]) to obtain improved approximations for the MAX CUT and MAX 2-SAT problems. <p> The methods in this section closely mimic those of Goemans and Williamson <ref> [21] </ref>. To solve the problem, we need the following auxiliary definition. <p> We now observe that matrix and vector k-colorings are in fact equivalent (cf. <ref> [21] </ref>). Thus, to solve the vector coloring relaxation it will suffice to find a matrix k-coloring. Fact 3.1 A graph has a vector k-coloring if and only if it has matrix k-coloring. <p> The rows of U are vectors fu i g n i=1 that form a vector k-coloring of G. An ffi-close approximation to the matrix U can be found in time polynomial in n and log (1=ffi) can be found using the Incomplete Cholesky Decomposition <ref> [21, 22] </ref>. (Here by ffi-close we mean a matrix U 0 such that U 0 U 0T M has L 1 norm less than ffi.) This in turn gives a vector (k + *)- coloring of the graph, provided ffi is chosen appropriately. <p> Lemma 3.2 If a graph G has a vector k-coloring then a vector (k + *)-coloring of the graph can be constructed in time polynomial in k, n, and log (1=*). Proof: Our proof is similar to those of Lovasz [33] and Goemans-Williamson <ref> [21] </ref>. We construct a semidefinite optimization problem (SDP) whose optimum is 1=(k 1) when k is the smallest real number such that a matrix k-coloring of G exists. <p> Combining this method with a technique of Wigderson [42] yields an O (n 0:386 )-coloring of G. The method is based on <ref> [21] </ref> and is weaker than the method we describe in the following section; however, it introduces several of the ideas we will use in the more powerful algorithm. Assume we are given a vector 3-coloring fv i g n i=1 . <p> The following lemma is a restatement of Lemma 1.2 of Goemans-Williamson <ref> [21] </ref>. Lemma 6.1 (Goemans-Williamson [21]) Given two vectors at an angle of , the probability that they are separated by a random hyperplane is exactly =. <p> The following lemma is a restatement of Lemma 1.2 of Goemans-Williamson <ref> [21] </ref>. Lemma 6.1 (Goemans-Williamson [21]) Given two vectors at an angle of , the probability that they are separated by a random hyperplane is exactly =. We conclude that give a vector 3-coloring, for any edge fi; jg 2 E, the probability that a random hyperplane cuts the edge is exactly 2=3. <p> Finally, the main algorithm presented here has been derandomized in a recent work of Mahajan and Ramesh [35]. Acknowledgments Thanks to David Williamson for giving us a preview of the MAX-CUT result <ref> [21] </ref> during a visit to Stanford. We are indebted to John Tukey and Jan Pedersen for their help in understanding multidimensional probability distributions. Thanks to David Williamson and Eva Tardos for discussions of the duality theory of SDP.
Reference: [22] <author> Gene H. Golub and C. F. Van Loan. </author> <title> Matrix Computations. </title> <publisher> Johns Hopkins University Press, </publisher> <address> Baltimore, </address> <year> 1983. </year>
Reference-contexts: The rows of U are vectors fu i g n i=1 that form a vector k-coloring of G. An ffi-close approximation to the matrix U can be found in time polynomial in n and log (1=ffi) can be found using the Incomplete Cholesky Decomposition <ref> [21, 22] </ref>. (Here by ffi-close we mean a matrix U 0 such that U 0 U 0T M has L 1 norm less than ffi.) This in turn gives a vector (k + *)- coloring of the graph, provided ffi is chosen appropriately.
Reference: [23] <author> M. Grotschel, L. Lovasz and A. Schrijver. </author> <title> The ellipsoid method and its consequences in combinatorial optimization. </title> <journal> Combinatorica, </journal> <volume> 1 </volume> <pages> 169-197, </pages> <year> 1981. </year>
Reference-contexts: Besides giving the best known approximations in terms of n, our results are the first non-trivial approximations given in terms of . Our results are based on the recent work of Goemans and Williamson [21] who used an algorithm for semidefinite optimization problems (cf. <ref> [23, 2] </ref>) to obtain improved approximations for the MAX CUT and MAX 2-SAT problems. <p> In fact, our techniques also lead to improved approximations for the MAX k-CUT problem [19]. We also establish a duality relationship between the value of the optimum solution to our semidefinite program and the Lovasz #-function <ref> [23, 24, 33] </ref>. We show lower bounds on the gap between the optimum solution of our semidefinite program and the actual chromatic number; by duality this also demonstrates interesting new facts about the #-function. <p> The vector k-coloring that we define plays the role that a hypothetical "fractional k-coloring" would play in a classical linear-programming relaxation approach to the problem. Our relaxation is related to the concept of an orthonormal representation of a graph <ref> [33, 23] </ref>. <p> of unit vectors u i from the space &lt; n to each vertex i 2 V , such that for any two adjacent vertices i and j the dot product of their vectors satisfies the inequality hu i ; u j i k 1 The definition of an orthonormal representation <ref> [33, 23] </ref> requires that the given dot products be equal to zero, a weaker requirement than the one above. 2 3 Solving the Vector Coloring Problem In this section we show how the vector coloring relaxation can be solved using semidefinite programming. <p> This means there is a solution to the above semidefinite program with ff = 1=(k1). The ellipsoid method or other interior point based methods <ref> [23, 2] </ref> can be employed to find a feasible solution where the value of the objective is at most 1=(k 1) + ffi in time polynomial in n and log 1=ffi. <p> Theorem 7.7 Any vector k-colorable graph on n nodes with maximum degree can be colored, in probabilistic polynomial time, using minfO ( 12=k p p ln n)g colors. 8 Duality Theory The most intensively studied relaxation of a semidefinite programming formulation to date is the Lovasz #-function <ref> [23, 24, 33] </ref>. This relaxation of the clique number of a graph led to the first polynomial-time algorithm for finding the clique and chromatic numbers of perfect graphs. We now investigate a connection between # and a close variant of the vector chromatic number.
Reference: [24] <author> M. Grotschel, L. Lovasz and A. Schrijver. </author> <title> Geometric Algorithms and Combinatorial Optimization. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1987. </year> <month> 16 </month>
Reference-contexts: In fact, our techniques also lead to improved approximations for the MAX k-CUT problem [19]. We also establish a duality relationship between the value of the optimum solution to our semidefinite program and the Lovasz #-function <ref> [23, 24, 33] </ref>. We show lower bounds on the gap between the optimum solution of our semidefinite program and the actual chromatic number; by duality this also demonstrates interesting new facts about the #-function. <p> Theorem 7.7 Any vector k-colorable graph on n nodes with maximum degree can be colored, in probabilistic polynomial time, using minfO ( 12=k p p ln n)g colors. 8 Duality Theory The most intensively studied relaxation of a semidefinite programming formulation to date is the Lovasz #-function <ref> [23, 24, 33] </ref>. This relaxation of the clique number of a graph led to the first polynomial-time algorithm for finding the clique and chromatic numbers of perfect graphs. We now investigate a connection between # and a close variant of the vector chromatic number. <p> Our goal is to prove k = #. As before, the fact that fp ij g is positive semidefinite means we can find vectors v i such that p ij = hv i ; v j i. The last constraint says that the vectors v form an orthogonal labeling <ref> [24] </ref>, i.e. that hv i ; v j i = 0 for (i; j) =2 E. We now claim that the above optimization problem can be reformulated as follows: maximize hv i ; v i i i6=j hv i ; v j i over all orthogonal labelings fv i g. <p> This is simply Lovasz's # 3 formulation of the #-function <ref> [24, page 287] </ref>. 9 The Gap between Vector Colorings and Chromatic Numbers The performance of our randomized rounding approach seems far from optimum.
Reference: [25] <editor> M.M. Halldorsson. </editor> <title> A still better performance guarantee for approximate graph coloring. </title> <journal> In--formation Processing Letters, </journal> <volume> 45 </volume> <pages> 19-23, </pages> <year> 1993. </year>
Reference-contexts: This result generalizes to coloring a k-colorable graph with O (n 11=(k4=3) log 8=5 n) colors. The best known performance guarantee for general graphs is due to Halldorsson <ref> [25] </ref> who provided a polynomial time algorithm using a number of colors which is within a factor of O (n (log log n) 2 = log 3 n) of the optimum.
Reference: [26] <author> J. H-astad. </author> <title> Clique is hard to approximate within n 1* . In Proceedings of the 37th Annual IEEE Symposium on Foundations of Computer Science, </title> <year> 1996. </year>
Reference-contexts: The current hardness result for the approximation of the chromatic number is due to Feige and Kilian [18] and H-astad <ref> [26] </ref>, who show that approximating it to within n 1ffi , for any ffi &gt; 0, would imply NP=RP (RP is the class of probabilistic polynomial time algorithms making one-sided error). <p> Feige [16] has shown that for every * &gt; 0, there exist families of graphs for which (G) &gt; #(G)n 1* . Interestingly, families of graphs exhibited in Feige's work use the construction of Section 9 as a starting point. Even more conclusively, the results of H-astad <ref> [26] </ref> and Feige and Kilian [18] have shown that no polynomial time computable function approximates the clique number or chromatic number to within factors of n 1* , unless NP=RP. Thus no simple modification of the # function is likely to provide a much better approximation guarantee.
Reference: [27] <author> D. S. Johnson. </author> <title> Worst case behavior of graph coloring algorithms. </title> <booktitle> Proc. 5th Southeastern Conf. on Combinatorics, Graph Theory and Computing, Congressus Numerantium X, </booktitle> <pages> 513-527, </pages> <year> 1974. </year>
Reference-contexts: This along with the apparent impossibility of an exact solution has led to some interest in the problem of approximate graph coloring. The analysis of approximation algorithms for graph coloring started with the work of Johnson <ref> [27] </ref> who shows that a version of the greedy algorithm gives an O (n= log n)-approximation algorithm for k-coloring. Wigderson [42] improved this bound by giving an elegant algorithm which uses O (n 11=(k1) ) colors to legally color a k-colorable graph.
Reference: [28] <author> S. Khanna, N. Linial, and S. Safra. </author> <title> On the Hardness of Approximating the Chromatic Number. </title> <booktitle> In Proceedings 2nd Israeli Symposium on Theory and Computing Systems, </booktitle> <pages> pp. 250-260, </pages> <year> 1992. </year>
Reference-contexts: However, none of these hardness results apply to the special case of the problem where the input graph is guaranteed to be k-colorable for some small k. The best hardness result in this direction is due to Khanna, Linial, and Safra <ref> [28] </ref> who show that it is not possible to color a 3-colorable graph with 4 colors in polynomial time unless P = NP. In this paper we present improvements on the result of Blum.
Reference: [29] <author> S. Khanna, R. Motwani, M. Sudan, and U. Vazirani. </author> <title> On Syntactic versus Computational Views of Approximability. </title> <booktitle> In Proceedings of the 35th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp. 819-830, </pages> <year> 1994. </year>
Reference: [30] <author> M. Kneser. Aufgabe 300. Jber. Deutsch. Math.-Verein., </author> <month> 58, </month> <year> 1955. </year>
Reference: [31] <author> Donald E. Knuth. </author> <booktitle> The Art of Computer Programming. </booktitle> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1971. </year>
Reference-contexts: It is easy to verify that this distribution is spherically symmetric, in that the direction specified by the vector r is uniformly distributed. (Refer to Feller [14, v. II], Knuth <ref> [31, v. 2] </ref>, and Renyi [39] for further details about the higher dimensional normal distribution.) Subsequently, the phrase "random d-dimensional vector" will always denote a vector chosen from the d-dimensional standard normal distribution.
Reference: [32] <author> Donald E. Knuth. </author> <title> The Sandwich Theorem. </title> <journal> The Electronic Journal of Combinatorics, </journal> <volume> 1 </volume> <pages> 1-48, </pages> <year> 1994. </year>
Reference-contexts: In particular, the following "sandwich theorem" was proved by Lovasz [33] (see Knuth <ref> [32] </ref> for a survey). !(G) #(G) (G): (1) This led to the hope that the following question may have an affirmative answer.
Reference: [33] <author> L. Lovasz. </author> <title> On the Shannon capacity of a graph. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-25:1-7, </volume> <year> 1979. </year>
Reference-contexts: In fact, our techniques also lead to improved approximations for the MAX k-CUT problem [19]. We also establish a duality relationship between the value of the optimum solution to our semidefinite program and the Lovasz #-function <ref> [23, 24, 33] </ref>. We show lower bounds on the gap between the optimum solution of our semidefinite program and the actual chromatic number; by duality this also demonstrates interesting new facts about the #-function. <p> The vector k-coloring that we define plays the role that a hypothetical "fractional k-coloring" would play in a classical linear-programming relaxation approach to the problem. Our relaxation is related to the concept of an orthonormal representation of a graph <ref> [33, 23] </ref>. <p> of unit vectors u i from the space &lt; n to each vertex i 2 V , such that for any two adjacent vertices i and j the dot product of their vectors satisfies the inequality hu i ; u j i k 1 The definition of an orthonormal representation <ref> [33, 23] </ref> requires that the given dot products be equal to zero, a weaker requirement than the one above. 2 3 Solving the Vector Coloring Problem In this section we show how the vector coloring relaxation can be solved using semidefinite programming. <p> Lemma 3.2 If a graph G has a vector k-coloring then a vector (k + *)-coloring of the graph can be constructed in time polynomial in k, n, and log (1=*). Proof: Our proof is similar to those of Lovasz <ref> [33] </ref> and Goemans-Williamson [21]. We construct a semidefinite optimization problem (SDP) whose optimum is 1=(k 1) when k is the smallest real number such that a matrix k-coloring of G exists. <p> Theorem 7.7 Any vector k-colorable graph on n nodes with maximum degree can be colored, in probabilistic polynomial time, using minfO ( 12=k p p ln n)g colors. 8 Duality Theory The most intensively studied relaxation of a semidefinite programming formulation to date is the Lovasz #-function <ref> [23, 24, 33] </ref>. This relaxation of the clique number of a graph led to the first polynomial-time algorithm for finding the clique and chromatic numbers of perfect graphs. We now investigate a connection between # and a close variant of the vector chromatic number. <p> In particular, the following "sandwich theorem" was proved by Lovasz <ref> [33] </ref> (see Knuth [32] for a survey). !(G) #(G) (G): (1) This led to the hope that the following question may have an affirmative answer.
Reference: [34] <author> C. Lund and M. Yannakakis. </author> <title> On the hardness of approximating minimization problems. </title> <booktitle> In Proceedings of the 25th ACM Symposium on Theory of Computing, </booktitle> <pages> pp. 286-293, </pages> <year> 1993. </year>
Reference-contexts: Recent results in the hardness of approximations indicate that it may be not possible to substantially improve the results described above. Lund and Yannakakis <ref> [34] </ref> used the results of Arora, Lund, Motwani, Sudan, and Szegedy [6] and Feige, Goldwasser, Lovasz, Safra, and Szegedy [17] to show that there exists a (small) constant * &gt; 0 such that no polynomial time algorithm can approximate the chromatic number of a graph to within a ratio of n
Reference: [35] <author> S. Mahajan and H. Ramesh. </author> <title> Derandomizing semidefinite programming based approximation algorithms. </title> <booktitle> In Proceedings of the 36th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp. 162-169, </pages> <year> 1995. </year>
Reference-contexts: Alon [3] has obtained a slight improvement over Szegedy's bound by using an interesting variant of the Kneser graph construction. Finally, the main algorithm presented here has been derandomized in a recent work of Mahajan and Ramesh <ref> [35] </ref>. Acknowledgments Thanks to David Williamson for giving us a preview of the MAX-CUT result [21] during a visit to Stanford. We are indebted to John Tukey and Jan Pedersen for their help in understanding multidimensional probability distributions.
Reference: [36] <author> E.C. Milner. </author> <title> A combinatorial theorem on systems of sets. </title> <journal> Journal of the London Mathematical Society, </journal> <volume> 43 </volume> <pages> 204-206, </pages> <year> 1968. </year>
Reference-contexts: is defined as follows: the vertices are all possible r-sets from a universe of size m; and, the vertices v i and v j are adjacent if and only if the corresponding r-sets satisfy jS i " S j j &lt; t. 12 We will need following theorem of Milner <ref> [36] </ref> regarding intersecting hypergraphs. Recall that a collection of sets is called an antichain if no set in the collection contains another.
Reference: [37] <author> R. Motwani and J. Naor. </author> <title> On Exact and Approximate Cut Covers of Graphs. </title> <type> Manuscript, </type> <year> 1993. </year>
Reference-contexts: We follow their basic paradigm of using algorithms for semidefinite programming to obtain an optimum solution to a relaxed version of the problem, and a randomized strategy for "rounding" this solution to a feasible but approximate solution to the original problem. Motwani and Naor <ref> [37] </ref> have shown that the approximate graph coloring problem is closely related to the problem of finding a CUT COVER of the edges of a graph.
Reference: [38] <author> R. Motwani and P. Raghavan. </author> <title> Randomized Algorithms. </title> <publisher> Cambridge University Press, </publisher> <year> 1995. </year>
Reference-contexts: As noted above, r hyperplanes chosen independently at random will cut an edge with probability 1 1=9. Thus the expected number of edges which are not cut is m=9 n=18 &lt; n=8, since the number of edges is at most n=2. By Markov's inequality (cf. <ref> [38] </ref>, page 46), the probability that the number of uncut edges is more than twice the expected value is at most 1=2. Thus, with probability at least 1/2 we get a coloring with at most n=4 uncut edges.
Reference: [39] <author> A. Renyi. </author> <title> Probability Theory. </title> <publisher> Elsevier, </publisher> <address> New York, </address> <year> 1970. </year>
Reference-contexts: It is easy to verify that this distribution is spherically symmetric, in that the direction specified by the vector r is uniformly distributed. (Refer to Feller [14, v. II], Knuth [31, v. 2], and Renyi <ref> [39] </ref> for further details about the higher dimensional normal distribution.) Subsequently, the phrase "random d-dimensional vector" will always denote a vector chosen from the d-dimensional standard normal distribution. A crucial property of the normal distribution which motivates its use in our algorithm is the following theorem paraphrased from Renyi [39] (see <p> Renyi <ref> [39] </ref> for further details about the higher dimensional normal distribution.) Subsequently, the phrase "random d-dimensional vector" will always denote a vector chosen from the d-dimensional standard normal distribution. A crucial property of the normal distribution which motivates its use in our algorithm is the following theorem paraphrased from Renyi [39] (see also Section III.4 of Feller [14, v. II]). 7 Theorem 7.2 (Theorem IV.16.3 [39]) Let r = (r 1 ; : : : ; r n ) be a random n-dimensional vector. <p> A crucial property of the normal distribution which motivates its use in our algorithm is the following theorem paraphrased from Renyi <ref> [39] </ref> (see also Section III.4 of Feller [14, v. II]). 7 Theorem 7.2 (Theorem IV.16.3 [39]) Let r = (r 1 ; : : : ; r n ) be a random n-dimensional vector. The projections of r onto two lines ` 1 and ` 2 are independent (and normally distributed) if and only if ` 1 and ` 2 are orthogonal.
Reference: [40] <author> M. Szegedy. </author> <title> A note on the number of Lovasz and the generalized Delsarte bound. </title> <booktitle> In Proceedings of the 35th Annual IEEE Symposium on Foundations of Computer Science, 1994 (to appear). </booktitle>
Reference: [41] <author> M. </author> <title> Szegedy. </title> <type> Personal Communication. </type> <month> March </month> <year> 1994. </year>
Reference-contexts: Independent of our results, Szegedy <ref> [41] </ref> has also shown that a similar construction yields graphs with vector chromatic number at most 3 but which are not colorable using n 0:05 colors. Notice that the exponent obtained from his result is better than the one in Section 9.
Reference: [42] <author> A. Wigderson. </author> <title> Improving the Performance Guarantee for Approximate Graph Coloring. </title> <journal> Journal of the ACM, </journal> <volume> 30 </volume> <pages> 729-735, </pages> <year> 1983. </year>
Reference-contexts: The analysis of approximation algorithms for graph coloring started with the work of Johnson [27] who shows that a version of the greedy algorithm gives an O (n= log n)-approximation algorithm for k-coloring. Wigderson <ref> [42] </ref> improved this bound by giving an elegant algorithm which uses O (n 11=(k1) ) colors to legally color a k-colorable graph. Subsequently, other polynomial time algorithms were provided by Blum [9] which use O (n 3=8 log 8=5 n) colors to legally color an n-vertex 3-colorable graph. <p> In this section, we outline a randomized rounding scheme for transforming a vector 3-coloring of G into an O ( log 3 2 )-semicoloring, and thus into an O ( log 3 2 log n)-coloring of G. Combining this method with a technique of Wigderson <ref> [42] </ref> yields an O (n 0:386 )-coloring of G. The method is based on [21] and is weaker than the method we describe in the following section; however, it introduces several of the ideas we will use in the more powerful algorithm. <p> This may be useful in some applications where a nearly legal coloring is good enough. 6.1 Wigderson's Algorithm Our coloring can be improved using the following idea due to Wigderson <ref> [42] </ref>. Fix a threshold value ffi. If there exists a vertex of degree greater than ffi, pick any one such vertex and 2-color its neighbors (its neighborhood is vector 2-colorable and hence 2-colorable). The colored vertices are removed and their colors are not used again.
Reference: [43] <author> D.C. Wood. </author> <title> A Technique for Coloring a Graph Applicable to Large-Scale Optimization Problems. </title> <journal> Computer Journal, </journal> <volume> 12:317, </volume> <year> 1969. </year> <month> 17 </month>
Reference-contexts: Determining the chromatic number of a graph is known to be NP-hard (cf. [20]). Besides its theoretical significance as a canonical NP-hard problem, graph coloring arises naturally in a variety of applications such as register allocation [11, 12, 13] and timetable/examination scheduling <ref> [8, 43] </ref>. In many applications which can be formulated as graph coloring problems, it suffices to find an approximately optimum graph coloring|a coloring of the graph with a small though non-optimum number of colors.
References-found: 43

