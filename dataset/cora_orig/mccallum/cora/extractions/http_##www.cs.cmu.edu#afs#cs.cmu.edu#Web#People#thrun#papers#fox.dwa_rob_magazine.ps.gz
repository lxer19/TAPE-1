URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/Web/People/thrun/papers/fox.dwa_rob_magazine.ps.gz
Refering-URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/Web/People/thrun/papers/full.html
Root-URL: http://www.cs.cmu.edu
Email: Email: ffox,wolframg@uran.cs.uni-bonn.de, thrun@cs.cmu.edu  
Title: The Dynamic Window Approach to Collision Avoidance  
Author: Dieter Fox Wolfram Burgard Sebastian Thrun yz 
Address: Bonn, D-53117 Bonn, Germany  15213  
Affiliation: Dept. of Computer Science III, University of  Dept. of Computer Science, Carnegie Mellon University, Pittsburgh, P A  
Abstract: This paper describes the dynamic window approach to reactive collision avoidance for mobile robots equipped with synchro-drives. The approach is derived directly from the motion dynamics of the robot and is therefore particularly well-suited for robots operating at high speed. It differs from previous approaches in that the search for commands controlling the translational and rotational velocity of the robot is carried out directly in the space of velocities. The advantage of our approach is that it correctly and in an elegant way incorporates the dynamics of the robot. This is done by reducing the search space to the dynamic window, which consists of the velocities reachable within a short time interval. Within the dynamic window the approach only considers admissible velocities yielding a trajectory on which the robot is able to stop safely. Among these velocities the combination of translational and rotational velocity is chosen by maximizing an objective function. The objective function includes a measure of progress towards a goal location, the forward velocity of the robot, and the distance to the next obstacle on the trajectory. In extensive experiments the approach presented here has been found to safely control our mobile robot RHINO with speeds of up to 95 cm/sec, in populated and dynamic environments.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Borenstein and Y. Koren. </author> <title> Real-time obstacle avoidance for fast mobile robots in cluttered environments. </title> <booktitle> In Proc. IEEE Int. Conf. Robotics and Automation, volume CH-2876, </booktitle> <pages> pages 572-577, </pages> <year> 1990. </year>
Reference-contexts: By modifying the potential function the motion of the robot becomes more efficient and different behaviors such as wall following and tracking can be achieved. In [2], the vector field histogram approach is proposed, which extends the previously developed virtual force field histogram <ref> [1] </ref>. This approach uses an occupancy grid representation for modeling the robot's environment, which is generated and updated continuously using ultrasonic proximity sensors. <p> As noted above, local methods are typically very fast, and they quickly adapt to unforeseen changes in the environment. Most of these local approaches generate motion commands for the robot in two separate stages <ref> [1, 2, 8] </ref>. In the first stage a desired motion direction is determined. In the second stage the steering commands yielding a motion into the desired direction are generated. Strictly speaking, such an approach is only justifiable if infinite forces can be asserted on the robot. <p> Velocity The function velocity (v; !) is used to evaluate the progress of the robot on the corresponding trajectory. It is simply a projection on the translational velocity v, as can be seen in Smoothing function All three components of the objective function are normalized to <ref> [0; 1] </ref>. The weighted sum of these components is shown in Figure 10. It is obtained by a value of 2.0 for ff and a value of 0.2 for fi and fl. As expected the fastest trajectory leading through the door area gets the highest evaluation (compare with Figure 4). <p> For example, in a configuration similar to the ones shown in Figures 21 and 22 Borenstein et al. report that their robot traveled with an average speed of 58 cm/sec through a cluttered environment <ref> [1, 2] </ref>. As far as it can be judged from a single example (which is all that is available in [1, 2]), our results compare favorably to those of Borenstein et al. 6 Discussion This paper describes an approach to collision avoidance for mobile robots equipped with synchro-drives. <p> configuration similar to the ones shown in Figures 21 and 22 Borenstein et al. report that their robot traveled with an average speed of 58 cm/sec through a cluttered environment <ref> [1, 2] </ref>. As far as it can be judged from a single example (which is all that is available in [1, 2]), our results compare favorably to those of Borenstein et al. 6 Discussion This paper describes an approach to collision avoidance for mobile robots equipped with synchro-drives.
Reference: [2] <author> J. Borenstein and Y. Koren. </author> <title> The vector field histogram fast obstacle avoidance for mobile robots. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 7(3) </volume> <pages> 278-288, </pages> <year> 1991. </year>
Reference-contexts: An extended version of the potential field approach is introduced in [7]. By modifying the potential function the motion of the robot becomes more efficient and different behaviors such as wall following and tracking can be achieved. In <ref> [2] </ref>, the vector field histogram approach is proposed, which extends the previously developed virtual force field histogram [1]. This approach uses an occupancy grid representation for modeling the robot's environment, which is generated and updated continuously using ultrasonic proximity sensors. <p> As noted above, local methods are typically very fast, and they quickly adapt to unforeseen changes in the environment. Most of these local approaches generate motion commands for the robot in two separate stages <ref> [1, 2, 8] </ref>. In the first stage a desired motion direction is determined. In the second stage the steering commands yielding a motion into the desired direction are generated. Strictly speaking, such an approach is only justifiable if infinite forces can be asserted on the robot. <p> For example, in a configuration similar to the ones shown in Figures 21 and 22 Borenstein et al. report that their robot traveled with an average speed of 58 cm/sec through a cluttered environment <ref> [1, 2] </ref>. As far as it can be judged from a single example (which is all that is available in [1, 2]), our results compare favorably to those of Borenstein et al. 6 Discussion This paper describes an approach to collision avoidance for mobile robots equipped with synchro-drives. <p> configuration similar to the ones shown in Figures 21 and 22 Borenstein et al. report that their robot traveled with an average speed of 58 cm/sec through a cluttered environment <ref> [1, 2] </ref>. As far as it can be judged from a single example (which is all that is available in [1, 2]), our results compare favorably to those of Borenstein et al. 6 Discussion This paper describes an approach to collision avoidance for mobile robots equipped with synchro-drives.
Reference: [3] <author> J. Buhmann, W. Burgard, A.B. Cremers, D. Fox, T. Hofmann, F. Schneider, J. Strikos, and S. Thrun. </author> <title> The mobile robot Rhino. </title> <journal> AI Magazine, </journal> <volume> 16(1), </volume> <year> 1995. </year>
Reference-contexts: for the construction of local world models (obstacle line fields), the method has proven to avoid collisions reliably with speeds of up to 95 cm/sec on several robots in several indoor environments (University of Bonn, Carnegie Mellon University, 1994 AAAI robot competition, 1995 IJCAI robot exhibition, and others, see also <ref> [3] </ref>). The method has also successfully been operated based on cameras and infrared detectors as sensory input. <p> By combining all three components, the robot circumvents collisions as fast as it can under the constraints listed above, while still making progress towards reaching its goal. In a former version of our approach (see <ref> [3] </ref>) the search for the best velocity was carried out in two steps. In the first step only the curvature was chosen. This was done by evaluating the target angle and the so-called "n-sec-rule", namely a linear function of the clearance. <p> A complete sonar sweep takes approximately 0.4 sec. 15 low accelerations dynamic window 5.2 The Obstacle Line Field As local world model we use an obstacle line field <ref> [3] </ref>, which is a two-dimensional description of sensory data relative to the robot's position (see Figure 18). We adjusted our sonar sensors such that most erroneous readings indicate a too long distance. To be maximally conservative, every reading is converted to an obstacle line. <p> RHINO , a B21 mobile robot, frequently operates in our university building without human supervision. The approach described here is only part of the overall architecture. For example, approaches to building occupancy maps, global path planning and computer vision are surveyed in <ref> [3, 15, 16] </ref>. In principle, the approach proposed here only assumes geometric information about the relative location of obstacles. Therefore, it is well-suited for proximity sensors such as ultrasonic transducers, which were used in the experiments reported here, or such as laser range-finders.
Reference: [4] <author> L. Feng, J. Borenstein, and H.R. Everett. </author> <title> "Where am I?" Sensors and Methods for Autonomous Mobile Robot Positioning. </title> <type> Technical Report UM-MEAM-94-21, </type> <institution> University of Michigan, </institution> <month> December </month> <year> 1994. </year>
Reference-contexts: Thus the robot would stay on its current straight trajectory and not collide with the wall. 4 3 Motion Equations for a Synchro-Drive Robot This section describes the fundamental motion equations for a synchro-drive mobile robot <ref> [4] </ref>. The derivation begins with the correct dynamic laws, assuming that the robot's translational and rotational velocity can be controlled independently (with limited torques). To make the equations more practical, we derive an approximation that models velocity as a piecewise constant function in time.
Reference: [5] <author> H. Hu and M. Brady. </author> <title> A bayesian approach to real-time obstacle avoidance for a mobile robot. </title> <booktitle> In Autonomous Robots, </booktitle> <volume> volume 1, </volume> <pages> pages 69-92. </pages> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, </address> <year> 1994. </year>
Reference-contexts: However, global approaches are not appropriate for fast obstacle avoidance. Their strength is global path planning. Additionally, these methods have proven problematic when the global world model is inaccurate, or simply not available, as is typically the case in most populated indoor environments. Hu/Brady, Moravec and others <ref> [5, 11] </ref>, have shown how to update global world models based on sensory input, using probabilistic representations. A second disadvantage of global methods is their slowness due to the inherent complexity of robot motion planning [12].
Reference: [6] <author> J.L. Jones and A.M. Flynn. </author> <title> Mobile Robots: Inspiration to Implementation. A K Peters, </title> <publisher> Ltd., </publisher> <year> 1993. </year> <note> ISBN 1-56881-011-3. 22 </note>
Reference-contexts: the accelerations, which we assume 1 Notice that the derivation of y (t n ) is analogous, thus we only describe the derivation for the x coordinate. 5 to be controllable (for most mobile robots the accelerations determining its motion are monotonic functions of the currents flowing through the motors <ref> [6] </ref>. Hence, limits on the currents directly correspond to limits on the accelerations). Digital hardware imposes constraints as to when one can set the motor currents (and thus set new accelerations).
Reference: [7] <author> M. Khatib and R. Chatila. </author> <title> An extended potential field approach for mobile robot sensor-based motions. </title> <booktitle> In Proc. International Conference on Intelligent Autonomous Systems (IAS'4), </booktitle> <year> 1995. </year>
Reference-contexts: Borenstein and Koren [9] identified that such methods often fail to find trajectories between closely spaced obstacles; they also can produce oscillatory behavior in narrow corridors. An extended version of the potential field approach is introduced in <ref> [7] </ref>. By modifying the potential function the motion of the robot becomes more efficient and different behaviors such as wall following and tracking can be achieved. In [2], the vector field histogram approach is proposed, which extends the previously developed virtual force field histogram [1].
Reference: [8] <author> O. Khatib. </author> <title> Real-time obstacle avoidance for robot manipulator and mobile robots. </title> <journal> The International Journal of Robotics Research, </journal> <volume> 5(1) </volume> <pages> 90-98, </pages> <year> 1986. </year>
Reference-contexts: However, the key advantage of local techniques over global ones lies in their low computational complexity, which is particularly important 3 when the world model is updated frequently based on sensor information. For example, potential field methods, as proposed by <ref> [8] </ref>, determine the steering direction by (hypothetically) assuming that obstacles assert negative forces on the robot, and that the target location asserts a positive force. These methods are extremely fast, and they typically consider only the small subset of obstacles close to the robot. <p> As noted above, local methods are typically very fast, and they quickly adapt to unforeseen changes in the environment. Most of these local approaches generate motion commands for the robot in two separate stages <ref> [1, 2, 8] </ref>. In the first stage a desired motion direction is determined. In the second stage the steering commands yielding a motion into the desired direction are generated. Strictly speaking, such an approach is only justifiable if infinite forces can be asserted on the robot.
Reference: [9] <author> Y. Koren and J. Borenstein. </author> <title> Potential field methods and their inherent limitations for mobile robot navigation. </title> <booktitle> In Proc. IEEE Int. Conf. Robotics and Automation, </booktitle> <month> April </month> <year> 1991. </year>
Reference-contexts: These methods are extremely fast, and they typically consider only the small subset of obstacles close to the robot. Borenstein and Koren <ref> [9] </ref> identified that such methods often fail to find trajectories between closely spaced obstacles; they also can produce oscillatory behavior in narrow corridors. An extended version of the potential field approach is introduced in [7].
Reference: [10] <author> J. Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1991. </year> <note> ISBN 0-7923-9206-X. </note>
Reference-contexts: Experimental results are summarized in Section 5, followed by a discussion of further research issues. 2 Related Work The collision avoidance approaches for mobile robots can roughly be divided into two categories: global and local. The global techniques, such as road-map, cell decomposition and potential field methods (see <ref> [10] </ref> for an overview and further references), generally assume that a complete model of the robot's environment is available. The advantage of global approaches lies in the fact that a complete trajectory from the starting point to the target point can be computed off-line. <p> The triplet hx; y; i describes the kinematic configuration of the robot. The motion of a synchro-drive robot is constrained in a way such that the translational velocity v always leads in the steering direction of the robot, which is a non-holonomic constraint <ref> [10] </ref>. Let x (t 0 ) and x (t n ) denote the x-coordinates of the robot at time t 0 and t n , respectively. Let v (t) denote the translational velocity of the robot at time t, and !(t) its rotational velocity.
Reference: [11] <author> H.P. Moravec. </author> <title> Sensor fusion in certainty grids for mobile robots. </title> <journal> AI Magazine, </journal> <pages> pages 61-74, </pages> <month> Summer </month> <year> 1988. </year>
Reference-contexts: However, global approaches are not appropriate for fast obstacle avoidance. Their strength is global path planning. Additionally, these methods have proven problematic when the global world model is inaccurate, or simply not available, as is typically the case in most populated indoor environments. Hu/Brady, Moravec and others <ref> [5, 11] </ref>, have shown how to update global world models based on sensory input, using probabilistic representations. A second disadvantage of global methods is their slowness due to the inherent complexity of robot motion planning [12]. <p> To be maximally conservative, every reading is converted to an obstacle line. If the sensors would produce spurious short readings (e.g. due to cross-talk), more sophisticated sensor interpretation and integration models such as for example occupancy probability grid maps <ref> [11] </ref> would be required. The obstacle line field is centred around the robot's position and is built out of the data gathered by proximity sensors.
Reference: [12] <author> J.T. Schwartz, M. Scharir, and J. Hopcroft. </author> <title> Planning, Geometry and Complexity of Robot Motion. </title> <publisher> Ablex Publishing Corporation, </publisher> <address> Norwood, NJ, </address> <year> 1987. </year>
Reference-contexts: Hu/Brady, Moravec and others [5, 11], have shown how to update global world models based on sensory input, using probabilistic representations. A second disadvantage of global methods is their slowness due to the inherent complexity of robot motion planning <ref> [12] </ref>. This is particularly problematic if the underlying world model changes on-the-fly, because of the resulting need for repeated adjustments of the global plan. In such cases, planning in a global model is usually too expensive to be done repeatedly.
Reference: [13] <author> R. Simmons. </author> <title> The curvature-velocity method for local obstacle avoidance. </title> <booktitle> In Proc. IEEE Int. Conf. Robotics and Automation, </booktitle> <year> 1996. </year>
Reference-contexts: In the second step the velocity on this curvature was maximized. Although the 13 resulting behavior of the robot was the same, we decided to use this single step evaluation of the objective function. We adopted the idea for this representation from <ref> [13] </ref>. 4.3 Role of the dynamic window In the previous section we introduced the objective function to be maximized for smooth and goal directed behavior. For illustration purposes we always showed the evaluation for the whole velocity space.
Reference: [14] <author> S. Thrun. </author> <title> Exploration and model building in mobile robot domains. </title> <booktitle> In Proceedings of the ICNN-93, </booktitle> <pages> pages 175-180, </pages> <address> San Francisco, CA, </address> <year> 1993. </year> <institution> IEEE Neural Network Council. </institution>
Reference-contexts: Each of these examples show the complete path to a particular goal point, which in our tests is set by a human operator. In the every-day use, these goal points are set automatically by a global path planner described in <ref> [14, 15, 16] </ref>. Parameter Settings Although the performance of the obstacle avoidance depends on the weighting parameters ff, fi, and fl, it is stable against slight changes of their values.
Reference: [15] <author> S. Thrun and A. Bucken. </author> <title> Integrating grid-based and topological maps for mobile robot navigation. </title> <booktitle> In Proceedings of the Thirteenth National Conference on Artificial Intelligence AAAI-96, </booktitle> <year> 1996. </year>
Reference-contexts: Each of these examples show the complete path to a particular goal point, which in our tests is set by a human operator. In the every-day use, these goal points are set automatically by a global path planner described in <ref> [14, 15, 16] </ref>. Parameter Settings Although the performance of the obstacle avoidance depends on the weighting parameters ff, fi, and fl, it is stable against slight changes of their values. <p> RHINO , a B21 mobile robot, frequently operates in our university building without human supervision. The approach described here is only part of the overall architecture. For example, approaches to building occupancy maps, global path planning and computer vision are surveyed in <ref> [3, 15, 16] </ref>. In principle, the approach proposed here only assumes geometric information about the relative location of obstacles. Therefore, it is well-suited for proximity sensors such as ultrasonic transducers, which were used in the experiments reported here, or such as laser range-finders.
Reference: [16] <author> S. Thrun, A. Bucken, W. Burgard, D. Fox, T. Frohlinghaus, D. Hennig, T. Hofmann, M. Krell, and T. Schimdt. </author> <title> Map learning and high-speed navigation in RHINO. </title> <editor> In D. Kortenkamp, R.P. Bonasso, and R. Murphy, editors, </editor> <title> AI-based Mobile Robots: Case studies of successful robot systems. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <note> to appear. 23 </note>
Reference-contexts: Each of these examples show the complete path to a particular goal point, which in our tests is set by a human operator. In the every-day use, these goal points are set automatically by a global path planner described in <ref> [14, 15, 16] </ref>. Parameter Settings Although the performance of the obstacle avoidance depends on the weighting parameters ff, fi, and fl, it is stable against slight changes of their values. <p> RHINO , a B21 mobile robot, frequently operates in our university building without human supervision. The approach described here is only part of the overall architecture. For example, approaches to building occupancy maps, global path planning and computer vision are surveyed in <ref> [3, 15, 16] </ref>. In principle, the approach proposed here only assumes geometric information about the relative location of obstacles. Therefore, it is well-suited for proximity sensors such as ultrasonic transducers, which were used in the experiments reported here, or such as laser range-finders.
References-found: 16

