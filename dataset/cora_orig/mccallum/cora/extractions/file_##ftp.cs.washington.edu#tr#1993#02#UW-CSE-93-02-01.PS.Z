URL: file://ftp.cs.washington.edu/tr/1993/02/UW-CSE-93-02-01.PS.Z
Refering-URL: http://www.cs.washington.edu/research/computation/papers.html
Root-URL: 
Title: Time-Space Tradeoffs for Undirected Graph Traversal  
Author: Paul Beame Allan Borodin Prabhakar Raghavan Walter L. Ruzzo Martin Tompa 
Date: Oct. 1990, pages 429-438.  
Address: St. Louis, MO,  Seattle, WA 98195  
Affiliation: of Computer Science,  Department of Computer Science and Engineering, FR-35 University of Washington  
Note: An extended abstract of this work appears in the Proceedings of the 31st Annual IEEE Symposium on Foundations  
Abstract: Technical Report 93-02-01 February, 1993 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. Adleman. </author> <title> Two theorems on random polynomial time. </title> <booktitle> In 19th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 75-83, </pages> <address> Ann Arbor, MI, </address> <month> Oct. </month> <year> 1978. </year> <note> IEEE. </note>
Reference: [2] <author> R. Aleliunas, R. M. Karp, R. J. Lipton, L. Lovasz, and C. Rackoff. </author> <title> Random walks, universal traversal sequences, and the complexity of maze problems. </title> <booktitle> In 20th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 218-223, </pages> <address> San Juan, Puerto Rico, </address> <month> Oct. </month> <year> 1979. </year> <note> IEEE. </note>
Reference-contexts: they can be traversed deterministically in polynomial time and small space simultaneously. (See Tompa [35] for a lower bound, and Barnes et al. [5] for an upper bound.) In contrast, undirected graphs can be traversed in polynomial time and logarithmic space probabilistically by using a random walk (Aleliunas et al. <ref> [2] </ref>, Borodin et al. [13]); this implies similar resource bounds on (nonuniform) deterministic algorithms (Aleliunas et al. [2]). <p> lower bound, and Barnes et al. [5] for an upper bound.) In contrast, undirected graphs can be traversed in polynomial time and logarithmic space probabilistically by using a random walk (Aleliunas et al. <ref> [2] </ref>, Borodin et al. [13]); this implies similar resource bounds on (nonuniform) deterministic algorithms (Aleliunas et al. [2]). <p> Depth-first or breadth-first search can traverse any n vertex, m edge undirected graph in O (m + n) time, but requires (n) space. Alternatively, a random walk can traverse an undirected graph using only O (log n) space, but requires fi (mn) expected time <ref> [2] </ref>. In fact, Broder et al. [16] have shown that there is a spectrum of compromises between time and space for this problem: any graph can be traversed in space S and expected time T , where ST = O (m 2 log 5 n). <p> Several authors have considered traversal of undirected regular graphs by a JAG with an unlimited number of states but only the minimum number (one) of pebbles, a model better known as a universal traversal sequence (Aleliunas et al. <ref> [2] </ref>, Alon et al. [3], Bar-Noy et al. [4], Bridgland [15], Istrail [25], Karloff et al. [28]). A result of Borodin, Ruzzo, and Tompa [14] shows that such an automaton requires (m 2 ) time (on regular graphs with 3n=2 m n 2 =6 n). <p> This is embodied in Lemma 5 below. One key idea in the proof of Lemma 5 is that a WAG can use a universal traversal sequence (Aleliunas et al. <ref> [2] </ref>) to explore its input. Recall that a universal traversal sequence is guaranteed to visit all vertices of a graph. The following simple extension is more useful for our purposes. <p> Let F be a family of edge-labeled graphs, and define C V (F ) to be the maximum cover time of any graph in F , and similarly for H V (F). A basic result of Aleliunas et al. <ref> [2] </ref> is that any family F of d-regular graphs has a (vertex) universal traversal sequence of length O (C V (F ) log (n 2 jF j)). <p> Zuckerman [37] observes that H E (G) H V (G) + 2m for all graphs G. Aleliunas et al. <ref> [2] </ref> show that H V (G) 2m, where is the diameter of G. It is well known (cf. Lemma 13) that the diameter of d-regular graphs is O (n=d). <p> there are at most n dn labeled d-regular n-vertex graphs, and at most n 4m labeled nonregular m-edge, n-vertex graphs. 2 We remark that Lemma 4 implies the same bounds for lengths of vertex universal traversal sequences, asymptotically matching the best known upper bounds for both regular (Aleliunas et al. <ref> [2] </ref>, Kahn et al. [27]) and nonregular graphs. The main technical result of this section is the following lemma.
Reference: [3] <author> N. Alon, Y. Azar, and Y. Ravid. </author> <title> Universal sequences for complete graphs. </title> <journal> Discrete Applied Mathematics, </journal> <volume> 27 </volume> <pages> 25-28, </pages> <year> 1990. </year> <month> 43 </month>
Reference-contexts: Several authors have considered traversal of undirected regular graphs by a JAG with an unlimited number of states but only the minimum number (one) of pebbles, a model better known as a universal traversal sequence (Aleliunas et al. [2], Alon et al. <ref> [3] </ref>, Bar-Noy et al. [4], Bridgland [15], Istrail [25], Karloff et al. [28]). A result of Borodin, Ruzzo, and Tompa [14] shows that such an automaton requires (m 2 ) time (on regular graphs with 3n=2 m n 2 =6 n). <p> A basic result of Aleliunas et al. [2] is that any family F of d-regular graphs has a (vertex) universal traversal sequence of length O (C V (F ) log (n 2 jF j)). Alon et al. <ref> [3] </ref> and Chandra et al. [17] observe that C V (F ) can be replaced by H V (F ) in this expression.
Reference: [4] <author> A. Bar-Noy, A. Borodin, M. Karchmer, N. Linial, and M. Werman. </author> <title> Bounds on universal sequences. </title> <journal> SIAM Journal on Computing, </journal> <volume> 18(2) </volume> <pages> 268-277, </pages> <month> Apr. </month> <year> 1989. </year>
Reference-contexts: Several authors have considered traversal of undirected regular graphs by a JAG with an unlimited number of states but only the minimum number (one) of pebbles, a model better known as a universal traversal sequence (Aleliunas et al. [2], Alon et al. [3], Bar-Noy et al. <ref> [4] </ref>, Bridgland [15], Istrail [25], Karloff et al. [28]). A result of Borodin, Ruzzo, and Tompa [14] shows that such an automaton requires (m 2 ) time (on regular graphs with 3n=2 m n 2 =6 n).
Reference: [5] <author> G. Barnes, J. F. Buss, W. L. Ruzzo, and B. Schieber. </author> <title> A sublinear space, polynomial time algorithm for directed s-t connectivity. </title> <booktitle> In Proceedings, Structure in Complexity Theory, Seventh Annual Conference, </booktitle> <pages> pages 27-33, </pages> <address> Boston, MA, </address> <month> June </month> <year> 1992. </year> <note> IEEE. </note>
Reference-contexts: For instance, although directed graphs can be traversed nondeterministically in polynomial time and logarithmic space simultaneously, it is not widely believed that they can be traversed deterministically in polynomial time and small space simultaneously. (See Tompa [35] for a lower bound, and Barnes et al. <ref> [5] </ref> for an upper bound.) In contrast, undirected graphs can be traversed in polynomial time and logarithmic space probabilistically by using a random walk (Aleliunas et al. [2], Borodin et al. [13]); this implies similar resource bounds on (nonuniform) deterministic algorithms (Aleliunas et al. [2]).
Reference: [6] <author> G. Barnes and W. L. Ruzzo. </author> <title> Deterministic algorithms for undirected s-t connectivity using polynomial time and sublinear space. </title> <booktitle> In Proceedings of the Twenty Third Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 43-53, </pages> <address> New Orleans, LA, </address> <month> May </month> <year> 1991. </year>
Reference-contexts: More recent work presents uniform deterministic polynomial time algorithms for the undirected case using sublinear space (Barnes and Ruzzo <ref> [6] </ref>), and even O (log 2 n) space (Nisan [30]), as well as a deterministic algorithm using O (log 1:5 n) space, but more than polynomial time (Nisan et al. [31]). In this paper we concentrate on the undirected case.
Reference: [7] <author> P. Berman and J. Simon. </author> <title> Lower bounds on graph threading by probabilistic machines. </title> <booktitle> In 24th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 304-311, </pages> <address> Tucson, AZ, </address> <month> Nov. </month> <year> 1983. </year> <note> IEEE. </note>
Reference-contexts: Standard techniques ([1, 2]) extend this result to randomized JAGs whose time bound is at most exponential in their space bound. Berman and Simon <ref> [7] </ref> extend this space lower bound to probabilistic JAGs with even larger time bounds, namely exponential in log O (1) n. In this paper we use variants of the JAG to study the tradeoff between time and space for the problem of undirected graph traversal.
Reference: [8] <author> M. Blum and D. Kozen. </author> <title> On the power of the compass (or, why mazes are easier to search than graphs). </title> <booktitle> In 19th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 132-142, </pages> <address> Ann Arbor, MI, </address> <month> Oct. </month> <year> 1978. </year> <note> IEEE. </note>
Reference-contexts: The pebbles represent vertex names that a structured algorithm might record in its workspace. Walking represents replacing a vertex name by some adjacent vertex found in the input. Jumping represents copying a previously recorded vertex name. Rabin (see [19]), Savitch [33], Blum and Sakoda [9], Blum and Kozen <ref> [8] </ref>, Hemmerling [21] and others have considered similar models; see Hemmerling's monograph for an extensive bibliography (going back over a century) emphasizing results for "labyrinths" | graphs embedded in two- or three-dimensional Euclidean space. The JAG is a structured model, but not a weak one. <p> Nevertheless, in Section 5 we prove a lower bound on a model with freely moving pebbles, but without the ability to jump one pebble to another. (This nonjumping model is closer to the one studied by Blum and Sakoda [9], Blum and Kozen <ref> [8] </ref> and Hemmerling [21].
Reference: [9] <author> M. Blum and W. J. Sakoda. </author> <title> On the capability of finite automata in 2 and 3 dimensional space. </title> <booktitle> In 18th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 147-161, </pages> <address> Providence, RI, </address> <month> Oct. </month> <year> 1977. </year> <note> IEEE. </note>
Reference-contexts: The pebbles represent vertex names that a structured algorithm might record in its workspace. Walking represents replacing a vertex name by some adjacent vertex found in the input. Jumping represents copying a previously recorded vertex name. Rabin (see [19]), Savitch [33], Blum and Sakoda <ref> [9] </ref>, Blum and Kozen [8], Hemmerling [21] and others have considered similar models; see Hemmerling's monograph for an extensive bibliography (going back over a century) emphasizing results for "labyrinths" | graphs embedded in two- or three-dimensional Euclidean space. The JAG is a structured model, but not a weak one. <p> Such models are surprisingly powerful; see Section 3. Nevertheless, in Section 5 we prove a lower bound on a model with freely moving pebbles, but without the ability to jump one pebble to another. (This nonjumping model is closer to the one studied by Blum and Sakoda <ref> [9] </ref>, Blum and Kozen [8] and Hemmerling [21].
Reference: [10] <author> B. Bollobas. </author> <title> Extremal Graph Theory with Emphasis on Probabilistic Methods, </title> <booktitle> volume 62 of Regional Conference Series in Mathematics. Published for the Conference Board of the Mathematical Sciences by the American Mathematical Society, </booktitle> <year> 1986. </year>
Reference-contexts: This is done by choosing a d-regular bipartite graph R whose girth is at least 2 + 2 and whose size jRj is d O () (Bollobas <ref> [10, Chapter 3] </ref>), and then constructing the half-size graph H by connecting c = bn=(2jRj)c copies of R in a cycle.
Reference: [11] <author> J. A. Bondy and U. S. R. Murty. </author> <title> Graph Theory with Applications. </title> <publisher> MacMillan, </publisher> <year> 1976. </year> <note> Revised paperback edition, </note> <year> 1977. </year>
Reference-contexts: Proof: With the given constraints on n and d, there is a d-regular, n-vertex, symmetrically labeled graph having its vertices and edges evenly divided between two connected components, one containing s, the other containing t (see <ref> [11, Exercise 6.2.1] </ref>). Fix a minimal length accepting computation of M on this disconnected graph. Suppose for some a 2 f0; 1; : : : ; d 1g that pebbles in this computation walk across fewer than bm=(2d)c edges labeled a.
Reference: [12] <author> A. Borodin. </author> <title> Structured vs. general models in computational complexity. </title> <editor> L'Enseignement Mathematique, XXVIII(3-4):171-190, July-Dec. </editor> <booktitle> 1982. Also in [29, </booktitle> <pages> pages 47-65]. </pages>
Reference-contexts: Although it would be desirable to show a tradeoff for a general model of computation such as a random access machine, obtaining such a tradeoff is beyond the reach of current techniques. Thus it is natural to consider a "structured" model (Borodin <ref> [12] </ref>), that is, one whose basic move is based on the adjacencies of the graph, as opposed to one whose basic move is based on the bits in the graph's encoding.
Reference: [13] <author> A. Borodin, S. A. Cook, P. W. Dymond, W. L. Ruzzo, and M. Tompa. </author> <title> Two applications of inductive counting for complementation problems. </title> <journal> SIAM Journal on Computing, </journal> <volume> 18(3) </volume> <pages> 559-578, </pages> <month> June </month> <year> 1989. </year> <note> See also 18(6): 1283, </note> <month> Dec. </month> <year> 1989. </year>
Reference-contexts: deterministically in polynomial time and small space simultaneously. (See Tompa [35] for a lower bound, and Barnes et al. [5] for an upper bound.) In contrast, undirected graphs can be traversed in polynomial time and logarithmic space probabilistically by using a random walk (Aleliunas et al. [2], Borodin et al. <ref> [13] </ref>); this implies similar resource bounds on (nonuniform) deterministic algorithms (Aleliunas et al. [2]).
Reference: [14] <author> A. Borodin, W. L. Ruzzo, and M. Tompa. </author> <title> Lower bounds on the length of universal traversal sequences. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 45(2) </volume> <pages> 180-203, </pages> <month> Oct. </month> <year> 1992. </year>
Reference-contexts: A result of Borodin, Ruzzo, and Tompa <ref> [14] </ref> shows that such an automaton requires (m 2 ) time (on regular graphs with 3n=2 m n 2 =6 n). Thus, for the particularly weak version of logarithmic space corresponding to the case P = 1, a quadratic lower bound on time is known. <p> Proposition 2: d-regular, n vertex graphs exist if and only if dn is even and d n 1. (See <ref> [14, Proposition 1] </ref>, for example, for a proof.) To allow use of -notation in expressing our lower bounds, however, the "time" used by a JAG must be defined for all sufficiently large n. <p> If M determines st-nonconnectivity for all 3-regular sym metrically labeled graphs, then M requires time (n 2 =P ). 13 Proof: The proof generalizes the main lower bound technique introduced by Borodin et al. <ref> [14] </ref>. <p> Fix any numbering of the vertices and any symmetric labeling of the edges of H. Take as the set of "switchable" edges any r = n=4 1 of the rungs. As in Borodin et al. <ref> [14] </ref>, for each x 2 f0; 1g r the graph G x is formed from two copies H 0 and H 1 of H by "switching" the edges corresponding to the 1's in x. <p> On the other hand, higher degree reduces the graph's maximum possible diameter, which perhaps helps. It is known that the length of universal traversal sequences is not monotonic in d, although it may be monotonic up to some large threshold, perhaps d = bn=2c1. (See Borodin et al. <ref> [14] </ref> for a discussion.) Similarly, the complexity of st-connectivity is not monotone in d, since regular graphs of degree d &gt; bn=2c 1 are necessarily connected, but it is plausibly monotone for d up to cn, for some constant 0 &lt; c &lt; 1=2. <p> Theorem 16 applies, specifically case (1). This gives a time lower bound of (md) = (m 1+1=(3P +3) ). 2 23 For P = 1 the (m 7=6 ) bound given above is not as strong as the (m 2 ) bound given by Borodin et al. <ref> [14] </ref>, nor as strong as the (n 2 ) bound given in Theorem 11, but is included for comparative purposes. <p> Such a regular graph exists by Proposition 2, since dn, d (n ), and hence d are even; since, as shown below, d &lt; and u d 2 =4 &lt; ; and since the proof of Proposition 2 given in Borodin et al. <ref> [14] </ref> constructs a regular graph that is Hamiltonian and hence has a u=2-matching. (That construction is similar to the construction of cross edges in one layer of our gadgets, where the 0-labels form a Hamiltonian cycle.) The nonconnected graph G 0 is built similarly, except that d+1 of the extra vertices,
Reference: [15] <author> M. F. Bridgland. </author> <title> Universal traversal sequences for paths and cycles. </title> <journal> Journal of Algorithms, </journal> <volume> 8(3) </volume> <pages> 395-404, </pages> <year> 1987. </year>
Reference-contexts: Several authors have considered traversal of undirected regular graphs by a JAG with an unlimited number of states but only the minimum number (one) of pebbles, a model better known as a universal traversal sequence (Aleliunas et al. [2], Alon et al. [3], Bar-Noy et al. [4], Bridgland <ref> [15] </ref>, Istrail [25], Karloff et al. [28]). A result of Borodin, Ruzzo, and Tompa [14] shows that such an automaton requires (m 2 ) time (on regular graphs with 3n=2 m n 2 =6 n).
Reference: [16] <author> A. Z. Broder, A. R. Karlin, P. Raghavan, and E. Upfal. </author> <title> Trading space for time in undirected s-t connectivity. </title> <booktitle> In Proceedings of the Twenty First Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 543-549, </pages> <address> Seattle, WA, </address> <month> May </month> <year> 1989. </year>
Reference-contexts: Alternatively, a random walk can traverse an undirected graph using only O (log n) space, but requires fi (mn) expected time [2]. In fact, Broder et al. <ref> [16] </ref> have shown that there is a spectrum of compromises between time and space for this problem: any graph can be traversed in space S and expected time T , where ST = O (m 2 log 5 n). <p> These results are outlined below. The upper bound of ST = O (m 2 log 5 n) by Broder et al. <ref> [16] </ref> is established on a model that is actually a restricted variant of the JAG. In their algorithm, the JAG initially drops P 1 pebbles on random vertices, after which they are never moved. <p> This paradigm motivates our study of JAGs with unmovable pebbles. Depth- and breadth-first search are examples of algorithms where vertices are permanently marked. The undirected st-connectivity algorithm of Broder et al. <ref> [16] </ref> is a more complex example of this paradigm. In outline it operates as follows. First, s and t are marked by pebbles. Then P 3 other pebbles are placed on the graph at random.
Reference: [17] <author> A. K. Chandra, P. Raghavan, W. L. Ruzzo, R. Smolensky, and P. Tiwari. </author> <title> The electrical resistance of a graph captures its commute and cover times. </title> <booktitle> In Proceedings of the Twenty First Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 574-586, </pages> <address> Seattle, WA, </address> <month> May </month> <year> 1989. </year>
Reference-contexts: A basic result of Aleliunas et al. [2] is that any family F of d-regular graphs has a (vertex) universal traversal sequence of length O (C V (F ) log (n 2 jF j)). Alon et al. [3] and Chandra et al. <ref> [17] </ref> observe that C V (F ) can be replaced by H V (F ) in this expression.
Reference: [18] <author> A. Cobham. </author> <title> The recognition problem for the set of perfect squares. </title> <institution> Research Paper RC-1704, IBM Watson Research Center, </institution> <year> 1966. </year>
Reference-contexts: Acceptance is defined as it is for the corresponding types of Turing machines. Time is defined as the number of moves, and space as log 2 Q, where Q is the number of states. General machines are almost identical to the "recognition machines" defined by Cobham <ref> [18] </ref>, except that recognition machines require the input to be accessed sequentially, whereas general machines allow completely random access to the input.
Reference: [19] <author> S. A. Cook and C. W. Rackoff. </author> <title> Space lower bounds for maze threadability on restricted machines. </title> <journal> SIAM Journal on Computing, </journal> <volume> 9(3) </volume> <pages> 636-652, </pages> <month> Aug. </month> <year> 1980. </year>
Reference-contexts: An appropriate structured model for proving such a tradeoff is some variant of the JAG ("jumping automaton for graphs") of Cook and Rackoff <ref> [19] </ref>. Such an automaton has a set of states, and a limited supply of pebbles that it can move from vertex to adjacent vertex ("walk") or directly to a vertex containing another pebble ("jump"). <p> The pebbles represent vertex names that a structured algorithm might record in its workspace. Walking represents replacing a vertex name by some adjacent vertex found in the input. Jumping represents copying a previously recorded vertex name. Rabin (see <ref> [19] </ref>), Savitch [33], Blum and Sakoda [9], Blum and Kozen [8], Hemmerling [21] and others have considered similar models; see Hemmerling's monograph for an extensive bibliography (going back over a century) emphasizing results for "labyrinths" | graphs embedded in two- or three-dimensional Euclidean space. <p> Presumably the bounds can be strengthened by also accounting for Q. It is tempting to tackle first the case in which Q is constant; indeed, Cook and Rackoff <ref> [19] </ref> investigate JAGs on undirected graphs in this case, showing for example that P Q = O (1) is impossible. For a nonjumping variant of JAGs, in Section 6 we prove the stronger bound P Q = (n) for 2-regular graphs, no matter how much time the automaton is allowed. <p> Following Cook and Rackoff <ref> [19] </ref>, a JAG is an automaton with Q states and P distinguishable pebbles, where both P and Q may depend on n and d. For the st-connectivity problem, two vertices s and t of its input graph are distinguished. The P pebbles are initially placed on s. <p> To date, the only lower bounds involving number of states are the relatively weak ones of Cook and Rackoff <ref> [19] </ref> and of our Section 6. (It might also be possible to exploit nonbijective labelings but, in light of Lemma 1 and the remarks following the proof of the theorem, this issue is a technicality of the model that is not of fundamental importance to the computational complexity of st-connectivity.) The <p> Now after moving the leading pebble along label 0 it is a simple matter to advance both pebbles one vertex while maintaining the invariant. A similar construction works with only one passive pebble, if the automaton can jump. 41 Cook and Rackoff <ref> [19, Theorem 4.14] </ref> present a family of 3-regular graphs that cannot be tra-versed using a constant number of states and pebbles, even if jumping is allowed and the edge labels are disclosed. <p> It would be interesting to strengthen the result of Section 5 to bijectively labeled graphs, or to strengthen the bounds for automata having more pebbles than the graph's degree. Cook and Rackoff <ref> [19, Theorem 4.13] </ref> show how to convert lower bounds on high degree graphs into lower bounds on degree 3 graphs, but unfortunately their conversion seems to rely on the ability to jump. Acknowledgements We thank Michael Sipser for showing us the construction generalized in Section 5.
Reference: [20] <author> P. Hall. </author> <title> On representatives of subsets. </title> <journal> J. London Math. Soc., </journal> <volume> 10 </volume> <pages> 26-30, </pages> <year> 1935. </year>
Reference-contexts: This last sum is minimized when the O (P ) marks are equidistantly distributed around the cycle, in which case the sum is (rn=P ) = (n 2 =P ). 2 Using Hall's Theorem <ref> [20] </ref>, one can in fact prove somewhat more about the w walks: each switchable edge in S can be assigned a unique walk that contains it. Next, we will sketch several promised generalizations to the theorem. <p> Note that, for every cycle in G x , there is a corresponding cycle in G 0 r that is no longer, so all graphs in G have 17 girth at least 2+2. Furthermore, note by Hall's Theorem <ref> [20] </ref> that R can be symmetrically labeled since it is regular and bipartite, hence so can G 0 r .
Reference: [21] <author> A. Hemmerling. </author> <title> Labyrinth Problems: Labyrinth-Searching Abilities of Automata, volume 114 of Teubner-Texte zur Mathematik. </title> <editor> B. G. </editor> <publisher> Teubner Verlagsgesellschaft, </publisher> <address> Leipzig, </address> <year> 1989. </year>
Reference-contexts: Walking represents replacing a vertex name by some adjacent vertex found in the input. Jumping represents copying a previously recorded vertex name. Rabin (see [19]), Savitch [33], Blum and Sakoda [9], Blum and Kozen [8], Hemmerling <ref> [21] </ref> and others have considered similar models; see Hemmerling's monograph for an extensive bibliography (going back over a century) emphasizing results for "labyrinths" | graphs embedded in two- or three-dimensional Euclidean space. The JAG is a structured model, but not a weak one. <p> Nevertheless, in Section 5 we prove a lower bound on a model with freely moving pebbles, but without the ability to jump one pebble to another. (This nonjumping model is closer to the one studied by Blum and Sakoda [9], Blum and Kozen [8] and Hemmerling <ref> [21] </ref>. We will distinguish this nonjumping variant by referring to it as a WAG | "walking automaton for graphs".) More specifically, using a very different and more complex argument, we prove lower bounds on time that are nonlinear in m for a wide range of values of P .
Reference: [22] <author> I. N. Herstein. </author> <title> Topics in Algebra. </title> <publisher> John Wiley & Sons, </publisher> <address> second edition, </address> <year> 1975. </year>
Reference-contexts: Set the variables corresponding to the other r jS d j switchable edges to 0, and these jS d j to some nonzero solution, which must exist in a homogeneous system with fewer equations than unknowns (Herstein <ref> [22, Corollary to Theorem 4.3.3] </ref>). Since such a nonzero solution cannot occur, we have a contradiction. Thus, at least r m of the w walks each have length at least m, an additional r m1 each have length at least m 1, etc.
Reference: [23] <author> S. Hoory and A. Wigderson. </author> <title> Universal sequences for expander graphs. </title> <institution> Hebrew University, Jerusalem, </institution> <month> Dec. </month> <year> 1989. </year>
Reference-contexts: A special case of bijective labelings are the symmetric labelings, where all edges have the same label in each direction, i.e., u;v = v;u for all u; v. (Universal traversal sequences for regular graphs with bijective and symmetric labelings have been considered previously by Hoory and Wigderson <ref> [23] </ref> and Istrail [26], respectively, although under different names. Both papers used the term "consistent" for these two different classes of restricted labelings.) Not all graphs have symmetric labelings, and while every graph does have a bijective labeling, such labelings are not known to be computable in logarithmic space. <p> Since the graph is bijectively labeled, these vertex numbers will be unique. (This idea is used by Hoory and Wigderson <ref> [23] </ref>.) For 1 i jU j + 1, let v i be the vertex reached from the fixed pebble by walking according to the length i 1 prefix of U .
Reference: [24] <author> N. Immerman. </author> <title> Nondeterministic space is closed under complementation. </title> <journal> SIAM Journal on Computing, </journal> <volume> 17(5) </volume> <pages> 935-938, </pages> <month> Oct. </month> <year> 1988. </year>
Reference-contexts: For nondeterministic or one-sided error probabilistic algorithms, however, the complexities may differ. In particular, if a problem L is solvable nonde-terministically in O (log n) space, then the complement of L is, too, by the result of Immerman and Szelepcsenyi <ref> [24, 34] </ref>. However, their algorithms are rather slow. For example, a logarithmic space nondeterministic RAM can solve st-connectivity in time O (n), but to solve the complementary st-nonconnectivity problem by the Immerman or Szelepcsenyi algorithms requires time (n 4 ). <p> In fact this is also possible, by the following corollary to Theorem 7 and Immerman and Szelepcsenyi's Theorem <ref> [24, 34] </ref>. Corollary 10: Let H be an undirected graph problem, and let S (n) = (log n). If H is solvable using space O (S (n)) by a nondeterministic JAG or WAG J, then so is its complement G H. <p> If H is solvable using space O (S (n)) by a nondeterministic JAG or WAG J, then so is its complement G H. Proof: Simulate J by a nondeterministic, S (n) space-bounded general machine M . By a straightforward adaptation of Immerman and Szelepcsenyi's Theorem <ref> [24, 34] </ref>, there is a nondeterministic, S (n) space-bounded general machine M 0 that accepts the complement G H. Simulate M 0 by a nondeterministic, S (n) space-bounded WAG. 2 We know no substantially simpler method for recognizing bipartite graphs.
Reference: [25] <author> S. Istrail. </author> <title> Polynomial universal traversing sequences for cycles are constructible. </title> <booktitle> In Proceedings of the Twentieth Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 491-503, </pages> <address> Chicago, IL, </address> <month> May </month> <year> 1988. </year>
Reference-contexts: Several authors have considered traversal of undirected regular graphs by a JAG with an unlimited number of states but only the minimum number (one) of pebbles, a model better known as a universal traversal sequence (Aleliunas et al. [2], Alon et al. [3], Bar-Noy et al. [4], Bridgland [15], Istrail <ref> [25] </ref>, Karloff et al. [28]). A result of Borodin, Ruzzo, and Tompa [14] shows that such an automaton requires (m 2 ) time (on regular graphs with 3n=2 m n 2 =6 n).
Reference: [26] <author> S. Istrail. </author> <title> Constructing generalized universal traversing sequences of polynomial size for graphs with small diameter. </title> <booktitle> In 31st Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 439-448, </pages> <address> St. Louis, MO, </address> <month> Oct. </month> <year> 1990. </year> <note> IEEE. </note>
Reference-contexts: A special case of bijective labelings are the symmetric labelings, where all edges have the same label in each direction, i.e., u;v = v;u for all u; v. (Universal traversal sequences for regular graphs with bijective and symmetric labelings have been considered previously by Hoory and Wigderson [23] and Istrail <ref> [26] </ref>, respectively, although under different names. Both papers used the term "consistent" for these two different classes of restricted labelings.) Not all graphs have symmetric labelings, and while every graph does have a bijective labeling, such labelings are not known to be computable in logarithmic space.
Reference: [27] <author> J. D. Kahn, N. Linial, N. Nisan, and M. E. Saks. </author> <title> On the cover time of random walks on graphs. </title> <journal> Journal of Theoretical Probability, </journal> <volume> 2(1) </volume> <pages> 121-128, </pages> <month> Jan. </month> <year> 1989. </year>
Reference-contexts: n dn labeled d-regular n-vertex graphs, and at most n 4m labeled nonregular m-edge, n-vertex graphs. 2 We remark that Lemma 4 implies the same bounds for lengths of vertex universal traversal sequences, asymptotically matching the best known upper bounds for both regular (Aleliunas et al. [2], Kahn et al. <ref> [27] </ref>) and nonregular graphs. The main technical result of this section is the following lemma.
Reference: [28] <author> H. J. Karloff, R. Paturi, and J. Simon. </author> <title> Universal traversal sequences of length n O(log n) for cliques. </title> <journal> Information Processing Letters, </journal> <volume> 28 </volume> <pages> 241-243, </pages> <month> Aug. </month> <year> 1988. </year>
Reference-contexts: traversal of undirected regular graphs by a JAG with an unlimited number of states but only the minimum number (one) of pebbles, a model better known as a universal traversal sequence (Aleliunas et al. [2], Alon et al. [3], Bar-Noy et al. [4], Bridgland [15], Istrail [25], Karloff et al. <ref> [28] </ref>). A result of Borodin, Ruzzo, and Tompa [14] shows that such an automaton requires (m 2 ) time (on regular graphs with 3n=2 m n 2 =6 n).
Reference: [29] <editor> Logic and Algorithmic, </editor> <booktitle> An International Symposium Held in Honor of Ernst Specker, </booktitle> <address> Zurich, </address> <month> Feb. </month> <pages> 5-11, </pages> <year> 1980. </year> <note> Monographie No. </note> <institution> 30 de L'Enseignement Mathematique, Universite de Geneve, </institution> <year> 1982. </year>
Reference: [30] <author> N. </author> <title> Nisan. </title> <booktitle> RL SC . In Proceedings of the Twenty Fourth Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 619-623, </pages> <address> Victoria, B.C., Canada, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: More recent work presents uniform deterministic polynomial time algorithms for the undirected case using sublinear space (Barnes and Ruzzo [6]), and even O (log 2 n) space (Nisan <ref> [30] </ref>), as well as a deterministic algorithm using O (log 1:5 n) space, but more than polynomial time (Nisan et al. [31]). In this paper we concentrate on the undirected case. The simultaneous time and space requirements of the best known algorithms for undirected graph traversal are as follows.
Reference: [31] <author> N. Nisan, E. Szemeredi, and A. Wigderson. </author> <title> Undirected connectivity in O(log 1:5 n) space. </title> <booktitle> In 33rd Annual Symposium on Foundations of Computer Science, </booktitle> <address> Pittsburgh, PA, </address> <month> Oct. </month> <year> 1992. </year> <note> IEEE. </note>
Reference-contexts: More recent work presents uniform deterministic polynomial time algorithms for the undirected case using sublinear space (Barnes and Ruzzo [6]), and even O (log 2 n) space (Nisan [30]), as well as a deterministic algorithm using O (log 1:5 n) space, but more than polynomial time (Nisan et al. <ref> [31] </ref>). In this paper we concentrate on the undirected case. The simultaneous time and space requirements of the best known algorithms for undirected graph traversal are as follows.
Reference: [32] <author> W. J. Savitch. </author> <title> Relationships between nondeterministic and deterministic tape complexities. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 4(2) </volume> <pages> 177-192, </pages> <year> 1970. </year>
Reference-contexts: of the location of each pebble requires log 2 n bits of memory, and keeping track of the state requires log 2 Q.) It is well known that st-connectivity for directed graphs can be solved by a deterministic Turing machine in O (log 2 n) space, by applying Savitch's Theorem <ref> [32] </ref> to the obvious O (log n) space nondeterministic algorithm for the problem. Cook and Rackoff show that the same O (log 2 n) space upper bound holds for deterministic JAGs by direct construction of an O (log n) pebble, n O (1) state deterministic JAG for directed st-connectivity.
Reference: [33] <author> W. J. Savitch. </author> <title> Maze recognizing automata and nondeterministic tape complexity. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 7(4) </volume> <pages> 389-403, </pages> <year> 1973. </year> <month> 45 </month>
Reference-contexts: The pebbles represent vertex names that a structured algorithm might record in its workspace. Walking represents replacing a vertex name by some adjacent vertex found in the input. Jumping represents copying a previously recorded vertex name. Rabin (see [19]), Savitch <ref> [33] </ref>, Blum and Sakoda [9], Blum and Kozen [8], Hemmerling [21] and others have considered similar models; see Hemmerling's monograph for an extensive bibliography (going back over a century) emphasizing results for "labyrinths" | graphs embedded in two- or three-dimensional Euclidean space. <p> For instance, a JAG can execute a depth-first or breadth-first search, provided it has one pebble for each vertex, by leaving a pebble on each visited vertex in order to avoid revisiting it, and keeping the stack or queue of pebble names in its state. Furthermore, as Savitch shows <ref> [33] </ref>, a JAG with the additional power to move a pebble from vertex i to vertex i + 1 can simulate an arbitrary Turing machine on directed graphs.
Reference: [34] <author> R. Szelepcsenyi. </author> <title> The method of forcing for nondeterministic automata. </title> <journal> Acta Informatica, </journal> <volume> 26 </volume> <pages> 279-284, </pages> <year> 1988. </year>
Reference-contexts: For nondeterministic or one-sided error probabilistic algorithms, however, the complexities may differ. In particular, if a problem L is solvable nonde-terministically in O (log n) space, then the complement of L is, too, by the result of Immerman and Szelepcsenyi <ref> [24, 34] </ref>. However, their algorithms are rather slow. For example, a logarithmic space nondeterministic RAM can solve st-connectivity in time O (n), but to solve the complementary st-nonconnectivity problem by the Immerman or Szelepcsenyi algorithms requires time (n 4 ). <p> In fact this is also possible, by the following corollary to Theorem 7 and Immerman and Szelepcsenyi's Theorem <ref> [24, 34] </ref>. Corollary 10: Let H be an undirected graph problem, and let S (n) = (log n). If H is solvable using space O (S (n)) by a nondeterministic JAG or WAG J, then so is its complement G H. <p> If H is solvable using space O (S (n)) by a nondeterministic JAG or WAG J, then so is its complement G H. Proof: Simulate J by a nondeterministic, S (n) space-bounded general machine M . By a straightforward adaptation of Immerman and Szelepcsenyi's Theorem <ref> [24, 34] </ref>, there is a nondeterministic, S (n) space-bounded general machine M 0 that accepts the complement G H. Simulate M 0 by a nondeterministic, S (n) space-bounded WAG. 2 We know no substantially simpler method for recognizing bipartite graphs.
Reference: [35] <author> M. Tompa. </author> <title> Two familiar transitive closure algorithms which admit no polynomial time, sub-linear space implementations. </title> <journal> SIAM Journal on Computing, </journal> <volume> 11(1) </volume> <pages> 130-137, </pages> <month> Feb. </month> <year> 1982. </year>
Reference-contexts: For instance, although directed graphs can be traversed nondeterministically in polynomial time and logarithmic space simultaneously, it is not widely believed that they can be traversed deterministically in polynomial time and small space simultaneously. (See Tompa <ref> [35] </ref> for a lower bound, and Barnes et al. [5] for an upper bound.) In contrast, undirected graphs can be traversed in polynomial time and logarithmic space probabilistically by using a random walk (Aleliunas et al. [2], Borodin et al. [13]); this implies similar resource bounds on (nonuniform) deterministic algorithms (Aleliunas
Reference: [36] <author> M. Tompa. </author> <title> Lower bounds on universal traversal sequences for cycles and higher degree graphs. </title> <journal> SIAM Journal on Computing, </journal> <volume> 21(6) </volume> <pages> 1153-1160, </pages> <month> Dec. </month> <year> 1992. </year>
Reference-contexts: For instance, it holds for any ff whose length is even and O (n 1:29 ) (Tompa <ref> [36] </ref>). Theorem 22: For any ff 2 f0; 1g fl of even length, any even integer n, and any integer k, if ff is not a universal traversal sequence for all labeled (n=2)-cycles, then ff k is not a universal traversal sequence for all labeled n-cycles.
Reference: [37] <author> D. Zuckerman. </author> <title> On the time to traverse all edges of a graph. </title> <journal> Information Processing Letters, </journal> <volume> 38(6) </volume> <pages> 335-337, </pages> <month> 28 June </month> <year> 1991. </year> <title> (Last RCS Revision: 1.126 (Long) Date: </title> <address> 1993/03/03 05:38:21 :) 46 </address>
Reference-contexts: Furthermore, for both regular and nonregular graphs, the technique yields an analogous expression bounding the length of half edge universal traversal sequences, using H E in place of H V . Zuckerman <ref> [37] </ref> observes that H E (G) H V (G) + 2m for all graphs G. Aleliunas et al. [2] show that H V (G) 2m, where is the diameter of G. It is well known (cf. Lemma 13) that the diameter of d-regular graphs is O (n=d).
References-found: 37

