URL: http://www.cs.tamu.edu/faculty/bhuyan/papers/hpca98m.ps
Refering-URL: http://www.cs.tamu.edu/faculty/bhuyan/
Root-URL: http://www.cs.tamu.edu
Email: E-mail: fpirvum, bhuyan, ninang@cs.tamu.edu  
Title: The Impact of Link Arbitration on Switch Performance  
Author: Marius Pirvu, Laxmi Bhuyan and Nan Ni 
Address: College Station, TX 77845  
Affiliation: Department of Computer Science Texas A&M University  
Abstract: Switch design for interconnection networks plays an important role in the overall performance of multiprocessors and computer networks. In this paper we study the impact of one parameter in the switch design space, link arbitration. We demonstrate that link arbitration can be a determining factor in the performance of current networks. Moreover, we expect increased research focus on arbitration techniques to become a trend in the future, as switch architectures evolve towards increasing the number of virtual channels and input ports. In the context of a state-of-the-art switch design we use both synthetic workload and execution driven simulations to compare several arbitration policies. Furthermore, we devise a new arbitration method, Look-Ahead arbitration. Under heavy traffic conditions the Look-Ahead policy provides important improvements over traditional arbitration schemes without a significant increase in hardware complexity. Also, we propose a priority based policy that is capable of reducing the execution time of parallel applications. Lastly, we enhance the arbitration policies by a supplemental mechanism, virtual channel reservation, intended to alleviate the hot-spot problem. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. N. Bhuyan. </author> <title> Analysis of interconnection networks with different arbiter designs. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 9(4):384403, </volume> <year> 1987. </year>
Reference-contexts: Related arbitration studies most often look into bus arbitration issues [7, 14, 10]. There are only a handful of papers that discuss link arbitration for switches in interconnection networks. However, in these papers the analysis method is typically modeling <ref> [1] </ref>. To the best of our knowledge this is the first paper to study switch arbitration in more detail using simulations. Our main results are based on simulations with a synthetically generated workload. We further validate our results through execution driven simulation of a few parallel programs.
Reference: [2] <author> J. Carbonaro and F. Verhoom. Cavallino: </author> <title> The teraflops router and NIC. </title> <booktitle> In Proceedings of Symposium on High Performance Interconnects, </booktitle> <pages> pages 157160, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Default architectural parameters uses wormhole routing and has four virtual channels (VC) at each input port. Such a small number of VCs is common. The Spider [6] and Cavallino <ref> [2] </ref> routers have both four VCs per input while the switch used in Cray T3E network has five. However, in our case the input buffer is dynamically allocated using a circular buffer [11].
Reference: [3] <author> W. Dally. </author> <title> Virtual-channel flow control. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 3(2):194205, </volume> <year> 1992. </year>
Reference-contexts: The arbitration is performed at flit level, every switch cycle. The flow control is also maintained at flit level and, similar to Spider [6] and ATLAS I [9] chips, is done using credit flow information <ref> [3] </ref>. In our experiments we employ two simulation methodologies: A. Synthetic workload. In this case the processor characteristics are irrelevant. The packets are generated with a given frequency and pushed in the network interface queue (NIQ) whose size is large enough to avoid overflow.
Reference: [4] <author> W. J. Dally and C. L. Seitz. </author> <title> Deadlock-free message routing in multiprocessor interconnection networks. </title> <journal> IEEE Trans. on Comp., </journal> <volume> C-36, 5:547553, </volume> <year> 1987. </year>
Reference-contexts: We further validate our results through execution driven simulation of a few parallel programs. Our simulated architecture reflects the current state-of-the-art interconnect and processors. The switch we use in our simulations is based on wormhole routing with virtual channels <ref> [4] </ref> and employs a DAFC (dynamically allocated fully connected) [5] design which is known to perform the best compared to other alternatives. We chose this configuration so that the only source of improvement remains a better arbitration scheme.
Reference: [5] <author> J. Ding and L. N. Bhuyan. </author> <title> Evaluation of multi-queue buffered multistage interconnection networks under uniform and non-uniform traffic patterns. </title> <journal> International Journal of Systems Science, </journal> <volume> 28(11):11151128, </volume> <year> 1997. </year>
Reference-contexts: We further validate our results through execution driven simulation of a few parallel programs. Our simulated architecture reflects the current state-of-the-art interconnect and processors. The switch we use in our simulations is based on wormhole routing with virtual channels [4] and employs a DAFC (dynamically allocated fully connected) <ref> [5] </ref> design which is known to perform the best compared to other alternatives. We chose this configuration so that the only source of improvement remains a better arbitration scheme. Current state-of-the-art switches use simple, traditional arbitration policies (e.g. first-come-first-served and round robin).
Reference: [6] <author> M. Galles. Spider: </author> <title> A high-speed network interconnect. </title> <booktitle> IEEE Micro, </booktitle> <pages> pages 3439, </pages> <month> January/Febrary </month> <year> 1997. </year>
Reference-contexts: Default architectural parameters uses wormhole routing and has four virtual channels (VC) at each input port. Such a small number of VCs is common. The Spider <ref> [6] </ref> and Cavallino [2] routers have both four VCs per input while the switch used in Cray T3E network has five. However, in our case the input buffer is dynamically allocated using a circular buffer [11]. <p> To assemble flits at reception and disassemble flits for transmission two special purpose registers (RxR and TxR) are kept at each input port. The arbitration is performed at flit level, every switch cycle. The flow control is also maintained at flit level and, similar to Spider <ref> [6] </ref> and ATLAS I [9] chips, is done using credit flow information [3]. In our experiments we employ two simulation methodologies: A. Synthetic workload. In this case the processor characteristics are irrelevant. <p> The arbiter will prefer the worm with the highest age. Inherently this arbitration policy is starvation free. As in the Round Robin case we can have a FCFS - Keep Flow method where the worm that is currently flowing out of the switch is given priority. The Spider chip <ref> [6] </ref> uses an 8-bit age counter to implement FCFS. However, their implementation differs from ours in that the age is carried along by the worm and is not reset when the worm enters a new switch. 3.3. <p> Packets with higher priorities are always selected first. When multiple packets have the same priority, the FCFS method is used to break the tie. To avoid starvation some special measures must be taken. For instance, in the Spider chip <ref> [6] </ref> when a packet accumulates a certain age, its priority level is increased. Traditionally, this arbitration policy has been used in the context of real time systems. We will show how it can be applied with success to shared memory multiprocessors that employ relaxed memory consistency models.
Reference: [7] <author> F. E. Guibaly. </author> <title> Design and analysis of arbitration protocols. </title> <journal> IEEE trans. on comp., C-38, </journal> <volume> 2:161171, </volume> <year> 1989. </year>
Reference-contexts: This mechanism works well in conjunction with any arbitration policy and gives performance benefits even in the absence of an explicit hot-spot. Related arbitration studies most often look into bus arbitration issues <ref> [7, 14, 10] </ref>. There are only a handful of papers that discuss link arbitration for switches in interconnection networks. However, in these papers the analysis method is typically modeling [1]. To the best of our knowledge this is the first paper to study switch arbitration in more detail using simulations.
Reference: [8] <author> M. Katevenis, D. Serpanos, and E. Spyridakis. </author> <title> Credit-flow-controlled ATM for MP interconnection: the ATLAS I single-chip ATM switch. </title> <booktitle> In Proceedings of the Fourth International Symposium on High-Performance Computer Architecture, </booktitle> <pages> pages 4756, </pages> <month> January </month> <year> 1998. </year>
Reference-contexts: We show that they can be successfully combined into more powerful policies covering a wide range of network traffic conditions. However, none of them is capable of preventing the lane hogging problem <ref> [8] </ref> common in hot-spot situations. We introduce an additional mechanism, virtual channel reservation to address this problem. Lane hogging can occur in traditional implementations of wormhole routing with virtual channels because any worm can occupy any virtual channel irrespective of the destination of the packet.
Reference: [9] <author> M. Katevenis, D. Serpanos, and P. Vatsolaki. </author> <title> ATLAS I: a General-Purpose, Single-Chip ATM Switch with Credit-Based Flow Control. </title> <booktitle> In Proceedings of the Hot Interconnects IV Symposium, </booktitle> <pages> pages 6373, </pages> <year> 1996. </year>
Reference-contexts: Our reservation mechanism prohibits the arbiter from choosing a worm which could hog the next input port. This method resembles the flow group implementation in ATLAS I chip <ref> [9] </ref> where identically destined flits (thus belonging to the same flow group) are not allowed to reside at the same time in an input port. In contrast to this method, we restrict the number of worms (not flits) that go to the same destination. <p> The arbitration is performed at flit level, every switch cycle. The flow control is also maintained at flit level and, similar to Spider [6] and ATLAS I <ref> [9] </ref> chips, is done using credit flow information [3]. In our experiments we employ two simulation methodologies: A. Synthetic workload. In this case the processor characteristics are irrelevant.
Reference: [10] <author> D. J. Kinniment and J. V. Woods. </author> <title> Synchronization and arbitration circuits in digital systems. </title> <booktitle> IEE Proceedings, Computers and Digital Techniques, </booktitle> <address> 123(10):961966, </address> <month> Oct. </month> <year> 1976. </year>
Reference-contexts: This mechanism works well in conjunction with any arbitration policy and gives performance benefits even in the absence of an explicit hot-spot. Related arbitration studies most often look into bus arbitration issues <ref> [7, 14, 10] </ref>. There are only a handful of papers that discuss link arbitration for switches in interconnection networks. However, in these papers the analysis method is typically modeling [1]. To the best of our knowledge this is the first paper to study switch arbitration in more detail using simulations.
Reference: [11] <author> N. Ni, M. Pirvu, and L. Bhuyan. </author> <title> Circular buffered switch design with wormhole routing and virtual channels. </title> <booktitle> In Proceedings of the 1998 IEEE International Conference on Computer Design, </booktitle> <pages> pages 466473, </pages> <month> October </month> <year> 1998. </year>
Reference-contexts: To accurately measure the contention in the network we employ a cycle by cycle simulation. The switch at each node is based on our design proposed in <ref> [11] </ref>. It has 4 input ports, 4 output ports and a pair of local links (1 input, 1 output) for the communication with the processing unit. <p> Such a small number of VCs is common. The Spider [6] and Cavallino [2] routers have both four VCs per input while the switch used in Cray T3E network has five. However, in our case the input buffer is dynamically allocated using a circular buffer <ref> [11] </ref>. Moreover, to improve performance, one flit per VC is reserved and only the rest of the input space is shared. In some experiments the total size of the input buffer is varied between 16 and 64 flits; in others we use the default value of 32 flits. <p> This new policy is expected to perform as good as any of its components in any situation. Indeed, in our experiments it succeeds to outperform all the other policies for all the applications considered. 5. Enhancing the Arbitration Process by Vir tual Channel Reservation In a previous paper <ref> [11] </ref> we showed that reserving a few flits per virtual channel has a beneficial effect on performance because it eliminates the possibility of one worm occupying all the available slots and blocking the other worms.
Reference: [12] <author> V. S. Pai, P. Ranganathan, and S. V. Adve. RSIM: </author> <title> An Execution-Driven Simulator for ILP-Based Shared-Memory Multiprocessors and Uniprocessors. </title> <booktitle> In Proceedings of the Third Workshop on Computer Architecture Education, </booktitle> <month> February </month> <year> 1997. </year>
Reference-contexts: The arbitration policies are compared in terms of performance in Section 4. Section 5 introduces the idea of virtual channel reservation as a method of preventing the negative effects of the hot-spot. Finally, Section 6 concludes the paper. 2. Simulation Environment Our simulator is based on RSIM <ref> [12] </ref>, but we completely changed the network part to allow for a cycle by cycle sim ulation of various arbitration policies. The architecture we simulate is a shared memory machine with 16 nodes connected by a 4fi4 mesh like in Figure 1 (a).
Reference: [13] <author> S. C. Woo, M. Ohara, E. Torrie, J. P. Singh, and A. Gupta. </author> <title> The SPLASH-2 programs: Characteriation and methodological considerations. </title> <booktitle> In Proceedings of the 22nd ISCA, </booktitle> <pages> pages 2437, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: B. Execution driven simulation of shared memory applications. In this case the only metric that we employ is the execution time. As applications we use three kernels: FFT and RADIX sort from the SPLASH-2 benchmark suite <ref> [13] </ref>, and MATMUL (matrix multiplication). FFT is run for 2 16 complex points, RADIX for 2 18 integers and MATMUL for 128fi128 matrices. The time has been measured only for the parallel part of the applications. The packets pushed into the network are of two types: requests and replies.
Reference: [14] <author> Q. Yang. </author> <title> Effects of arbitration protocols on the performance of multiple-bus multiprocessors. </title> <booktitle> In Proceedings of the 1991 ICPP, </booktitle> <pages> pages I600I603, </pages> <month> Aug. </month> <year> 1991. </year>
Reference-contexts: This mechanism works well in conjunction with any arbitration policy and gives performance benefits even in the absence of an explicit hot-spot. Related arbitration studies most often look into bus arbitration issues <ref> [7, 14, 10] </ref>. There are only a handful of papers that discuss link arbitration for switches in interconnection networks. However, in these papers the analysis method is typically modeling [1]. To the best of our knowledge this is the first paper to study switch arbitration in more detail using simulations.
References-found: 14

