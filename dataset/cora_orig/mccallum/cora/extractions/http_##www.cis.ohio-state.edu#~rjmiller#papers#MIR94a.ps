URL: http://www.cis.ohio-state.edu/~rjmiller/papers/MIR94a.ps
Refering-URL: http://www.cs.concordia.ca/~faculty/grahne/courses/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: raghug@cs.wisc.edu  
Title: Schema Equivalence in Heterogeneous Systems: Bridging Theory and Practice (Extended Abstract)  
Author: R. J. Miller Y. E. Ioannidis R. Ramakrishnan frmiller, yannis, 
Affiliation: Department of Computer Sciences, University of Wisconsin-Madison  
Abstract-found: 0
Intro-found: 1
Reference: 1. <author> S. Abiteboul and R. Hull. </author> <title> Restructuring Hierarchical Database Objects. </title> <journal> Theoretical Computer Science, </journal> <volume> 62 </volume> <pages> 3-38, </pages> <year> 1988. </year>
Reference-contexts: Decidable characterization of absolute equivalence are known for relational schemas with (primary) key dependencies and for types formed by the recursive application of product, set or union constructors on finite and infinite base types <ref> [1, 4, 5] </ref>. SIGs permit the representation of sets formed from nested product and union constructors, as well as simple constraints between these sets. These additions make testing for equivalence (and therefore dominance undecidable. Theorem 3. Testing for absolute equivalence of SIGs is undecidable.
Reference: 2. <author> J. Albert, R. Ahmed, M. A. Ketabchi, W. Kent, and M. C. Shan. </author> <title> Automatic Importation of Relational Schemas in Pegasus. </title> <booktitle> In Proc. of the 3rd Int'l Workshop on Research Issues in Data Eng.: Interoperability in Multidatabase Systems, </booktitle> <pages> pages 105-113, </pages> <address> Vienna, Austria, </address> <month> Apr. </month> <year> 1993. </year>
Reference-contexts: Within such tools, the translation process produces not only the translated schema, but a set of correspondences between the schemas that defines how an instance of the former corresponds to an instance of the latter. We call these correspondences instance mappings. For example, the Pegasus import tool <ref> [2] </ref> translates relational schemas to Iris schemas (Iris is a functional object model). For each Iris type, the result of translation includes a rule over a collection of relations in the original schema that defines the instances of the type. Such translation tools fully automate the production of instance mappings.
Reference: 3. <author> C. F. Eick. </author> <title> A Methodology for the Design and Transformation of Conceptual Schemas. </title> <booktitle> In Proc. of the Int'l Conf. on Very Large Data Bases, </booktitle> <pages> pages 25-34, </pages> <address> Barcelona, Spain, </address> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: For a subset of the universe, Y U , I Y (S) denotes the set of instances of S that contain only symbols in Y . 4 Information Capacity We consider formal notions of correctness for schema transformations that are based on the preservation of the information content of schemas <ref> [3, 4, 7, 9] </ref>. For a schema S, the latter is the set of valid instances, I (S). Intuitively, a schema S2 has more information capacity than a schema S1 if every instance of S1 can be mapped to an instance of S2 without loss of information. <p> Our response is to propose sets of schema transformations on SIGs that preserve or augment information capacity and are similar to transformations in existing integration and translation methodologies <ref> [3, 6, 7, 9] </ref>. For each set of transformations, we characterize precisely when a schema can be created from another through any arbitrary sequence of transformations.
Reference: 4. <author> R. Hull. </author> <title> Relative Information Capacity of Simple Relational Database Schemata. </title> <journal> SIAM Journal of Computing, </journal> <volume> 15(3) </volume> <pages> 856-886, </pages> <month> Aug. </month> <year> 1986. </year>
Reference-contexts: For a subset of the universe, Y U , I Y (S) denotes the set of instances of S that contain only symbols in Y . 4 Information Capacity We consider formal notions of correctness for schema transformations that are based on the preservation of the information content of schemas <ref> [3, 4, 7, 9] </ref>. For a schema S, the latter is the set of valid instances, I (S). Intuitively, a schema S2 has more information capacity than a schema S1 if every instance of S1 can be mapped to an instance of S2 without loss of information. <p> Decidable characterization of absolute equivalence are known for relational schemas with (primary) key dependencies and for types formed by the recursive application of product, set or union constructors on finite and infinite base types <ref> [1, 4, 5] </ref>. SIGs permit the representation of sets formed from nested product and union constructors, as well as simple constraints between these sets. These additions make testing for equivalence (and therefore dominance undecidable. Theorem 3. Testing for absolute equivalence of SIGs is undecidable. <p> Clearly, such mappings are of little use in a practical system. Furthermore, there exist very simple schemas with no "natural" correspondence between them that satisfy the definition of absolute dominance through a very complex instance level mapping <ref> [4] </ref>. This result, coupled with our undecidability result, show that absolute equivalence and dominance do not provide a sufficient foundation for analyzing practical integration problems. To overcome the limitations of absolute equivalence, various abstract properties have been proposed that restrict the class of allowable instance mappings [4]. <p> complex instance level mapping <ref> [4] </ref>. This result, coupled with our undecidability result, show that absolute equivalence and dominance do not provide a sufficient foundation for analyzing practical integration problems. To overcome the limitations of absolute equivalence, various abstract properties have been proposed that restrict the class of allowable instance mappings [4]. For example, internal equivalence states that two instances can be associated by an instance mapping only if they contain (almost) the same set of symbols.
Reference: 5. <author> R. Hull and C. K. Yap. </author> <title> The Format Model: A Theory of Database Organization. </title> <journal> Journal of the ACM, </journal> <volume> 31(3) </volume> <pages> 518-537, </pages> <year> 1984. </year>
Reference-contexts: Decidable characterization of absolute equivalence are known for relational schemas with (primary) key dependencies and for types formed by the recursive application of product, set or union constructors on finite and infinite base types <ref> [1, 4, 5] </ref>. SIGs permit the representation of sets formed from nested product and union constructors, as well as simple constraints between these sets. These additions make testing for equivalence (and therefore dominance undecidable. Theorem 3. Testing for absolute equivalence of SIGs is undecidable.
Reference: 6. <author> L. A. Kalinichenko. </author> <title> Methods and Tools for Equivalent Data Model Mapping Construction. </title> <booktitle> In Proc. of the Int'l Conf. on Extending Database Technology, </booktitle> <pages> pages 92-119, </pages> <address> Venice, Italy, </address> <month> Mar. </month> <year> 1990. </year>
Reference-contexts: Our response is to propose sets of schema transformations on SIGs that preserve or augment information capacity and are similar to transformations in existing integration and translation methodologies <ref> [3, 6, 7, 9] </ref>. For each set of transformations, we characterize precisely when a schema can be created from another through any arbitrary sequence of transformations.
Reference: 7. <author> V. M. Markowitz and A. Shoshani. </author> <title> Representing Extended Entity-Relationship Structures in Relational Databases: A Modular Approach. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 17(3) </volume> <pages> 423-464, </pages> <month> Sept. </month> <year> 1992. </year>
Reference-contexts: For a subset of the universe, Y U , I Y (S) denotes the set of instances of S that contain only symbols in Y . 4 Information Capacity We consider formal notions of correctness for schema transformations that are based on the preservation of the information content of schemas <ref> [3, 4, 7, 9] </ref>. For a schema S, the latter is the set of valid instances, I (S). Intuitively, a schema S2 has more information capacity than a schema S1 if every instance of S1 can be mapped to an instance of S2 without loss of information. <p> Our response is to propose sets of schema transformations on SIGs that preserve or augment information capacity and are similar to transformations in existing integration and translation methodologies <ref> [3, 6, 7, 9] </ref>. For each set of transformations, we characterize precisely when a schema can be created from another through any arbitrary sequence of transformations.
Reference: 8. <author> R. J. Miller, Y. E. Ioannidis, and R. Ramakrishnan. </author> <title> Schema Equivalence in Heterogeneous Systems: Bridging Theory and Practice. </title> <journal> Information Systems, </journal> <volume> 19(1) </volume> <pages> 3-31, </pages> <year> 1994. </year>
Reference-contexts: A discussion of the motivation for using SIGs and a full definition are given elsewhere <ref> [8] </ref>. The basic building blocks of the model are sets of data values (represented by the nodes of a graph). These sets may be combined by nested applications of union and product constructors to form new sets. <p> For example, internal equivalence states that two instances can be associated by an instance mapping only if they contain (almost) the same set of symbols. However, testing for both internal equivalence and dominance of SIG schemas is also undecidable <ref> [8] </ref>. 5 Structural Transformations Given Theorem 3 and other similar results, the question remains as to how practitioners can develop rigorous methodologies. <p> The complexity of algorithms for testing ffffi&-equivalence and ffffi&-dominance and producing instance mappings is examined elsewhere <ref> [8] </ref>.
Reference: 9. <author> A. Rosenthal and D. Reiner. </author> <title> Theoretically Sound Transformations for Practical Database Design. </title> <booktitle> In Proc. of the Int'l Conf. on Entity-Relationship Approach, </booktitle> <pages> pages 115-131, </pages> <address> New York, NY, </address> <month> Nov. </month> <year> 1987. </year> <title> This article was processed using the L A T E X macro package with LLNCS style </title>
Reference-contexts: For a subset of the universe, Y U , I Y (S) denotes the set of instances of S that contain only symbols in Y . 4 Information Capacity We consider formal notions of correctness for schema transformations that are based on the preservation of the information content of schemas <ref> [3, 4, 7, 9] </ref>. For a schema S, the latter is the set of valid instances, I (S). Intuitively, a schema S2 has more information capacity than a schema S1 if every instance of S1 can be mapped to an instance of S2 without loss of information. <p> Our response is to propose sets of schema transformations on SIGs that preserve or augment information capacity and are similar to transformations in existing integration and translation methodologies <ref> [3, 6, 7, 9] </ref>. For each set of transformations, we characterize precisely when a schema can be created from another through any arbitrary sequence of transformations.
References-found: 9

