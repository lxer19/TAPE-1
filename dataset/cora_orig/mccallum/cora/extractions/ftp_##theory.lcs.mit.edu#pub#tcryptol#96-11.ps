URL: ftp://theory.lcs.mit.edu/pub/tcryptol/96-11.ps
Refering-URL: http://theory.lcs.mit.edu/~tcryptol/1996/96-11.html
Root-URL: 
Email: E-mail: reingold@wisdom.weizmann.ac.il.  
Title: On the Construction of Pseudo-Random Permutations: Luby-Rackoff Revisited success probability of the adversary. Provide a
Author: Moni Naor Omer Reingold 
Address: Rehovot 76100, Israel.  
Affiliation: Dept. of Applied Mathematics and Computer Science, Weizmann Institute of Science,  
Note: Reduce the  Part of this research was supported by a Clore Scholars award.  
Abstract: Luby and Rackoff [27] showed a method for constructing a pseudo-random permutation from a pseudo-random function. The method is based on composing four (or three for weakened security) so called Feistel permutations, each of which requires the evaluation of a pseudo-random function. We reduce somewhat the complexity of the construction and simplify its proof of security by showing that two Feistel permutations are sufficient together with initial and final pair-wise independent permutations. The revised construction and proof provide a framework in which similar constructions may be brought up and their security can be easily proved. We demonstrate this by presenting some additional adjustments of the construction that achieve the following: fl Incumbent of the Morris and Rose Goldman Career Development Chair, Dept. of Applied Mathematics and Computer Science, Weizmann Institute of Science, Rehovot 76100, Israel. Research supported by grant no. 356/94 from the Israel Science Foundation administered by the Israeli Academy of Sciences and by BSF grant no. 94-00032. E-mail: naor@wisdom.weizmann.ac.il. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> W. Aiello and R. Venkatesan, </author> <title> Foiling Birthday Attacks in Length-Doubling Transformations, </title> <booktitle> Advances in Cryptology - EUROCRYPT '96, Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: The bound we achieve in this section ((2 (11=t)`=2 )) is better (for any t 4). Note that our construction uses pseudo-random functions with larger input size, which might be a disadvantage for some applications. Aiello and Venkatesan <ref> [1] </ref> show a construction of pseudo-random functions on ` bits from pseudo-random functions on `=2 bits. <p> A solution to the latter is proposed by Aiello and Venkatesan <ref> [1] </ref>. 8 Constructions of k-Wise ffi-Dependent Permutations In this section, we summarize the connection between the various constructions of this paper and the task of obtaining k-wise ffi-dependent permutations.
Reference: [2] <author> D. Aldous and P. Diaconis, </author> <title> Strong uniform times and finite random walks, </title> <booktitle> Advances in Applied Mathematics, </booktitle> <volume> vol. 8, </volume> <year> 1987, </year> <pages> pp. 69-97. </pages>
Reference-contexts: Oblivious here means that the location of a card after each round depends on a few random decisions. In [42] this idea is described for a specific card shu*ing procedure that was suggested by Aldous and Diaconis <ref> [2] </ref>. Unfortunately, to the best of our knowledge, this procedure was never proven to give (with few rounds) an almost uniform ordering of the cards. However, we can still use this technique with different card shu*ing procedures.
Reference: [3] <author> N. Alon, L. Babai and A. Itai, </author> <title> A fast and simple randomized parallel algorithm for the maximal independent set problem, </title> <journal> J. Algorithms, </journal> <volume> vol. 7(4), </volume> <year> 1986, </year> <pages> pp. 567-583. </pages>
Reference-contexts: Each of the 16 rounds of DES involves a Feistel permutation of a function determined by the 56 key bits. 1 Alongside cryptographic pseudo-randomness the last two decades saw the development of the notion of limited independence in various setting and formulations <ref> [3, 4, 13, 14, 25, 31, 50] </ref>. <p> "f is a pseudo-random function" as an abbreviation for "f is distributed according to a pseudo-random function ensemble" and similarly for "f is a pseudorandom permutation" and "f is a strong pseudo-random permutation" 2.3 k-Wise Independent Functions and Permutations The notions of k-wise independent functions and k-wise "almost" independent functions <ref> [3, 4, 13, 14, 25, 31, 50] </ref> (under several different formulations) play a major role in contemporary computer science. These are distributions of functions such that their value on any given k inputs is uniformly or "almost" uniformly distributed.
Reference: [4] <author> N. Alon, O. Goldreich, J. Hastad and R. Peralta, </author> <title> Simple constructions for almost k-wise independent random variables, Random Structures and Algorithms, </title> <journal> vol. </journal> <volume> 3, </volume> <year> 1992, </year> <pages> pp. 289-304. </pages>
Reference-contexts: Each of the 16 rounds of DES involves a Feistel permutation of a function determined by the 56 key bits. 1 Alongside cryptographic pseudo-randomness the last two decades saw the development of the notion of limited independence in various setting and formulations <ref> [3, 4, 13, 14, 25, 31, 50] </ref>. <p> "f is a pseudo-random function" as an abbreviation for "f is distributed according to a pseudo-random function ensemble" and similarly for "f is a pseudorandom permutation" and "f is a strong pseudo-random permutation" 2.3 k-Wise Independent Functions and Permutations The notions of k-wise independent functions and k-wise "almost" independent functions <ref> [3, 4, 13, 14, 25, 31, 50] </ref> (under several different formulations) play a major role in contemporary computer science. These are distributions of functions such that their value on any given k inputs is uniformly or "almost" uniformly distributed.
Reference: [5] <author> R. Anderson and E. Biham, </author> <title> Two practical and provably secure block ciphers: BEAR and LION, </title> <booktitle> Proc. Fast Software Encryption, Lecture Notes in Computer Science, </booktitle> <volume> vol. 1039, </volume> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 113-120. </pages>
Reference-contexts: We note that using such "unbalanced" Feistel permutations was previously suggested in <ref> [5, 28, 46] </ref>. <p> It is now possible to use the LR-Construction in order to get a pseudo-random permutation on large inputs. Anderson and Biham <ref> [5] </ref> and Lucks [28] show how to directly apply similar ideas into the LR-Construction in order to get a pseudo-random permutation on large inputs.
Reference: [6] <author> M. Bellare, R. Canetti and H. Krawczyk, </author> <title> Pseudorandom functions revisited: the cascade construction, </title> <booktitle> Proc. 37th IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1996, </year> <pages> pp. 514-523. </pages>
Reference-contexts: Bellare et. al. [8] show that the CBC-mode does define a construction of a pseudo-random function with small output length. They also provide a formal setting for the analysis of the security of pseudo-random functions with fixed input and output lengths. Bellare et. al. <ref> [6] </ref> consider the so called cascade construction of a pseudo-random function with small output length. Bellare and Rogaway [9] show how to use the CBC-mode in order to construct a pseudo-random permutation on large inputs (this is the only work we are aware of that explicitly refers to the problem). <p> The security of all these constructions is of similar order to the security of our construction. In contrast to our construction, <ref> [6, 8, 9] </ref> are all sequential in nature.
Reference: [7] <author> M. Bellare, O. Goldreich and S. Goldwasser, </author> <title> Incremental cryptography: the case of hashing and signing, </title> <booktitle> Advances in Cryptology - CRYPTO '94, Lecture Notes in Computer Science, </booktitle> <volume> vol. 839, </volume> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 216-233. </pages>
Reference: [8] <author> M. Bellare, J. Kilian and P. Rogaway, </author> <title> The security of cipher block chaining, </title> <booktitle> Advances in Cryptology - CRYPTO '94, Lecture Notes in Computer Science, </booktitle> <volume> vol. 839, </volume> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 341-358. </pages>
Reference-contexts: Note that when the encryption of a message M is f (M ), for a pseudo-random permutation f , then the only information that is leaked on M is whether or not M is equal to previously encrypted messages. Bellare et. al. <ref> [8] </ref> show that the CBC-mode does define a construction of a pseudo-random function with small output length. They also provide a formal setting for the analysis of the security of pseudo-random functions with fixed input and output lengths. <p> The security of all these constructions is of similar order to the security of our construction. In contrast to our construction, <ref> [6, 8, 9] </ref> are all sequential in nature.
Reference: [9] <author> M. Bellare and P. Rogaway, </author> <title> Block cipher mode of operation for secure, length-preserving encryption, </title> <note> manuscript in preparation. </note>
Reference-contexts: They also provide a formal setting for the analysis of the security of pseudo-random functions with fixed input and output lengths. Bellare et. al. [6] consider the so called cascade construction of a pseudo-random function with small output length. Bellare and Rogaway <ref> [9] </ref> show how to use the CBC-mode in order to construct a pseudo-random permutation on large inputs (this is the only work we are aware of that explicitly refers to the problem). <p> The security of all these constructions is of similar order to the security of our construction. In contrast to our construction, <ref> [6, 8, 9] </ref> are all sequential in nature.
Reference: [10] <author> M. Blum and S. Micali, </author> <title> How to generate cryptographically strong sequence of pseudo-random bits, </title> <journal> SIAM J. Comput., </journal> <volume> vol. 13, </volume> <year> 1984, </year> <pages> pp. 850-864. </pages>
Reference-contexts: The LR-Construction's main source of attraction is, most probably, its elegance. Goldreich, Goldwasser and Micali [17] showed a construction of pseudo-random functions from pseudo-random generators <ref> [10, 51] </ref>. Thus, the construction of pseudo-random permutations reduces to the construction of pseudo-random generators. <p> However, the pseudo-random distributions have substantially smaller entropy than the truly random distributions and are efficiently samplable. 2.2.1 Overview of Pseudo-Random Primitives In the case of pseudo-random (bit) generators, which were introduced by Blum and Micali and Yao <ref> [10, 51] </ref>, the pseudo-random distribution is of bit-sequences. The distribution is efficiently sampled using a, relatively small, truly random bit-sequence (the seed).
Reference: [11] <editor> G. Brassard, </editor> <booktitle> Modern cryptology, Lecture Notes in Computer Science, </booktitle> <volume> vol. 325, </volume> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: These are efficiently samplable and computable functions that are indistinguishable from random functions under all (efficient) black-box attacks (see Section 2 for a formal definition). Pseudo-random functions play a major role in private-key cryptography and have many additional applications (for some of these applications, see <ref> [11, 18, 26] </ref>). Luby and Rackoff [27] provided a construction of strong pseudo-random permutations, (LR-Construction) which was motivated by the structure of DES. The basic building block is the so called Feistel permutation 1 based on a pseudo-random function defined by the key. <p> Therefore, we would like a way to construct pseudo-random permutations (or functions) on large blocks from pseudo-random permutations (or functions) on small blocks. Several such constructions were suggested in the context of DES (see e.g. <ref> [11] </ref> for the different modes of operation for DES). The simplest, known as the electronic codebook mode (ECB-mode), is to divide the input into sub-blocks and to apply the pseudo-random permutation on each subblock separately.
Reference: [12] <author> P. J. Cameron, </author> <title> Finite permutation groups and finite simple groups, </title> <journal> Bull. London Math. Soc., </journal> <volume> vol. 13, </volume> <year> 1981, </year> <pages> pp. 1-22. </pages>
Reference-contexts: k: from the classification of finite simple groups it follows that for k 6 there are no k-transitive groups over [n] other than the symmetric group S n and the alternating group A n and there are only few such groups for k = 4 and k = 5 (see <ref> [12, 40] </ref>). One should be careful not to interpret this as implying that for k 4 there are no efficient algebraic constructions of k-wise independent permutations.
Reference: [13] <author> L. Carter and M. Wegman, </author> <title> Universal hash functions, </title> <journal> J. of Computer and System Sciences, </journal> <volume> vol. 18, </volume> <year> 1979, </year> <pages> pp. 143-154. </pages>
Reference-contexts: Each of the 16 rounds of DES involves a Feistel permutation of a function determined by the 56 key bits. 1 Alongside cryptographic pseudo-randomness the last two decades saw the development of the notion of limited independence in various setting and formulations <ref> [3, 4, 13, 14, 25, 31, 50] </ref>. <p> "f is a pseudo-random function" as an abbreviation for "f is distributed according to a pseudo-random function ensemble" and similarly for "f is a pseudorandom permutation" and "f is a strong pseudo-random permutation" 2.3 k-Wise Independent Functions and Permutations The notions of k-wise independent functions and k-wise "almost" independent functions <ref> [3, 4, 13, 14, 25, 31, 50] </ref> (under several different formulations) play a major role in contemporary computer science. These are distributions of functions such that their value on any given k inputs is uniformly or "almost" uniformly distributed. <p> on I n 7! I n function, H, is *-AXU 2 if for every x 6= y and every z (x; y; z 2 I n ), P rob h2H [h (x) h (y) = z] * The concept of *-AXU 2 functions was originally defined by Carter and Wegman <ref> [13] </ref>; We use the terminology of Rogaway [41]. Let H be a distribution of *-AXU 2 functions on n bits strings then, we can define H 1 to be fD h g h2H and H 2 to be fD 1 h g h2H . <p> A key of such a function is a uniformly chosen string a 2 I 2n1 and the j's bit of f a (x) (1 j n) is defined to be P n A substantial amount of research <ref> [13, 20, 24, 41, 48, 50] </ref> deals with the construction of efficient hash functions. This line of work contains constructions that obey weaker definitions on function families than pair-wise independence and in particular contains constructions of *-AXU 2 functions. <p> Notice that the computation of a function h 2 H is essentially equivalent to one computation of an *-AXU 2 function, g : I 2n (b1) 7! I 2n , and a few additional XOR operations per block. Using efficient constructions of *-AXU 2 functions <ref> [13, 20, 24, 41, 48, 50] </ref> we get an efficient function h. Krawczyk [24] shows a construction of m+` 2 `1 -AXU 2 functions from m bits to ` bits with ` key-bits.
Reference: [14] <author> B. Chor and O. Goldreich, </author> <title> On the power of two-point based sampling, </title> <journal> J. Complexity, </journal> <volume> vol. 5, </volume> <year> 1989, </year> <pages> pp. 96-106. </pages>
Reference-contexts: Each of the 16 rounds of DES involves a Feistel permutation of a function determined by the 56 key bits. 1 Alongside cryptographic pseudo-randomness the last two decades saw the development of the notion of limited independence in various setting and formulations <ref> [3, 4, 13, 14, 25, 31, 50] </ref>. <p> "f is a pseudo-random function" as an abbreviation for "f is distributed according to a pseudo-random function ensemble" and similarly for "f is a pseudorandom permutation" and "f is a strong pseudo-random permutation" 2.3 k-Wise Independent Functions and Permutations The notions of k-wise independent functions and k-wise "almost" independent functions <ref> [3, 4, 13, 14, 25, 31, 50] </ref> (under several different formulations) play a major role in contemporary computer science. These are distributions of functions such that their value on any given k inputs is uniformly or "almost" uniformly distributed.
Reference: [15] <author> S. Even and Y. Mansour, </author> <title> A construction of a cipher from a single pseudorandom permutation, </title> <note> To appear in J. of Cryptology. Preliminary version in Advances in Cryptology - ASIACRYPT '91, Lecture Notes in Computer Science, Springer-Verlag, 1991. 30 </note>
Reference-contexts: His proof is based on [29] and is motivated by his suggestion to use the LR-Construction when the input is divided into two unequal parts. Lucks left open the question of the construction of strong pseudo-random permutations. Somewhat different questions were considered by Even and Mansour <ref> [15] </ref> and by Kilian and Rogaway [22]. Loosely speaking, the former construct several pseudo-random permutations from a single one, while the latter show how to make exhaustive key-search attacks more difficult.
Reference: [16] <author> O. Goldreich, </author> <title> Foundations of cryptography (fragments of a book), 1995. Electronic publica-tion: http://www.eccc.uni-trier.de/eccc/info/ECCC-Books/eccc-books.html (Electronic Colloquium on Computational Complexity). </title>
Reference-contexts: A more thorough and formal treatment can be found in <ref> [16, 26] </ref>. <p> In addition, they consider a stronger notion of pseudo-randomness which they call super pseudo-random permutation generators. Here the distinguisher can also access the inverse permutation at points of its choice. Following <ref> [16] </ref> we use the term strong pseudo-random permutation ensembles (SPPE) instead. Luby and Rackoff provided a simple construction of PPE and SPPE (LR-Construction) which is the focus of this work. Their construction is based on a basic compound of the structure of DES [33], namely, the compositions of several Feistel-permutations.
Reference: [17] <author> O. Goldreich, S. Goldwasser and S. Micali, </author> <title> How to construct random functions, </title> <journal> J. of the ACM., </journal> <volume> vol. 33, </volume> <year> 1986, </year> <pages> pp. 792-807. </pages>
Reference-contexts: Here, the adversary has the additional power to ask for the decryption of ciphertexts of its choice. Pseudo-random permutations are closely related (both in definition and in their construction) to the earlier concept of pseudo-random functions which was defined by Goldreich, Goldwasser and Micali <ref> [17] </ref>. These are efficiently samplable and computable functions that are indistinguishable from random functions under all (efficient) black-box attacks (see Section 2 for a formal definition). Pseudo-random functions play a major role in private-key cryptography and have many additional applications (for some of these applications, see [11, 18, 26]). <p> Their construction consists of four rounds of Feistel permutations (or three rounds, for pseudo-random permutations) each round involves an application of a (different) pseudo-random function (see Figure 1.a for an illustration). The LR-Construction's main source of attraction is, most probably, its elegance. Goldreich, Goldwasser and Micali <ref> [17] </ref> showed a construction of pseudo-random functions from pseudo-random generators [10, 51]. Thus, the construction of pseudo-random permutations reduces to the construction of pseudo-random generators. <p> Hastad, Impagliazzo, Levin and Luby [21] showed how to construct a pseudo-random generator from any one-way function (informally, a function is one-way if it is easy to compute its value but hard to invert it). Pseudo-random function ensembles (PFE), which were introduced by Goldreich, Gold-wasser and Micali <ref> [17] </ref>, are distributions of functions. These distributions are indistinguishable from the uniform distribution under all (polynomially-bounded) black-box attacks (i.e. the distinguisher can only access the function by specifying inputs and getting the value of the function on these inputs).
Reference: [18] <author> O. Goldreich, S. Goldwasser and S. Micali, </author> <title> On the cryptographic applications of random functions, </title> <booktitle> Advances in Cryptology - CRYPTO '84, Lecture Notes in Computer Science, </booktitle> <volume> vol. 196, </volume> <publisher> Springer-Verlag, </publisher> <year> 1985, </year> <pages> pp. 276-288. </pages>
Reference-contexts: These are efficiently samplable and computable functions that are indistinguishable from random functions under all (efficient) black-box attacks (see Section 2 for a formal definition). Pseudo-random functions play a major role in private-key cryptography and have many additional applications (for some of these applications, see <ref> [11, 18, 26] </ref>). Luby and Rackoff [27] provided a construction of strong pseudo-random permutations, (LR-Construction) which was motivated by the structure of DES. The basic building block is the so called Feistel permutation 1 based on a pseudo-random function defined by the key.
Reference: [19] <author> O. Goldreich and A. Wigderson, </author> <title> Tiny families of functions with random properties: a quality-size trade-off for hashing, </title> <booktitle> Proc. 26th ACM Symp. on Theory of Computing, </booktitle> <year> 1994, </year> <pages> pp. 574-583. </pages>
Reference-contexts: An additional objective is to reduce the size of the family of hash functions (e.g., <ref> [19, 24] </ref>). In our setting the purpose of this is to reduce the key-size of the pseudo-random permutations. 6 Reducing the Distinguishing Probability There are various circumstances where it is desirable to have a pseudo-random permutation on relatively few bits (say 128).
Reference: [20] <author> S. Halevi and H. Krawczyk, MMH: </author> <title> message authentication in software in the Gbit/second rates, </title> <booktitle> Proc. Fast Software Encryption, Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997. </year>
Reference-contexts: A key of such a function is a uniformly chosen string a 2 I 2n1 and the j's bit of f a (x) (1 j n) is defined to be P n A substantial amount of research <ref> [13, 20, 24, 41, 48, 50] </ref> deals with the construction of efficient hash functions. This line of work contains constructions that obey weaker definitions on function families than pair-wise independence and in particular contains constructions of *-AXU 2 functions. <p> Notice that the computation of a function h 2 H is essentially equivalent to one computation of an *-AXU 2 function, g : I 2n (b1) 7! I 2n , and a few additional XOR operations per block. Using efficient constructions of *-AXU 2 functions <ref> [13, 20, 24, 41, 48, 50] </ref> we get an efficient function h. Krawczyk [24] shows a construction of m+` 2 `1 -AXU 2 functions from m bits to ` bits with ` key-bits.
Reference: [21] <author> J. Hastad, R. Impagliazzo, L. A. Levin and M. Luby, </author> <title> Construction of a pseudo-random generator from any one-way function, </title> <note> To appear in SIAM J. Comput. Preliminary versions by Impagliazzo et. </note> <editor> al. </editor> <booktitle> in 21st STOC, 1989 and Hastad in 22nd STOC, </booktitle> <year> 1990. </year>
Reference-contexts: The distribution is efficiently sampled using a, relatively small, truly random bit-sequence (the seed). Hastad, Impagliazzo, Levin and Luby <ref> [21] </ref> showed how to construct a pseudo-random generator from any one-way function (informally, a function is one-way if it is easy to compute its value but hard to invert it). Pseudo-random function ensembles (PFE), which were introduced by Goldreich, Gold-wasser and Micali [17], are distributions of functions.
Reference: [22] <author> J. Kilian and P. Rogaway, </author> <title> How to protect DES against exhaustive key search, </title> <booktitle> Advances in Cryptology - CRYPTO '96, </booktitle> <year> 1996, </year> <pages> pp. 252-267. </pages>
Reference-contexts: Lucks left open the question of the construction of strong pseudo-random permutations. Somewhat different questions were considered by Even and Mansour [15] and by Kilian and Rogaway <ref> [22] </ref>. Loosely speaking, the former construct several pseudo-random permutations from a single one, while the latter show how to make exhaustive key-search attacks more difficult.
Reference: [23] <author> T. Koren, </author> <title> On the construction of pseudorandom block ciphers, M.Sc. </title> <type> Thesis (in Hebrew), </type> <institution> CS Dept., Technion, Israel, </institution> <month> May </month> <year> 1989. </year>
Reference-contexts: are indistinguishable under non-adaptive attacks and can be distinguished using a very simple adaptive attack. 2 A different approach toward the proof was described by Patarin [35] (this is the only published proof, we are aware of, for the LR-Construction of strong pseudo-random permutations; another proof was given by Koren <ref> [23] </ref>). Other papers consider the security of possible variants of the construction. A significant portion of this research deals with the construction of pseudo-random permutations and strong pseudorandom permutations from a single pseudo-random function. This line of work is described in Section 5.1.
Reference: [24] <author> H. Krawczyk, </author> <title> LFSR-based hashing and authentication, </title> <booktitle> Advances in Cryptology - CRYPTO '94, Lecture Notes in Computer Science, </booktitle> <volume> vol. 839, </volume> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 129-139. </pages>
Reference-contexts: A key of such a function is a uniformly chosen string a 2 I 2n1 and the j's bit of f a (x) (1 j n) is defined to be P n A substantial amount of research <ref> [13, 20, 24, 41, 48, 50] </ref> deals with the construction of efficient hash functions. This line of work contains constructions that obey weaker definitions on function families than pair-wise independence and in particular contains constructions of *-AXU 2 functions. <p> An additional objective is to reduce the size of the family of hash functions (e.g., <ref> [19, 24] </ref>). In our setting the purpose of this is to reduce the key-size of the pseudo-random permutations. 6 Reducing the Distinguishing Probability There are various circumstances where it is desirable to have a pseudo-random permutation on relatively few bits (say 128). <p> Notice that the computation of a function h 2 H is essentially equivalent to one computation of an *-AXU 2 function, g : I 2n (b1) 7! I 2n , and a few additional XOR operations per block. Using efficient constructions of *-AXU 2 functions <ref> [13, 20, 24, 41, 48, 50] </ref> we get an efficient function h. Krawczyk [24] shows a construction of m+` 2 `1 -AXU 2 functions from m bits to ` bits with ` key-bits. <p> Using efficient constructions of *-AXU 2 functions [13, 20, 24, 41, 48, 50] we get an efficient function h. Krawczyk <ref> [24] </ref> shows a construction of m+` 2 `1 -AXU 2 functions from m bits to ` bits with ` key-bits.
Reference: [25] <author> M. Luby, </author> <title> A simple parallel algorithm for the maximal independent set problem, </title> <journal> SIAM J. Comput., </journal> <volume> vol 15(4), </volume> <year> 1986, </year> <pages> pp. 1036-1053. </pages>
Reference-contexts: Each of the 16 rounds of DES involves a Feistel permutation of a function determined by the 56 key bits. 1 Alongside cryptographic pseudo-randomness the last two decades saw the development of the notion of limited independence in various setting and formulations <ref> [3, 4, 13, 14, 25, 31, 50] </ref>. <p> "f is a pseudo-random function" as an abbreviation for "f is distributed according to a pseudo-random function ensemble" and similarly for "f is a pseudorandom permutation" and "f is a strong pseudo-random permutation" 2.3 k-Wise Independent Functions and Permutations The notions of k-wise independent functions and k-wise "almost" independent functions <ref> [3, 4, 13, 14, 25, 31, 50] </ref> (under several different formulations) play a major role in contemporary computer science. These are distributions of functions such that their value on any given k inputs is uniformly or "almost" uniformly distributed.
Reference: [26] <author> M. Luby, </author> <title> Pseudo-randomness and applications, </title> <publisher> Princeton University Press, </publisher> <year> 1996. </year>
Reference-contexts: These are efficiently samplable and computable functions that are indistinguishable from random functions under all (efficient) black-box attacks (see Section 2 for a formal definition). Pseudo-random functions play a major role in private-key cryptography and have many additional applications (for some of these applications, see <ref> [11, 18, 26] </ref>). Luby and Rackoff [27] provided a construction of strong pseudo-random permutations, (LR-Construction) which was motivated by the structure of DES. The basic building block is the so called Feistel permutation 1 based on a pseudo-random function defined by the key. <p> A more thorough and formal treatment can be found in <ref> [16, 26] </ref>.
Reference: [27] <author> M. Luby and C. Rackoff, </author> <title> How to construct pseudorandom permutations and pseudorandom functions, </title> <journal> SIAM J. Comput., </journal> <volume> vol. 17, </volume> <year> 1988, </year> <pages> pp. 373-386. </pages>
Reference-contexts: 1 Introduction Pseudo-random permutations, which were introduced by Luby and Rackoff <ref> [27] </ref>, formalize the well established cryptographic notion of block ciphers. Block ciphers are private-key encryption schemes such that the encryption of every plaintext-block is a single ciphertext-block of the same length. <p> Pseudo-random functions play a major role in private-key cryptography and have many additional applications (for some of these applications, see [11, 18, 26]). Luby and Rackoff <ref> [27] </ref> provided a construction of strong pseudo-random permutations, (LR-Construction) which was motivated by the structure of DES. The basic building block is the so called Feistel permutation 1 based on a pseudo-random function defined by the key. <p> Goldreich, Goldwasser and Micali provided a construction of such functions based on the existence of pseudo-random generators. 3 D stands for DES-like, another common term for these permutations. 4 Luby and Rackoff <ref> [27] </ref> define pseudo-random permutation ensembles (PPE) to be dis-tributions of permutations that are indistinguishable from the uniform distribution to an efficient observer (that, again, has access to the value of the permutation at points of its choice). <p> S ) = 1] P rob R [C M (T R ) = 1]j fi fi fi fi &lt; 2 n + 2 2n Given Theorem 3.2, the proof of Theorem 3.1 is essentially the same as the corresponding proof of the original LR-Construction (the proof of Theorem 1 of <ref> [27] </ref>, given their main Lemma).
Reference: [28] <author> S. Lucks, </author> <title> Faster Luby-Rackoff ciphers, </title> <booktitle> Proc. Fast Software Encryption, Lecture Notes in Computer Science, </booktitle> <volume> vol. 1039, </volume> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 189-203. </pages>
Reference-contexts: Other papers consider the security of possible variants of the construction. A significant portion of this research deals with the construction of pseudo-random permutations and strong pseudorandom permutations from a single pseudo-random function. This line of work is described in Section 5.1. Lucks <ref> [28] </ref> shows that a hash function can replace the pseudo-random function in the first round of the three-round LR-Construction. His proof is based on [29] and is motivated by his suggestion to use the LR-Construction when the input is divided into two unequal parts. <p> Thus, the proof of security in Section 3 also holds for the original LR-Construction. The idea of using *-AXU 2 functions instead of pseudo-random functions for the first round of the LR-Construction was previously suggested by Lucks <ref> [28] </ref>. Another advantage of this approach is that it allows us to use many efficient constructions of function families. An example of efficient 2 n -AXU 2 functions are Vazirani's "shift"-family [49]. <p> We note that using such "unbalanced" Feistel permutations was previously suggested in <ref> [5, 28, 46] </ref>. <p> It is now possible to use the LR-Construction in order to get a pseudo-random permutation on large inputs. Anderson and Biham [5] and Lucks <ref> [28] </ref> show how to directly apply similar ideas into the LR-Construction in order to get a pseudo-random permutation on large inputs.
Reference: [29] <author> U. M. Maurer, </author> <title> A simplified and generalized treatment of Luby-Rackoff pseudorandom permutation generators, </title> <booktitle> Advances in Cryptology - EUROCRYPT '92, Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1992, </year> <pages> pp. 239-255. </pages>
Reference-contexts: Section 9 Suggests directions for further research. 1.2 Related Work The LR-Construction inspired a considerable amount of research. We try to refer to the more relevant (to this paper) part of these directions. Several alternative proofs of the LR-Construction were presented over the years. Maurer <ref> [29] </ref> gives a proof of the three-round construction. His proof concentrates on the non-adaptive case, i.e., when the distinguisher has to specify all its queries in advance. A point worth noticing is that indistinguishability under non-adaptive attacks does not necessarily imply indistinguishability under adaptive attacks. <p> This line of work is described in Section 5.1. Lucks [28] shows that a hash function can replace the pseudo-random function in the first round of the three-round LR-Construction. His proof is based on <ref> [29] </ref> and is motivated by his suggestion to use the LR-Construction when the input is divided into two unequal parts. Lucks left open the question of the construction of strong pseudo-random permutations. Somewhat different questions were considered by Even and Mansour [15] and by Kilian and Rogaway [22]. <p> Schnorr considered the LR-Construction, where the functions used are truly random, as a pseudo-random generator that is secure if not too many bits are accessible. The security of Schnorr's generator does not depend on any unproven assumption. This notion of local-randomness is further treated in <ref> [29, 30] </ref>. Since the key of a random function is huge it makes sense to minimize the number of functions and, indeed, Schnorr suggested D f ffi D f ffi D f as pseudo-random (the suggested permutation was later shown to be distinguishable from random [43]). <p> This idea is further treated by Maurer and Massey [30]. Maurer <ref> [29] </ref> suggested to replace the truly random functions with what he calls locally random (or almost random) functions. <p> In the terminology of k-wise independence these ideas can be interpreted as a way of using the LR-Construction in order to obtain k-wise ffi-dependent permutations from k-wise ffi 0 -dependent functions (as long as k is not too large). Theorem 1 in <ref> [29] </ref> implies that when k-wise ffi 0 -dependent functions are used instead of pseudo-random functions in the LR-Construction the result is a k-wise ffi-dependent permutations for ffi = O (k 2 =2 n + ffi 0 ).
Reference: [30] <author> U. M. Maurer and J. L. Massey, </author> <title> Local randomness in pseudorandom sequences, </title> <journal> J. of Cryptology, </journal> <volume> vol. 4(2), </volume> <publisher> Springer-Verlag, </publisher> <year> 1991, </year> <pages> pp. 135-149. </pages>
Reference-contexts: Schnorr considered the LR-Construction, where the functions used are truly random, as a pseudo-random generator that is secure if not too many bits are accessible. The security of Schnorr's generator does not depend on any unproven assumption. This notion of local-randomness is further treated in <ref> [29, 30] </ref>. Since the key of a random function is huge it makes sense to minimize the number of functions and, indeed, Schnorr suggested D f ffi D f ffi D f as pseudo-random (the suggested permutation was later shown to be distinguishable from random [43]). <p> As mentioned in Section 5.1, Schnorr [47] suggested using the LR-Construction with truly random functions in order to get a pseudorandom generator that is secure as long as not too many bits of its output are accessible to the adversary. This idea is further treated by Maurer and Massey <ref> [30] </ref>. Maurer [29] suggested to replace the truly random functions with what he calls locally random (or almost random) functions.
Reference: [31] <author> J. Naor and M. Naor, </author> <title> Small-bias probability spaces: efficient constructions and applications, </title> <journal> SIAM J. Comput., </journal> <volume> vol. 22(4), </volume> <year> 1993, </year> <pages> pp. 838-856. </pages>
Reference-contexts: Each of the 16 rounds of DES involves a Feistel permutation of a function determined by the 56 key bits. 1 Alongside cryptographic pseudo-randomness the last two decades saw the development of the notion of limited independence in various setting and formulations <ref> [3, 4, 13, 14, 25, 31, 50] </ref>. <p> "f is a pseudo-random function" as an abbreviation for "f is distributed according to a pseudo-random function ensemble" and similarly for "f is a pseudorandom permutation" and "f is a strong pseudo-random permutation" 2.3 k-Wise Independent Functions and Permutations The notions of k-wise independent functions and k-wise "almost" independent functions <ref> [3, 4, 13, 14, 25, 31, 50] </ref> (under several different formulations) play a major role in contemporary computer science. These are distributions of functions such that their value on any given k inputs is uniformly or "almost" uniformly distributed.
Reference: [32] <author> M. Naor and O. Reingold, </author> <title> Synthesizers and their application to the parallel construction of pseudorandom functions, </title> <booktitle> Proc. 36th IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1995, </year> <pages> pp. 170-181. </pages>
Reference-contexts: Goldreich, Goldwasser and Micali [17] showed a construction of pseudo-random functions from pseudo-random generators [10, 51]. Thus, the construction of pseudo-random permutations reduces to the construction of pseudo-random generators. Recently a different construction of pseudorandom functions was introduced by Naor and Reingold <ref> [32] </ref>; this is a parallel construction based on a new primitive called a pseudo-random synthesizer that in particular can be constructed from any trapdoor permutation. This implies a parallel construction of pseudo-random permutations.
Reference: [33] <author> National Bureau of Standards, </author> <title> Data encryption standard, Federal Information Processing Standard, </title> <type> U.S. </type> <institution> Department of Commerce, </institution> <address> FIPS PUB 46, Washington, DC, </address> <year> 1977. </year>
Reference-contexts: Therefore we can think of the private key as determining a permutation on strings of the length of the block. A highly influential example of a block cipher is the Data Encryption Standard (DES) <ref> [33] </ref>. The advantage of block ciphers (compared to using pseudo-random functions for private-key encryption) is that the plaintext and ciphertext are of the same length. This property saves on memory and prevents wasting communication bandwidth. <p> Following [16] we use the term strong pseudo-random permutation ensembles (SPPE) instead. Luby and Rackoff provided a simple construction of PPE and SPPE (LR-Construction) which is the focus of this work. Their construction is based on a basic compound of the structure of DES <ref> [33] </ref>, namely, the compositions of several Feistel-permutations. Their definition of the PPE (resp. SPPE) is D f 3 ffi D f 2 ffi D f 1 (resp.
Reference: [34] <author> Y. Ohnishi, </author> <title> A study on data security, Master Thesis (in Japanese), </title> <publisher> Tohuku University, </publisher> <address> Japan, </address> <year> 1988. </year> <month> 31 </month>
Reference-contexts: general definitions of an E-Good sequence with only minor changes to the proof (as is the case for the permutation ^ S in Section 7). 5 Relaxing the Construction 5.1 PPE and SPPE with a Single Pseudo-Random Function Since Luby and Rackoff introduced their construction a considerable amount of research <ref> [34, 35, 36, 37, 39, 43, 44, 45, 47, 52] </ref> was focused on the following question: Can we obtain a similar construction of PPE or SPPE such that every permutation will be constructed from a single pseudo-random function? Apparently, this line of research originated in the work of Schnorr [47].
Reference: [35] <author> J. Patarin, </author> <title> Pseudorandom permutations based on the DES scheme, </title> <booktitle> Proc. of EUROCODE '90, Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1991, </year> <pages> pp. 193-204. </pages>
Reference-contexts: For example, a random involution (an involution is a permutation which is the inverse of itself) and a random permutation are indistinguishable under non-adaptive attacks and can be distinguished using a very simple adaptive attack. 2 A different approach toward the proof was described by Patarin <ref> [35] </ref> (this is the only published proof, we are aware of, for the LR-Construction of strong pseudo-random permutations; another proof was given by Koren [23]). Other papers consider the security of possible variants of the construction. <p> general definitions of an E-Good sequence with only minor changes to the proof (as is the case for the permutation ^ S in Section 7). 5 Relaxing the Construction 5.1 PPE and SPPE with a Single Pseudo-Random Function Since Luby and Rackoff introduced their construction a considerable amount of research <ref> [34, 35, 36, 37, 39, 43, 44, 45, 47, 52] </ref> was focused on the following question: Can we obtain a similar construction of PPE or SPPE such that every permutation will be constructed from a single pseudo-random function? Apparently, this line of research originated in the work of Schnorr [47].
Reference: [36] <author> J. Patarin, </author> <title> New results on pseudorandom permutation generators based on the DES scheme, </title> <booktitle> Advances in Cryptology - CRYPTO '91, Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1991. </year> <pages> pp. 301-312 </pages>
Reference-contexts: general definitions of an E-Good sequence with only minor changes to the proof (as is the case for the permutation ^ S in Section 7). 5 Relaxing the Construction 5.1 PPE and SPPE with a Single Pseudo-Random Function Since Luby and Rackoff introduced their construction a considerable amount of research <ref> [34, 35, 36, 37, 39, 43, 44, 45, 47, 52] </ref> was focused on the following question: Can we obtain a similar construction of PPE or SPPE such that every permutation will be constructed from a single pseudo-random function? Apparently, this line of research originated in the work of Schnorr [47]. <p> Let F be a pseudo-random permutation on ` bits (note that n = `=2 in Section 3) constructed from truly random functions (on `=2 bits) using the LR-Construction. As shown by Patarin <ref> [36] </ref>, F can be distinguished (with constant probability) from a random permutation using O (2 `=4 ) queries (which means that the analysis of the LR-Construction, where the distinguishing probability for m queries is O ( m 2 2 `=2 ), is tight). <p> Patarin [38] shows that if we take six rounds of the LR-Construction (instead of three or four), then the resulting permutation cannot be distinguished from a random permutation with advan tage better than 5m 3 2 ` (improving <ref> [36] </ref>). This means that distinguishing the six-round construction from a truly random permutation (with constant probability) requires at least (2 `=3 ) queries. The bound we achieve in this section ((2 (11=t)`=2 )) is better (for any t 4).
Reference: [37] <author> J. Patarin, </author> <title> How to construct pseudorandom and super pseudorandom permutations from one single pseudorandom function, </title> <booktitle> Advances in Cryptology - EUROCRYPT '92, Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1992, </year> <pages> pp. 256-266. </pages>
Reference-contexts: general definitions of an E-Good sequence with only minor changes to the proof (as is the case for the permutation ^ S in Section 7). 5 Relaxing the Construction 5.1 PPE and SPPE with a Single Pseudo-Random Function Since Luby and Rackoff introduced their construction a considerable amount of research <ref> [34, 35, 36, 37, 39, 43, 44, 45, 47, 52] </ref> was focused on the following question: Can we obtain a similar construction of PPE or SPPE such that every permutation will be constructed from a single pseudo-random function? Apparently, this line of research originated in the work of Schnorr [47]. <p> 2 is strongly pseudo-random, where I 2 F n is the identity function [45]. * D fffi~ffif ffi D f ffi D f is pseudo-random and D fffi~ffif ffi D f ffi D f ffi D f is strongly pseudo-random, where ~ is, for example, a rotation of one bit <ref> [37] </ref>. A critique which has been voiced often is that using only one pseudo-random function does not seem too significant: A pseudo-random function on n+2 bits can replace 4 pseudo-random functions on n bits or, alternatively, a small key can be used to pseudo-randomly generate a larger key.
Reference: [38] <author> J. Patarin, </author> <title> Improved security bounds for pseudorandom permutations, To appear in: </title> <booktitle> 4th ACM Conference on Computer and Communications Security, </booktitle> <year> 1997. </year>
Reference-contexts: To achieve this security t + 2 permutations are composed. The initial and final are pair-wise independent permutations, the rest are (generalized) Feistel permutations defined by I (11=t)` 7! I `=t random (or pseudo-random) functions (see Figure 3 for an illustration). Patarin <ref> [38] </ref> shows that if we take six rounds of the LR-Construction (instead of three or four), then the resulting permutation cannot be distinguished from a random permutation with advan tage better than 5m 3 2 ` (improving [36]).
Reference: [39] <author> J. Pieprzyk, </author> <title> How to construct pseudorandom permutations from single pseudorandom functions, </title> <booktitle> Advances in Cryptology - EUROCRYPT '90, Lecture Notes in Computer Science, </booktitle> <volume> vol. 473, </volume> <publisher> Springer-Verlag, </publisher> <year> 1991, </year> <pages> pp. 140-150. </pages>
Reference-contexts: general definitions of an E-Good sequence with only minor changes to the proof (as is the case for the permutation ^ S in Section 7). 5 Relaxing the Construction 5.1 PPE and SPPE with a Single Pseudo-Random Function Since Luby and Rackoff introduced their construction a considerable amount of research <ref> [34, 35, 36, 37, 39, 43, 44, 45, 47, 52] </ref> was focused on the following question: Can we obtain a similar construction of PPE or SPPE such that every permutation will be constructed from a single pseudo-random function? Apparently, this line of research originated in the work of Schnorr [47]. <p> k is not pseudo-random [52]. * For all i; j; k; l 1 the permutation D f i ffi D f j ffi D f k ffi D f l is not strongly pseudo-random [44]. * D f 2 ffi D f ffi D f ffi D f is pseudo-random <ref> [39] </ref>. * D f ffi D I ffi D f 2 ffi D f ffi D I ffi D f 2 is strongly pseudo-random, where I 2 F n is the identity function [45]. * D fffi~ffif ffi D f ffi D f is pseudo-random and D fffi~ffif ffi D f
Reference: [40] <author> D. J. S. Robinson, </author> <title> A course in the theory of groups 2nd ed., </title> <publisher> New York : Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: k: from the classification of finite simple groups it follows that for k 6 there are no k-transitive groups over [n] other than the symmetric group S n and the alternating group A n and there are only few such groups for k = 4 and k = 5 (see <ref> [12, 40] </ref>). One should be careful not to interpret this as implying that for k 4 there are no efficient algebraic constructions of k-wise independent permutations.
Reference: [41] <author> P. Rogaway, </author> <title> Bucket hashing and its application to fast message authentication, </title> <booktitle> Advances in Cryptology - CRYPTO '95, Lecture Notes in Computer Science, </booktitle> <volume> vol. 963, </volume> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 74-85. </pages>
Reference-contexts: H, is *-AXU 2 if for every x 6= y and every z (x; y; z 2 I n ), P rob h2H [h (x) h (y) = z] * The concept of *-AXU 2 functions was originally defined by Carter and Wegman [13]; We use the terminology of Rogaway <ref> [41] </ref>. Let H be a distribution of *-AXU 2 functions on n bits strings then, we can define H 1 to be fD h g h2H and H 2 to be fD 1 h g h2H . <p> A key of such a function is a uniformly chosen string a 2 I 2n1 and the j's bit of f a (x) (1 j n) is defined to be P n A substantial amount of research <ref> [13, 20, 24, 41, 48, 50] </ref> deals with the construction of efficient hash functions. This line of work contains constructions that obey weaker definitions on function families than pair-wise independence and in particular contains constructions of *-AXU 2 functions. <p> Notice that the computation of a function h 2 H is essentially equivalent to one computation of an *-AXU 2 function, g : I 2n (b1) 7! I 2n , and a few additional XOR operations per block. Using efficient constructions of *-AXU 2 functions <ref> [13, 20, 24, 41, 48, 50] </ref> we get an efficient function h. Krawczyk [24] shows a construction of m+` 2 `1 -AXU 2 functions from m bits to ` bits with ` key-bits.
Reference: [42] <author> S. Rudich, </author> <title> Limits on the provable consequences of one-way functions, </title> <type> PhD Thesis, </type> <address> U. C. Berkeley. </address>
Reference-contexts: This construction requires ` applications of k-wise ffi 0 -dependent functions from ` 1 bits to a single bit. An interesting question is to find a simple construction of k-wise ffi-dependent permutations for an arbitrarily small ffi and an arbitrary k. An "old" proposal by the first author (see <ref> [42, page 17] </ref>) is to use an "oblivious" card shu*ing procedure that requires only few rounds. Oblivious here means that the location of a card after each round depends on a few random decisions. <p> An "old" proposal by the first author (see [42, page 17]) is to use an "oblivious" card shu*ing procedure that requires only few rounds. Oblivious here means that the location of a card after each round depends on a few random decisions. In <ref> [42] </ref> this idea is described for a specific card shu*ing procedure that was suggested by Aldous and Diaconis [2]. Unfortunately, to the best of our knowledge, this procedure was never proven to give (with few rounds) an almost uniform ordering of the cards.
Reference: [43] <author> R. A. Rueppel, </author> <title> On the security of Schnorr's pseudo random generator, </title> <booktitle> Advances in Cryptology EU-ROCRYPT '89, Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1989, </year> <pages> pp. 423-428. </pages>
Reference-contexts: general definitions of an E-Good sequence with only minor changes to the proof (as is the case for the permutation ^ S in Section 7). 5 Relaxing the Construction 5.1 PPE and SPPE with a Single Pseudo-Random Function Since Luby and Rackoff introduced their construction a considerable amount of research <ref> [34, 35, 36, 37, 39, 43, 44, 45, 47, 52] </ref> was focused on the following question: Can we obtain a similar construction of PPE or SPPE such that every permutation will be constructed from a single pseudo-random function? Apparently, this line of research originated in the work of Schnorr [47]. <p> Since the key of a random function is huge it makes sense to minimize the number of functions and, indeed, Schnorr suggested D f ffi D f ffi D f as pseudo-random (the suggested permutation was later shown to be distinguishable from random <ref> [43] </ref>). Following is an informal description of some of these results.
Reference: [44] <author> B. Sadeghiyan and J. Pieprzyk, </author> <title> On necessary and sufficient conditions for the construction of super pseudorandom permutations, </title> <booktitle> Abstracts of ASIACRYPT '91, Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1991, </year> <pages> pp. 194-209. </pages>
Reference-contexts: general definitions of an E-Good sequence with only minor changes to the proof (as is the case for the permutation ^ S in Section 7). 5 Relaxing the Construction 5.1 PPE and SPPE with a Single Pseudo-Random Function Since Luby and Rackoff introduced their construction a considerable amount of research <ref> [34, 35, 36, 37, 39, 43, 44, 45, 47, 52] </ref> was focused on the following question: Can we obtain a similar construction of PPE or SPPE such that every permutation will be constructed from a single pseudo-random function? Apparently, this line of research originated in the work of Schnorr [47]. <p> i; j; k 1 the permutation D f i ffi D f j ffi D f k is not pseudo-random [52]. * For all i; j; k; l 1 the permutation D f i ffi D f j ffi D f k ffi D f l is not strongly pseudo-random <ref> [44] </ref>. * D f 2 ffi D f ffi D f ffi D f is pseudo-random [39]. * D f ffi D I ffi D f 2 ffi D f ffi D I ffi D f 2 is strongly pseudo-random, where I 2 F n is the identity function [45]. *
Reference: [45] <author> B. Sadeghiyan and J. Pieprzyk, </author> <title> A construction for super pseudorandom permutations from a single pseudorandom function, </title> <booktitle> Advances in Cryptology - EUROCRYPT '92, Lecture Notes in Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1992, </year> <pages> pp. 267-284 </pages>
Reference-contexts: general definitions of an E-Good sequence with only minor changes to the proof (as is the case for the permutation ^ S in Section 7). 5 Relaxing the Construction 5.1 PPE and SPPE with a Single Pseudo-Random Function Since Luby and Rackoff introduced their construction a considerable amount of research <ref> [34, 35, 36, 37, 39, 43, 44, 45, 47, 52] </ref> was focused on the following question: Can we obtain a similar construction of PPE or SPPE such that every permutation will be constructed from a single pseudo-random function? Apparently, this line of research originated in the work of Schnorr [47]. <p> pseudo-random [44]. * D f 2 ffi D f ffi D f ffi D f is pseudo-random [39]. * D f ffi D I ffi D f 2 ffi D f ffi D I ffi D f 2 is strongly pseudo-random, where I 2 F n is the identity function <ref> [45] </ref>. * D fffi~ffif ffi D f ffi D f is pseudo-random and D fffi~ffif ffi D f ffi D f ffi D f is strongly pseudo-random, where ~ is, for example, a rotation of one bit [37].
Reference: [46] <author> B. Schneier and J. Kelsey, </author> <title> Unbalanced Feistel networks and block cipher design, </title> <booktitle> Proc. Fast Software Encryption, Lecture Notes in Computer Science, </booktitle> <volume> vol. 1039, </volume> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 121-144. </pages>
Reference-contexts: We note that using such "unbalanced" Feistel permutations was previously suggested in <ref> [5, 28, 46] </ref>.
Reference: [47] <author> C. P. Schnorr, </author> <title> On the construction of random number generators and random function generators, </title> <booktitle> Advances in Cryptology - EUROCRYPT '88, Lecture Notes in Computer Science, </booktitle> <volume> vol. 330, </volume> <publisher> Springer-Verlag, </publisher> <year> 1988, </year> <pages> pp. 225-232. </pages>
Reference-contexts: general definitions of an E-Good sequence with only minor changes to the proof (as is the case for the permutation ^ S in Section 7). 5 Relaxing the Construction 5.1 PPE and SPPE with a Single Pseudo-Random Function Since Luby and Rackoff introduced their construction a considerable amount of research <ref> [34, 35, 36, 37, 39, 43, 44, 45, 47, 52] </ref> was focused on the following question: Can we obtain a similar construction of PPE or SPPE such that every permutation will be constructed from a single pseudo-random function? Apparently, this line of research originated in the work of Schnorr [47]. <p> research [34, 35, 36, 37, 39, 43, 44, 45, 47, 52] was focused on the following question: Can we obtain a similar construction of PPE or SPPE such that every permutation will be constructed from a single pseudo-random function? Apparently, this line of research originated in the work of Schnorr <ref> [47] </ref>. Schnorr considered the LR-Construction, where the functions used are truly random, as a pseudo-random generator that is secure if not too many bits are accessible. The security of Schnorr's generator does not depend on any unproven assumption. This notion of local-randomness is further treated in [29, 30]. <p> A solution to the latter is proposed by Aiello and Venkatesan [1]. 8 Constructions of k-Wise ffi-Dependent Permutations In this section, we summarize the connection between the various constructions of this paper and the task of obtaining k-wise ffi-dependent permutations. As mentioned in Section 5.1, Schnorr <ref> [47] </ref> suggested using the LR-Construction with truly random functions in order to get a pseudorandom generator that is secure as long as not too many bits of its output are accessible to the adversary. This idea is further treated by Maurer and Massey [30].
Reference: [48] <author> D. Stinson, </author> <title> Universal hashing and authentication codes, Designs, </title> <journal> Codes and Cryptography, </journal> <volume> vol. 4 (1994), </volume> <pages> pp. 369-380. </pages>
Reference-contexts: A key of such a function is a uniformly chosen string a 2 I 2n1 and the j's bit of f a (x) (1 j n) is defined to be P n A substantial amount of research <ref> [13, 20, 24, 41, 48, 50] </ref> deals with the construction of efficient hash functions. This line of work contains constructions that obey weaker definitions on function families than pair-wise independence and in particular contains constructions of *-AXU 2 functions. <p> Notice that the computation of a function h 2 H is essentially equivalent to one computation of an *-AXU 2 function, g : I 2n (b1) 7! I 2n , and a few additional XOR operations per block. Using efficient constructions of *-AXU 2 functions <ref> [13, 20, 24, 41, 48, 50] </ref> we get an efficient function h. Krawczyk [24] shows a construction of m+` 2 `1 -AXU 2 functions from m bits to ` bits with ` key-bits.
Reference: [49] <author> U. V. Vazirani, </author> <title> Randomness, adversaries and computation, </title> <type> PhD Thesis, </type> <address> U. C. Berkeley, </address> <year> 1986. </year>
Reference-contexts: Another advantage of this approach is that it allows us to use many efficient constructions of function families. An example of efficient 2 n -AXU 2 functions are Vazirani's "shift"-family <ref> [49] </ref>.
Reference: [50] <author> M. Wegman and L. Carter, </author> <title> New hash functions and their use in authentication and set equality, </title> <journal> J. of Computer and System Sciences, </journal> <volume> vol. 22, </volume> <year> 1981, </year> <pages> pp. 265-279. </pages>
Reference-contexts: Each of the 16 rounds of DES involves a Feistel permutation of a function determined by the 56 key bits. 1 Alongside cryptographic pseudo-randomness the last two decades saw the development of the notion of limited independence in various setting and formulations <ref> [3, 4, 13, 14, 25, 31, 50] </ref>. <p> "f is a pseudo-random function" as an abbreviation for "f is distributed according to a pseudo-random function ensemble" and similarly for "f is a pseudorandom permutation" and "f is a strong pseudo-random permutation" 2.3 k-Wise Independent Functions and Permutations The notions of k-wise independent functions and k-wise "almost" independent functions <ref> [3, 4, 13, 14, 25, 31, 50] </ref> (under several different formulations) play a major role in contemporary computer science. These are distributions of functions such that their value on any given k inputs is uniformly or "almost" uniformly distributed. <p> A key of such a function is a uniformly chosen string a 2 I 2n1 and the j's bit of f a (x) (1 j n) is defined to be P n A substantial amount of research <ref> [13, 20, 24, 41, 48, 50] </ref> deals with the construction of efficient hash functions. This line of work contains constructions that obey weaker definitions on function families than pair-wise independence and in particular contains constructions of *-AXU 2 functions. <p> Notice that the computation of a function h 2 H is essentially equivalent to one computation of an *-AXU 2 function, g : I 2n (b1) 7! I 2n , and a few additional XOR operations per block. Using efficient constructions of *-AXU 2 functions <ref> [13, 20, 24, 41, 48, 50] </ref> we get an efficient function h. Krawczyk [24] shows a construction of m+` 2 `1 -AXU 2 functions from m bits to ` bits with ` key-bits. <p> The security of all these constructions is of similar order to the security of our construction. In contrast to our construction, [6, 8, 9] are all sequential in nature. A different approach that may be attributed in part to Carter and Wegman <ref> [50] </ref>, is to define a length preserving pseudo-random function ~ F as G ffi F ffi h where, h is a pair-wise independent hash function with short output, F is a length preserving pseudo-random function on short inputs and G a pseudo-random (bit) generator.
Reference: [51] <author> A. C. Yao, </author> <title> Theory and applications of trapdoor functions, </title> <booktitle> Proc. 23rd IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1982, </year> <pages> pp. 80-91. </pages>
Reference-contexts: The LR-Construction's main source of attraction is, most probably, its elegance. Goldreich, Goldwasser and Micali [17] showed a construction of pseudo-random functions from pseudo-random generators <ref> [10, 51] </ref>. Thus, the construction of pseudo-random permutations reduces to the construction of pseudo-random generators. <p> However, the pseudo-random distributions have substantially smaller entropy than the truly random distributions and are efficiently samplable. 2.2.1 Overview of Pseudo-Random Primitives In the case of pseudo-random (bit) generators, which were introduced by Blum and Micali and Yao <ref> [10, 51] </ref>, the pseudo-random distribution is of bit-sequences. The distribution is efficiently sampled using a, relatively small, truly random bit-sequence (the seed).
Reference: [52] <author> Y. Zheng, T. Matsumoto and H. Imai, </author> <title> Impossibility and optimality results on constructing pseudorandom permutations, </title> <booktitle> Advances in Cryptology - EUROCRYPT '89, Lecture Notes in Computer Science, </booktitle> <volume> vol. 434, </volume> <publisher> Springer-Verlag, </publisher> <year> 1990, </year> <pages> pp. 412-422. 32 </pages>
Reference-contexts: general definitions of an E-Good sequence with only minor changes to the proof (as is the case for the permutation ^ S in Section 7). 5 Relaxing the Construction 5.1 PPE and SPPE with a Single Pseudo-Random Function Since Luby and Rackoff introduced their construction a considerable amount of research <ref> [34, 35, 36, 37, 39, 43, 44, 45, 47, 52] </ref> was focused on the following question: Can we obtain a similar construction of PPE or SPPE such that every permutation will be constructed from a single pseudo-random function? Apparently, this line of research originated in the work of Schnorr [47]. <p> Following is an informal description of some of these results. Let f 2 F n be a random function, then: * For all i; j; k 1 the permutation D f i ffi D f j ffi D f k is not pseudo-random <ref> [52] </ref>. * For all i; j; k; l 1 the permutation D f i ffi D f j ffi D f k ffi D f l is not strongly pseudo-random [44]. * D f 2 ffi D f ffi D f ffi D f is pseudo-random [39]. * D f ffi
References-found: 52

