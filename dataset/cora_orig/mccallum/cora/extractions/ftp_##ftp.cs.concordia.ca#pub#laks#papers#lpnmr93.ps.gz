URL: ftp://ftp.cs.concordia.ca/pub/laks/papers/lpnmr93.ps.gz
Refering-URL: http://www.cs.concordia.ca/~faculty/laks/papers.html
Root-URL: http://www.cs.concordia.ca
Title: Canonical Kripke Models and The Intuitionistic Semantics of Logic Programs (Extended Abstract)  
Author: Fangqing Dong and Laks V.S. Lakshmanan 
Address: Montreal, Quebec, Canada H3G 1M8  
Affiliation: Department of Computer Science Concordia University  
Date: June 1993.  
Note: Appears in: Second Int. Workshop on Logic Prog. and Non-monotonic Reasoning, Lisbon, Prtugal,  
Abstract: Motivated by the problem of extending stable semantics (SS) and well-founded semantics (WFS) while avoiding their drawbacks, we propose a new simple and intuitive semantics for (normal) logic programs, called canonical Kripke model semantics. Our approach is based on formulating stability in an intuitionistic framework which helps us overcome several drawbacks. As a consequence, every normal program has a unique "intended" canonical Kripke model. The canonical Kripke model semantics is a proper extension of SS and WFS, and it avoids the drawbacks associated with SS and WFS. The canonical Kripke model of a normal program exactly captures the 3-valued autoepis-temic consequences of the associated AE theory, and can be obtained as the greatest fixpoint of a deflationary operator K P defined on Kripke structures. 
Abstract-found: 1
Intro-found: 1
Reference: [Ba 91] <author> Baral, C.: </author> <title> "Classification of iterative fixpoint semantics for logic programs and deductive databases," </title> <booktitle> Proc. ILPS'91 Workshop on Deductive Databases (1991), </booktitle> <pages> 118-134. </pages>
Reference-contexts: Using the notion of a bilattice, he has recently extended his previous approach in a manner that extends the applicability of WFS to a rich class of logics [Fi 91]. Several other researchers have considered the problem of extending SS and WFS (while avoiding their drawbacks) (see Baral <ref> [Ba 91] </ref>, Kakas and Mancarella [KM 91], Sacca and Zaniolo [SZ 90], and You and Li [YL 90]). The relationships between our approach and these works are explored in Section 6. This paper is organized as follows. In Section 2 we define normal programs and their Kripke models. <p> Baral <ref> [Ba 91] </ref> proposes a semantical approach based on various iterative operators and presents his semantics in terms of a prioritized part and classical part. Since his classical part is based on minimal model semantics (which need not be stable), his approach differs significantly from ours.
Reference: [BS 91] <author> Baral, C.R. and Subrahmanian, </author> <title> V.S.: "Dualities between alternative semantics for logic programming and nonmonotonic reasoning," </title> <booktitle> Proc. First International Workshop on Logic Programming and Non-monotonic Reasoning (June 1991), </booktitle> <pages> 69-86. </pages>
Reference-contexts: Fitting [Fi 91] is another example where the range of applicability of well-founded semantics for logic programs has been successfully extended to a rich class of logics. Examples of other works that have strengthened the NMR-LP interplay are Marek and Subrahmanian [MS 89], Baral and Subrahmanian <ref> [BS 91] </ref>, Marek and Truszczynski [MT 91], and Bonatti [Bo 90]. Marek and Subrah-manian [MS 89] establishes many interesting results connecting stable and supported models, supported models and default logics, and supported models and expansions of autoepistemic translations of logic programs. Baral and Subrahmanian [BS 91] develops a stable expansion class <p> Subrahmanian [MS 89], Baral and Subrahmanian <ref> [BS 91] </ref>, Marek and Truszczynski [MT 91], and Bonatti [Bo 90]. Marek and Subrah-manian [MS 89] establishes many interesting results connecting stable and supported models, supported models and default logics, and supported models and expansions of autoepistemic translations of logic programs. Baral and Subrahmanian [BS 91] develops a stable expansion class semantics and establishes a beautiful duality between the stable class semantics and well-founded semantics. They also extend their results in the contexts of default theories and AE theories.
Reference: [BM 77] <author> Bell, J.L. and Machover, M.: </author> <title> A Course in Mathematical Logic, </title> <publisher> North-Holland, </publisher> <address> New York (1977). </address>
Reference-contexts: Intuitionistic interpretation of normal programs is in general 3-valued, since A _ :A is not necessarily valid under intuitionistic logic. For details of intuitionistic logic and Kripke structures, the reader is referred to <ref> [BM 77] </ref>. Definition 2.1 Let P be a normal program, H be the Herbrand base of P , and P (H) be the power set of H. <p> Given a state s of M , we say that a state w 2 M is a superstate (substate) of s if s w (w s). The following definition of (intuitionistic) satisfaction is an adaptation of the standard definition (e:g:, see <ref> [BM 77] </ref> for the language of logic programs.). Definition 2.2 Let M be an intuitionistic Kripke structure, s be a state of M , and be a formula.
Reference: [Bo 90] <author> Bonatti, P.: </author> <title> "A more general solution to the multiple expansion problem," </title> <booktitle> Proc. NACLP Workshop on Non-monotonic Reasoning and Logic Programming (Nov. </booktitle> <year> 1990). </year>
Reference-contexts: Examples of other works that have strengthened the NMR-LP interplay are Marek and Subrahmanian [MS 89], Baral and Subrahmanian [BS 91], Marek and Truszczynski [MT 91], and Bonatti <ref> [Bo 90] </ref>. Marek and Subrah-manian [MS 89] establishes many interesting results connecting stable and supported models, supported models and default logics, and supported models and expansions of autoepistemic translations of logic programs. <p> In addition to deriving a number of complexity results, they show that for the important class of (disjunctive) programs, the associated propositional theory is clausal and is of polynomial size in the size of the original AE theory, suggesting possibilities of efficient implementation 2 . Bonatti <ref> [Bo 90] </ref> proposes a new 3-valued AE logic, different from that of Przymusinski [Pr 91b]. His logic is restricted to sentences in the implicative form, which properly includes the class of (disjunctive) logic programs. <p> On the class of logic programs, the 3-valued stable semantics (3-SS) developed in [La 92] is strictly more powerful than WFS and that of Bonatti <ref> [Bo 90] </ref> (see Section 6). In spite of their many advantages, the following drawbacks have been identified for SS and WFS (e:g:, see Van et al [VGRS 88] and Kakas and Mancarella [KM 91]). <p> Based on this, we can precisely identify the source of the drawbacks of SS, indicated in Section 1. We also compare our semantics with the 3-valued stable semantics of Przymusinski [Pr 90, Pr 91b] and Bonatti <ref> [Bo 90] </ref>. We first have the following theorem. Theorem 6.1 Let P be a normal program, M be the canonical Kripke model of P , and M s be a (2-valued) stable model of P . <p> Indeed, the canonical Kripke model is ffa; pg; fb; pgg. Clearly, the canonical Kripke model semantics is stronger and the conclusions sanctioned by it agree with our intuition. In comparing our work with the 3-valued AE logic proposed by Bonatti <ref> [Bo 90] </ref>, we notice that his semantics is based on choosing a stable expansion which is minimal w:r:t: the disbeliefs and beliefs.
Reference: [Di 91] <author> Dix, J.: </author> <title> "Classifying semantics of logic programs," </title> <booktitle> International Workshop on Logic Programming 1991. </booktitle>
Reference-contexts: This model sanctions the definite conclusion :u (among others) which agrees with our intuition. 2 16 Dix <ref> [Di 91] </ref> provides a framework for characterizing semantics of logic programs by investigating various properties for (non-monotonic) entailment satisfied by those semantics. <p> In fact, Cumulativity is the combination of Cautious Monotony and Cut, and Rationality is derivable from Cautious Monotony. As shown in Dix <ref> [Di 91] </ref> most non-monotonic formalisms satisfy only a subset of these properties. E.g. AE logic, default logic, and SS are not cumulative, and Circumscription and GCWA are not rational. The canonical Kripke model semantics satisfies the Reflexivity, And, Or, Cut, and Disj. Rat. properties.
Reference: [DL 92] <author> Dong, F. and Lakshmanan, </author> <title> V.S.: "Canonical kripke models and the intuitionistic semantics of logic programs," </title> <type> Tech. Report, </type> <institution> Dept. of Computer Science, Concordia University (Oct. </institution> <year> 1992). </year> <month> 18 </month>
Reference-contexts: At last, we summarize our results and discuss future work in Section 7. Due to lack of space, we suppress the proofs of our results in this paper. The complete details and proofs can be found in <ref> [DL 92] </ref>. 2 Normal Programs and Intuitionistic Semantics In this section, we describe basic definitions we will use in the rest of this paper, and review intuitionistic interpretation of logic programs.
Reference: [Fi 85] <author> Fitting, </author> <title> M.C.: "A Kripke-Kleene semantics for logic programs," </title> <journal> Journal of Logic Programming 4 (1985), </journal> <pages> 295-312 </pages>
Reference-contexts: Fitting <ref> [Fi 85] </ref> proposed a 3-valued model semantics for logic programs based on an iterative operator on Kripke structures. This semantics is weaker 3 The notion of saturated stable model was first introduced in [La 92].
Reference: [Fi 91] <author> Fitting, </author> <title> M.C.: "Well-founded semantics, generalized," </title> <booktitle> Proc. North American Conference on Logic Programming (Oct. </booktitle> <year> 1991), </year> <pages> 71-84. </pages>
Reference-contexts: Among a number of results established in that paper is the interesting byproduct | an extension of the principle of well-founded semantics of logic programs into a full-fledged 3-valued AE logic. Fitting <ref> [Fi 91] </ref> is another example where the range of applicability of well-founded semantics for logic programs has been successfully extended to a rich class of logics. <p> Using the notion of a bilattice, he has recently extended his previous approach in a manner that extends the applicability of WFS to a rich class of logics <ref> [Fi 91] </ref>. Several other researchers have considered the problem of extending SS and WFS (while avoiding their drawbacks) (see Baral [Ba 91], Kakas and Mancarella [KM 91], Sacca and Zaniolo [SZ 90], and You and Li [YL 90]).
Reference: [Ge 87] <author> Gelfond, M.: </author> <title> "On stratified autoepistemic theories," </title> <journal> Proc. AAAI-87, </journal> <volume> 1, </volume> <year> 1987, </year> <pages> 207-211. </pages>
Reference-contexts: The well-known stable semantics (SS) 1 Gelfond and Lifschitz [GL 88] can be viewed as an application of Moore's autoepistemic (AE) reasoning [Mo 85], developed for general non-monotonic theories, to logic programs (also see <ref> [Ge 87] </ref>). The success of this "technology transfer" is evident from the fact that the stable semantics is one of the most popular semantical paradigms for logic programming. Interestingly, there is a significant potential for a "reverse transfer" | from logic programming to general non-monotonic reasoning | as well. <p> We will show that the canonical Kripke model semantics is a natural extension of stable semantics and WF semantics, and that it avoids the difficulties with either semantics, as indicated in the introduction. 4 See e:g:, Gelfond <ref> [Ge 87] </ref>. 12 6.1 Stable Semantics In this section, we compare (2-valued) stable semantics with the canonical Kripke model semantics. Our analysis will show that the canonical Kripke model of a normal program captures the information present in all (2-valued) stable models of P , and more.
Reference: [GL 88] <author> Gelfond, M. and Lifschitz, V.: </author> <title> "The stable model semantics for logic programming," </title> <booktitle> Proc. 5 th International Conference and Symposium on Logic Programming (1988), </booktitle> <pages> 1070-1080 </pages>
Reference-contexts: The well-known stable semantics (SS) 1 Gelfond and Lifschitz <ref> [GL 88] </ref> can be viewed as an application of Moore's autoepistemic (AE) reasoning [Mo 85], developed for general non-monotonic theories, to logic programs (also see [Ge 87]). <p> Lakshmanan [La 92] among other things, considers yet another approach to 3-valued AE reasoning. The work in [La 92] is confined to the class of (AE translations of) logic programs and the semantics of such 1 In this paper, we refer to the (2-valued) stable semantics of <ref> [GL 88] </ref> as SS, and use 3-SS to refer to 3-valued stable semantics. 2 An NP-completeness lower bound still applies in general. 2 programs is defined in terms of the notion of pref erred (3-valued) stable models.
Reference: [KM 91] <author> Kakas, A.C. and Mancarella, P.: </author> <title> "Stable theories for logic programs," </title> <booktitle> Proc. North American Conference on Logic Programming (1991), </booktitle> <pages> 85-100. </pages>
Reference-contexts: In spite of their many advantages, the following drawbacks have been identified for SS and WFS (e:g:, see Van et al [VGRS 88] and Kakas and Mancarella <ref> [KM 91] </ref>). <p> Several other researchers have considered the problem of extending SS and WFS (while avoiding their drawbacks) (see Baral [Ba 91], Kakas and Mancarella <ref> [KM 91] </ref>, Sacca and Zaniolo [SZ 90], and You and Li [YL 90]). The relationships between our approach and these works are explored in Section 6. This paper is organized as follows. In Section 2 we define normal programs and their Kripke models. <p> The 15 notion of regular models appears to have some similarities to our notion of saturated stable Kripke model. The precise relationship of this approach to ours is currently under investigation. Kakas and Mancarella <ref> [KM 91] </ref> extends SS using the notion of "negation as stable hypotheses" and provides a uniform framework for understanding the relationship between SS and WFS. This approach associates with every normal program several stable theories, which are similar to partial models.
Reference: [La 92] <author> Lakshmanan, </author> <title> V.S.: "On three-valued autoepistemic reasoning and the semantics of logic programs," </title> <note> Methods of Logic in Computer Science (1992), to appear. (Preliminary version appeared in Proc. NACLP'90 Workshop on Non-Monotonic Reasoning and Logic Programming (Nov. 1990).). </note>
Reference-contexts: His logic is restricted to sentences in the implicative form, which properly includes the class of (disjunctive) logic programs. An interesting feature is that it supports both classical negation and negation by failure in a framework supported by epis-temic considerations. Lakshmanan <ref> [La 92] </ref> among other things, considers yet another approach to 3-valued AE reasoning. The work in [La 92] is confined to the class of (AE translations of) logic programs and the semantics of such 1 In this paper, we refer to the (2-valued) stable semantics of [GL 88] as SS, and <p> An interesting feature is that it supports both classical negation and negation by failure in a framework supported by epis-temic considerations. Lakshmanan <ref> [La 92] </ref> among other things, considers yet another approach to 3-valued AE reasoning. The work in [La 92] is confined to the class of (AE translations of) logic programs and the semantics of such 1 In this paper, we refer to the (2-valued) stable semantics of [GL 88] as SS, and use 3-SS to refer to 3-valued stable semantics. 2 An NP-completeness lower bound still applies in <p> While Bonatti's approach selects one of a number of expansions of a theory through some preference criterion, the approach in <ref> [La 92] </ref> considers all preferred stable expansions of a theory. On the class of logic programs, the 3-valued stable semantics (3-SS) developed in [La 92] is strictly more powerful than WFS and that of Bonatti [Bo 90] (see Section 6). <p> While Bonatti's approach selects one of a number of expansions of a theory through some preference criterion, the approach in <ref> [La 92] </ref> considers all preferred stable expansions of a theory. On the class of logic programs, the 3-valued stable semantics (3-SS) developed in [La 92] is strictly more powerful than WFS and that of Bonatti [Bo 90] (see Section 6). In spite of their many advantages, the following drawbacks have been identified for SS and WFS (e:g:, see Van et al [VGRS 88] and Kakas and Mancarella [KM 91]). <p> stable Kripke models of P 3 . * The canonical Kripke model of a normal program P can be obtained as the greatest fixpoint of a deflationary operator K P defined on Kripke structures. * The canonical Kripke model of a normal program P exactly captures the 3-valued autoepistemic consequences <ref> [La 92] </ref> of P in the sense that a ground literal L is a 3-valued autoepistemic consequence of P if f it is true in the canonical Kripke model of P . * The canonical Kripke model semantics is a proper extension of SS and WFS, and it avoids the drawbacks <p> Fitting [Fi 85] proposed a 3-valued model semantics for logic programs based on an iterative operator on Kripke structures. This semantics is weaker 3 The notion of saturated stable model was first introduced in <ref> [La 92] </ref>. In this paper, we formulate saturated stable models in the framework of Kripke models, whereas [La 92] followed an approach based on (3-valued) partial models. 3 than WFS. <p> This semantics is weaker 3 The notion of saturated stable model was first introduced in <ref> [La 92] </ref>. In this paper, we formulate saturated stable models in the framework of Kripke models, whereas [La 92] followed an approach based on (3-valued) partial models. 3 than WFS. Using the notion of a bilattice, he has recently extended his previous approach in a manner that extends the applicability of WFS to a rich class of logics [Fi 91]. <p> The following proposition gives a positive answer. Proposition 3.3 Every normal program P has a saturated stable Kripke model. 2 The notion of preferred stable models was introduced in the 3-valued framework <ref> [La 92] </ref>. We can easily show that for every pref erred stable model defined in the framework of [La 92], there is a semantically identical saturated stable Kripke model, but the converse is not necessarily true. <p> Proposition 3.3 Every normal program P has a saturated stable Kripke model. 2 The notion of preferred stable models was introduced in the 3-valued framework <ref> [La 92] </ref>. We can easily show that for every pref erred stable model defined in the framework of [La 92], there is a semantically identical saturated stable Kripke model, but the converse is not necessarily true. Compared to (2-valued) stable semantics, saturated stable models have the advantage that they are always defined for arbitrary normal programs. <p> Step 4 : M 4 = M 3 = ffagg: So, ffagg is the canonical Kripke model of P . 2 5 Relationship to Autoepistemic Logic Lakshmanan <ref> [La 92] </ref> proposed a 3-valued approach to extend stable semantics and WF semantics within the framework of autoepistemic reasoning. <p> ; ; B k ; :C 1 ; ; :C m is a normal rule of P , by associating with every negative subgoal the autoepistemic belief operator L, we get a AE sentence A B 1 ; ; B k ; :LC 1 ; ; :LC m : In <ref> [La 92] </ref>, the declarative semantics of a logic program P is characterized using the preferred stable models of P , and a ground literal L is said to be a 3-valued autoepistemic consequence of the theory P AE if L is satisfied by every preferred stable model of P AE . <p> As shown in <ref> [La 92] </ref>, every normal program must have a preferred stable model, but not necessarily a unique one. We have the following theorem to establish the relationship between the canonical Kripke model semantics and autoepistemic reasoning. <p> Then L is 3-valued autoepistemic consequence of P if f L is true in M, i:e:, M j= i L. 2 This theorem says that the canonical Kripke model semantics of a normal program exactly captures the 3-valued AE consequences of the program. The approach followed in <ref> [La 92] </ref> is based on partial models and led to the development of a 3-valued stable semantics (3-SS) for normal programs. Theorem 5.1 shows that the canonical Kripke model semantics coincides with 3-SS. <p> That this extension is proper and its naturality are illustrated by the following example. 5 These models are in general different from the (3-valued) preferred stable models developed in <ref> [La 92] </ref>. 6 Here inclusion is w:r:t: the sets of beliefs and disbeliefs. 14 Example 6.2 Consider the following normal program a :b: b :a: p a: p b: c a; b: q :a; :b: The WF (partial) model of P is empty set OE, while its canonical Kripke model is <p> We proposed a deflationary fixpoint operator K P and showed that the canonical Kripke model of a normal program P is the greatest fixpoint of K P . We established the relationship of our semantics to SS and WFS and also to the 3-valued AE reasoning proposed in <ref> [La 92] </ref>. In 17 particular, we showed that our semantics satisfies the goals we set above for ourselves. The connections to other works pursuing similar goals were also established. Several interesting questions remain. An important issue is a top-down proof procedure for the canonical Kripke model semantics. <p> Several interesting questions remain. An important issue is a top-down proof procedure for the canonical Kripke model semantics. Another interesting question is the following. We know that the canonical Kripke model semantics is intimately related to 3-valued AE reasoning, developed in <ref> [La 92] </ref>. The approach developed in [La 92] is confined to the language of (autoepis-temic translations of) logic programs. It would be interesting to extend this approach into a full-fledged (3-valued) AE logic. Such an investigation would be an exercise in the "reverse technology transfer" as mentioned in the introduction. <p> Several interesting questions remain. An important issue is a top-down proof procedure for the canonical Kripke model semantics. Another interesting question is the following. We know that the canonical Kripke model semantics is intimately related to 3-valued AE reasoning, developed in <ref> [La 92] </ref>. The approach developed in [La 92] is confined to the language of (autoepis-temic translations of) logic programs. It would be interesting to extend this approach into a full-fledged (3-valued) AE logic. Such an investigation would be an exercise in the "reverse technology transfer" as mentioned in the introduction.
Reference: [MS 89] <author> Marek, M. and Subrahmanian, </author> <title> V.S.: "The relationship between stable, supported, default and auto-epistemic semantics for general logic programs," </title> <booktitle> Proc. International Conference on Logic Programming (1989), </booktitle> <pages> 600-620. </pages>
Reference-contexts: Fitting [Fi 91] is another example where the range of applicability of well-founded semantics for logic programs has been successfully extended to a rich class of logics. Examples of other works that have strengthened the NMR-LP interplay are Marek and Subrahmanian <ref> [MS 89] </ref>, Baral and Subrahmanian [BS 91], Marek and Truszczynski [MT 91], and Bonatti [Bo 90]. Marek and Subrah-manian [MS 89] establishes many interesting results connecting stable and supported models, supported models and default logics, and supported models and expansions of autoepistemic translations of logic programs. <p> Examples of other works that have strengthened the NMR-LP interplay are Marek and Subrahmanian <ref> [MS 89] </ref>, Baral and Subrahmanian [BS 91], Marek and Truszczynski [MT 91], and Bonatti [Bo 90]. Marek and Subrah-manian [MS 89] establishes many interesting results connecting stable and supported models, supported models and default logics, and supported models and expansions of autoepistemic translations of logic programs.
Reference: [MT 91] <author> Marek, M. and Truszczynski, M.: </author> <title> "Computing intersection of au-toepistemic expansions," </title> <booktitle> Proc. First International Workshop on Logic Programming and Non-monotonic Reasoning (June 1991), </booktitle> <pages> 37-50. </pages>
Reference-contexts: Examples of other works that have strengthened the NMR-LP interplay are Marek and Subrahmanian [MS 89], Baral and Subrahmanian [BS 91], Marek and Truszczynski <ref> [MT 91] </ref>, and Bonatti [Bo 90]. Marek and Subrah-manian [MS 89] establishes many interesting results connecting stable and supported models, supported models and default logics, and supported models and expansions of autoepistemic translations of logic programs. <p> Baral and Subrahmanian [BS 91] develops a stable expansion class semantics and establishes a beautiful duality between the stable class semantics and well-founded semantics. They also extend their results in the contexts of default theories and AE theories. Marek and Truszczynski <ref> [MT 91] </ref> studies the problem of computing intersections of all stable expansions of an AE theory. They essentially reduce this problem to the question of provability for a propositional theory associated with an AE theory.
Reference: [Mo 85] <author> Moore, </author> <title> R.C.: </title> <booktitle> "Semantic consideration on non-monotonic logic," Artificial Intelligence 25 (1985), </booktitle> <pages> 75-94. </pages>
Reference-contexts: The well-known stable semantics (SS) 1 Gelfond and Lifschitz [GL 88] can be viewed as an application of Moore's autoepistemic (AE) reasoning <ref> [Mo 85] </ref>, developed for general non-monotonic theories, to logic programs (also see [Ge 87]). The success of this "technology transfer" is evident from the fact that the stable semantics is one of the most popular semantical paradigms for logic programming.
Reference: [PAA 92a] <author> Pereira, L.M., Alferes, J.J., and Aparicio, J.N.: </author> <title> "Adding Closed World Assumptions to Well Founded Semantics," </title> <booktitle> Fifth Generation Computer Systems'92. </booktitle>
Reference-contexts: Notice that p is definitely true and c and q are definitely false according to the canonical Kripke model semantics. Also, a _ b is definitely true even though a and b are undefined. 2 Pereira et al <ref> [PAA 92a, PAA 92b] </ref> explored to extend WFS by intergat-ing CWA. They bring in a notion of sustainability for negative conclusions as perference relation over partial models, and define the preferred unique maximal (partial) model, O-model, of a program as their intended meaning of that program.
Reference: [PAA 92b] <author> Pereira, L.M., Alferes, J.J., and Aparicio, J.N.: </author> <title> "Adding Closed World Assumptions to Well Founded Semantics," </title> <note> Theoretical Computer Science, to appear. </note>
Reference-contexts: Notice that p is definitely true and c and q are definitely false according to the canonical Kripke model semantics. Also, a _ b is definitely true even though a and b are undefined. 2 Pereira et al <ref> [PAA 92a, PAA 92b] </ref> explored to extend WFS by intergat-ing CWA. They bring in a notion of sustainability for negative conclusions as perference relation over partial models, and define the preferred unique maximal (partial) model, O-model, of a program as their intended meaning of that program.
Reference: [Pr 90] <author> Przymusinski, T.: </author> <title> "Extended stable semantics," </title> <type> manuscript (1990). </type>
Reference-contexts: Based on this, we can precisely identify the source of the drawbacks of SS, indicated in Section 1. We also compare our semantics with the 3-valued stable semantics of Przymusinski <ref> [Pr 90, Pr 91b] </ref> and Bonatti [Bo 90]. We first have the following theorem. Theorem 6.1 Let P be a normal program, M be the canonical Kripke model of P , and M s be a (2-valued) stable model of P . <p> Once SS is extended with a 3-valued reasoning facility, these drawbacks disappear. Przymusinski <ref> [Pr 90, Pr 91b] </ref> has developed a 3-valued AE logic, which leads to a semantics for logic programs, identical to WFS. The canonical 13 Kripke model semantics for logic programs is clearly different from this se-mantics, as the next section will show.
Reference: [Pr 91a] <author> Przymusinski, T.: </author> <title> "Autoepistemic logics of closed beliefs and logic programming," </title> <booktitle> Proc. First International Workshop on Logic Programming and Non-monotonic Reasoning (June 1991), </booktitle> <pages> 3-20. 19 </pages>
Reference-contexts: Interestingly, there is a significant potential for a "reverse transfer" | from logic programming to general non-monotonic reasoning | as well. Take for example the well-founded semantics (WFS) for logic programs, due to Van Gelder et al [VGRS 88, VG 89]. Przymusinski <ref> [Pr 91a] </ref> has recently shown that the well-founded semantics is equivalent to 3-valued extensions of all four major formalisms for non-monotonic reasoning.
Reference: [Pr 91b] <author> Przymusinski, T.: </author> <title> "Three-valued nonmonotonic formalisms and se-mantics of logic programs," </title> <booktitle> Artificial Intelligence 49 (1991), </booktitle> <pages> 309-343. </pages>
Reference-contexts: Bonatti [Bo 90] proposes a new 3-valued AE logic, different from that of Przymusinski <ref> [Pr 91b] </ref>. His logic is restricted to sentences in the implicative form, which properly includes the class of (disjunctive) logic programs. An interesting feature is that it supports both classical negation and negation by failure in a framework supported by epis-temic considerations. <p> Based on this, we can precisely identify the source of the drawbacks of SS, indicated in Section 1. We also compare our semantics with the 3-valued stable semantics of Przymusinski <ref> [Pr 90, Pr 91b] </ref> and Bonatti [Bo 90]. We first have the following theorem. Theorem 6.1 Let P be a normal program, M be the canonical Kripke model of P , and M s be a (2-valued) stable model of P . <p> Once SS is extended with a 3-valued reasoning facility, these drawbacks disappear. Przymusinski <ref> [Pr 90, Pr 91b] </ref> has developed a 3-valued AE logic, which leads to a semantics for logic programs, identical to WFS. The canonical 13 Kripke model semantics for logic programs is clearly different from this se-mantics, as the next section will show.
Reference: [SZ 90] <author> Sacca, D. and Zaniolo, C.: </author> <title> "Stable models and non-determinism in logic programs with negation," </title> <booktitle> Proc. 9 th ACM SIGMOD Symp. on Principle of Database Systems (May 1990), </booktitle> <pages> 205-217. </pages>
Reference-contexts: Several other researchers have considered the problem of extending SS and WFS (while avoiding their drawbacks) (see Baral [Ba 91], Kakas and Mancarella [KM 91], Sacca and Zaniolo <ref> [SZ 90] </ref>, and You and Li [YL 90]). The relationships between our approach and these works are explored in Section 6. This paper is organized as follows. In Section 2 we define normal programs and their Kripke models. <p> Then for any states w and w 0 0 there exists some common minimal state s w:r:t: w and w 0 w s. 2 We next illustrate the canonical Kripke model semantics via examples. Example 3.1 <ref> [SZ 90] </ref>. <p> them makes b and p false and q true, and the other one makes b and q false and p true, while the canonical Kripke model ffpg; fp; bg; fp; a; bgg of P 2 makes p true, q false, and leaves a and b undefined. 2 Sacca and Zaniolo <ref> [SZ 90] </ref> extends the notions of stable model and WF model by applying stability transformation to partial models of a normal program. They discuss several classes of partial models which share the basic properties of stability and foundedness. <p> We can show that their maximal deterministic model is semantically included in our canonical Kripke model. The following example shows that the canonical Kripke model of a program is (semantically) a proper extension of its maximal deterministic model. Example 6.4 <ref> [SZ 90] </ref>.
Reference: [VG 89] <author> Van Gelder, A.: </author> <title> "The alternating fixpoint of logic programs with negation," </title> <booktitle> Proc. 8 th ACM SIGMOD Symp. on Principle of Database Systems (March 1989), </booktitle> <pages> 1-10. </pages>
Reference-contexts: Interestingly, there is a significant potential for a "reverse transfer" | from logic programming to general non-monotonic reasoning | as well. Take for example the well-founded semantics (WFS) for logic programs, due to Van Gelder et al <ref> [VGRS 88, VG 89] </ref>. Przymusinski [Pr 91a] has recently shown that the well-founded semantics is equivalent to 3-valued extensions of all four major formalisms for non-monotonic reasoning.
Reference: [VGRS 88] <author> Van Gelder, A., Ross, K. and Schlipf, J.S.: </author> <title> "Unfounded sets and well-founded semantics for general logic programs," </title> <booktitle> Proc. 7 th ACM SIGMOD Symp. on Principle of Database Systems (March 1988), </booktitle> <pages> 221-230. </pages>
Reference-contexts: Interestingly, there is a significant potential for a "reverse transfer" | from logic programming to general non-monotonic reasoning | as well. Take for example the well-founded semantics (WFS) for logic programs, due to Van Gelder et al <ref> [VGRS 88, VG 89] </ref>. Przymusinski [Pr 91a] has recently shown that the well-founded semantics is equivalent to 3-valued extensions of all four major formalisms for non-monotonic reasoning. <p> In spite of their many advantages, the following drawbacks have been identified for SS and WFS (e:g:, see Van et al <ref> [VGRS 88] </ref> and Kakas and Mancarella [KM 91]). <p> Then M s is a minimal (and also a maximal) state of M. 2 We next illustrate via an example how the canonical Kripke model semantics overcomes the drawbacks associated with SS. Example 6.1 <ref> [VGRS 88] </ref>. Consider the following normal program a :b: b :a: p :p: p a: This program has a unique (2-valued) stable model fa; :b; pg. [VGRS 88] pointed out that 2-valued SS has strange effects on this program, since b is interpreted as f alse by the unique stable model <p> Example 6.1 <ref> [VGRS 88] </ref>. Consider the following normal program a :b: b :a: p :p: p a: This program has a unique (2-valued) stable model fa; :b; pg. [VGRS 88] pointed out that 2-valued SS has strange effects on this program, since b is interpreted as f alse by the unique stable model of this program, even though we have no basis to conclude :b.
Reference: [YL 90] <author> You, J.H. and Li, Y.Y: </author> <title> "Three-valued formalization of logic programming: Is It Needed?," </title> <booktitle> Proc. 9 th ACM SIGMOD Symp. on Principle of Database Systems (May 1990), </booktitle> <pages> 172-182. 20 </pages>
Reference-contexts: Several other researchers have considered the problem of extending SS and WFS (while avoiding their drawbacks) (see Baral [Ba 91], Kakas and Mancarella [KM 91], Sacca and Zaniolo [SZ 90], and You and Li <ref> [YL 90] </ref>). The relationships between our approach and these works are explored in Section 6. This paper is organized as follows. In Section 2 we define normal programs and their Kripke models. <p> Baral [Ba 91] proposes a semantical approach based on various iterative operators and presents his semantics in terms of a prioritized part and classical part. Since his classical part is based on minimal model semantics (which need not be stable), his approach differs significantly from ours. You and Li <ref> [YL 90] </ref> points out that the major semantical difficulities of SS and WFS are due to loss of disjunctive information. According to the principles of minimal undefinedness and justifiability, they propose a regular model semantics of normal programs, which extends both SS and WFS.
References-found: 24

