URL: http://ei.cs.vt.edu/~cs6104/1996/projects/craig_project.ps
Refering-URL: http://ei.cs.vt.edu/~cs6104/1996/projects.html
Root-URL: http://www.cs.vt.edu
Title: Graph Proofs Using the Larch Prover  
Author: Craig Struble 
Date: June 29, 1996  
Abstract: Theorem provers and proof checkers are important applications of symbolic computation. Through a combination of term-rewriting and proof tactics, the computer is capable of proving or checking the proofs of some complex theorems. In order to prove a statement is true (or false), an axiomatization of facts for a given theory is needed. In this paper we explore one proof assistant, the Larch Prover, and its ability to represent an axiomatization of graph theory.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. Appel and W. Haken, </author> <title> The solution of the four-color map problem, </title> <publisher> Scientific American, </publisher> <year> (1977), </year> <pages> pp. 108-121. </pages>
Reference-contexts: Rather, graph theory is rich in definitions and relationships. Also, the proofs given for graph theory often rely on diagrams, intuition, or brute force in order to prove theorems, often resulting in a proof that is not elegant, e.g., the first proof of the four-color theorem <ref> [1] </ref>. Because of this, we conjecture that coming up with a good axiomatization of graph theory is difficult to accomplish, and that many graph theorems proven are equally as difficult if not impossible to prove with any kind of theorem proving or checking system.
Reference: [2] <author> R. Ellis, </author> <title> Using the larch prover to derive relationships for cubical complexes. Class Presentation, </title> <month> June </month> <year> 1996. </year>
Reference-contexts: Others reasons are based on our lack of experience with Larch Prover. After attempting to come up with a general axiomatization for graph theory and then viewing Rob Ellis's presentation <ref> [2] </ref> in the symbolic computation class, it seems that general axiomatization for graph theory is not the right approach to apply Larch to graph theorems. Larch is better used to assert well known theorems and axioms, and then use them to prove a specific conjecture.
Reference: [3] <author> S. J. Garland and J. V. Guttag, </author> <title> Larch Prover: Online Help, </title> <institution> MIT Laboratory for Computer Science. </institution>
Reference-contexts: To test this idea, the Larch Prover <ref> [3] </ref> is used as a test bed to find the difficult areas of axiomatizing graph theory, as well as a system for learning about the concepts taught in the symbolic computation class. 2 Larch Prover Larch Prover is a multi-sorted first order logic theorem proving system.
Reference: [4] <author> D. E. Knuth and P. B. Bendix, </author> <title> Simple word problems in universal algebras, in Computational Problems in Abstract Algebra, </title> <editor> J. Leech, ed., </editor> <publisher> Pergamon Press, </publisher> <year> 1970, </year> <pages> pp. 263-297. 10 </pages>
Reference-contexts: The system supports term-rewriting, Knuth-Bendix completion <ref> [4] </ref>, critical-pair computation, and numerous proof techniques including induction and rule instantiation. We applied much of the knowledge from the symbolic computation class while exploring Larch Prover and graph axiom systems.
References-found: 4

