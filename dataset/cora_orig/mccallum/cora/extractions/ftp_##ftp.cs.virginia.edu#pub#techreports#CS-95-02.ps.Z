URL: ftp://ftp.cs.virginia.edu/pub/techreports/CS-95-02.ps.Z
Refering-URL: ftp://ftp.cs.virginia.edu/pub/techreports/README.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Dissemination of Collection Wide Information in a Distributed Information Retrieval System  
Author: Charles L. Viles and James C. French 
Note: Technical Report CS-95-02 (Submitted to SIGIR95)  
Date: January 6, 1995  
Address: Charlottesville, VA 22903  
Affiliation: Department of Computer Science University of Virginia  
Abstract: We find that dissemination of collection wide information (CWI) in a distributed collection of documents is needed to achieve retrieval effectiveness comparable to a centralized collection. Complete dissemination is unnecessary. The required dissemination level depends upon how documents are allocated among sites. Low dissemination is needed for random document allocation, but higher levels are needed when documents are allocated based on content. We define parameters to control dissemination and document allocation and present results from four test collections. We define the notion of iso-knowledge lines with respect to the number of sites and level of dissemination in the distributed archive, and show empirically that iso-knowledge lines are also iso-effectiveness lines when documents are randomly allocated.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> I. J. Aalbersberg and Frans Sijstermans. </author> <title> High-quality and High-performance Full-text Document Retrieval: </title> <booktitle> The Parallel InfoGuide System. In Proc. 1st Intl. Conf. Parallel and Distributed Information Systems, </booktitle> <address> Miami Beach, FL, </address> <year> 1991. </year>
Reference-contexts: It includes efficient mechanisms for gathering 2 and indexing topic-specific information at a central location. Mechanisms for caching and replicat-ing the indexes are provided. Harvest concentrates on making efficient use of network resources. Effectiveness considerations are secondary. In the Parallel InfoGuide system <ref> [1] </ref>, Aalbersberg and Sijstermans use a distributed-memory multi-processor to get very fast query response times. They use the Vector Space Model [16, 17] as the IR engine.
Reference: [2] <author> C. Mic Bowman, Peter B. Danzig, Darren R. Hardy, Udi Manber, and Michael F. Schwartz. Harvest: </author> <title> A Scalable, Customizable Discovery and Access System. </title> <type> Technical Report CU-CS-732-94, </type> <institution> Department of Computer Science, University of Colorado, </institution> <month> August </month> <year> 1994. </year>
Reference-contexts: this arena is preliminary, most approaches rely on maintenance of a centralized archive possibly fl This work was supported by NASA Goddard Space Flight Center under GSRP fellowship NGT-51018 and by NASA/CESDIS Grant 5555-25. replicated, possibly with caches built by navigating the Internet and down-loading documents to a central repository <ref> [2, 7, 13, 15] </ref>. Efficiency is the overriding concern. In this paper, we are concerned with retrieval effectiveness. <p> We finish with a summary and some directions for future work. 2 Related Work Bowman et al. [3] describe many of the issues involved in resource discovery and information retrieval on the Internet. The Harvest <ref> [2] </ref> system is a prototype resource discovery and access system designed to address some of these problems. It includes efficient mechanisms for gathering 2 and indexing topic-specific information at a central location. Mechanisms for caching and replicat-ing the indexes are provided. Harvest concentrates on making efficient use of network resources.
Reference: [3] <author> C. Mic Bowman, Peter B. Danzig, Udi Manber, and Michael F. Schwartz. </author> <title> Scalable internet resource discovery: Research problems and approaches. </title> <journal> Communications of the ACM, </journal> <volume> 37(8) </volume> <pages> 98-107, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: Section 6 details our results. A discussion of some of the issues and questions raised by our work is in Section 7. We finish with a summary and some directions for future work. 2 Related Work Bowman et al. <ref> [3] </ref> describe many of the issues involved in resource discovery and information retrieval on the Internet. The Harvest [2] system is a prototype resource discovery and access system designed to address some of these problems. It includes efficient mechanisms for gathering 2 and indexing topic-specific information at a central location.
Reference: [4] <author> Eric W. Brown, James P. Callan, and W. Bruce Croft. </author> <title> Fast Incremental Indexing for Full-Text Information Retrieval . In Proc. </title> <booktitle> 20th Conf. Very Large Databases, </booktitle> <address> Santiago, Chile, </address> <year> 1992. </year>
Reference-contexts: Currently, Drift does not maintain an inverted index all searching is done using the query and document vectors directly. Because Drift needed to handle evaluation at intermediate points, rebuilding the inverted index at each evaluation point would have been necessary. Though considerable progress has been made in incremental updating <ref> [4, 19, 22] </ref>, we wanted to concentrate 10 on other issues. We anticipate re-examining the indexing question when we start to look at larger collections. When building the prototype Drift, we leveraged off of existing software as much as possible.
Reference: [5] <author> D. Cohen. </author> <title> A format for E-mailing Bibliographic Records. </title> <type> Technical Report Internet RFC 1357, </type> <institution> Internet Engineering Task Force, </institution> <month> July </month> <year> 1992. </year>
Reference-contexts: WATERS [12] maintains a central index for searching and offers a distributed browse capability. Participating sites periodically send their bibliographic files to the central server for indexing. The CSTR project and its accompanying protocol, server, and bibliographic format <ref> [5, 6] </ref> provides search and browse access to the technical reports of participating members. The system supports 3 distributed searching and multiple formats for documents. Work by Tomasic, Garcia-Molina and others [18, 19] has focused on performance issues e.g. distributed index architectures that provide low query response time.
Reference: [6] <author> James R. Davis and Carl Lagoze. </author> <title> A protocol and server for a distributed digital technical report library. </title> <type> Technical Report TR-1418, </type> <institution> Cornell University, </institution> <month> April </month> <year> 1994. </year>
Reference-contexts: WATERS [12] maintains a central index for searching and offers a distributed browse capability. Participating sites periodically send their bibliographic files to the central server for indexing. The CSTR project and its accompanying protocol, server, and bibliographic format <ref> [5, 6] </ref> provides search and browse access to the technical reports of participating members. The system supports 3 distributed searching and multiple formats for documents. Work by Tomasic, Garcia-Molina and others [18, 19] has focused on performance issues e.g. distributed index architectures that provide low query response time.
Reference: [7] <author> D. Eichmann, T. McGregor, and D. Danley. </author> <title> The RBSE Spider Balancing Effective Search Against Web Load. </title> <booktitle> In Proc. 1st Intl. World Wide Web Conf., </booktitle> <address> Geneva, Switzerland, </address> <month> May </month> <year> 1994. </year> <month> 19 </month>
Reference-contexts: this arena is preliminary, most approaches rely on maintenance of a centralized archive possibly fl This work was supported by NASA Goddard Space Flight Center under GSRP fellowship NGT-51018 and by NASA/CESDIS Grant 5555-25. replicated, possibly with caches built by navigating the Internet and down-loading documents to a central repository <ref> [2, 7, 13, 15] </ref>. Efficiency is the overriding concern. In this paper, we are concerned with retrieval effectiveness.
Reference: [8] <author> James C. French. DIRE: </author> <title> An Approach to Improving Scientific Communication. </title> <booktitle> Information and Decision Technologies, </booktitle> <volume> 19 </volume> <pages> 527-541, </pages> <year> 1994. </year>
Reference-contexts: The relatively low amounts of dissemination needed to maintain retrieval effectiveness has some interesting implications. In dynamic applications like filtering and routing <ref> [8, 11] </ref>, completely up-to-date collection wide information may not be needed, so re-calculation of CWI need be done only intermittently. 17 effectiveness can be greatly reduced. The solid and dashed lines show the MED collection with 20 sites, a = 1:0, idf -based term weighting and various dissemination levels.
Reference: [9] <author> Donna Harman. </author> <title> Overview of the First Text Retrieval Conference (TREC-1). </title> <booktitle> In Proc. 1st Text Retrieval Conference (TREC-1), </booktitle> <pages> pages 1-20, </pages> <address> Gaitherburg, MD, </address> <year> 1992. </year>
Reference-contexts: Probably the most wide-spread instance of this collection wide information is the inverse document frequency (idf ) defined for all concepts in the collection. The idf information is used in many term-weighting schemes in a large number of IR models. In the TREC-1 <ref> [9] </ref> conference, fully 70% of all contributors used some form of the idf , including the top six performers in the ad-hoc experiments and the top five in the routing experiments.
Reference: [10] <author> Donna Harman, Wayne McCoy, Robert Toense, and Gerald Candela. </author> <title> Prototyping a Distributed Information Retrieval System Using Statistical Ranking. </title> <booktitle> Information Processing and Management, </booktitle> <volume> 27(5) </volume> <pages> 449-460, </pages> <year> 1991. </year>
Reference-contexts: He showed that a global thesaurus exists for a set of disjoint information systems using boolean retrieval with thesauri. He also showed that each separate site could be considered a simple restriction of a global system. Harman et al. <ref> [10] </ref> describe a prototype distributed IR system where data is stored centrally but maintained in separate datasets organized by content. Datasets are then cached to machines where extensive access to the data is anticipated. Searches could span multiple datasets kept at multiple locations, but any single dataset was never divided.
Reference: [11] <author> Shoshana Loeb and Douglas Terry. </author> <title> Special Issue on Information Filtering. </title> <journal> Communications of the ACM, </journal> <volume> 35 </volume> <pages> 26-81, 12. </pages>
Reference-contexts: The relatively low amounts of dissemination needed to maintain retrieval effectiveness has some interesting implications. In dynamic applications like filtering and routing <ref> [8, 11] </ref>, completely up-to-date collection wide information may not be needed, so re-calculation of CWI need be done only intermittently. 17 effectiveness can be greatly reduced. The solid and dashed lines show the MED collection with 20 sites, a = 1:0, idf -based term weighting and various dissemination levels.
Reference: [12] <author> Kurt Maly, James French, Edward Fox, and Alan Selman. WATERS: </author> <title> The Wide Area Technical Report Service. </title> <booktitle> In Proc. 2nd Intl. World Wide Web Conf., </booktitle> <address> Chicago, IL, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: Several systems have been built to make computer science technical reports available. UCSTRI [20] operates by proactively fetching summary files from many sites and indexing them centrally. WATERS <ref> [12] </ref> maintains a central index for searching and offers a distributed browse capability. Participating sites periodically send their bibliographic files to the central server for indexing.
Reference: [13] <author> M. Mauldin and J. R. R. Leavitt. </author> <note> The Lycos Home Page: Hunting WWW Information, 1994. Available at http://lycos.cs.cmu.edu/. </note>
Reference-contexts: this arena is preliminary, most approaches rely on maintenance of a centralized archive possibly fl This work was supported by NASA Goddard Space Flight Center under GSRP fellowship NGT-51018 and by NASA/CESDIS Grant 5555-25. replicated, possibly with caches built by navigating the Internet and down-loading documents to a central repository <ref> [2, 7, 13, 15] </ref>. Efficiency is the overriding concern. In this paper, we are concerned with retrieval effectiveness.
Reference: [14] <author> Zygmunt Mazur. </author> <title> On a Model of Distributed Information Retrieval Systems Based on Thesauri. </title> <booktitle> Information Processing and Management, </booktitle> <volume> 20(4) </volume> <pages> 499-505, </pages> <year> 1984. </year>
Reference-contexts: However, it is not clear whether this method is sufficient to maintain the retrieval effectiveness of the IR system or if it is overkill. In our work, we concentrate on determining the level of dissemination needed to maintain retrieval effectiveness. Mazur <ref> [14] </ref> provides a theoretical treatment of some issues in distributed IR. He showed that a global thesaurus exists for a set of disjoint information systems using boolean retrieval with thesauri. He also showed that each separate site could be considered a simple restriction of a global system.
Reference: [15] <author> Oliver A. McBryan. </author> <title> GENVL and WWWW: Tools for Taming the Web. </title> <booktitle> In Proc. 1st Intl. World Wide Web Conf., </booktitle> <address> Geneva, Switzerland, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: this arena is preliminary, most approaches rely on maintenance of a centralized archive possibly fl This work was supported by NASA Goddard Space Flight Center under GSRP fellowship NGT-51018 and by NASA/CESDIS Grant 5555-25. replicated, possibly with caches built by navigating the Internet and down-loading documents to a central repository <ref> [2, 7, 13, 15] </ref>. Efficiency is the overriding concern. In this paper, we are concerned with retrieval effectiveness.
Reference: [16] <author> G. Salton. </author> <title> A Theory of Indexing. </title> <booktitle> In Regional Conference Series in Applied Mathematics No. 18, Society for Industrial and Applied Mathematics, </booktitle> <pages> pages 1-56, </pages> <address> Philadelphia, PA, </address> <year> 1975. </year>
Reference-contexts: Mechanisms for caching and replicat-ing the indexes are provided. Harvest concentrates on making efficient use of network resources. Effectiveness considerations are secondary. In the Parallel InfoGuide system [1], Aalbersberg and Sijstermans use a distributed-memory multi-processor to get very fast query response times. They use the Vector Space Model <ref> [16, 17] </ref> as the IR engine. To get good effectiveness while retaining ease of updates, inverse document frequency (idf ) based term weights are kept with a dictionary and not the documents. The weights are then applied to the query terms only. <p> Drift is an object-oriented implementation of the Vector Space Model <ref> [16, 17] </ref> written in C++ and designed specifically to perform experiments in distributed IR. There are several fundamental objects in Drift, but we describe only the two most important ones here. A Site object maintains its own document collection and view of the collection wide information.
Reference: [17] <author> G. Salton and M. J. McGill. </author> <title> Introduction to Modern Information Retrieval. </title> <publisher> McGraw-Hill, </publisher> <address> NY, </address> <year> 1983. </year>
Reference-contexts: Mechanisms for caching and replicat-ing the indexes are provided. Harvest concentrates on making efficient use of network resources. Effectiveness considerations are secondary. In the Parallel InfoGuide system [1], Aalbersberg and Sijstermans use a distributed-memory multi-processor to get very fast query response times. They use the Vector Space Model <ref> [16, 17] </ref> as the IR engine. To get good effectiveness while retaining ease of updates, inverse document frequency (idf ) based term weights are kept with a dictionary and not the documents. The weights are then applied to the query terms only. <p> Drift is an object-oriented implementation of the Vector Space Model <ref> [16, 17] </ref> written in C++ and designed specifically to perform experiments in distributed IR. There are several fundamental objects in Drift, but we describe only the two most important ones here. A Site object maintains its own document collection and view of the collection wide information.
Reference: [18] <author> Anthony Tomasic and Hector Garcia-Molina. </author> <title> Query Processing and Inverted Indices in Shared-Nothing Text Document Information Retrieval Systems. </title> <journal> VLDB Journal, </journal> <volume> 2(3) </volume> <pages> 243-275, </pages> <year> 1993. </year>
Reference-contexts: The CSTR project and its accompanying protocol, server, and bibliographic format [5, 6] provides search and browse access to the technical reports of participating members. The system supports 3 distributed searching and multiple formats for documents. Work by Tomasic, Garcia-Molina and others <ref> [18, 19] </ref> has focused on performance issues e.g. distributed index architectures that provide low query response time. Effectiveness is not considered. 3 The Distributed Archive Model In a distributed archive (Figure 1), documents are not kept in a single central location, but are distributed over many sites.
Reference: [19] <author> Anthony Tomasic, Hector Garcia-Molina, and Kurt Shoens. </author> <title> Incremental Updates of Inverted Lists for Text Document Retrieval. </title> <type> Technical Report STAN-CS-TN-93-1, </type> <institution> Stanford University, </institution> <year> 1993. </year>
Reference-contexts: The CSTR project and its accompanying protocol, server, and bibliographic format [5, 6] provides search and browse access to the technical reports of participating members. The system supports 3 distributed searching and multiple formats for documents. Work by Tomasic, Garcia-Molina and others <ref> [18, 19] </ref> has focused on performance issues e.g. distributed index architectures that provide low query response time. Effectiveness is not considered. 3 The Distributed Archive Model In a distributed archive (Figure 1), documents are not kept in a single central location, but are distributed over many sites. <p> Currently, Drift does not maintain an inverted index all searching is done using the query and document vectors directly. Because Drift needed to handle evaluation at intermediate points, rebuilding the inverted index at each evaluation point would have been necessary. Though considerable progress has been made in incremental updating <ref> [4, 19, 22] </ref>, we wanted to concentrate 10 on other issues. We anticipate re-examining the indexing question when we start to look at larger collections. When building the prototype Drift, we leveraged off of existing software as much as possible.
Reference: [20] <author> Marc D. VanHeyningen. </author> <title> The Unified Computer Science Technical Report Index: Lessons in indexing diverse resources. </title> <booktitle> In Proc. 2nd Intl. World Wide Web Conf., </booktitle> <address> Chicago, IL, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: While CWI was used in the form of idf term weights, since the datasets never spanned multiple locations, no dissemination was needed. Several systems have been built to make computer science technical reports available. UCSTRI <ref> [20] </ref> operates by proactively fetching summary files from many sites and indexing them centrally. WATERS [12] maintains a central index for searching and offers a distributed browse capability. Participating sites periodically send their bibliographic files to the central server for indexing.
Reference: [21] <author> Charles L. Viles. </author> <title> Maintaining State in a Distributed Information Retrieval System. </title> <booktitle> In Proc. 32nd ACM Southeast Conf, </booktitle> <pages> pages 157-161, </pages> <address> Tuscaloosa, AL, </address> <month> March </month> <year> 1994. </year>
Reference-contexts: The weights are then applied to the query terms only. This limits the kinds of term weighting functions that may be used by the system. There is no notion of a distributed system with autonomous sites or of lazy dissemination of CWI. Viles <ref> [21] </ref> describes a method for maintaining CWI in a distributed IR system. A separate, replicated service maintains the CWI, accepting updates from sites in the system and serving up the latest version of the CWI in reply. <p> At least two questions arise: * At what intensity does CWI need to be circulated to maintain retrieval effectiveness? * How should CWI by circulated? We consider only the first question in this paper, as it has a profound influence on the answer to the second question. Check <ref> [21] </ref> for an algorithm that addresses the second question. 3.2.2 Dissemination Model We model dissemination of CWI as follows. Let pref ix (d; C l i ) be the first d-th fraction of C l i . The parameter d defines the degree of dissemination of CWI in the archive.
Reference: [22] <author> Justin Zobel, Alistair Moffat, and Ron Sacks-Davis. </author> <title> An Efficient Indexing Technique for Full-Text Database Systems. </title> <booktitle> In Proc. 18th Conf. Very Large Databases, </booktitle> <pages> pages 352-362, </pages> <address> Vancouver, BC, </address> <year> 1992. </year>
Reference-contexts: Currently, Drift does not maintain an inverted index all searching is done using the query and document vectors directly. Because Drift needed to handle evaluation at intermediate points, rebuilding the inverted index at each evaluation point would have been necessary. Though considerable progress has been made in incremental updating <ref> [4, 19, 22] </ref>, we wanted to concentrate 10 on other issues. We anticipate re-examining the indexing question when we start to look at larger collections. When building the prototype Drift, we leveraged off of existing software as much as possible.
References-found: 22

