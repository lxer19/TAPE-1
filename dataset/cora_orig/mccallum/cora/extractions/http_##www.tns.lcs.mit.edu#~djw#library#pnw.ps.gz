URL: http://www.tns.lcs.mit.edu/~djw/library/pnw.ps.gz
Refering-URL: http://www.tns.lcs.mit.edu/~djw/library/
Root-URL: 
Email: yemini-@cs.columbia.edu  
Title: TOWARDS PROGRAMMABLE NETWORKS  
Author: Yechiam Yemini Sushil da Silva 
Date: April 15, 1996  
Address: -dasilva,  
Affiliation: Department of Computer Science Columbia University  
Abstract: Intermediate nodes (e.g., routers, switches) of current networks, in contrast with end nodes (e.g., PCs workstations), are vertically integrated closed systems. Their functions, mostly implemented by embedded software, are rigidly built-in by intermediate nodes vendors. Vendors must follow designs dictated by slow and intractable standard committees rather than pursue rapid introduction of innovative cost-effective technologies. There is thus a need for new technologies 
Abstract-found: 1
Intro-found: 1
Reference: [SOS 94] <institution> System Management Arts, Inc., </institution> <note> SMARTS Operational Server Manual, </note> <year> 1994. </year>
Reference-contexts: The Agent Services layer provides a portable multi-threaded execution environment to support delegation, execution and control of agent programs. It supports, additionally, message communication services among agents. The Agent Services layer uses the SMARTS Operations Server (SOS) implementation <ref> [SOS 94] </ref> of the management by delegation agents [YGY 91]. It provides a library that enables NetScript programs to delegate, execute and control agents at VNEs. 4 The NVN Connectivity Services module is responsible to interact with the underlying physical environment to allocate and maintain VLs to neighboring VNEs. <p> The NetScript project is pursuing a virtual network architecture that provide effective answers to this challenge. 2. How to facilitate effective dynamic distribution and execution of software to program network nodes. The NetScript project is building on the delegated agent technology introduced in <ref> [YGY 91, SOS 94] </ref> to address this challenge. 3. How to create a simple and effective paradigm to program packet stream processing in network nodes. The NetScript language has developed a dataflow programming model that addresses this challenge.
Reference: [YGY 91] <author> Yechiam Yemini, German Goldszmidt, and Shaula Yemini, </author> <title> Network Management by Delegation, </title> <booktitle> In The Second International Symposium on International Network Management, </booktitle> <address> Washington DC, </address> <month> April </month> <year> 1991. </year>
Reference-contexts: The Agent Services layer provides a portable multi-threaded execution environment to support delegation, execution and control of agent programs. It supports, additionally, message communication services among agents. The Agent Services layer uses the SMARTS Operations Server (SOS) implementation [SOS 94] of the management by delegation agents <ref> [YGY 91] </ref>. It provides a library that enables NetScript programs to delegate, execute and control agents at VNEs. 4 The NVN Connectivity Services module is responsible to interact with the underlying physical environment to allocate and maintain VLs to neighboring VNEs. <p> The NetScript project is pursuing a virtual network architecture that provide effective answers to this challenge. 2. How to facilitate effective dynamic distribution and execution of software to program network nodes. The NetScript project is building on the delegated agent technology introduced in <ref> [YGY 91, SOS 94] </ref> to address this challenge. 3. How to create a simple and effective paradigm to program packet stream processing in network nodes. The NetScript language has developed a dataflow programming model that addresses this challenge.
Reference: [DY 96] <author> Sushil da Silva and Yechiam Yemini, </author> <title> The NetScript Language Tutorial and Reference Manual, </title> <type> technical report, </type> <institution> Department of Computer Science, Columbia University, </institution> <address> NY, </address> <month> Summer </month> <year> 1996. </year>
Reference-contexts: THE NETSCRIPT LANGUAGE This section presents a high-level overview of the NetScript language. Our goal here is to describe the computational model and guiding design principles behind NetScript, not to provide a detailed description of the language; the NetScript Language Manual <ref> [DY 96] </ref> gives such a description. NetScript is a small and simple dataflow language designed specifically for communications-based tasks. In particular, NetScript programs operate on streams of packets. The language provides a set of standard primitives that simplify the construction of stream-based computations.
References-found: 3

