URL: http://www.cs.purdue.edu/research/cse/papers/experiences.ps
Refering-URL: http://www.cs.purdue.edu/research/cse/pellpack/hrefs.html
Root-URL: http://www.cs.purdue.edu
Title: Integrated Symbolic-Numeric Computing in //ELLPACK: Experiences and Plans  
Author: Sanjiva Weerawarana, Ann C. Catlin, Elias N. Houstis and John R. Rice 
Date: March 10, 1992  
Address: West Lafayette, IN 47907.  
Affiliation: Department of Computer Sciences Purdue University  
Abstract: In this paper we describe the use of integrated symbolic-numeric computing techniques in the evolving //ELLPACK 1 [HRC + 90] Problem Solving Environment. //ELLPACK is a problem solving environment (PSE) for solving partial differential equations (PDEs) using parallel architectures. It was originally developed to use the ELLPACK[RB85] system as the numerical computing engine. The domain of applicability of ELLPACK is restricted to second order linear elliptic boundary value problems in two and three dimensions. We apply hybrid symbolic-numeric techniques to extend the domain of applicability of the //ELLPACK PSE using both ELLPACK and other numerical PDE solving systems as numerical engines. These techniques have been implemented as an interactive tool using the X Window System[SG86]. Once the PDE problem is specified, it is symbolically manipulated using the MAXIMA 2 computer algebra system to generate a //ELLPACK program to solve the problem using either ELLPACK or FIDISOL[SSM85], a finite-difference method PDE solver. The GENCRAY[WW89] code generation system is used to generate the //ELLPACK program. Several examples of symbolic processing of PDE problems are presented to illustrate the approach. Finally, we consider the shortfalls of these techniques and discuss our plans for solving some of the problems.
Abstract-found: 1
Intro-found: 1
Reference: [BHH + 88] <author> C. Bajaj, C. Hoffmann, E. N. Houstis, J. T. Korb, and J. R. Rice. </author> <title> Computing about physical objects. </title> <booktitle> In Proceedings of the 12th World Congree on Scientific Computing, </booktitle> <volume> volume 4, </volume> <pages> pages 642-684, </pages> <address> New Brunswick, NJ, </address> <year> 1988. </year> <pages> IMACS. </pages>
Reference: [CHENH + 91] <author> N. P. Chrisochoides, C. E. Houstis, P. N. Papachiou E. N. Houstis, S. K. Kortesis, and J. R. Rice. </author> <title> Domain decomposer: A software tool for mapping pde computations to parallel architectures. </title> <editor> In R. Glowinski et al., editors, </editor> <title> Domain Decomposition Methods for Partial Differential Equations IV, </title> <address> pages 341-357. </address> <publisher> SIAM Publications, </publisher> <year> 1991. </year>
Reference-contexts: Of course, the amount of effective parallelism is dependent on the amount of communication that needs to take place between the processors. However, for the parallel solution of PDE problems, this technique is very effective; see <ref> [CHENH + 91] </ref>. 9 Another important use of symbolic computing is in the analysis of the computed solution. Identifying properties of the computed solution makes it possible to use that information when solving the problem again (for example, in the case of time dependent problems).
Reference: [Dew89] <author> M. C. Dewar. </author> <title> IRENA: An integrated symbolic and numerical computation environment. </title> <booktitle> In Proceedings of the ACM-SIGSAM 1989 International Symposium on Symbolic and Algebraic Computation, </booktitle> <pages> pages 171-180. </pages> <publisher> ACM Press, </publisher> <year> 1989. </year>
Reference: [DW90] <author> Yaser Doleh and Paul S. Wang. SUI: </author> <title> A system independent user interface for an integrated scientific computing environment. </title> <booktitle> In Proceedings of the ACM-SIGSAM 1990 International Symposium on Symbolic and Algebraic Computation, </booktitle> <pages> pages 88-95. </pages> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: However, this leads to another set of problems related to byte-order, datatype sizes etc.. To overcome this, we need an RPC [Man90]-like standard communication protocol for communicating mathematical objects. 6 Our use of ascii as a representation avoids some of 5 During the implementation of SUI <ref> [DW90] </ref> at Kent State University, such redirection was done in order to have better control over MAXIMA. 6 The MathLink protocol of Mathematica [Wol88] is an example of such a protocol. 8 these issues, but we introduce other problems related to the exact ascii representation of numbers, for example. 5 The
Reference: [Gro87] <institution> Symbolic Computation Group. Maple User's Manual. University of Waterloo, Department of Computer Science, Waterloo, Canada, </institution> <year> 1987. </year>
Reference-contexts: That is, since the notebook manipulates symbolic statements and descriptions, it would have to be implemented as a symbolic computing system as well. We are currently considering the possibility of actually building this software on top of an existing symbolic computing system such as MAXIMA or MAPLE <ref> [Gro87] </ref>. However, there are certain limitations with this too; mainly due to the closed nature of these systems. These applications of symbolic computing in a PDE solving PSE indicate that symbolic computing is indeed an integral and essential component of such a software system.
Reference: [HR92] <author> Elias N. Houstis and John R. Rice. </author> <title> Problem solving environments and methods for the development of PDE based applications on parallel machines. </title> <type> Technical report, </type> <institution> Department of Computer Sciences, Purdue University, </institution> <year> 1992. </year> <note> in preparation. </note>
Reference-contexts: The organization of the notebook is therefore key to the success of such an environment. We are developing the notebook concept on top of a computing kernel that supports many of the necessary abstractions. A separate report <ref> [HR92] </ref> discusses this kernel and other issues in the development of problem solving environments for PDE solving. 5.2 Symbolic Computing in a PDE Solving PSE Symbolic processing is an integral part of a problem solving environment for PDE solving.
Reference: [HRC + 90] <author> E. N. Houstis, J. R. Rice, N. P. Chrisochoides, H. C. Karathanasis, P. N. Papachiou, M. K. Samartzis, E. A. Vavalis, Ko-Yang Wang, and S. Weerawarana. </author> <title> //ELLPACK: A numerical simulation programming environment for parallel MIMD machines. </title> <editor> In J. Sopka, editor, </editor> <booktitle> Proceedings of Supercomputing '90, </booktitle> <pages> pages 97-107. </pages> <publisher> ACM Press, </publisher> <year> 1990. </year>
Reference-contexts: A detailed description of the ELLPACK system for sequential problems is given in [RB85], while the //ELLPACK system is described in <ref> [HRC + 90] </ref>. Since the ELLPACK language allows one to embed FORTRAN code between segments, one can extend the solution capabilities of ELLPACK by using constructs such as loops and conditionals to perform Newton iteration on nonlinear problems, and to solve time dependent problems via time stepping.
Reference: [HRH + 91] <author> E. N. Houstis, J. R. Rice, C. E. Houstis, T. S. Papatheodorou, and P. Varodoglu. ATHENA: </author> <title> A knowledge based system for parallel ELLPACK. </title> <editor> In E. Diday and Y. Lecheval-lier, editors, </editor> <booktitle> Symbolic Numeric Data Analysis and Learning, </booktitle> <pages> pages 459-467. </pages> <institution> Nova Science, </institution> <year> 1991. </year>
Reference-contexts: This information would be given as input to an expert system that provides advice on what method to use and what machine to use for solving this problem. We are currently developing a rule-based expert system called ATHENA <ref> [HRH + 91] </ref> that does exactly this and also attempts to provide a priori information about the convergence properties of the problem. Symbolic computing can also help in the important task of solving the PDE problem in parallel.
Reference: [Man90] <author> SunOS Reference Manual. </author> <title> Network Programming: Remote Procedure Call Programming Guide. Sun Microsystems, </title> <publisher> Inc., </publisher> <address> Mountain View, CA, </address> <year> 1990. </year>
Reference: [RB85] <author> J. R. Rice and R. F. Boisvert. </author> <title> Solving Elliptic Problems Using ELLPACK. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: A detailed description of the ELLPACK system for sequential problems is given in <ref> [RB85] </ref>, while the //ELLPACK system is described in [HRC + 90].
Reference: [SG86] <author> Robert W. Scheifler and Jim Gettys. </author> <title> The X window system. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 5(2) </volume> <pages> 79-109, </pages> <year> 1986. </year>
Reference: [SSM85] <author> W. Schonauer, E. Schnepf, and M. Muller. </author> <title> The FIDISOL Program Package. </title> <institution> University of Karlsruhe, Karlsruhe, Germany, </institution> <year> 1985. </year>
Reference: [TMG77] <institution> Laboratory for Computer Science The MATHLAB Group. </institution> <note> MACSYMA Reference Manual, Version 9. </note> <institution> M.I.T., </institution> <address> Cambridge, MA, </address> <year> 1977. </year>
Reference-contexts: An example //ELLPACK program is shown in Figure 2. fl This research was supported in part by AFOSR 88-0234, ARO grant DAAG29-83-K-0026, NSF grant CCF-8619817 and ESPRIT project GENESIS. 1 read "parallel ELLPACK" 2 MAXIMA is the Common Lisp port of MACSYMA <ref> [TMG77] </ref> by Bill Schelter of the University of Texas, Austin. 3 A problem solving environment is a software system that is specific to a certain problem domain and assists the user in a "domain-intelligent" manner.
Reference: [Wan86] <author> Paul S. Wang. </author> <title> FINGER: A symbolic system for automatic generation of numerical programs in finite element analysis. </title> <journal> Journal of Symbolic Computation, </journal> <volume> 2 </volume> <pages> 305-316, </pages> <year> 1986. </year>
Reference: [Wan88] <author> Paul S. Wang. </author> <title> An Introduction to Berkeley UNIX. </title> <publisher> Wadsworth Publishing Co., </publisher> <address> Belmont, CA, </address> <year> 1988. </year>
Reference-contexts: It is implemented as a separate X client that communicates to the //ELLPACK environment via sockets <ref> [Wan88] </ref> using a simple protocol. Figure 3 shows the a view of the symbolic tool.
Reference: [Wan90] <author> Paul S. Wang. </author> <title> Advances in integrating symbolic, numeric and graphics computing. </title> <booktitle> In IV-th International Conference on Computer Algebra and its Applications in Physical Research, </booktitle> <year> 1990. </year>
Reference: [WHR92] <author> S. Weerawarana, E. N. Houstis, and J. R. Rice. </author> <title> An interactive symbolic-numeric interface to parallel ellpack for building general pde solvers. </title> <note> to appear, </note> <year> 1992. </year>
Reference: [Wol88] <author> Stephen Wolfram. </author> <title> Mathematica: A System for Doing Mathematics by Computer. </title> <publisher> Addison-Wesley, </publisher> <year> 1988. </year>
Reference-contexts: an RPC [Man90]-like standard communication protocol for communicating mathematical objects. 6 Our use of ascii as a representation avoids some of 5 During the implementation of SUI [DW90] at Kent State University, such redirection was done in order to have better control over MAXIMA. 6 The MathLink protocol of Mathematica <ref> [Wol88] </ref> is an example of such a protocol. 8 these issues, but we introduce other problems related to the exact ascii representation of numbers, for example. 5 The Future The //ELLPACK project is a proof-of-concept prototype of an integrated software system for solving elliptic PDEs.
Reference: [WW89] <author> S. Weerawarana and P. S. Wang. GENCRAY: </author> <title> A portable code generator for cray fortran. </title> <booktitle> In Proceedings of the ACM-SIGSAM 1989 International Symposium on Symbolic and Algebraic Computation, </booktitle> <pages> pages 186-191. </pages> <publisher> ACM Press, </publisher> <year> 1989. </year>
Reference: [Zip90] <author> Richard Zippel. </author> <title> Applying symbolic techniques to differential equations. </title> <type> Technical report, </type> <institution> Department of Computer Science, Cornell University, </institution> <year> 1990. </year> <title> (awaiting proper reference). </title> <type> 12 </type>
References-found: 20

