URL: http://www.cs.uoregon.edu/~jens/print.ps
Refering-URL: http://www.cs.uoregon.edu/~jens/research.html
Root-URL: http://www.cs.uoregon.edu
Email: fjens, log@cs.uoregon.edu  
Title: The Effects of Dispersal on Message-Passing Contention in Processor Allocation Strategies  
Author: Jens Mache and Virginia Lo 
Address: OR 97403  
Affiliation: Department of Computer and Information Science University of Oregon, Eugene,  
Abstract: This paper presents a method to estimate and minimize contention incurred by non-contiguous allocation strategies. Our approach is to analyze the spatial layout of dispersed nodes. Our contribution is a set of dispersal metrics that show very high correlations with message-passing contention. These dispersal metrics are efficient to implement for a variety of interconnection topologies and have the potential to help evaluate and improve processor allocation strategies. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Krueger, T. Lai, and V. A. Dixit-Radiya. </author> <title> Job scheduling is more important than processor allocation for hypercube computers. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 5(5) </volume> <pages> 488-497, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: The class of contiguous allocation strategies restricts the nodes allocated to a given job to form a "convex" shape. Performance suffers significantly due to processors being wasted because of internal and external fragmentation. Utilizations of only 34% to 66% are reported <ref> [2, 10, 1, 3] </ref>. The class of non-contiguous allocation strategies allocates nodes that are dispersed throughout the system. They experience no fragmentation and thus outperform contiguous strategies reaching utilizations of 78% [3, 8, 7].
Reference: [2] <author> K. Li and K.-H. Cheng. </author> <title> A two-dimensional buddy system for dynamic resource allocation in a partitionable mesh connected system. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 12 </volume> <pages> 79-83, </pages> <year> 1991. </year>
Reference-contexts: The class of contiguous allocation strategies restricts the nodes allocated to a given job to form a "convex" shape. Performance suffers significantly due to processors being wasted because of internal and external fragmentation. Utilizations of only 34% to 66% are reported <ref> [2, 10, 1, 3] </ref>. The class of non-contiguous allocation strategies allocates nodes that are dispersed throughout the system. They experience no fragmentation and thus outperform contiguous strategies reaching utilizations of 78% [3, 8, 7].
Reference: [3] <author> W. Liu, V. Lo, K. Windisch, and B. Nitzberg. </author> <title> Noncontiguous processor allocation algorithms for distributed memory multicomputers. </title> <booktitle> In Proceedings of Supercomputing '94, </booktitle> <pages> pages 227-236, </pages> <year> 1994. </year> <note> Best student paper award, to appear in IEEE Transactions on Parallel and Distributed Systems. </note>
Reference-contexts: The class of contiguous allocation strategies restricts the nodes allocated to a given job to form a "convex" shape. Performance suffers significantly due to processors being wasted because of internal and external fragmentation. Utilizations of only 34% to 66% are reported <ref> [2, 10, 1, 3] </ref>. The class of non-contiguous allocation strategies allocates nodes that are dispersed throughout the system. They experience no fragmentation and thus outperform contiguous strategies reaching utilizations of 78% [3, 8, 7]. <p> Utilizations of only 34% to 66% are reported [2, 10, 1, 3]. The class of non-contiguous allocation strategies allocates nodes that are dispersed throughout the system. They experience no fragmentation and thus outperform contiguous strategies reaching utilizations of 78% <ref> [3, 8, 7] </ref>. To further improve the performance of noncontiguous strategies, it is necessary to select allocations that cause minimal message-passing contention. External contention is due to job interference: communication between dispersed nodes of a given job may require a communication link that is currently used by another job's messages. <p> Contention affects the overall communication time of messages, the execution time of jobs, and ultimately job throughput of the machine. Although contention has shown to be negligible in case of small messages <ref> [3, 5] </ref> or high software latency [5], in general it is the deciding performance factor within the class of non-contiguous processor allocation strategies [3, 5]. <p> Although contention has shown to be negligible in case of small messages <ref> [3, 5] </ref> or high software latency [5], in general it is the deciding performance factor within the class of non-contiguous processor allocation strategies [3, 5]. <p> Our dispersal metrics have the potential to help evaluate non-contiguous allocation strategies and to minimize contention. 2 Spatial layout and dispersal metrics Regarding contention in non-contiguous allocation strategies, previous research focused on the following: <ref> [3] </ref> studied whether the advantages of non-contiguity overcome the disadvantage of increased contention, [5] studied under what conditions contention matters and [7] implemented a non-contiguous strategy taking contention into account. This paper presents a method to estimate and minimize contention under non-contiguous allocation strategies. <p> For correlation computations, we use the Pearson correlation coefficient. Results reported represent the statistical mean after 20 simulation runs with identical parameters, and given 95% confidence level, mean results have less than 3% error. Additional details about the simulator are described in <ref> [3] </ref>. Fig.3 shows the correlations for an 16 x 32 mesh topology and five different communication patterns, as well as the correlations for a 8-ary 3-cube and two different communication patterns. The correlations are very high, varying between 0.890 and 0.998 overall.
Reference: [4] <author> J. Mache and V. Lo. </author> <title> Dispersal metrics for non-contiguous processor allocation. </title> <institution> Technical Report , University of Ore-gon, </institution> <year> 1996. </year>
Reference-contexts: For nodes affected and links affected, we look for the maximal gap in each dimension where there are no nodes or links affected. For our distance and diameter met-rics, we employ the Lee distance. More details are found in <ref> [4] </ref>. 2.2 Average dispersal Per job dispersal metrics are computed for a single job. In contrast, average dispersal is defined as the average value of a per job dispersal metric over a jobstream. There are two arguments for average dispersal. <p> This visually shows the high correlation. The slope of the regression lines varies for different communication patterns. All-to-all communication has the biggest slope and one-to-all shows the smallest slope. Other average dispersal metrics show similar graphs. More details are found in <ref> [4] </ref>. Fig. 5 shows rank correlation, the example chosen is all-to-all communication pattern and the average dispersal metric links affected. Dispersal metric, measured contention and measured average service time rank the different allocation strategies in the same order.
Reference: [5] <author> S. Q. Moore and L. M. Ni. </author> <title> The effects of network contention on processor allocation strategies. </title> <type> Technical Report MSU-CPS-ACS-106, </type> <institution> Michigan State University, </institution> <year> 1995. </year>
Reference-contexts: Contention affects the overall communication time of messages, the execution time of jobs, and ultimately job throughput of the machine. Although contention has shown to be negligible in case of small messages <ref> [3, 5] </ref> or high software latency [5], in general it is the deciding performance factor within the class of non-contiguous processor allocation strategies [3, 5]. <p> Contention affects the overall communication time of messages, the execution time of jobs, and ultimately job throughput of the machine. Although contention has shown to be negligible in case of small messages [3, 5] or high software latency <ref> [5] </ref>, in general it is the deciding performance factor within the class of non-contiguous processor allocation strategies [3, 5]. <p> Although contention has shown to be negligible in case of small messages <ref> [3, 5] </ref> or high software latency [5], in general it is the deciding performance factor within the class of non-contiguous processor allocation strategies [3, 5]. <p> Our dispersal metrics have the potential to help evaluate non-contiguous allocation strategies and to minimize contention. 2 Spatial layout and dispersal metrics Regarding contention in non-contiguous allocation strategies, previous research focused on the following: [3] studied whether the advantages of non-contiguity overcome the disadvantage of increased contention, <ref> [5] </ref> studied under what conditions contention matters and [7] implemented a non-contiguous strategy taking contention into account. This paper presents a method to estimate and minimize contention under non-contiguous allocation strategies. Our approach is to analyze the spatial layout of dispersed nodes. <p> Examples of existing machines with mesh or k-ary n-cube topologies are the Intel TFLOP, Intel Paragon, iPSC/860, Cray T3E and Cray T3D. We do not consider indirect networks (also known as multistage interconnection networks (MIN) or switch-based networks). Regarding contention, the experiments in <ref> [5] </ref> showed similar behavior for direct and indirect networks. 2.1 Per job dispersal metrics Per job dispersal metrics are based on addresses of the nodes allocated to the job in question. We first discuss two-dimensional mesh topologies.
Reference: [6] <author> L. M. Ni and P. K. McKinley. </author> <title> A survey of wormhole routing techniques in direct networks. </title> <journal> IEEE Transactions on Computers, </journal> <pages> pages 62-76, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: We develop several dispersal metrics based on the spatial layout of dispersed nodes. Through detailed simulations, we measure the degree to which dispersal metrics capture contention. Our simulation model uses dimension-ordered routing and wormhole switching <ref> [6] </ref> (both are adopted in many existing machines) and MPPs with direct interconnection networks having mesh or k-ary n-cube topologies. Intuitively, a k-ary n-cube is an n-dimensional mesh with wraparound edges in each dimension. Hypercubes, tori and rings are special cases of k-ary n-cubes.
Reference: [7] <author> M. Wan, R. Moore, G. Kremenek, and K. Steube. </author> <title> A batch scheduler for the Intel Paragon MPP system with a noncontiguous node allocation algorithm. </title> <booktitle> In Proceedings of the 2nd Workshop on Job Scheduling Strategies for Parallel Processing, IPPS '96, </booktitle> <year> 1996. </year>
Reference-contexts: Utilizations of only 34% to 66% are reported [2, 10, 1, 3]. The class of non-contiguous allocation strategies allocates nodes that are dispersed throughout the system. They experience no fragmentation and thus outperform contiguous strategies reaching utilizations of 78% <ref> [3, 8, 7] </ref>. To further improve the performance of noncontiguous strategies, it is necessary to select allocations that cause minimal message-passing contention. External contention is due to job interference: communication between dispersed nodes of a given job may require a communication link that is currently used by another job's messages. <p> potential to help evaluate non-contiguous allocation strategies and to minimize contention. 2 Spatial layout and dispersal metrics Regarding contention in non-contiguous allocation strategies, previous research focused on the following: [3] studied whether the advantages of non-contiguity overcome the disadvantage of increased contention, [5] studied under what conditions contention matters and <ref> [7] </ref> implemented a non-contiguous strategy taking contention into account. This paper presents a method to estimate and minimize contention under non-contiguous allocation strategies. Our approach is to analyze the spatial layout of dispersed nodes. This approach is motivated by several observations: First, spatial layout obviously affects job interference.
Reference: [8] <author> K. Windisch, V. Lo, and B. Bose. </author> <title> Contiguous and noncontiguous processor allocation algorithms for k-ary n-cubes. </title> <booktitle> In Proceedings of the International Conference on Parallel Processing, </booktitle> <year> 1995. </year>
Reference-contexts: Utilizations of only 34% to 66% are reported [2, 10, 1, 3]. The class of non-contiguous allocation strategies allocates nodes that are dispersed throughout the system. They experience no fragmentation and thus outperform contiguous strategies reaching utilizations of 78% <ref> [3, 8, 7] </ref>. To further improve the performance of noncontiguous strategies, it is necessary to select allocations that cause minimal message-passing contention. External contention is due to job interference: communication between dispersed nodes of a given job may require a communication link that is currently used by another job's messages.
Reference: [9] <author> K. Windisch, J. V. Miller, and V. Lo. ProcSimity: </author> <title> an experimental tool for processor allocation and scheduling in highly parallel systems. </title> <booktitle> In Proceedings of the Fifth Symposium on the Frontiers of Massively Parallel Computation, </booktitle> <pages> pages 414-421, </pages> <year> 1995. </year>
Reference-contexts: To obtain contention measurements, we use ProcSimity <ref> [9] </ref>, a discrete-event simulator. The detailed message-passing behavior is simulated down to the level of individual flits and message-passing buffers. We employ different contiguous and noncontiguous strategies. We set workload parameters in our simulation according to workload parameters observed in traces of production machines.
Reference: [10] <author> Y. Zhu. </author> <title> Efficient processor allocation strategies for mesh-connected parallel computers. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 16 </volume> <pages> 328-337, </pages> <year> 1992. </year>
Reference-contexts: The class of contiguous allocation strategies restricts the nodes allocated to a given job to form a "convex" shape. Performance suffers significantly due to processors being wasted because of internal and external fragmentation. Utilizations of only 34% to 66% are reported <ref> [2, 10, 1, 3] </ref>. The class of non-contiguous allocation strategies allocates nodes that are dispersed throughout the system. They experience no fragmentation and thus outperform contiguous strategies reaching utilizations of 78% [3, 8, 7].
References-found: 10

