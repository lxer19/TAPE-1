URL: http://www.cs.ucsd.edu/users/jenny/TechReports/TR.CS97-541.ps
Refering-URL: http://www.cs.ucsd.edu/users/jenny/cv.html
Root-URL: http://www.cs.ucsd.edu
Email: fjenny,bermang@cs.ucsd.edu  
Title: Performance Prediction Using Intervals Extended Abstract  
Author: Jennifer M. Schopf and Francine Berman 
Date: May 1997.  
Address: San Diego  
Affiliation: Computer Science and Engineering Department University of California,  UCSD CSE Dept  
Pubnum: Technical Report #CS97-541,  
Abstract: Accurate performance predictions are difficult to achieve for applications on production distributed parallel systems. We address this problem by allowing characteristic application and system data to be represented as an interval of possible values. We use intervals as parameters to a structural modeling technique, and predict the range of application behavior that will occur. We test this approach on a production system using a distributed SOR code, and demonstrate the resulting additional information and accuracy resulting from the interval values. 
Abstract-found: 1
Intro-found: 1
Reference: [Bar78] <author> B. Austin Barry. </author> <title> Errors in Practical Measurement in Science, Engineering and Technology. </title> <publisher> John Wilsey & Sons, </publisher> <year> 1978. </year>
Reference-contexts: When we extend the domain of model parameters to include interval values we must address the issue of having them interact and produce interval value results. For each arithmetic operation, we define a rule for combining interval values based on standard statistical error propagation methods <ref> [Bar78] </ref>. In the following, we assume that all interval values are of the form X i v i and are from normal distributions, where X i is the mean and v i is the standard deviation.
Reference: [BW96] <author> Fran Berman and Richard Wolski. </author> <title> Scheduling from the perspective of the application. </title> <booktitle> In Proceedings of the Fifth IEEE International Symposium on High Performance Distributed Computing, </booktitle> <year> 1996. </year>
Reference-contexts: The constituent component models in turn use both application and system characteristics (CPU load, message sizes, operation counts, bandwidth figures, etc) as point value model parameters. Details of this approach can be found in [Sch97], a part of the Application-Level Scheduler (AppLeS) project <ref> [BW96, BWF + 96] </ref>. We will extend the structural modeling approach to define predictions for applications when model parameters are represented as interval values.
Reference: [BWF + 96] <author> Fran Berman, Richard Wolski, Silvia Figueira, Jennifer Schopf, and Gary Shao. </author> <title> Application-level scheduling on distributed heterogeneous networks. </title> <booktitle> In Proceedings of SuperComputing '96, </booktitle> <year> 1996. </year>
Reference-contexts: The constituent component models in turn use both application and system characteristics (CPU load, message sizes, operation counts, bandwidth figures, etc) as point value model parameters. Details of this approach can be found in [Sch97], a part of the Application-Level Scheduler (AppLeS) project <ref> [BW96, BWF + 96] </ref>. We will extend the structural modeling approach to define predictions for applications when model parameters are represented as interval values.
Reference: [LM86] <author> Richard J. Larsen and Morris L. Marx. </author> <title> An Introduction to Mathematical Statistics and Its Applications, chapter Chapter 7.3 Linear Combinations of Normal Random Variables. </title> <booktitle> Prentice-Hall, second edition, </booktitle> <year> 1986. </year>
Reference-contexts: Our experiments in Section 4 present one case for this, others are detailed below. One reason we make the assumption of a normal distribution is that normal distributions are closed under linear combinations, allowing us to manipulate the interval values in our models <ref> [LM86] </ref>. Any distribution with this property can be used. In this section we represent characteristic behavior with two standard statistical functions. The Probability Distribution Function (PDF) shows the probability of some x being equal to a specific value. <p> The form for calculating the resulting interval value X i v i when multiplying an interval value by a point value, P , is P (X i v i ) = P X i P v i Since normal distributions are closed under linear combinations <ref> [LM86] </ref>, the resulting interval value will also have a normal distribution. Similarly, division can be viewed as multiplication by a point value Q such that Q = 1 P , again resulting in a normal distribution.
Reference: [Sch97] <author> Jennifer M. Schopf. </author> <title> Structural prediction models for high-performance distributed applications. </title> <booktitle> In Proceedings of the Cluster Computing Conference (CCC '97), </booktitle> <year> 1997. </year> <note> Also available as http://www.cs.ucsd.edu/users/jenny/CCC97/ index.html. </note>
Reference-contexts: The constituent component models in turn use both application and system characteristics (CPU load, message sizes, operation counts, bandwidth figures, etc) as point value model parameters. Details of this approach can be found in <ref> [Sch97] </ref>, a part of the Application-Level Scheduler (AppLeS) project [BW96, BWF + 96]. We will extend the structural modeling approach to define predictions for applications when model parameters are represented as interval values. <p> In our experiments (presented in Section 4), we use interval values for CPULoad i , and point values for all other model parameters. 3 Using Interval Values for Pre dicting Performance In <ref> [Sch97] </ref>, structural models combined point value model parameters using arithmetical operators to produce a point value prediction of the application behavior.
Reference: [Wol96] <author> Rich Wolski. </author> <title> Dynamically forecasting network performance using the network weather service. </title> <type> Technical Report TR-CS96-494, </type> <institution> University of California, San Diego, Computer Science and Engineering Dep-tartment, </institution> <month> October </month> <year> 1996. </year> <note> Also available at http://www-cse.ucsd.edu/users/rich/ publications.html. 7 </note>
Reference-contexts: The dynamic CPU load information we use is supplied by the Network Weather Service (NWS) <ref> [Wol96] </ref>. The NWS provides software for monitoring and predicting the "weather" on networked resources using sensors to dynamically probe and record information on CPU usage, latency, bandwidth, and memory information.
References-found: 6

