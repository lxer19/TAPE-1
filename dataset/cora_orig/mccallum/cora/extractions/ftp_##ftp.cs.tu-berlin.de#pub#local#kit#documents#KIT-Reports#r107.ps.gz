URL: ftp://ftp.cs.tu-berlin.de/pub/local/kit/documents/KIT-Reports/r107.ps.gz
Refering-URL: http://flp.cs.tu-berlin.de/~kit/reportliste/kitlistehtml.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Inferences for Temporal Object Descriptions in a Terminological Representation System: Design and Implementation  
Author: Andreas Neuwirth 
Date: April 1993  
Address: Projekt KIT-BACK, FR 5-12 Franklinstr. 28/29, W-1000 Berlin 10  
Affiliation: Technische Universit at Berlin  
Abstract: KIT REPORT 107 
Abstract-found: 1
Intro-found: 1
Reference: [Allen 83] <author> James F. Allen. </author> <title> Maintaining Knowledge About Temporal Intervals. </title> <booktitle> Communications of the ACM 26(11), S. </booktitle> <pages> 832-843, </pages> <year> 1983 </year>
Reference-contexts: In the last chapter I will write some final remarks about the existing incompleteness, ways to increase the performance, and the advantages of restricted languages. 1 see [Schild 91a] and [Schild 91b] 2 see [Nebel 90] 3 see [Shoham 87] and <ref> [Allen 83] </ref> Chapter 2 Preliminaries The most important work this report is based on, was written by Martin Fischer in his diploma thesis [Fischer 92a] and his report [Fischer 92b]. There he describes the language and the algorithms of his temporal TBox. <p> TIMESETS 7 2.2 Timesets The timesets are needed for the representation of time. Time is described by a sequence of time points, and not by intervals as in <ref> [Allen 83] </ref>. Before and after each time point is an endless number of other time points, so it is suggested to describe time by the set Z. The granularity, the "length of a time point", is freely choosable and depends on the used model.
Reference: [Brachman, Schmolze 85] <author> Ronald J. Brachman, James G. Schmolze. </author> <title> An overview of the kl-one knowledge representation system. </title> <booktitle> Cognitive Science 9 (2), S. </booktitle> <pages> 171-216, </pages> <year> 1985 </year>
Reference-contexts: The possible ways of reasoning mechanisms depend on the used term language. Well known agents of such representation systems are kl-one, krypton, kandor, kl-two and back. kl-one is the first and most prominent of these systems. A good overview of kl-one can be found in <ref> [Brachman, Schmolze 85] </ref>. It was used in systems for understanding and generating natural language, interactive Information Retrieval etc. back was developed at the Technical University of Berlin by the KIT-BACK-group. In the scope of a seminar, the back-system was developed there too, which has a more experimental character.
Reference: [Deumer, Neuwirth 91] <author> Wolfgang Deumer, Andreas Neuwirth. </author> <title> Implementierung einer ABox fr back. </title> <institution> Semesterarbeit im Seminar 'Terminologische Wissensreprasentation' am Fachbereich Informatik, Technische Universitat Berlin, </institution> <year> 1991 </year>
Reference-contexts: :: r at some T iff 9 t 2 T (hI [o 1 ]; I [o 2 ]; ti 2 I [r]) A structure M is a model of a world description W with terminology T , if it satisfies all formulas of W and T . 2 1 see <ref> [Deumer, Neuwirth 91] </ref> and [Quantz, Kindermann 90] 3.1. INTRODUCTION 13 If implicit knowledge of a world description is made explicit, 'new' facts are inferred. These facts are entailed by the world description. With the previous definition it is easy to say what entailment means. <p> of the extensional description, I have considered more than one data structure: 1. relation (RName, OName 1 , OName 2 , Timeset) + simple format + Simple Prolog code for the calculation of all role fillers, inverse fillers, or all roles given two objects. 1 see [Quantz, Kindermann 90] and <ref> [Deumer, Neuwirth 91] </ref> 20 CHAPTER 4. <p> Then the immediate consequences (propagations) are calculated. (P) The propagations are processed as a list of internal tells, one after another. If new consequences arise by this process, they are added to the list. Z Z Z This structure could be taken from the normal back (see <ref> [Deumer, Neuwirth 91] </ref>).
Reference: [Fischer 91] <author> Martin Fischer. </author> <title> Integration von temporalen Operatoren in ein terminologisches Reprasentationssystem. </title> <institution> Studienarbeit am Fachbereich Informatik, Technische Universitat Berlin, </institution> <year> 1991 </year>
Reference-contexts: It is examined whether other forms of knowledge, like rules, defaults, probabilistic or temporal knowledge, can be integrated into the terminological disposition. This report describes the integration of time into a terminological system. Based on the work of Martin Fischer (see <ref> [Fischer 91, Fischer 92a, Fischer 92b] </ref>) on a temporal TBox, the assertional component (ABox) of a temporal terminological system is described. Together 2 CHAPTER 1. PREFACE with his TBox, a complete temporal system was created. It was implemented in Prolog and can be used for experiments. <p> First I will explain the terminological language of the TBox and the so called 'timesets' used for the representation of time. In the last section of this chapter, I will describe the TBox functions which are applied by the ABox. The combination of object descriptions (cf. <ref> [Fischer 91, p. 41] </ref>) will be described in section 4.1. 2.1 The Temporal Language N T F T The TBox is needed to build a terminology, which seems to be useful to model certain facts. <p> Now I will explain the terminological language by giving an example. Thereafter you will find the syntax and semantics. A detailed explanation can be found in <ref> [Fischer 91] </ref>. creature :&lt; anything (T1) human := alltime (p human and creature) (T2) woman := human and alltime (p woman and not (p man)) (T3) man := human and alltime (p man and not (p woman)) (T4) 'Creature' is a primitive concept and used by the following concept definitions.
Reference: [Fischer 92a] <institution> Martin Fischer. Inferenzalgorithmen fur ein temporales terminologisches Repra-sentationssystem. Diplomarbeit am Fachbereich Informatik, Technische Univer-sitat Berlin, </institution> <year> 1992 </year>
Reference-contexts: It is examined whether other forms of knowledge, like rules, defaults, probabilistic or temporal knowledge, can be integrated into the terminological disposition. This report describes the integration of time into a terminological system. Based on the work of Martin Fischer (see <ref> [Fischer 91, Fischer 92a, Fischer 92b] </ref>) on a temporal TBox, the assertional component (ABox) of a temporal terminological system is described. Together 2 CHAPTER 1. PREFACE with his TBox, a complete temporal system was created. It was implemented in Prolog and can be used for experiments. <p> ways to increase the performance, and the advantages of restricted languages. 1 see [Schild 91a] and [Schild 91b] 2 see [Nebel 90] 3 see [Shoham 87] and [Allen 83] Chapter 2 Preliminaries The most important work this report is based on, was written by Martin Fischer in his diploma thesis <ref> [Fischer 92a] </ref> and his report [Fischer 92b]. There he describes the language and the algorithms of his temporal TBox. In this chapter, I will recapitulate some of the main aspects which are necessary for the understanding of this report. <p> The second requirement for timesets is that no uncertain pointset may contain any point of the certain pointset. Otherwise the uncertain pointset could also be omitted, because it is implied by the certain time point (see figure 2.2). Here is the definition of timesets we can find in <ref> [Fischer 92a, p. 9] </ref>: Definition 2.2 (Timesets) Given the sets T; T 1 ; T 2 ; : : : Z, a timeset T S Z over Z is defined as the set T S Z = fa (T ), s (T 1 ), s (T 2 ); : : :g, <p> Some of the described functions exists in several variants, so that not only normal forms are allowed as arguments, but also components of normal forms or concept terms. 5 see <ref> [Fischer 92a, S. 14] </ref> Chapter 3 The Assertional Language In this chapter I will introduce the assertional language. It is the temporal object description language AT LT for asserting facts in the ABox and the operators of AQLT for asking queries. <p> It is the temporal object description language AT LT for asserting facts in the ABox and the operators of AQLT for asking queries. The object description language was taken from <ref> [Fischer 92a, Fischer 92b] </ref> without changes, but the query language was expanded with some additional operators. As in the previous chapter, I will introduce the language by giving some examples. <p> For that reason the query language was created to get specific information from the ABox. M. Fischer has defined a query language in <ref> [Fischer 92a] </ref> and [Fischer 92b] with four concept and four role queries. I have mentioned them in the previous section. With them, it is possible to ask specific questions, but it is only a small section of the range of all possible questions. The following scheme will show it. <p> In the following two rules for the specialisation of uncertain knowledge, the TBox function time disjoint (c 1 ,c 2 ) is used. It calculates the timeset, when the concept c 1 is not valid, if c 2 valid. 5 see <ref> [Fischer 92a, p. 20] </ref> 5.1. ABOX TELLS 29 - Time: T 1 T s r r Rule 3 (Specialisation of an Uncertain Value Restriction) Given the world description W with terminology T and the temporal uncertain fact 'o 1 :: all (r,c) at some T s '. <p> Of course, these solutions are only provisional. We have yet to clarify, how such cyclic rule applications can be discovered quickly and safely, and how they have to be handled. Especially it has to be examined, if they only coexist with incoherence or inconsistency. 7 see <ref> [Fischer 92a, p. 20] </ref> 34 CHAPTER 5. ALGORITHMS 5.2 ABox Asks Since the most inferences are calculated at assert-time, in this section only abstraction is described. It is the only inference calculated at query-time. Because of the pre-computations, the calculations of the answers are not so hard to realize. <p> For those reasons, the abstraction is not calculated at assert-time but at query-time. So no generalisations have to be calculated. But if the query contains a value restriction, the answer can't be only intensionally computed by a simple call of time compare as written in <ref> [Fischer 92a, Fischer 92b] </ref>, but it must also be extensionally calculated. For example the answer of the query 'when is o :: all (r,c)' can't be simply calculated by a call of the function time compare (all (r,c),MSG o ). <p> But the consequence is that in some cases the validity of some since- and until-terms are not completely calculated. Moreover there is the incompleteness of the TBox. In <ref> [Fischer 92a, p. 27] </ref> is described, in which cases the function time compare is incomplete. <p> Because the handling of nested sometime-terms is difficult for the TBox, it is better to omit this operator. But then nothing changed in the ABox, the rules 3 and 4 are needed furthermore. 2 see <ref> [Fischer 92a, p. 29] </ref> 44 CHAPTER 7. EVALUATION AND OUTLOOK 7.4 Conclusion Together with the works of M. Fischer, it was shown that it is possible to construct and to implement a temporal terminological representation system according to the disposition of K. Schild.
Reference: [Fischer 92b] <author> Martin Fischer. </author> <title> The Integration of Temporal Operators int a Terminological Representation System. </title> <type> KIT Report 99, </type> <institution> Berlin: Fachbereich Informatik, Tech-nische Universitat Berlin, </institution> <year> 1990 </year>
Reference-contexts: It is examined whether other forms of knowledge, like rules, defaults, probabilistic or temporal knowledge, can be integrated into the terminological disposition. This report describes the integration of time into a terminological system. Based on the work of Martin Fischer (see <ref> [Fischer 91, Fischer 92a, Fischer 92b] </ref>) on a temporal TBox, the assertional component (ABox) of a temporal terminological system is described. Together 2 CHAPTER 1. PREFACE with his TBox, a complete temporal system was created. It was implemented in Prolog and can be used for experiments. <p> and the advantages of restricted languages. 1 see [Schild 91a] and [Schild 91b] 2 see [Nebel 90] 3 see [Shoham 87] and [Allen 83] Chapter 2 Preliminaries The most important work this report is based on, was written by Martin Fischer in his diploma thesis [Fischer 92a] and his report <ref> [Fischer 92b] </ref>. There he describes the language and the algorithms of his temporal TBox. In this chapter, I will recapitulate some of the main aspects which are necessary for the understanding of this report. <p> It is the temporal object description language AT LT for asserting facts in the ABox and the operators of AQLT for asking queries. The object description language was taken from <ref> [Fischer 92a, Fischer 92b] </ref> without changes, but the query language was expanded with some additional operators. As in the previous chapter, I will introduce the language by giving some examples. <p> For that reason the query language was created to get specific information from the ABox. M. Fischer has defined a query language in [Fischer 92a] and <ref> [Fischer 92b] </ref> with four concept and four role queries. I have mentioned them in the previous section. With them, it is possible to ask specific questions, but it is only a small section of the range of all possible questions. The following scheme will show it. <p> So all implications within one object description is done by the semantical normalization of the TBox. ABox inferences are only necessary, if more than one object is concerned with the entailment of a new fact. 2 Proof see <ref> [Fischer 92b, P. 33] </ref> Chapter 5 Algorithms 5.1 ABox Tells All user asserted ABox tells for one object are combined into one object description, the MSG. Facts for one object may have consequences for other objects, which are related to it by role relations. <p> For those reasons, the abstraction is not calculated at assert-time but at query-time. So no generalisations have to be calculated. But if the query contains a value restriction, the answer can't be only intensionally computed by a simple call of time compare as written in <ref> [Fischer 92a, Fischer 92b] </ref>, but it must also be extensionally calculated. For example the answer of the query 'when is o :: all (r,c)' can't be simply calculated by a call of the function time compare (all (r,c),MSG o ). <p> Since the ABox calculates with timesets, the corresponding module is used. As mentioned above, the ABox needs functions of the TBox. The TBox itself is structured in several modules but this is not in the focus of our interest. Its architecture is described in detail in <ref> [Fischer 92b, p. 30] </ref>. <p> Procedure (P) will always terminate, because cyclic term definitions are not allowed, already known information will not produce new propagations (see (CI1) and (RI1)) and the usage of the rules 5 and 6 is restricted by an upper limit. 6.2 ABox Asks In <ref> [Fischer 92b, p. 32] </ref> M. Fischer has described simple algorithms for the operators when is, who is and what is. They are based on simple TBox queries with time compare and subsumes.
Reference: [Nebel 90] <author> Bernhard Nebel. </author> <title> Reasoning and Revision in Hybrid Representation Systems. </title> <publisher> LNAI 422, Springer, </publisher> <address> Berlin Heidelberg, </address> <year> 1990 </year>
Reference-contexts: In the last chapter I will write some final remarks about the existing incompleteness, ways to increase the performance, and the advantages of restricted languages. 1 see [Schild 91a] and [Schild 91b] 2 see <ref> [Nebel 90] </ref> 3 see [Shoham 87] and [Allen 83] Chapter 2 Preliminaries The most important work this report is based on, was written by Martin Fischer in his diploma thesis [Fischer 92a] and his report [Fischer 92b]. There he describes the language and the algorithms of his temporal TBox. <p> For all p -concepts it is true that p name :&lt; anything. They are useful to model primitive mutual exclusions or differences. A human is 1 It is term 1 := term 2 def = fterm 1 :&lt; term 2 ; term 2 :&lt; term 1 g 2 see <ref> [Nebel 90, p. 55] </ref> 4 CHAPTER 2. PRELIMINARIES a creature with the additional property 'p human'. This additional property is not explained, because in this model it doesn't matter. <p> Another reason is the discovery of inconsistency at assert time. So mistakes in the used model can better be recognized and localized. assert-time-inferences are also preferred in other systems, for example [Quantz, Kindermann 90] and <ref> [Nebel 90, page 98] </ref>. The proceeding, where implicit knowledge is made explicit, I denote as completion. I distinguish the following four cases of completion: * Forward propagation, where information is propagated from one object to its role-fillers, * Backward propagation, which describes the reverse proceeding, 5.1.
Reference: [Neuwirth 92] <editor> Andreas Neuwirth. Inferenzen fur temporale Objektbeschreibungen in einem terminologischen Reprasentationssystem: </editor> <title> Entwurf und Implementation. </title> <institution> Diplom-arbeit am Fachbereich Informatik, Technische Universitat Berlin, </institution> <year> 1992 </year>
Reference: [Peltason et al. 89] <author> Christof Peltason, Albrecht Schmiedel, Carsten Kindermann, Joachim Quantz. </author> <title> The back System Revisited. </title> <type> KIT Report 75, </type> <institution> Berlin: Fachbereich In-formatik, Technische Universitat Berlin, </institution> <year> 1989 </year>
Reference: [Quantz, Kindermann 90] <author> Joachim Quantz, Carsten Kindermann. </author> <title> Implementation of the back System Version 4. </title> <type> KIT Report 78, </type> <institution> Berlin: Fachbereich Informatik, Tech-nische Universitat Berlin, </institution> <year> 1990 </year>
Reference-contexts: T iff 9 t 2 T (hI [o 1 ]; I [o 2 ]; ti 2 I [r]) A structure M is a model of a world description W with terminology T , if it satisfies all formulas of W and T . 2 1 see [Deumer, Neuwirth 91] and <ref> [Quantz, Kindermann 90] </ref> 3.1. INTRODUCTION 13 If implicit knowledge of a world description is made explicit, 'new' facts are inferred. These facts are entailed by the world description. With the previous definition it is easy to say what entailment means. <p> Thereafter its semantics is described. 2 In Prolog, all names beginning with a capital letter, are treated as variables, but here only O, C, R and TS are meant to be variables. But when working with the system, all object names must start with a lower-case letter. 3 see <ref> [Quantz, Kindermann 90] </ref> 4 see definition 2.2 page 7 16 CHAPTER 3. <p> For the storage of the extensional description, I have considered more than one data structure: 1. relation (RName, OName 1 , OName 2 , Timeset) + simple format + Simple Prolog code for the calculation of all role fillers, inverse fillers, or all roles given two objects. 1 see <ref> [Quantz, Kindermann 90] </ref> and [Deumer, Neuwirth 91] 20 CHAPTER 4. <p> Another reason is the discovery of inconsistency at assert time. So mistakes in the used model can better be recognized and localized. assert-time-inferences are also preferred in other systems, for example <ref> [Quantz, Kindermann 90] </ref> and [Nebel 90, page 98]. The proceeding, where implicit knowledge is made explicit, I denote as completion. I distinguish the following four cases of completion: * Forward propagation, where information is propagated from one object to its role-fillers, * Backward propagation, which describes the reverse proceeding, 5.1.
Reference: [Schild 91a] <author> Klaus Schild. </author> <title> A Correspondence Theory for Terminological Logics. </title> <booktitle> Proceedings of the 12th International Joint Conference on Artificial Intelligence, S. </booktitle> <pages> 466-471, </pages> <address> Sydney, Australia, 1991 46 BIBLIOGRAPHY </address>
Reference-contexts: Then the general course and structure of the implemented ABox is sketched, but the real Prolog code is not shown or commentated. In the last chapter I will write some final remarks about the existing incompleteness, ways to increase the performance, and the advantages of restricted languages. 1 see <ref> [Schild 91a] </ref> and [Schild 91b] 2 see [Nebel 90] 3 see [Shoham 87] and [Allen 83] Chapter 2 Preliminaries The most important work this report is based on, was written by Martin Fischer in his diploma thesis [Fischer 92a] and his report [Fischer 92b].
Reference: [Schild 91b] <author> Klaus Schild. </author> <title> A Tense-Logical Extension of Terminological Logics. </title> <type> KIT Report 92, </type> <institution> Berlin: Fachbereich Informatik, Technische Universitat Berlin, </institution> <year> 1991 </year>
Reference-contexts: In the last chapter I will write some final remarks about the existing incompleteness, ways to increase the performance, and the advantages of restricted languages. 1 see [Schild 91a] and <ref> [Schild 91b] </ref> 2 see [Nebel 90] 3 see [Shoham 87] and [Allen 83] Chapter 2 Preliminaries The most important work this report is based on, was written by Martin Fischer in his diploma thesis [Fischer 92a] and his report [Fischer 92b].
Reference: [Schmiedel 88] <author> Albrecht Schmiedel. </author> <title> A Temporal Constraint Handler for the back System. </title> <type> KIT Report 70, </type> <institution> Berlin Fachbereich Informatik, Technische Universitat Berlin, </institution> <year> 1988 </year>
Reference-contexts: This temporal language is used in the temporal back, which is explained in this report. It is not the first attempt to integrate time in a terminological system. Albrecht Schmiedel, for example, describes in <ref> [Schmiedel 88] </ref> and [Schmiedel 90] another way, which is totally different from this approach. It is based on the temporal logic of Yoav Shoham and the interval relations of James F. Allen. 3 First, I will summarise some important aspects of the work of M.
Reference: [Schmiedel 90] <author> Albrecht Schmiedel. </author> <title> A Temporal Terminological Logic. </title> <booktitle> Proceedings of the 9th Conference of American Association for Artificial Intelligence, S. </booktitle> <pages> 640-645, </pages> <address> Boston, Mass., </address> <year> 1990 </year>
Reference-contexts: This temporal language is used in the temporal back, which is explained in this report. It is not the first attempt to integrate time in a terminological system. Albrecht Schmiedel, for example, describes in [Schmiedel 88] and <ref> [Schmiedel 90] </ref> another way, which is totally different from this approach. It is based on the temporal logic of Yoav Shoham and the interval relations of James F. Allen. 3 First, I will summarise some important aspects of the work of M. Fischer, because they are fundamental for this report.
Reference: [Shoham 87] <author> Yoav Shoham. </author> <title> Temporal Logics in AI: Semantical and Ontological Considerations. </title> <journal> In Artificial Intelligence, </journal> <volume> volume 33, </volume> <pages> S. 89-104, </pages> <year> 1987 </year>
Reference-contexts: In the last chapter I will write some final remarks about the existing incompleteness, ways to increase the performance, and the advantages of restricted languages. 1 see [Schild 91a] and [Schild 91b] 2 see [Nebel 90] 3 see <ref> [Shoham 87] </ref> and [Allen 83] Chapter 2 Preliminaries The most important work this report is based on, was written by Martin Fischer in his diploma thesis [Fischer 92a] and his report [Fischer 92b]. There he describes the language and the algorithms of his temporal TBox.
References-found: 15

