URL: http://www.research.microsoft.com/crypto/papers/owa.ps
Refering-URL: http://www.research.microsoft.com/crypto/
Root-URL: http://www.research.microsoft.com
Title: One-Way Accumulators: A Decentralized Alternative to Digital Signatures (Extended Abstract)  
Author: Josh Benaloh Michael de Mare 
Affiliation: Clarkson University  Giordano Automation  
Abstract: This paper describes a simple candidate one-way hash function which satisfies a quasi-commutative property that allows it to be used as an accumulator. This property allows protocols to be developed in which the need for a trusted central authority can be eliminated. Space-efficient distributed protocols are given for document time stamping and for membership testing, and many other applications are possible. 
Abstract-found: 1
Intro-found: 1
Reference: [Beav91] <author> Beaver, D. </author> <title> "Efficient Multiparty Protocols Using Circuit Randomization." </title> <booktitle> Advances in Cryptology | Crypto '91, </booktitle> <editor> ed. by J. </editor> <booktitle> Feigenbaum in Lecture Notes in Computer Science, </booktitle> <volume> vol. 576, </volume> <editor> ed. by G. Goos and J. Hartmanis. </editor> <publisher> Springer-Verlag, </publisher> <address> New York (1992), </address> <pages> 420-432. </pages>
Reference-contexts: be supplied by a (trusted) outside source, constructed by a special purpose physical device, or (perhaps more likely) chosen by joint evaluation of a circuit for computing such an n which is supplied with random inputs by the participants (see [GMW86], [GMW87], [BGW88], [CCD88], [RaBe89], [Beav89], [BeGo89], [GoLe90], [MiRa90], and <ref> [Beav91] </ref> for work on secure multiparty computation). Since this n need be selected only once and may thereafter be used continuously, any extraordinary effort which may be required to construct such an n may be warranted. Once n has been selected, a starting value x is agreed upon.
Reference: [Beav89] <author> Beaver, D. </author> <title> "Multiparty Protocols Tolerating Half Faulty Processors." </title> <booktitle> Advances in Cryptology | Crypto '89, </booktitle> <editor> ed. by G. </editor> <booktitle> Brassard in Lecture Notes in Computer Science, </booktitle> <volume> vol. 435, </volume> <editor> ed. by G. Goos and J. Hartmanis. </editor> <publisher> Springer-Verlag, </publisher> <address> New York (1990), </address> <pages> 560-572. </pages>
Reference-contexts: This n can be supplied by a (trusted) outside source, constructed by a special purpose physical device, or (perhaps more likely) chosen by joint evaluation of a circuit for computing such an n which is supplied with random inputs by the participants (see [GMW86], [GMW87], [BGW88], [CCD88], [RaBe89], <ref> [Beav89] </ref>, [BeGo89], [GoLe90], [MiRa90], and [Beav91] for work on secure multiparty computation). Since this n need be selected only once and may thereafter be used continuously, any extraordinary effort which may be required to construct such an n may be warranted.
Reference: [BeGo89] <author> Beaver, D. and Goldwasser, S. </author> <title> "Multiparty Computation with Faulty Majority." </title> <booktitle> Proc. 30 th IEEE Symp. on Foundations of Computer Science, </booktitle> <address> Research Triangle Park, NC (Oct.-Nov. </address> <year> 1989), </year> <pages> 468-473. </pages>
Reference-contexts: This n can be supplied by a (trusted) outside source, constructed by a special purpose physical device, or (perhaps more likely) chosen by joint evaluation of a circuit for computing such an n which is supplied with random inputs by the participants (see [GMW86], [GMW87], [BGW88], [CCD88], [RaBe89], [Beav89], <ref> [BeGo89] </ref>, [GoLe90], [MiRa90], and [Beav91] for work on secure multiparty computation). Since this n need be selected only once and may thereafter be used continuously, any extraordinary effort which may be required to construct such an n may be warranted.
Reference: [BeMa91] <author> Benaloh, J. and de Mare, M. </author> <title> "Efficient Broadcast Time-Stamping." </title> <institution> Clark-son University Department of Mathematics and Computer Science TR 91-1. </institution> <month> (Aug. </month> <year> 1991). </year>
Reference: [BenO83] <author> Ben-Or, M. </author> <title> "Another Advantage of Free Choice: Completely Asynchronous Agreement Protocols." </title> <booktitle> Proc. 2 nd ACM Symp. on Principles of Distributed Computing, </booktitle> <address> Montreal, PQ (Aug. </address> <year> 1983), </year> <pages> 27-30. </pages>
Reference-contexts: Benaloh and de Mare ([BeMa91]) describe another method using a somewhat different model. They break time into rounds and assume the existence of broadcast channels (which of course can be simulated with a variety of consensus protocols | see, for example, [CGMA85], [Fisc83], <ref> [BenO83] </ref>, and [Rabi83]). Benaloh and de Mare describe how time stamping can be accomplished without assumptions of cooperation.
Reference: [BGW88] <author> Ben-Or, M., Goldwasser, S., and Wigderson, A. </author> <title> "Completeness Theorems for Non-Cryptographic Fault-Tolerant Distributed Computation." </title> <booktitle> Proc. 20 st ACM Symp. on Theory of Computation, </booktitle> <address> Chicago, IL (May 1988), </address> <note> 1-10. </note> <author> [Brui51] de Bruijn, N. </author> <title> "The Asymptotic Behaviour of a Function Occurring in the Theory of Primes." </title> <journal> Journal of the Indian Mathematical Society 15. </journal> <year> (1951), </year> <pages> 25-32. </pages>
Reference-contexts: This n can be supplied by a (trusted) outside source, constructed by a special purpose physical device, or (perhaps more likely) chosen by joint evaluation of a circuit for computing such an n which is supplied with random inputs by the participants (see [GMW86], [GMW87], <ref> [BGW88] </ref>, [CCD88], [RaBe89], [Beav89], [BeGo89], [GoLe90], [MiRa90], and [Beav91] for work on secure multiparty computation). Since this n need be selected only once and may thereafter be used continuously, any extraordinary effort which may be required to construct such an n may be warranted.
Reference: [CCD88] <author> Chaum, D., Crepeau, C., and Damg-ard, I. </author> <title> "Multiparty Unconditionally Secure Protocols." </title> <booktitle> Proc. 20 st ACM Symp. on Theory of Computation, </booktitle> <address> Chicago, IL (May 1988), </address> <pages> 11-19. </pages>
Reference-contexts: This n can be supplied by a (trusted) outside source, constructed by a special purpose physical device, or (perhaps more likely) chosen by joint evaluation of a circuit for computing such an n which is supplied with random inputs by the participants (see [GMW86], [GMW87], [BGW88], <ref> [CCD88] </ref>, [RaBe89], [Beav89], [BeGo89], [GoLe90], [MiRa90], and [Beav91] for work on secure multiparty computation). Since this n need be selected only once and may thereafter be used continuously, any extraordinary effort which may be required to construct such an n may be warranted.
Reference: [CGMA85] <author> Chor, B., Goldwasser, S., Micali, S., and Awerbuch, B. </author> <title> "Verifiable Secret Sharing and Achieving Simultaneity in the Presence of Faults." </title> <booktitle> Proc. 26 th IEEE Symp. on Foundations of Computer Science, </booktitle> <address> Portland, OR (Oct. </address> <year> 1985), </year> <pages> 383-395. </pages>
Reference-contexts: Benaloh and de Mare ([BeMa91]) describe another method using a somewhat different model. They break time into rounds and assume the existence of broadcast channels (which of course can be simulated with a variety of consensus protocols | see, for example, <ref> [CGMA85] </ref>, [Fisc83], [BenO83], and [Rabi83]). Benaloh and de Mare describe how time stamping can be accomplished without assumptions of cooperation.
Reference: [Denn82] <author> Denning, D. </author> <title> Cryptography and Data Security, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts (1982). </address> <month> 10 </month>
Reference: [Fisc83] <author> Fischer, M. </author> <title> "The Consensus Problem in Unreliable Distributed Systems", </title> <booktitle> Proc. 1983 International FCT-Conference, </booktitle> <address> Borgholm, Sweeden (Aug. </address> <year> 1983), </year> <pages> 127-140. </pages> <note> Published as Foundations of Computation Theory, </note> <editor> ed. by M. </editor> <booktitle> Karpin-ski in Lecture Notes in Computer Science, </booktitle> <volume> vol. 158, </volume> <editor> ed. by G. Goos and J. Hart-manis. </editor> <publisher> Springer-Verlag, </publisher> <address> New York (1983). </address>
Reference-contexts: Benaloh and de Mare ([BeMa91]) describe another method using a somewhat different model. They break time into rounds and assume the existence of broadcast channels (which of course can be simulated with a variety of consensus protocols | see, for example, [CGMA85], <ref> [Fisc83] </ref>, [BenO83], and [Rabi83]). Benaloh and de Mare describe how time stamping can be accomplished without assumptions of cooperation.
Reference: [GMW86] <author> Goldreich, O., Micali, S., and Wigderson, </author> <title> A "Proofs that Yield Nothing but Their Validity and a Methodology of Cryptographic Protocol Design." </title> <booktitle> Proc. 27 th IEEE Symp. on Foundations of Computer Science, Toronto, ON (Oct. </booktitle> <year> 1986), </year> <pages> 174-187. </pages>
Reference-contexts: This n can be supplied by a (trusted) outside source, constructed by a special purpose physical device, or (perhaps more likely) chosen by joint evaluation of a circuit for computing such an n which is supplied with random inputs by the participants (see <ref> [GMW86] </ref>, [GMW87], [BGW88], [CCD88], [RaBe89], [Beav89], [BeGo89], [GoLe90], [MiRa90], and [Beav91] for work on secure multiparty computation). Since this n need be selected only once and may thereafter be used continuously, any extraordinary effort which may be required to construct such an n may be warranted.
Reference: [GMW87] <author> Goldreich, O., Micali, S., and Wigderson, </author> <title> A "How to Play Any Mental Game or A Completeness Theorem for Protocols with Honest Majority." </title> <booktitle> Proc. 19 st ACM Symp. on Theory of Computation, </booktitle> <address> New York, NY (May 1987), </address> <pages> 218-229. </pages>
Reference-contexts: This n can be supplied by a (trusted) outside source, constructed by a special purpose physical device, or (perhaps more likely) chosen by joint evaluation of a circuit for computing such an n which is supplied with random inputs by the participants (see [GMW86], <ref> [GMW87] </ref>, [BGW88], [CCD88], [RaBe89], [Beav89], [BeGo89], [GoLe90], [MiRa90], and [Beav91] for work on secure multiparty computation). Since this n need be selected only once and may thereafter be used continuously, any extraordinary effort which may be required to construct such an n may be warranted.
Reference: [GoLe90] <author> Goldwasser, S. and Levin, L. </author> <title> "Fair Computation of General Functions in Presence of Immoral Majority." </title> <booktitle> Advances in Cryptology | Crypto '90, </booktitle> <editor> ed. by A. Menezes and S. </editor> <booktitle> Vanstone in Lecture Notes in Computer Science, </booktitle> <volume> vol. 537, </volume> <editor> ed. by G. Goos and J. Hartmanis. </editor> <publisher> Springer-Verlag, </publisher> <address> New York (1991), </address> <pages> 77-93. </pages>
Reference-contexts: This n can be supplied by a (trusted) outside source, constructed by a special purpose physical device, or (perhaps more likely) chosen by joint evaluation of a circuit for computing such an n which is supplied with random inputs by the participants (see [GMW86], [GMW87], [BGW88], [CCD88], [RaBe89], [Beav89], [BeGo89], <ref> [GoLe90] </ref>, [MiRa90], and [Beav91] for work on secure multiparty computation). Since this n need be selected only once and may thereafter be used continuously, any extraordinary effort which may be required to construct such an n may be warranted.
Reference: [HaSt90] <author> Haber, S. and Stornetta, W. </author> <title> "How to Time-Stamp a Digital Document." </title> <booktitle> Jounal of Cryptology 3. </booktitle> <year> (1991), </year> <pages> 99-112. </pages>
Reference: [KnTr76] <author> Knuth, D. and Trabb Pardo, L. </author> <title> "Analysis of a Simple Factorization Algorithm." </title> <booktitle> Theoretical Computer Science 3. </booktitle> <year> (1976), </year> <pages> 321-348. </pages>
Reference-contexts: It can, however, be shown that the number of known roots which would have to be provided in order to have a non-negligible probability of their product being a multiple of a random number selected later would be prohibitively large (see <ref> [KnTr76] </ref>). Asymptotically, for any polynomial P , it is the case P (jnj) items can be combined into a single accumulated hash value with extremely high security.
Reference: [ILL89] <author> Impagliazzo, R., Levin, L., and Luby, M. </author> <title> "Pseudorandom Generation from One-Way Functions." </title> <booktitle> Proc. 21 st ACM Symp. on Theory of Computation, </booktitle> <address> Seat-tle, WA (May 1989), </address> <pages> 12-24. </pages> <editor> [LuWa69] van de Lune, J. and Wattel, E. </editor> <title> "On the Numerical Solution of a Differential-Difference Equation Arising in Analytic Number Theory." </title> <booktitle> Mathematics of Computation 23. </booktitle> <year> (1969), </year> <pages> 417-421. </pages>
Reference: [Merk80] <author> Merkle, R. </author> <title> "Protocols for Public Key Cryptosystems." </title> <booktitle> Proc. 1980 Symp. on Security and Privacy, IEEE Computer Society (April 1980), </booktitle> <pages> 122-133. </pages>
Reference-contexts: Thus, any member that wishes to can identify itself to a non-member without revealing the entire membership list. In <ref> [Merk80] </ref>, Merkle describes a similar application in which a directory of public keys is to be jointly maintained.
Reference: [MiRa90] <author> Micali, T. and Rabin, T. </author> <title> "Collective Coin Tossing Without Assumptions nor Broadcasting." </title> <booktitle> Advances in Cryptology | Crypto '90, </booktitle> <editor> ed. by A. Menezes and S. </editor> <booktitle> Vanstone in Lecture Notes in Computer Science, </booktitle> <volume> vol. 537, </volume> <editor> ed. by G. Goos and J. Hartmanis. </editor> <publisher> Springer-Verlag, </publisher> <address> New York (1991), </address> <pages> 253-266. </pages>
Reference-contexts: n can be supplied by a (trusted) outside source, constructed by a special purpose physical device, or (perhaps more likely) chosen by joint evaluation of a circuit for computing such an n which is supplied with random inputs by the participants (see [GMW86], [GMW87], [BGW88], [CCD88], [RaBe89], [Beav89], [BeGo89], [GoLe90], <ref> [MiRa90] </ref>, and [Beav91] for work on secure multiparty computation). Since this n need be selected only once and may thereafter be used continuously, any extraordinary effort which may be required to construct such an n may be warranted. Once n has been selected, a starting value x is agreed upon.
Reference: [Mitc68] <author> Mitchell, W. </author> <title> "An Evaluation of Golomb's Constant." </title> <booktitle> Mathematics of Computation 22. </booktitle> <year> (1968), </year> <pages> 411-415. 11 </pages>
Reference-contexts: Numerically, a 220 digit n would comfortably allow about 20 million items to be hashed with probability of forgery well below 10 30 . (See [Brui51], <ref> [Mitc68] </ref>, and [LuWa69].) A full asymptotic and numerical analysis will be included in the full version of this paper. 5 Applications Two applications are described in this section. 5.1 Time Stamping Haber and Stornetta ([HaSt90]) describe how documents can be time stamped by cryptographically chaining documents.
Reference: [NaYu89] <author> Naor, M. and Yung, M. </author> <title> "Universal One-Way Hash Functions and their Cryp--tographic Applications." </title> <booktitle> Proc. 21 st ACM Symp. on Theory of Computation, </booktitle> <address> Seattle, WA (May 1989), </address> <pages> 33-43. </pages>
Reference: [RaBe89] <author> Rabin, T. and Ben-Or, M. </author> <title> "Verifiable Secret Sharing and Multiparty Protocols with Honest Majority." </title> <booktitle> Proc. 21 st ACM Symp. on Theory of Computation, </booktitle> <address> Seattle, WA (May 1989), </address> <pages> 73-85. </pages>
Reference-contexts: This n can be supplied by a (trusted) outside source, constructed by a special purpose physical device, or (perhaps more likely) chosen by joint evaluation of a circuit for computing such an n which is supplied with random inputs by the participants (see [GMW86], [GMW87], [BGW88], [CCD88], <ref> [RaBe89] </ref>, [Beav89], [BeGo89], [GoLe90], [MiRa90], and [Beav91] for work on secure multiparty computation). Since this n need be selected only once and may thereafter be used continuously, any extraordinary effort which may be required to construct such an n may be warranted.
Reference: [Rabi83] <author> Rabin, M. </author> <title> "Randomized Byzantine Generals." </title> <booktitle> Proc. 24 th IEEE Symp. on Foundations of Computer Science, </booktitle> <address> Tucson, AZ (Nov. </address> <year> 1983), </year> <pages> 403-409. </pages>
Reference-contexts: Benaloh and de Mare ([BeMa91]) describe another method using a somewhat different model. They break time into rounds and assume the existence of broadcast channels (which of course can be simulated with a variety of consensus protocols | see, for example, [CGMA85], [Fisc83], [BenO83], and <ref> [Rabi83] </ref>). Benaloh and de Mare describe how time stamping can be accomplished without assumptions of cooperation.
Reference: [Romp90] <author> Rompel, J. </author> <title> "One-Way Functions are Necessary and Sufficient for Secure Signatures." </title> <booktitle> Proc. 22 nd ACM Symp. on Theory of Computation, </booktitle> <address> Baltimore, MD (May 1990). </address>
Reference: [RSA78] <author> Rivest, R., Shamir, A., and Adleman, L. </author> <title> "A Method for Obtaining Digital Signatures and Public-key Cryptosystems." </title> <journal> Comm. ACM 21, </journal> <month> 2 (Feb. </month> <year> 1978), </year> <pages> 120-126. </pages>
Reference: [Sham81] <author> Shamir, A. </author> <title> "On the Generation of Cryptographically Strong Pseudo-Random Sequences." </title> <booktitle> Proc. ICALP, </booktitle> <year> (1981). </year> <month> 12 </month>
Reference-contexts: The commonly used RSA assumption ([RSA78]) is that for "appropriately chosen" n, computing x from e n (x; y), y, and, n cannot be done in time polynomial in n for all but an exponentially small number of cases. In <ref> [Sham81] </ref>, Shamir gives a proof which, when applied in this context, shows that for these appropriately chosen n, if root finding modulo n is hard, then the family e n constitutes a family of one-way hash functions.
References-found: 25

