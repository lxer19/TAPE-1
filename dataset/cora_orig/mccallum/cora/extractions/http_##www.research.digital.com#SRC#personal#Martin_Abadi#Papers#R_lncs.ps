URL: http://www.research.digital.com/SRC/personal/Martin_Abadi/Papers/R_lncs.ps
Refering-URL: http://www.research.digital.com/SRC/personal/Martin_Abadi/allpapers.html
Root-URL: http://www.research.digital.com
Phone: 2  3  
Title: A Model for Formal Parametric Polymorphism: A PER Interpretation for System R  
Author: Roberto Bellucci ; Martin Abadi Pierre-Louis Curien 
Address: 45, rue d'Ulm, 75005 Paris, France  130 Lytton Avenue, Palo Alto, California 94301, USA  Via del Capitano 15, 53100 Siena, Italy  
Affiliation: 1 LIENS, CNRS Departement de Mathematiques et Informatique de l'Ecole Normale Superieure  Digital Equipment Corporation, Systems Research Center,  Dipartimento di Matematica,  
Abstract: System R is an extension of system F that formalizes Reynolds' notion of relational parametricity. In system R, considerably more -terms can be proved equal than in system F : for example, the encoded weak products of F are strong products in R. Also, many "theorems for free" a la Wadler can be proved formally in R. In this paper we describe a semantics for system R. As a first step, we give a precise and general reconstruction of the per model of system F of Bainbridge et al., presenting it as a categorical model in the sense of Seely. Then we interpret system R in this model. 
Abstract-found: 1
Intro-found: 1
Reference: [ACC93] <author> M. Abadi, L. Cardelli, and P.-L. Curien. </author> <title> Formal parametric polymorphism. In A Collection of Contributions in Honour of Corrado Bohm on the Occasion of his 70th Birthday, </title> <booktitle> volume 121 of Theoretical Computer Science, </booktitle> <pages> pages 9-58, </pages> <year> 1993. </year> <note> An early version appeared in the Proceedings of the 20th Ann. ACM Symp. on Principles of Programming Languages. </note>
Reference-contexts: System R is an extension of system F that formalizes a parametricity requirement. The intent is to capture Reynolds' notion of relational parametricity in a formal system without reference to a particular model. Other formal systems with similar features exist, serving related purposes; see <ref> [ACC93] </ref> for a comparison. In a preliminary version of system R, quantification over pers and quantification over relations were equated. This equation was rather attractive but too daring; Hasegawa ingeniously exploited it to derive an inconsistency [ACC93]. <p> Other formal systems with similar features exist, serving related purposes; see <ref> [ACC93] </ref> for a comparison. In a preliminary version of system R, quantification over pers and quantification over relations were equated. This equation was rather attractive but too daring; Hasegawa ingeniously exploited it to derive an inconsistency [ACC93]. The inconsistency stimulated our interest in semantics, and particularly in the problem of harmonizing the use of pers and the use of general relations. Both pers and relations have a place in the semantics and in the logic of parametricity. Pers are important as the denotations of types. <p> Section 4 defines two parametric semantics of system F ; then section 5 extends one of these semantics to system R. 2 System R This section is an introduction to system R, adapted from <ref> [ACC93] </ref>. System R is a formal system with judgements and rules in the style of those of F . <p> In particular: if E ` F M = N : oe then E ` R M : oe N : oe In the second sequent we use E as an abbreviation of an R environment; see <ref> [ACC93] </ref>. <p> There are many more substantial examples: for example, encoded products, sums, algebras, quantifications are strong. Various metatheorems can also be obtained, such as syntactic versions of Reynolds' abstraction theorem and identity extension lemma. The full sets of rules for systems F and R can be found in <ref> [ACC93] </ref>. <p> In the judgement E F ` F M : oe 1 ! oe 2 , E F stands for the F flattening of E, obtained by retaining the type variables and the term variables of E, and removing the relations. In <ref> [ACC93] </ref> appears a lemma, called (Flattened F derivations from R derivations), that asserts that if E ` R M : oe 1 ! oe 2 is provable in R, then E F ` F M : oe 1 ! oe 2 is provable in F .
Reference: [AM92] <author> A. Asperti and S. Martini. </author> <title> Categorical models of polymorphism. </title> <journal> Information and Computation, </journal> <volume> 99 </volume> <pages> 1-79, </pages> <year> 1992. </year>
Reference-contexts: Using the standard machinery of categorical semantics over an indexed category it is straightforward to define the interpretation of the judgements of system F . For more details see <ref> [AM92] </ref>. Given a type judgement E ` F oe with p type variables declared in E, the semantics of oe in E, denoted by JoeK p , is an object of the fiber G (p), that is, an arrow Obj (SAT) p ! Obj (SAT).
Reference: [Bar84] <author> H.P. Barendregt. </author> <title> The Lambda Calculus. Its Syntax and Semantics. </title> <booktitle> Number 103 in Studies in Logic and the Foundations of Mathematics. </booktitle> <publisher> North-Holland, </publisher> <year> 1984. </year> <note> Revised edition. </note>
Reference-contexts: For more details, see for example <ref> [Bar84] </ref>. First we recall the definition of interpretation (over a combinatory algebra) for the untyped -calculus. Then we consider the category of partial equivalence relations (pers) and some related categorical constructions. Finally, we introduce the category of saturated relations between pers, extending the categorical constructions previously defined for pers.
Reference: [BFSS90] <author> E.S. Bainbridge, P. Freyd, A. Scedrov, and P.J. Scott. </author> <title> Functorial polymorphism. </title> <journal> Theoretical Computer Science, </journal> <volume> 70 </volume> <pages> 35-64, </pages> <year> 1990. </year>
Reference-contexts: All of the definable functions of system F are parametric, but system F admits models with non-definable, non-parametric elements. Since Reynolds' work, there have been many studies of parametricity. In particular, Bain-bridge et al. introduced a view of parametricity based on dinaturality <ref> [BFSS90] </ref>. They also developed Reynolds' ideas in a variant of the partial-equivalence-relation (per) model. It seems still unknown whether the standard per model is parametric without modification. System R is an extension of system F that formalizes a parametricity requirement. <p> In the first part of this section, we define the interpretation concretely, by directly interpreting the judgements of the syntax of F in SAT. This is a reconstruction of the model sketched in <ref> [BFSS90] </ref>. The second part of the section gives a more general categorical description of the SAT model. <p> Part (1) amounts to what is known in the literature as the Identity Extension Lemma. It is stated in [Rey83] for an hypothetical set-theoretic semantics, and is proved in <ref> [BFSS90] </ref> for the SAT model. We close this section with a standard substitution lemma: Lemma 10 (Substitution Lemma for Types). For all type expressions oe and o and all relation assignments ": Joe [o =X]K " = JoeK "[JoK " =X] Typings. <p> In hindsight, our results may not seem surprising. However, the definitions include a number of tricky, "obvious" details. Details of this sort were left implicit in the work of Bainbridge et al. <ref> [BFSS90] </ref>, and misunderstood in the first, inconsistent version of R. The concrete interpretation of R carried out here establishes the soundness of R. It would be interesting to have an abstract characterization of the notion of model for R, and then to recast our proof in more abstract terms. <p> Several other formal systems come to mind. Following a suggestion of [PA93], we have started to consider a formal system with relations of arities other than 2. Reynolds discussed relations of all arities in his original work, but binary relations have been preferred more recently (e.g., in <ref> [BFSS90] </ref>), in part arbitrarily. It seems interesting to extend the model presented here to support relations of all arities. Acknowledgements Ryu Hasegawa and Eugenio Moggi both made useful suggestions.
Reference: [Gir72] <author> J.-Y. Girard. </author> <title> Interpretation fonctionnelle et elimination des coupures dans l'arithmetique d'ordre superieur. </title> <institution> These de Doctorat d'Etat, Universite Paris VII, </institution> <year> 1972. </year>
Reference-contexts: In contrast, a function like print examines and branches on the types of its arguments, and hence Strachey deemed its polymorphism ad hoc. Reynolds formalized Strachey's notion of parametricity [Rey83], in his attempt to define a set-theoretic model for Girard's system F <ref> [Gir72] </ref>. According to Reynolds' semantic definition, a polymorphic function is parametric if its instances at related types are related. For example, let us take a polymorphic function f of type 8 (X):X ! X (the type of the identity function).
Reference: [Law69] <editor> F.W. Lawvere. </editor> <booktitle> Adjointness in foundations. </booktitle> <publisher> Dialectica, </publisher> <address> 23(3-4):281-296, </address> <year> 1969. </year>
Reference-contexts: This will be possible by moving from an untyped semantics for typed terms (that is, a semantics based on erasures) to a typed semantics. The typed semantics is presented as a categorical model Categorical models of system F are based on the quantifiers-as-adjoints paradigm, which goes back to Lawvere <ref> [Law69] </ref>; Seely has defined them under the name of PL-categories [See87]. PL-categories. PL-categories are an algebraic generalization of the models of simply typed -calculus in a bi-dimensional universe of cartesian closed categories indexed over a global category.
Reference: [Mit90] <author> J.C. Mitchell. </author> <title> A type-inference approach to reduction properties and semantics of polymorphic expressions. </title> <editor> In G. Huet, editor, </editor> <booktitle> Logical Foundations of Functional Programming, </booktitle> <address> Reading, MA, USA, </address> <pages> pages 195-212. </pages> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: The erase function associates to every typed term M the untyped term erase (M ) obtained by erasing all type decorations present in M . What follows is a version in our relational setting of a well-known semantical property of erasures of typed terms in PER models (see <ref> [Mit90] </ref>). It is usually stated for PER models over a -model D, but the proof actually uses only the total combinatory algebra structure: the totality is used to make sure that the interpretation of untyped terms in D is always defined. Theorem 13.
Reference: [PA93] <author> G. Plotkin and M. Abadi. </author> <title> A logic for parametric polymorphism. </title> <booktitle> In Proceedings of the International Conference on Typed Lambda Calculi and Applications, </booktitle> <month> March </month> <year> 1993, </year> <title> Utrecht, NL, </title> <booktitle> number 664 in Lecture Notes in Computer Science, </booktitle> <pages> pages 361-375. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: The interpretation has been helpful both in understanding R and in thinking about other formal systems for reasoning about polymorphic programs. Several other formal systems come to mind. Following a suggestion of <ref> [PA93] </ref>, we have started to consider a formal system with relations of arities other than 2. Reynolds discussed relations of all arities in his original work, but binary relations have been preferred more recently (e.g., in [BFSS90]), in part arbitrarily.
Reference: [Rey83] <author> J.C. Reynolds. </author> <title> Types, abstraction and parametric polymorphism. In R.E.A. </title> <editor> Mason, editor, </editor> <booktitle> INFORMATION PROCESSING '83, </booktitle> <pages> pages 513-523. </pages> <publisher> Elsevier Science Publishers B.V.North-Holland, </publisher> <year> 1983. </year>
Reference-contexts: Strachey described parametric polymorphism as the pure polymorphism of functions like append, which works on lists of any type uniformly. In contrast, a function like print examines and branches on the types of its arguments, and hence Strachey deemed its polymorphism ad hoc. Reynolds formalized Strachey's notion of parametricity <ref> [Rey83] </ref>, in his attempt to define a set-theoretic model for Girard's system F [Gir72]. According to Reynolds' semantic definition, a polymorphic function is parametric if its instances at related types are related. <p> Part (1) amounts to what is known in the literature as the Identity Extension Lemma. It is stated in <ref> [Rey83] </ref> for an hypothetical set-theoretic semantics, and is proved in [BFSS90] for the SAT model. We close this section with a standard substitution lemma: Lemma 10 (Substitution Lemma for Types).
Reference: [See87] <author> R.A.G. Seely. </author> <title> Categorical semantics for higher order polymorphic lambda calculus. </title> <journal> The Journal of Symbolic Logic, </journal> <volume> 52(4) </volume> <pages> 969-989, </pages> <month> December </month> <year> 1987. </year>
Reference-contexts: Along the way, we give a precise and general reconstruction of this per model. We present it as a categorical model in the sense of Seely <ref> [See87] </ref>. The next two sections introduce the syntax of system R and the necessary categories of pers and relations. <p> The typed semantics is presented as a categorical model Categorical models of system F are based on the quantifiers-as-adjoints paradigm, which goes back to Lawvere [Law69]; Seely has defined them under the name of PL-categories <ref> [See87] </ref>. PL-categories. PL-categories are an algebraic generalization of the models of simply typed -calculus in a bi-dimensional universe of cartesian closed categories indexed over a global category. PL-categories are sometimes referred to as external models of F in contrast with the internal ones which use the internal category theory.
Reference: [Str67] <author> C. </author> <title> Strachey. </title> <booktitle> Fundamental concepts in programming languages. Lecture Notes, International Summer School in Programming Languages, </booktitle> <address> Copenhagen, Denmark, Unpublished, </address> <month> August </month> <year> 1967. </year>
Reference-contexts: Then we interpret system R in this model. 1 From Models of F to Models of R The principle of parametricity has gone through many avatars. First Strachey distinguished parametric polymorphism and ad hoc polymorphism <ref> [Str67] </ref>. Strachey described parametric polymorphism as the pure polymorphism of functions like append, which works on lists of any type uniformly. In contrast, a function like print examines and branches on the types of its arguments, and hence Strachey deemed its polymorphism ad hoc.
Reference: [Wad89] <editor> P. Wadler. </editor> <booktitle> Theorems for free! In Proceedings of the Fourth International Conference on Functional Programming Languages and Computer Architecture, </booktitle> <pages> pages 347-359. </pages> <publisher> ACM press, </publisher> <year> 1989. </year> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: Functional relations are essential to the power of R. They are often useful for obtaining "free theorems" as in Wadler's work <ref> [Wad89] </ref>. They have no analogue in F . In R, free theorems can be stated and proved in a logical framework and without any reference to particular classes of models.
References-found: 12

