URL: http://www.cs.cmu.edu/afs/cs/project/jair/pub/volume7/frank97a.ps.Z
Refering-URL: http://www.cs.washington.edu/research/jair/abstracts/frank97a.html
Root-URL: 
Email: frank@tiziano.arc.nasa.gov  cheesem@ptolemy.arc.nasa.gov  stutz@ptolemy.arc.nasa.gov  
Title: When Gravity Fails: Local Search Topology  
Author: Jeremy Frank Peter Cheeseman John Stutz 
Address: Mail Stop N269-1 Moffett Field, CA 94035-1000  Mail Stop N269-1 Moffett Field, CA 94035-1000  Mail Stop N269-1 Moffett Field, CA 94035-1000  
Affiliation: Caelum Research Corp. NASA Ames Research Center  RIACS NASA Ames Research Center  NASA Ames Research Center  
Note: Journal of Artificial Intelligence Research 7 (1997) 249-281 Submitted 7/1997; published 12/1997  
Abstract: Local search algorithms for combinatorial search problems frequently encounter a sequence of states in which it is impossible to improve the value of the objective function; moves through these regions, called plateau moves, dominate the time spent in local search. We analyze and characterize plateaus for three different classes of randomly generated Boolean Satisfiability problems. We identify several interesting features of plateaus that impact the performance of local search algorithms. We show that local minima tend to be small but occasionally may be very large. We also show that local minima can be escaped without unsatisfying a large number of clauses, but that systematically searching for an escape route may be computationally expensive if the local minimum is large. We show that plateaus with exits, called benches, tend to be much larger than minima, and that some benches have very few exit states which local search can use to escape. We show that the solutions (i.e., global minima) of randomly generated problem instances form clusters, which behave similarly to local minima. We revisit several enhancements of local search algorithms and explain their performance in light of our results. Finally we discuss strategies for creating the next generation of local search algorithms.
Abstract-found: 1
Intro-found: 1
Reference: <author> Cheeseman, P., Kanefsky, B., & Taylor, W. </author> <year> (1991). </year> <title> Where the really hard problems are. </title> <booktitle> 12th International Joint Conference on Artificial Intelligence, </booktitle> <pages> 163-169. </pages>
Reference: <author> Clark, D., Frank, J., Gent, I., MacIntyre, E., Tomov, N., & Walsh, T. </author> <year> (1996). </year> <title> Local search and the number of solutions. </title> <booktitle> Proceedings of the 2d International Conference on Principles and Practices of Constraint Programming, </booktitle> <pages> 119-133. </pages>
Reference: <author> Crawford, J., & Auton, L. </author> <year> (1993). </year> <title> Experimental results on the crossover point in satisfiabil-ity problems. </title> <booktitle> Proceedings of the 11th National Conference on Artificial Intelligence, </booktitle> <pages> 21-27. </pages>
Reference: <author> Gent, I., & Walsh, T. </author> <year> (1993a). </year> <title> An empirical analysis of search in GSAT. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 1, </volume> <pages> 47-59. </pages>
Reference-contexts: GSAT typically encounters a sequence of states where the best move available at each state leaves the number of unsatisfied clauses unchanged. These moves are referred to as plateau moves or sideways moves, studied in <ref> (Gent & Walsh, 1993a) </ref> and (Hampson & Kibler, 1995). Plateau moves dominate the time GSAT spends doing search (Gent & Walsh, 1993a). <p> These moves are referred to as plateau moves or sideways moves, studied in <ref> (Gent & Walsh, 1993a) </ref> and (Hampson & Kibler, 1995). Plateau moves dominate the time GSAT spends doing search (Gent & Walsh, 1993a). It is believed that all combinatorial search problems with discrete objective functions have plateaus that cause plateau moves during local search, but it is unlikely that search problems with real-valued objective functions have plateaus. <p> Gent and Walsh also report that the number of flips GSAT spends on benches before escaping is highly variable during the second half of search, when the number of satisfied clauses is very high <ref> (Gent & Walsh, 1993a) </ref>. This is consistent with our finding that benches can be either very easy or very hard to escape. 5.2 Revisiting Local Search Algorithms When GSAT encounters a plateau it randomly searches the plateau.
Reference: <author> Gent, I., & Walsh, T. </author> <year> (1993b). </year> <title> Towards an understanding of hill-climbing procedures for SAT. </title> <booktitle> Proceedings of the 11th National Conference on Artificial Intelligence, </booktitle> <pages> 28-33. </pages>
Reference-contexts: The results on plateau characteristics allowed us to reinterpret the success of many modifications to local search, including history lists <ref> (Gent & Walsh, 1993b) </ref>, random walk (Kautz & Selman, 1996) and tabu search (Glover, 1989). The paper is organized as follows: In Section 2 we present some definitions used throughout the rest of the paper. <p> However, either GSAT will return immediately to this minimum or to another 272 When Gravity Fails: Local Search Topology adjacent to the neighbor; as we found so few minima of size 1 and since GSAT doesn't exhibit such cycling behavior this is a minor consideration. HSAT <ref> (Gent & Walsh, 1993b) </ref> augments GSAT with a heuristic designed to break ties. If HSAT has several flips that are equally good in terms of the number of satisfied clauses, then it flips the variable flipped longest ago.
Reference: <author> Gent, I., & Walsh, T. </author> <year> (1995). </year> <title> Unsatisfied variables in local search. </title> <editor> In Hallam, J. (Ed.), </editor> <title> Hybrid Problems, </title> <booktitle> Hybrid Solutions, </booktitle> <pages> pp. 73-85. </pages> <publisher> IOS Press. </publisher>
Reference-contexts: This can result in tabu search missing exits from benches; whether this results in poor performance is unknown. GSAT with random walk <ref> (Gent & Walsh, 1995) </ref> flips a randomly selected variable with probability p and uses the standard criteria to select flips with probability 1p. <p> Also, if p is large, then two random walk steps can follow each other in succession, improving the chances of escaping local minima. The fact that this variant results in substantial improvements even when used with other modifications to GSAT such as tie-breaking heuristics <ref> (Gent & Walsh, 1995) </ref> complements our discovery in Section 3 that local minima tend to be shallow; random walk may effectively promote escape from these local minima into other parts of the search space. WalkSAT (Kautz & Selman, 1996) does not examine all possible neighbors before moving. <p> Standard tactics include continuing search as normal, invoking a special detection procedure, randomly flipping one variable as in random walk, randomly flipping a small number of variables as in Jump-SAT <ref> (Gent & Walsh, 1995) </ref> or randomly generating new values for all variables as in randomly restarting. Small minima can be detected easily using an algorithm such as Breadth-First Search, as was done by Hampson and Kibler (1995).
Reference: <author> Glover, F. </author> <year> (1989). </year> <title> Tabu search part I. </title> <journal> ORSA Journal on Computing, </journal> <volume> 1 (3), </volume> <pages> 190-206. </pages>
Reference-contexts: The results on plateau characteristics allowed us to reinterpret the success of many modifications to local search, including history lists (Gent & Walsh, 1993b), random walk (Kautz & Selman, 1996) and tabu search <ref> (Glover, 1989) </ref>. The paper is organized as follows: In Section 2 we present some definitions used throughout the rest of the paper. Next in Sections 3 and 4 we present an empirical analysis of properties of plateaus for several problem spaces.
Reference: <author> Hampson, D., & Kibler, S. </author> <year> (1995). </year> <title> Large plateaus and plateau search in boolean satisfia-bility problems: When to give up searching and start again. </title> <editor> In Johnson, D., & Trick, M. (Eds.), </editor> <booktitle> DIMACS Series in Discrete Mathematics and Theoretical Computer Science: Cliques, Colors and Satisfiability, </booktitle> <volume> Vol. 26, </volume> <pages> pp. 437-456. </pages> <publisher> American Mathematical Society. </publisher>
Reference-contexts: GSAT typically encounters a sequence of states where the best move available at each state leaves the number of unsatisfied clauses unchanged. These moves are referred to as plateau moves or sideways moves, studied in (Gent & Walsh, 1993a) and <ref> (Hampson & Kibler, 1995) </ref>. Plateau moves dominate the time GSAT spends doing search (Gent & Walsh, 1993a).
Reference: <author> Kask, K., & Dechter, R. </author> <year> (1995). </year> <title> GSAT and local consistency. </title> <booktitle> Proceedings of the 14th International Conference on Artificial Intelligence, </booktitle> <pages> 616-622. </pages>
Reference: <author> Kautz, H., & Selman, B. </author> <year> (1996). </year> <title> Pushing the envelope: Planning, propositional logic and stochastic search. </title> <booktitle> Proceedings of the 13th National Conference on Artificial Intelligence, </booktitle> <pages> 1194-1201. </pages>
Reference-contexts: The results on plateau characteristics allowed us to reinterpret the success of many modifications to local search, including history lists (Gent & Walsh, 1993b), random walk <ref> (Kautz & Selman, 1996) </ref> and tabu search (Glover, 1989). The paper is organized as follows: In Section 2 we present some definitions used throughout the rest of the paper. Next in Sections 3 and 4 we present an empirical analysis of properties of plateaus for several problem spaces. <p> WalkSAT <ref> (Kautz & Selman, 1996) </ref> does not examine all possible neighbors before moving. Instead, WalkSAT randomly selects an unsatisfied clause and only investigates states reachable by flipping variables in the selected clause.
Reference: <author> Kirkpatrick, S., Gelatt, C., & Vecchi, M. </author> <year> (1983). </year> <title> Optimization by simulated annealing. </title> <journal> Science, </journal> <volume> 220 (4598), </volume> <pages> 671-680. </pages>
Reference-contexts: WalkSAT can escape local minima by simply not choosing a neighborhood containing moves back onto the minima, or it may take a series of worse moves to escape a bench with many exits simply because its neighborhood did not contain them. Simulated annealing <ref> (Kirkpatrick, Gelatt, & Vecchi, 1983) </ref> only examines a single neighbor of the current assignment.
Reference: <author> Mazure, B., Sais, L., & Gregoire, E. </author> <year> (1997). </year> <title> Tabu search for GSAT. </title> <booktitle> Proceedings of the 14th National Conference on Artificial Intelligence, </booktitle> <month> 281-286. </month> <title> 280 When Gravity Fails: Local Search Topology Minton, </title> <editor> S. </editor> <year> (1996). </year> <title> Automatically configuring constraint satisfaction programs: A case study. </title> <booktitle> Constraints, </booktitle> <volume> 1 (2), </volume> <pages> 7-43. </pages>
Reference: <author> Selman, B., & Kautz, H. </author> <year> (1993). </year> <title> Domain independent versions of GSAT: Solving large structured satisfiability problems. </title> <booktitle> 13th International Joint Conference on Artificial Intelligence, </booktitle> <pages> 290-295. </pages>
Reference-contexts: Finally, our analysis of topological structures is geared towards analyzing local search algorithms with greedy objective functions based on the number of unsatisfied constraints. Many local search algorithm designers are experimenting with new objective functions that are modified continuously throughout search, as in clause weighting schemes <ref> (Selman & Kautz, 1993) </ref>. Work of this type may lead to more innovations in the design of objective functions.
Reference: <author> Selman, B., Levesque, H., & Mitchell, D. </author> <year> (1992). </year> <title> A new method for solving hard satisfiability problems. </title> <booktitle> Proceedings of the 11th National Conference on Artificial Intelligence, </booktitle> <pages> 440-446. </pages>
Reference-contexts: GSAT is a local search procedure for the Boolean Satisfiability problems <ref> (Selman, Levesque, & Mitchell, 1992) </ref> that has proven to be effective at quickly finding solutions to satisfiable problem instances. A sketch of GSAT appears in Figure 1. In the figure, refers to the problem instance GSAT is to solve.
Reference: <author> Tsuji, Y., & Gelder, A. V. </author> <year> (1993). </year> <title> Incomplete thoughts about incomplete satisfiability procedures. Proceedings of the 2d DIMACS Challenge. </title> <type> 281 </type>
Reference-contexts: There may also be differences between satisfiable and unsatisfiable instances of the same class. In recent years numerous algorithm designers have begun testing algorithms on random problem classes that have pre-specified desirable properties. Among these are problem instances that have guaranteed solutions <ref> (Tsuji & Gelder, 1993) </ref>, and problems that have some structure that is hidden from the algorithm. A class of "cluster" problems was presented by Kask and Dechter (1995); these problems consist of a number of satisfiability problems over independent sets of variables with some number of clauses connecting the clusters. <p> Problems of 100 Variables, 430 Clauses 4.2 Instances With Guaranteed Solutions We next present data on problems with guaranteed solutions as described in <ref> (Tsuji & Gelder, 1993) </ref>. This generator is the HardSolvable3-SAT generator presented in Appendix B.
References-found: 15

