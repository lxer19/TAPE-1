URL: http://www.cs.cmu.edu/afs/cs/project/jair/pub/volume7/tambe97a.ps.Z
Refering-URL: http://www.cs.washington.edu/research/jair/abstracts/tambe97a.html
Root-URL: 
Email: tambe@isi.edu  
Title: Towards Flexible Teamwork  
Author: Milind Tambe 
Address: 4676 Admiralty Way Marina del Rey, CA 90292, USA  
Affiliation: Information Sciences Institute and Computer Science Department University of Southern California  
Note: Journal of Artificial Intelligence Research 7 (1997) 83-124 Submitted 6/97; published 9/97  
Abstract: Many AI researchers are today striving to build agent teams for complex, dynamic multi-agent domains, with intended applications in arenas such as education, training, entertainment, information integration, and collective robotics. Unfortunately, uncertainties in these complex, dynamic domains obstruct coherent teamwork. In particular, team members often encounter differing, incomplete, and possibly inconsistent views of their environment. Furthermore, team members can unexpectedly fail in fulfilling responsibilities or discover unexpected opportunities. Highly flexible coordination and communication is key in addressing such uncertainties. Simply fitting individual agents with precomputed coordination plans will not do, for their inflexibility can cause severe failures in teamwork, and their domain-specificity hinders reusability. Our central hypothesis is that the key to such flexibility and reusability is providing agents with general models of teamwork. Agents exploit such models to autonomously reason about coordination and communication, providing requisite flexibility. Furthermore, the models enable reuse across domains, both saving implementation effort and enforcing consistency. This article presents one general, implemented model of teamwork, called STEAM. The basic building block of teamwork in STEAM is joint intentions (Cohen & Levesque, 1991b); teamwork in STEAM is based on agents' building up a (partial) hierarchy of joint intentions (this hierarchy is seen to parallel Grosz & Kraus's partial Shared-Plans, 1996). Furthermore, in STEAM, team members monitor the team's and individual members' performance, reorganizing the team as necessary. Finally, decision-theoretic communication selectivity in STEAM ensures reduction in communication overheads of teamwork, with appropriate sensitivity to the environmental conditions. This article describes STEAM's application in three different complex domains, and presents detailed empirical results. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Barbuceanu, M., & Fox, M. </author> <year> (1996). </year> <title> The architecture of an agent building shell. </title> <editor> In Wooldridge, M., Muller, J., & Tambe, M. (Eds.), </editor> <booktitle> Intelligent Agents, Volume II: Lecture Notes in Artificial Intelligence 1037. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Heidelberg, Germany. </address>
Reference-contexts: Analogously, some of the general coordination in PGP or GPGP is unaccounted for in STEAM, and hence understanding relationships among STEAM and GPGP is an interesting area of future work. There is a similar relationship between STEAM and the COOL coordination framework <ref> (Barbuceanu & Fox, 1996) </ref>. COOL also focuses on general purpose coordination by relying on notions of obligations among agents. However, it explicitly rejects the notion of joint goals and joint commitments.
Reference: <author> Calder, R. B., Smith, J. E., Courtemanche, A. J., Mar, J. M. F., & Ceranowicz, A. Z. </author> <year> (1993). </year> <title> Modsaf behavior simulation and control. </title> <booktitle> In Proceedings of the Conference on Computer Generated Forces and Behavioral Representation. </booktitle>
Reference-contexts: Section 6 presents a detailed experimental evaluation. Section 7 discusses related work. Finally, Section 8 presents summary and future work. 2. Illustrative Domains and Motivations This investigation focuses on three separate domains. Two of the domains are based on a real-world distributed, interactive simulator commercially developed for military training <ref> (Calder et al., 1993) </ref>. The simulator enables | via networking of several computers | creation of large-scale, 3D synthetic battlefields, where humans, as well as hundreds or even thousands of intelligent and semi-intelligent agents can co-participate (Tambe et al., 1995).
Reference: <author> Chu-Carroll, J., & Carberry, S. </author> <year> (1996). </year> <title> Conflict detection and resolution in collaborative planning. </title> <editor> In Wooldridge, M., Muller, J., & Tambe, M. (Eds.), </editor> <booktitle> Intelligent Agents, Volume II: Lecture Notes in Artificial Intelligence 1037. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Heidelberg, Germany. </address>
Reference: <author> Cohen, P. R., & Levesque, H. J. </author> <year> (1991a). </year> <title> Confirmation and joint action. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence. </booktitle>
Reference: <author> Cohen, P. R., & Levesque, H. J. </author> <year> (1991b). </year> <title> Teamwork. </title> <journal> Nous, </journal> <volume> 35. </volume>
Reference: <author> Coradeschi, S. </author> <year> (1997). </year> <title> A decision mechanism for reactive and coordinated agents. </title> <type> Tech. rep. 615, </type> <institution> Linkoping University. (Licentiate Thesis). </institution>
Reference: <author> Decker, K., & Lesser, V. </author> <year> (1995). </year> <title> Designing a family of coordination algorithms. </title> <booktitle> In Proceedings of the International Conference on Multi-Agent Systems. </booktitle>
Reference-contexts: Finally, STEAM is backed up with detailed experimental results about both its flexibility and reuse across domains, all outside the scope of the previous work. STEAM is also related to coordination frameworks such as Partial Global Planning (PGP) (Durfee & Lesser, 1991), and Generalized Partial Global Planning (GPGP) <ref> (Decker & Lesser, 1995) </ref>. Although not driven via theories of collaboration, these coordination frameworks also strive towards domain independence. The earlier work on PGP focuses on a system of cooperating agents for consistent interpretation of data from a distributed sensor network (Durfee & Lesser, 1991). <p> The PGP is a basis for planning coordination actions; and it may be transmitted to subordinates for guidance in execution of individual actions. (PGP can accommodate different types of organizations as well.) GPGP <ref> (Decker & Lesser, 1995) </ref> provides several independent coordination modules, any subset of which may be combined in response to coordination needs of a task environment; the GPGP approach can duplicate and extend the PGP algorithm.
Reference: <author> Durfee, E., & Lesser, V. </author> <year> (1991). </year> <title> Partial global planning: a coordination framework for distributed planning. </title> <journal> IEEE transactions on Systems, Man and Cybernetics, </journal> <volume> 21 (5). </volume>
Reference-contexts: Finally, STEAM is backed up with detailed experimental results about both its flexibility and reuse across domains, all outside the scope of the previous work. STEAM is also related to coordination frameworks such as Partial Global Planning (PGP) <ref> (Durfee & Lesser, 1991) </ref>, and Generalized Partial Global Planning (GPGP) (Decker & Lesser, 1995). Although not driven via theories of collaboration, these coordination frameworks also strive towards domain independence. <p> Although not driven via theories of collaboration, these coordination frameworks also strive towards domain independence. The earlier work on PGP focuses on a system of cooperating agents for consistent interpretation of data from a distributed sensor network <ref> (Durfee & Lesser, 1991) </ref>. Here, subordinate agents may exchange their individual goals and plans of action.
Reference: <author> Firby, J. </author> <year> (1987). </year> <title> An investigation into reactive planning in complex domains. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence (AAAI). </booktitle>
Reference-contexts: This decision theoretic framework thus enables improved flexibility in communication in response to unexpected changes in environmental conditions. Operationalizing general models of teamwork, such as STEAM, necessitates key modifications in the underlying agent architectures. Agent architectures such as Soar (Newell, 1990), RAP <ref> (Firby, 1987) </ref>, PRS (Rao et al., 1993), BB1 (Hayes-Roth et al., 1995), and IRMA (Pollack, 1992) have so far focused on individual agent's flexible behaviors via mechanisms such as commitments and reactive plans. Such architectural mechanisms need to be enhanced for flexible teamwork.
Reference: <author> Gmytrasiewicz, P. J., Durfee, E. H., & Wehe, D. K. </author> <year> (1991). </year> <title> A decision theoretic approach to co-ordinating multi-agent interactions. </title> <booktitle> In Proceedings of International Joint Conference on Artificial Intelligence. </booktitle>
Reference-contexts: STEAM purposely avoids such transformations, so agents can flexibly reason with (i) explicit team goals/plans; and (ii) selective communication (seen to be important in practice). In <ref> (Gmytrasiewicz, Dur-fee, & Wehe, 1991) </ref>, decision theory is applied for message prioritization in coordination based on the agents' recursive modeling of each others' actions.
Reference: <author> Grosz, B. </author> <year> (1996). </year> <journal> Collaborating systems. AI magazine, </journal> <volume> 17 (2). </volume> <editor> 121 Tambe Grosz, B., & Kraus, S. </editor> <year> (1996). </year> <title> Collaborative plans for complex group actions. </title> <journal> Artificial Intelligence, </journal> <volume> 86, </volume> <pages> 269-358. </pages>
Reference-contexts: Intention that is defined via a set of axioms that guide an individual to take actions, including communicative actions, that enable or facilitate its teammates, subteam or team to perform assigned tasks <ref> (Grosz & Kraus, 1996) </ref>. An SP is either a full SharedPlan (FSP) or a partial SharedPlan (PSP). We will begin with a definition of an FSP, and then follow with brief remarks about a PSP. <p> For the sake of brevity, a context clause C ff is deleted from this definition. Also, in this article, we will not address the contracting case discussed in <ref> (Grosz & Kraus, 1996) </ref>. 92 Towards Flexible Teamwork * Other members of GR intend that GR k can bring about fi i using some recipe. The SharedPlan theory aspires to describe the entire web of a team's intentions and beliefs when engaged in teamwork. <p> A final issue is generalization of STEAM's communication capabilities via a hybrid approach that combines the prescriptions of the joint intentions approach with some aspects of SharedPlans. A key observation based on <ref> (Grosz & Kraus, 1996) </ref> is that the communication in joint intentions could potentially be arrived at in SharedPlans via axioms defining intention that. For instance, consider that a team member has obtained private information about the achievement of the team's current team action fi 1 . <p> COLLAGEN's origins are in the SharedPlans theory. Although the COLLAGEN implementation does not explicitly reason from the intend that attitude in SharedPlans introduced in <ref> (Grosz & Kraus, 1996) </ref>, it does incorporate discourse generation and interpretation algo 111 Tambe rithms that originate in such reasoning (Lochbaum, 1994). Treating the underlying agent as a blackbox, COLLAGEN facilitates the discourse between a human user and the blackbox (intelligent agent). <p> STEAM also provides a conceptual advance in a clearer analysis and specification of the joint mental attitude it builds up in a team. In particular, via an explicit analogy to partial SharedPlans <ref> (Grosz & Kraus, 1996) </ref>, this article has spelled out the requirement for teams and subteams to build up a hierarchy of joint intentions, beliefs about other team members' intentions, and joint intentions for the "unreconciled case". This analysis also led to a generalization of communication based on information-dependency. <p> combines several key novel features: (i) use of joint intentions as a building block for a team's joint mental attitude (Levesque et al., 1990; Cohen & Levesque, 1991b) | the article illustrates that STEAM builds up a hierarchical structure of joint intentions and individual intentions, analogous to the partial SharedPlans <ref> (Grosz & Kraus, 1996) </ref>; (ii) integration of novel techniques for explicit establishment of joint intentions (Smith & Cohen, 1996); (iii) principled communication based on commitments in joint intentions; (iv) use of explicit role-monitoring constraints as well as repair methods based on joint intentions; (v) application of decision-theoretic techniques for communication selectivity
Reference: <author> Grosz, B. J., & Sidner, C. L. </author> <year> (1990). </year> <title> Plans for discourse. </title> <editor> In Cohen, P. R., Morgan, J., & Pollack, M. (Eds.), </editor> <booktitle> Intentions in Communication, </booktitle> <pages> pp. 417-445. </pages> <publisher> MIT Press, </publisher> <address> Cambridge, MA. </address>
Reference: <author> Halpern, J. Y., & Moses, Y. </author> <year> (1990). </year> <title> Knowledge and common knowledge in a distributed environment. </title> <journal> Journal of the ACM, </journal> <volume> 37 (3), </volume> <pages> 549-587. </pages>
Reference-contexts: However, in general, attaining mutual belief given the possibility of uncertain communication channels is a notoriously difficult challenge <ref> (Halpern & Moses, 1990) </ref>; and this remains an issue for future work. As a further illustration of teamwork flexibility in STEAM, we created six variations in the environmental conditions facing the Attack company of helicopter pilots.
Reference: <author> Hayes-Roth, B., Brownston, L., & Gen, R. V. </author> <year> (1995). </year> <title> Multiagent collaboration in directed improvisation. </title> <booktitle> In Proceedings of the International Conference on Multi-Agent Systems (ICMAS-95). </booktitle>
Reference: <author> Hill, R., Chen, J., Gratch, J., Rosenbloom, P., & Tambe, M. </author> <year> (1997). </year> <title> Intelligent agents for the synthetic battlefield: a company of rotary wing aircraft. </title> <booktitle> In Proceedings of the Innovative Applications of Artificial Intelligence. </booktitle>
Reference-contexts: When the company returns safely to home-base, it rearms and refuels, readying itself for the next mission. An overview of the overall research and development effort in this domain, simulation infrastructure, milestones, and agent behaviors is presented in <ref> (Hill et al., 1997) </ref>. In the second domain, Transport (Figure 2), synthetic transport helicopters protected by escort helicopters fly synthetic troops to land.
Reference: <author> Jennings, N. </author> <year> (1994). </year> <title> Commitments and conventions: the foundation of coordination in multi-agent systems. </title> <journal> The Knowledge Engineering Review, </journal> <volume> 8. </volume>
Reference-contexts: Teams must thus be capable of monitoring performance, and flexibly reorganizing and reallocating resources to meet any contingencies. Unfortunately, implemented multi-agent systems often fail to provide the necessary flexibility in coordination and communication for coherent teamwork in such domains <ref> (Jennings, 1994, 1995) </ref>. In particular, in these systems, agents are supplied only with preplanned, domain-specific coordination. <p> However, most research efforts have failed to exploit such teamwork theories in building practical applications <ref> (Jennings, 1994, 1995) </ref>. <p> Related Work As mentioned earlier, most implementations of multi-agent collaboration continue to rely on domain-specific coordination in service of teamwork <ref> (Jennings, 1994, 1995) </ref>. More recently, however, a few encouraging exceptions have emerged (Jennings, 1995; Rich & Sidner, 1997). We first briefly review these systems and then contrast them with STEAM.
Reference: <author> Jennings, N. </author> <year> (1995). </year> <title> Controlling cooperative problem solving in industrial multi-agent systems using joint intentions. </title> <journal> Artificial Intelligence, </journal> <volume> 75. </volume>
Reference-contexts: Fortunately, recent theories of teamwork have begun to provide the required models for flexible reasoning about teamwork, e.g., joint intentions (Cohen & Levesque, 1991b; Levesque, Cohen, & Nunes, 1990), SharedPlan (Grosz, 1996; Grosz & Kraus, 1996; Grosz & Sidner, 1990) and joint responsibility <ref> (Jennings, 1995) </ref>, are some of the prominent ones among these. However, most research efforts have failed to exploit such teamwork theories in building practical applications (Jennings, 1994, 1995). <p> This article presents detailed experimental results from these teams, illustrating the benefits of STEAM in their development. STEAM is among just a very few implemented general models of teamwork. Other models include Jennings' joint responsibility framework in the GRATE* system <ref> (Jennings, 1995) </ref> (based on Joint Intentions theory), and Rich and Sidner's COLLAGEN (Rich & Sid-ner, 1997) (based on the SharedPlans theory), that both operate in complex domains. <p> Treating the underlying agent as a blackbox, COLLAGEN facilitates the discourse between a human user and the blackbox (intelligent agent). Several COLLAGEN features aid in such interaction, such as maintenance of a segmented interaction history. STEAM contrasts with COLLAGEN (Rich & Sidner, 1997) and GRATE* <ref> (Jennings, 1995) </ref> in several important ways. First, STEAM builds on joint intentions (with some influence of SharedPlans), rather than the SharedPlan approach in COLLAGEN or the joint responsibility approach of GRATE*. Particularly in contrast with joint responsibility, STEAM allows teamwork based on deep joint goal/plan hierarchies.
Reference: <author> Kaminka, G. A., & Tambe, M. </author> <year> (1997). </year> <title> Social comparison for failure monitoring and recovery in multi-agent settings. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <address> p. </address> <note> (Student abstract). </note>
Reference-contexts: Differences in goals and intentions may indicate coordination failures, since teammates often carry out identical or related tasks. However, given the overheads of such an approach, it has to be carefully balanced with an agents' other routine activities. Initial results of this approach are reported in <ref> (Kaminka & Tambe, 1997) </ref>. Enriching STEAM's communication capabilities in a principled fashion is yet another key topic for future work. Such enriched communication may form the basis of multi-agent collaborative negotiation (Chu-Carroll & Carberry, 1996).
Reference: <author> Kinny, D., Ljungberg, M., Rao, A., Sonenberg, E., Tidhard, G., & Werner, E. </author> <year> (1992). </year> <title> Planned team activity. </title> <editor> In Castelfranchi, C., & Werner, E. (Eds.), </editor> <booktitle> Artificial Social Systems, Lecture notes in AI 830. </booktitle> <publisher> Springer, </publisher> <address> NY. </address>
Reference: <author> Kitano, H., Asada, M., Kuniyoshi, Y., Noda, I., & Osawa, E. </author> <year> (1995). </year> <title> Robocup: The robot world cup initiative. </title> <booktitle> In Proceedings of IJCAI-95 Workshop on Entertainment and AI/Alife. </booktitle>
Reference-contexts: American Heritage Dictionary Teamwork is becoming increasingly critical in many multi-agent environments, such as, virtual training (Tambe et al., 1995; Rao et al., 1993), interactive education (for instance, in virtual historical settings, Pimentel & Teixeira, 1994), internet-based information integra tion (Williamson, Sycara, & Decker, 1996), RoboCup robotic and synthetic soccer <ref> (Kitano et al., 1995, 1997) </ref>, interactive entertainment (Hayes-Roth, Brownston, & Gen, 1995; Reilly, 1996), and potential multi-robotic space missions. Teamwork in such complex, dynamic domains is more than a simple union of simultaneous coordinated activity. An illustrative c fl1997 AI Access Foundation and Morgan Kaufmann Publishers. All rights reserved. <p> This domain may involve teams of up to sixteen synthetic pilot agents (the largest team we have encountered); although Figure 2 shows twelve. Our third domain is RoboCup synthetic soccer <ref> (Kitano et al., 1995) </ref>. RoboCup is an international soccer tournament for robots and synthetic agents, aimed at promoting research in multi-agent systems. In the synthetic agent track, over 30 teams will participate in the first RoboCup'97 tournament at IJCAI'97 in Japan.
Reference: <author> Kitano, H., Tambe, M., Stone, P., Veloso, M., Noda, I., Osawa, E., & Asada, M. </author> <year> (1997). </year> <title> The robocup synthetic agents' challenge. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI). </booktitle>
Reference: <author> Laird, J. E., Jones, R. M., & Nielsen, P. E. </author> <year> (1994). </year> <title> Coordinated behavior of computer generated forces in tacair-soar. </title> <booktitle> In Proceedings of the Fourth Conference on Computer Generated Forces and Behavioral Representation. </booktitle> <address> Orlando, Florida: </address> <institution> Institute for Simulation and Training, University of Central Florida. </institution>
Reference: <author> Levesque, H. J., Cohen, P. R., & Nunes, J. </author> <year> (1990). </year> <title> On acting together. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence. </booktitle> <address> Menlo Park, Calif.: </address> <publisher> AAAI press. </publisher>
Reference-contexts: With this Request, adopts the PWAG. 2. Each i responds via confirm or refuse. Confirm, also an Attempt, informs others that i has the PWAG to achieve p. 3. WAG was originally called WG in <ref> (Levesque et al., 1990) </ref>, but later termed WAG in (Smith & Cohen, 1996). 4. The PWAG also includes an irrelevance clause q, but we will not include it here to simplify the following description. 91 Tambe 3. If 8 i, i confirm, JPG (fi, p) is formed.
Reference: <author> Lochbaum, K. E. </author> <year> (1994). </year> <title> Using collaborative plans to model the intentional structure of discourse. </title> <type> Ph.D. thesis, </type> <institution> Harvard University. </institution> <note> 122 Towards Flexible Teamwork Mitchell, </note> <author> T. M., Keller, R. M., & Kedar-Cabelli, S. T. </author> <year> (1986). </year> <title> Explanation-based generalization: A unifying view. </title> <journal> Machine Learning, </journal> <volume> 1 (1), </volume> <pages> 47-80. </pages>
Reference-contexts: COLLAGEN's origins are in the SharedPlans theory. Although the COLLAGEN implementation does not explicitly reason from the intend that attitude in SharedPlans introduced in (Grosz & Kraus, 1996), it does incorporate discourse generation and interpretation algo 111 Tambe rithms that originate in such reasoning <ref> (Lochbaum, 1994) </ref>. Treating the underlying agent as a blackbox, COLLAGEN facilitates the discourse between a human user and the blackbox (intelligent agent). Several COLLAGEN features aid in such interaction, such as maintenance of a segmented interaction history.
Reference: <author> Newell, A. </author> <year> (1990). </year> <title> Unified Theories of Cognition. </title> <publisher> Harvard Univ. Press, </publisher> <address> Cambridge, Mass. </address>
Reference-contexts: This decision theoretic framework thus enables improved flexibility in communication in response to unexpected changes in environmental conditions. Operationalizing general models of teamwork, such as STEAM, necessitates key modifications in the underlying agent architectures. Agent architectures such as Soar <ref> (Newell, 1990) </ref>, RAP (Firby, 1987), PRS (Rao et al., 1993), BB1 (Hayes-Roth et al., 1995), and IRMA (Pollack, 1992) have so far focused on individual agent's flexible behaviors via mechanisms such as commitments and reactive plans. Such architectural mechanisms need to be enhanced for flexible teamwork. <p> This view concurs with Grosz (1996), who states that "capabilities for teamwork cannot be patched on, but must be designed in from the start". Our operationalization of STEAM is based on enhancements to the Soar architecture <ref> (Newell, 1990) </ref>, plus a set of about 300 domain-independent Soar rules. Three different teams have been developed based on this operationalization of STEAM. <p> Of course, STEAM is far from a complete model of teamwork, and several major issues remain open for future work. One key issue is investigating STEAM's interactions with learning. Initial experiments with chunking <ref> (Newell, 1990) </ref> (a form of explanation-based learning (Mitchell, Keller, & Kedar-Cabelli, 1986)) in STEAM reveal that agents could automatize routine teamwork activities, rather than always reasoning about them. Specifically, from STEAM's domain-independent reasoning about teamwork, agents learn situation-specific coordination rules.
Reference: <author> Pimentel, K., & Teixeira, K. </author> <year> (1994). </year> <title> Virtual reality: Through the new looking glass. Windcrest/McGraw-Hill, Blue Ridge Summit, </title> <address> PA. </address>
Reference-contexts: 1. Introduction teamwork: cooperative effort by the members of a team to achieve a common goal. American Heritage Dictionary Teamwork is becoming increasingly critical in many multi-agent environments, such as, virtual training (Tambe et al., 1995; Rao et al., 1993), interactive education <ref> (for instance, in virtual historical settings, Pimentel & Teixeira, 1994) </ref>, internet-based information integra tion (Williamson, Sycara, & Decker, 1996), RoboCup robotic and synthetic soccer (Kitano et al., 1995, 1997), interactive entertainment (Hayes-Roth, Brownston, & Gen, 1995; Reilly, 1996), and potential multi-robotic space missions.
Reference: <author> Pollack, M. </author> <year> (1992). </year> <title> The uses of plans. </title> <journal> Artificial Intelligence, </journal> <volume> 57, </volume> <pages> 43-68. </pages>
Reference-contexts: Operationalizing general models of teamwork, such as STEAM, necessitates key modifications in the underlying agent architectures. Agent architectures such as Soar (Newell, 1990), RAP (Firby, 1987), PRS (Rao et al., 1993), BB1 (Hayes-Roth et al., 1995), and IRMA <ref> (Pollack, 1992) </ref> have so far focused on individual agent's flexible behaviors via mechanisms such as commitments and reactive plans. Such architectural mechanisms need to be enhanced for flexible teamwork. In particular, an explicit representation of mutual beliefs, reactive team plans and team goals is essential.
Reference: <author> Rajput, S., & Karr, C. R. </author> <year> (1995). </year> <title> Cooperative behavior in modsaf. </title> <type> Tech. rep. </type> <institution> IST-CR-95-35, Institute for simulation and training, University of Central Florida. </institution>
Reference: <author> Rao, A. S., Lucas, A., Morley, D., Selvestrel, M., & Murray, G. </author> <year> (1993). </year> <title> Agent-oriented architecture for air-combat simulation. </title> <type> Tech. rep. Technical Note 42, </type> <institution> The Australian Artificial Intelligence Institute. </institution>
Reference-contexts: This decision theoretic framework thus enables improved flexibility in communication in response to unexpected changes in environmental conditions. Operationalizing general models of teamwork, such as STEAM, necessitates key modifications in the underlying agent architectures. Agent architectures such as Soar (Newell, 1990), RAP (Firby, 1987), PRS <ref> (Rao et al., 1993) </ref>, BB1 (Hayes-Roth et al., 1995), and IRMA (Pollack, 1992) have so far focused on individual agent's flexible behaviors via mechanisms such as commitments and reactive plans. Such architectural mechanisms need to be enhanced for flexible teamwork.
Reference: <author> Reilly, W. S. </author> <year> (1996). </year> <title> Believable Emotional and Social Agents. </title> <type> Ph.D. thesis, </type> <institution> School of Computer Science, Carnegie Mellon University. </institution>
Reference: <author> Rich, C., & Sidner, C. </author> <year> (1997). </year> <title> COLLAGEN: When agents collaborate with people. </title> <booktitle> In Proceedings of the International Conference on Autonomous Agents (Agents'97). </booktitle>
Reference-contexts: Such a model enables agents to autonomously reason about coordination and communication, providing them the requisite flexibility in teamwork. Such general models also allow reuse of teamwork capabilities across domains. Not only does such reuse save implementation effort, but it also ensures consistency in teamwork across applications <ref> (Rich & Sidner, 1997) </ref>. <p> STEAM is among just a very few implemented general models of teamwork. Other models include Jennings' joint responsibility framework in the GRATE* system (Jennings, 1995) (based on Joint Intentions theory), and Rich and Sidner's COLLAGEN <ref> (Rich & Sid-ner, 1997) </ref> (based on the SharedPlans theory), that both operate in complex domains. <p> While the procedure for establishing joint commitments in STEAM is similar to GRATE* | including the similarity of the "leader" in STEAM to the "organizer" in GRATE* | STEAM does benefit from adopting PWAGs, which provides it additional flexibility. STEAM is also related to COLLAGEN <ref> (Rich & Sidner, 1997) </ref>, a prototype toolkit applied to build a collaborative interface agent for applications such as air-travel arrangements. COLLAGEN's origins are in the SharedPlans theory. <p> Treating the underlying agent as a blackbox, COLLAGEN facilitates the discourse between a human user and the blackbox (intelligent agent). Several COLLAGEN features aid in such interaction, such as maintenance of a segmented interaction history. STEAM contrasts with COLLAGEN <ref> (Rich & Sidner, 1997) </ref> and GRATE* (Jennings, 1995) in several important ways. First, STEAM builds on joint intentions (with some influence of SharedPlans), rather than the SharedPlan approach in COLLAGEN or the joint responsibility approach of GRATE*.
Reference: <author> Rosenbloom, P. S., Laird, J. E., Newell, A., , & McCarl, R. </author> <year> (1991). </year> <title> A preliminary analysis of the soar architecture as a basis for general intelligence. </title> <journal> Artificial Intelligence, </journal> <volume> 47 (1-3), </volume> <pages> 289-325. </pages>
Reference: <author> Sen, S. </author> <year> (1996). </year> <booktitle> Proceedings of the Spring Symposium on Adaptation, Coevolution and Learning. American Association for Artificial Intelligence, </booktitle> <address> Menlo Park, CA. </address>
Reference-contexts: A well-practiced team member could thus mostly rely on learned rules for "routine" activities, but fall back on STEAM rules if it encounters any unanticipated situations. Additionally, STEAM's knowledge-intensive to learning approach could complement current inductive learning approaches for multi-agent coordination <ref> (Sen, 1996) </ref>. Failure detection and recovery is also a key topic for future work, particularly in environments with unreliable communication. One novel approach exploits agent tracking (Tambe & Rosenbloom, 1995; Tambe, 1996) to infer teammates' high-level goals and intentions for comparison with own goals and intentions.
Reference: <author> Sidner, C. </author> <year> (1994). </year> <title> An artificial discourse language for collaborative negotiation. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence (AAAI). </booktitle>
Reference-contexts: Instead, 6. In the future, to enable STEAM-based agents to communicate with non-STEAM-based agents, a generic communication language may be necessary. While generating natural language is currently outside the scope of STEAM, STEAM does not preclude such a possibility. Alternatively, an artificial communication language, such as <ref> (Sidner, 1994) </ref> may be used. 99 Tambe agents need to obtain role performance information via agent tracking (plan recognition) (Tambe, 1995, 1996), e.g., is a player agent in the RoboCup simulation dashing ahead to receive a pass? Communication may be another source of information regarding role nonperformance.
Reference: <author> Smith, I., & Cohen, P. </author> <year> (1996). </year> <title> Towards semantics for an agent communication language based on speech acts. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence (AAAI). </booktitle>
Reference-contexts: To enter into a joint commitment (JPG) in the first place, all team members must establish appropriate mutual beliefs and commitments. An explicit exchange of request and confirm speech acts is one way that a team can achieve appropriate mutual beliefs and commitments <ref> (Smith & Cohen, 1996) </ref>. Since this exchange leads to establishment of a JPG, we will refer to it in the following as the establish commitments protocol. The key to this protocol is a persistent weak achievement goal (PWAG). <p> With this Request, adopts the PWAG. 2. Each i responds via confirm or refuse. Confirm, also an Attempt, informs others that i has the PWAG to achieve p. 3. WAG was originally called WG in (Levesque et al., 1990), but later termed WAG in <ref> (Smith & Cohen, 1996) </ref>. 4. The PWAG also includes an irrelevance clause q, but we will not include it here to simplify the following description. 91 Tambe 3. If 8 i, i confirm, JPG (fi, p) is formed. In establishing a JPG, this protocol synchronizes fi. <p> a team's joint mental attitude (Levesque et al., 1990; Cohen & Levesque, 1991b) | the article illustrates that STEAM builds up a hierarchical structure of joint intentions and individual intentions, analogous to the partial SharedPlans (Grosz & Kraus, 1996); (ii) integration of novel techniques for explicit establishment of joint intentions <ref> (Smith & Cohen, 1996) </ref>; (iii) principled communication based on commitments in joint intentions; (iv) use of explicit role-monitoring constraints as well as repair methods based on joint intentions; (v) application of decision-theoretic techniques for communication selectivity and enhancements, within the context of the joint intentions framework.
Reference: <author> Sonenberg, E., Tidhard, G., Werner, E., Kinny, D., Ljungberg, M., & Rao, A. </author> <year> (1994). </year> <title> Planned team activity. </title> <type> Tech. rep. 26, </type> <institution> Australian AI Institute. </institution>
Reference-contexts: In team tracking (Tambe, 1996), i.e., inferring team's joint intentions, the expressiveness of team operators has been exploited. However, issues of establishing joint commitments, communication, monitoring and repair are not addressed. The formal approach to teamwork in <ref> (Sonenberg et. al., 1994) </ref> transforms team plans into separate role-plans for execution by individuals, with rigidly embedded communications. STEAM purposely avoids such transformations, so agents can flexibly reason with (i) explicit team goals/plans; and (ii) selective communication (seen to be important in practice).
Reference: <author> Stone, P., & Veloso, M. </author> <year> (1996). </year> <title> Towards collaborative and adversarial learning: a case study in robotic soccer. </title> <editor> In Sen, S. (Ed.), </editor> <booktitle> AAAI Spring Symposium on Adaptation, Coevolution and Learning in multi-agent systems. </booktitle>
Reference-contexts: RoboCup is an international soccer tournament for robots and synthetic agents, aimed at promoting research in multi-agent systems. In the synthetic agent track, over 30 teams will participate in the first RoboCup'97 tournament at IJCAI'97 in Japan. The snapshot in Figure 3 shows two competing teams: CMUnited <ref> (Stone & Veloso, 1996) </ref> versus our ISI team. 2 The Attack domain is illustrative of the teamwork challenges. In our initial, pre-STEAM implementation, the helicopter pilot agents were developed in the Soar integrated agent-architecture (Newell, 1990; Rosenbloom et al., 1991).
Reference: <author> Tambe, M. </author> <year> (1995). </year> <title> Recursive agent and agent-group tracking in a real-time dynamic environment. </title> <booktitle> In Proceedings of the International Conference on Multi-agent systems (ICMAS). </booktitle>
Reference-contexts: The simulator enables | via networking of several computers | creation of large-scale, 3D synthetic battlefields, where humans, as well as hundreds or even thousands of intelligent and semi-intelligent agents can co-participate <ref> (Tambe et al., 1995) </ref>. The first domain, Attack (Figure 1), involves pilot agents for a company of (up to eight) synthetic attack helicopters. The company starts at the home-base, where the commander pilot agent first sends orders and instructions to the company members. <p> Each pilot agent was based on a separate copy of Soar. For each such pilot, an operator hierarchy was defined. Figure 4 shows a portion of this hierarchy <ref> (Tambe, Schwamb, & Rosenbloom, 1995) </ref>. Operators are very similar to reactive plans commonly used in other agent architectures, such as the architectures described in Section 1. Each operator consists of (i) precondition rules for selection; (ii) rules for application (a complex operator subgoals); and (iii) rules for termination. <p> For teamwork among individuals, domain-specific coordination plans were added, as commonly done in other such efforts in this type of domain (Rajput & Karr, 1995; Tidhar, Selvestrel, & Heinze, 1995; Laird, Jones, & Nielsen, 1994; Coradeschi, 1997), including our own <ref> (Tambe et al., 1995) </ref>. For instance, after scouting the battle position, a scout executes a plan to inform those waiting behind that the battle position is scouted (not shown in Figure 4). <p> This intention tracking need not involve detailed plan recognition, e.g., as in our previous work <ref> (Tambe, 1995, 1996) </ref>. Instead, a team member must only be able to infer that its teammates intend (or cannot or do not intend) to execute the step fi i . <p> While generating natural language is currently outside the scope of STEAM, STEAM does not preclude such a possibility. Alternatively, an artificial communication language, such as (Sidner, 1994) may be used. 99 Tambe agents need to obtain role performance information via agent tracking (plan recognition) <ref> (Tambe, 1995, 1996) </ref>, e.g., is a player agent in the RoboCup simulation dashing ahead to receive a pass? Communication may be another source of information regarding role nonperformance. First, as discussed below, STEAM leads individuals to announce role-changes to the team, and thus other team members indirectly infer role-performance information.
Reference: <author> Tambe, M. </author> <year> (1996). </year> <title> Tracking dynamic team activity. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence (AAAI). 123 Tambe Tambe, M. </booktitle> <year> (1997a). </year> <title> Agent architectures for flexible, practical teamwork. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence (AAAI). </booktitle>
Reference-contexts: However, as before, termination messages are used when ffi = 1, where they maximize expected utility. 5.2 Estimating Parameters (fl, t , ffi) As a first step, STEAM only uses qualitative (low, high, medium) parameter values. STEAM estimates likelihood of lack of joint commitments fl, via team tracking <ref> (Tambe, 1996) </ref> | dynamically inferring a team's mental state from observations of team members' actions. Fortunately, rather than tracking each teammate separately, an agent i can rely on its own team operator execution for team tracking. <p> However, it explicitly rejects the notion of joint goals and joint commitments. It would appear that individual 113 Tambe commitments in COOL would be inadequate in addressing some teamwork phenomena, but further work is necessary in understanding the relationship among COOL and STEAM. In team tracking <ref> (Tambe, 1996) </ref>, i.e., inferring team's joint intentions, the expressiveness of team operators has been exploited. However, issues of establishing joint commitments, communication, monitoring and repair are not addressed.
Reference: <author> Tambe, M. </author> <year> (1997b). </year> <title> Implementing agent teams in dynamic multi-agent environments. </title> <journal> Applied Artificial Intelligence. </journal> <note> (to appear). </note>
Reference-contexts: The determining factor here would appear to be the tightness of collaboration, e.g., a deeply nested, dynamic joint goal hierarchy should favor a tighter coupling. In our previous work <ref> (Tambe, 1997b) </ref> we presented an initial implementation of a teamwork model, also based on joint intentions. That work clearly laid the groundwork for STEAM, by defining team operators, and elaborating on their expressiveness. <p> This analysis also led to a generalization of communication based on information-dependency. The following now presents a detailed comparison between STEAM and the earlier work <ref> (Tambe, 1997b) </ref> in terms of their capabilities. To begin with, STEAM includes an explicit mechanism to establish joint commitments based on PWAGs, which was unaddressed in previous work | so earlier, agents would implicitly, and hence sometimes incorrectly, assume the existence of joint commitments. <p> Furthermore, STEAM's repair generalizes to subteams, addresses previous critical commitments, as well as unallocated tasks. In terms of practical concerns, our previous work <ref> (Tambe, 1997b) </ref> raised the issue of communication risk in hostile environments, but suggested only a heuristic evaluation of communication costs and benefits; a general purpose mechanism was lacking.
Reference: <author> Tambe, M., Johnson, W. L., Jones, R., Koss, F., Laird, J. E., Rosenbloom, P. S., & Schwamb, K. </author> <year> (1995). </year> <title> Intelligent agents for interactive simulation environments. </title> <journal> AI Magazine, </journal> <volume> 16 (1). </volume>
Reference-contexts: The simulator enables | via networking of several computers | creation of large-scale, 3D synthetic battlefields, where humans, as well as hundreds or even thousands of intelligent and semi-intelligent agents can co-participate <ref> (Tambe et al., 1995) </ref>. The first domain, Attack (Figure 1), involves pilot agents for a company of (up to eight) synthetic attack helicopters. The company starts at the home-base, where the commander pilot agent first sends orders and instructions to the company members. <p> Each pilot agent was based on a separate copy of Soar. For each such pilot, an operator hierarchy was defined. Figure 4 shows a portion of this hierarchy <ref> (Tambe, Schwamb, & Rosenbloom, 1995) </ref>. Operators are very similar to reactive plans commonly used in other agent architectures, such as the architectures described in Section 1. Each operator consists of (i) precondition rules for selection; (ii) rules for application (a complex operator subgoals); and (iii) rules for termination. <p> For teamwork among individuals, domain-specific coordination plans were added, as commonly done in other such efforts in this type of domain (Rajput & Karr, 1995; Tidhar, Selvestrel, & Heinze, 1995; Laird, Jones, & Nielsen, 1994; Coradeschi, 1997), including our own <ref> (Tambe et al., 1995) </ref>. For instance, after scouting the battle position, a scout executes a plan to inform those waiting behind that the battle position is scouted (not shown in Figure 4). <p> This intention tracking need not involve detailed plan recognition, e.g., as in our previous work <ref> (Tambe, 1995, 1996) </ref>. Instead, a team member must only be able to infer that its teammates intend (or cannot or do not intend) to execute the step fi i . <p> While generating natural language is currently outside the scope of STEAM, STEAM does not preclude such a possibility. Alternatively, an artificial communication language, such as (Sidner, 1994) may be used. 99 Tambe agents need to obtain role performance information via agent tracking (plan recognition) <ref> (Tambe, 1995, 1996) </ref>, e.g., is a player agent in the RoboCup simulation dashing ahead to receive a pass? Communication may be another source of information regarding role nonperformance. First, as discussed below, STEAM leads individuals to announce role-changes to the team, and thus other team members indirectly infer role-performance information.
Reference: <author> Tambe, M., & Rosenbloom, P. S. </author> <year> (1995). </year> <title> RESC: An approach for real-time, dynamic agent tracking. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI). </booktitle>
Reference-contexts: The simulator enables | via networking of several computers | creation of large-scale, 3D synthetic battlefields, where humans, as well as hundreds or even thousands of intelligent and semi-intelligent agents can co-participate <ref> (Tambe et al., 1995) </ref>. The first domain, Attack (Figure 1), involves pilot agents for a company of (up to eight) synthetic attack helicopters. The company starts at the home-base, where the commander pilot agent first sends orders and instructions to the company members. <p> Each pilot agent was based on a separate copy of Soar. For each such pilot, an operator hierarchy was defined. Figure 4 shows a portion of this hierarchy <ref> (Tambe, Schwamb, & Rosenbloom, 1995) </ref>. Operators are very similar to reactive plans commonly used in other agent architectures, such as the architectures described in Section 1. Each operator consists of (i) precondition rules for selection; (ii) rules for application (a complex operator subgoals); and (iii) rules for termination. <p> For teamwork among individuals, domain-specific coordination plans were added, as commonly done in other such efforts in this type of domain (Rajput & Karr, 1995; Tidhar, Selvestrel, & Heinze, 1995; Laird, Jones, & Nielsen, 1994; Coradeschi, 1997), including our own <ref> (Tambe et al., 1995) </ref>. For instance, after scouting the battle position, a scout executes a plan to inform those waiting behind that the battle position is scouted (not shown in Figure 4). <p> This intention tracking need not involve detailed plan recognition, e.g., as in our previous work <ref> (Tambe, 1995, 1996) </ref>. Instead, a team member must only be able to infer that its teammates intend (or cannot or do not intend) to execute the step fi i . <p> While generating natural language is currently outside the scope of STEAM, STEAM does not preclude such a possibility. Alternatively, an artificial communication language, such as (Sidner, 1994) may be used. 99 Tambe agents need to obtain role performance information via agent tracking (plan recognition) <ref> (Tambe, 1995, 1996) </ref>, e.g., is a player agent in the RoboCup simulation dashing ahead to receive a pass? Communication may be another source of information regarding role nonperformance. First, as discussed below, STEAM leads individuals to announce role-changes to the team, and thus other team members indirectly infer role-performance information.
Reference: <author> Tambe, M., Schwamb, K., & Rosenbloom, P. S. </author> <year> (1995). </year> <title> Building intelligent pilots for simulated rotary wing aircraft. </title> <booktitle> In Proceedings of the Fifth Conference on Computer Generated Forces and Behavioral Representation. </booktitle>
Reference-contexts: The simulator enables | via networking of several computers | creation of large-scale, 3D synthetic battlefields, where humans, as well as hundreds or even thousands of intelligent and semi-intelligent agents can co-participate <ref> (Tambe et al., 1995) </ref>. The first domain, Attack (Figure 1), involves pilot agents for a company of (up to eight) synthetic attack helicopters. The company starts at the home-base, where the commander pilot agent first sends orders and instructions to the company members. <p> Each pilot agent was based on a separate copy of Soar. For each such pilot, an operator hierarchy was defined. Figure 4 shows a portion of this hierarchy <ref> (Tambe, Schwamb, & Rosenbloom, 1995) </ref>. Operators are very similar to reactive plans commonly used in other agent architectures, such as the architectures described in Section 1. Each operator consists of (i) precondition rules for selection; (ii) rules for application (a complex operator subgoals); and (iii) rules for termination. <p> For teamwork among individuals, domain-specific coordination plans were added, as commonly done in other such efforts in this type of domain (Rajput & Karr, 1995; Tidhar, Selvestrel, & Heinze, 1995; Laird, Jones, & Nielsen, 1994; Coradeschi, 1997), including our own <ref> (Tambe et al., 1995) </ref>. For instance, after scouting the battle position, a scout executes a plan to inform those waiting behind that the battle position is scouted (not shown in Figure 4). <p> This intention tracking need not involve detailed plan recognition, e.g., as in our previous work <ref> (Tambe, 1995, 1996) </ref>. Instead, a team member must only be able to infer that its teammates intend (or cannot or do not intend) to execute the step fi i . <p> While generating natural language is currently outside the scope of STEAM, STEAM does not preclude such a possibility. Alternatively, an artificial communication language, such as (Sidner, 1994) may be used. 99 Tambe agents need to obtain role performance information via agent tracking (plan recognition) <ref> (Tambe, 1995, 1996) </ref>, e.g., is a player agent in the RoboCup simulation dashing ahead to receive a pass? Communication may be another source of information regarding role nonperformance. First, as discussed below, STEAM leads individuals to announce role-changes to the team, and thus other team members indirectly infer role-performance information.
Reference: <author> Tidhar, G., Selvestrel, M., & Heinze, C. </author> <year> (1995). </year> <title> Modeling teams and team tactics in whole air mission modeling. </title> <type> Tech. rep. Technical Note 60, </type> <institution> The Australian Artificial Intelligence Institute. </institution>
Reference: <author> Williamson, M., Sycara, K., & Decker, K. </author> <year> (1996). </year> <title> Executing decision-theoretic plans in multi-agent environments. </title> <booktitle> In Proceedings of the AAAI Fall Symposium on Plan Execution: Problems and Issues. </booktitle> <pages> 124 </pages>
Reference-contexts: American Heritage Dictionary Teamwork is becoming increasingly critical in many multi-agent environments, such as, virtual training (Tambe et al., 1995; Rao et al., 1993), interactive education (for instance, in virtual historical settings, Pimentel & Teixeira, 1994), internet-based information integra tion <ref> (Williamson, Sycara, & Decker, 1996) </ref>, RoboCup robotic and synthetic soccer (Kitano et al., 1995, 1997), interactive entertainment (Hayes-Roth, Brownston, & Gen, 1995; Reilly, 1996), and potential multi-robotic space missions. Teamwork in such complex, dynamic domains is more than a simple union of simultaneous coordinated activity.
References-found: 45

