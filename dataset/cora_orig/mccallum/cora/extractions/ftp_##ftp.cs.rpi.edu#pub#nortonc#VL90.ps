URL: ftp://ftp.cs.rpi.edu/pub/nortonc/VL90.ps
Refering-URL: http://www.cs.rpi.edu/~nortonc/research.html
Root-URL: http://www.cs.rpi.edu
Title: A Visual Environment for Designing and Simulating Execution of Processor Arrays  
Author: Charles D. Norton and Ephraim P. Glinert 
Address: Troy, NY 12180  
Affiliation: Computer Science Department Rensselaer Polytechnic Institute  
Abstract: Novis, a visual environment which supports the interactive development and animated simulation of special purpose parallel architectures, is presented. In sharp contrast with other systems which concentrate on the representation of parallelism within programs, Novis lets users design networks at an abstract level by placing processing elements into a connected grid of arbitrary (user selected) shape. The environment's underlying philosophy of maximal information hiding makes intimate familiarity on the part of the user with the details of low-level issues such as process schedule maintenance and event dispatching unnecessary. Layout violations and exceptions detected during execution simulation (e.g., deadlock) are automatically reported to the user. An overview of Novis's features is followed by examples that show off the environment's capabilities in a variety of useful applications. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. Snyder. </author> <title> Parallel Programming and the POKER Programming Environment. </title> <journal> IEEE Computer, </journal> <volume> 17(7) </volume> <pages> 27-36, </pages> <month> July </month> <year> 1984. </year>
Reference-contexts: Visualization of concurrency in programming languages and systems, although still an open re y This research was supported, in part, by the National Science Foundation under contract CDA-8805910. search area, has received some attention in the literature from a variety of perspectives <ref> [1, 2, 3] </ref>. Our approach in the Novis environment is to support interactive, visual design of complex parallel networks of communicating processes. Computations are specified as data flow graphs (DFGs) whose nodes represent processing elements (PEs) which execute instructions in some sequential programming language. <p> The k [i; i] are preset to 1, and the original (unsorted) collection of integers x (i) are loaded into x <ref> [i; 1] </ref>; the final (sorted) sequence k [j] is equal to fk (n; j)g 1jn represented in decreasing order.
Reference: [2] <author> P. D. Stotts. </author> <title> The PFG Environment: Parallel Programming with Petri Net Semantics. </title> <booktitle> In Proc. 21st Hawaii Int. Conf. on System Sciences (HICSS-21), Kailua Kona|Volume 2: Software Track, </booktitle> <pages> pages 630-638, </pages> <month> January 5-8, </month> <year> 1988. </year>
Reference-contexts: Visualization of concurrency in programming languages and systems, although still an open re y This research was supported, in part, by the National Science Foundation under contract CDA-8805910. search area, has received some attention in the literature from a variety of perspectives <ref> [1, 2, 3] </ref>. Our approach in the Novis environment is to support interactive, visual design of complex parallel networks of communicating processes. Computations are specified as data flow graphs (DFGs) whose nodes represent processing elements (PEs) which execute instructions in some sequential programming language.
Reference: [3] <author> S. Sobek, M. Azam and J. C. Browne. </author> <title> Architecture and Language Independent Parallel Programming: A Feasibility Demonstration. </title> <booktitle> In Proc. 1988 Int. Conf. on Parallel Processing, </booktitle> <address> University Park, PA|Volume 2: </address> <booktitle> Software, </booktitle> <pages> pages 80-83, </pages> <month> August 15-19, </month> <year> 1988. </year>
Reference-contexts: Visualization of concurrency in programming languages and systems, although still an open re y This research was supported, in part, by the National Science Foundation under contract CDA-8805910. search area, has received some attention in the literature from a variety of perspectives <ref> [1, 2, 3] </ref>. Our approach in the Novis environment is to support interactive, visual design of complex parallel networks of communicating processes. Computations are specified as data flow graphs (DFGs) whose nodes represent processing elements (PEs) which execute instructions in some sequential programming language.
Reference: [4] <author> E. P. Glinert, M. E. Kopache, and D. W. McIntyre. </author> <title> Exploring the General-Purpose Visual Alternative. </title> <journal> J. Visual Languages and Computing, </journal> <volume> 1 </volume> <pages> 3-39, </pages> <month> March </month> <year> 1990. </year>
Reference-contexts: Dependencies are specified by these edges, while synchronization is enforced by the execution schedule. Once the design has been completed, an animated execution simulation can be viewed on demand. Thus, Novis encompasses the properties commonly associated with both visual programming environments <ref> [4] </ref> and parallel programming environments. Indeed, it may be thought of as a first step towards a visual parallel programming environment . System Overview Novis runs under UNIX fl and MIT's X Window System on Sun Microsystems SPARCsta-tions and Digital Equipment Corporation DEC-station/3100s.
Reference: [5] <author> S. Y. Kung. </author> <title> VLSI Array Processors. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1988. </year> <month> 6 </month>
Reference-contexts: A flexible set of routing primitives is provided. In the current implementation, however, this set is not user-extensible. Although for the most general designs this could be considered a limitation, for a wide range of array processing applications the required set of primitives is well known <ref> [5] </ref>. The primary operation that occurs during the simulation stage is the scheduling and dispatching of PE events. In this paper, a PE event refers to the execution of the C code fragment represented by the PE, subject to the satisfiability of its input specification. <p> When all propagating waves have terminated, the simulation ends, and the results (in the output queues) can be examined. We note that the concept of wavefronts as a mathematical definition of synchronous communication of parallel processes is well documented in the literature <ref> [5] </ref>. Fig. 1 illustrates these concepts. Processing Element Details Novis comes with many built-in processor element types, including I/O queues, addition, multiply, comparison and weighted sum operations, to mention but a few.
References-found: 5

