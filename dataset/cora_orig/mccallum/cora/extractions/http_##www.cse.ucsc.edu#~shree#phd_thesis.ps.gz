URL: http://www.cse.ucsc.edu/~shree/phd_thesis.ps.gz
Refering-URL: http://www.cse.ucsc.edu/~shree/
Root-URL: http://www.cse.ucsc.edu
Title: Routing in Packet-Switched Networks Using Path-Finding Algorithms  
Author: Shree Murthy Prof. J. J. Garcia-Luna-Aceves Prof. Patrick Mantey Prof. Darrell Long Dean 
Degree: A dissertation submitted in partial satisfaction of the requirements for the degree of Doctor of Philosophy in Computer Engineering by  The dissertation of Shree Murthy is approved:  
Date: September 1996  
Affiliation: University of California Santa Cruz  of Graduate Studies and Research  
Abstract-found: 0
Intro-found: 1
Reference: [Ana96] <author> Arul Ananthanarayanan. </author> <title> Implementation of path-finding routing algorithms for unix. </title> <type> Master's thesis, </type> <institution> San Diego State University, </institution> <year> 1996. </year>
Reference-contexts: for ILS in case of Arpanet topology, we can extrapolate the results from the other two network topologies and can expect similar behavior for Arpanet topology also. 5.4 Implementation Status We have completed an initial implementation of the wireless routing protocol under the BSD version of the UNIX operation system <ref> [Ana96] </ref>. This implementation contains all features of the basic WRP, and we are currently considering additions to the implementations to support subnetting.
Reference: [Bea89] <author> D. Beyer and et. al. </author> <title> Packet radio network research, development and application. </title> <booktitle> In Proceedings SHAPE conference on Packet Radio, </booktitle> <address> Amesterdam, </address> <year> 1989. </year>
Reference-contexts: Routing forms an integral part of this communications infrastructure. To adapt to the emerging applications, the routing protocols need to support wireless and mobile stations in addition to fixed stations. The routing protocols used in multihop packet radio network implemented in the past <ref> [Bea89, Bey90, LNT87] </ref> were based on shortest-path routing algorithms that have been typically based on DBF. DBF is susceptible to the counting-to-infinity problem and the bouncing-effect and will take a long time to converge. This is not desirable, more so in a wireless network since its bandwidth is very limited. <p> This protocol, which we call Wireless Routing Protocol (WRP), is based on path-finding algorithm (PFA) described in Chapter 3. Routing protocols used in multihop packet-radio networks implemented in the past <ref> [Bea89, Bey90, LNT87] </ref> are based on shortest-path routing algorithms that have been typically based on the distributed Bellman-Ford algorithm (DBF) [BG92].
Reference: [Bel57] <author> R.E. Bellman. </author> <title> Dynamic Programming. </title> <publisher> Princeton University Press, </publisher> <address> Prince-ton, N.J., </address> <year> 1957. </year>
Reference-contexts: Distance-Vector Algorithms: Distance-vector algorithms are often referred to as Bellman-Ford algorithms because they are based on the shortest-path computation algorithm by R.E. Bellman <ref> [Bel57] </ref>. Distance-vector algorithms have been used in several packet-switched networks such as Arpanet.
Reference: [Ber82] <author> D. Bertsekas. </author> <title> Dynamic behavior of shortest path routing algorithms. </title> <journal> IEEE Trans. Automatic Control, </journal> <volume> AC-27:60-74, </volume> <year> 1982. </year>
Reference-contexts: A routing protocol based on single-path routing 8 is ill-suited to cope with congestion, because the only thing the protocol can do to react to congestion is to change the route used to reach a destination, and this could lead to unstable oscillatory behavior <ref> [Ber82] </ref>. In many networks there are several paths between pairs of nodes that are almost equally good. Better performance can be achieved by splitting the traffic over several paths to reduce the load on each of the links. <p> Even in theory, a routing protocol based on single-path routing is ill suited to cope with congestion. The only thing a single path routing protocol can do to react to congestion is to change the route used to reach a destination. However, as has been documented in <ref> [Ber82] </ref>, allowing a single-path routing algorithm to react to congestion can lead to unstable oscillatory behavior. Datagram based networks carry traffic that spans a fairly wide range of rates, but their performance is guaranteed on a best effort basis only.
Reference: [Bey90] <author> D. Beyer. </author> <title> Accomplishments of the DARPA SURAN program. </title> <booktitle> In MILCOM, </booktitle> <pages> pages 855-862, </pages> <address> Monterey, California, </address> <month> Dec. </month> <year> 1990. </year> <note> IEEE. </note>
Reference-contexts: Routing forms an integral part of this communications infrastructure. To adapt to the emerging applications, the routing protocols need to support wireless and mobile stations in addition to fixed stations. The routing protocols used in multihop packet radio network implemented in the past <ref> [Bea89, Bey90, LNT87] </ref> were based on shortest-path routing algorithms that have been typically based on DBF. DBF is susceptible to the counting-to-infinity problem and the bouncing-effect and will take a long time to converge. This is not desirable, more so in a wireless network since its bandwidth is very limited. <p> This protocol, which we call Wireless Routing Protocol (WRP), is based on path-finding algorithm (PFA) described in Chapter 3. Routing protocols used in multihop packet-radio networks implemented in the past <ref> [Bea89, Bey90, LNT87] </ref> are based on shortest-path routing algorithms that have been typically based on the distributed Bellman-Ford algorithm (DBF) [BG92].
Reference: [BG92] <author> D. Bertsekas and R. Gallager. </author> <title> Data Networks. </title> <publisher> Prentice-Hall Inc, </publisher> <address> 2nd edition, </address> <year> 1992. </year>
Reference-contexts: In a distance vector algorithm, each node has knowledge of only the local links. The shortest paths are computed using a distributed version of Bellman-Ford algorithm <ref> [BG92] </ref> in which nodes exchange their shortest path lengths to other nodes with their neighbors periodically or on a event-driven basis. Using this information received from its neighbors, each node constructs a routing table containing the distance of the shortest path to every destination in the network. <p> When a node detects any change in the link distances, it sends out an update to all other nodes by broadcasting. Upon receiving an update, each node recomputes shortest paths to all other nodes using Dijkstra's shortest path algorithm <ref> [BG92] </ref> and constructs its new routing table. Some of the link state protocols are the new Arpanet routing protocol [MRR80], OSPF [Moy94] and ISO's IS-IS [Ora90]. 1.1 Problem Formulation In this dissertation, we concentrate on routing techniques for packet-switched networks using distance-vector algorithms. <p> With this as the basis, the suitability of these algorithms to heterogeneous environments has been explored and the routing protocols have been proposed accordingly. Some of the most popular routing protocols used in today's internets (e.g. RIP [Hed88]) are based on distributed Bellman-Ford (DBF) algorithm for shortest path computation <ref> [BG92] </ref>. However, DBF suffers from the bouncing-effect and counting-to-infinity problems. Recently, distributed shortest path algorithms that utilize information regarding the length and second to last hop of the shortest path to each destination have been proposed to overcome the counting-to-infinity problem of DBF. <p> Each time the topology changes, all network nodes have to recompute their routing tables, which creates a peak of activity. Shortest Path First (SPF) [McQ74] is a link-state protocol in which each node computes and broadcasts the costs of its outgoing links periodically and applies Dijkstra's shortest path algorithm <ref> [BG92] </ref> to determine the next hop; other routing protocols that work on the same link-state approach are IS-IS [Ora90, Per91], and OSPF [Moy94]. Distance-Vector Algorithms: Distance-vector algorithms are often referred to as Bellman-Ford algorithms because they are based on the shortest-path computation algorithm by R.E. Bellman [Bel57]. <p> All these DVAs have used variants of the distributed Bellman-Ford algorithm (DBF) for shortest-path computation <ref> [BG92] </ref>. Distance-vector algorithms perform their route computation on a per-destination basis. If a link fails, only routes for those destinations which were routed over the failed link need to be recomputed. Moreover, the computation is localized to one part of the network only the routers upstream of the failed link. <p> This is referred to as the counting-to-infinity problem. Some of the most popular routing protocols used in today's Internet (e.g., RIP [Hed88]) are based on the distributed Bellman-Ford algorithm (DBF) for shortest-path computation <ref> [BG92] </ref>. The counting-to-infinity problem is overcome in one of the three ways in existing Internet routing protocols. OSPF [Moy94] relies on broadcasting complete topology information among routers, and organizes the Internet hierarchically to cope with the overhead incurred with topology broadcast. <p> Routing protocols used in multihop packet-radio networks implemented in the past [Bea89, Bey90, LNT87] are based on shortest-path routing algorithms that have been typically based on the distributed Bellman-Ford algorithm (DBF) <ref> [BG92] </ref>. According to DBF, a routing node knows the length of the shortest path from each neighbor to every network destination and this information is used to compute the shortest path and the successor in the path to each destination. <p> Router i adjusts M AD i j depending on the congestion level of the network. If router i finds a feasible successor, it remains passive and updates its routing-table entry as in the Distributed Bellman-Ford algorithm <ref> [BG92] </ref>. Alternatively, if router i cannot find a feasible successor, it first sets its distance equal to the addition of the distance reported by its current successor and the cost of the link to that neighbor. The router also sets its maximum allowable distance equal to its new distance.
Reference: [BJ83] <author> A.E. Baratz and J.M. Jaffe. </author> <title> Establishing virtual circuits in large computer netwroks. </title> <booktitle> In INFOCOM, </booktitle> <pages> pages 311-318, </pages> <address> San Diego, CA, </address> <month> April </month> <year> 1983. </year> <note> IEEE. </note>
Reference-contexts: There have been several subsequent proposals for hierarchical routing which vary in the way in which the nodes are organized (addressing scheme) and the routing algorithms used. Baratz and Jaffe <ref> [BJ83] </ref> have proposed a modification to McQuillan's hierarchical routing scheme to support virtual-circuit routing in a two-level hierarchical network.
Reference: [CE95] <author> M. Scott Corson and Anthony Ephremides. </author> <title> A distributed routing algorithm for mobile wireless networks. </title> <journal> ACM J. Wireless Networks, </journal> <pages> pages 61-81, </pages> <month> Jan. </month> <year> 1995. </year>
Reference-contexts: DSDV uses both periodic and triggered updates for updating routing information; also, DSDV floods the sequence numbers originated by each destination, which could cause excessive communication overhead. A distributed routing algorithm for mobile wireless networks based on diffusing computations has been proposed by Corson and Ephremides <ref> [CE95] </ref>. This protocol relies on the 86 exchange of short control packets forming a query-reply process. It also has the ability to maintain multiple paths to a given destination. This is a destination-oriented protocol in which separate versions of the algorithm run independently for each destination.
Reference: [Ceg75] <author> T. Cegrell. </author> <title> A routing procedure for the TIDAS message switching network. </title> <journal> IEEE Trans. Commun., </journal> <volume> 23(6) </volume> <pages> 575-585, </pages> <year> 1975. </year>
Reference-contexts: Many approaches have been proposed in the past to solve, at least in part, the looping problems in DVAs. A widely known proposal is the split-horizon technique, which avoids ping-pong looping, whereby two nodes choose each other as the successor to a destination <ref> [Ceg75, Sch86] </ref>. Another well known technique which has been proposed is the use of hold downs. Both of these approaches do not completely solve the counting-to-infinity problem [GLA]. Some other solutions have also been proposed to overcome this problem [GLA]. network with n1 being the destination node.
Reference: [CRKGLA89] <author> C. Cheng, R. Reley, S.P.R. Kumar, and J.J. Garcia-Luna-Aceves. </author> <title> A loop-free extended bellman-ford routing protocol without bouncing effect. </title> <journal> In Computer Communications Review, </journal> <volume> volume 19, </volume> <pages> pages 224-236. </pages> <publisher> ACM, </publisher> <year> 1989. </year>
Reference-contexts: BGP [RL94] exchanges distance vectors that specify complete paths to destinations. EIGRP [Far93] uses a loop-free routing algorithm called DUAL [GLA92a], which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops. Recently, distributed shortest-path algorithms <ref> [CRKGLA89, Hag83, Hum91, RF91, Mur94] </ref> that utilize information regarding the length and second-to-last hop (predecessor 17 or node next to the last hop) of the shortest path to each destination have been proposed (path-finding algorithms) to eliminate the counting-to-infinity problem of DBF. 2.4 Path-Finding Algorithms Path-finding algorithms eliminate the counting-to-infinity problem <p> The sequence of predecessors encountered during such a trace represents a path from n1 to n2. This is referred to as the implicit path or the path extracted from the predecessor node information <ref> [CRKGLA89] </ref>. Although path-finding algorithms provide a marked improvement over DBF, the existing path-finding algorithms [CRKGLA89, GLA86, Hag83, Hum91, RF91] do not eliminate the possibility of temporary loops. The algorithms we have proposed are similar to previous path-finding algorithms with respect to maintaining predecessor information in distance and routing tables. <p> The sequence of predecessors encountered during such a trace represents a path from n1 to n2. This is referred to as the implicit path or the path extracted from the predecessor node information [CRKGLA89]. Although path-finding algorithms provide a marked improvement over DBF, the existing path-finding algorithms <ref> [CRKGLA89, GLA86, Hag83, Hum91, RF91] </ref> do not eliminate the possibility of temporary loops. The algorithms we have proposed are similar to previous path-finding algorithms with respect to maintaining predecessor information in distance and routing tables. <p> Link or node failures, recoveries and link-cost changes are handled similarly. In contrast to PFA, which makes a node i check the consistency of predecessor information reported by all its neighbors each time it processes an event involving a neighbor k, all previous path-finding algorithms <ref> [CRKGLA89, Hum91, RF91] </ref> check the consistency of the predecessor only for the neighbor associated with the input event. This unique feature of PFA accounts for its fast convergence after a single resource failure or recovery as it eliminates more temporary looping situations than previous path-finding algorithms. <p> Lemma 3.2 shows that this traversal correctly enforces Property 1, without having to traverse an entire implicit path; as the simulation results presented in Section 3.2.3 show, this makes LPA considerably more efficient than other prior path finding algorithms <ref> [CRKGLA89, Hum91] </ref>. <p> In contrast, all previous path-finding algorithms <ref> [CRKGLA89, Hum91, RF91] </ref> check the consistency of the predecessor only for the neighbor associated with the input event. This unique feature of WRP accounts for its fast convergence after a single resource failure or recovery as it eliminates more temporary looping situations than previous path-finding algorithms.
Reference: [Cru91] <author> R.L. Cruz. </author> <title> A calculus for network delay, part II: Network analysis. </title> <journal> IEEE Trans. Information Theory, </journal> <volume> 37 </volume> <pages> 132-141, </pages> <year> 1991. </year> <month> 150 </month>
Reference-contexts: At each node, traffic to destination j is constrained by a permit bucket filter. The worst-case delay and backlog is upper bounded by an additive scheme due to Cruz <ref> [Cru91] </ref>. The rate at which the packets are serviced at each node depends on the permit bucket or leaky bucket parameters i j and i j for a given destination j. The parameter i j gives the permit bucket size and i j the credit generation rate at node i.
Reference: [DH96] <author> S. Deering and R. Hinden. </author> <title> Internet protocol, version 6 (ipv6) specification. </title> <type> RFC 1883, </type> <month> Jan. </month> <year> 1996. </year>
Reference-contexts: Datagram based networks carry traffic that spans a fairly wide range of rates, but their performance is guaranteed on a best effort basis only. Recently, quality of service (QoS) has become a very important issue. The newer Internet routing protocols such as IPv6 <ref> [DH96] </ref> have mechanisms to support different service qualities. This implies that just best-effort service alone does not suffice for datagram networks for future applications.
Reference: [DS80] <author> E.W. Dijkstra and C.S. Scholten. </author> <title> Termination detection for diffusing computations. </title> <journal> In Information Processing Letters, </journal> <volume> volume 11. </volume> <year> 1980. </year>
Reference-contexts: The diffusing update algorithm (DUAL) proposed by J.J. Garcia-Luna-Aceves aims at removing transient temporary loops. DUAL is based on the diffusing algorithm for partial route updates proposed by E.W. Dijkstra and C.S. Scholten in 1980 <ref> [DS80] </ref> and on the remark that one cannot create a loop by picking a shorter path to the destination [Jaf88]. 23 DUAL uses an interneighbor coordination mechanism to achieve loop freedom.
Reference: [Far93] <author> Dino Farinacci. </author> <title> Introduction to enhanced IGRP. </title> <booktitle> Cisco Systems, </booktitle> <month> June </month> <year> 1993. </year>
Reference-contexts: OSPF [Moy94] relies on broadcasting complete topology information among routers, and organizes the Internet hierarchically to cope with the overhead incurred with topology broadcast. BGP [RL94] exchanges distance vectors that specify complete paths to destinations. EIGRP <ref> [Far93] </ref> uses a loop-free routing algorithm called DUAL [GLA92a], which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops.
Reference: [FJ94] <author> S. Floyd and V. Jacobson. </author> <title> The synchronization of periodic routing messages. </title> <journal> IEEE/ACM Trans. Networking, </journal> <volume> 2(2) </volume> <pages> 122-136, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: The allocated resources are reclaimed after a certain time if the state information is not refreshed. The timer value for updating the state information is set at each hop independently. Floyd and Jacobson <ref> [FJ94] </ref> have shown that periodic updates generated by independent network nodes can become synchronized. This can lead to disruption in network services as the periodic messages contend with other network traffic for link and forwarding resources.
Reference: [GLA] <author> J.J. Garcia-Luna-Aceves. </author> <title> A minimum-hop routing algorithm based on distributed information. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 16 </volume> <pages> 367-382. </pages>
Reference-contexts: Moreover, the computation is localized to one part of the network only the routers upstream of the failed link. Therefore, distance-vector algorithms are simpler. 12 The primary disadvantages of DBF are routing-table loops and counting-to-infinity problem <ref> [GLA] </ref>. A routing-table loop is a path specified in the routers' routing tables at a particular point in time, such that the path visits the same router more than once before reaching the intended destination. <p> Another well known technique which has been proposed is the use of hold downs. Both of these approaches do not completely solve the counting-to-infinity problem <ref> [GLA] </ref>. Some other solutions have also been proposed to overcome this problem [GLA]. network with n1 being the destination node. Assume initially all nodes maintain correct routing table entries. Nodes n2 and n3 choose nodes n1 and n2 as their successors respec 16 tively. <p> Another well known technique which has been proposed is the use of hold downs. Both of these approaches do not completely solve the counting-to-infinity problem <ref> [GLA] </ref>. Some other solutions have also been proposed to overcome this problem [GLA]. network with n1 being the destination node. Assume initially all nodes maintain correct routing table entries. Nodes n2 and n3 choose nodes n1 and n2 as their successors respec 16 tively.
Reference: [GLA86] <author> J.J. Garcia-Luna-Aceves. </author> <title> A fail-safe routing algorithm for multihop packet radio networks. </title> <booktitle> In INFOCOM, </booktitle> <address> Maiami, Florida, </address> <month> April </month> <year> 1986. </year> <note> IEEE. </note>
Reference-contexts: The sequence of predecessors encountered during such a trace represents a path from n1 to n2. This is referred to as the implicit path or the path extracted from the predecessor node information [CRKGLA89]. Although path-finding algorithms provide a marked improvement over DBF, the existing path-finding algorithms <ref> [CRKGLA89, GLA86, Hag83, Hum91, RF91] </ref> do not eliminate the possibility of temporary loops. The algorithms we have proposed are similar to previous path-finding algorithms with respect to maintaining predecessor information in distance and routing tables.
Reference: [GLA92a] <author> J.J. Garcia-Luna-Aceves. </author> <title> Distributed routing with labeled distances. </title> <booktitle> In INFOCOM, </booktitle> <pages> pages 633-643. </pages> <publisher> IEEE, </publisher> <year> 1992. </year>
Reference-contexts: This class of algorithms is referred to as the pathfinding algorithms. However, these algorithms do not eliminate the possibility of temporary routing loops. All the loop-free algorithms reported to date rely on mechanisms that require routers to either synchronize along multiple hops <ref> [GLA92a, JM82, MS79] </ref> or exchange path information that can include all the routers in the path from source to destination [GLA92b]. We propose two routing algorithms for a flat network topology that belong to the class of path-finding algorithms. <p> OSPF [Moy94] relies on broadcasting complete topology information among routers, and organizes the Internet hierarchically to cope with the overhead incurred with topology broadcast. BGP [RL94] exchanges distance vectors that specify complete paths to destinations. EIGRP [Far93] uses a loop-free routing algorithm called DUAL <ref> [GLA92a] </ref>, which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops. <p> This is because PFA does not use any interneighbor coordination mechanism to eliminate all temporary looping cases. 31 3.2 Loop-Free Path-Finding Algorithm All the loop-free algorithms reported to date rely on mechanisms that require routers to either synchronize along multiple hops <ref> [GLA92a, JM82, MS79] </ref>, or exchange path information that can include all the routers in the path from a source to destination [GLA92b]. We present the loop-free path-finding algorithm (LPA), which is the first routing algorithm that is loop-free at every instant and does not use either of these two techniques.
Reference: [GLA92b] <author> J.J. Garcia-Luna-Aceves. Libra: </author> <title> A distributed routing algorithm for large internets. </title> <booktitle> In GLOBECOM, </booktitle> <volume> volume 3, </volume> <pages> pages 1465-1471. </pages> <publisher> IEEE, </publisher> <month> Dec. </month> <year> 1992. </year>
Reference-contexts: All the loop-free algorithms reported to date rely on mechanisms that require routers to either synchronize along multiple hops [GLA92a, JM82, MS79] or exchange path information that can include all the routers in the path from source to destination <ref> [GLA92b] </ref>. We propose two routing algorithms for a flat network topology that belong to the class of path-finding algorithms. The first of the two algorithms called Path-Finding algorithm (PFA), eliminates a number of cases in which a temporary routing loop can occur. <p> eliminate all temporary looping cases. 31 3.2 Loop-Free Path-Finding Algorithm All the loop-free algorithms reported to date rely on mechanisms that require routers to either synchronize along multiple hops [GLA92a, JM82, MS79], or exchange path information that can include all the routers in the path from a source to destination <ref> [GLA92b] </ref>. We present the loop-free path-finding algorithm (LPA), which is the first routing algorithm that is loop-free at every instant and does not use either of these two techniques.
Reference: [GLAM95] <author> J.J. Garcia-Luna-Aceves and Shree Murthy. </author> <title> A loop-free path-finding algorithm: Specification, verification and complexity. </title> <booktitle> In INFOCOM, </booktitle> <address> Boston, </address> <month> April </month> <year> 1995. </year> <note> IEEE. </note>
Reference-contexts: After initialization, router i sends updates containing the distance to itself to all its neighbors. 4.3.4 Distance Table Updating The procedures used in HIPR to update the entries of the distance tables are similar to the procedures used in LPA <ref> [GLAM95] </ref>. <p> Permit buckets consist of permits or tokens fed by periodic updates of credits. To schedule packet transmission, we assume a packet-by-packet generalized processor sharing (PGPS) server [PG93] at each node. To establish loop-free multipaths, we extend prior results on loop-free single-path routing algorithms introduced in <ref> [GLAM95] </ref>. This results in a congestion-oriented multipath routing architecture that uses a short-term metric based on hop-by-hop credits to reduce congestion over a given link, and a long-term metric based on end-to-end path delay to reduce delay from source to destination. <p> i jk credits is a constant K times the total available credits; therefore, D i K j (t) X j (t) jl (t): D i Multiple loop-free paths from each node to a destination are maintained by means of a shortest multipath routing algorithm (SMRA), which is based on LPA <ref> [GLAM95] </ref>. As explained earlier, LPA belongs to the class of path-finding algorithms, which achieves loop-freedom at every instant using single-hop interneighbor coordination mechanism. Any change in distance is notified by event-driven update messages. <p> From router i's standpoint, a feasible successor toward destination j is a neighbor router k that satisfies the maximum allowable distance condition (MADC) given by the following two equations <ref> [GLAM95] </ref>: D i jk + d ik = M infD i jp + d ip j p 2 N i g jk &lt; M AD i where M AD i j is the maximum allowable distance for destination j, and is equal to the minimum value obtained for D i j <p> Multiple changes in link cost or availability are handled by ensuring that a given node is waiting to complete the processing of at most one query at any given time. The mechanism used to accomplish this is specified in <ref> [GLAM95] </ref>, and is such that a node can be either passive or in active state, and it processes any pending update or distance increases that occurred while it was active. Ensuring that updates will not be sent in the network when some destination is unreachable is easily done. <p> The proof of correctness and loop-freedom of SMRA is basically the same as that provided in <ref> [GLAM95] </ref> for LPA. 6.3 Worst-Case Steady-State Delay In this section, we derive an upper bound on the end-to-end steady-state path delay from node i to destination j (D ifl j ) as a function of the credits available through each path under steady state.
Reference: [GLAM96] <author> J.J. Garcia-Luna-Aceves and Shree Murthy. </author> <title> A path-finding algorithm for loop-free routing. </title> <journal> IEEE/ACM Trans. Networking, </journal> <note> 1996. to appear in. </note>
Reference-contexts: LPA is loop-free at every instant. This is possible by the single-hop interneighbor coordination and the efficient updating mechanism. The details of the proofs of loop-freedom of LPA are given in <ref> [GLAM96] </ref>. LPA has been shown to have a worst-case complexity of O (x) after a single resource failure, where x is the number of routers affected in the topology change. <p> Because HIPR is the same as LPA within an area, the proof that HIPR is loop-free for case (a) follows from the proof that LPA is loop-free <ref> [GLAM96] </ref>. Because all areas in the network form a virtual heterarchical network, and each area is viewed as a single router/destination from a local node, case (b) reduces to case (a). Therefore, the successor graph is loop-free for case (b) also. <p> This proves Theorem 3. 2 To prove that HIPR converges to correct routing table entries, we assume that there is a finite time T c after which no more resource changes (link-cost change or topology change) occur. We extrapolate the correctness properties of LPA <ref> [GLAM96] </ref> to prove that HIPR converges to correct routing tables. Theorem 4 HIPR is live. Proof: Consider the case when the network topology is stable. <p> Also, assume that destination j is reachable through every router. By the inductive proof for an heterarchical network <ref> [GLAM96] </ref>, the result is true for HIPR within an area. Each router maintains information about all areas and a routing table entry for a area is treated similar to an entry of a local router/destination. <p> This forms a virtual network where each node in the network is a area and this can be viewed as a heterarchical virtual network. The rest of the proof consists of applying a similar inductive proof as in <ref> [GLAM96] </ref> to this virtual network. 2 74 Theorem 6 A finite time after t, no new update messages are being transmitted or processed by routers in network G, and all entries in distance and routing tables are correct.
Reference: [GLAS85] <author> J.J. Garcia-Luna-Aceves and N. Shacham. </author> <title> Analysis of routing strategies for packet radio networks. </title> <booktitle> In INFOCOM, </booktitle> <pages> pages 292-302, </pages> <address> Washington D.C., </address> <month> March </month> <year> 1985. </year> <note> IEEE. </note>
Reference-contexts: Besides these algorithms, as part of the DARPA-sponsored SURAN project, a number of hierarchical network architectures have been proposed and analyzed for large packet radio networks <ref> [GLAS85, Lau86] </ref>. In these schemes, a modification of McQuillan's scheme has been used. The algorithms for computing the shortest paths include variations of DBF. Finally, Seeger and Khanna employ Ramamoorthy and Tsai's hierarchical scheme in a two-level hierarchy designed to reduce routing overhead in the DDN [SK86].
Reference: [GLAZ94] <author> J.J. Garcia-Luna-Aceves and William T. Zaumen. </author> <title> Area-based loop-free internet routing. </title> <booktitle> In INFOCOM, </booktitle> <volume> volume 3, </volume> <pages> pages 1000-1008, </pages> <address> Toronto, Canada, </address> <month> April </month> <year> 1994. </year> <note> IEEE. </note>
Reference-contexts: The local simple nodes then treat such a distance as the cost of a link from the boundary node to that destination. Shortest paths are computed using Dijkstra's shortest-path algorithm for simple nodes and the boundary nodes. With very few exceptions <ref> [GLAZ94] </ref>, prior proposals to hierarchical routing have assumed variants of DBF or topology-broadcast algorithms. In the following sections we present, verify and analyze the performance of the first hierarchical routing algorithm (HIPR) based on the maintenance and exchange of hierarchical routing trees.
Reference: [Hag83] <author> J. Hagouel. </author> <title> Issues in routing for large dynamic networks. </title> <type> Technical Report 9942 (No. 44055, </type> <institution> IBM Research Report, </institution> <month> April </month> <year> 1983. </year>
Reference-contexts: BGP [RL94] exchanges distance vectors that specify complete paths to destinations. EIGRP [Far93] uses a loop-free routing algorithm called DUAL [GLA92a], which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops. Recently, distributed shortest-path algorithms <ref> [CRKGLA89, Hag83, Hum91, RF91, Mur94] </ref> that utilize information regarding the length and second-to-last hop (predecessor 17 or node next to the last hop) of the shortest path to each destination have been proposed (path-finding algorithms) to eliminate the counting-to-infinity problem of DBF. 2.4 Path-Finding Algorithms Path-finding algorithms eliminate the counting-to-infinity problem <p> The sequence of predecessors encountered during such a trace represents a path from n1 to n2. This is referred to as the implicit path or the path extracted from the predecessor node information [CRKGLA89]. Although path-finding algorithms provide a marked improvement over DBF, the existing path-finding algorithms <ref> [CRKGLA89, GLA86, Hag83, Hum91, RF91] </ref> do not eliminate the possibility of temporary loops. The algorithms we have proposed are similar to previous path-finding algorithms with respect to maintaining predecessor information in distance and routing tables.
Reference: [Hed] <author> Charles Hedrick. </author> <title> An introduction to IGRP. </title> <institution> Rutgers University. </institution>
Reference-contexts: In other words, the process of route computation is carried out in a distributed way with each node performing part of the computation. Examples of distance-vector protocols include the old Arpanet algorithm [MW77], RIP [Hed88] and Cisco's IGRP <ref> [Hed] </ref>. In a link-state algorithm, each node has complete information of the network topology using which each node computes routes independently. When a node detects any change in the link distances, it sends out an update to all other nodes by broadcasting.
Reference: [Hed88] <author> C. Hedrick. </author> <title> Routing information protocol. </title> <type> RFC 1058, </type> <month> June </month> <year> 1988. </year>
Reference-contexts: In other words, the process of route computation is carried out in a distributed way with each node performing part of the computation. Examples of distance-vector protocols include the old Arpanet algorithm [MW77], RIP <ref> [Hed88] </ref> and Cisco's IGRP [Hed]. In a link-state algorithm, each node has complete information of the network topology using which each node computes routes independently. When a node detects any change in the link distances, it sends out an update to all other nodes by broadcasting. <p> With this as the basis, the suitability of these algorithms to heterogeneous environments has been explored and the routing protocols have been proposed accordingly. Some of the most popular routing protocols used in today's internets (e.g. RIP <ref> [Hed88] </ref>) are based on distributed Bellman-Ford (DBF) algorithm for shortest path computation [BG92]. However, DBF suffers from the bouncing-effect and counting-to-infinity problems. <p> Well-known examples of routing protocols which are based on distance-vector algorithms (DVA), are the routing information protocol (RIP) <ref> [Hed88] </ref>, the HELLO protocol [Mil83a], the gateway-to-gateway protocol (GGP) [HS82], the exterior gateway protocol (EGP) [Mil83b] and the old Arpanet routing protocol [McQ74]. All these DVAs have used variants of the distributed Bellman-Ford algorithm (DBF) for shortest-path computation [BG92]. Distance-vector algorithms perform their route computation on a per-destination basis. <p> Thus, we can see that, using DBF, nodes have to go through a long period of message exchanges among nodes belonging to loops before the algorithm converges. This is referred to as the counting-to-infinity problem. Some of the most popular routing protocols used in today's Internet (e.g., RIP <ref> [Hed88] </ref>) are based on the distributed Bellman-Ford algorithm (DBF) for shortest-path computation [BG92]. The counting-to-infinity problem is overcome in one of the three ways in existing Internet routing protocols. <p> A credit based protocol is used to ensure guaranteed flows within the packet-switched network and a scheduling mechanism is used to map connection-oriented sessions to packet-switched flows. The correctness of both the credit-based mechanism and the scheduling scheme have been proved analytically. 7.5 Future Work Routing Information Protocol (RIP) <ref> [Hed88] </ref> is still the most widely used intra-domain routing protocol. Like many other protocols, RIP is also based on Distributed Bellman-Ford algorithm (DBF) for shortest path computations. To cope with the counting-to-infinity problems of DBF, the longest path in RIP is limited to 15 hops.
Reference: [HS82] <author> R. Hinden and A. Sheltzer. </author> <title> DARPA internet gateway. </title> <type> RFC 823, </type> <month> Sept. </month> <year> 1982. </year>
Reference-contexts: Well-known examples of routing protocols which are based on distance-vector algorithms (DVA), are the routing information protocol (RIP) [Hed88], the HELLO protocol [Mil83a], the gateway-to-gateway protocol (GGP) <ref> [HS82] </ref>, the exterior gateway protocol (EGP) [Mil83b] and the old Arpanet routing protocol [McQ74]. All these DVAs have used variants of the distributed Bellman-Ford algorithm (DBF) for shortest-path computation [BG92]. Distance-vector algorithms perform their route computation on a per-destination basis.
Reference: [Hui95] <author> Christian Huitema. </author> <title> Routing in the Internet. </title> <publisher> Prentice Hall, </publisher> <year> 1995. </year>
Reference-contexts: A router is said to be counting-to-infinity when it increments its distance to a destination until it reaches a predefined maximum distance value. Some solutions such as split horizon and poisson reverse have been proposed to overcome these basic problems <ref> [Hui95] </ref>. 2.1 Network Model A computer network G is modeled as an undirected graph represented as G (V; E), where V is the set of nodes and E is the set of edges or links connecting nodes.
Reference: [Hum91] <author> P.A. Humblet. </author> <title> Another adaptive shortest-path algorithm. </title> <journal> IEEE Trans. Commun., </journal> <volume> 39(6) </volume> <pages> 995-1003, </pages> <month> June </month> <year> 1991. </year> <month> 151 </month>
Reference-contexts: BGP [RL94] exchanges distance vectors that specify complete paths to destinations. EIGRP [Far93] uses a loop-free routing algorithm called DUAL [GLA92a], which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops. Recently, distributed shortest-path algorithms <ref> [CRKGLA89, Hag83, Hum91, RF91, Mur94] </ref> that utilize information regarding the length and second-to-last hop (predecessor 17 or node next to the last hop) of the shortest path to each destination have been proposed (path-finding algorithms) to eliminate the counting-to-infinity problem of DBF. 2.4 Path-Finding Algorithms Path-finding algorithms eliminate the counting-to-infinity problem <p> The sequence of predecessors encountered during such a trace represents a path from n1 to n2. This is referred to as the implicit path or the path extracted from the predecessor node information [CRKGLA89]. Although path-finding algorithms provide a marked improvement over DBF, the existing path-finding algorithms <ref> [CRKGLA89, GLA86, Hag83, Hum91, RF91] </ref> do not eliminate the possibility of temporary loops. The algorithms we have proposed are similar to previous path-finding algorithms with respect to maintaining predecessor information in distance and routing tables. <p> Link or node failures, recoveries and link-cost changes are handled similarly. In contrast to PFA, which makes a node i check the consistency of predecessor information reported by all its neighbors each time it processes an event involving a neighbor k, all previous path-finding algorithms <ref> [CRKGLA89, Hum91, RF91] </ref> check the consistency of the predecessor only for the neighbor associated with the input event. This unique feature of PFA accounts for its fast convergence after a single resource failure or recovery as it eliminates more temporary looping situations than previous path-finding algorithms. <p> Lemma 3.2 shows that this traversal correctly enforces Property 1, without having to traverse an entire implicit path; as the simulation results presented in Section 3.2.3 show, this makes LPA considerably more efficient than other prior path finding algorithms <ref> [CRKGLA89, Hum91] </ref>. <p> In contrast, all previous path-finding algorithms <ref> [CRKGLA89, Hum91, RF91] </ref> check the consistency of the predecessor only for the neighbor associated with the input event. This unique feature of WRP accounts for its fast convergence after a single resource failure or recovery as it eliminates more temporary looping situations than previous path-finding algorithms.
Reference: [Jaf88] <author> J.M. Jaffe. </author> <title> Hierarchical clustering with topology databases. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 15 </volume> <pages> 329-339, </pages> <year> 1988. </year>
Reference-contexts: Garcia-Luna-Aceves aims at removing transient temporary loops. DUAL is based on the diffusing algorithm for partial route updates proposed by E.W. Dijkstra and C.S. Scholten in 1980 [DS80] and on the remark that one cannot create a loop by picking a shorter path to the destination <ref> [Jaf88] </ref>. 23 DUAL uses an interneighbor coordination mechanism to achieve loop freedom. When there is no acceptable neighbor through which it can reach a given destination, the router will engage a diffusing computation.
Reference: [JM82] <author> J.M. Jaffe and F.M. Moss. </author> <title> A responsive routing algorithm for computer networks. </title> <journal> IEEE Trans. Commun., </journal> <volume> 30 </volume> <pages> 1758-1762, </pages> <month> July </month> <year> 1982. </year>
Reference-contexts: This class of algorithms is referred to as the pathfinding algorithms. However, these algorithms do not eliminate the possibility of temporary routing loops. All the loop-free algorithms reported to date rely on mechanisms that require routers to either synchronize along multiple hops <ref> [GLA92a, JM82, MS79] </ref> or exchange path information that can include all the routers in the path from source to destination [GLA92b]. We propose two routing algorithms for a flat network topology that belong to the class of path-finding algorithms. <p> This is because PFA does not use any interneighbor coordination mechanism to eliminate all temporary looping cases. 31 3.2 Loop-Free Path-Finding Algorithm All the loop-free algorithms reported to date rely on mechanisms that require routers to either synchronize along multiple hops <ref> [GLA92a, JM82, MS79] </ref>, or exchange path information that can include all the routers in the path from a source to destination [GLA92b]. We present the loop-free path-finding algorithm (LPA), which is the first routing algorithm that is loop-free at every instant and does not use either of these two techniques.
Reference: [Kam76] <author> F. Kamoun. </author> <title> Design Considerations for Large Computer Communications Network. </title> <type> PhD thesis, </type> <institution> University of California, Santa Cruz, 1976. UCLA-ENG-7642, Computer Science Dept. </institution>
Reference-contexts: Given that an optimal clustering technique has been determined, an efficient routing algorithm can be applied to these clusters. McQuillan [McQ74] proposed an extension to the old Arpanet routing algorithm for hierarchical networks. This scheme was analyzed by Kamoun and Kleinrock <ref> [Kam76] </ref>. According to McQuillan, the nodes in the network are organized into m levels of clusters, with each node belonging to exactly one cluster at each level of the hierarchy.
Reference: [KTA94] <author> H.T Kung, Blackwell. T, and Chapman. A. </author> <title> Credit-based flow control for ATM networks: credit update protocol, adaptive credit allocation, and statistical multiplexing. </title> <booktitle> In ACM SIGCOMM, volume 24 of CCR, </booktitle> <pages> pages 101-14, </pages> <address> London, UK, Aug/Sept 1994. </address> <publisher> ACM. </publisher>
Reference-contexts: The bandwidth must be available on a timely basis allowing application to almost instantaneously use the available bandwidth while maintaining low packet losses. Hop-by-hop credit-based schemes have a potential for the desired responsiveness <ref> [KTA94] </ref>. The performance of these schemes is independent of the input traffic pattern. These schemes can be used to fairly share the network bandwidth among competing flows. Also, when there is bandwidth contention, each flow obtains a fair share of the bandwidth. <p> This can be done either by estimating the credits available as in <ref> [KTA94] </ref> or by explicitly sending a marker. We opt for the estimation mechanism. Credits are sent to the immediate upstream neighbor, i.e., they propagate only one hop. The update period used for updating routing information is considered as one round-trip delay by a data packet.
Reference: [Lau86] <author> G.S. Lauer. </author> <title> Hierarchical routing design for suran. </title> <booktitle> In ICC, pages 4.2.1-4.2.10, </booktitle> <address> Toronto, Canada, </address> <month> June </month> <year> 1986. </year> <note> IEEE. </note>
Reference-contexts: Besides these algorithms, as part of the DARPA-sponsored SURAN project, a number of hierarchical network architectures have been proposed and analyzed for large packet radio networks <ref> [GLAS85, Lau86] </ref>. In these schemes, a modification of McQuillan's scheme has been used. The algorithms for computing the shortest paths include variations of DBF. Finally, Seeger and Khanna employ Ramamoorthy and Tsai's hierarchical scheme in a two-level hierarchy designed to reduce routing overhead in the DDN [SK86].
Reference: [LNT87] <author> B.M. Leiner, D.L. Nielson, and F.A. Tobagi. </author> <title> Issues in packet-radio network design. </title> <booktitle> volume 75 of Proc. of IEEE, </booktitle> <pages> pages 6-20, </pages> <month> Jan. </month> <year> 1987. </year>
Reference-contexts: Routing forms an integral part of this communications infrastructure. To adapt to the emerging applications, the routing protocols need to support wireless and mobile stations in addition to fixed stations. The routing protocols used in multihop packet radio network implemented in the past <ref> [Bea89, Bey90, LNT87] </ref> were based on shortest-path routing algorithms that have been typically based on DBF. DBF is susceptible to the counting-to-infinity problem and the bouncing-effect and will take a long time to converge. This is not desirable, more so in a wireless network since its bandwidth is very limited. <p> This protocol, which we call Wireless Routing Protocol (WRP), is based on path-finding algorithm (PFA) described in Chapter 3. Routing protocols used in multihop packet-radio networks implemented in the past <ref> [Bea89, Bey90, LNT87] </ref> are based on shortest-path routing algorithms that have been typically based on the distributed Bellman-Ford algorithm (DBF) [BG92].
Reference: [Mal94] <author> G. Malkin. </author> <note> RIP version 2: Carrying additional information. RFC 1723, </note> <month> Nov. </month> <year> 1994. </year>
Reference-contexts: LPA is extended for this purpose. HIPR constitutes the basis for a new Internet routing protocol that are as simple as RIPv2 <ref> [Mal94] </ref>. 4.2 Network Model Following the McQuillan's approach to area-based routing, hosts and networks can be organized into L levels of areas. An area at level k is called a k-area. <p> Like many other protocols, RIP is also based on Distributed Bellman-Ford algorithm (DBF) for shortest path computations. To cope with the counting-to-infinity problems of DBF, the longest path in RIP is limited to 15 hops. Recently, RIP version 2 <ref> [Mal94] </ref> has been proposed, which adds more information to RIP and reports the next hop information in the routing updates. However, this still does not prevent the counting-to-infinity problem. However, the format of RIP version 2 permits the specification of limited 148 path information.
Reference: [McQ74] <author> J. McQuillan. </author> <title> Adaptive routing algorithms for distributed computer networks. </title> <type> Technical report, </type> <institution> Bolt Beranek and Newman, </institution> <year> 1974. </year>
Reference-contexts: Each time the topology changes, all network nodes have to recompute their routing tables, which creates a peak of activity. Shortest Path First (SPF) <ref> [McQ74] </ref> is a link-state protocol in which each node computes and broadcasts the costs of its outgoing links periodically and applies Dijkstra's shortest path algorithm [BG92] to determine the next hop; other routing protocols that work on the same link-state approach are IS-IS [Ora90, Per91], and OSPF [Moy94]. <p> Well-known examples of routing protocols which are based on distance-vector algorithms (DVA), are the routing information protocol (RIP) [Hed88], the HELLO protocol [Mil83a], the gateway-to-gateway protocol (GGP) [HS82], the exterior gateway protocol (EGP) [Mil83b] and the old Arpanet routing protocol <ref> [McQ74] </ref>. All these DVAs have used variants of the distributed Bellman-Ford algorithm (DBF) for shortest-path computation [BG92]. Distance-vector algorithms perform their route computation on a per-destination basis. If a link fails, only routes for those destinations which were routed over the failed link need to be recomputed. <p> In this chapter, we present a hierarchical routing algorithm which we call Hierarchical Information Path-based Routing (HIPR), which can be used in large systems. 4.1 Prior Work Hierarchical routing for datagram computer networks was first proposed by McQuillan <ref> [McQ74] </ref> to reduce the overhead by limiting the amount of routing information each routing node maintains and to reduce the length of the routing table. <p> It then becomes important to determine a specific clustering structure, cluster size, and the number of clusters that will result in a minimum table length. Given that an optimal clustering technique has been determined, an efficient routing algorithm can be applied to these clusters. McQuillan <ref> [McQ74] </ref> proposed an extension to the old Arpanet routing algorithm for hierarchical networks. This scheme was analyzed by Kamoun and Kleinrock [Kam76].
Reference: [MGLA94] <author> Shree Murthy and J.J. Garcia-Luna-Aceves. </author> <title> A more efficient path-finding algorithm. </title> <booktitle> In 28th Asilomar Conference, </booktitle> <pages> pages 229-233, </pages> <address> Pacific Groove, California, </address> <month> Nov. </month> <year> 1994. </year>
Reference-contexts: The resulting simplified version of WRP we simulated is simply the path finding algorithm (PFA), and is the same basic algorithm first described in <ref> [MGLA94] </ref>. Similarly, ILS, DBF, and DUAL correspond to the ideal case of the best protocols that could be designed based on these algorithms. The simulations were run on several network topologies such as Los-Nettos, Nsfnet and Arpanet.
Reference: [MGLA95] <author> Shree Murthy and J.J. Garcia-Luna-Aceves. </author> <title> A routing protocol for packet-radio networks. </title> <booktitle> In Mobile Computing and Networking Conference, </booktitle> <address> Berkeley, CA, </address> <month> Nov. </month> <year> 1995. </year> <note> ACM. </note>
Reference-contexts: Reliable message transmission can be easily incorporated into the routing protocol (e.g. <ref> [MGLA95, Moy94] </ref>) * All update messages, changes in the link-cost, link failures and link recoveries are processed one at a time in the order in which they occur. 13 Each node is given a unique identifier. Any link cost can vary over time but is always positive.
Reference: [MGLA96] <author> Shree Murthy and J.J. Garcia-Luna-Aceves. </author> <title> A routing protocol for wireless networks. Mobile Networks and Applications, </title> <type> 1(2), </type> <year> 1996. </year> <title> Special Issue on Routing in Mobile Communications Network. </title>
Reference-contexts: In essence, this proof is very much similar to that of the path-finding algorithm (PFA) on which WRP is based is correct. The proof of correctness is given in <ref> [MGLA96] </ref>. WRP's time complexity is O (h) in the worst-case, where h is the height of the routing tree.
Reference: [Mil83a] <author> D. Mills. </author> <title> DCN local network protocols. </title> <type> RFC 891, </type> <month> Dec. </month> <year> 1983. </year>
Reference-contexts: Well-known examples of routing protocols which are based on distance-vector algorithms (DVA), are the routing information protocol (RIP) [Hed88], the HELLO protocol <ref> [Mil83a] </ref>, the gateway-to-gateway protocol (GGP) [HS82], the exterior gateway protocol (EGP) [Mil83b] and the old Arpanet routing protocol [McQ74]. All these DVAs have used variants of the distributed Bellman-Ford algorithm (DBF) for shortest-path computation [BG92]. Distance-vector algorithms perform their route computation on a per-destination basis.
Reference: [Mil83b] <author> D. Mills. </author> <title> Exterior gateway protocol. </title> <type> RFC 904, </type> <month> Dec. </month> <year> 1983. </year>
Reference-contexts: Well-known examples of routing protocols which are based on distance-vector algorithms (DVA), are the routing information protocol (RIP) [Hed88], the HELLO protocol [Mil83a], the gateway-to-gateway protocol (GGP) [HS82], the exterior gateway protocol (EGP) <ref> [Mil83b] </ref> and the old Arpanet routing protocol [McQ74]. All these DVAs have used variants of the distributed Bellman-Ford algorithm (DBF) for shortest-path computation [BG92]. Distance-vector algorithms perform their route computation on a per-destination basis.
Reference: [Moy94] <author> J. Moy. </author> <note> OSPF version 2. RFC 1583, </note> <month> March </month> <year> 1994. </year>
Reference-contexts: Upon receiving an update, each node recomputes shortest paths to all other nodes using Dijkstra's shortest path algorithm [BG92] and constructs its new routing table. Some of the link state protocols are the new Arpanet routing protocol [MRR80], OSPF <ref> [Moy94] </ref> and ISO's IS-IS [Ora90]. 1.1 Problem Formulation In this dissertation, we concentrate on routing techniques for packet-switched networks using distance-vector algorithms. These algorithms are applicable to circuit-switched networks also. In the next few paragraphs we outline the motivation for our work. <p> Path First (SPF) [McQ74] is a link-state protocol in which each node computes and broadcasts the costs of its outgoing links periodically and applies Dijkstra's shortest path algorithm [BG92] to determine the next hop; other routing protocols that work on the same link-state approach are IS-IS [Ora90, Per91], and OSPF <ref> [Moy94] </ref>. Distance-Vector Algorithms: Distance-vector algorithms are often referred to as Bellman-Ford algorithms because they are based on the shortest-path computation algorithm by R.E. Bellman [Bel57]. Distance-vector algorithms have been used in several packet-switched networks such as Arpanet. <p> Reliable message transmission can be easily incorporated into the routing protocol (e.g. <ref> [MGLA95, Moy94] </ref>) * All update messages, changes in the link-cost, link failures and link recoveries are processed one at a time in the order in which they occur. 13 Each node is given a unique identifier. Any link cost can vary over time but is always positive. <p> Some of the most popular routing protocols used in today's Internet (e.g., RIP [Hed88]) are based on the distributed Bellman-Ford algorithm (DBF) for shortest-path computation [BG92]. The counting-to-infinity problem is overcome in one of the three ways in existing Internet routing protocols. OSPF <ref> [Moy94] </ref> relies on broadcasting complete topology information among routers, and organizes the Internet hierarchically to cope with the overhead incurred with topology broadcast. BGP [RL94] exchanges distance vectors that specify complete paths to destinations. <p> In these schemes, a modification of McQuillan's scheme has been used. The algorithms for computing the shortest paths include variations of DBF. Finally, Seeger and Khanna employ Ramamoorthy and Tsai's hierarchical scheme in a two-level hierarchy designed to reduce routing overhead in the DDN [SK86]. OSPF <ref> [Moy94] </ref>, a link-state protocol, implements an area-based routing architecture similar to the above, and divides the Internet into areas connected by boundary nodes 58 linked by a physical backbone. Routing nodes connected to the backbone serve the role of boundary nodes called backbone nodes or border nodes.
Reference: [MRR78] <author> J.M. McQuillan, I. Richer, and E.C. Rosen. </author> <title> Arpanet routing algorithm improvements. </title> <type> Technical Report 3803, </type> <institution> BBN, </institution> <month> April </month> <year> 1978. </year>
Reference-contexts: There are two types of adaptive routing algorithms link state and distance vector algorithms. Link-state Algorithms: In the link-state approach, each router maintains a complete view of the network topology and the cost associated with each link <ref> [MRR78, MRR80] </ref>. The topology information is updated regularly. A router broadcasts regularly the link state information of all its outgoing links to all other routers by flooding. A complete computation of the best routes is done at each node using the information present in its local topology database.
Reference: [MRR80] <author> J. McQuillan, I. Richer, and E. Rosen. </author> <title> The new routing algorithm for the Arpanet. </title> <journal> IEEE Trans. on Commun., </journal> <volume> COM-28(5):711-19, </volume> <month> May </month> <year> 1980. </year> <month> 152 </month>
Reference-contexts: Upon receiving an update, each node recomputes shortest paths to all other nodes using Dijkstra's shortest path algorithm [BG92] and constructs its new routing table. Some of the link state protocols are the new Arpanet routing protocol <ref> [MRR80] </ref>, OSPF [Moy94] and ISO's IS-IS [Ora90]. 1.1 Problem Formulation In this dissertation, we concentrate on routing techniques for packet-switched networks using distance-vector algorithms. These algorithms are applicable to circuit-switched networks also. In the next few paragraphs we outline the motivation for our work. <p> There are two types of adaptive routing algorithms link state and distance vector algorithms. Link-state Algorithms: In the link-state approach, each router maintains a complete view of the network topology and the cost associated with each link <ref> [MRR78, MRR80] </ref>. The topology information is updated regularly. A router broadcasts regularly the link state information of all its outgoing links to all other routers by flooding. A complete computation of the best routes is done at each node using the information present in its local topology database. <p> Meanwhile, Ramamoorthy and Tsai [RT83] have extended the new Arpanet routing algorithm <ref> [MRR80] </ref> to work in a hierarchical network. In their scheme, nodes within the same 1-cluster use intra-cluster updates, according to the shortest-path first (SPF) algorithm, to obtain the shortest paths to one another.
Reference: [MS79] <author> P.M. Meerlin and A. Segall. </author> <title> A failsafe distributed routing algorithm. </title> <journal> IEEE Trans. Commun., </journal> <volume> 27 </volume> <pages> 1280-1288, </pages> <month> Sept. </month> <year> 1979. </year>
Reference-contexts: This class of algorithms is referred to as the pathfinding algorithms. However, these algorithms do not eliminate the possibility of temporary routing loops. All the loop-free algorithms reported to date rely on mechanisms that require routers to either synchronize along multiple hops <ref> [GLA92a, JM82, MS79] </ref> or exchange path information that can include all the routers in the path from source to destination [GLA92b]. We propose two routing algorithms for a flat network topology that belong to the class of path-finding algorithms. <p> This is because PFA does not use any interneighbor coordination mechanism to eliminate all temporary looping cases. 31 3.2 Loop-Free Path-Finding Algorithm All the loop-free algorithms reported to date rely on mechanisms that require routers to either synchronize along multiple hops <ref> [GLA92a, JM82, MS79] </ref>, or exchange path information that can include all the routers in the path from a source to destination [GLA92b]. We present the loop-free path-finding algorithm (LPA), which is the first routing algorithm that is loop-free at every instant and does not use either of these two techniques.
Reference: [Mur94] <author> Shree Murthy. </author> <title> Design and analysis of distributed routing algorithms. </title> <type> Master's thesis, </type> <institution> University of California, Santa Cruz, </institution> <month> June </month> <year> 1994. </year>
Reference-contexts: BGP [RL94] exchanges distance vectors that specify complete paths to destinations. EIGRP [Far93] uses a loop-free routing algorithm called DUAL [GLA92a], which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops. Recently, distributed shortest-path algorithms <ref> [CRKGLA89, Hag83, Hum91, RF91, Mur94] </ref> that utilize information regarding the length and second-to-last hop (predecessor 17 or node next to the last hop) of the shortest path to each destination have been proposed (path-finding algorithms) to eliminate the counting-to-infinity problem of DBF. 2.4 Path-Finding Algorithms Path-finding algorithms eliminate the counting-to-infinity problem <p> This illustrates how the efficient updating mechanism of PFA helps in the reduction of the formation of temporary routing loops in the explicit paths. The proofs of correctness, convergence and complexity of PFA are given elsewhere <ref> [Mur94] </ref>. The worst-case complexity of PFA has been found to be O (h) for single recovery/failure, h being the height of the tree. 3.1.2 Simulation Environment The performance of the proposed routing algorithms is evaluated by simulations.
Reference: [MW77] <author> J. </author> <title> McQuillan and D.C. Walden. The ARPANET design decisions. </title> <journal> Computer Networks, </journal> <volume> 1, </volume> <month> Aug. </month> <year> 1977. </year>
Reference-contexts: In other words, the process of route computation is carried out in a distributed way with each node performing part of the computation. Examples of distance-vector protocols include the old Arpanet algorithm <ref> [MW77] </ref>, RIP [Hed88] and Cisco's IGRP [Hed]. In a link-state algorithm, each node has complete information of the network topology using which each node computes routes independently. When a node detects any change in the link distances, it sends out an update to all other nodes by broadcasting.
Reference: [Ora90] <author> D. Oran. </author> <title> OSI IS-IS intra-domain routing protocol. </title> <type> RFC 1247, </type> <month> Feb. </month> <year> 1990. </year>
Reference-contexts: Upon receiving an update, each node recomputes shortest paths to all other nodes using Dijkstra's shortest path algorithm [BG92] and constructs its new routing table. Some of the link state protocols are the new Arpanet routing protocol [MRR80], OSPF [Moy94] and ISO's IS-IS <ref> [Ora90] </ref>. 1.1 Problem Formulation In this dissertation, we concentrate on routing techniques for packet-switched networks using distance-vector algorithms. These algorithms are applicable to circuit-switched networks also. In the next few paragraphs we outline the motivation for our work. <p> Shortest Path First (SPF) [McQ74] is a link-state protocol in which each node computes and broadcasts the costs of its outgoing links periodically and applies Dijkstra's shortest path algorithm [BG92] to determine the next hop; other routing protocols that work on the same link-state approach are IS-IS <ref> [Ora90, Per91] </ref>, and OSPF [Moy94]. Distance-Vector Algorithms: Distance-vector algorithms are often referred to as Bellman-Ford algorithms because they are based on the shortest-path computation algorithm by R.E. Bellman [Bel57]. Distance-vector algorithms have been used in several packet-switched networks such as Arpanet.
Reference: [OSV94] <author> C. Ozveren, R. Simcoe, and G. Varghese. </author> <title> Reliable and efficient hop-by-hop flow control. </title> <booktitle> In SIGCOMM, </booktitle> <pages> pages 89-110, </pages> <address> London, Aug/Sept. </address> <year> 1994. </year>
Reference-contexts: credits for a given destination j, then CR i j is set to zero. 6.2.5 Correctness of Credit-based Scheme The correctness of the credit based mechanism (i.e., showing that it has no deadlocks and that packets are not dropped) can be proven in a similar way as for virtual-circuit connections <ref> [OSV94] </ref>.
Reference: [PB94] <author> Charles E. Perkins and Pravin Bhagwat. </author> <title> Highly dynamic destination-sequenced distance-vector routing (DSDV) for mobile computers. </title> <booktitle> In SIG-COMM, </booktitle> <pages> pages 234-244. </pages> <publisher> ACM, </publisher> <year> 1994. </year>
Reference-contexts: Therefore, there is a need for a new routing protocol, which is devoid of all these drawbacks. In the recent past, a number of efforts have been made to address the limitation of DBF and topology broadcast in mobile wireless networks. One such effort is the DSDV protocol <ref> [PB94] </ref>. In this protocol, each mobile host, which is a specialized router, periodically advertises its view of the interconnection topology to other mobile hosts within the network to maintain an up to date network state information.
Reference: [Per91] <author> Radia Perlman. </author> <title> A comparison between two routing protocols: </title> <journal> OSPF and IS-IS. In IEEE Network, </journal> <volume> volume 5, </volume> <pages> pages 18-24, </pages> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: Shortest Path First (SPF) [McQ74] is a link-state protocol in which each node computes and broadcasts the costs of its outgoing links periodically and applies Dijkstra's shortest path algorithm [BG92] to determine the next hop; other routing protocols that work on the same link-state approach are IS-IS <ref> [Ora90, Per91] </ref>, and OSPF [Moy94]. Distance-Vector Algorithms: Distance-vector algorithms are often referred to as Bellman-Ford algorithms because they are based on the shortest-path computation algorithm by R.E. Bellman [Bel57]. Distance-vector algorithms have been used in several packet-switched networks such as Arpanet.
Reference: [PG93] <author> A.K. Parekh and R.G. Gallager. </author> <title> A generalized processor sharing approach to flow control in integrated services networks: The single-node case. </title> <journal> IEEE/ACM Trans. Networking, </journal> <volume> 1(3) </volume> <pages> 344-357, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Permit buckets consist of permits or tokens fed by periodic updates of credits. To schedule packet transmission, we assume a packet-by-packet generalized processor sharing (PGPS) server <ref> [PG93] </ref> at each node. To establish loop-free multipaths, we extend prior results on loop-free single-path routing algorithms introduced in [GLAM95]. <p> The way in which the routing table entries are updated is dependent on the underlying routing algorithm. 6.2.3 Packet Scheduling and Transmission Packet scheduling is done by means of permit bucket filters for each destination. The packet-by-packet generalized processor sharing (PGPS) scheme is used at each server <ref> [PG93] </ref>. Packets are transmitted as individual entities. A packet is said to have arrived only after the last bit has been received at a node. The server picks up the first packet that would complete service if no additional packets would arrive. <p> For a given destination j, credits arrive to a node i at a rate i j , which is called the token generation rate for destination j at node i. The bucket size, denoted by i j (t) <ref> [PG93] </ref> gives the maximum number of packets that can be transmitted from i to j at time t, and i j (t) is defined for each destination j at time t 0 as 110 j (t) = l i j (t) (6.1) where l i j (t) is the number of <p> This definition is much the same given in <ref> [PG93] </ref>, the only difference being that here we maintain leaky-bucket parameters for each active destination rather than for each session. Destination-based credits are aggregated at each node.
Reference: [PG94] <author> A.K. Parekh and R.G. Gallager. </author> <title> A generalized processor sharing approach to flow control in integrated services networks: The multiple node case. </title> <journal> IEEE/ACM Trans. Networking, </journal> <volume> 2(2) </volume> <pages> 137-150, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: This necessitates traffic scheduling to be done at each hop to regulate the incoming traffic instead of having intermediate nodes 109 as just forwarding nodes as in a connection-oriented architecture <ref> [PG94] </ref>. PGPS servers are used at each node to regulate the incoming traffic. <p> Path delay can also be interpreted as the time it would take for a destination j backlog to clear when there are no more arrivals after time t. Parekh and Gallager have analyzed worst-case session delay in a connection-oriented network architecture <ref> [PG94] </ref>. We adopt a similar approach for each destination in a con-nectionless architecture. To do this, we assume a stable topology in which all routers have finite distances to each other. <p> With these constraints, the bound on the delay for a given destination can be obtained using a similar approach as in <ref> [PG94] </ref>. The delay on a link (i; k) (per hop delay) d i jk for a given destination j is the sum of the queueing delay and the propagation delay on that link. <p> At every node, each destination is constrained independently by a permit bucket scheme. Following Parekh and Gallager's approximation <ref> [PG94] </ref>, we assume the links to be of infinite capacity. The results for the infinite capacity case upper-bound the finite capacity case. In other words, the results of infinite capacity can be used for any finite speed link.
Reference: [RF91] <author> B. Rajagopalan and M. Faiman. </author> <title> A responsive distributed shortest-path routing algorithm within autonomous systems. Internetworking: </title> <journal> Research and Experience, </journal> <volume> 2(1) </volume> <pages> 51-69, </pages> <month> March </month> <year> 1991. </year>
Reference-contexts: BGP [RL94] exchanges distance vectors that specify complete paths to destinations. EIGRP [Far93] uses a loop-free routing algorithm called DUAL [GLA92a], which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops. Recently, distributed shortest-path algorithms <ref> [CRKGLA89, Hag83, Hum91, RF91, Mur94] </ref> that utilize information regarding the length and second-to-last hop (predecessor 17 or node next to the last hop) of the shortest path to each destination have been proposed (path-finding algorithms) to eliminate the counting-to-infinity problem of DBF. 2.4 Path-Finding Algorithms Path-finding algorithms eliminate the counting-to-infinity problem <p> The sequence of predecessors encountered during such a trace represents a path from n1 to n2. This is referred to as the implicit path or the path extracted from the predecessor node information [CRKGLA89]. Although path-finding algorithms provide a marked improvement over DBF, the existing path-finding algorithms <ref> [CRKGLA89, GLA86, Hag83, Hum91, RF91] </ref> do not eliminate the possibility of temporary loops. The algorithms we have proposed are similar to previous path-finding algorithms with respect to maintaining predecessor information in distance and routing tables. <p> Link or node failures, recoveries and link-cost changes are handled similarly. In contrast to PFA, which makes a node i check the consistency of predecessor information reported by all its neighbors each time it processes an event involving a neighbor k, all previous path-finding algorithms <ref> [CRKGLA89, Hum91, RF91] </ref> check the consistency of the predecessor only for the neighbor associated with the input event. This unique feature of PFA accounts for its fast convergence after a single resource failure or recovery as it eliminates more temporary looping situations than previous path-finding algorithms. <p> In contrast, all previous path-finding algorithms <ref> [CRKGLA89, Hum91, RF91] </ref> check the consistency of the predecessor only for the neighbor associated with the input event. This unique feature of WRP accounts for its fast convergence after a single resource failure or recovery as it eliminates more temporary looping situations than previous path-finding algorithms.
Reference: [RL94] <author> Y. Rekhter and T. Li. </author> <title> Border gateway protocol 4 (BGP-4). RFC, </title> <month> Jan. </month> <year> 1994. </year>
Reference-contexts: The counting-to-infinity problem is overcome in one of the three ways in existing Internet routing protocols. OSPF [Moy94] relies on broadcasting complete topology information among routers, and organizes the Internet hierarchically to cope with the overhead incurred with topology broadcast. BGP <ref> [RL94] </ref> exchanges distance vectors that specify complete paths to destinations. EIGRP [Far93] uses a loop-free routing algorithm called DUAL [GLA92a], which is based on internodal coordination that can span multiple hops; DUAL also eliminates temporary routing loops.
Reference: [RT83] <author> C.V. Ramamoorthy and W. Tsai. </author> <title> An adaptive hierarchical routing algorithm. </title> <booktitle> In COMPSAC, </booktitle> <pages> pages 93-104. </pages> <publisher> IEEE, </publisher> <month> Nov. </month> <year> 1983. </year>
Reference-contexts: Meanwhile, Ramamoorthy and Tsai <ref> [RT83] </ref> have extended the new Arpanet routing algorithm [MRR80] to work in a hierarchical network. In their scheme, nodes within the same 1-cluster use intra-cluster updates, according to the shortest-path first (SPF) algorithm, to obtain the shortest paths to one another.
Reference: [Sch86] <author> M. Schwartz. </author> <title> Telecommunications Networks: Protocols, Modeling and Analysis. </title> <publisher> Addison-Wesley Publishing Co.,, </publisher> <address> Menlo Park, California, </address> <year> 1986. </year> <note> Chapter 6. </note>
Reference-contexts: Many approaches have been proposed in the past to solve, at least in part, the looping problems in DVAs. A widely known proposal is the split-horizon technique, which avoids ping-pong looping, whereby two nodes choose each other as the successor to a destination <ref> [Ceg75, Sch86] </ref>. Another well known technique which has been proposed is the use of hold downs. Both of these approaches do not completely solve the counting-to-infinity problem [GLA]. Some other solutions have also been proposed to overcome this problem [GLA]. network with n1 being the destination node.
Reference: [SK86] <author> J. Seeger and A. Khanna. </author> <title> Reducing routing overhead in a growing DDN. </title> <booktitle> In MILCOM, </booktitle> <volume> volume 1, </volume> <pages> pages 15.3.1-15.3.13. </pages> <publisher> IEEE, </publisher> <month> Oct. </month> <year> 1986. </year>
Reference-contexts: In these schemes, a modification of McQuillan's scheme has been used. The algorithms for computing the shortest paths include variations of DBF. Finally, Seeger and Khanna employ Ramamoorthy and Tsai's hierarchical scheme in a two-level hierarchy designed to reduce routing overhead in the DDN <ref> [SK86] </ref>. OSPF [Moy94], a link-state protocol, implements an area-based routing architecture similar to the above, and divides the Internet into areas connected by boundary nodes 58 linked by a physical backbone. Routing nodes connected to the backbone serve the role of boundary nodes called backbone nodes or border nodes.
Reference: [SMGLA96] <author> Brad Smith, Shree Murthy, and J.J. Garcia-Luna-Aceves. </author> <title> Securing distance-vector routing protocols. </title> <type> UCSC Technical Report, </type> <year> 1996. </year>
Reference-contexts: Finally, the scheduling mechanism that is used to map connection-oriented sessions to packet-switched flows can be a topic of further research. Some work is also being done in securing distance-vector routing protocols. <ref> [SMGLA96] </ref> gives the details of this protocol. 149
Reference: [Tan91] <author> Andrew S. Tanenbaum. </author> <title> Computer Networks. </title> <publisher> Prentice Hall, </publisher> <address> second edition, </address> <year> 1991. </year> <month> 153 </month>
Reference-contexts: Each packet is routed independently. Successive packets may follow different routes. While datagram networks have to do more work, they are more robust and adapt to congestion and failures easily. Table 1.1 summarizes some of the differences between datagrams and virtual circuits <ref> [Tan91] </ref>. Routing forms an integral part of the communications subnetwork. The routing algorithm is a part of the network layer which is responsible for deciding on which outbound queue an incoming packet should be transmitted. It guides packets through the communication network to their correct destinations.
Reference: [Wax88] <author> B.M. Waxman. </author> <title> Routing of multipoint connections. </title> <journal> J. Selected Areas in Commun., </journal> <volume> 6(9) </volume> <pages> 1617-1622, </pages> <year> 1988. </year>
Reference-contexts: The random graph model used to obtain random graphs is the one by Waxman <ref> [Wax88] </ref>, where graphs were constructed by distributing n nodes across a cartesian coordinate grid (RG1 model).
Reference: [Zau91] <author> W.T. Zaumen. </author> <title> Simulations in drama. Network Information System Center, </title> <booktitle> SRI International, </booktitle> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: It however marks that destination as unreachable for the packets that are being sent towards the broken pipe, but this will last only for the duration of the diffusing computation. Simulations have been developed using an actor-based, discrete-event simulation language called Drama <ref> [Zau91] </ref>, together with a network simulation library. The library treats both links and routers as actors. Link failures and recoveries are simulated by sending a link status message to the routers at the end points of the appropriate links.
Reference: [ZDE + 93] <author> Lixia Zhang, Steve Deering, Deborah Estrin, Scott Shenker, and Daniel Zap-pala. Rsvp: </author> <title> A new resource reservation protocol. </title> <journal> In Network Magazine, </journal> <volume> volume 7, </volume> <pages> pages 8-18. </pages> <publisher> IEEE, </publisher> <month> Sept. </month> <year> 1993. </year>
Reference-contexts: This enables the downstream nodes to respond immediately without having to wait till the nodes hear from their destinations about the credit availability. This scheme is similar to one-pass reservation mechanism of RSVP <ref> [ZDE + 93] </ref>. Sources send explicit credit requests to a destination requesting credits for data transmission. On receiving these requests, credits are allocated for that session; source and all the nodes along the way are informed about this.
Reference: [ZGLA92] <author> W.T. Zaumen and J.J. Garcia-Luna-Aceves. </author> <title> Dynamics of link-state and loop-free distance-vector routing algorithms. In Internetworking: </title> <journal> Research and Experience, </journal> <volume> volume 3, </volume> <pages> pages 161-188. </pages> <year> 1992. </year>
Reference-contexts: Figures 3.19 and 3.20 shows the average number of update messages when messages are in transit and the average length of messages as a function of the interarrival times between link-cost changes for PFA, DUAL and ILS respectively. This again is for Arpanet topology. From <ref> [ZGLA92] </ref>, it has been observed that the behavior of DUAL and ILS for multiple link-cost changes is similar for different network topologies; our conjecture is that the same is true for PFA also. <p> This again is for the Arpanet topology. From <ref> [ZGLA92] </ref>, it has been observed that the behavior of DUAL and ILS for multiple link-cost changes is similar for different network topologies; our conjecture is that the same is true for LPA.
References-found: 65

