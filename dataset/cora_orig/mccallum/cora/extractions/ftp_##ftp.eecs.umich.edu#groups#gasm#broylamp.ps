URL: ftp://ftp.eecs.umich.edu/groups/gasm/broylamp.ps
Refering-URL: http://www.eecs.umich.edu/gasm/papers.html
Root-URL: http://www.cs.umich.edu
Title: Broy-Lamport Specification Problem: A Gurevich Abstract State Machine Solution  
Author: James K. Huggins 
Date: December 19, 1996  
Address: Ann Arbor, MI, 48109-2122, USA.  
Affiliation: EECS Department, University of Michigan,  
Abstract: We apply the Gurevich Abstract State Machine methodology to a benchmark specification problem of Broy and Lamport. As part of the Dagstuhl Workshop on Reactive Systems, Manfred Broy and Leslie Lamport proposed a "Specification Problem" [1]. The problem calls for the specification and validation of a small distributed system dealing with a remote procedure call interface. Broy and Lamport invited proponents of different formal methods to specify and validate the system, in order to compare the results of different methods on a common problem. We take up the challenge and specify the problem using the Gurevich abstract state machine (ASM) methodology. This paper is self-contained. In Section 1, we present an introduction to Gurevich abstract state machines, including real-time machines. The remaining sections contain the original problem description of Broy and Lamport, interspersed with our ASM specifications and validations. Acknowledgements. The suggestion to give a ASM solution to this problem was made by Egon Borger and Yuri Gurevich; in particular, Yuri Gurevich actively contributed to an early version of the work [6]. Leslie Lamport made comments on an early draft of this work; Chuck Wallace made comments on a later draft. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Manfred Broy and Leslie Lamport, </author> <title> "Specification Problem", </title> <type> unpublished manuscript. </type>
Reference: [2] <author> Y. Gurevich, </author> <title> "Evolving Algebras: An Attempt to Discover Semantics", </title> <booktitle> Current Trends in Theoretical Computer Science, </booktitle> <editor> eds. G. Rozenberg and A. Salomaa, </editor> <publisher> World Scientific, </publisher> <year> 1993, </year> <pages> 266-292. </pages> <note> (First published in Bull. EATCS 57 (1991), 264-284.) 15 </note>
Reference-contexts: 1 Gurevich Abstract State Machines Gurevich abstract state machines, formerly known as evolving algebras or ealgebras, were introduced in <ref> [2] </ref>; a more complete definition (including distributed aspects) appeared in [3]. A discussion of real-time ASMs appeared most recently in [4]. We present here a self-contained introduction to ASMs. Sections 1.1 through 1.4 describe distributed ASMs (adapted from [5]); section 1.5 describes real-time ASMs.
Reference: [3] <author> Yuri Gurevich, </author> <title> "Evolving Algebras 1993: Lipari Guide", in Specification and Validation Methods, </title> <editor> ed. E. Borger, </editor> <publisher> Oxford University Press, </publisher> <year> 1995, </year> <pages> 9-36. </pages>
Reference-contexts: 1 Gurevich Abstract State Machines Gurevich abstract state machines, formerly known as evolving algebras or ealgebras, were introduced in [2]; a more complete definition (including distributed aspects) appeared in <ref> [3] </ref>. A discussion of real-time ASMs appeared most recently in [4]. We present here a self-contained introduction to ASMs. Sections 1.1 through 1.4 describe distributed ASMs (adapted from [5]); section 1.5 describes real-time ASMs.
Reference: [4] <author> Yuri Gurevich and James K. Huggins, </author> <title> "The Railroad Crossing Problem: An Experiment with Instantaneous Actions and Immediate Reactions," </title> <booktitle> in Computer Science Logic, Selected papers from CSL'95, </booktitle> <editor> ed. H. K. Buning, </editor> <booktitle> Springer Lecture Notes in Computer Science 1092, </booktitle> <year> 1996, </year> <pages> 266-290. </pages>
Reference-contexts: 1 Gurevich Abstract State Machines Gurevich abstract state machines, formerly known as evolving algebras or ealgebras, were introduced in [2]; a more complete definition (including distributed aspects) appeared in [3]. A discussion of real-time ASMs appeared most recently in <ref> [4] </ref>. We present here a self-contained introduction to ASMs. Sections 1.1 through 1.4 describe distributed ASMs (adapted from [5]); section 1.5 describes real-time ASMs. <p> The notion of state is basically unchanged; what changes is the notion of run. The definitions presented here are taken from <ref> [4] </ref>; they may not be sufficient to model every real-time system but certainly suffice for the models to be presented in this paper. Let be a vocabulary with a universe symbol Reals which does not contain the nullary function CT. Let + be the extension of to include CT. <p> Problem 4 Write a formal specification of the Lossy RPC component. Clearly the requirements suggest the need for a modeling environment which includes time. We use the real-time ASM model presented in <ref> [4] </ref> and reviewed in Section 1. Implicit in the description above is the fact that every call and return occurs at a specific moment in time. Consequently, our ASM descriptions of calls and returns will need to record the time at which each call and return occurs.
Reference: [5] <author> Yuri Gurevich and James K. Huggins, </author> <title> "Equivalence is in the Eye of the Beholder", </title> <journal> Theoretical Computer Science, </journal> <volume> vol. 179, </volume> <month> June </month> <year> 1997, </year> <note> to appear. </note>
Reference-contexts: A discussion of real-time ASMs appeared most recently in [4]. We present here a self-contained introduction to ASMs. Sections 1.1 through 1.4 describe distributed ASMs (adapted from <ref> [5] </ref>); section 1.5 describes real-time ASMs. Those already familiar with ASMs may skip ahead to section 2. 1.1 States The states of a ASM are simply the structures of first-order logic, except that relations are treated as Boolean-valued functions.
Reference: [6] <author> James K. Huggins, </author> <title> "Broy-Lamport Specification Problem: An Evolving Algebras Solution", </title> <institution> University of Michigan EECS Department Technical Report CSE-TR-223-94. </institution> <month> 16 </month>
References-found: 6

