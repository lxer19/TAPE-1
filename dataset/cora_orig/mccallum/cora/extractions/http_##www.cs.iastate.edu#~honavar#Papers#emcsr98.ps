URL: http://www.cs.iastate.edu/~honavar/Papers/emcsr98.ps
Refering-URL: http://www.cs.iastate.edu/~honavar/honavar.html
Root-URL: 
Email: email: fyangjpdpaijhonavarjlmillerg@cs.iastate.edu  
Title: Mobile Intelligent Agents for Document Classification and Retrieval: A Machine Learning Approach  
Author: Jihoon Yang, Prashant Pai, Vasant Honavar and Les Miller 
Address: 226 Atanasoff Hall, Iowa  Ames, IA 50011. U.S.A.  
Affiliation: AI Research Group, Department of Computer Science  State University  
Abstract: This paper describes an implementation of intelligent, customizable mobile software agents for document classification and retrieval. The mobile agents are implemented using the Voyager platform. The agents learn user's interests by interacting with the user. Results of experiments using three different approaches - TFIDF, Bayesian and DistAl (neural network classifier) for the design of trainable document classifiers are presented. The performance of each classifier with and without feature subset selection (using genetic algorithms) was explored. Experiments with retrieval of journal paper abstracts and news articles demonstrate the feasibility of using machine learning to design mobile intelligent agents for customized information retrieval.
Abstract-found: 1
Intro-found: 1
Reference: [ Balabanovic and Shoham, 1997 ] <author> M. Balabanovic and Y. Shoham. </author> <title> Combining content-based and col-laborative recommendation. </title> <journal> Communications of the ACM, </journal> <month> March </month> <year> 1997. </year>
Reference-contexts: Document retrieval has been the subject of study for several decades [ Salton, 1982 ] . However, work on personalized document retrieval agents is relatively new. Some examples include WebWatcher [ Joachims et al., 1997 ] , Personal WebWatcher [ Mladenic, 1996 ] , Fab <ref> [ Balabanovic, 1997; Balabanovic and Shoham, 1997 ] </ref> which learn user interests using user feedback and recommend/prefetch web pages; and software agents for mail handling and electronic news filtering [ Maes, 1997 ] .
Reference: [ Balabanovic, 1997 ] <author> M. Balabanovic. </author> <title> An adaptive web page recommendation service. </title> <booktitle> In Proceedings of the First International Conference on Autonomous Agents, </booktitle> <year> 1997. </year>
Reference-contexts: Document retrieval has been the subject of study for several decades [ Salton, 1982 ] . However, work on personalized document retrieval agents is relatively new. Some examples include WebWatcher [ Joachims et al., 1997 ] , Personal WebWatcher [ Mladenic, 1996 ] , Fab <ref> [ Balabanovic, 1997; Balabanovic and Shoham, 1997 ] </ref> which learn user interests using user feedback and recommend/prefetch web pages; and software agents for mail handling and electronic news filtering [ Maes, 1997 ] .
Reference: [ Duda and Hart, 1973 ] <author> R. Duda and P. Hart. </author> <title> Pattern Classification and Scene Analysis. </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1973. </year>
Reference-contexts: We want to find a class that gives the highest conditional probability given a document d: arg max P (cjd) (1) By Bayes rule <ref> [ Duda and Hart, 1973 ] </ref> , P (cjd) = P It is clear that P (c) = P and jdj Y P (w i jc) in the Naive Bayesian classifier that assumes independence between terms.
Reference: [ Gallant, 1993 ] <author> S. Gallant. </author> <title> Neural Network Learning and Expert Systems. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1993. </year>
Reference-contexts: The process terminates when this process results in an empty training set (when the network correctly classifies the entire training set). When this happens, the training set becomes linearly separable in the transformed space defined by the hidden neurons. A perceptron learning algorithm (e.g., pocket algorithm <ref> [ Gallant, 1993 ] </ref> ) can be used to find a weight setting between the hidden and output neurons. In fact, it is possible to set the weights without going through an iterative process.
Reference: [ Gray et al., 1996 ] <author> R. Gray, D. Kotz, S. Nog, D. Rus, and G. Cybenko. </author> <title> Mobile agents for mobile comput-ing. </title> <type> Technical Report PCS-TR96-285, </type> <institution> Dartmouth College, </institution> <address> Hanover, NH, </address> <year> 1996. </year>
Reference-contexts: Most of them provide basic capabilities for creating, transporting, and managing mobile agents. An agent system, Agent TCL, is designed and implemented in <ref> [ Gray et al., 1996; Kotz et al., 1997 ] </ref> . It includes network-sensing tools and a docking system for agents to move between computers.

Reference: [ Joachims et al., 1997 ] <author> T. Joachims, D. Freitag, and T. Mitchell. Webwatcher: </author> <title> A tour guide for the world wide web. </title> <booktitle> In International Joint Conference on Artificial Intelligence, </booktitle> <year> 1997. </year>
Reference-contexts: Document retrieval has been the subject of study for several decades [ Salton, 1982 ] . However, work on personalized document retrieval agents is relatively new. Some examples include WebWatcher <ref> [ Joachims et al., 1997 ] </ref> , Personal WebWatcher [ Mladenic, 1996 ] , Fab [ Balabanovic, 1997; Balabanovic and Shoham, 1997 ] which learn user interests using user feedback and recommend/prefetch web pages; and software agents for mail handling and electronic news filtering [ Maes, 1997 ] .
Reference: [ Joachims, 1996 ] <author> T. Joachims. </author> <title> A probabilistic anal-ysis of the roccihio algorithm with tfidf for text categorization. </title> <type> Technical Report CMU-CS-96-118, </type> <institution> Carnegie Mellon University, </institution> <address> Pittsburgh, PA, </address> <year> 1996. </year>
Reference-contexts: Also, P (w i jc) can be obtained as suggested in <ref> [ Joachims, 1996 ] </ref> P (w i jc) = jF j + w 0 2jF j T F (w 0 ; c) where jF j is the size of the feature vector.
Reference: [ Kiniry and Zimmerman, 1997 ] <author> J. Kiniry and D. Zimmerman. </author> <title> A hands-on look at java mobile agents. </title> <booktitle> IEEE Internet Computing, </booktitle> <month> July/August </month> <year> 1997. </year>
Reference-contexts: It includes network-sensing tools and a docking system for agents to move between computers. Three leading commercial mobile agent systems General Magic's Odyssey 2 , IBM's Aglets 3 , and ObjectSpace's Voyager are introduced and compared in <ref> [ Kiniry and Zimmerman, 1997 ] </ref> . Voyager [ Obj, 1997 ] is designed to help developers produce high impact distributed systems quickly. Voy- ager is implemented entirely in Java and designed to use the Java language object model.
Reference: [ Koller and Sahami, 1996 ] <author> D. Koller and M. Sahami. </author> <title> Toward optimal feature selection. </title> <booktitle> In Machine Learning: Proceedings of the Thirteenth International Conference. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1996. </year>
Reference-contexts: Several authors have explored the use of feature subset selection in the design of document classifiers <ref> [ Koller and Sahami, 1996; 1997; Yang and Pedersen, 1997 ] </ref> . Genetic algorithms offer an attractive approach to feature subset selection in a variety of pattern classification applications including document classification, as demonstrated in [ Yang and Honavar, 1998a ] .
Reference: [ Koller and Sahami, 1997 ] <author> D. Koller and M. Sahami. </author> <title> Hierarchically classifying documents using very few words. </title> <booktitle> In International Conference on Machine Learning, </booktitle> <pages> pages 170-178, </pages> <year> 1997. </year>
Reference-contexts: Instead of going through the process of stemming and stopping for the huge original data to generate usable datasets, the three 4 The new version of Reuters dataset contains 21578 documents ([http://www.research.att.com/~lewis]). datasets (that had been generated from the origi-nal Reuters dataset based on the topics) in <ref> [ Koller and Sahami, 1997 ] </ref> are used in this paper: - Reuters1: There are 1568 features, 939 doc <br>- uments and 6 classes. - Reuters2: There are 435 features, 139 doc <br>- uments and 4 classes. - Reuters3: There are 1440 features, 834 doc <br>- uments and 8 classes.
Reference: [ Kotz et al., 1997 ] <author> D. Kotz, R. Gray, S. Nog, D. Rus, S. Chawla, and G. Cybenko. </author> <title> Agent tcl: </title> <booktitle> Targeting the needs of mobile computers. IEEE Internet Computing, </booktitle> <month> July/August </month> <year> 1997. </year>
Reference-contexts: Most of them provide basic capabilities for creating, transporting, and managing mobile agents. An agent system, Agent TCL, is designed and implemented in <ref> [ Gray et al., 1996; Kotz et al., 1997 ] </ref> . It includes network-sensing tools and a docking system for agents to move between computers.
Reference: [ Maes, 1997 ] <author> P. Maes. </author> <title> Agents that reduce work and information overload. </title> <editor> In J. Bradshaw, editor, </editor> <booktitle> Software Agents. </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1997. </year>
Reference-contexts: Of these, machine learning is perhaps the most practical approach for domains that require customization of agent behavior for several reasons, including the fact that it 1 [http://www.objectspace.com/voyager] requires minimal effort on the part of users and software developers <ref> [ Maes, 1997 ] </ref> . Document retrieval has been the subject of study for several decades [ Salton, 1982 ] . However, work on personalized document retrieval agents is relatively new. <p> Some examples include WebWatcher [ Joachims et al., 1997 ] , Personal WebWatcher [ Mladenic, 1996 ] , Fab [ Balabanovic, 1997; Balabanovic and Shoham, 1997 ] which learn user interests using user feedback and recommend/prefetch web pages; and software agents for mail handling and electronic news filtering <ref> [ Maes, 1997 ] </ref> . This paper presents an approach to design of intelligent agents for customized information retrieval using machine learning.
Reference: [ Mladenic, 1996 ] <author> D. Mladenic. </author> <title> Personal webwatcher: Design and implementation. </title> <type> Technical report, </type> <institution> J. Stefan Institute, Ljubljana, Slovenia, </institution> <year> 1996. </year>
Reference-contexts: Document retrieval has been the subject of study for several decades [ Salton, 1982 ] . However, work on personalized document retrieval agents is relatively new. Some examples include WebWatcher [ Joachims et al., 1997 ] , Personal WebWatcher <ref> [ Mladenic, 1996 ] </ref> , Fab [ Balabanovic, 1997; Balabanovic and Shoham, 1997 ] which learn user interests using user feedback and recommend/prefetch web pages; and software agents for mail handling and electronic news filtering [ Maes, 1997 ] .
Reference: [ Obj, 1997 ] <author> ObjectSpace, Inc. </author> <title> Voyager: The Agent ORB for Java. Core Technology User Guide, </title> <year> 1997. </year>
Reference-contexts: It includes network-sensing tools and a docking system for agents to move between computers. Three leading commercial mobile agent systems General Magic's Odyssey 2 , IBM's Aglets 3 , and ObjectSpace's Voyager are introduced and compared in [ Kiniry and Zimmerman, 1997 ] . Voyager <ref> [ Obj, 1997 ] </ref> is designed to help developers produce high impact distributed systems quickly. Voy- ager is implemented entirely in Java and designed to use the Java language object model. Voyager allows regular message syntax to construct remote objects, send them messages and move them between programs. <p> Voyager enables objects and other agents to send standard Java messages to an agent even as the agent is moving. In addition, Voyager allows us to remote-enable any Java class, even a third party library class, without modifying the class source in any way. (See <ref> [ Obj, 1997 ] </ref> for further details of the Voyager platform). 3 The Customizable Document Retrieval Problem A primary focus of this paper is on the design of customizable agents for information retrieval in general, and document classification and retrieval in particular.
Reference: [ Porter, 1980 ] <author> M Porter. </author> <title> An algorithm for suffix strip-ping. </title> <booktitle> Program, </booktitle> <volume> 14(3) </volume> <pages> 130-137, </pages> <year> 1980. </year>
Reference-contexts: Each abstract is converted into a feature vector after passing through the process of stemming <ref> [ Porter, 1980 ] </ref> and stopping. The former generates stems of terms, and the latter drops general terms that do not convey important meaning. A query was given to retrieve paper abstracts that is related to some topics we were interested in.
Reference: [ Rosenschein and Zlotkin, 1994 ] <author> J. Rosenschein and G. Zlotkin. </author> <title> Rules of Encounter : Designing Conventions for Automated Negotiation Among Computers. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1994. </year>
Reference-contexts: Multi- ple mobile agents, when equipped with the ability to communicate with each other, can negotiate, collaborate, and compete with each other as appropriate in the pursuit of their objectives <ref> [ Rosenschein and Zlotkin, 1994 ] </ref> . Mobile agents provide a potentially efficient framework for performing computation in a distributed fashion at sites where the relevant data is available instead of expensive shipping of large volumes of data across the network.
Reference: [ Russell and Norvig, 1995 ] <author> S. Russell and P. Norvig. </author> <title> Artificial Intelligence: A Modern Approach. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1995. </year>
Reference-contexts: 1 Introduction Agents are software or hardware entities that performs a set of tasks on behalf of a user with some degree of autonomy <ref> [ Russell and Norvig, 1995; Honavar, 1998 ] </ref> . In order to do this, an agent has to embody a certain amount of intelligence (e.g., the ability to choose among alternative courses of action, plan, communicate, adapt to changes in the environment, and learn from experience). <p> Foundation. changes that they perceive in their environment, deliberative agents that plan and act in a goal-directed fashion, utility-driven agents that act in ways designed to maximize a suitable utility function, learning agents which modify their behavior as a function of experience, and agents that combine different modes of behavior <ref> [ Russell and Norvig, 1995; Honavar, 1998 ] </ref> . To be useful, an agent also needs to interact with its host system and other agents. For certain applications, it is useful for agents be able to move within heterogeneous networks of computers.
Reference: [ Salton, 1982 ] <author> G. Salton. </author> <title> Introduction to Modern Information Retrieval. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1982. </year>
Reference-contexts: Document retrieval has been the subject of study for several decades <ref> [ Salton, 1982 ] </ref> . However, work on personalized document retrieval agents is relatively new.
Reference: [ Salton, 1989 ] <author> G. Salton. </author> <title> Automatic Text Processing: the Transformation, Analysis, and Retrieval of Information by Computer. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1989. </year>
Reference-contexts: Classification of documents necessarily has to involve some analysis of the contents of a document. In the absence of a satisfactory solution to the natural language understanding problem, most current approaches to document retrieval use a bag of words representation of documents <ref> [ Salton, 1989 ] </ref> . Thus, A document is represented as a vector of weights for terms (or words) from a vocabulary. <p> absence in a document; or term frequency can be used to indicate the number of times that the term appears in a document; or term frequency inverse document frequency can be used to measure the term frequency of a word in a document relative to the entire collection of documents <ref> [ Salton, 1989 ] </ref> . Let d be a document. Let w i be the ith word in d. The term frequency of w i , T F (w i ; d), is the number of times w i occurs in d. <p> Then, the term frequency inverse document frequency of w i is defined as T F (w i ; d) IDF (w i ) <ref> [ Salton, 1989 ] </ref> . Either the term frequency or the term frequency - inverse document frequency is used in the classifiers chosen in this paper. The task is to design a system that accurately classifies documents as interesting or not interesting.
Reference: [ White, 1997 ] <author> J. White. </author> <title> Mobile agents. </title> <editor> In J. Bradshaw, editor, </editor> <booktitle> Software Agents. </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1997. </year>
Reference-contexts: Unlike remote procedure calls (RPC) which require ongoing communication through a failsafe network from the time of initiation of the task until it its completion, a major advantage of mobile agents is that ongoing interaction does not require ongoing communication <ref> [ White, 1997 ] </ref> . Also, mobile agents can easily adjust their behavior as needed based on the status of the network. For example, in case of network failure, it can wait until the network connection is restored, or it can find alternative routes.
Reference: [ Yang and Honavar, 1998a ] <author> J. Yang and V. Honavar. </author> <title> Feature subset selection using a genetic algorithm. In Feature Extraction, Construction and Selection </title> - 
Reference-contexts: There are many advantages to reducing the input dimension using feature or term subset selection (the process of selecting a subset of the features from a much larger set of possibly redundant, irrelevant, or misleading features) <ref> [ Yang and Honavar, 1998a ] </ref> . Several authors have explored the use of feature subset selection in the design of document classifiers [ Koller and Sahami, 1996; 1997; Yang and Pedersen, 1997 ] . <p> Genetic algorithms offer an attractive approach to feature subset selection in a variety of pattern classification applications including document classification, as demonstrated in <ref> [ Yang and Honavar, 1998a ] </ref> . <p> Thus, the experiments reported in this paper explored the use of feature subset selection using genetic algorithms. 5 Implementation Details The TFIDF, Bayesian, and DistAl classifiers were implemented for document classification with and without feature subset selection using a genetic algorithm <ref> [ Yang and Honavar, 1998a; 1998b ] </ref> . The classifiers were trained (and feature subset selection was performed) using a subset of documents classified by the user as interesting or not interesting. The resulting classifiers were incorporated into mobile agents on the Voyager mobile agent platform.
References-found: 21

