URL: http://hal.cs.vt.edu/~jpv/tr91-3.ps
Refering-URL: http://hal.cs.vt.edu/~jpv/papers.html
Root-URL: http://www.cs.vt.edu
Title: EDGE-PACKING BY ISOMORPHIC SUBGRAPHS  
Author: John Paul C. Vergara and Lenwood S. Heath 
Address: 24061  
Affiliation: Department of Computer Science Virginia Polytechnic Institute and State University Blacksburg, Virginia  
Abstract: Maximum G Edge-Packing (EPack G ) is the problem of finding the maximum number of edge-disjoint isomorphic copies of a fixed guest graph G in a host graph H. The problem is primarily considered for several guest graphs (trees and cycles) and host graphs (arbitrary graphs, planar graphs and trees). We give polynomial-time algorithms when G is a 2-path or when H is a tree; we show the problem is NP-complete otherwise. Also, we propose straightforward greedy polynomial-time approximation algorithms which are at least 1=jE G j optimal. 
Abstract-found: 1
Intro-found: 1
Reference: [B] <author> Baker B. </author> <year> (1983), </year> <title> "Approximation algorithms for NP-complete problems on planar graphs", </title> <booktitle> in 24th Symposium on Foundations of Computer Science. </booktitle>
Reference-contexts: Many NP-complete graph problems which remain NP-complete if the graph involved is planar have been found to be solvable in polynomial time when the graph is outerplanar <ref> [B, J3] </ref>. We can, in fact, present a simple algorithm to solve EP ack G (outerplanar) where G is a triangle (3-cycle). Consider the dual of an outerplanar graph which we define as follows: Each face (except for the outer face) in the graph is a vertex in the dual.
Reference: [BJLSS] <author> Berman F., D.S. Johnson, T. Leighton, P.W. Shor, and L. </author> <title> Snyder (1990), "Generalized Planar Matching", </title> <journal> J. of Algorithms, </journal> <volume> 11, </volume> <pages> 153-184. </pages>
Reference-contexts: Kirkpatrick and Hell [KH] prove NP-completeness for this problem in general (reduction from 3DM) while Berman et al <ref> [BJLSS] </ref> prove NP-completeness for planar hosts (from Planar 3-SAT). The reduction technique used by Berman et al is to cascade copies of the fixed guest graph such that only alternating 4 copies may be chosen in a maximum set, thereby corresponding to true-or-false settings for the 3-SAT instance. <p> We use a similar technique in this paper and we elaborate on this later. Much work has been done on G Matching particularly because of its numerous applications in areas such as scheduling, computer network design, and wafer-scale integration <ref> [BM, KH, MS, BJLSS] </ref>. Applications for G Edge-Packing can be conceivably derived from G Matching since relaxing the vertex-disjoint constraint to edge-disjoint simply allows the existence of repeated or redundant nodes while utilizing as many links (between the nodes) as possible. <p> The method used is similar to that used by <ref> [BJLSS] </ref> in their generalized planar-matching NP-completeness proofs. The graph H (the EP ack G instance) consists of gadgets (subgraphs) representing the variables and clauses of the Planar 3-SAT instance. These gadgets contain cascaded copies of G so that choosing particular copies of G means excluding others. <p> This generalization technique was used by Kirkpatrick and Hell [KH] and Berman et al <ref> [BJLSS] </ref> in proving the completeness of Maximum G Matching. The proofs they had are both divided into two parts: guest graphs with unique maximum two-connected components and guest graphs which have more than one maximum two-connected component. The base cases for these two parts are 3-cycles and 2-paths, respectively. <p> The status of EP ack G is summarized in table 1. Still open for research is how to extend these results to other instances of EP ack G , such as for cyclic guests in general. The generalization technique used in proving Maximum G-Matching <ref> [KH, BJLSS] </ref> may serve as a suitable starting approach. There also remains the problem of determining classes of host graphs between planar graphs and trees where EP ack G is solvable in polynomial time (given P 6= NP). Outerplanar graphs are the most likely candidates.
Reference: [BM] <author> Bondy J.A. </author> <title> and U.S. Murty (1976), Graph Theory with Applications, </title> <publisher> North Hol-land. </publisher>
Reference-contexts: In fact, it has been found to be solvable in polynomial time when the guest graph is an edge by regular matching <ref> [PL, BM] </ref> but NP-complete for other connected guest graphs even if H is planar. Kirkpatrick and Hell [KH] prove NP-completeness for this problem in general (reduction from 3DM) while Berman et al [BJLSS] prove NP-completeness for planar hosts (from Planar 3-SAT). <p> We use a similar technique in this paper and we elaborate on this later. Much work has been done on G Matching particularly because of its numerous applications in areas such as scheduling, computer network design, and wafer-scale integration <ref> [BM, KH, MS, BJLSS] </ref>. Applications for G Edge-Packing can be conceivably derived from G Matching since relaxing the vertex-disjoint constraint to edge-disjoint simply allows the existence of repeated or redundant nodes while utilizing as many links (between the nodes) as possible. <p> It therefore suffices to present an algorithm which does exactly that|detects a maximum set of independent degree-3 vertices in a tree. We choose the tree to be rooted at a vertex of degree one (all trees have at least two of these <ref> [BM] </ref>). The algorithm (PACK-DUAL), like our previous algorithms, performs recursion on the subtrees of a tree rooted at the current vertex. The call is initially made with the root vertex which can never be in the independent set to begin with (it has degree 1).
Reference: [C1] <author> Colbourn C.J. </author> <year> (1987), </year> <title> The Combinatorics of Network Reliability, </title> <publisher> Oxford U. Press. </publisher>
Reference-contexts: There are other problems that may be viewed as edge-packings or edge-partitions of graphs. Colbourn <ref> [C1, C2] </ref> used edge-packing in the determination of network reliability. Edge-packing the representative graph of a network by spanning trees and then computing separately the reliabilities of these trees provide a lower bound for the reliability of the whole network.
Reference: [C2] <author> Colbourn C.J. </author> <year> (1988), </year> <title> "Edge-packings of graphs and network reliability", </title> <journal> Discrete Mathematics, </journal> <volume> 72, </volume> <pages> 49-61. </pages>
Reference-contexts: There are other problems that may be viewed as edge-packings or edge-partitions of graphs. Colbourn <ref> [C1, C2] </ref> used edge-packing in the determination of network reliability. Edge-packing the representative graph of a network by spanning trees and then computing separately the reliabilities of these trees provide a lower bound for the reliability of the whole network.
Reference: [C3] <author> Colbourn C.J. </author> <year> (1984), </year> <title> "The complexity of completing partial latin squares", </title> <journal> Discrete Applied Mathematics, </journal> <volume> 8, </volume> <pages> 25-30. </pages>
Reference-contexts: No conclusions in this case is made for stars or cycles with more than three edges. Colbourn <ref> [C3] </ref> studied EP art G in terms of the construction of latin squares which is in turn useful in experimental design theory.
Reference: [C4] <author> Corneil D.G., S. Masuyama and S.L. </author> <title> Hakimi (1991), "Edge-free packings of graphs", </title> <note> submitted to Discrete and Applied Mathematics. </note>
Reference-contexts: This paper shows that EP ack G is NP-complete for particular combinations of guest and host graphs. We also investigate the combinations for which the problem is polynomial-time solvable. Corneil et al <ref> [C4] </ref> have independently investigated EP ack G for arbitrary host graphs. They define a family of problems called edge-free packings, essentially equivalent to the formulation of EP ack G described in this paper. <p> Corollary 6.1 EP ack G , where G is a fixed tree or cycle, is NP-complete. In fact, this result has been proven by previous work <ref> [C4, H3, DF] </ref> as discussed in the introductory section. In fact, this arbitrary case has been completely resolved by Corneil et al [C4]. <p> Corollary 6.1 EP ack G , where G is a fixed tree or cycle, is NP-complete. In fact, this result has been proven by previous work [C4, H3, DF] as discussed in the introductory section. In fact, this arbitrary case has been completely resolved by Corneil et al <ref> [C4] </ref>. Theorem 6.1 EP ack G , where G is a fixed graph with 3 or more edges, is NP-complete . 7 OUTERPLANAR HOSTS Conjecture 7.1 EP ack G (outerplanar), where G is a fixed outerplanar graph, is solvable in polynomial time. <p> P: polynomial-time solvable, NPC: NP-complete, ?: conjectured, (): results are incomplete. guest graphs arbitrary planar outerplanar tree 2-path P P P P star NPC [DF] NPC P? P path NPC [DF] NPC [DF] P? P arbitrary tree NPC <ref> [C4] </ref> NPC P? P cycle NPC [H3] NPC (P,k=3) P arbitrary cyclic NPC [C4] NPC? P? P Also, we still have to prove whether 1=m G is indeed a tight bound for the approximation algorithms studied. <p> polynomial-time solvable, NPC: NP-complete, ?: conjectured, (): results are incomplete. guest graphs arbitrary planar outerplanar tree 2-path P P P P star NPC [DF] NPC P? P path NPC [DF] NPC [DF] P? P arbitrary tree NPC <ref> [C4] </ref> NPC P? P cycle NPC [H3] NPC (P,k=3) P arbitrary cyclic NPC [C4] NPC? P? P Also, we still have to prove whether 1=m G is indeed a tight bound for the approximation algorithms studied. In addition, determining the effects on this bound when the host graph is restricted to planar graphs, for instance, is certainly helpful.
Reference: [DF] <author> Dyer M.E. </author> <title> and A.M. Frieze (1985), "On the complexity of partitioning graphs into connected subgraphs", </title> <journal> Discrete Applied Mathematics, </journal> <volume> 10, </volume> <pages> 139-153. </pages>
Reference-contexts: QUESTION: Can the edges of H be partitioned into copies of G? EP art G has been studied by Holyer [H3, J2] and by Dyer and Frieze <ref> [DF] </ref>. For guest graphs which are either complete graphs or cycles, Holyer proves that EP art G is NP-complete by reducing from 3-Satisfiability (3-SAT), a known NP-complete problem. <p> For the clause gadgets, they stem from the center of the star. Figures 13 and 14 show what these gadgets look like for 5-stars. 5.2 k-paths as guests Theorem 5.2 EP ack kpath (planar) is NP-complete. Proof: Dyer and Frieze <ref> [DF] </ref> have proven that EP art G (and thus, EP ack G ) is NP-complete for planar host graphs when G is a k-path. Nevertheless, for consistency and completeness, we show the variable and clause gadgets of an alternate proof. <p> Corollary 6.1 EP ack G , where G is a fixed tree or cycle, is NP-complete. In fact, this result has been proven by previous work <ref> [C4, H3, DF] </ref> as discussed in the introductory section. In fact, this arbitrary case has been completely resolved by Corneil et al [C4]. <p> P: polynomial-time solvable, NPC: NP-complete, ?: conjectured, (): results are incomplete. guest graphs arbitrary planar outerplanar tree 2-path P P P P star NPC <ref> [DF] </ref> NPC P? P path NPC [DF] NPC [DF] P? P arbitrary tree NPC [C4] NPC P? P cycle NPC [H3] NPC (P,k=3) P arbitrary cyclic NPC [C4] NPC? P? P Also, we still have to prove whether 1=m G is indeed a tight bound for the approximation algorithms studied. <p> P: polynomial-time solvable, NPC: NP-complete, ?: conjectured, (): results are incomplete. guest graphs arbitrary planar outerplanar tree 2-path P P P P star NPC <ref> [DF] </ref> NPC P? P path NPC [DF] NPC [DF] P? P arbitrary tree NPC [C4] NPC P? P cycle NPC [H3] NPC (P,k=3) P arbitrary cyclic NPC [C4] NPC? P? P Also, we still have to prove whether 1=m G is indeed a tight bound for the approximation algorithms studied. <p> P: polynomial-time solvable, NPC: NP-complete, ?: conjectured, (): results are incomplete. guest graphs arbitrary planar outerplanar tree 2-path P P P P star NPC <ref> [DF] </ref> NPC P? P path NPC [DF] NPC [DF] P? P arbitrary tree NPC [C4] NPC P? P cycle NPC [H3] NPC (P,k=3) P arbitrary cyclic NPC [C4] NPC? P? P Also, we still have to prove whether 1=m G is indeed a tight bound for the approximation algorithms studied. <p> Another direction we can take is to look for guest graphs of a fixed size (in terms of the number of edges) but are not necessarily isomorphic to a given graph. Similar situations have been studied by Dyer and Frieze <ref> [DF] </ref>. Of course, we can, on the other hand, restrict the guest graphs to particular types such as paths or cycles but relax the restriction on size.
Reference: [F] <author> Fagin R. </author> <year> (1974), </year> <title> "Generalized first-order spectra and polynomial-time recognizable sets", </title> <editor> in Karp R. (ed.), </editor> <booktitle> Complexity of Computations, SIAM-AMS Proceedings, </booktitle> <volume> 7, </volume> <pages> 43-73. </pages>
Reference-contexts: The expression means that we look for the structure S that produces the set which contains the most number of elements such that each element x satisfies the predicate p (x; S; H). The notation is derived from the logical representation of NP problems first introduced by Fagin <ref> [F] </ref>. As an example, consider the maximization version of 3-SATISFIABILITY (MAX-3-SAT) where instead of finding the truth assignment which satisfies all the clauses, we look for one which satisfies the most number of clauses.
Reference: [FGH] <author> Fleischner H.J., D.P. Geller and F. </author> <title> Harary (1974), "Outerplanar graphs and weak duals", </title> <journal> J. Indian Math. Soc., </journal> <volume> 38, </volume> <pages> 215-219. </pages>
Reference-contexts: Figure 31 is an example of an outerplanar graph and its dual. Observe that the dual of an outerplanar graph is simply a collection of trees <ref> [FGH] </ref>. Also, detecting a maximum set of edge-disjoint triangles in an outerplanar graph is equivalent to finding a maximum set of independent (non-adjacent) degree-3 vertices in the dual. This is in turn done by treating each tree of the dual separately.
Reference: [GJ] <author> Garey M.R. </author> <title> and D.S. Johnson (1979), Computers and Intractability: A Guide to the Theory of NP-Completeness, W.H. </title> <publisher> Freeman. </publisher>
Reference-contexts: Other studies in edge-packing include packing by triangle free graphs (Monochromatic Triangle) or by treshold graphs (Treshold Number) <ref> [GJ] </ref>, packing complete graphs by trees [Y] and packing planar graphs by outerplanar graphs [H2]. <p> In this paper, we obtain NP-completeness results. NP-complete problems are the class of problems which are conjectured to have no polynomial-time solution but with the characteristic that if one problem from that class is polynomial-time solvable, then the entire class is polynomial-time solvable. Garey and Johnson <ref> [GJ] </ref> provide an extensive discussion of NP-completeness as well as a list of known NP-complete problems. This paper shows that EP ack G is NP-complete for particular combinations of guest and host graphs. We also investigate the combinations for which the problem is polynomial-time solvable.
Reference: [GT] <author> Goldberg A. and R. </author> <title> Tarjan (1988), "Finding the minimum-cost circulations by canceling negative cycles", </title> <booktitle> in 20th Ann. ACM Symposium on Theory of Computing. </booktitle>
Reference-contexts: Klein and Stein [KS] studied edge-packing graphs by cycles. Finding a maximal set of edge-disjoint cycles in a graph aids in solving the minimum-cost circulation problem <ref> [GT] </ref> which involves repeatedly finding a maximal set of weighted cycles in a weighted directed graph. Other studies in edge-packing include packing by triangle free graphs (Monochromatic Triangle) or by treshold graphs (Treshold Number) [GJ], packing complete graphs by trees [Y] and packing planar graphs by outerplanar graphs [H2].
Reference: [H1] <author> Hall M. </author> <year> (1986), </year> <title> Combinatorial Theory, </title> <publisher> John Wiley and Sons, Inc. </publisher>
Reference-contexts: The number of possible partitions of a set of size n such that each part is at most some size k is equivalent to the number of partitions of the set into k parts <ref> [H1, NW] </ref>. This, in turn, is equivalent to an expression which is of order O (n k1 ).
Reference: [H2] <author> Heath L.S. </author> <year> (1990), </year> <title> "Edge coloring planar graphs with two outerplanar subgraphs", </title> <booktitle> accepted to 2nd Annual ACM-SIAM Symposium on Discrete Algorithms. </booktitle>
Reference-contexts: Other studies in edge-packing include packing by triangle free graphs (Monochromatic Triangle) or by treshold graphs (Treshold Number) [GJ], packing complete graphs by trees [Y] and packing planar graphs by outerplanar graphs <ref> [H2] </ref>. In this paper, we investigate Maximum G Edge-Packing (EP ack G ), the problem of finding the maximum number of edge-disjoint copies of a fixed (guest) graph G = (V G ; E G ) in a (host) graph H = (V H ; E H ).
Reference: [H3] <author> Holyer I. </author> <title> (1981),"The NP-Completeness of some edge-partition problems", </title> <journal> SIAM J. Computing 10(4), </journal> <pages> 713-717. 55 </pages>
Reference-contexts: G EDGE-PARTITION (EP art G ) INSTANCE: A host graph H such that jE H j = KjE G j for some integer K. QUESTION: Can the edges of H be partitioned into copies of G? EP art G has been studied by Holyer <ref> [H3, J2] </ref> and by Dyer and Frieze [DF]. For guest graphs which are either complete graphs or cycles, Holyer proves that EP art G is NP-complete by reducing from 3-Satisfiability (3-SAT), a known NP-complete problem. <p> Corollary 6.1 EP ack G , where G is a fixed tree or cycle, is NP-complete. In fact, this result has been proven by previous work <ref> [C4, H3, DF] </ref> as discussed in the introductory section. In fact, this arbitrary case has been completely resolved by Corneil et al [C4]. <p> P: polynomial-time solvable, NPC: NP-complete, ?: conjectured, (): results are incomplete. guest graphs arbitrary planar outerplanar tree 2-path P P P P star NPC [DF] NPC P? P path NPC [DF] NPC [DF] P? P arbitrary tree NPC [C4] NPC P? P cycle NPC <ref> [H3] </ref> NPC (P,k=3) P arbitrary cyclic NPC [C4] NPC? P? P Also, we still have to prove whether 1=m G is indeed a tight bound for the approximation algorithms studied.
Reference: [J1] <author> Johnson D.S. </author> <year> (1974), </year> <title> "Approximation algorithms for combinatorial problems", </title> <journal> J. Computer and System Science, </journal> <volume> 9, </volume> <pages> 256-278. </pages>
Reference-contexts: Vertices in the Independent Set instance correspond to copies of G in the EP ack G instance while edges correspond to the "neighbor" relation. In fact, Johnson <ref> [J1] </ref> proposed an analogous algorithm for independent set and showed that there is no finite ratio R such that the result produced by the algorithm is R fl OP T (where OP T is the actual optimal solution).
Reference: [J2] <author> Johnson D.S. </author> <year> (1982), </year> <title> "The NP-completeness column: an ongoing guide", </title> <journal> J. of Algorithms, </journal> <volume> 3, </volume> <pages> 182-195. </pages>
Reference-contexts: G EDGE-PARTITION (EP art G ) INSTANCE: A host graph H such that jE H j = KjE G j for some integer K. QUESTION: Can the edges of H be partitioned into copies of G? EP art G has been studied by Holyer <ref> [H3, J2] </ref> and by Dyer and Frieze [DF]. For guest graphs which are either complete graphs or cycles, Holyer proves that EP art G is NP-complete by reducing from 3-Satisfiability (3-SAT), a known NP-complete problem.
Reference: [J3] <author> Johnson D.S. </author> <year> (1985), </year> <title> "The NP-completeness column: an ongoing guide", </title> <journal> J. of Algorithms, </journal> <volume> 16, </volume> <pages> 434-451. </pages>
Reference-contexts: Many NP-complete graph problems which remain NP-complete if the graph involved is planar have been found to be solvable in polynomial time when the graph is outerplanar <ref> [B, J3] </ref>. We can, in fact, present a simple algorithm to solve EP ack G (outerplanar) where G is a triangle (3-cycle). Consider the dual of an outerplanar graph which we define as follows: Each face (except for the outer face) in the graph is a vertex in the dual. <p> We can investigate other classes within and without this hierarchy such as grid graphs, bipartite graphs, genus-k graphs, etc. Restricting the graphs involved to as many classes as possible clearly aids in completely understanding the complexity our problem. This approach has been used in numerous other graph-theoretic problems <ref> [J3] </ref>. Disconnected guest graphs is a situation which is also interesting. The NP-completeness results obtained in this paper probably extend to disconnected guest graphs (we first select a non-trivial connected component of G and use that in the reduction).
Reference: [KH] <author> Kirkpatrick D.G. and P. </author> <month> Hell </month> <year> (1978), </year> <title> "On the completeness of a generalized matching problem", </title> <booktitle> in 10th Ann. ACM Symposium on Theory of Computing. </booktitle>
Reference-contexts: In fact, it has been found to be solvable in polynomial time when the guest graph is an edge by regular matching [PL, BM] but NP-complete for other connected guest graphs even if H is planar. Kirkpatrick and Hell <ref> [KH] </ref> prove NP-completeness for this problem in general (reduction from 3DM) while Berman et al [BJLSS] prove NP-completeness for planar hosts (from Planar 3-SAT). <p> We use a similar technique in this paper and we elaborate on this later. Much work has been done on G Matching particularly because of its numerous applications in areas such as scheduling, computer network design, and wafer-scale integration <ref> [BM, KH, MS, BJLSS] </ref>. Applications for G Edge-Packing can be conceivably derived from G Matching since relaxing the vertex-disjoint constraint to edge-disjoint simply allows the existence of repeated or redundant nodes while utilizing as many links (between the nodes) as possible. <p> This generalization technique was used by Kirkpatrick and Hell <ref> [KH] </ref> and Berman et al [BJLSS] in proving the completeness of Maximum G Matching. The proofs they had are both divided into two parts: guest graphs with unique maximum two-connected components and guest graphs which have more than one maximum two-connected component. <p> The status of EP ack G is summarized in table 1. Still open for research is how to extend these results to other instances of EP ack G , such as for cyclic guests in general. The generalization technique used in proving Maximum G-Matching <ref> [KH, BJLSS] </ref> may serve as a suitable starting approach. There also remains the problem of determining classes of host graphs between planar graphs and trees where EP ack G is solvable in polynomial time (given P 6= NP). Outerplanar graphs are the most likely candidates.
Reference: [KS] <author> Klein P. and C. </author> <title> Stein (1990), "A Parallel algorithm for eliminating cycles in undirected graphs", </title> <note> to appear in Information Processing Letters. </note>
Reference-contexts: Edge-packing the graph by paths whose ends are on two specific terminals of the network provides a bound for the reliability between the two terminals in the same manner. Klein and Stein <ref> [KS] </ref> studied edge-packing graphs by cycles. Finding a maximal set of edge-disjoint cycles in a graph aids in solving the minimum-cost circulation problem [GT] which involves repeatedly finding a maximal set of weighted cycles in a weighted directed graph.
Reference: [L] <author> Lichtenstein D. </author> <year> (1982), </year> <title> "Planar satisfiability and its uses", </title> <journal> SIAM J. Computing, </journal> <volume> 11, </volume> <pages> 329-343. </pages>
Reference-contexts: Planar 3-SAT is the satisfiability problem with the added restrictions that each clause contain at most 3 literals and that the graph formed by the variables and clauses is planar. It is formally defined as follows <ref> [L] </ref>: PLANAR 3-SATISFIABILITY (PLANAR 3-SAT).
Reference: [MS] <author> Mirzaian A. and K. </author> <title> Steiglitz (1981), "A note on the complexity of the star-star concentrator problem", </title> <journal> IEEE Transactions on Communications, </journal> <volume> 39(10), </volume> <pages> 1549-1552. </pages>
Reference-contexts: We use a similar technique in this paper and we elaborate on this later. Much work has been done on G Matching particularly because of its numerous applications in areas such as scheduling, computer network design, and wafer-scale integration <ref> [BM, KH, MS, BJLSS] </ref>. Applications for G Edge-Packing can be conceivably derived from G Matching since relaxing the vertex-disjoint constraint to edge-disjoint simply allows the existence of repeated or redundant nodes while utilizing as many links (between the nodes) as possible.
Reference: [NW] <author> Nijenhuis A. and H.S. </author> <title> Wilf (1978), "Combinatorial Algorithms", 2nd ed., </title> <publisher> Academic Press. </publisher>
Reference-contexts: The number of possible partitions of a set of size n such that each part is at most some size k is equivalent to the number of partitions of the set into k parts <ref> [H1, NW] </ref>. This, in turn, is equivalent to an expression which is of order O (n k1 ).
Reference: [PR] <author> Panconesi A. and D. </author> <month> Ranjan </month> <year> (1990), </year> <title> "Quantifiers and approximation", </title> <booktitle> in 22nd Ann. ACM Symposium on Theory of Computing. </booktitle>
Reference-contexts: used in line 6 is not at all used in this proof which means there is a possibility that R is actually higher than what we claim. 8.2 EP ack G is in Max SNP There have been several attempts to classify problems in NP in terms of their approx-imability <ref> [PY, PR] </ref>. The first attempt was by Papadimitriou and Yannakakis [PY] where define the class Max SNP which consists of maximization versions of decision problems in NP.
Reference: [PY] <author> Papadimitriou C.H. and M. </author> <title> Yannakakis (1988), "Optimization, approximation, and complexity classes", </title> <booktitle> in 20th Ann. ACM Symposium on Theory of Computing. </booktitle>
Reference-contexts: used in line 6 is not at all used in this proof which means there is a possibility that R is actually higher than what we claim. 8.2 EP ack G is in Max SNP There have been several attempts to classify problems in NP in terms of their approx-imability <ref> [PY, PR] </ref>. The first attempt was by Papadimitriou and Yannakakis [PY] where define the class Max SNP which consists of maximization versions of decision problems in NP. <p> The first attempt was by Papadimitriou and Yannakakis <ref> [PY] </ref> where define the class Max SNP which consists of maximization versions of decision problems in NP.
Reference: [PL] <author> Peterson P.A. and M.C. </author> <title> Loui (1988), "The general maximum matching algorithm of Micali and Vazirani", </title> <journal> Algorithmica, </journal> <volume> 3, </volume> <pages> 511-513. </pages>
Reference-contexts: In fact, it has been found to be solvable in polynomial time when the guest graph is an edge by regular matching <ref> [PL, BM] </ref> but NP-complete for other connected guest graphs even if H is planar. Kirkpatrick and Hell [KH] prove NP-completeness for this problem in general (reduction from 3DM) while Berman et al [BJLSS] prove NP-completeness for planar hosts (from Planar 3-SAT). <p> This is the regular matching problem which, for arbitrary host graphs, are solved in O (n 1=2 H m H ) at best <ref> [PL] </ref>. We have shown in this section that the matching problem is simpler when the host graph is an edge graph.
Reference: [Y] <author> Yap H.P. </author> <year> (1988), </year> <title> "Packing of graphs|a survey", </title> <journal> Discrete Mathematics, </journal> <volume> 72, </volume> <pages> 395-404. </pages>
Reference-contexts: Other studies in edge-packing include packing by triangle free graphs (Monochromatic Triangle) or by treshold graphs (Treshold Number) [GJ], packing complete graphs by trees <ref> [Y] </ref> and packing planar graphs by outerplanar graphs [H2].
References-found: 27

