URL: http://www.cs.indiana.edu/database/Publications/comad94.ps
Refering-URL: http://www.cs.indiana.edu/database/Publications/index.html
Root-URL: http://www.cs.indiana.edu
Email: gandhim@indiana.edu  edrbtsn@cs.indiana.edu  
Title: A Data Model for Audio-Video Data  
Author: Munish Gandhi Edward L. Robertson 
Date: October 16, 1994  
Abstract: The convergence of computing, communication and cable technologies will necessitate the management of vast amounts of digital audio and video data. However, there are no formal data models which provide the underpinnings for the design and implementation of systems which will manage such data. In this paper, we present an algebraic formalism which attempts to satisfy such a need for an audio video data model. The central class of interest in the formalism is the track, which is both the major repository of structure and the unit of physical storage. Primitive track operations involve moving information of a single track, pointwise combination of two tracks, or manipulation of one track based on the structure of the another. Interrelations between primitives are explored and common user-level operations, such as splicing and overlaying, are defined in terms of the primitives. 
Abstract-found: 1
Intro-found: 1
Reference: [All83] <author> J. F. Allen. </author> <title> Maintaining Knowledge About Temporal Intervals. </title> <journal> Communications of the ACM, </journal> <volume> 26(11) </volume> <pages> 832-843, </pages> <month> November </month> <year> 1983. </year>
Reference-contexts: In fact, the algebra is sufficiently powerful to represent any of the 13 mutually exclusive temporal relationships between two intervals <ref> [All83] </ref> (`Before', `Equals', `Overlaps' and `Contains' are a few of these).
Reference: [BGT92] <author> C. Breiteneder, S. Gibbs, and D. Tsichritzis. </author> <title> Modelling of Audio / Video Data. </title> <editor> In D. Tsichritzis, editor, </editor> <booktitle> Object Frameworks, chapter 16, </booktitle> <pages> pages 293-310. </pages> <institution> Centre Universitaire d'Informatique, Universite de Geneve, </institution> <month> July </month> <year> 1992. </year>
Reference-contexts: This research was motivated by a search for a simple yet essential set of primitives which would form the core of any system which manages audio-video data. This is similar in spirit to the relational algebra 1 [Cod70]. In contrast, <ref> [BGT92, GBT92] </ref> describe an informal data model for audio-video data and its implementation. Other implementations of media servers focus on optimization of the storage structures [LS93] or on the network issues [RS93, LG90].
Reference: [CCT94] <author> J. Clifford, A. Croker, and A. Tuzhilin. </author> <title> On Completeness of Historical Relational Query Languages. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 19(1) </volume> <pages> 64-116, </pages> <month> March </month> <year> 1994. </year>
Reference-contexts: In contrast, [BGT92, GBT92] describe an informal data model for audio-video data and its implementation. Other implementations of media servers focus on optimization of the storage structures [LS93] or on the network issues [RS93, LG90]. Formalisms for sequence-like structures are targeted towards temporal data <ref> [RP92, CCT94] </ref>, genetic data [GNU94], or stock market data [SLR94]. In the next section (section 2), we discuss the structure of the algebraic domain. This will be followed by a discussion of the algebraic operators in section 3.
Reference: [Cod70] <author> E. Codd. </author> <title> A Relational Model for Large Shared Data Banks. </title> <journal> Communications of the ACM, </journal> <volume> 13(6), </volume> <month> June </month> <year> 1970. </year>
Reference-contexts: This research was motivated by a search for a simple yet essential set of primitives which would form the core of any system which manages audio-video data. This is similar in spirit to the relational algebra 1 <ref> [Cod70] </ref>. In contrast, [BGT92, GBT92] describe an informal data model for audio-video data and its implementation. Other implementations of media servers focus on optimization of the storage structures [LS93] or on the network issues [RS93, LG90].
Reference: [EN89] <author> R. Elmasri and S. B. Navathe. </author> <title> Fundamentals of database systems. </title> <publisher> Benjamin/Cummings Publishing Company, Inc., </publisher> <address> RedWood City, California, </address> <year> 1989. </year>
Reference-contexts: There is a significant body of work at the extremes of the granularity spectrum. For example, at the finest level of granularity, there exist many multimedia standards for interpreting bit streams as audio or video data [LG91, Wal91, Poh92]. At the coarsest level of granularity, current database technology <ref> [EN89] </ref> or other evolving paradigms [HBvR94, NKN91] may be used to organize a set of tracks. Approaches to organizing the data at the track level differ from ours in terms of their objectives.
Reference: [GBT92] <author> S. Gibbs, C. Breiteneder, and D. Tsichritzis. </author> <title> Audio / Video Databases: An Object-Oriented Approach. </title> <editor> In D. Tsichritzis, editor, </editor> <booktitle> Object Frameworks, chapter 15, </booktitle> <pages> pages 275-292. </pages> <institution> Centre Universitaire d'Informatique, Universite de Geneve, </institution> <month> July </month> <year> 1992. </year>
Reference-contexts: This research was motivated by a search for a simple yet essential set of primitives which would form the core of any system which manages audio-video data. This is similar in spirit to the relational algebra 1 [Cod70]. In contrast, <ref> [BGT92, GBT92] </ref> describe an informal data model for audio-video data and its implementation. Other implementations of media servers focus on optimization of the storage structures [LS93] or on the network issues [RS93, LG90].
Reference: [GL] <author> M. Gandhi and Robertson E. L. </author> <title> Equivalent algebraic and rule-based formalisms for audio-video data. </title> <note> Working paper. </note>
Reference-contexts: We will close by giving a concise definition of the algebra in section 5 and a few concluding remarks in section 6. 1 We have taken this a step further. Like the relational calculus, we have a declarative rule-based language <ref> [GL] </ref> equivalent to the algebra proposed in this paper. 2 2 Algebra: Domain A basic assumption of the data model is that media streams may be characterized by a sequence of finer grained elements.
Reference: [GNU94] <author> G. Grahne, M. Nykaenen, and E. Ukkonen. </author> <title> Reasoning about strings in databases. </title> <booktitle> In Proceedings of the Thirteenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems. </booktitle> <publisher> ACM Press, </publisher> <year> 1994. </year>
Reference-contexts: In contrast, [BGT92, GBT92] describe an informal data model for audio-video data and its implementation. Other implementations of media servers focus on optimization of the storage structures [LS93] or on the network issues [RS93, LG90]. Formalisms for sequence-like structures are targeted towards temporal data [RP92, CCT94], genetic data <ref> [GNU94] </ref>, or stock market data [SLR94]. In the next section (section 2), we discuss the structure of the algebraic domain. This will be followed by a discussion of the algebraic operators in section 3.
Reference: [HBvR94] <author> L. Hardman, D.C.A. Bulterman, and G. van Rossum. </author> <title> The Amster-dam Hypermedia Model: Adding Time and Context to the Dexter Model. </title> <journal> Communications of the ACM, </journal> <volume> 37(2) </volume> <pages> 50-62, </pages> <month> February </month> <year> 1994. </year> <month> 14 </month>
Reference-contexts: For example, at the finest level of granularity, there exist many multimedia standards for interpreting bit streams as audio or video data [LG91, Wal91, Poh92]. At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms <ref> [HBvR94, NKN91] </ref> may be used to organize a set of tracks. Approaches to organizing the data at the track level differ from ours in terms of their objectives. <p> Such a server may be used to provide basic functionality for organizing, synchronizing and creating temporal relationships between time-based elements in multimedia systems <ref> [HBvR94, NKN91] </ref>. The formalism also serves as a conceptual model for applications such as a console for editing and mixing movies, soundtracks, etc.
Reference: [LG90] <author> T.D.C Little and A. Ghafoor. </author> <title> Network Considerations for Dis--tributed Multimedia Object Composition and Communication. </title> <journal> IEEE Network Magazine, </journal> <pages> pages 32-49, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: This is similar in spirit to the relational algebra 1 [Cod70]. In contrast, [BGT92, GBT92] describe an informal data model for audio-video data and its implementation. Other implementations of media servers focus on optimization of the storage structures [LS93] or on the network issues <ref> [RS93, LG90] </ref>. Formalisms for sequence-like structures are targeted towards temporal data [RP92, CCT94], genetic data [GNU94], or stock market data [SLR94]. In the next section (section 2), we discuss the structure of the algebraic domain. This will be followed by a discussion of the algebraic operators in section 3.
Reference: [LG91] <author> D. Le Gall. </author> <title> MPEG: A Video Compression Standard for Multimedia Applications. </title> <journal> Communications of the ACM, </journal> <volume> 34(4) </volume> <pages> 30-44, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: The media library, in turn, views a track as being essentially atomic. There is a significant body of work at the extremes of the granularity spectrum. For example, at the finest level of granularity, there exist many multimedia standards for interpreting bit streams as audio or video data <ref> [LG91, Wal91, Poh92] </ref>. At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms [HBvR94, NKN91] may be used to organize a set of tracks. Approaches to organizing the data at the track level differ from ours in terms of their objectives. <p> Track atoms have a finer structure but that structure is interpretable by specific media format processors. To get an intuitive feel for track atoms, consider two digitial video formats - MPEG (Moving Pictures Experts Group) <ref> [LG91] </ref> and JPEG (Joint Photographic Experts Group) [Wal91]. JPEG video is a simple sequence of compressed frames. In this case, a compressed frame is appropriate as a track atom for JPEG streams. MPEG video, on the other hand, compresses (approximately 10) consecutive frames into a unit.
Reference: [LS93] <author> P. Lougher and D. Shepherd. </author> <title> The design of a storage server for continuous media. </title> <journal> The Computer Journal, </journal> <volume> 36(1) </volume> <pages> 32-42, </pages> <year> 1993. </year>
Reference-contexts: This is similar in spirit to the relational algebra 1 [Cod70]. In contrast, [BGT92, GBT92] describe an informal data model for audio-video data and its implementation. Other implementations of media servers focus on optimization of the storage structures <ref> [LS93] </ref> or on the network issues [RS93, LG90]. Formalisms for sequence-like structures are targeted towards temporal data [RP92, CCT94], genetic data [GNU94], or stock market data [SLR94]. In the next section (section 2), we discuss the structure of the algebraic domain.
Reference: [NKN91] <author> S. R. Newcomb, N. A. Kipp, and V. T. Newcomb. HyTime: </author> <title> The Hypermedia/Time-based Document Structuring Language. </title> <journal> Communications of the ACM, </journal> <volume> 34(11) </volume> <pages> 67-83, </pages> <month> November </month> <year> 1991. </year>
Reference-contexts: For example, at the finest level of granularity, there exist many multimedia standards for interpreting bit streams as audio or video data [LG91, Wal91, Poh92]. At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms <ref> [HBvR94, NKN91] </ref> may be used to organize a set of tracks. Approaches to organizing the data at the track level differ from ours in terms of their objectives. <p> Such a server may be used to provide basic functionality for organizing, synchronizing and creating temporal relationships between time-based elements in multimedia systems <ref> [HBvR94, NKN91] </ref>. The formalism also serves as a conceptual model for applications such as a console for editing and mixing movies, soundtracks, etc.
Reference: [Poh92] <author> K. C. Pohlmann. </author> <title> The Compact Disc Handbook. The Computer Music and Digital Audio series. A-R Editions, </title> <booktitle> 2nd edition, </booktitle> <year> 1992. </year>
Reference-contexts: The media library, in turn, views a track as being essentially atomic. There is a significant body of work at the extremes of the granularity spectrum. For example, at the finest level of granularity, there exist many multimedia standards for interpreting bit streams as audio or video data <ref> [LG91, Wal91, Poh92] </ref>. At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms [HBvR94, NKN91] may be used to organize a set of tracks. Approaches to organizing the data at the track level differ from ours in terms of their objectives.
Reference: [RP92] <author> J. F. Roddick and J. D. Patrck. </author> <title> Temporal Semantics in Information Systems A Survey. </title> <journal> Information Systems, </journal> <volume> 17(3) </volume> <pages> 249-267, </pages> <year> 1992. </year>
Reference-contexts: In contrast, [BGT92, GBT92] describe an informal data model for audio-video data and its implementation. Other implementations of media servers focus on optimization of the storage structures [LS93] or on the network issues [RS93, LG90]. Formalisms for sequence-like structures are targeted towards temporal data <ref> [RP92, CCT94] </ref>, genetic data [GNU94], or stock market data [SLR94]. In the next section (section 2), we discuss the structure of the algebraic domain. This will be followed by a discussion of the algebraic operators in section 3.
Reference: [RS93] <author> L.A. Rowe and B. Smith. </author> <title> A continuous media player. In Network and Operating System Support for Digital Audio and Video, </title> <booktitle> Third International Workshop, number 712 in Lecture Notes in Computer Science, </booktitle> <pages> pages 376-386. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: This is similar in spirit to the relational algebra 1 [Cod70]. In contrast, [BGT92, GBT92] describe an informal data model for audio-video data and its implementation. Other implementations of media servers focus on optimization of the storage structures [LS93] or on the network issues <ref> [RS93, LG90] </ref>. Formalisms for sequence-like structures are targeted towards temporal data [RP92, CCT94], genetic data [GNU94], or stock market data [SLR94]. In the next section (section 2), we discuss the structure of the algebraic domain. This will be followed by a discussion of the algebraic operators in section 3.
Reference: [SLR94] <author> P. Seshadri, M. Livny, and R. Ramakrishnan. </author> <title> Sequence Query Processing. </title> <booktitle> In Proceedings of the 1994 ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 430-441. </pages> <publisher> ACM Press, </publisher> <year> 1994. </year>
Reference-contexts: Other implementations of media servers focus on optimization of the storage structures [LS93] or on the network issues [RS93, LG90]. Formalisms for sequence-like structures are targeted towards temporal data [RP92, CCT94], genetic data [GNU94], or stock market data <ref> [SLR94] </ref>. In the next section (section 2), we discuss the structure of the algebraic domain. This will be followed by a discussion of the algebraic operators in section 3. Some of these operators have properties similar to the boolean algebra and these will be considered in section 4.
Reference: [TL82] <editor> D. C. Tsichritzis and F. H. Lochovsky. </editor> <title> Data Models. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1982. </year>
Reference-contexts: 1 Introduction The convergence of computing, communication and cable technologies will necessitate the management of vast amounts of digital audio and video data. However, there are no formal data models <ref> [TL82] </ref> which capture and manipulate the structure of such data. In this paper, we propose an algebraic data model as a formal basis for the management of continuous media such as audio and video. A system which uses this formalism is conceptualized as having a three layered architecture.
Reference: [Wal91] <author> G. Wallace. </author> <title> The JPEG Still Picture Compression Standard. </title> <journal> Communications of the ACM, </journal> <volume> 34(4) </volume> <pages> 30-44, </pages> <month> April </month> <year> 1991. </year> <month> 15 </month>
Reference-contexts: The media library, in turn, views a track as being essentially atomic. There is a significant body of work at the extremes of the granularity spectrum. For example, at the finest level of granularity, there exist many multimedia standards for interpreting bit streams as audio or video data <ref> [LG91, Wal91, Poh92] </ref>. At the coarsest level of granularity, current database technology [EN89] or other evolving paradigms [HBvR94, NKN91] may be used to organize a set of tracks. Approaches to organizing the data at the track level differ from ours in terms of their objectives. <p> Track atoms have a finer structure but that structure is interpretable by specific media format processors. To get an intuitive feel for track atoms, consider two digitial video formats - MPEG (Moving Pictures Experts Group) [LG91] and JPEG (Joint Photographic Experts Group) <ref> [Wal91] </ref>. JPEG video is a simple sequence of compressed frames. In this case, a compressed frame is appropriate as a track atom for JPEG streams. MPEG video, on the other hand, compresses (approximately 10) consecutive frames into a unit.
References-found: 19

