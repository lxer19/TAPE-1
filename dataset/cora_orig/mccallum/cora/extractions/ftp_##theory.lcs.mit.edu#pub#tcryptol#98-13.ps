URL: ftp://theory.lcs.mit.edu/pub/tcryptol/98-13.ps
Refering-URL: http://theory.lcs.mit.edu/~tcryptol/1998/98-13.html
Root-URL: 
Title: A Random Server Model for Private Information Retrieval (or How to Achieve Information Theoretic PIR
Author: Yael Gertner Shafi Goldwasser Tal Malkin 
Date: February 1998  
Abstract: Private information retrieval (PIR) schemes enable users to obtain information from databases while keeping their queries secret from the database managers. We propose a new model for PIR, utilizing auxiliary random servers to provide privacy services for database access. In this model, prior to any online communication where users request queries, the database engages in an initial preprocessing setup stage with the random servers. Using this model we achieve the first PIR information theoretic solution in which the database does not need to give away its data to be replicated, and with minimal on-line computation cost for the database. This solves privacy and efficiency problems inherent to all previous solutions. In particular, all previous information theoretic PIR schemes required multiple replications of the database into separate entities which are not allowed to communicate with each other; and in all previous schemes (including ones which do not achieve information theoretic security), the amount of computation performed by the database on-line for every query is at least linear in the size of the database. In contrast, in our solutions the database does not give away its contents to any other entity; and after the initial setup stage which costs at most O(n log n) in computation, the database needs to perform only O(1) amount of computation to answer questions of users on-line. All the extra on-line computation is done by the auxiliary random servers. fl An earlier version of this work appears as MIT technical report MIT-LCS-TR-715. This work was done with the support of DARPA grant DABT63-96-C-0018. y Department of Computer and Information Science, University of Pennsylvania, Philadelphia, PA 19104, USA. e-mail: ygertner@saul.cis.upenn.edu z Laboratory for Computer Science, Massachusetts Institute of Technology, Cambridge, MA 02139; and Department of Applied Math and Computer Science, The Weizmann Institute of Science, Rehovot, Israel. e-mail: shafi@theory.lcs.mit.edu x Laboratory for Computer Science, Massachusetts Institute of Technology, Cambridge, MA 02139. e-mail: tal@theory.lcs.mit.edu 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Abadi, J. Feigenbaum, J. Kilian. </author> <title> On Hiding Information from an Oracle. </title> <journal> JCSS, </journal> <volume> 39:1, </volume> <year> 1989. </year>
Reference: [2] <author> N. Adam, J. Wortmann. </author> <title> Security Control Methods for Statistical Databases: a comparative study, </title> <journal> ACM Computing Surveys, </journal> <volume> 21(1989). </volume>
Reference: [3] <author> A. Ambainis. </author> <title> Upper bound on the communication complexity of private information retrieval. </title> <booktitle> ICALP 97. </booktitle>
Reference-contexts: We achieve information theoretic privacy without data replication, and we minimize the on-line computation required from the database. Below we describe these problems and their solutions in more detail. 1.1 Problems With The Previous PIR Model Protocols for PIR and SPIR schemes, guaranteeing information theoretic privacy, appeared in <ref> [10, 3, 14, 11] </ref>. These solutions are based on the idea of using multiple copies of the database that are not allowed to communicate with each other. <p> In particular, for a constant number k of database copies, [10] with further improvement in <ref> [3] </ref> (for the case k &gt; 2), achieve information theoretic user security with communication complexity of n 2k1 , where n is the length of the data (in bits). <p> In section 3.2 we present another version, possessing some appealing extra properties for security and simplicity. We note however, that the starting point for the second reduction is any information retrieval scheme which has a linear reconstruction function. This is usually the case in existing PIR schemes (cf. <ref> [10, 3] </ref>). Finally, in section 3.3 we prove that the RDB construction satisfies theorem 1. Another benefit of our scheme is that it does not require the participation of the database owner D after the setup stage. Instead, the servers deal with all the on-line queries and computations. <p> This may be generalized to any underlying scheme with a linear reconstruction function. This requirement is very general, and is usually satisfied by existing PIR protocols (for example, protocols based on xoring subsets of locations in the data string, such as <ref> [10, 3] </ref>, the best PIR schemes known to date). 3.3 Analysis of the RDB Scheme: Proof of Theorem 1 We now analyze the RDB scheme in terms of complexity, correctness, and privacy, to show that it satisfies the bounds given in theorem 1.
Reference: [4] <author> D. Beaver, J. Feigenbaum. </author> <title> Hiding instances in Multioracle Queries. </title> <publisher> STACS,1990. </publisher>
Reference: [5] <author> D. Beaver, J. Feigenbaum, J. Kilian, P. Rogaway. </author> <title> Security with Low Communication Overhead. </title> <booktitle> CRYPTO 1990. </booktitle>
Reference: [6] <author> M. Ben-Or, S. Goldwasser, A. Wigderson. </author> <title> Completeness Theorems for Non-Cryptographic Fault-Tolerant Distributed Computation. </title> <booktitle> STOC 1988. </booktitle> <pages> 13 </pages>
Reference-contexts: Each server does not obtain any new information about x. Naturally, by the general multi-party theorems of <ref> [6, 8] </ref>, such setup stage protocol exist, but are very expensive. Instead, we design a special purpose one-round efficient protocol for this purpose.
Reference: [7] <author> D. Beaver. </author> <title> Commodity Based Cryptography. </title> <note> STOC 1997. </note>
Reference-contexts: None of the above PIR and SPIR works consider the data replication problem. Recently, independently from our work, <ref> [7] </ref> had suggested the commodity based model for cryptographic applications, which relies on servers to provide security, but not to be involved in the client computations. Although this model is related to ours we stress here some important differences.
Reference: [8] <editor> D. Chaum, C. Crepeau, I. Damgaard. </editor> <title> Multiparty Unconditionally Secure Protocols. </title> <note> STOC 1988. </note>
Reference-contexts: Each server does not obtain any new information about x. Naturally, by the general multi-party theorems of <ref> [6, 8] </ref>, such setup stage protocol exist, but are very expensive. Instead, we design a special purpose one-round efficient protocol for this purpose.
Reference: [9] <author> B. Chor, N. Gilboa. </author> <title> Computationally Private Information Retrieval. </title> <note> STOC 1997. </note>
Reference-contexts: They use a model where the multiple databases may use some shared randomness, to achieve reductions from PIR to SPIR, paying a multiplicative logarithmic factor in communication complexity. The work in <ref> [9] </ref> considers computational privacy for the user, and achieves a 2 database scheme with communication complexity of n * for any * &gt; 0, based on the existence of one way functions.
Reference: [10] <author> B. Chor, O. Goldreich, E. Kushilevitz, M. Sudan. </author> <note> Private Information Retrieval. FOCS 1995. </note>
Reference-contexts: In this model, the database is viewed as an n-bit string x out of which the user retrieves the i-th bit x i , while giving the database no information about his query i. The notion of PIR was introduced in <ref> [10] </ref>, where it was shown that if there is only one copy of the database available then (n) bits of communication are needed (for information theoretic user privacy). However, if there are k 2 non-communicating copies of the database, then there are solutions with much better (sublinear) communication complexity. <p> We achieve information theoretic privacy without data replication, and we minimize the on-line computation required from the database. Below we describe these problems and their solutions in more detail. 1.1 Problems With The Previous PIR Model Protocols for PIR and SPIR schemes, guaranteeing information theoretic privacy, appeared in <ref> [10, 3, 14, 11] </ref>. These solutions are based on the idea of using multiple copies of the database that are not allowed to communicate with each other. <p> The recent PIR scheme of [13] uses a single database, but guarantees only computational privacy under the assumption that distinguishing quadratic residues from non-residues modulo composites is intractable. In fact, it was shown in <ref> [10] </ref> that using a single database makes it impossible to achieve information theoretic privacy with sublinear communication complexity. <p> During the on-line stage, as before, the user communicates with the random servers and with the database to privately extract the answer to his query. 1.4 Related Work PIR was originally introduced by <ref> [10] </ref>, who were only concerned with protecting the user's (information theoretic) privacy. In particular, for a constant number k of database copies, [10] with further improvement in [3] (for the case k &gt; 2), achieve information theoretic user security with communication complexity of n 2k1 , where n is the length <p> before, the user communicates with the random servers and with the database to privately extract the answer to his query. 1.4 Related Work PIR was originally introduced by <ref> [10] </ref>, who were only concerned with protecting the user's (information theoretic) privacy. In particular, for a constant number k of database copies, [10] with further improvement in [3] (for the case k &gt; 2), achieve information theoretic user security with communication complexity of n 2k1 , where n is the length of the data (in bits). <p> We also address the case where upto t of the servers are faulty and do communicate with each other. Notions of Privacy: We define the following privacy properties for an information retrieval scheme. User privacy <ref> [10] </ref>: No single database (or server) can get any information about the user's query i from the on-line stage. That is, all the communication seen by a single database is identically distributed for every possible query. <p> Protocols: A private information retrieval (PIR) scheme is one that achieves user privacy, and a symmetrically private information retrieval (SPIR) scheme is one that achieves user privacy and database privacy. These two protocols were defined in <ref> [10, 11] </ref>, respectively. In this paper we will show how to incorporate the independence or total independence properties into PIR and SPIR schemes. Complexity: We define the communication complexity of an information retrieval protocol to be the total number of bits sent between the user, the database, and the servers. <p> In section 3.2 we present another version, possessing some appealing extra properties for security and simplicity. We note however, that the starting point for the second reduction is any information retrieval scheme which has a linear reconstruction function. This is usually the case in existing PIR schemes (cf. <ref> [10, 3] </ref>). Finally, in section 3.3 we prove that the RDB construction satisfies theorem 1. Another benefit of our scheme is that it does not require the participation of the database owner D after the setup stage. Instead, the servers deal with all the on-line queries and computations. <p> This may be generalized to any underlying scheme with a linear reconstruction function. This requirement is very general, and is usually satisfied by existing PIR protocols (for example, protocols based on xoring subsets of locations in the data string, such as <ref> [10, 3] </ref>, the best PIR schemes known to date). 3.3 Analysis of the RDB Scheme: Proof of Theorem 1 We now analyze the RDB scheme in terms of complexity, correctness, and privacy, to show that it satisfies the bounds given in theorem 1. <p> The following corollary is obtained by setting m = n * in the above theorem, where n * is some polynomial equal to the communication complexity of the underlying PIR scheme (it is conjectured in <ref> [10] </ref> that all information theoretic PIR schemes must have communication complexity of at least (n * ) for some *). <p> Thus, the online stage can be performed by log n + 1 parallel applications of S for one bit out of n. Further improvements are possible when methods for block retrieval which are more efficient than bit by bit are available (cf. <ref> [10] </ref>). Remarks During the setup stage we need two servers in order to achieve our information theoretic multi-party computation [(r; ); (r; ); x] ! [;; ;; (x r)]. For the online stage, we need the same number of servers k as in the original PIR scheme.
Reference: [11] <author> Y. Gertner, Y. Ishai, E. Kushilevitz, T. Malkin. </author> <title> Protecting Data Privacy in Private Information Retrieval Schemes. </title> <note> STOC 1998. </note>
Reference-contexts: However, if there are k 2 non-communicating copies of the database, then there are solutions with much better (sublinear) communication complexity. Symmetrically Private Information Retrieval (SPIR) <ref> [11] </ref> addresses the database's privacy as well by adding the requirement that the user, on the other hand, cannot obtain any information about the database in a single query except for a single physical value. <p> We achieve information theoretic privacy without data replication, and we minimize the on-line computation required from the database. Below we describe these problems and their solutions in more detail. 1.1 Problems With The Previous PIR Model Protocols for PIR and SPIR schemes, guaranteeing information theoretic privacy, appeared in <ref> [10, 3, 14, 11] </ref>. These solutions are based on the idea of using multiple copies of the database that are not allowed to communicate with each other. <p> In particular, for a constant number k of database copies, [10] with further improvement in [3] (for the case k &gt; 2), achieve information theoretic user security with communication complexity of n 2k1 , where n is the length of the data (in bits). Recently, <ref> [11] </ref> extended PIR to SPIR (Symmetrically private information retrieval), where the privacy of the data (with respect to the user) is considered as well. <p> That is, all the communication seen by a single database is identically distributed for every possible query. This definition can be extended to user l-privacy, where all communication seen by any coalition of upto l databases (servers) is identically distributed for every possible query. Database privacy <ref> [11] </ref>: The user cannot get any information about the data string other than its value in a single location. <p> Protocols: A private information retrieval (PIR) scheme is one that achieves user privacy, and a symmetrically private information retrieval (SPIR) scheme is one that achieves user privacy and database privacy. These two protocols were defined in <ref> [10, 11] </ref>, respectively. In this paper we will show how to incorporate the independence or total independence properties into PIR and SPIR schemes. Complexity: We define the communication complexity of an information retrieval protocol to be the total number of bits sent between the user, the database, and the servers.
Reference: [12] <author> O. Goldreich, S. Micali, A. Wigderson. </author> <title> How to Solve any Protocol Problem. </title> <note> STOC 1987. </note>
Reference: [13] <author> E. Kushilevitz, R. Ostrovsky. </author> <title> Replication is Not Needed: Single Database, </title> <note> Computationally-Private Information Retrieval. FOCS 1997 </note>
Reference-contexts: This allows the user to ask different questions from different copies of the database and combine their responses to get the answer to his query, without revealing his original query to any single database (or a coalition). The recent PIR scheme of <ref> [13] </ref> uses a single database, but guarantees only computational privacy under the assumption that distinguishing quadratic residues from non-residues modulo composites is intractable. In fact, it was shown in [10] that using a single database makes it impossible to achieve information theoretic privacy with sublinear communication complexity. <p> In the single database case (computational privacy) the complexity of the database computation is a function of both the size n of the database and the size of the security parameter underlying the cryptographic assumption made to ensure privacy. Specifically, in the single database solution of <ref> [13] </ref>, the computation takes a linear number of multiplications in a group whose size depends on the security parameter chosen for the quadratic residuosity problem. 1 Again, the overhead in computational complexity and lack of simplicity of existing schemes make it unlikely to be embraced as a solution by databases in <p> The work in [9] considers computational privacy for the user, and achieves a 2 database scheme with communication complexity of n * for any * &gt; 0, based on the existence of one way functions. As mentioned earlier <ref> [13] </ref> relies on a stronger computational assumption the quadratic residuosity problem to achieve a 1-database PIR scheme with computational privacy and communication complexity of n * for any * &gt; 0.
Reference: [14] <author> R. Ostrovksy, V. Shoup. </author> <title> Private Information Storage. </title> <note> STOC 1997. </note>
Reference-contexts: We achieve information theoretic privacy without data replication, and we minimize the on-line computation required from the database. Below we describe these problems and their solutions in more detail. 1.1 Problems With The Previous PIR Model Protocols for PIR and SPIR schemes, guaranteeing information theoretic privacy, appeared in <ref> [10, 3, 14, 11] </ref>. These solutions are based on the idea of using multiple copies of the database that are not allowed to communicate with each other. <p> As mentioned earlier [13] relies on a stronger computational assumption the quadratic residuosity problem to achieve a 1-database PIR scheme with computational privacy and communication complexity of n * for any * &gt; 0. The work in <ref> [14] </ref> generalizes PIR for private information storage, where a user can privately read and write into the database. This model differs from ours, since in our model users do not have write access into the database. <p> This results in a model compatible to our model of independence (although this approach cannot lead to total independence). We note that <ref> [14] </ref> independently 6 use a basic scheme which is essentially the same as our basic RDB scheme of section 3.1. <p> In section 3 we describe schemes achieving independence, and in section 4 we describe schemes achieving total independence. Conclusions and open problems are discussed in section 5 6 our results of section 3 were actually done previously to the publication of <ref> [14] </ref> 4 2 Notation and Definitions The Information Retrieval Model: The data string is a string of n bits denoted by x = x 1 ; : : : ; x n .
Reference: [15] <author> P. Tendick, and N. Natloff. </author> <title> A modified Random Perturbation Method for Database Security. </title> <journal> ACM Transactions on Database Systems, 19:1, </journal> <volume> pp.47-63, </volume> <year> 1994. </year> <month> 14 </month>
References-found: 15

