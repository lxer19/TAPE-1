URL: http://www.cse.psu.edu/~ugrain/vlsi-cad/MGAP/asap94-pcp.ps
Refering-URL: http://www.cse.psu.edu/~ugrain/publications.html
Root-URL: 
Note: Copyright  
Abstract: c fl1994 IEEE. All rights reserved. Personal use of this material is permitted. However, permission to reprint/republish this material for advertising or promotional purposes or for creating new collective works for resale or redistribution must be obtained from the IEEE. For information on obtaining permission, send a blank email message to info.pub.permission@ieee.org. By choosing to view this document, you agree to all provisions of the copyright laws protecting it. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. S. Bajwa, R. M. Owens, and M. J. Irwin. </author> <title> A Massively Parallel Micro-Grained, </title> <booktitle> VLSI Architecture. In VLSI Design '93, </booktitle> <pages> pages 250-255, </pages> <month> Jan. </month> <year> 1993. </year>
Reference-contexts: We end with conclusions in section 4. 2: Programming the Control Path The MGAP is a fine grain array processor which fits onto a single 9U fi 400 mm VME board and economically places close to a teraop of additional computing power into desktop workstations <ref> [1, 2, 3, 5, 8] </ref>. At a clock rate of 25 MHz, the board exhibits a performance of 0.8 teraops. The target application areas are signal and image processing, graph problems, sorting and searching, matrix computations, and problems in astronomy and computational biology. Fig. 1.
Reference: [2] <author> R. S. Bajwa, R. M. Owens, and M. J. Irwin. </author> <title> Image Processing with the MGAP: A Cost Effective Approach. </title> <booktitle> In Intl. Parallel Processing Symposium, </booktitle> <pages> pages 439-443, </pages> <month> Apr. </month> <year> 1993. </year>
Reference-contexts: We end with conclusions in section 4. 2: Programming the Control Path The MGAP is a fine grain array processor which fits onto a single 9U fi 400 mm VME board and economically places close to a teraop of additional computing power into desktop workstations <ref> [1, 2, 3, 5, 8] </ref>. At a clock rate of 25 MHz, the board exhibits a performance of 0.8 teraops. The target application areas are signal and image processing, graph problems, sorting and searching, matrix computations, and problems in astronomy and computational biology. Fig. 1.
Reference: [3] <author> M. Borah, C. Nagendra, R. M. Owens, and M. J. Irwin. </author> <title> The MGAP: A High Performance, User Programmable, Multifunctional Architecture for DSP. </title> <booktitle> In Hawaii International Conference on System Sciences, </booktitle> <month> Jan. </month> <year> 1994. </year>
Reference-contexts: We end with conclusions in section 4. 2: Programming the Control Path The MGAP is a fine grain array processor which fits onto a single 9U fi 400 mm VME board and economically places close to a teraop of additional computing power into desktop workstations <ref> [1, 2, 3, 5, 8] </ref>. At a clock rate of 25 MHz, the board exhibits a performance of 0.8 teraops. The target application areas are signal and image processing, graph problems, sorting and searching, matrix computations, and problems in astronomy and computational biology. Fig. 1.
Reference: [4] <institution> Data I/O Corporation. Abel 3.1 System Specific Information, </institution> <month> Feb </month> <year> 1989. </year>
Reference-contexts: A post-processor takes these truth tables as input and generates minimized equations for them. The program generator module maps them onto the PLD's (or FPGA's) and then generates program files for the PLD's (or FPGA's). In our case these are ABEL 1 programs for the PLD's <ref> [4] </ref>. This process takes no more than ten minutes per iteration. As a result the designer can arrive very quickly at an instruction set that meets the constraints of the application and the limited hardware available for implementing the control path.
Reference: [5] <author> M. J. Irwin and R. M. Owens. </author> <title> A Micro-Grained VLSI Signal Processor. </title> <booktitle> In ICASSP-92, </booktitle> <pages> pages 641-644, </pages> <month> Mar. </month> <year> 1992. </year>
Reference-contexts: As part of our work on fine grain arrays we have built a prototyping board, which runs off the backplane of a Sun-4 host [7]. At present we are using the board to evaluate a SIMD array which features an autonomous communication interconnect <ref> [5] </ref>. The board will also be used to evalute two other array cores one of which is an associative array and the other is a RAM-based array with computational and communication interconnect autonomy [6, 7]. <p> We end with conclusions in section 4. 2: Programming the Control Path The MGAP is a fine grain array processor which fits onto a single 9U fi 400 mm VME board and economically places close to a teraop of additional computing power into desktop workstations <ref> [1, 2, 3, 5, 8] </ref>. At a clock rate of 25 MHz, the board exhibits a performance of 0.8 teraops. The target application areas are signal and image processing, graph problems, sorting and searching, matrix computations, and problems in astronomy and computational biology. Fig. 1.
Reference: [6] <author> R. M. Owens and M. J. Irwin. </author> <title> A Two-Dimensional, Distributed Logic Processor. </title> <journal> IEEE Trans. on Comps., </journal> <volume> 40(10) </volume> <pages> 1094-1101, </pages> <month> Oct. </month> <year> 1991. </year>
Reference-contexts: The board will also be used to evalute two other array cores one of which is an associative array and the other is a RAM-based array with computational and communication interconnect autonomy <ref> [6, 7] </ref>. The fine grain array which is at the core of the data-path takes up half the area on the board while the programmable control path and the host interface make up the rest of the board.
Reference: [7] <author> R. M. Owens, M. J. Irwin, T. P. Kelliher, M. Vishwanath, and R. S. Bajwa. </author> <title> Implementing a Family of High Performance, </title> <booktitle> Micrograined Architectures. In Application Specific Array Processors, </booktitle> <pages> pages 191-205, </pages> <month> Aug. </month> <year> 1992. </year>
Reference-contexts: Given a fixed control path width, it is even possible to experiment with different data paths. As part of our work on fine grain arrays we have built a prototyping board, which runs off the backplane of a Sun-4 host <ref> [7] </ref>. At present we are using the board to evaluate a SIMD array which features an autonomous communication interconnect [5]. <p> The board will also be used to evalute two other array cores one of which is an associative array and the other is a RAM-based array with computational and communication interconnect autonomy <ref> [6, 7] </ref>. The fine grain array which is at the core of the data-path takes up half the area on the board while the programmable control path and the host interface make up the rest of the board. <p> In <ref> [7] </ref>, we discuss three different processors, namely the SIMD, the RAM-based and the associative processor. Because of our programmable control path, the same logic will be used with different data paths, but the differences in their basic structure entails different instruction sets.
Reference: [8] <author> R. M. Owens, M. J. Irwin, C. Nagendra, and R. S. Bajwa. </author> <booktitle> Computer Vision on the MGAP. In Proc. Computer Architectures for Machine Perception, </booktitle> <month> Dec </month> <year> 1993. </year>
Reference-contexts: We end with conclusions in section 4. 2: Programming the Control Path The MGAP is a fine grain array processor which fits onto a single 9U fi 400 mm VME board and economically places close to a teraop of additional computing power into desktop workstations <ref> [1, 2, 3, 5, 8] </ref>. At a clock rate of 25 MHz, the board exhibits a performance of 0.8 teraops. The target application areas are signal and image processing, graph problems, sorting and searching, matrix computations, and problems in astronomy and computational biology. Fig. 1.
Reference: [9] <author> U. Prabhu and B. M. Pangrle. </author> <title> Superpipelined Control and Data Path Synthesis. </title> <booktitle> In Proc. Design Automation Conference, </booktitle> <pages> pages 638-643, </pages> <month> Jun </month> <year> 1992. </year>
Reference-contexts: Further, our method is as flexible as microcode and performance is not compromised. This approach is not the same as generic control path synthesis in the sense of <ref> [9] </ref> because we are constrained to fit the logic in a limited amount of hardware. The rest of the paper is organized as follows: In the next section we describe how a change in the instruction set is reflected in the control logic.
Reference: [10] <author> T. P. Kelliher R. M. Owens and M. J. Irwin. </author> <title> Building high performance signal processors cheaply and quickly. </title> <booktitle> In VLSI Signal Processing VI, </booktitle> <month> Oct </month> <year> 1993. </year>
Reference-contexts: Being an experimental system built in a university, it was constrained by time and money. In order to rapidly design and build this high performance system cheaply, we used programmable parts wherever possible, most extensively in the control path <ref> [10] </ref>. In fact, it allowed us to submit the board for fabrication even before the instruction set was finalized! The MGAP control path has two levels of programmability built into it. At a high level, the sequencer is programmable from the host by storing different programs in the control memory.
References-found: 10

