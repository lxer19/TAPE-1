URL: ftp://ftp.win.tue.nl/pub/techreports/tbasten/bbe.ps.Z
Refering-URL: http://wwwis.win.tue.nl/~tbasten/publications.html
Root-URL: http://www.win.tue.nl
Title: Branching bisimilarity is an equivalence indeed!  
Author: Twan Basten 
Keyword: Key words: Formal semantics; concurrency theory; branching bisimilarity  
Address: Technology, P.O. Box 513, NL-5600 MB Eindhoven, The Netherlands  
Affiliation: Department of Mathematics and Computing Science, Eindhoven University of  
Abstract: This note presents a detailed proof of a result in the theory of concur-rency semantics that is already considered folklore, namely that branching bisimilarity is an equivalence relation. The "simple proof," which in the literature is always assumed to exist, is shown to be incorrect. The proof in this note is based on the notion of a semi-branching bisimulation taken from [10]. Branching bisimilarity can equivalently be defined in terms of semi-branching bisimulations; the results suggest that such a definition is more intuitive than the original definition of [9]. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.C.M. Baeten and W.P. Weijland. </author> <title> Process Algebra, </title> <booktitle> volume 18 of Cambridge Tracts in Theoretical Computer Science. </booktitle> <publisher> Cambridge University Press, </publisher> <address> Cambridge, UK, </address> <year> 1990. </year> <month> 8 </month>
Reference-contexts: As a final remark, note that the results in this note also hold for several variations of branching bisimilarity, such as rooted branching bisimilarity, which is also introduced in [9], and (rooted) branching bisimilarity with termination predicates, which is often used in the area of process algebra (See for example <ref> [1] </ref>). Acknowledgement The author wants to thank Marc Voorhoeve for his helpful suggestions and Rob van Glabbeek for double-checking the counterexample and for his valuable comments on an earlier version of this note.
Reference: [2] <author> B. Bloom. </author> <title> Structural Operational Semantics for Weak Bisimulations. </title> <journal> Theoretical Computer Science, </journal> <volume> 146 </volume> <pages> 25-68, </pages> <year> 1995. </year>
Reference: [3] <author> F. Cherief and Ph. Schnoebelen. </author> <title> o -Bisimulations and Full Abstraction for Refinement of Actions. </title> <journal> Information Processing Letters, </journal> <volume> 40(4) </volume> <pages> 219-222, </pages> <month> November </month> <year> 1990. </year>
Reference: [4] <author> Ph. Darondeau and P. Degano. </author> <title> About Semantic Action Refinement. </title> <journal> Fundamenta Informatica, </journal> <volume> XIV:221-234, </volume> <year> 1991. </year>
Reference: [5] <author> R. De Nicola, U. Montanari, and F.W. Vaandrager. </author> <title> Back and Forth Bisimulations. </title> <editor> In J.C.M. Baeten and J.W. Klop, editors, </editor> <title> CONCUR '90, Theories of Concurrency: Unification and Extension, </title> <booktitle> Proceedings, volume 458 of Lecture Notes in Computer Science, </booktitle> <pages> pages 152-165, </pages> <address> Amsterdam, The Netherlands, August 1990. </address> <publisher> Springer-Verlag, </publisher> <address> Berlin, Germany, </address> <year> 1990. </year>
Reference: [6] <author> R. De Nicola and F.W. Vaandrager. </author> <title> Three Logics for Branching Bisimulation. </title> <journal> Journal of the ACM, </journal> <volume> 42(2) </volume> <pages> 458-487, </pages> <year> 1995. </year>
Reference-contexts: In [10], it is shown that two processes are branching bisimilar if and only if they have the same hypertraces. From this result, it immediately follows that branching bisimilarity is an equivalence relation. In <ref> [6] </ref>, De Nicola en Vaandrager provide a modal characterization 6 for branching bisimilarity. Again, it follows that branching bisimilarity is an equivalence. A third way is based on the fact that for any two branching bisimilar processes, there exists a largest branching bisimulation relating these processes.
Reference: [7] <author> R.J. van Glabbeek. </author> <title> A Complete Axiomatization for Branching Bisimulation Congruence of Finite-State Behaviours. </title> <editor> In A.M. Borzyszkowski and S. Soko lowski, editors, </editor> <booktitle> Mathematical Foundations of Computer Science 1993, 18th. International Symposium, MFCS'93, Proceedings, volume 711 of Lecture Notes in Computer Science, </booktitle> <pages> pages 473-484, </pages> <address> Gdansk, Poland, August/September 1993. </address> <publisher> Springer-Verlag, </publisher> <address> Berlin, Germany, </address> <year> 1993. </year>
Reference: [8] <author> R.J. van Glabbeek. </author> <title> The Linear Time Branching Time Spectrum II: The Semantics of Sequential Systems with Silent Moves (extended abstract). </title> <editor> In E. Best, editor, </editor> <booktitle> CONCUR '93, 4th. International Conference on Concurrency Theory, Proceedings, volume 715 of Lecture Notes in Computer Science, </booktitle> <pages> pages 66-81, </pages> <address> Hildesheim, Germany, August 1993. </address> <publisher> Springer-Verlag, </publisher> <address> Berlin, Germany, </address> <year> 1993. </year>
Reference-contexts: Using this result plus a result from [10], it follows immediately that branching bisimilarity is an equivalence relation which coincides with semi-branching bisimilarity. Van Glabbeek already mentions this fact in <ref> [8] </ref>. The results show that the notion of branching bisimilarity can be defined in terms of semi-branching bisimulations; they also suggest that such a definition is more intuitive than the original definition of [9]. <p> Since semi-branching bisimilarity is an equivalence, it follows immediately that branching bisimilarity must also be an equivalence. It also follows that the two equivalence relations coincide. This result is also mentioned in <ref> [8] </ref>. The remainder of this section presents this last proof in more detail. Definition 9 (Stuttering property [9,10]) Let R be a binary relation on P.
Reference: [9] <author> R.J. van Glabbeek and W.P. Weijland. </author> <title> Branching Time and Abstraction in Bisimulation Semantics (extended abstract). </title> <editor> In G.X. Ritter, editor, </editor> <booktitle> Information Processing 89: Proceedings of the IFIP 11th. World Computer Congress, </booktitle> <pages> pages 613-618, </pages> <address> San Fransisco, California, USA, August/September 1989. </address> <publisher> Elsevier Science Publishers B.V., North-Holland, </publisher> <year> 1989. </year>
Reference-contexts: 1 Introduction In <ref> [9] </ref>, branching bisimilarity has been introduced as an equivalence relation on processes that preserves the branching structure of processes. It distinguishes slightly more processes than the well-known observation equivalence as introduced by Milner [11]. <p> In [10], Van Glabbeek Preprint for Information Processing Letters 28 February 1996 and Weijland already provide all the ingredients for a very elegant proof. In the proof of the so-called stuttering lemma, which without proof also appears in <ref> [9] </ref>, for technical reasons, a slight variation of a branching bisimulation called a semi-branching bisimulation is introduced. It can be shown that the composition of two semi-branching bisimulations is again a semi-branching bisimulation, and therefore that semi-branching bisimilarity is an equivalence relation. <p> Van Glabbeek already mentions this fact in [8]. The results show that the notion of branching bisimilarity can be defined in terms of semi-branching bisimulations; they also suggest that such a definition is more intuitive than the original definition of <ref> [9] </ref>. In addition, a semi-branching bisimulation can be defined in such a way that the distinction between internal and observable actions is made in an auxiliary relation, which greatly facilitates reasoning and yields very concise proofs. <p> As a final remark, note that the results in this note also hold for several variations of branching bisimilarity, such as rooted branching bisimilarity, which is also introduced in <ref> [9] </ref>, and (rooted) branching bisimilarity with termination predicates, which is often used in the area of process algebra (See for example [1]).
Reference: [10] <author> R.J. van Glabbeek and W.P. Weijland. </author> <title> Branching Time and Abstraction in Bisimulation Semantics. </title> <type> Report CS-R9120, </type> <institution> Centre for Mathematics and Computer Science, CWI, </institution> <address> Amsterdam, The Netherlands, </address> <year> 1991. </year> <note> A revised version with a corrected equivalence proof will appear in the Journal of the ACM. </note>
Reference-contexts: However, this note provides a counterexample invalidating that claim. Fortunately, there are several other ways to prove that branching bisimilarity is an equivalence relation. In <ref> [10] </ref>, Van Glabbeek Preprint for Information Processing Letters 28 February 1996 and Weijland already provide all the ingredients for a very elegant proof. <p> It can be shown that the composition of two semi-branching bisimulations is again a semi-branching bisimulation, and therefore that semi-branching bisimilarity is an equivalence relation. Using this result plus a result from <ref> [10] </ref>, it follows immediately that branching bisimilarity is an equivalence relation which coincides with semi-branching bisimilarity. Van Glabbeek already mentions this fact in [8]. <p> In this note, the above definition is chosen, because the relation composition of two (symmetric) relations is, in general, not symmetric. As the main results of this note concern compositions of (semi-) branching bisimulations, the above definition proves to be more convenient. As explained in <ref> [10] </ref>, it is easy to see that the two definitions are equivalent. Obviously, any symmetric branching bisimulation is a branching bisimulation as defined above. Furthermore, it follows from the definition that the inverse of a branching bisimulation is also a branching bisimulation. <p> ff 2 Act, p !p 0 be an abbreviation of p ff o ^ p = p 0 ): That is, p (o) ! p 0 means zero or one o steps and, for any a 2 A, p ! p 0 is simply p a Definition 4 (Semi-branching bisimilarity <ref> [10] </ref>) A binary relation R P fiP is called a semi-branching bisimulation if and only if, for any p; p 0 ; q; q 0 2 P and ff 2 Act, the following transfer properties are satisfied. pRq ^ p ! p 0 ) (9 q 0 ; q 00 2 <p> Note that also the definition of a semi-branching bisimulation has a symmetric variant. Figure 2 <ref> [10] </ref> depicts the difference between a branching and a semi-branching bisimulation. Every branching bisimulation is a semi-branching bi-simulation, whereas the converse is not true. o o p 0 p 0 q 00 = q 0 Fig. 2. <p> Transitivity: Transitivity of $ sb follows immediately from Proposition 7. 2 4 Branching bisimilarity is an equivalence relation There are several ways to show that, despite Proposition 5, branching bisim-ilarity is an equivalence relation. In <ref> [10] </ref>, it is shown that two processes are branching bisimilar if and only if they have the same hypertraces. From this result, it immediately follows that branching bisimilarity is an equivalence relation. In [6], De Nicola en Vaandrager provide a modal characterization 6 for branching bisimilarity. <p> The relation composition of two largest branching bisimulations is again a branching bisimulation which again yields the desired result. All three proofs are based on one and the same lemma, namely the stuttering lemma given in [9,10]. The proof of this lemma in <ref> [10] </ref> yields even a fourth proof for the fact that branching bisimilarity is an equivalence. It shows that two processes are related by a branching bisimulation if and only if they are related by a semi-branching bisimulation. <p> Recall that the union of arbitrarily many (semi-) branching bisimulations yields again a (semi-) branching bisimulation. Therefore, for any pair of (semi-) branching bisimilar processes p and q in P, there exists a largest (semi-) branching bisimulation R such that pRq. The following lemma is taken from <ref> [10] </ref>. Lemma 11 For any two processes p and q in P such that p $ sb q, the largest semi-branching bisimulation between p and q satisfies the stuttering property. As a consequence, the largest semi-branching bisimulation between p and q is a branching bisimulation.
Reference: [11] <author> R. Milner. </author> <title> A Calculus of Communcating Systems, </title> <booktitle> volume 92 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, Germany, </address> <year> 1980. </year>
Reference-contexts: 1 Introduction In [9], branching bisimilarity has been introduced as an equivalence relation on processes that preserves the branching structure of processes. It distinguishes slightly more processes than the well-known observation equivalence as introduced by Milner <ref> [11] </ref>. Since its introduction, branching-bisimulation equivalence has rapidly gained popularity in the scientific literature on con-currency semantics (see for example [1-4,7,8,5,6]). However, the fact that it is indeed an equivalence relation is almost never proven. The only more or less explicit proof appears in [7,10,12].
Reference: [12] <author> W.P. Weijland. </author> <title> Synchrony and Asynchrony in Process Algebra. </title> <type> PhD thesis, </type> <institution> University of Amsterdam, Department of Mathematics and Computer Science, </institution> <address> The Netherlands, </address> <year> 1989. </year> <month> 9 </month>
References-found: 12

