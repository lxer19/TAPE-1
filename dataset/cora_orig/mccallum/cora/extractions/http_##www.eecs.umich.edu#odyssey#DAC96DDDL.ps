URL: http://www.eecs.umich.edu/odyssey/DAC96DDDL.ps
Refering-URL: http://www.eecs.umich.edu/odyssey/DAC96_DDDL.html
Root-URL: http://www.eecs.umich.edu
Title: A Description Language for Design Process Management  
Author: Peter R. Sutton and Stephen W. Director 
Address: Pittsburgh PA 15213  
Affiliation: Department of Electrical and Computer Engineering Carnegie Mellon University  
Abstract: A language for defining design discipline characteristics is proposed. Design discipline characteristics such as abstraction levels, design object classifications and decompositions, design objectives, and design methodologies can be defined in a simple machine and human readable form. The language, DDDL, has led to the development of a user interface for Minerva II, a design process management tool, which, when configured with a design discipline description, can be used to aid teams of designers in the solution of complex multi-disciplinary design problems. DDDL and user interface examples are presented. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. B. Brockman, T. F. Cobourn, M. F. Jacome, and S. W. </author> <title> Director, The Odyssey CAD Framework, </title> <journal> IEEE DATC Newsletter on Design Automation, </journal> <month> Spring </month> <year> 1992. </year>
Reference-contexts: To better aid designers in solving these more complex problems, design management services themselves must move to a higher level of abstraction. This level, known as the design process management level <ref> [1] </ref>, provides support for, and control of, all aspects of the solution of design problems including conceptual (or exploratory) design, problem decomposition, backtracking, constraint propagation and management, and design history management.
Reference: [2] <author> T. F. Chiueh, R. H. Katz, and V. D. King, </author> <title> Managing the VLSI Design Process, </title> <booktitle> in Proceedings of Computer-Aided Cooperative Product Development, MIT-JSME Workshop, </booktitle> <pages> pp. 183-199, </pages> <month> Nov. </month> <year> 1989. </year>
Reference-contexts: To our knowledge, there are no existing languages for formally describing the electronic design process at a high level. Previous languages have been restricted to describing lower level details, for example, the task specification language of Chiueh et al. <ref> [2] </ref>, which encapsulates tool details and provides for the sequencing of tasks but, unlike DDDL, doesnt describe the higher level details of a design discipline. Dewey [3] developed structures for representing properties and constraints in a design domain (in this case DSP filters) so as to support conceptual design.
Reference: [3] <author> A. M. Dewey and S. W. Director, Yoda: </author> <title> A Framework for the Conceptual Design VLSI Systems, </title> <booktitle> in Proceedings of 1989 IEEE International Conference on Computer-Aided Design (ICCAD), </booktitle> <pages> pp. 380-383, </pages> <month> Nov. </month> <year> 1989. </year>
Reference-contexts: Previous languages have been restricted to describing lower level details, for example, the task specification language of Chiueh et al. [2], which encapsulates tool details and provides for the sequencing of tasks but, unlike DDDL, doesnt describe the higher level details of a design discipline. Dewey <ref> [3] </ref> developed structures for representing properties and constraints in a design domain (in this case DSP filters) so as to support conceptual design. Again, information about decompositions, possible problems and methodologies necessary for managing the complete design process is missing. The remainder of this paper is organized as follows.
Reference: [4] <author> D. S. Harrison, A. R. Newton, R. L. Spickelmier, and T. J. Barnes, </author> <title> Electronic CAD Frameworks, </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 78, no. 2, </volume> <pages> pp. 393-417, </pages> <month> Feb. </month> <year> 1990. </year>
Reference-contexts: Initial electronic design (CAD) frameworks provided design data management in which design file formats, locations and versions were managed by the design system and design tool management in which tools were provided with tool encapsulations <ref> [4] </ref>.
Reference: [5] <author> M. F. Jacome, </author> <title> Design Process Planning and Management for CAD Frameworks. </title> <type> Ph.D. Thesis, </type> <institution> Carnegie Mellon University, Department of Electrical and Computer Engineering (Report CMUCAD-93-65), </institution> <month> Nov. </month> <year> 1993. </year>
Reference: [6] <author> M. F. Jacome and S. W. </author> <title> Director, A formal basis for design process planning and management, </title> <booktitle> in Proceedings of 1994 IEEE International Conference on Computer Aided Design (ICCAD), </booktitle> <pages> pp. 516-521, </pages> <month> Nov. </month> <year> 1994. </year>
Reference: [7] <author> M. F. Jacome and S. W. </author> <title> Director, Design process management for CAD frameworks, </title> <booktitle> in Proceedings of 29th ACM/IEEE Design Automation Conference, </booktitle> <pages> pp 500-505, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: DDDL has grown out of the work by Jacome [5],[6] which, in proposing a formal theory of design, established that design processes can be described in terms of these characteristics. The Minerva Design Process Manager <ref> [7] </ref> developed by Jacome, however, did not provide a mechanism for capturing design discipline knowledge and was not able to be configured for arbitrary design disciplines. DDDL was developed to overcome this deficiency. <p> OF DOMAIN Hardware system AT ABSTRACTION LEVEL Behavior; REQUIRES TOOL HSpice FOR OBJECTIVE Simulate DOMAIN Integrated circuit AT ABSTRACTION LEVEL Transistor; ... 4 A Design Process Management User Interface The development of DDDL has led to the development of Minerva II, a new version of the Minerva Design Process Manager <ref> [7] </ref> with a completely revised user interface. Specifically, problem definition, selection, backtracking and decomposition are now handled in a more intuitive way. In this section, we illustrate, through user interface screen-shots, how Minerva II, configured with a DDDL design discipline description is able to manage a design process.
Reference: [8] <author> S. Kleinfeldt, M. Guiney, J. K. Miller, and M. Barnes, </author> <title> Design Methodology Management, </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 82, no. 2, </volume> <pages> pp. 231-250, </pages> <month> Feb. </month> <year> 1994. </year>
Reference-contexts: 1 Introduction As the design problems that todays electronic designers face become ever more complex, and the time in which these designs must be carried out becomes ever shorter, the need has emerged for better design management services to aid designers in their task <ref> [8] </ref>. Initial electronic design (CAD) frameworks provided design data management in which design file formats, locations and versions were managed by the design system and design tool management in which tools were provided with tool encapsulations [4]. <p> More recent CAD framework systems, both commercial and research systems (e.g. [9],[10] and [11]), have progressed to a higher level of design management - that of design ow management or design methodology management <ref> [8] </ref> in which the sequence of tasks a designer must carry out to solve a design problem are managed and possibly automated. These services, however, are no longer sufficient for todays complex design processes due to two main design trends.
Reference: [9] <author> P. R. Sutton, J. B. Brockman, and S. W. </author> <title> Director, Design Management Using Dynamically Defined Flows, </title> <booktitle> in Proceedings of the ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 648-653, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: DAC 96 - 06/96 Las Vegas, NV, USA 1996 ACM, Inc. 0-89791-833-9/96/0006.. $3.50 design process management is a level of service above that pro-vided by current commercial and research CAD frameworks. These frameworks (e.g. <ref> [9] </ref>, [10] and [11]) provide ow-based execution management and are able to manage simple methodologies but do not provide the higher level management of decomposition, backtracking, conceptual design and constraint propagation that is essential for more efficient design cycles. <p> Minerva II, however, can use the executive and data management services of most existing CAD frameworks. This is accomplished through a framework encapsulation interface enabling Minerva II to use the services which the executive provides. A prototype framework encapsulation of the Hercules Task Manager <ref> [9] </ref> has been implemented. We forego a discussion of this type of encapsulation so as to concentrate on the designers view of design process management. 4.1 Design Problem Definition Designers using Minerva II are led through the problem solving cycle shown in Fig. 2.
Reference: [10] <author> K. O. ten Bosch, P. Bingley, and P. van der Wolf, </author> <title> Design Flow Management in the NELSIS CAD Framework, </title> <booktitle> in Proceedings of 28th ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 711-716, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: DAC 96 - 06/96 Las Vegas, NV, USA 1996 ACM, Inc. 0-89791-833-9/96/0006.. $3.50 design process management is a level of service above that pro-vided by current commercial and research CAD frameworks. These frameworks (e.g. [9], <ref> [10] </ref> and [11]) provide ow-based execution management and are able to manage simple methodologies but do not provide the higher level management of decomposition, backtracking, conceptual design and constraint propagation that is essential for more efficient design cycles.
Reference: [11] <author> P. van den Hamer and M. A. Treffers, </author> <title> A data ow based architecture for CAD Frameworks, </title> <booktitle> in Proceedings of 1990 IEEE International Conference on Computer-Aided Design (ICCAD), </booktitle> <pages> pp. 482-485, </pages> <month> Nov. </month> <year> 1990. </year>
Reference-contexts: Initial electronic design (CAD) frameworks provided design data management in which design file formats, locations and versions were managed by the design system and design tool management in which tools were provided with tool encapsulations [4]. More recent CAD framework systems, both commercial and research systems (e.g. [9],[10] and <ref> [11] </ref>), have progressed to a higher level of design management - that of design ow management or design methodology management [8] in which the sequence of tasks a designer must carry out to solve a design problem are managed and possibly automated. <p> DAC 96 - 06/96 Las Vegas, NV, USA 1996 ACM, Inc. 0-89791-833-9/96/0006.. $3.50 design process management is a level of service above that pro-vided by current commercial and research CAD frameworks. These frameworks (e.g. [9], [10] and <ref> [11] </ref>) provide ow-based execution management and are able to manage simple methodologies but do not provide the higher level management of decomposition, backtracking, conceptual design and constraint propagation that is essential for more efficient design cycles.
References-found: 11

