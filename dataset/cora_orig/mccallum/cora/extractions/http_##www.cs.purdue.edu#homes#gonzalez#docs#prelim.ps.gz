URL: http://www.cs.purdue.edu/homes/gonzalez/docs/prelim.ps.gz
Refering-URL: http://www.cs.purdue.edu/homes/gonzalez/publications.html
Root-URL: http://www.cs.purdue.edu
Title: A Framework for Conceptual and Interactive Modeling  
Author: Carlos Gonzalez Ochoa Aleman 
Degree: Ph.D. Thesis Proposal  
Date: November 21, 1996  
Affiliation: Department of Computer Sciences Purdue University  
Abstract-found: 0
Intro-found: 1
Reference: [Aut90] <author> Autocad reference manual, </author> <year> 1990. </year>
Reference-contexts: This assumes that the designer has some knowledge of the mathematical representation of the surface. When doing large modifications the task becomes tedious because numerous control points have to be modified individually. * Drafting tools <ref> [Aut90] </ref>. These are advanced drawing packages to help create diagrams, either in 2D or 3D. They are commonly used to produce hard-copies and diagrams of the design which are used to manufacture the model.
Reference: [BB88] <author> Ronen Barzel and Alan H. Barr. </author> <title> A modeling system based on dynamic constraints. </title> <editor> In John Dill, editor, </editor> <booktitle> Computer Graphics (SIGGRAPH '88 Proceedings), </booktitle> <volume> volume 22, </volume> <pages> pages 179-188, </pages> <month> August </month> <year> 1988. </year>
Reference: [BBH + 90] <author> Chuck Blanchard, Scott Burgess, Young Harvill, Jaron Lanier, Ann Lasko, Mark Oberman, and Michael Teitel. </author> <title> Reality built for two: A virtual reality tool. </title> <editor> In Rich Riesenfeld and Carlo Sequin, editors, </editor> <booktitle> Computer Graphics (1990 Symposium on Interactive 3D Graphics), </booktitle> <volume> volume 24, </volume> <pages> pages 35-36, </pages> <month> March </month> <year> 1990. </year>
Reference: [BCF94] <author> V. Branco, A. Costa, and F. Nunes Ferreira. </author> <title> Sketching 3D models with 2D interaction devices. </title> <journal> In Computer Graphics Forum, </journal> <volume> volume 13, </volume> <pages> pages 489-502. </pages> <publisher> Eurographics, Basil Blackwell Ltd, </publisher> <year> 1994. </year> <note> Eurographics '94 Conference issue. </note>
Reference-contexts: Recently, the use of sketching [EBE95][GM95][ZHH96] to define a 3D object has become a major research topic. Their major difficulty is to translate the sketch into a complete and unambiguous representation of the object, specially when free-form surfaces are required <ref> [BCF94] </ref>. Any operation requires traversing the representation. One fundamental operation is classification; finding where a geometric entity (point, line, plane, or other object) is located with respect to the object. In CSG and especially in boundary representations classification can be computationally expensive.
Reference: [Bie90] <author> Eric A. Bier. </author> <title> Snap-dragging in three dimensions. </title> <editor> In Rich Riesenfeld and Carlo Sequin, editors, </editor> <booktitle> Computer Graphics (1990 Symposium on Interactive 3D Graphics), </booktitle> <volume> volume 24, </volume> <pages> pages 193-204, </pages> <month> March </month> <year> 1990. </year>
Reference: [BL91] <author> Steve Bryson and Creon Levitt. </author> <title> The virtual windtunnel: An environment for the exploration of three-dimensional unsteady flows. </title> <booktitle> In Visualization '91, </booktitle> <pages> pages 17-24, </pages> <year> 1991. </year>
Reference-contexts: The ideal system would respond immediately and accurately to the gestures and movements of the designer's hands. Such system would render the object in true 3D <ref> [BL91] </ref> (by using a head mounted display or other stereo systems) and provide haptic feedback. The designer also needs to know certain properties of the object while modifying it, such system should be capable of computing and displaying this information.
Reference: [BL95] <author> James R. Bill and Suresh K. Lodha. </author> <title> Sculpting polygonal models using virtual tools. </title> <booktitle> In Proceedings of Graphics Interface '95, </booktitle> <year> 1995. </year>
Reference-contexts: At this time, in the context of the 3D modeling paradigm the problem is still is not completely solved. Work in direct manipulation [CK83] has focused more on polygonal models and less on curves and surfaces. Systems based on virtual tools <ref> [BL95] </ref> have appeared but are limited only to polygonal meshes because of the complexity of their internal representation. <p> One problem associated with interactive modeling using virtual tools over polygonal meshes is to decide how and where to fragment the mesh to elongate it or smooth it. This problem stated by Lotha and Bill <ref> [BL95] </ref>, that is as the surface grows larger, it should be fragmented to accommodate further changes. This problem occurs when the manipulation is concentrated over a small part of the surface.
Reference: [CAT96] <institution> Catia surface design. </institution> <note> http://www.catia.ibm.com, 1996. </note>
Reference-contexts: Hoffmann [Hof93] gives a comparison of the advantages and disadvantages of each representation. * Surface modelers. These represent 3D surfaces but not necessarily form a solid object [For95]. In general, this kind of modeler is based on polygonal meshes and few support smooth surfaces <ref> [CAT96] </ref>. The repre 3 sentation most commonly used for meshes is one based on a variation of a b-rep, and smooth surfaces are most often represented using parametric basis functions. [HL93, pp 250].
Reference: [CF91] <author> Franklin Crow and Steve Feiner. </author> <title> Computer graphics: More unsolved problems. </title> <booktitle> ACM SIGGRAPH-Panel Proceedings, </booktitle> <month> August </month> <year> 1991. </year>
Reference-contexts: A good user interface has a direct impact on the usability of any system, not only a modeling system. Quoting Stuart K. Card <ref> [CF91] </ref>, "The power of a system is the number of features (that is, the number of functions it can perform) divided by the amount of time it takes to figure out how to use all of those things.
Reference: [CK83] <author> H. Chiyokura and F. Kimura. </author> <title> Design of solids with free-form surfaces. </title> <booktitle> In Computer Graphics (SIG-GRAPH '83 Proceedings), </booktitle> <volume> volume 17, </volume> <pages> pages 289-298, </pages> <month> July </month> <year> 1983. </year>
Reference-contexts: One fundamental issue of interaction is direct manipulation; Sutherland [Sut66], in 1966, considered it as one of the ten unsolved problems in computer graphics. At this time, in the context of the 3D modeling paradigm the problem is still is not completely solved. Work in direct manipulation <ref> [CK83] </ref> has focused more on polygonal models and less on curves and surfaces. Systems based on virtual tools [BL95] have appeared but are limited only to polygonal meshes because of the complexity of their internal representation.
Reference: [CMS88] <author> Michael Chen, S. Joy Mountford, and Abigail Sellen. </author> <title> A study in interactive 3-D rotation using 2-D control devices. </title> <editor> In John Dill, editor, </editor> <booktitle> Computer Graphics (SIGGRAPH '88 Proceedings), </booktitle> <volume> volume 22, </volume> <pages> pages 121-129, </pages> <month> August </month> <year> 1988. </year>
Reference: [Coq90] <author> Sabine Coquillart. </author> <title> Extended free-form deformation: A sculpturing tool for 3D geometric modeling. In Forest Baskett, editor, </title> <booktitle> Computer Graphics (SIGGRAPH '90 Proceedings), </booktitle> <volume> volume 24, </volume> <pages> pages 187-196, </pages> <month> August </month> <year> 1990. </year>
Reference: [EBE95] <author> Lynn Eggli, Beat Bruederlin, and Gershon Elber. </author> <title> Sketching as a solid modeling tool. </title> <editor> In Chris Hoffman and Jarek Rossignac, editors, </editor> <booktitle> Solid Modeling '95, </booktitle> <pages> pages 313-322, </pages> <month> May </month> <year> 1995. </year>
Reference: [EzM95] <author> EzModeler Ver 1.0 demo reference manual. </author> <note> From WWW site: http://www.webcom.com/radiance, 1995. </note>
Reference: [Far88] <author> G. Farin. </author> <title> Curves and Surfaces for Computer-Aided Geometric Design. </title> <publisher> Academic Press, </publisher> <year> 1988. </year>
Reference-contexts: The number of convex regions depends on the complexity of the features' boundary; a very complex boundary can lead to fragmentation of the surface into many small and long pieces. To avoid the fragmentation problem, it is common to trim the surface <ref> [Far88] </ref>, ie. to create a hole on the surface to make space for the feature. Curve trimming does not guarantee a seamless joint. But by carefully controlling the boundaries of the surface and feature we can have a seamless joint.
Reference: [For95] <author> FormZ Ver 1.0 demo reference manual. </author> <note> From WWW site: http://www.formz.com, 1995. </note>
Reference-contexts: Representing solid objects is accomplished either by using CSG (Constructive Solid Geometry) [Req77] or a regularized boundary representation (B-rep) [Man86]. Hoffmann [Hof93] gives a comparison of the advantages and disadvantages of each representation. * Surface modelers. These represent 3D surfaces but not necessarily form a solid object <ref> [For95] </ref>. In general, this kind of modeler is based on polygonal meshes and few support smooth surfaces [CAT96]. The repre 3 sentation most commonly used for meshes is one based on a variation of a b-rep, and smooth surfaces are most often represented using parametric basis functions. [HL93, pp 250].
Reference: [Fow92] <author> Barry Fowler. </author> <title> Geometric manipulation of tensor product surfaces. </title> <editor> In David Zeltzer, editor, </editor> <booktitle> Computer Graphics (1992 Symposium on Interactive 3D Graphics), </booktitle> <volume> volume 25, </volume> <pages> pages 101-108, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: As an example, direct manipulation of tensor-product bezier patches was presented by Fowler <ref> [Fow92] </ref>. He presented a process to determine how to change the control points of the patch to certain geometric constraints. Direct 3D user input devices have been used with relative success to control traditional CAD environments in [Sha90] and [GH91]. These systems are limited to CSG and polygonal meshes respectively.
Reference: [FP94] <author> K. M. Fairchild and T. Poston. </author> <title> Efficient virtual collision detection for multiple users in large virtual spaces. </title> <editor> In G. Singh, S. K. Feiner, and D. Thalmann, editors, </editor> <booktitle> Virtual Reality Software & Technology: Proceedings of the VRST '94 Conference, </booktitle> <pages> pages 271-285. </pages> <publisher> World Scientific, </publisher> <year> 1994. </year>
Reference-contexts: In CSG and especially in boundary representations classification can be computationally expensive. Several spatial structures have been proposed to optimize the operation: octrees [Sam89b, Sam89a], BSP trees [Nay90], MSP trees [Van91], sphere trees [Hub94], and hierarchical grid structures <ref> [FP94] </ref>. Most of these structures work well when the object is not being modified, but few have addressed the problem when the object is constantly modified [NAT90].
Reference: [GH91] <author> T. A. Galyean and J. F. Hughes. </author> <title> Sculpting: An interactive volumetric modeling technique. </title> <booktitle> In Computer Graphics (SIGGRAPH '91 Proceedings), </booktitle> <volume> volume 25, </volume> <pages> pages 267-274. </pages> <publisher> ACM, </publisher> <month> July </month> <year> 1991. </year>
Reference-contexts: He presented a process to determine how to change the control points of the patch to certain geometric constraints. Direct 3D user input devices have been used with relative success to control traditional CAD environments in [Sha90] and <ref> [GH91] </ref>. These systems are limited to CSG and polygonal meshes respectively. Other alternatives to direct manipulation are physical based modeling [BB88][TPBF87]and deformation [SP86][Coq90]. These paradigms permit a wide variety of intuitive distortions and simple modifications to the object if maintained simple.
Reference: [GM95] <author> I. J. Grimstead and R. R. Martin. </author> <title> Creating solid models from single 2D sketches. </title> <editor> In Chris Hoffman and Jarek Rossignac, editors, </editor> <booktitle> Solid Modeling '95, </booktitle> <pages> pages 323-338, </pages> <month> May </month> <year> 1995. </year>
Reference: [GS90] <author> Mark Green and Chris Shaw. </author> <title> The datapaper: Living in the virtual world. </title> <booktitle> In Proceedings of Graphics Interface '90, </booktitle> <pages> pages 123-130, </pages> <month> May </month> <year> 1990. </year>
Reference: [HG94] <author> S. Halliday and M. Green. </author> <title> A geometric modeling and animation system for virtual reality. </title> <booktitle> In Proceedings of VRST '94: Virtual Reality Software and Technology, </booktitle> <pages> pages 71-86, </pages> <address> River Edge, NJ, 1994. </address> <publisher> World Scientific Publishing Co Inc. </publisher>
Reference: [HL93] <author> Joseph Hoschek and Dieter Lasser. </author> <title> Fundamentals of Computer Aided Geometric Design. A K Peters, </title> <note> 1993. ISBN 1-56881-007-5. </note>
Reference-contexts: In general, this kind of modeler is based on polygonal meshes and few support smooth surfaces [CAT96]. The repre 3 sentation most commonly used for meshes is one based on a variation of a b-rep, and smooth surfaces are most often represented using parametric basis functions. <ref> [HL93, pp 250] </ref>. The drawback of surface modelers is the use of multiple surfaces as individual entities, that is, each surface is isolated from each other. To modify the surface the method most commonly employed is to change individual control points (e.g. knots, or weights) on individual surface elements.
Reference: [Hof93] <author> Christoph M. Hoffmann. </author> <title> Implicit curves and surfaces in CAGD. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 13(1) </volume> <pages> 79-88, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: Their features and capabilities are more suitable for high precision and detailing work. Representing solid objects is accomplished either by using CSG (Constructive Solid Geometry) [Req77] or a regularized boundary representation (B-rep) [Man86]. Hoffmann <ref> [Hof93] </ref> gives a comparison of the advantages and disadvantages of each representation. * Surface modelers. These represent 3D surfaces but not necessarily form a solid object [For95]. In general, this kind of modeler is based on polygonal meshes and few support smooth surfaces [CAT96].
Reference: [Hub94] <author> P. M. Hubbard. </author> <title> Collision Detection for Interative Graphics Applications. </title> <type> PhD thesis, </type> <institution> Department of Computer Science Box 1910, Brown University, </institution> <address> Providence, RI 02912, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: In CSG and especially in boundary representations classification can be computationally expensive. Several spatial structures have been proposed to optimize the operation: octrees [Sam89b, Sam89a], BSP trees [Nay90], MSP trees [Van91], sphere trees <ref> [Hub94] </ref>, and hierarchical grid structures [FP94]. Most of these structures work well when the object is not being modified, but few have addressed the problem when the object is constantly modified [NAT90].
Reference: [KT95] <author> Shigeru Kuriyama and Keihachiro Tachibana. </author> <title> Interactive 3D widgets for free-form deformation. </title> <booktitle> In Pacific Graphics '95, </booktitle> <month> August </month> <year> 1995. </year>
Reference-contexts: This process is computationally more expensive than for polygonal models, requiring many faces to obtain an accurate approximation of the surface The problem of interaction is based on the fact that it is easier to manipulate surfaces indirectly by manipulating control points <ref> [KT95] </ref> than to directly control the surface. 2.2 User interface User interfaces have been studied as part of the area of human-factors. A good user interface has a direct impact on the usability of any system, not only a modeling system. Quoting Stuart K.
Reference: [Law96] <author> Mark H. Lawry. </author> <title> I-deas master series, 1996. Student Guide. </title>
Reference: [Man86] <author> Martti J. Mantyla. </author> <title> Introduction to Solid Modeling. </title> <publisher> Computer Science Press, </publisher> <address> Rockville, MD, </address> <month> December </month> <year> 1986. </year>
Reference-contexts: Their features and capabilities are more suitable for high precision and detailing work. Representing solid objects is accomplished either by using CSG (Constructive Solid Geometry) [Req77] or a regularized boundary representation (B-rep) <ref> [Man86] </ref>. Hoffmann [Hof93] gives a comparison of the advantages and disadvantages of each representation. * Surface modelers. These represent 3D surfaces but not necessarily form a solid object [For95]. In general, this kind of modeler is based on polygonal meshes and few support smooth surfaces [CAT96].
Reference: [MM95] <author> William J. Mitchell and Malcolm McCullough. </author> <title> Digital Design Media. </title> <publisher> Van Nostrand Reinhold, </publisher> <address> 2 edition, </address> <year> 1995. </year>
Reference-contexts: These tools are often unwieldy and have steep learning curves. The lack of particular modeling tools for the new media (e.g. multimedia, and animation) and the limitations and complexity of the established ones has been a major frustration to designers <ref> [MM95] </ref>. Creating new, intuitive, yet powerful tools for 3D modeling and design is what motivates this thesis. The particular area of design I am interested in is the creation and modeling of 3D objects. <p> The focus of the thesis is described in section 3 and a summary of my current work and several directions for future research are described in section 6. 2 Issues in interactive modeling Traditional modeling is based on the use of sketches and illustrations <ref> [MM95] </ref> to come up with an idea and then creating a prototype [Tru95]. These models are time consuming, difficult and sometimes hazardous to create (e.g. molding plastics and resins), and in general cannot be modified afterwards. Besides creating them, specially when many revisions are made them, is expensive.
Reference: [NAT90] <author> B. Naylor, J. Amanatides, and W. Thibault. </author> <title> Merging BSP tress yields polyhedral set operations. </title> <journal> ACM Computer Graphics, </journal> <volume> 24(4) </volume> <pages> 115-124, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: Most of these structures work well when the object is not being modified, but few have addressed the problem when the object is constantly modified <ref> [NAT90] </ref>. The problem in some cases is that a local modification can yield global changes in the spatial structure resulting in a complete recomputation of it. Other representations used to do modeling are voxels [GH91][WK95] and particles [ST92].
Reference: [Nay90] <author> B. Naylor. </author> <title> Binary space partitioning trees as an alternative polytopes. </title> <booktitle> Computer-Aided Design, </booktitle> <pages> pages 250-252, </pages> <year> 1990. </year>
Reference-contexts: In CSG and especially in boundary representations classification can be computationally expensive. Several spatial structures have been proposed to optimize the operation: octrees [Sam89b, Sam89a], BSP trees <ref> [Nay90] </ref>, MSP trees [Van91], sphere trees [Hub94], and hierarchical grid structures [FP94]. Most of these structures work well when the object is not being modified, but few have addressed the problem when the object is constantly modified [NAT90].
Reference: [Pen86] <author> A. P. Pentland. </author> <title> Toward and ideal 3-D CAD system, </title> <month> September </month> <year> 1986. </year>
Reference-contexts: This kind of design is what I will refer as interactive modeling. The ultimate goal in interactive modeling is to simulate modeling with a flexible material similar to clay <ref> [Pen86] </ref>, and to be able to modify it in real time. The ideal system would respond immediately and accurately to the gestures and movements of the designer's hands.
Reference: [Pet93] <author> J. Peters. </author> <title> C 1 Surface Splines. </title> <journal> SIAM Journal of Numerical Analysis, </journal> <volume> 1(1), </volume> <year> 1993. </year>
Reference-contexts: The surface representation of choice is surface spline <ref> [Pet93] </ref> because of their built-in smoothness, low degree, simple interpolation and local convex hull properties which yield a predictable shape. surface splines can be represented in Bernstein-Bezier form, and in NURBS form which is compatible with industry standards. <p> These first parameters define the input mesh. From the input mesh we construct a dual mesh by cutting edges based on the mesh connectivity and the blend ratios. On the dual mesh we use Peters' corner cutting <ref> [Pet93] </ref> algorithm to define, on the user's choice, triangular or tensor product patches of degree 2 or 3. My approach to direct manipulation consists of the use of virtual tools (controlled by 3D input device) to control the surface.
Reference: [Req77] <author> A. Requicha. </author> <title> Mathematical models of rigid solids. </title> <type> Technical Report Memo 28, </type> <institution> University of Rochester, Production Automation Project, </institution> <year> 1977. </year>
Reference-contexts: The overhead comes from the time spent by the application to validate the model after applying each operation. Their features and capabilities are more suitable for high precision and detailing work. Representing solid objects is accomplished either by using CSG (Constructive Solid Geometry) <ref> [Req77] </ref> or a regularized boundary representation (B-rep) [Man86]. Hoffmann [Hof93] gives a comparison of the advantages and disadvantages of each representation. * Surface modelers. These represent 3D surfaces but not necessarily form a solid object [For95].
Reference: [RV83] <author> A. A. ~ G. Requicha and H. ~ B. Voelcker. </author> <title> Solid modeling: Current status and research directions. </title> <journal> IEEE Computer Graphics and Applications, </journal> <year> 1983. </year>
Reference: [Sam89a] <author> H. J. Samet. </author> <title> Applications of Spatial Data structures: Computer Graphics, Image Processing, and GIS. </title> <publisher> Addison-Wesley, </publisher> <address> Redding, MA, </address> <year> 1989. </year>
Reference-contexts: One fundamental operation is classification; finding where a geometric entity (point, line, plane, or other object) is located with respect to the object. In CSG and especially in boundary representations classification can be computationally expensive. Several spatial structures have been proposed to optimize the operation: octrees <ref> [Sam89b, Sam89a] </ref>, BSP trees [Nay90], MSP trees [Van91], sphere trees [Hub94], and hierarchical grid structures [FP94]. Most of these structures work well when the object is not being modified, but few have addressed the problem when the object is constantly modified [NAT90].
Reference: [Sam89b] <author> H. J. Samet. </author> <title> Design and analysis of Spatial Data Structures: Quadtrees, Octrees, and other Hierarchical Methods. </title> <publisher> Addison-Wesley, </publisher> <address> Redding, MA, </address> <year> 1989. </year>
Reference-contexts: One fundamental operation is classification; finding where a geometric entity (point, line, plane, or other object) is located with respect to the object. In CSG and especially in boundary representations classification can be computationally expensive. Several spatial structures have been proposed to optimize the operation: octrees <ref> [Sam89b, Sam89a] </ref>, BSP trees [Nay90], MSP trees [Van91], sphere trees [Hub94], and hierarchical grid structures [FP94]. Most of these structures work well when the object is not being modified, but few have addressed the problem when the object is constantly modified [NAT90].
Reference: [SC92] <author> Paul S. Strauss and Rikk Carey. </author> <title> An object-oriented 3D graphics toolkit. </title> <editor> In Edwin E. Catmull, editor, </editor> <booktitle> Computer Graphics (SIGGRAPH '92 Proceedings), </booktitle> <volume> volume 26, </volume> <pages> pages 341-349, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: The current implementation supports closed objects and some restricted open surfaces. I coded a very simple modeler, using C++ and the Inventor 3D toolkit <ref> [SC92] </ref>, to demonstrate real time interactive manipulation using surface splines. The system supports real time deformations based on changes to the input mesh via 3D widgets. The resulting surface is recomputed locally, in the neighborhood of the area affected by the deformation.
Reference: [Sha90] <editor> C. Shaw. </editor> <booktitle> Non-wimp research at university of alberta. In Position Statement for the SIGGRAPH 1990 Workshop on Non-WIMP User Interfaces, </booktitle> <month> August </month> <year> 1990. </year>
Reference-contexts: He presented a process to determine how to change the control points of the patch to certain geometric constraints. Direct 3D user input devices have been used with relative success to control traditional CAD environments in <ref> [Sha90] </ref> and [GH91]. These systems are limited to CSG and polygonal meshes respectively. Other alternatives to direct manipulation are physical based modeling [BB88][TPBF87]and deformation [SP86][Coq90]. These paradigms permit a wide variety of intuitive distortions and simple modifications to the object if maintained simple.
Reference: [SP86] <author> Thomas W. Sederberg and Scott R. Parry. </author> <title> Free-form deformation of solid geometric models. </title> <editor> In David C. Evans and Russell J. Athay, editors, </editor> <booktitle> Computer Graphics (SIGGRAPH '86 Proceedings), </booktitle> <volume> volume 20, </volume> <pages> pages 151-160, </pages> <month> August </month> <year> 1986. </year>
Reference: [SSOv94] <author> Gerda J. F. Smets, Pieter Jan Stappers, Kees Overbeeke, and Charles van der Mast. </author> <title> Designing in virtual reality: Implementing perceptual-action coupling with affordances. </title> <booktitle> In Virtual Reality Software and Technology (Proceedings of VRST'94, </booktitle> <month> August 23-26, </month> <year> 1994, </year> <pages> Singapore), pages 97-110, </pages> <address> Singapore, August 1994. </address> <publisher> World Scientific Publishing. </publisher>
Reference-contexts: In this case we still have to translate the intentions of the designer into transformations and operations suitable for each representation. Some operations may not correspond to physical manipulations but are simple to develop or compute. Operations that are intuitive, such as hands modeling clay <ref> [SSOv94] </ref>, are more complex to develop. Section 2 will address the issues that characterize interactive modeling systems. In subsection 2.4 I discuss how some commercial and experimental modeling systems work based on those issues. And later in section 2 I give a review of the relevant work.
Reference: [ST92] <author> Richard Szeliski and David Tonnesen. </author> <title> Surface modeling with oriented particle systems. </title> <editor> In Edwin E. Catmull, editor, </editor> <booktitle> Computer Graphics (SIGGRAPH '92 Proceedings), </booktitle> <volume> volume 26, </volume> <pages> pages 185-194, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: The problem in some cases is that a local modification can yield global changes in the spatial structure resulting in a complete recomputation of it. Other representations used to do modeling are voxels [GH91][WK95] and particles <ref> [ST92] </ref>. Voxels (volume elements) are the higher dimension analog to pixels and are very suitable for doing boolean operations. Modeling with particles is achieved by defining the particles' positions, the force-repulsion factor between each other, and other shape constraints by a set of equations.
Reference: [Sut66] <author> Ivan E. Sutherland. </author> <title> Ten unsolved problems in computer graphics. </title> <journal> Datamation, </journal> <year> 1966. </year>
Reference-contexts: More innovative systems using stereo displays and 3D input devices [GS90][HG94][BBH + 90] have focused more on the technical aspects of the hardware than on practical modeling issues. One fundamental issue of interaction is direct manipulation; Sutherland <ref> [Sut66] </ref>, in 1966, considered it as one of the ten unsolved problems in computer graphics. At this time, in the context of the 3D modeling paradigm the problem is still is not completely solved.
Reference: [TM91] <author> Demetri Terzopoulos and Dimitri Metaxas. </author> <title> Dynamic 3D models with local and global deformations: Deformable superquadrics. </title> <journal> IEEE Transactions on Pattern Analysis Machine Intelligence, </journal> <volume> 13(7) </volume> <pages> 703-714, </pages> <year> 1991. </year>
Reference: [TPBF87] <author> Demetri Terzopoulos, John Platt, Alan Barr, and Kurt Fleischer. </author> <title> Elastically deformable models. </title> <editor> In Maureen C. Stone, editor, </editor> <booktitle> Computer Graphics (SIGGRAPH '87 Proceedings), </booktitle> <volume> volume 21, </volume> <pages> pages 205-214, </pages> <month> July </month> <year> 1987. </year>
Reference: [Tru95] <author> Norman Trudeau. Professional modelmaking. Whitney, </author> <year> 1995. </year>
Reference-contexts: described in section 3 and a summary of my current work and several directions for future research are described in section 6. 2 Issues in interactive modeling Traditional modeling is based on the use of sketches and illustrations [MM95] to come up with an idea and then creating a prototype <ref> [Tru95] </ref>. These models are time consuming, difficult and sometimes hazardous to create (e.g. molding plastics and resins), and in general cannot be modified afterwards. Besides creating them, specially when many revisions are made them, is expensive.
Reference: [Van91] <author> G. Vanecek, Jr. Brep-index: </author> <title> A multidimensional space partitioning tree (revised). </title> <journal> International Journal of Computational Geometry and Applications, </journal> <volume> 1(3) </volume> <pages> 243-262, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: In CSG and especially in boundary representations classification can be computationally expensive. Several spatial structures have been proposed to optimize the operation: octrees [Sam89b, Sam89a], BSP trees [Nay90], MSP trees <ref> [Van91] </ref>, sphere trees [Hub94], and hierarchical grid structures [FP94]. Most of these structures work well when the object is not being modified, but few have addressed the problem when the object is constantly modified [NAT90].
Reference: [Vis95] <author> VisModel V1.1 reference manual, </author> <year> 1995. </year>
Reference: [VRM96] <institution> VRML language description. </institution> <note> http://vrml.wired.com, 1996. </note>
Reference-contexts: A commercial CAD system (I-deas), several surface modelers (SurfEdit, Sculpt), and other packages used for visual and animation tasks (FormZ, I3d, EzModeler) are included in the table. EzModeler which also can be used to create virtual worlds <ref> [VRM96] </ref> is of special interest. An experimental modeler (SAM-IAM) is also evaluated.
Reference: [WFB87] <author> Andrew Witkin, Kurt Fleischer, and Alan Barr. </author> <title> Energy constraints on parameterized models. </title> <editor> In Maureen C. Stone, editor, </editor> <booktitle> Computer Graphics (SIGGRAPH '87 Proceedings), </booktitle> <volume> volume 21, </volume> <pages> pages 225-232, </pages> <month> July </month> <year> 1987. </year>
Reference: [WK95] <author> S. W. Wang and Arie E. Kaufman. </author> <title> Volume sculpting. </title> <booktitle> In Computer Graphics (1995 Symposium on Interactive 3D Graphics), </booktitle> <pages> pages 9-12, </pages> <address> Monterey, CA, USA, </address> <month> Apr </month> <year> 1995. </year>
Reference: [YF93] <author> Juli Yamashita and Yukio Fukui. </author> <title> A direct deformation method. </title> <booktitle> In IEEE Virtaul Reality Annual International Symposium, </booktitle> <pages> pages 499-504, </pages> <address> Seattle, Washington, </address> <month> September </month> <year> 1993. </year> <note> IEEE. </note>
Reference-contexts: Virtual tools have good potential as modeling tools and have started to appear in limited ways in several commercial products [Vis95][For95][EzM95]. 5 Direct manipulation of curves and surfaces is considered a more difficult problem <ref> [YF93] </ref> because of their non-linear behavior and the complexity of classifying points. As an example, direct manipulation of tensor-product bezier patches was presented by Fowler [Fow92]. He presented a process to determine how to change the control points of the patch to certain geometric constraints.
Reference: [ZHH96] <author> Robert C. Zeleznik, Kenneth P. Herndon, and John F. Hughes. </author> <title> Sketch: An interface for sketching 3d scenes. </title> <booktitle> In Computer Graphics (SIGGRAPH '96 Proceedings), </booktitle> <pages> pages 163-170. </pages> <publisher> ACM SIGGRAPH, ACM Press, </publisher> <month> August </month> <year> 1996. </year>
References-found: 53

