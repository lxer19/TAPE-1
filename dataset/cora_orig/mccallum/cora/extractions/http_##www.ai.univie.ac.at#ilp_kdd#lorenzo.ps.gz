URL: http://www.ai.univie.ac.at/ilp_kdd/lorenzo.ps.gz
Refering-URL: http://www.ai.univie.ac.at/ilp_kdd/schedule.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: Email: david@dc.fi.udc.es  
Title: Application of Clausal Discovery to Temporal Databases  
Author: David Lorenzo 
Address: Corunna (Spain)  
Affiliation: Artificial Intelligence Laboratory Computer Science Dept., Univ. of  
Abstract: Most of KDD applications consider databases as static objects, and however many databases are inherently temporal, i.e., they store the evolution of each object with the passage of time. Thus, regularities about the dynamics of these databases cannot be discovered as the current state might depend in some way on the previous states. To this end, a pre-processing of data is needed aimed at extracting relationships intimately connected to the temporal nature of data that will be make available to the discovery algorithm. The predicate logic language of ILP methods together with the recent advances as to ef ficiency makes them adequate for this task.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Bloedorn and R.S. Michalski. </author> <title> Constructive induction from data in AQ17-DCI: Further experiments. Technical report, Reports of the Machine Learning and Inference Laboratory. Center for AI, </title> <address> GMU. MLI 91-12, </address> <year> 1991. </year> <month> 14 </month>
Reference-contexts: When the construction process is based on an analysis of the initial data it is called Data-driven Constructive Induction <ref> [2, 1, 3] </ref>. In these approaches, new features are derived and a filtering process removes those that show a low score according to an Attribute Quality Function [1]. A high number of features can pass this test, but anyway, it alleviates the process somewhat. <p> When the construction process is based on an analysis of the initial data it is called Data-driven Constructive Induction [2, 1, 3]. In these approaches, new features are derived and a filtering process removes those that show a low score according to an Attribute Quality Function <ref> [1] </ref>. A high number of features can pass this test, but anyway, it alleviates the process somewhat. Ideally should be a feature constructor that suggested a set of new features, e.g., from the analysis of data.
Reference: [2] <author> E. Bloedorn and R.S. Michalski. </author> <title> Data driven constructive induction in AQ17--PRE: A method and experiments. </title> <booktitle> Proceedings of the Third International Conference on Tools for AI, </booktitle> <address> San Jose, CA, </address> <pages> pages 9-14, </pages> <year> 1991. </year>
Reference-contexts: When the construction process is based on an analysis of the initial data it is called Data-driven Constructive Induction <ref> [2, 1, 3] </ref>. In these approaches, new features are derived and a filtering process removes those that show a low score according to an Attribute Quality Function [1]. A high number of features can pass this test, but anyway, it alleviates the process somewhat.
Reference: [3] <author> E. Bloedorn, R.S. Michalski, and J. Wnek. </author> <title> Multistrategy constructive induction: </title> <booktitle> AQ17-MCI. Proceedings of the 2nd International Workshop on Multistrategy Learning, </booktitle> <address> Harpers Ferry, </address> <publisher> VW, </publisher> <pages> pages 188-203, </pages> <year> 1993. </year>
Reference-contexts: When the construction process is based on an analysis of the initial data it is called Data-driven Constructive Induction <ref> [2, 1, 3] </ref>. In these approaches, new features are derived and a filtering process removes those that show a low score according to an Attribute Quality Function [1]. A high number of features can pass this test, but anyway, it alleviates the process somewhat.
Reference: [4] <author> P. Clark and T. Niblett. </author> <title> The cn2 induction algorithm. </title> <booktitle> Machine Learning, </booktitle> <year> 1988. </year>
Reference-contexts: We think that this is a challenging field for Data Mining methods, needing however a more complex treatment than static databases. Propositional learning systems, e.g., C4.5 [16] or CN2 <ref> [4] </ref>, seem not to be well suited to manage these temporal databases. First of all, they are aimed to classification tasks.
Reference: [5] <author> L. De Raedt and Dehaspe L. </author> <note> Clausal discovery. Submitted. </note>
Reference-contexts: As to many KDD applications, this seems to be the natural setting, given that we are interested in discovering truly relevant or frequent enough regularities more than just inducing a set of rules covering all observations and intended to reconstruct the database. Claudien <ref> [6, 5] </ref> is a recent example of the non-monotonic ILP setting that has been conceived for data mining purposes and that is being used in this work. This paper is organized as follows.
Reference: [6] <author> L. Dehaspe, L. De Raedt, and W. Van Laer. CLAUDIEN. </author> <title> The CLAUsal DIscovery ENgine. User's Guide. </title> <institution> Dpt. of Computer Science. Katholieke Universiteit Leuven, </institution> <year> 1995. </year>
Reference-contexts: As to many KDD applications, this seems to be the natural setting, given that we are interested in discovering truly relevant or frequent enough regularities more than just inducing a set of rules covering all observations and intended to reconstruct the database. Claudien <ref> [6, 5] </ref> is a recent example of the non-monotonic ILP setting that has been conceived for data mining purposes and that is being used in this work. This paper is organized as follows.
Reference: [7] <author> S. Dzeroski. </author> <title> Inductive Logic Programming and Knowledge Discovery in Databases, </title> <booktitle> in Advances in Knowledge Discovery and Data Mining, chapter 8, </booktitle> <pages> pages 117-152. </pages> <publisher> Academic Press Limited, </publisher> <year> 1996. </year>
Reference-contexts: These databases usually involve several levels of objects and complex relations among them. At the same time new and more efficient ILP algorithms have been developed that are making feasible the application of ILP methods to real complex datasets <ref> [8, 12, 7] </ref>. However, the regularities that can be obtained from them with the current applications of KDD are static, i.e., they represent relations holding in the database at a certain moment in time.
Reference: [8] <editor> U. M. Fayyad, G. Piatetsky-Shapiro, P. Smyth, and R. Uthurusamy, editors. </editor> <booktitle> Advances in Knowledge Discovery and Data Mining. </booktitle> <publisher> Academic Press Limited, </publisher> <year> 1996. </year>
Reference-contexts: These databases usually involve several levels of objects and complex relations among them. At the same time new and more efficient ILP algorithms have been developed that are making feasible the application of ILP methods to real complex datasets <ref> [8, 12, 7] </ref>. However, the regularities that can be obtained from them with the current applications of KDD are static, i.e., they represent relations holding in the database at a certain moment in time.
Reference: [9] <author> C. Feng. </author> <title> Inducing Temporal Fault Diagnostic Rules from a Qualitative Model, in Inductive Logic Programming, chapter 24. </title> <publisher> Academic Press Limited, </publisher> <year> 1992. </year>
Reference-contexts: Hence, in these databases, data cannot be analysed without considering their temporal dimension, and the discovered rules should express regularities in the patient's evolution along time. ILP has arosen as an appropiate method for the acquisition of rules from temporal (state-based) data <ref> [9] </ref>, whereas attribute-based learning has not, given that in the latter, the learned descriptions are limited to non-relational descriptions of objects. To this end, temporal data must be translated into a predicate logic representation that ILP methods can manage. <p> Our work is inspired by the work of Feng <ref> [9] </ref> who apply an ILP algorithm (Golem) to the diagnosis of power-supply failures in the Skynet satellite, which usually require the history diagnosis of related components. <p> Thus, the rules can include references to facts occurred 1, 2, : : : states ago. class (A,a):- sensor7 (A,+), succ (A,C), sensor12 (C,-), ... This is the usual specification as used by Feng in <ref> [9] </ref> where states are equidistant, i.e., states are generated by sampling a system at regular intervals. However, a more complex specification must be considered in translating the clinical data into a form usable by an ILP algorithm with respect to the Skynet satellite. <p> However, the expert usually needs to consult the state of a patient in previous visits or to compare current and past measurements. Therefore, a discovered clause should be able to include measurements both of current and past visits. A first possibility consists of using the predicate succ as in <ref> [9] </ref>. Thus, the temporal distance is represented through chains of the predicate succ. 6 pathology (P,V) :- p (P,V,a), succ (V,W), p (P,W,b).
Reference: [10] <author> J. Kietz and Wrobel S. </author> <title> Controlling the Complexity of Learning in Logic through Syntactic and Task-Oriented Models, </title> <booktitle> in Inductive Logic Programming, chapter 16, </booktitle> <pages> pages 335-359. </pages> <publisher> Academic Press Limited, </publisher> <year> 1992. </year>
Reference-contexts: The capacity of exploring these search spaces is becoming more and more efficient computationally, however, more efforts should be aimed at automating the process, e.g., by means of a more intelligent search and so on. Some dimensions exist that can control the complexity of the learning process <ref> [10] </ref>. The use of domains topologies and a hierarchy of rule models as a means of automating the process, is quite useful. However, such hierarchy is not so feasible in poorly structured domains as the presented in this work. <p> This obviously requires some knowledge about the domain with respect to non model-driven algorithms. Another source of effectiveness comes from using a many-sorted logic as pointed out by Kietz and Wrobel in <ref> [10] </ref>. Data-driven algorithms like Progol distinguish only different data types. Thus, if multiple sorts are represented over the same domain, the algorithm can sometimes do incorrect substitutions. To avoid it, sorts defined over the same domain need to be disjoint.
Reference: [11] <author> Dehaspe L. and L. De Raedt. DLAB. </author> <title> a declarative language bias for concept learning and knowledge discovery engines. </title> <type> Technical report, </type> <institution> Report CW 214 Dept. of Computing Science, K.U. Leuven, </institution> <year> 1995. </year>
Reference-contexts: This is part of our current research topics. A not less important step with model-driven algorithms like Claudien, is defining the templates or the rule models to be discovered <ref> [11] </ref>.
Reference: [12] <author> Dehaspe L., W. Van Laer, and L. De Raedt. </author> <title> Applications of a logical discovery engine. </title> <booktitle> Proceedings of the 4th International Workshop on Inductive Logic Programming, </booktitle> <year> 1994. </year>
Reference-contexts: These databases usually involve several levels of objects and complex relations among them. At the same time new and more efficient ILP algorithms have been developed that are making feasible the application of ILP methods to real complex datasets <ref> [8, 12, 7] </ref>. However, the regularities that can be obtained from them with the current applications of KDD are static, i.e., they represent relations holding in the database at a certain moment in time.
Reference: [13] <author> D. Lorenzo. </author> <title> Inductive logic programming for discrete event systems. </title> <note> Submitted, </note> <year> 1996. </year>
Reference-contexts: The most recent ILP algorithms have been developed aimed at coping with large and real databases, mainly within the normal ILP setting. Our experience with these algorithms is mainly based on a previous work <ref> [13] </ref> where Progol is used to induce the discrete-event specification of a system from descriptions of its behaviour. In this case, we are interested in a complete and minimal solution which is guaranteed to exist if data are complete and noise free.
Reference: [14] <author> R.L. Marin. </author> <title> An Expert System for the diagnosis and treatment of the maternal and foetus state before birth. </title> <type> PhD thesis, </type> <institution> University of Santiago de Compostela, Spain, </institution> <year> 1986. </year> <month> 15 </month>
Reference-contexts: One interesting example is the domain of Obstetrics, particularly the high risk units, that are concerned with the follow-up and treatment of women from the beginning of the gestation till the birth. The development of an Expert System for this domain <ref> [17, 14] </ref> has shown to be a really hard work that needs a large knowledge base with multiple kind of rules -for the interpretation of results, for requesting data, for clinical actions, for risk valuation- and so on.
Reference: [15] <author> R. P. Otero, D. Lorenzo, and P. Cabalar. </author> <title> Automatic induction of DEVS structures. </title> <booktitle> Lecture Notes in Computer Science, </booktitle> (1030):305-315, 1996. 
Reference-contexts: visit at which an event occurred Table 1: Defining a search space in Obstetrics Unlike the normal ILP setting, where the aim is to obtain a complete set of clauses, and hence, feature construction and rule generation can be repeated until a termination condition -e.g., a complete solution- is satisfied <ref> [15] </ref>, in the 9 non-monotonic ILP setting (e.g. Claudien), the aim is not to find a complete solution covering all the observations and so, the termination condition is not so clear.
Reference: [16] <author> J.R. Quinlan. C4.5: </author> <title> Programs for Machine Learning. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Francisco CA, </address> <year> 1993. </year>
Reference-contexts: We think that this is a challenging field for Data Mining methods, needing however a more complex treatment than static databases. Propositional learning systems, e.g., C4.5 <ref> [16] </ref> or CN2 [4], seem not to be well suited to manage these temporal databases. First of all, they are aimed to classification tasks.
Reference: [17] <author> M.J. Taboada. </author> <title> A language for the representation of temporal knowledge in obstetrics. </title> <type> Master's thesis, </type> <institution> University of Santiago de Compostela, Spain, </institution> <year> 1989. </year>
Reference-contexts: One interesting example is the domain of Obstetrics, particularly the high risk units, that are concerned with the follow-up and treatment of women from the beginning of the gestation till the birth. The development of an Expert System for this domain <ref> [17, 14] </ref> has shown to be a really hard work that needs a large knowledge base with multiple kind of rules -for the interpretation of results, for requesting data, for clinical actions, for risk valuation- and so on. <p> However, a more complex specification must be considered in translating the clinical data into a form usable by an ILP algorithm with respect to the Skynet satellite. In BNF notation, the syntax of a database in the Obstetrics domain <ref> [17] </ref> is as follows: &lt;BD&gt; ::= &lt;patient&gt;+ &lt;patient&gt; ::= &lt;patient-name&gt; &lt;clinical-variable&gt;+ &lt;visit&gt; &lt;clinical-variable&gt; ::= &lt;variable&gt; &lt;value-date&gt;+ &lt;value-date&gt; ::= &lt;value&gt; &lt;date&gt; &lt;value&gt; ::= &lt;discrete-value&gt; || &lt;continuous-value&gt; 4 &lt;date&gt; ::= DATE &lt;year&gt; &lt;month&gt; &lt;day&gt; &lt;hour&gt; &lt;minute&gt; &lt;visit&gt; ::= VISIT &lt;value-interval&gt;+ &lt;value-interval&gt; ::= &lt;value&gt; &lt;interval&gt; &lt;interval&gt; ::= DATE &lt;year&gt; &lt;month&gt; &lt;day&gt; &lt;hour&gt; &lt;minute&gt; &lt;year&gt;
Reference: [18] <author> S. Wrobel and S. Dzeroski. </author> <title> The ILP description learning problem: Towards a general model-level definition of data mining in ilp. </title> <booktitle> Proc. FGML-95, Annual Workshop of the GI Special Interes Group Machine Learning (GI FG 1.1.3) Editors Morik, </booktitle> <editor> K. and Herrman J., </editor> <year> 1995. </year> <month> 16 </month>
Reference-contexts: To this end, temporal data must be translated into a predicate logic representation that ILP methods can manage. Recently, the non-monotonic ILP setting <ref> [18] </ref> has appeared to make available to the KDD community the advantages of ILP methods.
References-found: 18

