URL: ftp://info.mcs.anl.gov/pub/ADOLC/PAPERS/s_campb.ps.gz
Refering-URL: http://www.mcs.anl.gov/Projects/autodiff/AD_Tools/adolc.anl/adolc.html
Root-URL: http://www.mcs.anl.gov
Title: Automatic Difierentiation and Implicit Difierential Equations  
Author: Stephen L. Campbell Richard Hollenbeck 
Abstract: Many physical processes are most naturally and easily modeled as mixed systems of difierential and algebraic equations (DAEs). There has been an increased interest in several areas in exploiting the advantages of working directly with these implicit models. Difierentiation plays an important role in both the analysis and numerical solution of DAEs. Automatic difierentiation can have a signiflcant impact on what is considered a practical approach and what types of problems can be solved. However, working with DAEs places special demands on automatic difierentiation codes. More is required than just computing a gradient quickly. This paper will begin with a brief introduction to DAEs and how difierentiation is important when working with DAEs. Then the requirements in terms of both information and performance that DAEs make of automatic difierentiation software will be presented. Some of our own experience in using automatic difierentiation software will be mentioned. It will be seen that automatic difierentiation software has a signiflcant role to play in the future for DAEs but that not all of the demands that the numerical solution of DAEs places on automatic difierentiation software are currently being met. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. E. Brenan, S. L. Campbell, and L. R. Petzold, </author> <title> Numerical Solution of Initial-Value Problems in Difierential-Algebraic Equations. </title> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1996. </year>
Reference-contexts: This is briey described in Section 6. Several numerical studies are presented in Section 7. The flrst example is the space shuttle reentry problem from <ref> [1] </ref>. This is an index 3 DAE in 7 state variables. This was the largest and most complex problem looked at in [10]. The second example is an index 5 path control problem in 8 state variables for a robotic arm. Then two chemical process control problems are examined. <p> The name arises since often (1) is a mix of difierential and algebraic equations. DAEs arise naturally in many areas <ref> [1] </ref>, [15]. The algebraic equations can arise because of physical constraints, desired behavior, or when discretizing spatial operators during the method of lines solution of a PDE. <p> Finally the index also afiects the conditioning of the matrices which occur in some methods such as BDF (Backward difierentiation formulas). Several numerical methods have been proposed for solving DAEs including BDF or implicit Runge-Kutta (IRK) methods <ref> [1] </ref>, [15]. There are also several methods designed speciflcally for speciflc applications such as constrained mechanics or electrical circuits. These approaches have proven very useful and the availability of codes has encouraged a wider consideration of DAE models. <p> These approaches have proven very useful and the availability of codes has encouraged a wider consideration of DAE models. However, these methods are limited to problems of low index and special structure. For index one DAEs we have codes such as DASSL or DASPK <ref> [1] </ref>. <p> This was the largest example considered in [10]. It is the trajectory prescribed path control problem for the shuttle in relative coordinates from <ref> [1] </ref>. The equations can be found in [1] or [8]. The consistent initial conditions are from [8]. It is an index three DAE in 7 variables. <p> This was the largest example considered in [10]. It is the trajectory prescribed path control problem for the shuttle in relative coordinates from <ref> [1] </ref>. The equations can be found in [1] or [8]. The consistent initial conditions are from [8]. It is an index three DAE in 7 variables.
Reference: [2] <author> S. L. Campbell, </author> <title> A computational method for general higher index nonlinear singular systems of difierential equations, </title> <booktitle> IMACS Transactions on Scientiflc Computing, 1.2 (1989), </booktitle> <pages> pp. </pages> <month> 555-560. </month> <title> Automatic Differentiation and Implicit DEs 13 [3] , Numerical methods for unstructured higher index DAEs, </title> <journal> Annals of Numerical Mathematics, </journal> <volume> 1 (1994), </volume> <pages> pp. </pages> <month> 265-278. </month> <title> [4] , Least squares completions for nonlinear difierential algebraic equations, </title> <journal> Numer. Math., </journal> <volume> 65 (1993), </volume> <pages> pp. </pages> <month> 77-94. </month> <title> [5] , High index difierential algebraic equations, </title> <journal> J. Mech. Struct. & Machines, </journal> <volume> 23 (1995), </volume> <pages> pp. 199-222. </pages>
Reference-contexts: However, these methods are limited to problems of low index and special structure. For index one DAEs we have codes such as DASSL or DASPK [1]. There is no general code currently available for even index two problems. 4 Campbell and Hollenbeck 3 General Numerical Integrators In <ref> [2] </ref> we outlined a more general procedure that in principle can be used to numerically solve DAEs not solvable by classical means and to compute consistent initial conditions when classical methods are applicable. <p> That is, r . Then x 0 is a function of just (x; t) so that x 0 = g (x; t). One can then integrate x 0 = g (x; t). A detailed discussion of the technical issues with this type of approach, can be found in <ref> [2] </ref>, [4], [8], [9]. It is important to note that while G = 0 may uniquely determine x 0 , that is not the case with some of the higher derivatives unless extra difierentiation is done.
Reference: [6] <author> S. L. Campbell and C. W. Gear, </author> <title> The index of general nonlinear DAEs, </title> <journal> Numerische Mathematik, </journal> <volume> 72 (1995), </volume> <pages> pp. 173-196. </pages>
Reference-contexts: In (4) we have taken r i = r to simplify our notation. There are several versions of the index of a DAE and they are not equivalent for general nonlinear DAEs <ref> [6] </ref>. For our purposes, we shall deflne the index to be the least value of r for which the derivative array equations (4) uniquely determine x 0 given a consistent (x; t). This index is sometimes called the difierentiation index.
Reference: [7] <author> S. L. Campbell and E. </author> <title> Griepentrog Solvability of general difierential algebraic equations, </title> <journal> SIAM J. Sci. Comp., </journal> <volume> 16 (1995), </volume> <pages> pp. 257-270. </pages>
Reference-contexts: For example, one might want x 00 as well as x 0 . Finally, in practice it is often possible to difierentiate some of the equations less than others. However, the usual graphical based algorithms can underestimate the amount of difierentiation needed <ref> [7] </ref>. Our interest here is just in comparing AD and symbolic approaches. All equations have been difierentiated the same number of times. 7.1 Shuttle reentry problem The flrst test problem has functions which are typical of those that can arise in ight control and mechanics. <p> This problem is described in the appendix. There are 8 state variables. The DAE is index 5. The model is from [12]. The equations also appear in <ref> [7] </ref>.
Reference: [8] <author> S. L. Campbell and E. Moore, </author> <title> Progress on a general numerical method for nonlinear higher index DAEs II, Circuits, </title> <booktitle> Systems, Signal Processing, 13 (1994), </booktitle> <pages> pp. </pages> <month> 123-138. </month> <title> [9] , Constraint preserving integrators for general nonlinear higher index daes, </title> <journal> Numerische Mathematik, </journal> <volume> 69 (1995), </volume> <pages> pp. 383-399. </pages>
Reference-contexts: Then x 0 is a function of just (x; t) so that x 0 = g (x; t). One can then integrate x 0 = g (x; t). A detailed discussion of the technical issues with this type of approach, can be found in [2], [4], <ref> [8] </ref>, [9]. It is important to note that while G = 0 may uniquely determine x 0 , that is not the case with some of the higher derivatives unless extra difierentiation is done. <p> This was the largest example considered in [10]. It is the trajectory prescribed path control problem for the shuttle in relative coordinates from [1]. The equations can be found in [1] or <ref> [8] </ref>. The consistent initial conditions are from [8]. It is an index three DAE in 7 variables. <p> This was the largest example considered in [10]. It is the trajectory prescribed path control problem for the shuttle in relative coordinates from [1]. The equations can be found in [1] or <ref> [8] </ref>. The consistent initial conditions are from [8]. It is an index three DAE in 7 variables. <p> These examples show the necessity for AD software to have some sort of built in optimization if it is to be the method of choice for these types of integrators. We have done some experimentation with unoptimized MAPLE FORTRAN Jacobians. As reported in <ref> [8] </ref> for the shuttle problem, they took over 4 times as long to evaluate as the optimized MAPLE FORTRAN Jacobians.
Reference: [10] <author> S. L. Campbell, E. Moore, and Y. Zhong, </author> <title> Utilization of automatic difierentiation in control algorithms, </title> <journal> IEEE Trans. Automatic Control, </journal> <volume> 39 (1994), </volume> <pages> pp. 1047-1052. </pages>
Reference-contexts: Automatic difierentiation (AD) is essential for doing large or complex problems. However, we need much more than just some Taylor coe-cients. Many current automatic difierentiation codes do not readily provide the kind of information that we require. This paper is a continuation of our earlier paper <ref> [10] </ref> where we briey discussed the use of symbolic and automatic difierentiation software and DAEs. This paper difiers from [10] is several ways. Most importantly, [10] was aimed at control engineers and was intended to show how certain information they need could be quickly computed. <p> Many current automatic difierentiation codes do not readily provide the kind of information that we require. This paper is a continuation of our earlier paper <ref> [10] </ref> where we briey discussed the use of symbolic and automatic difierentiation software and DAEs. This paper difiers from [10] is several ways. Most importantly, [10] was aimed at control engineers and was intended to show how certain information they need could be quickly computed. <p> This paper is a continuation of our earlier paper <ref> [10] </ref> where we briey discussed the use of symbolic and automatic difierentiation software and DAEs. This paper difiers from [10] is several ways. Most importantly, [10] was aimed at control engineers and was intended to show how certain information they need could be quickly computed. <p> This is briey described in Section 6. Several numerical studies are presented in Section 7. The flrst example is the space shuttle reentry problem from [1]. This is an index 3 DAE in 7 state variables. This was the largest and most complex problem looked at in <ref> [10] </ref>. The second example is an index 5 path control problem in 8 state variables for a robotic arm. Then two chemical process control problems are examined. The flrst is an index 3 problem in 18 state variables. The second is an index 2 problem in 58 state variables. <p> ADOL-C actually only computes the j = 0 case of (16). The partial derivatives for other values of j are given by (12). The relationship between the ADOL-C output (16) and the needed partial derivatives (14) was established in <ref> [10] </ref>. Let an overbar indicate that the partial is computed thinking of v; x as dependent. <p> We have also written some code in MAPLE that will take the equations which describe a DAE, generate formulas for G, J , and then convert these formulas to FORTRAN (or C) subroutines. As noted in <ref> [10] </ref> it can take considerable computational efiort for MAPLE to generate the routines. However, once the FORTRAN subroutines are generated, the overhead is paid and these FORTRAN subroutines can be as fast, or faster, than automatic difierentiation on some "smaller" problems. <p> The symbolic approach is also helpful in that it can serve as a check on how the automatic difierentiation software is doing on small to moderate sized problems. 7 Examples In <ref> [10] </ref> we examined the shuttle problem which showed how automatic difierentiation was a viable approach. We flrst return to that example and rerun it on somewhat faster hardware. In addition, we consider three more problems that arose in applications. <p> All equations have been difierentiated the same number of times. 7.1 Shuttle reentry problem The flrst test problem has functions which are typical of those that can arise in ight control and mechanics. This was the largest example considered in <ref> [10] </ref>. It is the trajectory prescribed path control problem for the shuttle in relative coordinates from [1]. The equations can be found in [1] or [8]. The consistent initial conditions are from [8]. It is an index three DAE in 7 variables. <p> Only ADOL-C was used. ADOL-C on the Absorption Column Evaluation CPU Time Average Memory Used r G J G J 2 0.0466 0.1250 150.3 281.8 Automatic Differentiation and Implicit DEs 11 7.5 Comments on Computations These additional computations support the previous observation in <ref> [10] </ref> that for a one time integration using the AD software is superior. However, if multiple runs are being done then on moderate sized problems the Jacobians from MAPLE are somewhat faster than the unoptimized AD Jacobians.
Reference: [11] <author> B. Christianson, </author> <title> Automatic Hessians by reverse accumulation in Ada, </title> <journal> IMA J. Numerical Anal., </journal> <volume> 12 (1992), </volume> <pages> pp. 135-150. </pages>
Reference-contexts: At this time most AD codes only return the u i . The need for computing (9) was a major factor in choosing ADOL-C. It will be useful later to note that <ref> [11] </ref> @u i = 0 if j &gt; i (10) @h i @u i = @h jk There are two phases to an automatic difierentiation code like ADOL-C.
Reference: [12] <author> A. De Luca and A. Isidori, </author> <title> Feedback linearization of invertible systems, Colloq. Aut. & Robots, </title> <publisher> Duisburg, </publisher> <year> 1987. </year>
Reference-contexts: This problem is described in the appendix. There are 8 state variables. The DAE is index 5. The model is from <ref> [12] </ref>. The equations also appear in [7].
Reference: [13] <author> A. Griewank and G. F. Corliss, </author> <title> editors, Automatic Difierentiation of Algorithms: Theory, Implementation, and Application. </title> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1991. </year>
Reference: [14] <author> A. Griewank, D. Juedes, and J. Srinivasan, ADOL-C: </author> <title> a package for the automatic difierentiation of algorithms written in C/C++, </title> <type> Preprint MCS-P180-1190, </type> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, </institution> <year> 1991. </year>
Reference: [15] <author> E. Hairer, C. Lubich, and M. Roche, </author> <title> The Numerical Solution of Difierential-Algebraic Systems by Runge-Kutta Methods. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1989. </year>
Reference-contexts: The name arises since often (1) is a mix of difierential and algebraic equations. DAEs arise naturally in many areas [1], <ref> [15] </ref>. The algebraic equations can arise because of physical constraints, desired behavior, or when discretizing spatial operators during the method of lines solution of a PDE. <p> Finally the index also afiects the conditioning of the matrices which occur in some methods such as BDF (Backward difierentiation formulas). Several numerical methods have been proposed for solving DAEs including BDF or implicit Runge-Kutta (IRK) methods [1], <ref> [15] </ref>. There are also several methods designed speciflcally for speciflc applications such as constrained mechanics or electrical circuits. These approaches have proven very useful and the availability of codes has encouraged a wider consideration of DAE models. However, these methods are limited to problems of low index and special structure.
Reference: [16] <author> A. Kumar and P. Daoutidis, </author> <title> Feedback control of nonlinear difierential-algebraic-equation systems, </title> <journal> AIChE Journal, </journal> <volume> 41 (1995), </volume> <pages> pp. </pages> <month> 619-636. </month> <title> [17] , Feedback regularization and control of nonlinear difierential-algebraic-equation systems, </title> <type> Preprint, </type> <year> 1995. </year> <title> [18] , Control of nonlinear difierential-algebraic-equation systems with disturbances, </title> <note> IEC Research, to appear. </note>

References-found: 12

