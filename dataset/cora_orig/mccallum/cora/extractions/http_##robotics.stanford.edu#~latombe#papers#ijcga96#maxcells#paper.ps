URL: http://robotics.stanford.edu/~latombe/papers/ijcga96/maxcells/paper.ps
Refering-URL: http://robotics.stanford.edu/~latombe/projects/
Root-URL: http://www.cs.stanford.edu
Title: Polyhedral Assembly Partitioning Using Maximally Covered Cells in Arrangements of Convex Polytopes  
Author: Leonidas J. Guibas Dan Halperin yz Hirohisa Hirukawa Jean-Claude Latombe Randall H. Wilson 
Abstract: We study the following problem: Given a collection A of polyhedral parts in 3D, determine whether there exists a subset S of the parts that can be moved as a rigid body by infinitesimal translation and rotation, without colliding with the rest of the parts, A n S. A negative result implies that the object whose constituent parts are the collection A cannot be taken apart with two hands. A positive result, together with the list of movable parts in S and a direction of motion for S, can be used by an assembly sequence planner (it does not, however, give the complete specification of an assembly operation). This problem can be transformed into that of traversing an arrangement of convex polytopes in the space of directions of rigid motions. We identify a special type of cells in that arrangement, which we call the maximally covered cells, and we show that it suffices for the problem at hand to consider a representative point in each of these special cells rather than to compute the entire arrangement. Using this observation, we devise an algorithm which is complete (in the sense that it is guaranteed to find a solution if one exists), simple, and improves significantly over the best previously known solutions. We describe an implementation of our algorithm and report experimental results obtained with this implementation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Aronov, M. Bern and D. Eppstein, </author> <title> Arrangements of polytopes, </title> <type> manuscript, </type> <year> 1991. </year> <month> 17 </month>
Reference-contexts: The arrangement A (Q) is the subdivision of d-space induced by the polytopes in Q. An obvious upper bound on the complexity of such an arrangement is O (N d )|we extend each facet of every polytope in Q into a full hyperplane. However, Aronov et al. <ref> [1] </ref> have shown that the actual complexity of such an arrangement is in general much lower. They presented a bound O (N b d 2 c K d d 2 e ) and showed that it is tight in the worst case. <p> The overall number of cells in the arrangement A (Q) is fi (N 2 K 3 ) in the worst case <ref> [1] </ref>. The number of cells that our algorithm examines is fi (K 5 ). Note that K is never bigger than N ; in practical situations K is often much smaller than N .
Reference: [2] <author> T.H. Cormen, C.E. Leiserson and R.L. Rivest, </author> <title> Introduction to Algorithms, </title> <publisher> The MIT Press, </publisher> <address> Cambridge MA, </address> <year> 1990. </year>
Reference-contexts: The strong connectivity of the DBG is checked by an algorithm due to Tarjan and Hopcroft <ref> [2] </ref>. The input of the third module is the output of the second module, and the final output is the separability of the given assembly.
Reference: [3] <author> R. Dawson, </author> <title> On removing a ball without disturbing the others, </title> <journal> Mathematics Magazine 57 no. </journal> <volume> 1 (1984), </volume> <pages> pp. 27-30. </pages>
Reference-contexts: This is typical of several existing assembly planning techniques that rely on a "generate-and-test" approach; see, e.g., [12]. We remark that the work by Snoeyink and Stolfi continues a long line of research, whose objective was to construct composites that are interlocked under various types of motions (see, e.g., <ref> [3] </ref>, [6], [17]). An efficient procedure for the infinitesimal partitioning problem was proposed by Wilson and Matsui [22] who devised a polynomial-time algorithm to solve this problem. Their solution is based on the non-directional blocking graph (NDBG) concept [20] (see also Section 2 below).
Reference: [4] <author> H. Edelsbrunner, </author> <title> Algorithms in Combinatorial Geometry, </title> <publisher> Springer-Verlag, </publisher> <address> Heidelberg, </address> <year> 1987. </year>
Reference-contexts: Arrangements of hyperplanes have been studied extensively in combinatorial and computational geometry <ref> [4] </ref>. The combinatorial complexity of an arrangement is defined to be the overall number of cells of various dimensions in the arrangement. <p> Furthermore, there is an algorithm with running time O (n d ) to compute all the cells in the arrangement and their adjacency relations|see <ref> [4, Chapter 7] </ref>, [5]. Wilson and Matsui use this algorithm in their solution of the partitioning problem [22]. In our solution we look at a slightly different arrangement: an arrangement of convex polytopes.
Reference: [5] <author> H. Edelsbrunner, R. Seidel and M. Sharir, </author> <title> On the zone theorem for hyperplane arrangements, </title> <journal> SIAM J. Comput. </journal> <volume> 22 (1993), </volume> <pages> pp. 418-429. </pages>
Reference-contexts: Furthermore, there is an algorithm with running time O (n d ) to compute all the cells in the arrangement and their adjacency relations|see [4, Chapter 7], <ref> [5] </ref>. Wilson and Matsui use this algorithm in their solution of the partitioning problem [22]. In our solution we look at a slightly different arrangement: an arrangement of convex polytopes. Let Q be a collection of K convex polytopes in d-dimensional space, with a total of N facets.
Reference: [6] <author> L. Fejes Toth and A. Heppes, </author> <note> Uber stabile Korpersysteme, Compositio Mathematica 15 no. </note> <month> 2 </month> <year> (1963), </year> <pages> pp. 119-126. </pages>
Reference-contexts: We remark that the work by Snoeyink and Stolfi continues a long line of research, whose objective was to construct composites that are interlocked under various types of motions (see, e.g., [3], <ref> [6] </ref>, [17]). An efficient procedure for the infinitesimal partitioning problem was proposed by Wilson and Matsui [22] who devised a polynomial-time algorithm to solve this problem. Their solution is based on the non-directional blocking graph (NDBG) concept [20] (see also Section 2 below).
Reference: [7] <author> L. J. Guibas, D. Halperin, H. Hirukawa, J.-C. Latombe, and R. H. Wilson, </author> <title> A simple and efficient procedure for polyhedral assembly partitioning under infinitesimal motions, </title> <booktitle> Proc. IEEE Intl. Conf. on Robotics and Automation, </booktitle> <pages> pp. 2553-2560, </pages> <year> 1995. </year>
Reference-contexts: The algorithm improves considerably over the best previously known algorithms for this problem (for a comparison of the 16 number of cells checked see the last paragraph of Section 4), and appears to perform well in practice. The new solution seems to be of independent interest; in <ref> [7] </ref> we have shown how it can be used to solve a different problem arising in the context of object recognition. Are there other applications where maximally covered cells in arrangements of convex polytopes may be of use? Our algorithm was implemented and we have reported experimental results.
Reference: [8] <author> L.J. Guibas, M. Sharir and S. Sifrony, </author> <title> On the general motion planning problem with two degrees of freedom, </title> <journal> Discrete Comput. Geom. </journal> <volume> 4 (1989), </volume> <pages> 491-521. </pages>
Reference-contexts: A typical example of such saving is in robot motion planning when one is often interested in a single cell in the arrangement of constraint surfaces (i.e., boundaries of configuration space obstacles); see <ref> [8] </ref>, [9]. In the next section we present a special substructure in arrangements of convex polytopes that is relevant to the partitioning problem. 3 Maximally Covered Cells Our novel and more efficient approach is based on several observations that we explain in this section.
Reference: [9] <author> D. Halperin and M. Sharir, </author> <title> Almost tight upper bounds for the single cell and zone problems in three dimensions, </title> <journal> Discrete Comput. Geom. </journal> <volume> 14 (1995), </volume> <pages> pp. 385-410. </pages>
Reference-contexts: A typical example of such saving is in robot motion planning when one is often interested in a single cell in the arrangement of constraint surfaces (i.e., boundaries of configuration space obstacles); see [8], <ref> [9] </ref>. In the next section we present a special substructure in arrangements of convex polytopes that is relevant to the partitioning problem. 3 Maximally Covered Cells Our novel and more efficient approach is based on several observations that we explain in this section.
Reference: [10] <author> H. Hirukawa, T. Matsui and K. Takase, </author> <title> Automatic determination of possible velocity and applicable force of frictionless objects in contact, </title> <journal> IEEE Trans. Robotics and Automation 10 no. </journal> <volume> 3 (1994), </volume> <pages> pp. 309-322. </pages>
Reference-contexts: Output e and movable subassembly 8. exit 9. Report "INTERLOCKED" A preliminary step, omitted in the algorithm description above, derives the point contacts that are used to define the input hyperplane constraints. For that purpose, we use the algorithm devised by Hirukawa et al. <ref> [10] </ref>; see there for details. Lines 1-8 of the algorithm should be run twice. Once with subsets of polytopes from Q only, and another time where each subset includes the bounding hyperbox B (see proof of Theorem 3.3). <p> The contact constraints are computed by the algorithm described in <ref> [10] </ref>. Let us very briefly review this algorithm. The contact constraints between polyhedra for infinitesimal motions are equivalent in general to those at a finite number of point contacts. So the algorithm finds all pairs of vertices and planar faces in contact and those of pairs of edges in contact. <p> Note that some of the constraints in the figure are redundant and we can eliminate them in a preprocessing stage (See <ref> [10] </ref> for details). The representative points in the maximally covered cells found by the algorithm are (1; 0; 0), (0; 1; 0) and (0; 0; 1), where the coordinate system is shown in Figure 4.
Reference: [11] <author> L.S. Homem de Mello and S. Lee, </author> <title> editors, Computer-Aided Mechanical Assembly Planning, </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, </address> <year> 1991. </year> <title> 18 (a) (b) </title>
Reference: [12] <author> L.S. Homem de Mello and A.C. Sanderson, </author> <title> A correct and complete algorithm for the generation of mechanical assembly sequences, </title> <journal> IEEE Trans. Robotics and Automation 7 no. </journal> <volume> 2 (1991), </volume> <pages> pp. 228-240. </pages>
Reference-contexts: Thus their algorithm for checking infinitesimal separability is exponential in the number of parts. This is typical of several existing assembly planning techniques that rely on a "generate-and-test" approach; see, e.g., <ref> [12] </ref>. We remark that the work by Snoeyink and Stolfi continues a long line of research, whose objective was to construct composites that are interlocked under various types of motions (see, e.g., [3], [6], [17]).
Reference: [13] <author> N. Megiddo, </author> <title> Linear programming in linear time when the dimension is fixed, </title> <editor> J. </editor> <booktitle> ACM 31 (1984), </booktitle> <pages> pp. 114-127. </pages>
Reference-contexts: We will focus on the problems that arise when we take all possible combinations of exactly d polytopes; this will dominate the running time of solving all the other LP problems. We use Megiddo's algorithm that runs in time linear in the number of constraints <ref> [13] </ref>. Thus asymptotically the overall running time for solving all the LP problems equals the overall number of constraints given to all these problems. Let us fix one constraint h, belonging to one polytope T (i.e., to one set of constraints).
Reference: [14] <author> R.S. Mattikalli and P.K. Khosla, </author> <title> Motion constraints from contact geometry: Representation and analysis, </title> <booktitle> Proc. IEEE International Conference on Robotics and Automation, </booktitle> <address> Nice, </address> <year> 1992, </year> <pages> pp. 2178-2185. </pages>
Reference: [15] <author> K. Mulmuley, </author> <title> Computational Geometry: An Introduction Through Randomized Algorithms, </title> <publisher> Prentice Hall, </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: For one polytope with m facets in dimension d, the preprocessing takes O (m b d 2 c+* ) expected time, and allows for query time O (log m) <ref> [15] </ref>. Let m i be the number of facets of the ith polytope in the given collection.
Reference: [16] <author> B.A.Murtagh and M.A.Saunders, </author> <title> MINOS 5.4 USER'S GUIDE, </title> <type> Technical Report SOL 83-20R, </type> <institution> Department of Operations Research, Stanford University, </institution> <year> 1993. </year>
Reference-contexts: The first module is implemented in CommonLisp with object-oriented primitives on a Sun Sparc Station 1+. As to the second module of the implementation, the representative points are found by linear programming. This linear programming part is solved using the MINOS package <ref> [16] </ref>. Here, a random hyperplane is used for the central projection (the hyperplane in Subsection 2.1), whose parallel hyperplane passing through the origin should not cross the vertices on S 5 . In the MINOS package, this hyperplane is given as one of the linear constraints to the LP problem.
Reference: [17] <author> B.K. Natarajan, </author> <title> On planning assemblies, </title> <booktitle> Proc. 4th ACM Symposium on Computational Geometry, </booktitle> <year> 1988, </year> <pages> pp. 299-308. </pages>
Reference-contexts: For more information on assembly planning see, e.g., [11],[21],[23]. In 1988, in his paper "On Planning Assemblies" <ref> [17] </ref>, Natarajan conjectured that "two hands suffice to assemble any composite comprised of convex polyhedra in 3-space". <p> We remark that the work by Snoeyink and Stolfi continues a long line of research, whose objective was to construct composites that are interlocked under various types of motions (see, e.g., [3], [6], <ref> [17] </ref>). An efficient procedure for the infinitesimal partitioning problem was proposed by Wilson and Matsui [22] who devised a polynomial-time algorithm to solve this problem. Their solution is based on the non-directional blocking graph (NDBG) concept [20] (see also Section 2 below).
Reference: [18] <author> M.S. Ohwovoriole and B. Roth, </author> <title> An extension of screw theory, </title> <journal> Trans. ASME, J. Mechanical Design 103 (1981), pp.725-735. </journal>

Reference: [20] <author> R.H. Wilson, </author> <title> On Geometric Assembly Planning, </title> <type> Ph.D. Dissertation, </type> <institution> Computer Science Department, Stanford University, </institution> <month> March </month> <year> 1992. </year>
Reference-contexts: An efficient procedure for the infinitesimal partitioning problem was proposed by Wilson and Matsui [22] who devised a polynomial-time algorithm to solve this problem. Their solution is based on the non-directional blocking graph (NDBG) concept <ref> [20] </ref> (see also Section 2 below). In this paper we take a similar approach to that of Wilson and Matsui, but we derive a considerably more efficient algorithm. The problem can be transformed into that of traversing an arrangement of convex polytopes in the space of directions of rigid motions.
Reference: [21] <author> R.H. Wilson and J.-C. Latombe, </author> <title> Geometric reasoning about mechanical assembly, </title> <journal> Journal of Artificial Intelligence, </journal> <volume> 71 no. 2, </volume> <year> 1994, </year> <pages> pp. 371-396. </pages>
Reference-contexts: 1 Introduction In this paper we study an instance of the assembly partitioning problem <ref> [21] </ref>: Given a collection A of non-overlapping polyhedral parts, does there exist an infinitesimal motion (translation and rotation) that can be applied to a subset S of the parts in A, that will fl Work on this paper by L.J. Guibas, D. Halperin and J.-C.
Reference: [22] <author> R.H. Wilson and T. Matsui, </author> <title> Partitioning an assembly for infinitesimal motions in translation and rotation, </title> <booktitle> Proc. IEEE International Conference on Intelligent Robots and Systems, </booktitle> <year> 1992, </year> <pages> pp. 1311-1318. </pages>
Reference-contexts: We remark that the work by Snoeyink and Stolfi continues a long line of research, whose objective was to construct composites that are interlocked under various types of motions (see, e.g., [3], [6], [17]). An efficient procedure for the infinitesimal partitioning problem was proposed by Wilson and Matsui <ref> [22] </ref> who devised a polynomial-time algorithm to solve this problem. Their solution is based on the non-directional blocking graph (NDBG) concept [20] (see also Section 2 below). In this paper we take a similar approach to that of Wilson and Matsui, but we derive a considerably more efficient algorithm. <p> In Subsection 2.2 we survey some combinatorial results concerning arrangements in general and arrangements of convex polytopes in particular. 2.1 Blocking Graphs and Contact Analysis The starting point of our new approach is similar to that of Wilson and Matsui <ref> [22] </ref>. In this section we briefly review some of the ingredients of their analysis that are needed here as well. We refer the reader to their paper [22] for more details. <p> in particular. 2.1 Blocking Graphs and Contact Analysis The starting point of our new approach is similar to that of Wilson and Matsui <ref> [22] </ref>. In this section we briefly review some of the ingredients of their analysis that are needed here as well. We refer the reader to their paper [22] for more details. The non-directional blocking graph (NDBG, for short) is a subdivision of the space of all allowable motions of separation into a finite number of cells such that inside any single cell the blocking relation between all pairs of parts is fixed. <p> Furthermore, there is an algorithm with running time O (n d ) to compute all the cells in the arrangement and their adjacency relations|see [4, Chapter 7], [5]. Wilson and Matsui use this algorithm in their solution of the partitioning problem <ref> [22] </ref>. In our solution we look at a slightly different arrangement: an arrangement of convex polytopes. Let Q be a collection of K convex polytopes in d-dimensional space, with a total of N facets. The arrangement A (Q) is the subdivision of d-space induced by the polytopes in Q. <p> Since we do not construct the entire arrangement in the space of possible motion directions, we cannot use adjacency relations between cells of the arrangement to incrementally update the DBG as we move from one cell to another, as in <ref> [22] </ref>. Rather, we construct the DBG from scratch at each point. To do this efficiently we build, for every polytope in our collection, a data structure that will enable us to determine in logarithmic time whether a point is contained in the polytope or not.
Reference: [23] <author> J.D. Wolter, </author> <title> On the automatic generation of plans for mechanical assembly, </title> <type> Ph.D. Thesis, </type> <institution> The University of Michigan, </institution> <address> Ann Arbor, </address> <year> 1988. </year> <month> 20 </month>
References-found: 22

