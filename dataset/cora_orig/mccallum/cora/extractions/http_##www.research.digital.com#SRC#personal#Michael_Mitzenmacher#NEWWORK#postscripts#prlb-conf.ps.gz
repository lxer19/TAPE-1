URL: http://www.research.digital.com/SRC/personal/Michael_Mitzenmacher/NEWWORK/postscripts/prlb-conf.ps.gz
Refering-URL: http://www.research.digital.com/SRC/personal/Michael_Mitzenmacher/NEWWORK/papers.html
Root-URL: http://www.research.digital.com
Email: fmicah,soumen,mitzen,larsrg@cs.berkeley.edu  
Title: Parallel Randomized Load Balancing (Preliminary Version)  
Author: Micah Adler Soumen Chakrabarti Michael Mitzenmacher Lars Rasmussen 
Note: Supported by a Schlumberger Foundation graduate fellowship. Supported in part by ARPA under contract DABT63-92-C-0026, by NSF (numbers CCR-9210260 and CDA-8722788), and by Lawrence Livermore National Laboratory. Supported by the Office of Naval Research. Supported by a fellowship from  
Address: Berkeley, CA 94720  
Affiliation: Computer Science Division University of California,  U.C. Berkeley.  
Abstract: It is well known that after placing n balls independently and uniformly at random into n bins, the fullest bin holds fi(log n= log log n) balls with high probability. Recently, Azar et al. analyzed the following: randomly choose d bins for each ball, and then sequentially place each ball in the least full of its chosen bins [2]. They show that the fullest bin contains only log log n= log d + fi(1) balls with high probability. We explore extensions of this result to parallel and distributed settings. Our results focus on the tradeoff between the amount of communication and the final load. Given r rounds of communication, we provide lower bounds on the maximum load of ( r log n= log log n) for a wide class of strategies. Our results extend to the case where the number of rounds is allowed to grow with n. We then demonstrate parallelizations of the sequential strategy presented in Azar et al. that achieve loads within a constant factor of the lower bound for two communication rounds and almost match the sequential strategy given log log n= log d + O(d) rounds of communication. We also examine a parallel threshold strategy based on rethrowing balls placed in heavily loaded bins. This strategy achieves loads within a constant factor of the lower bound for a constant number of rounds, and it achieves a final load of at most O(log log n) given (log log n) rounds of communication. The algorithm also works in asynchronous environments. p
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Miklos Atjai, James Aspnes, Moni Naor, Yuval Rabani, Leonard J. Schulman, and Orli Waarts. </author> <title> Fairness in scheduling. </title> <booktitle> In Proceedings of the Sixth Annual ACM-SIAM Symposium on Discrete Algortihms, </booktitle> <pages> pages 477-485, </pages> <year> 1995. </year>
Reference-contexts: For our bounds, we will rephrase the balls and bins problem in terms of a graph orientation problem similar to that found in <ref> [1] </ref>. We temporarily restrict ourselves to the case of d = 2. Associate with each bin a vertex of a graph. Each ball can be represented by an undirected edge in this graph, where the vertices of the edge correspond to the two bins chosen by the ball 1 .
Reference: [2] <author> Y. Azar, A. Broder, A. Karlin, and E. Upfal. </author> <title> Balanced allocations. </title> <booktitle> In Proceedings of the 26th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 593-602, </pages> <year> 1994. </year>
Reference-contexts: O (1=n)) the maximum number of balls received by any bin is fi ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature [7, 10] with numerous applications in hashing <ref> [2, 5, 9] </ref>, PRAM simulation [9, 11] and load balancing [2, 5]. Recently, an important extension of this result was proven by Azar et al. [2]. <p> bin is fi ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature [7, 10] with numerous applications in hashing [2, 5, 9], PRAM simulation [9, 11] and load balancing <ref> [2, 5] </ref>. Recently, an important extension of this result was proven by Azar et al. [2]. <p> Recently, an important extension of this result was proven by Azar et al. <ref> [2] </ref>. Suppose we adopt the following strategy: we place the balls sequentially, one at a time; for each ball, we choose two bins independenly and uniformly at random, and place the ball in the less full bin. <p> We focus on the tradeoff between the number of communication rounds and the final load one can achieve using simple, randomized strategies. We first show lower bounds that hold for a wide class of load balancing strategies, including natural parallelizations of the method of Azar et al. (Following <ref> [2] </ref>, we shall hereafter refer to their algorithm as greedy.) We demonstrate a parallelization of greedy for two communication rounds that matches the lower bounds to within a constant factor, and we examine alternative parallelizations of greedy that are effective when the number of communication rounds is approximately equal to the <p> The remaining messages can be discarded. 1.2 Our results In x2, we provide a general lower bound for non-adaptive and symmetric strategies that include parallel variations of greedy <ref> [2] </ref> and threshold methods [9, 11]. For any fixed number r of rounds of communication and any fixed number d of choices for each ball, we show that with constant probability the maximum load is at least i q log log n . <p> Poisson case, and then transfer the result to the exact case. 4 Parallel GREEDY The lower bounds in the previous section show that if the number of communication rounds and possible destinations for a ball are fixed, the log log n= log d + O (1) maximum load bound of <ref> [2] </ref> no longer applies. We therefore seek ways to parallelize the greedy strategy and gauge their performance. <p> Consider the subprocess of requests R arriving to the bins other than i. We can imagine these requests arriving sequentially at the bins according to some arbitrary ordering. Let time t be the instant immediately after the t'th such request arrives. We now use an innovation from <ref> [2] </ref>. Let N = n2 T eT ! and E t be the event that, at time t, no more than N bins have received more than T requests from R. <p> In particular, for any fixed d the maximum load is log log n log d + O (1). Proof. The proof is almost entirely the same as Theorem 4 of <ref> [2] </ref>. The main difference is that for each ball placed in the system up to d copies can be placed if ties remain. This problem can be handled by taking some care in the base cases. In the notation of Theorem 4 of [2], one can set fi 6d 2 = <p> entirely the same as Theorem 4 of <ref> [2] </ref>. The main difference is that for each ball placed in the system up to d copies can be placed if ties remain. This problem can be handled by taking some care in the base cases. In the notation of Theorem 4 of [2], one can set fi 6d 2 = n=2de; for d &gt; 8, one can show by Chernoff's bounds that setting fi 2d = n=2de works with sufficiently high probability for the argument to follow. Theorem 4.2 follows immediately.
Reference: [3] <author> A.D Barbour, Lars Holst, and Svante Janson. </author> <title> Poisson Approximation. </title> <publisher> Oxford Science Publications, </publisher> <year> 1992. </year>
Reference-contexts: Although tighter probability bounds for specific problems can often be obtained with more detailed analyses, as can be seen for example in <ref> [3] </ref>, for our purposes this simple approach is quite effective.
Reference: [4] <author> B. Bollobas. </author> <title> Random Graphs. </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1985. </year>
Reference-contexts: We show that X &gt; 0 with at least constant probability by determining the expectation and variance of X and applying the simple bound (from <ref> [4] </ref>, equation (3) of I.1): Pr (X = 0) 1 E [X 2 ] The multinomial coefficient n represents the number of possible choices for ~v; we must first choose the root, and then the T children of the root, and then the T 1 children for each child. <p> Although tighter probability bounds for specific problems can often be obtained with more detailed analyses, as can be seen for example in [3], for our purposes this simple approach is quite effective. As mentioned in <ref> [4] </ref>, similar ideas have been used in the study of random graphs to relate the setting where each edge is included independently with some probability and the setting where a graph with a certain number of edges is chosen randomly. <p> Corollary 3.2 will also prove useful to us because in the Poisson case all bin loads are independent. This independence allows us to use various forms of Chernoff bounds (such as those in <ref> [4] </ref>, section I.3) in the Poisson case, and then transfer the result to the exact case. 4 Parallel GREEDY The lower bounds in the previous section show that if the number of communication rounds and possible destinations for a ball are fixed, the log log n= log d + O (1)
Reference: [5] <author> A. Broder and A. Karlin. </author> <title> Multi-level adaptive hashing. </title> <booktitle> In Proceedings of the 1st ACM/SIAM Symposium on Discrete Algortihms, </booktitle> <pages> pages 43-53, </pages> <year> 1990. </year>
Reference-contexts: O (1=n)) the maximum number of balls received by any bin is fi ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature [7, 10] with numerous applications in hashing <ref> [2, 5, 9] </ref>, PRAM simulation [9, 11] and load balancing [2, 5]. Recently, an important extension of this result was proven by Azar et al. [2]. <p> bin is fi ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature [7, 10] with numerous applications in hashing [2, 5, 9], PRAM simulation [9, 11] and load balancing <ref> [2, 5] </ref>. Recently, an important extension of this result was proven by Azar et al. [2]. <p> In x5 we explore an entirely different paradigm based on thresholds, which were also used in <ref> [5, 9, 11] </ref>. We demonstrate algorithms based on thresholds that asymptotically match the lower bounds for any fixed number of rounds r up to a constant factor; that is, the final load is O r log n j with high probability. <p> It is open whether one can extend mpgreedy to avoid the partial order on the balls or the synchronous rounds while achieving similar results. 5 Threshold strategy We now examine another strategy, previously exploited in <ref> [5, 9, 11] </ref> in similar contexts, to achieve good load balancing. Given a threshold T , we imagine throwing the balls over r rounds. If more than T balls enter a bin during a round, the excess balls are rethrown.
Reference: [6] <author> G. Gonnet. </author> <title> Expected length of the longest probe sequence in hash code searching. </title> <journal> Journal of the ACM, </journal> <volume> 28(2) </volume> <pages> 289-304, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: The lower bounds are proved by reducing the balls and bins scenario to an edge orientation problem on random graphs. The rest of the paper deals with upper bounds. Our analysis exploits a basic tool, based on results of Gonnet <ref> [6] </ref>. In analyzing complex random processes, the use of heuristic approximations through normal or Poisson distributions is common. We apply this notion systematically to the scenario of a number of balls being thrown independently and uniformly at random into some number of bins. <p> After throwing m balls independently and uniformly at random into n bins, the distribution of the number of balls in a given bin is approximately Poisson with mean m n . We formalize this relationship by adapting an argument used by Gonnet <ref> [6] </ref> to determine the expected maximum number of balls in a bin. While useful tail bounds on the distributions of balls in bins can be found with other methods, most notably martingales [8, 9], our method appears to be more general, and in some cases easier to apply.
Reference: [7] <author> N. Johnson and S. Kotz. </author> <title> Urn Models and Their Application. </title> <publisher> John Wiley and Sons, </publisher> <year> 1977. </year>
Reference-contexts: probability (by which we shall mean 1 O (1=n)) the maximum number of balls received by any bin is fi ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature <ref> [7, 10] </ref> with numerous applications in hashing [2, 5, 9], PRAM simulation [9, 11] and load balancing [2, 5]. Recently, an important extension of this result was proven by Azar et al. [2].
Reference: [8] <author> A. Kamath, R. Motwani, K. Palem, and P. Spirakis. </author> <title> Tail bounds for occupancy and the satisfiability threshold conjecture. </title> <booktitle> In Proceedings of the 24th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 592-603, </pages> <year> 1994. </year>
Reference-contexts: We formalize this relationship by adapting an argument used by Gonnet [6] to determine the expected maximum number of balls in a bin. While useful tail bounds on the distributions of balls in bins can be found with other methods, most notably martingales <ref> [8, 9] </ref>, our method appears to be more general, and in some cases easier to apply. Although tighter probability bounds for specific problems can often be obtained with more detailed analyses, as can be seen for example in [3], for our purposes this simple approach is quite effective.
Reference: [9] <author> R. Karp, M. Luby, and F. Meyer auf der Heide. </author> <title> Efficient pram simulation on a distributed memory machine. </title> <booktitle> In Proceedings of the 24th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 318-326, </pages> <year> 1992. </year>
Reference-contexts: O (1=n)) the maximum number of balls received by any bin is fi ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature [7, 10] with numerous applications in hashing <ref> [2, 5, 9] </ref>, PRAM simulation [9, 11] and load balancing [2, 5]. Recently, an important extension of this result was proven by Azar et al. [2]. <p> of balls received by any bin is fi ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature [7, 10] with numerous applications in hashing [2, 5, 9], PRAM simulation <ref> [9, 11] </ref> and load balancing [2, 5]. Recently, an important extension of this result was proven by Azar et al. [2]. <p> We also examine an idea used in <ref> [9] </ref> and [11] based on setting a threshold at each bin: balls that attempt to enter a bin that is already above its threshold for that round must be rethrown. This strategy matches the lower bounds up to a constant factor for any constant number of rounds. <p> The remaining messages can be discarded. 1.2 Our results In x2, we provide a general lower bound for non-adaptive and symmetric strategies that include parallel variations of greedy [2] and threshold methods <ref> [9, 11] </ref>. For any fixed number r of rounds of communication and any fixed number d of choices for each ball, we show that with constant probability the maximum load is at least i q log log n . <p> In x5 we explore an entirely different paradigm based on thresholds, which were also used in <ref> [5, 9, 11] </ref>. We demonstrate algorithms based on thresholds that asymptotically match the lower bounds for any fixed number of rounds r up to a constant factor; that is, the final load is O r log n j with high probability. <p> We formalize this relationship by adapting an argument used by Gonnet [6] to determine the expected maximum number of balls in a bin. While useful tail bounds on the distributions of balls in bins can be found with other methods, most notably martingales <ref> [8, 9] </ref>, our method appears to be more general, and in some cases easier to apply. Although tighter probability bounds for specific problems can often be obtained with more detailed analyses, as can be seen for example in [3], for our purposes this simple approach is quite effective. <p> It is open whether one can extend mpgreedy to avoid the partial order on the balls or the synchronous rounds while achieving similar results. 5 Threshold strategy We now examine another strategy, previously exploited in <ref> [5, 9, 11] </ref> in similar contexts, to achieve good load balancing. Given a threshold T , we imagine throwing the balls over r rounds. If more than T balls enter a bin during a round, the excess balls are rethrown. <p> We consider the case where T = 1. The following results are similar to those in <ref> [9] </ref> and [11], but the simple proofs below are appealing. Theorem 5.2 threshold (1) terminates after at most log log n + O (1) stages with high probability. Proof. Again let k i be the number of balls to be thrown after stage i.
Reference: [10] <author> V. F. Kolchin, B. A. Sevsat'yanov, and V. P. Chistyakov. </author> <title> Random Allocations. </title> <publisher> V.H. Winston & Sons, </publisher> <year> 1978. </year>
Reference-contexts: probability (by which we shall mean 1 O (1=n)) the maximum number of balls received by any bin is fi ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature <ref> [7, 10] </ref> with numerous applications in hashing [2, 5, 9], PRAM simulation [9, 11] and load balancing [2, 5]. Recently, an important extension of this result was proven by Azar et al. [2].
Reference: [11] <author> P.D. MacKenzie, C.G. Plaxton, and R. Rajaraman. </author> <title> On contention resolution protocols and associated probabilistic phenomena. </title> <institution> Department of Computer Science Technial Report TR-94-06, University of Texas at Austin,, </institution> <month> April </month> <year> 1994. </year>
Reference-contexts: of balls received by any bin is fi ( log n log log n ). (In this paper log is used for log 2 .) Occupancy results such as this have a long history in the mathematical literature [7, 10] with numerous applications in hashing [2, 5, 9], PRAM simulation <ref> [9, 11] </ref> and load balancing [2, 5]. Recently, an important extension of this result was proven by Azar et al. [2]. <p> We also examine an idea used in [9] and <ref> [11] </ref> based on setting a threshold at each bin: balls that attempt to enter a bin that is already above its threshold for that round must be rethrown. This strategy matches the lower bounds up to a constant factor for any constant number of rounds. <p> The remaining messages can be discarded. 1.2 Our results In x2, we provide a general lower bound for non-adaptive and symmetric strategies that include parallel variations of greedy [2] and threshold methods <ref> [9, 11] </ref>. For any fixed number r of rounds of communication and any fixed number d of choices for each ball, we show that with constant probability the maximum load is at least i q log log n . <p> In x5 we explore an entirely different paradigm based on thresholds, which were also used in <ref> [5, 9, 11] </ref>. We demonstrate algorithms based on thresholds that asymptotically match the lower bounds for any fixed number of rounds r up to a constant factor; that is, the final load is O r log n j with high probability. <p> It is open whether one can extend mpgreedy to avoid the partial order on the balls or the synchronous rounds while achieving similar results. 5 Threshold strategy We now examine another strategy, previously exploited in <ref> [5, 9, 11] </ref> in similar contexts, to achieve good load balancing. Given a threshold T , we imagine throwing the balls over r rounds. If more than T balls enter a bin during a round, the excess balls are rethrown. <p> We consider the case where T = 1. The following results are similar to those in [9] and <ref> [11] </ref>, but the simple proofs below are appealing. Theorem 5.2 threshold (1) terminates after at most log log n + O (1) stages with high probability. Proof. Again let k i be the number of balls to be thrown after stage i.
References-found: 11

