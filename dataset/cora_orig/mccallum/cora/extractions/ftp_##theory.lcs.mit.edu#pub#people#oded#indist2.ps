URL: ftp://theory.lcs.mit.edu/pub/people/oded/indist2.ps
Refering-URL: http://theory.lcs.mit.edu/~oded/indist.html
Root-URL: 
Email: E-mail: oded@wisdom.weizmann.ac.il  E-mail: Bernd.Meyer@munich.netsurf.de  
Title: Computational Indistinguishability: Algorithms vs. Circuits  
Author: Oded Goldreich Bernd Meyer 
Date: December 19, 1996  
Address: Rehovot, Israel.  85716 Unterschleiheim Germany.  
Affiliation: Department of Computer Science and Applied Mathematics Weizmann Institute of Science  Pegasusstrae 14  
Abstract: We present a simple proof to the existence of a probability ensemble with tiny support which cannot be distinguished from the uniform ensemble by any recursive computation. Since the support is tiny (i.e, sub-polynomial), this ensemble can be distinguished from the uniform ensemble by a (non-uniform) family of small circuits. It also provides an example of an ensemble which cannot be (recursively) distinguished from the uniform by one sample, but can be so distinguished by two samples. In case we only wish to fool probabilistic polynomial-time algorithms the ensemble can be constructed in slightly super-exponential time.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M.J. Fischer, and S.A. Paleologou. </author> <title> On the Indistinguishability of Probabilistic Ensembles. </title> <type> Unpublished manuscript, </type> <year> 1994. </year>
Reference-contexts: An algorithm, which gets two samples, outputs 1 if and only if both samples are identical.) We comment that both <ref> [1, 6] </ref> present a result related to the last corollary. Specifically, they present two ensembles, each with at most two n-bit strings in their support, for which all single-sample algorithms have vanishing distinguishing probability whereas a simple two-sample algorithm has constant distinguishing probability. <p> need is two strings, x; y 2 f0; 1g n , so that Prob (M (x) = 1) Prob (M (U n ) = 1) (1) Prob (M (y) = 1) Prob (M (U n ) = 1) (2) 2 Fixing these x and y, there exists an ff 2 <ref> [0; 1] </ref> so that defining the distribution R n so that R n = x with probability ff and R n = y otherwise, you get Prob (M (R n ) = 1) = Prob (M (U n ) = 1) Thus, machine M cannot distinguish R n from U n
Reference: [2] <author> O. Goldreich. </author> <title> A Note on Computational Indistinguishability. </title> <journal> IPL, </journal> <volume> Vol. 34, </volume> <pages> pp. 277-281, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: We stress that all results in the paper are absolute (i.e., do not require any unproven assumptions). On the other hand, the fact that the ensembles are not constructible in polynomial-time is unavoidable, since analogous results for polynomial-time constructible (sampleable) ensembles imply the existence of one-way functions (cf., <ref> [2] </ref>). 2 Proof of Main Result Suppose that you want to construct a distribution with small support which fools (i.e., looks random to) a single machine, denoted M .
Reference: [3] <author> O. Goldreich, and H. Krawczyk. </author> <title> On Sparse Pseudorandom Ensembles. Random Structures and Algorithms, </title> <journal> Vol. </journal> <volume> 3, No. 2, </volume> <year> (1992), </year> <pages> pages 163-174. </pages>
Reference-contexts: It has been known for a while (cf., <ref> [7, 5, 3] </ref>) that there exists probability ensembles which are statistically far from the uniform ensemble and yet computationally indistinguishable from it: In [7, 5] indistinguishability is with respect to (probabilistic) polynomial-time algorithms, whereas in [3] indistinguishability is with respect to polynomial-size circuits. <p> It has been known for a while (cf., [7, 5, 3]) that there exists probability ensembles which are statistically far from the uniform ensemble and yet computationally indistinguishable from it: In [7, 5] indistinguishability is with respect to (probabilistic) polynomial-time algorithms, whereas in <ref> [3] </ref> indistinguishability is with respect to polynomial-size circuits.
Reference: [4] <author> S. Goldwasser, and S. Micali. </author> <title> Probabilistic Encryption. </title> <journal> JCSS, </journal> <volume> Vol. 28, No. 2, </volume> <pages> pages 270-299, </pages> <year> 1984. </year> <note> Preliminary version in 14th STOC, </note> <year> 1982. </year>
Reference-contexts: 1 Introduction Computational indistinguishability, introduced by Goldwasser and Micali <ref> [4] </ref> and defined in full generality by Yao [7], is a central concept of complexity theory.
Reference: [5] <author> L.A. Levin, </author> <title> private communication, </title> <month> mid </month> <year> 1980's. </year>
Reference-contexts: It has been known for a while (cf., <ref> [7, 5, 3] </ref>) that there exists probability ensembles which are statistically far from the uniform ensemble and yet computationally indistinguishable from it: In [7, 5] indistinguishability is with respect to (probabilistic) polynomial-time algorithms, whereas in [3] indistinguishability is with respect to polynomial-size circuits. <p> It has been known for a while (cf., [7, 5, 3]) that there exists probability ensembles which are statistically far from the uniform ensemble and yet computationally indistinguishable from it: In <ref> [7, 5] </ref> indistinguishability is with respect to (probabilistic) polynomial-time algorithms, whereas in [3] indistinguishability is with respect to polynomial-size circuits.
Reference: [6] <author> B. Meyer. </author> <title> Constructive Separation of Classes of Indistinguishable Ensembles. Structure in Complexity Theory, </title> <booktitle> 1994, </booktitle> <pages> pages 198-204. </pages>
Reference-contexts: Clearly, time bounds on the distinguishing machines yield obvious bounds on the time required to construct the ensemble. Furthermore, the same argument can be applied to non-uniform families of circuits (e.g., all polynomial-size circuits). In <ref> [6] </ref>, two probability ensembles, having sparse but disjoint supports, are shown to be indistinguishable by probabilistic polynomial-time algorithms. Specifically, the support size is n 2 and the distinguishing probability is exponentially vanishing in n. It seems that the argument in [6] cannot yield either a support of size o (n log <p> In <ref> [6] </ref>, two probability ensembles, having sparse but disjoint supports, are shown to be indistinguishable by probabilistic polynomial-time algorithms. Specifically, the support size is n 2 and the distinguishing probability is exponentially vanishing in n. It seems that the argument in [6] cannot yield either a support of size o (n log n) nor zero distinguishing probability. <p> An algorithm, which gets two samples, outputs 1 if and only if both samples are identical.) We comment that both <ref> [1, 6] </ref> present a result related to the last corollary. Specifically, they present two ensembles, each with at most two n-bit strings in their support, for which all single-sample algorithms have vanishing distinguishing probability whereas a simple two-sample algorithm has constant distinguishing probability.
Reference: [7] <author> A.C. Yao. </author> <title> Theory and Application of Trapdoor Functions. </title> <booktitle> In 23rd FOCS, </booktitle> <pages> pages 80-91, </pages> <year> 1982. </year> <title> 1 Otherwise consider the coordinates which span a full dimensional space. </title> <type> 3 </type>
Reference-contexts: 1 Introduction Computational indistinguishability, introduced by Goldwasser and Micali [4] and defined in full generality by Yao <ref> [7] </ref>, is a central concept of complexity theory. <p> It has been known for a while (cf., <ref> [7, 5, 3] </ref>) that there exists probability ensembles which are statistically far from the uniform ensemble and yet computationally indistinguishable from it: In [7, 5] indistinguishability is with respect to (probabilistic) polynomial-time algorithms, whereas in [3] indistinguishability is with respect to polynomial-size circuits. <p> It has been known for a while (cf., [7, 5, 3]) that there exists probability ensembles which are statistically far from the uniform ensemble and yet computationally indistinguishable from it: In <ref> [7, 5] </ref> indistinguishability is with respect to (probabilistic) polynomial-time algorithms, whereas in [3] indistinguishability is with respect to polynomial-size circuits.
References-found: 7

