URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/95-55.ps.Z
Refering-URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/README.html
Root-URL: 
Email: fgolla-s, azhangg@cs.buffalo.edu  
Title: Buffer Management in Multimedia Database Systems  
Author: Sreenivas Gollapudi and Aidong Zhang 
Address: Buffalo, NY 14260  
Affiliation: Department of Computer Science State University of New York at Buffalo  
Abstract: The delivery of continuous and synchronous multimedia data from a database server to multiple destinations over a network presents new challenges in the area of buffer management. Many factors that were not considered in conventional buffer management must be examined. In this paper, we investigate the principles of buffer management for multimedia data presentations in object-oriented database environments. The primary goal is to minimize the response time of multimedia presentations while ensuring that all continuity and synchronization requirements are satisfied. Minimum buffering requirements to guarantee the continuity and synchrony of the presentation of multimedia data are first proposed. A prefetching technique which satisfies these requirements is then developed. These principles and technique provide users with the full range of information required to develop a database environment for multimedia presentations.
Abstract-found: 1
Intro-found: 1
Reference: [All83] <author> James F. Allen. </author> <title> Maintaining Knowledge about Temporal Intervals. </title> <journal> Communications of ACM, </journal> <volume> 26(11), </volume> <year> 1983. </year>
Reference-contexts: It may, for example, be necessary to display two distinct slide objects jointly within a single slide presentation stream. In general, the temporal relationship between two atomic objects in a single stream may conform to any of the thirteen temporal relationships described in <ref> [All83] </ref>. In our representation, each atomic object is associated with a relative start time and a time interval which specifies the duration of its retrieval, with the initial atomic objects in the media stream assumed to start at time zero. <p> For example, in slide presentation applications, an audio object must be played along with a slide object. The temporal relationship between two atomic objects from different media streams may also conform to any of the thirteen temporal relationships described in <ref> [All83] </ref>. Synchronization requirements may be specified as meta-data or specified in transaction programs. <p> Thus, synchronization points specify nodes in media streams at which the synchrony of presentation must be checked and maintained. In general, the temporal relationship between two atomic objects from different media streams may conform to any of the thirteen temporal relationships described in <ref> [All83] </ref>, which is demonstrated in Figure 4. We specifically introduce three types of synchronization points among media objects; these are intra-synchronization point, inter-synchronization point, and middle-synchronization point. Intra-synchronization points specify sequential time-constraints among two media objects. Inter-synchronization points specify exact parallel start and end relationships among objects.
Reference: [CGS95] <author> S. Chaudhuri, S. Ghandeharizadeh, and C. Shahabi. </author> <title> Avoiding Retrival Contention for Composite Multimedia Objects. </title> <booktitle> In Proceedings of the 21th VLDB conference, </booktitle> <address> Zurich, Swizerland, </address> <year> 1995. </year>
Reference-contexts: Moser et al [MKK95] have proposed a buffer strategy termed "least/most relevant for presentation." This buffer strategy investigates the effects of such user interactions as "rewind" and "fast forward" on buffer design. A mechanism is proposed which reduces the ensuing delay after user interactions. Chaudhuri et al <ref> [CGS95] </ref> have investigated the problem of continuously displaying composite objects that are dynamically specified at the server level. Techniques based on simple sliding and buffered sliding are proposed which support continuous display by partial prefetching of overlapping media objects. <p> In this paper, we systematically study the principles underlying buffer management for multimedia data presentation in object-oriented database environments. Media streams are stored as sets of media objects coupled with specified synchronization requirements. Complementary to the work proposed by Chaudhuri et al <ref> [CGS95] </ref>, we investigate the minimum buffering requirements that are necessary to guarantee the continuity and synchrony of the presentation of multimedia data. This is accomplished by first determining the minimum consuming times of media objects following their loading times, while guaranteeing the hiccup-free presentation of the media streams.
Reference: [GC92] <author> Jim Gemmell and Stavros Christodoulakis. </author> <title> Principles of delay-sensitive multimedia data storage and retrieval. </title> <journal> ACM Transactions on Information Systems, </journal> <volume> 10(1) </volume> <pages> 51-90, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: Thus, x must be the minimum start time such that C m (t; t m Let us now consider a situation in which the consuming function is linear <ref> [GC92] </ref>. That is, C m (t; x) = 0 if t &lt; x, (4) where r c is the consuming rate of stream m. <p> As demonstrated by Gemmell <ref> [GC92] </ref>, this value of x is also the intersection of L m (t; t m l s ) with B m (t; t m l s ) + k. In general, the consuming function may not be a single linear function or even a continuous function.
Reference: [LG90a] <author> Thomas D.C. Little and Arif Ghafoor. </author> <title> Network Considerations for Distributed Multimedia Object Composition and Communication. </title> <journal> IEEE Network Magazine, </journal> <pages> pages 32-49, </pages> <year> 1990. </year>
Reference-contexts: However, such media data streams may not be merged prior to storage in a database, and such a merger will vastly compound the difficulties of retrieving component media. Thus, the synchronization of multiple media data streams, termed inter-stream synchronization, becomes an essential prerequisite to any successful multimedia database application <ref> [LG90b, LG90a] </ref>. Buffer management within the multimedia database system is essential to ensure the maintenance of the intra- and inter-stream synchronization requirements of multimedia data presentations. 1 To facilitate a hiccup-free presentation, we must ensure that an object is present in memory be-fore it is displayed. <p> Algorithm 1 minimizes the total buffer requirement by minimizing max 0in B i where n is the total number of intervals in the presentation and ensures both continuity and synchronization in the presentation. We have shown a buffer prefetching algorithm that maintains synchronization constraints thereby minimizing skew and jitter <ref> [LG90a] </ref> in a presentation while minimizing the buffer requirements. Furthermore, the algorithm handle delays in the presentation more gracefully by using an LRD replacement strategy for buffer replacement.
Reference: [LG90b] <author> Thomas D.C. Little and Arif Ghafoor. </author> <title> Synchronization and Storage Models for Multimedia Objects. </title> <journal> IEEE Journal on Selected Arears in Communications, </journal> <volume> 8(3) </volume> <pages> 413-427, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: However, such media data streams may not be merged prior to storage in a database, and such a merger will vastly compound the difficulties of retrieving component media. Thus, the synchronization of multiple media data streams, termed inter-stream synchronization, becomes an essential prerequisite to any successful multimedia database application <ref> [LG90b, LG90a] </ref>. Buffer management within the multimedia database system is essential to ensure the maintenance of the intra- and inter-stream synchronization requirements of multimedia data presentations. 1 To facilitate a hiccup-free presentation, we must ensure that an object is present in memory be-fore it is displayed.
Reference: [MKK95] <author> Frank Moser, Achim Kraib, and Wolfgang Klas. L/MRP: </author> <title> A Buffer Management Strategy for Interactive Continuous Data Flow in a Multimedia DBMS. </title> <booktitle> In Proceedings of the 21th VLDB conference, </booktitle> <address> Zurich, Swizerland, </address> <year> 1995. </year>
Reference-contexts: These mechanisms are intended to ensure that the defined continuity and synchrony of media streams will be preserved to the greatest extent possible, even if there are user interactions and loading delays. Research involving buffer management in multimedia database systems is still in its infancy [TK95]. Moser et al <ref> [MKK95] </ref> have proposed a buffer strategy termed "least/most relevant for presentation." This buffer strategy investigates the effects of such user interactions as "rewind" and "fast forward" on buffer design. A mechanism is proposed which reduces the ensuing delay after user interactions.
Reference: [NY94] <author> R. T. Ng and J. Yang. </author> <title> Maximizing Buffer and Disk Utlilizations for News On-Demand. </title> <booktitle> In Proceedings of the 20th VLDB Conference, </booktitle> <pages> pages 451-462, </pages> <address> Santiago, Chile, </address> <year> 1994. </year>
Reference-contexts: Techniques based on simple sliding and buffered sliding are proposed which support continuous display by partial prefetching of overlapping media objects. Such an approach is preferable to the naive strategy of prefetching the entirety of overlapped media objects. Ng and Yang <ref> [NY94] </ref> have attempted to maximize buffer and disk utilization within the constraints of a fixed amount of buffer space and disk bandwidth, both of which are pre-determined in the design phase. Prefetching strategies that are applicable to database systems are proposed which maximize the throughput of the system. <p> For a detailed analysis of buffer consumption with streams with identical consumption rates, the reader is referred to <ref> [NY94] </ref>. Clearly, if the loading rate of a stream m is greater than the consumption rate, all objects in stream m attain their maximum buffer requirement at the end of loading phase, that is, at t = t im l f , provided t im l f 2 [a; b].
Reference: [TK95] <author> Heiko Thimm and Wolfgang Klas. </author> <title> Playout Management An Integrated Service of a Multimedia Database Management System, 1995. </title> <type> (Technical Report, </type> <institution> GMD-IPSI). </institution>
Reference-contexts: These mechanisms are intended to ensure that the defined continuity and synchrony of media streams will be preserved to the greatest extent possible, even if there are user interactions and loading delays. Research involving buffer management in multimedia database systems is still in its infancy <ref> [TK95] </ref>. Moser et al [MKK95] have proposed a buffer strategy termed "least/most relevant for presentation." This buffer strategy investigates the effects of such user interactions as "rewind" and "fast forward" on buffer design. A mechanism is proposed which reduces the ensuing delay after user interactions.
Reference: [ZG95a] <author> Aidong Zhang and Sreenivas Gollapudi. </author> <title> Multimedia Transaction Management in Database Systems. </title> <type> Technical Report CS-TR-95-44, </type> <institution> Dept. of Computer Science, State University of New York at Buffalo, </institution> <month> October </month> <year> 1995. </year>
Reference-contexts: The detailed discussion on synchronization can be found in <ref> [ZG95a] </ref>.
Reference: [ZG95b] <author> Aidong Zhang and Sreenivas Gollapudi. </author> <title> Multimedia Transaction Management in Multimedia Database Systems. </title> <type> Technical Report CS-TR-95-44, </type> <institution> State University of New York at Buffalo, </institution> <month> October </month> <year> 1995. </year> <month> 21 </month>
Reference-contexts: Thus, each GROUP includes all events occurring at the same time in the presentation and corresponds to a synchronization point in the presentation. Enforcing synchronous delivery of objects at every synchronization point will generate a synchronous presentation. See <ref> [ZG95b] </ref> for more details. The presentation is segmented into time intervals corresponding to the synchronization points.
References-found: 10

