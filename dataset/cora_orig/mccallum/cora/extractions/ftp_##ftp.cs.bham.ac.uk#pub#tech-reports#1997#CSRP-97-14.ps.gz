URL: ftp://ftp.cs.bham.ac.uk/pub/tech-reports/1997/CSRP-97-14.ps.gz
Refering-URL: http://www.cs.bham.ac.uk/~wbl/biblio/gp-bibliography.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: W.B.Langdon@cs.bham.ac.uk  
Phone: Tel: +44 (0) 121 414 4791, Fax: +44 (0) 121 414 4281  
Title: Position Paper, Workshop on Evolutionary Computation with Variable Size Representation, ICGA, Fitness Causes Bloat in
Author: W. B. Langdon 
Web: http://www.cs.bham.ac.uk/~wbl  
Address: B15 2TT, UK  
Affiliation: East Lansing, Michigan, USA  School of Computer Science, The University of Birmingham, Birmingham  
Date: July 1997,  14 May 1997  
Pubnum: 20  Technical Report: CSRP-97-14  
Abstract: We argue based upon the numbers of representations of given length, that increase in representation length is inherent in using a fixed evaluation function with a discrete but variable length representation. Two examples of this are analysed, including the use of Price's Theorem. Both examples confirm the tendency for solutions to grow in size is caused by fitness based selection.
Abstract-found: 1
Intro-found: 1
Reference: [ Blickle and Thiele, 1994 ] <author> Tobias Blickle and Lothar Thiele. </author> <title> Genetic programming and redundancy. </title> <editor> In J. Hopf, editor, </editor> <booktitle> Genetic Algorithms within the Framework of Evolutionary Computation (Workshop at KI-94, Saarbrucken), </booktitle> <pages> pages 33-38, </pages> <address> Im Stadtwald, Building 44, D-66123 Saarbrucken, Germany, </address> <year> 1994. </year> <institution> Max-Planck-Institut fur Informatik (MPI-I-94-241). </institution>
Reference-contexts: The principal explanation advanced for bloat has been the growth of "introns" or "redundancy", i.e. code which has no effect on the operation of the program which contains it. Such introns are said to protect the program containing them from crossover <ref> [ Blickle and Thiele, 1994 ] </ref> . [ McPhee and Miller, 1995 ] show, with some function sets, longer programs can "replicate" more "accurately" when using crossover.
Reference: [ Koza, 1992 ] <author> John R. Koza. </author> <title> Genetic Programming: On the Programming of Computers by Natural Selection. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, USA, </address> <year> 1992. </year>
Reference-contexts: In GP this has become known as bloat. 3 The Artificial Ant Problem We conducted two sets of experiments using the Artificial Ant Problem <ref> [ Koza, 1992, pages 147-155 ] </ref> . Firstly solving it using GP and crossover [ Langdon and Poli, 1997 ] and secondly replacing crossover with sub tree based mutation.
Reference: [ Langdon and Poli, 1997 ] <author> W. B. Langdon and R. Poli. </author> <title> Fitness causes bloat. </title> <type> Technical Report CSRP-97-09, </type> <institution> University of Birmingham, </institution> <month> 26 March </month> <year> 1997. </year> <note> Submitted to WSC2. </note>
Reference-contexts: In GP this has become known as bloat. 3 The Artificial Ant Problem We conducted two sets of experiments using the Artificial Ant Problem [ Koza, 1992, pages 147-155 ] . Firstly solving it using GP and crossover <ref> [ Langdon and Poli, 1997 ] </ref> and secondly replacing crossover with sub tree based mutation. In each case bloat occurs with fitness based selection, it does not occur without fitness based selection and bloat stops when fitness selection is removed after a period of evolution (cf.
Reference: [ McPhee and Miller, 1995 ] <author> Nicholas Freitag McPhee and Justin Darwin Miller. </author> <title> Accurate replication in genetic programming. </title> <editor> In L. Eshelman, editor, </editor> <booktitle> Genetic Algorithms: Proceedings of the Sixth International Conference (ICGA95), </booktitle> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: The principal explanation advanced for bloat has been the growth of "introns" or "redundancy", i.e. code which has no effect on the operation of the program which contains it. Such introns are said to protect the program containing them from crossover [ Blickle and Thiele, 1994 ] . <ref> [ McPhee and Miller, 1995 ] </ref> show, with some function sets, longer programs can "replicate" more "accurately" when using crossover.
Reference: [ Price, 1970 ] <author> George R. Price. </author> <title> Selection and covariance. </title> <journal> Nature, </journal> <volume> 227, August 1 </volume> <pages> 520-521, </pages> <year> 1970. </year>
Reference-contexts: Figures 1 and 2). 3.1 Fitness is Necessary for Bloat - Price's Theorem Applied to Represen tation Length Price's Covariance and Selection Theorem <ref> [ Price, 1970 ] </ref> from population genetics relates the expected change in frequency of a gene q in a population from one generation to the next, to the covariance of the gene's frequency in the original population with the number of offspring z produced by individuals in that population (see Equation
Reference: [ Rosca and Ballard, 1996 ] <author> Justinian P. Rosca and Dana H. Ballard. </author> <title> Complexity drift in evolutionary computation with tree representations. </title> <type> Technical Report NRL5, </type> <institution> University of Rochester, Computer Science Department, Rochester, </institution> <address> NY, USA, </address> <month> December </month> <year> 1996. </year> <month> 3 </month>
Reference-contexts: I.e. offspring produced by crossover between longer programs are more likely to behave as their parents than children of shorter programs. <ref> [ Rosca and Ballard, 1996 ] </ref> provides a detailed analysis of bloat using tree schemata specifically for GP. In this paper we advance a more general explanation which should apply generally to any discrete variable length representation and generally to any progressive search technique.
References-found: 6

