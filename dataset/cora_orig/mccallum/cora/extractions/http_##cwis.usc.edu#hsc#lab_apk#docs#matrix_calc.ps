URL: http://cwis.usc.edu/hsc/lab_apk/docs/matrix_calc.ps
Refering-URL: http://cwis.usc.edu/hsc/lab_apk/pubs1.html
Root-URL: http://cwis.usc.edu
Title: On-the-Fly Generations of the Constraint Matrix in a Maximum Entropy Problem  
Author: Xin Wang Mark Milman Feng Jiang 
Date: December 23, 1997  
Abstract: The constraint matrix in the maximal entropy problem studied in [MJJ97] requires a massive amount of memory to store, so large that it prevents solving large problems even on state of the art supercomputers. Here we propose two algorithms to generate entries of the matrix from a very small set of parameter supporting points. The first algorithm is directly from the definition, and the second is an incremental version of the first, which is more efficient where entries of individual rows of the matrix are needed consecutively. These algorithms can be used for on-the-fly generation or generation on demand of the entries, and thus allow one to trade off time for space in order to avoid the massive memory requirement of storing the matrix. The algorithms are suitable for sequential as well as for parallel and distributed implementations. 
Abstract-found: 1
Intro-found: 1
Reference: [MJJ97] <author> M. Milman, F. Jiang, and R. W. Jelliffe. </author> <title> Creating Discrete Joint Densities from Continuous Ones: The Moment Matching-Maximum Entropy Approach. </title> <type> LAPK Technical Report 97-2. </type>
Reference-contexts: 1 Definition of the Constraint Matrix In a maximum entropy problem studied in <ref> [MJJ97] </ref>, a key computational issue is how to handle the constraint matrix A so that problem instances of large size can solved with reasonable computing resources (time and space). The matrix A depends on a grid formed within a parameter space. <p> Clearly, as the number of parameters q becomes greater than 6, the memory requirement M alone exceeds capabilities that a single state-of-the-art PC or workstation can offer. Moreover, according to the current serial implementation of the maximum entropy computation used in <ref> [MJJ97] </ref>, 7000 to 20000 PC nodes are needed to make up the required memory space for the q = 10 case. <p> (q) = ji (q)+1; Djj = exp (Djj - 1.0); % the j-th entry of the matrix D end % for j = 0:(n-1) 6 Conclusion In this paper, we have given a definition of the individual entries of the constraint matrix used in solving the maximum entropy problem in <ref> [MJJ97] </ref>. The definition is based on a small set of supporting points for problem parameters, and thus makes it possible to eliminate the massive memory requirement of storing the matrix by generating its entries only when needed.
Reference: [Wang97] <author> X. Wang, </author> <title> "Scalable Parallel Matrix Multiplication Algorithms with Application to a Maximum Entropy Problem", </title> <type> LAPK Technical Report 97-3, </type> <institution> USC, </institution> <month> September, </month> <year> 1997. </year>
References-found: 2

