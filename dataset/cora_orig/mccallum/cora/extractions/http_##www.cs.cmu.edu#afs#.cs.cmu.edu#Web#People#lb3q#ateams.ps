URL: http://www.cs.cmu.edu/afs/.cs.cmu.edu/Web/People/lb3q/ateams.ps
Refering-URL: http://www.cs.cmu.edu/afs/.cs.cmu.edu/Web/People/lb3q/
Root-URL: 
Email: e-mail: snt@edrc.cmu.edu, lb3q@andrew.cmu.edu  e-mail: avila@redesa.es  
Phone: 2  Lepanto, 350 3. 20.  
Title: Learning Network Designs for Asynchronous Teams  
Author: Lars Baerentzen Patricia Avila and Sarosh N. Talukdar 
Address: Pittsburgh PA 15213  Energia S.A.  08025 Barcelona, Spain  
Affiliation: 1 Engineering Design Research Center Carnegie Mellon University  Power Systems Technology Division Redes de  
Abstract: An asynchronous team (A-Team) is a network of agents (workers) and memories (repositories for the results of work). It is possible to design A-Teams to be effective in solving difficult computational problems. The main design issues are: "What structure should the network have?" and "What should be the complement of agents?" In the past, the structure-issue was resolved by intuition and experiment. This paper describes a procedure by which good structures can be learned from experience. The procedure is based on the use of regular expressions for encoding the capabilities of networks. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> de Souza, P., Talukdar, </author> <title> S.N.: Genetic Algorithms in Asynchronous Teams. </title> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms. </booktitle> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, CA, </address> <year> 1991. </year>
Reference-contexts: In such cases good results can often be achieved by combining the different heuristics into an A-Team. Each improvement heuristic is turned into an agent by adding a scheduler and a selector. A-Teams have been developed for a number of difficult problem-areas including sets of nonlinear equations <ref> [1] </ref>, [2], traveling salesman problems [3], high-rise building design [4], reconfigurable robot design [5], diagnosis of faults in electric networks [6], control of electric networks [7], job-shop-scheduling [8], protein structure analysis [9], and train-scheduling [10], steel-mill scheduling, paper-mill scheduling and constraint satisfaction [11]. <p> A Nondeterministic Finite state Automaton with Probabilities (NFAP) is a 5-tuple (Q; ; ffi; q; F ) where - Q, , q and F are as for the NFA. - ffi is a relation: ffi Q fi fi Q fi <ref> [0; 1] </ref> where (q i ; a j ; q k ; p) 2 ffi means that the transition consisting of writing a j and moving from q i to q k has probability p of being applied when the machine is in state q i Similarly we can add probabilities <p> The observations where then used to estimate the parameters in the cooper ation model, we got the following maximum likelihood estimate: pi_inf== 0.195782 pi <ref> [1] </ref>== 0.180393 pi [3]== 0.138674 pi [5]== 0.00820783 pi [7]== 0.214058 pi [9]== 0.13753 p [1]== 0.0837636 q [1]== 0.915009 r [1]== 0.00122723 matrix [0][0]: p_new== 0 p_old+ 0 q_old+ 1.00565e-05 r_old r_new== 0.978309 p_old+ 0.980995 q_old+ 0.999698 r_old matrix [0][1]: p_new== 3.34688e-06 p_old+ 8.06538e-05 q_old+ 3.29203e-09 r_old r_new== 0.991936 p_old+ <p> The observations where then used to estimate the parameters in the cooper ation model, we got the following maximum likelihood estimate: pi_inf== 0.195782 pi <ref> [1] </ref>== 0.180393 pi [3]== 0.138674 pi [5]== 0.00820783 pi [7]== 0.214058 pi [9]== 0.13753 p [1]== 0.0837636 q [1]== 0.915009 r [1]== 0.00122723 matrix [0][0]: p_new== 0 p_old+ 0 q_old+ 1.00565e-05 r_old r_new== 0.978309 p_old+ 0.980995 q_old+ 0.999698 r_old matrix [0][1]: p_new== 3.34688e-06 p_old+ 8.06538e-05 q_old+ 3.29203e-09 r_old r_new== 0.991936 p_old+ 0.999103 q_old+ 0.999999 r_old matrix [1][0]: p_new== 0.999997 p_old+ 0.922703 q_old+ 0.59284 r_old r_new== 9.4355e-07 <p> The observations where then used to estimate the parameters in the cooper ation model, we got the following maximum likelihood estimate: pi_inf== 0.195782 pi <ref> [1] </ref>== 0.180393 pi [3]== 0.138674 pi [5]== 0.00820783 pi [7]== 0.214058 pi [9]== 0.13753 p [1]== 0.0837636 q [1]== 0.915009 r [1]== 0.00122723 matrix [0][0]: p_new== 0 p_old+ 0 q_old+ 1.00565e-05 r_old r_new== 0.978309 p_old+ 0.980995 q_old+ 0.999698 r_old matrix [0][1]: p_new== 3.34688e-06 p_old+ 8.06538e-05 q_old+ 3.29203e-09 r_old r_new== 0.991936 p_old+ 0.999103 q_old+ 0.999999 r_old matrix [1][0]: p_new== 0.999997 p_old+ 0.922703 q_old+ 0.59284 r_old r_new== 9.4355e-07 p_old+ 0.0284802 q_old+ <p> The observations where then used to estimate the parameters in the cooper ation model, we got the following maximum likelihood estimate: pi_inf== 0.195782 pi <ref> [1] </ref>== 0.180393 pi [3]== 0.138674 pi [5]== 0.00820783 pi [7]== 0.214058 pi [9]== 0.13753 p [1]== 0.0837636 q [1]== 0.915009 r [1]== 0.00122723 matrix [0][0]: p_new== 0 p_old+ 0 q_old+ 1.00565e-05 r_old r_new== 0.978309 p_old+ 0.980995 q_old+ 0.999698 r_old matrix [0][1]: p_new== 3.34688e-06 p_old+ 8.06538e-05 q_old+ 3.29203e-09 r_old r_new== 0.991936 p_old+ 0.999103 q_old+ 0.999999 r_old matrix [1][0]: p_new== 0.999997 p_old+ 0.922703 q_old+ 0.59284 r_old r_new== 9.4355e-07 p_old+ 0.0284802 q_old+ 0.0101451 r_old matrix
Reference: 2. <author> Talukdar, S.N., Pyo, S.S., Giras, T.: </author> <title> Asynchronous Procedures for Parallel Processing. </title> <journal> IEEE Trans. on PAS, </journal> <volume> Vol. PAS-102, NO 11, </volume> <month> Nov. </month> <year> 1983. </year> <note> 3. </note> <author> de Souza, P.: </author> <title> Asynchronous Organizations for Multi-Algorithm Problems. </title> <publisher> Ph. </publisher> <address> D. </address> <institution> dissertation, Dept. of Electrical and Computer Engineering, Carnegie Mellon University, </institution> <address> Pittsburgh, PA, </address> <year> 1993. </year>
Reference-contexts: In such cases good results can often be achieved by combining the different heuristics into an A-Team. Each improvement heuristic is turned into an agent by adding a scheduler and a selector. A-Teams have been developed for a number of difficult problem-areas including sets of nonlinear equations [1], <ref> [2] </ref>, traveling salesman problems [3], high-rise building design [4], reconfigurable robot design [5], diagnosis of faults in electric networks [6], control of electric networks [7], job-shop-scheduling [8], protein structure analysis [9], and train-scheduling [10], steel-mill scheduling, paper-mill scheduling and constraint satisfaction [11].
Reference: 4. <author> Quadrel, R.W.: </author> <title> Asynchronous Design Environments: Architecture and Behavior. </title> <publisher> Ph. </publisher> <address> D. </address> <institution> dissertation, Department of Architecture, Carnegie Mellon University, </institution> <address> Pittsburgh, PA, </address> <year> 1991. </year>
Reference-contexts: Each improvement heuristic is turned into an agent by adding a scheduler and a selector. A-Teams have been developed for a number of difficult problem-areas including sets of nonlinear equations [1], [2], traveling salesman problems [3], high-rise building design <ref> [4] </ref>, reconfigurable robot design [5], diagnosis of faults in electric networks [6], control of electric networks [7], job-shop-scheduling [8], protein structure analysis [9], and train-scheduling [10], steel-mill scheduling, paper-mill scheduling and constraint satisfaction [11].
Reference: 5. <author> Murthy, S.: </author> <title> Synergy in cooperating agents: designing manipulators from task specifications. </title> <type> Ph.D. dissertation, </type> <institution> Dept. of Electrical and Computer Engineering, Carnegie Mellon University, </institution> <address> Pittsburgh, PA, </address> <year> 1992. </year>
Reference-contexts: Each improvement heuristic is turned into an agent by adding a scheduler and a selector. A-Teams have been developed for a number of difficult problem-areas including sets of nonlinear equations [1], [2], traveling salesman problems [3], high-rise building design [4], reconfigurable robot design <ref> [5] </ref>, diagnosis of faults in electric networks [6], control of electric networks [7], job-shop-scheduling [8], protein structure analysis [9], and train-scheduling [10], steel-mill scheduling, paper-mill scheduling and constraint satisfaction [11]. <p> The observations where then used to estimate the parameters in the cooper ation model, we got the following maximum likelihood estimate: pi_inf== 0.195782 pi [1]== 0.180393 pi [3]== 0.138674 pi <ref> [5] </ref>== 0.00820783 pi [7]== 0.214058 pi [9]== 0.13753 p [1]== 0.0837636 q [1]== 0.915009 r [1]== 0.00122723 matrix [0][0]: p_new== 0 p_old+ 0 q_old+ 1.00565e-05 r_old r_new== 0.978309 p_old+ 0.980995 q_old+ 0.999698 r_old matrix [0][1]: p_new== 3.34688e-06 p_old+ 8.06538e-05 q_old+ 3.29203e-09 r_old r_new== 0.991936 p_old+ 0.999103 q_old+ 0.999999 r_old matrix [1][0]:
Reference: 6. <author> Chen, C.L.: </author> <title> Bayesian Nets and A-Teams for Power System Fault Diagnosis. </title> <type> Ph.D. dissertation, </type> <institution> Electrical and Computer Engineering Department, Carnegie Mellon University, </institution> <address> Pittsburgh, PA, </address> <year> 1992. </year>
Reference-contexts: A-Teams have been developed for a number of difficult problem-areas including sets of nonlinear equations [1], [2], traveling salesman problems [3], high-rise building design [4], reconfigurable robot design [5], diagnosis of faults in electric networks <ref> [6] </ref>, control of electric networks [7], job-shop-scheduling [8], protein structure analysis [9], and train-scheduling [10], steel-mill scheduling, paper-mill scheduling and constraint satisfaction [11].
Reference: 7. <author> Talukdar, S.N., Ramesh, V.C.: </author> <title> A Parallel Global Optimization Algorithm And Its Application To The CCOPF Problem. </title> <booktitle> Proceedings of the Power Industry Computer Applications Conference, Phoenix, </booktitle> <month> May, </month> <year> 1993. </year>
Reference-contexts: A-Teams have been developed for a number of difficult problem-areas including sets of nonlinear equations [1], [2], traveling salesman problems [3], high-rise building design [4], reconfigurable robot design [5], diagnosis of faults in electric networks [6], control of electric networks <ref> [7] </ref>, job-shop-scheduling [8], protein structure analysis [9], and train-scheduling [10], steel-mill scheduling, paper-mill scheduling and constraint satisfaction [11]. Until now A-Team builders have designed the topology of the network for an A-Team for a given problem more or less by trial and error, and by hand. <p> The observations where then used to estimate the parameters in the cooper ation model, we got the following maximum likelihood estimate: pi_inf== 0.195782 pi [1]== 0.180393 pi [3]== 0.138674 pi [5]== 0.00820783 pi <ref> [7] </ref>== 0.214058 pi [9]== 0.13753 p [1]== 0.0837636 q [1]== 0.915009 r [1]== 0.00122723 matrix [0][0]: p_new== 0 p_old+ 0 q_old+ 1.00565e-05 r_old r_new== 0.978309 p_old+ 0.980995 q_old+ 0.999698 r_old matrix [0][1]: p_new== 3.34688e-06 p_old+ 8.06538e-05 q_old+ 3.29203e-09 r_old r_new== 0.991936 p_old+ 0.999103 q_old+ 0.999999 r_old matrix [1][0]: p_new== 0.999997 p_old+
Reference: 8. <author> Chen, S.Y., </author> <title> Talukdar S.N., Sadeh N.M.: Job-Shop-Scheduling by a Team of Asynchronous Agents. IJCAI-93 Workshop on Knowledge-Based Production, Scheduling and Control, </title> <address> Chambery, France, </address> <year> 1993. </year>
Reference-contexts: A-Teams have been developed for a number of difficult problem-areas including sets of nonlinear equations [1], [2], traveling salesman problems [3], high-rise building design [4], reconfigurable robot design [5], diagnosis of faults in electric networks [6], control of electric networks [7], job-shop-scheduling <ref> [8] </ref>, protein structure analysis [9], and train-scheduling [10], steel-mill scheduling, paper-mill scheduling and constraint satisfaction [11]. Until now A-Team builders have designed the topology of the network for an A-Team for a given problem more or less by trial and error, and by hand.
Reference: 9. <author> Lukin, J.A., Gove, A.P., Talukdar S.N., Ho, C.: </author> <title> An Automated Probabilistic Method for Assigning Backbone Resonaces of (13C, </title> <publisher> 15N)-Labelled Proteins. </publisher>
Reference-contexts: A-Teams have been developed for a number of difficult problem-areas including sets of nonlinear equations [1], [2], traveling salesman problems [3], high-rise building design [4], reconfigurable robot design [5], diagnosis of faults in electric networks [6], control of electric networks [7], job-shop-scheduling [8], protein structure analysis <ref> [9] </ref>, and train-scheduling [10], steel-mill scheduling, paper-mill scheduling and constraint satisfaction [11]. Until now A-Team builders have designed the topology of the network for an A-Team for a given problem more or less by trial and error, and by hand. <p> The observations where then used to estimate the parameters in the cooper ation model, we got the following maximum likelihood estimate: pi_inf== 0.195782 pi [1]== 0.180393 pi [3]== 0.138674 pi [5]== 0.00820783 pi [7]== 0.214058 pi <ref> [9] </ref>== 0.13753 p [1]== 0.0837636 q [1]== 0.915009 r [1]== 0.00122723 matrix [0][0]: p_new== 0 p_old+ 0 q_old+ 1.00565e-05 r_old r_new== 0.978309 p_old+ 0.980995 q_old+ 0.999698 r_old matrix [0][1]: p_new== 3.34688e-06 p_old+ 8.06538e-05 q_old+ 3.29203e-09 r_old r_new== 0.991936 p_old+ 0.999103 q_old+ 0.999999 r_old matrix [1][0]: p_new== 0.999997 p_old+ 0.922703 q_old+ 0.59284
Reference: 10. <author> Tsen, C.K.: </author> <title> Solving Train Scheduling Problems Using A-Teams. </title> <type> Ph.D. dissertation, </type> <institution> Electrical and Computer engineering Department, </institution> <address> CMU, Pittsburgh, </address> <year> 1995. </year>
Reference-contexts: A-Teams have been developed for a number of difficult problem-areas including sets of nonlinear equations [1], [2], traveling salesman problems [3], high-rise building design [4], reconfigurable robot design [5], diagnosis of faults in electric networks [6], control of electric networks [7], job-shop-scheduling [8], protein structure analysis [9], and train-scheduling <ref> [10] </ref>, steel-mill scheduling, paper-mill scheduling and constraint satisfaction [11]. Until now A-Team builders have designed the topology of the network for an A-Team for a given problem more or less by trial and error, and by hand.
Reference: 11. <author> Gorti, S.R., Humair, S., Sriram, R.D., Talukdar, S.N., Murthy, S.: </author> <title> Solving Constraint Satisfaction Problems Using A-Teams. </title> <note> To appear in AI-EDAM. </note>
Reference-contexts: of difficult problem-areas including sets of nonlinear equations [1], [2], traveling salesman problems [3], high-rise building design [4], reconfigurable robot design [5], diagnosis of faults in electric networks [6], control of electric networks [7], job-shop-scheduling [8], protein structure analysis [9], and train-scheduling [10], steel-mill scheduling, paper-mill scheduling and constraint satisfaction <ref> [11] </ref>. Until now A-Team builders have designed the topology of the network for an A-Team for a given problem more or less by trial and error, and by hand. In this paper we explore a technique for automatically learning good A-Team network designs.
Reference: 12. <author> Talukdar, S., Baerentzen L., Gove, A., de Souza, P.: </author> <title> Cooperation Schemes for Autonomous Agents. </title> <note> In review. </note>
Reference: 13. <author> Baerentzen, L., </author> <title> Talukdar S.N.: Improving Cooperation Among Autonomous Agents in Asynchronous Teams. </title> <note> Submitted to: Journal of Computational and Mathematical Organizational Theory. </note>
Reference-contexts: In this paper we explore a technique for automatically learning good A-Team network designs. The technique relies on a method for measuring agent cooperation presented in <ref> [13] </ref>. In section 2 we first give a brief presentation of an extended version of this method.
Reference: 14. <author> Aho, A.V., Ullman, J.D.: </author> <title> Principles of Compiler Design. </title> <publisher> Addison Wesley 1977. </publisher>
Reference-contexts: We will need the concepts of regular languages, regular expressions and finite state automatons borrowed from computer science (see for instance <ref> [14] </ref>.) First some definitions: Definition 6. Analphabet is a finite set of symbols fa 1 ; :::; a n g. An element from the alphabet is called a letter, symbol or character. A string, sentence or word is a finite sequence of letters. <p> The set of strings that is accepted by a particular NFA M = (Q; ; ffi; q; F ) is called the language L (M ) accepted by M . It is a well known result from Computer Science (see for instance <ref> [14] </ref>) that: Theorem 10. For any NFA M the language L (M ) accepted by M is regular. For any regular language L there exists an NFA M such that L = L (M ) Representing Networks as Regular Expressions.
References-found: 13

