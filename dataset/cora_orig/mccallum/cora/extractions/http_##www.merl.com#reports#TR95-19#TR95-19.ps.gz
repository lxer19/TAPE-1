URL: http://www.merl.com/reports/TR95-19/TR95-19.ps.gz
Refering-URL: http://www.merl.com/reports/TR95-19/index.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: A Heuristic Method for Generating 2D CSG Trees from Bitmaps  
Author: S. Gibson MERL J. Marks MERL D. Feinberg M. Sosa 
Address: Cambridge, Massachusetts 02139  
Note: Copyright c Mitsubishi Electric Research Laboratories, 1996 201 Broadway,  
Date: January 1996  
Affiliation: MITSUBISHI ELECTRIC RESEARCH LABORATORIES CAMBRIDGE RESEARCH CENTER  Harvard  
Pubnum: MIT TR-95-19  
Abstract: This paper presents a method for generating compact and effective constructive-solid-geometry (CSG) object representations from 2D bitmap representations. The method consists of two parts: a stochastic search procedure for finding candidate CSG trees and a local optimization procedure that modifies the primitives of a given CSG tree to effect a better match. Results for several sample input bitmaps are presented and an application of this method to automatic This work may not be copied or reproduced in whole or in part for any commercial purpose. Permission to copy in whole or in part without payment of fee is granted for nonprofit educational and research purposes provided that all such whole or partial copies include the following: a notice that such copying is by permission of Mitsubishi Electric Research Laboratories of Cambridge, Massachusetts; an acknowledgment of the authors and individual contributions to the work; and all applicable portions of the copyright notice. Copying, reproduction, or republishing for any other purpose shall require a license with payment of fee to Mitsubishi Electric Research Laboratories. All rights reserved. geometric morphing between pairs of bitmaps is shown.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. J. Dickinson, A. P. Pentland, and A. Rosenfeld. </author> <title> 3-D shape recovery using distributed aspect matching. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 14(2), </volume> <month> Feb. </month> <year> 1992. </year>
Reference-contexts: However, their system does not take volumetric or scanned data as input: it requires that the candidate half-spaces be provided by the user. Furthermore, it is not clear how their method can be extended to incorporate additional geometric primitives. Other related problems have been addressed in computer vision <ref> [1, 4, 14] </ref> but they are not readily applied to the general scanned-data-to-CSG conversion problem. 1.2 New contributions This paper addresses the direct conversion from scanned data to an effective CSG model by solving the 2D version of the problem: given a scanned 2D target bitmap, generate CSG trees that are <p> | h (x; y); (w; h); i, indicating a rectangle's position, size, and orientation, and h (x; y); ri indicating a circle's position and radius | are chosen randomly from the following uniform distributions: x 2 [ W 4 ; 3W 4 ; 3H min (W;H) 2 ]; h 2 <ref> [1; H [0; 360] </ref>, where W and H are the width and height of the bitmap, respectively. The type of each primitive, i.e., rectangle or circle, is chosen with equal probability. Likewise, CSG operators are chosen with equal probability from the set: difference, intersection, and union.
Reference: [2] <author> H. Hoppe, T. DeRose, T. Duchamp, M. Halstead, H. Jin, J. McDonald, J. Schweitzer, and W. Stuetzle. </author> <title> Piecewise smooth surface reconstruction. </title> <booktitle> In Proc. of SIGGRAPH 94, </booktitle> <pages> pages 295-302, </pages> <address> Orlando, Florida, </address> <month> July </month> <year> 1994. </year> <booktitle> ACM SIGGRAPH, </booktitle> <address> New York. </address> <booktitle> In Computer Graphics Annual Conference Series, </booktitle> <year> 1994. </year>
Reference-contexts: Hence, methods that convert volumetric data into a structured graphics format are needed in order to exploit these new scanning technologies. There are several methods that can be used to convert volumetric or scanned-surface data into compact or structured surface models (e.g., <ref> [2, 3, 7] </ref>). However, surface models do not support all modeling and editing tasks equally well. Some tasks are more appropriately handled by true solid modeling, as embodied in constructive-solid-geometry (CSG). There is therefore a need for techniques that convert scanned data to CSG models.
Reference: [3] <author> H. Hoppe, T. DeRose, T. Duchamp, J. McDonald, and W. Stuetzle. </author> <title> Mesh optimization. </title> <booktitle> In Proc. of SIGGRAPH 93, </booktitle> <pages> pages 19-26, </pages> <address> Anaheim, California, </address> <month> Aug. </month> <year> 1993. </year> <booktitle> ACM SIGGRAPH, </booktitle> <address> New York. </address> <booktitle> In Computer Graphics Annual Conference Series, </booktitle> <year> 1993. </year>
Reference-contexts: Hence, methods that convert volumetric data into a structured graphics format are needed in order to exploit these new scanning technologies. There are several methods that can be used to convert volumetric or scanned-surface data into compact or structured surface models (e.g., <ref> [2, 3, 7] </ref>). However, surface models do not support all modeling and editing tasks equally well. Some tasks are more appropriately handled by true solid modeling, as embodied in constructive-solid-geometry (CSG). There is therefore a need for techniques that convert scanned data to CSG models.
Reference: [4] <author> Y. G. Leclerc. </author> <title> Constructing simple stable descriptions for image partitioning. </title> <journal> International Journal of Computer Vision, </journal> <volume> 3(1) </volume> <pages> 73-102, </pages> <year> 1989. </year>
Reference-contexts: However, their system does not take volumetric or scanned data as input: it requires that the candidate half-spaces be provided by the user. Furthermore, it is not clear how their method can be extended to incorporate additional geometric primitives. Other related problems have been addressed in computer vision <ref> [1, 4, 14] </ref> but they are not readily applied to the general scanned-data-to-CSG conversion problem. 1.2 New contributions This paper addresses the direct conversion from scanned data to an effective CSG model by solving the 2D version of the problem: given a scanned 2D target bitmap, generate CSG trees that are
Reference: [5] <author> J. C. Russ. </author> <title> The Image Processing Handbook. </title> <publisher> CRC Press, </publisher> <address> Boca Raton, </address> <year> 1992. </year>
Reference-contexts: These positions are the local maxima or minima (depending on whether they make a net addition or subtraction to the resultant CSG object) of a Euclidean distance map <ref> [5] </ref> derived from the bitmap.
Reference: [6] <author> E. Saund and T. P. Moran. </author> <title> Perceptual organization in an interactive sketch editing application. </title> <booktitle> In Fifth International Conference on Computer Vision, </booktitle> <pages> pages 597-604, </pages> <address> Cambridge, Massachusetts, June 1995. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Compactness alone is not a sufficient criterion for identifying CSG models that are easy to modify and edit. Locality is doubtless an important consideration, and additional criteria may be derived from a study of typical model editing tasks <ref> [6] </ref>. 2 Interpolating between two orientations (which is relevant for rectangles only) can be done either clockwise or counterclockwise. For the morphs on the video we chose the directions of rotation for effect.
Reference: [7] <author> W. J. Schroeder, J. A. Zarge, and W. E. Lorenson. </author> <title> Decimation of triangle meshes. </title> <booktitle> In Proc. of SIGGRAPH 92, </booktitle> <pages> pages 65-70, </pages> <address> Chicago, Illinois, </address> <month> July </month> <year> 1992. </year> <booktitle> ACM SIGGRAPH, </booktitle> <address> New York. </address> <booktitle> In Computer Graphics 26(2), </booktitle> <month> July </month> <year> 1992. </year>
Reference-contexts: Hence, methods that convert volumetric data into a structured graphics format are needed in order to exploit these new scanning technologies. There are several methods that can be used to convert volumetric or scanned-surface data into compact or structured surface models (e.g., <ref> [2, 3, 7] </ref>). However, surface models do not support all modeling and editing tasks equally well. Some tasks are more appropriately handled by true solid modeling, as embodied in constructive-solid-geometry (CSG). There is therefore a need for techniques that convert scanned data to CSG models.
Reference: [8] <author> T. W. Sederberg, P. Gao, G. Wang, and H. </author> <title> Mu. 2-D shape blending: An intrinsic solution to the vertex path problem. </title> <booktitle> In Proc. of SIGGRAPH 93, </booktitle> <pages> pages 15-18, </pages> <address> Anaheim, California, </address> <month> Aug. </month> <year> 1993. </year> <booktitle> ACM SIGGRAPH, </booktitle> <address> New York. </address> <booktitle> In Computer Graphics Annual Conference Series, </booktitle> <year> 1993. </year>
Reference-contexts: Each pair of bitmaps shown depicts two topologically different letters. This approach is different from previous work on 2D geometric morphing <ref> [8, 9, 10] </ref> in both its ability to morph between topologically different shapes and in the style of morphs that it produces. 4 Conclusions and Future Work In this paper we have presented a complete system for 2D bitmap-to-CSG conversion.
Reference: [9] <author> T. W. Sederberg and E. Greenwood. </author> <title> A physically based approach to 2-D shape blending. </title> <booktitle> In Proc. of SIGGRAPH 92, </booktitle> <pages> pages 25-34, </pages> <address> Chicago, Illinois, </address> <month> July </month> <year> 1992. </year> <booktitle> ACM SIGGRAPH, </booktitle> <address> New York. </address> <booktitle> In Computer Graphics 26(2), </booktitle> <month> July </month> <year> 1992. </year>
Reference-contexts: Each pair of bitmaps shown depicts two topologically different letters. This approach is different from previous work on 2D geometric morphing <ref> [8, 9, 10] </ref> in both its ability to morph between topologically different shapes and in the style of morphs that it produces. 4 Conclusions and Future Work In this paper we have presented a complete system for 2D bitmap-to-CSG conversion.
Reference: [10] <author> M. Shapira and A. Rappoport. </author> <title> Shape blending using the star-skeleton representation. </title> <journal> IEEE Computer Graphics and Applications, </journal> <pages> pages 44-50, </pages> <month> Mar. </month> <year> 1995. </year>
Reference-contexts: Each pair of bitmaps shown depicts two topologically different letters. This approach is different from previous work on 2D geometric morphing <ref> [8, 9, 10] </ref> in both its ability to morph between topologically different shapes and in the style of morphs that it produces. 4 Conclusions and Future Work In this paper we have presented a complete system for 2D bitmap-to-CSG conversion.
Reference: [11] <author> V. Shapiro and D. L. Vossler. </author> <title> Construction and optimization of CSG representations. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 23(1) </volume> <pages> 4-20, </pages> <address> Jan./Feb. </address> <year> 1991. </year> <month> MERL-TR-95-19 January </month> <year> 1996 </year> <month> 16 </month>
Reference-contexts: However, surface models do not support all modeling and editing tasks equally well. Some tasks are more appropriately handled by true solid modeling, as embodied in constructive-solid-geometry (CSG). There is therefore a need for techniques that convert scanned data to CSG models. Shapiro and Vossler <ref> [11, 12, 13] </ref> have addressed a related problem. They present a practical system that converts limited boundary representations into CSG models. Their method uses a greedy heuristic to construct a compact CSG representation from a given set of half-spaces, those bounded by lines and circular arcs. <p> The use of a Euclidean distance map to generate targeted subtrees in the ADD operator (x 2.1) caused a significant improvement in performance. We anticipate similar improvements from additional heuristics for proposing and positioning primitive objects. The analysis of Shapiro and Vossler <ref> [11, 12, 13] </ref> is a possible source of relevant ideas. However, care must be taken when developing such heuristics: the benefits of a more focused search can be outweighed by a decrease in the variety of solutions found. * Different objective criteria.
Reference: [12] <author> V. Shapiro and D. L. Vossler. </author> <title> Efficient CSG representation of two-dimensional solids. </title> <journal> Transactions of the ASME: Journal of Mechanical Design, </journal> <volume> 113(3) </volume> <pages> 292-305, </pages> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: However, surface models do not support all modeling and editing tasks equally well. Some tasks are more appropriately handled by true solid modeling, as embodied in constructive-solid-geometry (CSG). There is therefore a need for techniques that convert scanned data to CSG models. Shapiro and Vossler <ref> [11, 12, 13] </ref> have addressed a related problem. They present a practical system that converts limited boundary representations into CSG models. Their method uses a greedy heuristic to construct a compact CSG representation from a given set of half-spaces, those bounded by lines and circular arcs. <p> The use of a Euclidean distance map to generate targeted subtrees in the ADD operator (x 2.1) caused a significant improvement in performance. We anticipate similar improvements from additional heuristics for proposing and positioning primitive objects. The analysis of Shapiro and Vossler <ref> [11, 12, 13] </ref> is a possible source of relevant ideas. However, care must be taken when developing such heuristics: the benefits of a more focused search can be outweighed by a decrease in the variety of solutions found. * Different objective criteria.
Reference: [13] <author> V. Shapiro and D. L. Vossler. </author> <title> Separation for boundary to CSG conversion. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 12(1) </volume> <pages> 35-55, </pages> <month> Jan. </month> <year> 1993. </year>
Reference-contexts: However, surface models do not support all modeling and editing tasks equally well. Some tasks are more appropriately handled by true solid modeling, as embodied in constructive-solid-geometry (CSG). There is therefore a need for techniques that convert scanned data to CSG models. Shapiro and Vossler <ref> [11, 12, 13] </ref> have addressed a related problem. They present a practical system that converts limited boundary representations into CSG models. Their method uses a greedy heuristic to construct a compact CSG representation from a given set of half-spaces, those bounded by lines and circular arcs. <p> The use of a Euclidean distance map to generate targeted subtrees in the ADD operator (x 2.1) caused a significant improvement in performance. We anticipate similar improvements from additional heuristics for proposing and positioning primitive objects. The analysis of Shapiro and Vossler <ref> [11, 12, 13] </ref> is a possible source of relevant ideas. However, care must be taken when developing such heuristics: the benefits of a more focused search can be outweighed by a decrease in the variety of solutions found. * Different objective criteria.
Reference: [14] <author> L. R. Williams. </author> <title> Perceptual organization of occluding contours. </title> <booktitle> In Third International Conference on Computer Vision, </booktitle> <pages> pages 133-137, </pages> <address> Osaka, Japan, December 1990. </address> <publisher> IEEE Computer Society Press. </publisher> <month> MERL-TR-95-19 January </month> <year> 1996 </year>
Reference-contexts: However, their system does not take volumetric or scanned data as input: it requires that the candidate half-spaces be provided by the user. Furthermore, it is not clear how their method can be extended to incorporate additional geometric primitives. Other related problems have been addressed in computer vision <ref> [1, 4, 14] </ref> but they are not readily applied to the general scanned-data-to-CSG conversion problem. 1.2 New contributions This paper addresses the direct conversion from scanned data to an effective CSG model by solving the 2D version of the problem: given a scanned 2D target bitmap, generate CSG trees that are
References-found: 14

