URL: http://ic-www.arc.nasa.gov/ic/jair-www/volume1/borgida94a.ps
Refering-URL: http://www.cs.washington.edu/research/jair/abstracts/borgida94a.html
Root-URL: 
Email: borgida@cs.rutgers.edu  pfps@research.att.com  
Title: A Semantics and Complete Algorithm for Subsumption in the CLASSIC Description Logic  
Author: Alex Borgida S. A. Peter F. Patel-Schneider S. A. 
Address: New Brunswick, NJ 08904  600 Mountain Avenue Murray Hill, NJ 07974  
Affiliation: Department of Computer Science Rutgers University  AT&T Bell Laboratories  
Note: Journal of Artificial Intelligence Research 1 (1994) 277-308 Submitted 3/94; published 6/94  U.  U.  
Abstract: This paper analyzes the correctness of the subsumption algorithm used in classic, a description logic-based knowledge representation system that is being used in practical applications. In order to deal efficiently with individuals in classic descriptions, the developers have had to use an algorithm that is incomplete with respect to the standard, model-theoretic semantics for description logics. We provide a variant semantics for descriptions with respect to which the current implementation is complete, and which can be independently motivated. The soundness and completeness of the polynomial-time sub- sumption algorithm is established using description graphs, which are an abstracted version of the implementation structures used in classic, and are of independent interest.
Abstract-found: 1
Intro-found: 1
Reference: <author> At-Kaci, H. </author> <year> (1984). </year> <title> A Lattice Theoretic Approach to Computation Based on a Calculus of Partially-Ordered Type Structures. </title> <type> Ph.D. thesis, </type> <institution> University of Pennsylvania. </institution>
Reference: <author> At-Kaci, H., & Nasr, R. </author> <year> (1986). </year> <title> LOGIN: A logic programming language with built-in inheritance. </title> <journal> Journal of Logic Programming, </journal> <volume> 3, </volume> <pages> 187-215. </pages> <booktitle> American Association for Artificial Intelligence (1992). Issues in Description Logics: Users Meet Developers. Working Notes of the AAAI 1992 Fall Symposium. </booktitle>
Reference: <editor> Baader, F., Burckert, H.-J., Heinsohn, J., Hollunder, B., Muller, J., Nebel, B., Nutt, W., & Profitlich, H.-J. </editor> <year> (1991). </year> <title> Terminological knowledge representation: A proposal for a terminological logic. </title> <note> German Research Center for Artificial Intelligence (DFKI). </note>
Reference-contexts: The notation used for descriptions here is the standard notation in the description logic community <ref> (Baader et al., 1991) </ref>. The classic notation is not used because it is more verbose. c fl1994 AI Access Foundation and Morgan Kaufmann Publishers. All rights reserved. <p> This approach, followed in systems such as kris <ref> (Baader & Hollunder, 1991) </ref>, has the problem of unpredictability: when will the system "go off into the wild blue yonder"? And of course, in some circumstances this is impossible to even attempt since the reasoning problem is undecidable. * Carefully devise a language of limited expressive power for which reasoning is <p> In empirical tests (Heinsohn et al., 1992), classic has emerged as the fastest of the current DL implementations. 4. A general scheme for incorporating such host objects is described in <ref> (Baader & Hanschke, 1991) </ref>. 280 Subsumption in CLASSIC Host descriptions are relatively simple: (i) HOST-THING, denoting the entire host realm, H ; (ii) special, pre-defined names corresponding to the types in the host programming language; and (iii) conjunctions of the above descriptions.
Reference: <author> Baader, F., & Hanschke, P. </author> <year> (1991). </year> <title> A scheme for integrating concrete domains into concept languages. </title> <booktitle> In Proceedings of the Twelfth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pp. 452-457. </pages> <note> International Joint Committee on Artificial Intelligence. A long version appears as Research Report RR-91-10 from the German Research Center for Artificial Intelligence (DFKI), </note> <month> April </month> <year> 1991. </year>
Reference-contexts: The notation used for descriptions here is the standard notation in the description logic community <ref> (Baader et al., 1991) </ref>. The classic notation is not used because it is more verbose. c fl1994 AI Access Foundation and Morgan Kaufmann Publishers. All rights reserved. <p> This approach, followed in systems such as kris <ref> (Baader & Hollunder, 1991) </ref>, has the problem of unpredictability: when will the system "go off into the wild blue yonder"? And of course, in some circumstances this is impossible to even attempt since the reasoning problem is undecidable. * Carefully devise a language of limited expressive power for which reasoning is <p> In empirical tests (Heinsohn et al., 1992), classic has emerged as the fastest of the current DL implementations. 4. A general scheme for incorporating such host objects is described in <ref> (Baader & Hanschke, 1991) </ref>. 280 Subsumption in CLASSIC Host descriptions are relatively simple: (i) HOST-THING, denoting the entire host realm, H ; (ii) special, pre-defined names corresponding to the types in the host programming language; and (iii) conjunctions of the above descriptions.
Reference: <editor> Baader, F., & Hollunder, B. </editor> <year> (1991). </year> <title> KRIS: Knowledge Representation and Inference System. </title> <journal> SIGART Bulletin, </journal> <volume> 2 (2), </volume> <pages> 8-15. </pages>
Reference-contexts: The notation used for descriptions here is the standard notation in the description logic community <ref> (Baader et al., 1991) </ref>. The classic notation is not used because it is more verbose. c fl1994 AI Access Foundation and Morgan Kaufmann Publishers. All rights reserved. <p> This approach, followed in systems such as kris <ref> (Baader & Hollunder, 1991) </ref>, has the problem of unpredictability: when will the system "go off into the wild blue yonder"? And of course, in some circumstances this is impossible to even attempt since the reasoning problem is undecidable. * Carefully devise a language of limited expressive power for which reasoning is <p> In empirical tests (Heinsohn et al., 1992), classic has emerged as the fastest of the current DL implementations. 4. A general scheme for incorporating such host objects is described in <ref> (Baader & Hanschke, 1991) </ref>. 280 Subsumption in CLASSIC Host descriptions are relatively simple: (i) HOST-THING, denoting the entire host realm, H ; (ii) special, pre-defined names corresponding to the types in the host programming language; and (iii) conjunctions of the above descriptions.
Reference: <author> Beck, H. W., Gala, S. K., & Navathe, S. B. </author> <year> (1989). </year> <title> Classification as a query processing technique in the CANDIDE semantic data model. </title> <booktitle> In Proceedings of the Fifth International Data Engineering Conference, </booktitle> <pages> pp. 572-581. </pages> <institution> Institute of Electric and Electronic Engineers. </institution>
Reference-contexts: A hidden difficulty in the second and third approach is to produce an implementation that is correct ("complete") with respect to the semantics. This difficulty is illustrated by the discovery, several years later, that the implementation of kandor, as well as candide <ref> (Beck et al., 1989) </ref>, was in fact incomplete, and its subsumption problem is NP-hard (Nebel, 1988), rather than polynomial, as was claimed; this happened despite the fact that Kandor is a very "small" language in comparison with other DLs, and its implementation appeared to be evidently correct. <p> This is significant because previous claims of correct and efficient subsumption algorithms in implemented DLs such as kandor (Patel-Schneider, 1984) and candide <ref> (Beck et al., 1989) </ref> have turned out to be unfounded (Nebel, 1988).
Reference: <author> Borgida, A., Brachman, R. J., McGuinness, D. L., & Resnick, L. A. </author> <year> (1989). </year> <title> CLASSIC: A structural data model for objects. </title> <booktitle> In Proceedings of the 1989 ACM SIGMOD International Conference on Mangement of Data, </booktitle> <pages> pp. 59-67. </pages> <institution> Association for Computing Machinery. </institution> <note> 304 Subsumption in CLASSIC Borgida, </note> <author> A. </author> <year> (1992). </year> <title> From type systems to knowledge representation: Natural semantics specifications for description logics. </title> <journal> International Journal of Intelligent and Cooperative Information Systems, </journal> <volume> 1 (1), </volume> <pages> 93-126. </pages>
Reference-contexts: This was the approach chosen by the designers of such languages as kandor (Patel-Schneider, 1984) and krypton (Brachman et al., 1983), and is close to the approach in classic <ref> (Borgida et al., 1989) </ref>. A hidden difficulty in the second and third approach is to produce an implementation that is correct ("complete") with respect to the semantics.
Reference: <author> Brachman, R. J., Fikes, R. E., & Levesque, H. J. </author> <year> (1983). </year> <title> KRYPTON: A functional approach to knowledge representation. </title> <journal> IEEE Computer, </journal> <volume> 16 (10), </volume> <pages> 67-73. </pages>
Reference-contexts: This was the approach chosen by the designers of such languages as kandor (Patel-Schneider, 1984) and krypton <ref> (Brachman et al., 1983) </ref>, and is close to the approach in classic (Borgida et al., 1989). A hidden difficulty in the second and third approach is to produce an implementation that is correct ("complete") with respect to the semantics.
Reference: <author> Cohen, W. W., & Hirsh, H. </author> <title> (forthcoming). Learnability of description logics with equality constraints. </title> <journal> Machine Learning. </journal> <note> A preliminary version appears in the Proceedings of the Fourth Annual Workshop on Computational Learning Theory. </note>
Reference: <author> Devanbu, P., Brachman, R. J., Ballard, B., & Selfridge, P. G. </author> <year> (1991). </year> <title> LaSSIE: A knowledgebased software information system. </title> <journal> Communications of the ACM, </journal> <volume> 34 (5), </volume> <pages> 35-49. </pages>
Reference-contexts: Quite a number of KBMSs based on description logics have been built, including classic (Resnick et al., 1992), loom (MacGregor & Bates, 1987), and back (Peltason et al., 1987). Such systems have been used in several practical situations, including software information bases <ref> (Devanbu et al., 1991) </ref>, financial management (Mays et al., 1987), configuration management (Owsnicki-Klewe, 1988; Wright et al., 1993), and data exploration.
Reference: <author> Donini, F. M., Lenzerini, M., Nardi, D., & Nutt, W. </author> <year> (1991). </year> <title> Tractable concept languages. </title> <booktitle> In Proceedings of the Twelfth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pp. 458-453. </pages> <booktitle> International Joint Committee on Artificial Intelligence. </booktitle>
Reference-contexts: A tractability proof for a language like Basic classic is claimed to exist (but is not proven) in <ref> (Donini et al., 1991) </ref>, and an alternate proof technique may be found by considering a restriction of the (corrected) subsumption algorithm in (Hollunder & Nutt, 1990).
Reference: <author> Doyle, J., & Patil, R. </author> <year> (1991). </year> <title> Two theses of knowledge representation: Language restric-tions, taxonomic classification, and the utility of representation services. </title> <journal> Artificial Intelligence, </journal> <volume> 48 (3), </volume> <pages> 261-297. </pages>
Reference-contexts: This approach, explicitly adopted by the loom system implementers (MacGregor & Bates, 1987), and advocated by some users <ref> (Doyle & Patil, 1991) </ref>, has one major difficulty: how can one describe to users the inferences actually drawn by the implementation so that systems with known properties can be implemented on top of such KBMS? Two solutions to this problem have been suggested: alternative semantic accounts (based on weaker, 4-valued logics,
Reference: <author> Pitt, L., & Frazier, M. </author> <year> (1994). </year> <title> Classic learning. </title> <booktitle> In Proceedings of the Seventh Annual ACM Conference on Computational Learning Theory New Brunswick, </booktitle> <address> NJ. </address> <publisher> ACM Press. </publisher>
Reference: <author> Heinsohn, J., Kudenko, D., Nebel, B., & Profitlich, H.-J. </author> <year> (1992). </year> <title> An empirical analy-sis of terminological representation systems. </title> <booktitle> In Proceedings of the Tenth National Conference on Artificial Intelligence, </booktitle> <pages> pp. 767-773. </pages> <booktitle> American Association for Artificial Intelligence. </booktitle>
Reference-contexts: In empirical tests <ref> (Heinsohn et al., 1992) </ref>, classic has emerged as the fastest of the current DL implementations. 4.
Reference: <author> Hollunder, B., & Nutt, W. </author> <year> (1990). </year> <title> Subsumption algorithms for concept languages. </title> <note> Research report RR-90-04, German Research Center for Artificial Intelligence (DFKI). </note>
Reference-contexts: A tractability proof for a language like Basic classic is claimed to exist (but is not proven) in (Donini et al., 1991), and an alternate proof technique may be found by considering a restriction of the (corrected) subsumption algorithm in <ref> (Hollunder & Nutt, 1990) </ref>. Description graphs have also turned out to be of interest because they support further theoretical results about DLs, concerning their learnability (Cohen & Hirsh, 1994; Pitt & Frazier, 1994)|results which would seem harder to obtain using the standard notation for DLs.
Reference: <author> Lenzerini, M., & Schaerf, A. </author> <year> (1991). </year> <title> Concept languages and query languages. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence, </booktitle> <pages> pp. 471-476. </pages> <booktitle> American Association for Artificial Intelligence. </booktitle>
Reference-contexts: Second, this paper investigates the effect of allowing individuals to appear in descriptions of DLs. As independently demonstrated in <ref> (Lenzerini & Schaerf, 1991) </ref>, adding a set description introduces yet another source of intractability, and we have provided an intuitive example illustrating the source of difficulties.
Reference: <author> Levesque, H. J., & Brachman, R. J. </author> <year> (1987). </year> <title> Expressiveness and tractability in knowledge representation and reasoning. </title> <journal> Computational Intelligence, </journal> <volume> 3 (2), </volume> <pages> 78-93. </pages>
Reference-contexts: In parallel with the surge of work on finding tractable yet expressive subsets of first order logic, the DL research community has been investigating the complexity of reasoning with various constructors. The first result in this area <ref> (Levesque 278 Subsumption in CLASSIC & Brachman, 1987) </ref> showed that even a seemingly simple addition to a very small language can lead to subsumption determination becoming NP-hard. <p> Therefore, subsumption is usually defined to be independent of these "contingent" assertions. As we shall see below, the use of individual properties in description subsumption also leads to intractability. 3.1 Complex Subsumption Reasoning: An Example Traditional proofs of intractability (e.g. <ref> (Levesque & Brachman, 1987) </ref>) have occasionally left users of DLs puzzled over the intuitive aspects of a language which make reasoning difficult. For this reason we present an example that illustrates the complexity of reasoning with the set description.
Reference: <author> MacGregor, R. M., & Bates, R. </author> <year> (1987). </year> <title> The Loom knowledge representation language. </title> <type> Tech. rep. </type> <institution> ISI/RS-87-188, Information Sciences Institute, University of Southern California. </institution>
Reference-contexts: Quite a number of KBMSs based on description logics have been built, including classic (Resnick et al., 1992), loom <ref> (MacGregor & Bates, 1987) </ref>, and back (Peltason et al., 1987). Such systems have been used in several practical situations, including software information bases (Devanbu et al., 1991), financial management (Mays et al., 1987), configuration management (Owsnicki-Klewe, 1988; Wright et al., 1993), and data exploration. <p> There are three possible responses to these intractability results: * Provide an incomplete implementation of the DL reasoner, in the sense that there are inferences sanctioned by the standard semantics of the constructors that are not performed by the algorithm. This approach, explicitly adopted by the loom system implementers <ref> (MacGregor & Bates, 1987) </ref>, and advocated by some users (Doyle & Patil, 1991), has one major difficulty: how can one describe to users the inferences actually drawn by the implementation so that systems with known properties can be implemented on top of such KBMS? Two solutions to this problem have been
Reference: <author> Mays, E., Apte, C., Griesmer, J., & Kastner, J. </author> <year> (1987). </year> <title> Organizing knowledge in a complex financial domain. </title> <journal> IEEE Expert, </journal> <volume> 2, </volume> <pages> 61-70. </pages>
Reference-contexts: Quite a number of KBMSs based on description logics have been built, including classic (Resnick et al., 1992), loom (MacGregor & Bates, 1987), and back (Peltason et al., 1987). Such systems have been used in several practical situations, including software information bases (Devanbu et al., 1991), financial management <ref> (Mays et al., 1987) </ref>, configuration management (Owsnicki-Klewe, 1988; Wright et al., 1993), and data exploration.
Reference: <author> Nebel, B. </author> <year> (1988). </year> <title> Computational complexity of terminological reasoning in BACK. </title> <journal> Artificial Intelligence, </journal> <volume> 34 (3), </volume> <pages> 371-383. </pages>
Reference-contexts: This difficulty is illustrated by the discovery, several years later, that the implementation of kandor, as well as candide (Beck et al., 1989), was in fact incomplete, and its subsumption problem is NP-hard <ref> (Nebel, 1988) </ref>, rather than polynomial, as was claimed; this happened despite the fact that Kandor is a very "small" language in comparison with other DLs, and its implementation appeared to be evidently correct. <p> This is significant because previous claims of correct and efficient subsumption algorithms in implemented DLs such as kandor (Patel-Schneider, 1984) and candide (Beck et al., 1989) have turned out to be unfounded <ref> (Nebel, 1988) </ref>. A tractability proof for a language like Basic classic is claimed to exist (but is not proven) in (Donini et al., 1991), and an alternate proof technique may be found by considering a restriction of the (corrected) subsumption algorithm in (Hollunder & Nutt, 1990).
Reference: <author> Nebel, B. </author> <year> (1990). </year> <title> Terminological reasoning is inherently intractable. </title> <journal> Artificial Intelligence, </journal> <volume> 43 (2), </volume> <pages> 235-249. </pages>
Reference-contexts: The expansion of identifiers is a standard operation which can lead to exponential growth in size in certain pathological cases <ref> (Nebel, 1990) </ref>, making the subsumption problem inherently intractable. As with the type system of the programming language Standard ML, such pathological cases are not encountered in practice, and the correct algorithm is simple, straightforward and efficient in normal cases (unlike the correct algorithm for reasoning with the set constructor, say).
Reference: <author> Borgida & Patel-Schneider Nebel, B., Peltason, C., </author> & <title> von Luck, </title> <editor> K. (Eds.). </editor> <booktitle> (1991). International Workshop on Terminological Logics. Document D-91-13, German Research Center for Artificial Intelligence (DFKI). </booktitle>
Reference: <author> Owsnicki-Klewe, B. </author> <year> (1988). </year> <title> Configuration as a consistency maintenance task. </title> <editor> In Hoeppner, W. (Ed.), </editor> <booktitle> Proceedings of GWAI-88|the 12th German Workshop on Artificial Intelligence, </booktitle> <pages> pp. 77-87. </pages> <publisher> Springer Verlag. </publisher>
Reference: <author> Patel-Schneider, P. F. </author> <year> (1984). </year> <title> Small can be beautiful in knowledge representation. </title> <booktitle> In Proceedings of the IEEE Workshop on Principles of Knowledge-Based Systems, </booktitle> <pages> pp. 11-16. </pages> <publisher> IEEE Computer Society. </publisher>
Reference: <author> Patel-Schneider, P. F. </author> <year> (1987). </year> <title> Decidable, Logic-Based Knowledge Representation. </title> <type> Ph.D. thesis, </type> <institution> Department of Computer Science, University of Toronto. </institution>
Reference: <author> Patel-Schneider, P. F. </author> <year> (1989a). </year> <title> A four-valued semantics for terminological logics. </title> <journal> Artificial Intelligence, </journal> <volume> 38 (3), </volume> <pages> 319-351. </pages>
Reference: <author> Patel-Schneider, P. F. </author> <year> (1989b). </year> <title> Undecidability of subsumption in NIKL. </title> <journal> Artificial Intelligence, </journal> <volume> 39 (2), </volume> <pages> 263-272. </pages>
Reference: <author> Peltason, C., von Luck, K., </author> & <title> Kindermann, </title> <editor> C. (Eds.). </editor> <year> (1991). </year> <title> Terminological Logic Users Workshop. </title> <institution> Fachbereich Informatik, Technische Universitat Berlin. </institution>
Reference: <author> Peltason, C., von Luck, K., Nebel, B., & Schmiedel, A. </author> <year> (1987). </year> <title> The user's guide to the BACK system. </title> <type> Kit-report 42, </type> <institution> Fachbereich Informatik, Technische Universitat Berlin. </institution>
Reference-contexts: Quite a number of KBMSs based on description logics have been built, including classic (Resnick et al., 1992), loom (MacGregor & Bates, 1987), and back <ref> (Peltason et al., 1987) </ref>. Such systems have been used in several practical situations, including software information bases (Devanbu et al., 1991), financial management (Mays et al., 1987), configuration management (Owsnicki-Klewe, 1988; Wright et al., 1993), and data exploration.
Reference: <author> Resnick, L. A., Borgida, A., Brachman, R. J., McGuinness, D. L., & Patel-Schneider, P. F. </author> <year> (1992). </year> <title> CLASSIC description and reference manual for the COMMON LISP implementation. </title> <institution> AI Principles Research Department, AT&T Bell Laboratories. </institution>
Reference-contexts: To detect errors: It is possible to determine whether two descriptions are disjoint, whether a description is incoherent or not, and whether ascribing a description to an individual leads to an inconsistency. Quite a number of KBMSs based on description logics have been built, including classic <ref> (Resnick et al., 1992) </ref>, loom (MacGregor & Bates, 1987), and back (Peltason et al., 1987). Such systems have been used in several practical situations, including software information bases (Devanbu et al., 1991), financial management (Mays et al., 1987), configuration management (Owsnicki-Klewe, 1988; Wright et al., 1993), and data exploration.
Reference: <author> Schmidt-Schauss, M. </author> <year> (1989). </year> <title> Subsumption in KL-ONE is undecidable. </title> <booktitle> In Proceedings of the First International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> pp. 421-431. </pages> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Wright, J. R., Weixelbaum, E. S., Brown, K., Vesonder, G. T., Palmer, S. R., Berman, J. I., & Moore, H. H. </author> <year> (1993). </year> <title> A knowledge-based configurator that supports sales, engineering, and manufacturing at AT&T network systems. </title> <booktitle> In Proceedings of the Innovative Applications of Artificial Intelligence Conference, </booktitle> <pages> pp. 183-193. </pages> <booktitle> American Association for Artificial Intelligence. </booktitle>
Reference-contexts: It is being used in commercial <ref> (Wright et al., 1993) </ref> and prototype applications at AT&T, and is made available to academic researchers by AT&T Bell Laboratories. 2. classic 1 is the first released version of classic.


References-found: 32

