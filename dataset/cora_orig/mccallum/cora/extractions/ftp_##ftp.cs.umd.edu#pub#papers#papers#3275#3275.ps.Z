URL: ftp://ftp.cs.umd.edu/pub/papers/papers/3275/3275.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/TR.html
Root-URL: 
Title: THE AUTOMATIC GRADING SYSTEM  
Author: Urs von Matt 
Keyword: Key words. Computerized grading, science education, computer aided instruction.  
Date: KASSANDRA:  January, 1994  
Affiliation: University of Maryland College Park Institute for Advanced Computer Studies UMIACS-TR-94-59 Department of Computer Science  
Pubnum: CS-TR-3275  
Abstract: An automatic grading system is presented for grading assignments in scientific computing. A student can interactively use this system to check the correctness of his program assignments. The grade for a correct solution is automatically recorded. This paper also considers the security problems with such an automatic grading system. fl This report is available by anonymous ftp from cs.umd.edu in the directory /pub/papers/TRs. It also appears in SIGCUE Outlook, 22 (1994), pp. 26-40. y Institute for Scientific Computing, ETH Zurich, CH-8092 Zurich, Switzerland; current address: Institute for Advanced Computer Studies, University of Maryland, College Park, MD 20742; e-mail: na.vonmatt@na-net.ornl.gov. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Barto n, </author> <title> LEARN and SIFLEARN, </title> <institution> University of Agriculture and Forestry, Brno, </institution> <address> Czech Republic, </address> <year> 1991. </year>
Reference-contexts: The tests are graded by means of a user-definable numerical grading system. This system is used at the Catholic University of Chile at Santiago. A related system for multiple choice tests has also been developed by S. Barton <ref> [1] </ref> from the University of Agriculture and Forestry Brno, Czech Republic. However, his work has not yet been published. Sometimes the grading of assignments is also supported by computer-assisted instruction (CAI) systems. Two such systems are described by Piotrowski [7] and by Schreihofer, Foster, Gleason, Harting, and Hiltz [11]. 3.
Reference: [2] <author> B. Char, K. Geddes, G. Gonnet, B. Leong, M. Monagan and S. Watt, </author> <title> Maple V Language Reference Manual, </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: Typically the student has to implement a procedure which operates on given input data and generates some output. If this procedure computes the right answers for different inputs we assume it to be correct, and the student gets credit for it. We use the software packages Maple <ref> [2] </ref> and Matlab [5] in the aforementioned course in scientific computing. Consequently, the student must express his solution in terms of these languages. Besides, we also make use of a classical programming language, namely Oberon [9, 14], the successor of Modula-2 [13].
Reference: [3] <author> G. E. Forsythe and N. Wirth, </author> <title> Automatic Grading Programs, </title> <journal> Comm. ACM, </journal> <volume> 8 (1965), </volume> <pages> pp. 275-278. </pages> <month> Kassandra: </month> <title> The Automatic Grading System 15 Fig. </title> <type> 4. </type> <institution> Oberon-Kassandra </institution>
Reference-contexts: Finally, section 7 reports our experiences with Kassandra. 2. History. There are a number of publications concerned with assisting teachers in checking the homework of their students. An approach, which is closely related to Kassandra, was described in 1965 by Forsythe and Wirth <ref> [3] </ref>. Their system was used for numerical analysis courses at Stanford University. As part of their homework the students had to write subroutines in the Balgol language, a dialect of Algol 58. Their solutions were turned in on punched cards.
Reference: [4] <author> P. Lira, M. Bronfman and J. Eyzaguirre, MULTITEST II: </author> <title> a program for the generation, correction, and analysis of multiple choice tests, </title> <journal> IEEE Transactions on Education, </journal> <volume> 33 (1990), </volume> <pages> pp. 320-325. </pages>
Reference-contexts: This system is used to analyse the responses to employee evaluation questionnaires and the results of student examinations at the Texas Tech University School of Medicine in Lubbock, Texas. Lira, Bronfman and Eyzaguirre <ref> [4] </ref> describe Multitest II, a system for the generation, correction, and analysis of multiple choice examinations. The tests are graded by means of a user-definable numerical grading system. This system is used at the Catholic University of Chile at Santiago.
Reference: [5] <author> C. Moler et al., </author> <title> MATLAB User's Guide, </title> <publisher> The MathWorks Inc., </publisher> <address> South Natick, </address> <year> 1990. </year>
Reference-contexts: If this procedure computes the right answers for different inputs we assume it to be correct, and the student gets credit for it. We use the software packages Maple [2] and Matlab <ref> [5] </ref> in the aforementioned course in scientific computing. Consequently, the student must express his solution in terms of these languages. Besides, we also make use of a classical programming language, namely Oberon [9, 14], the successor of Modula-2 [13].
Reference: [6] <author> R. Myers, </author> <title> Computerized Grading of Freshman Chemistry Laboratory Experiments, </title> <journal> Journal of Chemical Education, </journal> <volume> 63 (1986), </volume> <pages> pp. 507-509. </pages>
Reference-contexts: They used their system for the instruction of physics courses at the University of Houston, Texas. A mark-sense device serves to input the data into the computer. Then, the computer is used to analyse the results and generate reports that are posted in the classroom. Myers <ref> [6] </ref> describes a system for the grading of freshman chemistry laboratory experiments at the West Virginia Institute of Technology at Montgomery, West Virginia. The students turn in their homework on special mark-sense cards. Then, these cards are input into an Apple II computer with the use of a card reader.
Reference: [7] <author> J. Piotrowski, </author> <title> The small computer assisted lecturing system, </title> <journal> SIGCSE Bull., </journal> <volume> 20 (1988), </volume> <pages> pp. 8-12. </pages>
Reference-contexts: Barton [1] from the University of Agriculture and Forestry Brno, Czech Republic. However, his work has not yet been published. Sometimes the grading of assignments is also supported by computer-assisted instruction (CAI) systems. Two such systems are described by Piotrowski <ref> [7] </ref> and by Schreihofer, Foster, Gleason, Harting, and Hiltz [11]. 3. Functionality of Kassandra. The main function of Kassandra consists in checking the correctness of program assignments. A student can interactively call Kassandra and specify the number of the assignment. By that he triggers the following activities: 1.
Reference: [8] <author> R. Posteraro, D. Blackwell and A. Huddleston, Techscore: </author> <title> A program for tabulating the results of multiple choice questions and correcting multiple choice examinations, </title> <journal> Comput. Biol. Med., </journal> <volume> 16 (1986), </volume> <pages> pp. 259-265. </pages>
Reference-contexts: Then, these cards are input into an Apple II computer with the use of a card reader. The computer checks the answers and generates reports for the teacher and the students. Several papers discuss the automation of multiple-choice tests. In <ref> [8] </ref>, Posteraro, Blackwell and Huddleston present the computer program TECHSCORE which tabulates the responses to multiple choice questions, calculates the percentage of each response and displays the information in tabular form.
Reference: [9] <author> M. Reiser, </author> <title> The Oberon System, User Guide and Programmer's Manual, </title> <publisher> ACM Press, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: We use the software packages Maple [2] and Matlab [5] in the aforementioned course in scientific computing. Consequently, the student must express his solution in terms of these languages. Besides, we also make use of a classical programming language, namely Oberon <ref> [9, 14] </ref>, the successor of Modula-2 [13]. Section 2 of this paper gives a short overview of the history of automatic grading. In section 3 we discuss the functionality of Kassandra from the student's point of view.
Reference: [10] <author> R. M. Rottmann and H. T. Hudson, </author> <title> Computer Grading As an Instructional Tool, </title> <journal> Journal of College Science Teaching, </journal> <volume> 12 (1983), </volume> <pages> pp. 152-156. </pages>
Reference-contexts: They generate a unique set of data for each student's homework. The students turn in their assignments on porta-punch cards, and their responses are evaluated in a batch mode on a daily basis. In 1983, Rottmann and Hudson <ref> [10] </ref> presented a system that supports the teacher in grading multiple choice assignments. They used their system for the instruction of physics courses at the University of Houston, Texas. A mark-sense device serves to input the data into the computer.
Reference: [11] <author> E. Schreihofer, J. Foster, B. Gleason, H. Harting and S. Hiltz, </author> <title> Software tools for a virtual classroom, </title> <booktitle> in Proc. of NECC '88, </booktitle> <editor> ed. W. Ryan, </editor> <booktitle> Int. </booktitle> <institution> Council Comput. Educ., Eugene, </institution> <year> 1988, </year> <pages> pp. 230-236. </pages>
Reference-contexts: Barton [1] from the University of Agriculture and Forestry Brno, Czech Republic. However, his work has not yet been published. Sometimes the grading of assignments is also supported by computer-assisted instruction (CAI) systems. Two such systems are described by Piotrowski [7] and by Schreihofer, Foster, Gleason, Harting, and Hiltz <ref> [11] </ref>. 3. Functionality of Kassandra. The main function of Kassandra consists in checking the correctness of program assignments. A student can interactively call Kassandra and specify the number of the assignment. By that he triggers the following activities: 1.
Reference: [12] <author> J. Taylor and D. Deever, </author> <title> Constructed-Response, </title> <journal> Computer-Graded Homework, American Journal of Physics, </journal> <volume> 44 (1976), </volume> <pages> pp. 598-599. </pages>
Reference-contexts: The data is usually entered into the computer by some sort of reading device. fl Institute for Scientific Computing, ETH Zurich, CH-8092 Zurich, Switzerland; current address: Institute for Advanced Computer Studies, University of Maryland, College Park, MD 20742; e-mail: na.vonmatt@na-net.ornl.gov. 1 2 Urs von Matt Taylor and Deever <ref> [12] </ref> describe a system used in physics and mathematics courses at Otterbein College in Westerville, Ohio. They generate a unique set of data for each student's homework. The students turn in their assignments on porta-punch cards, and their responses are evaluated in a batch mode on a daily basis.
Reference: [13] <author> N. Wirth, </author> <title> Programming in Modula-2, </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1985. </year>
Reference-contexts: We use the software packages Maple [2] and Matlab [5] in the aforementioned course in scientific computing. Consequently, the student must express his solution in terms of these languages. Besides, we also make use of a classical programming language, namely Oberon [9, 14], the successor of Modula-2 <ref> [13] </ref>. Section 2 of this paper gives a short overview of the history of automatic grading. In section 3 we discuss the functionality of Kassandra from the student's point of view. Section 4 is devoted to the security aspects that such a grading system has to meet.
Reference: [14] <author> N. Wirth and J. Gutknecht, </author> <title> The Oberon System, </title> <journal> Software|Practice and Experience, </journal> <volume> 19 (1989), </volume> <pages> pp. 857-893. </pages>
Reference-contexts: We use the software packages Maple [2] and Matlab [5] in the aforementioned course in scientific computing. Consequently, the student must express his solution in terms of these languages. Besides, we also make use of a classical programming language, namely Oberon <ref> [9, 14] </ref>, the successor of Modula-2 [13]. Section 2 of this paper gives a short overview of the history of automatic grading. In section 3 we discuss the functionality of Kassandra from the student's point of view.
References-found: 14

