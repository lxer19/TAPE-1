URL: http://www.wi.leidenuniv.nl/~joost/eatcs.ps.gz
Refering-URL: http://www.wi.leidenuniv.nl/home/joost/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: Email: fbaeck,graaf,joost,kostersg@wi.leidenuniv.nl  
Title: Theory of Genetic Algorithms  
Author: Thomas Back Jeannette M. de Graaf, Joost N. Kok and Walter A. Kosters 
Address: P.O. Box 9512, 2300 RA Leiden, The Netherlands  
Affiliation: Leiden University, Department of Computer Science  
Abstract-found: 0
Intro-found: 1
Reference: [AMP92] <author> B. Anderson, J. McDonnell, and W. </author> <title> Page. Configuration optimization of mobile manipulators with equality constraints using evolutionary programming. </title> <booktitle> In Fogel and Atmar [FA92], </booktitle> <pages> pages 71-79. </pages>
Reference-contexts: Other important practical problem classes where evolutionary algorithms yield solutions of high quality include engineering design applications, e.g., for the design of aircraft [BB91b, PSS + 95], structural mechanics problems [Sch95a], electromagnetic systems [MW95], mobile manipulators <ref> [AMP92, MAPP92] </ref>, the design of a linear col-lider [Bey92], nuclear reactor fuel arrangement optimization [BHKZ96], multiplierless digital filter optimization [SE93], the design of survivable networks [DOCQ93] and optical multilayer systems [SS96].
Reference: [ARME97] <editor> P. J. Angeline, R. G. Reynolds, J. R. McDonnell, and R. Eberhart, editors. </editor> <booktitle> Proceedings of the Sixth International Conference on Evolutionary Programming, EP97, volume 1213 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1997. </year>
Reference-contexts: the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN [SM91, MM92, DSM94, VERS96] 22 * International Conference on Genetic Algorithms, ICGA [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] * IEEE International Conference on Evolutionary Computation, ICEC [IEE94, IEE95, IEE96, IEE97] * Annual Conference on Evolutionary Programming, EP <ref> [FA92, FA93, SF94, MRF95, FAB96, ARME97] </ref> * Annual Conference on Genetic Programming, GP [KGFR96, KDD + 97] Finally we give an incomplete list of areas in which evolutionary computation has been used as a problem solving method.
Reference: [Bac92] <author> Th. </author> <title> Back. The interaction of mutation rate, selection, and self-adaptation within a genetic algorithm. </title> <editor> In R. Manner and B. Manderick, editors, </editor> <booktitle> Parallel Problem Solving from Nature, </booktitle> <volume> 2, </volume> <pages> pages 85-94. </pages> <publisher> Elsevier, </publisher> <address> Amsterdam, </address> <year> 1992. </year>
Reference-contexts: Here we consider an elitist (1 + 1)-GA, where the child is generated by a mutation that toggles every bit (out of n) with probability p. Rudolph's treatment of the counting ones problem, following Back <ref> [Bac92] </ref> and Muhlenbein [Muh92], starts from the following observation: the probability to make a transition from a state with precisely i ones to a state with precisely j ones (0 i &lt; j n) equals p ji (1 p) n (ji) k=0 i ! k + j i (p=(1 p)) 2k <p> The corresponding experiments can be found in [MSV93, TG94, Bac95]. Concerning the local convergence velocity of the (1+1)-genetic algorithm, Equation (5) in the previous section has been used by Back to define the convergence velocity in a straightforward way as the expectation of the improvement <ref> [Bac92, Bac96] </ref>, yielding a more precise estimate of the optimal mutation rate as an exponentially decreasing function of the number of correct bits, approximated by [Bac96] p fl 2 (ones (x) + 1) n ; (13) where ones (x) is the number of ones in the bit string x.
Reference: [Bac94a] <author> Th. </author> <title> Back. Evolutionary algorithms: Comparison of approaches. </title> <editor> In R. C. Paton, editor, </editor> <title> Computing with Biological Metaphors, </title> <booktitle> chapter 14, </booktitle> <pages> pages 227-243. </pages> <publisher> Chapman & Hall, </publisher> <address> London, </address> <year> 1994. </year>
Reference-contexts: For q = 2 this equals P (m) = ( 1) in agreement with Equation (1). A more detailed analysis of different selection schemes can be found in the work of Back <ref> [Bac94a] </ref>, Deb and Goldberg [DG91] and Blickle and Thiele [BT96]. 6 2.3 Recombination and Mutation Generally a recombination operator repeatedly takes two individuals (the parents) and produces two or more new individuals (the offspring), which are a combination of their parents.
Reference: [Bac94b] <author> Th. </author> <title> Back. Selective pressure in evolutionary algorithms: A characterization of selection mechanisms. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation, </booktitle> <pages> pages 57-62. </pages> <publisher> IEEE Press, </publisher> <address> Piscataway, NJ, </address> <year> 1994. </year>
Reference-contexts: Now we describe four popular selection mechanisms. First we have examples 4 of mating selection, whereas the last one is the most commonly used environmental selection. An overview of selection methods commonly used in evolutionary algorithms can be found e.g. in <ref> [DG91, Bac94b, BT96] </ref>. The distinction between environmental selection and mating selection is explicitly introduced by Schwefel and Back in [SB97]. 1. Proportional selection ([Hol75]): The probability for an individual to be selected is its fitness divided by the sum of the fitness values of the individuals occurring in the population.
Reference: [Bac95] <author> Th. </author> <title> Back. Generalized convergence models for tournament- and (,)- selection. </title> <editor> In L. Eshelman, editor, </editor> <booktitle> Proceedings of the 6th International Conference on Genetic Algorithms, </booktitle> <pages> pages 2-8. </pages> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Francisco, CA, </address> <year> 1995. </year>
Reference-contexts: In typical investigations of the convergence velocity of canonical genetic algorithms, fitness values are assumed to be normally distributed with expectation E [f ] = 1 i=1 f i and standard deviation , i.e., f i ~ N (E [f ]; ) ; cf. <ref> [MSV93, Bac95, MG96] </ref>. Miller and Goldberg offer the remark that "In practice, this is true or approximately true for many domains because recombination and mutation operators have a normalizing effect on the population fitness distribution" ([MG96], p. 115). <p> Moreover, several selection methods such as (,)-selection <ref> [MSV93, Bac95] </ref>, tournament selection [Bac95, BT95b], linear ranking selection [BT95a] and proportional selection [TG94] have been analyzed in the past for the assumption of normally distributed fitness values. <p> Moreover, several selection methods such as (,)-selection [MSV93, Bac95], tournament selection <ref> [Bac95, BT95b] </ref>, linear ranking selection [BT95a] and proportional selection [TG94] have been analyzed in the past for the assumption of normally distributed fitness values. <p> Depending on the parameters of the selection method, the exact values of I are known to be I ; = i=+1 for (,)-selection <ref> [Bac95] </ref>, I q = E [z q:q ] for tournament selection with tournament size q [Bac95, MG96], I + = ( + 1) E [z 2:2 ] for linear ranking with a maximum expected number + of copies of the best individual [MG96], and t 19 for proportional selection [MSV93]. <p> Depending on the parameters of the selection method, the exact values of I are known to be I ; = i=+1 for (,)-selection [Bac95], I q = E [z q:q ] for tournament selection with tournament size q <ref> [Bac95, MG96] </ref>, I + = ( + 1) E [z 2:2 ] for linear ranking with a maximum expected number + of copies of the best individual [MG96], and t 19 for proportional selection [MSV93]. The reader should also consult [BT96] and [MG96] for an overview of selection schemes. <p> The corresponding experiments can be found in <ref> [MSV93, TG94, Bac95] </ref>.
Reference: [Bac96] <author> Th. </author> <title> Back. Evolutionary Algorithms in Theory and Practice. </title> <publisher> Oxford University Press, </publisher> <address> New York, </address> <year> 1996. </year>
Reference-contexts: We hope that this paper provides a starting point for researchers in theoretical computer science who are interested in the theory of evolutionary computation. 2 Evolutionary Computation Genetic algorithms form a subclass of evolutionary computation, as is the case for evolution strategies (e.g. <ref> [Rec73, Sch77, Rec94, Sch95b, Bac96] </ref>), evolutionary programming (e.g. [FOW66, Fog95]), classifier systems (e.g. [HHNT86]) and genetic programming (e.g. [Koz92a, Kin94]). <p> The algorithms based on this evolution principle are generally called evolutionary algorithms. They are mostly used to solve search and optimization problems. For more general overviews of the field, the reader is referred to <ref> [Fog95, Bac96, Mic96] </ref>. 2.1 Evolutionary Algorithms Evolutionary algorithms work on populations of individuals, each individual representing a point in search space. An individual may occur more than once in a population, i.e., populations are multisets of individuals. <p> Although some research has been done in order to support or even prove this hypothesis, only empirical results are available (see for a recent empirical result e.g., [WLR97]). Several authors have offered their remarks on Holland's hypothesis. See for instance Grefenstette and Baker [GB89] and Back <ref> [Bac96] </ref>, where some remarks on the multi-armed bandit analogy used by Holland are offered. <p> the expected time to absorption for different settings of the mutation rate p has been performed by Back and reveals the fact that a too large setting of the mutation rate causes an exponential absorption time in n, while the optimal behavior is of the order O (n log n) <ref> [Bac96] </ref>. Figure 4 shows numerical results for different settings of the mutation rate p as a function of the problem dimension n. The O (n log n)-analysis is generic in the sense that it applies to all modular functions. <p> The corresponding experiments can be found in [MSV93, TG94, Bac95]. Concerning the local convergence velocity of the (1+1)-genetic algorithm, Equation (5) in the previous section has been used by Back to define the convergence velocity in a straightforward way as the expectation of the improvement <ref> [Bac92, Bac96] </ref>, yielding a more precise estimate of the optimal mutation rate as an exponentially decreasing function of the number of correct bits, approximated by [Bac96] p fl 2 (ones (x) + 1) n ; (13) where ones (x) is the number of ones in the bit string x. <p> (5) in the previous section has been used by Back to define the convergence velocity in a straightforward way as the expectation of the improvement [Bac92, Bac96], yielding a more precise estimate of the optimal mutation rate as an exponentially decreasing function of the number of correct bits, approximated by <ref> [Bac96] </ref> p fl 2 (ones (x) + 1) n ; (13) where ones (x) is the number of ones in the bit string x. <p> An extension of the convergence velocity definition to include (1+)- and (1,)- genetic algorithms (where &gt; 1 offspring individuals are generated by means of mutation only) is possible and has been outlined by Back <ref> [Bac96] </ref>. A further generalization for &gt; 1 can be formulated as well, but has not yet been analyzed in more detail. In concluding this overview of convergence velocity results for genetic algorithms, we immediately observe that the "real" genetic algorithm with crossover and mutation has not yet been successfully analyzed. <p> As good starting points for further studies on the different types of evolutionary algorithms we recommend <ref> [Bac96, BFM97, Dav91, Fog95, Gol89c, Kin94, Koz92b, Mic96, Mit96, Sch95b] </ref>. Several moderated mailing lists (e.g., GA-List-Request@aic.nrl.navy.mil and EP-List-Request@magenta.me.fau.edu) and newsgroups (such as comp.ai.genetic) allow for keeping track of current events and discussions in the field. Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html.
Reference: [Bac97] <editor> Th. Back, editor. </editor> <booktitle> Genetic Algorithms: Proceedings of the 7th International Conference. </booktitle> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Francisco, CA, </address> <year> 1997. </year>
Reference-contexts: Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html. There are several relevant conferences in the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN [SM91, MM92, DSM94, VERS96] 22 * International Conference on Genetic Algorithms, ICGA <ref> [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] </ref> * IEEE International Conference on Evolutionary Computation, ICEC [IEE94, IEE95, IEE96, IEE97] * Annual Conference on Evolutionary Programming, EP [FA92, FA93, SF94, MRF95, FAB96, ARME97] * Annual Conference on Genetic Programming, GP [KGFR96, KDD + 97] Finally we give an incomplete list of areas
Reference: [Bak85] <author> J. E. Baker. </author> <title> Adaptive selection methods for genetic algorithms. </title> <booktitle> In Grefen-stette [Gre85], </booktitle> <pages> pages 101-111. </pages>
Reference: [BB91a] <editor> R. K. Belew and L. B. Booker, editors. </editor> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms. </booktitle> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Mateo, CA, </address> <year> 1991. </year>
Reference-contexts: Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html. There are several relevant conferences in the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN [SM91, MM92, DSM94, VERS96] 22 * International Conference on Genetic Algorithms, ICGA <ref> [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] </ref> * IEEE International Conference on Evolutionary Computation, ICEC [IEE94, IEE95, IEE96, IEE97] * Annual Conference on Evolutionary Programming, EP [FA92, FA93, SF94, MRF95, FAB96, ARME97] * Annual Conference on Genetic Programming, GP [KGFR96, KDD + 97] Finally we give an incomplete list of areas
Reference: [BB91b] <author> M. F. Bramlette and E. E. Bouchard. </author> <title> Genetic algorithms in parametric design of aircraft. </title> <editor> In Davis [Dav91], </editor> <volume> chapter 10, </volume> <pages> pages 109-123. 24 </pages>
Reference-contexts: Other important practical problem classes where evolutionary algorithms yield solutions of high quality include engineering design applications, e.g., for the design of aircraft <ref> [BB91b, PSS + 95] </ref>, structural mechanics problems [Sch95a], electromagnetic systems [MW95], mobile manipulators [AMP92, MAPP92], the design of a linear col-lider [Bey92], nuclear reactor fuel arrangement optimization [BHKZ96], multiplierless digital filter optimization [SE93], the design of survivable networks [DOCQ93] and optical multilayer systems [SS96].
Reference: [BD93] <author> A. Bertoni and M. Dorigo. </author> <title> Implicit parallellism in genetic algorithms. </title> <journal> Artificial Intelligence, </journal> <volume> 61(2) </volume> <pages> 307-314, </pages> <year> 1993. </year>
Reference-contexts: Holland called this property implicit parallelism. (See Holland [Hol75], and later Bertoni and Dorigo <ref> [BD93] </ref>.) Note that the results in this section are more or less independent of the fitness function f . More knowledge about f should give more information and better results.
Reference: [Bey92] <author> H.-G. Beyer. </author> <title> Some aspects of the `evolution strategy' for solving TSP-like optimization problems appearing at the design studies of a 0.5 TeV e + e -linear collider. </title> <booktitle> In Manner and Manderick [MM92], </booktitle> <pages> pages 361-370. </pages>
Reference-contexts: Other important practical problem classes where evolutionary algorithms yield solutions of high quality include engineering design applications, e.g., for the design of aircraft [BB91b, PSS + 95], structural mechanics problems [Sch95a], electromagnetic systems [MW95], mobile manipulators [AMP92, MAPP92], the design of a linear col-lider <ref> [Bey92] </ref>, nuclear reactor fuel arrangement optimization [BHKZ96], multiplierless digital filter optimization [SE93], the design of survivable networks [DOCQ93] and optical multilayer systems [SS96]. These applications provide a nice view on the possible representations of individuals that can be used for different kinds of problems.
Reference: [Bey94] <author> H.-G. Beyer. </author> <title> Toward a theory of evolution strategies: </title> <journal> The (,)-theory. Evolutionary Computation, </journal> <volume> 2(4) </volume> <pages> 381-408, </pages> <year> 1994. </year>
Reference-contexts: While in general these values cannot be expressed in closed form (except for E [z : ] and 2 f1; : : : ; 5g), tables of the numerical values can be found e.g. in the work of Harter [Har61], Beyer <ref> [Bey94] </ref> and Rechenberg [Rec94].
Reference: [Bey95] <author> H.-G. Beyer. </author> <title> Toward a theory of evolution strategies: On the benefits of sex | the (=; )-theory. </title> <journal> Evolutionary Computation, </journal> <volume> 3(1) </volume> <pages> 81-111, </pages> <year> 1995. </year>
Reference: [Bey96] <author> H.-G. Beyer. </author> <title> On the asymptotic behavior of multirecombinant evolution strategies. </title> <editor> In Voigt et al. </editor> <booktitle> [VERS96], </booktitle> <pages> pages 122-133. </pages>
Reference: [BFM97] <editor> Th. Back, D. B. Fogel, and Z. Michalewicz, editors. </editor> <booktitle> Handbook of Evolutionary Computation. </booktitle> <publisher> Oxford University Press, </publisher> <address> New York, </address> <publisher> and Institute of Physics Publishing, </publisher> <address> Bristol, </address> <year> 1997. </year>
Reference-contexts: Genetic algorithms are a subfield of evolutionary computation. For a good overview of evolutionary computation one may consult the Handbook of Evolutionary Computation <ref> [BFM97] </ref>. In the Handbook also many applications of genetic algorithms can be found. In this paper we do not give a complete overview of the theory of genetic algorithms; in future papers we intend to cover more related topics. <p> Besides the usual recombination operator some variants are of interest. We briefly discuss two. For a detailed overview of recombination operators in genetic algorithms, the reader is referred to the Handbook of Evolutionary Computation <ref> [BFM97] </ref>. First we mention elitist recombination, as introduced by Thierens and Goldberg [TG94]. It selects two parents and produces two children, as usual. But then the best two among the parents and the children are chosen as offspring for this operator. <p> As good starting points for further studies on the different types of evolutionary algorithms we recommend <ref> [Bac96, BFM97, Dav91, Fog95, Gol89c, Kin94, Koz92b, Mic96, Mit96, Sch95b] </ref>. Several moderated mailing lists (e.g., GA-List-Request@aic.nrl.navy.mil and EP-List-Request@magenta.me.fau.edu) and newsgroups (such as comp.ai.genetic) allow for keeping track of current events and discussions in the field. Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html.
Reference: [BHKZ96] <author> Th. Back, J. Heistermann, C. Kappler, and M. Zamparelli. </author> <title> Evolutionary algorithms support refueling of pressurized water reactors. </title> <booktitle> In Proceedings of the Third IEEE Conference on Evolutionary Computation, </booktitle> <pages> pages 104-108. </pages> <publisher> IEEE Press, </publisher> <address> Piscataway, NJ, </address> <year> 1996. </year>
Reference-contexts: Other important practical problem classes where evolutionary algorithms yield solutions of high quality include engineering design applications, e.g., for the design of aircraft [BB91b, PSS + 95], structural mechanics problems [Sch95a], electromagnetic systems [MW95], mobile manipulators [AMP92, MAPP92], the design of a linear col-lider [Bey92], nuclear reactor fuel arrangement optimization <ref> [BHKZ96] </ref>, multiplierless digital filter optimization [SE93], the design of survivable networks [DOCQ93] and optical multilayer systems [SS96]. These applications provide a nice view on the possible representations of individuals that can be used for different kinds of problems.
Reference: [BHS97] <editor> Th. Back, U. Hammel, and H.-P. Schwefel. </editor> <title> Evolutionary computation: History and current state. </title> <journal> IEEE Transactions on Evolutionary Computation, </journal> <volume> 1(1) </volume> <pages> 3-17, </pages> <year> 1997. </year>
Reference-contexts: The first possibility will be called (; )-selection (with ) and the second possibility ( + )-selection. The (; ) and ( + ) notation is inspired by the usual notions from the theory of evolution strategies 1 (see e.g. <ref> [BS93, Rec94, Sch95b, BHS97] </ref>). Then to these resp. + candidates a selection mechanism is applied in order to obtain the new population with members. The age of the surviving members from the old population is increased by one, and the offspring start with age zero.
Reference: [Bru93] <author> R. Bruns. </author> <title> Direct chromosome representation and advanced genetic operators for production scheduling. </title> <booktitle> In Forrest [For93], </booktitle> <pages> pages 352-359. </pages>
Reference-contexts: Relevant applications to combinatorial problems utilizing another representation of solutions than the binary one may also be found in the domains of scheduling (e.g., production scheduling <ref> [Bru93] </ref> and related problems [FRC93]), routing (e.g. of vehicles [BW93] or telephone calls [CDQ91]), and packing (e.g. of pallets on a truck [Jul93]).
Reference: [BS93] <author> Th. Back and H.-P. Schwefel. </author> <title> An overview of evolutionary algorithms for parameter optimization. </title> <journal> Evolutionary Computation, </journal> <volume> 1(1) </volume> <pages> 1-23, </pages> <year> 1993. </year>
Reference-contexts: The first possibility will be called (; )-selection (with ) and the second possibility ( + )-selection. The (; ) and ( + ) notation is inspired by the usual notions from the theory of evolution strategies 1 (see e.g. <ref> [BS93, Rec94, Sch95b, BHS97] </ref>). Then to these resp. + candidates a selection mechanism is applied in order to obtain the new population with members. The age of the surviving members from the old population is increased by one, and the offspring start with age zero.
Reference: [BS96] <author> Th. Back and M. Schutz. </author> <title> Intelligent mutation rate control in canonical genetic algorithms. </title> <editor> In Z. W. Ras and M. Michalewicz, editors, </editor> <booktitle> Foundations of Intelligent Systems, 9th International Symposium, ISMIS '96, volume 1079 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 158-167. </pages> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1996. </year>
Reference-contexts: Experience on practical optimization problems has clarified, however, that an exponentially decreasing mutation rate schedule often yields a significant improvement over constant mutation rate settings <ref> [Fog89, BS96] </ref>. An extension of the convergence velocity definition to include (1+)- and (1,)- genetic algorithms (where &gt; 1 offspring individuals are generated by means of mutation only) is possible and has been outlined by Back [Bac96].
Reference: [BT95a] <author> T. Blickle and L. Thiele. </author> <title> A comparison of selection schemes used in genetic algorithms. </title> <type> TIK-Report 11, </type> <institution> Computer Engineering and Communication Networks Lab (TIK), Swiss Federal Institute of Technology (ETH), </institution> <address> Zurich, </address> <month> December </month> <year> 1995. </year> <month> 25 </month>
Reference-contexts: Moreover, several selection methods such as (,)-selection [MSV93, Bac95], tournament selection [Bac95, BT95b], linear ranking selection <ref> [BT95a] </ref> and proportional selection [TG94] have been analyzed in the past for the assumption of normally distributed fitness values.
Reference: [BT95b] <author> T. Blickle and L. Thiele. </author> <title> A mathematical analysis of tournament selection. </title> <booktitle> In Eshelman [Esh95], </booktitle> <pages> pages 9-16. </pages>
Reference-contexts: Moreover, several selection methods such as (,)-selection [MSV93, Bac95], tournament selection <ref> [Bac95, BT95b] </ref>, linear ranking selection [BT95a] and proportional selection [TG94] have been analyzed in the past for the assumption of normally distributed fitness values.
Reference: [BT96] <author> T. Blickle and L. Thiele. </author> <title> A comparison of selection schemes used in evolutionary algorithms. </title> <journal> Evolutionary Computation, </journal> <volume> 4(4) </volume> <pages> 361-394, </pages> <year> 1996. </year>
Reference-contexts: Now we describe four popular selection mechanisms. First we have examples 4 of mating selection, whereas the last one is the most commonly used environmental selection. An overview of selection methods commonly used in evolutionary algorithms can be found e.g. in <ref> [DG91, Bac94b, BT96] </ref>. The distinction between environmental selection and mating selection is explicitly introduced by Schwefel and Back in [SB97]. 1. Proportional selection ([Hol75]): The probability for an individual to be selected is its fitness divided by the sum of the fitness values of the individuals occurring in the population. <p> For q = 2 this equals P (m) = ( 1) in agreement with Equation (1). A more detailed analysis of different selection schemes can be found in the work of Back [Bac94a], Deb and Goldberg [DG91] and Blickle and Thiele <ref> [BT96] </ref>. 6 2.3 Recombination and Mutation Generally a recombination operator repeatedly takes two individuals (the parents) and produces two or more new individuals (the offspring), which are a combination of their parents. <p> The reader should also consult <ref> [BT96] </ref> and [MG96] for an overview of selection schemes.
Reference: [BW93] <author> J. L. Blanton and R. L. Wainwright. </author> <title> Multiple vehicle routing with time and capacity constraints using genetic algorithms. </title> <booktitle> In Forrest [For93], </booktitle> <pages> pages 452-459. </pages>
Reference-contexts: Relevant applications to combinatorial problems utilizing another representation of solutions than the binary one may also be found in the domains of scheduling (e.g., production scheduling [Bru93] and related problems [FRC93]), routing (e.g. of vehicles <ref> [BW93] </ref> or telephone calls [CDQ91]), and packing (e.g. of pallets on a truck [Jul93]).
Reference: [CDQ91] <author> L. A. Cox, L. Davis, and Y. Qiu. </author> <title> Dynamic anticipatory routing in circuit-switched telecommunications networks. </title> <editor> In Davis [Dav91], </editor> <volume> chapter 11, </volume> <pages> pages 109-143. </pages>
Reference-contexts: Relevant applications to combinatorial problems utilizing another representation of solutions than the binary one may also be found in the domains of scheduling (e.g., production scheduling [Bru93] and related problems [FRC93]), routing (e.g. of vehicles [BW93] or telephone calls <ref> [CDQ91] </ref>), and packing (e.g. of pallets on a truck [Jul93]).
Reference: [Dav91] <editor> L. Davis, editor. </editor> <booktitle> Handbook of Genetic Algorithms. </booktitle> <publisher> Van Nostrand Reinhold, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: As good starting points for further studies on the different types of evolutionary algorithms we recommend <ref> [Bac96, BFM97, Dav91, Fog95, Gol89c, Kin94, Koz92b, Mic96, Mit96, Sch95b] </ref>. Several moderated mailing lists (e.g., GA-List-Request@aic.nrl.navy.mil and EP-List-Request@magenta.me.fau.edu) and newsgroups (such as comp.ai.genetic) allow for keeping track of current events and discussions in the field. Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html.
Reference: [DG91] <author> K. Deb and D. E. Goldberg. </author> <title> Analyzing deception in trap functions. </title> <type> IlliGAL Report 91009, </type> <institution> University of Illinois at Urbana-Champaign, IL, </institution> <month> December </month> <year> 1991. </year>
Reference-contexts: Now we describe four popular selection mechanisms. First we have examples 4 of mating selection, whereas the last one is the most commonly used environmental selection. An overview of selection methods commonly used in evolutionary algorithms can be found e.g. in <ref> [DG91, Bac94b, BT96] </ref>. The distinction between environmental selection and mating selection is explicitly introduced by Schwefel and Back in [SB97]. 1. Proportional selection ([Hol75]): The probability for an individual to be selected is its fitness divided by the sum of the fitness values of the individuals occurring in the population. <p> For q = 2 this equals P (m) = ( 1) in agreement with Equation (1). A more detailed analysis of different selection schemes can be found in the work of Back [Bac94a], Deb and Goldberg <ref> [DG91] </ref> and Blickle and Thiele [BT96]. 6 2.3 Recombination and Mutation Generally a recombination operator repeatedly takes two individuals (the parents) and produces two or more new individuals (the offspring), which are a combination of their parents.
Reference: [DOCQ93] <author> L. Davis, D. Orvosh, A. Cox, and Y. Qiu. </author> <title> A genetic algorithm for survivable network design. </title> <booktitle> In Forrest [For93], </booktitle> <pages> pages 408-415. </pages>
Reference-contexts: high quality include engineering design applications, e.g., for the design of aircraft [BB91b, PSS + 95], structural mechanics problems [Sch95a], electromagnetic systems [MW95], mobile manipulators [AMP92, MAPP92], the design of a linear col-lider [Bey92], nuclear reactor fuel arrangement optimization [BHKZ96], multiplierless digital filter optimization [SE93], the design of survivable networks <ref> [DOCQ93] </ref> and optical multilayer systems [SS96]. These applications provide a nice view on the possible representations of individuals that can be used for different kinds of problems.
Reference: [DSM94] <editor> Y. Davidor, H.-P. Schwefel, and R. Manner, editors. </editor> <booktitle> Parallel Problem Solving from Nature | PPSN III, International Conference on Evolutionary Computation, volume 866 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1994. </year>
Reference-contexts: Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html. There are several relevant conferences in the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN <ref> [SM91, MM92, DSM94, VERS96] </ref> 22 * International Conference on Genetic Algorithms, ICGA [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] * IEEE International Conference on Evolutionary Computation, ICEC [IEE94, IEE95, IEE96, IEE97] * Annual Conference on Evolutionary Programming, EP [FA92, FA93, SF94, MRF95, FAB96, ARME97] * Annual Conference on Genetic Programming, GP
Reference: [EAH91] <author> A. E. Eiben, E. H. L. Aarts, and K. M. Van Hee. </author> <title> Global convergence of genetic algorithms: An infinite Markov chain analysis. </title> <booktitle> In Schwefel and Manner [SM91], </booktitle> <pages> pages 4-12. </pages>
Reference-contexts: Suppose we have a genetic algorithm, operating on a finite set of populations. For the sake of convenience, the fitness of a population is defined as the fitness of its best individual. Now we have (cf. <ref> [EAH91] </ref>): Convergence theorem: Suppose that the genetic algorithm is elitist, meaning that in every step at least the current best individual survives. Suppose furthermore that for every population P there is a nonzero probability P (P ) that in the next generation the fitness of the population is really better.
Reference: [ERR94] <author> A. E. Eiben, P.-E. Raue, and Zs. Ruttkay. </author> <title> Genetic algorithms with multi-parent recombination. </title> <editor> In Davidor et al. </editor> <booktitle> [DSM94], </booktitle> <pages> pages 78-87. </pages>
Reference-contexts: But then the best two among the parents and the children are chosen as offspring for this operator. Thus this type of recombination does not weaken the population. One can view this elitist recombination as a kind of local (2 + 2)-selection. Second we introduce multiparent recombination (e.g. <ref> [ERR94] </ref>). Multiparent operators are generalizations of operators with two parents. For example, a one-point crossover operator takes two parents, and the offspring consists of an initial part from one of the parents and a second part from the other one.
Reference: [Esh95] <editor> L. Eshelman, editor. </editor> <booktitle> Genetic Algorithms: Proceedings of the 6th International Conference. </booktitle> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Francisco, CA, </address> <year> 1995. </year>
Reference-contexts: Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html. There are several relevant conferences in the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN [SM91, MM92, DSM94, VERS96] 22 * International Conference on Genetic Algorithms, ICGA <ref> [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] </ref> * IEEE International Conference on Evolutionary Computation, ICEC [IEE94, IEE95, IEE96, IEE97] * Annual Conference on Evolutionary Programming, EP [FA92, FA93, SF94, MRF95, FAB96, ARME97] * Annual Conference on Genetic Programming, GP [KGFR96, KDD + 97] Finally we give an incomplete list of areas
Reference: [FA92] <editor> D. B. Fogel and W. Atmar, editors. </editor> <booktitle> Proceedings of the First Annual Conference on Evolutionary Programming. Evolutionary Programming Society, </booktitle> <address> San Diego, CA, </address> <year> 1992. </year>
Reference-contexts: the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN [SM91, MM92, DSM94, VERS96] 22 * International Conference on Genetic Algorithms, ICGA [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] * IEEE International Conference on Evolutionary Computation, ICEC [IEE94, IEE95, IEE96, IEE97] * Annual Conference on Evolutionary Programming, EP <ref> [FA92, FA93, SF94, MRF95, FAB96, ARME97] </ref> * Annual Conference on Genetic Programming, GP [KGFR96, KDD + 97] Finally we give an incomplete list of areas in which evolutionary computation has been used as a problem solving method.
Reference: [FA93] <editor> D. B. Fogel and W. Atmar, editors. </editor> <booktitle> Proceedings of the Second Annual Conference on Evolutionary Programming. Evolutionary Programming Society, </booktitle> <address> San Diego, CA, </address> <year> 1993. </year> <month> 26 </month>
Reference-contexts: the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN [SM91, MM92, DSM94, VERS96] 22 * International Conference on Genetic Algorithms, ICGA [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] * IEEE International Conference on Evolutionary Computation, ICEC [IEE94, IEE95, IEE96, IEE97] * Annual Conference on Evolutionary Programming, EP <ref> [FA92, FA93, SF94, MRF95, FAB96, ARME97] </ref> * Annual Conference on Genetic Programming, GP [KGFR96, KDD + 97] Finally we give an incomplete list of areas in which evolutionary computation has been used as a problem solving method.
Reference: [FAB96] <editor> L. J. Fogel, P. J. Angeline, and T. Back, editors. </editor> <booktitle> Proceedings of the Fifth Annual Conference on Evolutionary Programming. </booktitle> <publisher> The MIT Press, </publisher> <address> Cam-bridge, MA, </address> <year> 1996. </year>
Reference-contexts: the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN [SM91, MM92, DSM94, VERS96] 22 * International Conference on Genetic Algorithms, ICGA [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] * IEEE International Conference on Evolutionary Computation, ICEC [IEE94, IEE95, IEE96, IEE97] * Annual Conference on Evolutionary Programming, EP <ref> [FA92, FA93, SF94, MRF95, FAB96, ARME97] </ref> * Annual Conference on Genetic Programming, GP [KGFR96, KDD + 97] Finally we give an incomplete list of areas in which evolutionary computation has been used as a problem solving method.
Reference: [FK95] <author> P. Floreen and J.N. Kok. </author> <title> Tracing the behavior of genetic algorithms using expected values of bit and Walsh products. </title> <editor> In L.J. Eshelman, editor, </editor> <booktitle> Proceedings of the sixth international conference on genetic algorithms, </booktitle> <pages> pages 201-208. </pages> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <year> 1995. </year>
Reference: [Fog89] <author> T. C. Fogarty. </author> <title> Varying the probability of mutation in the genetic algorithm. </title> <booktitle> In Schaffer [Sch89], </booktitle> <pages> pages 104-109. </pages>
Reference-contexts: Experience on practical optimization problems has clarified, however, that an exponentially decreasing mutation rate schedule often yields a significant improvement over constant mutation rate settings <ref> [Fog89, BS96] </ref>. An extension of the convergence velocity definition to include (1+)- and (1,)- genetic algorithms (where &gt; 1 offspring individuals are generated by means of mutation only) is possible and has been outlined by Back [Bac96].
Reference: [Fog95] <author> D. B. Fogel. </author> <title> Evolutionary Computation: Toward a New Philosophy of Machine Intelligence. </title> <publisher> IEEE Press, </publisher> <address> Piscataway, NJ, </address> <year> 1995. </year>
Reference-contexts: hope that this paper provides a starting point for researchers in theoretical computer science who are interested in the theory of evolutionary computation. 2 Evolutionary Computation Genetic algorithms form a subclass of evolutionary computation, as is the case for evolution strategies (e.g. [Rec73, Sch77, Rec94, Sch95b, Bac96]), evolutionary programming (e.g. <ref> [FOW66, Fog95] </ref>), classifier systems (e.g. [HHNT86]) and genetic programming (e.g. [Koz92a, Kin94]). Evolutionary computation is a problem solving method, based fl Also affiliated with the Center for Applied Systems Analysis, Informatik-Centrum Dortmund, Joseph-von-Fraunhofer-Str. 20, 44227 Dortmund, Germany 1 on the biological principle of evolution. <p> The algorithms based on this evolution principle are generally called evolutionary algorithms. They are mostly used to solve search and optimization problems. For more general overviews of the field, the reader is referred to <ref> [Fog95, Bac96, Mic96] </ref>. 2.1 Evolutionary Algorithms Evolutionary algorithms work on populations of individuals, each individual representing a point in search space. An individual may occur more than once in a population, i.e., populations are multisets of individuals. <p> As good starting points for further studies on the different types of evolutionary algorithms we recommend <ref> [Bac96, BFM97, Dav91, Fog95, Gol89c, Kin94, Koz92b, Mic96, Mit96, Sch95b] </ref>. Several moderated mailing lists (e.g., GA-List-Request@aic.nrl.navy.mil and EP-List-Request@magenta.me.fau.edu) and newsgroups (such as comp.ai.genetic) allow for keeping track of current events and discussions in the field. Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html.
Reference: [For93] <editor> S. Forrest, editor. </editor> <booktitle> Proceedings of the Fifth International Conference on Genetic Algorithms. </booktitle> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Mateo, CA, </address> <year> 1993. </year>
Reference-contexts: Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html. There are several relevant conferences in the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN [SM91, MM92, DSM94, VERS96] 22 * International Conference on Genetic Algorithms, ICGA <ref> [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] </ref> * IEEE International Conference on Evolutionary Computation, ICEC [IEE94, IEE95, IEE96, IEE97] * Annual Conference on Evolutionary Programming, EP [FA92, FA93, SF94, MRF95, FAB96, ARME97] * Annual Conference on Genetic Programming, GP [KGFR96, KDD + 97] Finally we give an incomplete list of areas
Reference: [FOW66] <author> L. J. Fogel, A. J. Owens, and M. J. Walsh. </author> <title> Artificial Intelligence through Simulated Evolution. </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1966. </year>
Reference-contexts: hope that this paper provides a starting point for researchers in theoretical computer science who are interested in the theory of evolutionary computation. 2 Evolutionary Computation Genetic algorithms form a subclass of evolutionary computation, as is the case for evolution strategies (e.g. [Rec73, Sch77, Rec94, Sch95b, Bac96]), evolutionary programming (e.g. <ref> [FOW66, Fog95] </ref>), classifier systems (e.g. [HHNT86]) and genetic programming (e.g. [Koz92a, Kin94]). Evolutionary computation is a problem solving method, based fl Also affiliated with the Center for Applied Systems Analysis, Informatik-Centrum Dortmund, Joseph-von-Fraunhofer-Str. 20, 44227 Dortmund, Germany 1 on the biological principle of evolution. <p> Traditional genetic algorithms can be viewed as evolutionary algorithms using a (; )-strategy as an environmental selection mechanism. Note that a steady state evolutionary algorithm is in fact a ( + 1)-genetic algorithm: in each step only one child is created. In evolutionary programming (e.g. <ref> [FOW66] </ref>) each parent produces one child, and both parents and offspring are used to create the new population.
Reference: [FRC93] <author> H.-L. Fang, P. Ross, and D. Corne. </author> <title> A promising genetic algorithm approach to job-shop scheduling, rescheduling, and open-shop scheduling problems. </title> <booktitle> In Forrest [For93], </booktitle> <pages> pages 375-382. </pages>
Reference-contexts: Relevant applications to combinatorial problems utilizing another representation of solutions than the binary one may also be found in the domains of scheduling (e.g., production scheduling [Bru93] and related problems <ref> [FRC93] </ref>), routing (e.g. of vehicles [BW93] or telephone calls [CDQ91]), and packing (e.g. of pallets on a truck [Jul93]).
Reference: [GB89] <author> J. J. Grefenstette and J. E. Baker. </author> <title> How genetic algorithms work: A critical look at implicit parallelism. </title> <booktitle> In Schaffer [Sch89], </booktitle> <pages> pages 20-27. </pages>
Reference-contexts: Although some research has been done in order to support or even prove this hypothesis, only empirical results are available (see for a recent empirical result e.g., [WLR97]). Several authors have offered their remarks on Holland's hypothesis. See for instance Grefenstette and Baker <ref> [GB89] </ref> and Back [Bac96], where some remarks on the multi-armed bandit analogy used by Holland are offered.
Reference: [GBW94] <author> V. S. Gordon, A. P. W. Bohm, and L. D. Whitley. </author> <title> A note on the performance of genetic algorithms on zero-one knapsack problems. </title> <editor> In E. Deaton, D. Oppenheim, J. Urban, and H. Berghel, editors, </editor> <booktitle> Proceedings of the 1994 ACM Symposium on Applied Computing, </booktitle> <pages> pages 194-195. </pages> <publisher> ACM Press, </publisher> <address> New York, </address> <year> 1994. </year>
Reference-contexts: Several combinatorial optimization problems with a straightforward binary representation of solutions have been treated successfully with genetic algorithms (e.g., set partitioning and its application to airline crew scheduling [Lev93], knapsack problems <ref> [GBW94, Ols94] </ref>, and others [KBH94]).
Reference: [GF96] <author> D. K. Gehlhaar and D. B. Fogel. </author> <title> Tuning evolutionary programming for conformationally flexible molecular docking. </title> <editor> In Fogel et al. </editor> <booktitle> [FAB96], </booktitle> <pages> pages 419-429. </pages>
Reference-contexts: Some of the most challenging applications with a large profit potential are found in the field of biochemical drug design, where evolutionary algorithms have gained remarkable interest and success in the past few years as an optimization procedure to support protein engineering <ref> [GF96, SK93, UM93, YAY92] </ref>. Also finance and business provide a promising field of profitable applications [WHG95], but of course few details are published about this work (see for example [GT95]).
Reference: [Gol89a] <author> D. E. Goldberg. </author> <title> Genetic algorithms and Walsh functions: Part I, a gentle introduction. </title> <journal> Complex Systems, </journal> <volume> 3(2) </volume> <pages> 129-152, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: Next we give structures based on discrete Fourier analysis as an alternative way to study these distributions. These structures seem to be better suited for calculation, especially for constructed fitness functions. The so-called Walsh products R i (x) (see for example Goldberg <ref> [Gol89a] </ref>, Goldberg [Gol89b] and Floreen and Kok ([FK95]) are defined as follows.
Reference: [Gol89b] <author> D. E. Goldberg. </author> <title> Genetic algorithms and Walsh functions: Part II, deception and its analysis. </title> <journal> Complex Systems, </journal> <volume> 3(2) </volume> <pages> 153-171, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: Next we give structures based on discrete Fourier analysis as an alternative way to study these distributions. These structures seem to be better suited for calculation, especially for constructed fitness functions. The so-called Walsh products R i (x) (see for example Goldberg [Gol89a], Goldberg <ref> [Gol89b] </ref> and Floreen and Kok ([FK95]) are defined as follows.
Reference: [Gol89c] <author> D. E. Goldberg. </author> <title> Genetic Algorithms in Search, Optimization and Machine Learning. </title> <publisher> Addison Wesley, </publisher> <address> Reading, MA, </address> <year> 1989. </year> <month> 27 </month>
Reference-contexts: A genetic algorithm using one-point crossover is called a simple genetic algorithm. Mutation changes each element of a bit string to the opposite value with probability p m (the mutation rate). This mutation rate is usually a very small value assuring mutation to happen rarely <ref> [Hol75, Gol89c] </ref>. 4 The Schema Theorem The first attempt to theoretically analyze the performance of genetic algorithms led to the well-known Schema Theorem by Holland ([Hol75], [Gol89c]). It explains the nature of a genetic algorithm in terms of schemata, and the effect of crossover and mutation on them. <p> This mutation rate is usually a very small value assuring mutation to happen rarely [Hol75, Gol89c]. 4 The Schema Theorem The first attempt to theoretically analyze the performance of genetic algorithms led to the well-known Schema Theorem by Holland ([Hol75], <ref> [Gol89c] </ref>). It explains the nature of a genetic algorithm in terms of schemata, and the effect of crossover and mutation on them. We assume here that the genetic algorithm uses one-point crossover, so we consider simple genetic algorithms. Furthermore the population size assumed finite (and fixed). <p> The short, low-order, above-average schemata, which seem to play an important role in the performance of the genetic algorithm, were named building blocks. The genetic algorithm discovers these building blocks and then repeatedly recombines them in order to produce strings of higher fitness, or in the words of Goldberg <ref> [Gol89c] </ref>: Building Block Hypothesis: A genetic algorithm seeks near optimal performance through the juxtaposition of building blocks. 9 There is a lot of discussion on the value of this hypothesis and whether or not it really explains the true nature of a genetic algorithm. <p> As good starting points for further studies on the different types of evolutionary algorithms we recommend <ref> [Bac96, BFM97, Dav91, Fog95, Gol89c, Kin94, Koz92b, Mic96, Mit96, Sch95b] </ref>. Several moderated mailing lists (e.g., GA-List-Request@aic.nrl.navy.mil and EP-List-Request@magenta.me.fau.edu) and newsgroups (such as comp.ai.genetic) allow for keeping track of current events and discussions in the field. Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html.
Reference: [Goo88] <author> R. Goodman. </author> <title> Introduction to Stochastic Models. </title> <publisher> Benjamin/Cummings Publishing Company, </publisher> <address> Menlo Park, CA, </address> <year> 1988. </year>
Reference-contexts: Moreover, for an absorbing Markov chain as discussed here, the expected time to absorption E i (t) when the process is started in state i can be calculated from the transition matrix as <ref> [Goo88] </ref> E i (t) = j2T where N = (n ij ) = (I Q) 1 and T denotes the set of transient states, i.e., those states having a non-zero outgoing probability.
Reference: [Gre85] <editor> J. J. Grefenstette, editor. </editor> <booktitle> Proceedings of the First International Conference on Genetic Algorithms and Their Applications. </booktitle> <publisher> Lawrence Erlbaum Associates, </publisher> <address> Hillsdale, NJ, </address> <year> 1985. </year>
Reference-contexts: Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html. There are several relevant conferences in the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN [SM91, MM92, DSM94, VERS96] 22 * International Conference on Genetic Algorithms, ICGA <ref> [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] </ref> * IEEE International Conference on Evolutionary Computation, ICEC [IEE94, IEE95, IEE96, IEE97] * Annual Conference on Evolutionary Programming, EP [FA92, FA93, SF94, MRF95, FAB96, ARME97] * Annual Conference on Genetic Programming, GP [KGFR96, KDD + 97] Finally we give an incomplete list of areas
Reference: [Gre87] <editor> J. J. Grefenstette, editor. </editor> <booktitle> Proceedings of the Second International Conference on Genetic Algorithms and Their Applications. </booktitle> <publisher> Lawrence Erlbaum Associates, </publisher> <address> Hillsdale, NJ, </address> <year> 1987. </year>
Reference-contexts: Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html. There are several relevant conferences in the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN [SM91, MM92, DSM94, VERS96] 22 * International Conference on Genetic Algorithms, ICGA <ref> [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] </ref> * IEEE International Conference on Evolutionary Computation, ICEC [IEE94, IEE95, IEE96, IEE97] * Annual Conference on Evolutionary Programming, EP [FA92, FA93, SF94, MRF95, FAB96, ARME97] * Annual Conference on Genetic Programming, GP [KGFR96, KDD + 97] Finally we give an incomplete list of areas
Reference: [GT95] <editor> S. Goonatilake and P. Treleaven, editors. </editor> <title> Intelligent Systems for Finance and Business. </title> <publisher> Wiley, </publisher> <address> Chichester, </address> <year> 1995. </year>
Reference-contexts: Also finance and business provide a promising field of profitable applications [WHG95], but of course few details are published about this work (see for example <ref> [GT95] </ref>). In fact, the relation between evolutionary algorithms and economics has found increasing interest in the past few years and is now widely seen as a promising modeling approach for agents acting in a complex, uncertain situation [Har96]. 23
Reference: [Har61] <author> H. L. Harter. </author> <title> Expected values of normal order statistics. </title> <journal> Biometrika, </journal> <volume> 48(1,2):151-165, </volume> <year> 1961. </year>
Reference-contexts: While in general these values cannot be expressed in closed form (except for E [z : ] and 2 f1; : : : ; 5g), tables of the numerical values can be found e.g. in the work of Harter <ref> [Har61] </ref>, Beyer [Bey94] and Rechenberg [Rec94].
Reference: [Har96] <author> P. G. Harrald. </author> <title> Evolutionary algorithms and economic models: A view. </title> <editor> In Fogel et al. </editor> <booktitle> [FAB96], </booktitle> <pages> pages 3-7. </pages>
Reference-contexts: In fact, the relation between evolutionary algorithms and economics has found increasing interest in the past few years and is now widely seen as a promising modeling approach for agents acting in a complex, uncertain situation <ref> [Har96] </ref>. 23
Reference: [HHNT86] <author> J. H. Holland, K. J. Holyoak, R. E. Nisbett, and P. R. Thagard. </author> <title> Induction: Processes of Inference, Learning, and Discovery. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1986. </year>
Reference-contexts: a starting point for researchers in theoretical computer science who are interested in the theory of evolutionary computation. 2 Evolutionary Computation Genetic algorithms form a subclass of evolutionary computation, as is the case for evolution strategies (e.g. [Rec73, Sch77, Rec94, Sch95b, Bac96]), evolutionary programming (e.g. [FOW66, Fog95]), classifier systems (e.g. <ref> [HHNT86] </ref>) and genetic programming (e.g. [Koz92a, Kin94]). Evolutionary computation is a problem solving method, based fl Also affiliated with the Center for Applied Systems Analysis, Informatik-Centrum Dortmund, Joseph-von-Fraunhofer-Str. 20, 44227 Dortmund, Germany 1 on the biological principle of evolution.
Reference: [Hol75] <author> J. H. Holland. </author> <title> Adaptation in Natural and Artificial Systems. </title> <publisher> The University of Michigan Press, </publisher> <address> Ann Arbor, MI, </address> <year> 1975. </year>
Reference-contexts: A genetic algorithm applies genetic operators on selected individuals in order to improve the multiset, or rather the fitness of its individuals. A standard mating selection mechanism is proportional selection, and standard genetic operators are uniform crossover [Sys89], one-point crossover <ref> [Hol75] </ref> and mutation [Hol75]. After applying the genetic operators, giving new offspring, the offspring replaces the parent population. <p> A genetic algorithm applies genetic operators on selected individuals in order to improve the multiset, or rather the fitness of its individuals. A standard mating selection mechanism is proportional selection, and standard genetic operators are uniform crossover [Sys89], one-point crossover <ref> [Hol75] </ref> and mutation [Hol75]. After applying the genetic operators, giving new offspring, the offspring replaces the parent population. Thus, concerning the environmental selection step, this is a (; )-selection (and therefore the lifetime of individuals equals one) in which the number of offspring is equal to the population size (see also Figure 2). <p> A genetic algorithm using one-point crossover is called a simple genetic algorithm. Mutation changes each element of a bit string to the opposite value with probability p m (the mutation rate). This mutation rate is usually a very small value assuring mutation to happen rarely <ref> [Hol75, Gol89c] </ref>. 4 The Schema Theorem The first attempt to theoretically analyze the performance of genetic algorithms led to the well-known Schema Theorem by Holland ([Hol75], [Gol89c]). It explains the nature of a genetic algorithm in terms of schemata, and the effect of crossover and mutation on them. <p> Holland called this property implicit parallelism. (See Holland <ref> [Hol75] </ref>, and later Bertoni and Dorigo [BD93].) Note that the results in this section are more or less independent of the fitness function f . More knowledge about f should give more information and better results.
Reference: [HW97] <author> R.B. Heckendorn and L.D. Whitley. </author> <title> A Walsh analysis of NK-landscapes. </title> <booktitle> In Back [Bac97], </booktitle> <pages> pages 41-48. </pages>
Reference-contexts: into a f1; 1g-string x 0 , and a Walsh product R i (x) multiplies those elements of x 0 that are in the index set i: R i (x) = (1) jjinxjj : We can use expected values of Walsh products as an alternative way to trace distributions (cf. <ref> [HW97] </ref> for an application of Walsh products to NK-landscapes). The two structures are equivalent in the sense that the expected values of the Walsh products can be derived from a distribution, and the other way around.
Reference: [IEE94] <editor> IEEE. </editor> <booktitle> Proceedings of the First IEEE Conference on Evolutionary Computation, </booktitle> <address> Orlando, FL. </address> <publisher> IEEE Press, </publisher> <address> Piscataway, NJ, </address> <year> 1994. </year>
Reference-contexts: There are several relevant conferences in the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN [SM91, MM92, DSM94, VERS96] 22 * International Conference on Genetic Algorithms, ICGA [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] * IEEE International Conference on Evolutionary Computation, ICEC <ref> [IEE94, IEE95, IEE96, IEE97] </ref> * Annual Conference on Evolutionary Programming, EP [FA92, FA93, SF94, MRF95, FAB96, ARME97] * Annual Conference on Genetic Programming, GP [KGFR96, KDD + 97] Finally we give an incomplete list of areas in which evolutionary computation has been used as a problem solving method.
Reference: [IEE95] <editor> IEEE. </editor> <booktitle> Proceedings of the Second IEEE Conference on Evolutionary Computation, </booktitle> <address> Perth, Australia. </address> <publisher> IEEE Press, </publisher> <address> Piscataway, NJ, </address> <year> 1995. </year>
Reference-contexts: There are several relevant conferences in the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN [SM91, MM92, DSM94, VERS96] 22 * International Conference on Genetic Algorithms, ICGA [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] * IEEE International Conference on Evolutionary Computation, ICEC <ref> [IEE94, IEE95, IEE96, IEE97] </ref> * Annual Conference on Evolutionary Programming, EP [FA92, FA93, SF94, MRF95, FAB96, ARME97] * Annual Conference on Genetic Programming, GP [KGFR96, KDD + 97] Finally we give an incomplete list of areas in which evolutionary computation has been used as a problem solving method.
Reference: [IEE96] <editor> IEEE. </editor> <booktitle> Proceedings of the Third IEEE Conference on Evolutionary Computation, </booktitle> <address> Nagoya, Japan. </address> <publisher> IEEE Press, </publisher> <address> Piscataway, NJ, </address> <year> 1996. </year>
Reference-contexts: There are several relevant conferences in the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN [SM91, MM92, DSM94, VERS96] 22 * International Conference on Genetic Algorithms, ICGA [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] * IEEE International Conference on Evolutionary Computation, ICEC <ref> [IEE94, IEE95, IEE96, IEE97] </ref> * Annual Conference on Evolutionary Programming, EP [FA92, FA93, SF94, MRF95, FAB96, ARME97] * Annual Conference on Genetic Programming, GP [KGFR96, KDD + 97] Finally we give an incomplete list of areas in which evolutionary computation has been used as a problem solving method.
Reference: [IEE97] <editor> IEEE. </editor> <booktitle> Proceedings of the Fourth IEEE Conference on Evolutionary Computation, Indianapolis, IN. </booktitle> <publisher> IEEE Press, </publisher> <address> Piscataway, NJ, </address> <year> 1997. </year>
Reference-contexts: There are several relevant conferences in the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN [SM91, MM92, DSM94, VERS96] 22 * International Conference on Genetic Algorithms, ICGA [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] * IEEE International Conference on Evolutionary Computation, ICEC <ref> [IEE94, IEE95, IEE96, IEE97] </ref> * Annual Conference on Evolutionary Programming, EP [FA92, FA93, SF94, MRF95, FAB96, ARME97] * Annual Conference on Genetic Programming, GP [KGFR96, KDD + 97] Finally we give an incomplete list of areas in which evolutionary computation has been used as a problem solving method.
Reference: [Jon75] <author> K. A. De Jong. </author> <title> An analysis of the behaviour of a class of genetic adaptive systems. </title> <type> PhD thesis, </type> <institution> University of Michigan, </institution> <year> 1975. </year> <note> Diss. Abstr. Int. 36(10), 5140B, University Microfilms No. 76-9381. </note>
Reference: [Jul93] <author> K. Juliff. </author> <title> A multi-chromosome genetic algorithm for pallet loading. </title> <booktitle> In Forrest [For93], </booktitle> <pages> pages 467-473. 28 </pages>
Reference-contexts: Relevant applications to combinatorial problems utilizing another representation of solutions than the binary one may also be found in the domains of scheduling (e.g., production scheduling [Bru93] and related problems [FRC93]), routing (e.g. of vehicles [BW93] or telephone calls [CDQ91]), and packing (e.g. of pallets on a truck <ref> [Jul93] </ref>).
Reference: [KBH94] <author> S. Khuri, Th. Back, and J. Heitkotter. </author> <title> An evolutionary approach to com-binatorial optimization problems. </title> <editor> In D. Cizmar, editor, </editor> <booktitle> Proceedings of the 22nd Annual ACM Computer Science Conference, </booktitle> <pages> pages 66-73. </pages> <publisher> ACM Press, </publisher> <address> New York, </address> <year> 1994. </year>
Reference-contexts: Several combinatorial optimization problems with a straightforward binary representation of solutions have been treated successfully with genetic algorithms (e.g., set partitioning and its application to airline crew scheduling [Lev93], knapsack problems [GBW94, Ols94], and others <ref> [KBH94] </ref>). Relevant applications to combinatorial problems utilizing another representation of solutions than the binary one may also be found in the domains of scheduling (e.g., production scheduling [Bru93] and related problems [FRC93]), routing (e.g. of vehicles [BW93] or telephone calls [CDQ91]), and packing (e.g. of pallets on a truck [Jul93]).
Reference: [KDD + 97] <editor> J. R. Koza, K. Deb, M. Dorigo, D. B. Fogel, M. Garzon, H. Iba, and R. L. Riolo, editors. </editor> <booktitle> Genetic Programming 1997. Proceedings of the Second Annual Conference. </booktitle> <publisher> Morgan Kaufmann, </publisher> <address> San Francisco, CA, </address> <year> 1997. </year>
Reference-contexts: MM92, DSM94, VERS96] 22 * International Conference on Genetic Algorithms, ICGA [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] * IEEE International Conference on Evolutionary Computation, ICEC [IEE94, IEE95, IEE96, IEE97] * Annual Conference on Evolutionary Programming, EP [FA92, FA93, SF94, MRF95, FAB96, ARME97] * Annual Conference on Genetic Programming, GP <ref> [KGFR96, KDD + 97] </ref> Finally we give an incomplete list of areas in which evolutionary computation has been used as a problem solving method.
Reference: [KGFR96] <editor> J. R. Koza, D. E. Goldberg, D. B. Fogel, and R. L. Riolo, editors. </editor> <booktitle> Genetic Programming 1996. Proceedings of the First Annual Conference. </booktitle> <publisher> The MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1996. </year>
Reference-contexts: MM92, DSM94, VERS96] 22 * International Conference on Genetic Algorithms, ICGA [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] * IEEE International Conference on Evolutionary Computation, ICEC [IEE94, IEE95, IEE96, IEE97] * Annual Conference on Evolutionary Programming, EP [FA92, FA93, SF94, MRF95, FAB96, ARME97] * Annual Conference on Genetic Programming, GP <ref> [KGFR96, KDD + 97] </ref> Finally we give an incomplete list of areas in which evolutionary computation has been used as a problem solving method.
Reference: [Kin94] <editor> K. E. Kinnear, editor. </editor> <booktitle> Advances in Genetic Programming. </booktitle> <publisher> The MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1994. </year>
Reference-contexts: in theoretical computer science who are interested in the theory of evolutionary computation. 2 Evolutionary Computation Genetic algorithms form a subclass of evolutionary computation, as is the case for evolution strategies (e.g. [Rec73, Sch77, Rec94, Sch95b, Bac96]), evolutionary programming (e.g. [FOW66, Fog95]), classifier systems (e.g. [HHNT86]) and genetic programming (e.g. <ref> [Koz92a, Kin94] </ref>). Evolutionary computation is a problem solving method, based fl Also affiliated with the Center for Applied Systems Analysis, Informatik-Centrum Dortmund, Joseph-von-Fraunhofer-Str. 20, 44227 Dortmund, Germany 1 on the biological principle of evolution. The algorithms based on this evolution principle are generally called evolutionary algorithms. <p> As good starting points for further studies on the different types of evolutionary algorithms we recommend <ref> [Bac96, BFM97, Dav91, Fog95, Gol89c, Kin94, Koz92b, Mic96, Mit96, Sch95b] </ref>. Several moderated mailing lists (e.g., GA-List-Request@aic.nrl.navy.mil and EP-List-Request@magenta.me.fau.edu) and newsgroups (such as comp.ai.genetic) allow for keeping track of current events and discussions in the field. Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html.
Reference: [KKF97] <author> W.A. Kosters, J.N. Kok, and P. Floreen. </author> <title> Fourier analysis of genetic algorithms. </title> <type> Preprint, </type> <institution> Leiden University, </institution> <year> 1997. </year>
Reference-contexts: One can go one step further, and use a more general framework, see Kok, Kosters and Floreen <ref> [KKF97] </ref>. We start with the introduction of the basic functions. For a 2 C and subsets i and x of a finite universe U define G a;i (x) = a jjinxjj : Walsh products are obtained when a = 1. <p> For uniform crossover we get, using Equation (3): E 0 [G a;i ] = (1=2) jjijj X ji An analogous result holds for one-point crossover. In Kosters, Kok and Floreen <ref> [KKF97] </ref> these formulas are used to compute and visualize the expected fitness of the population and its standard deviation for special choices of f .
Reference: [Koz92a] <editor> J. R. Koza. </editor> <booktitle> Genetic Programming. </booktitle> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: in theoretical computer science who are interested in the theory of evolutionary computation. 2 Evolutionary Computation Genetic algorithms form a subclass of evolutionary computation, as is the case for evolution strategies (e.g. [Rec73, Sch77, Rec94, Sch95b, Bac96]), evolutionary programming (e.g. [FOW66, Fog95]), classifier systems (e.g. [HHNT86]) and genetic programming (e.g. <ref> [Koz92a, Kin94] </ref>). Evolutionary computation is a problem solving method, based fl Also affiliated with the Center for Applied Systems Analysis, Informatik-Centrum Dortmund, Joseph-von-Fraunhofer-Str. 20, 44227 Dortmund, Germany 1 on the biological principle of evolution. The algorithms based on this evolution principle are generally called evolutionary algorithms.
Reference: [Koz92b] <author> J. R. Koza. </author> <title> Genetic Programming: On the Programming of Computers by Means of Natural Selection. Complex Adaptive Systems. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1992. </year>
Reference-contexts: As good starting points for further studies on the different types of evolutionary algorithms we recommend <ref> [Bac96, BFM97, Dav91, Fog95, Gol89c, Kin94, Koz92b, Mic96, Mit96, Sch95b] </ref>. Several moderated mailing lists (e.g., GA-List-Request@aic.nrl.navy.mil and EP-List-Request@magenta.me.fau.edu) and newsgroups (such as comp.ai.genetic) allow for keeping track of current events and discussions in the field. Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html.
Reference: [Lev93] <author> D. M. Levine. </author> <title> A genetic algorithm for the set partitioning problem. </title> <booktitle> In Forrest [For93], </booktitle> <pages> pages 481-487. </pages>
Reference-contexts: Several combinatorial optimization problems with a straightforward binary representation of solutions have been treated successfully with genetic algorithms (e.g., set partitioning and its application to airline crew scheduling <ref> [Lev93] </ref>, knapsack problems [GBW94, Ols94], and others [KBH94]).
Reference: [LV91] <author> G. E. Liepins and M. D. Vose. </author> <title> Polynomials, basis sets, and deceptiveness in genetic algorithms. </title> <journal> Complex Systems, </journal> <volume> 5 </volume> <pages> 45-61, </pages> <year> 1991. </year>
Reference-contexts: In recent years more analytic results have been given to explain the performance of genetic algorithms and (more general) of evolutionary algorithms, without the use of schemata. An overview of some of the new approaches is given in the sequel. 5 Probabilities and Fourier Analysis Following Liepins and Vose <ref> [LV91] </ref>, we consider infinite populations, i.e., we view a population as a probability distribution and we study the way in which such a distribution changes under the genetic operators. <p> Using the usual binary representation it is also possible to view bit strings as integers. First we consider how the distribution changes under the application of the operators. From the definitions of the operators we obtain the following formulae corresponding to the Vose and Liepins model <ref> [LV91] </ref>. For proportional selection, the probability of a bit string is weighted proportional to its fitness. For example, if the fitness of a bit string is twice as good as the average, proportional selection results in doubling the probability. <p> If we consider the simple genetic algorithm (proportional selection followed by one-point crossover and mutation), then we can combine the definitions into a transition matrix. This matrix has a number of interesting symmetries and it is possible to numerically trace the probabilities (see Liepins and Vose <ref> [LV91] </ref> and Whitley [Whi92]). Next we give structures based on discrete Fourier analysis as an alternative way to study these distributions. These structures seem to be better suited for calculation, especially for constructed fitness functions.
Reference: [MAPP92] <author> J. R. McDonnell, B. L. Anderson, W. C. Page, and F. G. Pin. </author> <title> Mobile manipulator configuration optimization using evolutionary programming. </title> <booktitle> In Fogel and Atmar [FA92], </booktitle> <pages> pages 52-62. </pages>
Reference-contexts: Other important practical problem classes where evolutionary algorithms yield solutions of high quality include engineering design applications, e.g., for the design of aircraft [BB91b, PSS + 95], structural mechanics problems [Sch95a], electromagnetic systems [MW95], mobile manipulators <ref> [AMP92, MAPP92] </ref>, the design of a linear col-lider [Bey92], nuclear reactor fuel arrangement optimization [BHKZ96], multiplierless digital filter optimization [SE93], the design of survivable networks [DOCQ93] and optical multilayer systems [SS96].
Reference: [MG96] <author> B. L. Miller and D. E. Goldberg. </author> <title> Genetic algorithms, selection schemes, and the varying effects of noise. </title> <journal> Evolutionary Computation, </journal> <volume> 4(2) </volume> <pages> 113-132, </pages> <year> 1996. </year>
Reference-contexts: In typical investigations of the convergence velocity of canonical genetic algorithms, fitness values are assumed to be normally distributed with expectation E [f ] = 1 i=1 f i and standard deviation , i.e., f i ~ N (E [f ]; ) ; cf. <ref> [MSV93, Bac95, MG96] </ref>. Miller and Goldberg offer the remark that "In practice, this is true or approximately true for many domains because recombination and mutation operators have a normalizing effect on the population fitness distribution" ([MG96], p. 115). <p> Depending on the parameters of the selection method, the exact values of I are known to be I ; = i=+1 for (,)-selection [Bac95], I q = E [z q:q ] for tournament selection with tournament size q <ref> [Bac95, MG96] </ref>, I + = ( + 1) E [z 2:2 ] for linear ranking with a maximum expected number + of copies of the best individual [MG96], and t 19 for proportional selection [MSV93]. The reader should also consult [BT96] and [MG96] for an overview of selection schemes. <p> to be I ; = i=+1 for (,)-selection [Bac95], I q = E [z q:q ] for tournament selection with tournament size q [Bac95, MG96], I + = ( + 1) E [z 2:2 ] for linear ranking with a maximum expected number + of copies of the best individual <ref> [MG96] </ref>, and t 19 for proportional selection [MSV93]. The reader should also consult [BT96] and [MG96] for an overview of selection schemes. <p> ] for tournament selection with tournament size q [Bac95, MG96], I + = ( + 1) E [z 2:2 ] for linear ranking with a maximum expected number + of copies of the best individual <ref> [MG96] </ref>, and t 19 for proportional selection [MSV93]. The reader should also consult [BT96] and [MG96] for an overview of selection schemes.
Reference: [Mic96] <author> Z. Michalewicz. </author> <title> Genetic Algorithms + Data Structures = Evolution Programs. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1996. </year>
Reference-contexts: The algorithms based on this evolution principle are generally called evolutionary algorithms. They are mostly used to solve search and optimization problems. For more general overviews of the field, the reader is referred to <ref> [Fog95, Bac96, Mic96] </ref>. 2.1 Evolutionary Algorithms Evolutionary algorithms work on populations of individuals, each individual representing a point in search space. An individual may occur more than once in a population, i.e., populations are multisets of individuals. <p> As good starting points for further studies on the different types of evolutionary algorithms we recommend <ref> [Bac96, BFM97, Dav91, Fog95, Gol89c, Kin94, Koz92b, Mic96, Mit96, Sch95b] </ref>. Several moderated mailing lists (e.g., GA-List-Request@aic.nrl.navy.mil and EP-List-Request@magenta.me.fau.edu) and newsgroups (such as comp.ai.genetic) allow for keeping track of current events and discussions in the field. Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html.
Reference: [Mit96] <author> M. Mitchell. </author> <title> An Introduction to Genetic Algorithms. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1996. </year>
Reference-contexts: As good starting points for further studies on the different types of evolutionary algorithms we recommend <ref> [Bac96, BFM97, Dav91, Fog95, Gol89c, Kin94, Koz92b, Mic96, Mit96, Sch95b] </ref>. Several moderated mailing lists (e.g., GA-List-Request@aic.nrl.navy.mil and EP-List-Request@magenta.me.fau.edu) and newsgroups (such as comp.ai.genetic) allow for keeping track of current events and discussions in the field. Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html.
Reference: [MM92] <editor> R. Manner and B. Manderick, editors. </editor> <title> Parallel Problem Solving from Nature 2. </title> <publisher> Elsevier, </publisher> <address> Amsterdam, </address> <year> 1992. </year> <month> 29 </month>
Reference-contexts: Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html. There are several relevant conferences in the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN <ref> [SM91, MM92, DSM94, VERS96] </ref> 22 * International Conference on Genetic Algorithms, ICGA [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] * IEEE International Conference on Evolutionary Computation, ICEC [IEE94, IEE95, IEE96, IEE97] * Annual Conference on Evolutionary Programming, EP [FA92, FA93, SF94, MRF95, FAB96, ARME97] * Annual Conference on Genetic Programming, GP
Reference: [MRF95] <editor> J. R. McDonnell, R. G. Reynolds, and D. B. Fogel, editors. </editor> <booktitle> Proceedings of the Fourth Annual Conference on Evolutionary Programming. </booktitle> <publisher> The MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1995. </year>
Reference-contexts: the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN [SM91, MM92, DSM94, VERS96] 22 * International Conference on Genetic Algorithms, ICGA [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] * IEEE International Conference on Evolutionary Computation, ICEC [IEE94, IEE95, IEE96, IEE97] * Annual Conference on Evolutionary Programming, EP <ref> [FA92, FA93, SF94, MRF95, FAB96, ARME97] </ref> * Annual Conference on Genetic Programming, GP [KGFR96, KDD + 97] Finally we give an incomplete list of areas in which evolutionary computation has been used as a problem solving method.
Reference: [MSV93] <author> H. Muhlenbein and D. Schlierkamp-Voosen. </author> <title> Predictive models for the breeder genetic algorithm. </title> <journal> Evolutionary Computation, </journal> <volume> 1(1) </volume> <pages> 25-49, </pages> <year> 1993. </year>
Reference-contexts: In typical investigations of the convergence velocity of canonical genetic algorithms, fitness values are assumed to be normally distributed with expectation E [f ] = 1 i=1 f i and standard deviation , i.e., f i ~ N (E [f ]; ) ; cf. <ref> [MSV93, Bac95, MG96] </ref>. Miller and Goldberg offer the remark that "In practice, this is true or approximately true for many domains because recombination and mutation operators have a normalizing effect on the population fitness distribution" ([MG96], p. 115). <p> its validity later on), the selection differential (given a selection mechanism) is defined 18 as the difference between the average fitness of the population E [f ] and the average fitness of the selected individuals E [f ] sel , i.e., S := E [f ] sel E [f ] <ref> [MSV93] </ref>. <p> Assuming in the following that the objective function is the simple bit-counting ("counting ones") problem, that the crossover operator is uniform crossover, and that mutation is not used, it can be shown that b t = 1, such that the convergence velocity ' = S t <ref> [MSV93, Rud96] </ref>. Moreover, several selection methods such as (,)-selection [MSV93, Bac95], tournament selection [Bac95, BT95b], linear ranking selection [BT95a] and proportional selection [TG94] have been analyzed in the past for the assumption of normally distributed fitness values. <p> Moreover, several selection methods such as (,)-selection <ref> [MSV93, Bac95] </ref>, tournament selection [Bac95, BT95b], linear ranking selection [BT95a] and proportional selection [TG94] have been analyzed in the past for the assumption of normally distributed fitness values. <p> (,)-selection [Bac95], I q = E [z q:q ] for tournament selection with tournament size q [Bac95, MG96], I + = ( + 1) E [z 2:2 ] for linear ranking with a maximum expected number + of copies of the best individual [MG96], and t 19 for proportional selection <ref> [MSV93] </ref>. The reader should also consult [BT96] and [MG96] for an overview of selection schemes. <p> I np t (1 p t ) : By making the implicit assumption that the fitness value of the generated offspring individuals are again binomially distributed (i.e., asymptotically normal, which is the precondition for using normal order statistics to characterize the selection intensity of the selection operator), Muhlenbein and Schlierkamp-Voosen <ref> [MSV93] </ref> as well as Thierens and Goldberg [TG94] proceed by setting E [f ] t+1 = n p t+1 , leading to p t+1 p t = p p t (1 p t ) ; which is further approximated by the differential equation dp t = p p t (1 p <p> The solution of Equation (8) is given by <ref> [MSV93] </ref> p t = 2 1 + sin I n t + arcsin (2p 0 1) !! for (,)-selection, tournament selection, and linear ranking selection. <p> The corresponding experiments can be found in <ref> [MSV93, TG94, Bac95] </ref>.
Reference: [Muh92] <author> H. Muhlenbein. </author> <title> How genetic algorithms really work: I. mutation and hill-climbing. </title> <booktitle> In Manner and Manderick [MM92], </booktitle> <pages> pages 15-25. </pages>
Reference-contexts: Here we consider an elitist (1 + 1)-GA, where the child is generated by a mutation that toggles every bit (out of n) with probability p. Rudolph's treatment of the counting ones problem, following Back [Bac92] and Muhlenbein <ref> [Muh92] </ref>, starts from the following observation: the probability to make a transition from a state with precisely i ones to a state with precisely j ones (0 i &lt; j n) equals p ji (1 p) n (ji) k=0 i ! k + j i (p=(1 p)) 2k : (5) This
Reference: [MW95] <author> E. Michielssen and D. S. Weile. </author> <title> Electromagnetic system design using genetic algorithms. </title> <editor> In Winter et al. [WPGC95], </editor> <volume> chapter 18, </volume> <pages> pages 345-369. </pages>
Reference-contexts: Other important practical problem classes where evolutionary algorithms yield solutions of high quality include engineering design applications, e.g., for the design of aircraft [BB91b, PSS + 95], structural mechanics problems [Sch95a], electromagnetic systems <ref> [MW95] </ref>, mobile manipulators [AMP92, MAPP92], the design of a linear col-lider [Bey92], nuclear reactor fuel arrangement optimization [BHKZ96], multiplierless digital filter optimization [SE93], the design of survivable networks [DOCQ93] and optical multilayer systems [SS96].
Reference: [NV92] <author> A. Nix and M. D. Vose. </author> <title> Modeling genetic algorithms with markov chains. </title> <journal> Annals of Mathematics and Artificial Intelligence, </journal> <volume> 5 </volume> <pages> 79-88, </pages> <year> 1992. </year>
Reference-contexts: There is a relationship between the deterministic path of the distributions and models of genetic algorithms with finite population size motivating the tracing of distributions (Nix and Vose <ref> [NV92] </ref>, Vose [Vos92], Whitley [Whi92]). Using special functions (e.g., Walsh products) and Fourier analysis it is possible to give a detailed analysis of this evolving distribution. Instead of experimenting with just a few populations this theory enables us to follow the full evolution of the distribution.
Reference: [Ols94] <author> A. Olsen. </author> <title> Penalty functions and the knapsack problem. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation, </booktitle> <pages> pages 554-558. </pages> <publisher> IEEE Press, </publisher> <year> 1994. </year>
Reference-contexts: Several combinatorial optimization problems with a straightforward binary representation of solutions have been treated successfully with genetic algorithms (e.g., set partitioning and its application to airline crew scheduling [Lev93], knapsack problems <ref> [GBW94, Ols94] </ref>, and others [KBH94]).
Reference: [PSS + 95] <author> J. Periaux, M. Sefrioui, B. Stou*et, B. Mantel, and E. </author> <title> Laporte. Robust genetic algorithms for optimization problems in aerodynamic design. </title> <editor> In Winter et al. [WPGC95], </editor> <volume> chapter 19, </volume> <pages> pages 371-396. </pages>
Reference-contexts: Other important practical problem classes where evolutionary algorithms yield solutions of high quality include engineering design applications, e.g., for the design of aircraft <ref> [BB91b, PSS + 95] </ref>, structural mechanics problems [Sch95a], electromagnetic systems [MW95], mobile manipulators [AMP92, MAPP92], the design of a linear col-lider [Bey92], nuclear reactor fuel arrangement optimization [BHKZ96], multiplierless digital filter optimization [SE93], the design of survivable networks [DOCQ93] and optical multilayer systems [SS96].
Reference: [Rad94] <author> N. J. Radcliffe. </author> <title> The algebra of genetic algorithms. </title> <journal> Annals of Maths and Artificial Intelligence, </journal> <volume> 10 </volume> <pages> 339-384, </pages> <year> 1994. </year>
Reference-contexts: See for instance Grefenstette and Baker [GB89] and Back [Bac96], where some remarks on the multi-armed bandit analogy used by Holland are offered. Note that the hypothesis implies that the coding of the problem at hand is very important and should stimulate the formation of building blocks. (See <ref> [Rad94, RS95] </ref> for a discussion of more general representations and the corresponding generalizations of schema theory.) A further possible|and sometimes criticized|explanation of the reason why genetic algorithms perform well was given by Holland when he showed that in a population of individuals there are at least 3 schemata being processed usefully,
Reference: [Rec73] <author> I. Rechenberg. </author> <title> Evolutionsstrategie: Optimierung technischer Systeme nach Prinzipien der biologischen Evolution. </title> <address> Frommann-Holzboog, Stuttgart, </address> <year> 1973. </year>
Reference-contexts: We hope that this paper provides a starting point for researchers in theoretical computer science who are interested in the theory of evolutionary computation. 2 Evolutionary Computation Genetic algorithms form a subclass of evolutionary computation, as is the case for evolution strategies (e.g. <ref> [Rec73, Sch77, Rec94, Sch95b, Bac96] </ref>), evolutionary programming (e.g. [FOW66, Fog95]), classifier systems (e.g. [HHNT86]) and genetic programming (e.g. [Koz92a, Kin94]).
Reference: [Rec94] <editor> I. Rechenberg. </editor> <booktitle> Evolutionsstrategie '94, volume 1 of Werkstatt Bionik und Evolutionstechnik. </booktitle> <address> Frommann-Holzboog, Stuttgart, </address> <year> 1994. </year>
Reference-contexts: We hope that this paper provides a starting point for researchers in theoretical computer science who are interested in the theory of evolutionary computation. 2 Evolutionary Computation Genetic algorithms form a subclass of evolutionary computation, as is the case for evolution strategies (e.g. <ref> [Rec73, Sch77, Rec94, Sch95b, Bac96] </ref>), evolutionary programming (e.g. [FOW66, Fog95]), classifier systems (e.g. [HHNT86]) and genetic programming (e.g. [Koz92a, Kin94]). <p> The first possibility will be called (; )-selection (with ) and the second possibility ( + )-selection. The (; ) and ( + ) notation is inspired by the usual notions from the theory of evolution strategies 1 (see e.g. <ref> [BS93, Rec94, Sch95b, BHS97] </ref>). Then to these resp. + candidates a selection mechanism is applied in order to obtain the new population with members. The age of the surviving members from the old population is increased by one, and the offspring start with age zero. <p> While in general these values cannot be expressed in closed form (except for E [z : ] and 2 f1; : : : ; 5g), tables of the numerical values can be found e.g. in the work of Harter [Har61], Beyer [Bey94] and Rechenberg <ref> [Rec94] </ref>. In typical investigations of the convergence velocity of canonical genetic algorithms, fitness values are assumed to be normally distributed with expectation E [f ] = 1 i=1 f i and standard deviation , i.e., f i ~ N (E [f ]; ) ; cf. [MSV93, Bac95, MG96].
Reference: [RS95] <author> N. J. Radcliffe and P. D. Surry. </author> <title> Fitness variance of formae and performance prediction. </title> <editor> In M. D. Vose L. D. Whitley, editor, </editor> <booktitle> Foundations of Genetic Algorithms 3, </booktitle> <pages> pages 51-72. </pages> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Francisco, CA, </address> <year> 1995. </year>
Reference-contexts: See for instance Grefenstette and Baker [GB89] and Back [Bac96], where some remarks on the multi-armed bandit analogy used by Holland are offered. Note that the hypothesis implies that the coding of the problem at hand is very important and should stimulate the formation of building blocks. (See <ref> [Rad94, RS95] </ref> for a discussion of more general representations and the corresponding generalizations of schema theory.) A further possible|and sometimes criticized|explanation of the reason why genetic algorithms perform well was given by Holland when he showed that in a population of individuals there are at least 3 schemata being processed usefully,
Reference: [Rud96] <author> G. Rudolph. </author> <title> Convergence Properties of Evolutionary Algorithms. </title> <type> PhD Thesis, </type> <institution> University of Dortmund, </institution> <year> 1996. </year>
Reference-contexts: Note that the value of a can be chosen in order to facilitate calculations. 6 Markov chains and convergence In this section we will examine convergence and absorption time of genetic algorithms. Before discussing more general results involving Markov chains, such as those presented in <ref> [Rud96] </ref>, we try to give an intuitive feeling for the problem. We do so by providing a somewhat informal proof of a convergence result for a simple genetic algorithm. Suppose we have a genetic algorithm, operating on a finite set of populations. <p> As a second example, if the mutation rate changes in time, the homogeneity is obstructed. The theory of Markov chains and evolutionary algorithms is extensively studied in <ref> [Rud96] </ref>. Here we shall only present the results in a simpler context. The main ideas are however already present in the first proof of this section. As an example we state Theorem 5.2 from [Rud96] corresponding to one of the situations mentioned above: Theorem: Let (X (t) ) be a homogeneous <p> The theory of Markov chains and evolutionary algorithms is extensively studied in <ref> [Rud96] </ref>. Here we shall only present the results in a simpler context. The main ideas are however already present in the first proof of this section. As an example we state Theorem 5.2 from [Rud96] corresponding to one of the situations mentioned above: Theorem: Let (X (t) ) be a homogeneous finite Markov chain generated by some elitist evolutionary algorithm. <p> Elementary linear algebra shows that these are precisely the functions from f0; 1g n to R that are obtained by applying a linear mapping followed by a translation. A more general class is that of the unimodal functions. These are functions that have exactly one global minimum. In <ref> [Rud96] </ref> the unimodal function f : f0; 1g n ! R with f (x) = n i=1 j=1 17 is examined; a string starting with many ones has a low fitness value. <p> Assuming in the following that the objective function is the simple bit-counting ("counting ones") problem, that the crossover operator is uniform crossover, and that mutation is not used, it can be shown that b t = 1, such that the convergence velocity ' = S t <ref> [MSV93, Rud96] </ref>. Moreover, several selection methods such as (,)-selection [MSV93, Bac95], tournament selection [Bac95, BT95b], linear ranking selection [BT95a] and proportional selection [TG94] have been analyzed in the past for the assumption of normally distributed fitness values. <p> : (8) As pointed out by Rudolph, however, the binomial distribution assumption for offspring individuals only holds at early generations and for large n and and will be destroyed by sampling errors, such that the assumption E [f ] t+1 = n p t+1 only holds for infinite population size <ref> [Rud96] </ref>. The solution of Equation (8) is given by [MSV93] p t = 2 1 + sin I n t + arcsin (2p 0 1) !! for (,)-selection, tournament selection, and linear ranking selection. <p> of an infinite number of solutions t fl C = (2n + 1) t C (n = 0; 1; 2; : : :), however, giving a clear indication that the oscillating behavior reflected by Equation (11) can hardly provide a completely correct prediction of the behavior of a genetic algorithm <ref> [Rud96] </ref>. 3. Equation (12) fails to yield a finite solution, but Thierens and Goldberg solve this problem by setting p t C = 1 " with an arbitrarily small ", resulting in t C = n ln (2") [TG94].
Reference: [Sch77] <author> H.-P. Schwefel. </author> <title> Numerische Optimierung von Computer-Modellen mittels der Evolutionsstrategie, </title> <booktitle> volume 26 of Interdisciplinary Systems Research. </booktitle> <publisher> Birkhauser, </publisher> <address> Basel, </address> <year> 1977. </year>
Reference-contexts: We hope that this paper provides a starting point for researchers in theoretical computer science who are interested in the theory of evolutionary computation. 2 Evolutionary Computation Genetic algorithms form a subclass of evolutionary computation, as is the case for evolution strategies (e.g. <ref> [Rec73, Sch77, Rec94, Sch95b, Bac96] </ref>), evolutionary programming (e.g. [FOW66, Fog95]), classifier systems (e.g. [HHNT86]) and genetic programming (e.g. [Koz92a, Kin94]).
Reference: [Sch81] <author> H.-P. Schwefel. </author> <title> Numerical Optimization of Computer Models. </title> <publisher> Wiley, </publisher> <address> Chichester, </address> <year> 1981. </year> <month> 30 </month>
Reference: [Sch89] <editor> J. D. Schaffer, editor. </editor> <booktitle> Proceedings of the Third International Conference on Genetic Algorithms. </booktitle> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Mateo, CA, </address> <year> 1989. </year>
Reference-contexts: Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html. There are several relevant conferences in the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN [SM91, MM92, DSM94, VERS96] 22 * International Conference on Genetic Algorithms, ICGA <ref> [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] </ref> * IEEE International Conference on Evolutionary Computation, ICEC [IEE94, IEE95, IEE96, IEE97] * Annual Conference on Evolutionary Programming, EP [FA92, FA93, SF94, MRF95, FAB96, ARME97] * Annual Conference on Genetic Programming, GP [KGFR96, KDD + 97] Finally we give an incomplete list of areas
Reference: [Sch95a] <author> M. Schoenauer. </author> <title> Shape representations for evolutionary optimization and identification in structural mechanics. </title> <editor> In Winter et al. [WPGC95], </editor> <volume> chapter 22, </volume> <pages> pages 443-463. </pages>
Reference-contexts: Other important practical problem classes where evolutionary algorithms yield solutions of high quality include engineering design applications, e.g., for the design of aircraft [BB91b, PSS + 95], structural mechanics problems <ref> [Sch95a] </ref>, electromagnetic systems [MW95], mobile manipulators [AMP92, MAPP92], the design of a linear col-lider [Bey92], nuclear reactor fuel arrangement optimization [BHKZ96], multiplierless digital filter optimization [SE93], the design of survivable networks [DOCQ93] and optical multilayer systems [SS96].
Reference: [Sch95b] <author> H.-P. Schwefel. </author> <title> Evolution and Optimum Seeking. </title> <booktitle> Sixth-Generation Computer Technology Series. </booktitle> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1995. </year>
Reference-contexts: We hope that this paper provides a starting point for researchers in theoretical computer science who are interested in the theory of evolutionary computation. 2 Evolutionary Computation Genetic algorithms form a subclass of evolutionary computation, as is the case for evolution strategies (e.g. <ref> [Rec73, Sch77, Rec94, Sch95b, Bac96] </ref>), evolutionary programming (e.g. [FOW66, Fog95]), classifier systems (e.g. [HHNT86]) and genetic programming (e.g. [Koz92a, Kin94]). <p> The first possibility will be called (; )-selection (with ) and the second possibility ( + )-selection. The (; ) and ( + ) notation is inspired by the usual notions from the theory of evolution strategies 1 (see e.g. <ref> [BS93, Rec94, Sch95b, BHS97] </ref>). Then to these resp. + candidates a selection mechanism is applied in order to obtain the new population with members. The age of the surviving members from the old population is increased by one, and the offspring start with age zero. <p> As good starting points for further studies on the different types of evolutionary algorithms we recommend <ref> [Bac96, BFM97, Dav91, Fog95, Gol89c, Kin94, Koz92b, Mic96, Mit96, Sch95b] </ref>. Several moderated mailing lists (e.g., GA-List-Request@aic.nrl.navy.mil and EP-List-Request@magenta.me.fau.edu) and newsgroups (such as comp.ai.genetic) allow for keeping track of current events and discussions in the field. Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html.
Reference: [SE93] <editor> J. D. Schaffer and L. J. Eshelman. </editor> <title> Designing multiplierless digital filters using genetic algorithms. </title> <booktitle> In Forrest [For93], </booktitle> <pages> pages 439-444. </pages>
Reference-contexts: where evolutionary algorithms yield solutions of high quality include engineering design applications, e.g., for the design of aircraft [BB91b, PSS + 95], structural mechanics problems [Sch95a], electromagnetic systems [MW95], mobile manipulators [AMP92, MAPP92], the design of a linear col-lider [Bey92], nuclear reactor fuel arrangement optimization [BHKZ96], multiplierless digital filter optimization <ref> [SE93] </ref>, the design of survivable networks [DOCQ93] and optical multilayer systems [SS96]. These applications provide a nice view on the possible representations of individuals that can be used for different kinds of problems.
Reference: [SF94] <editor> A. V. Sebald and L. J. Fogel, editors. </editor> <booktitle> Proceedings of the Third Annual Conference on Evolutionary Programming. World Scientific, </booktitle> <address> Singapore, </address> <year> 1994. </year>
Reference-contexts: the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN [SM91, MM92, DSM94, VERS96] 22 * International Conference on Genetic Algorithms, ICGA [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] * IEEE International Conference on Evolutionary Computation, ICEC [IEE94, IEE95, IEE96, IEE97] * Annual Conference on Evolutionary Programming, EP <ref> [FA92, FA93, SF94, MRF95, FAB96, ARME97] </ref> * Annual Conference on Genetic Programming, GP [KGFR96, KDD + 97] Finally we give an incomplete list of areas in which evolutionary computation has been used as a problem solving method.
Reference: [SK93] <author> S. Schulze-Kremer. </author> <title> Genetic algorithms for protein ternary structure prediction. </title> <editor> In J. Stender, editor, </editor> <booktitle> Parallel Genetic Algorithms: Theory & Applications, Frontiers in Artificial Intelligence and Applications, </booktitle> <pages> pages 129-150. </pages> <publisher> IOS Press, </publisher> <address> Amsterdam, </address> <year> 1993. </year>
Reference-contexts: Some of the most challenging applications with a large profit potential are found in the field of biochemical drug design, where evolutionary algorithms have gained remarkable interest and success in the past few years as an optimization procedure to support protein engineering <ref> [GF96, SK93, UM93, YAY92] </ref>. Also finance and business provide a promising field of profitable applications [WHG95], but of course few details are published about this work (see for example [GT95]).
Reference: [SM91] <editor> H.-P. Schwefel and R. Manner, editors. </editor> <booktitle> Parallel Problem Solving from Nature | Proceedings 1st Workshop PPSN I, volume 496 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1991. </year>
Reference-contexts: Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html. There are several relevant conferences in the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN <ref> [SM91, MM92, DSM94, VERS96] </ref> 22 * International Conference on Genetic Algorithms, ICGA [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] * IEEE International Conference on Evolutionary Computation, ICEC [IEE94, IEE95, IEE96, IEE97] * Annual Conference on Evolutionary Programming, EP [FA92, FA93, SF94, MRF95, FAB96, ARME97] * Annual Conference on Genetic Programming, GP
Reference: [SS96] <author> M. Schutz and J. Sprave. </author> <title> Application of parallel mixed-integer evolution strategies with mutation rate pooling. </title> <editor> In Fogel et al. </editor> <booktitle> [FAB96], </booktitle> <pages> pages 345-354. </pages>
Reference-contexts: applications, e.g., for the design of aircraft [BB91b, PSS + 95], structural mechanics problems [Sch95a], electromagnetic systems [MW95], mobile manipulators [AMP92, MAPP92], the design of a linear col-lider [Bey92], nuclear reactor fuel arrangement optimization [BHKZ96], multiplierless digital filter optimization [SE93], the design of survivable networks [DOCQ93] and optical multilayer systems <ref> [SS96] </ref>. These applications provide a nice view on the possible representations of individuals that can be used for different kinds of problems.
Reference: [Sys89] <author> G. Syswerda. </author> <title> Uniform crossover in genetic algorithms. </title> <booktitle> In Schaffer [Sch89], </booktitle> <pages> pages 2-9. </pages>
Reference-contexts: A population is a multiset of bit strings of fixed length. A genetic algorithm applies genetic operators on selected individuals in order to improve the multiset, or rather the fitness of its individuals. A standard mating selection mechanism is proportional selection, and standard genetic operators are uniform crossover <ref> [Sys89] </ref>, one-point crossover [Hol75] and mutation [Hol75]. After applying the genetic operators, giving new offspring, the offspring replaces the parent population.
Reference: [TG94] <author> D. Thierens and D. E. Goldberg. </author> <title> Convergence models of genetic algorithm selection schemes. </title> <editor> In Davidor et al. </editor> <booktitle> [DSM94], </booktitle> <pages> pages 119-129. </pages>
Reference-contexts: Besides the usual recombination operator some variants are of interest. We briefly discuss two. For a detailed overview of recombination operators in genetic algorithms, the reader is referred to the Handbook of Evolutionary Computation [BFM97]. First we mention elitist recombination, as introduced by Thierens and Goldberg <ref> [TG94] </ref>. It selects two parents and produces two children, as usual. But then the best two among the parents and the children are chosen as offspring for this operator. Thus this type of recombination does not weaken the population. <p> Moreover, several selection methods such as (,)-selection [MSV93, Bac95], tournament selection [Bac95, BT95b], linear ranking selection [BT95a] and proportional selection <ref> [TG94] </ref> have been analyzed in the past for the assumption of normally distributed fitness values. <p> : By making the implicit assumption that the fitness value of the generated offspring individuals are again binomially distributed (i.e., asymptotically normal, which is the precondition for using normal order statistics to characterize the selection intensity of the selection operator), Muhlenbein and Schlierkamp-Voosen [MSV93] as well as Thierens and Goldberg <ref> [TG94] </ref> proceed by setting E [f ] t+1 = n p t+1 , leading to p t+1 p t = p p t (1 p t ) ; which is further approximated by the differential equation dp t = p p t (1 p t ) : (8) As pointed out <p> For proportional selection, however, the selection intensity I depends on t and E [f ] t as well, such that Equation (8) reduces to dp t = n with the solution <ref> [TG94] </ref> p t = 1 (1 p 0 ) exp (t=n) : (10) For a randomly initialized population p 0 = 1=2, such that Equation (9) and Equa- tion (10) simplify to p t = 2 1 + sin I n !! and 1 exp (t=n) ; (12) respectively. <p> Equation (12) fails to yield a finite solution, but Thierens and Goldberg solve this problem by setting p t C = 1 " with an arbitrarily small ", resulting in t C = n ln (2") <ref> [TG94] </ref>. Apparently, both closed expressions (11) and (12) have their drawbacks in describing the dynamics of the genetic algorithm, as clarified by the observation that (11) is an oscillating function of t and Equation (12) cannot be solved for t C = 1. <p> Both equations, however, have been shown empirically to yield good approximations of the behavior of a genetic algorithm with uniform crossover, without mutation, provided that the problem dimension n and population size are sufficiently large (e.g., = 2n, as claimed by Thierens and Goldberg <ref> [TG94] </ref>). The corresponding experiments can be found in [MSV93, TG94, Bac95]. <p> The corresponding experiments can be found in <ref> [MSV93, TG94, Bac95] </ref>.
Reference: [UM93] <author> R. Unger and J. Moult. </author> <title> A genetic algorithm for 3D protein folding simulation. </title> <booktitle> In Forrest [For93], </booktitle> <pages> pages 581-588. </pages>
Reference-contexts: Some of the most challenging applications with a large profit potential are found in the field of biochemical drug design, where evolutionary algorithms have gained remarkable interest and success in the past few years as an optimization procedure to support protein engineering <ref> [GF96, SK93, UM93, YAY92] </ref>. Also finance and business provide a promising field of profitable applications [WHG95], but of course few details are published about this work (see for example [GT95]).
Reference: [VERS96] <editor> H.-M. Voigt, W. Ebeling, I. Rechenberg, and H.-P. Schwefel, editors. </editor> <booktitle> Parallel Problem Solving from Nature IV. Proceedings of the International Conference on Evolutionary Computation, volume 1141 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1996. </year>
Reference-contexts: Useful WWW-sites are: http://alife.santafe.edu/~joke/encore/www/, http://www.aic.nrl.navy.mil/galist/, http://www.dcs.napier.ac.uk/evonet/evonet.htm and http://www.scs.carleton.ca/csgs/resources/gaal.html. There are several relevant conferences in the field of evolutionary computation: * Parallel Problem Solving from Nature, PPSN <ref> [SM91, MM92, DSM94, VERS96] </ref> 22 * International Conference on Genetic Algorithms, ICGA [Gre85, Gre87, Sch89, BB91a, For93, Esh95, Bac97] * IEEE International Conference on Evolutionary Computation, ICEC [IEE94, IEE95, IEE96, IEE97] * Annual Conference on Evolutionary Programming, EP [FA92, FA93, SF94, MRF95, FAB96, ARME97] * Annual Conference on Genetic Programming, GP
Reference: [Vos92] <author> M. D. Vose. </author> <title> Modeling simple genetic algorithms. </title> <booktitle> In Whitley [Whi93], </booktitle> <pages> pages 63-73. 31 </pages>
Reference-contexts: There is a relationship between the deterministic path of the distributions and models of genetic algorithms with finite population size motivating the tracing of distributions (Nix and Vose [NV92], Vose <ref> [Vos92] </ref>, Whitley [Whi92]). Using special functions (e.g., Walsh products) and Fourier analysis it is possible to give a detailed analysis of this evolving distribution. Instead of experimenting with just a few populations this theory enables us to follow the full evolution of the distribution.
Reference: [WHG95] <author> R. F. Walker, E. W. Haasdijk, and M. C. Gerrets. </author> <title> Credit evaluation using a genetic algorithm. </title> <editor> In Goonatilake and Treleaven [GT95], </editor> <volume> chapter 3, </volume> <pages> pages 39-59. </pages>
Reference-contexts: Also finance and business provide a promising field of profitable applications <ref> [WHG95] </ref>, but of course few details are published about this work (see for example [GT95]).
Reference: [Whi92] <author> L. D. Whitley. </author> <title> An executable model of a simple genetic algorithm. </title> <booktitle> In Foundations of Genetic Algorithms 2 [Whi93], </booktitle> <pages> pages 45-62. </pages>
Reference-contexts: There is a relationship between the deterministic path of the distributions and models of genetic algorithms with finite population size motivating the tracing of distributions (Nix and Vose [NV92], Vose [Vos92], Whitley <ref> [Whi92] </ref>). Using special functions (e.g., Walsh products) and Fourier analysis it is possible to give a detailed analysis of this evolving distribution. Instead of experimenting with just a few populations this theory enables us to follow the full evolution of the distribution. <p> If we consider the simple genetic algorithm (proportional selection followed by one-point crossover and mutation), then we can combine the definitions into a transition matrix. This matrix has a number of interesting symmetries and it is possible to numerically trace the probabilities (see Liepins and Vose [LV91] and Whitley <ref> [Whi92] </ref>). Next we give structures based on discrete Fourier analysis as an alternative way to study these distributions. These structures seem to be better suited for calculation, especially for constructed fitness functions.
Reference: [Whi93] <editor> L. D. Whitley, editor. </editor> <booktitle> Foundations of Genetic Algorithms 2. </booktitle> <publisher> Morgan Kauf-mann Publishers, </publisher> <address> San Mateo, CA, </address> <year> 1993. </year>
Reference: [WLR97] <author> A.S. Wu, R.K. Lindsay, and R.L. Riolo. </author> <title> Empirical observations on the roles of crossover and mutation. </title> <booktitle> In Back [Bac97], </booktitle> <pages> pages 362-369. </pages>
Reference-contexts: Although some research has been done in order to support or even prove this hypothesis, only empirical results are available (see for a recent empirical result e.g., <ref> [WLR97] </ref>). Several authors have offered their remarks on Holland's hypothesis. See for instance Grefenstette and Baker [GB89] and Back [Bac96], where some remarks on the multi-armed bandit analogy used by Holland are offered.
Reference: [WPGC95] <editor> G. Winter, J. Periaux, M. Galan, and P. Cuesta, editors. </editor> <booktitle> Genetic Algorithms in Engineering and Computer Science. </booktitle> <publisher> Wiley, </publisher> <address> Chichester, </address> <year> 1995. </year>
Reference: [YAY92] <author> D. C. Youvan, A. P. Arkin, and M. M. Yang. </author> <title> Recursive ensemble mutage-nesis: A combinatorial optimization technique for protein engineering. </title> <booktitle> In Manner and Manderick [MM92], </booktitle> <pages> pages 401-410. </pages> <note> This paper was published in the Bulletin of the European Association for Theoretical Computer Science, Number 63, </note> <month> October </month> <year> 1997. </year> <month> 32 </month>
Reference-contexts: Some of the most challenging applications with a large profit potential are found in the field of biochemical drug design, where evolutionary algorithms have gained remarkable interest and success in the past few years as an optimization procedure to support protein engineering <ref> [GF96, SK93, UM93, YAY92] </ref>. Also finance and business provide a promising field of profitable applications [WHG95], but of course few details are published about this work (see for example [GT95]).
References-found: 111

