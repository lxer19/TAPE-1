URL: ftp://ftp.ing.unlp.edu.ar/pub/papers/memetic/pacta_92.ps.Z
Refering-URL: http://www.ing.unlp.edu.ar/cetad/mos/memetic_home.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: A "Memetic" Approach for the Traveling Salesman Problem Implementation of a Computational Ecology for Combinatorial
Author: Pablo Moscato CeTAD Michael G. Norman 
Address: C.C. 75 1900, La Plata ARGENTINA  King's Buildings, Mayfield Road Edinburgh, EH9 3JZ, Scotland UNITED KINGDOM  
Affiliation: Universidad Nacional de La Plata  Edinburgh Parallel Computing Centre University of Edinburgh  
Abstract: In this paper we present an approach for global combinatorial optimization applied to the TSP which combines local search heuristics with a population-based strategy. Due to its intrinsic parallelism and the inherent asynchronicity of the method it is specially appealing for MIMD message-passing parallel computers, such as those constructed from transputers. The approach is similar to that used by Muhlenbein [14] [15] [16], Brown et al. [1], Gorges-Schleuter [3] and work performed by the Dynamics of Computation Group at Xerox PARC [4]. We consider them as prototype examples of "memetic" algorithms in the sense described in Ref. [12] (see also Ref. [5]). A preliminary description of our work can also be found in Ref. [17]. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Brown, C.L. Huntley and A. Spillane, </author> <title> "A Parallel Genetic Heuristic for the Quadratic Assignment Problem", </title> <booktitle> Proceedings of the Third International Conference of Genetic Algorithms, </booktitle> <address> Fairfax, VA, </address> <note> ed. by J.D. </note> <editor> Schaffer, </editor> <publisher> (Morgan Kaufmann, </publisher> <address> San Mateo CA) pp. </address> <month> 406 </month> <year> (1989). </year>
Reference-contexts: of the location of the tour around the ring, for the competition between 0 and 1 we compute E comp according to E comp (0; 1) = L 0;1 = N so if tour 0 challenges tour 1, we generate a random number q with uniform distribution in the interval <ref> [0; 1] </ref> and if q p (E comp (0; 1); T ) nothing happens but if q &lt; p (E comp (0; 1); T ) tour 1 is deleted and replaced with a copy of tour 0.
Reference: [2] <author> D.E. Goldberg, </author> <title> Genetic Algorithms in Search, Optimization and Machine Learning, </title> <publisher> (Ad-dison Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1989). </year>
Reference-contexts: The arrangement introduces different neighbourhoods for cooperation and competition. The interactions are of a competitive and cooperative nature and the approach makes use of some of the relevant features of Simulated Annealing (SA) [9] and Genetic Algorithms (GAs) <ref> [2] </ref>. As a result of these cooperative and competitive phases the population is restarted from new configurations. The central idea of this "cooperative-competitive" approach for searching in large configuration spaces is to create a "self-driven" stochastic dynamical system that develops global optimization from local heuristics. <p> The local search is supplied by a hybrid of Monte Carlo simulated annealing [9] which will be later described. The cooperative aspect is supplied by a crossover operator identical in form to that used in GAs. We have implemented the order crossover (OX) recombination operator as defined by Goldberg <ref> [2] </ref> and another we have developed and describe it in depth in this paper. It is tentatively called Strategic Edge Crossover. It has outperformed the results of the OX in many instances under study.
Reference: [3] <author> M. Gorges-Schleuter, </author> <title> "ASPARAGOS An asynchronous Parallel Genetic Optimization Strategy", </title> <booktitle> Proceedings of the Third International Conference of Genetic Algorithms, </booktitle> <address> Fairfax, VA, </address> <note> ed. by J.D. </note> <editor> Schaffer, </editor> <publisher> (Morgan Kaufmann, </publisher> <address> San Mateo CA) pp. </address> <month> 422 </month> <year> (1989). </year>
Reference: [4] <author> B.A. Huberman and T. Hogg, </author> <title> Complexity and Adaptation, Physica 22D (1986) 376-384. B.A. Huberman, The Performance of Cooperative Processes, Physica D 42 (1990) 38-47. </title> <editor> T. Hogg, </editor> <title> The Dynamics of Complex Computational Systems, in: W.H. </title> <editor> Zurek ed., </editor> <title> Complexity, Entropy, and the Physics of Information (Addison-Wesley, </title> <address> Redwood City, CA, </address> <year> 1990). </year>
Reference-contexts: Introduction The approach is based on a population of a number of distinguishable individuals called agents (following Huberman's glossary <ref> [4] </ref> [5]), which are involved in periods of independent search interspersed with periods in which they interact. Individuals are arranged on a ring and each one searches locally, competes with its two immediate neighbours in the ring, and cooperates with individuals which are very distant within the ring.
Reference: [5] <author> B.A. Huberman and T. Hogg, </author> <title> Phase Transitions in Artificial Intelligence Systems, </title> <journal> Artificial Intelligence, </journal> <note> 33 (1987) 155-171. B.A. </note> <editor> Huberman ed. </editor> <booktitle> The Ecology of Computation (North-Holland, </booktitle> <address> Amsterdam, </address> <year> 1988). </year> <note> J.O. </note> <author> Kephart, T. Hogg and B.A. Huberman, </author> <title> Dynamics of Computational Ecosystems, </title> <journal> Phys. </journal> <note> Rev. A 40 (1989) 404-421. </note>
Reference-contexts: Introduction The approach is based on a population of a number of distinguishable individuals called agents (following Huberman's glossary [4] <ref> [5] </ref>), which are involved in periods of independent search interspersed with periods in which they interact. Individuals are arranged on a ring and each one searches locally, competes with its two immediate neighbours in the ring, and cooperates with individuals which are very distant within the ring.
Reference: [6] <author> R.M. Karp, </author> <title> Probabilistic Analysis of Partitioning Algorithms for the Traveling Salesman Problem in the Plane, </title> <institution> Math. Oper. Res. </institution> <month> 2 </month> <year> (1977) </year> <month> 209-224. </month>
Reference-contexts: Following this procedure the set of strings turns into a set of cycles, subtours which will be patched together to form a complete tour. For such a procedure, we considered the results obtained by R. Karp and co-workers on patching algorithms for the TSP <ref> [6] </ref> [7] and those of E. Balas and P. Toth on the relation between the assignment problem and the TSP (see Ref. [10], Chapter 10, p. 365). To create the set of strings it is convenient to use a data structure called EdgeMap. It is a list of EdgeLists.
Reference: [7] <author> R.M. Karp, </author> <title> A Patching Algorithm for the Nonsymmetric Traveling-Salesman Problem, </title> <journal> SIAM J. Comput. </journal> <month> 8 </month> <year> (1979) </year> <month> 561-573. </month>
Reference-contexts: Following this procedure the set of strings turns into a set of cycles, subtours which will be patched together to form a complete tour. For such a procedure, we considered the results obtained by R. Karp and co-workers on patching algorithms for the TSP [6] <ref> [7] </ref> and those of E. Balas and P. Toth on the relation between the assignment problem and the TSP (see Ref. [10], Chapter 10, p. 365). To create the set of strings it is convenient to use a data structure called EdgeMap. It is a list of EdgeLists.
Reference: [8] <author> G.A.P. Kindervater, J.K. Lenstra and D.B. Shmoys, </author> <title> The Parallel Complexity of TSP Heuristics, </title> <note> Journal of Algorithms 10 (1989) 249-270. </note>
Reference-contexts: Parallel complexity results can be found in Ref. <ref> [8] </ref>. The initial permutation is not the optimal solution of the assignment problem in our case. We must also remark that some edges connecting EndPoints have a big cost.
Reference: [9] <author> S. Kirkpatrick, </author> <title> C.D. Gelatt and M.P. Vecchi, Optimization by Simulated Annealing, </title> <note> Science 220 (1983) 671-680. </note>
Reference-contexts: The arrangement introduces different neighbourhoods for cooperation and competition. The interactions are of a competitive and cooperative nature and the approach makes use of some of the relevant features of Simulated Annealing (SA) <ref> [9] </ref> and Genetic Algorithms (GAs) [2]. As a result of these cooperative and competitive phases the population is restarted from new configurations. The central idea of this "cooperative-competitive" approach for searching in large configuration spaces is to create a "self-driven" stochastic dynamical system that develops global optimization from local heuristics. <p> We find it better than the brute force approach of doing many independent runs and picking up the best result of them. The local search is supplied by a hybrid of Monte Carlo simulated annealing <ref> [9] </ref> which will be later described. The cooperative aspect is supplied by a crossover operator identical in form to that used in GAs. We have implemented the order crossover (OX) recombination operator as defined by Goldberg [2] and another we have developed and describe it in depth in this paper. <p> Individual Optimization For the individual search phase (the MONTE CARLO STEP procedure), we have used a hybrid of Simulated Annealing (SA), a "classical" iterative improvement strategy <ref> [9] </ref>, with a variant of the deterministic update of Ref. [13]. procedure MONTE CARLO STEP (CurrentState; N i ; T emp); begin repeat N ewState A RANDOM MOVE (CurrentState); := Cost (NewState) Cost (CurrentState); if ( 0) then begin if ( &lt; T emp) then begin CurrentState := N ewState; Cost
Reference: [10] <author> E.L. Lawler, J.K. Lenstra, A.H.G. Rinnooy Kan and D.B. Shmoys, </author> <title> The Travelling Salesman Problem: A Guided Tour of Combinatorial Optimization, </title> <publisher> (Wiley-Interscience, </publisher> <address> Chichester, </address> <year> 1985). </year>
Reference-contexts: For such a procedure, we considered the results obtained by R. Karp and co-workers on patching algorithms for the TSP [6] [7] and those of E. Balas and P. Toth on the relation between the assignment problem and the TSP (see Ref. <ref> [10] </ref>, Chapter 10, p. 365). To create the set of strings it is convenient to use a data structure called EdgeMap. It is a list of EdgeLists. The EdgeList of a given city is the list of CityNumbers linked to that city in both parents. <p> The procedure then continues building another subtour which will be patched to this one. In the general case the edge that connects both EndPoints does not belong to one of the parents. We must remark on Karp's patching algorithm (see Ref. <ref> [10] </ref>, Chapter 6, p. 196). Let t be a permutation, let be a cyclic permutation, that is a permutation with only one cycle. The patching algorithm converts a general permutation to a cyclic permutation by a sequence of patching operations, each of them joins to cycles together.
Reference: [11] <author> S. Lin and B.W. Kernighan, </author> <title> An Effective Heuristic Algorithm for the Traveling Salesman Problem, </title> <type> Oper. </type> <institution> Res. </institution> <month> 21 </month> <year> (1973) </year> <month> 498-516. </month>
Reference-contexts: Cost + ; end; until (N umOf AttemptedChanges = N i ); end; Moves can be of three different types: the inversion of a sub-tour (2-OPT move), the insertion of one city in between two cities and the insertion of two connected cities between two cities (subsets of 3-OPT move) <ref> [11] </ref>. Cities and places of insertion and deletion are selected with a random uniform distribution. Each rearrangement would yield a change L in the length of the tour. Then = L= p N and we choose the scaling to the asymptotic expected length formula for the optimal tour. <p> This seems more important than the annealing schedule from arbitrarily high initial temperatures. Simulation runs have been done using many instances of the TSP. We used a random distribution of 100 cities inside a unit-square [17], the 318-cities Lin-Kerninghan instance <ref> [11] </ref> and other regular problems on a grid. The 532-cities Padberg and Rinaldi instance [18] was also employed as test-bed.
Reference: [12] <author> P. Moscato, </author> <title> On Evolution, Search, Optimization, Genetic Algorithms and Martial Arts: Towards Memetic Algorithms, Caltech Concurrent Computation Program Report 826, </title> <address> CalTech, Pasadena CA, </address> <year> (1989). </year>
Reference-contexts: The cost/benefit relation of including more complex crossovers in the genetic and in the memetic framework awaits theoretical treatment. We still lack a general theory to the design of these "crossover" operators. In Ref. <ref> [12] </ref>, the use of correlation functions for random walks was suggested and recent computer experiments validate its utility. Preliminary Results Most of our simulation runs have been done with the topology described in the section "Cooperation Phase" which employs 16 individuals.
Reference: [13] <author> P. Moscato and J.F. Fontanari, </author> <title> Stochastic versus Deterministic Update in Simulated Annealing, Physics Letters A 146, </title> <address> Number 4 (1990) 204-208. </address>
Reference-contexts: Individual Optimization For the individual search phase (the MONTE CARLO STEP procedure), we have used a hybrid of Simulated Annealing (SA), a "classical" iterative improvement strategy [9], with a variant of the deterministic update of Ref. <ref> [13] </ref>. procedure MONTE CARLO STEP (CurrentState; N i ; T emp); begin repeat N ewState A RANDOM MOVE (CurrentState); := Cost (NewState) Cost (CurrentState); if ( 0) then begin if ( &lt; T emp) then begin CurrentState := N ewState; Cost := Cost + ; end; else begin if ( &lt; <p> The 532-cities Padberg and Rinaldi instance [18] was also employed as test-bed. All simulations performed, with 16 individuals, the topology shown in Fig. 4, and the deterministic update of Ref. <ref> [13] </ref> have ended with tour lengths near two percent of the optimum when the OX operator was used to generate new individuals. This was a consistent result.
Reference: [14] <author> H. Muhlenbein, </author> <title> "New Solutions to the Mapping Problem of Parallel Systems: The Evolution Approach", </title> <journal> Parallel Computing, </journal> <volume> 4, </volume> <pages> pp. </pages> <month> 269 </month> <year> (1987). </year>
Reference: [15] <author> H. Muhlenbein, </author> <title> "Evolution Algorithms in Combinatorial Optimization", </title> <journal> Parallel Computing, </journal> <volume> 7, </volume> <pages> pp. 65, </pages> <year> (1988). </year>
Reference: [16] <author> H. Muhlenbein, </author> <title> "Parallel Genetic Algorithms, Population Genetics and Combinatorial Optimization", </title> <booktitle> Proceedings of the Third International Conference of Genetic Algorithms, </booktitle> <address> Fairfax, VA, </address> <note> ed. by J.D. </note> <editor> Schaffer, </editor> <publisher> (Morgan Kaufmann, </publisher> <address> San Mateo CA) pp. </address> <month> 416 </month> <year> (1989). </year>
Reference: [17] <author> M.G. Norman and P. Moscato, </author> <title> A Competitive-Cooperative Approach to Complex Combinatorial Search, Caltech Concurrent Computation Program, Report C 3 P -790, Pasadena, </title> <booktitle> CA (1989). Selected Work for the Proceedings of the 20th Joint Conference on Informatics and Operations Research (20th JAIIO), </booktitle> <pages> pp. </pages> <address> 3.15-3.29, Buenos Aires, Argentina, </address> <month> (August </month> <year> 1991). </year>
Reference-contexts: This seems more important than the annealing schedule from arbitrarily high initial temperatures. Simulation runs have been done using many instances of the TSP. We used a random distribution of 100 cities inside a unit-square <ref> [17] </ref>, the 318-cities Lin-Kerninghan instance [11] and other regular problems on a grid. The 532-cities Padberg and Rinaldi instance [18] was also employed as test-bed.
Reference: [18] <author> M. Padberg and G. Rinaldi, </author> <title> Optimization of 532-City Symmetric TSP, </title> <journal> Operations Research Letters, </journal> <month> 6 </month> <year> (1987) </year> <month> 1-7. </month>
Reference-contexts: We show results of simulations for some well known instances of the Traveling Salesman Problem (TSP) which have previously been solved to optimality by branch and bound and branch and cut methods <ref> [18] </ref>. A Cooperative and Competitive Team Agents are arranged in a certain topology and mechanisms for the competition, cooperation and independent search phases that compose the approach are designed. <p> Simulation runs have been done using many instances of the TSP. We used a random distribution of 100 cities inside a unit-square [17], the 318-cities Lin-Kerninghan instance [11] and other regular problems on a grid. The 532-cities Padberg and Rinaldi instance <ref> [18] </ref> was also employed as test-bed. All simulations performed, with 16 individuals, the topology shown in Fig. 4, and the deterministic update of Ref. [13] have ended with tour lengths near two percent of the optimum when the OX operator was used to generate new individuals.
Reference: [19] <author> D. Whitley, T. Starkweather and D'Ann Fuquay, </author> <title> Scheduling Problems and Traveling Salesman: The Genetic Edge Recombination Operator, </title> <editor> in: J.D. Schaffer ed., </editor> <booktitle> Proceedings of the Third International Conference of Genetic Algorithms, </booktitle> <address> Fairfax, VA, 1989, </address> <publisher> (Morgan Kaufmann, </publisher> <address> San Mateo CA, </address> <year> 1989) </year> <month> 133-140. </month>
Reference-contexts: The Strategic Edge Crossover is an improved blend of a direct descendant from the enhanced edge recombination of D. Whitley and co-workers <ref> [19] </ref> and a patching heuristic. It starts by creating a set of strings which are composed entirely by edges taken from the two parents. The cities at the end of these strings are then linked together although these new edges may or may not belong to one of the parents. <p> That was the case with all initial conditions we tried, thus exhibiting a complete independence on the initial conditions and a very robust behaviour. We have also found new optimal solutions for Eilon's 50 and 75 city instances given in Ref. <ref> [19] </ref> but we are trying to confirm this result with other researchers. We have also observed this superiority over the OX in other regular problems with only one optimal solution by construction.
References-found: 19

