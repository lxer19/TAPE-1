URL: http://www.cs.wisc.edu/~venkatar/papers/dataeng98.ps
Refering-URL: http://www.cs.wisc.edu/~venkatar/venkatar.html
Root-URL: 
Title: Remote Load-Sensitive Caching for Multi-Server Database Systems  
Author: Shivakumar Venkataraman Jeffrey F. Naughton Miron Livny 
Address: San Jose, CA 95123  
Affiliation: IBM Santa Teresa Labs Computer Sciences Dept Computer Sciences Dept  Univ of Wisconsin-Madison Univ of Wisconsin-Madison  
Abstract: The recent dramatic improvements in the performance of commodity hardware has made clusters of workstations or PCs an attractive and economical platform upon which to build scalable database servers. These clusters have large aggregate memory capacities; however, since this global memory is distributed, good algorithms are necessary for memory management, or this large aggregate memory will go underutilized. The goal of this study is to develop and evaluate buffer management algorithms for database clusters. We propose a new buffer management algorithm, remote load-sensitive caching (RLS-caching), that uses novel techniques to combine data placement with a simple modification of standard client-server page replacement algorithms to approximate a global LRU page replacement policy. Through an implementation in the SHORE database system, we evaluate the performance of RLS-caching against other buffer management algorithms. Our study demonstrates that RLS-caching indeed effectively manages the distributed memory of a server cluster.
Abstract-found: 1
Intro-found: 1
Reference: [BCF + 95] <author> N. Boden, D. Cohen, R. Felderman, A. Kulawik, C. Seitz, J. Seizovic, and W. Su. </author> <month> Myrinet </month>
Reference-contexts: We call such a system a multi-server database system. One of the key factors that has accelerated this trend towards multi-server database system is the availability of networks with very high bandwidths, low latencies, and at low cost. For example, in a Myrinet <ref> [BCF + 95] </ref> switched network, the link bandwidth is of the order of 140 Megabits (Mbits)/sec, and the latency to access a 8 kilobyte (KB) pages from remote memory is 551 microseconds (s).
References-found: 1

