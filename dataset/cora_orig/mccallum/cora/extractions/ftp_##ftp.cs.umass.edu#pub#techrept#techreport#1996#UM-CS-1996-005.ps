URL: ftp://ftp.cs.umass.edu/pub/techrept/techreport/1996/UM-CS-1996-005.ps
Refering-URL: http://www.cs.umass.edu/~potter/LC/spring96.doc.html
Root-URL: 
Title: A Tight Layout of the Butterfly Network  
Author: Aythan Avior Tiziana Calamoneri Shimon Even Ami Litman Arnold L. Rosenberg 
Abstract: We establish upper and lower bounds on the layout area of the butterfly network, which differ only in low-order terms. Specifically, the N-input, N-output butterfly network can be laid out in area (1 + o(1))N 2 , while no layout of the network can have area smaller than (1 o(1))N 2 . These results improve both the known upper bound and the known lower bound on the area of butterfly network layouts.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A.V. Aho, J.E. Hopcroft, J.D. </author> <title> Ullman (1974): The Design and Analysis of Computer Algorithms. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass. </address>
Reference-contexts: : : : ; j + k is the disjoint sum 4 of 2 nk copies of B k . 2 The terms "input" and "output" derive from the fact that the (n + 1)-level butterfly network is the data-dependency graph of the 2 n -input Fast Fourier Transform algorithm <ref> [1] </ref>. 3 We call this the natural ordering of the levels of B n . 4 We use the term "sum" here, rather than "union" to emphasize that the constituent graphs share neither nodes nor edges. 3 Grids.
Reference: [2] <author> F. Berman and L. </author> <title> Snyder (1987): On mapping parallel algorithms into parallel architectures. </title> <journal> J. Parallel Distr. Comput. </journal> <volume> 4, </volume> <pages> 439-458. </pages>
Reference-contexts: Further, each such layout is a restricted form of embedding of a graph in the grid, hence contributes to the study of the mapping problem for parallel architectures <ref> [2, 5] </ref>, particularly the problem of mapping parallel programs onto mesh-structured parallel architectures; cf. [12]. The fields of graph embedding and VLSI layout have developed powerful techniques which produce embeddings and layouts which are quite efficient|often within constant factors of optimal; cf. [3, 4].
Reference: [3] <author> S.N. Bhatt, F.R.K. Chung, J.-W. Hong, F.T. Leighton, B. Obrenic, A.L. Rosenberg, E.J. </author> <title> Schwabe (1996): Optimal emulations by butterfly-like networks. </title> <journal> J. ACM, </journal> <note> to appear. </note>
Reference-contexts: The fields of graph embedding and VLSI layout have developed powerful techniques which produce embeddings and layouts which are quite efficient|often within constant factors of optimal; cf. <ref> [3, 4] </ref>. However, even a modest constant factor may render an asymptotically optimal layout or embedding unacceptably inefficient in practice. This observation motivates the current paper. <p> However, even a modest constant factor may render an asymptotically optimal layout or embedding unacceptably inefficient in practice. This observation motivates the current paper. The aim of this paper is to find a grid-layout of the butterfly network <ref> [3] </ref> whose deviation from optimality is of lower order than a constant factor.
Reference: [4] <author> S.N. Bhatt and F.T. </author> <title> Leighton (1984): A framework for solving VLSI graph layout problems. </title> <journal> J. Comp. Syst. Scis. </journal> <volume> 28, </volume> <pages> 300-343. </pages>
Reference-contexts: The fields of graph embedding and VLSI layout have developed powerful techniques which produce embeddings and layouts which are quite efficient|often within constant factors of optimal; cf. <ref> [3, 4] </ref>. However, even a modest constant factor may render an asymptotically optimal layout or embedding unacceptably inefficient in practice. This observation motivates the current paper.
Reference: [5] <author> S.H. </author> <title> Bokhari (1981): On the mapping problem. </title> <journal> IEEE Trans. Comp., </journal> <volume> C-30, </volume> <pages> 207-214. </pages>
Reference-contexts: Further, each such layout is a restricted form of embedding of a graph in the grid, hence contributes to the study of the mapping problem for parallel architectures <ref> [2, 5] </ref>, particularly the problem of mapping parallel programs onto mesh-structured parallel architectures; cf. [12]. The fields of graph embedding and VLSI layout have developed powerful techniques which produce embeddings and layouts which are quite efficient|often within constant factors of optimal; cf. [3, 4].
Reference: [6] <author> Ye. </author> <month> Dinitz </month> <year> (1995): </year> <title> A compact layout of butterfly on the square grid. </title> <type> Tech. </type> <address> Rpt. 873, TheTechnion. </address>
Reference-contexts: The previously known lower bound for the layout area of the N -input, N -output butterfly network was 1 4 N 2 [13, 14]. The 1981 upper bound of 2N 2 for the same problem [15] was improved only in 1992, to 11 6 N 2 <ref> [6] </ref>. 1.2 The Formal Setup A. The Graphs of Interest We define several graphs that are germane to our study. We begin with the two graphs that are of primary interest, butterfly networks and grids. Butterfly networks.
Reference: [7] <author> S. Even and A. </author> <title> Litman (1992): Layered cross product | a technique to construct interconnection networks. </title> <booktitle> 4th ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <pages> 60-69. </pages>
Reference-contexts: reversals of the binary representations of the integers 0; 1; : : : ; 2 n 1, in that order 3 , we get the familiar drawing of B n shown in Figure 1 (a). (a) (b) The following folklore lemma will be useful in our layout of B n <ref> [7] </ref>. <p> We refer to the input terminals collectively and to the output terminals collectively as a terminal group. (a) (b) 2 ; (b) B 00 The following folklore result, a proof of which can be found in <ref> [7] </ref>, indicates that the designations "input" and "output" in our definitions of B n and B 00 n are artificial and are useful only as an aid in visualizing the networks. This fact is crucial in our layout strategy.
Reference: [8] <author> F.T. </author> <title> Leighton (1983): Complexity Issues in VLSI: Optimal Layouts for the Shu*e-Exchange Graph and Other Networks. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Mass. </address>
Reference-contexts: This quantity is minimized when K = 1 2 N , in which case 1 2 N 2 edges cross the cut. Congestion arguments. We employ a technique for bounding unknown M SBW 's from known ones, which derives from a technique originated in <ref> [8] </ref> and refined in [11]. The principle underlying congestion arguments is quite simple. Focus on a graph H which has k special nodes, whose M SBW we wish to bound from below. Say that we have an auxiliary graph G which has k special nodes, whose M SBW we know.
Reference: [9] <author> K. Mehlhorn, F.P. Preparata, M. </author> <title> Sarrafzadeh (1986): Channel routing in knock-knee mode: simplified algorithms and proofs. </title> <journal> Algorithmica 1, </journal> <pages> 213-221. </pages>
Reference-contexts: Thus, we do not allow "knock-knee" routing <ref> [9] </ref>. * A routing path may touch no image node ff (u), except at its endpoints. We denote by AREA (G) the area of the smallest grid in which G can be laid out. C.
Reference: [10] <author> R.Y. </author> <title> Pinter (1982): On routing two-point nets across a channel. </title> <booktitle> 19th ACM-IEEE Design Automation Conf., </booktitle> <pages> 894-902. </pages>
Reference-contexts: This completes the layout of B ((n1)=2) n , hence of B 00 n . 2.3 The Third Reduction Our final task is to construct the layouts of B 00 n demanded in Claim 2.2. We construct these layouts implicitly, by appealing to a result of Pinter <ref> [10] </ref> on channel routing. 9 An (h; l; k) cross-channel routing problem involves an h fi l grid (the channel) and a set of k two-point nets: each net is a pair of gridpoints which reside on opposite vertical sides of the grid. <p> Such a layout may not be possible if the grid is too small; Pinter guarantees that the grid need not be too big. Lemma 2.1 <ref> [10] </ref> Any (h; l; k) cross-channel routing problem satisfying h &gt; k and l &gt; 3 2 k + 1 can be routed within the given grid. Lemma 2.1 enables the desired layouts of B 00 n in the following way.
Reference: [11] <author> A.L. Rosenberg and L.S. </author> <title> Heath (1996): Graph Separators, with Applications, </title> <note> in preparation. </note>
Reference-contexts: This quantity is minimized when K = 1 2 N , in which case 1 2 N 2 edges cross the cut. Congestion arguments. We employ a technique for bounding unknown M SBW 's from known ones, which derives from a technique originated in [8] and refined in <ref> [11] </ref>. The principle underlying congestion arguments is quite simple. Focus on a graph H which has k special nodes, whose M SBW we wish to bound from below. Say that we have an auxiliary graph G which has k special nodes, whose M SBW we know.
Reference: [12] <author> L. </author> <title> Snyder (1986): Type architectures, shared memory, and the corollary of modest potential. </title> <journal> Ann. Rev. Computer Science 1, </journal> <pages> 289-317. </pages>
Reference-contexts: Further, each such layout is a restricted form of embedding of a graph in the grid, hence contributes to the study of the mapping problem for parallel architectures [2, 5], particularly the problem of mapping parallel programs onto mesh-structured parallel architectures; cf. <ref> [12] </ref>. The fields of graph embedding and VLSI layout have developed powerful techniques which produce embeddings and layouts which are quite efficient|often within constant factors of optimal; cf. [3, 4]. However, even a modest constant factor may render an asymptotically optimal layout or embedding unacceptably inefficient in practice.
Reference: [13] <author> C.D. </author> <title> Thompson (1980): A Complexity Theory for VLSI. </title> <type> Ph.D. Thesis, CMU. </type>
Reference-contexts: 1 Introduction 1.1 Overview Layouts of graphs on rectilinear grids are of wide interest in the study of the VLSI layout problem for integrated circuits <ref> [13] </ref>, as well as in the study of algorithms for drawing graphs. <p> Both the upper- and lower-bound components of our result improve prior bounds for butterfly network layouts. The previously known lower bound for the layout area of the N -input, N -output butterfly network was 1 4 N 2 <ref> [13, 14] </ref>. The 1981 upper bound of 2N 2 for the same problem [15] was improved only in 1992, to 11 6 N 2 [6]. 1.2 The Formal Setup A. The Graphs of Interest We define several graphs that are germane to our study. <p> Grid layouts. We formulate the notion of a grid-layout of a graph G as a special kind of embedding of G into a grid; there are alternative, equivalent formulations of the notion which make it a special kind of drawing of G in the plane. Following <ref> [13] </ref>, a layout of an N -node graph G in a grid M m;n , where N mn, is an embedding hff; i of G into M m;n whose routing paths collectively satisfy the following conditions. * Distinct routing paths are edge-disjoint, so that the embedding that embodies a layout has <p> Theorem 3.1 For all positive integers n, any grid-layout of B n has AREA at least (2 n 1) 2 . Hence, AREA (B n ) (1 o (1))N 2 : The bounding strategy. We modify the basic lower-bound strategy invented in <ref> [13] </ref> via the nonstandard notion of a special-bisection of a graph. Let G be a graph having a designated set of 2c &gt; 0 special nodes. <p> Lemma 3.1 For any graph G, AREA (G) (M SBW (G) 1) 2 : Proof: We consider an arbitrary layout of G in M m;n , where, with no loss of generality, m n. As in <ref> [13] </ref>, we find that there is a line L that has a single unit-length jog, which can be positioned on a drawing of M m;n in the following way. 11 * L is aligned with the columns of M m;n in such a way that the portion of L above the
Reference: [14] <author> C.D. </author> <title> Thompson (1983): Fourier transforms in VLSI. </title> <journal> IEEE Trans. Comp., </journal> <volume> C-32, </volume> <pages> 1047-1057. </pages>
Reference-contexts: Both the upper- and lower-bound components of our result improve prior bounds for butterfly network layouts. The previously known lower bound for the layout area of the N -input, N -output butterfly network was 1 4 N 2 <ref> [13, 14] </ref>. The 1981 upper bound of 2N 2 for the same problem [15] was improved only in 1992, to 11 6 N 2 [6]. 1.2 The Formal Setup A. The Graphs of Interest We define several graphs that are germane to our study.
Reference: [15] <author> D.S. </author> <title> Wise (1981): Compact layouts of banyan/FFT networks. VLSI Systems and Computations (H.T. Kung, </title> <editor> B. Sproull, G. Steele, eds.) </editor> <publisher> Computer Science Press, </publisher> <address> Rockville, Md., </address> <pages> 186-195. </pages>
Reference-contexts: The previously known lower bound for the layout area of the N -input, N -output butterfly network was 1 4 N 2 [13, 14]. The 1981 upper bound of 2N 2 for the same problem <ref> [15] </ref> was improved only in 1992, to 11 6 N 2 [6]. 1.2 The Formal Setup A. The Graphs of Interest We define several graphs that are germane to our study. We begin with the two graphs that are of primary interest, butterfly networks and grids. Butterfly networks.
References-found: 15

