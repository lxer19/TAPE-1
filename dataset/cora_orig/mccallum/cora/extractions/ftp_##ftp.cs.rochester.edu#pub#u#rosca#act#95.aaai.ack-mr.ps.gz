URL: ftp://ftp.cs.rochester.edu/pub/u/rosca/act/95.aaai.ack-mr.ps.gz
Refering-URL: http://www.cs.rochester.edu/u/rosca/papers.html
Root-URL: 
Email: rosca@cs.rochester.edu, riopka@cs.rochester.edu  
Title: A Constraint-Based Control Architecture for Acting and Reasoning in Autonomous Robots  
Author: Justinian P. Rosca and Terry Riopka 
Address: Rochester NY 14627  
Affiliation: Computer Science Department University of Rochester  
Note: Proceedings of the AAAI Spring Symposium, 1995.  
Abstract: In this paper we will address several architectural decisions in defining a software control architecture for mobile robots. Our system is a collection of control primitives that enables the development of simulations or control algorithms for autonomous agents. Its computational capabilities are determined by an object-oriented constraint-based architecture. We discuss how high level knowledge, skills, goal-driven and reactive behavior are integrated within such an architecture. Our goal is to design a framework that enables the merging of classic and reactive implementation ideas. We will show, that each such type of control can be implemented in our system. The issues of task decomposition and granularity are given special attention, as they lie at the basis of our architecture. We discuss two learning methods supported by our system. The first is based on environment exploration, while the second copes with skill acquisition. Our robot, cyclops , is a LEGO mini-robot based on the 6.270 MIT kit to be used in a package delivery application. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Rodney A. Brooks. </author> <title> A robust layered control system for a mobile robot. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 2(1), </volume> <month> March </month> <year> 1986. </year>
Reference: [2] <author> Rodney A. Brooks. </author> <title> Intelligence without reason. </title> <journal> Technical Report A.I. </journal> <volume> Memo No. 1293, </volume> <publisher> MIT, </publisher> <month> April </month> <year> 1991. </year>
Reference-contexts: The two prevalent architectural ideas are the classic or centralized approach and the reactive approach ([1], <ref> [2] </ref>). They differ in the way each views the role played by a world model. The centralized or knowledge-based approach emphasizes a (generally declarative) model of the world by representing detailed expertise from the problem domain [11].
Reference: [3] <author> Cristian Giumale. </author> <title> A rule-inference package for ai programming. </title> <booktitle> In Proceedings of the 7-th International Workshop on Expert Systems and their Applications, </booktitle> <address> Avignon, </address> <year> 1987. </year>
Reference-contexts: The knowledge representation paradigm used is inspired by the blackboard model [4] and an implementation of it that outlines the tradeoff between granularity and parallelism in knowledge processing <ref> [3] </ref>. The main static representational entities are the object and the knowledge source. Knowledge sources can be activated to generate knowledge source activation records (KSAR) which are used to record and control the dynamics of the system. Objects are described using a pattern called object prototype. <p> Knowledge sources attached to object relations may be designed to work similarly to rules in a rule-based system, namely they are defined in terms of two condition parts, called activation and execution shields in 3 <ref> [3] </ref> and a body. W HEN &lt; activation shield (KS) &gt; IF &lt; execution shield (KS) &gt; T HEN &lt; body (KS) &gt; The activation shield tests the opportunity or suitability to execute the main part of the knowledge source, the KS body.
Reference: [4] <author> Barbara Hayes-Roth. </author> <title> A blackboard architecture for control. </title> <journal> Artificial Intelligence, </journal> <volume> 26(3), </volume> <year> 1985. </year>
Reference-contexts: Knowledge representation A symbolic, object-oriented representation of the application domain, although not exhaustive, makes it possible to name and control the chunks of work the system has to do at a given time. The knowledge representation paradigm used is inspired by the blackboard model <ref> [4] </ref> and an implementation of it that outlines the tradeoff between granularity and parallelism in knowledge processing [3]. The main static representational entities are the object and the knowledge source. <p> Such an approach is oriented towards the opportunistic activation of problem solving modules, defined to compete or cooperate. Problem solving power emerges based on the effects of processes corresponding to knowledge source activation records <ref> [4] </ref>. The granularity of decompositions is determined by the granularity of knowledge sources which is, in turn, under user control. Knowledge sources are defined as chunks of code written in a base language.
Reference: [5] <author> John H. Holland. </author> <title> Adaptation in Natural and Artificial Systems, An Introductory Analysis with Applications to Biology, </title> <booktitle> Control and Artificial Intelligence. </booktitle> <publisher> MIT Press, </publisher> <address> second edition, </address> <year> 1992. </year>
Reference-contexts: In this case the system acts to gain information or experience, that is explores the search space. The choice of what to do next exemplifies a well-known problem, the exploration-exploitation trade-off (see <ref> [5] </ref>). Our approach is to use ACK to describe explicit exploratory behaviors. An example of such a goal is map building. A better estimation of surrounding object positions can affect the execution of system knowledge sources, resulting in improved overall behavior.
Reference: [6] <author> Joseph L. Jones and Anita M. Flynn. </author> <title> Mobile Robots, Inspiration to Implementation. A K Peters, </title> <type> Wellesley, </type> <institution> Massachusetts, </institution> <year> 1993. </year>
Reference-contexts: Consider two behaviors, line-follow and avoid-obstacle that represent two different control layers that run in parallel whenever the appropriate sensors fire. The two behaviors may be related by a suppressor node in a subsumption-like architecture <ref> [6] </ref>. For example, the second behavior subsumes the function of the first in order to generate the effect of a higher level competence. An example of a prototype and two knowledge sources that implement the line following behavior in ACK is presented in figure 1. <p> The memory limitation dictates a very simple implementation. We take advantage of the multi-tasking facilities of Interactive C (IC) interpreter, available as free-ware from MIT <ref> [6] </ref>. KSARs are implemented as processes in IC. The global ACK scheduler is not needed here because the processes created are run using a round-robin multitasking strategy. Each process gets a default maximum number of ticks.
Reference: [7] <author> Hiroaki Kitano. </author> <title> Challanges of massive parallelism. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 813-834. </pages> <publisher> Morgan Kauf-man, </publisher> <year> 1993. </year>
Reference-contexts: Learning- How can a given architecture support learning? How can knowledge and skills be moved be 8 tween different layers of an agent architecture? Without adaptation and learning mechanisms artificial intelligence systems are "inherently biased by the features and representation schemes defined by the system designer" <ref> [7] </ref>. I view adaptation as an automatic adjustment of control parameters to environmental conditions in order to make the agent more fit to the conditions in which it operates.
Reference: [8] <author> Henry Lieberman. </author> <title> A preview of act1. </title> <type> Technical Report AI Memo No. 625, </type> <institution> MIT AI Laboratory, </institution> <year> 1981. </year>
Reference: [9] <author> Henry Lieberman. </author> <title> Thinking about lots of things at once without getting confused: Parallelism in act1. </title> <type> Technical Report AI Memo No. 626, </type> <institution> MIT AI Laboratory, </institution> <year> 1981. </year>
Reference-contexts: A granule is a group of program units that can be executed in parallel with other such groups. Robotics and knowledge processing techniques address applications with much higher run time dynamics. The detection of granules is highly dependent on the environment and on the problem solving context ([8], <ref> [9] </ref>). For example, behavior selection in an artificial creature depends on the current situation given by sensor data, by the creature's motivations and beliefs [10]. The proposed ACK will try to exploit this dynamic type of context-dependent parallelism that results from the interaction of problem entities.
Reference: [10] <editor> Pattie Maes. </editor> <title> A bottom-up mechanism for behavior selection in an artificial creature. </title> <address> pages 238-246. </address> <year> 1991. </year>
Reference-contexts: The detection of granules is highly dependent on the environment and on the problem solving context ([8], [9]). For example, behavior selection in an artificial creature depends on the current situation given by sensor data, by the creature's motivations and beliefs <ref> [10] </ref>. The proposed ACK will try to exploit this dynamic type of context-dependent parallelism that results from the interaction of problem entities.
Reference: [11] <editor> Pattie Maes. </editor> <booktitle> Behavior-based artificial intelligence. In Proceedings of the Second Conference on Simulated and Adaptibe Behavior. </booktitle> <publisher> MIT Press, </publisher> <year> 1993. </year>
Reference-contexts: They differ in the way each views the role played by a world model. The centralized or knowledge-based approach emphasizes a (generally declarative) model of the world by representing detailed expertise from the problem domain <ref> [11] </ref>. It integrates sensing, reasoning or problem-solving and acting modules [15] that operate on the domain knowledge. The reactive or behavior-based approach recognizes the importance of the principles of connectedness and embodiment (the robots experience the world directly).
Reference: [12] <author> Tom M. Mitchell. </author> <title> Becoming increasingly reactive. </title> <booktitle> In Proceedings of the AAAI, </booktitle> <pages> pages 1051-1058, </pages> <year> 1990. </year>
Reference-contexts: The result of the exploration is then used to update the map. Our approach is similar in its character but different in implementation to <ref> [12] </ref>. [12] describes a control architecture for a mobile robot which combines a reactive subsystem with a search-based planner. A stimulus response subsystem acts when it can, consulting a set of stimulus responses in order to invoke an action in response to current sensed inputs. <p> The result of the exploration is then used to update the map. Our approach is similar in its character but different in implementation to <ref> [12] </ref>. [12] describes a control architecture for a mobile robot which combines a reactive subsystem with a search-based planner. A stimulus response subsystem acts when it can, consulting a set of stimulus responses in order to invoke an action in response to current sensed inputs.
Reference: [13] <author> Francesco Mondada, Edoardo Franzi, and Paolo Ienne. </author> <title> Mobile robot miniaturisation: a tool for investigation in control algorithms. </title> <booktitle> Third International Symposium on Experimental Robotics, </booktitle> <address> Kyoto, Japan, Oct 28-30, </address> <year> 1993. </year>
Reference-contexts: Introduction Hardware miniaturization offers the opportunity to bridge the gap between laboratory mobile-robot designs and industrial applications like floor cleaning, surveillance, flexible part transportation, delivery, or harvesting <ref> [13] </ref>. Each of the applications in this extended context requires increased sensing capabilities and processing power. System architectures are beginning to reflect the increase in complexity by integrating multiple micro-controllers and relying on distributed processing. <p> to the environment in which it operates * enable evolution towards more complex or more re fined patterns of operation Although our test robot hardware does not allow the connection of additional extensions based on micro-controllers, we consider that the software architecture should aim at a multi-controller network as in <ref> [13] </ref>. Moreover it should make such an architecture transparent to the programmer. A modular architecture organizes the knowledge, competences and activity of the system such that local changes, improvements or tuning do not affect the functioning of unchanged components.
Reference: [14] <author> Justinian Rosca. </author> <title> Parallel knowledge processing an sgi implementation. </title> <type> Technical Report unpublished report, </type> <institution> University of Rochester, Computer Science Dept., </institution> <year> 1993. </year>
Reference-contexts: Ideally, inference processes should be independent of one another, so that they can be conceptually run on a parallel virtual machine. ACK provides to the user a model of parallelism at this high level <ref> [14] </ref>. In the following sections we present two simple examples showing how reactive operation as well as goal-driven operation can be modeled using the system.
Reference: [15] <author> Charles E. Thorpe. </author> <title> Mobile robots. </title> <editor> In Stuart C. Shapiro, editor, </editor> <booktitle> Encyclopedia of Artificial Intelligence, </booktitle> <volume> volume 2. </volume> <publisher> John Wiley & Sons, Inc., </publisher> <address> second edition edition, </address> <year> 1992. </year>
Reference-contexts: They differ in the way each views the role played by a world model. The centralized or knowledge-based approach emphasizes a (generally declarative) model of the world by representing detailed expertise from the problem domain [11]. It integrates sensing, reasoning or problem-solving and acting modules <ref> [15] </ref> that operate on the domain knowledge. The reactive or behavior-based approach recognizes the importance of the principles of connectedness and embodiment (the robots experience the world directly).
Reference: [16] <author> Steve Whitehead and Dana H. Ballard. </author> <title> Learning to perceive and act by trial and error. </title> <journal> Machine Learning, </journal> <volume> 7(1) </volume> <pages> 45-83, </pages> <year> 1991. </year>
Reference-contexts: Learning Environment exploration Learning enables a system to adapt to the environment in which it operates. Adaptive control architectures employ various learning techniques. For example Reinforcement Learning (RL) has been used for learning an (optimal) policy function, mapping situations into actions <ref> [16] </ref>. If the search process controlled by a RL system chooses the action prescribed by its current 5 knowledge, then the system exploits its current knowledge by acting in order to gain reward.
References-found: 16

