URL: http://www.isi.edu/people/katia/congestion-control-reps.ps.gz
Refering-URL: http://www.isi.edu/people/katia/
Root-URL: http://www.isi.edu
Email: email: dante@usc.edu email: katia@isi.edu  
Title: A Multicast Congestion Control Mechanism Using Representatives  
Author: Dante DeLucia Katia Obraczka 
Address: 3011 Malibu Canyon Road 4676 Admiralty Way Suite 1001 Malibu CA 90265 Marina Del Rey, CA 90292  
Affiliation: Hughes Research Laboratories USC Information Sciences Institute  
Abstract: In this paper, we propose a congestion control mechanism for reliable multicast applications that uses a small set of group members, or representatives, to provide timely and accurate feedback on behalf of congested subtrees of a multicast distribution tree. Our algorithm does not need to compute round-trip time (RTT) from all receivers to the source, nor does it require knowledge of group membership or network topology. Through simulations, we evaluate our algorithm with and without TCP cross traffic. This initial evaluation study shows that our algorithm takes advantage of network bandwidth when available, yet does not starve competing flows. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.S. Ahn, P.B. Danzig, Z. Liu, and L. Yan. </author> <title> Evaluation of tcp vegas: Emulation and experiment. </title> <booktitle> 1995 ACM SIGCOMM Conference, </booktitle> <pages> pages 185-195, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: After the slow start phase, TCP opens the window linearly, and closes it multiplicatively. Both the Tahoe and Reno distribution of BSD UNIX [11] incorporate Jacobson's slow-start algorithm. Another variant of TCP called TCP Vegas [3] implements a sender-side congestion avoidance algorithm. In <ref> [1] </ref>, Ahn et al. confirm that Vegas' congestion avoidance scheme yields higher throughput and keeps less data in the network than Reno. By computing the difference between best and current RTT, a Vegas sender measures the amount of data queued in the network and adjusts its transmission window accordingly.
Reference: [2] <author> J.C. Bolot, T. Turletti, and I. Wakeman. </author> <title> Scalable feedback control for multicast video distribution in the internet. </title> <booktitle> Proc. of the Conference on Communications Architectures, Protocols, and Applications, ACM SIGCOMM 1994, </booktitle> <month> August </month> <year> 1994. </year>
Reference-contexts: The Deterministic Timeouts for Reliable Multicast (DTRM) [9] algorithm also uses RTT between receivers and the sender to compute the receivers' suppression timeouts such that only one receiver in a mul-ticast subtree, the representative receiver, responds to losses. The feedback control mechanism proposed in <ref> [2] </ref> does not fall into either the structure-based or the timer-based categories. In this approach to feedback control, which is used by the IVS videoconferencing tool [19] and is layered atop of RTP [18], video sources use probabilistic polling to select a set of receivers that should provide feedback. <p> A method of dynamically determining repreresen-tative set size needs to be developed. We also plan to evaluate our congestion algorithm against multiple instances of itself. Group size estimation can greatly enhance the effectiveness of the suppression algorithm. Techniques for doing this have been developed elsewhere <ref> [2, 16] </ref> and need to be investigated in this context. Currently, in very large groups, CI feedback from unrepresented subtrees can still cause transient congestion if losses occur high in the multicast tree.
Reference: [3] <author> L.S. Brakmo, S.W. O'Malley, and L.L. Peterson. </author> <title> TCP Vegas: New techniques for congestion detection and avoidance. </title> <booktitle> 1994 ACM SIGCOMM Conference, </booktitle> <pages> pages 24-35, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: This decision depends on the type of congestion metric in use. We experimented with two different congestion metrics: rate-based and delay-based. The rate-based metric is essentially the rate at which packets were received by a group member. Inspired by TCP Vegas' congestion avoidance mechanism <ref> [3] </ref>, the delay-based metric measures the amount of data queued in the network. If the rate-based congestion metric is used, the source compares its transmit rate to the worst receive rate reported by the feedback packets received in response to a data packet. <p> After the slow start phase, TCP opens the window linearly, and closes it multiplicatively. Both the Tahoe and Reno distribution of BSD UNIX [11] incorporate Jacobson's slow-start algorithm. Another variant of TCP called TCP Vegas <ref> [3] </ref> implements a sender-side congestion avoidance algorithm. In [1], Ahn et al. confirm that Vegas' congestion avoidance scheme yields higher throughput and keeps less data in the network than Reno.
Reference: [4] <author> P. B. Danzig. </author> <title> Optimally Selecting the Parameters of Adaptive Backoff Algorithms for Computer Networks and Multiprocessors. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <month> December </month> <year> 1989. </year>
Reference-contexts: A rather simplistic solution is to fix the group bandwidth at the lowest bandwidth constraint. However, it is much more efficient if, once the minimal group bandwidth has been established, the transmission rate is increased as bandwidth becomes available. Reliable multicast protocols also face the feedback implosion problem <ref> [4] </ref>, which becomes critical as mul-ticast group size increases. Several existing reliable multicast transport protocols use probabilistic suppression to limit the amount of feedback received at the source [7, 13, 17]. SRM, for example, performs probabilistic suppression based on the round-trip time (RTT) measured between receivers and the source. <p> It uses representative receivers to provide timely feedback so that incipient congestion can be detected and packet loss avoided. 5.2 Feedback Control Multicast transport protocols suffer from the feedback implosion problem <ref> [4] </ref>, specially when losses occur higher up in the multicast tree in larger groups over lossy networks. In this section we focus on proposed solutions to the feedback implosion problem in the context of reliable multicast transport protocols.
Reference: [5] <author> K. Fall and S. Floyd. </author> <title> Simulation-based comparisons of tahoe, reno, and sack tcp. </title> <journal> ACM Computer Communications Review, </journal> <month> July </month> <year> 1996. </year> <month> 10 </month>
Reference-contexts: The results show that our approach is very promising, however further evaluation is required as the protocol matures. 4.1 Simulator We implemented our congestion control algorithm as a new protocol in NS [14] (Network Simulator). NS has already been used in performance studies of TCP <ref> [5] </ref> and multicast protocols [15]. By using NS rather than writing a simulator from scratch, or using other simulation tools, we are able to test interactions between our protocol and several TCP variants and gateway queuing strategies, such as drop-tail and RED [6], that have been implemented in NS.
Reference: [6] <author> S. Floyd and V. Jacobson. </author> <title> Random early detec-tion gateways for congestion avoidance. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 1(4) </volume> <pages> 397-413, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: By using NS rather than writing a simulator from scratch, or using other simulation tools, we are able to test interactions between our protocol and several TCP variants and gateway queuing strategies, such as drop-tail and RED <ref> [6] </ref>, that have been implemented in NS. For the purposes of this study, we limited our investigations to TCP Tahoe, and drop-tail gateways.
Reference: [7] <author> S. Floyd, V. Jacobson, S. McCanne, C.G. Liu, and L. Zhang. </author> <title> A reliable multicast framework for light-weight sessions and application-level framing. </title> <booktitle> 1995 ACM Sigcomm Conference, </booktitle> <pages> pages 342-356, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: Reliable multicast protocols also face the feedback implosion problem [4], which becomes critical as mul-ticast group size increases. Several existing reliable multicast transport protocols use probabilistic suppression to limit the amount of feedback received at the source <ref> [7, 13, 17] </ref>. SRM, for example, performs probabilistic suppression based on the round-trip time (RTT) measured between receivers and the source. <p> Structure-based approaches, such as [10], rely on a designated site (either a dedicated server in the case of [10] or a pre-assigned group member) to process and filter feedback information. 9 Timer-based solutions rely on probabilistic feed-back suppression to avoid implosion at the source. Receivers in the SRM protocol <ref> [7] </ref>, which was designed to support the distributed whiteboard application, delay their retransmission requests for a random interval, uniformly distributed between the current time and the one-way trip time to the source.
Reference: [8] <institution> Omitted for anonymity. </institution>
Reference-contexts: Previous work evaluated the feedback control mechanism and established that when compared to a pure suppression algorithm, representatives contribute significantly to limiting the amount of feedback, while maintaining its timeliness. These results and a more detailed discussion can be found in <ref> [8] </ref>. This performance study validates the basic congestion control algorithm. The results show that our approach is very promising, however further evaluation is required as the protocol matures. 4.1 Simulator We implemented our congestion control algorithm as a new protocol in NS [14] (Network Simulator). <p> We discuss the results from the runs using the rate-based metric in Section 4.3.4. Other Simulation Parameters The other parameters used by our simulator and their values include: * The representative set size was set to 3. Previous experiments <ref> [8] </ref> show that small representative sets are quite effective in suppressing feed back and providing timely feedback. * The CC wait interval is set to 1 fl GRT T while the CC random interval is set to :75 fl GRT T . * The CI wait interval and CI random interval <p> However, the longer random interval gives representatives a chance to suppress CIs from tree branches they already cover. The evaluation presented in <ref> [8] </ref> also studies the effect of different CI wait intervals on our algorithm. 4.3 Results All simulations used the topology shown in Figure 2. The first run evaluates the performance of the algorithm with no cross traffic.
Reference: [9] <author> M. Grossglauser. </author> <title> Optimal deterministic timeouts for reliable scalable multicast. </title> <booktitle> Proc. of the IEEE Infocom'96, </booktitle> <address> San Francisco, CA, </address> <pages> pages 1425-1432, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: In this section we focus on proposed solutions to the feedback implosion problem in the context of reliable multicast transport protocols. In <ref> [9] </ref>, solutions to the feedback implosion problem are classified as structure-based or timer-based. <p> The goal is that group members closer to the source send their feedback sooner suppressing feedback from farther away members. A site uses periodic session messages to measure its distance (based on the resulting RTT) to the other group members. The Deterministic Timeouts for Reliable Multicast (DTRM) <ref> [9] </ref> algorithm also uses RTT between receivers and the sender to compute the receivers' suppression timeouts such that only one receiver in a mul-ticast subtree, the representative receiver, responds to losses. The feedback control mechanism proposed in [2] does not fall into either the structure-based or the timer-based categories.
Reference: [10] <author> H.W. Holbrook, S.K. Singhal, and D.R. Cheri-ton. </author> <title> Log-based receiver-reliable multicast for distributed interactive simulation. </title> <booktitle> 1995 ACM Sig-comm Conference, </booktitle> <pages> pages 328-341, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: In this section we focus on proposed solutions to the feedback implosion problem in the context of reliable multicast transport protocols. In [9], solutions to the feedback implosion problem are classified as structure-based or timer-based. Structure-based approaches, such as <ref> [10] </ref>, rely on a designated site (either a dedicated server in the case of [10] or a pre-assigned group member) to process and filter feedback information. 9 Timer-based solutions rely on probabilistic feed-back suppression to avoid implosion at the source. <p> In [9], solutions to the feedback implosion problem are classified as structure-based or timer-based. Structure-based approaches, such as <ref> [10] </ref>, rely on a designated site (either a dedicated server in the case of [10] or a pre-assigned group member) to process and filter feedback information. 9 Timer-based solutions rely on probabilistic feed-back suppression to avoid implosion at the source.
Reference: [11] <author> V. Jacobson. </author> <title> Berkeley tcp evolution from 4.3-tahoe to 4.3-reno. </title> <institution> Proceedings of the British Columbia Internet Engineering Task Force, </institution> <month> July </month> <year> 1990. </year>
Reference-contexts: TCP uses data loss as sign of congestion and shuts the window down to 1 packet after a loss. After the slow start phase, TCP opens the window linearly, and closes it multiplicatively. Both the Tahoe and Reno distribution of BSD UNIX <ref> [11] </ref> incorporate Jacobson's slow-start algorithm. Another variant of TCP called TCP Vegas [3] implements a sender-side congestion avoidance algorithm. In [1], Ahn et al. confirm that Vegas' congestion avoidance scheme yields higher throughput and keeps less data in the network than Reno.
Reference: [12] <author> Van Jacobson. </author> <title> Congestion avoidance and control. </title> <booktitle> ACM SIGCOMM 88, </booktitle> <pages> pages 273-288, </pages> <year> 1988. </year>
Reference-contexts: 1 Introduction The Internet relies on applications performing congestion control to react to network congestion and avoid congestion collapse. Most applications in use on the Internet employ TCP's congestion control algorithms <ref> [12] </ref>. The increasing popularity of group communication applications such as multi-party teleconferencing tools and information dissemination services had lead to a great deal of interest in the development of multicast transport protocols layered on top of IP multicast. <p> Currently, most applications in use on the Internet use TCP's congestion control mechanisms. TCP is the underlying transport protocol in HTTP, FTP, TELNET, and other application protocols requiring reliable delivery. In <ref> [12] </ref>, Jacobson describes his congestion control algorithm for TCP. During slow start, TCP opens the transmission window exponentially as the source receives acknowledgments from the receivers until a packet loss occurs. TCP uses data loss as sign of congestion and shuts the window down to 1 packet after a loss.
Reference: [13] <author> J. Macker and W. Dang. </author> <title> The multicast dissemination protocol (mdp) framework. </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, draft-macker-mdp-framework-00.txt, </institution> <month> November </month> <year> 1996. </year>
Reference-contexts: Reliable multicast protocols also face the feedback implosion problem [4], which becomes critical as mul-ticast group size increases. Several existing reliable multicast transport protocols use probabilistic suppression to limit the amount of feedback received at the source <ref> [7, 13, 17] </ref>. SRM, for example, performs probabilistic suppression based on the round-trip time (RTT) measured between receivers and the source.
Reference: [14] <author> S. McCanne. </author> <title> ns - LBNL network simulator. </title> <note> Available from http://www-nrg.ee.lbl.gov/ns/. </note>
Reference-contexts: This performance study validates the basic congestion control algorithm. The results show that our approach is very promising, however further evaluation is required as the protocol matures. 4.1 Simulator We implemented our congestion control algorithm as a new protocol in NS <ref> [14] </ref> (Network Simulator). NS has already been used in performance studies of TCP [5] and multicast protocols [15].
Reference: [15] <author> S. McCanne and V. Jacobson. </author> <title> Receiver-driven layered multicast. </title> <booktitle> 1996 ACM Sigcomm Conference, </booktitle> <pages> pages 117-130, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: The results show that our approach is very promising, however further evaluation is required as the protocol matures. 4.1 Simulator We implemented our congestion control algorithm as a new protocol in NS [14] (Network Simulator). NS has already been used in performance studies of TCP [5] and multicast protocols <ref> [15] </ref>. By using NS rather than writing a simulator from scratch, or using other simulation tools, we are able to test interactions between our protocol and several TCP variants and gateway queuing strategies, such as drop-tail and RED [6], that have been implemented in NS. <p> Providing congestion control mechanisms is critical in enabling reliable multicast transport protocols to be deployed on the Internet. However, only a few existing multicast transport protocols implement congestion control. Layered Multicast <ref> [15] </ref> addresses the congestion problem in the context of video stream multicast transmission. Streams are decomposed into several layers. Encoding is done such that the composition of layers leads to higher quality video. The lowest layer in the stream is a low quality, low bandwidth stream.
Reference: [16] <author> R. Morris. </author> <title> Bulk multicast transport protocol. </title> <note> Accepted for publication in IEEE Infocom'97. </note>
Reference-contexts: A method of dynamically determining repreresen-tative set size needs to be developed. We also plan to evaluate our congestion algorithm against multiple instances of itself. Group size estimation can greatly enhance the effectiveness of the suppression algorithm. Techniques for doing this have been developed elsewhere <ref> [2, 16] </ref> and need to be investigated in this context. Currently, in very large groups, CI feedback from unrepresented subtrees can still cause transient congestion if losses occur high in the multicast tree.
Reference: [17] <author> B. Sabata, M.J. Brown, and B.A. Denny. </author> <title> Transport protocol for reliable multicast: </title> <booktitle> TRM. Proceedings of the IASTED International Conference on Networks, </booktitle> <pages> pages 143-145, </pages> <month> January </month> <year> 1996. </year>
Reference-contexts: Reliable multicast protocols also face the feedback implosion problem [4], which becomes critical as mul-ticast group size increases. Several existing reliable multicast transport protocols use probabilistic suppression to limit the amount of feedback received at the source <ref> [7, 13, 17] </ref>. SRM, for example, performs probabilistic suppression based on the round-trip time (RTT) measured between receivers and the source.
Reference: [18] <author> H. Schulzrinne, S. Casner, R. Frederick, and V. Jacobson. RTP: </author> <title> A transport protocol for real-time applications. Internet Request for Comments RFC 1889, </title> <month> January </month> <year> 1996. </year>
Reference-contexts: The feedback control mechanism proposed in [2] does not fall into either the structure-based or the timer-based categories. In this approach to feedback control, which is used by the IVS videoconferencing tool [19] and is layered atop of RTP <ref> [18] </ref>, video sources use probabilistic polling to select a set of receivers that should provide feedback. Our approach to feedback control does not require RTT computation between receivers and the source. It relies on representatives to suppress feedback from other receivers.
Reference: [19] <author> T. Turletti. </author> <title> H.261 software codec for video conferencing over the internet. </title> <note> INRIA Research Report 1834, January 1993. 11 </note>
Reference-contexts: The feedback control mechanism proposed in [2] does not fall into either the structure-based or the timer-based categories. In this approach to feedback control, which is used by the IVS videoconferencing tool <ref> [19] </ref> and is layered atop of RTP [18], video sources use probabilistic polling to select a set of receivers that should provide feedback. Our approach to feedback control does not require RTT computation between receivers and the source. It relies on representatives to suppress feedback from other receivers.
References-found: 19

