URL: http://www.pdos.lcs.mit.edu/papers/RoverMosaicThesis.ps
Refering-URL: http://www.pdos.lcs.mit.edu/PDOS-papers.html
Root-URL: 
Title: Rover Mosaic: E-mail Communication for a Full-Function Web Browser  
Author: by Alan F. deLespinasse David K. Gifford 
Degree: Submitted to the Department of Electrical Engineering and Computer Science in partial fulfillment of the requirements for the degrees of Master of Engineering and Bachelor of Science in Electrical Engineering and Computer Science at the  All rights reserved. Author  Certified by  Professor of Electrical Engineering and Computer Science Thesis Supervisor Accepted by F. R. Morgenthaler Chairman, Department Committee on Graduate Theses  
Date: June 1995  May 26, 1995  
Affiliation: MASSACHUSETTS INSTITUTE OF TECHNOLOGY  c Massachusetts Institute of Technology 1995.  Department of Electrical Engineering and Computer Science  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> J. Bartlett. </author> <title> Experience with a wireless World Wide Web client. </title> <booktitle> In Compcon '95, </booktitle> <year> 1995. </year>
Reference-contexts: Recently, several researchers have devoted attention to the specific problem of accessing the Web from mobile clients. The Infopad project [18] treats a wireless machine as basically a dumb terminal, with all the work happening on a stationary workstation. The W4 application <ref> [1] </ref> adds very simple caching and prefetching of one screenfull of text at a time to its wireless palmtop interface. The Wit project, with its W* browser application [33], also uses a palmtop with wireless communication, with a much more sophisticated caching and prefetching method.
Reference: [2] <institution> Berkeley Software Design, Inc. Berkeley software design: Home page. </institution> <note> http://www.bsdi.com/. </note>
Reference-contexts: It runs on a local network of Sun SPARCStations running SunOS and Intel Pen-tium PCs running the BSD/OS operating system <ref> [2] </ref>, and should be easily portable to other variants of UNIX. It has been dubbed Rover Mosaic: Rover after the name of the larger project it is a part of, and Mosaic after the popular Web browser [22] used as its user interface. <p> Compiling requires that the Berkeley Sockets library [28, p. SOCKET (2)] is supported. So far, we've mainly just run the whole system on an Intel Pentium processor running BSD/OS from Berkeley Software Design, Inc. <ref> [2] </ref>. It should port fairly easily to other systems. If there are any major problems, feel free to report them to aldel@media.mit.edu. B.1 Downloading and compiling the source The source package is available on the Web at http://www.psrg.lcs.mit.edu/ aldel/thesis/rmosaic.tar.Z (sorry, no FTP access is available).
Reference: [3] <author> T. Berners-Lee. </author> <title> Style guide for online hypertext. </title> <address> http://www.w3.org/hypertext/WWW/Provider/Style/Overview.html. </address>
Reference-contexts: However, there is one other possible problem which is harder to see. One of the great features of the World Wide Web's hypertext structure, as seen by many advocates <ref> [3] </ref>, is the style of publishing it encourages. Since links are very easy to create and quick to follow, any single page can be very small, to cover a specific subject at a particular level of detail.
Reference: [4] <author> T. Berners-Lee, R. Cailliau, A. Luotonen, H. Frystyk, and A. </author> <title> Secret. The World Wide Web. </title> <journal> Communications of the ACM, </journal> <month> August </month> <year> 1994. </year>
Reference-contexts: New applications allow users to find, retrieve and exchange information more quickly, easily and casually than was previously imagined possible. The most striking examples of such applications are those that provide access to the World Wide Web <ref> [4] </ref>. While the speed and spread of traditional hard-wired networks improve, a curiously opposite trend has also started: many users are trading their hardware's ability to communicate rapidly at any time for other features, such as physical mobility or decreased cost.
Reference: [5] <author> T. Berners-Lee, R. T. Fielding, and H. Frystyk. </author> <title> Hypertext Transfer Protocol HTTP/1.0. IETF HTTP Working Group Draft, </title> <month> March </month> <year> 1995. </year>
Reference-contexts: These variations are a natural result of the ever increasing and diversifying user population, but many of the popular new communication standards are not flexible enough to accommodate all the different hardware configurations. For example, the World Wide Web's Hypertext Transfer Protocol <ref> [5] </ref> assumes that the hardware can support a high-speed TCP connection [13] to any Web server on the Internet at any time. <p> A simple least-recently-used elimination algorithm would seem to be the obvious choice; 11 but in the case of HTTP-retrieved documents, additional information may be available which could lead to more efficient algorithms <ref> [5] </ref>. In some cases, a document actually comes with an explicit expiration date, before which it is (weakly) guaranteed not to change significantly. In most other cases, a last-modified date is specified; a relatively old one can be considered an indication of stability. <p> But when a requested document is not in the cache, rmosaic sets in motion a complex sequence of events which may overlap with other sequences like it, or with other events caused by the user. The first thing that happens is that an empty response (HTTP response 204 <ref> [5] </ref>) to the request is sent, telling Mosaic to continue on as it was in the previ 18 ous document. (In fact, Mosaic does not quite correctly react to this part of the HTTP specification: it unobtrusively displays a rather enigmatic error message, And silence filled the night, before continuing.) The <p> Default is yes. C.1 The request message Exactly one e-mail message is sent for every page requested. This usually contains all of the header fields mentioned above except for Pagetitle and Time2. The message body contains the exact text, in untranslated ASCII, of the HTTP request message <ref> [5] </ref>, including all of its headers and body. C.2 The reply message Exactly one e-mail message is sent for every page fetched. Since prefetching and inlined images result in fetching of pages which were not requested, this means that more reply messages than request messages may be sent.
Reference: [6] <author> T. Berners-Lee, L. Masinter, and M. McCahill. </author> <title> Uniform Resource Locators (URL). Internet RFC 1738, </title> <month> December </month> <year> 1994. </year>
Reference-contexts: They can send the URL (Uniform Resource Locator) <ref> [6] </ref> of the document they want in an e-mail message to an automated gateway server in Switzerland, at address agora@mail.w3.org.
Reference: [7] <author> N. Borenstein and N. Freed. </author> <title> MIME (Multipurpose Internet Mail Extensions) part one: Mechanisms for specifying and describing the format of internet message bodies. Internet RFC 1521, </title> <month> September </month> <year> 1993. </year>
Reference-contexts: The response messages are sent by invoking sendmail or some such low-level e-mail program. There is a separate message for each document fetched. The document is encoded in MIME's base 64 format <ref> [7] </ref> to allow non-text files, such as pictures and audio. Several other pieces of information, such as the name of the user who made the request, are also included (see Appendix C for a full list), to help the cache filler program, rmcache, store the document correctly in the cache. <p> Make sure to use double quotes to make the entire command one argument if it contains any spaces. 37 Appendix C Message formats The e-mail messages passed from rmosaic to rmgate and back to rmcache are MIME-compliant messages <ref> [7] </ref> with special extended header fields. Most of these are common to messages sent in both directions, so they are all described first.
Reference: [8] <author> M. Brown and R. Shillner. DeckScape: </author> <title> An experimental web browser. </title> <note> DEC Systems Research Center Research Report 135a, </note> <month> March </month> <year> 1995. </year>
Reference-contexts: They used e-mail instead of more specialized protocols because of its ubiquitousness; they were not interested in its automatic queueing features. A new experimental Web browser, DeckScape <ref> [8] </ref>, was only brought to the author's attention after the work described in this thesis was completed. DeckScape's user interface offers background fetching and document list organization features that are strikingly similar, and in some ways superior, to those found in the browser created for this thesis. <p> This is also the only known fully-functional Web browser which allows the user to request several more documents while ones already requested are still being loaded. (DeckScape <ref> [8] </ref> cannot yet be considered fully-functional.) This can be thought of as clicking ahead of the incoming data stream, in the same way that keyboard buffers allow the user to type ahead of a slow user interface.
Reference: [9] <author> D. W. Connolly. </author> <title> HyperText Markup Language (HTML): working and background materials. </title> <address> http://www.w3.org/hypertext/WWW/MarkUp/MarkUp.html. </address>
Reference-contexts: In most other cases, a last-modified date is specified; a relatively old one can be considered an indication of stability. There is one major problem, however: the results of HTML form submissions <ref> [9] </ref> have no natural lifetime. For example, two documents retrieved by identical requests in rapid succession may be completely different, and it may be desirable to keep both for comparison, or there may be no reason to keep either at all.
Reference: [10] <author> David H. Crocker. </author> <title> Standard for the format of ARPA internet text messages. Internet RFC 822, </title> <month> August </month> <year> 1982. </year>
Reference-contexts: WEBMAILCMD The command line for sending e-mail to the Rover Mosaic gateway server. This should be the command line for a program which, when run, will take its standard input to be a standard e-mail message, as formatted for SMTP <ref> [10] </ref>, including the headers. This program should then send the message to an appropriate Rover Mosaic gateway server site. A typical value would be /usr/lib/sendmail web serv@vienna.lcs.mit.edu. WEBREPLY The e-mail address at your site for the gateway server to send fetched documents back to.
Reference: [11] <author> M. Ebling, L. Mummert, and D. Steere. </author> <title> Overcoming the network bottleneck in mobile computing. </title> <booktitle> In Workshop on Mobile Computing Systems and Applications, </booktitle> <year> 1994. </year>
Reference-contexts: The Coda file system [17][30] represented pioneering work in the use of prefetched caching and network scheduling to overcome slow or intermittently available network connections when accessing a file system. Ebling et al. <ref> [11] </ref> give a very concise overview of the issues involved in creating the Coda file system and other mobile network applications. The Little Work Project [12] and the Ficus [29] file system continued work in this direction.
Reference: [12] <author> L. B. Huston and P. Honeyman. </author> <title> Disconnected operation for AFS. </title> <booktitle> In USENIX Symposium on Mobile and Location-Independent Computing, </booktitle> <month> August </month> <year> 1993. </year> <month> 41 </month>
Reference-contexts: Ebling et al. [11] give a very concise overview of the issues involved in creating the Coda file system and other mobile network applications. The Little Work Project <ref> [12] </ref> and the Ficus [29] file system continued work in this direction. The usefulness of electronic mail as a general-purpose transport mech 9 anism was pointed out by researchers who were implementing massively parallel algorithms for factoring very large integers [19].
Reference: [13] <author> Information Sciences Institute. </author> <title> Transmission Control Protocol: DARPA internet program protocol specification. Internet RFC 793, </title> <month> September </month> <year> 1981. </year>
Reference-contexts: For example, the World Wide Web's Hypertext Transfer Protocol [5] assumes that the hardware can support a high-speed TCP connection <ref> [13] </ref> to any Web server on the Internet at any time. <p> The gateway machine could, of course, be closer in terms of network topography to the server machine that the client machine is, making the fetching process faster; but since the additional e-mail transit uses essentially the same underlying transport mechanisms (usually TCP <ref> [13] </ref>) as the Web protocols, the total time taken will always be at least as long. Added to this are the inefficiencies caused by binary file encoding, parsing at various stages, and additional information to pass around. <p> It is quite evident from the diagram that this overhead is substantial. (The third curve, marked TCP, shows the times needed to transfer data over a simple raw TCP <ref> [13] </ref> connection. It is shown to indicate the limits on possible future optimizations of the protocols, assuming they do not use additional compression techniques.) Of course, this system was not designed to be used when the standard methods are available.
Reference: [14] <author> A. Joseph, A. deLespinasse, J. Tauber, D. Gifford, and F. Kaashoek. </author> <title> Rover: A toolkit for mobile information access. </title> <type> Unpublished draft, </type> <year> 1995. </year>
Reference-contexts: Results of performance experiments and user evaluations are reported. 1.1 The Rover project The problem of mobile connectivity is addressed in a general sense by MIT's Rover project <ref> [14] </ref>. Current research focuses on ways to more efficiently use communications channels which have very low bandwidth, and/or which may not be available (or have the same bandwidth) at all times. Dockable notebook computers and those with infrared, microwave or cellular phone connections fit this description.
Reference: [15] <author> F. Kaashoek, T. Pinckney, and J Tauber. </author> <title> Dynamic documents: Mobile wireless access to the WWW. In Workshop on Mobile Computing Systems and Applications, </title> <year> 1994. </year>
Reference-contexts: It also uses lazy evaluation and futures techniques to hide latency; these give some of the same advantages as queued requests. In a precursor to the Rover project, MIT researchers experimented with dynamic documents <ref> [15] </ref>, a form of the Dynamic Relocatable Objects mentioned in the previous section. By combining these with simple caching and prefetching algorithms, they were able to make great improvements in the efficiency of network usage when accessing specially modified servers.
Reference: [16] <author> B. Kahle and A. Medlar. </author> <title> An information system for corporate users: Wide Area Information Servers. </title> <type> Technical Report TMC-199, </type> <institution> Thinking Machines, Inc., </institution> <month> April </month> <year> 1991. </year>
Reference-contexts: If the document is to be fetched by any protocol other than HTTP (FTP [27] or WAIS <ref> [16] </ref>, for example), rmgate just runs CERN's line-mode browser, www [26], sends the results back to the client, and exits. HTTP- fetched documents are handled directly by rmgate for a variety of reasons. First of all, www cannot handle HTML forms at all, so HTTP must be implemented by rmgate.
Reference: [17] <author> J. J. Kistler and M. Satyanarayanan. </author> <title> Disconnected operation on the Coda file system. </title> <journal> ACM Transactions on Computer Systems, </journal> <month> October </month> <year> 1992. </year>
Reference: [18] <author> M. T. Le, F. Burghardt, S. Seshan, and J. Rabaey. Infonet: </author> <booktitle> the networking infrastructure of Infopad. In Compcon '95, </booktitle> <year> 1995. </year>
Reference-contexts: All of these are filtered out by the Agora server, leaving only plain ASCII text that standard mail readers can cope with. Recently, several researchers have devoted attention to the specific problem of accessing the Web from mobile clients. The Infopad project <ref> [18] </ref> treats a wireless machine as basically a dumb terminal, with all the work happening on a stationary workstation. The W4 application [1] adds very simple caching and prefetching of one screenfull of text at a time to its wireless palmtop interface.
Reference: [19] <author> A. K. Lenstra and M. S. Manasse. </author> <title> Factoring by electronic mail. </title> <booktitle> In Advances in Cryptology: Proceedings of EUROCRYPT, </booktitle> <year> 1989. </year>
Reference-contexts: The Little Work Project [12] and the Ficus [29] file system continued work in this direction. The usefulness of electronic mail as a general-purpose transport mech 9 anism was pointed out by researchers who were implementing massively parallel algorithms for factoring very large integers <ref> [19] </ref>. They used e-mail instead of more specialized protocols because of its ubiquitousness; they were not interested in its automatic queueing features. A new experimental Web browser, DeckScape [8], was only brought to the author's attention after the work described in this thesis was completed.
Reference: [20] <author> A. Luotonen, H. Frystyk, and T. Berners-Lee. </author> <note> CERN httpd. http://www.w3.org/hypertext/WWW/Daemon/Status.html. </note>
Reference-contexts: For this reason, combined with user interface considerations described in the next section, it was decided to let the cache be manually controlled by the user, rather than automatically filled and flushed. (One other option, recommended and used by CERN <ref> [20] </ref>, is not to cache form results at all, but this would require a major departure from our highly successful policy of only displaying cached documents.) When the document requested by the user is not in the cache, a request for it must be sent out via e-mail.
Reference: [21] <author> Rob McCool. </author> <title> Common Gateway Interface. </title> <address> http://hoohoo.ncsa.uiuc.edu/cgi/intro.html. </address>
Reference-contexts: This allows flexible distribution of work, and can often save a large amount of communication time. For example, a small CGI script <ref> [21] </ref> might easily produce a very large document to be downloaded via HTTP; it would be much more efficient, if possible, to move the script to the client machine and run it there. Another useful example would be to send highly compressed data along with a specialized decompression algorithm. <p> The server was NCSA's HTTPD 1.3 24 [24]. To compute each data point, a request was made for a special URL containing the number of bytes to return. The server generated a document of the appropriate size by calling a CGI script <ref> [21] </ref>. The time was measured from the start of the initial request transmission to the end of the document's final receipt at the client.
Reference: [22] <institution> National Center for Supercomputing Applications. NCSA Mosaic Home Page. </institution> <note> http://www.ncsa.uiuc.edu/SDG/Software/Mosaic/Docs/help-about.html. </note>
Reference-contexts: that any document (including prefetched ones not yet explicitly requested see Chapter 3) may arrive at any time presents an interesting user interface design problem. 2.2 User interface One possible design for the system's user interface would be to make it exactly like a standard Web browser, such as Mosaic <ref> [22] </ref> (see Figure 2-1): the user clicks on a hyperlink within a displayed document, and then 12 links with solid underlines have not been visited, while the ones with dashed underlines have. waits while the document at the other end of that link is loaded from the server. <p> It has been dubbed Rover Mosaic: Rover after the name of the larger project it is a part of, and Mosaic after the popular Web browser <ref> [22] </ref> used as its user interface. <p> reads these messages, places the documents in the cache, and notifies rmosaic of the changes. 3.1 Rover Mosaic the control program Rover Mosaic is started by running the rmosaic program, which begins by spawning two instances of Mosaic version 2.5 for the X Window System, as provided by the NCSA <ref> [22] </ref>. Both are configured to obtain all documents through a proxy HTTP server on the same machine, and rmosaic serves as that server. It therefore has complete control over what is shown in both windows in response to any request. <p> If you want prefetching to always occur, use -pft 0. A.2 Environment variables Two environment variables can be set to customize the behavior of Rover Mosaic (in addition to all the variables that standard Mosaic already recognizes see NCSA's documentation <ref> [22] </ref>). Usually users need not worry about these, as system administrators should set the defaults to appropriate values. WEBMAILCMD The command line for sending e-mail to the Rover Mosaic gateway server.
Reference: [23] <institution> National Center for Supercomputing Applications. </institution> <note> Using Mosaic by remote control. http://www.ncsa.uiuc.edu/SDG/Software/XMosaic/remote-control.html. </note>
Reference-contexts: It therefore has complete control over what is shown in both windows in response to any request. It can also force them to request specific documents at any time by sending remote control commands, which are implemented with Unix signals and files <ref> [23] </ref>. By these means rmosaic exercises a large degree of control over both copies of Mosaic, and can basically use them as an interface to its own functionality.
Reference: [24] <institution> NCSA httpd Development Team. </institution> <note> NCSA httpd Overview. http://hoohoo.ncsa.uiuc.edu/docs/Overview.html. </note>
Reference-contexts: Highly simplified versions of the client and gateway programs were used, in order to eliminate any delays caused by inefficient implementation. The server was NCSA's HTTPD 1.3 24 <ref> [24] </ref>. To compute each data point, a request was made for a special URL containing the number of bytes to return. The server generated a document of the appropriate size by calling a CGI script [21].
Reference: [25] <institution> Netscape Communications Corporation. </institution> <note> Welcome to Netscape. http://home.mcom.com/home/welcome.html. </note>
Reference-contexts: This interface is fine for locally cached documents as well, but it is obviously unacceptable when a fetch request may take several hours to be serviced. Newer browsers, notably the commercial Netscape Navigator TM package (Figure 2-2) <ref> [25] </ref>, offer an improvement: the user can continue to scroll around in the old document while the new one is on its way. This is still not ideal.
Reference: [26] <author> N. Pellow, T. Berners-Lee, and H. Frystyk. </author> <title> WWW line mode browser. </title> <note> http://www.w3.org/hypertext/WWW/LineMode/Status.html. 42 </note>
Reference-contexts: If the document is to be fetched by any protocol other than HTTP (FTP [27] or WAIS [16], for example), rmgate just runs CERN's line-mode browser, www <ref> [26] </ref>, sends the results back to the client, and exits. HTTP- fetched documents are handled directly by rmgate for a variety of reasons. First of all, www cannot handle HTML forms at all, so HTTP must be implemented by rmgate.
Reference: [27] <author> J. Postel and J. Reynolds. </author> <title> File Transfer Protocol (FTP). Internet RFC 959, </title> <year> 1985. </year>
Reference-contexts: If the document is to be fetched by any protocol other than HTTP (FTP <ref> [27] </ref> or WAIS [16], for example), rmgate just runs CERN's line-mode browser, www [26], sends the results back to the client, and exits. HTTP- fetched documents are handled directly by rmgate for a variety of reasons.
Reference: [28] <institution> Regents of the University of California. Unix Programmer's Reference Manual. USENIX Association, </institution> <month> April </month> <year> 1986. </year>
Reference-contexts: Since this file may be simultaneously opened by several copies of rmcache plus rmosaic, it uses the advisory locking mechanism provided by BSD Unix <ref> [28, p. FLOCK (2)] </ref> to prevent race conditions. Once the file is written, a Unix signal is sent to rmosaic to notify it (unless rmosaic is no longer running, in which case rmcache can simply terminate; the file will be read automatically by rmosaic next time it is run). <p> The necessary software for both comes together in a single package; after obtaining it, you can choose to install whichever parts you like. Compiling requires that the Berkeley Sockets library <ref> [28, p. SOCKET (2)] </ref> is supported. So far, we've mainly just run the whole system on an Intel Pentium processor running BSD/OS from Berkeley Software Design, Inc. [2]. It should port fairly easily to other systems. If there are any major problems, feel free to report them to aldel@media.mit.edu.
Reference: [29] <author> P. Reiher, J. Heidemann, D. Ratner, G. Skinner, and G. J. Popek. </author> <title> Resolving file conflicts in the Ficus file system. </title> <booktitle> In USENIX Summer 1994 Technical Conference, </booktitle> <year> 1994. </year>
Reference-contexts: Ebling et al. [11] give a very concise overview of the issues involved in creating the Coda file system and other mobile network applications. The Little Work Project [12] and the Ficus <ref> [29] </ref> file system continued work in this direction. The usefulness of electronic mail as a general-purpose transport mech 9 anism was pointed out by researchers who were implementing massively parallel algorithms for factoring very large integers [19].
Reference: [30] <author> M. Satyanarayanan, J. J. Kistler, L. B. Mummert, M. R. Ebling, P. Ku-mar, and Q. Lu. </author> <title> Experience with disconnected operations in a mobile environment. </title> <booktitle> In USENIX Symposium on Mobile and Location-Independent Computing, </booktitle> <month> August </month> <year> 1993. </year>
Reference: [31] <author> A. </author> <title> Secret. Agora: Retrieving WWW documents through mail. </title> <address> http://www.w3.org/hypertext/WWW/Agora/Overview.html. </address>
Reference-contexts: The user can follow links by replying in turn, with the number of the link to follow. This strategy, called Agora <ref> [31] </ref>, is contrasted with the standard Web protocols (and the new strategy described in Chapter 2) in Figure 1-1.
Reference: [32] <author> G. M. Voelker and B. N. Bershad. Mobisaic: </author> <title> an information system for a mobile wireless computing environment. </title> <booktitle> In Workshop on Mobile Computing Systems and Applications, </booktitle> <year> 1994. </year>
Reference-contexts: By combining these with simple caching and prefetching algorithms, they were able to make great improvements in the efficiency of network usage when accessing specially modified servers. The Mobisaic system <ref> [32] </ref> uses active documents to provide special services that are particularly useful on mobile clients, including pages that automatically change themselves based on the user's location.
Reference: [33] <author> T. Watson. </author> <title> Application design for wireless computing. </title> <booktitle> In Workshop on Mobile Computing Systems and Applications, </booktitle> <year> 1994. </year> <month> 43 </month>
Reference-contexts: The W4 application [1] adds very simple caching and prefetching of one screenfull of text at a time to its wireless palmtop interface. The Wit project, with its W* browser application <ref> [33] </ref>, also uses a palmtop with wireless communication, with a much more sophisticated caching and prefetching method. It also uses lazy evaluation and futures techniques to hide latency; these give some of the same advantages as queued requests.
References-found: 33

