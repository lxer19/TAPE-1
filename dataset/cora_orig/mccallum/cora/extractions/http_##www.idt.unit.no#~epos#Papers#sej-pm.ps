URL: http://www.idt.unit.no/~epos/Papers/sej-pm.ps
Refering-URL: http://www.idt.unit.no/~epos/bibliografia.html
Root-URL: 
Title: Initial Software Process Management in EPOS Special Issue on Software Environments and Factories. manage evolving
Author: Reidar Conradi Espen Osjord, Per H. Westby Chunnian Liu, EPOS TR 
Keyword: Object-Oriented ERA Model, Planning, Software Process Management.  
Note: Software Engineering Journal,  Change-oriented versioning (2.1) to  Detailed address:  
Address: (NTH), Trondheim, Norway  P.R. China  Telematics (DCST), NTH, N-7034 Trondheim, Norway.  
Affiliation: Norwegian Institute of Technology  Beijing Polytechnic Univ., Beijing,  Div. of Computer Systems and  
Email: Email: conradi@idt.unit.no.  
Phone: Phone: +47 7 593444, Fax: +47 7 594466,  
Date: Sept. 1991,  
Abstract: The design, implementation and preliminary experience of EPOS process management is the subject of this paper. 
Abstract-found: 1
Intro-found: 1
Reference: [AIS88] <author> Jose A. Ambros-Ingerson and Sam Steel. </author> <title> Integrating planning, execution and monitoring. </title> <booktitle> In Proc. of AAAI'88, </booktitle> <pages> pages 83-88, </pages> <year> 1988. </year>
Reference-contexts: It will then build a subplan to achieve the POST-condition, and add it to the original plan through the parent's SubTasks relationship. Non-linear planning is modelled as a production system similar to IPEM <ref> [AIS88] </ref>. The generated plan will be a partially ordered task network, not a linear sequence of tasks. Thus the Planner can deal with parallel processing and handle possible goal interactions. Guided by a proper set of domain-dependent heuristics, our non-linear planning is quite efficient.
Reference: [B + 89] <author> K. Benali et al. </author> <title> Presentation of the ALF project. </title> <booktitle> In [MSW90], </booktitle> <address> 23 p., </address> <month> May </month> <year> 1989. </year>
Reference-contexts: has been human creativity vs. automation [Leh87]. 3.2 A Survey of the PM Model EPOS draws from the following PM approaches: * Static process programming as in ARCADIA [TBC + 88] and IPSE 2.5 [War89]. * Dynamic (sub)contracts as in ISTAR [Dow87]. * Static rules for reasoning as in ALF <ref> [B + 89] </ref> and partly MARVEL [KF87]. * Dynamic rules to express triggering as in OSMOSE [DGS89] using Petri nets, and in PCMS [HM88] and ADELE [BE87] with in strumented relationships. * Subtype refinement as in Process-Oriented CM [BL89]. The EPOS PM model is not parsimonious.
Reference: [BE87] <author> Noureddine Belkhatir and Jacky Es-tublier. </author> <title> Software management constraints and action triggering in the ADELE program database. </title> <booktitle> In [NS87], </booktitle> <pages> pages 44-54, </pages> <year> 1987. </year>
Reference-contexts: in ARCADIA [TBC + 88] and IPSE 2.5 [War89]. * Dynamic (sub)contracts as in ISTAR [Dow87]. * Static rules for reasoning as in ALF [B + 89] and partly MARVEL [KF87]. * Dynamic rules to express triggering as in OSMOSE [DGS89] using Petri nets, and in PCMS [HM88] and ADELE <ref> [BE87] </ref> with in strumented relationships. * Subtype refinement as in Process-Oriented CM [BL89]. The EPOS PM model is not parsimonious. However, we think it represents a fruitful compromise between functionality and ease of expression, between static process programming and dynamic subtasking, and between process programs and static/dynamic "rules".
Reference: [BL89] <author> Yves Bernard and Pierre Lavency. </author> <title> A Process-Oriented Approach to Configuration Management. </title> <booktitle> In Proc. of the 11th Int'l ACM-SIGSOFT/IEEE-CS Conference on Software Engineering, </booktitle> <address> Pittsburgh, PA, </address> <year> 1989. </year> <note> 14 p. </note>
Reference-contexts: as in ISTAR [Dow87]. * Static rules for reasoning as in ALF [B + 89] and partly MARVEL [KF87]. * Dynamic rules to express triggering as in OSMOSE [DGS89] using Petri nets, and in PCMS [HM88] and ADELE [BE87] with in strumented relationships. * Subtype refinement as in Process-Oriented CM <ref> [BL89] </ref>. The EPOS PM model is not parsimonious. However, we think it represents a fruitful compromise between functionality and ease of expression, between static process programming and dynamic subtasking, and between process programs and static/dynamic "rules".
Reference: [Bra90] <author> Svein Erik Bratsberg. </author> <title> Food: Supporting explicit relations in a fully object-oriented database. </title> <type> Technical Report 27/90, EPOS Report 109, </type> <address> 17 p. (rev. Oct. 1990), DCST, NTH, Trond-heim, Norway, </address> <month> May </month> <year> 1990. </year> <booktitle> (Proc. 5th Nordic Workshop on Programming Environment Research - NWPER'90, </booktitle> <address> Trondheim, </address> <month> 11-12 June </month> <year> 1990. </year> <booktitle> Presented at IFIP TC-2 Working Conference on Database Semantics, </booktitle> <address> Windere-mere, UK, </address> <month> 2-6 July, </month> <year> 1990). </year>
Reference-contexts: EPOS-OOER represents a unification of ER and aspects of object-orientation. Types are explicitly represented as TypeDescr instances with corresponding type-relationships (4.4). Future extensions may incorporate a fully object-oriented data model and its versioned database, FOOD <ref> [Bra90] </ref>. B THEN S . 4.1 Entities and Relationships Entity types are divided in "passive" Data-Entity and "active" TaskEntity types, both being GenEntity subtypes. Entities or objects (instances of entity types) have identity 4 , and an Is a 5 relationship to their TypeDescr.
Reference: [C + 89] <editor> Reidar Conradi et al. </editor> <booktitle> Design of the Kernel EPOS Software Engineering Environment. In [MSW90], </booktitle> <month> May </month> <year> 1989. </year> <note> Also as DCST TR 8/89 | STF14-A89004 ISBN 82-595-5322-8 | EPOS Report 74, 17 p. </note> <institution> Trondheim, Norway. </institution>
Reference-contexts: Then follows a more formal treatment of EPOS-OOER, with emphasis on PM-relevant type properties and project-specific versioning. Some examples are also presented. An overview of the implementation and some preliminary experience is then reported. Lastly some problems and ideas on future work are discussed. 2 EPOS Background EPOS <ref> [C + 89] </ref> runs on Unix-based workstations. It is implemented in C and Prolog. The EPOS database, EPOSDB [OrMrGB90], is based on the INGRES relational DBMS (later C-ISAM), with client-server protocols using Sun RPC. The 1 User Interface uses the PCE Prolog-based graph-ical package (later Motif and X Windows).
Reference: [Cle88] <author> Geoffrey M. Clemm. </author> <title> The Odin specification language. </title> <booktitle> In [Win88], </booktitle> <pages> pages 144-158, </pages> <year> 1988. </year>
Reference-contexts: These may be shared between 6 Indeed, the Unix CC-compiler may be used both as a pre-processor, compiler, linker, assembler, ... and with different FORMALS within these categories! configurations in a global pool or cache, cf. ODIN <ref> [Cle88] </ref>. 4.3.3 The Project Type Project is a TaskEntity subtype to emphasize the productive aspect. A project has a limited lifespan, and may consist of subprojects. A new project, such as CurrProject, will inherit the parent's workspace. In addition it will create a new, nested transaction with a local workspace.
Reference: [CM91] <author> Reidar Conradi and Carl Chr. Malm. </author> <title> Cooperating transactions and workspaces in epos: Design and preliminary implementation. </title> <editor> In Rudolf Andersen, Janis A. Bubenko jr., and Arne Stlvberg, editors, </editor> <booktitle> Proc. of CAiSE'91, the 3rd International Conference on Advanced Information Systems, </booktitle> <address> Trondheim, Nor-way, </address> <month> 13-15 May </month> <year> 1991, </year> <pages> pages 375-392. </pages> <publisher> LNCS 498, Springer Verlag, </publisher> <address> 578 p., </address> <year> 1991. </year> <note> Also as DCST TR 47/90, EPOS Report 119. </note>
Reference-contexts: As an indication of future work <ref> [CM91] </ref>, the following scenario illustrates how cooperating transactions should behave: 1. Assume that a parent transaction task, ParentT, is executing. 2. Decide to start a new child transaction, ChildT, e.g. to implement a given change request, CR. The child will be given config-description CD = (VD,PD) and ambition A.
Reference: [DGS89] <author> Wolfgang Deiters, Volker Gruhn, and Wilhelm Schafer. </author> <title> Systematic development of software process models. </title> <booktitle> In [GM89], </booktitle> <pages> pages 100-117, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: from the following PM approaches: * Static process programming as in ARCADIA [TBC + 88] and IPSE 2.5 [War89]. * Dynamic (sub)contracts as in ISTAR [Dow87]. * Static rules for reasoning as in ALF [B + 89] and partly MARVEL [KF87]. * Dynamic rules to express triggering as in OSMOSE <ref> [DGS89] </ref> using Petri nets, and in PCMS [HM88] and ADELE [BE87] with in strumented relationships. * Subtype refinement as in Process-Oriented CM [BL89]. The EPOS PM model is not parsimonious.
Reference: [Dow87] <author> Mark Dowson. </author> <title> ISTAR and the contractual approach. </title> <booktitle> In Proc. of the 9th 12 Int'l ACM-SIGSOFT/IEEE-CS Con--ference on Software Engineering, </booktitle> <address> Mon-terey, CA, </address> <pages> pages 287-288, </pages> <month> April </month> <year> 1987. </year>
Reference-contexts: A perpetual argument has been human creativity vs. automation [Leh87]. 3.2 A Survey of the PM Model EPOS draws from the following PM approaches: * Static process programming as in ARCADIA [TBC + 88] and IPSE 2.5 [War89]. * Dynamic (sub)contracts as in ISTAR <ref> [Dow87] </ref>. * Static rules for reasoning as in ALF [B + 89] and partly MARVEL [KF87]. * Dynamic rules to express triggering as in OSMOSE [DGS89] using Petri nets, and in PCMS [HM88] and ADELE [BE87] with in strumented relationships. * Subtype refinement as in Process-Oriented CM [BL89].
Reference: [GM89] <author> Carlo Ghezzi and John A. </author> <title> McDermid, </title> <editor> editors. </editor> <booktitle> Proc. of 2nd European Software Engineering Conference (Coven-try, </booktitle> <address> UK), </address> <publisher> Springer Verlag LNCS 387, </publisher> <address> 496 p., </address> <month> September </month> <year> 1989. </year>
Reference: [Hen88] <editor> Peter B. Henderson, editor. </editor> <booktitle> Proc. of the 3rd ACM SIGSOFT/SIGPLAN Software Engineering Symposium on Practical Software Development Environments (Boston), 257 p., Novem-ber 1988. In ACM SIGPLAN Notices 24(2), </booktitle> <month> Feb. </month> <year> 1989. </year>
Reference: [HM88] <author> Tani Haque and Juan Montes. </author> <title> A Configuration Management System and more (on Alcatel's PCMS). </title> <booktitle> In [Win88], </booktitle> <pages> pages 217-227, </pages> <month> January </month> <year> 1988. </year>
Reference-contexts: process programming as in ARCADIA [TBC + 88] and IPSE 2.5 [War89]. * Dynamic (sub)contracts as in ISTAR [Dow87]. * Static rules for reasoning as in ALF [B + 89] and partly MARVEL [KF87]. * Dynamic rules to express triggering as in OSMOSE [DGS89] using Petri nets, and in PCMS <ref> [HM88] </ref> and ADELE [BE87] with in strumented relationships. * Subtype refinement as in Process-Oriented CM [BL89]. The EPOS PM model is not parsimonious.
Reference: [Hol88] <author> Per Holager. </author> <title> Elements of the design of a change oriented configuration management tool. </title> <type> Technical Report STF44-A88023, 95 p., </type> <institution> ELAB, SINTEF, Trondheim, Norway, </institution> <month> February </month> <year> 1988. </year>
Reference-contexts: Various support tools are under way, including a Product Editor. The EPOS architecture is shown in Figure 1, and commented in the next subsections. checked-out workspaces 2.1 Change-Oriented Versioning EPOSDB is based on change-oriented ver-sioning, COV <ref> [Hol88] </ref> [LCD + 89]. A completed functional change is described by a single, global option 2 , e.g. MachineSun or BugFixCommandA. The change may involve several (related) objects. COV resembles and generalizes conditional compilation. With COV the entire database (DB) is uniformly versioned.
Reference: [KF87] <author> Gail E. Kaiser and Peter H. Feiler. </author> <title> An Architecture for Intelligent Assistance in Software Development. </title> <booktitle> In Proc. of the 9th Int'l ACM-SIGSOFT/ IEEE-CS Conference on Software Engineering, </booktitle> <address> Monterey, CA, </address> <pages> pages 180-188, </pages> <month> April </month> <year> 1987. </year> <note> (on MARVEL). </note>
Reference-contexts: [Leh87]. 3.2 A Survey of the PM Model EPOS draws from the following PM approaches: * Static process programming as in ARCADIA [TBC + 88] and IPSE 2.5 [War89]. * Dynamic (sub)contracts as in ISTAR [Dow87]. * Static rules for reasoning as in ALF [B + 89] and partly MARVEL <ref> [KF87] </ref>. * Dynamic rules to express triggering as in OSMOSE [DGS89] using Petri nets, and in PCMS [HM88] and ADELE [BE87] with in strumented relationships. * Subtype refinement as in Process-Oriented CM [BL89]. The EPOS PM model is not parsimonious.
Reference: [LCD + 89] <author> Anund Lie, Reidar Conradi, Tor M. Didriksen, Even-Andre Karlsson, Svein O. Hallsteinsen, and Per Holager. </author> <title> Change Oriented Versioning in a Software Engineering Database. </title> <editor> In Walter F. Tichy (Ed.): </editor> <booktitle> Proc. of the 2nd International Workshop on Software Configuration Management, </booktitle> <address> Princeton, USA, 25-27 Oct. </address> <year> 1989, </year> <title> 178 p. </title> <booktitle> In ACM SIG-SOFT Software Engineering Notes, </booktitle> <volume> 14 (7), </volume> <pages> pages 56-65, </pages> <month> November </month> <year> 1989. </year>
Reference-contexts: Various support tools are under way, including a Product Editor. The EPOS architecture is shown in Figure 1, and commented in the next subsections. checked-out workspaces 2.1 Change-Oriented Versioning EPOSDB is based on change-oriented ver-sioning, COV [Hol88] <ref> [LCD + 89] </ref>. A completed functional change is described by a single, global option 2 , e.g. MachineSun or BugFixCommandA. The change may involve several (related) objects. COV resembles and generalizes conditional compilation. With COV the entire database (DB) is uniformly versioned.
Reference: [Leh87] <author> M. M. Lehman. </author> <title> Process models, process programming, </title> <booktitle> programming support. In Proc. of the 9th Int'l ACM-SIGSOFT/IEEE-CS Conference on Software Engineering, </booktitle> <address> Monterey, CA, </address> <pages> pages 14-16, </pages> <month> March </month> <year> 1987. </year> <title> (Response to an ICSE'9 Keynote Address by Leon Osterweil). </title>
Reference-contexts: These can be refined or customized into more specific process models, e.g. a waterfall, spiral or project-specific model. This puts high demands on the dynamics and generality of the underlying type system, and on the interaction with CM. A perpetual argument has been human creativity vs. automation <ref> [Leh87] </ref>. 3.2 A Survey of the PM Model EPOS draws from the following PM approaches: * Static process programming as in ARCADIA [TBC + 88] and IPSE 2.5 [War89]. * Dynamic (sub)contracts as in ISTAR [Dow87]. * Static rules for reasoning as in ALF [B + 89] and partly MARVEL [KF87].
Reference: [Lem86] <author> P. Lempp. </author> <title> Integrated computer support in the software engineering environment EPOS | possibilities of support in system development projects. </title> <booktitle> In Proc. 12th Symposium on Mi-croprocessing and Microprogramming, Venice, </booktitle> <pages> pages 223-232. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <month> September </month> <year> 1986. </year>
Reference: [Mey88] <author> Bertrand Meyer. </author> <title> Eiffel: A language and environment for software engineering. </title> <journal> The Journal of Systems and Software, </journal> <pages> pages 199-246, </pages> <year> 1988. </year>
Reference-contexts: This may lead to a proliferation of subtypes and mutual constraints on correct subtype selection, cf. version selection in Figure 4. * Type parameterization with instantiation of generic project types, as an alternative or supplement to subtyping. We can mention Eiffel <ref> [Mey88] </ref> with types such as T (Tparam), where all subtypes of T will be instrumented by Tparam. Generic types may also reduce the number of separate subtypes needed to describe a new programming language, cf.
Reference: [MSW90] <author> N. Madhavji, W. Schaefer, and H. Weber, </author> <title> editors. </title> <booktitle> Proc. of the First International Conference on System Development Environments and Factories | SDEF'89, </booktitle> <address> 9-11 May 1989, Berlin, Lon-don, March 1990. </address> <publisher> Pitman Publishing, </publisher> <address> 241 p. </address>
Reference: [NS87] <author> Howard K. Nichols and Dan Simpson, </author> <title> editors. </title> <booktitle> Proc. of 1st European Software Engineering Conference (Stras-bourg, </booktitle> <address> Sept. 1987), </address> <publisher> Springer Verlag LNCS 289, </publisher> <address> 404 p., </address> <year> 1987. </year>
Reference: [OrMrGB90] <author> Erik Odberg, Bjtrn Munch, Bjtrn Gulla, and Svein Erik Bratsberg. </author> <title> Preliminary design of EPOSDB II, </title> <month> September </month> <year> 1990. </year> <note> 78 p. </note>
Reference-contexts: Some examples are also presented. An overview of the implementation and some preliminary experience is then reported. Lastly some problems and ideas on future work are discussed. 2 EPOS Background EPOS [C + 89] runs on Unix-based workstations. It is implemented in C and Prolog. The EPOS database, EPOSDB <ref> [OrMrGB90] </ref>, is based on the INGRES relational DBMS (later C-ISAM), with client-server protocols using Sun RPC. The 1 User Interface uses the PCE Prolog-based graph-ical package (later Motif and X Windows). Various support tools are under way, including a Product Editor.
Reference: [Sun88] <author> Sun Microsystems, Inc., </author> <title> 2550 Garcia Avenue, Mountain View, CA 94043, USA. Network Software Environment: Reference Manual, part no: </title> <type> 800-2095 (draft) edition, </type> <month> March </month> <year> 1988. </year>
Reference-contexts: This allows access by conventional tools, and corresponds to the copy-modify-merge paradigm in NSE <ref> [Sun88] </ref>. 2 With ternary domain: False, True, and Unset. 2 A single-version workspace has three parts: * The Project Knowledge Base (KB), as Prolog facts.
Reference: [TBC + 88] <author> Richard N. Taylor, Frank C. Belz, Lori A. Clarke, Leon Osterweil, Richard W. Selby, Jack C. Wileden, Alexander L. Wolf, and Michael Young. </author> <title> Foundations for the Arcadia environment architecture. </title> <booktitle> In [Hen88], </booktitle> <pages> pages 1-13, </pages> <month> November </month> <year> 1988. </year>
Reference-contexts: A perpetual argument has been human creativity vs. automation [Leh87]. 3.2 A Survey of the PM Model EPOS draws from the following PM approaches: * Static process programming as in ARCADIA <ref> [TBC + 88] </ref> and IPSE 2.5 [War89]. * Dynamic (sub)contracts as in ISTAR [Dow87]. * Static rules for reasoning as in ALF [B + 89] and partly MARVEL [KF87]. * Dynamic rules to express triggering as in OSMOSE [DGS89] using Petri nets, and in PCMS [HM88] and ADELE [BE87] with in
Reference: [War89] <author> Brian Warboys. </author> <title> The IPSE 2.5 Project: Process Modelling as the basis for a Support Environment. </title> <booktitle> In [MSW90], </booktitle> <address> 26 p., </address> <month> May </month> <year> 1989. </year>
Reference-contexts: A perpetual argument has been human creativity vs. automation [Leh87]. 3.2 A Survey of the PM Model EPOS draws from the following PM approaches: * Static process programming as in ARCADIA [TBC + 88] and IPSE 2.5 <ref> [War89] </ref>. * Dynamic (sub)contracts as in ISTAR [Dow87]. * Static rules for reasoning as in ALF [B + 89] and partly MARVEL [KF87]. * Dynamic rules to express triggering as in OSMOSE [DGS89] using Petri nets, and in PCMS [HM88] and ADELE [BE87] with in strumented relationships. * Subtype refinement as
Reference: [Win88] <editor> Jurgen F. H. Winkler, editor. </editor> <booktitle> Proc. of the ACM Workshop on Software Version and Configuration Control, Gras-sau, FRG, Berichte des German Chapter of the ACM, Band 30, </booktitle> <address> 466 p., Stuttgart, </address> <month> January </month> <year> 1988. </year> <editor> B. G. </editor> <publisher> Teub-ner Verlag. </publisher> <address> epos/papers/sej-pm.tex April 5, </address> <year> 1992 </year> <month> 13 </month>
References-found: 26

