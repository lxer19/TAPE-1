URL: ftp://ic.eecs.berkeley.edu/pub/Papers_Talks/Analog_Group/PostScript/CICC94_charbon.ps.Z
Refering-URL: http://www-cad.eecs.berkeley.edu/HomePages/murgai/publications/my_publications.html
Root-URL: 
Title: Imposing Tight Specifications on Analog IC's through Simultaneous Placement and Module Optimization  
Author: Edoardo Charbon, Enrico Malavasi Davide Pandini and Alberto Sangiovanni-Vincentelli 
Address: Italy  
Affiliation: Department of Electrical Engineering and Computer Sciences, University of California, Berkeley Dipartimento di Elettronica e Informatica, Universita di Padova,  
Abstract: Techniques are presented for simultaneous placement and module optimization for analog ICs. An algorithmic approach to module generation provides alternative sets of modules, optimized with respect to performance but with different trade-offs among area, parasitics and matching. A Simulated Annealing algorithm performs the placement, selecting among the available configurations the one that best fulfills all performance and geometric requirements. Compared to standard approaches, the flexibility of placement is considerably increased, thus allowing the enforcement of tighter specifications. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Rijmenants, J. B. Litsios, T. R. Schwarz and M. G. R. Degrauwe, ILAC: </author> <title> An Automated Layout Tool for Analog CMOS Circuits, </title> <journal> IEEE Journal of Solid State Circuits, </journal> <volume> vol. 24, </volume> <editor> n. </editor> <volume> 2, </volume> <pages> pp. 417-425, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: In order to cope with higher performance sensitivity to layout topology and interconnect parasitics in analog circuits, several techniques have been proposed <ref> [1, 2, 3] </ref>. A fundamental limitation of all these approaches is that physical design is performed with no explicit reference to the performance specifications of the circuit. Recently, performance-driven approaches to the layout of analog circuits have been presented [4].
Reference: [2] <author> M. Kayal, S. Piguet, M. Declercq and B. Hochet, SALIM: </author> <title> A Layout Generator Tool for Analog ICs, </title> <booktitle> in Proc. IEEE Custom Integrated Circuits Conference, </booktitle> <pages> pp. 751-754, </pages> <month> May </month> <year> 1988. </year>
Reference-contexts: In order to cope with higher performance sensitivity to layout topology and interconnect parasitics in analog circuits, several techniques have been proposed <ref> [1, 2, 3] </ref>. A fundamental limitation of all these approaches is that physical design is performed with no explicit reference to the performance specifications of the circuit. Recently, performance-driven approaches to the layout of analog circuits have been presented [4].
Reference: [3] <author> J. M. Cohn, D. J. Garrod, R. A. Rutenbar and L. R. Carley, KOAN/ANAGRAM II: </author> <title> New Tools for Device-Level Analog Placement and Routing, </title> <journal> IEEE Journal of Solid State Circuits, </journal> <volume> vol. 26, </volume> <editor> n. </editor> <volume> 3, </volume> <pages> pp. 330-342, </pages> <month> March </month> <year> 1991. </year>
Reference-contexts: In order to cope with higher performance sensitivity to layout topology and interconnect parasitics in analog circuits, several techniques have been proposed <ref> [1, 2, 3] </ref>. A fundamental limitation of all these approaches is that physical design is performed with no explicit reference to the performance specifications of the circuit. Recently, performance-driven approaches to the layout of analog circuits have been presented [4]. <p> Notice that in every circuit at least one trivial partition P 0 exists, where each path has exactly one edge. Such partition correspondsto separate elemental transistor modules and it is often the starting configuration for placement tools with automatic abutment capability <ref> [3, 8] </ref>. A stack-generation algorithm is used to determine the best partitions according to an optimality criterion based on a cost function. Constraints on parasitic junction capacitances, area, local routability, matching and symmetries are taken into account simultaneously.
Reference: [4] <author> U. Choudhury and A. Sangiovanni-Vincentelli, </author> <title> Constraint Generation for Routing Analog Circuits, </title> <booktitle> in Proc. DAC, </booktitle> <pages> pp. 561-566, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: A fundamental limitation of all these approaches is that physical design is performed with no explicit reference to the performance specifications of the circuit. Recently, performance-driven approaches to the layout of analog circuits have been presented <ref> [4] </ref>. In [5] a complete set of tools for the layout synthesis of analog circuits based on this principle was proposed. The main limitation of this approach was the partitioning of the analog layout synthesis problem into its traditional phases, namely module generation, placement, routing and compaction. <p> In our approach two optimizers are integrated into one placement tool as illustrated in figure 1. Using technology information, Parcar <ref> [4] </ref>, a constraint generator, maps performance specifications onto a set of bounds on critical parasitics. These constraints are first used by the composite module generator Ldo [7], to partition the circuit and to find different alternatives for the set of modules implementing it.
Reference: [5] <author> E. Malavasi, H. Chang, A. Sangiovanni-Vincentelli, E. Charbon, U. Choudhury, E. Felt, G. Jusuf, E. Liu and R. Neff, </author> <title> A Top-down, Constraint-Driven Design Methodologyfor Analog Integrated Circuits, </title> <booktitle> in Analog Circuit Design, </booktitle> <pages> pp. 285-324. </pages> <editor> J. H. Huijsing, R. J. van der Plass-che and W. Sansen Ed., </editor> <publisher> Kluwer Academic Press, </publisher> <year> 1993. </year>
Reference-contexts: A fundamental limitation of all these approaches is that physical design is performed with no explicit reference to the performance specifications of the circuit. Recently, performance-driven approaches to the layout of analog circuits have been presented [4]. In <ref> [5] </ref> a complete set of tools for the layout synthesis of analog circuits based on this principle was proposed. The main limitation of this approach was the partitioning of the analog layout synthesis problem into its traditional phases, namely module generation, placement, routing and compaction.
Reference: [6] <author> J. M. Cohn, D. J. Garrod, R. A. Rutenbar and L. R. Carley, </author> <title> Techniques for Simultaneous Placement and Routing of Custom Analog Cells in KOAN/ANAGRAM II, </title> <booktitle> in Proc. ICCAD, </booktitle> <pages> pp. 394-397, </pages> <month> November </month> <year> 1991. </year>
Reference-contexts: Secondly, junction capacitances are not taken into account. By properly abutting source and drain regions in MOS transistors, critical capacitances can be effectively reduced, with beneficial effects on performance. Attempts to alleviate, in part, these limitations were proposed in <ref> [6] </ref>, where placement and routing of critical nets are performed simultaneously. For efficiency reasons however only a small number of nets can be considered, thus severely limiting the suitability of the approach.
Reference: [7] <author> E. Malavasi, D. Pandini and V. Liberali, </author> <title> Optimum Stacked Layout for Analog CMOS ICs, </title> <booktitle> in Proc. IEEE Custom Integrated Circuits Conference, </booktitle> <pages> pp. 1711-1714, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: In our approach two optimizers are integrated into one placement tool as illustrated in figure 1. Using technology information, Parcar [4], a constraint generator, maps performance specifications onto a set of bounds on critical parasitics. These constraints are first used by the composite module generator Ldo <ref> [7] </ref>, to partition the circuit and to find different alternatives for the set of modules implementing it. Each alternative solution is chosen so as to minimize a cost function accounting for all analog constraints. <p> In Section 2 the optimal module generation process is described. In Section 3 the placement algorithm is outlined and illustrated with simple examples. In Section 4 the practical suitability of our approach is demonstrated through circuits of industrial strength. 2 Optimum Module Generation Ldo <ref> [7] </ref> is a tool for MOS transistor composite stack generation. All circuit transistors are split into modules abutted with each other to form stacks, thus sharing source/drain regions between adjacent elements. Stack generation is performed by exploiting the equivalence between stacks and paths in the circuit graph. <p> If F is larger than the cost of the cheapest clique found so far, augmentation is not carried out and the component is discarded. Admissibility is preserved if F is an optimistic estimate, i.e. it is F F <ref> [7] </ref>. operated by the module generator on the ground of transistor polarity. 3 Placement Algorithm Puppy-A [8] is a placement tool for analog custom modules based on SA. The original annealing algorithm has been modified to operate in parallel with the module optimizer.
Reference: [8] <author> E. Charbon, E. Malavasi, U. Choudhury, A. Casotto and A. Sangiovanni Vincentelli, </author> <title> A Constraint-Driven Placement Methodology for Analog Integrated Circuits, </title> <booktitle> in Proc. IEEE Custom Integrated Circuits Conference, </booktitle> <pages> pp. 2821-2824, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: These constraints are first used by the composite module generator Ldo [7], to partition the circuit and to find different alternatives for the set of modules implementing it. Each alternative solution is chosen so as to minimize a cost function accounting for all analog constraints. Then Puppy-A <ref> [8] </ref>, a SA based placement algorithm, is used, whose set of moves has been extended to include swaps between alternative solutions. The cost function minimized by the annealing accounts for parasitic control and topological constraint minimization. <p> Notice that in every circuit at least one trivial partition P 0 exists, where each path has exactly one edge. Such partition correspondsto separate elemental transistor modules and it is often the starting configuration for placement tools with automatic abutment capability <ref> [3, 8] </ref>. A stack-generation algorithm is used to determine the best partitions according to an optimality criterion based on a cost function. Constraints on parasitic junction capacitances, area, local routability, matching and symmetries are taken into account simultaneously. <p> Admissibility is preserved if F is an optimistic estimate, i.e. it is F F [7]. operated by the module generator on the ground of transistor polarity. 3 Placement Algorithm Puppy-A <ref> [8] </ref> is a placement tool for analog custom modules based on SA. The original annealing algorithm has been modified to operate in parallel with the module optimizer. In particular, one of the four basic components which completely specify the algorithm [11, 12], the move set, has been extended.
Reference: [9] <author> C. Bron and J. Kerbosch, </author> <title> Algorithm 457 Finding all cliques of an undirected graph, </title> <journal> Comm. ACM, </journal> <volume> vol. 16, </volume> <editor> n. </editor> <volume> 9, </volume> <pages> pp. 575-577, </pages> <month> September </month> <year> 1973. </year>
Reference-contexts: Every path becomes a vertex for a path-graph G p , whose edges link two vertices if and only if the correspondingpaths are mutually compatible, that is if they can coexist in the same partition. In phase ii, The clique problem is solved with the Bron-Kerbosch iterative algorithm <ref> [9] </ref>. At each step of this algorithm, an attempt is made to augment a complete component. If augmentation is not possible, the complete component is maximal, i.e. it is a clique.
Reference: [10] <author> S. Wimer, R. Y. Pinter and J. A. Feldman, </author> <title> Optimal Chaining of CMOS Transistors in a Functional Cell, </title> <journal> IEEE Trans. on CAD, </journal> <volume> vol. CAD-6, N.5, </volume> <pages> pp. 795-801, </pages> <month> September </month> <year> 1987. </year>
Reference-contexts: In phase ii, The clique problem is solved with the Bron-Kerbosch iterative algorithm [9]. At each step of this algorithm, an attempt is made to augment a complete component. If augmentation is not possible, the complete component is maximal, i.e. it is a clique. In <ref> [10] </ref> a pairing criterion was proposed to use this algorithm for a layout style, where n-type and p-type transistors are respectively aligned along parallel rows. However, in analog circuits n-type and p-type transistors are not usually balanced in number and size as they are in standard CMOS logic gates.
Reference: [11] <author> S. Kirkpatrick, C. Gelatt and M. Vecchi, </author> <title> Optimization by simulated annealing, </title> <journal> Science, </journal> <volume> vol. 220, </volume> <editor> n. </editor> <volume> 4598, </volume> <pages> pp. 671-680, </pages> <month> May </month> <year> 1983. </year>
Reference-contexts: The original annealing algorithm has been modified to operate in parallel with the module optimizer. In particular, one of the four basic components which completely specify the algorithm <ref> [11, 12] </ref>, the move set, has been extended. The new move set includes simple moves such as translations, rotations and combinations of the two as well as moves involving two modules, such as swaps and abutments. Furthermore, moves for swapping alternative module implementations within the circuit has been added.
Reference: [12] <author> F. Romeo, </author> <title> Simulated Annealing: Theory and Applications to Layout Problems. </title> <type> PhD Thesis, </type> <institution> Memorandum UCB/ERL M89/29, University of California at Berkeley, </institution> <month> March </month> <year> 1989. </year>
Reference-contexts: The original annealing algorithm has been modified to operate in parallel with the module optimizer. In particular, one of the four basic components which completely specify the algorithm <ref> [11, 12] </ref>, the move set, has been extended. The new move set includes simple moves such as translations, rotations and combinations of the two as well as moves involving two modules, such as swaps and abutments. Furthermore, moves for swapping alternative module implementations within the circuit has been added. <p> Convergence Properties SA has been proved to converge for the class of problems to which placement belongs provided a set of conditions. In <ref> [12, 13] </ref> conditions were set on the number of moves per temperature, t k ! 1. A stronger result, proved, among others, by [14], guarantees convergencefor t k = 1, and T k = a=ln k, with a sufficiently large. <p> In [12, 13] conditions were set on the number of moves per temperature, t k ! 1. A stronger result, proved, among others, by [14], guarantees convergencefor t k = 1, and T k = a=ln k, with a sufficiently large. Claim: The same conditions for convergence of <ref> [12] </ref> hold for the proposed placement scheme. The annealing algorithm with the proposed modification is still a Markov Chain. Since all new states added to the search space are all reachable, and the same properties apply to these states as to the others, the chain is regular and recurrent. <p> Hence, the standard theory of homogeneous Markov Chains applies. As a result, at a given temperature all states of the chain converge to a stationary probability distribution (Theorems 3.1.4 and 3.2.1 in <ref> [12] </ref>). This implies that at each temperature a global minimum is reached, thus the convergence of the algorithm follows (Propositions 3.2.1, 3.2.2 and Theorem 3.2.2 in [12]). <p> As a result, at a given temperature all states of the chain converge to a stationary probability distribution (Theorems 3.1.4 and 3.2.1 in <ref> [12] </ref>). This implies that at each temperature a global minimum is reached, thus the convergence of the algorithm follows (Propositions 3.2.1, 3.2.2 and Theorem 3.2.2 in [12]). Similar arguments can be used to prove convergence in the sense of [14], thus ensuring that the whole approach is robust. 4 Results Several industrial-strength circuits have been tested on the proposed algorithm. Some of the most relevant examples to this discussion are described in detail hereafter.
Reference: [13] <author> M. Lundy and A. Mees, </author> <title> Convergence of the Annealing Algorithm, </title> <journal> Mathematical Programming, </journal> <volume> vol. 34, </volume> <pages> pp. 111-124, </pages> <year> 1986. </year>
Reference-contexts: Convergence Properties SA has been proved to converge for the class of problems to which placement belongs provided a set of conditions. In <ref> [12, 13] </ref> conditions were set on the number of moves per temperature, t k ! 1. A stronger result, proved, among others, by [14], guarantees convergencefor t k = 1, and T k = a=ln k, with a sufficiently large.
Reference: [14] <author> B. Hajek, </author> <title> Cooling Schedules for Optimal Annealing, </title> <journal> Mathematics of Operations Research, </journal> <volume> vol. 13, </volume> <editor> n. </editor> <volume> 2, </volume> <pages> pp. 311-329, </pages> <month> May </month> <year> 1988. </year>
Reference-contexts: Convergence Properties SA has been proved to converge for the class of problems to which placement belongs provided a set of conditions. In [12, 13] conditions were set on the number of moves per temperature, t k ! 1. A stronger result, proved, among others, by <ref> [14] </ref>, guarantees convergencefor t k = 1, and T k = a=ln k, with a sufficiently large. Claim: The same conditions for convergence of [12] hold for the proposed placement scheme. The annealing algorithm with the proposed modification is still a Markov Chain. <p> This implies that at each temperature a global minimum is reached, thus the convergence of the algorithm follows (Propositions 3.2.1, 3.2.2 and Theorem 3.2.2 in [12]). Similar arguments can be used to prove convergence in the sense of <ref> [14] </ref>, thus ensuring that the whole approach is robust. 4 Results Several industrial-strength circuits have been tested on the proposed algorithm. Some of the most relevant examples to this discussion are described in detail hereafter. Consider the two-stage amplifier of Figure 6.
References-found: 14

