URL: http://www.cs.berkeley.edu/~daw/chosen-proto.ps
Refering-URL: http://www.cs.berkeley.edu/~daw/me.html
Root-URL: 
Email: fkelsey,schneierg@counterpane.com daw@cs.berkeley.edu  
Title: Protocol Interactions and the Chosen Protocol Attack  
Author: John Kelsey Bruce Schneier David Wagner E. Minnehaha Parkway 
Address: Soda Hall Minneapolis, MN 55419 Berkeley, CA 94720-1776  
Affiliation: Counterpane Systems U.C. Berkeley  C.S. Div.,  
Abstract: There are many cases in the literature in which reuse of the same key material for different functions can open up security holes. In this paper, we discuss such interactions between protocols, and present a new attack, called the chosen protocol attack, in which an attacker may write a new protocol using the same key material as a target protocol, which is individually very strong, but which interacts with the target protocol in a security-relevant way. We finish with a brief discussion of design principles to resist this class of attack.
Abstract-found: 1
Intro-found: 1
Reference: [And95] <author> R. Anderson, </author> <title> "Robustness Principles for Public Key Protocols," </title> <booktitle> Advances in Cryptology | CRYPTO '95, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 236-247. </pages>
Reference-contexts: In particular, their work on extensible fail-stop (and fail-safe) protocols provides significant progress towards ensuring composibility of protocols, even when private keys are reused. We conclude that the fail-stop design approach is 2 Some of these rules were inspired by <ref> [And95] </ref>. 10 valuable in the context of chosen-protocol attacks, and that including unique identifiers in each message is a powerful defensive design technique. 3.
Reference: [And97a] <author> R. </author> <type> Anderson personal communication, </type> <year> 1997. </year>
Reference: [And97b] <author> R. Anderson, </author> <title> "Perfect Forward Secrecy", </title> <note> presented at the rump session of Eurocrypt '97, </note> <year> 1997. </year>
Reference-contexts: There is sometimes a temptation to reuse keys for related applications|this should be avoided whenever possible. If there is only one certified key pair, it should be used to sign (and perhaps even derive) other single-use public keys, as in <ref> [And97b, SH97] </ref>. This eliminates the overwhelming majority of possible protocol interactions. 2.
Reference: [AK97] <author> R. Anderson, M. Kuhn, </author> <title> "Low Cost Attacks on Tamper Resistant Devices," </title> <booktitle> these proceedings. </booktitle>
Reference-contexts: If Alice complies, then the attacker ends up with the decryption. 3.2 RSA signing and zero knowledge A standard way of doing zero-knowledge proofs using RSA also provides an RSA signing oracle for a clever attacker.[And97a, MOV97] 3.3 A Banking Protocol Interaction In <ref> [AK97] </ref>, Ross Anderson describes a potentially disasterous interaction between two mechanisms in a bank's system for managing ATM cards.
Reference: [Bal93] <author> D. Balenson, </author> <title> "Privacy Enhancement for Internet Electronic Mail: Part III| Algorithms, Modes, and Identifiers," </title> <type> RFC 1423, </type> <month> Feb </month> <year> 1993. </year>
Reference-contexts: If many applications are allowed to use the same smart card, then there will likely be some use of keys for different applications. Already VeriSign certificates are used to provide security for PEM <ref> [Lin93, Ken93, Bal93, Kal93, Sch95, Sch96] </ref>, S/MIME [RSA96, Dus96], SSL [FKK96], and SET [VM96].
Reference: [BAN90] <author> M. Burrows, M. Abadi, and R. Needham, </author> <title> "A Logic of Authentication," </title> <journal> ACM Transactions on Computer Systems, v. </journal> <volume> 8, </volume> <editor> n. </editor> <volume> 1, </volume> <month> Feb </month> <year> 1990, </year> <pages> pp. 18-36. </pages>
Reference-contexts: This man-in-the-middle attack can work again and again. Each time Alice verifies her age to Mallory, he can now use her information to view web pages on an arbitrary merchants' pages, and stick her with the bill. 7 5.2 The Wide Mouth Frog Protocol The Wide Mouth Frog protocol <ref> [BAN90, Sch96] </ref> is a well-known protocol for exchanging a symmetric encryption key using a trusted third party with whom each party shares a secret symmetric key. Its simplicity makes it an ideal example of how the chosen-protocol attack can work on symmetric, as well as public-key, protocols.
Reference: [Cur96] <author> I. Curry, </author> <title> "Entrust Overview, Version 1.0," </title> <booktitle> Entrust Technologies, </booktitle> <address> Oct. 96. http://www.entrust.com/downloads/overview.pdf </address>
Reference-contexts: If many applications are allowed to use the same smart card, then there will likely be some use of keys for different applications. Already VeriSign certificates are used to provide security for PEM [Lin93, Ken93, Bal93, Kal93, Sch95, Sch96], S/MIME [RSA96, Dus96], SSL [FKK96], and SET [VM96]. Entrust Technologies <ref> [Cur96, Oor96] </ref> markets technology to provide for a common key archetecture over multiple applications. 3 Accidental Interactions There are several examples of very simple known-protocol attacks. (These attacks are generally much simpler than the chosen protocol attacks.) 3.1 RSA signing and encryption It has long been known that carelessly providing RSA
Reference: [Dus96] <author> S. Dusse, </author> <title> "S/MIME Message Specification: PKCS Security Services for MIME," IETF Networking Group Internet Draft, </title> <month> Sep </month> <year> 1996. </year> <month> ftp://ietf.org/internet-drafts/draft-dusse-mime-msg-spec-00.txt </month>
Reference-contexts: If many applications are allowed to use the same smart card, then there will likely be some use of keys for different applications. Already VeriSign certificates are used to provide security for PEM [Lin93, Ken93, Bal93, Kal93, Sch95, Sch96], S/MIME <ref> [RSA96, Dus96] </ref>, SSL [FKK96], and SET [VM96].
Reference: [FKK96] <author> A. Freier, P. Karlton, and P. Kocher, </author> <title> "The SSL Protocol Version 3.0", </title> <address> ftp://ftp.netscape.com/pub/review/ssl-spec.tar.Z, </address> <month> March 4 </month> <year> 1996, </year> <title> Internet Draft, </title> <booktitle> work in progress. </booktitle>
Reference-contexts: If many applications are allowed to use the same smart card, then there will likely be some use of keys for different applications. Already VeriSign certificates are used to provide security for PEM [Lin93, Ken93, Bal93, Kal93, Sch95, Sch96], S/MIME [RSA96, Dus96], SSL <ref> [FKK96] </ref>, and SET [VM96].
Reference: [GS95] <author> L. Gong and P. Syverson, </author> <title> "Fail-Stop Protocols: An Approach to Designing Secure Protocols," </title> <booktitle> Fifth International Working Conference on Dependable Computing for Critical Applications, </booktitle> <month> Sept. </month> <year> 1995. </year>
Reference-contexts: The goal here is that each different use of a given key has a different unique identifier, and that this identifier is involved in whatever cryptographic operations are done using that key. This guideline is similar to the design approach, fail-stop protocols, advocated in <ref> [GS95] </ref>. There they suggested signing every protocol message, and including in each message a header containing the sender's name, the recipient's name, the protocol identifier and version number, a sequence number, and a nonce or timestamp.
Reference: [GS96] <author> E. Gabber and A. Silberschatz, </author> <title> "Agora: A Minimal Distributed Protocol for Electronic Commerce," </title> <booktitle> The Second USENIX Workshop on Electronic Commerce Proceedings, USENIX Association, </booktitle> <year> 1996, </year> <pages> pp. 223-232. </pages>
Reference-contexts: Each is designed to work with the target protocol, so that sharing of keys makes some degree of sense. This is not a necessary trait of chosen protocols, although may provide plausable deniability to an attacker deliberately designing a chosen protocol. 5.1 Agora In <ref> [GS96] </ref>, the authors introduce Agora, a simple electronic payment protocol designed specifically for pay-per-view web pages. The protocol for making a payment can be described as follows. (In this description, Alice is buying something from Bob.) Protocol A: Agora (the Target Protocol): 1.
Reference: [Kal93] <author> B.S. Kaliski, </author> <title> "Privacy Enhancement for Internet Electronic Mail: Part IV| Key Certificates and Related Services," </title> <type> RFC 1424, </type> <month> Feb </month> <year> 1993. </year> <month> 12 </month>
Reference-contexts: If many applications are allowed to use the same smart card, then there will likely be some use of keys for different applications. Already VeriSign certificates are used to provide security for PEM <ref> [Lin93, Ken93, Bal93, Kal93, Sch95, Sch96] </ref>, S/MIME [RSA96, Dus96], SSL [FKK96], and SET [VM96].
Reference: [Ken93] <author> S.T Kent, </author> <title> "Privacy Enhancement for Internet Electronic Mail: Part II| Certificate Based Key Management," </title> <type> RFC 1422, </type> <month> Feb </month> <year> 1993. </year>
Reference-contexts: If many applications are allowed to use the same smart card, then there will likely be some use of keys for different applications. Already VeriSign certificates are used to provide security for PEM <ref> [Lin93, Ken93, Bal93, Kal93, Sch95, Sch96] </ref>, S/MIME [RSA96, Dus96], SSL [FKK96], and SET [VM96].
Reference: [Lin93] <author> J. Linn, </author> <title> "Privacy Enhancement for Internet Electronic Mail: Part I| Message Encipherment and Authentication Procedures," </title> <type> RFC 1421, </type> <month> Feb </month> <year> 1993. </year>
Reference-contexts: If many applications are allowed to use the same smart card, then there will likely be some use of keys for different applications. Already VeriSign certificates are used to provide security for PEM <ref> [Lin93, Ken93, Bal93, Kal93, Sch95, Sch96] </ref>, S/MIME [RSA96, Dus96], SSL [FKK96], and SET [VM96].
Reference: [Mor96] <author> R. Morris, </author> <note> invited talk at Crypto '96. </note>
Reference-contexts: The chosen protocol attack brings to mind Bob Morris's comments at Crypto '96; he discussed building systems that are secure "even when they contain a John Walker" <ref> [Mor96] </ref> or, more generally, a nameless insider intent on attacking or subverting the system.
Reference: [MOV97] <editor> A. J. Menezes, P. C. Van Oorschot, S. A. Vanstone, </editor> <booktitle> Handbook of Applied Cryptography, </booktitle> <address> p. 418, </address> <publisher> CRC Press, </publisher> <year> 1997. </year>
Reference: [Oor96] <author> P.C. van Ooorschot, </author> <title> "Standards Supported by Entrust, </title> <note> Version 2.0," Entrust Technologies, Dec 1996. http://www.entrust.com/downloads/standards.pdf </note>
Reference-contexts: If many applications are allowed to use the same smart card, then there will likely be some use of keys for different applications. Already VeriSign certificates are used to provide security for PEM [Lin93, Ken93, Bal93, Kal93, Sch95, Sch96], S/MIME [RSA96, Dus96], SSL [FKK96], and SET [VM96]. Entrust Technologies <ref> [Cur96, Oor96] </ref> markets technology to provide for a common key archetecture over multiple applications. 3 Accidental Interactions There are several examples of very simple known-protocol attacks. (These attacks are generally much simpler than the chosen protocol attacks.) 3.1 RSA signing and encryption It has long been known that carelessly providing RSA
Reference: [RSA96] <author> RSA Data Security, Inc., </author> <title> "S/MIME Implementation Guide Interoperability Profiles, Version 2," S/MIME Editor, </title> <type> Draft, </type> <month> Oct </month> <year> 1996. </year> <month> ftp://ftp.rsa.com/pub/S-MIME/IMPGV2.txt </month>
Reference-contexts: If many applications are allowed to use the same smart card, then there will likely be some use of keys for different applications. Already VeriSign certificates are used to provide security for PEM [Lin93, Ken93, Bal93, Kal93, Sch95, Sch96], S/MIME <ref> [RSA96, Dus96] </ref>, SSL [FKK96], and SET [VM96].
Reference: [Sch96] <author> B. Schneier, </author> <title> Applied Cryptography, Second Edition, </title> <publisher> John Wiley & Sons, </publisher> <year> 1996. </year>
Reference-contexts: If many applications are allowed to use the same smart card, then there will likely be some use of keys for different applications. Already VeriSign certificates are used to provide security for PEM <ref> [Lin93, Ken93, Bal93, Kal93, Sch95, Sch96] </ref>, S/MIME [RSA96, Dus96], SSL [FKK96], and SET [VM96]. <p> This man-in-the-middle attack can work again and again. Each time Alice verifies her age to Mallory, he can now use her information to view web pages on an arbitrary merchants' pages, and stick her with the bill. 7 5.2 The Wide Mouth Frog Protocol The Wide Mouth Frog protocol <ref> [BAN90, Sch96] </ref> is a well-known protocol for exchanging a symmetric encryption key using a trusted third party with whom each party shares a secret symmetric key. Its simplicity makes it an ideal example of how the chosen-protocol attack can work on symmetric, as well as public-key, protocols. <p> Bob is convinced. 5.3 The DASS Public-Key Protocol DASS (Distributed Authentication Security Service) is a protocol for mutual authentication and key exchange developed by Digital Equipment Corporation and marketed in a product called SPX [TAP90, TA91]. Protocol E: DASS (the Target Protocol) Protocol steps deleted for space considerations. See <ref> [Sch96] </ref>. To build a chosen protocol, we have to add some additional functionality to the system. In this example, we add a new protocol to have Trent generate random public keys for us, as needed. Protocol F: Protocol for Requesting a Temporary Public Key (the Chosen Protocol) 1.
Reference: [Sch95] <author> B. Schneier, </author> <title> E-Mail Security, </title> <publisher> John Wiley & Sons, </publisher> <year> 1995. </year>
Reference-contexts: If many applications are allowed to use the same smart card, then there will likely be some use of keys for different applications. Already VeriSign certificates are used to provide security for PEM <ref> [Lin93, Ken93, Bal93, Kal93, Sch95, Sch96] </ref>, S/MIME [RSA96, Dus96], SSL [FKK96], and SET [VM96].
Reference: [SH97] <author> B. Schneier and C. Hall, </author> <title> "An Improved E-Mail Security Protocol," </title> <note> in preparation. </note>
Reference-contexts: There is sometimes a temptation to reuse keys for related applications|this should be avoided whenever possible. If there is only one certified key pair, it should be used to sign (and perhaps even derive) other single-use public keys, as in <ref> [And97b, SH97] </ref>. This eliminates the overwhelming majority of possible protocol interactions. 2.
Reference: [TA91] <author> J. Tardo and K. Alagappan, "SPX: </author> <title> Global Authentication Using Public Key Certificates," </title> <booktitle> Proceedings of the 1991 IEEE Computer Society Symposium on Security and Privacy, </booktitle> <year> 1991, </year> <pages> pp. 232-244. </pages>
Reference-contexts: Mallory now intercepts all messages from Bob to Alice, and impersonates her. Bob is convinced. 5.3 The DASS Public-Key Protocol DASS (Distributed Authentication Security Service) is a protocol for mutual authentication and key exchange developed by Digital Equipment Corporation and marketed in a product called SPX <ref> [TAP90, TA91] </ref>. Protocol E: DASS (the Target Protocol) Protocol steps deleted for space considerations. See [Sch96]. To build a chosen protocol, we have to add some additional functionality to the system. In this example, we add a new protocol to have Trent generate random public keys for us, as needed.
Reference: [TAP90] <author> J. Tardo, K. Alagappan, and R. Pitkin, </author> <title> "Public Key Based Authentication Using Internet Certificates," </title> <booktitle> USENIX Security II Workshop Proceedings, </booktitle> <year> 1990, </year> <pages> pp. 121-123. </pages>
Reference-contexts: Mallory now intercepts all messages from Bob to Alice, and impersonates her. Bob is convinced. 5.3 The DASS Public-Key Protocol DASS (Distributed Authentication Security Service) is a protocol for mutual authentication and key exchange developed by Digital Equipment Corporation and marketed in a product called SPX <ref> [TAP90, TA91] </ref>. Protocol E: DASS (the Target Protocol) Protocol steps deleted for space considerations. See [Sch96]. To build a chosen protocol, we have to add some additional functionality to the system. In this example, we add a new protocol to have Trent generate random public keys for us, as needed.
Reference: [VM96] <author> Visa and MasterCard, </author> <title> "Secure Electronic Transaction (SET) Specification, Books 1-3" June 1996, http://www.visa.com.cgi-bin/vee/sf/set/intro.html or http://www.mastercard.com/set/set.htm. This article was processed using the L A T E X macro package with LLNCS style 13 </title>
Reference-contexts: If many applications are allowed to use the same smart card, then there will likely be some use of keys for different applications. Already VeriSign certificates are used to provide security for PEM [Lin93, Ken93, Bal93, Kal93, Sch95, Sch96], S/MIME [RSA96, Dus96], SSL [FKK96], and SET <ref> [VM96] </ref>.
References-found: 24

