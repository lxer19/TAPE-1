URL: ftp://ftp.cm.deakin.edu.au/pub/TR/Computing/TR-C95-21.ps.gz
Refering-URL: http://gollum.cm.deakin.edu.au/techreports.html
Root-URL: 
Email: gjw@deakin.EDU.AU  
Title: The Design and Implementation of an Event Driven Software Monitor within the RHODOS Microkernel impossible
Author: G. Wickham 
Note: Although it is  This work was partly supported by the Australian Research Council under Grants A49232429 and the Deakin University Research Grant 0504010151.  
Address: Geelong Victoria 3217, Australia  
Affiliation: School of Computing and Mathematics Deakin University,  
Abstract: Although microkernel based operating systems is an relatively new area of research, many developers are seriously pursuing microkernel based operating systems as a replacement of the more conventional monolithic based operating system. However, the major drawback of the microkernel is that it is inherently slower than a monolithic kernel. One of the more traditional methods of performance analysis is that of event driven software monitoring (termed profiling). In an determine whether profiling has relevance to the new breed of microkernel, a implementation has been evaluated within the RHODOS micro-kernel. This report discusses the implementation, the benefits and the limitations of profiling within a microkernel based environment. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Accett, R. Baron, W. Bolosky, D. Golub, R. Rashid, A Tevavian and M. Young, </author> <title> Mach: A New Kernel Foundation for Unix Development, </title> <booktitle> Proceedings of the Summer 1986 USENIX Conference, </booktitle> <month> July </month> <year> 19867, </year> <pages> pp: 93-113. </pages>
Reference-contexts: Currently publications concerning the inbuilt performance diagnostics of microkernels are notable only by their absence. Of the two major commercial microkernels Mach <ref> [1] </ref> and QNX [4], there has been no publications concerning efforts at determining and improving system performance. There are other microkernel based operating systems, for example Chorus [6], however these microkernels use object orientated techniques to enforce separation of the kernel services rather than adhere to the strict microkernel paradigm. <p> The increased overhead usually results in profiling only enabled when absolutely necessary. This section details an experiment to determine the weight profiling imposes on the system call interface. Two different sets of results are produced below. 3.1 Method As documented in previous reports <ref> [1] </ref>, the overhead of the system call interface and the context switcher is most easily demonstrated by having a single process repetitively call the timer_read () system call. With no interruptions between consecutive calls to timer_read () the period will be a constant minimal value.
Reference: [2] <author> D. De Paoli, </author> <title> The Multiple Strategy Process Migration Manager for RHODOS: The Logical Design, </title> <type> Technical Report TR-C93/37, </type> <institution> School of Computing and Mathematics, Deakin University (Geelong), </institution> <month> 21st December </month> <year> 1993. </year>
Reference-contexts: As RHODOS is still in its infancy, there are few applications which impose a significant load on the system which makes an evaluation difficult. However, it is possible to monitor a process migration and thus determine how profiling affects the performance of a migration. The RHODOS Process Migration Manager <ref> [2] </ref>, is an application that directs kernel and system servers to transparently relocate a process from one computer to another. As the Process Migration Manager uses the services of other kernel and system servers to effect the transfer, there are many instances of inter process communication and context switching.
Reference: [3] <author> G. Gerrity, A. Goscinski, J. Indulska, W. Toomey and Z. Zhu, </author> <title> RHODOS A test bed for studying Design Issues in Distributed Operating Systems, </title> <booktitle> Proceedings of the 2nd Singapore International Conference on Networks (SINCON91), </booktitle> <month> September </month> <year> 1991. </year>
Reference-contexts: This report documents the viability of profiling techniques within a microkernel based operating system. To determine whether this particular performance analysis technique (which is used extensively in monolithic kernels) is a suitable mechanism it is evaluated by implementing it within the RHODOS Distributed Operating System <ref> [3] </ref>. Different methods of profiling have been used extensively in monolithic kernel based operating systems. There are two common analysis techniques which can be used, the first being periodic time sampling, whilst the second is an event driven, both described in [5].
Reference: [4] <author> D. Hilderbrand, </author> <title> An Architectural overview of QNX, </title> <booktitle> Proceedings of the Workshop on Microkernel and other Kernel Architectures. </booktitle> <month> April </month> <year> 1992. </year>
Reference-contexts: Currently publications concerning the inbuilt performance diagnostics of microkernels are notable only by their absence. Of the two major commercial microkernels Mach [1] and QNX <ref> [4] </ref>, there has been no publications concerning efforts at determining and improving system performance. There are other microkernel based operating systems, for example Chorus [6], however these microkernels use object orientated techniques to enforce separation of the kernel services rather than adhere to the strict microkernel paradigm.
Reference: [5] <author> R. Jain, </author> <title> The Art of Computer Systems Performance Analysis, </title> <publisher> John Wiley & Sons Inc., </publisher> <address> ISBN: 0-471-50336-3, </address> <year> 1991. </year> <note> Bibliography Page 18 </note>
Reference-contexts: Different methods of profiling have been used extensively in monolithic kernel based operating systems. There are two common analysis techniques which can be used, the first being periodic time sampling, whilst the second is an event driven, both described in <ref> [5] </ref>. Following an initial analysis [7] it was decided that event based monitoring, termed profiling, would provide an insight into the operation of a microkernel based operating system. This technical report documents the current implementation of the RHODOS Microkernel profiling software. Section 2 describes the development of the software.
Reference: [6] <author> M. Rozier, V. Abrossimov, F. Armand, M. Gien, M. Guillemont, F. Herman and C. Kaiser, </author> <title> Overview of the Chorus Distributed Operating System, </title> <address> Montigny-;e Bre-tonneux (France), </address> <month> June </month> <year> 1988. </year>
Reference-contexts: Currently publications concerning the inbuilt performance diagnostics of microkernels are notable only by their absence. Of the two major commercial microkernels Mach [1] and QNX [4], there has been no publications concerning efforts at determining and improving system performance. There are other microkernel based operating systems, for example Chorus <ref> [6] </ref>, however these microkernels use object orientated techniques to enforce separation of the kernel services rather than adhere to the strict microkernel paradigm. This report documents the viability of profiling techniques within a microkernel based operating system.
Reference: [7] <author> G. Wickham, </author> <title> Analysis and Design of the RHODOS Performance Profiling Software, </title> <type> Technical Report TR-C94/20, </type> <institution> School of Computing and Mathematics, Deakin University (Geelong), </institution> <note> 4 th October 1994. Bibliography Page 19 </note>
Reference-contexts: Different methods of profiling have been used extensively in monolithic kernel based operating systems. There are two common analysis techniques which can be used, the first being periodic time sampling, whilst the second is an event driven, both described in [5]. Following an initial analysis <ref> [7] </ref> it was decided that event based monitoring, termed profiling, would provide an insight into the operation of a microkernel based operating system. This technical report documents the current implementation of the RHODOS Microkernel profiling software. Section 2 describes the development of the software.
References-found: 7

