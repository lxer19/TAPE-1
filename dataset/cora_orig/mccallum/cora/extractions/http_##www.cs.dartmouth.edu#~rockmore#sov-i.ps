URL: http://www.cs.dartmouth.edu/~rockmore/sov-i.ps
Refering-URL: http://www.cs.dartmouth.edu/~rockmore/publications.html
Root-URL: http://www.cs.dartmouth.edu
Title: Separation of Variables and the Computation of Fourier Transforms on Finite Groups, I  
Author: David K. Maslen Daniel N. Rockmore 
Note: This is part I of a two part paper. Part II will present a refinement of these techniques which yields further savings.  
Date: November 17, 1995  
Address: 53225 Bonn Germany  Hanover, NH 03755  
Affiliation: Max-Planck-Institut fur Mathematik  Dept. of Mathematics Dartmouth College  
Abstract: This paper introduces new techniques for the efficient computation of a Fourier transform on a finite group. We present a divide and conquer approach to the computation. The divide aspect uses factorizations of group elements to reduce the matrix sum of products for the Fourier transform to simpler sums of products. This is the separation of variables algorithm. The conquer aspect is the final computation of matrix products which we perform efficiently using a special form of the matrices. This form arises from the use of subgroup-adapted representations and their structure when evaluated at elements which lie in the centralizers of subgroups in a subgroup chain. We present a detailed analysis of the matrix multiplications arising in the calculation and obtain easy-to-use upper bounds for the complexity of our algorithm in terms of representation theoretic data for the group of interest. Our algorithm encompasses many of the currently known examples of fast Fourier transforms. We recover the best known fast transforms for some abelian groups, the symmetric groups and their wreath products, and the classical Weyl groups. Beyond this, we obtain greatly improved upper bounds for the general linear and unitary groups over a finite field, and for the classical Chevalley groups over a finite field. We also apply these techniques to obtain analogous results for homogeneous spaces. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. F. Assmus Jr. and J. D. </author> <title> Key, Designs and their codes, </title> <publisher> Cambridge Univ. Press, </publisher> <address> Cambridge, </address> <year> 1992. </year> <month> 35 </month>
Reference-contexts: For data analysis, these groups and their generalizations are of interest as the automorphism groups of the many designs based on finite geometries and codes (see e.g. <ref> [1] </ref>). Throughout this section all matrix groups are assumed to be over F q , the finite field of q elements. Thus, GL n GL n (q), etc.
Reference: [2] <author> M. Atkinson, </author> <title> The complexity of group algebra computations, </title> <journal> Theor. Comp. Sci. </journal> <volume> 5 (1977), </volume> <pages> 205-209. </pages>
Reference-contexts: Then R is Z-adapted. Therefore if G = H fi K is a product of groups and H is abelian, then R is H-adapted. Proof: Part (i) is a result of Atkinson <ref> [2] </ref> and Karpovsky [45]. Part (ii) and its corollaries, parts (iii) and (iv), are simple consequences of Schur's lemma (cf. Lemma 4.2). QED Convention. Almost all of the results in remaining sections depend only on the adaptability of the representations and not the particular choice of adapted representation.
Reference: [3] <author> L. Auslander and R. Tolmieri, </author> <title> Is computing with the fast Fourier transform pure or applied mathematics?, Bulletin of the A. </title> <editor> M. S. </editor> <booktitle> 1 (New Series) (1979), </booktitle> <pages> 847-897. </pages>
Reference-contexts: The abelian case has a long history (cf. [23, 24, 41]), and ever since the publication of the Cooley-Tukey fast Fourier transform (FFT) [25] these algorithms have been at the heart of digital signal processing (see for example <ref> [3, 33, 64, 63] </ref> and the many references contained therein). The nonabelian cases have also been motivated by applications. They have been found useful in new approaches to data analysis [28], VLSI design [12], the design of filters [46, 66] and efficient group convolution algorithms [21, 57].
Reference: [4] <author> L. Babai, K. Freidl and M. Stricker, </author> <title> Decomposition of *-closed algebras in polynomial time, </title> <booktitle> Proc. of 18 th ACM ISSAC (1993), </booktitle> <pages> 86-94. </pages>
Reference-contexts: To outline one such construction, we collect several previously known results. Babai and Ronyai [6] have shown that a complete set of irreducible representations of a finite group G can be constructed in polynomial time from the multiplication table of G. Further techniques from [6] or <ref> [4] </ref> provide efficient algorithms for decomposing representations into their irreducible constituents. By applying these results to the original set of representations restricted to the subgroup H, a complete set of irreducible representations for H is then found.
Reference: [5] <author> L. Babai, E Luks, and A. Seress, </author> <title> Fast management of permutation groups, </title> <booktitle> Proc. 28 th IEEE FOCS (1988), </booktitle> <pages> 272-282. </pages>
Reference-contexts: Strong generating sets arise naturally in the context of many algorithmic issues in computational group theory [60]. In particular, fast algorithms for their construction for stabilizer subgroup chains in permutation groups are a cornerstone for many important techniques <ref> [5] </ref>.
Reference: [6] <author> L. Babai and L. Ronyai, </author> <title> Computing irreducible representations of finite groups, </title> <journal> Math. Comp. </journal> <volume> 55 (1990), </volume> <pages> 705-722. </pages>
Reference-contexts: Adaptedness for a set of bases is defined similarly. Adapted bases always exist and in fact, can always be constructed. To outline one such construction, we collect several previously known results. Babai and Ronyai <ref> [6] </ref> have shown that a complete set of irreducible representations of a finite group G can be constructed in polynomial time from the multiplication table of G. Further techniques from [6] or [4] provide efficient algorithms for decomposing representations into their irreducible constituents. <p> To outline one such construction, we collect several previously known results. Babai and Ronyai <ref> [6] </ref> have shown that a complete set of irreducible representations of a finite group G can be constructed in polynomial time from the multiplication table of G. Further techniques from [6] or [4] provide efficient algorithms for decomposing representations into their irreducible constituents. By applying these results to the original set of representations restricted to the subgroup H, a complete set of irreducible representations for H is then found.
Reference: [7] <author> U. Baum, </author> <title> Existence and efficient construction of fast Fourier transforms for supersolvable groups, </title> <booktitle> Comput. Complexity 1 (1991), </booktitle> <pages> 235-256. </pages>
Reference-contexts: This bound follows from a direct approach to the computation. We conjecture that all finite groups have complexity O (jGj log c jGj) for some universal constant c. This has already been proved for many different classes of nonabelian groups <ref> [19, 58, 56, 7] </ref>. The first results of this type obtained for nonabelian groups are due to Willsky. In [66] Willsky studies a particular class of finite state Markov processes evolving on metacyclic groups.
Reference: [8] <author> U. Baum and M. Clausen, </author> <title> Some lower and upper complexity bounds for generalized Fourier transforms and their inverses, </title> <journal> SIAM J. Comput. </journal> <volume> 20(3) (1991), </volume> <pages> 451-459. </pages>
Reference-contexts: When this point of view is adopted, the complexity of the Fourier transform can be measured as the c-linear complexity of the associated change of basis matrix <ref> [8] </ref>. The c-linear complexity of a group G is defined to be the minimum c-linear complexity of any such matrix for G.
Reference: [9] <author> U. Baum, M. Clausen and B. Tietz, </author> <title> Improved upper complexity bounds for the discrete Fourier transform, </title> <booktitle> AAECC 2 (1991), </booktitle> <pages> 35-43. </pages>
Reference-contexts: For primes greater than 2 other techniques have been discovered for further optimizing the discrete Fourier transform (see e.g. [33]). For any abelian group A, C (A) 8 jAj log 2 jAj (cf. <ref> [9] </ref>). 5.2 FFTs for S n and other Weyl groups Applications in data analysis as well as the analysis of certain random walks related to card shu*ing (cf. [28]) have motivated recent work related to FFT's for the symmetric group.
Reference: [10] <author> R. Beals. and L. Babai, </author> <title> Las Vegas algorithms for matrix groups, </title> <booktitle> Proc. 34 th IEEE FOCS (1993), </booktitle> <pages> 427-436. </pages>
Reference-contexts: It seems highly likely that better choices for either are possible. Always, commutativity will need to be exploited and here it may be necessary to effectively compute the centralizers of various subsets of elements. Towards this end, recent advances in computational group theory for matrix groups <ref> [10] </ref> may prove useful. 3. Other work. The problem of finding an efficient algorithm for computing a Fourier transform for GL n (q) was first considered in [53].
Reference: [11] <author> L. Beckett and P. Diaconis, </author> <title> Spectral analysis for discrete longitudinal data, </title> <journal> Adv. Math. </journal> <volume> 103 (1994), </volume> <pages> 107-128. </pages>
Reference: [12] <author> T. Beth, </author> <title> On the computational complexity of the general discrete Fourier transform, </title> <journal> Theor. Comp. Sci. </journal> <volume> 51 (1987), </volume> <pages> 331-339. </pages>
Reference-contexts: The nonabelian cases have also been motivated by applications. They have been found useful in new approaches to data analysis [28], VLSI design <ref> [12] </ref>, the design of filters [46, 66] and efficient group convolution algorithms [21, 57]. <p> At the close he remarks ([66], p. 205) "there are quite likely to be far larger classes of groups for which fast transforms exist". Since then, the general problem of constructing efficient Fourier transform algorithms has been treated by Beth <ref> [12, 13] </ref>, Diaconis and Rockmore [30], and Clausen [19, 20], with others treating certain particular cases. We continue the general investigation of efficient Fourier transform algorithms. <p> That is to say that any representation is equivalent to the direct sum of irreducible representations, where the direct sum of two representations is the matrix direct sum of the representations. There are several equivalent definitions of the Fourier transform for a finite group <ref> [21, 12, 30] </ref>. The following is the most convenient for this paper. Definition 1 (Fourier Transform) Let G be a finite group and f be a complex-valued function on G. (i) Let be a matrix representation of G.
Reference: [13] <editor> T. Beth, Verfahren der schnellen Fourier-Transformation, Teubener Studienbucher, </editor> <address> Stuttgart, </address> <year> 1984. </year>
Reference-contexts: At the close he remarks ([66], p. 205) "there are quite likely to be far larger classes of groups for which fast transforms exist". Since then, the general problem of constructing efficient Fourier transform algorithms has been treated by Beth <ref> [12, 13] </ref>, Diaconis and Rockmore [30], and Clausen [19, 20], with others treating certain particular cases. We continue the general investigation of efficient Fourier transform algorithms. <p> as tensor products of those of H and K, and the product basis constructed by the tensoring of a basis for the irreducible representations of H with those of K yields irreducible representations which are both H-adapted and K-adapted, up to a relabeling of the matrix rows and columns (cf. <ref> [13] </ref>, Satz 5.8). If R 0 , R 00 are sets of matrix representations of representations of H and K respectively then let R 0 R 00 be the set of matrix tensor products of representations in R 0 with those in R 00 .
Reference: [14] <author> A. Borel, R. Carter, C. Curtis, N. Iwahori, T. Springer and R. Steinberg, </author> <title> Seminar on algebraic groups and related finite groups, </title> <booktitle> Lecture Notes in Mathematics Volume 131, </booktitle> <publisher> Springer-Verlag, </publisher> <address> NY, </address> <year> 1970. </year>
Reference-contexts: Hence the centralizer, C 0 G (s), only differs from C 0 H (s) in the factor that corresponds to the eigenvalue 1 of s. Having obtained the form of the centralizers, the formulas in [17] p. 398 (see also the article of Springer and Steinberg in <ref> [14] </ref>), may be used to compute the dimensions of centralizers of unipotent elements, in order to bound dim C C 0 G (s) (u) dim C C 0 H (s) (u) in terms of the multiplicity, m, of 1 as an eigenvalue of s.
Reference: [15] <author> N. Bshouty, M. Kaminski, and D. Kirkpatrick, </author> <title> Addition requirements for matrix and transposed matrix products, </title> <editor> J. </editor> <booktitle> of Algorithms 9 (1988), </booktitle> <pages> 354-364. </pages>
Reference: [16] <author> R. Carter, </author> <title> Simple groups of Lie type, </title> <publisher> Wiley-Interscience, </publisher> <address> NY, </address> <year> 1989. </year>
Reference-contexts: These elements generate GL n [43] and will serve as our generating set. Factorizations of coset representatives of GL n =P n in terms of this generating set are easily derived from the Bruhat decomposition for GL n (see <ref> [43, 16] </ref>). Those for P n =(GL n fi GL 1 ) may be derived using some simple matrix algebra. Lemma 5.8 With the above notation, (i) GL n = k=1 (X k;k+1 t k+1 ) (X n1;n t n ) P n . <p> Proof: Parts (i), (ii) and (iv) follow from the first two chapters in Carter's book [17]. Part (iii) follows from the Steinberg commutator relations. See, e.g. <ref> [16] </ref> Theorem 12.1.1. QED Proof: [of Theorem 5.14.] We let N k denote the number of positive roots of G k .
Reference: [17] <author> R. Carter, </author> <title> Finite groups of Lie type: conjugacy classes and characters, </title> <publisher> Wiley-Interscience, </publisher> <address> NY, </address> <year> 1985. </year>
Reference-contexts: QED 5.6 Chevalley groups The techniques used to compute a Fourier transform in GL n may be extended in a relatively straightforward manner to Chevalley groups and other finite groups of Lie type. We refer the reader to the book of Carter <ref> [17] </ref> for definitions. We limit the current discussion to the classical Chevalley groups although the techniques generalize in a natural way to other finite groups of Lie type. <p> We shall give the proof of Theorem 5.14 after we have collected some lemmas on multiplicities and factoring elements in these groups. We refer the reader to <ref> [17] </ref> for all the relevant notation. For any root ff in the root system of G n , we let X ff denote the corresponding root subgroup. <p> Proof: Parts (i), (ii) and (iv) follow from the first two chapters in Carter's book <ref> [17] </ref>. Part (iii) follows from the Steinberg commutator relations. See, e.g. [16] Theorem 12.1.1. QED Proof: [of Theorem 5.14.] We let N k denote the number of positive roots of G k . <p> Hence the centralizer, C 0 G (s), only differs from C 0 H (s) in the factor that corresponds to the eigenvalue 1 of s. Having obtained the form of the centralizers, the formulas in <ref> [17] </ref> p. 398 (see also the article of Springer and Steinberg in [14]), may be used to compute the dimensions of centralizers of unipotent elements, in order to bound dim C C 0 G (s) (u) dim C C 0 H (s) (u) in terms of the multiplicity, m, of 1
Reference: [18] <author> M. Clausen, </author> <title> Fast Fourier transforms for metabelian groups, </title> <journal> SIAM J. Comput. </journal> <volume> 18 (1989), </volume> <pages> 584-593. </pages>
Reference: [19] <author> M. Clausen, </author> <title> Fast generalized Fourier transforms, </title> <journal> Theor. Comp. Sci. </journal> <volume> 67 (1989), </volume> <pages> 55-63. </pages>
Reference-contexts: This bound follows from a direct approach to the computation. We conjecture that all finite groups have complexity O (jGj log c jGj) for some universal constant c. This has already been proved for many different classes of nonabelian groups <ref> [19, 58, 56, 7] </ref>. The first results of this type obtained for nonabelian groups are due to Willsky. In [66] Willsky studies a particular class of finite state Markov processes evolving on metacyclic groups. <p> At the close he remarks ([66], p. 205) "there are quite likely to be far larger classes of groups for which fast transforms exist". Since then, the general problem of constructing efficient Fourier transform algorithms has been treated by Beth [12, 13], Diaconis and Rockmore [30], and Clausen <ref> [19, 20] </ref>, with others treating certain particular cases. We continue the general investigation of efficient Fourier transform algorithms. We present a divide and conquer strategy for computing nonabelian Fourier transforms, which encompasses many known FFTs, and provides new fast algorithms in other cases. It has two main components. <p> The bulk of the new computational savings of this paper come from this use of commutativity. We believe this is a new contribution to the subject, although some aspects of it do appear in the work of Clausen on the symmetric group <ref> [19, 20] </ref> and that of Rockmore on wreath products [56]. The general technique of factoring representation matrices in terms of sparse matrices was first formulated by Clausen [20]. Our techniques are quite general. <p> Following this, Section 5 develops results on the complexities of specific groups. We start it by deriving the Cooley-Tukey algorithm in the context of finite abelian groups, the results of Clausen and Baum <ref> [19] </ref> on the symmetric group, results on classical Weyl groups, and the results of Rockmore [56] on wreath products. We then give algorithms for the general linear and unitary groups over a finite field, and finish our examples with some results on classical Chevalley groups over finite fields. <p> An H-adapted set of representations of G has the property that when considered as representations of H via restriction, they may be constructed as matrix direct products of representations from a fixed set of inequivalent irreducible matrix representations of H. As shown in [30] and <ref> [19] </ref> (and explained in the next section), a Fourier transform on G can always be written as a sum over a set of matrix multiplications against Fourier transforms at the restrictions of the representations to the subgroup H. <p> Stiefel [34] which also provides a wealth of examples of uses of adapted bases in a variety of computational problems. 3 Coset decompositions and the Fourier transform In previous work, adapted representations have already been used to speed the computation of Fourier transforms by factoring the computation through a subgroup <ref> [19, 30] </ref>. The idea is to use the coset decomposition of elements in the group to relate a Fourier transform on G to Fourier transforms on a subgroup H. This may be thought of as the simplest example of the separation of variables technique (cf. Section 4). <p> to compute the collection of sums, n P o ; where for each 2 R and y 2 Y , F (y; ) is an arbitrary d fi d matrix. (6) Similarly, define a "reduced" version of (6) by m G (Y; R) = jGj Theorem 3.1 ([30] Proposition 1, <ref> [19] </ref>) Let H be a subgroup of G and let R be a complete H-adapted set of inequivalent irreducible matrix representations of G. Let Y G be a set of coset representatives for G=H. <p> To take this into account, Theorem 4.8 must be used directly. 2. General results. Corollary 4.9 might be useful in the search for general results on the complexity of Fourier transforms on any finite group, possibly improving on the general bounds of Clausen <ref> [19] </ref>, or those of Diaconis and Rockmore [30]. As a first step in this direction, let l H;S (y) be the minimum non-negative integer, l, such that y is in the same coset of G=H as some product of l elements of S. <p> For a survey of some approaches to these algorithms see [22]. In this section we show how the most efficient known algorithm due to Clausen (cf. <ref> [19] </ref>) can be rederived by our general approach and then show how our techniques extend directly to the other Weyl groups. <p> This chain has a natural generalization in the other Weyl groups. Theorem 5.2 (Clausen <ref> [19] </ref>, Theorem 1.4) Let S n denote the symmetric group on n elements. If R is any complete set of irreducible representations of S n adapted to the chain of subgroups (36).
Reference: [20] <author> M. Clausen, </author> <title> Beitrage zum Entwurf schneller Spektraltransformationen, </title> <institution> Habilitationsshrift, Fakultat fur In-formatik der Universitat Karlsruhe (TH), </institution> <year> 1988. </year>
Reference-contexts: At the close he remarks ([66], p. 205) "there are quite likely to be far larger classes of groups for which fast transforms exist". Since then, the general problem of constructing efficient Fourier transform algorithms has been treated by Beth [12, 13], Diaconis and Rockmore [30], and Clausen <ref> [19, 20] </ref>, with others treating certain particular cases. We continue the general investigation of efficient Fourier transform algorithms. We present a divide and conquer strategy for computing nonabelian Fourier transforms, which encompasses many known FFTs, and provides new fast algorithms in other cases. It has two main components. <p> The bulk of the new computational savings of this paper come from this use of commutativity. We believe this is a new contribution to the subject, although some aspects of it do appear in the work of Clausen on the symmetric group <ref> [19, 20] </ref> and that of Rockmore on wreath products [56]. The general technique of factoring representation matrices in terms of sparse matrices was first formulated by Clausen [20]. Our techniques are quite general. <p> The general technique of factoring representation matrices in terms of sparse matrices was first formulated by Clausen <ref> [20] </ref>. Our techniques are quite general. We obtain upper bounds for the complexity of the Fourier transform of any group or homogeneous space in terms of representation theoretic data. These bounds are expressed in terms of multiplicities of restrictions of irreducible representations from one subgroup to another. <p> This algorithm reduces the computation of a sum of products to other, potentially smaller, repeated sums of products. Special cases of the separation of variables algorithm also occur in the work of Clausen on the symmetric group, (cf. <ref> [20] </ref> esp. Section 10). We then give a detailed analysis of the complexity of matrix multiplication when the matrices have a special structure related to a subgroup-adapted representation. These results on matrix multiplication produce the bulk of the new computational savings presented in this paper.
Reference: [21] <author> M. Clausen and U. Baum, </author> <title> Fast Fourier transforms, </title> <address> Wissenschaftsverlag, Manheim, </address> <year> 1993. </year>
Reference-contexts: The nonabelian cases have also been motivated by applications. They have been found useful in new approaches to data analysis [28], VLSI design [12], the design of filters [46, 66] and efficient group convolution algorithms <ref> [21, 57] </ref>. <p> That is to say that any representation is equivalent to the direct sum of irreducible representations, where the direct sum of two representations is the matrix direct sum of the representations. There are several equivalent definitions of the Fourier transform for a finite group <ref> [21, 12, 30] </ref>. The following is the most convenient for this paper. Definition 1 (Fourier Transform) Let G be a finite group and f be a complex-valued function on G. (i) Let be a matrix representation of G.
Reference: [22] <author> M. Clausen and U. Baum, </author> <title> Fast Fourier transforms for symmetric groups, theory and implementation, </title> <journal> Math. Comp. </journal> <volume> 61(204) (1993), </volume> <pages> 833-847. </pages>
Reference-contexts: For a survey of some approaches to these algorithms see <ref> [22] </ref>. In this section we show how the most efficient known algorithm due to Clausen (cf. [19]) can be rederived by our general approach and then show how our techniques extend directly to the other Weyl groups. <p> In this case the representations given by Young's orthogonal form or Young's seminormal form (cf. [42], p. 114) are adapted for the chain of subgroups (36) for S n . The resulting algorithm is the fastest algorithm currently known for computing a Fourier transform on S n <ref> [22] </ref>. The above discussion for S n generalizes naturally to all Weyl groups. The pairwise adjacent transpositions are simple reflections, and the chain of subgroups (36) is the corresponding chain of parabolic subgroups.
Reference: [23] <author> J. W. Cooley, </author> <title> The re-discovery of the fast Fourier transform algorithm, </title> <booktitle> Mikrochimica Acta III (1987), </booktitle> <pages> 33-45. </pages>
Reference-contexts: 1 Introduction Recently, increased attention has been paid to the problem of finding efficient algorithms for the computation of Fourier transforms on nonabelian groups. The abelian case has a long history (cf. <ref> [23, 24, 41] </ref>), and ever since the publication of the Cooley-Tukey fast Fourier transform (FFT) [25] these algorithms have been at the heart of digital signal processing (see for example [3, 33, 64, 63] and the many references contained therein). The nonabelian cases have also been motivated by applications. <p> The proofs are most most easily presented using the reduced complexity t G . 5.1 Finite abelian groups Applications in digital signal processing and data analysis motivated the need for a fast cyclic discrete Fourier transform (cf. the example of Section 2.1 and the references <ref> [23, 24, 41] </ref>) and more generally a fast Fourier transform on any abelian group [33, 55]. Application of Corollary 4.9 immediately gives us some well-known results bounding the complexity of the Fourier transform on any finite abelian group.
Reference: [24] <author> J. W. Cooley, </author> <title> How the FFT gained acceptance, </title> <booktitle> Proceedings of the ACM conference on the history of scientific and numeric computation, </booktitle> <address> Princeton, NJ May 13-15, </address> <year> 1987, </year> <pages> 133-140. </pages>
Reference-contexts: 1 Introduction Recently, increased attention has been paid to the problem of finding efficient algorithms for the computation of Fourier transforms on nonabelian groups. The abelian case has a long history (cf. <ref> [23, 24, 41] </ref>), and ever since the publication of the Cooley-Tukey fast Fourier transform (FFT) [25] these algorithms have been at the heart of digital signal processing (see for example [3, 33, 64, 63] and the many references contained therein). The nonabelian cases have also been motivated by applications. <p> The proofs are most most easily presented using the reduced complexity t G . 5.1 Finite abelian groups Applications in digital signal processing and data analysis motivated the need for a fast cyclic discrete Fourier transform (cf. the example of Section 2.1 and the references <ref> [23, 24, 41] </ref>) and more generally a fast Fourier transform on any abelian group [33, 55]. Application of Corollary 4.9 immediately gives us some well-known results bounding the complexity of the Fourier transform on any finite abelian group.
Reference: [25] <author> J. W. Cooley and J. W. Tukey, </author> <title> An algorithm for machine calculation of complex Fourier series, </title> <journal> Math. Comp. </journal> <volume> 19 (1965), </volume> <pages> 297-301. 36 </pages>
Reference-contexts: 1 Introduction Recently, increased attention has been paid to the problem of finding efficient algorithms for the computation of Fourier transforms on nonabelian groups. The abelian case has a long history (cf. [23, 24, 41]), and ever since the publication of the Cooley-Tukey fast Fourier transform (FFT) <ref> [25] </ref> these algorithms have been at the heart of digital signal processing (see for example [3, 33, 64, 63] and the many references contained therein). The nonabelian cases have also been motivated by applications. <p> Thanks also to Prof. Michael Clausen for some very helpful conversations. 2 Background 2.1 Nonabelian Fourier transforms The familiar discrete Fourier transform (DFT) of a finite data sequence and its efficient computation via the Cooley-Tukey fast Fourier transform <ref> [25] </ref> has a natural formulation in terms of the representation theory of cyclic groups. Phrased in this context, the algorithm generalizes to an algorithm for computing Fourier transforms on arbitrary finite groups. <p> This type of chain can always be found in an abelian group and any chain of subgroups of A may be refined to such a chain. Hence the theorem is proved. 17 QED This is essentially the derivation of the well-known Cooley-Tukey FFT <ref> [25] </ref>. Note that when jAj = 2 n we find that C (A) n 2 n = jAj log 2 jAj. For primes greater than 2 other techniques have been discovered for further optimizing the discrete Fourier transform (see e.g. [33]).
Reference: [26] <author> P. Deligne and G. Lusztig, </author> <title> Representations of reductive groups over finite fields, </title> <journal> Ann. Math. </journal> <volume> 103 (1976), </volume> <pages> 103-161. </pages>
Reference-contexts: Suppose T , T 0 are F -stable maximal tori of G and H respectively and , 0 are irreducible characters of T F and (T 0 ) F respectively. As usual, R T; denotes the Deligne-Lusztig character associated to T and (cf. <ref> [26] </ref> for the complete definitions).
Reference: [27] <author> P. Diaconis, </author> <title> A generalization of spectral analysis with applications to ranked data, </title> <journal> Ann. Stat. </journal> <volume> 17 (1989), </volume> <pages> 949-979. </pages>
Reference: [28] <author> P. Diaconis, </author> <title> Group representations in probability and statistics, </title> <address> IMS, Hayward, CA, </address> <year> 1988. </year>
Reference-contexts: The nonabelian cases have also been motivated by applications. They have been found useful in new approaches to data analysis <ref> [28] </ref>, VLSI design [12], the design of filters [46, 66] and efficient group convolution algorithms [21, 57]. <p> In this situation we shall simply refer to such a calculation as the computation of a Fourier transform. A Fourier transform determines f through the Fourier inversion formula. 3 Theorem 2.1 (Fourier inversion formula) (see e.g. <ref> [28] </ref>, p. 13) Let G be a finite group, f a complex-valued function on G, and R a complete set of irreducible matrix representations of G. Then, f (s) = jGj 2R d trace where d = dim (). Example: The "usual" discrete Fourier transform. <p> For any abelian group A, C (A) 8 jAj log 2 jAj (cf. [9]). 5.2 FFTs for S n and other Weyl groups Applications in data analysis as well as the analysis of certain random walks related to card shu*ing (cf. <ref> [28] </ref>) have motivated recent work related to FFT's for the symmetric group. For a survey of some approaches to these algorithms see [22].
Reference: [29] <author> P. Diaconis and D. Rockmore, </author> <title> Efficient computation of isotypic projections for the symmetric group, DI-MACS Series in Disc. </title> <journal> Math., </journal> <volume> Vol. 11 (eds. </volume> <editor> L. Finkelstein and W. Kantor), </editor> <year> (1993), </year> <pages> 87-104. </pages>
Reference-contexts: In this case generalizations of the standard analysis of variance of data on such sets require the computation of projections of the data vector onto group-invariant subspaces. The techniques to be developed in this section provide speed-ups of the most efficient algorithms currently known (cf. <ref> [29] </ref> and references therein). The analyses of Sections 3 and 4 can be applied with virtually no changes to the computation of transforms on homogeneous spaces. <p> The separation of variables algorithm then amounts to calculating the inner product of a function and an associated spherical function by summing over one factor in the product at a time. This provides speed-ups of the algorithms in Section 6 (cf. <ref> [29] </ref> and references therein). This material will also appear in [51]. Appendix A: Proofs of the technical lemmas Now we shall prove the remaining lemmas used in the explicit calculations of Section 5.
Reference: [30] <author> P. Diaconis and D. Rockmore, </author> <title> Efficient computation of the Fourier transform on finite groups, </title> <journal> J. of the A.M.S. </journal> <volume> 3(2) (1990), </volume> <pages> 297-332. </pages>
Reference-contexts: At the close he remarks ([66], p. 205) "there are quite likely to be far larger classes of groups for which fast transforms exist". Since then, the general problem of constructing efficient Fourier transform algorithms has been treated by Beth [12, 13], Diaconis and Rockmore <ref> [30] </ref>, and Clausen [19, 20], with others treating certain particular cases. We continue the general investigation of efficient Fourier transform algorithms. We present a divide and conquer strategy for computing nonabelian Fourier transforms, which encompasses many known FFTs, and provides new fast algorithms in other cases. <p> That is to say that any representation is equivalent to the direct sum of irreducible representations, where the direct sum of two representations is the matrix direct sum of the representations. There are several equivalent definitions of the Fourier transform for a finite group <ref> [21, 12, 30] </ref>. The following is the most convenient for this paper. Definition 1 (Fourier Transform) Let G be a finite group and f be a complex-valued function on G. (i) Let be a matrix representation of G. <p> An H-adapted set of representations of G has the property that when considered as representations of H via restriction, they may be constructed as matrix direct products of representations from a fixed set of inequivalent irreducible matrix representations of H. As shown in <ref> [30] </ref> and [19] (and explained in the next section), a Fourier transform on G can always be written as a sum over a set of matrix multiplications against Fourier transforms at the restrictions of the representations to the subgroup H. <p> Stiefel [34] which also provides a wealth of examples of uses of adapted bases in a variety of computational problems. 3 Coset decompositions and the Fourier transform In previous work, adapted representations have already been used to speed the computation of Fourier transforms by factoring the computation through a subgroup <ref> [19, 30] </ref>. The idea is to use the coset decomposition of elements in the group to relate a Fourier transform on G to Fourier transforms on a subgroup H. This may be thought of as the simplest example of the separation of variables technique (cf. Section 4). <p> General results. Corollary 4.9 might be useful in the search for general results on the complexity of Fourier transforms on any finite group, possibly improving on the general bounds of Clausen [19], or those of Diaconis and Rockmore <ref> [30] </ref>. As a first step in this direction, let l H;S (y) be the minimum non-negative integer, l, such that y is in the same coset of G=H as some product of l elements of S.
Reference: [31] <author> P. Diaconis and B. Sturmfels, </author> <title> Algebraic algorithms for sampling from conditional distributions, (1995), </title> <type> (preprint). </type>
Reference: [32] <author> J. R. Driscoll and D. Healy. </author> <title> Computing Fourier transforms and convolutions on the 2-sphere, </title> <note> (Extended abstract) Proc. 34 th IEEE FOCS, (1989), 344-349; Adv. in Appl. Math. </note> <month> 15 </month> <year> (1994), </year> <pages> 202-250. </pages>
Reference-contexts: They have been found useful in new approaches to data analysis [28], VLSI design [12], the design of filters [46, 66] and efficient group convolution algorithms [21, 57]. In the continuous setting, there are applications to computer vision, geophysics and climate modeling (cf. <ref> [32, 40] </ref>). fl A preliminary version of some of this work appears as an extended abstract, "Adapted Diameters and the Efficient Computation of Fourier Transforms of Finite Groups" in the Proceedings of the 1995 ACM-SIAM Symposium on Discrete Algorithms., pp. 253-262 y Partially supported as a Shapiro Visitor while at Dartmouth.
Reference: [33] <author> D. F. Elliott and K. R. Rao, </author> <title> Fast transforms: algorithms, analyses, and applications, </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1982. </year>
Reference-contexts: The abelian case has a long history (cf. [23, 24, 41]), and ever since the publication of the Cooley-Tukey fast Fourier transform (FFT) [25] these algorithms have been at the heart of digital signal processing (see for example <ref> [3, 33, 64, 63] </ref> and the many references contained therein). The nonabelian cases have also been motivated by applications. They have been found useful in new approaches to data analysis [28], VLSI design [12], the design of filters [46, 66] and efficient group convolution algorithms [21, 57]. <p> reduced complexity t G . 5.1 Finite abelian groups Applications in digital signal processing and data analysis motivated the need for a fast cyclic discrete Fourier transform (cf. the example of Section 2.1 and the references [23, 24, 41]) and more generally a fast Fourier transform on any abelian group <ref> [33, 55] </ref>. Application of Corollary 4.9 immediately gives us some well-known results bounding the complexity of the Fourier transform on any finite abelian group. <p> Note that when jAj = 2 n we find that C (A) n 2 n = jAj log 2 jAj. For primes greater than 2 other techniques have been discovered for further optimizing the discrete Fourier transform (see e.g. <ref> [33] </ref>).
Reference: [34] <author> A. Fassler and E. </author> <title> Stiefel, Group theoretical methods and their applications, </title> <publisher> Birkhauser, </publisher> <address> Boston, MA, </address> <year> 1992. </year>
Reference-contexts: A change of basis to insure that all representations of G are H-adapted is computed by the construction of certain projection operators. This last step is detailed in the book of Fassler and Stiefel <ref> [34] </ref> which also provides a wealth of examples of uses of adapted bases in a variety of computational problems. 3 Coset decompositions and the Fourier transform In previous work, adapted representations have already been used to speed the computation of Fourier transforms by factoring the computation through a subgroup [19, 30].
Reference: [35] <author> L. Finkelstein and W. Kantor, </author> <title> Groups and computation, DIMACS Series in Disc. </title> <journal> Math., </journal> <volume> Vol. 11, </volume> <publisher> AMS, </publisher> <year> 1993. </year>
Reference: [36] <author> I. M. Gel'fand and M. Tsetlin, </author> <title> Finite dimensional representations of the group of unimodular matrices, </title> <journal> Dokl. Akad. Nauk SSSR 71 (1950), </journal> <pages> 825-828 (Russian). </pages>
Reference-contexts: The use of factorizations into generalized Euler angles in conjunction with adapted representations and Schur's lemma is a standard technique for obtaining matrix coefficients of the classical Lie groups [48]. This is the original purpose for which adapted sets of representations, in the guise of Gel'fand-Tsetlin bases, were invented <ref> [36] </ref>. 4.1 Sums of Products | the separations of variables idea Let G be a finite group, Y a subset of G, a matrix representation of G, and for each y 2 Y , let F (y) be a d fi d matrix.
Reference: [37] <author> F. Goodman, P. de la Harpe and V. Jones, </author> <title> Coxeter graphs and towers of algebras, </title> <publisher> Spinger-Verlag, </publisher> <address> NY, </address> <year> 1989. </year>
Reference-contexts: This approach to Fourier transforms on finite groups is explained in the sequel [51]. In particular, the appropriate setting for discussing multiplication of block scalar matrices is a tower of multi-matrix algebras (cf. <ref> [37] </ref>). Theorems 4.5 and 4.6 give exact operation counts for the appropriate matrix multiplications. It is useful to provide some notation for these counts. Definition 4.1 Let H 1 K 1 and H 2 K 2 be a chain of subgroups of G and let be a representation of G.
Reference: [38] <author> T. Hagedorn, </author> <title> Multiplicities in restricted representations, </title> <type> Ph.D. Thesis, </type> <institution> Department of Mathematics, Harvard University, </institution> <year> 1994. </year>
Reference-contexts: Proof: (i) is a result of Hagedorn <ref> [38] </ref>. (ii) is proved in the Appendix which follows this section. (iii) is a direct consequence of (i) and (ii). <p> See also <ref> [38] </ref>. The other piece of information we need concerns the factorization of coset representatives in terms of the elements X ff i and n ff i . <p> A.3 Multiplicities of restrictions in Chevalley groups Now we shall prove Lemma 5.15 on the multiplicities of restrictions in Chevalley groups. The proof we use was suggested by Tom Hagedorn and follows the line of argument of his thesis <ref> [38] </ref>. We shall limit ourselves to a brief sketch of this argument. As usual we shall always assume the characteristic is odd.
Reference: [39] <author> F. Harary, </author> <title> Graph theory, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1972. </year>
Reference-contexts: Wreath products are of interest in data analysis as the symmetry groups of nested designs [54] and in structural chemistry as the automorphism groups of non-rigid molecules [67]. They are often studied as the automorphism groups of graphs obtained by "composition" (cf. <ref> [39] </ref>). Abstractly, G [S n ] has the structure of a semidirect product G n fi S n in the following way.
Reference: [40] <author> D. Healy, D. Maslen, S. Moore, D. Rockmore and M. Taylor, </author> <title> Applications of a fast convolution algorithm on the 2-sphere, </title> <type> Technical Report, </type> <institution> Department of Mathematics and Computer Science, Dartmouth College, </institution> <year> 1994. </year>
Reference-contexts: They have been found useful in new approaches to data analysis [28], VLSI design [12], the design of filters [46, 66] and efficient group convolution algorithms [21, 57]. In the continuous setting, there are applications to computer vision, geophysics and climate modeling (cf. <ref> [32, 40] </ref>). fl A preliminary version of some of this work appears as an extended abstract, "Adapted Diameters and the Efficient Computation of Fourier Transforms of Finite Groups" in the Proceedings of the 1995 ACM-SIAM Symposium on Discrete Algorithms., pp. 253-262 y Partially supported as a Shapiro Visitor while at Dartmouth.
Reference: [41] <author> M. T. Heideman, D. H. Johnson, and C. S. Burrus, </author> <title> Gauss and the history of the fast Fourier transform, Archive for History of Exact Sciences 34(3) (1985), </title> <type> 265-277. </type>
Reference-contexts: 1 Introduction Recently, increased attention has been paid to the problem of finding efficient algorithms for the computation of Fourier transforms on nonabelian groups. The abelian case has a long history (cf. <ref> [23, 24, 41] </ref>), and ever since the publication of the Cooley-Tukey fast Fourier transform (FFT) [25] these algorithms have been at the heart of digital signal processing (see for example [3, 33, 64, 63] and the many references contained therein). The nonabelian cases have also been motivated by applications. <p> The proofs are most most easily presented using the reduced complexity t G . 5.1 Finite abelian groups Applications in digital signal processing and data analysis motivated the need for a fast cyclic discrete Fourier transform (cf. the example of Section 2.1 and the references <ref> [23, 24, 41] </ref>) and more generally a fast Fourier transform on any abelian group [33, 55]. Application of Corollary 4.9 immediately gives us some well-known results bounding the complexity of the Fourier transform on any finite abelian group.
Reference: [42] <author> G. D. James, </author> <title> The representation theory of the symmetric groups, </title> <booktitle> Lecture Notes in Mathematics, </booktitle> <volume> Vol. 682, </volume> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1978. </year>
Reference-contexts: ( t j 2 S j and t j commutes with S k for k &lt; j 1: Thus, in the notation of Section 4.3 K c + (t j ) = S j and Furthermore, it is easily derived from the combinatorics of Young tableaux and "Young's rule" (cf. <ref> [42] </ref>, p. 51) that the maximum multiplicity occurring in the restriction of any irreducible representation from S k to S k2 is 2, i.e., M (S k ; S k2 ) = 2, so that M (t j ) = 2. <p> QED Remark. The bound of Theorem 5.2 is on the order of n!(log 2 n!) 3 . In this case the representations given by Young's orthogonal form or Young's seminormal form (cf. <ref> [42] </ref>, p. 114) are adapted for the chain of subgroups (36) for S n . The resulting algorithm is the fastest algorithm currently known for computing a Fourier transform on S n [22]. The above discussion for S n generalizes naturally to all Weyl groups. <p> Proof: (i) It is well-known that the restriction of an irreducible representation of S n to S n1 is multiplicity-free (see e.g. <ref> [42] </ref>) as is that of B n to B n1 (see e.g. [68]). The result for D n follows easily from that of B n , and the fact that D n is of index 2 in B n . (ii) This follows from the hook formula, (see [42], p. 77). <p> (see e.g. <ref> [42] </ref>) as is that of B n to B n1 (see e.g. [68]). The result for D n follows easily from that of B n , and the fact that D n is of index 2 in B n . (ii) This follows from the hook formula, (see [42], p. 77). QED The minimal coset representatives and the sums of their lengths may be found using the following lemma. Lemma 5.5 (cf. [44]) Let W be a Weyl group with S its set of simple reflections.
Reference: [43] <author> G. D. James, </author> <title> Representations of general linear groups, LMS Vol. 94, </title> <publisher> Cambridge Univ. Press, </publisher> <address> Cambridge, </address> <year> 1984. </year>
Reference-contexts: Also let t i denote the transposition matrix E i1;i + E i;i1 . These elements generate GL n <ref> [43] </ref> and will serve as our generating set. Factorizations of coset representatives of GL n =P n in terms of this generating set are easily derived from the Bruhat decomposition for GL n (see [43, 16]). <p> These elements generate GL n [43] and will serve as our generating set. Factorizations of coset representatives of GL n =P n in terms of this generating set are easily derived from the Bruhat decomposition for GL n (see <ref> [43, 16] </ref>). Those for P n =(GL n fi GL 1 ) may be derived using some simple matrix algebra. Lemma 5.8 With the above notation, (i) GL n = k=1 (X k;k+1 t k+1 ) (X n1;n t n ) P n .
Reference: [44] <author> H. Hiller, </author> <title> The geometry of coxeter groups, </title> <booktitle> Research Notes in Mathematics Vol 54, </booktitle> <publisher> Pitman, </publisher> <year> 1982. </year>
Reference-contexts: In this language (The book <ref> [44] </ref> is a good reference for the basic material) the generalization of Theorem 5.2 to the Weyl groups B n and D n is straightforward. We shall consider the chains of parabolic subgroups B n &gt; B n1 &gt; ; (38) and the generating sets consisting of the simple reflections. <p> QED The minimal coset representatives and the sums of their lengths may be found using the following lemma. Lemma 5.5 (cf. <ref> [44] </ref>) Let W be a Weyl group with S its set of simple reflections. For any subset J S let W J denote the corresponding parabolic subgroup. Let P W=W J ;S (t) denote the Poincare polynomial of W=W J in the variable t.
Reference: [45] <author> M. Karpovsky, </author> <title> Fast Fourier transforms on finite nonabelian groups IEEE Trans. </title> <journal> Comput. </journal> <volume> 26(10) (1977), </volume> <pages> 1028-1030. </pages>
Reference-contexts: Then R is Z-adapted. Therefore if G = H fi K is a product of groups and H is abelian, then R is H-adapted. Proof: Part (i) is a result of Atkinson [2] and Karpovsky <ref> [45] </ref>. Part (ii) and its corollaries, parts (iii) and (iv), are simple consequences of Schur's lemma (cf. Lemma 4.2). QED Convention. Almost all of the results in remaining sections depend only on the adaptability of the representations and not the particular choice of adapted representation.
Reference: [46] <author> M. Karpovsky and E. Trachtenberg, </author> <title> Filtering in a communication channel by Fourier transforms over finite groups, in Spectral techniques and fault detection, </title> <editor> M. Karpovsky (ed.) </editor> <publisher> Academic Press, </publisher> <address> NY (1985), </address> <pages> 179-212. </pages>
Reference-contexts: The nonabelian cases have also been motivated by applications. They have been found useful in new approaches to data analysis [28], VLSI design [12], the design of filters <ref> [46, 66] </ref> and efficient group convolution algorithms [21, 57].
Reference: [47] <author> A. Kerber, </author> <title> Representations of permutations groups I, </title> <booktitle> II Lecture Notes in Mathematics, Vols. 240 and 495, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin (1971) and (1975). </address> <month> 37 </month>
Reference-contexts: It is not too difficult to see that such a construction makes sense for any permutation group H &lt; S n . A thorough but accessible treatment of wreath products may be found in <ref> [47] </ref>. A slight modification of the techniques used in Section 5.2 for the symmetric group yields comparable results for their wreath products. <p> j ] &gt; G fi G [S j1 ] &gt; G [S j1 ] &gt; G fi G [S j2 ] &gt; G [S j2 ] and the fact that the restriction of representations from G [S j ] to G fi G [S j1 ] is multiplicity-free (see e.g. <ref> [47] </ref>) we find that M (S) is 2d 2 G , for d G the maximum dimension of an irreducible representation of G.
Reference: [48] <author> A. Klimyk and N. Vilenkin, </author> <title> Representations of Lie groups and special functions. I, II, and III, </title> <journal> Mathematics and Its Applications (Soviet Series), vols. </journal> <volume> 72, 74 and 75, </volume> <publisher> Kluwer, </publisher> <address> Boston, </address> <year> 1991 </year> <month> and </month> <year> 1993. </year>
Reference-contexts: The separation of variables idea also arises naturally in the compact group setting [50]. The use of factorizations into generalized Euler angles in conjunction with adapted representations and Schur's lemma is a standard technique for obtaining matrix coefficients of the classical Lie groups <ref> [48] </ref>.
Reference: [49] <author> J. Lafferty and D. Rockmore, </author> <title> Fast Fourier analysis for SL 2 over a finite field and related numerical experiments, </title> <journal> J. Exp. Math. </journal> <month> 1 </month> <year> (1992) </year> <month> 115-139. </month>
Reference-contexts: Summing all the other terms that appear gives the final result t GL n &lt; 2 QED Remarks. 1. Further improvements. By improving the bound for t GL 2 we can improve on Theorem 5.7. Application of the results of <ref> [49] </ref> show that t GL 2 200q log q. In fact, a generalization of our methods, applied to the appropriate subgroup chain of GL 2 shows that t GL 2 may be bounded by 5q 3; for details see [51]. 2. Variations of the algorithm.
Reference: [50] <author> D. Maslen, </author> <title> Efficient computation of Fourier transforms on compact groups, </title> <note> Max-Planck preprint MPI/95-8 (1995). </note>
Reference-contexts: Finally, we look at the effect of using a subgroup chain in this setting and present some general results on the complexities of our algorithms. The separation of variables idea also arises naturally in the compact group setting <ref> [50] </ref>. The use of factorizations into generalized Euler angles in conjunction with adapted representations and Schur's lemma is a standard technique for obtaining matrix coefficients of the classical Lie groups [48].
Reference: [51] <author> D. Maslen and D. Rockmore, </author> <title> Separation of variables and the efficient computation of Fourier transforms on finite groups, II, </title> <note> (in preparation). </note>
Reference-contexts: Furthermore, we obtain new fast algorithms for matrix groups over finite fields. A more detailed analysis of the computation improves the results; that is the content of part II of this work, currently in preparation <ref> [51] </ref>. By dividing the work in this way we hope to present general results of interest without obscuring them with the technical machinery needed for more refined results. We start the paper in Section 2 with the definitions of Fourier transform, complexity, and adapted representation. <p> We analyze the matrix products that occur in this new setting, and give results for homogeneous spaces of the symmetric group, classical Weyl groups, and the general linear and unitary groups. Finally, we summarize the consequences of this work and indicate the contents of part II <ref> [51] </ref> of this paper. 2 Our bounds depend on some explicit knowledge of the restrictions to a subgroup and often involve the number of conjugacy classes in a group (i.e., the number of irreducible representations). For some of our results we need asymptotics for these quantities. <p> The diagrammatic techniques introduced in the proof of Theorem 4.5 may be formalized and used to prove complexity results that are even better than those given in this paper. This approach to Fourier transforms on finite groups is explained in the sequel <ref> [51] </ref>. In particular, the appropriate setting for discussing multiplication of block scalar matrices is a tower of multi-matrix algebras (cf. [37]). Theorems 4.5 and 4.6 give exact operation counts for the appropriate matrix multiplications. It is useful to provide some notation for these counts. <p> Application of the results of [49] show that t GL 2 200q log q. In fact, a generalization of our methods, applied to the appropriate subgroup chain of GL 2 shows that t GL 2 may be bounded by 5q 3; for details see <ref> [51] </ref>. 2. Variations of the algorithm. There is of course nothing canonical about either the generators chosen here for GL n or the subgroup chain. It seems highly likely that better choices for either are possible. <p> QED 7 Further improvements and directions Theorem 4.8 and Corollary 4.9 are particularly easy to use but are by no means the best results possible. We now briefly describe some of the improvements we have obtained, which will appear in the second part of this paper <ref> [51] </ref>. 7.1 Variations on the main results In many cases, further savings can be realized in the the Fourier transform is treated as a collection of scalar equations rather than as a matrix equation. <p> This provides speed-ups of the algorithms in Section 6 (cf. [29] and references therein). This material will also appear in <ref> [51] </ref>. Appendix A: Proofs of the technical lemmas Now we shall prove the remaining lemmas used in the explicit calculations of Section 5.
Reference: [52] <author> D. Maslen and D. Rockmore, </author> <title> Adapted diameters and the efficient computation of Fourier transforms of finite groups, </title> <booktitle> Proceedings of the 1995 ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> 253-262. </pages>
Reference-contexts: This last aspect is nicely encapsulated in the notion of the adapted diameter of a group with respect to a generating set for a given chain of subgroups (cf. <ref> [52] </ref> for details). 4. Choosing the generating set or subgroup chain. The complexity bounds of Theorem 4.8, Corollary 4.9, and Theorem 3.1 only depend on the choice of subgroup chain and on the choice of factorization for group elements.
Reference: [53] <author> S. Linton, G. Michler, and J. Olsson, </author> <title> Fourier transforms with respect to monomial representations, </title> <journal> Math. Ann. </journal> <volume> 297 (1993), </volume> <pages> 253-268. </pages>
Reference-contexts: Towards this end, recent advances in computational group theory for matrix groups [10] may prove useful. 3. Other work. The problem of finding an efficient algorithm for computing a Fourier transform for GL n (q) was first considered in <ref> [53] </ref>. There an algorithm is proposed which uses "models" (direct sums of induced one-dimensional representations which contain each irreducible of the group exactly once) to compute a Fourier transform for GL n .
Reference: [54] <author> J. A. Nelder, </author> <title> The analysis of randomized experiments with orthogonal block structure, I and II, </title> <journal> Proc. of the Royal Acad., </journal> <note> Series A 283 (1965), 147-162 and 163-178. </note>
Reference-contexts: Wreath products are of interest in data analysis as the symmetry groups of nested designs <ref> [54] </ref> and in structural chemistry as the automorphism groups of non-rigid molecules [67]. They are often studied as the automorphism groups of graphs obtained by "composition" (cf. [39]). Abstractly, G [S n ] has the structure of a semidirect product G n fi S n in the following way.
Reference: [55] <author> A. Oppenheim and R. Schafer, </author> <title> Discrete-time signal processing. </title> <publisher> Prentice Hall, </publisher> <address> NJ, </address> <year> 1989. </year>
Reference-contexts: The set of such representations is a complete set of inequivalent irreducible representations for Z=nZ and the corresponding Fourier transform is usually known as the discrete Fourier transform. This computation is central to the subject of digital signal processing (cf. <ref> [55] </ref>). The arithmetic complexity for computing a Fourier transform conceivably depends on the choice of basis for the irreducible representations. <p> reduced complexity t G . 5.1 Finite abelian groups Applications in digital signal processing and data analysis motivated the need for a fast cyclic discrete Fourier transform (cf. the example of Section 2.1 and the references [23, 24, 41]) and more generally a fast Fourier transform on any abelian group <ref> [33, 55] </ref>. Application of Corollary 4.9 immediately gives us some well-known results bounding the complexity of the Fourier transform on any finite abelian group.
Reference: [56] <author> D. Rockmore, </author> <title> Fast Fourier transforms for wreath products, </title> <journal> Appl. Comput. Harmon. Anal. </journal> <volume> 4 (1995), </volume> <pages> 34-55. </pages>
Reference-contexts: This bound follows from a direct approach to the computation. We conjecture that all finite groups have complexity O (jGj log c jGj) for some universal constant c. This has already been proved for many different classes of nonabelian groups <ref> [19, 58, 56, 7] </ref>. The first results of this type obtained for nonabelian groups are due to Willsky. In [66] Willsky studies a particular class of finite state Markov processes evolving on metacyclic groups. <p> We believe this is a new contribution to the subject, although some aspects of it do appear in the work of Clausen on the symmetric group [19, 20] and that of Rockmore on wreath products <ref> [56] </ref>. The general technique of factoring representation matrices in terms of sparse matrices was first formulated by Clausen [20]. Our techniques are quite general. We obtain upper bounds for the complexity of the Fourier transform of any group or homogeneous space in terms of representation theoretic data. <p> Following this, Section 5 develops results on the complexities of specific groups. We start it by deriving the Cooley-Tukey algorithm in the context of finite abelian groups, the results of Clausen and Baum [19] on the symmetric group, results on classical Weyl groups, and the results of Rockmore <ref> [56] </ref> on wreath products. We then give algorithms for the general linear and unitary groups over a finite field, and finish our examples with some results on classical Chevalley groups over finite fields. In Section 6, we apply the separation of variables algorithm to homogeneous spaces. <p> Theorem 5.6 ( <ref> [56] </ref>, Theorem 3) Let G [S n ] denote the wreath product of S n by the finite group G and let d G denote the maximum dimension of an irreducible representation of G. <p> QED Remark. Notice that a subgroup chain for G will give a chain of subgroups of G [S n ] refining the chain (40). In <ref> [56] </ref> bases adapted to the subgroup chain (40) have been constructed. 21 5.4 A new FFT for the general linear group over a finite field Let GL n (q) denote the group of invertible n fi n matrices with entries in the field of q elements where q is a prime
Reference: [57] <author> D. Rockmore, </author> <title> Efficient computation of Fourier inversion for finite groups, </title> <journal> J. of the A.C.M. </journal> <volume> 41(1) (1994), </volume> <pages> 31-66. </pages>
Reference-contexts: The nonabelian cases have also been motivated by applications. They have been found useful in new approaches to data analysis [28], VLSI design [12], the design of filters [46, 66] and efficient group convolution algorithms <ref> [21, 57] </ref>.
Reference: [58] <author> D. Rockmore, </author> <title> Fast Fourier analysis for abelian group extensions, </title> <journal> Adv. in Appl. Math. </journal> <volume> 11 (1990), </volume> <pages> 164-204. </pages>
Reference-contexts: This bound follows from a direct approach to the computation. We conjecture that all finite groups have complexity O (jGj log c jGj) for some universal constant c. This has already been proved for many different classes of nonabelian groups <ref> [19, 58, 56, 7] </ref>. The first results of this type obtained for nonabelian groups are due to Willsky. In [66] Willsky studies a particular class of finite state Markov processes evolving on metacyclic groups.
Reference: [59] <author> J. P. Serre, </author> <title> Linear representations of finite groups, </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1977. </year>
Reference-contexts: What follows is a brief review of the basic concepts and definitions needed to formulate the problem on arbitrary groups. For a complete introduction to the representation theory of finite groups Serre's book <ref> [59] </ref> is a good reference. Recall that a (complex) matrix representation of a finite group G is a map from G into the group of d fi d invertible matrices with complex entries, GL d (C), such that (st) = (s)(t) for every s; t 2 G. <p> Elementary representation theory shows that the sum of the squares of the degrees of a complete set of irreducible representations of G is equal to jGj (see e.g. <ref> [59] </ref>, p. 18). <p> This is the "conquer" portion of our divide and conquer strategy. The main tool we use is a form of Schur's Lemma. This simple result pins down the structure of intertwining matrices for a given matrix representation. Lemma 4.2 (Schur) (see e.g. <ref> [59] </ref>, p. 13) Let K be a subgroup of G and a K-adapted representation of G such that = 1 1 r r where 1 ; : : : ; r are inequivalent irreducible matrix representations of K, and i occurs with multiplicity m i .
Reference: [60] <author> C. C. Sims, </author> <title> Computational methods in the study of permutation groups, in: Computational problems in abstract algebra, </title> <editor> J. Leech, ed., </editor> <publisher> Pergamon Press 1970, </publisher> <pages> 169-183. </pages>
Reference-contexts: Strong generating sets arise naturally in the context of many algorithmic issues in computational group theory <ref> [60] </ref>. In particular, fast algorithms for their construction for stabilizer subgroup chains in permutation groups are a cornerstone for many important techniques [5].
Reference: [61] <author> R. Stong, </author> <title> Some asymptotic results on finite vector spaces, </title> <journal> Adv. in Appl. Math. </journal> <volume> 9 (1988), </volume> <pages> 167-199. </pages>
Reference-contexts: Define F ff (q; t) = n=1 1 qt n and let f n (q; ff) be the coefficient of t n in the expansion of F ff (q; t) considered as a power series in t. Then by results of <ref> [61] </ref> and [65] f n (q; 1) is the number of conjugacy classes of GL n (q), f n (q; 0) is the number of canonical forms of n fi n matrices over F q , and f n (q; 1) is the number of conjugacy classes of U n (q <p> I.e., it is f nk (1; ff). From this, it is easy to show that, for fixed q, the constant B ff (q 1 ) appearing in Theorem 7.3 is the best possible. In fact, a slight extension of the asymptotics due to Stong <ref> [61] </ref> shows that for fixed q and fixed ff 1, f n (q; ff) = B ff (q 1 )q n + 2 B ff (q 1 1 q 2 2 ) 1 # n n as n tends to infinity.
Reference: [62] <author> E. Thoma, </author> <title> Die Einschrankung der Charaktere von GL(n; q) auf GL(n 1; q), </title> <journal> Math. Zeit. </journal> <volume> 119 (1971), </volume> <pages> 321-338. </pages>
Reference-contexts: Proof: Part (i) follows straight from the paper of Thoma <ref> [62] </ref>. Part (ii) is proved in the appendix which follows this section.
Reference: [63] <author> R. Tolimieri, M. An, and C. Lu, </author> <title> Algorithms for discrete Fourier transform and convolution, </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1989. </year>
Reference-contexts: The abelian case has a long history (cf. [23, 24, 41]), and ever since the publication of the Cooley-Tukey fast Fourier transform (FFT) [25] these algorithms have been at the heart of digital signal processing (see for example <ref> [3, 33, 64, 63] </ref> and the many references contained therein). The nonabelian cases have also been motivated by applications. They have been found useful in new approaches to data analysis [28], VLSI design [12], the design of filters [46, 66] and efficient group convolution algorithms [21, 57].
Reference: [64] <author> C. Van Loan, </author> <title> Computational framework for the fast Fourier transform, </title> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1992. </year>
Reference-contexts: The abelian case has a long history (cf. [23, 24, 41]), and ever since the publication of the Cooley-Tukey fast Fourier transform (FFT) [25] these algorithms have been at the heart of digital signal processing (see for example <ref> [3, 33, 64, 63] </ref> and the many references contained therein). The nonabelian cases have also been motivated by applications. They have been found useful in new approaches to data analysis [28], VLSI design [12], the design of filters [46, 66] and efficient group convolution algorithms [21, 57].
Reference: [65] <author> G. E. Wall, </author> <title> On the conjugacy classes in the unitary, symplectic and orthogonal groups, </title> <journal> J. Austral. Math. Soc. </journal> <year> (1963), </year> <pages> 1-62. </pages>
Reference-contexts: Define F ff (q; t) = n=1 1 qt n and let f n (q; ff) be the coefficient of t n in the expansion of F ff (q; t) considered as a power series in t. Then by results of [61] and <ref> [65] </ref> f n (q; 1) is the number of conjugacy classes of GL n (q), f n (q; 0) is the number of canonical forms of n fi n matrices over F q , and f n (q; 1) is the number of conjugacy classes of U n (q 2 );
Reference: [66] <author> A. S. Willsky, </author> <title> On the algebraic structure of certain partially observable finite-state Markov processes, </title> <journal> Inform. Contr. </journal> <volume> 38 (1978), </volume> <pages> 179-212. </pages>
Reference-contexts: The nonabelian cases have also been motivated by applications. They have been found useful in new approaches to data analysis [28], VLSI design [12], the design of filters <ref> [46, 66] </ref> and efficient group convolution algorithms [21, 57]. <p> We conjecture that all finite groups have complexity O (jGj log c jGj) for some universal constant c. This has already been proved for many different classes of nonabelian groups [19, 58, 56, 7]. The first results of this type obtained for nonabelian groups are due to Willsky. In <ref> [66] </ref> Willsky studies a particular class of finite state Markov processes evolving on metacyclic groups. In so doing he gives an O (jGj log jGj) FFT for G a metacyclic group, designed to give an efficient nonlinear filtering algorithm for the situation in which noisy observations are taken.
Reference: [67] <author> C. M. Woodman. </author> <title> The symmetry groups of non-rigid molecules as semi-direct products, Mol. </title> <journal> Phys. </journal> <volume> (6)19 (1970), </volume> <pages> 753-780. </pages>
Reference-contexts: Wreath products are of interest in data analysis as the symmetry groups of nested designs [54] and in structural chemistry as the automorphism groups of non-rigid molecules <ref> [67] </ref>. They are often studied as the automorphism groups of graphs obtained by "composition" (cf. [39]). Abstractly, G [S n ] has the structure of a semidirect product G n fi S n in the following way.
Reference: [68] <author> A. Zelevinsky. </author> <title> Representations of finite classical groups, </title> <booktitle> Lecture Notes in Mathematics Vol 869, </booktitle> <publisher> Springer-Verlag, </publisher> <address> NY, </address> <year> 1981. </year> <month> 38 </month>
Reference-contexts: Proof: (i) It is well-known that the restriction of an irreducible representation of S n to S n1 is multiplicity-free (see e.g. [42]) as is that of B n to B n1 (see e.g. <ref> [68] </ref>). The result for D n follows easily from that of B n , and the fact that D n is of index 2 in B n . (ii) This follows from the hook formula, (see [42], p. 77).
References-found: 68

