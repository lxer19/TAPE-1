URL: http://www.cs.rutgers.edu/~krasheed/icga97.ps
Refering-URL: http://athos.rutgers.edu/~shehata/papers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: shehata@cs.rutgers.edu  hirsh@cs.rutgers.edu  
Title: Using Case-Based Learning to Improve Genetic-Algorithm-Based Design Optimization  
Author: Khaled Rasheed Haym Hirsh 
Address: New Brunswick, NJ 08903  New Brunswick, NJ 08903  
Affiliation: Computer Science Department Rutgers University  Computer Science Department Rutgers University  
Abstract: In this paper we describe a method for improving genetic-algorithm-based optimization using case-based learning. The idea is to utilize the sequence of points explored during a search to guide further exploration. The proposed method is particularly suitable for continuous spaces with expensive evaluation functions, such as arise in engineering design. Empirical results in two engineering design domains and across different representations demonstrate that the proposed method can significantly improve the efficiency and reliability of the GA optimizer. Moreover, the results suggest that the modification makes the genetic algorithm less sensitive to poor choices of tuning parameters such as muta tion rate.
Abstract-found: 1
Intro-found: 1
Reference: [ Bouchard 1992 ] <author> E. E. Bouchard. </author> <title> Concepts for a future aircraft design environment. </title> <booktitle> In 1992 Aerospace Design Conference, </booktitle> <address> Irvine, CA, </address> <month> February </month> <year> 1992. </year> <month> AIAA-92-1188. </month>
Reference: [ Cerbone 1992 ] <author> G. Cerbone. </author> <title> Machine learning in engineering: Techniques to speed up numerical optimization. </title> <type> Technical Report 92-30-09, </type> <institution> Oregon State University Department of Computer Science, </institution> <year> 1992. </year> <type> Ph.D. Thesis. </type>
Reference: [ Gelsey et al. 1996 ] <author> Andrew Gelsey, M. Schwabacher, and Don Smith. </author> <title> Using modeling knowledge to guide design space search. </title> <booktitle> In Fourth International Conference on Artificial Intelligence in Design '96, </booktitle> <year> 1996. </year>
Reference-contexts: We summarize it briefly here; it is described in more detail elsewhere <ref> [ Gelsey et al. 1996 ] </ref> . Figure 1 shows a diagram of a typical airplane automatically designed by our software system.
Reference: [ Glover 1990 ] <author> F. Glover. </author> <title> Tabu search. </title> <journal> ORSA Journal on Computing, </journal> <volume> 2(1) </volume> <pages> 4-32, </pages> <year> 1990. </year>
Reference-contexts: The idea of using optimization history to guide further search is also related to Tabu search <ref> [ Glover 1990 ] </ref> . Our modified GA has demonstrated superior reliability as a global optimizer with a high potential for effectively searching a design search space in a reasonable amount of time. However, it is not clear that the sampled K-nearest neighbor approach is the best approach for screening.
Reference: [ Goldberg 1989 ] <author> David E. Goldberg. </author> <title> Genetic Algorithms in Search, Optimization, and Machine Learning. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> 1989. </year>
Reference-contexts: 1 Introduction Genetic Algorithms (GAs) <ref> [ Goldberg 1989 ] </ref> are search algorithms that simulate the process of natural selection. <p> However, it is not clear that the sampled K-nearest neighbor approach is the best approach for screening. In fact, we are currently investigating the use of a clustered K-nearest neighbor approach instead. We are also investigating the use of a classifier system <ref> [ Goldberg 1989 ] </ref> which screens potential points by classifying them as promising or unpromising. We also plan to explore the use of more sophisticated machine-learning techniques to extrapolate from past evaluations as part of the screening module.
Reference: [ Haas et al. 1992 ] <author> M. Haas, R. Elmquist, and D. So-bel. </author> <title> NAWC Inlet Design and Analysis (NIDA) Code, </title> <note> Final Report. UTRC Report R92-970037-1, </note> <year> 1992. </year>
Reference-contexts: The simulator used in this domain is a program called "NIDA" which was developed at United Technology Research Center (UTRC) as an inlet analysis/design tool <ref> [ Haas et al. 1992 ] </ref> . The eight design parameters (all continuous valued) are given in Table 2, with coordinates given in terms of axial (x) and radial (r) positions.
Reference: [ Janikow and Michalewicz 1991 ] <author> Cezary Janikow and Zbigniew Michalewicz. </author> <title> An experimental comparison of binary and floating point representations in genetic algorithms. </title> <booktitle> In Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> pages 31-36. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year>
Reference-contexts: We repeated the experiment of optimization in the aircraft domain using the same 10 starting populations and the same GA architecture, except that the line crossover and shrinking window mutation operators were replaced with the real crossover and the nonuniform mutation operators <ref> [ Wright 1990, Janikow and Michalewicz 1991 ] </ref> respectively. The result is shown in Figure 4. The proposed modification brought the average steady state error from 5.8% down to 3.5%. <p> We also repeated these experiments using the classical binary-encoding GA (bit-string representation for individuals, the classical bit-string crossover operator, and the classical bit mutation operator). The result of this experiment is shown in Figure 5. Even though the classical GA performance was unsatisfactory (which is not surprising <ref> [ Janikow and Michalewicz 1991 ] </ref> ), here, too, case-based learning yields a substantial improvement, with the average steady state error decreasing from 20% to 15%. Our second set of experiments concern the sensitivity of our case-based approach to parameter values.
Reference: [ Mahfoud 1995 ] <author> Samir Mahfoud. </author> <title> A comparison of parallel and sequential niching methods. </title> <booktitle> In Proceedings of the Sixth International Conference on Genetic Algorithms, </booktitle> <pages> pages 136-143. </pages> <publisher> Morgan Kaufmann, </publisher> <month> July </month> <year> 1995. </year>
Reference-contexts: Here selection was performed by rank because of the wide range of fitness values caused by the use of a penalty function. Rank selection prevents the first discovered evaluable/feasible points from dominating the search and causing premature convergence. The replacement strategy used here is a crowding technique <ref> [ Mahfoud 1995 ] </ref> , which takes into consideration both the fitness and the proximity of the points in the GA population. <p> Since the SM already determines the nearest neighbor for each new point, this operation does not add any significant extra overhead to the search. This rejection action can be viewed as a limiting case of sharing <ref> [ Mahfoud 1995 ] </ref> . * If severe loss of diversity is detected (the average distance between the points of the current population becomes a small fraction of its value in the starting random population) during the course of the optimization, a re-seeding operation is done.
Reference: [ Michalewicz 1996 ] <author> Zbigniew Michalewicz. </author> <title> Genetic Algorithms + Data Structures = Evolution Programs. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1996. </year>
Reference-contexts: GAs have many advantages over other search techniques in complex domains. They tend to avoid being trapped in local sub-optima and can handle different types of optimization variables (discrete, continuous and mixed). A large amount of literature exists about the application of GAs to optimization problems <ref> [ Michalewicz 1996 ] </ref> . This paper investigates some aspects of the GA optimization of realistic continuous-variable engineering design domains. In such domains a design is represented by a number of continuous design parameters, so that potential solutions are vectors (points) in a multidimensional vector space.
Reference: [ More and Wright 1993 ] <author> Jorge J. More and Stephen J. Wright. </author> <title> Optimization Software Guide. </title> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1993. </year>
Reference-contexts: Experimental results demonstrated the superiority of the adapted GA in the domains of aircraft design optimization and missile inlet design and across binary and floating point representations. Although a great deal of work has been done in the area of numerical optimization algorithms <ref> [ More and Wright 1993 ] </ref> , not much has been published about the particular difficulties of attempting to optimize functions defined by large "real-world" numerical simulators.
Reference: [ Powell and Skolnick 1993 ] <author> D. Powell and M. Skol-nick. </author> <title> Using genetic algorithms in engineering design optimization with non-linear constraints. </title> <booktitle> In Proceedings of the Fifth International Conference on Genetic Algorithms, </booktitle> <pages> pages 424-431. </pages> <publisher> Morgan Kauf-mann, </publisher> <month> July </month> <year> 1993. </year>
Reference-contexts: A number of research efforts have combined AI techniques with numerical optimization [ Tong et al. 1992, Powell 1990, Powell and Skolnick 1993, Bouchard 1992, Williams and Cagan 1994, Cerbone 1992 ] , and although a GA was used in some of these efforts <ref> [ Powell 1990, Powell and Skolnick 1993 ] </ref> , this typically represented the use of an off-the-shelf GA, with no attempt to adapt it to the domain as done in this research.
Reference: [ Powell 1990 ] <author> D. Powell. Inter-GEN: </author> <title> A hybrid approach to engineering design optimization. </title> <type> Technical report, </type> <institution> Rensselaer Polytechnic Institute Department of Computer Science, </institution> <month> December </month> <year> 1990. </year> <type> Ph.D. Thesis. </type>
Reference-contexts: A number of research efforts have combined AI techniques with numerical optimization [ Tong et al. 1992, Powell 1990, Powell and Skolnick 1993, Bouchard 1992, Williams and Cagan 1994, Cerbone 1992 ] , and although a GA was used in some of these efforts <ref> [ Powell 1990, Powell and Skolnick 1993 ] </ref> , this typically represented the use of an off-the-shelf GA, with no attempt to adapt it to the domain as done in this research.
Reference: [ Rasheed and Gelsey 1996 ] <author> Khaled Rasheed and An-drew Gelsey. </author> <title> Adaptation of genetic algorithms for engineering design optimization. </title> <booktitle> In Fourth International Conference on Artificial Intelligence in Design '96: Evolutionary Systems in Design Workshop, </booktitle> <year> 1996. </year>
Reference-contexts: We then present a number of experiments concerning the use of our GA modification on two realistic engineering tasks. We conclude the paper with a discussion of related efforts and future work. 2 GA Architecture The GA used in this research is described in detail in <ref> [ Rasheed and Gelsey 1996, Rasheed et al. ] </ref> . Each individual in the GA population represents a parametric description of an artifact, such as an aircraft or a missile. All parameters have continuous intervals. <p> Floating point representation is used. The de fault crossover operator is line crossover (LC) and the default mutation operator is the shrinking window mutation <ref> [ Rasheed and Gelsey 1996, Rasheed et al. ] </ref> . <p> We have previously explored the use of GA optimization relative to other traditional optimization methods in these two domains <ref> [ Rasheed and Gelsey 1996, Rasheed et al. ] </ref> , and therefore this paper focuses on the effect of the proposed modifications on GA performance, rather than on overall GA behavior.
Reference: [ Rasheed et al. ] <author> Khaled Rasheed, Haym Hirsh, and Andrew Gelsey. </author> <title> A genetic algorithm for continuous design space search. </title> <journal> Artificial Intelligence in Engineering Journal, </journal> <note> to appear. </note>
Reference-contexts: We then present a number of experiments concerning the use of our GA modification on two realistic engineering tasks. We conclude the paper with a discussion of related efforts and future work. 2 GA Architecture The GA used in this research is described in detail in <ref> [ Rasheed and Gelsey 1996, Rasheed et al. ] </ref> . Each individual in the GA population represents a parametric description of an artifact, such as an aircraft or a missile. All parameters have continuous intervals. <p> Floating point representation is used. The de fault crossover operator is line crossover (LC) and the default mutation operator is the shrinking window mutation <ref> [ Rasheed and Gelsey 1996, Rasheed et al. ] </ref> . <p> We have previously explored the use of GA optimization relative to other traditional optimization methods in these two domains <ref> [ Rasheed and Gelsey 1996, Rasheed et al. ] </ref> , and therefore this paper focuses on the effect of the proposed modifications on GA performance, rather than on overall GA behavior.
Reference: [ Ravise and Sebag 1996 ] <author> Caroline Ravise and Michele Sebag. </author> <title> An advanced evolution should not repeat its past errors. </title> <booktitle> In Thirteenth International Conference on Machine Learning, </booktitle> <year> 1996. </year>
Reference-contexts: The idea of using the GA optimization history to guide further explorations was studied in <ref> [ Ravise and Sebag 1996 ] </ref> where inductive learning was used to learn rules describing bad points in a multi-dimension boolean space. The use of rules was appropriate in that research because the evaluation functions were not expensive enough to warrant the use of case-based learning.
Reference: [ Tong et al. 1992 ] <author> Siu Shing Tong, David Powell, and Sanjay Goel. </author> <title> Integration of artificial intelligence and numerical optimization techniques for the design of complex aerospace systems. </title> <booktitle> In 1992 Aerospace Design Conference, </booktitle> <address> Irvine, CA, </address> <month> February </month> <year> 1992. </year> <month> AIAA-92-1189. </month>
Reference: [ Williams and Cagan 1994 ] <author> Brian C. Williams and Jonathan Cagan. </author> <title> Activity analysis: the qualitative analysis of stationary points for optimal reasoning. </title> <booktitle> In Proceedings, 12th National Conference on Artificial Intelligence, </booktitle> <pages> pages 1217-1223, </pages> <address> Seattle, Wash-ington, </address> <month> August </month> <year> 1994. </year>
Reference: [ Wright 1990 ] <author> Alden Wright. </author> <title> Genetic algorithms for real parameter optimization. </title> <booktitle> In The First workshop on the Foundations of Genetic Algorithms and Classifier Systems, </booktitle> <pages> pages 205-218, </pages> <institution> Indiana University, Bloomington, </institution> <address> July 1990. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: For example, when evaluable points form thin slab-like regions that are not parallel to any of the principal axis some crossover operators such as point crossover may not yield satisfactory results <ref> [ Wright 1990 ] </ref> . This paper presents a modification of the GA specifically intended to improve its performance in realistic continuous-variable engineering design domains of this sort. The idea is to accumulate a large enough sample of the points evaluated during the course of the GA optimization. <p> We repeated the experiment of optimization in the aircraft domain using the same 10 starting populations and the same GA architecture, except that the line crossover and shrinking window mutation operators were replaced with the real crossover and the nonuniform mutation operators <ref> [ Wright 1990, Janikow and Michalewicz 1991 ] </ref> respectively. The result is shown in Figure 4. The proposed modification brought the average steady state error from 5.8% down to 3.5%.
Reference: [ Zha et al. 1996 ] <author> G.-C. Zha, Don Smith, Mark Schwabacher, Khaled Rasheed, Andrew Gelsey, and Doyle Knight. </author> <title> High performance supersonic missile inlet design using automated optimization. </title> <booktitle> In AIAA Symposium on Multidisciplinary Analysis and Optimization '96, </booktitle> <year> 1996. </year>
Reference-contexts: The timing overhead of screening, however, was only about 3%. 3.2 Supersonic Missile Inlet Design Our second domain concerns the design of inlets for supersonic and hyper-sonic missiles. We summarize it briefly here; it is described in more detail in <ref> [ Zha et al. 1996 ] </ref> . The missile inlet designed is an axisymmetric mixed compression inlet that cruises at Mach 4 at 60000 feet altitude.
References-found: 19

