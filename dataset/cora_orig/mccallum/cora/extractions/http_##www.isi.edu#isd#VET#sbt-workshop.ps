URL: http://www.isi.edu/isd/VET/sbt-workshop.ps
Refering-URL: http://www.isi.edu/isd/VET/vet-body.html
Root-URL: http://www.isi.edu
Email: rickel@isi.edu  
Title: ITS '96 Workshop on Simulation-Based Learning Technology Intelligent Tutoring in Virtual Environment Simulations  
Author: W. Lewis Johnson and Jeff W. Rickel johnson, 
Date: May 10, 1996  
Web: http://www.isi.edu/isd/VET/vet.html  
Address: 4676 Admiralty Way, Marina del Rey, CA 90292-6695  
Affiliation: Information Sciences Institute Computer Science Dept. University of Southern California  
Abstract: Virtual environment simulations can be effective training tools. Students, immersed in a computer simulation of a work environment, interact with the simulation as they would with the actual work environment. However, virtual environment technology by itself does not necessarily lead to efficient learning, because learners may fail to realize when their actions in the environment are inappropriate or suboptimal. Also, if the learners cannot determine how to interact with the simulation to achieve a desired goal, they may be reduced to trial and error. Intelligent tutoring can improve the effectiveness of virtual environments by providing feedback and guidance to the students when they are not able to interact effectively with the simulation. To provide such tutoring, we are developing a pedagogical agent that can inhabit the virtual environment along with students. The agent can demonstrate skills to students, monitor their activities and provide assistance when needed, and explain why particular actions are appropriate in given situations. Our agent is the first step toward the creation of virtual collaborators that can interact naturally with learners in an apprenticeship work setting.
Abstract-found: 1
Intro-found: 1
Reference: [Anderson et al., 1990] <author> Anderson, J., Boyle, C., Corbett, A., and Lewis, M. </author> <year> (1990). </year> <title> Cognitive modeling and intelligent tutoring. </title> <journal> Artificial Intelligence, </journal> <volume> 42 </volume> <pages> 7-49. </pages>
Reference-contexts: In contrast, the traditional model tracing approach <ref> [Anderson et al., 1990] </ref> attempts to track and interpret every individual student action, allowing the student little opportunity to make mistakes and learn from them. 3.2 Explanation We are designing our pedagogical agents to be able to show students how to perform tasks, as well as answer questions about why the
Reference: [Badler et al., 1993] <author> Badler, N., Phillips, C., and Webber, B. </author> <year> (1993). </year> <title> Simulated Agents and Virtual Humans. </title> <publisher> Oxford University Press. </publisher>
Reference-contexts: The agent causes changes in the simulated world by sending commands to the simulator via the communication bus. Pedagogical agents appear in the simulated world either as simulated humans, using the J ack T M human figure package <ref> [Badler et al., 1993] </ref>, or as disembodied sensors and effectors (e.g., grippers for grabbing objects).
Reference: [Hill and Johnson, 1993] <author> Hill, R. and Johnson, W. </author> <year> (1993). </year> <title> Designing an intelligent tutoring system based on a reactive model of skill acquisition. </title> <booktitle> In Proceedings of the World Conference of Artificial Intelligence in Education, </booktitle> <pages> pages 273-281, </pages> <address> Edinburgh, Scotland. </address>
Reference-contexts: Moreover, there is less need to monitor student actions in detail in a simulation-based environment than in other types of learning environments. If students encounter difficulties when interacting with simulations, and overcome those difficulties, they will learn from the experience, as our cognitive modeling studies have shown <ref> [Hill and Johnson, 1993] </ref>. Furthermore, interruptions from a tutor while the student attends to the simulation can be distracting and impede task performance.
Reference: [Hill and Johnson, 1995] <author> Hill, R. and Johnson, W. </author> <year> (1995). </year> <title> Situated plan attribution. </title> <journal> Journal of Artificial Intelligence in Education, </journal> <volume> 6(1) </volume> <pages> 35-67. </pages>
Reference-contexts: 1 Introduction Our recent research has been focusing on intelligent tutoring capabilities that can enhance the effectiveness of simulation-based training systems <ref> [Hill and Johnson, 1995, Johnson, 1995] </ref>. Interactive simulations enable students to improve their skills through practice and improve their knowledge as they encounter difficulties and overcome them. However, simulations by themselves do not ensure efficient learning. For example, students sometimes fail to realize when their actions are inappropriate or suboptimal. <p> The plan recognizer also looks for mistakes that will lead to impasses later if not corrected. This impasse-driven approach to plan recognition, which we call situated plan attribution, was previously implemented in the REACT simulation-based training system <ref> [Hill and Johnson, 1995] </ref>. Situated plan attribution exploits the fact that the student is working with an interactive simulation on a well-defined task. Most training tasks require the student to take actions in the simulated world in order to achieve some desired state.
Reference: [Johnson, 1986] <author> Johnson, W. </author> <year> (1986). </year> <title> Intention-Based Diagnosis of Novice Programming Errors. </title> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: In these situations, knowledge of common plans and procedures in the domain is sufficient to enable student actions to be tracked. This is analogous to the way that knowledge of the intentions underlying programs can facilitate program debugging <ref> [Johnson, 1986] </ref>. Additionally, highly situated activities, in which students must respond to stimuli provided by the simulation, further simplify student tracking.
Reference: [Johnson, 1994] <author> Johnson, W. </author> <year> (1994). </year> <title> Agents that learn to explain themselves. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 1257-1263, </pages> <address> Seattle, WA. </address> <publisher> AAAI, AAAI Press. </publisher>
Reference-contexts: Our approach to question answering is based on the Debrief system for explaining the actions of autonomous agents <ref> [Johnson, 1994] </ref>. Debrief identifies the goals, situational factors, and situation assessments that were critical to a given agent decision, and it uses these to generate explanations.
Reference: [Johnson, 1995] <author> Johnson, W. </author> <year> (1995). </year> <title> Pedagogical agents for virtual learning environments. </title> <booktitle> In Proceedings of the International Conference on Computers in Education, </booktitle> <pages> pages 41-48, </pages> <address> Singapore. </address> <publisher> AACE. </publisher>
Reference-contexts: 1 Introduction Our recent research has been focusing on intelligent tutoring capabilities that can enhance the effectiveness of simulation-based training systems <ref> [Hill and Johnson, 1995, Johnson, 1995] </ref>. Interactive simulations enable students to improve their skills through practice and improve their knowledge as they encounter difficulties and overcome them. However, simulations by themselves do not ensure efficient learning. For example, students sometimes fail to realize when their actions are inappropriate or suboptimal.
Reference: [Munro et al., 1993] <author> Munro, A., Johnson, M., Surmon, D., and Wogulis, J. </author> <year> (1993). </year> <title> Attribute-centered simulation authoring for instruction. </title> <booktitle> In Proceedings of the AI-ED 93 World Conference of Artificial Intelligence in Education, </booktitle> <pages> pages 82-89, </pages> <address> Edinburgh, Scot--land. </address>
Reference-contexts: The behavior of the objects is programmed by rules and constraints that propagate changes in one object to other objects. Simulations are authored and executed using the RIDES system developed by the USC Behavioral Technologies Lab <ref> [Munro et al., 1993] </ref>. Students and instructors interact with the simulated world via viewers that monitor the communications bus to determine the state of objects and then produce graphical renderings of those objects.
References-found: 8

