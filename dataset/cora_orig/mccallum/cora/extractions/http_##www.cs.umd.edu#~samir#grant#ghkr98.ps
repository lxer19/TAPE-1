URL: http://www.cs.umd.edu/~samir/grant/ghkr98.ps
Refering-URL: http://www.cs.umd.edu/~samir/grant/career.html
Root-URL: 
Title: Approximation Algorithms with Bounded Performance Guarantees for the Clustered Traveling Salesman Problem  
Author: Nili Guttmann-Beck Refael Hassin Samir Khuller Balaji Raghavachari 
Abstract: Let G = (V; E) be a complete undirected graph with vertex set V , edge set E, and edge weights l(e) satisfying triangle inequality. The vertex set V is partitioned into clusters V 1 ; : : : ; V k . The clustered traveling salesman problem (CTSP) is to compute a shortest Hamiltonian cycle (tour) that visits all the vertices, and in which the vertices of each cluster are visited consecutively. Since this problem is a generalization of the traveling salesman problem, it is NP-hard. In this paper, we consider several variants of this basic problem and provide polynomial time approximation algorithms for them.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Anily, J. Bramel and A. Hertz, </author> <title> "A 5 3 -approximation algorithm for the clustered traveling salesman tour and path problems," </title> <type> Manuscript, </type> <month> December </month> <year> 1997. </year>
Reference-contexts: with the same approximation bound), a 3 2 -approximation for the problem in which there are only two clusters with unspecified end vertices [10], and a 5 3 -approximation for the problem in which the order of visiting the clusters in the tour is specified as part of the problem <ref> [1] </ref>. fl Department of Statistics and Operations Research, Tel-Aviv University, Tel-Aviv 69978, Israel. Email: fnili,hassing@math.tau.ac.il y Department of Computer Science and UMIACS, University of Maryland, College Park, MD 20742, USA. Research supported by NSF CAREER Award CCR 9501355. <p> This follows by finding a path between each pair of end vertices inside each cluster using the approximation algorithm for the TSPP, and connecting the paths using the given order. If the order of the clusters is specified but the end vertices are not specified, Anily, Bramel and Hertz <ref> [1] </ref> give a 5 3 -approximation algorithm. Theorem 7.4 If there exists an ff-approximation algorithm for CTSP with given end vertices and k clusters, for some k 2, then there exists an ff-approximation algorithm for the TSPP with given end vertices.
Reference: [2] <author> E. Arkin, R. Hassin and L. Klein, </author> <title> "Restricted delivery problems on a network," </title> <booktitle> Networks 29 (1997), </booktitle> <pages> pages 205-216. </pages>
Reference-contexts: We present approximation algorithms with bounded performance ratios for several different variants of this problem. The previously known related results are a 3.5-approximation for the problem with given starting vertices <ref> [2] </ref> (and this result extends to the case where no starting or ending vertices are given, with the same approximation bound), a 3 2 -approximation for the problem in which there are only two clusters with unspecified end vertices [10], and a 5 3 -approximation for the problem in which the <p> This was the problem considered in <ref> [2] </ref> and a 3:5 approximation was given for it. We give an algorithm with an approximation ratio of 2:643. We propose two different heuristics, and select the shorter of the tours generated.
Reference: [3] <author> J. A. Chisman, </author> <title> "The clustered traveling salesman problem," </title> <booktitle> Computers & Operations Research 2 (1975), </booktitle> <pages> pages 115-119. </pages>
Reference-contexts: The clustered traveling salesman problem (CTSP) is to compute a shortest Hamiltonian cycle (tour) that visits all the vertices, and in which the vertices of each cluster are visited consecutively. Applications and other related work may be found in <ref> [3, 9, 13] </ref> and an exact branch and bound algorithm is described in [15]. The traveling salesman problem (TSP) can be viewed as a special case of CTSP in which there is only one cluster V 1 = V (alternatively, each V i is a singleton).
Reference: [4] <author> N. Christofides, </author> <title> "Worst-case analysis of a new heuristic for the traveling salesman problem," </title> <type> Technical Report 388, </type> <institution> Graduate School of Industrial Administration, Carnegie-Mellon University (1976). </institution> <month> 16 </month>
Reference-contexts: Let s and t be two specified vertices in G. We consider the problem of finding a path with s and t as its two ends, that visits all vertices of G. One can solve this problem in a manner similar to Christofides' algorithm for TSP <ref> [4] </ref>, by starting with MST (G), adding a suitable matching, and then finding an Eulerian walk of the resulting graph. We do not get a 3 2 approximation ratio since in the TSPP the optimal solution is a path, and not a tour. <p> Figure 4 describes the algorithm. In Step 1, we compute k + 1 tours, one for each cluster V i , and a tour that visits just the start vertices. All these tours can be computed using the TSP algorithm of Christofides <ref> [4] </ref>. The 9 Algorithm GivenStart Input 1. A graph G = (V; E), jV j = n, with weights l (e) e 2 E. 2. A partition of V into clusters V 1 ; :::; V k . 3. <p> Hence there exists a collection of k tours, one through each cluster V i , whose total cost is L + d. We now follow the analysis of Christofides <ref> [4] </ref>. The sum of costs of minimum spanning trees through each cluster is at 10 s 1 s 3 most L. The cost of the matchings connecting odd-degree vertices of each cluster is at most 1 2 (L+d).
Reference: [5] <author> H. A. Eiselt, M. Gendreau and G. </author> <title> Laporte, "Arc routing problems, part II: The rural postman problem," </title> <booktitle> Operations Research 43 (1995), </booktitle> <pages> pages 399-414. </pages>
Reference-contexts: Algorithm ShortArcs greatly simplifies when applied to RPP and, turns to be a straightforward generalization of Christofides algorithm for TSP. As indicated by Frederickson [6], it produces a 3 2 -approximation algorithm for the problem (see the survey by Eiselt et al. <ref> [5] </ref> for more details and a paper by Jansen [11] for a generalization). We denote by Algorithm RuralPostman the algorithm which executes these two algorithms and returns the shorter solution.
Reference: [6] <author> G. N. Frederickson, </author> <title> "Approximation algorithms for some postman problems," </title> <journal> J. Assoc. Comput. Mach. </journal> <volume> 26 (1979), </volume> <pages> pages 538-554. </pages>
Reference-contexts: The second part of Theorem 2.4 holds for this case as well. Algorithm ShortArcs greatly simplifies when applied to RPP and, turns to be a straightforward generalization of Christofides algorithm for TSP. As indicated by Frederickson <ref> [6] </ref>, it produces a 3 2 -approximation algorithm for the problem (see the survey by Eiselt et al. [5] for more details and a paper by Jansen [11] for a generalization). We denote by Algorithm RuralPostman the algorithm which executes these two algorithms and returns the shorter solution.
Reference: [7] <author> G. N. Frederickson, M. S. Hecht and C. E. Kim, </author> <title> "Approximation algorithms for some routing problems," </title> <journal> SIAM J. Comput. </journal> <volume> 7 (1978), </volume> <pages> pages 178-193. </pages>
Reference-contexts: It is possible to derive a 2- approximation algorithm for the problem using standard techniques such as "twice around the tree" heuristic. Algorithm StackerCrane by Frederickson, Hecht and Kim <ref> [7] </ref> is a 1.8-approximation algorithm for SCP. It applies two different algorithms and then selects the best of the two solutions generated by them. <p> Algorithm StackerCrane by Frederickson, Hecht and Kim [7] is a 1.8-approximation algorithm for SCP. It applies two different algorithms and then selects the best of the two solutions generated by them. We briefly review the basic ideas behind the two algorithms (for details, see <ref> [7, 12] </ref>): * Algorithm ShortArcs: Shrink the directed arcs and reduce the problem to an instance of TSP. Use an approximation algorithm for the TSP instance, and then recover a solution for the original problem (the algorithm itself is somewhat subtle and the reader is referred to the original paper). <p> Add two copies of each such edge, and orient the copies in opposite directions to each other. The resulting graph is Eulerian, and the algorithm outputs an Euler walk of this solution. The algorithm performs well when D is large. The following theorem can be derived from <ref> [7] </ref>. Theorem 2.4 Consider an instance of the stacker crane problem in which the sum of the lengths of the arcs is D. Let OPT be an optimal solution, and let A = OPT D. The walk returned by Algorithm ShortArcs has length at most 3 2 A + 2D.
Reference: [8] <author> J. A. Hoogeveen, </author> <title> "Analysis of Christofides' heuristic: Some paths are more difficult than cycles," </title> <journal> Operations Research Letters, </journal> <volume> 10 (1991), </volume> <pages> pages 291-295. </pages>
Reference-contexts: Thus, improving the approximation ratio for a constant number of clusters is at least as hard as improving the approximation ratio for TSPP (for which the best approximation ratio is currently 5 3 <ref> [8] </ref>). 2 Preliminaries Some of our algorithms use a directed cycle cover routine in digraphs. The directed cycle cover problem finds a set of directed cycles of minimum total weight that includes all its vertices. <p> Let OPT denote both an optimal solution of the problem under consideration and its total length. Similarly, let MST (G) denote both a minimum-weight spanning tree of G and its weight. 2.1 The traveling salesman path problem Hoogeveen <ref> [8] </ref> considered three variations of TSPP, in which as part of the input instance the following constraints are placed on the end vertices of the resulting Hamiltonian path: (1) both 2 end vertices of are specified, (2) only one of the end vertices is specified, and (3) no end vertices are <p> The length of this cycle is OPT + l (s; t). The cycle can be decomposed into two matchings between any even-size subset of vertices, and the length of the smaller matching is at most 1 2 (OPT + l (s; t)). We use the strategy of Hoogeveen <ref> [8] </ref>, and add to M ST (G) a minimum-weight matching of vertices selected based on their degree in M ST (G) (odd degree vertices of V n fs; tg and even degree vertices of fs; tg in M ST (G)), and output an Eulerian walk S 2 from s to t <p> Proof: Using Theorem 2.1, observe that if l (s; t) &gt; 1 3 OP T , then l (S 1 ) 5 3 OPT . Otherwise, l (s; t) 1 3 OP T , in which case l (S 2 ) 5 3 OP T . Remark 2.3 Hoogeveen <ref> [8] </ref> proves the bound of 5 3 OP T in a different way.
Reference: [9] <author> M. Gendreau, A. Hertz and G. </author> <title> Laporte, "The traveling salesman problem with backhauls," </title> <journal> Computers and Operations Research, </journal> <volume> 23 (1996), </volume> <pages> pages 501-508. </pages>
Reference-contexts: The clustered traveling salesman problem (CTSP) is to compute a shortest Hamiltonian cycle (tour) that visits all the vertices, and in which the vertices of each cluster are visited consecutively. Applications and other related work may be found in <ref> [3, 9, 13] </ref> and an exact branch and bound algorithm is described in [15]. The traveling salesman problem (TSP) can be viewed as a special case of CTSP in which there is only one cluster V 1 = V (alternatively, each V i is a singleton).
Reference: [10] <author> M. Gendreau, G. Laporte and A. Hertz, </author> <title> "An approximation algorithm for the traveling sales-man problem with backhauls," </title> <journal> Operations Research, </journal> <volume> 45 (1997), </volume> <pages> pages 639-641. </pages>
Reference-contexts: results are a 3.5-approximation for the problem with given starting vertices [2] (and this result extends to the case where no starting or ending vertices are given, with the same approximation bound), a 3 2 -approximation for the problem in which there are only two clusters with unspecified end vertices <ref> [10] </ref>, and a 5 3 -approximation for the problem in which the order of visiting the clusters in the tour is specified as part of the problem [1]. fl Department of Statistics and Operations Research, Tel-Aviv University, Tel-Aviv 69978, Israel. <p> Since the algorithm chooses the shorter of the tours, the theorem follows. 6 Unspecified end vertices In this case we are only given the clusters and we are free to choose the start and end vertices in the clusters. For this version a 1:5-approximation was given for 2 clusters <ref> [10] </ref>. We give a 2:75 approximation for an arbitrary number of clusters. We first apply a TSPP algorithm with unspecified ends within each cluster. We use the direct edges between the ends of these paths as special edges for an RPP instance. <p> The case k = 1 is the TSP. Gendreau, Laporte and Hertz <ref> [10] </ref> considered the case of two clusters with unspecified end vertices, and gave a 3 2 -approximation algorithm for it. We show that the CTSP with given end vertices is equivalent to TSPP with given end vertices. <p> Assume that it goes through s (the other case is similar). The two paths are t; V 1 ; s and s; V 2 ; s; t. Remark 7.6 The approximation given in <ref> [10] </ref> is for the CTSP with unspecified end vertices with three clusters, where one is a singleton. The main point of the last theorem is that we cannot obtain such a bound even when a single new cluster is added, unless the bound for TSPP of 5 3 is improved.
Reference: [11] <author> K. Jansen, </author> <title> "An approximation algorithm for the general routing problem," </title> <journal> Information Processing Letters, </journal> <volume> 41 (1992), </volume> <pages> pages 333-339. </pages>
Reference-contexts: As indicated by Frederickson [6], it produces a 3 2 -approximation algorithm for the problem (see the survey by Eiselt et al. [5] for more details and a paper by Jansen <ref> [11] </ref> for a generalization). We denote by Algorithm RuralPostman the algorithm which executes these two algorithms and returns the shorter solution. Remark 2.5 In some of our algorithms for CTSP, we generate instances of RPP (SCP) and run the above algorithms for them.
Reference: [12] <author> D. S. Johnson and C. H. Papadimitriou, </author> <title> "Performance guarantees for heuristics," </title> <editor> E. L. Lawler, J. K. Lenstra, A. H. G. Rinnooy Kan and D. B. Shmoys (eds). </editor> <title> The Traveling Salesman Problem: </title>
Reference-contexts: Algorithm StackerCrane by Frederickson, Hecht and Kim [7] is a 1.8-approximation algorithm for SCP. It applies two different algorithms and then selects the best of the two solutions generated by them. We briefly review the basic ideas behind the two algorithms (for details, see <ref> [7, 12] </ref>): * Algorithm ShortArcs: Shrink the directed arcs and reduce the problem to an instance of TSP. Use an approximation algorithm for the TSP instance, and then recover a solution for the original problem (the algorithm itself is somewhat subtle and the reader is referred to the original paper).
References-found: 12

