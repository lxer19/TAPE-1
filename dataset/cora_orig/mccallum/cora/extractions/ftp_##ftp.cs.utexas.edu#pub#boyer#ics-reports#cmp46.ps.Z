URL: ftp://ftp.cs.utexas.edu/pub/boyer/ics-reports/cmp46.ps.Z
Refering-URL: ftp://ftp.cs.utexas.edu/pub/boyer/ics-reports/index.html
Root-URL: 
Phone: (512) 471-1901  
Title: EGS: A Transformational Approach to Automatic Example Generation  
Author: Myung W. Kim 
Address: 2100 Main Building  Austin, Texas 78712  
Affiliation: Institute for Computing Science  The University of Texas at Austin  
Date: 46 January 1985  
Pubnum: Technical Report  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Ballantyne, A. M. and Bledsoe, W. W. </author> <title> On Generating and Using Examples in Proof Discovery. </title> <type> Technical Report ATP-64, </type> <institution> Departments of Mathematics and Computer Sciences, University of Texas at Austin, </institution> <year> 1980. </year>
Reference-contexts: Moreover, its means-ends analysis method for example modification may not be suitable for cases where moderate expressive power is required. Ballantyne and Bledsoe's GRAPHER 3 Here examples are printed without "QUOTE". For most cases the shown examples have been generated well within 10 seconds of CPU time. 11 <ref> [1] </ref> generates counter-examples for non-trivial topological conjectures. Given a conjecture, GRAPHER constructs a set-theoretic relationship graph among the set variables occurring in the conjecture. The graph serves as a global constraint specification when the set variables are assigned values. REF-ARF [5] employed the constraint-satisfaction technique.
Reference: [2] <author> Boyer, R. S. and Moore, </author> <title> J S. </title>
Reference-contexts: This approach suggests a general framework for example generation and also provides a uniform representation scheme for problems in which problem-specific procedural knowledge can be applied to achieve efficiency as well. The Example Generation System (EGS) presented here has adopted the Boyer-Moore theory <ref> [2] </ref> as the underlying domain formalism. Several advantages are immediate. The Boyer-Moore theory provides a general and expressively powerful language. The problems of representation and evaluation can be easily solved.
References-found: 2

