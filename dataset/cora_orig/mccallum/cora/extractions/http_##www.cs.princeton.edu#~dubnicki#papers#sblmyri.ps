URL: http://www.cs.princeton.edu/~dubnicki/papers/sblmyri.ps
Refering-URL: http://www.cs.princeton.edu/~dubnicki/pub.html
Root-URL: http://www.cs.princeton.edu
Email: fdubnicki,bilas,lig@cs.princeton.edu  philbin@research.nj.nec.com  
Title: Design and Implementation of Virtual Memory-Mapped Communication on Myrinet  
Author: Cezary Dubnicki, Angelos Bilas, Kai Li James Philbin 
Address: Princeton, New Jersey 08540  Princeton, New Jersey 08540  
Affiliation: Princeton University  NEC Research Institute, Inc.  
Abstract: This paper describes the design and implementation of the virtual memory-mapped communication model (VMMC) on a Myrinet network of PCI-based PCs. VMMC has been designed and implemented for the SHRIMP multicomputer where it delivers user-to-user latency and bandwidth close to the limits imposed by the underlying hardware. The goal of this work is to provide an implementation of VMMC on a commercially available hardware platform; to determine whether the benefits of VMMC can be realized on the new hardware; and to investigate network interface design tradeoffs by comparing SHRIMP with Myrinet and its respective VMMC implementation. Our Myrinet implementation of VMMC achieves 9.8 microseconds one-way latency and provides 108.4 MBytes per second user-to-user bandwidth. Compared to SHRIMP, the Myrinet implementation of VMMC incurs relatively higher overhead and demands more network interface resources (LANai processor, on-board SRAM) but requires less operating system support. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> The myrinet on-line documentation. </institution> <note> http://www.myri.com:80/scs/documentation, 1996. </note>
Reference-contexts: Myrinet and Its Network Interface Myrinet is a high-speed local-area network or system-area network for computer systems. A Myrinet network is composed of point-to-point links that connects hosts and switches. The network link can deliver 1.28 Gbits/sec bandwidth in each direction <ref> [1, 5] </ref>. The Myrinet network provides in-order network delivery with very low bit error rates (below 10 15 ). On sending, the 8-bit CRC is computed by hardware and is appended to the packet. <p> This program assembles routing information from each node to all possible destinations within a given network by exchanging special mapping messages between nodes. We refer the interested reader to the Myricom documentation for more detail on the implementation of the network mapping LCP <ref> [1] </ref>. After each node has mapped the entire network, each VMMC daemon extracts the routing information, and then replaces the mapping LCP with an LCP that implements VMMC. <p> The cost here is more resources used by the network interface, including the LANai processor and on-board SRAM. 7. Related work The Myrinet switching fabric has been used by several different research projects to produce high performance message passing interfaces. These include the Myrinet API <ref> [1] </ref> from Myricom, Active Messages [12] (AM) from the Univ. of California at Berkeley, Fast Messages [10] (FM) from Illinois University and PM [11] from the Real World Computing Partnership.
Reference: [2] <author> A. Bilas and E. Felten. </author> <title> Fast rpc on the shrimp virtual memory mapped network interface. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <note> 14:to appear, </note> <month> Feb. </month> <year> 1997. </year>
Reference-contexts: The low cost of VMMC on fast interfaces like SHRIMP and Myrinet allows a simpler design. Moreover, user to user communication in VMMC exposes the full communication stack to the programmer and allows for customized protocols. A detailed description of vRPC can be found in <ref> [2] </ref>. Although vRPC was tuned for the SHRIMP hardware, on the Myrinet network interface it achieves a round trip latency of 66 microseconds (compared to 33 microseconds on SHRIMP). The maximum bandwidth for SHRIMP is 8-12 MBytes/sec, but for Myrinet we achieved 32-33 MBytes/sec. <p> The one copy on the receive side is necessary, if compatibility with SunRPC is to be maintained. We note here that when compatibility restriction is removed it is possible to implement an RPC interface which has bandwidth close to this delivered by VMMC (see <ref> [2] </ref> for details). 2 We only added support for the new protocol, so that code for it is automatically generated. 6. Network Interface Design Tradeoffs We are interested in investigating how Myrinet and SHRIMP network interface designs impact the performance of VMMC implementation.
Reference: [3] <author> M. Blumrich, K. Li, R. Alpert, C. Dubnicki, E. Felten, and J. Sandberg. </author> <title> A virtual memory mapped network interface for the shrimp multicomputer. </title> <booktitle> In Proceedings of the 21st Annual Symposium on Computer Architecture, </booktitle> <pages> pages 142-153, </pages> <month> Apr. </month> <year> 1994. </year>
Reference: [4] <author> M. A. Blumrich, C. Dubnicki, E. Felten, and K. Li. </author> <title> Protected, user-level dma for the shrimp network interface. </title> <booktitle> In Proceedings of the Second International Symposium on High Performance Computer Architecture, </booktitle> <month> Feb. </month> <year> 1996. </year>
Reference-contexts: A user process can initiate a deliberate update transfer with just two memory-mapped I/O instructions <ref> [4] </ref>; these instructions access locations on the network interface board across I/O bus. Picking up a send request in Myrinet requires scanning send queues of all possible senders, whereas in SHRIMP it is done immediately by the network interface state machine responding to a wide range of memory-mapped addresses.
Reference: [5] <author> N. J. Boden, D. Cohen, R. E. Felderman, A. E. Kulawik, C. L. Seitz, J. N. Seizovic, and W. Su. Myrinet: </author> <title> A gigabit per-second local area network. </title> <journal> IEEE Micro, </journal> <volume> 15(1) </volume> <pages> 29-36, </pages> <month> Feb. </month> <year> 1995. </year>
Reference-contexts: Myrinet and Its Network Interface Myrinet is a high-speed local-area network or system-area network for computer systems. A Myrinet network is composed of point-to-point links that connects hosts and switches. The network link can deliver 1.28 Gbits/sec bandwidth in each direction <ref> [1, 5] </ref>. The Myrinet network provides in-order network delivery with very low bit error rates (below 10 15 ). On sending, the 8-bit CRC is computed by hardware and is appended to the packet.
Reference: [6] <author> D. Culler, L. Liu, R. P. Martin, and C. Yoshikawa. </author> <title> Logp performance assessment of fast network interfaces. </title> <booktitle> IEEE Micro, </booktitle> <year> 1996. </year>
Reference-contexts: On our hardware platform the Myrinet API has a latency of 63 microseconds for a 4 byte packet and a peak ping-pong bandwidth of 30 MBytes per second for an 8 KByte messages. In Active Messages <ref> [6] </ref> each communication is formed by a request/reply pair. Request messages include the address of a handler function at the destination node and a fixed size payload that is passed as an argument to the handler. Notification is done using either waiting for response, polling or interrupts.
Reference: [7] <author> C. Dubnicki, L. Iftode, E. Felten, and K. Li. </author> <title> Software support for virtual memory-mapped communication. </title> <booktitle> In Proceedings of the 1996 International Parallel Processing Symposium, </booktitle> <year> 1996. </year>
Reference-contexts: introduction to VMMC see <ref> [7] </ref>. The VMMC mechanism achieves protection by requiring that data transfer may take place only after the receiver gives the sender permission to transfer data to a given area of the receiver's address space.
Reference: [8] <author> E. Felten, R. Alpert, A. Bilas, M. Blumrich, D. Clark, S. Damianakis, C. Dubnicki, L. Iftode, and K. Li. </author> <title> Early experience with message-passing on the shrimp multicom puter. </title> <booktitle> In Proceedings of the 23rd Annual Symposium on Computer Architecture, </booktitle> <year> 1996. </year>
Reference: [9] <author> S. Pakin, M. Buchanan, M. Lauria, and A. Chien. </author> <title> The fast messages (fm) 2.0 streaming interface. </title> <note> Submitted to Usenix'97, </note> <year> 1996. </year>
Reference-contexts: Notification is done using either waiting for response, polling or interrupts. The current implementation of active messages does not support channels or threads. Active Messages does not yet run on our hardware. The Fast Messages (FM) 2.0 <ref> [9] </ref> is a user-level communication interface which does not provide protection, i.e. only one user process per node is assumed at any given time. FM design favors low latency, rather than high bandwidth communication. FM 2.0 supports a streaming interface that allows efficient gather/scatter operations.
Reference: [10] <author> S. Pakin, M. Lauria, and A. Chien. </author> <title> High performance messaging on workstations: Illinois fast messages (fm) for myrinet. </title> <booktitle> In Supercomputing '95, </booktitle> <year> 1995. </year>
Reference-contexts: Related work The Myrinet switching fabric has been used by several different research projects to produce high performance message passing interfaces. These include the Myrinet API [1] from Myricom, Active Messages [12] (AM) from the Univ. of California at Berkeley, Fast Messages <ref> [10] </ref> (FM) from Illinois University and PM [11] from the Real World Computing Partnership. The Myrinet API supports multi-channel communication, message checksums, dynamic network configuration and scatter/gather operations; however, it does not support flow control or reliable message delivery.
Reference: [11] <author> H. Tezuka, A. Hori, and Y. Ishikawa. </author> <title> Pm: a high-performance communication library for multi-user parallel environments. </title> <note> Submitted to Usenix'97, </note> <year> 1996. </year>
Reference-contexts: Related work The Myrinet switching fabric has been used by several different research projects to produce high performance message passing interfaces. These include the Myrinet API [1] from Myricom, Active Messages [12] (AM) from the Univ. of California at Berkeley, Fast Messages [10] (FM) from Illinois University and PM <ref> [11] </ref> from the Real World Computing Partnership. The Myrinet API supports multi-channel communication, message checksums, dynamic network configuration and scatter/gather operations; however, it does not support flow control or reliable message delivery.
Reference: [12] <author> T. von Eicken, D. Culler, S. Goldstein, and K. Schauser. </author> <title> Active messages: a mechanism for integrated communica tion and computation. </title> <booktitle> In Proceedings of 19th ISCA, </booktitle> <pages> pages 256-266, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: Related work The Myrinet switching fabric has been used by several different research projects to produce high performance message passing interfaces. These include the Myrinet API [1] from Myricom, Active Messages <ref> [12] </ref> (AM) from the Univ. of California at Berkeley, Fast Messages [10] (FM) from Illinois University and PM [11] from the Real World Computing Partnership. The Myrinet API supports multi-channel communication, message checksums, dynamic network configuration and scatter/gather operations; however, it does not support flow control or reliable message delivery.
References-found: 12

