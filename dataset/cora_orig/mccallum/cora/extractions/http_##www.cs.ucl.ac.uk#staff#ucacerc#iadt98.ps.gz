URL: http://www.cs.ucl.ac.uk/staff/ucacerc/iadt98.ps.gz
Refering-URL: http://www.cs.ucl.ac.uk/staff/E.Collopy/research.html
Root-URL: http://www.cs.ucl.ac.uk
Email: Email: fecollopy, mleveneg@cs.ucl.ac.uk  
Title: EVOLVING EXAMPLE RELATIONS TO SATISFY FUNCTIONAL DEPENDENCIES  
Author: Ethan Collopy and Mark Levene 
Address: Gower Street, London WC1E 6BT, U.K.  
Affiliation: Department of Computer Science, University College London  
Abstract: Example and counterexample relations are important during the process of database design in order to guide the database designer towards specifying a correct set of integrity constraints, which we assume to be functional dependencies (FDs). We propose a stochastic algorithm which evolves an example relation that satisfies a set of FDs from a random relation of a specified cardinality and domain size as input by the database designer. Extensive simulations were conducted over 72 FD sets with the domain and tuple sizes varied over batches, each containing 1000 sample evolutions. All evolved relations were mined using a quality function whose criterion is exact satisfaction of the given FD set. Our results show that this probabilistic procedure evolves a relation which has a high probability of possessing a high quality, in terms of proximity to an Armstrong relation. We also give a novel algorithm for presenting all relevant counterexample relations with cardinality two, via backtracking. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Back, T. and Schwefel, H. </author> <year> (1993). </year> <title> An overview of evolutionary algorithms for parameter optimization. Evolutionary Computation, </title> <address> 1(1):1- 23. </address>
Reference-contexts: The quality, in terms of its proximity to that of an Armstrong relation, for the FD set is measured and returned to the designer. Finally, the database designer either accepts F or modifies the parameters F, m and d and returns to the second step. Our algorithm is evolutionary <ref> (Back and Schwefel, 1993) </ref> in that it incorporates a stochastic approach for altering a relation by a mutation operation. The algorithm proceeds as follows; initially a relation is randomly generated following the input of the designer and a given FD set.
Reference: <author> Beeri, C., Dowd, M., Fagin, R., and Statman, R. </author> <year> (1984). </year> <title> On the structure of Armstrong relations for functional dependencies. </title> <journal> Journal of the ACM, </journal> <volume> 31(1):30 - 46. </volume>
Reference-contexts: One of the problems with Armstrong relations is that, in general, their cardinal-ity is exponential in the size of F and set of attributes, R, over which F is defined <ref> (Beeri et al., 1984) </ref>. It would be highly desirable if varying Armstrong relations of different domain and tuple sizes may be generated as a side effect of forming example relations. <p> Moreover, it would also be useful to generate small random counterexample relations for FDs not logically implied by F; we note that for any FD that is not logically implied by F, a counterexample of two tuples can always be generated <ref> (Beeri et al., 1984) </ref>. Both examples and counterexamples are important: examples give the database designer an idea of what the actual data may look like, while counterexamples highlight FDs which may be violated and thus must be as compact as possible. <p> F is called a complete set of excluded FDs in (Gottlob and Libkin, 1990) and the left-hand sides of the FDs in F are denoted by GEN (F) <ref> (Beeri et al., 1984) </ref>. It is well-known that an Arm-strong relation with a minimal number of tuples has at most jGEN (F)j +1 tuples (Beeri et al., 1984). The next proposition shows the connection between F and an almost Armstrong relation. <p> called a complete set of excluded FDs in (Gottlob and Libkin, 1990) and the left-hand sides of the FDs in F are denoted by GEN (F) <ref> (Beeri et al., 1984) </ref>. It is well-known that an Arm-strong relation with a minimal number of tuples has at most jGEN (F)j +1 tuples (Beeri et al., 1984). The next proposition shows the connection between F and an almost Armstrong relation. <p> Proposition 5.1 A nonempty set of relations r over R is an almost Armstrong relation for F if and only if for every FD X ! A 2 F, there exists a counterexample r i 2 r for X ! A. 2 The next corollary follows from <ref> (Beeri et al., 1984, Lemma 3.1) </ref> indicating that an almost Armstrong relation can be viewed as an alternative representation for an Armstrong relation. <p> We note that the time complexity of GENERATE All (F, A) is, in general, exponential in the sizes of R and F, since GEN (F) and thus MAX (F, A) may contain an exponential number of elements in the sizes of R and F <ref> (Beeri et al., 1984) </ref>. <p> One such set which is unlikely to have a high quality is the null set of FDs. An example of sets which have an exponential j GEN (F ) j in the size of the FD set are discussed in <ref> (Beeri et al., 1984) </ref>. <p> Figure 2 highlights the maximal qualities achieved for two FD sets, F 1 , as detailed earlier, and F 5 = fAB ! G; CD ! G; EF ! Gg; F 5 following the form of the FD sets described previously and in <ref> (Beeri et al., 1984) </ref>. For F 5 there are many attributes which are independent of each other and so it is highly improbable that an Armstrong relation will be formed.
Reference: <author> Collopy, E. and Levene, M. </author> <year> (1996). </year> <title> Evolving example relations to satisfy functional dependencies. </title> <type> Technical Report RN/96/124, </type> <institution> University College London, U.K. </institution>
Reference-contexts: The set-theoretic relation, more functional than, is a partial order in the sets of NDs, described fully in <ref> (Collopy and Levene, 1996) </ref>. <p> This leads us to model the evolution process as an absorbing Markov chain and to give a formula for the expected number of mutations necessary to evolve a random relation <ref> (Collopy and Levene, 1996) </ref>. The iteration of a relation, denoted by ITERATE (r, F), is defined as the result of invoking Algorithm 3, presented below. The mutations are repeated until F is satisfied in r. <p> Algorithm 3 (ITERATE (r,F)) 1. begin 2. Result := r; 3. q := 0; 3. while Result 6j= F do 4. Result := MUTATE (Result,F); 5. q := q + 1; 6. end while; 7. return Result, q; 8. end. The next theorem, whose proof is given in <ref> (Collopy and Levene, 1996) </ref>, is fundamental for the Markov chain analysis of the evolution of a relation to satisfy a set of FDs. Theorem 4.1 Let N be any set of NDs over R such that N v F. <p> G ! H; H ! Gg (non-interfering) over Fig. 1 Average states to absorption for sets F 1 and F 2 , Domain sizes: 3, 6 DFGH and F 4 = fE ! DM S; D ! M; M ! D; DS ! Eg (interfering) over EDMS are described in <ref> (Collopy and Levene, 1996) </ref>. All of the FD sets used here were comparable in size and complexity given that the larger the FD set the higher, on average, number of states to evolution required.
Reference: <editor> Fayyad, U. M., Piatetsky-Shapiro, G., Smyth, P., and Uthu-rusamy, R., editors (1996). </editor> <booktitle> Advances in Knowledge Discovery and Data Mining, </booktitle> <volume> volume 1. </volume> <publisher> MIT Press. </publisher>
Reference-contexts: We would also like to explore the technique of using NDs to approximate FDs within data mining algorithms, possibly improving current methods of data dependency mining <ref> (Fayyad et al., 1996) </ref>.
Reference: <author> Gottlob, G. and Libkin, L. </author> <year> (1990). </year> <title> Investigations on Arm-strong relations, dependency inference and excluded functional dependencies. </title> <journal> Acta Cybernetica, </journal> <volume> 9(4):385 - 402. </volume>
Reference-contexts: Let F denote the set of FDs given by fX ! A j A 2 R and X is a maximal set (with respect to ) such that X ! A 62 F + g. F is called a complete set of excluded FDs in <ref> (Gottlob and Libkin, 1990) </ref> and the left-hand sides of the FDs in F are denoted by GEN (F) (Beeri et al., 1984). It is well-known that an Arm-strong relation with a minimal number of tuples has at most jGEN (F)j +1 tuples (Beeri et al., 1984).
Reference: <author> Grant, J. and Minker, J. </author> <year> (1985). </year> <title> Normalisation and axiomatisation for numerical dependencies. </title> <journal> Information and Control, </journal> <volume> 65 </volume> <pages> 1-17. </pages>
Reference-contexts: This relation is then mutated based on a probabilistic selection of an unsatisfied FD from the given set and an attribute which assists violation of this FD in the relation. We use numerical dependencies (NDs) <ref> (Grant and Minker, 1985) </ref> as an approximation of the unsatisfied FDs in the relation. The mutations steer the relation towards a final state wherein all of the FDs in the specified set are satisfied. <p> An FD is a special case of an ND when k = 1. Numerical dependencies were investigated in <ref> (Grant and Minker, 1985) </ref>. From now on we let R be a relation schema, r be a relation over R and t 2 r be a tuple.
Reference: <author> Mannila, H. and Raiha, K.-J. </author> <year> (1992). </year> <title> The Design of Relational Databases. </title> <publisher> Addison-Wesley. </publisher>
Reference-contexts: All evolved relations are mined using a quality function whose criterion is exact satisfaction of the given FD set. A deterministic approach used to generate an Arm-strong relation (Algorithm 14.2, <ref> (Mannila and Raiha, 1992) </ref>) has the severe drawback in that the same relation is generated every time the algorithm runs. <p> Example 6.1 Using Algorithm 14.2 in <ref> (Mannila and Raiha, 1992) </ref> a standard AR has 7 tuples (exactly j GEN (F ) j +1) and domain size 5 for the FD setfAB ! D; BC ! D; D ! E; E ! Ag. <p> Tuple size for FD sets F 1 and F 5 contains an Armstrong relation with a domain size 8 and 9 tuples. In this instance a larger relation than using Algorithm 14.2 of <ref> (Mannila and Raiha, 1992) </ref>, highlights both the satisfied and violated dependencies thoroughly. We now move on to examine the pathological sets, these being the sets for which an Armstrong relation was only rarely, or in some cases never, achieved.
Reference: <author> Ullman, J. D. </author> <year> (1988). </year> <title> Principles of Database and Knowledge-Base Systems, volume 1. </title> <publisher> Computer Science Press, </publisher> <address> Rockville, MD. </address>
References-found: 8

