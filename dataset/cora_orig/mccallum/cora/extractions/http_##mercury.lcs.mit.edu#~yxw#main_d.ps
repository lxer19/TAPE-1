URL: http://mercury.lcs.mit.edu/~yxw/main_d.ps
Refering-URL: http://mercury.lcs.mit.edu/~yxw/
Root-URL: 
Title: A Model for Window Based Flow Control in Packet-Switched Networks  
Author: Xiaowei Yang and David D. Clark 
Date: June 1998  
Address: Cambridge, MA 02139  
Affiliation: Laboratory for Computer Science Massachusetts Institute of Technology  
Abstract: Recently, networks have increased rapidly both in scale and speed. Problems related to the control and management are of increasing interest. The average throughput and end-to-end delay of a network flow are most interesting to us. However, there is no satisfactory tool to obtain such parameters. The traditional packet-by-packet event driven simulation is slow when the network speed is high. The time driven simulation is always facing the difficulty of choosing the right time interval when simulating packet-switched networks. As Transmission Control Protocol (TCP) is the most widely used transport layer protocol, and it uses window based flow control mechanism, classic queuing theories involving Markov Chain assumptions are not applicable. This paper describes a model for the window based flow control packet-switched networks. The model attempts to provide a way to obtain the steady state results for large and high speed networks using TCP. In this paper, we discuss in detail the construction, implementation and application of the model. This paper also compares the results obtained from the model with those from the packet by packet event driven simulation. The comparison shows the model is correctly modeling the networks.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Dimitri Bertsekas and Robert Gallager. </author> <title> Data Networks. </title> <publisher> Prentice-Hall, Inc, </publisher> <year> 1992. </year>
Reference-contexts: Unless we change the abstraction level, it is hard to improve its performance. Analytic method often uses classic queuing and network stochastic models which are restricted to problems that can be approximated as Markov 1 chains <ref> [1] </ref>. As networks are using complicated protocols such as TCP/IP to implement flow control, they can not be simply modeled by Markov chain assumption. Thus, we lack a satisfying model to study the behavior of window based flow control packet-switched networks. <p> The last section is a short summary of the paper and an assessment of future work. 2 Related Work For rate based flow control networks, there are known solutions to find out the average throughput of each flow. For example, the max-min fair rate allocation algorithm <ref> [1] </ref> computes each flow's rate for a given network's configuration and a set of flows with specified paths. <p> Flow Control A flow of data between a sender A and a receiver B is said to be end-to-end window flow controlled if there is an upper bound on the data units that have been sent by A but are not known by A to have been received by B <ref> [1] </ref>. The upper bound is called window size. In TCP, the upper bound is used both to keep the sender from overflowing the receiver's buffer and to keep the sender from overflowing the buffers inside the network. The sender keeps two window sizes for the two purposes. <p> More clearly, we have: n ji = C i Notice we can use Equation 7 to substitute n ji in Equation 1, we finally get: W j = j ( i2p j C i which is exactly the result from the Little's Theorem <ref> [1] </ref>. We illustrated it in an intuitive way. Equation 5 and 8 are fully constrained. The total number of unknowns are the sum of the number of flows and the number of congested links. Corresponding to each flow, we have an Equation 8. <p> We use our record and the equation set of the model to get the steady state parameters. Here are the details of this algorithm. We multiply each flow's window size by a scaling factor ff (ff 2 <ref> [0; 1] </ref>) and substitute W j in Equation 9 with ffW j . Let Cong (ff) denotes the set of congested links for the value ff. Obviously, Cong (0) = . Let E (ff) be a set of equations chosen from the constraints. Let n be the number of flows.
Reference: [2] <author> S. Floyd. </author> <title> Connections with Multiple Congested Gateways in Packet-Switched Networks Part 1: One-way Traffic. </title> <journal> Computer Communication Review, </journal> <volume> 21(5), </volume> <month> October </month> <year> 1991. </year> <note> [3] http://www nrg.ee.lbl.gov/ns/. ns version 1 - LBNL Network Simulator. </note>
Reference-contexts: One defect of the model is that it does not incorporate the dynamics of TCP explicitly 4 . It has to depend on event driven simulation when modelling TCP's window's adaptation algorithm. To totally avoid event driven simulation, we could use the "TCP-friendly" equation <ref> [2] </ref> [?] to develop a different set of equations.
Reference: [4] <author> V. Jacobson. </author> <title> Congestion Avoidance and Control. </title> <booktitle> In Proceedings of the ACM SIGCOMM'88, </booktitle> <month> August </month> <year> 1988. </year>
Reference-contexts: Combining the two parts, we can find a set of steady state parameters. The difficult point is how to locate fully utilized links. The rates of flows are shaped by those links, which is the same phenomenon as TCP's self-clocking mechanism <ref> [4] </ref>. There is a simple and attractive idea. For each flow j, the maximum rate it could reach is W j P j . This happens when there is no congested link along its path. This rate can be viewed as the required rate of this flow.
Reference: [5] <author> William H. Press, Saul A. Teukolsky, William T. Vetterling, and Brian P. Flannery. </author> <note> Numer ical Recipes in C. </note> <institution> the Press Syndicate of the University of Cambridge, </institution> <year> 1992. </year>
Reference-contexts: We do not need to increase ff from zero. Another concern is how to solve the set of equations in E (ff). As a matter of fact, there are no good, general methods for solving systems of more than one nonlinear equations <ref> [5] </ref>. Finding a root for a set of nonlinear equations which have N unknowns is to find points which are common to N unrelated zero-contour hyper-surfaces (the N equations). Each equation is of dimension N 1 in a N dimension space. <p> Each equation is of dimension N 1 in a N dimension space. The numerical methods for solving such equations usually involve iterations and matrix operations. The convergence is always a problem. Newton-Raphson Method is the simplest multidimensional root finding method. We borrowed the code from book <ref> [5] </ref> for the equation solving part. Given the right set of congested links, Newton-Raphson method converges very well while solving the set of equations in E. 5.2 Performance Analysis The major cost of the model is the equation solving part.
Reference: [6] <author> Floyd S. and Jacobson V. </author> <title> Random Early Detection gateways for Congestion Avoidance. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 1(4), </volume> <month> August </month> <year> 1993. </year>
Reference-contexts: Since in the real routers, buffer sizes are limited, when a router's buffer overflows, packets will get dropped. TCP will adjust its window size correspondingly. In this section, we assume links are using RED (the Random Early Detection) <ref> [6] </ref> dropping mechanism. We simulate TCP with RED links by applying this model. In Section 7.1, a brief introduction of RED is listed. In Section 7.2, we discuss the assumptions our simulation depends on.
Reference: [7] <author> Anlu Yan and Wei-Bo Gong. </author> <title> Fluid Simulation for High Speed Networks. </title> <booktitle> In Proceedings of the 15th International Teletraffic Congress, </booktitle> <month> June </month> <year> 1997. </year> <month> 24 </month>
Reference-contexts: Especially when we are interested in a long time period simulation, it may also take a long time to do so many updatings. Another proposal is to use fluid model based time-driven simulation to simulate high speed networks <ref> [7] </ref>. This model simulates the network traffic as fluid. It is proved that the discretization error can be bounded by a constant proportional to the discretization time interval. This model can quickly locate the time and place of congestion.
References-found: 6

