URL: ftp://ftp.cs.indiana.edu/pub/techreports/TR429.ps.Z
Refering-URL: http://www.cs.indiana.edu/trindex.html
Root-URL: 
Title: Iterative Methods For Fast Radiosity Solutions  
Author: Gladimir V. Guimaraes Baranoski Randall Bramley Peter Shirley 
Keyword: CR Categories and Subject Descriptors: I.3.3 [Computer Graphics]: General; I.3.6 [Computer Graphics]: Methodology and Techniques; I.3.7 [Computer Graphics]: Three Dimensional Graphics and Realism. Key Words and Phrases: iterative methods, linear systems, radiosity.  
Date: April 1995  
Abstract: In applications involving the radiosity method such as computer animation, time is a crucial factor. This report shows that iterative methods which converge in a smaller number of iterations do not necessarily solve the radiosity system of linear equations in a faster way. For high average reflectance environments is introduced a method that converges faster than any standard method presented in the computer graphics literature so far.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> O. Axelsson and G. Lindskog, </author> <title> On the eigenvalue distribution of a class of preconditioning methods, </title> <type> Tech. Rep. Report 3, </type> <institution> Goteborg Numerical Analysis, </institution> <year> 1989. </year>
Reference-contexts: To use this starting guess we replace line 2 of the above algorithm by: B i = E i + i Ambient The speed of convergence of the CG method depends on the overall distribution of eigenvalues of the matrix G. Upper bounds <ref> [1] </ref> for the number of iterations are often based on the condition number of G.
Reference: [2] <author> G. V. G. Baranoski, </author> <title> The parametric differential method: An alternative to the calculation of form factors, </title> <journal> Computer Graphics Forum, </journal> <volume> 11 (1992), </volume> <pages> pp. 193-204. </pages>
Reference-contexts: If there is no obstacle g ij is equal to one otherwise g ij is zero. There are several methods for the calculation of form factors between finite areas. These meth ods can be divided into deterministic and nondeterministic. The parametric differential method <ref> [2] </ref> is an example of a deterministic method in which the integrand of equation 28 is evaluated using a numerical technique called Gaussian quadrature. Sample points are placed in both patches following a Gaussian distribution (Fig. 11).
Reference: [3] <author> R. Barrett et al., </author> <title> Templates for the Solution of Linear Systems: Building Blocks for Iterative Methods, </title> <publisher> SIAM, </publisher> <address> Philadelphia, 1 ed., </address> <year> 1994. </year>
Reference-contexts: Nonstationary methods have an implicit iteration matrix T k which changes on each iteration. When combined with a preconditioner <ref> [3] </ref> the nonstationary method of Conjugate Gradients (CG) [19] is probably the most powerful and effective iterative method for symmetric positive definite matrices occurring in engineering computations. <p> It is directly applicable to nonsymmetric matrices like the radiosity coefficient matrix. However it requires estimates of the smallest and largest eigenvalues of the corresponding coefficient matrix [26] <ref> [3] </ref>.
Reference: [4] <author> D. Baum, J. Wallace, M. Cohen, and D. Greenberg, </author> <title> The back-buffer algorithm: an extension of the radiosity method to dynamic environments, </title> <booktitle> The Visual Computer, 2 (1986), </booktitle> <pages> pp. 298-306. </pages>
Reference-contexts: If the geometry of the scene changes from one frame to another we may assume that only a small fraction of the form factors need to be recomputed due to the animation coherence. In this case we can use acceleration techniques such as those presented in <ref> [4] </ref> [6] [11] to minimize the overhead of recomputing some of the form factors. As a matter of fact there are useful animation applications that do not change the geometry of the environment at all.
Reference: [5] <author> R. Burden and J. Douglas, </author> <title> Numerical Analysis, </title> <publisher> PWS-KENT Publishing Company, </publisher> <address> Boston, 4 ed., </address> <year> 1988. </year>
Reference-contexts: Usually to calculate the eigenvalues of a matrix G requires more computation than that required to solve the corresponding linear system. However we can obtain relatively inexpensive estimates of the eigenvalues using the Gerschgorin Circle Theorem <ref> [5] </ref>. <p> The matrix G s is also positive definite, i.e. all of its eigenvalues are positive <ref> [5] </ref>. This makes it suitable for the application of the Conjugate Gradient Method. 3. Statement of Standard Algorithms 3.1 The Successive Overrelaxation Method The Successive Overrelaxation Method (SOR) consists of applying extrapolation to the Gauss-Siedel Method [16].
Reference: [6] <author> S. Chen, </author> <title> Incremental radiosity: An extension of progressive radiosity to an interactive image synthesis system, </title> <journal> Computer Graphics, </journal> <volume> 24 (1990), </volume> <pages> pp. 135-144. </pages>
Reference-contexts: If the geometry of the scene changes from one frame to another we may assume that only a small fraction of the form factors need to be recomputed due to the animation coherence. In this case we can use acceleration techniques such as those presented in [4] <ref> [6] </ref> [11] to minimize the overhead of recomputing some of the form factors. As a matter of fact there are useful animation applications that do not change the geometry of the environment at all.
Reference: [7] <author> M. Cohen, S. Chen, J. Wallace, and D. Greenberg, </author> <title> A progressive refinement approach to fast radiosity image generation, </title> <journal> Computer Graphics, </journal> <volume> 22 (1988), </volume> <pages> pp. 75-84. </pages>
Reference-contexts: When n is large, radiosity-specific methods such as progressive refinement and overshooting are used where the matrix rows or elements are recomputed whenever they are needed <ref> [7] </ref>. When n is very large (i.e. hundreds of thousands of patches), then stochastic techniques can avoid computing the n 2 elements of the matrix [20]. In this paper we will examine the merits of various general matrix methods. <p> For example an environment divided into a large number of patches (50000) in such way that several patches can not "see" each other may have a matrix 10% dense <ref> [7] </ref>. On the other hand inside of a sphere all the patches can "see" each other and the corresponding matrix is full even if the sphere is divided into a very large number of curved patches. <p> It converges quickly due to the diagonal dominance of the coefficient matrix. After a few passes through the matrix we get the final image. Gauss-Siedel can have O (n 2 ) memory requirement if the matrix G is dense and its elements are stored. The progressive refinement approach <ref> [7] </ref>, which was later shown to be equivalent to Southwell's relaxation method [12], allows us to obtain intermediate images and to reduce the storage requirement to O (n) by computing the form factors on the fly: 1 for (all i) 3 B i = E i 4 while (not converged) 5 <p> So in this case the physical interpretation consists of shooting instead of gathering. As a result the other patches may receive some new radiosity rad. The intermediate images obtained in the early steps tend to be dim, so an ambient term is added <ref> [7] </ref>. As the iteration process goes on this ambient term is reduced until 6 the final image is obtained. <p> However since few patches contribute to the overall illumination in the early stages, detailed illumination effects such as color bleeding are lost as mentioned by Michael Cohen et. al. <ref> [7] </ref>. Radiosity-specific methods have to iterate until the desired convergence is reached to avoid that loss. This means that even though they do not need to store all the form factors, they still have to compute all of them, possibly many times.
Reference: [8] <author> M. Cohen and D. Greenberg, </author> <title> The hemi-cube: A radiosity solution for complex environments, </title> <journal> Computer Graphics, </journal> <volume> 19 (1985), </volume> <pages> pp. 31-40. </pages>
Reference-contexts: When n is small (i.e. fewer than thousands of patches), general matrix methods like Gauss-Siedel can be used where the explicit n fi n matrix can be pre-computed and stored <ref> [8] </ref>. When n is large, radiosity-specific methods such as progressive refinement and overshooting are used where the matrix rows or elements are recomputed whenever they are needed [7].
Reference: [9] <author> M. Cohen and J. Wallace, </author> <title> Radiosity and Realistic Image Synthesis, </title> <publisher> Academic Press Professional, </publisher> <address> Cambridge, 1 ed., </address> <year> 1993. </year>
Reference-contexts: However it may be rectangular if one applies an hierarchical method <ref> [9] </ref>. The matrix G is also well conditioned, in other words it is not very sensitive to small perturbations in the input. 4 The density of G, defined as the number of nonzero entries divided by n 2 , depends on the environment complexity. <p> This procedure may itself represent another source of error. When the singularity does not occur, e.g. in the case of parallel patches, the results obtained using PDM are very accurate. The analytic form factors between the parallel faces of the test environment (Fig. 11) is approximately 0.1998 <ref> [9] </ref>. As we can see in Table 7, the figures obtained using the deterministic method are closer to the analytic value than those obtained using nondeterministic methods. On the other hand, when the singularity does occur the task of determining which method is more accurate becomes more complex. <p> On the other hand, when the singularity does occur the task of determining which method is more accurate becomes more complex. Table 8 presents the relative errors regarding the form factors between perpendicular faces whose analytic value is approximately 0.200043 <ref> [9] </ref>. As we can see the average of the relative errors of nondeterministic methods is smaller than the average of PDM. In fact the values are 0.78%, 0.48% and 0.71% for PDM, SR and SG5 respectively.
Reference: [10] <author> M. Feda and W. Purgathofer, </author> <title> Accelerating radiosity by overshooting, </title> <booktitle> in Proc. of the Third Eurographics Rendering Workshop, Consolidation Express, </booktitle> <month> June </month> <year> 1992, </year> <pages> pp. 21-32. </pages>
Reference-contexts: Overshooting methods based on overrelaxation have been introduced to solve this problem <ref> [10] </ref> [12] [22] [27]. The main idea consists of shooting the current radiosity of the patch plus an estimate that accounts for radiosity that will return due to the reflection by other patches. This approach can reduce the overall number of iterations required. <p> The main idea consists of shooting the current radiosity of the patch plus an estimate that accounts for radiosity that will return due to the reflection by other patches. This approach can reduce the overall number of iterations required. One such algorithm was proposed by Feda et al. <ref> [10] </ref>: 1 for (all i) 3 B i = E i 4 determine initial Ambient 5 while (not converged) 6 for (each patch i) 7 B i = min (B i + R i fl Ambient; P 8 select patch i, such that j B 0 i fl A i j
Reference: [11] <author> D. W. George, F. Sillion, and D. Greenberg, </author> <title> Radiosity redistribution for dynamic environments, </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 10 (1990), </volume> <pages> pp. 26-34. </pages>
Reference-contexts: If the geometry of the scene changes from one frame to another we may assume that only a small fraction of the form factors need to be recomputed due to the animation coherence. In this case we can use acceleration techniques such as those presented in [4] [6] <ref> [11] </ref> to minimize the overhead of recomputing some of the form factors. As a matter of fact there are useful animation applications that do not change the geometry of the environment at all.
Reference: [12] <author> S. Goertler, M. Cohen, and P. Slusallek, </author> <title> Radiosity and relaxation methods, </title> <type> tech. rep., </type> <institution> Princeton University, </institution> <year> 1993. </year>
Reference-contexts: After a few passes through the matrix we get the final image. Gauss-Siedel can have O (n 2 ) memory requirement if the matrix G is dense and its elements are stored. The progressive refinement approach [7], which was later shown to be equivalent to Southwell's relaxation method <ref> [12] </ref>, allows us to obtain intermediate images and to reduce the storage requirement to O (n) by computing the form factors on the fly: 1 for (all i) 3 B i = E i 4 while (not converged) 5 pick i, such that B i fl A i is largest 6 <p> Overshooting methods based on overrelaxation have been introduced to solve this problem [10] <ref> [12] </ref> [22] [27]. The main idea consists of shooting the current radiosity of the patch plus an estimate that accounts for radiosity that will return due to the reflection by other patches. This approach can reduce the overall number of iterations required. <p> Besides the L 1 norm used as the stopping criteria, we also compute three other error norms: the L 2 norm of the residual, RMS error and the percentage of "reflected" radiosity (error), defined by Goertler et. al. <ref> [12] </ref>.
Reference: [13] <author> G. Golub and C. V. Loan, </author> <title> Matrix Computations, </title> <publisher> John Hopkins University Press, Bal-timore, 2 ed., </publisher> <year> 1989. </year>
Reference-contexts: It can be shown that choosing ff to minimize (x k1 + ffd k ) will also make x k minimize over all x 2 span [d 1 ; d 2 ; : : : ; d k ] <ref> [13] </ref>. The CG algorithm can be implemented using three-term recursions and hence using only three vectors of additional storage. The radiosity coefficient matrix is not symmetric. So we must perform its symmetrization before applying the Conjugate Gradient Method, i.e. G s = ~vG.
Reference: [14] <author> D. Greenberg, </author> <title> Computers and architecture, </title> <publisher> Scientific American, </publisher> <month> 264 </month> <year> (1991), </year> <pages> pp. 104-109. </pages>
Reference-contexts: In this paper we will examine the merits of various general matrix methods. In applications where n is small enough to store the entire matrix in main memory, general matrix techniques will be faster than radiosity-specific methods 1 . For "massing studies" <ref> [14] </ref> the lighting can be examined on simple geometric approximations of the environment being designed, and n can be very small.
Reference: [15] <author> G. Greiner, W. Heidrich, and P.Slusallek, </author> <booktitle> Proc. of the fourth eurographics rendering workshop, in Proc. of Eurographics Rendering Worshop, </booktitle> <month> June </month> <year> 1993, </year> <pages> pp. 233-245. </pages>
Reference: [16] <author> L. Hageman and D. Young, </author> <title> Applied Iterative Methods, </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1981. </year>
Reference-contexts: This makes it suitable for the application of the Conjugate Gradient Method. 3. Statement of Standard Algorithms 3.1 The Successive Overrelaxation Method The Successive Overrelaxation Method (SOR) consists of applying extrapolation to the Gauss-Siedel Method <ref> [16] </ref>. This extrapolation takes the form of a weighted average between the previous iterate and the computed Gauss-Siedel iterate, for each component.
Reference: [17] <author> P. Hanrahan, D. Salzman, and L. Aupperle, </author> <title> A rapid hierarchical radiosity algorithm, </title> <journal> Computer Graphics, </journal> <volume> 25 (1991), </volume> <pages> pp. 197-206. </pages>
Reference-contexts: The same approach could be applied if one uses a general matrix method. However in several applications we can approximate a scene with a reasonable number of patches and using techniques such as hierarchical radiosity <ref> [17] </ref> reduce the storage of the form factors to O (m) in which m is the number of elements of the environment. By storing the form factors we have the additional advantage of avoiding the cost of recomputing them repeatedly.
Reference: [18] <author> P. Heckbert and J. Winget, </author> <title> Finite element methods for global illumination, </title> <type> tech. rep., </type> <institution> University of California, Berkley, </institution> <year> 1991. </year> <month> 36 </month>
Reference-contexts: Here we test the performance of the Conjugate Gradient Method (previously mentioned in the graphics literature by Heckbert and Winget <ref> [18] </ref>) in those situations. Finally we are going to introduce a related method, namely the Chebyshev method, that can converge in those situations faster than any standard method already mentioned in the graphics literature so far. 2.
Reference: [19] <author> M. Hestenes and E. </author> <title> Stiefel, Methods of conjugate gradients for solving linear systems, </title> <journal> Journal of Research National Bureau of Standards, </journal> <volume> 49 (1952), </volume> <pages> pp. 409-436. </pages>
Reference-contexts: Nonstationary methods have an implicit iteration matrix T k which changes on each iteration. When combined with a preconditioner [3] the nonstationary method of Conjugate Gradients (CG) <ref> [19] </ref> is probably the most powerful and effective iterative method for symmetric positive definite matrices occurring in engineering computations. The CG algorithm implicitly builds up information about the spectrum of the coefficient matrix G as its iterations proceed, providing a computationally superlinear convergence rate.
Reference: [20] <author> L. Neumann, </author> <title> New efficient algorithms with positive definite radiosity matrix, </title> <booktitle> in Proc. of the Fifth Eurographics Rendering Workshop, </booktitle> <month> June </month> <year> 1994, </year> <pages> pp. 219-237. </pages>
Reference-contexts: When n is very large (i.e. hundreds of thousands of patches), then stochastic techniques can avoid computing the n 2 elements of the matrix <ref> [20] </ref>. In this paper we will examine the merits of various general matrix methods. In applications where n is small enough to store the entire matrix in main memory, general matrix techniques will be faster than radiosity-specific methods 1 .
Reference: [21] <author> Y. Saad, A. Sameh, and P.Saylor, </author> <title> Solving elliptic difference equations on a linear array of processors, </title> <journal> SIAM Journal of Scientific and Statistical Computing, </journal> <volume> 6 (1985), </volume> <pages> pp. 1049-1063. </pages>
Reference-contexts: In addition to this "minimax" property, Chebyshev polynomials can be computed using a three term recursion. This last property implies that the Chebyshev iteration can be implemented using only three additional vectors of storage. The classical algorithm for the Chebyshev method [26] <ref> [21] </ref> is: 1 x (0) arbitrary 2 r (0) = e Gx (0) 4 r (1) = e Gx (1) 6 j = 1 7 while (not converged) 8 x (j) = ! (j) r (j) + (fl! (j) 1)x (j1) 10 r (j+1) = e Gx (j+1) In the above
Reference: [22] <author> M. Shao and N. Badler, </author> <title> Analysis and acceleration of the progressive refinement method, </title> <booktitle> in Proc. of the Fourth Eurographics Rendering Workshop, </booktitle> <month> June </month> <year> 1993, </year> <pages> pp. 247-258. </pages>
Reference-contexts: Overshooting methods based on overrelaxation have been introduced to solve this problem [10] [12] <ref> [22] </ref> [27]. The main idea consists of shooting the current radiosity of the patch plus an estimate that accounts for radiosity that will return due to the reflection by other patches. This approach can reduce the overall number of iterations required.
Reference: [23] <author> J. Shewchuck, </author> <title> An introduction to the conjugate gradient method without the agonizing pain, </title> <type> tech. rep., </type> <institution> Scholl of Computer Science, Carnegie Mellon University, </institution> <year> 1994. </year>
Reference: [24] <author> P. Shirley, </author> <title> Physically based lighting for computer graphics, </title> <type> ph.d. thesis, </type> <institution> University of Illinois, </institution> <year> 1990. </year> <title> [25] , Radiosity via ray tracing, in Graphics Gems II, </title> <editor> Ed. </editor> <publisher> Academic Press, </publisher> <year> 1991, </year> <pages> pp. 306-310. </pages>
Reference-contexts: From <ref> [24] </ref>, we have: j = M j A j (3) where: M j = spectral radiant exitance of patch j (watts/(nm fim 2 )) A j = area of patch j (m 2 ) Also from [24], we have: E where: E j = spectral irradiance emitted from patch j (watts/(nm <p> From <ref> [24] </ref>, we have: j = M j A j (3) where: M j = spectral radiant exitance of patch j (watts/(nm fim 2 )) A j = area of patch j (m 2 ) Also from [24], we have: E where: E j = spectral irradiance emitted from patch j (watts/(nm fi m 2 )).
Reference: [26] <author> E. </author> <title> Stiefel, Kernel polynomials in linear algebra and their numerical application, in Further Contributions to the Solutions of Simultaneous Linear Equations and the Determination of Eigenvalues, </title> <booktitle> National Bureau of Standards, Applied Mathematical Series - 49, </booktitle> <year> 1958. </year>
Reference-contexts: It is directly applicable to nonsymmetric matrices like the radiosity coefficient matrix. However it requires estimates of the smallest and largest eigenvalues of the corresponding coefficient matrix <ref> [26] </ref> [3]. <p> In addition to this "minimax" property, Chebyshev polynomials can be computed using a three term recursion. This last property implies that the Chebyshev iteration can be implemented using only three additional vectors of storage. The classical algorithm for the Chebyshev method <ref> [26] </ref> [21] is: 1 x (0) arbitrary 2 r (0) = e Gx (0) 4 r (1) = e Gx (1) 6 j = 1 7 while (not converged) 8 x (j) = ! (j) r (j) + (fl! (j) 1)x (j1) 10 r (j+1) = e Gx (j+1) In the
Reference: [27] <author> W. Xu and D. S. Fussel, </author> <title> Constructing solvers for radiosity equation systems, </title> <booktitle> in Proc. of the Fifth Eurographics Rendering Workshop, </booktitle> <month> June </month> <year> 1994, </year> <pages> pp. 207-217. 37 </pages>
Reference-contexts: Overshooting methods based on overrelaxation have been introduced to solve this problem [10] [12] [22] <ref> [27] </ref>. The main idea consists of shooting the current radiosity of the patch plus an estimate that accounts for radiosity that will return due to the reflection by other patches. This approach can reduce the overall number of iterations required. <p> Feda uses the ambient term not only for display purposes but also as the overshooting amount. As was mentioned earlier several methods have been proposed to implement overshooting. For a comparison of four overshooting methods (Feda's, Gortler's, Shao's and Xu's) the reader should refer to <ref> [27] </ref>. 7 1.3 Proposed Approach Radiosity-specific methods allow us to have a rough preview of the overall illumination after few steps of iteration.
References-found: 26

