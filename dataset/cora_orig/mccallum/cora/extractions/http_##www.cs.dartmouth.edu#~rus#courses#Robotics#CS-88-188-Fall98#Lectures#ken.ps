URL: http://www.cs.dartmouth.edu/~rus/courses/Robotics/CS-88-188-Fall98/Lectures/ken.ps
Refering-URL: http://www.cs.dartmouth.edu/~rus/courses/Robotics/CS-88-188-Fall98/Lectures/l8.html
Root-URL: http://www.cs.dartmouth.edu
Title: Orienting Polygonal Parts without Sensors  
Author: Kenneth Y. Goldberg 
Keyword: Robotics, Parts Feeding, Planning, Grasping, Compliance, Motion Planning with Uncertainty, Compliant Motion Planning.  
Abstract: In manufacturing, it is often necessary to orient parts prior to packing or assembly. We say that a planar part is polygonal if its convex hull is a polygon. We consider the following problem: given a list of n vertices describing a polygonal part whose initial orientation is unknown, find the shortest sequence of mechanical gripper actions that is guaranteed to orient the part up to symmetry in its convex hull. We show that such a sequence exists for any polygonal part by giving an O(n 2 log n) algorithm for finding the sequence. Since the gripper actions do not require feedback, this result implies that any polygonal part can be oriented without sensors. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. H. Reif. </author> <title> Complexity of the mover's problem and generalizations. </title> <booktitle> In Proceedings of the the 20th Symposium on the Foundations of Computer Science, </booktitle> <year> 1979. </year>
Reference-contexts: For a review of heuristic and algebraic techniques for this problem, see <ref> [1, 2, 3, 4] </ref>. In robot motion planning with uncertainty, the initial configuration of the robot is not known precisely.
Reference: [2] <author> J. Schwartz, J. Hopcroft, and M. Sharir. </author> <title> Planning, Geometry, and Complexity of Robot Motion. </title> <publisher> Ablex, </publisher> <year> 1987. </year>
Reference-contexts: For a review of heuristic and algebraic techniques for this problem, see <ref> [1, 2, 3, 4] </ref>. In robot motion planning with uncertainty, the initial configuration of the robot is not known precisely.
Reference: [3] <author> John Francis Canny. </author> <title> The Complexity of Robot Motion Planning. </title> <type> PhD thesis, </type> <institution> MIT, </institution> <month> May </month> <year> 1987. </year>
Reference-contexts: For a review of heuristic and algebraic techniques for this problem, see <ref> [1, 2, 3, 4] </ref>. In robot motion planning with uncertainty, the initial configuration of the robot is not known precisely.
Reference: [4] <author> Jean-Claude Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Press, </publisher> <year> 1991. </year>
Reference-contexts: For a review of heuristic and algebraic techniques for this problem, see <ref> [1, 2, 3, 4] </ref>. In robot motion planning with uncertainty, the initial configuration of the robot is not known precisely.
Reference: [5] <author> T. Lozano-Perez, M. T. Mason, and R. H. Taylor. </author> <title> Automatic synthesis of fine-motion strategies for robots. </title> <journal> International Journal of Robotics Research, </journal> <volume> 3(1) </volume> <pages> 3-24, </pages> <month> Spring </month> <year> 1984. </year>
Reference-contexts: Since mechanical compliance is used to reduce uncertainty, this type of solution is known as a compliant motion plan 1 . A geometric approach to compliant motion planning was introduced by Lozano-Perez, Mason, and Taylor <ref> [5] </ref>. In this approach, the robot is represented as a point in the space of possible configurations. Mechanical properties such as stability, friction, and kinematic constraints are related to geometric conditions in this space. <p> A plan, or sequence of motions, creates a composite mapping. A plan that maps the initial set of possible configurations into the goal set is guaranteed to achieve the desired outcome. 1 Also called a fine motion plan in <ref> [5] </ref>. 4 One way to automatically generate such a plan is to work backward, known as preimage backchaining. Lozano-Perez, Mason, and Taylor considered a class of planar problems such as inserting a peg into a hole, where peg velocity can only be controlled to within a worst-case error cone.
Reference: [6] <author> Michael A. Erdmann. </author> <title> On motion planning with uncertainty. </title> <type> Master's thesis, </type> <institution> MIT, </institution> <month> August </month> <year> 1984. </year>
Reference-contexts: This region, called the strong pre-image, then becomes the goal for another motion. If, by chaining backward, we can find a strong pre-image that contains the initial set of possible configurations, the sequence of pre-images defines a plan that is guaranteed to successfully insert the peg. Erdmann <ref> [6] </ref> differentiated between the reachability and recognizability of goal configurations and proposed a restricted class of computable pre-images. Donald [7] showed how the approach could be generalized to cope with model error and plan failure and gave an algorithm for planning compliant motions in the plane. <p> Although the part's exact motion depends on microscopic variations in the support surface, Mason showed that its direction of rotation depends only on the location of the part's center of mass. Other geometric methods for predicting part motion in the presence of frictional contacts were described in <ref> [6, 19, 27, 28, 8] </ref>. Mason's rule provided the basis for Brost's [29] push diagram, which represents all possible motions of a part as it is grasped by a parallel-jaw gripper.
Reference: [7] <author> Bruce R. Donald. </author> <title> Error Detection and Recovery in Robotics. </title> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference-contexts: Erdmann [6] differentiated between the reachability and recognizability of goal configurations and proposed a restricted class of computable pre-images. Donald <ref> [7] </ref> showed how the approach could be generalized to cope with model error and plan failure and gave an algorithm for planning compliant motions in the plane. Brost [8] developed numerical methods for planar compliant motion planning that are robust to bounded uncertainties in position, orientation, friction and mass distribution.
Reference: [8] <author> Randy C. Brost. </author> <title> Analysis and Planning of Planar Manipulation Tasks. </title> <type> PhD thesis, CMU, </type> <month> January </month> <year> 1991. </year>
Reference-contexts: Erdmann [6] differentiated between the reachability and recognizability of goal configurations and proposed a restricted class of computable pre-images. Donald [7] showed how the approach could be generalized to cope with model error and plan failure and gave an algorithm for planning compliant motions in the plane. Brost <ref> [8] </ref> developed numerical methods for planar compliant motion planning that are robust to bounded uncertainties in position, orientation, friction and mass distribution. For other related work, see [9, 10, 11, 12, 13]. A guaranteed plan does not exist for all problems. <p> Although the part's exact motion depends on microscopic variations in the support surface, Mason showed that its direction of rotation depends only on the location of the part's center of mass. Other geometric methods for predicting part motion in the presence of frictional contacts were described in <ref> [6, 19, 27, 28, 8] </ref>. Mason's rule provided the basis for Brost's [29] push diagram, which represents all possible motions of a part as it is grasped by a parallel-jaw gripper.
Reference: [9] <author> Stephen J. Buckley. </author> <title> Planning and Teaching Compliant Motion Strategies. </title> <type> PhD thesis, </type> <institution> MIT, </institution> <month> January </month> <year> 1986. </year> <month> 33 </month>
Reference-contexts: Brost [8] developed numerical methods for planar compliant motion planning that are robust to bounded uncertainties in position, orientation, friction and mass distribution. For other related work, see <ref> [9, 10, 11, 12, 13] </ref>. A guaranteed plan does not exist for all problems. For example, the robot's initial configuration may be sufficiently uncertain such that no sequence of actions are guaranteed to achieve the desired goal configuration.
Reference: [10] <author> Amy Briggs. </author> <title> An efficient algorithm for one-step compliant motion planning with uncer-tainty. </title> <booktitle> In 5th Symposium on Computational Geometry. ACM, </booktitle> <year> 1989. </year>
Reference-contexts: Brost [8] developed numerical methods for planar compliant motion planning that are robust to bounded uncertainties in position, orientation, friction and mass distribution. For other related work, see <ref> [9, 10, 11, 12, 13] </ref>. A guaranteed plan does not exist for all problems. For example, the robot's initial configuration may be sufficiently uncertain such that no sequence of actions are guaranteed to achieve the desired goal configuration.
Reference: [11] <author> Jean-Claude Latombe. </author> <title> Motion planning with uncertainty: </title> <booktitle> On the preimage backchaining approach. In The Robotics Review I, </booktitle> <pages> pages 53-70. </pages> <publisher> MIT Press, </publisher> <year> 1989. </year> <note> edited by O. </note> <author> Khatib, J. J. Craig, and T. </author> <month> Lozano-Perez. </month>
Reference-contexts: Brost [8] developed numerical methods for planar compliant motion planning that are robust to bounded uncertainties in position, orientation, friction and mass distribution. For other related work, see <ref> [9, 10, 11, 12, 13] </ref>. A guaranteed plan does not exist for all problems. For example, the robot's initial configuration may be sufficiently uncertain such that no sequence of actions are guaranteed to achieve the desired goal configuration.
Reference: [12] <author> Bruce R. Donald. </author> <title> Planning and executing robot assembly strategies in the presence of uncertainty. </title> <booktitle> In 96th Annual Meeting of the American Mathematical Society, </booktitle> <year> 1990. </year>
Reference-contexts: Brost [8] developed numerical methods for planar compliant motion planning that are robust to bounded uncertainties in position, orientation, friction and mass distribution. For other related work, see <ref> [9, 10, 11, 12, 13] </ref>. A guaranteed plan does not exist for all problems. For example, the robot's initial configuration may be sufficiently uncertain such that no sequence of actions are guaranteed to achieve the desired goal configuration.
Reference: [13] <author> S. Shekhar and Jean-Claude Latombe. </author> <title> On goal recognizability in motion planning with uncertainty. </title> <booktitle> In International Conference on Robotics and Automation. IEEE, </booktitle> <month> April </month> <year> 1991. </year>
Reference-contexts: Brost [8] developed numerical methods for planar compliant motion planning that are robust to bounded uncertainties in position, orientation, friction and mass distribution. For other related work, see <ref> [9, 10, 11, 12, 13] </ref>. A guaranteed plan does not exist for all problems. For example, the robot's initial configuration may be sufficiently uncertain such that no sequence of actions are guaranteed to achieve the desired goal configuration.
Reference: [14] <author> John Canny and John Reif. </author> <title> New lower-bound techniques for robot motion planning problems. </title> <booktitle> In Proceedings of the 27th Symposium on the Foundations of Computer Science (FOCS), </booktitle> <year> 1987. </year>
Reference-contexts: For example, the robot's initial configuration may be sufficiently uncertain such that no sequence of actions are guaranteed to achieve the desired goal configuration. Many algorithms for compliant motion planning are complete in the sense that they will find a guaranteed plan if one exists. Canny and Reif <ref> [14] </ref> found that deciding if a guaranteed compliant motion plan exists is nondeterministic exponential time hard. For the problem proposed in this paper, we show that a guaranteed plan always exists. Both Lozano-Perez [15] and Natarajan [16] noted the similarity between compliant motion planning and the design of parts feeders.
Reference: [15] <author> T. Lozano-Perez. </author> <title> Motion planning and the design of orienting devices for vibratory part feeders. </title> <note> Unpublished memo., </note> <month> January </month> <year> 1986. </year>
Reference-contexts: Canny and Reif [14] found that deciding if a guaranteed compliant motion plan exists is nondeterministic exponential time hard. For the problem proposed in this paper, we show that a guaranteed plan always exists. Both Lozano-Perez <ref> [15] </ref> and Natarajan [16] noted the similarity between compliant motion planning and the design of parts feeders.
Reference: [16] <author> Balas K. Natarajan. </author> <title> Some paradigms for the automated design of parts feeders. </title> <journal> International Journal of Robotics Research, </journal> <volume> 8(6) </volume> <pages> 98-109, </pages> <month> December </month> <year> 1989. </year> <booktitle> Also appeared in Proceedings of the 27th Annual Symposium on Foundations of Computer Science, </booktitle> <year> 1986. </year>
Reference-contexts: Canny and Reif [14] found that deciding if a guaranteed compliant motion plan exists is nondeterministic exponential time hard. For the problem proposed in this paper, we show that a guaranteed plan always exists. Both Lozano-Perez [15] and Natarajan <ref> [16] </ref> noted the similarity between compliant motion planning and the design of parts feeders. The algorithm presented here uses pre-image backchaining to find compliant motion plans for a class of planar problems where the system configuration describes the orientation of a polygonal part with respect the robot gripper. <p> Each method is complete in the sense that it is guaranteed to find such a plan if one exists. However, without a bound on plan length, there is no bound on the computational complexity for any of these search-based planners. Natarajan <ref> [16] </ref> was the first to consider the computational complexity of designing parts feeders; he formalized the problem as follows. <p> However, as discussed in section 2, such algorithms are rare for compliant motion planning since one can usually construct cases for which a guaranteed plan does not exist. Making an analogy with the theory of compilers, which has defined classes of languages that can be automatically compiled, Natarajan <ref> [16] </ref> noted that It would be useful to identify [a] class of parts for which feeder design can be easily automated . <p> In this paper we have given a parts orienting algorithm and shown that it is complete in the sense that it will find a plan for any polygonal part. Acknowledgements I am grateful to Matt Mason for advice and guidance throughout this research. Michael Erdmann suggested re-reading <ref> [16] </ref> and was the first to suggest that a polynomial-time algorithm may exist. I am indebted to Randy Brost, John Canny, Merrick Furst, Doug Ierardi, Gary Miller, Barak Pearlmutter, Anil Rao and the anonymous reviewers for constructive suggestions on improving an earlier draft.
Reference: [17] <author> Matthew T. Mason. </author> <booktitle> Kicking the sensing habit. In Asilomar Winter Workshop. AAAI, </booktitle> <month> November </month> <year> 1991. </year>
Reference-contexts: Subsequently, jaw motion complies to the geometry of the part, halting at this stable configuration. In a manner analogous to sliding a peg along a sequence of surfaces, the generated sequence of gripper actions constrains the final orientation of the part without recourse to sensors. Mason <ref> [17] </ref> describes several other examples where compliant motion plans can be used in lieu of sensors to resolve uncertainty.
Reference: [18] <author> Ken Goldberg. </author> <title> Stochastic Plans for Robotic Manipulation. </title> <type> PhD thesis, </type> <institution> CMU School of Computer Science, </institution> <month> August </month> <year> 1990. </year> <title> Copies can be obtained from Catherine Copetas (copetas@cs.cmu.edu, </title> <publisher> 412-268-8525). </publisher>
Reference-contexts: Mason [17] describes several other examples where compliant motion plans can be used in lieu of sensors to resolve uncertainty. Such approaches are also known as open-loop <ref> [18] </ref>, sensorless [19], or oblivious [20] manipulation. 2.2 Relation to the Analysis of Mechanical Parts Feeders Although sensor-based methods such as a binary vision systems can be used to orient parts, sensors introduce additional cost, sampling noise, and require the sensor to be coordinated with 5 a mechanical actuator. <p> However, since part geometry adds additional structure to our set of transfer functions, we are able to show that a guaranteed plan always exists using a geometric algorithm that finds the shortest guaranteed plan in time O (n 2 log n). Preliminary descriptions of this work appeared in <ref> [18, 36] </ref>. 3 Assumptions and Mechanical Analysis We assume that: 1. All motion occurs in the plane and is slow enough that inertial forces are negligible. The scope of this quasi-static model is discussed in [37] and [38]. 2. <p> We can make a tradeoff between plan length and the probability of success by optimizing expected feedrate, where the distribution of inputs is assured by randomizing the first gripper angle and a binary filter is used to reject parts that are not in the most probable orientation <ref> [18] </ref>. Furthermore, although we have shown that the plan length is bounded by O (n 2 ), we conjectured based on empirical evidence that plan length is linear in the number of part edges.
Reference: [19] <author> Michael A. Erdmann and Matthew T. Mason. </author> <title> An exploration of sensorless manipulation. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <year> 1986. </year> <note> Also appears in IEEE Journal of Robotics and Automation, </note> <author> V. 4.4, </author> <month> August </month> <year> 1988. </year>
Reference-contexts: Mason [17] describes several other examples where compliant motion plans can be used in lieu of sensors to resolve uncertainty. Such approaches are also known as open-loop [18], sensorless <ref> [19] </ref>, or oblivious [20] manipulation. 2.2 Relation to the Analysis of Mechanical Parts Feeders Although sensor-based methods such as a binary vision systems can be used to orient parts, sensors introduce additional cost, sampling noise, and require the sensor to be coordinated with 5 a mechanical actuator. <p> Although the part's exact motion depends on microscopic variations in the support surface, Mason showed that its direction of rotation depends only on the location of the part's center of mass. Other geometric methods for predicting part motion in the presence of frictional contacts were described in <ref> [6, 19, 27, 28, 8] </ref>. Mason's rule provided the basis for Brost's [29] push diagram, which represents all possible motions of a part as it is grasped by a parallel-jaw gripper. <p> Peshkin and Sanderson [31] considered an arrangement of fixed fences where a conveyor belt causes parts to make contact with the fences. Erdmann and Mason <ref> [19] </ref> considered tilting actions that cause a part to slide into contact with the edges of a rectangular tray. Goldberg and Mason [32] considered grasping actions using a parallel-jaw gripper.
Reference: [20] <author> Yui-Bin Chen and Doug Ierardi. </author> <title> The complexity of non-adaptive plans for orienting polygonal parts. </title> <type> Technical Report USC-CS-92-502, </type> <institution> University of Southern California, </institution> <month> December </month> <year> 1991. </year>
Reference-contexts: Mason [17] describes several other examples where compliant motion plans can be used in lieu of sensors to resolve uncertainty. Such approaches are also known as open-loop [18], sensorless [19], or oblivious <ref> [20] </ref> manipulation. 2.2 Relation to the Analysis of Mechanical Parts Feeders Although sensor-based methods such as a binary vision systems can be used to orient parts, sensors introduce additional cost, sampling noise, and require the sensor to be coordinated with 5 a mechanical actuator. <p> For more on this issue, see <ref> [20] </ref>. Recall that the domain and range for the squeeze function are specified with respect to the gripper. Rotating the gripper corresponds to a shift in the relative orientation of the part. <p> Furthermore, although we have shown that the plan length is bounded by O (n 2 ), we conjectured based on empirical evidence that plan length is linear in the number of part edges. Recently, Chen and Ierardi <ref> [20] </ref> proved that plan length is indeed linear which means that our algorithm will run in time O (n 2 ) and produce plans of length O (n).
Reference: [21] <author> Geoffrey Boothroyd, Corrado Poli, and Laurence E. Murch. </author> <title> Automatic Assembly. </title> <publisher> Marcel Dekker, Inc., </publisher> <year> 1982. </year> <month> 34 </month>
Reference-contexts: As they climb, a sequence of pins and cutouts in the track causes parts in all but one orientation to fall back into the bowl for another attempt at running the gauntlet <ref> [21, 22] </ref>. When part geometry changes, a new helical track is required. Although vibratory bowl feeders are widely used in manufacturing, there are currently no systematic methods for generating track geometry from a description of part shape.
Reference: [22] <author> Ben-Zion Sandler. </author> <title> Robotics: Designing the Mechanisms for Automated Machinery. </title> <publisher> Prentice Hall, </publisher> <year> 1991. </year> <note> Chapter 7 summarizes results originally published (in Russian) in A. </note> <author> N. Rabinovitsh, </author> <title> Automatic Orientation and Parts Feeding, </title> <address> Technika, </address> <year> 1968. </year>
Reference-contexts: As they climb, a sequence of pins and cutouts in the track causes parts in all but one orientation to fall back into the bowl for another attempt at running the gauntlet <ref> [21, 22] </ref>. When part geometry changes, a new helical track is required. Although vibratory bowl feeders are widely used in manufacturing, there are currently no systematic methods for generating track geometry from a description of part shape.
Reference: [23] <author> Hajime Hitakawa. </author> <title> Advanced parts orientation system has wide application. </title> <journal> Assembly Automation, </journal> <volume> 8(3), </volume> <year> 1988. </year>
Reference-contexts: Track design is a black art performed by specialists through trial and error: an untested part configuration may cause the track to jam during operation. Furthermore, there is no guarantee that an effective track exists for every part. Hitakawa <ref> [23] </ref> described a parts feeder that uses an array of nests (silhouette traps) cut into a vibrating plate. The nests and the vibratory motion are designed so that the part will remain in the nest only in a particular orientation.
Reference: [24] <author> Neil C. Singer and Warren Seering. </author> <title> Utilizing dynamic stability to orient parts. </title> <journal> Journal of Applied Mechanics, </journal> <volume> 54, </volume> <year> 1987. </year> <note> See also Singer's 1985 MIT Masters Thesis. </note>
Reference-contexts: By tilting the plate and letting parts flow across it, the nests eventually fill up with parts in the desired orientation. Although the vibratory motion is under software control, trial and error is required to design the nest for each part. Singer and Seering <ref> [24] </ref> proposed several designs for parts feeders, one using impact and another where programmed vibration, based on part geometry, was used to drive parts into a stable orientation. <p> We are currently extending the algorithm to cope with such shapes. For 3D polyhedral parts, the planar algorithm might be preceded by a preliminary stage that causes a most stable face of the part to be aligned with the worktable. This might be accomplished using either vibration <ref> [24] </ref> or by tilting the worktable [35]. For some parts, we may be able to determine the remaining degree of rotational freedom using the algorithm described here to orient the polyhedron's 2D projection. In summary, we have described a planning algorithm that can rapidly analyze part geometry.
Reference: [25] <author> D. D. Grossman and M. W. Blasgen. </author> <title> Orienting mechanical parts by computer-controlled manipulator. </title> <journal> IEEE Trans. on Systems, Man, and Cybernetics, </journal> <volume> 5, </volume> <year> 1975. </year>
Reference-contexts: Singer and Seering [24] proposed several designs for parts feeders, one using impact and another where programmed vibration, based on part geometry, was used to drive parts into a stable orientation. Grossman and Blasgen <ref> [25] </ref> used a vibrating box to insure that parts fall into one of a finite number of stable orientations under the influence of gravity. They then used a sequence of tactile probes to discriminate among these orientations. All the methods above use vibration, which can be undesirable for fragile parts.
Reference: [26] <author> Matthew T. Mason. </author> <title> Manipulator Grasping and Pushing Operations. </title> <type> PhD thesis, </type> <institution> MIT, </institution> <month> June </month> <year> 1982. </year> <title> published in Robot Hands and the Mechanics of Manipulation, </title> <publisher> MIT Press, </publisher> <year> 1985. </year>
Reference-contexts: They then used a sequence of tactile probes to discriminate among these orientations. All the methods above use vibration, which can be undesirable for fragile parts. Mason <ref> [26] </ref> was the first to analyze the role of pushing in robot manipulation. Building on results from classical mechanics, he identified a fundamental rule for predicting the direction that a part will rotate as it is pushed in the presence of Coulomb friction. <p> For this class of actions, we substitute two assumptions for assumption 7 in Section 3: * The part's center-of-mass (c.o.m.) is given and the coefficient of friction with the support surface is independent of position and velocity <ref> [26] </ref>. * The pushing distance is sufficient to align a stable part edge with the pushing jaw before the second jaw makes contact. An lower bound on the required pushing distance can be computed by considering the smallest disk that covers the part [38]. <p> The mechanics of pushing can be captured with an analog to the diameter function as constructed by Mason <ref> [26] </ref>. Consider a single line of support, aligned with the x-axis, below the part. Let the part's radius at direction 0 ffi be the perpendicular distance from the support line to the part's center of mass.
Reference: [27] <author> V. T. Rajan, R. Burridge, and J. T. Schwartz. </author> <title> Dynamics of a rigid body in frictional contact with rigid walls. </title> <booktitle> In IEEE Conference on Robotics and Automation, </booktitle> <year> 1987. </year>
Reference-contexts: Although the part's exact motion depends on microscopic variations in the support surface, Mason showed that its direction of rotation depends only on the location of the part's center of mass. Other geometric methods for predicting part motion in the presence of frictional contacts were described in <ref> [6, 19, 27, 28, 8] </ref>. Mason's rule provided the basis for Brost's [29] push diagram, which represents all possible motions of a part as it is grasped by a parallel-jaw gripper.
Reference: [28] <author> Randy C. Brost and Matthew T. Mason. </author> <title> Graphical analysis of planar rigid-body dynamics with multiple frictional contacts. </title> <booktitle> In 5th International Symposium on Robotics Research, </booktitle> <year> 1989. </year>
Reference-contexts: Although the part's exact motion depends on microscopic variations in the support surface, Mason showed that its direction of rotation depends only on the location of the part's center of mass. Other geometric methods for predicting part motion in the presence of frictional contacts were described in <ref> [6, 19, 27, 28, 8] </ref>. Mason's rule provided the basis for Brost's [29] push diagram, which represents all possible motions of a part as it is grasped by a parallel-jaw gripper.
Reference: [29] <author> Randy C. Brost. </author> <title> Automatic grasp planning in the presence of uncertainty. </title> <journal> The International Journal of Robotics Research, </journal> <month> December </month> <year> 1988. </year> <booktitle> Also appeared in Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <address> San Francisco, CA, </address> <month> April, </month> <year> 1986. </year>
Reference-contexts: Other geometric methods for predicting part motion in the presence of frictional contacts were described in [6, 19, 27, 28, 8]. Mason's rule provided the basis for Brost's <ref> [29] </ref> push diagram, which represents all possible motions of a part as it is grasped by a parallel-jaw gripper. Brost showed how to use this diagram to identify single-step grasping actions that are robust to bounded uncertainty in friction and part orientation. <p> The action continues until further motion would deform the part. 9. There is zero friction between the part and the jaws. These assumptions are similar to those made by Brost <ref> [29] </ref> and by Taylor, Mason and Goldberg [39, 40], with the exception of assumptions 3, 7, and 9. By restricting gripper motion to be orthogonal to the jaws (assumption 3), we obtain a one-dimensional action space rather than the two-dimensional space considered previously. <p> In Section 8, we show how this assumption can be relaxed by considering the class of push-grasp actions. 8 Friction between the part and the jaws can produce wedged configurations where the part is cocked between two vertices <ref> [29] </ref>. By assuming zero friction (assumption 9), we avoid such configurations. <p> Sorting dominates the running time, so the algorithm runs in time O (n 2 log n). ffi 8 Push-Grasp Actions In this section we relax the assumption that both jaws make contact simultaneously by considering the class of push-grasp actions first identified by Brost <ref> [29] </ref>.
Reference: [30] <author> M. Mani and R. D. W. Wilson. </author> <title> A programmable orienting system for flat parts. </title> <booktitle> In Proc: North American Mfg. Research Inst. Conf XIII, </booktitle> <year> 1985. </year>
Reference-contexts: In all cases the objective, as in this paper, is a multi-stage plan for orienting a polygonal part. 6 Mani and Wilson <ref> [30] </ref> considered pushing actions using a single planar fence. Peshkin and Sanderson [31] considered an arrangement of fixed fences where a conveyor belt causes parts to make contact with the fences.
Reference: [31] <author> Michael A. Peshkin and Art C. Sanderson. </author> <title> Planning robotic manipulation strategies for workpieces that slide. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 4(5), </volume> <month> October </month> <year> 1988. </year>
Reference-contexts: In all cases the objective, as in this paper, is a multi-stage plan for orienting a polygonal part. 6 Mani and Wilson [30] considered pushing actions using a single planar fence. Peshkin and Sanderson <ref> [31] </ref> considered an arrangement of fixed fences where a conveyor belt causes parts to make contact with the fences. Erdmann and Mason [19] considered tilting actions that cause a part to slide into contact with the edges of a rectangular tray.
Reference: [32] <author> Ken Goldberg and Matthew T. Mason. </author> <title> Bayesian grasping. </title> <booktitle> In International Conference on Robotics and Automation. IEEE, </booktitle> <month> May </month> <year> 1990. </year>
Reference-contexts: Peshkin and Sanderson [31] considered an arrangement of fixed fences where a conveyor belt causes parts to make contact with the fences. Erdmann and Mason [19] considered tilting actions that cause a part to slide into contact with the edges of a rectangular tray. Goldberg and Mason <ref> [32] </ref> considered grasping actions using a parallel-jaw gripper. In each case the authors developed a mechanical analysis and partitioned the set of possible actions into a finite number of equivalence classes based on part geometry 2 . <p> Assuming that friction is infinite and that the part never rolls off the edge of the table, the authors showed how to construct such a plan, if one exists, in time O (n 4 ). In this paper we consider a class of parallel-jaw gripper actions. As described in <ref> [32] </ref>, this uncountable set of gripper actions can be partitioned into O (n 2 ) equivalence classes based on the geometry of the given n-sided part.
Reference: [33] <author> Alan D. Christiansen. </author> <title> Automatic Acquisition of Task Theories for Robotic Manipulation. </title> <type> PhD thesis, </type> <institution> CMU School of Computer Science, </institution> <year> 1992. </year>
Reference-contexts: As described in [32], this uncountable set of gripper actions can be partitioned into O (n 2 ) equivalence classes based on the geometry of the given n-sided part. However, since every action corresponds to a monotonic 2 Christiansen <ref> [33] </ref> describes how automated experiments, in lieu of mechanical analysis, can be used for this purpose. 7 transfer function, we could use Eppstein's algorithm to decide if a guaranteed plan exists in time O (n 4 ).
Reference: [34] <author> David Eppstein. </author> <title> Reset sequences for monotonic automata. </title> <journal> SIAM Journal of Computing, </journal> <volume> 19(5), </volume> <year> 1990. </year>
Reference-contexts: A function f is monotonic if for any ordered sequence s 1 ; s 2 ; :::; s n , the sequence f (s 1 ); f (s 2 ); :::; f (s n ) is ordered. Recently, Eppstein <ref> [34] </ref> reported an O (kn 2 ) algorithm for finding such a composite of monotonic functions and showed that finding the shortest composite of non-monotonic functions is NP-Complete. Erdmann, Mason and Vanecek [35] reported a computational approach to orienting three-dimensional parts.
Reference: [35] <author> Michael Erdmann, Matthew T. Mason, and George Vanecek Jr. </author> <title> Mechanical parts orienting: The case of a polyhedron on a table. </title> <journal> Algorithmica, </journal> <volume> 10(2), </volume> <month> August </month> <year> 1993. </year> <note> Special Issue on Computational Robotics. </note>
Reference-contexts: Recently, Eppstein [34] reported an O (kn 2 ) algorithm for finding such a composite of monotonic functions and showed that finding the shortest composite of non-monotonic functions is NP-Complete. Erdmann, Mason and Vanecek <ref> [35] </ref> reported a computational approach to orienting three-dimensional parts. <p> For 3D polyhedral parts, the planar algorithm might be preceded by a preliminary stage that causes a most stable face of the part to be aligned with the worktable. This might be accomplished using either vibration [24] or by tilting the worktable <ref> [35] </ref>. For some parts, we may be able to determine the remaining degree of rotational freedom using the algorithm described here to orient the polyhedron's 2D projection. In summary, we have described a planning algorithm that can rapidly analyze part geometry.
Reference: [36] <author> Ken Goldberg, Matthew T. Mason, and Michael A. Erdmann. </author> <title> Generating stochastic plans for a programmable parts feeder. </title> <booktitle> In International Conference on Robotics and Automation. IEEE, </booktitle> <month> April </month> <year> 1991. </year>
Reference-contexts: However, since part geometry adds additional structure to our set of transfer functions, we are able to show that a guaranteed plan always exists using a geometric algorithm that finds the shortest guaranteed plan in time O (n 2 log n). Preliminary descriptions of this work appeared in <ref> [18, 36] </ref>. 3 Assumptions and Mechanical Analysis We assume that: 1. All motion occurs in the plane and is slow enough that inertial forces are negligible. The scope of this quasi-static model is discussed in [37] and [38]. 2.
Reference: [37] <author> Matthew T. Mason. </author> <title> On the scope of quasi-static pushing. </title> <editor> In O. Faugeras and G. Giralt, editors, </editor> <booktitle> The Third International Symposium on Robotics Research. </booktitle> <publisher> MIT Press, </publisher> <year> 1986. </year>
Reference-contexts: Preliminary descriptions of this work appeared in [18, 36]. 3 Assumptions and Mechanical Analysis We assume that: 1. All motion occurs in the plane and is slow enough that inertial forces are negligible. The scope of this quasi-static model is discussed in <ref> [37] </ref> and [38]. 2. The gripper consists of two linear jaws arranged parallel to each other. 3. The direction of gripper motion is orthogonal to the jaws. 4. The convex hull of the part can be treated as a rigid planar polygon. 5.
Reference: [38] <author> Michael A. </author> <title> Peshkin. Planning Robotic Manipulation Strategies for Sliding Objects. </title> <type> PhD thesis, </type> <institution> CMU Dept. of Physics, </institution> <month> Nov </month> <year> 1986. </year>
Reference-contexts: Preliminary descriptions of this work appeared in [18, 36]. 3 Assumptions and Mechanical Analysis We assume that: 1. All motion occurs in the plane and is slow enough that inertial forces are negligible. The scope of this quasi-static model is discussed in [37] and <ref> [38] </ref>. 2. The gripper consists of two linear jaws arranged parallel to each other. 3. The direction of gripper motion is orthogonal to the jaws. 4. The convex hull of the part can be treated as a rigid planar polygon. 5. <p> An lower bound on the required pushing distance can be computed by considering the smallest disk that covers the part <ref> [38] </ref>. Although this bound can approach infinity if the part is pushed along a vector from the contact vertex through the part's center-of-mass, we can avoid such actions after the first push-grasp action causes the part to rotate into one of its stable orientations.
Reference: [39] <author> Russ H. Taylor, Matthew M. Mason, and Ken Goldberg. </author> <title> Sensor-based manipulation planning as a game with nature. </title> <booktitle> In Robotics Research: The Fourth International Symposium. </booktitle> <publisher> MIT Press, </publisher> <year> 1988. </year>
Reference-contexts: The action continues until further motion would deform the part. 9. There is zero friction between the part and the jaws. These assumptions are similar to those made by Brost [29] and by Taylor, Mason and Goldberg <ref> [39, 40] </ref>, with the exception of assumptions 3, 7, and 9. By restricting gripper motion to be orthogonal to the jaws (assumption 3), we obtain a one-dimensional action space rather than the two-dimensional space considered previously.
Reference: [40] <author> Matthew T. Mason, Ken Goldberg, and Russell H. Taylor. </author> <title> Planning sequences of squeeze-grasps to orient and grasp polygonal objects. </title> <type> Technical Report CMU-CS-88-127, </type> <institution> Carnegie Mellon University, Computer Science Dept., </institution> <address> Schenley Park, Pittsburgh, PA 15213, </address> <month> April </month> <year> 1988. </year>
Reference-contexts: The action continues until further motion would deform the part. 9. There is zero friction between the part and the jaws. These assumptions are similar to those made by Brost [29] and by Taylor, Mason and Goldberg <ref> [39, 40] </ref>, with the exception of assumptions 3, 7, and 9. By restricting gripper motion to be orthogonal to the jaws (assumption 3), we obtain a one-dimensional action space rather than the two-dimensional space considered previously.
Reference: [41] <author> Ken Goldberg. </author> <title> A kinematically-yielding gripper. </title> <booktitle> In 22nd International Symposium on Industrial Automation, </booktitle> <month> October </month> <year> 1991. </year> <editor> See U. S. Patent 5,098,145, </editor> <address> granted March 26, </address> <year> 1992. </year>
Reference-contexts: By assuming zero friction (assumption 9), we avoid such configurations. A frictionless gripper can be closely approximated by mounting a linear bearing on one jaw as described in <ref> [41] </ref>. 3.1 Mechanical Analysis When a polygonal part is grasped with the frictionless gripper, it assumes one of a finite number of stable configurations where at least one edge of the part's convex hull is in contact with a jaw. Such configurations correspond to local minima in the following function.
Reference: [42] <author> Ken Goldberg and Anil Rao. </author> <title> Orienting planar parts. </title> <type> Technical Report IRIS-275, </type> <institution> University of Southern California, </institution> <month> September </month> <year> 1991. </year>
Reference-contexts: We could define a squeeze action at angle ff to include closing and opening the gripper at angle ff followed by closing the gripper at angle ff + *, rotating the gripper by *, and then opening the gripper. In <ref> [42] </ref>, we show how to find an appropriate * for any polygonal part such that the combined action has a piecewise constant transfer function where each step is closed on the left and open on the right.
Reference: [43] <author> Matthew T. Mason. </author> <title> exact angle arithmetic package in commonlisp. (Ported to C++ by Jeff Wiegley (USC) in 1993)., </title> <month> August </month> <year> 1988. </year>
Reference-contexts: The algorithm can generate either squeeze plans or push-grasp plans for the class of polygonal parts. This planning algorithm has been implemented in Common Lisp using exact arithmetic to represent angles <ref> [43] </ref> and has been tested on hundreds of polygonal shapes with running times of well under one second on a Sun Sparcstation IPC.
Reference: [44] <author> Viktor K. Prasanna and Anil S. Rao. </author> <title> Parallel orientation of polygonal parts. </title> <type> Technical Report CEng-91-23, </type> <institution> University of Southern California, </institution> <month> August </month> <year> 1991. </year>
Reference-contexts: Recently, Chen and Ierardi [20] proved that plan length is indeed linear which means that our algorithm will run in time O (n 2 ) and produce plans of length O (n). Also, Prasanna and Rao <ref> [44] </ref> reported a parallel version of this algorithm that runs in linear time on an n fi n mesh connected computer. Although we assume that the part remains between the jaws throughout the plan, one degree of translational freedom is not constrained by the parts feeder.
Reference: [45] <author> Michael Erdmann. </author> <type> Personal Communication, </type> <year> 1990. </year>
Reference-contexts: By establishing that an algorithm is complete in the sense that it works for all parts in some class, the algorithm can be used as a dependable component in a modular automation system <ref> [45] </ref>. However, as discussed in section 2, such algorithms are rare for compliant motion planning since one can usually construct cases for which a guaranteed plan does not exist.
Reference: [46] <author> Ari A. G. Requicha. </author> <title> Representations for rigid solids: Theory, models, </title> <journal> and systems. ACM Computing Surveys, </journal> <volume> 12 </volume> <pages> 437-464, </pages> <year> 1980. </year>
Reference-contexts: During a squeeze, the part rotates so as to reduce the diameter, terminating when the diameter reaches a local minimum. Let a two-dimensional part be described as a closed, compact region of E 2 which is also the closure of its interior <ref> [46] </ref>. For a fixed orientation of the part, define the part's diameter at direction to be the maximum distance between two parallel supporting lines at angle .
Reference: [47] <author> J. Jameson. </author> <title> Analytic Techniques for Automated Grasp. </title> <type> PhD thesis, </type> <institution> Department of Mechanical Engineering, Stanford University, </institution> <month> June </month> <year> 1985. </year> <month> 36 </month>
Reference-contexts: Note that the diameter is simply the distance separating two jaws of the gripper when both jaws are just touching the part. Jameson <ref> [47] </ref> used this function to show that any two-dimensional convex body must have at least two stable equilibria where it can be grasped between parallel jaws. In clustering applications, the maximum of the diameter function is known as the diameter of the set covered by the part [48].
Reference: [48] <author> F. P. Preparata and M. I. Shamos. </author> <title> Computational Geometry: An Introduction. </title> <publisher> Springer--Verlag, </publisher> <year> 1985. </year>
Reference-contexts: Jameson [47] used this function to show that any two-dimensional convex body must have at least two stable equilibria where it can be grasped between parallel jaws. In clustering applications, the maximum of the diameter function is known as the diameter of the set covered by the part <ref> [48] </ref>. The diameter function is also known as the width function in geometry 5 , but we use the former term to make an analogy with the radius function. <p> Preparata and Shamos <ref> [48] </ref> describe a linear-time algorithm for finding the maximum diameter of a convex polygon with n sides. Their algorithm enumerates all pairs of vertices that admit parallel supporting lines in order of increasing .
Reference: [49] <author> I. M. Yaglom and V.G. Boltyanskii. </author> <title> Convex Figures. </title> <publisher> Holt, Rinehart and Winston, </publisher> <address> New York, </address> <year> 1961. </year> <month> 37 </month>
Reference-contexts: Transitions between sinusoids can only occur when an edge is aligned with the gripper, so there are at most 2n sinusoidal pieces. 5 For example, see the discussion of curves of constant width in <ref> [49] </ref>. 32 Since each sinusoid arises from contact between two opposing vertices in the object, we can trivially compute the diameter function by enumerating all n 2 pairs of vertices.
References-found: 49

