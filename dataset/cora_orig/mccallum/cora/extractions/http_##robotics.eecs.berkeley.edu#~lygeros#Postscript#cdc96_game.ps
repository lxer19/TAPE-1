URL: http://robotics.eecs.berkeley.edu/~lygeros/Postscript/cdc96_game.ps
Refering-URL: http://robotics.eecs.berkeley.edu/~lygeros/Publications/cdc96_game.html
Root-URL: 
Email: lygeros, godbole, sastry@eecs.berkeley.edu  
Title: Multiagent Hybrid System Design using Game Theory and Optimal Control 1  
Author: John Lygeros, Datta N. Godbole and Shankar Sastry 
Address: Berkeley, CA 94720  
Affiliation: Intelligent Machines and Robotics Laboratory University of California, Berkeley  
Abstract: A methodology for designing hybrid controllers for large scale, multiagent systems is presented. Our approach is based on optimal control and game theory. The hybrid design is seen as a game between two players: the control, which is to be chosen by the designer and the disturbances that encode the actions of other agents (in a multi-agent setting), the actions of high level controllers or the usual unmodeled environmental disturbances. The two players compete over cost functions that encode properties that the closed loop hybrid system needs to satisfy (e.g., safety). The control "wins" the game if it can keep the system "safe" for any allowable disturbance. The solution to the game theory problem provides the designer with continuous controllers as well as sets of safe states where the control "wins" the game. The sets of safe states are used to construct an interface to the discrete domain that guarantees the safe operation of the combined hybrid system. The design methodology is illustrated by means of examples. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Nerode and W. Kohn, </author> <title> "Multiple agent hybrid control architecture," in Hybrid System, no. </title> <booktitle> 736 in LNCS, </booktitle> <pages> pp. 297-316, </pages> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Systems that incorporate both continuous and discrete dynamics are typically referred to as hybrid systems. The control of hybrid systems has attracted considerable attention both from the system theory <ref> [1, 2, 3, 4, 5] </ref> and the computer science point of view [6, 7, 8]. However there are still a lot of questions to be answered. A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems.
Reference: [2] <author> M. S. Branicky, </author> <title> Control of Hybrid Systems. </title> <type> PhD thesis, </type> <institution> Massacussets Institute of Technology, </institution> <year> 1994. </year>
Reference-contexts: Systems that incorporate both continuous and discrete dynamics are typically referred to as hybrid systems. The control of hybrid systems has attracted considerable attention both from the system theory <ref> [1, 2, 3, 4, 5] </ref> and the computer science point of view [6, 7, 8]. However there are still a lot of questions to be answered. A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems.
Reference: [3] <author> P. J. Antsaklis, J. A. Stiver, and M. Lemmon, </author> <title> "Hybrid system modeling and autonomous control systems," in Hybrid System, </title> <journal> no. </journal> <volume> 736 LNCS, </volume> <pages> pp. 366-392, </pages> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Systems that incorporate both continuous and discrete dynamics are typically referred to as hybrid systems. The control of hybrid systems has attracted considerable attention both from the system theory <ref> [1, 2, 3, 4, 5] </ref> and the computer science point of view [6, 7, 8]. However there are still a lot of questions to be answered. A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems.
Reference: [4] <author> R. W. Brockett, </author> <title> "Hybrid models for motion control systems," in Perspectives in Control (H. </title> <editor> Trentel-man and J. Willems, eds.), </editor> <publisher> Birkhauser, </publisher> <year> 1993. </year>
Reference-contexts: Systems that incorporate both continuous and discrete dynamics are typically referred to as hybrid systems. The control of hybrid systems has attracted considerable attention both from the system theory <ref> [1, 2, 3, 4, 5] </ref> and the computer science point of view [6, 7, 8]. However there are still a lot of questions to be answered. A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems.
Reference: [5] <author> A. Deshpande, </author> <title> Control of Hybrid Systems. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <year> 1994. </year>
Reference-contexts: Systems that incorporate both continuous and discrete dynamics are typically referred to as hybrid systems. The control of hybrid systems has attracted considerable attention both from the system theory <ref> [1, 2, 3, 4, 5] </ref> and the computer science point of view [6, 7, 8]. However there are still a lot of questions to be answered. A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems.
Reference: [6] <author> R. Alur, C. Courcoubetis, T. A. Henzinger, and P. H. Ho, </author> <title> "Hybrid automaton: An algorithmic approach to the specification and verification of hybrid systems," in Hybrid System, no. </title> <booktitle> 736 in LNCS, </booktitle> <pages> pp. 209-229, </pages> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Systems that incorporate both continuous and discrete dynamics are typically referred to as hybrid systems. The control of hybrid systems has attracted considerable attention both from the system theory [1, 2, 3, 4, 5] and the computer science point of view <ref> [6, 7, 8] </ref>. However there are still a lot of questions to be answered. A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. Their characteristic is that many agents are trying to make optimum use of a congested, common resource.
Reference: [7] <author> X. Nicollin, A. Olivero, J. Sifakis, and S. Yovine, </author> <title> "An approach to the description and analysis of hybrid systems," in Hybrid System, no. </title> <booktitle> 736 in LNCS, </booktitle> <pages> pp. 149-178, </pages> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Systems that incorporate both continuous and discrete dynamics are typically referred to as hybrid systems. The control of hybrid systems has attracted considerable attention both from the system theory [1, 2, 3, 4, 5] and the computer science point of view <ref> [6, 7, 8] </ref>. However there are still a lot of questions to be answered. A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. Their characteristic is that many agents are trying to make optimum use of a congested, common resource.
Reference: [8] <author> A. Puri, </author> <title> Theory of Hybrid Systems and Discrete Event Systems. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <year> 1995. </year>
Reference-contexts: Systems that incorporate both continuous and discrete dynamics are typically referred to as hybrid systems. The control of hybrid systems has attracted considerable attention both from the system theory [1, 2, 3, 4, 5] and the computer science point of view <ref> [6, 7, 8] </ref>. However there are still a lot of questions to be answered. A very interesting class of systems that are naturally suited for hybrid control are multiagent, scarce resource systems. Their characteristic is that many agents are trying to make optimum use of a congested, common resource.
Reference: [9] <author> T. Ba~sar and P. Bernhard, </author> <title> H 1 -Optimal Control and Related Minimax Design Problems. </title> <publisher> Birkhauser, </publisher> <year> 1991. </year>
Reference-contexts: Game theoretic ideas have already been applied in this context to problems with disturbances of Class 1 and 2 and quadratic cost functions. The resulting controllers are the H 1 or L 2 optimal controllers (see for example <ref> [9] </ref>). The paper is arranged in four sections. In Section 2 an algorithm for producing hybrid controllers for a multi agent system is presented. The result is a hybrid controller which can, by design, guarantee certain properties for the closed loop system.
Reference: [10] <author> J. Lygeros, D. N. Godbole, and S. Sastry, </author> <title> "A verified hybrid controller for automated vehicles," </title> <booktitle> in IEEE Control and Decision Conference, </booktitle> <year> 1996. </year>
Reference-contexts: The application of this approach on an example is illustrated in Section 3. Finally, Section 4 presents some concluding remarks and directions of future work. For applications to automated highways and air traffic management the reader is referred to <ref> [10, 11] </ref>. For extensions to hybrid system verification see [12]. 2 Game Theoretic Framework The difficulties in the design of hybrid controllers arize at the interaction between the discrete and continuous components.
Reference: [11] <author> G. J. Pappas, C. Tomlin, and S. Sastry, </author> <title> "Conflict resolution for multi-agent hybrid systems," </title> <booktitle> in IEEE Control and Decision Conference, </booktitle> <year> 1996. </year>
Reference-contexts: The application of this approach on an example is illustrated in Section 3. Finally, Section 4 presents some concluding remarks and directions of future work. For applications to automated highways and air traffic management the reader is referred to <ref> [10, 11] </ref>. For extensions to hybrid system verification see [12]. 2 Game Theoretic Framework The difficulties in the design of hybrid controllers arize at the interaction between the discrete and continuous components.
Reference: [12] <author> J. Lygeros, D. N. Godbole, and S. Sastry, </author> <title> "Optimal control approach to multiagent, hierarchical system verification," </title> <booktitle> in IFAC World Congress, </booktitle> <year> 1996. </year>
Reference-contexts: The application of this approach on an example is illustrated in Section 3. Finally, Section 4 presents some concluding remarks and directions of future work. For applications to automated highways and air traffic management the reader is referred to [10, 11]. For extensions to hybrid system verification see <ref> [12] </ref>. 2 Game Theoretic Framework The difficulties in the design of hybrid controllers arize at the interaction between the discrete and continuous components.
Reference: [13] <author> D. N. Godbole, J. Lygeros, and S. Sastry, </author> <title> "Hierarchical hybrid control: an IVHS case study," in Hybrid Systems II, no. </title> <booktitle> 999 in LNCS, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1995. </year>
Reference-contexts: They are mainly due to inadequate abstraction of the continuous performance at the discrete level, which may result in the discrete controller issuing commands that are incompatible with the state of the continuous system. The results can be catastrophic as illustrated in <ref> [13] </ref>. We will try to overcome this difficulty by using game theory to generate continuous controllers and consistent discrete abstractions for the resulting closed loop system.
Reference: [14] <author> T. Ba~sar and G. J. Olsder, </author> <title> Dynamic Noncooperative Game Theory. </title> <publisher> Academic Press, </publisher> <editor> second ed., </editor> <year> 1995. </year>
Reference-contexts: The results can be catastrophic as illustrated in [13]. We will try to overcome this difficulty by using game theory to generate continuous controllers and consistent discrete abstractions for the resulting closed loop system. For background material on game theory the reader is referred to <ref> [14] </ref>. 2.1 Plant Model The plant dynamics of an agent are assumed to be governed by a differential equation of the form: _x (t) = f (x (t); u (t); d (t); t) (1) y (t) = h (x (t); u (t); d (t); t) (3) Here x (t) 2 R
Reference: [15] <author> J. Lygeros, </author> <title> Hierarchical Hybrid Control of Large Scale Systems. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <year> 1996. </year>
Reference-contexts: It is also possible to modify our approach so that it applies to systems for which the plant dynamics themselves are described by nontrivial hybrid systems (e.g. hopping robots). See <ref> [15] </ref> for details. constraints can be encoded by requiring that the state, input and disturbance lie in some set for all times, that is, x (t) 2 X R n ; u (t) 2 U R m and d (t) 2 D R p for all t.
Reference: [16] <author> J. Lygeros, D. N. Godbole, and M. E. Broucke, </author> <title> "Towards a fault tolerant AHS design." </title> <type> SAE Paper # 951894, </type> <note> Presented at SAE Future Transportation Technology Conference, Costa Mesa, </note> <year> 1995. </year>
Reference-contexts: This construction provides a convenient way of modeling gradual performance degradation, where lower priority performance requirements are abandoned in favor of higher priority ones. It can be particularly useful for operation under degraded conditions, for example in the presence of faults <ref> [16] </ref>. The overall continuous design including the interface is shown in Figure 1. Switching of continuous controllers takes place at two levels. Assume that the discrete layer specifies two set points, A and B, and two objectives, for example safety and efficiency. <p> In extreme cases (for example in the presence of faults) a fully cooperative game may be needed to salvage the situation (as can be seen in the algorithms proposed in <ref> [16, 17] </ref>). 3 Example: The Train-Gate Controller In this section we illustrate how the approach developed in Section 2 can be applied to a classic example from the timed automata verification literature, the train gate controller. 3.1 Problem Statement The train-gate set up is shown in Figure 2.
Reference: [17] <author> D. N. Godbole, J. Lygeros, E. Singh, A. Desh-pande, and A. Lindsey, </author> <title> "Design and verification of coordination layer protocols for degraded modes of operation of AHS," </title> <booktitle> in IEEE Control and Decision Conference, </booktitle> <pages> pp. 427-432, </pages> <year> 1995. </year>
Reference-contexts: In extreme cases (for example in the presence of faults) a fully cooperative game may be needed to salvage the situation (as can be seen in the algorithms proposed in <ref> [16, 17] </ref>). 3 Example: The Train-Gate Controller In this section we illustrate how the approach developed in Section 2 can be applied to a classic example from the timed automata verification literature, the train gate controller. 3.1 Problem Statement The train-gate set up is shown in Figure 2.
Reference: [18] <author> A. Puri and P. Varaiya, </author> <title> "Verification of hybrid systems using abstractions," in Hybrid Systems II, no. </title> <booktitle> 999 in LNCS, </booktitle> <publisher> Springer Verlag, </publisher> <year> 1995. </year>
Reference-contexts: We will work on the problem formulation of <ref> [18] </ref>. For simplic ity we assume that the train is going around a circular track of length L, where L is large enough to ensure adequate separation between consecutive train appearances. We also assume that the train can be approximated by a point. <p> Assume that the gate dynamics are described by the first order differential equation: _x 1 = 2 where u is the input to be chosen by the designer of the gate controller. The design of <ref> [18] </ref> is based on discrete sensor measurements. We assume that there are two sensors located at distances S 1 and S 2 respectively on the track.
Reference: [19] <author> J. Lygeros, D. N. Godbole, and S. Sastry, </author> <title> "A game theoretic approach to hybrid system design," </title> <type> Tech. Rep. </type> <institution> UCB/ERL-M95/77, Electronic Research Laboratory, University of California Berkeley, </institution> <month> October </month> <year> 1995. </year>
Reference-contexts: A simple one is: J 2 (x 0 ; u; d) = 0 Minimizing J 2 implies that the gate is open for as long as possible. 3.3 Controller Design We can now apply the algorithm of Section 2. The detailed analysis can be found in <ref> [19] </ref>. Our first goal is to find the safe set of initial conditions and the control that makes them safe. <p> Fortunately, the dynamics are simple enough to allow us to guess a candidate saddle solution: u fl (t) 0 d fl (t) v 2 (9) Lemma 2 (u fl ; d fl ) is globally a saddle solution. The proof <ref> [19] </ref> consists of showing that for any admissible (u; d), J 1 (x 0 ; u fl ; d) J fl 1 (x 0 ) J 1 (x 0 ; u; d fl ). Then, by definition, (u fl ; d fl ) is a global saddle solution.
References-found: 19

