URL: http://ftp.cs.yale.edu/pub/ghosh/tr1053.ps
Refering-URL: http://ftp.cs.yale.edu/pub/ghosh/
Root-URL: http://www.cs.yale.edu
Title: Dynamic Load Balancing with Limited Link Capacities  
Author: Bhaskar Ghosh S. Muthukrishnan 
Note: Supported by ONR under grant number 4-91-J-1576 and a Yale/IBM joint study.  2 DIMACS, Rutgers University, Piscataway, NJ 08855. Supported by DIMACS, Center for Discrete Mathematics and Theoretical Computer Science, a National Science Foundation Science and Technology Center, under NSF Contract STC-8809648.  
Address: P.O.Box 208285, New Haven, CT 06520.  
Affiliation: Yale University Department of Computer Science  1 Department of Computer Science, Yale University.  
Pubnum: YALEU/DCS/TR-YALEU/DCS/TR-1053  
Email: Email: ghosh-bhaskar@cs.yale.edu.  Email: muthu@dimacs.rutgers.edu.  
Date: November 1994  
Abstract-found: 0
Intro-found: 1
Reference: [AA+93] <author> W. Aiello, B. Awerbuch, B. Maggs, and S. Rao. </author> <title> Approximate Load Balancing on Dynamic and Asynchronous Networks. </title> <booktitle> In Proc. of 25th ACM Symp on Theory of Computing, </booktitle> <pages> 632-641, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: 1 Introduction We consider the dynamic load balancing problem on distributed networks of arbitrary topology. For more on the background and motivation of this work we refer the reader to <ref> [AA+93] </ref> and [GM94]. Model. We assume that each link can carry at most c (c 1) load units in any time step. Of particular interest is the case when c = 1. We consider two models for communication, namely, the multiport model and the matching model. <p> state is the one in which each processor has at most d load units more than its neighbors 6 . 3.3 Discussion It is easy to see that working with only the potential function the number of steps required to load balance is critically dependent on p For comparison with <ref> [AA+93] </ref>, we rewrite our bounds in terms of , the initial imbalance of the graph defined as max i (w i w). Note n 2 0 and assume 0 is sufficiently large. 1. Our randomized algorithm takes O p c 2 steps with high probability on the matching model. 2. <p> Note n 2 0 and assume 0 is sufficiently large. 1. Our randomized algorithm takes O p c 2 steps with high probability on the matching model. 2. Our deterministic algorithm takes O p c 2 steps on the multiport model. In contrast, the algorithm in <ref> [AA+93] </ref> takes log (n) steps where 1 is the expansion factor of the graph. Clearly, d log (n) = n p for sufficiently large and for every graph G irrespective of and 2 of G. Thus our algorithm takes asymptotically fewer steps. <p> Clearly, d log (n) = n p for sufficiently large and for every graph G irrespective of and 2 of G. Thus our algorithm takes asymptotically fewer steps. Also our analysis (in both models) is considerably simpler than the one in <ref> [AA+93] </ref>. In addition, our results hold in general for any c, the edge capacity of the graph. The algorithm and analysis is [AA+93] holds only for c = 1. <p> Thus our algorithm takes asymptotically fewer steps. Also our analysis (in both models) is considerably simpler than the one in <ref> [AA+93] </ref>. In addition, our results hold in general for any c, the edge capacity of the graph. The algorithm and analysis is [AA+93] holds only for c = 1. <p> So the number of steps needed is at least jSj=2 fljSj = ( fl That proves the theorem. Remark. Note that the lower bound of (=) in <ref> [AA+93] </ref> depends on constructing a graph for any given expansion and therefore does not hold for all graphs, whereas our lower bound holds for all graphs. (e.g., for a clique, [AA+93] cannot give a lower bound, whereas we claim a lower bound of ( n )). 4.1.2 Upper Bound Theorem 4 <p> Remark. Note that the lower bound of (=) in <ref> [AA+93] </ref> depends on constructing a graph for any given expansion and therefore does not hold for all graphs, whereas our lower bound holds for all graphs. (e.g., for a clique, [AA+93] cannot give a lower bound, whereas we claim a lower bound of ( n )). 4.1.2 Upper Bound Theorem 4 The total number of steps taken by our algorithm on the multiport model to get to a load-balanced state is O ( fl log n + de 2 Proof. <p> It is positive if load is moved from i to j and negative if not. Of course, k ij = k ji . The change in potential due to node i is: 7 This is the algorithm in <ref> [AA+93] </ref>. 9 i = w 2 = 2k i w i k 2 = 2w i j X k ij ) 2 X k i;j d j ij (Using Holder's Inequality) Summing over all nodes, the total change in potential is given by = i i @ 2w i k i <p> Proofs of the first two lemmas are given in the Appendix. The first lemma uses the same technique of breaking "long" edges into "short" ones as in [M89, V91]. The third lemma is trivial. We are now prepared to lower bound the fractional drop in potential for <ref> [AA+93] </ref>. @ ij2E 1 4de i=1 ! 4de (Using Lemma 5) fl P n 4de (Using Lemma 6) 4de (Using Lemma 7) High Potential Phase. <p> Since the algorithm of <ref> [AA+93] </ref> can only run till for every edge (i; j), jw i w j j falls below 2d, the total number of steps taken is O ( fl log n + 2de 2 fl 2 ) which is O ( fl log n) for large enough initial imbalance . Remark. <p> Remark. The upper bound in Theorem 4 is an improvement over that of log n in <ref> [AA+93] </ref>. 4.2 Unit-Capacity Matching Model We state the following theorem without proof. Theorem 5 There exists a randomized load balancing algorithm on the matching model which load-balances in O ( d fl log n) steps with high probability for large enough initial imbalance . <p> Therefore for any node i, its local imbalance, namely the difference between its load w i at the termination of the algorithm and w, is at most D, the diameter of the graph. In contrast the maximum imbalance in the algorithm due to <ref> [AA+93] </ref> (and our algorithm in the multiport model) is O (dD). Thus our algorithm on the matching model achieves comparatively better balancing. 2. The matching model is weaker than the model in [AA+93] (which is the multiport model with c = 1) since only a matching set of edges is used <p> In contrast the maximum imbalance in the algorithm due to <ref> [AA+93] </ref> (and our algorithm in the multiport model) is O (dD). Thus our algorithm on the matching model achieves comparatively better balancing. 2. The matching model is weaker than the model in [AA+93] (which is the multiport model with c = 1) since only a matching set of edges is used for load movement during each step of our model; in contrast, potentially all edges are utilized in the multiport model.
Reference: [A86] <author> N. Alon. </author> <title> Eigenvalues and Expanders. </title> <journal> Combinatorica, </journal> <volume> Vol. 6, </volume> <pages> 83-96, </pages> <year> 1986. </year>
Reference-contexts: The matrix L = D A is the Laplacian Matrix of G. The eigenvalues of L are 0 = 1 &lt; 2 : : : n . The eigenvalue 2 is a 1 widely studied parameter and it reflects the connectivity of the graph. (See <ref> [A86, MP92] </ref> for further details.) We use the following facts about the eigenvalue 2 . 1. G is a connected graph if and only if 2 &gt; 0. It can be shown that for any connected graph with n nodes, 2 = (1=n 2 ). 2.
Reference: [GM94] <author> B. Ghosh and S. Muthukrishnan. </author> <title> Dynamic Load Balancing on Parallel and Distributed Networks by Random Matchings. </title> <booktitle> In Proc. of 6th ACM SPAA, </booktitle> <pages> 226-235, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: 1 Introduction We consider the dynamic load balancing problem on distributed networks of arbitrary topology. For more on the background and motivation of this work we refer the reader to [AA+93] and <ref> [GM94] </ref>. Model. We assume that each link can carry at most c (c 1) load units in any time step. Of particular interest is the case when c = 1. We consider two models for communication, namely, the multiport model and the matching model. <p> Since the bounds in Section 3 and 4 appear incomparable, we have included both. 3 Bounds via Potential Function 3.1 The Matching Model Our algorithm works on this model by repeatedly picking random matchings in the manner described in <ref> [GM94] </ref>. In each matching, for each edge (i; j) in the matching with w i &gt; w j , min w i w j load units are moved from node i to node j. As in [GM94], = P i (w i w) 2 where w = P n , and <p> works on this model by repeatedly picking random matchings in the manner described in <ref> [GM94] </ref>. In each matching, for each edge (i; j) in the matching with w i &gt; w j , min w i w j load units are moved from node i to node j. As in [GM94], = P i (w i w) 2 where w = P n , and n is the number of vertices in the underlying graph. Let e denote the number of edges in the underlying graph and let 2 be its second smallest laplacian eigenvalue as in [GM94]. 2 Our analysis <p> As in <ref> [GM94] </ref>, = P i (w i w) 2 where w = P n , and n is the number of vertices in the underlying graph. Let e denote the number of edges in the underlying graph and let 2 be its second smallest laplacian eigenvalue as in [GM94]. 2 Our analysis is in three stages. First we consider the high global imbalance phase when is large (precisely, c 2 e 2 2 ). <p> Then bounding loosely 4 (w i w) 2 (nc) 2 . Therefore, n 3 c 2 in this phase. Using the techniques in <ref> [GM94] </ref>, we can show that the expected drop in potential is at least 1=8d (In fact, we can say more but we omit those details here). <p> Remark 1 [Simulating the multiport model on the matching model] In <ref> [GM94] </ref>, a local algorithm is presented that chooses a random matching so that each edge (i; j) in G appears in the matching with probability greater than 1=8d where d is the degree of G.
Reference: [L93] <author> L. Lovasz. </author> <title> Combinatorial Problems and Exercises. </title> <publisher> North Holland Publishers. </publisher> <year> 1993. </year>
Reference-contexts: It might be reasonable to consider scenarios where c is related to the graph parameters n and/or d. If c is set to d for instance, our algorithms take asymptotically smaller steps. 6 Acknowledgements Thanks to Professor Laszlo Lovasz for pointing out the lemma in his book <ref> [L93] </ref>.
Reference: [MP92] <author> B. Mohar and S. Poljak. </author> <title> Eigenvalues in Combinatorial Optimization. </title> <type> Research Report 92752, IMA, </type> <institution> Minneapolis, </institution> <year> 1992. </year>
Reference-contexts: The matrix L = D A is the Laplacian Matrix of G. The eigenvalues of L are 0 = 1 &lt; 2 : : : n . The eigenvalue 2 is a 1 widely studied parameter and it reflects the connectivity of the graph. (See <ref> [A86, MP92] </ref> for further details.) We use the following facts about the eigenvalue 2 . 1. G is a connected graph if and only if 2 &gt; 0. It can be shown that for any connected graph with n nodes, 2 = (1=n 2 ). 2.
Reference: [M89] <author> M. Mihail. </author> <title> Conductance and Convergence of Markov Chains A Combinatorial Treatment of Expanders. </title> <booktitle> In Proc. of 30th IEEE FOCS, </booktitle> <pages> 526-531, </pages> <month> October </month> <year> 1989. </year>
Reference-contexts: Lemma 7 P n 1 where w, and have their usual meaning. Proofs of the first two lemmas are given in the Appendix. The first lemma uses the same technique of breaking "long" edges into "short" ones as in <ref> [M89, V91] </ref>. The third lemma is trivial. We are now prepared to lower bound the fractional drop in potential for [AA+93]. @ ij2E 1 4de i=1 ! 4de (Using Lemma 5) fl P n 4de (Using Lemma 6) 4de (Using Lemma 7) High Potential Phase.
Reference: [V91] <author> V. Vazirani. </author> <title> Rapidly Mixing Markov Chains. </title> <booktitle> In Procs. of Symposia in Applied Mathematics: Probabilistic Combinatorics and its Applications, </booktitle> <volume> Vol 44, </volume> <year> 1991. </year> <month> 13 </month>
Reference-contexts: Lemma 7 P n 1 where w, and have their usual meaning. Proofs of the first two lemmas are given in the Appendix. The first lemma uses the same technique of breaking "long" edges into "short" ones as in <ref> [M89, V91] </ref>. The third lemma is trivial. We are now prepared to lower bound the fractional drop in potential for [AA+93]. @ ij2E 1 4de i=1 ! 4de (Using Lemma 5) fl P n 4de (Using Lemma 6) 4de (Using Lemma 7) High Potential Phase.
References-found: 7

