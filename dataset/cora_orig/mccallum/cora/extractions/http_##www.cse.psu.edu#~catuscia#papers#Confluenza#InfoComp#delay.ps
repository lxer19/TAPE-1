URL: http://www.cse.psu.edu/~catuscia/papers/Confluenza/InfoComp/delay.ps
Refering-URL: http://www.cse.psu.edu/~catuscia/publications.html
Root-URL: http://www.cse.psu.edu
Email: falaschi@dimi.uniud.it  gabbri@di.unipi.it  marriott@cs.monash.edu.au  catuscia@disi.unige.it  
Title: Constraint Logic Programming with Dynamic Scheduling: A Semantics Based on Closure Operators  
Author: Moreno Falaschi Maurizio Gabbrielli Kim Marriott Catuscia Palamidessi 
Keyword: Logic programming, dynamic scheduling, denotational semantics.  
Note: To appear in Information and Computation. Partially supported by the HCM project CONSOLE. Partially supported by the HCM project EXPRESS.  
Address: Via delle Scienze, 206 33100 Udine, Italy  Pisa, Corso Italia, 40 56125 Pisa, Italy  3168, Victoria, Australia  Genova, Via Dodecaneso 35, 16146, Genova, Italy  
Affiliation: Dipartimento di Matematica e Informatica, Universita di Udine,  Dipartimento di Informatica, Universita di  Department of Computer Science, Monash University, Clayton  DISI, Universita di  
Abstract: The first logic programming languages, such as Prolog, used a fixed left-to-right atom scheduling rule. Recent logic programming languages, however, provide more flexible scheduling in which there is a default computation rule such as left-to-right but in which some calls are dynamically "delayed" until their arguments are sufficiently instantiated to allow the call to run efficiently. Such languages include constraint logic programming languages, since most implementations of these languages delay constraints which are "too hard." From the semantic point of view, the fact that an atom must be delayed under certain conditions, causes the standard semantics of (constraint) logic programming to be no longer adequate to capture the meaning of a program. In our paper we attack this problem and we develop a denotational semantics for constraint logic programming with dynamic scheduling. The key idea is that the denotation of an atom or goal is a set of closure operators, where different closure operators correspond to different sequences of rule choices. 
Abstract-found: 1
Intro-found: 1
Reference: <author> de Boer, F. S. and Palamidessi, C. </author> <year> 1991. </year> <title> A Fully Abstract Model for Concurrent Constraint Programming. </title> <booktitle> In Proc. </booktitle>
Reference: <editor> TAPSOFT'91, S. Abramsky and T. Maibaum, Eds. </editor> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> vol. 493. </volume> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <note> 296-319. </note> <author> de la Banda, M. G., Marriott, K., and Stuckey, P. </author> <year> 1995. </year> <title> Efficient analysis of logic programs with dynamic scheduling. </title> <booktitle> In Proc. Twelfth International Logic Programming Symposium, </booktitle> <editor> J. Lloyd, Ed. </editor> <publisher> MIT Press, </publisher> <pages> 417-431. </pages>
Reference: <author> Debray, S., Gudemann, D., and Bigot, P. </author> <year> 1994. </year> <title> Detection and optimization of suspension-free logic programs. </title> <booktitle> In Proc. Eleventh International Logic Programming Symposium, </booktitle> <editor> M. Bruynooghe, Ed. </editor> <publisher> The MIT Press, </publisher> <address> Cambridge, Mass., </address> <pages> 487-504. </pages>
Reference: <author> Falaschi, M., Levi, G., Martelli, M., and Palamidessi, C. </author> <year> 1989. </year> <title> Declarative Modeling of the Operational Behavior of Logic Languages. </title> <booktitle> Theoretical Computer Science 69, </booktitle> <volume> 3, </volume> <pages> 289-318. </pages>
Reference: <author> Gabbrielli, M., Dore, G., and Levi, G. </author> <year> 1995. </year> <title> Observable Semantics for Constraint Logic Programs. </title> <journal> Journal of Logic and Computation 5, </journal> <volume> 2, </volume> <pages> 133-171. </pages>
Reference: <author> Gierz, G., Hofmann, K., Keimel, K., Lawson, J., Mislove, M., and Scott, D. </author> <year> 1980. </year> <title> A Compendium of Continuous Lattices. </title> <publisher> Springer-Verlag. </publisher>
Reference: <author> Jaffar, J. and Lassez, J.-L. </author> <year> 1987. </year> <title> Constraint Logic Programming. </title> <booktitle> In Proc. Fourteenth Annual ACM Symp. on Principles of Programming Languages. </booktitle> <publisher> ACM Press, </publisher> <pages> 111-119. </pages>
Reference: <author> Jagadeesan, R., Shanbhogue, V., and Saraswat, V. </author> <year> 1991. </year> <title> Angelic non-determinism in concurrent constraint programming. </title> <type> Tech. rep., </type> <institution> System Science Lab., </institution> <note> Xerox PARC. </note>
Reference: <author> Marriott, K., de la Banda, M. G., and Hermenegildo, M. </author> <year> 1994. </year> <title> Analyzing logic programs with dynamic scheduling. </title> <booktitle> In Proc. 21st Annual ACM Symp. on Principles of Programming Languages. </booktitle> <publisher> ACM Press, </publisher> <pages> 240-253. </pages>
Reference: <author> Naish, L. </author> <year> 1986. </year> <title> Negation and Control in Prolog. </title> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> vol. 238. </volume> <publisher> Springer-Verlag, </publisher> <address> Berlin. </address>
Reference: <author> Naish, L. </author> <year> 1992. </year> <title> Coroutining and the construction of terminating logic programs. </title> <type> Tech. Rep. 92/5, </type> <institution> Department of Computer Science, University of Melbourne. </institution>
Reference: <author> Saraswat, V. A. </author> <year> 1989. </year> <title> Concurrent constraint programming languages. </title> <type> Ph.D. thesis, </type> <institution> Carnegie-Mellon University. </institution>
Reference: <author> Saraswat, V. A., Rinard, M., and Panangaden, P. </author> <year> 1991. </year> <title> Semantic Foundation of Concurrent Constraint Programming. </title> <booktitle> In Proc. Eighteenth Annual ACM Symp. on Principles of Programming Languages. </booktitle> <publisher> ACM Press, </publisher> <pages> 333-353. </pages> <editor> van Emden, M. H. and Kowalski, R. A. </editor> <year> 1976. </year> <title> The semantics of predicate logic as a programming language. </title> <journal> Journal of the ACM 23, </journal> <volume> 4, </volume> <pages> 733-742. </pages>
Reference: <author> Yelick, K. and Zachary, J. </author> <year> 1989. </year> <title> Moded type systems for logic programming. </title> <booktitle> In Proc. Sixteenth POPL. </booktitle> <publisher> ACM Press, </publisher> <pages> 116-124. </pages>
References-found: 14

