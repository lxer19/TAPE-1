URL: http://www-graphics.stanford.edu/~kapu/sd/paper.ps.gz
Refering-URL: http://www-graphics.stanford.edu/~kapu/sd/slicol/index.html
Root-URL: http://www.cs.stanford.edu
Title: Fast Rendering of Subdivision Surfaces  
Author: Kari Pulli 
Keyword: Key Words: subdivision surfaces, surface rendering.  
Address: Seattle, WA) Mark Segal (SGI)  
Affiliation: (Univ. of Washington,  
Abstract: Subdivision surfaces provide a curved surface representation that is useful in a number of applications, including modeling surfaces of arbitrary topological type, fitting scattered data, and geometric compression and automatic level-of-detail generation using wavelets. Subdivision surfaces also provide an attractive representation for fast rendering, since they can directly represent complex surfaces of arbitrary topology. We present a method for subdivision surface triangulation that is fast, uses minimum memory, and is simpler in structure than a naive rendering method based on direct subdivision. These features make the algorithm amenable to implementation on both general purpose CPUs and dedicated geometry engine processors, allowing high rendering performance on appropriately equipped graphics hardware. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Catmull and J. Clark. </author> <title> Recursively generated b-spline surfaces on arbitrary topological meshes. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 10(6) </volume> <pages> 350-355, </pages> <month> September </month> <year> 1978. </year>
Reference-contexts: In the limit the mesh converges to a continuous surface. The control mesh usually gives a rough polygonal approximation of the resulting surface; some methods even interpolate the control mesh [4]. The first subdivision surfaces were based on quadrilateral meshes and generalize biquadratic [3] and bicubic <ref> [1] </ref> tensor product surfaces (see [5] and [9] for extensions). In addition to surface modeling, subdivision surfaces have been used for fitting scattered data [6], and geometric compression and automatic level-of-detail generation using wavelets [8].
Reference: [2] <author> M. Deering. </author> <title> Geometry compression. </title> <booktitle> In SIGGRAPH '95, </booktitle> <pages> pages 13-20, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: A single subdivision message, however, sends typically only 10-15 vertices (two triangles and their neighbors), along with some type information, but produces 512 triangles. Subdivision surfaces combined with wavelet analysis may yield even greater compression in communication <ref> [2] </ref>. A multiresolution representation of the control mesh would allow sending larger submeshes compactly. 4.2 Level-of-detail control In order to obtain interactive rendering speeds, automatic level-of-detail (LOD) control is essential. With subdivision surfaces, there is no need to store or create alternate descriptions of geometry at different levels of detail.
Reference: [3] <author> D. Doo and M. Sabin. </author> <title> Behaviour of recursive division surfaces near extraordinary points. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 10(6) </volume> <pages> 356-360, </pages> <month> September </month> <year> 1978. </year>
Reference-contexts: In the limit the mesh converges to a continuous surface. The control mesh usually gives a rough polygonal approximation of the resulting surface; some methods even interpolate the control mesh [4]. The first subdivision surfaces were based on quadrilateral meshes and generalize biquadratic <ref> [3] </ref> and bicubic [1] tensor product surfaces (see [5] and [9] for extensions). In addition to surface modeling, subdivision surfaces have been used for fitting scattered data [6], and geometric compression and automatic level-of-detail generation using wavelets [8].
Reference: [4] <author> N. Dyn, D. Levin, and J. Gregory. </author> <title> A butterfly subdivision scheme for surface interpolation with tension control. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 9(2) </volume> <pages> 160-169, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: In the limit the mesh converges to a continuous surface. The control mesh usually gives a rough polygonal approximation of the resulting surface; some methods even interpolate the control mesh <ref> [4] </ref>. The first subdivision surfaces were based on quadrilateral meshes and generalize biquadratic [3] and bicubic [1] tensor product surfaces (see [5] and [9] for extensions).
Reference: [5] <author> M. Halstead, M. Kass, and T. DeRose. </author> <title> Efficient, fair interpolation using catmull-clark surfaces. </title> <booktitle> In SIG-GRAPH '93, </booktitle> <month> August </month> <year> 1993. </year>
Reference-contexts: The control mesh usually gives a rough polygonal approximation of the resulting surface; some methods even interpolate the control mesh [4]. The first subdivision surfaces were based on quadrilateral meshes and generalize biquadratic [3] and bicubic [1] tensor product surfaces (see <ref> [5] </ref> and [9] for extensions). In addition to surface modeling, subdivision surfaces have been used for fitting scattered data [6], and geometric compression and automatic level-of-detail generation using wavelets [8].
Reference: [6] <author> H. Hoppe, T. DeRose, T. Duchamp, M. Halstead, H. Jin, J. McDonald, J. Schweitzer, and W. Stuetzle. </author> <title> Piecewise smooth surface reconstruction. </title> <booktitle> In SIGGRAPH '94, </booktitle> <month> July </month> <year> 1994. </year>
Reference-contexts: The first subdivision surfaces were based on quadrilateral meshes and generalize biquadratic [3] and bicubic [1] tensor product surfaces (see [5] and [9] for extensions). In addition to surface modeling, subdivision surfaces have been used for fitting scattered data <ref> [6] </ref>, and geometric compression and automatic level-of-detail generation using wavelets [8]. The goal of this work was to develop an efficient algorithm to implement Loop's subdivision scheme [7] with additions by Hoppe et al. [6]. <p> In addition to surface modeling, subdivision surfaces have been used for fitting scattered data <ref> [6] </ref>, and geometric compression and automatic level-of-detail generation using wavelets [8]. The goal of this work was to develop an efficient algorithm to implement Loop's subdivision scheme [7] with additions by Hoppe et al. [6]. Loop's subdivision scheme is a generalization of C 2 quartic triangular B-splines, and is the simplest method known to lead to tangent plane smooth surfaces. The control mesh consists of triangular faces and, like subdivision surfaces in general, can have any topology. <p> It is also possible at any level to directly calculate the limiting location of each control vertex on the final surface, as well as the normal vector. Hoppe et al. <ref> [6] </ref> extended Loop's scheme by introducing subdivision rules that lead to a piecewise smooth surface with features such as creases, corners, darts, and conical ver tices.
Reference: [7] <author> C. </author> <title> Loop. Smooth subdivision surfaces based on triangles. </title> <type> Master's thesis, </type> <institution> Department of Mathematics, Univ. of Utah, </institution> <year> 1987. </year>
Reference-contexts: In addition to surface modeling, subdivision surfaces have been used for fitting scattered data [6], and geometric compression and automatic level-of-detail generation using wavelets [8]. The goal of this work was to develop an efficient algorithm to implement Loop's subdivision scheme <ref> [7] </ref> with additions by Hoppe et al. [6]. Loop's subdivision scheme is a generalization of C 2 quartic triangular B-splines, and is the simplest method known to lead to tangent plane smooth surfaces. The control mesh consists of triangular faces and, like subdivision surfaces in general, can have any topology.
Reference: [8] <author> M. Lounsbery. </author> <title> Multiresolution analysis for surfaces of arbitrary topological type. </title> <type> PhD thesis, </type> <institution> Dept. of Computer Science and Engineering, Univ. of Washington, </institution> <month> September </month> <year> 1994. </year>
Reference-contexts: The first subdivision surfaces were based on quadrilateral meshes and generalize biquadratic [3] and bicubic [1] tensor product surfaces (see [5] and [9] for extensions). In addition to surface modeling, subdivision surfaces have been used for fitting scattered data [6], and geometric compression and automatic level-of-detail generation using wavelets <ref> [8] </ref>. The goal of this work was to develop an efficient algorithm to implement Loop's subdivision scheme [7] with additions by Hoppe et al. [6]. Loop's subdivision scheme is a generalization of C 2 quartic triangular B-splines, and is the simplest method known to lead to tangent plane smooth surfaces.
Reference: [9] <author> A. H. Nasri. </author> <title> Polyhedral subdivision methods for free-form surfaces. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 6(1) </volume> <pages> 29-73, </pages> <month> January </month> <year> 1987. </year>
Reference-contexts: The control mesh usually gives a rough polygonal approximation of the resulting surface; some methods even interpolate the control mesh [4]. The first subdivision surfaces were based on quadrilateral meshes and generalize biquadratic [3] and bicubic [1] tensor product surfaces (see [5] and <ref> [9] </ref> for extensions). In addition to surface modeling, subdivision surfaces have been used for fitting scattered data [6], and geometric compression and automatic level-of-detail generation using wavelets [8].
Reference: [10] <author> J. Schweitzer. </author> <title> Analysis and appliction of subdivision surfaces. </title> <type> PhD thesis, </type> <institution> Department of Computer Science and Engineering, Univ. of Washington (in preparation), </institution> <year> 1996. </year>
Reference: [11] <author> K. Weiler. </author> <title> Edge-based data structures for solid modeling in curved-surface environments. </title> <journal> IEEE CG&A, </journal> <volume> 5(1) </volume> <pages> 21-40, </pages> <month> January </month> <year> 1985. </year> <note> 1 Formulas from [6], except for conical vertices from [10]. </note>
Reference-contexts: The patches are stored so that after partitioning the host need only consult a cache and send the precomputed messages to the GEs to render more frames. We have implemented the control mesh in the host as a half-edge data structure similar to ones described in <ref> [11] </ref>. Although such a data structure is needed to describe an arbitrary control mesh, we can use a simpler data structure to describe the regular surface regions between the original control points.
References-found: 11

