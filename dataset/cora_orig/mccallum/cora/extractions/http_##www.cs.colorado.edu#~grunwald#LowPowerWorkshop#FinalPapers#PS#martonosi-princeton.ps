URL: http://www.cs.colorado.edu/~grunwald/LowPowerWorkshop/FinalPapers/PS/martonosi-princeton.ps
Refering-URL: http://www.cs.colorado.edu/~grunwald/LowPowerWorkshop/agenda.html
Root-URL: http://www.cs.colorado.edu
Email: Contact: martonosi@princeton.edu  
Title: Power-Aware Architecture Studies: Ongoing Work at Princeton  
Author: Christina Leung, David Brooks, Margaret Martonosi, and Douglas W. Clark* 
Address: Princeton University  
Affiliation: Depts. of Electrical Engineering and Computer Science*  
Abstract: Our work seeks to address these issues in two main ways. First, we are developing a suite of high-level modeling tools that allow architects to manipulate designs and compare power tradeoffs in a manner similar to current performance-oriented architecture studies. In this paper we discuss the status of the work and our observations on how the needs of power modelling affect the simulator speed and structure. Second, we are harnessing parts of this infrastructure to evaluate a technique for aggressively clock-gating arithmetic units in response to observed operand values. We find that many operand values in current programs are much smaller than the actual word width of the machines. As a result, dynamic techniques for adjusting functional unit width to match operand width are promising for reducing power consumption in these units. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Burger and T. M. Austin. </author> <title> The SimpleScalar Tool Set, Version 2.0. </title> <booktitle> Computer Architecture News, </booktitle> <pages> pages 13-25, </pages> <month> June </month> <year> 1997. </year>
Reference-contexts: To first order, such estimates are useful, but as power issues become more important, more careful area analyses and resulting power tradeoffs are warranted. With this in mind, we are building modeling infrastructure that supports power analyses at the architectural level. Using the SimpleScalar toolset as a starting point <ref> [2, 1] </ref>, we have built expanded modules that include power models and rudimentary power accounting. 2.1 Cache Power Models We have begun this effort by modifying SimpleScalar's cache model to account for power dissipation.
Reference: [2] <author> D. Burger, T. M. Austin, and S. Bennett. </author> <title> Evaluating Future Microprocessors: the SimpleScalar Tool Set. </title> <type> Technical Report TR-1308, </type> <institution> University of Wisconsin-Madison Computer Sciences Department, </institution> <month> July </month> <year> 1996. </year>
Reference-contexts: To first order, such estimates are useful, but as power issues become more important, more careful area analyses and resulting power tradeoffs are warranted. With this in mind, we are building modeling infrastructure that supports power analyses at the architectural level. Using the SimpleScalar toolset as a starting point <ref> [2, 1] </ref>, we have built expanded modules that include power models and rudimentary power accounting. 2.1 Cache Power Models We have begun this effort by modifying SimpleScalar's cache model to account for power dissipation.
Reference: [3] <author> P. Landman. </author> <title> High-level power estimation. </title> <booktitle> In International Symposium on Low-Power Electronics and Design, </booktitle> <pages> pages 29-35, </pages> <month> August </month> <year> 1996. </year>
Reference: [4] <author> D. Liu and C. Svensson. </author> <title> Power consumption estimation in CMOS VLSI chips. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <pages> pages 663-670, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: Another possible approach in developing architectural-level power models is to follow Liu and Svensson <ref> [4] </ref>, who refined a coarse complexity-based model (power follows the number of gate-equivalents) into a set of specialized and more accurate models. They built special parameterized models for logic, memory, interconnect, and clock distribution, and then validated these against published information on the Digital Alpha 21064 and the Intel 80386.
Reference: [5] <author> Ching-Long Su and Alvin M. Despain. </author> <title> Cache design trade-offs for power and performance optimization: A case study. </title> <booktitle> In International Symposium on Low-Power Design, </booktitle> <pages> pages 63-68, </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: In particular, we started by incorporating a cache power model first described in the literature by Su and Despain <ref> [5] </ref>. This model considers the cache in terms of three primary modules: the address decoding path, the cell array in which the data is stored, and the data I/O path by which data enters or leaves the cache.
Reference: [6] <author> V. Tiwari, S. Malik, and A. Wolfe. </author> <title> Compilation techniques for low energy: An overview. </title> <booktitle> In Proc. Symp. on Low Power Electronics, </booktitle> <month> October </month> <year> 1994. </year>
Reference: [7] <author> V. Tiwari, S. Malik, and A. Wolfe. </author> <title> Power analysis of embedded software: A first step towards software power minimization. </title> <journal> IEEE Transactions on VLSI Systems, </journal> <volume> 2(4) </volume> <pages> 437-445, </pages> <month> December </month> <year> 1994. </year>
Reference: [8] <author> V. Tiwari, S. Malik, and A. Wolfe. </author> <title> Power analysis of embedded software: A first step towards software power minimization. </title> <journal> IEEE Transactions on VLSI Systems, </journal> <volume> 2(4) </volume> <pages> 437-445, </pages> <month> December </month> <year> 1994. </year>
References-found: 8

