URL: http://www.cs.yale.edu/HTML/YALE/CS/HyPlans/fu-bin/Papers/C97.ps
Refering-URL: http://www.cs.yale.edu/HTML/YALE/CS/HyPlans/fu-bin/research.html
Root-URL: http://www.cs.yale.edu
Title: Circuits Over PP and PL  
Author: Richard Beigel Bin Fu 
Keyword: log 2 n= log log n-T BF PP PrTIME(n O(log n)  
Address: 1996-97. Address:  College Park, College Park, MD  Email:  
Note: k 6= NC PP A k+1 for all integers k  Because P PP log 2 n= log log n-T 6 PP relative to an ora Both authors are visiting the  20742-3251. Research supported in part by the National Science Foundation under grants CCR-8958528 and CCR-9415410. Also supported in part by NASA under grant NAG  
Affiliation: Yale University University of Maryland  University of Maryland Dept. of Computer and UMIACS for  Dept. of Computer Science, University of Maryland at  Department of Computer Science, Yale University, New Haven,CT06520 and UMIACS, University of Maryland.  
Email: Email: beigel@cs.umd.edu  fu-bin@cs.yale.edu  
Phone: 52895.  
Date: 1.  
Abstract: Wilson's [19] model of oracle gates provides a framework for considering reductions whose strength is intermediate between truth-table and Turing. Improving on a stream of results by Beigel, Reingold, Spielman, Fortnow, and Ogi-hara [6, 9, 14], we prove that PL and PP are closed under NC 1 reductions. This answers an open problem of Ogihara [14]. More generally, we show that NC PP k and NC PL k for all k 0. On the other hand, we construct an oracle A such that NC PP A Slightly weaker than NC 1 reductions are Boolean formula reductions. We ask whether PL and PP are closed under Boolean formula reductions. This is a nontrivial question despite NC 1 = BF, because that equality is easily seen not to relativize. We prove that P PP cle, we think it is unlikely that PP is closed under Boolean formula reductions. We also show that PL is unlikely to be closed under BF reductions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Allender and M. Ogihara. </author> <title> Relationships among PL, #P, and the determinant. </title> <booktitle> In Proceedings of the 9th Annual Conference on Structure in Complexity Theory, </booktitle> <pages> pages 267-278, </pages> <year> 1994. </year>
Reference-contexts: PP plays a very important role in complexity theory. It is closely related to the polynomial-time hierarchy. Toda [18] showed that PH P PP . PL was introduced by Gill [10] as the logarithmic analogue of PP. PL was studied in <ref> [16, 7, 12, 1, 14] </ref>. Allender and Ogihara [1] proved that PL is closed under logspace conjunctive reductions and under logspace disjunctive reductions. Ogihara [14] then proved that PL is closed under probabilistic logspace-Turing reductions and even under AC 0 reductions. <p> PP plays a very important role in complexity theory. It is closely related to the polynomial-time hierarchy. Toda [18] showed that PH P PP . PL was introduced by Gill [10] as the logarithmic analogue of PP. PL was studied in [16, 7, 12, 1, 14]. Allender and Ogihara <ref> [1] </ref> proved that PL is closed under logspace conjunctive reductions and under logspace disjunctive reductions. Ogihara [14] then proved that PL is closed under probabilistic logspace-Turing reductions and even under AC 0 reductions.
Reference: [2] <author> J. Aspnes, R. Beigel, M. Furst, and S. Rudich. </author> <title> The expressive power of voting polynomials. </title> <booktitle> In Proceedings of the 23rd Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 402-409, </pages> <year> 1991. </year>
Reference-contexts: Theorem 59. Assume function f : N ! N satisfies f (n) = n O (1) and f (n) 6= O (log T (n)), there exists an oracle A such that Parity A 2 f (n) 6 PrTIME (T (n)) A . Proof: The following lemma is from <ref> [2] </ref>. Lemma 60. Every perceptron computing parity n must have order at least cn, where c is a positive constant. Lemma 61.
Reference: [3] <author> R. Beigel. </author> <title> Perceptrons, PP, and the polynomial hierarchy. </title> <booktitle> In Proceedings of the 7th Annual Conference on Structure in Complexity Theory, </booktitle> <pages> pages 14-19, </pages> <year> 1992. </year>
Reference-contexts: However, it appears that BF PP is too large to be equal to PP, because of the following lower bound which we prove: P PP Therefore, Beigel's oracle A from <ref> [3] </ref>, which makes 1 P NP A log n log log n-T 6 PP A , also makes BF PP A Thus the answer to whether PP is closed under Boolean formula reductions will require nonrela-tivizing techniques.
Reference: [4] <author> R. Beigel. </author> <title> When do extra majority gates help? polylog(n) majority gates are equivalent to one. </title> <journal> Comp. Complexity, </journal> <volume> 4 </volume> <pages> 314-324, </pages> <year> 1994. </year> <note> Special issue devoted to the 4th Annual McGill Workshop on Complexity Theory. </note>
Reference-contexts: The following lemma follows from the Defini tion 13. Lemma 23. If p (x 1 ; : : : ; x k ) is a (s; t)-tractable poly nomial, then deg (p) k and norm (p) 2 k+t . The following lemma follows from the works in <ref> [6, 4, 9, 14] </ref> Lemma 24.
Reference: [5] <author> R. Beigel, L. A. Hemachandra, and G. Wech-sung. </author> <title> On the power of probabilistic polynomial time: P NP[log] PP. </title> <booktitle> In Proceedings of the 4th Annual Conference on Structure in Complexity Theory, </booktitle> <pages> pages 225-227, </pages> <month> June </month> <year> 1989. </year> <note> A revised version appears in Information Processing Letters. </note>
Reference-contexts: The class PP was introduced by Gill [10] and independently by Simon [17]. There have been many papers about closure properties of PP. Russo [15] proved that PP is closed under symmetric difference. Beigel, Hemachandra and Wechsung <ref> [5] </ref> proved that PP is closed under polynomial-time parity reductions. Beigel, Reingold and Spielman [6] proved that PP is closed under P log n-T -reductions. Fortnow and Reingold [9] proved that PP is closed under P tt - reductions and even under bounded-rounds-truth table reductions.
Reference: [6] <author> R. Beigel, N. Reingold, and D. Spielman. </author> <title> PP is closed under intersection. </title> <journal> JCSS, </journal> <volume> 50(2) </volume> <pages> 191-202, </pages> <year> 1995. </year>
Reference-contexts: There have been many papers about closure properties of PP. Russo [15] proved that PP is closed under symmetric difference. Beigel, Hemachandra and Wechsung [5] proved that PP is closed under polynomial-time parity reductions. Beigel, Reingold and Spielman <ref> [6] </ref> proved that PP is closed under P log n-T -reductions. Fortnow and Reingold [9] proved that PP is closed under P tt - reductions and even under bounded-rounds-truth table reductions. PP plays a very important role in complexity theory. It is closely related to the polynomial-time hierarchy. <p> PP and PL are closed under NC 1 Re ductions In this section we show that PL and PP are closed under NC 1 -reductions. We use the rational function method of <ref> [6] </ref>. That is, we show how to construct a low-degree rational approximation to any function in NC PP 1 . We assume all polynomials in this section are integer coefficients polynomials. 3.1. Rational Functions The following two lemmas can be verified by straightforward simulating the method in [8]. Lemma 17. <p> The following lemma follows from the Defini tion 13. Lemma 23. If p (x 1 ; : : : ; x k ) is a (s; t)-tractable poly nomial, then deg (p) k and norm (p) 2 k+t . The following lemma follows from the works in <ref> [6, 4, 9, 14] </ref> Lemma 24. <p> This implies that B 2 PrTIME (2 O (log k n) ) as in <ref> [6] </ref>. Corollary 29. PP is closed under NC 1 -reductions. Note: If P C, then P C tt NC C 1 (because we can use one gate to evaluate the truth table). Proposition 30.
Reference: [7] <author> A. Borodin, S. Cook, and N. Pippenger. </author> <title> Parallel computation for well-endowed rings and space bounded probabilistic machines. </title> <journal> Information and Computation, </journal> <volume> 58 </volume> <pages> 113-136, </pages> <year> 1983. </year>
Reference-contexts: PP plays a very important role in complexity theory. It is closely related to the polynomial-time hierarchy. Toda [18] showed that PH P PP . PL was introduced by Gill [10] as the logarithmic analogue of PP. PL was studied in <ref> [16, 7, 12, 1, 14] </ref>. Allender and Ogihara [1] proved that PL is closed under logspace conjunctive reductions and under logspace disjunctive reductions. Ogihara [14] then proved that PL is closed under probabilistic logspace-Turing reductions and even under AC 0 reductions.
Reference: [8] <author> S. Fenner, L. Fortnow, and S. Kurtz. </author> <title> Gap-definable counting classes. </title> <booktitle> In Proceedings of the 6th Annual Conference on Structure in Complexity Theory, </booktitle> <pages> pages 30-42. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1991. </year>
Reference-contexts: P C f (n)-T is the class of languages A such that for some B in C, A P T B via M and M makes no more than f (n) queries on any input of length n. The GAP function was introduced by Fenner, Fortnow and Kurtz <ref> [8] </ref>. Definition 9. * Let M be a NTM. acc M (x) is the number of accepting paths of M on input x. rej M (x) is the number of rejecting paths of M on input x. <p> That is, we show how to construct a low-degree rational approximation to any function in NC PP 1 . We assume all polynomials in this section are integer coefficients polynomials. 3.1. Rational Functions The following two lemmas can be verified by straightforward simulating the method in <ref> [8] </ref>. Lemma 17. Let f 1 be (s 1 ; t 1 )-generatable, f 2 be (s 2 ; t 2 )-generatable, and c 1 be a constant. <p> Proof: We will construct a NTM to generate g (x). The method is from <ref> [8, 14] </ref>. Let M 1 be a (s 1 ; t 1 )- NTM to generate f hi;a i i (x). Let M 2 be a (s 2 ; t 2 )- DTM to compute C (y; a 1 : : : a k ). <p> acc M 1 (0 hi;a i i ; x) rej M 1 (0 hi;a i i ; x), it is easy to see that g (x) is (s 1 + s 2 + c log k; k c t 1 + t 2 )-generatable by M (For more details, see <ref> [8, 14] </ref>). Lemma 20. Let M be a (s; t)-NTM.
Reference: [9] <author> L. Fortnow and N. Reingold. </author> <title> PP is closed under truth-table reductions. </title> <journal> Inf. & Comp., </journal> <volume> 124(1) </volume> <pages> 1-6, </pages> <month> Jan. </month> <year> 1996. </year>
Reference-contexts: Russo [15] proved that PP is closed under symmetric difference. Beigel, Hemachandra and Wechsung [5] proved that PP is closed under polynomial-time parity reductions. Beigel, Reingold and Spielman [6] proved that PP is closed under P log n-T -reductions. Fortnow and Reingold <ref> [9] </ref> proved that PP is closed under P tt - reductions and even under bounded-rounds-truth table reductions. PP plays a very important role in complexity theory. It is closely related to the polynomial-time hierarchy. Toda [18] showed that PH P PP . <p> The following lemma follows from the Defini tion 13. Lemma 23. If p (x 1 ; : : : ; x k ) is a (s; t)-tractable poly nomial, then deg (p) k and norm (p) 2 k+t . The following lemma follows from the works in <ref> [6, 4, 9, 14] </ref> Lemma 24. <p> Corollary 29. PP is closed under NC 1 -reductions. Note: If P C, then P C tt NC C 1 (because we can use one gate to evaluate the truth table). Proposition 30. Every language bounded-rounds reducible to C in the sense of Fortnow and Rein-gold <ref> [9] </ref> belongs to AC C 0 . Thus, Theorem 28 generalizes their results that PP is closed under P tt reductions and under bounded-rounds reductions. Theorem 31. NC PL k PrSPACE (O (log k n)).
Reference: [10] <author> J. Gill. </author> <title> Computational complexity of probabilistic Turing machines. </title> <journal> SICOMP, </journal> <volume> 6 </volume> <pages> 675-695, </pages> <year> 1977. </year>
Reference-contexts: 1. Introduction Probabilistic computational classes have received a lot of attention in recent years. The class PP was introduced by Gill <ref> [10] </ref> and independently by Simon [17]. There have been many papers about closure properties of PP. Russo [15] proved that PP is closed under symmetric difference. Beigel, Hemachandra and Wechsung [5] proved that PP is closed under polynomial-time parity reductions. <p> PP plays a very important role in complexity theory. It is closely related to the polynomial-time hierarchy. Toda [18] showed that PH P PP . PL was introduced by Gill <ref> [10] </ref> as the logarithmic analogue of PP. PL was studied in [16, 7, 12, 1, 14]. Allender and Ogihara [1] proved that PL is closed under logspace conjunctive reductions and under logspace disjunctive reductions.
Reference: [11] <author> G. Gottlob. </author> <title> NP trees and Carnap's modal logic. </title> <booktitle> In Proceedings of the 34th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1993. </year>
Reference-contexts: Boolean-formula (BF) reductions are next in strength after NC 1 reductions and it is known, for example, that NC NP 1 = BF NP <ref> [11] </ref>, so we ask whether PP and PL are closed under Boolean formula reductions. <p> Convert each slice to a collec tion of AC 0 circuit. Corollary 34. NC PP k+1 = AC PP Corollary 35. NC PL k+1 = AC PL By Gottlob's work <ref> [11] </ref>, We know that BF NP = AC NP 0 . This implies NC NP 1 = AC NP Corollary 36 (Ogihara [13]). NC NP k+1 = AC NP 4.
Reference: [12] <author> H. Jung. </author> <title> On probablistic time and space. </title> <booktitle> In LNCS194, </booktitle> <pages> pages 310-317. </pages> <publisher> Springer-Verlag, </publisher> <year> 1985. </year>
Reference-contexts: PP plays a very important role in complexity theory. It is closely related to the polynomial-time hierarchy. Toda [18] showed that PH P PP . PL was introduced by Gill [10] as the logarithmic analogue of PP. PL was studied in <ref> [16, 7, 12, 1, 14] </ref>. Allender and Ogihara [1] proved that PL is closed under logspace conjunctive reductions and under logspace disjunctive reductions. Ogihara [14] then proved that PL is closed under probabilistic logspace-Turing reductions and even under AC 0 reductions.
Reference: [13] <author> M. </author> <title> Ogihara. </title> <booktitle> NC NP k+1 = AC NP k . In Proceedings of the 11th Annual Symposium on Theoretical Aspects of Computer Science, </booktitle> <year> 1994. </year>
Reference-contexts: Corollary 34. NC PP k+1 = AC PP Corollary 35. NC PL k+1 = AC PL By Gottlob's work [11], We know that BF NP = AC NP 0 . This implies NC NP 1 = AC NP Corollary 36 (Ogihara <ref> [13] </ref>). NC NP k+1 = AC NP 4. Boolean Formula Reductions to PP In this section we will show that relativizable methods cannot determine whether PP is closed under BF-reductions. It is still open whether PL is closed under BF-reductions relative to all oracles. Definition 37.
Reference: [14] <author> M. Ogihara. </author> <title> The PL hierarchy collapses. </title> <booktitle> In Proceedings of the 37th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1996. </year>
Reference-contexts: PP plays a very important role in complexity theory. It is closely related to the polynomial-time hierarchy. Toda [18] showed that PH P PP . PL was introduced by Gill [10] as the logarithmic analogue of PP. PL was studied in <ref> [16, 7, 12, 1, 14] </ref>. Allender and Ogihara [1] proved that PL is closed under logspace conjunctive reductions and under logspace disjunctive reductions. Ogihara [14] then proved that PL is closed under probabilistic logspace-Turing reductions and even under AC 0 reductions. <p> Toda [18] showed that PH P PP . PL was introduced by Gill [10] as the logarithmic analogue of PP. PL was studied in [16, 7, 12, 1, 14]. Allender and Ogihara [1] proved that PL is closed under logspace conjunctive reductions and under logspace disjunctive reductions. Ogihara <ref> [14] </ref> then proved that PL is closed under probabilistic logspace-Turing reductions and even under AC 0 reductions. In this paper we prove even stronger closure properties for PP and PL, namely, both classes are closed under NC 1 reductions as defined by Wil-son [19]. <p> Proof: We will construct a NTM to generate g (x). The method is from <ref> [8, 14] </ref>. Let M 1 be a (s 1 ; t 1 )- NTM to generate f hi;a i i (x). Let M 2 be a (s 2 ; t 2 )- DTM to compute C (y; a 1 : : : a k ). <p> acc M 1 (0 hi;a i i ; x) rej M 1 (0 hi;a i i ; x), it is easy to see that g (x) is (s 1 + s 2 + c log k; k c t 1 + t 2 )-generatable by M (For more details, see <ref> [8, 14] </ref>). Lemma 20. Let M be a (s; t)-NTM. <p> The following lemma follows from the Defini tion 13. Lemma 23. If p (x 1 ; : : : ; x k ) is a (s; t)-tractable poly nomial, then deg (p) k and norm (p) 2 k+t . The following lemma follows from the works in <ref> [6, 4, 9, 14] </ref> Lemma 24.
Reference: [15] <author> D. A. Russo. </author> <title> Structural Properties of Com plexity Classes. </title> <type> PhD thesis, </type> <institution> University of Cal-ifornia at Santa Barbara, </institution> <month> Mar. </month> <year> 1985. </year>
Reference-contexts: 1. Introduction Probabilistic computational classes have received a lot of attention in recent years. The class PP was introduced by Gill [10] and independently by Simon [17]. There have been many papers about closure properties of PP. Russo <ref> [15] </ref> proved that PP is closed under symmetric difference. Beigel, Hemachandra and Wechsung [5] proved that PP is closed under polynomial-time parity reductions. Beigel, Reingold and Spielman [6] proved that PP is closed under P log n-T -reductions.
Reference: [16] <author> W. Ruzzo, J. Simon, and M. Tompa. </author> <title> Space bounded hierarchies and probabilistic computations. </title> <journal> JCSS, </journal> <volume> 28 </volume> <pages> 216-230, </pages> <year> 1982. </year>
Reference-contexts: PP plays a very important role in complexity theory. It is closely related to the polynomial-time hierarchy. Toda [18] showed that PH P PP . PL was introduced by Gill [10] as the logarithmic analogue of PP. PL was studied in <ref> [16, 7, 12, 1, 14] </ref>. Allender and Ogihara [1] proved that PL is closed under logspace conjunctive reductions and under logspace disjunctive reductions. Ogihara [14] then proved that PL is closed under probabilistic logspace-Turing reductions and even under AC 0 reductions.
Reference: [17] <author> J. Simon. </author> <title> On Some Central Problems In Computational Complexity. </title> <type> PhD thesis, </type> <institution> Cornell University, </institution> <address> Ithaca, New York, </address> <year> 1975. </year> <institution> Dept. of Computer Science, </institution> <type> TR 75-224. </type>
Reference-contexts: 1. Introduction Probabilistic computational classes have received a lot of attention in recent years. The class PP was introduced by Gill [10] and independently by Simon <ref> [17] </ref>. There have been many papers about closure properties of PP. Russo [15] proved that PP is closed under symmetric difference. Beigel, Hemachandra and Wechsung [5] proved that PP is closed under polynomial-time parity reductions. Beigel, Reingold and Spielman [6] proved that PP is closed under P log n-T -reductions.
Reference: [18] <author> S. </author> <title> Toda. PP is as hard as the polynomial-time hierarchy. </title> <journal> SICOMP, </journal> <volume> 20(5) </volume> <pages> 865-877, </pages> <year> 1991. </year>
Reference-contexts: Fortnow and Reingold [9] proved that PP is closed under P tt - reductions and even under bounded-rounds-truth table reductions. PP plays a very important role in complexity theory. It is closely related to the polynomial-time hierarchy. Toda <ref> [18] </ref> showed that PH P PP . PL was introduced by Gill [10] as the logarithmic analogue of PP. PL was studied in [16, 7, 12, 1, 14]. Allender and Ogihara [1] proved that PL is closed under logspace conjunctive reductions and under logspace disjunctive reductions.
Reference: [19] <author> C. B. Wilson. </author> <title> Relativized circuit complexity. </title> <journal> JCSS, </journal> <volume> 31(2) </volume> <pages> 169-181, </pages> <month> Oct. </month> <year> 1985. </year>
Reference-contexts: Ogihara [14] then proved that PL is closed under probabilistic logspace-Turing reductions and even under AC 0 reductions. In this paper we prove even stronger closure properties for PP and PL, namely, both classes are closed under NC 1 reductions as defined by Wil-son <ref> [19] </ref>. Boolean-formula (BF) reductions are next in strength after NC 1 reductions and it is known, for example, that NC NP 1 = BF NP [11], so we ask whether PP and PL are closed under Boolean formula reductions. <p> Definitions Wilson <ref> [19] </ref> defined oracle circuits as follows. Definition 1. Let A be a language. An A-gate is a k-input, one-output gate which, on an input x of length k, will produce the value 1 on its output edge if and only if x 2 A.
References-found: 19

