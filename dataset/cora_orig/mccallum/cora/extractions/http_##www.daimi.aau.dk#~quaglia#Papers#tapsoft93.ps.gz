URL: http://www.daimi.aau.dk/~quaglia/Papers/tapsoft93.ps.gz
Refering-URL: http://www.daimi.aau.dk/~quaglia/papers.html
Root-URL: http://www.daimi.aau.dk
Email: email: latella@fdt.cnuce.cnr.it  email: quaglia@di.unipi.it  
Title: A Fully Parallel Calculus of Synchronizing Processes  
Author: Diego Latella Paola Quaglia 
Date: 732-745, 1993  
Note: In: Proc. TAPSOFT '93, LNCS 668, pp.  
Address: Pisa,  Pisa,  
Affiliation: CNR Ist. CNUCE,  Dip. di Informatica, Universita degli Studi di  
Abstract: We propose a fully parallel calculus of synchronizing processes. The calculus was deeply inspired by LOTOS, of which it inherits multi-party synchronization in process parallel composition. On the other hand, its semantics is not interleaving whereas LOTOS one is. The model we propose is somehow in between Milner's SCCS and ASCCS in that independent actions are performed simultaneously, whereas synchronization is achieved by means of delay. Also, delay is controlled in the sense that no process can delay an action if the environment allows that action to be performed. The calculus we propose here was originally designed as a first step towards a probabilistic one. Nevertheless we think that the pure version of the calculus has some features which are interesting on their own. As an example we use it to describe a quite simple system which may be thought of as a possible fault tolerant architecture for a hardware component. We also provide a set of equational laws based on a notion of strong bisimu-lation. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> S.D. Brookes, </author> <title> C.A.R. Hoare, A.W. Roscoe. A Theory of Communicating Sequential Processes. </title> <journal> Journal of the ACM, Vol.31, </journal> <volume> No.3, </volume> <pages> pp. 560-599, </pages> <year> 1984. </year>
Reference-contexts: All the proposals for probabilistic process calculi mentioned above do not allow for multi-party synchronization, which is a main feature of CSP <ref> [1] </ref> and LOTOS [7] and is essential for modeling multi-/broad-casting. The only proposals for dealing with multi-party synchronization for probabilistic processes we know about are [3, 20].
Reference: 2. <author> I. Christoff. </author> <title> Testing Equivalences and Fully Abstract Models for Probabilistic Processes. </title> <booktitle> CONCUR 90, </booktitle> <publisher> LNCS 458, Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: 1 Introduction In this paper we present a fully parallel calculus of synchronizing processes. The calculus was originally designed as a first step towards a probabilistic one [11]. Several probabilistic models have been proposed in the literature <ref> [2, 4, 5, 6, 8, 13, 18, 21, 22] </ref>. They are derived mostly from SCCS [15] which, contrary to CCS [14], has a non-interleaving semantics.
Reference: 3. <author> I. Christoff. </author> <title> Testing Equivalences for Probabilistic Processes. </title> <type> Ph. D. Thesis, </type> <institution> Dept. of Comp. Science, Uppsala Univ., </institution> <address> ISSN 0283-0574, </address> <year> 1990. </year>
Reference-contexts: All the proposals for probabilistic process calculi mentioned above do not allow for multi-party synchronization, which is a main feature of CSP [1] and LOTOS [7] and is essential for modeling multi-/broad-casting. The only proposals for dealing with multi-party synchronization for probabilistic processes we know about are <ref> [3, 20] </ref>. Anyway they both are based on interleaving semantics and force to assign the same (fictitious!) probability to all transitions of branches generated by parallel expressions.
Reference: 4. <author> A. Giacalone, C.C. Jou, S.A. Smolka. </author> <title> Algebraic reasoning for probabilistic concurrent systems. </title> <booktitle> Proc. of Working Conference on Programming Concept and Methods IFIP TC 2, </booktitle> <year> 1990. </year>
Reference-contexts: 1 Introduction In this paper we present a fully parallel calculus of synchronizing processes. The calculus was originally designed as a first step towards a probabilistic one [11]. Several probabilistic models have been proposed in the literature <ref> [2, 4, 5, 6, 8, 13, 18, 21, 22] </ref>. They are derived mostly from SCCS [15] which, contrary to CCS [14], has a non-interleaving semantics.
Reference: 5. <author> R. van Glabbeek, S.A. Smolka, B. Steffen, C. Tofts. </author> <title> Reactive, Generative and Stratified Models of Probabilistic Processes. </title> <booktitle> Proc. of 5th LICS, </booktitle> <year> 1990. </year>
Reference-contexts: 1 Introduction In this paper we present a fully parallel calculus of synchronizing processes. The calculus was originally designed as a first step towards a probabilistic one [11]. Several probabilistic models have been proposed in the literature <ref> [2, 4, 5, 6, 8, 13, 18, 21, 22] </ref>. They are derived mostly from SCCS [15] which, contrary to CCS [14], has a non-interleaving semantics.
Reference: 6. <author> H. Hansson, B. Jonsson. </author> <title> A Calculus for Communicating Systems with Time and Probabilities. </title> <journal> IEEE RTSS, </journal> <year> 1990. </year>
Reference-contexts: 1 Introduction In this paper we present a fully parallel calculus of synchronizing processes. The calculus was originally designed as a first step towards a probabilistic one [11]. Several probabilistic models have been proposed in the literature <ref> [2, 4, 5, 6, 8, 13, 18, 21, 22] </ref>. They are derived mostly from SCCS [15] which, contrary to CCS [14], has a non-interleaving semantics.
Reference: 7. <author> ISO. </author> <title> Information processing systems Open systems interconnection - LOTOS A formal description technique based on the temporal ordering of observational behaviour. </title> <type> ISO 8807, </type> <year> 1989. </year>
Reference-contexts: All the proposals for probabilistic process calculi mentioned above do not allow for multi-party synchronization, which is a main feature of CSP [1] and LOTOS <ref> [7] </ref> and is essential for modeling multi-/broad-casting. The only proposals for dealing with multi-party synchronization for probabilistic processes we know about are [3, 20]. Anyway they both are based on interleaving semantics and force to assign the same (fictitious!) probability to all transitions of branches generated by parallel expressions.
Reference: 8. <author> C.C. Jou, S.A. Smolka. </author> <title> Equivalences, congruences and complete axiomatizations for probabilistic processes. </title> <booktitle> CONCUR 90, </booktitle> <publisher> LNCS 458, Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: 1 Introduction In this paper we present a fully parallel calculus of synchronizing processes. The calculus was originally designed as a first step towards a probabilistic one [11]. Several probabilistic models have been proposed in the literature <ref> [2, 4, 5, 6, 8, 13, 18, 21, 22] </ref>. They are derived mostly from SCCS [15] which, contrary to CCS [14], has a non-interleaving semantics.
Reference: 9. <author> J. Keilson. </author> <title> Markov Chain Models-Rarity and Exponentiality. </title> <journal> Applied Mathematical Sciences, </journal> <volume> Vol.28, </volume> <publisher> Springer-Verlag, </publisher> <year> 1979. </year>
Reference: 10. <author> D. Latella, P. Quaglia. </author> <title> A fully parallel semantics for LOTOS. LotoSphere reference Lo/WP1/T1.2/CNUCE/N0023/V1, </title> <year> 1991. </year>
Reference-contexts: Also, B ! is a shorthand for 9B 0 : B ff 1 The reader interested in the whole calculus is referred to [11]. 2 A first, simpler, version of this semantics is presented in <ref> [10] </ref>, there it is also shown that such a simple version is indeed unable to express external nondeterminism. (st) stop ffgg ! stop (a1) ; B ffgg ! B ; if 62 ffgg ! ; B ; if 2 ff ! B1 0 ; ff 62 ffgg + implies B1 [
Reference: 11. <author> D. Latella, P. Quaglia. </author> <title> A Proposal for a Calculus of Probabilistic Processes. Internal Report CNUCE-CNR C91-27, </title> <year> 1991. </year>
Reference-contexts: 1 Introduction In this paper we present a fully parallel calculus of synchronizing processes. The calculus was originally designed as a first step towards a probabilistic one <ref> [11] </ref>. Several probabilistic models have been proposed in the literature [2, 4, 5, 6, 8, 13, 18, 21, 22]. They are derived mostly from SCCS [15] which, contrary to CCS [14], has a non-interleaving semantics. <p> Also, B ! is a shorthand for 9B 0 : B ff 1 The reader interested in the whole calculus is referred to <ref> [11] </ref>. 2 A first, simpler, version of this semantics is presented in [10], there it is also shown that such a simple version is indeed unable to express external nondeterminism. (st) stop ffgg ! stop (a1) ; B ffgg ! B ; if 62 ffgg ! ; B ; if 2 <p> Anyway as we have already mentioned before, this work is a part of the definition of a probabilistic calculus <ref> [11] </ref> which can be considered as an extension of the language defined in this paper. In the complete work [12] also examples of applications as well as relation with Markov theory are presented.
Reference: 12. <author> D. Latella, P. Quaglia. </author> <title> A Calculus of Probabilistic Synchronizing Processes and Some Applications. Internal Report CNUCE-CNR C92-17, </title> <year> 1992. </year>
Reference-contexts: Anyway as we have already mentioned before, this work is a part of the definition of a probabilistic calculus [11] which can be considered as an extension of the language defined in this paper. In the complete work <ref> [12] </ref> also examples of applications as well as relation with Markov theory are presented. With respect to the pure nondeterministic calculus we can refine the definition of the proposed operational semantics in order to represent synchronization with only one occurrence of the gate (in a way similar to LOTOS).
Reference: 13. <author> K. G. Larsen, A. Skou. </author> <title> Bisimulation through probabilistic testing. </title> <booktitle> Proc. POPL, </booktitle> <year> 1989. </year>
Reference-contexts: 1 Introduction In this paper we present a fully parallel calculus of synchronizing processes. The calculus was originally designed as a first step towards a probabilistic one [11]. Several probabilistic models have been proposed in the literature <ref> [2, 4, 5, 6, 8, 13, 18, 21, 22] </ref>. They are derived mostly from SCCS [15] which, contrary to CCS [14], has a non-interleaving semantics.
Reference: 14. <author> R. Milner. </author> <title> A Calculus of Communicating Systems. </title> <publisher> LNCS 92, Springer-Verlag, </publisher> <year> 1980. </year>
Reference-contexts: The calculus was originally designed as a first step towards a probabilistic one [11]. Several probabilistic models have been proposed in the literature [2, 4, 5, 6, 8, 13, 18, 21, 22]. They are derived mostly from SCCS [15] which, contrary to CCS <ref> [14] </ref>, has a non-interleaving semantics. In fact, in order to reason about probabilistic systems, it is a crucial point to have a direct correspondence between choice operators in behaviour expressions and the branching structure of the transition systems those expressions denote. <p> Specification of process Comp 4 Strong Bisimulation Equivalence In the sequel we propose an adaptation of the notion of strong bisimulation equivalence <ref> [14, 16] </ref> to our model. In our calculus the minimal observational unit is the composite event, then: Definition 6.
Reference: 15. <author> R. Milner. </author> <title> Calculi for Synchrony and Asynchrony. </title> <journal> Theoretical Computer Science, </journal> <volume> 25(3), </volume> <year> 1983. </year>
Reference-contexts: The calculus was originally designed as a first step towards a probabilistic one [11]. Several probabilistic models have been proposed in the literature [2, 4, 5, 6, 8, 13, 18, 21, 22]. They are derived mostly from SCCS <ref> [15] </ref> which, contrary to CCS [14], has a non-interleaving semantics. In fact, in order to reason about probabilistic systems, it is a crucial point to have a direct correspondence between choice operators in behaviour expressions and the branching structure of the transition systems those expressions denote. <p> In the meanwhile, the process will be forced to idle. With this respect the model is similar to Milner's ASCCS <ref> [15] </ref> in that it does not force the specifier to explicitly insert idle actions in the specification in order to get the processes synchronized.
Reference: 16. <author> D. Park. </author> <title> Concurrency and automata on infinite sequences. </title> <booktitle> Proc. 5th GI-Conference, </booktitle> <publisher> LNCS 104, Springer-Verlag, </publisher> <year> 1981. </year>
Reference-contexts: Specification of process Comp 4 Strong Bisimulation Equivalence In the sequel we propose an adaptation of the notion of strong bisimulation equivalence <ref> [14, 16] </ref> to our model. In our calculus the minimal observational unit is the composite event, then: Definition 6.
Reference: 17. <author> G. D. Plotkin. </author> <title> A Structural Approach to Operational Semantics. </title> <type> Technical Report DAIMI-FN-19, </type> <institution> Comp. Science Dep., Aarhus University, </institution> <year> 1981. </year>
Reference-contexts: Moreover, for the sake of notational simplicity, we shall often let the same symbol denote both a multiset and the set of its elements, the intended meaning being clear from the context. 2 Operational Semantics We define the operational semantics <ref> [17] </ref> of the fully parallel calculus by means of an auxiliary set of axioms and deduction rules (Fig.1) 2 which define the relations ! . Let BE be the set of the behaviour expressions; formally ! (BE fi E v fi BE) where is a finite subset of Gates.
Reference: 18. <author> S. Purushothaman, </author> <title> P.A. Subrahmanyam. Reasoning about probabilistic behavior in concurrent systems. </title> <journal> IEEE Trans. Software Engineering, </journal> <volume> Vol. </volume> <pages> SE-13, </pages> <address> N.6, pp.740-745, </address> <year> 1987. </year>
Reference-contexts: 1 Introduction In this paper we present a fully parallel calculus of synchronizing processes. The calculus was originally designed as a first step towards a probabilistic one [11]. Several probabilistic models have been proposed in the literature <ref> [2, 4, 5, 6, 8, 13, 18, 21, 22] </ref>. They are derived mostly from SCCS [15] which, contrary to CCS [14], has a non-interleaving semantics.
Reference: 19. <author> P. </author> <month> Quaglia. </month> <institution> Proposta per una variante probabilistica di LOTOS. Tesi di Laurea in Scienze dell'Informazione, Universita' degli Studi di Pisa, </institution> <year> 1991. </year>
Reference-contexts: (B2)). * Since B1jGjB2 cannot execute actions in Cant , in order to infer the behaviour of the parallel composition when delayed on , we take under consideration only the transitions of B1 and B2 when they are delayed (at least) on [ Cant (B1jGjB2). 3 It can be proved <ref> [19] </ref> that 8 2 Gates, if 2 Init (B) then 9ff 2 Ev : B ff 2 ff: Init (stop) = ; Init (; B) = fg n Init (B1 [ ]B2) = Init (B1) [ Init (B2) Init (B1jGjB2) = (Init (B1) " G " Init (B2)) [ (Init (B1) <p> = (ff2 " G) n ff1 ; fi1 ! Cant (B1jGjB2)[[ 1 ; B2 fi2 ! Cant (B1jGjB2)[[ 2 ; then B (B1; B2; G; ff1; ff2; fi1; fi2) = not Del (B1; G; ff2) and (fi1 ff1 [= 1] and fi2 ff2 [= 2] ) It can be proven <ref> [19] </ref> that if one of the three conditions Del (B1; G; ff2), Del ( B2; G; ff1), and B (B1; B2; G; ff1; ff2; fi1; fi2) is true then the others are false. <p> F is monotone and R is a strong bisimulation iff R F (R), therefore is the greatest fixed point of F under set inclusion. Moreover, in <ref> [19] </ref> the following lemmata have been proven: Lemma 8. The relation is a congruence. * Lemma 9. The following laws hold.
Reference: 20. <author> N. Rico, G.v. Bochmann. </author> <title> Performance description and analysis for distributed systems using a variant of LOTOS. </title> <booktitle> Proc. of XI Int. IFIP Symp. on Protocol Specification, Testing and Verification, </booktitle> <publisher> North Holland, </publisher> <year> 1991. </year>
Reference-contexts: All the proposals for probabilistic process calculi mentioned above do not allow for multi-party synchronization, which is a main feature of CSP [1] and LOTOS [7] and is essential for modeling multi-/broad-casting. The only proposals for dealing with multi-party synchronization for probabilistic processes we know about are <ref> [3, 20] </ref>. Anyway they both are based on interleaving semantics and force to assign the same (fictitious!) probability to all transitions of branches generated by parallel expressions.
Reference: 21. <author> S.A. Smolka, B. Steffen. </author> <title> Priority as extremal probability. </title> <booktitle> CONCUR 90, </booktitle> <publisher> LNCS 458, Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: 1 Introduction In this paper we present a fully parallel calculus of synchronizing processes. The calculus was originally designed as a first step towards a probabilistic one [11]. Several probabilistic models have been proposed in the literature <ref> [2, 4, 5, 6, 8, 13, 18, 21, 22] </ref>. They are derived mostly from SCCS [15] which, contrary to CCS [14], has a non-interleaving semantics.
Reference: 22. <author> C. Tofts. </author> <title> A synchronous calculus of relative frequency. </title> <booktitle> CONCUR 90, </booktitle> <publisher> LNCS 458, Springer-Verlag, </publisher> <year> 1990. </year> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: 1 Introduction In this paper we present a fully parallel calculus of synchronizing processes. The calculus was originally designed as a first step towards a probabilistic one [11]. Several probabilistic models have been proposed in the literature <ref> [2, 4, 5, 6, 8, 13, 18, 21, 22] </ref>. They are derived mostly from SCCS [15] which, contrary to CCS [14], has a non-interleaving semantics.
References-found: 22

