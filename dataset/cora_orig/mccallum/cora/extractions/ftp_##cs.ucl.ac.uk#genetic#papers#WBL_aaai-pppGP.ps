URL: ftp://cs.ucl.ac.uk/genetic/papers/WBL_aaai-pppGP.ps
Refering-URL: http://www.cs.bham.ac.uk/~wbl/biblio/gp-bibliography.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: Email: W.Langdon@cs.ucl.ac.uk  
Phone: Switchboard tel: +44 (0) 171 387 7050 xtn. 3701  Tel: +44 (0) 171 380 7214 Fax: +44 (0) 171 387 1397  
Title: Pareto, Population Partitioning, Price and Genetic Programming successful use of demic populations in GP leads
Author: W. B. Langdon, 
Date: 7 April 1995  
Note: Dept. Office  The  
Address: Gower Street, London WC1E 6BT, UK  
Affiliation: Dept. of Computer Science, University College London,  
Abstract: A description of a use of Pareto optimality in genetic programming is given and an analogy with Genetic Algorithm fitness niches is drawn. Techniques to either spread the population across many pareto optimal fitness values or to reduce the spread are described. It is speculated that a wide spread may not aid Genetic Programming. It is suggested that this might give useful insight into many GPs whose fitness is composed of several sub-objectives. 
Abstract-found: 1
Intro-found: 1
Reference: [AHU87] <author> A V Aho, J E Hopcroft, and J D Ullman. </author> <title> Data Structures and Algorithms. </title> <publisher> Addison-Wesley, </publisher> <year> 1987. </year>
Reference-contexts: Section 4 suggests some ways in which GP run times might be reduced. Having evolved stacks and queues data structures using genetic programming [Lan95], I am currently working on the evolution of list data structures. Aho etal <ref> [AHU87] </ref> define a list which supports ten different operations, whereas the stack and queue both support five. Each operation is a separate program tree within a composite individual and has its own fitness sub-score.
Reference: [Alt94] <author> Lee Altenberg. </author> <title> The evolution of evolvability in genetic programming. </title> <editor> In Kenneth E. Kinnear, Jr., editor, </editor> <booktitle> Advances in Genetic Programming. </booktitle> <publisher> MIT Press, </publisher> <year> 1994. </year>
Reference-contexts: Note this is exactly the opposite of GA niches or 3 fitness sharing, where the GA population is encouraged to become spread out (either in fitness or genotype space). 3 Price's Covariance Theorem Price's Selection and Covariance theorem [Pri70] was devised for application to biological evolution, however as Lee Altenberg <ref> [Alt94] </ref> has pointed out that it can be applied to Genetic Programming (indeed to any genetic algorithm or population based stochastic search technique where genes are passed at random to offspring in the next generation and the expected number of children allocated to each individual is proportional to its fitness).
Reference: [Fis58] <author> Ronald A. Fisher. </author> <title> The Genetical Theory of Natural Selection. </title> <publisher> Dover, </publisher> <year> 1958. </year> <note> Revision of first edition published 1930, OUP. </note>
Reference-contexts: So far it has not proved fruitful to use Fisher's theorem <ref> [Fis58] </ref> to relate this to the variance of fitness. 5 Conclusions There are techniques to control the spread of a genetic programming population between different, but equivalent, fitness values.
Reference: [Gol89] <author> David E. Goldberg. </author> <title> Genetic Algorithms in Search Optimization and Machine Learning. </title> <publisher> Addison Wesley, </publisher> <year> 1989. </year>
Reference-contexts: Aho etal [AHU87] define a list which supports ten different operations, whereas the stack and queue both support five. Each operation is a separate program tree within a composite individual and has its own fitness sub-score. Each sub-score is treated as a separate objective; pareto <ref> [Gol89] </ref> tournaments are used to select which individuals to breed from or remove from the population. The advantage of pareto comparison is it allows programs to be compared using multiple objectives, without forcing an arbitrary weighting of the objectives relative to each other.
Reference: [Han94] <author> S. Handley. </author> <title> On the use of a directed acyclic graph to represent a population of computer programs. </title> <booktitle> In Proceedings of the 1994 IEEE World Congress on Computational Intelligence. </booktitle> <publisher> IEEE Press, </publisher> <year> 1994. </year>
Reference-contexts: Another approach is to extend the syntax of the GP language and require the push program tree to include those primitives which are known to be required. 4 Reducing Fitness Evaluation Times As Handley <ref> [Han94] </ref> has demonstrated where the primitives are free from side effects considerable performance improvements can result from caching results produced by subtrees.
Reference: [Har92] <author> Inman Harvey. </author> <title> Species adaptation genetic algorithms: A basis for a continuing saga. </title> <editor> In F.J. Varela and P. Bourgine, editors, </editor> <booktitle> Toward a Practice of Autonomous Systems, Proceeding of the first European Conference on Artificial Life (ECAL), </booktitle> <pages> pages 346-354. </pages> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: However both myself [Lan95] and John Koza [KA95] report improved performance from geographically structuring the population into semi-isolated regions or demes. Inman Harvey suggests <ref> [Har92] </ref> that better results may be achieved with variable length (but still linear) GAs if crossover takes place primarily between individuals that are nearly the same length.
Reference: [HNG93] <author> Jeffrey Horn, Nicholas Nafpliotis, and David E. Goldberg. </author> <title> Multiobjective optimization using the niched pareto genetic algorithm. </title> <type> IlliGAL Report no. 93005, </type> <institution> Illinois Genetic Algorithm Laboratory, University of Illinois at Urbana-Champaign, 117 Transportation Building, </institution> <address> 104 South Mathews Avenue, Urbana, IL 61801-2296, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: Thus an individual which is dominated by few others will be ranked higher than one dominated by many. N.b. this exerts a divergent selection pressure on the population as individuals are preferred if there are few others that dominate them. Following <ref> [HNG93] </ref> the pareto rank is estimated by comparison with a sample of the population rather than all of it.
Reference: [KA95] <author> John R. Koza and David Andre. </author> <title> Parallel genetic programming on a network of transputers. </title> <type> Technical Report CS-TR-95-1542, </type> <institution> Stanford University, Department of Computer Science, </institution> <month> January </month> <year> 1995. </year>
Reference-contexts: However both myself [Lan95] and John Koza <ref> [KA95] </ref> report improved performance from geographically structuring the population into semi-isolated regions or demes. Inman Harvey suggests [Har92] that better results may be achieved with variable length (but still linear) GAs if crossover takes place primarily between individuals that are nearly the same length.
Reference: [Koz92] <author> John R. Koza. </author> <title> Genetic Programming: On the Programming of Computers by Natural Selection. </title> <publisher> MIT press, </publisher> <year> 1992. </year>
Reference-contexts: This need not be in machine code but could be in the GP language, albeit shorter. This is slightly different from edit <ref> [Koz92] </ref> as the compilation phase only speeds the execution of the program (i.e. the phenotype). The genetic material of the program is unchanged. It has been argued that GP obeys Holland's schema theorem with fit (parts of) programs spreading through the population.
Reference: [Lan95] <author> W. B. Langdon. </author> <title> Evolving data structures using genetic programming. Research Note RN/1/95, </title> <publisher> UCL, </publisher> <address> Gower Street, London, WC1E 6BT, </address> <month> January </month> <year> 1995. </year> <note> Accepted for presentation at ICGA-95. </note>
Reference-contexts: Section 4 suggests some ways in which GP run times might be reduced. Having evolved stacks and queues data structures using genetic programming <ref> [Lan95] </ref>, I am currently working on the evolution of list data structures. Aho etal [AHU87] define a list which supports ten different operations, whereas the stack and queue both support five. Each operation is a separate program tree within a composite individual and has its own fitness sub-score. <p> However both myself <ref> [Lan95] </ref> and John Koza [KA95] report improved performance from geographically structuring the population into semi-isolated regions or demes. Inman Harvey suggests [Har92] that better results may be achieved with variable length (but still linear) GAs if crossover takes place primarily between individuals that are nearly the same length.
Reference: [OGC91] <author> Christopher K. Oei, David E. Goldberg, and Shau-Jin Chang. </author> <title> Tournament selection, niching, and the preservation of diversity. </title> <type> IlliGAL Report No. 91011, </type> <institution> University of Illinois at Urbana-Champaign, Urbana, </institution> <address> Il 61801, </address> <month> December </month> <year> 1991. </year>
Reference-contexts: As mentioned above, this non-monotonic behaviour is not unique to pareto selection but has been observed when using a scalar fitness function, when considering the individual components of this scalar. 1.1 Size of the Pareto Front to be a "niche". Oei etal <ref> [OGC91] </ref> considered linear GA's with complete generational replacement and state the "naive" use of tournament selection to spread a GA population across equally fit niches will cause the population to behave chaotically.
Reference: [Pri70] <author> George R. Price. </author> <title> Selection and covariance. </title> <journal> Nature, </journal> <volume> 227, August 1 </volume> <pages> 520-521, </pages> <year> 1970. </year> <month> 11 </month>
Reference-contexts: Note this is exactly the opposite of GA niches or 3 fitness sharing, where the GA population is encouraged to become spread out (either in fitness or genotype space). 3 Price's Covariance Theorem Price's Selection and Covariance theorem <ref> [Pri70] </ref> was devised for application to biological evolution, however as Lee Altenberg [Alt94] has pointed out that it can be applied to Genetic Programming (indeed to any genetic algorithm or population based stochastic search technique where genes are passed at random to offspring in the next generation and the expected number
References-found: 12

