URL: http://www.tu-chemnitz.de/~rsc/aaaiwspa.ps
Refering-URL: http://www.cs.unh.edu/ccc/ca/papers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: fstaudte, dilgerg@informatik.tu-chemnitz.de  
Title: Producing and Improving Time Tables by Means of Constraint and Multi-agent Systems  
Author: Kay Anke and Rainer Staudte and Werner Dilger 
Address: D-09107 Chemnitz, Germany  
Affiliation: Fakultat fur Informatik, Technische Universitat Chemnitz-Zwickau  
Abstract: This paper presents a method for solving a specific class of timetabling problems. The solution introduced here proceeds in two phases: the construction of a time table that generally is not optimal, and a subsequent improvement of the time table. The first phase was successful solved using constraint programming (finite domain), the second one was realized as a multi-agent system. Results of the proposed optimization process have been verified by data from a college time table. The language Oz served as programming language and the system DFKI-Oz as convenient implementation tool. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Scherf, A. </author> <year> 1996. </year> <title> Tabu Search Techniques for Large High-School Timetabling Problems. </title> <booktitle> In Proceedings of the Thirteenth National Conference on Artificial Intelligence and the Eighth Innovative Applications of Artificial Intelligence Conference, </booktitle> <editor> 363-368 Henz,M; and Wurtz, J. </editor> <year> 1996. </year> <title> Using Oz for College Time Tabling. The Practice and Theory of Automated Time Tabling. In Practice and Theory of Automated Time Tabling, </title> <note> 162-177 Dilger, </note> <author> W.; Staudte, R.; and Anke, K. </author> <year> 1995. </year> <title> Testing Oz Facilities in Distributed Problem Solving. </title> <booktitle> In WOz'95, International Workshop on Oz Programming, </booktitle> <pages> 45-49. </pages> <address> Martigny, Switzerland. </address>
Reference: <author> Anke, K. </author> <year> 1996a. </year> <title> Test der Programmiersprache Oz bei der Losung von Problemen der Kunstlichen Intelligenz. </title> <institution> Projektarbeit, Technische Universitat Chemnitz-Zwickau, Germany. </institution>
Reference-contexts: Constraints The problem to construct a time table where for all subjects the assignments have been made was specified about two years ago (Dilger et al. 1995) and successfully solved using constraint programming in Oz later <ref> (Anke96a) </ref>. In this section, we describe the main ideas of this work. There are two constraint variables for each lesson denoting a time and a room number. We can find these variables in the slots for times and rooms, respectively. <p> In addition the tax has to be paid. For all these payments the account of the active agent has to be high enough in the beginning. The reader interested in more implementation details can find the complete description in <ref> (Anke96b) </ref>. Results Although the time table problem and its model used in this contribution have been developed before constraint and agents came into power both served as convenient starting point for investigations. <p> Again a free period is marked by an asterisk. Room numbers are omitted. Results of the proposed optimization process have been verified by data from a college time table <ref> (Anke96b) </ref>. In tab. 1 we can compare a teacher time table of this data set before and after optimization by the multi-agent system and observe the reduction of free periods. Tab. 2 shows a group time table.
Reference: <author> Anke, K. </author> <year> 1996b. </year> <title> Verbesserung von Stundenplanen durch ein Multiagentensystem. </title> <address> Diplomarbeit, Tech-nische Universitat Chemnitz-Zwickau, Germany. </address>
Reference-contexts: Constraints The problem to construct a time table where for all subjects the assignments have been made was specified about two years ago (Dilger et al. 1995) and successfully solved using constraint programming in Oz later <ref> (Anke96a) </ref>. In this section, we describe the main ideas of this work. There are two constraint variables for each lesson denoting a time and a room number. We can find these variables in the slots for times and rooms, respectively. <p> In addition the tax has to be paid. For all these payments the account of the active agent has to be high enough in the beginning. The reader interested in more implementation details can find the complete description in <ref> (Anke96b) </ref>. Results Although the time table problem and its model used in this contribution have been developed before constraint and agents came into power both served as convenient starting point for investigations. <p> Again a free period is marked by an asterisk. Room numbers are omitted. Results of the proposed optimization process have been verified by data from a college time table <ref> (Anke96b) </ref>. In tab. 1 we can compare a teacher time table of this data set before and after optimization by the multi-agent system and observe the reduction of free periods. Tab. 2 shows a group time table.
Reference: <author> Wurtz, J. </author> <year> 1997. </year> <title> Constraint-Based Scheduling in Oz. </title> <booktitle> Symposium on Operations Research, </booktitle> <address> Braunschweig, Germany, </address> <note> to appear </note>
Reference-contexts: The work was started with Oz version 1.9.13 and finally transferred to 2.02. The fact that the Oz system is still under development did not sensibly slow down research and evaluation work. As other works show <ref> (Wurtz 1997) </ref> the framework presented here still does not use all Oz features using constraints to tackle time table problems. Conclusion The paper describes the architecture of a combined constraint and multi-agent system.
References-found: 4

