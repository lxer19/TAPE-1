URL: http://www.tc.cornell.edu/UserDoc/Software/PTools/upshot/upshot.ps
Refering-URL: http://www.tc.cornell.edu/UserDoc/Software/PTools/upshot/
Root-URL: http://www.tc.cornell.edu
Title: Studying Parallel Program Behavior with Upshot  
Author: Virginia Herrarte Ewing Lusk 
Keyword: Figure 1: Upshot view of log file data  
Abstract: This is a description of and a user's manual for upshot, an X-based graphics tool for viewing log files produced by parallel programs. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> James Boyle, Ralph Butler, Terrence Disz, Barnett Glickfeld, Ewing Lusk, Ross Over-beek, James Patterson, and Rick Stevens. </author> <title> Portable Programs for Parallel Processors. </title> <publisher> Holt, Rinehart, and Winston, </publisher> <year> 1987. </year>
Reference-contexts: One tool that we at Argonne National Laboratory have found useful over the years is the logfile, which is a list of certain types of significant events in the order in which they have 1 occurred during the execution of a parallel program <ref> [1, 3] </ref>. Given such a logfile, regardless of how it is created during execution, we may wish to examine it in a variety of ways. Upshot provides one type of view of a logfile, in which events are aligned on the parallel time lines of individual processes.
Reference: [2] <author> M. Chandy and S. Taylor. </author> <title> An Introduction to Parallel Programming. </title> <editor> Jones and Bartlett, </editor> <year> 1991. </year>
Reference-contexts: At time 2025438268 process 9 logged an event of type 1 with integer data 2. . Logfiles in this format can be generated with the alog package, distributed separately. Versions of both Strand [4] and PCN <ref> [2] </ref> also generate such logfiles, which can thus be examined with upshot. A user may define a statefile to accompany a set of logfiles. Such a file defines a collection of process states by identifying an entry and exit event type for each state.
Reference: [3] <author> Terrence Disz and Ewing Lusk. </author> <title> A graphical tool for observing the behavior of parallel logic programs. </title> <booktitle> In Proceedings of the 1987 Symposium on Logic Programming, </booktitle> <pages> pages 46-53, </pages> <year> 1987. </year>
Reference-contexts: One tool that we at Argonne National Laboratory have found useful over the years is the logfile, which is a list of certain types of significant events in the order in which they have 1 occurred during the execution of a parallel program <ref> [1, 3] </ref>. Given such a logfile, regardless of how it is created during execution, we may wish to examine it in a variety of ways. Upshot provides one type of view of a logfile, in which events are aligned on the parallel time lines of individual processes.
Reference: [4] <author> Ian Foster and Stephen Taylor. Strand: </author> <title> New Concepts in Parallel Programming. </title> <publisher> Prentice-Hall, </publisher> <year> 1990. </year>
Reference-contexts: At time 2025436865 process 15 logged an event of type 1 with integer data 1. 29. At time 2025438268 process 9 logged an event of type 1 with integer data 2. . Logfiles in this format can be generated with the alog package, distributed separately. Versions of both Strand <ref> [4] </ref> and PCN [2] also generate such logfiles, which can thus be examined with upshot. A user may define a statefile to accompany a set of logfiles. Such a file defines a collection of process states by identifying an entry and exit event type for each state.
Reference: [5] <author> G. A. Geist, M. T. Heath, B. W. Peyton, and P. H. Worley. PICL: </author> <title> A portable instrumented communications library. </title> <type> Technical Report ORNL TM-11130, </type> <institution> Oak Ridge National Laboratory, </institution> <year> 1990. </year> <month> 10 </month>
Reference-contexts: Compared to gist, upshot provides fewer features; on the other hand, upshot uses color more effectively, provides a smoother scrolling mechanism, is portable, and is freely available. Upshot, combined with a suitable logging package, provides some of the same functionality as the graphics display part of PICL <ref> [5] </ref>, which displays events associated with message passing in a great variety of ways.
References-found: 5

