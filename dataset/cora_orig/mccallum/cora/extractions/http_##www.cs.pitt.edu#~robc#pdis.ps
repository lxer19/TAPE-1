URL: http://www.cs.pitt.edu/~robc/pdis.ps
Refering-URL: 
Root-URL: 
Title: a sented by its current local MSS, changes with time. Checkpointing schemes that send control
Note: 3. Disconnection of one or more MHs should not prevent  
Abstract: To appear at the 3 rd Intl. Conf. on Parallel and Distributed Information Systems, Sept. '94 aa Checkpointing Distributed Applications on Mobile Computers Arup Acharya B. R. Badrinath Department of Computer Science Rutgers University ---acharya@riches, badri@cs.rutgers.edu Abstract The integration of mobile/portable computing devices within existing data networks can be expected to spawn distributed applications that execute on mobile hosts. For reliability, it is vital that the global state of such applications be checkpointed from time to time. A global checkpoint consists of a set of local checkpoints, one per participant. This paper first identifies the problems in recording a consistent global state of mobile distributed applications. The location of a MH within the static network varies with time and therefore, a MH will first need to be located (searched) in order to obtain its local checkpoint. Moreover, MHs often (voluntarily) disconnect from the network; a disconnected MH is not reachable from the rest of the network. This means that a (disconnected) MH may not be available to provide its local checkpoint. Lastly, a MH is not equipped with stable storage; disk space at a MH is not considered stable due to vulnerability of MHs to loss, theft and physical damage. Therefore, an alternative stable repository is required to save local checkpoints of MHs. This paper presents a checkpointing algorithm for MHs that satisfies these constraints. Keywords: Mobile Hosts, Distributed Systems, Disconnection, Checkpointing Algorithm, Consistent checkpoint 1. Introduction There has been considerable interest recently to extend existing data networks to support mobility of hosts by providing continuous network connectivity to mobile hosts (MHs) in spite of a change in their location. To communicate with mobile hosts, a network with static hosts is augmented with mobile support stations (MSSs) that act as access points to the rest of the network for mobile hosts. This paper focuses on the problem of recording a consistent global checkpoint of a distributed application executing on mobile hosts and presents a check-pointing algorithm that satisfies the constraints unique to the mobile computing environment. Algorithms to checkpoint the global state of distributed application executing on mobile computers, are confronted with a set of new constraints: Given that many of the mobile computers will be personalized portable computing devices, such as PDAs and personal communicators, they will be used for multi-person interaction that require group communication between mobile computers, e.g. [11]. An user must have the assurance that a lost or misplaced device will not jeopardize the entire interaction. Checkpointing schemes are thus necessary to ensure that in spite of loss/failure of one or more such devices, the group interaction can atleast be restarted from the last global checkpoint saved. The focus of this paper is however restricted to recording checkpoints, and strategies for recovery are not discussed. Introduction of mobile computing has spurred research in a diverse set of areas. The implications of host mobility for distributed data management are considered in [13, 12, 2, 6], while its impact on distributed computations is considered in [5]. A methodology for structuring distributed algorithms for mobile hosts is presented in [4], which explicitly incorporates the constraints of mobile 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Arup Acharya and B. R. Badrinath. </author> <title> Delivering multicast messages in networks with mobile hosts. </title> <booktitle> In Proc. of the 13 th Intl. Conf. on Distributed Computing Systems, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: Different addressing schemes and protocols at the network-layer for routing messages to and from mobile hosts are detailed in [7, 14, 22, 23], while [8] quantifies the effects of host mobility on transport-layer connections. <ref> [1] </ref> presents an application-layer protocol for exactly-once delivery of multicast messages to mobile hosts, regardless of their changing locations. Other work on mobile computing includes file systems for mobile users [21, 17] and various operating systems issues related to mobile computers [19, 3, 10, 24]. <p> Throughout the paper, we will focus on new issues that mobile computing introduce to checkpointing algorithms, and our approach to address these issues. 2. System model for host mobility The system model of host mobility that we use in this paper (Fig. 1), is based on <ref> [1, 4, 5] </ref>. Briefly, the model is as follows. The term mobile implies able to move while retaining its network connections and a host that can move while retaining its network connections is a mobile host (MH) [14]. <p> A MSS, by virtue of being a static host, has access to stable storage (disk) and is also a more powerful machine in terms of computing and communication capacity. This idea has been previously used in <ref> [1, 4] </ref> for structuring distributed algorithms and applications for MHs. <p> A MSS, by virtue of being a static host, has access to stable storage (disk) and is also a more powerful machine in terms of computing and communication capacity. This idea has been previously used in [1, 4] for structuring distributed algorithms and applications for MHs. For example, <ref> [1] </ref> ensures exactly once delivery of multicast messages to mobile hosts: a MSS buffers messages, stores data structures relevant to the message delivery protocol and coordinates with other MSSs to ensure that it does not deliver a multicast message to a local MH more than once.
Reference: [2] <author> Raphael Alonso and Hank Korth. </author> <title> Database system issues in nomadic computing. </title> <booktitle> In Proc. of the ACM SIGMOD Intl. Conference on Management of Data, </booktitle> <month> June </month> <year> 1993. </year>
Reference-contexts: Introduction of mobile computing has spurred research in a diverse set of areas. The implications of host mobility for distributed data management are considered in <ref> [13, 12, 2, 6] </ref>, while its impact on distributed computations is considered in [5]. A methodology for structuring distributed algorithms for mobile hosts is presented in [4], which explicitly incorporates the constraints of mobile 1 computers in the process of algorithm design. <p> The utility of existing asynchronous checkpointing algorithms in the mobile environment is questionable due to instability of stable storage <ref> [2] </ref> on MHs. It is pointed out in [2] that in practice, while disk storage is treated as acceptably stable for log records for static hosts, this does not hold true for a mobile computer; a user may physically drop a MH especially if it is a laptop or palmtop, or <p> The utility of existing asynchronous checkpointing algorithms in the mobile environment is questionable due to instability of stable storage <ref> [2] </ref> on MHs. It is pointed out in [2] that in practice, while disk storage is treated as acceptably stable for log records for static hosts, this does not hold true for a mobile computer; a user may physically drop a MH especially if it is a laptop or palmtop, or the data stored on a MH's disk may
Reference: [3] <author> Andrew Athas and Dan Duchamp. </author> <title> Agent-mediated message passing for constrained environments. </title> <booktitle> In USENIX Symposium on Mobile and Location-Independent Computing, </booktitle> <month> Aug. </month> <year> 1993. </year>
Reference-contexts: Other work on mobile computing includes file systems for mobile users [21, 17] and various operating systems issues related to mobile computers <ref> [19, 3, 10, 24] </ref>. This brief survey shows that the problem of recording global checkpoints of distributed applications executing on MHs, has not been addressed by current research on mobile computing. The organization of the paper is as follows.
Reference: [4] <author> B. R. Badrinath, Arup Acharya, and T. Imielinski. </author> <title> Structuring distributed algorithms for mobile hosts. </title> <booktitle> In Proc. of the 14 th Intl. Conf. on Distributed Computing Systems, </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: The implications of host mobility for distributed data management are considered in [13, 12, 2, 6], while its impact on distributed computations is considered in [5]. A methodology for structuring distributed algorithms for mobile hosts is presented in <ref> [4] </ref>, which explicitly incorporates the constraints of mobile 1 computers in the process of algorithm design. <p> Throughout the paper, we will focus on new issues that mobile computing introduce to checkpointing algorithms, and our approach to address these issues. 2. System model for host mobility The system model of host mobility that we use in this paper (Fig. 1), is based on <ref> [1, 4, 5] </ref>. Briefly, the model is as follows. The term mobile implies able to move while retaining its network connections and a host that can move while retaining its network connections is a mobile host (MH) [14]. <p> A MSS, by virtue of being a static host, has access to stable storage (disk) and is also a more powerful machine in terms of computing and communication capacity. This idea has been previously used in <ref> [1, 4] </ref> for structuring distributed algorithms and applications for MHs.
Reference: [5] <author> B. R. Badrinath, Arup Acharya, and Tomasz Imielin ski. </author> <title> Impact of mobility on distributed computations. </title> <journal> ACM Operating Systems Review, </journal> <volume> 27(2), </volume> <month> April '93. </month>
Reference-contexts: Introduction of mobile computing has spurred research in a diverse set of areas. The implications of host mobility for distributed data management are considered in [13, 12, 2, 6], while its impact on distributed computations is considered in <ref> [5] </ref>. A methodology for structuring distributed algorithms for mobile hosts is presented in [4], which explicitly incorporates the constraints of mobile 1 computers in the process of algorithm design. <p> Throughout the paper, we will focus on new issues that mobile computing introduce to checkpointing algorithms, and our approach to address these issues. 2. System model for host mobility The system model of host mobility that we use in this paper (Fig. 1), is based on <ref> [1, 4, 5] </ref>. Briefly, the model is as follows. The term mobile implies able to move while retaining its network connections and a host that can move while retaining its network connections is a mobile host (MH) [14].
Reference: [6] <author> B. R. Badrinath and T. Imielinski. </author> <title> Replication and mobility. </title> <booktitle> In Proc. of the 2 nd workshop on the management of replicated data, </booktitle> <pages> pages 9-12, </pages> <year> 1992. </year>
Reference-contexts: Introduction of mobile computing has spurred research in a diverse set of areas. The implications of host mobility for distributed data management are considered in <ref> [13, 12, 2, 6] </ref>, while its impact on distributed computations is considered in [5]. A methodology for structuring distributed algorithms for mobile hosts is presented in [4], which explicitly incorporates the constraints of mobile 1 computers in the process of algorithm design.
Reference: [7] <author> P. Bhagwat and Charles E. Perkins. </author> <title> A mobile networking system based on internet protocol (ip). </title> <booktitle> In USENIX Symposium on Mobile and Location-Independent Computing, </booktitle> <month> Aug. </month> <year> 1993. </year>
Reference-contexts: A methodology for structuring distributed algorithms for mobile hosts is presented in [4], which explicitly incorporates the constraints of mobile 1 computers in the process of algorithm design. Different addressing schemes and protocols at the network-layer for routing messages to and from mobile hosts are detailed in <ref> [7, 14, 22, 23] </ref>, while [8] quantifies the effects of host mobility on transport-layer connections. [1] presents an application-layer protocol for exactly-once delivery of multicast messages to mobile hosts, regardless of their changing locations.
Reference: [8] <author> R. Caceres and L. Iftode. </author> <title> The effects of mobility on reliable transport protocols. </title> <booktitle> In Proc. of the 14 th Intl. Conf. on Distributed Computing Systems, </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: Different addressing schemes and protocols at the network-layer for routing messages to and from mobile hosts are detailed in [7, 14, 22, 23], while <ref> [8] </ref> quantifies the effects of host mobility on transport-layer connections. [1] presents an application-layer protocol for exactly-once delivery of multicast messages to mobile hosts, regardless of their changing locations.
Reference: [9] <author> K.M. Chandy and L. Lamport. </author> <title> Distributed snap shots: Determining global states of distributed systems. </title> <journal> ACM Trans. Comput. Systems, </journal> <volume> 3(1) </volume> <pages> 63-75, </pages> <year> 1985. </year>
Reference-contexts: of messages between any two MSSs, with a finite but unbounded message latency; together with the wireless networks, messages are delivered in fifo order between MHs. 2.1 Consistent global state In this paper, we model the global state of a distributed application running on mobile hosts along the lines of <ref> [9] </ref>, as follows. The number of MHs on which the application executes is N, and the number of MSSs to which any of these MHs could move, is M. <p> Motivation 3.1 Inadequacy of existing checkpointing algorithms Checkpointing mechanisms for static hosts has been widely studied and existing schemes can be broadly classified into two categories: synchronous and asynchronous. In synchronous checkpointing schemes such as <ref> [9] </ref>, all participants coordinate their local checkpoints to ensure that this set of local checkpoints is guaranteed to be consistent. <p> This problem is further compounded by the fact that a MH may switch cells before the checkpointing algorithm completes: if the algorithm requires the MH to be contacted multiple times during the course of the algorithm (e.g. in <ref> [9] </ref>, a participant receives a marker message for every incoming channel), then the search cost may be multiplied that many times. An alternative to searching for a MH's current location is that a MH continually informs all interested MHs of every change in its location.
Reference: [10] <author> Micheal Bender et. al. </author> <title> Unix for nomads: Making unix support mobile computing. </title> <booktitle> In USENIX Symposium on Mobile and Location-Independent Computing, </booktitle> <month> Aug. </month> <year> 1993. </year>
Reference-contexts: Other work on mobile computing includes file systems for mobile users [21, 17] and various operating systems issues related to mobile computers <ref> [19, 3, 10, 24] </ref>. This brief survey shows that the problem of recording global checkpoints of distributed applications executing on MHs, has not been addressed by current research on mobile computing. The organization of the paper is as follows.
Reference: [11] <author> Wayne C. Grant. </author> <title> Wireless coyote: A computer supported field trip. </title> <journal> Communications of the ACM, </journal> <month> May </month> <year> 1993. </year>
Reference: [12] <author> T. Imielinski and B. R. Badrinath. </author> <title> Wireless mobile computing : Challenges in data management. </title> <note> To appear in the Communications of the ACM. </note>
Reference-contexts: Introduction of mobile computing has spurred research in a diverse set of areas. The implications of host mobility for distributed data management are considered in <ref> [13, 12, 2, 6] </ref>, while its impact on distributed computations is considered in [5]. A methodology for structuring distributed algorithms for mobile hosts is presented in [4], which explicitly incorporates the constraints of mobile 1 computers in the process of algorithm design.
Reference: [13] <author> T. Imielinski and B. R. Badrinath. </author> <title> Querying in highly mobile distributed environments. </title> <booktitle> In 18 th Intl. Conference on Very Large Databases, </booktitle> <pages> pages 41-52, </pages> <year> 1992. </year>
Reference-contexts: Introduction of mobile computing has spurred research in a diverse set of areas. The implications of host mobility for distributed data management are considered in <ref> [13, 12, 2, 6] </ref>, while its impact on distributed computations is considered in [5]. A methodology for structuring distributed algorithms for mobile hosts is presented in [4], which explicitly incorporates the constraints of mobile 1 computers in the process of algorithm design.
Reference: [14] <author> J. Ioannidis, D. Duchamp, and G. Q. Maguire. </author> <title> Ip based protocols for mobile internetworking. </title> <booktitle> In Proc. 8 of ACM SIGCOMM Symposium on Communication, Architectures and Protocols, </booktitle> <pages> pages 235-245, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: A methodology for structuring distributed algorithms for mobile hosts is presented in [4], which explicitly incorporates the constraints of mobile 1 computers in the process of algorithm design. Different addressing schemes and protocols at the network-layer for routing messages to and from mobile hosts are detailed in <ref> [7, 14, 22, 23] </ref>, while [8] quantifies the effects of host mobility on transport-layer connections. [1] presents an application-layer protocol for exactly-once delivery of multicast messages to mobile hosts, regardless of their changing locations. <p> Briefly, the model is as follows. The term mobile implies able to move while retaining its network connections and a host that can move while retaining its network connections is a mobile host (MH) <ref> [14] </ref>. The infrastructure machines that communicate directly with the mobile hosts are called mobile support stations (MSS). Acell is a logical or geographical coverage area under a MSS.
Reference: [15] <author> D. B. Johnson and W. Zwaenopoel. </author> <title> Recovery in dis tributed systems using optimistic message logging and checkpointing. </title> <booktitle> In 7 th ACM Symposium on Principles of Distributed Computing, </booktitle> <year> 1988. </year>
Reference-contexts: In synchronous checkpointing schemes such as [9], all participants coordinate their local checkpoints to ensure that this set of local checkpoints is guaranteed to be consistent. In the asynchronous approach, e.g. <ref> [20, 15, 16] </ref>, each participant can choose to checkpoint its local state independent of others; however, an arbitrary set of local checkpoints, one for each participant, does not necessarily form a consistent global checkpoint.
Reference: [16] <author> T. Juang and S. Venkatesan. </author> <title> Crash recovery with lit tle overhead. </title> <booktitle> In 11 th IEEE Intl. Conf. on Distributed Computing Systems, </booktitle> <year> 1991. </year>
Reference-contexts: In synchronous checkpointing schemes such as [9], all participants coordinate their local checkpoints to ensure that this set of local checkpoints is guaranteed to be consistent. In the asynchronous approach, e.g. <ref> [20, 15, 16] </ref>, each participant can choose to checkpoint its local state independent of others; however, an arbitrary set of local checkpoints, one for each participant, does not necessarily form a consistent global checkpoint.
Reference: [17] <author> James Kistler and M. Satyanarayanan. </author> <title> Disconnected operation in the coda file system. </title> <journal> ACM Trans. on Computer Systems, </journal> <volume> 10(1), </volume> <month> Feb. </month> <year> 1992. </year>
Reference-contexts: Other work on mobile computing includes file systems for mobile users <ref> [21, 17] </ref> and various operating systems issues related to mobile computers [19, 3, 10, 24]. This brief survey shows that the problem of recording global checkpoints of distributed applications executing on MHs, has not been addressed by current research on mobile computing. The organization of the paper is as follows. <p> Our checkpointing algorithm for mobile hosts is presented in Section 5. The algorithm does not require a 2 An opposite action is taken by the Coda file system <ref> [17] </ref>, where data is transferred to the disconnecting MH from the static segment. explicit control messages to be sent to MHs (thereby, avoiding the search overhead of synchronous schemes) and local checkpoints of MHs are not recorded in a coordinated fashion.
Reference: [18] <author> L. Lamport. </author> <title> Time, clocks and the ordering of events in a distributed system. </title> <journal> Comm. ACM, </journal> <volume> 21(7) </volume> <pages> 558-565, </pages> <year> 1978. </year>
Reference-contexts: h j , i.e. ckpt a ckpt b if and only if there exists messages m and m' such that : recv (m') belongs to ckpt a , and send (m) belongs to ckpt b , and send (m) ! recv (m'), where ! is Lamport's hap pened before relation <ref> [18] </ref> Intuitively, ckpt a ckpt b means that if ckpt a is included in a global checkpoint then ckpt b should also be included to maintain consistency of the global checkpoint. Lemma 1.
Reference: [19] <author> Brian Marsh, Fred Douglis, and Ramon Caceres. </author> <title> Systems issues in mobile computing. </title> <type> Technical Report MITL-TR-50-93, </type> <institution> MITL, </institution> <year> 1993. </year>
Reference-contexts: Other work on mobile computing includes file systems for mobile users [21, 17] and various operating systems issues related to mobile computers <ref> [19, 3, 10, 24] </ref>. This brief survey shows that the problem of recording global checkpoints of distributed applications executing on MHs, has not been addressed by current research on mobile computing. The organization of the paper is as follows.
Reference: [20] <author> R. E. Strom and S. Yemini. </author> <title> Optimistic recovery in distributed systems. </title> <journal> ACM Trans. on Computer Systems, </journal> <volume> 3(3), </volume> <year> 1985. </year>
Reference-contexts: In synchronous checkpointing schemes such as [9], all participants coordinate their local checkpoints to ensure that this set of local checkpoints is guaranteed to be consistent. In the asynchronous approach, e.g. <ref> [20, 15, 16] </ref>, each participant can choose to checkpoint its local state independent of others; however, an arbitrary set of local checkpoints, one for each participant, does not necessarily form a consistent global checkpoint.
Reference: [21] <author> Carl D. Tait and Dan Duchamp. </author> <title> Service interface and replica management algorithm for mobile file system clients. </title> <booktitle> In Proc. First Intl. Conf. on Parallel and Distributed Information Systems, </booktitle> <year> 1991. </year>
Reference-contexts: Other work on mobile computing includes file systems for mobile users <ref> [21, 17] </ref> and various operating systems issues related to mobile computers [19, 3, 10, 24]. This brief survey shows that the problem of recording global checkpoints of distributed applications executing on MHs, has not been addressed by current research on mobile computing. The organization of the paper is as follows.
Reference: [22] <author> Fumio Teraoka, Yasuhiko Yokote, and Mario Tokoro. </author> <title> A network architecture providing host migration transparency. </title> <booktitle> Proc. of ACM SIGCOMM'91, </booktitle> <address> Septem-ber, </address> <year> 1991. </year>
Reference-contexts: A methodology for structuring distributed algorithms for mobile hosts is presented in [4], which explicitly incorporates the constraints of mobile 1 computers in the process of algorithm design. Different addressing schemes and protocols at the network-layer for routing messages to and from mobile hosts are detailed in <ref> [7, 14, 22, 23] </ref>, while [8] quantifies the effects of host mobility on transport-layer connections. [1] presents an application-layer protocol for exactly-once delivery of multicast messages to mobile hosts, regardless of their changing locations.
Reference: [23] <author> Hiromi Wada, Takashi Yozawa, Tatsuya Ohnishi, and Yasunori Tanaka. </author> <title> Mobile computing environment based on internet packet forwarding. </title> <booktitle> In 1992 Winter Usenix, </booktitle> <month> Jan. </month> <year> 1993. </year>
Reference-contexts: A methodology for structuring distributed algorithms for mobile hosts is presented in [4], which explicitly incorporates the constraints of mobile 1 computers in the process of algorithm design. Different addressing schemes and protocols at the network-layer for routing messages to and from mobile hosts are detailed in <ref> [7, 14, 22, 23] </ref>, while [8] quantifies the effects of host mobility on transport-layer connections. [1] presents an application-layer protocol for exactly-once delivery of multicast messages to mobile hosts, regardless of their changing locations.
Reference: [24] <author> T. Watson and B. N. Bershad. </author> <title> Local area mobile computing on stock hardware and mostly stock software. </title> <booktitle> In USENIX Symposium on Mobile and Location-Independent Computing, </booktitle> <month> Aug. </month> <year> 1993. </year> <month> 9 </month>
Reference-contexts: Other work on mobile computing includes file systems for mobile users [21, 17] and various operating systems issues related to mobile computers <ref> [19, 3, 10, 24] </ref>. This brief survey shows that the problem of recording global checkpoints of distributed applications executing on MHs, has not been addressed by current research on mobile computing. The organization of the paper is as follows.
References-found: 24

