URL: http://www.eecs.umich.edu/umdes/projects/faildiag/smc.ps
Refering-URL: http://www.eecs.umich.edu/umdes/projects/faildiag/diagnosis.html
Root-URL: http://www.eecs.umich.edu
Email: fridebouk,stephane,teneketg@eecs.umich.edu;  
Title: Coordinated Decentralized Protocols for Failure Diagnosis of Discrete Event Systems  almost all of the failure diagnosis  
Author: Rami Debouk, Stephane Lafortune and Demosthenis Teneketzis 
Keyword: Extended Summary  System model Coordinator (memory and processing constraints) Communication constraints Local observations Local diagnostics Local observations Local diagnostics Site 1 Site 2 Failure recovery module Failure information Figure 1: Coordinated decentralized architecture  
Note: The work in [1, 3, 4] and  
Web: www.eecs.umich.edu/umdes  
Address: Ann Arbor, MI 48109-2122, USA  
Affiliation: Department of Electrical Engineering and Computer Science The University of Michigan,  
Abstract: We address the problem of failure diagnosis in discrete event systems with decentralized information. We propose a coordinated decentralized architecture consisting of local sites communicating with a coordinator that is responsible for diagnosing the failures occurring in the system. We extend the notion of diagnosability, originally introduced in [1] for centralized systems, to the proposed coordinated decentralized architecture. We specify three protocols, i.e. the diagnostic information generated at the local sites, the communication rules used by the local sites, and the coordinator's decision rule, that realize the proposed architecture. We analyze the diagnostic properties of each protocol. We also state and prove necessary and sufficient conditions for a language to be diagnosable under each protocol. These conditions are checkable off-line. The on-line diagnostic process is carried out using the diagnosers introduced in [1] or a slight variation of these diagnosers. The key features of the proposed protocols are: (i) they achieve, each under a set of assumptions, the same diagnostic performance as the centralized diagnoser; and (ii) they highlight the performance vs. complexity tradeoff that arises in coordinated decentralized architectures. The correctness of two of the protocols relies on some stringent global ordering assumptions on message reception at the coordinator's site, the relaxation of which is briefly discussed. Failure detection and isolation is an important task in the automatic control of large complex systems. In order to guarantee a reliable system performance, the control engineer should guarantee that the system is running safely within its normal boundaries. Consequently, the problem of failure diagnosis has received considerable attention in the literature. Many schemes ranging from fault-tree and analytical redundancy methods to discrete event system (DES) approaches, model based reasoning and expert systems methods, have been proposed to approach this problem. For a brief description of these methods and additional references, the interested reader is referred to [2] and the introduction of [1] and the references therein. In [1, 3, 4], the authors propose a language based approach for failure diagnosis of DES. In their framework, a language is said to be diagnosable with respect to a set of observable events and a failure partition if within a finite delay, the occurrence of any failure can be detected using the history of observable events. They model the language as a deterministic finite state machine (FSM). The diagnoser, another deterministic FSM built from the system model, is at the core of the diagnostic methodology: it is used to analyze the diagnosability properties off-line, and to perform diagnostic when it observes on-line the behavior of the system. approaches in the literature have been developed for systems where the information used for fault diagnosis is centralized. A notable exception is [5], where the authors present a distributed fault monitoring method, time templates. Time templates monitoring is cited to have the advantage of being easily implemented in distributed control architectures. Many systems are decentralized in nature, for instance, the majority of technological complex systems (computer and communication networks, manufacturing, process control and power systems, etc.) are informationally decentralized. In decentralized information systems there are several work stations (decision makers, controllers, diagnosers) each having access to its own local information. The stations may communicate and exchange limited information among each other. Since this information is exchanged in real-time and over channels of limited capacity, there are propagation delays, along with faults and transmission errors. Thus, the information available to each station is incomplete, delayed, and possibly erroneous. Hence, the approaches to failure diagnosis mentioned above do not apply directly to informationally decentralized systems. Consequently, it is important to develop diagnostic methodologies for infor-mationally decentralized systems. This fact is also recognized in [5] and [6]. In this work, we investigate failure diagnosis problems in DES under decentralized information. We refer the reader to [7, 8] for a detailed description of the work. We first restrict attention to a coordinated decentralized architecture with two local sites communicating with a coordinator. This architecture is depicted in Figure 1. In Figure 1, the top block represents the complete system model. Each site is composed of two modules: an observation module and a diagnostic module. The site i, i 2 f1; 2g, 
Abstract-found: 1
Intro-found: 0
Reference: [1] <author> M. Sampath, R. Sengupta, S. Lafortune, K. Sinnamo-hideen, and D. Teneketzis. </author> <title> Diagnosability of discrete-event systems. </title> <journal> IEEE Trans. Automat. Contr., </journal> <volume> 40(9) </volume> <pages> 1555-1575, </pages> <month> September </month> <year> 1995. </year>
Reference: [2] <author> A.D. Pouliezos and G.S. Stavrakakis. </author> <title> Real time fault monitoring of industrial processes. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1994. </year>
Reference: [3] <author> M. Sampath, R. Sengupta, S. Lafortune, K. Sinnamo-hideen, and D. Teneketzis. </author> <title> Failure diagnosis using discrete-event models. </title> <journal> IEEE Trans. Contr. Syst. Tech., </journal> <volume> 4(2) </volume> <pages> 105-124, </pages> <month> March </month> <year> 1996. </year>
Reference: [4] <author> M. Sampath, S. Lafortune, and D. Teneketzis. </author> <title> Active diagnosis of discrete-event systems. </title> <journal> IEEE Trans. Automat. Contr., </journal> <volume> 43(7), </volume> <month> July </month> <year> 1998. </year>
Reference: [5] <author> L. Holloway and S. Chand. </author> <title> Time templates for discrete event fault monitoring in manufacturing systems. </title> <booktitle> In Proc. 1994 American Control Conference, </booktitle> <pages> pages 701-706, </pages> <year> 1994. </year>
Reference: [6] <author> R. Boubour, C. Jard, A. Aghasaryan, E. Fabre, and A. Benveniste. </author> <title> Petri net approach to fault detection and diagnosis in distributed systems: application to telecommunication networks, motivations, and modelling. </title> <booktitle> In Proc. 36th IEEE Conf. on Decision and Control, </booktitle> <address> San Diego, CA, </address> <month> Decem-ber </month> <year> 1997. </year>
Reference: [7] <author> R. Debouk, S. Lafortune, and D. Teneketzis. </author> <title> A coordinated decentralized architecture for failure diagnosis of discrete-event systems. </title> <booktitle> In Proc. of WODES 1998, International Workshop on Discrete Event Systems. Published by IEE, </booktitle> <address> London, England, </address> <month> August </month> <year> 1998. </year>
Reference: [8] <author> R. Debouk, S. Lafortune, and D. Teneketzis. </author> <title> Coordinated decentralized protocols for failure diagnosis of discrete-event systems. </title> <type> Technical Report CGR97-17, </type> <institution> Department of Electrical Engineering and Computer Science, University of Michigan, </institution> <month> September </month> <year> 1997. </year> <month> Revised May </month> <year> 1998. </year>
References-found: 8

