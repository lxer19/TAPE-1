URL: http://www.cc.gatech.edu/systems/papers/daniela/rtas98.ps
Refering-URL: http://www.cs.gatech.edu/people/home/daniela/cv.html
Root-URL: 
Email: f daniela,schwang@cc.gatech.edu, sudha@ee.gatech.edu  
Title: FARA A Framework for Adaptive Resource Allocation in Complex Real-Time Systems  
Author: Daniela Ro~su, Karsten Schwan, Sudhakar Yalamanchili 
Address: Atlanta, Ga. 30332-0250  
Affiliation: Georgia Institute of Technology  
Abstract: This paper introduces FARA, a framework that provides abstractions and mechanisms for building integrated adaptation and resource allocation services in complex real-time systems. FARA's design addresses (1) the specification of the adaptation capabilities of general-domain applications with multiple adaptive components and (2) the control of the adaptation impact on the satisfiabil-ity of an application's timing constraints during its transition to targeted steady state. We propose to use of a hierarchical adaptation model, to control the adaptation enactment overhead based on the costs of executing the application-specific adaptation procedures, and to reduce the decision overhead by use of effective solutions for mechanisms frequently invoked during the decision process, such as the decision context management and the allocation decision evaluation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. F. Abdelzaher, E. M. Atkins, and K. G. Shin. </author> <title> QoS Negotiation in Real-Time Systems and Its Application to Automated Flight Control. </title> <booktitle> Real-Time Technology and Applications Symposium, </booktitle> <year> 1997. </year>
Reference-contexts: Support for making adaptation decisions is provided by infrastructures embedded in the application [3, 5, 7], or in the operating system resource management component <ref> [1, 4, 6, 14] </ref>. In our research, we consider the latter approach because it eliminates the need for integrating in each application mechanisms for performance control and complex adaptation decision, and it also enables effective negotiation-based decisions [1]. However, such "system-decided" adaptations require detailed information on each application's adaptation capabilities. <p> In our research, we consider the latter approach because it eliminates the need for integrating in each application mechanisms for performance control and complex adaptation decision, and it also enables effective negotiation-based decisions <ref> [1] </ref>. However, such "system-decided" adaptations require detailed information on each application's adaptation capabilities. <p> Previous research has only considered models for describing the adaptation capabilities of applications in specific application domains, such as multimedia [4, 9], C3I applications with components performing imprecise computation-type of algorithms [5], or applications demanding a fixed set of resources and service types <ref> [1, 6, 11] </ref>. A challenging problem associated with runtime adaptation and resource allocation (ARA) decisions is their potential negative impact on the sat-isfiability of an application's timing constraints. <p> This impact is due to the delays and overheads incurred with making and enacting the adaptation that can affect the normal execution of the application [13]. Therefore, in contrast to previous research that considers the goal of adaptation to be only the attainment of acceptable steady state performance <ref> [1, 5, 6] </ref>, our solution to ARA considers also the application performance during its transition to the targeted steady state, referred as transitory state performance. Contributions. This paper proposes a Framework for Adaptative Resource Allocation (FARA) in the context of real-time systems.
Reference: [2] <author> N. C. Audsley, A. Burns, M. F. Richardson, and A. J. Wellings. </author> <title> Hard Real-Time Scheduling: The Deadline-Monotonic Approach. </title> <booktitle> 8th RTOSS, </booktitle> <month> May, </month> <year> 1991. </year>
Reference-contexts: For instance, the time taken to analyze a set of CPU allocation requests for a deadline-based scheduling method <ref> [2] </ref> depends on the order in which the requests are considered.
Reference: [3] <author> T. Bihari and K. Schwan. </author> <title> Dynamic Adaptation of Real-Time Software. </title> <journal> ACM Transactions on Computer Systems, </journal> <month> May, </month> <year> 1991. </year>
Reference-contexts: Real-time system developers have always realized the importance of adaptations, typically describing an application's functionality in terms of its execution modes [8]. fl Funded by the Defense Advanced Research Projects Agency under Rome Laboratories contract F30602-96-C-0321. Support for making adaptation decisions is provided by infrastructures embedded in the application <ref> [3, 5, 7] </ref>, or in the operating system resource management component [1, 4, 6, 14]. In our research, we consider the latter approach because it eliminates the need for integrating in each application mechanisms for performance control and complex adaptation decision, and it also enables effective negotiation-based decisions [1].
Reference: [4] <author> J. Huang and P.-J. Wan. </author> <title> On Supporting Mission-Critical Multimedia Applications. </title> <booktitle> 3rd IEEE International Conference on Multimedia Computing and Systems, </booktitle> <month> June </month> <year> 1996. </year>
Reference-contexts: Support for making adaptation decisions is provided by infrastructures embedded in the application [3, 5, 7], or in the operating system resource management component <ref> [1, 4, 6, 14] </ref>. In our research, we consider the latter approach because it eliminates the need for integrating in each application mechanisms for performance control and complex adaptation decision, and it also enables effective negotiation-based decisions [1]. However, such "system-decided" adaptations require detailed information on each application's adaptation capabilities. <p> However, such "system-decided" adaptations require detailed information on each application's adaptation capabilities. Previous research has only considered models for describing the adaptation capabilities of applications in specific application domains, such as multimedia <ref> [4, 9] </ref>, C3I applications with components performing imprecise computation-type of algorithms [5], or applications demanding a fixed set of resources and service types [1, 6, 11].
Reference: [5] <author> D. Hull, A. Shankar, K. Nahrstedt, and J. W. S. Liu. </author> <title> An end-to-end QoS model and management architecture. </title> <booktitle> IEEE Workshop on Middleware for Distributed Real-time Systems and Services, </booktitle> <pages> pages 82-89, </pages> <year> Dec.,1997. </year>
Reference-contexts: Real-time system developers have always realized the importance of adaptations, typically describing an application's functionality in terms of its execution modes [8]. fl Funded by the Defense Advanced Research Projects Agency under Rome Laboratories contract F30602-96-C-0321. Support for making adaptation decisions is provided by infrastructures embedded in the application <ref> [3, 5, 7] </ref>, or in the operating system resource management component [1, 4, 6, 14]. In our research, we consider the latter approach because it eliminates the need for integrating in each application mechanisms for performance control and complex adaptation decision, and it also enables effective negotiation-based decisions [1]. <p> However, such "system-decided" adaptations require detailed information on each application's adaptation capabilities. Previous research has only considered models for describing the adaptation capabilities of applications in specific application domains, such as multimedia [4, 9], C3I applications with components performing imprecise computation-type of algorithms <ref> [5] </ref>, or applications demanding a fixed set of resources and service types [1, 6, 11]. A challenging problem associated with runtime adaptation and resource allocation (ARA) decisions is their potential negative impact on the sat-isfiability of an application's timing constraints. <p> This impact is due to the delays and overheads incurred with making and enacting the adaptation that can affect the normal execution of the application [13]. Therefore, in contrast to previous research that considers the goal of adaptation to be only the attainment of acceptable steady state performance <ref> [1, 5, 6] </ref>, our solution to ARA considers also the application performance during its transition to the targeted steady state, referred as transitory state performance. Contributions. This paper proposes a Framework for Adaptative Resource Allocation (FARA) in the context of real-time systems.
Reference: [6] <author> J. Jehuda. </author> <title> Automated Meta-Control for Adaptable Real-Time Software. </title> <journal> Real-Time Systems Journal, </journal> <note> (to appear). </note>
Reference-contexts: Support for making adaptation decisions is provided by infrastructures embedded in the application [3, 5, 7], or in the operating system resource management component <ref> [1, 4, 6, 14] </ref>. In our research, we consider the latter approach because it eliminates the need for integrating in each application mechanisms for performance control and complex adaptation decision, and it also enables effective negotiation-based decisions [1]. However, such "system-decided" adaptations require detailed information on each application's adaptation capabilities. <p> Previous research has only considered models for describing the adaptation capabilities of applications in specific application domains, such as multimedia [4, 9], C3I applications with components performing imprecise computation-type of algorithms [5], or applications demanding a fixed set of resources and service types <ref> [1, 6, 11] </ref>. A challenging problem associated with runtime adaptation and resource allocation (ARA) decisions is their potential negative impact on the sat-isfiability of an application's timing constraints. <p> This impact is due to the delays and overheads incurred with making and enacting the adaptation that can affect the normal execution of the application [13]. Therefore, in contrast to previous research that considers the goal of adaptation to be only the attainment of acceptable steady state performance <ref> [1, 5, 6] </ref>, our solution to ARA considers also the application performance during its transition to the targeted steady state, referred as transitory state performance. Contributions. This paper proposes a Framework for Adaptative Resource Allocation (FARA) in the context of real-time systems.
Reference: [7] <author> M. B. Jones, P. J. Leach, R. Draves, and J. Bar-rera III. </author> <title> Modular Real-Time Resource Management in the Rialto Operating System. </title> <booktitle> 5th Workshop on Hot Topics in Operating Systems, </booktitle> <address> Orcas Island, WA, </address> <pages> pages 12-17, </pages> <month> May, </month> <year> 1995. </year>
Reference-contexts: Real-time system developers have always realized the importance of adaptations, typically describing an application's functionality in terms of its execution modes [8]. fl Funded by the Defense Advanced Research Projects Agency under Rome Laboratories contract F30602-96-C-0321. Support for making adaptation decisions is provided by infrastructures embedded in the application <ref> [3, 5, 7] </ref>, or in the operating system resource management component [1, 4, 6, 14]. In our research, we consider the latter approach because it eliminates the need for integrating in each application mechanisms for performance control and complex adaptation decision, and it also enables effective negotiation-based decisions [1].
Reference: [8] <author> D. J. Musliner, E. H. Durfee, and K. G. Shin. </author> <title> CIRCA: A Cooperative Intelligent Real-Time Control Architecture. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 23(6) </volume> <pages> 1561-1574, </pages> <address> Nov./Dec. </address> <year> 1993. </year>
Reference-contexts: Adaptation is attractive because it facilitates dealing with dynamic application behavior in the context of limited resource availability. Real-time system developers have always realized the importance of adaptations, typically describing an application's functionality in terms of its execution modes <ref> [8] </ref>. fl Funded by the Defense Advanced Research Projects Agency under Rome Laboratories contract F30602-96-C-0321. Support for making adaptation decisions is provided by infrastructures embedded in the application [3, 5, 7], or in the operating system resource management component [1, 4, 6, 14].
Reference: [9] <author> K. Nahrstedt and J. M. Smith. </author> <title> The QOS Broker. </title> <booktitle> IEEE MultiMedia, Spring, </booktitle> <year> 1995. </year>
Reference-contexts: However, such "system-decided" adaptations require detailed information on each application's adaptation capabilities. Previous research has only considered models for describing the adaptation capabilities of applications in specific application domains, such as multimedia <ref> [4, 9] </ref>, C3I applications with components performing imprecise computation-type of algorithms [5], or applications demanding a fixed set of resources and service types [1, 6, 11].
Reference: [10] <author> D. Paul. </author> <title> Decisions Models for On-Line Adaptive Resource Managament'. </title> <type> Masters Thesis, </type> <institution> School of Electrical and Computer Engineering, Geor-gia Institute of Technology, </institution> <year> 1997. </year>
Reference-contexts: A detector provides a method for identifying run-time changes in a client's or provider's behavior. For example, a detector may check whether a given percentage of the raw or smoothed observed values are below some threshold, or it may apply a Bayesian model over the result of another detector <ref> [10] </ref>. A negotiator represents a negotiation heuristic. In FARA, the primary goal of negotiation is to select a set of adaptation modes with a high likelihood of being satisfied.
Reference: [11] <author> R. Rajkumar, K. Juvva, A. Molano, and S. Oikawa. </author> <title> Resource Kernels: A Resource-Centric Approach to Real-Time Systems. </title> <booktitle> SPIE/ACM Conference on Multimedia Computing and Networking, </booktitle> <address> Jan.,1998. </address>
Reference-contexts: Previous research has only considered models for describing the adaptation capabilities of applications in specific application domains, such as multimedia [4, 9], C3I applications with components performing imprecise computation-type of algorithms [5], or applications demanding a fixed set of resources and service types <ref> [1, 6, 11] </ref>. A challenging problem associated with runtime adaptation and resource allocation (ARA) decisions is their potential negative impact on the sat-isfiability of an application's timing constraints. <p> For instance, a "host system" provider integrates CPU, memory, communication interfaces, and disk resources. A provider offers one or more types of reservation-based services, each characterized by specific request parameters and quality metrics (e.g., a host system might offer both predictive and time-shared computation <ref> [11] </ref>). The physical connections between providers are described by a graph. This graph is used to decide how services of various providers can be used together to satisfy high-level client requests (e.g., distributed processing across several hosts and network links).
Reference: [12] <author> D. Rosu, K. Schwan, and S. Yalamanchili. </author> <title> FARA A Framework for Adaptive Resource Allocation in Complex Real-Time Systems. </title> <institution> Georgia Inst. of Technology, GIT-CC-98-10, Mar.,1998. </institution>
Reference-contexts: Paper Outline. The remainder of this paper briefly presents the FARA architecture (see Section 2) and its solutions to several issues related to making adaptation and resource allocation decisions (see Section 3). Details on these topics and on related work are presented in <ref> [12] </ref>. 2. FARA Architecture sources, and FARA-based infrastructure Target System Model. A FARA-based infrastructure is a middleware system component that mediates between resource providers and clients in order to guarantee acceptable reservation-based services (see Figure 1).
Reference: [13] <author> D. Rosu, K. Schwan, S. Yalamanchili, and R. Jha. </author> <title> On Adaptive Resource Allocation for Complex Real-Time Applications. </title> <booktitle> 18th IEEE Real-Time Systems Symposium, </booktitle> <month> Dec., </month> <year> 1997. </year>
Reference-contexts: This impact is due to the delays and overheads incurred with making and enacting the adaptation that can affect the normal execution of the application <ref> [13] </ref>. Therefore, in contrast to previous research that considers the goal of adaptation to be only the attainment of acceptable steady state performance [1, 5, 6], our solution to ARA considers also the application performance during its transition to the targeted steady state, referred as transitory state performance. Contributions.
Reference: [14] <author> D. I. Rosu and K. Schwan. </author> <title> Improving Protocol Performance by Dynamic Control of Communication Resources. </title> <booktitle> 2nd IEEE International Conference on Engineering Complex Computer Systems, </booktitle> <year> 1996. </year>
Reference-contexts: Support for making adaptation decisions is provided by infrastructures embedded in the application [3, 5, 7], or in the operating system resource management component <ref> [1, 4, 6, 14] </ref>. In our research, we consider the latter approach because it eliminates the need for integrating in each application mechanisms for performance control and complex adaptation decision, and it also enables effective negotiation-based decisions [1]. However, such "system-decided" adaptations require detailed information on each application's adaptation capabilities.
References-found: 14

