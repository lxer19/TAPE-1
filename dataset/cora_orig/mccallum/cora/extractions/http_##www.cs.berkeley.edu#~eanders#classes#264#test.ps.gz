URL: http://www.cs.berkeley.edu/~eanders/classes/264/test.ps.gz
Refering-URL: http://www.cs.berkeley.edu/~eanders/classes/264/
Root-URL: http://www.cs.berkeley.edu
Email: (eanders@cs.berkeley.edu)  
Title: Table of Contents Introduction The problem with linked lists Alternative representations of linked lists Where
Author: Eric Anderson 
Note: Cache-Friendly Lists a CS264 Project by  
Abstract: 10May95: Added the graphs for mergesort. Completed the conclusion. Made the data available for the standard routines, and the mergesort routines. Added the section on fair reporting wrt. memory allocation. Made the C++ code available. Fixed up some of the references. Added a comment to the measurements page on the SML results, and made the code available. 
Abstract-found: 1
Intro-found: 1
Reference: <editor> Table of Contents Previous Section: Conclusion Hall, Cordelia V. </editor> <title> "Using Hindley-Milner Type Inference to Optimise List Representation" ACM Conference on Lisp and Functional Programming, </title> <address> New York, June 1994. </address> <publisher> ACM Press. </publisher>
Reference: <author> Cormen, Thomas H.; Leiserson, Charles E.; Rivest, Ronald L. </author> <title> "Introduction To Algorithms" The MIT Press, </title> <address> Cambridge, Massachusetts. </address>
Reference: <author> Nyberg, Chris; Barclay, Tom; Cvetanovic, Zarka; Gray, Jim; Lomet, Dave. "AlphaSort: </author> <title> A Cache-Sensitive Parallel External Sort" ACM SIGMOD'94 Proceedings. </title>
Reference: <author> Shao, Zhong; Reppy, John H.; Appel, </author> <booktitle> Andrew "Unrolling Lists" ACM Conference on Lisp and and Functional Programming, </booktitle> <address> New York, June 1994. </address> <publisher> ACM Press. </publisher>
References-found: 4

