URL: ftp://ftp.ifad.dk/pub/papers/isovdm.ps.gz
Refering-URL: http://www.ifad.dk/publications/publications.html
Root-URL: 
Email: nico@dutiaa.tudelft.nl peter@ifad.dk  
Title: An Overview of the ISO/VDM-SL Standard  
Author: Nico Plat Peter Gorm Larsen 
Address: P.O.Box 356, NL-2600 AJ Delft, The Netherlands Forskerparken 10, DK-5230 Odense, Denmark  
Affiliation: Delft University of Technology IFAD Faculty of Technical Mathematics and Informatics The Institute of Applied Computer Science  
Abstract: VDM-SL, the notation incorporated in the formal method VDM, is currently being standardized under auspices of the International Standards Institution (ISO) and the British Standards Institution (BSI). It is one of the few formal languages of which the syntax and the semantics have been completely formally defined. In this paper we present an overview of the standard, including a report on the current status of the standardization effort. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Andrews. </author> <title> Report from the BSI Panel for the Stan dardisation of VDM (IST/5/50). </title> <editor> In R. Bloomfield, L. Marshall, and R. Jones, editors, VDM'88 - VDM: </editor> <booktitle> The Way Ahead, </booktitle> <pages> pages 74-78, </pages> <address> Berlin, March 1988. </address> <publisher> Springer-Verlag, LNCS 328. </publisher>
Reference-contexts: A reference guide for the language following the standard (to be) as closely as possible is [8], another recent text book illustrating the language is [2]. Earlier status reports of the standardization process have been published in [16] and <ref> [1] </ref>. This paper is organized as follows: in the next section we will give a short overview of the history of the language which has led to the initiative for standardization. In section 3 we will briefly describe some essential characteristics of the language.
Reference: [2] <author> Derek Andrews and Darell Ince. </author> <title> Practical Formal Methods with VDM. </title> <publisher> McGraw Hill, </publisher> <year> 1991. </year>
Reference-contexts: Both authors are also active members of BSI IST/5/-/19. 2 In this paper we will present an overview of the standard for VDM-SL. A reference guide for the language following the standard (to be) as closely as possible is [8], another recent text book illustrating the language is <ref> [2] </ref>. Earlier status reports of the standardization process have been published in [16] and [1]. This paper is organized as follows: in the next section we will give a short overview of the history of the language which has led to the initiative for standardization.
Reference: [3] <author> D. Bjtrner and C.B. Jones. </author> <title> Formal Specification & Software Development. </title> <booktitle> Series in Computer Science. </booktitle> <publisher> Prentice-Hall, </publisher> <address> New Jersey, </address> <year> 1982. </year>
Reference-contexts: One of the most mature formal methods, primarily intended for the formal specification and development of functional aspects of software systems, is the Vienna Development Method (VDM) <ref> [3, 10] </ref>. A central element of VDM is its specification language: VDM-SL. VDM-SL is a wide spectrum specification language: it can be used for highly abstract specifications as well as for specifications at a very low level of abstraction. <p> Two main VDM books ([4] and <ref> [3] </ref>) were used as baseline documents. The semantics of the STC/VDM-RL dialect [14] was used as the starting point for the semantics of VDM-SL.
Reference: [4] <editor> Dines Bjtrner and Cliff B. Jones, editors. </editor> <booktitle> The Vi enna Development Method: The Meta-Language, volume 61 of LNCS. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin Heidelberg New York, </address> <year> 1978. </year>
Reference: [5] <author> Christoph Blaue. </author> <title> A VDM Subset Compiler. </title> <editor> In S. Prehn and W.J. Toetenel, editors, </editor> <booktitle> VDM'91 For- mal Software Development Methods, </booktitle> <pages> pages 697-698. </pages> <publisher> Springer-Verlag, LNCS 551, </publisher> <year> 1991. </year>
Reference-contexts: A central element of VDM is its specification language: VDM-SL. VDM-SL is a wide spectrum specification language: it can be used for highly abstract specifications as well as for specifications at a very low level of abstraction. In fact, an executable subset of the language can be defined <ref> [13, 5] </ref>, such that the language is suitable for prototyping. The increasing use of VDM and the growing number of dialects in use have led to the recognition of the need for a standard for VDM-SL. The standardization effort is carried out under the flag of ISO/IEC JTC1/SC22/WG19.
Reference: [6] <author> Hans Bruun, Bo Stig Hansen, and Flemming Damm. </author> <title> An Approach to the Static Semantics of VDM-SL. </title> <editor> In S. Prehn and W.J. Toetenel, editors, </editor> <booktitle> VDM'91 For- mal Software Development Methods, </booktitle> <pages> pages 220-253. </pages> <publisher> Springer-Verlag, LNCS 551, </publisher> <year> 1991. </year>
Reference-contexts: In this way each specification construct is given a well-formedness grade. A detailed description of SS and the rationale behind it can be found in <ref> [6] </ref>. 7 5 Status The status of the various components of the standard is as follows: 1. The concrete syntax has been completed and has been reviewed by the Panel. The concrete syntax is not expected to be significantly changed. 2.
Reference: [7] <author> Flemming Damm, Hans Bruun, , and Bo Stig Hansen. </author> <title> On Type Checking in VDM and Related Consistency Issues. </title> <booktitle> In VDM'91 Symposium. VDM Europe, </booktitle> <publisher> Springer-Verlag, </publisher> <month> October </month> <year> 1991. </year>
Reference-contexts: The standard, therefore, provides a formal definition of the well-formedness of a VDM specification: the static semantics SS of the language. The static semantics has itself been formulated in VDM-SL. An alternative approach using inference rules has also been investigated <ref> [7] </ref>. The VDM specifications which have at least one model in the dynamic semantics can be considered as those which are well-formed. In general, it is not statically decidable whether a given VDM specification is well-formed or not.
Reference: [8] <author> John Dawes. </author> <title> The VDM-SL Reference Guide. </title> <publisher> Pitman, </publisher> <address> London, </address> <year> 1991. </year>
Reference-contexts: Both authors are also active members of BSI IST/5/-/19. 2 In this paper we will present an overview of the standard for VDM-SL. A reference guide for the language following the standard (to be) as closely as possible is <ref> [8] </ref>, another recent text book illustrating the language is [2]. Earlier status reports of the standardization process have been published in [16] and [1].
Reference: [9] <author> C.A.R. Hoare. </author> <title> Communicating Sequential Processes. </title> <publisher> Prentice-Hall, </publisher> <address> New Jersey, </address> <year> 1985. </year>
Reference-contexts: Instead, first the set of all possible models is created, and then, by examining the syntactic specification, this set is restricted to those models that can be considered the denotation of the specification. This technique offers a relational style of denotational semantics, also used in <ref> [9] </ref>. 4.6 The static semantics VDM specifications that are syntactically correct according to the EBNF rules do not necessarily obey the typing and scoping rules of the language. The standard, therefore, provides a formal definition of the well-formedness of a VDM specification: the static semantics SS of the language.
Reference: [10] <author> C.B. Jones. </author> <title> Systematic Software Development us ing VDM (2nd edition). </title> <booktitle> Series in Computer Science. </booktitle> <publisher> Prentice-Hall, </publisher> <address> New Jersey, </address> <year> 1990. </year>
Reference-contexts: One of the most mature formal methods, primarily intended for the formal specification and development of functional aspects of software systems, is the Vienna Development Method (VDM) <ref> [3, 10] </ref>. A central element of VDM is its specification language: VDM-SL. VDM-SL is a wide spectrum specification language: it can be used for highly abstract specifications as well as for specifications at a very low level of abstraction.
Reference: [11] <author> ISO/IEC /JTC1/SC22/WG13. </author> <title> Draft Proposal DP 10514; Third Working Draft Modula-2 Standard. </title>
Reference-contexts: Virtually all aspects of VDM-SL have been formally defined, natural language merely being used for annotation purposes. To the authors' knowledge, the only other language for which this is being done (in the context of ISO standardization) is Modula-2 <ref> [11] </ref>. fl Submitted for publication to ACM SIGPLAN Notices y The authors are official delegates to ISO/IEC JTC1/SC22/WG19 for The Netherlands and Denmark, respectively. Both authors are also active members of BSI IST/5/-/19. 2 In this paper we will present an overview of the standard for VDM-SL.
Reference: [12] <author> Peter Gorm Larsen. </author> <title> The Dynamic Semantics of the BSI/VDM Specification Language. </title> <type> Technical report, </type> <institution> The Institute of Applied Computer Science, </institution> <month> February </month> <year> 1992. </year>
Reference-contexts: Thus, the dynamic semantics is total; even `meaningless' specification constructs are given a meaning (meaningless expressions are denoted by ? while an entire meaningless specification is denoted by an empty set of models). The actual definition of DS <ref> [12] </ref> is given in a denotational way, without using the traditional style of explicitly constructing the denotation. Instead, first the set of all possible models is created, and then, by examining the syntactic specification, this set is restricted to those models that can be considered the denotation of the specification.
Reference: [13] <author> Peter Gorm Larsen and Poul Btgh Lassen. </author> <title> An Exe cutable Subset of Meta-IV with Loose Specification. </title> <editor> In S. Prehn and W.J. Toetenel, editors, </editor> <booktitle> VDM'91 For- mal Software Development Methods, </booktitle> <pages> pages 604-618. </pages> <publisher> Springer-Verlag, LNCS 551, </publisher> <year> 1991. </year> <month> 8 </month>
Reference-contexts: A central element of VDM is its specification language: VDM-SL. VDM-SL is a wide spectrum specification language: it can be used for highly abstract specifications as well as for specifications at a very low level of abstraction. In fact, an executable subset of the language can be defined <ref> [13, 5] </ref>, such that the language is suitable for prototyping. The increasing use of VDM and the growing number of dialects in use have led to the recognition of the need for a standard for VDM-SL. The standardization effort is carried out under the flag of ISO/IEC JTC1/SC22/WG19.
Reference: [14] <author> Brian Q. Monahan. </author> <title> A Semantic Definition of the STC VDM Reference Language. </title> <journal> Doc. </journal> <volume> no. 9, </volume> <month> November </month> <year> 1985. </year>
Reference-contexts: Two main VDM books ([4] and [3]) were used as baseline documents. The semantics of the STC/VDM-RL dialect <ref> [14] </ref> was used as the starting point for the semantics of VDM-SL. Another decision that was taken right from the beginning was that the standard itself should as much as possible be formally defined, in order to make it as precise as possible.
Reference: [15] <author> Nico Plat and Hans Toetenel. </author> <title> A formal transformation from the BSI/VDM-SL concrete syntax to the core abstract syntax. </title> <type> Technical report, </type> <institution> Delft University of Technology, </institution> <month> March </month> <year> 1992. </year>
Reference-contexts: The else-if part which is present in the OAS but not in the CAS is dealt with by constructing a nested CAS if-then-else expression. A preliminary definition of SM can be found in <ref> [15] </ref>. 4.5 The dynamic semantics All VDM specifications which can be represented in the core abstract syntax are given a formal meaning by the dynamic semantics DS. The definition of DS is based on set theory and the mathematical notation which is used has been fixed.
Reference: [16] <author> Dev Sen. </author> <title> Objectives of the British Standardization of a Language to Support the VDM. </title> <editor> In Bjtrner, Jones, Airchinnigh, and Neuhold, editors, </editor> <title> VDM '87 VDM </title>
Reference-contexts: A reference guide for the language following the standard (to be) as closely as possible is [8], another recent text book illustrating the language is [2]. Earlier status reports of the standardization process have been published in <ref> [16] </ref> and [1]. This paper is organized as follows: in the next section we will give a short overview of the history of the language which has led to the initiative for standardization. In section 3 we will briefly describe some essential characteristics of the language.
References-found: 16

