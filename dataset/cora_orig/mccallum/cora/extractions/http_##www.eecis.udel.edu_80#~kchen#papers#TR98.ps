URL: http://www.eecis.udel.edu:80/~kchen/papers/TR98.ps
Refering-URL: http://www.eecis.udel.edu:80/~kchen/research.html
Root-URL: http://www.cis.udel.edu
Email: fkchen, sethi, caseg@cis.udel.edu  
Title: A Measurement-based Admission Control Algorithm using Inductive Machine Learning Technique  
Author: Kai Chen, Adashpal Sethi, John Case 
Date: February 16, 1998  
Address: 19716, USA  
Affiliation: Computer and Information Science Department University of Delaware Newark, DE  
Abstract: This paper describes an experiment on a measurement-based admission control algorithm using inductive machine learning by constructing a decision tree. First of all, we define several decision tree attributes, including traffic specification of a new flow, QoS requirements of a new flow, and network traffic attributes. Then we construct a decision tree based on a number of simulation cases. Finally the decision tree is used to make admission decisions. To verify the effectiveness of this method, we run numerous network simulation cases. Our experiment shows a very low error rate in making admission decisions using the decision tree constructed from the training cases.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Bain and C. Sammut. </author> <title> A framework for behavioural cloning. </title> <editor> In K. F. S. Mug-gleton and D. Michie, editors, </editor> <booktitle> Machine Intelligence 15. </booktitle> <publisher> Oxford University Press, </publisher> <year> 1996. </year>
Reference-contexts: C4.5 itself has been shown very effective for a wide range of tasks, including as a representative sample, assessing trustworthiness of credit card applicants [10], teaching an autopilot to fly <ref> [3, 14, 1] </ref>, and overcoming production in the printing industry [5]. C5.0 generally performs even better (http://www.rulequest.com/). C5.0 takes a number of training cases in the form of pairs of (X; f (X)), and produces a decision tree which is equivalent to f (X).
Reference: [2] <author> Y. Bao. </author> <title> Ocp a: An efficient qos control scheme for real time multimedia communications. </title> <type> Ph.D. Dissertation, </type> <institution> CIS Dept., University of Delaware, </institution> <year> 1998. </year>
Reference-contexts: 1 Introduction Admission control is a process used by the network to regulate its network load <ref> [2] </ref>. This process is performed before starting to transmit a flow. Usually, there is an admission control unit which makes this kind of decisions according to the current network traffic condition and the requirements of the new flow. <p> Admission control can be done in two approaches, parameter-based and measurement-based [8]. Usually, parameter-based approach is based on a priori traffic characteristics; therefore, the admission decision can be achieved by formal analysis <ref> [2] </ref>. In most cases, the parameter-based approach seeks the worst-case or statistical analysis of the new flow's traffic and its impact on the existing flows, hence can be used to support guaranteed or statistical quality of service (QoS) [2]. <p> traffic characteristics; therefore, the admission decision can be achieved by formal analysis <ref> [2] </ref>. In most cases, the parameter-based approach seeks the worst-case or statistical analysis of the new flow's traffic and its impact on the existing flows, hence can be used to support guaranteed or statistical quality of service (QoS) [2]. On the other hand, the measurement-based approach relies on the measurement of actual traffic load and performance in making admission decisions [8] [2]. Because the network situation is dynamic, this approach can only support predictive QoS [2]. <p> statistical analysis of the new flow's traffic and its impact on the existing flows, hence can be used to support guaranteed or statistical quality of service (QoS) <ref> [2] </ref>. On the other hand, the measurement-based approach relies on the measurement of actual traffic load and performance in making admission decisions [8] [2]. Because the network situation is dynamic, this approach can only support predictive QoS [2]. The advantage of measurement-based approach is be able to achieve higher network utilization for real-time applications that are tolerant to QoS deterioration [2]. <p> hence can be used to support guaranteed or statistical quality of service (QoS) <ref> [2] </ref>. On the other hand, the measurement-based approach relies on the measurement of actual traffic load and performance in making admission decisions [8] [2]. Because the network situation is dynamic, this approach can only support predictive QoS [2]. The advantage of measurement-based approach is be able to achieve higher network utilization for real-time applications that are tolerant to QoS deterioration [2]. It relies on measurement of actual traffic load in making admission control decisions [8]. <p> the measurement of actual traffic load and performance in making admission decisions [8] <ref> [2] </ref>. Because the network situation is dynamic, this approach can only support predictive QoS [2]. The advantage of measurement-based approach is be able to achieve higher network utilization for real-time applications that are tolerant to QoS deterioration [2]. It relies on measurement of actual traffic load in making admission control decisions [8]. Measurement-based approach has gained a lot of research interests in Internet community because it is well suited to handle real-time multimedia applications.
Reference: [3] <author> D. K. C. Sammut, S. Hurst and D. Michie. </author> <title> Learning to fly. </title> <editor> In D. Sleeman and P. Edwards, editors, </editor> <booktitle> Proceedings of the Ninth International Conference on Machine Learning. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year>
Reference-contexts: C4.5 itself has been shown very effective for a wide range of tasks, including as a representative sample, assessing trustworthiness of credit card applicants [10], teaching an autopilot to fly <ref> [3, 14, 1] </ref>, and overcoming production in the printing industry [5]. C5.0 generally performs even better (http://www.rulequest.com/). C5.0 takes a number of training cases in the form of pairs of (X; f (X)), and produces a decision tree which is equivalent to f (X).
Reference: [4] <author> C. Casetti, J. Kurose, and D. Towsley. </author> <title> An adaptive algorithm for measurement-based admission control in integrated services packet neworks. </title> <type> Technical Report TR 96-76, </type> <year> 1996. </year>
Reference-contexts: Currently the research on measurement-based admission control algorithm is primarily focused on the traffic specification of the source flow and the admission control process at the switch. Jamin el [8] suggest using token bucket depth and token generation rate as traffic spec. Casetti el <ref> [4] </ref> suggest using only the source peak rate as traffic spec. They all develop a mathematical analysis in the admission control process. In addition, Casetti el [4] propose an adaptive-window algorithm which yields better performance compared to a fixed-window algorithm proposed by Jamin el [8]. <p> Jamin el [8] suggest using token bucket depth and token generation rate as traffic spec. Casetti el <ref> [4] </ref> suggest using only the source peak rate as traffic spec. They all develop a mathematical analysis in the admission control process. In addition, Casetti el [4] propose an adaptive-window algorithm which yields better performance compared to a fixed-window algorithm proposed by Jamin el [8]. However, both of these admission control process are very complex. In this paper we take a different approach in the admission control process. <p> Certainly we are interested in making a decision tree with good probability of success to make admission control decisions. Our study presents quite encouraging preliminary evidence that, by employing some Machine Learning (ML) techniques [14], we may achieve more success than important previous studies [8] <ref> [4] </ref>. We are of course interested in making admission control decisions, and decision tree induction refers to a class of ML techniques which attempt to fit a decision tree tightly to initial (training) data, which decision tree will subsequently provide also a tight fit on further (test) data. <p> The goal of this 4 process is to make sure that admitting the new flow will not jeopardize the QoS of all the flows, including background flows and the new flow. Admission control process done in [8] and <ref> [4] </ref> adapts an analytical model to estimate the effects of the new flow on the delay bounds of all the flows. It involves complex calculation. Our approach for estimation process takes the method of inductive learning. <p> Other parameters are the network traffic attributes which are measured during a measurement time window. The length of a measurement time window may have different effects on the admission control results [8] <ref> [4] </ref>. In our experiment we fix it as 1000 packet times to simplify the problem. Future experiments should be carried out to discover the appropriate length of a measurement time window. In order to construct and verify our admission control decision tree, we run a number of simulation cases.
Reference: [5] <author> B. Evans and D. Fisher. </author> <title> Overcoming process delays with decision tree induction. </title> <journal> IEEE Expert, </journal> <pages> pages 60-66, </pages> <month> February </month> <year> 1994. </year>
Reference-contexts: C4.5 itself has been shown very effective for a wide range of tasks, including as a representative sample, assessing trustworthiness of credit card applicants [10], teaching an autopilot to fly [3, 14, 1], and overcoming production in the printing industry <ref> [5] </ref>. C5.0 generally performs even better (http://www.rulequest.com/). C5.0 takes a number of training cases in the form of pairs of (X; f (X)), and produces a decision tree which is equivalent to f (X).
Reference: [6] <author> Y. Freund and R. Schapire. </author> <title> Experiments with a new boosting algorithm. </title> <booktitle> In Proceedings of the Thirteenth International Conference on Machine Learning (ICML-96), </booktitle> <pages> pages 148-156. </pages> <publisher> Morgan Kaufmann, </publisher> <address> San Francisco, CA, </address> <year> 1996. </year>
Reference-contexts: C5.0 exhibits various improvements in options, speed, and robustness over C4.5. For example, C5.0 provides an option to use boosting, a judicious majority vote technique, which is known in many cases to improve both fit <ref> [6] </ref> and predictions [7] significantly (at some efficiency cost) over, for example, basic decision tree induction.
Reference: [7] <author> Y. Freund and R. Schapire. </author> <title> Boosting the margin: A new explanation for the effectiveness of voting methods. </title> <editor> In D. Fisher, editor, </editor> <booktitle> Proceedings of the Fourteenth International Conference on Machine Learning (ICML-97), </booktitle> <pages> pages 322-330. </pages> <publisher> Mor-gan Kaufmann, </publisher> <address> San Francisco, CA, </address> <year> 1997. </year>
Reference-contexts: C5.0 exhibits various improvements in options, speed, and robustness over C4.5. For example, C5.0 provides an option to use boosting, a judicious majority vote technique, which is known in many cases to improve both fit [6] and predictions <ref> [7] </ref> significantly (at some efficiency cost) over, for example, basic decision tree induction.
Reference: [8] <author> S. Jamin, P. B. Danzig, S. J. Shenker, and L. Zhang. </author> <title> A measurement-based admission control algorithm for integrated services packet networks. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <pages> pages 56-70, </pages> <month> Feburary </month> <year> 1997. </year>
Reference-contexts: On the other hand, a good admission control algorithm should be efficient enough to satisfy the users as much as possible. Admission control can be done in two approaches, parameter-based and measurement-based <ref> [8] </ref>. Usually, parameter-based approach is based on a priori traffic characteristics; therefore, the admission decision can be achieved by formal analysis [2]. <p> On the other hand, the measurement-based approach relies on the measurement of actual traffic load and performance in making admission decisions <ref> [8] </ref> [2]. Because the network situation is dynamic, this approach can only support predictive QoS [2]. The advantage of measurement-based approach is be able to achieve higher network utilization for real-time applications that are tolerant to QoS deterioration [2]. <p> The advantage of measurement-based approach is be able to achieve higher network utilization for real-time applications that are tolerant to QoS deterioration [2]. It relies on measurement of actual traffic load in making admission control decisions <ref> [8] </ref>. Measurement-based approach has gained a lot of research interests in Internet community because it is well suited to handle real-time multimedia applications. Currently the research on measurement-based admission control algorithm is primarily focused on the traffic specification of the source flow and the admission control process at the switch. <p> Currently the research on measurement-based admission control algorithm is primarily focused on the traffic specification of the source flow and the admission control process at the switch. Jamin el <ref> [8] </ref> suggest using token bucket depth and token generation rate as traffic spec. Casetti el [4] suggest using only the source peak rate as traffic spec. They all develop a mathematical analysis in the admission control process. <p> Casetti el [4] suggest using only the source peak rate as traffic spec. They all develop a mathematical analysis in the admission control process. In addition, Casetti el [4] propose an adaptive-window algorithm which yields better performance compared to a fixed-window algorithm proposed by Jamin el <ref> [8] </ref>. However, both of these admission control process are very complex. In this paper we take a different approach in the admission control process. This process is based on inductive machine learning by constructing a decision tree. <p> Certainly we are interested in making a decision tree with good probability of success to make admission control decisions. Our study presents quite encouraging preliminary evidence that, by employing some Machine Learning (ML) techniques [14], we may achieve more success than important previous studies <ref> [8] </ref> [4]. We are of course interested in making admission control decisions, and decision tree induction refers to a class of ML techniques which attempt to fit a decision tree tightly to initial (training) data, which decision tree will subsequently provide also a tight fit on further (test) data. <p> We use token bucket filter as traffic spec of a flow as describe in <ref> [8] </ref>. A token bucket filter has two parameters, token generation rate r and token bucket depth b. r characterizes the average sending rate and b characterizes the worst-case. Sending a bit consumes a token. <p> The goal of this 4 process is to make sure that admitting the new flow will not jeopardize the QoS of all the flows, including background flows and the new flow. Admission control process done in <ref> [8] </ref> and [4] adapts an analytical model to estimate the effects of the new flow on the delay bounds of all the flows. It involves complex calculation. Our approach for estimation process takes the method of inductive learning. <p> Other parameters are the network traffic attributes which are measured during a measurement time window. The length of a measurement time window may have different effects on the admission control results <ref> [8] </ref> [4]. In our experiment we fix it as 1000 packet times to simplify the problem. Future experiments should be carried out to discover the appropriate length of a measurement time window. In order to construct and verify our admission control decision tree, we run a number of simulation cases. <p> Currently we use a kind of source model with exponentially distributed packet size and packet inter-arrival time. To make this kind of traffic source conform to a particular token bucket filter, packets are passed through a token bucket filter <ref> [8] </ref>, as shown in Figure 2. A token bucket filter has two parameters, token generation rate r and token bucket depth b. To reduce attributes, We assume that b is always 10 times the value of r. <p> Our algorithm should be scored by the decision error rate which is 1.7%. This is very promising compared to other measurement-based admission control algorithms <ref> [8] </ref>. In addition, making admission decisions using a decision tree is more simple. Constructing the decision tree from 7763 training cases takes about 5 seconds on a Sun Ultra workstation. We also tried C5.0's boosting feature in constructing our decision tree. It yields a slightly lower error rate (1.6%).
Reference: [9] <editor> D. Michie, D. Spiegelhalter, and C. Taylor, editors. </editor> <title> Machine Learning, Neural and Statistical Classification. </title> <publisher> Ellis Horwood, </publisher> <address> NY, </address> <year> 1994. </year>
Reference-contexts: After getting the decision tree, making an admission decision is trivial. Decision tree induction is one of the most effective forms of learning algorithms [14]. That is the reason we choose this technique in our study. <ref> [9] </ref> reports on a major series of studies and domains comparing ML (including decision tree induction), neural nets, and classical statistical techniques. ML was generally robust over the domains studied including compared to statistics. Of course, each technique had its especially good domains.
Reference: [10] <author> J. Quinlan. C4.5: </author> <title> Programs for Machine Learning. </title> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Mateo, CA, </address> <year> 1992. </year>
Reference-contexts: We have used for the present study Ross Quinlan's powerful decision tree induction software, C5.0 (http://www.rulequest.com/). C5.0 is a general-purpose inductive learning software. It is the successor to his well-known, very successful, and, itself, nearly industrial strength, C4.5 <ref> [10] </ref>. C5.0 exhibits various improvements in options, speed, and robustness over C4.5. <p> C4.5 itself has been shown very effective for a wide range of tasks, including as a representative sample, assessing trustworthiness of credit card applicants <ref> [10] </ref>, teaching an autopilot to fly [3, 14, 1], and overcoming production in the printing industry [5]. C5.0 generally performs even better (http://www.rulequest.com/). C5.0 takes a number of training cases in the form of pairs of (X; f (X)), and produces a decision tree which is equivalent to f (X). <p> In this scenario, inductive learning perfectly fits the needs of our measurement-based admission control algorithm. Study on ML proved that straightaway finding decision trees perfectly consistent with data is not computationally feasible [12] (the trees get too big). C4.5 and C5.0 employ instead some clever, information-theoretic heuristics <ref> [11, 10, 14] </ref> and work very well in practice at providing fits to (training and test) data tight enough to be practical. This makes the computation of our admission control algorithm quick enough.
Reference: [11] <author> J. Quinlan and R. Rivest. </author> <title> Inferring decision trees using the minimum description length principle. </title> <journal> Information and Computation, </journal> <volume> 80 </volume> <pages> 227-248, </pages> <year> 1989. </year>
Reference-contexts: In this scenario, inductive learning perfectly fits the needs of our measurement-based admission control algorithm. Study on ML proved that straightaway finding decision trees perfectly consistent with data is not computationally feasible [12] (the trees get too big). C4.5 and C5.0 employ instead some clever, information-theoretic heuristics <ref> [11, 10, 14] </ref> and work very well in practice at providing fits to (training and test) data tight enough to be practical. This makes the computation of our admission control algorithm quick enough.
Reference: [12] <author> R. Rivest. </author> <title> Learning decision lists. </title> <journal> Machine Learning, </journal> <volume> 2 </volume> <pages> 229-246, </pages> <year> 1987. </year>
Reference-contexts: In this scenario, inductive learning perfectly fits the needs of our measurement-based admission control algorithm. Study on ML proved that straightaway finding decision trees perfectly consistent with data is not computationally feasible <ref> [12] </ref> (the trees get too big). C4.5 and C5.0 employ instead some clever, information-theoretic heuristics [11, 10, 14] and work very well in practice at providing fits to (training and test) data tight enough to be practical. This makes the computation of our admission control algorithm quick enough.
Reference: [13] <author> Rulequest-Research. C5.0: </author> <title> An informal tutorial. </title> <note> http://www.rulequest.com/see5-unix.html, 1997. </note>
Reference-contexts: C5.0 takes a number of training cases in the form of pairs of (X; f (X)), and produces a decision tree which is equivalent to f (X). The performance of decision tree is good when each case belongs to one of a small number of mutually exclusive classes <ref> [13] </ref>. In our experiment, X is a number of relevant attributes 2 defined; f (X) is the admission control function which outputs admission deci-sions yes or no. In this scenario, inductive learning perfectly fits the needs of our measurement-based admission control algorithm. <p> Then the decision tree is verified on the testing cases. We show in the following the decision tree constructed by C5.0. However, decision trees are sometimes very difficult to read. An important feature of C5.0 is its mechanism to convert trees into collections of rules <ref> [13] </ref>. This greatly improves the readability. <p> 8 76 92 ( 2.3%) 60 87 ( 2.2%) boost 68 ( 1.7%) 61 ( 1.5%) &lt;< (a) (b) &lt;-classified as --- ---- 2279 23 (a): class + 38 1660 (b): class - To get a more reliable estimate of predictive accuracy, we tried C5.0's another extra feature f-fold cross-validation <ref> [13] </ref>. This works as follows. The total cases, including training and testing, are divided into f blocks of roughly the same size and class distribution.
Reference: [14] <author> S. J. Russell and P. Norvig. </author> <title> Artificial Intelligence, a Modern Approach. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1995. </year> <month> 20 </month>
Reference-contexts: This process is based on inductive machine learning by constructing a decision tree. Certainly we are interested in making a decision tree with good probability of success to make admission control decisions. Our study presents quite encouraging preliminary evidence that, by employing some Machine Learning (ML) techniques <ref> [14] </ref>, we may achieve more success than important previous studies [8] [4]. <p> C4.5 itself has been shown very effective for a wide range of tasks, including as a representative sample, assessing trustworthiness of credit card applicants [10], teaching an autopilot to fly <ref> [3, 14, 1] </ref>, and overcoming production in the printing industry [5]. C5.0 generally performs even better (http://www.rulequest.com/). C5.0 takes a number of training cases in the form of pairs of (X; f (X)), and produces a decision tree which is equivalent to f (X). <p> In this scenario, inductive learning perfectly fits the needs of our measurement-based admission control algorithm. Study on ML proved that straightaway finding decision trees perfectly consistent with data is not computationally feasible [12] (the trees get too big). C4.5 and C5.0 employ instead some clever, information-theoretic heuristics <ref> [11, 10, 14] </ref> and work very well in practice at providing fits to (training and test) data tight enough to be practical. This makes the computation of our admission control algorithm quick enough. <p> For instance, in our experiment, it takes several seconds to construct a decision tree from thousands of training cases. After getting the decision tree, making an admission decision is trivial. Decision tree induction is one of the most effective forms of learning algorithms <ref> [14] </ref>. That is the reason we choose this technique in our study. [9] reports on a major series of studies and domains comparing ML (including decision tree induction), neural nets, and classical statistical techniques. ML was generally robust over the domains studied including compared to statistics.
References-found: 14

