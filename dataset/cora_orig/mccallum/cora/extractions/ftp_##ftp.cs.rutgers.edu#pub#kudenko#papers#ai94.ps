URL: ftp://ftp.cs.rutgers.edu/pub/kudenko/papers/ai94.ps
Refering-URL: http://athos.rutgers.edu/~kudenko/papers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: e-mail: hlast namei@dfki.uni-sb.de  
Title: An Empirical Analysis of Terminological Representation Systems  
Author: Jochen Heinsohn, Daniel Kudenko, Bernhard Nebel, and Hans-Jurgen Profitlich 
Address: Stuhlsatzenhausweg 3 D-66123 Saarbrucken, Germany  
Affiliation: German Research Center for Artificial Intelligence (DFKI)  
Date: 68(2): 367-397, 1994  
Note: Published in Artificial Intelligence  This work has been carried out in the WIP project which is supported by the German Ministry for Research and Technology BMFT under contract ITW 8901 8. This is a revised and extended version of a paper with the same title published in the Proceedings of the Tenth National Conference on Artificial Intelligence, San Jose, CA, 1992  
Abstract: The family of terminological representation systems has its roots in the representation system kl-one. Since the development of kl-one more than a dozen similar representation systems have been developed by various research groups. These systems vary along a number of dimensions. In this paper, we present the results of an empirical analysis of six such systems. Surprisingly, the systems turned out to be quite diverse, leading to problems when transporting knowledge bases from one system to another. Additionally, the runtime performance between different systems and knowledge bases varied more than we expected. Finally, our empirical runtime performance results give an idea of what runtime performance to expect from such representation systems. These findings complement previously reported analytical results about the computational complexity of reasoning in such systems. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Proceedings of the 8th National Conference of the American Association for Artificial Intelligence, </institution> <address> Boston, MA, Aug. 1990. </address> <publisher> MIT Press. </publisher>
Reference: [2] <author> M. Aigner. </author> <title> Combinatorical Search. </title> <publisher> Teubner, </publisher> <address> Stuttgart, Germany, </address> <year> 1988. </year>
Reference-contexts: ffi KRIS ffi ffi LOOM ffi ffi MESON ffi ffi SB-ONE 50 150 250 No. of concepts R n i e e ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi fi fi fi fi many partial orders exist for a given number of elements <ref> [2, p. 271] </ref>, average case results are probably very hard to obtain except for special cases. For instance, if the subsumption hierarchy forms a tree, classification can be performed in O (n fi log n).
Reference: [3] <author> H. At-Kaci. </author> <title> A Lattice-Theoretic Approach to Computations Based on a Calculus of Partially Ordered Type Structures. </title> <type> PhD thesis, </type> <institution> University of Pennsylvania, </institution> <address> Philadelphia, PA, </address> <year> 1984. </year>
Reference-contexts: While equality reasoning over chains of roles is undecidable, equality reasoning over chains of attributes (i.e., single-valued roles) is quite easy <ref> [3] </ref> and Terminological Representation Systems 18 can be easily added to terminological languages [19].
Reference: [4] <author> F. Baader. </author> <title> Terminological cycles in KL-ONE-based knowledge representation languages. </title> <booktitle> In AAAI-90 [1], </booktitle> <pages> pages 621-626. </pages>
Reference-contexts: If forward references are permitted, then it is possible to make circularly referring definitions. How does the system deal with them? The semantics given in this paper allows cycles, but there are other possible semantics for cyclic definitions <ref> [4, 15, 26] </ref>.
Reference: [5] <editor> F. Baader, H.-J. Burckert, J. Heinsohn, B. Hollunder, J. Muller, B. Nebel, W. Nutt, and H.-J. </editor> <title> Profitlich. Terminological Knowledge Representation: A proposal for a terminological logic. </title> <note> DFKI Technical Memo TM-90-04, Saarbrucken, 1990. A revised version has been published in [27]. </note>
Reference-contexts: The first part covers qualitative facts concerning system features and expressiveness. In order to describe expressiveness, we first developed a "common terminological language" that covers a superset of all terminological languages employed in the systems we considered (see also <ref> [5] </ref>). The analysis of expressiveness shows that the intersection over all representation languages used in the systems is quite small. In the second part we ran different test cases on the systems in order to check out the performance, completeness and the handling of problematical cases. <p> In order to be able to describe the expressiveness of the systems in a common framework and in order to translate knowledge bases from one formalism to another it was necessary to develop a "common terminological language" (CTL), which is specified below (see also <ref> [5] </ref>). The common representational framework of terminological representation systems can be sketched as follows. There exists a number of symbols that belong to different syntactic categories. Usually, there are at least two disjoint categories, concepts and roles. Sometimes also attributes (also called features) and individuals are part of the vocabulary.
Reference: [6] <author> F. Baader and B. Hollunder. KRIS: </author> <title> Knowledge representation and inference system. </title> <journal> SIGART Bulletin, </journal> <volume> 2(3) </volume> <pages> 8-14, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: We hope, however, that our investigation can serve as a starting point for future empirical analyses. The systems we picked for the experiment are: back [32] (Version 4.2, pre-released), classic [30] (Version 1.02, released), kris <ref> [6] </ref> (Version 1.0, experimental), loom [22] (Version of May 1990, pre-released), meson [29] (Version 2.0, released), and sb-one [20] (Version of January 1990, released). Except as noted, all systems were written in CommonLisp and tested on a MacIvory.
Reference: [7] <editor> F. Baader, B. Hollunder, B. Nebel, H.-J. Profitlich, and E. Franconi. </editor> <title> An empirical analysis of optimization techniques for terminological representation systems or "making KRIS get a move on". </title> <editor> In B. Nebel, W. Swartout, and C. Rich, editors, </editor> <booktitle> Principles of Knowledge Representation and Reasoning: Proceedings of the 3rd International Conference, </booktitle> <pages> pages 270-281, </pages> <address> Cambridge, MA, Oct. 1992. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: In fact, together with the WINO group we were able to speed up the kris system significantly. Classification in kris is now almost as fast as in loom and classic <ref> [7] </ref> on the test set considered in this paper.
Reference: [8] <author> T. Bollinger and U. Pletat. </author> <title> The LILOG knowledge representation system. </title> <journal> SIGART Bulletin, </journal> <volume> 2(3) </volume> <pages> 22-27, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: The system developers of a number of systems have improved their systems since we made our experiment, Terminological Representation Systems 4 so runtime performance may have changed. 3 Systems There are a large number of systems which could have been included in an empirical analysis, e.g., kl-one [11], lilog <ref> [8] </ref>, nikl [36], k-rep [23], krs [18], krypton [10], yak [12]. However, we concentrated on a relatively small number of systems. This does not mean that we feel that the systems we did not include (or mention) are not worthwhile to be analyzed.
Reference: [9] <author> R. J. Brachman and H. J. Levesque. </author> <title> The tractability of subsumption in frame-based description languages. </title> <booktitle> In Proceedings of the 4th National Conference of the American Association for Artificial Intelligence, </booktitle> <pages> pages 34-37, </pages> <address> Austin, TX, </address> <year> 1984. </year>
Reference-contexts: present I implicitly present Table 8: expressiveness: additional restrictive operators of auxiliary concepts influences the runtime performance significantly|a point we will return to in Section 6. 5.2 Problematic Cases Discounting the differences in syntax and expressiveness, one might expect that the common semantic framework|as spelled out by Brachman and Levesque <ref> [9] </ref> and sketched in the previous section|leads to identical behavior on inputs that have identical meaning and match the expressiveness of the systems. However, this is unfortunately wrong.
Reference: [10] <author> R. J. Brachman, V. Pigman Gilbert, and H. J. Levesque. </author> <title> An essential hybrid reasoning system: Knowledge and symbol level accounts in KRYPTON. </title> <booktitle> In Proceedings of the 9th International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 532-539, </pages> <address> Los Angeles, CA, </address> <month> Aug. </month> <year> 1985. </year>
Reference-contexts: systems have improved their systems since we made our experiment, Terminological Representation Systems 4 so runtime performance may have changed. 3 Systems There are a large number of systems which could have been included in an empirical analysis, e.g., kl-one [11], lilog [8], nikl [36], k-rep [23], krs [18], krypton <ref> [10] </ref>, yak [12]. However, we concentrated on a relatively small number of systems. This does not mean that we feel that the systems we did not include (or mention) are not worthwhile to be analyzed.
Reference: [11] <author> R. J. Brachman and J. G. Schmolze. </author> <title> An overview of the KL-ONE knowledge representation system. </title> <journal> Cognitive Science, </journal> <volume> 9(2) </volume> <pages> 171-216, </pages> <month> Apr. </month> <year> 1985. </year> <title> Terminological Representation Systems 32 </title>
Reference-contexts: The main reasoning service provided by terminological representation systems is checking for incoherent concept specifications and determining the specialization relation between concepts|the so-called subsumption relation. The first knowledge representation system supporting this kind of representation and reasoning was kl-one <ref> [11] </ref>. Meanwhile, the underlying framework has been adopted by various research groups, and more than a dozen terminological representation systems have been implemented [31]. <p> The system developers of a number of systems have improved their systems since we made our experiment, Terminological Representation Systems 4 so runtime performance may have changed. 3 Systems There are a large number of systems which could have been included in an empirical analysis, e.g., kl-one <ref> [11] </ref>, lilog [8], nikl [36], k-rep [23], krs [18], krypton [10], yak [12]. However, we concentrated on a relatively small number of systems. This does not mean that we feel that the systems we did not include (or mention) are not worthwhile to be analyzed.
Reference: [12] <author> R. Cattoni and E. Franconi. </author> <title> Walking through the semantics of frame-based description languages: A case study. </title> <booktitle> In Proceedings of the Fifth International Symposium on Methodologies for Intelligent systems, </booktitle> <address> Knoxville, TN, Oct. 1990. </address> <publisher> North-Holland. </publisher>
Reference-contexts: improved their systems since we made our experiment, Terminological Representation Systems 4 so runtime performance may have changed. 3 Systems There are a large number of systems which could have been included in an empirical analysis, e.g., kl-one [11], lilog [8], nikl [36], k-rep [23], krs [18], krypton [10], yak <ref> [12] </ref>. However, we concentrated on a relatively small number of systems. This does not mean that we feel that the systems we did not include (or mention) are not worthwhile to be analyzed. The only reason not to include all the systems was the limited amount of time available.
Reference: [13] <author> M. Damiani, S. Bottarelli, M. Migliorati, and C. Peltason. </author> <title> Terminological Information Management in ADKMS. </title> <booktitle> In ESPRIT '90 Conference Proceedings, </booktitle> <address> Dordrecht, Holland, 1990. </address> <publisher> Kluwer. </publisher>
Reference-contexts: Below we give a brief description of the systems: * The back system has been developed at the Technical University of Berlin by the KIT-BACK group as part of the Esprit project ADKMS. The main application is an information system about the financial and organizational structure of a company <ref> [13] </ref>. It is the only system among the ones we tested that is written in prolog. We tested the system on a Solbourne 601/32 using sicstus-prolog 2.1. * classic has been developed in the AI Principles Research Department at AT&T Bell Laboratories.
Reference: [14] <author> P. T. Devanbu, R. J. Brachman, P. G. Selfridge, and B. W. Ballard. </author> <title> LaSSIE: a knowledge-based software information system. </title> <journal> Communications of the ACM, </journal> <volume> 34(5) </volume> <pages> 35-49, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: 1 Introduction Terminological representation systems support the taxonomic representation of terminology for AI applications and provide reasoning services over the terminology. Such systems may be used as stand-alone information retrieval systems <ref> [14] </ref> or as components of larger AI systems, such as natural language systems [37] or design systems [41]. Assuming that the application task is the configuration of computer systems [29], the terminology may contain concepts such as local area network, workstation, disk-less workstation, file server, etc. <p> We tested the system on a Solbourne 601/32 using sicstus-prolog 2.1. * classic has been developed in the AI Principles Research Department at AT&T Bell Laboratories. It supports only a very limited terminological language, but turned out to be very useful for a number of applications <ref> [14] </ref>. * kris has been developed by the WINO project at DFKI. In contrast to other systems, it provides different complete inference algorithms for very expressive languages. In our tests, we mainly used the algorithm for the language ALCFN , except when noted otherwise.
Reference: [15] <author> R. Dionne, E. Mays, and F. J. Oles. </author> <title> A non-well-founded approach to terminological cycles. </title> <booktitle> In Proceedings of the 10th National Conference of the American Association for Artificial Intelligence, </booktitle> <pages> pages 767-773, </pages> <address> San Jose, CA, July 1992. </address> <publisher> MIT Press. </publisher>
Reference-contexts: If forward references are permitted, then it is possible to make circularly referring definitions. How does the system deal with them? The semantics given in this paper allows cycles, but there are other possible semantics for cyclic definitions <ref> [4, 15, 26] </ref>.
Reference: [16] <author> F. M. Donini, M. Lenzerini, D. Nardi, B. Hollunder, W. Nutt, and A. M. Spacamella. </author> <title> The complexity of existential quantification in concept languages. </title> <journal> Artificial Intelligence, </journal> <volume> 53(2-3):309-327, </volume> <year> 1992. </year>
Reference-contexts: for subsumption in terminologies [25], where the third test was designed in a way such that clever sub-sumption algorithms are also bound to use exponential time [25, p. 245]. 2 The fourth test exploits the NP-hardness result for term-subsumption for languages that contain concept-conjunction, value restrictions, and qualified existential restrictions <ref> [16] </ref>. 1.
Reference: [17] <author> F. M. Donini, M. Lenzerini, D. Nardi, and W. Nutt. </author> <title> The complexity of concept languages. </title> <editor> In J. A. Allen, R. Fikes, and E. Sandewall, editors, </editor> <booktitle> Principles of Knowledge Representation and Reasoning: Proceedings of the 2nd International Conference, </booktitle> <pages> pages 151-162, </pages> <address> Cambridge, MA, </address> <month> Apr. </month> <title> 1991. </title> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: In particular, new versions of back, classic, kris, and loom are available that are faster and/or support more expressive languages. 6.1 Hard Cases Computational complexity analyses show that subsumption determination between terms is NP-hard <ref> [17] </ref> or even undecidable [34] for reasonably expressive languages. Even assuming that term-subsumption can be computed in polynomial time (e.g., for restricted languages), subsumption determination in a terminology is still NP-hard [25]. <p> Query: C 0 T D 0 for n = 4; 8; 12 (should fail) 4. The last test was inspired by the algorithms developed by Schmidt-Schau and Smolka [35] and Donini et al. <ref> [17] </ref>. The restrictions in the "8R" parts have to be propagated to the two "9R" parts at the same nesting level (because they should hold for every R) and this leads to an exponential increase of the definition of the concepts C and D.
Reference: [18] <author> B. R. Gaines. </author> <title> Empirical investigations of knowledge representation servers: Design issues and application experience with KRS. </title> <journal> SIGART Bulletin, </journal> <volume> 2(3) </volume> <pages> 45-56, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: number of systems have improved their systems since we made our experiment, Terminological Representation Systems 4 so runtime performance may have changed. 3 Systems There are a large number of systems which could have been included in an empirical analysis, e.g., kl-one [11], lilog [8], nikl [36], k-rep [23], krs <ref> [18] </ref>, krypton [10], yak [12]. However, we concentrated on a relatively small number of systems. This does not mean that we feel that the systems we did not include (or mention) are not worthwhile to be analyzed.
Reference: [19] <author> B. Hollunder and W. Nutt. </author> <title> Subsumption algorithms for concept languages. </title> <note> DFKI Research Report RR-90-04, German Research Center for Artificial Intelligence (DFKI), </note> <institution> Kaiserslautern, </institution> <year> 1990. </year>
Reference-contexts: While equality reasoning over chains of roles is undecidable, equality reasoning over chains of attributes (i.e., single-valued roles) is quite easy [3] and Terminological Representation Systems 18 can be easily added to terminological languages <ref> [19] </ref>.
Reference: [20] <author> A. Kobsa. </author> <title> First experiences with the SB-ONE knowledge representation workbench in natural-language applications. </title> <journal> SIGART Bulletin, </journal> <volume> 2(3) </volume> <pages> 70-76, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: The systems we picked for the experiment are: back [32] (Version 4.2, pre-released), classic [30] (Version 1.02, released), kris [6] (Version 1.0, experimental), loom [22] (Version of May 1990, pre-released), meson [29] (Version 2.0, released), and sb-one <ref> [20] </ref> (Version of January 1990, released). Except as noted, all systems were written in CommonLisp and tested on a MacIvory.
Reference: [21] <author> H. J. Levesque and R. J. Brachman. </author> <title> Expressiveness and tractability in knowledge representation and reasoning. </title> <journal> Computational Intelligence, </journal> <volume> 3 </volume> <pages> 78-93, </pages> <year> 1987. </year>
Reference-contexts: The role-forming operator that restricts the range of a role (Rj C ) leads to intractability in the general case <ref> [21] </ref>. In fact, this operator can be used to model "disjunctive reasoning." Case (a) is an example where modus ponens like reasoning is necessary.
Reference: [22] <author> R. MacGregor. </author> <title> Inside the LOOM description classifier. </title> <journal> SIGART Bulletin, </journal> <volume> 2(3) </volume> <pages> 88-92, </pages> <month> June </month> <year> 1991. </year> <title> Terminological Representation Systems 33 </title>
Reference-contexts: We hope, however, that our investigation can serve as a starting point for future empirical analyses. The systems we picked for the experiment are: back [32] (Version 4.2, pre-released), classic [30] (Version 1.02, released), kris [6] (Version 1.0, experimental), loom <ref> [22] </ref> (Version of May 1990, pre-released), meson [29] (Version 2.0, released), and sb-one [20] (Version of January 1990, released). Except as noted, all systems were written in CommonLisp and tested on a MacIvory.
Reference: [23] <author> E. Mays, R. Dionne, and R. Weida. </author> <title> K-Rep system overview. </title> <journal> SIGART Bulletin, </journal> <volume> 2(3) </volume> <pages> 93-97, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: of a number of systems have improved their systems since we made our experiment, Terminological Representation Systems 4 so runtime performance may have changed. 3 Systems There are a large number of systems which could have been included in an empirical analysis, e.g., kl-one [11], lilog [8], nikl [36], k-rep <ref> [23] </ref>, krs [18], krypton [10], yak [12]. However, we concentrated on a relatively small number of systems. This does not mean that we feel that the systems we did not include (or mention) are not worthwhile to be analyzed.
Reference: [24] <author> B. Nebel. </author> <title> Computational complexity of terminological reasoning in BACK. </title> <journal> Artificial Intelligence, </journal> <volume> 34(3) </volume> <pages> 371-383, </pages> <month> Apr. </month> <year> 1988. </year>
Reference-contexts: Most of them simply confirm the formal or informal specification of the system. Below we summarize some interesting points: back: The negative results for the tests 2 (b) and 3 (a)-(e) are not surprising since back does not compute the cardinality of role-filler sets of sub- and super-roles <ref> [24, 33] </ref>.
Reference: [25] <author> B. Nebel. </author> <title> Terminological reasoning is inherently intractable. </title> <journal> Artificial Intelligence, </journal> <volume> 43 </volume> <pages> 235-249, </pages> <year> 1990. </year>
Reference-contexts: Even assuming that term-subsumption can be computed in polynomial time (e.g., for restricted languages), subsumption determination in a terminology is still NP-hard <ref> [25] </ref>. In order to explore this issue, we designed four tests to determine the behavior of the systems under conditions that are known to be hard. The first three tests exploit the NP-hardness result for subsumption in terminologies [25], where the third test was designed in a way such that clever <p> (e.g., for restricted languages), subsumption determination in a terminology is still NP-hard <ref> [25] </ref>. In order to explore this issue, we designed four tests to determine the behavior of the systems under conditions that are known to be hard. The first three tests exploit the NP-hardness result for subsumption in terminologies [25], where the third test was designed in a way such that clever sub-sumption algorithms are also bound to use exponential time [25, p. 245]. 2 The fourth test exploits the NP-hardness result for term-subsumption for languages that contain concept-conjunction, value restrictions, and qualified existential restrictions [16]. 1. <p> The first three tests exploit the NP-hardness result for subsumption in terminologies [25], where the third test was designed in a way such that clever sub-sumption algorithms are also bound to use exponential time <ref> [25, p. 245] </ref>. 2 The fourth test exploits the NP-hardness result for term-subsumption for languages that contain concept-conjunction, value restrictions, and qualified existential restrictions [16]. 1. <p> When computing the subsumption relation between C n and D n in the example below, some systems may expand the definitions leading to an expanded form that has a size exponential in the size of the original set of definitions. for developing such a suite. 2 Note that the example <ref> [25, p. 245] </ref> is not correct. The second appearance of each role R in all definitions should be R 0 . <p> We model a sequence of concepts in a way such that even if the best known algorithm is used (resembling an algorithm to decide equivalence for non-deterministic finite state automata) exponential time is necessary <ref> [25] </ref>.
Reference: [26] <author> B. Nebel. </author> <title> Terminological cycles: Semantics and computational properties. </title> <editor> In J. F. Sowa, editor, </editor> <booktitle> Principles of Semantic Networks, </booktitle> <pages> pages 331-362. </pages> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1991. </year>
Reference-contexts: One example is the order of the input. So, some systems allow for forward references in term definitions and some do not. Furthermore, some Terminological Representation Systems 12 systems support cyclic definitions (without handling them correctly according to one of the possible semantics <ref> [26] </ref>, however, or permitting cyclic definitions only in some contexts), and some give an error message. Also redefinitions of terms are either marked as errors, processed as revisions of the terminology, or treated as incremental additions to the definition. <p> If forward references are permitted, then it is possible to make circularly referring definitions. How does the system deal with them? The semantics given in this paper allows cycles, but there are other possible semantics for cyclic definitions <ref> [4, 15, 26] </ref>.
Reference: [27] <author> B. Nebel, C. Peltason, and K. von Luck, </author> <title> editors. </title> <booktitle> International Workshop on Terminological Logics, </booktitle> <publisher> Schlo Dagstuhl, </publisher> <month> May </month> <year> 1991. </year> <note> Published as a KIT Report, </note> <institution> TU Berlin, IWBS Report, IBM Germany, Stuttgart, and DFKI Document, DFKI, Kaiserlautern & Saarbrucken. </institution>
Reference: [28] <author> R. Neches, R. Fikes, T. Finin, T. Gruber, R. Patil, T. Senator, and W. R. Swartout. </author> <title> Enabling technology for knowledge sharing. </title> <journal> The AI Magazine, </journal> <volume> 12(3) </volume> <pages> 36-56, </pages> <year> 1991. </year>
Reference-contexts: N Y | Y inference drawn N inference not drawn N/Y result depends on the selected subsumption algorithm in kris Table 11: TBox inferences: test results 5.4 Summary of Qualitative Results The above results show that the ongoing process of specifying a common language for terminological representation and reasoning systems <ref> [28, p. 50-51] </ref> will probably improve the situation in so far as the translation of knowledge bases between different systems will become significantly easier. One main point to observe, however, is the area of pragmatics we touched above, such as permitting forward references.
Reference: [29] <author> B. Owsnicki-Klewe. </author> <title> Configuration as a consistency maintenance task. </title> <editor> In W. Hoeppner, editor, Kunstliche Intelligenz. GWAI-88, </editor> <volume> 12. </volume> <pages> Jahrestagung, pages 77-87, </pages> <address> Eringerfeld, Germany, Sept. 1988. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Such systems may be used as stand-alone information retrieval systems [14] or as components of larger AI systems, such as natural language systems [37] or design systems [41]. Assuming that the application task is the configuration of computer systems <ref> [29] </ref>, the terminology may contain concepts such as local area network, workstation, disk-less workstation, file server, etc. Further, these concepts are interrelated by specialization relationships and the specification of necessary and sufficient conditions. <p> We hope, however, that our investigation can serve as a starting point for future empirical analyses. The systems we picked for the experiment are: back [32] (Version 4.2, pre-released), classic [30] (Version 1.02, released), kris [6] (Version 1.0, experimental), loom [22] (Version of May 1990, pre-released), meson <ref> [29] </ref> (Version 2.0, released), and sb-one [20] (Version of January 1990, released). Except as noted, all systems were written in CommonLisp and tested on a MacIvory. <p> In fact, loom can be considered as a programming environment. * meson has been developed at the Philips Research Laboratories, Hamburg, as a KR tool for different applications, e.g., computer configuration <ref> [29] </ref>.
Reference: [30] <author> P. F. Patel-Schneider, D. L. McGuinness, R. J. Brachman, L. Alperin Res-nick, and A. Borgida. </author> <title> The CLASSIC knowledge representation system: Guiding principles and implementation rational. </title> <journal> SIGART Bulletin, </journal> <volume> 2(3) </volume> <pages> 108-113, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: The only reason not to include all the systems was the limited amount of time available. We hope, however, that our investigation can serve as a starting point for future empirical analyses. The systems we picked for the experiment are: back [32] (Version 4.2, pre-released), classic <ref> [30] </ref> (Version 1.02, released), kris [6] (Version 1.0, experimental), loom [22] (Version of May 1990, pre-released), meson [29] (Version 2.0, released), and sb-one [20] (Version of January 1990, released). Except as noted, all systems were written in CommonLisp and tested on a MacIvory.
Reference: [31] <author> P. F. Patel-Schneider, B. Owsnicki-Klewe, A. Kobsa, N. Guarino, R. Mac-Gregor, W. S. Mark, D. McGuinness, B. Nebel, A. Schmiedel, and J. Yen. </author> <title> Term subsumption languages in knowledge representation. </title> <journal> The AI Magazine, </journal> <volume> 11(2) </volume> <pages> 16-23, </pages> <year> 1990. </year>
Reference-contexts: The first knowledge representation system supporting this kind of representation and reasoning was kl-one [11]. Meanwhile, the underlying framework has been adopted by various research groups, and more than a dozen terminological representation systems have been implemented <ref> [31] </ref>. These systems vary along a number of important dimensions, such as implementation status, expressiveness of the underlying representation language, completeness of the reasoning services, efficiency, user interface, interface functionality, and integration with other modes of reasoning.
Reference: [32] <author> C. Peltason. </author> <title> The BACK system an overview. </title> <journal> SIGART Bulletin, </journal> <volume> 2(3) </volume> <pages> 114-119, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: The only reason not to include all the systems was the limited amount of time available. We hope, however, that our investigation can serve as a starting point for future empirical analyses. The systems we picked for the experiment are: back <ref> [32] </ref> (Version 4.2, pre-released), classic [30] (Version 1.02, released), kris [6] (Version 1.0, experimental), loom [22] (Version of May 1990, pre-released), meson [29] (Version 2.0, released), and sb-one [20] (Version of January 1990, released). Except as noted, all systems were written in CommonLisp and tested on a MacIvory.
Reference: [33] <author> C. Peltason, A. Schmiedel, C. Kindermann, and J. Quantz. </author> <title> The BACK system revisited. </title> <type> KIT Report 75, </type> <institution> Department of Computer Science, Technische Universitat Berlin, </institution> <address> Berlin, Germany, </address> <month> Sept. </month> <year> 1989. </year>
Reference-contexts: Most of them simply confirm the formal or informal specification of the system. Below we summarize some interesting points: back: The negative results for the tests 2 (b) and 3 (a)-(e) are not surprising since back does not compute the cardinality of role-filler sets of sub- and super-roles <ref> [24, 33] </ref>.
Reference: [34] <author> M. Schmidt-Schau. </author> <title> Subsumption in KL-ONE is undecidable. </title> <editor> In R. Brach-man, H. J. Levesque, and R. Reiter, editors, </editor> <booktitle> Principles of Knowledge Representation and Reasoning: Proceedings of the 1st International Conference, </booktitle> <pages> pages 421-431, </pages> <address> Toronto, </address> <note> ON, May 1989. Morgan Kaufmann. Terminological Representation Systems 34 </note>
Reference-contexts: Case (b) shows an example where reasoning by case is required. (a) Input: C : Query: C T (8R: E) (b) Input: CkD, E : Query: E T 8R: ( 1S) 5. Role-value maps (RC = SC) are known to cause undecidability of subsump-tion <ref> [34] </ref>. <p> In particular, new versions of back, classic, kris, and loom are available that are faster and/or support more expressive languages. 6.1 Hard Cases Computational complexity analyses show that subsumption determination between terms is NP-hard [17] or even undecidable <ref> [34] </ref> for reasonably expressive languages. Even assuming that term-subsumption can be computed in polynomial time (e.g., for restricted languages), subsumption determination in a terminology is still NP-hard [25].
Reference: [35] <author> M. Schmidt-Schau and G. Smolka. </author> <title> Attributive concept descriptions with complements. </title> <journal> Artificial Intelligence, </journal> <volume> 48 </volume> <pages> 1-26, </pages> <year> 1991. </year>
Reference-contexts: Query: C 0 T D 0 for n = 4; 8; 12 (should fail) 4. The last test was inspired by the algorithms developed by Schmidt-Schau and Smolka <ref> [35] </ref> and Donini et al. [17]. The restrictions in the "8R" parts have to be propagated to the two "9R" parts at the same nesting level (because they should hold for every R) and this leads to an exponential increase of the definition of the concepts C and D.
Reference: [36] <author> J. G. Schmolze and W. S. Mark. </author> <title> The NIKL experience. </title> <journal> Computational Intelligence, </journal> <volume> 6 </volume> <pages> 48-69, </pages> <year> 1991. </year>
Reference-contexts: system developers of a number of systems have improved their systems since we made our experiment, Terminological Representation Systems 4 so runtime performance may have changed. 3 Systems There are a large number of systems which could have been included in an empirical analysis, e.g., kl-one [11], lilog [8], nikl <ref> [36] </ref>, k-rep [23], krs [18], krypton [10], yak [12]. However, we concentrated on a relatively small number of systems. This does not mean that we feel that the systems we did not include (or mention) are not worthwhile to be analyzed.
Reference: [37] <author> N. K. Sondheimer and B. Nebel. </author> <title> A logical-form and knowledge-base design for natural language generation. </title> <booktitle> In Proceedings of the 5th National Conference of the American Association for Artificial Intelligence, </booktitle> <pages> pages 612-618, </pages> <address> Philadelphia, PA, </address> <month> Aug. </month> <year> 1986. </year>
Reference-contexts: 1 Introduction Terminological representation systems support the taxonomic representation of terminology for AI applications and provide reasoning services over the terminology. Such systems may be used as stand-alone information retrieval systems [14] or as components of larger AI systems, such as natural language systems <ref> [37] </ref> or design systems [41]. Assuming that the application task is the configuration of computer systems [29], the terminology may contain concepts such as local area network, workstation, disk-less workstation, file server, etc. Further, these concepts are interrelated by specialization relationships and the specification of necessary and sufficient conditions.
Reference: [38] <author> J. Thomson. </author> <title> Semantic validation of inferences in terminological representation systems. </title> <type> KIT Report 90, </type> <institution> Department of Computer Science, Technische Universitat Berlin, </institution> <address> Berlin, Germany, </address> <month> Apr. </month> <year> 1991. </year>
Reference-contexts: This is, of course, not surprising, but shows that standard test suites should be developed for these systems. 1 1 Our set of tests and the tests developed for the back system <ref> [38] </ref> may be a starting point Terminological Representation Systems 20 There are a number of other dimensions where the systems differ, such as the integration with other reasoning services, the functionality of graphical user interfaces, ease of installation, and user friendliness, but these are issues which are very difficult to evaluate.
Reference: [39] <author> W. Wahlster, E. Andre, S. Bandyopadhyay, W. Graf, and T. Rist. WIP: </author> <title> the coordinated generation of multimodal presentations from a common representation. </title> <editor> In A. Ortony, J. Slack, and O. Stock, editors, </editor> <booktitle> Computational Theories of Communication and their Applications, </booktitle> <pages> pages 121-144. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, Heidelberg, New York, </address> <year> 1992. </year>
Reference-contexts: Nowadays, it seems reasonable to build upon an existing terminological representation system instead of building one from scratch. Indeed, this was the idea in our project wip, which is aimed at knowledge-based, multi-modal presentation of information such as operating instructions <ref> [39, 40] </ref>. However, it was by no means clear which system to choose. For this reason, we analyzed a subset of the available systems empirically. It turned out that the effort we had to invest could have well been used to implement an additional prototypical terminological representation system.
Reference: [40] <author> W. Wahlster, E. Andre, W. Finkler, H.-J. Profitlich, and T. Rist. </author> <title> Plan-based integration of natural language and graphics generation. </title> <journal> Artificial Intelligence, </journal> <volume> 62(3), </volume> <year> 1993. </year> <note> To appear. </note>
Reference-contexts: Nowadays, it seems reasonable to build upon an existing terminological representation system instead of building one from scratch. Indeed, this was the idea in our project wip, which is aimed at knowledge-based, multi-modal presentation of information such as operating instructions <ref> [39, 40] </ref>. However, it was by no means clear which system to choose. For this reason, we analyzed a subset of the available systems empirically. It turned out that the effort we had to invest could have well been used to implement an additional prototypical terminological representation system.
Reference: [41] <author> B. C. Williams. </author> <title> Interaction-based invention: Designing novel devices from first principles. </title> <booktitle> In AAAI-90 [1], </booktitle> <pages> pages 349-356. </pages>
Reference-contexts: 1 Introduction Terminological representation systems support the taxonomic representation of terminology for AI applications and provide reasoning services over the terminology. Such systems may be used as stand-alone information retrieval systems [14] or as components of larger AI systems, such as natural language systems [37] or design systems <ref> [41] </ref>. Assuming that the application task is the configuration of computer systems [29], the terminology may contain concepts such as local area network, workstation, disk-less workstation, file server, etc. Further, these concepts are interrelated by specialization relationships and the specification of necessary and sufficient conditions.
References-found: 41

