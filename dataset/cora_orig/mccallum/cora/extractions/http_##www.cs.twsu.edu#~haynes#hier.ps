URL: http://www.cs.twsu.edu/~haynes/hier.ps
Refering-URL: http://adept.cs.twsu.edu/~thomas/publications.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Type Inheritance in Strongly Typed Genetic Programming  
Author: Thomas D. Haynes, Dale A. Schoenefeld and Roger L. Wainwright 
Date: December 22, 1996  
Abstract: This paper appears as chapter 18 of Kenneth E. Kinnear, Jr. and Peter J. Angeline, editors Advances in Genetic Programming 2, MIT Press, 1996. Abstract Genetic Programming (GP) is an automatic method for generating computer programs, which are stored as data structures and manipulated to evolve better programs. An extension restricting the search space is Strongly Typed Genetic Programming (STGP), which has, as a basic premise, the removal of closure by typing both the arguments and return values of functions, and by also typing the terminal set. A restriction of STGP is that there are only two levels of typing. We extend STGP by allowing a type hierarchy, which allows more than two levels of typing. 
Abstract-found: 1
Intro-found: 1
Reference: [Bui and Eppley 1995] <author> Bui, T. N. and Eppley, P. H. </author> <year> (1995). </year> <title> A hybrid genetic algorithm for the maximum clique problem. </title> <editor> In Eshelman, L., editor, </editor> <booktitle> Proceedings of the Sixth International Conference on Genetic Algorithms, </booktitle> <pages> pages 478-484, </pages> <address> San Francisco, CA. </address> <publisher> Morgan Kaufmann Publishers, Inc. </publisher>
Reference: [Chandraasekharam et al. 1993] <author> Chandraasekharam, R., Subhramanian, S., and Chaudhury, S. </author> <year> (1993). </year> <title> Genetic algorithm for node partioning problem and applications in VLSI design. </title> <booktitle> IEE Proceedings, Part E: Computers and Digital Techniques, </booktitle> <volume> 140(5) </volume> <pages> 255-260. </pages>
Reference: [Elmasri and Navathe 1994] <author> Elmasri, R. and Navathe, S. B. </author> <year> (1994). </year> <title> Fundamentals of Database Systems. </title> <publisher> The Benjamin/Cummings Publishing Company, </publisher> <address> Redwood City, CA. </address> <month> 12 </month>
Reference-contexts: g, f 3, 4 g 300 1300 267 ff 2, 3, 4 g, f 4, 5 g f 6, 7 g, f 0, 1, 2, 3 g, f 7, 8 g g f 2, 3, 4 g, f 7, 8 g 11 is to determine the FDs between the attributes <ref> [Elmasri and Navathe 1994, Fayyad and Uthurusamy 1995] </ref>. An example is with R = fA; B; C; D; Eg; AB ! CDE, i.e. given that the values for A and B are the same in two tuples, then so are the values for C, D, and E.
Reference: [Fayyad and Uthurusamy 1995] <editor> Fayyad, U. M. and Uthurusamy, R., editors (1995). </editor> <booktitle> Proceedings of the First International Conference on Knowledge Discovery and Data Mining (KDD-95). </booktitle> <publisher> AAAI Press, </publisher> <address> Menlo Park, CA. </address>
Reference-contexts: g, f 3, 4 g 300 1300 267 ff 2, 3, 4 g, f 4, 5 g f 6, 7 g, f 0, 1, 2, 3 g, f 7, 8 g g f 2, 3, 4 g, f 7, 8 g 11 is to determine the FDs between the attributes <ref> [Elmasri and Navathe 1994, Fayyad and Uthurusamy 1995] </ref>. An example is with R = fA; B; C; D; Eg; AB ! CDE, i.e. given that the values for A and B are the same in two tuples, then so are the values for C, D, and E.
Reference: [Haynes 1995] <author> Haynes, T. </author> <year> (1995). </year> <title> Clique detection via genetic programming. </title> <type> Technical Report UTULSA-MCS-95-02, </type> <institution> The University of Tulsa. </institution>
Reference-contexts: But it is possible that STLC and STRC have some distinguishing characteristics that do not permit all relationships between them to be expressed. 4 Clique Detection We have modified our STGP system, GPengine, to investigate research into type inheritance <ref> [Haynes 1995] </ref>. Specifically we consider the problem of finding all the cliques, i.e. the maximal subgraphs of a graph having an edge joining each pair of its vertices [Kalmanson 1986], in an undirected or directed graph. <p> In part this is due to the fact that a variable length structure is needed to find all the cliques, while a fixed length chromosome can be used to find the maximum clique. Our preliminary work on the clique detection problem can be found in <ref> [Haynes 1995] </ref>. A variable length chromosome is necessary because, in general, there will be an unknown number of cliques per graph. Potential cliques, denoted as candidate cliques, need to be evaluated to determine if they actually are cliques. The chromosome is then interpreted as a collection of candidate cliques. <p> By generation 500, it is evident that a plateau has been reached, and that the average fitness is only increasing slightly. S-expressions for the candidate maximal cliques corresponding to generations 0, 100, 200, 300, and 400 can be found in <ref> [Haynes 1995] </ref>. The resultant maximal cliques for generations 0, 100, 200, 300, and 400 are shown in Table 3. Notice the steady addition of cliques of cardinality three.
Reference: [Haynes et al. 1995] <author> Haynes, T., Wainwright, R., Sen, S., and Schoenefeld, D. </author> <year> (1995). </year> <title> Strongly typed genetic programming in evolving cooperation strategies. </title> <editor> In Eshelman, L., editor, </editor> <booktitle> Proceedings of the Sixth International Conference on Genetic Algorithms, </booktitle> <pages> pages 271-278, </pages> <address> San Francisco, CA. </address> <publisher> Morgan Kaufmann Publishers, Inc. </publisher>
Reference-contexts: This is shown in both the paper in which Montana introduced STGP [Montana 1995] and in our research into multiagent behavioral strategies <ref> [Haynes et al. 1995] </ref>. STGP is able to reduce the search space by only allowing syntactically correct programs to be generated and produced by the crossover and mutation operators. <p> The only restriction is that the data type for each element be specified beforehand. This causes the initialization process and the various genetic operations to only construct syntactically correct trees. A benefit of syntactically correct trees is that the search space is reduced. This has been shown in <ref> [Montana 1995, Haynes et al. 1995] </ref> to decrease the search time. One key concept of STGP is the idea of generic functions, which is a mechanism for defining a class of functions, and defining generic data types for these functions.
Reference: [Kalmanson 1986] <author> Kalmanson, K. </author> <year> (1986). </year> <title> An Introduction to Discrete Mathematics and its Applications. </title> <publisher> Addison-Wesley. </publisher>
Reference-contexts: Specifically we consider the problem of finding all the cliques, i.e. the maximal subgraphs of a graph having an edge joining each pair of its vertices <ref> [Kalmanson 1986] </ref>, in an undirected or directed graph.
Reference: [Koza 1992] <author> Koza, J. R. </author> <year> (1992). </year> <title> Genetic Programming: On the Programming of Computers by Means of Natural Selection. </title> <publisher> MIT Press. </publisher>
Reference-contexts: Unnatural methods are less likely to be correct for all possible situations. [Sebesta 1993] (p. 17) Strongly Typed Genetic Programming (STGP) [Montana 1995] is used to restrict the search space considered in the Genetic Programming (GP) paradigm <ref> [Koza 1992] </ref>. This is shown in both the paper in which Montana introduced STGP [Montana 1995] and in our research into multiagent behavioral strategies [Haynes et al. 1995]. <p> Functions which require arguments form the branches of the parse trees, and are called non-terminals. The set of all terminals is called the terminal set, and the set of all non-terminals is called the non-terminal set. Note the term non-terminal is what Koza <ref> [Koza 1992] </ref> calls a function. We follow this notation. One serious constraint on the user-defined terminals and functions is closure, which means that all of the functions must accept arguments of a single data type and return values of the same data type. <p> Not only must the division operator handle division by 0, it must also convert Ralph into a numeric value. In essence, standard GP has a "flat" type space of only one level. Montana [Montana 1995] claims that closure is a serious limitation to genetic programming. Koza <ref> [Koza 1992] </ref> describes a way to relax the closure constraint using the concept of constrained syntax structures. Koza used tree generation routines which only generated legal trees. He also only used operations on the parse trees which maintained legal syntactic structures.
Reference: [Montana 1995] <author> David J. Montana. </author> <title> Strongly typed genetic programming. </title> <journal> Evolutionary Computation, </journal> <volume> 3(2) </volume> <pages> 199-230, </pages> <year> 1995. </year>
Reference-contexts: 1 Introduction A program written in a language that does not support natural ways to express the required algorithms will necessarily use unnatural methods. Unnatural methods are less likely to be correct for all possible situations. [Sebesta 1993] (p. 17) Strongly Typed Genetic Programming (STGP) <ref> [Montana 1995] </ref> is used to restrict the search space considered in the Genetic Programming (GP) paradigm [Koza 1992]. This is shown in both the paper in which Montana introduced STGP [Montana 1995] and in our research into multiagent behavioral strategies [Haynes et al. 1995]. <p> methods are less likely to be correct for all possible situations. [Sebesta 1993] (p. 17) Strongly Typed Genetic Programming (STGP) <ref> [Montana 1995] </ref> is used to restrict the search space considered in the Genetic Programming (GP) paradigm [Koza 1992]. This is shown in both the paper in which Montana introduced STGP [Montana 1995] and in our research into multiagent behavioral strategies [Haynes et al. 1995]. STGP is able to reduce the search space by only allowing syntactically correct programs to be generated and produced by the crossover and mutation operators. <p> An example of closure is given in the prefix expression div Ralph 0. Not only must the division operator handle division by 0, it must also convert Ralph into a numeric value. In essence, standard GP has a "flat" type space of only one level. Montana <ref> [Montana 1995] </ref> claims that closure is a serious limitation to genetic programming. Koza [Koza 1992] describes a way to relax the closure constraint using the concept of constrained syntax structures. Koza used tree generation routines which only generated legal trees. <p> The only restriction is that the data type for each element be specified beforehand. This causes the initialization process and the various genetic operations to only construct syntactically correct trees. A benefit of syntactically correct trees is that the search space is reduced. This has been shown in <ref> [Montana 1995, Haynes et al. 1995] </ref> to decrease the search time. One key concept of STGP is the idea of generic functions, which is a mechanism for defining a class of functions, and defining generic data types for these functions. <p> With too high a value of fi, the clique detection system is actually hampered in the attempt to find all of the cliques in a graph. 7 Conclusion The STGP as described by Montana <ref> [Montana 1995] </ref> deals with genericity but not with other aspects of object oriented methods. We propose an extension of STGP to deal with type hierarchies, and in particular, with polymorphism and dynamic binding aspects of the object oriented paradigm.
Reference: [Murthy et al. 1995] <author> Murthy, A. S., Parthasarthy, G., and Sastry, V. U. K. </author> <year> (1995). </year> <title> Clique finding a genetic approach. </title> <booktitle> In Proceedings of the First IEEE Conference on Evolutionary Computation, </booktitle> <pages> pages 18-21, </pages> <address> Piscataway, NJ. </address> <publisher> IEEE. </publisher>
Reference: [Sebesta 1993] <author> Sebesta, R. W. </author> <year> (1993). </year> <title> Concepts of Programming Languages. </title> <publisher> The Benjamin/Cummings Publishing Company. </publisher> <pages> 13 </pages>
Reference-contexts: 1 Introduction A program written in a language that does not support natural ways to express the required algorithms will necessarily use unnatural methods. Unnatural methods are less likely to be correct for all possible situations. <ref> [Sebesta 1993] </ref> (p. 17) Strongly Typed Genetic Programming (STGP) [Montana 1995] is used to restrict the search space considered in the Genetic Programming (GP) paradigm [Koza 1992]. <p> In order to allow for a minimal function set, generic types are introduced. Generic types must be instantiated during node construction. In effect, generic types allow for a two level type hierarchy, as shown in Figure 1. From object oriented programming <ref> [Sebesta 1993] </ref>, we know that it can be desirable to have more than two levels in a hierarchy. A simple example involving cars and numbers illustrates this desire.
References-found: 11

