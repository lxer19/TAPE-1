URL: http://www.cs.brandeis.edu/~miguel/Paper.ps.gz
Refering-URL: http://www.cs.brandeis.edu/~miguel/
Root-URL: http://www.cs.brandeis.edu
Email: schneider@iai.csic.es  
Title: Plan execution based on Active Perception: Adding Hints to Plans  
Author: Miguel Schneider-Fontan 
Note: DRAFT  
Address: La Poveda, Arganda del Rey Madrid 28500  
Affiliation: Instituto de Automatica Industrial (IAI) Consejo Superior de Investigaciones Cientficas (CSIC)  
Abstract-found: 0
Intro-found: 1
Reference: <author> Agre, P. E. and Chapman, D.: </author> <year> 1990, </year> <title> What are plans for?, </title> <booktitle> Robotics and Autonomous Systems 6, </booktitle> <pages> 17-34. </pages>
Reference: <author> Aloimonos, J.: </author> <year> 1990, </year> <title> Purposive and qualitative active vision, </title> <booktitle> DARPA Image Understanding Workshop, </booktitle> <pages> pp. 816-828. </pages>
Reference: <author> Arkin, R. C.: </author> <year> 1989a, </year> <title> Integrating behavioral, perceptual and world knowledge in reactive navigation, </title> <editor> in P. Maes (ed.), </editor> <booktitle> Designing Autonomous Agents. </booktitle>
Reference: <author> Arkin, R. C.: </author> <year> 1989b, </year> <title> Towards the unification of navigational planning and reactive control, </title> <booktitle> AAAI Spring Symposium on Robot Navigation, </booktitle> <pages> pp. 1-5. </pages>
Reference: <author> Ballard, D. H.: </author> <year> 1991, </year> <title> Animate vision, </title> <booktitle> Artificial Intelligence 48(1), </booktitle> <pages> 57-86. </pages>
Reference: <author> Bohrenstein, J. and Koren, Y.: </author> <year> 1991, </year> <title> The vector field histogram-fast obstacle avoidance for mobile robots, </title> <journal> IEEE Transactions on Robotics and Automation 7(3), </journal> <pages> 278-288. </pages>
Reference: <author> Bonasso, R. P., Firby, R. J., Gat, E., Kortenkamp, D., Miller, D. and Slack, M.: </author> <year> 1997, </year> <title> Experiences with an architecture for intelligent, reactive agents, </title> <journal> Journal of Experimental and Theoretical Artificial Intelligence 9(1). </journal>
Reference-contexts: Related to our approach, Firby (1987) presents a system that makes use of higher level primitives that take care of, and hide, low level control details. More specifically, the 3T architecture <ref> (Bonasso, Firby, Gat, Kortenkamp, Miller and Slack 1997) </ref> decomposes the problem of robot control into three interacting functional modules such as planning, sensor processing and execution. The architecture is composed of: a dynamically re-programmable set of reactive skills, which represent the architecture's connection with the world.
Reference: <author> Brooks, M. J., de Agapito, L., Huynh, D. Q. and Baumela, L.: </author> <year> 1996, </year> <title> Direct Methods for Self-Calibration of a Moving Stereo Head, </title> <booktitle> Proceedings ECCV'96, </booktitle> <volume> Vol. </volume> <pages> 2, </pages> <address> Cambridge, UK, </address> <pages> pp. 415-426. </pages>
Reference: <author> Brooks, R. A.: </author> <year> 1986, </year> <title> A robust layered control system for a mobile robot, </title> <journal> IEEE Journal of Robotics and Automati-tion RA-2(1), </journal> <pages> 14-23. </pages>
Reference-contexts: Attributes can be classified according to their granularity or semantic content. Scalar attributes are the most basic kind of attributes, and are like registers in the subsumption architecture <ref> (Brooks 1986) </ref>. Attributes of these kind can be thresholds on sensor readings, or, for example, the value in the [0; 1] range of the Accessibility Function where the Avoid behavior considers the obstacle close enough to start the avoidance maneuver. <p> Low level behaviors must first be implemented and then, based on the knowledge of how these work and interact with the environment, higher level aptitudes can be developed, as in purely bottom-up subsumption conception <ref> (Brooks 1986) </ref>. Until it is determined how the system is behaving in the environment, and how the different behaviors work, it is troublesome to communicate with the system in a reliable fashion.
Reference: <author> Brooks, R. A.: </author> <year> 1989, </year> <title> A robot that walks; emergent behavior from a carefully evolved network, </title> <booktitle> Neural Computation 1(2), </booktitle> <pages> 253-262. </pages>
Reference: <author> Brooks, R. A.: </author> <year> 1990a, </year> <title> The behavior language; user's guide, </title> <journal> A.I. </journal> <volume> Memo 1227, </volume> <publisher> M.I.T. </publisher>
Reference-contexts: However, the hormone system of the Behavior Language <ref> (Brooks 1990a) </ref> permitted dynamic activation, and some systems where based on the dynamic evolution of internal parameters (Parker 1992). Our goal is to use attributes, and their dynamic modification, to obtain a new set of behavior capabilities that permit the creation of a simple interaction language.
Reference: <author> Brooks, R. A.: </author> <year> 1990b, </year> <title> Elephants don't play chess, </title> <booktitle> Robotics and Autonomous Systems 6, </booktitle> <pages> 3-15. </pages>
Reference: <author> Brooks, R. A.: </author> <year> 1991, </year> <title> Intelligence without representation, </title> <booktitle> Artificial Intelligence 47, </booktitle> <pages> 139-159. </pages>
Reference-contexts: To solve the scalability problem we insist on preserving the philosophy of incremental bottom-up implementation of perception/action capabilities of the robot <ref> (Brooks 1991) </ref>, and have proposed the use of immediate planning behaviors as a substrate to generate a canonical set of well grounded symbols the user may utilize to express plans.
Reference: <author> Connell, J. H.: </author> <year> 1989, </year> <title> A colony architecture for an artificial creature, M.I.T. A.I. </title> <type> Lab Tech Report 1151, </type> <institution> M. I. T. Artificial Intelligence Laboratory. </institution>
Reference: <author> Connell, J. H.: </author> <year> 1991, </year> <title> SSS: A hybrid architecture applied to robot navigation, </title> <booktitle> IEEE International Conference on Robotics and Automation, Nice, France, </booktitle> <pages> pp. </pages> <month> 2719-2724. </month> <title> DRAFT PLAN EXECUTION BASED ON ACTIVE PERCEPTION: ADDING HINTS TO PLANS 30 Elfes, </title> <editor> A.: </editor> <year> 1986, </year> <title> A distributed control architecture for an autonomous mobile robot, </title> <booktitle> Artificial Intelligence 1(2), </booktitle> <pages> 135-144. </pages>
Reference-contexts: A clear example of a hybrid architecture is the SSS system implemented on the TJ robot <ref> (Connell 1991) </ref>. This hybrid system combines a servo-control layer, a "subsumption" layer, and a symbolic layer, and event detectors link the subsumption and the symbolic layers.
Reference: <author> Faugeras, O.: </author> <year> 1993, </year> <title> Three-dimensional Computer Vision: A Geometric Viewpoint, </title> <publisher> MIT Press. </publisher>
Reference: <author> Fikes, R. E. and Nilsson, N. J.: </author> <year> 1971, </year> <title> STRIPS: A new approach to the application of theorem proving to problem solving, </title> <booktitle> Artificial Intelligence 2, </booktitle> <pages> 189-208. </pages>
Reference: <author> Firby, R. J.: </author> <year> 1987, </year> <title> An investigation into reactive planning in complex domains, </title> <booktitle> Proceedings, Sixth National Conference on Artificial Intelligence, Seattle, </booktitle> <pages> pp. 202-206. </pages>
Reference: <author> Flynn, A. M., Brooks, R. A., Wells, W. M. and Barret, D. S.: </author> <year> 1989, </year> <title> The world's largest one cubic inch robot, </title> <booktitle> Proceedings IEEE Micro Electro Mechanical Systems, IEEE, </booktitle> <pages> pp. 98-101. </pages>
Reference: <author> Haigh, K. and Veloso, M.: </author> <year> 1997, </year> <title> High-level planning and low level-level execution: Towards a complete robotic agent, </title> <booktitle> Proceedings of the International conference on Autonomous Agents (AA). </booktitle>
Reference-contexts: Like in our architecture, the upper layers of the layered control architecture of the robot Xavier <ref> (Simmons, Goodwin, Haigh, Koenig and Sullivan 1997) </ref> provide guidance to the lower layers, while the latter handle all the details and events that the upper layers abstract away. <p> However, this system uses a task scheduling based on a symbolic planning architecture <ref> (Haigh and Veloso 1997) </ref>, and deliberative and reactive control is provided by a general purpose software framework called Task Control Architecture (TCA) (Simmons 1994), which is more like a robot operating system.
Reference: <author> Haralick, R. M. and Shapiro, L. G.: </author> <year> 1992, </year> <title> Computer and Robot Vision, </title> <journal> Vol. </journal> <volume> 1, </volume> <publisher> Addison Wesley. </publisher>
Reference: <author> Harnard, S.: </author> <year> 1995, </year> <title> Grounding symbolic capacity in robotic capacity, </title> <editor> in L. Steels and R. Brooks (eds), </editor> <booktitle> The "artificial life" route to "artificial intelligence", </booktitle> <address> New Haven: </address> <publisher> Lawrence Erlbaum. </publisher>
Reference: <author> Hayes-Roth, B.: </author> <year> 1993, </year> <title> Opportunistic control of action in intelligent agents, </title> <journal> IEEE Transactions on Systems, Man, and Cybernetic 23(6), </journal> <pages> 1575-1587. </pages>
Reference: <author> Horswill, I. D.: </author> <year> 1992, </year> <title> Characterizing adaptation by constraint, Toward a practice of autonomous systems. </title> <booktitle> Proceedings of the First European Conference on Artificial Life, </booktitle> <publisher> MIT Press/Bradford Books, </publisher> <pages> pp. 58-63. </pages>
Reference: <author> Horswill, I. D.: </author> <year> 1993, </year> <title> Specialitation of Perceptual Processes, </title> <type> PhD thesis, </type> <institution> MIT Artificial Intelligence Laboratory. </institution>
Reference: <author> Horswill, I. D.: </author> <year> 1995, </year> <title> Analysis of adaptation and environment, </title> <booktitle> Artificial Intelligence 73(1-2), </booktitle> <pages> 1-30. </pages>
Reference-contexts: However, the emphasis of his work is to demonstrate that a sequence of transformations derive a specialized system from a more general one <ref> (Horswill 1995) </ref>. Developers of symbolic planning systems are also seeking to incorporate "advice-taking" mechanisms into their systems. The Advisable Planner (AP) project (Myers 1996) accepts a variety of instructions and advise from a user, and employ them to guide the generation of a plan.
Reference: <author> Horswill, I. D. and Brooks, R. A.: </author> <year> 1988, </year> <title> Situated vision in a dynamic world: Chasing objects, </title> <journal> AAAI-88 pp. </journal> <pages> 796-800. </pages>
Reference: <author> Kaebling, L. P. and Rosenschein, S. J.: </author> <year> 1990, </year> <title> Action and planning in embedded agents, </title> <booktitle> Robotics and Autonomous Systems 6, </booktitle> <pages> 35-48. </pages>
Reference: <author> Kosecka, J., Bajcsy, R. and Mintz, M.: </author> <year> 1994, </year> <title> Control of visually guided behaviors, GRASP Lab. </title> <type> Technical Report 367, </type> <institution> Department of Computer and Infomation Science, University of Pennsylvania. </institution>
Reference: <author> Lozano-Perez, T.: </author> <year> 1983, </year> <title> Spatial planning: A configuration space approach, </title> <journal> IEEE Transactions on Computers C-32(2), </journal> <pages> 395-407. </pages>
Reference: <author> Maes, P.: </author> <year> 1989, </year> <title> How to do the right thing, </title> <journal> Connection Science Journal 1(3), </journal> <pages> 291-323. </pages>
Reference: <author> Malcolm, C. and Smithers, T.: </author> <year> 1990, </year> <title> Symbol grounding via a hybrid architecture in an autonomous assembly system, </title> <booktitle> Robotics and Autonomous Systems 6, </booktitle> <pages> 123-144. </pages>
Reference-contexts: However, the symbolic and reactive layers are clearly separable, and they are linked by using "contingency tables". In the same way we ground symbols through behaviors, the assembly system SO-MASS <ref> (Malcolm and Smithers 1990) </ref> grounds its automated planner through a single hierarchy of behavioral modules instead of a twin hierarchy of sensing and action.
Reference: <author> Mataric, M. J.: </author> <year> 1992, </year> <title> Integration of representation into goal-driven behavior-based robots, </title> <journal> IEEE Transactions on Robotics and Automation 8(3), </journal> <pages> 304-312. </pages>
Reference: <author> Moravec, H. P.: </author> <year> 1977, </year> <title> Towards automatic visual obstacle avoidance, </title> <booktitle> Proceedings of the 5th International Joint Conference on Artificial Intelligence (IJCAI) p. </booktitle> <pages> 584. </pages>
Reference: <author> Moravec, H. P.: </author> <year> 1988, </year> <title> Sensor fusion in certainty grids for mobile robots, </title> <journal> AI Mag. </journal> <pages> pp. 61-74. </pages>
Reference: <author> Myers, K. L.: </author> <year> 1996, </year> <title> Advisable planning systems, </title> <editor> in A. Tate (ed.), </editor> <title> Advanced Planning Technology, </title> <publisher> AAAI Press, </publisher> <address> Menlo Park, CA. </address>
Reference-contexts: However, the emphasis of his work is to demonstrate that a sequence of transformations derive a specialized system from a more general one (Horswill 1995). Developers of symbolic planning systems are also seeking to incorporate "advice-taking" mechanisms into their systems. The Advisable Planner (AP) project <ref> (Myers 1996) </ref> accepts a variety of instructions and advise from a user, and employ them to guide the generation of a plan.
Reference: <author> Noreils, F. R. and Chatila, R. G.: </author> <year> 1995, </year> <title> Plan execution monitoring and control architecture for mobile robots, </title> <journal> IEEE Journal of Robotics and Automatition 11(2), </journal> <pages> 255-266. </pages>
Reference-contexts: In the definition of a communication language with the robot it has to be decided the DRAFT PLAN EXECUTION BASED ON ACTIVE PERCEPTION: ADDING HINTS TO PLANS 12 granularity of the message. Some systems <ref> (Noreils and Chatila 1995) </ref> opted to access and change low level parameters of the control system.
Reference: <author> Parker, L. E.: </author> <year> 1992, </year> <title> Adaptive action selection for cooperative agent teams, From Animals to Animats: </title> <booktitle> International Conference on Simulation of Adaptive Behavior, </booktitle> <pages> pp. </pages> <month> 442-450. </month> <title> DRAFT PLAN EXECUTION BASED ON ACTIVE PERCEPTION: ADDING HINTS TO PLANS 31 Payton, </title> <editor> D. W.: </editor> <year> 1990, </year> <title> Internalized plans: A representation for action resources, </title> <booktitle> Robotics and Autonomous Systems 6, </booktitle> <pages> 89-103. </pages>
Reference-contexts: However, the hormone system of the Behavior Language (Brooks 1990a) permitted dynamic activation, and some systems where based on the dynamic evolution of internal parameters <ref> (Parker 1992) </ref>. Our goal is to use attributes, and their dynamic modification, to obtain a new set of behavior capabilities that permit the creation of a simple interaction language. Attributes can be classified according to their granularity or semantic content.
Reference: <author> Pfeifer, R.: </author> <year> 1996, </year> <title> Symbols, patterns, and behavior: towards a new understanding of intelligence, </title> <booktitle> Proc. Japanese Conference on Artificial Intelligence, Tokyo, </booktitle> <pages> pp. 1-15. </pages>
Reference: <author> Saffioti, A., Ruspini, E. H. and Konolige, K.: </author> <year> 1993, </year> <title> A fuzzy controller for flakey, an autonomous mobile robot, </title> <type> Technical Note 529, </type> <institution> Artificial Intelligence Center. SRI International, </institution> <address> 333 Ravenswood Ave. Menlo Park, CA 94025, USA. </address>
Reference-contexts: Instead of using behaviors and their attributes as symbols the robot Flakey (Saffiotti et al. 1997) uses complex behaviors <ref> (Saffioti et al. 1993) </ref> at the task level which are sequenced and their progress is monitored through events in the local perceptual space (LPS), an egocentric symbolic representation of the local space where information from different DRAFT PLAN EXECUTION BASED ON ACTIVE PERCEPTION: ADDING HINTS TO PLANS 26 sensor modalities, and
Reference: <author> Saffiotti, A., Konolige, K., Myers, K. and Ruspini, E. H.: </author> <year> 1997, </year> <title> The saphira architecture: A design for autonomy, </title> <journal> Journal of Experimental and Theoretical Artificial Intelligence (JETAI). Special issue on Architecures for Physical Agents 9(1), </journal> <pages> 215-235. </pages>
Reference-contexts: Instead of using behaviors and their attributes as symbols the robot Flakey <ref> (Saffiotti et al. 1997) </ref> uses complex behaviors (Saffioti et al. 1993) at the task level which are sequenced and their progress is monitored through events in the local perceptual space (LPS), an egocentric symbolic representation of the local space where information from different DRAFT PLAN EXECUTION BASED ON ACTIVE PERCEPTION: ADDING
Reference: <author> Schneider-Fontan, M.: </author> <year> 1996, </year> <title> Planning based on active perception, </title> <type> PhD thesis, </type> <institution> Universidad Complutense Madrid, Facultad CC. Fisicas. </institution>
Reference: <author> Simmons, R.: </author> <year> 1994, </year> <title> Structured control for autonomous robots, </title> <journal> IEEE Transactions on robotics and Automation 10(1), </journal> <pages> 34-43. </pages>
Reference-contexts: However, this system uses a task scheduling based on a symbolic planning architecture (Haigh and Veloso 1997), and deliberative and reactive control is provided by a general purpose software framework called Task Control Architecture (TCA) <ref> (Simmons 1994) </ref>, which is more like a robot operating system. The TCA generates a task net, where each node in the net can be either decomposed into other nets or, like a Motor-Behavior, is an interface to the robot.
Reference: <author> Simmons, R., Goodwin, R., Haigh, K., Koenig, S. and Sullivan, J.: </author> <year> 1997, </year> <title> A layered architecture for office delivery robots, </title> <booktitle> First International Conference on Autonomous Agents, </booktitle> <address> Marina del Rey, CA, </address> <pages> pp. 245-242. </pages>
Reference-contexts: Like in our architecture, the upper layers of the layered control architecture of the robot Xavier <ref> (Simmons, Goodwin, Haigh, Koenig and Sullivan 1997) </ref> provide guidance to the lower layers, while the latter handle all the details and events that the upper layers abstract away.
Reference: <author> Thomson, A. M.: </author> <year> 1977, </year> <title> The navigation system of the JPL robot, </title> <booktitle> Proceedings of the International Joint Conference on Artificial Inteligence, </booktitle> <pages> pp. 749-757. </pages>
Reference: <author> Wilkins, D. E. and Myers, K. L.: </author> <year> 1995, </year> <title> A common knowledge representation for plan generation and reactive execution, </title> <journal> Journal of Logic and Computation 5, </journal> <pages> 731-761. </pages> <note> DRAFT </note>
Reference-contexts: In a similar symbolic and top-down implementation fashion, the ACT <ref> (Wilkins and Myers 1995) </ref> formalism is a language that tries to get planning and execution systems to speak a common language by generating complex plans and the reactive execution of these plans in dynamic environments.
References-found: 46

