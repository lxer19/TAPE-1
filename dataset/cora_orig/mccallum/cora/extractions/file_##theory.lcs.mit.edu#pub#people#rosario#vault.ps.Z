URL: file://theory.lcs.mit.edu/pub/people/rosario/vault.ps.Z
Refering-URL: http://theory.lcs.mit.edu/~rosario/research.html
Root-URL: 
Title: Secure Distributed Storage and Retrieval  
Author: Juan A. Garay Rosario Gennaro Charanjit Jutla Tal Rabin 
Address: PO Box 704 Yorktown Heights, NY 10598, USA  
Affiliation: IBM T.J. Watson Research Center  
Abstract: In his well-known Information Dispersal Algorithm paper, Rabin showed a way to distribute information in n pieces among n servers in such a way that recovery of the information is possible in the presence of up to t inactive servers. An enhanced mechanism to enable construction in the presence of malicious faults, which can intentionally modify their pieces of the information, was later presented by Krawczyk. Yet, these methods assume that the malicious faults occur only at reconstruction time. In this paper we address the more general problem of secure storage and retrieval of information (SSRI), and guarantee that also the process of storing the information is correct even when some of the servers fail. Our protocols achieve this while maintaining the (asymptotical) space optimality of the above methods. We also consider SSRI with the added requirement of confidentiality, by which no party except for the rightful owner of the information is able to learn anything about it. This is achieved through novel applications of cryptographic techniques, such as the distributed generation of receipts, distributed key management via threshold cryptography, and "blinding." An interesting byproduct of our scheme is the construction of a secret sharing scheme with shorter shares size in the amortized sense. An immediate practical application of our work is a system for the secure deposit of sensitive data. We also extend SSRI to a "proactive" setting, where an adversary may corrupt all the servers during the lifetime of the system, but only a fraction during any given time interval.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Blahut. </author> <title> Theory and Practice of Error Control Codes. </title> <publisher> Addison-Wesley, </publisher> <year> 1984. </year>
Reference-contexts: In a nutshell, SIDA makes use of a cryptographic tool called distributed fingerprints, which basically consists of each processor's piece being hashed|the fingerprints, and then distributing this value among all servers using the coding function of an error correcting code (e.g., Reed-Solomon <ref> [1] </ref>) that is able to reconstruct from altered pieces. This way, the correct servers are able to reconstruct the fingerprints using the code's decoding function, check whether pieces of the file were correctly returned, and finally reconstruct F from the correct pieces using the IDA algorithm. Our contributions. <p> This is clearly (asymptotically) optimal if only n t pieces are to be used for reconstruction. Our methods also maintain this latter bound. We remark that reconstruction of information is also possible through error correcting codes. However, the inherent blow-up factor deteriorates to n n2t in this case (see <ref> [1, 27] </ref>). We now turn to describe the various cryptographic mechanisms that our protocols will make use of. 2.4 Cryptographic terminology and tools The cryptographic primitives used in the protocols are summarized in Figure 1.
Reference: [2] <editor> C. Boyd. Digital Multisignatures. In H. Baker and F. Piper, editors, </editor> <booktitle> Cryptography and Coding, </booktitle> <pages> pages 241-246. </pages> <publisher> Claredon Press, </publisher> <year> 1989. </year>
Reference-contexts: Threshold cryptography was originated in works by Desmedt [11], Boyd <ref> [2] </ref>, Croft and Harris [8], and Desmedt and Frankel [12]. A survey of threshold cryptography techniques can be found in [13]. Protocols for discrete log-based threshold cryptosystems can be found in [2, 4, 12, 23, 30, 19]. Protocols for RSA-based threshold cryptosystems include [9, 10, 15, 18, 32]. <p> Threshold cryptography was originated in works by Desmedt [11], Boyd [2], Croft and Harris [8], and Desmedt and Frankel [12]. A survey of threshold cryptography techniques can be found in [13]. Protocols for discrete log-based threshold cryptosystems can be found in <ref> [2, 4, 12, 23, 30, 19] </ref>. Protocols for RSA-based threshold cryptosystems include [9, 10, 15, 18, 32]. In Appendix B we present an example of threshold cryptography applied to RSA [33]. 2.4.2 Blinding The cryptographic technique called "blinding" [5] can be explained as follows.
Reference: [3] <author> R. Canetti and Amir Herzberg. </author> <title> Maintaining security in the presence of transient faults. </title> <editor> In Y. Desmedt, editor, </editor> <booktitle> Advances in Cryptology | Crypto '94, </booktitle> <pages> pages 425-438, </pages> <address> Berlin, </address> <year> 1994. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 839. </note>
Reference-contexts: interesting by-product of our constructions is a secret sharing scheme which achieves shorter size shares (in the amortized sense) than the one of [28]. * "Proactive" SSRI: SSRI robust against an adversary which may corrupt all servers during the system's lifetime, but only up to t during each time interval <ref> [29, 3] </ref>. The remainder of the paper is organized as follows. In the next section we present the model, necessary definitions, and description of the tools that we use in this paper. <p> If such lifetime is long then the assumption that only t servers can be broken into may become unreasonable or too optimistic. Proactive Security <ref> [29, 3] </ref> is an area of research that deals with secure distributed systems in the presence of an adversary that may corrupt all the servers during the whole lifetime of the system, although only t at a time (i.e., the assumption is that during a pre-specified interval of time, say a
Reference: [4] <author> M. Cerecedo, T. Matsumoto, and H. Imai. </author> <title> Efficient and secure multiparty generation of digital signatures based on discrete logarithms. </title> <journal> IEICE Trans. Fundamentals, </journal> <volume> E76-A(4):532-545, </volume> <year> 1993. </year>
Reference-contexts: Threshold cryptography was originated in works by Desmedt [11], Boyd [2], Croft and Harris [8], and Desmedt and Frankel [12]. A survey of threshold cryptography techniques can be found in [13]. Protocols for discrete log-based threshold cryptosystems can be found in <ref> [2, 4, 12, 23, 30, 19] </ref>. Protocols for RSA-based threshold cryptosystems include [9, 10, 15, 18, 32]. In Appendix B we present an example of threshold cryptography applied to RSA [33]. 2.4.2 Blinding The cryptographic technique called "blinding" [5] can be explained as follows.
Reference: [5] <author> D. Chaum. </author> <title> Blind signatures for untraceable payments. </title> <booktitle> In Advances in Cryptology | Crypto '82, </booktitle> <pages> pages 199-203, </pages> <address> Berlin, </address> <year> 1982. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. </note>
Reference-contexts: One novel component of our confidentiality protocol for the solution of the above problem is its distributed key management aspect, achieved through the application of a combination of threshold cryptography (see Section 2.4.1) and blinding techniques <ref> [5] </ref>. 2 The contributions of this paper can be summarized as follows: * We consider the more general problem of information storage and retrieval, guaranteeing that also the process of storing the information is secure in the presence of (maliciously) failing servers. <p> Protocols for discrete log-based threshold cryptosystems can be found in [2, 4, 12, 23, 30, 19]. Protocols for RSA-based threshold cryptosystems include [9, 10, 15, 18, 32]. In Appendix B we present an example of threshold cryptography applied to RSA [33]. 2.4.2 Blinding The cryptographic technique called "blinding" <ref> [5] </ref> can be explained as follows. Suppose that a server holds a secret key DK which allows it to compute decryptions in the public key encryption scheme E. Assume also that the matching encryption key EK is known. <p> ElGamal). Appendix C contains an example of blinding using RSA. A novelty of our scheme is the way we use blinding. Traditionally this technique was introduced to obtain signatures on messages that the server would not know <ref> [5] </ref>. This was in turn used to produce untraceable electronic cash. We use blinding in the context of decryptions rather than signatures in order to enhance the security of our distributed key management. The use of blinding shares the key among the players.
Reference: [6] <author> P. Chen, J. Garay, A. Herzberg, and H. Krawczyk. </author> <title> Design and implementation of modular key management protocol and IP secure tunnel. </title> <booktitle> In Proc. USENIX Security '95, </booktitle> <pages> pages 41-54, </pages> <address> Salt Lake City, UTAH, </address> <year> 1996. </year>
Reference-contexts: Possible realizations of the latter are via time stamps, or just nonces. See, e.g., <ref> [6] </ref>. 3 It is assumed that at any time during the life of the system, at most t of the n servers can malfunction, possibly in malicious ways. (This reflects the security concern we concentrate on in this paper, that of break-ins.) Further, we assume that the faulty servers can even
Reference: [7] <author> B. Chor, S. Goldwasser, S. Micali, and B. Awerbuch. </author> <title> Verifiable Secret Sharing and Achieving Simultaneity in the Presence of Faults. </title> <booktitle> In Proceeding 26th Annual Symposium on the Foundations of Computer Science, </booktitle> <pages> pages 383-395. </pages> <publisher> IEEE, </publisher> <year> 1985. </year>
Reference-contexts: Under this scheme, how would the user be able to retrieve his file confidentially? Remember that in our design he communicates with the system through a single gateway, which means that if only the standard techniques of secret sharing reconstruction were used <ref> [34, 7] </ref>, then the gateway would know all the information available to the user.
Reference: [8] <author> R. A. Croft and S. P. Harris. </author> <title> Public-key cryptography and re-usable shared secrets. </title> <editor> In H. Baker and F. Piper, editors, </editor> <booktitle> Cryptography and Coding, </booktitle> <pages> pages 189-201. </pages> <publisher> Claredon Press, </publisher> <year> 1989. </year> <month> 18 </month>
Reference-contexts: Threshold cryptography was originated in works by Desmedt [11], Boyd [2], Croft and Harris <ref> [8] </ref>, and Desmedt and Frankel [12]. A survey of threshold cryptography techniques can be found in [13]. Protocols for discrete log-based threshold cryptosystems can be found in [2, 4, 12, 23, 30, 19]. Protocols for RSA-based threshold cryptosystems include [9, 10, 15, 18, 32].
Reference: [9] <author> Alfredo De Santis, Yvo Desmedt, Yair Frankel, and Moti Yung. </author> <title> How to share a function securely. </title> <booktitle> In Proc. 26th Annual Symp. on the Theory of Computing, </booktitle> <pages> pages 522-533. </pages> <publisher> ACM, </publisher> <year> 1994. </year>
Reference-contexts: A survey of threshold cryptography techniques can be found in [13]. Protocols for discrete log-based threshold cryptosystems can be found in [2, 4, 12, 23, 30, 19]. Protocols for RSA-based threshold cryptosystems include <ref> [9, 10, 15, 18, 32] </ref>. In Appendix B we present an example of threshold cryptography applied to RSA [33]. 2.4.2 Blinding The cryptographic technique called "blinding" [5] can be explained as follows.
Reference: [10] <author> Y. Desmedt and Y. Frankel. </author> <title> Shared generation of authenticators and signatures. </title> <editor> In J. Feigen-baum, editor, </editor> <booktitle> Advances in Cryptology | Crypto '91, </booktitle> <pages> pages 457-469, </pages> <address> Berlin, </address> <year> 1991. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 576. </note>
Reference-contexts: A survey of threshold cryptography techniques can be found in [13]. Protocols for discrete log-based threshold cryptosystems can be found in [2, 4, 12, 23, 30, 19]. Protocols for RSA-based threshold cryptosystems include <ref> [9, 10, 15, 18, 32] </ref>. In Appendix B we present an example of threshold cryptography applied to RSA [33]. 2.4.2 Blinding The cryptographic technique called "blinding" [5] can be explained as follows.
Reference: [11] <author> Yvo Desmedt. </author> <title> Society and group oriented cryptography: A new concept. </title> <editor> In C. Pomerance, editor, </editor> <booktitle> Advances in Cryptology | Crypto '87, </booktitle> <pages> pages 120-127, </pages> <address> Berlin, </address> <year> 1987. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 293. </note>
Reference-contexts: Threshold cryptography was originated in works by Desmedt <ref> [11] </ref>, Boyd [2], Croft and Harris [8], and Desmedt and Frankel [12]. A survey of threshold cryptography techniques can be found in [13]. Protocols for discrete log-based threshold cryptosystems can be found in [2, 4, 12, 23, 30, 19]. Protocols for RSA-based threshold cryptosystems include [9, 10, 15, 18, 32].
Reference: [12] <author> Yvo Desmedt and Yair Frankel. </author> <title> Threshold cryptosystems. </title> <editor> In G. Brassard, editor, </editor> <booktitle> Advances in Cryptology | Crypto '89, </booktitle> <pages> pages 307-315, </pages> <address> Berlin, </address> <year> 1989. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 435. </note>
Reference-contexts: Threshold cryptography was originated in works by Desmedt [11], Boyd [2], Croft and Harris [8], and Desmedt and Frankel <ref> [12] </ref>. A survey of threshold cryptography techniques can be found in [13]. Protocols for discrete log-based threshold cryptosystems can be found in [2, 4, 12, 23, 30, 19]. Protocols for RSA-based threshold cryptosystems include [9, 10, 15, 18, 32]. <p> Threshold cryptography was originated in works by Desmedt [11], Boyd [2], Croft and Harris [8], and Desmedt and Frankel [12]. A survey of threshold cryptography techniques can be found in [13]. Protocols for discrete log-based threshold cryptosystems can be found in <ref> [2, 4, 12, 23, 30, 19] </ref>. Protocols for RSA-based threshold cryptosystems include [9, 10, 15, 18, 32]. In Appendix B we present an example of threshold cryptography applied to RSA [33]. 2.4.2 Blinding The cryptographic technique called "blinding" [5] can be explained as follows.
Reference: [13] <author> Yvo G. Desmedt. </author> <title> Threshold cryptography. </title> <journal> European Transactions on Telecommunications, </journal> <volume> 5(4) </volume> <pages> 449-457, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: Threshold cryptography was originated in works by Desmedt [11], Boyd [2], Croft and Harris [8], and Desmedt and Frankel [12]. A survey of threshold cryptography techniques can be found in <ref> [13] </ref>. Protocols for discrete log-based threshold cryptosystems can be found in [2, 4, 12, 23, 30, 19]. Protocols for RSA-based threshold cryptosystems include [9, 10, 15, 18, 32].
Reference: [14] <author> Y. Frankel, P. Gemmell, P. Mackenzie, and M. Yung. </author> <title> Optimal resilience proactive public-key cryptosystems. </title> <booktitle> In Proc. 38th Annual Symp. on Foundations of Computer Science, </booktitle> <pages> pages 384-393. </pages> <publisher> IEEE, </publisher> <year> 1997. </year>
Reference-contexts: As there exist distributed threshold signature/decryption protocols with optimal fault-tolerance (n 2t + 1) <ref> [15, 18, 20, 14, 32] </ref>, it follows that our protocols can also exhibit optimal fault-tolerance. 3 Integrity Only The protocols of this section extend the methods of [31, 27] for integrity to achieve SSRI while maintaining (asymptotically) the space optimality.
Reference: [15] <author> Y. Frankel, P. Gemmell, and M. Yung. </author> <title> Witness-based Cryptographic Program Checking and Robust Function Sharing. </title> <booktitle> In Proc. 28th Annual Symp. on the Theory of Computing, </booktitle> <pages> pages 499-508. </pages> <publisher> ACM, </publisher> <year> 1996. </year>
Reference-contexts: A survey of threshold cryptography techniques can be found in [13]. Protocols for discrete log-based threshold cryptosystems can be found in [2, 4, 12, 23, 30, 19]. Protocols for RSA-based threshold cryptosystems include <ref> [9, 10, 15, 18, 32] </ref>. In Appendix B we present an example of threshold cryptography applied to RSA [33]. 2.4.2 Blinding The cryptographic technique called "blinding" [5] can be explained as follows. <p> As there exist distributed threshold signature/decryption protocols with optimal fault-tolerance (n 2t + 1) <ref> [15, 18, 20, 14, 32] </ref>, it follows that our protocols can also exhibit optimal fault-tolerance. 3 Integrity Only The protocols of this section extend the methods of [31, 27] for integrity to achieve SSRI while maintaining (asymptotically) the space optimality.
Reference: [16] <author> Yair Frankel, P. Gemmell, P. Mackenzie, and M. Yung. </author> <title> Proactive RSA. </title> <editor> In B. Kaliski, editor, </editor> <booktitle> Advances in Cryptology | Crypto '97, </booktitle> <pages> pages 440-454, </pages> <address> Berlin, </address> <year> 1997. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 1294. </note>
Reference-contexts: Several proactive techniques have been presented in the past. Proactive protocols for secret sharing were presented in [25], while proactive protocols for threshold cryptography were introduced in <ref> [24, 19, 16] </ref>. A basic technique of Proactive Security is to introduce refreshment phases in the system. During a refreshment phase a server that has been broken into but is not anymore under the control of the adversary, can be restored to its initial state. <p> Once he reads more than t + 1 of such shares the adversary will be able to decrypt the users' files. But the shares of the secret keys can be proactivized using the proactive techniques used in threshold cryptography (for discrete log-based schemes see [24]; for RSA-based schemes see <ref> [16] </ref>). The refreshment phases for proactive threshold cryptography schemes have a communication complexity proportional to the size of the keys.
Reference: [17] <author> J. Garay, R. Gennaro, C. Jutla, and T. Rabin. </author> <title> Secure distributed storage and retrieval. </title> <editor> In M. Mavronicolas and P. Tsigas, editors, </editor> <booktitle> 11th International Workshop, </booktitle> <volume> WDAG '97, </volume> <pages> pages 275-289, </pages> <address> Berlin, </address> <year> 1997. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 1320. </note>
Reference-contexts: However, this combination of very fl A preliminary version of this paper appeared in Proc. 11th International Workshop on Distributed Algorithms (WDAG '97) <ref> [17] </ref>. 1 desirable properties is achieved at the expense of limiting the kind of faults against which the algorithm is robust, namely, by assuming that available pieces are always unmodified.
Reference: [18] <author> R. Gennaro, S. Jarecki, H. Krawczyk, and T. Rabin. </author> <title> Robust and efficient sharing of RSA functions. </title> <editor> In N. Koblitz, editor, </editor> <booktitle> Advances in Cryptology | Crypto '96, </booktitle> <pages> pages 157-172, </pages> <address> Berlin, </address> <year> 1996. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 1109. </note>
Reference-contexts: A survey of threshold cryptography techniques can be found in [13]. Protocols for discrete log-based threshold cryptosystems can be found in [2, 4, 12, 23, 30, 19]. Protocols for RSA-based threshold cryptosystems include <ref> [9, 10, 15, 18, 32] </ref>. In Appendix B we present an example of threshold cryptography applied to RSA [33]. 2.4.2 Blinding The cryptographic technique called "blinding" [5] can be explained as follows. <p> As there exist distributed threshold signature/decryption protocols with optimal fault-tolerance (n 2t + 1) <ref> [15, 18, 20, 14, 32] </ref>, it follows that our protocols can also exhibit optimal fault-tolerance. 3 Integrity Only The protocols of this section extend the methods of [31, 27] for integrity to achieve SSRI while maintaining (asymptotically) the space optimality.
Reference: [19] <author> R. Gennaro, S. Jarecki, H. Krawczyk, and T. Rabin. </author> <title> Robust threshold DSS signatures. </title> <editor> In Ueli Maurer, editor, </editor> <booktitle> Advances in Cryptology | Eurocrypt '96, </booktitle> <pages> pages 354-371, </pages> <address> Berlin, </address> <year> 1996. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 1070. </note>
Reference-contexts: Threshold cryptography was originated in works by Desmedt [11], Boyd [2], Croft and Harris [8], and Desmedt and Frankel [12]. A survey of threshold cryptography techniques can be found in [13]. Protocols for discrete log-based threshold cryptosystems can be found in <ref> [2, 4, 12, 23, 30, 19] </ref>. Protocols for RSA-based threshold cryptosystems include [9, 10, 15, 18, 32]. In Appendix B we present an example of threshold cryptography applied to RSA [33]. 2.4.2 Blinding The cryptographic technique called "blinding" [5] can be explained as follows. <p> Several proactive techniques have been presented in the past. Proactive protocols for secret sharing were presented in [25], while proactive protocols for threshold cryptography were introduced in <ref> [24, 19, 16] </ref>. A basic technique of Proactive Security is to introduce refreshment phases in the system. During a refreshment phase a server that has been broken into but is not anymore under the control of the adversary, can be restored to its initial state.
Reference: [20] <author> R. Gennaro, M. Rabin, and T Rabin. </author> <title> Simplified vss and fast-track multiparty computations with applications to threshold cryptography. </title> <type> Manuscript, </type> <year> 1997. </year>
Reference-contexts: As there exist distributed threshold signature/decryption protocols with optimal fault-tolerance (n 2t + 1) <ref> [15, 18, 20, 14, 32] </ref>, it follows that our protocols can also exhibit optimal fault-tolerance. 3 Integrity Only The protocols of this section extend the methods of [31, 27] for integrity to achieve SSRI while maintaining (asymptotically) the space optimality.
Reference: [21] <author> S. Goldwasser and S. Micali. </author> <title> Probabilistic encryption. </title> <journal> JCSS, </journal> <volume> 28(2) </volume> <pages> 270-299, </pages> <month> April </month> <year> 1984. </year>
Reference-contexts: SK and is given signatures on messages of its choice, will not be able to produce the signature for a new message. We say that the encryption scheme E, is secure if it is semantically secure as defined in <ref> [21] </ref>. Informally that means that the encryption scheme is randomized and that the value E (m; r) (which denotes the encryption of m using coin tosses r) is computationally indistinguishable from a truly random string.
Reference: [22] <author> Shafi Goldwasser, Silvio Micali, and Ronald L. Rivest. </author> <title> A digital signature scheme secure against adaptive chosen-message attacks. </title> <journal> SIAM J. Computing, </journal> <volume> 17(2) </volume> <pages> 281-308, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: We make the usual security assumptions on these cryptographic primitives as summarized below. We say that the signature scheme S is secure if it is secure against adaptive chosen message attack as defined in <ref> [22] </ref>.
Reference: [23] <author> L. Harn. </author> <title> Group oriented (t; n) digital signature scheme. </title> <journal> IEE Proc.-Comput.Digit.Tech, </journal> <volume> 141(5) </volume> <pages> 307-313, </pages> <month> Sept </month> <year> 1994. </year> <month> 19 </month>
Reference-contexts: Threshold cryptography was originated in works by Desmedt [11], Boyd [2], Croft and Harris [8], and Desmedt and Frankel [12]. A survey of threshold cryptography techniques can be found in [13]. Protocols for discrete log-based threshold cryptosystems can be found in <ref> [2, 4, 12, 23, 30, 19] </ref>. Protocols for RSA-based threshold cryptosystems include [9, 10, 15, 18, 32]. In Appendix B we present an example of threshold cryptography applied to RSA [33]. 2.4.2 Blinding The cryptographic technique called "blinding" [5] can be explained as follows.
Reference: [24] <author> Amir Herzberg, M. Jakobsson, Stanislaw Jarecki, Hugo Krawczyk, and Moti Yung. </author> <title> Proactive public key and signature systems. </title> <booktitle> In 1997 ACM Conference on Computers and Communication Security, </booktitle> <year> 1997. </year>
Reference-contexts: Several proactive techniques have been presented in the past. Proactive protocols for secret sharing were presented in [25], while proactive protocols for threshold cryptography were introduced in <ref> [24, 19, 16] </ref>. A basic technique of Proactive Security is to introduce refreshment phases in the system. During a refreshment phase a server that has been broken into but is not anymore under the control of the adversary, can be restored to its initial state. <p> Once he reads more than t + 1 of such shares the adversary will be able to decrypt the users' files. But the shares of the secret keys can be proactivized using the proactive techniques used in threshold cryptography (for discrete log-based schemes see <ref> [24] </ref>; for RSA-based schemes see [16]). The refreshment phases for proactive threshold cryptography schemes have a communication complexity proportional to the size of the keys.
Reference: [25] <author> Amir Herzberg, Stanislaw Jarecki, Hugo Krawczyk, and Moti Yung. </author> <title> Proactive secret sharing, or: How to cope with perpetual leakage. </title> <editor> In D. Coppersmith, editor, </editor> <booktitle> Advances in Cryptology | Crypto '95, </booktitle> <pages> pages 339-352, </pages> <address> Berlin, </address> <year> 1995. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 963. </note>
Reference-contexts: Several proactive techniques have been presented in the past. Proactive protocols for secret sharing were presented in <ref> [25] </ref>, while proactive protocols for threshold cryptography were introduced in [24, 19, 16]. A basic technique of Proactive Security is to introduce refreshment phases in the system.
Reference: [26] <author> K. E. B. Hickman. </author> <title> Secure Socket Library. </title> <journal> Netscape Communications Corp.,http://www.mcom.com/info/SSL.html. </journal>
Reference-contexts: We assume the availability of a global clock, which allows the network computation to evolve as a series of rounds. 2 1 What we have in mind is Web implementations of our design. In such environments, authenticated communication can be realized through, e.g., SSL <ref> [26] </ref>. Similarly, point-to-point communication can be realized in various ways, and not necessarily through a direct connection. 2 Again, this is for simplicity of exposition, as the only thing we need is a reliable time-out mechanism, and a means to guarantee the freshness of authentication.
Reference: [27] <author> Hugo Krawczyk. </author> <title> Distributed fingerprints and secure information dispersal. </title> <booktitle> In Proc. 13th ACM Symp. on Principles of Distributed Computati on, </booktitle> <pages> pages 207-218. </pages> <publisher> ACM, </publisher> <year> 1993. </year>
Reference-contexts: An enhanced mechanism to reconstruct the information when more general faults occur was presented by Krawczyk <ref> [27] </ref>, who called this problem-and its solution-the Secure Information Dispersal problem/algorithm (SIDA). This mechanism is able to tolerate malicious servers that can intentionally modify their pieces of the information, and is also space optimal (asymptotically). <p> Note that the definition of Confidentiality also excludes coalitions including the gateway. We now turn to a definition that measures the quality of information dispersal methods. The following paragraph and definition are taken from <ref> [27] </ref>. Reconstruction is possible in information dispersal methods because some redundancy is added to the n pieces into which the original information is partitioned. The amount of redundancy in an information dispersal method is typically measured by the following parameter. <p> is the ratio between the total size of the information being dispersed and the size of the original information. (By total size we mean the sum of sizes of all distributed pieces.) The blow-up of the original method of Rabin [31] is n nt , while the one of Krawczyk <ref> [27] </ref> is n nt + o (1) (i.e., it requires an additional small quantity which does not depend on the size of the file). This is clearly (asymptotically) optimal if only n t pieces are to be used for reconstruction. Our methods also maintain this latter bound. <p> This is clearly (asymptotically) optimal if only n t pieces are to be used for reconstruction. Our methods also maintain this latter bound. We remark that reconstruction of information is also possible through error correcting codes. However, the inherent blow-up factor deteriorates to n n2t in this case (see <ref> [1, 27] </ref>). We now turn to describe the various cryptographic mechanisms that our protocols will make use of. 2.4 Cryptographic terminology and tools The cryptographic primitives used in the protocols are summarized in Figure 1. <p> As there exist distributed threshold signature/decryption protocols with optimal fault-tolerance (n 2t + 1) [15, 18, 20, 14, 32], it follows that our protocols can also exhibit optimal fault-tolerance. 3 Integrity Only The protocols of this section extend the methods of <ref> [31, 27] </ref> for integrity to achieve SSRI while maintaining (asymptotically) the space optimality. Namely, each piece of the file F deposited at each server is of size jF j nt plus a small quantity which does not depend on the size of the file. <p> The first term follows from the IDA blow-up bound, and the second from the fact that jH (F i )j is independent of the size of F . 2 In contrast, Krawczyk <ref> [27] </ref> suggests to share the hashes of the pieces themselves using Reed-Solomon codes. The space required by that method at each server is jF i j + n n2t jH (F i )j. <p> Integrity Only. Recall from Section 3 that each file being deposited is first dispersed using our variation of SIDA <ref> [27] </ref>. This means that each server V i , 1 i n, will have an IDA piece of F , F i , plus all the "fingerprints" of all the pieces H (F 1 ); : : : ; H (F n ).
Reference: [28] <author> Hugo Krawczyk. </author> <title> Secret sharing made short. </title> <editor> In D. Stinson, editor, </editor> <booktitle> Advances in Cryptology | Crypto '93, </booktitle> <pages> pages 136-146, </pages> <address> Berlin, </address> <year> 1993. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 773. </note>
Reference-contexts: signatures, distributed key management via threshold cryptography, and blinding (together with threshold cryptography) in the context of decryptions rather than signatures. * Secret sharing made "shorter:" An interesting by-product of our constructions is a secret sharing scheme which achieves shorter size shares (in the amortized sense) than the one of <ref> [28] </ref>. * "Proactive" SSRI: SSRI robust against an adversary which may corrupt all servers during the system's lifetime, but only up to t during each time interval [29, 3]. The remainder of the paper is organized as follows. <p> Finally, the user holds the value r, so he is able to compute FK by dividing r out. 2 5 Secret Sharing Made Shorter An application of our result which is interesting in its own is an improvement on the size of the shares for computationally-secure secret sharing protocols <ref> [28] </ref>. Recall that in a (threshold) secret sharing protocol a dealer shares a secret s among n servers so that t servers cannot reconstruct it, but t + 1 can. <p> It is a well known fact that for an information theoretically-secure secret sharing protocol (i.e., one in which t shares give no information about the secret even when infinite computing time is given), the size of the shares must be at least the size of the secret. In <ref> [28] </ref> Krawczyk shows that if one relaxes the notion to one of "computationally secure," then it is possible to obtain shares of size jsj t+1 + ` where ` depends only on a security parameter. <p> Now let's compare the asymptotic space requirements when sharing N secrets. In the scheme of <ref> [28] </ref> the storage requirement is clearly N ( jsj t+1 +`). In our scheme the storage needed is N ( jsj+m t+1 )+m.
Reference: [29] <author> R. Ostrovsky and M. Yung. </author> <title> How to withstand mobile virus attacks. </title> <booktitle> In Proc. 10th ACM Symp. on Principles of Distributed Computati on, </booktitle> <pages> pages 51-59. </pages> <publisher> ACM, </publisher> <year> 1991. </year>
Reference-contexts: interesting by-product of our constructions is a secret sharing scheme which achieves shorter size shares (in the amortized sense) than the one of [28]. * "Proactive" SSRI: SSRI robust against an adversary which may corrupt all servers during the system's lifetime, but only up to t during each time interval <ref> [29, 3] </ref>. The remainder of the paper is organized as follows. In the next section we present the model, necessary definitions, and description of the tools that we use in this paper. <p> If such lifetime is long then the assumption that only t servers can be broken into may become unreasonable or too optimistic. Proactive Security <ref> [29, 3] </ref> is an area of research that deals with secure distributed systems in the presence of an adversary that may corrupt all the servers during the whole lifetime of the system, although only t at a time (i.e., the assumption is that during a pre-specified interval of time, say a
Reference: [30] <author> C. Park and K. Kurosawa. </author> <title> New ElGamal Type Threshold Digital Signature Scheme. </title> <journal> IEICE Trans. Fundamentals, </journal> <volume> E79-A(1):86-93, </volume> <year> 1996. </year>
Reference-contexts: Threshold cryptography was originated in works by Desmedt [11], Boyd [2], Croft and Harris [8], and Desmedt and Frankel [12]. A survey of threshold cryptography techniques can be found in [13]. Protocols for discrete log-based threshold cryptosystems can be found in <ref> [2, 4, 12, 23, 30, 19] </ref>. Protocols for RSA-based threshold cryptosystems include [9, 10, 15, 18, 32]. In Appendix B we present an example of threshold cryptography applied to RSA [33]. 2.4.2 Blinding The cryptographic technique called "blinding" [5] can be explained as follows.
Reference: [31] <author> M. Rabin. </author> <title> Efficient Dispersal of Information for Security, Load Balancing, </title> <journal> and Fault Tolerance . Journal of the ACM, </journal> <volume> 36(2) </volume> <pages> 335-348, </pages> <year> 1989. </year>
Reference-contexts: 1 Introduction The notion of information dispersal was introduced by Rabin <ref> [31] </ref> in his well-known Information Dispersal Algorithm (IDA). <p> We now turn to the description of a major building block that we use in this paper. 2.2 Information Dispersal Algorithm Rabin <ref> [31] </ref> proposed an algorithm that breaks a file F of length L = jF j into n pieces F i , 1 i n, each of length jF i j = L=m, so that every m pieces suffice for the reconstructing F . <p> blow-up factor (or just blow-up) of an information dispersal scheme is the ratio between the total size of the information being dispersed and the size of the original information. (By total size we mean the sum of sizes of all distributed pieces.) The blow-up of the original method of Rabin <ref> [31] </ref> is n nt , while the one of Krawczyk [27] is n nt + o (1) (i.e., it requires an additional small quantity which does not depend on the size of the file). This is clearly (asymptotically) optimal if only n t pieces are to be used for reconstruction. <p> As there exist distributed threshold signature/decryption protocols with optimal fault-tolerance (n 2t + 1) [15, 18, 20, 14, 32], it follows that our protocols can also exhibit optimal fault-tolerance. 3 Integrity Only The protocols of this section extend the methods of <ref> [31, 27] </ref> for integrity to achieve SSRI while maintaining (asymptotically) the space optimality. Namely, each piece of the file F deposited at each server is of size jF j nt plus a small quantity which does not depend on the size of the file. <p> His idea goes as follows: Choose a key K for a symmetric encryption scheme e of length `. Encrypt the secret to be shared; let = e K (s). Use IDA <ref> [31] </ref> to distribute among the servers so that t + 1 pieces are enough to reconstruct ; let i be the piece given to the i th server. <p> Encrypt the secret s; let = e K (s). Encrypt the key with the public key EK V of the servers; let t = E V (K). Use IDA <ref> [31] </ref> to disperse and t among the servers so that t+1 pieces are enough to reconstruct ; let i and t i be the pieces given to the i th server. Let m be the length of the keys used by E, i.e., m = jSK V j.
Reference: [32] <author> Tal Rabin. </author> <title> A simplified approach to threshold and proactive RSA. </title> <type> Manuscript, </type> <year> 1997. </year>
Reference-contexts: A survey of threshold cryptography techniques can be found in [13]. Protocols for discrete log-based threshold cryptosystems can be found in [2, 4, 12, 23, 30, 19]. Protocols for RSA-based threshold cryptosystems include <ref> [9, 10, 15, 18, 32] </ref>. In Appendix B we present an example of threshold cryptography applied to RSA [33]. 2.4.2 Blinding The cryptographic technique called "blinding" [5] can be explained as follows. <p> As there exist distributed threshold signature/decryption protocols with optimal fault-tolerance (n 2t + 1) <ref> [15, 18, 20, 14, 32] </ref>, it follows that our protocols can also exhibit optimal fault-tolerance. 3 Integrity Only The protocols of this section extend the methods of [31, 27] for integrity to achieve SSRI while maintaining (asymptotically) the space optimality.
Reference: [33] <author> Ronald L. Rivest, Adi Shamir, and Leonard M. Adleman. </author> <title> A method for obtaining digital signatures and public-key cryptosystems. </title> <journal> Communication of the ACM, </journal> <volume> 21(2) </volume> <pages> 120-126, </pages> <year> 1978. </year>
Reference-contexts: Protocols for discrete log-based threshold cryptosystems can be found in [2, 4, 12, 23, 30, 19]. Protocols for RSA-based threshold cryptosystems include [9, 10, 15, 18, 32]. In Appendix B we present an example of threshold cryptography applied to RSA <ref> [33] </ref>. 2.4.2 Blinding The cryptographic technique called "blinding" [5] can be explained as follows. Suppose that a server holds a secret key DK which allows it to compute decryptions in the public key encryption scheme E. Assume also that the matching encryption key EK is known.
Reference: [34] <author> A. Shamir. </author> <title> How to Share a Secret. </title> <journal> Communications of the ACM, </journal> <volume> 22 </volume> <pages> 612-613, </pages> <year> 1979. </year>
Reference-contexts: Under this scheme, how would the user be able to retrieve his file confidentially? Remember that in our design he communicates with the system through a single gateway, which means that if only the standard techniques of secret sharing reconstruction were used <ref> [34, 7] </ref>, then the gateway would know all the information available to the user. <p> This algorithm, known as the Information Dispersal Algorithm has many applications to reliable storage and transmission of information. This algorithm is not only space efficient but also computationally efficient. This algorithm should be contrasted with Shamir's algorithm <ref> [34] </ref> for secret sharing, which breaks a string F into n pieces each of the same size as F , so that F can be reconstructed from any m pieces. <p> In a threshold cryptography scheme the key K is shared among a set of players P 1 ; : : :; P n using a (t; n) secret sharing scheme <ref> [34] </ref>. Let K i be the share given to player P i . 4 Recall that by the 4 There are two kinds of protocols for key generation: with or without a dealer. <p> Use IDA [31] to distribute among the servers so that t + 1 pieces are enough to reconstruct ; let i be the piece given to the i th server. Share K with an information theoretically secure scheme as in <ref> [34] </ref>; let K i be the share given to the i th server. By the IDA bound we know that j i j = jj t+1 . Clearly jj = jsj and jK i j = `, hence the stated bound.
References-found: 34

