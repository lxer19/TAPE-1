URL: http://www.eecs.umich.edu/PPP/ICCD95.ps
Refering-URL: http://www.eecs.umich.edu/PPP/publist.html
Root-URL: http://www.cs.umich.edu
Email: e-mail: psychlo@eecs.umich.edu, davidson@eecs.umich.edu  
Title: The Resource Conflict Methodology for Early-Stage Design Space Exploration of Superscalar RISC Processors grouped into
Author: John-David Wellman and Edward S. Davidson 
Address: Ann Arbor, 48109-2122  
Affiliation: Advanced Computer Architecture Lab, Department of EECS The University of Michigan,  
Date: Oct 2-4, 1995.  
Note: This work was supported by an IBM Computer Sciences Graduate Fellow--ship, and used resources of the University of Michigan Center for Parallel Computing, which is partially funded by NSF grant CDA-92-14296. To Appear in the Proceedings of the 1995 International Conference on Computer Design, Austin, Texas,  1.0 Introduction Proposed methodologies can be  2.0 The  
Abstract: In this paper, we propose a new execution trace driven simulation technique, called the Resource Conict Methodology (RCM), for modeling and simulating computer systems early in the design cycle. By using a simplified hardware element model which allows the user to easily add or delete hardware elements in the model, RCM allows the user to readily change the machine design being investigated and to evaluate the resulting machine on a given workload. We describe the RCM model with reference to a family of superscalar processors and develop an RCM-based analysis program (called REAP) for this family of processors. Using REAP, we demonstrate the validity of our method by comparing its RCM performance estimates to those of a traditional early design stage timer model. A computers performance when executing a given workload depends upon both the machines available hardware and the manner specified by the workload for using that hardware. To develop machines that can achieve good performance, it is important to consider the intended workload early in the design cycle when designers are still free to consider many different machine designs. Therefore designers need a performance estimation methodology that is driven by the workload, allows them to consider a large number of different machine designs relatively easily, and provides accurate performance estimates. Shustek [1] and Emer and Clark [2] and the recent bounds models of Mangione-Smith, Abraham and Davidson [3] [4] extract parameter values from the given workload and use them in formulae which attempt to characterize the performance of the hardware. The main drawback of these models is that the performance estimates they provide are of uncertain and often poor accuracy. Analytic models make a great number of simplifying assumptions; when these assumptions do not hold, the performance estimates differ from the actual machine performance by some unknown amount. Timing simulators (or timers) are execution trace driven models of the cycle-by-cycle progress of data and instructions through the machine hardware. Timers provide accurate performance estimates; however timer models generally do not support the exploration of a number of different machine designs. Usually, a timer is developed specific to a modeled machines hardware configuration, and only a very limited set of designs can be considered with it. A few projects, including the Computer Architects Workbench [5] and work by Obaidat and Abu-Saymeh [6] are targeted to allow users to consider different machine designs, but these methodologies still prove somewhat cumbersome. These limitations of analytic and timer models make them insufficient tools for accurately examining the performance of a variety of machines in the early design cycle. In this paper, we propose a new trace-driven simulation methodology, the Resource Conict Methodology (RCM) which models and simulates a computer system in the early design cycle. We also develop an RCM early design cycle analysis program (REAP) for this family of processors. Using REAP, we demonstrate the accuracy of our method by comparing its RCM performance estimates to timer models for several machine designs. 
Abstract-found: 1
Intro-found: 0
Reference: [1] <author> B. Pueto and L. Shustek, </author> <title> An Instruction Timing Model of CPU Performance, </title> <booktitle> Proc. of the 4th Annual Symposium on Computer Architecture, </booktitle> <month> March 23-25, </month> <year> 1977, </year> <pages> pp. 165-178. </pages>
Reference-contexts: Proposed methodologies can be grouped into two classes: analytic models and simulation models. Both of these methods can provide insights into the workload and machine interaction, but to date neither method has proven sufficient for early-stage design space exploration. Analytic models, e.g. the early work of Pueto and Shustek <ref> [1] </ref> and Emer and Clark [2] and the recent bounds models of Mangione-Smith, Abraham and Davidson [3] [4] extract parameter values from the given workload and use them in formulae which attempt to characterize the performance of the hardware.
Reference: [2] <author> J. Emer and D. Clark, </author> <title> A Characterization of Processor Per formance in the Vax-11/780, </title> <booktitle> Proc. of the 11th Annual ISCA, </booktitle> <month> June 5-7, </month> <year> 1984, </year> <pages> pp. 301-310. </pages>
Reference-contexts: Both of these methods can provide insights into the workload and machine interaction, but to date neither method has proven sufficient for early-stage design space exploration. Analytic models, e.g. the early work of Pueto and Shustek [1] and Emer and Clark <ref> [2] </ref> and the recent bounds models of Mangione-Smith, Abraham and Davidson [3] [4] extract parameter values from the given workload and use them in formulae which attempt to characterize the performance of the hardware.
Reference: [3] <author> W. Mangione-Smith, S. G. Abraham, and E. S. </author> <title> Davidson, </title>
Reference-contexts: Analytic models, e.g. the early work of Pueto and Shustek [1] and Emer and Clark [2] and the recent bounds models of Mangione-Smith, Abraham and Davidson <ref> [3] </ref> [4] extract parameter values from the given workload and use them in formulae which attempt to characterize the performance of the hardware. The main drawback of these models is that the performance estimates they provide are of uncertain and often poor accuracy.
References-found: 3

