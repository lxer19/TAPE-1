URL: http://www.cms.dmu.ac.uk/Research/CSTR/1996/cstr96-5.ps.gz
Refering-URL: http://www.cms.dmu.ac.uk/Research/CSTR/1996/
Root-URL: 
Title: Data Mining With an Evolving Population of Database Queries  
Author: Tim Watson Tomasz Rakowski 
Address: LE1 9BH United Kingdom  
Affiliation: Department of Computer Science De Montfort University Leicester,  
Abstract: With the increasing size and complexity of modern database systems the need for sophisticated methods of information retrieval is essential. Many institutions are ignorant of vital information stored in their databases because the query that would produce it has not been run. The goal of all data mining systems is to uncover significant information from a database without the need for an explicit request. This paper describes work done to perform data mining by using techniques borrowed from Genetic Programming to evolve a population of relational database queries, such that the system generates increasingly significant information. The resulting program has been tested with a selection of standard machine learning problems and appears to work well, outperforming many of the standard algorithms. The system described produces SQL queries for database information stored within an Ingres DBMS and the techniques used are applicable to any relational database.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Richard Cooper and Bradley Franks. </author> <title> Constraints on hybrid symbolic/connectionist models of cognition: A theoretical analysis. </title> <editor> In Keane et al. </editor> <volume> [4], </volume> <pages> pages 33-46. </pages>
Reference-contexts: Mushroom 95% correct. Hearts 80% correct, again equalling the best performer. 4 Conclusions and Future Work Miner combines both connectionist and symbolic aspects of knowledge in one system. The theoretical analysis of types of hybrid system suggests that this "behaviourally hybrid" system is the best sort of hybrid <ref> [1] </ref>. Furthermore, the advantages of an evolutionary approach to data mining using SQL queries (scalability, robustness, power of first order logic, comprehensibility of results) suggest that this type of hybrid system stands the best chance of success. However there is more testing and development to be done.
Reference: [2] <author> Richard Dawkins. </author> <title> The Blind Watchmaker. </title> <publisher> Norton, </publisher> <address> New York, </address> <year> 1987. </year>
Reference-contexts: It is called Biomorph. Biomorph was written by Richard Dawkins, a zoologist from Oxford University, who has spent time considering the ability of natural evolution to produce seemingly unlimited improvements 1 in design for apparently little effort <ref> [2] </ref>. It was Dawkins' determination to show that evolution is not supernatural that led to his design of a computer program which simulates the evolution of artificial lifeforms. Unlike the organisms in nature, Biomorph organisms manage to survive by being sthetically above average.
Reference: [3] <author> J. H. Holland. </author> <title> Adaptation in Natural and Artificial Systems. </title> <publisher> University of Michi-gan Press, </publisher> <address> Ann Arbor, MI, </address> <year> 1975. </year>
Reference-contexts: The underlying technique used by the Biomorph program is to employ a Genetic Algorithm (GA), where the gene values are combined to form a binary string of fixed length. This technique was first described by John Holland <ref> [3] </ref>. Developments in evolutionary computing have produced a more powerful version of GAs, called Genetic Programming (GP), invented by John Koza [6]. Instead of fixed-length binary strings, the GP population consists of LISP programs (organised as trees). The programs are combined and mutated to produce offspring for the next generation.
Reference: [4] <author> Mark Keane, Padraig Cunningham, Mike Brady, and Ruth Byrne, </author> <title> editors. </title> <booktitle> Proc. Seventh Irish Annual Conference of AI and Cognitive Science. </booktitle> <publisher> Dublin University Press, </publisher> <year> 1994. </year>
Reference: [5] <editor> Yves Kodratoff, Gholemreza Nakhaeizadeh, and Charles Taylor, editors. </editor> <booktitle> Eighth European Conference on Machine Learning, Workshop Notes: Statistics, Machine Learning and Knowledge Discovery in Databases, </booktitle> <year> 1995. </year>
Reference-contexts: Although the objectives of machine learning and data mining are similar, the criteria for success in data mining place heavy emphasis on scalability and robustness 3 . For a good overview of data mining, see [7, 8]. Most current, data mining systems are based on symbolic AI techniques <ref> [5] </ref>. One of the main reasons for basing a data mining system on evolutionary computing is that 2 For example, categorising the factors that affect the appeal of personalities for advertising campaigns. 3 In this context, robust solutions are defined as tending to converge on valid generalisations.
Reference: [6] <editor> John R. Koza. </editor> <booktitle> Genetic Programming. </booktitle> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: This technique was first described by John Holland [3]. Developments in evolutionary computing have produced a more powerful version of GAs, called Genetic Programming (GP), invented by John Koza <ref> [6] </ref>. Instead of fixed-length binary strings, the GP population consists of LISP programs (organised as trees). The programs are combined and mutated to produce offspring for the next generation.
Reference: [7] <author> Heikki Mannila. </author> <title> Aspects of data mining. </title> <editor> In Kodratoff et al. </editor> <volume> [5], </volume> <pages> pages 1-6. </pages>
Reference-contexts: Although the objectives of machine learning and data mining are similar, the criteria for success in data mining place heavy emphasis on scalability and robustness 3 . For a good overview of data mining, see <ref> [7, 8] </ref>. Most current, data mining systems are based on symbolic AI techniques [5].
Reference: [8] <editor> G. Piatetsky-Shapiro and W. J. Frawley, editors. </editor> <title> Knowledge Discovery in Databases. </title> <publisher> AAAI Press/MIT Press, </publisher> <address> Menlo Park, CA, </address> <year> 1991. </year>
Reference-contexts: Although the objectives of machine learning and data mining are similar, the criteria for success in data mining place heavy emphasis on scalability and robustness 3 . For a good overview of data mining, see <ref> [7, 8] </ref>. Most current, data mining systems are based on symbolic AI techniques [5].
Reference: [9] <author> Nicholas J. Radcliffe and Patrick D. Surry. </author> <title> Co-operation through hierarchical competition in genetic data mining. </title> <type> Technical Report EPCC-TR94-09, </type> <institution> Edinburgh Parallel Computing Centre, King's Building, University of Edinburgh, </institution> <address> Scotland, EH9 3JZ, </address> <year> 1994. </year>
Reference-contexts: Thus, an evolutionary system can make the transition from small, clean datasets (machine learning) to large, noisy datasets, without a disastrous degradation in performance. 2 An Evolutionary Data Mining System Evolutionary techniques have been applied to data mining in other, recent systems <ref> [9] </ref>. However, one of the novel features of Miner is that it evolves SQL queries, enabling the system to be easily ported to any commercial, relational DBMS, but more importantly, allowing the relations to be expressed in first order logic.
Reference: [10] <author> Tim Watson. </author> <title> A new representation technique for genetic algorithms. </title> <editor> In Keane et al. </editor> <volume> [4], </volume> <pages> pages 233-246. </pages>
Reference-contexts: Although representation techniques exist for evolving trees using traditional GA, fixed-length strings, the problems tackled tend to involve searching for optimal tree organisations of a fixed number of objects <ref> [10] </ref>. When dealing with database queries, the ability to evolve the inherent complexity of queries, as well as their constituent elements, is of great value. Consequently, a more general, GP-based approach is best. Miner uses dynamic trees to represent queries.
References-found: 10

