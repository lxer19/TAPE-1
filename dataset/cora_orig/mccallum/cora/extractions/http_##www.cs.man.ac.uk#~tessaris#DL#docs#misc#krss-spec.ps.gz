URL: http://www.cs.man.ac.uk/~tessaris/DL/docs/misc/krss-spec.ps.gz
Refering-URL: http://www.cs.man.ac.uk/~tessaris/DL/papers.html
Root-URL: http://www.cs.man.ac.uk
Title: Description-Logic Knowledge Representation System Specification from the KRSS Group of the ARPA Knowledge Sharing Effort
Author: Peter F. Patel-Schneider, co-chair Bill Swartout, co-chair 
Note: The description logic in this specification is based closely on the description logic defined by researchers at DFKI [1]. However, it includes several  
Date: 1 November 1993 1 Overview  
Abstract: This is the KRSS group specification for description-logic-based KR systems. It describes the required behavior for compliant KR systems. This report is not an overview of description logics, nor is it a rationale for using description logics in knowledge representation. A knowledge base in this specification is a sequence of statements. The semantics of non-rule, non-closure statements is similar to that in the DFKI proposal. The semantics of role closures is determined by replacing them, in sequence, with the best derivable role maximum or the derivable set of fillers. Rules are treated as epistemic statements, in line with their treatment by Donini et al [2]. Compliant implementations are required to parse the entire language, but may replace constructs that they cannot reason about with the closest approximation that they can handle. Compliant implementations are required to be complete on a subset of the logic, selected for its easy, but non-trivial, inferences. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Franz Baader, Hans-Jurgen Burckert, Jochen Heinsohn, Bernhard Hol-lunder, Jurgen Muller, Bernhard Nebel, Werner Nutt, and Hans-Jurgen Profitlich. </author> <title> Terminological knowledge representation: A proposal for a terminological logic. </title> <note> A DFKI note, </note> <month> June </month> <year> 1991. </year>
Reference-contexts: It describes the required behavior for compliant KR systems. This report is not an overview of description logics, nor is it a rationale for using description logics in knowledge representation. The description logic in this specification is based closely on the description logic defined by researchers at DFKI <ref> [1] </ref>. However, it includes several other features, notably role closures and rules. A knowledge base in this specification is a sequence of statements. The semantics of non-rule, non-closure statements is similar to that in the DFKI proposal. <p> Compliant implementations are required to be complete on a subset of the logic, selected for its easy, but non-trivial, inferences. 1 2 Syntax Major parts of the syntax of knowledge bases are taken from <ref> [1] </ref>. The top-level syntactic categories in the specification are descriptions, statements, knowledge bases, and inquiries. <p> Comment lines, starting with a `;', are allowed in knowledge bases. 3 Semantics The semantics of the description logic is defined in terms of interpretations and model-sets. The interpretation part of the semantics is mostly taken from <ref> [1] </ref>. The idea of (epistemic) model-sets is taken from [2]. 1 These tables include the abstract form syntax from [1], so that the logic here can be compared with the many published papers using this abstract form. 2 Syntax Extension Input Abstract TOP &gt; I BOTTOM ? ; NUMBER the numbers <p> The interpretation part of the semantics is mostly taken from <ref> [1] </ref>. The idea of (epistemic) model-sets is taken from [2]. 1 These tables include the abstract form syntax from [1], so that the logic here can be compared with the many published papers using this abstract form. 2 Syntax Extension Input Abstract TOP &gt; I BOTTOM ? ; NUMBER the numbers INTEGER the integers STRING the strings (and C 1 : : : C n ) C 1 u u <p> The extension of a number or a string is the appropriate rational or string. The extension of assertions is either true or false. The extension of the concept-, role-, and attribute-forming operators is as in the DFKI proposal <ref> [1] </ref>, extended in the obvious way. See Tables 1, 2, and 3 for details. The extension of the satisfies constructs is unconstrained (within I or I a fi I , of course).
Reference: [2] <author> Francesco M. Donini, Maurizio Lenzerini, Daniele Nardi, Andrea Schaerf, and Werner Nutt. </author> <title> Adding epistemic operators to concept languages. </title> <booktitle> 11 In Proceedings of the Third International Conference on Principles of Knowledge Representation and Reasoning. </booktitle> <publisher> Morgan Kaufmann, </publisher> <month> October </month> <year> 1992. </year>
Reference-contexts: The semantics of role closures is determined by replacing them, in sequence, with the best derivable role maximum or the derivable set of fillers. Rules are treated as epistemic statements, in line with their treatment by Donini et al <ref> [2] </ref>. Compliant implementations are required to parse the entire language, but may replace constructs that they cannot reason about with the closest approximation that they can handle. <p> Comment lines, starting with a `;', are allowed in knowledge bases. 3 Semantics The semantics of the description logic is defined in terms of interpretations and model-sets. The interpretation part of the semantics is mostly taken from [1]. The idea of (epistemic) model-sets is taken from <ref> [2] </ref>. 1 These tables include the abstract form syntax from [1], so that the logic here can be compared with the many published papers using this abstract form. 2 Syntax Extension Input Abstract TOP &gt; I BOTTOM ? ; NUMBER the numbers INTEGER the integers STRING the strings (and C 1
References-found: 2

