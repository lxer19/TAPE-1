URL: http://cadlab.cs.ucla.edu:8080/~cong/papers/fpga98_tmatch.ps.gz
Refering-URL: http://ballade.cs.ucla.edu/~cong/publications.html
Root-URL: http://www.cs.ucla.edu
Email: fcong, sxug@cs.ucla.edu  
Title: Technology Mapping for FPGAs with Embedded Memory Blocks  
Author: Jason Cong and Songjie Xu 
Address: Los Angeles, CA 90024  
Affiliation: Department of Computer Science University of California,  
Abstract: Modern field programmable gate arrays (FPGAs) provide embedded memory blocks (EMBs) to be used as on-chip memories. In this paper, we explore the possibility of using EMBs to implement logic functions when they are not used as on-chip memory. We propose a general technology mapping problem for FPGAs with EMBs for area and delay minimization and develop an efficient algorithm based on the concepts of Maximum Fanout Free Cone (MFFC) [3] and Maximum Fanout Free Subgraph (MFFS) [7], named EMB Pack, which minimizes the area after or before technology mapping by using EMBs while maintaining the circuit delay. We have tested EMB Pack on MCNC benchmarks on Altera's FLEX10K device family [1]. The experimental results show that compared with the original mapped circuits generated from CutMap [5] without using EMBs, EMB Pack as postprocessing can further reduce up to 10% of the area on the mapped circuits while maintaining the layout delay by making efficient use of available EMB resources. Compared with CutMap-e without using EMBs, EMB Pack as pre-mapping processing followed by CutMap-e can reduce 6% of the area while maintaining the circuit optimal delay. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Altera, </author> <title> "Programmable Logic Devices Data Book", </title> <publisher> Altera Corp., </publisher> <address> San Jose, CA, </address> <year> 1996. </year>
Reference: [2] <author> N. Bhat, D. Hill, </author> <title> "Routable Technology Mapping for FP-GAs", </title> <booktitle> First International ACM/SIGDA Workshop on Field Programmable Gate Arrays, </booktitle> <month> Feb. </month> <year> 1992, </year> <pages> pp. 143-148. </pages>
Reference: [3] <author> J. Cong, Y. Ding, </author> <title> "On Area/Depth Trade-off in LUT-Based FPGA Technology Mapping", </title> <booktitle> Proc. 30th ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 213-218, </pages> <month> June </month> <year> 1993, </year> <pages> 213-218. </pages>
Reference-contexts: In this paper, we propose a general technology mapping problem for FPGAs with EMBs and focus our algorithm on the area minimization while maintaining the circuit delay. Our algorithm, named EMB Pack, uses the concepts of Maximum Fanout Free Cones (MFFCs) <ref> [3] </ref> and Maximum Fanout Free Subgraphs (MFFSs) [7] and uses EMBs to minimize the area after or before technology mapping while maintaining the circuit delay. <p> of the circuit (shadowed area) can be put in one EMB with nine inputs and four outputs if delay is not a concern. after postprocessing, part of the network (shadowed area) can be put in one 9-input 4-output EMB. 3.1 Preliminaries The EMB Pack algorithm uses the concepts of MFFC <ref> [3] </ref> and MFFS [7] extensively. In this subsection, we state their definitions and important properties. <p> The MFFC of each node is unique, and any FFC of v is contained in M F F C v . According to <ref> [3] </ref>, MFFC has two important properties: (1) If w 2 M F F C v , then M F F C w M F F C v ; (2) Two M F F Cs are either disjoint or one must contain another. Moreover, it was shown in [3] that a general <p> According to <ref> [3] </ref>, MFFC has two important properties: (1) If w 2 M F F C v , then M F F C w M F F C v ; (2) Two M F F Cs are either disjoint or one must contain another. Moreover, it was shown in [3] that a general Boolean network can be decomposed into a set of disjoint MFFCs such that the optimal duplication free mapping for the entire network can be carried out in each MFFC independently. <p> 8:1. "Ar Mean" and "Ge Mean" represent arithmetic mean and geometric mean respectively. "Ar Ratio" and "Ge Ratio" are ratios for arithmetic mean and geometric mean. 7 Conclusions In this paper, we proposed a general technology mapping problem for FPGAs with EMBs and presented an Maximum Fanout Free Cone (MFFC) <ref> [3] </ref> and Maximum Fanout Free Subgraph (MFFS) [7] based post-processing algorithm | EMB Pack which minimizes the area after or before technology mapping by using EMBs while maintaining the circuit delay. We also proposed a delay minimization algorithm for FPGAs with EMBs which integrates technology mapping with EMB implementation together.
Reference: [4] <author> J. Cong, Y. Ding, "FlowMap: </author> <title> An Optimal Technology Mapping Algorithm for Delay Optimization in Lookup-Table Based FPGA Designs", </title> <journal> IEEE Transactions on Computer-Aided Design, Feb. 1994, </journal> <volume> Vol. 13, No. 1, </volume> <pages> pp. 1-12. </pages>
Reference-contexts: The input to Problem 1 is a K-LUT netlist constructed by a technology mapper such as FlowMap <ref> [4] </ref> or CutMap [5]. <p> Problem 2 Given M F F S (S), compute the maximum vol-umn K 0 -feasible cut of M F F S (S), where K 0 is determined by jSj to match the feasible EMB configurations. Currently, there is no polynomial time algorithms which can solve this problem optimally. In <ref> [4] </ref>, a heuristic is proposed with time complexity of O (K 0 3 m), where m is the number of edges in the subgraph to be cut. <p> The optimal delay of N is its minimum logic depth if N is mapped into a K-LUT network and can be obtained in the same way as that in FlowMap <ref> [4] </ref> and CutMap [5]. EMB Pack is used before technology mapping to group as many gates as possible into the available EMBs to minimize the area while maintaining the optimal delay. First, the optimal delay is calculated through flow based labeling [4], and a slack is computed for each node which <p> obtained in the same way as that in FlowMap <ref> [4] </ref> and CutMap [5]. EMB Pack is used before technology mapping to group as many gates as possible into the available EMBs to minimize the area while maintaining the optimal delay. First, the optimal delay is calculated through flow based labeling [4], and a slack is computed for each node which indicates the maximum delay that can be added to this single node to maintain the optimal delay of the whole circuit. After that, the EMB candidates are generated by MFFC and MFFS computation (Subsection 3.3) and MFFS cutting (Subsection 3.4). <p> After the application of EMB Pack as pre-mapping processing on network N to choose EMB implementations, network N 0 is generated where some nodes are implemented as EMB outputs. Thereafter, technology mapping will be performed by FlowMap <ref> [4] </ref> or CutMap [5] on N 0 to map the remained circuit (the set of nodes which are not implemented as EMBs) into K-LUTs. <p> Depending on different logic funcitons, each EMB can be configured as an 11-input 1-output, 10-input 2-ouput, 9-input 4-output, or 8-input 8-ouput logic block. Table 1 shows the comparison results of CutMap [5] and CutMap followed by EMB Pack on MCNC benchmarks. CutMap is an improvement over FlowMap <ref> [4] </ref>, which considers area minimization during delay optimization. CutMap was run with K = 4. In EMB Pack testing, the available number of EMBs for each circuit is determined by the smallest FLEX10K device into which this circuit can be fitted.
Reference: [5] <author> J. Cong, Y. Hwang, </author> <title> "Simultaneous Depth and Area Minimization in LUT-Based FPGA Mapping", </title> <institution> UCLA Computer Science Dept. Tech. Report CSD-950001, </institution> <month> January </month> <year> 1995. </year>
Reference-contexts: The input to Problem 1 is a K-LUT netlist constructed by a technology mapper such as FlowMap [4] or CutMap <ref> [5] </ref>. <p> The optimal delay of N is its minimum logic depth if N is mapped into a K-LUT network and can be obtained in the same way as that in FlowMap [4] and CutMap <ref> [5] </ref>. EMB Pack is used before technology mapping to group as many gates as possible into the available EMBs to minimize the area while maintaining the optimal delay. <p> After the application of EMB Pack as pre-mapping processing on network N to choose EMB implementations, network N 0 is generated where some nodes are implemented as EMB outputs. Thereafter, technology mapping will be performed by FlowMap [4] or CutMap <ref> [5] </ref> on N 0 to map the remained circuit (the set of nodes which are not implemented as EMBs) into K-LUTs. <p> Depending on different logic funcitons, each EMB can be configured as an 11-input 1-output, 10-input 2-ouput, 9-input 4-output, or 8-input 8-ouput logic block. Table 1 shows the comparison results of CutMap <ref> [5] </ref> and CutMap followed by EMB Pack on MCNC benchmarks. CutMap is an improvement over FlowMap [4], which considers area minimization during delay optimization. CutMap was run with K = 4.
Reference: [6] <author> J. Cong, Y. Ding, </author> <title> "Tutorial and Survey Paper | Combinational Logic Synthesis for LUT Based Field Programmable Gate Arrays", </title> <journal> ACM Transactions on Design Automation of Electronic Systems, </journal> <volume> Vol. 1, No. 2, </volume> <month> April </month> <year> 1996, </year> <pages> pp. 145-204. </pages>
Reference-contexts: The previous LUT-based FPGA mapping algorithms can be roughly divided into four classes, area minimization, delay minimization, simultaneous area and delay minimization and routability optimization. A comprehensive survey of existing FPGA mapping algorithms is available in <ref> [6] </ref>. However, none of the existing mapping algorithms are able to deal with FPGAs with EMBs. In [12], an approach for technology mapping into heterogeneous LUT-based FPGAs was presented.
Reference: [7] <author> J. Cong, P. Li, S.-K. Lim, T. Shibuya, D. Xu, </author> <title> "Large Scale Circuit Partitioning With Loose/Stable Net Removal and Signal Flow Based Hierachical Clustering", </title> <booktitle> Proc. IEEE International Conference on Computer-Aided Design, </booktitle> <month> Nov. </month> <year> 1997, </year> <note> to appear. </note>
Reference-contexts: In this paper, we propose a general technology mapping problem for FPGAs with EMBs and focus our algorithm on the area minimization while maintaining the circuit delay. Our algorithm, named EMB Pack, uses the concepts of Maximum Fanout Free Cones (MFFCs) [3] and Maximum Fanout Free Subgraphs (MFFSs) <ref> [7] </ref> and uses EMBs to minimize the area after or before technology mapping while maintaining the circuit delay. Although the description and the experimental results in this paper are based on Altera FLEX10K device family, our algorithm is general to various kinds of LUT-based FPGAs with embedded memory arrays. <p> (shadowed area) can be put in one EMB with nine inputs and four outputs if delay is not a concern. after postprocessing, part of the network (shadowed area) can be put in one 9-input 4-output EMB. 3.1 Preliminaries The EMB Pack algorithm uses the concepts of MFFC [3] and MFFS <ref> [7] </ref> extensively. In this subsection, we state their definitions and important properties. <p> arithmetic mean and geometric mean respectively. "Ar Ratio" and "Ge Ratio" are ratios for arithmetic mean and geometric mean. 7 Conclusions In this paper, we proposed a general technology mapping problem for FPGAs with EMBs and presented an Maximum Fanout Free Cone (MFFC) [3] and Maximum Fanout Free Subgraph (MFFS) <ref> [7] </ref> based post-processing algorithm | EMB Pack which minimizes the area after or before technology mapping by using EMBs while maintaining the circuit delay. We also proposed a delay minimization algorithm for FPGAs with EMBs which integrates technology mapping with EMB implementation together.
Reference: [8] <author> Jason Cong, John Peck, Yuzheng Ding, "RASP: </author> <title> A General Logic Synthesis System for SRAM-based FPGAs", </title> <booktitle> Proc. ACM 4th International Symposium on FPGA, </booktitle> <month> Feb. </month> <year> 1996, </year> <pages> pp. 137-143. </pages>
Reference-contexts: We are currently in the process of implementing this approach. 6 Experimental Results We have implemented the EMB Pack algorithm with C language on SUN SPARC Workstation and integrated it into the RASP system developed at UCLA <ref> [8] </ref>. We designed a flow (see Figure 7) for EMB Pack to work with Altera's FPGA development system | MAX+PLUSII 8:1.
Reference: [9] <author> R. J. Francis, J. Rose, K. Chung, "Chortle: </author> <title> A Technology Mapping Program for Lookup Table-Based Field Programmable Gate Arrays", </title> <booktitle> Proc. 27th ACM/IEEE Design Automation Conference, </booktitle> <month> June </month> <year> 1990, </year> <pages> pp. 613-619. </pages>
Reference: [10] <author> R. J. Francis, J. Rose, Z. Vranesic, "Chortle-crf: </author> <title> Fast Technology Mapping for Lookup Table-Based FPGAs", </title> <booktitle> Proc. 28th ACM/IEEE Design Automation Conference, </booktitle> <month> June </month> <year> 1991, </year> <pages> pp. 613-619. </pages>
Reference: [11] <author> R. J. Francis, J. Rose, Z. Vranesic, </author> <title> "Technology Mapping for Delay Optimization of Lookup Table-Based FPGAs", </title> <booktitle> MCNC Logic Synthesis Workshop, </booktitle> <year> 1991. </year>
Reference: [12] <author> J. He, J. Rose, </author> <title> "Technology Mapping for Heterogeneous FPGAs", </title> <booktitle> Proc. ACM/SIGDA International Symposium on Field Programmable Gate Arrays, </booktitle> <month> Feb. </month> <year> 1994. </year>
Reference-contexts: A comprehensive survey of existing FPGA mapping algorithms is available in [6]. However, none of the existing mapping algorithms are able to deal with FPGAs with EMBs. In <ref> [12] </ref>, an approach for technology mapping into heterogeneous LUT-based FPGAs was presented. Their architecture assumes a mixture of p-input LUTs and s-input LUTs with a fixed ratio of r in one FPGA chip, which is quite different from FPGAs with a limited number of large EMBs which allow multiple configurations.
Reference: [13] <author> R. Murgai, Y. Nishizaki, N. Shenoy, R. Brayton, A. Sangiovanni-Vincentelli, </author> <title> "Logic Synthesis Algorithms for Programmable Gate Arrays", </title> <booktitle> Proc. 27th ACM/IEEE Design Automation Conference, </booktitle> <year> 1990, </year> <pages> pp. 620-625. </pages>
Reference: [14] <author> R. Murgai, N. Shenoy, R. K. Brayton, A. Sangiovanni-Vincentelli, </author> <title> "Performance Directed Synthesis for Table Look Up Programmable Gate Arrays", </title> <booktitle> Proc. IEEE International Conference on Computer-Aided Design, </booktitle> <month> Nov. </month> <year> 1991, </year> <pages> pp. 572-575. </pages>
Reference: [15] <author> R. Murgai, N. Shenoy, R. K. Brayton, A. Sangiovanni-Vincentelli, </author> <title> "Improved Logic Synthesis Algorithms for Table Look Up Architectures", </title> <booktitle> Proc. IEEE International Conference on Computer-Aided Design, </booktitle> <month> Nov. </month> <year> 1991, </year> <pages> pp. 564-567. </pages>

References-found: 15

