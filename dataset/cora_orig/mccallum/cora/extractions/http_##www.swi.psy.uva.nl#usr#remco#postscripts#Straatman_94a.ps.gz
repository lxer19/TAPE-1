URL: http://www.swi.psy.uva.nl/usr/remco/postscripts/Straatman:94a.ps.gz
Refering-URL: http://www.swi.psy.uva.nl/usr/remco/publications.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: E-mail: remco@swi.psy.uva.nl  
Title: Redesigning control knowledge of knowledge-based systems: machine learning meets knowledge engineering  
Author: Remco Straatman 
Date: 9 May 1994  
Address: Roetersstraat 15 1018 WB Amsterdam The Netherlands  
Affiliation: Department of Social of Social Science Informatics University of Amsterdam  
Abstract: Machine learning and knowledge engineering have always been strongly related, but the introduction of new representations in knowledge engineering has created a gap between them. This paper describes research aimed at applying machine learning techniques to the current knowledge engineering representations. We propose a system that redesigns a part of a knowledge based system, the so called control knowledge. We claim a strong similarity between redesign of knowledge based systems and incremental machine learning. Finally we will relate this work to existing research. 
Abstract-found: 1
Intro-found: 1
Reference: [Carbonell & Gil, 1990] <author> J.G. Carbonell and Y. Gil. </author> <title> Learning by experimentation: the operator refinement method. </title> <editor> In Y. Kodratoff and R. S. Michal-ski, editors, </editor> <booktitle> Machine learning: an Artificial Intelligence Approach, </booktitle> <volume> volume 3, </volume> <pages> pages 191-213. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1990. </year>
Reference-contexts: This requirement excludes, among others, macro learning but fits with systems that learn meta control structures to guide object level problem solving. Within the PRODIGY project <ref> [Carbonell & Gil, 1990] </ref> a lot of research has been done in learning control knowledge. PRODIGY is a general purpose problem solver that performs state-space search on the object level. It does this by applying operators that transform one state into another in order to reach the goal state.
Reference: [Chandrasekaran et al., 1992] <author> B. Chandrasekaran, T. R. Johnson, and J. W. Smith. </author> <title> Task-structure analysis for knowledge modeling. </title> <journal> Communications of the ACM, </journal> <volume> 35(9) </volume> <pages> 124-137, </pages> <year> 1992. </year>
Reference-contexts: Both these systems learn domain knowledge, our system complements them by learning control knowledge. 5.3 Redesign in knowledge-based systems The Autognostic system [Stroulia & Goel, 1994] redesigns KBS within the task-structure framework <ref> [Chandrasekaran et al., 1992] </ref>, which is another framework from the knowledge engineering field. Changes possible within Autognostic include (in KADS terminology) changes in domain layer, inference layer and decompositions at the task layer. However no control constructs are redesigned.
Reference: [Etzioni, 1992] <author> O. Etzioni. </author> <title> Acquiring search-control knowledge via static analysis. </title> <journal> Artificial Intelligence, </journal> <volume> 62 </volume> <pages> 255-301, </pages> <year> 1992. </year>
Reference-contexts: It then derives the most general conditions for these occurrences and uses these as conditions of control rules. The control rules will try to avoid states in which negative events (failure, goal clobbering) occur, and head to successful states. * STATIC <ref> [Etzioni, 1992] </ref> tries to construct rules based on the same characteristics (success, failure, goal clobbering etc.) as PRODIGY-EBL but instead of using the trace of an example, STATIC does static analysis of the search space. Our aim is to apply this kind of techniques to KADS models of expertise.
Reference: [Fensel & vanHarmelen, 1994] <author> D. Fensel and F. van Harmelen. </author> <title> A comparison of languages which operationalise and formalise KADS models of expertise. </title> <journal> The Knowledge Engineering Review, </journal> <year> 1994. </year>
Reference: [Ganascia et al., 1993] <author> J-G. Ganascia, J. Thomas, and P. Laublet. </author> <title> Integrating models of knowledge and machine learning. </title> <editor> In P.B. Brazdil, editor, </editor> <booktitle> Machine Learning: ECML-93, </booktitle> <pages> pages 396-401, </pages> <address> Heidelberg, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Just as we propose, this system uses parts of the KADS model (the inference layer) as a bias for learning other parts (the domain layer). <ref> [Ganascia et al., 1993] </ref> has built a similar system based on the CHARADE algorithm that uses both the inference and task layer as a bias for learning domain layer facts. These systems show that learning in KADS models of expertise is possible.
Reference: [Minton, 1990] <author> S. Minton. </author> <title> Quantitative results concerning the utility of explanation-based learning. </title> <journal> Artificial Intelligence, </journal> <volume> 42(2-3):363-391, </volume> <year> 1990. </year>
Reference-contexts: On the meta level this search is controlled by control rules that choose between applicable operators. On top of PRODIGY a number of systems have been built that learn control rules, among these are: * PRODIGY-EBL <ref> [Minton, 1990] </ref> performs explanation based learning, by examining the trace of an example for occurrences of goal clobbering, failures and success. It then derives the most general conditions for these occurrences and uses these as conditions of control rules.
Reference: [Schreiber et al., 1993] <editor> A. Th. Schreiber, B. J. Wielinga, and J. A. Breuker, editors. KADS: </editor> <title> A Principled Approach to Knowledge-Based System Development, volume 11 of Knowledge-Based Systems Book Series. </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1993. </year> <note> ISBN 0-12-629040-7. </note>
Reference-contexts: 1 Introduction There has always been a strong relation between machine learning and knowledge engineering. Machine learning techniques have traditionally been used as a tool in the knowledge engineering process. Recently new representations for knowledge-based systems have evolved within the knowledge engineering community, such as the KADS framework <ref> [Schreiber et al., 1993] </ref>. Because of this there is a difference between the learning tasks that can be solved by the current machine learning techniques and the kind of learning tasks demanded in knowledge engineering. In this paper we present the goals and approach of our project.
Reference: [Stroulia & Goel, 1994] <author> E. Stroulia and A.K. Goel. </author> <title> Learning problem-solving concepts by reflecting on problem solving. </title> <editor> In F. Bergadano and L. De Raedt, editors, </editor> <booktitle> ECML-94 European Conference on Machine Learning, </booktitle> <pages> pages 287-306, </pages> <address> Heidelberg, 1994. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Also they suggest that when learning one type of knowledge within a model of expertise, the rest of the knowledge can be used as a bias. Both these systems learn domain knowledge, our system complements them by learning control knowledge. 5.3 Redesign in knowledge-based systems The Autognostic system <ref> [Stroulia & Goel, 1994] </ref> redesigns KBS within the task-structure framework [Chandrasekaran et al., 1992], which is another framework from the knowledge engineering field. Changes possible within Autognostic include (in KADS terminology) changes in domain layer, inference layer and decompositions at the task layer. However no control constructs are redesigned.
Reference: [Subramanian & Hunter, 1992] <author> D. Subramanian and Scott Hunter. </author> <title> Computational impact of biases in learning. </title> <editor> In Diana Gordon, editor, </editor> <booktitle> ML92 Workshop on Biases in Inductive Learning, </booktitle> <year> 1992. </year>
Reference-contexts: For this reason research is performed into cost-models <ref> [Subramanian & Hunter, 1992] </ref> that produce a measure of average performance for a system based on the knowledge present. In contrast to other methods these models indicate the performance of the entire system and not only individual rules.
Reference: [vanDompseler & vanSomeren, 1994] <author> H.J.H. van Dompseler and M.W. van Someren. </author> <title> Using models of problem solving as bias in automated knowledge acquisition. </title> <editor> In A. Cohn, editor, </editor> <booktitle> ECAI 94 11th European Conference on Artificial Intelligence, </booktitle> <pages> pages 503-507, </pages> <address> London, 1994. </address> <publisher> John Wiley & Sons. </publisher>
Reference-contexts: This also extends control knowledge learning systems because they would be more capable of forecasting the results of their modifications, which is a problem in current systems. 5.2 Machine learning in KADS models Learning within KADS models is a topic of research that has only recently come up. <ref> [vanDompseler & vanSomeren, 1994] </ref> describes a system that learns domain layer facts on the basis of examples.
References-found: 10

