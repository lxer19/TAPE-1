URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/project/vit/ftp/PatADL.ps
Refering-URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/project/vit/www/paper_abstracts/PatADL.html
Root-URL: 
Title: Working paper for DARPA EDCS community How Should Patterns Influence Architecture Description Languages? A Call
Author: Mary Shaw and Paul Clements 
Keyword: software architecture, architectural styles, style classification/taxonomy, design patterns, pattern languages  
Note: The  should do so.  
Date: July 1996  
Address: Pittsburgh, PA 15213  
Affiliation: Computer Science Department and Software Engineering Institute Carnegie Mellon University  
Abstract: : 
Abstract-found: 1
Intro-found: 1
Reference: [Alexander+77] <author> C. Alexander, S. Ishikawa, M. </author> <title> Silverstein, </title> <editor> et al. </editor> <publisher> A Pattern Language . Oxford Univ Press 1977. </publisher>
Reference-contexts: The paper concludes with some suggestions for further pursuing the topic. We present this as a basis for discussion, not as a worked-out prescription. 2. Why Patterns Are Such Hot Stuff Alexander <ref> [Alexander+77] </ref> captured his knowledge of (building) architecture design in col lections of design fragments that he called patterns ; coherent collections of complementary patterns form pattern languages .
Reference: [Buschman+96] <author> F. Buschman, R. Meunier, H. Rohnert, P. Sommerlad, M. Stahl. </author> <title> Pattern-Oriented Software Architecture: A System of Patterns. </title> <publisher> Wiley 1996. </publisher>
Reference-contexts: Both the problem statement and the solution description are rendered in language-and (largely) implementation-independent terms. Books of pattern collections are starting to emerge <ref> [GoF95, Buschman+96] </ref> A natural question to ask is, What is the relation between architectures and design patterns? The consensus at the most recent OOPSLA conference, as articulated in a panel discussion [ref], was that design patterns hold discourse at a level of detail below that of architectures, but above that of
Reference: [Garlan+94] <author> David Garlan, Robert Allen, and John Ockerbloom. </author> <title> Exploiting Style in Architectural Design Environments. </title> <booktitle> Proc. Second ACM SIGSOFT Symposium on Foundations of Software Engineering December 1994. </booktitle>
Reference-contexts: In the software architec ture community, architecture description languages (ADLs) have been created to support the creation, refinement, validation, and analysis of systems at the architectural level. Languages such as Rapide [ref], Aesop <ref> [Garlan+94] </ref>, UniCon [Shaw+95], MetaH [ref], Wright [ref], Demeter [Lieberherr96], Gestalt [ref], Artek [ref], RESOLVE [ref], and others exist and are under continuing development, and provide (as a group) a significant impetus to consider an architecture as an artifact of tangible value, and, in some cases, architectural styles as reusable design rules
Reference: [GoF95] <author> E. Gamma, R. Helm. R. Johnson, and J. Vlissides. </author> <title> Design Patterns: Elements of Reusable Object-Oriented Software . Addison-Wesley 1995. </title>
Reference-contexts: Both the problem statement and the solution description are rendered in language-and (largely) implementation-independent terms. Books of pattern collections are starting to emerge <ref> [GoF95, Buschman+96] </ref> A natural question to ask is, What is the relation between architectures and design patterns? The consensus at the most recent OOPSLA conference, as articulated in a panel discussion [ref], was that design patterns hold discourse at a level of detail below that of architectures, but above that of <p> This apparently settles the question of whether an architectural style can be documented in pattern form. What about specific architectures? In particular, what is the relationship between the pattern templates such as the one in <ref> [GoF95] </ref> and descriptions of architectures? This paper is intended to engender a discussion within the community of ADL builders as to the role of patterns in the description of architectures and the role of ADLs in capturing the kinds of information included in patterns.
Reference: [Lieberherr96] <author> Karl J. Lieberherr. </author> <title> Adaptive Object-Oriented Software: The Demeter Method with Propagation Patterns . PWS Publishing 1996. </title>
Reference-contexts: In the software architec ture community, architecture description languages (ADLs) have been created to support the creation, refinement, validation, and analysis of systems at the architectural level. Languages such as Rapide [ref], Aesop [Garlan+94], UniCon [Shaw+95], MetaH [ref], Wright [ref], Demeter <ref> [Lieberherr96] </ref>, Gestalt [ref], Artek [ref], RESOLVE [ref], and others exist and are under continuing development, and provide (as a group) a significant impetus to consider an architecture as an artifact of tangible value, and, in some cases, architectural styles as reusable design rules for system structure.
Reference: [Shaw+95] <author> Mary Shaw, Robert DeLine, Daniel V. Klein, Theodore L. Ross, David M. Young, Gregory Zelesnik. </author> <title> Abstractions for Software Architecture and Tools to Support Them. </title> <journal> IEEE Transactions on Software Engineering , May 1995. </journal>
Reference-contexts: In the software architec ture community, architecture description languages (ADLs) have been created to support the creation, refinement, validation, and analysis of systems at the architectural level. Languages such as Rapide [ref], Aesop [Garlan+94], UniCon <ref> [Shaw+95] </ref>, MetaH [ref], Wright [ref], Demeter [Lieberherr96], Gestalt [ref], Artek [ref], RESOLVE [ref], and others exist and are under continuing development, and provide (as a group) a significant impetus to consider an architecture as an artifact of tangible value, and, in some cases, architectural styles as reusable design rules for system

References-found: 6

