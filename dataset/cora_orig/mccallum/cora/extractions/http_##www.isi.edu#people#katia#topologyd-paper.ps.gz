URL: http://www.isi.edu/people/katia/topologyd-paper.ps.gz
Refering-URL: http://www.isi.edu/people/katia/
Root-URL: http://www.isi.edu
Email: katia, grig@isi.edu  
Phone: (310)822-1511 (voice) (310)823-6714 (fax)  
Title: The Performance of a Service for Network-Aware Applications  
Author: Katia Obraczka and Grig Gheorghiu 
Address: 4676 Admiralty Way suite 1001 Marina del Rey, CA 90292  
Affiliation: Information Sciences Institute University of Southern California  
Abstract: This paper evaluates the performance of topology-d, a service for applications that require knowledge of the underlying communication and computing infrastructure in order to deliver adequate performance. Topology-d estimates the state of the network and networked resources by periodically computing end-to-end latency and available bandwidth. Using its estimates, topology-d computes a fault tolerant, high bandwidth, low delay topology connecting participating sites. Topologies are periodically re-computed to take into account network and server load dynamics. Network-aware applications can then make use of topology-d's estimates and logical topologies to ensure they get adequate service from the underlying network and computing infrastructure. We deployed topology-d on 27 Internet sites throughout the world and collected latency, bandwidth and topology information for a period of two and a half months. The results of these Internet-wide experiments show that topology-d's estimates compare quite well with latency and bandwidth measurements from existing tools. We also observe that the logical topologies computed by topology-d are consistent with current latency and bandwidth estimates. The topologies are stable in the sense that the set of neighbors a host sees is small (usually 4 or 5) and stays relatively constant over time. On the other hand, we observe that topologies are responsive to changes in network and server load, as well as in group membership.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Berners-Lee, R. Cailliau, A. Luotonen, H.F. Nielsen, and A. </author> <title> Secret. The World-Wide Web. </title> <journal> Communications of the ACM, </journal> <volume> 37 </volume> <pages> 76-82, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: We give more details about topology-d's integration into Globus in Section 2. Other potential clients of our tool include replicated databases and distributed information dissemination services, such as the Web <ref> [1] </ref> and Internet archives. We anticipate that other applications can also benefit from topology-d's services. Internet cache hierarchies such as Harvest [4] and Squid [23] can also use topology-d's network and server load information to configure their cache servers. <p> For all the other graphs, "peak" and "off-peak" times are indistinguishable due to the fact that our experiments included sites that span various time zones. This current trend in network and server usage our results captured is driven by globally distributed applications such as the World Wide Web <ref> [1] </ref>. One other observation concerns the asymmetry of network paths. The fact that network links are generally asymmetric has been detected by Paxson in [19] and is confirmed by our statistics. 5.2 Topologies Logical topologies are re-computed periodically and reflect changes in network and server load.
Reference: [2] <author> CAIDA. </author> <title> Caida measurement tools taxonomy. </title> <note> Available from http://www.caida.org/Tools/taxonomy.html. </note>
Reference-contexts: IPPM's main goal is to provide and standardize metrics and methodologies for the measurement of Internet performance, particularly "IP clouds", which are essential for the connectivity of the Internet [18]. CAIDA (Cooperative Association for Internet Data Analysis) publishes on the Web <ref> [2] </ref> a very thorough Measurement Tool Taxonomy which surveys measurement tools currently available, both as free and commercial software. One such tool, TReno [15], has become a good candidate for IPPM-endorsement.
Reference: [3] <author> R. Carter and M. Crovella. </author> <title> Dynamic server selection using bandwidth probing in wide-area networks. </title> <institution> Boston University Computer Science Dept. TR-96-007, </institution> <month> March </month> <year> 1996. </year>
Reference-contexts: A different approach to measuring network bandwidth is taken by bprobe and cprobe <ref> [3] </ref>. These tools probe the network by sending several pairs (bprobe) or a short train of packets (cprobe). They estimate network bandwidth by measuring the inter-arrival time between the packets.
Reference: [4] <author> A. Chankhunthod, P. Danzig, C. Neerdaels, M. Schwartz, and K. Worrell. </author> <title> A hierarchical internet object cache. </title> <booktitle> Proceedings of the USENIX 1996 Conference, </booktitle> <pages> pages 153-163, </pages> <month> January </month> <year> 1996. </year> <note> http://catarina.usc.edu/danzig/cache.ps. </note>
Reference-contexts: Other potential clients of our tool include replicated databases and distributed information dissemination services, such as the Web [1] and Internet archives. We anticipate that other applications can also benefit from topology-d's services. Internet cache hierarchies such as Harvest <ref> [4] </ref> and Squid [23] can also use topology-d's network and server load information to configure their cache servers. Topology-d's logical topologies can be tailored to fit the requirements of different distributed applications.
Reference: [5] <author> S. Fitzgerald et al. </author> <title> A directory service for configuring high-performance distributed computations. </title> <booktitle> Proceedings of the 6th IEEE International Symposium on High Performance Distributed Computing, </booktitle> <month> August </month> <year> 1997. </year>
Reference-contexts: The Globus infrastructure presents to its users an uniform interface to "networked virtual supercomputers" or "meta-computing abstract machines". Two essential pieces in the Globus system are the Metacomputing Directory Service (MDS) <ref> [5] </ref> and the resource broker. MDS is a pervasive repository of information about the current state of the resources, information which is used by the resource broker in order to meet the resource requirements of the users.
Reference: [6] <author> V.Paxson et al. </author> <title> Framework for ip performance metrics. </title> <note> Internet Draft available at ftp://ftp.advanced.org/pub/IPPM/framework.txt, expiration date: </note> <month> January </month> <year> 1998. </year>
Reference-contexts: We should mention that the IPPM has recently produced an Internet Draft <ref> [6] </ref> which draws heavily from Paxson's framework. 5 Our methodology is active in the sense that we generate new traffic as part of the measurement process. Examples of other tools employing an active strategy are TReno and pathchar. <p> Even though they ran concurrently, their results were spaced in time due to their different execution times. In the next set of experiments, we plan to sample the data using exponentially distributed intervals (e.g., random arrivals with Poisson distribution as proposed by <ref> [6] </ref>). The output of ping and netperf was used to validate topology-d's latency and bandwidth, respectively. Graphs showing these results are shown in Section 5 below. We also ran traceroute at three of the data collection sites: redondo.ece.uci.edu, cosmo.mcs.anl.gov, and mirage.irdu.nus.sg. <p> One set lists the minimum, maximum, mean and standard deviation for the sample population and the other set lists the 10th and 90th percentiles, the median and the interquartile range (IQR, i.e. the 75th percentile minus the 25th percentile) for the same sample population. It has been shown <ref> [6] </ref> that the data population obtained by doing network measurements over the Internet does not present a normal or Gaussian distribution. Hence, showing the mean and standard deviation are not meaningful statistics for Internet measurements.
Reference: [7] <author> I. Foster and C. Kesselman. Globus: </author> <title> A metacomputing infrastructure toolkit. International Journal of Supercomputer Application, </title> <note> to appear. Available at Globus web page http://www.globus.org/. </note>
Reference-contexts: Al--ternatively, topology-d's data can be either directly consumed by applications or it can be periodically published in a directory service for consultation by interested third-parties. The latter approach is the one adopted in the Globus metacomputing infrastructure <ref> [7] </ref>, which currently publishes topology-d's estimates in its directory service. The data is then interpreted by a resource broker which uses it to make informed decisions about the best utilization of the available computational resources. We give more details about topology-d's integration into Globus in Section 2. <p> One important client of our tool is the resource broker used in the Globus metacomputing infrastructure <ref> [7] </ref>. Globus is a large-scale project which aims to enable the deployment of high-performance computing-intensive distributed applications by taking advantage of resources such as high-speed networks and supercomputers. The Globus infrastructure presents to its users an uniform interface to "networked virtual supercomputers" or "meta-computing abstract machines".
Reference: [8] <author> J. Gosling and H. McGilton. </author> <title> The java language environment:a white paper. </title> <note> Available from http://www.pas.com.au/java/doc/. </note>
Reference-contexts: We should mention that both the integration of topology-d within the complex installation procedure of the Globus software system and the publishing of our tool's data in MDS have been accomplished. Deployment at numerous test sites will also start very soon. The advent of Java <ref> [8] </ref> caused a proliferation of client-side applets used for an extremely large variety of purposes.
Reference: [9] <institution> Matrix Information and Directory Services (MIDS). Internet weather report. </institution> <note> Available from http://www3.mids.org/weather. </note>
Reference-contexts: The issue of how exactly this best server is chosen is somehow skipped over by the authors, who only mention the possibility of employing a service such as the MIDS Internet Weather Report <ref> [9] </ref>, without actually using it. It is in this context that we feel out tool could be used with success by providing the director all the information it needs (including the logical topology) in order to make its choice.
Reference: [10] <author> ISMA. </author> <title> Internet statistics and metrics analysis. </title> <note> Available from http://www.nlar.net/ISMA. </note>
Reference-contexts: The topic of Internet Statistics and Metrics Analysis (ISMA) has been so active that it deserved its own workshops for the last two years <ref> [10] </ref>. The topic is also addressed by the IP Provider Metrics (IPPM) subgroup of the IETF's Bench Marking Working Group (BMWG).
Reference: [11] <author> V. Jacobson. Pathchar: </author> <title> A tool to infer characteristics of internet paths. </title> <note> Available from ftp://ftp.ee.lbl.gov/pathchar/, </note> <month> April </month> <year> 1997. </year>
Reference-contexts: We present more details on netperf when we explain our experimental methodology in Section 4. Van Jacobson, the author of traceroute, recently released pathchar <ref> [11] </ref>, a tool which estimates bandwidth, delay, average queue and loss rate of every hop between a given source-destination pair of Internet hosts. Pathchar uses the ICMP protocol's Time Exceeded response to packets whose TTL has expired.
Reference: [12] <author> R. Jones. netperf. </author> <note> Available from http://www.cup.hp.com/netperf/NetperfPage.html. 16 </note>
Reference-contexts: Topology-d, on the other hand, helps end users to know what throughput they can actually get using their particular TCP flavor, since this is the performance perceived by applications. For this reason, we decided to use netperf <ref> [12] </ref> as the throughput measurement tool against which we compare topology-d's bandwidth estimates to evaluate their accuracy. We tried to use TReno to get an upper bound for the throughput that can be expected out of a particular network link, but TReno requires root access for installation 2 . <p> Table 3 lists the four data collection sites. We also limited the data collection period to one week; during these seven days, we ran ping and netperf every hour while running topology-d. Netperf <ref> [12] </ref> is a benchmarking tool that can be used to measure bulk data transfer performance in both TCP and UDP modes; it estimates the available network throughput by sending packets of configurable length over a configurable period of time (10 seconds by default).
Reference: [13] <author> J.Sedayao. Imeter. </author> <note> Available from ftp://ftp.intel.com/pub/ietf/ippm/Imeter-1.1.tar.gz. </note>
Reference-contexts: A series of Perl scripts then parsed the log files to obtain summaries and data points. To plot the data, we used the webgraph utility developed at Intel and bundled in the Imeter <ref> [13] </ref> software distribution. Webgraph is a Perl script that operates on set of datapoints. It uses gnuplot and ppmtogif to generate a graph in PostScript and GIF formats and then appends the graph to an HTML document. To generate statistics from our data points, we used the robostats package [16].
Reference: [14] <author> D. De Lucia. topology-d. </author> <note> Available from http://www.isi.edu/people/katia/topologyd-1.11.tar.gz. </note>
Reference-contexts: However, all topology-d sites have the same functionality and it will be quite straightforward to implement a master selection algorithm. 3.3 Installing topology-d Topology-d's installation script is written in Perl and is highly cofigurable. Topology-d`s distribution including source code, installation script and documentation is publically available from <ref> [14] </ref>. The tool was originally developed for SunOS 4.1 platforms, but is also running on Solaris, HP-UX and SGI Irix. We are currently porting it to other Unix platforms, such as IBM AIX. Table 1 describes the configurable group parameters and shows their values for the experiments.
Reference: [15] <author> M. Mathis and J. Madhavi. </author> <title> Diagnosting internet congestion with a transport layer performance tool. </title> <booktitle> Proceedings of the INET 1996, </booktitle> <year> 1996. </year>
Reference-contexts: CAIDA (Cooperative Association for Internet Data Analysis) publishes on the Web [2] a very thorough Measurement Tool Taxonomy which surveys measurement tools currently available, both as free and commercial software. One such tool, TReno <ref> [15] </ref>, has become a good candidate for IPPM-endorsement. TReno aims at accurately measuring the bulk transfer capacity of network links by implementing its own state-of-the-art TCP algorithm which makes use of Selective Acknowledgements (SACK).
Reference: [16] <author> G. Minshall. robostats. </author> <note> Available from http://www.ipsilon.com/ minshall/sw/robostats/ robostats-0.9.4/robostats.html, </note> <month> September </month> <year> 1997. </year>
Reference-contexts: Webgraph is a Perl script that operates on set of datapoints. It uses gnuplot and ppmtogif to generate a graph in PostScript and GIF formats and then appends the graph to an HTML document. To generate statistics from our data points, we used the robostats package <ref> [16] </ref>. Robostats takes in a file containing the data points and generates two different sets of statistics.
Reference: [17] <author> K. Obraczka, P.B. Danzig, D. DeLucia, and E. Tsai. </author> <title> A tool for massively replicating internet archives: Design, implementation, and experience. </title> <booktitle> Proceedings of the 16th. IEEE ICDCS, </booktitle> <pages> pages 657-664, </pages> <month> May </month> <year> 1996. </year>
Reference-contexts: The goal of these experiments was to validate the estimates topology-d collects and the topologies it computes. We describe our experiments and results in Sections 4 and 5. Section 3 presents an overview of topology-d. More details on topology-d's original motivation and design can be found in <ref> [17] </ref>, which also presents preliminary performance evaluation results on a local-area network. 2 Related Work This section reviews related work in the area of Internet measurement. It also discusses several network-aware applications and how they can make use of a service like topology-d.
Reference: [18] <author> V. Paxson. </author> <title> Towards a framework for defining internet performance metrics. </title> <booktitle> Proceedings of the INET 1996, </booktitle> <year> 1996. </year>
Reference-contexts: The topic is also addressed by the IP Provider Metrics (IPPM) subgroup of the IETF's Bench Marking Working Group (BMWG). IPPM's main goal is to provide and standardize metrics and methodologies for the measurement of Internet performance, particularly "IP clouds", which are essential for the connectivity of the Internet <ref> [18] </ref>. CAIDA (Cooperative Association for Internet Data Analysis) publishes on the Web [2] a very thorough Measurement Tool Taxonomy which surveys measurement tools currently available, both as free and commercial software. One such tool, TReno [15], has become a good candidate for IPPM-endorsement. <p> The update period and estimates period determine how often the logical topology is updated and how frequest sites report their estimates to the group. 3.4 Measurement strategy To conclude this section, we will put our measurement strategy in the context of the framework suggested by Vern Paxson <ref> [18] </ref>. We should mention that the IPPM has recently produced an Internet Draft [6] which draws heavily from Paxson's framework. 5 Our methodology is active in the sense that we generate new traffic as part of the measurement process.
Reference: [19] <author> V. Paxson. </author> <title> End-to-end routing behavior in the internet. </title> <booktitle> Proceedings of the ACM Sigcomm 1996, </booktitle> <pages> pages 25-38, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Our form of hard cooperation is fault tolerant and suitable for asymmetrical link environments like the Internet <ref> [19] </ref>. <p> This current trend in network and server usage our results captured is driven by globally distributed applications such as the World Wide Web [1]. One other observation concerns the asymmetry of network paths. The fact that network links are generally asymmetric has been detected by Paxson in <ref> [19] </ref> and is confirmed by our statistics. 5.2 Topologies Logical topologies are re-computed periodically and reflect changes in network and server load. For our experiments, we configured topology-d to re-compute the group's topology every hour. We sampled the group's topology every hour.
Reference: [20] <author> M. Ranganathan, A. Acharya, S. Sharma, and J. Saltz. </author> <title> Network-aware mobile programs. </title> <booktitle> Proceedings of the USENIX 1997 Technical Conference, </booktitle> <year> 1997. </year>
Reference-contexts: Since these are end-to-end measurements, they capture both network and server load. Based on these estimates, topology-d computes a fault tolerant, high bandwidth, low delay topology connecting participating sites. Topologies are periodically re-computed to take into account network and server load dynamics. 1 We borrowed the term network-aware from <ref> [20] </ref>. 1 In the simplest case, topology-d's estimates can be logged for future assessments of the network status. Al--ternatively, topology-d's data can be either directly consumed by applications or it can be periodically published in a directory service for consultation by interested third-parties. <p> It is in this context that we feel out tool could be used with success by providing the director all the information it needs (including the logical topology) in order to make its choice. Ranganathan et al. developed their "network-aware mobile programs" <ref> [20] </ref> which are Java applets that can adapt to variations in network characteristics. Their mobile Internet chat application uses the information about the network conditions to dynamically place the chat server in order to minimize the response time for the end-users.
Reference: [21] <author> R.Schemers. fping. </author> <note> Available from ftp://slapshot.stanford.edu/pub. </note>
Reference-contexts: Network throughput is not of concern for Lachesis, since for browsing the Web network delay is much more critical than throughput. Lachesis is implemented as a Perl script around Stanford University's fping program <ref> [21] </ref>, which in its turn uses ICMP Echos and ICMP Echo Replies to measure network latency. 2.2 Applications The next paragraphs will discuss some of the applications which can benefit from a service like the one offered by our tool, since good measurements and estimates of the network performance are essential
Reference: [22] <author> J. Sedayao and K. Akita. Lachesis: </author> <title> A tool for benchmarking internet service providers. </title> <booktitle> Proceedings of the LISA IX Conference, </booktitle> <year> 1995. </year>
Reference-contexts: Due to the explosion of the World Wide Web, there is an increasing interest in measuring performance aspects of the Internet specifically related to the WWW. Such Web-based end-to-end measurements seek to determine the responsiveness of the network by simulating user Web-browsing sessions. For example, Lachesis <ref> [22] </ref> was designed to assess the performance of Internet Service Providers (ISPs).
Reference: [23] <author> D. Wessels. </author> <title> Squid internet object cache. </title> <note> Squid web page http://squid.nlanr.net/, July 1997. </note>
Reference-contexts: Other potential clients of our tool include replicated databases and distributed information dissemination services, such as the Web [1] and Internet archives. We anticipate that other applications can also benefit from topology-d's services. Internet cache hierarchies such as Harvest [4] and Squid <ref> [23] </ref> can also use topology-d's network and server load information to configure their cache servers. Topology-d's logical topologies can be tailored to fit the requirements of different distributed applications. In the case of replicated information services, topology-d generates fault-tolerant topologies that try to minimize both update propagation cost and time.
Reference: [24] <author> R. Wolski. </author> <title> Forecasting network performance to support dynamic scheduling using the network weather service. </title> <booktitle> Proceedings of the 6th IEEE International Symposium on High Performance Distributed Computing, </booktitle> <month> August </month> <year> 1997. </year>
Reference-contexts: Before looking at some examples of such applications, we will discuss two other existing middleware services similar in certain aspects to our tool. The Network Weather Service (NWS) <ref> [24] </ref> forecasts the end-to-end throughput and latency attainable by TCP/IP-based applications. NWS collects data using netperf and then applies to the data a set of forecasting methods, including mean-based, median-based, and autoregressive models.
Reference: [25] <author> C. Yoshikawa, B. Chun, P. Eastham, A. Vahdat, T. Anderson, and D. Culler. </author> <title> Using smart clients to build scalable services. </title> <booktitle> Proceedings of the USENIX 1997 Technical Conference, </booktitle> <year> 1997. </year> <month> 17 </month>
Reference-contexts: Deployment at numerous test sites will also start very soon. The advent of Java [8] caused a proliferation of client-side applets used for an extremely large variety of purposes. The "smart clients" of Yoshikawa et al. <ref> [25] </ref>, part of the Berkeley NOW (Network Of Workstations) 3 project, are in fact two Java applets which take a client-side approach to providing transparent access to multi--server Internet services such as HTTP and FTP.
References-found: 25

