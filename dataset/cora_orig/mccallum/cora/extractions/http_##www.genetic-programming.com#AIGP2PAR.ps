URL: http://www.genetic-programming.com/AIGP2PAR.ps
Refering-URL: http://www.genetic-programming.com/jkpubs96.html
Root-URL: http://www.genetic-programming.com/jkpubs96.html
Author: David Andre and John R. Koza 
Note: 16.1 Introduction  
Abstract: This chapter describes the parallel implementation of genetic programming in the C programming language using a PC type computer (running Windows) acting as a host and a network of processing nodes using the transputer architecture. Using this approach, researchers of genetic algorithms and genetic programming can acquire computing power that is intermediate between the power of currently available workstations and that of supercomputers at a cost that is intermediate between the two. This approach is illustrated by a comparison of the computational effort required to solve the problem of symbolic regression of the Boolean even-5-parity function with different migration rates. Genetic programming required the least computational effort with an 5% migration rate. Moreover, this computational effort was less than that required for solving the problem with a serial computer and a panmictic population of the same size. That is, apart from the nearly linear speedup in executing a fixed amount of code inherent in the parallel implementation of genetic programming, the use of distributed sub-populations with only limited migration delivered more than linear speedup in solving the problem. Amenability to parallelization is an appealing feature of genetic algorithms, evolutionary programming, evolution strategies, classifier systems, and genetic programming [Holland 1975; Tanese 1989; Goldberg 1989a; Stender 1993]. The probability of success in applying the genetic algorithm to a particular problem often depends on the adequacy of the size of the population in relation to the difficulty of the problem. Although many moderately sized problems can be solved by the genetic algorithm using currently available workstations, more substantial problems usually require larger populations. Since the computational burden of the genetic algorithm is proportional to the population size, more computing power is required to solve more substantial problems. Increases in computing power can be realized by either increasing the speed of computation or by parallelizing the application. Fast serial supercomputers and many parallel supercomputers are, of course, expensive and may not be accessible. Therefore, we focus our attention on other more flexible, general-purpose, and inexpensive methods of parallelization. Section 16.2 describes our search for a practical option that provides computing power that is intermediate between that of workstations and supercomputers at a price (in terms of both money and programming effort) that is intermediate between that of workstations and supercomputers. Section 16.3 then describes the successful parallel implementation of genetic programming in the C language using a PC 486 type computer and a network of transputers. Section 16.4 compares the computational effort required to solve a 
Abstract-found: 1
Intro-found: 1
Reference: <author> Abramson, D., Mills, G., and Perkins, S. </author> <year> (1994). </year> <title> Parallelization of a genetic algorithm for the computation of efficient train schedules. </title> <editor> In Arnold, D., Christie, R., Day, J., and Roe, P. (editors). </editor> <booktitle> Parallel Computing and Transputers. </booktitle> <address> Amsterdam: </address> <publisher> IOS Press. p 139149. </publisher>
Reference: <author> Dietz, H. G. </author> <year> (1992). </year> <title> Common subexpression induction. </title> <note> Parallel Processing Laboratory Technical Report TREE-92-5. </note> <institution> School of Electrical Engineering. Purdue University. </institution>
Reference: <author> Dietz, H. G. and Cohen, W. E. </author> <year> (1992). </year> <title> A massively parallel MIMD implemented by SIMD hardware. </title> <note> Parallel Processing Laboratory Technical Report TREE-92-4. </note> <institution> School of Electrical Engineering. Purdue University. </institution>
Reference: <author> Goldberg, D. E. (l989a). </author> <title> Genetic Algorithms in Search, Optimization, </title> <booktitle> and Machine Learning. </booktitle> <address> Reading, MA: </address> <publisher> Addison-Wesley. </publisher>
Reference: <author> Goldberg, D. E. </author> <year> (1989b). </year> <title> Sizing populations for serial and parallel genetic algorithms. </title> <editor> In Schaffer, J. D. (editor). </editor> <booktitle> Proceedings of the Third International Conference on Genetic Algorithms. </booktitle> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann Publishers Inc. </publisher> <pages> p 70-79. </pages>
Reference: <author> Holland, J. H. </author> <year> (1975). </year> <title> Adaptation in Natural and Artificial Systems: An Introductory Analysis with Applications to Biology, Control, </title> <booktitle> and Artificial Intelligence. </booktitle> <address> Ann Arbor, MI: </address> <publisher> University of Michigan Press. </publisher> <address> Also Cambridge, MA: </address> <publisher> The MIT Press 1992. </publisher>
Reference: <author> Juric, M., Potter., W. D., and Plaksin, M. </author> <year> (1995). </year> <title> Using the parallel virtual machine for hunting snake-in-the-box codes. </title> <editor> In Arabnia, H. R. </editor> <booktitle> (editor) Transputer Research and Applications 7. </booktitle> <address> Amsterdam: </address> <publisher> IOS Press. </publisher>
Reference: <editor> Kinnear, K. E. Jr. (editor). </editor> <booktitle> (1994). Advances in Genetic Programming. </booktitle> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference: <author> Koza, J. R. </author> <year> (1992). </year> <title> Genetic Programming: On the Programming of Computers by Means of Natural Selection. </title> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference: <author> Koza, J. R. </author> <year> (1994a). </year> <title> Genetic Programming II: Automatic Discovery of Reusable Programs. </title> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference: <author> Koza, J. R. </author> <year> (1994b). </year> <title> Architecture-altering operations for evolving the architecture of a multipart program in genetic programming. </title> <institution> Stanford University Computer Science Department technical report STAN-CS-TR-94-1528. </institution> <month> October 21, </month> <year> 1994. </year>
Reference: <author> Min, S. L. </author> <year> (1994). </year> <title> Feasibility of evolving self-learned pattern recognition applied toward the solution of a constrained system using genetic programming. </title> <editor> In Koza, J. R. (editor). </editor> <booktitle> Genetic Algorithms at Stanford 1994. </booktitle> <address> Stanford, CA: </address> <publisher> Stanford University Bookstore. </publisher> <address> ISBN 0-18-187263-3. </address>
Reference: <author> Robertson, G. (l987). </author> <title> Parallel implementation of genetic algorithms in a classifier system. </title> <editor> In Davis, L. (editor). </editor> <title> Genetic Algorithms and Simulated Annealing. </title> <publisher> London: Pittman. </publisher>
Reference: <author> Schwehm, M. </author> <year> (1992). </year> <title> Implementation of genetic algorithms on various interconnection networks. </title> <editor> In Valero, M, Onate, E., Jane, M., Larriba, J. L., Suarez, B. (editor). </editor> <booktitle> Parallel Computing and Transputer Applications. </booktitle> <address> Amsterdam: </address> <publisher> IOS Press. </publisher> <pages> p 195-203. </pages>
Reference: <author> Singleton, A. </author> <year> (1994). </year> <type> Personal communication. </type>
Reference: <editor> Stender, J. (editor). </editor> <booktitle> (1993). Parallel Genetic Algorithms. </booktitle> <address> Amsterdam: </address> <publisher> IOS Publishing. </publisher>
Reference: <author> Tanese, R. </author> <year> (1989). </year> <title> Distributed Genetic Algorithm for Function Optimization. </title> <type> PhD. dissertation. </type> <institution> Department of Electrical Engineering and Computer Science. University of Michigan. </institution>
Reference: <author> Tout, K., Ribeiro-Filho, B, Mignot, B, and Idlebi, N. A. </author> <year> (1994). </year> <title> A cross-platform parallel genetic algorithms programming environment. Transputer Applications and Systems '94. </title> <publisher> Amsterdam: IOS Press. </publisher> <year> 1994. </year> <title> p 7990. </title>
Reference: <author> Wright, Sewall. </author> <year> (1943). </year> <title> Genetics 28. p 114. PARALLEL GENETIC PROGRAMMING: A SCALABLE IMPLEMENTATION USING THE TRANSPUTER ARCHITECTURE David Andre Visiting Scholar Computer Science Department Stanford University 860 Live Oak Ave, </title> <address> #4 Menlo Park, CA 94025 USA EMAIL: andre@flamingo.stanford.edu PHONE: 415-326-5113 WWW: http://www-leland.stanford.edu/~phred/ John R. </address> <institution> Koza Computer Science Department Stanford University Stanford, </institution> <address> CA 94305-2140 USA EMAIL: Koza@CS.Stanford.Edu PHONE: 415-941-0336 FAX: 415-941-9430 WWW: http://www-cs-faculty.stanford.edu/~koza/ </address>
References-found: 19

