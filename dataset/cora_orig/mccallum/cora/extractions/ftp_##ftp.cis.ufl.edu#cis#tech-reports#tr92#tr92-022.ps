URL: ftp://ftp.cis.ufl.edu/cis/tech-reports/tr92/tr92-022.ps
Refering-URL: http://www.cis.ufl.edu/tech-reports/tech-reports/tr92-abstracts.html
Root-URL: http://www.cis.ufl.edu
Title: SIMPACK: GETTING STARTED WITH SIMULATION PROGRAMMING IN C AND C++  
Author: Paul A. Fishwick 
Address: Bldg. CSE, Room 301 Gainesville, FL 32611  
Affiliation: Dept. of Computer Information Science University of Florida  
Abstract: SimPack is a collection of C and C++ libraries and executable programs for computer simulation. In this collection, several different simulation algorithms are supported including discrete event simulation, continuous simulation and combined (multimodel) simulation. The purpose of the SimPack toolkit is to provide the user with a set of utilities that illustrate the basics of building a working simulation from a model description. We demonstrate that special purpose simulation programming languages can be easily constructed using language translation software with the SimPack utilities which act as the "assembly language." We present several different dynamical system model forms and overview the methods used in SimPack for executing these models. SimPack includes some fairly extensive simulation facilities, and is in use by various instructors, researchers and industrial analysts for their modeling and simulation experiments. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Cellier, F. E. </author> <year> 1991. </year> <title> Continuous System Modeling. </title> <publisher> Springer Verlag. </publisher>
Reference-contexts: such as GPSS (Schriber 1991), SLAM (Pritsker 1986), SIM-SCRIPT (Markowitz, Kiviat and Villaneuva 1987) and SIMAN (Pegden, Sadowski and Shannon 1990) have been used extensively over the past decade, while continuous languages such as CSMP, DESIRE (Korn 1989) and continuous system language derivatives provide adequate support for modeling continuous systems <ref> (Cellier 1991) </ref> in the form of block models. In addition to simulation languages, there are toolkits or libraries such as CSIM (Schwetman 1988; Schwetman 1990), SMPL (MacDougall 1987) and SIM++ (Lomow and Baezner 1990) which are C and C++ based libraries for discrete event simulation.
Reference: <author> Fishwick, P. A. </author> <year> 1991. </year> <title> Heterogeneous Decomposition and Coupling for Combined Modeling. </title> <booktitle> In 1991 Winter Simulation Conference, </booktitle> <pages> pages 1199 - 1208, </pages> <address> Phoenix, AZ. </address>
Reference: <author> Fishwick, P. A. </author> <year> 1992. </year> <title> Computer Simulation Modeling: Methodology, Algorithms and Programs. </title> <note> (to be published as a textbook). </note>
Reference-contexts: We are continuing to investigate new C++ approaches to modeling including the use of the template capability for unifying the simulation operation given a multitude of object types. We are also including SimPack as part of an upcoming senior/graduate level textbook <ref> (Fishwick 1992) </ref> which focuses on modeling. ACKNOWLEDGMENTS During the course of developing SimPack, several students made substantial contributions. Brian Harring-ton developed Xsimcode which is an X window interface that permits the user to create queuing models which are then translated into C calls in the queuing library.
Reference: <author> Fishwick, P. A. and Zeigler, B. P. </author> <year> 1992. </year> <title> A Multimodel Methodology for Qualitative Model Engineering. </title> <journal> TR92-022 Computer and Information Sciences, University of Florida 9 ACM Transactions on Modeling and Computer Simulation, </journal> <volume> 1(2). </volume>
Reference-contexts: We are continuing to investigate new C++ approaches to modeling including the use of the template capability for unifying the simulation operation given a multitude of object types. We are also including SimPack as part of an upcoming senior/graduate level textbook <ref> (Fishwick 1992) </ref> which focuses on modeling. ACKNOWLEDGMENTS During the course of developing SimPack, several students made substantial contributions. Brian Harring-ton developed Xsimcode which is an X window interface that permits the user to create queuing models which are then translated into C calls in the queuing library.
Reference: <author> Korn, G. A. </author> <year> 1989. </year> <title> Interactive Dynamic System Simulation. </title> <publisher> McGraw Hill. </publisher>
Reference-contexts: Classic discrete event simulation languages such as GPSS (Schriber 1991), SLAM (Pritsker 1986), SIM-SCRIPT (Markowitz, Kiviat and Villaneuva 1987) and SIMAN (Pegden, Sadowski and Shannon 1990) have been used extensively over the past decade, while continuous languages such as CSMP, DESIRE <ref> (Korn 1989) </ref> and continuous system language derivatives provide adequate support for modeling continuous systems (Cellier 1991) in the form of block models.
Reference: <author> Lomow, G. and Baezner, D. </author> <year> 1990. </year> <title> A Tutorial Introduction to Object-Oriented Simulation and Sim++. </title> <booktitle> In 1990 Winter Simulation Conference, </booktitle> <pages> pages 149 - 153, </pages> <address> New Orleans, LA. </address>
Reference-contexts: In addition to simulation languages, there are toolkits or libraries such as CSIM (Schwetman 1988; Schwetman 1990), SMPL (MacDougall 1987) and SIM++ <ref> (Lomow and Baezner 1990) </ref> which are C and C++ based libraries for discrete event simulation. SMPL is based in C while CSIM and SIM++ contain class libraries for programming in C or C++.
Reference: <author> MacDougall, M. H. </author> <year> 1987. </year> <title> Simulating Computer Systems: Techniques and Tools. </title> <publisher> MIT Press. </publisher>
Reference-contexts: In addition to simulation languages, there are toolkits or libraries such as CSIM (Schwetman 1988; Schwetman 1990), SMPL <ref> (MacDougall 1987) </ref> and SIM++ (Lomow and Baezner 1990) which are C and C++ based libraries for discrete event simulation. SMPL is based in C while CSIM and SIM++ contain class libraries for programming in C or C++. <p> In C++, the request is in the form of a method attached to a facility object: facility.request (token,priority). As an example system consider a CPU/Disk system illustrated in <ref> (MacDougall 1987) </ref> and shown in figure 3. There is a single CPU (Central Processing Unit) that will serve to execute a set number of tasks. Each task will have disk I/O requirements.
Reference: <author> Markowitz, H. M., Kiviat, P. J., and Villaneuva, R. </author> <year> 1987. </year> <title> Simscript II.5 Programming Language. </title> <publisher> CACI, Inc., </publisher> <address> Los Angeles, CA. </address>
Reference-contexts: Continuous methods are normally associated with block diagram methods for control and system engineering. Some available software can perform both types of simulation; however, bulk support is usually available in only one form. Classic discrete event simulation languages such as GPSS (Schriber 1991), SLAM (Pritsker 1986), SIM-SCRIPT <ref> (Markowitz, Kiviat and Villaneuva 1987) </ref> and SIMAN (Pegden, Sadowski and Shannon 1990) have been used extensively over the past decade, while continuous languages such as CSMP, DESIRE (Korn 1989) and continuous system language derivatives provide adequate support for modeling continuous systems (Cellier 1991) in the form of block models.
Reference: <author> Pegden, C. D., Sadowski, R. P., and Shannon, R. E. </author> <year> 1990. </year> <title> Introduction to Simulation using SIMAN. Systems Modeling Corporation, </title> <address> Sewickley, PA. </address>
Reference-contexts: Some available software can perform both types of simulation; however, bulk support is usually available in only one form. Classic discrete event simulation languages such as GPSS (Schriber 1991), SLAM (Pritsker 1986), SIM-SCRIPT (Markowitz, Kiviat and Villaneuva 1987) and SIMAN <ref> (Pegden, Sadowski and Shannon 1990) </ref> have been used extensively over the past decade, while continuous languages such as CSMP, DESIRE (Korn 1989) and continuous system language derivatives provide adequate support for modeling continuous systems (Cellier 1991) in the form of block models.
Reference: <author> Pritsker, A. A. B. </author> <year> 1986. </year> <title> Introduction to Simulation and SLAM II. </title> <publisher> Halsted Press. </publisher>
Reference-contexts: Continuous methods are normally associated with block diagram methods for control and system engineering. Some available software can perform both types of simulation; however, bulk support is usually available in only one form. Classic discrete event simulation languages such as GPSS (Schriber 1991), SLAM <ref> (Pritsker 1986) </ref>, SIM-SCRIPT (Markowitz, Kiviat and Villaneuva 1987) and SIMAN (Pegden, Sadowski and Shannon 1990) have been used extensively over the past decade, while continuous languages such as CSMP, DESIRE (Korn 1989) and continuous system language derivatives provide adequate support for modeling continuous systems (Cellier 1991) in the form of block
Reference: <author> Schriber, T. J. </author> <year> 1991. </year> <title> An Introduction to Simulation using GPSS/H. </title> <publisher> John Wiley. </publisher>
Reference-contexts: Continuous methods are normally associated with block diagram methods for control and system engineering. Some available software can perform both types of simulation; however, bulk support is usually available in only one form. Classic discrete event simulation languages such as GPSS <ref> (Schriber 1991) </ref>, SLAM (Pritsker 1986), SIM-SCRIPT (Markowitz, Kiviat and Villaneuva 1987) and SIMAN (Pegden, Sadowski and Shannon 1990) have been used extensively over the past decade, while continuous languages such as CSMP, DESIRE (Korn 1989) and continuous system language derivatives provide adequate support for modeling continuous systems (Cellier 1991) in the
Reference: <author> Schwetman, H. </author> <year> 1988. </year> <title> Using CSIM to Model Complex Systems. </title> <booktitle> In 1988 Winter Simulation Conference, </booktitle> <pages> pages 246 - 253, </pages> <address> San Diego, CA. </address>

References-found: 12

