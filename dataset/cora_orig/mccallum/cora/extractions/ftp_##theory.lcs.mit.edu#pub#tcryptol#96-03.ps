URL: ftp://theory.lcs.mit.edu/pub/tcryptol/96-03.ps
Refering-URL: http://theory.lcs.mit.edu/~tcryptol/1996/96-03.html
Root-URL: 
Title: On Monotone Function Closure of Perfect and Statistical Zero-Knowledge Extended Abstract  
Author: Ivan Damg-ard, Ronald Cramer, CWI 
Affiliation: Aarhus University, BRICS and  
Abstract: Assume we are given a language L with an honest verifier perfect zero-knowledge proof system. Assume also that the proof system is a 3 move Arthur-Merlin game. The class of such languages includes all random self-reducible language, and also any language with a perfect zero-knowledge non-interactive proof. We show that such a language satisfies a certain closure property, namely that languages constructed from L by applying certain monotone functions to statements on membership in L have perfect zero-knowledge proof systems. The new set of languages we can build includes L itself, but also for example languages consisting of n words of which at least t n are in L. A similar closure property is shown to hold for the complement of L and for statistical zero-knowledge. The property we need for the monotone functions used to build the new languages is that there are efficient secret sharing schemes for their associated access structures. This includes (but is not necessarily limited to) all monotone functions with polynomial size monotone formulas.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M.Bellare and M.Yung: </author> <title> On certifying cryptographic tools: the case of trapdoor permutations, </title> <booktitle> Proc. of Crypto 92. </booktitle>
Reference-contexts: In addition to RSR, this class contains e.g. perfect and statistical noninteractive ZK 1 . Hence it contains for example the language of Blum-integers [9], the language of so called 2-regular integers [3] and the language of functions that are almost permutations <ref> [1] </ref>. None of these problems seem to be in RSR.
Reference: [2] <author> J. Benaloh and J. Leichter: </author> <title> Generalized Secret Sharing and Monotone Functions, </title> <booktitle> Proc. of Crypto 88, </booktitle> <publisher> Springer Verlag LNCS series, </publisher> <pages> 25-35. </pages>
Reference-contexts: L 2 HV 3AM=SZKI P and the monotone function family F fl has an efficient secret sharing scheme with completion, then for any admissible parsing , F (; L) 2 P ZKIP , resp. F (; L) 2 SZKI P . We remark that Benaloh and Leichter <ref> [2] </ref> show how to build an efficient secret sharing scheme (which can be shown to satisfy the completion property) for any monotone formula. Hence a trivial consequence of Theorem 1.1 and [2] is Corollary 1.2 If L 2 H V 3AM=P ZKIP , resp. <p> F (; L) 2 SZKI P . We remark that Benaloh and Leichter <ref> [2] </ref> show how to build an efficient secret sharing scheme (which can be shown to satisfy the completion property) for any monotone formula. Hence a trivial consequence of Theorem 1.1 and [2] is Corollary 1.2 If L 2 H V 3AM=P ZKIP , resp. L 2 HV 3AM=SZKI P and functions in the family F have polynomial size monotone formulae then for any admissible parsing , F (; L) 2 P ZKIP , resp. F (; L) 2 SZKIP .
Reference: [3] <author> M.Blum, A. De Santis, S.Micali and G.Persiano: </author> <title> Non-Interactive Zero-Knowledge, </title> <journal> SIAM J. of Computing, </journal> <volume> vol.20, </volume> <year> 1991. </year>
Reference-contexts: In addition to RSR, this class contains e.g. perfect and statistical noninteractive ZK 1 . Hence it contains for example the language of Blum-integers [9], the language of so called 2-regular integers <ref> [3] </ref> and the language of functions that are almost permutations [1]. None of these problems seem to be in RSR.
Reference: [4] <author> R.Cramer, I.Damg-ard, and B.Schoenmakers: </author> <title> Proofs of partial knowledge and simplified design of witness hiding protocols, </title> <booktitle> proc. of Crypto 94. </booktitle>
Reference-contexts: This idea of using monotone operations to build new interactive proofs from known ones with certain properties was introduced by De Santis et al. in [7] for statistical zero-knowledge proofs and independently by Cramer et al. in <ref> [4] </ref> for witness hiding proofs of knowledge. The results in [7] apply to a quite specialized subclass of languages in PZKIP, namely random self-reducible languages (RSR). <p> Another important point is that it might seem from [7] and <ref> [4] </ref> that monotone closure holds only for protocols that satisfy a very strong and non-standard requirement for soundness, namely that a cheating prover can never answer more than 1 of the verifier's potential questions. We show that this is in fact unnecessary the standard requirement for soundness suffices. <p> We show that this is in fact unnecessary the standard requirement for soundness suffices. The key to our results is a combination of the techniques from [7] and <ref> [4] </ref> with the interactive hashing technique of Naor et al. [11]. 1.1 Summary of Results In the following we will say that the language L is in HV3AM/PZKIP, resp. HV3AM/SZKIP if it has an interactive proof system satisfying the following: 1. It is perfect, resp. statistical, honest verifier zero-knowledge. 2.
Reference: [5] <author> I.Damg-ard: </author> <title> Interactive Hashing can Simplify Zero-Knowledge Protocol Design Without Computational Assumptions, </title> <booktitle> Proc. of Crypto 93. </booktitle>
Reference-contexts: Then for any admissible parsing , F (; L 0 ) 2 SZKIP . We remark that the extra assumptions on L in the corollary are only needed to ensure that we have a unconditionally hiding bit commitment scheme, by <ref> [5] </ref>. Any other assumption that would ensure this could be substituted, e.g. existence of one-way permutations [11] or existence of collision intractable hash functions [12]. <p> Finally, it is interesting to note that our construction starts with a protocol that is only honest verifier zero-knowledge, and produces a protocol that is zero-knowledge in general. Thus our results contain parts of those of <ref> [5] </ref> as a specical case. 2 Notation and Definitions Consider a monotone function family F . In the following, if A f1; :::; ng, f n (A) means f n evaluated on a bit string with 1's in positions corresponding to elements in A and 0's elsewhere. <p> To show Corollary 1.4, notice that the assumptions imply, by results in <ref> [5] </ref>, that an unconditionally hiding bit commitment scheme exists.
Reference: [6] <author> L.Fortnow: </author> <title> The complexity of perfect zero-knowledge, </title> <journal> Adv. </journal> <note> in Comp. Research, vol.5, 1989, pp.327-344. </note>
Reference-contexts: It is unlikely that they contain NP, since the polynomial hierachy would collapse if they did <ref> [6] </ref>, on the other hand they are not known to be contained in NP, since problems such as graph non-isomorphism is in PZKIP. From a practical point of view, we note that extremely efficient perfect zero-knowledge proofs are known.
Reference: [7] <author> A.De Santis, G Di Crescenzo, G. Persiano and M.Yung: </author> <title> On Monotone Formula Closure of SKZ, </title> <booktitle> Proc. of FOCS 94. </booktitle>
Reference-contexts: This idea of using monotone operations to build new interactive proofs from known ones with certain properties was introduced by De Santis et al. in <ref> [7] </ref> for statistical zero-knowledge proofs and independently by Cramer et al. in [4] for witness hiding proofs of knowledge. The results in [7] apply to a quite specialized subclass of languages in PZKIP, namely random self-reducible languages (RSR). <p> This idea of using monotone operations to build new interactive proofs from known ones with certain properties was introduced by De Santis et al. in <ref> [7] </ref> for statistical zero-knowledge proofs and independently by Cramer et al. in [4] for witness hiding proofs of knowledge. The results in [7] apply to a quite specialized subclass of languages in PZKIP, namely random self-reducible languages (RSR). In this paper, we show that monotone closure applies to a much more general class, namely languages with 3-move AM proofs that are statistical honest verifier ZK. <p> Another important point is that it might seem from <ref> [7] </ref> and [4] that monotone closure holds only for protocols that satisfy a very strong and non-standard requirement for soundness, namely that a cheating prover can never answer more than 1 of the verifier's potential questions. We show that this is in fact unnecessary the standard requirement for soundness suffices. <p> We show that this is in fact unnecessary the standard requirement for soundness suffices. The key to our results is a combination of the techniques from <ref> [7] </ref> and [4] with the interactive hashing technique of Naor et al. [11]. 1.1 Summary of Results In the following we will say that the language L is in HV3AM/PZKIP, resp. HV3AM/SZKIP if it has an interactive proof system satisfying the following: 1. <p> It is also possible to mix to some extent languages and their complements. For example, the statement x 1 2 L 1 _ x 2 62 L 2 can be proved in statistical ZK using a straightforward generalization of a corresponding method from <ref> [7] </ref>. 7 Acknowledgement Thanks to Oded Goldreich for many constructive suggestions for an improved presentation of our results.
Reference: [8] <author> S.Goldwasser, S.Micali and C.Rackoff: </author> <title> The Knowledge Complexity of Interactive Proof Systems, </title> <publisher> SIAM J.Computing, </publisher> <address> Vol.18, pp.186-208, </address> <year> 1989. </year>
Reference-contexts: 1 Introduction Zero-knowledge proofs, introduced by Goldwasser, Micali and Rackoff <ref> [8] </ref>, offer the possibility of proving a statement while revealing nothing but the validity of the assertion. Perfect and statistical zero-knowledge proofs are special cases of zero-knowledge for which this property can be proved with out resorting to unproven complexity assumptions. <p> Next, we define the basic model for the protocols we will consider. The protocol takes place between a prover P and a verifier V , where (P; V ) is a pair of interactive Turing machines as defined in <ref> [8] </ref>. The common input to the prover and verifier is usually called x. It is chosen from some language L, and its length is denoted by k. The verifier is assumed to run in probabilistic polymial time in k. <p> The view of participant X (= P or V ) is defined to be the concatenation of all inputs to X and all messages sent in the protocol. 6 For definitions of soundness, completeness and perfect/statistical/computational zero-knowledge, we refer to <ref> [8] </ref>. In particular, soundness will be taken to mean that a cheating prover can only convince the verifier with superpoly-nomially small probability.
Reference: [9] <author> J.Van de Graaf and R.Peralta: </author> <title> A simple and secure way to show the validity of your public key, </title> <booktitle> Proc. of Crypto 87. </booktitle>
Reference-contexts: In addition to RSR, this class contains e.g. perfect and statistical noninteractive ZK 1 . Hence it contains for example the language of Blum-integers <ref> [9] </ref>, the language of so called 2-regular integers [3] and the language of functions that are almost permutations [1]. None of these problems seem to be in RSR.
Reference: [10] <author> R.Ostrovsky, Venkatesan and M.Yung: </author> <title> Interactive Hashing Simplifies Zero-Knowledge Protocol Design, </title> <booktitle> Proc. of EuroCrypt 93. </booktitle>
Reference-contexts: To show Corollary 1.4, notice that the assumptions imply, by results in [5], that an unconditionally hiding bit commitment scheme exists. Using the method from <ref> [10] </ref> such a bit commitment scheme can be used to transform any honest verifier statistical zero-knowledge protocol into one that is statistical zero-knowledge in general. 6 Extentions We have assumed for simplicity that only one basic language L is involved in our construction.
Reference: [11] <author> M.Naor, R.Ostrovsky, Venkatesan and M.Yung: </author> <title> Zero-Knowledge Arguments for NP can be Based on General Complexity Assumptions, </title> <booktitle> Proc. of Crypto 92. </booktitle>
Reference-contexts: We show that this is in fact unnecessary the standard requirement for soundness suffices. The key to our results is a combination of the techniques from [7] and [4] with the interactive hashing technique of Naor et al. <ref> [11] </ref>. 1.1 Summary of Results In the following we will say that the language L is in HV3AM/PZKIP, resp. HV3AM/SZKIP if it has an interactive proof system satisfying the following: 1. It is perfect, resp. statistical, honest verifier zero-knowledge. 2. <p> We remark that the extra assumptions on L in the corollary are only needed to ensure that we have a unconditionally hiding bit commitment scheme, by [5]. Any other assumption that would ensure this could be substituted, e.g. existence of one-way permutations <ref> [11] </ref> or existence of collision intractable hash functions [12]. All our proofs are constructive and preserve efficiency in the sense that the new provers and verifiers we construct are polynomial time machines that call the prover and verifier of the original proof system for L as subrutines. <p> In the following, a function p (k) 0 will be called negligible in k if, for any polynomial f , it holds that p (k) 1=f (k) for all sufficiently large k. 3 Interactive Hashing For our main results, we need the technique from <ref> [11] </ref> of interactive hashing, which we repeat here with some minor changes to match our context. The purpose of an interactive hashing game is to allow two mutually distrusting parties to jointly select an element at random from some (large) set. <p> V chooses v = 0 or 1 at random and sends it to P . 6. P computes an r that is correct w.r.t. c v and sends it to V . In <ref> [11] </ref>, the following is proved about this procedure: Lemma 3.1 At the end of step 4 above, an arbitrary cheating V fl has no Shannon information about which of c 0 ; c 1 is P 's original choice.
Reference: [12] <author> M. Naor and M. Yung, </author> <title> Universal one-way hash functions and their cryptographic applications, </title> <booktitle> Proc. 21st Annual ACM Symp. Theory of Computing, </booktitle> <year> 1989, </year> <pages> pp. 33-43. </pages>
Reference-contexts: Any other assumption that would ensure this could be substituted, e.g. existence of one-way permutations [11] or existence of collision intractable hash functions <ref> [12] </ref>. All our proofs are constructive and preserve efficiency in the sense that the new provers and verifiers we construct are polynomial time machines that call the prover and verifier of the original proof system for L as subrutines.
Reference: [13] <author> R.Raz and A.Wigderson: </author> <title> Monotone circuits for matching require linear depth, </title> <journal> J. ACM, vol.39, 1992, pp.736-744. </journal> <volume> 17 </volume>
Reference-contexts: Our assumption that F fl has an efficient secret sharing scheme with completion implies that functions in F can be computed in time polynomial in k, but it is known <ref> [13] </ref> that monotone functions, such as perfect matching in a bipartite graph, exist that can be computed in polynomial time, but require exponential size monotone formulae. However, to the best of our knowledge, no efficient secret sharing schemes are known for the functions studied in [13]. 4 Let L 0 be <p> k, but it is known <ref> [13] </ref> that monotone functions, such as perfect matching in a bipartite graph, exist that can be computed in polynomial time, but require exponential size monotone formulae. However, to the best of our knowledge, no efficient secret sharing schemes are known for the functions studied in [13]. 4 Let L 0 be the complement of L, and let HV SZKIP be the classes of languages with honest verifier statistical zero-knowledge proofs.
References-found: 13

