URL: http://www.cs.ucla.edu/~ltaylor/twentyfour.ps
Refering-URL: http://www.cs.ucla.edu/~ltaylor/
Root-URL: http://www.cs.ucla.edu
Email: korf@cs.ucla.edu, ltaylor@cs.ucla.edu  
Title: Finding Optimal Solutions to the Twenty-Four Puzzle  
Author: Richard E. Korf and Larry A. Taylor 
Address: Los Angeles Los Angeles, Ca. 90024  
Affiliation: Computer Science Department University of California,  
Abstract: We have found the first optimal solutions to a complete set of random instances of the Twenty-Four Puzzle, the 5fi5 version of the well-known sliding-tile puzzles. Our new contribution to this problem is a more powerful admissible heuristic function. We present a general theory for the automatic discovery of such heuristics, which is based on considering multiple sub-goals simultaneously. In addition, we apply a technique for pruning duplicate nodes in depth-first search using a finite-state machine. Finally, we observe that as heuristic search problems are scaled up, more powerful heuristic functions become both necessary and cost-effective. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Dillenburg, J.F., </author> <title> and P.C. Nelson, Perimeter search, </title> <journal> Artificial Intelligence, </journal> <volume> Vol. 65, No. 1, </volume> <month> Jan. </month> <year> 1994, </year> <pages> pp. 165-178. </pages>
Reference-contexts: Relation to Bidirectional Search The reader may notice that a heuristic based on the last moves in the solution is related to bi-directional search. The most effective form of bidirectional heuristic search is called perimeter search <ref> (Dillenburg and Nelson 1994) </ref> (Manzini 1995). A limited breadth-first search backward from the goal state is performed, and the nodes on the perimeter of this search are stored.
Reference: <author> Hansson, O., A. Mayer, and M. Yung, </author> <title> Criticizing solutions to relaxed models yields powerful admissible heuristics, </title> <journal> Information Sciences, </journal> <volume> Vol. 63, No. 3, </volume> <year> 1992, </year> <pages> pp. 207-227. </pages>
Reference-contexts: All examples in this paper refer to the Twenty-Four Puzzle, where positions are labelled by the tiles that occupy them in the goal state shown in Figure 1. Improved Admissible Heuristics Linear Conflict Heuristic The first significant improvement to Manhattan distance was the linear-conflict heuristic <ref> (Hansson, Mayer, and Yung 1992) </ref>. It applies when two tiles are in their goal row or column, but are reversed relative to their goal positions.
Reference: <author> Hart, P.E., N.J. Nilsson, and B. Raphael, </author> <title> A formal basis for the heuristic determination of minimum cost paths, </title> <journal> IEEE Transactions on Systems Science and Cybernetics, </journal> <volume> Vol. 4, No. 2, </volume> <year> 1968, </year> <pages> pp. 100-107. </pages>
Reference-contexts: Due to its small search space, optimal solutions to the Eight Puzzle can be found with breadth-first search. We first found optimal solutions to the Fifteen Puzzle using Iterative-Deepening-A* (IDA*) and the Manhattan distance heuristic function (Korf 1985). IDA* is a variant of the well-known A* algorithm <ref> (Hart, Nilsson, and Rafael 1968) </ref>, which runs in space that is linear in the maximum search depth, rather than exponential. IDA* proceeds in a series of depth-first search iterations, starting from the initial state.
Reference: <author> Korf, R.E., </author> <title> Depth-first iterative-deepening: An optimal admissible tree search, </title> <journal> Artificial Intelligence, </journal> <volume> Vol. 27, No. 1, </volume> <year> 1985, </year> <pages> pp. 97-109. </pages>
Reference-contexts: Due to its small search space, optimal solutions to the Eight Puzzle can be found with breadth-first search. We first found optimal solutions to the Fifteen Puzzle using Iterative-Deepening-A* (IDA*) and the Manhattan distance heuristic function <ref> (Korf 1985) </ref>. IDA* is a variant of the well-known A* algorithm (Hart, Nilsson, and Rafael 1968), which runs in space that is linear in the maximum search depth, rather than exponential. IDA* proceeds in a series of depth-first search iterations, starting from the initial state. <p> Given such an admissible heuristic function, IDA* is guaranteed to return an optimal solution, if one exists. IDA* with the Manhattan distance heuristic can solve random instances of the Fifteen Puzzle <ref> (Korf 1985) </ref>. In spite of considerable work on this problem in the last decade, however, nobody has solved a significantly larger version of the puzzle. Note that the state space of the Twenty-Four Puzzle is almost a trillion times larger than that of the Fifteen Puzzle.
Reference: <author> Manzini, G., BIDA*: </author> <title> An improved perimeter search algorithm, </title> <journal> Artificial Intelligence, </journal> <volume> Vol. 75, No. 2, </volume> <month> June </month> <year> 1995, </year> <pages> pp. 347-360. </pages>
Reference-contexts: Relation to Bidirectional Search The reader may notice that a heuristic based on the last moves in the solution is related to bi-directional search. The most effective form of bidirectional heuristic search is called perimeter search (Dillenburg and Nelson 1994) <ref> (Manzini 1995) </ref>. A limited breadth-first search backward from the goal state is performed, and the nodes on the perimeter of this search are stored. IDA* is then run from the initial state, with heuristic calculations made to determine the minimum distance to any state on the perimeter. <p> As a result, the heuristic calculation can be optimized to take advantage of this. With any form of bidirectional search, however, the heuristic must be calculated between arbitrary pairs of states, reducing the opportunities for optimization. While <ref> (Manzini 1995) </ref> reports speedups of up to a factor of eight on the Fifteen Puzzle using his improved perimeter search, he uses only the Manhattan distance heuristic function. It's not clear if similar results could be achieved with a more complex heuristic such as linear conflict.
Reference: <author> Papadimitriou, C.H., and K. Steiglitz, </author> <title> Combinatorial Optimization: Algorithms and Complexity, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, N.J., </address> <year> 1982. </year>
Reference-contexts: This problem is called the maximum weighted matching problem, and can be solved in O (n 3 ) time, where n is the number of nodes <ref> (Papadimitriou and Steiglitz 1982) </ref>. Thus, this approach to heuristic generation can be automated, and runs in polynomial time. Higher-Order Heuristics Unfortunately, the pairwise distances do not account for the full power of the heuristic enhancements described above.
Reference: <author> Pearl, J. </author> <title> Heuristics, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1984. </year>
Reference-contexts: The classic theory of admissible heuristic functions is that they are the costs of optimal solutions to simplified problems, derived by removing constraints from the original problem <ref> (Pearl 1984) </ref>. For example, if we remove the condition that a tile can only be moved into the blank position, the resulting problem allows any tile to move to any adjacent position at any time, and allows multiple tiles to occupy the same position.
Reference: <author> Taylor, L., and R.E. Korf, </author> <title> Pruning duplicate nodes in depth-first search, </title> <booktitle> Proceedings of the National Conference on Artificial Intelligence (AAAI-93), </booktitle> <address> Wash-ington D.C., </address> <month> July </month> <year> 1993, </year> <pages> pp. 756-761. </pages>
Reference-contexts: The first is simply faster computers. The Sun Ultra Sparc workstation that these experiments were run on is about 70 times faster than the DEC 2060 that the Fifteen Puzzle was originally solved on. The second is a technique we developed for pruning duplicate nodes in depth-first search <ref> (Taylor and Korf 1993) </ref>. Finally, we have discovered more powerful heuristic functions for this problem. The most important contribution of this paper, however, is a new theory that allows these heuristics to be automatically learned and applied. <p> This reduces the complexity of the depth-first search from O (4 d ) to O (3 d ), a significant reduction, but still far from the O (d 2 ) complexity of the breadth-first search. This idea can be carried further, and is described in detail in <ref> (Taylor and Korf 1993) </ref>. Ideally, we would like to allow only one path to each node in the grid. This can be done by first making all Left or Right moves, if any, followed by a single turn, and then all Up moves or all Down moves, if any.
References-found: 8

