URL: http://www-cad.eecs.berkeley.edu/HomePages/krishnan/cad_seminar/fall96/borrione_jetta_May96.ps
Refering-URL: http://www-cad.eecs.berkeley.edu/HomePages/krishnan/cad_seminar/fall96/fall96.html
Root-URL: http://www.cs.berkeley.edu
Title: A Method for Automatic Design Error Location and Correction in Combinational Logic Circuits  
Author: AYMAN M. WAHBA AND DOMINIQUE BORRIONE 
Keyword: design correctness, design debugging, design error diagnosis  
Address: BP 53X, 38041 Grenoble Cedex FRANCE  
Affiliation: Modelisation et Preuves de Circuits, TIMA Laboratory,  
Note: 1-16 c Kluwer Academic Publishers, Boston. Manufactured in The Netherlands.  
Email: Ayman.Wahba@imag.fr, Dominique.Borrione@imag.fr  
Date: Received Revised  
Abstract: We present a new diagnostic algorithm, based on backward-propagation, for localising design errors in combinational logic circuits. Three hypotheses are considered, that cover all single gate replacement and insertion errors. Diagnosis-oriented test patterns are generated in order to rapidly reduce the suspected area where the error lies. The originality of our method is the use of patterns which do not detect the error, in addition to detecting patterns. A theorem shows that, in favourable cases, only two patterns suffice to get a correction. We have implemented the test generation and diagnosis algorithms. Results obtained on benchmarks show that the error is always found, after the application of a small number of test patterns, with an execution time proportional to the circuit size. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> G. Odawara, M. Tomita, O. Okuzawa, T. Ohta, and Z. Zhuang, </author> <title> "A Logic Verifier Based on Boolean Comparison," </title> <booktitle> Proc. 23rd Design Automation Conf., </booktitle> <pages> pp. 208-214, </pages> <year> 1986. </year>
Reference-contexts: While a large literature can be found about the detection of fabrication faults, very little has been published on the diagnosis of design errors. Two methods were presented in <ref> [1] </ref> and [2] to just identify the area in which the error can be found. Madre [3] presented an automated system for the diagnosis and rectification of logic circuits. The results showed its application to two circuits only, a 32-bit adder and an ALU. <p> These patterns are one weakest gate sensitive pattern, GSP, and one weakest non-sensitive pattern, NSP, generated for the erroneous gate L, provided that: 1. Both GSP and NSP generate the same value D at the output of L, where D 2 <ref> [0; 1] </ref>. 2. The primary inputs set to sensitize the path from L to the primary outputs Y are set to the same values under both GSP and NSP. Fig. 9.
Reference: 2. <author> K. A. Tamura, </author> <title> "Locating Functional Errors in Logic Circuits," </title> <booktitle> Proc. 26th Design Automation Conf., </booktitle> <pages> pp. 185-191, </pages> <year> 1989. </year> <month> 16 </month> ?? 
Reference-contexts: While a large literature can be found about the detection of fabrication faults, very little has been published on the diagnosis of design errors. Two methods were presented in [1] and <ref> [2] </ref> to just identify the area in which the error can be found. Madre [3] presented an automated system for the diagnosis and rectification of logic circuits. The results showed its application to two circuits only, a 32-bit adder and an ALU.
Reference: 3. <author> J. C. Madre, O. Coudert, and J. P. Billon, </author> <title> "Automating the Diagnosis and the Rectification of Design Errors with PRIAM," </title> <booktitle> Proc. ICCAD'89, </booktitle> <pages> pp. 30-33, </pages> <year> 1989. </year>
Reference-contexts: While a large literature can be found about the detection of fabrication faults, very little has been published on the diagnosis of design errors. Two methods were presented in [1] and [2] to just identify the area in which the error can be found. Madre <ref> [3] </ref> presented an automated system for the diagnosis and rectification of logic circuits. The results showed its application to two circuits only, a 32-bit adder and an ALU. In the two cases several error candidates were found but not a unique one. Another technique was presented in [4].
Reference: 4. <author> M. Tomita, and H. H. Jiang, </author> <title> "An Algorithm for Locating Logic Design Errors," </title> <booktitle> Proc. ICCAD'90, </booktitle> <pages> pp. 468-471, </pages> <year> 1990. </year>
Reference-contexts: Madre [3] presented an automated system for the diagnosis and rectification of logic circuits. The results showed its application to two circuits only, a 32-bit adder and an ALU. In the two cases several error candidates were found but not a unique one. Another technique was presented in <ref> [4] </ref>. Starting from incompatible test patterns, other patterns called IPLDE (Input Patterns for Locating Design Errors) are generated. These patterns were used to reason about the incompatibility. The practical results showed that the number of error candidates presented by this method is large even for small circuits. <p> It should be noted that all errors have been found, and that in almost all of the cases only one error candidate has been proposed (last column). The number of test patterns applied before finding the error is small compared with other methods. In <ref> [4] </ref> for example, the number of patterns used ranges from 64 to 256, while we use only from 2 to 18 patterns. This number is almost circuit-size independent. The execution time grows almost linearly with the number of gates.
Reference: 5. <author> M. Tomita, T. Yamamoto, F. Sumikawa, and K. Hi-rano, </author> <title> "Rectification of Multiple Logic Design Errors in Multiple Output Circuits," </title> <booktitle> Proc. 31st Design Automation Conf., </booktitle> <pages> pp. 212-217, </pages> <year> 1994. </year>
Reference-contexts: These patterns were used to reason about the incompatibility. The practical results showed that the number of error candidates presented by this method is large even for small circuits. This later technique was modified to be applied for multiple errors in <ref> [5] </ref>. It succeeded in finding the errors with a hit ratio ranging from 61.3% up to 100% in the case of two errors, and from 50.9% to 100% for three errors. Methods based on the use of binary decision diagrams (BDD's) were also presented in [6] and [7].
Reference: 6. <author> P. Y. Chung, Y. M. Wang, and I. N. Hajj, </author> <title> "Diagnosis and Correction of Logic Design Errors in Digital Circuits," </title> <booktitle> Proc. 30th Design Automation Conf., </booktitle> <pages> pp. 503-508, </pages> <year> 1993. </year>
Reference-contexts: It succeeded in finding the errors with a hit ratio ranging from 61.3% up to 100% in the case of two errors, and from 50.9% to 100% for three errors. Methods based on the use of binary decision diagrams (BDD's) were also presented in <ref> [6] </ref> and [7]. A basic limitation of these methods is that some circuits, such as integer multipliers, are known to have exponential BDD representations [9]. The technique presented in this paper assumes the existence of a single gate error in the cone of influence of each output.
Reference: 7. <author> Q. Zhang, and C. Trullemans, </author> <title> "Logic Verification of Incomplete Functions and Design Error Location," Proc. Correct Hardware Design and Verification Methods, </title> <booktitle> CHARME'93, Lecture Notes in Computer Science No. </booktitle> <volume> 683, </volume> <pages> pp. 68-79, </pages> <publisher> Springer Verlag, </publisher> <month> May </month> <year> 1993. </year>
Reference-contexts: It succeeded in finding the errors with a hit ratio ranging from 61.3% up to 100% in the case of two errors, and from 50.9% to 100% for three errors. Methods based on the use of binary decision diagrams (BDD's) were also presented in [6] and <ref> [7] </ref>. A basic limitation of these methods is that some circuits, such as integer multipliers, are known to have exponential BDD representations [9]. The technique presented in this paper assumes the existence of a single gate error in the cone of influence of each output.
Reference: 8. <author> F. Brglez, and H. Fujiwara, </author> <title> "A neutral netlist of 10 combinatorial benchmark circuits and a target translator in FORTRAN," </title> <booktitle> in Proc. IEEE Int. Symp. Circuits and Systems, </booktitle> <pages> pp. 663-698, </pages> <month> June </month> <year> 1985. </year>
Reference-contexts: These patterns will be Gate-Sensitive Patterns for the gates for which they are generated. Fig. 8. The circuit c17 of the ISCAS'85 benchmarks <ref> [8] </ref> Example: In this example we present the GSP's and the NSP's for each of the gates of the circuit shown in * Error hypothesis HYP-1: The generated pat terns are shown in Table 5. * Error hypothesis HYP-2: There is no need to generate new patterns: it suffices to switch
Reference: 9. <author> R. E. Bryant, </author> <title> "On the complexity of VLSI implementations and graph representations of Boolean functions with application to integer multiplication," </title> <journal> IEEE Trans. on Computers, </journal> <volume> Vol. 40, N0. 2, </volume> <pages> pp. 205-213, </pages> <month> Feb. </month> <year> 1991. </year>
Reference-contexts: Methods based on the use of binary decision diagrams (BDD's) were also presented in [6] and [7]. A basic limitation of these methods is that some circuits, such as integer multipliers, are known to have exponential BDD representations <ref> [9] </ref>. The technique presented in this paper assumes the existence of a single gate error in the cone of influence of each output. It is based on the close cooperation of three modules: a 3-valued pattern generator, a simulator, and a diagnoser.
Reference: 10. <author> A. Wahba, and E. Aas, </author> <title> "Verification and Diagnosis of Digital Systems by Ternary Reasoning," Proc. Correct Hardware Design and Verification Methods, </title> <booktitle> CHARME'93, Lecture Notes in Computer Science No. </booktitle> <volume> 683, </volume> <pages> pp. 55-67, </pages> <publisher> Springer Verlag, </publisher> <month> May </month> <year> 1993. </year>
Reference-contexts: Error Hypotheses: Our diagnosis methodology is based on error hypotheses: an error type is assumed and the diagnosis is then made according to this assumption. If the error is not found, another type is assumed, and so on <ref> [10] </ref>. The diagnosis algorithm is valid under the following three assumptions: 1. The circuit is combinational. 2. Only one error exists in the circuit. 3.
Reference: 11. <author> M. S. Abadir, J. Ferbuson, and T. E. Kirkland, </author> <title> "Logic Design Verification via Test Generation," </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> Vol. 7, No. 1, </volume> <pages> pp. 138-148, </pages> <month> January </month> <year> 1988. </year>
Reference-contexts: The diagnosis algorithm thus replaces any XOR/XNOR gate by its representation as shown in Figure 3, and the diagnosis is performed using only the above mentioned error hypotheses. Fig. 3. Representation of a XOR gate These three error hypotheses can also model the simple extra-gate errors defined in <ref> [11] </ref>. Fig 4 ?? ure 4 shows an example where the replacement of the extra OR gate, in the wrong circuit, by an AND gate results in a circuit equivalent to the correct one.
Reference: 12. <author> E. J. Aas, K. A. Klingsheim, and T. Steen, </author> <title> "Quantifying Design Quality: A Model and Design Experiments," </title> <booktitle> Proc. </booktitle> <address> EURO-ASIC'92, </address> <publisher> IEEE Computer Society Press, </publisher> <pages> pp. 172-177, </pages> <year> 1992. </year>
Reference-contexts: Fig 4 ?? ure 4 shows an example where the replacement of the extra OR gate, in the wrong circuit, by an AND gate results in a circuit equivalent to the correct one. According to the statistical study presented in <ref> [12] </ref> it was found that the inverter errors happen more frequently than the gate replacement errors, and thus HYP-0 will always be considered before HYP-1 and HYP-2. Fig. 4. Equivalence between simple extra-gate errors, and wrong gate type errors Definition 2.5: Suspected and Correct gate sets.
Reference: 13. <author> J. P. Roth, W. G. Bouricius, and P. R. Schneider, </author> <title> "Programmed Algorithms to Compute Tests to Detect and Distinguish Between Failures in Logic Circuits," </title> <journal> IEEE Transactions on Electronic Computers, </journal> <volume> Vol. EC-16, No. 5, </volume> <pages> pp. 567-580, </pages> <month> October </month> <year> 1967. </year>
Reference-contexts: This erroneous value is then propagated until it reaches at least one of the circuit primary outputs. The necessary conditions required to propagate this erroneous value, and to set the inputs of the gate to their desired values, can be found using any one of the techniques presented in <ref> [13] </ref>, [14], [15], [16]. This will fix the value of some of the primary inputs. The other inputs have no influence and are set to 0 X 0 . The following two propositions are used to determine the values to which the inputs of the considered gate are set.
Reference: 14. <author> P. Goel, </author> <title> "An Implicit Enumeration Algorithm to Generate Tests for Combinational Logic Circuits," </title> <journal> IEEE Trans. on Computers, </journal> <volume> Vol. C-30, No. 3, </volume> <pages> pp. 215-222, </pages> <month> March </month> <year> 1981. </year>
Reference-contexts: The necessary conditions required to propagate this erroneous value, and to set the inputs of the gate to their desired values, can be found using any one of the techniques presented in [13], <ref> [14] </ref>, [15], [16]. This will fix the value of some of the primary inputs. The other inputs have no influence and are set to 0 X 0 . The following two propositions are used to determine the values to which the inputs of the considered gate are set.
Reference: 15. <author> H. Fujiwara and T. Shimono, </author> <title> "On the acceleration of test generation algorithms," </title> <journal> IEEE Trans. on Computers, </journal> <volume> Vol. C-32, </volume> <pages> pp. 1137-1144, </pages> <month> Dec. </month> <year> 1983. </year>
Reference-contexts: The necessary conditions required to propagate this erroneous value, and to set the inputs of the gate to their desired values, can be found using any one of the techniques presented in [13], [14], <ref> [15] </ref>, [16]. This will fix the value of some of the primary inputs. The other inputs have no influence and are set to 0 X 0 . The following two propositions are used to determine the values to which the inputs of the considered gate are set.
Reference: 16. <author> T. Kirkland and M. R. Mercer, </author> <title> "A topological search algorithm for ATPG," </title> <booktitle> Proc. 24th ACM/IEEE Design Automation Conf., </booktitle> <pages> pp. 502-508, </pages> <month> June </month> <year> 1987. </year>
Reference-contexts: The necessary conditions required to propagate this erroneous value, and to set the inputs of the gate to their desired values, can be found using any one of the techniques presented in [13], [14], [15], <ref> [16] </ref>. This will fix the value of some of the primary inputs. The other inputs have no influence and are set to 0 X 0 . The following two propositions are used to determine the values to which the inputs of the considered gate are set.
Reference: 17. <author> R. E. Bryant, </author> <title> "A Methodology for Hardware Verification Based on Logic Simulation," </title> <journal> Journal of the ACM, </journal> <volume> Vol. 38, N0. 2, </volume> <pages> pp. 299-328, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: The concept of the force/weakness of test patterns based upon their information content was first presented in <ref> [17] </ref>. 5. The Diagnostic Routine Theorem 1 shows the power of the test pattern pairs generated by the method explained in the previous section, when combined with the Diagnosis by Backward-Propagation. The theorem is presented first for tree-structured circuits, and then it is generalized.
Reference: 18. <author> A. Wahba, and D. Borrione, </author> <title> "Design Error Diagnosis in Sequential Circuits," Proc. Correct Hardware Design and Verification Methods, </title> <booktitle> CHARME'95, Lecture Notes in Computer Science No. </booktitle> <volume> 987, </volume> <pages> pp. 171-188, </pages> <publisher> Springer Verlag, </publisher> <month> Oct. </month> <year> 1995. </year>
Reference-contexts: Assuming that the error lies in the combinational part, the principle of using pattern pairs is extended to sequences of pattern pairs. Under the same hypotheses the error is also always found, but the CPU times are much larger <ref> [18] </ref>. Much remains to be done in sequential circuits diagnosis, and directions for optimization are being studied.
Reference: 19. <author> D. Borrione, L. Pierre, and A. Salem, </author> <title> "Formal Verification of VHDL Descriptions in the Prevail environment," </title> <journal> IEEE Design & Test of Computers, </journal> <volume> Vol. 9, </volume> <pages> No.2, pp. 42-56, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: Finally, we believe that automatic diagnosis is a necessary complement to automatic equivalence-proof tools, and should be integrated in a common design verification framework, taking as input designs written in conventional hardware description languages. Our prototype diagnosis system is now a part of the PREVAIL T M environment <ref> [19] </ref> and is being tested on industrial applications. Acknowledgements The authors are grateful to Prof. Einar Aas for many useful discussions and friendly cooperation. They would like to thank Prof. Bruce Cockburn and three anonymous reviewers for useful comments on a previous version of this paper.

References-found: 19

